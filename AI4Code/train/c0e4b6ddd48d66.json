{"cell_type":{"847a7742":"code","13fcb33d":"code","b1e11972":"code","6d27900e":"code","7fec1b18":"code","d337b449":"code","28bd3710":"code","6fe033e1":"code","5186bec4":"code","41f5dacf":"code","37820abb":"code","35dfe8ba":"code","eb1fcf93":"code","dbd20ba7":"code","99159c15":"code","a4d28f40":"code","dab41027":"code","6593562d":"code","1ed98364":"code","9679e712":"code","56337a91":"code","aefd3859":"code","a11a309d":"code","4e03b230":"code","09aa001d":"code","84d03a42":"code","387133a5":"code","11a24b79":"code","5b741bba":"code","2331c9ab":"code","ac3cf111":"code","461f1ea9":"code","ade4bada":"code","8531422e":"code","b718861c":"code","7249fb63":"code","f9335321":"code","d60ba5be":"code","f929f38e":"code","d3eff248":"code","1b4779ce":"code","5ceab1cc":"code","5db2d1f6":"code","05c982fd":"code","7b9921f9":"code","15ef1252":"code","eba4fe79":"code","f0f2f020":"code","f0949ea8":"code","564b1e95":"code","3a767b7f":"code","05582301":"code","f71c4493":"code","d94643ba":"code","73fa77a2":"code","b7c67412":"code","b6a099cb":"code","b59dcde0":"code","266f5e19":"code","1a88c579":"code","2332be70":"code","08654e59":"code","c546d724":"code","ac65d992":"code","6865c7ca":"code","48c472ed":"code","d2351918":"code","f407a578":"code","7502bc31":"markdown","48339df9":"markdown","79750c86":"markdown","b012ef3b":"markdown","0191a428":"markdown","b3b677e9":"markdown","e8b8e275":"markdown","aa6ec38d":"markdown","6da5ed76":"markdown","59bc3f43":"markdown","d5323496":"markdown","c02c0b1e":"markdown","347c578f":"markdown","09ed77d2":"markdown","064c431c":"markdown","76fa98a2":"markdown","8a011596":"markdown","a334cafa":"markdown","53903b5a":"markdown","be5b81e8":"markdown","08041127":"markdown","1c8d1dc8":"markdown","37f3e8c2":"markdown","b11aa51c":"markdown","1f1d9f48":"markdown","9dea8c07":"markdown","47fe3ce6":"markdown","2976e156":"markdown","ef4822ce":"markdown","2f4bdd64":"markdown","56bd2a8d":"markdown","79957e15":"markdown","8a64384f":"markdown","99248ea7":"markdown","a7ad5ab4":"markdown"},"source":{"847a7742":"# importing libraries\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport datetime\nimport matplotlib.dates","13fcb33d":"# reading file\n\nfile_path=\"..\/input\/anz-synthesised-transaction-dataset\/anz.csv\"\ndf=pd.read_csv(file_path)\ndf.head()","b1e11972":"# shape of the dataframe\n\ndf.shape","6d27900e":"# info of the dataframe\n\ndf.info()","7fec1b18":"# total null values\n\ndf.isnull().sum() #or df.isna().sum() ","d337b449":"# classifying NA as categorical or numerical \n\nNA=df[['card_present_flag','bpay_biller_code','merchant_id','merchant_code','merchant_suburb','merchant_state','merchant_long_lat']]\nNAcat=NA.select_dtypes(include='object')\nNAnum=NA.select_dtypes(exclude='object')\nprint(NAcat.shape[1],'categorical features with missing values')\nprint(NAnum.shape[1],'numerical features with missing values')","28bd3710":"# visulaizing missing values percentage\n\nplt.figure(figsize=(10,5))\nallna = (df.isnull().sum() \/ len(df))*100\nallna = allna.drop(allna[allna == 0].index).sort_values()\nallna.plot.barh(color=('red', 'black'), edgecolor='black')\nplt.title('Missing values percentage per column',bbox={'facecolor':'0.9', 'pad':5})\nplt.xlabel('Percentage', fontsize=15)\nplt.ylabel('Features with missing values',fontsize=15)\nplt.yticks(weight='bold')\nplt.show()","6fe033e1":"# removing columns\n\ndf.drop(['bpay_biller_code','merchant_code'],axis=1,inplace=True)","5186bec4":"df.info()","41f5dacf":"# vectorizing categorical values \n\n# 'status'\ndf.status = pd.Categorical(df.status)\ndf['cat_status']=df.status.cat.codes\n\n# 'txn_description'\ndf.txn_description = pd.Categorical(df.txn_description)\n#td_cat=df.txn_description.astype('category').cat.codes\ndf['cat_txn_description']=df.txn_description.cat.codes\n\n# 'merchant_state'\ndf.merchant_state = pd.Categorical(df.merchant_state)\ndf['cat_merchant_state']=df.merchant_state.cat.codes","37820abb":"# correlation between some features\n\ncor_mat = df[['card_present_flag' , 'amount' , 'balance' ,'age','cat_status','cat_txn_description','cat_merchant_state']].corr()\ncor_mat","35dfe8ba":"# visualizing the correlation heatmap \n\nplt.figure(figsize=(8,8))\n# Custom cmap pallete\ncmap = sns.diverging_palette(220 , 10 , as_cmap=True)\n\n# Building heatmap\nsns.heatmap(cor_mat ,vmax=.3 , center=0 , cmap=cmap , square=True , linewidths=.5 , cbar_kws={'shrink': .5})\nplt.title(\"Correlation between features\",bbox={'facecolor':'0.9', 'pad':5})","eb1fcf93":"# average of some numerical data\n\ndf.mean()","dbd20ba7":"#Colors for the bar of the graph\n\nmy_colors = ['r','b','k','y','m','c','#16A085','salmon' , '#32e0c4']","99159c15":"# visualize transaction trend\n\ntt=df.groupby(['date'])\nttc=tt.date.count()\n\nplt.figure(figsize=(20,8))\nsns.lineplot(data=ttc)\nplt.title(\"Transaction trend\",bbox={'facecolor':'0.9', 'pad':5})\nplt.xlabel(\"Date\")\nplt.ylabel(\"Number of transactions\")","a4d28f40":"# average number of transactions per day\n\nttc.mean()","dab41027":"# converting the date column to pandas Timestap\n\ndf['date'] = pd.to_datetime(df['date'])","6593562d":"# extracting day name \n\ndf['day_name'] = df['date'].dt.day_name()\ndf['day_name'].head()","1ed98364":"# extracting month name\n\ndf['month_name'] = df['date'].dt.month_name()\ndf['month_name'].head()","9679e712":"# months generated\n\ndf['month_name'].value_counts()","56337a91":"# visualize month wise transaction count\n\nplt.figure(figsize=(15,5))\nplt.title(\"Month wise transaction count\",bbox={'facecolor':'0.9', 'pad':5})\nsns.countplot(x='month_name' , data=df)\nplt.ylabel(\"Count\",fontsize=15)\nplt.xlabel(\"Month\",fontsize=15)","aefd3859":"# visualize percentage of contribution from each month\n\npie_color = ['orange' , 'salmon', 'lightblue']\nfig,ax = plt.subplots(figsize=(10,10)) # (height,width)\n\ndf['month_name'].value_counts(sort=True).plot.pie(labeldistance=0.2 ,\n                                         colors=pie_color,\n                                        autopct='%.2f', shadow=True, startangle=140,pctdistance=0.8 , radius=1)\nplt.title(\"Percentage of contribution from each months\", bbox={'facecolor':'0.8', 'pad':5})","a11a309d":"# month wise transaction amount\n\nmonth_amount=df.groupby(['month_name']).amount.agg([sum])\nma=month_amount.sort_values(by='sum',ascending=False)\nma","4e03b230":"# visualize month wise transaction amount\n\nplt.figure(figsize = (10,5))\ndf.groupby('month_name').amount.sum().plot(kind='bar')\nplt.title(\"Month wise transaction amount\",bbox={'facecolor':'0.9', 'pad':5})\nplt.ylabel(\"Amount\",fontsize=15)\nplt.xlabel(\"Month\",fontsize=15)","09aa001d":"# visualize average transaction amount each month\n\nmonth_grp = df.groupby(['month_name'])\navg_amt_tran_month = month_grp['amount'].mean()\n\nfig,ax = plt.subplots(figsize=(10,5)) # (height,width)\nprint(avg_amt_tran_month);\navg_amt_tran_month.plot.barh(color=my_colors)\nax.set(xlabel=\"Average amount\",\n      ylabel=\"Month\")\nplt.title('Average transaction amount each month',bbox={'facecolor':'0.9', 'pad':5})","84d03a42":"oct_amt_tran_month = month_grp['amount'].value_counts().loc['October']\noct_amt_tran_month","387133a5":"oct_date = month_grp['date'].value_counts().loc['October']","11a24b79":"# amount transacted in October month\n\nfilt = (df['month_name'] == 'October')\ndf.loc[filt , 'amount']","5b741bba":"# average amount in october month\n\ndf.loc[filt , 'amount'].mean()","2331c9ab":"# maximum value transacted in October month \n\ndf.loc[filt , 'amount'].max()","ac3cf111":"# minimum value transacted in October month \n\ndf.loc[filt , 'amount'].min()","461f1ea9":"# gender wise transaction count\n\ngencg=df.groupby('gender').gender.count()\ngencs=gencg.sort_values(ascending=False)\ngencs","ade4bada":"\n# visualize gender wise transaction count\n\nplt.figure(figsize = (10,5))\nax = sns.countplot(x = 'gender', data = df, palette = 'pastel')\nax.set_title(label = 'Gender wise transaction count',bbox={'facecolor':'0.9', 'pad':5})\nax.set_ylabel(ylabel = 'Count', fontsize = 16)\nax.set_xlabel(xlabel = 'Gender', fontsize = 16)\nplt.legend()","8531422e":"# visualize percentage of contribution from each gender \n\nplt.figure(figsize=(5,5))\ndf['gender'].value_counts(normalize=True).plot.pie(autopct='%.2f',labels=['Male',\n                                                                         'Female'], labeldistance=0.5 ,\n                                                   shadow=True, startangle=140,pctdistance=0.2 , radius=1)\nplt.title('Percentage of contribution from gender' , bbox={'facecolor':'0.8', 'pad':5})","b718861c":"# gender wise transaction amount\n\ngenag=df.groupby(['gender']).amount.agg([sum])\ngenag","7249fb63":"# average transaction amount by gender \n\ngender_grp = df.groupby(['gender'])\ngen_trans_amt = gender_grp['amount'].mean()\ngen_trans_amt","f9335321":"# total transaction amount by gender \n\ngender_total = df.groupby(['gender'])\ngen_total_amt = gender_grp['amount'].sum()\ngen_total_amt","d60ba5be":"# visualize gender wise transaction amount\n\nfig,ax = plt.subplots(figsize=(10,5))\ngen_total_amt.plot.barh(color=my_colors)\nplt.title(\"Gender wise transaction amount\",bbox={'facecolor':'0.9', 'pad':5})\nplt.ylabel(\"Gender\",fontsize=15)\nplt.xlabel(\"Amount\",fontsize=15)","f929f38e":"# visualize average amount transacted by gender\n\nfig,ax = plt.subplots(figsize=(10,5))\ngen_trans_amt.plot.barh(color=my_colors)\nplt.title(\"Average amount of transactions by gender\",bbox={'facecolor':'0.9', 'pad':5})\nplt.ylabel(\"Gender\",fontsize=15)\nplt.xlabel(\"Amount\",fontsize=15)","d3eff248":"# visualize month with highest number of transaction based on gender\n\nplt.figure(figsize=(20,6))\nsns.countplot(x='month_name' ,hue='gender', data=df)\nplt.title('Month with highest number of transaction based on gender',bbox={'facecolor':'0.9', 'pad':5})\nplt.xlabel(\"Month\",fontsize=15)\nplt.ylabel(\"Count\",fontsize=15)","1b4779ce":"# visualize day wise transaction count\n\nplt.figure(figsize=(10,5))\nsns.countplot(x='day_name' , data=df)\nplt.title(\"Day wise transaction count\",bbox={'facecolor':'0.9', 'pad':5})\nplt.ylabel(\"Count\",fontsize=15)\nplt.xlabel(\"Day\",fontsize=15)","5ceab1cc":"# average amount transacted on particular Day : Monday\n\nday_name_grp = df.groupby(['day_name'])\nday_name_grp['amount'].mean().loc['Monday']","5db2d1f6":"# visualize day wise gender transaction count\n\nplt.figure(figsize=(15,7))\nax = sns.countplot(x=\"day_name\", hue=\"gender\", data=df) # for Seaborn version 0.7 and more\ntotal = float(len(df))\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:.2%}'.format(height\/total),\n            ha=\"center\") \nplt.ylabel(\"Count\",fontsize=15)\nplt.xlabel(\"Day\",fontsize=15)\nplt.title('Number of transaction made on each day of a week with gender comparison',bbox={'facecolor':'0.9', 'pad':5})\nplt.show()","05c982fd":"# visualize distribution of age\n\nplt.figure(figsize=(15,5))\nsns.distplot(df['age']);\nplt.title('Distribution of age',bbox={'facecolor':'0.9', 'pad':5})\nplt.xlabel('Age',fontsize=15)","7b9921f9":"# visualize age with balance\n\nplt.figure(figsize=(15,5))\nsns.lineplot(x='age' , y='balance' , data=df)\nplt.title('Age and balance',bbox={'facecolor':'0.9', 'pad':5})\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Balance',fontsize=15)","15ef1252":"# visualize age with amount\n\nplt.figure(figsize=(15,5))\nsns.lineplot(x='age' , y='amount' , data=df)\nplt.title('Age and amount',bbox={'facecolor':'0.9', 'pad':5})\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Amount',fontsize=15)","eba4fe79":"# age wise transaction count\n\nagecg=df.groupby('age').age.count()\n#agecs=agecg.sort_values(ascending=False)\nagecg","f0f2f020":"# visualize age wise transaction count\n\nplt.figure(figsize = (10, 5))\nax = sns.countplot(x = 'age', data = df, palette = 'pastel')\nax.set_title(label = 'Age wise transaction count',bbox={'facecolor':'0.9', 'pad':5})\nax.set_ylabel(ylabel = 'Count', fontsize = 15)\nax.set_xlabel(xlabel = 'Age', fontsize = 15)\nplt.show()","f0949ea8":"# age wise transaction amount\n\nageag=df.groupby(['age']).amount.agg([sum])\nageag","564b1e95":"# visualize age wise transaction amount\n\nplt.figure(figsize = (10,5))\ndf.groupby('age').amount.sum().plot(kind='bar')\nplt.title(\"Age wise transaction amount\",bbox={'facecolor':'0.9', 'pad':5})\nplt.ylabel(\"Total amount\",fontsize=15)\nplt.xlabel(\"Age\",fontsize=15)","3a767b7f":"# visualize type of transaction\n\nprint(df['txn_description'].value_counts())\nsns.set(style=\"darkgrid\")\nplt.figure(figsize=(10,5))\nax = sns.countplot(df['txn_description'])\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:.2%}'.format(height\/total),\n            ha=\"center\") \nplt.title('Percentage of type of transaction',bbox={'facecolor':'0.9', 'pad':5})\nplt.ylabel('Number of Transaction',fontsize=15)\nplt.xlabel('Transaction Description',fontsize=15)\nplt.show()","05582301":"# visualize state wise transaction count\n\nprint(df['merchant_state'].value_counts())\nplt.figure(figsize=(10,5))\nsns.countplot(df['merchant_state'])\nplt.title('Number of transaction done on each state',bbox={'facecolor':'0.9', 'pad':5})\nplt.ylabel(\"Count\",fontsize=15)\nplt.xlabel(\"State\",fontsize=15)\nplt.show()","f71c4493":"# group using merchant_state \n\nmer_state_grp = df.groupby(['merchant_state'])","d94643ba":"# visualize number of transaction in merchant state by gender\n\nprint(mer_state_grp['gender'].value_counts(normalize=True))\ngen_mer_state = mer_state_grp['gender'].value_counts()\nfig,ax = plt.subplots(figsize=(15,5))\ngen_mer_state.plot.barh()\nax.set(xlabel=\"Number of transaction\",\n      ylabel=\"State and Gender\")\nplt.title('Number of transaction in a state',bbox={'facecolor':'0.9', 'pad':5})","73fa77a2":"# maximum,minimum and average amount transacted in each merchant state\n\nagg_amt_state = mer_state_grp['amount'].agg(['min' , 'mean' , 'max'])\nagg_amt_state","b7c67412":"# visualize minimum amount transacted in each state\n\nfig,ax = plt.subplots(figsize=(15,5)) # (height,width)\nprint(agg_amt_state['min'])\nagg_amt_state['min'].plot.barh(color=my_colors)\nax.set(xlabel=\"Number of transaction\",\n      ylabel=\"State\")\nplt.title('Minimum Number of transaction in a state',bbox={'facecolor':'0.9', 'pad':5})","b6a099cb":"# visualize maximum amount transacted in each state\n\nfig,ax = plt.subplots(figsize=(15,5)) # (height,width)\nprint(agg_amt_state['max'])\nagg_amt_state['max'].plot.barh(color=my_colors)\nax.set(xlabel=\"Amount\",\n      ylabel=\"State\")\nplt.title('Maximum amount transacted in each state',bbox={'facecolor':'0.9', 'pad':5})","b59dcde0":"# visualize movement type\n\nplt.figure(figsize=(10,5))\nprint(df['movement'].value_counts())\nsns.countplot(df['movement'])\nax.set(xlabel=\"Movement\",\n      ylabel=\"Count\")\nplt.title('Movement type',bbox={'facecolor':'0.9', 'pad':5})","266f5e19":"# visualize transaction movement by gender\n\nplt.figure(figsize=(10,5))\nax = sns.countplot(df['movement'] , hue=df['gender'])\ntotal = float(len(df))\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:.2%}'.format(height\/total),\n            ha=\"center\") \nplt.title('Transaction movement type by gender',bbox={'facecolor':'0.8', 'pad':5})","1a88c579":"#employee dataframe\n#df_emp = df[~df['txn_description'].isin(['POS','SALES-POS','PAYMENT','INTER BANK','PHONE BANK'])]\n#df_emp.head(10)","2332be70":"# customer dataframe\n\ndf_cus = df[~df['txn_description'].isin(['PAY\/SALARY'])]\ndf_cus.head()","08654e59":"# customers with highest transaction count \n\ntop_customers = df_cus['first_name'].value_counts(sort=True).nlargest(20)\ntop_customers","c546d724":"# visualize top customers\n\nfig,ax = plt.subplots(figsize=(20,6)) # (height,width)\ntop_customers.plot.barh(color=my_colors)\nax.set(xlabel=\"Number of transactions\",\n      ylabel=\"Name\")\nplt.title('Top customers',bbox={'facecolor':'0.9', 'pad':5})","ac65d992":"michael_tran_each_state = mer_state_grp['first_name'].apply(lambda x: x.str.contains('Michael').sum())","6865c7ca":"# visualize transaction count by Michael in each state\n\nfig,ax = plt.subplots(figsize=(20,6))\nprint(michael_tran_each_state);\nmichael_tran_each_state.plot.barh(color=my_colors)\nax.set(xlabel=\"Number of transaction\",\n      ylabel=\"Merchant State\")\nplt.title('Transaction count by an individual customer in each state',bbox={'facecolor':'0.9', 'pad':5})","48c472ed":"# visualize number of transaction by card\n\nplt.figure(figsize=(10,5))\nprint(df['card_present_flag'].value_counts())\nax = sns.countplot(x='card_present_flag' , data=df)\ntotal = float(len(df['card_present_flag']))\nplt.xlabel(\"Card or No-card\")\nplt.ylabel(\"Count\")\nplt.title('Transaction count using physical card \\n'+'0.0-No 1.0-Yes',bbox={'facecolor':'0.9', 'pad':5} )\nplt.show()","d2351918":"# visualize transaction by card \n\nplt.figure(figsize=(10,7))\ndf['card_present_flag'].value_counts(normalize=True).plot.pie(autopct='%.2f',labels=['Card',\n                                                                         'Non-card'], labeldistance=0.5 ,\n                                                   shadow=True, startangle=140,pctdistance=0.2 , radius=1)\nplt.title('Percentage of card payment' , bbox={'facecolor':'0.8', 'pad':5})","f407a578":"# visualize transaction status\n\nplt.figure(figsize=(10,7))\ndf['status'].value_counts(normalize=True).plot.pie(autopct='%.2f',labels=['authorized',\n                                                                         'posted'], labeldistance=0.5 ,\n                                                   shadow=True, startangle=140,pctdistance=0.2 , radius=1)\nplt.title('Percentage of transaction status' , bbox={'facecolor':'0.8', 'pad':5})","7502bc31":"Working on improvement : More types of visualization<br>\nIf you would like to collaborate [connect with me](https:\/\/www.linkedin.com\/in\/ashraf-ul\/)\n<br><br><br>\nNotebook credit : [Ashik Shafi](https:\/\/www.kaggle.com\/ashikshafi)<br>\nDataset used : [ANZ Synthesized Transaction Dataset](https:\/\/www.kaggle.com\/ashraf1997\/anz-synthesised-transaction-dataset)\n","48339df9":">male customers with higher number of transactions","79750c86":"> Friday and wednesday most number of transactions","b012ef3b":"# 5. Type of transaction\n<a class=\"anchor\" id=\"5\"><\/a>[Back to navigation](#100)","0191a428":"inference : In the 3 months of transaction data:<br>\n\n* The average age group of customers who made the transactions are 30 years of age.\n* The average balance a customer have in their account is 14704.195 AUD.\n* The average transaction made by the customer is 187.93 AUD.","b3b677e9":"# 9. Card payment analysis\n<a class=\"anchor\" id=\"9\"><\/a>[Back to navigation](#100)","e8b8e275":"# 8. Customer analysis\n\n<a class=\"anchor\" id=\"8\"><\/a>[Back to navigation](#100)","aa6ec38d":"\n>merchant_code and bpay_biller_code has many null values so either drop or ignore them","6da5ed76":"> male customers does more amount of transaction than female","59bc3f43":"### Content Navigation<a class=\"anchor\" id=\"100\"><\/a>\n1. [Month wise transaction analysis](#1) \n    * Month wise transaction count\n    * Percentage of contribution from each months\n    * Month wise transaction amount\n    * Average transaction amount each month\n2. [Gender wise transaction analysis](#2)\n    * Gender wise transaction count\n    * Percentage of contribution from gender\n    * Gender wise transaction amount\n    * Average amount of transactions by gender\n    * Month with highest number of transaction based on gender\n3. [Day wise transaction analysis](#3)\n    * Day wise transaction count\n    * Number of transaction made on each day of a week with gender comparison\n4. [Age wise transaction analysis](#4)\n    * Distribution of age\n    * Age and balance\n    * Age and amount\n    * Age wise transaction count\n    * Age wise transaction amount\n5. [Type of transaction](#5)\n    * Percentage of type of transaction\n6. [State wise transaction analysis](#6)\n    * Number of transaction done on each state\n    * Number of transaction in a state\n    * Minimum Number of transaction in a state\n    * Maximum amount transacted in each state\n7. [Transaction movement](#7)\n    * Movement type\n    * Transaction movement type by gender\n8. [Customer analysis](#8)\n    * Top customers\n    * Transaction count by an individual customer in each state\n9. [Card payment analysis](#9)\n    * Transaction count using physical card\n    * Percentage of card payment\n10. [Transaction Status](#10)\n    * Percentage of transaction status","d5323496":"# 7. Transaction movement\n<a class=\"anchor\" id=\"7\"><\/a>[Back to navigation](#100)","c02c0b1e":"> Most of the transactione are POS and SALES-POS","347c578f":"# EDA on the dataset of transaction<br>","09ed77d2":"# 3. Day wise transaction analysis\n<a class=\"anchor\" id=\"3\"><\/a>[Back to navigation](#100)","064c431c":"# 1. Month analysis\n<a class=\"anchor\" id=\"1\"><\/a>[Back to navigation](#100)","76fa98a2":"### individual customer analysis : Michael","8a011596":">August, September and October has higher number of transactions","a334cafa":"We can infer that there were large number of Debit transaction made than Credit transaction\n\n* Debit Transaction 11160\n* Credit Transaction 883","53903b5a":">These are the most valued customers","be5b81e8":"Percentage of Male and Female who made Debit and Credit Transaction :<br>\n* Over 48.34% Male and 44.33% Female have made Debit Transaction.\n* Over 3.85% Male and 3.48% Female have made Credit Transaction.\n* To sum up approx 92% people have done debited transaction and 8% done credited transaction","08041127":">Card is used for most of the transactions","1c8d1dc8":">August, September and October has higher amount of transaction","37f3e8c2":">80% of the payment is done using physical card","b11aa51c":"### handling missing values","1f1d9f48":"# 4. Age wise transaction analysis\n<a class=\"anchor\" id=\"4\"><\/a>[Back to navigation](#100)","9dea8c07":"An authorized transaction is a debit or credit card purchase for which the merchant has received approval from the bank that issued the customer's payment card.<br>\nA posted transaction is a debit or credit that has been fully processed. Once a transaction is posted the account balance on the account is also updated.","47fe3ce6":"### checking correlation between some features","2976e156":"### day and month extraction from date column","ef4822ce":"# 10.Transaction status \n<a class=\"anchor\" id=\"10\"><\/a>[Back to navigation](#100)","2f4bdd64":"# 2. Gender wise transaction analysis\n<a class=\"anchor\" id=\"2\"><\/a>[Back to navigation](#100)","56bd2a8d":"Percentage of Male and Female made transaction in the particular merchant state<br>\nBelow are made taking account of Top 5 states in Australia by population<br>\n* At Tasmania 76.4% Male made transaction and 23.5% Female made transaction which shows Male contributed alot to Tasmania.\n\n* At Western Australia Female have made 59.8% of transaction and Male made 40.2% of transaction which shows Female contribution is more in WA.\n\n* At Queensland Female have made 51.14% of transaction and Male made 48.96% of transaction which shows Female contribution is more in QLD.\n\n* At South Australia Female have made 59.03% of transaction and Male made 40.96% of transaction which shows Female contribution is more in SA.\n\n* At New South Wales Male have made 54.82% of transaction and Male made 45.18% of transaction which shows Female contribution is more in NSW.\n\n* At Victoria Male have made 56.92% of transaction and Male made 43.08% of transaction which shows Female contribution is more in Victoria","79957e15":">Most number of transactions taking place in NSW and VLC and least number of transactions in ACT and TAS","8a64384f":">Male has made more transaction count than Female on all three months","99248ea7":"### Transaction Trend","a7ad5ab4":"# 6. State wise transaction analysis\n<a class=\"anchor\" id=\"6\"><\/a>[Back to navigation](#100)"}}