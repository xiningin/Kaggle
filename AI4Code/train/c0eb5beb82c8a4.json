{"cell_type":{"1f10437f":"code","91daade2":"code","48accd83":"code","cb20c783":"code","91f5ec6b":"code","b7939c15":"code","5d602c39":"code","4b2d8dbf":"code","4b8467e6":"code","2a344d12":"code","99bb05fb":"code","81416295":"code","95bebd69":"code","ef41e753":"code","2c6f3df7":"code","e057f27a":"code","39de7061":"code","76cabf58":"code","181acc68":"code","8f8aca67":"code","a5b2eb25":"code","57856155":"code","9f0e02d5":"code","8263dab6":"code","cf946a6f":"code","dd2df650":"code","fea49974":"code","420cc8a0":"code","fce94919":"code","9396f8c9":"markdown","0c01e149":"markdown","13eff34e":"markdown","a6ee0779":"markdown","e910574f":"markdown","9ac1ca47":"markdown","8c8b9a25":"markdown","87e09a24":"markdown","1c7f70d9":"markdown","3eaf0d39":"markdown","c6893259":"markdown","bb346314":"markdown","5dafa58c":"markdown","3af38d6b":"markdown","bac346cb":"markdown"},"source":{"1f10437f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","91daade2":"data = pd.read_csv('..\/input\/heart.csv')","48accd83":"data.info()","cb20c783":"data.head()","91f5ec6b":"plt.figure(figsize=(14,6))\nsns.set_style('whitegrid')\nsns.countplot(x='target',data=data)","b7939c15":"plt.figure(figsize=(14,6))\nsns.set_style('dark')\nsns.countplot(x='target',hue='sex',data=data,palette='RdBu_r')","5d602c39":"plt.figure(figsize=(14,6))\nsns.set_style('dark')\nsns.countplot(x='target',hue='thal',data=data)","4b2d8dbf":"data['age'].plot(kind='hist',bins=30,color='red',figsize= (16,7))","4b8467e6":"X=data.drop(columns=['target'],axis=1)\ny=data['target']","2a344d12":"from sklearn.model_selection import train_test_split","99bb05fb":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2, random_state=101)","81416295":"from sklearn.linear_model import LogisticRegression","95bebd69":"lr_model= LogisticRegression()\nlr_model.fit(X_train,y_train)","ef41e753":"lr_pred=lr_model.predict(X_test)","2c6f3df7":"from sklearn.metrics import classification_report","e057f27a":"print(classification_report(y_test,lr_pred))","39de7061":"from sklearn.svm import SVC","76cabf58":"svc_model = SVC()","181acc68":"svc_model.fit(X_train,y_train)","8f8aca67":"svc_pred = svc_model.predict(X_test)","a5b2eb25":"print(classification_report(y_test,svc_pred))","57856155":"param_grid = {'C': [0.1,1, 10, 100, 1000], 'gamma': [1,0.1,0.01,0.001,0.0001], 'kernel': ['rbf']} ","9f0e02d5":"from sklearn.model_selection import GridSearchCV","8263dab6":"grid = GridSearchCV(SVC(),param_grid,refit=True,verbose=3)","cf946a6f":"# May take awhile!\ngrid.fit(X_train,y_train)","dd2df650":"grid.best_params_","fea49974":"grid.best_estimator_","420cc8a0":"grid_predictions = grid.predict(X_test)","fce94919":"print(classification_report(y_test,grid_predictions))","9396f8c9":"# Classification Heart Disease\n\nWe'll try classification method for heart disease","0c01e149":"**Not so bad!!**","13eff34e":"Woah! Notice that we are classifying everything into a single class! This means our model needs to have it parameters adjusted (it may also help to normalize the data).\n\nWe can search for parameters using a GridSearch!","a6ee0779":"Then you can re-run predictions on this grid object just like you would with a normal model.","e910574f":"# Data Visualization","9ac1ca47":"> 1. age \n> 2. sex \n> 3. chest pain type (4 values) \n> 4. resting blood pressure \n> 5. serum cholestoral in mg\/dl \n> 6. fasting blood sugar > 120 mg\/dl\n> 7. resting electrocardiographic results (values 0,1,2)\n> 8. maximum heart rate achieved \n> 9. exercise induced angina \n> 10. oldpeak = ST depression induced by exercise relative to rest \n> 11. the slope of the peak exercise ST segment \n> 12. number of major vessels (0-3) colored by flourosopy \n> 13. thal: 3 = normal; 6 = fixed defect; 7 = reversable defect","8c8b9a25":"# Logistic Regression","87e09a24":"# Support Vector Classification (SVC)","1c7f70d9":"One of the great things about GridSearchCV is that it is a meta-estimator. It takes an estimator like SVC, and creates a new estimator, that behaves exactly the same - in this case, like a classifier. You should add refit=True and choose verbose to whatever number you want, higher the number, the more verbose (verbose just means the text output describing the process).","3eaf0d39":"### It's better!!","c6893259":"# Gridsearch\n\nFinding the right parameters (like what C or gamma values to use) is a tricky task! But luckily, we can be a little lazy and just try a bunch of combinations and see what works best! This idea of creating a 'grid' of parameters and just trying out all the possible combinations is called a Gridsearch, this method is common enough that Scikit-learn has this functionality built in with GridSearchCV! The CV stands for cross-validation which is the\n\nGridSearchCV takes a dictionary that describes the parameters that should be tried and a model to train. The grid of parameters is defined as a dictionary, where the keys are the parameters and the values are the settings to be tested. ","bb346314":"# Evaluation\n\nWe can check precision,recall,f1-score using classification report!","5dafa58c":"as we can see there is no null data in these columns","3af38d6b":"## Train and test Split","bac346cb":"What fit does is a bit more involved then usual. First, it runs the same loop with cross-validation, to find the best parameter combination. Once it has the best combination, it runs fit again on all data passed to fit (without cross-validation), to built a single new model using the best parameter setting."}}