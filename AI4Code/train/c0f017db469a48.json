{"cell_type":{"0d0fd6b7":"code","018cbf89":"code","91c5352b":"code","a9a7a995":"code","a33748ae":"code","c60063f0":"code","faf7344f":"code","f34fe020":"code","168061d6":"code","7cd13727":"code","b6cb0cca":"code","225f8974":"code","93c9c909":"code","23576e2c":"code","371843d1":"code","ec78cb4e":"code","5a6a24ba":"code","037fb0de":"code","a20ed1ce":"markdown","f36ab4b2":"markdown","3864e490":"markdown","e486cf3b":"markdown","f8c326e6":"markdown","273b83a6":"markdown","c6a1e0d3":"markdown","95d618b7":"markdown","d4ba9498":"markdown","6563db15":"markdown"},"source":{"0d0fd6b7":"import numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns","018cbf89":"df = pd.read_csv('..\/input\/top-video-games-19952021-metacritic\/all_games.csv')\ndf","91c5352b":"df['release_date'] = pd.to_datetime(df['release_date'])\ndf['year'] = df['release_date'].dt.year\ndf['month'] = df['release_date'].dt.month_name()\ndf['month_year'] = df['month'] + ' ' + df['year'].astype('str')\ndf.head()","a9a7a995":"df.info()","a33748ae":"df.drop(columns=['release_date','summary'],inplace=True)\ndf.head()","c60063f0":"sns.set_theme(style=\"darkgrid\")\nsns.countplot(data=df,y='platform',order = df['platform'].value_counts().index)\npopular_platforms = df['platform'].value_counts()[:5].index\npopular_platforms\n# Top 5 platforms are given below","faf7344f":"df['user_review'].unique()","f34fe020":"df['meta_score'].unique()","168061d6":"# Gonna Remove those rows where user review is 'tbd' \/ 'To Be Determined'\ndf.replace('tbd',np.NaN,inplace=True)\ndf = df.dropna()\ndf['user_review'] = df['user_review'].apply(lambda x: int(float(x)*10))\ndf['user_review']","7cd13727":"df.shape","b6cb0cca":"# Average Values of all consoles in terms of user review\nplat_score =df.groupby('platform')['meta_score'].mean()\nuser_score = df.groupby('platform')['user_review'].mean()\nplt.plot(plat_score.index,plat_score[plat_score.index],'ro-',label='metaScore')\nplt.plot(user_score.index,user_score[user_score.index],'bo-',label='userReview')\nplt.xticks(rotation=90)\nplt.legend()\nplt.show()","225f8974":"# Crtitcal PLatforms \ncritical_platforms = plat_score.sort_values(ascending=False).index[:5]\nuser_critical_platforms = user_score.sort_values(ascending=False).index[:5]\nprint(\"Top 5 Platform having highest mean Meta Critic rated games are :\")\nfor i,x in enumerate(critical_platforms):\n    print(f'{i+1}.{x}',end='\\n')\n\nprint('\\n')\nprint(\"Top 5 Platform having highest mean User rated games are :\")\nfor i,x in enumerate(user_critical_platforms):\n    print(f'{i+1}.{x}',end='\\n')","93c9c909":"print('Average Ratings of highest games-released platforms are:')\nplat_score[popular_platforms]","23576e2c":"# PlayStation vs XBox Chart\nplt_names = [' PlayStation', ' PlayStation 2',' PlayStation 3', ' PlayStation 4', ' PlayStation 5',' Xbox',' Xbox 360', ' Xbox One',' Xbox Series X']\nrelease_dates = [1996,2000,2006,2013,2020,2001,2005,2013,2020]\nend_dates = [2001,2006,2013,2020,2030,2006,2013,2020,2030]\nplt.figure(figsize=(20, 10))\nfor i,platform in enumerate(plt_names):\n      start_year = release_dates[i]\n      end_year = end_dates[i]\n      linestyle = '-'\n      if(platform[1]=='X'):\n        linestyle = '-.'\n      plt.plot(df[(df['platform']==platform) & (df['year']>=start_year) & (df['year']<=end_year) ].groupby('year')['meta_score'].mean(),label=platform,linestyle=linestyle)\n\nfor i,x in enumerate([2001,2006,2013,2020]):\n    plt.axvline(x=x,color='black')\n    plt.text(x,85,f' {i+1} Generation \\n PS{i+2}',rotation=20,fontsize=15,color='red')\n    \nplt.title('PlayStation Vs XBox ',fontsize=28)\nplt.xlabel('Year',fontsize=20)\nplt.ylabel('Mean Meta Score Each Year',fontsize= 20)\nplt.legend()\nplt.xticks(range(1995,2021))\nplt.show()","371843d1":"# Plot of Game released every Year\ndata = df['year'].value_counts().sort_index()\nplt.figure(figsize=(20,12))\nplt.plot(data,'bo-')\nplt.title('Game Releases per Year',fontsize=29)\nplt.xlabel('Year',fontsize=20)\nplt.ylabel('Number of Games Released',fontsize=20)\nplt.xticks(range(1995,2022,2))\nfor i,x in enumerate([2001,2006,2013,2020]):\n    plt.axvline(x=x,color='black')\n    plt.text(x,85,f' {i+1} Generation\\n PS{i+2}',rotation=20,fontsize=15,color='red')\n\nplt.show()","ec78cb4e":"# Plot of Game released every Month\nmonths = ['January', 'February', 'March', 'April', 'May', 'June', 'July','August', 'September', 'October', 'November', 'December']\ndata = df['month'].value_counts().sort_index()\ndata.index = pd.CategoricalIndex(data.index, categories=months, ordered=True)\ndata = data.sort_index()\nplt.figure(figsize=(15,8))\nplt.plot(data,'bo-')\nplt.title('Game Releases per Month',fontsize=29)\nplt.xlabel('Year',fontsize=20)\nplt.ylabel('Number of Games Released',fontsize=20)\nplt.show()","5a6a24ba":"# Best Game Every Year According to Meta\nyears = df['year'].unique()\nyears.sort()\nGOTYM = pd.DataFrame(index = years)\nGOTYM['Winner'] = 'Placeholder'\nGOTYM['Platform'] = 'Something'\nGOTYM\nfor year in years:\n    score = 0\n    winner = 'placeholder'\n    platform = 'placeholder'\n    now = df.loc[ df['year']==year ]\n    for i in now.index:\n        if now['meta_score'][i] > score:\n            score = now['meta_score'][i]\n            winner = now['name'][i]\n            platform = now['platform'][i]\n    GOTYM['Winner'][year] = winner\n    GOTYM['Platform'][year] = platform\n\nGOTYM","037fb0de":"# Game of the Year According to User Reviews\nyears = df['year'].unique()\nyears.sort()\nGOTYM = pd.DataFrame(index = years)\nGOTYM['Winner'] = 'Placeholder'\nGOTYM['Platform'] = 'Something'\nGOTYM\nfor year in years:\n    score = 0\n    winner = 'placeholder'\n    platform = 'placeholder'\n    now = df.loc[ df['year']==year ]\n    for i in now.index:\n        if now['user_review'][i] > score:\n            score = now['user_review'][i]\n            winner = now['name'][i]\n            platform = now['platform'][i]\n    GOTYM['Winner'][year] = winner\n    GOTYM['Platform'][year] = platform\n\nGOTYM","a20ed1ce":"### 1. Most Games Released on Platforms","f36ab4b2":"### This Data set shows games which have been rated by Meta Critic Website. It shows rating given by both the website and the users registered on the website. It has name , year of release , overview of the game and score released by website and users.\n### Main Objectives of Analysis will be:\n#### 1. To check which **Platform** has more game releases?\n#### 2. Plot mean score given to each **platform** given by **Meta Crtitc** and **Users**.\n#### 3. Find top 5 platforms with most game releases?\n#### 4. Find top 5 platforms with highest average critical responses? \n#### 5. Comparison between PlayStation and Xbox wrt to average score each year.\n#### 6. Plot games released every year and every month\n#### 7. Meta Critic Game of the Year(1995-2021)\n#### 8. User Rated Game of the Year(1995-2021)","3864e490":"### 3,4 Top Rated Platforms by Meta Critic and User Reviews","e486cf3b":"### 5 PlayStation Vs Xbox Every Year (Average Rating Given)","f8c326e6":"### 8. User Rated Game of The Year","273b83a6":"### 2. Mean Score of each **platform** by **Meta Critic** and **Users**","c6a1e0d3":"### 7.Meta Critic Game Of The Year","95d618b7":"### 6. Plot of Games Released Per Year and Per Month ","d4ba9498":"#### Converting **release_date** into a numerical Data and making new **month** and **year** Columns","6563db15":"#### Looks like **summary** has some null values  \n#### I will drop **release_date** and **summary** as they are not important"}}