{"cell_type":{"ea99b947":"code","21155a2b":"code","c4b21516":"code","53e0d92a":"code","31621d45":"code","307fb3c1":"code","a417bdab":"code","b9fd7908":"code","91df5b69":"code","a3f04b67":"code","ccc40217":"code","c9b5922a":"code","fdb1b2cf":"code","252488d3":"code","b7f0f32e":"code","bab7e1da":"code","acd7dec0":"code","0126a322":"code","9311941d":"code","ad5310e7":"code","0b20bda0":"code","3ad1189e":"code","949fd6af":"code","e1c837b0":"code","a4b30ace":"code","9039bc26":"code","9756037b":"code","2a99dbf3":"code","ebd5c460":"code","dc6f8cc7":"code","766ec351":"code","61c997fa":"code","29f3c3bd":"code","a9787204":"code","bf719022":"code","88c414e1":"code","5496fd8e":"code","d572ad0b":"code","6242626f":"code","ba172f8b":"code","edabafc5":"code","f125597b":"code","b1ac5230":"code","f8beed8b":"code","5c8a18d7":"code","670702af":"code","a26853c0":"code","6d09309e":"code","c3522c69":"code","b1f5f9f0":"code","4140b5e0":"markdown","60e0ad31":"markdown","f20d3a36":"markdown","7aabcc2c":"markdown","38e34a3a":"markdown","27203748":"markdown","29cb0f30":"markdown"},"source":{"ea99b947":"# notebook settings\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"","21155a2b":"from mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt # plotting\nimport numpy as np # linear algebra\nimport os # accessing directory structure\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n","c4b21516":"meta = pd.read_csv('\/kaggle\/input\/data\/metatable_with_viral_status.csv', delimiter=',', index_col=0)\nexpr = pd.read_csv('\/kaggle\/input\/data\/swab_gene_counts.csv', delimiter=',', index_col=0)\nexpr_name = pd.read_csv('\/kaggle\/input\/annotation\/gene2name.txt', \n                        delimiter='\\t', \n                        index_col=0, \n                        names=['gene_id', 'gene_name', 'val'])\n","53e0d92a":"# rename\nnames = dict(zip(expr_name.index, expr_name['gene_name']))\n# transpose, reorder, and rename\nexprT = expr.T.loc[meta.index,:].rename(columns=names)\nexprT.dataframeName = 'swab_gene_counts.csv'\nexprT.head()","31621d45":"!head \/kaggle\/input\/results\/deconvolution\/CIBERSORTx_Results_Krasnow_facs_droplet.csv","307fb3c1":"# theres more data!\n# differntial expression analysis results\ndea = pd.read_csv(\"\/kaggle\/input\/results\/DE\/3way_diff_expr_and_regression.csv\", delimiter=\",\", index_col=0)\ndea.head()","a417bdab":"# get viral calls data\nviral = pd.read_csv(\"\/kaggle\/input\/results\/viral_calls\/viruses_with_pval.csv\", delimiter=\",\", index_col=0)\nviral.head(100)","b9fd7908":"# but what is \"sample_name\"?\nviral.shape\n# there are many more than number of patients, so probably > 1 sample per patient\nviral.index.nunique()\n# still more than per patient, but I think that some of the samples are controls\n# where do we get the mapping of sample_name -> patient Id?\nmeta_viral = pd.read_csv(\"\/kaggle\/input\/data\/viral_calls\/sample_overviews.csv\", index_col=0)\nmeta_viral.head()","91df5b69":"meta_viral.columns\n# i'm seeing a pattern with the sample_name column, I think we care more about the viral calls dataset because the meta_viral is\n# actually the raw data metadata","a3f04b67":"# lets parse the sample_name column of `viral`\n# what do you think each of these fields represents\nsample_names = viral.reset_index()['sample_name'].str.split(\"_\", expand=True)\nsample_names.head()\nsample_names[0].unique()","ccc40217":"# what do the patient IDs look like again?\npatient_ids = meta.reset_index()['CZB_ID'].str.split(\"_\", expand=True)\npatient_ids.head()\npatient_ids[0].unique()","c9b5922a":"# it looks like 'RR' is probably a control for the assay instead of a patient\n# lets check some of the sample_name rows not starting with 'RR'\nsample_names[sample_names[0] != 'RR']","fdb1b2cf":"# wow! I just went back to look at the data and I missed a very important file!\nsample_map = pd.read_csv(\"\/kaggle\/input\/data\/viral_calls\/ngs_samples.csv\", index_col=0)\nsample_map.head()\nsample_map.nunique()\n# lets check if all patient IDs are in this mapping file\n# What does this code do?\nset(meta.index).issubset(set(sample_map['CZB_ID']))","252488d3":"# lets get all of the samples we care by joining tables\n# join is very power operation and used all of the time\n# read the documentation to become familiar with the different join \"types\"\nviral_patients = viral.join(sample_map, how='inner')\nviral_patients.head()\nviral_patients['CZB_ID'].nunique()","b7f0f32e":"# check meta samples\nmeta.index.nunique()\n# hmm it looks like there are 2 fewer samples after the merge than in the metadata\n# lets check which ids in our viral_partiens ID list are NOT in the meta ID list\nmeta[~meta.index.isin(viral_patients['CZB_ID'])].index\n# interesting there is actually a discrepancy of 5 samples\n# I believe there are 241 unique patients, but only 236 had viral samples\n# this is a discrepancy we should investigate further, but we can come back to\n# it since we can continue on the analysis with the majority of patients","bab7e1da":"# same thing for the expression dataset\nexprT[~exprT.index.isin(viral_patients['CZB_ID'])].index","acd7dec0":"# lets create a table that is patients X virus, p-value in cells\n# What is nt_ and nr_?\nwith pd.option_context('display.max_rows', 10, 'display.max_columns', None): \n    viral_patients.head(10)","0126a322":"# first how many unique viruses are actually present?\nviral_patients['name'].value_counts()\nviral_patients['category'].value_counts()","9311941d":"# now lets create that dataframe\nvp_pivot = viral_patients.pivot_table(values='nt_rpm', index='CZB_ID', columns='name', fill_value=0.)\nvp_pivot.head(20)","ad5310e7":"vp_pivot.shape","0b20bda0":"## PCA CODE\nfrom sklearn.decomposition import PCA","3ad1189e":"# subset to SC2+\nsc2_meta = meta[meta['viral_status']=='SC2']\nsc2_exprT = exprT[exprT.index.isin(sc2_meta.index)]\nsc2_exprT.head()\nsc2_exprT.shape","949fd6af":"# see\n# https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.decomposition.PCA.html\npca = PCA(n_components=50)\nexprT_pca = pca.fit_transform(sc2_exprT)\nprint(\"Explained variance ratio: {}\".format(np.sum(pca.explained_variance_ratio_)))\nexprT_pca = pd.DataFrame(np.hstack((sc2_meta, exprT_pca)),\n                       index=sc2_meta.index,\n                       columns=np.concatenate((sc2_meta.columns, [\"PCA_{}\".format(i) for i in range(50)])))","e1c837b0":"plt.plot(np.arange(50), pca.explained_variance_ratio_)","a4b30ace":"sns.scatterplot(x=\"PCA_0\", y=\"PCA_1\", hue='SC2_rpm', style='gender', data=exprT_pca)","9039bc26":"# lets do pca on virus data\n# see\n# https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.decomposition.PCA.html\npca_virus = PCA(n_components=50)\nvp_pca = pca_virus.fit_transform(vp_pivot)\nprint(\"Explained variance ratio: {}\".format(np.sum(pca_virus.explained_variance_ratio_)))\nvp_pca = pd.DataFrame((vp_pca),\n                       index=vp_pivot.index,\n                       columns=[\"PCA_{}\".format(i) for i in range(50)])\nvp_pca = meta.join(vp_pca, how='inner')\nvp_pca.head()","9756037b":"sns.scatterplot(x='PCA_0', y='PCA_1', hue='viral_status', data=vp_pca)","2a99dbf3":"# That's quite intersting! Looks like 3 major clusters not perfectly separated by virus status!\n# lets separate out just the SC2+ patients and redo PCA","ebd5c460":"# subset\nsc2_vp = vp_pivot[vp_pivot.index.isin(sc2_meta.index)]\nsc2_vp.shape\nsc2_vp","dc6f8cc7":"from sklearn.preprocessing import minmax_scale","766ec351":"sc2_vp_scale = pd.DataFrame(minmax_scale(sc2_vp),\n                            index=sc2_vp.index,\n                            columns=sc2_vp.columns)","61c997fa":"sc2_vp_scale","29f3c3bd":"pca_sc2_virus = PCA(n_components=50)","a9787204":"sc2_vp_pca = pca_sc2_virus.fit_transform(sc2_vp_scale)\nprint(\"Explained variance ratio: {}\".format(np.sum(pca_sc2_virus.explained_variance_ratio_)))","bf719022":"sc2_vp_pca = pd.DataFrame((sc2_vp_pca),\n                       index=sc2_vp.index,\n                       columns=[\"PCA_{}\".format(i) for i in range(50)])\nsc2_vp_pca = sc2_meta.join(sc2_vp_pca, how='inner')\nsc2_vp_pca.head()","88c414e1":"plt.plot(np.arange(50), pca_sc2_virus.explained_variance_ratio_)","5496fd8e":"sns.scatterplot(x='PCA_0', y='PCA_1', hue='SC2_rpm', data=sc2_vp_pca)\n# very cool, so what is driving this separation of groups? how do we discover that?\n# visually it looks like one cluster has higher viral load","d572ad0b":"vp_pivot.columns","6242626f":"# lets try combining the viral data with the expression data and redo the PCA analysis\nsc2_all = sc2_exprT.join(sc2_vp, how='inner')\nsc2_all.shape\nsc2_all.head()","ba172f8b":"# at this point we have redone the same pca pipeline several times - we should make a function to do this for us\ndef run_pca(data, meta, n_components=50):\n    pca = PCA(n_components=n_components)\n    data_pca = pca.fit_transform(data)\n    print(\"Explained variance ratio: {}\".format(np.sum(pca.explained_variance_ratio_)))\n    # create dataframe\n    data_pca = pd.DataFrame((data_pca),\n                             index=data.index,\n                             columns=[\"PCA_{}\".format(i) for i in range(n_components)])\n    # join with metadata\n    joined = meta.join(data_pca, how='inner')\n    return joined, joined.drop(columns=meta.columns)","edabafc5":"sc2_all_meta_pca, sc2_all_pca = run_pca(sc2_all, sc2_meta)","f125597b":"sc2_all_pca","b1ac5230":"sns.scatterplot(x='PCA_0', y='PCA_1', hue='SC2_rpm', data=sc2_all_meta_pca)\n# not clear with 2 dimensions, maybe transcriptomic data adds too much noise","f8beed8b":"sns.scatterplot(x='PCA_0', y='PCA_1', hue='sequencing_batch', data=sc2_all_meta_pca)","5c8a18d7":"from sklearn.cluster import KMeans","670702af":"sc2_vp_meta_pca, sc2_vp_pca_ = run_pca(sc2_vp, sc2_meta, n_components=50)","a26853c0":"sc2_vp_meta_pca","6d09309e":"sc2_vp_pca","c3522c69":"kmeans = KMeans(n_clusters=2, random_state=0).fit_predict(sc2_vp_pca)","b1f5f9f0":"sc2_vp_meta_pca['cluster'] = kmeans\nsns.scatterplot(x='PCA_0', y='PCA_1', hue='cluster', data=sc2_vp_meta_pca)","4140b5e0":"### Dim Reduction","60e0ad31":"What are the viral_call statistics for patients labeled as \"no_virus\"?","f20d3a36":"### Imports","7aabcc2c":"### Read data","38e34a3a":"Which column from the virus names represents SC2?","27203748":"### Clustering\nWe could use several different algorithms here -","29cb0f30":"### Analyzed data"}}