{"cell_type":{"03626b35":"code","67b1662c":"code","7c3605ca":"code","a551688a":"code","1545ee6f":"code","c544811b":"code","beb77222":"code","c67a3d96":"code","f8c7644f":"code","51b7dd8a":"code","639322e4":"code","4400926a":"markdown","0b101094":"markdown","62c52038":"markdown","463e6729":"markdown","5d38b2cd":"markdown","c6ba2ef6":"markdown"},"source":{"03626b35":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os, re\n#print(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","67b1662c":"atlas = pd.read_csv('..\/input\/hdi-brazil-idh-brasil\/atlas.csv')\ndesc = pd.read_csv('..\/input\/hdi-brazil-idh-brasil\/desc.csv')\nibge = pd.read_csv('..\/input\/ibgedataset\/ibge_estados.csv', sep=';')\nibge = ibge.rename(columns={'uf':'sigla','codigo_uf':'uf'})\n\natlas = atlas.merge(ibge, on='uf', how='left')","7c3605ca":"for _,d in desc.iterrows():\n    print('{}: {}'.format(d['SIGLA'], d['nome curto']))\natlas.uf.head()","a551688a":"espvida_media_uf = atlas[atlas.ano == 2010].groupby(['sigla']).espvida.mean()\nespvida_media_uf = pd.DataFrame({'sigla':espvida_media_uf.index, 'espvida':espvida_media_uf.values})\nsns.set(rc={'figure.figsize':(10,6)})\nsns.barplot(x='sigla', y='espvida', data=espvida_media_uf.sort_values(['espvida']).reset_index(drop=True), color='darkblue').set(title='Gr\u00e1fico de barras', \n                                                                                                                                 xlabel = 'Estado', \n                                                                                                                                 ylabel='Espectativa de vida ao nascer (anos)')","1545ee6f":"cidades_nordeste = atlas[atlas.uf.isin(list(range(21,30))) & atlas.ano.isin([2010])]\npobreza_analf = cidades_nordeste.groupby(['sigla'], as_index=False)['pind','t_analf25m'].mean()\npobreza_analf_melt = pd.melt(frame=pobreza_analf,id_vars='sigla',value_vars=['pind','t_analf25m'],var_name='tipo',value_name='taxa')\npobreza_analf_melt.loc[pobreza_analf_melt.tipo == 'pind', 'tipo'] = 'Percentual de extrema pobreza'\npobreza_analf_melt.loc[pobreza_analf_melt.tipo == 't_analf25m', 'tipo'] = 'Percentual de analfabetismo (25 ou + anos)'\nsns.catplot(x=\"sigla\", y=\"taxa\", hue='tipo', \n            data=pobreza_analf_melt, \n            kind=\"bar\", \n            height=6, aspect=11\/6,\n            palette=\"muted\").set(title='Gr\u00e1fico de barras agrupadas',xlabel = 'Estado',ylabel='Taxa (de 1 a 100%)')\n","c544811b":"evolucao_idh = atlas[atlas.uf.isin(list(range(21,30)))]\nevolucao_idh.groupby(['sigla','ano'], as_index = False).idhm.mean()\nsns.relplot(data=evolucao_idh, x='ano', y='idhm', hue='sigla', kind='line', height=8, aspect=11\/8).set(title='Gr\u00e1fico linhas - Evolu\u00e7\u00e3o do IDH',xlabel = 'Estado',ylabel='Taxa (de 1 a 100%)')","beb77222":"#idhm_r\ncidades_nordeste = atlas[atlas.uf.isin(list(range(21,30))) & atlas.ano.isin([2010])]\nsns.set(rc={'figure.figsize':(16,12)})\nsns.scatterplot(x=\"espvida\", y=\"e_anosestudo\", data=cidades_nordeste, hue='sigla').set(xlabel = 'Espectativa de vida ao nascer', ylabel = 'Anos de estudo')","c67a3d96":"campos_piramide_populacional = desc.loc[lambda x: (x['SIGLA'].str.contains('mulh') | \n                    x['SIGLA'].str.contains('hom')) &\n         ~x['SIGLA'].str.contains('to'), 'SIGLA']\ncampos_piramide_populacional = campos_piramide_populacional.to_frame()\nsexo_faixa = [('m' if x[0] == 'h' else 'f', g[0] if g[0] is not None else g[1]) for (x, g) in [(x, re.compile(\".*[mhrs](\\d{1,2}a*\\d{1,2})*\").search(x.strip()).groups()) for x in campos_piramide_populacional.SIGLA]]\nsexo, faixa = zip(*sexo_faixa)\ncampos_piramide_populacional['sexo'] = list(sexo)\ncampos_piramide_populacional['faixa_etaria'] = list(faixa)\ncampos_piramide_populacional = campos_piramide_populacional.rename(columns={'SIGLA':'tipo'})","f8c7644f":"cidades_nordeste_piramide = cidades_nordeste[['sigla'] + list(campos_piramide_populacional.tipo)].groupby('sigla', as_index=False).sum()\ncidades_nordeste_piramide = cidades_nordeste_piramide.melt(id_vars='sigla', value_vars=list(campos_piramide_populacional.tipo), var_name='tipo', value_name='quantidade')\ncidades_nordeste_piramide = cidades_nordeste_piramide.merge(campos_piramide_populacional)\ncidades_nordeste_piramide.faixa_etaria = cidades_nordeste_piramide['faixa_etaria'].astype('str')\ncidades_nordeste_piramide.quantidade = pd.to_numeric(cidades_nordeste_piramide.quantidade)\ncidades_nordeste_piramide.head()\n\ncidades_nordeste_piramide.loc[cidades_nordeste_piramide.sexo == 'f', 'quantidade'] = cidades_nordeste_piramide.loc[cidades_nordeste_piramide.sexo == 'f'].quantidade * -1\n#cidades_nordeste_violin.loc[cidades_nordeste_violin.sexo == 'f', 'quantidade']","51b7dd8a":"def piramide(x,y,z,**kwargs):\n    df = kwargs.pop(\"data\")\n    order_of_bars =['80', '75a79', '70a74', '65a69', '60a64', '55a59', '50a54',\n       '45a49', '40a44', '35a39', '30a34', '25a29', '20a24', '15a19',\n       '10a14', '5a9', '0a4']\n    colors = [plt.cm.Spectral(i\/float(len(df[z].unique())-1)) for i in range(len(df[z].unique()))]\n    g = None\n    for c, group in zip(colors, df[z].unique()):\n        g = sns.barplot(x=x, y=y, data=df.loc[df[z]==group, :], order=order_of_bars, color=c, label=group)\n    g.set(xlabel = \"popula\u00e7\u00e3o\", ylabel = \"faixa et\u00e1ria\")\n    return g\n\ng = sns.FacetGrid(cidades_nordeste_piramide, col=\"sigla\", col_wrap=3, height=8)\ng = g.map_dataframe(piramide, 'quantidade', 'faixa_etaria', 'sexo')\ng.add_legend()\n\n#sns.barplot(x=\"quantidade\", y=\"faixa_etaria\", hue='sexo', data=cidades_nordeste_violin, orient='h')\n#g = sns.FacetGrid(cidades_nordeste_violin, row=\"sexo\", col=\"sigla\", margin_titles=True)\n#g.map(sns.barplot, \"faixa_etaria\", \"quantidade\")\n\n","639322e4":"evolucao_espvida = atlas[atlas.uf.isin(list(range(21,30)))]\n#evolucao_espvida = evolucao_espvida[evolucao_espvida.uf == 24]\nevolucao_espvida.groupby(['sigla','ano'], as_index = False).t_agua.mean()\nsns.catplot(data=evolucao_espvida, x='sigla', y='t_agua', kind='violin', height=8, aspect=11\/8).set(title='Violino - \u00c1gua Encanada',xlabel = 'Estado',ylabel='% de \u00c1gua Encanada nos Munic\u00edpios do Estado (1 at\u00e9 100%)')","4400926a":"# 1. Gr\u00e1fico de barras\n\nAbaixo se encontra um gr\u00e1fico que mostra as espectativas de vida ao nascer dos estados do Brasil.","0b101094":"# 3. Gr\u00e1fico de linha\n\nO gr\u00e1fico de linha \u00e9 recomendado principalmente quando um dos eixos \u00e9 uma vari\u00e1vel cont\u00ednua. Nesse exemplo tempos uma dimens\u00e3o temporal (ano) no eixo das abcissas e a evolu\u00e7\u00e3o do IDH dos estados do nordeste brasileiro no eixo das ordenadas.\n","62c52038":"# 5. Gr\u00e1fico de barra horizontal\n\n\u00c0s vezes a invers\u00e3o de eixo das barras de um gr\u00e1fico auxilia a visualiza\u00e7\u00e3o de grandezas compar\u00e1veis. Um exemplo t\u00edpico \u00e9 o gr\u00e1fico de pir\u00e2mide populacional, usualmente constru\u00eddo com barras horizontais. No exemplo a seguir temos as pir\u00e2mides das popula\u00e7\u00f5es dos estados do nordeste brasileiro.","463e6729":"# 2. Gr\u00e1fico de barras agrupadas\n\nO gr\u00e1fico a seguir tamb\u00e9m \u00e9 um gr\u00e1fico de barras, por\u00e9m este apresenta duas var\u00ed\u00e1veis (percentual de extrema pobreza e percentual de analfabetismo na popula\u00e7\u00e3o maior de 25 anos) para cada estado do nordeste brasileiro.","5d38b2cd":"# 4. Scatter plot\n\nO gr\u00e1fico Scatter Plot possibilita a visualiza\u00e7\u00e3o de m\u00faltiplos pontos em um espa\u00e7o bi-dimensional. Nesse caso os mun\u00edcipios dos estados do nordeste s\u00e3o distribu\u00eddo no plano composto pelas dimens\u00f5es anos de estudo de sua popula\u00e7\u00e3o com a expectativa de vida ao nascer.","c6ba2ef6":"# 6. Gr\u00e1fico de violino\n\nUma plotagem de violino mostra a distribui\u00e7\u00e3o de uma \u00fanica vari\u00e1vel num\u00e9rica e transmite a densidade da distribui\u00e7\u00e3o baseada \nem um kernel mais suave que indica a densidade de valores (via largura) do campo num\u00e9rico. "}}