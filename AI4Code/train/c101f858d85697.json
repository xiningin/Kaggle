{"cell_type":{"0b03172e":"code","ffcce550":"code","10044852":"code","92724629":"code","163a8236":"code","51abcfb2":"code","0f519184":"code","aaa5214c":"code","3604be8a":"code","73f961c8":"code","5194835d":"code","bb39c6b1":"code","8dbc4e13":"code","4c9a6b18":"markdown","1a42b8b9":"markdown","7a3bd616":"markdown","4720da67":"markdown","3ed4eb99":"markdown","b423c82f":"markdown","6bb122b5":"markdown","cf7a2b99":"markdown","cd06024f":"markdown"},"source":{"0b03172e":"import numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import LinearRegression, RidgeCV, LassoCV\nfrom sklearn.preprocessing import minmax_scale\nfrom sklearn.metrics import mean_squared_log_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_selection import GenericUnivariateSelect, mutual_info_regression\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ffcce550":"data = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\n\ntrain_data, validation_data = train_test_split(data, test_size=0.3, random_state=0)\ntest_data = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')","10044852":"train_data.info()","92724629":"test_data.info()","163a8236":"X_train = train_data.loc[:, 'MSSubClass':'SaleCondition']\nX_train = X_train.fillna(X_train.mean())\ny_train = train_data.loc[:, 'SalePrice']\n\nX_validation = validation_data.loc[:, 'MSSubClass':'SaleCondition']\nX_validation = X_validation.fillna(X_validation.mean())\ny_validation = validation_data.loc[:, 'SalePrice']\n\nX_test = test_data.loc[:, 'MSSubClass':'SaleCondition']\nX_test = X_test.fillna(X_test.mean())","51abcfb2":"# plt.rcParams.update({'figure.max_open_warning': 0})\n# for col in train_data.columns:\n#     if col!='SalePrice':\n#         plt.figure()\n#         sns.scatterplot(x = train_data[col], y = train_data['SalePrice'])\nplt.rcParams.update({'font.size': 50})\noutlier_col = ['LotFrontage', 'LotArea', 'Utilities', 'MasVnrArea', 'GrLivArea', 'MiscVal']\n\nfig = plt.figure(figsize=(100,100))\n\ni = 0\nfor col in outlier_col:\n    \n    fig.add_subplot(3,2,i+1)\n    plt.scatter(x = train_data[col], y = train_data['SalePrice'], s=100)\n    plt.xlabel(col)\n    plt.ylabel('SalePrice')\n    i+=1","0f519184":"train_data = train_data[train_data['LotFrontage']<150]\ntrain_data = train_data[train_data['LotArea']<50000]\ntrain_data = train_data[train_data['Utilities']!='NoSeWa']\ntrain_data = train_data[train_data['MasVnrArea']<600]\ntrain_data = train_data[train_data['GrLivArea']<3000]\ntrain_data = train_data[train_data['MiscVal']<2000]","aaa5214c":"comb = pd.concat((X_train, X_test, X_validation))\ncomb = pd.get_dummies(comb)\n\nX_train = comb[:X_train.shape[0]]\nX_test = comb[X_train.shape[0]:X_train.shape[0]+X_test.shape[0]]\nX_validation = comb[X_train.shape[0]+X_test.shape[0]:]","3604be8a":"#Reducing the number of feature variables \nft_select = GenericUnivariateSelect(mutual_info_regression, mode='k_best', param=80)\nft_select.fit(X_train, y_train)\nX_train = ft_select.transform(X_train)\nX_validation = ft_select.transform(X_validation)\n\nX_test = ft_select.transform(X_test)","73f961c8":"models = [LinearRegression(), RidgeCV(normalize=True), LassoCV(eps=0.001, normalize=True)]\ny_pred = []\n\nfor model in models:\n  reg = model.fit(X_train, y_train)\n  pred_train = reg.predict(X_train)\n  pred_val = reg.predict(X_validation)\n\n  y_validation = minmax_scale(y_validation, (0,1))\n  pred_val = minmax_scale(pred_val, (0,1))\n  rms_logError = np.sqrt(mean_squared_log_error(y_validation, pred_val))\n  print(rms_logError)\n  y_pred.append(reg.predict(X_test))","5194835d":"output = pd.DataFrame({'Id': test_data.Id,'SalePrice': y_pred[0]})\noutput.to_csv('submission_linear.csv', index=False)","bb39c6b1":"output = pd.DataFrame({'Id': test_data.Id,'SalePrice': y_pred[1]})\noutput.to_csv('submission_ridge.csv', index=False)","8dbc4e13":"output = pd.DataFrame({'Id': test_data.Id,'SalePrice': y_pred[2]})\noutput.to_csv('submission_lasso.csv', index=False)","4c9a6b18":"## EDA","1a42b8b9":"**Identifying the Outliers**","7a3bd616":"## Applying ML Models","4720da67":"**Encoding the catagorical feature variables**","3ed4eb99":"## Loading Data","b423c82f":"**Applying Generic Univariate Select**","6bb122b5":"**Removing the outliers**","cf7a2b99":"## Data Preprocessing","cd06024f":"**Replacing missing values**"}}