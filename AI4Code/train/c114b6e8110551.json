{"cell_type":{"b2fba195":"code","825aa8ba":"code","63fd5d19":"code","8d959e3c":"code","65fd096e":"code","a4c4241e":"code","c8568e2e":"code","2e065556":"code","54f05b0c":"code","ed326672":"code","ddf4ccab":"code","a711638a":"code","2897537e":"code","2782faa7":"code","2a997052":"code","c4bd135e":"code","deb5a5e2":"code","30b41639":"code","0cb5621c":"code","896b1fc0":"code","fdea4d66":"code","5d3802df":"code","c34ab898":"markdown","087a45fd":"markdown","0b7c342b":"markdown","b7929a28":"markdown","8c356b68":"markdown","0ad52962":"markdown","15e3f122":"markdown","b1779903":"markdown","798c045b":"markdown","a953ad20":"markdown","caf14fa6":"markdown","954d3e44":"markdown","39a9151e":"markdown","a86efced":"markdown","eef9799f":"markdown","fa78ce44":"markdown","d652d781":"markdown","b87f73fe":"markdown","1ba5be80":"markdown"},"source":{"b2fba195":"import pandas as pd\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.metrics import classification_report,confusion_matrix\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score","825aa8ba":"df = pd.read_csv('..\/input\/creditcardfraud\/creditcard.csv')\ndf.head()","63fd5d19":"df.columns","8d959e3c":"df.isnull().sum()","65fd096e":"X = df[['V17', 'V9', 'V6', 'V12']]\nY = df['Class']\nRANDOM_SEED = 2021\n\nX_Train, X_Val, Y_Train, Y_Val = train_test_split(X, Y, test_size = 0.25,random_state = RANDOM_SEED )","a4c4241e":"model = RandomForestClassifier(random_state= RANDOM_SEED).fit(X_Train,Y_Train)\nmodel","c8568e2e":"predictionforest = model.predict(X_Val)\npredictionforest","2e065556":"print(confusion_matrix(Y_Val,predictionforest))","54f05b0c":"print(classification_report(Y_Val,predictionforest))","ed326672":"acc1 = accuracy_score(Y_Val,predictionforest)\nacc1","ddf4ccab":"model = RandomForestClassifier(n_estimators=100, random_state= RANDOM_SEED).fit(X_Train,Y_Train)\n","a711638a":"predictionforest = model.predict(X_Val)","2897537e":"print(confusion_matrix(Y_Val,predictionforest))\n","2782faa7":"print(classification_report(Y_Val,predictionforest))","2a997052":"acc2 = accuracy_score(Y_Val,predictionforest)\nacc2","c4bd135e":"from sklearn.svm import SVC\nmodel = SVC(kernel = 'linear',probability=True)","deb5a5e2":"model_pg = {\n     'C': [0.1, 1, 10, 100],  \n     'gamma': [0.1, 0.01, 0.001, 0.0001], \n     'kernel': ['rbf', 'poly', 'sigmoid']  ,\n     'probability': [True,False]\n}","30b41639":"from sklearn.model_selection import RandomizedSearchCV\n\nrscv = RandomizedSearchCV(model, param_distributions = model_pg, n_iter = 2, cv = 3, verbose=10, random_state=RANDOM_SEED, n_jobs = -1)\nrscv.fit(X,Y)","0cb5621c":"predictionforest = rscv.best_estimator_.predict(X_Val)","896b1fc0":"print(confusion_matrix(Y_Val,predictionforest))","fdea4d66":"print(classification_report(Y_Val,predictionforest))","5d3802df":"acc2 = accuracy_score(Y_Val,predictionforest)\nacc2","c34ab898":"# classification report ","087a45fd":"# #3.RandomizedSearchCV","0b7c342b":"# check null data","b7929a28":"# split train and valid set ","8c356b68":"# classification report ","0ad52962":"# #1.Search best model using RandomForestClassifier (Default)","15e3f122":"# columns","b1779903":"# classification report","798c045b":"# accuracy score","a953ad20":"# predict validation set ","caf14fa6":"# load data","954d3e44":"# confustion matrix","39a9151e":"# accuracy score","a86efced":"# accuracy score","eef9799f":"# confusion matrix","fa78ce44":"# confustion matrix ","d652d781":"# import basic libraray ","b87f73fe":"# #2.Search best model using RandomForestClassifier (add n_estimator param) ","1ba5be80":"# predict validation set "}}