{"cell_type":{"242f7987":"code","0dde74ba":"code","d452be1a":"code","556ab675":"code","b7d9aec4":"code","720886d4":"markdown","e4d60cb5":"markdown","5de38e09":"markdown","c705b822":"markdown","0c0a8c4f":"markdown","14c2bfec":"markdown"},"source":{"242f7987":"import numpy as np\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nimport warnings\n\nwarnings.filterwarnings(\"ignore\",category=UserWarning)\nnp.random.seed(173)\n  \nnorm_data = np.random.normal(0, 1, 100)\nnot_norm_data = np.random.exponential(1, 100)\n\nfig, ax = plt.subplots(1, 2)\nsm.qqplot(norm_data, line ='45', markerfacecolor=\"#00ff00\", color=\"green\", ax=ax[0])\nsm.qqplot(not_norm_data, line ='45', markerfacecolor=\"#00ff00\", color=\"green\", ax=ax[1])\nplt.show()","0dde74ba":"from scipy.stats import shapiro\n\n# W, p-value\nstat_n, p_n = shapiro(norm_data)\nstat_nn, p_nn = shapiro(not_norm_data)\n\n# Fails to reject that it's normally distributed\nprint(f'stat={stat_n:.3f}, p={p_n:.3f}')\n\n# Rejects that it's normally distributed\nprint(f'stat={stat_nn:.3f}, p={p_nn:.3f}') ","d452be1a":"from scipy.stats import anderson\n\nstat, crit_vals, sig_lvls = anderson(norm_data)\nprint(f\"Statistic: {stat},\\nCritical values: {crit_vals}\\n\")\n\nfor i, val in enumerate(crit_vals):\n    print(f\"{'Is not' if val < stat else 'Likely'} normal at {sig_lvls[i]:.0f} %\")\n\nprint(\"\\n\")\n\nstat, crit_vals, sig_lvls = anderson(not_norm_data)\nprint(f\"Statistic: {stat},\\nCritical values: {crit_vals}\\n\")\n\nfor i, val in enumerate(crit_vals):\n    print(f\"{'Is not' if val < stat else 'Likely'} normal at {sig_lvls[i]:.0f} %\")","556ab675":"from scipy.stats import normaltest\n\nstat_n, p_n = normaltest(norm_data)\nstat_nn, p_nn = normaltest(not_norm_data)\n\nprint(f\"Normal:\\nStatistic: {stat_n:.3f}, p-value: {p_n:.3f}\\n\")\n\nprint(f\"Not normal:\\nStatistic: {stat_nn:.3f}, p-value: {p_nn:.3f}\")","b7d9aec4":"from scipy.stats import kstest\n\nprint(\"Comparing normal sample to exponential sample:\")\n\nd, p = kstest(not_norm_data, norm_data)\nprint(f\"D-statistic: {d}, p-value: {p:.3f}\\n\")\n\n\nprint(\"Comparing normal sample to normal sample:\")\n\nd, p = kstest(np.random.normal(0, 1, 100), norm_data)\nprint(f\"D-statistic: {d}, p-value: {p:.3f}\\n\")\n\n\nprint(\"Comparing exponential sample to exponential sample:\")\n\nd, p = kstest(np.random.exponential(1, 100), not_norm_data)\nprint(f\"D-statistic: {d}, p-value: {p:.3f}\\n\")","720886d4":"# Normality Tests","e4d60cb5":"### Anderson-Darling\n\nNull hypothesis: Normally distributed (If fails to reject, we can't say that the dist is normal)  \nAssuming indipendent and identically distributed observations","5de38e09":"### Shapiro-Wilk Test\n\nNull hypothesis: Normally distributed (If fails to reject, we can't say that the dist is normal)  \nAssuming indipendent and identically distributed observations","c705b822":"### D\u2019Agostino\u2019s K^2\n\nNull hypothesis: Normally distributed (If fails to reject, we can't say that the dist is normal)  \nAssuming indipendent and identically distributed observations","0c0a8c4f":"### Kolmogorov-Smirnov  \n\nNull hypothesis: A good fit (but notice last example)  \nAssuming indipendent and identically distributed observations","14c2bfec":"### Before testing: just look  \n\nDraw a Q-Q plot, if it obviously deviates from the line (especially in the middle), then it's not normally distributed"}}