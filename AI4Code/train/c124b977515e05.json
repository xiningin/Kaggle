{"cell_type":{"170b39c2":"code","99a0bcac":"code","1425ec59":"code","308268a1":"code","d8dff480":"code","5a79d9ae":"code","4834e46a":"code","ab3784b2":"code","70a3a935":"code","46a4ca34":"code","c2145d55":"code","716ba18b":"code","69c30ade":"code","d53775f5":"code","9468978f":"code","031fbf78":"code","635f7a5a":"code","a6286f74":"code","76950162":"code","56503be2":"code","d2abff35":"code","d4a9ad39":"code","67fb7f03":"code","598f5fb3":"code","a8abff0c":"code","16097149":"code","a8884872":"code","81a959bd":"code","62b454b4":"code","de991048":"code","0f6839fa":"code","b34fee8e":"code","c55e057c":"code","e434e84f":"code","2c31222a":"markdown","a25a160b":"markdown","356aee4d":"markdown","e2681fd5":"markdown","4b7f8237":"markdown","65b945b2":"markdown","49101ce7":"markdown","27b35e70":"markdown","fb3946ac":"markdown","56a095ac":"markdown","1c449787":"markdown","82fad9a8":"markdown","94207726":"markdown","21ee8ad6":"markdown","c91edf3b":"markdown","1ae71e0d":"markdown","a886f85f":"markdown","82dfd935":"markdown","a95b727f":"markdown","4886b27b":"markdown","eb985037":"markdown","e3f2689e":"markdown","a08343b3":"markdown","da4d724b":"markdown","b668d0e7":"markdown","d0f2927e":"markdown","0d821d13":"markdown","a5f01fbe":"markdown","4253e142":"markdown","c7fbaa54":"markdown","3bad10b5":"markdown","46335dd0":"markdown","cee7439c":"markdown","8bc0fa0b":"markdown","89b12dea":"markdown","26eb60e6":"markdown","7334e61e":"markdown","aa5295f5":"markdown"},"source":{"170b39c2":"# Importar las librerias a utilizar \nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Importamos la libreria folium que nos permite trabajar con mapas\nimport folium\nfrom folium import plugins\nfrom folium.plugins import HeatMap\n\n# Importamos los modelos a utilizar\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nimport xgboost as xgb\nfrom xgboost import XGBRegressor\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.metrics import mean_squared_error,r2_score\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import KFold\n\nimport plotly.graph_objects as go\nimport plotly.express as px\n\n# La siguiente l\u00ednea es para ver las imagenes dentro del notebook\n%matplotlib inline\n\n# Ac\u00e1 configuramos el tama\u00f1o de las figuras\nplt.rcParams['figure.figsize'] = (12,8)\n\n# Seteamos opciones de pandas sobre las columnas y su ancho\npd.set_option('max_columns', 120)\npd.set_option('max_colwidth', 5000)\n\nimport warnings\nwarnings.filterwarnings('ignore')\n","99a0bcac":"# Cargamos el dataset de Airbnb de New York\ndata = pd.read_csv('..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')\ndata.head(5)","1425ec59":"data.shape","308268a1":"data.dtypes","d8dff480":"data.drop(['host_name','name'], axis=1, inplace=True)","5a79d9ae":"data.isnull().sum() ","4834e46a":"data[data['number_of_reviews']== 0.0].shape","ab3784b2":"data['last_review'].fillna(0, inplace=True)\ndata['reviews_per_month'].fillna(0, inplace=True)","70a3a935":"data['last_review'] = pd.to_datetime(data['last_review'],infer_datetime_format=True) ","46a4ca34":"data['all_year_avail'] = data['availability_365']>353\ndata['low_avail'] = data['availability_365']< 12\ndata['no_reviews'] = data['reviews_per_month']==0","c2145d55":"data.dtypes","716ba18b":"percentdist = data['neighbourhood_group'].value_counts()\n\nneighbourhood_group = pd.DataFrame({\"col_label\": percentdist.index, \"col_values\": percentdist.values})\nfig = px.pie(neighbourhood_group, values='col_values', names='col_label', color_discrete_sequence=px.colors.sequential.RdBu)\nfig.show()","69c30ade":"cmap = sns.cubehelix_palette(dark=.3, light=.8, as_cmap=True)\nplt.figure(figsize=(10,6))\nsns.scatterplot(data.longitude,data.latitude,hue=data.availability_365,palette=cmap)\nplt.show()","d53775f5":"data['all_year_avail'] = data['availability_365']>353\ndata['low_avail'] = data['availability_365']< 12\ndata['no_reviews'] = data['reviews_per_month']==0","9468978f":"percentroom = data['room_type'].value_counts()\n\nroomtype = pd.DataFrame({\"room_label\": percentroom.index, \"room_values\": percentroom.values})\nfig = px.pie(roomtype, values='room_values', names='room_label', color_discrete_sequence=px.colors.sequential.RdBu)\nfig.show()","031fbf78":"plt.figure(figsize=(10,6))\nsns.scatterplot(data.longitude,data.latitude,hue=data.room_type)\nplt.show()","635f7a5a":"mean_price=data.price.mean()\nprint(\"Precio Promedio =\", mean_price)","a6286f74":"pd.DataFrame(data.groupby('neighbourhood_group')[\"price\"].mean().sort_values(ascending=False))","76950162":"map_newyork = folium.Map(location=[40.6643, -73.9385], zoom_start = 10, control_scale = True)\ndata['latitude'] = data['latitude'] .astype(float)\ndata['longitude'] = data['longitude'].astype(float)\nheat_df = data.dropna(axis=0, subset=['latitude','longitude'])\nheat_data = [[row['latitude'],row['longitude']] for index, row in heat_df.iterrows()]\ndef generateBaseMap(default_location=[40.6643, -73.9385], default_zoom_start=10):\n    base_map = folium.Map(location=default_location, control_scale=True, zoom_start=default_zoom_start)\n    return base_map\n\nbase_map = generateBaseMap()\nHeatMap(data=data[['latitude', 'longitude', 'price']].groupby(['latitude', 'longitude']).sum().reset_index().values.tolist(), radius=8, max_zoom=13).add_to(base_map)\nbase_map","56503be2":"fig = px.scatter(data, x=\"neighbourhood_group\", y=\"price\", color=\"neighbourhood_group\")\nfig.show()","d2abff35":"df_manhattan = data[data['neighbourhood_group']=='Manhattan']","d4a9ad39":"fig = px.scatter(df_manhattan, x=\"neighbourhood\", y=\"price\", color=\"neighbourhood\")\nfig.show()","67fb7f03":"pd.DataFrame(df_manhattan.groupby('neighbourhood')[\"price\"].mean().sort_values(ascending=False))","598f5fb3":"def outliers(dataout):\n    median=dataout.median()\n    p25 = dataout.quantile(0.25)\n    p75 = dataout.quantile(0.75)\n    iqr = p75 - p25\n    li= p25 -1.5*iqr \n    ls= p75 +1.5*iqr\n    lie=p25 -3*iqr \n    lse=p75 +3*iqr\n    print(\"Rango Intercuartilico =\",iqr) #Rango Intercuartilico\n    print(\"Limite Inferior =\",li)\n    print(\"Limite Superior =\",ls)\n    print(\"Limite Inferior Extremo =\",lie)\n    print(\"Limite Superior Extremo =\",lse)\n","a8abff0c":"dataout=data['price']\noutliers(dataout)","16097149":"outliers_price=data[data['price']>334]","a8884872":"outliers = folium.map.FeatureGroup()\n\nfor lat, lng, in zip(outliers_price.latitude, outliers_price.longitude):\n    outliers.add_child(\n        folium.CircleMarker(\n            [lat, lng],\n            radius=4, \n            color='yellow',\n            fill=True,\n            fill_color='blue',\n            fill_opacity=0.4\n        )\n    )\n\nmap_newyork.add_child(outliers)","81a959bd":"model_data = data[(data['price']) < 334]","62b454b4":"corr = model_data.corr(method='pearson')\nplt.figure(figsize=(15,8))\nsns.heatmap(corr, annot=True)","de991048":"dataset = pd.get_dummies(model_data,columns= ['neighbourhood_group','neighbourhood', 'room_type'])","0f6839fa":"X = dataset.drop(['price','id', 'host_id', 'last_review', 'last_review'], axis=1)\ny = dataset['price']\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y,test_size = 0.3, random_state=42)\n\n# Realiz\u00e1 la separaci\u00f3n a continuaci\u00f3n en esta celda","b34fee8e":"num_folds = 10\nscoring = \"neg_mean_squared_error\"\n\nmodels = []\nmodels.append(('XGBR', XGBRegressor(objective=\"reg:squarederror\")))\nmodels.append(('KNN', KNeighborsRegressor()))\nmodels.append(('DTR', DecisionTreeRegressor()))\nmodels.append(('RFR', RandomForestRegressor()))\nresults = []\nnames = []\nfor name, model in models:\n    kfold = KFold(n_splits=num_folds,shuffle=True, random_state=42)\n    cv_results = cross_val_score(model, X_train, y_train, cv=kfold, scoring=scoring)\n    results.append(cv_results)\n    names.append(name)\n    msg = \"%s: %f (%f)\" % (name, np.sqrt(-cv_results.mean()),   cv_results.std())\n    print(msg)","c55e057c":"scaler = StandardScaler().fit(X_train)\nrescaledX = scaler.transform(X_train)\n\nparams = {\"learning_rate\"    : [0.05, 0.10, 0.15, 0.20, 0.25, 0.30 ] ,\n \"max_depth\"        : [ 3, 4, 5, 6, 8, 10, 12, 15],\n \"min_child_weight\" : [ 1, 3, 5, 7 ],\n \"gamma\"            : [ 0.0, 0.1, 0.2 , 0.3, 0.4 ],\n \"colsample_bytree\" : [ 0.3, 0.4, 0.5 , 0.7 ] }\n\n\nmodel = XGBRegressor(objective=\"reg:squarederror\")\nkfold = KFold(n_splits=5, random_state=42)\ngrid=RandomizedSearchCV(estimator=model, param_distributions=params, n_jobs=-1, scoring=scoring, cv=kfold, \n                        return_train_score=True)\n\ngrid_result = grid.fit(rescaledX, y_train)\n\n\nmean_train = np.sqrt(-grid_result.cv_results_['mean_train_score'].mean())\nmean_test = np.sqrt(-grid_result.cv_results_['mean_test_score'].mean())\n\nprint(\"Best Params: \" ,grid_result.best_params_)\nprint(\"Mean Train Score: \", mean_train)\nprint(\"Mean Test Score: \", mean_test)","e434e84f":"rescaledXtest = scaler.transform(X_test)\noptimized=grid_result.best_estimator_\nypredtrain = optimized.predict(rescaledX)\nypredtest = optimized.predict(rescaledXtest)\nr2_train = r2_score(y_train, ypredtrain)\nr2_test = r2_score(y_test, ypredtest)\n\nprint(\"r2 Train :\",r2_train)\nprint(\"r2 Test :\",r2_test)","2c31222a":"## 3 - Cargar el dataset y limpieza de los datos","a25a160b":"## 2 - Importar librerias","356aee4d":"#                                               AIRBNB NEW YORK - DATA SCIENCE PROJECT","e2681fd5":"**Cargar el dataset**","4b7f8237":"Id: Identificaci\u00f3n\nName: Nombre del propietario. \nHost Id: Host Id.\nHost name: Nombre del host.\nNeighbourhood Group: Ubicaci\u00f3n\nNeighbourhood: Area\nLatitude: Coordinadas de latitud.\nLongitude: Coordinadas de longitude.\nRoom Type: tipo de habitaci\u00f3n a alquilar.\nPrice: precio en dolares estadounidenses.\nMinimum Nights: n\u00famero minimo de noches a alquilar.\nNumber of reviews: number of reviews\nLast Review: \u00faltima review.\nReviews per month: n\u00famero de reviews por mes.\nCalculated host listings count: cantidad de \nAvailability 365: n\u00famero de dias disponible para alquiler.\n","65b945b2":"**4.2 Room Type**","49101ce7":"## 4 - Exploraci\u00f3n del dataset","27b35e70":"Airbnb ha sido utilizado por anfitriones y hu\u00e9spedes desde el 2008 para que las experiencias de viaje sean \u00fanicas y personalizadas, atendiendo a las necesidades de cada uno. El dataset utilizado incluye la actividad en New York en el a\u00f1o 2019.","fb3946ac":"Adicional a la figura anterior, se presenta cuadro con la media de cada una de los barrios de Manhattan.","56a095ac":"https:\/\/www.kaggle.com\/dgomonov\/new-york-city-airbnb-open-data","1c449787":"Con los valores arrojados, concluimos que los 10.052 valores nulos de \"last review\" y \"reviews per month\" coinciden con aquellos datos que no tienen reviews(data['number_of_reviews']), visto en el siguiente c\u00f3digo, por lo que procedemos a remplazar esos valores.","82fad9a8":"**Features**","94207726":"Se observa que en la ciudad de Manhattan la disponibilidad anual es m\u00e1s baja, lo que podr\u00eda presentar una dificultad para el hu\u00e9sped en el momento de buscar un hospedaje. Esto afecta el precio del alquiler, que como se analiz\u00f3 anteriormente aumenta significativamente en esta \u00e1rea.","21ee8ad6":"En el siguiente mapa, se visualizan los registros donde los precios son catalogados como at\u00edpicos dado el estudio estad\u00edstico. Como se ha observado en todo el an\u00e1lisis, los datos se ubican mayoritariamente en Manhattan y Brooklyn.","c91edf3b":"## ![image.png](attachment:image.png)","1ae71e0d":"**Referencia**","a886f85f":"En los siguientes puntos se analizar\u00e1 el dataset de Airbnb de la ciudad de New York, datos del a\u00f1o 2019. Se estudiar\u00e1n los distintos factores que afectan el precio del inmueble y por \u00faltimo se realizar\u00e1 una predicci\u00f3n del valor del mismo.","82dfd935":"Como se visualiza a coninuaci\u00f3n, el precio promedio de alquiler de las propiedades en New York se ubica en los USD 153.\nSe realiza un estudio m\u00e1s exhaustivo acerca de los precios y sus caracter\u00edsticas.","a95b727f":"Estos datos(p\u00fablicos) pertenecen a Airbnb y la fuente original puede encontrarse en http:\/\/insideairbnb.com\/.","4886b27b":"Este archivo incluye informaci\u00f3n relevante para hacer predicciones sobre el precio del inmueble.","eb985037":"**4.1 Neighbourhood Group**","e3f2689e":"**1.2 Contenido**","a08343b3":"**4.5 Correlaci\u00f3n entre variables**","da4d724b":"Por otra parte, en el siguiente cuadro se muestra la variabilidad de los datos seg\u00fan la ciudad, encontrando aqu\u00ed los valores m\u00ednimos y maximos pero principalmente analizando cuan distante son los precios en una misma ciudad.","b668d0e7":"**Limpieza de los datos**","d0f2927e":"Mediante el mapa de calor, se visualizan los puntos en donde los costos de rentar una vivienda se encarecen. ","0d821d13":"Con el fin de mejorar los resultados de predicci\u00f3n, se realiza una b\u00fasqueda de outliers para la posterior limpieza y modelado de los datos.","a5f01fbe":"**1. Introducci\u00f3n**","4253e142":"Se realiza una gr\u00e1fica de torta para determinar la distrubuci\u00f3n de los hospedajes que brinda Airbnb en New York. Se distibuyen casi de igual manera en la ciudad de Manhattan y en la ciudad de Brooklyn. Esto responde a la demanda que acarrea la gran oferta tur\u00edstica en esas zonas.","c7fbaa54":"**4.3 - Precios**","3bad10b5":"Se eliminan los features de \"host_name\" y \"name\" ya que no agregan valor al dataset y tampoco lo har\u00e1n en el modelado de los datos; por el contrario generar\u00e1 ruido a la hora realizar la predicci\u00f3n.","46335dd0":"Se dividen los datos en k particiones del mismo tama\u00f1o y entrenamos los distintos modelos con k-1 particiones. De aqu\u00ed se obtiene que el modelo XGBRegressor es el que mejor rinde.","cee7439c":"Mediante el siguiente c\u00f3digo, convertimos las variables categ\u00f3ricas a num\u00e9ricas para poder trabajar con ellas a la hora de predecir el precio del inmueble. ","8bc0fa0b":"**1.1 Contexto**","89b12dea":"# \u00cdndice:\n1. **Introducci\u00f3n**\n2. **Importar librerias**\n3. **Cargar el dataset y limpieza de los datos**\n    - Cargar el dataset.\n    - Eliminar las columnas innecesarias.\n    - Eliminar y remplazar los valores faltantes.\n4. **Exploraci\u00f3n** \n5. **Predicci\u00f3n**\n","26eb60e6":"Si nos centramos en la ciudad de Manhattan podemos analizar los precios desglosados por barrio, desde Midtown a Marble Hill, observando la variaci\u00f3n de los precios (los m\u00e1ximos y m\u00ednimos).","7334e61e":"## 5 - Predicci\u00f3n del precio","aa5295f5":"**4.4 Valores At\u00edpicos**"}}