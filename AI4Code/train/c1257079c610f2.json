{"cell_type":{"46ccd700":"code","6d5bf10b":"code","cdf8f798":"code","b3ee381c":"code","bb12e020":"code","0e8237c0":"code","24db6028":"code","81cd947f":"code","e1f1afed":"code","60e41d35":"code","ccc6c458":"code","80901782":"code","baaa2589":"code","03f73f5c":"code","27d21b31":"code","8c218be5":"code","0e8c659e":"code","24206885":"code","5b377563":"code","94474500":"code","902b9096":"code","0e3fc85e":"code","df65d1d1":"code","160b27c0":"code","a926485f":"code","92943710":"code","cf80008a":"code","897f521c":"markdown","9a209366":"markdown","64c99450":"markdown","174cc122":"markdown","80c7bb4e":"markdown","0f06496e":"markdown","6a08bafa":"markdown","fa1e6847":"markdown","4af6ec6e":"markdown","5dddab8c":"markdown","5355894c":"markdown","542c5e41":"markdown","c2a4bb03":"markdown","06b77c64":"markdown","1def425b":"markdown","b369437d":"markdown"},"source":{"46ccd700":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport re\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6d5bf10b":"books = pd.read_csv('..\/input\/book-recommendation-dataset\/Books.csv',low_memory=False)\nratings = pd.read_csv('..\/input\/book-recommendation-dataset\/Ratings.csv',low_memory=False)\nusers = pd.read_csv('..\/input\/book-recommendation-dataset\/Users.csv',low_memory=False)","cdf8f798":"users.head()","b3ee381c":"ratings.head()","bb12e020":"books.head()","0e8237c0":"books.shape","24db6028":"users.shape","81cd947f":"ratings.shape","e1f1afed":"# There is no numeric column. Expecting 'Year-Of-Publication' and maybe 'ISBN'\n\nbooks._get_numeric_data().columns","60e41d35":"books.select_dtypes(include=['object']).columns","ccc6c458":"# Fixing mismatch information - in 'Year-Of-Publication' is Publishers name\n\nbooks['Year-Of-Publication'].unique()","80901782":"# Creating list of columns, which will be changed\ncolumns_extraction = ['Year-Of-Publication', 'Book-Author', 'Book-Title', 'Publisher']\n\n# Creating list with values, which will fixed the problem\nchange_078946697X = [2000, 'Michael Teitelbaum', 'DK Readers: Creating the X-Men, How It All Began (Level 4: Proficient Readers)', 'DK Publishing Inc']\nchange_0789466953 = [2000, 'James Buckley', 'DK Readers: Creating the X-Men, How Comic Books Come to Life (Level 4: Proficient Readers)', 'DK Publishing Inc']\nchange_2070426769 = [2003, 'Jean-Marie Gustave Le Cl\u00c3?\u00c2\u00a9zio', \"Peuple du ciel, suivi de 'Les Bergers'\", 'Gallimard']\n\n# Changing the values in the books\nbooks.loc[books['ISBN']=='078946697X', columns_extraction] = change_078946697X\nbooks.loc[books['ISBN']=='0789466953', columns_extraction] = change_0789466953\nbooks.loc[books['ISBN']=='2070426769', columns_extraction] = change_2070426769","baaa2589":"# Transformation column 'Year-Of-Publication' into the integer\n\nbooks['Year-Of-Publication'] = books.loc[books['Year-Of-Publication'].notna(), 'Year-Of-Publication'].astype(int)","03f73f5c":"# Displays the years with the most published books\n\nbooks['Year-Of-Publication'].value_counts().head(10)","27d21b31":"# Distribution books in time\n\nbins_year = [1900, 1950, 1960, 1970, 1980, 1990, 1995, 2000, 2005, 2010]\nsns.histplot(data=books, x=books['Year-Of-Publication'], bins=bins_year)\nplt.show()","8c218be5":"# Displaying individual ratings, a large number with a value of 0\n# may indicate that a result is missing - Need to be inspected\n\nsns.countplot(x=ratings['Book-Rating'],data=ratings)\nplt.show()","0e8c659e":"# Book rating distribution without '0'\n\nratings_without_zero = ratings[ratings['Book-Rating']!=0] \nsns.countplot(x=ratings_without_zero['Book-Rating'],data=ratings_without_zero)\nplt.show()","24206885":"ratings_books = ratings.merge(books, on ='ISBN', how='left')","5b377563":"ratings_books_users = ratings_books.merge(users, on='User-ID', how='left')","94474500":"# Removing unnecessary columns\n\nratings_books_users.drop(columns=['Image-URL-S', 'Image-URL-M', 'Image-URL-L'], inplace=True)","902b9096":"# In the filter we will not count with books with Book-Rating equals to 0\n# Showing most affected books\n\nratings_books_users[ratings_books_users['Book-Rating']==0].groupby(['ISBN', 'Book-Title']).size().sort_values(ascending=False).reset_index().head(5)","0e3fc85e":"#key_words = []\n#users_input = input('Zadejte n\u00e1zev knihy :')\n#key_words.append(users_input)\n#key_words\n\n# User can write Name of the Book as the input, for the purpouse of running the test \n# we will create just the list with the name\n\nkey_words = ['lord of the ring']","df65d1d1":"# Creating the list (users_ids) containing the 'User-ID' who also rated the specified book and gave a rating higher than 6\n\nusers_ids = list(ratings_books_users.loc[(ratings_books_users['Book-Title'].str.contains('|'.join(key_words), na=False, case=False)) & (ratings_books_users['Book-Rating']>6), 'User-ID'].values)","160b27c0":"# Creating the list (ISBN_book) containing 'ISBN' that matches the specified book title\n\nISBN_book = list(ratings_books_users.loc[(ratings_books_users['Book-Title'].str.contains('|'.join(key_words), na=False, case=False)), 'ISBN'].values)","a926485f":"# For the filtered 'User-ID' it takes the book title 'Book-Title' (deletes the book title entered by the user) where the book titles are contained and at the same time where the rating is not equal to zero\n\nextraction = ratings_books_users[(~ratings_books_users['ISBN'].isin(ISBN_book)) & (ratings_books_users['User-ID'].isin(users_ids)) & (ratings_books_users['Book-Title'].notna()) & (ratings_books_users['Book-Rating']!=0)]","92943710":"# Only those 'ISBNs' with more than 10 ratings are included\n\nfilter_books = extraction[extraction.groupby('ISBN')['Book-Rating'].transform('count')>10]","cf80008a":"# The average 'Book-Rating' is calculated for the entered 'ISBN' and 'Book-Title' and the result of the TOP10 books with the highest average rating is created\n\nfilter_books = filter_books.groupby(['ISBN', 'Book-Title'])['Book-Rating'].mean().sort_values(ascending=False).reset_index()[['Book-Title', 'Book-Rating']]\nfilter_books.head(10)","897f521c":"TO DO: Inspect ratings with 0 value, does it has a information inside? - Because almost 75 % of 'Book-Rating' is not used in filter.","9a209366":"TO DO: Try to tune the parametr ['Book-Rating']>6","64c99450":"# Result","174cc122":"## Exploratory Data Analysis","80c7bb4e":"TO DO: Inspect the year '0', '2024', '2037'","0f06496e":"Note: Its still in the progress phase. Work which has to be done is in the TO DO section.","6a08bafa":"## Book Recommendation System Creation","fa1e6847":"TO DO: Inspect the count of filtered books. Could be there better number?","4af6ec6e":"## Merging DFs","5dddab8c":"## Goal","5355894c":"Create a book recommendation system based on a specific user selection","542c5e41":"A book recommendation system has been created, which provides a result based on the evaluation of other users. The user-entered book title is compared in a database, and users who have rated the book entered and given a rating greater than 6 are selected to ensure they liked the book.","c2a4bb03":"## Data Transformation","06b77c64":"TO DO: Inspect if the mean is the right choice.\nValidate\/test the recommendation system. A high number of books was lost during filtering.","1def425b":"## Numerical vs. Categorical Data Types","b369437d":"## Data Loading"}}