{"cell_type":{"30989658":"code","fabbbfcc":"code","ce1782c6":"code","0c814714":"code","43299fd6":"code","bdc0d481":"code","0fd47cdb":"code","a0b52c54":"code","4489ca06":"code","e653a636":"code","a3ea6a25":"code","bcf26472":"code","10380e21":"code","b0524263":"code","61764c70":"code","447ef317":"code","e05159cc":"code","2031015f":"code","53e766b2":"code","72a36ce1":"code","a6560968":"markdown","e2eb9b6d":"markdown","9849c489":"markdown","186aa6c8":"markdown","c3b0b29b":"markdown","570bb0d8":"markdown","bed563f8":"markdown"},"source":{"30989658":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fabbbfcc":"print(np.__version__)\nprint(pd.__version__)","ce1782c6":"df = pd.read_csv('\/kaggle\/input\/carsdata\/data.csv')\ndf.head()","0c814714":"df.groupby('Make')['MSRP'].mean().astype(int).sort_values(ascending=False) #converts exp form into numbers","43299fd6":"df[\"Engine HP\"].loc[df[\"Year\"]>=2015].isnull().sum()","bdc0d481":"mean_hp_before = df[\"Engine HP\"].mean()\nround(mean_hp_before)","0fd47cdb":"mean_fillna = df[\"Engine HP\"].fillna(value=mean_hp_before)\nmean_hp_after = mean_fillna.mean()\nround(mean_hp_after)","a0b52c54":"dropped_duplicate_columns = df[df[\"Make\"]==\"Rolls-Royce\"][[\"Engine HP\",\"Engine Cylinders\",\"highway MPG\"]].drop_duplicates()\n#By default, it removes duplicate rows based on all columns.\ndropped_duplicate_columns","4489ca06":"type(dropped_duplicate_columns)","e653a636":"X = dropped_duplicate_columns.values\nX","a3ea6a25":"X.shape","bcf26472":"XTX = X.T @ X #(3,7) X (7,3) = (3,3)\nXTX","10380e21":"inv_XTX = np.linalg.inv(XTX)\ninv_XTX","b0524263":"inv_XTX.sum()","61764c70":"y = np.array([1000,1100,900,1200,1000,850,1300])\ny, y.shape","447ef317":"inv_XTX.shape","e05159cc":"X.shape","2031015f":"XTX_X = inv_XTX @ X.T \nXTX_X #gives 3X7","53e766b2":"w = XTX_X.dot(y)\nw","72a36ce1":"w[0]","a6560968":"### Question 5\n\n* Calculate the average \"Engine HP\" in the dataset. \n* Use the `fillna` method and to fill the missing values in \"Engine HP\" with the mean value from the previous step. \n* Now, calcualte the average of \"Engine HP\" again.\n* Has it changed? \n\nRound both means before answering this questions. You can use the `round` function for that:\n\n```python\nprint(round(mean_hp_before))\nprint(round(mean_hp_after))\n```","e2eb9b6d":"### Question 1\n\nWhat's the version of NumPy that you installed? \n\nYou can get the version information using the `__version__` field:\n\n### Question 2\n\nWhat's the version of Pandas? ","9849c489":"### Getting the data \n\nFor this homework, we'll use the same dataset as for the next session - the car price dataset.\n\nDownload it from [here](https:\/\/raw.githubusercontent.com\/alexeygrigorev\/mlbookcamp-code\/master\/chapter-02-car-price\/data.csv).\n\nYou can do it with wget:\n\n```bash\nwget https:\/\/raw.githubusercontent.com\/alexeygrigorev\/mlbookcamp-code\/master\/chapter-02-car-price\/data.csv\n```\n\nOr just open it with your browser and click \"Save as...\".\n\nNow read it with Pandas. ","186aa6c8":"### Question 4\n\nSelect a subset of cars after year 2015 (inclusive, i.e. 2015 and after). How many of them have missing values for Engine HP?","c3b0b29b":"### Question 3\n\nWhat's the average price of BMW cars in the dataset?\n","570bb0d8":"### Questions 7 \n\n* Create an array `y` with values `[1000, 1100, 900, 1200, 1000, 850, 1300]`.\n* Multiply the inverse of `XTX` with the transpose of `X`, and then multiply the result by `y`. Call the result `w`.\n* What's the value of the first element of `w`?.\n\n> **Note**: You just implemented linear regression. We'll talk about it in the next lesson.","bed563f8":"### Question 6\n\n* Select all the \"Rolls-Royce\" cars from the dataset.\n* Select only columns \"Engine HP\", \"Engine Cylinders\", \"highway MPG\".\n* Now drop all duplicated rows using `drop_duplicates` method (you should get a dataframe with 7 rows).\n* Get the underlying NumPy array. Let's call it `X`.\n* Compute matrix-matrix multiplication between the transpose of `X` and `X`. To get the transpose, use `X.T`. Let's call the result `XTX`.\n* Invert `XTX`.\n* What's the sum of all the elements of the result?\n\nHint: if the result is negative, re-read the task one more time"}}