{"cell_type":{"15056b99":"code","b4c34a04":"code","09de011c":"code","031ea091":"code","83ace243":"code","b8100e7f":"code","d1f36ac5":"code","21cab638":"code","c59fafcf":"code","bfc37835":"markdown"},"source":{"15056b99":"#Importign libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport plotly.express as px","b4c34a04":"#Read Files block\ntrain = pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-1\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-1\/test.csv')\nsubmission = pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-1\/submission.csv')\n#Rename Columns\ntrain = train.rename(columns={'Province\/State' : 'State', 'Country\/Region' : 'Country'})\ntest = test.rename(columns={'Province\/State' : 'State', 'Country\/Region' : 'Country'})","09de011c":"# Groupby and adding lag and active new columns\ntrain = train.groupby(['Country','Date'])[['ConfirmedCases','Fatalities']].sum().reset_index()\ntrain['Prev_day_cc'] = train.groupby('Country')['ConfirmedCases'].shift(1)\ntrain['Prev_day_cc'] = train['Prev_day_cc'].fillna(0)\ntrain['New_active'] = train['ConfirmedCases'] - train['Prev_day_cc']\ntrain['Date'] = pd.to_datetime( train['Date'])","031ea091":"train['day_since_1000_cc'] = train[train.ConfirmedCases>=1000].groupby('Country')['Date'].rank()\ntrain['day_since_10_d'] = train[train.Fatalities>=10].groupby('Country')['Date'].rank()","83ace243":"train['Country'].unique()","b8100e7f":"df_korea = train[train['Country']=='Korea, South']\ndf_korea","d1f36ac5":"fig = px.line(train[train.day_since_1000_cc>0], x=\"Date\", y=\"ConfirmedCases\")\nfig.update_layout(title='Confirmed cases since they crossed 1000 cases',\n                   xaxis_title='Date',\n                   yaxis_title='No. of Deaths')\nfig.show()","21cab638":"sub = pd.read_csv(\"\/kaggle\/input\/submission\/submission.csv\")\nsub","c59fafcf":"sub = pd.read_csv(\"\/kaggle\/input\/submission\/submission.csv\")\nsubmission.head()\nsubmission.to_csv(\"submission.csv\", index=False)","bfc37835":"## This Forecasting is for korean!"}}