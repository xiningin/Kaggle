{"cell_type":{"8045d512":"code","83a61f93":"code","87ae133d":"code","b66ad9c4":"code","cc19652b":"code","38def4d3":"code","6ca21195":"code","21215c13":"code","fc4c7e54":"code","2df954f0":"code","0922f4d2":"code","8eabf85e":"code","8563d3b9":"code","bcddb3eb":"code","1bc09613":"code","9b0e8ee8":"code","fcea393f":"code","16629612":"code","ec636dba":"code","4dcb4f87":"code","191f2c97":"code","c28ca7ea":"code","f6c4a66f":"code","1b691837":"code","9fb2d7ee":"code","31f53e94":"code","3d67c17a":"code","d5c99bac":"code","9ac13eae":"code","d8193a02":"code","d7d11e54":"code","1c84c6db":"markdown","a0a8d075":"markdown","61e948aa":"markdown","9f979cbf":"markdown","36b1d9aa":"markdown","2c549759":"markdown","0a4388b6":"markdown","5b07c48b":"markdown","0a98b999":"markdown"},"source":{"8045d512":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport os\nprint(os.listdir(\"..\/input\"))","83a61f93":"train = pd.read_csv(\"..\/input\/train.csv\")\ntrain.head()","87ae133d":"test = pd.read_csv(\"..\/input\/test.csv\")\ntest.head()","b66ad9c4":"train.info()","cc19652b":"test.info()","38def4d3":"all = pd.concat([train, test], sort = False)\nall.info()","6ca21195":"#Fill Missing numbers with median\nall['Age'] = all['Age'].fillna(value=all['Age'].median())\nall['Fare'] = all['Fare'].fillna(value=all['Fare'].median())","21215c13":"all.info()","fc4c7e54":"sns.catplot(x = 'Embarked', kind = 'count', data = all) #or all['Embarked'].value_counts()","2df954f0":"all['Embarked'] = all['Embarked'].fillna('S')\nall.info()","0922f4d2":"#Age\nall.loc[ all['Age'] <= 16, 'Age'] = 0\nall.loc[(all['Age'] > 16) & (all['Age'] <= 32), 'Age'] = 1\nall.loc[(all['Age'] > 32) & (all['Age'] <= 48), 'Age'] = 2\nall.loc[(all['Age'] > 48) & (all['Age'] <= 64), 'Age'] = 3\nall.loc[ all['Age'] > 64, 'Age'] = 4 ","8eabf85e":"#Title\nimport re\ndef get_title(name):\n    title_search = re.search(' ([A-Za-z]+\\.)', name)\n    \n    if title_search:\n        return title_search.group(1)\n    return \"\"","8563d3b9":"all['Title'] = all['Name'].apply(get_title)\nall['Title'].value_counts()","bcddb3eb":"all['Title'] = all['Title'].replace(['Capt.', 'Dr.', 'Major.', 'Rev.'], 'Officer.')\nall['Title'] = all['Title'].replace(['Lady.', 'Countess.', 'Don.', 'Sir.', 'Jonkheer.', 'Dona.'], 'Royal.')\nall['Title'] = all['Title'].replace(['Mlle.', 'Ms.'], 'Miss.')\nall['Title'] = all['Title'].replace(['Mme.'], 'Mrs.')\nall['Title'].value_counts()","1bc09613":"#Cabin\nall['Cabin'] = all['Cabin'].fillna('Missing')\nall['Cabin'] = all['Cabin'].str[0]\nall['Cabin'].value_counts()","9b0e8ee8":"#Family Size & Alone \nall['Family_Size'] = all['SibSp'] + all['Parch'] + 1\nall['IsAlone'] = 0\nall.loc[all['Family_Size']==1, 'IsAlone'] = 1\nall.head()","fcea393f":"#Drop unwanted variables\nall_1 = all.drop(['Name', 'Ticket'], axis = 1)\nall_1.head()","16629612":"all_dummies = pd.get_dummies(all_1, drop_first = True)\nall_dummies.head()","ec636dba":"all_train = all_dummies[all_dummies['Survived'].notna()]\nall_train.info()","4dcb4f87":"all_test = all_dummies[all_dummies['Survived'].isna()]\nall_test.info()","191f2c97":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(all_train.drop(['PassengerId','Survived'],axis=1), \n                                                    all_train['Survived'], test_size=0.30, \n                                                    random_state=101, stratify = all_train['Survived'])","c28ca7ea":"from sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier","f6c4a66f":"ada = AdaBoostClassifier(DecisionTreeClassifier(),n_estimators=100, random_state=0)\nada.fit(X_train,y_train)","1b691837":"predictions = ada.predict(X_test)","9fb2d7ee":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,predictions))","31f53e94":"print (f'Train Accuracy - : {ada.score(X_train,y_train):.3f}')\nprint (f'Test Accuracy - : {ada.score(X_test,y_test):.3f}')","3d67c17a":"TestForPred = all_test.drop(['PassengerId', 'Survived'], axis = 1)","d5c99bac":"t_pred = ada.predict(TestForPred).astype(int)","9ac13eae":"PassengerId = all_test['PassengerId']","d8193a02":"adaSub = pd.DataFrame({'PassengerId': PassengerId, 'Survived':t_pred })\nadaSub.head()","d7d11e54":"adaSub.to_csv(\"1_Ada_Submission.csv\", index = False)","1c84c6db":"# Import Data","a0a8d075":"****Check Accuracy","61e948aa":"****Build AdaBoost","9f979cbf":"## Combine train and test","36b1d9aa":"****Train\/Test Split","2c549759":"****Check Accuracy","0a4388b6":"****Extra Features:","5b07c48b":"****Final Predictions","0a98b999":"# Import Libraries"}}