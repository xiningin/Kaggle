{"cell_type":{"425798ab":"code","636c8d2f":"code","881b55e7":"code","68816361":"code","572187f4":"code","c1b202d8":"code","9b24e77d":"code","6af532ce":"code","c9a368f5":"code","ccec106e":"code","e5d36329":"code","31bfc459":"code","6825a18c":"code","7ae12a44":"code","9c9176e5":"code","d8ae1576":"code","578dc3e5":"code","e525978c":"code","c95c10c7":"code","0bd3675e":"code","a9be1df0":"code","957def6a":"code","f8c6b2ef":"code","3f364894":"code","e138ae09":"code","75c7c50a":"code","a7c8b7ed":"code","0eefc381":"markdown","ec2cbc5c":"markdown"},"source":{"425798ab":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","636c8d2f":"df=pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv')\ndf.head()","881b55e7":"df.info()","68816361":"df['region'].unique()","572187f4":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","c1b202d8":"#visualising the dependency of region on insurance\nsns.barplot(x='region',y='charges',data=df)","9b24e77d":"sns.boxplot(x='charges',data=df)","6af532ce":"sns.boxplot(x='charges',y='region',data=df)","c9a368f5":"df.hist()","ccec106e":"#correlation between the columns\nplt.rcParams['figure.figsize']=(12,8)\ncorr=df.corr()\nsns.heatmap(corr,fmt='0.2f',annot=True,cmap=plt.cm.Blues)","e5d36329":"#converting the object dtypes to int64\ndf['sex']=df['sex'].map({'male':0,'female':1})\ndf['smoker']=df['smoker'].map({'yes':1,'no':0})\ndf['region']=df['region'].map({'southwest':1,'southeast':2,'northwest':3,'northeast':4})","31bfc459":"#columns and labels from the dataset\nX=df.iloc[:,:-1]\ny=df.iloc[:,-1]","6825a18c":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=123)","7ae12a44":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_absolute_error,mean_squared_error","9c9176e5":"lr=LinearRegression()\nlr.fit(X_train,y_train)\n","d8ae1576":"preds=lr.predict(X_test)","578dc3e5":"print('mean absolute error:',mean_absolute_error(preds,y_test))","e525978c":"results=pd.DataFrame({'y_test':y_test.values,'predictions':preds})","c95c10c7":"results.head()","0bd3675e":"lr.score(X_train,y_train)","a9be1df0":"#Scaling the data\nfrom sklearn.preprocessing import StandardScaler\nscaler=StandardScaler()\nX_train_scaled=scaler.fit_transform(X_train)\nX_test_scaled=scaler.fit(X_test)","957def6a":"from sklearn.tree import DecisionTreeRegressor\ndt=DecisionTreeRegressor()\ndt.fit(X_train,y_train)","f8c6b2ef":"dt.score(X_train,y_train)","3f364894":"dt_preds=dt.predict(X_test)\nprint('mean squared error',mean_squared_error(dt_preds,y_test))\nprint('mean absolute error',mean_absolute_error(dt_preds,y_test))","e138ae09":"from sklearn.model_selection import GridSearchCV\nparams={'max_depth':np.arange(2,10),'min_samples_leaf':np.arange(2,8)}\ndt_best=GridSearchCV(estimator=dt,param_grid=params,verbose=1,cv=5)\ndt_best.fit(X_train,y_train)","75c7c50a":"dt_best.best_params_,dt_best.best_score_","a7c8b7ed":"preds_best=dt_best.predict(X_test)\nprint('mean squared error',mean_squared_error(preds_best,y_test))\nprint('mean absolute error',mean_absolute_error(preds_best,y_test))","0eefc381":"# Decision Tree","ec2cbc5c":"# Linear Regression"}}