{"cell_type":{"d8ef9bed":"code","f53be0c7":"code","1e6609e9":"code","ccf3d7ed":"code","c5ec0806":"code","ac304dec":"code","b751107a":"code","6fc80928":"code","9240c875":"code","7246e97b":"code","098ec4fc":"code","d2eb4e6e":"code","8acd4e8a":"code","2680d96c":"code","df93299c":"code","54ccd5ed":"code","91062400":"code","cc7e08c2":"code","f8b69b71":"code","8b8e8574":"code","0099ae56":"code","55ad4bcc":"code","5005776a":"markdown","52ffe3ad":"markdown","178fac4c":"markdown","fae387f2":"markdown","6a3ed6a3":"markdown","58534b51":"markdown","f534cec3":"markdown"},"source":{"d8ef9bed":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns","f53be0c7":"df = pd.read_csv('\/kaggle\/input\/star-dataset\/6 class csv.csv')\ndf.head()","1e6609e9":"df.columns = df.columns.str.replace(' ', '_') \ndf.head()","ccf3d7ed":"df.info()","c5ec0806":"df.describe()","ac304dec":"df['Star_type'].value_counts()","b751107a":"sns.heatmap(data = df.corr(), annot = True)","6fc80928":"sns.boxplot(x=\"Star_type\", y=\"Temperature_(K)\",\n             palette=[\"darkorange\", \"red\"],\n            data=df)\n","9240c875":"sns.boxplot(x=\"Star_type\", y=\"Luminosity(L\/Lo)\",\n             palette=[\"lightyellow\", \"yellow\"],\n            data=df)","7246e97b":"sns.boxplot(x=\"Star_type\", y=\"Radius(R\/Ro)\",\n             palette=[\"paleturquoise\", \"lightseagreen\"],\n            data=df)","098ec4fc":"sns.boxplot(x=\"Star_type\", y=\"Absolute_magnitude(Mv)\",\n             palette=[\"aqua\", \"silver\"],\n            data=df)","d2eb4e6e":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\n\nfor col in df.columns.values:\n    if df[col].dtypes=='object':\n        df[col]=le.fit_transform(df[col])","8acd4e8a":"from sklearn.model_selection import train_test_split\n\nX=df.drop('Star_type',axis=1)\ny=df['Star_type']\n\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=18)","2680d96c":"X","df93299c":"y","54ccd5ed":"from sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler(feature_range=(0, 1))\nrescaledX_train = scaler.fit_transform(X_train)\nrescaledX_test = scaler.transform(X_test)","91062400":"from sklearn.linear_model import LogisticRegression\n\nlr= LogisticRegression()\n\nlr.fit(rescaledX_train,y_train)","cc7e08c2":"from sklearn.metrics import confusion_matrix\n\ny_pred = lr.predict(rescaledX_test)\nprint(\"Accuracy of logistic regression classifier: \", lr.score(rescaledX_test,y_test))\nconfusion_matrix(y_test,y_pred)","f8b69b71":"from sklearn.ensemble import RandomForestClassifier\nrfc=RandomForestClassifier()","8b8e8574":"rfc.fit(rescaledX_train,y_train)","0099ae56":"y_pred = rfc.predict(rescaledX_test)\n\nprint(\"Accuracy of random forest classifier: \", rfc.score(rescaledX_test,y_test))\n\nconfusion_matrix(y_test,y_pred)","55ad4bcc":"from sklearn.model_selection import cross_val_score\n\nmodel = RandomForestClassifier()\ncross_val_score(rfc, X_train, y_train, cv=5, scoring='accuracy')","5005776a":"**Ok, we saw that there is no missing data**","52ffe3ad":"**LOGISTIC REGRESSION**","178fac4c":"**The purpose of this notebook is to find a way to predict a Star type thanks to some features**\n\n![](https:\/\/i.la-croix.com\/729x486\/smart\/2019\/08\/02\/1201038901\/Cette-pratique-essorenviron-5-selon-lassociation-francaise-dastronomie-AFA-consiste-choisir-destination-vacances-fonction-proprete_0.jpg)","fae387f2":"**RANDOM FOREST CLASSIFIER**","6a3ed6a3":" **The data seems to be well-balanced. Now, let's see the impact of the features on the type of star.**","58534b51":"**The random forest classifier model is satisfying, so we can pick it** ","f534cec3":"**All the features are important. We can begin to make some machine learning**"}}