{"cell_type":{"e1e3a6eb":"code","75f43133":"code","ada8727f":"code","a673e89d":"code","1e872eec":"code","f86bd303":"code","3b367cde":"code","72a83eb7":"code","e42985e5":"code","7b3a1093":"code","dc9288aa":"code","219d35ef":"code","43f13ae6":"code","5207af4e":"code","48813011":"code","3838a7a7":"code","88209f3e":"code","27514c8d":"code","ab36f88d":"code","8df883b6":"code","b3716000":"code","65c889df":"code","70b6c011":"code","cc6e4bb6":"code","b37241c4":"code","650f5257":"code","46333b0c":"code","53bc2699":"code","4d6e35e6":"code","f45f5112":"code","0ed26218":"code","16db4cc7":"code","7233d082":"code","ec4080b3":"code","a04999df":"code","5b4af592":"code","e8f27f07":"code","7620b708":"code","677127f9":"code","40e78512":"code","bc7823f1":"code","e8cdf600":"code","91f2101c":"code","f356d85d":"code","31b480da":"code","03541336":"code","7ca8dc04":"code","060c2bca":"markdown","702c9d58":"markdown","6071a006":"markdown","619dbc34":"markdown","dec204d4":"markdown","3e8f65f2":"markdown","69d229a0":"markdown","74f7ce29":"markdown","d79c5c6e":"markdown","37eacf2c":"markdown","f3d52ad3":"markdown","cb976e81":"markdown","9037516d":"markdown","d66c15db":"markdown","12706007":"markdown","f07b574b":"markdown","01bd3558":"markdown","d0511233":"markdown","72e97918":"markdown"},"source":{"e1e3a6eb":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#import chart_studio.plotly as py\nimport plotly    \nimport plotly.io as pio\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport cufflinks as cf\nimport plotly.graph_objects as go\nimport warnings\nwarnings.filterwarnings('ignore')","75f43133":"class color:\n    RED = '\\033[91m'\n    GREEN = '\\033[92m'\n    YELLOW = '\\033[93m'\n    BLUE = '\\033[94m'\n    PURPLE = '\\033[95m'\n    CYAN = '\\033[96m'\n    B = '\\033[97m'\n    BOLD = '\\033[1m'\n    DARKCYAN = '\\033[36m'\n    UNDERLINE = '\\033[4m'\n    END = '\\033[0m'  ","ada8727f":"dataset19 = pd.read_csv('..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')\ndataset20 = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\ndataset21 = pd.read_csv('..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv')\ndata19 = dataset19.drop([0],axis=0)\ndata20 = dataset20.drop([0],axis=0)\ndata21 = dataset21.drop([0],axis=0)","a673e89d":"# Read the necessary data for section 1\n\nbios19 = data19[['Q1','Q2','Q3','Q6','Q10','Q11','Q15']].rename(columns={'Q1':'Age_Group',\n                                                       'Q2':'Gender',\n                                                       'Q3':'Country',\n                                                       'Q6':'Company_Size',\n                                                       'Q10':'Annual_Income',\n                                                       'Q11':'ML_Cloud_Exp',\n                                                        'Q15':'Coding Years'})\n\nbios20 = data20[['Q1','Q2','Q3','Q6','Q20','Q24','Q25']].rename(columns={'Q1':'Age_Group',\n                                                        'Q2':'Gender',\n                                                        'Q3':'Country',\n                                                        'Q20': 'Company_Size',\n                                                        'Q24':'Annual_Income',\n                                                        'Q25':'ML_Cloud_Exp',\n                                                        'Q6':'Coding Years'})\n\nbios21 = data21[['Q1','Q2','Q3','Q6','Q21','Q25','Q26']].rename(columns={'Q1':'Age_Group',\n                                                        'Q2':'Gender',\n                                                        'Q3':'Country',\n                                                        'Q21': 'Company_Size',\n                                                        'Q25':'Annual_Income',\n                                                        'Q26':'ML_Cloud_Exp',\n                                                        'Q6':'Coding Years'})\n\n# Insert years for each year\nbios19.insert(0,'Year','2019')\nbios20.insert(0,'Year','2020')\nbios21.insert(0,'Year','2021')\n\n# combine the data from 2019 to 2021\nBG_Data = pd.concat([bios19, bios20, bios21])\nBG_Data.insert(5,'Counter',0)","1e872eec":"# Data housekeeping: replacements\nBG_Data['Gender'] = BG_Data['Gender'].replace('Male','Man')\nBG_Data['Gender'] = BG_Data['Gender'].replace('Female','Woman')\n\nBG_Data['Country'] = BG_Data['Country'].replace('United Kingdom of Great Britain and Northern Ireland','United Kingdom')\nBG_Data['Country'] = BG_Data['Country'].replace('Iran, Islamic Republic of...','Iran')\nBG_Data['Country'] = BG_Data['Country'].replace('Other','Other Countries')\nBG_Data['Country'] = BG_Data['Country'].replace('United States of America','USA')\nBG_Data['Country'] = BG_Data['Country'].replace('United Arab Emirates','UAE')\nBG_Data['Country'] = BG_Data['Country'].replace('I do not wish to disclose my location','Undisclosed')","f86bd303":"# Slice for man and woman genders only\nManWoman = BG_Data[(BG_Data['Gender']=='Man') | (BG_Data['Gender']=='Woman')]","3b367cde":"# Table showing percentage of women participation in data science \n# This also prepares the ground for report and visuals generation\n\na = ManWoman.groupby(['Country'])['Counter'].count().reset_index()\nb = ManWoman.groupby(['Country','Gender'])['Counter'].count().reset_index()\nc = pd.merge(a,b, on='Country').rename(columns={'Counter_x':'Respondents','Counter_y':'Counter'})\n\nd = c[(c['Gender']=='Woman')]\nd['Women_Participation_Percent'] = round((d['Counter']\/d['Respondents']),2)*100\nd = d.sort_values('Women_Participation_Percent', ascending=False)\n\nd1 = d.sort_values('Women_Participation_Percent', ascending=False)[0:15]\nd2 = d.sort_values('Women_Participation_Percent', ascending=True)[0:15]","72a83eb7":"# Generating reports and Visuals for each country \n\nprint(color.BOLD+color.BLUE+color.UNDERLINE+\n      'Countries Gender Analysis from the Country with the Best Women Representation to the Least 2019 - 2020','\\n'+color.END)\n\n#Countries are arranged in descending order from the most respondents to the least\nnumba = 0\ncountry = d['Country'].unique()\nfor c in country:\n    numba +=1\n    tot = ManWoman[(ManWoman['Country']==c)]\n    print(color.BLUE,color.BOLD,'\\n',numba,'Country Name:',c,'|','Total =',len(tot),color.END)\n    k = tot.groupby(['Year','Gender'])['Counter'].count().reset_index().sort_values('Counter',ascending=False)\n    yea = tot['Year'].value_counts().reset_index(name='Count').rename(columns={'index':'Year'})\n    \n    year = yea['Year'].unique()\n    year = ManWoman['Year'].unique()\n    for y in year:\n        tot2 = tot[(tot['Country']==c) & (tot['Year']==y)]\n        print(color.BOLD+color.GREEN+'\\n',\n              'Year =',y,'|',\n              'Total =',len(tot2),color.END)\n    \n        number1=0\n        gender = ManWoman['Gender'].unique()\n        for g in gender:\n            number1+=1\n            k2 = tot2[(tot2['Country']==c) & (tot2['Gender']==g) & (tot2['Year']==y)]\n            per = round(len(k2)\/len(tot2),2)*100 if len(tot2)!=0 else''\n            print(number1,g,'=',len(k2),'|',per,'%')\n     \n    print(color.BOLD+color.GREEN+'\\n Cummulative(2019 to 2021) =',len(tot),color.END)\n    gender = ManWoman['Gender'].unique()\n    for g in gender:\n        tot3 = tot[(tot['Country']==c) & (tot['Gender']==g)]\n        average = round(len(tot3)\/len(tot),2)*100 if len(tot)!=0 else''\n        print(g,'=',len(tot3),'|',average,'%')\n    \n    \n# The Table that yielded the visuals \n    #print('\\n',k.reset_index(drop=True),'\\n')\n# Simple Country Specific Visualization\n    plt.title(c, fontsize=14)\n    sns.barplot(x ='Gender',y ='Counter', hue='Year',data=k)\n    plt.xlabel('Gender',fontsize=12)\n    plt.ylabel('Respondents',fontsize=12)\n    plt.show()","e42985e5":"number=0\nfor i in [d1,d2]:\n    number+=1\n    print(color.BOLD+color.GREEN,'Visuals:',number,color.END)\n    if number == 1:\n        print(color.BLUE,color.BOLD,'Top 15 Countries with the Best Women Parcticipation in Data Science 2019-2021')\n    else:\n        print(color.BLUE,color.BOLD,'Bottom 15 Countries with the Lowest Women Parcticipation in Data Science 2019-2021')\n    fig = go.Figure()\n    fig = px.bar(i, y='Women_Participation_Percent', x ='Country',text='Women_Participation_Percent')\n    fig.update_traces(texttemplate='%{text:.3s}', textposition='outside')\n    fig.update_layout(uniformtext_minsize=8)\n    fig.update_layout(xaxis_tickangle=-45)\n    fig.show('notebook')","7b3a1093":"# stack19 = Stack Overflow's Developers' Survey Dataset for 2019\n# stack20 = Stack Overflow's Developers' Survey Dataset for 2020\n# stack21 = Stack Overflow's Developers' Survey Dataset for 2021\n\nstack19 = pd.read_csv('..\/input\/stack-overflow-developer-survey-results-2019\/survey_results_public.csv')\nstack20 = pd.read_csv('..\/input\/stack-overflow-developer-survey-2020\/survey_results_public.csv')\nstack21 = pd.read_csv('..\/input\/stack-overflow-developer-survey-results-2021\/survey_results_public.csv')","dc9288aa":"# Slice out the Gender column - the only column important to us from the developers' survey\nstack_Gender19 = stack19[['Gender']]\nstack_Gender20 = stack20[['Gender']]\nstack_Gender21 = stack21[['Gender']]\n\n# Insert the different years for each year's dataset\nstack_Gender19.insert(0,'Year','2019')\nstack_Gender20.insert(0,'Year','2020')\nstack_Gender21.insert(0,'Year','2021')\n\n# Combine Stack Overflows' dataset for the 3 years together in a single dataset \nstack_Gender = pd.concat([stack_Gender19, stack_Gender20, stack_Gender21])\nstack_Gender.insert(0,'Platform','StackOverflow')","219d35ef":"# The Kaggle Gender Dataset\n\nkaggle_Gender = BG_Data[['Year','Gender']]\nkaggle_Gender.insert(0,'Platform','Kaggle')","43f13ae6":"# Combine Kaggle and Stack Overflow's datasest together\nKaggle_Stack = pd.concat([kaggle_Gender,stack_Gender])\n\n#Create the Counter column useful for groupby\nKaggle_Stack.insert(3,'Counter',0)","5207af4e":"# I am only interested in the Man and Woman gender because that is our scope and because they comprise over 97% of the total\n# Slice out the man and woman datasets\n\nManWoman = Kaggle_Stack[(Kaggle_Stack['Gender']=='Man') | (Kaggle_Stack['Gender']=='Woman')]","48813011":"# Visualize the dataset using catplot. However, it is not enough to visualize the data we need to see the report comparing \n# ratio of men to women on the different platforms with respect to different years\n# Note that the analysis here is based on the sliced data of men and women and not on the overall dataset\n\n# code alert!! this is list comprehension to generate what is already in the above table however in a report format\n\nplatform = ManWoman['Platform'].unique()\nfor p in platform:\n    print(color.BOLD,color.GREEN,'\\n',p,'Platform Gender Representation',color.END)\n    year = ManWoman['Year'].unique()\n    for y in year:\n        tot = ManWoman[(ManWoman['Platform']==p) & (ManWoman['Year']==y)]\n        print(color.BLUE,color.BOLD,'\\n',y, '|','Total =',len(tot),color.END)\n        gender = ManWoman['Gender'].unique()\n        for g in gender:\n            k = ManWoman[(ManWoman['Platform']==p) & (ManWoman['Year']==y) & (ManWoman['Gender']==g)]\n            per = round(len(k)\/len(tot),2)*100 if len(tot)!= 0 else''\n            print(g,'=',len(k), '|',per,'%')\n    \n# visualization alert!! i love this seaborn catplot format it enables me combine 4 columns together at once\nMan_Woman_Groupby = ManWoman.groupby(['Platform','Year','Gender']).count().reset_index().sort_values('Counter',ascending=False)\nprint(color.BOLD,color.GREEN,'\\nMen vs. Women Representations on Kaggle and Stackoverflow Platforms 2019 - 2021',color.END)\nsns.catplot(x='Gender',y='Counter',hue='Year',col='Platform',kind='bar',data=Man_Woman_Groupby)\nplt.show()","3838a7a7":"# We are interested in the year gender, country and employees columns, so slice them out of the main dataset created above \n\nall_coys = BG_Data[['Year','Gender','Country','Company_Size']]\n#all_coys","88209f3e":"# Classify and replace the companies with respect to number of employees as specified above\n\nall_coys['Company_Classification'] = all_coys['Company_Size'].replace({'1000-9,999 employees':'Large',\n                                                                      '> 10,000 employees':'Large',\n                                                                      '250-999 employees':'Large',\n                                                                      '10,000 or more employees':'Large',\n                                                                      '50-249 employees':'Medium',\n                                                                      '0-49 employees':'Small',})\n\n# Check unique values to see if classification is correctly done\n#all_coys['Company_Classification'].unique()\nall_coys.insert(5, 'Counter',0)","27514c8d":"# Slice for Man and Woman from the final table\nMan_Woman_Size = all_coys[(all_coys['Gender']=='Man') | (all_coys['Gender']=='Woman')]\n#Man_Woman_Size","ab36f88d":"# Groupby Gender ,Year and  company classification to give you the final pictuer of men and women in different company sizes\nMan_Woman_Groupby = Man_Woman_Size.groupby(['Year','Gender','Company_Classification'])['Counter'].count().reset_index().sort_values('Counter',ascending=False)\n#Man_Woman_Groupby","8df883b6":"# Visualize and generated a mini report showing the ratio of men to women in the different company's sizes \n# with respect to different years\n# Note that the analysis here is based on the sliced data of men and women for the Company_Classification \n# and not on the overall dataset\n\n# List Comprehension is used develop a component report and visualize the report in the same loop\n# I need to look at the number of women or men in each company classification per year\n\n\nprint(color.BLUE,color.BOLD,'Employees by Gender,by Company Sizes and by Years',color.END)\n# Separate for company sizes\nsize = Man_Woman_Groupby['Company_Classification'].unique()\nfor s in size:\n    tot = Man_Woman_Size[(Man_Woman_Size['Company_Classification']==s)]\n    print(color.BOLD,color.GREEN,'\\n',s,'Companies',color.END)\n    \n# Build the years into it \n    yea = tot['Year'].value_counts().reset_index(name='Count').rename(columns={'index':'Year'})\n    year = yea['Year'].unique()\n    for y in year:\n        tot2 = tot[(tot['Year']==y)]\n        print(color.BLUE,color.BOLD,'\\n',y, '|','Total =',len(tot2),color.END)\n\n# Account for Gender\n        for g in Man_Woman_Size['Gender'].unique():\n            k = tot2[(tot2['Gender']==g)]\n            per = round(len(k)\/len(tot2),2)*100 if len(tot2)!=0 else''\n            print(g,'=',len(k), '|',per,'%')\n    \n# vizualize the above table with catplot: disaggregated into'Company_Classification' by years\nprint(color.BOLD,'\\n Employees by Gender,by Company Sizes and by Years ',color.END)\nsns.catplot(x='Gender',y='Counter',hue='Year',col='Company_Classification',kind='bar',data=Man_Woman_Groupby)\nplt.show()","b3716000":"# Gender Recruitment Gaps in Countries\n\n# Objective: Identify gender recruitment gap figures in each country with respect to years and company sizes\n\n# To this, end I use list comprehension again same as above\n\nprint(color.BLUE,color.BOLD,'Employees by Gender,by Countries, by Company Sizes and by Years',color.END)\nnumber=0\ncoun = all_coys['Country'].value_counts().reset_index(name='Count').rename(columns={'index':'Country'})\ncountry = coun['Country'].unique()\nfor c in country:\n    number+=1\n    tot = all_coys[(all_coys['Country']==c)]\n    tot2 = tot[(tot['Gender']=='Man') | (tot['Gender']=='Woman')]\n    #k = tot2.groupby(['Year','Company_Classification'])['Counter'].count().reset_index().sort_values('Counter',ascending=False)\n    Groupby = tot2.groupby(['Year','Gender','Company_Classification'])['Counter'].count().reset_index().sort_values('Counter',ascending=False)\n    print(color.BOLD+color.GREEN+'\\n',\n          number,'Country Name:',c,\n          '|','Total Respondents(2019-2021) =',\n          len(tot),color.END)\n    \n    \n    for s in size:\n        print(color.BOLD,color.GREEN,'\\n',s,'Companies',color.END)\n        yea = tot['Year'].value_counts().reset_index(name='Count').rename(columns={'index':'Year'})\n        year = yea['Year'].unique()\n        for y in year:\n            tot3 = tot2[(tot2['Company_Classification']==s) & (tot2['Year']==y)]\n            print(color.BLUE,color.BOLD,'\\n',y, '|','Total =',len(tot3),color.END)\n            for g in Man_Woman_Size['Gender'].unique():\n                k1 = tot3[(tot3['Gender']==g)]\n                per = round(len(k1)\/len(tot3),2)*100 if len(tot3)!=0 else''\n                print(g,'=',len(k1), '|',per,'%')\n                \n# Recruitment Disparity Calculations\n# Slice for the man and woman separately\n            man = Groupby[(Groupby['Gender']=='Man') & (Groupby['Year']==y) & (Groupby['Company_Classification']==s)]\n            woman = Groupby[(Groupby['Gender']=='Woman') & (Groupby['Year']==y) & (Groupby['Company_Classification']==s)]\n            disparity = (man['Counter'].unique() - woman['Counter'].unique())\n            disPer = ((disparity)\/(len(tot3))).round(2)*100\n            print(*disparity,'or',*disPer,'percent more men than women')\n            \n    print(color.BOLD,'\\nEmployees by Gender by Company Sizes and by Years in',c,color.END)            \n    sns.catplot(x='Gender',y='Counter',hue='Year',\n                col='Company_Classification',\n                kind='bar',data=Groupby)\n    plt.show()","65c889df":"# Create the recruitment disparity and disparity Percent table for each country for each company size and for each gender\n\nslice1 = Man_Woman_Size.groupby(['Country','Company_Classification'])['Counter'].count().reset_index()\nslice2 = Man_Woman_Size.groupby(['Gender','Country','Company_Classification'])['Counter'].count().reset_index()\nslice12 = pd.merge(slice1,slice2, on=['Country','Company_Classification']).rename(columns={'Counter_x':'Counter','Counter_y':'Counter_Gender'})\n\n# slice for man and woman\ntop10_Woman = slice12[(slice12['Gender']=='Woman')].rename(columns={'Gender': 'Gender_Woman','Counter_Gender':'Counter_Woman'})\ntop10_Man = slice12[(slice12['Gender']=='Man')].rename(columns={'Gender': 'Gender_Man','Counter_Gender':'Counter_Man'})\ntop10 = pd.merge(top10_Man,top10_Woman, on=['Country','Company_Classification']).rename(columns={'Counter_x':'Total'}).drop('Counter_y',axis=1)\n\n# At each company level\nSmall_Coy = top10[(top10['Gender_Man'].notnull()) & (top10['Company_Classification']=='Small')]\nLarge_Coy = top10[(top10['Gender_Man'].notnull()) & (top10['Company_Classification']=='Large')]\nMedium_Coy = top10[(top10['Gender_Man'].notnull()) & (top10['Company_Classification']=='Medium')]\n\n# Disparity Per Company Size\nSmall_Coy['Recruitment_Disparity'] = (Small_Coy['Counter_Man'] - Small_Coy['Counter_Woman'])\nLarge_Coy['Recruitment_Disparity'] = (Large_Coy['Counter_Man'] - Large_Coy['Counter_Woman'])\nMedium_Coy['Recruitment_Disparity'] = (Medium_Coy['Counter_Man'] - Medium_Coy['Counter_Woman'])\n\n# Disparity Percent Per Company Size\nSmall_Coy['Recruitment_Disparity_Percent'] = round(Small_Coy['Recruitment_Disparity']\/(Small_Coy['Total']),2)*100\nLarge_Coy['Recruitment_Disparity_Percent'] = round((Large_Coy['Recruitment_Disparity'])\/(Large_Coy['Total']),2)*100\nMedium_Coy['Recruitment_Disparity_Percent'] = round((Medium_Coy['Recruitment_Disparity'])\/(Medium_Coy['Total']),2)*100\n\n# Top 10 Lowest Percentage Disparity for each Company Size\ntop10_Lowest_Small = Small_Coy.sort_values('Recruitment_Disparity_Percent').reset_index(drop=True).head(10)\ntop10_Lowest_Large = Large_Coy.sort_values('Recruitment_Disparity_Percent').reset_index(drop=True).head(10)\ntop10_Lowest_Medium = Medium_Coy.sort_values('Recruitment_Disparity_Percent').reset_index(drop=True).head(10)\n\n# Top 10 Highest Percentage Disparity for each Company Size\ntop10_Highest_Small = Small_Coy.sort_values('Recruitment_Disparity_Percent',ascending=False).reset_index(drop=True).head(10)\ntop10_Highest_Large = Large_Coy.sort_values('Recruitment_Disparity_Percent',ascending=False).reset_index(drop=True).head(10)\ntop10_Highest_Medium = Medium_Coy.sort_values('Recruitment_Disparity_Percent',ascending=False).reset_index(drop=True).head(10)\n","70b6c011":"number=0\nfor i in [top10_Lowest_Small,top10_Lowest_Large,top10_Lowest_Medium]:\n    number+=1\n    print(color.BOLD+color.BLUE,'Visuals:',number,color.END)\n    if number == 1:\n        print('10 Countries with the Lowest Recruitment Gap Percent in Small-Sized Companies')\n    elif number == 2:\n        print('10 Countries with the Lowest Recruitment Gap Percent in Large Companies')\n    else:\n        print('10 Countries with the Lowest Recruitment Gap Percent in Medium-Sized Companies')\n    fig = go.Figure()\n    fig = px.bar(i, y='Recruitment_Disparity_Percent', x ='Country',text='Recruitment_Disparity_Percent')\n    fig.update_traces(texttemplate='%{text:.3s}', textposition='outside')\n    fig.update_layout(uniformtext_minsize=8)\n    fig.update_layout(xaxis_tickangle=-45)\n    fig.show('notebook')","cc6e4bb6":"number=0\nfor i in [top10_Highest_Small,top10_Highest_Large,top10_Highest_Medium]:\n    number+=1\n    print(color.BOLD+color.BLUE,'Visuals:',number,color.END)\n    if number == 1:\n        print(color.GREEN,color.BOLD,'10 Countries with the Highest Recruitment Gap Percent in Small-Sized Companies')\n    elif number == 2:\n        print(color.GREEN,color.BOLD,'10 Countries with the Highest Recruitment Gap Percent in Large Companies')\n    else:\n        print(color.GREEN,color.BOLD,'10 Countries with the Highest Recruitment Gap Percent in Medium-Sized Companies')\n    fig = go.Figure()\n    fig = px.bar(i, y='Recruitment_Disparity_Percent', x ='Country',text='Recruitment_Disparity_Percent')\n    fig.update_traces(texttemplate='%{text:.3s}', textposition='outside')\n    fig.update_layout(uniformtext_minsize=8)\n    fig.update_layout(xaxis_tickangle=-45)\n    fig.show('notebook')","b37241c4":"# I am interested in the year gender, country and employees columns, so slice them out of the main dataset created above \n\nAll_Income = BG_Data[['Year','Gender','Country','Annual_Income','ML_Cloud_Exp']]\nAll_Income.insert(3,'Company_Classification',all_coys['Company_Classification'])\n#All_Income","650f5257":"# I am not interested in the number of respondents here. Previous findings have shown beyond doubts that gender gap exists \n# I want to see if women are underpaid doing same job with men as claimed\n# The data needed are given as text, some conversions are necessary\n# I want to find average income therefore we split each data provided into two columns:\n# 'Annual_IncomeA' of the lower limit\n# 'Annual_IncomeB' for the upper limit\n# Both columns are added and the result divided by 2 to give us the average\n# To this end, we shave 3 limits: lower, middle, and upper limits which we shall use in the course of the study\n\nAll_Income[['Annual_IncomeA', 'Annual_IncomeB']] = All_Income['Annual_Income'].str.split('-',expand=True)","46333b0c":"# Perform some cleaning on the dataset to make it workable for the ojectives we set out to achive\n\nAll_Income['Annual_IncomeA'] = All_Income['Annual_IncomeA'].replace(',','',regex=True)#.astype(np.number)\nAll_Income['Annual_IncomeA'] = All_Income['Annual_IncomeA'].replace('>','',regex=True)#.astype(np.number)\nAll_Income['Annual_IncomeA'] = All_Income['Annual_IncomeA'].replace('\\$','',regex=True).astype(np.number)\nAll_Income['Annual_IncomeB'] = All_Income['Annual_IncomeB'].replace(',','',regex=True).astype(np.number)\nAll_Income['Average_Income'] = (All_Income['Annual_IncomeA'] + All_Income['Annual_IncomeB'])\/2\nAll_Income = All_Income.sort_values('Average_Income',ascending=False)","53bc2699":"# Expenditure on ML and Cloud Computing\n# Replace  for the upper limit I put a 200,000 upper limit for ('$100,000 or more, and '> $100,000 ($USD))\nAll_Income['ML_Cloud_Exp'] = All_Income['ML_Cloud_Exp'].replace({'$0 ($USD)':0,\n                                                 '$100,000 or more ($USD)':200000,\n                                                 '$10,000-$99,999':99999,\n                                                 '$1000-$9,999':9999,\n                                                 '$1-$99':99,\n                                                 '$0 (USD)':0,\n                                                 '> $100,000 ($USD)':200000,\n                                                 '$100-$999':999}).astype(np.number)","4d6e35e6":"# Slice the final data for men and women only\nMan_Woman = All_Income[(All_Income['Gender']=='Man') | (All_Income['Gender']=='Woman')].reset_index(drop=True)\nMan_Woman.insert(9,'Count',0)\n#Man_Woman","f45f5112":"# Create Disparity Table\n\na = Man_Woman.groupby(['Gender','Country'])['Annual_IncomeA'].mean().reset_index()\nb = a[(a['Gender']=='Woman')].rename(columns={'Gender': 'Gender_Woman','Annual_IncomeA':'Income_Woman'})\nc = a[(a['Gender']=='Man')].rename(columns={'Gender': 'Gender_Man','Annual_IncomeA':'Income_Man'})\n\nd = pd.merge(c,b, on='Country')\nd['Income_Disparity'] = round((d['Income_Man'] - d['Income_Woman']),2)\nd = d.sort_values('Income_Disparity').reset_index(drop=True)\n#d = d[0:10]\n#d","0ed26218":"print(color.GREEN+color.BOLD,'Gender Income Disparity Reports 2019 - 2020',color.END)\n\n# Take the 'Year' column first\nyea = Man_Woman['Year'].value_counts().reset_index(name='Count').rename(columns={'index':'Year'})\nyear = yea['Year'].unique()\nfor y in year:\n    print(color.BLUE+color.BOLD,'\\nYear =',y,color.END,color.GREEN,color.BOLD,'\\n\\nMean and Median (Upper Limit) Annual Income',color.END)  \n# Next 'Gender'    \n    number=0\n    for g in Man_Woman['Gender'].unique():\n        number+=1\n# Total for each year\n        tot = Man_Woman[(Man_Woman['Year']== y)]\n        k = tot[(tot['Gender']== g) & (tot['Year']== y)]\n# mean and median compensations calculations\n        Mean_Compensation = round(k['Annual_IncomeB'].mean(),2)\n        Median_Compensation = k['Annual_IncomeB'].median()\n# print mean and median compensations \n        print(g,':','Mean =',Mean_Compensation, '|','Median =', Median_Compensation)\n\n# Income Disparity Calculations\n# Slice for the man and woman separately\n    man = tot[(tot['Gender']=='Man') & (tot['Year']==y)]\n    woman = tot[(tot['Gender']=='Woman') & (tot['Year']==y)]\n    \n# disparityA uses Annual_IncomeA(lower limit) \n# disparityB uses Annual_IncomeB(upper limit)\n# disparityAv uses Average_Income\n    disparityA = round((man['Annual_IncomeA'].mean()) - (woman['Annual_IncomeA'].mean()),2)\n    disparityB = round((man['Annual_IncomeB'].mean()) - (woman['Annual_IncomeB'].mean()),2)\n    disparityAv = round((man['Average_Income'].mean()) - (woman['Average_Income'].mean()),2)\n\n# Print the disparities\n    print(color.GREEN,color.BOLD,'\\nDisparities:',color.END)\n    print('Middle Limit =',color.BOLD,disparityAv,color.END)\n    print('Lower Limit =',color.BOLD,disparityA,color.END)\n    print('Upper Limit =',color.BOLD,disparityB,color.END)\n\nplt.title('Aggregate Average Data Science Income Disparity 2019 - 2021')\nsns.barplot(x='Year',y='Average_Income',hue='Gender',data=Man_Woman)\nplt.show()","16db4cc7":"# Aggregate Report and Visualization for mean and median compensation and ML\/Cloud Expenditures with Respect to Gender in Different Years\n# For mean and median income,the the upper limit(Annual_IncomeB) is used\n\nprint(color.GREEN+color.BOLD,'Income Disparities in Different Company Sizes 2019 to 2020',color.END)\nfor y in year:\n    print('\\n',color.UNDERLINE,'           ',color.END,color.BLUE+color.BOLD,'\\n\\nYear =',y,color.END)\n    for s in size:\n        print(color.BOLD,color.BLUE,'\\nCompany Size:',s,color.END,color.GREEN,color.BOLD,\n              '\\n\\nMean and Median (Upper Limit) Annual Income',color.END)\n        for g in Man_Woman['Gender'].unique():\n            tot = Man_Woman[(Man_Woman['Year']== y)]\n            k = tot[(tot['Gender']== g) & (tot['Year']== y) & (tot['Company_Classification']== s)]\n            Mean_Compensation = round(k['Annual_IncomeB'].mean(),2)\n            Median_Compensation = k['Annual_IncomeB'].median()\n            print(g,':', 'Mean =',Mean_Compensation, '|','Median =', Median_Compensation)\n\n            \n# Income Disparity Calculations\n# Slice for the man and woman separately\n        man = tot[(tot['Gender']=='Man') & (tot['Year']==y) & (tot['Company_Classification']== s)]\n        woman = tot[(tot['Gender']=='Woman') & (tot['Year']==y) & (tot['Company_Classification']== s)]\n    \n# disparityA uses Annual_IncomeA(lower limit) \n# disparityB uses Annual_IncomeB(upper limit)\n# disparityAv uses Average_Income\n        disparityA = round((man['Annual_IncomeA'].mean()) - (woman['Annual_IncomeA'].mean()),2)\n        disparityB = round((man['Annual_IncomeB'].mean()) - (woman['Annual_IncomeB'].mean()),2)\n        disparityAv = round((man['Average_Income'].mean()) - (woman['Average_Income'].mean()),2)\n# Print the report\n        print(color.GREEN,color.BOLD,'\\nIncome Disparities:',s,'Companies',color.END)\n        print('Middle Limit =',color.BOLD,disparityAv,color.END)\n        print('Lower Limit =',color.BOLD,disparityA,color.END)\n        print('Upper Limit =',color.BOLD,disparityB,color.END)\n#         print('The man earned more by',color.BOLD+color.PURPLE,disparityAv,'or',disparityA,\n#               'or',disparityB,color.END,'in',s,'companies'\n#               '(middle,lower and upper limits respectively) in',y)\n\n\nprint(color.BOLD,color.UNDERLINE,'\\nAggregate Annual Compensation with Respect to Gender and Company Sizes (2019 - 2021)')\nsns.catplot(x='Gender',y='Annual_IncomeB',hue='Year',\n            col='Company_Classification',\n            kind='bar',data = Man_Woman)\nplt.show()","7233d082":"# Aggregate visualization for Average in come and ML and cloud expenditures with respect to gender in different years\n\nprint(color.GREEN+color.BOLD,'Aggregate Gender Income Disparity Reports by Countries 2019 - 2020',color.END)\nnumber=0\nfor c in country:\n    number+=1\n    tot = Man_Woman[(Man_Woman['Country']==c)]\n    yea = tot['Year'].value_counts().reset_index(name ='Count').rename(columns={'index':'Year'})\n    year = yea['Year'].unique()\n    print(color.BOLD+color.GREEN+'\\n',number,'Country Name:',c,color.END)\n\n    for y in year:\n        print(color.BLUE+color.BOLD,'\\nYear =',y,color.END,color.GREEN,color.BOLD,'\\n\\nMean and Median (Upper Limit) Annual Income',color.END)\n        number1=0\n        for g in Man_Woman['Gender'].unique():\n            number1+=1\n            tot2 = tot[(tot['Year']== y)]\n            k = tot2[(tot2['Gender']== g)]\n            Mean_Compensation = round(k['Annual_IncomeB'].mean(),2)\n            Median_Compensation = k['Annual_IncomeB'].median()\n            print(g,':','Mean =',Mean_Compensation, '|','Median =', Median_Compensation)\n\n# Income Disparity Calculations\n# Slice for the man and woman separately\n        man = tot[(tot['Gender']=='Man') & (tot['Year']==y)]\n        woman = tot[(tot['Gender']=='Woman') & (tot['Year']==y)]\n    \n# disparityA uses Annual_IncomeA(lower limit) \n# disparityB uses Annual_IncomeB(upper limit)\n# disparityAv uses Average_Income(Middle Limit)\n        disparityA = round((man['Annual_IncomeA'].mean()) - (woman['Annual_IncomeA'].mean()),2)\n        disparityB = round((man['Annual_IncomeB'].mean()) - (woman['Annual_IncomeB'].mean()),2)\n        disparityAv = round((man['Average_Income'].mean()) - (woman['Average_Income'].mean()),2)\n\n# Print the report\n        print(color.GREEN,color.BOLD,'\\nDisparities:',color.END)\n        print('Middle Limit =',color.BOLD,disparityAv,color.END)\n        print('Lower Limit =',color.BOLD,disparityA,color.END)\n        print('Upper Limit =',color.BOLD,disparityB,color.END)\n#     print('The man earned',color.BOLD+color.PURPLE,disparityA,'or',\n#           disparityB,'or',\n#           disparityAv, color.END,\n#           '(depending on which limit you use) more than the',g,'in',y)\n    plt.title(c,fontsize=15)\n    sns.barplot(x='Gender',y='Annual_IncomeB',hue='Year',data=tot)\n    plt.show()","ec4080b3":"# Aggregate Report and Visualization for mean and median compensation and ML\/Cloud Expenditures with Respect to Gender in Different Years\n# For mean and median income,the the upper limit(Annual_IncomeB) is used\nprint(color.GREEN+color.BOLD,'Income Disparities by Countries, by Gender and by Different Company Sizes 2019 to 2020',color.END)\n\nnumber=0\nfor c in country:\n    number+=1\n    tot = All_Income[(All_Income['Country']==c)]\n    tot2 = tot[(tot['Gender']=='Man') | (tot['Gender']=='Woman')]\n    yea = tot2['Year'].value_counts().reset_index(name ='Count').rename(columns={'index':'Year'})\n    year = yea['Year'].unique()\n    print(color.BOLD+color.GREEN+'\\n',number,'Country Name:',c,color.END)\n    \n    for y in year:\n        print('\\n',color.UNDERLINE,'           ',color.END,color.BLUE+color.BOLD,'\\n\\nYear =',y,color.END)\n        for s in size:\n            print(color.BOLD,color.BLUE,'\\nCompany Size:',s,color.END,color.GREEN,color.BOLD,\n                  '\\n\\nMean and Median (Upper Limit) Annual Income',color.END)\n            for g in Man_Woman['Gender'].unique():\n                k = tot2[(tot2['Gender']== g) & (tot2['Year']== y) & (tot2['Company_Classification']== s)]\n                Mean_Compensation = round(k['Annual_IncomeB'].mean(),2)\n                Median_Compensation = k['Annual_IncomeB'].median()\n                print(g,':', 'Mean =',Mean_Compensation, '|','Median =', Median_Compensation)\n\n            \n# Income Disparity Calculations\n# Slice for the man and woman separately\n            man = tot2[(tot2['Gender']=='Man') & (tot2['Year']==y) & (tot2['Company_Classification']== s)]\n            woman = tot2[(tot2['Gender']=='Woman') & (tot2['Year']==y) & (tot2['Company_Classification']== s)]\n    \n# disparityA uses Annual_IncomeA(lower limit) \n# disparityB uses Annual_IncomeB(upper limit)\n# disparityAv uses Average_Income\n            disparityA = round((man['Annual_IncomeA'].mean()) - (woman['Annual_IncomeA'].mean()),2)\n            disparityB = round((man['Annual_IncomeB'].mean()) - (woman['Annual_IncomeB'].mean()),2)\n            disparityAv = round((man['Average_Income'].mean()) - (woman['Average_Income'].mean()),2)\n# Print the report\n            print(color.GREEN,color.BOLD,'\\nIncome Disparities:',s,'Companies',color.END)\n            print('Middle Limit =',color.BOLD,disparityAv,color.END)\n            print('Lower Limit =',color.BOLD,disparityA,color.END)\n            print('Upper Limit =',color.BOLD,disparityB,color.END)\n\n    print(color.BOLD,'\\nAggregate Income Disparity for',c,'(2019 - 2021)')\n    sns.barplot(x='Gender',y='Average_Income',hue='Year',data=tot2)\n    plt.show()\n    \n    print(color.BOLD,'\\nGender Income Disparities by Company Sizes for',c,'(2019 - 2021)')\n    sns.catplot(x='Gender',y='Annual_IncomeB',hue='Year',col='Company_Classification',kind='bar',data = tot2)\n    plt.show()","a04999df":"a = Man_Woman.groupby(['Gender','Country','Company_Classification'])['Average_Income'].mean().reset_index()\ntop10_Woman = a[(a['Gender']=='Woman')].rename(columns={'Gender': 'Gender_Woman','Average_Income':'Income_Woman'})\ntop10_Man = a[(a['Gender']=='Man')].rename(columns={'Gender': 'Gender_Man','Average_Income':'Income_Man'})\ntop10 = pd.merge(top10_Man,top10_Woman, on=['Country','Company_Classification'])\n\nSmall_Coy = top10[(top10['Income_Man'].notnull()) & (top10['Company_Classification']=='Small')]\nLarge_Coy = top10[(top10['Income_Man'].notnull()) & (top10['Company_Classification']=='Large')]\nMedium_Coy = top10[(top10['Income_Man'].notnull()) & (top10['Company_Classification']=='Medium')]\n\nSmall_Coy['Income_Disparity_Small'] = round((Small_Coy['Income_Man'] - Small_Coy['Income_Woman']),2)\nLarge_Coy['Income_Disparity_Large'] = round((Large_Coy['Income_Man'] - Large_Coy['Income_Woman']),2)\nMedium_Coy['Income_Disparity_Medium'] = round((Medium_Coy['Income_Man'] - Medium_Coy['Income_Woman']),2)\n\ntop10_Lowest_Small = Small_Coy.sort_values('Income_Disparity_Small').reset_index(drop=True).head(13)\ntop10_Lowest_Large = Large_Coy.sort_values('Income_Disparity_Large').reset_index(drop=True).head(8)\ntop10_Lowest_Medium = Medium_Coy.sort_values('Income_Disparity_Medium').reset_index(drop=True).head(4)\n\ntop10_Highest_Small = Small_Coy.sort_values('Income_Disparity_Small',ascending=False).reset_index(drop=True).head(15)\ntop10_Highest_Large = Large_Coy.sort_values('Income_Disparity_Large',ascending=False).reset_index(drop=True).head(15)\ntop10_Highest_Medium = Medium_Coy.sort_values('Income_Disparity_Medium',ascending=False).reset_index(drop=True).head(15)\n\n#top10_Lowest_Small","5b4af592":"number=0\nfor i in [top10_Lowest_Small,top10_Lowest_Large,top10_Lowest_Medium]:\n    number+=1\n    a = i[['Gender_Man','Country','Income_Man']].rename(columns={'Gender_Man':'Gender','Income_Man':'Average_Annual_Income'})\n    b = i[['Gender_Woman','Country','Income_Woman']].rename(columns={'Gender_Woman':'Gender','Income_Woman':'Average_Annual_Income'})\n    ab = pd.concat([a,b])\n    print(color.BOLD+color.BLUE,'Visuals:',number,color.END)\n    if number == 1:\n        print('Countries Where the Woman Earns more on the average in Small-Sized Companies')\n    elif number == 2:\n        print('Countries Where the Woman Earns more on the average in Large Companies')\n    else:\n        print('Countries Where the Woman Earns more on the average in Medium-Sized Companies')\n    fig = go.Figure()\n    fig = px.bar(ab, y='Average_Annual_Income', x ='Country',text='Average_Annual_Income',color='Gender')\n    fig.update_traces(texttemplate='%{text:.3s}', textposition='outside')\n    fig.update_layout(uniformtext_minsize=8)\n    fig.update_layout(xaxis_tickangle=-45)\n    fig.show('notebook')","e8f27f07":"number=0\nfor i in [top10_Highest_Small,top10_Highest_Large,top10_Highest_Medium]:\n    number+=1\n    a = i[['Gender_Man','Country','Income_Man']].rename(columns={'Gender_Man':'Gender','Income_Man':'Average_Annual_Income'})\n    b = i[['Gender_Woman','Country','Income_Woman']].rename(columns={'Gender_Woman':'Gender','Income_Woman':'Average_Annual_Income'})\n    ab = pd.concat([a,b])\n    print(color.BOLD+color.GREEN,'Visuals:',number,color.END)\n    if number == 1:\n        print(color.BLUE,color.BOLD,'Top 15 Countries with the Highest Average Income Disparity in Small-Sized Companies 2019-2021')\n    elif number == 2:\n        print(color.BLUE,color.BOLD,'Top 15 Countries with the Highest Average Income Disparity in Large Companies 2019-2021')\n    else:\n        print(color.BLUE,color.BOLD,'Top 15 Countries with the Highest Average Income Disparity in Medium-Sized Companies 2019-2021')\n    fig = go.Figure()\n    fig = px.bar(ab, y= 'Average_Annual_Income', x ='Country',text= 'Average_Annual_Income',color='Gender')\n    fig.update_traces(texttemplate='%{text:.3s}', textposition='outside')\n    fig.update_layout(uniformtext_minsize=8)\n    #fig.update_layout(autosize=False,width=800,height=800)\n    fig.update_layout(xaxis_tickangle=-65)\n    fig.show('notebook')","7620b708":"# Aggregate visualization for Average in come and ML and cloud expenditures with respect to gender in different years\n\nprint(color.GREEN+color.BOLD,'Gender Expenditure on ML and Cloud Computing Disparity Reports 2019 - 2020',color.END)\nyea = Man_Woman['Year'].value_counts().reset_index(name='Count').rename(columns={'index':'Year'})\nyear = yea['Year'].unique()\nfor y in year:\n    print(color.BLUE+color.BOLD,'\\nYear =',y,color.END)\n    print(color.GREEN,color.BOLD,'\\nExpenditure on ML and Cloud',color.END)\n    tot = Man_Woman[(Man_Woman['Year']== y)]\n    for g in Man_Woman['Gender'].unique():\n        k = tot[(tot['Gender']== g) & (tot['Year']== y)]\n        Mean_Exp = round(k['ML_Cloud_Exp'].mean(),2)\n        Median_Exp = k['ML_Cloud_Exp'].median()\n        print(g,':', 'Mean =',Mean_Exp, '|','Median =',Median_Exp)\n    \n    man = tot[(tot['Gender']=='Man') & (tot['Year']==y)]\n    woman = tot[(tot['Gender']=='Woman') & (tot['Year']==y)]\n    \n    disparityExp = round((man['ML_Cloud_Exp'].mean()) - (woman['ML_Cloud_Exp'].mean()),2)\n    print(color.GREEN,color.BOLD,'\\nExpenditure Disparity Report:',color.END)\n    print('The man or his team has expended',\n          color.BOLD+color.PURPLE,disparityExp,color.END,\n          'on ML and Cloud computing more than the',g,\n          'or her team in the last 5 years')\n    \nsns.barplot(x='Gender',y= 'ML_Cloud_Exp',hue='Year',data=Man_Woman)\nplt.show()","677127f9":"print(color.GREEN+color.BOLD,'Gender Expenditure Disparities in Different Company Sizes 2019 to 2020',color.END)\nprint(color.GREEN,'How much did the man or his team spend on ML and Cloud computing more than the woman or her team in the last 5 years?',color.END)\n\nnumber=0\nfor c in country:\n    number+=1\n    tot = All_Income[(All_Income['Country']==c)]\n    tot2 = tot[(tot['Gender']=='Man') | (tot['Gender']=='Woman')]\n    print(color.BOLD+color.GREEN+'\\n',\n          number,'Country Name:',c,\n          '|','Total Respondents(2019-2021) =',\n          len(tot),color.END)\n    \n    for y in year:\n        print('\\n',color.UNDERLINE,'           ',color.END,color.BLUE+color.BOLD,'\\n\\nYear =',y,color.END)\n        tot = Man_Woman[(Man_Woman['Year']== y)]\n        for s in size:\n            print(color.BLUE,color.BOLD,'\\nCompany Size:',s,color.END,color.GREEN,color.BOLD,'\\nExpenditure on ML and Cloud',color.END)\n            for g in Man_Woman['Gender'].unique():\n                k = tot[(tot['Gender']== g) & (tot['Year']== y) & (tot['Company_Classification']== s)]\n                Mean_Exp = round(k['ML_Cloud_Exp'].mean(),2)\n                Median_Exp = k['ML_Cloud_Exp'].median()\n                print(g,':', 'Mean =',Mean_Exp, '|','Median =',Median_Exp)\n            \n# Expenditure Disparity Calculations\n# Slice for the man and woman separately\n            man = tot[(tot['Gender']=='Man') & (tot['Year']==y) & (tot['Company_Classification']== s)]\n            woman = tot[(tot['Gender']=='Woman') & (tot['Year']==y) & (tot['Company_Classification']== s)]\n\n            disparityExp = round((man['ML_Cloud_Exp'].mean()) - (woman['ML_Cloud_Exp'].mean()),2)\n            print(color.GREEN,color.BOLD,'\\n5 Years Expenditure Disparity',color.END)\n            print('Expenditure Disparity =',color.BOLD+color.PURPLE,disparityExp,color.END)\n\n    \n    sns.barplot(x='Gender',y='ML_Cloud_Exp',hue='Year',data=tot2)\n    plt.show()\n    sns.catplot(x='Gender',y='ML_Cloud_Exp',hue='Year',col='Company_Classification',kind='bar',data = tot2)\n    plt.show()","40e78512":"# Create Expenditure disparities tables according to companies\n\na = Man_Woman.groupby(['Gender','Country','Company_Classification'])['ML_Cloud_Exp'].mean().reset_index()\ntop10_Woman = a[(a['Gender']=='Woman')].rename(columns={'Gender': 'Gender_Woman','ML_Cloud_Exp':'Exp_Woman'})\ntop10_Man = a[(a['Gender']=='Man')].rename(columns={'Gender': 'Gender_Man','ML_Cloud_Exp':'Exp_Man'})\ntop10 = pd.merge(top10_Man,top10_Woman, on=['Country','Company_Classification'])\n\nSmall_Coy = top10[(top10['Exp_Man'].notnull()) & (top10['Company_Classification']=='Small')]\nLarge_Coy = top10[(top10['Exp_Man'].notnull()) & (top10['Company_Classification']=='Large')]\nMedium_Coy = top10[(top10['Exp_Man'].notnull()) & (top10['Company_Classification']=='Medium')]\n\nSmall_Coy['Exp_Disparity_Small'] = round((Small_Coy['Exp_Man'] - Small_Coy['Exp_Woman']),2)\nLarge_Coy['Exp_Disparity_Large'] = round((Large_Coy['Exp_Man'] - Large_Coy['Exp_Woman']),2)\nMedium_Coy['Exp_Disparity_Medium'] = round((Medium_Coy['Exp_Man'] - Medium_Coy['Exp_Woman']),2)\n\ntop10_Lowest_Small = Small_Coy.sort_values('Exp_Disparity_Small').reset_index(drop=True).head(15)\ntop10_Lowest_Large = Large_Coy.sort_values('Exp_Disparity_Large').reset_index(drop=True).head(20)\ntop10_Lowest_Medium = Medium_Coy.sort_values('Exp_Disparity_Medium').reset_index(drop=True).head(11)\n\ntop10_Highest_Small = Small_Coy.sort_values('Exp_Disparity_Small',ascending=False).reset_index(drop=True).head(15)\ntop10_Highest_Large = Large_Coy.sort_values('Exp_Disparity_Large',ascending=False).reset_index(drop=True).head(15)\ntop10_Highest_Medium = Medium_Coy.sort_values('Exp_Disparity_Medium',ascending=False).reset_index(drop=True).head(15)\n\n#top10_Highest_Small","bc7823f1":"# Visualise disparity\nnumber=0\nfor i in [top10_Highest_Small,top10_Highest_Large,top10_Highest_Medium]:\n    number+=1\n    a = i[['Gender_Man','Country','Exp_Man']].rename(columns={'Gender_Man':'Gender','Exp_Man':'Average_5years_Spend'})\n    b = i[['Gender_Woman','Country','Exp_Woman']].rename(columns={'Gender_Woman':'Gender','Exp_Woman':'Average_5years_Spend'})\n    ab = pd.concat([a,b])\n    print(color.BOLD+color.GREEN,'Visuals:',number,color.END)\n    if number == 1:\n        print(color.BLUE,color.BOLD,'Top 15 Countries with the Highest Expenditure Disparity in Small-Sized Companies 2019-2021')\n    elif number == 2:\n        print(color.BLUE,color.BOLD,'Top 15 Countries with the Highest Average Expenditure Disparity in Large Companies 2019-2021')\n    else:\n        print(color.BLUE,color.BOLD,'Top 15 Countries with the Highest Average Expenditure Disparity in Medium-Sized Companies 2019-2021')\n    fig = go.Figure()\n    fig = px.bar(ab, y= 'Average_5years_Spend', x ='Country',text= 'Average_5years_Spend',color='Gender')\n    fig.update_traces(texttemplate='%{text:.3s}', textposition='outside')\n    fig.update_layout(uniformtext_minsize=8)\n    fig.update_layout(xaxis_tickangle=-65)\n    fig.show('notebook')","e8cdf600":"number=0\nfor i in [top10_Lowest_Small,top10_Lowest_Large,top10_Lowest_Medium]:\n    number+=1\n    a = i[['Gender_Man','Country','Exp_Man']].rename(columns={'Gender_Man':'Gender','Exp_Man':'Average_5years_Spend'})\n    b = i[['Gender_Woman','Country','Exp_Woman']].rename(columns={'Gender_Woman':'Gender','Exp_Woman':'Average_5years_Spend'})\n    ab = pd.concat([a,b])\n    print(color.BOLD+color.BLUE,'Visuals:',number,color.END)\n    if number == 1:\n        print('Countries Where the Woman Spends more on the average on ML and Cloud Computing in Small-Sized Companies')\n    elif number == 2:\n        print('Countries Where the Woman Spends more on the average on ML and Cloud Computing in Large Companies')\n    else:\n        print('Countries Where the Woman Spends more on the average on ML and Cloud Computing in Medium-Sized Companies')\n    fig = go.Figure()\n    fig = px.bar(ab, y='Average_5years_Spend', x ='Country',text='Average_5years_Spend',color='Gender')\n    fig.update_traces(texttemplate='%{text:.3s}', textposition='outside')\n    fig.update_layout(uniformtext_minsize=8)\n    fig.update_layout(xaxis_tickangle=-45)\n    fig.show('notebook')","91f2101c":"BG_Data['Coding Years'].unique()","f356d85d":"BG_Data['Code_Years_Group'] = BG_Data['Coding Years'].replace({'1-2 years':'Below 5 Years',\n                                                 '< 1 years':'Below 5 Years',\n                                                 '20+ years':'Above 5 Years',\n                                                 '3-5 years':'Below 5 Years',\n                                                 '5-10 years':'Above 5 Years',\n                                                 '10-20 years':'Above 5 Years',\n                                                 '1-3 years':'Above 5 Years'\n                                                 })","31b480da":"#code = BG_Data['Coding Years'].value_counts().reset_index(name='Respondents').rename(columns={'index':'Coding Years'})\nprint(color.BLUE,color.BOLD,'Coding Years Per Countries',color.END)\nnumber=0\nfor c in country:\n    number+=1\n    tot = BG_Data[(BG_Data['Country']==c)]\n    tot1 = tot.groupby(['Year','Code_Years_Group'])['Counter'].count().reset_index().sort_values('Counter',ascending=False)\n    print(color.BOLD+color.GREEN+'\\n',\n          number,'Country Name:',c,\n          '|','Total Respondents(2019-2021) =',\n          len(tot),color.END)\n    print('\\n',color.UNDERLINE,'           ',color.END)\n    \n    \n    yea = tot['Year'].value_counts().reset_index(name='Count').rename(columns={'index':'Year'})\n    year = yea['Year'].unique()\n    for y in year:\n        tot2 = tot[(tot['Year']==y)]\n        print(color.BLUE+color.BOLD,'\\n\\nYear =',y,'|','Total =',len(tot2),color.END)\n        \n        number2 = 0\n        code = tot2['Code_Years_Group'].value_counts().reset_index(name='Respondents').rename(columns={'index':'Code_Years_Group'})\n        for i in code['Code_Years_Group'].unique():\n            number2+=1\n            k = tot[(tot['Code_Years_Group']== i) & (tot['Year']== y)]\n            per = round(len(k)\/len(tot2),2)*100\n            print(number2,i, '=', len(k),'|',per,'%')   \n    \n    plt.title('Aggregate Coding Years 2019 to 2021')\n    sns.barplot(y='Code_Years_Group',x='Counter',hue ='Year',data=tot1) \n    plt.show()","03541336":"a = BG_Data.groupby(['Country','Code_Years_Group'])['Counter'].count().reset_index().sort_values('Counter',ascending=False)\nbelow_5 = a[(a['Code_Years_Group']=='Below 5 Years')].rename(columns={'Code_Years_Group': 'Code_Years_Below'})\nabove_5 = a[(a['Code_Years_Group']=='Above 5 Years')].rename(columns={'Code_Years_Group': 'Code_Years_Above'})\nBA = pd.merge(below_5,above_5, on='Country').rename(columns={'Counter_x':'Counter_Below','Counter_y':'Counter_Above'})\nBA['Difference'] = (BA['Counter_Below']) - (BA['Counter_Above'])\n\nTotal_Respondensts = BG_Data.groupby(['Country'])['Counter'].count().reset_index()\n\nBA_Below = pd.merge(Total_Respondensts,BA, on='Country')\nBA_Below['Percent'] = round(BA_Below['Counter_Below']\/(BA_Below['Counter']),2)*100\nBA_Below = BA_Below.sort_values('Percent',ascending=False)[0:27]\n#BA_Below.head(27)\n\nBA_Above = pd.merge(Total_Respondensts,BA, on='Country')\nBA_Above['Percent'] = round(BA_Above['Counter_Above']\/(BA_Above['Counter']),2)*100\nBA_Above = BA_Above.sort_values('Percent',ascending=False)[0:14]\n#BA_Above.head(14)","7ca8dc04":"number=0\nfor i in [BA_Below,BA_Above]:\n    number+=1\n    print(color.BOLD+color.BLUE,'Visuals:',number,color.END)\n    if number == 1:\n        print(color.GREEN,color.BOLD,'Countries where Coding Years Below 5 years Greater or equal to 50 percent of Total Respondents')\n    else:\n        print(color.GREEN,color.BOLD,'Countries Where Coding Years Above 5 years Greater or equal to 50 percent of Total Respondents')\n    fig = go.Figure()\n    fig = px.bar(i, y='Percent', x ='Country',text='Percent')\n    fig.update_traces(texttemplate='%{text:.3s}', textposition='outside')\n    fig.update_layout(uniformtext_minsize=8)\n    fig.update_layout(xaxis_tickangle=-45)\n    fig.show('notebook')","060c2bca":"# Conclusions - 10 Takeaways\n1. Is gender diversity an issue in data science? ----- Yes\n2. Is the the gender diversity issue specific to data science? ----- No\n3. Are there wide recruitment gaps in countries for data science positions in various companies ----- Yes\n4. The higest score for women participation in data Science (2019-2021) is 41% coiming from Tunisia\n5. Do we have companies and countries where women earn more than men ----- Yes \n6. However, income disparity remains very high in many advance economies\n7. Is there expenditure on ML and Cloud Computing disparity in data science ----- Yes\n8. However, the expdenditure disparity is not adequate enough to explain the income disparity\n9. Can the gender gap be bridged in future due to the fact that data science is still evolving? ----- Yes\n10. Are women consciously being discriminated against in data science? ----- We dont have enough data to ascertain that","702c9d58":"The Objective here is to classify companies with respect to number of employees and look at the percentage of women to men. Conventionally, the sizes of companies are classified with respect to the number of employees thus:\n\n1. 250 employess and above = Large Company\n2. 50-249 employees = Medium Company\n3. 0-49 employees = Small Company\n\n[Read more](\nhttps:\/\/en.m.wikipedia.org\/wiki\/Small_and_medium-sized_enterprises#:~:text=Microentreprises%3A%201%20to%209%20employees,enterprises%3A%20250%20employees%20or%20more)\n\nThe literature on gender gap in data science is replete with evidences of lopsided recruitments patterns in favour of the male gender. \n>Data compiled by magazine Wired and software firm Element AI finds that, at major technology companies, no more than 15% of cited artificial intelligence researchers are women; Google AI\u2019s records show that that only about 60 of 641 listed machine intelligence specialists are women. Across the three biggest conferences in the sector in 2017, only 12% of contributors were female.....\nParticipation in the main online communities for sector professionals reveals even further under-representation of women. For each of Data Science Central, Kaggle, and OpenML, the proportion of female users is 17-18%; for Slack Overflow, it is just 7.9%.....women across the sector tend to be better-qualified; 59% possess a graduate or post-graduate degree, compared with 55% of men, according to analysis of data drawn from almost 20,000 LinkedIn profiles.[Sam Trendall(2021)](https:\/\/www.publictechnology.net\/articles\/features\/does-data-science-have-dangerous-gender-gap)\n\n\nWe also have reports of recruitment tools that discriminate against female applicants. A natural underrepresentation due to circumstances beyond the control of the employer may be permissible, but to be accused of gender recruitment simulation in favour of a particular gender is profoundly incredible and unacceptable if true. Sam Trendall(2021) citing the Alan Turing Institute report which claims that a number of examples of built-in bias against women in data science recruitments.\n>...among them a machine learning-powered recruitment tool developed by Amazon that discriminated against female applicants on the basis of their gender, a social media chatbot that swiftly learned the language of racist and misogynistic hate speech, and an algorithm for generating pictures that tended to fill out cropped pictures of men by dressing them in suits, while women were kitted out in bikinis.\n>\u201cMarketing algorithms have disproportionally shown scientific job advertisements to men,\u201d the report adds. \u201cThe introduction of automated hiring is particularly concerning, as the fewer the number of women employed within the AI sector, the higher the potential for future AI hiring systems to exhibit and reinforce gender bias.\u201d[Sam Trendall(2021)](https:\/\/www.publictechnology.net\/articles\/features\/does-data-science-have-dangerous-gender-gap)","6071a006":"Tunisia returned the highest percentage 41% of women respondents. This result is praiseworthy in a world where women representation in most countries are below 20%. We therefore must take a look at what is happening in Tunisia with respect to women in data science. Can the world learn anything from Tunisia?\n\n\n>According to World Bank Blogs Antonius Verheijen(2020) Though the problems of gender inequality persist in Tunisia and the road to equality remain long. However, Tunisia women have a literacy rate of 72% represent 67% of higher education graduates and hold 36% of parliamentry positions [Read more here.](https:\/\/blogs.worldbank.org\/arabvoices\/status-women-tunisian-society-endangered) \n\n>It is worthy to note that 23% is the best in the United States history of women participation in congress achieved in 2019. [Read more on countries ratings of women in national parliaments here](http:\/\/archive.ipu.org\/wmn-e\/classif.htm)\n\n>Apparently Tunisians women are not new to data science accolades. The first and 3rd place positions went to Tunisian women in the Womxn in Big Data South Africa: Female-Headed Households in South Africa Challenge. The competitoon attracted 452 data scientists world wide with 40% women participation. [Read more here](https:\/\/zindi.africa\/learn\/meet-the-winners-of-the-womxn-in-big-data-south-africa-female-headed-households-in-south-africa-challenge)\n\n>UNESCO reports in 2019 that 65 percent of Tunisians with Bachelor degree and 69 percent of PhD holders were female....55.1 percent of Tunisian researchers are female, the largest proportion in Africa and in the Arab world. [Read more here](https:\/\/northafricapost.com\/46498-tunisian-women-lead-african-arab-women-in-science.html). The numbers are higher than that of the USA where 53% of total PhD degrees awarded in 2019 were women, as a matter of fact women in US graduate schools outnumber men for master's and doctoral degrees (and enrollments in 7 out of 11) academic fields, they have earned more doctoral degrees than men for over a decade. The reason for the poor showing of US women in data science is traceable to the fact that men dominate the quantitative fields: engineering (74.9 percent), mathematics and computer sciences (73.2 percent), physical and earth sciences (64.9 percent). The domination of women is pronunced in fields like Pubic Administration, Health and Medical Sciences, Education, Social and Behavioural Sciences etc. [Read more here](https:\/\/www.aei.org\/uncategorized\/women-earned-majority-of-doctoral-degrees-in-2019-for-11th-straight-year-and-outnumber-men-in-grad-school-141-to-100\/). [Check the table here](https:\/\/www.aei.org\/wp-content\/uploads\/2020\/10\/GradDoc2020.png?x91208)\n\nFrom the foregoing it shows that there is a conscious and sincere efforts to bridge the gender gap in Tunisia. The country may not be the best with respect to gender equality however their efforts are yielding fruits for the present and the future. To this end, the rest of the world may have something to learn from Tunisian women especially with respect how they have been able to place women issues on the front burner in a predominantly Islamic country","619dbc34":"# The Diversity Issue in Data Science, Fact, Fiction or Advocacy 2019 - 2021","dec204d4":"### Is the Problem Specific to Data Science?\n**Kaggle vs. StackOverflow**","3e8f65f2":"# Section 4: Are We Asking for too Much too Soon?\nData Science as it is today is relatively very young. Many of the main subject areas as we have it today are less than 15 years in existence. Though some of the threories date back but the advent of the modern day data sciernce is tied to the advent of programming languages and the development of higher computing powers.\n\n[Read more on the history of Data Science](https:\/\/www.google.com\/amp\/s\/www.forbes.com\/sites\/gilpress\/2013\/05\/28\/a-very-short-history-of-data-science\/amp\/)\n\n1. Are we asking too much from data science too soon?\n2. Are there any indication that Data Science will bridge the gender gap in future?\n\n**Objectives**\n- [x] Divided coding years into 2 broad groups - Below 5 years and above 5 years\n- [x] Evaluate tge respondenst for each countries under the groups created\n- [x] If most of the respondents per country have coding years below 5 years then we might agree with the claim and conlclude that perhaps there is ample time to solve the gender gap problems and that it is too soon for data science to self adjust","69d229a0":"## Section 3B: Expenditure on ML and Cloud Computing Gap in Data Science","74f7ce29":"# Section One: Findings","d79c5c6e":"# Section 1: Women Representation in Data Science 2019 - 2021","37eacf2c":"###### Findings\nPercentage of women respondents with respect to men on: \n1. Kaggle Platform for Data Scientists:\n    1. 2019 - 17 percent\n    2. 2020 - 20 percent\n    3. 2021 - 19 percent\n2. Stackoverflow Platform for Software Developers:\n    1. 2019 - 8 percent\n    2. 2020 - 8 percent\n    3. 2021 - 5 percent  \n\nOther fndings include:\n\n3. The percentage of women in software development is falling; from 8% in 2019 and 2020 to 5% in 2021\n4. For Data science, it increased from 17% in 2019 to 20% in 2020 despite the pandemeic but dropped to 19% in 2021\n5. Both platforms took a hit from the pandemic, numbers in absolute terms dropped in 2020\n6. When you look at the numbers, more women are being attracted to Data Science compared to Software Development. Data Science has more women than sofware development in 2020(3,878 to 3,844) and 2021(4,890 to 4,120). This is despite the fact that software development recording 6,344 women in 2019.\n\n###### Is the Problem Data Science Specific?  \n- [x] The report above shows that software development is worse-off compared to data science\n- [x] Therefore, the diversity issue is not data science specific\n- [x] Can we absolve data science considering its very recent history compared to other discplines? Find out in the next section","f3d52ad3":"# Section 2: Evaluating Recruitments Gender Gap in Companies\n### Do we have gender disparity in large, medium and small companies?","cb976e81":"# Section 3B: Findings","9037516d":"# Section 3A: Gender Income Gap in Data Science\n- [x] Is there an income or compensation gap in data science which is gender based?\n- [x] Do we have a company-size dimension to gender income disparity?\n- [x] In the same vein, do we have an Machine Learning\/cloud computing expenditure gap in data science?\n- [x] Is this gap in expenditure enough to explain the income gap?\n\n\nThis section become important when you consider screaming headlines like: \"Data Science Hasnt Fixed Its Huge Gender Pay Gap\" on venturebeat.com. In the article Kyle Wiggers(2021) citing the O\u2019Reilly\u2019s 2021 Data\/AI Salary Survey which found out that:\n\n>...Women\u2019s salaries are significantly lower than men\u2019s, equating to 84% of the average salary for men regardless of education or job title. For example, at the executive level, the average salary for women was 163,000 dollars versus 205,000 dollars for men, \u2014 a 20% difference. [Read more](https:\/\/www.google.com\/amp\/s\/venturebeat.com\/2021\/09\/14\/data-science-hasnt-fixed-its-huge-gender-pay-gap\/amp\/)\n\nIn another article titled \"The data science gender pay gap is shrinking\u2014barely\", Macy Bayern citing the Harnham research provided more evidences on the subject matter. The report was in 2019 which falls within the scope of our study\n>The gender pay gap in data science in the US shrunk from 9.4% to 8.4% over the past year, according to research from Harnham. While some improvement is seen at the entry and mid-levels, the executive level has more room for improvement. However, concerns at the executive level remain, the pay gap widens to 11% at senior levels of data and analytics jobs.\n\n>The gender pay gap in Europe is larger than in the US. The smallest is Germany, at 4%, while the largest is Spain, at 25%. Across countries, however, the pay gap follows a similar pattern to the US in higher level positions. For all regions, the pay gap widens when moving from a mid-level to a director level position.\n\n>The UK has seen the most success in decreasing its data and analytics gender pay gap, dropping from 13.3% in 2018 to 7.2% in 2019. Similar to the other regions, the pay gap widens. [Read more](https:\/\/www.google.com\/amp\/s\/www.techrepublic.com\/google-amp\/article\/the-data-science-gender-pay-gap-is-shrinking-barely\/)\n\n*Long Report and Coding Alert!!! We have to look at the countries individually to verify the veracity of these claims. Kindly loosen your seat belts and walk with me. I hope to make this as interesting as possible* ","d66c15db":"# Section 2: Findings","12706007":"# Section 4: Findings","f07b574b":"### The Curious Case of Tunisia","01bd3558":"Diversity in data science is an issue that has gained more and more attention in the last few years. This study attempts to evaluate the gender bias claims levelled against data science and data scientists: are these claims based on facts, are they fictions or just another advocacy to pump up emotions on a particular subject matter?  To provide a veritable background to this study, we look at some of these claims\n\n\n>As data science professionals advance in their careers, the percentage of women decreases significantly. Among the most advanced individual contributors, 6% of data scientists are female; 10% of executive managers are female.\u201d To make matters worse, they are paid 10,000 dollars less per year, on average, for the same work. .............fewer than 3 percent of data scientists are women of colour, fewer than 5 percent are Latino, fewer than 4 percent are African-American, and fewer than 0.5 percent are Native American. \n[Read more](\nhttps:\/\/medium.com\/stem-and-culture-chronicle\/crunching-the-numbers-on-diversity-in-data-science-events-resources-to-foster-inclusion-5dc81d2ab52#:~:text=In%20fact%2C%20of%20all%20the,ranks%20the%20lowest%20in%20diversity.&text=Data%20suggest%20that%20fewer%20than,than%200.5%25%20are%20Native%20American.)\n\n\nThere has been suggestions from several quarters that there is a conscious effort to undermine women in data science:\n\n>From middle school through graduate school, girls and women are said to \u201cleak\u201d out of computer science, math and other fields that typically lead to careers in data science. Women who have succeeded in these fields think otherwise. \"The pipeline isn\u2019t leaky so much as it\u2019s toxic, they say, lined with practices that can devalue the presence and successes of women and people of colour.\" ....fifty percent of women in STEM reported that they have experienced discrimination on the job\n[Read more](\nhttps:\/\/msmagazine.com\/2021\/07\/26\/data-science-diversity-gender-women-stem\/)\n\n>The biggest concern is: how can a field so susceptible to bias such as data science and AI be driven by a workforce whose demographic is so skewed in favour of men?\"....\"In 2016, researchers at the North Carolina State University made international headlines following a study where they revealed that out of 1.4 million pull requests on GitHub, 78.6 percent of pull requests made by women were accepted compared with 74.6 percent of those by men. However, when their gender was identifiable, the acceptance rate dropped to 62.5 percent\" \n[Read more](https:\/\/towardsdatascience.com\/the-harsh-reality-about-being-a-woman-in-ai-and-data-science-cc6a61f9cddc)\n\n\nThe fact that Google and Facebook reported in 2018 that their AI workforce was made of 10 percent and 15 percent women respectively have fueled the claims of gender bias in favour of men against women in every facet of data science. \n\n>In 2020, on the global level(AI and other departments), \"women made up 30% of the employees at Microsoft, 32% at Google, 45% at Amazon and 37% at Facebook. In fact, these numbers have only slightly improved, if at all, over the past 6 years.[Read more](http:\/\/businessoverbroadway.com\/2021\/03\/08\/gender-inequality-persists-in-data-science-and-ai\/).\" \n\nIt is increasingly becoming difficult to discard these claims with wave of the hand and to assume that the situation will self-adjust itself. Therefore, we attempt to put these claims side by side with evidences presented from data using the results from Kaggle Annual Survey from 2019 to 2021. Also, we shall allude to the Stackoverflow's Developers Survey of the same period in the course of the study\n\n---\n### Objectives\n- [x] To evaluate the plausibility of the diverstity issues in data science and determine the veracity of such claims\n- [x] To do a comparative analysis using Kaggle Survey data from 2019 to 2021 to evaluate the claims that data science has marginalized the women folks or that the structure of data science makes it difficult for women to cope\n- [x] To investigate wether the problem is a data science problem or social problem by comparing men and woman responses for both Kaggle and Stack Overflow's survey for the same period (2019 - 2021)\n- [x] To visualize and analyse data for every country represented on Kaggle Survey from 2019 to 2021; to see the true position of things\n- [x] To classify companies according to number of employess to have a picture of ratio of women to men\n- [x] To see if there exist compensation disparities for data scientists when it comes to gender?\n- [x] To evaluate if the expenditure on Machine Learning and Cloud Computing be used to explain the compensation disparity if it exists?\n- [x] To make the analysis very simple for non-data scientist and the coding very intuitive for data science begginers.","d0511233":"# Section 3: Findings","72e97918":"In most countries coding years are less that 5 years, this shows that data science is still evolving and we might be asking too much if we compare it with other discplines that are relatively old."}}