{"cell_type":{"75dd48e0":"code","e9a2f8ec":"code","ab86e0dd":"code","815646b2":"code","d493936b":"code","8a5b431d":"code","56947324":"code","4a781573":"code","e1787988":"code","99af4fa8":"code","50a46c03":"code","5de8b001":"code","8ba998b9":"code","d56cdaf5":"code","9941537e":"code","cb2b1c47":"code","c6b46a1f":"code","f44088b3":"code","19750b01":"code","9f237892":"code","ebb13079":"markdown","84eec298":"markdown","33562f89":"markdown","0066e10a":"markdown","7d64ddee":"markdown","4aea1cd5":"markdown","29fecffa":"markdown","e8d1f527":"markdown","18cdedca":"markdown","7d6864cd":"markdown","561c5470":"markdown","5b78e46e":"markdown","3805c283":"markdown","1df81467":"markdown","58cce1b6":"markdown","d6435e8b":"markdown","d872b5c7":"markdown","901f9361":"markdown"},"source":{"75dd48e0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e9a2f8ec":"bicycles = ['trek', 'cannondale', 'redline', 'specialized']\nprint(bicycles)","ab86e0dd":"print(bicycles[0])\nprint(bicycles[3])\n# Accessing last Element\nprint(bicycles[-1])","815646b2":"motorcycles = ['honda', 'yamaha', 'suzuki']\nprint(motorcycles)\n# Modifying the first Element\nmotorcycles[0] = 'ducati'\nprint(motorcycles)","d493936b":"motorcycles = ['honda', 'yamaha', 'suzuki']\nprint(motorcycles)\nmotorcycles.append('ducati')\nprint(motorcycles)","8a5b431d":"motorcycles = ['honda', 'yamaha', 'suzuki']\nmotorcycles.insert(0, 'ducati')\nprint(motorcycles)","56947324":"motorcycles = ['honda', 'yamaha', 'suzuki']\nprint(motorcycles)\ndel motorcycles[0]\nprint(motorcycles)","4a781573":"# Creating the list\nmotorcycles = ['honda', 'yamaha', 'suzuki']\nprint(motorcycles)\n# Removing the last item of the list and collecting it in a variable\npopped_motorcycle = motorcycles.pop()\nprint(motorcycles)\nprint(popped_motorcycle)","e1787988":"motorcycles = ['honda', 'yamaha', 'suzuki']\nfirst=motorcycles.pop(0)\nprint(motorcycles)\nprint(first)","99af4fa8":"motorcycles = ['honda', 'yamaha', 'suzuki', 'ducati']\nprint(motorcycles)\nmotorcycles.remove('ducati')\nprint(motorcycles)","50a46c03":"cars = ['bmw', 'audi', 'toyota', 'subaru']\n# Soritng a list\ncars.sort()\nprint(cars)\n","5de8b001":"# Sorting in reverese order\ncars = ['bmw', 'audi', 'toyota', 'subaru']\ncars.sort(reverse=True)\nprint(cars)","8ba998b9":"# Sorting Temporarily\ncars = ['bmw', 'audi', 'toyota', 'subaru']\n# Just for Display\nprint(sorted(cars))\n# The original list is unchanged\nprint(cars)","d56cdaf5":"cars = ['bmw', 'audi', 'toyota', 'subaru']\nlen(cars)","9941537e":"# Iterating through the list\nstudents= ['Arka','Rumi','Debopam','Surjita','Tiyasha','Deborina','Biswanath']\nfor student in students:\n    print(student)","cb2b1c47":"# Doing more with the loop\nstudents= ['Arka','Rumi','Debopam','Surjita','Tiyasha','Deborina','Biswanath']\nfor student in students:\n    print(f\"{student.title()}, is attending python class!\")","c6b46a1f":"for value in range(1,5):\n    print(value)\n\n# Creating a list with even numbers less than 25\nfor value in range(2, 25, 2):\n    print(value)","f44088b3":"# Creating empty list\n\n# Cerating a loop for storing the numbers\n","19750b01":"digits = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]\nmin(digits)\nmax(digits)\nsum(digits)","9f237892":"# Doing more with the loop\nstudents= ['Arka','Rumi','Debopam','Surjita','Tiyasha','Deborina','Biswanath']\n# creating a list with first three students\n\n# creating a list with last three students\n","ebb13079":"* A list is a collection of items in a particular order.\n* In Python, square brackets ([]) indicate a list\n* individual elements in the list are separated by commas","84eec298":"## Length of the list","33562f89":"## Removing an item by value","0066e10a":"## List","7d64ddee":"## Sorting","4aea1cd5":"### Modifying an Element","29fecffa":"## Slicing a list","e8d1f527":"## Creating and printing ","18cdedca":"### Inserting at any position","7d6864cd":"## Pop method is overloaded and supports removal of items from other postions","561c5470":"## Removing using pop\n* Sometimes you\u2019ll want to use the value of an item after you remove it from a list.\n* The pop() method removes the last item in a list, but it lets you workwith that item after removing it.\n* It sounds similar like removing from a stack","5b78e46e":"## Accessing Elements","3805c283":"## Creating a list with numbers","1df81467":"## Changing, Adding, and Removing Elements","58cce1b6":"## Some functions on list","d6435e8b":"### Adding an element at the last","d872b5c7":"### Removing an Item Using the del Statement","901f9361":"## Creating a list which contains square of first five odd numbers"}}