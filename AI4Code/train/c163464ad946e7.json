{"cell_type":{"a8f3ce0b":"code","54156f31":"code","e32820a6":"code","42c2513a":"code","44452e36":"code","78952d65":"code","a82ec7be":"code","c75576a4":"code","a1bbc056":"code","0471906e":"code","726fbc58":"code","ccd8b019":"code","b5f81de6":"code","0aab8f54":"code","b0dfb4f4":"code","309acd4e":"code","3ffb26f6":"code","6a40d01e":"code","be079a00":"code","498ce2f4":"code","ada6bf31":"code","3a4fdbe0":"code","71895af1":"code","1a7ea467":"code","caa2d73c":"code","9e072407":"code","cdc45517":"code","a2f06ea6":"code","7b03050a":"code","11eedc64":"code","4929ec95":"code","ddc92d3b":"markdown","b2f70ed9":"markdown","0e32be92":"markdown","d0c475a5":"markdown","1ea05040":"markdown","bee74a16":"markdown","be23ddd1":"markdown","4f3d1c0a":"markdown","d0e98d4d":"markdown","531ddbf8":"markdown","2276a6fe":"markdown","22f91743":"markdown","16dc6ed5":"markdown","0725200d":"markdown","b551e5a2":"markdown","67755127":"markdown","cdbed450":"markdown","1b1b2301":"markdown","5e58af9a":"markdown","0733a421":"markdown","d3df7914":"markdown","93b8f674":"markdown","b3df5909":"markdown","710a2fc0":"markdown"},"source":{"a8f3ce0b":"import numpy as np\nimport pandas as pd \n\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline\n\nimport os\nprint(os.listdir(\"..\/input\"))\n","54156f31":"data = pd.read_csv(\"..\/input\/census\/adult.csv\")","e32820a6":"print(len(data))\ndata.head(10)","42c2513a":"data.isnull().sum()","44452e36":"data.dtypes","78952d65":"sns.countplot(data['income'])\nplt.show()","a82ec7be":"sns.countplot(data['sex'])\nplt.show()","c75576a4":"ages = data['age'].hist(bins = max(data['age'] - min(data['age'])))\nmean_val = np.mean(data['age'])\n\nplt.axvline(mean_val, color = \"yellow\", linestyle = 'dashed', linewidth = 2, label = 'mean age')\n\nplt.xlabel('age')\nplt.ylabel('count')\nplt.legend()\nplt.show()","a1bbc056":"data['hours.per.week'].hist()\nplt.xlabel('hours per week')\nplt.ylabel('count')\nplt.show()","0471906e":"fig, axs = plt.subplots(ncols = 2,nrows= 4, figsize =(20,20))\nfig.delaxes(axs[3][1])\nplt.subplots_adjust(hspace = 0.8)\n\n#workclass\nwc_plot = sns.countplot(data['workclass'], ax = axs[0][0])\nwc_plot.set_xticklabels(wc_plot.get_xticklabels(), rotation = 45, ha = \"right\")\n\n#native country\nnc_plot = sns.countplot(data['native.country'], ax = axs[0][1])\nnc_plot.set_xticklabels(nc_plot.get_xticklabels(), rotation = 65, ha = \"right\")\n\n#education\norder=['Preschool', '1st-4th', '5th-6th', '7th-8th', '9th', '10th', '11th', '12th', 'HS-grad',\n       'Some-college', 'Assoc-acdm', 'Assoc-voc', 'Bachelors', 'Masters', 'Prof-school', 'Doctorate']\ned_plot = sns.countplot(data['education'],order = order, ax = axs[1][0])\ned_plot.set_xticklabels(ed_plot.get_xticklabels(), rotation = 45)\n\n#marital status\nms_plot = sns.countplot(data['marital.status'], ax = axs[1][1])\nms_plot.set_xticklabels(ms_plot.get_xticklabels(), rotation = 45, ha = \"right\")\n\n#relationship\nr_plot = sns.countplot(data['relationship'], ax = axs[2][0])\nr_plot.set_xticklabels(r_plot.get_xticklabels(), rotation = 45, ha = \"right\")\n\n#race\nrc_plot = sns.countplot(data['race'], ax = axs[2][1])\nrc_plot.set_xticklabels(rc_plot.get_xticklabels(), rotation = 45, ha = \"right\")\n\n#occupation\no_plot = sns.countplot(data['occupation'], ax = axs[3][0])\no_plot.set_xticklabels(o_plot.get_xticklabels(), rotation = 45, ha = \"right\")","726fbc58":"plt.figure(figsize = (20,5))\nsex_occupation = sns.countplot(data['occupation'], hue = data['sex'])\nsex_occupation.set_xticklabels(sex_occupation.get_xticklabels(), rotation =45)\nplt.show()","ccd8b019":"plt.figure(figsize = (20,5))\ned_sex = sns.countplot(data['education'], hue = data['sex'] ,order = order)\ned_sex.set_xticklabels(ed_sex.get_xticklabels(), rotation =45)\nplt.show()","b5f81de6":"plt.figure(figsize=(20, 6))\nsns.countplot(data['marital.status'], hue=data['income'])\nplt.show()","0aab8f54":"plt.figure(figsize=(20, 6))\nsns.countplot(data['sex'], hue=data['income'])\nplt.show()","b0dfb4f4":"plt.figure(figsize = (20,5))\nsex_occupation = sns.countplot(data['occupation'], hue = data['income'])\nsex_occupation.set_xticklabels(sex_occupation.get_xticklabels(), rotation =45)\nplt.show()","309acd4e":"plt.figure(figsize=(20, 6))\nsns.countplot(data['race'], hue=data['income'])\nplt.show()","3ffb26f6":"plt.figure(figsize = (20,5))\ned_occupation = sns.countplot(data['education'], hue = data['income'] ,order = order)\ned_occupation.set_xticklabels(ed_occupation.get_xticklabels(), rotation =45)\nplt.show()","6a40d01e":"plt.figure(figsize=(20, 6))\nsns.countplot(data['workclass'], hue=data['income'])\nplt.show()","be079a00":"plt.figure(figsize=(20, 6))\nsns.countplot(data['relationship'], hue=data['income'])\nplt.show()","498ce2f4":"data['sex'] = data['sex'].map({'Male': 1, 'Female': 0}) ","ada6bf31":"data['race'] = data['race'].map({'White': 1, 'Asian-Pac-Islander': 1, 'Black':0, 'Amer-Indian-Eskimo':0, 'Other':0}) \ndata['relationship'] = data['relationship'].map({'Not-in-family':0, 'Unmarried':0, 'Own-child':0, 'Other-relative':0, 'Husband':1, 'Wife':1})\ndata['marital.status'] = data['marital.status'].map({'Widowed':0, 'Divorced':0, 'Separated':0, 'Never-married':0, 'Married-civ-spouse':1, 'Married-AF-spouse':1, 'Married-spouse-absent':0})","3a4fdbe0":"g = sns.heatmap(data[['relationship', 'marital.status']].corr(),annot=True, fmt = \".2f\", cmap = \"coolwarm\")\nplt.show()\n","71895af1":"data.drop(['marital.status'], axis=1,inplace=True)","1a7ea467":"data.drop(['education'], axis=1,inplace=True)\n\nlabels = ['workclass', 'occupation', 'native.country']\n\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nfor l in labels:\n    data[l]=le.fit_transform(data[l])","caa2d73c":"data.head(10)","9e072407":"Selected_features = ['age','workclass','education.num','occupation','relationship','race','sex','capital.gain','fnlwgt','capital.loss','hours.per.week','native.country']\n\nX = data[Selected_features]\ny = data['income']","cdc45517":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression","a2f06ea6":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=2)","7b03050a":"logreg = LogisticRegression()\nlogreg.fit(X_train, y_train)\ny_pred = logreg.predict(X_test)\nacc_logreg = round(accuracy_score(y_pred,y_test)*100,2)\nprint(acc_logreg)","11eedc64":"from sklearn.ensemble import RandomForestClassifier\n\nrandomforest = RandomForestClassifier()\nrandomforest.fit(X_train, y_train)\ny_pred = randomforest.predict(X_test)\nacc_randomforest = round(accuracy_score(y_pred, y_test) * 100, 2)\nprint(acc_randomforest)","4929ec95":"from sklearn.ensemble import GradientBoostingClassifier\nxgboost = GradientBoostingClassifier()\nxgboost.fit(X_train, y_train)\ny_pred = xgboost.predict(X_test)\nacc_xgboost = round(accuracy_score(y_pred, y_test) * 100, 2)\nprint(acc_xgboost)","ddc92d3b":"# > **Loading the data**","b2f70ed9":"we will split dataset into test and train data using train_test_split.","0e32be92":"The following heat map shows corrrealtion between marital status and relationship variable. We can see that they are almost same variables now, after mapping. Thus we can drop any one of them.","d0c475a5":"This notebook will be updated in future.","1ea05040":"We will check if we have any missing values.","bee74a16":"Now we will plot histogram for \"hours worked per week\" variable. We will later use this to relate with income parameter.","be23ddd1":"We will now plot a histogram to get distribution of age parameter. I have used axvline in the plot to get the mean of age variable.","4f3d1c0a":"I have used LogisticRegression, RandomForestClassifier and GradientBoostingClassifier for this data set.","d0e98d4d":"# > **Data Cleaning**","531ddbf8":"Import necessary libraries.","2276a6fe":"Firstly we will import some important libraries for data analysis and visualization.","22f91743":"In this notebook, I work with Census Income dataset. The prediction task is to determine if a person makes over $50k a year. I start with exhaustive EDA and then try some prediction models to complete the prediction task.","16dc6ed5":"Now we visualize sex parameter with occupation and education parameters.","0725200d":"Let us have a first ook at the dataset. We see that there are 32561 rows in the dataset.","b551e5a2":"# Adult Census Income (EDA and Prediction)","67755127":"# > **Data visualization**","cdbed450":"We will map categorical variables to logical variables to make data ready for further predictions.","1b1b2301":"GradientBoostingClassifier gave acccuracy of 86.49%.","5e58af9a":"Let us load the dataset into kernel.","0733a421":"Firstly we will plot a countplott using seaborns for income variable. It is clearly seen that people with yearly income <=$50k dominate in terms of count.","d3df7914":"Similarly we will plot countplots for other parameters using subplots method of matplotlib.","93b8f674":"# > **Prediction**","b3df5909":"In the same fashion, I have plotted dua relationship with income variable and all other variables. ","710a2fc0":"A countplot of sex variable will give us distribution of male and female in our dataset."}}