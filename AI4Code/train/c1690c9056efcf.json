{"cell_type":{"a289b354":"code","db8ad9e7":"code","adc5d57b":"code","43a812cf":"code","9bd63f69":"code","30722603":"code","3ffa669d":"code","807781c7":"code","c083ff19":"code","a2f11a9b":"code","e7d14444":"code","378bf815":"code","fd71e1f2":"code","cf862d48":"code","cb391d40":"code","636c5c6a":"code","5960a5b1":"code","b87a6796":"code","3c473d3b":"code","cc50b50d":"code","8621a09d":"code","751ec009":"code","9df46abd":"code","06b42d96":"code","95130598":"code","8f83894f":"code","560c28b9":"code","d6f42a92":"code","92fd8d16":"code","ed223a56":"code","c5c63e38":"code","764018e5":"code","7c0b378b":"code","dadab2a4":"code","37d0245e":"code","f5177ce0":"code","4c324ced":"code","be19410b":"code","55dc513e":"code","6b110796":"code","ff34e129":"code","fb189433":"code","0107b10a":"code","bcd6155b":"code","62109920":"code","439a4280":"code","2c768a39":"markdown"},"source":{"a289b354":"!pip install py7zr\nfrom py7zr import unpack_7zarchive\nimport shutil\nshutil.register_unpack_format('7zip', ['.7z'], unpack_7zarchive)\n\n# unzitensorflow.keras.preprocessingshutil.unpack_archive('..\/input\/cifar-10\/train.7z')\n\n\n","db8ad9e7":"shutil.unpack_archive('..\/input\/cifar-10\/test.7z')\nshutil.unpack_archive('..\/input\/cifar-10\/train.7z')","adc5d57b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\n%matplotlib inline\nimport os\nimport tensorflow.keras as keras\nfrom tensorflow.keras.preprocessing.image import load_img ,ImageDataGenerator\nfrom tensorflow.keras.models import Model ,Sequential \nfrom tensorflow.keras.layers import Conv2D, BatchNormalization, MaxPooling2D, Dropout, Dense,SeparableConv2D ,Flatten","43a812cf":"train_dir=os.listdir('.\/train')\ntrain_dir_len = len(train_dir)\nprint('Length :\\t',\n      train_dir_len)","9bd63f69":"train_labels = pd.read_csv('..\/input\/cifar-10\/trainLabels.csv')\ntrain_images = pd.DataFrame(columns=['id','labels','path'] ,dtype =str)\ntest_labels =pd.read_csv('..\/input\/cifar-10\/sampleSubmission.csv')","30722603":"test_labels","3ffa669d":"tf.random.set_seed(\n    32\n)","807781c7":"train_root = '.\/train\/'\nfor i in range( 0 , train_dir_len):\n    path = train_root+str(i+1)+'.png'\n    if os.path.exists(path):\n        \n        train_images=train_images.append([\n         {   'id' :train_labels['id'].iloc[i],\n            'label' :train_labels['label'].iloc[i],\n            'path' :str(i+1)+'.png'}\n        ])","c083ff19":"train_images=train_images.sort_values(by=['id'])\n\ntrain_images.head(10)\ntrain_images.drop(['labels'] ,axis=1)","a2f11a9b":"class_names = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']\nfor name in class_names :\n    index = class_names.index(name)\n    train_images.loc[train_images['label'] ==name ,'label'] =str(index)\ndisplay_groupby = train_images.groupby(['label']).count()\ndisplay_groupby.head(10)","e7d14444":"train_images=train_images.drop(['labels'] ,axis=1)","378bf815":"batch_size = 64 \nnum_class= 10\n","fd71e1f2":"train_labels['id'] = train_labels['id'].astype(str)","cf862d48":"train_images","cb391d40":"train_l = train_labels[:35000]","636c5c6a":"val_l = train_labels[35000:]","5960a5b1":"data_generator = ImageDataGenerator(rescale=1\/255. ,rotation_range=True , validation_split=.3)","b87a6796":"train_generator =  data_generator.flow_from_dataframe(dataframe=train_images,directory='.\/train',\n                                                    x_col='path',\n                                                    y_col='label',\n                                                    subset='training',\n                                                    batch_size=batch_size,\n                                                    \n                                                    target_size=(32,32),\n                                                    class_mode='categorical')","3c473d3b":"val_generator = data_generator.flow_from_dataframe(dataframe=train_images,directory='.\/train',\n                                                    x_col='path',\n                                                    y_col='label',\n                                                    subset='validation',\n                                                    batch_size=batch_size,\n                                                    shuffle=True,\n                                                    target_size=(32,32),\n                                                    class_mode='categorical')","cc50b50d":"model = Sequential()\nmodel.add(SeparableConv2D(32, kernel_size=3, activation='relu', padding='same', input_shape=(32,32,3)))\nmodel.add(BatchNormalization())\nmodel.add(SeparableConv2D(32, kernel_size=3, activation='relu', padding='same'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D())\nmodel.add(Dropout(0.2))\n\nmodel.add(SeparableConv2D(64, kernel_size=3, activation='relu', padding='same'))\nmodel.add(BatchNormalization())\nmodel.add(SeparableConv2D(64, kernel_size=3, activation='relu', padding='same'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D())\nmodel.add(Dropout(0.3))\n\nmodel.add(SeparableConv2D(128, kernel_size=3, activation='relu', padding='same'))\nmodel.add(BatchNormalization())\nmodel.add(SeparableConv2D(128, kernel_size=3, activation='relu', padding='same'))\nmodel.add(BatchNormalization())\n\nmodel.add(MaxPooling2D())\nmodel.add(Dropout(0.4))\n\n\n\nmodel.add(SeparableConv2D(128,kernel_size=(4,4),strides=(1,1),padding='valid',activation='relu'))\nmodel.add(BatchNormalization())\nmodel.add(SeparableConv2D(128,kernel_size=(1,1),strides=(1,1)\n                 ,padding='valid',activation='relu'))\nmodel.add(BatchNormalization())\n# model.add(MaxPooling2D())\nmodel.add(Dropout(0.6))\nmodel.add(SeparableConv2D(10,kernel_size=(1,1),strides=(1,1),padding='valid',activation='softmax'))\n\nmodel.add(Flatten())\n\n# model.add(Dense(128, activation='relu'))\n# model.add(BatchNormalization())\n# model.add(Dropout(0.4))\n# model.add(Dense(10, activation='softmax'))\n\nmodel.compile(loss='categorical_crossentropy', optimizer=keras.optimizers.Adam(0.001), metrics=['accuracy'])\nmodel.summary()","8621a09d":"reduce_le = keras.callbacks.ReduceLROnPlateau(monitor=\"val_loss\", patience=5,factor=.7 , min_denta=.00001)\nse = keras.callbacks.EarlyStopping(monitor=\"val_loss\" ,patience=10 ,verbose=1 ,restore_best_weights=True)\nhistory = model.fit(train_generator,epochs=100,validation_data=val_generator ,callbacks=[reduce_le,se] )","751ec009":"_, ax = plt.subplots(2, 1)\nax[0].plot(history.history['loss'], color='b', label='loss')\nax[0].plot(history.history['val_loss'], color='r', label='val_loss')\nlegend = ax[0].legend(loc='best', shadow=True)\n\nax[1].plot(history.history['accuracy'], color='b', label='accuracy')\nax[1].plot(history.history['val_accuracy'], color='r', label='val_accuracy')\nlegend = ax[1].legend(loc='best', shadow=True)","9df46abd":"!mkdir .\/data\/\n!mv .\/test .\/data","06b42d96":"test_data_generator = ImageDataGenerator(rescale=1.\/255.)\ntest_generator = test_data_generator.flow_from_directory(directory='.\/data',\n            batch_size=batch_size,\n            shuffle=False,color_mode='rgb',\n            target_size=(32,32),\n            class_mode=None)","95130598":"train_pre = model.predict(train_generator)\n","8f83894f":"val_pre = model.predict(val_generator)\n","560c28b9":"prediction = model.predict(test_generator)\npre_data = pd.DataFrame(data=prediction)","d6f42a92":"class_names = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']\nfor name in class_names :\n    index = class_names.index(name)\n    train_l.loc[train_l['label'] ==name ,'label'] =str(index)\n    val_l.loc[val_l['label'] ==name ,'label'] =str(index)\n\ndisplay_groupby = train_l.groupby(['label']).count()\ndisplay_groupby.head(10)\n","92fd8d16":"# display_groupby = train_labels.groupby(['label']).count()\n# display_groupby\n","ed223a56":"# train_labels['label']=train_labels['label'].astype('int32')\n","c5c63e38":"# test_lab['label']=test_labels['label'].astype('int32')","764018e5":"train_l","7c0b378b":" train_l=train_l.drop(['id'] ,axis=1)","dadab2a4":" val_l=val_l.drop(['id'] ,axis=1)","37d0245e":"val_l =val_l.astype('int64')\ntrain_l =train_l.astype('int64')","f5177ce0":"# val_l =val_l*255\n# train_l =train_l*255","4c324ced":"val_l.head(100)","be19410b":"pre_data","55dc513e":"from xgboost import XGBClassifier\n\nxgbmodel = XGBClassifier(objective='multi:softprob', \n                      num_class= 10,use_label_encode=False)\nxgbmodel.fit(train_pre, train_l)\nxgbmodel.score(val_pre, val_l)","6b110796":"\n\n\nprediction =xgbmodel.predict(pre_data)","ff34e129":"# prediction = np.argmax(prediction, axis=1)\nsubmission = pd.DataFrame(columns=['id', 'label'], dtype=str)\nsubmission['label'] = [class_names[int(i)] for i in prediction]\nsubmission['id'] = [ (''.join(filter(str.isdigit, name ))) for name in test_generator.filenames]\n# submission = pd.DataFrame({'id':test_labels['id'],'label':prediction})\nsubmission.sort_values(by=['id'])\nsubmission.head()","fb189433":"prediction\n","0107b10a":"%rm -rf .\/train\n%rm -rf .\/data","bcd6155b":"submission.to_csv('submission.csv', index=False)","62109920":"prediction","439a4280":"test_labels","2c768a39":"# load data"}}