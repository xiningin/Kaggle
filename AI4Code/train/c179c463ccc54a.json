{"cell_type":{"6331fc90":"code","7c671e05":"code","45590ace":"code","6e972d83":"code","46af630e":"code","31bd8c44":"code","62ba7017":"code","db508226":"code","fb258f7f":"code","52e2cd74":"markdown","48c307bf":"markdown","eb736a87":"markdown","147678a3":"markdown","71d2557a":"markdown"},"source":{"6331fc90":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7c671e05":"iris = pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')","45590ace":"iris.head()","6e972d83":"iris.info()","46af630e":"iris.isnull().sum()","31bd8c44":"iris.describe()","62ba7017":"iris.drop('Id', axis=1, inplace=True)\niris.head()","db508226":"from sklearn.tree import DecisionTreeClassifier\n\n#making Decesion Tree Model\ntree_model = DecisionTreeClassifier()\n\n#training model\nX = iris.drop('Species',axis=1)\ny = iris['Species']\n\ntree_model.fit(X,y)\n\n\n#predict our model using tree_model.predict([['SepalLengthCm','SepalWidthCm',''PetalLengthCm','PetalWidthCm']])\n\ntree_model.predict([[6.2,3.4,5.4,2.3]])\n","fb258f7f":"#Visualiazation decision tree\n\nfrom sklearn.tree import export_graphviz\n\nexport_graphviz(tree_model,out_file ='iris_decisiontree.dot',\n               feature_names =X.columns,\n               class_names = ['Iris-sentosa','Iris-Versicolor',\n                              \n                              'Iris-virginia'],\n               rounded =True, filled = True)","52e2cd74":"Data set not have missing value","48c307bf":"based on description, ID column is not make sense if we see, the minimum value is 1 dan maximum value is 150, this is indicate to much unique in ID column, so ID column will exclude in our model","eb736a87":"### Making model with Decision Tree","147678a3":"**the output in your computer** <br>\n    upload file in https:\/\/onlineconvertfree.com\/converter\/images\/ so you will see the decision tree image classification. <br>\n![20200430195649364809cc4d0ab885bfb4bda5c8262b0f.jpeg](attachment:1cbd7585-bca5-46bb-ade7-20a11ffb3e27.jpeg) ","71d2557a":"our model predict if <br>\nSepal Length = 6.2 <br>\nSepal Width = 3.4 <br>\npetal Length = 5.4 <br>\nPetal Width = 2.3 <br>\n\nthe spesice will be **virginica**\n"}}