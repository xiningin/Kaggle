{"cell_type":{"8332dbe4":"code","ecb49b8e":"code","4e5583a0":"code","bf7e2664":"code","69d451c1":"code","1a3db392":"code","3a21094d":"code","2ae8aa6f":"code","4fd155de":"code","320da978":"code","b95c1a2e":"code","68a55ec9":"code","118f536d":"code","5ca5b3f5":"code","c5daed6a":"code","78a1f383":"code","1d239cac":"code","f14a4344":"code","ef188d29":"code","378a3954":"code","9de2d12a":"code","074a7c3e":"code","88428e66":"code","f904de90":"code","d099c638":"code","ea540f9b":"code","89b84e1c":"code","8fb0a16e":"code","7cffe560":"code","4e2f4a73":"code","21570b67":"markdown","9a548c2a":"markdown","f2ef073e":"markdown","b9c0a4d2":"markdown","e8a8cc0e":"markdown","0e9521a6":"markdown","ba9c2d1b":"markdown","bd766d58":"markdown","d8a98408":"markdown","369b18c9":"markdown","adb8bbc7":"markdown","47f9951c":"markdown","b5f26e75":"markdown","074e4927":"markdown","22f29a88":"markdown","050be38f":"markdown","e439a1c7":"markdown","faa507bc":"markdown","22a8906c":"markdown","8e75df30":"markdown","9cc3551a":"markdown"},"source":{"8332dbe4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import MaxAbsScaler\nfrom sklearn.preprocessing import StandardScaler\nimport seaborn as sb\n\n%matplotlib inline\n","ecb49b8e":"dados = pd.read_csv('..\/input\/SEMANAL_BRASIL-DESDE_2013.csv', decimal=\",\")","4e5583a0":"dados.shape #Linhas x Colunas","bf7e2664":"dados.index # Descri\u00e7\u00e3o Index","69d451c1":"dados.columns #Colunas presentes","1a3db392":"dados.count() #Total dados n\u00e3o-nulos","3a21094d":"numeroPostosPesquisados = dados.iloc[0:1824, 3]\nsemanaInicial = dados.iloc[0:1824, 0]\nsemanaFinal = dados.iloc[0:1824, 1]","2ae8aa6f":"tipoCombustivel = dados.set_index('PRODUTO')\ntipoCombustivel.head()","4fd155de":"gasolina = tipoCombustivel.loc['GASOLINA COMUM']","320da978":"gasolina\n","b95c1a2e":"numeroPP = gasolina.iloc[0:304 , 2]","68a55ec9":"valMax = numeroPP.max() \nprint(valMax,\"----> N\u00famero maximo de postos onde foram pesquisados o valor em R$, da gasolina\")","118f536d":"valMin = numeroPP.min() \nprint(valMin,\"----> N\u00famero m\u00ednimo de postos onde foram pesquisados o valor em R$, da gasolina\")","5ca5b3f5":"media = numeroPP.mean() ","c5daed6a":"print(\"{0:.0f}\".format(round(media)),\"----> M\u00e9dia de postos onde foram pesquisados o valor em R$, da gasolina \") ","78a1f383":"histograma = numeroPP.hist()\nprint(histograma, \"@@@ Esse \u00e9 o gr\u00e1fico de n\u00famero de postos pesquisados em fun\u00e7\u00e3o do n\u00ba de postos pesquisados\")","1d239cac":"desvioPadrao = numeroPP.std()\nprint(\"{0:.0f}\".format(round(desvioPadrao)),\"----> Valor de desvio padr\u00e3o \") ","f14a4344":"mTruncada = valMax + valMin - media\nprint(\"{0:.0f}\".format(round(mTruncada)),\"----> Valor da M\u00e9dia Truncada \") ","ef188d29":"gasolina.describe()","378a3954":"dadosKM = dados.iloc[0:1824, [8,14]]\ndadosKM.replace(\".\",\",\")\ndadosKM_array = dadosKM.values\nkmeans = KMeans(n_clusters=5, init='k-means++', n_init=10, random_state=1234)\ndadosKM[\"clusters\"] = kmeans.fit_predict(dadosKM_array)\ndadosKM.groupby(\"clusters\").aggregate(\"mean\").plot.bar(figsize=(10,7.5))\nplt.title(\"(R$ M\u00e1ximo) Revenda x Distribui\u00e7\u00e3o\")","9de2d12a":"dadosKM","074a7c3e":"gasolinaKM = gasolina.iloc[0:1824, [7,13]]\ngasolinaKM_array = gasolinaKM.values\nkmeans = KMeans(n_clusters=5, init='k-means++', n_init=10, random_state=1234)\ngasolinaKM[\"clusters\"] = kmeans.fit_predict(gasolinaKM_array)\ngasolinaKM.groupby(\"clusters\").aggregate(\"mean\").plot.bar(figsize=(10,7.5))\nplt.title(\"R$ REVENDA X DISITRIBUI\u00c7\u00c3O (GASOLINA) \")","88428e66":"gasolinaKM","f904de90":"x = gasolinaKM.iloc[:, [0,1]].values\ny = gasolinaKM.iloc[:, 2].values","d099c638":"from sklearn.model_selection import train_test_split  \nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.20)","ea540f9b":"from sklearn.preprocessing import StandardScaler  \nscaler = StandardScaler()  \nscaler.fit(x_train)\n\nx_train = scaler.transform(x_train)  \nx_test = scaler.transform(x_test) ","89b84e1c":"from sklearn.neighbors import KNeighborsClassifier  # import do KNN\nclassifier = KNeighborsClassifier(n_neighbors = 5)  # parametro = 5\nclassifier.fit(x_train, y_train)  ","8fb0a16e":"y_pred = classifier.predict(x_test)","7cffe560":"from sklearn.metrics import classification_report, confusion_matrix  # import da matriz de confus\u00e3o e report\nprint(confusion_matrix(y_test, y_pred)) # imprime a matriz de confus\u00e3o\nprint(classification_report(y_test, y_pred)) # imprime as m\u00e9tricas","4e2f4a73":"classifier = KNeighborsClassifier(n_neighbors = 18)\nclassifier.fit(x_train, y_train)\nprint(confusion_matrix(y_test, y_pred))\nprint(classification_report(y_test, y_pred))","21570b67":"### Avaliando o algoritmo\nPara avaliar um algoritmo, a matriz de confus\u00e3o, a precis\u00e3o, o recall e a pontua\u00e7\u00e3o f1 s\u00e3o as **m\u00e9tricas** mais utilizadas.","9a548c2a":"# Valida\u00e7\u00e3o","f2ef073e":"### Declarando vari\u00e1vel para armazenar somenta a coluna de ***N\u00daMERO DE POSTOS PESQUISADOS***, ***DATA INICIAL*** e ***DATA FINAL*****.","b9c0a4d2":"Os resultados mostram que o algoritmo KNN foi capaz de classificar 61 registros do conjunto de teste com quase 100% de precis\u00e3o","e8a8cc0e":"Nota-se que em todos clusters(grupos) formados o pre\u00e7o m\u00e1ximo de revenda foi superior ao pre\u00e7o m\u00e1ximo de distribui\u00e7\u00e3o","0e9521a6":"# An\u00e1lise Explorat\u00f3ria no DATASET (EDA)\nVeremos respectivamente...\n~~~~\n1- Quantidade de linhas e colunas\n2- Descri\u00e7\u00e3o do Index\n3- Quais colunas est\u00e3o presentes no Dataframe\n4 -Contagem de dados n\u00e3o-nulos\n~~~~\n","ba9c2d1b":"# M\u00e9dia truncada, Desvio Padr\u00e3o, Histograma","bd766d58":"Apos ajustar o numero de Neighbors para 18 vimos que n\u00e3o obtivemos 100% de precis\u00e3o... isso acontece porque o KNN nem sempre funciona t\u00e3o bem com recursos de alta dimensionalidade ou categ\u00f3ricos.","d8a98408":"### Treinamento e Previs\u00f5es","369b18c9":"#### Declarando 2 vari\u00e1veis X e Y \nonde **X** recebe os atributos (PRE\u00c7O M\u00c1XIMO REVENDA, PRE\u00c7O M\u00c1XIMO DISTRIBUI\u00c7\u00c3O) E **Y** recebe os rotulos ( clusters formados ) ","adb8bbc7":"Definimos agora somente os dados referente ao combustivel do tipo **GASOLINA COMUM**","47f9951c":"### Obtendo ***m\u00e9dia***, ***m\u00e9dia truncada***, ***valor m\u00e1ximo***, ****valor m\u00ednimo*** do n\u00famero de postos pesquisados para o tipo de combustivel \"GASOLINA COMUM\".","b5f26e75":"Logo abaixo veremos o pacote de pr\u00e9-processamento da Scikit-Learn tem algumas fun\u00e7\u00f5es de padroniza\u00e7\u00e3o como a **StandardScaler()**\nO Ele ignora a forma da distribui\u00e7\u00e3o e transforma os dados para forma com m\u00e9dia pr\u00f3xima de zero e um desvio padr\u00e3o pr\u00f3ximo a um.","074e4927":"# Aplicando KNN\n\n#### O Algoritmo foi aplicado encima dos resultados obtido com o pr\u00e9-processamento dos dados e aplica\u00e7\u00e3o do K-means\n","22f29a88":"Previsao dos dados de teste","050be38f":"# Aplicando K-Means\n","e439a1c7":"### Divis\u00e3o em conjunto de teste e de treino\nPara evitar o ajuste excessivo, dividiremos nosso conjunto de dados em duas partes, uma para treinamento e outra para teste e avaliar o modelo.\nDesta forma, nosso algoritmo \u00e9 testado em dados n\u00e3o vistos, como seria em uma aplica\u00e7\u00e3o em **produ\u00e7\u00e3o**.\nO c\u00f3digo abaixo divide o conjunto de dados em 80% de dados de treino e 20% de dados de teste.","faa507bc":"### Leitura do Dataset","22a8906c":"O m\u00e9todo **fit()** calcula a m\u00e9dia e o desvio padr\u00e3o da distribui\u00e7\u00e3o para fazer a padroniza\u00e7\u00e3o dos dados.\nE m\u00e9todo **transform()** aplica os c\u00e1lculos para fazer a transforma\u00e7\u00e3o nos dados.","8e75df30":"Seperamos quais os tipos de produtos foram utilizados na pesquisa **colocamos no index** e com isso mostramos a tabela em fun\u00e7\u00e3o dos **PRODUTOS**","9cc3551a":"#### Note a forma\u00e7\u00e3o da ultima coluna \"clusters\" onde aleatoriamente foram distribuidos registros em 5 grupos (0,1,2,3,4) e com isso a plotagem gr\u00e1fica nos mostra as chances em que determinado grupo tem de ter o pre\u00e7o m\u00e1ximo de revenda maior que de distribui\u00e7\u00e3o (nulo)"}}