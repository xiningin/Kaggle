{"cell_type":{"ff293982":"code","fd3e5593":"code","00a6f31c":"code","82ec6509":"code","7a809b62":"code","ef6582cc":"code","2ebb9ce9":"code","5e567af6":"code","d4e4d5c6":"code","c9cc4173":"code","878baebf":"code","3b550318":"code","6de06ef7":"code","9dd80014":"code","40225945":"code","2c192263":"code","64a91f96":"code","2facb4f3":"markdown","a806001c":"markdown","1adb326b":"markdown"},"source":{"ff293982":"# DECISION TREE CLASSIFICATION ","fd3e5593":"# import the library\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n ","00a6f31c":"# Read the csv file\ndf = pd.read_csv('..\/input\/pima-indians-diabetes-database\/diabetes.csv')\ndf.head()","82ec6509":"# To check the observation and faeture\ndf.shape","7a809b62":"# Here we separate the data into two parts one is our input and other is output where X is input and y is our output.\nX = df.iloc[:,0:8].values\ny = df.iloc[:,8].values\nprint(X)\nprint(y)","ef6582cc":"# Split the data into training and testing set\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3)\n","2ebb9ce9":"# Check the shape of our training and testing dataset\nprint(X_train.shape)\nprint(X_test.shape)","5e567af6":"# Import Decision Tree Classifier for classification problem\nfrom sklearn.tree import DecisionTreeClassifier\nDTC = DecisionTreeClassifier()","d4e4d5c6":"# Fit the data\nDTC = DTC.fit(X_train,y_train)\n# for prediction\ny_pred = DTC.predict(X_test)\n","c9cc4173":"# Check accuracy","878baebf":"from sklearn.metrics import accuracy_score\nprint('Accuracy', accuracy_score(y_test,y_pred))","3b550318":"\n## Visualize the decision tree","6de06ef7":"from sklearn.tree import export_graphviz\nfrom io import StringIO\nfrom IPython.display import Image\nimport pydot","9dd80014":"plt.figure(figsize=(10,10))\ndot_data = StringIO()\nexport_graphviz(DTC, out_file=dot_data, filled=True, rounded=True, special_characters=True, feature_names=['Pregnancies','Glucose','BloodPressure', 'SkinThickness','Insulin',\t'BMI','DiabetesPedigreeFunction','Age'], class_names=['0','1'])\ngraph = pydot.graph_from_dot_data(dot_data.getvalue())\nImage(graph[0].create_png())","40225945":"# Optimize decision tree performance by using pruning # \nDTC = DecisionTreeClassifier(criterion= 'entropy', max_depth=3)\nDTC = DTC.fit(X_train,y_train)\ny_pred = DTC.predict(X_test)","2c192263":"# again check accuracy score\nprint('Accuracy',accuracy_score(y_test,y_pred))","64a91f96":"# again draw decision tree\ndot_data = StringIO()\nexport_graphviz(DTC, out_file=dot_data, filled=True, rounded=True, special_characters=True, feature_names=['Pregnancies','Glucose','BloodPressure', 'SkinThickness','Insulin',\t'BMI','DiabetesPedigreeFunction','Age'],class_names=['0','1'])\ngraph = pydot.graph_from_dot_data(dot_data.getvalue())\nImage(graph[0].create_png())","2facb4f3":"In Decision Tree Classification we use diabetes dataset for Prediction.\n\nFirst Download the dataset from kaggle.\n","a806001c":"# DECISION TREE #\n\n\n","1adb326b":"\nA decision tree is a flowchart-like structure in which each internal node represents a \"test\" on an attribute, each branch represents the outcome of the test, and each leaf node represents a class label (decision taken after computing all attributes.\nDecision Tree is used in Decision Analysis. Decision Tree Solves two types of problem which following as:\n\n\n*   Regression Based Problems\n*   Classification Based Problems\n\n"}}