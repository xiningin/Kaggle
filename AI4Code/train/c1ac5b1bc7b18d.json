{"cell_type":{"5259f44c":"code","e9479f8e":"code","50d05a23":"code","f3ed9738":"code","bfd0f257":"code","df619a46":"code","27f678cf":"code","c7bd19ef":"code","bcbe248e":"code","c5e1dca7":"code","c9730b55":"code","91205c09":"code","5d7f1181":"code","6870fe5d":"code","5a387e6e":"code","9202b9fe":"code","e7eb4336":"code","e7585947":"code","50273960":"code","67ae8934":"code","8fd9fc1a":"code","bf1a8404":"code","26c232cf":"code","14be1fe4":"code","97b6c93d":"code","8784c4ed":"code","a8b0c69e":"code","20ecb42e":"code","73b8cf38":"code","42cafdff":"code","2000370f":"code","5fb34010":"code","0e5fe45f":"code","8e09b45f":"code","bef2a6b1":"code","7c322b41":"code","62a95c5e":"code","049ca62d":"code","6625117b":"code","1cf517bd":"code","46217e26":"code","a87f0f6a":"code","73097d71":"code","27f64395":"code","73e8ea4f":"code","a5ddf72c":"code","453a7d23":"code","51efbc0f":"code","8034af12":"code","a4a91fd1":"code","1f586e03":"code","17bf1006":"code","f0353d97":"code","a8349d11":"code","637fbc05":"code","ea1025ec":"code","30cad8c0":"code","885ce556":"code","239a2638":"code","691f849d":"code","75bd587f":"code","88fa5469":"code","df0e766d":"markdown","58d6d042":"markdown","77547476":"markdown","066367a3":"markdown","94a5877d":"markdown","4ee51299":"markdown","14513494":"markdown","2f3879d2":"markdown","6e3c1779":"markdown","6724bbde":"markdown","8e860df6":"markdown","9b4d756b":"markdown","e271a412":"markdown","a65132fa":"markdown","1a063393":"markdown","1c8d7599":"markdown","2fae7e43":"markdown","8074608c":"markdown","8adcbc65":"markdown","e445a9db":"markdown","17e00431":"markdown","e89ec874":"markdown","f30ac07a":"markdown","078cb5a5":"markdown","8d6830a0":"markdown","5f5cf114":"markdown","55e3519d":"markdown","71dfc5db":"markdown","119e591b":"markdown","a6f9e027":"markdown","487eeaa6":"markdown"},"source":{"5259f44c":"#GENERAL\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport random\n#PATH PROCESS\nimport os\nimport os.path\nfrom pathlib import Path\nimport glob\n#IMAGE PROCESS\nfrom PIL import Image\nfrom keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport cv2\nfrom keras.applications.vgg16 import preprocess_input, decode_predictions\nimport imageio\nfrom IPython.display import Image\nimport matplotlib.image as mpimg\n#MUSIC PROCESS\nimport pydub\nfrom scipy.io.wavfile import read, write\nimport librosa\nimport librosa.display\nimport IPython\nfrom IPython.display import Audio\nimport scipy\n#SCALER & TRANSFORMATION\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.preprocessing import MinMaxScaler\nfrom keras.utils.np_utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom keras import regularizers\nfrom sklearn.preprocessing import LabelEncoder\n#ACCURACY CONTROL\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.metrics import mean_squared_error, r2_score\n#OPTIMIZER\nfrom keras.optimizers import RMSprop,Adam,Optimizer,Optimizer, SGD\n#MODEL LAYERS\nfrom tensorflow.keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D, BatchNormalization,MaxPooling2D,BatchNormalization,\\\n                        Permute, TimeDistributed, Bidirectional,GRU, SimpleRNN,\\\nLSTM, GlobalAveragePooling2D, SeparableConv2D, ZeroPadding2D, Convolution2D, ZeroPadding2D,Reshape,\\\nConv2DTranspose, LeakyReLU, Conv1D, AveragePooling1D, MaxPooling1D\nfrom keras import models\nfrom keras import layers\nimport tensorflow as tf\nfrom keras.applications import VGG16,VGG19,inception_v3\nfrom keras import backend as K\nfrom keras.utils import plot_model\nfrom keras.datasets import mnist\nimport keras\n#SKLEARN CLASSIFIER\nfrom xgboost import XGBClassifier, XGBRegressor\nfrom lightgbm import LGBMClassifier, LGBMRegressor\nfrom catboost import CatBoostClassifier, CatBoostRegressor\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.ensemble import RandomForestClassifier, RandomForestRegressor\nfrom sklearn.ensemble import GradientBoostingClassifier, GradientBoostingRegressor\nfrom sklearn.ensemble import BaggingRegressor\nfrom sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor\nfrom sklearn.neural_network import MLPClassifier, MLPRegressor\nfrom sklearn.neighbors import KNeighborsClassifier, KNeighborsRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.cross_decomposition import PLSRegression\nfrom sklearn.linear_model import Ridge\nfrom sklearn.linear_model import RidgeCV\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import LassoCV\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.linear_model import ElasticNetCV\n#IGNORING WARNINGS\nfrom warnings import filterwarnings\nfilterwarnings(\"ignore\",category=DeprecationWarning)\nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)","e9479f8e":"Meta_Data_CSV = pd.read_csv(\"..\/input\/urbansound8k\/UrbanSound8K.csv\")","50d05a23":"print(Meta_Data_CSV.head(-1))","f3ed9738":"print(Meta_Data_CSV[\"class\"].value_counts())","bfd0f257":"print(Meta_Data_CSV.isnull().sum())","df619a46":"File_Name_Array = np.array(Meta_Data_CSV[\"slice_file_name\"])\nFold_Array = np.array(Meta_Data_CSV[\"fold\"])\nClass_Array = np.array(Meta_Data_CSV[\"class\"])\n\n# if it is necessary","27f678cf":"print(File_Name_Array)","c7bd19ef":"print(Fold_Array)","bcbe248e":"print(Class_Array)","c5e1dca7":"Path_Wav_List = []\nCategory_List = []\n\nfor path_number in range(8732):\n    File_Path_Name = \"..\/input\/urbansound8k\/fold\" + str(Meta_Data_CSV[\"fold\"][path_number]) + \"\/\" + Meta_Data_CSV[\"slice_file_name\"][path_number]\n    Path_Wav_List.append(File_Path_Name)\n    Category_List.append(Meta_Data_CSV[\"class\"][path_number])","c9730b55":"print(Path_Wav_List[0:5])","91205c09":"print(Category_List[0:5])","5d7f1181":"Path_Wav_Series = pd.Series(Path_Wav_List,name=\"WAV\").astype(str)\nCategory_Series = pd.Series(Category_List,name=\"CATEGORY\")","6870fe5d":"print(Path_Wav_Series)","5a387e6e":"print(Category_Series)","9202b9fe":"Main_Train_Data = pd.concat([Path_Wav_Series,Category_Series],axis=1)","e7eb4336":"print(Main_Train_Data.head(-1))","e7585947":"print(Main_Train_Data[\"CATEGORY\"].value_counts())","50273960":"Main_Train_Data = Main_Train_Data.sample(frac=1).reset_index(drop=True)","67ae8934":"print(Main_Train_Data.head(-1))","8fd9fc1a":"Main_Train_Data.to_csv(\"Wav_Type.csv\")","bf1a8404":"def noise_function(data):\n    noise_value = 0.009 * np.random.uniform() * np.amax(data)\n    data = data + noise_value * np.random.normal(size=data.shape[0])\n    \n    return data","26c232cf":"def stretch_function(data,rate=0.8):\n    \n    return librosa.effects.time_stretch(data,rate)","14be1fe4":"def shift_function(data):\n    shift_range = int(np.random.uniform(-5,5) * 1000)\n    \n    return np.roll(data,shift_range)","97b6c93d":"def pitch_function(data,sampling_rate,pitch_factor=0.5):\n    \n    return librosa.effects.pitch_shift(data,sampling_rate,pitch_factor)","8784c4ed":"def specshow_function(wav_path):\n    figure = plt.figure(figsize=(13,7))\n    \n    audio_type,sample_rate = librosa.load(wav_path)\n    \n    stft_audio = librosa.stft(audio_type)\n    Db_audio = librosa.amplitude_to_db(abs(stft_audio))\n    librosa.display.specshow(Db_audio,sr=sample_rate,x_axis=\"time\",y_axis=\"hz\")","a8b0c69e":"def waveplot_function(wav_path):\n    figure = plt.figure(figsize=(13,7))\n    \n    audio_type,sample_rate = librosa.load(wav_path)\n    librosa.display.waveplot(audio_type,sr=sample_rate)","20ecb42e":"def playing_function(wav_path):\n    \n    audio_type,sample_rate = librosa.load(wav_path)\n    \n    return Audio(audio_type,rate=sample_rate)","73b8cf38":"def extract_function(data):\n    \n    output_result = np.array([])\n    mean_zero = np.mean(librosa.feature.zero_crossing_rate(y=data).T,axis=0)\n    output_result = np.hstack((output_result,mean_zero))\n    \n    stft_output = np.abs(librosa.stft(data))\n    chroma_output = np.mean(librosa.feature.chroma_stft(S=stft_output,sr=sample_rate).T,axis=0)\n    output_result = np.hstack((output_result,chroma_output))\n    \n    mfcc_output = np.mean(librosa.feature.mfcc(y=data,sr=sample_rate).T,axis=0)\n    output_result = np.hstack((output_result,mfcc_output))\n    \n    root_output = np.mean(librosa.feature.rms(y=data).T,axis=0)\n    output_result = np.hstack((output_result,root_output))\n    \n    mel_output = np.mean(librosa.feature.melspectrogram(y=data,sr=sample_rate).T,axis=0)\n    output_result = np.hstack((output_result,mel_output))\n    \n    return output_result","42cafdff":"def export_function(path):\n    \n    data,sample_rate = librosa.load(path,duration=1.0)\n    \n    output_One = extract_function(data)\n    result = np.array(output_One)\n    \n    noise_output = noise_function(data)\n    output_Two = extract_function(noise_output)\n    result = np.vstack((result,output_Two))\n    \n    stretch_output = stretch_function(data)\n    stretch_pitch = pitch_function(stretch_output,sample_rate)\n    output_Three = extract_function(stretch_pitch)\n    result = np.vstack((result,output_Three))\n    \n    return result","2000370f":"plt.style.use(\"dark_background\")","5fb34010":"playing_function(Main_Train_Data[\"WAV\"][2])","0e5fe45f":"playing_function(Main_Train_Data[\"WAV\"][2333])","8e09b45f":"playing_function(Main_Train_Data[\"WAV\"][7564])","bef2a6b1":"playing_function(Main_Train_Data[\"WAV\"][4])","7c322b41":"waveplot_function(Main_Train_Data[\"WAV\"][2])","62a95c5e":"waveplot_function(Main_Train_Data[\"WAV\"][2351])","049ca62d":"waveplot_function(Main_Train_Data[\"WAV\"][2551])","6625117b":"waveplot_function(Main_Train_Data[\"WAV\"][2451])","1cf517bd":"waveplot_function(Main_Train_Data[\"WAV\"][4])","46217e26":"specshow_function(Main_Train_Data[\"WAV\"][45])","a87f0f6a":"specshow_function(Main_Train_Data[\"WAV\"][145])","73097d71":"specshow_function(Main_Train_Data[\"WAV\"][2318])","27f64395":"specshow_function(Main_Train_Data[\"WAV\"][7518])","73e8ea4f":"figure = plt.figure(figsize=(14,5))\n\nwav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][2000])\n\nnoise_injection = noise_function(wav_type)\n\nlibrosa.display.waveplot(noise_injection,sr=sample_rate)\nAudio(noise_injection,rate=sample_rate)","a5ddf72c":"figure = plt.figure(figsize=(14,5))\n\nwav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][6020])\n\nnoise_injection = noise_function(wav_type)\n\nlibrosa.display.waveplot(noise_injection,sr=sample_rate)\nAudio(noise_injection,rate=sample_rate)","453a7d23":"figure = plt.figure(figsize=(14,5))\n\nwav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][450])\n\nnoise_injection = noise_function(wav_type)\n\nlibrosa.display.waveplot(noise_injection,sr=sample_rate)\nAudio(noise_injection,rate=sample_rate)","51efbc0f":"figure = plt.figure(figsize=(14,5))\n\nwav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][450])\n\nstretch_audio = stretch_function(wav_type)\nlibrosa.display.waveplot(stretch_audio,sr=sample_rate)\nAudio(stretch_audio,rate=sample_rate)","8034af12":"figure = plt.figure(figsize=(14,5))\n\nwav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][150])\n\nstretch_audio = stretch_function(wav_type)\nlibrosa.display.waveplot(stretch_audio,sr=sample_rate)\nAudio(stretch_audio,rate=sample_rate)","a4a91fd1":"figure = plt.figure(figsize=(14,5))\n\nwav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][1150])\n\nstretch_audio = stretch_function(wav_type)\nlibrosa.display.waveplot(stretch_audio,sr=sample_rate)\nAudio(stretch_audio,rate=sample_rate)","1f586e03":"figure = plt.figure(figsize=(14,5))\n\nwav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][1544])\n\nshift_audio = shift_function(wav_type)\nlibrosa.display.waveplot(shift_audio,sr=sample_rate)\nAudio(shift_audio,rate=sample_rate)","17bf1006":"figure = plt.figure(figsize=(14,5))\n\nwav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][544])\n\nshift_audio = shift_function(wav_type)\nlibrosa.display.waveplot(shift_audio,sr=sample_rate)\nAudio(shift_audio,rate=sample_rate)","f0353d97":"figure = plt.figure(figsize=(14,5))\n\nwav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][5637])\n\nshift_audio = shift_function(wav_type)\nlibrosa.display.waveplot(shift_audio,sr=sample_rate)\nAudio(shift_audio,rate=sample_rate)","a8349d11":"figure = plt.figure(figsize=(14,5))\n\nwav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][637])\n\npitch_audio = pitch_function(wav_type,sample_rate)\nlibrosa.display.waveplot(pitch_audio,sr=sample_rate)\nAudio(pitch_audio,rate=sample_rate)","637fbc05":"figure = plt.figure(figsize=(14,5))\n\nwav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][765])\n\npitch_audio = pitch_function(wav_type,sample_rate)\nlibrosa.display.waveplot(pitch_audio,sr=sample_rate)\nAudio(pitch_audio,rate=sample_rate)","ea1025ec":"figure = plt.figure(figsize=(14,5))\n\nwav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][5])\n\npitch_audio = pitch_function(wav_type,sample_rate)\nlibrosa.display.waveplot(pitch_audio,sr=sample_rate)\nAudio(pitch_audio,rate=sample_rate)","30cad8c0":"figure = plt.figure(figsize=(14,5))\n\nwav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][5],duration=2.5,offset=0.6)\nlibrosa.display.waveplot(wav_type,sr=sample_rate)\nAudio(wav_type,rate=sample_rate)","885ce556":"figure = plt.figure(figsize=(14,5))\n\nwav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][1115],duration=2.5,offset=0.6)\nlibrosa.display.waveplot(wav_type,sr=sample_rate)\nAudio(wav_type,rate=sample_rate)","239a2638":"figure = plt.figure(figsize=(14,5))\n\nwav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][4155],duration=2.5,offset=0.6)\nlibrosa.display.waveplot(wav_type,sr=sample_rate)\nAudio(wav_type,rate=sample_rate)","691f849d":"wav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][5],duration=2.5,offset=0.6)\n\nprint(wav_type.shape)\nprint(wav_type.dtype)\nprint(sample_rate)","75bd587f":"wav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][5234],duration=2.5,offset=0.6)\n\nprint(wav_type.shape)\nprint(wav_type.dtype)\nprint(sample_rate)","88fa5469":"wav_type,sample_rate = librosa.load(Main_Train_Data[\"WAV\"][434],duration=2.5,offset=0.6)\n\nprint(wav_type.shape)\nprint(wav_type.dtype)\nprint(sample_rate)","df0e766d":"#### PLAYING","58d6d042":"# PROCESS FUNCTIONS","77547476":"#### SHIFT","066367a3":"#### TO DATAFRAME","94a5877d":"#### PITCH","4ee51299":"#### SHUFFLE","14513494":"#### PITCH FUNCTION","2f3879d2":"#### SHIFT FUNCTION","6e3c1779":"#### NOISE FUNCTION","6724bbde":"#### TO ARRAY","8e860df6":"#### SPECSHOW FUNCTION","9b4d756b":"#### NOISE","e271a412":"#### SAME TIMEFRAME","a65132fa":"#### END OF THE FIRST PART\n\nPlease check for next step:\nhttps:\/\/www.kaggle.com\/scidatb\/urban-sound-prediction-ii-ai-ml-process","1a063393":"# PATH, LABEL, TRANSFORMATION","1c8d7599":"# PACKAGES AND LIBRARIES","2fae7e43":"#### EXPORT FUNCTION","8074608c":"#### STRETCH FUNCTION","8adcbc65":"#### WAVEPLOT","e445a9db":"#### WAVEPLOT FUNCTION","17e00431":"#### MAIN CSV","e89ec874":"#### STRETCH","f30ac07a":"#### DETERMINING FILE LOCATIONS","078cb5a5":"#### SPECSHOW","8d6830a0":"#### EXTRACT FUNCTION","5f5cf114":"#### SIMPLE CHECKING","55e3519d":"# ANALYSIS","71dfc5db":"#### TO SERIES","119e591b":"#### SAVING","a6f9e027":"# HISTORY\n\n* This dataset contains 8732 labeled sound excerpts (<=4s) of urban sounds from 10 classes: air_conditioner, car_horn, children_playing, dog_bark, drilling, enginge_idling, gun_shot, jackhammer, siren, and street_music. The classes are drawn from the urban sound taxonomy. For a detailed description of the dataset and how it was compiled please refer to our paper.\n* All excerpts are taken from field recordings uploaded to www.freesound.org. The files are pre-sorted into ten folds (folders named fold1-fold10) to help in the reproduction of and comparison with the automatic classification results reported in the article above.\n\n* In addition to the sound excerpts, a CSV file containing metadata about each excerpt is also provided.\n","487eeaa6":"#### PLAYING FUNCTION"}}