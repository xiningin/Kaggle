{"cell_type":{"8c43ccb2":"code","ebf329b6":"code","48f4def7":"code","787e6d62":"code","e5b30276":"code","6d04241d":"code","23fdb7fc":"code","11f941ea":"code","aa2fd131":"code","f52f10e7":"code","f17d392f":"code","695aa266":"code","5bc030fa":"code","bdf1c523":"code","87778f9f":"code","6ba4cdee":"code","6cff3bb0":"code","ee2e7936":"code","e336895b":"code","7a7b731d":"code","95a65589":"code","eb6f8db2":"code","9128a4ac":"code","2e608e48":"code","97a7e902":"code","e98cf9db":"code","9e61ee11":"code","1f314b1c":"code","108384c7":"code","e202938f":"markdown","f1ea69e0":"markdown"},"source":{"8c43ccb2":"import pandas as pd\nimport numpy as np\nfrom scipy import stats\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")","ebf329b6":"sns.set_theme()","48f4def7":"data = pd.read_csv(\"..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv\")\ndata.head()","787e6d62":"print(\"Number of rows     :{}\".format(data.shape[0]))\nprint(\"Number of columns  :{}\".format(data.shape[1]))","e5b30276":"data.isnull().sum()","6d04241d":"data.dropna(inplace = True)","23fdb7fc":"#len(data.duplicated())\ndata.drop_duplicates(inplace = True)","11f941ea":"data.reset_index().info()","aa2fd131":"data['last_review'] = data['last_review'].astype('datetime64[ns]')\ndata['last_review_day'] = data['last_review'].dt.day\ndata['last_review_month'] = data['last_review'].dt.month\ndata['last_review_year'] = data['last_review'].dt.year","f52f10e7":"data.head()","f17d392f":"data.describe()","695aa266":"data.corr()","5bc030fa":"for i in data.columns:\n    if data[i].dtype == object:\n        if len(data[i].unique()) < 1000:\n            print(\"The unique values present in\", i ,\"are: \\n\\n{}\".\n                  format(data[i].unique()),'\\n')","bdf1c523":"plt.figure(figsize=(20,7))\nplt.subplot(1,2,1)\nsns.countplot(x = data[\"neighbourhood_group\"], palette = \"winter\")\nplt.xlabel(\"NEIGHBOURHOOD_GROUP\", fontsize = 12)\nplt.ylabel(\"COUNT\", fontsize = 12)\nplt.xticks(rotation = 45)\n\nplt.subplot(1,2,2)\nsns.countplot(x = data[\"room_type\"], palette = \"winter\")\nplt.xlabel(\"ROOM_TYPE\", fontsize = 12)\nplt.ylabel(\"COUNT\", fontsize = 12)\nplt.xticks(rotation = 45)\nplt.show()","87778f9f":"plt.figure(figsize=(15,7))\nsns.countplot(x = data[\"neighbourhood_group\"], hue = data[\"room_type\"], palette = \"winter\")\nplt.xlabel(\"NEIGHBOURHOOD_GROUP\", fontsize = 16)\nplt.ylabel(\"FREQUENCY\", fontsize = 12)\nplt.xticks(rotation = 45)\nplt.show()","6ba4cdee":"plt.figure(figsize=(20,7))\nsns.barplot(x = data[\"neighbourhood_group\"], y = data[\"price\"], palette = \"winter\")\n#sns.barplot(x = data[\"neighbourhood_group\"], y = data[\"price\"], color = \"blue\")\n#sns.scatterplot(x = data[\"neighbourhood_group\"], y = data[\"price\"], color = \"crimson\")\nplt.xlabel(\"NEIGHBOURHOOD_GROUP\", fontsize = 16)\nplt.ylabel(\"PRICE\", fontsize = 12)\nplt.xticks(rotation = 45)\nplt.show()","6cff3bb0":"plt.figure(figsize=(25,17))\n\nplt.subplot(3,1,1)\nsns.lineplot(x = data[\"minimum_nights\"], y = data[\"price\"], color = \"crimson\")\n#sns.scatterplot(x = data[\"minimum_nights\"], y = data[\"price\"], color = \"crimson\")\nplt.xlabel(\"MINIMUM_NIGHTS\", fontsize = 16)\nplt.ylabel(\"PRICE\", fontsize = 12)\nplt.xticks(rotation = 45)\n\nplt.subplot(3,1,2)\n#sns.lineplot(x = data[\"minimum_nights\"], y = data[\"price\"], color = \"red\")\nsns.scatterplot(x = data[\"minimum_nights\"], y = data[\"price\"], color = \"pink\")\nplt.xlabel(\"MINIM3UM_NIGHTS\", fontsize = 16)\nplt.ylabel(\"PRICE\", fontsize = 12)\nplt.xticks(rotation = 45)\n\nplt.subplot(3,1,3)\nsns.lineplot(x = data[\"minimum_nights\"], y = data[\"price\"], color = \"crimson\")\nsns.scatterplot(x = data[\"minimum_nights\"], y = data[\"price\"], color = \"pink\")\nplt.xlabel(\"MINIMUM_NIGHTS\", fontsize = 16)\nplt.ylabel(\"PRICE\", fontsize = 12)\nplt.xticks(rotation = 45)\nplt.show()","ee2e7936":"plt.figure(figsize=(25,17))\n\nplt.subplot(3,1,1)\nsns.lineplot(x = data[\"number_of_reviews\"], y = data[\"price\"], color = \"crimson\")\n#sns.scatterplot(x = data[\"number_of_reviews\"], y = data[\"price\"], color = \"purple\")\nplt.xlabel(\"NUMBER_OF_REVIEWS\", fontsize = 16)\nplt.ylabel(\"PRICE\", fontsize = 12)\nplt.xticks(rotation = 45)\n\nplt.subplot(3,1,2)\n#sns.lineplot(x = data[\"number_of_reviews\"], y = data[\"price\"], color = \"crimson\")\nsns.scatterplot(x = data[\"number_of_reviews\"], y = data[\"price\"], color = \"pink\")\nplt.xlabel(\"NUMBER_OF_REVIEWS\", fontsize = 16)\nplt.ylabel(\"PRICE\", fontsize = 12)\nplt.xticks(rotation = 45)\n\nplt.subplot(3,1,3)\nsns.lineplot(x = data[\"number_of_reviews\"], y = data[\"price\"], color = \"crimson\")\nsns.scatterplot(x = data[\"number_of_reviews\"], y = data[\"price\"], color = \"pink\")\nplt.xlabel(\"NUMBER_OF_REVIEWS\", fontsize = 16)\nplt.ylabel(\"PRICE\", fontsize = 12)\nplt.xticks(rotation = 45)\nplt.show()","e336895b":"plt.figure(figsize=(80,15))\nsns.countplot(x = data[\"neighbourhood\"], palette = \"winter\")\nplt.xlabel(\"NEIGHBOURHOOD\", fontsize = 30)\nplt.ylabel(\"FREQUENCY\", fontsize = 30)\nplt.xticks(rotation = 90)\nplt.show()","7a7b731d":"plt.figure(figsize=(80,15))\nsns.countplot(x = data[\"neighbourhood\"], order = data['neighbourhood'].value_counts().index, palette = \"winter\")\nplt.xlabel(\"NEIGHBOURHOOD\", fontsize = 30)\nplt.ylabel(\"FREQUENCY\", fontsize = 30)\nplt.xticks(rotation = 90)\nplt.show()","95a65589":"data.columns","eb6f8db2":"data = data[[\"neighbourhood_group\",\"neighbourhood\",\"latitude\",\"longitude\",\n             \"room_type\", \"price\", \"minimum_nights\", \n             \"calculated_host_listings_count\", \"availability_365\"]]","9128a4ac":"data.plot(kind = \"scatter\", x = \"longitude\", y = \"latitude\", alpha = 0.05,\n         figsize = (10,10), c = \"price\", cmap = plt.get_cmap(\"rainbow\"),\n          colorbar = True\n         )","2e608e48":"from datashader.utils import lnglat_to_meters as webm\nx, y = webm(data.longitude, data.latitude)\ndata['x'] = pd.Series(x)\ndata['y'] = pd.Series(y)","97a7e902":"data.head()","e98cf9db":"import holoviews as hv\nimport geoviews as gv\nimport datashader as ds\nfrom colorcet import fire, rainbow, bgy, bjy, bkr, kb, kr\nfrom datashader.colors import colormap_select, Greys9\nfrom holoviews.streams import RangeXY\nfrom holoviews.operation.datashader import datashade, dynspread, rasterize\nfrom bokeh.io import push_notebook, show, output_notebook\noutput_notebook()\nhv.extension('bokeh')","9e61ee11":"NewYork = data\nagg_name = \"price\"\nNewYork[agg_name].describe().to_frame()","1f314b1c":"%opts Overlay [width=800 height=600 toolbar='above' xaxis=None yaxis=None]\n%opts QuadMesh [tools=['hover'] colorbar=True] (alpha=0 hover_alpha=0.2)\nT = 0.05\nPX = 1\n\ndef plot_map(data, label, agg_data, agg_name, cmap):\n    url=\"http:\/\/server.arcgisonline.com\/ArcGIS\/rest\/services\/Canvas\/World_Dark_Gray_Base\/MapServer\/tile\/{Z}\/{Y}\/{X}.png\"\n    geomap = gv.WMTS(url)\n    points = hv.Points(gv.Dataset(data, kdims=['x', 'y'], vdims=[agg_name]))\n    agg = datashade(points, element_type=gv.Image, aggregator=agg_data, cmap=cmap)\n    zip_codes = dynspread(agg, threshold=T, max_px=PX)\n    hover = hv.util.Dynamic(rasterize(points, aggregator=agg_data, width=100, height=50, streams=[RangeXY]), operation=hv.QuadMesh)\n    hover = hover.options(cmap=cmap)\n    img = geomap * zip_codes * hover\n    img = img.relabel(label)\n    return img","108384c7":"plot_map(NewYork,'Hotel_Prices_in_NewYork', ds.min(agg_name), agg_name, cmap=rainbow)","e202938f":"### **Context**\n\nSince 2008, guests and hosts have used Airbnb to expand on traveling possibilities and present more unique, personalized way of experiencing the world. This dataset describes the listing activity and metrics in NYC, NY for 2019.\n\n### **Content**\n\nThis data file includes all needed information to find out more about hosts, geographical availability, necessary metrics to make predictions and draw conclusions.\n\n### **Acknowledgements**\n\nThis public dataset is part of Airbnb, and the original source can be found on this website.\n\n### **Inspiration**\n\n* What can we learn about different hosts and areas?\n* What can we learn from predictions? (ex: locations, prices, reviews, etc)\n* Which hosts are the busiest and why?\n* Is there any noticeable difference of traffic among different areas and what could be the reason for it?","f1ea69e0":"#### **refrences:**\n* Hands on Machine Leanring with Scikit-Learn, Keras and TensorFlow\n* \"Geospatial Analysis of Brazilian E commerce\" notebook by Andre Sionek from Kaggle - [Link](https:\/\/www.kaggle.com\/andresionek\/geospatial-analysis-of-brazilian-e-commerce\/comments)"}}