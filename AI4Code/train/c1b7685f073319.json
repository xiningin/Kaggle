{"cell_type":{"33bf15e2":"code","f0f31123":"code","b13de2ac":"code","22e127fa":"code","2f5664f3":"code","1e6bfff8":"code","2119b517":"code","2a2314ee":"code","4792f61a":"code","eb45fc61":"code","67028aae":"code","c092cee4":"code","ecb63b1f":"code","1fa75885":"markdown","13aa0636":"markdown","7ccaf756":"markdown","1db814d0":"markdown","584a42ee":"markdown","3d16e4a4":"markdown","05b4688e":"markdown"},"source":{"33bf15e2":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f0f31123":"df = pd.read_csv(\"..\/input\/ad-data\/Advertising.csv\")\ndf.head(5)","b13de2ac":"df['total_spend'] = df['TV'] + df['radio'] + df['newspaper']\nfinal_df = pd.concat([df['total_spend'],df['sales']],axis=1)\nfinal_df.head(5)","22e127fa":"plt.figure(figsize=(12,6),dpi=90)\nplt.title('Advertisement Data')\nsns.scatterplot(data=final_df,x='total_spend',y='sales')\nplt.xlabel('Total Spend in Lakh Rs')\nplt.ylabel('Total Sale Generated in Crores Rs.');","2f5664f3":"#Defining x_i and y_i from our dataframe\nx_i = final_df['total_spend'] \ny_i = final_df['sales']","1e6bfff8":"#Calculating their mean values\nx_mean = np.mean(x_i)\ny_mean = np.mean(y_i)","2119b517":"# Using the formula to calculate m and c\nm = sum((x_i-x_mean)*(y_i-y_mean))\/sum((x_i-x_mean)**2)\nc = y_mean - m*x_mean","2a2314ee":"m,c","4792f61a":"# Defining the solution equation\ny_hat = m*x_i + c","eb45fc61":"# Plotting them on the scatterplot. \nplt.figure(figsize=(12,6),dpi=100)\nplt.title('Advertisement Data')\nsns.scatterplot(data=final_df,x='total_spend',y='sales')\nplt.xlabel('Total Spend in Lakh Rs')\nplt.ylabel('Total Sale Generated in Crores Rs.')\n# The solution equation Line.\nplt.plot(x_i,y_hat,color='Red',linewidth=2);","67028aae":"error = y_i - y_hat","c092cee4":"MAE = np.mean(abs(error))\nRMSE = np.sqrt(np.mean(error**2))","ecb63b1f":"MAE,RMSE","1fa75885":"So now lets do some visualizations. Lets plot the graph of total spend vs sales for all 200 instances ","13aa0636":"## About the Data\n\nThis is an advertising data. It has total of four columns. The columns represents spend (in lakh Rs. may be) for each advertising channel namely *TV,Radio and Newspaper*. The Sales Column represents the total sales. (in Crores Rs. may be). There are 200 rows which may be considered as a past 200 months data. So Lets see the data. \n\n### Acknowledgement:\n- This data file was downloaded from Udemy Course \"2021 Python for Machine Learning & Data Science Masterclass\" by *Jose Portilla*. Most of the idea presented here is inspired from his lecture on Linear Regression ","7ccaf756":"We will deal with only one single variable Linear Regression. Hence we simplify the data by adding the advertising spend of all channels. So now the data has only two columns. ","1db814d0":"So do we have some idea now about what we need to do ?  Nah!! Dont worry!\n\n## Aim\nTo use this data and fit a linear line(of type $y=mx+b$ : yeah! highschool math equation of a line) to it so that we can use for predicting the future Sale generation with our input of Total Spending. \n\nMathematically speaking if we consider *Total Spend* as variable $x$ and *Total sales* as variable $y$ and look at our desired line equation $y=mx+b$ - We have $x$ and we have $y$ but we dont no what are the values of $m$ and $b$. So our aim finally boils down to finding $m$ and $b$ . We have many ways to achieve this.\n \nLets begin!\n\n\n\n# The Statistical Method - (Intuitive Method). \n\nLink for further reading is here [Wiki](https:\/\/en.wikipedia.org\/wiki\/Simple_linear_regression#Fitting_the_regression_line)\n\nHere we use statistics to achieve the solution. \nThe formula goes like this. \n\nIf we have ,\n$$\n\\hat{y} = mx_{i} + c\n$$\n\nThe value of $m$ is calculated by,\n$$\nm = \\rho_{x,y}\\frac{\\sigma_{y}}{\\sigma_{x}}\n$$\nThe value of $c$ is calculated by,\n$$\nc = \\bar{y} - m\\bar{x}\n$$\n\nwhere $ \\rho_{x,y} $ is **Pearson Correlation  Coefficient** [Wiki](https:\/\/en.wikipedia.org\/wiki\/Pearson_correlation_coefficient#For_a_sample) , $\\sigma_{y}$ and $\\sigma_{x}$ are **Standard Deviations** [Wiki](https:\/\/en.wikipedia.org\/wiki\/Standard_deviation#Corrected_sample_standard_deviation) and $\\bar{x}$ and $\\bar{y}$ are mean values of $x$ and $y$ respectively. \n\nIf we plug in the formulae for the above terms we get, <br>\n(I was little lazy to type LaTex so giving the direct final formula. \ud83d\ude00)\n\nHere it goes,\n\n$$\nm = \\frac{\\Sigma(x_{i}-\\bar{x})(y_{i}-\\bar{y})}{\\Sigma(x_{i}-\\bar{x})^{2}}\n$$\n\nLets Calculate them!\n","584a42ee":"## Summary\n\nSo we succesfully achieved our task of finding m and c for a linear line which fits our data. Now we can predict future sales with a given the total spend just by plugging in our values to solution equation. \n\nIs this the happy ending? \n\nSo now if this line predicts the result then there should be something to evaluate it right. Is this line the best predictor? If not how good is it? We will try to answer it by defining a metric to measure the effectiveness of the predictor line in the next section. \n\n# Evaluating the solution.\n\nSo lets check the value for Total spend of Say $251.3$ Lakh Rs. (The fourth instance in our data). <br>\n\nThe true value sales is $18.5$ Crores Rs.(As given in the data) <br>\n\nIf we calculate using our predictor(The solution equation) we get  $16.48$ Crores Rs. <br>\n\nWe clearly see that our predictor is not predicting the exact value. So for every value of $x_{i}$ we will have our predicted $\\hat{y}$ differ by some value to true value $y_{i}$ . <br>\n\nLet define this $\\epsilon_{i}$ aka Error,\n$$\n\\epsilon_{i} = y_{i}-\\hat{y}\n$$\nNow using this error\nWe can have mean error, absolute mean error and mean squared error. Mean error is not a good metric for evaluation because there are positive and negative errors which may give a value zero sometimes. \n\nSo we commonly come across people using **Mean absolute Error** and square root of mean squared error **Root Mean Squared Error**. The formulae goes as follows. \n\nMean Absolute Error = $\\frac{1}{N}\\sum_{i=0}^{N}|\\epsilon_{i}|$ \n\nRoot Mean Squared Error = $\\sqrt{\\frac{1}{N}\\sum_{i=0}^{N}\\epsilon_{i}^{2}}$ \n\nWhere $N$ is the total length of data.\n \nLets Calculate them.\n\n\n\n","3d16e4a4":"So finally we have our metrics to evaluate the solution. \n\nLets explore another method (Gradient Descent) to solve the linear regression problem and use our metrics to evaluate and compare the solutions. \n\nWill try to publish Soon!\nThanks ","05b4688e":"# Linear Regession - Learning it The Old School Way\n\nAs we learn machine learning models we often encounter ***Linear Regression*** as one of the starting point. Here is an attempt at learning it the mathematical way.\n\n### Why?\nMachine Learning has now become a mainstream field with the advent of readable programming language like Python and advancement in computing ability. Everyone who started their data science journey would have come across python libraries like Scikit-learn or Tensorflow or Pytorch. Linear regression in scikit learn has become so easy that with two lines of code you can boast yourself with a line that fits your data. But actually do we need to care what it does in the background? Some may say yes and some may say no. So, anyway here is an attempt at solving a linear regression model without using any machine learning libraries.\n\nSo let's begin by importing the basic libraies required for data extraction, computation and visualization.\n\n\n\n"}}