{"cell_type":{"0ab869d1":"code","976e1b90":"code","ca35082a":"code","76ba756b":"code","88d7bc6c":"code","96a7c401":"code","54f5ec4e":"code","128fd2f7":"code","e9772868":"code","4b18c4cf":"code","e0eb18ef":"code","fce9b054":"code","aef007b3":"code","d2bee196":"code","65bceacc":"code","30422c01":"code","dcf7b922":"code","a93dbe10":"markdown","17b91077":"markdown","0d8a5e13":"markdown","e3acc343":"markdown","af2e6bec":"markdown","99743810":"markdown","6b9b0d90":"markdown","694f5993":"markdown","ea80ade9":"markdown","d0a57cb0":"markdown","cec24c65":"markdown","7d3d877f":"markdown","cf6418e8":"markdown","5b704830":"markdown","4612ff97":"markdown","100ead81":"markdown","4bb7020b":"markdown","8f1a7ec6":"markdown"},"source":{"0ab869d1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as pyo\npyo.init_notebook_mode()\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","976e1b90":"data = pd.read_csv('\/kaggle\/input\/pakistans-largest-ecommerce-dataset\/Pakistan Largest Ecommerce Dataset.csv');\ndata","ca35082a":"sub_columns = ['status', 'created_at', 'price', 'qty_ordered', 'category_name_1', 'grand_total', 'discount_amount', 'Working Date', 'BI Status', 'Year', 'Month']\ndata_sub = data[sub_columns]\ndata_sub","76ba756b":"# there are some rows in which all columns are null need to drop all those rows\ndata_sub.dropna(how='all', inplace=True)\n\n#null_status_rows = pd.isnull(data_sub.status)\ndata_sub.sort_index(ascending=False)","88d7bc6c":"data_sub.status.fillna(data_sub.status.mode()[0], inplace=True)","96a7c401":"data_sub.isnull().sum()","54f5ec4e":"data_sub.category_name_1.fillna(data_sub.category_name_1.mode()[0], inplace=True)","128fd2f7":"data_sub","e9772868":"list_of_categories = data_sub['category_name_1'].unique()\ntotal_categories = len(list_of_categories)\nprint(f'Total categories {total_categories}')","4b18c4cf":"categories_by_order_count = data_sub.groupby('category_name_1').size().reset_index(name='Number of Orders').sort_values('Number of Orders',ascending=False)\n\nbar = px.bar(categories_by_order_count, y='Number of Orders', x='category_name_1',\n             title='Number of orders by Category',\n             hover_data=['category_name_1'], labels={'category_name_1':'Category name'})\nbar.show()","e0eb18ef":"data_sub['status'].unique()","fce9b054":"completed_orders = data_sub[(data_sub['status'] == 'complete') | (data_sub['status'] == 'paid') | (data_sub['status'] == 'received')]\ncompleted_orders_by_category_count = completed_orders.groupby('category_name_1').size().reset_index(name='Number of Orders').sort_values('Number of Orders', ascending=False)\n\npie = px.bar(completed_orders_by_category_count, y='Number of Orders', x='category_name_1',\n             title='Number of completed orders by Category',\n             hover_data=['category_name_1'], labels={'category_name_1':'Category name'})\npie.show()","aef007b3":"not_completed_orders = data_sub[(data_sub['status'] != 'complete') & (data_sub['status'] != 'paid') & (data_sub['status'] != 'received')]\nnot_completed_orders_by_category_count = not_completed_orders.groupby('category_name_1').size().reset_index(name='Number of Orders').sort_values('Number of Orders', ascending=False)\n\nbar = px.bar(not_completed_orders_by_category_count, y='Number of Orders', x='category_name_1',\n             title='Number of completed orders by Category',\n             hover_data=['category_name_1'], labels={'category_name_1':'Category name'})\nbar.update_traces(marker_color='red')\nbar.show()","d2bee196":"fig = go.Figure(data=[\n    go.Bar(name='Completed', x=completed_orders_by_category_count['category_name_1'], y=completed_orders_by_category_count['Number of Orders']),\n    go.Bar(name='Not Completed', x=not_completed_orders_by_category_count['category_name_1'], y=not_completed_orders_by_category_count['Number of Orders'])\n])\nfig.update_layout(barmode='group')\nfig.show()","65bceacc":"orders_by_category_year = completed_orders.groupby(['category_name_1', 'Year']).size().reset_index(name='Number of Orders').sort_values(['Number of Orders', 'Year'], ascending=False)\nbar = px.bar(orders_by_category_year, y='Number of Orders', x='category_name_1',\n             title='Number of orders by Category Per Year', color='Year',\n             hover_data=['category_name_1'], labels={'category_name_1':'Category name'})\nbar.show()","30422c01":"data_sub.category_name_1.unique()","dcf7b922":"orders_by_category_month = completed_orders.groupby(['category_name_1', 'Month']).size().reset_index(name='Number of Orders').sort_values('Month')\n\nmobile_tablets = orders_by_category_month[orders_by_category_month['category_name_1'] == 'Mobiles & Tablets']\n\nmen_fashion = orders_by_category_month[orders_by_category_month['category_name_1'] == 'Men\\'s Fashion']\n\nothers = orders_by_category_month[orders_by_category_month['category_name_1'] == 'Others']\n\nwomen_fashion = orders_by_category_month[orders_by_category_month['category_name_1'] == 'Women\\'s Fashion']\n\nappliances = orders_by_category_month[orders_by_category_month['category_name_1'] == 'Appliances']\n\nsuperstore = orders_by_category_month[orders_by_category_month['category_name_1'] == 'Superstore']\n\nentertainment = orders_by_category_month[orders_by_category_month['category_name_1'] == 'Entertainment']\n\nbeauty_grooming = orders_by_category_month[orders_by_category_month['category_name_1'] == 'Beauty & Grooming']\n\nhome_living = orders_by_category_month[orders_by_category_month['category_name_1'] == 'Home & Living']\n\ncomputing = orders_by_category_month[orders_by_category_month['category_name_1'] == 'Computing']\n\nsoghaat = orders_by_category_month[orders_by_category_month['category_name_1'] == 'Soghaat']\n\nkids_baby = orders_by_category_month[orders_by_category_month['category_name_1'] == 'Kids & Baby']\n\nn = orders_by_category_month[orders_by_category_month['category_name_1'] == '\\\\N']\n\nhealth_sports = orders_by_category_month[orders_by_category_month['category_name_1'] == 'Health & Sports']\n\nschool_education = orders_by_category_month[orders_by_category_month['category_name_1'] == 'School & Education']\n\nbooks = orders_by_category_month[orders_by_category_month['category_name_1'] == 'Books']\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=mobile_tablets['Month'], y=mobile_tablets['Number of Orders'],\n                    mode='lines+markers',\n                    name='Mobiles & Tablets'))\n\nfig.add_trace(go.Scatter(x=men_fashion['Month'], y=men_fashion['Number of Orders'],\n                    mode='lines+markers',\n                    name='Men\\'s Fashion'))\n\nfig.add_trace(go.Scatter(x=others['Month'], y=others['Number of Orders'],\n                    mode='lines+markers',\n                    name='Others'))\n\nfig.add_trace(go.Scatter(x=women_fashion['Month'], y=women_fashion['Number of Orders'],\n                    mode='lines+markers',\n                    name='Women Fashion'))\n\nfig.add_trace(go.Scatter(x=appliances['Month'], y=appliances['Number of Orders'],\n                    mode='lines+markers',\n                    name='Appliances'))\n\nfig.add_trace(go.Scatter(x=superstore['Month'], y=superstore['Number of Orders'],\n                    mode='lines+markers',\n                    name='Superstore'))\n\nfig.add_trace(go.Scatter(x=entertainment['Month'], y=entertainment['Number of Orders'],\n                    mode='lines+markers',\n                    name='Entertainment'))\n\nfig.add_trace(go.Scatter(x=beauty_grooming['Month'], y=beauty_grooming['Number of Orders'],\n                    mode='lines+markers',\n                    name='Beauty grooming'))\n\nfig.add_trace(go.Scatter(x=kids_baby['Month'], y=kids_baby['Number of Orders'],\n                    mode='lines+markers',\n                    name='Kids and Baby'))\n\nfig.add_trace(go.Scatter(x=home_living['Month'], y=home_living['Number of Orders'],\n                    mode='lines+markers',\n                    name='Home Living'))\n\nfig.add_trace(go.Scatter(x=soghaat['Month'], y=soghaat['Number of Orders'],\n                    mode='lines+markers',\n                    name='Soghaat'))\n\nfig.add_trace(go.Scatter(x=n['Month'], y=n['Number of Orders'],\n                    mode='lines+markers',\n                    name='N'))\n\nfig.add_trace(go.Scatter(x=health_sports['Month'], y=health_sports['Number of Orders'],\n                    mode='lines+markers',\n                    name='Health Sports'))\n\nfig.add_trace(go.Scatter(x=school_education['Month'], y=school_education['Number of Orders'],\n                    mode='lines+markers',\n                    name='School Education'))\n\nfig.add_trace(go.Scatter(x=books['Month'], y=books['Number of Orders'],\n                    mode='lines+markers',\n                    name='Books'))\n\nfig.show()","a93dbe10":"# Please Upvote if you find the notebook interesting","17b91077":"* **Category_name_1 null treatment**","0d8a5e13":"* **Considering order statuses 'complete', 'paid', 'received' as completed**","e3acc343":"# Worst category by not completed order","af2e6bec":"# Interesting Facts *(outcome of EDA)*:\n\n* Men Fashion has more number of orders than women Fashion :-)\n* Spike in orders in November for each category, resaon might be Black Friday and 11.11 Sales.\n* Spike in May for each category is not I understand. In May we donot have any sales or promotions.\n* 2017 is busiest year for most of categories sales.","99743810":"# Exploratory Data Analysis","6b9b0d90":"# Categories by number of completed order Per Year","694f5993":"# Table of Content\n1. Importing the library\n2. Loading the Dataset\n3. Null\/NaN values Treatment\n4. Exploratory Data Analysis.\n    - Best category by total numebr of Orders\n    - Best Category by completion of order\n    - Worst category by not completed order\n    - Compare the completed and not completed orders by category\n    - Categories by number of order Per Year\n    - Number of orders by category by month    ","ea80ade9":"# Compare the completed and not completed orders by category","d0a57cb0":"# Number of orders by category by month","cec24c65":"# Best category by total numebr of Orders","7d3d877f":"# Subset of data needed for Best selling category analysis","cf6418e8":"# Best Category by completion of order","5b704830":"# Treatment of Null or NaN","4612ff97":"**Get all unique categories**","100ead81":"* **Treament of rows having all columns as NaN**","4bb7020b":"* **Status null treatment**\n> After removing all rows having nan in all column, only 15 are rows in which status is nullwe use mode to all 15 nulls. Mode value is completed.","8f1a7ec6":"* **Category name 1 has 164 null, for time begin, we fill all NaN with mode value**\n> Mode value is 'Mobiles & Tablets'"}}