{"cell_type":{"6b790a37":"code","2866b81f":"code","de151503":"code","e72fca3b":"code","7e8a8fd2":"code","d2ad6d82":"code","84c6f274":"code","c9d44d4d":"code","d8c1f2f1":"code","69cfc63f":"code","6be9182c":"code","602764a9":"code","8d165d34":"code","667ddd4c":"code","e6f5264c":"code","33c5e405":"code","b09d675f":"code","c62ac3cd":"code","3ac31aa0":"code","81d8926b":"code","20d054c5":"code","8b2834e9":"code","0eab06ef":"code","98b72bd4":"code","616c4ee6":"code","825f4c33":"code","6b7adb1f":"code","c213abc4":"code","fe058af3":"code","30711f54":"code","dc574fa7":"code","8395e6f2":"code","fb0940a5":"code","21292227":"markdown","d094d277":"markdown","c5586a2e":"markdown","ea59e55f":"markdown","3284687d":"markdown","3e778c2c":"markdown","15f004a4":"markdown","061dd654":"markdown","c08620b1":"markdown","46687b23":"markdown","98ac4b35":"markdown","5b215e87":"markdown","245a3a47":"markdown","0fc874e0":"markdown","5f985ec9":"markdown","93d53d29":"markdown","a210edda":"markdown","e4c5b74b":"markdown"},"source":{"6b790a37":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport fastai\nfrom fastai import *\nfrom fastai.tabular.all import *\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","2866b81f":"fastai.__version__","de151503":"df_train = pd.read_csv('..\/input\/titanic-extended\/train.csv')\ndf_test = pd.read_csv('..\/input\/titanic-extended\/test.csv')","e72fca3b":"df_train.shape","7e8a8fd2":"df_test.shape","d2ad6d82":"df_train.head()","84c6f274":"df_train.info()","c9d44d4d":"import seaborn as sns\ncorrelation = df_train.corr()\nplt.figure(figsize=(10,8))\nsns.heatmap(correlation,annot = True)","d8c1f2f1":"df_train.isnull().sum()","69cfc63f":"df_train.head()","6be9182c":"# Gender that survives the most\nsurvival_by_gender = pd.crosstab(index = df_train['Survived'],columns = df_train['Sex'])\nsurvival_by_gender.plot.bar()\n\n# This means more FEMALE passengers survived compared to MALE","602764a9":"# AGE that survives the most\nsurvival_by_age = pd.crosstab(index = df_train['Age'],columns = df_train['Survived'])\nsurvival_by_age.plot.line()\n#survival_by_age.plot.hist()","8d165d34":"df_train.head()","667ddd4c":"df_test.head()","e6f5264c":"df_train.replace(('male', 'female'), (1, 0), inplace=True)\ndf_test.replace(('male', 'female'), (1, 0), inplace=True)","33c5e405":"df_train = df_train.drop(['Cabin'], axis=1)\ndf_test = df_test.drop(['Cabin'], axis=1)","b09d675f":"df_train = df_train.drop(['WikiId'], axis=1)\ndf_test = df_test.drop(['WikiId'], axis=1)","c62ac3cd":"df_train = df_train.drop(['Body'], axis=1)\ndf_test = df_test.drop(['Body'], axis=1)","3ac31aa0":"df_train.isnull().sum()","81d8926b":"df_train.head()","20d054c5":"%time\n\n# cont_names = Continuous variables in the dataset\n# cat_names = Categorical variables in the dataset\nprocs = [Categorify, FillMissing, Normalize] \nsplits = RandomSplitter(valid_pct = 0.21)(range_of(df_train))\ncont_names, cat_names = cont_cat_split(df_train, 1, 'Survived')","8b2834e9":"cat_names","0eab06ef":"cont_names","98b72bd4":"to = TabularPandas(df_train,procs,cat_names,cont_names,y_names='Survived',splits=splits)\nto.show(5)","616c4ee6":"dls = to.dataloaders()\ndls.valid.show_batch()","825f4c33":"x_train, y_train = to.train.xs, to.train.y\nx_test, y_test = to.valid.xs, to.valid.y","6b7adb1f":"%time\n\n# We are just using Random Forest from sklearn\nfrom sklearn.ensemble import RandomForestClassifier\nrf_classifier = RandomForestClassifier(n_estimators=100, n_jobs=-1)\nrf_classifier.fit(x_train, y_train)","c213abc4":"# We are just using Logistic Regression from sklearn\nfrom sklearn.linear_model import LogisticRegression\nlr_classifier = LogisticRegression(solver='lbfgs', max_iter=5000)\nlr_classifier.fit(x_train, y_train)","fe058af3":"from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nlda_classifier = LinearDiscriminantAnalysis()\nlda_classifier.fit(x_train, y_train)","30711f54":"from sklearn.metrics import accuracy_score\ny_pred = rf_classifier.predict(x_test)\naccuracy_score(y_test, y_pred)","dc574fa7":"y_pred = lr_classifier.predict(x_test)\naccuracy_score(y_test, y_pred)","8395e6f2":"y_pred = lda_classifier.predict(x_test)\naccuracy_score(y_test, y_pred)","fb0940a5":"to_test = TabularPandas(df_test, procs, cat_names, cont_names)\noutcome = rf_classifier.predict(to_test.xs.drop('Fare_na', axis=1))\noutput= pd.DataFrame({'PassengerId':df_test.PassengerId, 'Survived': outcome.astype(int)})\noutput.to_csv('.\/submission_titanic.csv', index=False)","21292227":"# 1. DATA UNDERSTANDING\n\n## Load Libraries and Datasets","d094d277":"## Leverage fastai classes to get categorical, continuous variables","c5586a2e":"## Let's Encode GENDER variable","ea59e55f":"## Let's drop CABIN variable ","3284687d":"# 4.1 Random Forest Score","3e778c2c":"# Titanic Solution using fastai","15f004a4":"# 3.1 Random Forest","061dd654":"# 5. GENERATE FINAL OUTCOME","c08620b1":"## Let's understand the Correlation between variables","46687b23":"# 4.3 LDA Score","98ac4b35":"# 3.3 LDA (Linear Discriminant Analysis)","5b215e87":"# 3.2 Logistic Regression","245a3a47":"# 3. MODELING","0fc874e0":"# 4.2 Logistic Regression Score","5f985ec9":"## Survivals - By AGE","93d53d29":"## Survivals - by GENDER","a210edda":"# 2. EDA leveraging fastai","e4c5b74b":"# 4. MODEL EVALUATION"}}