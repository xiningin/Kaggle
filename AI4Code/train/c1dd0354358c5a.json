{"cell_type":{"635c5ce6":"code","636d9240":"code","af06a63d":"code","8818cef1":"code","0acb6b5b":"code","db01a301":"code","5cf20864":"code","ecd5df76":"code","5b432993":"code","03374689":"code","0c0a68ea":"code","436520c7":"code","7004b403":"code","1614bc43":"code","2c716a89":"code","31978d61":"code","a5b7edae":"code","69d47d68":"code","a30dd27d":"code","21706e05":"code","e1184213":"code","72f1b4a0":"code","101d7a9a":"code","78db36fc":"code","271964b6":"code","bc8a7b78":"code","f2591e73":"code","b1832acd":"code","c1413d06":"code","3b1873e1":"code","945ddd5c":"code","6c4009d1":"code","44f672f5":"code","b09bf966":"code","c3681b74":"code","2ea9df09":"code","f71cff28":"code","fa157cf7":"code","2abc0af0":"code","bf33958f":"code","ed403af9":"code","311d0537":"code","3425cc60":"code","2a50dca0":"code","1690c9e4":"code","98e96854":"code","05ff44cd":"code","3609b2ba":"code","1f831d36":"code","e93c61f7":"code","422a7602":"code","a74c6c8c":"code","213d5a57":"code","91cab9c0":"code","6dee06f8":"code","235a45e4":"code","c26b82b8":"code","fcf64ddf":"code","3b339f2a":"code","6642be3d":"code","48711e20":"code","c4b71eb6":"code","6bab14c8":"code","883e42e7":"code","b526b748":"code","e826b995":"code","d6be3aad":"code","fdf71c1d":"code","f98c9524":"code","977e8f5b":"code","7b11caba":"code","61787af5":"code","290c06ea":"code","14dfaca7":"code","7702a9c5":"code","262e534c":"code","00e2feba":"code","0a96ca85":"code","79cb6e97":"code","280c57a5":"code","6f1ab582":"code","168c89f4":"code","f361f069":"code","f37a4ca2":"code","45b1f053":"code","1d5473d1":"code","b9c19945":"code","ef5a04fb":"code","bdea0217":"code","51b3ee88":"code","3ada5c20":"code","f1e7f347":"markdown"},"source":{"635c5ce6":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","636d9240":" train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","af06a63d":"train.head()","8818cef1":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False)","0acb6b5b":"sns.set_style('whitegrid')","db01a301":"sns.countplot(x='Survived',hue='Pclass',data=train)","5cf20864":"sns.distplot(train['Age'].dropna(),kde=False,bins=30)","ecd5df76":"train['Age'].plot.hist(bins=35)","5b432993":"train.info()","03374689":"sns.countplot(x='SibSp',data=train)","0c0a68ea":"train['Fare'].hist(bins=40,figsize=(10,4))","436520c7":"sns.boxplot(x='Pclass',y='Age',data=train)","7004b403":"def impute_age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    \n    if pd.isnull(Age):\n        \n        \n        if Pclass==1:\n            return 37\n        elif Pclass==2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age","1614bc43":"train['Age']=train[['Age','Pclass']].apply(impute_age,axis=1)","2c716a89":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False)","31978d61":"train.drop('Cabin',axis=1,inplace=True)","a5b7edae":"train.head()","69d47d68":"train.dropna(inplace=True)","a30dd27d":"sex=pd.get_dummies(train['Sex'],drop_first=True)","21706e05":"embark=pd.get_dummies(train['Embarked'],drop_first=True)","e1184213":"train=pd.concat([train,sex,embark],axis=1)","72f1b4a0":"train.head()","101d7a9a":"train.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","78db36fc":"train.drop('PassengerId',axis=1,inplace=True)","271964b6":"train.head()","bc8a7b78":"train2=train","f2591e73":"sns.countplot(train['SibSp'])","b1832acd":"def age_classify(age):\n    if age in range(16):\n        return 0\n    elif age in range(16,32):\n        return 1\n    elif age in range(32,48):\n        return 2\n    elif age in range(48,64):\n        return 3\n    else:\n        return 4","c1413d06":"def fare_classify(fare):\n    if fare in range(8):\n        return 0\n    elif fare in range(8,15):\n        return 1\n    elif fare in range(15,31):\n        return 2\n    else:\n        return 3","3b1873e1":"train['age_class']=train['Age'].apply(age_classify)\ntrain['fare_class']=train['Fare'].apply(fare_classify)","945ddd5c":"train.head()","6c4009d1":"drop_cols=['Pclass','Parch',\"SibSp\",'Age','Fare','fare_class','age_class']\ndummies_cols=['Pclass','Parch','SibSp','age_class','fare_class']\ntrain\ntrain.head()","44f672f5":"X=train.drop(['Survived','Fare','Age'],axis=1)\ny=train['Survived']","b09bf966":"from sklearn.model_selection import train_test_split","c3681b74":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=101)","2ea9df09":"from sklearn.linear_model import LogisticRegression","f71cff28":"log_model=LogisticRegression()","fa157cf7":"log_model.fit(X_train,y_train)","2abc0af0":"log_model.coef_","bf33958f":"log_model.intercept_","ed403af9":"predictionsbb=log_model.predict(X_test)","311d0537":"from sklearn.metrics import classification_report","3425cc60":"print(classification_report(y_test,predictionsbb))","2a50dca0":"from sklearn.metrics import confusion_matrix","1690c9e4":"confusion_matrix(y_test,predictionsbb)","98e96854":"test =pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","05ff44cd":"test.head()","3609b2ba":"test['Age']=test[['Age','Pclass']].apply(impute_age,axis=1)","1f831d36":"test.info()","e93c61f7":"test.drop('Cabin',axis=1,inplace=True)","422a7602":"sex1=pd.get_dummies(test['Sex'],drop_first=True)","a74c6c8c":"embark1=pd.get_dummies(test['Embarked'],drop_first=True)","213d5a57":"test=pd.concat([test,sex1,embark1],axis=1)","91cab9c0":"test.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","6dee06f8":"test.drop('PassengerId',axis=1,inplace=True)","235a45e4":"test.head()","c26b82b8":"sns.countplot(train['Pclass'])","fcf64ddf":"test['Fare']=test['Fare'].fillna(test['Fare'].mean())","3b339f2a":"test['age_class']=test['Age'].apply(age_classify)\ntest['fare_class']=test['Fare'].apply(fare_classify)","6642be3d":"test.head()","48711e20":"train.head()","c4b71eb6":"test.info()","6bab14c8":"final=log_model.predict(test.drop(['Age','Fare'],axis=1))","883e42e7":"gender_submission=pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')","b526b748":"print(classification_report(gender_submission['Survived'],final))","e826b995":"gender_submission.head()","d6be3aad":"main_df=pd.concat([train.drop(\"Survived\",axis=1),test],axis=0)","fdf71c1d":"main_df.info()","f98c9524":"drop_cols=['Pclass','Parch',\"SibSp\",'Age','Fare','fare_class','age_class']\ndummies_cols=['Pclass','Parch','SibSp','age_class','fare_class']\nfor each in dummies_cols:\n    dummies=pd.get_dummies(main_df[each],prefix=each,drop_first=False)\n    main_df=pd.concat([main_df,dummies],axis=1)\nmain_df.drop(drop_cols,axis=1,inplace=True)\nmain_df.head()","977e8f5b":"train.info()","7b11caba":"train_final=main_df[:889]","61787af5":"test_final=main_df[889:]","290c06ea":"X=train_final\ny=train[\"Survived\"]","14dfaca7":"log_model.fit(X,y)","7702a9c5":"final_predict=log_model.predict(test_final)","262e534c":"print(classification_report(gender_submission['Survived'],final_predict))\n","00e2feba":"#Kaggle Score=0.78229","0a96ca85":"final_predictions=pd.DataFrame(final_predict)\ndatasets=pd.concat([gender_submission['PassengerId'],final_predictions],axis=1)\ndatasets.columns=['PassengerId','Survived']\ndatasets.to_csv('sample_submission3.csv',index=False)\ndatasets.head()","79cb6e97":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV , RandomizedSearchCV","280c57a5":"rfc=RandomForestClassifier()","6f1ab582":"rfc.fit(X,y)","168c89f4":"rfc_pred=rfc.predict(test_final)","f361f069":"rfc_predictions=pd.DataFrame(rfc_pred)\nrfc_datasets=pd.concat([gender_submission['PassengerId'],rfc_predictions],axis=1)\nrfc_datasets.columns=['PassengerId','Survived']\nrfc_datasets.to_csv('rfc_submission3.csv',index=False)\nrfc_datasets.head()","f37a4ca2":"# Hyper Parameter Tuning","45b1f053":"n_estimators=[int(x) for x in np.linspace(start=200,stop=2000,num=10)]\nmax_features=['auto','sqrt','log2']\nmax_depth=[int(x) for x in np.linspace(10,1000,10)]\nmin_samples_split=[2,3,4,5,7,9]\nmin_samples_leaf=[1,2,3,4,6,8]\n\nrandom_grid={'n_estimators':n_estimators,\n            'max_features':max_features,\n            'max_depth':max_depth,\n            'min_samples_split':min_samples_split,\n            'min_samples_leaf':min_samples_leaf,\n             'criterion':['gini','entropy']\n            }","1d5473d1":"random_search=RandomizedSearchCV(estimator=rfc,param_distributions=random_grid,n_iter=100,n_jobs=1,cv=3,verbose=2,random_state=101)","b9c19945":"random_search.fit(X,y)","ef5a04fb":"random_search.best_estimator_","bdea0217":"ran_pred=random_search.predict(test_final)","51b3ee88":"ran_predictions=pd.DataFrame(ran_pred)\nran_datasets=pd.concat([gender_submission['PassengerId'],ran_predictions],axis=1)\nran_datasets.columns=['PassengerId','Survived']\nran_datasets.to_csv('ran_submission3.csv',index=False)\nran_datasets.head()","3ada5c20":"# kaggle Score = 0.77033","f1e7f347":"# Using Random Forest Classifier\n"}}