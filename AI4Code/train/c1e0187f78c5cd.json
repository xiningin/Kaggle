{"cell_type":{"cd6f8999":"code","a004f576":"code","262d8dd0":"code","a4871bdf":"code","456a797e":"code","0a609751":"code","41f82a17":"code","4c65c3c6":"code","da480529":"code","26c73cee":"code","508abe86":"code","1fd5f3b3":"code","e157c1db":"code","dcb532f1":"code","cea0a3cf":"code","7021ac34":"code","6ba3bd2f":"code","4e5bf3b7":"code","a623e77a":"code","9f166eae":"code","b00e00d2":"code","251ad6c9":"code","706889a5":"code","cdf1a6d6":"code","098cbfbc":"code","47b74872":"code","659a68e5":"code","b7305dcf":"code","c4b8f2ab":"code","1dac946a":"code","c5b5fe09":"code","556a9938":"code","0a301fe5":"code","b945538f":"code","0b270d59":"code","ead0c197":"code","9483d60f":"code","6f3d6066":"markdown","1a485d5d":"markdown","a78320a8":"markdown"},"source":{"cd6f8999":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a004f576":"from sklearn.datasets import load_boston","262d8dd0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot","a4871bdf":"df = load_boston()","456a797e":"df","0a609751":"data = pd.DataFrame(df.data)","41f82a17":"data.head()","4c65c3c6":"data.columns = df.feature_names","da480529":"data.head()","26c73cee":"df.target.shape","508abe86":"data['Price'] = df.target","1fd5f3b3":"data.head()","e157c1db":"#INDEPENDENT FEATURE\nx = data.iloc[: , :-1]","dcb532f1":"#DEPENDENT FEATURE\ny = data.iloc[:,-1]","cea0a3cf":"from sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LinearRegression","7021ac34":"lin_regressor=LinearRegression()","6ba3bd2f":"mse=cross_val_score(lin_regressor,x,y,scoring='neg_mean_squared_error',cv=5)","4e5bf3b7":"mean_mse=np.mean(mse)","a623e77a":"mean_mse","9f166eae":"from sklearn.linear_model import Ridge\nfrom sklearn.model_selection import GridSearchCV","b00e00d2":"ridge=Ridge()","251ad6c9":"parameters={'alpha':[1e-15,1e-10,1e-8,1e-3,1e-2,1,5,10,20,30,35,40,45,50,55,100]}","706889a5":"ridge_regressor = GridSearchCV(ridge,parameters,scoring ='neg_mean_squared_error',cv = 5)","cdf1a6d6":"ridge_regressor.fit(x,y)","098cbfbc":"ridge_regressor.best_score_","47b74872":"ridge_regressor.best_params_","659a68e5":"from sklearn.linear_model import Lasso\nfrom sklearn.model_selection import GridSearchCV","b7305dcf":"lasso=Lasso()","c4b8f2ab":"parameters={'alpha':[1e-15,1e-10,1e-8,1e-3,1e-2,1,5,10,20,30,35,40,45,50,55,100]}\nlasso_regressor=GridSearchCV(lasso,parameters,scoring='neg_mean_squared_error',cv=5)","1dac946a":"lasso_regressor.fit(x,y)","c5b5fe09":"lasso_regressor.best_score_","556a9938":"lasso_regressor.best_params_","0a301fe5":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=0)","b945538f":"prediction_lasso=lasso_regressor.predict(X_test)\nprediction_ridge=ridge_regressor.predict(X_test)","0b270d59":"import seaborn as sns","ead0c197":"sns.distplot(y_test-prediction_lasso)","9483d60f":"sns.distplot(y_test-prediction_ridge)","6f3d6066":"# LASSO REGRESSION:","1a485d5d":"# RIDGE REGRESSION:","a78320a8":"## LINEAR REGRESSION"}}