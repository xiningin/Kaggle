{"cell_type":{"71a95cf1":"code","a276920a":"code","186d1587":"code","8485a31c":"code","86d2b42b":"code","ed8767cf":"code","790571f1":"code","eef17db0":"code","c296b160":"code","375f6f5b":"code","e14ed041":"code","d63dd0c1":"code","a247120c":"code","961cda08":"code","cbc39fe0":"code","0c4a25a2":"code","8dc5bf38":"code","24ff9e6f":"code","5e8ba09d":"code","bde6df22":"code","1ee6551d":"code","92d523bc":"code","7de9fc3d":"code","60d501b3":"code","46b8f7c9":"code","eb064e71":"code","502b0167":"code","788c89c2":"code","0d641678":"code","fae00b49":"code","3bb541b8":"code","ff3ecdbd":"code","342a7b55":"code","71070f0f":"code","7802a253":"code","aa7c8b15":"code","bd7d97ca":"code","6786f221":"code","6f34ff2d":"code","ce705b70":"code","d1080781":"code","706e1633":"markdown","4b5bafd9":"markdown","4a9aafe7":"markdown","ccd7b4a7":"markdown","48e63bce":"markdown","05eb46da":"markdown","e1b581df":"markdown"},"source":{"71a95cf1":"import pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import LabelEncoder\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom xgboost import XGBClassifier\nfrom sklearn.multiclass import OneVsRestClassifier\nfrom sklearn.model_selection import RandomizedSearchCV,GridSearchCV\n","a276920a":"train_data = pd.read_csv('..\/input\/janatahack-healthcare-analytics-ii-dataset\/train.csv')\ntest_data = pd.read_csv('..\/input\/janatahack-healthcare-analytics-ii-dataset\/test.csv')\ncombined = [train_data,test_data]\ntrain_data","186d1587":"le = LabelEncoder()\ntrain_data['Stay'] = le.fit_transform(train_data['Stay'])","8485a31c":"train_data.columns","86d2b42b":"train_data.info()","ed8767cf":"train_data.describe()","790571f1":"for dataset in combined:\n    dataset.drop(['case_id','patientid'],axis = 1,inplace = True)","eef17db0":"train_data[['Hospital_code','Stay']].groupby('Hospital_code').mean()","c296b160":"train_data[['City_Code_Hospital','Stay']].groupby('City_Code_Hospital').mean()","375f6f5b":"train_data[['Hospital_type_code','Stay']].groupby('Hospital_type_code').mean()","e14ed041":"train_data[['Hospital_region_code','Stay']].groupby('Hospital_region_code').mean()","d63dd0c1":"train_data[['Available Extra Rooms in Hospital','Stay']].groupby('Available Extra Rooms in Hospital').count()","a247120c":"train_data[['Available Extra Rooms in Hospital','Stay']].groupby('Available Extra Rooms in Hospital').mean()","961cda08":"train_data[['Department','Stay']].groupby('Department').mean()","cbc39fe0":"train_data[['Ward_Type','Stay']].groupby('Ward_Type').mean()","0c4a25a2":"train_data[['Ward_Facility_Code','Stay']].groupby('Ward_Facility_Code').mean()","8dc5bf38":"train_data[['Type of Admission','Stay']].groupby('Type of Admission').mean()","24ff9e6f":"train_data[['Severity of Illness','Stay']].groupby('Severity of Illness').mean()\n","5e8ba09d":"train_data[['Visitors with Patient','Stay']].groupby('Visitors with Patient').mean()\ntrain_data['Visitors with Patient'].nunique()","bde6df22":"train_data[['Age','Stay']].groupby('Age').mean()\n","1ee6551d":"train_data['Age'] = le.fit_transform(train_data['Age'])\ntest_data['Age'] = le.transform(test_data['Age'])","92d523bc":"train_data['Bed Grade'] = train_data['Bed Grade'].fillna(train_data['Bed Grade'].mean()).astype(int)\ntest_data['Bed Grade'] = test_data['Bed Grade'].fillna(test_data['Bed Grade'].mean()).astype(int)","7de9fc3d":"\ntrain_data[['Admission_Deposit','Stay']].groupby('Admission_Deposit').mean()\ntrain_data['CategoricalAdmission_Deposit'] = pd.qcut(train_data['Admission_Deposit'], 5)\ntrain_data[['CategoricalAdmission_Deposit','Stay']].groupby('CategoricalAdmission_Deposit').mean()\n","60d501b3":"train_data.loc[train_data['Admission_Deposit'] <= 4051,'Admission_Deposit'] = 0\ntrain_data.loc[(train_data['Admission_Deposit'] > 4051) & (train_data['Admission_Deposit'] <= 4528),'Admission_Deposit'] = 1\ntrain_data.loc[(train_data['Admission_Deposit'] > 4528) & (train_data['Admission_Deposit'] <= 4968),'Admission_Deposit'] = 2\ntrain_data.loc[(train_data['Admission_Deposit'] > 4968) & (train_data['Admission_Deposit'] <= 5611),'Admission_Deposit'] = 3\ntrain_data.loc[(train_data['Admission_Deposit'] > 5611) & (train_data['Admission_Deposit'] <= 11008),'Admission_Deposit'] = 4","46b8f7c9":"test_data.loc[test_data['Admission_Deposit'] <= 4051,'Admission_Deposit'] = 0\ntest_data.loc[(test_data['Admission_Deposit'] > 4051) & (test_data['Admission_Deposit'] <= 4528),'Admission_Deposit'] = 1\ntest_data.loc[(test_data['Admission_Deposit'] > 4528) & (test_data['Admission_Deposit'] <= 4968),'Admission_Deposit'] = 2\ntest_data.loc[(test_data['Admission_Deposit'] > 4968) & (test_data['Admission_Deposit'] <= 5611),'Admission_Deposit'] = 3\ntest_data.loc[(test_data['Admission_Deposit'] > 5611) & (test_data['Admission_Deposit'] <= 11008),'Admission_Deposit'] = 4","eb064e71":"train_data.drop('CategoricalAdmission_Deposit',axis = 1,inplace = True)","502b0167":"for dataset in combined:\n    dataset['City_Code_Patient'].fillna(8.0,inplace = True)","788c89c2":"for dataset in combined:\n    dataset['City_Code_Patient'] = dataset['City_Code_Patient'].astype(int)","0d641678":"train_data['Admission_Deposit'] = train_data['Admission_Deposit'].astype(int)\ntrain_data","fae00b49":"test_data['Admission_Deposit'] = test_data['Admission_Deposit'].astype(int)\ntest_data","3bb541b8":"cat_features = train_data.select_dtypes(['object']).columns\ncat_features","ff3ecdbd":"train_data = pd.get_dummies(train_data,columns = ['Hospital_type_code', 'Hospital_region_code', 'Department', 'Ward_Type',\n       'Ward_Facility_Code', 'Type of Admission', 'Severity of Illness'])","342a7b55":"test_data = pd.get_dummies(test_data,columns = ['Hospital_type_code', 'Hospital_region_code', 'Department', 'Ward_Type',\n       'Ward_Facility_Code', 'Type of Admission', 'Severity of Illness'])","71070f0f":"plt.figure(figsize = (16,12))\nsns.heatmap(train_data.corr(),annot=True,cbar = True)\nplt.show()","7802a253":"y_train = train_data.loc[:,'Stay']\nx_train = train_data.drop('Stay',axis = 1)\nx_train","aa7c8b15":"clf = OneVsRestClassifier(XGBClassifier()).fit(x_train, y_train)","bd7d97ca":"clf.score(x_train,y_train)","6786f221":"y_pred = clf.predict(test_data)\ny_pred","6f34ff2d":"sub = pd.DataFrame(y_pred,columns = ['Stay'],index = [i + 318439 for i in range(test_data.shape[0])])\n\nsub.index.name = 'case_id'","ce705b70":"map_dict = {\n    0: '0-10',\n    1: '11-20',\n    2: '21-30',\n    3: '31-40',\n    4: '41-50',\n    5: '51-60',\n    6: '61-70',\n    7: '71-80',\n    8: '81-90',\n    9: '91-100',\n    10: 'More than 100 Days'\n}\nsub['Stay'] = sub['Stay'].map(map_dict)\nsub","d1080781":"sub.to_csv('latest.csv')","706e1633":"## Submitting the predictions","4b5bafd9":"## Analyzing the Data","4a9aafe7":">The submission was scored on the basis of accuracy. ","ccd7b4a7":"> Since the target column is having categorical values, we need to convert them into discrete values","48e63bce":"## Feature Engineering","05eb46da":"## Prediction using XGBClassifier","e1b581df":"## Imports "}}