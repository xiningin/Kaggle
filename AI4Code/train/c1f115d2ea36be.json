{"cell_type":{"3ba91904":"code","580ef575":"code","de02b1b4":"code","16a4bc74":"code","9d018aad":"code","a53934a9":"code","da0b76a5":"code","1cf5b3eb":"code","2f23c049":"code","e9174d67":"code","e6832771":"code","c94584fb":"code","dd50919a":"code","87461c24":"code","c694711e":"code","72455952":"code","3f092e92":"code","8ed0003e":"code","859dcad0":"code","732e1da4":"code","66718f38":"code","175ad24d":"code","77e35fc9":"code","44d75fee":"code","a9860332":"code","152aee7d":"code","ad24229f":"code","05acf08f":"code","2c8edfdb":"code","be8a3c89":"code","41bf07c6":"markdown","1f141b98":"markdown","4811b530":"markdown","8ee3a6c0":"markdown","1c9eb0a6":"markdown","62ca3b2a":"markdown","da75cc31":"markdown","247ce6b7":"markdown","5e8ec7b7":"markdown","68152907":"markdown","a3a335f9":"markdown","456617de":"markdown","28d8b5f8":"markdown","04a75c5d":"markdown","697ee0bc":"markdown"},"source":{"3ba91904":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","580ef575":"book = pd.read_csv('..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\nbook.head()","de02b1b4":"book.info()","16a4bc74":"book.isnull().sum()","9d018aad":"book['Name'].value_counts()","a53934a9":"book.drop_duplicates('Name', keep = 'last', inplace = True)\nbook.info()","da0b76a5":"fig, ax = plt.subplots(figsize=(10, 5))\nbook.plot(kind = 'bar', x = 'Year', y = 'Reviews', ax = ax)","1cf5b3eb":"fig, ax = plt.subplots(figsize=(10, 5))\nsns.lineplot(y='Reviews', x='Year', data=book, ax=ax)","2f23c049":"sns.regplot(x=book['User Rating'], y=book['Price'])","e9174d67":"sns.histplot(x=book['User Rating'], kde=False, bins=50)","e6832771":"fig, axs = plt.subplots(2, 2, figsize=(16,10))\nfig.delaxes(axs[1,1])\n\naxs[0,0].hist(book['Reviews'], bins=50)\naxs[0,1].hist(book['Price'], bins=50)\naxs[1,0].hist(book['Year'], bins=50)\naxs[0,0].title.set_text('Reviews')\naxs[0,1].title.set_text('Price')\naxs[1,0].title.set_text('Year')\n\nplt.show()","c94584fb":"book.plot(x='Genre', y='Reviews', kind='bar')","dd50919a":"fig, ax = plt.subplots(1, 2, figsize=(16,7))\nax[0].scatter('Price', 'User Rating', data=book, color='b')\nax[1].scatter('Reviews', 'User Rating', data=book, color='r')\nplt.show()","87461c24":"Fiction = book['Genre']=='Fiction'\nNon_Fiction = book['Genre']=='Non Fiction'\nplt.boxplot([book[Fiction]['User Rating'], book[Non_Fiction]['User Rating']])\nplt.show()","c694711e":"sns.jointplot(x=book['Price'], y=book['User Rating'], kind=\"kde\")","72455952":"book_for_tree = book.copy(deep=True)\nbook_for_tree","3f092e92":"book=pd.get_dummies(book, drop_first=True, columns=['Year', 'Genre'])\nbook.head()","8ed0003e":"book.corr()","859dcad0":"fig, ax = plt.subplots(figsize=(16, 12))\nsns.heatmap(book.corr(),annot=True,ax=ax)","732e1da4":"book.columns","66718f38":"plt.hist(book['Reviews'], bins=100)\noutlier_limit = (book['Reviews'].mean() + 3*book['Reviews'].std())\nplt.axvline(x=outlier_limit, color='r')\nplt.show()","175ad24d":"book = book[book['Reviews'] <= outlier_limit]","77e35fc9":"z = ['Year_2010',\n       'Year_2011', 'Year_2012', 'Year_2013', 'Year_2014', 'Year_2015',\n       'Year_2016', 'Year_2017', 'Year_2018', 'Year_2019',\n       'Genre_Non Fiction']\nt = ['Reviews', 'Price', 'Year_2010']\ny = book['User Rating'].values.reshape(-1,1)","44d75fee":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfor v in z:\n    t.append(v)\n    X = book[t]\n    reg = LinearRegression()\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)\n    reg.fit(X_train, y_train)\n    y_pred = reg.predict(X_test)\n    y_pred_train = reg.predict(X_train)\n    R_squared = reg.score(X_test, y_test)\n    print(R_squared)","a9860332":"X1 = np.array(book_for_tree[['Reviews', 'Price', 'Year', 'User Rating']])\ny1 = np.array(book_for_tree[['Genre']])\nfrom sklearn import tree\n\ntree = tree.DecisionTreeClassifier(max_depth=4)\ntree = tree.fit(X1, y1)","152aee7d":"X1_train, X1_test, y1_train, y1_test = train_test_split(X1, y1, test_size=0.30, random_state = 1) ","ad24229f":"tree.score(X1, y1)","05acf08f":"y1_pred = tree.predict(X1_test)\ny1_pred","2c8edfdb":"plt.figure(figsize=(16,4))\nbook.boxplot()\nplt.show()","be8a3c89":"book.describe()","41bf07c6":"# **Performing EDA on the data.**# ","1f141b98":"***Generate Dummies***","4811b530":"# **Decision Tree: To predict Genre**# ","8ee3a6c0":"***More EDA***","1c9eb0a6":"**Removing duplicate values from the data.**","62ca3b2a":"# **Remove Outliers**# ","da75cc31":"# **Linear Regression**# ","247ce6b7":"![Amazon Top 50 Bestselling Books 2009-2019](http:\/\/thefutureofink.com\/wp-content\/uploads\/2013\/12\/AmazonEbooks.png)","5e8ec7b7":"***Plotting Correlation***","68152907":"# **Amazon Top 50 Bestselling Books 2009-2019**# ","a3a335f9":"***Creating new dataframe by copying the existing one so we can use it later without errors.***","456617de":"# Checking the data.# ","28d8b5f8":"**Checking missing values in the data.**","04a75c5d":"# Importing Data from the Amazon Top 50 Bestselling Books 2009-2019 dataset.# ","697ee0bc":"**Checking duplicate values in the data.**"}}