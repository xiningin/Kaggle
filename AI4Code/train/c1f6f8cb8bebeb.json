{"cell_type":{"47e4b282":"code","e9b5d9d0":"code","2041b53c":"code","b25debea":"code","ae894c2d":"code","8f0171c2":"code","de7b22a4":"code","5045eabd":"code","70ab3db9":"code","ebdff182":"code","67daa9f9":"code","d1ae6de9":"code","634047de":"code","d6ea97c2":"code","16b964bc":"code","f112387d":"code","f072786f":"code","d2b65337":"code","25aa66da":"code","120feb15":"code","e4c613db":"code","9bf0d317":"code","6f0eff09":"code","8b4df79c":"code","39cc51f8":"code","702c8d7f":"code","9311fcf5":"code","46c156af":"code","8ad6270f":"markdown"},"source":{"47e4b282":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e9b5d9d0":"import pandas as pd\nfrom pathlib import Path\nfrom pandas_profiling import ProfileReport\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.preprocessing import LabelEncoder\nimport datetime\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import cross_val_score","2041b53c":"base_dir='\/kaggle\/input\/covid19-global-forecasting-week-3\/'\ntrain_file='train.csv'\ntest_file='test.csv'\nsubmit_file='submission.csv'","b25debea":"train_df = pd.read_csv(base_dir+'train.csv')\ntest_df = pd.read_csv(base_dir+'test.csv')\nsubmission = pd.read_csv(base_dir+'submission.csv')","ae894c2d":"train_df.head()","8f0171c2":"test_df.head()","de7b22a4":"train=train_df.copy()\ntest= test_df.copy()","5045eabd":"train['Province_State'][train.Province_State.isna()] = train['Country_Region'][train.Province_State.isna()]\ntest['Province_State'][test.Province_State.isna()] = test['Country_Region'][test.Province_State.isna()]","70ab3db9":"train.head()","ebdff182":"test.head()","67daa9f9":"def decomposedate(df):\n    df['Date'] = pd.to_datetime(df['Date'],infer_datetime_format=True)\n    df['Day_of_Week']=df['Date'].dt.dayofweek\n    df['Month'] = df['Date'].dt.month\n    df['Day'] = df['Date'].dt.day\n    df['Day_of_Year'] = df['Date'].dt.dayofyear\n    df['Week_of_Year'] = df['Date'].dt.weekofyear\n    df['Quarter'] = df['Date'].dt.quarter \n    df.drop('Date',1,inplace=True)\n    return df","d1ae6de9":"train=decomposedate(train)\ntest=decomposedate(test)","634047de":"train.head()","d6ea97c2":"test.head()","16b964bc":"submission=pd.DataFrame(columns=submission.columns)","f112387d":"l1=LabelEncoder()\nl2=LabelEncoder()","f072786f":"train['Country_Region']=l1.fit_transform(train['Country_Region'])\ntrain['Province_State']=l2.fit_transform(train['Province_State'])","d2b65337":"test['Country_Region']=l1.fit_transform(test['Country_Region'])\ntest['Province_State']=l2.fit_transform(test['Province_State'])","25aa66da":"y1=train[['ConfirmedCases']]\ny2=train[['Fatalities']]\ntest_id=test['ForecastId'].values.tolist()","120feb15":"train.pop('Id')\ntest.pop('ForecastId')","e4c613db":"train.head()","9bf0d317":"test.head()","6f0eff09":"features_cols=['Province_State','Country_Region','Day_of_Week','Month','Day','Day_of_Year','Week_of_Year','Quarter']","8b4df79c":"train_x=train[features_cols]\ntest_x = test[features_cols]","39cc51f8":"model_1=DecisionTreeClassifier()\nmodel_2=DecisionTreeClassifier()\nmodel_1.fit(train_x,y1)\nmodel_2.fit(train_x,y2)","702c8d7f":"test_y1=model_1.predict(test_x)\ntest_y2=model_2.predict(test_x)\nsubmission=pd.DataFrame(columns=submission.columns)\nsubmission['ForecastId']=test_id\nsubmission['ConfirmedCases']=test_y1\nsubmission['Fatalities']=test_y2","9311fcf5":"submission.head()","46c156af":"submission.to_csv('submission.csv',index=False)","8ad6270f":"fill NAN values in the province area with their countries names"}}