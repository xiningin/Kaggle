{"cell_type":{"400fafef":"code","d1f18298":"code","b960656e":"code","db5439dd":"code","1867926d":"code","215a478f":"code","5b17f63e":"code","c885deb5":"code","40c9120b":"markdown","4ed9150a":"markdown"},"source":{"400fafef":"# Importing the libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn import datasets","d1f18298":"# Load the iris dataset\niris = datasets.load_iris()\niris","b960656e":"iris_df = pd.DataFrame(iris.data, columns = iris.feature_names)\niris_df.head() # See the first 5 rows","db5439dd":"# Finding the optimum number of clusters for k-means classification\nx = iris_df.iloc[:, :4].values\nfrom sklearn.cluster import KMeans\nwcss = []\nfor i in range(1, 10):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', \n                    max_iter = 300, n_init = 10, random_state = 0)\n    kmeans.fit(x)\n    wcss.append(kmeans.inertia_)","1867926d":"# Plotting the results onto a line graph, \n# `allowing us to observe 'The elbow'\nplt.plot(range(1, 10), wcss)\nplt.title('The elbow method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS') # Within cluster sum of squares\nplt.show()","215a478f":"# Fitting K-NN to the Training set\nfrom sklearn.neighbors import KNeighborsClassifier\nkmeans = KMeans(n_clusters = 3, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\ny_kmeans = kmeans.fit_predict(x)","5b17f63e":"y_kmeans","c885deb5":"# We will use scatter plotting for each clusters of different colors for better representation \n\nplt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], \n            s = 100, c = 'green', label = 'Iris-setosa')\nplt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], \n            s = 100, c = 'red', label = 'Iris-versicolour')\nplt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1],\n            s = 100, c = 'blue', label = 'Iris-virginica')\n\n# Plotting the centroids of the clusters\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], \n            s = 250, c = 'yellow', label = 'Centroids')\n\nplt.legend()","40c9120b":"### PREDICTION USING UNSUPERVISED LEARNING\n###### Problem Statement : Predict the optimum number of clusters and represent it visually.\n","4ed9150a":"## The optimal number of clusters is 3 and it is visually represented above"}}