{"cell_type":{"03fd5f05":"code","392724e2":"code","53b8b626":"code","7c997de0":"code","5903d544":"code","21775941":"code","b7ba1f47":"code","b7a64947":"code","d3e06acf":"code","ce35754a":"code","b34b5488":"code","a04c24c4":"code","c4cec75c":"code","74493e69":"code","37e71d2e":"code","5ff86a70":"code","b5f30ff8":"code","d77f306a":"code","465f94b0":"code","66511885":"code","8a6dae66":"code","25ad5c3e":"code","4da565c0":"code","8a6dbee9":"code","c82db3a1":"code","ba1cc030":"code","e8da2d44":"code","a34ba774":"code","4ce29683":"code","45244dd9":"code","402ffd0b":"code","7a0fd105":"code","d53dffd6":"code","a847e0f4":"code","19aef983":"code","8fc6d3b8":"code","1e6c472a":"code","800063e8":"code","bb825b7d":"code","14635e40":"code","06d3365a":"code","4126ef6d":"code","4473ae66":"code","f8d99893":"code","74a32047":"code","bd4c60bd":"code","2bca68ce":"code","2c9bdaa2":"code","e757de8a":"code","a0fc414d":"code","1a8ff6ff":"code","22322177":"code","87a36bb2":"code","37ff9ed2":"code","7b55c3fd":"code","48f4fb74":"code","55e9ab76":"code","0957c369":"markdown","7dba0b83":"markdown","ac24dce3":"markdown","85e48cef":"markdown","65f75068":"markdown","4863720c":"markdown","68af5ebc":"markdown","b054cddd":"markdown","7cfa070c":"markdown","fda2f9e2":"markdown","21044e6d":"markdown","7f07ffe4":"markdown","e51bc195":"markdown"},"source":{"03fd5f05":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","392724e2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sb\nimport chart_studio.plotly as py\nimport plotly.graph_objs as go\nfrom plotly import __version__\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly.express as px\nimport cufflinks as cf\ncf.go_offline()\n%matplotlib inline","53b8b626":"dm_hoteles = pd.read_csv('hotel_bookings.csv')\ndm_hoteles.head()","7c997de0":"dm_hoteles.info()","5903d544":"dm_hoteles.isnull().sum() \/ len(dm_hoteles) * 100","21775941":"dm_hoteles['company'].describe()","b7ba1f47":"dm_hoteles = dm_hoteles.drop(['agent', 'company'],axis=1)\ndm_hoteles.info()","b7a64947":"dm_hoteles.isnull().sum() \/ len(dm_hoteles) * 100","d3e06acf":"dm_hoteles = dm_hoteles.dropna(axis=0)\ndm_hoteles.isnull().sum() \/ len(dm_hoteles) * 100","ce35754a":"dm_hoteles.describe().transpose()","b34b5488":"dm_hoteles = dm_hoteles.drop(dm_hoteles[dm_hoteles['adr']<=0].index,axis=0)\n\ndm_hoteles.describe().transpose()","a04c24c4":"dm_hoteles['total_guests'] = dm_hoteles['adults'] + dm_hoteles['children'] + dm_hoteles['babies']\ndm_hoteles = dm_hoteles.drop(['children',\n                              'adults',\n                              'babies',\n                              'arrival_date_day_of_month',\n                              'arrival_date_day_of_month',\n                              'customer_type',\n                              'meal'],axis=1)\ndm_hoteles = dm_hoteles.drop(dm_hoteles[dm_hoteles['total_guests']==0].index,axis=0)\ndm_hoteles.columns","c4cec75c":"dm_hoteles = dm_hoteles.reset_index()\ndm_hoteles = dm_hoteles.drop('index',axis=1)\ndm_hoteles.info()","74493e69":"dm_hoteles['stay'] = dm_hoteles['stays_in_week_nights'] + dm_hoteles['stays_in_weekend_nights']\n\ndm_hoteles = dm_hoteles.drop(['stays_in_week_nights',\n                              'stays_in_weekend_nights'],axis=1)\n\ndm_hoteles.describe().transpose()","37e71d2e":"dm_hoteles.columns","5ff86a70":"codigo_paises = pd.read_excel('country codes.xlsx')\ndm_hoteles = dm_hoteles.merge(codigo_paises, left_on='country', right_on='code')\ndm_hoteles.columns","b5f30ff8":"dm_hoteles.rename(columns = {'arrival_date_month': 'Mes'}, inplace = True)\ndm_hoteles.rename(columns = {'adr_pp': 'Precio por Persona'}, inplace = True)","d77f306a":"\ncountry_data = dm_hoteles.groupby(['country','name'])['total_guests'].sum().reset_index().sort_values(by='total_guests',ascending=False)\ncountry_data['% del total'] = round(country_data['total_guests']\/ country_data['total_guests'].sum() * 100, 2)\n\ncountry_data = dm_hoteles.groupby(['country','name'])['total_guests'].sum().reset_index().sort_values(by='total_guests',ascending=False)\ncountry_data['% del total'] = round(country_data['total_guests']\/ country_data['total_guests'].sum() * 100, 2)\n\nguest_map = px.choropleth(country_data,\n                          locations=country_data['country'],\n                          color=country_data[\"% del total\"],\n                          hover_name=country_data['name'],\n                          color_continuous_scale=px.colors.sequential.Reds,\n                          title=\"Ciudad de origen de visitantes\")\nguest_map.show()","465f94b0":"\ncountry_data_cancelados = dm_hoteles.groupby(['country','name'])['total_guests','is_canceled'].sum().reset_index().sort_values(by='total_guests',ascending=False)\ncountry_data_cancelados['% de cancelados'] = round(country_data_cancelados['is_canceled']\/ country_data_cancelados['total_guests'] * 100, 2)\n\n\nguest_map = px.choropleth(country_data_cancelados,\n                    locations=country_data_cancelados['country'],\n                    color=country_data_cancelados[\"% de cancelados\"], \n                    hover_name=country_data_cancelados['name'], \n                    color_continuous_scale=px.colors.sequential.Reds,\n                    title=\"Ciudad origen cancelados\")\nguest_map.show()","66511885":"meses_ordenados = ['January', \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\ndm_hoteles['Mes'] = pd.Categorical(dm_hoteles['Mes'], categories=meses_ordenados, ordered=True)\n\ncountry_data_cancelados = dm_hoteles.groupby(['country','name','Mes'])['total_guests','is_canceled'].sum().reset_index().sort_values(by='Mes')\ncountry_data_cancelados['% de cancelados'] = round(country_data_cancelados['is_canceled']\/ country_data_cancelados['total_guests'] * 100, 2)\ncountry_data_cancelados.dropna(inplace=True)\ncountry_data_cancelados = country_data_cancelados.reset_index()\ncountry_data_cancelados = country_data_cancelados.drop('index',axis=1)\n\nguest_map = px.choropleth(country_data_cancelados,\n                    locations=country_data_cancelados['country'],\n                    color=country_data_cancelados[\"total_guests\"], \n                    hover_name=country_data_cancelados['name'],\n                    animation_frame=\"Mes\",\n                    color_continuous_scale=px.colors.sequential.Reds,\n                    title=\"Cambios de Origen por fecha\")\nguest_map.layout.updatemenus[0].buttons[0].args[1][\"frame\"][\"duration\"] = 2000\n\nguest_map.show()","8a6dae66":"country_data_cancelados = dm_hoteles.groupby(['country','name'])['total_guests','is_canceled'].sum().reset_index().sort_values(by='total_guests',ascending=False)\ncountry_data_cancelados['% de cancelados'] = round(country_data_cancelados['is_canceled']\/ country_data_cancelados['total_guests'] * 100, 2)\n\ncountry_data_cancelados.sort_values(by='total_guests',ascending=False).head(10).sort_values(by='% de cancelados',ascending=True).plot(x='name',y='% de cancelados',kind='barh')\nplt.suptitle('Top Mayor % de Cancelaciones de los Pa\u00edses de M\u00e1s Reservas')\nplt.show()","25ad5c3e":"tipo_hotel = pd.DataFrame(dm_hoteles['hotel'].value_counts()).reset_index()\ntipo_hotel['%'] = round(tipo_hotel['hotel']\/tipo_hotel['hotel'].sum() *100,2)\ntipo_hotel.rename(columns = {'hotel': 'cantidad de reservaciones'}, inplace = True)\ntipo_hotel.rename(columns = {'index': 'hotel'}, inplace = True)\ntipo_hotel.plot(x='hotel',y='%', kind='barh')\n\nprint(tipo_hotel)\n\nplt.show()","4da565c0":"\nplt.figure(figsize=(12,12))\nsb.heatmap(dm_hoteles[dm_hoteles['hotel']=='City Hotel'].corr(),cmap='coolwarm',linecolor='white',linewidths=1,annot=False)\n\nplt.suptitle('Correlaci\u00f3n de Variables para Hoteles de Ciudad', fontsize=20)\nplt.show()","8a6dbee9":"plt.figure(figsize=(12,12))\nsb.heatmap(dm_hoteles[dm_hoteles['hotel']=='Resort Hotel'].corr(),cmap='coolwarm',linecolor='white',linewidths=1,annot=False)\n\nplt.suptitle('Correlaci\u00f3n de Variables para Resorts', fontsize=20)\nplt.show()","c82db3a1":"dm_hoteles['adr_pp'] = dm_hoteles['adr']\/dm_hoteles['total_guests']\npd.DataFrame(dm_hoteles['adr_pp'].describe()).reset_index()[-7:]","ba1cc030":"plt.figure(figsize=(12,8))\n\nsb.boxplot(x='reserved_room_type',y='adr_pp', hue='hotel',data=dm_hoteles, showfliers=False,palette='rainbow')\nplt.title(\"Precio por tipo de hotel y por tipo de habitacion\", fontsize=16)\nplt.xlabel(\"TIpo de Habitaci\u00f3n\", fontsize=16)\nplt.ylabel(\"Precio [EUR]\", fontsize=16)\nplt.legend(loc=\"upper right\")\nplt.ylim(0, 160)\nplt.show()","e8da2d44":"dm_hoteles['arrival_date_year'].value_counts().plot(kind='bar', cmap='rainbow')","a34ba774":"dm_hoteles.rename(columns = {'arrival_date_month': 'Mes'}, inplace = True)\ndm_hoteles.rename(columns = {'adr_pp': 'Precio por Persona'}, inplace = True)\n\nmeses_ordenados = ['January', \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\ndm_hoteles['Mes'] = pd.Categorical(dm_hoteles['Mes'], categories=meses_ordenados, ordered=True)\n\n\nmensual_tipohotel = dm_hoteles.groupby(['hotel','Mes'])['Precio por Persona'].mean().sort_values().reset_index()\n\nfig = px.bar(mensual_tipohotel, x=\"Mes\", y=\"Precio por Persona\", color='hotel', barmode='group',\n             height=400)\n\nfig.update_layout(xaxis={'categoryorder':'array', 'categoryarray':meses_ordenados})\nfig.update_layout(title_text='Precio Promedio por Mes y Tipo de Hotel')\n\nfig.show()","4ce29683":"sb.set(style=\"whitegrid\")\n\nanio2015 = dm_hoteles[dm_hoteles['arrival_date_year']==2015].groupby(['hotel','Mes'])['Precio por Persona'].mean().sort_values().reset_index()\n\nanio2016 = dm_hoteles[dm_hoteles['arrival_date_year']==2016].groupby(['hotel','Mes'])['Precio por Persona'].mean().sort_values().reset_index()\n\nanio2017 = dm_hoteles[dm_hoteles['arrival_date_year']==2017].groupby(['hotel','Mes'])['Precio por Persona'].mean().sort_values().reset_index()\n\nfig = plt.figure(figsize=(20,10))\nax1 = fig.add_subplot(221)\nax2 = fig.add_subplot(222)\nax3 = fig.add_subplot(223)\n\nax1.tick_params('x', labelrotation=45)\nax2.tick_params('x', labelrotation=45)\nax3.tick_params('x', labelrotation=45)\n\ngp1 = sb.lineplot(x='Mes',y='Precio por Persona',ci='sd',data=anio2015, ax=ax1, hue=\"hotel\" ).set_title(\"2015\", {'fontsize': 16})\ngp2 = sb.lineplot(x='Mes',y='Precio por Persona',ci='sd',data=anio2016, ax=ax2, hue=\"hotel\" ).set_title(\"2016\", {'fontsize': 16})\ngp3 = sb.lineplot(x='Mes',y='Precio por Persona',ci='sd',data=anio2017, ax=ax3, hue=\"hotel\" ).set_title(\"2017\", {'fontsize': 16})\n\nplt.subplots_adjust(wspace=0.3,hspace=0.5)\nplt.show()\n\n","45244dd9":"\nfig = plt.figure(figsize=(20,10))\n\ndm_hoteles[\"Mes\"] = pd.Categorical(dm_hoteles[\"Mes\"], categories=meses_ordenados, ordered=True)\n\nsb.lineplot(x='Mes',y='Precio por Persona',data=dm_hoteles,hue=\"hotel\").set_title(\"Precio promedio por Mes\", {'fontsize': 16})\n\nplt.show()","402ffd0b":"cambio_precio = pd.DataFrame(dm_hoteles.groupby('Mes')['Precio por Persona'].mean()).reset_index()\ncambio_precio['% de crecimiento'] = cambio_precio['Precio por Persona'].pct_change() * 100\ncambio_precio['% de crecimiento'] = cambio_precio['% de crecimiento'].fillna(0)\ncambio_precio = cambio_precio[-11:]\n\nplt.figure(figsize=(20,10))\n\nsb.barplot(x ='Mes', y='% de crecimiento', data=cambio_precio).set_title(\"Crecimiento Porcentual del Precio Promedio Mensual\", {'fontsize': 16})\n\nplt.show()","7a0fd105":"cambio_precio = pd.DataFrame(dm_hoteles.groupby(['Mes','hotel'])['Precio por Persona','total_guests'].mean()).reset_index()\ncambio_precio['% de crecimiento'] = cambio_precio['Precio por Persona'].pct_change() * 100\ncambio_precio['% de crecimiento'] = cambio_precio['% de crecimiento'].fillna(0)\ncambio_precio.sort_values(by='Mes',ascending=False).dropna(inplace=True)\ncambio_precio = cambio_precio.dropna()\n\nfig = px.scatter(cambio_precio, y=cambio_precio[\"% de crecimiento\"],\n                    x= cambio_precio[\"Mes\"],\n                    range_x = [-1,12],\n                    range_y = [cambio_precio[\"% de crecimiento\"].min()-1,cambio_precio[\"% de crecimiento\"].max()+1],\n                    animation_frame=\"Mes\",\n                    color= \"hotel\", hover_name=\"hotel\",\n                    hover_data=[\"% de crecimiento\"],\n                    size='total_guests',\n                    title='% de crecimiento mensual por tipo de hotel',\n                    height=1000\n                    )\nfig.update_coloraxes(colorscale=\"hot\")\nfig.update(layout_coloraxis_showscale=True)\nfig.update_xaxes(title_text=\"Mes\")\nfig.update_yaxes(title_text=\"% de crecimiento\")\nfig.layout.updatemenus[0].buttons[0].args[1][\"frame\"][\"duration\"] = 2000\nfig.show()","d53dffd6":"Ocupacion = dm_hoteles.groupby(['Mes','hotel'])['total_guests'].sum().reset_index()\n\nfig = px.bar(Ocupacion, x=\"Mes\", y=\"total_guests\", color='hotel', barmode='group',\n             height=400)\n\nfig.update_layout(title_text='Total Guests por Mes y por Hotel')\n\n\nfig.show()","a847e0f4":"plt.figure(figsize=(12,8))\n\nsb.distplot(dm_hoteles['stay'],bins=100, kde=False, color='g').set_title('Distribuci\u00f3n de Reservacion por Noches',fontsize=16)\n\nplt.show()","19aef983":"duracion = dm_hoteles.groupby(['stay','hotel'])['total_guests'].sum().reset_index().sort_values(by='stay',ascending=False)\nplt.figure(figsize=(18,8))\nsb.barplot(data=duracion, x=\"stay\", y=\"total_guests\", hue='hotel')\nplt.legend(loc='upper right')\nplt.suptitle('Duraci\u00f3n')\nplt.show()","8fc6d3b8":"plt.figure(figsize=(20, 20)) #estableciendo el tama\u00f1o del grafico\nsb.heatmap(pd.pivot_table(dm_hoteles, \n                          values='stay', \n                          index=['Mes'], \n                          columns=['hotel'], \n                          aggfunc='mean').iloc[:, :20], annot=True, fmt='g',cmap='Greens',linecolor='white',linewidths=1) #grafico de heatmap\nplt.tick_params('x', labelrotation=45)\nplt.tick_params('y', labelrotation=360)\nplt.suptitle('Promedio de duraci\u00f3n por mes y hotel', fontsize=20)\nplt.show()\n","1e6c472a":"plt.figure(figsize=(12, 6))\n\nsb.countplot(data=dm_hoteles,x='market_segment', hue='is_canceled')\nplt.tick_params('x', labelrotation=45)\nplt.suptitle('Reservaciones por Segmento de Mercado', fontsize=20)\nplt.show()","800063e8":"plt.figure(figsize=(12, 6))\n\nsb.barplot(data=dm_hoteles,x='market_segment',y='Precio por Persona', hue='reserved_room_type')\nplt.tick_params('x', labelrotation=45)\nplt.suptitle('Reservaciones por Segmento de Mercado', fontsize=20)\nplt.show()","bb825b7d":"plt.figure(figsize=(12, 6))\n\ncanc_mes = dm_hoteles.groupby(['Mes','hotel'])['is_canceled'].sum().reset_index()\nsb.lineplot(x='Mes',y='is_canceled',data=canc_mes)\n\nplt.suptitle('Tendencia de Cancelaciones Por Mes', fontsize=20)\nplt.show()","14635e40":"plt.figure(figsize=(12, 6))\n\ncanc_mes = dm_hoteles.groupby(['Mes','hotel'])['is_canceled'].sum().reset_index()\nsb.lineplot(x='Mes',y='is_canceled',data=canc_mes,hue='hotel')\n\nplt.suptitle('Tendencia de Cancelaciones Por Mes', fontsize=20)\nplt.show()","06d3365a":"plt.figure(figsize=(12,8))\n\naugust = dm_hoteles[dm_hoteles['Mes']=='August']\n\naugust = august.corr()['is_canceled'].sort_values()\n\naugust = august.drop('is_canceled',axis=0)\n\naugust.iplot(kind='bar', title = 'Relaci\u00f3n de Variables para el Mes (Agosto) de Mayor cantidad de Cancelaciones', fontsize=20)\n","4126ef6d":"plt.figure(figsize=(12,8))\n\ncorr = dm_hoteles[dm_hoteles['Mes']=='August'].corr()\n\ncmap = sb.diverging_palette(h_neg=10,\n                            h_pos=240,\n                            as_cmap=True)\n\nmask = np.triu(np.ones_like(corr, dtype=bool))\n\nsb.heatmap(corr, mask = mask, center = 0, cmap = cmap, linewidths=1, annot=True, fmt=\".2f\")\n\nplt.suptitle('Matriz de Correlaci\u00f3n de Variables para el Mes (Agosto) de Mayor cantidad de Cancelaciones', fontsize=20)\nplt.show()","4473ae66":"dm_hoteles.columns","f8d99893":"dm_hoteles.info()","74a32047":"from sklearn.preprocessing import LabelEncoder\n\nle = LabelEncoder()\n\n#dm_hoteles.select_dtypes(include='object').columns\n\ndm_hoteles_modelo = dm_hoteles\n\ndm_hoteles_modelo['hotel'] = le.fit_transform(dm_hoteles_modelo['hotel'])\n\ndm_hoteles_modelo['market_segment'] = le.fit_transform(dm_hoteles_modelo['market_segment'])\n\ndm_hoteles_modelo['Mes'] = le.fit_transform(dm_hoteles_modelo['Mes'])\n\ndm_hoteles_modelo['reserved_room_type'] = le.fit_transform(dm_hoteles_modelo['reserved_room_type'])\n\ndm_hoteles_modelo['assigned_room_type'] = le.fit_transform(dm_hoteles_modelo['assigned_room_type'])\n\ndm_hoteles_modelo['deposit_type'] = le.fit_transform(dm_hoteles_modelo['deposit_type'])\n","bd4c60bd":"dm_hoteles_modelo.columns","2bca68ce":"sb.countplot(x='is_canceled',data=dm_hoteles)","2c9bdaa2":"from sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\n\nscaler = MinMaxScaler()\n\nX = dm_hoteles_modelo.drop(['is_canceled',\n                            'arrival_date_year',\n                            'arrival_date_week_number',\n                            'country',\n                            'distribution_channel',\n                            'adr',\n                            'reservation_status',\n                            'reservation_status_date',\n                            'name',\n                            'code'],axis=1).values\n\ny = dm_hoteles_modelo['is_canceled'].values\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)\n\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\n","e757de8a":"import tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Dropout\nfrom tensorflow.keras.callbacks import EarlyStopping","a0fc414d":"# CODE HERE\nmodel = Sequential()\n\nearly_stop = EarlyStopping(monitor='val_loss', mode='min', verbose=1, patience=25)\n\n# Choose whatever number of layers\/neurons you want.\nmodel.add(Dense(78, activation='relu'))\nmodel.add(Dropout(0.2))\n\nmodel.add(Dense(39, activation='relu'))\nmodel.add(Dropout(0.2))\n\nmodel.add(Dense(19, activation='relu'))\nmodel.add(Dropout(0.2))\n\nmodel.add(Dense(units=1, activation='sigmoid'))\n\nmodel.compile(loss='binary_crossentropy', optimizer='adam')","1a8ff6ff":"model.fit(x=X_train, \n          y=y_train, \n          epochs=50,\n          validation_data=(X_test, y_test), verbose=1,\n          callbacks=[early_stop]\n          )","22322177":"df_loss = pd.DataFrame(model.history.history)\ndf_loss.plot()","87a36bb2":"from sklearn.metrics import confusion_matrix, classification_report\n\npredictions = model.predict_classes(X_test)\nprint(classification_report(y_test,predictions))\nprint(confusion_matrix(y_test,predictions))","37ff9ed2":"from sklearn.model_selection import KFold,cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\n\nmodels=[]\nmodels.append(('LR',LogisticRegression()))\nmodels.append(('DT',DecisionTreeClassifier()))\nmodels.append(('KN',KNeighborsClassifier(10)))\nmodels.append(('NB',GaussianNB()))\nmodels.append(('RF',RandomForestClassifier(n_estimators=100)))","7b55c3fd":"results=[]\nnames=[]\nscoring='accuracy'\nfor name,model in models:\n    kfold=KFold(n_splits=10,random_state=None)\n    cv_result=cross_val_score(model,X_train,y_train,cv=kfold,scoring=scoring)\n    results.append(cv_result)\n    names.append(name)\n    msg=(\"%s: %f (%f)\" % (name,cv_result.mean(),cv_result.std()))\n    print(msg)","48f4fb74":"fig=plt.figure()\nfig.suptitle('Algorithms Coparison')\nax=fig.add_subplot(111)\nplt.boxplot(results)\nax.set_xticklabels(names)\nplt.show()","55e9ab76":"RF = RandomForestClassifier(n_estimators=100)\n\nX = dm_hoteles_modelo.drop(['is_canceled',\n                            'arrival_date_year',\n                            'arrival_date_week_number',\n                            'country',\n                            'distribution_channel',\n                            'adr',\n                            'reservation_status',\n                            'reservation_status_date',\n                            'name',\n                            'code'],axis=1)\n\ny = dm_hoteles_modelo['is_canceled']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)\n\nX_train = scaler.fit_transform(X_train)\n\n\nRF.fit(X_train, y_train)\n\nimportancia = pd.DataFrame()\nimportancia['Variables'] = X.columns\nimportancia['Score'] = RF.feature_importances_\n\nplt.figure(figsize=(12,8))\n\nimportancia.sort_values(by='Score',ascending=True).plot(x='Variables',y='Score',kind='barh')\n\nplt.suptitle('Importancia de variables en las cancelaciones', fontsize=20)\nplt.show()","0957c369":"# \u00bfCu\u00e1nto pagan los clientes por habitaci\u00f3n por noche?","7dba0b83":"# \u00bfReservaciones por segmento de mercado?","ac24dce3":"# An\u00e1lisis Exploratorio de Datos - Visualizaciones","85e48cef":"# Dataset: Demanda de Hoteles","65f75068":"Preguntas a responder\n\n\u00bfde donde vienen los clientes?\n\n\u00bfCu\u00e1nto pagan los clientes por habitaci\u00f3n por noche?\n\n\u00bfC\u00f3mo varia el precio por noche durante el a\u00f1o?\n\n\u00bfCu\u00e1les son los meses mas ocupados del a\u00f1o?\n\n\u00bfCu\u00e1nto duran las personas en los hoteles?\n\n\u00bfReservaciones por segmento de mercado?\n\n\u00bfQu\u00e9 mes tiene la mayor cantidad de cancelaciones?\n\nPredecir cancelaciones ","4863720c":"# \u00bfDe donde vienen los clientes?","68af5ebc":"# Feature Engineering y Data Mining","b054cddd":"# \u00bfCu\u00e1les son los meses m\u00e1s ocupados del a\u00f1o?","7cfa070c":"# \u00bfQu\u00e9 mes tiene la mayor cantidad de cancelaciones?","fda2f9e2":"# Modelos","21044e6d":"# \u00bfHay alguna influencia por el tipo de hotel?","7f07ffe4":"# \u00bfCu\u00e1nto duran las personas en los hoteles?","e51bc195":"# Importaci\u00f3n de librer\u00edas"}}