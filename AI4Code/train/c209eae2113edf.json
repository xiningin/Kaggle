{"cell_type":{"c2e64fde":"code","70a1f798":"code","cea3537e":"code","2039ca1f":"code","59582012":"code","a54c1f90":"code","dcbe0b91":"code","ca874c4f":"code","eb4cfc31":"code","5f2e2ded":"code","6be75f4a":"code","ca8020ad":"code","8eccc5c5":"code","defc89ad":"code","f058d411":"code","791043de":"code","0be4f187":"code","6023edf3":"code","5085a0ac":"code","a1be0149":"markdown","358ac1ea":"markdown","0e0119f7":"markdown","fd1332ae":"markdown"},"source":{"c2e64fde":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix","70a1f798":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","cea3537e":"cd \/kaggle\/input\/disease-symptom-description-dataset","2039ca1f":"df = pd.read_csv('dataset.csv')\ndf1 = pd.read_csv('Symptom-severity.csv')\ndf2 = pd.read_csv('symptom_Description.csv')\ndf3 = pd.read_csv('symptom_precaution.csv')","59582012":"df.head(10)","a54c1f90":"df1.head()","dcbe0b91":"df['Disease'].unique()","ca874c4f":"len(df['Disease'].unique())","eb4cfc31":"# get a list like this --> ['Symptom_1', Symptom_2, ..., Symptom_17 ]\ncols = [i for i in df.iloc[:,1:].columns]\ncols","5f2e2ded":"# Turns all columns in 'cols' to variable column.\n# The number of rows of tmp DataFrame is 17x from the original DataFrame\n\ntmp = pd.melt(df.reset_index() ,id_vars = ['index'], value_vars = cols )\ntmp['add1'] = 1\ntmp.head()","6be75f4a":"# Pivot table\ndiseases = pd.pivot_table(tmp, \n                          values = 'add1',\n                          index = 'index',\n                          columns = 'value')\n\n# Add labels column\ndiseases.insert(0,'label',df['Disease'])\n\n# Fill NaN with zero\ndiseases = diseases.fillna(0)\ndiseases.head()","ca8020ad":"diseases.shape","8eccc5c5":"ds_train = diseases.sample(frac = 0.7, random_state = 1)\nds_test = diseases.drop(index = ds_train.index)\n\nx_train, y_train, x_test, y_test =  ds_train.drop('label', axis = 1),\\\n                                    ds_train['label'],\\\n                                    ds_test.drop('label', axis = 1),\\\n                                    ds_test['label']","defc89ad":"pd.crosstab(ds_train['label'], columns = 'n')","f058d411":"pd.crosstab(ds_test['label'], columns = 'n')","791043de":"rfc = RandomForestClassifier()\nrfc.fit(x_train, y_train)\nresult = rfc.predict(x_test)\nprint(classification_report(y_true=y_test.values, y_pred=result))","0be4f187":"fig, ax = plt.subplots(figsize = (10,10))\nsns.heatmap(confusion_matrix(y_true = y_test.values, y_pred = result), ax = ax)","6023edf3":"#Input: It takes in a 1D array of 132 binary values for every symptom\nrfc.predict(x_test.iloc[1:2])\n\n#Sample Input: Dataframe of 1 rows \u00d7 131 columns\n#Sample Output: ['Fungal infection']","5085a0ac":"print(\"Number of symptoms used to identify the disease \",diseases.shape[1])\nprint(\"Number of diseases that can be identified \",len(df['Disease'].unique()))","a1be0149":"### Split train, test","358ac1ea":"### Reshaping DataFrame","0e0119f7":"### RandomForestClassifier with default parameter","fd1332ae":"### Show all diseases"}}