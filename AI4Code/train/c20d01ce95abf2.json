{"cell_type":{"af3825f4":"code","2de9a99b":"code","549f1432":"code","6463f51c":"code","05164128":"code","02a34d89":"code","d61da90b":"code","35c4403e":"code","18af3689":"code","48ed731b":"code","0f14abd1":"code","617e045e":"code","ea44dc34":"code","ef0a3b92":"code","fc072c59":"code","c1cdf02b":"code","0e47632e":"code","01897c1c":"code","7125e4ba":"code","14cced8f":"code","aa5db4b9":"code","e1837f1a":"code","72cfc522":"code","cfe59747":"code","2e5a55cf":"code","5a3abe9e":"code","48b9c556":"code","0d58a521":"code","3a907fba":"code","7976e4d8":"code","969ba113":"code","bbe916db":"code","5933b495":"code","fddad7f4":"code","ba6e68b1":"code","392c2211":"code","ccc9cc81":"code","be5af294":"code","5d81e653":"code","aea29015":"code","a7226b5c":"code","a20f75ee":"code","7c5129ca":"code","bc619611":"code","7467f47c":"code","b3cc31bc":"code","39fefc24":"code","2dfa5889":"code","4a0dd3f5":"code","6411d516":"code","b113bb0c":"code","5053cdaf":"code","bfe18158":"code","573eaf89":"code","6c6e98ce":"code","c705073e":"code","ecac926b":"code","1949ffd1":"code","fc6c0ed7":"code","4b3ed615":"code","50ca0d8b":"code","ecb1e862":"code","af0d15d6":"code","ad1c36c0":"code","88b766cd":"code","a982363b":"code","154610b0":"code","9d584381":"code","fcade721":"code","22b8647e":"code","a645c3b2":"code","b0ab5b1e":"code","3e2fa664":"code","5138a04b":"code","29e8a32f":"code","dc98ac63":"code","e64580ec":"code","8a29c688":"code","a791b8ba":"code","e63950a0":"code","723c1027":"code","42c5ce46":"code","f239b8f3":"code","bfb89ba2":"code","e3f7f878":"code","5a70abc3":"code","f9caff00":"code","f092840b":"code","602f745b":"code","8003c3bd":"code","6af75027":"code","8989050b":"code","014b302e":"code","2c5eb5ee":"code","c4a6155f":"code","95ec2ff4":"code","55ef0db4":"code","8852e812":"code","d67cbfcb":"code","0884b83c":"code","53dd7ce0":"code","2612687b":"code","03274926":"code","4c93aa5d":"code","57bc1704":"code","4977b778":"code","2ff72af9":"code","fe15481c":"code","4eafec7d":"code","8b1b01ea":"code","f8d16eb1":"code","06e5c086":"code","06e1f39e":"code","79bc699a":"code","69ab4318":"code","848e5ba5":"code","1f0b5546":"code","e5db4382":"code","e34eb531":"code","4a3b1360":"code","de244733":"code","ae8ef99e":"code","3b51f725":"code","9c882dd5":"code","c903c5cc":"code","4894da48":"code","077883bc":"code","eacc8862":"code","8f4d24ce":"code","db8d7649":"code","c2ee26b0":"code","5e644b7b":"code","93ceb3b8":"code","7e209442":"code","e154c22e":"code","19dd2623":"code","87c8d62f":"code","c37e5e6d":"markdown","36b79d85":"markdown","31d51e50":"markdown","e8262a8b":"markdown","e50fb757":"markdown","591eb004":"markdown","f0434516":"markdown","d53e1a48":"markdown","c5a4f3ea":"markdown","29482dad":"markdown","6018278e":"markdown","43045d52":"markdown","bea242e9":"markdown","14a46e18":"markdown","8258c11c":"markdown","606eeb79":"markdown","f5f46121":"markdown","8f3d1f04":"markdown","68a6b2e6":"markdown","748a8328":"markdown","12ff2458":"markdown","28b0ae9d":"markdown","a02ce9b9":"markdown","6dc6fc28":"markdown","34e4d077":"markdown","761feb3a":"markdown"},"source":{"af3825f4":"import seaborn as sns\ndf= sns.load_dataset(\"diamonds\")\ndf= df.select_dtypes(include =[\"float64\",\"int64\"])\ndf=df.dropna()     #boss (null) deger iceren satirlari dusuruyor\ndf.head()","2de9a99b":"df_table=df[\"table\"]","549f1432":"df_table.head()","6463f51c":"sns.boxplot(x=df_table);","05164128":"Q1=df_table.quantile(0.25) #degiskenin %25. indeksine gelen degeri alicak kucukten buyuge siralandiginda \nQ3=df_table.quantile(0.75) #buda %75 lik\nIQR = Q3-Q1 #esik deger olusturuyoruz bu sayede","02a34d89":"Q1","d61da90b":"Q3","35c4403e":"IQR   ","18af3689":"alt_sinir= Q1-1.5*IQR #1. ceyrek degerimizden 1.5*IQR kadarini esik deger olarak belirle assagi taraf icin\nust_sinir= Q3+1.5*IQR #buda ust sinir icin","48ed731b":"print(\"alt sinir:\",alt_sinir,\"ust sinir:\",ust_sinir)","0f14abd1":"#oncelikle bir aykiri deger sorgulamasi yapicaz yani ust_sinir ve alt_siniri asan degerlere once bir erismeliyiz\n(df_table <alt_sinir) | (df_table>ust_sinir)","617e045e":"aykiri_tf =(df_table <alt_sinir) | (df_table>ust_sinir) #burda bir atama yaptim aykiri olan degerlerin sorgulamasini bir\n                                                        #degiskene attim","ea44dc34":"aykiri_tf.head()","ef0a3b92":"df_table[aykiri_tf] #aykiri degerleri boyle cagiririz df_table icinde [] hangi degiskeni istedigimizi belirtmemiz lazim\n                    # bunuda bool degiskenler yardimiyla tanimladigimiz sorgu arrayi(aykiri_tf) sayesinde yaptik \n                    #istersek bu sekildede cagirabilirdik df_table[(df_table <alt_sinir) | (df_table>ust_sinir)]\n                    #ama digeri daha temiz bir goruntu ortaya cikariyor","fc072c59":"df_table[aykiri_tf].index  #bu cok onemli sadece indekslerine eristik cunku bu aykiri degerlerle ilerde duzeltme ve oynama\n                            #yapmamiz gerekiyor bu yuzden indexlerine erismem onemli .index ile kolayca erisebiliriz","c1cdf02b":"df_table[aykiri_tf]","0e47632e":"import pandas as pd","01897c1c":"type(df_table) #pandas series suan bunu dataframe a cevirmem gerekiyor","7125e4ba":"df_table = pd.DataFrame(df_table)","14cced8f":"df_table","aa5db4b9":"df_table.shape  #53940 tane deger var aykiri olmayan degerlere erisicem simdi temiz bir dataframe olusturucam yani","e1837f1a":"                  #bu ~ isareti not anlamina gelir yani bu olmayanlari al diyoruz aykiri olmayanlari alicak\nt_df= df_table[~((df_table<(alt_sinir)) | (df_table>(ust_sinir))).any(axis=1)] \n                                                #.any(axis=1) yapmaliyiz (sutun bazinda bir islem yapmak icin bunu koyduk)\n                                                #~ isareti onemli bunu koydugumuz icin bunlar disindakileri al dedik\n                                                               ","72cfc522":"t_df.shape #gorulecegi uzere shape degisti yaklasik 605 adet gozlem uctu ","cfe59747":"import seaborn as sns\ndf= sns.load_dataset(\"diamonds\")\ndf= df.select_dtypes(include =[\"float64\",\"int64\"])\ndf=df.dropna()     #boss (null) deger iceren satirlari dusuruyor\ndf.head()","2e5a55cf":"df_table=df[\"table\"]","5a3abe9e":"aykiri_tf.head() ","48b9c556":"df_table[aykiri_tf] \ndf_table.mean()","0d58a521":"df_table[aykiri_tf]= df_table.mean()","3a907fba":"df_table[aykiri_tf] #gorulecegi uzere aykiri degerlere ortalama deger atanmis oldu","7976e4d8":"import seaborn as sns\ndf= sns.load_dataset(\"diamonds\")\ndf= df.select_dtypes(include =[\"float64\",\"int64\"])\ndf=df.dropna()     #boss (null) deger iceren satirlari dusuruyor\ndf.head()","969ba113":"df_table=df[\"table\"]\naykiri_tf =(df_table <alt_sinir)  #bunu sadece alt_sinira esitledim sadece altta degisiklik yapacagim","bbe916db":"df_table[aykiri_tf]  #alt sinir degerlerini goruyoruz burda","5933b495":"alt_sinir #alt sinirimiz 51.5 di","fddad7f4":"df_table[aykiri_tf]=alt_sinir  #burda ise baskilama ile alt sinirin altindaki aykiri degerleri alt sinira esitledik\n                              #bu islemi ust sinir icinde uygulamak gerek baskilama icin gostermelik sadece alti yaptim","ba6e68b1":"df_table[aykiri_tf] #gorulecegi uzere alt sinir aykiri degerlerini alt sinira esitledik","392c2211":"import seaborn as sns\ndiamonds = sns.load_dataset(\"diamonds\")\ndiamonds= diamonds.select_dtypes(include = [\"float64\",\"int64\"]) #sadece int ve float degerleri sectik iclerinden bu secim islemi onemli\ndf=diamonds.copy()\ndf=df.dropna()                  #null degerleri dusurduk\ndf.head()","ccc9cc81":"import numpy as np\nfrom sklearn.neighbors import LocalOutlierFactor","be5af294":"clf = LocalOutlierFactor(n_neighbors=20,contamination=0.1) #komsu sayisini 20 yogunlugu 0.1 atadim bu degerlerin asil mantigi dokumanda yaziyor","5d81e653":"clf.fit_predict(df)","aea29015":"df_scores= clf.negative_outlier_factor_","a7226b5c":"df_scores[0:10]","a20f75ee":"np.sort(df_scores)[0:20] #burda -5.860 den sonra kesin dusus olmus sonra yavas yavas azalmis esik deger belirlememiz lazim rastgele olarak 13. degeri esik deger\n                        #olarak tanimladim simdilik yani 13. deger altinda kalan degerler aykiri olarak tanimlanacak","7c5129ca":"esik_deger=np.sort(df_scores)[13]","bc619611":"aykiri_tf = df_scores>esik_deger","7467f47c":"aykiri_tf","b3cc31bc":"yeni_df = df[df_scores >esik_deger] #burda esik degerin altinda kalmayan yani aykiri deger olmayan elemanlar ile yeni bir df olusturduk","39fefc24":"yeni_df  #aykiri olmayan degerlere erismek bizim yaptigimiz kisaca (Silme yontemini uygulamis olduk esik deger altinda olan aykiri degerleri almadik)","2dfa5889":"#aykiri degerlere erismek ister isek\ndf[df_scores<esik_deger] #burdaki degerler ise aykiri degerlerdir","4a0dd3f5":"df[df_scores == esik_deger] #aykiri degerlere bu esik degerimizi atayacagiz ","6411d516":"baski_deger =df[df_scores == esik_deger]","b113bb0c":"aykirilar = df[~aykiri_tf]","5053cdaf":"aykirilar.to_records(index=False)","bfe18158":"res = aykirilar.to_records(index=False)","573eaf89":"res[:]=baski_deger.to_records(index =False)","6c6e98ce":"res #baskilayacak oldugumuz tum degerleri doldurmus olduk\n    #ama bu degisiklik uygulanmadi ","c705073e":"df[~aykiri_tf] #gorulecegi uzere uygulanmamis aykirilarda degisiklik yok yukardaki arrayi bu dataframe a yerlestirmemiz gerekiyor","ecac926b":"df[~aykiri_tf] = pd.DataFrame(res,index=df[~aykiri_tf].index)","1949ffd1":"df[~aykiri_tf]  #gorulecegi uzere tum aykiri degerler artik esik deger olarak belirledigimiz degeri almis oldu","fc6c0ed7":"import numpy as np\nimport pandas as pd\nV1=np.array([1,3,6,np.NAN,7,1,np.NAN,9,15])\nV2=np.array([7,np.NAN,5,8,12,np.NAN,np.NAN,2,3])\nV3=np.array([np.NAN,12,5,6,14,7,np.NAN,2,31])\ndf=pd.DataFrame(\n        {\"V1\":V1,\n         \"V2\":V2,\n         \"V3\":V3}\n)\n\ndf    #eksik verilerin oldugu bir data frame olusturdum","4b3ed615":"df.isnull().sum() #boyle eksik degerlerin sayisina hangi degerden toplam kac eksik deger var diye erisebiliriz","50ca0d8b":"df.notnull().sum() #buda eksik olmayan degerlerin toplamini getirir yukardakinin tam tersi islev","ecb1e862":"df.isnull().sum().sum() #eksik degerlerin toplami yani bu kisaca 2+3+2","af0d15d6":"df.isnull()","ad1c36c0":"df[df.isnull().any(axis=1)] #any nin anlami en az 1 tane eksik deger varsa sec demek yani 1 tane bile null olsa tum satiri getirecek\n                            #burda tam olarak any herhangi biri demek yani herhangi biri bile null olan satiri getir demek bunun tam tersi all dir","88b766cd":"df[df.notnull().all(axis=1)] #burda ise notnull olan all >> yani tum satirlarinda bos olmayan degerler iceren elemanlari getir yukardakinin tam tersi islem\n                            #1 tane bile bos deger olmamasi lazim (hepsi dolu olanlar geldi)","a982363b":"df[df[\"V1\"].notnull() & df[\"V2\"].notnull() & df[\"V3\"].notnull() ] #yukardakinin daha basit ve kutuphane bilmeden kullanilebilecek hali \n                                                                 #bos olmayan satirlari getir dedik kontroller ile V1,V2,V3 icin 3 ude bos olmayan degerler","154610b0":"#eksik degerlerin direk silinmesi","9d584381":"df.dropna() #direkt butun bos degerler silindi #kalici degisiklik yapmaz ama kalici olmasi icin df.dropna(inplace =True) kullanmamiz lazim\n#df","fcade721":"df[\"V1\"]","22b8647e":"df[\"V1\"].mean() #ortalama degeri atayacagim V1 icin bos degerlere","a645c3b2":"df[\"V1\"].fillna(df[\"V1\"].mean()) #gorulecegi uzere bos olan 3. ve 6. degere(4. index 7. index) 6 degerleri atandi","b0ab5b1e":"df[\"V2\"].fillna(0) #0 la doldurdum V2 yi ornegin","3e2fa664":"df.apply(lambda x: x.fillna(x.mean()),axis=0) #axisi 0 yaptik satirlara gore calismasini istiyoruz bu fonksiyonun apply ile lambda x kullanarak bir fonksiyon\n                                            #tanimladik X degerlerinin bosluklarini X in ortalamasi ile doldur dedik","5138a04b":"!pip install missingno","29e8a32f":"import missingno as msno","dc98ac63":"msno.bar(df); #gozlemleri cizdirdik","e64580ec":"msno.matrix(df);","8a29c688":"df","a791b8ba":"import seaborn as sns\ndf= sns.load_dataset(\"planets\")\ndf.head()","e63950a0":"df.isnull().sum() #burda bayagi null deger var bu datasette","723c1027":"msno.matrix(df); #bos null olan degerler goruluyor bu sayede yorum yapabiliyoruz ornegin massdaki bazi bosluklar orbital_perioda bagli gerceklesmi\u015f","42c5ce46":"msno.heatmap(df);","f239b8f3":"import numpy as np\nimport pandas as pd\nV1=np.array([1,3,6,np.NAN,7,1,np.NAN,9,15])\nV2=np.array([7,np.NAN,5,8,12,np.NAN,np.NAN,2,3])\nV3=np.array([np.NAN,12,5,6,14,7,np.NAN,2,31])\ndf=pd.DataFrame(\n        {\"V1\":V1,\n         \"V2\":V2,\n         \"V3\":V3}\n)\ndf","bfb89ba2":"df.dropna() # 1 tane eksik degere sahip tum satirlar silindi (orjinal df i etkilemedi atama yapmadim veya inplace)","e3f7f878":"df.dropna(how=\"all\") # bu ise how ile nasil silmemiz istedigini soruyor kisaca hepsinde bosluk olan satirlari sil dedim\n                     #6 numarali satirda hepsi NAN di o satiri sildi sadece","5a70abc3":"df.dropna(axis=1) \n            #en az 1 tane eksik degeri olan degiskeni sil hepsinde en az 1 tane null oldugu icin (V1 V2 V3) olarak sutun olarak bakiyor(axis=1 den dolayi)\n            #o yuzden tum sutunlari sildi","f9caff00":"df.dropna(axis=1,how=\"all\")  #buda sutun bazindan tum kontrol yani bir sutunun hepsi bos ise o sutunu sil demek 1 tane bile bos olmayan deger varsa silmez\n                             #bu nedenle hicbir deger silinmedi","f092840b":"import numpy as np\nimport pandas as pd\nV1=np.array([1,3,6,np.NAN,7,1,np.NAN,9,15])\nV2=np.array([7,np.NAN,5,8,12,np.NAN,np.NAN,2,3])\nV3=np.array([np.NAN,12,5,6,14,7,np.NAN,2,31])\ndf=pd.DataFrame(\n        {\"V1\":V1,\n         \"V2\":V2,\n         \"V3\":V3}\n)\ndf","602f745b":"#sayisal degiskenlerde atama","8003c3bd":"df[\"V1\"].fillna(0)","6af75027":"df","8989050b":"df[\"V1\"].fillna(df[\"V1\"].mean()) #ortalamasiyla doldurduk","014b302e":"df.apply(lambda x: x.fillna(x.mean()),axis=0)","2c5eb5ee":"#ikinci yol","c4a6155f":"df.fillna(df.mean()[:]) #basit bir yaklasim","95ec2ff4":"df.fillna(df.mean()[\"V1\":\"V2\"])","55ef0db4":"df[\"V3\"].fillna(df[\"V3\"].median())","8852e812":"#tum degiskenler icin birinci yol\ndf.apply(lambda x: x.fillna(x.mean()),axis=0)","d67cbfcb":"#ucuncu yol\ndf.where(pd.notna(df), df.mean(), axis=\"columns\")","0884b83c":"import numpy as np\nimport pandas as pd\nV1=np.array([1,3,6,np.NAN,7,1,np.NAN,9,15])\nV2=np.array([7,np.NAN,5,8,12,np.NAN,np.NAN,2,3])\nV3=np.array([np.NAN,12,5,6,14,7,np.NAN,2,31])\nV4=np.array([\"IT\",np.NAN,\"IK\",\"IK\",\"IK\",\"IK\",\"IK\",\"IT\",\"IT\"])\n\ndf=pd.DataFrame(\n        {\"maas\":V1,\n         \"V2\":V2,\n         \"V3\":V3,\n         \"departman\":V4 }\n)\ndf","53dd7ce0":"df.groupby(\"departman\")[\"maas\"].mean() #departmanlara gore maas ortalamalarina bakmak istiyorum","2612687b":" df[\"maas\"].fillna(df.groupby(\"departman\")[\"maas\"].transform(\"mean\")) #bu cok onemli bir yontem departmanlarin kendi icindeki ortalamalarina gore doldurma\n                                                            #islemi gerceklestirdim (bu sayede tek satirda 2 departman ortalamasina gore doldurma yaptim)","03274926":"df[\"maas\"] #tabi yukarda atama yapmadigim icin degisim olmadi degerlerde","4c93aa5d":"df[\"departman\"].mode()[0]","57bc1704":"df[\"departman\"].fillna(df[\"departman\"].mode()[0]) #kategorik deger doldurma mod kullanarak yaptik","4977b778":"df[\"departman\"].fillna(method=\"bfill\") #kendinden sonrakiyle dolduruyor kategorik boslugu","2ff72af9":"import seaborn as sns\nimport missingno as msno\ndf=sns.load_dataset(\"titanic\")\ndf=df.select_dtypes(include= [\"float64\",\"int64\"])\n\nprint(df.head())\n\ndf.isnull().sum()  #bos degerlerin toplam sayisi","fe15481c":"!pip install ycimpute","4eafec7d":"from ycimpute.imputer import knnimput #knn algoritmasi ile doldurma (en yakin komsu deger)","8b1b01ea":"var_names=list(df)\nprint(var_names) #isimleri aldik df deki #list kullandik oldukca onemli","f8d16eb1":"import numpy as np\nn_df = np.array(df)","06e5c086":"n_df[0:10]","06e1f39e":"dff = knnimput.KNN(k=4).complete(n_df) #eksik oldugu gozlemleri doldurmus oldu","79bc699a":"type(dff) #numpy bu bunu pandasa ceviricez","69ab4318":"dff= pd.DataFrame(dff,columns=var_names) #burda yukarda var_names i list() yardimiyla sutun basliklari olarak almistik burda columns ile atadik o isimleri\nprint(dff) ","848e5ba5":"dff.isnull().sum() #hepsi dolduruldu KNN ile","1f0b5546":"import seaborn as sns\nimport missingno as msno\ndf=sns.load_dataset(\"titanic\")\ndf=df.select_dtypes(include= [\"float64\",\"int64\"])\n","e5db4382":"df.isnull().sum() #bos degerler goruldugu uzere 177 tane","e34eb531":"var_names=list(df)","4a3b1360":"import numpy as np\nn_df = np.array(df)","de244733":"from ycimpute.imputer import iterforest\n#dff = iterforest.IterImput().complete(n_df) #kutuphane hatasi verebiliyor surumle alakali olarak ama islenisi boyle","ae8ef99e":"dff=pd.DataFrame(dff,columns=var_names)","3b51f725":"dff.isnull().sum()","9c882dd5":"import seaborn as sns\nimport missingno as msno\ndf=sns.load_dataset(\"titanic\")\ndf=df.select_dtypes(include= [\"float64\",\"int64\"])","c903c5cc":"df.isnull().sum() #toplam 177 tane bos deger var","4894da48":"from ycimpute.imputer import EM","077883bc":"var_names= list(df)","eacc8862":"import numpy as np\nn_df = np.array(df)","8f4d24ce":"dff=EM().complete(n_df) #burda EM islemi tamamlanmis oldu","db8d7649":"dff=pd.DataFrame(dff,columns=var_names) #burda tekrar Data frame formuna ceviriyorum\n","c2ee26b0":"dff.isnull().sum() #gorulecegi uzere bosluklar doldurulmus oldu tekrardan tahmine dayali yontemle","5e644b7b":"import numpy as np\nimport pandas as pd\nV1=np.array([1,3,6,5,7])\nV2=np.array([7,7,5,8,12])\nV3=np.array([6,12,5,6,14])\ndf=pd.DataFrame(\n        {\"V1\":V1,\n         \"V2\":V2,\n         \"V3\":V3}\n)\ndf = df.astype(float)\ndf","93ceb3b8":"from sklearn import preprocessing","7e209442":"preprocessing.scale(df) #scale ile standartlastirdik","e154c22e":"preprocessing.normalize(df) #0 la 1 arasinda normalize etti","19dd2623":"#0 la 1 arasinda degilde istedigimiz deger araliklarinda donusturme islemi yapmak istiyor isek kullaniriz (min ve max aralik degerlerini secebiliyoruz)\nscaler=preprocessing.MinMaxScaler(feature_range=(10,20)) #bunu nesne olarak kaydediyoruz ama donusturme icin ayrica fit_transform kullanmamiz gerekiyor","87c8d62f":"scaler.fit_transform(df) #donusturme islemi tamamlanmis oldu istenilen arakliklarda","c37e5e6d":"## 1-silme","36b79d85":"# Eksik Veri Analizi\n\n## Hizli Cozum","31d51e50":"Bu seferki ama\u00e7 yakaladigimiz aykirilari silmek degilde o aykirilari ortalama deger ile degistirmek olacak","e8262a8b":"## 2-Ortalama ile Doldurma","e50fb757":"## Min-Max Donusumu","591eb004":"## Tahmine Dayal\u0131 De\u011fer Atama Y\u00f6ntemleri\n\nmakine ogrenmesi yontemleri kullanilarak, eksik degerleri doldurucaz","f0434516":"## Silme Yontemleri","d53e1a48":"# Aykiri Deger Problemini Cozmek","c5a4f3ea":"### Silme yontemi","29482dad":"## Random Forests ile doldurma","6018278e":"## Baski Yontemi (Ust seviye bir yontem kafa karistirici ve zor)","43045d52":"## EM Algoritmasi","bea242e9":"## KNN ile doldurma","14a46e18":"## Local Outlier Factor\nGozlemleri bulunduklari konumda yogunluk tabanli skorlayarak buna gore aykiri deger olabilecek degerleri tanimlayabilmemize imkan sagliyor.\n\nBir noktanin local yogunlugu bu noktanin komsulari ile karsilastiriliyor. Eger bir nokta komsularinin yogunlugundan anlamli sekilde dusuk ise bu nokta komsularindan daha seyrek bir bolgede bulunuyordur yorumu yapilabiliyor. Dolayisiyla burada bir komsuluk soz konusu. Bir degerin cevresi yogun degilse demek ki bu deger aykiri degerdir seklinde degerlendiriliyor.","8258c11c":"## Kategorik De\u011fi\u015fken K\u0131r\u0131l\u0131m\u0131nda De\u011fer Atama","606eeb79":"# Cok Degiskenli Aykiri Gozlem Analizi","f5f46121":"# Degisken Standardizasyonu (Veri Standardizasyonu)","8f3d1f04":"## Normalizasyon","68a6b2e6":"## 3-Baskilama Yontemi","748a8328":"# Ayk\u0131r\u0131 G\u00f6zlem Analizi","12ff2458":"**Ayk\u0131r\u0131 De\u011ferleri Yakalamak**","28b0ae9d":"## Deger Atama Yontemleri","a02ce9b9":"## Standardizasyon","6dc6fc28":"Bu yontemdeyse aykiri deger ust sinirdaysa ust sinira esitlenir alt sinirin altindaysa alt sinira esitlenir\nbazi senaryolarda ort dan daha iyi cunku veri kumesinin assagi veya yukari cekme egilimine yatkin bir senaryo sergiler","34e4d077":"### Basit deger atama","761feb3a":"## Eksik Veri Yapisinin Gorsellestirilmesi"}}