{"cell_type":{"41052617":"code","7ac65046":"code","91b11cf2":"code","e3fcdb05":"code","5bac5284":"code","6e588977":"code","aa6a7842":"code","b09b0945":"code","26556542":"code","0420a658":"code","8e74f163":"code","0ab9a399":"code","8f6d1321":"code","39c40a72":"code","3b99a36c":"code","a532d26a":"code","a51eed34":"code","dc19c24a":"code","ecc63c52":"code","77fcb237":"code","a37fed81":"code","7501ca53":"code","2a2f70fe":"code","8f895a1a":"code","998636a0":"code","74945a2a":"code","3045f754":"markdown","c6826d3a":"markdown","66ef1b72":"markdown","d16b1641":"markdown","7a3bdbd4":"markdown","f66fceff":"markdown","ce2ca019":"markdown","cd131b72":"markdown"},"source":{"41052617":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7ac65046":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","91b11cf2":"df=pd.read_csv(\"\/kaggle\/input\/beginner-datasets\/beginner_datasets\/bank.csv\")","e3fcdb05":"df","5bac5284":"df.isna().any()","6e588977":"df.isnull().sum()","aa6a7842":"df.hist(figsize=(20,20))","b09b0945":"df.columns","26556542":"x=df[[\"age\",\"job\",\"marital\",\"education\",\"default\",\"balance\",\"housing\",\"loan\",\"contact\",\"day\",\"month\",\"duration\",\"campaign\",\"pdays\",\"previous\",\"poutcome\"]]","0420a658":"x","8e74f163":"df[\"job\"]=LabelEncoder().fit_transform(df[\"job\"])\ndf[\"marital\"]=LabelEncoder().fit_transform(df[\"marital\"])\ndf[\"education\"]=LabelEncoder().fit_transform(df[\"education\"])\ndf[\"default\"]=LabelEncoder().fit_transform(df[\"default\"])\ndf[\"housing\"]=LabelEncoder().fit_transform(df[\"housing\"])\ndf[\"contact\"]=LabelEncoder().fit_transform(df[\"contact\"])\ndf[\"loan\"]=LabelEncoder().fit_transform(df[\"loan\"])\ndf[\"month\"]=LabelEncoder().fit_transform(df[\"month\"])\ndf[\"poutcome\"]=LabelEncoder().fit_transform(df[\"poutcome\"])\ndf[\"deposit\"]=LabelEncoder().fit_transform(df[\"deposit\"])","0ab9a399":"df.head()\n","8f6d1321":"x=df[[\"age\",\"job\",\"marital\",\"education\",\"default\",\"balance\",\"housing\",\"loan\",\"contact\",\"day\",\"month\",\"duration\",\"campaign\",\"pdays\",\"previous\",\"poutcome\"]]","39c40a72":"correl=x.corr()\nplt.figure(figsize=(20,20))\nsns.heatmap(correl,annot=True,cmap='OrRd')\nplt.show()","3b99a36c":"x=df[[\"age\",\"job\",\"marital\",\"education\",\"default\",\"balance\",\"housing\",\"loan\",\"contact\",\"day\",\"month\",\"duration\",\"campaign\",\"pdays\",\"previous\",\"poutcome\"]]\nx=x.values","a532d26a":"y=df[[\"deposit\"]]","a51eed34":"y=y.values","dc19c24a":"x","ecc63c52":"y","77fcb237":"xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.2,random_state=5)","a37fed81":"model=RandomForestClassifier(n_estimators=500,random_state=1)\nmodel.fit(xtrain,ytrain)","7501ca53":"pre=model.predict(xtest)","2a2f70fe":"pre","8f895a1a":"ytest.ravel()","998636a0":"cm=confusion_matrix(pre,ytest)\nsns.heatmap(cm,annot=True)","74945a2a":"print(\"THE ACCURACY OF THE MODEL IS : \",round(accuracy_score(pre,ytest)*100,2),\"%\")","3045f754":"#  **CORRELATION ANALYSIS**","c6826d3a":"# **IMPORT LIBRARIES**","66ef1b72":"# **ACCURACY SCORE**","d16b1641":"# **RESULT**","7a3bdbd4":"# **LOADING DATASET**","f66fceff":"# **DATA PREPROCESSING**","ce2ca019":"# **SELECTING THE X & Y VARIABLES**","cd131b72":"#  **TRAIN THE MODEL**"}}