{"cell_type":{"ab340407":"code","da03d20b":"code","59878914":"code","0244f52b":"code","1e5f1477":"code","26253297":"code","ae3695a9":"code","c27bb541":"code","237d1b0a":"code","e48dc8e7":"code","57767847":"code","412c066c":"code","008a82ab":"code","a882417d":"code","e1ad6355":"code","1d555d0e":"code","05884c51":"code","4f0f03ad":"code","5145f0b7":"code","bada566d":"code","1cbefa3d":"code","4f730fe8":"code","90d715b7":"code","3191e0db":"code","940b5e61":"code","d3e0d7e8":"code","95e99d1c":"code","c680da65":"code","8ed04857":"markdown","07ff3a58":"markdown","c3351251":"markdown","edc99672":"markdown","f664440d":"markdown","2271105b":"markdown","ea4fb184":"markdown","82ef4475":"markdown","9c1faaa9":"markdown","c3f60728":"markdown","d36a3dde":"markdown","0c41e8e6":"markdown","8b05f6bc":"markdown","91829f39":"markdown","a2fab9e4":"markdown","aa547b33":"markdown","931260f3":"markdown","2b73670f":"markdown","c105eae6":"markdown","18694ad5":"markdown","a8414a21":"markdown","3801ae66":"markdown","a059cf26":"markdown","6f92592a":"markdown"},"source":{"ab340407":"!pip install chart_studio","da03d20b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n# web scraping\nimport requests\nfrom bs4 import BeautifulSoup\n\n# plotly standard imports\nimport plotly.graph_objs as go\nimport chart_studio.plotly as py\n\n# Cufflinks wrapper on plotly\nimport cufflinks as cf\n\n# Data science imports\nimport pandas as pd\nimport numpy as np\n\n%matplotlib inline\n\n# Options for pandas\npd.options.display.max_columns = 30\n\n# Display all cell outputs\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = 'all'\nfrom plotly.offline import iplot, init_notebook_mode\ninit_notebook_mode(connected=True)\ncf.go_offline(connected=True)\n\n# Set global theme\ncf.set_config_file(world_readable=True, theme='polar')\n\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","59878914":"df = pd.read_csv('\/kaggle\/input\/goodreads\/goodreads.csv')\ndf.head()","0244f52b":"df.columns","1e5f1477":"df.info()","26253297":"df.rating = pd.to_numeric(df.rating, downcast=\"float\")\ndf['page_count'] = pd.to_numeric(df.page_count, downcast=\"float\")\ndf['review_count'] = pd.to_numeric(df.review_count, downcast=\"float\")\n\ndf.info()","ae3695a9":"df[['score', 'rating', 'rating_count', 'review_count', 'page_count']].describe()","c27bb541":"df.authour.nunique()","237d1b0a":"df_author = df.groupby('authour')['name'].count().sort_values(ascending = False)\ndf_author = pd.DataFrame(df_author)\ndf_author","e48dc8e7":"df.groupby(\"authour\").id.count().iplot(kind = 'bar',\n                xTitle='Authors',\n                yTitle='Number of books',\n                title='Number of books author-wise',\n                colors='navy')","57767847":"df.iplot(kind = 'bar',\n                x='name',\n                y='rating',\n                #xTitle='Book name',\n                yTitle='Rating',\n                title='Rating of top books')","412c066c":"df_gr_top=df.sort_values('rating',ascending=False)\n\ndf_gr_top.iplot(kind = 'bar',\n                x='name',\n                y='rating',\n                #xTitle='Book name',\n                yTitle='Rating',\n                title='Rating of books')","008a82ab":"df.groupby('year')['id'].count().iplot(kind = 'bar',\nxTitle = 'Date',\nyTitle = 'Number of Books',\ntitle = 'Number of books published per year',\n                                      colors = 'navy')","a882417d":"bins = [1000,1970, 1980, 1990, 2000, 2010, np.inf]\nnames = ['<1970', '1970-1980', '1980-1990', '1990-2000', '2000-2010','2010>']\n\ndf['YearRange'] = pd.cut(df['year'], bins, labels=names)\ndf.head()","e1ad6355":"df_year = df.groupby('YearRange')['id'].count().sort_values(ascending = False)\ndf_year = pd.DataFrame(df_year)\ndf_year","1d555d0e":"year_portions = df.YearRange.value_counts(normalize=True)*100\n\nlabels = year_portions.index.tolist()\nvalues = year_portions.values.tolist()\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values)])\n\nfig.update_layout(title=\"Year Proportions\",\n                 template=\"ggplot2\",\n                    font=dict(\n                        family=\"Courier New, monospace\",\n                              size=18,\n                              color=\"#7f7f7f\"))","05884c51":"df[['page_count',\n       'rating', 'rating_count', 'review_count','score']].corr().iplot(kind=\n        'heatmap',colorscale='rdpu', \n        title = 'Correlation between different columns')","4f0f03ad":"df.groupby('genres')['id'].count().sort_values().iplot(\nkind = 'bar',\nxTitle = 'Genres',\nyTitle = 'Number of books',\ntitle = 'Number of books by Genres')","5145f0b7":"df.groupby('genres', as_index= False)['id'].count().iplot(\n    kind='pie', \n    labels='genres',\n    values='id',\n    title='Percentage of genres')","bada566d":"df.iplot(kind = 'bar',\n                x='name',\n                y='review_count',\n                #xTitle='Book name',\n                yTitle='Review Count',\n                title='Review count of each book',colors = 'mediumvioletred')","1cbefa3d":"df.groupby('name')[['rating_count', 'rating']].sum().sort_values('rating', ascending = False).iplot(\n \nxTitle = 'Book Name',\nyTitle = 'Rating Count',\nsecondary_y = 'rating',\nsecondary_y_title = 'Rating',\ntitle = 'Books with their rating and rating count')","4f730fe8":"df.groupby(['genres']).agg(max_rating=('rating',\nnp.max),max_rating_count=('rating_count',np.max)).sort_values('max_rating')","90d715b7":"df.groupby(['genres']).agg(max_rating=('rating',\nnp.max),max_rating_count=('rating_count',np.max)).sort_values('max_rating').iplot(\nxTitle = 'Genres',\nyTitle = 'Max rating Count',\nsecondary_y = 'max_rating',\nsecondary_y_title = 'Max rating',\ntitle = 'Max rating and max rating count')","3191e0db":"df.groupby('name')[['rating', 'review_count']].sum().sort_values('rating', \n                                                    ascending = False).iplot(\nxTitle = 'Book Name',\nyTitle = 'Review Count',\nsecondary_y = 'rating',\nsecondary_y_title = 'Rating',\ntitle = 'Books with their raiting and review count')","940b5e61":"df.pivot(\n    columns='genres', values='page_count').iplot(\n        kind='box',\n        layout=dict(\n            height=600,\n            yaxis=dict(title='page_count'),\n            xaxis = dict(title = 'genres'),\n            title='Page count by genres',\n            margin=dict(b=140)))","d3e0d7e8":"df.iplot(\n    x='rating_count',\n    y='review_count',\n    categories='genres',\n    xTitle='Rating Count',\n    yTitle='Review Count',\n    title='Rating Count vs Review Count by Genres')","95e99d1c":"df.groupby(\n    'authour', as_index=False)['score'].sum().sort_values('score', ascending = False)[:10].iplot(\n kind='pie', labels='authour', values='score', \n    title='Score by author')","c680da65":"import plotly.express as px\nfig = px.sunburst(df, path=['genres', 'rating', 'page_count'], values='score', color='review_count')\nfig.show()","8ed04857":"## Score of Author","07ff3a58":"## Genres and their page count","c3351251":"## Rating of books after sorting the rating","edc99672":"## Rating Count vs Review Count by Genres","f664440d":"# EDA\nFinding the correlation between various entities.\n\n1. page_count: Total number of pages in the book.\n2. rating: Average rating of the book.\n3. rating_count: The total numberr of people who have rated the book.\n4. review_count: Total number of review for the book.\n5. score: It is based on multiple factors, including the number of people who have voted for it and how highly those voters ranked the book.","2271105b":"# Importing the data","ea4fb184":"## Checking the info","82ef4475":"## Heatmap","9c1faaa9":"## Number of authors","c3f60728":"## Checking the columns","d36a3dde":"## Book with rating_count and review_count","0c41e8e6":"## Books with their rating and rating count","8b05f6bc":"## Finding the percentage of each genre","91829f39":"## Converting the data type","a2fab9e4":"## Describing the data","aa547b33":"## Checking the review count of each book","931260f3":"## Number of books published per year","2b73670f":"## Dividing years to bins","c105eae6":"## Maximum rating and rating count for each genre","18694ad5":"##  Finding books based on genre","a8414a21":"## Books published per author","3801ae66":"## Number of books published in the given year range","a059cf26":"## Rating of books","6f92592a":"## Sunburst Charts"}}