{"cell_type":{"7247993c":"code","ebe0096f":"code","2f363962":"code","ba0806dc":"code","1427a7fd":"code","c3e6d05c":"code","9af88b65":"code","89b22e03":"code","f4274e69":"code","1649daac":"code","4a6ce4d1":"markdown","aa67c349":"markdown","b82191d2":"markdown","17002b15":"markdown","c1f5012a":"markdown","82e0cae3":"markdown","687b5142":"markdown","c2961eca":"markdown","b53462a7":"markdown","c1b96c69":"markdown","c1ba9ea0":"markdown","bba4462f":"markdown","f8d44214":"markdown","21813c54":"markdown","1c16b4b3":"markdown","169f1a55":"markdown","c10041b6":"markdown","97afe2bf":"markdown","f46ded32":"markdown"},"source":{"7247993c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# plotly\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ebe0096f":"df=pd.read_csv('..\/input\/commodity_trade_statistics_data.csv', low_memory=False)\ncn_df = df[df.country_or_area == \"China\"]\ndf.head()","2f363962":"cn_i = cn_df[(cn_df.flow == 'Import') & (cn_df.comm_code!= 'TOTAL')].groupby(['year'],as_index=False)['trade_usd'].agg('sum')\ncn_e = cn_df[(cn_df.flow == 'Export') & (cn_df.comm_code!= 'TOTAL')].groupby(['year'],as_index=False)['trade_usd'].agg('sum')\n\ntrace1 = go.Bar(\n                x = cn_i.year,\n                y = cn_i.trade_usd,\n                name = \"China Import\",\n                marker = dict(color = 'rgba(102, 216, 137, 0.8)'),\n)\n\ntrace2 = go.Bar(\n               x = cn_e.year,\n                y = cn_e.trade_usd,\n                name = \"China Export\",\n                marker = dict(color = 'rgba(224, 148, 215, 0.8)'),\n)\ndata = [trace1, trace2]\nlayout = {\n    'xaxis': {'title': 'Year 1992-2016'},\n    'yaxis': {'title': 'Trade of Import & Export in China (USD)'},\n    'barmode': 'group',\n    'title': 'Import and Export in China'\n}\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","ba0806dc":"temp = cn_df[(cn_df.year==1992) & (cn_df.flow=='Import')].sort_values(by=\"trade_usd\",  ascending=False).iloc[1:11, :]\ncn_1992i = temp.sort_values(by=\"trade_usd\",  ascending=True)\ntrace1 = go.Bar(\n                x = cn_1992i.trade_usd,\n                y = cn_1992i.commodity,\n                marker = dict(color = 'rgba(152, 213, 245, 0.8)'),\n                orientation = 'h'\n)\n\n\ndata = [trace1]\nlayout = {\n#     'xaxis': {'title': 'Trade in USD'},\n    'yaxis': {'automargin':True,},\n    'title': \"Top 10 Commodities in China Import Trade (USD), 1992\"\n}\nfig = go.Figure(data = data, layout = layout)\niplot(fig)\n\ntemp1 = cn_df[(cn_df.year==2016) & (cn_df.flow=='Import')].sort_values(by=\"trade_usd\",  ascending=False).iloc[1:11, :]\ncn_2016i = temp1.sort_values(by=\"trade_usd\",  ascending=True)\ntrace1 = go.Bar(\n                x = cn_2016i.trade_usd,\n                y = cn_2016i.commodity.tolist(),\n                marker = dict(color = 'rgba(249, 205, 190, 0.8)'),\n                orientation = 'h'\n)\n\n\ndata = [trace1]\nlayout = {\n#     'xaxis': {'title': 'Trade in USD'},\n    'yaxis': {'automargin':True,},\n    'title': \"Top 10 Commodities in China Import Trade (USD), 2016\"\n}\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","1427a7fd":"petro = cn_df[(cn_df.comm_code == '270900') & (cn_df.flow == 'Import')]\nurea = cn_df[(cn_df.comm_code == '310210') & (cn_df.flow == 'Import')]\niron = cn_df[(cn_df.comm_code == '260111') & (cn_df.flow == 'Import')]\n\ntrace1 = go.Scatter(\n    x = petro.year,\n    y = petro.trade_usd,\n    mode = \"lines+markers\",\n    name = \"Petroleum oils\",\n    marker = dict(color = 'rgba(255, 196, 100, 0.8)')\n)\n\ntrace2 = go.Scatter(\n    x = urea.year,\n    y = urea.trade_usd,\n    mode = \"lines+markers\",\n    name = \"Urea\",\n    marker = dict(color = 'rgba(241, 130, 133, 0.8)')\n)\n\ntrace3 = go.Scatter(\n    x = iron.year,\n    y = iron.trade_usd,\n    mode = \"lines+markers\",\n    name = \"Iron ore\",\n    marker = dict(color = 'rgba(130, 241, 140, 0.8)')\n)\n\n\ndata = [trace1, trace2, trace3]\nlayout = dict(title = \"Some Commodities' value in China Import Trade (USD)\",\n              xaxis= dict(title= 'Year 1992-2016',ticklen= 5,zeroline= False),\n              yaxis = {'title': 'Import trade value(USD)'}\n )\nfig = dict(data = data, layout = layout)\niplot(fig)","c3e6d05c":"temp = cn_df[(cn_df.year==1992) & (cn_df.flow=='Export')].sort_values(by=\"trade_usd\",  ascending=False).iloc[1:11, :]\ncn_1992e = temp.sort_values(by=\"trade_usd\",  ascending=True)\ntrace1 = go.Bar(\n                x = cn_1992e.trade_usd,\n                y = cn_1992e.commodity,\n                marker = dict(color = 'rgba(173, 164, 239, 0.8)'),\n                orientation = 'h'\n)\n\n\ndata = [trace1]\nlayout = {\n#     'xaxis': {'title': 'Trade in USD'},\n    'yaxis': {'automargin':True,},\n    'title': \"Top 10 Commodities in China Export Trade (USD), 1992\"\n}\nfig = go.Figure(data = data, layout = layout)\niplot(fig)\n\ntemp1 = cn_df[(cn_df.year==2016) & (cn_df.flow=='Export')].sort_values(by=\"trade_usd\",  ascending=False).iloc[1:11, :]\ncn_2016e = temp1.sort_values(by=\"trade_usd\",  ascending=True)\ntrace1 = go.Bar(\n                x = cn_2016e.trade_usd,\n                y = cn_2016e.commodity,\n                marker = dict(color = 'rgba(255, 241, 117, 0.8)'),\n                orientation = 'h'\n)\n\n\ndata = [trace1]\nlayout = {\n#     'xaxis': {'title': 'Trade in USD'},\n    'yaxis': {'automargin':True,},\n    'title': \"Top 10 Commodities in China Export Trade (USD), 2016\"\n}\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","9af88b65":"toys = cn_df[(cn_df.comm_code == '950390') & (cn_df.flow == 'Export')]\nmaize = cn_df[(cn_df.comm_code == '100590') & (cn_df.flow == 'Export')]\nlight = cn_df[(cn_df.comm_code == '940540') & (cn_df.flow == 'Export')]\n\ntrace1 = go.Scatter(\n    x = toys.year,\n    y = toys.trade_usd,\n    mode = \"lines+markers\",\n    name = \"toys\",\n    marker = dict(color = 'rgba(255, 196, 100, 0.8)')\n)\n\ntrace2 = go.Scatter(\n    x = maize.year,\n    y = maize.trade_usd,\n    mode = \"lines+markers\",\n    name = \"maize\",\n    marker = dict(color = 'rgba(241, 130, 133, 0.8)')\n)\n\ntrace3 = go.Scatter(\n    x = light.year,\n    y = light.trade_usd,\n    mode = \"lines+markers\",\n    name = \"light\",\n    marker = dict(color = 'rgba(130, 241, 140, 0.8)')\n)\n\n\ndata = [trace1, trace2, trace3]\nlayout = dict(title = \"Some Commodities' value in China Export Trade (USD)\",\n              xaxis= dict(title= 'Year 1992-2016',ticklen= 5,zeroline= False),\n              yaxis = {'title': 'Export trade value(USD)'}\n )\nfig = dict(data = data, layout = layout)\niplot(fig)","89b22e03":"cn_trade = cn_df[cn_df.comm_code!= 'TOTAL'].groupby(['year'],as_index=False)['trade_usd'].agg('sum')\nwd_trade = df[(df.year >1991) & (df.comm_code!= 'TOTAL')].groupby(['year'],as_index=False)['trade_usd'].agg('sum')\n# cn_trade.shape\n\ntrace0 = {\n    'x': cn_trade.year,\n    'y': cn_trade.trade_usd,\n    'name': \"China\",\n    'type': 'bar',\n    'marker': {'color':'rgba(129, 239, 208, 0.8)'}\n}\ntrace1 = {\n    'x': wd_trade.year,\n    'y': wd_trade.trade_usd,\n    'name': \"World\",\n    'type': 'bar',\n    'marker': {'color':'rgba(255, 171, 202, 0.8)'}\n}\n\ndata = [trace0, trace1]\nlayout = {\n    'xaxis': {'title': 'Year 1992-2016'},\n    'yaxis': {'title': 'Value of Trade in USD'},\n    'barmode': 'relative',\n    'title': 'World vs China: Value of Trade'\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)\n\n# ratio\ntrace3 = go.Scatter(\n                    x = cn_trade.year,\n                    y = cn_trade.trade_usd\/wd_trade.trade_usd*100,\n                    mode = \"lines+markers\",\n                    name = \"Ratio of China\/World\",\n                    marker = dict(color = 'rgba(245, 150, 104, 0.8)')\n)\ndata2 = [trace3]\nlayout2 = dict(title = 'Percentage of China Trade in World Trade (%)',\n              xaxis= dict(title= 'Year 1992-2016',ticklen= 5,zeroline= False),\n              yaxis = {'title': 'Percentage (%)'}\n )\nfig2 = dict(data = data2, layout = layout2)\niplot(fig2)","f4274e69":"cn_ie = cn_df[cn_df.comm_code!= 'TOTAL'].groupby(['year'],as_index=False)['weight_kg'].agg('sum')\nwd_ie = df[(df.year >1991) & (df.comm_code!= 'TOTAL')].groupby(['year'],as_index=False)['weight_kg'].agg('sum')\n\ntrace1 = go.Bar(\n                x = wd_ie.year,\n                y = wd_ie.weight_kg,\n                name = \"World\",\n                marker = dict(color = 'rgba(104, 206, 245, 0.8)'),\n)\n\ntrace2 = go.Bar(\n                x = cn_ie.year,\n                y = cn_ie.weight_kg,\n                name = \"China\",\n                marker = dict(color = 'rgba(255, 248, 12, 0.8)'),\n)\ndata = [trace1, trace2]\nlayout = {\n    'xaxis': {'title': 'Year 1992-2016'},\n    'yaxis': {'title': 'Import & Export in Weight (kg)'},\n    'barmode': 'group',\n    'title': 'World vs China: Import & Export in Weight'\n}\nfig = go.Figure(data = data, layout = layout)\niplot(fig)\n\n# ratio\ntrace3 = go.Scatter(\n                    x = cn_ie.year,\n                    y = cn_ie.weight_kg\/wd_ie.weight_kg*100,\n                    mode = \"lines+markers\",\n                    name = \"Ratio of China\/World\",\n                    marker = dict(color = 'rgba(84, 222, 90, 0.8)')\n)\ndata2 = [trace3]\nlayout2 = dict(title = 'Percentage of China\\'s Import & Export in World (%)',\n              xaxis= dict(title= 'Year 1992-2016',ticklen= 5,zeroline= False),\n              yaxis = {'title': 'Percentage (%)'}\n )\nfig2 = dict(data = data2, layout = layout2)\niplot(fig2)","1649daac":"us_trade = df[(df.country_or_area == \"USA\") & (df.comm_code!= 'TOTAL')].groupby(['year'],as_index=False)['trade_usd'].agg('sum')\njp_trade = df[(df.country_or_area == \"Japan\") & (df.comm_code!= 'TOTAL')].groupby(['year'],as_index=False)['trade_usd'].agg('sum')\n\ncn_1992 = int(cn_trade[cn_trade.year==1992].iloc[0][1])\nus_1992 = int(us_trade[us_trade.year==1992].iloc[0][1])\njp_1992 = int(jp_trade[jp_trade.year==1992].iloc[0][1])\not_1992 = int(wd_trade[wd_trade.year==1992].iloc[0][1]) - cn_1992 - us_1992 - jp_1992\n\ncn_2016 = int(cn_trade[cn_trade.year==2016].iloc[0][1])\nus_2016 = int(us_trade[us_trade.year==2016].iloc[0][1])\njp_2016 = int(jp_trade[jp_trade.year==2016].iloc[0][1])\not_2016 = int(wd_trade[wd_trade.year==2016].iloc[0][1]) - cn_2016 - us_2016 - jp_2016\n\nlabels = ['China','USA','Japan','Others']\ncolors = ['#f18285', '#86e48f', '#e8a2d8', '#fff76e']\n\n#####\ntrace = go.Pie(labels=labels, values=[cn_1992, us_1992, jp_1992, ot_1992],\n               marker=dict(colors=colors,  line=dict(color='#000', width=2)) )\nlayout = go.Layout(\n    title='1992 Import & Export Trade in USD',\n)\nfig = go.Figure(data=[trace], layout=layout)\niplot(fig, filename='basic_pie_chart')\n\n######\ntrace1 = go.Pie(labels=labels, values=[cn_2016, us_2016, jp_2016, ot_2016],\n               marker=dict(colors=colors,  line=dict(color='#000', width=2)) )\nlayout1 = go.Layout(\n    title='2016 Import & Export Trade in USD',\n)\n\nfig1 = go.Figure(data=[trace1], layout=layout1)\niplot(fig1, filename='basic_pie_chart1')\n","4a6ce4d1":"_\u4e2d\u56fd\u5728\u4e16\u754c\u8fdb\u51fa\u53e3\u8d38\u6613\u989d\u7684\u6bd4\u91cd\u9010\u5e74\u589e\u52a0\uff0c\u7279\u522b\u662f2000\u5e74\u4ee5\u540e\u3002\u6211\u89c9\u5f97\u8fd9\u4e0e2001\u5e74\u4e2d\u56fd\u52a0\u5165WTO\u6709\u7740\u5bc6\u5207\u7684\u5173\u7cfb\uff0c\u8ba9\u6211\u4eec\u518d\u6765\u770b\u770b\u4e2d\u56fd\u4e0e\u4e16\u754c\u7684\u8d38\u6613\u91cd\u91cf\u6bd4\u8f83\u3002_","aa67c349":"_\u7531\u56fe\u53ef\u89c1\uff0c\u4e2d\u56fd\u7684\u73a9\u5177\u4e00\u76f4\u662f\u51fa\u53e3\u8d38\u6613\u989d\u7684\u5de8\u5934\uff0c\u5e76\u4fdd\u6301\u6301\u7eed\u589e\u957f\u3002\u7535\u706f\u6ce1\u7684\u51fa\u53e3\u66b4\u589e\u4ee5\u53ca\u7389\u7c73\u7b49\u519c\u4f5c\u7269\u51fa\u53e3\u7684\u4e0b\u8dcc\u518d\u4e00\u6b21\u5370\u8bc1\u4e86\u4e2d\u56fd\u4ece\u4f20\u7edf\u519c\u4e1a\u8f6c\u578b\u6210\u73b0\u4ee3\u5de5\u4e1a\u3002_","b82191d2":"### 2.3 China Export 1992 vs 2016","17002b15":"## 2. Trade Report in China\n> \u4e2d\u56fd\u7684\u98de\u901f\u5d1b\u8d77 \u572821\u4e16\u7eaa\u582a\u79f0\u5947\u8ff9\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5c31\u6839\u636e\u8fdb\u51fa\u53e3\u8d38\u6613\u6570\u636e\u8fdb\u884c\u6df1\u5165\u5206\u6790\u6765\u4e00\u63a2\u7a76\u7adf\uff01","c1f5012a":"\n### 2.1 Import and export in China","82e0cae3":"_\u8fdb\u516521\u4e16\u7eaa\u4ee5\u540e\uff0c\u4e2d\u56fd\u7684\u8fdb\u51fa\u53e3\u8d38\u6613\u5448\u73b0\u51fa\u7206\u70b8\u6027\u589e\u957f\uff0c\u5176\u4e2d\u80af\u5b9a\u4e0e2001\u4e2d\u56fd\u52a0\u5165\u4e16\u8d38\u7ec4\u7ec7\uff08WTO\uff09\u6709\u7740\u5bc6\u5207\u5173\u8054\u3002\u5c3d\u7ba1\u53d72008\u5e74\u91d1\u878d\u5371\u673a\u5f71\u54cd\uff0c\u8fdb\u51fa\u53e3\u53d7\u5230\u4e86\u4e00\u4e9b\u51b2\u51fb\uff0c\u4f46\u57282010\u5e74\u4ee5\u540e\u4fdd\u6301\u4e86\u6301\u7eed\u6027\u9ad8\u6f6e\u3002\u4ece\u56fe\u4e2d\u8fd8\u53ef\u4ee5\u770b\u51fa\uff0c\u76f8\u8f83\u4e8e\u51fa\u53e3\uff0c\u8fdb\u53e3\u7684\u6ce2\u52a8\u4f1a\u6bd4\u8f83\u5927\u3002\u90a3\u4e48\u662f\u4ec0\u4e48\u8d27\u54c1\u5206\u522b\u5728\u8fdb\u53e3\u548c\u51fa\u53e3\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u7684\u4f5c\u7528\u5462\uff1f\u8ba9\u6211\u4eec\u7ee7\u7eed\u6df1\u5165\u5206\u6790\u3002\u3002\u3002_","687b5142":"_\u7ed3\u679c\u679c\u7136\u4e0d\u51fa\u6240\u6599\uff0c\u57282000\u5e74\u4ee5\u524d\uff0c\u4e2d\u56fd\u7684\u8fdb\u51fa\u53e3\u8d38\u6613\u91cd\u91cf\u8fd8\u5341\u5206\u4e0d\u7a33\u5b9a\u3002\u4f46\u662f2000\u5e74\u4ee5\u540e\uff0c\u7279\u522b\u662f2001\u5e74\uff0c\u589e\u957f\u901f\u7387\u7a7a\u524d\u7edd\u540e\u3002\u8fd9\u4e2a\u6570\u636e\u518d\u4e00\u6b21\u70d8\u62582001\u5e74\u52a0\u5165WTO\u662f\u4e2d\u56fd\u5728\u4e16\u754c\u8fdb\u51fa\u53e3\u8d38\u6613\u4e2d\u8d77\u5230\u4e86\u8f6c\u6298\u6027\u5173\u952e\u4f5c\u7528\u3002\u6700\u540e\u8ba9\u6211\u4eec\u770b\u770b\u7f8e\u56fd\uff0c\u65e5\u672c\uff0c\u4e2d\u56fd\u4e09\u5927\u7ecf\u6d4e\u4f53\u57281992\u548c2016\u7684\u6570\u636e\u56fe_","c2961eca":"### 3.3 China in World 1992 vs 2016","b53462a7":"_\u77f3\u6cb9\u4e0e\u94c1\u77ff\u589e\u957f\u8d8b\u52bf\u4e0e\u4e2d\u56fd\u603b\u8fdb\u53e3\u8d38\u6613\u989d\u57281992 \u81f32016 \u7684\u8d8b\u52bf\u76f8\u540c\uff0c\u90fd\u5448\u73b0\u51fa\u7206\u70b8\u5f0f\u589e\u957f\u6a21\u5f0f\uff0c\u7136\u540e\u572808\u5e74\u91d1\u878d\u5371\u673a\u4ee5\u540e\u51fa\u73b0\u4e0b\u964d\uff0c\u56de\u5347\u540e\u53c8\u5728\u8fd1\u51e0\u5e74\u5448\u73b0\u4e0b\u964d\u3002\u5982\u679c\u53ea\u770b\u80a5\u6599\u8fdb\u53e3\u91d1\u989d\u53d8\u5316\uff0c\u4e0d\u96be\u53d1\u73b0\u57281995\u5e74\u4ee5\u540e\u5c31\u9aa4\u964d\u81f3\u4f4e\u6f6e\uff0c\u5e76\u4fdd\u6301\u81f3\u4eca\u3002\u4ece\u4e2d\u53ef\u4ee5\u6620\u5c04\u51fa\u4e2d\u56fd\u4ece\u519c\u4e1a\u65f6\u4ee3\u5230\u5de5\u4e1a\u65f6\u4ee3\u7684\u8f6c\u578b\u3002\u4f46\u66f4\u5927\u7684\u539f\u56e0\u5e94\u8be5\u662f\u4e2d\u56fd\u81ea\u4e3b\u751f\u4ea7\u529b\u7684\u63d0\u5347\u5bfc\u81f4\u67d0\u4e9b\u4ea7\u54c1\u7684\u8fdb\u53e3\u989d\u7684\u51cf\u5c11\u3002\u90a3\u4e48\u5c31\u8ba9\u6211\u4eec\u770b\u770b1992\u81f32016\u5e74\u4e2d\u56fd\u51fa\u53e3\u8d38\u6613\u989d\u7684\u6570\u636e\uff1f_","c1b96c69":"_\u53d1\u73b0\u4e2d\u56fd\u51fa\u53e3\u8d38\u6613\u989d\u4e2d\uff0c\u77f3\u6cb9\uff0c\u73a9\u5177\uff0c\u978b\u7c7b\u7b49\u6301\u7eed\u5360\u636e\u7740\u91cd\u5927\u4f5c\u7528\u3002\u76f8\u8f83\u4e8e1992\u5e74\u4f1a\u6709\u7164\u548c\u7389\u7c73\u8f93\u51fa\uff0c\u5982\u4eca\u6709\u66f4\u591a\u7684\u7535\u706f\u6ce1\u6216\u8005\u5851\u6599\u90e8\u4ef6\u8f93\u51fa\u3002\u6211\u4eec\u53ef\u4ee5\u7814\u7a76\u4e0b \u73a9\u5177\uff0c\u7389\u7c73\u8fd8\u6709\u7535\u706f\u768425\u5e74\u95f4\u51fa\u53e3\u72b6\u51b5._","c1ba9ea0":"# Introduction\n > \u4e2d\u56fd\u4f5c\u4e3a\u4e16\u754c\u4e0a\u6700\u5927\u53d1\u5c55\u4e2d\u56fd\u5bb6\uff0c\u5979\u7684\u5d1b\u8d77\u4e16\u754c\u6709\u76ee\u5171\u7779\u3002\u6240\u4ee5\uff0c\u4eca\u5929\u6211\u6709\u9488\u5bf9\u6027\u5730\u5bf9 \u4e2d\u56fd\u8fd125\u5e74\u6765\u7684\u8d38\u6613\u5e02\u573a\u8fdb\u884c\u6df1\u5165\u6570\u636e\u5206\u6790\uff0c\u5176\u4e2d\u6d89\u53ca\u5230\u4e2d\u56fd\u672c\u571f\u8fdb\u51fa\u53e3\u7684\u53d8\u5316\uff0c\u4ee5\u53ca\u4e2d\u56fd\u5728\u4e16\u754c\u8d38\u6613\u4e2d\u4f4e\u4f4d\u4e0e\u89d2\u8272\u7684\u53d8\u5316\u3002\n\n","bba4462f":"### 2.2 China Import 1992 vs 2016","f8d44214":"_\u5bf9\u6bd425\u5e74\u524d\uff0c\u5982\u4eca\u7684\u8fdb\u53e3\u8d38\u6613\u53d1\u751f\u4e86\u5f88\u5927\u7684\u53d8\u5316\u3002\u4ece\u6570\u76ee\u4e0a\u5bf9\u6bd4\uff0c\u8fdb\u53e3\u91cf\u63d0\u5347\u81f325\u5e74\u524d\u7684\u51e0\u5341\u500d\u4e43\u81f3\u51e0\u767e\u500d, \u6bd4\u5982\u77f3\u6cb9\u7684\u9700\u6c42\u63d0\u5347\u4e86\u6574\u6574116\u500d\u3002\u4ece\u5bf9\u8c61\u4e0a\u770b\uff0c\u867d\u7136\u77f3\u6cb9\u4e00\u76f4\u5904\u4e8e\u8fdb\u53e3\u8d38\u6613\u7684\u699c\u9996\uff0c\u4f46\u4eca\u5929\u51e0\u4e4e\u5176\u4ed6\u6240\u6709\u4e3b\u8981\u8fdb\u53e3\u90fd\u548c25\u5e74\u524d\u4e0d\u4e00\u6837\u3002\u6bd4\u5982\uff0c1992 \u5e74\u80a5\u6599\u8dc3\u5c45\u8fdb\u53e3\u8d38\u6613\u989d\u7684\u7b2c\u4e8c\uff0c\u800c\u57282016\u5e74\uff0c\u80a5\u6599\u5728\u56fe\u4e2d\u5df2\u4e0d\u89c1\u8e2a\u5f71\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u94c1\u77ff\uff0c\u9ec4\u91d1\u7b49\u4e00\u4e9b\u5176\u4ed6\u8d44\u6e90\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u770b\u4e00\u4e0b\uff0c1992\u81f32016\u5e74\u95f4\uff0c\u77f3\u6cb9\u3001\u94c1\u77ff\u3001\u80a5\u6599\u7684\u53d8\u5316\u8d8b\u52bf\uff0c\u770b\u770b\u662f\u5426\u53ef\u4ee5\u4ece\u4e2d\u7aa5\u63a2\u51fa\u4ec0\u4e48\u4fe1\u606f\uff1f._","21813c54":"##  0. Import python packages","1c16b4b3":"### 3.2 Import & Export in terms of weight","169f1a55":"## 1. Build up dataset (commodity_trade_statistics_data.csv)","c10041b6":"### 3.1 Value of the trade in USD","97afe2bf":"## 3. China VS World\n> \u4e2d\u56fd\u4ece\u519c\u4e1a\u5230\u5de5\u4e1a\u7684\u8f6c\u578b\uff0c\u4f7f\u4e2d\u56fd\u7ecf\u6d4e\u83b7\u5f97\u4e86\u5de8\u5927\u7684\u98de\u8dc3\u3002\u90a3\u4e48\u4e2d\u56fd\u5728\u4e16\u754c\u4e2d\u6709\u4ec0\u4e48\u6837\u7684\u5730\u4f4d\uff1f\u4e3a\u4ec0\u4e48\u662f\u4e16\u754c\u7b2c\u4e8c\u5927\u7ecf\u6d4e\u4f53\uff1f\u5e26\u7740\u7591\u95ee\uff0c\u6211\u4eec\u6269\u5927\u5230\u4e16\u754c\u8303\u56f4\u6765\u7814\u7a76\u4e2d\u56fd\u8fdb\u51fa\u53e3\u7684\u8d38\u6613\u6570\u636e\u3002","f46ded32":"_\u77ed\u77ed25\u5e74\uff0c\u4e2d\u56fd\u638c\u63e1\u4e16\u754c\u7b2c\u4e00\u5927\u8fdb\u51fa\u53e3\u8d38\u6613\u989d\uff0c\u4e2d\u56fd\u7ecf\u6d4e\u7684\u9ad8\u901f\u53d1\u5c55\u79bb\u4e0d\u5f00\u4e2d\u56fd\u53ca\u65f6\u5730\u5c55\u5f00\u5de5\u4e1a\u9769\u547d\uff0c\u4fc3\u8fdb\u519c\u4e1a\u5411\u5de5\u4e1a\u5316\u7684\u8f6c\u578b\uff0c\u8fd9\u4e00\u5207\u4e5f\u5fc5\u7136\u79bb\u4e0d\u5f002001\u52a0\u5165WTO\u7684\u653f\u7b56\u4e0e\u52a0\u5165\u540e\u9047\u5230\u673a\u9047\u3002\u8ba9\u6211\u4eec\u795d\u798f\u8fd9\u4e2a\u56fd\u5bb6\u8d8a\u6765\u8d8a\u597d_"}}