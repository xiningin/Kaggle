{"cell_type":{"044a7a7e":"code","d7d02f38":"code","567764d0":"code","779823db":"code","f6068284":"code","313810e1":"code","26643361":"code","8026cfa7":"code","1a12d401":"code","b5174a35":"code","4ec2dafc":"code","e73d8fae":"code","ddd22fc6":"code","8a22d74a":"markdown","4a3c45ff":"markdown","e944cac5":"markdown","45a779f8":"markdown","9c950ce9":"markdown"},"source":{"044a7a7e":"import pandas as pd\nimport sqlite3\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Read sqlite query results into a pandas DataFrame\ndef qry(q, connection = sqlite3.connect(\"..\/input\/8anu-climbing-logbook\/database.sqlite\")):\n    df = pd.read_sql_query(q, connection)\n    connection.close\n    return df","d7d02f38":"df_user = qry(\"SELECT * FROM USER\")\ndf_grade = qry(\"SELECT * FROM grade\")\ndf_method = qry(\"SELECT * FROM method\")\ndf_ascent = qry(\"SELECT * FROM ascent\")\n\ndf_user = df_user.drop(['first_name', 'last_name'], axis=1)","567764d0":"df_user.columns","779823db":"df_ascent.columns","f6068284":"df_grade.columns","313810e1":"plt.figure(figsize = (30,15))\nplt.title('Top 30 countries', fontsize=25)\ndf_user[['country']].groupby('country').size().sort_values(ascending=False).head(30).plot(kind = 'barh', fontsize=22)\nplt.show()","26643361":"df_user.drop(df_user[df_user['weight'] == 0].index, inplace=True)\ndf_user.drop(df_user[df_user['height'] == 0].index, inplace=True)\ndf_user.drop(df_user[df_user['height'] > 210].index, inplace=True)\ndf_user.drop(df_user[df_user['height'] < 150].index, inplace=True)\n\n\ndf_user['BMI'] = df_user['weight'] \/\/ (df_user['height'] * df_user['height'] \/\/ 10000)\nplt.figure(figsize = (30,15))\nplt.title('Athletes BMI', fontsize=25)\ndf_user[['BMI']].groupby('BMI').size().head(30).plot(kind = 'bar', fontsize=22)\n\nplt.show()\n#df_user[['height']].groupby('height').size().sort_values(ascending=False).head(30)","8026cfa7":"plt.figure(figsize = (30,15))\nplt.title('Athletes height, cm', fontsize=25)\ndf_user[['height']].groupby('height').size().head(50).plot(kind = 'bar', fontsize=22)\n\nplt.show()\n","1a12d401":"plt.figure(figsize = (10,5))\nplt.title('Athletes sex')\ndf_user[['sex']].groupby('sex').size().plot(kind = 'bar')\n\nplt.show()","b5174a35":"plt.figure(figsize = (30,15))\nplt.title('Routes grades, fr', fontsize=25)\ndf_ascent[['id', 'user_id', 'grade_id', 'notes', 'raw_notes', 'method_id',\n       'climb_type', 'total_score', 'date', 'year', 'last_year', 'rec_date']].set_index('grade_id').join(df_grade.set_index('id')).groupby('fra_routes').size().head(50).plot(kind = 'bar', fontsize=22)\n\nplt.show()","4ec2dafc":"df_grage_per_user = qry(\"SELECT grade.fra_routes, strftime(\\\"%Y\\\",user.birth) as years, count(user.id) as users \" + \n\"FROM user INNER JOIN ascent ON user.id = ascent.user_id \" +\n\"\t\t\t\tINNER JOIN grade ON grade.id = ascent.grade_id \" +\n\"WHERE years IS NOT NULL AND fra_routes = \\\"7a\\\" \" +\n\"GROUP BY fra_routes, years \" +\n\"ORDER BY users DESC\")","e73d8fae":"df_grage_per_user[['years','users']].head(30)","ddd22fc6":"plt.figure(figsize = (30,15))\nplt.title('Routes grades, fr', fontsize=25)\ndf_grage_per_user.head(30).plot(kind = 'bar', fontsize=10)\nplt.show()","8a22d74a":"# Routes stats","4a3c45ff":"Athlete height and BMI","e944cac5":"# Athletes stats","45a779f8":"What next:\n- progress over years\n- max ascents per athlete\n- years vs grade","9c950ce9":"# Setup and Data exploration"}}