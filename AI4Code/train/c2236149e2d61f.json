{"cell_type":{"05bb6c50":"code","9343e51a":"code","755dabe1":"code","7cbcc40b":"code","4681c697":"code","7ae5d97d":"code","6b591698":"code","550b2078":"code","863ca383":"code","2b6b3078":"code","d9bd2367":"code","61548855":"code","45284bdc":"code","0923d3d5":"code","4d86f18d":"code","5ffa1a9b":"code","5c0ed481":"code","983e1214":"code","0786f445":"code","dda77521":"code","43850a4a":"code","da0c9234":"code","096650f1":"code","6c77384d":"code","843cf7e7":"code","41018ae0":"code","8a854fde":"code","e45a95de":"code","42f73c77":"code","cf318ce2":"code","7ff6af7c":"code","d628642f":"code","d655c91d":"code","1d8b295a":"code","619458c7":"code","fbc1630f":"code","dea6da17":"code","70d39811":"code","7428af73":"code","f300492c":"code","84f42750":"code","3808e6ee":"code","e885cde9":"code","4f25e7da":"code","de23b979":"code","c8b3f6f5":"code","5e7daf15":"code","2bf57ba9":"code","1a427898":"code","e89679be":"code","aa021a5a":"code","75da2f62":"code","20c1dd7a":"code","762dd0c5":"code","49017fd4":"code","6229d311":"code","0e31e45b":"code","3df0423c":"code","e4758e83":"code","5bb132fd":"code","cced32c9":"code","d00c530f":"code","22c6723e":"code","906e3679":"code","b3ebd363":"code","c4419c98":"code","b1ef39ee":"code","d9c10a98":"code","1cfb6b12":"markdown","d53dc98d":"markdown","0002e070":"markdown","8bb995dd":"markdown","9be5b918":"markdown","b9320953":"markdown","cad23ba7":"markdown","55735a1a":"markdown","04579cfd":"markdown","28531301":"markdown","8cb2db57":"markdown","50fb0fe5":"markdown","c14123cd":"markdown","b462db67":"markdown","74b51742":"markdown","f604dfe7":"markdown","258acbb9":"markdown","8f2ae3a9":"markdown","f55c36b4":"markdown","6ed38099":"markdown","2a6fae3d":"markdown","6bcc4062":"markdown","c246011a":"markdown","9133b2a5":"markdown","471781d6":"markdown","db4f2ce4":"markdown","498901b3":"markdown","6d3c10b3":"markdown","cfe9b5dc":"markdown","86e25dea":"markdown","36d4da13":"markdown","7b5b15d6":"markdown","9a24178d":"markdown","e4635f3f":"markdown","26aba689":"markdown","69cf691a":"markdown","56927a31":"markdown","3ed9822e":"markdown","3db63ce4":"markdown","5eed1b19":"markdown","a0701bd3":"markdown","13917bdf":"markdown","d9b6873b":"markdown","4c1d1735":"markdown","d508b071":"markdown","8cd081f2":"markdown","f228c554":"markdown","4683aed5":"markdown","30eaca46":"markdown","7c930c82":"markdown","04ef4a3a":"markdown","63eab793":"markdown","00f3ba5a":"markdown","bc76739a":"markdown","d79b421f":"markdown","b26aaab1":"markdown","1fa83515":"markdown"},"source":{"05bb6c50":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np \nimport pandas as pd\nimport sqlite3\nimport matplotlib.pyplot as plt\n\nimport os\nprint(os.listdir(\"..\/input\"))\npath = \"..\/input\/\"\nprint(os.listdir(\"..\/input\/belgium-2013-2014\"))","9343e51a":"# path to the database\ndatabase = path + 'soccer\/database.sqlite'\n\n# connection to database\nconnection = sqlite3.connect(database)\n\n# read sql file\nquery = open('..\/input\/belgium-2013-2014\/matches.sql', 'r')\ndf_matches = pd.read_sql_query(query.read(), connection)\n\n# save the the data into a csv file\ndf_matches.to_csv('matches.csv', index=False)\n\ndf_matches.head()","755dabe1":"# number of samples and columns\ndf_matches.shape","7cbcc40b":"# check for duplicates\nsum(df_matches.duplicated())","4681c697":"# check the datatypes\ndf_matches.info()","7ae5d97d":"# check for missing values\ndf_matches.isnull().sum()","6b591698":"# non-null unique values\ndf_matches.nunique()","550b2078":"# describe the dataset\ndf_matches.describe()","863ca383":"# games per country, per match_season, per team\ngame_played = df_matches.groupby(['country', 'match_season', 'team']).sum().game_played\ngame_played","2b6b3078":"# view the teams where the number of games they played is higher than 75%\ngame_played[game_played>38]","d9bd2367":"# see the data with incorrect values\ndf_matches.query('(team == \"Polonia Bytom\" and (match_season == \"2010\/2011\" or match_season == \"2008\/2009\")) or (team == \"Widzew \u0141\u00f3d\u017a\" and match_season == \"2011\/2012\")')","61548855":"# change the number of game played\ndf_matches.loc[949, 'game_played'] = 30\ndf_matches.loc[964, 'game_played'] = 30\ndf_matches.loc[996, 'game_played'] = 30\n\n# change the number of points\ndf_matches.loc[949, 'points'] = 39\ndf_matches.loc[964, 'points'] = 27\ndf_matches.loc[996, 'points'] = 35\n\n# change the number of games they won\ndf_matches.loc[949, 'won'] = 9\ndf_matches.loc[964, 'won'] = 6\ndf_matches.loc[996, 'won'] = 10\n\n# change the number of draw games \ndf_matches.loc[949, 'draw'] = 12\ndf_matches.loc[964, 'draw'] = 9\ndf_matches.loc[996, 'draw'] = 5\n\n# change the number of games they lost\ndf_matches.loc[949, 'lost'] = 9\ndf_matches.loc[964, 'lost'] = 15\ndf_matches.loc[996, 'lost'] = 15\n\n# change the number of goals scored \ndf_matches.loc[949, 'goals_scored'] = 25\ndf_matches.loc[964, 'goals_scored'] = 29\ndf_matches.loc[996, 'goals_scored'] = 30\n\n# change the number of goals conceded\ndf_matches.loc[949, 'goals_conceded'] = 26\ndf_matches.loc[964, 'goals_conceded'] = 45\ndf_matches.loc[996, 'goals_conceded'] = 46\n\n# change the number of goals difference\ndf_matches.loc[949, 'goals_difference'] = -1\ndf_matches.loc[964, 'goals_difference'] = -16\ndf_matches.loc[996, 'goals_difference'] = -16\n\n# chack again to see the right values\ndf_matches.query('(team == \"Polonia Bytom\" and (match_season == \"2010\/2011\" or match_season == \"2008\/2009\")) or (team == \"Widzew \u0141\u00f3d\u017a\" and match_season == \"2011\/2012\")')","45284bdc":"# save the changes datasets to csv\ndf_matches.to_csv('matches.csv', index=False)\n\n# load dataset\ndf_matches = pd.read_csv('matches.csv')\ndf_matches.head()","0923d3d5":"# games per country, per match_season, per team\ngame_played = df_matches.groupby(['country', 'match_season', 'team']).sum().game_played\n# check if  the number of games played is consistent\ngame_played[game_played>38]","4d86f18d":"pd.set_option('display.max_rows', 5400)\nmatch_teams = df_matches.groupby(['country', 'match_season'], as_index=False).count().loc[:,['country', 'match_season', 'team']]\nmatch_teams.head()","5ffa1a9b":"# check if the number of teams in match season is consistent\nmatch_teams[match_teams['team'] < 10]","5c0ed481":"# drop the rows with Belgium data for 2013\/2014 match_season\ndf_matches.drop(df_matches.query('country == \"Belgium\" and match_season == \"2013\/2014\"').index, inplace=True)\ndf_matches.shape","983e1214":"df_matches.head(1)","0786f445":"# # upload correct dataset for belgium\ndf_belgium_2013_2014 = pd.read_csv('..\/input\/belgium-2013-2014\/belgium_2013_2014.csv')\ndf_belgium_2013_2014.head()\n#print(os.listdir(\"..\/input\"))\n#path = \"..\/input\/\"\n#print(os.listdir(\"..\/input\/belgium-2013-2014\"))\n","dda77521":"# combine the two dataframes \ndf = pd.concat([df_matches, df_belgium_2013_2014])\n\n# save the datasets to csv\ndf.to_csv('matches.csv', index=False)\ndf = pd.read_csv('matches.csv')\n\n# view the first rows of the dataset\ndf.head()","43850a4a":"# cheack if the data is appended\nmatch_teams = df.groupby(['country', 'match_season'], as_index=False).count().loc[:,['country', 'match_season', 'team']]\nmatch_teams[match_teams['team'] < 10].count()","da0c9234":"df.shape","096650f1":"df.describe()","6c77384d":"# how many points each team got per country, per season match\ndf.groupby(['country', 'league', 'match_season']).count().head()","843cf7e7":"pd.plotting.scatter_matrix(df, figsize=(15,15));","41018ae0":"# plot the points histogram\n\nplt.hist(df['points'])\nplt.title('Distribution of Points')\nplt.xlabel('Points')\nplt.ylabel('Frequency')\n\nplt.show;","8a854fde":"# calculate the correlation coefficient\ncorr = np.round(df['points'].corr(df['won']), decimals=2)\n\n# plot the scatter\nplt.scatter(df['points'], df['won'], label=\"Correlation Coefficient {}\".format(corr));\nplt.title('Scatterplot of Won Matches and Points')\nplt.xlabel('Points')\nplt.ylabel('Won')\n\nplt.legend()\nplt.legend(loc='upper left', bbox_to_anchor=(1, 0.5))\nplt.show();","e45a95de":"df.plot(x='points', y='goals_scored', kind='scatter');\n\n# calculate the correlation coefficient\ncorr = np.round(df['points'].corr(df['goals_scored']), decimals=2)\n\n# plot the scatter\nplt.scatter(df['points'], df['goals_scored'], label=\"Correlation Coefficient {}\".format(corr));\nplt.title('Scatterplot of Gained Points and Scored Goals')\nplt.xlabel('Points')\nplt.ylabel('Scored Goals')\nplt.legend()\nplt.legend(loc='upper left', bbox_to_anchor=(1, 0.5))\nplt.show();","42f73c77":"# calculate the correlation coefficient\ncorr = np.round(df['points'].corr(df['lost']), decimals=2)\n\n# plot the scatter\nplt.scatter(df['points'], df['lost'], label=\"Correlation Coefficient {}\".format(corr));\nplt.title('Scatterplot of Gained Points and Lost Matches')\nplt.xlabel('Points')\nplt.ylabel('Lost Matches')\nplt.legend()\nplt.legend(loc='upper left', bbox_to_anchor=(1, 0.5))\nplt.show();","cf318ce2":"# calculate the correlation coefficient\ncorr = np.round(df['points'].corr(df['goals_difference']), decimals=2)\n\n# plot the scatter\nplt.scatter(df['points'], df['goals_difference'], label=\"Correlation Coefficient {}\".format(corr));\nplt.title('Scatterplot of Gained Points and Goals Difference')\nplt.xlabel('Points')\nplt.ylabel('Goals Difference')\nplt.legend()\nplt.legend(loc='upper left', bbox_to_anchor=(1, 0.5))\nplt.show();","7ff6af7c":"# plot the won matches histogram\nplt.hist(df['won'])\nplt.title('Distribution of Won Matches')\nplt.xlabel('Won')\nplt.ylabel('Frequency')\n\nplt.show;","d628642f":"# calculate the correlation coefficient\ncorr = np.round(df['won'].corr(df['goals_scored']), decimals=2)\n\n# plot the scatter\nplt.scatter(df['won'], df['goals_scored'], label=\"Correlation Coefficient {}\".format(corr));\nplt.title('Scatterplot of Won Matches and Scored Goals')\nplt.xlabel('Won')\nplt.ylabel('Scored Goals')\nplt.legend()\nplt.legend(loc='upper left', bbox_to_anchor=(1, 0.5))\nplt.show();","d655c91d":"# calculate the correlation coefficient\ncorr = np.round(df['won'].corr(df['goals_conceded']), decimals=2)\n\n# plot the scatter\nplt.scatter(df['won'], df['goals_conceded'], label=\"Correlation Coefficient {}\".format(corr));\nplt.title('Scatterplot of Won Matches and Goals Conceded')\nplt.xlabel('Won')\nplt.ylabel('Goals Conceded')\nplt.legend()\nplt.legend(loc='upper left', bbox_to_anchor=(1, 0.5))\nplt.show();","1d8b295a":"# calculate the correlation coefficient\ncorr = np.round(df['won'].corr(df['goals_difference']), decimals=2)\n\n# plot the scatter\nplt.scatter(df['won'], df['goals_difference'], label=\"Correlation Coefficient {}\".format(corr));\nplt.title('Scatterplot of Won Matches and Goals Difference')\nplt.xlabel('Won')\nplt.ylabel('Goals Difference')\nplt.legend()\nplt.legend(loc='upper left', bbox_to_anchor=(1, 0.5))\nplt.show();","619458c7":"# plot the draw matches histogram\nplt.hist(df['draw'])\nplt.title('Distribution of Draw Matches')\nplt.xlabel('Draw')\nplt.ylabel('Frequency')\n\nplt.show;","fbc1630f":"# plot the draw matches histogram\nplt.hist(df['lost'])\nplt.title('Distribution of Lost Matches')\nplt.xlabel('Lost')\nplt.ylabel('Frequency')\n\nplt.show;","dea6da17":"# calculate the correlation coefficient\ncorr = np.round(df['lost'].corr(df['goals_difference']), decimals=2)\n\n# plot the scatter\nplt.scatter(df['lost'], df['goals_difference'], label=\"Correlation Coefficient {}\".format(corr));\nplt.title('Scatterplot of Lost Matches and Goals Difference')\nplt.xlabel('Lost')\nplt.ylabel('Goals Difference')\nplt.legend()\nplt.legend(loc='upper left', bbox_to_anchor=(1, 0.5))\nplt.show();","70d39811":"# plot the goals scored histogram\nplt.hist(df['goals_scored'])\nplt.title('Distribution of Goals Scored')\nplt.xlabel('Goals Scored')\nplt.ylabel('Frequency')\n\nplt.show;","7428af73":"# plot the goals scored histogram\nplt.hist(df['goals_conceded'])\nplt.title('Distribution of Goals Conceded')\nplt.xlabel('Goals Conceded')\nplt.ylabel('Frequency')\n\nplt.show;","f300492c":"# plot the goals scored histogram\nplt.hist(df['goals_difference'])\nplt.title('Distribution of Goals Difference')\nplt.xlabel('Goals Difference')\nplt.ylabel('Frequency')\n\nplt.show;","84f42750":"# view the first row of the dataset\ndf.head(1)","3808e6ee":"countries = df.country.unique()\nleagues = df.league.unique()\nmatch_seasons = df.match_season.unique()\ncountries, leagues, match_seasons","e885cde9":"df.groupby(['country', 'league', 'match_season'], as_index=False).max().head()","4f25e7da":"# group the data by the number of points goals_difference  \ndf_points = df.groupby(['country', 'league', 'match_season', 'team'], as_index=False)['points', 'goals_difference'].sum()\n# df belgium 2008\/2009\ndf_belgium = df_points[df_points['country'] == 'Belgium']","de23b979":"def filter_country(country):\n    df_country = df_points[df_points['country'] == country]\n    # sorting the data\n    df_country = df_country.sort_values(by=['match_season', 'points', 'goals_difference'], ascending=False)\n    return df_country","c8b3f6f5":"# Belgium filtered data\ndf_belgium = filter_country('Belgium')\n\n# save the datasets to csv\ndf_belgium.to_csv('df_belgium.csv', index=False)\n\n# load dataset \ndf_belgium = pd.read_csv('df_belgium.csv')\n\ndf_belgium.head()","5e7daf15":"def country_details(df_country):\n    country = df_country['country'].unique()\n    league = df_country['league'].unique()\n    match_season = df_country['match_season'].unique()\n    return country, league, match_season","2bf57ba9":"country, league, match_season = country_details(df_belgium)\ncountry, league, match_season","1a427898":"def filter_country_plot(df_country, season):\n    country, league, match_season = country_details(df_country)\n    \n    # initialize values \n    team = []\n    points = []\n    goals_df = []\n    \n    for index, row in df_country.iterrows():\n            if row['match_season'] == season:\n                # append values\n                team.append(row['team'])\n                points.append(row['points'])\n                goals_df.append( row['goals_difference'])\n    \n    # convert list to NumPy array            \n    teams = np.array(team)\n    points = np.array(points)\n    goals_df = np.array(goals_df)   \n\n    # get the top 5 values\n    top_5_teams = teams[:5]\n    top_5_points = points[:5]\n    top_5_goals_df = goals_df[:5]\n\n    # get the last 3 values\n    last_3_position = len(teams) - 3\n    last_3_teams = teams[last_3_position :]\n    last_3_points = points[last_3_position :]\n    last_3_goals_df = goals_df[last_3_position :]\n    \n    return top_5_teams, top_5_points, top_5_goals_df, last_3_teams, last_3_points, last_3_goals_df","e89679be":"top_5_teams, top_5_points, top_5_goals_df, last_3_teams, last_3_points, last_3_goals_df = filter_country_plot(df_belgium, match_season[0])\ntop_5_teams, top_5_points, top_5_goals_df, last_3_teams, last_3_points, last_3_goals_df","aa021a5a":"def plot_barh(teams, points, goals_df, season):\n    width = 0.35\n    ind = np.arange(len(teams))\n    locations = ind + width \/ 2 # ytick locations\n    labels = teams # ytick labels\n    \n    if len(teams) == 5:\n        plt_title = 'Top Five Winners'\n    else:\n        plt_title = 'Last Three Teams'\n    \n    heights_points = points\n    heights_gd = goals_df\n    winners_points = plt.barh(ind, heights_points, width, alpha=.7, label='Points')\n    winner_gd = plt.barh(ind + width, heights_gd, width, alpha=.7, label='Goals Difference')\n\n    # title and labels\n    plt.title('{} in {}, {} Match Season, {} by Points and Goals Difference'.format(plt_title, league[0], season, country[0]))\n    plt.xlabel('Points\/Goal differences')\n    plt.ylabel('Team')\n    plt.yticks(locations, labels)\n\n    #legend\n    plt.legend()\n\n    plt.show();","75da2f62":"plot_barh(top_5_teams, top_5_points, top_5_goals_df, match_season[0])","20c1dd7a":"plot_barh(last_3_teams, last_3_points, last_3_goals_df, match_season[0])","762dd0c5":"for season in match_season:\n    top_5_teams, top_5_points, top_5_goals_df, last_3_teams, last_3_points, last_3_goals_df = filter_country_plot(df_belgium, season)\n    plot_barh(top_5_teams, top_5_points, top_5_goals_df, season)\n    plot_barh(last_3_teams, last_3_points, last_3_goals_df, season)","49017fd4":"# Italy filtered data\ndf_italy = filter_country('Italy')\n\n# save the datasets to csv\ndf_italy.to_csv('df_italy.csv', index=False)\n\n# load dataset \ndf_italy = pd.read_csv('df_italy.csv')\n\ndf_italy.head()","6229d311":"country, league, match_season = country_details(df_italy)\ncountry, league, match_season","0e31e45b":"top_5_teams, top_5_points, top_5_goals_df, last_3_teams, last_3_points, last_3_goals_df = filter_country_plot(df_italy, match_season[0])","3df0423c":"plot_barh(top_5_teams, top_5_points, top_5_goals_df, match_season[0])","e4758e83":"plot_barh(last_3_teams, last_3_points, last_3_goals_df, match_season[0])","5bb132fd":"for season in match_season:\n    top_5_teams, top_5_points, top_5_goals_df, last_3_teams, last_3_points, last_3_goals_df = filter_country_plot(df_italy, season)\n    plot_barh(top_5_teams, top_5_points, top_5_goals_df, season)\n    plot_barh(last_3_teams, last_3_points, last_3_goals_df, season)","cced32c9":"df_italy.head()","d00c530f":"def top_5_teams(df_country):\n    top_5_all= []\n    for season in match_season:\n        top_5_teams, top_5_points, top_5_goals_df, last_3_teams, last_3_points, last_3_goals_df = filter_country_plot(df_country, season)\n        top_5_all.append(top_5_teams)\n    top_5_all = np.unique(top_5_all)\n    return top_5_all\n\ntop_5 = top_5_teams(df_italy)\ntop_5","22c6723e":"def points_plot_chart(df_country, team):\n    \n    # Filter database by first team\n    df_top_5 = df_country[df_country['team'] == team]\n    df_top_5 = df_top_5.sort_values(by=['match_season'], ascending=True)\n    \n    # Get Only `match_season` and `team`\n    df_top_5.loc[:, ['match_season', 'points']]\n    \n    # plot the data\n    labels = df_top_5.loc[:, 'match_season']\n    heights = df_top_5.loc[:, 'points']\n    plt.plot(labels, heights)\n\n    # titles\n    plt.ylabel(\"Total Points\")\n    plt.xlabel(\"Match Season (Years)\")\n    plt.xticks(labels, rotation=30)\n    plt.title('{} Points by Match Season'.format(team))\n\n    plt.show()\n    \n#points_plot_chart(df_italy, 'Fiorentina')","906e3679":"for team in top_5:\n    points_plot_chart(df_italy, team)","b3ebd363":"df_top_5 = df_italy[df_italy['team'].isin(top_5)]","c4419c98":"top_5","b1ef39ee":"df_top_5 = df_top_5.groupby(['match_season', 'team'], as_index=False).sum().sort_values(by=['team', 'match_season'])\ndf_top_5","d9c10a98":"labels = df_top_5[df_top_5['team'] == 'Fiorentina'].loc[:, 'match_season']\nplt.plot(labels, df_top_5[df_top_5['team'] == 'Fiorentina'].loc[:, 'points'], label='Fiorentina')\nplt.plot(labels, df_top_5[df_top_5['team'] == 'Genoa'].loc[:, 'points'], label='Genoa')\nplt.plot(labels, df_top_5[df_top_5['team'] == 'Inter'].loc[:, 'points'], label='Inter')\nplt.plot(labels, df_top_5[df_top_5['team'] == 'Juventus'].loc[:, 'points'], label='Juventus')\nplt.plot(labels, df_top_5[df_top_5['team'] == 'Lazio'].loc[:, 'points'], label='Lazio')\nplt.plot(labels, df_top_5[df_top_5['team'] == 'Milan'].loc[:, 'points'], label='Milan')\nplt.plot(labels, df_top_5[df_top_5['team'] == 'Napoli'].loc[:, 'points'], label='Napoli')\nplt.plot(df_top_5[df_top_5['team'] == 'Palermo'].loc[:, 'match_season'], df_top_5[df_top_5['team'] == 'Palermo'].loc[:, 'points'], label='Palermo')\nplt.plot(labels, df_top_5[df_top_5['team'] == 'Roma'].loc[:, 'points'], label='Roma')\nplt.plot(df_top_5[df_top_5['team'] == 'Sampdoria'].loc[:, 'match_season'], df_top_5[df_top_5['team'] == 'Sampdoria'].loc[:, 'points'], label='Sampdoria')\nplt.plot(labels, df_top_5[df_top_5['team'] == 'Udinese'].loc[:, 'points'], label='Udinese')\nplt.xticks(labels, rotation=30)\n\n#plt.figure(figsize=(8,3))\n#plt.get_current_fig_manager().resize(400, 200)\nplt.title('Points per Match Season by Ever Ranked Top Five Teams in Italy Serie A')\nplt.legend(loc='center left', bbox_to_anchor=(1, 0.5))\nplt.show();","1cfb6b12":"### #1 Get the First 5 teams over the seasons to plot the line\nFunction description: `top_5_teams` function takes as argument the filtered data by country like df_italy. It returns the 5 top unique teams over the match seasons.","d53dc98d":"<a id='eda'><\/a>\n## Exploratory Data Analysis\n\n### Which are the top five teams or top performers over the years, per country?\nLet\u2019s visualize the information in our dataset by finding correlation between our variables and see how the data is distributed.","0002e070":"With a correlation coefficient of -0.6, this scatter plot shows a moderate, negative, linear relationship between how many goals a team received and how many matches a team won.","8bb995dd":"\n### #1. Gather the Data","9be5b918":"\n### #3 Cleaning the Data\n- Check if the number of games each team played is consistent for each match.\n- I can see from the describe table that there is a maximum of 60 games played and the third Quartile value is 38 so I am going to look for higher values.","b9320953":"### #1 Filter the data by country\nFunction description:  `filter_country` function will take as an argument a country from the data set. It first uses the df_points dataframe which is the original data frame grouped by country, league, match_season, team with the sum for points, goals_difference. It returns a filtered dataframe by country","cad23ba7":"### #4 Plot Five Top Teams and Last Three Teams","55735a1a":"### #4 Plot Five Top Teams and Last Three Teams\nFunction description: `plot_barh` takes four arguments as input: top 5 teams, top 5 points, top 5 goals differences and the year for the match season. It plots a horizontal bar chart for the match season for the top five teams by points and goal difference. I have also plotted the last three teams per season.","04579cfd":"###  Group the Dataset\n    - by ['country', 'league', 'match_season', 'team'] for total ['points', 'goals_difference']","28531301":"### #3 Plot the line charts\n    - not all data for Palermo team: they didn't play in 2013\/2014\n    - not all data for Sampdoria team: they didn't play in 2011\/2012","8cb2db57":"<a id='intro'><\/a>\n## Introduction\n\nIn this project I will be analyzing data associated with matches and teams for European Professional Football from 2008 to 2016. In particular, I am interested in finding the top five and last three teams per country and share their performance. The columns I have as they are from the database are:\n    - name of the country: `country`;\n    - name of the league: `league`;\n    - years of the season: `match_season`.\nFrom the database I had the information about each  match from league and the number of goals each team gave.  \nI calculated for each team per match season: \n    - the total number of game played: `game_played`;\n    - total number of points: `points`;\n    - how many games they won: `won`;\n    - how many games ended up with a tie: `draw`;\n    - how many games they lost: `lost`;\n    - the number of goals they scored: `goals_scored`;\n    - the number of goals they received: `goals_conceded`;\n    - and the difference between the number of goals they scored and they received: `goals difference`.  \n    \n## Questions\n\nFist, I have to mention that I also visualised data for the last three teams for later analysis. But for now I will deal only with top five performers. Second, I used case studies for each part: Belgium and Italy.\n\n**Q1:** I have a main question to answer: \u201cWhat teams improved the most over the time period?\u201d. I am interested in the top five teams for each match season for each country. \nIn order to answer this main question I have to first find the top five teams per country per match season and visualize in a bar chart the number of points and goals difference for each team. For that reason, I have to answer another question.\n\n**Q2:** Which are the top five teams or top performers over the years, per country?\n\nIn order to answer this question I followed the next steps:\n    1. I filtered the data by country.\n    2. I got the data for top five teams.\n    3. I visualized the data with a bar chart for both number of points and goal difference.\n\nIn order to answer my main question I used all the top five teams over and plotted their number of points over the years per country. I followed these steps:\n    1. I got the the top five teams per country;\n    2. I got the data for the top five teams per country: number of points and match season;\n    3. I plotted the line for each team per country;\n    4. To be able to compare how they performed I plotted a line chart with all top five teams. \n\n**Resources:**\n1. Dataset: [here](https:\/\/www.kaggle.com\/hugomathien\/soccer)\n2. Stats Tables: [here](https:\/\/www.fctables.com\/belgium\/jupiler-league\/2008_2009\/)\n3. Premier League Tables: [here](https:\/\/www.premierleague.com\/tables?co=1&se=79&ha=-1)","50fb0fe5":"### #2 Assesing Data\nGeneral properties of the dataset:\n\n- number of samples in dataset: \n    - 1478\n- number of columns in dataset: \n    - 12\n- duplicate rows in each dataset: \n    - 0\n- datatypes of columns: \n    - all the numeric data is integer and the rest is string: \n- features with missing values: \n    - no missing values\n- number of non-null unique values for features in each dataset:\n    - 11 countries              \n    - 11 leagues               \n    - 8 match seasons\n    - 296 teams\n- describe the dataset:\n    - the count, mean, standard deviation and the 5 number summary for each column.","c14123cd":"### #3 Get the data for plotting top 5 teams and last 3 teams\nFunction decription: `filter_country_plot` function takes two arguments as input: the filtered data frame and the season years. It returns a numPy array for each: top 5 teams, top 5 points, top 5 goals differences, last 3 teams, last 3 points, last 3 goals_differences;","b462db67":"### Make the changes in the dataset","74b51742":"\nThese horizontal bar charts shows the first five teams and the last three teams for all the match seasons for Belgium Jupiler League by the total number of points and goal difference. I added goal difference because if two teams have the same number of points, then the one with higher goal difference takes the higher ranking.","f604dfe7":"### #3 Get the data for plotting top 5 teams and last 3 teams","258acbb9":"### Upload dataset for Belgium Jupiler League 2013\/2014\n    - The data will be appended to the Data Frame","8f2ae3a9":"\n## Compare top five teams performance over the years\nIn order to compare the teams performance over the years I plotted a line chart for all the top five team total points over each match season.","f55c36b4":"\nThis line chart shows the evolution from ever ranked top five teams from 2008\/2009 to 2015\/2016 for Italy Serie A League. By visualizing all the teams in a single line chart we can better compare the performance and analyze trends. For example, we can see that from our samples of ever ranked top five teams, the highest number of points was gained by Juventus in 2013\/2014 season, 102. On the other hand, we can see that the lowest performance from a ever ranked top five team from 2008 to 2016 is recorded by Palermo in the 2012\/2013 match with 32 points. Actually, in 2012\/2013 Palermo ranked 19 from 20. On the other hand, if we look at the individual \u201cPalermo Points by Match Season\u201d line chart, we can see that in 2009\/2010 match season, Palermo got the highest number of points, 65, ranking on 5th position.","6ed38099":"# Project: Soccer Database Analysis\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>","2a6fae3d":"### #2 Get the name for the country, league, match season of the data filtered by country\nFunction description: `country_details` takes as argument the filtered dataframe and returns the name for country, league, match_season","6bcc4062":"### Assesing the shape of the new data frame\n    - number of samples: 1494 \n    - number of columns: 12\n    - describe the dataset:\n        - the count, mean, standard deviation and the 5 number summary for each column.","c246011a":"### Combine the two Dataframes","9133b2a5":"### #5 Plot for Italy For Each Match Season","471781d6":"### Case study Belgium","db4f2ce4":"With a correlation coefficient of 0.91, this scatter plot shows a strong, positive, linear relationship between goals difference and how many matches a team won. This means that if the goals difference is bigger, it wins more matches.","498901b3":"This horizontal bar chart shows the first five teams for the 2015\/2016 match season for Belgium Jupiler League by the total number of points and goals difference. I added goals difference because if two teams have the same number of points, then the one with higher goal difference takes the higher ranking. We can see that number one in 2015\/2016 match is Club Brugge KV with 64 points.","6d3c10b3":"## Limitations\nThe database contains multiple tables: Country, League, Match, Player, Player_Attributes, Team, Team_Attributes. This analysis focuses only on Country, League and Match tables. In order to gain more insight from the data, is required a more in depth analysis for the other tables too. Looking at the dataset, there are null values in the Team, Player_Attributes and Team_Attributes tables. The author of the dataset states that there are missing players and missing player attributes because he was not able to source the data from FIFA.\n\nFor this particular analysis, I spotted missing and incorrect data. First, I found inconsistent data for Poland for Match season 2008\/2009, team Polonia Bytom, match season 2010\/2011, team Polonia Bytom and match season 2011\/2012, team Widzew \u0141\u00f3d\u017a 60. Second, for the Belgium Match Season 2013\/2014 there wasn\u2019t enough data. Therefore, there is a chance to be more inconsistent data or maybe some missing matches.\n\nAnother possible reason of concern is the size of the dataset. A more exhaustive dataset to include international games, national cups, Champion's League and Europa League information is needed to make accurate predictions.","cfe9b5dc":"With a correlation coefficient of 0.99, this scatter plot shows a strong, positive, linear relationship between won matches and how many points a team got. This means that if a team wins more games, it receives more points.","86e25dea":"### #5 Plot for Belgium For Each Match Season","36d4da13":"With a correlation coefficient of 0.87, this scatter plot shows a strong, positive, linear relationship between how many goals a team scored and how many matches a team won. This means that if a team scores many goals, it wins more matches.","7b5b15d6":"<a id='conclusions'><\/a>\n## Conclusions\nFrom the above line chart we can see that the team with the maximum points is Juventus, for the 2013\/2014 match season with 102 points. From the seventh position in 2009\/2010 and 2010\/2011 it went straight to the first position in 2011\/2012 with 84 points. Juventus maintained its position in 2012\/2013 with 87 points. In the next season, 2013\/2014, the team gained the maximum number of points, 102. It returned to 87 points for 2014\/2015 season and in the 2015\/2016 match season Juventus gained 91 points, keeping the first position.","9a24178d":"### #2 Get the name for the country, league, match season of the data filtered by country","e4635f3f":"\nWith a correlation coefficient of -0.89, this scatter plot shows a strong, negative, linear relationship between how many matches a team lost and the goals difference. This means that if a team losses many games, the goals difference is smaller.","26aba689":"This histogram shows the distribution of won matches from all the dataset. We can see the distribution is right skewed with data ranging from 3 to 33.","69cf691a":"\nThis histogram show the distribution of goals difference from all the dataset. We can see that data is ranging from -61 to 89.","56927a31":"<a id='wrangling'><\/a>\n## Data Wrangling\n\nGetting the data I need in three steps:\n1. Gather \n2. Assess\n3. Cleaning","3ed9822e":"This histogram shows the distribution of draw matches from all the dataset. We can see the distribution is normally distributed with data ranging from 0 to 19.","3db63ce4":"This histogram shows the distribution of lost matches from all the dataset. We can see the data is ranging from 0 to 29.","5eed1b19":"With a correlation coefficient of 0.92, this scatter plot shows a strong, positive, linear relationship between the difference between goals scored and goals conceded (goals_difference) and how many points a team got. This means that if the difference between goals scored and goals received is bigger, than the team receives more points.","a0701bd3":"This horizontal bar chart shows the first five teams for the 2015\/2016 match season for Italy Serie A by the total number of points and goals difference. We can see that number one in 2015\/2016 match is Juventus with 91 points.","13917bdf":"## What teams improved the most over the time period?\n## Case Study: Italy\nPlot Teams Points Over Match Season","d9b6873b":"With a correlation coefficient of -0.8, this scatter plot shows a strong, negative, linear relationship between how many matches a team lost and how many points a team got. This means that if a team losses many games, it receives fewer points.","4c1d1735":"\n### #2 Get the Data for Plotting\nFunction description: points_plot_chart function takes two arguments as inputs: the filtered datatrame by country an the name of the team. It returns a line chart for the total points the team scored each match season.","d508b071":"### Connecting to the Database and Loading the Data","8cd081f2":"## Follow the same steps for Italy\n### #1 Filter the data by country","f228c554":"\nThis histogram shows the distribution of points from all the dataset. We can see the distribution is right skewed with data ranging from 14 to 102. The bin with the highest frequency ranges from 40 to 50 points.","4683aed5":"### Inconsistent data for the following Poland seasons, teams:\u00b6\n    - Match season 2008\/2009, team Polonia Bytom 60\n    - Match season 2010\/2011, team Polonia Bytom 60\n    - Match season 2011\/2012, team Widzew \u0141\u00f3d\u017a 60","30eaca46":"### Check if the changes are correct","7c930c82":"With a correlation coefficient of 0.87, this scatter plot shows a strong, positive, linear relationship between how many goals a team scored and how many points a team got. This means that if a team scores many goals, it receives more points.","04ef4a3a":"his histogram shows the distribution of scored goals from all the dataset. We can see the distribution is right skewed with data ranging from 17 to 121.","63eab793":"### Not enough data for the Belgium Match Season 2013\/2014\n- Data for only 4 teams;\n\nIn order to clean the data I will:\n\n- drop the rows fro the Belgium Match Season 2013\/2014  \n- append correct data to the data frame","00f3ba5a":"This horizontal bar chart shows the last three teams for the 2015\/2016 match season for Italy Serie A by the total number of points and goal differences. We can see that last team in 2015\/2016 match is Veron with 28 points.","bc76739a":"This histogram show the distribution of received goals from all the dataset. We can see the distribution is normal with data ranging from 13 to 98.","d79b421f":"\nThese line charts shows the points evolution for each team that was ever ranked in top five winners from 2008\/2009 to 2015\/2016 match season, for Italy Serie A League. We can better see individual trends and evolution over the time period.","b26aaab1":"\nThis horizontal bar chart shows the last three teams for the 2015\/2016 match season for Belgium Jupiler League by the total number of points and goals difference. I added goals difference because if two teams have the same number of points, then the one with higher goal difference takes the higher ranking. We can see that the last position is taken by Oud-Heverlee Leuven with 29 points. The next two teams: KVC Westerko and Sint-Truidense VV have the same number of points, 30. The first has smaller goals difference (-24) than the second (-19). We know that goals difference and points have strong, negative, linear relationship, with a correlation coefficient of 0.92. This means that if the goals difference is bigger, than team receives more points. Therefore, Sint-Truidense VV receives a higher ranking.","1fa83515":"\nThese horizontal bar charts shows the first five teams and the last three teams for all the match seasons for Italy Serie A League by the total number of points and goals difference. I added goal difference because if two teams have the same number of points, then the one with higher goal difference takes the higher ranking."}}