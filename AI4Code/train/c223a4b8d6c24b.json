{"cell_type":{"3ebb8900":"code","77e26597":"code","d2bf6dab":"code","c7e0f63f":"code","3ae27222":"code","064b6250":"code","4af7707d":"code","742254b9":"markdown","458ccfcc":"markdown","9d6b0880":"markdown","3c847ebb":"markdown"},"source":{"3ebb8900":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","77e26597":"train=pd.read_csv(\"\/kaggle\/input\/text-classification-int20h\/train.csv\",index_col='id')\ntest=pd.read_csv(\"\/kaggle\/input\/text-classification-int20h\/test.csv\", index_col='id')\nsubmission=pd.read_csv(\"\/kaggle\/input\/text-classification-int20h\/submission.csv\")","d2bf6dab":"train['sentiment'].value_counts()","c7e0f63f":"from sklearn.feature_extraction.text import TfidfVectorizer\ntfidf=TfidfVectorizer(min_df=5)\ntrain_tfidf=tfidf.fit_transform(train['review'])\ntrain_tfidf.shape","3ae27222":"%%time\nfrom sklearn.svm import LinearSVC,SVC\nest=LinearSVC(verbose=True,max_iter=10000)\nest.fit( train_tfidf,train['sentiment'].values )\nest.n_iter_","064b6250":"%%time\ntest_tfidf=tfidf.transform( test['review'].values )\ntest_preds=est.predict(test_tfidf)","4af7707d":"submission['sentiment']=test_preds\nsubmission.to_csv(\"linear_svm.csv\",index=False)","742254b9":"# \u0427\u0442\u043e\u0431\u044b \u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0435, \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u0442\u043e\u0436\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0432 TF-IDF \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435. \u041d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0442\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u044f, \u0447\u0442\u043e \u0443\u0436\u0435 \u0435\u0441\u0442\u044c.","458ccfcc":"# \u041f\u0435\u0440\u0435\u0432\u0435\u0434\u0435\u043c \u0442\u0435\u043a\u0441\u0442\u044b \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u0432 \u043c\u0430\u0442\u0440\u0438\u0446\u0443 TF-IDF. \u041f\u043e\u043b\u0443\u0447\u0438\u043c \u0432\u0435\u043a\u0442\u043e\u0440\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043e\u0442\u0437\u044b\u0432\u0430.","9d6b0880":"# \u0418\u0437-\u0437\u0430 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e TF-IDF \u043c\u0430\u0442\u0440\u0438\u0446\u0430 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u0438, \u043b\u0435\u0433\u0447\u0435 \u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043b\u0438\u043d\u0435\u0439\u043d\u0443\u044e \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u044e\u0449\u0443\u044e \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c. \u0421 \u044d\u0442\u0438\u043c \u0445\u043e\u0440\u043e\u0448\u043e \u0441\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438( LogisticRegression, NaiveBayes, LinearSVC).","3c847ebb":"# \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u043d\u043e\u0443\u0442\u0431\u0443\u043a, \u043e\u0442\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043e\u0447\u0435\u043d\u044c \u0431\u044b\u0441\u0442\u0440\u043e, \u043d\u0443 \u0438 \u043d\u0435\u043f\u043b\u043e\u0445\u043e\u0439 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 f1-score"}}