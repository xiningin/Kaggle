{"cell_type":{"53464db0":"code","45290a0a":"code","ad86907f":"code","1640d8f7":"code","ac7348bb":"code","e3ba0088":"code","b1e8ba0d":"code","b3ea2595":"code","0142773b":"code","03a8153b":"code","e716a23d":"code","20db31b7":"code","e9324e0a":"code","6c57614c":"markdown"},"source":{"53464db0":"import numpy as np \nimport pandas as pd \npd.set_option('display.max_columns', 500)\nimport warnings\nwarnings.filterwarnings(\"ignore\")","45290a0a":"import janestreet\nenv = janestreet.make_env() \niter_test = env.iter_test() \nimport xgboost as xgb\nprint(\"XGBoost version:\", xgb.__version__)","ad86907f":"train = pd.read_csv('..\/input\/jane-street-market-prediction\/train.csv')\nfeatures = pd.read_csv('..\/input\/jane-street-market-prediction\/features.csv')\nexample_test = pd.read_csv('..\/input\/jane-street-market-prediction\/example_test.csv')\nsample_prediction_df = pd.read_csv('..\/input\/jane-street-market-prediction\/example_sample_submission.csv')","1640d8f7":"print('train shape is {}'.format(train.shape))\nprint('features shape is {}'.format(features.shape))\nprint('example_test shape is {}'.format(example_test.shape))\nprint('sample_prediction_df shape is {}'.format(sample_prediction_df.shape))","ac7348bb":"train.head()","e3ba0088":"print (train.isnull().sum())","b1e8ba0d":"train.dropna(axis = 1, how = \"all\", inplace = True)","b3ea2595":"features = [col for col in list(train.columns) if 'feature' in col]","0142773b":"train = train[train['weight'] != 0]\n\n# binarize the target\ntrain['action'] = (train['resp'].values > 0).astype(int)\n\n#train = train.fillna(-99999)\nf_mean = train.mean()\ntrain.fillna(f_mean)\n\n# split data for training and free data space usage to prevent exceeding maximum allowed\nX_train = train.loc[:, features]\ny_train = train.loc[:, 'action']\ndel train\n\nprint('Finished.')","03a8153b":"clf = xgb.XGBClassifier(\n    n_estimators=400,\n    max_depth=7,\n    eta=0.5, # learning_rate\n    missing=None,\n    random_state=42,\n    tree_method='gpu_hist',\n    subsample=0.8,\n    colsample_bytree=1,\n    #sampling_method='gradient_based',\n    #eval_metric='logloss',\n    verbosity=2   # info\n)","e716a23d":"f_mean = X_train.mean()\nX_train.fillna(f_mean)","20db31b7":"%time \nclf.fit(X_train, y_train)","e9324e0a":"print('Creating submissions file...', end='')\nrcount = 0\nfor (test_df, prediction_df) in env.iter_test():\n    X_test = test_df.loc[:, features]\n    y_preds = clf.predict(X_test)\n    prediction_df.action = y_preds\n    env.predict(prediction_df)\n    rcount += len(test_df.index)\nprint(f'Finished processing {rcount} rows.')","6c57614c":"## Handle Missing Values"}}