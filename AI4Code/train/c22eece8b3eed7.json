{"cell_type":{"9133a8cc":"code","39de0d98":"code","7000cac3":"code","fefb8bff":"code","3b821673":"code","3ba1d365":"code","fff2b533":"code","059fe78a":"code","f93155d7":"code","b08bb289":"code","adf9569f":"code","7e434a1c":"code","7efdcf59":"code","2171bfd4":"code","ca36ab6c":"markdown","28efc224":"markdown"},"source":{"9133a8cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","39de0d98":"filename = \"\/kaggle\/input\/nlp-getting-started\/train.csv\"\ntrain = pd.read_csv(filename)\ntrain.head()","7000cac3":"filename = \"\/kaggle\/input\/nlp-getting-started\/test.csv\"\ntest = pd.read_csv(filename)\ntest.head()","fefb8bff":"train.isnull().sum()","3b821673":"train['keyword'].unique()","3ba1d365":"x=train['text'].values\ny=train['target'].values\nx_test=test['text'].values\nfrom nltk.corpus import stopwords\nimport string\nstop_words = stopwords.words('english')\nstop_words += list(string.punctuation)\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x, y,random_state = 0)\nfrom sklearn.feature_extraction.text import CountVectorizer\ncv = CountVectorizer(max_features = 4000, analyzer = 'word', stop_words = stop_words, ngram_range = (1,4), max_df = 0.8)\n","fff2b533":"x_train_vec = cv.fit_transform(X_train)\nx_test_vec  = cv.transform(X_test)","059fe78a":"from sklearn.naive_bayes import MultinomialNB\nNBClassifer = MultinomialNB(alpha = 0.1)\nNBClassifer.fit(x_train_vec, y_train)","f93155d7":"NBClassifer.score(x_test_vec, y_test)","b08bb289":"x_train_vec = cv.fit_transform(x)\nx_test_vec  = cv.transform(x_test)","adf9569f":"from sklearn.naive_bayes import MultinomialNB\nNBClassifer = MultinomialNB(alpha = 0.1)\nNBClassifer.fit(x_train_vec, y)","7e434a1c":"x_test_vec  = cv.transform(x_test)\ny_predicted = NBClassifer.predict(x_test_vec)\ny_predicted.sum()","7efdcf59":"y_predicted","2171bfd4":"np.savetxt(\"\/kaggle\/working\/output.csv\", y_predicted, fmt='%s')","ca36ab6c":"# Score","28efc224":"# Prediction using test data"}}