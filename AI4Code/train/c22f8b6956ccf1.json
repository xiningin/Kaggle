{"cell_type":{"2431e305":"code","dcdbdddd":"code","044b802e":"code","af374246":"code","4f6adee1":"code","bda9424f":"code","1bb53f1d":"code","5ddd0da6":"code","75dba73f":"code","81135012":"code","995ab6f9":"code","bdac6995":"code","3ad2ecc2":"code","334a93a3":"code","2e21c8a3":"code","91e8e480":"code","90966f51":"code","03e147d7":"code","76980e3f":"code","905d2602":"code","2761060b":"code","c795d47c":"code","86427281":"code","86de0578":"code","b31344f5":"code","404f79f1":"code","5d3059aa":"code","d1c334e8":"code","4b1c49f9":"code","0cc33523":"code","9dd336a2":"markdown","5d4c4984":"markdown","68629e92":"markdown","751d55a8":"markdown"},"source":{"2431e305":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dcdbdddd":"from sklearn import preprocessing, feature_extraction, linear_model, model_selection\nimport re\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.linear_model import RidgeClassifierCV","044b802e":"train_data = pd.read_csv('\/kaggle\/input\/nlp-getting-started\/train.csv')","af374246":"test_data = pd.read_csv('\/kaggle\/input\/nlp-getting-started\/test.csv')","4f6adee1":"train_data.info()","bda9424f":"train_data = train_data.drop(columns = ['location', 'keyword'])","1bb53f1d":"train_data.info()","5ddd0da6":"train_data.head()","75dba73f":"train_data['Non_Alphanumeric'] = train_data['text'].str.findall(r'[^a-zA-Z0-9 ]').str.len()","81135012":"train_data['Non_Alphanumeric'].describe()","995ab6f9":"def simplify_string(text):\n    simple_str = \" \".join(re.findall(\"[a-zA-Z0-9]+\", text))\n    simple_str = simple_str.lower()\n    return simple_str","bdac6995":"train_data['text_simple'] = train_data['text'].apply(lambda x: simplify_string(x))","3ad2ecc2":"train_data.head()","334a93a3":"train_data = train_data.drop(columns = ['text', 'Non_Alphanumeric'])","2e21c8a3":"train_data.head()","91e8e480":"test_data.head()","90966f51":"test_data['text_simple'] = test_data['text'].apply(lambda x: simplify_string(x))","03e147d7":"test_data = test_data.drop(columns = ['keyword', 'location', 'text'])","76980e3f":"test_data.head()","905d2602":"count_vectorizer = feature_extraction.text.CountVectorizer()","2761060b":"train_vectors = count_vectorizer.fit_transform(train_data['text_simple'])\ntest_vectors = count_vectorizer.transform(test_data['text_simple'])","c795d47c":"train_vectors[0].todense()","86427281":"clf = SGDClassifier(max_iter=5000, tol=1e-3)","86de0578":"clf1 = RidgeClassifierCV(alphas=[1e-3, 1e-2, 1e-1, 1])","b31344f5":"scores = model_selection.cross_val_score(clf1, train_vectors, train_data[\"target\"], cv=3, scoring=\"f1\")","404f79f1":"print(scores)","5d3059aa":"clf1.fit(train_vectors, train_data[\"target\"])","d1c334e8":"sample_submission = pd.read_csv('\/kaggle\/input\/nlp-getting-started\/sample_submission.csv')","4b1c49f9":"sample_submission[\"target\"] = clf1.predict(test_vectors)","0cc33523":"sample_submission.head()","9dd336a2":"<h1> Data Preprocessing <\/h1>","5d4c4984":"<h1> Predict <\/h1>","68629e92":"<h1> Create Vectors <\/h1>","751d55a8":"<h1> Model <\/h1>"}}