{"cell_type":{"ec62e3b4":"code","ae026963":"code","cf201ca9":"code","11a93a42":"code","07ab7219":"code","15782f64":"code","f8563b02":"code","11a03c5e":"code","e66ed0a6":"code","b27f3310":"code","5ea36dcb":"code","f69a1909":"code","1aa627db":"code","592e6b33":"code","d0ab95f3":"code","703c64cd":"code","fe7d1cc2":"code","4037b609":"code","cafbf673":"code","431117ae":"code","1b843cac":"code","a27b7b98":"code","e0fce62b":"code","4c82abc5":"code","8b975002":"code","7bdf728b":"code","58b89d83":"code","a596202b":"code","80faeb80":"code","9b133194":"code","057bc51f":"code","0f1696da":"code","2d47c301":"code","91455b95":"code","6b447349":"code","3aadb934":"code","cc95626f":"code","5b22702f":"code","0023cfa3":"code","32bfc0d2":"code","9aa7a85a":"code","833ebcd2":"code","438741a6":"code","f8593d88":"code","3115add1":"code","6db731ff":"code","b1bc4dea":"code","f3c965dd":"code","93635b3f":"code","e23be772":"code","c80671c1":"code","9ea62845":"code","2342ce2d":"code","ef829066":"code","eacf82b3":"code","6fbf403d":"code","915374a7":"code","ce3edb9c":"code","812780d4":"code","987d5bea":"code","8cfa57c0":"code","8c807400":"code","0d2a1b07":"code","b9fd326f":"code","feda37b5":"code","c67f1c43":"code","9a1d38b9":"code","30ad1cbe":"code","fdcc12c2":"code","d2bd41fa":"code","64e0e42c":"markdown","dcf11f74":"markdown","b7b686e6":"markdown","c7b503aa":"markdown","0ffb2e85":"markdown"},"source":{"ec62e3b4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ae026963":"mydf = pd.read_csv('\/kaggle\/input\/delhi-house-price-prediction\/MagicBricks.csv')","cf201ca9":"mydf.head(10)","11a93a42":"mydf.info()","07ab7219":"mydf['Locality'].value_counts()","15782f64":"import seaborn as sns","f8563b02":"sns.distplot(mydf['Area'])","11a03c5e":"mydf.shape","e66ed0a6":"mydf[mydf['Area']<=5000].shape","b27f3310":"mydf['Area'].mode()","5ea36dcb":"mydf['BHK'].value_counts()","f69a1909":"mydf= mydf[mydf['BHK']<=5]","1aa627db":"mydf.info()","592e6b33":"mydf = mydf[mydf['Area']<= 5000]","d0ab95f3":"mydf.isnull().sum()","703c64cd":"mydf[['Locality','Per_Sqft']]","fe7d1cc2":"mydf['Locality'].value_counts().shape","4037b609":"mydf['Per_Sqft'].fillna(method='ffill',inplace=True)","cafbf673":"mydf.isnull().sum()","431117ae":"mydf['Parking'].value_counts()","1b843cac":"mydf['Parking'].fillna(1.0,inplace=True)","a27b7b98":"mydf = mydf.dropna()","e0fce62b":"mydf.isnull().sum()","4c82abc5":"mydf.drop(columns=['Locality','Furnishing','Parking'],inplace=True)","8b975002":"from sklearn.preprocessing import LabelEncoder","7bdf728b":"## furnishing_encoder = LabelEncoder()\nstatus_encoder = LabelEncoder()\ntransaction_encoder = LabelEncoder()\ntype_encoder = LabelEncoder()","58b89d83":"## mydf['Furnishing'] = furnishing_encoder.fit_transform(mydf['Furnishing'])\nmydf['Status'] = status_encoder.fit_transform(mydf['Status'])\nmydf['Transaction'] = transaction_encoder.fit_transform(mydf['Transaction'])\nmydf['Type'] = type_encoder.fit_transform(mydf['Type'])","a596202b":"mydf.head()","80faeb80":"mydf.info()","9b133194":"mydf['Type'].value_counts()","057bc51f":"mydf.shape","0f1696da":"from sklearn.preprocessing import OneHotEncoder\nohe = OneHotEncoder(drop='first')","2d47c301":"X_trans = ohe.fit_transform(mydf[['BHK','Bathroom']]).toarray()","91455b95":"X_trans.shape","6b447349":"X = mydf.drop(columns=['BHK','Bathroom','Price']).values","3aadb934":"X.shape","cc95626f":"X","5b22702f":"X = np.hstack((X,X_trans))","0023cfa3":"X.shape","32bfc0d2":"X","9aa7a85a":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()","833ebcd2":"X = scaler.fit_transform(X)","438741a6":"X","f8593d88":"y = mydf['Price'].values","3115add1":"y","6db731ff":"X.shape","b1bc4dea":"y.shape","f3c965dd":"mydf.corr()['Price']","93635b3f":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2)","e23be772":"X_train.shape","c80671c1":"from sklearn.linear_model import LinearRegression\nreg = LinearRegression()","9ea62845":"reg.fit(X_train,y_train)","2342ce2d":"y_pred = reg.predict(X_test)","ef829066":"y_test.shape","eacf82b3":"y_pred.shape","6fbf403d":"from sklearn.metrics import r2_score\nr2_score(y_test,y_pred)","915374a7":"## r2_score should be greater than 0.9","ce3edb9c":"import pickle","812780d4":"pickle.dump(reg,open('model.pkl','wb'))","987d5bea":"pickle.dump(status_encoder,open('status_encoder.pkl','wb'))\npickle.dump(transaction_encoder,open('transaction_encoder.pkl','wb'))\npickle.dump(type_encoder,open('type_encoder.pkl','wb'))","8cfa57c0":"pickle.dump(ohe, open('ohe.pkl','wb'))","8c807400":"mydf.head()","0d2a1b07":"mydf_copy = pd.read_csv('\/kaggle\/input\/delhi-house-price-prediction\/MagicBricks.csv')","b9fd326f":"mydf_copy.head()","feda37b5":"mydf_copy['Per_Sqft'].fillna(6667.0,inplace=True)","c67f1c43":"mydf_copy['Per_Sqft'].isnull().sum()","9a1d38b9":"locality_df = mydf_copy[['Locality','Per_Sqft']].drop_duplicates(keep='first')\nlocality_df","30ad1cbe":"pickle.dump(locality_df, open('locality.pkl','wb'))","fdcc12c2":"locality_df[locality_df.Locality == 'Rohini Sector 24']['Per_Sqft'].mean()","d2bd41fa":"locality_df.sample(1)","64e0e42c":"#### End of Session of this Notebook.","dcf11f74":"#### r2_score = (1 - ssr\/ssm)\n\n#### ssr --> d = sqrt(d1^2+d2^2+.....)","b7b686e6":"### Every information related to prediction can extracted from reg.predict() object","c7b503aa":"#### Now, the main idea is to convert the object to a binary file using python pickle.dump() and the file then imported to the PyCharm to use the file to build website which can predict the certain values upon several input parameters.\n\n####  We can converts the byte stream (generated through pickling) back into python objects by a process called as unpickling.","0ffb2e85":"#### Linear Regression Model for training our dataset"}}