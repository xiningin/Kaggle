{"cell_type":{"6433d49f":"code","c32ebfea":"code","92dfb8c0":"code","55f8da80":"code","6f8c8435":"code","5f7adbf3":"code","6210f558":"code","cccb5532":"code","5a90d349":"code","09047e31":"code","bf864fbc":"code","782e7324":"code","6f8baf28":"code","ad5acfaf":"code","d390d4e7":"code","12bd5113":"code","5f118662":"code","67fa0e99":"code","af7b600b":"code","8e7556e5":"code","1261de45":"code","19411be7":"code","c0115301":"markdown","d9d0989f":"markdown","0f918856":"markdown","4a79e620":"markdown","64ddc4df":"markdown","d7efd1c0":"markdown","f1a0cadd":"markdown","8b6ce22b":"markdown","0dae496e":"markdown","3bae7665":"markdown","995205c1":"markdown","650d2089":"markdown","a4ce2d60":"markdown","18dbbbee":"markdown"},"source":{"6433d49f":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom IPython.display import display, Markdown, Latex\nimport plotly.express as px\nimport datetime\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","c32ebfea":"# Read each of the csv files\ndf_1910 = pd.read_csv('\/kaggle\/input\/ecommerce-events-history-in-cosmetics-shop\/2019-Oct.csv')\ndf_1911 = pd.read_csv('\/kaggle\/input\/ecommerce-events-history-in-cosmetics-shop\/2019-Nov.csv')\ndf_1912 = pd.read_csv('\/kaggle\/input\/ecommerce-events-history-in-cosmetics-shop\/2019-Dec.csv')\ndf_2001 = pd.read_csv('\/kaggle\/input\/ecommerce-events-history-in-cosmetics-shop\/2020-Jan.csv')\ndf_2002 = pd.read_csv('\/kaggle\/input\/ecommerce-events-history-in-cosmetics-shop\/2020-Feb.csv')","92dfb8c0":"df_1910['event_month'] = \"2019-10\"\ndf_1911['event_month'] = \"2019-11\"\ndf_1912['event_month'] = \"2019-12\"\ndf_2001['event_month'] = \"2020-01\"\ndf_2002['event_month'] = \"2020-02\"","55f8da80":"# concat all monthly data loaded to one dataframe\ndf_alldata = pd.concat([df_1910, df_1911, df_1912, df_2001, df_2002])","6f8c8435":"df_alldata.head()","5f7adbf3":"mdquery = \"2019-Oct has \" + str(len(df_1910)) + \" events, \"\nmdquery += \"2019-Nov has \" + str(len(df_1911)) + \" events, \"\nmdquery += \"2019-Dec has \" + str(len(df_1912)) + \" events, \"\nmdquery += \"2021-Jan has \" + str(len(df_2001)) + \" events, \"\nmdquery += \"2021-Feb has \" + str(len(df_2002)) + \" events. \"\nmdquery += \"Totally \" + str(len(df_alldata)) + \" events.\"\ndisplay(Markdown(mdquery))","6210f558":"# count MISSING values in each column\ndf_alldata.isnull().sum()","cccb5532":"event_types = df_alldata['event_type'].unique()\nmdquery = \"In the eCommerce Events History, there are \" + str(len(event_types)) + \" event types: **\"\nfor type in event_types[:-1]:\n    mdquery = mdquery + type + \", \"\nmdquery = mdquery + event_types[-1] + \"**.\"\ndisplay(Markdown(mdquery))","5a90d349":"event_type_count = df_alldata.groupby([\"event_month\", \"event_type\"]).count()[\"event_time\"]","09047e31":"fig = px.bar(event_type_count.reset_index(), x=\"event_month\", y=\"event_time\", color=\"event_type\", title=\"Events by Month\")\nfig.show()","bf864fbc":"months = ['2019-10', '2019-11', '2019-12', '2020-01', '2020-02']\nmonth_names = [\"Oct 2019\", \"Nov 2019\", \"Dec 2019\", \"Jan 2020\", \"Feb 2020\"]\nfor i in range(5):\n    month = months[i]\n    month_name = month_names[i]\n    user_behavior = event_type_count.reset_index().query(\"event_month == @month & event_type != 'remove_from_cart'\")\\\n                                                    .sort_values(\"event_time\", ascending=False)\n    fig = px.funnel(user_behavior, x='event_time', y='event_type', title=\"Online user behavior funnel analysis, \" + month_name)\n    fig.show()","782e7324":"all_purchase = df_alldata.query(\"event_type=='purchase'\")[[\"product_id\", \"category_id\", \"price\", \"user_id\", \"user_session\", \"event_month\"]]\nall_purchase","6f8baf28":"product_purchase_count = all_purchase.groupby([\"product_id\", 'user_id']).event_month.count().rename(\"purchase_count\").reset_index()\navg_product_purchase_count = product_purchase_count.groupby(\"product_id\").purchase_count.mean().rename(\"avg_purchase_count\").sort_values(ascending=False).reset_index()","ad5acfaf":"top_5_count_value = avg_product_purchase_count.loc[4, \"avg_purchase_count\"]\n\nmdquery = \"The following table shows the Top 5 products with largest average repurchased count:\"\ndisplay(Markdown(mdquery))\n\navg_product_purchase_count.query(\"avg_purchase_count >= @top_5_count_value\")","d390d4e7":"category_purchase_count = all_purchase.groupby([\"category_id\", 'user_id']).event_month.count().rename(\"purchase_count\").reset_index()\navg_category_purchase_count = category_purchase_count.groupby(\"category_id\").purchase_count.mean().rename(\"avg_purchase_count\").sort_values(ascending=False).reset_index()","12bd5113":"top_5_count_value = avg_category_purchase_count.loc[4, \"avg_purchase_count\"]\n\nmdquery = \"The following table shows the Top 5 categories with largest average repurchased count:\"\ndisplay(Markdown(mdquery))\n\navg_category_purchase_count.query(\"avg_purchase_count >= @top_5_count_value\")","5f118662":"most_purchased = all_purchase.groupby(\"product_id\").user_id.nunique().rename(\"user_buys\").sort_values(ascending=False).reset_index().head(1)\n\nmdquery = \"The MOST purchased product is **product #\" + str(most_purchased.loc[0, \"product_id\"]) + \"**. It is purchased by \" \\\n                                                        + str(most_purchased.loc[0, \"user_buys\"]) + \" UNIQUE users.\"\ndisplay(Markdown(mdquery))","67fa0e99":"loyal_user = df_alldata.query(\"event_type == 'purchase'\")\\\n                        .groupby([\"user_id\", \"event_time\"]).product_id.count().rename(\"purchase_count\")\\\n                        .sort_values(ascending=False).reset_index()\\\n                        .groupby(\"user_id\").event_time.count().rename(\"purchase_count\")\\\n                        .sort_values(ascending=False).reset_index().head(1)\n\n\nmdquery = \"The user with the highest purchase frequency is **user #\" + str(loyal_user.loc[0, \"user_id\"]) + \"**. This user purchased \" \\\n                                                                     + str(loyal_user.loc[0, \"purchase_count\"]) + \" times in 5 months.\"\ndisplay(Markdown(mdquery))","af7b600b":"loyal_user = all_purchase.groupby(\"user_id\").product_id.count().rename(\"purchase_count\").sort_values(ascending=False).reset_index().head(1)\n\nmdquery = \"The user purchased the most number of items is **user #\" + str(loyal_user.loc[0, \"user_id\"]) + \"**. This user purchased \" \\\n                                                                     + str(loyal_user.loc[0, \"purchase_count\"]) + \" items in 5 months.\"\ndisplay(Markdown(mdquery))","8e7556e5":"product_event =  df_alldata.groupby([\"product_id\", \"event_type\"]).count()['user_id'].rename(\"count\").reset_index()\nproduct_event = product_event.pivot(index='product_id',columns='event_type',values='count').drop(columns=[\"remove_from_cart\"])","1261de45":"product_event[\"cart\/view\"] = product_event[\"cart\"] \/ product_event[\"view\"]\nproduct_event[\"purchase\/cart\"] = product_event[\"purchase\"] \/ product_event[\"cart\"]\nproduct_event[\"purchase\/view\"] = product_event[\"purchase\"] \/ product_event[\"view\"]","19411be7":"product_event.sort_values(\"purchase\/view\", ascending=False)","c0115301":"## 3. TOP 5 Repurchased Products and Categories","d9d0989f":"## 6. Rate of cart\/view, purchase\/cart, and purchase\/view","0f918856":"## 2. Monthly User Behavior Funnel Chart","4a79e620":"### 3.1 TOP 5 Repurchased Products","64ddc4df":"At this point, the rate of purchase\/view and purchase\/cart rate shows that the purchase can be done without viewing or carting.    \n**Future Steps Can Be Done:**    \n - The sequence of events done by one user to finish one or multiple purchase(s) can be analyzed.   \n - The average time took for one purchase been done (count from view to purchase).","d7efd1c0":"## 4. MOST Purchased Product by UNIQUE User","f1a0cadd":"Since there is no missing in event_time, event_type, product_id, category_id, price and user_id, we **do not need pd.dropna()**","8b6ce22b":"### 5.1 The User with the Highest Purchase Frequency","0dae496e":"## 1. Events Count Bar Chart Compare between Month","3bae7665":"## 5. Loyal Users Analysis","995205c1":"Nov 2019 have the most count of viewed and purchased events. Consider the Black Friday shopping season in November, this phenomenon is quite reasonable in western.","650d2089":"## 0. Data Loading & Summary","a4ce2d60":"### 5.2 Shopping Activities Analysis of the User Purchased the Most Number of Items","18dbbbee":"### 3.2 TOP 5 Repurchased Categories"}}