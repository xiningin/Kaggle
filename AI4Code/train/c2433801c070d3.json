{"cell_type":{"577a8a34":"code","7f94af8d":"code","46718075":"code","a1f8b334":"code","16d2db07":"code","8f20d686":"code","3f62833c":"code","b782a720":"code","c9c3c3d9":"code","d81f86f1":"code","ae530152":"code","e9389b2e":"code","1d076a67":"code","881ba8d0":"code","a4cb18aa":"code","9d47fce0":"markdown","3245b597":"markdown","b2624a72":"markdown"},"source":{"577a8a34":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","7f94af8d":"data = pd.read_csv('..\/input\/ventilator-pressure-prediction\/train.csv')","46718075":"# Sample plotting operation for one breath id\ndef plot_one_breath_id(data, breath_id, istest=False):\n    tmp = data[data.breath_id==breath_id]\n    if istest:\n        plt.plot(tmp.time_step,tmp.u_in,tmp.time_step,tmp.u_out, tmp.time_step, tmp.R, tmp.time_step, tmp.C)\n        plt.legend(['u_in','u_out','R','C'])\n    else:\n        plt.plot(tmp.time_step,tmp.u_in,tmp.time_step,tmp.u_out, tmp.time_step, tmp.pressure, tmp.time_step, tmp.R, tmp.time_step, tmp.C)\n        plt.legend(['u_in','u_out','pressure','R','C'])\n    plt.title(f'Time series data of {breath_id}')\n    plt.xlabel('Time')\n    plt.grid()\n    plt.show()","a1f8b334":"plot_one_breath_id(data,1)","16d2db07":"def get_u_out_toggle_at(tmp):\n    return tmp.time_step[tmp.u_out==1].tolist()[0]\n\ndef get_u_out_toggle_at_idx(tmp):\n    return tmp.u_out.tolist().index(1)\n\ndef are_R_C_constants(tmp):\n    return tmp.R.value_counts().shape[0]==1 and tmp.C.value_counts().shape[0]==1","8f20d686":"breaths = data.breath_id.unique()\nbreath_df = pd.DataFrame(breaths,index=breaths)\nfor g, tmp in data.groupby('breath_id', axis=0):\n    breath_df.at[g, 'u_out_t'] = get_u_out_toggle_at(tmp)\n    breath_df.at[g, 'u_out_idx'] = get_u_out_toggle_at_idx(tmp)\n    breath_df.at[g, 'R_C_Constants'] = are_R_C_constants(tmp)","3f62833c":"breath_df.u_out_t.hist()\nplt.xlabel('u_out=1 first occurence')\nplt.title('On Train Data')\nplt.show()","b782a720":"breath_df.u_out_idx.hist()\nplt.xlabel('u_out=1 first occurence relative position (of 80 elements)')\nplt.title('On Train Data')\nplt.show()","c9c3c3d9":"breath_df.R_C_Constants.unique()","d81f86f1":"test = pd.read_csv('..\/input\/ventilator-pressure-prediction\/test.csv')","ae530152":"plot_one_breath_id(test,8, True)","e9389b2e":"test_breaths = test.breath_id.unique()\ntest_breath_df = pd.DataFrame(test_breaths,index=test_breaths)\nfor g, tmp in test.groupby('breath_id', axis=0):\n    test_breath_df.at[g, 'u_out_t'] = get_u_out_toggle_at(tmp)\n    test_breath_df.at[g, 'u_out_idx'] = get_u_out_toggle_at_idx(tmp)\n    test_breath_df.at[g, 'R_C_Constants'] = are_R_C_constants(tmp)","1d076a67":"breath_df.u_out_t.hist()\nplt.xlabel('u_out=1 first occurence')\nplt.title('On Test Data')\nplt.show()","881ba8d0":"breath_df.u_out_idx.hist()\nplt.xlabel('u_out=1 first occurence relative position (of 80 elements)')\nplt.title('On Test Data')\nplt.show()","a4cb18aa":"test_breath_df.R_C_Constants.unique()","9d47fce0":"# Summary:\n1. u_out toggled from 0 to 1 approximately at 1sec.\n2. u_out toggled index is either 29, 31, 32. (out of 80 elements in breath sequence)\n3. R and C features are always constants.","3245b597":"# On Test Data","b2624a72":"# On Training Data"}}