{"cell_type":{"9b096374":"code","e1aef115":"code","fa2528f6":"code","1454c255":"code","7df9f15d":"code","db6fae71":"code","8a96b233":"code","9da35275":"code","b0a80128":"code","f5fbf18f":"code","f7beed06":"code","bd80cd05":"code","4de7db12":"code","5cfd4753":"code","43be9544":"code","0858456f":"code","d3a20b24":"code","59df2d18":"code","241dd1c6":"code","547a447f":"code","63c03dad":"code","068268d6":"code","833a0dc9":"code","a05f507d":"code","41cdbb3c":"code","b198f4b0":"code","5bb6d38e":"code","8a9b2a96":"code","dc376753":"code","4faebd6b":"code","361fe20b":"code","bd2ac42b":"code","f2977b83":"code","a48b0f00":"code","c3a6071f":"code","d7b166e2":"code","eabb7ec7":"code","c62803d4":"code","2c776faf":"code","549e9b7c":"code","759e5af7":"code","f7d78be6":"code","679f407d":"code","915e5a8a":"code","b1f805f4":"code","414d51fb":"code","62f41b2a":"code","f348dc1c":"code","04493ece":"code","fc90c57e":"code","6c912f7f":"code","cf78c511":"code","ed698b68":"code","ae0d6a80":"code","5f6912e8":"code","01031026":"code","e598dfa9":"code","50d17bdf":"markdown","d021cdf7":"markdown","6331d77c":"markdown"},"source":{"9b096374":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e1aef115":"#\ubd84\uc11d package \ubd88\ub7ec\uc624\uae30\nimport pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import LabelEncoder,Binarizer,StandardScaler,MinMaxScaler,RobustScaler\nlbl = LabelEncoder()\nfrom sklearn.model_selection import train_test_split\nfrom dateutil.relativedelta import relativedelta\nfrom datetime import *\nfrom sklearn.metrics import classification_report, f1_score\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nfrom sklearn.cluster import KMeans\nfrom math import sqrt\nfrom imblearn.over_sampling import *\nfrom imblearn.under_sampling import *\nfrom imblearn.combine import *\nfrom sklearn.model_selection import RandomizedSearchCV, GridSearchCV\n# from xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom sklearn.linear_model import RidgeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n# from catboost import CatBoostClassifier\nfrom sklearn.feature_selection import RFECV\nfrom sklearn import svm\nfrom collections import Counter\nfrom sklearn.datasets import make_classification\nwarnings.filterwarnings('ignore')\npd.set_option('max_columns', 200, 'max_rows', 200)","fa2528f6":"train_serv = pd.read_csv('\/kaggle\/input\/cds2021\/train_service.csv', parse_dates=['registerdate','enddate'],\n                        infer_datetime_format = True)\n# parse_dates \ub123\ub294 \uc774\uc720: \uc2dc\uac04 \uad00\ub828 \uc5f4\uc744 object \ub300\uc2e0 datetime64[ns] \ud615\ud0dc\ub85c \uc77d\uc5b4\uc8fc\uae30 \uc704\ud574\nprint(train_serv.info())\ntrain_serv.head()","1454c255":"train_book = pd.read_csv('\/kaggle\/input\/cds2021\/train_bookmark.csv', parse_dates=['dates'],\n                        infer_datetime_format = True)\nprint(train_book.info())\ntrain_book.head()","7df9f15d":"coin = pd.read_csv('\/kaggle\/input\/cds2021\/coin.csv')\nprint(coin.info())\ncoin.head()","db6fae71":"content = pd.read_csv('\/kaggle\/input\/cds2021\/content_info.csv')\nprint(content.info())\ncontent.head()","8a96b233":"movie = pd.read_csv('\/kaggle\/input\/cds2021\/movie_info.csv')\nprint(movie.info())\nmovie.head()","9da35275":"test_serv = pd.read_csv('\/kaggle\/input\/cds2021\/predict_service.csv', parse_dates=['registerdate','enddate'],\n                        infer_datetime_format = True) # shape 19,001 * 14\n# test_service : \ub4f1\ub85d\uc77c 2021.03.11~03.12 data - \uace0\uac1d \uc774\ud0c8\ub960 \uc608\uce21\ntest_book = pd.read_csv('\/kaggle\/input\/cds2021\/predict_bookmark.csv', parse_dates=['dates'],\n                        infer_datetime_format = True)\ndisplay(train_serv.head(3))\ndisplay(test_serv.head(3))","b0a80128":"#\ud1b5\ud569\ud558\ub294 \uc774\uc720: \ud6c8\ub828, \uc608\uce21\ud558\ub294 \ub370\uc774\ud130\uac00 \ub300\ubd80\ubd84 \uacf5\ud1b5\uc758 \uc804\ucc98\ub9ac \uacfc\uc815\uc744 \uac70\uce58\ubbc0\ub85c \ud6a8\uc728\uc131\uc744 \uc704\ud574 \ud1b5\ud569\nprint(test_serv.shape)\ntest_serv['Repurchase'] = 'test'\nprint(test_serv.shape)\ntest_serv.head()","f5fbf18f":"total_serv = pd.concat([train_serv, test_serv],0)\ntotal_book = pd.concat([train_book, test_book],0)\nprint(train_serv.shape, '+', test_serv.shape,'->', total_serv.shape)\nprint(train_book.shape, '+', test_book.shape,'->', total_book.shape)","f7beed06":"total_serv.columns","bd80cd05":"# EDA - service data\uc758 column \ud655\uc778\nfor col in total_serv.columns:\n    print(col)\n    print(total_serv[col].unique(), '\\n') # '\\n \uc740 new line\uc73c\ub85c \uac1c\ud589\uc744 \uc758\ubbf8'","4de7db12":"for col in total_book.columns:\n    print(col)\n    print(total_book[col].unique(), '\\n') # '\\n \uc740 new line\uc73c\ub85c \uac1c\ud589\uc744 \uc758\ubbf8'","5cfd4753":"for col in coin.columns:\n    print(col)\n    print(coin[col].unique(), '\\n') # '\\n \uc740 new line\uc73c\ub85c \uac1c\ud589\uc744 \uc758\ubbf8'","43be9544":"round(total_serv.isnull().sum() \/ len(total_serv) * 100, 1).sort_values(ascending=False)","0858456f":"import missingno as msno # \ube48 \uac12 \ubd84\ud3ec\ub97c \uc2dc\uac01\ud654\nmsno.matrix(df=total_serv, figsize=(8, 8), color=(0.8, 0.5, 0.2))","d3a20b24":"total_serv['gender'].value_counts()\ntotal_serv['gender'] = total_serv['gender'].fillna('N')\ntotal_serv['gender'].value_counts()","59df2d18":"# agegroup \uc774\uc0c1\uce58 \uc81c\uac70 950, 120 -> 0\ntotal_serv['agegroup'].value_counts()\ntotal_serv['agegroup'] = total_serv['agegroup'].replace(950,0).replace(120,0)\ntotal_serv['agegroup'].value_counts()","241dd1c6":"total_serv['pgamount'].value_counts() # \uacb0\uc81c\uae08\uc561\uc758 \uac12 \ud3bc\uccd0\ubcf4\uae30","547a447f":"total_serv['pgamount'] = total_serv['pgamount'].apply(lambda x: x*1120 if x < 100 else x)","63c03dad":"total_serv['coinReceived'].unique()","068268d6":"print(total_serv['coinReceived'].unique(),total_serv['promo_100'].unique(),total_serv['isauth'].unique())\ntotal_serv = total_serv.fillna('X')\nprint(total_serv['coinReceived'].unique(),total_serv['promo_100'].unique(),total_serv['isauth'].unique())","833a0dc9":"# total_serv\uc5d0 \uacb0\uce21\uac12\uc774 \ub0a8\uc558\ub294\uc9c0 \ud655\uc778\nprint('total_service null: ',total_serv.isnull().sum().sum())","a05f507d":"# \ub4f1\ub85d\uc77c\uc2dc\uc758 \uc2dc\uac04\uacfc 3\uc2dc\uac04\ubcc4 \uc2dc\uac04\ub300, \ub4f1\ub85d\ud55c \uc694\uc77c column \ucd94\uac00\ntotal_serv['hour_s'] = total_serv['registerdate'].apply(lambda x: x.hour)\ntotal_serv['hour_s']","41cdbb3c":"total_serv['hour_type_s'] = total_serv['hour_s'] \/\/ 3\ntotal_serv['hour_type_s']","b198f4b0":"total_serv['weekday_s'] = total_serv['registerdate'].dt.weekday\ntotal_serv['weekday_s'] # \uc6d4\ud654\uc218\ubaa9\uae08\ud1a0\uc77c -> 0123456 \uc73c\ub85c \ubcc0\ud658","5bb6d38e":"# bookmark, coin \ub4f1\uacfc\uc758 \ub370\uc774\ud130\ub4e4\uacfc \ubcd1\ud569\ud558\uae30 \uc704\ud55c key \uc0dd\uc131\ntotal_serv['sub_key'] = total_serv['uno'] + '_' + total_serv['productcode']\ntotal_serv['sub_key']\ntotal_serv.head(3)","8a9b2a96":"# total book\uc758 \uc5f4\ubcc4 \ube48 \uac12 \ube44\uc728\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ucd9c\ub825\nround(total_book.isnull().sum() \/ len(total_book) *100, 1).sort_values(ascending=False)","dc376753":"total_book['contentnumber'].value_counts()\ntotal_book['contentnumber'] = total_book['contentnumber'].fillna(0)","4faebd6b":"total_book.info()","361fe20b":"# contentnumber, devicetype \uc774 \uc22b\uc790\ub85c \ub418\uc5b4 \uc788\uc73c\ub098 \ub300\uc18c\uad00\uacc4\uac00 \uc911\uc694\uce58 \uc54a\uace0, \ubc94\uc8fc\ud615\uc73c\ub85c \uad6c\ubd84\ub418\ubbc0\ub85c\n# object, int64 \uc5d0\uc11c category \uc720\ud615\uc73c\ub85c \ubcc0\uacbd\n# total_book['contentnumber'] = total_book['contentnumber'].astype('category')\n# total_book['devicetype'] = total_book['devicetype'].astype('category')\nfor col in ['contentnumber','devicetype']:\n    total_book[col] = total_book[col].astype('category')","bd2ac42b":"# \uc81c\ubaa9, \ucee8\ud150\uce20 ID, \ud504\ub85c\uadf8\ub7a8 ID \uc758 \ube48 \uac12\uc744 none \uc73c\ub85c \ucc44\uc6c0\nfor col in ['title','section','programid']:\n    total_book[col] = total_book[col].fillna('none')\ntotal_book.isnull().sum().sum()","f2977b83":"total_book['hour']","a48b0f00":"# \uc2dc\uccad\ud55c \uc2dc\uac04\uc744 3\uc2dc\uac04 \ub2e8\uc704\ub85c \ub098\ub208 \uc5f4 \ucd94\uac00 (0~3\uc2dc, 3~6\uc2dc, ..., 21~24\uc2dc)\ntotal_book['hour_type'] = total_book['hour'] \/\/ 3\ntotal_book['hour_type']","c3a6071f":"total_book['weekday'] = total_book['dates'].dt.weekday\ntotal_book['weekday']","d7b166e2":"total_book['programid'].nunique() # 6500 -> 310\ntotal_book['programid'].value_counts()","eabb7ec7":"total_book = total_book.reset_index(drop=True)","c62803d4":"# programid \uc0c1\uc138\ubd84\ub958\ub97c \ub300\ubd84\ub958\uae4c\uc9c0\ub9cc \uad6c\ubd84\ntotal_book['programid'] = total_book['programid'].apply(lambda x: x.split('_')[0])\ntotal_book['programid']","2c776faf":"len(total_book['programid'][0])","549e9b7c":"# total_book['programid'][-100:]\n# \ub300\ud45c\uc801\uc774\uc9c0 \uc54a\uc740 \ud504\ub85c\uadf8\ub7a8\uc740 etc\ub85c \ubd84\ub958\ntotal_book['programid'] = total_book['programid'].apply(lambda x: 'etc' if len(x)>4 else x)\ntotal_book['programid'].value_counts()","759e5af7":"serv_date = total_serv[['uno','registerdate']]\nserv_date.head(3)","f7d78be6":"total_book = pd.merge(total_book, serv_date, on = 'uno', how = 'left')\ntotal_book.head(3)","679f407d":"# date_gap\uc740 \uc11c\ube44\uc2a4 \ub4f1\ub85d\uc77c\ub85c\ubd80\ud130 \uba70\uce60\uc9f8\uc5d0 \ubc29\uc1a1\uc744 \uc2dc\uccad\ud588\ub294\uc9c0 \ub098\ud0c0\ub0c4\ntotal_book['date_gap'] = total_book['dates'] - total_book['registerdate']\ntotal_book['date_gap'] = total_book['date_gap'].apply(lambda x: x.days)\ntotal_book['date_gap']","915e5a8a":"print(total_book['date_gap'].max(), total_book['date_gap'].min())\ntotal_book['date_gap'] = total_book['date_gap'].apply(lambda x: 0 if x < 0 else x)\nprint(total_book['date_gap'].max(), total_book['date_gap'].min())","b1f805f4":"# date_gap\uc5d0 \uc2dc\uccad\uc2dc\uac04\uc744 \uacf1\ud574\uc11c \uadf8 \ubc29\uc1a1\uc5d0 \ub300\ud55c \ud765\ubbf8\ub3c4 \uce21\uc815\ntotal_book['interest'] = total_book['date_gap'] * total_book['viewtime']\ntotal_book['interest']","414d51fb":"total_book = pd.merge(total_book, content, on = 'contentid', how = 'left' )\ntotal_book.head(2)","62f41b2a":"# total_book \uc5d0 movie df\uc758 \uc601\ud654\uc81c\ubaa9 \ubcd1\ud569\nmovie = movie.rename(columns={'movieid':'contentid'})\ntotal_book = pd.merge(total_book, movie, on = 'contentid', how = 'left')\ntotal_book.head(2)","f348dc1c":"print(total_book.shape, movie.shape)\ntotal_book['nation'].isnull().sum()","04493ece":"total_book = total_book.drop(['preview','title_y'], 1)\ntotal_book.head(1)","fc90c57e":"total_book['broadyear'] = total_book['broaddate'].apply(lambda x : str(x)[:4])\ntotal_book['broadyear']","6c912f7f":"# total_book['broadyear'] = total_book['broadyear'].fillna(0) # \ucd94\ud6c4 \ud655\uc778\n# total_book['broadyear'] = total_book['broadyear'].astype(int)\n# total_book['broadyear'].plot()","cf78c511":"# \ubc29\uc601\uc5f0\ub3c4 1014\ub144 data (\uc774\uc0c1\uce58) \uc81c\uac70\nprint(total_book.shape)\ntotal_book = total_book[ total_book['broadyear'] != '1014' ]\nprint(total_book.shape)","ed698b68":"# content\uc5d0\uc11c \ubcd1\ud569\ud55c playtime\uc744 object\uc5d0\uc11c float\uc73c\ub85c \ubcc0\ud658 (\ub300\uc18c\ube44\uad50 \uc758\ubbf8 \uc788\uc74c)\ntotal_book['playtime'] = total_book['playtime'].astype(float)\ntotal_book['playtime']","ae0d6a80":"# \ucd5c\ucd08 \ubc29\uc601\uc77c\uc5d0\uc11c \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \ub0a0\uc9dc \uc0ad\uc81c \ud6c4 object\ub97c datetime \ud615\ud0dc\ub85c \ubcc0\ud658\ntotal_book = total_book[total_book['broaddate'] != '2019-02-29']\ntotal_book = total_book[total_book['broaddate'] != '2017-11-31']\ntotal_book['broaddate'] = pd.to_datetime(total_book['broaddate'])\ntotal_book['broaddate']","5f6912e8":"# \uc2dc\uccad\ud55c \ub0b4\uc6a9\uc774 \uc5bc\ub9c8\ub098 \ucd5c\uc2e0\uc778\uc9c0(\ucd5c\ucd08\ubc29\uc601\uc77c\uc5d0\uc11c \uba70\uce60 \ub5a8\uc5b4\uc84c\ub294\uc9c0) \uacc4\uc0b0\ntotal_book['day_new'] = total_book['dates'] - total_book['broaddate']\ntotal_book['day_new'] = total_book['day_new'].apply(lambda x: x.days)\ntotal_book['day_new']","01031026":"# \uc804\ucc98\ub9ac\uac00 \uc798 \ub410\ub294\uc9c0 bookmark data \ud655\uc778\nprint(total_book.shape)\ntotal_book.head(3)","e598dfa9":"coin.head()","50d17bdf":"### Bookmark data \uc804\ucc98\ub9ac, Content, movie info \ubcd1\ud569","d021cdf7":"### Coin Data \uc804\ucc98\ub9ac","6331d77c":"### Service data \uc804\ucc98\ub9ac (\uacb0\uce21\uce58 \uc81c\uac70, \uc774\uc0c1\uce58 \uc218\uc815, \uc5f4 \ucd94\uac00, Target \uc9c0\uc815)"}}