{"cell_type":{"f0fec12d":"code","59241417":"code","54e7e9be":"code","c4fcf1b4":"markdown","402dd5d3":"markdown","3ef7f93e":"markdown"},"source":{"f0fec12d":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\ndf = pd.read_csv('\/kaggle\/input\/environmental-sensor-data-132k\/iot_telemetry_data.csv')","59241417":"df.replace(['00:0f:00:70:91:0a', '1c:bf:ce:15:ec:4d', 'b8:27:eb:bf:9d:51'], [1, 2, 3], inplace=True)\ndf['time_stamp'] = pd.to_datetime(df['ts'],unit='s')\ndf.drop(columns=['ts'], inplace=True)\n\ndf_1 = df[df.device == 1]\ndf_2 = df[df.device == 2]\ndf_3 = df[df.device == 3]","54e7e9be":"import matplotlib.dates as mdates\n\nplt.style.use('dark_background')\n\nplt.figure(figsize=(20,10))\nax1 = sns.lineplot(df_1.time_stamp, df_1.co, color = 'yellow', label = 'device 1')\nax2 = sns.lineplot(df_2.time_stamp, df_2.co, color = 'red', label = 'device 2')\nax3 = sns.lineplot(df_3.time_stamp, df_3.co, color = 'green', label = 'device 3')\nax3.xaxis.set_major_locator(mdates.DayLocator(interval=1))\nplt.ylabel('carbon monoxide (ppm)', fontsize = 18)\nplt.xlabel('')\nplt.legend(fontsize = 18)\nplt.show()\n\nplt.figure(figsize=(20,10))\nax1 = sns.lineplot(df_1.time_stamp, df_1.humidity, color = 'yellow', label = 'device 1')\nax2 = sns.lineplot(df_2.time_stamp, df_2.humidity, color = 'red', label = 'device 2')\nax3 = sns.lineplot(df_3.time_stamp, df_3.humidity, color = 'green', label = 'device 3')\nax3.xaxis.set_major_locator(mdates.DayLocator(interval=1))\nvals = ax3.get_yticks()\nax3.set_yticklabels(['{:,.0%}'.format(x) for x in vals])\nplt.ylabel('humidity', fontsize = 18)\nplt.legend(fontsize = 18)\nplt.xlabel('')\nplt.show()\n\nplt.figure(figsize=(20,10))\nax1 = sns.lineplot(df_1.time_stamp, df_1.lpg, color = 'yellow', label = 'device 1')\nax2 = sns.lineplot(df_2.time_stamp, df_2.lpg, color = 'red', label = 'device 2')\nax3 = sns.lineplot(df_3.time_stamp, df_3.lpg, color = 'green', label = 'device 3')\nax3.xaxis.set_major_locator(mdates.DayLocator(interval=1))\nplt.ylabel('liquid petroleum gas (ppm)', fontsize = 18)\nplt.xlabel('')\nplt.legend(fontsize = 18)\nplt.show()\n\nplt.figure(figsize=(20,10))\nax1 = sns.lineplot(df_1.time_stamp, df_1.smoke, color = 'yellow', label = 'device 1')\nax2 = sns.lineplot(df_2.time_stamp, df_2.smoke, color = 'red', label = 'device 2')\nax3 = sns.lineplot(df_3.time_stamp, df_3.smoke, color = 'green', label = 'device 3')\nax3.xaxis.set_major_locator(mdates.DayLocator(interval=1))\nplt.ylabel('smoke (ppm)', fontsize = 18)\nplt.xlabel('')\nplt.legend(fontsize = 18)\nplt.show()\n\nplt.figure(figsize=(20,10))\nax1 = sns.lineplot(df_1.time_stamp, df_1.temp, color = 'yellow', label = 'device 1')\nax2 = sns.lineplot(df_2.time_stamp, df_2.temp, color = 'red', label = 'device 2')\nax3 = sns.lineplot(df_3.time_stamp, df_3.temp, color = 'green', label = 'device 3')\nax3.xaxis.set_major_locator(mdates.DayLocator(interval=1))\nplt.ylabel('temperature (fahrenheit)', fontsize = 18)\nplt.xlabel('')\nplt.legend(fontsize = 18)\nplt.show()\n\n","c4fcf1b4":"```text\n| device name       | device ID | environmental conditions                 |\n|-------------------|------------------------------------------------------|\n| 00:0f:00:70:91:0a |     1     | stable conditions, cooler and more humid |\n| 1c:bf:ce:15:ec:4d |     2     | highly variable temperature and humidity |\n| b8:27:eb:bf:9d:51 |     3     | stable conditions, warmer and dryer      |\n```","402dd5d3":"# EDA\nCouple of tasks on my agenda:\n1. Change device names to something less complex\n2. Turn ts column into proper datetime format","3ef7f93e":"Now let's see some plots that shows the sensor readings over time for each of the devices, before we do any sort of outlier removal."}}