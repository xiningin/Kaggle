{"cell_type":{"4b56ac02":"code","fae1a81c":"code","b2af1d66":"code","8333a0e5":"code","238616f1":"code","c1391e32":"code","4c674d95":"code","085260af":"code","7d62a5a6":"code","b7123587":"code","0fd71339":"code","f2979109":"code","50992ec8":"code","b73c3e5f":"code","9095ec1d":"code","26fc6d67":"code","04b9fd13":"code","840e2f7f":"code","3d6bc4d1":"code","8b9a6e36":"code","9f35a1d1":"code","09662431":"markdown","1dd684ab":"markdown","29a69990":"markdown","73bbdb0a":"markdown","53a49ead":"markdown"},"source":{"4b56ac02":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nfrom patsy import dmatrices\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report\nfrom scipy import stats","fae1a81c":"pip install researchpy","b2af1d66":"import researchpy as rp","8333a0e5":"df = pd.read_csv('..\/input\/heart-failure-prediction\/heart.csv')","238616f1":"df.info()","c1391e32":"plt.figure(figsize=(15,10))\nfor col,i in zip(df.columns, range(1,13)):\n    plt.subplot(4,4,i)\n    plt.hist(x= df[col])\n    plt.title(col)\nplt.subplots_adjust(wspace=0.3, hspace=0.5)","4c674d95":"plt.figure(figsize=(10,5))\nsns.heatmap(df.corr(), annot= True)","085260af":"g1 = df[(df.HeartDisease == 0)].Age\ng2 = df[(df.HeartDisease == 1)].Age\n","7d62a5a6":"summary, results = rp.ttest(group1=g1, group2=g2, group1_name='HD 0', group2_name='HD 1')\n\nsummary","b7123587":"plt.ylabel('Heart Disease')\nplt.plot(summary.iloc[0,5:7].values,[0,0], marker='o')\nplt.plot(summary.iloc[1,5:7].values,[1,1], marker= 'o')\nplt.title('Interval plot')\nplt.show()\n","0fd71339":"results","f2979109":"fhd1 = df[(df.HeartDisease == 1)&(df.Sex == 'F')].HeartDisease.sum()\namt_f = df[(df.Sex == 'F')].HeartDisease.count()\nmhd1 = df[(df.HeartDisease == 1)&(df.Sex == 'M')].HeartDisease.sum()\namt_m = df[(df.Sex == 'M')].HeartDisease.count()\n\nplt.figure(figsize=(10,10))\nplt.subplot(1,2,1, title = f'Female HD rate = {fhd1\/amt_f:.2}')\nplt.pie(x=[amt_f,fhd1], labels=[f'Total = {amt_f}',f'Heart Disease = {fhd1}'])\nplt.subplot(1,2,2, title = f'Male HD rate = {mhd1\/amt_m :.2}')\nplt.pie(x=[amt_m,mhd1], labels=[f'Total = {amt_m}',f'Heart Disease = {mhd1}'])\nplt.show()","50992ec8":"ata = df[(df.ChestPainType == 'ATA')&(df.HeartDisease == 1)].HeartDisease.sum()\nnap = df[(df.ChestPainType == 'NAP')&(df.HeartDisease == 1)].HeartDisease.sum()\nasy = df[(df.ChestPainType == 'ASY')&(df.HeartDisease == 1)].HeartDisease.sum()\nta = df[(df.ChestPainType == 'TA')&(df.HeartDisease == 1)].HeartDisease.sum()\n\nplt.figure(figsize=(8,8))\nplt.title('Chest pain')\nsns.barplot(x=df.ChestPainType.unique(), y= [ata, nap, asy, ta])","b73c3e5f":"df1 = pd.get_dummies(df)\ndf1","9095ec1d":"min_max_scaler = MinMaxScaler()\ntransformed = min_max_scaler.fit_transform(df1)\ndf2 = pd.DataFrame(transformed, columns= df1.columns)\ndf2","26fc6d67":"y= df2.HeartDisease\nx= df2.drop(labels= 'HeartDisease', axis= 1)","04b9fd13":"x_train, x_test, y_train, y_test = train_test_split(x,y, random_state= 0)","840e2f7f":"model = LogisticRegression(random_state=0)\nmodel.fit(x_train,y_train)","3d6bc4d1":"y_pred = model.predict(x_test)","8b9a6e36":"accuracy_score(y_test, y_pred)","9f35a1d1":"print(classification_report(y_test, y_pred))","09662431":"## Creating model","1dd684ab":"## What Chest pain got higher cases of HD?","29a69990":"## Is Age influencing Heart Disease?","73bbdb0a":"## What Gender has higher HD rate?","53a49ead":"## Spliting data"}}