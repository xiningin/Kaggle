{"cell_type":{"f459104a":"code","9433a838":"code","d72adbe3":"code","a066ad47":"code","40e4d500":"code","fb0e7133":"code","91306a62":"code","32fba386":"code","8f212fdf":"code","d9b2dc9c":"code","a1e91bb6":"code","94c29f3a":"code","c6030cb1":"code","992a5e27":"code","5dd2d2b1":"code","05ecdc0f":"code","c79aadb1":"code","e0443f37":"code","f7c7e6d0":"code","5f7fff54":"code","8ed5dde1":"code","0ab851b6":"code","29430154":"code","c3aed06f":"code","05b77f88":"code","00669d42":"code","bc1e6d53":"code","cca2dc74":"code","8b8961ee":"code","752a6f46":"code","80e1dbb3":"markdown","ef5b4fcc":"markdown","72812a5f":"markdown","5610eb8c":"markdown"},"source":{"f459104a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9433a838":"import pandas as pd\npd.set_option(\"display.max_rows\", None)\ndf = pd.read_csv('..\/input\/projectgamepersona\/persona.csv')\ndf.head()\n","d72adbe3":"df.shape","a066ad47":"df.info()","40e4d500":"#Ka\u00e7 unique SOURCE vard\u0131r? Frekanslar\u0131 nedir?\ndf[\"SOURCE\"].nunique()\ndf[\"SOURCE\"].value_counts()","fb0e7133":"#Ka\u00e7 unique PRICE vard\u0131r?\ndf[\"PRICE\"].nunique()","91306a62":"#Hangi PRICE'dan ka\u00e7ar tane sat\u0131\u015f ger\u00e7ekle\u015fmi\u015f?\ndf[\"PRICE\"].value_counts()","32fba386":"#Hangi \u00fclkeden ka\u00e7ar tane sat\u0131\u015f olmu\u015f?\ndf[\"COUNTRY\"].value_counts()\ndf.groupby(\"COUNTRY\")[\"PRICE\"].count()","8f212fdf":"#\u00dclkelere g\u00f6re sat\u0131\u015flardan toplam ne kadar kazan\u0131lm\u0131\u015f?\ndf.groupby(\"COUNTRY\")[\"PRICE\"].sum()\ndf.groupby(\"COUNTRY\").agg({\"PRICE\": \"sum\"})\n","d9b2dc9c":"#SOURCE t\u00fcrlerine g\u00f6re g\u00f6re sat\u0131\u015f say\u0131lar\u0131 nedir?\ndf[\"SOURCE\"].value_counts()","a1e91bb6":"#\u00dclkelere g\u00f6re PRICE ortalamalar\u0131 nedir?\ndf.groupby(by=['COUNTRY']).agg({\"PRICE\": \"mean\"})","94c29f3a":"#SOURCE'lara g\u00f6re PRICE ortalamalar\u0131 nedir?\ndf.groupby(by=['SOURCE']).agg({\"PRICE\": \"mean\"})","c6030cb1":"#COUNTRY-SOURCE k\u0131r\u0131l\u0131m\u0131nda PRICE ortalamalar\u0131 nedir?\ndf.groupby(by=[\"COUNTRY\", 'SOURCE']).agg({\"PRICE\": \"mean\"})","992a5e27":"dff = df.loc[[1,2,2],[\"PRICE\",\"SOURCE\",\"COUNTRY\"]]\ndff.head()","5dd2d2b1":"#COUNTRY, SOURCE, SEX, AGE k\u0131r\u0131l\u0131m\u0131nda ortalama kazan\u00e7lar nedir?\ndf.groupby([\"COUNTRY\", 'SOURCE', \"SEX\", \"AGE\"]).agg({\"PRICE\": \"mean\"}).head()","05ecdc0f":"# agg_df = df.groupby([\"COUNTRY\",\"SOURCE\",\"SEX\",\"AGE\"], as_index=False).PRICE.mean().head()\n","c79aadb1":"agg_df = df.groupby(by=[\"COUNTRY\", 'SOURCE', \"SEX\", \"AGE\"]).agg({\"PRICE\": \"mean\"}).sort_values(\"PRICE\", ascending=False)\nagg_df.head()","e0443f37":" #Index'te yer alan isimleri de\u011fi\u015fken ismine \u00e7evirme\nagg_df = agg_df.reset_index()\nagg_df.head()\n    ","f7c7e6d0":"# AGE de\u011fi\u015fkeninin b\u00f6l\u00fcmleri\nbins = [0, 18, 23, 30, 40, agg_df[\"AGE\"].max()]","5f7fff54":"# B\u00f6l\u00fcnen noktalara kar\u015f\u0131l\u0131k isimlendirmelerin ne olaca\u011f\u0131n\u0131 ifade edelim:\nmylabels = ['0_18', '19_23', '24_30', '31_40', '41_' + str(agg_df[\"AGE\"].max())]","8ed5dde1":"# age'i b\u00f6lelim:\nagg_df[\"age_cat\"] = pd.cut(agg_df[\"AGE\"], bins, labels=mylabels)\nagg_df.head()","0ab851b6":"# de\u011fi\u015fken isimleri:\nagg_df.columns","29430154":"agg_df[\"customers_level_based\"] = [row[0].upper() + \"_\" + row[1].upper() + \"_\" + row[2].upper() + \"_\" + row[5].upper() for row in agg_df.values]\nagg_df.head()","c3aed06f":"# Gereksiz de\u011fi\u015fkenleri \u00e7\u0131karal\u0131m:\nagg_df = agg_df[[\"customers_level_based\", \"PRICE\"]]\nagg_df.head()\n\n","05b77f88":"agg_df[\"customers_level_based\"].value_counts()","00669d42":"agg_df = agg_df.groupby(\"customers_level_based\").agg({\"PRICE\": \"mean\"})\nagg_df = agg_df.reset_index()\nagg_df.head()","bc1e6d53":"agg_df[\"customers_level_based\"].value_counts()\nagg_df.head()","cca2dc74":"#Yeni m\u00fc\u015fterileri (USA_ANDROID_MALE_0_18) segmentlere ay\u0131r\u0131r\u0131z.\nagg_df[\"SEGMENT\"] = pd.qcut(agg_df[\"PRICE\"], 4, labels=[\"D\", \"C\", \"B\", \"A\"])\nagg_df.head(30)\nagg_df.groupby(\"SEGMENT\").agg({\"PRICE\": \"mean\"})","8b8961ee":"# 33 ya\u015f\u0131nda ANDROID kullanan bir T\u00fcrk kad\u0131n\u0131 hangi segmente aittir ve ortalama ne kadar gelir kazand\u0131rmas\u0131 beklenir?\nnew_user = \"TUR_ANDROID_FEMALE_31_40\"\nagg_df[agg_df[\"customers_level_based\"] == new_user]","752a6f46":"# 35 ya\u015f\u0131nda IOS kullanan bir Frans\u0131z kad\u0131n\u0131 hangi segmente ve ortalama ne kadar gelir kazand\u0131rmas\u0131 beklenir?\nnew_user = \"FRA_IOS_FEMALE_31_40\"\nagg_df[agg_df[\"customers_level_based\"] == new_user]","80e1dbb3":"# LEVEL BASED PERSONA TANIMLAMA, BASIT SEGMENTASYON ve KURAL TABANLI SINIFLANDIRMA\n\nProje Amac\u0131:\n* Persona kavram\u0131n\u0131 d\u00fc\u015f\u00fcnmek.\n* LEVEL BASED PERSONA TANIMLAMA: Kategori seviyelerine (Level) g\u00f6re yeni m\u00fc\u015fteri tan\u0131mlar\u0131 yapabilmek.\n* BASIT SEGMENTASYON: qcut fonksiyonunu kullanarak basit\u00e7e yeni m\u00fc\u015fteri tan\u0131mlar\u0131n\u0131 segmentlere ay\u0131rmak.\n* KURAL TABANLI SINIFLANDIRMA: Yeni bir m\u00fc\u015fteri geldi\u011finde bu m\u00fc\u015fteriyi segmentlere g\u00f6re s\u0131n\u0131fland\u0131rmak.","ef5b4fcc":"**DE\u011e\u0130\u015eKENLER**\n* PRICE \u2013 M\u00fc\u015fterinin harcama tutar\u0131\n* SOURCE \u2013 M\u00fc\u015fterinin ba\u011fland\u0131\u011f\u0131 cihaz t\u00fcr\u00fc\n* SEX \u2013 M\u00fc\u015fterinin cinsiyeti\n* COUNTRY \u2013 M\u00fc\u015fterinin \u00fclkesi\n* AGE \u2013 M\u00fc\u015fterinin ya\u015f\u0131\n","72812a5f":"\u0130\u015f Problemi\nBir oyun \u015firketi m\u00fc\u015fterilerinin baz\u0131 \u00f6zelliklerini kullanarak\nseviye tabanl\u0131 (level based) yeni m\u00fc\u015fteri tan\u0131mlar\u0131\n(persona) olu\u015fturmak ve bu yeni m\u00fc\u015fteri tan\u0131mlar\u0131na\ng\u00f6re segmentler olu\u015fturup bu segmentlere g\u00f6re yeni\ngelebilecek m\u00fc\u015fterilerin \u015firkete ortalama ne kadar\nkazand\u0131rabilece\u011fini tahmin etmek istemektedir.","5610eb8c":"# Kural Tabanl\u0131 S\u0131n\u0131fland\u0131rma ile \n# Potansiyel M\u00fc\u015fteri Getirisi Hesaplama"}}