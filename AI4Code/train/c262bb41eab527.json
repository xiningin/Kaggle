{"cell_type":{"65f53409":"code","9c297fcd":"code","1e4677a6":"code","67f045fb":"code","13023f37":"code","76e0a294":"code","a28ecc1a":"code","03e92219":"code","e239c744":"code","bf479dac":"code","0cbc17dc":"code","3ce24392":"code","8171a8c4":"code","e33aa45a":"code","179fdd06":"code","6af4ce5d":"code","db6890ab":"code","e1dcf3c3":"code","ae6c231d":"code","df524dd5":"code","85b95a20":"code","f5d8465d":"code","fc53dc32":"code","ad0cc975":"code","2bf0d0c6":"code","edd97f6d":"code","fefd649e":"markdown"},"source":{"65f53409":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport tensorflow as tf\nfrom sklearn.model_selection import train_test_split\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","9c297fcd":"train = pd.read_csv(\"..\/input\/train.csv\")\ntest  = pd.read_csv(\"..\/input\/test.csv\")\nsubmit =  pd.read_csv(\"..\/input\/sample_submission.csv\")","1e4677a6":"test.head()","67f045fb":"labels = train.target\ntrain_df = train.drop(columns=['ID_code','target'])\ntest_df = test.drop(columns=['ID_code'])","13023f37":"feat_cols= []\nfor col in train_df.columns:\n    feat_cols.append(tf.feature_column.numeric_column(col))","76e0a294":"X_train, X_test, y_train, y_test = train_test_split(train_df,labels,test_size=0.33, random_state=101)","a28ecc1a":"from sklearn.preprocessing import MinMaxScaler\nscaler= MinMaxScaler()","03e92219":"scaler.fit(X_train)","e239c744":"X_train = pd.DataFrame(data= scaler.transform(X_train),columns=X_train.columns,index=X_train.index)\nX_test = pd.DataFrame(data= scaler.transform(X_test),columns=X_test.columns,index=X_test.index)","bf479dac":"input_func = tf.estimator.inputs.pandas_input_fn(x= X_train,y=y_train,batch_size=100,num_epochs=1000,shuffle=False)","0cbc17dc":"#model = tf.estimator.LinearClassifier(feature_columns=feat_cols,n_classes=2)","3ce24392":"#model.train(input_fn=input_func,steps=1000)","8171a8c4":"eval_input_func = tf.estimator.inputs.pandas_input_fn(\n      x=X_test,\n      y=y_test,\n      batch_size=100,\n      num_epochs=1,\n      shuffle=False)","e33aa45a":"#model.evaluate(eval_input_func)","179fdd06":"135000\/(4* 201)","6af4ce5d":"dnn_model = tf.estimator.DNNClassifier(hidden_units=[336,168,84,42],feature_columns=feat_cols,n_classes=2)","db6890ab":"dnn_model.train(input_fn= input_func,steps=10000)","e1dcf3c3":"dnn_model.evaluate(eval_input_func)","ae6c231d":"test_df = pd.DataFrame(data= scaler.transform(test_df),columns=test_df.columns,index=test_df.index)","df524dd5":"predict_input_func = tf.estimator.inputs.pandas_input_fn(x=test_df,batch_size=100,num_epochs=1,shuffle=False)","85b95a20":"predictions = dnn_model.predict(input_fn=predict_input_func)","f5d8465d":"results = list(predictions)","fc53dc32":"results[1:10]","ad0cc975":"prediction= [i['probabilities'][1] for i in results]","2bf0d0c6":"submit['target'] = prediction\nsubmit.to_csv(\"DNN2.csv\",index=False)\nsubmit.head()","edd97f6d":"submit[submit.target>0.5].head(20)","fefd649e":"Nh = Ns\/ (a * (Ni + No))\n\nNh - number of hidden neurons\nNs- number of samples in training data set\nNi - nnumber of input neurons\nNo - Number of output neurons \na - scaling factor varies from  2 -10 "}}