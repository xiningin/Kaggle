{"cell_type":{"db05cb93":"code","899893e2":"code","5cf66bf4":"code","64e6dc12":"code","0dc87751":"code","4b416618":"code","f19d0485":"code","71675f5a":"code","d41d6db6":"code","e7249c87":"code","a60e242d":"code","5183a107":"code","8f8f7552":"code","6fafc3c3":"code","e8af3ba8":"code","d05dd174":"code","2979e128":"code","c3bbf728":"code","778620e8":"markdown","95f4d750":"markdown","c71aa1e0":"markdown","c198c454":"markdown","fc74244a":"markdown","846a8cea":"markdown","56061abc":"markdown","94d31290":"markdown","618b73d8":"markdown","2bbf4794":"markdown","7b2407b6":"markdown","efec32c7":"markdown","0f7ebbe4":"markdown","42fdfa08":"markdown","ed05c1e8":"markdown","9b148bdd":"markdown","9fcf729e":"markdown","36c02726":"markdown"},"source":{"db05cb93":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\nfrom sklearn.preprocessing import StandardScaler\nimport seaborn as sns; sns.set()  # for plot styling\n%matplotlib inline\nplt.rcParams['figure.figsize'] = (16, 9)\nplt.style.use('ggplot')\nfrom sklearn.cluster import KMeans\nimport os\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import AgglomerativeClustering\nfrom scipy.cluster.hierarchy import dendrogram, linkage\nfrom sklearn.metrics import silhouette_score\n\n\n#print(os.listdir(\"..\/input\"))","899893e2":"dataset=pd.read_csv('..\/input\/Mall_Customers.csv')\npd.set_option('display.max_columns', 10)\nprint(dataset.keys())\nprint(len(dataset))\nprint(dataset.head())","5cf66bf4":"dataset.describe().transpose()","64e6dc12":"print(dataset['Gender'].unique())\ndataset['Gender_code'] = np.where(dataset['Gender']=='Male', 1,0)","0dc87751":"scaler = StandardScaler()\ndf = pd.DataFrame(scaler.fit_transform(dataset[[\"Age\",\"Annual Income (k$)\",\"Spending Score (1-100)\"]]))\ndf.columns = [\"age\",\"income\",\"spending\"]\ndf.insert(0, \"gender\", dataset[\"Gender_code\"])\ndf.head()","4b416618":"# Histograms\nplot_gender = sns.distplot(df[\"gender\"], label=\"gender\",color=\"grey\")\nplot_age = sns.distplot(df[\"age\"], label=\"age\",color=\"blue\")\nplot_income = sns.distplot(df[\"income\"], label=\"income\",color=\"lightgreen\")\nplot_spend = sns.distplot(df[\"spending\"], label=\"spend\",color=\"orange\")\nplt.xlabel('')\nplt.legend()\nplt.show()","f19d0485":"# Violin plot\nf, axes = plt.subplots(2,2, figsize=(12,6), sharex=True, sharey=True)\nv1 = sns.violinplot(data=df, x=\"gender\", color=\"gray\",ax=axes[0,0])\nv2 = sns.violinplot(data=df, x=\"age\", color=\"skyblue\",ax=axes[0,1])\nv3 = sns.violinplot(data=df, x=\"income\",color=\"lightgreen\", ax=axes[1,0])\nv4 = sns.violinplot(data=df, x=\"spending\",color=\"pink\", ax=axes[1,1])","71675f5a":"wcss = []\nk_s = [i*i for i in range(1,8)]\nprint(k_s)\nfor i in k_s:\n    km=KMeans(n_clusters=i,init='k-means++', max_iter=300, n_init=10, random_state=0)\n    km.fit(df)\n    wcss.append(km.inertia_)\nplt.plot(k_s,wcss)\nplt.title('Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('wcss')\nplt.show()","d41d6db6":"wcss = []\nk_s = [4,7,9]\nprint(k_s)\nfor i in k_s:\n    km=KMeans(n_clusters=i,init='k-means++', max_iter=300, n_init=10, random_state=0)\n    km.fit(df)\n    wcss.append(km.inertia_)\nplt.plot(k_s,wcss)\nplt.title('Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('wcss')\nplt.show()","e7249c87":"wcss = []\nk_s = [4,6,7]\nprint(k_s)\nfor i in k_s:\n    km=KMeans(n_clusters=i,init='k-means++', max_iter=300, n_init=10, random_state=0)\n    km.fit(df)\n    wcss.append(km.inertia_)\nplt.plot(k_s,wcss)\nplt.title('Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('wcss')\nplt.show()","a60e242d":"wcss = []\nk_s = [4,5,6]\nprint(k_s)\nfor i in k_s:\n    km=KMeans(n_clusters=i,init='k-means++', max_iter=300, n_init=10, random_state=0)\n    km.fit(df)\n    wcss.append(km.inertia_)\nplt.plot(k_s,wcss)\nplt.title('Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('wcss')\nplt.show()","5183a107":"km2 = KMeans(n_clusters=2,init='k-means++', max_iter=300, n_init=10, random_state=0)\nlabels = km2.fit_predict(df[[\"gender\",\"age\",\"income\",\"spending\"]])\ndf2 = df\ndf2[\"labels\"] = labels\nsns.pairplot(df2,hue=\"labels\",vars=[\"gender\",\"age\",\"income\",\"spending\"])\nss = silhouette_score(df2[[\"gender\",\"age\",\"income\",\"spending\"]], df2[\"labels\"], metric=\"euclidean\")\nprint(f\"Silhouette Score = {ss:.3f}\")","8f8f7552":"km3 = KMeans(n_clusters=3,init='k-means++', max_iter=300, n_init=10, random_state=0)\nlabels = km3.fit_predict(df[[\"age\",\"income\",\"spending\"]])\ndf3 = df\ndf3[\"labels\"] = labels\nsns.pairplot(df3,hue=\"labels\",vars=[\"age\",\"income\",\"spending\"])\nss = silhouette_score(df3[[\"age\",\"income\",\"spending\"]], df3[\"labels\"], metric=\"euclidean\")\nprint(f\"Silhouette Score = {ss:.3f}\")","6fafc3c3":"km4 = KMeans(n_clusters=4,init='k-means++', max_iter=300, n_init=10, random_state=0)\nlabels = km4.fit_predict(df[[\"age\",\"income\",\"spending\"]])\ndf4 = df\ndf4[\"labels\"] = labels\nsns.pairplot(df4,hue=\"labels\",vars=[\"age\",\"income\",\"spending\"])\nss = silhouette_score(df4[[\"age\",\"income\",\"spending\"]], df4[\"labels\"], metric=\"euclidean\")\nprint(f\"Silhouette Score = {ss:.3f}\")","e8af3ba8":"km5 = KMeans(n_clusters=5,init='k-means++', max_iter=300, n_init=10, random_state=0)\nlabels = km5.fit_predict(df[[\"age\",\"income\",\"spending\"]])\ndf5 = df\ndf5[\"labels\"] = labels\nsns.pairplot(df5,hue=\"labels\",vars=[\"age\",\"income\",\"spending\"])\nss = silhouette_score(df5[[\"age\",\"income\",\"spending\"]], df5[\"labels\"], metric=\"euclidean\")\nprint(f\"Silhouette Score = {ss:.3f}\")\n","d05dd174":"sns.pairplot(df5,hue=\"gender\",vars=[\"age\",\"income\",\"spending\"])","2979e128":"dendrogram = dendrogram(linkage(df[[\"gender\",\"age\",\"income\",\"spending\"]], method='ward'))","c3bbf728":"ward = AgglomerativeClustering(n_clusters=7,linkage='ward').fit(df)\ndf_ward = df\ndf_ward[\"labels\"]=label\nlabel = ward.labels_\n# print(np.unique(df_ward[\"labels\"]))\n\nss = silhouette_score(df_ward[[\"gender\",\"age\",\"income\",\"spending\"]], df_ward[\"labels\"], metric=\"euclidean\")\nprint(f\"Silhouette Score = {ss:.3f}\")\n\nsns.pairplot(df_ward,hue=\"labels\",vars=[\"gender\",\"age\",\"income\",\"spending\"])","778620e8":"### Import Modules","95f4d750":"Age (more younger people) and gender (more females) are skewed.  \nIncome and spending are relatively unskewed.","c71aa1e0":"We finally take a look at gender and find it is quite uniformly distributed in all five clusters and thus continue ignoring it.","c198c454":"Plot two-way scatters for the 7 clusters","fc74244a":"Once again, not much differentiation between the clusters is found on gender.  \n**Final Clusters according to Hierarchial Clustering**  \n**Cluster 0:** all ages, high income, low spending  \n**Cluster 1:** all ages, low income, low spending  \n**Cluster 2:** young, high income, high spending  \n**Cluster 3:** young, mid income, mid spending  \n**Cluster 4:** mid age, mid income, mid spending  \n**Cluster 5:** young, low income, high spending  \n**Cluster 6:** old, mid income, mid spending  \n  \nNote: Silhouette Score achieved by 5-means was higher at 0.417 compared to that of 7 hierarchial clusters at 0.300.\n","846a8cea":"### Load and Preprocess Data","56061abc":"For K=3, the conclusions drawn from K=2 plots are reiterated.\nFurthermore, we find that a mid-age group has exceptionally high income and spending.","94d31290":"Again as identified by K=2, one of the highest income groups also includes a faction of older people. However, they have very low spending.","618b73d8":"Descriptive statistics","2bbf4794":"Younger people spend more.  \n3 income groups exist in younger people. The lower income and upper income group spends more.  \nThe mid-income group spends less.\n\nOlder people spend less.  \n3 income groups exist in older people. The lower income and upper income group spends less.\nThe mid-income group spends more (and similar to the spending of the younger mid-income group)\n\nYounger people earn less than older people but there is some overlap in earning.\n\nThe plots suggest 3 - 5 natural clusters\n\nGender plots are not very clear in drawing conclusions. I am dropping those and will assess them at the end.","7b2407b6":"**Applying K-Means**  \nWhile optimal K is 4 or 5, we begin with K=2 and move upwards to identify groups better. ","efec32c7":"**Final Clusters according to K-means**  \n**Cluster 0:** people of all ages with high income and low spending  \n**Cluster 1:** older people with mid income and mid spending  \n**Cluster 2:** younger people with low income and high spending  \n**Cluster 3:** mostly older people with low income and low spending  \n**Cluster 4:** younger people with high income and high spending  \n\nThese clusters can now be used to develop a better marketing strategy.  \nFor example, people in Cluster 2 (young + low income + high spend) can be given discounts through e-vouchers which will be accessible for them and reward their loyalty.  \nPeople in Cluster 0 should be surveyed to find why they are not making purchases despite high income. This could highlight a problem in marketing strategy for these customers.\n\n","0f7ebbe4":"K=5 further clarifies an evident cluster of old people with mid income and mid spending.","42fdfa08":"### Hierarchial Clustering\nMake dendrogram.  \nTo identify number of clusters to keep, pick the longest vertical line. Draw a horizontal line towards its bottom. The number of vertical lines this horizontal line crosses are the number of clusters. In this case, the number of clusters are 7.","ed05c1e8":"### K-means\n**Elbow Method for Finding K for K-Means**","9b148bdd":"Closer look at the data","9fcf729e":"Scale data","36c02726":"The optimal number of clusters is 4 or 5."}}