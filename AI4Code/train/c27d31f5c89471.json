{"cell_type":{"76ab3547":"code","4e8df9b4":"code","d74baa58":"code","98968056":"code","21176791":"code","4f164aca":"code","d20df5eb":"code","e4bb0576":"code","381defa2":"code","34f34557":"code","dc264370":"code","3d158e40":"code","272a798c":"code","9f38eb49":"code","c7823760":"code","dbef3450":"code","7d3faf08":"code","ee7689f1":"code","da0bf78b":"markdown","12ae5c84":"markdown","5cc76c5e":"markdown","61a66e67":"markdown","76bae943":"markdown","da6f54f1":"markdown","224764e4":"markdown","9dc1bba4":"markdown"},"source":{"76ab3547":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\npd.options.display.max_columns = None\npd.options.display.max_rows = None","4e8df9b4":"df_train = pd.read_csv(\"..\/input\/train_set.csv\")\ndf_test = pd.read_csv(\"..\/input\/test_set.csv\")","d74baa58":"plt.hist(df_train.PRICE, bins=100, log=True)","98968056":"def price_label(price):\n    if price > 10**8:\n        return '3';\n    elif price > 5 * 10**7:\n        return '2';\n    else:\n        return '1';","21176791":"df_train['PRICELABEL'] = df_train.PRICE.apply(lambda x: price_label(x)).values.copy()","4f164aca":"pd.crosstab(df_train.PRICE.apply(lambda x: price_label(x)), df_train.ZIPCODE)","d20df5eb":"pd.crosstab(df_train.PRICE.apply(lambda x: price_label(x)), df_train.ASSESSMENT_NBHD)","e4bb0576":"pd.crosstab(df_train.PRICE.apply(lambda x: price_label(x)), df_train.SOURCE)","381defa2":"pd.crosstab(df_train.PRICE.apply(lambda x: price_label(x)), df_train.CENSUS_TRACT)","34f34557":"pd.crosstab(df_train.PRICE.apply(lambda x: price_label(x)), df_train.QUALIFIED)","dc264370":"df_tmp = pd.crosstab([ df_train.QUALIFIED, df_train.SOURCE, df_train.CENSUS_TRACT, df_train.LATITUDE, df_train.LONGITUDE], df_train['PRICE'].apply(lambda x: price_label(x)))\ndf_tmp[np.logical_or(df_tmp['3']>0, df_tmp['2']>0)]","3d158e40":"df_tmp = pd.crosstab([df_train.CENSUS_TRACT, df_train.SALEDATE, df_train.SALE_NUM, df_train.PRICE], df_train.PRICELABEL, colnames=['PLICELABEL'])\ndf_tmp[np.logical_or(df_tmp['3']>0, df_tmp['2']>0)]","272a798c":"import folium\n_map = folium.Map(location=[38.923, -77.05], zoom_start=14)\nfolium.Marker([38.936070, -77.073946], popup='<i>\u30e9\u30d9\u30eb3\u7269\u4ef6<\/i>').add_to(_map)\nfolium.Marker([38.937773, -77.075368], popup='<i>\u30e9\u30d9\u30eb3\u7269\u4ef6<\/i>').add_to(_map)\nfolium.Marker([38.904456, -77.031057], popup='<i>\u30e9\u30d9\u30eb3\u7269\u4ef6<\/i>').add_to(_map)\n_map","9f38eb49":"len(df_test.query('CENSUS_TRACT == 1002.0 and SALEDATE == \"2007-04-10 00:00:00\" and SALE_NUM == 1').index)","c7823760":"len(df_test.query('CENSUS_TRACT == 10100.0 and SALEDATE == \"2015-11-17 00:00:00\" and SALE_NUM == 2').index)","dbef3450":"def out_highest_price(df):\n    df_label3_ids = df.query('CENSUS_TRACT == 1002.0 and SALEDATE == \"2007-04-10 00:00:00\"').Id.values\n    df_label2_ids = df.query('CENSUS_TRACT == 10100.0 and SALEDATE == \"2015-11-17 00:00:00\" and SALE_NUM == 2').Id.values\n    \n    df_high_predict =  pd.DataFrame(np.r_[\n        np.ones(len(df_label3_ids)) * 137427545.0,\n        np.ones(len(df_label2_ids)) * 53969391.0\n    ], index=np.r_[df_label3_ids, df_label2_ids], columns=[\"PRICE\"])\n    \n    df_other = df[df.Id.isin(np.r_[df_label3_ids, df_label2_ids]) == False]\n    return df_other, df_high_predict","7d3faf08":"df_other, df_high_predict = out_highest_price(df_test)\ndf_high_predict.head()","ee7689f1":"df_other.head()","da0bf78b":"## \u5185\u5bb9\ntrain\u30c7\u30fc\u30bf\u306e\u4e2d\u306b\u3001price\u304c\u660e\u3089\u304b\u306b\u4ed6\u306e\u7269\u4ef6\u3068\u306f\u9055\u3046\u7fa4\u304c2\u3064\u5b58\u5728\u3057\u305f  \n\u305d\u306e\u7269\u4ef6\u306e\u5185\u5bb9\u3092\u8abf\u67fb\u3059\u308b","12ae5c84":"### \u5730\u56f3\u3067\u78ba\u8a8d","5cc76c5e":"## \u9ad8\u984d\u7269\u4ef6\u306e\u7d5e\u308a\u8fbc\u307f\npandas\u306ecrosstab\u3092\u4f7f\u3063\u3066\u3001\u69d8\u3005\u306a\u30ab\u30e9\u30e0\u3068\u306e\u30af\u30ed\u30b9\u96c6\u8a08\u8868\u3092\u4f5c\u308a\u3001\n\n| PRICELABEL | QUALIFIED | SOURCE | ZIPCODE | ASSESSMENT_NBHD | CENSUS_TRACT | LATITUDE, LONGITUDE | SALE_NUM | PRICE |\n|:--:|:--:|:--:|:--:|:--:|\n| 3 | U | Condominium | 20016 | Cleveland Park | 1002 | [38.936070, -77.073946], [38.937773, -77.075368] | 1 | 137427545.0 |\n| 2 | U  | Condominium | 20005 | Central-tri 3 | 10100 | [38.904456\t-77.031057] | 2 | 53696391.0\u304c\uff11\u500b 53969391.0\u304c63\u500b |\n\n### \u6700\u7d42\u7d5e\u308a\u8fbc\u307f\u6761\u4ef6\n- PRICELABEL = 3\n\n| column | \u4e00\u81f4\u6761\u4ef6 |\n|:--:|:--:|\n| CENSUS_TRACT | 1002.0 |\n| SALEDATE | 2007-04-10 00:00:00 |\n\n\u3053\u306e\u6642\u3001PRICE\u306f$137427545.0$\n\n- PRICELABEL = 2\n\n| column | \u4e00\u81f4\u6761\u4ef6 |\n|:--:|:--:|\n| CENSUS_TRACT | 10100.0 |\n| SALEDATE | 2015-11-17 00:00:00 |\n| SALE_NUM | 2 |\n\n\u3053\u306e\u6642\u3001PRICE\u306f$53969391.0$  \n\u5099\u8003\uff1aPRICE\u304c$53696391.0$\u306e\u7269\u4ef6\u304c\uff11\u500b\u3042\u3063\u305f\u304c\u3001\u5165\u529b\u30df\u30b9\u304c\u60f3\u5b9a\u3055\u308c\u308b\u305f\u3081\u3001\u591a\u6570\u6c7a\u3067\u9664\u5916","61a66e67":"### \u30af\u30ed\u30b9\u96c6\u8a08\u8868\u3092\u4f7f\u3063\u305f\u7d5e\u308a\u8fbc\u307f","76bae943":"### test\u30c7\u30fc\u30bf\u3067\u3082\u540c\u69d8\u306e\u6761\u4ef6\u3067\u7d5e\u308a\u8fbc\u3081\u308b\u3053\u3068\u3092\u78ba\u8a8d","da6f54f1":"# \u91d1\u984d\u8abf\u67fb\n\u62c5\u5f53\uff1a\u6881\u6728  \n\u65e5\u4ed8\uff1a2018\/1\/28","224764e4":"## \u9ad8\u984d\u7269\u4ef6\u306e\u30e9\u30d9\u30eb\u4ed8\u3051\n100M\uff04(\u7d041200\u5104\u5186)\u4ee5\u4e0a\u306e\u7269\u4ef6\u3092\u30e9\u30d9\u30eb3  \n100M\uff04(\u7d041200\u5104\u5186)\u4ee5\u4e0b50M\uff04(\u7d0460\u5104\u5186)\u4ee5\u4e0a\u306e\u7269\u4ef6\u3092\u30e9\u30d9\u30eb2  \n\u305d\u308c\u4ee5\u4e0b\u3092\u30e9\u30d9\u30eb\uff11\u3068\u3059\u308b","9dc1bba4":"## \u95a2\u6570\u4f5c\u6210\n\u3053\u306e\u7d50\u679c\u304b\u3089\u3001PRICELABEL\u304c2\u30683\u306e\u6642\u306f\u4e00\u5b9a\u306ePRICE\u3092\u51fa\u529b\u3057\u3001\u305d\u308c\u4ee5\u5916\u306edataframe\u3082\u51fa\u529b\u3059\u308b\u95a2\u6570\u3092\u4f5c\u6210\u3059\u308b"}}