{"cell_type":{"ae172b78":"code","0f1d606b":"code","b3911b5b":"code","ecc56180":"code","c02bfd67":"code","c89d5e54":"code","01ada490":"code","2c1e24d7":"code","861389d8":"code","b2834b71":"code","b5e54cbb":"code","343e5350":"code","27ecaac7":"code","ba6090c2":"code","6bb90574":"code","6d6204d0":"code","8e7bbb61":"code","afc375ce":"code","cdb50139":"code","b069524e":"markdown","567380ae":"markdown","fcbb0d00":"markdown","276ef9d1":"markdown","83b040b7":"markdown","be3e4aa0":"markdown","ab994d8e":"markdown","e4b5c0c4":"markdown","45af57a6":"markdown","aec58214":"markdown","84eb1e58":"markdown","19c56335":"markdown","ea924ba4":"markdown","bc4f5b3d":"markdown","ef22e96e":"markdown","062449be":"markdown","127eee04":"markdown","3ba2e1fe":"markdown","2b3bcd52":"markdown","ce0653ee":"markdown"},"source":{"ae172b78":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\n\n#Suppressing all warnings\nwarnings.filterwarnings(\"ignore\")\n\n%matplotlib inline","0f1d606b":"df = pd.read_csv('..\/input\/windows-store\/msft.csv')","b3911b5b":"df.head()","ecc56180":"df.describe(include='all')","c02bfd67":"df.info()","c89d5e54":"df[df['Name'].isna()]","01ada490":"df.drop(5321, axis=0, inplace = True)","2c1e24d7":"df[\"Name\"].value_counts()[df[\"Name\"].value_counts() > 1]","861389d8":"df.loc[df['Name'].isin(df[\"Name\"].value_counts()[df[\"Name\"].value_counts() > 1].index.values.tolist())].sort_values(by='Name')","b2834b71":"sns.set(rc={'figure.figsize':(12,5)})\nax = sns.countplot(x=\"Category\", data=df.sort_values(by='Category'), order=df.Category.value_counts().index)\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nplt.show()","b5e54cbb":"len(df[df['Price']=='Free'])\/len(df['Price'])*100","343e5350":"df.loc[~df[\"Price\"].isin(['Free']), \"Price\"] = \"Paid\"\nsns.set(rc={'figure.figsize':(12,5)})\nax = sns.countplot(x=\"Category\", hue=\"Price\", data=df)\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nplt.show()","27ecaac7":"sns.set(rc={'figure.figsize':(12,5)})\nax = sns.countplot(x=\"Rating\", data=df.sort_values(by='Rating'), order=df.Rating.value_counts().index)\n#ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nplt.show()","ba6090c2":"print(\"Mean Rating for Free Apps:\", round(df[df['Price']=='Free'].Rating.mean(),2))\nprint(\"Mean Rating for Paid Apps:\", round(df[df['Price']=='Paid'].Rating.mean(),2))\nprint(\"Overall Mean Rating:\", round(df.Rating.mean(), 2))","6bb90574":"df['Date'].dtype","6d6204d0":"df[\"Date\"] = pd.to_datetime(df[\"Date\"])","8e7bbb61":"months=['January', 'February', 'March', 'April', 'May', 'June', 'July','August', 'September', 'October', 'November', 'December']\ndf['Launch Month']=[months[i.month-1] for i in df[\"Date\"]]\ndf['Launch Year']=[i.year for i in df[\"Date\"]]","afc375ce":"sns.set(rc={'figure.figsize':(12,5)})\nax.set_title('Applications Launched Each Year')\nax = sns.countplot(x=\"Launch Year\", data=df.sort_values(by='Launch Year'))\nax.axhline(df['Launch Year'].value_counts().mean(), color='green', linewidth=2)\nax.margins(0.05)\nax.annotate('Mean: {:0.2f}'.format(df['Launch Year'].value_counts().mean()), xy=(10.7, df['Launch Year'].value_counts().mean()+40),\n            horizontalalignment='right', verticalalignment='center',\n            )\n#ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nplt.show()","cdb50139":"sns.set(rc={'figure.figsize':(12,5)})\nax = sns.countplot(x=\"Launch Month\", data=df.sort_values(by='Launch Month'), order=months)\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nax.axhline(df['Launch Month'].value_counts().mean(), color='green', linewidth=2)\nax.margins(0.05)\nax.annotate('Mean: {:0.2f}'.format(df['Launch Month'].value_counts().mean()), xy=(11.5, df['Launch Month'].value_counts().mean()+20),\n            horizontalalignment='right', verticalalignment='center',\n            )\n\nplt.show()","b069524e":"## Prices","567380ae":"There are three names which occur more than once in the dataset.\n## Checking Records with duplicate names","fcbb0d00":"### Percent of Free applications","276ef9d1":"Out of 5322 rows, one row seems to have mostly all null values.","83b040b7":"## Thank you for viewing my notebook.\n## This is my first notebook on Kaggle so any thoughts would be appreciated.","be3e4aa0":"## Checking for duplicate entries in data","ab994d8e":"First we convert Date column to the correct data type, and make new columns for months and years","e4b5c0c4":"## Importing Modules and Data","45af57a6":"## Application Launch Stats","aec58214":"Mean rating for 'Paid' applications is considerably lower than the overall mean rating.","84eb1e58":"Since 97% of the applications are free, we can substitute other prices with a common value like 'Paid'","19c56335":"## Initial Review of Data","ea924ba4":"We will split Month and Year from Date as separate columns for analysis","bc4f5b3d":"Only the categories 'Books', 'Business', and 'Developer Tools' have Paid application in the Windows store","ef22e96e":"Music, Books, and Business are the most popular categories.","062449be":"## Categories","127eee04":"## Ratings","3ba2e1fe":"The name 'http:\/\/microsoft.com' seems to be a replacement for applications with missing names. That is not a problem since name is mostly irrelevant in this data analysis.\n\nThe entries for the applications with name 'Multilingual Translator' are identical except columns 'No of people Rated' and 'Price'. These could be a free and paid version from the same application developer, so this is not an issue.\n\nData contains no real duplicates.","2b3bcd52":"2016 witnessed the most applications launches in the past decade.\n\n2019 witnessed lowest number of application launches since 2012.\n\n2020 data is only available till June.","ce0653ee":"This seems to be a blank record so we can drop this"}}