{"cell_type":{"bcee29c5":"code","4b180529":"code","5db0ac1d":"code","b4a0d2a4":"code","21d29bb4":"code","ecd7008e":"code","7b0541a8":"code","13f98c24":"code","5cc73737":"code","09e4da15":"code","40c5de1f":"code","8141944a":"code","93206c86":"code","de8808c6":"code","82a0f215":"code","50d97df7":"code","c53b2e9a":"code","e07c610d":"code","62bf79a1":"code","1c1aac60":"code","9f6c0d6a":"code","b5fe28f5":"code","14457808":"code","53030732":"code","db037274":"code","10f9c8bb":"code","3741a6f0":"code","6b6218d0":"code","b1c81b53":"code","15239990":"code","b2c61ec5":"code","912e4981":"code","dd8cd644":"code","df7005fe":"code","6acd8cce":"code","336b9764":"code","a7ab89a9":"code","46c63d47":"code","312f4c5b":"code","a68225f9":"code","89cac51e":"code","4914fea3":"code","f0e0bcc4":"code","3216d71a":"code","0e83f3d2":"code","440c0a34":"code","d74a3d88":"code","e6b2edca":"code","2c9269e1":"code","b0abcd79":"code","83da1b85":"code","c7cb954c":"code","d587e498":"code","0b4faeef":"code","106f1657":"code","15f47f08":"code","c8a84abf":"code","506be72a":"code","e669aa45":"code","54dfaf8a":"code","0d773205":"code","8cafa09c":"code","6fb69283":"code","a34061d0":"code","f00bc806":"code","2164a6c5":"code","e1579636":"code","ac11f679":"code","afa82c9b":"markdown","a2379fa6":"markdown","c514fade":"markdown","ada5c984":"markdown","cf84347b":"markdown","51ffb910":"markdown","550f7e1a":"markdown","672c055c":"markdown","8a285f74":"markdown","fd6ca54d":"markdown","84cf9cd9":"markdown","d562ff21":"markdown","4a78ee0a":"markdown","55fd3a46":"markdown","a77446aa":"markdown","3cc52ec7":"markdown","f0a0dac8":"markdown","036ff1fb":"markdown","9c840262":"markdown","caf627e5":"markdown","85da8157":"markdown","e1744db4":"markdown","46b037d3":"markdown","9f8cadf1":"markdown","690f0a56":"markdown","32942aea":"markdown","0462c28d":"markdown","a5878961":"markdown","8ccacc65":"markdown","6c08522a":"markdown","a63adcfe":"markdown","f73add10":"markdown","24112e3f":"markdown","0c4215c4":"markdown","d1d90142":"markdown","99bf67ef":"markdown","28b93892":"markdown","33b488b0":"markdown","3d160e07":"markdown","4e49441b":"markdown","cbd00148":"markdown","94ac7970":"markdown","936bff76":"markdown","e08cda2a":"markdown","32bbf55b":"markdown","9d3cc766":"markdown","f69f93e0":"markdown","ce2bad78":"markdown","60200795":"markdown","17dfaf7b":"markdown","e249535e":"markdown","057097a4":"markdown","41a47c73":"markdown","74544e00":"markdown","fdddb91b":"markdown","0e2b27ca":"markdown","5863c83c":"markdown","c1563ced":"markdown","a17b6f20":"markdown","30cbce2f":"markdown","5f7221be":"markdown","039a4209":"markdown","e143d0e7":"markdown","0d18c1c6":"markdown","e5fc74c6":"markdown","65e8d7bf":"markdown","afa0d473":"markdown","347a2194":"markdown","544e942e":"markdown","0f6c479c":"markdown","d3b7bf19":"markdown","f01f629a":"markdown"},"source":{"bcee29c5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4b180529":"#Importing some  potential useful libraries for graphs\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go","5db0ac1d":"#This block help me to show the graph with plotly when we found problems\nfrom plotly.offline import init_notebook_mode\ninit_notebook_mode(connected=True)","b4a0d2a4":"data = pd.read_csv(\"\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\")\n\ndf = pd.read_csv('\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv', skiprows=1, low_memory=False)\ndf.head()","21d29bb4":"data.head()#The short definition of the name of variables could be helpful later","ecd7008e":"#There are a lot of null values but not equally distributed, the most are related to multiple response questions.\n\ndata.isnull().sum()","7b0541a8":"#There are no duplicated rows.\ndata.duplicated().sum()","13f98c24":"df_2021 = pd.read_csv('\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv')\ndf_2020 = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\ndf_2019 = pd.read_csv('\/kaggle\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')\ndf_2018 = pd.read_csv('\/kaggle\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv')","5cc73737":"data.describe().transpose().head(20)","09e4da15":"data.info()#We have only object variables in this case","40c5de1f":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\ndf = pd.read_csv('\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv', skiprows=1, low_memory=False)\ndf[df.columns[3]].replace({'United Kingdom of Great Britain and Northern Ireland':'UK',\n                           'Iran, Islamic Republic of...':'Iran',\n                           'United Arab Emirates':'UAE',\n                           'United States of America':'USA',\n                           'Viet Nam':'Vietnam'}, inplace=True)\n\nprint(f\"List of countries:\\n{np.sort(df[df.columns[3]].unique())}\\n\")","8141944a":"data[\"Q3\"].value_counts().head(10)# These are the 10 most represented country in the survey","93206c86":"#For this graph i took inspiration from the ahmed sa#mir's job. \n#Code by https:\/\/www.kaggle.com\/samir95\/the-state-of-data-science-in-egypt\n\n\n\n# Replace some countries names to make the plot ticks more manageable\ndf_2021['Q3'].replace({\n    'United States of America': 'USA',\n    'United Kingdom of Great Britain and Northern Ireland': 'UK',\n    'Iran, Islamic Republic of...':'Iran'\n}, inplace=True)\n\n# Calculate number of respondents per Country in 2021\ncountry_cnt_2021 = df_2021['Q3'].value_counts();\n\n# Plot figure object\nfig, ax = plt.subplots(1, 1, figsize=(14.4, 4), dpi=120);\n\n# Bar plot \nbar_colors = ['#000000'] * 10 + ['#ffffff'] * 10 + ['#c19400'] + ['#ffffff'] * 5 + ['#cf0921'] * 7\nax.bar(country_cnt_2021.index[:30],\n        country_cnt_2021[:30],\n        color=bar_colors,\n        edgecolor='black',\n        width=0.9);\n\n# Set title\nax.set_title('Number of Respondents per Country',\n             fontsize=16, fontfamily='serif', fontweight='bold', color='#4a4a4a');\nax.text(6.5, 7400, 'With Emphasis on Italian\\'s Respondents', \n        fontsize=12, fontfamily='serif', color='#4a4a4a')\n\n# Axes xticks rotation\nax.set_xticklabels(labels=country_cnt_2021.index[:30], rotation=75);\n\n# Remove yticks\nax.tick_params(left=False, bottom=False);\nax.set_yticklabels([]);\n\n# Remove spines\nax.spines['top'].set_visible(False);\nax.spines['right'].set_visible(False);\nax.spines['left'].set_visible(False);\n\n# Annotate bars\nfor i, bar in enumerate(ax.patches):\n    ax.annotate(text=bar.get_height(),\n                xy=(bar.get_x() + bar.get_width() \/ 2, bar.get_height() + 300),\n                ha='center',\n                va='center',\n                size=7 if i != 20 else 14);","de8808c6":"# Define helper functions for preparation of respondents count and metric in every survey\ndef get_country_respondents_count(df, col, country):\n    return df[df[col] == country].shape[0]\n\ndef get_country_respondents_rank(df, col, country):\n    # Calculate each country's respondent count in pandas series\n    countries_counts = df[col].value_counts()\n    \n    # Reset index of the series \n    countries_counts = countries_counts.reset_index()\n        \n    # Return the rank of the country of choice\n    return countries_counts[countries_counts['index'] == country].index.item() + 1","82a0f215":"# Initialize a list containing all the surverys\ndfs_list = [df_2018, df_2019, df_2020, df_2021]\n\n# Populate a dataframe with the counts and rank of all survery for Italy\nita_per_yr = pd.DataFrame({\n    'year': [2018, 2019, 2020, 2021],\n    'respondents': [get_country_respondents_count(df, 'Q3', 'Italy') for df in dfs_list],\n    'rank': [get_country_respondents_rank(df, 'Q3', 'Italy') for df in dfs_list]\n})\n\n\n\n\nprint(\"Italy\")\nita_per_yr","50d97df7":"#TODO: Draw a line plot with two y-axes for respondents count and rank\n\n# Initialize plot figure object\nfig, ax = plt.subplots(1, 1, figsize=(6, 4), dpi=140);\n\nbar_color = '#c19400'\n\n\nax.bar(ita_per_yr.year,\n       ita_per_yr.respondents,\n       color=bar_color,\n       edgecolor='#000000',\n       width=0.8,\n       label='Respondents')\n\n# Increase axis limit\nax.set_ylim([0, 650]);\n\n# Set axes labels\nax.set_xlabel('Year', fontsize=12);\n# ax.set_ylabel('Respondents', fontsize=12);\n\n# Set axes ticks and labels\nax.set_xticks(ticks=ita_per_yr.year)\nax.set_xticklabels(labels=ita_per_yr.year);\n\n# Annotate bars\nfor i, bar in enumerate(ax.patches):\n    ax.annotate(text=bar.get_height(),\n                xy=(bar.get_x() + bar.get_width() \/ 2, bar.get_height() \/ 2),\n                ha='center',\n                va='center',\n                size=10,\n                color='#000000')\n\n\n# Make a twin ax object to plot the rank in the same plot\nax2 = ax.twinx()\n\n# Make rank line plot\nl2 = ax2.plot(ita_per_yr.year,\n              ita_per_yr['rank'],\n              color='#4a4a4a',\n              linestyle=':',\n              linewidth=1.0,\n              marker='o',\n              markersize=5,\n              markerfacecolor='#c19400',\n              label='Rank')\n\n\n# Invert axis\nax2.invert_yaxis();\n\n# Increase axis limit\nax2.set_ylim([55, 5]);\n\n# # Set axes labels\n# ax2.set_ylabel('Rank', fontsize=12);\n\n\n# Set title\nax.text(2017.3, 677, 'Italian Presence in Kaggle\\'s Surveys',\n             fontsize=15, fontfamily='serif', fontweight='bold', color='#4a4a4a');\nax.text(2017.3, 630, 'Respondents and Rank (2018-2021)', \n        fontsize=13, fontfamily='serif', color='#4a4a4a')\n\n# Remove upper axis\nax.spines['top'].set_visible(False);\nax2.spines['top'].set_visible(False);\nax.spines['right'].set_visible(False);\nax2.spines['right'].set_visible(False);\nax.spines['left'].set_visible(False);\nax2.spines['left'].set_visible(False);\n\n# Remove yticks\nax.tick_params(left=False);\nax.set_yticklabels([]);\nax2.tick_params(right=False);\nax2.set_yticklabels([]);\n\n# Annotate line plot\nfor row in ita_per_yr.itertuples():\n    ax2.annotate(text=row.rank,\n                xy=(row.year, row.rank-3),\n                ha='center',\n                va='center',\n                size=10,\n                color='#000000')\n\n# Make legend\nfig.legend(loc='center');","c53b2e9a":"man=\"Man\"\nfig = px.pie(df, df.columns[2], \n       title=f\"{len(df[df[df.columns[2]]==man])*100\/len(df):.2f}% of all survey respondents are  {man}\", \n       hole=0.6)\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()","e07c610d":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n# Select a country from the list above, in this case Italy\ncountry = 'Italy'\nif country not in df[df.columns[3]].unique():\n    raise ValueError(f'{country} not found in the list')\ndf['country_agg'] = np.where(df[df.columns[3]]==country,country,'Others')","62bf79a1":"\n#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\nfig = px.pie(df, df.columns[1], title='56,2% of all Kagglers are less than 30 years old', hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()\n\nage_pct = len(df[(df[df.columns[3]]==country) & (df[df.columns[1]].isin(['18-21','22-24','25-29']))])*100\/len(df[df[df.columns[3]]==country])\nif age_pct < 56:\n    title = f\"{country} is older, with {age_pct:.0f}% of Kagglers being under under 30\"\nelif age_pct > 56:\n    title = f\"{country} is younger, with {age_pct:.0f}% of Kagglers being under under 30\"\nelse:\n    title = f\"{age_pct:.0f}% of Kagglers from {country} are also under 30\"\nfig = px.pie(df[df[df.columns[3]]==country], df.columns[1], title=title, hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()\n\ndf['age1'] = df.iloc[:,1].str.split('-').str[0]\ndf['age1'].replace('70+','70', inplace=True)\ndf['age2'] = df.iloc[:,1].str.split('-').str[1]\ndf['age1'] = df.age1.astype('int')\ndf.age2.fillna(70, inplace=True)\ndf['age2'] = df.age2.astype('int')\ndf['age'] = (df.age1+df.age2)\/2\n\nglobal_median = df.age.mean()\ncountry_median = df[df.country_agg==country].age.mean()\n\nif country_median <= global_median:\n    title = f\"With an average age of {country_median:.0f},<br>Kagglers from {country} are generally {global_median - country_median:.0f} years younger than the average Kaggler\"\nelse:\n    title = f\"With an average age of {country_median:.0f},<br>Kagglers from {country} are generally {country_median - global_median:.0f} years older than the average Kaggler\"\n\nloc = df.groupby(df.columns[3]).age.mean().sort_values(ascending=False).index.to_list().index(country)\ncolor = ['#636EFA']*len(df.groupby(df.columns[3]).age.mean().sort_values(ascending=False).index)\ncolor[loc] = 'orange'\n\nfig = go.Figure(data=[go.Bar(x=df.groupby(df.columns[3]).age.mean().sort_values(ascending=False).index\n       , y=df.groupby(df.columns[3]).age.mean().sort_values(ascending=False)\n            , marker_color=color)])\n\nfig.update_layout(\n    shapes=[\n    dict(\n      type= 'line',\n      yref= 'y', y0= global_median, y1= global_median,\n      xref= 'x', x0= -0.5, x1= len(df.groupby(df.columns[3]).age)-0.5\n    )],\n    title=title,\n    xaxis_title=None,\n    yaxis_title='Age')\n\nfig.add_annotation(x=len(df.groupby(df.columns[3]).age)*0.95, y=global_median, xshift=-20, yshift=10,\n            text=\"Global Average\",\n            showarrow=False)\nfig.show()\n\nfig = go.Figure(data=[\n    go.Bar(name=country, y=df[df.country_agg==country][df.columns[1]].value_counts(normalize=True).sort_index()*100),\n    go.Bar(name='Others', y=df[df.country_agg=='Others'][df.columns[1]].value_counts(normalize=True).sort_index()*100)\n])\n\n# Change the bar mode\nfig.update_layout(\n    barmode='group',\n    title=f'Age distribution of Kagglers from {country} compared to others',\n    xaxis_title='Age',\n    yaxis_title='Percentage of respondents',\n    xaxis = dict(\n        tickmode = 'array',\n        tickvals = [x for x in range(12)],\n        ticktext = df[df.columns[1]].sort_values().unique()\n    )\n)\n\nfig.show()","1c1aac60":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\nfig = px.pie(df, df.columns[3], \n       title=f\"{len(df[df[df.columns[3]]==country])*100\/len(df):.2f}% of all survey respondents are from {country}\", \n       hole=0.6)\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()","9f6c0d6a":"df.iloc[:,3].value_counts().head(21)","b5fe28f5":"print(f\"Genders reported by survey respondents from {country}: {set(df[df.iloc[:,3]==country][df.columns[2]])}\")","14457808":"Italy=df[df.iloc[:,3]==\"Italy\"]","53030732":"gender='Woman'","db037274":"df['country_agg'] = np.where(df[df.columns[3]]==country,country,'Others')\n#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\ngndr_pct = len(df[df[df.columns[2]]==gender])*100\/len(df)\nfig = px.pie(df, df.columns[2], title=f\"{gndr_pct:.2f}% of all survey respondents identified as '{gender}'\", hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()\n\ngndr_pct2 = len(Italy[Italy[Italy.columns[2]]==gender])*100\/len(Italy)\nfig = px.pie(Italy, Italy.columns[2], title=f\"{gndr_pct2:.2f}% of Italian respondents identified as '{gender}'\", hole=0.6)\nfig.update_traces(textinfo='percent+label')#fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()\n\ndf_all = df.groupby(df.columns[3])[df.columns[2]].value_counts().groupby(level=0).apply(lambda x: 100 * x \/ float(x.sum()))[:,gender].sort_values(ascending=False)\n\nif country in df_all.index:\n    country_avg = df_all[country]\n    global_avg = len(df[df[df.columns[2]]==gender])*100\/len(df)\n\n    if country_avg > global_avg:\n        title=f\"In {country}, this percentage increases to {country_avg:.2f}%\"\n    else:\n        title=f\"In {country}, this percentage decreases to {country_avg:.2f}%\"\n\n    loc = df_all.index.to_list().index(country)\n    color = ['#636EFA']*len(df_all.index)\n    color[loc] = 'orange'\n\n    fig = go.Figure(data=[go.Bar(x=df_all.index, y=df_all.values, marker_color=color)])\n    fig.update_layout(\n        shapes=[\n            dict(\n              type= 'line',\n              yref= 'y', y0= global_avg, y1= global_avg,\n              xref= 'x', x0= -0.5, x1= len(df_all.index)-0.5\n            )],\n        title=title,\n        xaxis_title=None,\n        yaxis_title='Percentage')\n    fig.add_annotation(x=len(df_all.index)*0.95, y=global_avg, xshift=-20, yshift=10,\n                text=\"Global Average\",\n                showarrow=False)\n    fig.show()\n\n    categories = ['Man', 'Prefer not to say', 'Prefer to self-describe', 'Woman']\n    df_country_gender = df[df.country_agg==country].iloc[:,2].value_counts(normalize=True).sort_index()\n    df_other_platform = df[df.country_agg=='Others'].iloc[:,2].value_counts(normalize=True).sort_index().drop(\"Nonbinary\")\n\n    fig = go.Figure(data=[\n        go.Bar(name=country, x=categories, y=df_country_gender.values*100),\n        go.Bar(name='Others', x=categories, y=df_other_platform.values*100)\n    ])\n    # Change the bar mode\n    fig.update_layout(\n        title=f'Gender of respondents from {country} compared to Other countries',\n        xaxis_title=None,\n        yaxis_title='Percentage',\n        xaxis={'categoryorder':'array',\n               'categoryarray':categories}\n    )\n    fig.show()\n\nelse:\n    print(f\"Nobody from {country} identified as {gender}\")","10f9c8bb":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\ndf_academic = df[(df[df.columns[4]]!='I prefer not to answer') & (~df[df.columns[4]].isna())]\n\nfig = px.pie(df_academic, df_academic.columns[4], \n             title=\"Surprisingly, globally more Kagglers reported having a Master's degree (40%)<br>than a Bachelor's (39%)\", hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', showlegend=False)\nfig.show()\n\nmost_comm = df_academic[df_academic.iloc[:,3]==country].iloc[:,4].value_counts(normalize=True)[[0]]\nif most_comm.index[0] == \"Master's degree\":\n    title = f\"The same trend is observed in {country},<br>with {most_comm[0]*100:.0f}% respondents reporting having a Master's degree\"\nelse:\n    title = f\"However, in the case of {country},<br>more respondents reported having a {most_comm.index[0]} at {most_comm[0]*100:.0f}%\"\n    \nfig = px.pie(df_academic[df_academic.iloc[:,3]==country], df_academic.columns[4], title=title, hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', showlegend=False)\nfig.show()\n\ncategories = ['No formal education past high school',\n             'Some college\/university study without earning a bachelor\u2019s degree',\n            # 'Professional degree',\n             'Bachelor\u2019s degree',\n             'Master\u2019s degree',\n             'Doctoral degree']\n\ndf_country_agg = df[df.country_agg==country].iloc[:,4].value_counts(normalize=True)\ndf_country_agg.index = pd.Categorical(df_country_agg.index, categories)\ndf_country_agg.sort_index(inplace=True)\n\ndf_others_agg = df[df.country_agg=='Others'].iloc[:,4].value_counts(normalize=True)\ndf_others_agg.index = pd.Categorical(df_others_agg.index, categories)\ndf_others_agg.sort_index(inplace=True)\n\nfig = go.Figure(data=[\n    go.Bar(name=country, x=categories, y=df_country_agg.values*100),\n    go.Bar(name='Others', x=categories, y=df_others_agg.values*100)\n])\n# Change the bar mode\nfig.update_layout(\n    title=f'Academic Qualification of respondents from {country} compared to Other countries',\n    xaxis_title=None,\n    yaxis_title='Percentage'\n)\nfig.show()","3741a6f0":"Italy=df[df.iloc[:,3]==\"Italy\"]\nItaly.iloc[:,4].value_counts()","6b6218d0":"Brazil=df[df.iloc[:,3]==\"Brazil\"]\nBrazil.iloc[:,4].value_counts(normalize=True)","b1c81b53":"categories = ['No formal education past high school',\n             'Some college\/university study without earning a bachelor\u2019s degree',\n            # 'Professional degree',\n             'Bachelor\u2019s degree',\n             'Master\u2019s degree',\n             'Doctoral degree']\n\ndf_country_agg = df[df.country_agg==country].iloc[:,4].value_counts(normalize=True)\ndf_country_agg.index = pd.Categorical(df_country_agg.index, categories)\ndf_country_agg.sort_index(inplace=True)\n\ndf_Brazil_agg = Brazil.iloc[:,4].value_counts(normalize=True)\ndf_Brazil_agg.index = pd.Categorical(df_Brazil_agg.index, categories)\ndf_Brazil_agg.sort_index(inplace=True)\n\nfig = go.Figure(data=[\n    go.Bar(name=country, x=categories, y=df_country_agg.values*100),\n    go.Bar(name='Brazil', x=categories, y=df_Brazil_agg.values*100)\n])\n# Change the bar mode\nfig.update_layout(\n    title=f' Comparison for Academic Qualification of respondents from {country} compared to Brazil',\n    xaxis_title=None,\n    yaxis_title='Percentage'\n)\nfig.show()","15239990":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\ndf_job = df[~df[df.columns[5]].isna()]\nprint(f\"Job titles reported by survey respondents from {country}: {set(df_job[df_job.iloc[:,3]==country][df_job.columns[5]])}\")","b2c61ec5":"# Enter the job-title you want to compare on\njob =\"Currently not employed\"\njob2= \"Research Scientist\"\njob3= \"Student\"","912e4981":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\n#job title global\n\nfig = px.pie(df_job, df_job.columns[5], title='Globally, 27% Kagglers are students, followed by 14% being Data Scientists', hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', showlegend=False)\nfig.show()\n\n#job title italian\n\ndf_country_job = df_job[df_job.iloc[:,3]==country].iloc[:,5].value_counts(normalize=True)\ncom_job = df_country_job[[0]].index[0]\nif com_job=='Student':\n    title = f\"For {country} too, most Kagglers are {com_job}s ({df_country_job[0]*100:.0f}%), followed by {df_country_job[[1]].index[0]}s ({df_country_job[1]*100:.0f}%)\"\nelse:\n    title = f\"However, for {country}, most Kagglers are {com_job}s ({df_country_job[0]*100:.0f}%), followed by {df_country_job[[1]].index[0]}s ({df_country_job[1]*100:.0f}%)\"\n\nfig = px.pie(df_job[df_job.iloc[:,3]==country], df_job.columns[5], title=title, hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', showlegend=False)\nfig.show()\n\n#percentage of unemployed\ndf_all = df.groupby(df.columns[3])[df.columns[5]].value_counts().groupby(level=0).apply(lambda x: 100 * x \/ float(x.sum()))[:,job].sort_values(ascending=False)\ncountry_avg = df_all[country]\nglobal_avg = len(df[df[df.columns[5]]==job])*100\/len(df)\n\nloc = df_all.index.to_list().index(country)\ncolor = ['#636EFA']*len(df_all.index)\ncolor[loc] = 'orange'\n\nfig = go.Figure(data=[go.Bar(x=df_all.index, y=df_all.values, marker_color=color)])\n\nfig.update_layout(\n    shapes=[\n    dict(\n      type= 'line',\n      yref= 'y', y0= global_avg, y1= global_avg,\n      xref= 'x', x0= -0.5, x1= len(df_all.index)-0.5\n    )],\n    title=f\"{country_avg:.0f}% of Kagglers from {country} reported their job-title as \\'{job}\\',<br>compared to the global average of {global_avg:.0f}%\",\n    xaxis_title=None,\n    yaxis_title='Percentage',)\n\nfig.add_annotation(x=len(df_all.index), y=global_avg, xshift=-60, yshift=10,\n            text=\"Global Average\",\n            showarrow=False)\n\nfig.show()\n\n\n\n#Percentage of Researchers \n\ndf_all = df.groupby(df.columns[3])[df.columns[5]].value_counts().groupby(level=0).apply(lambda x: 100 * x \/ float(x.sum()))[:,job2].sort_values(ascending=False)\ncountry_avg = df_all[country]\nglobal_avg = len(df[df[df.columns[5]]==job2])*100\/len(df)\n\nloc = df_all.index.to_list().index(country)\ncolor = ['#636EFA']*len(df_all.index)\ncolor[loc] = 'orange'\n\nfig = go.Figure(data=[go.Bar(x=df_all.index, y=df_all.values, marker_color=color)])\n\nfig.update_layout(\n    shapes=[\n    dict(\n      type= 'line',\n      yref= 'y', y0= global_avg, y1= global_avg,\n      xref= 'x', x0= -0.5, x1= len(df_all.index)-0.5\n    )],\n    title=f\"{country_avg:.0f}% of Kagglers from {country} reported their job-title as \\'{job2}\\',<br>compared to the global average of {global_avg:.0f}%\",\n    xaxis_title=None,\n    yaxis_title='Percentage',)\n\nfig.add_annotation(x=len(df_all.index), y=global_avg, xshift=-60, yshift=10,\n            text=\"Global Average\",\n            showarrow=False)\n\nfig.show()\n\n#Percentage of Students\n\ndf_all = df.groupby(df.columns[3])[df.columns[5]].value_counts().groupby(level=0).apply(lambda x: 100 * x \/ float(x.sum()))[:,job3].sort_values(ascending=False)\ncountry_avg = df_all[country]\nglobal_avg = len(df[df[df.columns[5]]==job3])*100\/len(df)\n\nloc = df_all.index.to_list().index(country)\ncolor = ['#636EFA']*len(df_all.index)\ncolor[loc] = 'orange'\n\nfig = go.Figure(data=[go.Bar(x=df_all.index, y=df_all.values, marker_color=color)])\n\nfig.update_layout(\n    shapes=[\n    dict(\n      type= 'line',\n      yref= 'y', y0= global_avg, y1= global_avg,\n      xref= 'x', x0= -0.5, x1= len(df_all.index)-0.5\n    )],\n    title=f\"{country_avg:.0f}% of Kagglers from {country} reported their job-title as \\'{job3}\\',<br>compared to the global average of {global_avg:.0f}%\",\n    xaxis_title=None,\n    yaxis_title='Percentage',)\n\nfig.add_annotation(x=len(df_all.index), y=global_avg, xshift=-60, yshift=10,\n            text=\"Global Average\",\n            showarrow=False)\n\nfig.show()","dd8cd644":"Italy.iloc[:,5].value_counts(normalize=True)","df7005fe":"df.iloc[:,5].value_counts(normalize=True)","6acd8cce":"print(df_all.head(10))\nprint(\"\")\ndf_all.tail(10),","336b9764":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\ndf_coding = df[~df[df.columns[6]].isna()]\n\nfig = px.pie(df_coding, df_coding.columns[6], title='53% of all survey respondents have been coding for less than 5 years', hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()\n\ncountry_coding_exp = len(df_coding[(df_coding[df_coding.columns[3]]==country) & (df_coding[df_coding.columns[6]].isin(['3-5 years','< 1 years','1-3 years']))])*100\/len(df_coding[df_coding[df_coding.columns[3]]==country])\nif country_coding_exp > 65:\n    title = f\"For {country}, this percentage increases to {country_coding_exp:.0f}%\"\nelif country_coding_exp < 65:\n    title = f\"For {country}, this percentage decreases to {country_coding_exp:.0f}%\" \nelse:\n    title = f\"At {country_coding_exp:.0f}%, it is the same for {country} too<br>The average Kaggler from {country} about the same coding experience as the global average\"\nfig = px.pie(df_coding[df_coding[df_coding.columns[3]]==country], df_coding.columns[6], title=title, hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()\n\ndf_coding[df_coding.columns[6]] = df_coding[df_coding.columns[6]].replace('< 1 years','0-1 years').replace('I have never written code','0-0').apply(lambda x: x.split()[0])\ndf_coding['code1'] = df_coding.iloc[:,6].str.split('-').str[0].replace('20+','20').astype('int')\ndf_coding['code2'] = df_coding.iloc[:,6].str.split('-').str[1].fillna('20').astype('int')\ndf_coding.groupby([df_coding.columns[6]]+['code1','code2']).size()\ndf_coding['code'] = (df_coding.code1+df_coding.code2)\/2\n\nglobal_median = df_coding.code.mean()\ncountry_median = df_coding[df_coding.country_agg==country].code.mean()\n\nif country_median <= global_median:\n    title = f\"The average Kaggler from {country} has been coding for {country_median:.1f} years,<br>less than the global average of {global_median:.1f} years\"\nelse:\n    title = f\"The average Kaggler from {country} has been coding for {country_median:.1f} years,<br>more than the global average of {global_median:.1f} years\"\n\nloc = df_coding.groupby(df_coding.columns[3]).code.mean().sort_values(ascending=False).index.to_list().index(country)\ncolor = ['#636EFA']*len(df_coding.groupby(df_coding.columns[3]).code.mean().sort_values(ascending=False).index)\ncolor[loc] = 'orange'\n\nfig = go.Figure(data=[go.Bar(x=df_coding.groupby(df_coding.columns[3]).code.mean().sort_values(ascending=False).index\n       , y=df_coding.groupby(df_coding.columns[3]).code.mean().sort_values(ascending=False)\n            , marker_color=color)])\n\nfig.update_layout(\n    shapes=[\n    dict(\n      type= 'line',\n      yref= 'y', y0= global_median, y1= global_median,\n      xref= 'x', x0= -0.5, x1= len(df_coding.groupby(df_coding.columns[3]).code)-0.5\n    )],\n    title=title,\n    xaxis_title=None,\n    yaxis_title='Average coding experience')\n\nfig.add_annotation(x=len(df_coding.groupby(df.columns[3]).code)*0.95, y=global_median, xshift=-20, yshift=10,\n            text=\"Global Average\",\n            showarrow=False)\nfig.show()\n\ncategories = ['I have never written code','< 1 years','1-3 years','3-5 years','5-10 years','10-20 years','20+ years']\n\ndf_country_agg = df[df.country_agg==country].iloc[:,6].value_counts(normalize=True)\ndf_country_agg.index = pd.Categorical(df_country_agg.index, categories)\ndf_country_agg.sort_index(inplace=True)\n\ndf_others_agg = df[df.country_agg=='Others'].iloc[:,6].value_counts(normalize=True)\ndf_others_agg.index = pd.Categorical(df_others_agg.index, categories)\ndf_others_agg.sort_index(inplace=True)\n\nfig = go.Figure(data=[\n    go.Bar(name=country, x=categories, y=df_country_agg.values*100),\n    go.Bar(name='Others', x=categories, y=df_others_agg.values*100)\n])\n# Change the bar mode\nfig.update_layout(\n    title=f'Coding Experience of respondents from {country} compared to Other countries',\n    xaxis_title=None,\n    yaxis_title='Percentage'\n)\nfig.show()\n","a7ab89a9":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\nprogramming_cols = [col for col in df.columns \n                    if 'What programming languages do you use on a regular basis?' in col]\ndf_programming = df.copy()\nmapper = [col.split('-')[-1].lstrip() for col in programming_cols]\nmapping_dict = dict(zip(programming_cols,mapper))\ndf_programming = df_programming[programming_cols + [df.columns[3]] + ['country_agg']].rename(columns=mapping_dict)\ndf_programming.dropna(how='all', subset=mapper, inplace=True)\ndf_programming.drop(columns=[\"None\"], inplace=True)\n\nfig = px.bar(df_programming[df_programming.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=f'87% of all respondents use Python on a regular basis',\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()\n\ncountry_most_pop = df_programming[df_programming.iloc[:,-1]==country][df_programming.columns[:-2]].count().sort_values(ascending=False)\npop_lang = country_most_pop.index[0]\nmost_pop_pct = country_most_pop[0]*100\/len(df_programming[df_programming.iloc[:,-1]==country])\nif pop_lang=='Python':\n    if most_pop_pct > 87:\n        title = f'{pop_lang} is even more popular in {country},<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis'\n    else:\n        title = f'{pop_lang} remains the most popular programming language in {country} too,<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis'\nelse:\n    title = f\"However, in {country}, {pop_lang} is more popular,<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis\"\n\nfig = px.bar(df_programming[df_programming.iloc[:,-1]==country][df_programming.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=title,\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()","46c63d47":"#Infact we can make the mean on 304 italian who responded indicating atleast one of this programs\nlen(df_programming[df_programming.iloc[:,-1]==country])","312f4c5b":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\nide_cols = [col for col in df.columns \n            if \"Which of the following integrated development environments (IDE's) do you use on a regular basis?\" in col]\ndf_ide = df.copy()\nmapper = [col.split('-')[-1].lstrip() for col in ide_cols]\nmapping_dict = dict(zip(ide_cols,mapper))\ndf_ide = df_ide[ide_cols + [df.columns[3]] + ['country_agg']].rename(columns=mapping_dict)\ndf_ide.dropna(how='all', subset=mapper, inplace=True)\n#df_ide.drop(columns=['Click to write Choice 13','None'], inplace=True)\ndf_ide.rename(columns={'Jupyter (JupyterLab, Jupyter Notebooks, etc) ':'Jupyter'}, inplace=True)\n\nfig = px.bar(df_ide[df_ide.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=f'64% of all respondents use Jupyter',\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()\n\ncountry_most_pop = df_ide[df_ide.iloc[:,-1]==country][df_ide.columns[:-2]].count().sort_values(ascending=False)\npop_ide = country_most_pop.index[0]\nmost_pop_pct = country_most_pop[0]*100\/len(df_ide[df_ide.iloc[:,-1]==country])\nif pop_ide=='Jupyter':\n    if most_pop_pct > 64:\n        title = f'{pop_ide} is even more popular in {country},<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis'\n    else:\n        title = f'{pop_ide} remains the most popular IDE in {country} too,<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis'\nelse:\n    title = f\"However, in {country}, {pop_ide} is more,<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis\"\n\nfig = px.bar(df_ide[df_ide.iloc[:,-1]==country][df_ide.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=title,\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()","a68225f9":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\nnb_cols = [col for col in df.columns \n           if \"Which of the following hosted notebook products do you use on a regular basis?\" in col]\ndf_nb = df.copy()\nmapper = [col.split('-')[-1].lstrip() for col in nb_cols]\nmapping_dict = dict(zip(nb_cols,mapper))\ndf_nb = df_nb[nb_cols + [df.columns[3]] + ['country_agg']].rename(columns=mapping_dict)\ndf_nb.dropna(how='all', subset=mapper, inplace=True)\ndf_nb.drop(columns=['None'], inplace=True)\n\nfig = px.bar(df_nb[df_nb.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=f'37% of all respondents use Colab Notebooks',\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()\n\ncountry_most_pop = df_nb[df_nb.iloc[:,-1]==country][df_nb.columns[:-2]].count().sort_values(ascending=False)\npop_nb = country_most_pop.index[0]\nmost_pop_pct = country_most_pop[0]*100\/len(df_nb[df_nb.iloc[:,-1]==country])\nif pop_nb=='Colab Notebooks':\n    if most_pop_pct > 37:\n        title = f'{pop_nb} are even more popular in {country},<br>with {most_pop_pct:.0f}% of respondents using them on a regular basis'\n    else:\n        title = f'{pop_nb} remain the most popular hosted notebooks in {country} too,<br>with {most_pop_pct:.0f}% of respondents using them on a regular basis'\nelse:\n    title = f\"However, in {country}, {pop_nb} are more popular,<br>with {most_pop_pct:.0f}% of respondents using them on a regular basis\"\n\nfig = px.bar(df_nb[df_nb.iloc[:,-1]==country][df_nb.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=title,\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()","89cac51e":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\nviz_cols = [col for col in df.columns \n           if \"What data visualization libraries or tools do you use on a regular basis?\" in col]\ndf_viz = df.copy()\nmapper = [col.split('-')[-1].strip() for col in viz_cols]\nmapping_dict = dict(zip(viz_cols,mapper))\ndf_viz = df_viz[viz_cols + [df.columns[3]] + ['country_agg']].rename(columns=mapping_dict)\ndf_viz.dropna(how='all', subset=mapper, inplace=True)\ndf_viz.drop(columns=['None'], inplace=True)\n\nfig = px.bar(df_viz[df_viz.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=f'75% of all respondents use Matplotlib',\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()\n\ncountry_most_pop = df_viz[df_viz.iloc[:,-1]==country][df_viz.columns[:-2]].count().sort_values(ascending=False)\npop_viz = country_most_pop.index[0]\nmost_pop_pct = country_most_pop[0]*100\/len(df_viz[df_viz.iloc[:,-1]==country])\nif pop_viz=='Matplotlib':\n    if most_pop_pct > 75:\n        title = f'{pop_viz} is even more popular in {country},<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis'\n    else:\n        title = f'{pop_viz} remains the most popular in {country} too,<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis'\nelse:\n    title = f\"However, in {country}, {pop_viz} is popular,<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis\"\n\nfig = px.bar(df_viz[df_viz.iloc[:,-1]==country][df_viz.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=title,\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()","4914fea3":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\nml_cols = [col for col in df.columns \n           if \"Which of the following machine learning frameworks do you use on a regular basis?\" in col]\ndf_ml = df.copy()\nmapper = [col.split('-')[-1].strip() for col in ml_cols]\nmapper[0]='Scikit-learn'\nmapping_dict = dict(zip(ml_cols,mapper))\ndf_ml = df_ml[ml_cols + [df.columns[3]] + ['country_agg']].rename(columns=mapping_dict)\ndf_ml.dropna(how='all', subset=mapper, inplace=True)\ndf_ml.drop(columns=['None'], inplace=True)\n\nfig = px.bar(df_ml[df_ml.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=f'72% of all respondents use Scikit-learn',\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()\n\ncountry_most_pop = df_ml[df_ml.iloc[:,-1]==country][df_ml.columns[:-2]].count().sort_values(ascending=False)\npop_ml = country_most_pop.index[0]\nmost_pop_pct = country_most_pop[0]*100\/len(df_ml[df_ml.iloc[:,-1]==country])\nif pop_ml=='Scikit-learn':\n    if most_pop_pct > 72:\n        title = f'{pop_ml} is even more popular in {country},<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis'\n    else:\n        title = f'{pop_ml} remains the most popular in {country} too,<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis'\nelse:\n    title = f\"However, in {country}, {pop_ml} is popular,<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis\"\n\nfig = px.bar(df_ml[df_ml.iloc[:,-1]==country][df_ml.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=title,\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()","f0e0bcc4":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\nml_cols = [col for col in df.columns \n           if \"Which of the following ML algorithms do you use on a regular basis?\" in col]\ndf_ml = df.copy()\nmapper = [col.split('-')[-1].strip() for col in ml_cols]\nmapper[9]='Transformer Networks (BERT, gpt-3, etc)'\nmapping_dict = dict(zip(ml_cols,mapper))\ndf_ml = df_ml[ml_cols + [df.columns[3]] + ['country_agg']].rename(columns=mapping_dict)\ndf_ml.dropna(how='all', subset=mapper, inplace=True)\ndf_ml.drop(columns=['None'], inplace=True)\n\nfig = px.bar(df_ml[df_ml.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=f'76% of all respondents use Linear or Logistic Regression',\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()\n\ncountry_most_pop = df_ml[df_ml.iloc[:,-1]==country][df_ml.columns[:-2]].count().sort_values(ascending=False)\npop_ml = country_most_pop.index[0]\nmost_pop_pct = country_most_pop[0]*100\/len(df_ml[df_ml.iloc[:,-1]==country])\nif pop_ml=='Linear or Logistic Regression':\n    if most_pop_pct > 76:\n        title = f'{pop_ml} is even more popular in {country},<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis'\n    else:\n        title = f'{pop_ml} remains the most popular in {country} too,<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis'\nelse:\n    title = f\"However, in {country}, {pop_ml} is popular,<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis\"\n\nfig = px.bar(df_ml[df_ml.iloc[:,-1]==country][df_ml.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=title,\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()","3216d71a":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\ncv_cols = [col for col in df.columns \n           if \"Which categories of computer vision methods do you use on a regular basis?\" in col]\ndf_cv = df.copy()\nmapper = [col.split('- ',maxsplit=2)[2] for col in cv_cols]\nmapping_dict = dict(zip(cv_cols,mapper))\ndf_cv = df_cv[cv_cols + [df.columns[3]] + ['country_agg']].rename(columns=mapping_dict)\ndf_cv.dropna(how='all', subset=mapper, inplace=True)\ndf_cv.drop(columns=['None'], inplace=True)\n\nfig = px.bar(df_cv[df_cv.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=f'59% of all respondents use Image classification and other general purpose networks',\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()\n\ncountry_most_pop = df_cv[df_cv.iloc[:,-1]==country][df_cv.columns[:-2]].count().sort_values(ascending=False)\npop_cv = country_most_pop.index[0]\nif '(' in pop_cv:\n    pop_cv = pop_cv.split('(')[0].strip()\nmost_pop_pct = country_most_pop[0]*100\/len(df_cv[df_cv.iloc[:,-1]==country])\nif pop_cv=='Image classification and other general purpose networks':\n    if most_pop_pct > 59:\n        title = f'{pop_cv} are even more popular in {country},<br>with {most_pop_pct:.0f}% of respondents using them on a regular basis'\n    else:\n        title = f'{pop_cv} remain the most popular in {country} too,<br>with {most_pop_pct:.0f}% of respondents using them on a regular basis'\nelse:\n    title = f\"However, in {country}, {pop_cv} are popular,<br>with {most_pop_pct:.0f}% of respondents using them on a regular basis\"\n\nfig = px.bar(df_cv[df_cv.iloc[:,-1]==country][df_cv.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=title,\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()","0e83f3d2":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\nnlp_cols = [col for col in df.columns \n           if \"Which of the following natural language processing (NLP) methods do you use on a regular basis?\" in col]\ndf_nlp = df.copy()\nmapper = [col.split('- ',maxsplit=2)[2] for col in nlp_cols]\nmapping_dict = dict(zip(nlp_cols,mapper))\ndf_nlp = df_nlp[nlp_cols + [df.columns[3]] + ['country_agg']].rename(columns=mapping_dict)\ndf_nlp.dropna(how='all', subset=mapper, inplace=True)\ndf_nlp.drop(columns=['None'], inplace=True)\n\nfig = px.bar(df_nlp[df_nlp.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=f'55% of all respondents use Word embeddings\/vectors',\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()\n\ncountry_most_pop = df_nlp[df_nlp.iloc[:,-1]==country][df_nlp.columns[:-2]].count().sort_values(ascending=False)\npop_nlp = country_most_pop.index[0]\nif '(' in pop_nlp:\n    pop_nlp = pop_nlp.split('(')[0].strip()\nmost_pop_pct = country_most_pop[0]*100\/len(df_nlp[df_nlp.iloc[:,-1]==country])\nif pop_nlp.strip()=='Word embeddings\/vectors':\n    if most_pop_pct > 55:\n        title = f'{pop_nlp} are even more popular in {country},<br>with {most_pop_pct:.0f}% of respondents using them on a regular basis'\n    else:\n        title = f'{pop_nlp} remain the most popular in {country} too,<br>with {most_pop_pct:.0f}% of respondents using them on a regular basis'\nelse:\n    title = f\"However, in {country}, {pop_nlp} are popular,<br>with {most_pop_pct:.0f}% of respondents using them on a regular basis\"\n\nfig = px.bar(df_nlp[df_nlp.iloc[:,-1]==country][df_nlp.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=title,\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()","440c0a34":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\nccp_cols = [col for col in df.columns \n           if \"Which of the following cloud computing platforms do you use on a regular basis?\" in col]\ndf_ccp = df.copy()\nmapper = [col.split('- ',maxsplit=2)[2] for col in ccp_cols]\nmapping_dict = dict(zip(ccp_cols, mapper))\ndf_ccp = df_ccp[ccp_cols + [df.columns[3]] + ['country_agg']].rename(columns=mapping_dict)\ndf_ccp.dropna(how='all', subset=mapper, inplace=True)\ndf_ccp.drop(columns=['None'], inplace=True)\n\nfig = px.bar(df_ccp[df_ccp.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=f'41% of all respondents use AWS',\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()\n\ncountry_most_pop = df_ccp[df_ccp.iloc[:,-1]==country][df_ccp.columns[:-2]].count().sort_values(ascending=False)\npop_ccp = country_most_pop.index[0].strip()\nif '(' in pop_ccp:\n    pop_ccp = pop_ccp.split('(')[0].strip()\nmost_pop_pct = country_most_pop[0]*100\/len(df_ccp[df_ccp.iloc[:,-1]==country])\nif pop_ccp == 'Amazon Web Services (AWS)':\n    if most_pop_pct > 41:\n        title = f'{pop_ccp} is even more popular in {country},<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis'\n    else:\n        title = f'{pop_ccp} remains the most popular in {country} too,<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis'\nelse:\n    title = f\"However, in {country}, {pop_ccp} is popular,<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis\"\n\nfig = px.bar(df_ccp[df_ccp.iloc[:,-1]==country][df_ccp.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=title,\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()","d74a3d88":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\nccp_cols = [col for col in df.columns \n           if \"Do you use any of the following cloud computing products on a regular basis?\" in col]\ndf_ccp = df.copy()\nmapper = [col.split('- ',maxsplit=2)[2] for col in ccp_cols]\nmapping_dict = dict(zip(ccp_cols, mapper))\ndf_ccp = df_ccp[ccp_cols + [df.columns[3]] + ['country_agg']].rename(columns=mapping_dict)\ndf_ccp.dropna(how='all', subset=mapper, inplace=True)\ndf_ccp.drop(columns=['No \/ None'], inplace=True)\n\nfig = px.bar(df_ccp[df_ccp.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=f'36% of all respondents use Amazon EC2',\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()\n\ncountry_most_pop = df_ccp[df_ccp.iloc[:,-1]==country][df_ccp.columns[:-2]].count().sort_values(ascending=False)\npop_ccp = country_most_pop.index[0].strip()\nif '(' in pop_ccp:\n    pop_ccp = pop_ccp.split('(')[0].strip()\nmost_pop_pct = country_most_pop[0]*100\/len(df_ccp[df_ccp.iloc[:,-1]==country])\nif pop_ccp == 'Amazon EC2':\n    if most_pop_pct > 36:\n        title = f'{pop_ccp} is even more popular in {country},<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis'\n    else:\n        title = f'{pop_ccp} remains the most popular in {country} too,<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis'\nelse:\n    title = f\"However, in {country}, {pop_ccp} is popular,<br>with {most_pop_pct:.0f}% of respondents using it on a regular basis\"\n\nfig = px.bar(df_ccp[df_ccp.iloc[:,-1]==country][df_ccp.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=title,\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()","e6b2edca":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\ndf_wp_size = df[~df.iloc[:,116].isna()]\n\nfig = px.pie(df_wp_size, df_wp_size.columns[116], title='47% of all Kagglers work in companies with less than 250 employees', hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()\n\nsize_pct = len(df_wp_size[(df_wp_size[df_wp_size.columns[3]]==country) & (df_wp_size[df_wp_size.columns[116]].isin(['0-49 employees','50-249 employees']))])*100 \\\n\/len(df_wp_size[df_wp_size[df_wp_size.columns[3]]==country])\nif size_pct > 51:\n    title = f\"For {country}, this percentage increases to {size_pct:.0f}%<br>Kagglers from {country} tend to work in smaller companies\"\nelif size_pct < 51:\n    title = f\"For {country}, this percentage decreases to {size_pct:.0f}%<br>Kagglers from {country} tend to work in larger companies\"\nelse:\n    title = f\"At {size_pct:.0f}%, it is the same for {country} too\"\nfig = px.pie(df_wp_size[df_wp_size[df_wp_size.columns[3]]==country], df_wp_size.columns[116], title=title, hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()\n\nfig = go.Figure(data=[\n    go.Bar(name=country, y=df_wp_size[df_wp_size.country_agg==country][df_wp_size.columns[116]].value_counts(normalize=True).sort_index()*100),\n    go.Bar(name='Others', y=df_wp_size[df_wp_size.country_agg=='Others'][df_wp_size.columns[116]].value_counts(normalize=True).sort_index()*100)\n])\n\n# Change the bar mode\nfig.update_layout(\n    barmode='group',\n    title=f'Workplace size of Kagglers from {country} compared to others',\n    xaxis_title=None,\n    yaxis_title='Percentage of respondents',\n    xaxis = dict(\n        tickmode = 'array',\n        tickvals = [x for x in range(5)],\n        ticktext = df_wp_size[df_wp_size.columns[116]].sort_values().unique()\n    )\n)\n\nfig.show()","2c9269e1":"\ndf_wp_size = df[~df.iloc[:,116].isna()]\n\nfig = px.pie(df_wp_size, df_wp_size.columns[116], title='51% of all Kagglers work in companies with less than 250 employees', hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()\n\n\n\n","b0abcd79":"print(df.iloc[:,115].value_counts()\/df.shape[0])\nprint(\"\")\nItaly.iloc[:,115].value_counts()\/311","83da1b85":"df.iloc[:,58].value_counts()\/df.shape[0],Italy.iloc[:,58].value_counts()\/311\n","c7cb954c":"print(df.iloc[:,118].value_counts()\/df.shape[0])\nprint(\"\")\nItaly.iloc[:,118].value_counts()\/311","d587e498":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\ndf_dsts_size = df[~df.iloc[:,117].isna()]\n\nfig = px.pie(df_dsts_size, df_dsts_size.columns[117], \n             title='60% of all Kagglers work in companies with less than 5 individuals handling Data Science workloads', hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()\n\n\nsize_pct = len(df_dsts_size[(df_dsts_size[df_dsts_size.columns[3]]==country) & (df_dsts_size[df_wp_size.columns[117]].isin(['0','1-2', '3-4']))])*100 \\\n\/len(df_dsts_size[df_dsts_size[df_dsts_size.columns[3]]==country])\nif size_pct > 60:\n    title = f\"For {country}, this percentage increases to {size_pct:.0f}%<br>Kagglers from {country} work in companies with smaller Data Science teams\"\nelif size_pct < 60:\n    title = f\"For {country}, this percentage decreases to {size_pct:.0f}%<br>Kagglers from {country} work in companies with larger Data Science teams\"\nelse:\n    title = f\"At {size_pct:.0f}%, it is the same for {country} too\"\nfig = px.pie(df_dsts_size[df_dsts_size[df_dsts_size.columns[3]]==country], df_dsts_size.columns[117], title=title, hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()\n\nfig = go.Figure(data=[\n    go.Bar(name=country, y=df_dsts_size[df_dsts_size.country_agg==country][df_dsts_size.columns[117]].value_counts(normalize=True).sort_index()*100),\n    go.Bar(name='Others', y=df_dsts_size[df_dsts_size.country_agg=='Others'][df_dsts_size.columns[117]].value_counts(normalize=True).sort_index()*100)\n])\n\n# Change the bar mode\nfig.update_layout(\n    barmode='group',\n    title=f'Company Data Science Team size of Kagglers from {country} compared to others',\n    xaxis_title=None,\n    yaxis_title='Percentage of respondents',\n    xaxis = dict(\n        tickmode = 'array',\n        tickvals = [x for x in range(7)],\n        ticktext = df_dsts_size[df_dsts_size.columns[117]].sort_values().unique()\n    )\n)\n\nfig.show()\n","0b4faeef":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\ndf_mla = df[~df.iloc[:,118].isna()]\n\nfig = px.pie(df_mla, df_mla.columns[118], \n             title='20% of all Kagglers work in companies which don\\'t use ML models', hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', showlegend=False)\nfig.show()\n\nsize_pct = len(df_mla[(df_mla[df_mla.columns[3]]==country) & \n                      (df_mla[df_mla.columns[118]].isin(['No (we do not use ML methods)']))])*100 \\\n\/len(df_mla[df_mla[df_mla.columns[3]]==country])\nif size_pct > 20:\n    title = f\"For {country}, this percentage increases to {size_pct:.0f}%<br>Less Kagglers from {country} work in a company using ML models\"\nelif size_pct < 20:\n    title = f\"For {country}, this percentage decreases to {size_pct:.0f}%<br>More Kagglers from {country} work in a company using ML models\"\nelse:\n    title = f\"At {size_pct:.0f}%, it is the same for {country} too\"\nfig = px.pie(df_mla[df_mla[df_mla.columns[3]]==country], df_mla.columns[118], title=title, hole=0.6)\nfig.update_traces(textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', showlegend=False)\nfig.show()\n\nfig = go.Figure(data=[\n    go.Bar(name=country, y=df_mla[df_mla.country_agg==country][df_mla.columns[118]].value_counts(normalize=True).sort_index()*100),\n    go.Bar(name='Others', y=df_mla[df_mla.country_agg=='Others'][df_mla.columns[118]].value_counts(normalize=True).sort_index()*100)\n])\n\n# Change the bar mode\nfig.update_layout(\n    barmode='group',\n    title=f'ML adoption in workplaces of Kagglers from {country} compared to others',\n    xaxis_title=None,\n    yaxis_title='Percentage of respondents',\n    xaxis = dict(\n        tickmode = 'array',\n        tickvals = [x for x in range(7)],\n        ticktext = df_mla[df_mla.columns[118]].sort_values().unique()\n    )\n)\n\nfig.show()","106f1657":"#Code by https:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\nrole_cols = [col for col in df.columns \n           if \"Select any activities that make up an important part of your role at work\" in col]\ndf_role = df.copy()\nmapper = [col.split('- ',maxsplit=2)[2] for col in role_cols]\nmapping_dict = dict(zip(role_cols,mapper))\ndf_role = df_role[role_cols + [df.columns[3]] + ['country_agg']].rename(columns=mapping_dict)\ndf_role.dropna(how='all', subset=mapper, inplace=True)\n\nfig = px.bar(df_role[df_role.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=f'21% of all respondents are involved in ML research',\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()\n\ncountry_most_pop = df_role[df_role.iloc[:,-1]==country][df_role.columns[:-2]].count().sort_values(ascending=False)\nresearch_cnt = country_most_pop.loc['Do research that advances the state of the art of machine learning']\nresearch_pct = research_cnt*100\/len(df_role[df_role.iloc[:,-1]==country])\nif research_pct > 21:\n    title = f'At {research_pct:.0f}%, more Kagglers from {country} are involved in ML research than the global average'\nelif research_pct < 21:\n    title = f'At {research_pct:.0f}%, less Kagglers from {country} are involved in ML research than the global average'\nelse:\n    title = f'At {research_pct:.0f}%, the percentage of Kagglers {country} involved in ML research is the same as the global average'\n\nfig = px.bar(df_role[df_role.iloc[:,-1]==country][df_role.columns[:-2]].count().sort_values(ascending=False))\nfig.update_layout(\n    title=title,\n    xaxis_title=None,\n    yaxis_title='Number of respondents',\n    showlegend=False\n)\nfig.show()","15f47f08":"# colors\nbar_color = '#c19400'\ntitle_color = '#404040'\nsubtitle_color = '#4a4a4a'","c8a84abf":"#Create a subset of the data \nita_df = df_2021.query('Q3 == \"Italy\"')\n\n# Initialize plot figure object\nfig, ax = plt.subplots(1, 1, figsize=(10, 4), dpi=140);\n\ntmp = ita_df['Q5'].value_counts()[::-1]\n\n\nax.barh(tmp.index,\n       tmp,\n       color=bar_color,\n       edgecolor='#000000',\n       height=0.8);\n\n# Increase axis limit\n# ax.set_xlim([0, 100]);\n# ax.set_ylim([-1, 13.5]);\n\n\n# # Set axes labels\n# # ax.set_xlabel('Language', fontsize=12);\n# # ax.set_ylabel('Respondents', fontsize=12);\n\n# # Set axes ticks and labels\n# # ax.set_xticks(ticks=egy_prog_langs_count.index)\nax.set_yticklabels(labels=tmp.index, fontsize=8);\nax.set_xticks([]);\n\n\n# # Annotate bars\nfor i, bar in enumerate(ax.patches):\n    ax.annotate(text=bar.get_width(),\n                xy=(bar.get_width() + 2, bar.get_y() + bar.get_height() \/ 2),\n                ha='center',\n                va='center',\n                size=10,\n                color='#000000')\n    \n    \n# # Hide spines\nfor spine in ['top', 'bottom', 'right', 'left']:\n    ax.spines[spine].set_visible(False)\n    \n# # Hide ticks\nax.tick_params(left=False, bottom=False);\n\n# # Set title\nax.text(12, 16, 'How are Roles Distributed among Respondents?', fontfamily='serif', fontsize=14,\n             fontweight='bold', color=title_color)\nax.text(30, 15, 'In Italy', \n        fontsize=12, fontfamily='serif', color='#4a4a4a');\n","506be72a":"ita_df.loc[:, 'Q5_cleaned'] = ita_df.loc[:, 'Q5'].replace({'Currently not employed': 'Not employed',\n                                                          'Student': 'Not employed',\n                                                           'Data Engineer':'Other',\n                                                          'Developer Relations\/Advocacy': 'Other',\n                                                          'Product Manager': 'Other',\n                                                          'Statistician': 'Other',\n                                                          'DBA\/Database Engineer': 'Other'})\n","e669aa45":"import seaborn as sns\n\ntmp = ita_df.loc[:, (ita_df.columns.str.startswith('Q7')) | (ita_df.columns.isin(['Q5_cleaned']))]\n\n# Melt filtered data from wide to long format and drop null values\ntmp = pd.melt(tmp, id_vars=['Q5_cleaned']).dropna()\n\n# Pivot table to calculate frequency per profession\ntmp = pd.pivot_table(tmp, index=['Q5_cleaned'], columns=['value'], aggfunc='size', fill_value=0)\n\n# Normalize all activities per profession\ntmp = (tmp.T \/ tmp.T.sum()).T\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4), dpi=140);\n\nsns.heatmap(tmp,\n            xticklabels=True,\n            yticklabels=True,\n            cmap='YlOrBr',\n            annot=True,\n            linewidths=0.005,\n            linecolor='#4a4a4a',\n            annot_kws={\"fontsize\":10},\n            fmt='.2f',\n            cbar=False)\n\nax.text(2.2, -1.3, 'Who is using What in Italy?', fontname='serif', fontsize=25, color=title_color)\nax.text(4, -0.5, 'Programming Languages', fontname='serif', fontsize=15, color=\"#4a4a4a\")\nax.set_ylabel('Role', fontname='serif', fontsize=15, color=subtitle_color)\nax.set_xlabel('Language', fontname='serif', fontsize=15, color=subtitle_color)\nplt.xticks(rotation=0, ha='center', fontsize=8)\nplt.yticks(fontsize=8)\nplt.show()\n","54dfaf8a":"tmp=pd.crosstab(ita_df.Q5_cleaned,ita_df.Q2).T\n\ntmp = (tmp.T \/ tmp.T.sum())\nfig, ax = plt.subplots(1, 1, figsize=(10, 4), dpi=140);\n\nsns.heatmap(tmp,\n            xticklabels=True,\n            yticklabels=True,\n            cmap='YlOrBr',\n            annot=True,\n            linewidths=0.005,\n            linecolor='#4a4a4a',\n            annot_kws={\"fontsize\":10},\n            fmt='.2f',\n            cbar=False)\n\nax.text(2.2, -1.3, 'Who is working Where in Italy?', fontname='serif', fontsize=25, color=title_color)\nax.text(4, -0.5, 'by Gender', fontname='serif', fontsize=15, color=\"#4a4a4a\")\nax.set_ylabel('Profession', fontname='serif', fontsize=15, color=subtitle_color)\nax.set_xlabel('Gender', fontname='serif', fontsize=15, color=subtitle_color)\nplt.xticks(rotation=0, ha='center', fontsize=8)\nplt.yticks(fontsize=8)\nplt.show()\n","0d773205":"tmp = ita_df.loc[:, (ita_df.columns.str.startswith('Q7')) | (ita_df.columns.isin(['Q5_cleaned']))]\n\n# Melt filtered data from wide to long format and drop null values\ntmp = pd.melt(tmp, id_vars=['Q5_cleaned']).dropna()\n\n# Pivot table to calculate frequency per profession\ntmp = pd.pivot_table(ita_df, index=['Q5_cleaned'], columns=['Q20'], aggfunc='size', fill_value=0)\n\n# Normalize all activities per profession\ntmp = (tmp.T\/ tmp.T.sum())\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4), dpi=140);\n\nsns.heatmap(tmp,\n            xticklabels=True,\n            yticklabels=True,\n            cmap='YlOrBr',\n            annot=True,\n            linewidths=0.005,\n            linecolor='#4a4a4a',\n            annot_kws={\"fontsize\":10},\n            fmt='.2f',\n            cbar=False)\n\nax.text(1.9, -2, 'Who is working Where?', fontname='serif', fontsize=25, color=title_color)\nax.text(3.6, -0.6, 'In Italy', fontname='serif', fontsize=15, color=\"#4a4a4a\")\nax.set_ylabel('Role', fontname='serif', fontsize=15, color=subtitle_color)\nax.set_xlabel('Profession', fontname='serif', fontsize=15, color=subtitle_color)\nplt.xticks(rotation=30, ha='right', fontsize=8)\nplt.yticks(fontsize=8)\nplt.show()","8cafa09c":"tmp = ita_df.loc[:, (ita_df.columns.str.startswith('Q7')) | (ita_df.columns.isin(['Q2']))]\n\n# Melt filtered data from wide to long format and drop null values\ntmp = pd.melt(tmp, id_vars=['Q2']).dropna()\n\n# Pivot table to calculate frequency per profession\ntmp = pd.pivot_table(ita_df, index=['Q2'], columns=['Q20'], aggfunc='size', fill_value=0)\n\n# Normalize all activities per profession\ntmp = (tmp.T\/ tmp.T.sum())\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4), dpi=140);\n\nsns.heatmap(tmp,\n            xticklabels=True,\n            yticklabels=True,\n            cmap='YlOrBr',\n            annot=True,\n            linewidths=0.005,\n            linecolor='#4a4a4a',\n            annot_kws={\"fontsize\":10},\n            fmt='.2f',\n            cbar=False)\n\nax.text(1.9, -2, 'Who is working Where?', fontname='serif', fontsize=25, color=title_color)\nax.text(3.6, -0.6, 'In Italy', fontname='serif', fontsize=15, color=\"#4a4a4a\")\nax.set_ylabel('Field', fontname='serif', fontsize=15, color=subtitle_color)\nax.set_xlabel('Gender', fontname='serif', fontsize=15, color=subtitle_color)\nplt.xticks(rotation=30, ha='right', fontsize=8)\nplt.yticks(fontsize=8)\nplt.show()","6fb69283":"tmp = ita_df.loc[:, (ita_df.columns.str.startswith('Q24')) | (ita_df.columns.isin(['Q5_cleaned']))]\n\n# Melt filtered data from wide to long format and drop null values\ntmp = pd.melt(tmp, id_vars=['Q5_cleaned']).dropna()\n\n# Pivot table to calculate frequency per profession\ntmp = pd.pivot_table(tmp, index=['Q5_cleaned'], columns=['value'], aggfunc='size', fill_value=0)\n\n# Normalize all activities per profession\ntmp = (tmp.T \/ tmp.T.sum())\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4), dpi=140);\n\nsns.heatmap(tmp,\n            xticklabels=True, yticklabels=True, cmap='YlOrBr', annot=True, linewidths=0.005, linecolor='#4a4a4a', annot_kws={\"fontsize\":12}, fmt='.2f', cbar=False)\nax.text(1, -1.5, 'Who is doing What in Italy?', fontname='serif', fontsize=30, color=title_color)\nax.text(3, -0.5, 'Work Activities', fontname='serif', fontsize=20, color=\"#4a4a4a\")\nax.set_ylabel('Activities', fontname='serif', fontsize=15, color=subtitle_color)\nax.set_xlabel('Profession', fontname='serif', fontsize=15, color=subtitle_color)\nplt.xticks(rotation=30, ha='right', fontsize=10)\nplt.yticks(fontsize=10)\nplt.show()","a34061d0":"tmp = ita_df.loc[:, (ita_df.columns.str.startswith('Q24')) | (ita_df.columns.isin(['Q2']))]\n\n# Melt filtered data from wide to long format and drop null values\ntmp = pd.melt(tmp, id_vars=['Q2']).dropna()\n\n# Pivot table to calculate frequency per profession\ntmp = pd.pivot_table(tmp, index=['Q2'], columns=['value'], aggfunc='size', fill_value=0)\n\n# Normalize all activities per profession\ntmp = (tmp.T \/ tmp.T.sum())\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4), dpi=140);\n\nsns.heatmap(tmp,\n            xticklabels=True, yticklabels=True, cmap='YlOrBr', annot=True,linewidths=0.005, linecolor='#4a4a4a', annot_kws={\"fontsize\":12}, fmt='.2f', cbar=False)\nax.text(1, -1.5, 'Who is doing What in Italy?', fontname='serif', fontsize=30, color=title_color)\nax.text(3, -0.5, 'Work Activities', fontname='serif', fontsize=20, color=\"#4a4a4a\")\nax.set_ylabel('Activities', fontname='serif', fontsize=15, color=subtitle_color)\nax.set_xlabel('Gender', fontname='serif', fontsize=15, color=subtitle_color)\nplt.xticks(rotation=30, ha='right', fontsize=10)\nplt.yticks(fontsize=10)\nplt.show()","f00bc806":"tmp = ita_df.loc[:, (ita_df.columns.str.startswith('Q7')) | (ita_df.columns.isin(['Q2']))]\n\n# Melt filtered data from wide to long format and drop null values\ntmp = pd.melt(tmp, id_vars=['Q2']).dropna()\n\n# Pivot table to calculate frequency per profession\ntmp = pd.pivot_table(tmp, index=['Q2'], columns=['value'], aggfunc='size', fill_value=0)\n\n# Normalize all activities per profession\ntmp = (tmp.T \/ tmp.T.sum()).T\n\nfig, ax = plt.subplots(1, 1, figsize=(10, 4), dpi=140);\n\nsns.heatmap(tmp,\n            xticklabels=True,\n            yticklabels=True,\n            cmap='YlOrBr',\n            annot=True,\n            linewidths=0.005,\n            linecolor='#4a4a4a',\n            annot_kws={\"fontsize\":10},\n            fmt='.2f',\n            cbar=False)\n\nax.text(2.2, -1.3, 'Who is using What in Italy?', fontname='serif', fontsize=25, color=title_color)\nax.text(4, -0.5, 'Programming Languages', fontname='serif', fontsize=15, color=\"#4a4a4a\")\nax.set_ylabel('Role', fontname='serif', fontsize=15, color=subtitle_color)\nax.set_xlabel('Language', fontname='serif', fontsize=15, color=subtitle_color)\nplt.xticks(rotation=0, ha='center', fontsize=8)\nplt.yticks(fontsize=8)\nplt.show()\n","2164a6c5":"print(df_2018[(df_2018.Q3==\"Italy\") & (df_2018.Q1==\"Female\")].shape[0])\nprint(df_2019[(df_2019.Q3==\"Italy\") & (df_2019.Q2==\"Female\")].shape[0])\nprint(df_2020[(df_2020.Q3==\"Italy\") & (df_2020.Q2==\"Woman\")].shape[0])\nprint(df_2021[(df_2021.Q3==\"Italy\") & (df_2021.Q2==\"Woman\")].shape[0])","e1579636":"# Populate a dataframe with the counts of female sample for Italy\nfemale_presence=[df_2018[(df_2018.Q3==\"Italy\") & (df_2018.Q1==\"Female\")].shape[0],\ndf_2019[(df_2019.Q3==\"Italy\") & (df_2019.Q2==\"Female\")].shape[0],\ndf_2020[(df_2020.Q3==\"Italy\") & (df_2020.Q2==\"Woman\")].shape[0],\ndf_2021[(df_2021.Q3==\"Italy\") & (df_2021.Q2==\"Woman\")].shape[0]]\n\n#Extract from the previous dataframe the global Female population for the surveys\ndf_2018f= df_2018[df_2018.Q1==\"Female\"]\ndf_2019f=df_2019[df_2019.Q2==\"Female\"]\ndf_2020f=df_2020[df_2020.Q2==\"Woman\"]\ndf_2021f=df_2020[df_2020.Q2==\"Woman\"]\ntot_woman=df_2018f.shape[0],df_2019f.shape[0],df_2020f.shape[0],df_2021f.shape[0]\n\n# Initialize a list containing all the surverys\ndfs_list1 = [df_2018f, df_2019f, df_2020f, df_2021f]\n\n#And the percentage\nfemale_perc=[round(df_2018[(df_2018.Q3==\"Italy\") & (df_2018.Q1==\"Female\")].shape[0]\/df_2018[df_2018.Q3==\"Italy\"].shape[0],2),\nround(df_2019[(df_2019.Q3==\"Italy\") & (df_2019.Q2==\"Female\")].shape[0]\/df_2019[df_2019.Q3==\"Italy\"].shape[0],2),\nround(df_2020[(df_2020.Q3==\"Italy\") & (df_2020.Q2==\"Woman\")].shape[0]\/df_2020[df_2020.Q3==\"Italy\"].shape[0],2),\nround(df_2021[(df_2021.Q3==\"Italy\") & (df_2021.Q2==\"Woman\")].shape[0]\/df_2021[df_2021.Q3==\"Italy\"].shape[0],2)]\n\nita_woman_per_yr = pd.DataFrame({\n    'year': [2018, 2019, 2020, 2021],\n    'respondents': female_presence,\n    'percentage': female_perc,\n    'world':tot_woman,\n    'rank': [get_country_respondents_rank(df, 'Q3', 'Italy') for df in dfs_list1]\n    })\n\nita_woman_per_yr[\"global_percentage\"]=round(ita_woman_per_yr[\"respondents\"]\/ita_woman_per_yr[\"world\"],3)\n\n\nita_woman_per_yr","ac11f679":"#TODO: Draw a line plot with two y-axes for respondents count and rank\n\n# Initialize plot figure object\nfig, ax = plt.subplots(1, 1, figsize=(6, 4), dpi=140);\n\nbar_color = '#c19400'\n\n\nax.bar(ita_woman_per_yr.year,\n       ita_woman_per_yr.respondents,\n       color=bar_color,\n       edgecolor='#000000',\n       width=0.8,\n       label='Respondents')\n\n# Increase axis limit\nax.set_ylim([0, 650]);\n\n# Set axes labels\nax.set_xlabel('Year', fontsize=12);\n# ax.set_ylabel('Respondents', fontsize=12);\n\n# Set axes ticks and labels\nax.set_xticks(ticks=ita_woman_per_yr.year)\nax.set_xticklabels(labels=ita_woman_per_yr.year);\n\n# Annotate bars\nfor i, bar in enumerate(ax.patches):\n    ax.annotate(text=bar.get_height(),\n                xy=(bar.get_x() + bar.get_width() \/ 2, bar.get_height() \/ 2),\n                ha='center',\n                va='center',\n                size=10,\n                color='#000000')\n\n\n# Make a twin ax object to plot the rank in the same plot\nax2 = ax.twinx()\n\n# Make rank line plot\nl2 = ax2.plot(ita_woman_per_yr.year,\n              ita_woman_per_yr['rank'],\n              color='#4a4a4a',\n              linestyle=':',\n              linewidth=1.0,\n              marker='o',\n              markersize=5,\n              markerfacecolor='#c19400',\n              label='Rank')\n\n# Invert axis\nax2.invert_yaxis();\n\n# Increase axis limit\nax2.set_ylim([55, 5]);\n\n# # Set axes labels\n# ax2.set_ylabel('Rank', fontsize=12);\n\n\n# Set title\nax.text(2017.3, 677, 'Italian Female Presence in Kaggle\\'s Surveys',\n             fontsize=15, fontfamily='serif', fontweight='bold', color='#4a4a4a');\nax.text(2017.3, 630, 'Respondents and Rank (2018-2021)', \n        fontsize=13, fontfamily='serif', color='#4a4a4a')\n\n# Remove upper axis\nax.spines['top'].set_visible(False);\nax2.spines['top'].set_visible(False);\nax.spines['right'].set_visible(False);\nax2.spines['right'].set_visible(False);\nax.spines['left'].set_visible(False);\nax2.spines['left'].set_visible(False);\n\n# Remove yticks\nax.tick_params(left=False);\nax.set_yticklabels([]);\nax2.tick_params(right=False);\nax2.set_yticklabels([]);\n\n# Annotate line plot\nfor row in ita_woman_per_yr.itertuples():\n    ax2.annotate(text=row.rank,\n                xy=(row.year, row.rank-3),\n                ha='center',\n                va='center',\n                size=10,\n                color='#000000')\n\n# Make legend\nfig.legend(loc='center');","afa82c9b":"<div style=\"display:fill;\n            border-radius: false;\n            border-style: solid;\n            border-color:#222222;\n            border-style: false;\n            border-width: 2px;\n            color:#CF673A;\n            font-size:15px;\n            font-family: Georgia;\n            background-color:#E8DCCC;\n            text-align:center;\n            letter-spacing:0.1px;\n            padding: 0.1em;\">\n\n**<h2>Gender in Italy**\n---","a2379fa6":"Now we can see the distribution for different languages utilized respect to the different roles","c514fade":"The distribution for the italian respondants is bimodal (25-29 and 45-49 are the 2 peaks of the distribution) while it's more regular for the global respondents ( high for the young classes and than slowly descending towards the oldest classes). This is very interesting. It seems more used for business purposes than for teaching or learning scope. We can investigate further later analizing the question related to the professions.\nItaly is eleventh in average Age and the italian kagglers is 6 years older than the average kaggler\n","ada5c984":"- The Italian **Males** presents more diversified specializations in terms of tasks respect to women. The most of them are involved in analysis of data to influence productions or business decisions and building prototypes for investigation in new areas by machine learning. \n\n- The Italian **Women**  seems to be involved in the aforementioned tasks as well asto the experimantation and iterarion task to improve existing machine learning models (more than the males in proportion).","cf84347b":"Hosted Notebooks\n---\n\nOnly includes respondents who chose atleast one option for the question 'Which of the following hosted notebook products do you use on a regular basis?'","51ffb910":"Cloud Computing Products\n---\n\nOnly includes respondents who chose atleast one option for the question 'Do you use any of the following cloud computing products on a regular basis?'","550f7e1a":"We have similar trends respect to the global community for NLP methods","672c055c":"I excluded the category \"Nonbinary\" because we don't have it in italy while this category represents it's around 0.3% in the other countries\n\nThe percentage of italian Woman respondents is much lower than the global average. It could be due to cultural aspects that would be interesting to analize in further studies.\nItaly is around the 60th position for percentage of female in this survey and it's really too small respect the global Average.\n\nAn interesting fact is that we find in the first position Tunisia and in general all the first positions are occupied from countries ( Sri Lanka, Malaysia, Saudi Arabia) from Eastern countries or countries were islamic religion and is predominant (Tunisia,Algeria). It could be interesting to group this countries for geografic Areas.\n\n\n","8a285f74":"IT's really interesting that italian students represents a really lower percentage respect to the global mean. A good score is realized from Research Scientist with a percentage double respect to the global one. In General Kaggle is used more from people with a very high level of instruction and with a work in analitic field ( data scientist are 19% vs 14% compared to the global mean) in Italy. \n\nWe find in the first positions only Asian countries like  China, Bangladesh, Sri Lanka and so on.","fd6ca54d":"Computer Vision Methods\n---\n\nOnly includes respondents who chose atleast one option for the question 'Which categories of computer vision methods do you use on a regular basis?'","84cf9cd9":"We can do some cleaning to make this data more comprehensible, as their are some roles with low number of respondents, and they aren't particularly important since we are more interested in Data Scientists.\n\nSo we can make Student and Currently not employed into one category, and also we can merge anything with less than 10 respondents into the Other category.","d562ff21":"We imported the data for the previous survey. That could be useful to analize a trend about the italian community of kagglers","4a78ee0a":"Machine Learning Frameworks\n---\n\nOnly includes respondents who chose atleast one option for the question 'Which of the following machine learning frameworks do you use on a regular basis?'","55fd3a46":"The function *get_country_respondents_count* will show me number of respondents for a specific name of country while *get_country_respondents_rank* will return me the ranking of that specific state","a77446aa":"The same percentage more or less we find about the Data visualization Library. We can note that D3 js seems quite used by Italian Kagglers","3cc52ec7":"<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/0\/03\/Flag_of_Italy.svg\"\n     style=\"width: 60%; margin: auto; padding-bottom: 30px;\">","f0a0dac8":"In this aspects we are in line with the global mean but it's interesting that more italians prefers to use R than C++","036ff1fb":"I prefer to keep 2 distinct dataset with 1 for short name of variables and another one more comprehensible about the description of the variables","9c840262":"IDE\n---\n\nOnly includes respondents who chose atleast one option for the question 'Which of the following integrated development environments (IDE's) do you use on a regular basis?'","caf627e5":"Not significantly difference about the IDE used by italian Kagglers","85da8157":"The percentages for the cloud computing platform respects the global trend","e1744db4":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 10px; background: #FFEFD5;\"><b style=\"color:#0000CD;\">First a Global glance<\/b><\/h1><\/center>\n\nThese are the most frequent responses for every questions for the global community","46b037d3":"Who is using  what?\n===\n\nIn this specific section we want to discover more about the different kind of tools used respect to the kind of job in Italy. How could differ the skills being student or worker? and how from being a Data Analyst from a Data Scientist?\nlet's try to have a more complex view. \n\nAs we saw above the most represented categories in the italian Respondants were Data Scientists, Students and Researchers but we have a lot of different categories as well","9f8cadf1":"The same for Cloud Computing Products","690f0a56":"*Note:In this cell we will show the different nationality of the respondants. With *Other* we indicate the countries with a frequency below a certain threshold ( less than 40 kagglers).*","32942aea":"More or less we have the same trend about the Machine Learning Frameworks","0462c28d":"Analysis for the Italian community\n---\n\nI was inspired from a job of Siddhantasadangi (i'll give you the link below), who is a good baseline to make a comparison between a single country and the others.\n\nIn the next cell i will create a subset of the original dataset including only the italian respondents and i'll call it Italy.\n\nLink of Siddhantasadangi's job:\n\nhttps:\/\/www.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip","a5878961":"<div style=\"display:fill;\n            border-radius: false;\n            border-style: solid;\n            border-color:#000000;\n            border-style: false;\n            border-width: 2px;\n            color:#CF673A;\n            font-size:15px;\n            font-family: Georgia;\n            background-color:#E8DCCC;\n            text-align:center;\n            letter-spacing:0.1px;\n            padding: 0.1em;\">\n\n**<h2> The questions in the Survey**\n","8ccacc65":"Role at Work\u00b6\n---\nOnly includes respondents who chose atleast one option for the question 'Select any activities that make up an important part of your role at work'","6c08522a":"NLP Methods\n---\n\nOnly includes respondents who chose atleast one option for the question 'Which of the following natural language processing (NLP) methods do you use on a regular basis?","a63adcfe":"- **Business Analysts** are very different from the others because they don't work much in the technological field but more in the **Accounting\/Finance**\n\n- It's clear that **Scientific Researchers** are more involved in the **Academic Field** more than everyone followed by Machine Learning Engineer.\n\n- The most of the remaining roles are absorbed by **Computer\/Tecnology** field, especially **Software Engineers* and **Product Managers**.\n\n- **Data Analysts** and **Data Scientists** are involved as well in the **Computer\/Tecnology**  field but with a wider diversification. Analysts are also employed in Accounting and Entertainment.\n\n- Something similar we could say for **Machine Learning Engineers** with the difference that many of them replied \"Other\"\n","f73add10":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 10px; background: #00BFFF;\"><b style=\"color:#0000CD;\">Conclusions<\/b><\/h1><\/center>\n\nWe can say that after an encouraging results the Italian community in Kaggle is not growing too much  in the last year but the resalt of 2021 promising a better future.\nThe average Italian Kaggler if we could talk about a average Italian is a male at around 30 years and a master's Degree or Phd. He is generally high qualified and prefer to use Python (and possibly R who is more used in the academic path) and works as Data Scientist.\n\nWhere we could make better? probably around the female community and students or youngsters in general. Maybe because the italian system is more focused on the theory first doesn't help them to approach on the competitions and elearning but with the recent politics of government and the introduction of new degrees with an orientation of the world of data we expect to find better results in this sense.\nIt's curious that we have a good percentage of people in this sense withouth a specific degree who discover this world of Kaggle driven by curiosity. In this sense The Covid-19 pandemic changed our lives in many aspects and it could have an impact soon even in the Italian society. \n\nIn this sense i could say that finding material in italian language online was really hard in the last year and this in a country where traditionally has difficult in learning foreign language (English is spoken less than in other european country an not only) could be an obstacle.\n\nThat's could be one reason why Italians approached to kaggle later than many other.\n\nThe gender gap is another weakness. It could be influenced by cultural aspects of the Italia Society, Let's see if in the next years something will change. \n\nWaiting for the next surveys,\n\nThank you for reading.  ","24112e3f":"Machine Learning Algorithms\n---\n\nOnly includes respondents who chose atleast one option for the question 'Which of the following ML algorithms do you use on a regular basis?'","0c4215c4":"And if we want to discover the tendency in the last years?\nLet's find out now.","d1d90142":"Coding preferences\n---\n\nProgramming language\nOnly includes respondents who chose atleast one option for the question \"What programming languages do you use on a regular basis?\"","99bf67ef":"- The activity of analyzing and understanding data for the business is the prerogative of the **Business Analyst** and **Project Manager**.\n\n- The task of build prototipes  for machine learnig applied is more for **Machine Learning Engineer**, **Data Analyst\/Scientist** and **Research Scientist**.\n\n- **Software Engineer** have a wider range of tasks even they collaborate in the same task of above with other specialists.","28b93892":"Machine Learning Adoption at Work\n---\nOnly includes respondents who answered the question 'Does your current employer incorporate machine learning methods into their business?'","33b488b0":"We have similar percentages for the Algorithm. Italians seems appreciate more the Convolutional neural network than Gradient Boosting Machines","3d160e07":"Italy is in the 20th place for number of respondents (excluding Other of course) who is in line with expectations( Italy is around the 23th country more populated in the world). We can find some single exploit of Spain Canada and South Korea who are less populated than Italy and precede it in this particular classification. \n\nAs we could imagine India is in the first Position followed by Usa and Japan","4e49441b":"These are the main questions for the Survey:\n\n<table class=\"Data_Definition\">\n  <thead>\n    <tr>\n      <th class=\"header\">Number<\/th>\n      <th class=\"header\">Question<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <td>Q1<\/td>\n      <td>What is your age (# years)?<\/td>\n    <\/tr>\n    <tr>\n      <td>Q2<\/td>\n      <td>What is your gender?<\/td>\n    <\/tr>\n    <tr>\n      <td>Q3<\/td>\n      <td>In which country do you currently reside?<\/td>\n    <\/tr>\n    <tr>\n      <td>Q4<\/td>\n      <td>What is the highest level of formal education that you have attained or plan to attain within the next 2 years?<\/td>\n    <\/tr>\n    <tr>\n      <td>Q5<\/td>\n      <td>Select the title most similar to your current role (or most recent title if retired)<\/td>\n    <\/tr>\n    <tr>\n      <td>Q6<\/td>\n      <td>For how many years have you been writing code and\/or programming?<\/td>\n    <\/tr>\n    <tr>\n      <td>Q7<\/td>\n      <td>What programming languages do you use on a regular basis?<\/td>\n    <\/tr>\n    <tr>\n      <td>Q8<\/td>\n      <td>What programming language would you recommend an aspiring data scientist to learn first?<\/td>\n    <\/tr>\n    <tr>\n      <td>Q9<\/td>\n      <td>Which of the following integrated development environments (IDE's) do you use on a regular basis?<\/td>\n    <\/tr>\n    <tr>\n      <td>Q10<\/td>\n      <td>Which of the following hosted notebook products do you use on a regular basis? <\/td>\n    <\/tr>\n    <tr>\n      <td>Q11<\/td>\n      <td>What type of computing platform do you use most often for your data science projects?<\/td>\n    <\/tr>\n       <tr>\n      <td>Q12<\/td>\n      <td>Which types of specialized hardware do you use on a regular basis?<\/td>\n    <\/tr>  \n          <tr>\n      <td>Q13<\/td>\n      <td>Approximately how many times have you used a TPU<\/td>\n    <\/tr>  \n          <tr>\n      <td>Q14<\/td>\n      <td>What data visualization libraries or tools do you use on a regular basis?<\/td>\n    <\/tr>  \n          <tr>\n      <td>Q15<\/td>\n      <td>For how many years have you used machine learning methods?<\/td>\n    <\/tr>\n      <tr>\n          <td>Q16<\/td>\n          <td>Which of the following machine learning frameworks do you use on a regular basis?<\/td>\n           <\/tr>\n       <tr>\n          <td>Q17<\/td>\n          <td>Which of the following ML algorithms do you use on a regular basis?<\/td>\n           <\/tr>\n  <\/tbody>\n<\/table>","cbd00148":"Italy is in the 20th place for number of respondents (excluding Other of course) who is in line with expectations( Italy is around the 23th country more populated in the world). We can find some single exploit of Spain Canada and South Korea who are less populated than Italy and precede it in this particular classification.\n\nAs we could imagine India is in the first Position followed by Usa and Japan","94ac7970":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 10px; background: #00BFFF;\"><b style=\"color:#0000CD;\">A Look to the Italian Kagglers<\/b><\/h1><\/center>","936bff76":"<div style=\"display:fill;\n            border-radius: false;\n            border-style: solid;\n            border-color:#000000;\n            border-style: false;\n            border-width: 2px;\n            color:#CF673A;\n            font-size:15px;\n            font-family: Georgia;\n            background-color:#E8DCCC;\n            text-align:center;\n            letter-spacing:0.1px;\n            padding: 0.1em;\">\n\n**<h2>Age of the Italian Kagglers respet to the others**\n---","e08cda2a":"Cloud Computing Platforms\n---\nOnly includes respondents who chose atleast one option for the question 'Which of the following cloud computing platforms do you use on a regular basis?'","32bbf55b":"And Finally let's see how many Italian women responded during the last years to the survey and their percentage on the italian sample.","9d3cc766":"<center><h1>Kaggle Survey 2021<\/h1><\/center>\n\n\n<br>\n\n<h1 style='background:#26A2AB; border:0; color:black'><center>The Story behind this Notebook<\/center><\/h1> \n\n\nWith this notebook i would highlights some particular aspects of the Italian community of Kaggle. \nOf course the sample in this job could be biased because of the fact that we are not sure that the respondants are really representive of all the aspects of the italian community but we can make a comparison between the italian respondents and the global respondents. \nWe will focus especially in the demographic aspects (Age,Gender,Title) such as the tecnical aspects like preferences in tools or Algorithm.\n\nFinally i want to have a specific focus about the gender differences in terms of skills and roles in the Italian community that will be explored in the last part of the notebook trying to understand in the same time if there are differences in terms of skills or title about the different roles or tasks (or differences between students and workers as well).\nOne of the first things that i note is the very low presence of females in the italian community of kaggle and it would be interesting to analyze possible reasons of that.\n\nI want to thank for the insight some specific Kaggler as well who inspired me a lot like Samir Ahmed, Marilia Prata and Siddhant Sadangi\n\nlinks:\nwww.kaggle.com\/siddhantsadangi\/your-country-vs-the-world-24-factors-wip\n\nhttps:\/\/www.kaggle.com\/samir95\/the-state-of-data-science-in-egypt\n\nhttps:\/\/www.kaggle.com\/mpwolke\/kaggle-survey-2021-brazil","f69f93e0":"<div style=\"display:fill;\n            border-radius: false;\n            border-style: solid;\n            border-color:#000000;\n            border-style: false;\n            border-width: 2px;\n            color:#CF673A;\n            font-size:15px;\n            font-family: Georgia;\n            #background-color:#E8DCCC;\n            background-color:#FFFFE0;\n            text-align:center;\n            letter-spacing:0.1px;\n            padding: 0.1em;\">\n\n**<h2> Respondents by Country**\n----\n","ce2bad78":"![Upvote!](https:\/\/img.shields.io\/badge\/Upvote-If%20you%20like%20my%20work-07b3c8?style=for-the-badge&logo=kaggle)","60200795":"Workplace\u00b6\n---\nSize\n\nOnly includes respondents who answered the question 'What is the size of the company where you are employed?'","17dfaf7b":"- One of the most curious thing is that half of the population who replied \"Prefer not to say\" works in the MArketing\/CRM field but we have to consider that the sample is really small. We could deepen on a larger sample.\n\n- The most of the kagglers ( Males and females) are working in particular in the field of **Computer\/Tecnology** and **Academics\/Education** while a higher percentage of women replied that they work in the field of **Government\/ Public Services**. Males are also employed more than Women in the **Accounting\/Finance** field.","e249535e":"the experience is quite evenly distributed for people with more of 1 years of experience in Italy. Generally italians seems to tends to partecipate in competitions only when they have reached a certain level of confidence.","057097a4":"Data Science Team Size\n---\nOnly includes respondents who answered the question 'Approximately how many individuals are responsible for data science workloads at your place of business?'","41a47c73":"Job title\n----\nOnly includes respondents who answered the question \"Select the title most similar to your current role (or most recent title if retired)\"","74544e00":"Interesting is the result for R who is in italy used from 27% of kagglers vs a global 21%","fdddb91b":"In this cell we will show the different nationality of the respondants. With Other we indicate the countries with a frequency below a certain threshold ( less than 40 kagglers).","0e2b27ca":"We have more kagglers between people with a Doctoral degree than a Master's degree differently from the other countries. Maybe it could depends on the System of study in Italy. We have a more theoric approach in the first years of courses.It's interesting the percentage of people with no formal education past high school sensibly higher than in the other countries.","5863c83c":"Coding Experience\u00b6\n---\nOnly includes respondents who answered the question \"For how many years have you been writing code and\/or programming?\"","c1563ced":"In this case general purpose image seems to be preferred respec to other methods like Image segmentation methods like CNN.","a17b6f20":"We can note despite an encouraging partecipation in the 2018's survey it seems that italian female presence in the Survey remain stable and at a lower level respect to the aggregate in terms of ranking. We hope to have a better result for the future of the italian community.","30cbce2f":"- The most of **Females** respondents are **Unemployed** or **Data Scientist**\n\n- We have a lower percentage of Unemployed in the **Males** respondents. They seems to be distributed in different kind of professions respect to the Female population.\n\n-  The other 2 categories have a very low number of respondents to let us draw conclusions","5f7221be":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 10px; background: \t#FFEFD5;\"><b style=\"color:\t#0000CD;\">Global distribution by gender<\/b><\/h1><\/center>\n","039a4209":"Data Visualization Library\n---\n\nOnly includes respondents who chose atleast one option for the question 'What data visualization libraries or tools do you use on a regular basis?'\u00f9","e143d0e7":"Italians Kagglers seems to prefer more Colab notebooks than Kaggle Notebooks","0d18c1c6":"We find just 4 modalities for the question about the Gender. There are no people with the answer \"Nonbinary\"","e5fc74c6":"IT seems not to be a significant difference in terms of choice of programming language by Gender","65e8d7bf":"**A little comparison Between 2 different countries : Italy & Brazil**","afa0d473":"We can see that the percentage of Female in the survey was quite regularly around 10% during the last years with a peak of 13% in the 2018 and the percentage on the total of the female in the survay remain stable at around 0,8% of the respondents","347a2194":"- **Python** is the most used Programm in every field\n\n- **R** is  preferred between **Data Analysts** and **Data Scientist** as well\n\n- **Sql** is used in the same fields than  R but also by **Projeuct Managers** and **Business Analysts**\n\n- **Bash** is used by many **Researchers**.\n\n- **Java** is more popular between **Software Engineers**.\n\n- **C**,**C++** and the others seems not to be particularly used by a specifid category.\n","544e942e":"In the next cell we will highlith the differences about the age for the italian respondants respect to the others:","0f6c479c":"We can see that despite a great result for the first survey (year 2018) the number of respondents decrease and Italian kagglers lost positions on the ranking even though we can observe an increase in the number of respondents for the last survey (year 2021).\n\nWe can see the general tendencies for number of respondents and ranking in the graph below","d3b7bf19":"We now focus our attention to the specific interesing modality \"Woman\"","f01f629a":"**Academic Qualification**\n---\n\nOnly includes respondents who answered the question \"What is the highest level of formal education that you have attained or plan to attain within the next 2 years?\""}}