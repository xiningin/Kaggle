{"cell_type":{"27d07f5d":"code","42cb28c4":"code","75c0a81c":"code","e14a558d":"code","bc7a320e":"code","4c30dc3c":"code","c905cbc8":"code","ba6450de":"code","fd451832":"code","eec5c1e3":"code","2db01eb5":"code","4ab91f5e":"code","27061b2b":"code","d01dd4c8":"code","0815a6e3":"code","fe0cb01b":"code","b393e176":"code","37b26335":"code","6e02ed0e":"code","1574fc38":"code","9c885ac3":"code","c82f1a88":"code","2426c842":"code","02f32084":"code","611a4d56":"code","fe68463e":"code","8c3f7260":"code","7e779a38":"code","8406ba1e":"code","51af31b0":"code","ea5777d9":"code","9d36d7a3":"code","cbab608a":"markdown","357313a6":"markdown","3fc50513":"markdown","26a4e3b2":"markdown","f176cd63":"markdown"},"source":{"27d07f5d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn import linear_model","42cb28c4":"%matplotlib inline","75c0a81c":"df= pd.read_csv(\"..\/input\/canadas-per-capita-income\/Canada-per-capita-income.csv\")","e14a558d":"df.head()","bc7a320e":"df.rename(columns={'year':\"Years\",\"per capita income (US$)\":\"P.C.I. $\"} ,inplace=True)","4c30dc3c":"df.head(5)","c905cbc8":"plt.scatter(df['Years'], df['P.C.I. $'], color=\"red\",marker='+')\nplt.xlabel(\"YEARS\")\nplt.ylabel(\"Per-Capita-Income ($)\")\n","ba6450de":"reg = linear_model.LinearRegression()","fd451832":"reg.fit(df[['Years']],df['P.C.I. $'])","eec5c1e3":"reg.predict([[2050]])","2db01eb5":"reg.coef_","4ab91f5e":"reg.intercept_","27061b2b":"plt.scatter(df['Years'], df['P.C.I. $'], color=\"red\",marker='+')\nplt.xlabel(\"YEARS\")\nplt.ylabel(\"Per-Capita-Income ($)\")\nplt.plot(df['Years'],reg.predict(df[['Years']]),color=\"blue\")","d01dd4c8":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.rcParams['figure.figsize'] = (12.0, 9.0)\n\n\ndata = pd.read_csv(\"..\/input\/linearreg-data\/data.csv\")\nX = data.iloc[:, 0]\nY = data.iloc[:, 1]\nplt.scatter(X, Y)\nplt.show()","0815a6e3":"# creating the model\n\nm = 0 \nc = 0\n\nL = 0.0001\niters = 1000\n\nn= float(len(X))\n\nfor i in range(len(X)):\n    Y_pred = m*X+c\n    deri_m = (-2\/n) * sum(X*(Y-Y_pred))\n    deri_c = (-2\/n)* sum(Y-Y_pred)\n    \n    m = m - L*deri_m\n    c = c - L*deri_c\n    \nprint(m,c)    \n\n","fe0cb01b":"Y_pred = m*X+c\nplt.scatter(X, Y)\nplt.plot(X, Y_pred,color='red')\nplt.show()","b393e176":"Y_pred","37b26335":"df1= pd.read_csv(\"..\/input\/linearreg-data\/hiring.csv\")","6e02ed0e":"df1","1574fc38":"df1.rename(columns={'test_score(out of 10)':\"testscore_10\",\"interview_score(out of 10)\":\"inter_score\",\"salary($)\":\"salary\"},\n           inplace =True)","9c885ac3":"df1","c82f1a88":"import math\n\nmed=df1.testscore_10.median()\ndf1.testscore_10 = df1.testscore_10.fillna(med)\n","2426c842":"from word2number import w2n\n\ndf1.experience = df1.experience.fillna(\"Zero\")","02f32084":"for i in range(len(df1.experience)):\n    s=df1.iloc[i,0]\n    df1.iloc[i,0]=w2n.word_to_num(s)\n","611a4d56":"df1","fe68463e":"for j in range(len(df1.salary)):\n    s=df1.iloc[j,3]\n    if \"S\" in s:\n        y=s.replace(\"S\",\" \")\n        df1.iloc[j,3]=int(y)\n        \n    else:\n        df1.iloc[j,3]=int(df1.iloc[j,3])\n        \n ","8c3f7260":"df1","7e779a38":"# creating our model\n\nreg1 = linear_model.LinearRegression()\nreg1.fit(df1[['experience','testscore_10','inter_score']],df1['salary'])","8406ba1e":"reg1.coef_","51af31b0":"reg1.intercept_","ea5777d9":"reg1.predict([[2,9,6]])","9d36d7a3":"reg1.predict([[12,10,10]])","cbab608a":"### 2) GRADIENT DESCENT ALGORITHM : LINEAR REGRESSION","357313a6":"### 1)SKLEARN : LINEAR REGRESSION","3fc50513":"# LINEAR REGRESSION MODELS","26a4e3b2":"#### OPTIMIZING THE COST FUNCTION \"MEAN SQUARE ERROR\" ","f176cd63":"# MULTIVARIATE LINEAR REGRESSION"}}