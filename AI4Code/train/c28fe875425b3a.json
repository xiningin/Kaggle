{"cell_type":{"4f1aabb7":"code","a770a9c0":"code","a76b5615":"code","9b28a6dc":"code","cbda0cb0":"code","9cbc0330":"code","612f6444":"code","1a207f2d":"markdown","818351ab":"markdown","ac1b930a":"markdown","bf0eb65a":"markdown","597149a0":"markdown"},"source":{"4f1aabb7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a770a9c0":"#Code by Yvtsan Levy https:\/\/www.kaggle.com\/yvtsanlevy\/introduction-to-class-activition-map\n\nfrom __future__ import print_function, division\nfrom builtins import range, input\n# Note: you may need to update your version of future\n# sudo pip install -U future\n\nfrom keras.models import Model\nfrom tensorflow.keras import layers\n\nfrom tensorflow.keras.applications.resnet50 import ResNet50, preprocess_input, decode_predictions\nfrom keras.preprocessing import image\n\nimport numpy as np\nimport scipy as sp\nimport matplotlib.pyplot as plt\n\nfrom glob import glob\nimport itertools\nimport warnings\nwarnings.filterwarnings(\"ignore\")","a76b5615":"#Code by Yvtsan Levy https:\/\/www.kaggle.com\/yvtsanlevy\/introduction-to-class-activition-map\n\nimage_path = '..\/input\/indian-coin-denomination-dataset-icdd\/DataSet\/Twenty\/Coin 1'\nimage_files = glob(image_path +  '\/*\/*.jpg')# original was *.JP*G, then I changed to jpeg to avoid error \"ValueError: 'a' cannot be empty unless no samples are taken\"","9b28a6dc":"#Code by Yvtsan Levy https:\/\/www.kaggle.com\/yvtsanlevy\/introduction-to-class-activition-map\n\n# look at an image for fun\n\nplt.imshow(image.load_img(np.random.choice(image_files)));","cbda0cb0":"#Code by Yvtsan Levy https:\/\/www.kaggle.com\/yvtsanlevy\/introduction-to-class-activition-map\n\n# add preprocessing layer to the front of VGG\nresnet = ResNet50(input_shape=(224, 224, 3), weights='imagenet', include_top=True)\n\n# view the structure of the model\n# if you want to confirm we need activation_49\nresnet.summary()","9cbc0330":"#Code by Yvtsan Levy https:\/\/www.kaggle.com\/yvtsanlevy\/introduction-to-class-activition-map\n\n# make a model to get output before flatten\nactivation_layer = resnet.get_layer('conv5_block3_out')\n\n# create a model object\nmodel = Model(inputs=resnet.input, outputs=activation_layer.output)","612f6444":"#Code by Yvtsan Levy https:\/\/www.kaggle.com\/yvtsanlevy\/introduction-to-class-activition-map\n\n# get the feature map weights\nfinal_dense = resnet.get_layer('predictions')\nW = final_dense.get_weights()[0]\n\n#while True:\ni = 0\nfor i in range(10):\n  img = image.load_img(np.random.choice(image_files), target_size=(224, 224))\n  x = preprocess_input(np.expand_dims(img, 0))\n  fmaps = model.predict(x)[0] # 7 x 7 x 2048\n\n  # get predicted class\n  probs = resnet.predict(x)\n  classnames = decode_predictions(probs)[0]\n  print(classnames)\n  classname = classnames[0][1]\n  pred = np.argmax(probs[0])\n\n  # get the 2048 weights for the relevant class\n  w = W[:, pred]\n\n  # \"dot\" w with fmaps\n  cam = fmaps.dot(w)\n\n  # upsample to 224 x 224\n  # 7 x 32 = 224\n  cam = sp.ndimage.zoom(cam, (32, 32), order=1)\n\n  plt.subplot(1,2,1)\n  plt.imshow(img, alpha=0.8)\n  plt.imshow(cam, cmap='jet', alpha=0.5)\n  plt.subplot(1,2,2)\n  plt.imshow(img)\n  plt.title(classname)\n  plt.show();","1a207f2d":"#Image files","818351ab":"#Acknowledgment:\n\nYvtsan Levy https:\/\/www.kaggle.com\/yvtsanlevy\/introduction-to-class-activition-map","ac1b930a":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 10px; background: #228B22;\"><b style=\"color:#FF7F50;\">Indian Coin Denomination - Class Activation Map<\/b><\/h1><\/center>\n\n\"This dataset is a collection of images and their respective labels containing multiple Indian coins of different denominations and their variations. The purpose of this dataset is to enable practitioners to develop a computer vision approach solution for the detection and classification of Indian coins according to their denominations.\"\n\n\"The data contains images of One (1), Two (2), Five (5), Ten (10), and Twenty (20) Rupee coins in Indian denomination and their variations that are in circulation as of December 2021. The dataset only contains images of one side of each coin (Tail side) which contains the denomination value. The samples were collected with the help of a mobile phone while the coins were placed on top of a white sheet of A4 sized paper.\"\n\nhttps:\/\/www.kaggle.com\/lazrus\/indian-coin-denomination-dataset-icdd","bf0eb65a":"#Code by Yvtsan Levy https:\/\/www.kaggle.com\/yvtsanlevy\/introduction-to-class-activition-map","597149a0":"#Build the Model"}}