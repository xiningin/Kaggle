{"cell_type":{"d4b8b305":"code","584ded2e":"code","b27d838b":"code","4363c376":"markdown","18d09aa2":"markdown"},"source":{"d4b8b305":"# Pr\u00e1ctica: caso diabetes - Aprendizaje autom\u00e1tico, regresi\u00f3n lineal\n# Fernando Bordignon - http:\/\/saberesdigitales.unipe.edu.ar\n# Caso original descripto en Data analysis from scratch with Python de Peters Morgan\n\n# Code source: Jaques Grobler\n# License: BSD 3 clause\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn import datasets, linear_model\nfrom sklearn.metrics import mean_squared_error, r2_score\n\n# Se carga el dataset \"diabetes\"\ndiabetes = datasets.load_diabetes()\n\n# Se utiliza un atributo\ndiabetes_X = diabetes.data[:, np.newaxis, 2]\n","584ded2e":"# Se divide el dataset en dos grupos: entrenamiento y prueba\ndiabetes_X_train = diabetes_X[:-20]\ndiabetes_X_test = diabetes_X[-20:]\n\n# Split the targets into training\/testing sets\ndiabetes_y_train = diabetes.target[:-20]\ndiabetes_y_test = diabetes.target[-20:]\n\n# Se crea un objeto regresion lineal\nregr = linear_model.LinearRegression()\n\n# Se entrena el modelo usando el juego de entrenamiento\nregr.fit(diabetes_X_train, diabetes_y_train)\n\n# Se hacen predicciones usando el grupo de prueba\ndiabetes_y_pred = regr.predict(diabetes_X_test)\n\n# C\u00e1lculo de los coeficientes\nprint('Coeficientse: \\n', regr.coef_)\n\n# El error cuadrado medio\nprint(\"Mean squared error: %.2f\"\n      \n% mean_squared_error(diabetes_y_test, diabetes_y_pred))\n\n# Explained variance score: 1 is perfect prediction\nprint('Variance score: %.2f' % r2_score(diabetes_y_test, diabetes_y_pred))\n","b27d838b":"\n\n# Se grafica la salida\nplt.scatter(diabetes_X_test, diabetes_y_test, color='black')\nplt.plot(diabetes_X_test, diabetes_y_pred, color='blue', linewidth=3)\nplt.xticks(())\nplt.yticks(())\nplt.show()","4363c376":"En primer lugar, el aprendizaje supervisado se parece mucho al aprendizaje a partir de ejemplos. Por ejemplo, tenemos una enorme colecci\u00f3n de im\u00e1genes correctamente etiquetadas como perros o gatos. Nuestro ordenador aprender\u00e1 a partir de esos ejemplos y etiquetas correctas. Quiz\u00e1s nuestro ordenador encuentre patrones y similitudes entre esas im\u00e1genes. Y finalmente, cuando introduzcamos nuevas im\u00e1genes, nuestro ordenador y nuestro modelo identificar\u00e1n con \u00e9xito una imagen si hay un perro o un gato en ella.\n\nEs muy parecido al aprendizaje con supervisi\u00f3n. Hay respuestas correctas (por ejemplo, gatos o perros) y el trabajo de nuestro modelo es alinearse para que, con nuevos datos, pueda producir respuestas correctas (en un nivel de rendimiento aceptable porque es dif\u00edcil alcanzar el 100%).\n\nPor ejemplo, la regresi\u00f3n lineal se considera dentro del aprendizaje supervisado. Recuerde que en la regresi\u00f3n lineal intentamos predecir el valor de y para una x dada. relaci\u00f3n entre x e y (y predecir los valores de y para nuevas entradas de x).","18d09aa2":"Parece un ejemplo sencillo. Sin embargo, esa l\u00ednea es el resultado de la iteraci\u00f3n minimizar la suma residual de cuadrados entre los valores reales y las predicciones. En otras palabras, el objetivo era producir la predicci\u00f3n correcta utilizando lo que el modelo aprendi\u00f3 de los ejemplos anteriores.\n\nOtra tarea que entra dentro del aprendizaje supervisado es la clasificaci\u00f3n. En este caso, el objetivo es clasificar correctamente los nuevos datos en una de las dos categor\u00edas. En el caso de ejemplo, queremos saber si un correo electr\u00f3nico entrante es spam o no. De nuevo, nuestro modelo aprender\u00e1 de los ejemplos (correos electr\u00f3nicos correctamente etiquetados como spam o no). Con con esa \"supervisi\u00f3n\", podemos crear un modelo que prediga correctamente si un nuevo correo electr\u00f3nico es spam o no."}}