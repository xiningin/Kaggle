{"cell_type":{"f5e08443":"code","d057fb89":"code","e7b3c9c1":"code","f7c77dc7":"code","11b2f447":"code","08c0b665":"code","bee79625":"code","cf224eba":"code","2f71cc9f":"code","0a7a7144":"code","6f6e5283":"code","ffd1a4b8":"code","ee15fc50":"code","e508c810":"code","812a5366":"code","78e2ab49":"code","4db94fcf":"code","dbc47220":"code","79a655be":"code","1ffc5ed1":"code","f79c9dae":"code","275919dd":"code","f8f34475":"code","b4d13952":"code","902b57fb":"code","a4527782":"code","5495eee6":"code","298182c5":"code","6885e0bf":"code","c5500f9b":"code","7e9c12a2":"code","aac14380":"code","f7c02c58":"code","cf687c17":"code","a4e813bf":"code","576416cd":"code","20e6a013":"code","a2902cc9":"code","5cb26459":"code","6526dd75":"code","57aa86d4":"code","9215bd87":"code","0ac06e04":"code","ceac1331":"code","19beab10":"code","9cda4268":"code","fe23b5d2":"code","39ffea92":"code","dd5f3710":"code","9ccdcafb":"code","318672f9":"code","b10ed46c":"code","cf8231dd":"code","be0b6a22":"code","178c921a":"code","c3f1f5a0":"code","c630866a":"code","2f8532cc":"code","1dac06df":"code","3f8e8194":"code","b653800b":"code","5ab853c3":"code","c8924896":"code","93abf382":"code","dd137201":"code","9f616739":"code","d1752692":"code","23216dc4":"code","6e7edbbc":"code","bf67689f":"code","44137a4a":"code","f2fd499b":"code","8a9191f9":"code","73f5beb6":"code","dc0c9419":"code","158c61eb":"code","fec30b7f":"code","82468f48":"code","9e520217":"code","2eb4c9e3":"code","7023a7d6":"code","c3ee5144":"code","a4cdcb74":"code","b77d59d5":"code","2433a029":"code","813d6f44":"code","d7eaa369":"code","a3b22fdb":"code","6b4b7d0c":"code","c674d194":"code","cfb6b0a5":"code","c011be61":"code","4d861895":"code","77dbea74":"code","bf0d5d3b":"code","2cfeba03":"code","656fc9fe":"code","2ffedcd0":"code","8dd24799":"code","fd3aa544":"code","eefae9fc":"code","28a4ade1":"code","a77a33ad":"code","4fbf050f":"code","558d3bc7":"code","4ad66716":"code","c12e2fa7":"code","c6cd0347":"code","112c93a7":"code","42843a6d":"code","27a784eb":"code","e6b07cca":"code","31e833f9":"code","f45934fe":"code","ff30a35e":"code","43dbccca":"code","3620ec54":"code","966044c8":"code","ef93c1ee":"code","7e05c687":"code","d6991fab":"code","05c8af19":"code","473b8377":"code","31f80e09":"code","eab6f6b1":"code","17a86605":"code","dc4a9e8d":"code","c43db9b1":"code","698e9ca5":"code","b787ae00":"code","97450163":"markdown","82d6cb90":"markdown","2eccab6b":"markdown","6268d4d1":"markdown","4c36611e":"markdown","e9b7a840":"markdown","9965241b":"markdown","d00a668b":"markdown","0cc1f3ed":"markdown","4e62ed66":"markdown","50dcb1ad":"markdown","e0a67eee":"markdown","7064e1ed":"markdown","1ea63802":"markdown","627e3bfa":"markdown","1be9dea2":"markdown","f96fdbd2":"markdown","0a70a98e":"markdown","4c5ab3f7":"markdown","828d095b":"markdown","0fb277e3":"markdown","46d1d1ce":"markdown","18d2360d":"markdown","ca116391":"markdown","c1634342":"markdown","004c7d53":"markdown","8549872a":"markdown","1eed0416":"markdown","e60a3504":"markdown","1eeb1dbc":"markdown","9340b9d3":"markdown","1ee8573a":"markdown","096f9362":"markdown","08e01461":"markdown","a523c9e7":"markdown","41f8a211":"markdown","33ea09c6":"markdown","7ecff20a":"markdown","c41073b8":"markdown","921cdea7":"markdown","143f2a22":"markdown","0e69eafe":"markdown","67f2f7d6":"markdown","72828109":"markdown","c34efcde":"markdown","d2574c2f":"markdown","7264eb0c":"markdown","b3035671":"markdown","2b695304":"markdown","4f69e644":"markdown","085e63df":"markdown","8c3a8faa":"markdown","59af3acd":"markdown","dd7df1fd":"markdown","67b9cb25":"markdown","09e455b3":"markdown","9844c72f":"markdown","cbeffed5":"markdown","990771ca":"markdown","d757250b":"markdown","f1661a8d":"markdown","df8862d4":"markdown","748067b8":"markdown","ad2e8fff":"markdown","eeacc70c":"markdown","203a1a59":"markdown","3b84af91":"markdown","9c42c869":"markdown","bb4eaa73":"markdown","691fc8bf":"markdown","10a60359":"markdown","ac3426c3":"markdown","335123bd":"markdown","659a37b2":"markdown","04ad5876":"markdown","3981cdb8":"markdown","da2b7aa7":"markdown","fabf8845":"markdown","c0546509":"markdown","364ed9f1":"markdown","5d54703a":"markdown","b14fd94e":"markdown","f2371d1e":"markdown","682ce7f8":"markdown","68ba1f04":"markdown","b68288ea":"markdown","f19f3d58":"markdown","e1636fbf":"markdown","45002c9c":"markdown","42a0cf8d":"markdown","61f401ff":"markdown","e9f290b0":"markdown","94a9d6b7":"markdown","e2b24e25":"markdown","620c2a37":"markdown","a54cc9c3":"markdown","026db13d":"markdown","776cbd53":"markdown","3860b3f0":"markdown","1113d61c":"markdown","3669748f":"markdown","66895221":"markdown","cff3a22f":"markdown","77a8e0c2":"markdown","f7a98c2d":"markdown","d77d1434":"markdown","70e57550":"markdown","08f44cf6":"markdown","b71927ad":"markdown","63a60652":"markdown","19b8572b":"markdown","07223dc0":"markdown","fef2e2f3":"markdown","7f96bca4":"markdown","8f5ac930":"markdown","d702e314":"markdown","e3c8cc67":"markdown","d0c23a5f":"markdown","0e2b64de":"markdown","7ee42a4a":"markdown","2fc4988e":"markdown","f0158275":"markdown","b7c63496":"markdown","d5d056e1":"markdown","f433185e":"markdown","8c61e256":"markdown","1c4407c5":"markdown"},"source":{"f5e08443":"# Importing numpy and pandas\nimport numpy as np\nimport pandas as pd\n\n# Importing seaborn and matplotlib\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n\n# importing plotly\nimport plotly\nfrom plotly.offline import iplot, init_notebook_mode\ninit_notebook_mode()\nimport plotly.express as px\nfrom plotly import tools\nimport plotly.graph_objects as go\n\n# For ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Setting the columns and row for visibility\npd.set_option('display.max_columns', 500)\npd.set_option(\"display.max_rows\",500)\n\n# seaborn cahrt theme\nsns.set_style(\"darkgrid\")","d057fb89":"# Loading the application_data.csv data frame and assign it to a variable called \"app_data\"\n\napp_data = pd.read_csv(\"..\/input\/loan-defaulter\/application_data.csv\")\napp_data.head()","e7b3c9c1":"# Checking the shape of the \"app_data\"\n\napp_data.shape","f7c77dc7":"# Checking info() of the \"app_data\"\n\napp_data.info(verbose=True,null_counts=True)","11b2f447":"# Checking the column names\n\napp_data.columns","08c0b665":"# Describing the \"app_data\"\n\napp_data.describe()","bee79625":"# Checking the null values present in the \"app_data\"\n\napp_data.isnull().sum().sort_values(ascending=False)","cf224eba":"# checking % of the null values in \"app_data\" columns\n\n((app_data.isnull().sum()\/len(app_data))*100).sort_values(ascending=False)","2f71cc9f":"# Creating font dictionary for chart title and axis label title\n\nchart_title = {\"fontsize\":20,\"color\":\"midnightblue\"}\naxis_label = {\"fontsize\":15,\"color\":\"navy\"}","0a7a7144":"# Getting the ratio of the null column\nnull_col = app_data.isnull().sum()\/len(app_data)\n\n# Getting the >= 35% null value columns\nnull_col_list = null_col[null_col.values>=0.35].index.tolist()\n\n# Number of columns having null values >= 35%\nlen(null_col_list)","6f6e5283":"# Plotting the 49 columns which have more than 35% null values in the bar plot\n\nplt.figure(figsize=[20,5])\n((null_col[null_col.values>0.35])*100).sort_values(ascending=False).plot.bar(color=\"#4CB391\")\nplt.title(\"List of Columns & Null counts where Null values are more than 35%\",fontdict=chart_title)\nplt.xlabel(\"Column_Names\",fontdict=axis_label)\nplt.ylabel(\"% of Null value\",fontdict=axis_label)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12);","ffd1a4b8":"# List of the columns after removal of more than 35% null values\n\n(app_data.drop(labels=null_col_list,axis=1).isnull().sum()\/len(app_data)).sort_values(ascending=False)","ee15fc50":"# Removing the columns with >=35% of null values\n\napp_data.drop(labels=null_col_list,axis=1,inplace=True)\napp_data.head()","e508c810":"# Checking the null values % after the dropped columns\n\n((app_data.isnull().sum()\/len(app_data))*100).sort_values(ascending=False)","812a5366":"# checking the shape of the data frame\n\napp_data.shape","78e2ab49":"# Getting Categorical columns\n\nlist(set(app_data.columns) - set(app_data.describe().columns))","4db94fcf":"# Getting Numerical columns\n\nlist(app_data.describe().columns)","dbc47220":"# Checking the number of Null value counts in \"OCCUPATION_TYPE\" column \n\napp_data.OCCUPATION_TYPE.isnull().sum()","79a655be":"# Checking Value_counts for the \"OCCUPATION_TYPE\" column\n \napp_data.OCCUPATION_TYPE.value_counts()","1ffc5ed1":"# Getting mode of the value counts from the \"OCCUPATION_TYPE\" column\n\napp_data.OCCUPATION_TYPE.mode()[0]","f79c9dae":"# Checking the number of Null value counts in \"EXT_SOURCE_3\" column\n\napp_data.EXT_SOURCE_3.isnull().sum()","275919dd":"# Checking Value_counts for the \"EXT_SOURCE_3\" column\n\napp_data.EXT_SOURCE_3.value_counts()","f8f34475":"# Getting mode of the value counts from the \"EXT_SOURCE_3\" column\n\napp_data.EXT_SOURCE_3.mode()[0]","b4d13952":"# Checking Value_counts for the \"AMT_REQ_CREDIT_BUREAU_YEAR\" column\n\napp_data.AMT_REQ_CREDIT_BUREAU_YEAR.value_counts()","902b57fb":"# Getting mode of the value counts from the \"AMT_REQ_CREDIT_BUREAU_YEAR\" column\n\napp_data.AMT_REQ_CREDIT_BUREAU_YEAR.mode()[0]","a4527782":"# Getting mode of the value counts from the \"AMT_REQ_CREDIT_BUREAU_MON\" column\n\napp_data.AMT_REQ_CREDIT_BUREAU_MON.mode()[0]","5495eee6":"# Getting mode of the value counts from the \"AMT_REQ_CREDIT_BUREAU_WEEK\" column\n\napp_data.AMT_REQ_CREDIT_BUREAU_WEEK.mode()[0]","298182c5":"# Getting mode of the value counts from the \"AMT_REQ_CREDIT_BUREAU_DAY\" column\n\napp_data.AMT_REQ_CREDIT_BUREAU_DAY.mode()[0]","6885e0bf":"# Getting mode of the value counts from the \"AMT_REQ_CREDIT_BUREAU_HOUR\" column\n\napp_data.AMT_REQ_CREDIT_BUREAU_HOUR.mode()[0]","c5500f9b":"# Getting mode of the value counts from the \"AMT_REQ_CREDIT_BUREAU_QRT\" column\n\napp_data.AMT_REQ_CREDIT_BUREAU_QRT.mode()[0]","7e9c12a2":"# Checking the number of Null value counts in \"NAME_TYPE_SUITE\" column \n\napp_data.NAME_TYPE_SUITE.isnull().sum()","aac14380":"# Checking Value_counts for the \"NAME_TYPE_SUITE\" column\n\napp_data.NAME_TYPE_SUITE.value_counts()","f7c02c58":"# Getting mode of the value counts from the \"NAME_TYPE_SUITE\" column\n\napp_data.NAME_TYPE_SUITE.mode()[0]","cf687c17":"# Checking the number of Null value counts in \"AMT_GOODS_PRICE\" column\n\napp_data.AMT_GOODS_PRICE.isnull().sum()","a4e813bf":"# Checking Value_counts for the \"AMT_GOODS_PRICE\" column\n\napp_data.AMT_GOODS_PRICE.value_counts()","576416cd":"# Getting median of the value counts from the \"AMT_GOODS_PRICE\" column\n\napp_data.AMT_GOODS_PRICE.median()","20e6a013":"# Checking the number of Null value counts in \"AMT_ANNUITY\" column\n\napp_data.AMT_ANNUITY.isnull().sum()","a2902cc9":"# Checking Value_counts for the \"AMT_ANNUITY\" column\n\napp_data.AMT_ANNUITY.value_counts()","5cb26459":"# Getting median of the value counts from the \"AMT_ANNUITY\" column\n\napp_data.AMT_ANNUITY.median()","6526dd75":"# Checking the values present in columns starting with 'DAYS'\n\nday_list = [i for i in app_data if i.startswith(\"DAY\")]\napp_data[day_list]","57aa86d4":"# changing the \"Days\" column values into the absolute value\n\napp_data[day_list] = app_data[day_list].apply(lambda x: abs(x))\napp_data[day_list]","9215bd87":"app_data.head()","0ac06e04":"# checking the value_counts for the 'CODE_GENDER' column\n\napp_data.CODE_GENDER.value_counts()","ceac1331":"# Replacing the value \"XNA\" with \"F\" in \"CODE_GENDER\" column\n\napp_data.CODE_GENDER = app_data.CODE_GENDER.apply(lambda x: \"F\" if x == \"XNA\" else x)\napp_data.CODE_GENDER.value_counts()","19beab10":"# checking the null values in app_data\n\n((app_data.isnull().sum()\/len(app_data))*100).sort_values(ascending=False)","9cda4268":"# checking the value_counts() for the ORGANIZATION_TYPE column\n\napp_data.ORGANIZATION_TYPE.value_counts()","fe23b5d2":"# checking % of \"XNA\" from the app_data in the ORGANIZATION_TYPE column\n\n(app_data.ORGANIZATION_TYPE.value_counts()\/len(app_data.ORGANIZATION_TYPE))*100","39ffea92":"# changing the \"XNA\" in to null values in ORGANIZATION_TYPE column\n\napp_data.ORGANIZATION_TYPE = app_data.ORGANIZATION_TYPE.apply(lambda x: np.NaN if x == \"XNA\" else x)\napp_data.ORGANIZATION_TYPE.value_counts()","dd5f3710":"# checking whether the null values has been updated in the app_data\n\napp_data.isnull().sum().sort_values(ascending=False)","9ccdcafb":"# checking the data frame for invoves amount in the column\n\napp_data[[i for i in app_data if i.startswith(\"AMT\")]]","318672f9":"# Creating AMT_INCOME_RANGE column based on the AMT_INCOME_TOTAL column\n\napp_data[\"AMT_INCOME_RANGE\"] = pd.qcut(app_data.AMT_INCOME_TOTAL,q=[0, 0.2, 0.5, 0.8, 0.95, 1],labels=[\"Very Low\",\"Low\",\"Medium\",\"High\",\"Very High\"])\napp_data.AMT_INCOME_RANGE.value_counts()","b10ed46c":"# Creating AMT_CREDIT_RANGE column based on the AMT_CREDIT column\n\napp_data[\"AMT_CREDIT_RANGE\"] = pd.qcut(app_data.AMT_CREDIT,q=[0, 0.2, 0.5, 0.8, 0.95, 1],labels=[\"Very Low\",\"Low\",\"Medium\",\"High\",\"Very High\"])\napp_data.AMT_CREDIT_RANGE.value_counts()","cf8231dd":"# checking the \"days\" columns\n\napp_data[[i for i in app_data if i.startswith(\"DAY\")]]","be0b6a22":"# converting the days in to years\n\n(app_data.DAYS_BIRTH \/ 365).astype(int)","178c921a":"# creating AGE_BIRTH column which is age of the customer derived from DAYS_BIRTH column\n\napp_data[\"AGE_BIRTH\"] = (app_data.DAYS_BIRTH \/ 365).astype(int)\napp_data.AGE_BIRTH.value_counts()","c3f1f5a0":"# Creating AGE_RANGE Column for the AGE_BIRTH column\n\napp_data[\"AGE_RANGE\"] = pd.cut(app_data.AGE_BIRTH,bins=[19,25,35,60,100],\n                               labels=[\"Very Young\",\"Young\",\"Middle Age\",\"Senior Citizen\"])\napp_data[\"AGE_RANGE\"].value_counts()","c630866a":"# box plot for \"AMT_INCOME_TOTAL\"\n\nfig = px.box(app_data,y=\"AMT_INCOME_TOTAL\",title=\"Distribution of Income for the customers\")\nfig.update_layout(autosize = False,height = 500,width = 600)","2f8532cc":"# Plotting the Distribution for DAYS_EMPLOYED column\n\nplt.figure(figsize=[15,10])\nsns.distplot(app_data.DAYS_EMPLOYED,color=\"green\")\nplt.title(\"Distribution of DAYS_EMPLOYED\",fontdict=chart_title)\nplt.xlabel(\"DAYS_EMPLOYED\",fontdict=axis_label)\nplt.ylabel(\"Density\",fontdict=axis_label)\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=13);","1dac06df":"# checking the outlier for age of the customer\n\nfig = px.box(app_data,y=\"AGE_BIRTH\",title= \"Distribution of Age for the customers\")\nfig.update_layout(autosize = False,height = 500,width = 600)","3f8e8194":"# Checking the distribution of AMT_ANNUITY column\n\nfig = px.box(app_data,y=\"AMT_ANNUITY\",title= \"Distribution of AMT_ANNUITY\")\nfig.update_layout(autosize = False,height = 500,width = 600)","b653800b":"# Cheking the distribution for the DAYS_REGISTRATION column\n\nfig = px.box(app_data,y=\"DAYS_REGISTRATION\",title= \"Distribution of DAYS_REGISTRATION\")\nfig.update_layout(autosize = False,height = 500,width = 600)","5ab853c3":"# Checking the Distribution of 'OCCUPATION_TYPE'\n\n# Bar plot using Plotly\nfig = px.bar(app_data[\"OCCUPATION_TYPE\"].value_counts(),\n             labels=dict(index=\"Occupation Type\",value = \"Counts\"),\n             title='Occupation of Applicant\\'s who applied for loan',\n             color_discrete_sequence=px.colors.qualitative.Prism)\n\n# Changing the tick angle and removing the legend\nfig.update_layout(\n    xaxis=dict(\n        tickangle=270),\n    showlegend=False)","c8924896":"# Distribution of 'ORGANIZATION_TYPE'\n\n# Bar plot using Plotly\nfig = px.bar(app_data[\"ORGANIZATION_TYPE\"].value_counts(),\n             labels=dict(index=\"Organization Type\",value = \"Counts\"),\n             title='Types of Organizations who applied for loan',\n             color_discrete_sequence=px.colors.qualitative.G10)\n\n# Removing the legend\nfig.update_layout(showlegend=False)","93abf382":"# Checking \"TARGET\" column\n\n# Bar plot using Plotly\nfig = px.bar(app_data[\"TARGET\"].value_counts(),\n             labels=dict(index=\"Target\",value = \"Counts\"),\n             title='Target Imbalance Distribution',\n             color_discrete_sequence=px.colors.qualitative.T10)\n\n# Changing the layout and x axis tick values\nfig.update_layout(\n    xaxis = dict(\n    tickmode = 'array',\n    tickvals = [0,1],\n    ticktext = [\"0 - Non-Payment Difficulties\",\n               \"1 - Payment Difficulties\"]),\n    autosize=False,\n    width = 600,\n    height = 500,\n    showlegend=False)","dd137201":"# checking the % contribution of \"TARGET\" column values\n\nround(app_data.TARGET.value_counts(normalize=True)*100)","9f616739":"# Dividing the original dataset into two different datasets depending upon the target value\n\ntarget_0 = app_data.loc[app_data.TARGET == 0]\ntarget_1 = app_data.loc[app_data.TARGET == 1]","d1752692":"# Importing plotly subplot libreary\n\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\n# Creating Function for subplots\n\ndef subplt(df_1,df_2,axis_title,title,col,tickangle=270):\n    fig = make_subplots(rows=1, cols=2,subplot_titles=('Loan Non-Payment Difficulties',\n                                                  'Loan Payment Difficulties'))\n    # creating bar plot for 'Loan Non-Payment Difficulties'\n    \n    fig.add_trace(go.Bar(x=df_1[col].value_counts().index,\n                    y=df_1[col].value_counts().values),row=1,col=1)\n\n    # creating bar plot for 'Loan Payment Difficulties'\n    \n    fig.add_trace(go.Bar(x=df_2[col].value_counts().index,\n                    y=df_2[col].value_counts().values),row=1,col=2)\n\n    # Adding axis titles\n    fig['layout']['xaxis']['title']=axis_title\n    fig['layout']['xaxis']['tickangle']=tickangle\n    fig['layout']['xaxis2']['title']=axis_title\n    fig['layout']['xaxis2']['tickangle']=tickangle\n    fig['layout']['yaxis']['title']='Count'\n    fig['layout']['yaxis2']['title']=\"Count\"\n\n    # Updating the chart layout\n    \n    fig.update_layout(height=600, width=950, title_text=title,showlegend=False)\n    fig.show()","23216dc4":"# Creating Subplot for Gender Distribution for 'Loan Non-Payment Difficulties' & 'Loan Payment Difficulties'\n\nsubplt(target_0,target_1,\"Gender\",\"Distribution of Gender\",\"CODE_GENDER\",tickangle=0)","6e7edbbc":"# Creating Subplot for Income Source Distribution for 'Loan Non-Payment Difficulties' & 'Loan Payment Difficulties'\n\nsubplt(target_0,target_1,\"Income Category\",\"Distribution of Income Sourse\",\"NAME_INCOME_TYPE\")","bf67689f":"# Creating Subplot for Education Distribution for 'Loan Non-Payment Difficulties' & 'Loan Payment Difficulties'\n\nsubplt(target_0,target_1,\"Education Category\",\"Distribution of Education\",\"NAME_EDUCATION_TYPE\")","44137a4a":"# Creating Subplot for Type houseing Distribution for 'Loan Non-Payment Difficulties' & 'Loan Payment Difficulties'\n\nsubplt(target_0,target_1,\"Housing Category\",\"Distribution of Type of Housing\",\"NAME_HOUSING_TYPE\")","f2fd499b":"# Creating Subplot for Income Range Distribution for 'Loan Non-Payment Difficulties' & 'Loan Payment Difficulties'\n\nsubplt(target_0,target_1,\"Income Range\",\"Distribution of Income Range\",\"AMT_INCOME_RANGE\")","8a9191f9":"# Creating Subplot for Age Range Distribution for 'Loan Non-Payment Difficulties' & 'Loan Payment Difficulties'\n\nsubplt(target_0,target_1,\"Age Range\",\"Distribution of Age Range\",\"AGE_RANGE\")","73f5beb6":"# Creating Subplot for Loan Type Distribution for 'Loan Non-Payment Difficulties' & 'Loan Payment Difficulties'\n\nsubplt(target_0,target_1,\"Loan Type\",\"Distribution of Loan Type\",\"NAME_CONTRACT_TYPE\")","dc0c9419":"# Creating Subplot for Accompanyed Types Distribution for 'Loan Non-Payment Difficulties' & 'Loan Payment Difficulties'\n\nsubplt(target_0,target_1,\"Accompanyed Types\",\"Distribution of Accompanyed by\",\"NAME_TYPE_SUITE\")","158c61eb":"# creating subplot\nfig = make_subplots(rows=2, cols=1,subplot_titles=('Loan Non-Payment Difficulties',\n                                                  'Loan Payment Difficulties'))\n# creating bar plot for 'Loan Non-Payment Difficulties'\nfig.add_trace(go.Bar(x=target_0[\"ORGANIZATION_TYPE\"].value_counts().index,\n                    y=target_0[\"ORGANIZATION_TYPE\"].value_counts().values),row=1,col=1)\n\n# creating bar plot for 'Loan Payment Difficulties'\nfig.add_trace(go.Bar(x=target_1[\"ORGANIZATION_TYPE\"].value_counts().index,\n                    y=target_1[\"ORGANIZATION_TYPE\"].value_counts().values),row=2,col=1)\n\n# Adding axis titles\nfig['layout']['xaxis']['title']=\"Orginization Types\"\nfig['layout']['xaxis']['tickangle']=270\nfig['layout']['xaxis2']['title']=\"Orginization Types\"\nfig['layout']['xaxis2']['tickangle']=270\nfig['layout']['yaxis']['title']='Count'\nfig['layout']['yaxis2']['title']=\"Count\"\n\n# Updating the chart layout\nfig.update_layout(height=1200, width=1000, \n                  title_text=\"Distribution of Types of Organizations who applied for loan\",\n                  showlegend=False)\nfig.show()","fec30b7f":"# Creating function for univariate analysis\n\ndef uni(df,col,hue=None):\n    sns.set_style('darkgrid')\n    plt.figure(figsize=(20,8))\n    plt.subplot(1,2,1)\n    sns.distplot(df[~df[col].isnull()][col],color=\"#4CB391\")\n    plt.title(f\"Distribution Plot for {col[4:].capitalize()}\",fontdict={\"fontsize\":20})\n    plt.xlabel(col,fontsize=13)\n    plt.ylabel(\"Density\",fontsize=13)\n    plt.xticks(fontsize=12)\n    plt.subplot(1,2,2)\n    sns.boxplot(data=df,y=col,color=\"#4CB391\")\n    plt.title(f\"Box Plot for {col[4:].capitalize()}\",fontdict={\"fontsize\":20})\n    plt.ylabel(col,fontsize=13)\n    plt.xticks(fontsize=12);","82468f48":"# Distribution and Box plot for 'AMT_ANNUITY' for Loan Non-Payment Difficulties\n\nuni(df=target_0,col=\"AMT_ANNUITY\")","9e520217":"# Distribution and Box plot for 'AMT_ANNUITY' for Loan Payment Difficulties\n\nuni(df=target_1,col=\"AMT_ANNUITY\")","2eb4c9e3":"# Distribution and Box plot for 'AMT_CREDIT' for Loan Non-Payment Difficulties\n\nuni(df=target_0,col='AMT_CREDIT')","7023a7d6":"# Distribution and Box plot for 'AMT_CREDIT' for Loan Payment Difficulties\n\nuni(df=target_1,col=\"AMT_CREDIT\")","c3ee5144":"# Distribution and Box plot for 'AMT_GOODS_PRICE' for Loan- Non-Payment Difficulties\n\nuni(df=target_0,col='AMT_GOODS_PRICE')","a4cdcb74":"# Distribution and Box plot for 'AMT_GOODS_PRICE' for Loan-Payment Difficulties\nuni(df=target_1,col=\"AMT_GOODS_PRICE\")","b77d59d5":"# 'NAME_EDUCATION_TYPE' vs 'AMT_CREDIT' for Loan - Non Payment Difficulties\npx.box(target_0,\n       x=\"NAME_EDUCATION_TYPE\",y=\"AMT_CREDIT\",\n       color=\"NAME_FAMILY_STATUS\",\n       title=\"Credit amount vs Education of Loan - Non Payment Difficulties\")","2433a029":"# 'NAME_EDUCATION_TYPE' vs 'AMT_CREDIT' for Loan Payment Difficulties\npx.box(target_1,\n       x=\"NAME_EDUCATION_TYPE\",y=\"AMT_CREDIT\",\n       color=\"NAME_FAMILY_STATUS\",\n       title=\"Credit amount vs Education of Loan Payment Difficulties\")","813d6f44":"# 'AMT_INCOME_RANGE' vs 'AMT_CREDIT' for Loan - Non Payment Difficulties\n\npx.box(target_0,\n       x=\"AMT_INCOME_RANGE\",y=\"AMT_CREDIT\",\n       color=\"NAME_FAMILY_STATUS\",\n       title=\"Income range vs Credit amount of Loan Non- Payment Difficulties\")","d7eaa369":"# 'AMT_INCOME_RANGE' vs 'AMT_CREDIT' for Loan Payment Difficulties\n\npx.box(target_0,\n       x=\"AMT_INCOME_RANGE\",y=\"AMT_CREDIT\",\n       color=\"NAME_FAMILY_STATUS\",\n       title=\"Income range vs Credit amount of Loan Payment Difficulties\")","a3b22fdb":"# Function for bivariate plots\n\ndef biplot(df,feature,title):\n    temp = df[feature].value_counts()\n    \n    # Calculate the percentage of target=1 per category value\n    perc = df[[feature, 'TARGET']].groupby([feature],as_index=False).mean()\n    perc.sort_values(by='TARGET', ascending=False, inplace=True)\n\n    fig = make_subplots(rows=1, cols=2,subplot_titles=(\"Count of \"+ title,\"% of Loan Payment difficulties within each category\"))\n\n\n    fig.add_trace(go.Bar(x=temp.index, y=temp.values),row=1, col=1)\n    fig.add_trace(go.Bar(x=perc[feature].to_list(), y=perc['TARGET'].to_list()),row=1, col=2)\n    fig['layout']['xaxis']['title']=feature\n    fig['layout']['xaxis2']['title']=feature\n    fig['layout']['xaxis']['tickangle']=270\n    fig['layout']['xaxis2']['tickangle']=270\n    fig['layout']['yaxis']['title']='Count'\n    fig['layout']['yaxis2']['title']='% of Loan Payment Difficulties'\n    fig.update_layout(height=600, width=1000, title_text=title, showlegend=False)\n    fig.show()","6b4b7d0c":"# Distribution of income range and the category with maximum Loan-Payment Difficulties\n\nbiplot(app_data ,'AMT_INCOME_RANGE','Income range')","c674d194":"# Distribution of income range and the category with maximum Loan-Payment Difficulties\n\nbiplot(app_data,'NAME_INCOME_TYPE','Income type')","cfb6b0a5":"# Distribution of Contract Type and the category with maximum Loan-Payment Difficulties\n\nbiplot(app_data ,'NAME_CONTRACT_TYPE','Contract type')","c011be61":"# Distribution of Education Type and the category with maximum Loan-Payment Difficulties\n\nbiplot(app_data ,'NAME_EDUCATION_TYPE','Education type')","4d861895":"# Distribution of Occupation Type and the category with maximum Loan-Payment Difficulties\n\nbiplot(app_data ,'OCCUPATION_TYPE','Occupation type') ","77dbea74":"# Creating Pivot table for Gender, Income Range Vs Education Type\n\npd.pivot_table(app_data,\n               values='TARGET',\n               index=['CODE_GENDER','AMT_INCOME_RANGE'],\n               columns=['NAME_EDUCATION_TYPE'], aggfunc=np.mean)","bf0d5d3b":"# Pairplot for target_0 (Loan-Non Payment Difficulties)\n\npair = target_0[['AMT_CREDIT', 'AMT_ANNUITY', 'AMT_INCOME_TOTAL', 'AMT_GOODS_PRICE', 'AGE_BIRTH']].fillna(0)\nsns.pairplot(pair)\nplt.show() ","2cfeba03":"#Pairplot for target_1 (Loan Payment Difficulties)\npair = target_1[['AMT_CREDIT', 'AMT_ANNUITY', 'AMT_INCOME_TOTAL', 'AMT_GOODS_PRICE', 'AGE_BIRTH']].fillna(0)\nsns.pairplot(pair)\nplt.show() ","656fc9fe":"# Heatmap for Loan- Non Payment Difficulties\n\ntemp = target_0[['AMT_GOODS_PRICE','AMT_INCOME_TOTAL','AMT_ANNUITY','DAYS_EMPLOYED','AGE_BIRTH',\n                'DAYS_REGISTRATION', 'DAYS_ID_PUBLISH','AMT_CREDIT',]].corr(method = 'pearson')\n\nplt.figure(figsize=[10,8])\n\nax = sns.heatmap(temp,\n            annot=True,cmap=\"RdYlGn\",linecolor='black',linewidths=0.01,square=True,annot_kws={'fontsize': 11})\ntop, bottom = ax.get_ylim()\nleft,right = ax.get_xlim()\nax.set_ylim(top+0.1, bottom-0.1)\nax.set_xlim(left-0.1, right+0.1)\nplt.title(\"Correlation Heatmap of Loan- Non Payment Difficulties\",fontdict=chart_title)\nplt.xticks(fontsize=12,rotation=90)\nplt.yticks(fontsize=12);","2ffedcd0":"# Heatmap for Loan-Payment Difficulties\n\ntemp = target_1[['AMT_GOODS_PRICE','AMT_INCOME_TOTAL','AMT_ANNUITY','DAYS_EMPLOYED','AGE_BIRTH',\n                'DAYS_REGISTRATION', 'DAYS_ID_PUBLISH','AMT_CREDIT',]].corr(method = 'pearson')\n\nplt.figure(figsize=[10,8])\n\nax = sns.heatmap(temp,\n            annot=True,cmap=\"RdYlGn\",linecolor='black',linewidths=0.01,square=True,annot_kws={'fontsize': 11})\ntop, bottom = ax.get_ylim()\nleft,right = ax.get_xlim()\nax.set_ylim(top+0.1, bottom-0.1)\nax.set_xlim(left-0.1, right+0.1)\nplt.title(\"Correlation Heatmap of Loan Payment Difficulties\",fontdict=chart_title)\nplt.xticks(fontsize=12,rotation=90)\nplt.yticks(fontsize=12);","8dd24799":"corr=target_1[['AMT_GOODS_PRICE','AMT_INCOME_TOTAL','AMT_ANNUITY','DAYS_EMPLOYED',\n  'DAYS_BIRTH', 'DAYS_REGISTRATION', 'DAYS_ID_PUBLISH',\n  'AMT_CREDIT']].corr(method = 'pearson')\ncorr=corr.where(np.triu(np.ones(corr.shape),k=1).astype(np.bool))\ncorr_df=corr.unstack().reset_index()\n\ncorr_df.columns = ['VAR1','VAR2','CORRELATION']\ncorr_df.dropna(subset=['CORRELATION'],inplace=True)\ncorr_df['CORR_ABS']=corr_df['CORRELATION'].abs()\n\ncorr_df.sort_values('CORR_ABS', ascending=False,ignore_index=True).head(10)","fd3aa544":"# Loading the previous_application.csv\n\npre_app_data = pd.read_csv(\"..\/input\/loan-defaulter\/previous_application.csv\")\npre_app_data.head()","eefae9fc":"# checking the info of the data frame\n\npre_app_data.info()","28a4ade1":"# checking the shape of the data frame\n\npre_app_data.shape","a77a33ad":"# checking the Null valus %\n\n((pre_app_data.isnull().sum()\/len(pre_app_data))*100).sort_values(ascending=False)","4fbf050f":"# Checking the \"DAYS\" columns\n\npre_app_data[[i for i in pre_app_data if i.startswith(\"DAYS\")]]","558d3bc7":"# Converting the negtive valus into absolute values in the \"DAYS\" columns\n\nday_list = [i for i in pre_app_data if i.startswith(\"DAYS\")]\npre_app_data[day_list] = abs(pre_app_data[day_list])\npre_app_data[day_list]","4ad66716":"pre_app_data.sample(10)","c12e2fa7":"# Converting \"XNA\",\"XAP\" in to Null values\n\npre_app_data = pre_app_data.replace(\"XNA\",np.NaN)\npre_app_data = pre_app_data.replace(\"XAP\",np.NaN)","c6cd0347":"# Checking \"NAME_CONTRACT_STATUS\" column\n\npre_app_data.NAME_CONTRACT_STATUS.value_counts()","112c93a7":"# Creating Function for subplots\n\ndef pre_app_subplot(df,axis_title,title,column_name,height=600,width=950):\n    fig = make_subplots(rows=1, cols=2,subplot_titles=('Based on frequency',\n                                                  'Based on contribution'))\n    # creating bar plot for based on frequency\n    fig.add_trace(go.Bar(x=df[column_name].value_counts().index,\n                    y=df[column_name].value_counts().values),row=1,col=1)\n\n    # creating bar plot for based on contribution %\n    data = (df[column_name].value_counts()\/(len(df[column_name])-df[column_name].isnull().sum()))*100\n    fig.add_trace(go.Bar(x=data.index,y=data.values),row=1,col=2)\n\n    # Adding axis titles\n    fig['layout']['xaxis']['title']=axis_title\n    fig['layout']['xaxis2']['title']=axis_title\n    fig['layout']['xaxis']['tickangle']=270\n    fig['layout']['xaxis2']['tickangle']=270\n    fig['layout']['yaxis']['title']='Count'\n    fig['layout']['yaxis2']['title']=\"Contribution (in %)\"\n\n    # Updating the chart layout\n    fig.update_layout(height=height, width=width, title_text=title,showlegend=False)\n    fig.show()","42843a6d":"# Distribution of 'NAME_CONTRACT_STATUS'\npre_app_subplot(pre_app_data,\"Contract Status\",'Distribution of Contract Status',\"NAME_CONTRACT_STATUS\",height=600)","27a784eb":"# On which day clients applied for loan in previous data and their counts\n\n# Bar plot using Plotly\nfig = px.bar(pre_app_data.WEEKDAY_APPR_PROCESS_START.value_counts(),\n             labels=dict(index=\"Day of the week\",value = \"Count\"),\n             title='Distribution of day of the week on customer applied for the loan',\n             color_discrete_sequence=px.colors.qualitative.Prism)\n\n# Changing chart layout\nfig.update_layout(xaxis=dict(tickangle=270),\n                  showlegend=False,\n                  autosize=False,\n                  width = 800,\n                  height = 500)","e6b07cca":"# Distribution of 'NAME_PAYMENT_TYPE'\n\npre_app_subplot(pre_app_data,\"Payment Method\",\n             \"Distribution of Payment method that client choose to pay\",\"NAME_PAYMENT_TYPE\",height=800)","31e833f9":"# Reasons of previous application rejection\n\npre_app_subplot(pre_app_data,\"Reason\",\n             'Reasons for the previous application rejection',\"CODE_REJECT_REASON\")","f45934fe":"# Was the client old or new client when applying for the previous application\n\npre_app_subplot(pre_app_data,\"Client Type\",\n             'Distribution of client type (repeat or new) for the previous application',\"NAME_CLIENT_TYPE\")","ff30a35e":"# Was the previous application for CASH, POS, CAR, CARDS\n\npre_app_subplot(pre_app_data,\"Previous application catagory\",\n             'Distribution on the previous application for CASH, POS, CAR, CARDS',\"NAME_PORTFOLIO\")","43dbccca":"#  What kind of goods did the client apply for in the previous application\n\n# Bar plot using Plotly\nfig = px.bar(pre_app_data.NAME_GOODS_CATEGORY.value_counts(),\n             labels=dict(index=\"Type of Goods\",value = \"Count\"),\n             title='Type of Goods applied by client on previous application',\n             color_discrete_sequence=px.colors.qualitative.Prism)\n\n# Changing chart layout\nfig.update_layout(xaxis=dict(tickangle=270),\n                  showlegend=False,\n                  autosize=False,\n                  width = 800,\n                  height = 600)","3620ec54":"uni(df=pre_app_data,col='AMT_ANNUITY')","966044c8":"uni(df=pre_app_data,col='AMT_CREDIT')","ef93c1ee":"uni(df=pre_app_data,col='AMT_GOODS_PRICE')","7e05c687":"# Taking SK_ID_CURR and TARGET column from application data for further analysis\n\napp_data_new = app_data[['SK_ID_CURR','TARGET']]\napp_data_new","d6991fab":"# merging application and previous application data on 'SK_ID_CURR'\n\napp_data_merge = app_data_new.merge(pre_app_data,on='SK_ID_CURR', how='inner')\napp_data_merge.shape","05c8af19":"# Distribution of Contract Status and its category with maximum % of Loan-Payment Difficulties\n\nbiplot(app_data_merge,'NAME_CONTRACT_STATUS', 'CONTRACT STATUS')","473b8377":"# Distribution of Contract Status and its category with maximum % of Loan-Payment Difficulties \n\nbiplot(app_data_merge,'NAME_CONTRACT_TYPE', 'CONTRACT TYPE')","31f80e09":"# Distribution of Payment Type and its category with maximum % of Loan-Payment Difficulties\n\nbiplot(app_data_merge,'NAME_PAYMENT_TYPE', 'PAYMENT TYPE') ","eab6f6b1":"# Distribution of Client Type and its category with maximum % of Loan-Payment Difficulties \n\nbiplot(app_data_merge,'NAME_CLIENT_TYPE', 'CLIENT TYPE') ","17a86605":"# Distribution of Cash Loan Purpose and its category with maximum % of Loan-Payment Difficulties \n\nbiplot(app_data_merge,'NAME_CASH_LOAN_PURPOSE', 'CASH LOAN PURPOSE') ","dc4a9e8d":"# Creating Pivot table on \"NAME_CONTRACT_STATUS\" and \"NAME_CLIENT_TYPE\" based on \"TARGET\" column\ntable = pd.pivot_table(app_data_merge, \n                       values='TARGET', \n                       index=['NAME_CONTRACT_STATUS'],\n                       columns=['NAME_CLIENT_TYPE'], \n                       aggfunc=np.mean)\ntable","c43db9b1":"# creating bar plot % of Loan Payment Difficulties for NAME_CONTRACT_STATUS and NAME_CLIENT_TYPE\n\npx.bar(table,\n       barmode='group',\n      title='% of Loan Payment Difficulties for NAME_CONTRACT_STATUS and NAME_CLIENT_TYPE',\n      labels=dict(value = \"% of Loan Payment Difficulties\"),\n      color_discrete_sequence=px.colors.qualitative.G10)","698e9ca5":"# Creating pivot table on \"NAME_CONTRACT_STATUS\" and \"NAME_CONTRACT_TYPE\" based on \"TARGET\" column\n\ntable = pd.pivot_table(app_data_merge, \n                       values='TARGET', \n                       index=['NAME_CONTRACT_STATUS'],\n                       columns=['NAME_CONTRACT_TYPE'], \n                       aggfunc=np.mean)\ntable ","b787ae00":"# creating bar plot % of Loan Payment Difficulties for NAME_CONTRACT_STATUS and NAME_CONTRACT_TYPE\n\npx.bar(table,\n       barmode='group',\n      title='% of Loan Payment Difficulties for NAME_CONTRACT_STATUS and NAME_CONTRACT_TYPE',\n      labels=dict(value = \"% of Loan Payment Difficulties\"),\n      color_discrete_sequence=px.colors.qualitative.G10)","97450163":"#### <font color = \"brown\"> 4.2.4 Reasons of previous application rejection","82d6cb90":"<font color = \"blue\">_Inference:__\n- _The column 'AMT_ANNUITY' tells the loan annuity. Observed that a value is more than 258000 is an outlier._","2eccab6b":"<font color = 'blue'>__Inference:__\n- _We observe an increase in the percentage of Loan Payment Difficulties whose educational qualifications are secondary\/secondary special and a decrease in the Loan Payment Difficulties who have completed higher education when compared with the percentages of Loan Payment Difficulties and Loan Non-Payment Difficulties_","6268d4d1":"<font color = \"blue\">__Inference:__\n- _We observe an increase in the percentage of Loan Payment Difficulties whose income is low when compared with the Payment Difficulties and Loan-Non Payment Difficulties_","4c36611e":"<font color = \"blue\">__Inference:__\n\n- _It can be observed from the above graph that Client who was 'New' and had 'Cancelled' previous applications tend to have more % of Loan-Payment Difficulties in the current application_","e9b7a840":"### <font color = 'brown'> 3.4 Dividing the dataset int two different datasets based upon \"Target\" value","9965241b":"#### <font color = \"brown\">2.4.1 In the cells shown below we have Changed the 'DAYS_BIRTH', 'DAYS_EMPLOYED', 'DAYS_REGISTRATION', 'DAYS_ID_PUBLISH' and 'DAYS_LAST_PHONE_CHANGE' which had negative or mixed values and imputed them with absolute values for our analysis.","d00a668b":"<font color = \"blue\">__Inference:__\n\n_From the first graph, it can be seen that the purpose of cash loan from previous data was maximum for 'Repairs'_<br><br>\n\n_It can be seen from the second graph that the_\n- _'Refusal to name the goal' for the cash loan from the previous application are the ones who have maximum % of Loan-Payment Difficulties from the current application._","0cc1f3ed":"#### <font color = 'brown'> 3.5.4 Housing","4e62ed66":"# <font color = \"navy\">Credit EDA case study","50dcb1ad":"### <font color = 'brown'>5.1 Application Data","e0a67eee":"<font color = 'blue'> _we can impute the mode for the column \"NAME_TYPE_SUITE\", which is \"Unaccompanied\"_","7064e1ed":"<font color = 'blue'>__Inference:__\n- _We observe an increase in the Loan Payment Difficulties who are young age compared to the Payment Difficulties and Loan-Non Payment Difficulties._","1ea63802":"<font color = \"blue\">__Inference:__\n\n- _The column 'DAYS_EMPLOYED' tells how many days before the application the person started their current employment. We observed a value that is greater than 20,000 is an outlier because 25,000\/365 will be around 54 years. Considering that a person started working at the age of 21, the person will be 21+54 will turn out to be 75 years old._","627e3bfa":"<font color = 'blue'> _we can impute the missing values with the median, which is the value '24903.0'_","1be9dea2":"<font color = \"blue\">__Inference:__\n- _We observe that 74% of the clients are repeaters_","f96fdbd2":"#### <font color = 'brown'> 3.5.9 Organization Type","0a70a98e":"#### <font color = \"brown\">2.3.5 Checking the 'AMT_ANNUITY' column","4c5ab3f7":"<font color = 'blue'>__Inference:__\n- _We observe a decrease in the percentage of Payment Difficulties who are pensioners and an increase in the Payment Difficulties who are working when compared both Payment Difficulties and non-Payment Difficulties._","828d095b":"- The count of \u2018Maternity Leave\u2019 in \u2018NAME_INCOME_TYPE\u2019 is less also it has a maximum % of payment difficulties- around 40%. Hence, the client with income type as \u2018Maternity leave\u2019 are the driving factors for Loan Defaulters.\n\n\n- The count of \u2018Low skilled Laborers\u2019 in \u2018OCCUPATION_TYPE\u2019 is comparatively less also it has a maximum % of payment difficulties- around 17%. Hence, the client with occupation type as \u2018Low skilled Laborers\u2019 are the driving factors for Loan Defaulters.\n\n\n- The count of \u2018Lower Secondary\u2019 in \u2018NAME_EDUCATION_TYPE\u2019 is comparatively less also it has a maximum % of payment difficulties- around 11%. Hence, the client with education type as \u2018Lower Secondary\u2019 are the driving factors for Loan Defaulters.","0fb277e3":"<font color = \"blue\"> _Imputing The \"OCCUPATION_TYPE\" with mode \"Laborers\" will not be appropriate because the null values are more than the \"Laborers\" count and assuming the occupation of a particular client will not be appropriate, so we can keep the Null value as it is_","46d1d1ce":"### <font color = \"brown\">5.2 Previous Application Data","18d2360d":"### <font color = \"brown\">4.2 Univariate Analysis Of Categorical columns","ca116391":"#### <font color = 'brown'> 3.5.3 Education","c1634342":"- The count of \u2018Refusal to name the goal\u2019 in \u2018NAME_CASH_LOAN_PURPOSE\u2019 is comparatively less also it has a maximum % of payment difficulties- around 23%. Hence, clients who have \u2018Refused to name the goal\u2019 to cash the loan in the previous application are the driving factors for Loan Defaulters.\n\n\n- The count of \u2018Refused\u2019 in \u2018NAME_CONTRACT_STATUS\u2019 is comparatively less also it has a maximum % of payment difficulties- around 12%. Hence, the client with contract status as \u2018Refused\u2019 in the previous application are the driving factor for Loan Defaulters.\n\n\n- The count of \u2018Revolving Loans\u2019 in \u2018NAME_CONTRACT_TYPE\u2019 is comparatively less also it has a maximum % of payment difficulties- around 10%. Hence, the client with contract type as \u2018Revolving loans\u2019 in the previous application are the driving factors for Loan Defaulters.\n\n- It can be observed from the graph that Clients with 'Revolving loans' and with 'Refused' previous applications tend to have more % of payment difficulties in the current application. Since the count of both 'Revolving loans' and \u2018Refused\u2019 is comparatively less(from the graphs in the previous slide), clients with \u2018Revolving Loans' and \u2018Refused\u2019 previous application are driving factors for Loan Defaulters","004c7d53":"<font color = 'blue'>__Inference:__\n- _We observe some outliers and the first quartile is bigger than the third quartile for annuity amount which means most of the annuity clients are from the first quartile_\n- _Also, the annuity skewed left side means most of the annuity amount in the lower side_","8549872a":"<font color = 'blue'> _Here we can take a call since the null values are high whether we can impute with mode or we can leave as it is_","1eed0416":"#### <font color = \"brown\"> 4.2.5 Client Type","e60a3504":"<font color = \"blue\">__Inference:__\n- _The graphs for Loan Payment Difficulties and Loan - Non Payment Difficulties appear to be similar. We observe that the Family status of 'single', 'separated and 'married' of income range very high are having a higher number of credits than others._","1eeb1dbc":"<font color=\"blue\">_The age of the customers ranging from 20 to 69 years_","9340b9d3":"In this EDA, since it is not necessary to replace the missing value, but if we want to treat the missing value, the following approaches can be used","1ee8573a":"<font color = 'blue'>__Inference:__\n- _99% of the clients chose to pay cash through the bank._","096f9362":"#### <font color = \"brown\"> 4.2.6 Was the previous application for CASH, POS, CAR, CARDS","08e01461":"### <font color = 'brown'> 3.5 Univariate Analysis of Categorical Variables","a523c9e7":"<font color= 'blue'>__Inference:__\n- _We observed that cash loans are preferred by both Loan Payment Difficulties and Loan-Non Payment Difficulties. Although there is a decrease in the percentage of Payment Difficulties who opt for revolving loans._","41f8a211":"## <font color = \"brown\">3. Data Analysis on Application data","33ea09c6":"<font color = 'blue'> _Some of the days' columns having negative values, which has to be converted into absolute values_","7ecff20a":"#### <font color = \"brown\">3.7.3 Bivariate Analysis of Numerical vs Numerical Variables","c41073b8":"### <font color = \"brown\"> 2.5 Binning of continuous variables","921cdea7":"### <font color = \"brown\"> 2.1 Inspecting the data frame","143f2a22":"<font color = \"blue\">__Inference:__\n\n_From the first graph, it can be seen as that most of the payment type from the previous application was 'Cash through bank'_<br><br>\n\n_It can be seen from the second graph that all three types of payments from the previous application have almost the same as % of Loan-Payment Difficulties as to the current application_","0e69eafe":"<font color = \"blue\">__Inference:__\n- _We observe some outliers and the first quartile is bigger than the third quartile for annuity amount which means most of the annuity clients are from the first quartile_","67f2f7d6":"### <font color = 'brown'>3.3 Checking Imbalance","72828109":"<font color=\"blue\"> _The ORGANIZATION_TYPE having \"XNA\"  which is nothing but null values, this contributes 18% of the data so that we can convert it into null values_","c34efcde":"<font color = 'blue'>__Inference__:\n- _The graphs for Loan Payment Difficulties and Loan Non-Payment Difficulties appear to be similar. We observe that the Family status of 'civil marriage', 'marriage' and 'separated' of Academic degree education having a higher number of credits than others. Most of the outliers are from Education type 'Higher education and 'Secondary'. Civil marriage for Academic degree is having most of the credits in the third quartile._","d2574c2f":"<font color = \"blue\">__Inference:__\n- _We observe that there are some outliers and the curve is not normal its skewed left_","7264eb0c":"### <font color = \"brown\">2.4 Errors in Data types and Data","b3035671":"#### <font color = \"brown\">4.3.2 AMT_CREDIT","2b695304":"### <font color = 'brown'> 3.6 Univariate Analysis of Numerical Variables on the basis of 'Target' Variable","4f69e644":"<font color = \"blue\">__Inference:__\n- _We observe that there are some outliers and the curve is not normal its skewed left_","085e63df":"<font color=\"blue\">__Inference:__\n- _We can observe that Labourers, Sales Staff and Core Staff constitute the majority whereas IT Staff is on the lower side._","8c3a8faa":"<font color='blue'>_Here the days' values are in negative, days' will not be in negative, we have to convert into absolute value_","59af3acd":"#### <font color = \"brown\"> 4.2.1 Contract Status","dd7df1fd":"#### <font color = 'brown'> 3.5.7 Type of Loan","67b9cb25":"<font color = \"blue\">__Inference:__\n- _We observe that there are some outliers and the curve is not normal its skewed left_","09e455b3":"<font color = \"blue\">__Inference:__\n- _We observe that the majority of loans are for mobiles, consumer electronics, computers and furniture._","9844c72f":"#### <font color = \"brown\"> 4.2.3 Payment Method","cbeffed5":"#### <font color = \"brown\">2.4.2 checking the CODE_GENDER column","990771ca":"### <font color = \"brown\">3.1 Finding Outliers","d757250b":"<font color = \"blue\">__Inference:__\n- _It can be observed from the above graph that Clients with 'Revolving loans' and with 'Refused' previous application tend to have more % of Loan-Payment Difficulties in the current application_","f1661a8d":"#### <font color = 'brown'> 3.5.8 Accompanyed By","df8862d4":"#### <font color = 'brown'> 3.5.1 Gender Distribution","748067b8":"<font color = \"blue\"> _With the mode, which is the value '0'. Since they all are a number of credit inquiries, replacing missing values with the most frequent value would make more sense._","ad2e8fff":"<font color = 'blue'> _If we check the data frame some columns having \"XNA\", \"XAP\" which is a null value_ ","eeacc70c":"#### <font color = \"brown\">2.3.1 Checking column \"OCCUPATION_TYPE\"","203a1a59":"## <font color = \"brown\"> 2. Loading the Application dataset","3b84af91":"<font color = \"blue\">__Inference:__\n- _From the above plots, we can say that clients with 'Lower secondary' education type have a maximum % of Loan-Payment Difficulties._","9c42c869":"#### <font color = \"brown\"> 4.2.2 Day of the week","bb4eaa73":"<font color = \"blue\">__Inference:__\n- _We do not observe any significant changes here._","691fc8bf":"#### <font color = \"brown\">2.3.4 Checking the 'AMT_GOODS_PRICE'column","10a60359":"<font color = \"blue\">__Inference:__\n- _There are no outliers in the age of the customer_","ac3426c3":"<font color=\"blue\">__Inference:__\n- _We can observe that Business Entity Type 3 organizations have the majority of loan applications._","335123bd":"## <font color = \"brown\">5. Insights","659a37b2":"<font color = \"blue\">__Inference:__\n- _The column 'AMT_INCOME_TOTAL'  tells us the income of the client. We observe a value of 117M is an outlier_.","04ad5876":"#### <font color = 'brown'>Analysis_2","3981cdb8":"<font color = 'blue'>__Inference:__\n- _We can observe that there are fewer applicants that come at the weekends._","da2b7aa7":"<font color = \"blue\">__Inference:__\n- _The column 'DAYS_REGISTRATION' tells how many days before the application did client change his registration. We observed that a value is more than 24672 is an outlier because 24672\/365 will be around 68 years. Considering that a person started working at the age of 21, the person will be 21+68 will turn out to be 88 years, if we see the max-age of the customer is 69 years. It can be an incorrect entry_","fabf8845":"<font color = \"blue\">__Inference:__\n- _From the above plots, we can say that clients with a 'LOW' Income range have a maximum % of Loan-Payment Difficulties._","c0546509":"### <font color = \"brown\">2.3 Best Metric To Impute Missing Values In Columns","364ed9f1":"<font color = 'blue'>__Inference:__\n- _We observe an increase in the percentage of Payment Difficulties who live with their parents when compared to the Payment Difficulties and Non-Payment Difficulties_","5d54703a":"## <font color = \"brown\"> 4. Data Analysis on Previous Application data","b14fd94e":"<font color = 'blue'>_The above data frame shows the top 10 correlations for clients with payment difficulties_","f2371d1e":"<font color = \"blue\"> _49 columns removed from the data frame_","682ce7f8":"## <font color=\"brown\">Introduction\nThis case study aims to give an idea of applying EDA in a real business scenario. This case study helps to develop a basic understanding of risk analytics in banking and financial services and understand how data is used to minimise the risk of losing money while lending to customers.","68ba1f04":"<font color = \"blue\">__Inference:__\n- _We can observe that 62% of loans are approved and 1.5% of loans are unused offer_","b68288ea":"#### <font color = 'brown'> 3.5.5 Income Range","f19f3d58":"<font color = 'blue'>_we can impute the missing values with the median, which is the value '450000'_","e1636fbf":"<font color = \"blue\">__Inference:__\n- _From the above plots, we can say that clients with the 'Lower skill Laborers' occupation type have a maximum % of Loan-Payment Difficulties._","45002c9c":"### <font color=\"brown\"> 3.7 Bivariate Analysis","42a0cf8d":"![download.jpg](attachment:download.jpg)","61f401ff":"#### <font color = \"brown\">4.3.1 AMT_ANNUITY","e9f290b0":"#### <font color = \"brown\">4.3.3 AMT_GOODS_PRICE","94a9d6b7":"<font color = \"blue\">__Inference:__\n- _From the above plots, we can say that clients with the 'Maternity leave' Income type have a maximum % of Loan-Payment Difficulties._","e2b24e25":"#### <font color = 'brown'> 3.5.2 Income Source","620c2a37":"#### <font color = \"brown\"> 3.7.1 Bivariate Analysis of Categorical vs Numerical Variables","a54cc9c3":"#### <font color = 'brown'> 3.6.2 Credit Amount","026db13d":"#### <font color = \"brown\">2.3.22.3.2 Checking the column 'EXT_SOURCE_3'.","776cbd53":"<font color=\"blue\">__Inference:__\n- _From Female category Clients who have LOW income and ACADEMIC DEGREE education have maximum % of Loan-Payment Difficulties_\n- _From Male category Clients who have MEDIUM income and LOWER SECONDARY education have maximum % of Loan-Payment Difficulties_","3860b3f0":"#### <font color = \"brown\"> 4.2.7 Type of goods","1113d61c":"### <font color = \"brown\"> 4.1 Data loading and cleaning","3669748f":"<font color = \"blue\">__Infernce:__\n\n_From the first graph, it can be seen that most of the contract type from the previous application was 'Cash loans'_<br><br>\n\n_It can be seen from the second graph that the_\n    \n- _'Revolving Loans' contracts from the previous application are the ones who have a maximum % of Loan-Payment Difficulties from the current application._\n- _'Consumer loans' contracts from the previous application are the ones who have a minimum % of Loan-Payment Difficulties from the current application._","66895221":"#### <font color = \"brown\">2.3.3 Similar to the column 'AMT_REQ_CREDIT_BUREAU_YEAR', we can impute the missing values of columns<br><br>'AMT_REQ_CREDIT_BUREAU_MONTH', 'AMT_REQ_CREDIT_BUREAU_WEEK', 'AMT_REQ_CREDIT_BUREAU_DAY', 'AMT_REQ_CREDIT_BUREAU_HOUR', 'AMT_REQ_CREDIT_BUREAU_QRT','NAME_TYPE_SUITE'.","cff3a22f":"<font color = 'blue'>__Infernce:__\n- _We observed that there is a high correlation between credit amount and goods price. There appear to be some deviancies in the correlation of Loan-Payment Difficulties and Loan- Non Payment Difficulties such as credit amount v\/s income._","77a8e0c2":"## <font color='brown'>Business Objectives\nThis case study aims to identify patterns that indicate if a client has difficulty paying their instalments which may be used for taking actions such as denying the loan, reducing the amount of loan, lending (to risky applicants) at a higher interest rate, etc. This will ensure that the consumers capable of repaying the loan are not rejected. Identification of such applicants using EDA is the aim of this case study.\n\nIn other words, the company wants to understand the driving factors (or driver variables) behind loan default, i.e. the variables which are strong indicators of default. The company can utilise this knowledge for its portfolio and risk assessment.","f7a98c2d":"<font color = \"blue\">__Inference:__\n- _56% of applications got rejected for the reason of HC_","d77d1434":"#### <font color = \"brown\">3.6.3 Goods Price","70e57550":"<font color = \"blue\">__Inference:__\n- _We do not observe any significant changes here._","08f44cf6":"#### <font color = \"brown\">3.7.2 Bivariate Analysis of Categorical-Categorical","b71927ad":"<font color = 'blue'>__Inference:__\n- _We observe some outliers and the first quartile is bigger than the third quartile for annuity amount which means most of the annuity clients are from the first quartile. The distribution curve does not appear to be a normal or bell curve._","63a60652":"<font color = \"blue\">__Inference:__\n- _We observe that half of the previous application is for POS and a good amount of it is for cash._","19b8572b":"<font color = 'blue'>__Inference:__\n\n_From the first graph, it can be seen that most of the contracts from the previous application have been Approved_<br><br>\n\n_It can be seen from the second graph that the_\n    \n- _'Refused' contracts from the previous application are the ones who have a maximum % of Loan-Payment Difficulties from the current application._\n- _'Approved' contracts from the previous application are the ones who have a minimum % of Loan-Payment Difficulties from the current application._","07223dc0":"<font color = \"blue\">_From the DAYS_BIRTH column, we can make Age of the customer_","fef2e2f3":"### <font color = 'brown'> 3.2 Checking the distribution","7f96bca4":"### <font color = \"brown\">2.2 Data Cleaning","8f5ac930":"#### <font color = 'brown'> 3.6.1 Loan Annuity","d702e314":"### <font color = \"brown\">4.3 Univariate Analysis Of Numerical columns","e3c8cc67":"<font color=\"blue\"> _49 columns having >= 35% of null values which can be removed from the \"app_data\" data frame_","d0c23a5f":"<font color=\"blue\">__Inference:__\n- _The imbalance is high between target variables._\n- _0 - Non-Payment Difficulties contribute 92%, whereas 1 - client with payment difficulties contributes 8%_","0e2b64de":"#### <font color = \"brown\">Analysis_1","7ee42a4a":"<font color = \"blue\">__Inference:__\n- _From the above plots, we can say that clients with the 'Cash loans' contract type have a maximum % of Loan-Payment Difficulties._","2fc4988e":"<font color = \"blue\">_AMT_INCOME_TOTAL, AMT_CREDIT columns can be binned based on quartiles_","f0158275":"<font color = \"blue\">__Inference:__\n    \n_From the first graph, it can be seen that most of the clients from the previous application are 'Repeater'_<br><br>\n_It can be seen from the second graph that the_\n- _'New' clients from the previous application are the ones who have a maximum % of Loan-Payment Difficulties from the current application._\n- _'Refreshed' clients from the previous application are the ones who have a minimum % of Loan-Payment Difficulties from the current application._","b7c63496":"### <font color = \"brown\">4.4 Bivariate analysis after combining previous and current data","d5d056e1":"## <font color = \"brown\">1. Importing the required librearies","f433185e":"#### <font color = \"brown\"> 3.7.4 Top 10 Correlation for client with payment difficulties","8c61e256":"<font color = 'blue'>__Inference:__\n- _Comparing the Payment Difficulties and Non-Payment Difficulties based on the Gender, we observe that Females are the majority in both the cases although there is an increase in the percentage in Male Payment Difficulties from Non-Payment Difficulties_","1c4407c5":"#### <font color = 'brown'> 3.5.6 Age Range"}}