{"cell_type":{"dcb71fe4":"code","548e6607":"code","99536e13":"code","4f56d2d7":"code","a297a8f1":"code","aef691bf":"code","de7d1dee":"code","762b877b":"code","56373007":"code","39bac466":"code","73437c88":"code","e672c731":"code","68383c70":"code","6bcf16a1":"code","51adf012":"code","a1d19830":"code","250f5962":"code","47d12a25":"code","20fb52e2":"code","1477bfd7":"code","e9b2c3cb":"code","158d0e70":"code","ad3587a7":"code","7f6cd428":"code","c25ca4e3":"code","725b44bd":"code","bdd5cc2b":"code","0e9ff70a":"code","b2c78059":"code","61ad224e":"code","050fcb0a":"code","a90c4a6c":"code","3522efc1":"code","02cea6d0":"code","10ae53db":"markdown","618d3b52":"markdown","14d3d63f":"markdown","1da53319":"markdown","b81953e4":"markdown","6b2a72b7":"markdown","ec5f8807":"markdown","c1da3acc":"markdown","ae96b0e3":"markdown","588c1bf4":"markdown","1bd9c3f6":"markdown","f84da9ff":"markdown","a63181ca":"markdown","72331037":"markdown","f202f5c7":"markdown","fa9c8540":"markdown","ef9a03be":"markdown","ec152a81":"markdown","3dc3699e":"markdown"},"source":{"dcb71fe4":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom pathlib import Path\n\nprint(os.listdir(\"..\/input\"))\n\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"","548e6607":"DATA_ROOT = Path(\"..\/input\")\n\ntest_path = DATA_ROOT \/ \"test_stage_1.tsv\"\ntest_path = \"https:\/\/raw.githubusercontent.com\/google-research-datasets\/gap-coreference\/master\/gap-test.tsv\"\ndev_path = \"https:\/\/raw.githubusercontent.com\/google-research-datasets\/gap-coreference\/master\/gap-development.tsv\"\nval_path = \"https:\/\/raw.githubusercontent.com\/google-research-datasets\/gap-coreference\/master\/gap-validation.tsv\"","99536e13":"devdf = pd.read_csv(dev_path, delimiter=\"\\t\")\ndevdf.shape\ndevdf.head()","4f56d2d7":"valdf = pd.read_table(val_path, delimiter=\"\\t\")\nvaldf.shape\nvaldf.head()","a297a8f1":"testdf = pd.read_table(test_path, delimiter=\"\\t\")\ntestdf.shape\ntestdf.head()","aef691bf":"df = pd.concat([devdf, valdf, testdf])\ndf.shape\ndf.head()","de7d1dee":"filt1 = (df[\"A-coref\"] == True) & (df[\"B-coref\"] == True)\nfilt2 = (df[\"A-coref\"] == True) | (df[\"B-coref\"] == True)\n\ndf[\"label\"] = \"NEITHER\"\ndf.loc[df[\"A-coref\"] == True, \"label\"] = \"A\"\ndf.loc[df[\"B-coref\"] == True, \"label\"] = \"B\"","762b877b":"print(\"Cases where both A and B are correct:\", filt1.sum())","56373007":"print(\"Cases where either A or B is correct:\", filt2.sum())","39bac466":"print(\"Cases where neither A nor B is correct:\", df[~filt2].shape[0])","73437c88":"df.label.value_counts()","e672c731":"df[\"textlen\"] = df.Text.str.len()\ndf[\"textwords\"] = df.Text.str.split().str.len()","68383c70":"df.textlen.describe()\n\nax = df.textlen.plot.hist(bins=15, figsize=(10, 5))\n_ = ax.set_title(\"Text length distribution\")","6bcf16a1":"df[df.textlen < 70].T.to_dict()","51adf012":"df[df.textlen > 1340].T.to_dict()","a1d19830":"df.textwords.describe()\n\nax = df.textwords.plot.hist(bins=15, figsize=(10, 5))\n_ = ax.set_title(\"Text words histogram\")","250f5962":"df[df.textwords < 13].T.to_dict()","47d12a25":"df[df.textwords > 220].T.to_dict()","20fb52e2":"ax = df[[\"textlen\", \"textwords\"]].plot.scatter(x=\"textlen\", y=\"textwords\", figsize=(10, 5))\n_ = ax.set_title(\"text words vs text length\")","1477bfd7":"male_pro = [\"his\", \"he\", \"He\", \"him\", \"His\"]\nfemale_pro = [\"her\", \"she\", \"She\", \"her\", \"hers\"]\n\ndf[\"gender\"] = df.Pronoun.apply(lambda x: \"male\" if x.lower() in male_pro else \"female\")","e9b2c3cb":"df.gender.value_counts()","158d0e70":"df.Pronoun.str.lower().value_counts()","ad3587a7":"df[df.Pronoun == \"hers\"]","7f6cd428":"ax = df[[\"textlen\", \"Pronoun-offset\"]].plot.scatter(x=\"Pronoun-offset\", y=\"textlen\", figsize=(10, 5))\n_ = ax.set_title(\"text len vs pronoun offset\")","c25ca4e3":"(df.textlen \/ df[\"Pronoun-offset\"]).describe()","725b44bd":"df[(df.textlen \/ df[\"Pronoun-offset\"])>3].shape","bdd5cc2b":"((df.textlen \/ df[\"Pronoun-offset\"])<=2).sum() \/ df.shape[0]","0e9ff70a":"filt = (df.textlen \/ df[\"Pronoun-offset\"])<=3\ntemp = df.loc[filt, [\"textlen\", \"Pronoun-offset\"]]\nax = (temp.textlen \/ temp[\"Pronoun-offset\"]).plot.hist(bins=15, figsize=(10, 5))\n_ = ax.set_title(\"pronoun position to text length ratio distribution\")","b2c78059":"filt = (df[\"A-coref\"] == True) | (df[\"B-coref\"] == True)\n\ndf[\"label_offset\"] = pd.np.nan\ndf.loc[df[\"A-coref\"] == True, \"label_offset\"] = df.loc[df[\"A-coref\"] == True, \"A-offset\"]\ndf.loc[df[\"B-coref\"] == True, \"label_offset\"] = df.loc[df[\"B-coref\"] == True, \"B-offset\"]","61ad224e":"df[filt].shape","050fcb0a":"temp = df.loc[filt, [\"Pronoun-offset\", \"label_offset\"]]\ntemp[\"label_pronoun_gap\"] = temp[\"label_offset\"] - temp[\"Pronoun-offset\"]\n\ntemp[\"label_pronoun_gap\"].describe()\n\nax = temp[\"label_pronoun_gap\"].plot.hist(bins=15, figsize=(10, 5))","a90c4a6c":"(temp.label_pronoun_gap > 0).value_counts()\n(temp.label_pronoun_gap > 0).value_counts()*100\/temp.shape[0]","3522efc1":"ax = temp.plot.scatter(x=\"Pronoun-offset\", y=\"label_pronoun_gap\", figsize=(10, 5))","02cea6d0":"ax = temp.plot.scatter(x=\"label_offset\", y=\"label_pronoun_gap\", figsize=(10, 5))","10ae53db":"Observations:\n- the horizontal like at ```pronoun_label_gap=0```, tells us that the entity and pronoun offsets can never be same (which makes sense)\n- the vertical points at ```Pronoun-offset=0``` tells us about the points where pronoun comes at the start of the sentence and entities comes later in the sentense\n- anything above hirozontal line of 0 are cases where pronoun comes before entities (19% data)\n- anything below hirozontal line of 0 are cases where entities comes before pronouns (81% data)\n- the slanted line shows that the entities are at the start of the sentence since max gap possible (for cases where entity comes before pronoun) can be pronoun offset; entites can't come before the sentence even starts (```label_pronoun_gap = -Pronoun-offset```)","618d3b52":"## Text","14d3d63f":"## Pronoun position","1da53319":"## Pronoun and Gender","b81953e4":"Observations:\n\n- this ratio will never go below 1 as the pronoun offset cannot be greater than text length\n- from the plot it's apparent that majority of the pronouns are in the 2nd half of the text; (this majority is 96% of the data)\n- only 43 cases (0.9%) cases are there where the pronoun is in the initial 1\/3rd of the data\n- this plot shows that in most of the cases, first the entity\/person is introduced in a sentence and then the pronoun is used\n\nNext we'll explore the gap between the person and the pronoun","6b2a72b7":"Observations:\n- Text length ranges from 69 to 1347 characters\n- Most of the texts lie in 300 to 500 character\n\nLet's check the both extremes of the text based on text lengths","ec5f8807":"Observations:\n\n- text words range from 12 to 223\n- Most words lie between 50 and 100\n\nLet's see one example of the both extremes","c1da3acc":"Observations:\n- this plot is very similar to the previous plot where we plotted label_pronoun_gap vs Pronoun-offset\n- horizontal line at label_pronoun_gap=0 means entity offset and pronoun offset can never be the same\n- anything above hirozontal line of 0 are cases where pronoun comes before entities (19% data)\n- anything below hirozontal line of 0 are cases where entities comes before pronouns (81% data)\n- the vertical line at ```label_offset=0``` shows that the entities are at the start of sentence and the pronouns later in the sentence. Since here, the entities are at the start, there can never be any case where the gap will be positive. this like is same as the slanted line from the previous plot.\n- the slight (and small) group of points in a slanted line are the points where pronoun is at the start of the sentence and entities come later. This line is similar to the vertical points at ```Pronoun-offset=0``` in the previous plot","ae96b0e3":"Observations:\n\n- In the original Google AI Language's GAP dataset there are 8,908 coreference-labeled pairs - 4000 pairs in test and development each and 908 pairs in validation set\n- Through Github we are shared the half of that - 2000 pairs in test and development each and 454 pairs in validation set\n- All the 3 tables have all the 11 columns which includes the correct labels as well\n\nWe'll combine all of them together to do the exploratory analysis.\n","588c1bf4":"## Labels","1bd9c3f6":"## Entity Pronoun gap","f84da9ff":"Observations:\n\n- False means the cases where pronoun comes after entity (81%)\n- True means the cases where the entity comes after pronoun (19%)","a63181ca":"Gendered Pronoun Resolution\n=====\n\n# Objective\n\nIn this two-stage competition, Kagglers are challenged to build pronoun resolution systems that perform equally well regardless of pronoun gender. Stage two's final evaluation will use a new dataset following the same format. To encourage gender-fair modeling, the ratio of masculine to feminine examples in the official test data will not be known ahead of time. \n\nIn this competition, you must identify the target of a pronoun within a text passage. The source text is taken from Wikipedia articles. You are provided with the pronoun and two candidate names to which the pronoun could refer. You must create an algorithm capable of deciding whether the pronoun refers to name ```A```, name ```B```, or neither.\n\n# Evaluation\n\nSubmissions are evaluated using the multi-class logarithmic loss. Each pronoun has been labeled with whether it refers to A, B, or NEITHER. For each pronoun, you must submit a set of predicted probabilities (one for each class). The formula is then\n\n$log loss = -\\frac{1}{N}\\sum_{i=1}^N\\sum_{j=1}^My_{ij}\\log(p_{ij})$\n\nwhere N is the number of samples in the test set, M is 3, log is the natural logarithm, $y_{ij}$ is 1 if observation $i$ belongs to class $j$ and 0 otherwise, and $p_{ij}$ is the predicted probability that observation $i$ belongs to class $j$.\n\nThe submitted probabilities are not required to sum to one because they are rescaled prior to being scored (each row is divided by the row sum). In order to avoid the extremes of the log function, predicted probabilities are replaced with $max(min(p,1\u221210^{\u221215}),10^{\u221215})$.\n\n# Data\n\nUnlike many Kaggle challenges, this competition does not provide an explicit labeled training set. Files are also available on the [GAP Dataset Github Repo](https:\/\/github.com\/google-research-datasets\/gap-coreference). **Note that the labels for the test set are available on this page. However, your final score and ranking will be determined in stage 2, against a withheld private test set.**\n\n- ```test_stage_1.tsv``` - the test set data for stage 1\n\n## Columns\n\n- ```ID``` - Unique identifier for an example (Matches to Id in output file format)\n- ```Text``` - Text containing the ambiguous pronoun and two candidate names (about a paragraph in length)\n- ```Pronoun``` - The target pronoun (text)\n- ```Pronoun```- Offset The character offset of Pronoun in Text\n- ```A``` - The first name candidate (text)\n- ```A-offset``` - The character offset of name ```A``` in Text\n- ```A-coref``` - Whether ```A``` corefers with the pronoun, TRUE or FALSE\n- ```B``` - The second name candidate\n- ```B-offset``` - The character offset of name ```B``` in Text\n- ```B-coref``` - Whether ```B``` corefers with the pronoun, TRUE or FALSE\n- ```URL``` - The URL of the source Wikipedia page for the example\n\n\n","72331037":"Observations:\n\n- \"hers\" is not present in the train or validation set","f202f5c7":"Observations: \n- There are no cases where both A and B are correct (sanity check)\n- There are 490 cases where neither A nor B are the true labels\n- There are 3964 cases (1985 cases of B and 1979 cases of A) where either A or B are true labels","fa9c8540":"Observations:\n- half of the area where there are no points is because pronoun offset can't get higher then the text length itself; this is also a sanity check of our data (```textlen=Pronoun-offset```)\n- there are many texts where the selected pronoun is towards the end; this relationship is explored next","ef9a03be":"Observations:\n- it follows a roughly linear relationship between text words and text lengths.\n- databset seems to be carefully created as I've never seen this plot this neat\n\n(by first looking at it, I was surprisingly reminded of the milky way galaxy)","ec152a81":"Observations:\n- The gap between the entity and pronoun ranges from -502 to 291\n- mean is at -57 shows that entity appears before pronoun which we also previously\n- positive gap tells us about the cases where the pronoun is used before the entity is mentioned","3dc3699e":"Observations:\n- we have a 50-50 split in the genders as the competition details said, but this wont be true with the 2nd stage test data\n- in male pronouns, we have - he, his, him - with his being the highest in the frequency (1193)\n- in female pronouns we have - she, her, hers - with her being the highest in frequency (1315)"}}