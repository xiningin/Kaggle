{"cell_type":{"85813eb5":"code","7e309208":"code","1cd5b6e2":"code","dfc6cf5b":"code","c22cf425":"code","cdb29a68":"code","265e9ecd":"markdown","16997774":"markdown"},"source":{"85813eb5":"!pip -q install 'git+https:\/\/github.com\/facebookresearch\/detectron2.git'","7e309208":"import detectron2\nfrom detectron2 import model_zoo\nfrom detectron2.engine import DefaultPredictor\nfrom detectron2.config import get_cfg\nfrom detectron2.data.datasets import register_coco_instances\nfrom detectron2.data import MetadataCatalog, DatasetCatalog\nfrom detectron2.utils.visualizer import Visualizer, ColorMode\nimport pycocotools.mask as mask_util\nfrom PIL import Image\nimport cv2\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\nimport numpy as np\nfrom fastcore.all import *","1cd5b6e2":"dataDir=Path('..\/input\/sartorius-cell-instance-segmentation\/')\nregister_coco_instances('all',{},'..\/input\/sartorius-cell-instance-segmentation-coco\/annotations_all.json', dataDir)\nall_metadata = MetadataCatalog.get('all')\nall_dataset = DatasetCatalog.get('all')","dfc6cf5b":"cache = {d['image_id']: d for d in all_dataset}\n\ndef vis(*image_ids, rect=None):\n    l = len(image_ids)\n    fig = plt.figure(figsize=(40, 12 * l))\n    if rect:\n        x, y, w, h = rect\n    for num, image_id in enumerate(image_ids):\n        d = cache[image_id]\n        name = d[\"file_name\"]\n        img = cv2.imread(name)\n        visualizer = Visualizer(img[:, :, ::-1], metadata=all_metadata, scale=1,instance_mode=ColorMode.SEGMENTATION)\n        for a in d['annotations']:\n            a['bbox'] = [-10,-10,0,0]\n        out = visualizer.draw_dataset_dict(d)\n        img2 = out.get_image()[:, :, ::-1]\n        \n        ax = fig.add_subplot(1 * l, 2, 2*num + 1)\n        if rect:\n            ax.add_patch(patches.Rectangle((x, y), w, h, linewidth=1, edgecolor='r', facecolor='none'))\n        plt.imshow(img2)\n        plt.title(d['image_id'])\n\n        ax = fig.add_subplot(1 * l, 2, 2*num + 2)\n        if rect:\n            ax.add_patch(patches.Rectangle((x, y), w, h, linewidth=1, edgecolor='r', facecolor='none'))\n        plt.imshow(img)","c22cf425":"vis('35fc12883459', 'eec79772cb99', 'e92c56871769')","cdb29a68":"vis('25559c20c6f3', '71d6e508abdc', rect=(300, 380, 80, 80))","265e9ecd":"# Inconsistent annotations","16997774":"# Atefacts example"}}