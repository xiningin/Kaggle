{"cell_type":{"15709a56":"code","9d8190cf":"code","c1149407":"code","c891e6ce":"code","18b06f40":"code","ee93d73f":"code","81d2ccde":"code","67a38dc2":"code","e07e3474":"code","1e7fe97f":"code","cae2a7c5":"code","f69b623b":"code","92c38db1":"code","9d142a0f":"markdown","67a51ea0":"markdown","690eccdf":"markdown","d9d0c090":"markdown","62fc93b3":"markdown","3b609a2b":"markdown","e89dd236":"markdown","febd6006":"markdown","233c4a4e":"markdown","f14b9fad":"markdown","0c6849b0":"markdown","be527ed5":"markdown","697b6157":"markdown","26c33de6":"markdown","a2f93720":"markdown","e0228962":"markdown","09c0326c":"markdown","447646c1":"markdown","d55e49d6":"markdown","e463c44d":"markdown","89dc3f5c":"markdown","6b3308bb":"markdown","d565ac63":"markdown","da4ff462":"markdown","b8c56322":"markdown","c7046990":"markdown","84745bc5":"markdown","971c7e0a":"markdown","b78d9daf":"markdown"},"source":{"15709a56":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9d8190cf":"import pandas as pd","c1149407":"df=pd.read_csv(\"..\/input\/online-retail\/Online_Retail.csv\",encoding='windows-1252')  # pandas csv format\u0131 okuma y\u00f6ntemi\ndf.head(5) # \u00e7ekti\u011fimiz datan\u0131n ilk 5 sat\u0131r\u0131n\u0131 inceleyelim","c891e6ce":"df.info() # info() pandas DataFrame i\u00e7in ge\u00e7erlidir ve kolonlar\u0131n veri tiplerini getirir.","18b06f40":"df.describe() # kolonlar\u0131n genel istatistiklerini g\u00f6sterir.","ee93d73f":"\ndf[\"Quantity\"] # kolon se\u00e7mek i\u00e7in kullan\u0131lan format df.Quantity olarakta kullan\u0131labilir.","81d2ccde":"df[[\"Quantity\"]]  # [[\"kolon ismi\"]]  \u00e7ift k\u00f6\u015feli parantez ile istedi\u011fimiz verinin Pandas DataFrame oldu\u011funu tan\u0131mlam\u0131\u015f olduk.","67a38dc2":"df[[\"Quantity\",\"UnitPrice\"]] # Birden fazla kolon se\u00e7mek istedi\u011fimizde virg\u00fcl ile ay\u0131rarak isimlerini girebiliriz","e07e3474":"df_yeni=df[[\"Quantity\",\"UnitPrice\"]]  # yeni bir de\u011fi\u015fkene se\u00e7ti\u011fimiz kolonlar\u0131 atayabiliriz. O d\u011fei\u015fkende kulland\u0131\u011f\u0131m\u0131z format ile ayn\u0131 olacakt\u0131r. \n                                      # bu \u00f6rnekte Pandas DataFrame olacakt\u0131r.\ndf_yeni","1e7fe97f":"df.groupby(\"Country\")[[\"UnitPrice\"]].mean().head(5)  # \u00fclkelere g\u00f6re ortalama fiyat","cae2a7c5":"df.groupby(\"Country\")[[\"UnitPrice\"]].mean().sort_values(by=\"UnitPrice\",ascending=False).head(5)  # ascending=False ile b\u00fcy\u00fckten k\u00fc\u00e7\u00fc\u011fe s\u0131ralad\u0131k","f69b623b":"print(\"UnitPrice en y\u00fcksek de\u011feri: \",df[\"UnitPrice\"].max())\nprint(\"UnitPrice en d\u00fc\u015f\u00fck de\u011feri: \",df[\"UnitPrice\"].min())\nprint(\"UnitPrice ortalama de\u011feri: \",df[\"UnitPrice\"].mean())\nprint(\"verimizdeki sat\u0131r say\u0131s\u0131: \",len(df))\nprint(\"Description bo\u015f olan sat\u0131r say\u0131s\u0131: \",len(df[df[\"Description\"].isnull()]))","92c38db1":"df[df[\"Description\"]==\"WHITE METAL LANTERN\"].head(5)","9d142a0f":"## \u0130ngilterede (United Kingdom) Quantity 6 dan b\u00fcy\u00fck olan \u00fcr\u00fcnlerin Description lar\u0131n\u0131 tekil olarak pandas dataframe format\u0131nda yazal\u0131m.\nNot: 1 sat\u0131r kod ile yap\u0131labilir","67a51ea0":"## Python \u0130\u015flerinizi Nas\u0131l Kolay Hale Getirir?\n\nPython program dili olduk\u00e7a k\u0131sa ve okunabilir syntax\u2019lardan olu\u015fur. Python\u2019un en  son ki 3.x g\u00fcncellemesindeki standart \u201cMerhaba D\u00fcnya\u201d yaz\u0131s\u0131 \u015fu \u015fekildedir.\n\nprint(\u201cHello world!\u201d)\n\nPython'da bir\u00e7ok yayg\u0131n program ak\u0131\u015f\u0131n\u0131 a\u00e7\u0131k bir \u015fekilde ifade etmek i\u00e7in bir\u00e7ok nesne elemanlar\u0131 kullanabilirsiniz.  Bir liste nesnesinin i\u00e7indeki txt dosyas\u0131ndan sat\u0131rlar\u0131 okuyan standart bir program d\u00fc\u015f\u00fcn ve bunlar\u0131 dizi bi\u00e7iminde s\u0131ralamas\u0131n\u0131 istiyorsunuz. Bunun i\u00e7in kod a\u015fa\u011f\u0131daki gibidir.\n\nwith open(\u2018apsisx.txt\u2019) as apsisx_file:\n\n     file_lines = [x.strip(\u2018\\n\u2019) for x in apsisx_file]\n\nProgram\u0131n kod dizimi a\u00e7\u0131s\u0131ndan inceledi\u011fimizde \"with\/as\" yap\u0131s\u0131, bir kod blo\u011fu bir nesneyi \u00f6rneklendirmek ve daha sonra bu blo\u011fun d\u0131\u015f\u0131na atmak i\u00e7in etkili bir yol sa\u011flayan bir i\u00e7erik y\u00f6neticisidir. Bu durumda, nesnemiz open () i\u015fleviyle \u00e7a\u011fr\u0131lan  apsisx_file olmu\u015ftur. Bu sayade dosyay\u0131 a\u00e7mak, ondan tek tek sat\u0131rlar\u0131 okumak ve daha sonra kapatmak i\u00e7in birka\u00e7 sat\u0131rl\u0131k ekstra kod yazman\u0131n gere\u011fi kalmam\u0131\u015ft\u0131r.\n\n[x.strip(\u2018\\n\u2019) for x in apsisx_file] yap\u0131s\u0131 ba\u015fka bir Python dil \u015femas\u0131d\u0131r. Di\u011fer \u00f6\u011feleri (buradaki, apsisx_file ve di\u011fer kodlar) i\u00e7eren yap\u0131 kodlar\u0131n yinelenmesini sa\u011flar. Her yinelenen nesnenin (that is, each x) i\u015flenmesini ve otomatik olarak bir listeye eklenmesine yard\u0131mc\u0131 olur.\n\nGenel olarak Python'da, ba\u015fka bir dillerde de olu\u015fturulan \"for...\"  kal\u0131b\u0131n\u0131 d\u00f6ng\u00fc olarak yazabilirsiniz.  Temel nokta, Python'un \u00e7oklu nesneler \u00fczerinde yineleyen d\u00f6ng\u00fcler gibi \u015feyleri ekonomik olarak ifade etmenin bir yolu oldu\u011fu y\u00f6n\u00fcndedir. Ayr\u0131ca, d\u00f6ng\u00fcdeki her \u00f6\u011fe i\u00e7in basit bir i\u015flem ger\u00e7ekle\u015ftirmeye veya a\u00e7\u0131k bir \u00f6rnekleme ya da elden \u00e7\u0131karma gerektiren \u015feylerle \u00e7al\u0131\u015fman\u0131za yard\u0131mc\u0131 olur.\n\nBu gibi kod bloklar\u0131, Python dili ile program geli\u015ftiren insanlar\u0131n farkl\u0131l\u0131k ve okunabilirli\u011fi dengelemelerine izin verir.\n\nPython\u2019un di\u011fer dil \u00f6zellikleri, yayg\u0131n kullan\u0131m durumlar\u0131n\u0131 tamamlay\u0131c\u0131 niteliktedir. \"Unicode dizeleri\" gibi en modern nesne t\u00fcrleri do\u011frudan dil i\u00e7erisine aktar\u0131labilir. Listeler, s\u00f6zl\u00fckler (hashmaps), tupllar (nesnenin de\u011fi\u015fmez yap\u0131lar\u0131n\u0131 depolamak i\u00e7in kullan\u0131l\u0131r) ve setler  (sadece belirli kod dizgileri i\u00e7in kullan\u0131l\u0131r) gibi veri yap\u0131lar\u0131 mevcuttur.","690eccdf":"<font color='red'>df[\"Quantity\"].info() kodunu \u00e7al\u0131\u015ft\u0131rd\u0131\u011f\u0131m\u0131zda a\u015fa\u011f\u0131daki hatay\u0131 al\u0131r.\n\n<font color='red'>\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n\/tmp\/ipykernel_37\/1766036975.py in <module>\n----> 1 df[\"Quantity\"].info()\n\n\/opt\/conda\/lib\/python3.7\/site-packages\/pandas\/core\/generic.py in __getattr__(self, name)\n   5485         ):\n   5486             return self[name]\n-> 5487         return object.__getattribute__(self, name)\n   5488 \n   5489     def __setattr__(self, name: str, value) -> None:\n\nAttributeError: 'Series' object has no attribute 'info'","d9d0c090":"### \u00d6zet bilgi \u00e7\u0131karmak i\u00e7in groupby komunutunu kullanabiliriz.","62fc93b3":"### \u00d6ncelikle gerekli t\u00fcm k\u00fct\u00fcphaneler import edilir.","3b609a2b":"# Bir K\u00fct\u00fcphane Nas\u0131l Y\u00fcklenir","e89dd236":"# \u0130ndirilen K\u00fct\u00fcphane Nas\u0131l Kullan\u0131l\u0131r","febd6006":"# PYTHON NED\u0130R?","233c4a4e":"### Merak etti\u011fimiz bilgileri \u00e7ok k\u00fc\u00e7\u00fck kodlarla \u00e7ekerek ekrana yazd\u0131rabiliriz. Verileri incelerken bu tarz bilgiler \u00e7ok \u00f6nemlidir!!!","f14b9fad":"### yukar\u0131daki koddan da g\u00f6rebilece\u011finiz gibi pythonda nokta i\u015fareti koyarak yap\u0131lan i\u015flemin \u00fczerine yeni bir i\u015flem daha yap\u0131labilir.  \u00d6rne\u011fin yukar\u0131da groupby komutunu kulland\u0131k. Sonuna head(5) diyerek \u00e7\u0131kan sonu\u00e7tan ilk 5 sat\u0131r\u0131 g\u00f6stermesini istedik.\n\n### A\u015fa\u011f\u0131daki kodda bir ad\u0131m daha \u00f6teye gidelim ve UnitPrice a g\u00f6re s\u0131ralad\u0131ktan sonra ilk 5 sat\u0131r\u0131 getirmesini isteyelim","0c6849b0":"## T\u00fcm veri \u00fczerinden UnitPrice ortalamas\u0131n\u0131 bulun ve ortalam\u0131n\u0131n \u00fczerindeki sat\u0131rlar\u0131 \u00fclkelere g\u00f6re gruplay\u0131n ve adetlerini \u00e7\u0131kar\u0131n. En b\u00fcy\u00fckten k\u00fc\u00e7\u00fc\u011fe do\u011fru s\u0131ralay\u0131n.","be527ed5":"## Soru 1","697b6157":"### Genel olarak <font color='red'>pip install<\/font>  komutu ile istenilen paketler y\u00fcklenebilir.\n### Anaconda kullan\u0131ld\u0131\u011f\u0131nda <font color='red'>conda install<\/font>  komutu ile do\u011frudan default sanal ortam\u0131n\u0131za indirilebilir.\n\n### Baz\u0131 derleyicilerde ba\u015f\u0131na <font color='red'>!<\/font> i\u015fareti eklenerek \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r.\n\n### \u00d6rnek : pip install seaborn","26c33de6":"### art\u0131k csv format\u0131ndaki verimiz pandas DataFrame format\u0131nda ve bu format i\u00e7in tan\u0131mlanm\u0131\u015f t\u00fcm kodlar\u0131 \u00e7al\u0131\u015ft\u0131rabiliriz.\n","a2f93720":"### 2. NumPy\nNumPy, \u00c7ok boyutlu dizilerle ve matrislerle \u00e7al\u0131\u015fmam\u0131za yard\u0131m eden ileri d\u00fczey matematiksel i\u015flemler yapabilece\u011fimiz bir k\u00fct\u00fcphanedir. \u0130statistiksel i\u015flemlerin, veri ile ilgili matematik operasyonlar\u0131n\u0131n daha etkili bir \u015fekilde yap\u0131lmas\u0131 i\u00e7in Numpy k\u00fct\u00fcphanesi yaz\u0131lm\u0131\u015ft\u0131r. G\u00fcn\u00fcm\u00fczde \u00f6zellikle veri bilimi \u00fczerine \u00e7al\u0131\u015fanlar ba\u015fta olmak \u00fczere Numpy, Python programlayanlar taraf\u0131ndan \u00e7ok s\u0131k kullan\u0131lan bir k\u00fct\u00fcphanedir.","e0228962":"## Yeni bir kolon ekleyin ve kolonu Invoicedate kolonunun ay\u0131n\u0131 g\u00f6sterecek \u015fekilde t\u00fcretin. \n## \u00d6rnek: \"12\/1\/10 8:26\" i\u00e7in 1 yazmal\u0131 gibi.\n## Bu olu\u015fturdu\u011funuz kolona g\u00f6re gruplayarak adetleri \u00e7\u0131kart\u0131n. Sonra Quantity toplamlar\u0131n\u0131 \u00e7\u0131kart\u0131n.\n\n## G\u00f6r\u00fclmek istenen ayl\u0131k olarak adetler ve quantity toplamlar\u0131.","09c0326c":"Dikkat ederseniz yukar\u0131daki veriler art\u0131k DataFrame format\u0131nda de\u011fil.Pandas Series format\u0131na d\u00f6nd\u00fc ve az \u00f6nceki kodlar art\u0131k \u00e7al\u0131\u015fmaz.","447646c1":"## Python, nesne y\u00f6nelimli, yorumlamal\u0131, birimsel (mod\u00fcler) ve etkile\u015fimli y\u00fcksek seviyeli bir programlama dilidir.","d55e49d6":"### 1. Pandas\nPandas, veri i\u015flemesi ve analizi i\u00e7in Python programlama dilinde yaz\u0131lm\u0131\u015f olan bir yaz\u0131l\u0131m k\u00fct\u00fcphanesidir. Bu k\u00fct\u00fcphane temel olarak zaman etiketli serileri ve say\u0131sal tablolar\u0131 i\u015flemek i\u00e7in bir veri yap\u0131s\u0131 olu\u015fturur ve bu \u015fekilde \u00e7e\u015fitli i\u015flemler bu veri yap\u0131s\u0131 \u00fczerinde ger\u00e7ekle\u015ftirilebilir olur.","e463c44d":"# ARTIK KODLARIMIZI \u00c7ALI\u015eTIRMAYA BA\u015eLAYAB\u0130L\u0130R\u0130Z","89dc3f5c":"### Komut sat\u0131r\u0131nda veya ba\u015fka bir program i\u00e7inde import komutunu vererek bu mod\u00fcl\u00fcn i\u00e7indeki b\u00fct\u00fcn komutlar\u0131n i\u015fletilmesini sa\u011flars\u0131n\u0131z.\n\n### Mod\u00fclden sadece belli isimleri almak istiyorsak from ... import komutunu kullanabiliriz. O zaman bu de\u011fi\u015fkenler ana isim alan\u0131na aktar\u0131lm\u0131\u015f olurlar ve onlara nokta i\u015flemi olmadan do\u011frudan eri\u015febiliriz.\n\n## \u00d6rnek: from datetime import timedelta","6b3308bb":"## Soru 2","d565ac63":"## Soru 3","da4ff462":"### 3. Seaborn\nSeaborn, Python'da ilgi \u00e7ekici ve bilgilendirici istatistiksel grafikler yapmak i\u00e7in kullan\u0131lan bir k\u00fct\u00fcphanedir. Matplotlib \u00fczerine in\u015fa edilmi\u015f, numpy, pandas veri yap\u0131lar\u0131ndan, scipy, statsmodel'den istatistiksel \u015fablonlar i\u00e7in destek alarak PyData y\u0131\u011f\u0131n\u0131yla s\u0131k\u0131 bir \u015fekilde entegre edilmi\u015ftir.","b8c56322":"### E\u011fer belirli kolonlar\u0131 se\u00e7mek istiyorsak ancak sonu\u00e7 yine Pandas DataFrame olsun istiyorsak \u00e7ok pratik bir \u00e7\u00f6z\u00fcm\u00fc var.","c7046990":"## POP\u00dcLER K\u00dcT\u00dcPHANELER","84745bc5":"### Sonuncu \u00f6rnek kafan\u0131z\u0131 kar\u0131\u015ft\u0131rm\u0131\u015f olabilir. Asl\u0131nda Pandas k\u00fct\u00fcphanesinde filtreleme i\u015flemi \u00e7ok basittir. SQL kullanmaya al\u0131\u015fanlar i\u00e7in biraz farkl\u0131 gelebilir ancak al\u0131\u015ft\u0131\u011f\u0131n\u0131zda \u00e7ok daha pratiktir.\n\n### \u00f6ncelikle veri yani df k\u00f6\u015feli parantez eklenir df[] \n### buran\u0131n i\u00e7erisine se\u00e7ilmek istenen kolon eklenir df[\"Description\"]\n### son olarak e\u015fitlik sa\u011flanarak istenen bilgi getirilir.","971c7e0a":"### 3. matplotlib\nMatplotlib, grafik \u00e7izim paketi Python\u2019la bilimsel programlaman\u0131n en \u00f6nemli ara\u00e7lar\u0131ndan birisidir. Temel olarak bir veri g\u00f6rselle\u015ftirme k\u00fct\u00fcphanesidir. \u00c7ok kuvvetli bir paket olan Matplotlib ile verileri etkile\u015fimli olarak g\u00f6rselle\u015ftirebilir, yay\u0131nlamaya uygun y\u00fcksek kalitede \u00e7\u0131kt\u0131lar haz\u0131rlayabiliriz. Hem iki boyutlu hem de \u00fc\u00e7 boyutlu grafikler \u00fcretilebilir.","b78d9daf":"## NERELERDE KULLANILIR?\n### Python programlama dili veri bilimi, makine \u00f6\u011frenimi, sistem otomasyonu, web ve API geli\u015ftirme ve daha fazlas\u0131 i\u00e7in bir temel yap\u0131d\u0131r. "}}