{"cell_type":{"dc916fe1":"code","e1c1b988":"code","7d595e3f":"code","e62b57f1":"code","b6bfcc6b":"code","509aca32":"code","4f8116e8":"code","34bc281d":"code","0687ad06":"code","bf15ba3d":"code","2c92f22d":"code","96185231":"code","9b85d319":"code","60af3cf4":"code","439b87c0":"code","78829cc9":"code","2c81bdbf":"code","2d0caabc":"code","0ad5a07e":"markdown"},"source":{"dc916fe1":"#libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt","e1c1b988":"#load data\nwines = pd.read_csv('\/kaggle\/input\/wine-reviews\/winemag-data-130k-v2.csv')","7d595e3f":"#look at columns\nwines.info()","e62b57f1":"#look at data sample\nwines.head()","b6bfcc6b":"#select a column\nwines.country","509aca32":"#look at tasters\nwines.taster_name.value_counts()","4f8116e8":"#and their twitters\nwines.taster_twitter_handle.value_counts()","34bc281d":"#who does not twit?\nwines[wines.taster_twitter_handle.isnull()].taster_name.value_counts()","0687ad06":"#look at countries\nwines.country.value_counts()","bf15ba3d":"#wines from what countries did Christina Pickard tasted?\nwines[wines.taster_name == 'Christina Pickard']","2c92f22d":"#who tasted wines from China, Egypt, Slovakia?\nwines[wines.country.isin(['China','Egypt','Slovakia'])]","96185231":"#delete rows where country is nan\nwines2 = wines.dropna(subset=['country'])","9b85d319":"#check\nlen(wines2.country.unique())","60af3cf4":"#show overall point distribution\nwines2.points.plot.hist(bins=12, alpha=0.5)","439b87c0":"#show point distribution by country\nfor country in wines2.country.unique():\n    wines2[wines2.country == country].points.plot.hist(bins=12, alpha=0.5, figsize=(18,5))","78829cc9":"#the same on separate subplots\nfig, axes = plt.subplots(11, 4, figsize=(15,25), dpi=100, sharex=True, sharey=True)\nfor i, (ax, country) in enumerate(zip(axes.flatten(), wines2.country.unique())):\n    x = wines2.loc[wines2.country==country, 'points']\n    ax.hist(x, alpha=0.5, bins=12, density=True, stacked=True, label=str(country))\n    ax.set_title(country)","2c81bdbf":"#delete countries with less than 50 values, then repeat\nwines3 = wines2[wines2.groupby('country')['country'].transform('count').gt(50)]\nfig, axes = plt.subplots(7, 4, figsize=(15,25), dpi=100, sharex=True, sharey=True)\nfor i, (ax, country) in enumerate(zip(axes.flatten(), wines3.country.unique())):\n    x = wines3.loc[wines3.country==country, 'points']\n    ax.hist(x, alpha=0.5, bins=12, density=True, stacked=True, label=str(country))\n    ax.set_title(country)","2d0caabc":"#plot the rest, exclude countries with only 1 wine\nwines4 = wines2[wines2.groupby('country')['country'].transform('count').le(50)]\nwines4 = wines4[wines4.groupby('country')['country'].transform('count').gt(1)]\nfig, axes = plt.subplots(4, 4, figsize=(15,15), dpi=100, sharex=True, sharey=True)\nfor i, (ax, country) in enumerate(zip(axes.flatten(), wines4.country.unique())):\n    x = wines4.loc[wines4.country==country, 'points']\n    ax.hist(x, alpha=0.5, bins=12, density=True, stacked=True, label=str(country))\n    ax.set_title(country)","0ad5a07e":"**Well, this distribution is almost normal. But there are a lack of 89pts wines. Maybe our experts intend to give some wines 90 pts instead of 89 in order to increase wines' category?\nNow I will not trust such wines and prefer to choose bottle with 88-89, as more honest.**"}}