{"cell_type":{"ecab8012":"code","de2ee505":"code","ba448e47":"code","9f0eea49":"code","bf4e5d88":"code","dd1e6e5a":"code","6fff40e0":"code","94b301f6":"code","8a53a469":"code","cbf1ab12":"code","0c223912":"code","a90f0e65":"code","14c51580":"code","5aa438d0":"code","cd019621":"code","35f978a2":"code","c47fbe7f":"code","f11d41d3":"code","14e51cfa":"code","94e78a7a":"markdown","af13a414":"markdown","3993caea":"markdown","01508f33":"markdown"},"source":{"ecab8012":"import pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        filename = os.path.join(dirname, filename)\n        \n#read in the data using pandas\ndf = pd.read_csv(filename)\n#check data has been read in properly\ndf.head()","de2ee505":"df.shape","ba448e47":"df.describe","9f0eea49":"X = df.drop(columns=['Outcome'])","bf4e5d88":"X.head()","dd1e6e5a":"y = df['Outcome'].values","6fff40e0":"y[0:5]","94b301f6":"from sklearn.model_selection import train_test_split\n#split dataset into train and test data\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1, stratify=y)","8a53a469":"len(X_train)","cbf1ab12":"len(X_test)","0c223912":"y_train","a90f0e65":"y_test","14c51580":"from sklearn.neighbors import KNeighborsClassifier\n# Create KNN classifier\nknn = KNeighborsClassifier(n_neighbors = 10)\n# Fit the classifier to the data\nknn.fit(X_train,y_train)","5aa438d0":"#show first 5 model predictions on the test data\nknn.predict(X_test)[0:5]","cd019621":"y_test","35f978a2":"knn.score(X_test, y_test)","c47fbe7f":"from sklearn.model_selection import cross_val_score\nimport numpy as np\n#create a new KNN model\nknn_cv = KNeighborsClassifier(n_neighbors=3)\n#train model with cv of 5 \ncv_scores = cross_val_score(knn_cv, X, y, cv=5)\n#print each cv score (accuracy) and average them\nprint(cv_scores)\nprint('cv_scores mean:{}'.format(np.mean(cv_scores)))","f11d41d3":"error_rate = []\npred_i = 0\n# Might take some time\nfor i in range(1,40):\n    \n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train,y_train)\n    error_rate.append(knn.score(X_test, y_test))","14e51cfa":"import matplotlib.pyplot as plt\n\nplt.figure(figsize=(10,6))\nplt.plot(range(1,40),error_rate,color='blue', linestyle='dashed', marker='o',\n         markerfacecolor='red', markersize=10)\nplt.title('Score vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Score')","94e78a7a":"# k-Fold Cross-Validation","af13a414":"# Build model","3993caea":"# Split data into train and test set","01508f33":"# Choosing K"}}