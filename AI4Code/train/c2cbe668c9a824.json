{"cell_type":{"6b04b7fb":"code","9cfd9ba1":"code","cfee9a5c":"code","5e8be31b":"code","bc717583":"code","dc8cf15d":"code","ad691fcf":"code","ad1dbdc5":"code","24faef2e":"code","3dd6ad7d":"code","0f16b7c1":"code","41227cf2":"code","7d6a4480":"code","0d94a3ae":"code","90e846de":"code","595861b2":"code","0f0a12d9":"code","ea2a0dbf":"code","8c909196":"code","9b30b78c":"code","30052228":"code","bceacc5e":"markdown","5bc4be46":"markdown","122efb8c":"markdown"},"source":{"6b04b7fb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9cfd9ba1":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntrain_data.head()","cfee9a5c":"train_data.info()","5e8be31b":"train_data.isnull().sum()","bc717583":"sns.heatmap(train_data.isnull(), yticklabels = False, cbar = False,cmap='coolwarm')","dc8cf15d":"train_data['Age']=train_data['Age'].fillna(train_data['Age'].mean())","ad691fcf":"train_data['Age'] = train_data['Age'].astype(int)","ad1dbdc5":"test_data['Age']=test_data['Age'].fillna(test_data['Age'].mean())","24faef2e":"test_data['Age'] = test_data['Age'].astype(int)","3dd6ad7d":"test_data['Fare']=test_data['Fare'].fillna(test_data['Fare'].mean())","0f16b7c1":"sns.heatmap(train_data.isnull(), yticklabels = False, cbar = False,cmap='coolwarm')","41227cf2":"test_data.head()","7d6a4480":"test_data.info()","0d94a3ae":"train_data['Survived'].value_counts(normalize=True)","90e846de":"\nsns.countplot(train_data['Survived'])","595861b2":"women = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)\/len(women)\n\nprint(\"% of women who survived:\", rate_women)","0f0a12d9":"men = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"% of men who survived:\", rate_men)","ea2a0dbf":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Fare\", \"Age\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n","8c909196":"model = RandomForestClassifier(n_estimators=300, max_depth=30, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n","9b30b78c":"model.score(X,y)","30052228":"output = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","bceacc5e":"# Missing data","5bc4be46":"**Survived**","122efb8c":"** Loading data**"}}