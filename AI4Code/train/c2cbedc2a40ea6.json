{"cell_type":{"179ac22b":"code","966c1aa9":"code","3b25f6f7":"code","aa421715":"code","84fa3038":"code","a398eb87":"code","2fa62f93":"code","343480d7":"code","de20dbe1":"code","23d2f26a":"code","a1d5eb50":"code","12db2fef":"code","1a7b3d9f":"code","84f66a88":"code","77eac411":"code","fe34f704":"code","9892e4de":"code","46b4c9f6":"code","b33400df":"code","142c7e6b":"code","2bc067d5":"code","8ffe5d0a":"code","2f347d6c":"code","b9c9487b":"code","5e668079":"code","7f70577b":"code","2394f22c":"code","4ef7c4e5":"code","b39f9a7a":"code","7c832bec":"code","9688d24d":"code","704a366f":"code","3de329e5":"code","5cf279d7":"code","0398a10f":"code","afdfd01e":"code","fa4e7629":"code","98a56314":"code","c0502b83":"code","078d0c13":"code","7e66282e":"code","ee7542b4":"code","45f4bba8":"code","1b78a1c5":"code","a5bdaee1":"code","a74249f8":"markdown","2e92632f":"markdown","9591fc20":"markdown","b496256f":"markdown","060cd816":"markdown","2b4b12b0":"markdown","028c25ab":"markdown","4a083449":"markdown","5e71253e":"markdown","4f81ced7":"markdown","b0639fe0":"markdown","3196ed2e":"markdown","e0d0501c":"markdown","5496a2f2":"markdown","5c877684":"markdown","1c526552":"markdown","1d1307f5":"markdown","b294d353":"markdown","1b17a08d":"markdown"},"source":{"179ac22b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","966c1aa9":"df = pd.read_csv('\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')\ndf","3b25f6f7":"df.info()","aa421715":"lc = []\nln = []\nfor i in df.columns:\n    if df[i].dtype == 'object':\n        lc.append(i)\n    else:\n        ln.append(i)\n        \nprint('The Categorical Values are',lc)\nprint('The no.of Categorical Values are',len(lc))\nprint('The Numerical Values are',ln)\nprint('The no.of Numerical Values are',len(ln))","84fa3038":"df.isnull().sum()","a398eb87":"print(df['gender'].value_counts())\nprint(df['ssc_b'].value_counts())\nprint(df['hsc_b'].value_counts())\nprint(df['hsc_s'].value_counts())\nprint(df['degree_t'].value_counts())\nprint(df['workex'].value_counts())\nprint(df['specialisation'].value_counts())\nprint(df['status'].value_counts())","2fa62f93":"import matplotlib.pyplot as plt\nimport seaborn as sns","343480d7":"sns.countplot(df['status'],hue=df['gender'])","de20dbe1":"sns.boxplot(df['ssc_b'],df['salary'])","23d2f26a":"for i in df.columns:\n    if df[i].dtype != 'object':\n        sns.boxplot(df[i])\n        plt.show()","a1d5eb50":"q3_hsc = df['hsc_p'].quantile(0.75)\nq1_hsc = df['hsc_p'].quantile(0.25)","12db2fef":"IQR_hsc = q3_hsc - q1_hsc","1a7b3d9f":"ul_hsc = q3_hsc+(1.5*IQR_hsc)\nll_hsc = q1_hsc-(1.5*IQR_hsc)","84f66a88":"df = df[(df['hsc_p']>ll_hsc)&(df['hsc_p']<ul_hsc)]","77eac411":"q3_deg = df['degree_p'].quantile(0.75)\nq1_deg = df['degree_p'].quantile(0.25)","fe34f704":"IQR_deg = q3_deg - q1_deg","9892e4de":"ul_deg = q3_deg+(1.5*IQR_deg)\nll_deg = q1_deg-(1.5*IQR_deg)","46b4c9f6":"df = df[(df['degree_p']>ll_deg)&(df['degree_p']<ul_deg)]","b33400df":"df.shape","142c7e6b":"df1 = df.drop(columns = ['salary','sl_no','gender'],axis=1)\ndf1.shape","2bc067d5":"df1.head()","8ffe5d0a":"from sklearn.preprocessing import LabelEncoder","2f347d6c":"le = LabelEncoder()","b9c9487b":"df1['ssc_b'] = le.fit_transform(df1['ssc_b'])\ndf1['hsc_b'] = le.fit_transform(df1['hsc_b'])\ndf1['hsc_s'] = le.fit_transform(df1['hsc_s'])\ndf1['degree_t'] = le.fit_transform(df1['degree_t'])\ndf1['workex'] = le.fit_transform(df1['workex'])\ndf1['specialisation'] = le.fit_transform(df1['specialisation'])\ndf1['status'] = le.fit_transform(df1['status'])","5e668079":"df1","7f70577b":"X = df1.drop(['status'],axis=1)\ny = df1['status']","2394f22c":"from sklearn.model_selection import train_test_split","4ef7c4e5":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.30)","b39f9a7a":"print(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","7c832bec":"from sklearn.linear_model import LogisticRegression","9688d24d":"lr = LogisticRegression(solver='lbfgs')","704a366f":"lr.fit(X_train,y_train)","3de329e5":"y_pred = lr.predict(X_test)","5cf279d7":"from sklearn.metrics import roc_auc_score, classification_report","0398a10f":"auc = roc_auc_score(y_test,y_pred)","afdfd01e":"print('Accuracy of Logistic Regression:',auc)","fa4e7629":"print('Classification Report:\\n',classification_report(y_test,y_pred))","98a56314":"from sklearn.ensemble import RandomForestClassifier","c0502b83":"rfc = RandomForestClassifier()","078d0c13":"rfc.fit(X_train,y_train)","7e66282e":"y_pred_rfc = rfc.predict(X_test)","ee7542b4":"auc_rfc = roc_auc_score(y_test,y_pred_rfc)","45f4bba8":"print('The Accuracy for Random Forest Classifier:',auc_rfc)","1b78a1c5":"print('Classification Report:\\n',classification_report(y_test,y_pred_rfc))","a5bdaee1":"print('The Accuracy score of Logistic Regression:',auc)\nprint('The Accuracy score of Random Forest Classifier:',auc_rfc)","a74249f8":"We can go with Logistic Regression and Deploy the model","2e92632f":"Outliers are removed in columns 'hsc_p' and 'degree_p'","9591fc20":"## Finding Null Values in the Dataset","b496256f":"## Finding Outliers","060cd816":"## Random Forest Classifier","2b4b12b0":"## Treating Outliers","028c25ab":"From the above box plot, we can see that candidates who studied ssc in 'Central' board are placed with high salaries","4a083449":"Train Test Split","5e71253e":"Dropped 'sl_no','gender','salary' rows from the dataset","4f81ced7":"There are 67 Null values present in 'salary' column","b0639fe0":"From the above scores, Logistic Regression is having Good score (0.8264864864864865) when compared to score of Random Forest Classifier (0.7664864864864865).","3196ed2e":"Outliers are present in 'hsc_p','degree_p'","e0d0501c":"## Logistic Regresssion****","5496a2f2":"From the countplot, we can see that male rate is higher in both placed list and Not placed list","5c877684":"# seperating the Dataset into X and y","1c526552":"## Dropping the unwanted rows and colummns in Dataset","1d1307f5":"## Loading the Dataset","b294d353":"## Checking the Info of Dataset","1b17a08d":"# Label Encoding"}}