{"cell_type":{"5adbb4a2":"code","f5e92566":"code","d22d7ae9":"code","e19272a6":"code","123c5b4d":"code","dbe7e9f3":"code","50f2e500":"code","905843c1":"code","3d9cb47c":"code","84b2adaf":"code","cf04a1b6":"code","5811eb69":"code","3b81821b":"code","fcffa248":"code","2fab2f74":"code","8538a474":"code","88edf9e8":"code","f8d8b6e9":"code","58a5a4e8":"code","48636e1c":"code","b0419d74":"code","9eeb1c7c":"code","e40ae310":"code","f7e927e2":"code","dcd89c93":"code","babeb650":"code","3cda8d46":"code","104a251b":"code","8f531d9c":"code","8e6977e9":"code","98aa8d94":"code","997d24bd":"code","1c4382ea":"code","a6e6e260":"code","9808f3af":"code","de5c8770":"code","ff5803f4":"code","89b2e871":"code","d55b148a":"code","8645a7bc":"code","788c87e1":"code","c5e79834":"code","03c558cc":"code","693186ef":"code","b52198ea":"markdown","d61c914c":"markdown","27eb7b70":"markdown","37eea15b":"markdown","8595928c":"markdown","7156434e":"markdown","954bcb9c":"markdown","6a2b3577":"markdown","4057799c":"markdown","88a9245b":"markdown","700af602":"markdown","408486fb":"markdown","eaec2c7d":"markdown","7718d37d":"markdown","6e035ed2":"markdown","1000819b":"markdown","ae17fc35":"markdown","752d98d7":"markdown","4fac8c57":"markdown"},"source":{"5adbb4a2":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # data visualization\nimport seaborn as sns\nsns.set()\nimport statsmodels.api as sm\nfrom sklearn.linear_model import LinearRegression","f5e92566":"dirty = pd.read_csv(\"..\/input\/housePractice.csv\")\ndirty.head()","d22d7ae9":"dirty.describe()","e19272a6":"dirty.columns.values","123c5b4d":"data = dirty.drop(['id', 'date','bedrooms', 'bathrooms', 'view', 'grade',\n       'sqft_above', 'sqft_basement', 'yr_renovated',\n       'zipcode', 'lat', 'long', 'sqft_living15', 'sqft_lot15','sqft_lot','waterfront'], axis=1)\ndata.head()","dbe7e9f3":"data.rename(columns={\"sqft_living\":\"size\", \"floors\":\"floor\",\"yr_built\":\"year\"}, inplace=True)\ndata.head()","50f2e500":"data.isnull().sum()","905843c1":"sns.distplot(data[\"price\"])","3d9cb47c":"q = data[\"price\"].quantile(0.99)\ndata_1 = data[data[\"price\"]<q]","84b2adaf":"sns.distplot(data_1[\"price\"])","cf04a1b6":"sns.distplot(data_1[\"year\"])","5811eb69":"sns.distplot(data_1[\"floor\"])","3b81821b":"sns.distplot(data_1[\"condition\"])","fcffa248":"data_cleaned = data_1.reset_index(drop=True)\ndata_cleaned","2fab2f74":"f, (ax1,ax2,ax3,ax4) = plt.subplots(1,4, sharey=True, figsize=(16,4))\nax1.scatter(data_cleaned[\"size\"],data_cleaned[\"price\"])\nax1.set_title(\"Size and Price\")\nax2.scatter(data_cleaned[\"floor\"], data_cleaned[\"price\"])\nax2.set_title(\"Floor and Price\")\nax3.scatter(data_cleaned[\"condition\"], data_cleaned[\"price\"])\nax3.set_title(\"Condition and Price\")\nax4.scatter(data_cleaned[\"year\"], data_cleaned[\"price\"])\nax4.set_title(\"Year and Price\")\n\nplt.show()","8538a474":"log_price = np.log(data_cleaned[\"price\"])\ndata_cleaned[\"log_price\"] = log_price\ndata_cleaned","88edf9e8":"f, (ax1,ax2,ax3,ax4) = plt.subplots(1,4, sharey=True, figsize=(16,4))\nax1.scatter(data_cleaned[\"size\"],data_cleaned[\"log_price\"])\nax1.set_title(\"Size and Log Price\")\nax2.scatter(data_cleaned[\"floor\"], data_cleaned[\"log_price\"])\nax2.set_title(\"Floor and Log Price\")\nax3.scatter(data_cleaned[\"condition\"], data_cleaned[\"log_price\"])\nax3.set_title(\"Condition and Log Price\")\nax4.scatter(data_cleaned[\"year\"], data_cleaned[\"log_price\"])\nax4.set_title(\"Year and Log Price\")\n\nplt.show()","f8d8b6e9":"data_cleaned.drop(\"price\",axis=1, inplace=True)\ndata_cleaned.head()","58a5a4e8":"data_cleaned.columns.values","48636e1c":"from statsmodels.stats.outliers_influence import variance_inflation_factor\nvariables = data_cleaned[['size', 'floor', 'condition', 'year']]\nvif = pd.DataFrame()\nvif[\"VIF\"] = [variance_inflation_factor(variables.values,i) for i in range(variables.shape[1])]\nvif[\"Features\"] = variables.columns","b0419d74":"vif","9eeb1c7c":"data_no_mc = data_cleaned.drop(\"year\",axis=1)","e40ae310":"data_no_mc.columns.values","f7e927e2":"cols = ['log_price','size', 'floor', 'condition']","dcd89c93":"data_preprocessed = data_no_mc[cols]\ndata_preprocessed","babeb650":"target = data_preprocessed[\"log_price\"]\ninputs = data_preprocessed.drop(\"log_price\",axis=1)","3cda8d46":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(inputs)","104a251b":"inputs_scaled = scaler.transform(inputs)","8f531d9c":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(inputs_scaled, target, test_size=0.2, random_state=31)","8e6977e9":"reg = LinearRegression()\nreg.fit(x_train,y_train)","98aa8d94":"y_hat = reg.predict(x_train)","997d24bd":"plt.scatter(y_train, y_hat)\nplt.xlabel(\"Targets (y_train)\", size=18)\nplt.ylabel(\"Predictions (y_hat)\", size=18)\nplt.xlim(11,15.5)\nplt.ylim(11,15.5)\nplt.show()","1c4382ea":"sns.distplot(y_train - y_hat)\nplt.title(\"Residuals PDF\",size=18)","a6e6e260":"reg.score(x_train, y_train)","9808f3af":"reg.intercept_","de5c8770":"reg.coef_","ff5803f4":"reg_summary = pd.DataFrame(inputs.columns.values,columns=[\"Features\"])\nreg_summary[\"Weights\"] = reg.coef_\nreg_summary","89b2e871":"y_hat_test = reg.predict(x_test)","d55b148a":"plt.scatter(y_test, y_hat_test, alpha=0.2)\nplt.xlabel(\"Targets (y_test)\",size=18)\nplt.ylabel(\"Predictions (y_hat_test)\",size=18)\nplt.xlim(11,15.5)\nplt.ylim(11,15.5)\nplt.show()","8645a7bc":"df_pf = pd.DataFrame(np.exp(y_hat_test), columns=[\"Predictions\"])\ndf_pf.head()","788c87e1":"y_test = y_test.reset_index(drop=True)","c5e79834":"df_pf[\"Prices\"] = np.exp(y_test)\ndf_pf.head()","03c558cc":"df_pf[\"Residual\"] = df_pf[\"Prices\"] - df_pf[\"Predictions\"]\ndf_pf[\"Difference%\"] = np.absolute(df_pf[\"Residual\"]\/df_pf[\"Prices\"]*100)\ndf_pf","693186ef":"pd.options.display.max_rows = 4500\npd.set_option(\"display.float_format\", lambda x: \"%.2f\" % x)\ndf_pf.sort_values(by=[\"Difference%\"])","b52198ea":"## Checking Missing Values","d61c914c":"## Train Test Split","27eb7b70":"## Multicollinearity","37eea15b":"## Relaxing the assumptions","8595928c":"# Testing","7156434e":"## Exploring the PDFs","954bcb9c":"## Rearrange","6a2b3577":"## Declare Variables","4057799c":"## Prepare Columns' Names","88a9245b":"## Checking the OLS assumptions","700af602":"## Scale the Data","408486fb":"## Relevant Libraries","eaec2c7d":"## Drop Useless Columns","7718d37d":"## Data","6e035ed2":"## Finding the Weights and Bias","1000819b":"# Linear Regression Model","ae17fc35":"## Dealing with Outliers","752d98d7":"## Create the Regression","4fac8c57":"# Predictions for House Prices"}}