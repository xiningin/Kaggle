{"cell_type":{"7985567e":"code","b1ea1c46":"code","85547c7f":"code","a1fe079e":"code","91dc277a":"code","9eea4c13":"code","11473aa8":"code","2d8eb56d":"code","729bb602":"code","1833c914":"code","942f9a11":"code","81adc6fa":"code","384cbdf4":"markdown","0d8a3f97":"markdown","60f1f862":"markdown","cfe6f07e":"markdown","300d7090":"markdown"},"source":{"7985567e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b1ea1c46":"import zipfile\n\nzf= zipfile.ZipFile(\"..\/input\/dogs-vs-cats\/train.zip\")","85547c7f":"zf.filelist","a1fe079e":"zf.extractall()","91dc277a":"img=zf.extract(\"train\/dog.66.jpg\")","9eea4c13":"y=plt.imread(img)\nplt.imshow(y)","11473aa8":"from keras.preprocessing.image import load_img, img_to_array,array_to_img,ImageDataGenerator","2d8eb56d":"img=load_img(\"train\/dog.66.jpg\")\nx=img_to_array(img)\nprint(x.shape)","729bb602":"x=x.reshape((1,)+x.shape)\nprint(x.shape)","1833c914":"datagen=ImageDataGenerator(zoom_range=0.2,shear_range=0.2,horizontal_flip=True,rotation_range=40,\n                           width_shift_range=0.2,height_shift_range=0.2,\n                          fill_mode='nearest')","942f9a11":"\ni = 0\nfor batch in datagen.flow(x, batch_size=1):\n    i += 1\n    if i > 20:\n        break","81adc6fa":"i = 0\nfor batch in datagen.flow(x, batch_size=1,\n                          save_to_dir='preview', save_prefix='cat', save_format='jpeg'):\n    i += 1\n    if i > 20:\n        break","384cbdf4":"# The .flow() command below generates batches of randomly transformed images\n","0d8a3f97":"# Create a folder to save the data augumented images","60f1f862":"# Extracting the zip file","cfe6f07e":"# Plotting the image","300d7090":"# Data Augumentation"}}