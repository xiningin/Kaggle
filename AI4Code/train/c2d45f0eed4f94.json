{"cell_type":{"5212fc29":"code","2acd8c5b":"code","991088f2":"code","4ffe99f1":"code","069aa9b5":"code","a69466fc":"code","5a180c27":"code","3a9adc9a":"code","0d9f3048":"code","dd645471":"code","a218ecfe":"code","99c4f7bf":"code","787c3a54":"code","2f2bce33":"code","d9254504":"code","a61676d6":"code","72e9aefe":"code","a056afc8":"code","f4945217":"code","9ac79ea8":"code","5ad156a4":"markdown"},"source":{"5212fc29":"import pandas as pd\nnetflix=pd.read_csv('..\/input\/tesla-share\/TSLA (1).csv')\nnetflix.head()","2acd8c5b":"netflix=netflix[['Date','Close']]\nnetflix.head()","991088f2":"netflix.info()","4ffe99f1":"!pip install pycaret-ts-alpha","069aa9b5":"from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\nfrom sktime.utils.plotting import plot_series","a69466fc":"netflix.index = pd.DatetimeIndex(netflix[\"Date\"])\nnetflix.drop([\"Date\"],axis=1,inplace=True)\nnetflix.head()","5a180c27":"netflix = netflix.asfreq('d')\nnetflix.index","3a9adc9a":"netflix.head()","0d9f3048":"netflix=netflix.fillna(method='ffill')\nnetflix.head()","dd645471":"data=netflix.Close\ndata","a218ecfe":"import matplotlib.pyplot as plt\n_ =plot_series(data)\nplt.xticks(rotation=90)\nplt.grid()","99c4f7bf":"exp = TimeSeriesExperiment()\nexp.setup(data=data,session_id=42,fh=365)","787c3a54":"## Create a model manually\nmodel = exp.create_model(\"knn_cds_dt\")\nmodel","2f2bce33":"y_train = exp.get_config(\"y_train\")\ny_train[:5]","d9254504":"y_predict = exp.predict_model(model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","a61676d6":"tuned_model = exp.tune_model(model,optimize = 'RMSE')\ntuned_model","72e9aefe":"exp.predict_model(tuned_model)","a056afc8":"y_predict = exp.predict_model(tuned_model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","f4945217":"# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n_=plot_series(data, y_pred_future, labels=['All', 'Future Pred (Unknown)'])\nplt.grid()","9ac79ea8":"# Test Set Predictions\ny_pred = exp.predict_model(tuned_model)\n\n# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n\n# Plot Results\ny_train = exp.get_config(\"y_train\")\n_ = plot_series(data, y_train, y_pred, y_pred_future, labels=['All', 'Train', 'Test Predictions', 'Future Pred (Unknown)'])\nplt.grid()","5ad156a4":"# "}}