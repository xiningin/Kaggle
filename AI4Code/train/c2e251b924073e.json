{"cell_type":{"0f0656e6":"code","6b42b6f7":"code","6a0944f7":"code","18504e8a":"code","8e0d7af5":"code","e0be0e97":"code","cef310f9":"code","753d397e":"code","44d8015e":"code","56f807c0":"code","ed7863b8":"code","296c316d":"code","189964f6":"code","3bb06f1d":"code","7a748e45":"code","fe70c19f":"code","e460bebb":"code","0c9fe7a8":"code","5cdefb8e":"code","98a78bda":"code","7885391f":"code","669ae805":"code","6800ee68":"code","40ee02f3":"code","c988e73f":"code","f71f3169":"code","a2263653":"code","c26916d8":"code","bca146dd":"code","20041043":"code","bc2465e9":"code","3737f567":"code","05e28cee":"code","b752356f":"code","db9d8d13":"code","9a493cdb":"code","a6edf756":"code","b9570581":"code","5fe2b873":"code","2615345e":"code","0d061c8e":"code","dd533c15":"code","4de8be18":"code","783cf79a":"code","aecdf932":"code","6262a5f3":"code","7cad4ef9":"code","681f4306":"markdown","fac5c97d":"markdown","75917b64":"markdown","c055c876":"markdown","58ece4f9":"markdown","27cfc584":"markdown","77c21cb4":"markdown","71df50b3":"markdown","b542dbb2":"markdown"},"source":{"0f0656e6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\n# import os\n# print(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\n# ------------------------------------------------------------------------------\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport sklearn.linear_model as lnmd\nimport sklearn as skl","6b42b6f7":"df  = pd.read_csv('..\/input\/train.csv', sep=',')\n# df  = pd.read_csv('train.csv', sep=',')\n","6a0944f7":"print(df)","18504e8a":"df.head(5)","8e0d7af5":"df.columns","e0be0e97":"df.dtypes","cef310f9":"df.describe()","753d397e":"df.Sex.head(5)","44d8015e":"ordered_sex = ['female', 'male']\n\n# df.Sex = df.Sex.astype(\"category\",\n#      ordered=True,\n#      categories=ordered_sex).cat.codes\n\ndf.Sex = df.Sex.astype(pd.api.types.CategoricalDtype(categories = ordered_sex, ordered = True)).cat.codes","56f807c0":"df.Sex.head(5)","ed7863b8":"del df['Name'], df['Embarked'], df['Ticket'], df['Cabin']","296c316d":"df.dtypes","189964f6":"df.describe()","3bb06f1d":"dfc = df.iloc[:,1:]\ndfc_res = dfc.corr()\nprint(dfc_res)","7a748e45":"plt.imshow(dfc_res, cmap=plt.cm.Blues, interpolation='nearest')\nplt.colorbar()\ntick_marks = [i for i in range(len(dfc_res.columns))]\nplt.xticks(tick_marks, dfc_res.columns, rotation='vertical')\nplt.yticks(tick_marks, dfc_res.columns)\nplt.show()","fe70c19f":"pd.plotting.andrews_curves(dfc,\"Survived\")","e460bebb":"pd.plotting.parallel_coordinates(dfc,\"Survived\")","0c9fe7a8":"x_train = df.iloc[:,2:]\nx_train.head(3)","5cdefb8e":"x_train.isnull().values.any()","98a78bda":"x_train.plot.hist(alpha=0.75)","7885391f":"#print(x_train[\"Pclass\"].unique())\n#print(x_train[\"Sex\"].unique())\nprint(x_train[\"Age\"].unique())\n#print(x_train[\"SibSp\"].unique())\n#print(x_train[\"Parch\"].unique())\n#print(x_train[\"Fare\"].unique())","669ae805":"x_train[\"Age\"] = x_train[\"Age\"].fillna(x_train[\"Age\"].mean())","6800ee68":"x_train.describe()","40ee02f3":"min_max_scaler = skl.preprocessing.MinMaxScaler()\nx_train_sc = min_max_scaler.fit_transform(x_train)\nx_train = pd.DataFrame(data = x_train_sc[0:,0:],    # values\n             # index = x_train_sc[0:,0], # 1st column as index\n             columns = x_train.columns) # 1st row as the column names","c988e73f":"x_train.values.shape","f71f3169":"x_train[\"Age\"].plot.hist(alpha=0.5)","a2263653":"x_train[\"Pclass\"].plot.hist(alpha=0.5)\nx_train[\"Sex\"].plot.hist(alpha=0.5)","c26916d8":"x_train[\"SibSp\"].plot.hist(alpha=0.5)","bca146dd":"x_train[\"Parch\"].plot.hist(alpha=0.5)","20041043":"x_train[\"Fare\"].plot.hist(alpha=0.5)","bc2465e9":"y_train = df.iloc[:,[1]]\ny_train.head(3)","3737f567":"y_train.isnull().values.any()","05e28cee":"y_train[\"Survived\"].unique() ","b752356f":"y_train.plot.hist(alpha=0.75)","db9d8d13":"df  = pd.read_csv('..\/input\/test.csv', sep=',')\n# df  = pd.read_csv('test.csv', sep=',')","9a493cdb":"del df['Name'], df['Embarked'], df['Ticket'], df['Cabin']","a6edf756":"df.head(5)","b9570581":"ordered_sex = ['female', 'male']\ndf.Sex = df.Sex.astype(pd.api.types.CategoricalDtype(categories = ordered_sex, ordered = True)).cat.codes","5fe2b873":"df.isnull().values.any()","2615345e":"#print(df[\"Pclass\"].unique())\n#print(df[\"Sex\"].unique())\n#print(df[\"Age\"].unique())\n#print(df[\"SibSp\"].unique())\n#print(df[\"Parch\"].unique())\nprint(df[\"Fare\"].unique())","0d061c8e":"df[\"Age\"] = df[\"Age\"].fillna(df[\"Age\"].mean())\ndf[\"Fare\"] = df[\"Fare\"].fillna(df[\"Fare\"].mean())\ndf.head(5)","dd533c15":"x_test = df.iloc[:,1:]\nx_test.head(5)","4de8be18":"min_max_scaler = skl.preprocessing.MinMaxScaler()\nx_test_sc = min_max_scaler.fit_transform(x_test)\nx_test = pd.DataFrame(data = x_test_sc[0:,0:],    # values\n             #index = x_train_sc[0:,0],    # 1st column as index\n             columns = x_test.columns) # 1st row as the column names","783cf79a":"x_test.head(5)","aecdf932":"model = lnmd.LogisticRegression(solver='lbfgs')\nmodel.fit(x_train.values, y_train.values.ravel())\nscore = model.score (x_train, y_train)\nprint(score)","6262a5f3":"y_pred = model.predict(x_test)\nprint(y_pred)\ntype(y_pred)","7cad4ef9":"y = pd.DataFrame(data = y_pred[0:],    # values\n             # index = x_train_sc[0:,0],    # 1st column as index\n             columns = [\"Survived\"]) # 1st row as the column names\n\n# y.head(5)\noutput  = pd.DataFrame.join(df[[\"PassengerId\"]], y[[\"Survived\"]])\noutput.head(5)\noutput.to_csv(\"output.csv\",index=False)","681f4306":"## Data Modeling","fac5c97d":"### Train Data preparation","75917b64":"## RESULT OUTPUT","c055c876":"## Data Wrangling, Data Transormation and Exploratory Data Analysis","58ece4f9":"### Test Data preparation","27cfc584":"Titanic: Machine Learning from Disaster\n=====================================================","77c21cb4":"### Logistic Regression, 1st attempt","71df50b3":"VariableDefinitionKey\n* survival Survival 0 = No, 1 = Yes \n* pclass Ticket class 1 = 1st, 2 = 2nd, 3 = 3rd \n* sex Sex \n* Age Age in years \n* sibsp # of siblings \/ spouses aboard the Titanic \n* parch # of parents \/ children aboard the Titanic \n* ticket Ticket number \n* fare Passenger fare \n* cabin Cabin number \n* embarked Port of Embarkation C = Cherbourg, Q = Queenstown, S = Southampton","b542dbb2":"## Data Import"}}