{"cell_type":{"94a1b3fa":"code","6a8432d9":"code","fbe90df1":"code","aa5c2b79":"code","1bf77f7a":"code","e3695a76":"markdown","eeeedbfe":"markdown","a871db78":"markdown","bab7fed3":"markdown"},"source":{"94a1b3fa":"import numpy as np","6a8432d9":"mu, sigma = 0, 0.1 # mean and standard deviation\ndata = np.random.normal(mu, sigma, 50)\n\nprint(\"Input shape: \", data.shape)\nprint(\"\\nInput Data: \", data)","fbe90df1":"print('0th percentile i.e least most val in data is: ', np.percentile(data,0))\nprint('90th percentile i.e 90% of data lie below: ', np.percentile(data,90), \"(and above 0th percentile)\")","aa5c2b79":"print(np.percentile(data, np.arange(0, 100, 25)))","1bf77f7a":"\nfrom statsmodels import robust\nprint(\"MAD: \", robust.mad(data))","e3695a76":"# MAD","eeeedbfe":"$$ Median \\left( | Median - x_{i} | \\right) $$\n\n- Unlike std. dev robust to outliers","a871db78":"# Quartiles\n\n[0th, 25th, 50th, 75th] percentiles","bab7fed3":"# 01. Percentiles\n\n\n**nth percentile:** The value **below** which `n%` of data lie\n\n> *It is the highest value of `n`% of known data*\n\n- **NOTE:**\n    - Just like **CDF** - \"Less Than\" - But more numerical than visual\n    \n    \n- **USES**\n    - Get exact **AT MOST** number. \n    - Generalize by saying - 90% of data shows maximum this characterstic and never exceeds it"}}