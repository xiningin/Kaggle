{"cell_type":{"3bbc43ac":"code","bbe93c7d":"code","553f23f2":"code","c473d3cf":"code","9eefe9d6":"code","0adb4275":"code","9eacbc6c":"code","7a41ab34":"code","a93a3eaa":"code","37941bad":"code","32526a34":"code","6d6e557b":"code","7657dc14":"code","6c2ba760":"code","468bab73":"code","322226e5":"code","b579aedb":"code","b84e0e9f":"code","a250541a":"code","757d6e2e":"code","643e6040":"code","3ddffa9f":"code","adab059c":"code","d68e6219":"code","ac594414":"code","a429d57e":"code","b5feda9f":"code","95ad4cd0":"code","9a8b902b":"code","88655df8":"code","b445b482":"code","0a4ca036":"code","9e05270d":"code","0a1c1f60":"code","7a5cee62":"code","7ca2041c":"code","3bb09f44":"code","0f28d5b7":"code","01e2c718":"code","44eb70eb":"code","27f514c7":"code","21ef43ca":"code","0a4b713a":"code","793fb7df":"code","8bd572dd":"code","21db9fed":"code","03dd2f40":"code","113b4423":"code","ec417928":"code","4f655ff9":"code","e7d81dfa":"code","f4ac295c":"code","98afbde5":"code","8e0eebb4":"markdown","15b9a280":"markdown","fe88cdc4":"markdown","b7db2b55":"markdown","b4b78d46":"markdown","31963560":"markdown","cfcbb17d":"markdown","9fb20880":"markdown","831bc091":"markdown","bb39f972":"markdown","483f538a":"markdown","ad0c5592":"markdown","7b4374b7":"markdown","758a2442":"markdown","10d51f60":"markdown","3d40eeea":"markdown","878cb480":"markdown","334b8bcc":"markdown"},"source":{"3bbc43ac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport seaborn as sns\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bbe93c7d":"import numpy as np\nimport pandas as pd","553f23f2":"df_train = pd.read_csv(\"..\/input\/lish-moa\/train_features.csv\")\ndf_test = pd.read_csv(\"..\/input\/lish-moa\/test_features.csv\")\ndf_train_targets_nonscored = pd.read_csv(\"..\/input\/lish-moa\/train_targets_nonscored.csv\")\ndf_train_targets_scored = pd.read_csv(\"..\/input\/lish-moa\/train_targets_scored.csv\")\ndf_sample_submission = pd.read_csv(\"..\/input\/lish-moa\/sample_submission.csv\")","c473d3cf":"pd.set_option('display.max_columns',500)","9eefe9d6":"df_train.head()","0adb4275":"df_train.isnull().sum().nlargest()","9eacbc6c":"df_train.info()","7a41ab34":"df_train.select_dtypes(include=['object']).dtypes","a93a3eaa":"df_train.drop('sig_id',axis=1,inplace=True)","37941bad":"df_train['cp_dose'].value_counts()\/len(df_train)","32526a34":"df_train['dataset'] = 'train'\ndf_test['dataset'] = 'test'\n\ndf = pd.concat([df_train, df_test])","6d6e557b":"sns.countplot(x = 'cp_dose',hue='dataset',data=df)","7657dc14":"df_train['cp_type'].value_counts()\/len(df_train)","6c2ba760":"sns.countplot(x = 'cp_type',hue='dataset',data=df)","468bab73":"sns.countplot(x = 'cp_time',hue='dataset',data=df)","322226e5":"gs = df_train[:1][[col for col in df_train.columns if 'g-' in col]].values.reshape(-1,1)","b579aedb":"import matplotlib.pyplot as plt\nplt.plot(gs)","b84e0e9f":"\nplt.plot(sorted(gs))","a250541a":"df_train['g-0'].plot(kind='hist')","757d6e2e":"df_train['c-0'].plot(kind='hist')","643e6040":"correlated_variables = []\nfeature_columns = list(df_train.select_dtypes(exclude=['object']).columns)\nfor i in range(0,len(feature_columns)):\n    for j in range(i+1,len(feature_columns)):\n        #print(col1,col2)\n        if abs(df_train[feature_columns[i]].corr(df_train[feature_columns[j]])) > 0.9:\n            correlated_variables.append(feature_columns[i])\n            correlated_variables.append(feature_columns[j])","3ddffa9f":"correlated_variables = set(correlated_variables)","adab059c":"plt.figure(figsize=(20,10))\nsns.heatmap(df[correlated_variables].corr())","d68e6219":"df_train._get_numeric_data().describe()","ac594414":"\nsns.boxplot(df_train['cp_type'],df_train['g-30'])","a429d57e":"df_train_targets_scored.head()","b5feda9f":"df_train_targets_scored.columns","95ad4cd0":"df_train_targets_scored.isnull().sum().nlargest()","9a8b902b":"df_train_targets_scored.drop('sig_id',axis=1,inplace=True)","88655df8":"len(df_train_targets_scored.columns)","b445b482":"df_train_targets_scored.sum(axis=1).nlargest()","0a4ca036":"plt.figure(figsize=(15,15))\ndata = df_train_targets_scored.sum()\ndata_largest = data.nlargest(50)\nsns.barplot(data_largest.values,data_largest.index,orient='h')","9e05270d":"data_smallest=data.nsmallest(50)\nplt.figure(figsize=(15,15))\nsns.barplot(data_smallest.values,data_smallest.index,orient='h')","0a1c1f60":"len(df_train_targets_scored.columns)","7a5cee62":"x = df_train_targets_scored.sum().sort_values(ascending=False).reset_index()\n\nx.columns = ['column', 'count']\nx['count'] = x['count'] * 100 \/ len(df_train_targets_scored)","7ca2041c":"plt.figure(figsize=(10,30))\nsns.barplot(x['count'],x['column'],orient='h')","3bb09f44":"y = df_train_targets_scored.sum(axis=1).reset_index()\ny.columns = ['records','total_labels']","0f28d5b7":"y.head()","01e2c718":"sns.countplot(y['total_labels'])","44eb70eb":"y['total_labels'].value_counts()","27f514c7":"target_columns = list(df_train_targets_scored.columns)","21ef43ca":"feature_target_corr_df = pd.DataFrame()\nfor target_col in target_columns:\n    corr_list = []\n    for feature_col in feature_columns:\n        corr = df_train[feature_col].corr(df_train_targets_scored[target_col])\n        corr_list.append(corr)\n    feature_target_corr_df[target_col] = corr_list\n    ","0a4b713a":"feature_target_corr_df['train_features'] = feature_columns\nfeature_target_corr_df = feature_target_corr_df.set_index('train_features')\nfeature_target_corr_df.head()","793fb7df":"maxCol = lambda x : max(x.max(),x.min(),key=abs)\nhigh_scores=feature_target_corr_df.apply(maxCol, axis=0).reset_index()\nhigh_scores.columns = ['column','best_correlation']\n#x\n\nplt.figure(figsize=(30,10))\n\ng = sns.barplot(high_scores['column'],high_scores['best_correlation'])\ng.set_xticklabels(g.get_xticklabels(),rotation=90)\nplt.show()\n# x['max_value']","8bd572dd":"col_df = pd.DataFrame()\ntr_cols = list()\ntar_cols = list()\nfor col in feature_target_corr_df.columns:\n    tar_cols.append(col)\n    tr_cols.append(feature_target_corr_df[col].abs().sort_values(ascending=False).reset_index()['train_features'].head(1).values[0])\n\ncol_df['column'] = tar_cols\ncol_df['train_best_column'] = tr_cols\n\ntotal_scores = pd.merge(high_scores, col_df)\ntotal_scores","21db9fed":"training_col_high_corr = total_scores['train_best_column'].value_counts().reset_index()\ntraining_col_high_corr.columns = ['train_columns','count']\n\nplt.figure(figsize=(10,10))\nsns.barplot(training_col_high_corr['count'].head(33),training_col_high_corr['train_columns'].head(33),orient='h')","03dd2f40":"last_term_target_column = dict()\nfor col in target_columns:\n    try:\n        last_term_target_column[col.split(\"_\")[-1]] += 1\n    except:\n        last_term_target_column[col.split(\"_\")[-1]] = 1","113b4423":"target_column_group_df = pd.DataFrame(last_term_target_column.items(),columns = ['group','count'])","ec417928":"target_column_group_df.sort_values('count',ascending=False)\ntarget_column_group_df = target_column_group_df[target_column_group_df['count']>1]","4f655ff9":"target_column_group_df.head()\nsns.barplot(target_column_group_df['group'],target_column_group_df['count'])","e7d81dfa":"answer = list()\nfor group in target_column_group_df.group.tolist():\n    agent_list = list()\n    for item in target_columns:\n        if item.split('_')[-1] == group:\n            agent_list.append(item)\n    print(agent_list)\n#     agent_df = train_target[agent_list]\n#     data = agent_df.astype(bool).sum(axis=1).reset_index()\n#     answer.append(data[0].max())","f4ac295c":"agent_df = df_train_targets_scored[['5-alpha_reductase_inhibitor', '11-beta-hsd1_inhibitor', 'acat_inhibitor', 'acetylcholinesterase_inhibitor', 'akt_inhibitor', 'aldehyde_dehydrogenase_inhibitor', 'alk_inhibitor', 'angiogenesis_inhibitor', 'aromatase_inhibitor', 'atm_kinase_inhibitor', 'atp_synthase_inhibitor', 'atpase_inhibitor', 'atr_kinase_inhibitor', 'aurora_kinase_inhibitor', 'autotaxin_inhibitor', 'bacterial_30s_ribosomal_subunit_inhibitor', 'bacterial_50s_ribosomal_subunit_inhibitor', 'bacterial_cell_wall_synthesis_inhibitor', 'bacterial_dna_gyrase_inhibitor', 'bacterial_dna_inhibitor', 'bacterial_membrane_integrity_inhibitor', 'bcl_inhibitor', 'bcr-abl_inhibitor', 'beta_amyloid_inhibitor', 'bromodomain_inhibitor', 'btk_inhibitor', 'calcineurin_inhibitor', 'carbonic_anhydrase_inhibitor', 'casein_kinase_inhibitor', 'catechol_o_methyltransferase_inhibitor', 'cdk_inhibitor', 'chk_inhibitor', 'cholesterol_inhibitor', 'coagulation_factor_inhibitor', 'cyclooxygenase_inhibitor', 'cytochrome_p450_inhibitor', 'dihydrofolate_reductase_inhibitor', 'dipeptidyl_peptidase_inhibitor', 'dna_inhibitor', 'egfr_inhibitor', 'elastase_inhibitor', 'erbb2_inhibitor', 'faah_inhibitor', 'farnesyltransferase_inhibitor', 'fgfr_inhibitor', 'flt3_inhibitor', 'focal_adhesion_kinase_inhibitor', 'fungal_squalene_epoxidase_inhibitor', 'gamma_secretase_inhibitor', 'glutamate_inhibitor', 'gsk_inhibitor', 'hcv_inhibitor', 'hdac_inhibitor', 'histone_lysine_demethylase_inhibitor', 'histone_lysine_methyltransferase_inhibitor', 'hiv_inhibitor', 'hmgcr_inhibitor', 'hsp_inhibitor', 'igf-1_inhibitor', 'ikk_inhibitor', 'integrin_inhibitor', 'jak_inhibitor', 'kit_inhibitor', 'leukotriene_inhibitor', 'lipase_inhibitor', 'lipoxygenase_inhibitor', 'mdm_inhibitor', 'mek_inhibitor', 'membrane_integrity_inhibitor', 'monoacylglycerol_lipase_inhibitor', 'monoamine_oxidase_inhibitor', 'monopolar_spindle_1_kinase_inhibitor', 'mtor_inhibitor', 'nfkb_inhibitor', 'nitric_oxide_production_inhibitor', 'nitric_oxide_synthase_inhibitor', 'norepinephrine_reuptake_inhibitor', 'p38_mapk_inhibitor', 'p-glycoprotein_inhibitor', 'parp_inhibitor', 'pdgfr_inhibitor', 'pdk_inhibitor', 'phosphodiesterase_inhibitor', 'phospholipase_inhibitor', 'pi3k_inhibitor', 'pkc_inhibitor', 'prostaglandin_inhibitor', 'proteasome_inhibitor', 'protein_kinase_inhibitor', 'protein_phosphatase_inhibitor', 'protein_synthesis_inhibitor', 'protein_tyrosine_kinase_inhibitor', 'raf_inhibitor', 'ras_gtpase_inhibitor', 'rho_associated_kinase_inhibitor', 'ribonucleoside_reductase_inhibitor', 'rna_polymerase_inhibitor', 'serotonin_reuptake_inhibitor', 'sodium_channel_inhibitor', 'src_inhibitor', 'syk_inhibitor', 'tgf-beta_receptor_inhibitor', 'thrombin_inhibitor', 'thymidylate_synthase_inhibitor', 'tnf_inhibitor', 'topoisomerase_inhibitor', 'tropomyosin_receptor_kinase_inhibitor', 'tubulin_inhibitor', 'tyrosine_kinase_inhibitor', 'ubiquitin_specific_protease_inhibitor', 'vegfr_inhibitor', 'wnt_inhibitor']]","98afbde5":"agent_df.astype(bool).sum(axis=1).reset_index()[0].max()","8e0eebb4":"# Analysis on target columns","15b9a280":"### Grouping traget column based on the suffix value\n- There are more than 100 columns which has inhibtor as the suffix.","fe88cdc4":"### It means there are somne record for which they have different activaation group","b7db2b55":"### Observations\n- We can see that there are 6 records which belong to 7 labels\n- Most number of records (i.e. 12532) belongs to only 1 label","b4b78d46":"## Categorical Data Analysis","31963560":"<center><h1> Train and target corelations <\/h1> <\/center>","cfcbb17d":"### Labels distribution of data","9fb20880":"## Checking data types","831bc091":"## Univariate analysis on numerical columns","bb39f972":"## Checking missing values","483f538a":"### Columns with the lowest number of positive samples (top 50)","ad0c5592":"### Columns with the highest number of positive samples (top 50)","7b4374b7":"### Percentage of data represented by each target","758a2442":"### Analysis\n- out of 206 target column some target column doesn't have true value for any record\n- One of the target column is present in 3.5% of records  ","10d51f60":"### Top column of training data which was maximum number of high correlation\n- g-322 is highly correlated with 6 target column","3d40eeea":"## Numerical or gene and cell features distribution","878cb480":"### Highest correlation with any train column to different target column ","334b8bcc":"### Correlation"}}