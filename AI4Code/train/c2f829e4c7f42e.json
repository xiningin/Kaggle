{"cell_type":{"48a039e7":"code","299efc4c":"code","692cf2f8":"code","362687a1":"code","54cb0a7c":"code","8544f646":"code","3c83942c":"code","95bab327":"code","9fa5ce8a":"code","24c0a95d":"markdown","4f6780b8":"markdown","b2de1444":"markdown","8a63c663":"markdown","f2022c8c":"markdown","04f84b05":"markdown","f8f8031f":"markdown","5327307b":"markdown","f59daa10":"markdown","e028dbf9":"markdown"},"source":{"48a039e7":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder  \nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cross_validation import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import accuracy_score","299efc4c":"# Importing the dataset\nwine = pd.read_csv('..\/input\/winequality-red.csv')\n","692cf2f8":"wine.head(10)","362687a1":"for i in range(len(wine)):\n    if wine.iloc[i,11]>=7:\n        wine.iloc[i,11]='good'\n    else:\n        wine.iloc[i,11]='bad'","54cb0a7c":"wine.head(10)","8544f646":"labelencdoer=LabelEncoder()\nwine['quality']=labelencdoer.fit_transform(wine['quality'])\nwine.head(10)","3c83942c":"X = wine.iloc[:, :-1].values\ny = wine.iloc[:, 11].values\n\n#scaling the Xvalue\nsc=StandardScaler()\nX=sc.fit_transform(X[:,:])\n\n#Splitting into train and test set\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)\n","95bab327":"#n_estimators represents nos of trees to be used in the model\nrfr=RandomForestRegressor(n_estimators=40,random_state=0)\nrfr.fit(X_train,y_train)\n\n#Final Prediction\ny_pred=np.matrix.round(rfr.predict(X_test))\n","9fa5ce8a":"acc=accuracy_score(y_test, y_pred)\nprint(\"accuracy: \",acc*100,'%' )","24c0a95d":"**Importing Necessary Packages**","4f6780b8":"**Now let's label encode them as 1 for good and 0 for bad.**","b2de1444":"**As given in the problem statement, quality above or equal to the rating of 7 is said to be Good Wine.\nSo, Let's make a classification between the good and the bad wine.**","8a63c663":"**Thank You\nPlease upvote if you find this code useful!**","f2022c8c":"**Importing the dataset**","04f84b05":"***Welcome !!***\n\n1. The Probelm Is solved using Radom Forest Regression with 93.43% accuracy.\n2. The code is pretty intutive and easy to follow.\n\n","f8f8031f":"**Viewing the data set**","5327307b":"**Calculate the Accuracy Score !**","f59daa10":"**Split the dataset into dependent and independent variables . Scale the X value and split it into test and training set.**","e028dbf9":"**Fit the Training set into the RandomForestRegressor module. Predict the final value using test set.**"}}