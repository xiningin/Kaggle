{"cell_type":{"bfcb20da":"code","caef5c72":"code","2ad4bf2e":"code","483a63aa":"code","2591247c":"code","9da6b5a0":"code","61fb47af":"code","704cc4d8":"code","47685824":"code","0c8b8ce2":"code","e9ad726a":"code","4574d691":"code","083f85ae":"code","7c321137":"code","0ee524ea":"code","0332e9df":"code","062a694f":"code","1c3dca0f":"code","d7b9dfde":"markdown","db77763a":"markdown","d8373944":"markdown","aaebc272":"markdown","ac7c8671":"markdown","a075db1f":"markdown","0888a520":"markdown","846bc227":"markdown","7a935a3b":"markdown","df85fe91":"markdown","0819d278":"markdown","ecbcad41":"markdown","493e68e5":"markdown","18087bca":"markdown","f898499d":"markdown","426cfb50":"markdown","51ee4ba6":"markdown","98675ac4":"markdown","380ae9d1":"markdown","9de22244":"markdown","a000ae3c":"markdown","f22a5fdd":"markdown","922f3124":"markdown","6b4e75c9":"markdown","4814920e":"markdown","d8a9064e":"markdown","ec04000e":"markdown","dd8efb57":"markdown","5057041a":"markdown","44656d93":"markdown","b7815b69":"markdown","8ec1af5f":"markdown","024db335":"markdown"},"source":{"bfcb20da":"import json\nimport folium\nimport requests\nimport mimetypes\nimport http.client\nimport pandas as pd\nfrom folium.plugins import HeatMap\nfrom pandas.io.json import json_normalize","caef5c72":"conn = http.client.HTTPSConnection(\"api.covid19api.com\")\npayload = \" \"\nheaders={}\nconn.request(\"GET\",\"\/summary\",payload,headers)\nres=conn.getresponse()\ndata = res.read().decode(\"UTF-8\")","2ad4bf2e":"covid1=json.loads(data)","483a63aa":"pd.json_normalize(covid1[\"Countries\"],sep=\",\")","2591247c":"df = pd.DataFrame(covid1[\"Countries\"])\ndf","9da6b5a0":"covid2 = df.drop(columns=[\"CountryCode\",\"Slug\",\"Date\",\"Premium\"],axis=1)\ncovid2","61fb47af":"m=folium.Map(tiles=\"Stamen Terrain\",min_zoom=1.5)\nm","704cc4d8":"url = \"https:\/\/raw.githubusercontent.com\/python-visualization\/folium\/master\/examples\/data\"\ncountry_shapes=f\"{url}\/world-countries.json\"","47685824":"folium.Choropleth(\n    geo_data=country_shapes,\n    min_zoom=2,\n    name=\"Covid-19\",\n    data=covid2,\n    columns=[\"Country\",\"TotalConfirmed\"],\n    key_on=\"feature.properties.name\",\n    fill_color=\"OrRd\",\n    nan_fill_color=\"black\",\n    legend_name=\"Total Confirmed Covid Cases\",\n).add_to(m)\nm","0c8b8ce2":"covid2.update(covid2[\"TotalConfirmed\"].map(\"TotalConfirmed:{}\".format))\ncovid2.update(covid2[\"TotalRecovered\"].map(\"TotalRecovered:{}\".format))","e9ad726a":"coordinates=pd.read_csv(\"https:\/\/raw.githubusercontent.com\/VinitaSilaparasetty\/covid-map\/master\/country-coordinates-world.csv\")\ncoordinates","4574d691":"covid_final=pd.merge(covid2,coordinates,on=\"Country\")","083f85ae":"def plotDot(point):\n  folium.CircleMarker(location=[point.latitude,point.longitude],\n                      radius=5,\n                      weight=2,\n                      tooltip=\"click me!\",\n                      popup=folium.Popup(point.TotalConfirmed,point.TotalConfirmed,point.TotalRecovered),\n                      fill_color=\"#000000\").add_to(m)","7c321137":"covid_final.apply(plotDot,axis=1)\nm.fit_bounds(m.get_bounds())\nm","0ee524ea":"m1=folium.Map(tiles=\"StamenToner\",min_zoom=2)\nm1","0332e9df":"deaths = covid_final[\"TotalDeaths\"].astype(float)\nlat = covid_final[\"latitude\"].astype(float)\nlon = covid_final['longitude'].astype(float)\nm1.add_child(HeatMap(zip(lat,lon,deaths),radius=0))","062a694f":"def plotDot(point):\n  folium.CircleMarker(location=[point.latitude,point.longitude],\n                      radius=5,\n                      weight=2,\n                      tooltip = \"click me!\",\n                      popup=folium.Popup(point.Country,point.TotalDeaths),\n                      fill_color=\"#000000\").add_to(m1)","1c3dca0f":"covid_final.apply(plotDot,axis=1)\nm1.fit_bounds(m1.get_bounds())\nm1","d7b9dfde":"Here we can make popup box on map which will be showing Total Number Of Confirmed case in each country.","db77763a":"# Generating Circular Markers","d8373944":"Here we are generating circular markers on map to get clear view of data.","aaebc272":"COVID-19 is the most challenging crisis that humanity has faced since the second world war. We have seen how it has affected everyone\u2019s life. Almost no country is left untouched from the COVID-19 outbreak. Due to the lack of making the right decision at the right time, many countries have already faced the wrath of this invisible enemy and many more will in the upcoming weeks.In this project, we\u2019ll visualize the COVID-19 hotspot through out world using Folium.","ac7c8671":"Here we are droping unnecessary columns","a075db1f":"To create a dashboard follow these steps:\n\n1) Make a copy of the notebook that you receive after completing this project. Rename it 'covidmap'. (Or any other short name)\n\n2) Remove all Markdown cells.\n\n3) The only output that should be visible are the final choropleth map with markers and the final heatmap with markers. To prevent other outputs from being displayed, just add a semicolon at the end of the code and rerun the kernel.\n\n4) To add a heading above the maps to indicate what they represent, just add a markdown cell above the cell containing the map output.\n\n5)  Save your notebook. Ensure that it is in the same directory as your jupyter lab installation.\n\n6) Open the terminal and type in:\n\n  jupyter nbconvert covidmap1.ipynb --no-input --no-prompt\nNote: If you named the copy of the notebook something else, replace that name where I have used'covidmap.ipynb'\n\n7) You will now have a file named 'covidmap.html'\n\n\n","0888a520":"The data for this notebook is sourced from \"COVID-19 Data Repository by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University\" and is updated daily.\n\nOfficial Github repository: https:\/\/github.com\/CSSEGISandData\/COVID-19\n\nThe data for this project is accessed through an easy API developed by Kyle Redelinghuys.\n\nOfficial site: https:\/\/covid19api.com\/","846bc227":"Here we can make popup box on map which will be showing name of each country.","7a935a3b":"Here we are converting dataset into JSON format.","df85fe91":"# Generate a choropleth map","0819d278":"Here we are generating heat map so we will start from generating Base map.","ecbcad41":"Here we are normalizing dataset.","493e68e5":"# Introduction \n","18087bca":"Obtain Geodata\n\ngeodata url: https:\/\/raw.githubusercontent.com\/python-visualization\/folium\/master\/examples\/data\n\ngeo data file: world-countries.json\n","f898499d":"Here we are obtaining Geodata from geodata url","426cfb50":"Here we are getting corrdinates of covid map from the link\ncoordinates of countries: https:\/\/raw.githubusercontent.com\/VinitaSilaparasetty\/covid-map\/master\/country-coordinates-world.csv.","51ee4ba6":"Here we are accessing Dataset via API","98675ac4":"1. Importing libraries\n\n2. Access data via an API.\n\n2. Data Preprocessing.\n\n4.  Generate a choropleth map.\n\n5. Generate circular markers.\n\n6. Generate a heat map.\n\n7. Converting Jupyter Notebook into Dashboards.\n\n8. Summary.","380ae9d1":"Here we are merging covid2 data.","9de22244":"Here we are generating Heat Map Layer.","a000ae3c":"You can also covert Jupyter Notebook into Dashboards.\n","f22a5fdd":"Here we are converting to pandas dataframe.","922f3124":"# Importing Libraries","6b4e75c9":"Here we are generating circular marker.|","4814920e":"# Data Preprocessing","d8a9064e":"Here we are Generate Choropleth Map Layer which is showing Total Confirmed Cases through out world.","ec04000e":"Firstly here we are generating base map","dd8efb57":"# Generating Circular Markers","5057041a":"# Contents","44656d93":"Thanks for reading. I hope you like my World Map Geovisualization found it to be helpful. If you have any questions or suggestions, feel free to write them down in the comment section.","b7815b69":"## About Dataset","8ec1af5f":"# Generating Heat Map","024db335":"# Converting Jupyter Notebook into Dashboards."}}