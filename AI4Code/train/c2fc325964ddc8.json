{"cell_type":{"a1874022":"code","3f7f8481":"code","33f84049":"code","541bf21a":"code","6ec21bb9":"code","5b5635c2":"code","7603ae34":"code","c4697718":"code","f018c48a":"code","01c67418":"code","0ca7852d":"code","70abd6f4":"code","8f2e88e7":"code","1813e566":"code","d7c8d419":"code","d556f25c":"code","9ae5f75d":"code","10874d92":"code","948e3244":"code","dc2f0afd":"code","88449ef5":"markdown","e13f937f":"markdown","3f1fff1d":"markdown","abd3de07":"markdown","afbc69e5":"markdown","5c47ccd3":"markdown","36cb4781":"markdown","9d4e60f4":"markdown","1043d41c":"markdown","955188b7":"markdown","74d38030":"markdown","4f2c2e4f":"markdown","77979018":"markdown","e3544304":"markdown","c1c4791b":"markdown","1a3d45fb":"markdown"},"source":{"a1874022":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfrom tqdm.notebook import tqdm\nfrom fastcore.all import *\nfrom collections import Counter","3f7f8481":"dataset_path = Path('..\/input\/coleridgeinitiative-show-us-the-data')","33f84049":"dataset_path.ls()","541bf21a":"(dataset_path\/'train').ls()","6ec21bb9":"(dataset_path\/'test').ls()","5b5635c2":"train_df = pd.read_csv(dataset_path\/'train.csv')","7603ae34":"train_df.head()","c4697718":"Counter(train_df.dataset_title)","f018c48a":"print(f'There are {len(Counter(train_df.dataset_title))} dataset titles in this dataset')","01c67418":"print(f'There are {len(Counter(train_df.cleaned_label))} ways the datasets are mentioned in the papers')","0ca7852d":"example_json = (dataset_path\/'train'\/(train_df.Id.iloc[0]+'.json')).read_json()","70abd6f4":"print(example_json)","8f2e88e7":"for i in range(len(example_json)):\n    position = example_json[i]['text'].find(train_df.iloc[0].dataset_label)\n    if position != -1:\n        print(f'Found in section {i}, {example_json[i][\"section_title\"]}:')\n        print(f'{example_json[i][\"text\"][position-400:position+len(train_df.iloc[0].dataset_label)+400]}')","1813e566":"def find_str_in_json(json, string):\n    for i in range(len(json)):\n        position = json[i]['text'].find(string)\n        if position != -1:\n            return i, position\n    print('problem')\n    return -1, -1","d7c8d419":"section_list = []\nposition_list = []\nfor i in tqdm(range(len(train_df))):\n    current_json = (dataset_path\/'train'\/(train_df.Id.iloc[i]+'.json')).read_json()\n    current_str = train_df.iloc[i].dataset_label\n    section, position = find_str_in_json(current_json, current_str)\n    section_list.append(str(section))\n    position_list.append(str(position))\ntrain_df['section'] = section_list\ntrain_df['position'] = position_list\n    ","d556f25c":"train_df","9ae5f75d":"new_train_df = pd.DataFrame({'dataset_label': train_df.groupby('Id', sort=False)['dataset_label'].apply('|'.join), \n              'cleaned_label': train_df.groupby('Id', sort=False)['cleaned_label'].apply('|'.join),\n              'section': train_df.groupby('Id', sort=False)['section'].apply('|'.join),\n              'position': train_df.groupby('Id', sort=False)['position'].apply('|'.join)})","10874d92":"new_train_df.head()","948e3244":"pd.read_csv(dataset_path\/'sample_submission.csv')","dc2f0afd":"def jaccard_similarity(s1, s2):\n    l1 = s1.split(\" \")\n    l2 = s2.split(\" \")    \n    intersection = len(list(set(l1).intersection(l2)))\n    union = (len(l1) + len(l2)) - intersection\n    return float(intersection) \/ union","88449ef5":"Let's look at an example JSON file:","e13f937f":"Interestingly, there are many `dataset_label`s that are not found in the text json and I need to investigate this further. Please let me know if you have any ideas why this is happening.","3f1fff1d":"For now, **we are done.**\n\nIf you enjoyed this kernel, please give it an upvote. If you have any questions or suggestions, please leave a comment!","abd3de07":"Let's see what dataset titles are mentioned in the scientific articles. Note that there can be even more dataset mentions that are not labeled.","afbc69e5":"We have our `train.csv`, `sample_submission.csv` and the `train` & `test` folders with json files of the text of the scientific articles. Let's check our train CSV file:","5c47ccd3":"Before we end, let's quickly take a look at `sample_submission.csv`. Currently, no example prediction strings are provided. We are basically supposed to provide the exercepts of the dataset mentions, separated by `|` character. ","36cb4781":"The following Jaccard similarity score is used for evaluation:","9d4e60f4":"Let's process the whole dataset and add the section and position of the `dataset_label` as new columns.","1043d41c":"# Simple EDA and preprocessing of DataFrame\n## Coleridge Initiative - Show US the Data\n\nIn this competition, we are given scientific articles and asked to identify mentions of datasets. \n\n> The objective of the competition is to identify the mention of datasets within scientific publications. \n\nLet's just dive in!\n\n\n**If you find this helpful, please give it an upvote!**","955188b7":"Let's check the directory:","74d38030":"These are the dataset titles, but the exact way these datasets are mentioned in the paper is provided in the `dataset_label` column. Additionally, the `dataset_label` column has a simple text cleaning function applied to it, giving us `cleaned_labels`.","4f2c2e4f":"Here, I am finding the target `dataset_label` and providing some context text:","77979018":"Basically we have the following columns:\n\n* `id` - publication id - note that there are multiple rows for some training documents, indicating multiple mentioned datasets\n* `pub_title` - title of the publication (a small number of publications have the same title)\n* `dataset_title` - the title of the dataset that is mentioned within the publication\n* `dataset_label` - a portion of the text that indicates the dataset\n* `cleaned_label` - the dataset_label, as passed through the `clean_text` function:\n```\ndef clean_text(txt):\n    return re.sub('[^A-Za-z0-9]+', ' ', str(txt).lower()).strip()\n```","e3544304":"You can check JSON file by showing the output of the below code cell:","c1c4791b":"A function to find the section and position of the `dataset_label`","1a3d45fb":"Here, I merge the rows with the same `Id` column, which is how it's found in the `sample_submission.csv`:"}}