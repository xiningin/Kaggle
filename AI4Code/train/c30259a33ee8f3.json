{"cell_type":{"a86bdaa8":"code","a1e27c6a":"code","475c7584":"code","23c76e00":"code","cc1819af":"code","c0771de3":"code","36bfa82b":"code","bc75b3b4":"code","c1a22857":"code","b655cf01":"code","f01f91e9":"code","45715815":"markdown","a87bd799":"markdown","4b507a9d":"markdown","d2be1a40":"markdown"},"source":{"a86bdaa8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\nfrom scipy import stats\nstats.chisqprob = lambda chisq, df: stats.chi2.sf(chisq, df)\n\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a1e27c6a":"raw_data = pd.read_csv('..\/input\/2.01. Admittance.csv')\nraw_data\n","475c7584":"data = raw_data.copy()\ndata['Admitted'] = data['Admitted'].map({'Yes':1,'No':0})\ndata","23c76e00":"y = data['Admitted']\nx1 = data['SAT']","cc1819af":"plt.scatter(x1,y,color='C0')\nplt.xlabel('SAT',fontsize=20)\nplt.ylabel('Admitted',fontsize=20)\nplt.show()","c0771de3":"x = sm.add_constant(x1)\nreg_lin = sm.OLS(y,x)\nresults_lin = reg_lin.fit()\n\nplt.scatter(x1,y,color ='C0')\ny_hat = x1*results_lin.params[1]+results_lin.params[0]\n\nplt.plot(x1,y_hat,lw=2.5,color='C8')\nplt.xlabel('SAT', fontsize=20)\nplt.ylabel('Admitted', fontsize = 20)\nplt.show()","36bfa82b":"reg_log = sm.Logit(y,x)\nresults_log = reg_log.fit()\n\ndef f(x,b0,b1):\n    return np.array(np.exp(b0+x*b1)\/(1 + np.exp(b0+x*b1)))\n\nf_sorted = np.sort(f(x1,results_log.params[0],results_log.params[1]))\nx_sorted = np.sort(np.array(x1))\n\nplt.scatter(x1,y,color='C0')\nplt.xlabel('SAT', fontsize = 20)\nplt.ylabel('Admitted', fontsize = 20)\nplt.plot(x_sorted,f_sorted,color='C8')\nplt.show()","bc75b3b4":"x = sm.add_constant(x1)\nreg_log = sm.Logit(y,x)\nresults_log = reg_log.fit()","c1a22857":"results_log.summary()","b655cf01":"x0 = np.ones(168)\nreg_log = sm.Logit(y,x0)\nresults_log = reg_log.fit()\nresults_log.summary()","f01f91e9":"\nraw_data = pd.read_csv('..\/input\/2.02. Binary predictors.csv')\nraw_data","45715815":"## Plot with a logistic regression curve ##","a87bd799":"## Plot with a regression line ##","4b507a9d":"## 2.02. Binary predictors ##","d2be1a40":"## Basics of logistic regression ##"}}