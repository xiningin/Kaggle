{"cell_type":{"960da67c":"code","29a12397":"code","4d1884ef":"code","dd621bec":"code","d79455c2":"code","c474f04c":"code","96433eb8":"code","e2b3e68f":"code","11f14e57":"code","4f064703":"code","b8008db3":"code","8a1c8dfa":"code","6ade3fb5":"code","2ce6567b":"code","2e2c2432":"code","ccc52adb":"code","d31554e2":"code","978d4539":"code","10520714":"code","34cd9ccb":"markdown"},"source":{"960da67c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","29a12397":"import numpy as np \nimport pandas as pd \n\nimport matplotlib.pyplot as plt \n%matplotlib inline\nimport seaborn as sns \n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nplt.style.use(\"fivethirtyeight\")\nsns.set_style(\"darkgrid\")","4d1884ef":"from sklearn.ensemble import RandomForestRegressor\nfrom lightgbm import LGBMRegressor\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import roc_auc_score","dd621bec":"train = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-feb-2021\/train.csv\", index_col='id')\ntest = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-feb-2021\/test.csv\", index_col='id')\nsample = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-feb-2021\/sample_submission.csv\")","d79455c2":"display (train.head())\ndisplay (test.head())\ndisplay (sample.head())","c474f04c":"display(train.shape)\ndisplay(test.shape)","96433eb8":"display(train.info())\ndisplay(test.info())","e2b3e68f":"print(\"Columns in Train: \\n\\n\", train.columns.tolist())\nprint(\"\\nColumns in Test: \\n\\n\", test.columns.tolist())","11f14e57":"train.describe()","4f064703":"plt.figure(figsize=(12,9))\nsns.heatmap(train.corr(), annot=True, cbar=False, linewidth=0.3)\nplt.show()","b8008db3":"import pandas_profiling as pp\npp.ProfileReport(train)","8a1c8dfa":"train['cat0'].value_counts().to_frame()","6ade3fb5":"print(\"--------DETAILS OF TRAINING AND TESTING DATA SIZE---------\")\nprint(\"Number of instances in train data: \",len(train))\nprint(\"Number of instances in test data: \",len(test))\nprint(\"There are {} feature columns\".format(test.shape[1]))","2ce6567b":"for i in train.columns:\n    if train[i].dtype=='object': \n        le = LabelEncoder()\n        le.fit(list(train[i].values) + list(test[i].values))\n        train[i] = le.transform(train[i].values)\n        test[i] = le.transform(test[i].values)\n        \ndisplay(train.head())\ndisplay (test.head())","2e2c2432":"x = train.drop(['target'], axis=1)\ny = train['target']","ccc52adb":"X_train, X_test, y_train, y_test = train_test_split(x, y, train_size=0.80)","d31554e2":"clf = RandomForestRegressor(n_estimators=200, max_depth=7, n_jobs=-1)\nclf.fit(X_train, y_train)\ny_pred = clf.predict(X_test)","978d4539":"y_pred_test = clf.predict(test)","10520714":"submission = pd.DataFrame({\n        \"id\": sample['id'],\n        \"target\": y_pred_test\n    })\n\nsubmission.to_csv('submission.csv',index = False)","34cd9ccb":"<h2 style=color:green align=\"left\"> a. cat0 <\/h2>"}}