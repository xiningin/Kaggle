{"cell_type":{"5b56832a":"code","b584a695":"code","d80792b2":"code","a7c76dad":"code","52dab8af":"code","6981f302":"code","243e3d93":"code","c3d2644e":"code","e0e7c896":"code","d1b386ec":"code","a2883b75":"code","233e52b9":"code","be1dd490":"code","0b40807a":"code","96374c87":"code","88903fe1":"code","332fa54c":"code","03e497c5":"code","9f5a32e6":"code","1473ee7f":"code","59dfed8f":"code","c03b3984":"code","ab2fe240":"code","99bf3f96":"code","dc6b3733":"code","13a02391":"code","f3890fb7":"code","4e7e0c82":"code","a1ae75fd":"markdown","aa6a321b":"markdown","ba31a240":"markdown","8d7dc20b":"markdown","d10b1691":"markdown","3b2c5c9f":"markdown","fbc7f715":"markdown","6aded54b":"markdown","35ed0765":"markdown","4229156c":"markdown","1f587681":"markdown","541f69b2":"markdown","5af5b06f":"markdown","c26cdecf":"markdown","819d9397":"markdown"},"source":{"5b56832a":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\nfrom matplotlib import pyplot as plt\nprint(\"imported!\")","b584a695":"Data=pd.read_csv('..\/input\/train.csv')","d80792b2":"Data.head()","a7c76dad":"\nData.drop(['PassengerId','Name','Ticket'],axis=1,inplace=True)\nData.head()","52dab8af":"\nprint(\"#Age missing entries =\",Data.Age.isnull().sum())\nprint(\"#survived missing entries =\",Data.Survived.isnull().sum())\nprint(\"#Pclass missing entries =\",Data.Pclass.isnull().sum())\nprint(\"#SibSp missing entries =\",Data.SibSp.isnull().sum())\nprint(\"#Parch missing entries =\",Data.Parch.isnull().sum())\nprint(\"#Fare missing entries =\",Data.Fare.isnull().sum())\nprint(\"#Cabin missing entries =\",Data.Cabin.isnull().sum())\nprint(\"#Embarked missing entries =\",Data.Embarked.isnull().sum())\n\n\n\n","6981f302":"Data[Data.Embarked.isnull()]","243e3d93":"\ng = sns.catplot(x=\"Embarked\", y=\"Survived\",  data=Data,\n                   height=6, kind=\"bar\", palette=\"muted\")\ng.despine(left=True)\ng = g.set_ylabels(\"survival probability\")\n\n","c3d2644e":"Data=Data.fillna({'Embarked':'C'})\n\n","e0e7c896":"print(\"#Embarked missing entries =\",Data.Embarked.isnull().sum())","d1b386ec":"Data=Data.fillna({\"Cabin\":'X'})\nData.head()","a2883b75":"Data[\"Cabin\"]=Data[\"Cabin\"].str.slice(0,1)","233e52b9":"Data.head(10)","be1dd490":"plot1=sns.catplot(x=\"Cabin\", y=\"Survived\",  data=Data,\n                   height=6, kind=\"bar\", palette=\"muted\")","0b40807a":"Data['Cabin']=Data['Cabin'].replace(['A','B','C','D','E','F','G','T','X'],[0,1,2,3,4,5,6,7,8])\nData.head(10)","96374c87":"# Converting other categorical features as well.\nData['Sex']=Data['Sex'].replace(['male','female'],[0,1])\nData['Embarked']=Data['Embarked'].replace(['S','C','Q'],[0,1,2])\nData.head()\n","88903fe1":"sns.heatmap(Data[[\"Age\",\"Sex\",\"SibSp\",\"Parch\",\"Pclass\",\"Embarked\",\"Fare\",\"Cabin\",\"Survived\"]].corr(),annot=True)","332fa54c":"age_means=np.zeros((3,9))\nmedian=Data.Age.mean()\nfor classNum in range (0,Data.Pclass.max()):  # 0 --> 1st class\n    for sibNum in range (0,Data.SibSp.max()+1): # adding one to take the range [0,8] not [0,8[.\n        age_means[classNum][sibNum]=Data[\"Age\"][(Data[\"Pclass\"]==(classNum+1)) & (Data[\"SibSp\"]==sibNum)].mean()\n        if np.isnan(age_means[classNum][sibNum]):\n            age_means[classNum][sibNum]=median","03e497c5":"print(age_means)","9f5a32e6":"Null_indx=list(Data[\"Age\"][Data[\"Age\"].isnull()].index)","1473ee7f":"for i in Null_indx:\n    Data[\"Age\"].iloc[i]=age_means[Data.Pclass[i] - 1][Data.SibSp[i]]\n    \nprint(\"#Age missing entries =\",Data.Age.isnull().sum())\n","59dfed8f":"Y=Data.Survived\nX=Data\nX.drop(['Survived'],axis=1,inplace=True)\n","c03b3984":"X_train, X_test, Y_train, Y_test= train_test_split(X,Y,test_size=0.2, random_state=3)\n","ab2fe240":"classifier= GaussianNB()\nclassifier.fit(X_train, Y_train)\nclassifier.class_prior_\n","99bf3f96":"predicts=classifier.predict(X_test)\naccuracy=round(accuracy_score(predicts,Y_test),3)\nprint(accuracy)","dc6b3733":"test=pd.read_csv('..\/input\/test.csv')\nIDs=test.PassengerId\ntest.drop(['PassengerId','Name','Ticket'],axis=1,inplace=True)\ntest.head()","13a02391":"test.Sex=test.Sex.replace(['male','female'],[0,1])\ntest.Embarked=test.Embarked.replace(['S','C','Q'],[0,1,2])\ntest=test.fillna({\"Cabin\":'X'})\ntest[\"Cabin\"]=test[\"Cabin\"].str.slice(0,1)\ntest.head()","f3890fb7":"Null_test=list(test[\"Age\"][test[\"Age\"].isnull()].index)\nfor i in Null_test:\n    test[\"Age\"].iloc[i]=age_means[test.Pclass[i] - 1][test.SibSp[i]]\nprint(\"#Age missing entries =\",Data.Age.isnull().sum())\nprint(\"#Pclass missing entries =\",test.Pclass.isnull().sum())\nprint(\"#SibSp missing entries =\",test.SibSp.isnull().sum())\nprint(\"#Parch missing entries =\",test.Parch.isnull().sum())\nprint(\"#Fare missing entries =\",test.Fare.isnull().sum())\nprint(\"#Embarked missing entries =\",test.Embarked.isnull().sum())\n","4e7e0c82":"test['Cabin']=test['Cabin'].replace(['A','B','C','D','E','F','G','T','X'],[0,1,2,3,4,5,6,7,8])\ntest=test.fillna({'Fare':34})\nsubPredictions=classifier.predict(test)\nsubFile=pd.DataFrame({'PassengerId': [],'Survived':[]})\nsubFile.PassengerId=IDs\nsubFile.Survived=subPredictions\nsubFile.to_csv( 'MySubmissionCabin' ,index=False)\nsubFile.head()","a1ae75fd":"# Looking for missing values:","aa6a321b":"It seems that age feature is most correlated to features \"Pclass\" and \"SibSp\" respectively, so we will fill NaN age values with the mean or median of each group of these two features.","ba31a240":"# Creating the submission file:","8d7dc20b":"Lets, split our data into train and test sets using Sklearn built in function.","d10b1691":"# Importing libraries:","3b2c5c9f":"# Dropping some useless features:","fbc7f715":"As we see:\n* 55% embarked from 'C' survived.\n* 35% embarked from 'Q' survived.\n* 32% embarked from 'S' survived.\n\nSo, it seems reasonable to fill the empty records with 'C'.\n","6aded54b":"Now, Embarked feature has no missing values!","35ed0765":"# Reading and discovering the Dataset:","4229156c":"The two empty records are for people who survived, let's check which Embarking region is more likely to survive, so that we can fill those two missing records.","1f587681":"# Now, our data is cleaned and nothing is missing!","541f69b2":"It is clear that Survival is strongly correleated with some features than others. Among these features is the Cabin feature which you think that it is better to be dropped at the first glance.","5af5b06f":"# It's time for Calling in Naive Bayes!","c26cdecf":"# Let's play with the Cabin feature as it has more than 80% empty entries.","819d9397":"It seems like passangers with no Cabin are more likely to not survive! Let's convert Cabin categorical feature into numbers so our ML algorithm can deal with it."}}