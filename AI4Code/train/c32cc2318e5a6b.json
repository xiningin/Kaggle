{"cell_type":{"1a35a77c":"code","cada9e04":"code","c66977de":"code","81a6104c":"code","a9ba43ba":"code","b6edf175":"code","90c98393":"code","0e37c5ae":"code","d52a72f8":"code","dd350751":"code","000ac625":"code","3d3ee20b":"markdown","fae70b3b":"markdown","063de8c1":"markdown","e1731cc1":"markdown","a209df0b":"markdown","e9183916":"markdown","98f3e84b":"markdown","9d089d99":"markdown","0d6a86c6":"markdown"},"source":{"1a35a77c":"import numpy as np, pandas as pd\nimport tensorflow as tf, matplotlib.pyplot as plt\nfrom sklearn import preprocessing\nfrom sklearn.utils import resample\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n#        print(os.path.join(dirname, filename))\n        pass","cada9e04":"''' Read the CSV file datasets: NORMAL_LABEL=0 , ABNORMAL_LABEL=1,2,3,4,5 '''\nptbdb_abnormal=pd.read_csv(os.path.join('\/kaggle\/input\/heartbeat', 'ptbdb_abnormal.csv'),header=None)\nptbdb_normal=pd.read_csv(os.path.join('\/kaggle\/input\/heartbeat', 'ptbdb_normal.csv'),header=None)\nptbdb_train=pd.concat([ptbdb_abnormal,ptbdb_normal],ignore_index=True)\nmitbih_train=pd.read_csv(os.path.join('\/kaggle\/input\/heartbeat', 'mitbih_train.csv'),header=None)\nmitbih_test=pd.read_csv(os.path.join('\/kaggle\/input\/heartbeat', 'mitbih_test.csv'),header=None)\n\n\n'''VISUALIZE THE [MITBIH_TRAIN] DATASET: You will observe that majority of the obsvns are of Label=0'''\nfig,ax=plt.subplots(figsize=(8,8))\nmitbih_train[187].value_counts().plot(ax=ax,kind='bar')\nplt.show()\n\n\nfull_train=pd.concat([mitbih_train,ptbdb_train],ignore_index=True)\nfull_train.shape      #102106*188\n\n'''BREAK DOWN THE FULL TRAIN DATASET INTO X & Y'''\nfull_train_y=full_train[187]\nfull_train_x=full_train.drop(columns=[187])\n\n'''BREAK DOWN THE TEST DATASET INTO X & Y'''\nmitbih_test_y=mitbih_test[187]\nmitbih_test_x=mitbih_test.drop(columns=[187])","c66977de":"'''TO VISUALIZE TRAINING LABEL-WISE DISTRIBUTION OF DATA IN PIE-CHART'''\nplt.figure(figsize=(10,10))\nplt.pie(mitbih_train[187].value_counts(), labels=['N','Q','V','S','F'],\n        colors=['orange','yellow','lightblue','lightgreen','grey'], autopct='%.2f%%')\nplt.gcf().gca().add_artist(plt.Circle((0,0),0.7,color='white'))\nplt.title('Imbalanced classes with majority Normal heartbeats')\nplt.show()","81a6104c":"plots= [['Normal Beat','Supraventricular Ectopic Beat'], ['Ventricular Ectopic Beat', 'Fusion Ectopic Beat'], ['Unknown']]\ncolors= [['green', 'orange'], ['red', 'blue'], ['grey']]\nfig, axs = plt.subplots(3, 2, constrained_layout=True, figsize=(14,14))\nfig.delaxes(axs[2,1])\n\nfor i in range(0,5,2):\n    j=i\/\/2\n    axs[j][0].plot(mitbih_train[mitbih_train[187]==i%5].sample(1, random_state=100).iloc[0,:186], colors[j][0])\n    axs[j][0].set_title('{}. {}'.format(i%5,plots[j][0]))\n    \n    if i%5!=4:\n        axs[j][1].plot(mitbih_train[mitbih_train[187]==(i%5)+1].sample(1, random_state=100).iloc[0,:186], colors[j][1])\n        axs[j][1].set_title('{}. {}'.format(i%5+1,plots[j][1]))","a9ba43ba":"'''RESAMPLING THE CLASSES TO HAVE EQUAL DATA DISTRIBUTION LED TO WORSEN PERFORMANCE (POSSIBLE UNDERFITTING REASON)'''\ndf0=mitbih_train[mitbih_train[187]==0].sample(n=20000,random_state=10)\ndf1=mitbih_train[mitbih_train[187]==1]\ndf2=mitbih_train[mitbih_train[187]==2]\ndf3=mitbih_train[mitbih_train[187]==3]\ndf4=mitbih_train[mitbih_train[187]==4]\n\ndf1_upsampled=resample(df1,replace=True,n_samples=20000,random_state=100)\ndf2_upsampled=resample(df2,replace=True,n_samples=20000,random_state=101)\ndf3_upsampled=resample(df3,replace=True,n_samples=20000,random_state=102)\ndf4_upsampled=resample(df4,replace=True,n_samples=20000,random_state=103)\ntrain_df=pd.concat([df1_upsampled,df2_upsampled,df3_upsampled,df4_upsampled,df0])\n\nprint(train_df[187].value_counts())\nplt.figure(figsize=(10,10))\nplt.pie(train_df[187].value_counts(), labels=['N','Q','V','S','F'],\n        colors=['orange','yellow','lightblue','lightgreen','grey'], autopct='%.2f%%')\nplt.gcf().gca().add_artist(plt.Circle( (0,0), 0.7, color='white' ))\nplt.title('Balanced classes after upsampling')\nplt.show()","b6edf175":"model=tf.keras.Sequential()\nmodel.add(tf.keras.layers.Convolution1D(filters=50,kernel_size=20,activation='relu',kernel_initializer='glorot_uniform',input_shape=(187,1)))\n#a1_0=> 187-20+1= 168,50\nmodel.add(tf.keras.layers.MaxPool1D(pool_size=10,data_format='channels_first'))\n#a1_1=> 50\/\/10= 168,5\nmodel.add(tf.keras.layers.Convolution1D(filters=20,kernel_size=15,activation='relu',kernel_initializer='glorot_uniform'))\n#a2_0=> 168-15+1= 154,20\nmodel.add(tf.keras.layers.MaxPool1D(pool_size=15,data_format='channels_first'))\n#a2_1=> 20\/\/15= 154,1\nmodel.add(tf.keras.layers.Convolution1D(filters=10,kernel_size=10,activation='relu',kernel_initializer='glorot_uniform'))\n#a3_0=> 154-10+1=145,10\nmodel.add(tf.keras.layers.MaxPool1D(pool_size=10,data_format='channels_first'))\n#a3_1=> 10\/\/10=145,1\nmodel.add(tf.keras.layers.Flatten())\n#a4=> 145\nmodel.add(tf.keras.layers.Dense(units=512,activation='relu',kernel_initializer='glorot_uniform'))\n#a4=> 512\nmodel.add(tf.keras.layers.Dense(units=128,activation='relu',kernel_initializer='glorot_uniform'))\n#a5=> 128\nmodel.add(tf.keras.layers.Dense(units=5,activation='softmax'))\n\nmodel.compile(optimizer='Adam',loss='sparse_categorical_crossentropy',metrics=['acc'])\nmodel.summary()","90c98393":"mitbih_test_x2=np.asarray(mitbih_test_x)\nmitbih_test_x2=mitbih_test_x2.reshape(-1,187,1)\n\n\n''' DATASET AFTER UPSAMPLING, WITH EVEN DISTRIBUTION ACROSS CLASSES '''\ntrain_df_X=np.asarray(train_df.iloc[:,:187]).reshape(-1,187,1)\ntrain_df_Y=train_df.iloc[:,187]\nprint(train_df_X.shape)\n\n\nhist=model.fit(train_df_X,train_df_Y,batch_size=64,epochs=20)","0e37c5ae":"_,acc=model.evaluate(mitbih_test_x2,mitbih_test_y,verbose=2)\nprint('Accuracy for the balanced-dataset = ',round(acc*100,2),'%')","d52a72f8":"''' UNBALANCED TRAIN DATASET FED INTO MODEL '''\nfull_train_x2=np.asarray(full_train_x)\nfull_train_x2=full_train_x2.reshape(-1,187,1)\nprint(full_train_x2.shape)\n\nhist=model.fit(full_train_x2,full_train_y,batch_size=64,epochs=20)","dd350751":"_,acc=model.evaluate(mitbih_test_x2,mitbih_test_y,verbose=2)\nprint('Accuracy for the unbalanced-dataset = ',round(acc*100,2),'%')","000ac625":"dist=mitbih_test[187].value_counts()\nplt.figure(figsize=(10,10))\nplt.pie(x=dist, labels=['N','Q','V','S','F'], colors=['orange','yellow','lightblue','lightgreen','grey'], autopct='%0.2f%%')\nplt.gcf().gca().add_artist(plt.Circle(xy=(0,0), radius=0.5, color='white'))\nplt.show()","3d3ee20b":"# INTRODUCTION\n\n> An electrocardiogram (ECG) is a simple test that can be used to check your heart's rhythm and electrical activity.\n\n> Sensors attached to the skin are used to detect the electrical signals produced by your heart each time it beats. These signals are recorded by a machine and are looked at by a doctor to see if they're unusual.\n\n\nThe _MIT-BIH Arrhythmia Database_ contains 48 half-hour excerpts of two-channel ambulatory ECG recordings, obtained from 47 subjects studied by the BIH Arrhythmia Laboratory between 1975 and 1979. Twenty-three recordings were chosen at random from a set of 4000 24-hour ambulatory ECG recordings collected from a mixed population of inpatients (about 60%) and outpatients (about 40%) at Boston's Beth Israel Hospital; the remaining 25 recordings were selected from the same set to include less common but clinically significant arrhythmias that would not be well-represented in a small random sample.\n\n![image.png](attachment:image.png)\n\n> **Ectopic heartbeats** are extra heartbeats that occur just before a regular beat. Ectopic beats are normal and usually not a cause for concern, though they can make people feel anxious.","fae70b3b":"# OBSERVATION\nThe test-accuracy is slightly lower for the unbalanced-dataset than the balanced-dataset, likely because the test-dataset itself has imbalanced class-distribution.","063de8c1":"# CREATING THE MODEL BY STACKING UP CONV1D LAYERS\nThe following code-cell will implement a simple Sequential TFv2 model with stacked up Convolutional layers.\n\nThese will essentially summarize chunks of data together based on filter-size, to produce feature-maps.\n\nFinally we'll have a softmax output layer to give 5 predictictions since we have 5 classes.","e1731cc1":"# DATA DISTRIBUTION INFO\n\n> ptbdb_abnormal.shape => 10506x188\n\n> ptbdb_normal.shape   => 4046x188\n\n> mitbih_train.shape   => 87554x188\n\n> mitbih_test.shape    => 21892x188\n\n\nNormalization is not required, datasets are already normalized; if it was, we could've used:\n\n> minmaxpreprocessor=preprocessing.MinMaxScaler()\n\n> norm_full_train_x=pd.DataFrame(minmaxpreprocessor.fit_transform(full_train_x))","a209df0b":"# TRAINING THE MODEL - II\n### UNBALANCED DATASET","e9183916":"# TRAINING THE MODEL\n### BALANCED DATASET","98f3e84b":"# ROOT CAUSE ANALYSIS OF THE VALIDATION SCORE DISCREPANCY\nIt seems the test-dataset of _mitbih database_ performed better on the unbalanced dataset, rather than our standardized balanced dataset.\n\nThis might be because of unbalanced class-distribution even in the test-dataset, as we observed in the train-dataset. Let's find out !","9d089d99":"# VISUALIZING AN EXAMPLE OF EACH ECG CLASS\nCurious to observe each entry of the 5 types of heartbeats.","0d6a86c6":"# UPSAMPLING TO ENSURE EVEN CLASS-DISTRIBUTION\nAs you can observe in the above class-wise data distribution, 'N' has the highest number of records, with very few records for 'F' class.\n\nWe can use the _sklearn **resample()**_ function to upsample the other classes to bring them up to keel."}}