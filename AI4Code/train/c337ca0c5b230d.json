{"cell_type":{"d44156c1":"code","cf8872d0":"code","b3b08ffd":"code","94b5f72a":"code","caaa3c6b":"code","9fae5514":"code","ad0d5751":"code","f89d3a46":"code","bdde45ae":"code","2f79968d":"code","3cccd0c6":"code","a07fd89c":"code","01efe7cf":"code","4a25287f":"code","a2210664":"code","c9f29def":"code","85fb786a":"code","0ef4e90c":"code","75c7a7cf":"code","33f78226":"code","6f3799ed":"code","0ea8cb4a":"code","75cde83a":"code","9c0d2af5":"code","a3d7ae0c":"code","d84b87e1":"code","95f3f37b":"code","fd86143c":"markdown","ed4eef28":"markdown","ad54e879":"markdown","f4abe1f4":"markdown","e0795bc0":"markdown"},"source":{"d44156c1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","cf8872d0":"# Firstly, we should read our data from dataset!\ndata = pd.read_csv('..\/input\/StudentsPerformance.csv')","b3b08ffd":"# Let's see info of data\ndata.info()","94b5f72a":"data.head()","caaa3c6b":"data.tail(10)","9fae5514":"data.describe()","ad0d5751":"# columns of data are:\ndata.columns","f89d3a46":"data.drop(['race\/ethnicity','parental level of education','lunch'],axis=1,inplace=True)","bdde45ae":"# Let's see our new smallest data.\ndata.info()","2f79968d":"data.columns","3cccd0c6":"# Firstly, I want to see Gender situtation.\n# Countplot:\nsns.countplot(data['gender'])\n# Pieplot\nexplode = (0.1, 0)\nfig1, ax1 = plt.subplots(figsize=(5,5))\nax1.pie(data['gender'].value_counts(),explode=explode, labels=['female','male'], autopct='%1.1f%%',\n        shadow=True, startangle=90)\n# Equal aspect ratio ensures that pie is drawn as a circle\nax1.axis('equal')  \nplt.tight_layout()\nplt.legend()\nplt.show()","a07fd89c":"# Let's look at Test Preparation Course in the same way\nsns.countplot(data['test preparation course'])\nexplode = (0.1, 0)\nfig1, ax1 = plt.subplots(figsize=(5,5))\nax1.pie(data['test preparation course'].value_counts(),explode=explode, labels=['none','completed'], autopct='%1.1f%%',\n        shadow=True, startangle=90)\n# Equal aspect ratio ensures that pie is drawn as a circle\nax1.axis('equal')  \nplt.tight_layout()\nplt.legend()\nplt.show()","01efe7cf":"# Connection between gender and test prep. course\nfig1, ax1 = plt.subplots(figsize=(7,5))\nsns.countplot(data['gender'],hue=data['test preparation course'])","4a25287f":"# Rename to some columns. I don't like the name of columns like 'math score'\ndata = data.rename(columns={'math score':'math_score'})\ndata = data.rename(columns={'reading score':'reading_score'})\ndata = data.rename(columns={'writing score':'writing_score'})","a2210664":"# Check it\ndata.columns","c9f29def":"# Look at distribution of math score, reading score and writing score\nsns.distplot(data['math_score'],bins=25)","85fb786a":"sns.distplot(data['reading_score'],bins=25)","0ef4e90c":"sns.distplot(data['writing_score'],bins=25)","75c7a7cf":"# I want to calculate average of these scores and then I labeled every student as below average and above average.\naverage_math = data['math_score'].sum()\/1000\naverage_reading = data['reading_score'].sum()\/1000\naverage_writing = data['writing_score'].sum()\/1000\n# Print these values.\nprint(\"Average of math scores: {}\".format(average_math))\nprint(\"Average of reading scores: {}\".format(average_reading))\nprint(\"Average of writing scores: {}\".format(average_writing))","33f78226":"# Check the scores of students and write '0' or '1' if it is below or above average.\n# 1 for above\n# 0 for below\n# We should assign numerical values because pie plot needs integers.\ndata.math_score = [0 if each < average_math else 1 for each in data.math_score]\ndata.reading_score = [0 if each < average_reading else 1 for each in data.reading_score]\ndata.writing_score = [0 if each < average_writing else 1 for each in data.writing_score]","6f3799ed":"# Let's see our new data!\ndata.head()\n# As you can see; our values are changed!","0ea8cb4a":"labels=['Female','Male']\nexplode = (0.1, 0)\nfig1, ax1 = plt.subplots(figsize=(5,5))\nax1.pie(data.groupby('gender')['math_score'].sum(),explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  \nplt.tight_layout()\nplt.title(\"Gender-Math Score\")\nplt.legend()\nplt.show()","75cde83a":"labels=['Female','Male']\nexplode = (0.1, 0)\nfig1, ax1 = plt.subplots(figsize=(5,5))\nax1.pie(data.groupby('gender')['reading_score'].sum(),explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  \nplt.tight_layout()\nplt.title(\"Gender-Reading Score\")\nplt.legend()\nplt.show()","9c0d2af5":"labels=['Female','Male']\nexplode = (0.1, 0)\nfig1, ax1 = plt.subplots(figsize=(5,5))\nax1.pie(data.groupby('gender')['writing_score'].sum(),explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  \nplt.tight_layout()\nplt.title(\"Gender-Writing Score\")\nplt.legend()\nplt.show()","a3d7ae0c":"above_math = data['math_score'] == 1 # First filter\nabove_reading = data['reading_score'] == 1 # Second filter\nabove_writing = data['writing_score'] == 1 # Third filter\nExcellentStudent = data[above_math & above_reading & above_writing] # And, Excellent Students!\nExcellentStudent","d84b87e1":"sns.countplot(ExcellentStudent['gender'])\n# Of course female people most :)","95f3f37b":"sns.countplot(ExcellentStudent['test preparation course'])\n# Most of Excellent Student didn't go any test preparation course.","fd86143c":"**INTRODUCTION**\n\nHello guys! Today, we'll analyze to Students Performance in Exams. This dataset based on high school students in USA. Actually, I've decided to work on this dataset when I saw it first time but I could not make time for this. Finally, I'm feeling like: Today is the day! You'll see on this project;\n* Data Importing and Reading\n* EDA (Explository Data Analysis)\n* Visualizations (I prefer to use countplot and pie plot most. But you can use different types of plot.)\n* Data Filtering (Final section I've decided to detect Excellent Students)\n* Conclusion\n\nIf we are ready, let's start!","ed4eef28":"Let's minimize our data. I don't want to use some columns.\n* *Firstly*, I want drop race\/ethnicity. I don't care people's race, everyone is equal :)\n* *Secondly*, I'll drop lunch column. Because, I don't believe in effect of lunch.  That's my choice of course. You can use that.\n* *Finally*, I'll drop parental level of education. Actually this is a really important point but I won't use this. I'll think every child's parents have same level of education.","ad54e879":"**Let's find Excellent Students. An Excellent Student who ortal\u0131ma is above average to all of courses.**","f4abe1f4":"And that's the data which I want to use!","e0795bc0":"**CONCLUSION**\n\nYes! We've finished analyse on Students Performans in Exams. I really had fun and learned a lot of things while worked on project. I hope so you did. Please feel relax to comment me. Take care everybody, have a nice day to all of you."}}