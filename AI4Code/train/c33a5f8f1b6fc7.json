{"cell_type":{"c01174f6":"code","a830ef10":"code","fa2f3925":"code","9987c006":"code","404c4cfb":"code","5305fdf2":"code","bc62255e":"code","92995af2":"code","d7ef9bed":"code","ac6c47cb":"code","157c17e9":"code","87ae8a93":"code","ae32e0df":"code","60a13845":"code","69e6dc9e":"code","6746114f":"markdown","52b9e76c":"markdown","1861519e":"markdown","f08a7d0a":"markdown","d748a357":"markdown"},"source":{"c01174f6":"pip install bubbly","a830ef10":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport plotly.express as px\nfrom plotly.offline import init_notebook_mode, iplot\nfrom bubbly.bubbly import bubbleplot \n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fa2f3925":"data = pd.read_csv('\/kaggle\/input\/pakistan-temperature\/Tempreture_1901_2016_Pakistan.csv')\ndata.info()","9987c006":"data.rename(columns={\"Temperature - (Celsius)\":\"temp\", \n                    \" Year\":\"year\",\n                    \"Month\":\"month\"}, inplace=True)\ndata.head()","404c4cfb":"# Create Month Dictionary\n# Add Dupplicate Column with Name int_month\n# Replace new column characters month name with integer values of months\nmonth_dict = {\"January\": 1, \"February\": 2, \n              \"March\": 3, \"April\": 4, \n              \"May\": 5, \"June\": 6, \n              \"July\": 7, \"August\": 8, \n              \"September\": 9, \"October\": 10, \n              \"November\": 11, \"December\": 12}\n\ndata[\"int_month\"] = data[\"month\"]      # Add New Column\ndata[\"int_month\"] = data[\"int_month\"].replace(month_dict)\nprint (data[\"int_month\"].max() )\ndata","5305fdf2":"xyears = data[\"year\"].unique()\ngtotal = data[\"temp\"].sum()\ngmeans = data[\"temp\"].mean()\nprint(\"Total Number of Years: \", len(xyears))\nprint(\"Grand Sum of Temperatures: \", gtotal)\nprint(\"Mean of Temperatures: \", gmeans)","bc62255e":"tempData = pd.DataFrame(columns = {\"years\", \"sum\", \"means\"} )\nrowNum = 0\nfor x in xyears:\n    tempData.at[rowNum, 'years'] = x\n    tempData.at[rowNum, 'sum'] = data[data[\"year\"] == x][\"temp\"].sum()\n    tempData.at[rowNum, 'means'] = data[data[\"year\"] == x][\"temp\"].mean()\n    rowNum += 1\ntempData","92995af2":"tempData[\"means\"] = tempData[\"means\"].astype(float)\ntempData.plot(\"years\", \"means\");","d7ef9bed":"print(\"3D Representation of All Year Temperature\")\nfig = px.scatter_3d(data, x='year', y='month', z='temp', size='temp', color='month')\nfig.show()","ac6c47cb":"# For Last Five Years\nend_year = data.year.max()\nstart_year = end_year - 4\nend_year = end_year+1\nprint(start_year, end_year)","157c17e9":"data_last_5years = pd.DataFrame(columns = {\"year\", \"month\", \"temp\"} )\nrowNum = 0\nfor x in range(start_year, end_year):\n    getData = data[data[\"year\"] == x]\n    for y, yRows in getData.iterrows():\n        data_last_5years.at[rowNum, 'year'] = x\n        data_last_5years.at[rowNum, 'month'] = yRows[\"month\"]\n        data_last_5years.at[rowNum, 'temp'] = yRows[\"temp\"]\n        rowNum += 1\ndata_last_5years.head()","87ae8a93":"data_last_5years[\"temp\"] = data_last_5years[\"temp\"].astype(\"float\")\nprint (\"Total Number of Rows: \", len(data_last_5years))\ndata_last_5years.tail()","ae32e0df":"# Representation of Last Five Years (2012-2016)\nfig = px.scatter_3d(data_last_5years, x='year',\n                    y='month', z='temp', size='temp', color='month')\nfig.show()","60a13845":"figure = bubbleplot(dataset=data.loc[(data.year >=2000)], \n                    x_column='int_month', y_column='temp', \n                    \n                    bubble_column='month', \n                    time_column='year', size_column='temp', color_column='month', \n                    x_title=\"MONTHS\", y_title=\"TEMPERATURE\", title='LAST 5-YEAR TIMELINE FOR MONTH-TEMPERATURE RELATION',\n                    y_logscale=False, x_logscale=False, scale_bubble=2, height=650)\niplot(figure)","69e6dc9e":"figure = bubbleplot(dataset=data, \n                    x_column='year', y_column='temp',\n                    \n                    bubble_column='month', \n                    time_column='year', size_column='temp', color_column='month',\n                    x_title=\"Years\", y_title=\"Average Temperature\", \n                    title='Timeline of Yearly per Month Temperature', \n    colorbar_title='Temperature', colorscale='temp', y_range=[6,35], x_range=[1901, 2016], \n    x_logscale=False, y_logscale=False, scale_bubble=1.5, height=650) \niplot(figure)","6746114f":"### Calculate the Sum and Mean of the relavent years","52b9e76c":"# Last 5-Years Data Visualization","1861519e":"# Graphical Visualization of Data Temperature","f08a7d0a":"\n### **Like -> Upvote ---> Motivation**\n\nAppriciation with lots of love, looking for your guidance, **Like**, **UPVOTES** for **Motivation**.\nPreviously Notebook comments and like\/Upvores highly appriciated and motivated.\nThanks with lots of LOVE :) \n\n\n# Please visit also for\n#### **EDA & Visuallization of CoronaVirus in Pakistan**\nhttps:\/\/www.kaggle.com\/methoomirza\/covid19-datavisualization-pakistan-till-june2020\n\n\n#### **EDA Cities of Pakistan**\nhttps:\/\/www.kaggle.com\/methoomirza\/cities-visualization\n\n\n#### **Data Cleaning and Visualization**\nhttps:\/\/www.kaggle.com\/methoomirza\/data-cleaning-visualization","d748a357":"## 3D Representation of give Data"}}