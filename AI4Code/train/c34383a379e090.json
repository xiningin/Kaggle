{"cell_type":{"9b73fcca":"code","eaebed98":"code","4a9f71a0":"code","aa3a7c07":"code","c194e486":"code","db15ba6a":"code","5179084d":"code","08e0406d":"code","cd186833":"code","7fc598bd":"code","d08cae4f":"code","d29bfb01":"code","aeebe779":"code","82324732":"code","52f0f883":"code","9ead008a":"markdown","fcfc31d9":"markdown","bf1ac1e7":"markdown","90660f26":"markdown","36c4880f":"markdown","0323fd9f":"markdown"},"source":{"9b73fcca":"import pandas as pd\nimport plotly.graph_objects as go\nimport plotly.express as px\n# Plotly installation: https:\/\/plot.ly\/python\/getting-started\/#jupyterlab-support-python-35","eaebed98":"df = pd.read_csv('..\/input\/covid19-local-us-ca-forecasting-week-1\/ca_train.csv')\ndf=df[df[\"Date\"]>\"2020-03-09\"] # Only keep dates with confirmed cases\ndf.head()","4a9f71a0":"# Reference: https:\/\/plot.ly\/python\/time-series\/\nfig = go.Figure(\n    [go.Scatter(x=df['Date'], y=df['ConfirmedCases'])],\n    layout_title_text=\"Confirmed Cases in California\"\n)\nfig.update_layout(\n    yaxis_type=\"log\",\n    margin=dict(l=20, r=20, t=50, b=20),\n    template=\"plotly_white\")\nfig.show()","aa3a7c07":"df_test = pd.read_csv('..\/input\/covid19-local-us-ca-forecasting-week-1\/ca_test.csv')\nprint(df_test.shape)\ndf_test.head()","c194e486":"public_leaderboard_start_date = \"2020-03-12\"\nlast_public_leaderboard_train_date = \"2020-03-11\"\npublic_leaderboard_end_date  = \"2020-03-26\"\n\ncases  = df[df[\"Date\"]==last_public_leaderboard_train_date][\"ConfirmedCases\"].values[0] * (2**(1\/4))\ndf_test.insert(1, \"ConfirmedCases\", 0)","db15ba6a":"for i in range(15):\n    df_test.loc[i, \"ConfirmedCases\"] = cases\n    cases = cases * (2**(1\/4))    \ndf_test.head()","5179084d":"# Reference: https:\/\/plot.ly\/python\/time-series\/\nfig = go.Figure(\n    [\n        go.Scatter(x=df['Date'], y=df['ConfirmedCases'], name=\"actual\"),\n        go.Scatter(x=df_test['Date'].iloc[:15], y=df_test['ConfirmedCases'], name=\"predicted\"),\n    ],\n    layout_title_text=\"Confirmed Cases in California\"\n)\nfig.update_layout(\n    yaxis_type=\"log\",\n    margin=dict(l=20, r=20, t=50, b=20),\n    template=\"plotly_white\")\nfig.show()","08e0406d":"df_growth = pd.DataFrame({\n    \"Date\": df[\"Date\"].iloc[1:].values,\n    \"Rate\": df[\"ConfirmedCases\"].iloc[1:].values \/ df[\"ConfirmedCases\"].iloc[:-1].values * 100\n})","cd186833":"# Reference: https:\/\/plot.ly\/python\/bar-charts\/\nfig = px.bar(df_growth, x='Date', y='Rate', width=600, height=400)\nfig.update_layout(\n    margin=dict(l=20, r=20, t=50, b=20),\n    template=\"plotly_white\",\n    title=\"Empirical Growth Rate\",\n    yaxis_title=\"Rate (%)\"\n)\nfig.update_yaxes(range=[100, 135])\nfig.show()","7fc598bd":"# rate = df_growth[\"Rate\"].mean() \/ 100\nrate = df_growth[\"Rate\"].iloc[:7].median() \/ 100\nprint(f\"Rate used: {rate:.4f}\")\ndf_test = pd.read_csv('..\/input\/covid19-local-us-ca-forecasting-week-1\/ca_test.csv')\npublic_leaderboard_start_date = \"2020-03-12\"\nlast_public_leaderboard_train_date = \"2020-03-11\"\npublic_leaderboard_end_date  = \"2020-03-26\"\n\ncases  = df[df[\"Date\"]==last_public_leaderboard_train_date][\"ConfirmedCases\"].values[0] * (rate)\ndf_test.insert(1, \"ConfirmedCases\", 0)\nfor i in range(15):\n    df_test.loc[i, \"ConfirmedCases\"] = cases\n    cases = cases * rate  \ndf_test.head()","d08cae4f":"# Reference: https:\/\/plot.ly\/python\/time-series\/\nfig = go.Figure(\n    [\n        go.Scatter(x=df['Date'], y=df['ConfirmedCases'], name=\"actual\"),\n        go.Scatter(x=df_test['Date'].iloc[:15], y=df_test['ConfirmedCases'], name=\"predicted\"),\n    ],\n    layout_title_text=\"Confirmed Cases in California\"\n)\nfig.update_layout(\n    yaxis_type=\"log\",\n    margin=dict(l=20, r=20, t=50, b=20),\n    template=\"plotly_white\")\nfig.show()","d29bfb01":"# Reference: https:\/\/plot.ly\/python\/time-series\/\nfig = go.Figure(\n    [go.Scatter(x=df['Date'], y=df['Fatalities'])],\n    layout_title_text=\"Fatalities in California\"\n)\nfig.update_layout(\n    yaxis_type=\"log\",\n    margin=dict(l=20, r=20, t=50, b=20),\n    template=\"plotly_white\")\nfig.show()","aeebe779":"df_growth = pd.DataFrame({\n    \"Date\": df[\"Date\"].iloc[1:].values,\n    \"Rate\": df[\"Fatalities\"].iloc[1:].values \/ df[\"Fatalities\"].iloc[:-1].values * 100\n})\n# Reference: https:\/\/plot.ly\/python\/bar-charts\/\nfig = px.bar(df_growth, x='Date', y='Rate', width=600, height=400)\nfig.update_layout(\n    margin=dict(l=20, r=20, t=50, b=20),\n    template=\"plotly_white\",\n    title=\"Empirical Growth Rate\",\n    yaxis_title=\"Rate (%)\"\n)\nfig.update_yaxes(range=[100, 180])\nfig.show()","82324732":"rate = df_growth[\"Rate\"].iloc[:7].median() \/ 100\nprint(f\"Rate used: {rate:.4f}\")\ndf_test = pd.read_csv('..\/input\/covid19-local-us-ca-forecasting-week-1\/ca_test.csv')\npublic_leaderboard_start_date = \"2020-03-12\"\nlast_public_leaderboard_train_date = \"2020-03-11\"\npublic_leaderboard_end_date  = \"2020-03-26\"\n\ncases  = df[df[\"Date\"]==last_public_leaderboard_train_date][\"Fatalities\"].values[0] * (rate)\ndf_test.insert(1, \"Fatalities\", 0)\nfor i in range(15):\n    df_test.loc[i, \"Fatalities\"] = cases\n    cases = cases * rate  \ndf_test.head()","52f0f883":"# Reference: https:\/\/plot.ly\/python\/time-series\/\nfig = go.Figure(\n    [\n        go.Scatter(x=df['Date'], y=df['Fatalities'], name=\"actual\"),\n        go.Scatter(x=df_test['Date'].iloc[:15], y=df_test['Fatalities'], name=\"predicted\"),\n    ],\n    layout_title_text=\"Fatalities in California\"\n)\nfig.update_layout(\n    yaxis_type=\"log\",\n    margin=dict(l=20, r=20, t=50, b=20),\n    template=\"plotly_white\")\nfig.show()","9ead008a":"### Empirical Growth Rate\n`2 ** (1 \/ 4) = 1.1892` growth rate seems to be too low. Let's get a new estimate from the empirical data.","fcfc31d9":"Using the median rate to make predictions:\n\n(Note: taking the median actually uses future information, but the alternative is using only one data point. So the better way is probably to use the estimate from first 7 data points and see if it'll hold for the next week.)","bf1ac1e7":"## Fatalities","90660f26":"## Confirmed Cases","36c4880f":"(Updated on March 27)","0323fd9f":"### 4-Day Doubling Baseline\nSource: [Sample Submission: 4-Day Doubling Baseline](https:\/\/www.kaggle.com\/benhamner\/sample-submission-4-day-doubling-baseline)"}}