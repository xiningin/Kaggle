{"cell_type":{"451bcab8":"code","d7a15d4b":"code","67bb7811":"code","31af0d09":"code","9c1365ca":"code","765042b7":"code","cc4d5e1d":"code","e5c4abdd":"code","66f9a42b":"code","46090309":"code","b13e42f8":"code","29daf88d":"code","a483e979":"code","7cc0ade2":"code","eead3f51":"code","8844c55e":"code","0f975e04":"code","215f57bf":"code","62b696f1":"code","81e69b77":"code","5e5e0da9":"code","9d0c091e":"code","32efa50b":"code","29583305":"code","acc05487":"code","24f04bd3":"code","ca4e7236":"code","37f52e70":"code","e2a20697":"code","5f315d2d":"code","0988a3fb":"code","d53abc56":"code","249d2a2e":"code","d001465e":"code","7e37db03":"markdown","9948536c":"markdown","3582b51b":"markdown","44f03c99":"markdown","e1cfd72a":"markdown","2e20c32e":"markdown","1a814b7e":"markdown","0de19ae2":"markdown","b7f59ad8":"markdown","81547b6c":"markdown","2ed70446":"markdown","e8cfc219":"markdown","187c3242":"markdown","30e4d6a8":"markdown","b8be5f68":"markdown","c6b881ef":"markdown","28ea53d0":"markdown","21bcb6eb":"markdown","b0df1bf2":"markdown","6df12265":"markdown","a0ab4166":"markdown","ce457f9d":"markdown","739c5256":"markdown","bea0144a":"markdown","3602e838":"markdown","5b89f555":"markdown","0ea1808a":"markdown","e5143aea":"markdown","960e3a16":"markdown","52b7d0eb":"markdown","808875a1":"markdown","b0d561df":"markdown","2c7b1086":"markdown","c4db5534":"markdown","c8d75fb6":"markdown","4d28ab92":"markdown","e44acb3a":"markdown","9d51b7e1":"markdown","f178d1d9":"markdown","ffa9c2c8":"markdown","442a317b":"markdown","823e748b":"markdown","38d91a58":"markdown","b3ddbc94":"markdown","9a5f6097":"markdown","bbe2f8d5":"markdown","583aaee8":"markdown","6e655abc":"markdown"},"source":{"451bcab8":"title: \"Case_Study_BIkes\"\nauthor: \"Gonzalo_Javier_Teruggi\"\ndate: \"9\/8\/2021\"\noutput: html_document","d7a15d4b":"\ninstall.packages(\"tidyverse\")\ninstall.packages(\"broom\", type=\"binary\")\nlibrary(tidyverse)\nlibrary(vroom)\nlibrary(corrplot)\nlibrary(RColorBrewer)","67bb7811":"csv_unmerged <- list.files(path = \"C:\/Users\/pc\/Desktop\/Cyclist\/divvy-tripdata-202004-2020106\", recursive = TRUE, full.names=TRUE)\n\n\ncyclistic_merged <- do.call(rbind, lapply(csv_files, read.csv_unmerged))\n\nglimpse(cyclistic_merged)","31af0d09":"cyclistic_no_dups <- cyclistic_merged[!duplicated(cyclistic_merged$ride_id), ]\nprint(paste(\"Removed\", nrow(cyclistic_merged) - nrow(cyclistic_no_dups), \"duplicated rows\"))\n","9c1365ca":"cyclistic_no_dups$started_at <- strptime(as.character(cyclistic_no_dups$started_at),\"%Y-%m-%d %H:%M:%S\")\ncyclistic_no_dups$ended_at <- strptime(as.character(cyclistic_no_dups$ended_at),\"%Y-%m-%d %H:%M:%S\")\n","765042b7":"cyclistic_no_dups <- cyclistic_no_dups %>%\n  mutate(time_rided = as.numeric(cyclistic_no_dups$ended_at - cyclistic_no_dups$started_at) \/ 60)\nsummary(cyclistic_no_dups$time_rided)\n","cc4d5e1d":"ventiles = quantile(cyclistic_no_dups$time_rided, seq(0, 1, by=0.05))\nventiles","e5c4abdd":"cyclistic_ventiled <- cyclistic_no_dups %>%\n  filter(time_rided > as.numeric(ventiles['5%'])) %>%\n  filter(time_rided < as.numeric(ventiles['95%']))\nprint(paste(\"Removed\", nrow(cyclistic_no_dups) - nrow(cyclistic_ventiled), \"rows as outliners\" ))\n","66f9a42b":"cyclistic_ventiled <- cyclistic_ventiled %>%\n  mutate(year = paste(strftime(cyclistic_ventiled$started_at, \"%Y\")))\n\nsummarise(cyclistic_ventiled, unique(x= year))","46090309":"cyclistic_ventiled <- cyclistic_ventiled%>%\n  mutate(month = paste(strftime(cyclistic_ventiled$started_at, \"%m\")))\n\nsummarise(cyclistic_ventiled, unique(x = month))","b13e42f8":"cyclistic_ventiled <- cyclistic_ventiled%>%\n  mutate(weekday = paste(strftime(cyclistic_ventiled$ended_at, \"%u\"), \"-\", strftime(cyclistic_ventiled$ended_at, \"%a\")))\n\nsummarise(cyclistic_ventiled, unique(x = weekday))","29daf88d":"cyclistic_ventiled <- cyclistic_ventiled %>%\n  mutate(starting_hour = paste(strftime(cyclistic_ventiled$started_at, \"%H\")))\n\nsummarise(cyclistic_ventiled, unique(x = starting_hour))","a483e979":"cyclistic_ventiled <- cyclistic_ventiled %>%\n  mutate(year_with_month = paste(strftime(cyclistic_ventiled$ended_at, \"%Y\"), \"-\", strftime(cyclistic_ventiled$ended_at, \"%m\")))\n\nsummarise(cyclistic_ventiled, unique(x = year_with_month))","7cc0ade2":"cyclistic_ventiled = filter(cyclistic_ventiled, year_with_month != \"2021 - 05\")","eead3f51":" getwd()  \n  setwd(\"C:\/Users\/pc\/Desktop\/Cyclist\/Clean_data_202004-202104\")","8844c55e":"write.csv(cyclistic_ventiled, \"cyclistic_clean_data_6_8_2021.csv\")","0f975e04":"cyclistic <- read.csv(\"cyclistic_clean_data_6_8_2021.csv\")  \n  \nfig <- function(width, heigth){options(repr.plot.width = width, repr.plot.height = heigth)}\n","215f57bf":"ggplot(cyclistic, aes(x = month, fill = member_casual)) + \n  labs(title = \"Chart 1 - Members Per Month\", subtitle = \"Divided by Type of Client\")+\n  scale_x_discrete(name =\"Yearly_Month\", \n                   limits=c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"))+\n  scale_y_continuous(name = \"Users\", \n                     labels = fixed )+ geom_bar()","62b696f1":"Chicago_mean_temp <- c(-3.2 , -1.2, 4.4, 10.5, 16.6, 22.2, 24.8, 23.9, 19.9, 12.9, 5.8, -0.3)\nMonth <- c(\"001 - Abril\", \"002 - Mayo\", \"003 - Junio\", \n          \"004 - Julio\", \"005 - Agosto\", \"006 - Septiembre\", \n          \"007 - Octubre\", \"008 - Noviembre\", \"009 - Diciembre\",\n          \"010 - Enero\", \"011 - Febrero\", \"012 - Marzo\")\n\n\ndata.frame(Month, Chicago_mean_temp)%>%\n  ggplot(aes(x = Month, y = Chicago_mean_temp)) +\nlabs(x=\"Month\", y=\"Mean temperature\", title=\"Chart 2 - Mean temperature for Chicago (1991-2020)\") +\n  guides(x = guide_axis(n.dodge = 1, angle = 45)) +\n  geom_col()","81e69b77":"With subq1 as (\nSELECT extract(year FROM trip_start_timestamp) as year\n,extract(month FROM trip_start_timestamp) as month\n,extract(dayofweek from trip_start_timestamp ) as day_of_week\n,extract (date from trip_start_timestamp ) AS date22\nfrom `bigquery-public-data.chicago_taxi_trips.taxi_trips`  )\n\nselect \n    countif(year = 2020 and Month = 4) as april2020\n,countif(year = 2020 and Month = 5) as may2020\n,countif(year = 2020 and Month = 6) as june2020\n,countif(year = 2020 and Month = 7) as july2020\n,countif(year = 2020 and Month = 8) as august2020\n,countif(year = 2020 and Month = 9) as sept2020\n,countif(year = 2020 and Month = 10) as oct2020\n,countif(year = 2020 and Month = 11) as nov2020\n,countif(year = 2020 and Month = 12) as decem2020\n,countif(year = 2021 and Month = 1) as Jan2021\n,countif(year = 2021 and Month = 2) as feb2021\n,countif(year = 2021 and Month = 3) as mar2021 from subq1\nwhere date22 between \"2020-04-01\" and \"2021-03-31\"","5e5e0da9":"taxi_ride <- c(\t55623\n                ,71660\n                ,102830\n                ,130557\n                ,142879\n                ,162913\n                ,177794\n                ,142678\n                ,149057\n                ,147192\n                ,155261\n                ,208691\n)\n\ndata.frame(Month, taxi_ride)%>%\n  ggplot(aes(x=Month, y = taxi_ride)) + \n  labs(x=\"Month\", y=\"taxi rides\", title=\"Chart 2.1 - Taxi rides in chicago \") + \n  guides(x = guide_axis(n.dodge = 1, angle = 45)) + geom_col()","9d0c091e":"Unemployement_rate <- c(17.9 , 17.70, 18, 15.90, 15.80, 15, 10.8, 10.7, 10.10, 10.40, 10.10, 9)\n\ndata.frame(Month, Unemployement_rate)%>%\n  ggplot(aes(x=Month, y = Unemployement_rate)) + \n  labs(x=\"Month\", y=\"taxi rides\", title=\"Chart 2.2 Unemployement rate in chicago \") + \n  guides(x = guide_axis(n.dodge = 1, angle = 45)) + geom_col()","32efa50b":"cyclistic %>%\n  group_by(rideable_type) %>% \n  summarise(count = length(ride_id),\n            '%' = (length(ride_id) \/ nrow(cyclistic)) * 100,\n            'members_p' = (sum(member_casual == \"member\") \/ length(ride_id)) * 100,\n            'casual_p' = (sum(member_casual == \"casual\") \/ length(ride_id)) * 100,\n            'members_n' = (sum(member_casual == \"member\")),\n            'casual_n' = (sum(member_casual == \"casual\")))\n  ggplot(cyclistic, aes(x=rideable_type, fill=member_casual)) +\n    labs(title = \"Chart 3 - More popular bikes\", subtitle = \"Divided by type of clients\") +  \n    geom_bar() \n  ","29583305":"  cyclistic %>%\n    group_by(starting_hour) %>% \n    summarise(count = length(ride_id),\n              '%' = (length(ride_id) \/ nrow(cyclistic)) * 100,\n              'members_p' = (sum(member_casual == \"member\") \/ length(ride_id)) * 100,\n              'casual_p' = (sum(member_casual == \"casual\") \/ length(ride_id)) * 100,\n              'members_n' = (sum(member_casual == \"member\")),\n              'casual_n' = (sum(member_casual == \"casual\")))\n  ggplot(cyclistic, aes(x=starting_hour, fill=member_casual)) +\n  labs(title = \"Chart 3.1 - More popular hours\", subtitle = \"Divided by type of clients\") +  \n   geom_bar() ","acc05487":"  cyclistic %>%\n    group_by(weekday) %>% \n    summarise(count = length(ride_id),\n              '%' = (length(ride_id) \/ nrow(cyclistic)) * 100,\n              'members_p' = (sum(member_casual == \"member\") \/ length(ride_id)) * 100,\n              'casual_p' = (sum(member_casual == \"casual\") \/ length(ride_id)) * 100,\n              'members_n' = (sum(member_casual == \"member\")),\n              'casual_n' = (sum(member_casual == \"casual\")))\n  ggplot(cyclistic, aes(x= weekday, fill=member_casual)) +\n    labs(title = \"Chart 3.2 - More popular weekdays\", subtitle = \"Divided by type of clients and days\") +  \n    geom_bar() ","24f04bd3":"   cyclistic %>%\n    group_by(rideable_type) %>% \n    summarise(count = length(ride_id),\n              '100%' = (length(ride_id) \/ nrow(cyclistic)) * 100,\n              'members_p' = (sum(member_casual == \"member\") \/ length(ride_id)) * 100,\n              'casual_p' = (sum(member_casual == \"casual\") \/ length(ride_id)) * 100,\n              'members_n' = (sum(member_casual == \"member\")),\n              'casual_n' = (sum(member_casual == \"casual\")))\n  ggplot(cyclistic, aes(x= year_with_month, fill= rideable_type)) +\n    labs(title = \"Chart 3.3 - More popular Months\", subtitle = \"Divided by type of bikes\") +\n    guides(x = guide_axis(n.dodge = 1, angle = 45)) +\n    geom_bar() ","ca4e7236":"  cyclistic %>%\n    filter(year_with_month == '2020 - 04')%>%\n    group_by(rideable_type) %>% \n    summarise(count = length(ride_id),\n              '100%' = (length(ride_id) \/ nrow(cyclistic %>%\n                                                 filter(year_with_month == '2020 - 04'))) * 100,\n              'members_p' = (sum(member_casual == \"member\") \/ length(ride_id)) * 100,\n              'casual_p' = (sum(member_casual == \"casual\") \/ length(ride_id)) * 100,\n              'members_n' = (sum(member_casual == \"member\")),\n              'casual_n' = (sum(member_casual == \"casual\")))\n\n  ggplot((  cyclistic %>%\n              filter(year_with_month == '2020 - 04')),aes(x=rideable_type, fill=member_casual)) +\n    labs(title = \"Chart 3.3.3 - Most used bike 2020 - 04\", subtitle = \"Divided by type of clients\") + \n    guides(x = guide_axis(n.dodge = 1, angle = 45)) + \n    geom_bar()  ","37f52e70":"rideable_type count `100%` members_p casual_p members_n casual_n\n  <chr>         <int>  <dbl>     <dbl>    <dbl>     <int>    <int>\n1 docked_bike   77857    100      73.8     26.2     57487    20370","e2a20697":" cyclistic %>%\n    filter(year_with_month == '2021 - 03')%>%\n    group_by(rideable_type) %>% \n    summarise(count = length(ride_id),\n              '100%' = (length(ride_id) \/ nrow(cyclistic %>%\n                                              filter(year_with_month == '2021 - 03'))) * 100,\n              'members_p' = (sum(member_casual == \"member\") \/ length(ride_id)) * 100,\n              'casual_p' = (sum(member_casual == \"casual\") \/ length(ride_id)) * 100,\n              'members_n' = (sum(member_casual == \"member\")),\n              'casual_n' = (sum(member_casual == \"casual\")))\n  ggplot((  cyclistic %>%\n              filter(year_with_month == '2021 - 03')),aes(x=rideable_type, fill=member_casual)) +\n    labs(title = \"Chart 3.3.4 - Most used bike 2021 - 03\", subtitle = \"Divided by type of clients\") + \n    guides(x = guide_axis(n.dodge = 1, angle = 45)) + \n    geom_bar()  ","5f315d2d":"rideable_type  count `100%` members_p casual_p members_n casual_n\n  <chr>          <int>  <dbl>     <dbl>    <dbl>     <int>    <int>\n1 classic_bike  140062  67.5       70.9     29.1     99259    40803\n2 docked_bike    12711   6.12       0      100           0    12711\n3 electric_bike  54765  26.4       61.9     38.1     33904    20861\n>","0988a3fb":"  cyclistic %>%\n    filter(year_with_month == '2020 - 07')%>%\n    filter(weekday == '7 - dom.')%>%\n    group_by(rideable_type) %>% \n    summarise(count = length(ride_id),\n              '%' = (length(ride_id) \/ nrow(cyclistic)) * 100,\n              'members_p' = (sum(member_casual == \"member\") \/ length(ride_id)) * 100,\n              'casual_p' = (sum(member_casual == \"casual\") \/ length(ride_id)) * 100,\n              'members_n' = ((count = length(ride_id))\/((sum(member_casual == \"member\") \/ length(ride_id)) * 100)),\n              'casual_n' = ((count = length(ride_id))\/((sum(member_casual == \"casual\") \/ length(ride_id)) * 100)),\n              'member_casual_perc_difer' = members_p - casual_p,\n              'member_casual_nom_difer' = members_n - casual_n)","d53abc56":"cyclistic%>%\n    group_by(member_casual)%>%\n    summarise(count = length(ride_id),\n      'Total' = (length(ride_id)\/nrow(cyclistic))*100,\n      'docked_bike_member' = sum(rideable_type == 'docked_bike') \/ (sum(member_casual == 'member')) *100,\n      'classic_bike_member' = sum(rideable_type == 'classic_bike') \/ (sum(member_casual == 'member')) *100,\n      'electric_bike_member' = sum(rideable_type == 'electric_bike') \/ (sum(member_casual == 'member')) *100)\n      ","249d2a2e":"   cyclistic%>%\n        group_by(member_casual)%>%\n        summarise(count = length(ride_id),\n      'Total' = (length(ride_id)\/nrow(cyclistic))*100,\n      'docked_bike_casual' = sum(rideable_type == 'docked_bike') \/ (sum(member_casual == 'casual')) *100,\n      'classic_bike_casual' = sum(rideable_type == 'classic_bike') \/ (sum(member_casual == 'casual')) *100,\n      'electric_bike_casual' = sum(rideable_type == 'electric_bike') \/ (sum(member_casual == 'casual')) *100)\n  ","d001465e":"  ggplot(cyclistic, aes(x=rideable_type, y=time_rided, fill= member_casual)) +\n    labs(title = \"Chart 4 - Time rided Per Bike\", subtitle = \"Divided by type of Client\", x = \"Type Of Bike\", y = \"Time Rided\") +\n      geom_boxplot()\n  ","7e37db03":"8.1.1\u00b0 First Weather","9948536c":"We can see that are some Bugs into the Data, the max time_rided is \"58720.03\" and the minimum is \"-29049.97\", that are some impossible numbers or not common, so we will delete them to ensure the cleanse of the data.","3582b51b":"8.3\u00b0 Most popular Type of Bike Rided, in the months","44f03c99":"### **Guiding questions**\n\n**Where is your data located?**\n\n*Google Cloud Storage, Public_Dataset,*\n\n\n**How is the data organized?**\n\n*ZipFiles, Excel spreadsheets organized by Months, Public datasets.*\n\n\n**Are there issues with bias or credibility in this data? Does your data ROCCC?**\n\n*There is no issues with the credibility of the data it comes from Google, Bigquery, and a Public Government database. So we can say that is reliable, original, comprehensive, current and cited*\n\n\n**How are you addressing licensing, privacy, security, and accessibility?**\n\n*The data does not have any private information about the bikers*\n\n\n**How did you verify the data\u2019s integrity?**\n\n*All the data have consistent columns, even though there are too much blank spaces in some section, the data shows consistency across the board*\n\n\n**How does it help you answer your question?**\n\n*The data might show us some patterns in members and a way to transform casual to members*\n\n\n**Are there any problems with the data?**\n\n*Like I said before, some blank spaces could make an incomplete picture.*\n","e1cfd72a":"3\u00b0 Get the time rided by the users","2e20c32e":"![Rplot07.png](attachment:197a222e-80e3-4685-b9e5-0d222e439fa3.png)","1a814b7e":"![Rplot.png](attachment:e6ccf49c-251c-47e3-8fb8-5d165cceb50e.png)","0de19ae2":"![Rplot08.png](attachment:35e9b4f4-748d-4594-9acf-e477dc8e0788.png)","b7f59ad8":"  ggplot(cyclistic, aes(x=rideable_type, y=time_rided, fill= member_casual)) +\n    labs(title = \"Chart 4 - Time rided Per Bike\", subtitle = \"Divided by type of Client\", x = \"Type Of Bike\", y = \"Time Rided\") +\n    geom_boxplot() + facet_wrap(~ member_casual)","81547b6c":"**8.1\u00b0 Lets get some enviromental factors into the mix**","2ed70446":"## **CLEAN DATA**\n","e8cfc219":"## **Introduction to the Case_Study_1**\n### **This is my Version of the google Study_Case_1**\n\nIn 2016, Cyclistic launched a successful bike-share offering. Since then, the program has grown to a fleet of 5,824 bicycles that\nare geotracked and locked into a network of 692 stations across Chicago. The bikes can be unlocked from one station and\nreturned to any other station in the system anytime.\nUntil now, Cyclistic\u2019s marketing strategy relied on building general awareness and appealing to broad consumer segments.\nOne approach that helped make these things possible was the flexibility of its pricing plans: single-ride passes, full-day passes,\nand annual memberships. Customers who purchase single-ride or full-day passes are referred to as casual riders. Customers\nwho purchase annual memberships are Cyclistic members.\nCyclistic\u2019s finance analysts have concluded that annual members are much more profitable than casual riders. Although the\npricing flexibility helps Cyclistic attract more customers, Moreno believes that maximizing the number of annual members will\nbe key to future growth. Rather than creating a marketing campaign that targets all-new customers, Moreno believes there is a\nvery good chance to convert casual riders into members. She notes that casual riders are already aware of the Cyclistic\nprogram and have chosen Cyclistic for their mobility needs.\nMoreno has set a clear goal: Design marketing strategies aimed at converting casual riders into annual members. In order to\ndo that, however, the marketing analyst team needs to better understand how annual members and casual riders differ, why\ncasual riders would buy a membership, and how digital media could affect their marketing tactics. Moreno and her team are\ninterested in analyzing the Cyclistic historical bike trip data to identify trends","187c3242":"### Dependences\n\nThe main dependence will be Tidyverse, but we will put an extra package called \"broom\".","30e4d6a8":"8.2\u00b0 Ok What is the most popular Day","b8be5f68":"8.4.1\u00b0 What does July tell us about our users","c6b881ef":"![Rplot01.png](attachment:bade0b7b-7c95-4c70-9d5f-2a229e1d85a0.png)","28ea53d0":"5.1\u00b0 Years First","21bcb6eb":"8.4\u00b0 Lets find out what our least popular month says about our users, their type of bike and time rided, lets narrow the vision","b0df1bf2":"5.3\u00b0 Insert a Weekday Column","6df12265":"8.1.2\u00b0 Does Taxi Rides increase or decrease the same time our active users increase?","a0ab4166":"## **IMPORT DATA**\n\nAll the CSV files will be merged into one, so we can work more fluentli","ce457f9d":"6.2\u00b0 Now lets save our \"Cyclistic_Ventiled\" Dataset, Rembember there are 13 Months inside this CSV file","739c5256":"![Rplot04.png](attachment:9c4e4c0a-4beb-4693-b51d-ddd4d94e772b.png)","bea0144a":"2\u00b0 Ensure Datetime in columns with time calls","3602e838":"![Rplot03.png](attachment:4843d70c-7fef-48eb-b653-2026e53a1b04.png)","5b89f555":"7\u00b0 Lets call our clean CSV file, and prepare for ploting","0ea1808a":"# **Prepare**\n\nThe project will use the data provided by Google. Also we will use a Public_dataset in Big_Query, and a Government databese.","e5143aea":"6\u00b0 We can say that the data is Clean and without bugs, Lets save the data in a single CSV file.","960e3a16":"8.4.2\u00b0 So, the least popular month is July and the Least popular day is a Sunday, what bike does our users use in this day and month and what type of user are they","52b7d0eb":"1\u00b0 Remove Duplicates","808875a1":"**Deliverable**\n\n*A description of all data sources used*\n\nThis is the data I will use, April 2020 to April 2021 so 13 months \n","b0d561df":"5.4\u00b0 An Starting Hour will be useful","2c7b1086":"![Rplot02.png](attachment:ab999a81-c0a0-4f9c-b449-fefdf9bb0af9.png)","c4db5534":"5.5.1\u00b0 We can see that there is 14 Months, which is May of 2021 the one that we dont need, so lets filter it out.","c8d75fb6":"6.1\u00b0 Lets set up or WD first to save or CSV","4d28ab92":"8\u00b0Lets see our users pero month divided by type of client ","e44acb3a":"## **ANALYSE DATA**","9d51b7e1":"***The CLEANING DATA has finished so lets clean the enviroment to have the data organized into 1*** \n","f178d1d9":"5.2\u00b0 Months Second","ffa9c2c8":"![Rplot05.png](attachment:cc66b9a9-b59e-4e27-9e68-3a1aa854b0df.png)","442a317b":"# **Ask**\n\nGuiding questions\n\n* What is the problem you are trying to solve?\n\n* Why casual Riders would buy a membership.\n \n* How can your insights drive business decisions?\n\n\n\n\n\n**1.\tIdentify the business task**\n\n**2.\tConsider key stakeholders**\n\n\n**Deliverable**\n\nFind Diferences between members and casuals.","823e748b":"8.1.2.1\u00b0 First lets find some Taxi data from big_query, we will use a subquery with SQL to extract the data from a public database.","38d91a58":"![Rplot09.png](attachment:6f87e61b-cb12-4e2c-9c2a-ed6e819c2f66.png)","b3ddbc94":"5.5\u00b0 Last but not Least, Months with year specified","9a5f6097":"4\u00b0 Ok, we will take the quartiles from 5% to 95% ","bbe2f8d5":"![Rplot06.png](attachment:f9c9aec4-a695-4994-a27c-a3b85a80d79f.png)","583aaee8":"8.1.3\u00b0 Last lets see the Unemployement Rate","6e655abc":"5\u00b0 Lets make Columns for Years, Months, Weekday, Starting_hours, Year_with_months"}}