{"cell_type":{"deb993ac":"code","c3ecd8a9":"code","aa66b6cb":"code","c93e15f3":"code","57142cc4":"code","b394e561":"code","7487ce3e":"code","39d461ad":"code","284db1f1":"code","bd083214":"code","6f792a5c":"code","69e02149":"code","2247320c":"code","e8c47171":"code","ede49cca":"code","4a4c2e48":"code","1eacc106":"code","75ab4fbd":"code","b86d0730":"code","58bf7772":"code","d6a9d1b6":"code","a5a321ba":"code","9535390f":"code","7004d905":"code","6b01f8e4":"code","45ab1968":"code","c4ee52e4":"code","e1a6685b":"code","dfda6f92":"code","a84e7fda":"code","30cdba11":"code","03636cc2":"code","5526ba32":"code","d0487a4a":"code","f32e5c9c":"code","e8186118":"markdown","42808df8":"markdown","edc65856":"markdown","79f97806":"markdown","a5c15b2d":"markdown","b4cce6c9":"markdown","80c6a5d9":"markdown"},"source":{"deb993ac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn import preprocessing as prep\nfrom sklearn.cluster import KMeans\nimport plotly.express as px\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c3ecd8a9":"df=pd.read_csv(\"\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv\")\ndf.head()","aa66b6cb":"df.describe()","c93e15f3":"df.info()","57142cc4":"df.corr()","b394e561":"import seaborn as sns\nimport matplotlib.pyplot as plt\nheatmap=sns.heatmap(df.corr(),vmax=1, vmin=-1,annot=True,cmap=\"BrBG\")\nplt.figure(figsize=(16, 6))","7487ce3e":"df.tail()","39d461ad":"df.columns","284db1f1":"df=df.rename(columns={'Spending Score (1-100)':\"score\",'Annual Income (k$)':\"annualinc\"})","bd083214":"df=df.drop([\"CustomerID\"],axis=1)\n","6f792a5c":"df.head()","69e02149":"px.histogram(df,x=\"score\")\n","2247320c":"df.Gender.value_counts().plot(kind=\"bar\")","e8c47171":"px.histogram(df,x=\"annualinc\",color=\"score\")","ede49cca":"sns.scatterplot(x=\"annualinc\",y=\"score\",hue=\"Gender\",data=df)","4a4c2e48":"sns.regplot(x=\"annualinc\",y=\"score\",data=df)","1eacc106":"sns.scatterplot(x=\"Age\",y=\"score\",hue=\"Gender\",data=df)","75ab4fbd":"sns.regplot(x=\"Age\",y=\"score\",data=df)","b86d0730":"df.head()","58bf7772":"new_df= prep.StandardScaler().fit_transform(df.iloc[:,1:])\nnew_df = pd.DataFrame(new_df, columns=[ 'Age', 'annualinc', 'score'])","d6a9d1b6":"new_df.head()","a5a321ba":"X1=new_df.iloc[:,[1,2]].values\nX1","9535390f":"Error =[]\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i).fit(X1)\n    kmeans.fit(X1)\n    Error.append(kmeans.inertia_)\n\nplt.plot(range(1, 11), Error)\nplt.title('Elbow method')\nplt.xlabel('No of clusters')\nplt.ylabel('Error')\nplt.show()\n\n","7004d905":"kmeans1=KMeans(n_clusters = 5).fit(X1)\ny_pred1=kmeans1.fit_predict(X1)\nprint(y_pred1)","6b01f8e4":"plt.scatter(X1[:,0],X1[:,1],c=y_pred1,cmap=\"rainbow\")\n","45ab1968":"f1=kmeans1.cluster_centers_\nplt.scatter(X1[:,0],X1[:,1],c=y_pred1,cmap=\"rainbow\")\nplt.scatter(x = f1[: , 0] , y =  f1[: , 1] , s = 300 , c = 'red' , alpha = 0.5)\nplt.xlabel(\"annual income\")\nplt.ylabel(\"Score\")\nplt.figure(figsize=(16,6))\nplt.show()","c4ee52e4":"X2=new_df.iloc[:,[0,2]].values\nX2","e1a6685b":"Error =[]\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i).fit(X2)\n    kmeans.fit(X2)\n    Error.append(kmeans.inertia_)\n\nplt.plot(range(1 , 11) , Error , 'x')\nplt.plot(range(1 , 11) , Error , '-' , alpha = 0.5)\n\nplt.title('Elbow method')\nplt.xlabel('No of clusters')\nplt.ylabel('Error')\nplt.show()\n","dfda6f92":"kmeans2=KMeans(n_clusters = 5).fit(X2)\ny_pred2=kmeans2.fit_predict(X2)\nprint(y_pred2)","a84e7fda":"f2=kmeans2.cluster_centers_\nplt.scatter(X2[:,0],X2[:,1],c=y_pred2,cmap=\"rainbow\")\nplt.scatter(x = f2[: , 0] , y =  f2[: , 1] , s = 300 , c = 'red' , alpha = 0.5)\nplt.xlabel(\"Age\")\nplt.ylabel(\"Score\")\nplt.figure(figsize=(16,6))\nplt.show()","30cdba11":"X3=new_df.iloc[:,:].values\nX3","03636cc2":"Error =[]\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i).fit(X3)\n    kmeans.fit(X3)\n    Error.append(kmeans.inertia_)\n\nplt.plot(range(1 , 11) , Error , 'x')\nplt.plot(range(1 , 11) , Error , '-' , alpha = 0.5)\n\nplt.title('Elbow method')\nplt.xlabel('No of clusters')\nplt.ylabel('Error')\nplt.show()","5526ba32":"kmeans3=KMeans(n_clusters = 6).fit(X3)\ny_pred3=kmeans3.fit_predict(X3)\nprint(y_pred3)","d0487a4a":"f3=kmeans3.cluster_centers_\nf3","f32e5c9c":"\nfrom mpl_toolkits import mplot3d\nax = plt.axes(projection='3d')\n\n\n# Data for three-dimensional scattered points\nzdata = X3[:,2]\nxdata = X3[:,1]\nydata = X3[:,0]\nax.scatter3D(xdata, ydata, zdata, c=y_pred3, cmap='rainbow');\n\n\nax.set_xlabel(\"Annual income\")\nax.set_ylabel(\"Age\")\nax.set_zlabel(\"Score\")\n","e8186118":"# using k-means clustering to make some sense of this data","42808df8":"No proper relation exists.","edc65856":"# hope you like it. feel free to copy and edit .","79f97806":"better to take k=5 with lower error","a5c15b2d":"let's enhance it a bit","b4cce6c9":"no proper correlation exists","80c6a5d9":"Use \n1, annual income v\/s score\n2, age v\/s score\n3,annual income,age v\/s score"}}