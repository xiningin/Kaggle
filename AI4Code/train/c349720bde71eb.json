{"cell_type":{"d5129f67":"code","5caec645":"code","0bb7e680":"code","90e658f1":"code","80ec149a":"code","263e6e98":"code","68d63a99":"code","8d3f179c":"code","17a1fd11":"code","422929f9":"code","af2cd43c":"code","905b2a57":"code","39a99d99":"code","8a2562f6":"code","703cebc7":"code","4afc417b":"code","9b3170d5":"code","c6bdd3ec":"code","ba913ffc":"code","2375c261":"code","abe5fc6d":"code","4da4872a":"code","edcb756f":"markdown","31575033":"markdown","a811a2c4":"markdown","80ec4549":"markdown","3515ef49":"markdown","12204057":"markdown","0bb94d71":"markdown","d8c29094":"markdown","e267cfd8":"markdown","0b18501e":"markdown","5a368450":"markdown","7922eee6":"markdown","b8cd5641":"markdown","363de5ad":"markdown","d9636afb":"markdown","6e2633b3":"markdown","59ab7c9f":"markdown","c31d74df":"markdown","86afe522":"markdown","c23dea9f":"markdown","f9163991":"markdown","f976380a":"markdown","667e4d8f":"markdown","e39d3813":"markdown","343e3259":"markdown"},"source":{"d5129f67":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sb","5caec645":"# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0bb7e680":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","90e658f1":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","80ec149a":"full_data = pd.concat([train_data, test_data])\nfull_data.head()","263e6e98":"train_data.info()","68d63a99":"sb.barplot(x='Sex', y='Survived', data=train_data)","8d3f179c":"sb.barplot(x='Pclass',y='Survived',data=train_data)","17a1fd11":"sb.barplot(x='SibSp', y='Survived', data=train_data)","422929f9":"sb.barplot(x='Parch', y='Survived', data=train_data)","af2cd43c":"sb.countplot(x='Embarked', hue='Survived', data=train_data)","905b2a57":"facet = sb.FacetGrid(data=train_data, hue=\"Survived\", aspect=2)\nfacet.map(sb.kdeplot,'Age',shade= True)\nfacet.set(xlim=(0, train_data.Age.max()))\nfacet.add_legend()\nplt.xlabel('Age') \nplt.ylabel('density') ","39a99d99":"full_data['Title'] = full_data['Name'].apply(lambda x:x.split(',')[1].split('.')[0].strip())\nTitle_Dict = {}\nTitle_Dict.update(dict.fromkeys(['Capt', 'Col', 'Major', 'Dr', 'Rev'], 'Officer'))\nTitle_Dict.update(dict.fromkeys(['Don', 'Sir', 'the Countess', 'Dona', 'Lady'], 'Royalty'))\nTitle_Dict.update(dict.fromkeys(['Mme', 'Ms', 'Mrs'], 'Mrs'))\nTitle_Dict.update(dict.fromkeys(['Mlle', 'Miss'], 'Miss'))\nTitle_Dict.update(dict.fromkeys(['Mr'], 'Mr'))\nTitle_Dict.update(dict.fromkeys(['Master','Jonkheer'], 'Master'))\n\nfull_data['Title'] = full_data['Title'].map(Title_Dict)\nsb.barplot(x=\"Title\", y=\"Survived\", data=full_data)","8a2562f6":"full_data['FamilySize'] = full_data['SibSp'] + full_data['Parch'] + 1\nsb.barplot(x=\"FamilySize\", y=\"Survived\", data=full_data)","703cebc7":"def FamilyLabel(s):\n    if s >= 2 and s <= 4:\n        return 0\n    elif s == 1 or s == 7:\n        return 1\n    elif s == 5 or s == 6:\n        return 2\n    else:\n        return 3\nfull_data['FamilyLabel']=full_data['FamilySize'].apply(FamilyLabel)\nsb.barplot(x=\"FamilyLabel\", y=\"Survived\", data=full_data)","4afc417b":"Ticket_Count = dict(full_data['Ticket'].value_counts())\nfull_data['TicketGroup'] = full_data['Ticket'].apply(lambda x:Ticket_Count[x])\nsb.barplot(x='TicketGroup', y='Survived', data=full_data)","9b3170d5":"def TicketLabel(s):\n    if s >= 2 and s <= 4:\n        return 0\n    elif (s >= 5 and s <= 8) or s == 1:\n        return 1\n    else:\n        return 2\nfull_data['TicketLabel']=full_data['TicketGroup'].apply(TicketLabel)\nsb.barplot(x=\"TicketLabel\", y=\"Survived\", data=full_data)","c6bdd3ec":"full_data.isnull().sum()","ba913ffc":"full_data['Fare'] = full_data['Fare'].fillna(full_data['Fare'].median())\nfull_data['Embarked'] = full_data['Embarked'].fillna(full_data['Embarked'].mode()[0])\nfull_data.isnull().sum()","2375c261":"from sklearn.ensemble import RandomForestRegressor\n\nage_df = full_data[['Age', 'Pclass','Sex','Title']]\nage_df=pd.get_dummies(age_df)\nknown_age = age_df[age_df.Age.notnull()].values\nunknown_age = age_df[age_df.Age.isnull()].values\ny = known_age[:, 0]\nX = known_age[:, 1:]\nrfr = RandomForestRegressor(random_state=0, n_estimators=100, n_jobs=-1)\nrfr.fit(X, y)\npredictedAges = rfr.predict(unknown_age[:, 1:])\nfull_data.loc[ (full_data.Age.isnull()), 'Age' ] = predictedAges\nfull_data.isnull().sum()","abe5fc6d":"full_data['Cabin'] = full_data['Cabin'].fillna('Unknown')\nfull_data['CabinLabel']=full_data['Cabin'].apply(lambda x:x[0])\nsb.barplot(x=\"CabinLabel\", y=\"Survived\", data=full_data)","4da4872a":"from sklearn.linear_model import LogisticRegression\n\nPassengerId = test_data['PassengerId']\nfeatures = ['Survived','Sex','Pclass','Embarked','Age','Title','FamilyLabel','TicketLabel','CabinLabel']\nfull_data = pd.get_dummies(full_data[features])\ntrain_data = full_data[full_data.Survived.notnull()]\ntest_data = full_data[full_data.Survived.isnull()]\n\nX = train_data.values[:,1:]\ny = train_data.values[:,0]\nX_test = test_data.values[:,1:]\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, y)\npredictions = model.predict(X_test).astype(np.int32)\n\noutput = pd.DataFrame({'PassengerId': PassengerId, 'Survived': predictions})\noutput.to_csv('submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","edcb756f":"## 0x03. \u6570\u636e\u5206\u6790","31575033":"### 2) \u52a0\u8f7d\u6d4b\u8bd5\u96c6","a811a2c4":"Age\u7f3a\u5931\u8f83\u591a\uff0c\u7528Sex, Title, Pclass\u4e09\u4e2a\u7279\u5f81\u6784\u5efa\u968f\u673a\u68ee\u6797\u6a21\u578b\uff0c\u586b\u5145\u7f3a\u5931\u503c\u3002","80ec4549":"\u2463 Parch Feature\uff1a\u76f4\u7cfb\u4eb2\u53cb\u6570\u91cf\u9002\u4e2d\u7684\u4e58\u5ba2\u5b58\u6d3b\u51e0\u7387\u9ad8","3515ef49":"\u2467 FamilyLabel Feature(New)\uff1a\u5bb6\u5ead\u4eba\u6570\u4e3a2\u52304\u7684\u4e58\u5ba2\u5e78\u5b58\u7387\u8f83\u9ad8\n\u65b0\u589eFamilyLabel\u7279\u5f81\uff0c\u5148\u8ba1\u7b97FamilySize=Parch+SibSp+1\uff0c\u7136\u540e\u628aFamilySize\u5206\u4e3a\u4e09\u7c7b\u3002","12204057":"\u2460 Sex Feature\uff1a\u5973\u6027\u5b58\u6d3b\u7387\u8fdc\u9ad8\u4e8e\u7537\u6027","0bb94d71":"\u2465 Age Feature\uff1a\u4ece\u4e0d\u540c\u751f\u8fd8\u60c5\u51b5\u7684\u5bc6\u5ea6\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u5e74\u9f8410\u5c81\u7684\u5de6\u4fa7\uff0c\u751f\u8fd8\u7387\u6709\u660e\u663e\u5dee\u522b\uff0c\u5bc6\u5ea6\u56fe\u975e\u4ea4\u53c9\u533a\u57df\u9762\u79ef\u975e\u5e38\u5927\uff0c\u4f46\u5728\u5176\u4ed6\u5e74\u9f84\u6bb5\uff0c\u5219\u5dee\u522b\u4e0d\u662f\u5f88\u660e\u663e\u3002","d8c29094":"\u5176\u4e2dEmbarked\u548cFare\u7684\u7f3a\u5931\u503c\u8f83\u5c11\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u4f17\u6570\u548c\u4e2d\u4f4d\u6570\u586b\u8865\u3002","e267cfd8":"\u6309\u7167\u751f\u8fd8\u7387\u5206\u4e3a\u4e09\u7c7b\uff1a","0b18501e":"\u9996\u5148\u6765\u770b\u7f3a\u5931\u6570\u636e\uff0c\u4e0a\u56fe\u663e\u793aAge\uff0cCabin\uff0cEmbarked\uff0cFare\u8fd9\u4e9b\u53d8\u91cf\u5b58\u5728\u7f3a\u5931\u503c\uff08Survived\u662f\u9884\u6d4b\u503c\uff09\u3002","5a368450":"## 0x02. \u52a0\u8f7d\u6570\u636e\n### 1) \u52a0\u8f7d\u8bad\u7ec3\u96c6","7922eee6":"\u2462 SibSp Feature\uff1a\u65c1\u7cfb\u4eb2\u53cb\u6570\u91cf\u9002\u4e2d\u7684\u4e58\u5ba2\u5b58\u6d3b\u51e0\u7387\u9ad8","b8cd5641":"\u2466 Title Feature(New)\uff1a\u4e0d\u540c\u79f0\u547c\u7684\u4e58\u5ba2\u5e78\u5b58\u7387\u4e0d\u540c\n\u65b0\u589eTitle\u7279\u5f81\uff0c\u4ece\u59d3\u540d\u4e2d\u63d0\u53d6\u4e58\u5ba2\u7684\u79f0\u547c\uff0c\u5f52\u7eb3\u4e3a\u516d\u7c7b\u3002","363de5ad":"\u2464 Embarked Feature\uff1a\u53ef\u4ee5\u770b\u5230C\u6e2f\u53e3\u7684\u751f\u5b58\u51e0\u7387\u6700\u9ad8\uff0cQ\u6e2f\u53e3\u5176\u6b21\uff0cS\u6e2f\u53e3\u6700\u4f4e","d9636afb":"### 2) \u6570\u636e\u521d\u6b65\u5206\u6790","6e2633b3":"### 3) \u6570\u636e\u6e05\u6d17","59ab7c9f":"### 1) \u603b\u4f53\u9884\u89c8\n* PassengerID\uff08ID\uff09\n* Survived\uff08\u5b58\u6d3b\u4e0e\u5426\uff09\n* Pclass\uff08\u5ba2\u8231\u7b49\u7ea7\uff0c\u8f83\u4e3a\u91cd\u8981\uff09\n* Name\uff08\u59d3\u540d\uff0c\u53ef\u63d0\u53d6\u51fa\u66f4\u591a\u4fe1\u606f\uff09\n* Sex\uff08\u6027\u522b\uff0c\u8f83\u4e3a\u91cd\u8981\uff09\n* Age\uff08\u5e74\u9f84\uff0c\u8f83\u4e3a\u91cd\u8981\uff09\n* Parch\uff08\u76f4\u7cfb\u4eb2\u53cb\u6570\u91cf\uff09\n* SibSp\uff08\u65c1\u7cfb\u4eb2\u53cb\u6570\u91cf\uff09\n* Ticket\uff08\u7968\u7f16\u53f7\uff09\n* Fare\uff08\u7968\u4ef7\uff09\n* Cabin\uff08\u5ba2\u8231\u7f16\u53f7\uff09\n* Embarked\uff08\u4e0a\u8239\u7684\u6e2f\u53e3\u7f16\u53f7\uff09","c31d74df":"Cabin\u56e0\u4e3a\u7f3a\u5f97\u592a\u591a\uff0c\u4e0d\u597d\u586b\u5145\u3002\u53ef\u4ee5\u8003\u8651\u65b0\u589eDeck\u7279\u5f81\uff0c\u5148\u628aCabin\u7a7a\u7f3a\u503c\u586b\u5145\u4e3a'Unknown'\uff0c\u518d\u63d0\u53d6Cabin\u4e2d\u7684\u9996\u5b57\u6bcd\u6784\u6210\u4e58\u5ba2\u7684\u7532\u677f\u53f7\u3002","86afe522":"## 0x04. \u4f7f\u7528\u903b\u8f91\u56de\u5f52\u6a21\u578b\u9884\u6d4b","c23dea9f":"## 0x00. \u5bfc\u5305","f9163991":"\u2468 TicketLabel Feature(New)\uff1a\u7968\u662f\u53ef\u4ee5\u51e0\u4e2a\u4eba\u5171\u7528\u7684\uff0c\u4e0e2\u81f34\u4eba\u5171\u7968\u53f7\u7684\u4e58\u5ba2\u5e78\u5b58\u7387\u8f83\u9ad8\n\u65b0\u589eTicketLabel\u7279\u5f81\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u4e58\u5ba2\u7684\u5171\u7968\u53f7\u6570\u3002","f976380a":"## 0x05. \u53c2\u8003\n* [Titanic Tutorial](https:\/\/www.kaggle.com\/alexisbcook\/titanic-tutorial)\n* [kaggle\u5165\u95e8--\u6cf0\u5766\u5c3c\u514b\u53f7\u4e4b\u707e(\u624b\u628a\u624b\u6559\u4f60)](https:\/\/www.jianshu.com\/p\/e79a8c41cb1a)","667e4d8f":"\u2461 Pclass Feature\uff1a\u5ba2\u8231\u7b49\u7ea7\u9ad8\u7684\u4e58\u5ba2\u5b58\u6d3b\u51e0\u7387\u9ad8","e39d3813":"### 3) \u5408\u5e76\u4e24\u4e2a\u6570\u636e\u96c6","343e3259":"## 0x01. \u67e5\u770b\u6587\u4ef6\u8def\u5f84"}}