{"cell_type":{"7029c6c5":"code","cdc8d83a":"code","a5cc2832":"code","0b60f925":"code","7aea965e":"code","d612dc04":"code","5419d850":"code","09409da7":"code","788b3ad5":"code","30d5faf2":"code","9033b4ed":"code","316870c1":"code","566c5ff8":"code","4e175f03":"code","f1526bb1":"code","646543ab":"code","268945cd":"code","c6dbbffc":"code","ae64eab4":"code","f485daed":"code","8de25e40":"code","360c0da2":"code","1901d3a8":"code","05f67ccd":"code","8369ff52":"code","718724b7":"code","35b54f14":"code","0a409528":"code","505df592":"code","98babddc":"code","c12fd323":"code","5904f286":"code","bd894731":"code","c113c86c":"code","65a09433":"code","77ac9586":"code","9795d3a9":"code","b2b1dc50":"code","04e78ccd":"code","1a2a24ea":"code","e12686f7":"code","80c827a4":"code","a0dd9eda":"code","0485a39a":"code","f4b0cab1":"code","28c4a7e7":"code","4f92181f":"code","43f52308":"code","a6696662":"code","be2a6d30":"code","51455452":"code","f53e4e36":"markdown","e5a443d9":"markdown","dcd7f12d":"markdown","c89c5298":"markdown","12f359b4":"markdown","e6d4d609":"markdown","3852d948":"markdown","1a3fa39f":"markdown","ae8bb248":"markdown","6d409c2f":"markdown","67f47fc4":"markdown","a61481ec":"markdown","ed2a8f34":"markdown","0a822213":"markdown","8a584359":"markdown","a763aa63":"markdown","0c3f4049":"markdown","247a61b2":"markdown"},"source":{"7029c6c5":"### Importing all the relevant libraries ###\n\nimport numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\n\nfrom scipy.stats import shapiro, levene\nimport scipy.stats as stats\nimport statistics","cdc8d83a":"### Read in the data ###\ndata = pd.read_csv('..\/input\/insurance\/insurance (2).csv')\nprint(data.shape)\ndata.head()","a5cc2832":"data.info()","0b60f925":"### Convert BMI to proper encodings ###\ndef bmi_encoder(x):\n  if x < 18.5:\n    return 'underweight'\n  elif x < 25:\n    return 'normal'\n  elif x < 30:\n    return 'overweight'\n  else:\n    return 'obese'","7aea965e":"data['bmi'] = data['bmi'].apply(lambda x: bmi_encoder(x))\ndata.head()","d612dc04":"### Distribution of various Variables with Insurance Charges ###\n\nfig, ax = plt.subplots(nrows=2, ncols=3,figsize =(15,8))\n\nax[0,0].bar(x=data.groupby(by=['age']).agg({'charges': 'mean'}).reset_index()['age'], height=data.groupby(by=['age']).agg({'charges': 'mean'}).reset_index()['charges'], color='g')\nax[0,0].title.set_text('Age')\n\nax[0,1].bar(x=data.groupby(by=['sex']).agg({'charges': 'mean'}).reset_index()['sex'], height=data.groupby(by=['sex']).agg({'charges': 'mean'}).reset_index()['charges'], color = 'y')\nax[0,1].title.set_text('Gender')\n\nax[0,2].bar(x=data.groupby(by=['bmi']).agg({'charges': 'mean'}).reset_index()['bmi'], height=data.groupby(by=['bmi']).agg({'charges': 'mean'}).reset_index()['charges'], color = 'r')\nax[0,2].title.set_text('BMI')\n\nax[1,0].bar(x=data.groupby(by=['children']).agg({'charges': 'mean'}).reset_index()['children'], height=data.groupby(by=['children']).agg({'charges': 'mean'}).reset_index()['charges'], color = 'b')\nax[1,0].title.set_text('Number of Children')\n\nax[1,1].bar(x=data.groupby(by=['smoker']).agg({'charges': 'mean'}).reset_index()['smoker'], height=data.groupby(by=['smoker']).agg({'charges': 'mean'}).reset_index()['charges'], color = 'grey')\nax[1,1].title.set_text('Smokers vs Non Smokers')\n\nax[1,2].bar(x=data.groupby(by=['region']).agg({'charges': 'mean'}).reset_index()['region'], height=data.groupby(by=['region']).agg({'charges': 'mean'}).reset_index()['charges'], color='m')\nax[1,2].title.set_text('Region')\n\nplt.show()","5419d850":"smoker_insurance_charges = data[data['smoker'] == 'yes']['charges']\nnon_smoker_insurance_charges = data[data['smoker'] == 'no']['charges']","09409da7":"### Step 1 - Check if data is normally Distributed ###\n### The Shapiro-Wilk test tests the null hypothesis that the ###\n### data was drawn from a normal distribution ###\n### If pValue is < 0.05, distribution is not normal ###\n\nsmoker_dist = shapiro(smoker_insurance_charges)\nnon_smoker_dist = shapiro(non_smoker_insurance_charges)\n\nprint('pvalue for smoker Distribution: ', smoker_dist[1])\nprint('pvalue for non smoker Distribution: ', non_smoker_dist[1])","788b3ad5":"fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(10,5))\n\nax[0].hist(x=smoker_insurance_charges, bins=15, color = 'g')\nax[0].title.set_text('Smoker Insurance Charge Distribution')\n\nax[1].hist(x=non_smoker_insurance_charges, bins=15, color = 'grey')\nax[1].title.set_text('Non Smoker Insurance Charge Distribution')\n\nplt.show()\n\nprint('Here we clearly see that both the variables do not follow a normal distribution')","30d5faf2":"### Step 2: Testing if both distributions have equal variance or not ###\n###The Levene test tests the null hypothesis that all input samples###\n### are from populations with equal variances.  Levene's test is an ###\n### alternative to Bartlett's test bartlett in the case where ###\n### there are significant deviations from normality. ###\n\nlavene_test = levene(smoker_insurance_charges, non_smoker_insurance_charges)\n\nprint('pvalue for equal variance: ', lavene_test[1])\nprint('Variance of Smokers Insurance Charges', statistics.variance(smoker_insurance_charges))\nprint('Variance of Non Smokers Insurance Charges', statistics.variance(non_smoker_insurance_charges))\nprint('Var Smoker \/ Var Non Smoker', statistics.variance(smoker_insurance_charges)\/statistics.variance(non_smoker_insurance_charges))","9033b4ed":"### Step 3: Since the distributions are not Normal ###\n### and does not have equal variance so we use MannWhitney T Test ###\n\ndifferent = stats.mannwhitneyu(smoker_insurance_charges, non_smoker_insurance_charges, alternative='two-sided')\nsm_charge_lt_nsm = stats.mannwhitneyu(smoker_insurance_charges, non_smoker_insurance_charges, alternative='less')\nsm_charge_gt_nsm = stats.mannwhitneyu(smoker_insurance_charges, non_smoker_insurance_charges, alternative='greater')\n\nif different[1] < 0.05:\n  print('The 2 distributions are Different')\n\nif sm_charge_lt_nsm[1] < 0.05:\n  print('Smokers have less charges than Non Smokers')\n\nif sm_charge_gt_nsm[1] < 0.05:\n  print('Smokers have more charges than Non Smokers')","316870c1":"male_insurance_charges = data[data['sex'] == 'male']['charges']\nfemale_insurance_charges = data[data['sex'] == 'female']['charges']","566c5ff8":"male_dist = shapiro(male_insurance_charges)\nfemale_dist = shapiro(female_insurance_charges)\n\nprint('pvalue for Male Distribution: ', male_dist[1])\nprint('pvalue for Female Distribution: ', female_dist[1])","4e175f03":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize =(15,8))\n\nax[0].hist(male_insurance_charges, bins =15, color='g')\nax[0].title.set_text('Male Insurance Charge Distribution')\n\nax[1].hist(female_insurance_charges, bins =15, color='y')\nax[1].title.set_text('Female Insurance Charge Distribution')\n\nplt.show()\n\nprint('The distribution of MAle and Female Insurance charge follow approximate Chi Sq distribution')","f1526bb1":"lavene_test_mf = levene(male_insurance_charges, female_insurance_charges, center='median')\n\nprint('pvalue for equal variance: ', lavene_test_mf[1])\nprint('Variance of Smokers Insurance Charges', statistics.variance(male_insurance_charges))\nprint('Variance of Non Smokers Insurance Charges', statistics.variance(female_insurance_charges))\nprint('Var Smoker \/ Var Non Smoker', statistics.variance(male_insurance_charges)\/statistics.variance(female_insurance_charges))","646543ab":"### Here 1 of the 2 main assumptions of T\/Z test is voilated ###\n### Which is assumption of Normal Distribution ###\n### If the Distribution would have been normal, we may have used ###\n### T test with unequal Variances ###\n\ndifferent_mf = stats.mannwhitneyu(male_insurance_charges, female_insurance_charges, alternative='two-sided')\nm_charge_lt_f = stats.mannwhitneyu(male_insurance_charges, female_insurance_charges, alternative='less')\nm_charge_gt_f = stats.mannwhitneyu(male_insurance_charges, female_insurance_charges, alternative='greater')\n\nif different_mf[1] < 0.05:\n  print('The 2 distributions are Different')\n\nif m_charge_lt_f[1] < 0.05:\n  print('Male have less charges than Female')\n\nif m_charge_gt_f[1] < 0.05:\n  print('Male have more charges than Female')","268945cd":"mf_t_diff = stats.ttest_ind(male_insurance_charges, female_insurance_charges, equal_var=False)","c6dbbffc":"c_insurance_charges = data[data['children'] > 0]['charges']\nnc_insurance_charges = data[data['children'] == 0]['charges']","ae64eab4":"c_dist = shapiro(c_insurance_charges)\nnc_dist = shapiro(nc_insurance_charges)\n\nprint('pvalue for Male Distribution: ', c_dist[1])\nprint('pvalue for Female Distribution: ', nc_dist[1])","f485daed":"fig, ax = plt.subplots(nrows=1, ncols=2,figsize =(15,8))\n\nax[0].hist(c_insurance_charges, bins =15, color='g')\nax[0].title.set_text('With Child Insurance Charge Distribution')\n\nax[1].hist(nc_insurance_charges, bins =15, color='y')\nax[1].title.set_text('Without Child Insurance Charge Distribution')\n\nplt.show()\n\nprint('The distribution of Insurance charges follow approximate Chi Sq distribution')","8de25e40":"lavene_test_c = levene(c_insurance_charges, nc_insurance_charges, center='median')\n\nprint('pvalue for equal variance: ', lavene_test_c[1])\nprint('Variance of Smokers Insurance Charges', statistics.variance(c_insurance_charges))\nprint('Variance of Non Smokers Insurance Charges', statistics.variance(nc_insurance_charges))\nprint('Var Smoker \/ Var Non Smoker', statistics.variance(c_insurance_charges)\/statistics.variance(nc_insurance_charges))","360c0da2":"### Here 1 of the 2 main assumptions of T\/Z test is voilated ###\n### Which is assumption of Normal Distribution ###\n### If the Distribution would have been normal, we may have used ###\n### T test with unequal Variances ###\n\ndifferent_c = stats.mannwhitneyu(c_insurance_charges, nc_insurance_charges, alternative='two-sided')\nc_charge_lt_nc = stats.mannwhitneyu(c_insurance_charges, nc_insurance_charges, alternative='less')\nc_charge_gt_nc = stats.mannwhitneyu(c_insurance_charges, nc_insurance_charges, alternative='greater')\n\nif different_c[1] < 0.05:\n  print('The 2 distributions are Different')\n\nif c_charge_lt_nc[1] < 0.05:\n  print('With Cildren have less charges than Without Cildren')\n\nif c_charge_gt_nc[1] < 0.05:\n  print('With Cildren have more charges than Without Cildren')","1901d3a8":"se = data[data['region'] == 'southeast']['charges']\nnw = data[data['region'] == 'northwest']['charges']\nsw = data[data['region'] == 'southwest']['charges']\nne = data[data['region'] == 'northeast']['charges']","05f67ccd":"se_dist = shapiro(se)\nnw_dist = shapiro(nw)\nsw_dist = shapiro(sw)\nne_dist = shapiro(ne)\n\nprint('pvalue for se Distribution: ', se_dist[1])\nprint('pvalue for nw Distribution: ', nw_dist[1])\nprint('pvalue for sw Distribution: ', sw_dist[1])\nprint('pvalue for ne Distribution: ', ne_dist[1])","8369ff52":"fig, ax = plt.subplots(nrows=2, ncols=2,figsize =(15,8))\n\nax[0,0].hist(se, bins =15, color='g')\nax[0,0].title.set_text('SE Insurance Charge Distribution')\n\nax[0,1].hist(nw, bins =15, color='y')\nax[0,1].title.set_text('NW Insurance Charge Distribution')\n\nax[1,0].hist(sw, bins =15, color='b')\nax[1,0].title.set_text('SW Insurance Charge Distribution')\n\nax[1,1].hist(ne, bins =15, color='r')\nax[1,1].title.set_text('NE Insurance Charge Distribution')\n\nplt.show()\n\nprint('The distribution of Insurance charges follow approximate Chi Sq distribution')","718724b7":"lavene_test_region = levene(se, nw, sw, ne, center='median')\n\nprint('pvalue for equal variance: ', lavene_test_region[1])\nprint('Variance for se', statistics.variance(se))\nprint('Variance for nw', statistics.variance(nw))\nprint('Variance for sw', statistics.variance(sw))\nprint('Variance for ne', statistics.variance(ne))\n\n# print('Var Smoker \/ Var Non Smoker', statistics.variance(c_insurance_charges)\/statistics.variance(nc_insurance_charges))","35b54f14":"### Kruskal Willis Test is Non Parametric Form of Anova ###\n### Anova requires Normal and Homogenity ###\n### Here our distribution is Not Normal but Homogenous ###\n### We'll use Kruskal Willis Test to check ###\n### Null hypothesis that the median of all of the groups are equal ###\n\nregion_test = stats.kruskal(se, nw, sw, ne)\nprint('pvalue for the Kruskal Test = ', region_test[1])\nif region_test[1] < 0.05:\n  print('Region Insuance Charge Distributions are Different')\nelse:\n  print('Region Insurance Charges have Similar Distributions')\n","0a409528":"uw = data[data['bmi'] == 'underweight']['charges']\nn = data[data['bmi'] == 'normal']['charges']\now = data[data['bmi'] == 'overweight']['charges']\no = data[data['bmi'] == 'obese']['charges']","505df592":"uw_dist = shapiro(uw)\nn_dist = shapiro(n)\now_dist = shapiro(ow)\no_dist = shapiro(o)\n\nprint('pvalue for uw Distribution: ', uw_dist[1])\nprint('pvalue for n Distribution: ', n_dist[1])\nprint('pvalue for ow Distribution: ', ow_dist[1])\nprint('pvalue for o Distribution: ', o_dist[1])","98babddc":"fig, ax = plt.subplots(nrows=2, ncols=2,figsize =(15,8))\n\nax[0,0].hist(uw, bins =15, color='g')\nax[0,0].title.set_text('UW Insurance Charge Distribution')\n\nax[0,1].hist(n, bins =15, color='y')\nax[0,1].title.set_text('N Insurance Charge Distribution')\n\nax[1,0].hist(ow, bins =15, color='b')\nax[1,0].title.set_text('OW Insurance Charge Distribution')\n\nax[1,1].hist(o, bins =15, color='r')\nax[1,1].title.set_text('O Insurance Charge Distribution')\n\nplt.show()\n\n# print('The distribution of Insurance charges follow approximate Chi Sq distribution')","c12fd323":"### Null hypothesis that all input samples are from populations with equal variances###\n\nlavene_test_bmi = levene(uw, n, ow, o, center='median',)\n\nprint('pvalue for equal variance: ', lavene_test_bmi[1])\nprint('Variance for uw', statistics.variance(uw))\nprint('Variance for n', statistics.variance(n))\nprint('Variance for ow', statistics.variance(ow))\nprint('Variance for o', statistics.variance(o))\n\n# print('Var Smoker \/ Var Non Smoker', statistics.variance(c_insurance_charges)\/statistics.variance(nc_insurance_charges))","5904f286":"### Kruskal Willis Test is Non Parametric Form of Anova ###\n### Anova requires Normal and Homogenity ###\n### Here our distribution is Not Normal but Homogenous ###\n### We'll use Kruskal Willis Test to check ###\n### Null hypothesis that the median of all of the groups are equal ###\n\nregion_test = stats.kruskal(uw, n, ow, o)\nprint('pvalue for the Kruskal Test = ', region_test[1])\nif region_test[1] < 0.05:\n  print('Insuance Charge Distributions are Different across BMI')\nelse:\n  print('Insurance Charges have Similar Distributions across BMI')","bd894731":"c0 = data[data['children'] == 0]['charges']\nc1 = data[data['children'] == 1]['charges']\nc2 = data[data['children'] == 2]['charges']\nc3 = data[data['children'] == 3]['charges']\nc4 = data[data['children'] == 4]['charges']\nc5 = data[data['children'] == 5]['charges']","c113c86c":"c0_dist = shapiro(c0)\nc1_dist = shapiro(c1)\nc2_dist = shapiro(c2)\nc3_dist = shapiro(c3)\nc4_dist = shapiro(c4)\nc5_dist = shapiro(c5)\n\nprint('pvalue for c0 Distribution: ', c0_dist[1])\nprint('pvalue for c1 Distribution: ', c1_dist[1])\nprint('pvalue for c2 Distribution: ', c2_dist[1])\nprint('pvalue for c3 Distribution: ', c3_dist[1])\nprint('pvalue for c4 Distribution: ', c4_dist[1])\nprint('pvalue for c5 Distribution: ', c5_dist[1])\n","65a09433":"fig, ax = plt.subplots(nrows=2, ncols=3,figsize =(15,10))\n\nax[0,0].hist(c0, bins =15, color='g')\nax[0,0].title.set_text('c0 Insurance Charge Distribution')\n\nax[0,1].hist(c1, bins =15, color='y')\nax[0,1].title.set_text('c1 Insurance Charge Distribution')\n\nax[0,2].hist(c2, bins =15, color='b')\nax[0,2].title.set_text('c2 Insurance Charge Distribution')\n\nax[1,0].hist(c3, bins =15, color='r')\nax[1,0].title.set_text('c3 Insurance Charge Distribution')\n\nax[1,1].hist(c4, bins =15, color='grey')\nax[1,1].title.set_text('c4 Insurance Charge Distribution')\n\nax[1,2].hist(c5, bins =15, color='brown')\nax[1,2].title.set_text('c5 Insurance Charge Distribution')\n\nplt.show()\n\n# print('The distribution of Insurance charges follow approximate Chi Sq distribution')","77ac9586":"### Null hypothesis that all input samples are from populations with equal variances###\n\nlavene_test_children = levene(c0, c1, c2, c3, c4, c5, center='median',)\n\nprint('pvalue for equal variance: ', lavene_test_children[1])\nprint('Variance for c0', statistics.variance(c0))\nprint('Variance for c1', statistics.variance(c1))\nprint('Variance for c2', statistics.variance(c2))\nprint('Variance for c3', statistics.variance(c3))\nprint('Variance for c4', statistics.variance(c4))\nprint('Variance for c5', statistics.variance(c5))\n\n# print('Var Smoker \/ Var Non Smoker', statistics.variance(c_insurance_charges)\/statistics.variance(nc_insurance_charges))","9795d3a9":"### Kruskal Willis Test is Non Parametric Form of Anova ###\n### Anova requires Normal and Homogenity ###\n### Here our distribution is Not Normal but Homogenous ###\n### We'll use Kruskal Willis Test to check ###\n### Null hypothesis that the median of all of the groups are equal ###\n\nchildren_test = stats.kruskal(c0, c1, c2, c3, c4, c5)\nprint('pvalue for the Kruskal Test = ', children_test[1])\nif children_test[1] < 0.05:\n  print('Insuance Charge Distributions are Different across # of Children')\nelse:\n  print('Insurance Charges have Similar Distributions across # of Children')","b2b1dc50":"contigency_gn_bmi = pd.crosstab(data['sex'], data['bmi']) \ncontigency_gn_bmi","04e78ccd":"# Chi-square test of independence. \nc, p_gn_bmi, dof, expected_gn_bmi = stats.chi2_contingency(contigency_gn_bmi) \n\n# Print the p-value\nprint(p_gn_bmi)\nprint(expected_gn_bmi)\n\n### The p values is not less than 0.05 so there is no statistical difference ###\n### between BMI distribution across gender ###\n### You can see the same from expected Gender BMI Distribution ###","1a2a24ea":"contigency_gen_regions= pd.crosstab(data['sex'], data['region']) \ncontigency_gen_regions","e12686f7":"# Chi-square test of independence. \nc, p_gen_regions, dof, expected_gen_regions = stats.chi2_contingency(contigency_gen_regions) \n\n# Print the p-value\nprint(p_gen_regions)\nprint(expected_gen_regions)","80c827a4":"contigency_gen_smoker= pd.crosstab(data['sex'], data['smoker']) \ncontigency_gen_smoker","a0dd9eda":"# Chi-square test of independence. \nc, p_gen_smoker, dof, expected_gen_smoker = stats.chi2_contingency(contigency_gen_smoker) \n\n# Print the p-value\nprint(p_gen_smoker)\nprint(expected_gen_smoker)","0485a39a":"contigency_reg_smoker= pd.crosstab(data['region'], data['smoker']) \ncontigency_reg_smoker","f4b0cab1":"# Chi-square test of independence. \nc, p_reg_smoker, dof, expected_reg_smoker = stats.chi2_contingency(contigency_reg_smoker) \n\n# Print the p-value\nprint(p_reg_smoker)\nprint(expected_reg_smoker)","28c4a7e7":"contigency_bmi_smoker= pd.crosstab(data['bmi'], data['smoker']) \ncontigency_bmi_smoker","4f92181f":"# Chi-square test of independence. \nc, p_bmi_smoker, dof, expected_bmi_smoker = stats.chi2_contingency(contigency_bmi_smoker) \n\n# Print the p-value\nprint(p_bmi_smoker)\nprint(expected_bmi_smoker)","43f52308":"contigency_reg_smoker_bmi = pd.crosstab(index= data['smoker'], columns = [data['sex'], data['bmi']]) \ncontigency_reg_smoker_bmi","a6696662":"# Chi-square test of independence. \nc, p_reg_smoker_bmi, dof, expected_reg_smoker_bmi = stats.chi2_contingency(contigency_reg_smoker_bmi) \n\n# Print the p-value\nprint(p_reg_smoker_bmi)\nprint(expected_reg_smoker_bmi)","be2a6d30":"contigency_reg_smoker_bmi_region = pd.crosstab(index= data['smoker'], columns = [data['sex'], data['bmi'], data['region']]) \ncontigency_reg_smoker_bmi_region","51455452":"# Chi-square test of independence. \nc, p_reg_smoker_bmi_region, dof, expected_reg_smoker_bmi_region = stats.chi2_contingency(contigency_reg_smoker_bmi_region) \n\n# Print the p-value\nprint(p_reg_smoker_bmi_region)\nprint(expected_reg_smoker_bmi_region)","f53e4e36":"### Smoker vs Regions","e5a443d9":"### Smoker vs Gender vs BMI","dcd7f12d":"### Smoker vs Gender","c89c5298":"### Gender and Region","12f359b4":"### Smoker vs BMI","e6d4d609":"## Multiple Populations","3852d948":"## Two Sample Tests","1a3fa39f":"# Hypotheses we could test after observing the data:\n\n\n**Two Sample Tests:**\n\n- Smokers have high insurance Charges\n- Insurance charge Remains similar across Genders\n- Having children does not affect insurance Charges\n\n**Multiple Populations:**\n\n- All 4 regions have similar insurance charges\n- Insurance Charges Differ across BMI Groups\n- Number of childern does not affect insurance charges\n\n**Non-Numeric Tests:**\n\n- Males and Females have different BMI distributions\n- Male Female Distribution is same across states\n- Many More in the section\n","ae8bb248":"### Gender Vs BMI","6d409c2f":"### Smoker vs Gender vs BMI vs Region","67f47fc4":"### Regions vs Insurance","a61481ec":"### Smokers vs Non Smoker Insurance Charge","ed2a8f34":"# Hypothesis Testing\n\nThe Dataset gave a good opportunity to try out real world hypothesis testing problems e.g. imagine a case where you cannot apply traditional testing techniques like Z test or T test or ANOVA because the data is not normal. Also, imagine if the data had unequal variances how would we handle such cases step by step?\n\nI have divided the hypothesis sections into:\n- Two Sample Tests\n- Multiple Sample Tests\n- Non Numeric Tests (chi2)\n\nThis notebook might get you started with such type of tests.\n\nThere are a few things to keep in mind though:\n- I have not done outlier treatment, the results may have been a bit different in that case. Also, outlier treatment cannot be directly done on Insurance Charge variable, there are many levels in the data, need to figure out the correct level to remove outliers\n- The code in every section can be converted into a function, for ease of understanding, I have not done that!","0a822213":"### Number of Children vs Insurance Charge","8a584359":"### Male vs Female Insurance Charge","a763aa63":"## Non Numeric Tests","0c3f4049":"### BMI vs Charges","247a61b2":"### Having vs Not Having Children"}}