{"cell_type":{"764a63c6":"code","f9e66b45":"code","880f3e5e":"code","27f14c3e":"code","2ffd7076":"code","6ac858bc":"code","2c1713df":"code","3f135d53":"code","a99c0d01":"code","723aa3b8":"markdown"},"source":{"764a63c6":"import numpy as np\nimport statistics\nimport pandas as pd\n# import cv2\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Conv2D, Flatten,MaxPooling2D\nimport matplotlib.image as mpimg\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nfrom PIL import Image\n# from os import walk\nimport os, glob","f9e66b45":"def create_data(dir):\n    pixels = []\n    hemmor_labels = []\n\n    height  = 64\n    width = 64\n    for infile in glob.glob(\"\/kaggle\/input\/brain-tumor-images-dataset\/Brain Tumor Images Dataset\/\"+dir+\"\/hemmorhage_data\/*.png\"):\n        img =  Image.open(infile)\n        img = img.resize((width, height), Image.ANTIALIAS).convert(\"RGB\")\n        img = np.asarray(img)\/255.0\n        img = img.tolist()\n        pixels.append(img)\n        hemmor_labels.append(1)\n\n    for infile in glob.glob(\"\/kaggle\/input\/brain-tumor-images-dataset\/Brain Tumor Images Dataset\/\"+dir+\"\/non_hemmorhage_data\/*.png\"):\n        img =  Image.open(infile)\n        img = img.resize((width, height), Image.ANTIALIAS).convert(\"RGB\")\n        img = np.asarray(img)\/255.0\n        img = img.tolist()\n        pixels.append(img)\n        hemmor_labels.append(0)\n\n    data = {\"pixels\" : pixels, \"hemmorhage\" :hemmor_labels }\n\n    data = pd.DataFrame(data)\n    data = data.sample(frac=1).reset_index(drop=True)\n    return data","880f3e5e":"train = create_data(\"training_set\")\nvalidation = create_data(\"valdation_set\")\ntrain= pd.concat([train,validation],axis=0)\nxtrain = train[\"pixels\"]\nxtrain = np.asarray(xtrain.to_numpy().tolist())\nytrain = train[[\"hemmorhage\"]]\nytrain = ytrain.to_numpy()\ntest = create_data(\"test_set\")\nxtest = test[\"pixels\"]\nxtest = np.asarray(xtest.to_numpy().tolist())\nytest = test[[\"hemmorhage\"]]\nytest = ytest.to_numpy()","27f14c3e":"model = Sequential()\n\nmodel.add(Conv2D(32,kernel_size= 3,padding='valid',activation='relu',input_shape=(64,64,3)))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\nmodel.add(Conv2D(32,kernel_size= 3,padding='valid',activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\nmodel.add(Conv2D(64,kernel_size= 3,padding='valid',activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\nmodel.add(Flatten())\nmodel.add(Dense(128,activation='relu'))\nmodel.add(Dense(64,activation='relu'))\nmodel.add(Dense(1,activation='sigmoid'))\n\nmodel.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","2ffd7076":"history = model.fit(xtrain, ytrain, validation_data=(xtest, ytest), epochs=30)","6ac858bc":"print(history.history.keys())","2c1713df":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='lower right')\nplt.show()","3f135d53":"plt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='lower right')\nplt.show() # which shows that the model is slightly overfitting","a99c0d01":"img =  Image.open(\"\/kaggle\/input\/brain-tumor-images-dataset\/Brain Tumor Images Dataset\/test_set\/hemmorhage_data\/003.png\")\nimgshow= np.asarray(img.resize((224, 224), Image.ANTIALIAS).convert(\"RGB\"))\nimg= np.asarray(img.resize((64, 64), Image.ANTIALIAS).convert(\"RGB\"))\n\nimgn = img\/255.0\nimgnlist = [imgn.tolist()]\n# print(imgnlist)\nyp = model.predict(np.asarray(imgnlist))\nprint(yp)\ntitle = \"hemmorhage\" if yp[0] >= 0.5 else \"nonhemmorhage\"\nplt.title(title)\nplt.imshow(np.asarray(imgshow))","723aa3b8":"Accuracy: 0.85 \nsame results as the vgg16\n\n\n"}}