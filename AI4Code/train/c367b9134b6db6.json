{"cell_type":{"a1ee41be":"code","946df4aa":"code","f309195b":"code","db5b5a24":"code","aeb74271":"code","b6502122":"code","0826ad49":"code","bb0bcb2e":"code","a904329f":"code","190b33b7":"code","5d36c6a4":"code","0f519452":"code","e8cdf72a":"code","32621eee":"code","82c304e7":"code","1510893e":"code","ce757b93":"code","7d3e6a27":"code","bad37251":"code","53e6f38b":"code","08e6e7e2":"code","baf999cb":"markdown","7bf49a4f":"markdown","8efc5464":"markdown"},"source":{"a1ee41be":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","946df4aa":"df = pd.read_csv('..\/input\/iris-flower-dataset\/IRIS.csv')\ndf","f309195b":"y = df.species","db5b5a24":"df.columns","aeb74271":"features = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width']\nX = df[features]\nX","b6502122":"X = df.drop(columns=['species'])\nX","0826ad49":"df","bb0bcb2e":"from sklearn.model_selection import train_test_split \ntrain_X, test_X, train_y, test_y = train_test_split(X, y)","a904329f":"train_X","190b33b7":"train_y","5d36c6a4":"test_X","0f519452":"test_X.shape","e8cdf72a":"from sklearn.naive_bayes import GaussianNB\nmodel = GaussianNB()","32621eee":"model.fit(train_X, train_y)","82c304e7":"preds = model.predict(test_X)","1510893e":"preds[:5]","ce757b93":"test_y[:5]","7d3e6a27":"from sklearn.metrics import accuracy_score \nprint(accuracy_score(y_true=test_y, y_pred=preds))","bad37251":"df.columns","53e6f38b":"test_example = pd.DataFrame(data={\n    'sepal_length': [4.9],\n    'sepal_width': [1.4], \n    'petal_length': [5.3], \n    'petal_width': [1.1]\n})","08e6e7e2":"model.predict(test_example)","baf999cb":"# prediction","7bf49a4f":"# train model ","8efc5464":"# define y, X, model"}}