{"cell_type":{"8eefdfa7":"code","8a7d6be0":"code","7b90af80":"code","dcbf07e2":"code","63b22e3a":"code","94c0500a":"code","e8d49ad9":"code","f7c329f3":"code","72ab094e":"code","e01d28f1":"code","770a7f0c":"code","4e161b0b":"code","be0996a8":"code","d4bbb02a":"code","c24bea5a":"code","f2b7b825":"code","d3487448":"code","22fce6ee":"code","6a62060c":"code","0b93e769":"code","bfc57b9f":"code","7f59d90c":"code","28d824ff":"code","1cc6c38f":"code","9dcad083":"code","5dc0f4ba":"code","c9d9d8fd":"code","15f8dfc9":"code","b55d5c81":"code","27319372":"code","4734986f":"code","32c7cb3b":"code","646f29bd":"code","2684df26":"code","85ab6739":"code","f38635da":"code","382cb804":"code","5319bc65":"code","58facce8":"code","f2d335ea":"code","d19d4581":"code","dd397eef":"code","4e8c5575":"code","069367cf":"code","3e394d67":"code","37117338":"code","3f4a1109":"code","ae430a85":"code","d700b769":"code","2333b25e":"code","6b156ddb":"code","a771eb8f":"code","5253c8f2":"code","25fcbe97":"code","b32a4e97":"code","1aa46c88":"markdown","8f847329":"markdown","3d927c92":"markdown","c5f2fcfb":"markdown","51ac9cfe":"markdown","41551deb":"markdown","b72908f9":"markdown","cef687d6":"markdown","5ce36043":"markdown","eb3fbe52":"markdown","1ae10639":"markdown","d1da8ba3":"markdown","454b4442":"markdown","876fd6d3":"markdown","f8fa5971":"markdown","4cfa8880":"markdown","89fbc396":"markdown","58ba4c9c":"markdown","c1ca5baa":"markdown","139a7d42":"markdown","e516243d":"markdown","67ceaa79":"markdown","3e1d301d":"markdown","34927dd5":"markdown","3dc73d3d":"markdown","194e84de":"markdown","0e6c7eab":"markdown","93dcf425":"markdown","00e2bd8e":"markdown","43b80c6d":"markdown","1d1526e8":"markdown","6a5abaf0":"markdown","734ab17c":"markdown","408d7f4e":"markdown","259f73e6":"markdown","f566d78e":"markdown","b51cf587":"markdown","e526ee14":"markdown","3565a84c":"markdown","870b45b3":"markdown"},"source":{"8eefdfa7":"import pandas as pd\nimport numpy as np\nimport math \nimport random \nfrom scipy import stats\nfrom statsmodels.stats.proportion import proportions_ztest\nfrom statsmodels.stats.anova import anova_lm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","8a7d6be0":"data = pd.read_csv('..\/input\/al-bundy-stats\/Al-Bundy_raw-data.csv')","7b90af80":"data.head()  # checking a few rows of the dataframe","dcbf07e2":"# Since Sales has increased every year it is a wise decision to invest in this company.\ndata['Year'].value_counts(ascending=True).plot.bar()   ","63b22e3a":"#The data has 14967 instances with 14 attributes,5 integer type, 4 float type and 5 object type.\nprint(data.info())","94c0500a":"print(data.isna().sum()) #null value check\n# There is no null value in any column","e8d49ad9":"data.drop('Size (Europe)',axis=1,inplace=True)\ndata.drop('Size (UK)',axis=1,inplace=True)","f7c329f3":"data.head()","72ab094e":"data.info()","e01d28f1":"data['InvoiceNo'] = data['InvoiceNo'].astype('object')\ndata['ProductID'] = data['ProductID'].astype('object')\ndata['Year'] = data['Year'].astype('object')\ndata['Month'] = data['Month'].astype('object')","770a7f0c":"data.info()","4e161b0b":"print(data.Gender.value_counts(),'\\n')\nprint(data.Country.value_counts(),'\\n')\nprint(data.Year.value_counts())","be0996a8":"us = data[data.Country == 'United States']\nger = data[data.Country == 'Germany']\ncan = data[data.Country == 'Canada']\nuk = data[data.Country == 'United Kingdom']","d4bbb02a":"min_m = data[data['Gender'] == 'Male']['Size (US)'].min()\nmax_m = data[data['Gender'] == 'Male']['Size (US)'].max()\nmin_f = data[data['Gender'] == 'Female']['Size (US)'].min()\nmax_f = data[data['Gender'] == 'Female']['Size (US)'].max()\nprint(\"Range of Shoe Sizes for Males: \",min_m,\" - \", max_m)\nprint(\"Range of Shoe Sizes for Females: \",min_f,\" - \", max_f)","c24bea5a":"male_size = data[data['Gender'] == 'Male']['Size (US)']\nfemale_size = data[data['Gender'] == 'Female']['Size (US)']","f2b7b825":"mean_us = np.mean(male_size)\nprint('Mean:',mean_us)\n\n# 9.5 is the median value but is finding median value the most accurate way to stock up lets find out ?\nmedian_us = (np.median(male_size))\nprint('Median:',median_us)\n\n# 9.5 - The shoe size with max demand.\nmode_us = (male_size.mode())\nprint('Mode:',mode_us)","d3487448":"mean_us = np.mean(female_size)\nprint('Mean:',mean_us)\n\n# 8.5 is the median value but is finding median value the most accurate way to stock up lets find out ?\nmedian_us = (np.median(female_size))\nprint('Median:',median_us)\n\n# 8.0 - The shoe size with max demand.\nmode_us = (female_size.mode())\nprint('Mode:',mode_us)","22fce6ee":"# compute the quartiles\nmq1 = data[data['Gender'] == 'Male']['Size (US)'].quantile(q=0.25)   # compute the first quartile\nmq2 = data[data['Gender'] == 'Male']['Size (US)'].quantile(q=0.50)   # compute the second quartile\nmq3 = data[data['Gender'] == 'Male']['Size (US)'].quantile(q=0.75)   # compute the third quartile\n#plt.title(\"\", fontsize = 20)\n#plt.xlabel(\"\", fontsize = 15)\nlocs,labels = [mq1,mq2,mq3],[mq1,mq2,mq3]           # get locations and labels","6a62060c":"plt.rcParams[\"figure.figsize\"] = [13,3]\ndata[data['Gender'] == 'Male']['Size (US)'].plot(kind='density') # plot the density plot the density plot\nplt.axvline(x = mq1, ymax=0.70, color='red', linestyle='--', label =\"First Quartile\")     # plot the first quartile\nplt.axvline(x = mq2, ymax=0.94, color='blue', linestyle='--', label =\"Second Quartile\")   # plot the second quartile\nplt.axvline(x = mq3, ymax=0.68, color='green', linestyle='--', label =\"Third Quartile\")   # plot the third quartile\nplt.legend(loc=\"best\", fontsize= 15)\nplt.ylabel(\"Density\", fontsize = 15)\nplt.xticks(locs, labels, fontsize = 15 )# set locations and labels\nplt.show()# to display the figure\nprint('More than 50 percent of the sales are of shoe sizes between 9 and 10.5')","0b93e769":"# compute the quartiles\nfq1 = data[data['Gender'] == 'Female']['Size (US)'].quantile(q=0.25)   # compute the first quartile\nfq2 = data[data['Gender'] == 'Female']['Size (US)'].quantile(q=0.50)   # compute the second quartile\nfq3 = data[data['Gender'] == 'Female']['Size (US)'].quantile(q=0.75)   # compute the third quartile\n#plt.title(\"\", fontsize = 20)\n#plt.xlabel(\"\", fontsize = 15)\nlocs,labels = [fq1,fq2,fq3],[fq1,fq2,fq3]           # get locations and labels","bfc57b9f":"plt.rcParams[\"figure.figsize\"] = [13,3]\ndata[data['Gender'] == 'Female']['Size (US)'].plot(kind='density') # plot the density plot the density plot\nplt.axvline(x = fq1, ymax=0.62, color='red', linestyle='--', label =\"First Quartile\")     # plot the first quartile\nplt.axvline(x = fq2, ymax=0.80, color='blue', linestyle='--', label =\"Second Quartile\")   # plot the second quartile\nplt.axvline(x = fq3, ymax=0.70, color='green', linestyle='--', label =\"Third Quartile\")   # plot the third quartile\nplt.legend(loc=\"best\", fontsize= 15)\nplt.ylabel(\"Density\", fontsize = 15)\nplt.xticks(locs, labels, fontsize = 15 )# set locations and labels\nplt.show()# to display the figure\nprint('More than 50 percent of the sales are of shoe sizes between 7.5 and 9')","7f59d90c":"min_m = ger[ger['Gender'] == 'Male']['Size (US)'].min()\nmax_m = ger[ger['Gender'] == 'Male']['Size (US)'].max()\nmin_f = ger[ger['Gender'] == 'Female']['Size (US)'].min()\nmax_f = ger[ger['Gender'] == 'Female']['Size (US)'].max()\nprint(\"Range of Shoe Sizes for Males: \",min_m,\" - \", max_m)\nprint(\"Range of Shoe Sizes for Females: \",min_f,\" - \", max_f)","28d824ff":"male_size = ger[ger['Gender'] == 'Male']['Size (US)']\nfemale_size = ger[ger['Gender'] == 'Female']['Size (US)']","1cc6c38f":"mean_us = np.mean(male_size)\nprint('Mean:',mean_us)\n\n# 9.5 is the median value but is finding median value the most accurate way to stock up lets find out ?\nmedian_us = (np.median(male_size))\nprint('Median:',median_us)\n\n# 9.5 - The shoe size with max demand.\nmode_us = (male_size.mode())\nprint('Mode:',mode_us)","9dcad083":"mean_us = np.mean(female_size)\nprint('Mean:',mean_us)\n\n# 8.5 is the median value but is finding median value the most accurate way to stock up lets find out ?\nmedian_us = (np.median(female_size))\nprint('Median:',median_us)\n\n# 8.0 - The shoe size with max demand.\nmode_us = (female_size.mode())\nprint('Mode:',mode_us)","5dc0f4ba":"# compute the quartiles\nmq1 = ger[ger['Gender'] == 'Male']['Size (US)'].quantile(q=0.25)   # compute the first quartile\nmq2 = ger[ger['Gender'] == 'Male']['Size (US)'].quantile(q=0.50)   # compute the second quartile\nmq3 = ger[ger['Gender'] == 'Male']['Size (US)'].quantile(q=0.75)   # compute the third quartile\n#plt.title(\"\", fontsize = 20)\n#plt.xlabel(\"\", fontsize = 15)\nlocs,labels = [mq1,mq2,mq3],[mq1,mq2,mq3]           # get locations and labels","c9d9d8fd":"plt.rcParams[\"figure.figsize\"] = [13,3]\nger[ger['Gender'] == 'Male']['Size (US)'].plot(kind='density') # plot the density plot the density plot\nplt.axvline(x = mq1, ymax=0.70, color='red', linestyle='--', label =\"First Quartile\")     # plot the first quartile\nplt.axvline(x = mq2, ymax=0.87, color='blue', linestyle='--', label =\"Second Quartile\")   # plot the second quartile\nplt.axvline(x = mq3, ymax=0.76, color='green', linestyle='--', label =\"Third Quartile\")   # plot the third quartile\nplt.legend(loc=\"best\", fontsize= 15)\nplt.ylabel(\"Density\", fontsize = 15)\nplt.xticks(locs, labels, fontsize = 15 )# set locations and labels\nplt.show()# to display the figure\nprint('More than 50 percent of the sales are of shoe sizes between 9 and 10.5')","15f8dfc9":"# compute the quartiles\nfq1 = ger[ger['Gender'] == 'Female']['Size (US)'].quantile(q=0.25)   # compute the first quartile\nfq2 = ger[ger['Gender'] == 'Female']['Size (US)'].quantile(q=0.50)   # compute the second quartile\nfq3 = ger[ger['Gender'] == 'Female']['Size (US)'].quantile(q=0.75)   # compute the third quartile\n#plt.title(\"\", fontsize = 20)\n#plt.xlabel(\"\", fontsize = 15)\nlocs,labels = [fq1,fq2,fq3],[fq1,fq2,fq3]           # get locations and labels","b55d5c81":"plt.rcParams[\"figure.figsize\"] = [13,3]\nger[ger['Gender'] == 'Female']['Size (US)'].plot(kind='density') # plot the density plot the density plot\nplt.axvline(x = fq1, ymax=0.66, color='red', linestyle='--', label =\"First Quartile\")     # plot the first quartile\nplt.axvline(x = fq2, ymax=0.95, color='blue', linestyle='--', label =\"Second Quartile\")   # plot the second quartile\nplt.axvline(x = fq3, ymax=0.75, color='green', linestyle='--', label =\"Third Quartile\")   # plot the third quartile\nplt.legend(loc=\"best\", fontsize= 15)\nplt.ylabel(\"Density\", fontsize = 15)\nplt.xticks(locs, labels, fontsize = 15 )# set locations and labels\nplt.show()# to display the figure\nprint('More than 50 percent of the sales are of shoe sizes between 7.5 and 9')","27319372":"series1 = data['Size (US)']\nseries2 = data['SalePrice']","4734986f":"# Central Limit Theorem\n\ndef central_limit_theorem(data,n_samples = 1000, sample_size = 500):\n    \"\"\" Use this function to demonstrate Central Limit Theorem. \n        data = 1D array, or a pd.Series\n        n_samples = number of samples to be created\n        sample_size = size of the individual sample \"\"\"\n    %matplotlib inline\n    import pandas as pd\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    min_value = 0  # minimum index of the data\n    max_value = data.count()  # maximum index of the data\n    b = {}\n    for i in range(n_samples):\n        x = np.unique(np.random.randint(min_value, max_value, size = sample_size)) # set of random numbers with a specific size\n        b[i] = data[x].mean()   # mean of each sample\n    c = pd.DataFrame()\n    c['sample'] = b.keys()  # sample number \n    c['Mean'] = b.values()  # mean of that particular sample\n    plt.figure(figsize= (15,4))\n\n    plt.subplot(1,2,2)\n    sns.distplot(c.Mean)\n    plt.title(f\"Sampling Distribution. \\n \\u03bc = {round(c.Mean.mean(), 3)} & SE = {round(c.Mean.std(),3)}\")\n    plt.xlabel('data')\n    plt.ylabel('freq')\n\n    plt.subplot(1,2,1)\n    sns.distplot(data)\n    plt.title(f\"Population Distribution. \\n \\u03bc = {round(data.mean(), 3)} & \\u03C3 = {round(data.std(),3)}\")\n    plt.xlabel('data')\n    plt.ylabel('freq')\n\n    plt.show()","32c7cb3b":"central_limit_theorem(series1,n_samples = 10, sample_size = 15) #Distributions for shoe size","646f29bd":"central_limit_theorem(series1,n_samples = 1000, sample_size = 500) #Distributions for shoe size","2684df26":"central_limit_theorem(series2,n_samples = 10, sample_size = 15) #Distributions for sale price","85ab6739":"central_limit_theorem(series2,n_samples = 1000, sample_size = 500) #Distributions for sale price","f38635da":"# Checking if average sales per store is the same in each country\n\n# H0 : mu_sales_germany = mu_sales_canada = mu_sales_uk = mu_sales_us\n# H1 : Average sales in atleast one combination of the above countries is not the same\n\npiv = pd.crosstab(columns = data[\"Country\"], index = data[\"Shop\"],values = data['SalePrice'], aggfunc = np.sum, dropna = False)\npiv.head(7)","382cb804":"canada = piv['Canada']\ncanada.dropna(inplace = True)\ngermany = piv['Germany']\ngermany.dropna(inplace = True)\nuk = piv['United Kingdom']\nuk.dropna(inplace = True)\nus = piv['United States']\nus.dropna(inplace = True)","5319bc65":"print('Shapiro Test .')\nprint(stats.shapiro(canada))     \nprint(stats.shapiro(germany))\nprint(stats.shapiro(uk))\nprint(stats.shapiro(us))\nprint('Shapiro Test failed for Canada and US.\\n')\n\nalpha = 0.05\ntest_stat, p_val = stats.kruskal(canada,germany,uk,us)\nprint(p_val,alpha)\nprint('Since the p-value < alpha, we can conclude that average sales in some of the countries or all of the countries are not the same.')\n\nprint('\\nGermany:',np.mean(germany),'\\nCanada:',np.mean(canada),'\\nUK:',np.mean(uk),'\\nUSA:',np.mean(us))","58facce8":"# Analysing if sale price of shoes for men and women is the same.\n\n# H0 : mu_male  = mu_female\n# H1 : mu_male != mu_female","f2d335ea":"ger=data[data['Country']=='Germany']\nmale=list(ger[ger['Gender']=='Male' ]['SalePrice'])\nfemale=list(ger[ger['Gender']=='Female']['SalePrice'])\nrandom.seed(50)\nsample_male=random.sample(population=male,k=40)\nsample_female=random.sample(population=female,k=40)","d19d4581":"#Shapiro Test\nprint(stats.shapiro(sample_male))\nprint(stats.shapiro(sample_female))\nprint('Data is normal since pvalue > 0.05\\n')\n#Levene Test\nprint(stats.levene(sample_male,sample_female)) \nprint('P-value > 0.05 which indicates variance is equal.\\n')\n#Ttest\nprint(stats.ttest_ind(sample_female,sample_male))\n\nprint('Since Pvalue > alpha, we fail to reject the Null Hypothesis.\\nPrice of an average purchase for male and female is approximately the same.\\n')\nprint('Result: There is no need for gender-specific advertisement because \\nsale for a male or a female brings in almost the same amount of revenue.')","dd397eef":"# Can I order shoes of same size for men and women\n\n# H0 : mu_male_shoe_size  = mu_female_shoe_size\n# H1 : mu_male_shoe_size  != mu_female_shoe_size","4e8c5575":"ger=data[data['Country']=='Germany']\nmale_shoe_size = list(ger[ger['Gender'] == 'Male']['Size (US)'])\nfemale_shoe_size = list(ger[ger['Gender'] == 'Female']['Size (US)'])","069367cf":"random.seed(50)\nsample_male = random.sample(population = male_shoe_size, k = 40)\nsample_female = random.sample(population = female_shoe_size, k = 40)\nprint(stats.shapiro(sample_male))\nprint(stats.shapiro(sample_female))\nprint('Data is normal since pvalue > 0.05.\\n')\n\nprint(stats.levene(sample_female,sample_male))\nprint('P-value > 0.05 which indicates variance is equal.\\n')\n\nprint(stats.ttest_ind(sample_female,sample_male))\nprint('Since p-value < alpha we Reject the Null Hypothesis.')\nprint('\\nResult: Average size of male shoe and female shoe is not the same.\\nSo shoes of same size cannot be ordered for men and women')","3e394d67":"## Checking if Average shoe size of female is less than the mean\n\n# H0 : female_mu_size >= 9\n# H1 : female_mu_size <  9  \n\nger=data[data['Country']=='Germany']\nalpha = 0.05\nfemale_shoe_size = list(ger[ger['Gender'] == 'Female']['Size (US)'])\nrandom.seed(4)\nsample_female = random.sample(population = female_shoe_size, k = 30)\n\nprint(stats.shapiro(sample_female))\nprint('Data is normal since pvalue > 0.05\\n')\n\n\nzstat,pvalue=stats.ttest_1samp(sample_female,9)\nprint(pvalue,alpha)\nprint('Pvalue < 0.05\\n')\nprint('Since p-value < alpha we reject the Null Hypothesis. So average size of female shoe is less than 9.')\nprint('Result : We should keep shoes below size 9 in higher quantity.')","37117338":"# H0 : male_mu_size >= 10\n# H1 : male_mu_size <  10\n\nger=data[data['Country']=='Germany']\nalpha = 0.05\nmale_shoe_size = list(ger[ger['Gender'] == 'Male']['Size (US)'])\n\nrandom.seed(5)\nsample_male = random.sample(population = male_shoe_size,k = 30)\n\nprint(stats.shapiro(sample_male))\n\nzstat,pvalue = stats.ttest_1samp(sample_male,10)\nprint(pvalue, alpha)\nprint('Since p-value > alpha we fail to reject the Null Hypothesis. So average size of male shoe is above 10.')\nprint('Result : We should keep shoes above size 10 in higher quantity.')\n","3f4a1109":"female = data[data.Gender == 'Female']\nFemale_Y2016 = female[female.Year == 2016]\nFemale_Y2016_Country = Female_Y2016[Female_Y2016.Country == 'Germany']\npiv = pd.crosstab(Female_Y2016_Country[\"Size (US)\"], Female_Y2016_Country[\"Month\"], dropna = False)\nstd = np.std(piv,axis=1)\nsum = 0\ncount = 0\nfor x in range(1,13):\n        sum += piv[x]\n        count += 1\nn = count\npiv['Total'] = sum                            # To find total number of shoes sold\npiv['Mean'] = sum\/n                           # To find average number of shoes sold per month\npiv['std'] = std\nlength = n\npiv['length'] = length\nse=piv['std']\/np.sqrt(piv['length'])\npiv['Standard Error'] = se                    # To account for any error in shoes sold each month","ae430a85":"# But keeping exact number of stock we may not be able to sell to every customer in case of a \n# sudden spike in demand seasonally or otherwise to avoid that we calculate confidence interval \n# Say we want to be 95% confident to supply to every customer\n\nalpha = 0.05\nzcrit = stats.norm.isf(alpha)\n\n# Finding confidence interval inorder to never be under stocked\npiv['Stock_to_maintain'] = round(piv['Mean'] + (zcrit*piv['Standard Error']))  \ntotal_shoes_sold = np.sum(piv['Stock_to_maintain'])\n#print(total_shoes_sold)\npiv[\"Percentile\"] = round((piv['Stock_to_maintain']\/total_shoes_sold)*100)     ","d700b769":"piv","2333b25e":"pur_plan = pd.read_csv('..\/input\/al-bundy-stats\/purchase_plan_female.csv')\nprint(pur_plan)","6b156ddb":"n = 350\nexpected = list((piv['Percentile']\/100)*350)\nprint(expected)\n\nobserved_plan = list(pur_plan['Female'])\nprint(observed_plan)\n\nprint(stats.chisquare(f_obs = observed_plan, f_exp = expected))\nprint('Pvalue < alpha so we reject Null Hypothesis.')\nprint('Result: Current purchase plan is not a good fit.')\nprint('\\n')","a771eb8f":"male = data[data.Gender == 'Male']\nMale_Y2016 = male[male.Year == 2016]\nMale_Y2016_Country = Male_Y2016[Male_Y2016.Country == 'Germany']\n\npiv1 = pd.crosstab(Male_Y2016_Country[\"Size (US)\"], Male_Y2016_Country[\"Month\"], dropna = False)\npiv1.columns\nstd = np.std(piv1,axis = 1)\n\nsum = 0\ncount = 0\nfor x in range(1,13):\n        sum += piv1[x]\n        count += 1\nn = count\npiv1['Total'] = sum                          # To find total number of shoes sold\npiv1['Mean'] = sum\/n                         # To find average number of shoes sold per month\npiv1['std'] = std\nlength = n\npiv1['length'] = length\nse = piv1['std']\/np.sqrt(piv1['length'])\npiv1['Standard Error'] = se                  # To account for any error in shoes sold each month\npiv1","5253c8f2":"# But keeping exact number of stock we may not be able to sell to every customer in case of a \n# sudden spike in demand seasonally or otherwise to avoid that we calculate confidence interval \n# Say we want to be 95% confident to supply to every customer\nalpha = 0.05\nzcrit = stats.norm.isf(alpha)\n\n# Finding confidence interval inorder to never be under stocked\n\npiv1['Stock_to_maintain'] = round(piv1['Mean'] + (zcrit*piv1['Standard Error']))\ntotal_shoes_sold = np.sum(piv1['Stock_to_maintain'])\n#print(total_shoes_sold)\npiv1[\"Percentile\"] = round((piv1['Stock_to_maintain']\/total_shoes_sold)*100)","25fcbe97":"piv1","b32a4e97":"pur_plan = pd.read_csv('..\/input\/al-bundy-stats\/Purchase_plan_male.csv')\nn = 350\nexpected = list((piv1['Percentile']\/100)*350)\nprint(expected)\nobserved_plan = list(pur_plan['Male'])\nprint(observed_plan)\nprint(len(expected),len(observed_plan))\nprint(stats.chisquare(f_obs = observed_plan, f_exp = expected))\nprint('Pvalue > alpha so we reject Null Hypothesis.')\nprint('Result: Current purchase plan is a good fit.')","1aa46c88":"### For Females","8f847329":"## Range of Shoe Sizes for Males and Females in Germany","3d927c92":"![5.JPG](attachment:5.JPG)","c5f2fcfb":"## Extracting Country Wise data","51ac9cfe":"# Import all the necessary libraries","41551deb":"# Basic EDA","b72908f9":"![WhatsApp%20Image%202020-12-20%20at%2011.43.47%20PM.jpeg](attachment:WhatsApp%20Image%202020-12-20%20at%2011.43.47%20PM.jpeg)","cef687d6":"# Male Shoe Size","5ce36043":"## INVENTORY MANAGEMENT","eb3fbe52":"# Year-Wise Sales of Shoeniverse ","1ae10639":"### For Males in Germany","d1da8ba3":"![](https:\/\/www.assetinfinity.com\/blog\/wp-content\/uploads\/2019\/09\/Inventory-management-system-objectives.png)","454b4442":"![10.JPG](attachment:10.JPG)","876fd6d3":"### MARKETING","f8fa5971":"## Dropping Columns","4cfa8880":"# Read the data into the notebook","89fbc396":"### For Males","58ba4c9c":"# Male Shoe Size in Germany","c1ca5baa":"### For Females in Germany","139a7d42":"CONCLUSIONS:\n\n1. Overall, the United States has the highest revenue generated in terms of the product(i.e. shoes) sales. However, in terms of the revenue generated per shop, Germany has significantly larger revenue. Hence, Germany is the right choice for opening a new franchise.\n\n2. The revenue generated in terms of product (i.e shoes) sales is the same, irrespective of the gender. Therefore, there is no need for gender-specific marketing of shoes.\n","e516243d":"## Central Limit Theorem ","67ceaa79":"3. We saw that the shoe sizes for male and female are different. Hence, in order to have a balanced inventory we have to order different shoe sizes for males and females.\n\n4. For better inventory management in case of female shoes, we need to stock up more on female shoe sizes less than 9.\n\n5. For better inventory management in case of male shoes, we need to stock up more on male shoe sizes more than 10.","3e1d301d":"## EDA for Germany","34927dd5":"![14.JPG](attachment:14.JPG)","3dc73d3d":"# Female Shoe Size","194e84de":"# Lets Look at the Data","0e6c7eab":"![7.JPG](attachment:7.JPG)","93dcf425":"## Analysing Categorical Variables","00e2bd8e":"![18.JPG](attachment:18.JPG)","43b80c6d":"## Analysing country wise sale for Outlets","1d1526e8":"## Distribution of Sold Units based on Shoe Size","6a5abaf0":"# Measures of Central Tendancy based on Shoe Size","734ab17c":"# Female Shoe Size in Germany","408d7f4e":"![8.JPG](attachment:8.JPG)","259f73e6":"## Distribution of Sold Units based on Shoe Size in Germany","f566d78e":"![12.JPG](attachment:12.JPG)","b51cf587":"## Segregation  into Numerical and Categorical Variables\n","e526ee14":"## Range of Shoe Sizes for Males and Females","3565a84c":"### the column are dropped","870b45b3":"## Checking For Null Values"}}