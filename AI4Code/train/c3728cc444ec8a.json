{"cell_type":{"032eae4a":"code","8da7b758":"code","e3e642b3":"code","f3cd4e5e":"code","2115fe07":"code","f2644e08":"code","94685f16":"code","8a7f0c61":"code","fa340ea5":"code","541b22bf":"code","96be8ffd":"code","b2153b0b":"code","ffe0e4c0":"code","53ad1851":"code","0e5e61aa":"code","bcda2ed1":"code","b578e890":"code","79b9a2e6":"code","aa055145":"code","f3758cff":"code","ab904581":"code","74f78fa8":"code","e800d1ef":"code","5b2bcb6c":"code","412060e9":"code","6f9c1c30":"code","fd2cb48a":"code","bc5e7bd3":"code","21b0edc4":"code","9f624c3c":"code","611d76b0":"code","371e0ec9":"code","c092b6ae":"code","9dadbbc3":"code","28b27178":"code","d3fde073":"code","cc89ec53":"code","d41c13d0":"code","4241a1eb":"code","0e1e68d5":"code","66475c45":"code","b2f35997":"code","b52a648e":"code","8095ab47":"code","95e339ab":"code","256c5cc3":"code","c417d7be":"code","5f5f37f0":"code","cc7fff27":"code","e44ef5d0":"code","4d603cda":"code","3d391465":"code","f774a09f":"code","8ad7025d":"code","22464b2a":"code","1e0ed4a8":"code","e0c4f307":"code","164d67ae":"code","29247342":"code","ca5a2334":"code","9bc719ef":"code","17151c4b":"code","c5ab3798":"code","1deb0ad3":"code","47e61a02":"code","c6a64fe1":"code","d474f8a4":"code","dfcd9642":"code","97575f7f":"code","80228648":"code","0e0abdd9":"code","11e38ad5":"code","4034f201":"code","10d2666e":"code","8be47cd6":"code","14fc9f35":"code","d4544893":"code","995bc10b":"code","d4264add":"code","791dc150":"code","fe89dafb":"code","8db8789c":"markdown","b8a8b538":"markdown","1ea6b6b9":"markdown","3ecaaaca":"markdown","2f54a45d":"markdown","ac71fc10":"markdown","bc807a52":"markdown","b814c28b":"markdown","dbe69c0f":"markdown","a0e90849":"markdown"},"source":{"032eae4a":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport random\nimport time\nimport math\n#PATH PROCESS\nimport os\nimport os.path\nfrom pathlib import Path\nimport glob\n#IMAGE PROCESS\nfrom PIL import Image\nfrom keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport cv2\nfrom keras.applications.vgg16 import preprocess_input, decode_predictions\nimport imageio\nfrom IPython.display import Image\nimport matplotlib.image as mpimg\nfrom skimage.transform import resize\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom matplotlib import cm\nimport zipfile\nfrom io import BytesIO\nfrom nibabel import FileHolder\nfrom nibabel.analyze import AnalyzeImage\nimport PIL\nfrom IPython import display\nfrom skimage.morphology import convex_hull_image, erosion\nfrom skimage.morphology import square\nfrom skimage.feature import hessian_matrix, hessian_matrix_eigvals\nfrom skimage import data, io, filters\nimport skimage\nfrom scipy.ndimage.interpolation import zoom\n#SCALER & TRANSFORMATION\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom keras.utils.np_utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom keras import regularizers\nfrom sklearn.preprocessing import LabelEncoder\n#ACCURACY CONTROL\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.metrics import mean_squared_error, r2_score\n#OPTIMIZER\nfrom keras.optimizers import RMSprop,Adam,Optimizer,Optimizer, SGD\n#MODEL LAYERS\nfrom tensorflow.keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D, BatchNormalization,MaxPooling2D,BatchNormalization,\\\n                        Permute, TimeDistributed, Bidirectional,GRU, SimpleRNN,\\\nLSTM, GlobalAveragePooling2D, SeparableConv2D, ZeroPadding2D, Convolution2D, ZeroPadding2D,Reshape, Conv2DTranspose, LeakyReLU, ReLU\nfrom keras import models\nfrom keras import layers\nimport tensorflow as tf\nfrom keras.applications import VGG16,VGG19,inception_v3\nfrom keras import backend as K\nfrom keras.utils import plot_model\nfrom keras.datasets import mnist\nimport keras\n#IGNORING WARNINGS\nfrom warnings import filterwarnings\nfilterwarnings(\"ignore\",category=DeprecationWarning)\nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)","8da7b758":"Target_Eye = \"..\/input\/eye-dataset\/Eye dataset\/forward_look\/forward_look (10).jpg\"","e3e642b3":"figure = plt.figure(figsize=(10,10))\n\nReading_Eye = cv2.cvtColor(cv2.imread(Target_Eye),cv2.COLOR_BGR2RGB)\n\nplt.imshow(Reading_Eye)\nplt.xlabel(Reading_Eye.shape)","f3cd4e5e":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nReading_Eye = cv2.cvtColor(cv2.imread(Target_Eye),cv2.COLOR_BGR2RGB)\n\nCropped_Eye = Reading_Eye[190:395,20:410] # TARGET SIZE\n\n\naxis[0].imshow(Reading_Eye)\naxis[0].set_xlabel(Reading_Eye.shape)\n\naxis[1].imshow(Cropped_Eye)\naxis[1].set_xlabel(Cropped_Eye.shape)","2115fe07":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nReading_Eye = cv2.cvtColor(cv2.imread(Target_Eye),cv2.COLOR_BGR2RGB)\nCropped_Eye = Reading_Eye[190:395,20:410] # TARGET SIZE\nResizede_Cropped = cv2.resize(Cropped_Eye,(180,180),interpolation = cv2.INTER_CUBIC)\n\n\naxis[0].imshow(Cropped_Eye)\naxis[0].set_xlabel(Cropped_Eye.shape)\n\naxis[1].imshow(Resizede_Cropped)\naxis[1].set_xlabel(Resizede_Cropped.shape)","f2644e08":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nReading_Eye = cv2.cvtColor(cv2.imread(Target_Eye),cv2.COLOR_BGR2RGB)\nCropped_Eye = Reading_Eye[190:395,20:410] # TARGET SIZE\nResizede_Cropped = cv2.resize(Cropped_Eye,(180,180),interpolation = cv2.INTER_CUBIC)\n\nZoomed_Img = cv2.resize(Resizede_Cropped, None, fx=0.6, fy=0.6)\n\naxis[0].imshow(Resizede_Cropped)\naxis[0].set_xlabel(Resizede_Cropped.shape)\n\naxis[1].imshow(Zoomed_Img)\naxis[1].set_xlabel(Zoomed_Img.shape)","94685f16":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nReading_Eye = cv2.cvtColor(cv2.imread(Target_Eye),cv2.COLOR_BGR2RGB)\nCropped_Eye = Reading_Eye[190:395,20:410] # TARGET SIZE\nResizede_Cropped = cv2.resize(Cropped_Eye,(180,180),interpolation = cv2.INTER_CUBIC)\n\nZoomed_Img = cv2.resize(Resizede_Cropped, None, fx=0.6, fy=0.6)\n\nh,w,c = Zoomed_Img.shape\nM = cv2.getRotationMatrix2D((w\/2,h\/2), 0, 0.8) \n    \nZoom_Image = cv2.warpAffine(Zoomed_Img, M, (w,h))\n\naxis[0].imshow(Resizede_Cropped)\naxis[0].set_xlabel(Resizede_Cropped.shape)\n\naxis[1].imshow(Zoom_Image)\naxis[1].set_xlabel(Zoom_Image.shape)","8a7f0c61":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nReading_Eye = cv2.cvtColor(cv2.imread(Target_Eye),cv2.COLOR_BGR2RGB)\nCropped_Eye = Reading_Eye[190:395,20:410] # TARGET SIZE\nResizede_Cropped = cv2.resize(Cropped_Eye,(180,180),interpolation = cv2.INTER_CUBIC)\n\nZoomed_Img = cv2.resize(Resizede_Cropped, None, fx=0.6, fy=0.6)\n\nh,w,c = Zoomed_Img.shape\nM = cv2.getRotationMatrix2D((w\/2,h\/2), 0, 1.5) \n    \nZoom_Image = cv2.warpAffine(Zoomed_Img, M, (w,h))\n\naxis[0].imshow(Resizede_Cropped)\naxis[0].set_xlabel(Resizede_Cropped.shape)\n\naxis[1].imshow(Zoom_Image)\naxis[1].set_xlabel(Zoom_Image.shape)","fa340ea5":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nReading_Eye = cv2.cvtColor(cv2.imread(Target_Eye),cv2.COLOR_BGR2RGB)\nCropped_Eye = Reading_Eye[190:395,20:410] # TARGET SIZE\nResizede_Cropped = cv2.resize(Cropped_Eye,(180,180),interpolation = cv2.INTER_CUBIC)\n\nZoomed_Img = cv2.resize(Resizede_Cropped, None, fx=0.6, fy=0.6)\n\nh,w,c = Zoomed_Img.shape\nM = cv2.getRotationMatrix2D((w\/2,h\/2), 0, 0.5) \n    \nZoom_Image = cv2.warpAffine(Zoomed_Img, M, (w,h))\n\naxis[0].imshow(Resizede_Cropped)\naxis[0].set_xlabel(Resizede_Cropped.shape)\n\naxis[1].imshow(Zoom_Image)\naxis[1].set_xlabel(Zoom_Image.shape)","541b22bf":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nReading_Eye = cv2.cvtColor(cv2.imread(Target_Eye),cv2.COLOR_BGR2RGB)\nCropped_Eye = Reading_Eye[190:395,20:410] # TARGET SIZE\nResizede_Cropped = cv2.resize(Cropped_Eye,(180,180),interpolation = cv2.INTER_CUBIC)\n\nZoomed_Img = cv2.resize(Resizede_Cropped, None, fx=0.6, fy=0.6)\n\nh,w,c = Zoomed_Img.shape\nM = cv2.getRotationMatrix2D((w\/2,h\/2), 0, 1.5) \n    \nZoom_Image = cv2.warpAffine(Zoomed_Img, M, (w,h))\nZoom_Reize = cv2.resize(Zoom_Image,(180,180),interpolation = cv2.INTER_CUBIC)\n\naxis[0].imshow(Resizede_Cropped)\naxis[0].set_xlabel(Resizede_Cropped.shape)\n\naxis[1].imshow(Zoom_Reize)\naxis[1].set_xlabel(Zoom_Reize.shape)","96be8ffd":"Video_Path = \"..\/input\/exoplanet-real-time-simulation-video-nasa\/Exoplanet_VIDEO_Set\/trappist_1e_400.mov\"","b2153b0b":"Planet_List = []\n\nVideo_Caption = cv2.VideoCapture(Video_Path)\nFrame_Rate = Video_Caption.get(5)\n\nwhile Video_Caption.isOpened():\n    \n    Current_Frame = Video_Caption.get(1)\n    \n    _,frame = Video_Caption.read()\n    \n    if _ != True:\n        break\n        \n    if Current_Frame % math.floor(Frame_Rate) == 0:\n        Resized_Image = cv2.resize(frame,(180,180),interpolation = cv2.INTER_CUBIC)\n        Planet_List.append(Resized_Image)","ffe0e4c0":"print(len(Planet_List))","53ad1851":"figure = plt.figure(figsize=(10,10))\n\nplt.imshow(Planet_List[1])\nplt.xlabel(Planet_List[1].shape)","0e5e61aa":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nTarget_Exo = Planet_List[1]\n\nZoomed_Img = cv2.resize(Target_Exo, None, fx=0.6, fy=0.6)\n\nh,w,c = Zoomed_Img.shape\nM = cv2.getRotationMatrix2D((w\/2,h\/2), 2, 0.8) \n    \nZoom_Image = cv2.warpAffine(Zoomed_Img, M, (w,h))\n\naxis[0].imshow(Target_Exo)\naxis[0].set_xlabel(Target_Exo.shape)\n\naxis[1].imshow(Zoom_Image)\naxis[1].set_xlabel(Zoom_Image.shape)","bcda2ed1":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nTarget_Exo = Planet_List[1]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.6, fy=0.6)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex,h_ex\/2), 0, 0.5) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\naxis[0].imshow(Target_Exo)\naxis[0].set_xlabel(Target_Exo.shape)\n\naxis[1].imshow(Zoom_Image_Ex)\naxis[1].set_xlabel(Zoom_Image_Ex.shape)","b578e890":"Target_Exo = Planet_List[1]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.6, fy=0.6)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\n#\n#\n#\n\nReading_Eye = cv2.cvtColor(cv2.imread(Target_Eye),cv2.COLOR_BGR2RGB)\nCropped_Eye = Reading_Eye[190:395,20:410] # TARGET SIZE\nResizede_Cropped = cv2.resize(Cropped_Eye,(180,180),interpolation = cv2.INTER_CUBIC)\n\nZoomed_Img = cv2.resize(Resizede_Cropped, None, fx=0.6, fy=0.6)\n\nh,w,c = Zoomed_Img.shape\nM = cv2.getRotationMatrix2D((w\/2,h\/2), 0, 1.5) \n    \nZoom_Image = cv2.warpAffine(Zoomed_Img, M, (w,h))\nZoom_Reize = cv2.resize(Zoom_Image,(180,180),interpolation = cv2.INTER_CUBIC)","79b9a2e6":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\naxis[0].imshow(Zoom_Reize)\naxis[0].set_xlabel(Zoom_Reize.shape)\n\naxis[1].imshow(Zoom_Image_Ex)\naxis[1].set_xlabel(Zoom_Image_Ex.shape)","aa055145":"figure,axis = plt.subplots(1,3,figsize=(12,12))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.8,Zoom_Image_Ex,1,0.9)\n\naxis[0].imshow(Zoom_Reize)\naxis[0].set_xlabel(Zoom_Reize.shape)\n\naxis[1].imshow(Zoom_Image_Ex)\naxis[1].set_xlabel(Zoom_Image_Ex.shape)\n\naxis[2].imshow(Blend_Image)\naxis[2].set_xlabel(Blend_Image.shape)","f3758cff":"figure,axis = plt.subplots(1,3,figsize=(12,12))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((7,7)))\n\naxis[0].imshow(Zoom_Reize)\naxis[0].set_xlabel(Zoom_Reize.shape)\n\naxis[1].imshow(Zoom_Image_Ex)\naxis[1].set_xlabel(Zoom_Image_Ex.shape)\n\naxis[2].imshow(Diff_Image)\naxis[2].set_xlabel(Diff_Image.shape)","ab904581":"figure,axis = plt.subplots(1,3,figsize=(12,12))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\nDiff_Image = cv2.absdiff(Zoom_Reize[:,:,0],Zoom_Image_Ex[:,:,0],np.zeros((7,7)))\n\naxis[0].imshow(Zoom_Reize)\naxis[0].set_xlabel(Zoom_Reize.shape)\n\naxis[1].imshow(Zoom_Image_Ex)\naxis[1].set_xlabel(Zoom_Image_Ex.shape)\n\naxis[2].imshow(Diff_Image)\naxis[2].set_xlabel(Diff_Image.shape)","74f78fa8":"figure,axis = plt.subplots(1,3,figsize=(12,12))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((7,7)))\n\naxis[0].imshow(Zoom_Reize)\naxis[0].set_xlabel(Zoom_Reize.shape)\n\naxis[1].imshow(Zoom_Image_Ex)\naxis[1].set_xlabel(Zoom_Image_Ex.shape)\n\naxis[2].imshow(Diff_Image)\naxis[2].set_xlabel(Diff_Image.shape)","e800d1ef":"figure,axis = plt.subplots(1,6,figsize=(17,17))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nSplit_Exoplanet = cv2.split(Zoom_Image_Ex)\nSplit_Eye = cv2.split(Zoom_Reize)\n\naxis[0].imshow(Split_Exoplanet[0])\naxis[0].set_xlabel(Split_Exoplanet[0].shape)\n\naxis[1].imshow(Split_Exoplanet[1])\naxis[1].set_xlabel(Split_Exoplanet[1].shape)\n\naxis[2].imshow(Split_Exoplanet[2])\naxis[2].set_xlabel(Split_Exoplanet[2].shape)\n\naxis[3].imshow(Split_Eye[0])\naxis[3].set_xlabel(Split_Eye[0].shape)\n\naxis[4].imshow(Split_Eye[1])\naxis[4].set_xlabel(Split_Eye[1].shape)\n\naxis[5].imshow(Split_Eye[2])\naxis[5].set_xlabel(Split_Eye[2].shape)","5b2bcb6c":"figure,axis = plt.subplots(1,6,figsize=(17,17))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nSplit_Exoplanet = cv2.split(Zoom_Image_Ex)\nSplit_Eye = cv2.split(Zoom_Reize)\n\nExo_Red_B = cv2.equalizeHist(Split_Exoplanet[0].astype(np.uint8))\nExo_Green_B = cv2.equalizeHist(Split_Exoplanet[1].astype(np.uint8))\nExo_Blue_B = cv2.equalizeHist(Split_Exoplanet[2].astype(np.uint8))\n\nEye_Red_U = cv2.equalizeHist(Split_Eye[0].astype(np.uint8))\nEye_Green_U = cv2.equalizeHist(Split_Eye[1].astype(np.uint8))\nEye_Blue_U = cv2.equalizeHist(Split_Eye[2].astype(np.uint8))\n\naxis[0].imshow(Exo_Red_B)\naxis[0].set_xlabel(Exo_Red_B.shape)\n\naxis[1].imshow(Exo_Green_B)\naxis[1].set_xlabel(Exo_Green_B.shape)\n\naxis[2].imshow(Exo_Blue_B)\naxis[2].set_xlabel(Exo_Blue_B.shape)\n\naxis[3].imshow(Eye_Red_U)\naxis[3].set_xlabel(Eye_Red_U.shape)\n\naxis[4].imshow(Eye_Green_U)\naxis[4].set_xlabel(Eye_Green_U.shape)\n\naxis[5].imshow(Eye_Blue_U)\naxis[5].set_xlabel(Eye_Blue_U.shape)","412060e9":"figure,axis = plt.subplots(1,4,figsize=(17,17))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nSplit_Exoplanet = cv2.split(Zoom_Image_Ex)\nSplit_Eye = cv2.split(Zoom_Reize)\n\nExo_Red_B = cv2.equalizeHist(Split_Exoplanet[0].astype(np.uint8))\nExo_Green_B = cv2.equalizeHist(Split_Exoplanet[1].astype(np.uint8))\nExo_Blue_B = cv2.equalizeHist(Split_Exoplanet[2].astype(np.uint8))\n\nEye_Red_U = cv2.equalizeHist(Split_Eye[0].astype(np.uint8))\nEye_Green_U = cv2.equalizeHist(Split_Eye[1].astype(np.uint8))\nEye_Blue_U = cv2.equalizeHist(Split_Eye[2].astype(np.uint8))\n\nRandom_Merge = cv2.merge((Eye_Red_U, Exo_Green_B, Eye_Blue_U))\n\naxis[0].imshow(Eye_Red_U)\naxis[0].set_xlabel(Eye_Red_U.shape)\n\naxis[1].imshow(Exo_Green_B)\naxis[1].set_xlabel(Exo_Green_B.shape)\n\naxis[2].imshow(Eye_Blue_U)\naxis[2].set_xlabel(Eye_Blue_U.shape)\n\naxis[3].imshow(Random_Merge)\naxis[3].set_xlabel(Random_Merge.shape)","6f9c1c30":"figure,axis = plt.subplots(1,4,figsize=(17,17))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nSplit_Exoplanet = cv2.split(Zoom_Image_Ex)\nSplit_Eye = cv2.split(Zoom_Reize)\n\nExo_Red_B = cv2.equalizeHist(Split_Exoplanet[0].astype(np.uint8))\nExo_Green_B = cv2.equalizeHist(Split_Exoplanet[1].astype(np.uint8))\nExo_Blue_B = cv2.equalizeHist(Split_Exoplanet[2].astype(np.uint8))\n\nEye_Red_U = cv2.equalizeHist(Split_Eye[0].astype(np.uint8))\nEye_Green_U = cv2.equalizeHist(Split_Eye[1].astype(np.uint8))\nEye_Blue_U = cv2.equalizeHist(Split_Eye[2].astype(np.uint8))\n\nClahe_Func = cv2.createCLAHE(clipLimit=2.0, tileGridSize=(9,9))\n\nClahe_Universe = Clahe_Func.apply(Exo_Green_B.astype(np.uint8))\n\nRandom_Merge = cv2.merge((Eye_Red_U, Clahe_Universe, Eye_Blue_U))\n\naxis[0].imshow(Eye_Red_U)\naxis[0].set_xlabel(Eye_Red_U.shape)\n\naxis[1].imshow(Clahe_Universe)\naxis[1].set_xlabel(Clahe_Universe.shape)\n\naxis[2].imshow(Eye_Blue_U)\naxis[2].set_xlabel(Eye_Blue_U.shape)\n\naxis[3].imshow(Random_Merge)\naxis[3].set_xlabel(Random_Merge.shape)","fd2cb48a":"figure,axis = plt.subplots(1,2,figsize=(14,14))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nSplit_Exoplanet = cv2.split(Zoom_Image_Ex)\nSplit_Eye = cv2.split(Zoom_Reize)\n\nExo_Red_B = cv2.equalizeHist(Split_Exoplanet[0].astype(np.uint8))\nExo_Green_B = cv2.equalizeHist(Split_Exoplanet[1].astype(np.uint8))\nExo_Blue_B = cv2.equalizeHist(Split_Exoplanet[2].astype(np.uint8))\n\nEye_Red_U = cv2.equalizeHist(Split_Eye[0].astype(np.uint8))\nEye_Green_U = cv2.equalizeHist(Split_Eye[1].astype(np.uint8))\nEye_Blue_U = cv2.equalizeHist(Split_Eye[2].astype(np.uint8))\n\nClahe_Func = cv2.createCLAHE(clipLimit=2.0, tileGridSize=(9,9))\n\nClahe_Universe = Clahe_Func.apply(Exo_Green_B.astype(np.uint8))\n\nRandom_Merge = cv2.merge((Eye_Red_U, Clahe_Universe, Eye_Blue_U))\n\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.8,Random_Merge,1,0.2)\n\naxis[0].imshow(Random_Merge)\naxis[0].set_xlabel(Random_Merge.shape)\n\naxis[1].imshow(Blend_Image)\naxis[1].set_xlabel(Blend_Image.shape)","bc5e7bd3":"Mov_Path = Path(\"..\/input\/exoplanet-real-time-simulation-video-nasa\/Exoplanet_VIDEO_Set\")\nMov_List = list(Mov_Path.glob(r\"*.mov\"))","21b0edc4":"print(Mov_List)","9f624c3c":"Mov_List = Mov_List[2:]","611d76b0":"print(len(Mov_List))","371e0ec9":"Mov_Series = pd.Series(Mov_List,name=\"MOV\").astype(str)","c092b6ae":"EXOPlanet_List = []\n\nfor file_video in Mov_Series:\n    Video_File_Path = file_video\n\n    Video_Caption = cv2.VideoCapture(Video_File_Path)\n    Frame_Rate = Video_Caption.get(5)\n\n    while Video_Caption.isOpened():\n\n        Current_Frame = Video_Caption.get(1)\n\n        _,frame = Video_Caption.read()\n\n        if _ != True:\n            break\n\n        if Current_Frame % math.floor(Frame_Rate) == 0:\n            Resized_Image = cv2.resize(frame,(180,180),interpolation = cv2.INTER_CUBIC)\n            EXOPlanet_List.append(Resized_Image)","9dadbbc3":"print(len(EXOPlanet_List))","28b27178":"figure,axis = plt.subplots(1,6,figsize=(17,17))\n\n\naxis[0].imshow(EXOPlanet_List[10])\naxis[0].set_xlabel(EXOPlanet_List[10].shape)\n\naxis[1].imshow(EXOPlanet_List[100])\naxis[1].set_xlabel(EXOPlanet_List[100].shape)\n\naxis[2].imshow(EXOPlanet_List[200])\naxis[2].set_xlabel(EXOPlanet_List[200].shape)\n\naxis[3].imshow(EXOPlanet_List[300])\naxis[3].set_xlabel(EXOPlanet_List[300].shape)\n\naxis[4].imshow(EXOPlanet_List[600])\naxis[4].set_xlabel(EXOPlanet_List[600].shape)\n\naxis[5].imshow(EXOPlanet_List[1000])\naxis[5].set_xlabel(EXOPlanet_List[1000].shape)","d3fde073":"figure,axis = plt.subplots(1,3,figsize=(12,12))\n\nTarget_Exo = EXOPlanet_List[1]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.6, fy=0.6)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((7,7)))\n\naxis[0].imshow(Zoom_Reize)\naxis[0].set_xlabel(Zoom_Reize.shape)\n\naxis[1].imshow(Zoom_Image_Ex)\naxis[1].set_xlabel(Zoom_Image_Ex.shape)\n\naxis[2].imshow(Diff_Image)\naxis[2].set_xlabel(Diff_Image.shape)","cc89ec53":"figure,axis = plt.subplots(1,3,figsize=(12,12))\n\nTarget_Exo = EXOPlanet_List[1000]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.6, fy=0.6)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((7,7)))\n\naxis[0].imshow(Zoom_Reize)\naxis[0].set_xlabel(Zoom_Reize.shape)\n\naxis[1].imshow(Zoom_Image_Ex)\naxis[1].set_xlabel(Zoom_Image_Ex.shape)\n\naxis[2].imshow(Diff_Image)\naxis[2].set_xlabel(Diff_Image.shape)","d41c13d0":"figure = plt.figure(figsize=(12,12))\n\nTarget_Exo = EXOPlanet_List[1000]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.6, fy=0.6)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((3,3)))\n\n\nplt.imshow(Diff_Image)\nplt.xlabel(Diff_Image.shape)","4241a1eb":"figure,axis = plt.subplots(1,3,figsize=(12,12))\n\nTarget_Exo = EXOPlanet_List[100]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.6, fy=0.6)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.8,Zoom_Image_Ex,1,0.9)\n\naxis[0].imshow(Zoom_Reize)\naxis[0].set_xlabel(Zoom_Reize.shape)\n\naxis[1].imshow(Zoom_Image_Ex)\naxis[1].set_xlabel(Zoom_Image_Ex.shape)\n\naxis[2].imshow(Blend_Image)\naxis[2].set_xlabel(Blend_Image.shape)","0e1e68d5":"figure = plt.figure(figsize=(12,12))\n\nTarget_Exo = EXOPlanet_List[1000]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.6, fy=0.6)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.8,Zoom_Image_Ex,1,0.9)\n\n\nplt.imshow(Blend_Image)\nplt.xlabel(Blend_Image.shape)","66475c45":"figure,axis = plt.subplots(1,3,figsize=(12,12))\n\nTarget_Exo = EXOPlanet_List[100]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.6, fy=0.6)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.8,Zoom_Image_Ex,1,0.9)\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((3,3)))\n\nBlend_Two = cv2.addWeighted(Blend_Image,1,Diff_Image,1,0.3)\n\naxis[0].imshow(Blend_Image)\naxis[0].set_xlabel(Blend_Image.shape)\n\naxis[1].imshow(Diff_Image)\naxis[1].set_xlabel(Diff_Image.shape)\n\naxis[2].imshow(Blend_Two)\naxis[2].set_xlabel(Blend_Two.shape)","b2f35997":"figure,axis = plt.subplots(1,3,figsize=(12,12))\n\nTarget_Exo = EXOPlanet_List[589]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.6, fy=0.6)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.8,Zoom_Image_Ex,1,0.9)\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((3,3)))\n\nBlend_Two = cv2.addWeighted(Blend_Image,1,Diff_Image,1,0.3)\n\naxis[0].imshow(Blend_Image)\naxis[0].set_xlabel(Blend_Image.shape)\n\naxis[1].imshow(Diff_Image)\naxis[1].set_xlabel(Diff_Image.shape)\n\naxis[2].imshow(Blend_Two)\naxis[2].set_xlabel(Blend_Two.shape)","b52a648e":"figure,axis = plt.subplots(1,3,figsize=(12,12))\n\nTarget_Exo = EXOPlanet_List[810]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.6, fy=0.6)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.8,Zoom_Image_Ex,1,0.9)\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((3,3)))\n\nBlend_Two = cv2.addWeighted(Blend_Image,0.4,Diff_Image,1,0.3)\n\naxis[0].imshow(Blend_Image)\naxis[0].set_xlabel(Blend_Image.shape)\n\naxis[1].imshow(Diff_Image)\naxis[1].set_xlabel(Diff_Image.shape)\n\naxis[2].imshow(Blend_Two)\naxis[2].set_xlabel(Blend_Two.shape)","8095ab47":"figure,axis = plt.subplots(1,3,figsize=(12,12))\n\nTarget_Exo = EXOPlanet_List[810]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.6, fy=0.6)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.5,Zoom_Image_Ex,1,0.9)\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((3,3)))\n\nBlend_Two = cv2.addWeighted(Blend_Image,0.4,Diff_Image,1,0.3)\n\naxis[0].imshow(Blend_Image)\naxis[0].set_xlabel(Blend_Image.shape)\n\naxis[1].imshow(Diff_Image)\naxis[1].set_xlabel(Diff_Image.shape)\n\naxis[2].imshow(Blend_Two)\naxis[2].set_xlabel(Blend_Two.shape)","95e339ab":"figure,axis = plt.subplots(1,3,figsize=(12,12))\n\nTarget_Exo = EXOPlanet_List[310]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.6, fy=0.6)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.5,Zoom_Image_Ex,1,0.9)\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((3,3)))\n\nBlend_Two = cv2.addWeighted(Blend_Image,0.4,Diff_Image,0.8,0.9)\n\naxis[0].imshow(Blend_Image)\naxis[0].set_xlabel(Blend_Image.shape)\n\naxis[1].imshow(Diff_Image)\naxis[1].set_xlabel(Diff_Image.shape)\n\naxis[2].imshow(Blend_Two)\naxis[2].set_xlabel(Blend_Two.shape)","256c5cc3":"figure,axis = plt.subplots(1,3,figsize=(12,12))\n\nTarget_Exo = EXOPlanet_List[1]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.6, fy=0.6)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.5,Zoom_Image_Ex,1,0.9)\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((3,3)))\n\nBlend_Two = cv2.addWeighted(Blend_Image,0.4,Diff_Image,0.8,0.9)\n\naxis[0].imshow(Blend_Image)\naxis[0].set_xlabel(Blend_Image.shape)\n\naxis[1].imshow(Diff_Image)\naxis[1].set_xlabel(Diff_Image.shape)\n\naxis[2].imshow(Blend_Two)\naxis[2].set_xlabel(Blend_Two.shape)","c417d7be":"figure,axis = plt.subplots(1,3,figsize=(12,12))\n\nTarget_Exo = EXOPlanet_List[1]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.1, fy=0.1)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.5,Zoom_Image_Ex,1,0.9)\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((3,3)))\n\nBlend_Two = cv2.addWeighted(Blend_Image,0.4,Diff_Image,0.8,0.9)\n\naxis[0].imshow(Blend_Image)\naxis[0].set_xlabel(Blend_Image.shape)\n\naxis[1].imshow(Diff_Image)\naxis[1].set_xlabel(Diff_Image.shape)\n\naxis[2].imshow(Blend_Two)\naxis[2].set_xlabel(Blend_Two.shape)","5f5f37f0":"figure,axis = plt.subplots(1,3,figsize=(12,12))\n\nTarget_Exo = EXOPlanet_List[433]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.1, fy=0.1)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.5,Zoom_Image_Ex,1,0.9)\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((3,3)))\n\nBlend_Two = cv2.addWeighted(Blend_Image,0.4,Diff_Image,0.8,0.9)\n\naxis[0].imshow(Blend_Image)\naxis[0].set_xlabel(Blend_Image.shape)\n\naxis[1].imshow(Diff_Image)\naxis[1].set_xlabel(Diff_Image.shape)\n\naxis[2].imshow(Blend_Two)\naxis[2].set_xlabel(Blend_Two.shape)","cc7fff27":"figure,axis = plt.subplots(1,2,figsize=(14,14))\n\nTarget_Exo = EXOPlanet_List[433]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.1, fy=0.1)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.5,Zoom_Image_Ex,1,0.9)\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((3,3)))\n\nBlend_Two = cv2.addWeighted(Blend_Image,0.4,Diff_Image,1,0.9)\n\naxis[0].imshow(Zoom_Reize)\naxis[0].set_xlabel(Zoom_Reize.shape)\n\naxis[1].imshow(Blend_Two)\naxis[1].set_xlabel(Blend_Two.shape)","e44ef5d0":"figure,axis = plt.subplots(1,2,figsize=(14,14))\n\nTarget_Exo = EXOPlanet_List[833]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.1, fy=0.1)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.5,Zoom_Image_Ex,1,0.9)\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((3,3)))\n\nBlend_Two = cv2.addWeighted(Blend_Image,0.4,Diff_Image,1,0.9)\n\naxis[0].imshow(Zoom_Reize)\naxis[0].set_xlabel(Zoom_Reize.shape)\n\naxis[1].imshow(Blend_Two)\naxis[1].set_xlabel(Blend_Two.shape)","4d603cda":"figure,axis = plt.subplots(1,2,figsize=(14,14))\n\nTarget_Exo = EXOPlanet_List[1]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.1, fy=0.1)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.5,Zoom_Image_Ex,1,0.9)\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((3,3)))\n\nBlend_Two = cv2.addWeighted(Blend_Image,0.3,Diff_Image,1,0.9)\n\naxis[0].imshow(Zoom_Reize)\naxis[0].set_xlabel(Zoom_Reize.shape)\n\naxis[1].imshow(Blend_Two)\naxis[1].set_xlabel(Blend_Two.shape)","3d391465":"figure,axis = plt.subplots(1,2,figsize=(14,14))\n\nTarget_Exo = EXOPlanet_List[389]\n\nZoomed_Exo = cv2.resize(Target_Exo, None, fx=0.1, fy=0.1)\n\nh_ex,w_ex,c_ex = Zoomed_Exo.shape\nM_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n    \nZoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\nZoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\nBlend_Image = cv2.addWeighted(Zoom_Reize,0.5,Zoom_Image_Ex,1,0.9)\nDiff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((3,3)))\n\nBlend_Two = cv2.addWeighted(Blend_Image,0.3,Diff_Image,1,0.3)\n\naxis[0].imshow(Zoom_Reize)\naxis[0].set_xlabel(Zoom_Reize.shape)\n\naxis[1].imshow(Blend_Two)\naxis[1].set_xlabel(Blend_Two.shape)","f774a09f":"Reading_Eye = cv2.cvtColor(cv2.imread(Target_Eye),cv2.COLOR_BGR2RGB)\nCropped_Eye = Reading_Eye[190:395,20:410] # TARGET SIZE\nResizede_Cropped = cv2.resize(Cropped_Eye,(180,180),interpolation = cv2.INTER_CUBIC)\n\nZoomed_Img = cv2.resize(Resizede_Cropped, None, fx=0.6, fy=0.6)\n\nh,w,c = Zoomed_Img.shape\nM = cv2.getRotationMatrix2D((w\/2,h\/2), 0, 1.5) \n    \nZoom_Image = cv2.warpAffine(Zoomed_Img, M, (w,h))\nZoom_Reize = cv2.resize(Zoom_Image,(180,180),interpolation = cv2.INTER_CUBIC)\n\n#\n#\n#\n\n\nTotal_List = []\n\nfor indexing in range(len(EXOPlanet_List)):\n    Target_Exo = EXOPlanet_List[indexing]\n\n    Zoomed_Exo = cv2.resize(Target_Exo, None, fx=0.1, fy=0.1)\n\n    h_ex,w_ex,c_ex = Zoomed_Exo.shape\n    M_ex = cv2.getRotationMatrix2D((w_ex\/2,h_ex\/2), 2, 0.6) \n\n    Zoom_Image_Ex = cv2.warpAffine(Zoomed_Exo, M_ex, (w_ex,h_ex))\n\n    Zoom_Image_Ex = cv2.resize(Zoom_Image_Ex,(180,180),interpolation = cv2.INTER_CUBIC)\n\n    Blend_Image = cv2.addWeighted(Zoom_Reize,0.5,Zoom_Image_Ex,1,0.9)\n    Diff_Image = cv2.absdiff(Zoom_Reize,Zoom_Image_Ex,np.zeros((3,3)))\n\n    Blend_Two = cv2.addWeighted(Blend_Image,0.3,Diff_Image,1,0.3)\n    \n    Total_List.append(Blend_Two)","8ad7025d":"print(len(Total_List))","22464b2a":"figure = plt.figure(figsize=(10,10))\n\nplt.imshow(Total_List[1])\nplt.xlabel(Total_List[1].shape)","1e0ed4a8":"figure = plt.figure(figsize=(10,10))\n\nplt.imshow(Total_List[1000])\nplt.xlabel(Total_List[1000].shape)","e0c4f307":"figure = plt.figure(figsize=(10,10))\n\nplt.imshow(Total_List[355])\nplt.xlabel(Total_List[355].shape)","164d67ae":"X_Train = np.array(Total_List)\n\nX_Train = X_Train.astype(\"float32\")\n\nX_Train = X_Train[:1000]\n\nX_Train = X_Train \/ 255.","29247342":"figure = plt.figure(figsize=(10,10))\n\nplt.imshow(X_Train[1])\nplt.xlabel(X_Train[1].shape)","ca5a2334":"iterations = 60\nvector_noise_shape = 180\ncount_example = 20\nbatch_size = 6\ncount_buffer = 60000","9bc719ef":"seed = tf.random.normal([count_example,vector_noise_shape])","17151c4b":"Train_Data = tf.data.Dataset.from_tensor_slices(X_Train).shuffle(count_buffer).batch(batch_size)","c5ab3798":"print(Train_Data.element_spec)","1deb0ad3":"def Generator_Model():\n    \n    \n    Model = Sequential()\n    #\n    Model.add(Dense(90*90*128,use_bias=False,input_shape=(180,)))\n    Model.add(BatchNormalization())\n    Model.add(LeakyReLU())\n    #\n    Model.add(Reshape((90,90,128)))\n    #\n    Model.add(Conv2DTranspose(128,(3,3),padding=\"same\",use_bias=False))\n    Model.add(BatchNormalization())\n    Model.add(LeakyReLU())\n    \n    Model.add(Conv2DTranspose(64, (3,3), strides=(2,2), padding='same', use_bias=False))\n    Model.add(BatchNormalization())\n    Model.add(LeakyReLU())\n    #\n    Model.add(Conv2DTranspose(3,(3,3),padding=\"same\",use_bias=False,activation=\"tanh\"))\n    \n    \n    return Model\n\n\n\nGenerator = Generator_Model()","47e61a02":"def Discriminator_Model():\n    \n    Model = Sequential()\n    \n    Model.add(Conv2D(64,(3,3),padding=\"same\",input_shape=[180,180,3]))\n    Model.add(Dropout(0.2))\n    Model.add(LeakyReLU())\n    \n    \n    Model.add(Conv2D(128,(3,3),padding=\"same\"))\n    Model.add(Dropout(0.2))\n    Model.add(LeakyReLU())\n    \n    Model.add(layers.Flatten())\n    Model.add(layers.Dense(1))\n    \n    return Model\n\n\nDiscriminator = Discriminator_Model()","c6a64fe1":"Generator_Optimizer = RMSprop(lr=0.0004,clipvalue=1.0,decay=1e-8)\nDiscriminator_Optimizer = RMSprop(lr=0.0004,clipvalue=1.0,decay=1e-8)","d474f8a4":"Loss_Function = tf.keras.losses.BinaryCrossentropy(from_logits=True)","dfcd9642":"def Discriminator_Loss(real_out,fake_out):\n    \n    real_loss_function = Loss_Function(tf.ones_like(real_out),real_out)\n    fake_loss_function = Loss_Function(tf.zeros_like(fake_out),fake_out)\n    total_loss = real_loss_function + fake_loss_function\n    \n    return total_loss\n\n\n\ndef Generator_Loss(fake_output):\n    \n    return Loss_Function(tf.ones_like(fake_output),fake_output)\n\n\n\ndef display_and_save_images(model, epoch, test_input):\n    \n    predictions = model(test_input, training=False)\n    fig = plt.figure(figsize=(12, 12))\n    \n    for i in range(predictions.shape[0]):\n        plt.subplot(5, 4, i+1)\n        plt.imshow(predictions[i, :, :, 0])\n        plt.axis('off')\n\n    plt.savefig('output_image{:04d}.png'.format(epoch))\n    plt.show()\n\n    \n    \ndef Train_Step(images):\n    \n    random_noise_vector = tf.random.normal([batch_size,vector_noise_shape])\n    \n    with tf.GradientTape() as Generator_Tape, tf.GradientTape() as Discriminator_Tape:\n        \n        Generator_Fake_Image = Generator(random_noise_vector,training=False)\n        \n        real_output = Discriminator(images,training=True)\n        fake_output = Discriminator(Generator_Fake_Image,training=True)\n        \n        Generator_Loss_Output = Generator_Loss(fake_output)\n        Discriminator_Loss_Output = Discriminator_Loss(real_output,fake_output)\n        \n    Generator_Gradients = Generator_Tape.gradient(Generator_Loss_Output,Generator.trainable_variables)\n    Discriminator_Gradients = Discriminator_Tape.gradient(Discriminator_Loss_Output,Discriminator.trainable_variables)\n    \n    Generator_Optimizer.apply_gradients(zip(Generator_Gradients,Generator.trainable_variables))\n    Discriminator_Optimizer.apply_gradients(zip(Discriminator_Gradients,Discriminator.trainable_variables))\n    \n\n    \ndef Training(dataset,iterations):\n    \n    for epoch in range(iterations):\n        start = time.time()\n        \n        for image_batch in dataset:\n            Train_Step(image_batch)\n            \n        display.clear_output(wait=True)\n        display_and_save_images(Generator,epoch+1,seed)\n    \n    display.clear_output(wait=True)\n    display_and_save_images(Generator,epoch,seed)  ","97575f7f":"Training(Train_Data,iterations)","80228648":"Predict_Generator_Noise = tf.random.normal(shape=[100,vector_noise_shape])","0e0abdd9":"print(len(Predict_Generator_Noise))","11e38ad5":"Generator_Predict = Generator(Predict_Generator_Noise)","4034f201":"figure, axes = plt.subplots(nrows=2,ncols=2,figsize=(10,10))\n\nfor i,ax in enumerate(axes.flat):\n    Prediction_Output = Generator_Predict[i]\n    ax.imshow(Prediction_Output,cmap=\"gray\")\n    ax.axis(\"off\")\nplt.tight_layout()\nplt.show()","10d2666e":"figure, axes = plt.subplots(nrows=4,ncols=4,figsize=(10,10))\n\nfor i,ax in enumerate(axes.flat):\n    Prediction_Output = Generator_Predict[i]\n    ax.imshow(Prediction_Output,cmap=\"gray\")\n    ax.axis(\"off\")\nplt.tight_layout()\nplt.show()","8be47cd6":"figure, axes = plt.subplots(nrows=8,ncols=8,figsize=(10,10))\n\nfor i,ax in enumerate(axes.flat):\n    Prediction_Output = Generator_Predict[i]\n    ax.imshow(Prediction_Output,cmap=\"gray\")\n    ax.axis(\"off\")\nplt.tight_layout()\nplt.show()","14fc9f35":"figure, axes = plt.subplots(nrows=10,ncols=10,figsize=(10,10))\n\nfor i,ax in enumerate(axes.flat):\n    Prediction_Output = Generator_Predict[i]\n    ax.imshow(Prediction_Output,cmap=\"gray\")\n    ax.axis(\"off\")\nplt.tight_layout()\nplt.show()","d4544893":"for indexing in range(random.randint(0,50)):\n    figure = plt.figure(figsize=(8,8))\n\n    Saving_Count = indexing\n    plt.axis(\"off\")\n    plt.imshow(Generator_Predict[Saving_Count][:,:,0],cmap=\"jet\")\n    plt.savefig(f\"Ex{Saving_Count}_Output.png\")","995bc10b":"for indexing in range(random.randint(0,50)):\n    figure = plt.figure(figsize=(8,8))\n\n    Saving_Count = indexing\n    plt.axis(\"off\")\n    plt.imshow(Generator_Predict[Saving_Count][:,:,0],cmap=\"cubehelix\")\n    plt.savefig(f\"CUBE{Saving_Count}_Output.png\")","d4264add":"for indexing in range(random.randint(0,50)):\n    figure = plt.figure(figsize=(5,5))\n\n    Saving_Count = indexing\n    plt.axis(\"off\")\n    plt.imshow(Generator_Predict[Saving_Count][:,:,0])\n    plt.savefig(f\"JET{Saving_Count}_Output.png\")","791dc150":"for indexing in range(random.randint(0,50)):\n    figure = plt.figure(figsize=(5,5))\n\n    Saving_Count = indexing\n    plt.axis(\"off\")\n    plt.imshow(Generator_Predict[Saving_Count])\n    plt.savefig(f\"MAIN{Saving_Count}_Output.png\")","fe89dafb":"img_split = Generator_Predict[5]\n\nfor r in range(0,img_split.shape[0],30):\n    for c in range(0,img_split.shape[1],30):\n        plt.axis(\"off\")\n        plt.imshow(img_split[r:r+30, c:c+30,:])\n        plt.savefig(f\"JET{Saving_Count}_Output.png\")","8db8789c":"#### EXAMPLE EXOPLANET SET","b8a8b538":"##### VISION","1ea6b6b9":"# PACKAGES AND LIBRARIES","3ecaaaca":"# MAIN PROCESS","2f54a45d":"# MODEL","ac71fc10":"# OVERVIEW","bc807a52":"##### MAIN PROCESS","b814c28b":"#### EYE AND EXOPLANET","dbe69c0f":"# TRANSFORMATION","a0e90849":"#### SINGLE EYE PROCESS"}}