{"cell_type":{"fdd7ab0c":"code","0974eda9":"code","52667f80":"code","76d7642e":"code","6ff0bb23":"code","ec9d2886":"code","e02d1c03":"code","fb7f6e2a":"code","f9241a73":"code","94829e76":"code","774a9f9e":"code","f785909f":"code","359ddbe8":"code","3244fe28":"code","fbbcda92":"code","8959aa10":"code","94537419":"code","69562aca":"code","2dbedca9":"code","b8e8e15c":"code","7e28f351":"code","53a5a567":"code","9cda0342":"code","81cfab09":"code","bccee921":"code","c146b9ec":"code","8f1155b2":"code","bc4bea79":"code","f3a07fd7":"code","e5150559":"code","4a6809cc":"code","e32e3318":"code","f7e044f6":"code","b6c2472f":"markdown","3d7550dd":"markdown","3a74ea63":"markdown","1afbe64f":"markdown","3ce4bde1":"markdown","ba931bc7":"markdown","34eb5d80":"markdown","b6acb858":"markdown","f8e5cf04":"markdown","d85931fb":"markdown","c12f1ec0":"markdown","ce6ab9d4":"markdown","31418165":"markdown","78e50952":"markdown","7986d145":"markdown","4c904c50":"markdown","444294d0":"markdown"},"source":{"fdd7ab0c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0974eda9":"df = pd.read_csv('..\/input\/company-bankruptcy-prediction\/data.csv')","52667f80":"df.head()","76d7642e":"df.shape","6ff0bb23":"df.isnull().sum()","ec9d2886":"df.duplicated().sum()","e02d1c03":"df.info()","fb7f6e2a":"#import required ploting libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","f9241a73":"#let us check the Target variable\ndf['Bankrupt?'].value_counts()","94829e76":"sns.countplot(x=df['Bankrupt?'])\nplt.title('Target feature - Bankrupt?')","774a9f9e":"from imblearn.over_sampling import SMOTE","f785909f":"X=df.drop(labels=['Bankrupt?'], axis=1)\ny=df['Bankrupt?']","359ddbe8":"oversample = SMOTE()\nX,y=oversample.fit_resample(X,y)","3244fe28":"sns.countplot(x=y)","fbbcda92":"from sklearn.preprocessing import StandardScaler","8959aa10":"from sklearn.feature_selection import SelectFromModel, mutual_info_classif, f_classif, SelectKBest\n\nfeature_selection=SelectKBest(f_classif,k=30).fit(X,y)\n#feat=feature_selection.fit(X_scale,y)","94537419":"selected_features=X.columns[feature_selection.get_support()]","69562aca":"scaler=StandardScaler()\nX_scale=scaler.fit_transform(X)","2dbedca9":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X_scale, y,test_size=0.3)","b8e8e15c":"from sklearn.linear_model import LogisticRegression\nlog_reg=LogisticRegression()\nlog_reg.fit(X_train,y_train)","7e28f351":"log_reg.score(X_test,y_test)","53a5a567":"y_pred=log_reg.predict(X_test)","9cda0342":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score","81cfab09":"accuracy_score(y_test,y_pred)","bccee921":"print(classification_report(y_test,y_pred))","c146b9ec":"sns.heatmap(confusion_matrix(y_test,y_pred), annot=True)","8f1155b2":"from sklearn.svm import SVC","bc4bea79":"model = SVC()\nmodel.fit(X_train, y_train)","f3a07fd7":"model.score(X_test,y_test)","e5150559":"svc_predict=model.predict(X_test)","4a6809cc":"accuracy_score(y_test,svc_predict)","e32e3318":"print(classification_report(y_test, svc_predict))","f7e044f6":"sns.heatmap(confusion_matrix(y_test,svc_predict,), annot=True)","b6c2472f":"all 96 columns are either int or float value. ","3d7550dd":"lets check the null, na or any duplicate values in the dataset","3a74ea63":"SVC model predicts the output with 96% accuracy where as Logit Regression predicts the output with 91% accuracy","1afbe64f":"# Feature Selection","3ce4bde1":"Select 30 independent variables out of 96 variables.","ba931bc7":"There is imbalance in the Target value, we need to oversample it based","34eb5d80":"# Support Vector Machine - Classification","b6acb858":"# Metrics","f8e5cf04":"# Metrics","d85931fb":"Oversampling the Target vaiable using SMOTE","c12f1ec0":"# Logistic Regression","ce6ab9d4":"There are 96 features including Target variable. we obviously need to decompose the features for better prediction","31418165":"# Standardize the Independent Variable","78e50952":"There is no duplicate or null values in the data frame. \nlets us check the datatype of the features","7986d145":"# Read and Explore Data","4c904c50":"# Oversampling the Target value","444294d0":"# Exploratory Data Analysis\nUnivariated data analysis"}}