{"cell_type":{"c3bbfb81":"code","146460d8":"code","1e98dd54":"code","98627b19":"code","f75bc9e5":"code","b1695698":"code","600e97c0":"code","122f9567":"code","328a53ad":"code","17bf7379":"code","b1986f73":"code","987fdbdb":"code","5f52a1d2":"code","b91837eb":"code","809e5f5b":"code","6f1d7095":"code","e9f51c20":"code","1656998e":"code","455ef0c7":"code","3f2401cd":"code","290d7481":"code","1c72dbae":"code","a3fb8e8d":"code","55da1c12":"code","6156cf22":"code","3143dbcf":"code","a406352f":"code","7b62a30d":"code","e589f59f":"code","222dc8de":"code","f85a0065":"code","36d2f415":"code","ec63d647":"code","1c842ff2":"code","96eb0475":"code","46b83f5c":"code","2f05f782":"code","970fb4a6":"code","d7e62c56":"code","ba9619c2":"code","3db76bb7":"code","bffd1a85":"code","211b289e":"code","d377f905":"markdown","18d13077":"markdown"},"source":{"c3bbfb81":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport cv2\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import DBSCAN","146460d8":"train = pd.read_csv(\"..\/input\/shopee-product-matching\/train.csv\")\ntrain","1e98dd54":"test = pd.read_csv(\"..\/input\/shopee-product-matching\/test.csv\")\ntest","98627b19":"train.title.nunique()","f75bc9e5":"train.shape","b1695698":"len(os.listdir(\"..\/input\/shopee-product-matching\/train_images\"))","600e97c0":"train.label_group.nunique()","122f9567":"train[train['label_group']==249114794]","328a53ad":"img = plt.imread(\"..\/input\/shopee-product-matching\/train_images\/0000a68812bc7e98c42888dfb1c07da0.jpg\")\nplt.imshow(img)","17bf7379":"img = plt.imread(\"..\/input\/shopee-product-matching\/train_images\/f83b49a86a0ee8592e3bf0204da3fbdf.jpg\")\nplt.imshow(img)","b1986f73":"def show_group(df, label_group):\n    tmp = df[df['label_group']==label_group]\n    img_dir = \"..\/input\/shopee-product-matching\/train_images\"\n    imgs_path = [ f\"{img_dir}\/{name}\" for name in list(tmp['image']) ]\n    imgs = [plt.imread(path) for path in imgs_path]\n    titles = list(tmp['title'])\n    for tt in titles:\n        print(tt)\n    cols = 4\n    rows = (len(imgs)+cols-1)\/\/cols\n    plt.figure(figsize=(10, 10))\n    for i in range(0,len(imgs)):\n        plt.subplot(rows,cols,i+1)\n        plt.imshow(imgs[i])\n        plt.xticks([])\n        plt.yticks([])\n    plt.show()","987fdbdb":"def show(tmp):\n    img_dir = \"..\/input\/shopee-product-matching\/train_images\"\n    imgs_path = [ f\"{img_dir}\/{name}\" for name in list(tmp['image']) ]\n    imgs = [plt.imread(path) for path in imgs_path]\n    titles = list(tmp['title'])\n    for tt in titles:\n        print(tt)\n    cols = 4\n    rows = (len(imgs)+cols-1)\/\/cols\n    plt.figure(figsize=(10, 10))\n    for i in range(0,len(imgs)):\n        plt.subplot(rows,cols,i+1)\n        plt.imshow(imgs[i])\n        plt.xticks([])\n        plt.yticks([])\n    plt.show()","5f52a1d2":"show_group(train, 249114794)","b91837eb":"show_group(train, 2937985045)","809e5f5b":"show_group(train, 2395904891)","6f1d7095":"show_group(train, 4093212188)","e9f51c20":"show_group(train , 3648931069)","1656998e":"show_group(train, 3776555725)","455ef0c7":"show_group(train , 2736479533)","3f2401cd":"show_group(train , 1663538013)","290d7481":"show_group(train , 1141798720)","1c72dbae":"show_group(train, 994676122)","a3fb8e8d":"train[train['label_group']==1141798720]","55da1c12":"img = plt.imread(\"..\/input\/shopee-product-matching\/train_images\/ffdd054398884b04bdab9e41d30c7fb2.jpg\")\nplt.imshow(img)","6156cf22":"\nimg = plt.imread(\"..\/input\/shopee-product-matching\/train_images\/6e5e87b82b0b484f7739f83a0de654f5.jpg\")\nplt.imshow(img)","3143dbcf":"tmp = train[train['label_group']==1141798720]\ntmp = tmp.reset_index()","a406352f":"tmp","7b62a30d":"def metric_fun(x1, x2):\n    assert len(x1)==len(x2), f\"{len(x1)}, {len(x2)}\"\n    length = len(x1)\n    cnt = 0\n    for i in range(length):\n        if x1[i]!=x2[i]:\n            cnt = cnt + 1\n    return cnt\n\ndef str2ary(s):\n    ret = []\n    for i in range(len(s)):\n        ret.append(ord(s[i]))\n        \n    return np.array(ret)","e589f59f":"X = np.array([str2ary(s) for s in tmp['image_phash'].values])\n","222dc8de":"X.shape","f85a0065":"labels = DBSCAN(eps=1, min_samples=2, metric=metric_fun).fit_predict(X)\nlabels","36d2f415":"tmp['cluster_label'] = labels","ec63d647":"show(tmp[tmp['cluster_label']==-1])","1c842ff2":"show(tmp[tmp['cluster_label']==0])","96eb0475":"show(tmp[tmp['cluster_label']==1])","46b83f5c":"show(tmp[tmp['cluster_label']==2])","2f05f782":"show(tmp[tmp['cluster_label']==3])","970fb4a6":"show(tmp[tmp['cluster_label']==4])","d7e62c56":"show(tmp[tmp['cluster_label']==5])","ba9619c2":"train_smp = train.sample(n=1000).reset_index()\nX_train = np.array([str2ary(s) for s in train_smp['image_phash'].values])\ntrain_cluster_labels = DBSCAN(eps=3, min_samples=2, metric=metric_fun).fit_predict(X_train)\ntrain_smp['cluster_labels']=train_cluster_labels\ntrain_smp.cluster_labels.unique()","3db76bb7":"show(train_smp[train_smp['cluster_labels']==0])","bffd1a85":"show(train_smp[train_smp['cluster_labels']==-1].sample(n=20))","211b289e":"show(train_smp[train_smp['cluster_labels']==-1].sample(n=20))","d377f905":"1. clustering image by image phash\n2. clustering image by title similarity\n3. using DBSCAN to clustering ?","18d13077":"\n\u6b63\u8d1f\u6837\u672c\u6784\u9020\u601d\u8def\uff1a  \n\u6b63\u4f8b\uff1a\u4ece\u540c\u4e00\u4e2agroup\u4e2d\u62bd\u53d6\u6b63\u4f8b\u6837\u672c\u5bf9\uff0c\u6839\u636eimage phash\u548c\u6587\u672c\u8ddd\u79bb\uff0c\u9009\u53d6\u96be\u4f8b\u6837\u672c\uff0c\u4e22\u5f03\u7b80\u5355\u6837\u672c\u5bf9\uff08\u8ddd\u79bb\u975e\u5e38\u8fd1\uff09  \n\u8d1f\u4f8b\uff1a\u4ece\u4e0d\u540c\u7684group\u4e2d\u62bd\u53d6\u8d1f\u4f8b\u6837\u672c\u5bf9\uff0c\u6839\u636eimage phash\u548c\u6587\u672c\u8ddd\u79bb\uff0c\u9009\u53d6\u96be\u4f8b\u6837\u672c\uff0c\u4e22\u5f03\u7b80\u5355\u6837\u672c\u5bf9\uff08\u8ddd\u79bb\u975e\u5e38\u8fdc\uff09  "}}