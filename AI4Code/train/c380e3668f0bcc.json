{"cell_type":{"cc00ea18":"code","073aa2c0":"code","4a9908fc":"code","1d26bbc0":"code","ce3a5bf7":"code","0e1c76e3":"code","8e938b8a":"code","8aa22bdf":"code","7d293e1d":"code","f373b0f9":"code","9e868d07":"code","e7b34c98":"code","64b270c2":"code","bb843238":"code","01ffaef4":"code","a9e7db56":"code","d4cb277c":"code","d513b1cc":"code","690e815b":"code","2ad88ef2":"markdown","cbad7b9f":"markdown","e0d843bf":"markdown","acddab9e":"markdown","86eb14a6":"markdown","8dd46c9d":"markdown","b20c1144":"markdown","923a5d14":"markdown","ad2a1a43":"markdown","3ee00860":"markdown","3d56526a":"markdown","5cf01e0a":"markdown","c22ff0be":"markdown","fbdd18e3":"markdown","efcb2e9f":"markdown"},"source":{"cc00ea18":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport itertools\nplt.style.use('seaborn')","073aa2c0":"import os, zipfile\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        p = os.path.join(dirname, filename)\n        with zipfile.ZipFile(p, 'r') as zip_ref:\n            zip_ref.extract('.'.join(filename.split('.')[:-1]))\nos.listdir()","4a9908fc":"train = pd.read_json('train.json')\ntest = pd.read_json('test.json')\ntrain[:3]","1d26bbc0":"lists_of_ingredients = train.ingredients.values.ravel().tolist() + test.ingredients.values.ravel().tolist()\n\nunique_ingredients = sorted(list(set(list(itertools.chain(*lists_of_ingredients)))))\n\nunique_ingredients[:3],len(unique_ingredients)","ce3a5bf7":"def format_ingredients(full_list,given_list):\n    l = [0] * len(full_list)\n    for x in given_list:\n        l[full_list.index(x)] = 1\n    return l","0e1c76e3":"%%time\ntrain[unique_ingredients] = pd.DataFrame(train.ingredients.apply(lambda x: format_ingredients(unique_ingredients,x)).tolist(),columns=unique_ingredients)\ntrain.drop(['ingredients'],axis=1,inplace=True)","8e938b8a":"%%time\ntest[unique_ingredients] = pd.DataFrame(test.ingredients.apply(lambda x: format_ingredients(unique_ingredients,x)).tolist(),columns=unique_ingredients)\ntest.drop(['ingredients'],axis=1,inplace=True)","8aa22bdf":"train.cuisine.value_counts().plot.bar(rot=0,figsize=(20,7));","7d293e1d":"train.sum()[2:].sort_values(ascending=False)[:15].plot.bar(rot=0,figsize=(25,7));","f373b0f9":"from sklearn import metrics\nfrom sklearn.model_selection import train_test_split","9e868d07":"train_,test_ = train_test_split(train,test_size=0.33,random_state=42,stratify=train.cuisine)","e7b34c98":"'train:',train_.cuisine.value_counts() \/ len(train_),'test:',test_.cuisine.value_counts() \/ len(test_)","64b270c2":"import xgboost as xgb","bb843238":"%%time\nxgc = xgb.XGBClassifier(objective='multi:softmax',num_class=train.cuisine.nunique())\nxgc.fit(train_[train_.columns[2:]],train_['cuisine'])","01ffaef4":"results = test_[['id','cuisine']].copy()\nresults['y_pred'] = xgc.predict(test_[test_.columns[2:]])","a9e7db56":"print(metrics.classification_report(results.cuisine,results.y_pred))","d4cb277c":"sns.heatmap(metrics.confusion_matrix(results.cuisine,results.y_pred),annot=True,fmt='d');","d513b1cc":"%%time\nsub = test[['id']].copy()\nsub['cuisine'] = xgc.predict(test[test.columns[1:]])","690e815b":"sub.to_csv('submission.csv',index=False)","2ad88ef2":"**Results**","cbad7b9f":"**Submission**","e0d843bf":"**Confusion Matrix**","acddab9e":"Usually I retrain using all train data before submission,\n\nbut since this appraoche takes ages, I will just use the model already trained on splitted data","86eb14a6":"**Split data into train\/test**","8dd46c9d":"**Classification Report**","b20c1144":"# What do we have for dinner ?","923a5d14":"## Some Quick EDA","ad2a1a43":"**Check proportions**","3ee00860":"## Some Data","3d56526a":"**Top 15 most used Ingredients**","5cf01e0a":"## Imports","c22ff0be":"**Training**","fbdd18e3":"**Number of receipes by Cuisine**","efcb2e9f":"## Modelling"}}