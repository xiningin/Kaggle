{"cell_type":{"de7ade42":"code","85a90d93":"code","6ac06039":"code","4dbe1a00":"code","53075020":"code","2137a78e":"code","96e67594":"code","8c40e200":"code","a890e309":"code","0fdbc759":"code","cc4a4074":"code","cb681c36":"code","8723fc62":"code","406144e9":"code","dffc6961":"code","c51d8fc1":"code","dd257bbe":"code","1ed343d5":"code","f959d337":"code","b5eb37d9":"code","a4ac36b3":"markdown","f0038ccb":"markdown","14ae845d":"markdown","d4944b6f":"markdown","33ed0055":"markdown","f54462c8":"markdown","d16bfd97":"markdown","12b04c8d":"markdown"},"source":{"de7ade42":"pip install pycountry-convert","85a90d93":"pip install geopy","6ac06039":"pip install folium","4dbe1a00":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","53075020":"oil_df = pd.read_csv(\"\/kaggle\/input\/ntt-data-global-ai-challenge-06-2020\/Crude_oil_trend_From1986-10-16_To2020-03-31.csv\")\noil_df['Price_diff'] = oil_df['Price'].diff(1)\noil_df = oil_df[oil_df['Date'] >= \"2010-01-01\"]\n#oil_df = oil_df.sort_values(ascending = False, by = \"Date\")","2137a78e":"# Import my necessary libraries\nimport os\nimport re\nimport pandas as pd\nimport numpy as np\nimport datetime as dt\n\nimport imageio\nimport matplotlib.pyplot as plt\nimport folium\nfrom folium import plugins\nfrom folium.plugins import MarkerCluster","96e67594":"#function to get longitude and latitude data from country name\nfrom geopy.geocoders import Nominatim\ngeolocator = Nominatim(user_agent = \"myGeocoder\")\ndef geolocate(country):\n    try:\n        # Geolocate the center of the country\n        loc = geolocator.geocode(country)\n        # And return latitude and longitude\n        return (loc.latitude, loc.longitude)\n    except:\n        # Return missing value\n        return (np.nan, np.nan)\n","8c40e200":"# Read in the covid data\ncovid_df = pd.read_csv(\"\/kaggle\/input\/ntt-data-global-ai-challenge-06-2020\/COVID-19_train.csv\")\ncovid_df['Price_diff'] = covid_df['Price'].diff(1)\ncovid_df['Price_diff_cum'] = covid_df['Price_diff'].cumsum()","a890e309":"# Create a df with *_total_cases columns\ntotal_cases_cols = [col for col in covid_df if col.endswith(\"_total_cases\")]\n\ntotal_cases_cols.insert(0, \"Date\")\ntotal_cases_cols.insert(len(total_cases_cols)+1, \"Price\")\ntotal_cases_df = covid_df[total_cases_cols]\n\ncountries = [col.split(\"_\")[0] for col in total_cases_df if col.endswith(\"_total_cases\")]\ncountries = [re.sub(r'\\B([A-Z])', r' \\1', i) for i in countries]\n\ntotal_columns = countries.copy()\ntotal_columns.insert(0, \"Date\")\ntotal_columns.insert(len(total_columns)+1, \"Price\")\n\ntotal_cases_df.columns = new_columns\n#total_cases_df.head()\n\n# change the df structure to plot it acorss time\ntotal_cases_df = total_cases_df.drop(columns = [\"Price\",\"World\"])\n\ntime_total_cases = total_cases_df.melt(id_vars = ['Date'],\n                                   var_name = \"country\",\n                                   value_name = \"total_cases\")\n\ntm_total_cases = time_total_cases.groupby([\"Date\",\"country\"]).sum().reset_index()\n\n\ntm_total_cases_df = pd.merge(tm_total_cases, coord_df, how=\"left\", left_on = \"country\", right_on=\"country\")\n\n# Select all country positions with confirmed cases\nnon_neg_total_cases = tm_total_cases_df[tm_total_cases_df.total_cases > 0]\nls_non_neg_total_cases = non_neg_total_cases.groupby('Date')['coord'].apply(list)\n\n\n# Generate the map\nls_non_neg_total_cases\ndate_index = ls_non_neg_total_cases.index.to_list()\ndata = ls_non_neg_total_cases.values.tolist()\n\n\ngradient = {0:\"blue\", 0.5:\"orange\", 1: \"red\"}\n\nworld_map= folium.Map(location = [42.6384261, 12.674297],tiles=\"cartodbpositron\", zoom_start =2)\n\nhm = plugins.HeatMapWithTime(\n    data = data,\n    index=date_index,\n    auto_play=True,\n    radius=10,\n    gradient=gradient\n)\n\nhm.add_to(world_map)\n\n#show the map\nworld_map","0fdbc759":"fig, ax1 = plt.subplots(figsize = (20,5))\n\nplt.xticks(np.arange(0, len(oil_df['Price_diff']),20), rotation=\"vertical\", fontsize = 7)\nplt.axvline(2510)\n\n#l1, = ax1.plot(covid_df_fr['Date'], covid_df_fr['Price'], color = 'tab:red')\nl1, = ax1.plot(oil_df['Date'], oil_df['Price_diff'], color = 'tab:red')\nax1.set_ylabel(\"Oil price change ($)\", color = 'tab:red')\n\nplt.title(\"Oil price fluctuations between 2010 - 2020\")\nplt.show()","cc4a4074":"fig, ax1 = plt.subplots(figsize = (15,5))\n\nplt.xticks(rotation=\"vertical\")\n\n#l1, = ax1.plot(covid_df_fr['Date'], covid_df_fr['Price'], color = 'tab:red')\nl1, = ax1.plot(covid_df['Date'], covid_df['Price'], color = 'tab:red')\nax1.set_ylabel(\"Oil price ($)\", color = 'tab:red')\n\nax2 = ax1.twinx()\n\nl2, = ax2.plot(covid_df['Date'], covid_df['World_total_cases'])\nax2.set_ylabel(\"Number of cases\")\n\nfig.legend((l1, l2),('Oil price', 'Total cases'),'upper right')\nplt.title(\"Daily world cases vs. Oil price evolution\")\nplt.show()","cb681c36":"fig, ax1 = plt.subplots(figsize = (15,5))\n\nplt.xticks(rotation=\"vertical\")\n\n#l1, = ax1.plot(covid_df_fr['Date'], covid_df_fr['Price'], color = 'tab:red')\nl1, = ax1.plot(covid_df['Date'], covid_df['Price_diff'], color = 'tab:red')\nax1.set_ylabel(\"Oil price change ($)\", color = 'tab:red')\n\nax2 = ax1.twinx()\n\nl2, = ax2.plot(covid_df['Date'], covid_df['World_new_cases'])\nax2.set_ylabel(\"Number of worldwide new cases\")\n\nfig.legend((l1, l2),('Oil price fluctuations', 'New cases'),'upper right')\nplt.title(\"World daily new reported cases vs. Oil price fluctuations\")\nplt.show()","8723fc62":"# Create a df with *_new_cases columns\nnew_cases_cols = [col for col in covid_df if col.endswith(\"_new_cases\")]\n\nnew_cases_cols.insert(0, \"Date\")\nnew_cases_cols.insert(len(new_cases_cols)+1, \"Price\")\nnew_cases_df = covid_df[new_cases_cols]\n\ncountries = [col.split(\"_\")[0] for col in new_cases_df if col.endswith(\"_new_cases\")]\ncountries = [re.sub(r'\\B([A-Z])', r' \\1', i) for i in countries]\n\nnew_columns = countries.copy()\nnew_columns.insert(0, \"Date\")\nnew_columns.insert(len(new_columns)+1, \"Price\")\n\nnew_cases_df.columns = new_columns","406144e9":"# # For each country, get the coordinates:\n# coord = [list(geolocate(i)) for i in countries]\n# coord_df = pd.DataFrame({\"country\": countries,\n#                          \"coord\": coord})","dffc6961":"# change the df structure to plot it acorss time\nnew_cases_df = new_cases_df.drop(columns = \"Price\")\n\ntime_new_cases = new_cases_df.melt(id_vars = ['Date'],\n                                   var_name = \"country\",\n                                   value_name = \"new_cases\")\n\ntm_new_cases = time_new_cases.groupby([\"Date\",'country']).sum().reset_index()\n\ntm_new_cases_df = pd.merge(tm_new_cases, coord_df, how=\"left\", left_on = \"country\", right_on=\"country\")","c51d8fc1":"# Look at how the virus spreading progresses:\nnew_cases = new_cases_df[new_cases_df['Date'] == \"2020-02-13\"].values[0][1:]\nnew_cases_02_13 = pd.DataFrame({\"country\": countries,\n                               \"new_cases\": new_cases})\n\n#coord = [geolocate(i) for i in new_cases_02_13[\"country\"]]\nnew_cases_02_13[\"latitude\"] = [i[0] for i in coord]\nnew_cases_02_13[\"longitude\"] = [i[1] for i in coord]\n\n\n# Create a world map to show distributions of infected people \ndf = new_cases_02_13[new_cases_02_13['new_cases'] >0][:-2]\ntotal = np.sum(df['new_cases'])\n#empty map\nworld_map= folium.Map(location = [42.6384261, 12.674297], tiles=\"cartodbpositron\", zoom_start =2)\n\nmarker_cluster = MarkerCluster().add_to(world_map)\n#for each coordinate, create circlemarker of cases\n\nfor i in range(len(df)):\n    lat = df.iloc[i]['latitude']\n    long = df.iloc[i]['longitude']\n    radius= (df.iloc[i]['new_cases']\/total)*10\n    popup_text = \"\"\"country : {}<br>\n                 new cases : {}<br>\"\"\"\n    popup_text = popup_text.format(df.iloc[i]['country'],\n                               df.iloc[i]['new_cases']\n                               )\n    try:\n        if df.iloc[i]['new_cases'] > 1000:\n            col = \"red\"\n        elif (df.iloc[i]['new_cases'] > 500) & (df.iloc[i]['new_cases'] <= 1000):\n            col = \"orange\"\n        else:\n            col = \"green\"\n        folium.CircleMarker(location = [lat, long], radius=radius, popup= popup_text, fill =True, fill_color = col, color=col).add_to(world_map)\n    except ValueError:\n        continue\n\n#show the map\nworld_map","dd257bbe":"# Select a date towards the end, when the pandemic has reached all corners of the world\nnew_cases = new_cases_df[new_cases_df['Date'] == \"2020-03-27\"].values[0][1:]\nnew_cases\nnew_cases_03_27 = pd.DataFrame({\"country\": countries,\n                               \"new_cases\": new_cases})\n# Get the country coordinates\n\ncoord = [geolocate(i) for i in new_cases_03_27[\"country\"]]\nnew_cases_03_27[\"latitude\"] = [i[0] for i in coord]\nnew_cases_03_27[\"longitude\"] = [i[1] for i in coord]\n\n# Create a world map to show distributions of users \ndf = new_cases_03_27[new_cases_03_27['new_cases'] >0][:-2]\ntotal = np.sum(df['new_cases'])\n\n#empty map\nworld_map= folium.Map(location = [42.6384261, 12.674297], tiles=\"cartodbpositron\", zoom_start =2)\n\n#marker_cluster = MarkerCluster().add_to(world_map)\n#for each coordinate, create circlemarker of cases\n\nfor i in range(len(df)):\n    lat = df.iloc[i]['latitude']\n    long = df.iloc[i]['longitude']\n    radius= (df.iloc[i]['new_cases']\/total)*30\n    popup_text = \"\"\"country : {}<br>\n                 new cases : {}<br>\"\"\"\n    popup_text = popup_text.format(df.iloc[i]['country'],\n                               df.iloc[i]['new_cases']\n                               )\n    try:\n        if df.iloc[i]['new_cases'] > 1000:\n            col = \"red\"\n        elif (df.iloc[i]['new_cases'] > 500) & (df.iloc[i]['new_cases'] <= 1000):\n            col = \"orange\"\n        else:\n            col = \"green\"\n        folium.CircleMarker(location = [lat, long], radius=radius, popup= popup_text, fill =True, fill_color = col, color=col).add_to(world_map)\n    except ValueError:\n        continue\n\n#show the map\nworld_map","1ed343d5":"#calculate the PEARSON CORRELATION COEFFICIENT\nfrom numpy import cov\nimport scipy.stats\nprint(\"covariance {}\".format(cov(covid_df['World_new_cases'][1:], covid_df['Price_diff'][1:])[0][0])) # positive\nscipy.stats.pearsonr(covid_df['World_new_cases'][1:], covid_df['Price_diff'][1:])","f959d337":"TIF = \"\/kaggle\/input\/ntt-data-global-ai-challenge-06-2020\/NTL-dataset\/tif\/\"\ntif_list = os.listdir(\"\/kaggle\/input\/ntt-data-global-ai-challenge-06-2020\/NTL-dataset\/tif\/\")\nfrance_list = [i for i in tif_list if i.startswith(\"France\")]\nfrance_list.sort()","b5eb37d9":"fig = plt.figure(figsize = (20,10))\nnum=1\nfor each in france_list:\n    image = imageio.imread(os.path.join(TIF, each))\n    ax = fig.add_subplot(3,5,num)\n    ax.imshow(image)\n    \n    interval = str.split(each, \".tif\")[0]\n    ax.set_title(interval)\n    num += 1","a4ac36b3":"At a closer inspection of the data, something catches my eyes. 15th of January is the first day when COVID-19 is reported to have spread to another country. If the oil price was, until now, exhibiting some small, normal fluctuations, during the next week, as cases arise in 5 neighbouring countries, the oil price is obviously affected. \nOn the 27th of January the virus reaches Europe and Canada, causing another higher drop in price.\nBetween 20th and 24th of February the oil extracting countries started to report COVID-19 cases as well. \nThe plunge on the 9th of March comes after a weekend of new annonuncements, as airports are starting to forbid inbound flights.\n\nThe dramatic increase of the worldwide reported new cases on the 13th of February doesn't seem to shake the oil price too much. The reason might be that all these extra cases were recorded in China and the oil prices is more sensitive to world wide changes.","f0038ccb":"### The picture of new cases on 2020-02-13","14ae845d":"The picture of the pandemic changed quite a lot between February and March. If at first, one could pinpoint the worldwide increase in cases to one source (2020-02-13), by the end of March, the contributor was the entire world.","d4944b6f":"## How COVID-19 spread worldwide\n\nThe coronavirus pandemic, also refered to as COVID-19, is an ongoing pandemic caused by SARS-CoV-2 (Severe Acute Respiratory Syndrome). It is thought to have originated in Wuhan, China, in December 2019 and up until today it has reached 216 countries, infecting over 6.5 million people. The map below shows which are the territories affected by COVID-19, as new cases started to be recorded.","33ed0055":"The pandemic has caused social and economic disruption, including the largest global recession since the Great Depression. Sports, cultural, religious events were cancelled, schools were closed, companies either interrupted their activity or encouraged employees to work from home. The free movement of people was highly limited both inside and outside their city, travelling was restricted to the point that flight companies went backrupt and the oil price plunged below 0 because of the decrease in demand. By inspecting the price movement of oil for the last 10 years, it is safe to say that the drop in the last three months, the same coinciding with the spread of COVID-19, is not something unseen before. Oil price is defined by such fluctuations. The pandemic, however, through the political decisions limiting people movement, accelerated the price drop.","f54462c8":"Below, one can see the negative trend of the oil price for the three months of the year, in relation to the continuous increase in total worldwide COVID-19 reported number of cases.","d16bfd97":"### The picture of new cases on 2020-03-27","12b04c8d":"### As an example for reading the satellite images, let's consider France"}}