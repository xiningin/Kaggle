{"cell_type":{"6007ffed":"code","2cc9f70b":"code","66b7fe79":"code","e40c8451":"code","a571888c":"code","0c3b7e51":"code","d458b04d":"code","2f23bd88":"code","09dba0e2":"code","d18c6cad":"code","3d70b58d":"code","f878fd7c":"code","951dcac4":"code","571dc060":"code","a706ed22":"code","c70a31bd":"code","53c0bc22":"code","c42b4b0d":"markdown","0ad275b0":"markdown","9a89c604":"markdown","7c9b0ae0":"markdown","14435e8e":"markdown","ea22b97f":"markdown","ea5a208a":"markdown","022ed632":"markdown","4ea25f28":"markdown","0ddab76f":"markdown","2d229ce6":"markdown"},"source":{"6007ffed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2cc9f70b":"import pandas as pd\nbrics = pd.read_csv(\"..\/input\/basics\/brics.csv\")\ncars = pd.read_csv(\"..\/input\/basics\/cars.csv\")","66b7fe79":"def your_choice(answer):\n    if answer > 5:\n        print(\"You are overaged.\")\n    elif answer <= 5 and answer >1:\n        print(\"Welcome to the Toddler\u2019s Club!\")\n    else:\n        print(\"You are too young for Toddler\u2019s Club.\")\n\nprint(your_choice(6))\nprint(your_choice(3))\nprint(your_choice(1))\nprint(your_choice(0))","e40c8451":"pizza = [\"New York Style Pizza\", \"Pan Pizza\", \"Thin n Crispy Pizza\", \"Stuffed Crust Pizza\"]\n\nfor choice in pizza:\n    if choice == \"Pan Pizza\":\n        print(\"Please pay $16. Thank you!\")\n        print(\"Delicious, cheesy \" + choice)\n    else:\n        print(\"Cheesy pan pizza is my all-time favorite!\")\n\nprint(\"Finally, I\u2019m full!\") ","a571888c":"fam = [1.73, 1.68, 1.71, 1.89]\nfor ele in enumerate(fam) :\n    print(\"Tuple \" , ele)\nfor index, height in enumerate(fam) :\n    print(\"index \" + str(index) + \": \" + str(height))\n","0c3b7e51":"for c in \"family\" :\n    print(c.capitalize()) ","d458b04d":"import pandas as pd\nbrics = pd.read_csv(\"..\/input\/basics\/brics.csv\",index_col = 0)\nprint(brics)\n\nfor lab, row in brics.iterrows() :\n    print(\"Label : \",lab)\n    print(\"Row : \",row)\n","2f23bd88":"print(\"Extracting label and capital column from the row \")\nfor lab, row in brics.iterrows() : \n    print(lab + \": \" + row[\"capital\"])\n","09dba0e2":"counter = 0\n\nwhile (counter < 10):\n    print('The count is:' , counter)\n    counter = counter + 1\n\nprint(\"Done!\")\n","d18c6cad":"f = lambda x, y : x + y\nf(1,1)","3d70b58d":"Celsius = [39.2, 36.5, 37.3, 37.8]\nFahrenheit = map(lambda x: (float(9)\/5)*x + 32, Celsius)\nprint(list(Fahrenheit))\n","f878fd7c":"fib = [0,1,1,2,3,5,8,13,21,34,55]\nresult = filter(lambda x: x % 2, fib)\nprint(\"Filtered List : \",list(result))\n","951dcac4":"from functools import reduce\n# Summing up a list using reduce with lambda function\nprint(\"Summing up a list using reduce with lambda function : \",reduce(lambda x,y: x+y, [47,11,42,13]))\n\n","571dc060":"# Determining the maximum of a list of numerical values by using reduce\nf = lambda a,b: a if (a > b) else b\nprint(\"Determining the maximum of a list of numerical values by using reduce : \",reduce(f, [47,11,42,102,13]))","a706ed22":"try:\n   fh = open(\"testfile2\", \"w\")\n   fh.write(\"This is my test file for exception handling!!\")\nexcept IOError:\n   print(\"Error: can\\'t find file or read data\")\nelse:\n   print(\"Written content in the file successfully\")\n   fh.close()\n","c70a31bd":"try:\n    fh = open(\"testfile\", \"w\")   \n    fh.write(\"This is my test file for exception handling!!\")\n    print(\"File Written Succesfully \\n\")\nfinally:\n    fh.close()\n    print (\"Finally clause : Postprocessing completed \\n\")\n","53c0bc22":"try:\n   fh = open(\"testfile3\", \"r\")\n   fh.write(\"This is my test file 3 for exception handling!!\")\nexcept:\n    print(\"Error : can\\'t find file or read data\")\nfinally:\n   print(\"Finally section \")\n","c42b4b0d":"## Agenda\nIn this notebook, we will be covering following topics :-\n- If-then, do-while, for loop\n- Exception Handling\n- Lambda Function\n\n","0ad275b0":"## The While Loop Example","9a89c604":"## Map Example with Lambda Function","7c9b0ae0":"## For Loop with Iterrows Example","14435e8e":"## For Loop Example with Enumerate","ea22b97f":"## Filtering Example","ea5a208a":"## Reducing a List","022ed632":"## Exception Handling","4ea25f28":"## For Loop Example | List Iteration","0ddab76f":"## Lambda Function","2d229ce6":"## Conditional Statements Example"}}