{"cell_type":{"c9dc8988":"code","49bc22ef":"code","f450dc1b":"code","a2686040":"code","3f6239b4":"code","c459706b":"code","c879f304":"code","87c82474":"code","bac7ea5f":"code","07328cf9":"markdown","113bf962":"markdown","b2887d9c":"markdown","07ce141b":"markdown","94481041":"markdown","1af5a89d":"markdown","46db3d2e":"markdown","ad2d5baa":"markdown","589db4b2":"markdown"},"source":{"c9dc8988":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom datetime import datetime\n\n#Importing Data plotting libraries\nimport matplotlib.pyplot as plt     \nimport seaborn as sns      \nimport plotly.express as px\nimport plotly.graph_objects as go\n\n# Text Analytics\nfrom wordcloud import WordCloud\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","49bc22ef":"killings = pd.read_csv(\"\/kaggle\/input\/fatal-police-shootings-in-the-us\/PoliceKillingsUS.csv\", encoding=\"windows-1252\")\npercent_over25 = pd.read_csv(\"\/kaggle\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv\", encoding=\"windows-1252\")\nmedian_household_income = pd.read_csv(\"\/kaggle\/input\/fatal-police-shootings-in-the-us\/MedianHouseholdIncome2015.csv\", encoding=\"windows-1252\")\nbelow_poverty = pd.read_csv(\"\/kaggle\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv\", encoding=\"windows-1252\")","f450dc1b":"killings['date'] = killings['date'].apply(lambda x: datetime.strptime(x, \"%d\/%m\/%y\"))\nkillings['year_month'] = killings['date'].apply(lambda x: x.strftime('%m\/%Y'))\n\nkillings.head()","a2686040":"state_wise = killings.groupby('state')['id'].agg('count').reset_index()\nstate_wise = state_wise.sort_values('id', ascending=False)\n\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=state_wise['state'], y=state_wise['id'])\nplt.xticks(rotation= 90)\nplt.xlabel('States')\nplt.ylabel('Killings count')\nplt.title(\"Statewise police killings in the US\")","3f6239b4":"race = killings.groupby('race')['id'].agg('count').reset_index()\nrace = race.sort_values('id', ascending=False)\nlabels = ['White', 'Black', 'Hispanic', 'Asian', 'Native American', 'Others']\n\n#Vizualization\nfig = go.Figure()\nfig.add_trace(go.Bar(\n    x=labels,\n    y=race['id']\n))\nfig.update_layout(\n    title=\"Most killed Races\",\n    xaxis_title=\"Races\",\n    yaxis_title=\"Killings Count\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=18,\n        color=\"#7f7f7f\")\n)\nfig.show()","c459706b":"racial_data = killings[(killings['race'] == 'W') | (killings['race'] == 'B') | (killings['race'] == 'H')]","c879f304":"pd.options.mode.chained_assignment = None  # default='warn'\n# Let's assign age groups\nbins = [0, 10, 20, 30, 40, 50, 60, 70, np.inf]\nlabels = ['0', '10s', '20s', '30s', '40s', '50s', '60s', '70+']\nracial_data['age_groups'] = pd.cut(killings['age'], bins, labels=labels)\nage_data = racial_data.groupby(['age_groups', 'race'])['id'].agg('count').reset_index()\n\nfig = px.line(age_data, x='age_groups', y='id', color='race')\nfig.update_layout(\n    title=\"Agewise killings among most killed races\",\n    xaxis_title=\"Age Groups\",\n    yaxis_title=\"Killings Count\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=18,\n        color=\"#7f7f7f\")\n)\nfig.show()\n","87c82474":"arms = racial_data['armed'].values\nwordcloud = WordCloud(background_color = 'white', min_font_size = 3, max_words=20).generate(str(arms))\nplt.figure(figsize = (8, 8), facecolor = None)\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.show()","bac7ea5f":"fleeing = racial_data.groupby(['flee', 'race'])['id'].agg('count').reset_index()\n\n#Let's visualize\nfig = px.bar(fleeing, x='flee', y='id', color='race')\nfig.update_layout(\n    title=\"Were the people trying to flee at the time of death\",\n    xaxis_title=\"Flee\",\n    yaxis_title=\"People Count\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=18,\n        color=\"#7f7f7f\")\n)\nfig.show()","07328cf9":"## Let's analyze the three races that are killed the most -----------> W, B, H","113bf962":"### Were they fleeing?","b2887d9c":"# Analyzing the Killings statewise","07ce141b":"### What kind of arms were they carrying?","94481041":"### What age groups were most killed ?","1af5a89d":"## Which race is killed the most ----------> White","46db3d2e":"## Which State has most killings ----------> CA","ad2d5baa":"# Import the Libraries","589db4b2":"# Load the Datasets"}}