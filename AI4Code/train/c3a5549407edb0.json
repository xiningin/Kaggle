{"cell_type":{"f524729b":"code","7c00017b":"code","28838574":"code","94395503":"code","94fadc13":"code","0a11e8c8":"code","cef7e9c5":"code","990b3a07":"code","511e3e75":"code","a0d85fd1":"code","b3ae2885":"code","89933528":"code","9cb5a3cf":"code","b20c1a7c":"markdown","59be7f10":"markdown","0c609762":"markdown","49190f38":"markdown"},"source":{"f524729b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7c00017b":"data = pd.read_csv('..\/input\/chess\/games.csv')\ndata.info()","28838574":"data.corr()","94395503":"f,ax = plt.subplots(figsize = (18,18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5,fmt='.1f',ax=ax) # annot karelerin uzerindeki degerleri gosterir\nplt.show()                                                          # ax sol ve asagidaki degerler","94fadc13":"data.head(10)","0a11e8c8":"data.columns","cef7e9c5":"beyaz ve siyah oyuncularin kuvvet grafigi;","990b3a07":"data.white_rating.plot(kind = 'line',color = 'g', label = 'white_rating', linewidth =1, alpha = 0.5, grid = True, linestyle = ':')\ndata.black_rating.plot(color = 'r', label ='black_rating', linewidth = 1, alpha = 0.5, grid = True,linestyle = '-.')\nplt.legend(loc = 'upper right')\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.title('Line Plot')\nplt.show()","511e3e75":"data.plot(kind = 'scatter', x = 'white_rating', y= 'black_rating', alpha = 0.5, color = 'red')\nplt.xlabel('white_rating')\nplt.ylabel('black_rating')\nplt.title('White Black Rating Scatter Plot')\nplt.show()\n","a0d85fd1":"data.turns.plot(kind = 'hist',bins = 50,figsize = (12,12))\nplt.show()","b3ae2885":"x = data['white_rating']>2000\ny = data['black_rating']>2000\na = x&y\ndata[a]","89933528":"data[np.logical_and(data['white_rating']>2200, data['black_rating']>2200 )]","9cb5a3cf":"for index,value in data[['black_rating']][0:1].iterrows():\n    print(index,\" : \",value)","b20c1a7c":"kuvveti 2000 uzeri oyun oyuncularin oynadigi maclari gosterelim;","59be7f10":"kac hamlede oyun bitmis bunu gosterelim;","0c609762":"beyaz ve siyah oyuncularin kuvvet dagilimi;","49190f38":"ayni sekilde yukaridakinin np ile kullanimi"}}