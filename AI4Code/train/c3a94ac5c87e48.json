{"cell_type":{"47bd6ebf":"code","6b7cf963":"code","2f5fb6b2":"code","034e0075":"code","e78989be":"code","7149af37":"code","9f7aadde":"code","9d31b524":"code","5aaf212a":"code","fc31a0cc":"code","6192d147":"code","f03c7bfa":"code","ea498d91":"code","146cb16c":"code","9c287dd6":"code","3da9ee1e":"code","da4675f0":"code","9cd779a7":"code","9c29e317":"code","1f311f54":"code","41384024":"code","4c7a3f8d":"code","81f9d3c4":"code","eaf57fca":"code","ce7c53d5":"code","5dab3f66":"code","268ccb31":"code","f5cf9253":"code","bb58a726":"code","addd07da":"code","5e5f268b":"code","d2b0fb0e":"code","f78898da":"code","283be843":"code","f11e11bf":"code","e05368ed":"code","61c85dec":"code","da789fed":"code","e0632bf3":"code","655ec6a9":"code","aea1c44c":"code","2596e930":"code","613ecea8":"code","e8bd4379":"code","4aebb751":"markdown","c5ac8114":"markdown","af361cac":"markdown","8e55dba8":"markdown"},"source":{"47bd6ebf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6b7cf963":"df=pd.read_excel('..\/input\/unemployment-and-mental-illness-survey\/Cleaned Data.xlsx')","2f5fb6b2":"df.head()","034e0075":"df.shape","e78989be":"import seaborn as sns\nimport matplotlib.pyplot as plt","7149af37":"cor=df.corr()","9f7aadde":"cor","9d31b524":"fig = plt.figure(figsize=(22,20))\n\nfig.add_axes([0,0,1,1])\nax = fig.get_axes()[0]\nsns.heatmap(cor, ax=ax, vmin=-1, vmax=1, annot=True)","5aaf212a":"cor.iloc[1]","fc31a0cc":"columns_to_drop=['Region','I have my regular access to the internet','I am currently employed at least part-time','I am on section 8 housing','I receive food stamps','Annual income from social welfare programs','I have a gap in my resume','Total length of any gaps in my resume in\\xa0months.','Household Income','Device Type']\n","6192d147":"df.drop(columns=columns_to_drop,inplace=True)","f03c7bfa":"df.shape","ea498d91":"df['Annual income (including any social welfare programs) in Rupee']=df['Annual income (including any social welfare programs) in USD']*70","146cb16c":"df.drop('Annual income (including any social welfare programs) in USD',axis=1,inplace=True)","9c287dd6":"df.head(20)","3da9ee1e":"df.info()","da4675f0":"for i in df:\n    if i=='Education' or i=='Age' or i=='Gender':\n        df[i].dropna()\n    else:\n        df[i].fillna(df[i].median(),inplace=True)","9cd779a7":"df.info()","9c29e317":"y=df['I identify as having a mental illness']","1f311f54":"df.drop('I identify as having a mental illness',axis=1,inplace=True)","41384024":"df.head()","4c7a3f8d":"from sklearn.preprocessing import LabelEncoder","81f9d3c4":"le_educatio=LabelEncoder()\nle_age=LabelEncoder()\nle_gender=LabelEncoder()","eaf57fca":"df['Education']=le_educatio.fit_transform(df['Education'])","ce7c53d5":"df['Age']=le_age.fit_transform(df['Age'])\ndf['Gender']=le_gender.fit_transform(df['Gender'])","5dab3f66":"df.head()","268ccb31":"from sklearn.preprocessing import StandardScaler","f5cf9253":"ss=StandardScaler()","bb58a726":"df2=ss.fit_transform(df)","addd07da":"df2.shape","5e5f268b":"from sklearn.model_selection import train_test_split","d2b0fb0e":"X_train, X_test, y_train, y_test = train_test_split(df2, y, test_size=0.2, random_state=42)","f78898da":"print(X_train.shape,y_train.shape)","283be843":"from sklearn.linear_model import LogisticRegression","f11e11bf":"lr=LogisticRegression()","e05368ed":"lr.fit(X_train,y_train)","61c85dec":"y_pred=lr.predict(X_test)","da789fed":"y_pred","e0632bf3":"from sklearn.metrics import confusion_matrix,precision_score,recall_score,accuracy_score","655ec6a9":"accuracy_score(y_test,y_pred)","aea1c44c":"cf_matrix=confusion_matrix(y_test,y_pred)","2596e930":"sns.heatmap(cf_matrix, annot=True)","613ecea8":"recall_score(y_test,y_pred)","e8bd4379":"precision_score(y_test,y_pred)","4aebb751":"## Label encoding","c5ac8114":"# In this model we have accuracy of 86.56% on test data and recall score of 0.875 and precision rate of 0.66.\n# we will prefer going for more recall value as we want less False Negative","af361cac":"## standardizing data","8e55dba8":"## Training the Logistic regression model"}}