{"cell_type":{"531f735f":"code","e18c93ae":"code","81155443":"code","d548cfd4":"code","318b9a0d":"code","b745baa3":"code","6fd4da36":"code","744aa7f3":"code","9e1e28e4":"code","14692655":"code","466a68cf":"code","4acb6996":"code","7bd578ac":"code","d58f8286":"code","daec4a45":"code","347e3db9":"code","e12bc6ba":"code","f01b74ed":"code","fc3e8f70":"code","b9750580":"code","e10a5b39":"code","6be93bc6":"code","3ac8834f":"markdown","3201a351":"markdown","dba79952":"markdown","ff8a4e3e":"markdown","b1fb22d0":"markdown","b8b7c3ba":"markdown","2dc4eecc":"markdown","a927e163":"markdown","1e7903ed":"markdown","d47a2b4e":"markdown","dc768e6f":"markdown","3794a356":"markdown","d83c5256":"markdown","c3191579":"markdown","162ecbd0":"markdown","0a6c574a":"markdown","e1552419":"markdown","f53e2917":"markdown"},"source":{"531f735f":"# This Python 3 environment is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n\nimport os # operating system (files)\nimport numpy as np  # Linear algebra\nimport pandas as pd  # Data processing\nimport geopandas as gpd  # Geometry data for plotting data on (world) maps \nimport seaborn as sns  # Data visualization\nimport matplotlib.pyplot as plt  # Data visualization\nfrom matplotlib.ticker import PercentFormatter  # Format axis in percentages\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable  # Scale axis of (world) maps\n\n# Seaborn Colors https:\/\/img-blog.csdnimg.cn\/20190216223007343.png?x-oss-process=image\/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Ryb2tlX1pob3U=,size_16,color_FFFFFF,t_70#pic_center","e18c93ae":"# Input data files are available in the read-only \"..\/input\/\" directory\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","81155443":"df_nobel = pd.read_csv('..\/input\/nobel-laureates\/archive.csv')\ndisplay(df_nobel.head(n=3))","d548cfd4":"def null_count_by_column(df):\n    \"\"\"Lists number of missing values per column if n missing values > 0\"\"\"\n    print(f'DataFrame shape: {df.shape}', end='\\n\\n')\n    col_missing_values = (df.isnull().sum()).sort_values(ascending=False)\n    print(f'DataFrame feature # missing values: \\n{col_missing_values[col_missing_values > 0]}')\n\n\nprint(null_count_by_column(df_nobel))","318b9a0d":"df_nobel['Decade'] = df_nobel['Year'].apply(lambda x: np.floor(x \/ 10) * 10).astype(int)\nprint(f'Unique values for added Decade in the dataset: {df_nobel.Decade.unique()}')","b745baa3":"df_nobel['Birth Date'] = pd.to_datetime(df_nobel['Birth Date'], errors='coerce')\ndf_nobel['Age'] = df_nobel['Year'] - df_nobel['Birth Date'].dt.year\ndf_nobel['Age_Group'] = pd.cut(df_nobel['Age'], bins=[0, 18, 30, 64, 99],\n                               labels=['Youth', 'Young Adult', 'Adult', 'Senior'])\n\nprint('Relative share of Nobel prize winners per added Age_Group:')\ndisplay(df_nobel['Age_Group'].value_counts(normalize=True, sort=False).to_frame())","6fd4da36":"# Source: https:\/\/en.wikipedia.org\/wiki\/Generation#\/media\/File:Generation_timeline.svg\ngenerations = ['Ancient', 'Lost Generation', 'Greatest Generation', 'Silent Generation', 'Boomers I', 'Boomers II', 'Generation X', 'Millenials (Y)', 'Generation Z', 'Generation Alpha']\nage_bins = [min(df_nobel['Birth Date'].dt.year), 1883, 1900, 1927, 1945, 1955, 1965, 1980, 1996, 2012, 2021]\ndf_nobel['Generation'] = pd.cut(df_nobel['Birth Date'].dt.year, age_bins, labels=generations)\ndisplay(df_nobel['Generation'].value_counts(normalize=True, sort=False).to_frame())","744aa7f3":"df_nobel_prizes = df_nobel.drop_duplicates(subset=['Year', 'Category', 'Laureate ID'])\nprint(f'Number of (possibly shared) Nobel Prizes handed out between 1901 and 2016: {len(df_nobel_prizes)}')","9e1e28e4":"# Mmh, looks like the majority of winners is male, but that there is a slight increase in female laureates\nfig, ax = plt.subplots(figsize=(10, 10))\nsns.countplot(data=df_nobel_prizes, x='Decade', hue='Sex', palette={\"Male\": \"lightblue\", \"Female\": \"pink\"}, ax=ax)\nax.set_title(f'Countplot of the number of Nobel Prizes won in history:')\nax.set_ylabel('Nobel prize count')\nax.legend(loc='upper right')","14692655":"# The regression plot indeed indicates the share of female winners has increased over the years\npivot = pd.crosstab(df_nobel_prizes['Sex'], df_nobel_prizes['Decade'], values='Laureate ID', aggfunc='count',\n                    normalize='columns')\npivot = pivot.transpose()\n\nfig, ax = plt.subplots(figsize=(10, 10))\nsns.regplot(ax=ax, data=pivot, x=pivot.index, y=pivot['Male'], color=\"lightblue\")\nsns.regplot(ax=ax, data=pivot, x=pivot.index, y=pivot['Female'], color=\"pink\")\nax.set_title(f'Regression plot of the share of Male\/Female Nobel Prizes won in history:')\nax.set_ylabel(f'Share of Nobel Prizes')\nax.yaxis.set_major_formatter(PercentFormatter(1.0))\nax.legend(labels=['Male', 'Female'])\n\n# In absolute numbers the increase in female winners seems modest, where in relative numbers the regression line indicates that:\na, b = np.polyfit(pivot.index, pivot['Female'], 1)\nprint(f'Over the full history the share of Female Nobel prize winners has increased by {a*100:.1%} per decade.')","466a68cf":"# Adding the regression lines for the last decades indicates the increase in share of female winners has become steeper\nfig, ax = plt.subplots(figsize=(10, 10))\nsns.regplot(ax=ax, data=pivot, x=pivot.index, y=pivot['Male'], color=\"lightblue\")\nsns.regplot(ax=ax, data=pivot, x=pivot.index, y=pivot['Female'], color=\"pink\")\nsns.regplot(ax=ax, data=pivot, x=pivot.index[-4:], y=pivot['Male'][-4:], color=\"blue\")\nsns.regplot(ax=ax, data=pivot, x=pivot.index[-4:], y=pivot['Female'][-4:], color=\"red\")\nax.set_title(f'Regression plot of the share of Male\/Female Nobel Prizes won over the last decades:')\nax.set_ylabel(f'Share of Nobel Prizes')\nax.yaxis.set_major_formatter(PercentFormatter(1.0))\nax.legend(labels=['Male', 'Female'])\n\n# In absolute numbers the increase in female winners seems modest, where in relative numbers the regression line indicates that:\na, b = np.polyfit(pivot.index[-4:], pivot['Female'][-4:], 1)\nprint(f'Over the last 4 decades the share of Female Nobel prize winners has increased by {a*100:.1%} per decade.')","4acb6996":"# Nobel prizes won by male and female laureates per category\nsns.set_style(\"whitegrid\")\nfig, ax = plt.subplots(figsize=(10, 10))\nsns.countplot(x='Category', data=df_nobel_prizes, hue='Sex', palette={\"Male\": \"lightblue\", \"Female\": \"pink\"}, ax=ax)\nax.set_title(f'Countplot of the number of Nobel Prizes won per category:')\nax.set_xlabel('Nobel prize category')\nax.set_ylabel('Nobel prize count')\nax.legend(loc='upper right')","7bd578ac":"# Well in some categories female laureates seem to perform quite well last decade\ng = sns.catplot(kind='count', data=df_nobel, x='Decade', hue='Sex', col='Category', col_wrap=3,\n                  palette={\"Male\": \"lightblue\", \"Female\": \"pink\"})\ng.fig.subplots_adjust(top=0.9)\ng.fig.suptitle(f'Countplot of the number of Nobel Prizes won in history per category:')","d58f8286":"# Define geopandas geometry dataframe:\nworld = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\nworld = world[(world.pop_est>0) & (world.name!=\"Antarctica\")]  # Reflect countries with population, leaving Antartica out\n\n# Define nobel prize dataframe:\nnobel = df_nobel_prizes.drop(['Birth Date', 'Death Date'], axis = 1)  # Geopandas conflict with Date format\nnobel['Nobel_Country_Count'] = df_nobel_prizes.groupby('Birth Country')['Birth Country'].transform('count')  # Derives count of Nobel prizes per Birth Country\n\n# Merge geopandas geometry and nobel prize dataframes\ndf = pd.merge(nobel, world, how='left', left_on='Birth Country', right_on='name').reset_index()\ndf_gdf = gpd.GeoDataFrame(df)\n\n# Identify countries of birth for which 'geometry' was not merged\ncountries_not_reflected = df_gdf[df_gdf['geometry'].isna()]['Birth Country'].unique()\nprint(f'#{len(countries_not_reflected)} countries are not reflected in the world map as the country name differed over time (example: {countries_not_reflected[0]})')\n\n# Plot world map!\nfig, ax = plt.subplots(figsize=(20, 10))\nax.set_title(f'Countplot of the number of Nobel Prizes won per country:')\nax.set_axis_off()\n\n# Format legend\ndivider = make_axes_locatable(ax)\ncax = divider.append_axes(\"right\", size=\"5%\", pad=0.1)\n\nworld.plot(ax=ax, color='lightgrey')\ndf_gdf.plot(ax=ax, column='Nobel_Country_Count',cmap='viridis', legend=True, cax=cax)","daec4a45":"# The top-10 countries where most Nobel prize laureates where born?\ndf = df_nobel_prizes['Birth Country'].value_counts().reset_index()\n\n# Determine medal coloring for top-3 countries with respect to Nobel prize winners\ncolors = {}\nfor index, row in df.iterrows():\n    n = row['Birth Country']\n    if n==df['Birth Country'][0]:\n        colors[row['index']] = 'gold'\n    elif n==df['Birth Country'][1]:\n        colors[row['index']] = 'silver'\n    elif n==df['Birth Country'][2]:\n        colors[row['index']] = 'darkgoldenrod'\n    elif row['index']=='Netherlands':\n        colors[row['index']] = 'orange'\n    else:\n        colors[row['index']] = 'lightblue'\n        \nfig, ax = plt.subplots(figsize=(10, 10))\nsns.barplot(data=df.head(n=10), x='index', y='Birth Country', palette=colors, ax=ax)\nax.set_title(f'Countplot of the number of Nobel Prizes won by Birth Country:')\nax.set_ylabel('Nobel prize count')\nax.set_xticklabels(ax.get_xticklabels(), rotation=-25)","347e3db9":"def country_rank(df, country):\n    \"\"\"Counts number of Nobel prizes awarded by 'Birth Country'\"\"\"\n    countries = df['Birth Country'].unique()\n    df = df['Birth Country'].value_counts().reset_index()\n    df = df[df['index'] == 'Netherlands'].reset_index()  # Index number +1 is rank\n    df.set_axis(['Rank', 'Country', 'Count'], axis=1, inplace=True)\n    if len(df.index) == 1:\n        c = df.loc[0, 'Country']\n        i = df.loc[0, 'Rank']\n        n = df.loc[0, 'Count']\n        print(f'Country: {c} is ranked at place {i + 1} with #{n} Nobel prize winners')\n    else:\n        print(f'No valid records retrieved for: {country}, please submit any of the following countries: {countries}')\n\n# How does your country rank with respect to Nobel prize laureates?\ncountry_rank(df_nobel_prizes, country='Netherlands')","e12bc6ba":"fig, ax = plt.subplots(figsize=(10, 10))\nsns.regplot(ax=ax, data=df_nobel_prizes, x='Year', y='Age', scatter=False, lowess=True, line_kws={'color': 'black'})\nsns.regplot(ax=ax, data=df_nobel_prizes[df_nobel_prizes['Age_Group'] == 'Youth']\n            , x='Year', y='Age', lowess=True, fit_reg=False, color=\"orange\")\nsns.regplot(ax=ax, data=df_nobel_prizes[df_nobel_prizes['Age_Group'] == 'Young Adult']\n            , x='Year', y='Age', lowess=True, fit_reg=False, color=\"forestgreen\")\nsns.regplot(ax=ax, data=df_nobel_prizes[df_nobel_prizes['Age_Group'] == 'Adult']\n            , x='Year', y='Age', lowess=True, fit_reg=False, color=\"royalblue\")\nsns.regplot(ax=ax, data=df_nobel_prizes[df_nobel_prizes['Age_Group'] == 'Senior']\n            , x='Year', y='Age', lowess=True, fit_reg=False, color=\"lightsteelblue\")\n\nax.set_title(f'Regression plot of Age in relation to Nobel Prizes won in history:')\nax.legend(labels=['Average Age', 'Youth', 'Young Adult', 'Adult', 'Senior'], loc='upper right')","f01b74ed":"# The trend in age is clearly increasing for nobel prize winners, though we see some differences across the prize categories\ng = sns.FacetGrid(df_nobel_prizes, row='Category', height=2, aspect=4)\ng.map_dataframe(sns.regplot, x='Year', y='Age', scatter=False, lowess=True, line_kws={'color': 'black'})  # Only Lowess for Male\/Female combined\ng.map_dataframe(sns.scatterplot, x='Year', y='Age', hue='Age_Group', palette={\"Youth\": \"orange\", \"Young Adult\": \"forestgreen\", \"Adult\": \"royalblue\", \"Senior\": \"lightsteelblue\"})\ng.add_legend()","fc3e8f70":"# The oldest winner of a Nobel Prize as of 2016\ndf_nobel_prizes.nlargest(1, \"Age\")","b9750580":"# The youngest winner of a Nobel Prize as of 2016\ndf_nobel_prizes.nsmallest(1, \"Age\")","e10a5b39":"# Lets also have a look at the Nobel laureates per generation\nfig, ax = plt.subplots(figsize=(10, 10))\nsns.boxplot(ax=ax, data=df_nobel_prizes, x='Year', y='Generation',fliersize=0, palette=\"hls\")\nsns.stripplot(ax=ax, data=df_nobel_prizes, x='Year', y='Generation', palette=\"hls\")\nax.set_title(f'Boxplot of Generation in relation to Nobel Prizes won in history:')","6be93bc6":"repeat_laureates = df_nobel_prizes.groupby('Full Name').filter(lambda winner: len(winner) > 1)\ndisplay(repeat_laureates[['Full Name', 'Birth Country', 'Laureate Type']].value_counts().to_frame())","3ac8834f":"Hi all, I created this notebook to challenge myself extending a training assignment to an insightful analysis without overcomplicating. It has been a great learning experience for me to transform initial blocks of code into a clean notebook. If you have any suggestions for further improving this notebook please let me know via the comments!\n\n**By means of this notebook analysis you will be able to answer the following questions:**\n- Is the share of female Nobel prize winners becoming more equal over time?\n- From which country origin most Nobel prize winners?\n- How does your country rank with respect to the number of Nobel prize winners in history?\n- What is the trend in age with respect to Nobel prize winners (per prize category)?\n- Which generations are generating most Nobel prize winners?\n\nTraining: https:\/\/learn.datacamp.com\/projects\/nobel-winners  \nInspiration: https:\/\/www.kaggle.com\/kenjee  \nDocumentation: https:\/\/seaborn.pydata.org\/  ","3201a351":"Awesome that you reviewed the whole notebook! If you found this notebook interesting I really appreciate your support. If you have any suggestions for further improving this notebook please let me know via the comments!","dba79952":"#### Add feature Decade\nAdding a feature to the dataset indicating the the respective 'Decade' per record based on the 'Year' the Nobel prize was awarded.","ff8a4e3e":"#### Nobel prizes by Sex","b1fb22d0":"# Table of Contents\n\n## Setup\n* [Packages](#Packages)\n* [Source Data](#Source-Data)\n\n## Data Preprocessing\n* [Add feature Decade](#Add-feature-Decade)\n* [Add feature Age](#Add-feature-Age)\n* [Add feature Generation](#Add-feature-Generation)\n* [Adjusting for duplicate records](#Duplicate-records)\n\n## Data Visualization\n* Nobel prizes by [Sex](#Nobel-prizes-by-Sex)\n* Nobel prizes by [Country](#Nobel-prizes-by-Country)\n* Nobel prizes by [Age](#Nobel-prizes-by-Age)\n* Nobel prizes by [Generation](#Nobel-prizes-by-Generation)\n","b8b7c3ba":"#### Nobel prizes by Generation","2dc4eecc":"#### Duplicate records\nIndividual winners of the nobel prize are identified by 'Laureate ID'. Paul Modrich is listed twice for receiving a nobel prize in the same 'Category' in the same 'Year', listing a different 'Organization Name'. These records of Paul Modrich indicate he was related to 2 organizations when winning the nobel prize, not winning the nobel prize twice. Hence these records will not be considered when analyzing the number of nobel prizes. Marie Curie has been awarded the nobel prize twice, once in 1903 for Physics and once in 1911 for Chemistry. When analyzing the number of nobel prizes we do consider these records as individual awards.","a927e163":"#### Nobel prizes by Country","1e7903ed":"#### Add feature Generation\nAdding a feature to the dataset indicating the respective 'Generation' per record based on 'Birth Date'.","d47a2b4e":"## Data Preprocessing","dc768e6f":"#### Packages","3794a356":"#### Repeat laureates","d83c5256":"#### Add feature Age\nAdding a feature to the dataset indicating the respective 'Age' per record based on 'Birth Date' and the 'Year' the Nobel prize was awarded. In addition each record is allocated to an 'Age_Group' based on the calculated 'Age'","c3191579":"## Data Visualization","162ecbd0":"#### Nobel prizes by Age","0a6c574a":"## Setup","e1552419":"#### Source Data","f53e2917":"*\"Awarded to those who, during the preceding year, have conferred the greatest benefit to humankind\"* - **Alfred Nobel**\n\n![Nobel Prize](https:\/\/upload.wikimedia.org\/wikipedia\/en\/e\/ed\/Nobel_Prize.png)"}}