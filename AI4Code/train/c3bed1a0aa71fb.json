{"cell_type":{"3ccbab71":"code","c9f66b2c":"code","dd8eeb06":"code","b3ef6abf":"code","954cc349":"code","d9535a6e":"code","7d7e3a94":"code","1d956297":"code","b97dc495":"code","eb3465a8":"code","3be4a44b":"code","8a50e189":"code","e18977f1":"code","2a802217":"code","42a4f997":"code","88dd5c9e":"markdown","6a8a68ac":"markdown"},"source":{"3ccbab71":"import gc\nfrom tqdm import tqdm\nimport numpy as np\nimport pandas as pd\nfrom pylab import rcParams\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import mean_squared_error\nfrom scipy.stats import probplot\n\nimport datetime as dt\nfrom datetime import date\nfrom datetime import timedelta\nfrom fbprophet import Prophet\n\n%matplotlib inline\nimport os\nimport warnings\nwarnings.filterwarnings(\"ignore\")","c9f66b2c":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        Path = os.path.join(dirname, filename)  #Gets Dataset","dd8eeb06":"with open(Path,\"r\") as raw:\n\tlined = raw.readlines() \n\tlined = [l.replace(\"\\n\",\"\") for l in lined]\n\tFormated = [l.split(\"|\",2) for l in lined] ","b3ef6abf":"Price = [] \nTime =[]\nfor I,FMD in enumerate(Formated):\n    Time.append(FMD[0]+' '+FMD[1])\n    FMD = FMD[2].replace(\"$\",\"\")\n    Price.append(float(FMD)) ","954cc349":"Time[0:5]","d9535a6e":"Price[0:5]","7d7e3a94":"data0=pd.DataFrame(columns=['time','price'])\ndata0['time']=Time\ndata0['price']=Price\ndata0","1d956297":"data0['time2']=pd.to_datetime(data0['time'],format='%d\/%m\/%Y %H:%M:%S')\ndata0","b97dc495":"data0.info()","eb3465a8":"data1=data0[['time2','price']]","3be4a44b":"item1=data1\n\nitem1.columns = ['ds','y']\nitem1.y = item1.y.astype('float')\nitem1.ds = item1.ds.astype('datetime64')\nprint(item1)  \n\nrcParams['figure.figsize'] = 20,5\nplt.plot(item1.ds, item1.y)","8a50e189":"ph = Prophet()\nph.fit(item1)","e18977f1":"future=ph.make_future_dataframe(periods=2,freq='min')\nfuture\n# period of data + 2 minutes","2a802217":"future=ph.make_future_dataframe(periods=20,freq='min')\nforecast1=ph.predict(future)\nfigure = ph.plot(forecast1[-1200:])\nfigure.show()","42a4f997":"forecast1[-1200:]","88dd5c9e":"# fit past and predict past","6a8a68ac":"# Bitcoin Prices Secondly Prediction Prophet"}}