{"cell_type":{"8f4272e3":"code","748eed6b":"code","ef3f3c75":"code","68e1e80d":"code","2f137094":"code","b2db24d8":"code","2ffb96e6":"code","c137c48d":"code","b2056784":"code","85b85113":"code","0c13f45e":"code","603d3c62":"code","bc40a2e3":"code","76136b70":"code","6136d1ab":"code","88f69ed6":"markdown","9da28427":"markdown","7cc1013b":"markdown","bf5cb51b":"markdown","e45e5b1a":"markdown","b72d0689":"markdown","13eb723a":"markdown","3043adab":"markdown","da1d31e4":"markdown","6da08069":"markdown","8c2a1b38":"markdown","34b6a4d9":"markdown","32b337cc":"markdown","79e78c91":"markdown"},"source":{"8f4272e3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline \n\nfrom scipy import stats\nfrom scipy.stats import norm, skew\n\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder, StandardScaler, MinMaxScaler, RobustScaler\nfrom sklearn.model_selection import train_test_split, KFold, GroupKFold, GridSearchCV, StratifiedKFold\n\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier, GradientBoostingClassifier, AdaBoostClassifier\nfrom sklearn.linear_model import BayesianRidge,LogisticRegression, PassiveAggressiveClassifier, RidgeClassifier, OrthogonalMatchingPursuit\nfrom sklearn.svm import SVR, NuSVR, LinearSVR\nfrom sklearn.mixture import BayesianGaussianMixture, GaussianMixture\nfrom sklearn.neighbors import KNeighborsRegressor, KernelDensity, KDTree\nfrom sklearn.metrics import *\n\nimport lightgbm as lgb\nimport xgboost as xgb\nimport catboost as cb\n\nimport sys, os\nimport random \n\nif not sys.warnoptions:\n    import warnings\n    warnings.simplefilter(\"ignore\")\n    \nfrom IPython import display, utils\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","748eed6b":"train  = pd.read_csv('..\/input\/imbalanced-data-practice\/aug_train.csv')\ntrain.head()","ef3f3c75":"train.shape","68e1e80d":"plt.figure(figsize=(17, 5))\nsns.heatmap(train.isnull(), cbar=True, cmap='Set3')\nplt.xlabel(\"Column_Name\", size=14, weight=\"bold\")\nplt.title(\"Places of missing values in column\",fontweight=\"bold\",size=14)\nplt.show()","2f137094":"#missing data\ntotal = train.isnull().sum().sort_values(ascending=False)\npercent = (train.isnull().sum()\/train.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(20)","b2db24d8":"train.describe()","2ffb96e6":"sns.pairplot(train,vars = ['Age', 'Vintage',\"Annual_Premium\",\"Policy_Sales_Channel\"], hue ='Response',diag_kind = \"kde\",kind = \"scatter\", palette = \"husl\")\n\n","c137c48d":"plt.subplots(figsize=(15,6))\nsns.heatmap(train.corr(method='kendall'), annot=True,cmap='Blues')\nplt.title('Correlation between variables with kendall method')","b2056784":"train.duplicated().sum()","85b85113":"f, ax = plt.subplots(figsize=(10, 8))\nsns.despine(f)\nsns.distplot(train['Age'],bins=30,color=\"g\")\nplt.title('Distribution of Age')\nplt.show()","0c13f45e":"print(train['Driving_License'].value_counts())\nplt.figure(figsize=(6, 10))\nsns.countplot(train['Driving_License'],palette='Set2')\nplt.xticks(rotation=90)\nplt.title('Presence of driving license?')\nplt.show()","603d3c62":"len(train[(train['Driving_License']  == 0) &\n          (train['Response']  == 1)])","bc40a2e3":"train.drop(columns='Driving_License', inplace=True)","76136b70":"#from sklearn.preprocessing import OneHotEncoder\n\n#enc = OneHotEncoder(handle_unknown='ignore')\n","6136d1ab":"plt.figure(figsize=(8, 6))\nsns.countplot(train['Response'],palette='Set2')\nplt.xticks(rotation=90)\nplt.title('Distribution of Response')\nplt.show()","88f69ed6":"Majority of people are between 20 to 50 years of age","9da28427":"### Plot missing values(if any)","7cc1013b":"### Check for duplicates","bf5cb51b":"It shows that our training set doesnt contain any missing values.","e45e5b1a":"### Plot distribution of target variable i.e Response","b72d0689":"We can see that our target variable is highly imbalanced.","13eb723a":"Less than 1% of the samples are individuals without a license. People without a drivers license would not usually be interested in vehicle insurance, therefore I'm going to check to see if any of these individuals actually have a positive response:","3043adab":"Because only 37 of the people without licenses are actually wanting insurance, I don't see much use for this feature without something else to go along with it. Such as a feature that asks if a person will be getting a new vehicle soon (or a drivers license). Therefore, I opt to remove it.","da1d31e4":"One of the most effective starting tools is the **pairs plot** (also called a **scatterplot matrix**). A pairs plot allows us to see both distribution of single variables and relationships between two variables. ","6da08069":"We'll also one hot encode **Gender**, **Vehicle_Age** and **Region_Code** and **Vehicle_Damage**.","8c2a1b38":"### The following figures give us the correlation between variables with kendall method:","34b6a4d9":"### Distribution of Age","32b337cc":"Those who bought the policy have **Response = 1** and those who didnt bought the policy have **Response = 0**","79e78c91":"As we can observe here that:\n1. The **Age** ranges from 25 to 85\n2. The **Annual premium** ranges from 2630 to 540165."}}