{"cell_type":{"bd802ca3":"code","a580f094":"code","9901636d":"code","450cae1a":"code","82a53abd":"code","6581c6f3":"code","1d8dfb6c":"code","185d133d":"code","1c0ed1ba":"code","e5ff009b":"code","cb4a5ad0":"code","f84311f4":"code","df0f5f7c":"code","35113761":"code","5b926fca":"markdown","3c4da78e":"markdown","ea5eed47":"markdown","41b7598c":"markdown","c5b45e5a":"markdown","b987cf35":"markdown","d21b0125":"markdown","54c18bfe":"markdown","d37998b8":"markdown","ae33bbe9":"markdown"},"source":{"bd802ca3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a580f094":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np","9901636d":"url='\/kaggle\/input\/salary-data-simple-linear-regression\/Salary_Data.csv'\ndata=pd.read_csv(url)\ndata.head()","450cae1a":"data.describe()","82a53abd":"data.isnull()","6581c6f3":"x=data['YearsExperience'].to_numpy()\ny=data['Salary'].to_numpy()\nx=x.reshape(-1,1)\ny=y.reshape(-1,1)","1d8dfb6c":"plt.plot(x,y)\nplt.xlabel('Experience in Years')\nplt.ylabel('Salary')\nplt.title('Salary vs Experience')\nplt.show()","185d133d":"#Making traing and testing data\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,train_size=0.8,random_state=0)","1c0ed1ba":"from sklearn.linear_model import LinearRegression\nmodel=LinearRegression()\nmodel.fit(x_train,y_train)\nprint('Trained the model.')","e5ff009b":"line=model.coef_*x+model.intercept_\nplt.scatter(x,y)\nplt.plot(x,line)\nplt.xlabel('Experience in Years')\nplt.ylabel('Salary')\nplt.title('Salary vs Experience')\nplt.show()","cb4a5ad0":"y_pred=model.predict(x_test)\ny_pred","f84311f4":"df=pd.DataFrame(data={'Predicted Values':y_test.flatten(),'Actual Values':y_pred.flatten()})\ndf","df0f5f7c":"from sklearn.metrics import mean_absolute_error\nmae=mean_absolute_error(y_test,y_pred)\nmae","35113761":"# Let us assume that a person has experience of 5 years and calculate the salary.\nexp=[[5]]\npred_sal=model.predict(exp)\nprint('The predicted salary for a person having experience of 5 years is ',pred_sal)","5b926fca":"After changing the size of the train and test data sets I come to a conclusion that the minimum mean absolute error which can occur is of 2446.1723690465055 currency units.","3c4da78e":"#### From here, we can observe that there is a direct relationship between salary and experience. So, lets make use of this relation and make a linear regression model from the same.","ea5eed47":"## We can use the above model to make prediction of salary of a person based on the years of experience. Lets try an example.","41b7598c":"The graph above shows that our predictions are nearly equal to the actual values of the data.","c5b45e5a":"Now lets make a prediction for salary using the test data and compare the actual values with it to see how much the data differs from reality.","b987cf35":"# You can use the model above to calculate the salary of people based on the years of experience. \n## Note, the salary is based approximate salary and can differ too. Model is trained on the data we have so it may vary.","d21b0125":"This means that there are zero missing values in the data.","54c18bfe":"Now lets make the model","d37998b8":"Now lets compare the model's prediction to the actual data graphically.","ae33bbe9":"From here we can observe that the predicted values are close to the actual values this means our model was correct. Now lets calculate how much the data differs from the actual values by calculating Mean Absolute Error."}}