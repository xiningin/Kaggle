{"cell_type":{"86154896":"code","fc024bc0":"code","f5e76f09":"code","d0fc02bd":"code","e7166d08":"code","7ee96e1e":"code","5c00795b":"code","9bd14402":"code","1297cbb8":"code","4c086d31":"code","062e889b":"code","778b25f2":"code","7e58a697":"code","b6cd0cfe":"code","21e72bc7":"code","6935c18f":"code","9472e4c4":"code","39dd0007":"code","bcd75582":"code","cf6a0584":"code","4dd2fc9a":"code","7db22316":"markdown","46db3bce":"markdown","a0affc3b":"markdown","8967d7ea":"markdown","a5b612d7":"markdown","f41c1e55":"markdown","aea23cba":"markdown","4f80bfaf":"markdown","469efa2f":"markdown","f9509009":"markdown","96563b13":"markdown","a865a9ef":"markdown"},"source":{"86154896":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n#For Plotting\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#For DataProcessing\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\n#For Machine Learning\nfrom sklearn.model_selection import train_test_split\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","fc024bc0":"data = pd.read_csv(\"..\/input\/train.csv\")","f5e76f09":"data.head()","d0fc02bd":"data.info()","e7166d08":"total_missing_data = data.isnull().sum().sort_values(ascending=False)\npercent_missing_data = (data.isnull().sum()\/data.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total_missing_data,percent_missing_data],axis=1,keys=['Total','Percent'])\nmissing_data.head(10)","7ee96e1e":"data = data.drop([\"Alley\",\"FireplaceQu\",\"PoolQC\",\"Fence\",\"MiscFeature\",\"LotFrontage\"], axis=1)\ndata = data.drop([\"GarageType\",\"GarageYrBlt\",\"GarageFinish\",\"GarageQual\",\"GarageCond\"],axis = 1)\ndata = data.drop([\"BsmtFinType2\",\"BsmtExposure\",\"BsmtFinType1\",\"BsmtCond\",\"BsmtQual\"], axis = 1)\ndata = data.drop([\"MasVnrType\"], axis = 1)","5c00795b":"data['MasVnrArea'].fillna(data['MasVnrArea'].median(), inplace = True)\ndata = data.fillna(data['Electrical'].value_counts().index[0])","9bd14402":"total_missing_data = data.isnull().sum().sort_values(ascending = False)\npercent_missing_data = (data.isnull().sum()\/data.isnull().count()).sort_values(ascending = False)\nmissing_data = pd.concat([total_missing_data, percent_missing_data], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(3)","1297cbb8":"correlations = data.corr()\nplt.figure(figsize=(15,15))\ng = sns.heatmap(correlations,cbar = True, square = True, fmt= '.2f', annot_kws={'size': 15})","4c086d31":"k = 10 \ncols = correlations.nlargest(k, 'SalePrice')['SalePrice'].index\ncm = np.corrcoef(data[cols].values.T)\nsns.set(font_scale = 1)\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, \n                 yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","062e889b":"data.info()","778b25f2":"categorical_data = data.select_dtypes(include=['object']).copy()\ncategorical_data_columns=categorical_data.columns\ncategorical_data_columns","7e58a697":"label_encoder = LabelEncoder()\n\nfor i in categorical_data_columns:\n    data[i] = label_encoder.fit_transform(data[i])","b6cd0cfe":"y = data['SalePrice']\nX = data.drop(['SalePrice'],axis=1)","21e72bc7":"Scaler = StandardScaler()\n\nX = pd.DataFrame(Scaler.fit_transform(X))","6935c18f":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 42)","9472e4c4":"from sklearn.ensemble import RandomForestRegressor\nRFR = RandomForestRegressor(max_depth = 20, random_state = 0, n_estimators = 100)\nRFR.fit(X_train,y_train)","39dd0007":"predicted_prices = RFR.predict(X_test)","bcd75582":"print (\"Training score:\",RFR.score(X_train,y_train),\"Test Score:\",RFR.score(X_test,y_test))","cf6a0584":"predicted_prices","4dd2fc9a":"my_submission = pd.DataFrame({'Id': X_test.index, 'SalePrice': predicted_prices})\n# you could use any filename. We choose submission here\nmy_submission.to_csv('submission.csv', index=False)","7db22316":"## Removing the variables with too many missing values","46db3bce":"## For \"MasVnrArea\" and \"Electrical\", there is only few misssing values so I just use the median to impute the former and use the most frequent value to impute the latter.","a0affc3b":"## EDA","8967d7ea":"\n# Thank You ","a5b612d7":"\n## Hey, Everyone this is my first Competition on Kaggle and i have made a notebook which is easy and straight forward for beginners. ","f41c1e55":"## RandomForestRegressor","aea23cba":"## I am passing through a label encoder where i passed the categorical columns which are in categorical_data_columns list","4f80bfaf":"## The one which is with object refers to a categorical data","469efa2f":"## Double checking the missing values","f9509009":"## Top 10 variables that are related to our target variable","96563b13":"# Finding Missing Data","a865a9ef":"## Let's Start Machine Learning...."}}