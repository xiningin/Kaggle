{"cell_type":{"d41d3ed4":"code","1ff550aa":"code","0fbf6dad":"code","a8a0f8d8":"code","86793260":"code","8b209131":"code","ab2b9822":"code","c8dfef22":"code","447fa0ec":"code","14519be6":"code","fb66f6ad":"code","22da659a":"code","e5d3211a":"code","ac371893":"code","d260e906":"code","1f64f830":"code","f686d851":"code","0a590f9b":"code","94f839dd":"code","e444755d":"code","f96682da":"code","9668071e":"code","6468ea56":"code","cd03f9c3":"code","b6bd3f3a":"code","1fe5de40":"code","dcfed014":"code","42a30589":"code","1c82abab":"code","75e5c6b0":"code","5c276ff0":"code","bc340cef":"code","8b250465":"code","d86cb9c2":"code","ad8af678":"code","e783bae9":"code","0ae0bcdf":"code","f3970210":"code","15ce1e5c":"code","6c26a4b6":"code","4155ae83":"code","846f43dd":"code","0be0b917":"code","329cfd6c":"code","d24eb9c1":"code","d3f77d80":"code","27a59345":"code","ba143d74":"code","68d49bb3":"code","17c60d23":"code","bc83ae63":"code","6d246dd9":"code","ea8b6494":"code","e1bf5a49":"code","94f3a55d":"code","3608927d":"code","9e3fc9c5":"code","32962237":"code","882bf2dd":"code","c75e2cea":"code","edbdbb62":"code","d814c926":"code","9c9c475a":"code","792be392":"code","bfeabe5d":"code","0ef66c04":"code","0fd36637":"code","5d8c85ed":"code","747e3d17":"code","98e898be":"code","7f2faf0d":"code","06698344":"code","66c53bee":"code","d9d6e1fd":"code","3da6380e":"code","72c4b723":"code","09548fac":"code","0db01d59":"code","a2a624cc":"code","884ffb6a":"code","c9ef580d":"code","8d429250":"code","e2a6a8af":"code","334480d8":"code","9ced0770":"code","9b4fbe42":"code","c7edfd67":"code","ea18c263":"code","0627c9b5":"code","ec02d877":"code","9a83eaee":"code","1e0a6656":"code","0b48b9f0":"code","ddffd381":"code","ef2d124a":"code","6f9f6872":"code","60c4fcd7":"code","a78006c5":"code","25bdb7ad":"code","2e555f5d":"code","872befd4":"code","9d14bc7c":"code","1e089b29":"code","ce1041d6":"code","bd1001f0":"code","38bb8a35":"code","41806706":"code","a0e4597a":"code","c9c7ae71":"code","7b4c7a5a":"code","2d69f55f":"code","0caac9ee":"markdown","f4076274":"markdown","33d73029":"markdown","8f215c83":"markdown","b1e7d96e":"markdown","760c0fa5":"markdown","067ce1f2":"markdown","0d35d8ac":"markdown","ffe3237c":"markdown","d8b0620f":"markdown","dc490f82":"markdown","375ac9ee":"markdown","1c091633":"markdown","abb21451":"markdown","93c78715":"markdown","7cc85889":"markdown","4699d4f8":"markdown","d8f674c4":"markdown","41c06889":"markdown","0234407c":"markdown","d0a161e1":"markdown","d5bf7a88":"markdown","4de825da":"markdown","223de29b":"markdown","523ebb1b":"markdown","8fe6f32e":"markdown","f786a0a6":"markdown","fef15a71":"markdown","09aae39d":"markdown","86ce08b3":"markdown","a7d621c3":"markdown","32a10324":"markdown","656447c5":"markdown","a8677567":"markdown","1bfb05a2":"markdown","fe2a39b4":"markdown","a0b971ae":"markdown","96a35185":"markdown","09940705":"markdown","313be022":"markdown","585e2070":"markdown","b976e3c0":"markdown","f730127d":"markdown","940cf237":"markdown","df3b8a03":"markdown","a1b4a17c":"markdown","bf1d9445":"markdown","0f20be8f":"markdown","c0b12124":"markdown","4e38b976":"markdown","bbe365d6":"markdown","80050b42":"markdown","68ed49da":"markdown","1f61f445":"markdown","e60f2149":"markdown","da0299fd":"markdown","de3b036b":"markdown","a501eeea":"markdown","a42906eb":"markdown","ceaaa751":"markdown","9ac85f8e":"markdown","5b077c21":"markdown","03be0552":"markdown","f895ea0a":"markdown","5d7e44a9":"markdown","f888ce4c":"markdown","0808cfbe":"markdown","e6a1fb8b":"markdown","70eafe09":"markdown","05db34b1":"markdown","65dadaeb":"markdown","f8747e89":"markdown","3f12918f":"markdown","c8aa5735":"markdown","dbe6e732":"markdown","3e753836":"markdown","986dc5e7":"markdown","4c3cea68":"markdown","39ed5904":"markdown","5f007347":"markdown","52f2379b":"markdown","57275604":"markdown","b54b69b6":"markdown","f8ee1e35":"markdown","24a0580d":"markdown","72c26401":"markdown","d099d776":"markdown","43eb9204":"markdown","ce0ec7f1":"markdown","708c479b":"markdown","03007288":"markdown","852e5ba3":"markdown","3e68836e":"markdown","5d73c521":"markdown","0b99d806":"markdown","220a0c86":"markdown","89c9af89":"markdown","52719c6d":"markdown","e2326654":"markdown","cd2cc675":"markdown","36376ca7":"markdown","07332808":"markdown","ca11d416":"markdown","02172878":"markdown","738e596a":"markdown","96ff32bb":"markdown","bc39ecb7":"markdown","85ddf5ba":"markdown","3edfc81e":"markdown","b523cfbd":"markdown"},"source":{"d41d3ed4":"from IPython.core.display import Image, display, HTML\ndisplay(Image(\"..\/input\/helpingillustrations\/ntk_pic.jpg\"))\ndisplay(HTML(\"<style>.container { width:100% !important; }<\/style>\"))","1ff550aa":"# !pip install chart_studio","0fbf6dad":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import datetime\ntry:\n    from tqdm.notebook import tqdm\nexcept:\n    from tqdm import tqdm_notebook as tqdm\nimport requests\nimport sys\nfrom itertools import chain\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport plotly.io as pio\n# import chart_studio\n# import chart_studio.plotly as py\nfrom scipy.stats import chisquare\nfrom statsmodels.stats.proportion import multinomial_proportions_confint, proportion_confint\nfrom statsmodels.stats.multitest import multipletests\nimport warnings\n%matplotlib inline","a8a0f8d8":"export_plotly_figs_online = False\nif export_plotly_figs_online:\n    username = '' # your username\n    api_key = '' # your api key - go to profile > settings > regenerate key\n    chart_studio.tools.set_credentials_file(username=username, api_key=api_key)","86793260":"df_czechia = pd.read_csv('..\/input\/covid19-in-czechia-personlevel-data\/CZ_COVID19_infected_persons.csv')\ndf_czech_regions = pd.read_csv('..\/input\/covid19-in-czechia-personlevel-data\/CZ_region_codes.csv', index_col='region_code_NUTS3')\ndf_czechia['region_name'] = df_czechia['CZ_region_code_NUTS3'].map(df_czech_regions['region_name'])\ndf_czechia['report_date'] = pd.to_datetime(df_czechia['report_date'])\ndf_czechia['report_date'] = df_czechia['report_date'].map(lambda x: x.date())\ndf_czechia.head()","8b209131":"df_czechia.isnull().sum()","ab2b9822":"sum(df_czechia['imported_case'].isnull() | df_czechia['country_of_exposure_csu_code'].isnull())\/df_czechia['imported_case'].isnull().sum()","c8dfef22":"df_czechia[df_czechia['country_of_exposure_csu_code'] == 'CZ']","447fa0ec":"df_czechia.loc[df_czechia['country_of_exposure_csu_code'] == 'CZ', 'imported_case'] = np.nan\ndf_czechia.loc[df_czechia['country_of_exposure_csu_code'] == 'CZ', 'country_of_exposure_csu_code'] = np.nan","14519be6":"plt.figure(figsize=(14, 7))\nbins = df_czechia['age'].quantile(np.arange(0, 1.001, 0.1))\nsns.distplot(df_czechia.loc[df_czechia['gender'] == 'Female', 'age'], bins=bins)\nsns.distplot(df_czechia.loc[df_czechia['gender'] == 'Male', 'age'], bins=bins)\nplt.legend(['Female', 'Male'])\nplt.title('Czechia: age distributions of COVID-19 cases per gender', fontsize=21)","fb66f6ad":"plt.rcParams.update({'font.size': 15})\n\nfig, ax = plt.subplots(figsize=(16, 7))\nregion_values = df_czechia['region_name'].value_counts(ascending=True)\nregion_values.plot(kind='barh', color=['dodgerblue'])\n\nfor i, v in enumerate(region_values):\n    ax.text(v + 1, i - 0.2, str(v), color='dodgerblue', fontweight='bold')\nplt.title('Czechia: COVID-19 cases per regions', fontsize=21)","22da659a":"df_czechia['age_group'] = pd.cut(df_czechia['age'], \n                                 bins = [0, 20] + list(range(30, 91, 10)) + [110],\n                                 right=False\n                                )","e5d3211a":"def plot_summarization_heatmap(gender, title, \n                               bool_index=None, \n                               second_dim_col='report_date', \n                               color='red', \n                               fig_width=800, fig_height=400, \n                               log_scale=False,\n                               upload_fig_filename=None\n                              ):\n    \"\"\"\n    Plots distribution of COVID-19 cases per Age group and Date as a heatmap.\n    Date is on the X axis, each row corresponds to a particular age group.\n    \n    @param gender: string specifying gender of the visualization\n    @param title: plot title\n    @param bool_index: (optional) pandas Series or numpy array of booleans for boolean indexing of the Czechia dataframe\n    @param second_dim_col: (optional) column name for the Y axis of the heatmap, expected values are either 'report_date' (default), or 'Country Name', or 'region_name'    \n    @param color: (optional) color for the colorscale, expected values are either 'red' (default), or 'amp'\n    @param fig_width: (optional) width of the plotly figure\n    @param fig_height: (optional) height of the plotly figure\n    @param log_scale: (optional) boolean flag to display color on log-scale\n    @param upload_fig_filename: (optional) when provided, the figure will be uploaded to your account with filename upload_fig_filename. It is assumed that plotly credentials has been set\n    \"\"\"\n    # checking inputs\n    assert color in ['red', 'amp'], \"expected values for color are either 'red' (default), or 'amp'\"\n    assert second_dim_col in ['report_date', 'Country Name', 'region_name'], \"expected values for second_dim_col are either 'report_date' (default), or 'Country Name', or 'region_name'\"\n    if bool_index is None:\n        bool_index = np.ones(len(df_czechia), dtype=bool)\n    vmax = (df_czechia[bool_index]\n                  .groupby(['age_group', second_dim_col, 'gender'])['age']\n                  .count()\n                  .max())\n    bool_index &= df_czechia['gender']==gender\n\n    plt.figure(figsize=(14, 4))\n    values = (df_czechia[bool_index]\n              .groupby(['age_group', second_dim_col])['age']\n              .count()\n              .unstack()\n              .fillna(0)\n             )\n    values.index = list(map(str, values.index))\n    if second_dim_col != 'report_date':\n        values = values.T\n        x_label = 'Age group [years]'\n        y_label = f\"{'Region' if second_dim_col == 'region_name' else 'Country'} Name\"\n    else:\n        y_label = 'Age group [years]'\n        x_label = 'Date'\n    cmap = px.colors.sequential.Reds if color == 'red' else px.colors.sequential.amp\n    vmax_vis = round(vmax*4)\n    if log_scale:\n        colorscale= [[min(1, count_val\/vmax_vis) if count_val > 0 else 0, color] \n                     for count_val, color in zip([0] + list(np.logspace(0, np.log10(vmax_vis), len(cmap) - 1)), cmap)]\n    else:\n        colorscale= [[min(1.0, count_val\/vmax_vis) if count_val > 0 else 0, color]\n                     for count_val, color in zip(np.linspace(0, vmax_vis, len(cmap)), cmap)]\n    fig = go.Figure(data=go.Heatmap(z=values.values,\n                                    zmin=0, \n                                    zmax=vmax,\n                                    hovertemplate=str(x_label) + ': %{x}<br>' + str(y_label) + ': %{y}<br>Count: %{z}<extra><\/extra>',\n                                    x=values.columns,\n                                    y=values.index,\n                                    colorscale=colorscale,\n                                    colorbar = dict(title='Count'))\n                   )\n    fig.update_xaxes(tickangle=45)\n    fig.update_layout(title=title, height=fig_height, width=fig_width, \n                      xaxis_nticks=len(values.columns), yaxis_nticks=len(values.index), \n                      xaxis=dict(title=x_label), yaxis=dict(title=y_label),\n                      plot_bgcolor='rgba(0, 0, 0, 0)', paper_bgcolor='rgba(0, 0, 0, 0)',\n                      margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0, 'pad': 2}, )\n    if not upload_fig_filename is None:\n        py.plot(fig, filename = upload_fig_filename)\n    fig.show()","ac371893":"plot_summarization_heatmap('Female', 'Czechia, Females: cases in age groups per regions', \n                           second_dim_col='region_name',\n                           fig_width=600, fig_height=400,\n                           color='amp',\n                           upload_fig_filename='cz_females_age_region' if export_plotly_figs_online else None\n                          )","d260e906":"plot_summarization_heatmap('Male', 'Czechia, Males: cases in age groups per regions', \n                           second_dim_col='region_name',\n                           fig_width=600, fig_height=400,\n                           color='amp',                           \n                           upload_fig_filename='cz_males_age_region' if export_plotly_figs_online else None\n                          )","1f64f830":"df_czechia_in_time = (df_czechia\n                      .groupby(['region_name', 'report_date'])['age'].count()\n                      .groupby(level=0)\n                      .cumsum()\n                     )\n\ndates_available = df_czechia_in_time.index.get_level_values(1)\nstart_date = dates_available.min()\nlast_date = dates_available.max()\nall_dates = pd.date_range(start_date, last_date)\n\ndf_czechia_in_time_wide = df_czechia_in_time.unstack(level=0)\ndf_czechia_in_time_wide = df_czechia_in_time_wide.reindex(all_dates)\n# if there were no cases for the first date, fill in zero\ndf_czechia_in_time_wide.loc[start_date, df_czechia_in_time_wide.loc[start_date].isnull()] = 0 \ndf_czechia_in_time_wide.fillna(method='ffill', inplace=True)\n\ndf_czechia_in_time = df_czechia_in_time_wide.stack().reset_index().rename(columns={'level_0': 'report_date', 0: 'Total number of COVID-19 cases'})","f686d851":"# getting geo data for plotting\nr = requests.get(url='https:\/\/raw.githubusercontent.com\/deldersveld\/topojson\/master\/countries\/czech-republic\/czech-republic-regions.json')\ntopology = r.json()","0a590f9b":"# Convert topology json into geojson\n#The code is from https:\/\/gist.github.com\/perrygeo\/1e767e42e8bc54ad7262\ndef rel2abs(arc, scale=None, translate=None):\n    \"\"\"Yields absolute coordinate tuples from a delta-encoded arc.\n    If either the scale or translate parameter evaluate to False, yield the\n    arc coordinates with no transformation.\"\"\"\n    if scale and translate:\n        a, b = 0, 0\n        for ax, bx in arc:\n            a += ax\n            b += bx\n            yield scale[0]*a + translate[0], scale[1]*b + translate[1]\n    else:\n        for x, y in arc:\n            yield x, y\n\ndef coordinates(arcs, topology_arcs, scale=None, translate=None):\n    \"\"\"Return GeoJSON coordinates for the sequence(s) of arcs.\n    \n    The arcs parameter may be a sequence of ints, each the index of a\n    coordinate sequence within topology_arcs\n    within the entire topology -- describing a line string, a sequence of \n    such sequences -- describing a polygon, or a sequence of polygon arcs.\n    \n    The topology_arcs parameter is a list of the shared, absolute or\n    delta-encoded arcs in the dataset.\n    The scale and translate parameters are used to convert from delta-encoded\n    to absolute coordinates. They are 2-tuples and are usually provided by\n    a TopoJSON dataset. \n    \"\"\"\n    if isinstance(arcs[0], int):\n        coords = [\n            list(\n                rel2abs(\n                    topology_arcs[arc if arc >= 0 else ~arc],\n                    scale, \n                    translate )\n                 )[::arc >= 0 or -1][i > 0:] \\\n            for i, arc in enumerate(arcs) ]\n        return list(chain.from_iterable(coords))\n    elif isinstance(arcs[0], (list, tuple)):\n        return list(\n            coordinates(arc, topology_arcs, scale, translate) for arc in arcs)\n    else:\n        raise ValueError(\"Invalid input %s\", arcs)\n\ndef geometry(obj, topology_arcs, scale=None, translate=None):\n    \"\"\"Converts a topology object to a geometry object.\n    \n    The topology object is a dict with 'type' and 'arcs' items, such as\n    {'type': \"LineString\", 'arcs': [0, 1, 2]}.\n    See the coordinates() function for a description of the other three\n    parameters.\n    \"\"\"\n    return {\n        \"type\": obj['type'], \n        \"coordinates\": coordinates(\n            obj['arcs'], topology_arcs, scale, translate )}\n\nfrom shapely.geometry import asShape\n\ntopojson_path = sys.argv[1]\ngeojson_path = sys.argv[2]\n\n\n# file can be renamed, the first 'object' is more reliable\nlayername = list(topology['objects'].keys())[0]  \n\nfeatures = topology['objects'][layername]['geometries']\nscale = topology['transform']['scale']\ntrans = topology['transform']['translate']\n\nfc = {'type': \"FeatureCollection\", 'features': []}\n\nfor id, tf in enumerate(features):\n    f = {'id': id, 'type': \"Feature\"}\n    f['properties'] = tf['properties'].copy()\n\n    geommap = geometry(tf, topology['arcs'], scale, trans)\n    geom = asShape(geommap).buffer(0)\n    assert geom.is_valid\n    f['geometry'] = geom.__geo_interface__\n\n    fc['features'].append(f) ","94f839dd":"region_name_2_map_id = {'\u00dast\u00ed nad Labem Region': 0,\n                        'South Bohemian Region': 1,\n                        'South Moravian Region': 2,\n                        'Karlovy Vary Region': 3,\n                        'Hradec Kr\u00e1lov\u00e9 Region': 4,\n                        'Vyso\u010dina Region': 5,\n                        'Liberec Region': 6,\n                        'Moravian-Silesian Region': 7,\n                        'Olomouc Region': 8,\n                        'Pardubice Region': 9,\n                        'Plze\u0148 Region': 10,                        \n                        'Prague': 11,\n                        'Central Bohemian Region': 12,\n                        'Zl\u00edn Region': 13}","e444755d":"df_czechia_in_time['map_id'] = df_czechia_in_time['region_name'].map(region_name_2_map_id)\ndf_czechia_in_time['Date'] = df_czechia_in_time['report_date'].map(lambda x: x.strftime('%Y-%m-%d'))","f96682da":"fig = px.choropleth(df_czechia_in_time,\n                    geojson=fc,\n                    locations='map_id',\n                    animation_frame='Date',\n                    color_continuous_scale=px.colors.sequential.amp,\n                    hover_name='region_name',\n                    range_color=(0, df_czechia_in_time['Total number of COVID-19 cases'].max()),\n                    color='Total number of COVID-19 cases', \n                    title='Czechia: COVID-19 patients per regions'\n                   )\n\nfig.update_geos(fitbounds=\"locations\", visible=True)\nfig.update_geos(projection_type=\"orthographic\")\nfig.update_layout(height=600, width=700, margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0, 'pad': 2})\nfig.show()","9668071e":"pio.write_html(fig, file='cz_covid_regions.html')","6468ea56":"df_czechia_in_time['Log_2 of total number of COVID-19 cases'] = df_czechia_in_time['Total number of COVID-19 cases'].map(lambda x: np.log2(x) if x != 0 else 0)\nfig = px.choropleth(df_czechia_in_time,\n                    geojson=fc,\n                    locations='map_id',\n                    animation_frame='Date',\n                    color_continuous_scale=px.colors.sequential.amp,\n                    hover_data=['region_name', 'Total number of COVID-19 cases'],\n                    range_color=(0, df_czechia_in_time['Log_2 of total number of COVID-19 cases'].max()),\n                    color='Log_2 of total number of COVID-19 cases', \n                    title='Czechia: COVID-19 patients per regions (log scale)'\n                   )\n\nfig.update_geos(fitbounds=\"locations\", visible=True)\nfig.update_geos(projection_type=\"orthographic\")\nfig.update_layout(height=600, width=700, margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0, 'pad': 2})\nfig.show()","cd03f9c3":"plot_summarization_heatmap('Female', 'Czechia, Females: daily numbers of new COVID-19 cases',                           \n                           upload_fig_filename='cz_females_age_date' if export_plotly_figs_online else None)","b6bd3f3a":"plot_summarization_heatmap('Male', 'Czechia, Males: daily numbers of new COVID-19 cases',                           \n                           upload_fig_filename='cz_males_age_date' if export_plotly_figs_online else None)","1fe5de40":"# prepare_female_proportion_in_time_data\ndf_czechia['report_week'] = df_czechia['report_date'].map(lambda x: x.isocalendar()[1])\nweek_2_start_date = df_czechia.groupby('report_week')['report_date'].min()\ndf_czechia['Week Start Date'] = df_czechia['report_week'].map(week_2_start_date).map(str)\ndf_czechia.drop('report_week', axis=1, inplace=True)\n\n\ndf_czechia_gender_in_time = (df_czechia\n                             .groupby(['region_name', 'Week Start Date'], as_index=False)['gender']\n                             .agg(list)\n                          )\ndf_czechia_gender_in_time['Proportion of New Female Patients [%]'] = df_czechia_gender_in_time['gender'].map(lambda x: int(100*sum([gender == 'Female' for gender in x])\/len(x)))\ndf_czechia_gender_in_time['Patients count'] = df_czechia_gender_in_time['gender'].map(len)\ndf_czechia_gender_in_time.sort_values(by=['Week Start Date', 'region_name'], inplace=True)\ndf_czechia_gender_in_time['map_id'] = df_czechia_gender_in_time['region_name'].map(region_name_2_map_id)\n\n# vizualize_female_proportion_in_time\n\nfig = px.choropleth(df_czechia_gender_in_time,\n                geojson=fc,\n                locations='map_id',\n                animation_frame='Week Start Date',\n                color_continuous_scale=px.colors.diverging.RdBu_r,\n                hover_data=['region_name', 'Patients count'],\n                range_color=(0, 100),\n                color='Proportion of New Female Patients [%]', \n                title='Czechia: Proportion of New Female patients per regions'\n               )\n\nfig.update_geos(fitbounds=\"locations\", visible=True)\nfig.update_geos(projection_type=\"orthographic\")\nfig.update_layout(height=600, width=700, margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0, 'pad': 2})\nfig.show()","dcfed014":"pio.write_html(fig, file='cz_covid_what_gender_when_where.html')","42a30589":"df_czechia_age_in_time = (df_czechia\n                             .groupby(['region_name', 'Week Start Date'], as_index=False)['age']\n                             .agg({'Patients Count': len, 'Average Age of New Patients': np.mean})\n                            )\ndf_czechia_age_in_time.sort_values(by=['Week Start Date', 'region_name'], inplace=True)\ndf_czechia_age_in_time['map_id'] = df_czechia_age_in_time['region_name'].map(region_name_2_map_id)\n\n\nfig = px.choropleth(df_czechia_age_in_time,\n                geojson=fc,\n                locations='map_id',\n                animation_frame='Week Start Date',\n                color_continuous_scale='blues',\n                hover_data=['region_name', 'Patients Count'],\n                range_color=(0, df_czechia_age_in_time['Average Age of New Patients'].max()),\n                color='Average Age of New Patients', \n                title='Czechia: Average Age of New Patients per Regions'\n               )\n\nfig.update_geos(fitbounds=\"locations\", visible=True)\nfig.update_geos(projection_type=\"orthographic\")\nfig.update_layout(height=600, width=700, margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0, 'pad': 2})\nfig.show()","1c82abab":"pio.write_html(fig, 'cz_how_old_when_where.html')","75e5c6b0":"df_country_codes = pd.read_csv('..\/input\/covid19-in-czechia-personlevel-data\/country_codes', sep=';')\ncountry_code_mapping = df_country_codes.set_index('2let')['3let']\ncountry_code_2_name_mapping = df_country_codes.set_index('2let')['Countrylet']\ndf_czechia['Country Code'] = df_czechia['country_of_exposure_csu_code'].map(country_code_mapping)","5c276ff0":"fig, ax = plt.subplots(figsize=(14, 19)) \nvals = (df_czechia.loc[df_czechia['imported_case']==1, 'Country Code']\n .value_counts(ascending=True)\n)\nvals.plot(kind='barh', color=['dodgerblue'], ax=ax)\nplt.title('Czechia: contries of exposure for imported COVID-19 cases', fontsize=21)\n\nfor i, v in enumerate(vals):\n    ax.text(v + 1, i - 0.25, str(v), color='dodgerblue', fontweight='bold')","bc340cef":"with warnings.catch_warnings():\n    warnings.simplefilter('ignore')\n    df_czechia['imported_case'] = df_czechia['imported_case'].fillna(0)\n    _, axes = plt.subplots(2, 1, figsize=(12, 10), sharex=True)\n    propotion_of_imports = (df_czechia\n                            .groupby('report_date')['imported_case']\n                            .mean()\n                            .map(lambda x: int(100*x)))\n    proportion_of_local_cases = propotion_of_imports.map(lambda x: 100 - x)\n    axes[1].bar(propotion_of_imports.index, propotion_of_imports, color='red', label='Imported cases')\n    axes[1].bar(propotion_of_imports.index, proportion_of_local_cases, color='brown', bottom=propotion_of_imports, label='Local cases')\n    axes[1].set_ylabel('Proportion out of all cases [%]')\n    axes[1].legend()\n\n    (df_czechia\n     .groupby('report_date')['imported_case']\n     .sum()).plot(ax=axes[0], linewidth=3, marker='o')\n    axes[0].set_ylabel('Number of imported COVID-19 cases')\n    axes[1].set_xlabel('Date')\n    plt.xticks(rotation=30)\n    plt.suptitle('Dynamics of Imported COVID-19 cases', fontsize=24)","8b250465":"df_czechia_imports_in_time = (df_czechia[df_czechia['imported_case']==1]\n                              .groupby(['Country Code', 'report_date'])['age'].count()\n                              .groupby(level=0)\n                              .cumsum())\n\ndf_czechia_imports_in_time_wide = df_czechia_imports_in_time.unstack(level=0)\ndf_czechia_imports_in_time_wide = df_czechia_imports_in_time_wide.reindex(all_dates)\ndf_czechia_imports_in_time_wide.fillna(method='ffill', inplace=True)\n\ndf_czechia_imports_in_time = df_czechia_imports_in_time_wide.stack().reset_index().rename(columns={'level_0': 'report_date', 0: 'Total imported COVID-19 cases'})\ndf_czechia_imports_in_time['Date'] = df_czechia_imports_in_time['report_date'].map(lambda x: x.strftime('%Y-%m-%d'))","d86cb9c2":"fig = px.choropleth(df_czechia_imports_in_time,\n                    locations='Country Code',\n                    animation_frame='Date',\n                    hover_name='Country Code',\n                    range_color=(0, df_czechia_imports_in_time['Total imported COVID-19 cases'].max()),\n                    color='Total imported COVID-19 cases', \n                    title='Czechia: Cumulative Count of COVID-19 Imports per Country of Exposure'\n                   )\n\nfig.update_geos(fitbounds=\"locations\", visible=True)\nfig.update_layout(height=600, margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0, 'pad': 2})\nfig.show()","ad8af678":"pio.write_html(fig, file='cz_covid_where_from_when_cumulative.html')","e783bae9":"df_czechia_weekly_imports_in_time = (df_czechia[df_czechia['imported_case']==1]\n                                     .groupby(['Country Code', 'Week Start Date'], as_index=False)['age']\n                                     .count()\n                                     .rename(columns={'age':'New imported COVID-19 cases'})\n                                     )\n\ndf_czechia_weekly_imports_in_time.sort_values(by=['Week Start Date', 'Country Code'], inplace=True)","0ae0bcdf":"fig = px.choropleth(df_czechia_weekly_imports_in_time,\n                    locations='Country Code',\n                    animation_frame='Week Start Date',\n                    hover_name='Country Code',\n                    range_color=(0, df_czechia_weekly_imports_in_time['New imported COVID-19 cases'].max()),\n                    color='New imported COVID-19 cases', \n                    title='Czechia: Weekly Imported COVID-19 cases per Country of Exposure'\n                   )\n\nfig.update_geos(fitbounds=\"locations\", visible=True)\nfig.update_layout(height=600, margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0, 'pad': 2})\nfig.show()","f3970210":"pio.write_html(fig, file='cz_covid_where_from_when_weekly.html')","15ce1e5c":"df_czechia_weekly_imports_gender = (df_czechia[df_czechia['imported_case']==1]\n                                    .groupby('Week Start Date')['gender']\n                                    .agg(list))\n\nfemales_proportions = df_czechia_weekly_imports_gender.map(lambda x: int(100*sum([gender == 'Female' for gender in x])\/len(x)))\nmales_proportions = df_czechia_weekly_imports_gender.map(lambda x: int(100*sum([gender == 'Male' for gender in x])\/len(x)))\nplt.figure(figsize=(12, 7))\n\nxticks = list(range(len(females_proportions)))\nplt.bar(xticks, males_proportions, color='tab:blue', edgecolor='white', label='Proportion of New Male Patients [%]')\nplt.bar(xticks, females_proportions, bottom=males_proportions, \n        color='tab:pink', edgecolor='white', label='Proportion of New Female Patients [%]')\nplt.plot([-.3] + xticks + [len(females_proportions)-.7], 50*np.ones(len(females_proportions) + 2), \n         linestyle='--', linewidth=3, c='red', label='50% line')\n\nplt.xticks(xticks, females_proportions.index, rotation=30)\nplt.xlabel('Week Start Date', fontsize=18)\nplt.ylabel('[%]')\nplt.legend(loc='upper left', bbox_to_anchor=(1,1))\nplt.title('Czechia, Weekly gender proportions among patients importing COVID-19', fontsize=21)","6c26a4b6":"plt.figure(figsize=(12,7))\nax = sns.countplot(x='Week Start Date', hue='gender', data=df_czechia[df_czechia['imported_case']==1])\nplt.xticks(rotation=30)\nplt.legend(title='Gender')\nplt.ylabel('Weekly Count', fontsize=18)\nplt.title('Czechia, new imported cases per gender')\nplt.show()","4155ae83":"df_czechia_weekly_imports_gender_in_time = (df_czechia[df_czechia['imported_case']==1]\n                                            .groupby(['Country Code', 'Week Start Date'], as_index=False)['gender']\n                                            .agg(list)\n                                     )\n\ndf_czechia_weekly_imports_gender_in_time['Proportion of New Female Patients [%]'] = df_czechia_weekly_imports_gender_in_time['gender'].map(lambda x: int(100*sum([gender == 'Female' for gender in x])\/len(x)))\ndf_czechia_weekly_imports_gender_in_time['Patients Count'] = df_czechia_weekly_imports_gender_in_time['gender'].map(len)\ndf_czechia_weekly_imports_gender_in_time.sort_values(by=['Week Start Date', 'Country Code'], inplace=True)\n\\\nfig = px.choropleth(df_czechia_weekly_imports_gender_in_time,\n                    locations='Country Code',\n                    animation_frame='Week Start Date',\n                    color_continuous_scale=px.colors.diverging.RdBu_r,\n                    hover_data=['Country Code', 'Patients Count'],\n                    range_color=(0, 100),\n                    color='Proportion of New Female Patients [%]', \n                    title='Czechia: Proportion of Females among Patients Importing COVID-19, per Country of Exposure'\n                   )\n\nfig.update_geos(fitbounds=\"locations\", visible=True)\nfig.update_layout(height=600, margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0, 'pad': 2})\nfig.show()","846f43dd":"pio.write_html(fig, file='cz_covid_where_from_what_gender_when_weekly.html')","0be0b917":"df_czechia_italy_in_time = (df_czechia[df_czechia['Country Code'] == 'ITA']\n                             .groupby(['region_name', 'Week Start Date'], as_index=False)['gender']\n                             .agg({'Count': 'count', 'Percentage of Females':lambda x: int(100*sum([gender == 'Female' for gender in x])\/len(x))})\n                            )\ndf_czechia_italy_in_time.sort_values(by=['Week Start Date', 'region_name'], inplace=True)\ndf_czechia_italy_in_time['map_id'] = df_czechia_italy_in_time['region_name'].map(region_name_2_map_id)\n\n\nfig = px.choropleth(df_czechia_italy_in_time,\n                geojson=fc,\n                locations='map_id',\n                animation_frame='Week Start Date',\n                color_continuous_scale=px.colors.sequential.amp,\n                hover_data=['region_name', 'Percentage of Females'],\n                range_color=(0, df_czechia_italy_in_time['Count'].max()),\n                color='Count', \n                title='COVID-19 imports from Italy: into which regions?'\n               )\n\nfig.update_geos(fitbounds=\"locations\", visible=True)\nfig.update_geos(projection_type=\"orthographic\")\nfig.update_layout(height=600, width=700, margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0, 'pad': 2})\nfig.show()","329cfd6c":"df_czechia_aut_in_time = (df_czechia[df_czechia['Country Code'] == 'AUT']\n                             .groupby(['region_name', 'Week Start Date'], as_index=False)['gender']\n                             .agg({'Count': 'count', 'Percentage of Females':lambda x: int(100*sum([gender == 'Female' for gender in x])\/len(x))})\n                            )\ndf_czechia_aut_in_time.sort_values(by=['Week Start Date', 'region_name'], inplace=True)\ndf_czechia_aut_in_time['map_id'] = df_czechia_aut_in_time['region_name'].map(region_name_2_map_id)\n\n\nfig = px.choropleth(df_czechia_aut_in_time,\n                geojson=fc,\n                locations='map_id',\n                animation_frame='Week Start Date',\n                color_continuous_scale=px.colors.sequential.amp,\n                hover_data=['region_name', 'Percentage of Females'],\n                range_color=(0, df_czechia_aut_in_time['Count'].max()),\n                color='Count', \n                title='COVID-19 imports from Austria: into which regions?'\n               )\n\nfig.update_geos(fitbounds=\"locations\", visible=True)\nfig.update_geos(projection_type=\"orthographic\")\nfig.update_layout(height=600, width=700, margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0, 'pad': 2})\nfig.show()","d24eb9c1":"def plot_imported_cases_per_age(gender):\n    \"\"\"\n    The function computes and plots number of imported cases per each age group of the requested gender\n\n    @param gender: a string specifying gender (valid values are 'Female'\/'Male')\n    \"\"\"\n    df_czechia['age_group_'] = pd.cut(df_czechia['age'], \n                                 bins = [0, 12] + list(range(17, 81, 5)) + [110],\n                                 right=False\n                                )\n    plt.figure(figsize=(9,5))\n    (df_czechia[df_czechia['gender'] == gender]\n     .groupby('age_group_')['imported_case']\n     .sum()\n    ).plot(kind='bar')\n    plt.xlabel('Age group [years]')\n    plt.xticks(rotation=50)\n    plt.ylabel('Number of imported cases')\n    plt.ylim((0, df_czechia\n                  .groupby(['gender', 'age_group_'])['imported_case']\n                  .sum()\n                  .max()*1.1))\n    df_czechia.drop('age_group_', axis=1, inplace=True)\n    plt.title(f'Czechia, {gender}s: Number of imported cases per age', fontsize=18)","d3f77d80":"plot_imported_cases_per_age('Female')\nplot_imported_cases_per_age('Male')","27a59345":"df_czechia_weekly_imports_age_in_time = (df_czechia\n                                         .groupby(['country_of_exposure_csu_code', 'Week Start Date'], as_index=False)['age']\n                                         .agg({'Patients Count': len, 'Average Age of New imported COVID-19 cases': np.mean})\n                                     )\n\n\ndf_czechia_weekly_imports_age_in_time.sort_values(by=['Week Start Date', 'country_of_exposure_csu_code'], inplace=True)\ndf_czechia_weekly_imports_age_in_time['Country Code'] = df_czechia_weekly_imports_age_in_time['country_of_exposure_csu_code'].map(country_code_mapping)\nfig = px.choropleth(df_czechia_weekly_imports_age_in_time,\n                    locations='Country Code',\n                    animation_frame='Week Start Date',\n                    color_continuous_scale='blues',\n                    hover_data=['Country Code', 'Patients Count'],\n                    range_color=(0, df_czechia_weekly_imports_age_in_time['Average Age of New imported COVID-19 cases'].max()),\n                    color='Average Age of New imported COVID-19 cases', \n                    title='Czechia: Average Age of Patients Importing COVID-19, per Country of Exposure'\n                   )\n\nfig.update_geos(fitbounds=\"locations\", visible=True)\nfig.update_layout(height=600, margin={\"r\":0,\"t\":30,\"l\":0,\"b\":0, 'pad': 2})\npio.write_html(fig, file='cz_covid_where_from_how_old_when_weekly.html')\nfig.show()","ba143d74":"df_czechia['Country Name'] = df_czechia['country_of_exposure_csu_code'].map(country_code_2_name_mapping)\nplot_summarization_heatmap('Female', 'Czech Females: Counts of Imported Cases Per Country', \n                           bool_index=df_czechia['imported_case']==1, second_dim_col='Country Name',\n                           fig_width=500, fig_height=700, \n                           upload_fig_filename='cz_imported_females_age_country' if export_plotly_figs_online else None\n                          )","68d49bb3":"plot_summarization_heatmap('Male', 'Czech Males: Counts of Imported Cases Per Country', \n                           bool_index=df_czechia['imported_case']==1, second_dim_col='Country Name',\n                           fig_width=500, fig_height=700, \n                           upload_fig_filename='cz_imported_males_age_country' if export_plotly_figs_online else None\n                          )","17c60d23":"plot_summarization_heatmap('Female', 'Czechia, Females: Daily Counts of New Imported Cases', \n                           bool_index=df_czechia['imported_case']==1,                           \n                           upload_fig_filename='cz_imported_females_age_date' if export_plotly_figs_online else None)","bc83ae63":"plot_summarization_heatmap('Male', 'Czechia, Males: Daily Counts of New Imported Cases', \n                           bool_index=df_czechia['imported_case']==1,                           \n                           upload_fig_filename='cz_imported_males_age_date' if export_plotly_figs_online else None)","6d246dd9":"counts_1 = df_czechia.loc[df_czechia['gender'] == 'Female', 'age_group'].value_counts()\ncounts_2 = df_czechia.loc[df_czechia['gender'] == 'Male', 'age_group'].value_counts()\nsample_size_cz = np.sum(counts_1) + np.sum(counts_2)\ncounts_1 \/= 0.01*sample_size_cz\ncounts_2 \/= 0.01*sample_size_cz\ny_max = 1.1 * max(max(counts_1), max(counts_2))\n        \nall_counts = pd.DataFrame({'Female': counts_1, 'Male': counts_2})\ndf_proportions_czechia = (all_counts\n                          .stack()\n                          .reset_index()\n                          .rename(columns={'level_0':'age_group', 'level_1':'gender', 0: 'Sample proportion [%]'}))\ndf_proportions_czechia['age_group'] = df_proportions_czechia['age_group'].astype(str)","ea8b6494":"#Let's start with the `covid_19_canada_open_data_working_group` dataset.\ndf_canada_open = pd.read_csv('..\/input\/uncover\/UNCOVER\/covid_19_canada_open_data_working_group\/public-covid-19-cases-canada.csv')","e1bf5a49":"df_canada_open.shape","94f3a55d":"df_canada_open['age'].value_counts().plot(kind='barh', color=['dodgerblue'])\nplt.title('Available Age Info in the Canada Open Data dataset')","3608927d":"# df_canada_tracker = pd.read_csv('..\/input\/uncover\/covid_tracker_canada\/covid-19-tracker-canada.csv')\n# print(f'Canada tracker dataset shape: {df_canada_tracker.shape}')\n# df_canada_tracker['age'].value_counts().plot(kind='barh')\n# plt.title('Available age info in the Canada COVID-19 Tracker Dataset')","9e3fc9c5":"print(f\"Count of values in each age category: \\n{df_canada_open['age'].value_counts()[1:]}\")","32962237":"def fix_age_val(bool_idx, new_val):\n    df_canada_open.loc[bool_idx, 'age'] = new_val\n    \nfix_age_val(df_canada_open['age'].isin({'<18', '<1', '2', '<10', '<20', '10-19'}), '0-19')\nfix_age_val(df_canada_open['age'] == '61', '60-69')\nfix_age_val(df_canada_open['age'] == '50', '50-59')","882bf2dd":"print(f\"Count of values in each age category: \\n{df_canada_open['age'].value_counts()[1:]}\")","c75e2cea":"df_canada_open.loc[df_canada_open['age'] != 'Not Reported', 'sex'].value_counts().plot(kind='barh', color=['dodgerblue'])\nplt.title('Available gender info for known age in the Open Data')","edbdbb62":"sample_size_canada = sum((df_canada_open['age'] != 'Not Reported') & (df_canada_open['sex'] != 'Not Reported'))\nprint(f'Number of cases with known age and sex: {sample_size_canada}')","d814c926":"female_bool_idx = (df_canada_open['age'] != 'Not Reported') & (df_canada_open['sex'] == 'Female')\nmale_bool_idx = (df_canada_open['age'] != 'Not Reported') & (df_canada_open['sex'] == 'Male')\nmin(df_canada_open.loc[female_bool_idx, 'age'].value_counts().min(),\n    df_canada_open.loc[male_bool_idx, 'age'].value_counts().min())","9c9c475a":"female_age_group_sizes = df_canada_open.loc[female_bool_idx, 'age'].value_counts(dropna=False)\nprint(f\"Number of persons in small age categories for women: \\n{female_age_group_sizes[female_age_group_sizes<10]}\")\nmale_age_group_sizes = df_canada_open.loc[male_bool_idx, 'age'].value_counts(dropna=False)\nprint(f\"\\n\\nNumber of persons in small age categories for men: \\n{male_age_group_sizes[male_age_group_sizes<10]}\")","792be392":"joined_age_groups = ['90-99']\n\ngender_group_list = []\nage_group_list = []\ngroup_size_list = []\nnumeric_age_groups = sorted([group_name for group_name in df_canada_open['age'].unique() if group_name != 'Not Reported'])\n\nfor age_group in numeric_age_groups:\n    female_count = female_age_group_sizes[age_group]\n    male_count = male_age_group_sizes[age_group]\n    if age_group in joined_age_groups:\n        gender_group_list.append('both-genders')\n        joined_count = female_count + male_count\n        group_size_list.append(joined_count)\n        age_group_list.append(age_group)\n    else:\n        gender_group_list.extend(['Females', 'Males'])\n        age_group_list.extend([age_group, age_group])\n        group_size_list.extend([female_count, male_count])\n        \ndf_proportions_canada = pd.DataFrame({'gender': gender_group_list, 'age_group': age_group_list, \n                                       'Sample proportion [%]': [100*group_size\/sample_size_canada for group_size in group_size_list]})\n\npd.pivot_table(df_proportions_canada, index='age_group', columns=['gender'], values='Sample proportion [%]').plot.bar(rot=90, figsize=(12, 8))\nplt.title('Canada: Age distributions of COVID-19 cases per gender', fontsize=18)\nplt.ylabel('Proportion [%]')","bfeabe5d":"%%HTML\n<img src=https:\/\/i.pinimg.com\/originals\/a1\/ee\/ff\/a1eeffe12fd3db681208ad5f0387905c.png width=\"150\" align=\"left\">","0ef66c04":"def get_czech_population_gender_all(path_to_group_file):\n    \"\"\"\n    A function for loading The Czech Republic Age Gender Demographics 2018 input file.\n\n    @param path_to_group_file: A path to input file. In the dataset each gender info is stored in a separate file\n    @return: a pandas DataFrame with columns 'Age', 'VALUE'\n    \"\"\"\n    czech_population_group = pd.read_csv(path_to_group_file, low_memory=False)\n    czech_population_group.loc[czech_population_group['Age'] == '100+', 'Age'] = 100\n    czech_population_group['Age'] = czech_population_group['Age'].map(int)\n    czech_population_group['CZ0\\n\u010cR'] = czech_population_group['CZ0\\n\u010cR'].map(lambda x: int(x.replace(',','')))\n    return czech_population_group[['Age', 'CZ0\\n\u010cR']].rename(columns={'CZ0\\n\u010cR': 'VALUE'})\n\nczech_population_female = get_czech_population_gender_all('..\/input\/the-czech-republic-age-gender-demographics-2018\/CZ_demographics_women_2018.csv')\nczech_population_male = get_czech_population_gender_all('..\/input\/the-czech-republic-age-gender-demographics-2018\/CZ_demographics_men_2018.csv')","0fd36637":"def derive_age_category_cz(df, age_start, age_final):\n    \"\"\"\n    The function computes counts in the general Czech population proportions per age groups found in data on Czech COVID-19 patients.\n    The computed record is appended to the general population DataFrame.\n    \n    @param df: The general population pandas DataFrame\n    @param age_start: lower bound of the new age group interval (included)\n    @param age_final: upper bound of the new age group interval (excluded)\n    @return: the general population pandas DataFrame updated with the newly computed category\n    \"\"\"\n    row_val = 0\n    i = 0 \n    while age_start + i < age_final:\n        if np.any(df['Age'] == age_start + i):\n            row_val += df.loc[df['Age'] == age_start + i, 'VALUE'].values[0]\n        i += 1\n    row_df = pd.DataFrame({'gender': [df['gender'].values[0]], 'age_group': [f'[{age_start}, {age_final})'], 'VALUE': [row_val]})\n    return df.append(row_df, ignore_index=True)\n\n\nczech_age_groups = df_czechia['age_group'].map(str).unique()\nczech_population_male['gender'] = 'Male'\nczech_population_female['gender'] = 'Female'\nfor age_group_name in tqdm(czech_age_groups, desc='Deriving age groups..'):\n    czech_population_female = derive_age_category_cz(czech_population_female, *map(int, age_group_name[1:-1].split(', ')))\n    czech_population_male = derive_age_category_cz(czech_population_male, *map(int, age_group_name[1:-1].split(', ')))\nczech_population_joined = pd.concat((czech_population_female, czech_population_male), sort=False)\nthe_whole_population_size = czech_population_joined.loc[czech_population_joined['Age'] == -1, 'VALUE'].sum()\n\ndf_proportions_czechia['True population proportion [%]'] = np.nan\nfor index, row in df_proportions_czechia.iterrows():\n    true_population_count = czech_population_joined.loc[(czech_population_joined['age_group'] == row['age_group']) &\n                                                         (czech_population_joined['gender'] == row['gender']) , 'VALUE'].values[0]\n    df_proportions_czechia.loc[index, 'True population proportion [%]'] = 100 * true_population_count \/ the_whole_population_size","5d8c85ed":"def compare_proportions_visually(df, gender, title='', covid_col='Sample proportion [%]', return_pivoted_table=False):\n    \"\"\"\n    The function prepare data for visual comparison of age-gender group proportions\n    between COVID-19 patients and general population.\n    By default the function creates a comparative plot.\n    For a custom comparative visualization one can specify return_pivoted_table=True,\n    in this case data for comparative visualization are returned without plotting default visualization.\n    \n    @param df: a pandas DataFrame with population and COVID-19 proportions, containing columns ['age_group', 'gender', <covid_col>, 'True population proportion [%]']\n    @param gender: a gender visual comparison must be prepared for\n    @param title: a title for default visualization\n    @param covid_col: a column name with COVID-19 proportion (can 'Sample proportion [%]' or confidence interval lb)\n    @param return_pivoted_table: a boolean flag to return prepared data for custom visualization\n    @return: None when return_pivoted_table=False, otherwise a pandas DataFrame containing columns 'COVID-19', and 'General Population', indexed by age groups\n    \"\"\"\n    sample_proportion = df.loc[df['gender'] == gender, \n                               ['age_group', covid_col]].rename(columns={covid_col: 'Proportion'})\n    sample_proportion['Dataset'] = 'COVID-19'\n    population_proportion = df.loc[df['gender'] == gender,\n                                   ['age_group', 'True population proportion [%]']].rename(columns={'True population proportion [%]': 'Proportion'})\n    population_proportion['Dataset'] = 'General Population'\n    gender_proportions = pd.concat((sample_proportion, population_proportion), sort=False)\n    gender_proportions_pivoted_table = pd.pivot_table(gender_proportions,\n                                                      index='age_group', \n                                                      columns=['Dataset'], \n                                                      values='Proportion')\n    if return_pivoted_table:\n        return gender_proportions_pivoted_table\n    gender_proportions_pivoted_table.plot.bar(rot=30, figsize=(12, 7))\n    plt.xlabel('Age Group [years interval]')\n    plt.ylabel('Proportion [%]')\n    plt.title(title, fontsize=18)\n    \ncompare_proportions_visually(df_proportions_czechia, 'Female', \n                             'Czechia, Females: COVID-19 proportions vs. Population proportions')","747e3d17":"compare_proportions_visually(df_proportions_czechia, 'Male', \n                             'Czechia, Males: COVID-19 proportions vs. Population proportions')","98e898be":"def get_20_plus_proportions(df_proportions, youth_category='[0, 20)'):\n    \"\"\"\n    A function returns age category proportions in population excluding 'youth_category'\n\n    @param df_proportions: a pandas DataFrame with population and COVID-19 proportions, containing columns ['age_group', 'gender', <covid_col>, 'True population proportion [%]']\n    @param youth_category: a category in the 'age_group' column to be excluded\n    @return: a pandas DataFrame with proportions recomputed after excluding 'youth_category'\n    \"\"\"\n    df_proportions_20plus = df_proportions[df_proportions['age_group'] != youth_category].copy()\n    df_proportions_20plus['Sample proportion [%]'] = 100*df_proportions_20plus['Sample proportion [%]'] \/ df_proportions_20plus['Sample proportion [%]'].sum()\n    df_proportions_20plus['True population proportion [%]'] = 100*df_proportions_20plus['True population proportion [%]'] \/ df_proportions_20plus['True population proportion [%]'].sum()\n    return df_proportions_20plus\n\ndf_proportions_czechia_20plus = get_20_plus_proportions(df_proportions_czechia)","7f2faf0d":"compare_proportions_visually(df_proportions_czechia_20plus, 'Female', \n                             'Czechia, Females over 20: COVID-19 proportions vs. Population proportions')","06698344":"compare_proportions_visually(df_proportions_czechia_20plus, 'Male', \n                             'Czechia, Males over 20: COVID-19 proportions vs. Population proportions')","66c53bee":"%%HTML\n<iframe width=\"560\" height=\"315\" src=\"https:\/\/www.youtube.com\/embed\/2QeDRsxSF9M?rel=0&amp;controls=1&amp;showinfo=0\" frameborder=\"0\" allowfullscreen><\/iframe>","d9d6e1fd":"chisquare((df_proportions_czechia['Sample proportion [%]']*sample_size_cz\/100).map(int).values,\n          (df_proportions_czechia['True population proportion [%]']*sample_size_cz\/100).map(int).values)","3da6380e":"chisquare((df_proportions_czechia.loc[df_proportions_czechia['gender'] == 'Female', 'Sample proportion [%]']*sample_size_cz\/100).map(int).values,\n          (df_proportions_czechia.loc[df_proportions_czechia['gender'] == 'Female', 'True population proportion [%]']*sample_size_cz\/100).map(int).values)","72c4b723":"chisquare((df_proportions_czechia_20plus.loc[df_proportions_czechia_20plus['gender'] == 'Female', 'Sample proportion [%]']*sample_size_cz\/100).map(int).values,\n          (df_proportions_czechia_20plus.loc[df_proportions_czechia_20plus['gender'] == 'Female', 'True population proportion [%]']*sample_size_cz\/100).map(int).values)","09548fac":"chisquare((df_proportions_czechia.loc[df_proportions_czechia['gender'] == 'Male', 'Sample proportion [%]']*sample_size_cz\/100).map(int).values,\n          (df_proportions_czechia.loc[df_proportions_czechia['gender'] == 'Male', 'True population proportion [%]']*sample_size_cz\/100).map(int).values)","0db01d59":"chisquare((df_proportions_czechia_20plus.loc[df_proportions_czechia_20plus['gender'] == 'Male', 'Sample proportion [%]']*sample_size_cz\/100).map(int).values,\n          (df_proportions_czechia_20plus.loc[df_proportions_czechia_20plus['gender'] == 'Male', 'True population proportion [%]']*sample_size_cz\/100).map(int).values)","a2a624cc":"display(Image(\"..\/input\/helpingillustrations\/dice.jpeg\"))","884ffb6a":"display(Image(\"..\/input\/helpingillustrations\/type_I.png\"))","c9ef580d":"display(Image(\"..\/input\/helpingillustrations\/type_II.png\"))","8d429250":"df_proportions_czechia['p-value'] = np.nan\nfor index, row in df_proportions_czechia.iterrows():\n    covid_group_frequency = df_proportions_czechia.loc[index, 'Sample proportion [%]']*sample_size_cz\/100 \n    covid_others_frequency = sample_size_cz - covid_group_frequency\n    population_group_frequency = df_proportions_czechia.loc[index, 'True population proportion [%]']*sample_size_cz\/100 \n    population_others_frequency = sample_size_cz - population_group_frequency\n    # check normality: at least 10 cases in each category\n    if min([covid_group_frequency, covid_others_frequency, population_group_frequency, population_others_frequency]) >= 10:\n        df_proportions_czechia.loc[index, 'p-value'] = chisquare([covid_group_frequency, covid_others_frequency],\n                                                             [population_group_frequency, population_others_frequency])[1]\ndf_proportions_czechia['H0_rejected'] = False\ndf_proportions_czechia.loc[~df_proportions_czechia['p-value'].isnull(), 'H0_rejected'] = multipletests(df_proportions_czechia.loc[~df_proportions_czechia['p-value'].isnull(), 'p-value'])[0]","e2a6a8af":"df_proportions_czechia['Ho_rejected_bonferroni'] = df_proportions_czechia['p-value']*sum(~df_proportions_czechia['p-value'].isnull()) < 0.05","334480d8":"df_proportions_czechia[df_proportions_czechia['H0_rejected']]","9ced0770":"canada_population = pd.read_csv('..\/input\/canada-population\/17100005.csv', low_memory=False)\ncanada_population = canada_population.rename(columns={'Sex': 'gender', 'Age group': 'age_group'})\ncanada_population_female = canada_population.loc[(canada_population['REF_DATE'] == 2019) &\n                                                 (canada_population['gender'] == 'Females') &\n                                                 (canada_population['GEO'] == 'Canada'), ['gender', 'age_group', 'VALUE']]\ncanada_population_male = canada_population.loc[(canada_population['REF_DATE'] == 2019) &\n                                               (canada_population['gender'] == 'Males') &\n                                               (canada_population['GEO'] == 'Canada'), ['gender', 'age_group', 'VALUE']]\n\ndef derive_age_category_canada(df, age_start, age_final):\n    \"\"\"\n    The function computes counts in the general Canada population proportions per age groups found in data on Canada COVID-19 patients.\n    The computed record is appended to the general population DataFrame.\n    \n    @param df: The general population pandas DataFrame\n    @param age_start: lower bound of the new age group interval (included)\n    @param age_final: upper bound of the new age group interval (excluded)\n    @return: the general population pandas DataFrame updated with the newly computed category\n    \"\"\"\n    row_val = 0\n    i = 0\n    while age_start + i*5 < age_final:\n        row_val += df.loc[df['age_group'] == f'{age_start + i*5} to {age_start + i*5 + 4} years', 'VALUE'].values[0]\n        i += 1\n    row_df = pd.DataFrame({'gender': [df['gender'].values[0]], 'age_group': [f'{age_start}-{age_final}'], 'VALUE': [row_val]})\n    return df.append(row_df, ignore_index=True)\n\n\nfor age_group_name in tqdm(numeric_age_groups, desc='Unifying age groups..'):\n    canada_population_female = derive_age_category_canada(canada_population_female, *map(int, age_group_name.split('-')))\n    canada_population_male = derive_age_category_canada(canada_population_male, *map(int, age_group_name.split('-')))\ncanada_population_joined = pd.concat((canada_population_female, canada_population_male))\nthe_whole_population_size = canada_population_joined.loc[canada_population_joined['age_group'] == 'All ages', 'VALUE'].sum()\n\ncanada_population_joined['True population proportion [%]'] = np.nan\nfor index, row in df_proportions_canada.iterrows():\n    if row['gender'] == 'both-genders':\n        true_population_count = canada_population_joined.loc[canada_population_joined['age_group'] == row['age_group'], 'VALUE'].sum()\n    else:\n        true_population_count = canada_population_joined.loc[(canada_population_joined['age_group'] == row['age_group']) &\n                                                             (canada_population_joined['gender'] == row['gender']) , 'VALUE'].values[0]\n    df_proportions_canada.loc[index, 'True population proportion [%]'] = 100 * true_population_count \/ the_whole_population_size","9b4fbe42":"compare_proportions_visually(df_proportions_canada, 'Females', \n                             'Canada, Females: COVID-19 proportions vs. Population proportions')","c7edfd67":"compare_proportions_visually(df_proportions_canada, 'Males', \n                             'Canada, Males: COVID-19 proportions vs. Population proportions')","ea18c263":"df_proportions_canada_20plus = get_20_plus_proportions(df_proportions_canada, youth_category='0-19')\ncompare_proportions_visually(df_proportions_canada_20plus, 'Females', \n                             'Canada, Females over 20: COVID-19 proportions vs. Population proportions')","0627c9b5":"compare_proportions_visually(df_proportions_canada_20plus, 'Males', \n                             'Canada, Males over 20: COVID-19 proportions vs. Population proportions')","ec02d877":"chisquare((df_proportions_canada.loc[df_proportions_canada['gender'] == 'Females', 'Sample proportion [%]']*sample_size_canada\/100).map(int).values,\n          (df_proportions_canada.loc[df_proportions_canada['gender'] == 'Females', 'True population proportion [%]']*sample_size_canada\/100).map(int).values)","9a83eaee":"chisquare((df_proportions_canada_20plus.loc[df_proportions_canada_20plus['gender'] == 'Females', 'Sample proportion [%]']*sample_size_canada\/100).map(int).values,\n          (df_proportions_canada_20plus.loc[df_proportions_canada_20plus['gender'] == 'Females', 'True population proportion [%]']*sample_size_canada\/100).map(int).values)","1e0a6656":"chisquare((df_proportions_canada.loc[df_proportions_canada['gender'] == 'Males', 'Sample proportion [%]']*sample_size_canada\/100).map(int).values,\n          (df_proportions_canada.loc[df_proportions_canada['gender'] == 'Males', 'True population proportion [%]']*sample_size_canada\/100).map(int).values)","0b48b9f0":"chisquare((df_proportions_canada_20plus.loc[df_proportions_canada_20plus['gender'] == 'Males', 'Sample proportion [%]']*sample_size_canada\/100).map(int).values,\n          (df_proportions_canada_20plus.loc[df_proportions_canada_20plus['gender'] == 'Males', 'True population proportion [%]']*sample_size_canada\/100).map(int).values)","ddffd381":"%%HTML\n<img src=https:\/\/i.imgflip.com\/uzpm3.jpg width=\"210\" align=\"left\">","ef2d124a":"%%HTML\n<iframe width=\"560\" height=\"315\" src=\"https:\/\/www.youtube.com\/embed\/8E8YQY5qE3s?rel=0&amp;controls=1&amp;showinfo=0\" frameborder=\"0\" allowfullscreen><\/iframe>","6f9f6872":"def estimate_proportions_conf_intervals(df_proportions, sample_size):\n    \"\"\"\n    A function estimates confidence intervals for population proportion of each age-gender category based on COVID-19 data\n    Both multinomial and binomial proportion CI's are being computed\n\n    @param df_proportions: a pandas DataFrame with population and COVID-19 proportions, containing columns ['age_group', 'gender', <covid_col>, 'True population proportion [%]']\n    @param sample_size: number of all COVID-19 patients with age-gender records\n    @return: a pandas DataFrame with proportions updated with confidence interval columns\n    \"\"\"\n    binomial_population_proportion_lb_list = []\n    binomial_population_proportion_ub_list = []\n    age_gender_group_sizes = []\n\n    for index, row in df_proportions.iterrows():\n        age_gender_group_size = row['Sample proportion [%]'] * sample_size\/100\n        age_gender_group_sizes.append(age_gender_group_size)\n        conf_interval_lb, conf_interval_ub = proportion_confint(age_gender_group_size, sample_size, alpha=0.01)\n        binomial_population_proportion_lb_list.append(100*conf_interval_lb)\n        binomial_population_proportion_ub_list.append(100*conf_interval_ub)\n\n    conf_intervals = multinomial_proportions_confint(age_gender_group_sizes, alpha=0.01)\n    population_proportion_lb_list = list(100*conf_intervals[:, 0])\n    population_proportion_ub_list = list(100*conf_intervals[:, 1])\n    df_proportions['Population proportion CI LB [%]'] = population_proportion_lb_list\n    df_proportions['Population proportion CI UB [%]'] = population_proportion_ub_list\n    df_proportions['Binomial population proportion CI LB [%]'] = binomial_population_proportion_lb_list\n    df_proportions['Binomial population proportion CI UB [%]'] = binomial_population_proportion_ub_list\n    return df_proportions\n\ndf_proportions_canada = estimate_proportions_conf_intervals(df_proportions_canada, sample_size_canada)\ndf_proportions_czechia = estimate_proportions_conf_intervals(df_proportions_czechia, sample_size_cz)","60c4fcd7":"def plot_increase_in_covid_data(gender_proportions_pivoted_table, title):\n    \"\"\"\n    Visualization of the proportion increase in COVID-19 data vs. general population data, separately per each age group\n\n    @param gender_proportions_pivoted_table: pandas DataFrame with precomputed data for visual comparison between population and COVID-19 proportions, \n                                            the DataFrame contains columns 'COVID-19', and 'General Population', indexed by age groups\n    @param title: title of visualization\n    \"\"\"\n    gender_proportions_pivoted_table['Increase in COVID-19 proportion'] = gender_proportions_pivoted_table['COVID-19'] - gender_proportions_pivoted_table['General Population']\n    gender_proportions_pivoted_table['Increase in COVID-19 proportion'] = gender_proportions_pivoted_table['Increase in COVID-19 proportion'].map(lambda x: 0 if x<=0 else x)\n\n    plt.figure(figsize=(12, 7))\n\n    xticks = list(range(len(gender_proportions_pivoted_table)))\n    plt.bar(xticks, gender_proportions_pivoted_table['General Population'], color='darkorange', edgecolor='white', label='General Population')\n    plt.bar(xticks, gender_proportions_pivoted_table['Increase in COVID-19 proportion'], bottom=gender_proportions_pivoted_table['General Population'], \n            color='darkred', edgecolor='white', label='Increase in COVID-19 proportion\\n(HIGHER EXPOSURE TO COVID-19)')\n\n    plt.xticks(xticks, gender_proportions_pivoted_table.index)\n    plt.xlabel('Age Group')\n\n    plt.legend(loc='upper left', bbox_to_anchor=(1,1))\n    plt.title(f'{title}', fontsize=18)\n\nplot_increase_in_covid_data(compare_proportions_visually(df_proportions_czechia, 'Female', return_pivoted_table=True), \n                            title='Czechia, Females: proportion increase in COVID-19 data')\n\nplot_increase_in_covid_data(compare_proportions_visually(df_proportions_canada, 'Females', return_pivoted_table=True), \n                            title='Canada, Females: proportion increase in COVID-19 data')","a78006c5":"plot_increase_in_covid_data(compare_proportions_visually(df_proportions_czechia, 'Male',\n                                                         return_pivoted_table=True), \n                            title='Czechia, Males: proportion increase in COVID-19 data')\n\nplot_increase_in_covid_data(compare_proportions_visually(df_proportions_canada, 'Males', \n                                                         return_pivoted_table=True), \n                            title='Canada, Males: proportion increase in COVID-19 data')","25bdb7ad":"def display_tabular_diffs_cz(col_name='Sample proportion [%]', col_name_2=None, attribute_name='Czechia, Difference between COVID-19 cases proportion and Population proportion [%]'):\n    if col_name_2 is None:\n        df_proportions_czechia[attribute_name] = (df_proportions_czechia[col_name] - \n                                              df_proportions_czechia['True population proportion [%]'])\n    else:\n        proportion_diffs = df_proportions_czechia['Sample proportion [%]'] - df_proportions_czechia['True population proportion [%]']\n        df_proportions_czechia[attribute_name] = np.nan\n        lb_diff = df_proportions_czechia[col_name] - df_proportions_czechia['True population proportion [%]']\n        df_proportions_czechia.loc[proportion_diffs > 0, attribute_name] = lb_diff[proportion_diffs > 0].map(lambda x: max(0, x))        \n        ub_diff = df_proportions_czechia[col_name_2] - df_proportions_czechia['True population proportion [%]']\n        df_proportions_czechia.loc[proportion_diffs < 0, attribute_name] = ub_diff[proportion_diffs < 0].map(lambda x: min(0, x)) \n    display((df_proportions_czechia[['gender', 'age_group', attribute_name]]\n     .sort_values(by=['gender', 'age_group'])\n     .style.bar(subset=[attribute_name], align='mid', color=['#5fba7d', '#d65f5f'])\n     .set_properties(subset=[attribute_name], **{'width': '490px'})))\n\n    df_proportions_czechia.loc[~df_proportions_czechia['H0_rejected'], attribute_name] = 0\n    prepated_data = (df_proportions_czechia.loc[(df_proportions_czechia['gender'] == 'Male'), ['gender', 'age_group', attribute_name]]\n                     .sort_values(by=['gender', 'age_group']))\n    display(prepated_data.style.bar(subset=[attribute_name], align='mid', color=['#5fba7d', '#d65f5f']).set_properties(subset=[attribute_name], **{'width': '520px'}))\n\n    df_proportions_czechia.loc[~df_proportions_czechia['H0_rejected'], attribute_name] = 0\n    prepated_data = (df_proportions_czechia.loc[(df_proportions_czechia['gender'] == 'Female'), ['gender', 'age_group', attribute_name]]\n                     .sort_values(by=['gender', 'age_group']))\n    display(prepated_data.style.bar(subset=[attribute_name], align='mid', color=['#5fba7d', '#d65f5f']).set_properties(subset=[attribute_name], **{'width': '520px'}))\ndisplay_tabular_diffs_cz()","2e555f5d":"attribute_name = 'Canada, Difference between COVID-19 cases proportion and Population proportion [%]'\ndf_proportions_canada[attribute_name] = (df_proportions_canada['Sample proportion [%]'] - \n                                         df_proportions_canada['True population proportion [%]'])\n(df_proportions_canada[['gender', 'age_group', attribute_name]]\n .sort_values(by=['gender', 'age_group'])\n .style.bar(subset=[attribute_name], align='mid', color=['#5fba7d', '#d65f5f'])\n .set_properties(subset=[attribute_name], **{'width': '490px'}))","872befd4":"display_tabular_diffs_cz(col_name='Population proportion CI LB [%]', \n                         col_name_2='Population proportion CI UB [%]', \n                         attribute_name='Czechia, Difference between COVID-19 confidence interval bounds and Population proportion [%]')","9d14bc7c":"data_input = compare_proportions_visually(df_proportions_czechia, 'Female',\n                                          covid_col='Binomial population proportion CI LB [%]',\n                                          return_pivoted_table=True)\n                   \nplot_increase_in_covid_data(data_input, \n                            title='Czechia, Females: conservative COVID-19 proportion increase (Binomial CI)')","1e089b29":"data_input = compare_proportions_visually(df_proportions_czechia, 'Female',\n                                             covid_col='Population proportion CI LB [%]',\n                                             return_pivoted_table=True)\n                   \nplot_increase_in_covid_data(data_input, \n                            title='Czechia, Females: conservative COVID-19 proportion increase')","ce1041d6":"data_input = compare_proportions_visually(df_proportions_canada, 'Females', '',\n                                             covid_col='Binomial population proportion CI LB [%]',\n                                             return_pivoted_table=True)\n                   \nplot_increase_in_covid_data(data_input, \n                            title='Canada, Females: conservative COVID-19 proportion increase (Binomial CI)')","bd1001f0":"data_input = compare_proportions_visually(df_proportions_canada, 'Females',\n                                             covid_col='Population proportion CI LB [%]',\n                                             return_pivoted_table=True)\n                   \nplot_increase_in_covid_data(data_input, \n                            title='Canada, Females: conservative COVID-19 proportion increase')","38bb8a35":"data_input = compare_proportions_visually(df_proportions_czechia, 'Male', '',\n                                             covid_col='Binomial population proportion CI LB [%]',\n                                             return_pivoted_table=True)\n                   \nplot_increase_in_covid_data(data_input, \n                            title='Czechia, Males: conservative COVID-19 proportion increase (Binomial CI)')","41806706":"data_input = compare_proportions_visually(df_proportions_czechia, 'Male', '',\n                                             covid_col='Population proportion CI LB [%]',\n                                             return_pivoted_table=True)\n                   \nplot_increase_in_covid_data(data_input, \n                            title='Czechia, Males: conservative COVID-19 proportion increase')","a0e4597a":"data_input = compare_proportions_visually(df_proportions_canada, 'Males', '',\n                                             covid_col='Binomial population proportion CI LB [%]',\n                                             return_pivoted_table=True)\n                   \nplot_increase_in_covid_data(data_input, \n                            title='Canada, Males: conservative COVID-19 proportion increase (Binomial CI)')","c9c7ae71":"data_input = compare_proportions_visually(df_proportions_canada, 'Males', '',\n                                             covid_col='Population proportion CI LB [%]',\n                                             return_pivoted_table=True)\n                   \nplot_increase_in_covid_data(data_input, \n                            title='Canada, Males: conservative COVID-19 proportion increase')","7b4c7a5a":"%%HTML\n<img src=https:\/\/www.elklan.co.uk\/images\/blogs\/thousand_words.jpg width=\"140\" align=\"left\">","2d69f55f":"%%HTML\n<img src=https:\/\/pics.me.me\/that-moment-when-having-children-starts-to-pay-off-23399548.png width=\"140\" align=\"left\">","0caac9ee":"[back to Content](#Content)\n# Conservative Detection of age\/gender groups with higher risk of contracting COVID-19\n\nBased on comparison of COVID-19 95% confidence interval lower level vs. population proportion.\n\n\nThis indicates groups definitely in danger based on data.","f4076274":"The following plotly visualizations are inspired with [this amazing kernel](https:\/\/www.kaggle.com\/artgor\/finland-and-coronavirus).\n\nGeographical data for plotting would be taken from [https:\/\/github.com\/deldersveld\/topojson\/blob\/master\/countries\/czech-republic\/czech-republic-regions.json](https:\/\/github.com\/deldersveld\/topojson\/blob\/master\/countries\/czech-republic\/czech-republic-regions.json).","33d73029":"*drawing credit: Dan Perjovschi*\n\nIn this notebook I'll focus on person-level gender and age information.\n\nIn addition to the \u00a0Roche UNCOVER Challenge I'm bringing detailed data about contracted cases in the Czech republic. Please, see the [dataset page](https:\/\/www.kaggle.com\/samusram\/covid19-the-czech-republic-personlevel-data) for more details.\n\n\n\n\n\u00a0\n## Goals\n\n* Firstly, we'll do exploratory data analysis. In the EDA the main goal would be to drill down into the person-level details as much as possible. The detailed drill-down would be illustrated on data from Czechia. \n\n* Secondly, we'll target the following important question:\n**Does COVID-19 attack all age-gender groups evenly?**\n\u00a0 \n* Thirdly, we'll attempt to quantitatively estimate by how much are selected age-gender groups more at risk of contracting COVID-19.","8f215c83":"## Available age and gender info","b1e7d96e":"We\u2019ve previously seen that Women in their 30\u2019s have less COVID-19 cases compared to women in their 20\u2019s. Now we can see that the same also holds for Men in several regions!\n\nOne can also notice different shifts of age distributions in different regions. For instance, the Olomouc Female distribution is shifted towards younger Women, while \u00dast\u00ed nad Labem seems to have a slight shift towards older Ladies. However, according to the official population statistics, the average Female age in Olomouc region is slightly higher than the average age of Women in \u00dast\u00ed nad Labem. Olomouc is known to be a \u201cstudent\u201d city with up to 1\/5 of all people there being students from all over the country (reference in Czech). This observation will help us during the analysis of higher-risk groups.\n\n*Note*: as the observations might suggest migration due to studies\/work, for the planned statistical tests we'll use age-gender groups as categories, without further detalization into regions.","760c0fa5":"#### All categories","067ce1f2":"Which age-gender groups contract COVID-19 more? And when?","0d35d8ac":"#### Males over 20","ffe3237c":"[back to Content](#Content)\n### Where from and When? Counts of Czech patients per countries of exposure, In\u00a0time","d8b0620f":"[back to Content](#Content)\n### Males","dc490f82":"Let's check how dynamics of new cases per age groups for women. On x axis we're going to have date, and each row corresponds to an age group. ","375ac9ee":"[back to Content](#Content)\n### What gender, When, and Where? Proportion of new female patients per each region in time","1c091633":"*An interesting observation*\n\nWe can see that in Czechia we seemingly manage to protect older women such that there're less of them among COVID-19 patients compared to the population proportion. However, it doesn't hold for older men, even though the state policies are the same (like in the morning only older people are allowed to visit groceries\/post office). I believe it's because Czech men are true gentlemen protecting their women whenever possible. Another possible explanation might be that older men are harder to help to compared to older women.","abb21451":"## Czech regions drill-down: from overall stats down to who, when, and where \n\n\n### Overall age distributions per gender","93c78715":"To sum up, to have valid estimation of population proportion CI, the following must be true:\n\n1. Sample is random\n2. Sampling distribution of proportions has roughly normal shape\n   * rule of thumb to check: we have at least 10 points in each category. Which is true in our case.\n3. Cases are independent\n   * rule of thumb to check: sample size is at most 10% of the whole population. Which is also true for both Czechia and Canada.\n   \n\n\nWe needed to ensure points 2. and 3., because non-randomeness must be the only factor which can break our proportion estimates. Then if based on positive COVID-19 cases we obtain an estimate for population proportion of women between 50-59 that is higher than the general population proportion, then obviously the virus picks women between 50-59 more often than at random. ","7cc85889":"We know that the probability of getting 6 is 1\/6 or approximately 17%. Let\u2019s imagine that you rolled a dice and got 5. You\u2019re unhappy with the result of your \u201canalysis\u201d, so you re-roll the dice. Let\u2019s say you\u2019re unhappy again, so you re-roll once more and this time you get the desired 6. However, the probability of getting 6 at least once when rolling three dice is 42%, not 17% anymore.\nSomething similar happens if you test multiple subgroups of your data sample. The more subgroups there are, the more likely one of the subgroups is going to \u201cconfess\u201d by chance, as in the Coase\u2019s quote\n> If you torture the data long enough, it will confess to anything.\n\nSo, when repeating the same hypothesis test for multiple groups there\u2019s a higher risk of getting low p-value for some group by chance. In this case we would falsely reject a true null hypothesis. This type of error is called a Type I error.","4699d4f8":"We can observe two interesting differences between the distributions of Females vs. Males.\nIt seems that Females in their 30\u2019s contract COVID-19 less frequently compared to Males in the same age group. The same holds for Females vs. Males in their 70\u2019s. Moreover, Women in there 30\u2019s have less corona cases than women in their 20\u2019s. We\u2019ve mentioned already that n Czechia the average age of first-time mothers is 29 years, and the average age of all mothers giving birth is 31(source in Czech). Can having children lead to more efficient self-isolation and social distancing, resulting in the observed proportion of Females in their 30's? We\u2019ll check proportions of the age\/gender groups in the general population later and will conclude then.\n\nWe\u2019ve checked the gender of patients. And what about the overall distribution of COVID-19 patients per region?","d8f674c4":"Now we're going to test null hypothesis that COVID-19 attacks any person at random, not taking age-gender grouping into account. \n\nA friend of mine recommended me to provide some pointers for those, who'd like to refresh theoretical basics.\nHere one can find nice lecture notes: [from Stanford's \"Introduction to Statistical Methods\"](https:\/\/web.stanford.edu\/class\/psych10\/schedule\/P10_W7L1).\n\nAnd here's a short video from Khan academy:","41c06889":"#### Austria: what Czech regions COVID-19 was imported to?","0234407c":"We've previously seen that Women in their 30's have less COVID-19 cases compared to women in their 20's. Now we can see that the same also holds for Men in several regions!\n\nSo, we\u2019ve been looking at \u201cWho\u201d and \u201cWhere\u201d, completely ignoring the timeline of the epidemic. Let\u2019s add the question of \u201cWhen?\u201d into our drill-down!","d0a161e1":"[back to Content](#Content)\n### Pearson's chi-squared test*\n#### Females: all ages","d5bf7a88":"Unfortunately, the same hold for `covid_tracker_canada` dataset: for the majority of records `age` is missing.\nCOVID-19 tracker for Canada seems to provide similar info, but without gender info and it has slighty less records. \nSo, let's use the `covid_19_canada_open_data_working_group` dataset.","4de825da":"Preprocessing the general population data to have it in a format compatable with the COVID-19 data.","223de29b":"### Females: Visual comparison per age groups","523ebb1b":"The detailed visualization enables us to check, for instance, groups of older people. To compare genders, the color scale is the same in the both figures.\nWe can see that in the beginning of epidemic men in their 60's had one of the highest daily counts of new COVID-19 cases among all age groups. We know that the Czech government has implemented additional measures of protecting older people rather early on. And in the data we can see that for people in 60's the daily increase of patients does not grow as it does for younger age groups, even though the beginning looked similar. For a week or so the older people counts actually went down. However, later the counts started to pop, especially for men it got closer to other age groups on the same date. Another troubling observation is the increase in the new daily counts for Females in their 40's. Thankfully, lately the daily increases for this group look better, but still the group remains a leader in new cases daily.","8fe6f32e":"We have verified that each age category in the COVID-19 samples from both Czechia and Canada has at least 10 points, so let's proceed with the testing.","f786a0a6":"# EDA: The Czech Republic COVID-19 cases","fef15a71":"[back to Content](#Content)\n### What Age? Number of imported cases per age","09aae39d":"[back to Content](#Content)\n### Overview: When did we bring it to The Czech Republic?","86ce08b3":"Given the counts, let's create a category `0-19`, and unify all age records.","a7d621c3":"We obtain the same conclusion for Canada, rejecting the null hypothesis about random age groups targeting by COVID-19 with significance levels under 0.005. \n\nLet's now examine each age group separately.","32a10324":"### Canada population data","656447c5":"#### Females over 20","a8677567":"[back to Content](#Content)\n## COVID-19 imports drill down: from an overview down to Who, When, and Where From\n### Overview: What countries did we bring it from?","1bfb05a2":"### General population data\nI've downloaded the general population data for Czechia and Canada, and put them into public datasets.","fe2a39b4":"As a reference refresher about the conditions which should be met before estimating confidence intervals for proportions, please, feel free to check [this link](https:\/\/cnx.org\/contents\/KnmPEWac@2\/Confidence-Interval-Assumptions-and-Conditions), or the following video from Khan academy:","a0b971ae":"[back to Content](#Content)\n### What Gender, and When? Proportion of Females among Patients Importing COVID-19, in Time","96a35185":"Thankfully, we have at least something available to work with. ","09940705":"The age group `90-99` will have to be joined for men and women, to ensure more than 10 representatives for each group. \n\nFor other groups we can conduct analysis separately for men and women.","313be022":"Analogously, let's check age distributions per region for men:","585e2070":"**Note** the difference in proportion of young people. As this group is an obvious outliner (either due to being more resilient, or due to being more carefully protected, or both), let's also check proportions among population older than 20.","b976e3c0":"[back to Content](#Content)\n### Who and Where? Age and gender of COVID-19 patients for each region\n\nLet\u2019s see age distributions of COVID-19 patients of each gender per every region using interactive visualization.","f730127d":"Let's map the country codes to full names and check overall counts of COVID-19 cases imported into Czechia from each country.\n\nAlso, for easier visualization with plotly, let's map 2-letter country codes to 3-leter country codes.","940cf237":"Let's compute and visualize weekly mean of COVID-19 patients age in each Czech region.","df3b8a03":"We can see that even when focusing on females\/males over 20, p-values are very low. \n\nIn our case p-value is probability of getting our result or even more extreme one (more different distributions) when COVID-19 attacks all age groups evenly\/at random. Or in other words it's probability of rejecting hypothesis that COVID-19 attacks every age group evenly while in fact it's true (type I error).","a1b4a17c":"On the map above we're able to check precise numbers. Let's also animate log of the total COVID-19 cases to better see the spread in early days.","bf1d9445":"Total number of datapoints with known gender and sex:","0f20be8f":"#### Males: all ages","c0b12124":"It can be shown that for a single hypothesis test with a significance level \u03b1 probability of Type I error is less or equal to \u03b1.\n\nIf we\u2019d like to keep the probability of Type I error under \u03b1 in the case of multiple tests, we\u2019ll need to correct p-values before comparing it with \u03b1. The most basic correction is the so-called Bonferroni correction when for m tests each p-value is multiplied by m before comparing with \u03b1. Bonferroni correction is however very conservative and is known to often fail to reject false null hypothesis. In our case it\u2019d mean that risk of contracting COVID-19 is different for different age\/gender groups, yet we fail to reject the null hypothesis about the risk being the same.","4e38b976":"Before moving on to Canada data, let's compute COVID-19 age-gender group proportions and reorganize data into long format, so that it'd be more straightforward to include general population proportions later on.","bbe365d6":"We can see that multinomial confidence interval estimation, which deals with uncertainty in all categories simultaneously, provide more conservative CI estimation.","80050b42":"Now, we'll create heatmap summarizing age distributions per region. Each row would represent one region, and columns would represent age groups. This way the heatmap basically provides info of the 3D histogram (I think of it as looking on the 3D histogram from above)","68ed49da":"The visualization enables us to see that counts of Female and Male patients differ, even for larger samples in later weeks, when there're many new COVID-19 patients during later weeks. The week started on the March 30 is especially troubling to me. In all regions there're more Females among new COVID-19-positive patients. Based on our drill-down to age groups, we know that people in 40's contribute to new cases the most. Yet, based on official demographics, there're less Females in this age category than Males. In total, there're slightly more Women (50.8%), but it cannot explain systematically higher proportions of new Female patients.","1f61f445":"[back to Content](#Content)\n### Who and When? COVID-19 patients per age-gender groups in time","e60f2149":"### Checking data quality\n#### Missing values","da0299fd":"[back to Content](#Content)\n### COVID-19 age-group proportions vs. general population*","de3b036b":"Manually mapping the regions to map ids.","a501eeea":"Computing total counts of COVID-19 positive cases per date in each region. To ensure that each region has a record for each date, we transform long-format data to the wide format and reindex by the date range, then filling missing values forward (so that days without new reported cases also have record), and then stack the dataframe back into the long format.","a42906eb":"[back to Content](#Content)\n## Age distributions of COVID-19 cases per gender","ceaaa751":"Let's illustrate how I'm going to do it on one concrete example. My mother belongs to Women between 50-59, I'll use this group for running example.\n  *Steps for quantative estimation:*\n  \n1. We estimate population proportion of Women between 50-59 based on COVID-19 data. Let's say, 99% confidence interval for the group proportion is 9.1-16.9%.\n   It's an expected population proportion interval **if the virus attacks this particular age\/gender group at random**.\n    \n2. Then we compute actual proportion of women between 50-59 in the population. Let's say, the actual proportion to be 7.0%. \n    \n3. In the running example, the population proportion is less than the COVID-19 proportion by at least 2.1%. \n    \n    \n  ... and here goes a meme related to confidence intervals..","9ac85f8e":"[back to Content](#Content)\n### How old, When, and Where? Average age of new patients per each region in time","5b077c21":"We can see that women between 40-49 have the most COVID-19 cases. ","03be0552":"#### Males: all ages","f895ea0a":"[back to Content](#Content)\n### Where from, What Gender, and When? Proportion of Females among Patients Importing COVID-19, per Country of Exposure, in Time","5d7e44a9":"[back to Content](#Content)\n### Overall COVID-19 cases per Czech regions","f888ce4c":"[back to Content](#Content)\n# Groups at risk of contracting COVID-19 based on data","0808cfbe":"#### Italy: what Czech regions COVID-19 was imported to?","e6a1fb8b":"For the majority of cases with reported age, gender is known as well. It is good news as it would enable us to conduct the detailed analysis. ","70eafe09":"[back to Content](#Content)\n### Summary: comparison for all gender\/sex groups\nHere we also visualize in a column cases when COVID-19 proportion is lower than population proportion. Such 'safer' groups have green color.","05db34b1":"Computing and visualizing cumulative counts for each date.","65dadaeb":"We're going to formulate a null hypothesis that COVID-19 attacks any person at random, not taking age-gender grouping into account. \n    \nWe'll see that the null hypothesis will be rejected with a very low type I error. It's formal statistical evidence that there are age-gender population groups with significantly higher risk of contracting COVID-19. \n    \n*The COVID-19 news can easily bring one down. Yet, to stay effective in this fight agains corona, let's occasionally lift our spirits with some stats jokes*","f8747e89":"Computing weekly counts of new imported COVID-19 cases per exposure contry.","3f12918f":"Let's compute general population proportions per age groups we've introduced for COVID-19 patients.","c8aa5735":"**A takeaway message for everyone**: the age group with the majority of parents, which have to stay at home with children and therefore social-distant themselves more systematically, shows how crucial social-distancing is for COVID-19 prevention. Everyone can play a part!\n\n* efficient state policies for protecting older population groups seem to have an effect, thankfully. However, the policies seem to be more efficient for females. So, for men in their 60's and 70's exposure to COVID-19 is not significantly less than at random, while for women of the same age the exposure is significantly less. It might be worth investigating this fact further and see whether or not it might be due to better discipline among women\/staying at home with grandchildren more often\/other reason.\n* thankfully, the\u00a0proportion of imported cases is going down justifying the governmental traveling restrictions.\n* it seems that we can be reasonably calm about the youngest of our close ones. I still believe that even people under 19 shouldn't let their guard down, as it is known that people who don't have symptoms can still infect others.\n* the risk groups differ in Canada, there they are more shifted towards older people. The difference might be given by different policies of the Czech and Canadian governments. It might suggest the importance of the governmental policies (like the Czech policy allowing only older population groups to visit groceries, post offices, etc. during the morning hours).\n\n## Limitations discussion\n* As it was noted previously, the data about positive COVID-19 cases are likely to be biased towards people who not only contracted COVID-19, but at the same time had moderate, severe, or critical symptoms. In accordance with the agreement in the Data section, throughout the post by \"contracting COVID-19\/be exposed to COVID-19\/ect.\" we meant \"contracting COVID-19 and having moderate, severe, or critical symptoms\".\n* Next, the COVID-19 sample in the data is likely to be biased towards people who wanted to be tested themselves. E.g. there might be COVID-19-positive people with moderate symptoms who preferred not to visit health facilities during the epidemic and were undocumented, while there might be COVID-19-positive people with mild symptoms who preferred to visit a testing center.\n* Moreover, in the beginning of epidemic testing capacities could have been insufficient and it likely introduced additional biases, e.g. during early weeks there was a bias towards cases with critical symptoms.\u00a0\n* Next, we've analyzed data about confirmed COVID-19 positive cases. We didn't have info about the person-level mortality, or consequences of the virus, which would be very important to analyze.\n* Furthermore, we didn't have information about preexisting health conditions of patients, which also are crucially important to analyze.\nOverall, I'd view this exploratory data analysis as relatively preliminary and would suggest to repeat and extend it once better person-level data are available.\n\n\nTake care and stay healthy, everyone!","dbe6e732":"Let's compute and visualize weekly proportions of female COVID-19 patients in each Czech region.","3e753836":"Interesting to see, that young men were importing COVID-19 as a leading age groupy mainly in the beginning, while young women are consistently importing COVID-19 as one of the most active female age groups.","986dc5e7":"[back to Content](#Content)\n# EDA: Canada COVID-19 cases\nWe'll use the Roche UNCOVER Challenge data about Canada.","4c3cea68":"Let's now separately test each age\/gender group. We've already performed several tests not controlling increase in familywise error rate, considering our investigations preliminary. \nHowever, now we're going to perform 18 tests. Let's correct p-values using Holm correction.\n\n### What\u2019s wrong with multiple tests on the same data?\n*Readers with a strong statistical background might wanna skip this section.*\n\nPerforming multiple tests using the same data leads to a so-called multiple-comparisons or a multiple-analysis problem. The problem is similar to rolling a dice multiple times.","39ed5904":"Oh, Prague\u2026 It should be noted that based on official stats, the overall population of the Central Bohemian Region is slightly higher than the population of Prague. Yet, the population density in Prague is more than 30x higher, which might mean significantly harder to social-distance.\n\nWe\u2019ve seen \u201cWho\u201d (age distributions) and \u201cWhere\u201d (regions distribution) separately. Let\u2019s now drill down into combined details.","5f007347":"[back to Content](#Content)\n# Conclusions\n\nUsing available data from The Czech Republic, we've demonstrated how to perform in-depth drill down, answering various questions with visualizations.","52f2379b":"***Update***: Findings from this notebook were summarized in the [Towards Data Science blogpost](https:\/\/medium.com\/@raman.samusevich\/covid-19-person-level-drill-down-86a14dbbd78b?sk=d749076f5a992b791c6dcf8cbc704336).\n# Intro\nIn the curated COVID-19 datasets there are mainly cumulative descriptions of larger populations, e.g. country-level counts of infected people. \n\nBeing valuable, it tells us little about an age\/gender group our parents belong to, or the group of our partners, or our siblings' age\/gender.","57275604":"#### Males over 20","b54b69b6":"[back to Content](#Content)\n# Does COVID-19 attack all age-gender groups evenly?","f8ee1e35":"[back to Content](#Content)\n### Where from, How old, and When? Average Age of Patients Importing COVID-19, per Country of Exposure, in Time","24a0580d":"# Libraries","72c26401":"[back to Content](#Content)\n## Canada","d099d776":"We can see that the overall trend is the same and the differences are minor, which provides us the validation we sought. In the public media it was reported that the individual data has been post-processed and cleaned, with multiple tests of the same person being omitted, it can explain the observed minor difference and would suggest that the aggregations based on person-level data might be more precise.","43eb9204":"[back to Content](#Content)\n### What Age, What Gender, and Where from? Counts of new imported cases per patient gender and age group, per country of exposure","ce0ec7f1":"#### Fixing Codes for Countries of Exposure","708c479b":"[back to Content](#Content)\n### COVID-19 age-group proportions vs. general population","03007288":"***Notes before we dive into***:\n* the kernel is focused on the analysis of data. I'm not a health professional or epidemiologist, and the opinions of this article should not be interpreted as professional advice. To learn more about the coronavirus pandemic, you can click [here](https:\/\/www.who.int\/emergencies\/diseases\/novel-coronavirus-2019\/situation-reports).\n\n* Data about positive COVID-19 cases are likely to be biased towards people who not only contracted COVID-19, but at the same time had moderate, severe, or critical symptoms. Let\u2019s still say \u201ccontracting COVID-19\/be exposed to COVID-19\u201d instead of more precise but verbose \u201ccontracting COVID-19 and having moderate, severe, or critical symptoms\u201d. Discussion of further biases can be found in [Conclustions](#Conclusions)","852e5ba3":"![](https:\/\/media.giphy.com\/media\/dVuyBgq2z5gVBkFtDc\/giphy.gif)","3e68836e":"#### Females: all ages","5d73c521":"[back to Content](#Content)\n### Males: Visual comparison per age groups","0b99d806":"[back to Content](#Content)\n### What Age, What Gender, and When? Daily counts of new imported cases per patient gender and age group","220a0c86":"# Content\n1. [Libraries](#Libraries)\n2. [EDA: The Czech Republic COVID-19 cases](#EDA:-The-Czech-Republic-COVID-19-cases)\n   * [Czech regions drill-down: from overall stats down to Who, When, and Where](#Czech-regions-drill-down:-from-overall-stats-down-to-who,-when,-and-where)\n      * [Overall age distributions per gender](#Overall-age-distributions-per-gender)\n      * [Overall COVID-19 cases per Czech regions](#Overall-COVID-19-cases-per-Czech-regions)\n      * [Who and Where? Age and gender of COVID-19 patients for each region](#Who-and-Where?-Age-and-gender-of-COVID-19-patients-for-each-region)\n      * [When and Where? COVID-19 patients per each region in time](#When-and-Where?-COVID-19-patients-per-each-region-in-time)\n      * [Who and When? COVID-19 patients per age-gender groups in time](#Who-and-When?-COVID-19-patients-per-age-gender-groups-in-time)\n      * [What gender, When, and Where? Proportion of new female patients per each region in time](#What-gender,-When,-and-Where?-Proportion-of-new-female-patients-per-each-region-in-time)\n      * [How old, When, and Where? Average age of new patients per each region in time](#How-old,-When,-and-Where?-Average-age-of-new-patients-per-each-region-in-time)\n   * [COVID-19 imports drill down: from an overview down to Who, When, and Where From](#COVID-19-imports-drill-down:-from-an-overview-down-to-Who,-When,-and-Where-From)\n      * [Overview: What countries did we bring it from?](#Overview:-What-countries-did-we-bring-it-from?)\n      * [Where from and When? Counts of Czech patients per countries of exposure, In\u00a0time](#Where-from-and-When?-Counts-of-Czech-patients-per-countries-of-exposure,-In-time)      \n      * [What Gender, and When? Proportion of Females among Patients Importing COVID-19, in Time](#What-Gender,-and-When?-Proportion-of-Females-among-Patients-Importing-COVID-19,-in-Time)\n      * [Where from, What Gender, and When? Proportion of Females among Patients Importing COVID-19, per Country of Exposure, in Time](#Where-from,-What-Gender,-and-When?-Proportion-of-Females-among-Patients-Importing-COVID-19,-per-Country-of-Exposure,-in-Time)\n      * [What Age? Number of imported cases per age](#What-Age?-Number-of-imported-cases-per-age)\n      * [Where from, How old, and When? Average Age of Patients Importing COVID-19, per Country of Exposure, in Time](#Where-from,-How-old,-and-When?-Average-Age-of-Patients-Importing-COVID-19,-per-Country-of-Exposure,-in-Time)\n      * [What Age, What Gender, and When? Daily counts of new imported cases per patient gender and age group](#What-Age,-What-Gender,-and-When?-Daily-counts-of-new-imported-cases-per-patient-gender-and-age-group)\n3. [EDA: Canada COVID-19 cases](#EDA:-Canada-COVID-19-cases)\n   * [Available age and gender info](#Available-age-and-gender-info)\n   * [Age distributions of COVID-19 cases per gender](#Age-distributions-of-COVID-19-cases-per-gender)\n4. [Does COVID-19 attack all age-gender groups evenly?](#Does-COVID-19-attack-all-age-gender-groups-evenly?)\n   * [The Czech Republic](#The-Czech-Republic)\n      * [COVID-19 age-group proportions vs. general population](#COVID-19-age-group-proportions-vs.-general-population)\n      * [Pearson's chi-squared test](#Pearson's-chi-squared-test)\n   * [Canada](#Canada)\n      * [COVID-19 age-group proportions vs. general population](#COVID-19-age-group-proportions-vs.-general-population*)\n      * [Pearson's chi-squared test](#Pearson's-chi-squared-test*)\n5. [Groups at risk of contracting COVID-19 based on data](#Groups-at-risk-of-contracting-COVID-19-based-on-data)\n   * [Estimating confidence intervals](#Estimating-confidence-intervals)\n   * [Comparison of proportions between COVID-19 cases and general population](#Comparison-of-proportions-between-COVID-19-cases-and-general-population)\n      * [Females: Visual comparison per age groups](#Females:-Visual-comparison-per-age-groups)\n      * [Males: Visual comparison per age groups](#Males:-Visual-comparison-per-age-groups)\n      * [Summary: comparison for all gender\/sex groups](#Summary:-comparison-for-all-gender\/sex-groups)\n6. [Conservative Detection of age\/gender groups with higher risk of contracting COVID-19](#Conservative-Detection-of-age\/gender-groups-with-higher-risk-of-contracting-COVID-19)\n   * [Females](#Females)\n   * [Males](#Males)\n7. [Conclusions](#Conclusions)   ","89c9af89":"#### Females over 20","52719c6d":"The attributes `imported_case` and `country_of_exposure_csu_code` have missing values sumaltaneously only. Missing value means local exposure to COVID-19, inside Czechia.","e2326654":"## Some insights:\n* for both Czech females and males, age groups between 20\u201329, 40\u201349, and 50\u201359 have a significantly higher risk of being exposed to COVID-19 than at random.\n\u00a0 \u00a0* What's the likely reason? -> these are active groups which have to go to work even during the official state of emergency\n\u00a0 \u00a0* Women and men between 30\u201339 doesn't have a higher risk. Why? -> It was a puzzling observation at first. Then, I checked that the average age of Czech mothers is 30.1 years at birth (source in Czech). It means that among 30\u201339-year-old people there are many parents of young children. Kindergartens, as well as schools, are closed, and parents often must stay at home to take care of children.","cd2cc675":"## The Czech Republic","36376ca7":"## Reading and formating COVID-19 data","07332808":"This type of error is called a Type II error.\n\nWe\u2019ll use Holm correction which is an improvement of Bonferroni correction, technical details can be found, e.g., in [the wiki](https:\/\/en.wikipedia.org\/wiki\/Holm%E2%80%93Bonferroni_method). It should be noted that the test is still rather conservative and still might lead to Type II errors.","ca11d416":"These four records state exposure to COVID-19 outside The Czech Republic while listing The Czech Republic as the country of exposure. Let's remove these noisy records, so that all cases of exposure inside CZ have a consistent format.","02172878":"### Final data prep","738e596a":"## Females","96ff32bb":"[back to Content](#Content)\n### When and Where? COVID-19 patients per each region in time","bc39ecb7":"[back to Content](#Content)\n## Estimating confidence intervals\n\nLet's estimate 99% confidence intervals for each age-sex proportion.\n\nLet's compute both simultaneous confidence interval estimations for multinomial proportions, and confidence intervals for binomial proportions, e.g. group `female50_59` vs. all other groups.","85ddf5ba":"### Checking and fixing age data quality","3edfc81e":"[back to Content](#Content)\n## Comparison of proportions between COVID-19 cases and general population\n\nThe lower the difference between the COVID-19 proportion and the general population proportion, the lower the risk of contracting COVID-19. These cases are depicted with green bars. \n\nOn the other hand, the higher the difference, the higher the risk of contracting COVID-19. It's depicted in red.","b523cfbd":"[back to Content](#Content)\n### Pearson's chi-squared test"}}