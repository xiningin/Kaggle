{"cell_type":{"3d7741c4":"code","4b6a6a09":"code","d96c1c48":"code","5f439252":"code","cdc36fe8":"code","e542368e":"code","e56c92a0":"code","affa96dc":"code","0d81c163":"code","9407a223":"code","d1e2d28c":"code","23bdd876":"code","1d0b6c33":"code","db24f34c":"code","17de1e7d":"code","e2416a5b":"code","57943a50":"code","80897ef9":"code","4d52d3e5":"code","cb0c780b":"code","d8fceeac":"code","7c3ca3d9":"code","534e634a":"code","7d3f3299":"code","3f77241f":"code","b6b5c469":"code","418704d9":"code","0e4070e5":"code","d087b991":"code","fbde8e87":"code","3c324f7f":"code","ca521116":"code","9bce58f4":"code","7a400fd8":"code","e74c843a":"code","a970c96a":"code","93ba6856":"code","c0c22a8a":"code","2ad70eca":"markdown","5e6b5d92":"markdown","178a2e86":"markdown","3476fb35":"markdown","9cecd612":"markdown","2d792e6f":"markdown","71891798":"markdown","0d86bc50":"markdown","c9ec9c26":"markdown","dc012abd":"markdown","f1eb1b9a":"markdown","824b50bd":"markdown","237a2850":"markdown","653c82c8":"markdown","d89c6c94":"markdown","c51e7a6b":"markdown","65a69ac0":"markdown","90983810":"markdown","a21b51e2":"markdown","d0f247fe":"markdown","4b8ecf72":"markdown","d1cff511":"markdown","8942415b":"markdown","eb55aeac":"markdown","820f6134":"markdown","826f66a2":"markdown","b0bc3353":"markdown","7f8516a4":"markdown","44a17087":"markdown","881003d0":"markdown","420c5e0d":"markdown","af084505":"markdown","a912e9a0":"markdown","fbee870a":"markdown","715dba56":"markdown","819a486b":"markdown","d61f3fe0":"markdown","e1081dfd":"markdown","476048e6":"markdown","de64bbf5":"markdown","753fad99":"markdown","217f3f20":"markdown"},"source":{"3d7741c4":"# Import das bibliotecas\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np","4b6a6a09":"# Import dos dados de treino e teste\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d96c1c48":"# Lista das vari\u00e1veis (para renomear as colunas)\nvar_labels = [\"Age\", \"Workclass\", \"fnlwgt\", \"Education\", \"Education-Num\", \"Martial Status\",\n              \"Occupation\", \"Relationship\", \"Race\", \"Sex\", \"Capital Gain\", \"Capital Loss\",\n              \"Hours per week\", \"Country\", \"Income\"]\n\n# Ler os dados de treino e teste, substituir o nome das vari\u00e1veis e indentifcar os valores nulos como ?\ndf_train = pd.read_csv(\"..\/input\/adult-pmr3508\/train_data.csv\",\n                       names=var_labels,\n                       header=0,\n                       na_values=\"?\")\n\n# Remove o Income da lista de labels\nvar_labels.pop(-1)\ndf_test = pd.read_csv(\"..\/input\/adult-pmr3508\/test_data.csv\",\n                       index_col=0,\n                       names=var_labels,\n                       header=0,\n                       na_values=\"?\")","5f439252":"df_train.head()","cdc36fe8":"df_train.shape","e542368e":"df_test.head()","e56c92a0":"df_test.shape","affa96dc":"df_train.info()","0d81c163":"df_train[\"Sex\"].value_counts()","9407a223":"df_train[\"Education\"].value_counts()","d1e2d28c":"df_train.describe()","23bdd876":"!pip install -U pandas-profiling","1d0b6c33":"from pandas_profiling import ProfileReport\nprofile = ProfileReport(df_train, title='Exploratory Analysis',html={'style':{'full_width':True}})\nprofile","db24f34c":"# Gr\u00e1fico de pizza simples\nplt.pie(df_train[\"Sex\"].value_counts(), labels=df_train[\"Sex\"].unique(),autopct='%1.0f%%')\nplt.title('Sex');","17de1e7d":"# Gr\u00e1fico de boxes da Idade quebrado renda (Income)\nfig = sns.catplot(x=\"Income\", y=\"Age\", kind=\"boxen\", data=df_train)\nsns.set(rc={'figure.facecolor':'white'})\nplt.title('Age vs. Income');","e2416a5b":"# Gr\u00e1fico de boxes do tempo de Educa\u00e7\u00e3o quebrado renda (Income)\nfig = sns.catplot(x=\"Income\", y=\"Education-Num\", kind=\"boxen\", data=df_train)\nsns.set(rc={'figure.facecolor':'white'})\nplt.title('Education vs. Income');","57943a50":"# Gr\u00e1fico de boxes do Capital Gain quebrado pela renda (Income)\nfig = sns.catplot(x=\"Income\", y=\"Capital Gain\", kind=\"boxen\", data=df_train)\nsns.set(rc={'figure.facecolor':'white'})\nplt.title('Capital Gain vs. Income');","80897ef9":"# M\u00e9dia do Capital Gain quebrada por Income\ndf_train.groupby([\"Income\"])[\"Capital Gain\"].mean()","4d52d3e5":"# Gr\u00e1fico de boxes do Capital Loss quebrado pela renda (Income)\nfig = sns.catplot(x=\"Income\", y=\"Capital Loss\", kind=\"boxen\", data=df_train)\nsns.set(rc={'figure.facecolor':'white'})\nplt.title('Capital Loss vs. Income');","cb0c780b":"# M\u00e9dia do Capital Loss quebrada por Income\ndf_train.groupby([\"Income\"])[\"Capital Loss\"].mean()","d8fceeac":"# Gr\u00e1fico de boxes do Horas trabalhadas por semana quebrado pela renda (Income)\nfig = sns.catplot(x=\"Income\", y=\"Hours per week\", kind=\"boxen\", data=df_train)\nsns.set(rc={'figure.facecolor':'white'})\nplt.title('Hours per week vs. Income');","7c3ca3d9":"# M\u00e9dia do Capital Loss quebrada por Income\ndf_train.groupby([\"Income\"])[\"Hours per week\"].mean()","534e634a":"# Gr\u00e1fico de barras da Educa\u00e7\u00e3o quebrado pela renda (Income)\nfig, ax = plt.subplots(figsize=(10, 10))\nfig = sns.countplot(y=\"Education\", data=df_train, hue=\"Income\", order = df_train[\"Education\"].value_counts().index)\nsns.set(rc={'figure.facecolor':'white'})\nplt.title('Educa\u00e7\u00e3o vs. Income');\n","7d3f3299":"# Gr\u00e1fico de barras da Etnia (Race) quebrado pela renda (Income)\nfig, ax = plt.subplots(figsize=(10, 10))\nfig = sns.countplot(x=\"Race\", data=df_train, hue=\"Income\")\nsns.set(rc={'figure.facecolor':'white'})\nplt.title('Hours per week vs. Income');","3f77241f":"df_train.shape","b6b5c469":"# Missing data\ndf_train.isnull().sum(axis = 0)","418704d9":"# Retirada da observa\u00e7\u00e3o\ndf_train_na = df_train.dropna()\ndf_train_na.shape","0e4070e5":"# Treino\nX_train = df_train[[\"Age\",\"Education-Num\",\"Capital Gain\", \"Capital Loss\", \"Hours per week\"]]\n\ny_train = df_train.Income\n\n# Teste\nX_test = df_test[[\"Age\",\"Education-Num\",\"Capital Gain\", \"Capital Loss\", \"Hours per week\"]]\n","d087b991":"# Import do KNN atrav\u00e9s do sklearn\nfrom sklearn.neighbors import KNeighborsClassifier\n\n# Instanciando o classificador\nclf = KNeighborsClassifier(n_neighbors=30)","fbde8e87":"# Importando a valida\u00e7\u00e3o cruzada\nfrom sklearn.model_selection import cross_val_score\n\n# Testando a acurr\u00e1cia com a valida\u00e7\u00e3o cruzada com 10 folds\nscore = cross_val_score(clf, X_train, y_train, cv=10)\nscore","3c324f7f":"# Acurr\u00e1cia m\u00e9dia\nscore.mean()","ca521116":"k = 30\n\nacc = []\nbest_k = 0\nbest_acc = 0\n\nfor k in range(1,k+1):\n    clf = KNeighborsClassifier(n_neighbors=k)\n    score = cross_val_score(clf, X_train, y_train, cv=10)\n    score_mean = round(score.mean(), 5)\n    acc.append(score_mean)\n    print(\"Number of k: \",k)\n    print(\"Accuracy: \",score_mean)\n    print(\"\\n\")\n    \n    if best_acc < score_mean:\n        best_acc = score_mean\n        best_k = k\n        \nprint(\"Best k: \", best_k)\nprint(\"Best Accuracy\", best_acc)","9bce58f4":"acc","7a400fd8":"plt.plot(range(1,k+1), acc)\nplt.xlabel(\"k\")\nplt.ylabel(\"Accuracy\")\nplt.show()","e74c843a":"# Cria\u00e7\u00e3o do classificador e treino\nclf = KNeighborsClassifier(n_neighbors=16)\nclf.fit(X_train, y_train)\n\n# Predi\u00e7\u00e3o nos dados de teste\npred = clf.predict(X_test)\npred","a970c96a":"submission = pd.DataFrame()","93ba6856":"submission[0] = X_test.index\nsubmission[1] = pred\nsubmission.columns = [\"Id\", \"Income\"]\nsubmission.head()","c0c22a8a":"submission.to_csv('submission.csv',index = False)","2ad70eca":"<a id=\"sec-5\"><\/a>\n## 5. Predi\u00e7\u00e3o e Submiss\u00e3o","5e6b5d92":"Gera\u00e7\u00e3o do report a partir do banco de dados <code>df_train()<\/code>","178a2e86":"Nesta etapa, o classficador KNN foi criado importando o modelo do sklearn. Primeiro, realizou-se um teste com o k=30 (n\u00famero de vizinho) usando valida\u00e7\u00e3o cruzada e avaliou-se sua acurr\u00e1cia. E posterioemente foram testados diversos valores de k (1 a 30) avaliando a acurr\u00e1cia do algor\u00edtmo em 10 folds.","3476fb35":"Pode-se verificar os valores \u00fanicos das vari\u00e1veis categ\u00f3ricas com o comando <code>.value_counts()<\/code>. Segue alguns exemplos:","9cecd612":"Para lidar com o missing data optou-se pela retirada da observa\u00e7\u00e3o inteira, j\u00e1 que h\u00e1 poucos casos no banco de dados concentrados em vari\u00e1veis espec\u00edficas. Entretanto, ap\u00f3s a sele\u00e7\u00e3o das features, as vari\u00e1veis que contem valores missing n\u00e3o foram usadas. E como a acurr\u00e1cia do algor\u00edtmo foi melhor sem a exclus\u00e3o, manteve todas as observa\u00e7\u00f5es.","2d792e6f":"<a id=\"sec-2\"><\/a>\n## 2. An\u00e1lise explorat\u00f3ria","71891798":"Instala\u00e7\u00e3o do pandas-profiling:","0d86bc50":"### 2.3 An\u00e1lise com Pandas Profile Report","c9ec9c26":"### 1.1 Import das bibliotecas","dc012abd":"### 2.1 Descri\u00e7\u00e3o das vari\u00e1veis","f1eb1b9a":"Nesta etapa final, o classficador definito foi criado utilizando os dados de treino e a predi\u00e7\u00e3o foi feita nos dados de teste, buscando acertar a vari\u00e1vel target (Income). Al\u00e9m disso, os valores de predi\u00e7\u00e3o foram salvos em DataFrame e exportados em csv para submiss\u00e3o.","824b50bd":"Exemplo de gr\u00e1fico para avaliar a frequ\u00eancia de uma vari\u00e1vel categ\u00f3rica:","237a2850":"## Objetivo\n\nEste estudo tem como objetivo explorar os dados, compreendendo as vari\u00e1veis, seus valores e distribui\u00e7\u00f5es, al\u00e9m de desenvolver um classificador KNN da renda dos indiv\u00edduos (>50k ou <50k) com base nas vari\u00e1veis fornecidas.","653c82c8":"H\u00e1 15 vari\u00e1veis em nosso banco de dados, al\u00e9m do index do Id do usu\u00e1rio. Dessas, 7 s\u00e3o n\u00famericas e 9 s\u00e3o categ\u00f3ricas. H\u00e1 a seguir h\u00e1 a descri\u00e7\u00e3o das mesmas:\n\n* <code>Id<\/code> identifica o sujeito (observa\u00e7\u00e3o), usado como index. Vari\u00e1vel num\u00e9rica.\n* <code>Age<\/code> idade do indiv\u00edduo. Vari\u00e1vel num\u00e9rica.\n* <code>Workclass<\/code> regime de trabalho do indiv\u00edduo (Private, Self-emp-not-inc, Local-gov...). Vari\u00e1vel categ\u00f3rica.\n* <code>fnlwgt<\/code> significado desconhecido. Vari\u00e1vel num\u00e9rica.\n* <code>Education<\/code> escolaridade do indiv\u00edduo (Bachelors, Some-college, HS-grad...). Vari\u00e1vel categ\u00f3rica.\n* <code>Education-Num<\/code> escolaridade em anos. Vari\u00e1vel num\u00e9rica.\n* <code>Martial Status<\/code> estado civil (Married-civ-spouse, Divorced, Never-married...). Vari\u00e1vel categ\u00f3rica.\n* <code>Occupation<\/code> ocupa\u00e7\u00e3o do indiv\u00edduo(Tech-support, Craft-repair, Other-service...). Vari\u00e1vel categ\u00f3rica.\n* <code>Relationship<\/code> \"papel\" familiar (Wife, Own-child, Husband...). Vari\u00e1vel categ\u00f3rica.\n* <code>Race<\/code> grupo \u00e9tnico (White, Asian-Pac-Islander, Black...). Vari\u00e1vel categ\u00f3rica.\n* <code>Sex<\/code> sexo do indiv\u00edduo (Male e Female). Vari\u00e1vel categ\u00f3rica.\n* <code>Capital Gain<\/code> ganho de capital (heran\u00e7a?). Vari\u00e1vel num\u00e9rica.\n* <code>Capital Loss<\/code> perda de capital durante a vida. Vari\u00e1vel num\u00e9rica.\n* <code>Hours per week<\/code> horas trabalhadas por semana. Vari\u00e1vel num\u00e9rica.\n* <code>Country<\/code> pais do indiv\u00edduo (United-States, Cambodia, England...). Vari\u00e1vel categ\u00f3rica.\n* <code>Income<\/code> renda (maior que 50k ou menor que 50k). Vari\u00e1vel categ\u00f3rica.","d89c6c94":"A valida\u00e7\u00e3o cruzada foi importada e o classficador foi treinado e testado usando 10 folds.","c51e7a6b":"Os dados de predi\u00e7\u00e3o s\u00e3o extra\u00eddos em csv para submiss\u00e3o","65a69ac0":"DataFrame submission foi criado","90983810":"Ap\u00f3s a importa\u00e7\u00e3o, os dados foram colcoados em dois DataFrames, um de treino e outro de test. Al\u00e9m disso, as labels foram renomeadas para facilitar a an\u00e1lise.\n\n**Obs:** a vari\u00e1vel Income foi retirada da lista de labels, j\u00e1 que o banco de dados de teste n\u00e3o tem essa vari\u00e1vel, que \u00e9 justamente nossa vari\u00e1vel alvo.","a21b51e2":"Nesta etapa, foi feita uma comapra\u00e7\u00e3o entre grupos, separados por pessoas com renda maior ou menor que 50k (vari\u00e1vel target). Os insights foram compilados a seguir:\n\n* A m\u00e9dia de idade das pessoas que tem renda maior que 50k \u00e9 maior que as que tem menos de 50k.\n* O tempo m\u00e9dio de educa\u00e7\u00e3o \u00e9 maior para aqueles com renda maior que 50k.\n* O Ganho de Capital (Capital Gain) \u00e9 parecido, entretanto tende a ser maior para aqueles com renda maior que 50k.\n* A Perda de Capital (Capital Loss) \u00e9 parecida, entretanto aqueles com renda maior que 50k tem uma m\u00e9dia de perda maior.\n* As horas trabalhadas por semana (Hours per week) \u00e9 maior para quem tem renda maior que 50k.\n* Pessoas com maior n\u00edvel educacional tendem a ter maior renda (ex: doutorado e mestrado).\n\nA seguir h\u00e1 os gr\u00e1ficos e an\u00e1lises que geraram estes insights.","d0f247fe":"### 1.2 Import dos dados","4b8ecf72":"<a id=\"sec-4\"><\/a>\n## 4. Desenvolvimento do classificador","d1cff511":"Para avaliar qual o melhor valor de k, foi criado um loop para testar todos os valores de k de 1 a 30, utilizando valida\u00e7\u00e3o cruzada com 10 folds. Ap\u00f3s cada intera\u00e7\u00e3o o valor de k e a sua respectiva acurr\u00e1cia s\u00e3o impressos. Al\u00e9m disso, a vari\u00e1vel best_k e best_acc guardam o valor de k e da melhor acurr\u00e1cia. Al\u00e9m disso, as acurr\u00e1cia foram guardadas na lista acc para que serem plotadas.\n\nAp\u00f3s essa avalia\u00e7\u00e3o opode-se concluir que k=16 retorna a melhor acurr\u00e1cia 83.62%","8942415b":"Nesta etapa, foi feita uma an\u00e1lise explorat\u00f3ria dos dados, com objetivo de compreender melhor o banco de dados que estamos trabalhando. Para isso, foi feita uma descri\u00e7\u00e3o das vari\u00e1veis, avalio-se seus tipos, estat\u00edsticas descritivas, distribui\u00e7\u00f5es, correla\u00e7\u00f5es, al\u00e9m de alguns cruzamentos com a vari\u00e1vel Income, que \u00e9 nossa vari\u00e1vel alvo neste estudo.","eb55aeac":"J\u00e1 em rela\u00e7\u00e3o as vari\u00e1veis n\u00famericas, pode-se usar o comando <code>.describe()<\/code> para avaliar estat\u00edsticas b\u00e1sicas das vari\u00e1veis.\n\nDe maneira geral:\n\n* A idade m\u00e9dia dos indiv\u00edduos \u00e9 de 38 anos, ou seja, um p\u00fablico relativamente novo, com um desvio padr\u00e3o de 13,6 anos. Sendo tendo pessoas de 17 a 90 anos.\n* A m\u00e9dia de anos de educa\u00e7\u00e3o \u00e9 de 10 anos, com um desvio padr\u00e3o de 2,6. Variando entre 1 a 16 anos.\n* A m\u00e9dia de horas trabalhadas por semana \u00e9 de 40 horas com desvio padr\u00e3o de 12.3 horas. Desta forma, a m\u00e9dia semanal \u00e9 um regime de 8h di\u00e1rias. ","820f6134":"Neste DataFrame foi colcoado o Id e a predi\u00e7\u00e3o de renda (Income)","826f66a2":"Foram selecionadas somente features com valores num\u00e9ricos, j\u00e1 que o classificador apresentou um bom resultado, com esse conjunto de 5 vari\u00e1veis. Desta forma, foi feita sua sele\u00e7\u00e3o no banco de dados e separadas em X_train e y_train (dados de treino) e X_test (dados usados na predi\u00e7\u00e3o).","b0bc3353":"Pode-se visualizar os dados de treino (32.560 observa\u00e7\u00f5es) e teste (16.280 observa\u00e7\u00f5es), respectivamente:","7f8516a4":"Nesta etapa, foi realizado o pr\u00e9-processamento dos dados, lidando com o missing data e selecionando as features para o modelo.","44a17087":"### 2.4 Vari\u00e1veis vs. Income","881003d0":"Os dados de treino e teste foram importados do Kaggle","420c5e0d":"<a id=\"sec-1\"><\/a>\n## 1. Prepara\u00e7\u00e3o dos Dados","af084505":"### Etapas\n\n1. [Prepara\u00e7\u00e3o dos dados](#sec-1)   \n2. [An\u00e1lise explorat\u00f3ria](#sec-2)\n3. [Pr\u00e9-processamento](#sec-3)\n4. [Desenvolvimento do classificador](#sec-4)\n5. [Predi\u00e7\u00e3o](#sec-5)","a912e9a0":"# KNN with Dataset Adult\n\nEstudo da base de dados [Adult](https:\/\/www.kaggle.com\/c\/adult-pmr3508), para a disciplina de Aprendizado de M\u00e1quina - PMR3508.\n\n**Desenvolvido por:** Jo\u00e3o \u00c1lex de S\u00e1 Bugelli - n\u00ba 10281542\n","fbee870a":"Nesta etapa, foi feita a prepara\u00e7\u00e3o do ambiente importando as bibliotecas que foram utilizadas e a base de dados Adult, j\u00e1 separada em treino e teste. Al\u00e9m disso, o missing data foi identificado.","715dba56":"Para uma melhor an\u00e1lise explorat\u00f3ria dos dados, foi utilizado o <code>ProfileReport<\/code> do <code>pandas<\/code>. Este report gera uma an\u00e1lise das vari\u00e1veis, intera\u00e7\u00f5es, correla\u00e7\u00f5ese e missing, de uma maneira f\u00e1cil e r\u00e1pida.\n\nPara mais informa\u00e7\u00f5es veja: **[GitHub Pandas Profiling](https:\/\/github.com\/pandas-profiling\/pandas-profiling)**","819a486b":"Foi feito um gr\u00e1fico para avaliar a evolu\u00e7\u00e3o da acurr\u00e1cia em fun\u00e7\u00e3o dos valores de k. Pode-se notar que at\u00e9 k=10 a acurr\u00e1cia tem um grande ganho e partir deste k essa evolu\u00e7\u00e3o se estabiliza. Al\u00e9m disso, pode-se notar que a maior acurr\u00e1cia ocorre em k=16, portanto, esse ser\u00e1 o valor usado para o treino definitivo do algor\u00edtmo.","d61f3fe0":"### 2.2 An\u00e1lise das vari\u00e1veis","e1081dfd":"<a id=\"sec-3\"><\/a>\n## 3. Pr\u00e9-processamento","476048e6":"### 3.2 Feature Selection","de64bbf5":"Com k = 30 tivemos uma acurr\u00e1cia de 83,5%","753fad99":"### 3.1 Missing Data","217f3f20":"O classificador foi criado utilziando k=16 e as predi\u00e7\u00f5es foram salvas na vari\u00e1vel pred"}}