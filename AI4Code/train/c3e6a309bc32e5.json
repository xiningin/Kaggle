{"cell_type":{"54913ee2":"code","0ae02a5e":"code","15ba613f":"code","27d841dd":"code","1e72796a":"code","2a5cbd72":"code","3a759a82":"code","c92a74af":"code","6f23d3f9":"code","0aef7048":"code","66eec7b8":"code","5ab20570":"code","d1c53263":"code","ab0f0aed":"code","0e4a5c92":"markdown","1046ae41":"markdown","6ef49da0":"markdown","17b046b4":"markdown","3d94b64b":"markdown","ef29c1d9":"markdown","18c62bde":"markdown","8c169efc":"markdown","4614048a":"markdown"},"source":{"54913ee2":"import librosa\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport librosa.display\nimport plotly.express as px\nimport IPython.display as ipd\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom matplotlib.offsetbox import AnnotationBbox\nfrom mpl_toolkits.basemap import Basemap","0ae02a5e":"train = pd.read_csv('\/kaggle\/input\/birdsong-recognition\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/birdsong-recognition\/test.csv')\naudio_metadata = pd.read_csv('\/kaggle\/input\/birdsong-recognition\/example_test_audio_metadata.csv')\naudio_summary = pd.read_csv('\/kaggle\/input\/birdsong-recognition\/example_test_audio_summary.csv')","15ba613f":"train.shape","27d841dd":"train.head().T","1e72796a":"train['ebird_code'].nunique()","2a5cbd72":"train['recordist'].nunique()","3a759a82":"train['country'].nunique()","c92a74af":"longitude = train[train[\"longitude\"] != 'Not specified']['longitude'].apply(lambda x: float(x)).tolist()\nlatitude = train[train[\"latitude\"] != 'Not specified']['latitude'].apply(lambda x: float(x)).tolist()","6f23d3f9":"plt.figure(1, figsize=(16,6))\nworld_map = Basemap(projection='merc', llcrnrlat=-60, urcrnrlat=65, llcrnrlon=-180,\n                    urcrnrlon=180, lat_ts=0, resolution='c')\nworld_map.fillcontinents(color='#191919',lake_color='#000000')\nworld_map.drawmapboundary(fill_color='#000000')\nworld_map.drawcountries(linewidth=0.1, color=\"w\")\nmxy = world_map(longitude, latitude)\nworld_map.scatter(mxy[0], mxy[1], s=3, c=\"#1292db\", lw=0, alpha=1, zorder=5)\nplt.title(\"Recording Locations\")\nplt.show()","0aef7048":"country = train[\"country\"].value_counts()\ncountry = country[:35,]\nplt.figure(figsize=(20, 6))\nax = sns.barplot(country.index, country.values, palette=\"hls\")\nplt.title(\"Country and Number of Audio File Recorded\", fontsize=16)\nplt.xticks(rotation=90, fontsize=13)\nplt.yticks(fontsize=13)\nplt.ylabel(\"Number of Audio Files\", fontsize=14)\nplt.xlabel(\"\");\nfor p in ax.patches:\n    height = p.get_height()\n    y=p.get_bbox().get_points()[1,1]\n    ax.text(p.get_x()+p.get_width()\/2., height + 350, int(y), ha=\"center\", rotation=90)","66eec7b8":"plt.figure(figsize=(16, 6))\nax = sns.countplot(train['date'].apply(lambda x: x.split('-')[0]), palette=\"hls\")\nplt.title(\"Year of Recording\", fontsize=16)\nplt.xticks(rotation=90, fontsize=13)\nplt.ylabel(\"Number of Recording\", fontsize=14)\nplt.xlabel(\"Years\", fontsize=14)\nfor p in ax.patches:\n    height = p.get_height()\n    y=p.get_bbox().get_points()[1,1]\n    ax.text(p.get_x()+p.get_width()\/2., height + 50, int(y), ha=\"center\", rotation=90)","5ab20570":"train[\"file_type\"].value_counts()","d1c53263":"sound = train['type'].apply(lambda x: x.split(',')).reset_index().explode(\"type\")\nsound = sound['type'].apply(lambda x: x.strip().lower()).reset_index()\nsound['type'] = sound['type'].replace('calls', 'call')\nsound = sound['type'].value_counts()[:10,]\nplt.figure(figsize=(16, 6))\nax = sns.barplot(sound.index, sound.values, palette=\"hls\")\nplt.title(\"Types of Sounds\", fontsize=16)\nplt.xticks(rotation=90, fontsize=13)\nplt.yticks(fontsize=13)\nplt.xlabel(\"\");\nfor p in ax.patches:\n    height = p.get_height()\n    y=p.get_bbox().get_points()[1,1]\n    ax.text(p.get_x()+p.get_width()\/2., height + 350, int(y), ha=\"center\", rotation=90)","ab0f0aed":"data = train['bird_seen'].value_counts()\nplt.figure(figsize=(16, 6))\nax = sns.barplot(data.index, data.values, palette=\"hls\")\nplt.title(\"Song was heard, but was Bird Seen?\", fontsize=16)\nplt.ylabel(\"Frequency\", fontsize=14)\nplt.yticks(fontsize=13)\nplt.xticks(rotation=45, fontsize=13)\nplt.xlabel(\"\");\nfor p in ax.patches:\n    height = p.get_height()\n    y=p.get_bbox().get_points()[1,1]\n    ax.text(p.get_x()+p.get_width()\/2., height\/2, int(y), ha=\"center\", rotation=90)","0e4a5c92":"Most of the recordings are from the region of North America and Europe. Let's count number of recordings per country.","1046ae41":"# EDA of Cornell Birdcall Identification Competition Data","6ef49da0":"Let's deep dive into data and check locations and time period when souds were recorded. ","17b046b4":"It is clear that this dataset has recordings for 264 different bird species, and total 949 recordist has contributed with their recordings.","3d94b64b":"Let's see how many times bird was seen while recording sound.","ef29c1d9":"Following types of recordings are present in trainign dataset.","18c62bde":"Let's dive deep into training dataset and extract some data patterns that might help us to understand data from various view points.\nBasic structure of trainging dataset is as followed.","8c169efc":"There are total 21375 samples present in dataset with 35 different features. Let's take a look at these 35 different features.","4614048a":"#### Importing Python Libraries"}}