{"cell_type":{"4c51d07d":"code","b844b8ce":"code","72152d40":"code","531ae106":"code","4a5551d4":"code","3c991b60":"code","3faeaf7a":"code","0c5ecd20":"code","54f564f6":"code","df549c62":"code","449e265d":"code","402cb39b":"code","29d12f91":"code","7ce5177c":"code","69df52ed":"code","cee114d8":"code","bf510c51":"code","188e731a":"code","1ea96dbb":"code","f36182b7":"code","a05be5bb":"code","e242f127":"code","2cb628c9":"code","3d08b17e":"code","237d2848":"code","1401a282":"code","af3692a1":"code","f5772627":"code","2248c7de":"code","7e38fc59":"code","fcd59d36":"code","493e6a70":"markdown","55097cbe":"markdown","8800b32d":"markdown","554b6514":"markdown","f6893b2d":"markdown","4e139f0e":"markdown","99c52575":"markdown","12acea1d":"markdown"},"source":{"4c51d07d":"# basic operations\nimport numpy as np\nimport pandas as pd \n\n# for visualizations\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('seaborn-pastel')\n\n# file path\nimport os\nprint(os.listdir(\"..\/input\/premier-league-player-stats-data\/\"))","b844b8ce":"# reading the data and checking the run time\n\n%time data = pd.read_csv('\/kaggle\/input\/premier-league-player-stats-data\/Premier League Player Stats.csv')\n\nprint(data.shape)","72152d40":"# checking the first 5 rows and columns\ndata.head()","531ae106":"# decsribing the data\n\ndata.describe()","4a5551d4":"# checking NULL value\n\ndata.isnull().sum()","3c991b60":"data.loc[data['G'] > 0, 'SA%'] =  round(data['SOG']\/data['SHOTS'],3)*100\ndata.loc[data['G'] > 0, 'GA%'] =  round(data['G']\/data['SHOTS'],3)*100\ndata.loc[data['G'] > 0, 'MPG'] = round(data['MIN']\/data['G'],1)","3faeaf7a":"data.head()","0c5ecd20":"# check for NaN values\ndata.isna().sum()","54f564f6":"# fill NaN values with lowest accuracy (0) for SA% and GA% beca\ndata['SA%'] = data['SA%'].fillna(0)\ndata['GA%'] = data['GA%'].fillna(0)\n\n# fill all NaN with max time for MPG\ndata['MPG'] = data['MPG'].fillna(data['MPG'].max())","df549c62":"# check whether nan value is filled or not\ndata.isna().sum()","449e265d":"# top 10 player with highest shot accuracy\ndata.sort_values(by=['SA%'], ascending=False).head(10)","402cb39b":"# top 10 player with highest shot accuracy\ndata.sort_values(by=['GA%'], ascending=False).head(10)","29d12f91":"# top 10 player with highest shot accuracy\ndata.sort_values(by=['MPG'], ascending=True).head(10)","7ce5177c":"def team(x):\n    return data[data['TEAM'] == x]","69df52ed":"arsenal = team('Arsenal')","cee114d8":"# top 10 arsenal player with highest shot accuracy\narsenal.sort_values(by=['MPG'], ascending=True).head(10)","bf510c51":"# top 10 arsenal player with highest goal accuracy\narsenal.sort_values(by=['GA%'], ascending=False).head(10)","188e731a":"x = data.GP\nplt.figure(figsize = (12, 8))\n\nax = sns.distplot(x, bins = 50, kde = False, color = 'b')\nax.set_xlabel(xlabel = 'Game Played range', fontsize = 16)\nax.set_ylabel(ylabel = 'Count of the Players',fontsize = 16)\nax.set_title(label = 'Histogram for the number of game played of the Players', fontsize = 20)\nplt.show()\n","1ea96dbb":"# To show Different overall scores of the players participating in the FIFA 2019\n\nsns.set(style = \"dark\", palette = \"deep\", color_codes = True)\nx = data.G\nplt.figure(figsize = (12,8))\nplt.style.use('ggplot')\n\nax = sns.distplot(x, bins = 50, kde = False, color = 'r')\nax.set_xlabel(xlabel = \"Number of Goals\", fontsize = 16)\nax.set_ylabel(ylabel = 'Number of players', fontsize = 16)\nax.set_title(label = 'Histogram of number of goals by players', fontsize = 20)\nplt.show()","f36182b7":"# To show Different nations participating in the premier league\n\nplt.style.use('fivethirtyeight')\ndata['TEAM'].value_counts().plot.bar(color = 'orange', figsize = (20, 7))\nplt.title('Different Nations Participating in Premier League', fontsize = 30, fontweight = 20)\nplt.xlabel('Name of The Country')\nplt.ylabel('Count')\nplt.show()","a05be5bb":"# plotting a correlation heatmap\n\nsns.heatmap(data.corr(), annot = True)\n\nplt.title('Correlation of the Dataset', fontsize = 30)\nplt.show()","e242f127":"# picking up the countries with highest number of players to compare their overall scores\n\ndata['TEAM'].value_counts()","2cb628c9":"# Every Nations' Player and their goals\n\nteams = ('West Ham United', 'Arsenal', 'Manchester United', 'Burnley', 'Norwich City', 'Liverpool', 'Watford', 'Tottenham Hotspur')\ndata_teams = data.loc[data['TEAM'].isin(teams) & data['G']]\n\nplt.rcParams['figure.figsize'] = (15, 7)\nax = sns.violinplot(x = data_teams['TEAM'], y = data_teams['G'], palette = 'Reds')\nax.set_xlabel(xlabel = 'Countries', fontsize = 9)\nax.set_ylabel(ylabel = 'Number of GOals', fontsize = 9)\nax.set_title(label = 'Distribution of Goals of players from different countries', fontsize = 20)\nplt.show()","3d08b17e":"# Every Nations' Player and their overall scores\n\nteams = ('West Ham United', 'Arsenal', 'Manchester United', 'Burnley', 'Norwich City', 'Liverpool', 'Watford', 'Tottenham Hotspur')\ndata_teams = data.loc[data['TEAM'].isin(teams) & data['SHOTS']]\n\nplt.rcParams['figure.figsize'] = (15, 7)\nax = sns.barplot(x = data_teams['TEAM'], y = data_teams['SHOTS'], palette = 'spring')\nax.set_xlabel(xlabel = 'Team', fontsize = 9)\nax.set_ylabel(ylabel = 'Total Shots', fontsize = 9)\nax.set_title(label = 'Distribution of total shots of players from different countries', fontsize = 20)\nplt.show()","237d2848":"# finding 20 top Players who have max number of goals\n\nhighest_goals = data.sort_values('G', ascending = False)[['PLAYER','TEAM','GP','GS','G']].head(20)\nprint(highest_goals)","1401a282":"# finding 20 top Players who have lowest number of goals\n\nlowest_goals = data.sort_values('G', ascending = True)[['PLAYER','TEAM','GP','GS','G']].head(20)\nprint(lowest_goals)","af3692a1":"sns.lineplot(data['GP'], data['G'])\nplt.title('Game Played vs Number of goals', fontsize = 20)\n\nplt.show()","f5772627":"sns.lineplot(data['GS'], data['G'])\nplt.title('Game started vs Number of goals', fontsize = 20)\n\nplt.show()","2248c7de":"sns.lineplot(data['GP'], data['MIN'])\nplt.title('Game Played vs Minutes played', fontsize = 20)\n\nplt.show()","7e38fc59":"# total goals by each team\ngoals = data.groupby(\"TEAM\")[\"G\"].sum().reset_index().sort_values(by = \"G\",ascending = False)","fcd59d36":"plt.figure(figsize=(9,14))\nax = sns.barplot(x=\"G\",y=\"TEAM\",\n                 data=goals,palette=\"rainbow\",\n                 linewidth = 1,edgecolor = \"k\"*30)\nfor i,j in enumerate(goals[\"G\"][:20]):\n    ax.text(.3,i,j,weight=\"bold\",color = \"k\",fontsize =12)\nplt.title(\"Teams with highest total goals \")\nplt.show()","493e6a70":"## Analyzing Club Data","55097cbe":"## Reading the Data","8800b32d":"## Analysing Arsenal club data","554b6514":"# Work in Progress... \u23f3","f6893b2d":"## Data Visualization","4e139f0e":"# Premier League Data Analysis and Visualization","99c52575":"### Importing the Basic Libraries","12acea1d":"## New Features\n\n\\# Percentage of shots goes to goal post\n\nShots Accuracy % = (Total Shots(Shots)\/Shots on Goal(SOG)) * 100\n\n\\# percentage of goal accuracy\n\nGoal Accuracy % = (Goals(G)\/(Shots on goal(SOG)) * 100\n\n\\# time required to shot one goal\n\nmin_per_goal = (Min(MIN)\/Goals(G)) * 100"}}