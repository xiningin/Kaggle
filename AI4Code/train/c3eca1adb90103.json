{"cell_type":{"70658b5c":"code","1454de61":"code","d3ae17b0":"code","5e83304e":"code","bd56c618":"code","aff685dc":"code","e36eb644":"code","86ce5173":"code","a57ef644":"code","2a1f2f80":"code","69ae747d":"code","8d2bd7cf":"code","09271f54":"code","f5eb02dd":"code","bd2df081":"markdown","7397727b":"markdown","751644d5":"markdown"},"source":{"70658b5c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1454de61":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsgermancsv\/german.csv', delimiter=';', encoding = \"ISO-8859-2\", nrows = nRowsRead)\ndf.dataframeName = 'german.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf.head().style.set_properties(**{'background-color':'bisque',\n                                     'color': 'purple'})","d3ae17b0":"!pip install evalml","5e83304e":"from evalml.automl import AutoMLSearch\nfrom sklearn.model_selection import train_test_split","bd56c618":"X = df.drop(columns=['Creditability'])\ny = df['Creditability']","aff685dc":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2)","e36eb644":"automl = AutoMLSearch(X_train=X_train, y_train=y_train, problem_type='binary')","86ce5173":"automl.search()","a57ef644":"automl.rankings","2a1f2f80":"pipe = automl.best_pipeline\npipe.fit(X_train, y_train)\npred = pipe.predict(X_test)","69ae747d":"#https:\/\/evalml.featurelabs.com\/en\/v0.9.0\/\nautoml.describe_pipeline(3)","8d2bd7cf":"#https:\/\/evalml.featurelabs.com\/en\/v0.9.0\/\npipeline = automl.best_pipeline\npipeline.score(X_test, y_test, [\"f1\"])","09271f54":"pipeline.graph()","f5eb02dd":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Thank you FeatureLabs for EvalML script')","bd2df081":"#EvalML is an AutoML library that builds, optimizes, and evaluates machine learning pipelines using domain-specific #objective functions.\n\n#Combined with Featuretools and Compose, EvalML can be used to create end-to-end machine learning solutions for #classification and regression problems.\nhttps:\/\/evalml.featurelabs.com\/en\/v0.9.0\/\n\n![](https:\/\/evalml.featurelabs.com\/en\/v0.9.0\/_images\/evalml_logo.png)evalml.featurelabs.com","7397727b":"#Select Best pipeline","751644d5":"#EvalML library by FeatureLabs https:\/\/evalml.featurelabs.com\/en\/v0.9.0\/\n\n#Codes by Saurabh Shahane  https:\/\/www.kaggle.com\/saurabhshahane\/eval-ml-automl\/notebook"}}