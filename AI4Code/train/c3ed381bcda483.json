{"cell_type":{"e4a6df83":"code","49e8bcc8":"code","760b8d7b":"code","b6bc7c39":"code","f87b98eb":"code","9b12853a":"code","42aa805e":"code","850bb155":"code","5623dbab":"code","6fc48070":"code","bf6dd1fd":"code","43752776":"code","1e8d1d84":"code","d5ee528e":"code","16d101d4":"code","8ac95c6a":"code","11a3c587":"code","233d7cf2":"code","a488603d":"code","bfedd359":"code","5c6f908c":"code","e564c320":"code","0868102e":"code","a6a92751":"code","50aa741b":"code","682f9761":"code","7e57d2b9":"code","a3ad2ac9":"code","d1aea6c1":"markdown","96e6d993":"markdown","4e705890":"markdown","8884f697":"markdown","9773a8b2":"markdown","cf288257":"markdown","66363840":"markdown","1301b514":"markdown","d7cde7ce":"markdown","7b9b2a3d":"markdown","3ddc35cd":"markdown","4f8c800f":"markdown","683627a8":"markdown","475dc947":"markdown","4c74851a":"markdown","5f8cd21f":"markdown","2fc97eae":"markdown","db208b81":"markdown","9dcd7ae5":"markdown","935027db":"markdown","d39e453c":"markdown","72943d1c":"markdown"},"source":{"e4a6df83":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator # for word analysis in job title and description","49e8bcc8":"my_data = pd.read_csv(\"..\/input\/data-scientist-job-market-in-the-us\/alldata.csv\")\nmy_data.head()","760b8d7b":"# check null vlaue \nsns.heatmap(my_data.isnull(), cbar=False)","b6bc7c39":"# split the location by city and state \n\n# seperate city and state \nnew = my_data[\"location\"].str.split(\", \", n = 1, expand = True) \nmy_data[\"city\"] = new[0]\nmy_data[\"state\"] = new[1]\n\n# get rid of Zip code\nstate = my_data[\"state\"].str.split(\" \", n = 1, expand = True) \nmy_data[\"state\"] = state[0]\nmy_data = my_data.drop(['location'],axis = 1)\n\nmy_data.head()","f87b98eb":" sns.countplot(x=\"state\", data=my_data,\n                order = my_data['state'].value_counts().index)","9b12853a":"position_city = my_data.groupby(['state','city']).size().reset_index(name='vacancy')\nposition_city = position_city.sort_values('vacancy',ascending =False)\n\nsns.barplot(y = 'city', x = 'vacancy', data =position_city.head(10), hue = 'state' )","42aa805e":"popularity_location = my_data.groupby(['state','city']).sum()\npopularity_location = popularity_location.reset_index()\npopularity_location = popularity_location.sort_values('reviews',ascending =False)\n\nsns.barplot(y = 'city', x = 'reviews', data =popularity_location.head(10), hue = 'state' )\n","850bb155":"position_company = my_data.groupby(['state','company']).size().reset_index(name='vacancy').sort_values(['vacancy'],\n                                                                                                       ascending =False)\nposition_company.head()\n\nsns.barplot(x= 'vacancy', y='company',data =position_company.head(10), hue = 'state')\n","5623dbab":"data_science_text = ''\nfor w in my_data['position'].str.lower():\n    data_science_text = data_science_text + str(w)\n    \n    \n# lower max_font_size, change the maximum number of word and lighten the background:\nplt.figure(figsize=(10,6))\nwordcloud = WordCloud(background_color=\"white\").generate(data_science_text)\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","6fc48070":"popular_position = my_data.groupby('position').size().sort_values(ascending =False).to_frame().reset_index()\npopular_position.columns = ['position','count']\nsns.barplot(x='count', y='position', data =popular_position.head(20))","bf6dd1fd":"# classify job into \"machine learning\" , \"data scientist\", \"data analyst\",\"data engineer\", \"other\"\n\nfor i  in range(len(my_data)):\n    \n    \n    p = my_data.iloc[i,0]\n    p =str(p)\n    p = p.lower()\n    if p.find(\"machine\")!= -1 and  p.find(\"learning\")!= -1 :\n         my_data.loc[i,'position_type'] = 'machine_learning'\n        \n    \n      \n    elif p.find(\"scientist\") != -1 or p.find(\"science\") != -1:\n            my_data.loc[i,'position_type'] = 'scientist'\n    elif p.find(\"analyst\") != -1 or p.find(\"analytics\") != -1 or p.find(\"intelligent\") != -1or p.find(\"analysis\") != -1 :\n            my_data.loc[i,'position_type'] = 'analyst'\n    elif p.find(\"engineer\") != -1 :\n            my_data.loc[i,'position_type'] = 'engineer'\n\n    else:\n        my_data.loc[i,'position_type'] = 'other'\n","43752776":"sns.countplot(x = 'position_type', data = my_data)","1e8d1d84":"# machine learning job\n\nmachine_learning_job  = my_data[my_data['position_type'] ==  'machine_learning']\n\ntext = ''\nfor w in machine_learning_job['position'].str.lower():\n    text = text + str(w)\nstop_words = ['data','machine learning',\"machine\",\"learning\"] + list(STOPWORDS)\n\n\n# Create and generate a word cloud image:\nwordcloud = WordCloud(stopwords = stop_words, background_color=\"white\").generate(text)\n\n# Display the generated image:\nplt.figure(figsize=(10,6))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.title(\"Machine Learning Job Title\", size = 25,y=-0.1)\nplt.axis(\"off\")\nplt.show()\n","d5ee528e":"# data scientist job\n\nscientist_job  = my_data[my_data['position_type'] ==  'scientist']\nscientist_job.head()\n\ntext = ''\nfor w in scientist_job['position'].str.lower():\n    text = text + str(w)\nstop_words = ['data','scientist'] + list(STOPWORDS)\n\n\n# Create and generate a word cloud image:\nwordcloud = WordCloud(stopwords = stop_words, background_color=\"white\").generate(text)\n\n# Display the generated image:\nplt.figure(figsize=(10,6))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.title(\"Data Scientist Job Title\", size = 25,y=-0.1)\nplt.axis(\"off\")\nplt.show()\n","16d101d4":"# data analyst job\n\nanalyst_job  = my_data[my_data['position_type'] ==  'analyst']\n\n\ntext = ''\nfor w in analyst_job['position'].str.lower():\n    text = text + str(w)\nstop_words = ['data','analyst',\"analytics\"] + list(STOPWORDS)\n\n\n# Create and generate a word cloud image:\nwordcloud = WordCloud(stopwords = stop_words, background_color=\"white\").generate(text)\n\n# Display the generated image:\nplt.figure(figsize=(10,6))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.title(\"Data Analyst Job Title\", size = 25,y=-0.1)\nplt.axis(\"off\")\nplt.show()","8ac95c6a":"# data engineer job\n\nengineer_job  = my_data[my_data['position_type'] ==  'engineer']\n\n\ntext = ''\nfor w in engineer_job ['position'].str.lower():\n    text = text + str(w)\nstop_words = ['data','engineer'] + list(STOPWORDS)\n\n\n# Create and generate a word cloud image:\nwordcloud = WordCloud(stopwords = stop_words, background_color=\"white\").generate(text)\n\n# Display the generated image:\nplt.figure(figsize=(10,6))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.title(\"Data Engineer Job Title\", size = 25,y=-0.1)\nplt.axis(\"off\")\nplt.show()","11a3c587":"#other job\n\nother_position  = my_data[my_data['position_type'] ==  'other']\n\n\ntext = ''\nfor w in other_position ['position'].str.lower():\n    text = text + str(w)\nstop_words = ['data'] + list(STOPWORDS)\n\n\n# Create and generate a word cloud image:\nwordcloud = WordCloud(stopwords = stop_words, background_color=\"white\").generate(text)\n\n# Display the generated image:\nplt.figure(figsize=(10,6))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","233d7cf2":"other_position.head(10)","a488603d":"# machine learning job\ntext = ''\nfor w in machine_learning_job ['description'].str.lower():\n    text = text + str(w)\n\n\n# Create and generate a word cloud image:\nwordcloud = WordCloud(stopwords = stop_words, background_color=\"white\").generate(text)\n\n# Display the generated image:\nplt.figure(figsize=(10,6))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","bfedd359":"# scientist data job\ntext = ''\nfor w in scientist_job ['description'].str.lower():\n    text = text + str(w)\n\n\n# Create and generate a word cloud image:\nwordcloud = WordCloud(stopwords = stop_words, background_color=\"white\").generate(text)\n\n# Display the generated image:\nplt.figure(figsize=(10,6))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.title(\"Data Scientist Job Description\", size = 25,y=-0.1)\nplt.axis(\"off\")\nplt.show()","5c6f908c":"# data analyst job\ntext = ''\nfor w in analyst_job ['description'].str.lower():\n    text = text + str(w)\n\n\n# Create and generate a word cloud image:\nwordcloud = WordCloud(stopwords = stop_words, background_color=\"white\").generate(text)\n\n# Display the generated image:\nplt.figure(figsize=(10,6))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.title(\"Data Analyst Job Description\", size = 25,y=-0.1)\nplt.axis(\"off\")\nplt.show()","e564c320":"# data engineer job\ntext = ''\nfor w in engineer_job ['description'].str.lower():\n    text = text + str(w)\n\n\n# Create and generate a word cloud image:\nwordcloud = WordCloud(stopwords = stop_words, background_color=\"white\").generate(text)\n\n# Display the generated image:\nplt.figure(figsize=(10,6))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.title(\"Data Engineer Job Description\", size = 25,y=-0.1)\nplt.axis(\"off\")\nplt.show()","0868102e":"for i  in range(len(scientist_job)):\n    \n    \n    p = scientist_job.iloc[i,2]\n    p =str(p)\n    p = p.lower()\n    if p.find(\"python\")!= -1  :\n        scientist_job.loc[i,'python'] = 1\n    else:\n        scientist_job.loc[i,'python'] = 0\n    if p.find(\"r\")!= -1  :\n         scientist_job.loc[i,'r'] = 1\n    else:\n        scientist_job.loc[i,'r'] = 0\n    if p.find(\"java\")!= -1 or p.find(\"c++\")!= -1 or p.find(\"c\")!= -1  :\n        scientist_job.loc[i,'java_c++'] = 1\n    else:\n        scientist_job.loc[i,'java_c++'] = 0\n\nscientist_job[['python','r','java_c++']].mean()","a6a92751":"sns.countplot(x = \"python\", data = scientist_job)","50aa741b":"for i  in range(len(scientist_job)):\n    \n    \n    p = scientist_job.iloc[i,2]\n    p =str(p)\n    p = p.lower()\n    if p.find(\"research\")!= -1  :\n        scientist_job.loc[i,'research'] = 1\n    else:\n        scientist_job.loc[i,'research'] = 0\n\nfor i  in range(len(scientist_job)):\n    \n    \n    p = scientist_job.iloc[i,0]\n    p =str(p)\n    p = p.lower()\n    if p.find(\"research\")!= -1  :\n        scientist_job.loc[i,'research_title'] = 1\n    else:\n        scientist_job.loc[i,'research_title'] = 0\nscientist_job['research'].mean()","682f9761":"scientist_job.corr()","7e57d2b9":"for i  in range(len(analyst_job)):\n    \n    \n    p = analyst_job.iloc[i,2]\n    p =str(p)\n    p = p.lower()\n    if p.find(\"python\")!= -1  :\n        analyst_job.loc[i,'python'] = 1\n    else:\n        analyst_job.loc[i,'python'] = 0\n    if p.find(\"r\")!= -1  :\n         analyst_job.loc[i,'r'] = 1\n    else:\n        analyst_job.loc[i,'r'] = 0\n    if p.find(\"sql\")!= -1   :\n        analyst_job.loc[i,\"sql\"] = 1\n    else:\n        analyst_job.loc[i,\"sql\"] = 0\n    if p.find(\"visualize\")!= -1  or p.find(\"visualization\")!= -1 or p.find(\"tableau\")!= -1 or p.find(\"powerbi\")!= -1:\n        analyst_job.loc[i,\"visualization\"] = 1\n    else:\n        analyst_job.loc[i,\"visualization\"] = 0\n\nanalyst_job[['python','r',\"sql\",\"visualization\"]].mean()","a3ad2ac9":"analyst_job.corr()","d1aea6c1":"# Objestive","96e6d993":"## Job Vacancy & Location ","4e705890":"What skills are needed to become a data scientist or data analyst ?","8884f697":"## techniqical skill ","9773a8b2":"# Introducition ","cf288257":"## Job popularity & Location ","66363840":"Since I can't passively using word cloud to find the essential skill, I do an active search based on those popular coding languages.","1301b514":"Finding:\n\nFor position related to key word \"scientist\" and \"analyst\",  \"reseach\" is a word that keeps repeating.\nFor position in \"analyst\", I want ot add key words as quantitative, business, marketing, operation, interlligent\nFor position in engineer and 'scientist\", we need to add \"software\" and also ML","d7cde7ce":" # Data Visualization ","7b9b2a3d":"# Conclusion ","3ddc35cd":"My passion in data led me to purchase the career path of in data science. But the more I learned more about this industry, the more I realized how complicated it is. Data science domain itself it\u2019s a supply chain containing so many different professionals with various of skillset. In order to know which part I want to devote myself into, I need to know the different between each position, especially the job description and skills requirements.","4f8c800f":"It's interesting that even though New york has most vacancy, but not the most review, meaning that in average, people are more interested in position in Seattle than in New york.","683627a8":"## Company vs Posotion ","475dc947":"The result is a little bit counterintuitive that I am not confident enough to drop conclusion. But it\u2019s obvious that python and R are important for most of the both data scientist and data analyst; SQL and data visualization are also important for data analyst.","4c74851a":"# Job Description Analysis ","5f8cd21f":"# Job Title Analysis","2fc97eae":"# Data","db208b81":"I found this informative dataset on kaggle :https:\/\/www.kaggle.com\/sl6149\/data-scientist-job-market-in-the-us\u3121\nI use the allcity dataset to have a more generable result.        ","9dcd7ae5":"## brief look ","935027db":"\"r\" shows up more frequently then in data scientist job description. The correlation between r and python drop, but the correlation between sql and python is high.","d39e453c":"By conventions, we have three main kinds of position in the data science industry: data engineer, data scientist and data analyst. However, since machine learning is a domain I am also in interested in, I will set a separated category for it.","72943d1c":"Data is quite conplete, except the part for review.\nCome up with a suitable way to deal with the missing value along the way of EDA \n"}}