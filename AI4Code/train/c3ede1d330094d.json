{"cell_type":{"82127656":"code","f43033f3":"code","d4628170":"code","cb39443e":"code","0a306d43":"code","4cc26bf2":"markdown"},"source":{"82127656":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f43033f3":"xl = pd.ExcelFile('\/kaggle\/input\/examresult\/py_mind.xlsx')\nxs = xl.sheet_names\ndf1 = pd.DataFrame()\nprint(xs)\nfor i in xs:\n    if i==\"emrullah\":\n        df1[\"dogru_cevap\"] = xl.parse(i).iloc[:,1]\n        df1[i] = xl.parse(i).iloc[:,2]\n    else:\n        df1[i] = xl.parse(i).iloc[:,1]\n    #print(df1)   \ndf1.loc[len(df1)] = \"py_mind\"\n\n\nxl = pd.ExcelFile('\/kaggle\/input\/examresult\/py_sense.xlsx')\nxs = xl.sheet_names\ndf2 = pd.DataFrame()\nprint(xl)\nfor i in xs:\n    df2[i] = xl.parse(i).iloc[:,1]\ndf2.loc[len(df2)] = \"py_sense\"\n\n\nxl = pd.ExcelFile('\/kaggle\/input\/examresult\/py_science.xlsx')\nxs = xl.sheet_names\ndf3 = pd.DataFrame()\n#print(xs)\nfor i in xs[:-1]:\n    df3[i] = xl.parse(i).iloc[:,1]\ndf3.loc[len(df3)] = \"py_science\"\n\n\nxl = pd.ExcelFile('\/kaggle\/input\/examresult\/py_opinion.xlsx')\nxs = xl.sheet_names\ndf4 = pd.DataFrame()\nfor i in xs[:-1]:\n    df4[i] = xl.parse(i).iloc[:,1]\ndf4.loc[len(df4)] = \"py_opinion\"\n    \n","d4628170":"son_list1=pd.concat([df1, df2, df3, df4], axis=1, sort=False)\nson_list=son_list1.fillna(0)\nsinif_mev=len(son_list.columns)\ni=1\nmd=my=mb=0\nsed=sey=seb=0\nscd=scy=scb=0\nod=oy=ob=0\nmi=sei=sci=oi=0\nd = {}\nwhile i < sinif_mev:\n    d_say=0\n    y_say=0\n    b_say=0\n    j=0\n    while j < 20:\n        \n        if son_list.iloc[:,0][j]==son_list.iloc[:,i][j]:\n            d_say += 1\n            j+=1\n        elif son_list.iloc[:,i][j] == 0 :\n            b_say += 1\n            j+=1\n        else:\n            y_say += 1\n            j+=1\n        \n    if son_list.iloc[:,i][23] == 'py_mind':\n        md += d_say\n        my += y_say\n        mb += b_say\n        mi +=1\n    elif son_list.iloc[:,i][23] == 'py_science':\n        scd += d_say\n        scy += y_say\n        scb += b_say\n        sci +=1\n    elif son_list.iloc[:,i][23] == 'py_sense':\n        sed += d_say\n        sey += y_say\n        seb += b_say\n        sei +=1\n    else:\n        od += d_say\n        oy += y_say\n        ob += b_say\n        oi +=1\n    d.setdefault(son_list.columns[i],[]).append(d_say) \n    d.setdefault(son_list.columns[i],[]).append(y_say)\n    d.setdefault(son_list.columns[i],[]).append(b_say) \n    d.setdefault(son_list.columns[i],[]).append(son_list.iloc[:,i][23])\n    i+=1\nprint('py_mind sinifi {} kisi sinava girmis,ortalama dogru sayisi {} ortalama yanlis sayisi {} toplam bos sayisi {}'.format(mi,md\/mi,my\/mi,mb))\nprint('py_science sinifi {} kisi sinava girmis,ortalama dogru sayisi {} ortalama yanlis sayisi {} toplam bos sayisi {}'.format(sci,scd\/sci,scy\/sci,scb))\nprint('py_sense sinifi {} kisi sinava girmis,ortalama dogru sayisi {} ortalama yanlis sayisi {} toplam bos sayisi {}'.format(sei,sed\/sei,sey\/sei,seb))\nprint('py_opinion sinifi {} kisi sinava girmis,ortalama dogru sayisi {} ortalama yanlis sayisi {} toplam bos sayisi {}'.format(oi,od\/oi,oy\/oi,ob))","cb39443e":"b_list=pd.DataFrame(d, index=['d_say','y_say','b_say','sinif'])\naa=b_list.groupby('sinif', axis=1)\nprint(aa)\ndfObj = b_list.sort_values(by ='d_say', axis=1,ascending=False)\ndfObj1 = b_list.sort_values(by ='y_say', axis=1,ascending=False)\ndfObj2 = b_list.sort_values(by ='b_say', axis=1,ascending=False)\nprint(\"en fazla dogru yapan ogrenciler siralamasi \")\nprint(dfObj)\nprint(\"en fazla yanlis yapan ogrenciler siralamasi \")\nprint(dfObj1)\nprint(\"en fazla bos birakan ogrenciler siralamasi \")\nprint(dfObj2)","0a306d43":"i=0\ns = {}\nwhile i < 20:\n    a_say=0\n    b_say=0\n    c_say=0\n    d_say=0\n    e_say=0\n    bos_say=0\n    boss_say=0\n    dog_say=0\n    yan_say=0\n    j=1\n    while j < sinif_mev:\n        \n        if son_list.iloc[:,0][i]==son_list.iloc[:,j][i]:\n            dog_say += 1\n            \n        elif son_list.iloc[:,j][i] == 0 :\n            boss_say += 1\n           \n        else:\n            yan_say += 1\n          \n        \n        if son_list.iloc[:,j][i]=='A':\n            a_say += 1\n            j+=1\n        elif son_list.iloc[:,j][i]=='B':\n            b_say += 1\n            j+=1\n        elif son_list.iloc[:,j][i]=='C':\n            c_say += 1\n            j+=1\n        elif son_list.iloc[:,j][i]=='D':\n            d_say += 1\n            j+=1\n        elif son_list.iloc[:,j][i]=='E':\n            e_say += 1\n            j+=1\n        else:\n            bos_say += 1\n            j+=1\n            \n    soru=i+1\n    soru=(str(soru) + \"_soru\")\n    s.setdefault(soru,[]).append(a_say) \n    s.setdefault(soru,[]).append(b_say)\n    s.setdefault(soru,[]).append(c_say)\n    s.setdefault(soru,[]).append(d_say)\n    s.setdefault(soru,[]).append(e_say)\n    s.setdefault(soru,[]).append(dog_say)\n    s.setdefault(soru,[]).append(yan_say)\n    s.setdefault(soru,[]).append(boss_say)\n    i+=1\n        \n\ns_list=pd.DataFrame(s, index=['a','b','c','d','e','d_say','y_say','b_say'])\ndfObj = s_list.sort_values(by ='d_say', axis=1,ascending=False)\ndfObj1 = s_list.sort_values(by ='y_say', axis=1,ascending=False)\ndfObj2 = s_list.sort_values(by ='b_say', axis=1,ascending=False)\nprint(\"En fazla dogru yapilan sorular siralamasi\")\nprint(dfObj)\nprint(\"En fazla yanlis yapilan sorular siralalmasi \")\nprint(dfObj1)\nprint(\"En fazla bos birakilan sorular siralamasi\")\nprint(dfObj2)\n","4cc26bf2":"import glob\nimport os\npath = \"D:\\\\french\\\\french_data\\\\focus1\\\\*.csv\"\nfor fname in glob.glob(path):\n    data1 = pd.read_csv(fname)\n    data = data1['x_raw']"}}