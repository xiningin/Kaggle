{"cell_type":{"704f113d":"code","d968647c":"code","3efb31c3":"code","5f4718a4":"code","03ebac48":"code","46446259":"code","98fcef92":"code","5e1d8ab3":"code","7913a955":"code","0b51810a":"code","d6e29059":"code","fe8f19c3":"code","c6675fdf":"code","e8d42e66":"code","09777924":"code","58a476dd":"code","3ce5e037":"code","d24bcfde":"code","320afeb4":"markdown","f50b8202":"markdown","c926ac9a":"markdown","fd8ad90f":"markdown","0fa5846c":"markdown","42c2fe1e":"markdown","98ab47cd":"markdown","5b3db728":"markdown","aac3dd54":"markdown","b22acc18":"markdown","3e8ffa96":"markdown","5ca4a818":"markdown","665c08b3":"markdown","0104f03c":"markdown"},"source":{"704f113d":"import gc\nimport os\nfrom pathlib import Path\nimport random\nimport sys\n\nfrom tqdm.notebook import tqdm\nimport numpy as np\nimport pandas as pd\nimport scipy as sp\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom IPython.core.display import display, HTML\n\n# --- plotly ---\nfrom plotly import tools, subplots\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport plotly.io as pio\npio.templates.default = \"plotly_dark\"\n\n# --- models ---\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import KFold\nimport lightgbm as lgb\nimport xgboost as xgb\nimport catboost as cb\n\n# --- setup ---\npd.set_option('max_columns', 50)","d968647c":"# Input data files are available in the \"..\/input\/\" directory.\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    filenames.sort()\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","3efb31c3":"individual_df = pd.read_csv('\/kaggle\/input\/japan-covid19-by-prefecture\/individuals.csv')\nindividual_df = individual_df.rename({\n    '\u65b0No.': 'new_number',\n    '\u65e7No.': 'old_number', \n    '\u78ba\u5b9a\u5e74': 'year', \n    '\u78ba\u5b9a\u6708': 'month', \n    '\u78ba\u5b9a\u65e5': 'day', \n    '\u5e74\u4ee3': 'age', \n    '\u6027\u5225': 'sex',\n    '\u5c45\u4f4f\u57301': 'place1',\n    '\u5c45\u4f4f\u57302': 'place2',\n    '\u5099\u8003': 'remark'}, axis=1)\n# Create \"date\" column, and convert to datetime type\nindividual_df['date'] = individual_df['year'].apply(str) + '\/' + individual_df['month'].apply(str) + '\/' + individual_df['day'].apply(str)\nindividual_df['date'] = pd.to_datetime(individual_df['date'])","5f4718a4":"# Convert sex to English\nindividual_df['sex'] = individual_df['sex'].map({'\u7537': 'male', '\u5973': 'female', '\u4e0d\u660e': 'unkwown'})\n# Convert age to English\nindividual_df['age'] = individual_df['age'].map({\n    '10\u6b73\u672a\u6e80': '0-9',\n    '10\u4ee3': '10-19',\n    '20\u4ee3': '20-29',\n    '30\u4ee3': '30-39',\n    '40\u4ee3': '40-49',\n    '50\u4ee3': '50-59',\n    '60\u4ee3': '60-69',\n    '70\u4ee3': '70-79',\n    '80\u4ee3': '80-89',\n    '90\u4ee3': '90-99',\n    '\u4e0d\u660e': 'unknown',\n})","03ebac48":"japan_latlng = pd.read_csv('\/kaggle\/input\/japan-prefecture-latitude-longitude\/japan_prefecture_latlng.csv')","46446259":"japan_pop_df = pd.read_csv('\/kaggle\/input\/japan-population-by-age-and-sex-in-2020\/japan_population.csv')","98fcef92":"# Re-grouping\ntmp_list = []\nfor i in range(10):\n    if i == 9:\n        tmp = japan_pop_df.iloc[2*i] + japan_pop_df.iloc[2*i+1] + japan_pop_df.iloc[2*i+2]\n    else:\n        tmp = japan_pop_df.iloc[2*i] + japan_pop_df.iloc[2*i+1]\n    if i == 0:\n        tmp['age'] = f'0-9'\n    elif i == 9:\n        tmp['age'] = f'90-'\n    else:\n        tmp['age'] = f'{i}0-{i}9'\n    tmp_list.append(tmp)\npopulation_df = pd.DataFrame(tmp_list)","5e1d8ab3":"population_df","7913a955":"place1_list = individual_df['place1'].unique()\ndata_list = []\n\nfor place1 in tqdm(place1_list):\n    date = individual_df['date'].min()\n    confirmed_total = 0\n    while date <= individual_df['date'].max():\n        confirmed = len(individual_df.query('(place1 == @place1) & (date == @date)'))\n        confirmed_total += confirmed\n        data_list.append({\n            'date': date,\n            'place1': place1,\n            'confirmed': confirmed,\n            'confirmed_total': confirmed_total})\n\n        #print(date)\n        date += pd.Timedelta(1, unit='d')\n    \ntmpdf = pd.DataFrame(data_list)","0b51810a":"tmpdf2 = pd.merge(tmpdf.rename({'place1': 'prefecture'}, axis=1), japan_latlng, on='prefecture')\ntmpdf2['datestr'] = tmpdf2['date'].apply(str)","d6e29059":"fig = px.scatter_geo(\n    tmpdf2, lat='lat', lon='long', color='confirmed', size='confirmed_total', scope='asia',\n    animation_frame='datestr', range_color=[0, 17], hover_name='prefecture_en',\n    center={'lat': 37, 'lon': 136.5})\nfig.update_layout(margin={\"r\": 0,\"t\": 0, \"l\": 0,\"b\": 0})\nfig.layout.geo.projection = go.layout.geo.Projection(scale=3.)\nfig.show()","fe8f19c3":"agedf = individual_df['age'].value_counts().reset_index().rename(\n    {'index': 'age', 'age': 'count'}, axis=1)\n\nfig = px.pie(agedf, values='count', names='age', title='Ratio of age')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","c6675fdf":"fig = px.bar(agedf.sort_values('age', ascending=False), \n             x='count', y='age',\n             title='Confirmed case by age', text='count', orientation='h')\nfig.show()","e8d42e66":"age_df = pd.merge(agedf, population_df)\nage_df['confirmed_rate'] = age_df['count'] \/ age_df['total'] * 10000\n\nfig = px.bar(age_df.sort_values('age', ascending=False), \n             x='confirmed_rate', y='age',\n             title='Confirmed case per 10000 people by age', text='confirmed_rate', orientation='h')\nfig.show()","09777924":"population_df","58a476dd":"fig = px.bar(population_df.sort_values('age', ascending=False), \n             x='total', y='age', \n             title='Population in Japan', text='total', orientation='h')\nfig.show()","3ce5e037":"fig = px.pie(individual_df['sex'].value_counts().reset_index(),\n             values='sex', names='index', title='Ratio of sex')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","d24bcfde":"fig = px.bar(population_df.sum()[['male', 'female']].reset_index().rename({0: 'count', 'index': 'sex'}, axis=1), \n             x='count', y='sex', \n             title='Population in Japan by sex', text='count', orientation='h')\nfig.show()\n","320afeb4":"People around 50 years old have more cases.","f50b8202":"Above figure shows total number confirmed cases.\n\nNow let's check the confirmed case \"ratio\" by population. The bar graph is almost same with above. People around 50 years old have highest rate, but even so it is 1 person per 100,000 people.","c926ac9a":"Note: when we see total population, female is slightly more than male in Japan.","fd8ad90f":"The size shows \"accumulated\" confirmed cases and color shows \"daily\" confirmed cases for each prefecture in Japan.\n\n - Hokkaido (North side): Suddenly spread at the end of Feb. However Hokkaido announced \"emergency declaration\" as quick counter measure and it seems the spread slow down now.\n - Osaka, Hyogo, Aichi (Middle side): These prefectures are 2nd, 3rd largest cities in Japan. Coronavirus spread in beginning of March and it seels the spread slowing down.\n - Around Tokyo (East side): This is most largetst, and high population density city in Japan. The number gradually grows in Tokyo, and sadly the number increases rapidly recently...\n - Other areas: although we can find some cases happen in each prefecturein rural area, its case is not so many so far.\n\nThe nice news is spread is not so fast except Tokyo. We need to take care how the number increases in Tokyo for the time being (written in end of March).","0fa5846c":"# Confirmed cases by sex\n\nMale seems to got slightly more chances, but the difference not so big.","42c2fe1e":"Population information in Japan","98ab47cd":"That's all for visualization. Thank you for reading.\n\nTokyo is one of the most highest population density city in the world, but current Coronavirus spread is not so fast compared to other Europe, US countries so far.<br\/>\nWhy? Of course precise reason is not revealed yet, but there's some article with hypothesis to consider about this fact. Please refer further reading for details.<br\/>\n\n\nFurther reading:\n\n - [Total confirmed cases of COVID-19](https:\/\/ourworldindata.org\/grapher\/covid-confirmed-cases-since-100th-case?time=63)\n - [If I were North American\/West European\/Australian, I will take BCG vaccination now against the novel coronavirus pandemic.](https:\/\/www.jsatonotes.com\/2020\/03\/if-i-were-north-americaneuropeanaustral.html)\n - [Why is Japan still a coronavirus outlier?](https:\/\/www.japantimes.co.jp\/opinion\/2020\/03\/21\/commentary\/japan-commentary\/japan-still-coronavirus-outlier\/#comment-4843977551)","5b3db728":"Latitude Longitude information in Japan","aac3dd54":"# Confirmed cases by Age\n\nLet's check age-confirmed cases situation.","b22acc18":"# Visualize spread of Coronavirus in Japan","3e8ffa96":"Just a side note, this is the population in Japan.","5ca4a818":"# COVID-19: Spread situation by prefecture in Japan\n\nI will zoom into Japan in this kernel, to visualize how Coronavirus spread in each prefecture in Japan.\n\nThe 2 external dataset is used:\n - [Japan COVID-19 by prefecture](https:\/\/www.kaggle.com\/corochann\/japan-covid19-by-prefecture): Individual covid confirmed case's precise information in Japan. Data is from [kaz-ogiwara\/covid19](https:\/\/github.com\/kaz-ogiwara\/covid19\/) \n - [Japan Prefecture Latitude Longitude](https:\/\/www.kaggle.com\/corochann\/japan-prefecture-latitude-longitude): It stores longitude, latitude information of each prefecture in Japan.\n - [Japan population by age and sex in 2020](https:\/\/www.kaggle.com\/corochann\/japan-population-by-age-and-sex-in-2020): Precise population information in Japan.\n\n**Please upvote both kernel & dataset** if you find it useful :)","665c08b3":"COVID-19 data in Japan.","0104f03c":"# Load Data\n\nLoad data and convert Japanese columns into English so that others can understand :)."}}