{"cell_type":{"0490ce9e":"code","ed159df2":"code","51b116e1":"code","96fa42b6":"code","19042057":"code","75430008":"code","8d83a793":"code","20e27252":"code","ddade088":"code","a26d712f":"code","f9087484":"code","909b503d":"code","db62a946":"code","293280ea":"code","cad68739":"code","6404bc68":"code","f23d3574":"code","03987f1e":"code","774023ce":"code","e09c821d":"code","7ec05336":"code","80622894":"markdown"},"source":{"0490ce9e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ed159df2":"df=pd.read_csv(\"\/kaggle\/input\/heights-and-weights\/data.csv\")","51b116e1":"df.head(5)","96fa42b6":"#idnetify if any null values indataset\ndf.isnull().any()","19042057":"#to understand how data are corelated\nimport seaborn as sb\nsb.scatterplot(x=df['Weight'],y=df['Height'])\n","75430008":"#to fins size of the dataset\ndf.shape","8d83a793":"#we will split our x and y variables\nx=df.iloc[:,:1]\ny=df.iloc[:,-1]","20e27252":"print(x.shape)\nprint(y.shape)","ddade088":"#data set is too small but we will try to divide them and use 30% of data for testing purpose\nfrom sklearn.model_selection import train_test_split\n","a26d712f":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)","f9087484":"#printing sizes of data set\nprint(\"Size of x_train is {}\".format(x_train.shape))\nprint(\"Sie of x_test is {}\".format(x_test.shape))\nprint(\"Sie of y_train is {}\".format(y_train.shape))\nprint(\"Sie of y_test is {}\".format(y_test.shape))","909b503d":"# importing Simple linear regression algo\nfrom sklearn.linear_model import LinearRegression","db62a946":"le=LinearRegression()","293280ea":"le.fit(x_train,y_train)","cad68739":"y_pred=le.predict(x_test)","6404bc68":"print(y_pred)","f23d3574":"print(y_test)","03987f1e":"#plotting a grap b\/w observed value and predicted\nimport matplotlib.pyplot as plt\nsb.scatterplot(x=y_test,y=y_pred)\nplt.title(\"Observed Vs Predited\")\nplt.xlabel(\"y_test\")\nplt.ylabel(\"y_pred\")","774023ce":"#to check accuracy we will use r2 value\nfrom sklearn.metrics import r2_score","e09c821d":"print(r2_score(y_test,y_pred))","7ec05336":"# or we can also use score in LinearRegression pkg\nle.score(x_test,y_test)","80622894":"from scatterplot we can see data are so perfectly linear and positive co-related"}}