{"cell_type":{"bff6dcaf":"code","77fd8b31":"code","5f92e2a5":"code","34a2cbaf":"code","47c82e7e":"code","ca426f2e":"code","83a9e8d4":"code","0c267172":"code","1b09f8ce":"code","752e01f8":"code","3c12b18a":"code","84898912":"code","3db3d923":"code","ee784429":"code","4ba33a8b":"code","ae04d5a6":"code","23f3f274":"code","0197c51d":"markdown","7f6cddfd":"markdown","039e82c1":"markdown","f1e26d66":"markdown","fe062d03":"markdown","e5ab9406":"markdown","c145a6a7":"markdown","f7eab13e":"markdown","10878f1d":"markdown","50a83e24":"markdown","f6f00577":"markdown","a04e2be6":"markdown","7fc0199c":"markdown","dd340c87":"markdown","a2a92d1c":"markdown","5e7522a7":"markdown","7115f504":"markdown","25541083":"markdown","bddb9820":"markdown","05f2fa10":"markdown"},"source":{"bff6dcaf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","77fd8b31":"import pandas as pd","5f92e2a5":"pd.DataFrame({'CLASS':[1,2,3,4,5], 'No. of Students':[23,28,45,34,21]})","34a2cbaf":"pd.DataFrame({'Customer_name':['Jyoti','Alice','Bob'],'Feedback':['I like the content','content is ok','Insightful content']})","47c82e7e":"pd.DataFrame({'Customer_name':['Jyoti','Alice','Bob'],'Feedback':['I like the content','content is ok','Insightful content'] }, index=['Notebook1','Notebook2','Notebook3'])","ca426f2e":"pd.DataFrame({'Items':['Milk','Bread','Butter'],'Quantity':[1.5,2,1], 'Amount':[4,5,6]}, index=['Customer A','Customer B','Customer C'])","83a9e8d4":"pd.Series([1,2,3,4,5])","0c267172":"pd.Series([30, 35, 40], index=['2019 Sales', '2020 Sales', '2021 Sales'], name='Notebook A')","1b09f8ce":"quantities = ['4 cups', '1 cup', '2 large', '1 can']\nitems = ['Flour', 'Milk', 'Eggs', 'Spam']\n\ningridients = pd.Series(quantities, index=items, name='Dinner')\ningridients","752e01f8":"student_performance = pd.read_csv(\"..\/input\/students-performance-in-exams\/StudentsPerformance.csv\")","3c12b18a":"student_performance","84898912":"student_performance.head(10)","3db3d923":"student_performance.tail(15)","ee784429":"student_performance.shape","4ba33a8b":"student_performance.index = np.arange(1, (len(student_performance)+1))","ae04d5a6":"\nstudent_performance.head(5)","23f3f274":"student_performance.to_csv(\"Record.csv\")","0197c51d":"\nDataFrame entries are not limited to integers. For example, here's a DataFrame whose values are strings:-","7f6cddfd":"In the above code snippet, **we used one list as an index to the other list**. ","039e82c1":"Read first few lines of data","f1e26d66":"Now, lets  save this DataFrame to disk as a csv file","fe062d03":"Lets check if CSV got read or not . Type the name of dataframe created, here, student_performance, data will be dispalyed.","e5ab9406":"To use pandas we need to **import pandas library**","c145a6a7":"**Reading data files**\nuse the **pd.read_csv()** function to read the data into a DataFrame.\n","f7eab13e":"**Creating DataFrame**\n\nA DataFrame is a table. It contains an array of individual entries, each of which has a certain value. Each entry corresponds to a row (or record) and a column","10878f1d":"**pd.DataFrame()** = constructor to generate DataFrame objects. The syntax for declaring a new one  is similar to a dictionary whose keys are the column names , and whose values are a list of entries. ","50a83e24":"Lets create a DataFrame which is more similar to real world data i.e. contains various datatypes such as integer, string, float etc.","f6f00577":"A Series is, in  layman terms is a single column of a DataFrame. We can assign column values to the Series the same way as before, using an index parameter. However, a Series does not have a column name, it only has one overall name:","a04e2be6":"For reading last few lines from the dataframe use tail.","7fc0199c":"Lets **create** a variable ingredients with a Series that looks like:\n\nFlour     4 cups\nMilk       1 cup\nEggs     2 large\nSpam       1 can\nName: Dinner, dtype: object","dd340c87":"**Series**\nA Series, by contrast, is a sequence of data values. If a DataFrame is a table, a Series is a list.","a2a92d1c":"Let's assign our own values for index","5e7522a7":"Check how many Rows, Columns our CSV file had using shape","7115f504":"This Record.csv file can be found in the output folder, which is in the right side of the window. \n","25541083":"It's helpful to think of a DataFrame as actually being just a bunch of Series **\"glued together\".**","bddb9820":"**Hello Folks**,\n\nIf you are new to pandas, feel free to walk through this notebook. \nYou can  **copy and edit**, if you like the content and feel like practicing.","05f2fa10":" The autogenerated index in pandas starts from 0. But there is in  reality a student having number\/roll no zero. Lets fix that using a simple option in pandas. Lets try reading it again with the index value fixed. Set the index values using np.arange"}}