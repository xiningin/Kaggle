{"cell_type":{"b5dec1dd":"code","1eafd9da":"code","1d51a59a":"code","aa0bde87":"code","e7343588":"code","756d9841":"code","299973cc":"code","24695625":"code","6365d276":"markdown","322be207":"markdown","2d3cd3f4":"markdown","6d367792":"markdown","6bda40df":"markdown"},"source":{"b5dec1dd":"# Install a new library for betting analytics\n# it's so raw at that moment, but all cool stuff should be added later\n\n!pip install git+https:\/\/github.com\/sashml\/betalytics.git","1eafd9da":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport sqlite3\n\nfrom betalytics.soccer.const import BOOKIE, MATCH_INFO \nfrom betalytics.soccer.loader.football_data_loader import load_and_normalize_data\nfrom betalytics.soccer.strategies.all import apply_results\nfrom betalytics.soccer.stats.team_ratings import get_standings_table\n\n%matplotlib inline","1d51a59a":"# Total Matches Over Seasons\ndata = load_and_normalize_data(db_file_name='\/kaggle\/input\/european-football\/database.sqlite', bookie='BET365')\n#data = load_and_normalize_data(db_file_name='database.db', bookie='BET365')","aa0bde87":"# Review how many matches do we have\nseason_gr = data[['LEAGUE', 'SEASON']].groupby(by=['LEAGUE', 'SEASON']).size().unstack(fill_value=0)\nseason_gr","e7343588":"match_results = apply_results(data)\nmatch_results = match_results.sort_values(by='DATE')\nmatch_results.loc[:, [\n    'DATE','RESULT', 'RESULT_ON_HOME', 'RESULT_ON_FAVORITE', 'RESULT_ON_DOG', \n    'ODDS_ON_HOME', 'ODDS_ON_FAVORITE', 'ODDS_ON_DOG',\n    'HOME_ODDS', 'DRAW_ODDS', 'AWAY_ODDS']].tail(5)","756d9841":"rated_team = {}\nseasons = sorted(match_results['SEASON'].unique())\nfor league in match_results['LEAGUE'].unique():\n    for idx in range(1, len(seasons)):\n        prev_season_data = match_results[\n            (match_results['SEASON'] == seasons[idx-1]) & \n            (match_results['LEAGUE'] == league)\n        ]\n        if prev_season_data.empty:\n            continue\n        teams = get_standings_table(prev_season_data, n_teams=5)\n        rated_team.setdefault(league, {}).setdefault(seasons[idx], teams)\nprint('CALCULATED THE MOST RATED TEAMS!')","299973cc":"sorted(rated_team.keys())","24695625":"rated_team['Spain.La Liga Primera Division']['2018\/2019']","6365d276":"## Apply results","322be207":"## Load Data","2d3cd3f4":"## Summary\n\n- It was quick introduction to new BETALYTICS library\n- Demonstrated simple approach to detect the best N-rated teams season over season","6d367792":"## Review results","6bda40df":"Main idea to repeat the same output with new **betalytics** library unde Kaggle environemnt \nOriginal idea took from - https:\/\/colab.research.google.com\/drive\/1_OSGR54nQB96P4cfeQu5a80mZD31BNjd\n"}}