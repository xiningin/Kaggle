{"cell_type":{"521a598e":"code","dbaee035":"code","fcc44651":"code","36641106":"code","e513342b":"code","6434ce1e":"code","efdc39b0":"code","f8c4e34b":"code","91c40f9b":"code","304bd996":"code","93347e55":"code","811d46a7":"code","35336c0b":"code","b3df4ddc":"code","82d2fddd":"code","4f1510dc":"code","84f1489a":"markdown","14e94980":"markdown","e320a95e":"markdown","9615348f":"markdown","32ae6da8":"markdown","ced6b987":"markdown","a9075cad":"markdown","87bf9b7f":"markdown","b4c86af1":"markdown","05b4a68e":"markdown"},"source":{"521a598e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","dbaee035":"df = pd.read_csv(\"..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv\")\ndf.head()","fcc44651":"df.shape","36641106":"df.describe()","e513342b":"df.dtypes","6434ce1e":"df.isnull().sum()","efdc39b0":"df = df.drop([\"CustomerID\"], axis = 1)\ndf.head()","f8c4e34b":"plt.figure(1, figsize = (15,6))\nn = 0\nfor cols in ['Age', 'Annual Income (k$)', 'Spending Score (1-100)']:\n    n += 1\n    plt.subplot(1, 3, n)\n    plt.subplots_adjust(hspace = 0.5, wspace = 0.5)\n    sns.distplot(df[cols], bins = 20)\n    plt.title('Distplot of {}'.format(cols))\nplt.show()    ","91c40f9b":"genders = df.Gender.value_counts()\nsns.set_style(\"darkgrid\")\nplt.figure(figsize=(10,4))\nsns.barplot(x=genders.index, y=genders.values)\nplt.show()","304bd996":"plt.figure(1, figsize = (15,7))\nn = 0\nfor cols in ['Age', 'Annual Income (k$)', 'Spending Score (1-100)']:\n    n += 1\n    plt.subplot(1, 3, n)\n    sns.set(style='whitegrid')\n    plt.subplots_adjust(hspace = 0.5, wspace = 0.5)\n    sns.violinplot(x= cols, y='Gender', data=df)\n    plt.ylabel('Gender' if n==1 else '')\n    plt.title('Violin Plot')\nplt.show()  ","93347e55":"age18_25 = df.Age[(df.Age <= 25) & (df.Age >= 18)]\nage26_35 = df.Age[(df.Age <= 35) & (df.Age >= 26)]\nage36_45 = df.Age[(df.Age <= 45) & (df.Age >= 36)]\nage46_55 = df.Age[(df.Age <= 55) & (df.Age >= 46)]\nage55above = df.Age[df.Age >= 56]\n\nx = [\"18-25\",\"26-35\",\"36-45\",\"46-55\",\"55+\"]\ny = [len(age18_25.values),len(age26_35.values),len(age36_45.values),len(age46_55.values),len(age55above.values)]\n\nplt.figure(figsize=(15,6))\nsns.barplot(x=x, y=y, palette=\"rocket\")\nplt.title(\"Number of Customer and Ages\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"Number of Customer\")\nplt.show()","811d46a7":"ss1_20 = df[\"Spending Score (1-100)\"][(df[\"Spending Score (1-100)\"] >= 1) & (df[\"Spending Score (1-100)\"] <= 20)]\nss21_40 = df[\"Spending Score (1-100)\"][(df[\"Spending Score (1-100)\"] >= 21) & (df[\"Spending Score (1-100)\"] <= 40)]\nss41_60 = df[\"Spending Score (1-100)\"][(df[\"Spending Score (1-100)\"] >= 41) & (df[\"Spending Score (1-100)\"] <= 60)]\nss61_80 = df[\"Spending Score (1-100)\"][(df[\"Spending Score (1-100)\"] >= 61) & (df[\"Spending Score (1-100)\"] <= 80)]\nss81_100 = df[\"Spending Score (1-100)\"][(df[\"Spending Score (1-100)\"] >= 81) & (df[\"Spending Score (1-100)\"] <= 100)]\n\nssx = [\"1-20\", \"21-40\", \"41-60\", \"61-80\", \"81-100\"]\nssy = [len(ss1_20.values), len(ss21_40.values), len(ss41_60.values), len(ss61_80.values), len(ss81_100.values)]\n\nplt.figure(figsize=(15,6))\nsns.barplot(x=ssx, y=ssy, palette=\"nipy_spectral_r\")\nplt.title(\"Spending Scores\")\nplt.xlabel(\"Score\")\nplt.ylabel(\"Number of Customer Having the Score\")\nplt.show()","35336c0b":"ai0_30 = df[\"Annual Income (k$)\"][(df[\"Annual Income (k$)\"] >= 0) & (df[\"Annual Income (k$)\"] <= 30)]\nai31_60 = df[\"Annual Income (k$)\"][(df[\"Annual Income (k$)\"] >= 31) & (df[\"Annual Income (k$)\"] <= 60)]\nai61_90 = df[\"Annual Income (k$)\"][(df[\"Annual Income (k$)\"] >= 61) & (df[\"Annual Income (k$)\"] <= 90)]\nai91_120 = df[\"Annual Income (k$)\"][(df[\"Annual Income (k$)\"] >= 91) & (df[\"Annual Income (k$)\"] <= 120)]\nai121_150 = df[\"Annual Income (k$)\"][(df[\"Annual Income (k$)\"] >= 121) & (df[\"Annual Income (k$)\"] <= 150)]\n\naix = [\"$ 0 - 30,000\", \"$ 30,001 - 60,000\", \"$ 60,001 - 90,000\", \"$ 90,001 - 120,000\", \"$ 120,001 - 150,000\"]\naiy = [len(ai0_30.values), len(ai31_60.values), len(ai61_90.values), len(ai91_120.values), len(ai121_150.values)]\n\nplt.figure(figsize=(15,6))\nsns.barplot(x=aix, y=aiy, palette=\"Set2\")\nplt.title(\"Annual Incomes\")\nplt.xlabel(\"Income\")\nplt.ylabel(\"Number of Customer\")\nplt.show()","b3df4ddc":"sns.relplot(x='Annual Income (k$)', y='Spending Score (1-100)', data=df)","82d2fddd":"from sklearn.cluster import KMeans\nwcss = []\nfor k in range(1,11):\n    kmeans = KMeans(n_clusters=k, init=\"k-means++\")\n    kmeans.fit(df.iloc[:,1:])\n    wcss.append(kmeans.inertia_)\nplt.figure(figsize=(12,6))    \nplt.grid()\nplt.plot(range(1,11),wcss, linewidth=2, color=\"red\", marker =\"8\")\nplt.xlabel(\"K Value\")\nplt.xticks(np.arange(1,11,1))\nplt.ylabel(\"WCSS\")","4f1510dc":"km = KMeans(n_clusters=5)\nclusters = km.fit_predict(df.iloc[:,1:])\ndf[\"label\"] = clusters\n\nfrom mpl_toolkits.mplot3d import Axes3D\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n \nfig = plt.figure(figsize=(20,10))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(df.Age[df.label == 0], df[\"Annual Income (k$)\"][df.label == 0], df[\"Spending Score (1-100)\"][df.label == 0], c='blue', s=60)\nax.scatter(df.Age[df.label == 1], df[\"Annual Income (k$)\"][df.label == 1], df[\"Spending Score (1-100)\"][df.label == 1], c='red', s=60)\nax.scatter(df.Age[df.label == 2], df[\"Annual Income (k$)\"][df.label == 2], df[\"Spending Score (1-100)\"][df.label == 2], c='green', s=60)\nax.scatter(df.Age[df.label == 3], df[\"Annual Income (k$)\"][df.label == 3], df[\"Spending Score (1-100)\"][df.label == 3], c='orange', s=60)\nax.scatter(df.Age[df.label == 4], df[\"Annual Income (k$)\"][df.label == 4], df[\"Spending Score (1-100)\"][df.label == 4], c='purple', s=60)\nax.view_init(30, 185)\nplt.xlabel(\"Age\")\nplt.ylabel(\"Annual Income (k$)\")\nax.set_zlabel('Spending Score (1-100)')\nplt.show()","84f1489a":"# **Import libraries**","14e94980":"![](https:\/\/www.slideteam.net\/media\/catalog\/product\/cache\/960x720\/p\/r\/product_segmentation_markets_and_evaluation_powerpoint_presentation_slides_Slide03.jpg)","e320a95e":"# **Introduction**\n\nCustomer Segmentation is the subdivision of a market into discrete customer groups that share similar characteristics. Customer Segmentation can be a powerful means to identify unsatisfied customer needs. Using the above data companies can then outperform the competition by developing uniquely appealing products and services.","9615348f":"Next I plotted Within Cluster Sum Of Squares (WCSS) against the the number of clusters (K Value) to figure out the optimal number of clusters value. WCSS measures sum of distances of observations from their cluster centroids which is given by the below formula.\n\n![](https:\/\/miro.medium.com\/max\/301\/0*_3RAyFi3C2zJ-ShA.png)\n\nwhere Yi is centroid for observation Xi. The main goal is to maximize number of clusters and in limiting case each data point becomes its own cluster centroid.","32ae6da8":"**The Elbow Method**\n \nCalculate the Within Cluster Sum of Squared Errors (WSS) for different values of k, and choose the k for which WSS first starts to diminish. In the plot of WSS-versus k, this is visible as an elbow.\n\nThe optimal K value is found to be 5 using the elbow method.\n\nFinally I made a 3D plot to visualize the spending score of the customers with their annual income. The data points are separated into 5 classes which are represented in different colours as shown in the 3D plot","ced6b987":"# **Conclusion**\nIn conclusion, customer segmentation is really necessary for knowing what characteristics that exist on each customer. The notebook has shown to you how to implement it using Python. I hope that this notebook will be useful to you, and you can implement on your case.","a9075cad":"**Advantages of Customer Segmentation**\n\n\n1. Determine appropriate product pricing.\n1. Develop customized marketing campaigns.\n1. Design an optimal distribution strategy.\n1. Choose specific product features for deployment.\n1. Prioritize new product development efforts.\n ","87bf9b7f":"# **Data Processing**","b4c86af1":"# **KMeans Implementation**","05b4a68e":"# **Data Visualization**"}}