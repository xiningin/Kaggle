{"cell_type":{"8bcbd2d0":"code","dfd846eb":"code","dcb00f89":"code","4d13fc28":"code","f95821f7":"code","53705813":"code","7a846a8f":"code","9af03833":"code","b2d10c4d":"code","9d1af511":"code","b0295a81":"code","967d35d5":"code","1135bbfb":"code","0c213142":"code","f1bf4945":"markdown","3cde5a1c":"markdown","19869a05":"markdown","de2005bc":"markdown","14457846":"markdown","6af15f20":"markdown","bb0aa20e":"markdown","e0bf710e":"markdown","7c945fdf":"markdown"},"source":{"8bcbd2d0":"# You can use the command below to install folium\n# !pip install folium\n# or\n# !conda install -c conda-forge folium --yes \n\n# Note: this notebook was copied and that is solely because the original creator had the dataset already imported and I was too lazy to do that, \n#     all code written here are by me and you can check the original notebook for verification","dfd846eb":"# for visualizations\nimport numpy as np\nimport pandas as pd\nimport folium","dcb00f89":"# define the world map\nworld_map = folium.Map()\n\n# display world map\nworld_map","4d13fc28":"# define Mexico's geolocation coordinates\nmexico_latitude = 23.6345 \nmexico_longitude = -102.5528\n\n# define the world map centered around Mexico with a zoom level set to 4\nmexico_map = folium.Map(location=[mexico_latitude, mexico_longitude], zoom_start=4)\n\n# display Mexico's map\nmexico_map","f95821f7":"# define Mexico's geolocation coordinates\nmexico_latitude = 23.6345 \nmexico_longitude = -102.5528\n\n# define the world map centered around Mexico with a higher zoom level\nmexico_map = folium.Map(location=[mexico_latitude, mexico_longitude], zoom_start=6, tiles='Stamen Terrain')\n\n# display mexico map\nmexico_map","53705813":"# reading the dataset\ndata = pd.read_csv('..\/input\/Police_Department_Incidents_-_Previous_Year__2016_.csv')","7a846a8f":"# getting the shape of our dataset\ndata.shape","9af03833":"# get the first 100 crimes in the df_incidents dataframe\nlimit = 100\ndf_incidents = data.iloc[0:limit, :]","b2d10c4d":"# San Francisco latitude and longitude values\nlatitude = 37.77\nlongitude = -122.42","9d1af511":"# create map and display it\nsanfran_map = folium.Map(location=[latitude, longitude], zoom_start=12)\n\n# display the map of San Francisco\nsanfran_map","b0295a81":"# instantiate a feature group for the incidents in the dataframe\nincidents = folium.map.FeatureGroup()\n\n# loop through the 100 crimes and add each to the incidents feature group\nfor lat, lng, in zip(df_incidents.Y, df_incidents.X):\n    incidents.add_child(\n        folium.CircleMarker(\n            [lat, lng],\n            radius=5, # define how big you want the circle markers to be\n            color='yellow',\n            fill=True,\n            fill_color='blue',\n            fill_opacity=0.6\n        )\n    )\n\n# add incidents to map\nsanfran_map.add_child(incidents)","967d35d5":"# instantiate a feature group for the incidents in the dataframe\nincidents = folium.map.FeatureGroup()\n\n# loop through the 100 crimes and add each to the incidents feature group\nfor lat, lng, in zip(df_incidents.Y, df_incidents.X):\n    incidents.add_child(\n        folium.CircleMarker(\n            [lat, lng],\n            radius=5, # define how big you want the circle markers to be\n            color='yellow',\n            fill=True,\n            fill_color='blue',\n            fill_opacity=0.6\n        )\n    )\n\n# add pop-up text to each marker on the map\nlatitudes = list(df_incidents.Y)\nlongitudes = list(df_incidents.X)\nlabels = list(df_incidents.Category)\n\nfor lat, lng, label in zip(latitudes, longitudes, labels):\n    folium.Marker([lat, lng], popup=label).add_to(sanfran_map)    \n    \n# add incidents to map\nsanfran_map.add_child(incidents)","1135bbfb":"# create map and display it\nsanfran_map = folium.Map(location=[latitude, longitude], zoom_start=12)\n\n# loop through the 100 crimes and add each to the map\nfor lat, lng, label in zip(df_incidents.Y, df_incidents.X, df_incidents.Category):\n    folium.CircleMarker(\n        [lat, lng],\n        radius=7, # define how big you want the circle markers to be\n        color='yellow',\n        fill=True,\n        popup=label,\n        fill_color='blue',\n        fill_opacity=0.6\n    ).add_to(sanfran_map)\n\n# show map\nsanfran_map","0c213142":"from folium import plugins\n\n# let's start again with a clean copy of the map of San Francisco\nsanfran_map = folium.Map(location = [latitude, longitude], zoom_start = 12)\n\n# instantiate a mark cluster object for the incidents in the dataframe\nincidents = plugins.MarkerCluster().add_to(sanfran_map)\n\n# loop through the dataframe and add each data point to the mark cluster\nfor lat, lng, label, in zip(df_incidents.Y, df_incidents.X, df_incidents.Category):\n    folium.Marker(\n        location=[lat, lng],\n        icon=None,\n        popup=label,\n    ).add_to(incidents)\n\n# display map\nsanfran_map","f1bf4945":"**CREATE WORLD MAP**","3cde5a1c":"You can also add some pop-up text that would get displayed when you click on a marker. Let's make each marker display the category of the crime when click.","19869a05":"Another way to ease of the congestion is to group the markers into different clusters. Each cluster is then represented by the number of crimes in each neighborhood. These clusters can be thought of as pockets of San Francisco which you can then analyze separately.\n\nTo implement this, we start off by instantiating a MarkerCluster object and adding all the data points in the dataframe to this object.","de2005bc":"You can also add the pop-up messages to the initial yellow markers if these markers seem to make the map congested for you.","14457846":"Now let's superimpose the locations of the crimes onto the map. The way to do that in **Folium** is to create a *feature group* with its own features and style and then add it to the sanfran_map.","6af15f20":"let's visualize where these crimes took place in the city of San Francisco, we'd also use a zoom level of 12","bb0aa20e":"****CREATE MAP OF MEXICO: zoom level = 4****","e0bf710e":"**Create a Stamen Terrain map for Mexico: zoom level = 6**","7c945fdf":"**Maps with Markers**"}}