{"cell_type":{"b28e0095":"code","5abd5e59":"code","3c9659d5":"code","8cd5dcb0":"code","f658b4f5":"code","50258640":"code","592071de":"code","09772762":"code","27449bfd":"code","804a6a0d":"code","73785812":"code","e64e69ba":"code","76a415cf":"code","29b5fcc9":"markdown","d721e89d":"markdown","e5f6c709":"markdown","9a43751d":"markdown"},"source":{"b28e0095":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\nimport seaborn as sns\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\nfrom mpl_toolkits.basemap import Basemap\nimport folium\nimport folium.plugins\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","5abd5e59":"data=pd.read_csv(\"..\/input\/globalterrorismdb_0617dist.csv\",encoding='ISO-8859-1')\n\ndata.info()\n\n","3c9659d5":"data.columns\n","8cd5dcb0":"data.corr()","f658b4f5":"#correlation map\n\nf,ax = plt.subplots(figsize=(25, 25))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()\n\n","50258640":"data.head(5)","592071de":"plt.figure(figsize=(15,15))\ndata.iday.plot(kind=\"line\",color=\"r\",label=\"Days\",linewidth=0.5,alpha=0.8, grid=True,linestyle=\":\")\ndata.imonth.plot(color=\"g\",label=\"Month\",linewidth=0.5,alpha=0.8,grid=True,linestyle=\"-.\")\n#plt.xticks( [0,88888])\n\nplt.legend(loc=\"upper right\")\nplt.xlabel(\"x axis\")\nplt.ylabel(\"y axis\")\nplt.title(\"\")\nplt.show()\n","09772762":"\ndata.plot(kind='scatter',x='region',y='targtype1', alpha = 0.5,color = 'magenta')\nplt.xlabel('region')\nplt.ylabel('target type id')\nplt.title('Region Target Type id Scatter Plot')\nplt.show()","27449bfd":"data.head()","804a6a0d":"\ndata.iyear.plot(kind='hist', bins=50,figsize=(5,8))\nplt.show()\ndata.country.plot(kind='hist', bins=50,figsize=(5,8))\nplt.show()\ndata.attacktype1.plot(kind='hist', bins=50,figsize=(5,8))\n","73785812":"data_fr=data['iyear']\ndata[(data_fr>1990) & (data['city']==\"Istanbul\")& (data['attacktype1']==3)]","e64e69ba":"m3 = Basemap(projection='mill',llcrnrlat=15,urcrnrlat=60, llcrnrlon=-20,urcrnrlon=60,lat_ts=20,resolution='c',lat_0=True,lat_1=True)\ndata['casualities']=data['nkill']+data['nwound']\nlat_100=list(data[data['casualities']>=150].latitude)\nlong_100=list(data[data['casualities']>=150].longitude)\nx_100,y_100=m3(long_100,lat_100)\nm3.plot(x_100, y_100,'go',markersize=10,color = 'r')\nlat_=list(data[data['casualities']<150].latitude)\nlong_=list(data[data['casualities']<150].longitude)\nx_,y_=m3(long_,lat_)\nm3.plot(x_, y_,'go',markersize=2,color = 'yellow',alpha=0.1)\nm3.drawcoastlines()\nm3.drawcountries()\nm3.fillcontinents(lake_color='blue')\nm3.drawmapboundary(fill_color='aqua')\nfig=plt.gcf()\nfig.set_size_inches(10,6)\nplt.title('Turkey  Terrorist Attacks')\nplt.legend(loc='lower left',handles=[mpatches.Patch(color='yellow', label = \"< 150 casualities\"),\n                    mpatches.Patch(color='red',label='> 150 casualities')])\nplt.show()","76a415cf":"for index,value in data[['region']].iterrows():\n    print(index,\" : \",value)","29b5fcc9":"**Head()**\n> \nLists the first 5 samples of the data","d721e89d":"**Histogram**\n","e5f6c709":"**Line plot**\n> \nCompared to according to the month and the days","9a43751d":"**Scatter Plot**\n> Shows  the relationship between region and targettype_id"}}