{"cell_type":{"a6d7c1fa":"code","891c7674":"code","26bc9c5c":"code","5244f3e0":"code","8dd51480":"code","dd1b16b4":"code","9562663e":"code","269c1fcc":"code","f74b7f72":"code","67aa90d5":"code","146ee0c2":"code","ee577ff3":"code","0663f2cf":"code","58242a37":"code","9ddc4d2c":"code","bf6975f7":"code","b831a6d8":"code","72222179":"code","63be7d83":"code","bb72a881":"code","b3b08632":"code","9ad10c08":"code","72bf4dc2":"code","54f256b0":"code","1852fe79":"code","9a8a2e47":"code","326fbc36":"code","e51437e4":"code","90d0facd":"code","e853d60d":"code","f4b75fba":"code","58d4b2be":"code","0f3fc752":"code","36b19df1":"code","7a95bcd9":"code","0bf87cb0":"code","f7fd0dee":"code","b7982ff2":"code","57a18f87":"code","dec59c06":"code","d7adbb95":"code","57a5b87c":"code","f29bd7cb":"code","76b08075":"code","cbcfe2ca":"code","57f3e758":"code","2499d7e9":"code","ad3c9f4f":"code","9735be8d":"code","0a4be2f9":"code","436ba1bc":"code","ed2842d4":"code","955d2c00":"code","96ac79cf":"code","ec201931":"code","021c962f":"markdown","0747bcf3":"markdown","d7cbbf45":"markdown"},"source":{"a6d7c1fa":"import numpy as np \nimport pandas as pd \nfrom matplotlib import pyplot\nimport seaborn as sns; sns.set()\n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport matplotlib.pylab as pylab\nimport seaborn as sns\nimport missingno as msno\n\n\n\n%matplotlib inline\nmpl.style.use( 'ggplot' )\nplt.style.use('fivethirtyeight')\nsns.set(context=\"notebook\", palette=\"dark\", style = 'whitegrid' , color_codes=True)","891c7674":"!pip install missingno","26bc9c5c":"df_total = pd.read_csv(\"..\/input\/coronavirus\/time_series_covid19_confirmed_global.csv\")\ndf_total.head()","5244f3e0":"countries=['US', 'Canada', 'Germany']\ny=df_total.loc[df_total['Country\/Region']=='Italy'].iloc[0,4:]\ns = pd.DataFrame({'Italy':y})\nfor c in countries:    \n    #pyplot.plot(range(y.shape[0]),y,'r--')\n    s[c] = df_total.loc[df_total['Country\/Region']==c].iloc[0,4:]\n#pyplot.plot(range(y.shape[0]),y,'g-')\npyplot.plot(range(y.shape[0]), s)\nplt.gca().legend(('Italy', 'US', 'Canada', 'Germany'))","8dd51480":"for r in df_total['Country\/Region'].unique():\n    if r != 'China':\n        pyplot.plot(range(len(df_total.columns)-4), df_total.loc[df_total['Country\/Region']==r].iloc[0,4:],label=r)\n        #pyplot.legend()","dd1b16b4":"df_recovered=  pd.read_csv(\"..\/input\/coronavirus\/time_series_covid19_recovered_global.csv\")\ndf_recovered.head()","9562663e":"df_deaths=  pd.read_csv(\"..\/input\/coronavirus\/time_series_covid19_deaths_global.csv\")\ndf_deaths.head()","269c1fcc":"df_active = pd.DataFrame()","f74b7f72":"df_active1= df_total.loc[:,'1\/22\/20': ].subtract(df_deaths.loc[:,'1\/22\/20': ], axis = 1) \ndf_active = df_active1.loc[:,'1\/22\/20': ].subtract(df_recovered.loc[:,'1\/22\/20': ], axis = 1)","67aa90d5":"df_active.head()","146ee0c2":"df_active.insert(0, 'Province\/State', df_total['Province\/State'])\ndf_active.insert(1, 'Country\/Region', df_total['Country\/Region'])\ndf_active.insert(2, 'Lat', df_total['Lat'])\ndf_active.insert(3, 'Long', df_total['Long'])","ee577ff3":"df_active.head() #Calculating active cases, as we have numbers of confirmed, recovered and death","0663f2cf":"df_cleaned =  pd.DataFrame()","58242a37":"df_cleaned.insert(0, 'Province\/State', df_total['Province\/State'])\ndf_cleaned.insert(1, 'Country\/Region', df_total['Country\/Region'])\ndf_cleaned.insert(2, 'Lat', df_total['Lat'])\ndf_cleaned.insert(3, 'Long', df_total['Long'])","9ddc4d2c":"df_cleaned.insert(4, 'Confirmed', df_total['4\/10\/20'])\ndf_cleaned.insert(5, 'Active', df_active['4\/10\/20'])\ndf_cleaned.insert(6, 'Recovered', df_recovered['4\/10\/20'])\ndf_cleaned.insert(7, 'Deaths', df_deaths['4\/10\/20'])","bf6975f7":"df_cleaned.head() ##A clearer version of cases sorted by province","b831a6d8":"df = df_cleaned.groupby(['Country\/Region']).sum().reset_index()\n#df = df.reset_index(drop= True)","72222179":"df   ##With different countries","63be7d83":"df_final = df.sort_values(by='Confirmed', ascending=False).reset_index(drop=True)","bb72a881":"df_final.head(10) ##Top 10 Countries with highest number of cases. Worked on this small dataset","b3b08632":"df_final.style.background_gradient(cmap='viridis', low=.5, high=0)","9ad10c08":"def magnify():\n    return [dict(selector=\"th\",\n                 props=[(\"font-size\", \"4pt\")]),\n            dict(selector=\"td\",\n                 props=[('padding', \"0em 0em\")]),\n            dict(selector=\"th:hover\",\n                 props=[(\"font-size\", \"12pt\")]),\n            dict(selector=\"tr:hover td:hover\",\n                 props=[('max-width', '200px'),\n                        ('font-size', '12pt')])\n]","72bf4dc2":"cmap = cmap=sns.diverging_palette(10, 250, as_cmap=True)\nbigdf = df_final\n\nbigdf.style.background_gradient(cmap, axis=1)\\\n    .set_properties(**{'max-width': '80px', 'font-size': '1pt'})\\\n    .set_caption(\"Hover to magnify\")\\\n    .set_precision(2)\\\n    .set_table_styles(magnify())","54f256b0":"df_final.head(10)","1852fe79":"import plotly as py\n#py.init_notebook_mode(connected=True)\nimport plotly.graph_objects as go\nimport pandas as pd\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)  ","9a8a2e47":"!pip install plotly","326fbc36":"res = [*(range(len(df_total.columns)-4))] ","e51437e4":"total_sum_column = pd.DataFrame(columns=['Confirmed', 'Recovered'])","90d0facd":"total_sum_column['Confirmed'] =  df_total.sum(axis=0)\ntotal_sum_column['Recovered'] =  df_recovered.sum(axis=0)","e853d60d":"total_sum_column = total_sum_column[2:]","f4b75fba":"total_sum_column","58d4b2be":"import plotly.graph_objects as go","0f3fc752":"fig = go.Figure()\nfig.add_trace(go.Scatter(\n                x = res,\n                y = total_sum_column['Confirmed'],\n                name=\"Confirmed\"))\n\nfig.add_trace(go.Scatter(\n                x = res,\n                y=total_sum_column['Recovered'],\n                name=\"Recovered\"))\n                \n\nfig.update_layout(title_text='Time Series with Rangeslider varying with number of days starting from 22 Jan,2020',\n                  xaxis_rangeslider_visible=True)\npy.offline.iplot(fig)","36b19df1":"import plotly.offline as py","7a95bcd9":"Countries = np.unique(df_final['Country\/Region'])","0bf87cb0":"cases = []\nfor country in Countries:\n    cases.append(df_final[df_final['Country\/Region'] == country]['Confirmed'].sum())","f7fd0dee":"data = [ dict(\n        type = 'choropleth',\n        locations = Countries,\n        z = cases,\n        locationmode = 'country names',\n        text = Countries,\n        marker = dict(\n            line = dict(color = 'rgb(0,0,0)', width = 1)),\n            colorbar = dict(autotick = True, tickprefix = '', \n            title = 'World map')\n            )\n       ]","b7982ff2":"layout = dict(\n    title = 'COVID-19 Confirmed Cases with countries',\n    geo = dict(\n        showframe = False,\n        showocean = True,\n        oceancolor = 'rgb(3, 186, 252)',\n        projection = dict(\n        type = 'orthographic',\n            rotation = dict(\n                    lon = 60,\n                    lat = 10),\n        ),\n        lonaxis =  dict(\n                showgrid = True,\n                gridcolor = 'rgb(102, 102, 102)'\n            ),\n        lataxis = dict(\n                showgrid = True,\n                gridcolor = 'rgb(102, 102, 102)'\n                )\n            ),\n        )","57a18f87":"fig = dict(data=data, layout=layout)","dec59c06":"py.iplot(fig, validate=False, filename='worldmap')","d7adbb95":"df1=df_final[['Country\/Region','Confirmed']]","57a5b87c":"df1","f29bd7cb":"Temp = pd.read_csv('..\/input\/temperature\/GlobalLandTemperaturesByCountry.csv')##Average land surface temperatures from wikipedia","76b08075":"Temp.head()","cbcfe2ca":"Temp_clean = Temp[~Temp['Country'].isin(\n    ['Denmark', 'Antarctica', 'France', 'Europe', 'Netherlands',\n     'United Kingdom', 'Africa', 'South America'])]\n\nTemp_clean = Temp_clean.replace(\n   ['Denmark (Europe)', 'France (Europe)', 'Netherlands (Europe)', 'United Kingdom (Europe)'],\n   ['Denmark', 'France', 'Netherlands', 'United Kingdom'])","57f3e758":"countries = np.unique(Temp_clean['Country'])\nAvg_temp = []\nfor country in countries:\n    Avg_temp.append(Temp_clean[Temp_clean['Country'] == country]['AverageTemperature'].mean())","2499d7e9":"data = [ dict(\n        type = 'choropleth',\n        locations = countries,\n        z = Avg_temp,\n        locationmode = 'country names',\n        text = countries,\n        marker = dict(\n            line = dict(color = 'rgb(0,0,0)', width = 1)),\n            colorbar = dict(autotick = True, tickprefix = '', \n            title = 'Average Temp')\n            )\n       ]\n","ad3c9f4f":"layout = dict(\n    title = 'Average Land Temperatures of Different Countries',\n    geo = dict(\n        showframe = False,\n        showocean = True,\n        oceancolor = 'rgb(3, 198, 252)',\n        projection = dict(\n        type = 'orthographic',\n            rotation = dict(\n                    lon = 60,\n                    lat = 10),\n        ),\n        lonaxis =  dict(\n                showgrid = True,\n                gridcolor = 'rgb(102, 102, 102)'\n            ),\n        lataxis = dict(\n                showgrid = True,\n                gridcolor = 'rgb(102, 102, 102)'\n                )\n            ),\n        )","9735be8d":"fig = dict(data=data, layout=layout)\npy.iplot(fig, validate=False, filename='worldmap')","0a4be2f9":"#List of average temperatures in April, to be included as new column \ncountry = ['US', 'Spian', 'Italy','France', 'Germany', 'China','United Kingdom','Iran', 'Turkey', 'Belgium']\ndegree = [12.1, 12.9, 12.2, 11.4 , 10,  14.8, 8.7, 17,11.1, 9.8]","436ba1bc":"Visual = df_final.head(10)","ed2842d4":"Visual['Avg Temp'] = degree","955d2c00":"Visual","96ac79cf":"sns.jointplot(x=\"Avg Temp\", y=\"Confirmed\", data=Visual, size=4.5)","ec201931":"sns.FacetGrid(Visual, hue=\"Country\/Region\", size=5) \\\n   .map(plt.scatter, \"Avg Temp\", \"Confirmed\") \\\n   .add_legend()","021c962f":"## Analysis","0747bcf3":"From the range slider graph, it is observed that number of recovered cases increased steeply after 60 days, where as confirmed cases increased steeply after 50 days. <br>\nThe spread of the virus is much less in tropical regions as compared to the temperate zones of the earth. China comes under sub-tropical zone whereas USA comes under temperate zone where the virus is spreading the maximum. <br>\nTop 10 highest cases were plotted with the average temperature of the respective countries. It was observed that countries with average temperature from 12-14 degree celsius recorded highest number of COVID-19 cases. The spread of the virus is maximum in these countries. As the temperature decreases below 12, spread of the virus decreases. The same applies when the average temperature of the surface increases after 14 degree celsius.","d7cbbf45":"**Sources** <br>\nhttps:\/\/www.kaggle.com\/amelinvladislav\/map-of-temperatures-and-analysis-of-global-warming<br>\nhttps:\/\/jakevdp.github.io\/PythonDataScienceHandbook\/04.13-geographic-data-with-basemap.html<br>\nhttps:\/\/www.kaggle.com\/sixteenpython\/covid-19-temperature-air-travel-transmission\/data<br>\nhttps:\/\/en.wikipedia.org\/wiki\/List_of_cities_by_average_temperature"}}