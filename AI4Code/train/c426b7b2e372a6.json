{"cell_type":{"d757a9a1":"code","6759863a":"code","bd457bd0":"code","e05274dd":"code","c1faf51b":"code","ebc00ecc":"code","f4c6c86b":"code","d31456a5":"code","55e7a11e":"code","b0642639":"code","cd63d211":"code","684bb500":"code","8d891aa9":"code","c0d768a1":"code","8a27a4c3":"code","0bcb0303":"code","c2a13189":"code","89def18c":"markdown","2e7e6b1e":"markdown","920f2037":"markdown","39966e99":"markdown","aa1668bd":"markdown","c516a38c":"markdown","18fcc65f":"markdown","ffd8868f":"markdown","864716a2":"markdown","b655de22":"markdown","1aadb965":"markdown"},"source":{"d757a9a1":"\n# pip install surprise - visual studio buildtools required for pycharm\nimport pandas as pd\nimport numpy as np\nfrom surprise import Reader, SVD, Dataset, accuracy\nfrom surprise.model_selection import GridSearchCV, train_test_split, cross_validate\npd.set_option('display.max_columns', None)","6759863a":"movie = pd.read_csv('..\/input\/movie-lens-dataset\/movies.csv')\nrating = pd.read_csv('..\/input\/movie-lens-dataset\/ratings.csv')","bd457bd0":"df = movie.merge(rating, how=\"left\", on=\"movieId\")\ndf.head()","e05274dd":"movie_ids = [130219, 356, 4422, 541]\nmovies = [\"The Dark Knight (2011)\",\n          \"Cries and Whispers (Viskningar och rop) (1972)\",\n          \"Forrest Gump (1994)\",\n          \"Blade Runner (1982)\"]","c1faf51b":"\nsample_df = df[df.movieId.isin(movie_ids)]\nsample_df.shape\nsample_df.head()","ebc00ecc":"\nuser_movie_df = sample_df.pivot_table(index=[\"userId\"], columns=[\"title\"], values=\"rating\")\nuser_movie_df.head()","f4c6c86b":"reader = Reader(rating_scale=(1, 5))\ndata = Dataset.load_from_df(sample_df[['userId', 'movieId', 'rating']], reader)\ntype(data)","d31456a5":"trainset, testset = train_test_split(data, test_size=.25)","55e7a11e":"svd_model = SVD()\nsvd_model.fit(trainset)\n","b0642639":"predictions = svd_model.test(testset)","cd63d211":"accuracy.rmse(predictions)","684bb500":"param_grid = {'n_epochs': np.arange(1,10,5), 'lr_all': np.arange(0.00,0.005,5)}","8d891aa9":"#param_grid = {'n_epochs': [5, 10], 'lr_all': [0.002, 0.005]}","c0d768a1":"gs = GridSearchCV(SVD,\n                  param_grid,\n                  measures=['rmse', 'mae'],\n                  cv=3,\n                  n_jobs=-1,\n                  joblib_verbose=True)\n","8a27a4c3":"gs.fit(data)\ngs.best_score['rmse']\n","0bcb0303":"gs.best_params['rmse']","c2a13189":"svd_model = SVD(**gs.best_params['rmse'])\n\ndata = data.build_full_trainset()\nsvd_model.fit(data)\n\nsvd_model.predict(uid=1.0, iid=541, verbose=True)\nsvd_model.predict(uid=1.0, iid=356, verbose=True)","89def18c":"# Model tuning\n","2e7e6b1e":"Model-based collaborative filtering is used to forecast and calculate how a customer gives a rating to each product.  These system algorithms are based on machine learning algorithms and they predict unrated products by customer ratings. These algorithms are further divided into different subsets such as Matrix factorization-based algorithms, deep learning methods etc.\n","920f2037":"Now, dataset is divided into trainset and testset. ","39966e99":"The necessary modules are imported below.","aa1668bd":"Here with this model,  points of userId number 541 and 356 are predicted.","c516a38c":"We fit the model to trainset and then predictions are made for testset.","18fcc65f":"Dataset module prepares the dataset for further steps.","ffd8868f":"To understand the model better we will narrow our dataset down.","864716a2":"Here we create user-movie matrix based on ratings.","b655de22":"# Final model and results","1aadb965":"# Model Based Collaborative Filter"}}