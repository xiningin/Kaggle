{"cell_type":{"3e0a5a25":"code","c7c61523":"code","f66d1751":"code","a6f0882d":"code","d58c3fa0":"code","14232db4":"code","b9e299ab":"code","5a90a92e":"code","e63ba4fb":"code","6f0e3381":"code","786e0b4b":"code","1a0f253a":"code","cd7ae486":"code","1158d0a4":"code","19ec60c1":"markdown","e81389a4":"markdown","ffe4bc12":"markdown","ffd3a17d":"markdown","dddfe721":"markdown","97382b6a":"markdown","9049be44":"markdown","7cf15f4b":"markdown"},"source":{"3e0a5a25":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nfrom sklearn import preprocessing\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\n\nfrom sklearn.ensemble import ExtraTreesClassifier","c7c61523":"dataset = pd.read_csv('..\/input\/adult.csv')\ndisplay(dataset.head(5))","f66d1751":"dataset.describe()","a6f0882d":"display(dataset.info())","d58c3fa0":"print(\"Work class categories \\n\")\nprint(dataset['workclass'].unique())","14232db4":"print(\"Education categories\")\neducation_dataset = dataset[['education','education.num']]\neducation_dataset = education_dataset.drop_duplicates()\n\ndata = {'education': education_dataset['education'], 'education.num': education_dataset['education.num']}\n\neducation_dataset = pd.DataFrame(data=data)\neducation_dataset['education'].astype('category')\neducation_dataset.index = education_dataset['education.num']\nprint(education_dataset[['education']].sort_values('education.num'))","b9e299ab":"print('marital status')\nprint(dataset['marital.status'].unique())\nprint(' \\n occupation')\nprint(dataset['occupation'].unique())\nprint(' \\n relationship')\nprint(dataset['relationship'].unique())\nprint(' \\n race')\nprint(dataset['race'].unique())\nprint(' \\n native.country')\nprint(dataset['native.country'].unique())\n","5a90a92e":"#Replacing ? for a nan value to drop every line with it\ndataset = dataset.replace({'?': np.nan})\ndataset = dataset.dropna()\ndataset = dataset.drop(['fnlwgt', 'capital.gain','capital.loss'], axis=1)","e63ba4fb":"ax = dataset['sex'].value_counts().plot(kind=\"bar\")\nax.set_ylabel(\"Quantity\")\nplt.title(\"Sex quantities\")\nplt.show()\n\nax = dataset['age'].hist()\nax.set_xlabel(\"Age\")\nax.set_ylabel(\"Quantity\")\nplt.title(\"Age quantities\")\nplt.show()\n\nax = dataset['education.num'].hist()\nax.set_xlabel(\"Education label\")\nax.set_ylabel(\"Quantity\")\nplt.title(\"Education level quantities\")\nplt.show()\n\nax = dataset['race'].value_counts().plot(kind=\"bar\")\nax.set_ylabel(\"Quantity\")\nplt.title(\"Race quantities\")\nplt.show()\n\ndataset['native.country'].value_counts().plot(kind=\"bar\")\nax.set_ylabel(\"Quantity\")\nplt.title(\"Countries quantities\")\nplt.show()\n\ndataset['income'].value_counts().plot(kind=\"bar\")\nax.set_ylabel(\"Quantity\")\nplt.title(\"Income quantities\")\nplt.show()","6f0e3381":"#Preparing the features and target\nfeatures = dataset.drop(\"income\", axis=1)\ntarget = dataset.income\n\n#encoding the category features\nfeatures_to_encode = features[['workclass', 'education', 'marital.status',\n       'occupation', 'relationship', 'race', 'sex',\n       'native.country']]\n\nfeatures_encoded = features_to_encode.apply(preprocessing.LabelEncoder().fit_transform)\ntarget = preprocessing.LabelEncoder().fit_transform(target)\nfeatures[['workclass', 'education', 'marital.status',\n       'occupation', 'relationship', 'race', 'sex',\n       'native.country']] = features_encoded\n\nprint(features.shape, target.shape)\n\ndisplay(features.head(5))","786e0b4b":"#Dividing train and test data\nX_train, X_test, y_train, y_test = train_test_split(features,target, test_size=0.3)","1a0f253a":"#Analising the % importance level in each feature\nforest = ExtraTreesClassifier(n_estimators=250,random_state=0)\nforest.fit(features, target)\nimportances = forest.feature_importances_\nfeature_importances = pd.DataFrame(importances*100,index = X_train.columns,columns=['importance']).sort_values('importance', ascending=False)\ndisplay(feature_importances)","cd7ae486":"#Analisng the accuracy by increasing the number of K\nscores = []\nfor i in range(1,30):\n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train, y_train)\n    y_pred = knn.predict(X_test)\n    scores.append(metrics.accuracy_score(y_test, y_pred))\n\nsns.lineplot(range(1,30), scores)\nplt.xlabel('Value of K for KNN')\nplt.ylabel('Testing Accuracy')\nplt.title(\"Respective accuracy when increased the number of K\")\nplt.grid(True)\nplt.show()","1158d0a4":"print(\"The best K value in this dataset is {0} - Accuracy = {1}\".format(scores.index(max(scores)), max(scores)))","19ec60c1":"# KNN ","e81389a4":"## 2.2 Dataset cleaning\n\nAs mentioned before, in many columns are present the '?' value for a missing information. So it will be removed every observation that contains a missing value. Also, it will be removed the columns 'capital.gain' and 'capital.loss', which doesn't seem so clear its meaning, and 'fnlwgt' which represents some final avaliation about the observation, thus the fitting process will get an equal result.","ffe4bc12":"# 1. Libraries","ffd3a17d":"# 2. Dataset","dddfe721":"## 2.1 Analising columns values\nNo line seems to have Nan or empty values. However futher investigation is needed once it's already possible to see '?' values in different columns. ","97382b6a":"The columns 'education' and 'education.num' represent the same information. 'education.num' is the respective label for an education level. ","9049be44":"# 4. Fitting a model","7cf15f4b":"# 3. EDA"}}