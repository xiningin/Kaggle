{"cell_type":{"4f19c08a":"code","0c283273":"code","12405651":"code","e5b867f3":"code","c7b7b921":"code","3d7bb22e":"code","b64f4451":"code","4bafef17":"code","5fee74ea":"code","9928266b":"code","86c1efb7":"code","5b5e86e9":"code","30d90aa8":"code","e7c12e97":"code","b388d23d":"code","49ea8202":"markdown","7ed6fe5f":"markdown","b7739ba3":"markdown","032d988d":"markdown","0c2b4d76":"markdown","7b2b93a5":"markdown","aaf7a07d":"markdown","a37f7557":"markdown","43640400":"markdown","0405c18c":"markdown","3ddecc73":"markdown","07056ef5":"markdown","20575ecb":"markdown","d80e0286":"markdown","e8e08fad":"markdown","373fe3d5":"markdown","ed3de8ea":"markdown","e87dada0":"markdown"},"source":{"4f19c08a":"#importing pandas:\nimport pandas as pd\n\n# import libraries for feature engineering and preprocessing:\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom category_encoders import CatBoostEncoder\n\n# finally, importing algorithms to perform regression with:\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.tree import DecisionTreeRegressor\n\n# importing metrics to see how well the model predicts:\nfrom sklearn.metrics import *","0c283273":"data = pd.read_csv(\"..\/input\/fuel-consumption-co2\/FuelConsumptionCo2.csv\")\ndata.head(10)","12405651":"y = data['CO2EMISSIONS']\n\ndata.drop(['CO2EMISSIONS'], axis=1, inplace=True)","e5b867f3":"data.isnull().sum()","c7b7b921":"c = (data.dtypes == 'object')\n\ncatlist = list(c[c].index)","3d7bb22e":"catlist.append('MODELYEAR')\ncatlist.append('CYLINDERS')","b64f4451":"data[catlist].nunique()","4bafef17":"data.drop(['MODEL', 'MODELYEAR'], inplace=True, axis=1)\ncatlist.remove('MODELYEAR')\ncatlist.remove('MODEL')\n","5fee74ea":"encdata = data.copy()\n\ncbe = CatBoostEncoder()\n\ncbe.fit(data[catlist], y)\n\nencdata[catlist] = cbe.transform(data[catlist])","9928266b":"encdata[catlist].head()","86c1efb7":"scale = StandardScaler()\nscaleddata = scale.fit_transform(encdata)","5b5e86e9":"train, test, ytrain, ytest = train_test_split(scaleddata, y, train_size=0.8, test_size=0.2)","30d90aa8":"RanMod = RandomForestRegressor(n_estimators=300)\n\nRanMod.fit(train, ytrain)\n\nRPreds = RanMod.predict(test)\n\nprint(\"The R2 Score is:\",r2_score(ytest, RPreds), \", while the Mean Absolute Error is:\",mean_absolute_error(ytest, RPreds))","e7c12e97":"TreeMod = DecisionTreeRegressor()\n\nTreeMod.fit(train, ytrain)\n\nTPreds = TreeMod.predict(test)\n\nprint(\"The R2 Score is:\",r2_score(ytest, TPreds), \", while the Mean Absolute Error is:\",mean_absolute_error(ytest, TPreds))","b388d23d":"xgb = XGBRegressor(n_estimators=200)\n\nxgb.fit(train, ytrain)\n\nxPreds = xgb.predict(test)\n\nprint(\"The R2 Score is:\",r2_score(ytest, xPreds), \", while the Mean Absolute Error is:\",mean_absolute_error(ytest, xPreds))","49ea8202":"Reading the data:","7ed6fe5f":"Using the StandardScaler lets scale the data into values between -1 and 1:","b7739ba3":"Defining the labels:","032d988d":"Using Decision Tree Regressor:","0c2b4d76":"Using XGBoost Regressor:","7b2b93a5":"Lets check for the number of unique variables in each of the categorical columns:","aaf7a07d":"Splitting the data into training and test sets:","a37f7557":"# Understanding the data:","43640400":"# Training and Predicting:","0405c18c":"Lets drop the MODEL column given its cardinality, and MODELYEAR since it is a single value:","3ddecc73":"Lets take a look at it:","07056ef5":"Finding the categorical columns:","20575ecb":"Encoding the categorical columns using [CatBoostEncoder](http:\/\/contrib.scikit-learn.org\/category_encoders\/catboost.html):","d80e0286":"Lets see how many NaN values does each column have:","e8e08fad":"# Importing the Libraries:","373fe3d5":"Using Random Forest Regressor:","ed3de8ea":"Looking at the data it seems like we might miss some categorical features that are actually numerical:","e87dada0":"Concluding, the predicted values fit the actual values of CO2 Emissions perfectly! Thank you for going through this notebook. If it helped you, do upvote :D"}}