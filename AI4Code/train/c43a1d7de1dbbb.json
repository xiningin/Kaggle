{"cell_type":{"2e171fc2":"code","ad10833c":"code","386ca333":"code","a85ffcf5":"code","6d8cd51c":"code","e766fd9f":"code","d1202b02":"code","07171f24":"code","69de4bb2":"code","200274f8":"code","acd29d35":"code","5b6b9e95":"code","34c91e6a":"code","42041f3f":"code","0d510376":"code","c7b35d04":"code","b35a46f1":"code","08658c6e":"code","6968a7d5":"code","a427a67f":"code","be7e7b78":"markdown"},"source":{"2e171fc2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ad10833c":"# import dataset\ndf_train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","386ca333":"#check what we have\ndf_train.head(3)","a85ffcf5":"# Let's check some statistical values\nprint(\"Statistical information\")\ndf_train.describe()","6d8cd51c":"print(\"Information about columns\")\ndf_train.info()","e766fd9f":"# for faster work with columns\ndf_train.describe().columns","d1202b02":"# How is survived?\ndf_train.groupby('Sex')[['Survived']].mean()","07171f24":"df_train.groupby('Sex')[['Survived']].sum()","69de4bb2":"# do the same using pivot table\ndf_train.pivot_table('Survived', index='Sex', aggfunc ='sum')","200274f8":"print(\"Survivors by cabin class\")\ndf_train.groupby(['Sex', 'Pclass'])['Survived'].mean().unstack()","acd29d35":"df_train.pivot_table('Survived', index='Sex', columns='Pclass')","5b6b9e95":"# another view for table\ndf_train.groupby(['Sex', 'Pclass'], as_index = 'Pclass')['Survived'].mean()#.unstack()","34c91e6a":"df_train.pivot_table('Survived', index=['Sex','Pclass'])","42041f3f":"df = df_train.copy()","0d510376":"df.pivot_table('Survived', index='Sex', columns='Pclass',aggfunc = [sum])","c7b35d04":"# Use two function in one table\ndf.pivot_table('Survived', index='Sex', columns='Pclass',aggfunc = [sum, 'mean'])","b35a46f1":"df.pivot_table(index='Sex', columns='Pclass',aggfunc={'Survived':sum, 'Fare':'mean'})","08658c6e":"df_train.pivot_table(index=['Sex','Pclass'],aggfunc={'Survived':sum, 'Fare':'mean'})","6968a7d5":"df.pivot_table('Survived', index='Sex', columns='Pclass', margins=True)","a427a67f":"df.pivot_table(index='Sex', columns='Pclass',aggfunc={'Survived':sum, 'Fare':'mean'})","be7e7b78":"# EDA for Titanic Dataset Features. Pivot tables vs. grouby function."}}