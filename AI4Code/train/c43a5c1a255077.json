{"cell_type":{"f2c1c430":"code","1c6681ba":"code","c3c640a1":"code","bede6f15":"code","bc58e80d":"code","c6a3efea":"code","22c18bcb":"code","6248a423":"code","274b381a":"code","c823c77e":"code","42a7be84":"code","766166ec":"code","c75d0f7a":"code","a04a0348":"code","e7e0513d":"code","db097ca5":"code","937307e8":"code","5146052b":"code","c555fa7d":"code","be009233":"code","2d438bc5":"code","85e03372":"code","48f42ace":"code","83739b0f":"code","246e2481":"code","355b48ed":"code","1ec939f8":"code","22c190f9":"code","4f3f6771":"code","d6220422":"code","fe95ed1e":"code","92a2fa44":"code","6196c1e7":"code","a9b87147":"code","2ea1d890":"code","779bd9ff":"code","91061e1a":"code","b16e9720":"markdown","6401d549":"markdown","e24c502e":"markdown","e7137aff":"markdown","4da194b3":"markdown","cb00eefb":"markdown","063e43a2":"markdown","469bdea5":"markdown","eaeeac04":"markdown","84513839":"markdown","5ae29b66":"markdown","d5c5ebe4":"markdown","ddd70048":"markdown","4f118826":"markdown","bd044c1a":"markdown","856441bd":"markdown","3c88eec2":"markdown","6d3be5f2":"markdown","13369f65":"markdown","7a6f4dbf":"markdown","88ef0cf8":"markdown","74dfc09f":"markdown","e0e4e75c":"markdown","82e8e9af":"markdown","af2d6071":"markdown","72f45e9b":"markdown","6c9d0734":"markdown","8e66c40b":"markdown","c8869777":"markdown","05b65fa9":"markdown","9b7ea692":"markdown","b34012a5":"markdown","1e239676":"markdown","06874509":"markdown","eac1e1c6":"markdown","59851a47":"markdown","a0aded97":"markdown","1cf6f2df":"markdown","74e93bbd":"markdown","b518abc8":"markdown","f5b0aa32":"markdown","5b514b65":"markdown","45843f16":"markdown","0cf5ef1f":"markdown"},"source":{"f2c1c430":"import pandas as pd\npd.set_option('display.max_columns', None)\nimport random\nimport numpy as np\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy.stats import norm\nfrom scipy import stats\nfrom sklearn.decomposition import PCA\nfrom yellowbrick.cluster import KElbowVisualizer\nfrom sklearn.cluster import KMeans\nfrom sklearn.cluster import AgglomerativeClustering\nfrom matplotlib import colors","1c6681ba":"df = pd.read_csv('..\/input\/data-science-and-stem-salaries\/Levels_Fyi_Salary_Data.csv')\ndf","c3c640a1":"df = df.rename(columns={\"totalyearlycompensation\": \"total_yearly_compensation\", \n                        \"yearsofexperience\": \"years_of_experience\",\n                       \"yearsatcompany\": \"years_at_company\",\n                        \"basesalary\": \"base_salary\",\n                        \"stockgrantvalue\": \"stock_grant_value\"\n                       })","bede6f15":"df = df.drop(columns=['timestamp', 'tag', 'dmaid', 'cityid', 'otherdetails', 'Some_College', 'Masters_Degree', 'Bachelors_Degree', 'Doctorate_Degree', 'Race_Asian', 'Race_White', 'Race_Two_Or_More', 'Race_Black', 'Race_Hispanic', 'Highschool', 'rowNumber', 'bonus'])","bc58e80d":"missing = df.isna().sum() \n\nprint(\"The percentage of each feature's missing values are as follow:\")\nround(missing \/ len(df) * 100, 2)","c6a3efea":"df = df.dropna(subset=['company', 'level'])","22c18bcb":"df = df.fillna('Unknown')","6248a423":"df = df[df['years_of_experience'] < 30]","274b381a":"pd.plotting.scatter_matrix(df, alpha=0.5, figsize=(22,22))","c823c77e":"# keep rows with total_yearly_compensation < 4000000\ndf = df[df['total_yearly_compensation'] < 4000000]","42a7be84":"# keep rows with base_salary < 1600000\ndf = df[df['base_salary'] < 1600000]","766166ec":"# keep rows with stock_grant_value < 2500000\ndf = df[df['stock_grant_value'] < 2500000]","c75d0f7a":"# years_at_company should be less than years_of_experience\ndf = df[df['years_at_company'] < df['years_of_experience']]","a04a0348":"# Get list of categorical variables\ns = (df.dtypes == 'object')\nobject_cols = list(s[s].index)\nobject_cols","e7e0513d":"for column in object_cols:\n    print(f\"Total categories in the feature '{column}':\\n\", df[column].value_counts(), '\\n-------------------------------------')","db097ca5":"index = df[df['gender'] == 'Title: Senior Software Engineer'].index\ndf.at[index, \"gender\"] = 'Unknown'","937307e8":"# box plot Education\/total_yearly_compensation\nvar = 'Education'\nf, ax = plt.subplots(figsize=(10, 5))\nfig = sns.boxplot(x=var, y=\"total_yearly_compensation\", data=df, showfliers = False)\nfig.axis(ymin=0, ymax=700000);","5146052b":"# box plot gender\/total_yearly_compensation\nvar = 'gender'\nf, ax = plt.subplots(figsize=(6, 4))\nfig = sns.boxplot(x=var, y=\"total_yearly_compensation\", data=df, showfliers = False)\nfig.axis(ymin=0, ymax=600000);","c555fa7d":"# box plot Race\/total_yearly_compensation\nvar = 'Race'\nf, ax = plt.subplots(figsize=(8, 4))\nfig = sns.boxplot(x=var, y=\"total_yearly_compensation\", data=df, showfliers = False)\nfig.axis(ymin=0, ymax=700000);","be009233":"# box plot company\/total_yearly_compensation\n# select 7 companies\ndf_company = df[(df['company'] == 'Amazon') | (df['company'] == 'Microsoft') | (df['company'] == 'Google')\n       | (df['company'] == 'Facebook') | (df['company'] == 'Apple') | (df['company'] == 'Oracle') | (df['company'] == 'Salesforce')]\n\nvar = 'company'\nf, ax = plt.subplots(figsize=(8, 4))\nfig = sns.boxplot(x=var, y=\"total_yearly_compensation\", data=df_company, showfliers = False)\nfig.axis(ymin=0, ymax=800000);","2d438bc5":"facebook = df[df['company'] == 'Facebook']\nmicrosoft = df[df['company'] == 'Microsoft']\nsns.distplot(facebook['years_of_experience'])\nsns.distplot(microsoft['years_of_experience'])\n\nplt.legend(['Facebook', 'Microsoft'])\nplt.show()","85e03372":"import matplotlib.pyplot as plt\n# Pie chart\nlabels = ['PhD', 'Master', 'Bachelor']\neducation_facebook = [len(facebook[facebook['Education'] == 'PhD']), len(facebook[facebook['Education'] == 'Master\\'s Degree']), len(facebook[facebook['Education'] == 'Bachelor\\'s Degree'])]\neducation_microsoft = [len(microsoft[microsoft['Education'] == 'PhD']), len(microsoft[microsoft['Education'] == 'Master\\'s Degree']), len(microsoft[microsoft['Education'] == 'Bachelor\\'s Degree'])]\n# colors\ncolors_pie = ['#ff9999','#66b3ff','#99ff99']\n \n# fig1, ax1 = plt.subplots()\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(6, 6))\nax1.pie(education_facebook, colors = colors_pie, labels=labels, autopct='%1.1f%%', startangle=90)\nax2.pie(education_microsoft, colors = colors_pie, labels=labels, autopct='%1.1f%%', startangle=90)\n\nax1.set(xlabel='Facebook')\nax2.set(xlabel='Microsoft')\n \nplt.tight_layout()\nplt.show()","48f42ace":"# box plot company\/total_yearly_compensation\nvar = 'title'\nf, ax = plt.subplots(figsize=(20, 8))\nplt.xticks(rotation=60)\nfig = sns.boxplot(x=var, y=\"total_yearly_compensation\", data=df, showfliers = False)\nfig.axis(ymin=0, ymax=900000);","83739b0f":"software_engineering_manager = df[df['title'] == 'Software Engineering Manager']\nsns.distplot(software_engineering_manager['years_of_experience'])","246e2481":"df.info()","355b48ed":"# gender\nle_gender = LabelEncoder()\ndf['gender']=df[['gender']].apply(le_gender.fit_transform)\n\n# Race\nle_race = LabelEncoder()\ndf['Race']=df[['Race']].apply(le_race.fit_transform)\n\n# Education\nle_education = LabelEncoder()\ndf['Education']=df[['Education']].apply(le_education.fit_transform)\n\n# company\nle_company = LabelEncoder()\ndf['company']=df[['company']].apply(le_company.fit_transform)\n# list(le_company.inverse_transform([5, 2, 1]))\n\n# level\nle_level = LabelEncoder()\ndf['level']=df[['level']].apply(le_level.fit_transform)\n\n# title\nle_title = LabelEncoder()\ndf['title']=df[['title']].apply(le_title.fit_transform)\n\n# location\nle_title = LabelEncoder()\ndf['location']=df[['location']].apply(le_title.fit_transform)","1ec939f8":"scaler = StandardScaler()\nscaler.fit(df)\nscaled_df = pd.DataFrame(scaler.transform(df),columns= df.columns )\nprint(\"All features are now scaled\")","22c190f9":"scaled_df","4f3f6771":"#Initiating PCA to reduce dimentions aka features to 3\npca = PCA(n_components=3)\npca.fit(scaled_df)\nPCA_ds = pd.DataFrame(pca.transform(scaled_df), columns=([\"col1\",\"col2\",\"col3\"]))\nPCA_ds.describe().T","d6220422":"#A 3D Projection Of Data In The Reduced Dimension\nx =PCA_ds[\"col1\"]\ny =PCA_ds[\"col2\"]\nz =PCA_ds[\"col3\"]\n#To plot\nfig = plt.figure(figsize=(10,8))\nax = fig.add_subplot(111, projection=\"3d\")\nax.scatter(x,y,z, c=\"maroon\", marker=\"o\" )\nax.set_title(\"A 3D Projection Of Data In The Reduced Dimension\")\nplt.show()","fe95ed1e":"## print('Elbow Method to determine the number of clusters to be formed:')\nElbow_M = KElbowVisualizer(KMeans(), k=10)\nElbow_M.fit(PCA_ds)\nElbow_M.show()","92a2fa44":"# Initiating the Agglomerative Clustering model \nAC = AgglomerativeClustering(n_clusters=4)\n# fit model and predict clusters\nyhat_AC = AC.fit_predict(PCA_ds)\nPCA_ds[\"Clusters\"] = yhat_AC\n# Adding the Clusters feature to the orignal dataframe.\ndf[\"Clusters\"]= yhat_AC\nscaled_df[\"Clusters\"]= yhat_AC","6196c1e7":"cmap = colors.ListedColormap([\"#682F2F\", \"#9E726F\", \"#D6B2B1\", \"#B9C0C9\", \"#9F8A78\", \"#F3AB60\"])","a9b87147":"# # Plotting the clusters\nfig = plt.figure(figsize=(10,8))\nax = plt.subplot(111, projection='3d', label=\"bla\")\nax.scatter(x, y, z, s=40, c=PCA_ds[\"Clusters\"], marker='o', cmap = cmap )\nax.set_title(\"The Plot Of The Clusters\")\nplt.show()","2ea1d890":"# Plotting countplot of clusters\npal = [\"#682F2F\", \"#B9C0C9\", \"#D6B2B1\", \"#F3AB60\"]\npl = sns.countplot(x=df[\"Clusters\"], palette= pal)\npl.set_title(\"Distribution Of The Clusters\")\nplt.show()","779bd9ff":"fig = plt.figure(figsize=(10,8))\n\npl = sns.scatterplot(data = df,x=df[\"years_at_company\"], y=df[\"base_salary\"],hue=df[\"Clusters\"], palette= pal)\npl.set_title(\"Cluster based On years_at_company and base_salary\")\nplt.legend()\nplt.show()","91061e1a":"fig = plt.figure(figsize=(10,8))\n\npl = sns.scatterplot(data = df,x=df[\"years_at_company\"], y=df[\"total_yearly_compensation\"],hue=df[\"Clusters\"], palette= pal)\npl.set_title(\"Clusters based On years_at_company and total_yearly_compensation\")\nplt.legend()\nplt.show()","b16e9720":"Relationship with ***Race***","6401d549":"Drop rows with missing values for ***company*** and ***level***","e24c502e":"Relationship with ***company***\n\nThere are too many companies in our dataset, so we just show some of them in our boxplot","e7137aff":"stock_grant_value > 2500000","4da194b3":"### 2.1 Relationship with numerical features","cb00eefb":"Note: We will only focus on records with less than 30 years working experience, which means **years_of_experience < 30**","063e43a2":"From the output above, we can see\uff1a\n- There are no missing values anymore (missing values have been solved previously)\n- There are some categorical features in our data frame; as there are some features in dtype: object. So we will need to encode them into numeric forms later.","469bdea5":"From the output above, we can find:\n- There are some **outliers** in our dataset: \n    - total_yearly_compensation > 4000000\n    - base_salary > 1600000 \n    - years_at_company > years_of_experience\n    - stock_grant_value > 2500000\n\n\n- There is **no linear relationship** between **working experience**(years_of_experience, years_at_company) and **salary**(total_yearly_compensation, base_salary, stock_grant_value)\n\n- ***total_yearly_compensation***  has a linear relationship between ***stock_grant_value***\n","eaeeac04":"## 3. Feature Engineering\n\nThe following steps are applied to preprocess the data:\n\n- Label encoding the categorical features\n- Scaling the features using the standard scaler\n\n\n### label encoding","84513839":"drop some duplicated and useless columns","5ae29b66":"### 2.4 In summary\nWe can conclude that:\n\n- ***Education*** and job ***title*** have stronger impact on  ***total_yearly_compensation***. People with 'PhD' degree or working as 'Software Engineering Manager' tend to have higher ***total_yearly_compensation***\n\n- Facebook's ***total_yearly_compensation*** is leading in the data science and STEM industry. \n\n- Most 'Software Engineering Manager' has 10~20 years working experience","d5c5ebe4":"Fill in other missing data with 'Unknown' value","ddd70048":"## 4. Dimensionality Reduction","4f118826":"Ignore the 'Unkown' and 'Other', we find that the total_yearly_compensation for **Feamle** is lower than that for the **Male** ","bd044c1a":"handle missing data","856441bd":"### Scaling","3c88eec2":"## 2. Data Exploration Analysis","6d3be5f2":"Follow our naming convention","13369f65":"**years_at_company** VS. **base_salary**","7a6f4dbf":"- **Cluster 0**: high total_yearly_compensation\n- **Cluster 1**: low total_yearly_compensation, low years_at_company\n- **Cluster 3**: low total_yearly_compensation, average and above years_at_company","88ef0cf8":"Relationship with ***gender***","74dfc09f":"**Software Engineering Manager** has the highest values in all metrics. \n\nThe Q1(25th Percentile) value of 'Software Engineering Manager' is even higher than the maximum value of most other job titles\n\nJust to be curious, how manys years of working experience we need to be a software engineering manager?","e0e4e75c":"**Remove outliers**\n\ntotal_yearly_compensation > 4000000","82e8e9af":"The ***years_of_experience*** for Facebook and Microsoft have similar data distribution. ","af2d6071":"Most 'Software Engineering Manager' has 10~20 years working experience","72f45e9b":"Relationship with ***title***","6c9d0734":"Facebook's ***total_yearly_compensation*** is leading in the data science and STEM industry. \n\nThe Q1(25th Percentile) value of 'Facebook' is even higher than the maximum value of 'Microsoft company'. \n\nJust to be curious, What're differences between employees in 'Facebook' and 'Microsoft'?\n\n**Facebook VS. Microsoft - years_of_experience**","8e66c40b":"## 5. Clustering","c8869777":"## 1. clean data","05b65fa9":"base_salary > 1600000","9b7ea692":"Exploring the unique values in the categorical features to get a clear idea of the data.","b34012a5":"In this problem, there are many factors on the basis of which the final classification will be done.\n\nWe will perform dimensionality reduction on the selected features before putting them through a classifier.\n\nDimensionality reduction is the process of reducing the number of random variables under consideration, by obtaining a set of principal variables.\n\n**Principal component analysis (PCA)** is a technique for reducing the dimensionality of such datasets, increasing interpretability but at the same time minimizing information loss.\n\n**In this section, we will:**\n\n- Dimensionality reduction with PCA\n- Plotting the reduced dataframe\n\nFor this project, I will be reducing the dimensions to 3.","1e239676":"Relationship with ***Education***","06874509":"From the boxplots above, we can find that the total_yearly_compensation for **PhD** are the highest in all metrics\n\nbut to my surprise, the **bachelor** degree is the lowest among all education categories, even lower than **High school**","eac1e1c6":"**years_at_company** VS. **total_yearly_compensation**","59851a47":"Black has the highest Q0 value (0th percentile or Minimum) , but the lowest Q1(First quartile), Q2(Median), Q3(Third quartile), and Q4(Maximum)","a0aded97":"### 2.3 Relationship with categorical features ","1cf6f2df":"years_at_company > years_of_experience","74e93bbd":"- **Cluster 0**: high base_salary\n- **Cluster 1**: low base_salary, low years_at_company\n- **Cluster 3**: low base_salary, average and above years_at_company","b518abc8":"How do we handle these missing values?\n\n- Less than 0.2% data have missing values for the feature ***company*** and ***level***. We will drop these rows.\n\n- There are 31.19%, 64.2%, and 51.52% missing values in ***gender***, ***race***, and ***education*** columns. They are all categorical values, so we will fill in an 'Unknown' value.\n","f5b0aa32":"The percentage of employees with **PhD** degree in Facebook(10.0%) is significantly higher than that in Microsoft(4.1%), \n\nwhile Microsoft has more employees with **Master** degree","5b514b65":"## 6. Clusters Visualisation","45843f16":"**Facebook VS. Microsoft - Education**","0cf5ef1f":"There is a mistake in the column 'gender', which value is 'Senior Software Engineer'. We simply change its value to 'Unknown'"}}