{"cell_type":{"31646037":"code","5633bb05":"code","57f36f19":"code","26782ef6":"code","fdc4153d":"code","b9da4adf":"code","481c71a1":"code","086d86fa":"code","1bfd1adc":"code","a8524260":"code","e72c0175":"code","d30899f4":"code","8648dfe5":"code","deba0c01":"code","fa193b4d":"code","1fa28e22":"code","bd88a28a":"code","68adfdc2":"code","dbec91ba":"code","3ae5f740":"code","c65b4855":"code","74405519":"code","6d12c48a":"code","e1322b89":"code","7e39aba6":"code","2edcdcb1":"code","24f197ed":"code","cbcad652":"code","6db7947a":"code","5b1d8c2a":"code","3286ac07":"code","7bf299eb":"code","e0c644ce":"code","ca8375b5":"code","da3d283c":"code","3ca31b63":"code","393b0d55":"markdown","cd0d01cf":"markdown","ce61a7a0":"markdown","2b1bbd7d":"markdown","6100383a":"markdown","15a04f63":"markdown","ed6e804c":"markdown","c0890538":"markdown","b7537123":"markdown","53bce0f8":"markdown","32a42df0":"markdown","6d1089fb":"markdown","c388bffb":"markdown","a0ce5e3c":"markdown","8cc9ba7c":"markdown","e2579c0d":"markdown","96725d03":"markdown","e66d5fe5":"markdown","70cda142":"markdown","4b57c675":"markdown","fdb8eabe":"markdown","b668df47":"markdown","a335011c":"markdown","dea173c5":"markdown","c797875a":"markdown","efdf2824":"markdown","9e0bedc5":"markdown","287aa9f5":"markdown","3010d5a8":"markdown","f4fd1bad":"markdown","c318de38":"markdown","c4a31ec0":"markdown","77453515":"markdown","877a2faa":"markdown","1fcda438":"markdown"},"source":{"31646037":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5633bb05":"df = pd.read_csv(\"\/kaggle\/input\/pokemon-challenge\/pokemon.csv\")\ndf.head()","57f36f19":"df.info()","26782ef6":"df.describe().T","fdc4153d":"df.columns","b9da4adf":"#df.Legendary = df.Legendary.astype(\"int\") #For example","481c71a1":"cat_df = df.select_dtypes(include = [\"object\"])\nnum_df = df.select_dtypes(include = [\"int64\"])","086d86fa":"cat_df[\"Type 1\"].unique()","1bfd1adc":"cat_df[\"Type 1\"].value_counts()","a8524260":"cat_df.head(10)","e72c0175":"cat_df[\"Type 2\"].unique()","d30899f4":"cat_df[\"Type 2\"].value_counts()","8648dfe5":"num_df.head(10)","deba0c01":"#df.drop([\"#\",\"Name\"], axis = 1 , inplace = True) \n#Here we have deleted \"#\" and \"Name\" variables, since the ones deleted with axis are columns, we made axis = 1. If we wanted to delete a row, axis = 0 should have been.","fa193b4d":"#total = pd.concat([\"Attack\",\"Defense\"] , Axis = 1)","1fa28e22":"HP_mean = df[\"HP\"].mean()\nHP_mean","bd88a28a":"def HP_low_high(i):\n    if i < HP_mean:\n        return \"HP_low\"\n    else:\n        return \"HP_high\"","68adfdc2":"df[\"HP_low_high\"] = df[\"HP\"].apply(HP_low_high)","dbec91ba":"cat_df[\"Type 1\"].value_counts().plot.barh();","3ae5f740":"cat_df[\"Type 2\"].value_counts().plot.barh();","c65b4855":"def numeric(variable):\n    \n    plt.hist(num_df[variable], bins = 50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} variable distribution\".format(variable))\n    plt.show()","74405519":"for i in num_df:\n    \n    numeric(i)\n    ","6d12c48a":"df[(df[\"HP\"] > 250)] ","e1322b89":"num_df[\"HP\"].sort_values()","7e39aba6":"df[(df[\"HP\"] == 1)] ","2edcdcb1":"df[(df[\"Attack\"] > 175)]","24f197ed":"df[\"Defense\"].sort_values()","cbcad652":"df[(df[\"Defense\"] == 230)]","6db7947a":"df[\"Speed\"].sort_values()","5b1d8c2a":"df[(df[\"Speed\"] == 180)]","3286ac07":"df_corr = df.corr()\nsns.heatmap(df_corr , annot = True , fmt= '.2f')","7bf299eb":"sns.jointplot(\"HP\", \"Attack\", data = df, kind = \"reg\")","e0c644ce":"sns.jointplot(\"Attack\", \"Defense\", data = df, kind = \"reg\")","ca8375b5":"df.groupby([\"Type 1\"])[\"HP\",\"Attack\",\"Speed\"].mean() #categorized variables and numerals are on different sides","da3d283c":"df.groupby([\"Type 1\",\"HP_low_high\"])[\"Attack\",\"Speed\"].mean()","3ca31b63":"df.groupby([\"Type 2\"])[\"Attack\",\"Defense\"].sum()","393b0d55":"* Pokemon's 1st attack ability is mostly water 2nd normal and 3rd grass","cd0d01cf":"* So let's have a look at the pokemons with the most atack power.","ce61a7a0":"* Here we can understand the relationship between our continuous variables.I noticed that there is no negative relationship between variables","2b1bbd7d":"* There are Pokemon with 1 Health. let's see this","6100383a":"* Now I'll tell you about select_dtypes (). This function allows us to collect data types in the dataframe.\n* Here we have collected our categorical variables in cat_df and our continuous variables in num_df dataframe.","15a04f63":"# First Look at Data Set","ed6e804c":"# Filter\n* When using the filtering process, we first need to ask ourselves questions, this should be the most important feature of a data scientist when analyzing data. In the light of these questions we ask, we should be able to better understand the data set and the relationships between our variables.","c0890538":"# Data Manipulation with Pandas for Beginners\n### Hello, in this article I will explain data manipulation with Pandas, the Python library, as much as I can.\n\n## So what is Pandas?\n#### Pandas is an open source library used to analyze data in Python. It takes data such as a CSV or SQL database and creates an object with rows and columns called Dataframe. Pandas library is often called pd alias.\n\n## The dataset I will use\n\n### Features\n* #: We can think of it as an index\n* Name: Name of pokemon\n* Type 1: 1st attack type\n* Type 2: 2nd attack type\n* HP: Pokemon hit points\n* Attack: Pokemon attack force\n* Defense: Pokemon defense points\n* Sp. atk: Special attack force\n* Sp. def: Special defense points\n* Speed: Pokemon speed\n* Generation: Development stage\n* Legendary: Legendary status\n\n#### Three files are available. The first one contains the Pokemon characteristics (the first column being the id of the Pokemon). The second one contains information about previous combats. The first two columns contain the ids of the combatants and the third one the id of the winner. Important: The Pokemon in the first columns attacks first.","b7537123":"# General Information\n* The most important thing a data scientist has to do is to ask herself questions and to analyze the relationship between variables in the light of these questions.\n\n\n\n## So, in this article, I wanted to explain data manipulation with Pandas library as much as I can. I would appreciate it if you share your positive or negative opinions. Good work :)","53bce0f8":"* Dragon type Pokemon with the most Hit points and Attack power,Electric type pokemons with at least Hit points and Attack power and fastest pokemon flying type.","32a42df0":"# Drop\n* We delete variables that will not affect our output in the data set. There is no such variable in our dataset, so I'll just make an example.(Actually the variables \"#\" and \"Name\" do not affect our output, but may be needed when analyzing.)","6d1089fb":"## Visualization of numeric variables\n* I will write a short function and loop to examine numeric variables here.","c388bffb":"* We used the HP_low_high variable, which is the new property we created in the Groupby process here. A different perspective","a0ce5e3c":"## Groupby\n* The groupby () function is used to sort data into groups based on some criteria. Pandas objects can be split on any axis.\n* While implementing the Groupby process, we need to ask ourselves questions and look for answers to these questions.","8cc9ba7c":"### Analysis and visualization of numerical variables","e2579c0d":"* Generally, there are pokemon with hit points between 40 and 100 but more than 250 hit points,then let's see.","96725d03":"*  Except for some situations, the defense strength increases as the attack power increases.","e66d5fe5":"# Data visualization \n### I am referring to data visualization in this notebook.\n#### Data visualization is about organizing complex and scattered data to make it easy to understand and interpret. In other words, data visualization is the task of concretizing the soft data we have by making it visual and obtaining preliminary information from it.\n\n### I will use python's matplotlib and seaborn libraries for data visualization.\n\n## Matplotlib\n#### Matplotlib; The basic python library we use in data visualization. It allows us to make 2 and 3 dimensional drawings. While Matplotlib is generally used in 2D drawings, other libraries are used in 3D drawings.\n\n## Seaborn\n#### Built on Matplotlib, it is tightly integrated with the PyData stack, with support for statistical templates from numpy, pandas data structures, scipy, statsmodel.\n\n#### I made the definition of these libraries at the beginning of the project.\n![image.png](attachment:image.png)","70cda142":"### Let's visualize now","4b57c675":"*  For example, there is a strong relationship between HP and Attack, I understood it from the correlation matrix.","fdb8eabe":"### Let's learn a little bit about our dataset with \"df.info()\".We have 12 variables, 3 of them are categorical variables, 9 of them are continuous variables, and we have missing data in our name and Type 2 variables.","b668df47":"### Correlation analysis\n* I create heatmap for correlation and write fmt = '.2f' for 2 digits after comma.","a335011c":"### The .csv files contained in read_csv must be written. (I'm writing the file pokemon.csv to \"\/kaggle\/input\/pokemon-challenge\/pokemon.csv\")","dea173c5":"* So let's have a look at the pokemons with the most speed.","c797875a":"* So let's have a look at the pokemons with the most defense power.","efdf2824":"* As far as I can see from the graphic, the higher the hit point, the lower the attack power of the pokemon.","9e0bedc5":"* I divided the HP variable into HP_low and HP_high according to its average value and created the HP_low_high variable.","287aa9f5":"* With Groupby we can see the total","3010d5a8":"## Visualization of categorical variables","f4fd1bad":"# Dtypes\n* Sometimes a variable in your data set should be a numeric, but has been defined categorically or vice versa. Dtypes helps us solve this problem, that is, it briefly converts data types.\n* But I will only show it as an example. I don't use.","c318de38":"* Let's look at the order of hit points, we use sort_values () for this.","c4a31ec0":"### Let's look at the columns in the data set.","77453515":"* Pokemon's 2nd attack ability is the most flying. Notice that flying ability was the least in 1st atack ability.","877a2faa":"# Adding New Features with Apply\n* Here I have added new columns by customizing some of our continuous variables according to some criteria. I thought it would be more helpful in understanding the data set.","1fcda438":"# Concat\n* I have given column concatenation as an example. I will not implement it in this data set."}}