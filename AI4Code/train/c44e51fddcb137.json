{"cell_type":{"14577028":"code","42d3fa0c":"code","5a0ecc79":"code","0d3c3f29":"code","9e697914":"code","8eb246c5":"code","7f96177c":"code","02b0b87c":"code","e41b1bcf":"code","fa019727":"code","c69e55ad":"code","8bbc2f48":"code","dd3cd335":"code","ec685863":"code","88002e43":"code","b3a4c46f":"code","3a7b3fec":"code","543c053a":"code","732b1629":"code","f477867c":"code","b868323a":"code","49cb0f0a":"code","1dfc6af4":"code","db3f43ea":"code","1397e873":"code","c57cb706":"code","376efdb5":"code","658911fd":"code","52b9a53c":"code","25fd4da2":"code","29bc734b":"code","b82887ed":"code","44e40a3c":"code","3c85f637":"code","e83fcf49":"code","05951e1c":"code","5a7b64a6":"code","36d9a300":"code","196d3acb":"code","e003cb75":"code","3c4af4cd":"code","79862d97":"code","03034e83":"code","8816a142":"code","cfd43254":"code","f6e939d5":"code","543a21ff":"code","35a82c59":"code","be3d384a":"markdown","c294b9f2":"markdown","1413d034":"markdown","f62449d3":"markdown","c935237c":"markdown","e4da10f8":"markdown","750a5c63":"markdown","ffd73f03":"markdown","3fc10fea":"markdown","68f46383":"markdown","763e2751":"markdown","e084c417":"markdown","5a7158a8":"markdown","2abe31de":"markdown","e543b6bc":"markdown","c74efabe":"markdown","f9cdac4e":"markdown","70699387":"markdown","d3341329":"markdown","e25215fd":"markdown"},"source":{"14577028":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib","42d3fa0c":"#default theme\nsns.set(context='notebook', style='darkgrid', palette='deep', font='sans-serif', font_scale=1, color_codes=False, rc=None)\nmatplotlib.rcParams['figure.figsize'] =[10,8]\nmatplotlib.rcParams.update({'font.size': 18})\nmatplotlib.rcParams['font.family'] = 'sans-serif'","5a0ecc79":"df=pd.read_csv(\"..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")\ndf.head()","0d3c3f29":"df.info()","9e697914":"df.describe()","8eb246c5":"df.dtypes","7f96177c":"df.dtypes.value_counts().plot.bar();","02b0b87c":"df.isnull().sum()","e41b1bcf":"list(df.columns)","fa019727":"df.shape","c69e55ad":"df.DEATH_EVENT.value_counts()","8bbc2f48":"df.DEATH_EVENT.value_counts().plot.bar();\nplt.title(\"Death cases\");","dd3cd335":"plt.figure(figsize=(10,6))\nplt.title(\"EVENT_DEATH per cent\")\ndf.DEATH_EVENT.value_counts().plot.pie(autopct=\"%1.1f%%\");","ec685863":"sns.countplot(x='DEATH_EVENT',data=df);","88002e43":"df.hist(edgecolor='black',figsize=(10,10));","b3a4c46f":"df.corr()","3a7b3fec":"plt.figure(figsize=(15,7))\nplt.title(\"Average of EVENT_DEATH by age\")\nsns.barplot(x=df.age, y=df['DEATH_EVENT']);\nplt.xticks(rotation=90);","543c053a":"df.serum_sodium.value_counts().plot.bar();","732b1629":"df.serum_creatinine.value_counts().plot.bar();","f477867c":"df.ejection_fraction.value_counts().plot.bar();","b868323a":"plt.figure(figsize=(15,7))\nplt.title(\"Average of EVENT_DEATH by ejection_fraction\")\nsns.barplot(x=df.ejection_fraction.value_counts(), y=df['DEATH_EVENT']);","49cb0f0a":"plt.figure(figsize=(15,7))\nplt.title(\"Average of EVENT_DEATH by serum creatinine\")\nsns.barplot(x=df.serum_creatinine.value_counts(), y=df['DEATH_EVENT']);","1dfc6af4":"plt.figure(figsize=(15,7))\nplt.title(\"Average of EVENT_DEATH by serum sodium\")\nsns.barplot(x=df.serum_sodium.value_counts(), y=df['DEATH_EVENT']);","db3f43ea":"plt.figure(figsize=(15,7))\nplt.title(\"Average of EVENT_DEATH by time\")\nsns.barplot(x=df.time.value_counts(), y=df['DEATH_EVENT']);","1397e873":"df.serum_sodium.value_counts()","c57cb706":"df.serum_creatinine.value_counts()","376efdb5":"df.ejection_fraction.value_counts()","658911fd":"df.time.value_counts()","52b9a53c":"sns.countplot(x='serum_creatinine',data=df);\nplt.xticks(rotation=90);","25fd4da2":"sns.countplot(x='ejection_fraction',data=df);","29bc734b":"plt.figure(figsize=(15,7))\nsns.countplot(x='serum_sodium',data=df);","b82887ed":"from sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.metrics import accuracy_score","44e40a3c":"x=df.drop('DEATH_EVENT', axis=1)\ny=df.DEATH_EVENT","3c85f637":"plt.figure(figsize=(20,8))\nsns.heatmap(df.corr(),annot=True,cmap=\"RdYlGn\");","e83fcf49":"df=df.drop('sex', axis=1)","05951e1c":"df=df.drop('diabetes', axis=1)","5a7b64a6":"df","36d9a300":"df.shape","196d3acb":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=5)","e003cb75":"print(x_train.shape)\nprint(y_train.shape)\nprint(x_test.shape)\nprint(y_test.shape)","3c4af4cd":"from sklearn.linear_model import LogisticRegression","79862d97":"logreg = LogisticRegression()\nlogreg.fit(x,y)\ny_pred = logreg.predict(x)\nprint(metrics.accuracy_score(y, y_pred)*100)","03034e83":"from sklearn.neighbors import KNeighborsClassifier","8816a142":"knn = KNeighborsClassifier(n_neighbors=5, p=2, metric='minkowski')\nknn.fit(x_train, y_train)\n\nprint('The accuracy of the knn classifier is {:.2f} out of 1 on training data'.format(knn.score(x_train, y_train)))\nprint('The accuracy of the knn classifier is {:.2f} out of 1 on test data'.format(knn.score(x_test, y_test)))","cfd43254":"from sklearn.svm import SVC","f6e939d5":"svm = SVC(kernel='rbf', random_state=0, gamma=.10, C=1.0)\nsvm.fit(x_train, y_train)\n\nprint('The accuracy of the svm classifier on training data is {:.2f} out of 1'.format(svm.score(x_train, y_train)))\n\nprint('The accuracy of the svm classifier on test data is {:.2f} out of 1'.format(svm.score(x_test, y_test)))","543a21ff":"import xgboost as xgb","35a82c59":"xgb_clf = xgb.XGBClassifier()\nxgb_clf = xgb_clf.fit(x_train, y_train)\n\nprint('The accuracy of the xgb classifier is {:.2f} out of 1 on training data'.format(xgb_clf.score(x_train, y_train)))\nprint('The accuracy of the xgb classifier is {:.2f} out of 1 on test data'.format(xgb_clf.score(x_test, y_test)))","be3d384a":"* import libraries","c294b9f2":"# Import Libraries","1413d034":"* after droping the sex and diabetes columns we gonna check the new shape","f62449d3":". our data don't need a cleaning there is no missing values","c935237c":". as we can see there is a high corrolation between death_event and age,serum sodium,serum creatinine,ejection fraction,and time.","e4da10f8":"* as we can see that the corrolation between death_event and sex,diabetes is very low so we goona drop these tow columns\n","750a5c63":" ## Setting Parametres ","ffd73f03":"# Logistic regression","3fc10fea":"# Data Spliting","68f46383":"* droping the target","763e2751":"* now we need to split the data to train and test parts","e084c417":"# Machine learning algorithms","5a7158a8":"  # Data visualization","2abe31de":"* after spliting data now we need to applicate the machine learning algorithms","e543b6bc":"* cheking the shape of all","c74efabe":"# XGBoost classifier","f9cdac4e":"# Import Data","70699387":"# Columns description\n1. anaemia:Decrease of red blood cells or hemoglobin (boolean)\n2. creatinine_phosphokinase:Level of the CPK enzyme in the blood (mcg\/L)\n3. diabetes:If the patient has diabetes (boolean)\n4. ejection_fraction:Ejection fraction (EF) is a measurement, expressed as a percentage, of how much blood the left ventricle pumps out with each contraction\n5. high_blood_pressure:blood hypertension\n6. platelets:are a component of blood whose function (along with the coagulation factors)\n7. serum_creatinine:Serum creatinine is widely interpreted as a measure only of renal function\n8. serum_sodium: to see how much sodium is in your blood it is particularly important for nerve and muscle function.\n\n","d3341329":". as we can see that we have 96 cases of death_event.","e25215fd":"* . as we can see that our data is only numurical"}}