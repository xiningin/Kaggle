{"cell_type":{"61152781":"code","3143fac4":"code","168935b4":"code","1cef9e0e":"code","edc08014":"code","9caf6989":"code","f8ddf344":"code","a921fc31":"code","b4bc73ec":"code","2ef9a0ea":"code","0cf6f9af":"code","727703d2":"code","8c2773aa":"code","e623ac7b":"code","77f5272a":"code","0feaea7b":"code","c1063a40":"code","aa3e30d6":"code","21e35b37":"code","3b8fd49f":"code","e37bd337":"code","a84a693e":"code","e4e3e96b":"code","66d990f5":"code","94e4ad85":"code","68c3c990":"code","2290ec82":"code","09542d61":"code","ed38229f":"code","1ff5f4e8":"code","6f943fc8":"code","5b7fe092":"code","7914f572":"code","21a3d431":"markdown","25559f8c":"markdown","5af187e8":"markdown","d00fa4ff":"markdown","f48429a6":"markdown","302b19e0":"markdown","2597041e":"markdown","ef808e32":"markdown","a74eb771":"markdown","2d57e0a5":"markdown","7ec6bda5":"markdown","591f47a2":"markdown","1ea998f8":"markdown","861c57a0":"markdown","91856499":"markdown","18a1a5fd":"markdown","9c228caf":"markdown","53a944c0":"markdown","c3c68677":"markdown","13ab1b03":"markdown","c3c39450":"markdown","f42f7d48":"markdown"},"source":{"61152781":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3143fac4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime as dt\nfrom datetime import datetime","168935b4":"data_df = pd.read_csv(\"\/kaggle\/input\/covid19-in-india\/covid_19_india.csv\")","1cef9e0e":"\ndata_df['Date'] = pd.to_datetime(data_df['Date'],dayfirst=True)\ndf1=data_df.groupby('Date').sum()\ndf1.reset_index(inplace=True)\n","edc08014":"df1['Recovery_Rate']=df1['Cured']\/df1['Confirmed']\ndf1['Death_Rate']=df1['Deaths']\/df1['Confirmed']\ndf1","9caf6989":"data_df.head(10)","f8ddf344":"data_df.columns.values","a921fc31":"data_df.info()","b4bc73ec":"data_df.describe()","2ef9a0ea":"data_df.drop('Sno', axis = 1,inplace=True)","0cf6f9af":"data_df.tail(36)","727703d2":"Total_Cured=print(data_df.iloc[-36:-1]['Cured'].sum())","8c2773aa":"Total_Death=print(data_df.iloc[-36:-1]['Deaths'].sum())","e623ac7b":"Total_Confirmed=print(data_df.iloc[-36:-1]['Confirmed'].sum())","77f5272a":"#State = len(list(set(data_df['State\/UnionTerritory'].values.tolist())))\nState = list(set(data_df['State\/UnionTerritory'].values.tolist()))\nState.sort()\nprint(State)","0feaea7b":"data_df[data_df['State\/UnionTerritory']=='Kerala'].tail()","c1063a40":"Cure = data_df.groupby('State\/UnionTerritory').max()[['Cured']]","aa3e30d6":"Death = data_df.groupby('State\/UnionTerritory').max()[['Deaths']]","21e35b37":"Confirm = data_df.groupby('State\/UnionTerritory').max()[['Confirmed']]","3b8fd49f":"Cure.head()","e37bd337":"Death.head()","a84a693e":"Confirm.head()","e4e3e96b":"fig = plt.figure(figsize=(20,10))\nplt.bar(x=np.arange(1,38),height=Cure['Cured'],color='green')\nplt.xticks(np.arange(1,38),State, rotation=90)\nplt.xlabel('States') \n# naming the y axis \nplt.ylabel('Cured') \n  \n# giving a title to my graph \nplt.title('Cured Cases')","66d990f5":"fig = plt.figure(figsize=(20,10))\nplt.bar(x=np.arange(1,38),height=Death['Deaths'],color='red')\nplt.xticks(np.arange(1,38),State, rotation=90)\nplt.xlabel('States') \n# naming the y axis \nplt.ylabel('Deaths') \n  \n# giving a title to my graph \nplt.title('Death Cases')","94e4ad85":"fig = plt.figure(figsize=(20,10))\nplt.bar(x=np.arange(1,38),height=Confirm['Confirmed'])\nplt.xticks(np.arange(1,38),State, rotation=90)\nplt.xlabel('States') \n# naming the y axis \nplt.ylabel('Confirm') \n  \n# giving a title to my graph \nplt.title('Confirmed Cases')","68c3c990":"fig = plt.figure(figsize=(13,13))\nconf_per_state = data_df.groupby('State\/UnionTerritory')['Confirmed'].max().sort_values(ascending=False)\nconf_sum=Total_Confirmed#last rows sum\ndef absolute_value(val):\n    a  = val\n    return (np.round(a,2))\nconf_per_state.plot(kind=\"pie\",title='Percentage of confirmed cases per country',autopct=absolute_value)\nplt.legend(loc=1, ncol = 7)\nplt.show()","2290ec82":"fig = plt.figure(figsize=(13,13))\n\ndeath_per_state = data_df.groupby('State\/UnionTerritory')['Deaths'].max().sort_values(ascending=False)\n\ndeath_sum=Total_Death #last rows sum\ndef absolute_value(val):\n    a  = val\n    return (np.round(a,2))\ndeath_per_state.plot(kind=\"pie\",title='Percentage of death cases per country',autopct=absolute_value)\nplt.legend(loc=1, ncol = 7)\nplt.show()","09542d61":"fig = plt.figure(figsize=(13,13))\n\ncured_per_state = data_df.groupby('State\/UnionTerritory')['Cured'].max().sort_values(ascending=False)\n\ncured_sum=Total_Cured #last rows sum\ndef absolute_value(val):\n    a  = val\n    return (np.round(a,2))\ncured_per_state.plot(kind=\"pie\",title='Percentage of cured cases per country',autopct=absolute_value,startangle=7)\nplt.legend(loc=1, ncol = 7)\nplt.show()","ed38229f":"group_cases=data_df[['Confirmed','Cured','Deaths','State\/UnionTerritory']].groupby('State\/UnionTerritory').max().sort_values('Confirmed',ascending=False).head(34)\ngroup_cases=group_cases.reset_index()\ngroup_cases","1ff5f4e8":"f, ax = plt.subplots(figsize=(15, 10))\nbar1=sns.barplot(x=\"Confirmed\",y=\"State\/UnionTerritory\",data=group_cases,\n            label=\"Confirmed\", color=\"b\")\n\n\nbar2=sns.barplot(x=\"Cured\", y=\"State\/UnionTerritory\", data=group_cases,\n            label=\"Cured\", color=\"g\")\n\n\nbar3=sns.barplot(x=\"Deaths\", y=\"State\/UnionTerritory\", data=group_cases,\n            label=\"Deaths\", color=\"r\")\n\nax.legend(loc=4, ncol = 1)\nplt.xlabel(\"Total Cases\")\nplt.show()","6f943fc8":"india_province_cases=data_df[['Confirmed','Cured','Deaths','State\/UnionTerritory']].groupby('State\/UnionTerritory').max().sort_values('Confirmed',ascending=False)\nindia_province_cases.plot(kind='bar',width=0.95,colormap='rainbow',figsize=(20,6))\nplt.show()","5b7fe092":"plt.figure(figsize= (14,8))\nplt.xticks(rotation = 90 ,fontsize = 10)\nplt.yticks(fontsize = 10)\nplt.xlabel(\"Dates\",fontsize = 20)\nplt.ylabel('Total cases',fontsize = 20)\nplt.title(\"Total Confirmed, Active, Death in India\" , fontsize = 20)\n\nax1 = plt.plot_date(data=df1,y= 'Confirmed',x= 'Date',label = 'Confirmed',linestyle ='-',color = 'b')\nax2 = plt.plot_date(data=df1,y= 'Cured',x= 'Date',label = 'Cured',linestyle ='-',color = 'g')\nax3 = plt.plot_date(data=df1,y= 'Deaths',x= 'Date',label = 'Death',linestyle ='-',color = 'r')\nplt.legend();","7914f572":"plt.figure(figsize= (14,8))\nplt.xticks(rotation = 90 ,fontsize = 10)\nplt.yticks(fontsize = 10)\nplt.xlabel(\"Dates\",fontsize = 20)\nplt.ylabel('Rate',fontsize = 20)\nplt.title(\"Recovery and Death Rate in India\" , fontsize = 20)\n\nax1 = plt.plot_date(data=df1,y= 'Recovery_Rate',x= 'Date',label = 'Recovery_rate',linestyle ='-',color = 'g')\nax2 = plt.plot_date(data=df1,y= 'Death_Rate',x= 'Date',label = 'Death_rate',linestyle ='-',color = 'r')\n\nplt.legend();","21a3d431":"## **Printing all the different states in a list.**","25559f8c":"## **Importing Libraries**","5af187e8":"## **Total Cured, Deaths and Confirmed values in each state**","d00fa4ff":"## **Visualizing Cured values for different states**","f48429a6":"## **Visualizing Confirmed values for different states**","302b19e0":"## **Visualizing Confirmed, Cured and Death cases for different states combinedly.**","2597041e":"## **Visualizing total cases in India according to dates **","ef808e32":"## **Converting string Date time into Python Date time object.**","a74eb771":"## **Visualizing Death values for different states.**","2d57e0a5":"## **Getting some statistical details.**","7ec6bda5":"## **Getting different columns**","591f47a2":"## **Reading csv data**","1ea998f8":"## ***Please Upvote if you liked it.***","861c57a0":"# COVID-19 Analysis and Visualization\n## Introduction to COVID-19 \n![3D_medical_animation_coronavirus_structure-min.jpg](attachment:3D_medical_animation_coronavirus_structure-min.jpg)\n\n#### Coronaviruses are a large family of viruses which may cause illness in animals or humans. In humans, several coronaviruses are known to cause respiratory infections ranging from the common cold to more severe diseases such as Middle East Respiratory Syndrome (MERS) and Severe Acute Respiratory Syndrome (SARS). The most recently discovered coronavirus causes coronavirus disease COVID-19 - World Health Organization\n\n#### The number of new cases are increasing day by day around the world. This dataset has information from the states and union territories of India at daily level.","91856499":"## **Visualizing Confirmed values for different states in a pie chart**","18a1a5fd":"## **Total Cured,Deaths and Confirmed values.**","9c228caf":"## **Printing a concise summary of a DataFrame.**","53a944c0":"## **Visualizing Death values for different states in a pie chart**","c3c68677":"## **Recovery rate and Date Rate in India**","13ab1b03":"## **Making new columns of Recovery and Death Rate.**","c3c39450":"## **Visualizing Cured values for different states in a pie chart**","f42f7d48":"## **As the data is cumulative, so printing last 36 values of the data.**"}}