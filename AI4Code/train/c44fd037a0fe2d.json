{"cell_type":{"1b56d9b6":"code","084b4ac7":"code","d889ed2e":"code","badc3fe4":"code","50d07d3b":"code","6aba1caf":"code","ec11e1c7":"markdown","81326465":"markdown","19b7c349":"markdown","a3c0e00d":"markdown","687e5432":"markdown","6b7bde38":"markdown"},"source":{"1b56d9b6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","084b4ac7":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n","d889ed2e":"dataset = pd.read_csv('..\/input\/decision_tree_dataset.csv')\nX = dataset.iloc[:, 1:2].values\ny = dataset.iloc[:, 2].values","badc3fe4":"from sklearn.tree import DecisionTreeRegressor\nregressor = DecisionTreeRegressor(random_state = 0)\nregressor.fit(X, y)","50d07d3b":"\ny_pred = regressor.predict([[6.5]])\ny_pred","6aba1caf":"X_grid = np.arange(min(X), max(X), 0.01)\nX_grid = X_grid.reshape((len(X_grid), 1))\nplt.scatter(X, y, color = 'red')\nplt.plot(X_grid, regressor.predict(X_grid), color = 'blue')\nplt.title('Truth or Bluff (Decision Tree Regression)')\nplt.xlabel('Position level')\nplt.ylabel('Salary')\nplt.show()","ec11e1c7":"# Predicting a new result","81326465":"# Visualising the Decision Tree Regression results (higher resolution)","19b7c349":"# Importing the libraries","a3c0e00d":"# Fitting Decision Tree Regression to the dataset","687e5432":"# Importing the dataset","6b7bde38":"# Decision Tree regression \n\nPython | Decision Tree Regression using sklearn\n\nDecision Tree is a decision-making tool that uses a flowchart-like tree structure or is a model of decisions and all of their possible results, including outcomes, input costs and utility.\n\nDecision-tree algorithm falls under the category of supervised learning algorithms. It works for both continuous as well as categorical output variables.\n\nThe branches\/edges represent the result of the node and the nodes have either:\n\n    Conditions [Decision Nodes]\n    Result [End Nodes]\n\n"}}