{"cell_type":{"1c6ad600":"code","5f7d343d":"code","9ba628fa":"code","86098d1c":"code","43a13fda":"code","501165a8":"code","2de06402":"code","64cda5f2":"code","10a62d73":"code","6a456ae0":"code","5a2528d8":"code","f0ed0710":"code","a16b6e04":"code","08ffcbbd":"code","f71b6e53":"code","4a0acb75":"code","ced0b211":"code","3f04f145":"code","4e160f72":"code","eb5b0936":"code","a43108f7":"code","6cd608bb":"code","4fcda814":"code","b7f0eb4a":"code","5f3436a6":"code","7c042e40":"code","4a1e0eee":"code","1b8a08a8":"code","7c561ea3":"code","6f1743f1":"markdown","414d7a75":"markdown","5221a2a2":"markdown","3a7fd5b9":"markdown","2373b43b":"markdown","c88774fe":"markdown","bf75e16b":"markdown","05e02e15":"markdown","ebcdfb98":"markdown","7453e8f1":"markdown","d5bd76c3":"markdown","6c76ce09":"markdown"},"source":{"1c6ad600":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport os \nimport seaborn as sns\nimport geopandas as gpd\nimport folium\nfrom folium import plugins\nimport datetime\nimport math","5f7d343d":"os.listdir(\"..\/input\/ieee-fraud-detection\")","9ba628fa":"train_identity=pd.read_csv(\"..\/input\/ieee-fraud-detection\/train_identity.csv\")\ntrain_transaction=pd.read_csv(\"..\/input\/ieee-fraud-detection\/train_transaction.csv\")\ntest_transaction=pd.read_csv(\"..\/input\/ieee-fraud-detection\/test_transaction.csv\")\ntest_identity=pd.read_csv(\"..\/input\/ieee-fraud-detection\/test_identity.csv\")\nprint(\"train_identity_data_size: \",len(train_identity))\nprint(\"train_transaction_data_size: \",len(train_transaction))\nprint(\"test_transaction_data_size: \",len(test_transaction))\nprint(\"test_identity_data_size: \",len(test_identity))","86098d1c":"train_identity.head()","43a13fda":"plt.figure(figsize=(10,10))\nsns.barplot(x=train_identity.isnull().sum().sort_values(ascending=False),y=train_identity.isnull().sum().sort_values(ascending=False).index)\nplt.title(\"counts of missing value for train_identity\",size=20)","501165a8":"train_identity_new=pd.DataFrame(train_identity,columns=['TransactionID','id_01','id_12','id_38','id_37','id_36','id_35','id_15','id_29','id_28','id_11','id_02','DeviceType','id_31','id_17','id_19','id_20'])\ntrain_identity_new=train_identity_new.dropna(subset=['id_38','id_37','id_36','id_35','id_15','id_29','id_28','id_11','id_02','DeviceType','id_31','id_17','id_19','id_20'])\ntrain_identity_new.head()","2de06402":"len(train_identity_new)","64cda5f2":"plt.figure(figsize=(8,8))\ncorr = train_identity_new.corr()\nsns.heatmap(corr, xticklabels=corr.columns,yticklabels=corr.columns,annot=True)\nplt.title(\"correlation plot for train_identity_new\",size=28)","10a62d73":"fig,ax=plt.subplots(2,2,figsize=(20,20))\ny=train_identity_new.id_01.value_counts().index\nx=train_identity_new.id_01.value_counts()\nsns.barplot(x=x,y=y,ax=ax[0,0],orient='h')\nax[0,0].set_title(\"Bar chart for id_01\",size=20)\nax[0,0].set_xlabel('counts',size=18)\nax[0,0].set_ylabel('')\n\ny=train_identity_new.id_12.value_counts().index\nx=train_identity_new.id_12.value_counts()\nsns.barplot(x=x,y=y,ax=ax[0,1])\nax[0,1].set_title(\"Bar chart for id_12\",size=20)\nax[0,1].set_xlabel('counts',size=18)\nax[0,1].set_ylabel('')\n\ny=train_identity_new.id_38.value_counts().index\nx=train_identity_new.id_38.value_counts()\nsns.barplot(x=x,y=y,ax=ax[1,0],order=['T','F'])\nax[1,0].set_title(\"Bar chart for id_38\",size=20)\nax[1,0].set_xlabel('counts',size=18)\nax[1,0].set_ylabel('')\n\ny=train_identity_new.id_37.value_counts().index\nx=train_identity_new.id_37.value_counts()\nsns.barplot(x=x,y=y,ax=ax[1,1],order=['T','F'])\nax[1,1].set_title(\"Bar chart for id_37\",size=20)\nax[1,1].set_xlabel('counts',size=18)\nax[1,1].set_ylabel('')","6a456ae0":"fig,ax=plt.subplots(2,2,figsize=(20,20))\ny=train_identity_new.id_36.value_counts().index\nx=train_identity_new.id_36.value_counts()\nsns.barplot(x=x,y=y,ax=ax[0,0],order=['T','F'])\nax[0,0].set_title(\"Bar chart for id_36\",size=20)\nax[0,0].set_xlabel('counts',size=18)\nax[0,0].set_ylabel('')\n\ny=train_identity_new.id_35.value_counts().index\nx=train_identity_new.id_35.value_counts()\nsns.barplot(x=x,y=y,ax=ax[0,1],order=['T','F'])\nax[0,1].set_title(\"Bar chart for id_35\",size=20)\nax[0,1].set_xlabel('counts',size=18)\nax[0,1].set_ylabel('')\n\ny=train_identity_new.id_15.value_counts().index\nx=train_identity_new.id_15.value_counts()\nsns.barplot(x=x,y=y,ax=ax[1,0])\nax[1,0].set_title(\"Bar chart for id_15\",size=20)\nax[1,0].set_xlabel('counts',size=18)\nax[1,0].set_ylabel('')\n\ny=train_identity_new.id_29.value_counts().index\nx=train_identity_new.id_29.value_counts()\nsns.barplot(x=x,y=y,ax=ax[1,1])\nax[1,1].set_title(\"Bar chart for id_29\",size=20)\nax[1,1].set_xlabel('counts',size=18)\nax[1,1].set_ylabel('')","5a2528d8":"del train_identity\ndel test_identity\ntrain_transaction.head()","f0ed0710":"len(train_transaction)","a16b6e04":"plt.figure(figsize=(18,70))\nsns.barplot(x=train_transaction.isnull().sum().sort_values(ascending=False),y=train_transaction.isnull().sum().sort_values(ascending=False).index)\nplt.title(\"counts of missing value for train_transaction\",size=20)","08ffcbbd":"\ntrain_transaction_new=pd.DataFrame(train_transaction,columns=train_transaction.isnull().sum().sort_values()[:250].index)\ntrain_transaction_new=train_transaction_new.drop(columns=['TransactionID'])\ntrain_transaction_new_label=train_transaction_new.isFraud\ntrain_transaction_new=train_transaction_new.drop(columns=['isFraud'])\ntrain_transaction_new.head()","f71b6e53":"len(train_transaction_new)","4a0acb75":"test_transaction.head()","ced0b211":"len(test_transaction)","3f04f145":"plt.figure(figsize=(18,70))\nsns.barplot(x=test_transaction.isnull().sum().sort_values(ascending=False),y=test_transaction.isnull().sum().sort_values(ascending=False).index)\nplt.title(\"counts of missing value for test_transaction\",size=20)","4e160f72":"test_transaction_new=pd.DataFrame(test_transaction,columns=train_transaction.isnull().sum().sort_values()[:250].index)\ndel test_transaction\ndel train_transaction\nID=test_transaction_new.TransactionID\ntest_transaction_new=test_transaction_new.drop(columns=['TransactionID','isFraud'])\ntest_transaction_new.head()","eb5b0936":"len(test_transaction_new)","a43108f7":"from sklearn.preprocessing import LabelEncoder\nlabelencoder = LabelEncoder()\nfor i in list(train_transaction_new.select_dtypes(include=['object']).columns):\n    test_transaction_new[i] = labelencoder.fit_transform(test_transaction_new[i].astype('str'))\n    train_transaction_new[i] = labelencoder.fit_transform(train_transaction_new[i].astype('str'))\ntest_transaction_new.ProductCD[:5]\n","6cd608bb":"train_transaction_new.ProductCD[:5]","4fcda814":"#train_transaction_new=train_transaction_new.fillna(-999)\n#test_transaction_new=test_transaction_new.fillna(-999)\ntrain_transaction_new=train_transaction_new.fillna(train_transaction_new.median())\ntest_transaction_new=test_transaction_new.fillna(train_transaction_new.median())","b7f0eb4a":"from sklearn.linear_model import LogisticRegression  \nfrom sklearn.preprocessing import StandardScaler  \nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(train_transaction_new,train_transaction_new_label,test_size=0.2)\ndel train_transaction_new\nlr = LogisticRegression(C=0.09,solver='lbfgs')  \nlr.fit(X_train, y_train)  \nproba_test = lr.predict_proba(X_test)[:, 1]\nLR_result=pd.DataFrame({'pred':proba_test,'real':y_test})\nLR_result['pred_0_1']=LR_result.pred.apply(lambda x:1 if x>=0.5 else 0)","5f3436a6":"print('LR_acc: ',sum(LR_result.real==LR_result.pred_0_1)\/len(LR_result))","7c042e40":"import lightgbm as lgb  \nimport pickle  \nfrom sklearn.metrics import roc_auc_score  \nlgb_train = lgb.Dataset(X_train, y_train)  \nlgb_eval = lgb.Dataset(X_test, y_test, reference=lgb_train) \nparams = {  \n    'boosting_type': 'gbdt',  \n    'objective': 'binary',  \n    'metric': {'binary_logloss', 'auc'},  \n    'num_leaves':240,  \n    'max_depth': 15,  \n    'min_data_in_leaf': 100,  \n    'learning_rate': 0.05,  \n    'feature_fraction': 0.95,  \n    'bagging_fraction': 0.95,  \n    'bagging_freq': 5,  \n    'lambda_l1': 0,    \n    'lambda_l2': 0, \n    'min_gain_to_split': 0.1,  \n    'verbose': 0,  \n    'is_unbalance': True  \n}  ","4a1e0eee":"gbm = lgb.train(params,  lgb_train,  \n                num_boost_round=10000,  \n                valid_sets=lgb_eval,early_stopping_rounds=500)  ","1b8a08a8":"gbm.predict(test_transaction_new[:10], num_iteration=gbm.best_iteration) ","7c561ea3":"LR_TEST=lr.predict_proba(test_transaction_new)[:, 1]\nLGBM_TEST= gbm.predict(test_transaction_new, num_iteration=gbm.best_iteration) \n\nprediction=pd.DataFrame({'TransactionID':ID,'LR_TEST':LR_TEST,'LGBM_TEST':LGBM_TEST})\n\nprediction.to_csv('prediction.csv',index=False)\n\nsubmission=pd.DataFrame({'TransactionID':ID,'isFraud':LGBM_TEST})\n\n\nsubmission.to_csv('submission.csv',index=False)","6f1743f1":"'train_transaction.csv' data size is 590,540,and the variables include 'TransactionID','isFraud','TransactionDT',...other 391 type.\n\nThere are a lot of missing values in 'train_transaction.csv'.especially 'dist 2','D7','D13','D14','D12','D6','D8','D9'.","414d7a75":"<h3 id=\"21\">2.1 Visulization for train_identity<\/h3>","5221a2a2":"* [1.DataOverview](#1.DataOverview)\n* [2.Visualization](#2.Visualization)\n    * [2.1 Visulization for train_identity](#21)\n    * [2.2 Visulization for train_transaction](#22)\n    * [2.3 Visulization for test_transaction](#23)\n* [3.LGBM\/LR](#3.LGBM\/LR)","3a7fd5b9":"# 2.Visualization","2373b43b":"I only use 'TransanctionID','id_01','id_12','id_38','id_37','id_36','id_35','id_15','id_29','id_28','id_11',\n'id_02','DeviceType','id_31','id_17','id_19',and 'id_20' 'in train_identity.csv'.\n\nSince there are too many missing values for other variable. ","c88774fe":"# 1.DataOverview","bf75e16b":"![image.png](attachment:image.png)","05e02e15":"# 3.LGBM\/LR","ebcdfb98":"<h3 id=\"22\">2.2 Visulization for train_transaction<\/h3>","7453e8f1":"'train_identity.csv' data size is 144,233,and the variables include 'TransactionID','id_01',id_02,...other 38 type.\n\nThere are a lot of missing values in 'train_identity.csv'.especially 'id_24','id_25','id_07','id_08','id_21','id_26'\n\n,'id_22','id_27',and'id_23'.\n\n","d5bd76c3":"There are 5 csv in this data,including 'train_identity.csv','train_transaction.csv','test_transaction.csv','test_identity.csv',and \n\n'sample_submission.csv'.First, I will use the train data to make some visualization.\n\nPlease upvote it if you like this kernel.\n\nThank you\n\nThe photo is from:https:\/\/ac-illust.com\/tw\/clip-art\/626399\/%E4%B8%80%E9%9A%BB%E9%9E%A0%E8%BA%AC%E7%9A%84%E5%85%94%E5%AD%90","6c76ce09":"<h3 id=\"23\">2.3 Visulization for test_transaction<\/h3>"}}