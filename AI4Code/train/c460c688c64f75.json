{"cell_type":{"eff64db4":"code","b6fb226f":"code","939a3dd5":"code","e0f5f24e":"code","4b140a93":"code","a2809fd6":"markdown","4ec23985":"markdown","5df5e5c0":"markdown","86604906":"markdown","581eebee":"markdown","a5f0371d":"markdown","2d987ba6":"markdown","0d6b808f":"markdown","4f9b11d2":"markdown","5af3e5a1":"markdown"},"source":{"eff64db4":"import sys\nsys.path.insert(1, '..\/input\/kaggle-colors')\n\nfrom kaggle_colors_util import *","b6fb226f":"from IPython.display import Markdown as md\n\nall_available_colors = [COLOR_GREEN_LIGHT, COLOR_GREEN, COLOR_GREEN_DARK,\n                        COLOR_BLUE_LIGHT, COLOR_BLUE, COLOR_BLUE_DARK,\n                        COLOR_VIOLET_LIGHT, COLOR_VIOLET, COLOR_VIOLET_DARK,\n                        COLOR_ORANGE_LIGHT,COLOR_ORANGE, COLOR_ORANGE_DARK,\n                        COLOR_GOLD_LIGHT, COLOR_GOLD, COLOR_GOLD_DARK, \n                        COLOR_GREY, COLOR_GREY_DARK, COLOR_YELLOW]\nall_available_colors_names = ['COLOR_GREEN_LIGHT', 'COLOR_GREEN', 'COLOR_GREEN_DARK',\n                              'COLOR_BLUE_LIGHT', 'COLOR_BLUE', 'COLOR_BLUE_DARK',\n                              'COLOR_VIOLET_LIGHT', 'COLOR_VIOLET', 'COLOR_VIOLET_DARK',\n                              'COLOR_ORANGE_LIGHT', 'COLOR_ORANGE', 'COLOR_ORANGE_DARK',\n                              'COLOR_GOLD_LIGHT', 'COLOR_GOLD', 'COLOR_GOLD_DARK', \n                              'COLOR_GREY', 'COLOR_GREY_DARK', 'COLOR_YELLOW']\nto_display=''\nfor i, colors in enumerate(zip(all_available_colors, all_available_colors_names)):\n    end=' '\n    if (i+1) % 3 == 0:\n        end='<br>'\n    to_display += f'**<span style=\"color:{colors[0]};font-size:x-large;\">{colors[1]}<\/span>**{end}'\ndisplay(md(to_display))","939a3dd5":"import plotly.graph_objects as go\n\nx = {'Novice':'https:\/\/i.postimg.cc\/1t8L8yN8\/novice.png', \n     'Contributor':'https:\/\/i.postimg.cc\/L8RKxdGW\/contributor.png', \n     'Expert':'https:\/\/i.postimg.cc\/qvLfYbTv\/expert.png', \n     'Master':'https:\/\/i.postimg.cc\/JhzwWNrc\/master.png', \n     'Grandmaster':'https:\/\/i.postimg.cc\/mrXvZPhx\/grandmaster.png'}\ncolors = [COLOR_GREEN, COLOR_BLUE, COLOR_VIOLET, COLOR_ORANGE, COLOR_GOLD]\ny = [-3, 1, 5, 10, 15]\n\nfig = go.Figure(data=[go.Bar(\n            x=[*x], y=y,\n            text=colors,\n            textposition='auto',\n            marker_color=colors\n        )])\n\nfor label, img in x.items():\n    fig.add_layout_image(\n        dict(\n            source=img,\n            xref=\"x\", yref=\"paper\",\n            x=label, y=1.05,\n            sizex=4, sizey=0.2,\n            xanchor=\"center\", yanchor=\"bottom\"\n        )\n    )\nfig.update_layout(template='plotly_white',\n                  margin=dict(r=10, l=10, b=0, t=110),)\n\nfig.show()","e0f5f24e":"years = ['2016','2017','2018']\n\nfig = go.Figure()\nfig.add_trace(go.Bar(x=years, y=[500, 600, 700],\n                base=[-500,-600,-700],\n                marker_color=COLOR_GREY,\n                name='expenses'))\nfig.add_trace(go.Bar(x=years, y=[300, 400, 700],\n                base=0,\n                marker_color=[COLOR_BLUE]*2+[COLOR_YELLOW],\n                name='revenue'\n                ))\nfig.update_layout(template='plotly_white',\n                  showlegend = False,)\nfig.show()","4b140a93":"import plotly.graph_objects as go\nimport numpy as np\n\ntitle = 'Main Source for News'\nlabels = ['Television', 'Newspaper', 'Internet', 'Radio']\ncolors = [COLOR_BLUE_LIGHT, COLOR_BLUE, COLOR_YELLOW, COLOR_BLUE_DARK]\n\nmode_size = [8, 8, 12, 8]\nline_size = [2, 2, 4, 2]\n\nx_data = np.vstack((np.arange(2001, 2014),)*4)\n\ny_data = np.array([\n    [74, 82, 80, 74, 73, 72, 74, 70, 70, 66, 66, 69],\n    [45, 42, 50, 46, 36, 36, 34, 35, 32, 31, 31, 28],\n    [13, 14, 20, 24, 20, 24, 24, 40, 35, 41, 43, 50],\n    [18, 21, 18, 21, 16, 14, 13, 18, 17, 16, 19, 23],\n])\n\nfig = go.Figure()\n\nfor i in range(0, 4):\n    fig.add_trace(go.Scatter(x=x_data[i], y=y_data[i], mode='lines',\n        name=labels[i],\n        line=dict(color=colors[i], width=line_size[i]),\n        connectgaps=True,\n    ))\n\n    # endpoints\n    fig.add_trace(go.Scatter(\n        x=[x_data[i][0], x_data[i][-1]],\n        y=[y_data[i][0], y_data[i][-1]],\n        mode='markers',\n        marker=dict(color=colors[i], size=mode_size[i])\n    ))\n\nfig.update_layout(\n    xaxis=dict(\n        showline=True,\n        showgrid=False,\n        showticklabels=True,\n        linecolor=COLOR_GREY,\n        linewidth=2,\n        ticks='outside',\n        tickfont=dict(\n            family='Arial',\n            size=12,\n            color=COLOR_GREY_DARK,\n        ),\n    ),\n    yaxis=dict(\n        showgrid=False,\n        zeroline=False,\n        showline=False,\n        showticklabels=False,\n    ),\n    autosize=False,\n    margin=dict(\n        autoexpand=False,\n        l=100,\n        r=20,\n        t=110,\n    ),\n    showlegend=False,\n    plot_bgcolor='white'\n)\n\nannotations = []\n\n# Adding labels\nfor y_trace, label, color in zip(y_data, labels, colors):\n    # labeling the left_side of the plot\n    annotations.append(dict(xref='paper', x=0.05, y=y_trace[0],\n                                  xanchor='right', yanchor='middle',\n                                  text=label + ' {}%'.format(y_trace[0]),\n                                  font=dict(family='Arial',\n                                            size=16),\n                                  showarrow=False))\n    # labeling the right_side of the plot\n    annotations.append(dict(xref='paper', x=0.95, y=y_trace[11],\n                                  xanchor='left', yanchor='middle',\n                                  text='{}%'.format(y_trace[11]),\n                                  font=dict(family='Arial',\n                                            size=16),\n                                  showarrow=False))\n# Title\nannotations.append(dict(xref='paper', yref='paper', x=0.0, y=1.05,\n                              xanchor='left', yanchor='bottom',\n                              text='Main Source for News',\n                              font=dict(family='Arial',\n                                        size=30,\n                                        color=COLOR_GREY_DARK),\n                              showarrow=False))\n# Source\nannotations.append(dict(xref='paper', yref='paper', x=0.5, y=-0.1,\n                              xanchor='center', yanchor='top',\n                              text='Source: PewResearch Center & ' +\n                                   'Storytelling with data',\n                              font=dict(family='Arial',\n                                        size=12,\n                                        color=COLOR_GREY),\n                              showarrow=False))\n\nfig.update_layout(annotations=annotations)\n\nfig.show()","a2809fd6":"***\n***","4ec23985":"<div class=\"alert alert-block alert-info\"> \ud83d\udccc Please remember to firstly add \u2795 <a href=https:\/\/www.kaggle.com\/fergusfindley\/kaggle-colors>kaggle-colors dataset<\/a> to your notebook<\/div>","5df5e5c0":"# Available colors","86604906":"![image.png](attachment:9734e5b1-c3f6-4a9a-81ae-03b8be06a6bf.png)","581eebee":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#B8B8B8;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n    <p style=\"padding: 10px; color:white;\">\nIf you find this notebook useful or you just like it, please upvote \u25b2.<br>\n        Use this link <a href=https:\/\/www.kaggle.com\/fergusfindley\/how-to-use-kaggle-colors-util>How to use 'Kaggle colors util'?<\/a> to cite.\n        Questions\/feedback? \u2192 <a href=https:\/\/www.kaggle.com\/fergusfindley\/how-to-use-kaggle-colors-util\/comments>comment<\/a>.\n    <\/p>\n<\/div>","a5f0371d":"***","2d987ba6":"# Primary Blue, Grey and active color Yellow","0d6b808f":"# import all colors from util","4f9b11d2":"# All brand colors","5af3e5a1":"<div class=\"alert alert-block alert-success\">  \nAlternatively you can use utility script with <b>File \u25ba Add utility script \u25ba kaggle_colors_util<\/b> \ud83d\ude0a\n<\/div>"}}