{"cell_type":{"01b77e26":"code","f15ad5b2":"code","e758615b":"code","158e8f4d":"code","2f5adf9b":"code","fb2fa879":"code","6de26f37":"code","0fd0dc97":"code","f6d3d7f0":"code","60783a83":"code","cf629ed8":"code","97a799f4":"code","05aa744f":"code","89dddfa3":"code","50a94c23":"code","6455505f":"code","bb8c4764":"code","864a3bc3":"code","703dc556":"code","eb6b996b":"code","8e98ab1a":"code","46dec789":"code","0f0a154d":"code","7162e6f0":"code","a71f18ce":"code","81c1e421":"code","5b5f846d":"code","9e41a6c0":"code","c32427dc":"code","c70ff716":"code","6a0f6b37":"code","6573038b":"code","2fe2ec04":"code","b2539746":"code","e96bb0bb":"code","e1cd4238":"code","ca3d7e30":"code","37073e47":"code","76ec66e8":"code","3d9fbfab":"code","fe8622fd":"code","a1405d4f":"code","61dfcfb9":"code","35bc1e55":"code","b46f669b":"code","828010b2":"markdown","aaa5d358":"markdown","9bba48b7":"markdown","be622292":"markdown","cab4ab5b":"markdown","fc24a609":"markdown","9c4dff00":"markdown","25ce67ee":"markdown","382ef0d3":"markdown","4206647f":"markdown","6208ac38":"markdown","b6604020":"markdown","069f0dc6":"markdown","efdab1cf":"markdown","5bd0e112":"markdown","5ad1c1e0":"markdown","36ac86fd":"markdown","3d068659":"markdown","265a9ed6":"markdown","b32fbd7c":"markdown","54f85733":"markdown","54748c77":"markdown","20b201e8":"markdown","33f38d4a":"markdown","d854af50":"markdown","0df46370":"markdown","c94e0d99":"markdown","c8b861f4":"markdown","04f13601":"markdown","652097ee":"markdown","3e858fb6":"markdown","0b2098ea":"markdown","94b6396b":"markdown","13097baa":"markdown","6e0673ce":"markdown","0a3d80f9":"markdown","cccc7c0c":"markdown","de728353":"markdown","386146be":"markdown","503182f1":"markdown","5e2bbe7e":"markdown","7410e529":"markdown","320e6164":"markdown","eb8c8467":"markdown","e8eef691":"markdown","6fc250bb":"markdown","aa30a00f":"markdown","c04f2293":"markdown","c1c9927c":"markdown","78f6386b":"markdown","f70b8198":"markdown","d9766a8f":"markdown","21c6c299":"markdown","a1798e5f":"markdown","02393ec4":"markdown","a144fb7f":"markdown","3e71b83f":"markdown","f2478624":"markdown","f03a2d11":"markdown","7b61d30e":"markdown","9db138b0":"markdown"},"source":{"01b77e26":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f15ad5b2":"import missingno as msno\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# library for seasonal decomposition\nfrom statsmodels.tsa.seasonal import seasonal_decompose\n# for map\nimport plotly.express as px\n# set seaborn style\nsns.set_style(\"white\")","e758615b":"df = pd.read_excel(\"..\/input\/dataanz\/ANZ synthesised transaction dataset.xlsx\")","158e8f4d":"# print first five rows\ndf.head()","2f5adf9b":"# count number of missing values\ndf.isnull().sum().sort_values(ascending = True)*100\/df.shape[0]","fb2fa879":"# visualize missing values\nmsno.matrix(df);","6de26f37":"df.drop(['bpay_biller_code', 'merchant_code'],axis = 1, inplace=True)","0fd0dc97":"# print first five rows of data\ndf.head()","f6d3d7f0":"# check data types\ndf.dtypes","60783a83":"df.status = df.status.astype('string')\ndf.account = df.account.astype('string')\ndf.currency = df.currency.astype('string')","cf629ed8":"# split long_lat and convert to numeric\ndf['long'], df['lat'] = df.long_lat.str.split(' ',1).str\ndf.drop('long_lat', axis = 1, inplace = True)","97a799f4":"# convert to numeric\ndf['long']  = df['long'].astype('float')\ndf['lat'] = df['lat'].astype('float')\ndf.txn_description = df.txn_description.astype('string')","05aa744f":"df.merchant_id = df.merchant_id.astype(\"string\")","89dddfa3":"df.merchant_id.isnull().sum()","50a94c23":"df.movement.value_counts()","6455505f":"print(df.movement.dtype)\n# convert to string\ndf.movement = df.movement.astype('string')\ndf.first_name = df.first_name.astype('string')","bb8c4764":"df.describe()","864a3bc3":"df.card_present_flag.value_counts(normalize=True).plot(kind='bar')\nplt.title(\"Card Present Status\")\nplt.xlabel(\"Flag\")\nplt.ylabel(\"Count\");","703dc556":"# calculate percentage\ndf_p = df.status.value_counts()*100\/df.status.count()\ndf_p.plot(kind='bar')\nplt.title(\"Transaction Status\")\nplt.xlabel(\"Flag\")\nplt.ylabel(\"Percentage\");","eb6b996b":"account_top = df.account.value_counts().sort_values(ascending=False)\naccount_top[0:10].plot(kind='bar')\nplt.title(\"Top 10 account by Transaction\")\nplt.xlabel(\"Account\")\nplt.ylabel(\"Tranaction Count\");","8e98ab1a":"# Distribution of Transaction Count\naccount_top.hist()\nplt.title(\"Distribution of Transaction Count by Account\")\nplt.xlabel(\"Transaction Count\")\nplt.ylabel(\"Frequency\");","46dec789":"# calculate percentage\ndf_p = df.txn_description.value_counts()*100\/df.status.count()\ndf_p.plot(kind='bar')\nplt.title(\"Transaction Description in Percentage\")\nplt.xlabel(\"Transaction Description\")\nplt.ylabel(\"Percentage\");","0f0a154d":"account_top = df.merchant_id.value_counts().sort_values(ascending=False)\naccount_top[0:10].plot(kind='bar')\nplt.title(\"Top 10 Merchant Transaction\")\nplt.xlabel(\"Merchant Id\")\nplt.ylabel(\"Tranaction Count\");","7162e6f0":"# Distribution of Transaction Count for Merchants\naccount_top.hist()\nplt.title(\"Distribution of Merchant Transaction\")\nplt.xlabel(\"Transaction Count\")\nplt.ylabel(\"Frequency\");","a71f18ce":"# Distribution of Balance\ndf.balance.hist()\nplt.title(\"Distribution of Balance\")\nplt.xlabel(\"Balance\")\nplt.ylabel(\"Frequency\");","81c1e421":"# Distribution of age\ndf.age.hist()\nplt.title(\"Distribution of Age\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"Frequency\");","5b5f846d":"# Distribution of Amount\ndf.amount.hist()\nplt.title(\"Distribution of Amount\")\nplt.xlabel(\"Amount\")\nplt.ylabel(\"Frequency\");","9e41a6c0":"# calculate percentage\ndf_p = df.gender.value_counts()\/df.gender.count()\ndf_p.plot(kind='bar')\nplt.title(\"Transaction by Gender\")\nplt.xlabel(\"Gender\")\nplt.ylabel(\"Percent\");","c32427dc":"account_top = df.merchant_suburb.value_counts().sort_values(ascending=False)\naccount_top[0:10].plot(kind='bar')\nplt.title(\"Top 10 Merchant merchant_suburb\")\nplt.xlabel(\"merchant_suburb\")\nplt.ylabel(\"Count\");\n","c70ff716":"account_top = df.merchant_state.value_counts().sort_values(ascending=False)\naccount_top[0:10].plot(kind='bar')\nplt.title(\"Top 10 Merchant merchant state\")\nplt.xlabel(\"merchant_state\")\nplt.ylabel(\"Count\");","6a0f6b37":"# calculate movement\ndf_p = df.movement.value_counts()*100\/df.movement.count()\ndf_p.plot(kind='bar')\nplt.title(\"Transaction by movement\")\nplt.xlabel(\"movement\")\nplt.ylabel(\"Percent\");","6573038b":"# balance\nsns.boxplot('balance',data = df)\nplt.title(\"Boxplot of Tranaction Balance\")\nplt.xlabel(\"Balance\");","2fe2ec04":"# age\nsns.boxplot('age',data = df)\nplt.title(\"Boxplot of Age\")\nplt.xlabel(\"Age\");","b2539746":"# amount\nsns.boxplot('amount',data = df)\nplt.title(\"Boxplot of Tranaction Amount\")\nplt.xlabel(\"Amount\");","e96bb0bb":"df_time = df.groupby('date').size()\ndf_time.plot()\nplt.title(\"Daily Transaction Volume\")\nplt.xlabel(\"Date\")\nplt.ylabel(\"Count\");","e1cd4238":"df_tran = df.groupby('date')['amount'].mean()\ndf_tran.plot()\nplt.title(\"Average Daily Transaction Amount\")\nplt.xlabel(\"Date\")\nplt.ylabel(\"Amount\");","ca3d7e30":"result = seasonal_decompose(df_time, model='additive', period=1)\nresult.plot()\nplt.show()","37073e47":"result = seasonal_decompose(df_tran, model='multiplicative', period=1)\nresult.plot()\nplt.show()","76ec66e8":"# calculate correlaiton\ncorr = df.drop(['currency','country'],axis = 1).apply(lambda x: pd.factorize(x)[0]).corr(method='pearson')","3d9fbfab":"# set plot size\nsns.set(rc={'figure.figsize':(11.7,8.27)})\nmask = np.triu(np.ones_like(corr, dtype=np.bool))\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\nsns.heatmap(corr,center=0,mask=mask,cmap = cmap,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5});","fe8622fd":"# calcualte transaction volume by location\ndf_volume = df.groupby(['lat','long']).size()\ndf_volume = pd.DataFrame(df_volume.reset_index())\ndf_volume.columns = ['lat','long','volume']\ndf_volume['vs'] = np.log(df_volume.volume\/10)\ndf_volume.head()","a1405d4f":"fig = px.scatter_mapbox(df_volume, lat=\"lat\", lon=\"long\",color=\"volume\", size=\"vs\", hover_name=\"volume\", hover_data=[\"volume\"],\n                        color_discrete_sequence=[\"fuchsia\"], zoom=2.5)\nfig.update_layout(mapbox_style=\"open-street-map\")\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","61dfcfb9":"# calcualte average transaction amount by location\ndf_amount = df.groupby(['lat','long'])['amount'].mean()\ndf_amount = pd.DataFrame(df_amount.reset_index())\ndf_amount.columns = ['lat','long','amount']\ndf_amount['vs'] = np.log(df_amount.amount\/10)","35bc1e55":"fig = px.scatter_mapbox(df_amount, lat=\"lat\", lon=\"long\", color=\"amount\", size=\"amount\", hover_name=\"amount\",\n                        hover_data=[\"amount\"],\n                        color_discrete_sequence=[\"fuchsia\"], zoom=2.5)\nfig.update_layout(mapbox_style=\"open-street-map\")\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","b46f669b":"fig = px.scatter_mapbox(df, lat=\"lat\", lon=\"long\", color=\"amount\", hover_name=\"amount\",\n                        hover_data=[\"amount\"],\n                        color_discrete_sequence=[\"fuchsia\"], zoom=2.5)\nfig.update_layout(mapbox_style=\"open-street-map\")\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","828010b2":"# Outlier Detection","aaa5d358":"###  Top 10 account","9bba48b7":"## amount","be622292":"We can see that amount has very high number of outliers.","cab4ab5b":"#### Top 10 Merchant merchant state","fc24a609":"## balance","9c4dff00":"We'll drop columns having more than 90% missing values.","25ce67ee":"## Descriptive statistics","382ef0d3":"merchant_id is object we will convert it to string","4206647f":"# Spatial Analysis","6208ac38":"# Load libraries","b6604020":"We can summarize the correlation for the variable of interest amount here.\nThe amount has a moderate positive correlation with merchant_id, card_present_flag, mmerchant_state, merchant_suburb; weak correlation with extraction, transaction_id, date, balance; moderate negative correlation with status, weak negative correlation with txn_description, movement.","069f0dc6":"## movement","efdab1cf":"#### Distribution of age","5bd0e112":"# Exploratory Data Analysis","5ad1c1e0":"The distribution of the merchends is right skewed. Majority of the merchants has less than 3 transaction.","36ac86fd":"# Correlation Analysis","3d068659":"EDA Summary: The majority of the cards are present. The majority of the transaction authorized.\nDistribution of Transaction Count is right-skewed. Here most of the accounts did less than 200 transactions. Most of the transactions were done using POS. \n\nTop 10 merchands transaction counts were between 8-14. Majority of the Marchands has less than 4 transaction count. Distribution of balance is right-skewed with the majority having a balance of less than 50000. Distribution of age is right-skewed, most of them having age less than 50 years. The amount is right-skewed, most of them having an amount less than 2000.\n\nMales have higher percentages of transactions than females.\nTop 10 merchants merchant_suburb have transaction count between 39-255. Top 10 merchant states have transaction count between 68-2169. Top 10 merchant_state are NSW,VIC,QLD,WA,SA,NT,ACT,TAS. More than 80% of the transaction movement is by debit.","265a9ed6":"We can see that there is no seasonality.","b32fbd7c":"### age","54f85733":"## age","54748c77":"![](http:\/\/)","20b201e8":"### merchant_state","33f38d4a":"Overall we can say that this data has some variables with a large number of outliers, few variables were in the wrong data type. Numerical variables are mostly right-skewed and have outliers. Weekly volume and average transaction amount follow a similar pattern over time. Spatial analysis revealed that most of the location has a low amount of transaction volume and transaction amount.","d854af50":"### merchant_suburb","0df46370":"# Segmented analysis by Time ","c94e0d99":"# Correct data types","c8b861f4":"### movement","04f13601":"#### Distribution of Transaction Count for Merchants","652097ee":"We can see that balance has a large number of outliers.","3e858fb6":"## Transaction Amount","0b2098ea":"#### Distribution of Amount","94b6396b":"Most of the location has average transaction amount less than 300. Very high average transaction transaction amount is located only in few places.","13097baa":"\nTask Details\n\nGather some interesting overall insights about the data. For example -- what is the average transaction amount? How many transactions do customers make each month, on average?\n\nSegment the dataset by transaction date and time. Visualise transaction volume and spending over the course of an average day or week. Consider the effect of any outliers that may distort your analysis.\n\nWhat insights can you draw from the location information provided in the dataset?","6e0673ce":"Average balance is 14704.195553\t, average age of customers is 30.582330, average amount is 187.933588.","0a3d80f9":"# Summary","cccc7c0c":"### account","de728353":"# Load the data","386146be":"Most of the transactions were 33% SALES-POS, 31% POS .","503182f1":"#### Distribution of Balance","5e2bbe7e":"### txn_description","7410e529":"We can see that majority of the transactions were authorized.","320e6164":"Most of the location has low transaction amount.","eb8c8467":"Feel free to give your suggestions. ","e8eef691":"Majority of the location has less than 150 transaction volume.","6fc250bb":"### Gender","aa30a00f":"### card_present_flag","c04f2293":"### balance","c1c9927c":"We can see that age has few outliers.","78f6386b":"#### Distribution of Transaction Count by Account","f70b8198":"##  Transaction amount","d9766a8f":"#### Top 10 merchands ","21c6c299":"Majority of the transaction has card present.","a1798e5f":"# Sesonality Decomposition","02393ec4":"## merchant_id","a144fb7f":"### amount","3e71b83f":"# Start by doing some basic checks \u2013 are there any data issues? Does the data need to be cleaned?\n","f2478624":"Transaction count if right skewed. Majority of the accounts transaction count were below 200.","f03a2d11":"##  Transaction volume by location","7b61d30e":"### status","9db138b0":"### merchant_id"}}