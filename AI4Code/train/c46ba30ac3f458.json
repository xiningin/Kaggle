{"cell_type":{"68207dd7":"code","4c230028":"markdown"},"source":{"68207dd7":"import numpy as np\nimport matplotlib.pyplot as plt\nimport random\nfrom timeit import default_timer as timer\nstart = timer()\nReward = np.zeros((2000,1000))\nfor n in range(2000):\n    A = np.zeros((10,1000)) # % Action register\n    R = np.zeros((10,1000)) # % Reward register\n    Q = np.zeros((10,1000)) # % Value register\n    a = np.random.normal(0, 1, 10)\n    # Inital\n    f = random.randint(0,9)\n    A[f,0] = 1\n    R[f,0] = np.random.normal(a[f], 1, 1)\n    \n    # After Inital\n    for t in range(1,1000):\n        #Determine Action Value estimate using sample average method\n        for i in range(10):\n            if A[i,t-1] == 1:\n                Q[i,t] = np.sum(R[i,0:t])\/np.sum(A[i,0:t])\n            else:\n                Q[i,t] = Q[i,t-1]\n                \n        M = max(Q[:,t])\n        a_s = []\n        for i in range(10):\n            if Q[i,t] == M:\n                a_s.append(i)\n                \n        if len(a_s) > 1:  # Multiple greedy actions\n            r = random.randint(0,len(a_s)-1)\n            k = a_s[r]\n        else:   # A greedy action\n            k = a_s[0]\n        \n        A[k,t] = 1      # Action Register \n        R[k,t] = np.random.normal(a[k], 1, 1)   #Reward register\n    Reward[n,:]= [sum([row[i] for row in R]) for i in range(0,len(R[0]))]\n\nPas = np.zeros((1,1000))\nfor t in range(1000):\n    Pas[0,t] = np.mean(Reward[:,t])\n\nplt.figure(figsize=(8,4))\nplt.plot(Pas[0,:])\nplt.grid(True)\nplt.xlim(-0.001, 1000 )\nprint(\"time:\", timer()-start)\nprint('done')","4c230028":"*  This is a script to create a 10 armed bandit testbed using Greedy v\/s\n*  greedy algorithm. \n*  No. of runs= 2000\n*  Time steps per run: 1000\n*  q*(a)= N(0,1)\n*  R(t) for At= N(q*(At),1)\n*  e= 0.1 and 0.01"}}