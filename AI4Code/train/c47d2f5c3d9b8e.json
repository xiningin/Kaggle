{"cell_type":{"f26baecf":"code","0db87b51":"code","1e59b841":"code","b9b793d4":"code","5a19360b":"code","a2d2665d":"code","523f231e":"code","fe7735dc":"code","da431eaa":"code","ebf28eb7":"code","49b52c4b":"code","93f3f383":"code","10d8d5b8":"code","504b0dd7":"code","51f4f552":"code","c447511f":"code","a6cbaff8":"markdown","f1ebc29a":"markdown","51f010db":"markdown","92a5550a":"markdown","53643a71":"markdown","dd9ed1c0":"markdown","2a91f79c":"markdown","d0f05b19":"markdown","a77b4f79":"markdown"},"source":{"f26baecf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.","0db87b51":"data=pd.read_csv('..\/input\/creditcard.csv')\ndata.info()\ndata.head(10)","1e59b841":"data.columns","b9b793d4":"data.corr()","5a19360b":"f,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","a2d2665d":"data.V1.plot(kind='line',color='g',label=\"V1\",linewidth=1,alpha=0.5,grid=True,Linestyle=\":\")\ndata.V2.plot(kind='line',color='r',label=\"V2\",linewidth=1,alpha=0.5,grid=True,Linestyle=\"-.\")\nplt.legend(loc='upper right')    \nplt.xlabel('x axis')              \nplt.ylabel('y axis')\nplt.title('Line Plot')            \nplt.show()","523f231e":"data.plot(kind='scatter',x='V1',y='V2',alpha = 0.5,color = 'blue')\nplt.show()","fe7735dc":"data.V1.plot(kind = 'hist',bins = 100,figsize = (10,10))\nplt.show()","da431eaa":"x = data['V1']<0.5  \ndata[x]","ebf28eb7":"data[np.logical_and(data['V1']<0.5, data['V1']>-0.5 )]","49b52c4b":"data.head()","93f3f383":"data.tail()","10d8d5b8":"data.info()\ndata.columns","504b0dd7":"data.shape","51f4f552":"print(data['V1'].value_counts(dropna=False))","c447511f":"data.describe()","a6cbaff8":"A\u015fa\u011f\u0131da yap\u0131lan i\u015flemler ise \u00f6ncelikle korelasyon matrisi olu\u015fturularak hangi \u00f6zellikler aras\u0131nda nas\u0131l (pozitif veya negatif) ili\u015fiki oldu\u011funu g\u00f6rmekteyiz. Bir sonraki a\u015famada ise bu yapt\u0131\u011f\u0131m\u0131z i\u015flemi g\u00f6rselle\u015ftirme a\u015famas\u0131na ge\u00e7erek belirli renklerle ili\u015fkinin d\u00fczeyi temsil edilmekte ve veri incelemesi yap\u0131l\u0131rken \u00f6zellikler aras\u0131 ili\u015fkilere bak\u0131labilmektedir.","f1ebc29a":"A\u015fa\u011f\u0131da ise numpy k\u00fct\u00fcphanesinin logical_and \u00f6zelli\u011fi kullan\u0131larak V1 s\u00fctunundaki verileri 0.5 ile -0.5 aras\u0131nda olanlar \u015feklinde filtreleyip verimize uyguluyoruz.","51f010db":"A\u015fa\u011f\u0131da bir filtreleme \u00e7al\u0131\u015fmas\u0131 yap\u0131lmaktad\u0131r. Burada V1 s\u00fctunundaki verileri 0.5 den k\u00fc\u00e7\u00fck olanlar \u015feklinde filtreleyerek bir alt sat\u0131rda da t\u00fcm verimize uyguluyoruz.","92a5550a":"A\u015fa\u011f\u0131da ise histogram plot kullan\u0131lm\u0131\u015f ve V1 s\u00fct\u00fcnundaki verilerin da\u011f\u0131l\u0131m\u0131 g\u00f6sterilmi\u015ftir. V1 s\u00fctuna ait veriler daha \u00e7ok 0 civar\u0131nda \u015fekillenmektedir.","53643a71":"A\u015fa\u011f\u0131da yap\u0131lan i\u015flemler s\u0131ras\u0131yla\n* ilk sat\u0131rda grafik \u00e7izdirilece\u011fi ve bu grafi\u011fin t\u00fcr\u00fcn\u00fcn kind='line' yani \u00e7izgi grafi\u011fi olaca\u011f\u0131 belirtilmektedir. Renginin ye\u015fil, \u00e7izgi kal\u0131nl\u0131\u011f\u0131n\u0131n 1, arka planda grid olaca\u011f\u0131 ve \u00e7izgi t\u00fcr\u00fc olarak da ':' kulan\u0131laca\u011f\u0131 belirtilmektedir.\n* \u0130kinci sat\u0131rda ise yine grafik \u00e7izdirilece\u011fi ve bu grafi\u011fin t\u00fcr\u00fcn\u00fcn kind='line' yani \u00e7izgi grafi\u011fi olaca\u011f\u0131 belirtilmektedir. Renginin ye\u015fil, \u00e7izgi kal\u0131nl\u0131\u011f\u0131n\u0131n 1, arka planda grid olaca\u011f\u0131 ve \u00e7izgi t\u00fcr\u00fc olarak da '-.' kulan\u0131laca\u011f\u0131 belirtilmektedir.\n* plt.legend() , metodu hangi \u00e7izginin hangi veriye ait oldu\u011funu g\u00f6steren g\u00f6rselin g\u00f6r\u00fcnmesi i\u00e7in kullan\u0131lmaktad\u0131r.","dd9ed1c0":"\u015eimdiye kadar yapt\u0131\u011f\u0131m\u0131z incelemelerde sadece verinin i\u00e7eri\u011finde neler oldu\u011fu, hangi bilgilerden olu\u015ftu\u011fu gibi bilgilere ula\u015fmaya \u00e7al\u0131\u015ft\u0131k. Bundan sonra yapca\u011f\u0131m\u0131z \u00e7al\u0131\u015fmalarda ise verimizi Machine Learning algoritmalar\u0131n\u0131 uygulama a\u015famas\u0131na nas\u0131l getiririz uygulalamalar\u0131 yapaca\u011f\u0131z. \u00d6ncelikle verimizi genel hatlar\u0131 ile g\u00f6rmek i\u00e7in yukar\u0131da uygulad\u0131\u011f\u0131m\u0131z baz\u0131 metotlar\u0131 tekrar uygulayaca\u011f\u0131z. Bunlar;\n* head() ilk 5 veriyi listeleme,\n* tail() son 5 veriyi listeleme, \n* columns, verimizde bulunan kolonlar\u0131n neler oldu\u011funa dair bilgi,\n* info(), verimizin hangi s\u00fctunlardan olu\u015ftu\u011fu ve bu s\u00fct\u00fcnlardan saklanan verilerin veri t\u00fcrlerinin neler oldu\u011fu, ka\u00e7 sat\u0131r veriden olu\u015ftu\u011fu gibi bilgilerin elde edilmesi \u00e7al\u0131\u015fmalar\u0131 ile ba\u015flayaca\u011f\u0131z yolculu\u011fumuza.\n* shape(), metodu ise verimizin ka\u00e7 sat\u0131r ka\u00e7 s\u00fctundan olu\u015ftu\u011funu verir.","2a91f79c":"A\u015fa\u011f\u0131da yap\u0131lan grafik \u00e7al\u0131\u015fmas\u0131nda scatter plot kullan\u0131lmaktad\u0131r ve V1 ve V2 S\u00fctunlar\u0131na ait verilen incilenmesi g\u00f6r\u00fclmektedir. X ekseni V1 verisini, Y ekseni ise V2 verisini temsil etmektedir. G\u00f6rsel olarak bak\u0131ld\u0131\u011f\u0131nda iki de\u011fer 0'a yakla\u015ft\u0131k\u00e7a benzer sonu\u00e7lar sergilemektedir. ","d0f05b19":"value_count() metodu, veriye ait frekans da\u011f\u0131l\u0131m\u0131n\u0131 verir. Yani hangi veriden toplam verinin i\u00e7erisinde ka\u00e7 adet veri oldu\u011funu s\u00f6yl\u00fcyor. Bir bak\u0131ma Histogram grafi\u011finin say\u0131sal kar\u015f\u0131l\u0131\u011f\u0131n\u0131 vermektedir.","a77b4f79":"A\u015fa\u011f\u0131da yap\u0131lan i\u015flem ile data isimli de\u011fi\u015fkenimizin i\u00e7erisine verimizi ekliyoruz. Bunun i\u00e7in Pandas k\u00fct\u00fcphanesine ait read_csv() metodunu kullanmaktay\u0131z.\ninfo() metodu ile de verimize ait bilgileri elde ediyoruz. S\u00fctunlar hangi veri t\u00fcrlerinden olu\u015fuyor gibi bilgileri \u00f6\u011freniyoruz.\ndata.head() metodu ile de verimize ait ilk 5 veri listelenmektedir. Burada parametre olarak 10 girilerek ilk 10 veri listelenmektedir."}}