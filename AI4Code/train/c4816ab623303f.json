{"cell_type":{"ee02f1fa":"code","cae98904":"code","161612e3":"code","da031128":"code","e24ed4ed":"code","9d0d7f1f":"code","20e82faa":"code","8fd023df":"code","6f452b80":"code","bc8e0c3a":"code","ba7756f4":"code","beb72acc":"code","ae6b1162":"code","dfb363b4":"code","c3cc0d60":"markdown","feb4f91e":"markdown"},"source":{"ee02f1fa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","cae98904":"# Load data using Pandas\ntrain_data = pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')\n\ny = train_data['label'] # Fetches only the 'label' column information\nX = train_data[train_data.columns.difference(['label'])] # Fetches entire data excluding the 'label' column\n\nX_test = test_data","161612e3":"from sklearn.model_selection import train_test_split\n\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size = 0.33, random_state=42)\n","da031128":"X_train = X_train.to_numpy()","e24ed4ed":"y_train = y_train.to_numpy()","9d0d7f1f":"X_valid = X_valid.to_numpy()","20e82faa":"y_valid = y_valid.to_numpy()","8fd023df":"X_test = X_test.to_numpy()","6f452b80":"# Data Normalization\nX_train = X_train\/255\ny_valid = y_valid\/255\nX_test = X_test\/255\nprint(X_train.shape)\n","bc8e0c3a":"from sklearn.linear_model import SGDClassifier\nfinalModel = SGDClassifier(loss=\"hinge\", penalty=\"l2\")\nfinalModel.fit(X_train, y_train)","ba7756f4":"values = finalModel.predict(X_valid)\nvalues","beb72acc":"def submissions(finalModel):\n    values = finalModel.predict(X_test)\n    indexes = [index+1 for index, value in enumerate(values)]\n    dataFrame = pd.DataFrame(list(zip(indexes, values)), columns=['ImageId', 'Label'])\n    return dataFrame","ae6b1162":"dataFrame = submissions(finalModel)\ndataFrame.to_csv('submissions.csv', index=False)","dfb363b4":"dataFrame.shape","c3cc0d60":"**Splitting the data into Train Set and Validation Set**","feb4f91e":"**Loading data using Pandas DF.**"}}