{"cell_type":{"37707658":"code","a56c6197":"code","2162b9d3":"code","90228943":"code","bb149df9":"code","6bc4af72":"code","11554530":"code","d524e2f9":"code","75448cda":"code","dce3d84c":"code","b0131d2d":"code","162b17c8":"code","eb7c9135":"code","7bce5f5a":"code","74f433df":"code","90a45734":"code","427deaae":"code","c87a8947":"code","e690be65":"code","1578b19f":"code","fb59a773":"code","b045d4e5":"code","53c6e799":"code","3fe53f06":"markdown","9b03404e":"markdown","97866d38":"markdown","4b17a956":"markdown","37017cc1":"markdown","f001f9a1":"markdown","6069ad46":"markdown","d9e575ee":"markdown","071e807d":"markdown","5b31bd2b":"markdown","0dedff29":"markdown","e82b1704":"markdown","d4e849bd":"markdown","f5cf846a":"markdown"},"source":{"37707658":"import math \nimport numpy as np\nimport pandas as pd \nimport plotly.express as ex\nimport plotly.graph_objects as go \nimport plotly.offline as pyo \nfrom datetime import datetime \npyo.init_notebook_mode()","a56c6197":"df_vacc = pd.read_csv('..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')\ndf_summary = pd.read_csv('..\/input\/covid19-global-dataset\/worldometer_coronavirus_summary_data.csv')\ndf_daily = pd.read_csv('..\/input\/covid19-global-dataset\/worldometer_coronavirus_daily_data.csv')\n","2162b9d3":"df_vacc.head()","90228943":"[x for x in df_vacc.country.unique() if x not in df_summary.country.unique()]","bb149df9":"#Replace \ndf_vacc.country = df_vacc.country.replace().replace({\n      'Czechia' : 'Czech Republic',\n      'Falkland Islands' : 'Falkland Islands Malvinas',\n      'Hong Kong' : 'China Hong Kong',\n      'Isle of Man' : 'Isle Of Man',\n      'Macao' : 'China Macao Sar',\n      'Northern Cyprus' : 'Cyprus',\n      'Northern Ireland' : 'Ireland',\n      'Trinidad and Tobago' : 'Trinidad And Tobago',\n      'Turks and Caicos Islands' : 'Turks And Caicos',\n      'United Kingdom' : 'UK',\n      'United States' : 'USA'     \n})","6bc4af72":"# drop these since they are included in UK \ndf_vacc = df_vacc[df_vacc.country.apply(lambda x: x not in ['England','Guernsey', 'Jersey', 'Saint Halena' 'Scotland', 'Wales', 'Northern Ireland'])]","11554530":"# function to easily agrregate columns\ndef aggregate(df: pd.Series, agg_col: str) -> pd.DataFrame:\n    \n    data = df.groupby(\"country\")[agg_col].max()\n    data = pd.DataFrame(data)\n    \n    return data","d524e2f9":"# define the columns we want to summarize\ncols_to_summarize = ['people_vaccinated', \n                     'people_vaccinated_per_hundred', \n                     'people_fully_vaccinated', \n                     'people_fully_vaccinated_per_hundred', \n                     'total_vaccinations_per_hundred', \n                     'total_vaccinations']\n\nsummary = df_summary.set_index(\"country\")\nvaccines = df_vacc[['country', 'vaccines']].drop_duplicates().set_index('country')\nsummary = summary.join(vaccines)\n\nfor col in cols_to_summarize:   \n    summary = summary.join(aggregate(df_vacc, col))\n\nsummary['percentage_vaccinated'] = summary.total_vaccinations \/ summary.population * 100\nsummary['tested_positive'] = summary.total_confirmed \/ summary.total_tests * 100","75448cda":"df_summary = summary ","dce3d84c":"df_summary.to_csv(\"input\")","b0131d2d":"df_summary2 = pd.read_csv('.\/input')\n","162b17c8":"df_summary2.head()","eb7c9135":"def get_multi_line_title(title:str, subtitle:str):\n    return f\"{title}<br><sub>{subtitle}<\/sub>\"\n\ndef visualize_column(data: pd.DataFrame, xcolumn: str, ycolumn:str, title:str, colors:str, ylabel=\"Count\", n=None):\n    hovertemplate ='<br><b>%{x}<\/b>'+f'<br><b>{ylabel}: <\/b>'+'%{y}<br><extra><\/extra>'    \n    data = data.sort_values(ycolumn, ascending=False).dropna(subset=[ycolumn])        \n    \n    if n is not None: \n        data = data.iloc[:n]\n    else:\n        n = \"\"\n    fig = go.Figure(go.Bar(\n                    hoverinfo='skip',\n                     x=data[xcolumn], \n                     y=data[ycolumn], \n                     hovertemplate = hovertemplate,\n                     marker=dict(\n                         color = data[ycolumn],\n                         colorscale=colors     ,\n                        ),\n                    ),\n                )\n    \n    fig.update_layout(\n        title=title,\n        xaxis_title=f\"Top {n} {xcolumn.title()}\",\n        yaxis_title=ylabel,\n        plot_bgcolor='rgba(0,0,0,0)',\n        hovermode=\"x\"\n    )\n    \n    fig.show()","7bce5f5a":"title = get_multi_line_title(\"People Vaccinated\", \"Individuals who received the first dose of the vaccine\")\nvisualize_column(summary.reset_index(), 'continent', \"total_vaccinations\", title, \"burgyl\")","74f433df":"title = get_multi_line_title(\"People Vaccinated\", \"Individuals who received the first dose of the vaccine\")\nvisualize_column(summary.reset_index(), 'country', \"total_vaccinations\", title, \"burgyl\", n=30 )","90a45734":"title = get_multi_line_title(\"Percentage Vaccinated\", \"Percentage of the total population that have received the first dose\")\nvisualize_column(summary.reset_index(), 'continent', \"percentage_vaccinated\", title, \"emrld\", \"Percentage(%)\")","427deaae":"title = get_multi_line_title(\"Percentage Vaccinated\", \"Percentage of the total population that have received the first dose\")\nvisualize_column(summary.reset_index(), 'country', \"percentage_vaccinated\", title, \"emrld\", \"Percentage(%)\", n=30)","c87a8947":"title = get_multi_line_title(\"People Fully Vaccinated\", \"Individuals who have received all doses of the vaccine\")\nvisualize_column(summary.reset_index(), 'continent', \"people_fully_vaccinated\", title, \"Pinkyl\")","e690be65":"title = get_multi_line_title(\"People Fully Vaccinated\", \"Individuals who have received all doses of the vaccine\")\nvisualize_column(summary.reset_index(), 'country', \"people_fully_vaccinated\", title, \"Pinkyl\", n=30 )","1578b19f":"title = get_multi_line_title(\"Tested Positive \", \"Fraction of  people that tested positive among those that were tested\")\nvisualize_column(summary.reset_index(), 'continent',\"tested_positive\", title, \"blues\", ylabel='Percentage' )","fb59a773":"title = get_multi_line_title(\"Tested Positive \", \"Fraction of  people that tested positive among those that were tested\")\nvisualize_column(summary.reset_index(), 'country',\"tested_positive\", title, \"blues\", n=30, ylabel='Percentage' )","b045d4e5":"data = summary.dropna(subset=['vaccines'])\ndata = summary.groupby('vaccines')['total_vaccinations'].sum()\ndata = pd.DataFrame(data).reset_index()\n\ntitle = get_multi_line_title(\"Vaccines In Use\", \"Popular Vaccine Combinations that are used around the globe\")\nvisualize_column(data, 'vaccines',\"total_vaccinations\", title, \"delta\")","53c6e799":"data = summary.dropna(subset=['serious_or_critical'])\ndata = data.reset_index()\n\ntitle = get_multi_line_title(\"Serious or Critical Cases\", \"Number of people who are currently critically ill due to Covid-19\")\nvisualize_column(data, 'country',\"serious_or_critical\", title, \"turbid\", n=20)","3fe53f06":"Thank you for <**@Muhammad Ismail**> great notebook! \nI updated the data using his notebook. Please upvote if it was helpful!!","9b03404e":"# Vaccines in Use ","97866d38":"# Serious_or_Critical","4b17a956":"## Compare df_vacc.country & df_summary.country\n\nFind the Countries in the Vaccination Data not in Summary Data ","37017cc1":"## Percentage Vaccinated-Continent & Country ","f001f9a1":"# Data Cleaning\n\nWe have to make sure that all the countries names to be in the same name ","6069ad46":"## People Vaccinated-Continent & Country ","d9e575ee":"# People Fully Vaccinated-Continent & Country ","071e807d":"# Visualizations\n\nBefor we make a graph, make a helper functions to make it easiler ","5b31bd2b":"# Summary\n* Data Cleaning : Preprocessing and standardization.\n* Data Summarization : Combine the daily vaccine information with the existing virus summary.\n* Summary Visualizations : Generate attractive bar plots for various summaries.\n* Global Statistics Visualization : Compare the daily new cases, active cases and deaths.","0dedff29":"# Teseted Positive-Continent & Country ","e82b1704":"**Replace** \n\n'Czechia' == \"Czech Republic\" 'Isle of Man' == \"Isle Of Man\" 'United Kingdom' == \"UK\" 'United States' == \"USA\" 'Northern Cyprus' == \"Cyprus\" 'Falkland Islands' == \"Falkland Islands Malvinas\"  'Hong Kong' == \"China Hong Kong\"  'Macao' == \"China Macao Sar\"  'Trinidad and Tobago' == \"Trinidad And Tobago\"  'Turks and Caicos Islands' == \"Tucks And Caicos \n\n**DROP**\n\nEngland,Guernsey,Jersey,Saint Halena, Wales Scotland Northern Ireland **(since they are part of the UK)**","d4e849bd":"# Load Data\n\n### Add 'covid-19-global-dataset' in your input data ","f5cf846a":"# Import"}}