{"cell_type":{"335d6e80":"code","fecdd729":"code","56a1c67b":"code","7530f42a":"code","cb2347ce":"code","b4ec3c63":"code","9f6160d5":"code","572fd2c5":"code","c3e88bb4":"code","304fe914":"code","b2b4f990":"code","95384ba0":"code","d6a94cb0":"code","5e0401d3":"code","9a8d67ee":"markdown","db15e63a":"markdown","75b36fcf":"markdown"},"source":{"335d6e80":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fecdd729":"# as usual, let us load all the necessary libraries\nimport numpy as np  # numerical computation with arrays\nimport pandas as pd # library to manipulate datasets using dataframes\nimport scipy as sp  # statistical library\n\n# below sklearn libraries for different models\nfrom sklearn.tree import DecisionTreeClassifier as DecisionTree\nfrom sklearn.ensemble import RandomForestClassifier as RandomForest\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.impute import KNNImputer\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.preprocessing import MinMaxScaler\n\n# plot \nimport matplotlib\nimport matplotlib.pyplot as plt\n%matplotlib inline","56a1c67b":"df = pd.read_csv('..\/input\/agricultural-survey-of-african-farm-households\/data.csv')\ndf.head()","7530f42a":"# print a summary of the values for each covariate in the dataset\ndf.describe()","cb2347ce":"#describing the dataset statistics\nstat = df.describe().T\nstat[['mean', 'max', 'min']]","b4ec3c63":"# get a summary of how many rows in the dataset and how many missing values is in each column\ndf.info()","9f6160d5":"#Checking nan values in the df Data\ndf.isna().sum()","572fd2c5":"# Drop unimportant covariates\n#here we drop all the variables that are not helpful in the model building\ndf.drop(columns=['interviewer', 'vname','Unnamed: 0' ],axis=1,inplace=True)\n\n# Step 2: Drop ALL redundant covariates\n\ndf.drop(columns=['adjtempshifts1_1','adjtempshifts2_1', 'adjtempshifts3_1','adjrainfallshifts1_1','adjrainfallshifts2_1','adjrainfallshifts3_1'], axis=1, inplace=True)","c3e88bb4":"# drop longtermrainfallshifts3 since it does not contain any record for the whole dataset.\ndf.drop(columns=['longtermrainfallshifts3' ],axis=1,inplace=True)","304fe914":"#fill the non values.\ndf = df.fillna(0)\ndf.head()","b2b4f990":"low = 0.05\nhigh = 0.95\n\n# Step 1: compute 5% percentile and the 95% percentile of each column in the dataset\nquantile_df = df.quantile([low, high])\nquantile_df","95384ba0":"#pie chart visualization for gender1\nftype = df['gender1']\nList = [1,2]\nCount = [sum(map(lambda x: x==i,ftype)) for i in List]\nPerc = [x*100.0\/sum(Count) for x in Count]\nplt.pie(Perc,None,List,autopct='%1.1f%%')\nplt.show()","d6a94cb0":"#pie chart visualization for age\nftype = df['gender2']\nList = [1,2]\nCount = [sum(map(lambda x: x==i,ftype)) for i in List]\nPerc = [x*100.0\/sum(Count) for x in Count]\nplt.pie(Perc,None,List,autopct='%1.1f%%')\nplt.show()","5e0401d3":"#pie chart visualization for age\nftype = df['gender3']\nList = [1,2]\nCount = [sum(map(lambda x: x==i,ftype)) for i in List]\nPerc = [x*100.0\/sum(Count) for x in Count]\nplt.pie(Perc,None,List,autopct='%1.1f%%')\nplt.show()","9a8d67ee":"# load libraries","db15e63a":"# Visualizations","75b36fcf":"# **Pre-process the data**"}}