{"cell_type":{"86ac64a8":"code","96e243d3":"code","d25f431b":"code","3a7f31ac":"code","4d0aac22":"markdown","0a2d594d":"markdown"},"source":{"86ac64a8":"#Importing the libraries:\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd","96e243d3":"x = [0,1,2,3,4]\ny = [0,2,4,6,8]\n\n#Keyword arguement notation:\n#plt.plot(x,y, label = '2x', color = 'blue', linewidth = 2, marker = '.', linestyle = '--', markersize = 10, markeredgecolor = 'red')\n\n#Shorthand notation of the above line:\nplt.plot(x,y,'b.--', label='2x')\n\n#Plotting the line number 2:\nx2 = np.arange(0,4.5,0.5)\nplt.plot(x2,x2**2,'r', label = 'x^2')\nplt.title(\"First Graph!\", fontdict = {'fontname': 'Comic Sans MS', 'fontsize': 24})\nplt.xlabel(\"X-Axis\")\nplt.ylabel(\"Y-Axis\")\nplt.xticks([0,1,2,3,4])\nplt.yticks([0,2,4,6,8,10])\nplt.legend()\nplt.show()","d25f431b":"x = [0,1,2,3,4]\ny = [0,2,4,6,8]\n\n#Resize the graph:\nplt.figure(figsize=(5,3), dpi = 100)\n\n#Keyword arguement notation:\n#plt.plot(x,y, label = '2x', color = 'blue', linewidth = 2, marker = '.', linestyle = '--', markersize = 10, markeredgecolor = 'red')\n\n#Shorthand notation of the above line:\nplt.plot(x,y,'b.--', label='2x')\n\n#Plotting the line number 2:\n#Selecting the interval for which we want to plot the points at:\nx2 = np.arange(0,4.5,0.5)\n\n#Plot the part of the graph as the line:\nplt.plot(x2[:6],x2[:6]**2,'r', label = 'x^2')\n\n#PLot the remainder of the graph:\nplt.plot(x2[5:], x2[5:]**2, 'r--')\n\n#Giving the title of the graph:\nplt.title(\"First Graph!\", fontdict = {'fontname': 'Comic Sans MS', 'fontsize': 24})\n\n#Labelling the axis of the graph:\nplt.xlabel(\"X-Axis\")\nplt.ylabel(\"Y-Axis\")\n\n#Assiging the ticks of the aixs of the graph (Scale of the graph):\nplt.xticks([0,1,2,3,4])\nplt.yticks([0,2,4,6,8,10])\n\n#Displaying the legend of the graph:\nplt.legend()\n\n#Saving the graph:\nplt.savefig('mygraph.png', dpi = 300)\n\n#Displaying the graph:\nplt.show()","3a7f31ac":"labels = ['A', 'B', 'C']\nvalues = [1,4,2]\nbars = plt.bar(labels, values)\n\n#Defining the patterns that we want to use to fill in the bars:\npatterns = ['\/', 'O', '*']\nfor bar in bars:\n    bar.set_hatch(patterns.pop())\n#bars[0].set_hatch('*')\n#bars[1].set_hatch('\/')\n#bars[2].set_hatch('O')\n\n#Resizing the graph:\nplt.figure(figsize = (6,4))\nplt.show()","4d0aac22":"### Basic Graph","0a2d594d":"### Bar Charts"}}