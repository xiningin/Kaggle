{"cell_type":{"2b773d30":"code","fcf64c6e":"code","4f174369":"code","c8d4b1b1":"code","d82d63c2":"code","9551998a":"code","69c993d4":"code","ceb4891d":"code","8e0d8c5d":"code","c1d7ac0b":"code","e34e3ace":"code","f0a49c4e":"code","47110e52":"code","e0a2f521":"code","a18e26e5":"code","004be6a4":"code","40ec6d1a":"code","036c6c67":"markdown","c3ce2f4f":"markdown","0a2450b4":"markdown","f0081927":"markdown","d29bba2b":"markdown","4b2bfcaa":"markdown","e029c7b3":"markdown","78202b31":"markdown","463b5706":"markdown","d6a04315":"markdown","636be724":"markdown","b4f7ff52":"markdown","243b2e54":"markdown","f7791bb6":"markdown","a9d932ab":"markdown","cb0176d7":"markdown"},"source":{"2b773d30":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fcf64c6e":"PATH='..\/\/input\/\/covid19-in-world-countrieslatest-data\/\/worldwide covid data.csv'\n\ncovid_data=pd.read_csv(PATH)\n\nprint(\"Shape of Dataset : \",covid_data.shape,'\\n\\n')\n\nprint(\"**************************************************************\")\n\ncovid_data.head()","4f174369":"print(\"Columns having NULLS\\n\\n*******************************\")\ncovid_data.isna().sum()","c8d4b1b1":"covid_data[(covid_data['Total Tests'].isna())|(covid_data['Tests\/1M population'].isna())\n           |(covid_data['Total Recovered'].isna())|(covid_data['Active Cases'].isna())]","d82d63c2":"covid_data.fillna(0,inplace=True)","9551998a":"covid_data.isna().sum()","69c993d4":"# Finding Negative Values and Capping To 0.\nfor col in covid_data.columns:\n    if(col=='Country'):\n        continue\n    for j in range(len(covid_data)):\n        if(covid_data[col][j]<0):\n            covid_data[col][j]=0\n    ","ceb4891d":"# Dropping Duplicates\nprint(\"Before Dropping Duplicates : \",covid_data.shape,'\\n')\ncovid_data=covid_data.drop_duplicates()\nprint(\"\\nAfter Dropping Duplicates : \",covid_data.shape)","8e0d8c5d":"# Describing the Dataset\n\ndesc=covid_data.describe()\ndesc.transpose()","c1d7ac0b":"covid_data['Active Cases \/ Population']=[round(covid_data['Active Cases'][i]\/covid_data['Population'][i],4) for i in range(len(covid_data))]","e34e3ace":"# Getting Max and Min Active Cases\n\nactive_cases_data=covid_data.set_index('Country')['Active Cases \/ Population'].to_dict()\n\nmax_active_case_country=max(active_cases_data, key=active_cases_data.get)\nmin_active_case_country=min(active_cases_data, key=active_cases_data.get)\n\nprint('Country with Maximum Active Cases \/ Population : ',max_active_case_country,' ({} cases)'.format(list(covid_data[covid_data['Country']==max_active_case_country]['Active Cases'])[0]))\nprint('Country with Minimum Active Cases \/ Population : ',min_active_case_country,' ({} cases)'.format(list(covid_data[covid_data['Country']==min_active_case_country]['Active Cases'])[0]))\n","f0a49c4e":"# Considering Lockdown is imposed when Active Cases\/Population >0.1\n\nprint(\"Countries that should LOCKDOWN :\\n\")\nprint(list(covid_data[covid_data['Active Cases \/ Population']>0.1]['Country']))\n\nprint(\"\\nCountries that may LOCKDOWN :\\n\")\nprint(list(covid_data[(covid_data['Active Cases \/ Population']>=0.001)&(covid_data['Active Cases \/ Population']<=0.1)]['Country']))\n\nprint(\"\\nCountries that can avoid LOCKDOWN :\\n\")\nprint(list(covid_data[covid_data['Active Cases \/ Population']<0.001]['Country']))","47110e52":"# Death \/ Population\ncovid_data['Total Deaths \/ Population']=[round(100*covid_data['Total Deaths'][i]\/covid_data['Population'][i],4) for i in range(len(covid_data))]\navg_death_to_population_per=np.mean(np.asarray(covid_data['Total Deaths \/ Population']))\navg_death_to_population_per","e0a2f521":"# Q4 Rate of Recovery\n\ncovid_data['Recovery Rate']=[round((100*covid_data['Total Recovered'][i])\/covid_data['Total Cases'][i],4) for i in range(len(covid_data))]\navg_recovery_rate_per=np.mean(np.asarray(covid_data['Recovery Rate']))\navg_recovery_rate_per","a18e26e5":"covid_data_new=covid_data.drop(columns='Country')\nprint('Correlation is ',covid_data_new.corr()['Total Tests']['Total Recovered'])\nprint('\\n************************************************************************************\\n\\n')\nplt.figure(figsize = (20,20))\nsns.set(font_scale=2)\nsns.heatmap(covid_data_new.corr(),cmap=\"RdYlGn\",annot=True)\n","004be6a4":"# Q6 Longest time to recover\n\nprint(list(covid_data[covid_data['Recovery Rate']<50]['Country']))","40ec6d1a":"# Q7 Rate of Testing faster or slower - Compare the mean of Testing\/1M Population with individual datapoint.\n\ncovid_data['Testing Rate']=pd.Series()\nmean_test_per_population=round(np.mean(np.asarray(covid_data['Tests\/1M population'])),4)\n\nfor i in range(len(covid_data)):\n    if(covid_data['Tests\/1M population'][i]>mean_test_per_population):\n        covid_data['Testing Rate'][i]='Faster'\n    elif(covid_data['Tests\/1M population'][i]<mean_test_per_population):\n        covid_data['Testing Rate'][i]='Slower'\n    else:\n        covid_data['Testing Rate'][i]='At Par'\n\nprint(\"Countries with Faster Testing Rate than Average of Tests\/1M population :\\n\\n\",\n      list(covid_data[covid_data['Testing Rate']=='Faster']['Country']))\nprint(\"\\nCountries with Slower Testing Rate than Average of Tests\/1M population :\\n\\n\",\n      list(covid_data[covid_data['Testing Rate']=='Slower']['Country']))\nprint(\"\\nCountries with At Par Testing Rate than Average of Tests\/1M population :\\n\\n\",\n      list(covid_data[covid_data['Testing Rate']=='At Par']['Country']))\n","036c6c67":"# **Question 2**","c3ce2f4f":"# **Pre-Processing Of Data**","0a2450b4":"# **Research Questions**","f0081927":"# **Data Ingestion**","d29bba2b":"# **Question 7**","4b2bfcaa":"**This dataset contains the COVID-19 Data of various countries in the world. <br><br>Below is the explanation of every column in the dataset.**<br><br>\n\n1. Country - The Country of Origin.\n2. Total Cases - The total COVID cases pertaining to that particular country.\n3. Total Deaths - The total deaths due to COVID pertaining to that particular country.\n4. Total Recovered - The total patients recovered from COVID pertaining to that particular country.\n5. Active Cases - The total active patients of COVID pertaining to that particular country.\n6. Total Cases\/1M population - The total Cases per Million of Population pertaining to that country.\n7. Deaths\/1M population - The total deaths per Million of Population pertaining to that country.\n8. Total Tests - The total COVID testing done of the Population pertaining to that country.\n9. Tests\/1M population - The total COVID testing done per Million of the Population pertaining to     that country.\n10. Population - The total population pertaining to that country.\n<br><br>\n\n**Now let's come to the research questions we aim to answer using this dataset.**","e029c7b3":"# **Question 3**","78202b31":"1. Handling Nulls\n2. Finding out negative values and capping them to 0 (since none of the columns can have -ve values)\n3. Removing Duplicates ( if any )\n4. Describe Data\n5. Corr Matrix","463b5706":"#### Total Recovered, Total Tests, Tests\/1M population and Active Cases Column has NULLS.","d6a04315":"# **Conclusion**","636be724":"# **Question 5**","b4f7ff52":"# **Question 4**","243b2e54":"# **Question 6**","f7791bb6":"# **Question 1**","a9d932ab":"### There are no Duplicates in the data. Thats amazing !!!","cb0176d7":"1. Which Country has the highest and Lowest number of active cases ?\n2. Which country must, may and avoid imposing lockdowns ?\n3. What is the Death \/ Population % of a country ?\n4. What is the Rate of Recovery of the particular country ?\n5. Is there a positive relation between the population tested and recovered ?\n6. Which country(s) will take the longest time to recover from COVID-19 ?\n7. Is the rate of testing faster or slower with respect to the population of the country ?\n\n<br><br>\nWe can answer many more questions using this dataset but lets continue with these main 7 questions by deep diving into the dataset and finding out insights !!"}}