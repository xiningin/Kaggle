{"cell_type":{"b5db6d9a":"code","4e2762a7":"code","817e84d3":"code","cb487256":"code","6bcbd9e3":"code","8ea32e09":"code","a7435ae1":"code","3b08523b":"code","cd5ac9f6":"code","218241b0":"code","b0129dc9":"code","4bd05a08":"code","4f4c45c2":"code","07dfbfa2":"code","ba99c7ac":"code","80b6787e":"code","a8c801cc":"code","f56b2011":"code","76f7e6c2":"code","6cff6df0":"code","6640642f":"code","bd68fd36":"code","e5ec5d4d":"code","52d707db":"code","2d7534a1":"code","66f2afdd":"code","2403eca8":"code","baf618f1":"code","6734d1f8":"code","684cad29":"code","3b5aabf9":"code","e336bf88":"code","db04d849":"code","ae1f1dab":"code","a8f8b616":"markdown"},"source":{"b5db6d9a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.metrics import mean_squared_error","4e2762a7":"train_set = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\nvalidation_set = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/test.csv')\nitems_data = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/items.csv')\nitem_categories_data = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nshops_data = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/shops.csv')\n#\u8bfb\u53d6\u6570\u636e","817e84d3":"train_set.head(10)\n#\u9884\u89c8\u4e00\u4e0b\u8bad\u7ec3\u96c6\u6570\u636e\u7684\u683c\u5f0f","cb487256":"train_set.isnull().sum()\n#\u67e5\u770b\u662f\u5426\u6709\u7f3a\u5931\u503c","6bcbd9e3":"ax1 = plt.subplot(211)\nplt.ylim(train_set.item_cnt_day.min(), train_set.item_cnt_day.max()*1.2)\nax1.boxplot(x=train_set.item_cnt_day)\nplt.xlabel('item_cnt_day')\nax2 = plt.subplot(212)\nplt.ylim(train_set.item_price.min(), train_set.item_price.max()*1.2)\nax2.boxplot(x=train_set.item_price)\nplt.xlabel('item_price')","8ea32e09":"train_set = train_set[train_set.item_price<100000]\ntrain_set = train_set[(train_set.item_cnt_day<1001)&\n                      (train_set.item_cnt_day>=0)]\n#\u901a\u8fc7\u753b\u56fe\u53d1\u73b0item_cnt_day\u548citem_price\u4e24\u9879\u5b58\u5728\u5f02\u5e38\u503c\n#\u603b\u4f53\u6765\u770b\u4ec5\u67090.25%\u5de6\u53f3\u7684\u5f02\u5e38\u503c\uff0c\u6240\u4ee5\u9009\u62e9\u5254\u9664\u8fd9\u4e9b\u5f02\u5e38\u503c","a7435ae1":"combine = []\nfor i in range(34):\n    sales = train_set[train_set.date_block_num==i]\n    for j in sales.shop_id.unique():\n        for k in sales.item_id.unique():\n            p = (i,j,k)\n            combine.append(np.array(list(p)))\ncols = ['date_block_num','shop_id','item_id']\ncombine = pd.DataFrame(np.vstack(combine), columns=cols)\n#\u6309\u7167\u5782\u76f4\u65b9\u5411\u6392\u5217\u6570\u7ec4\n#combine\u662f\u6708\u4efd\u3001\u5546\u5e97\u3001\u5546\u54c1\u4e09\u79cd\u53d8\u91cf\u6240\u6709\u7684\u6392\u5217\u7ec4\u5408","3b08523b":"grouped = train_set.groupby(['item_id','shop_id','date_block_num']).agg({'item_cnt_day':'sum'})\ngrouped.columns = ['item_cnt_month']\ngrouped.reset_index(inplace=True)\ngrouped.head()\n#grouped\u8868\u662f\u6708\u4efd\u3001\u5546\u5e97\u3001\u5546\u54c1\u4e09\u79cd\u53d8\u91cf\u6392\u5217\u7ec4\u5408\u5728\u8bad\u7ec3\u96c6\u4e2d\u90fd\u6709\u503c\u7684\u60c5\u51b5\n#\u53ef\u4ee5\u53d1\u73b0\u5e76\u4e0d\u662f\u6240\u6709\u5546\u54c1\u6240\u6709\u5546\u5e97\u6bcf\u6708\u90fd\u6709\u9500\u91cf","cd5ac9f6":"combine = combine.merge(grouped, on = ['item_id','shop_id','date_block_num'], how = 'left')\ncombine['item_cnt_month'] = combine['item_cnt_month'].fillna(0).clip(0,20)\ncombine.head()\n#\u5c06combine\u548cgrouped\u4e24\u4e2a\u8868\u7ec4\u5408\u540e\uff0c\u5f97\u5230\u7684\u662f\u6240\u6709\u6392\u5217\u7ec4\u5408\u7684\u6bcf\u6708\u9500\u91cf\n#\u5982\u679c\u6ca1\u6709\u503c\u7684\u8bdd\u8bf4\u660e\u5f53\u6708\u8fd9\u4e2a\u5546\u5e97\u7684\u8fd9\u4e2a\u4ea7\u54c1\u6ca1\u6709\u9500\u552e\u989d\uff0c\u5c31\u75280\u6765\u586b\u5145\n#\u5e76\u5c06\u9500\u91cf\u7684\u7ed3\u679c\u9650\u5236\u57280~20\u4e4b\u95f4","218241b0":"combine = pd.merge(combine,items_data,on=[\"item_id\"],how=\"left\")\n#\u5c06combine\u4e0e\u5546\u54c1\u8868\u5408\u5e76","b0129dc9":"def ItemCatSplit(x):\n    if '-' in x:\n        cat = x.split(' - ')[0]\n    else:\n        cat = x\n    return cat\nitem_categories_data['Cat'] = [ItemCatSplit(i) for i in item_categories_data['item_category_name']]\n#\u5c06\u7c7b\u522b\u540d\u5b57\u5206\u79bb\u5f00\uff0c\u8bc6\u522b\u51fa\u6bcf\u4e00\u7c7b\u5546\u54c1\u7684\u5927\u7c7b\uff0c\u8d4b\u503c\u4e3a\u65b0\u7684\u7279\u5f81","4bd05a08":"def ShopNameSplit(x):\n    Provice = x.split(' ')[0]\n    return Provice\nshops_data['Location'] = [ShopNameSplit(i) for i in shops_data['shop_name']]\n#\u4ece\u5e97\u94fa\u7684\u540d\u79f0\u4e2d\u63d0\u53d6\u51fa\u5e97\u94fa\u6240\u5728\u5730\u7684\u540d\u5b57\uff0c\u8d4b\u503c\u4e3a\u65b0\u7684\u7279\u5f81","4f4c45c2":"train = pd.merge(combine,item_categories_data,how='left',on='item_category_id')\ntrain = pd.merge(train,shops_data,how='left',on='shop_id')\ntrain = train.drop(columns=['item_category_name','item_name','shop_name'])\ntrain.head()\n#\u5c06\u591a\u4e2a\u8868\u5408\u5e76\uff0c\u7b5b\u9009\u6709\u7528\u7684\u4fe1\u606f\u540e\u547d\u540d\u4e3atrain\u8868","07dfbfa2":"col=list(train.columns)\nfor i in col:\n    print('\u7279\u5f81%s\u7684\u79cd\u7c7b\u6709%d\u79cd'%(i,len(train[i].unique())))","ba99c7ac":"test = pd.merge(validation_set,items_data,on=\"item_id\",how=\"left\")\ntest = pd.merge(test,item_categories_data,how='left',on='item_category_id')\ntest = pd.merge(test,shops_data,how='left',on='shop_id')\ntest = test.drop(columns = ['item_name','item_category_name','shop_name'])\ntest[\"date_block_num\"] = 34\ntest.head()\n#\u5c06\u6d4b\u8bd5\u96c6\u5904\u7406\u4e3a\u4e0e\u8bad\u7ec3\u96c6\u76f8\u4f3c\u7684\u683c\u5f0f","80b6787e":"train_test = pd.concat([train,test])\ntrain_test.isnull().sum()\n#\u5c06\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u5408\u5e76\u547d\u540d\u4e3atrain_test\u8868\uff0c\u65b9\u4fbf\u8fdb\u884c\u7edf\u4e00\u7684\u6570\u636e\u5904\u7406","a8c801cc":"oer = OrdinalEncoder()\noe = oer.fit_transform(train_test.iloc[:,5:6])\ntrain_test['Cat']=oe\noe = oer.fit_transform(train_test.iloc[:,6:7])\ntrain_test['Location']=oe\n#\u5c06\u6587\u5b57\u6807\u7b7e\u8f6c\u5316\u4e3a\u6570\u503c\u578b","f56b2011":"grouped = train_test.groupby(['shop_id','date_block_num']).agg({'item_cnt_month':'mean'})\ngrouped.columns = ['shop_last_month_mean']\ngrouped.reset_index(inplace=True)\ngrouped['date_block_num']=grouped['date_block_num']+1\ntrain_test = train_test.merge(grouped, on = ['shop_id','date_block_num'], how = 'left')\ntrain_test['shop_last_month_mean'] = train_test['shop_last_month_mean'].fillna(0)\n#\u6dfb\u52a0\u4e00\u4e2a\u7279\u5f81shop_last_month_mean\uff0c\u8868\u793a\u4e0a\u4e2a\u6708\u6bcf\u4e2a\u5546\u5e97\u7684\u5e73\u5747\u9500\u91cf\n#\u5c06\u5176\u4f5c\u4e3a\u672c\u6708\u7684\u7279\u5f81","76f7e6c2":"grouped = train_test.groupby(['item_id','date_block_num']).agg({'item_cnt_month':'mean'})\ngrouped.columns = ['item_last_month_mean']\ngrouped.reset_index(inplace=True)\ngrouped['date_block_num']=grouped['date_block_num']+1\ntrain_test = train_test.merge(grouped, on = ['item_id','date_block_num'], how = 'left')\ntrain_test['item_last_month_mean'] = train_test['item_last_month_mean'].fillna(0)\n#\u6dfb\u52a0\u4e00\u4e2a\u7279\u5f81item_last_month_mean\uff0c\u8868\u793a\u4e0a\u4e2a\u6708\u6bcf\u4e2a\u5546\u54c1\u7684\u5e73\u5747\u9500\u91cf\n#\u5c06\u5176\u4f5c\u4e3a\u672c\u6708\u7684\u7279\u5f81","6cff6df0":"grouped = train_test.groupby(['item_category_id','date_block_num']).agg({'item_cnt_month':'mean'})\ngrouped.columns = ['category_last_month_mean']\ngrouped.reset_index(inplace=True)\ngrouped['date_block_num']=grouped['date_block_num']+1\ntrain_test = train_test.merge(grouped, on=['item_category_id','date_block_num'],how='left')\ntrain_test['category_last_month_mean'] = train_test['category_last_month_mean'].fillna(0)\n#\u6dfb\u52a0\u4e00\u4e2a\u7279\u5f81category_lsat_month_mean\uff0c\u8868\u793a\u4e0a\u4e2a\u6708\u6bcf\u4e2a\u7c7b\u522b\u7684\u5e73\u5747\u9500\u91cf","6640642f":"grouped = train_test.groupby(['shop_id','date_block_num']).agg({'item_cnt_month':'mean'})\ngrouped.columns = ['shop_3month_ago_mean']\ngrouped.reset_index(inplace=True)\ngrouped['date_block_num']=grouped['date_block_num']+3\ntrain_test = train_test.merge(grouped, on = ['shop_id','date_block_num'], how = 'left')\ntrain_test['shop_3month_ago_mean'] = train_test['shop_3month_ago_mean'].fillna(0)\n#\u6dfb\u52a0\u4e00\u4e2a\u7279\u5f81shop_3month_ago_mean\uff0c\u8868\u793a3\u4e2a\u6708\u524d\u6bcf\u4e2a\u5546\u5e97\u7684\u5e73\u5747\u9500\u91cf\n#\u5c06\u5176\u4f5c\u4e3a\u672c\u6708\u7684\u7279\u5f81","bd68fd36":"grouped = train_test.groupby(['item_id','date_block_num']).agg({'item_cnt_month':'mean'})\ngrouped.columns = ['item_3month_ago_mean']\ngrouped.reset_index(inplace=True)\ngrouped['date_block_num']=grouped['date_block_num']+3\ntrain_test = train_test.merge(grouped, on = ['item_id','date_block_num'], how = 'left')\ntrain_test['item_3month_ago_mean'] = train_test['item_3month_ago_mean'].fillna(0)\n#\u6dfb\u52a0\u4e00\u4e2a\u7279\u5f81item_3month_ago_mean\uff0c\u8868\u793a3\u4e2a\u6708\u524d\u6bcf\u4e2a\u5546\u54c1\u7684\u5e73\u5747\u9500\u91cf\n#\u5c06\u5176\u4f5c\u4e3a\u672c\u6708\u7684\u7279\u5f81","e5ec5d4d":"grouped = train_test.groupby(['item_category_id','date_block_num']).agg({'item_cnt_month':'mean'})\ngrouped.columns = ['category_3month_ago_mean']\ngrouped.reset_index(inplace=True)\ngrouped['date_block_num']=grouped['date_block_num']+3\ntrain_test = train_test.merge(grouped, on=['item_category_id','date_block_num'],how='left')\ntrain_test['category_3month_ago_mean'] = train_test['category_3month_ago_mean'].fillna(0)\n#\u6dfb\u52a0\u4e00\u4e2a\u7279\u5f81category_3month_ago_mean\uff0c\u8868\u793a\u4e0a\u4e2a\u6708\u6bcf\u4e2a\u7c7b\u522b\u7684\u5e73\u5747\u9500\u91cf\n#\u5c06\u5176\u4f5c\u4e3a\u672c\u6708\u7684\u7279\u5f81","52d707db":"validation = train_test[train_test['date_block_num']==34]\n#validation\u4e3a\u6700\u7ec8\u7684\u9a8c\u8bc1\u96c6","2d7534a1":"train_x=train_test.query('date_block_num<33').drop(columns=['item_cnt_month','ID']).values\ntest_x=train_test[train_test['date_block_num']==33].drop(columns=['item_cnt_month','ID']).values\ntrain_y=train_test.query('date_block_num<33')['item_cnt_month'].values\ntest_y = train_test[train_test['date_block_num']==33]['item_cnt_month'].values\n#\u5c06\u6700\u540e\u4e00\u4e2a\u6708\u4e3a\u5212\u5206\u4e3a\u8bad\u7ec3\u96c6","66f2afdd":"rmse_list=[]","2403eca8":"for md in np.arange(5,15):\n    t = datetime.now()\n    tree=DecisionTreeRegressor(max_depth=md,min_samples_leaf=5,random_state=42)\n    tree.fit(train_x,train_y)\n    pred_y=tree.predict(test_x)\n    rmse = np.sqrt(mean_squared_error(test_y,pred_y))\n    rmse_list.append(rmse)\n    delta = datetime.now()-t\n    print(f'\u7528\u65f6{delta}\uff0crmse\u4e3a{rmse}')\n#\u5faa\u73af\u641c\u7d22\u6700\u4f73\u53c2\u6570","baf618f1":"plt.plot(np.arange(5,15),rmse_list)\n#\u53ef\u77e511\u4e3amax_depth\u7684\u6700\u4f73\u53c2\u6570","6734d1f8":"rmse_list=[]","684cad29":"for msl in range(1,10):\n    t = datetime.now()\n    tree=DecisionTreeRegressor(max_depth=11,min_samples_leaf=msl,random_state=42)\n    tree.fit(train_x,train_y)\n    pred_y=tree.predict(test_x)\n    rmse = np.sqrt(mean_squared_error(test_y,pred_y))\n    rmse_list.append(rmse)\n    delta = datetime.now()-t\n    print(f'\u7528\u65f6{delta}\uff0crmse\u4e3a{rmse}')","3b5aabf9":"plt.plot(range(1,10),rmse_list) \n#\u53ef\u77e57\u4e3amin_samples_leaf\u4e3a\u6700\u4f73\u53c2\u6570","e336bf88":"ID = validation['ID']\nvalidation = validation.drop(columns=['item_cnt_month','ID'])\nvalidation_x=validation.values\n#\u5904\u7406\u597d\u9a8c\u8bc1\u96c6","db04d849":"train_x=train_test.query('date_block_num<=33').drop(columns=['item_cnt_month','ID']).values\ntrain_y=train_test.query('date_block_num<=33')['item_cnt_month'].values\ntree=DecisionTreeRegressor(max_depth=11,min_samples_leaf=7,random_state=42)\ntree.fit(train_x,train_y)\nYhat = tree.predict(validation_x)\n#\u6839\u636e\u751f\u6210\u7684\u51b3\u7b56\u6811\u5bf9\u9a8c\u8bc1\u96c6\u8fdb\u884c\u9a8c\u8bc1","ae1f1dab":"ID = ID.astype('int64')\nSubmission = pd.DataFrame({'ID':ID,\n                           'item_cnt_month':Yhat})\nSubmission.to_csv('Submission for PFS.csv', index=False)\n#\u751f\u6210\u63d0\u4ea4\u6587\u4ef6","a8f8b616":"\u53ef\u4ee5\u53d1\u73b0train_test\u8868\u4e2d\u7684item_cnt_month\u548cID\u4e24\u5217\u6709\u7f3a\u5931\u503c  \n\u8fd9\u4ee3\u8868\u8bad\u7ec3\u96c6train\u4e2d\u6ca1\u6709ID\u8fd9\u4e00\u5217  \n\u6d4b\u8bd5\u96c6test\u4e2d\u6ca1\u6709item_cnt_month\u8fd9\u4e00\u5217"}}