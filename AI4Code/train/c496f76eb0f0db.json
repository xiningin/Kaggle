{"cell_type":{"83d9d7c3":"code","9e8a8af1":"code","933dafbf":"code","7e488073":"code","c90b7f89":"code","0cf6d327":"code","d15861af":"code","6326d601":"code","c018421f":"code","3a51f220":"code","82570010":"code","b7a0ed80":"code","4910bc36":"code","df8bf35e":"markdown","5dd6198a":"markdown","4bb4c1e8":"markdown","8a2d401f":"markdown","6a41de46":"markdown","b6eb63ce":"markdown","7aeb0e3f":"markdown","c2d7f01b":"markdown"},"source":{"83d9d7c3":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sb\n%matplotlib inline\ndt = pd.read_csv('..\/input\/road-traffic-injuries-deaths-catalonia-201020\/Accidents_de_tr_nsit_amb_morts_o_ferits_greus_a_Catalunya.csv')","9e8a8af1":"dt.head(5)","933dafbf":"dt.columns = ['Year','TypeArea','Date','TypeRoad','KilometerPoint','City','County','Demarcation','Deaths','SeriousInjuries',\n              'MinorInjuries','Victims','VehiclesInvolved','PedestriansInvolved','BicyclesInvolved','MopedsInvolved','MotocyclesInvolved',\n             'LightVehiclesInvolved','HeavyVehiclesInvolved','OtherUnitsInvolved','UnknownUnitsInvolved','SpeedLimit','Leak','FogPresence','TerrainType','SpecialLane',\n             'SpecialTraffic','Climantology','TrackSpecial','AccidentSeverity','FogInfluenced','TerrainInfluenced','TrafficInfluenced',\n             'WeatherInfluenced','WindInfluenced','LuminosityInfluenced','SpecialTrafficInfluenced','RoadObjectInfluenced','FurrowsDitchesInfluenced',\n             'VisibilityInfluenced','Intersection','TrackSpeedLimitDisplay','LightConditions','RoadRegulation','TrackTrajectories',\n             'AccidentClassification','TypeSection','AreaOccorrued','RoadState','RoadType','RoadOwnership','AltimetricLayout','WindClassification',\n             'WorkingDay','Hour','TimeSlot','TypeAccident','DayOfWeek']","7e488073":"dt.info()","c90b7f89":"plt.rcParams[\"figure.figsize\"] = (15,10)\n(dt.groupby(['Year','TypeRoad','County'])['Victims']\n    .sum()\n    .nlargest(30,keep='last')\n    .sort_values()\n    .plot.barh(grid=True))\n\nplt.title('Most Victims per Year, TypeRoad and County')\nplt.xlabel('Victims');","0cf6d327":"(dt.groupby(['Year','TypeRoad','County'])['Deaths']\n    .sum()\n    .nlargest(30,keep='last')\n    .sort_values()\n    .plot.barh(grid=True))\n\nplt.title('Most Deaths per Year, TypeRoad and County')\nplt.xlabel('Deaths');","d15861af":"(dt.groupby(['Year','TypeRoad','County'])[['SeriousInjuries','MinorInjuries']].sum()\n     .nlargest(30,columns=['SeriousInjuries','MinorInjuries'],keep='last')\n     .sort_values(by=['SeriousInjuries','MinorInjuries'])\n     .plot.barh(grid=True))\n\nplt.title('Most Injuries Type per Year, TypeRoad and County')\nplt.xlabel('Injuries')\nplt.xticks(ticks=np.arange(0, 350, step=25));","6326d601":"dt.groupby('Year')[['BicyclesInvolved', 'MopedsInvolved','MotocyclesInvolved',\n    'LightVehiclesInvolved', 'HeavyVehiclesInvolved', \n    'OtherUnitsInvolved', 'UnknownUnitsInvolved']].sum().plot.line(grid=True)\nplt.title('Number of Vechiles involved per Year')\nplt.ylabel('Vechiles')\nplt.yticks(ticks=np.arange(0, 2000, step=150));","c018421f":"dt['SpeedLimit'] = dt['SpeedLimit'].apply(lambda x: np.nan if x in [999.,99.,0.] else x) # there are some values with 999, 99 and 0 SpeedLimit\n\ndt1 = (dt.groupby(['SpeedLimit','TrackSpeedLimitDisplay'])[['BicyclesInvolved', 'MopedsInvolved','MotocyclesInvolved',\n    'LightVehiclesInvolved', 'HeavyVehiclesInvolved', \n    'OtherUnitsInvolved', 'UnknownUnitsInvolved']]\n     .sum().dropna())\ngr = sb.heatmap(dt1,annot=True,fmt='d')\ngr.set_yticklabels(gr.get_yticklabels(), rotation = 0, fontsize = 10)\ngr.set_xticklabels(gr.get_xticklabels(), rotation = 0, fontsize = 8); # is there another way of doing this?","3a51f220":"g2 = (dt[['FogInfluenced','TerrainInfluenced','TrafficInfluenced','WeatherInfluenced','WindInfluenced','LuminosityInfluenced',\n                     'SpecialTrafficInfluenced','RoadObjectInfluenced','FurrowsDitchesInfluenced' ,'VisibilityInfluenced']]\n .isin(['Si'])\n .sum(axis=0)\n .apply(lambda x : x \/ len(dt))\n .sort_values()\n.plot.barh())\nxticks = g2.get_xticks()\ng2.set_xticklabels(['{:,.2%}'.format(x) for x in xticks])\nplt.title('Percentage of influenced conditions on accidents');","82570010":"sb.countplot(x='TypeArea',hue='TypeAccident',data=dt)\nplt.title('Most common type of accident by area')\nplt.xlabel('Types of Areas');","b7a0ed80":"sb.countplot(x='RoadOwnership',hue='TimeSlot',data=dt);","4910bc36":"plt.rcParams[\"figure.figsize\"] = (40,5)\ng4 = sb.FacetGrid(data=dt,col='TimeSlot',row='TypeArea',height=5.,aspect=.85)\ng4.map(plt.hist,'Victims');","df8bf35e":"It appers that most of the accidents happened in the afternoon(Tarda) and morning(Mat\u00ed) in the urban area","5dd6198a":"And once again Barcelonas SE roads are indeed the most dangerous.","4bb4c1e8":"As you can see most of the accidents happened at 100km SpeedLimit with LightVechicles and at a regular road type(Gen\u00e9rica via).","8a2d401f":"Interesting to note that urban areas have way more run overs(atropellament) that its road(Carretera) counter part.","6a41de46":"* Which Counties have the most deaths or injuries over the Years and what Roads are more likely to cause an accident.\n* Most common vechile and at what speed limit did an accident occured.\n* What conditions caused most accidents and where.\n* At which time of the week happened the most accidents","b6eb63ce":"# EDA","7aeb0e3f":"It appers that throughout the Years the most deadly TypeRoad is the SE with Barcelona beeing the most deadly County","c2d7f01b":"I will be renaming the columns since some of them are in catallonian and don't provide much information"}}