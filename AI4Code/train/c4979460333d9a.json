{"cell_type":{"f4f1a15c":"code","e609a41d":"code","4a9df56c":"code","67828cc8":"code","55248af2":"code","df2ee6f6":"code","27298a69":"code","d4bd6568":"code","d1a00b0c":"code","0999789f":"code","4c33476c":"code","79bc1881":"code","13f26380":"code","53cfb599":"code","23ef2b28":"code","bc9398a8":"markdown","4c7beda8":"markdown","f3c93ac5":"markdown","2724c1f3":"markdown","d407b65d":"markdown","ce90e9e8":"markdown","3bcab989":"markdown","bffeebdc":"markdown","01434ebd":"markdown","af2e18b9":"markdown","e949882a":"markdown","3bd7b5bd":"markdown","5b24888c":"markdown","0668659e":"markdown","679bce98":"markdown","f3b6f048":"markdown","da81d357":"markdown","35c06105":"markdown","f67ef548":"markdown","ef2de115":"markdown","8b0ca480":"markdown","78d67368":"markdown","f46691a3":"markdown","8d5f64f9":"markdown","1024234f":"markdown","20704417":"markdown","f60a1bb8":"markdown","7e5ecc86":"markdown","498dc091":"markdown"},"source":{"f4f1a15c":"#for visualization purpose and pre-processing\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\nimport random\n\n# for data prediction and creating submission files\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import*\nimport xgboost as xgb\nimport keras\nimport tensorflow as tf\nimport catboost as cbt\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score","e609a41d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4a9df56c":"df=pd.read_csv('\/kaggle\/input\/mushroom-classification\/mushrooms.csv')\ndf","67828cc8":"colm=[]\nfor col in df.columns:\n    print(col)\n    colm.append(col)\n#colm","55248af2":"print('shape of the dataframe :',df.shape)","df2ee6f6":"for j in range(23):\n    cnt=0\n    for i in range(26):\n        cnt+=len(df[df[colm[j]]==chr(i+97)])\n    print('no. of leakages in',colm[j],'is :',len(df)-cnt)","27298a69":"df","d4bd6568":"df=df.sample(frac=1)\ndf","d1a00b0c":"def non_num_data(df):             # function to turn all categorical data into numbers\n    columns=df.columns.values\n    \n    for column in columns:\n        text_digit_vals={}\n        def con_to_int(val):\n            return text_digit_vals[val]\n        \n        if df[column].dtype!=np.int64 and df[column].dtype!=np.float64:\n            column_contents=df[column].values.tolist()\n            unique_elements=set(column_contents)\n            x=0\n            for unique in unique_elements:\n                if unique not in text_digit_vals:\n                    text_digit_vals[unique]=x\n                    x+=1\n            df[column]=list(map(con_to_int,df[column]))\n    return df\nnon_num_data(df)","0999789f":"X_df=df.drop('class',1)\ny_df=df['class']\n","4c33476c":"X_train,X_test,y_train,y_test=train_test_split(X_df,y_df,test_size=0.2,random_state=0)\nprint(X_train.shape,y_train.shape,X_test.shape,y_test.shape)","79bc1881":"model=RandomForestClassifier()\nmodel","13f26380":"model.fit(X_train,y_train)","53cfb599":"y_pred=model.predict(X_test)\ny_pred","23ef2b28":"\naccuracy_score(y_test,y_pred)","bc9398a8":"Creating *prediction* data","4c7beda8":"Shape of the dataframe :","f3c93ac5":"Checking *Accuracy*","2724c1f3":"# *UPVOTE* please to get more tutorials like this .","d407b65d":"Fitting model","ce90e9e8":"**You can join my discoed server where I try to analyze over many datasets: Discord Link : *https:\/\/discord.gg\/zSK9an6J* (Atlantic Data Studio)**","3bcab989":"* *Train data* and *Test data* preparation","bffeebdc":"# Prediction with RandomForestClassifier","01434ebd":"**Process of a simple machine learning Task---**\n                                   1. Importing libraries\n                                   2. Reading the Data and visualization\n                                   3. Pre-processing (if needed)\n                                   4. EDA (if needed)\n                                   5. Prediction \n                                   6. Conclusion (if needed)   \n    \n  ","af2e18b9":"* Leakages","e949882a":"Creating X and Y","3bd7b5bd":"* Numeration of categorical data","5b24888c":"It is a basic process to use RandomForestClassifier to the dataframe and predict the model .","0668659e":"WOW ! That RandomForestClassifier makes an perfect accuracy.","679bce98":"data is leakage free. \n\nSo we have enough data to analyze the model and predict.\n","f3b6f048":"# Reading data and visualization","da81d357":"Data is medium in size. \n\nThat means we can use many type of classifier to predict the the data or precisely classify .","35c06105":"After shuffling we have to make the data set numeric to initiate further process.","f67ef548":"As we know the data is categorical we have to initiate with some tasks here -\n            1. Checking leakages\n            2. Filling the leakages  (if present)\n            3. If the data is producing any combination or sequential formation then reshuffling the data by rows\n            4. Numerating the categorical data","ef2de115":"Name of the columns","8b0ca480":"Clearly visible it is a categorical data. we need it to be numeric for prediction purpose .\nAs it is a classification problem we will have to understand the data quality.","78d67368":"**This kernel is for those who are new to *data science* or *machine learning* . Please understand each line carefully.**","f46691a3":"* Data reshuffling","8d5f64f9":"Creating model","1024234f":"# Pre-processing","20704417":"Task ends here.","f60a1bb8":"As the data has been turned numric we can start prediction","7e5ecc86":"# Libraries","498dc091":"It is best to shuffle data always. Cause chances of getting a combination after this process are close to zero."}}