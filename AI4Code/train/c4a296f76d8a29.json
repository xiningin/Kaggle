{"cell_type":{"311f1660":"code","b4916be5":"code","41e28c88":"code","1a476ef7":"code","fcb49dfa":"code","a7188b41":"code","c3938c9d":"code","f75d106b":"code","5b71b610":"code","4c095fc2":"code","a96c3b25":"code","d2ec2016":"code","a432d0b6":"code","d5366ebc":"code","9749fbd8":"code","a287c30a":"code","44a189d1":"code","4714c483":"code","9eea485d":"code","e5a3dd82":"code","3c21c0c3":"code","12152ed4":"code","930fb3aa":"code","638c72c1":"code","8a581492":"code","f19e6e8f":"code","96087437":"code","847048de":"code","e7340cdf":"code","dc39367d":"code","b709a8e5":"code","d1c683aa":"code","051f504c":"code","2975eb50":"code","413004ff":"markdown","395605dd":"markdown","c4d1ad9f":"markdown","e16a3656":"markdown","cf67e04a":"markdown","cf7bbabb":"markdown","1e6a3dfe":"markdown","38179502":"markdown","dadd9eea":"markdown","8d79c907":"markdown","81b591f1":"markdown"},"source":{"311f1660":"import warnings\nwarnings.filterwarnings('ignore')","b4916be5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","41e28c88":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","1a476ef7":"data = pd.read_csv('\/kaggle\/input\/asian-and-indian-cuisines\/asian_indian_recipes.csv')\ndata.head()","fcb49dfa":"data.tail()","a7188b41":"data.info()","c3938c9d":"data.shape","f75d106b":"X = data.iloc[:,2:]\nX.head()","5b71b610":"y = data[['cuisine']]\ny.head()","4c095fc2":"from sklearn.model_selection import train_test_split\n# from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import BernoulliNB,GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import accuracy_score,precision_score,confusion_matrix,classification_report","a96c3b25":"models = [\n    BernoulliNB(),\n    DecisionTreeClassifier(criterion='gini'),\n    RandomForestClassifier(n_estimators=100),\n    SVC(kernel='linear')\n]","d2ec2016":"CV = 10\ncv_df = pd.DataFrame(index=range(CV * len(models)))\nentries = []\ni=0\nfor model in models:\n    model_name = model.__class__.__name__\n    accuracies = cross_val_score(model, X, y, scoring='accuracy', cv=CV) \n    entries.append([model_name, accuracies.mean()])\n    i += 1\ncv_df = pd.DataFrame(entries, columns=['model_name', 'accuracy'])","a432d0b6":"cv_df","d5366ebc":"plt.figure(figsize=(10,5))\nax=sns.barplot(x=\"accuracy\", y=\"model_name\", data=cv_df)\n","9749fbd8":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3)","a287c30a":"model_nba = BernoulliNB(binarize = .5)\nmodel_nba.fit(X_train,y_train)","44a189d1":"y_pred = model_nba.predict(X_test)","4714c483":"print('accuracy:',accuracy_score(y_test,y_pred))","9eea485d":"#kiem tra do chinh xac\nprint('training r^2 :',model_nba.score(X_train,y_train))\nprint('test r^2 :',model_nba.score(X_test,y_test))","e5a3dd82":"confusion_matrix(y_test,y_pred)","3c21c0c3":"print(classification_report(y_test,y_pred))","12152ed4":"from sklearn.ensemble import AdaBoostClassifier","930fb3aa":"boosting = AdaBoostClassifier(n_estimators=100,\n                             base_estimator=model_nba,\n                             learning_rate=1)","638c72c1":"model_new = boosting.fit(X_train,y_train)","8a581492":"print('training r^2 :',model_new.score(X_train,y_train))","f19e6e8f":"print('test r^2 :',model_new.score(X_test,y_test))","96087437":"df_new = X.iloc[:2,:]\ndf_new.iloc[:,:] = 0","847048de":"df_new.loc[0,['cumin','fish']] = 1\ndf_new.loc[1,['cumin']] = 1","e7340cdf":"df_new","dc39367d":"X_new = df_new\ny_new = model_nba.predict(X_new)","b709a8e5":"y_new","d1c683aa":"labels = model_nba.classes_\nlabels","051f504c":"print(confusion_matrix(y_test,y_pred,labels=model_nba.classes_))","2975eb50":"sns.heatmap(confusion_matrix(y_test,y_pred,labels=model_nba.classes_))","413004ff":"## Predict","395605dd":"The country with the highest percentage of dish recipes is mislabeled: Japan","c4d1ad9f":"Less accurate model, being overfitting. No better than the original algorithm","e16a3656":"The accuracy is quite high, about 80%.\nModels are not overfitting","cf67e04a":"## Select model","cf7bbabb":"## Evaluate model","1e6a3dfe":"Percentage of Korean food recipes that are mislabeled as Japanese: 4.6%","38179502":"Percentage of Japanese food recipes that are correctly predicted: 58.6%","dadd9eea":"Both Indian food","8d79c907":"Temporarily, we will choose BernoulliNB because this model has the highest accuracy","81b591f1":"Try using the AdaBoost algorithm to improve the model?"}}