{"cell_type":{"81e4bfac":"code","6ae12dc5":"code","1d81d767":"code","5599d246":"code","88f6c405":"code","ea2d6424":"code","118c203e":"code","3a3a6e8c":"code","d4c16c71":"code","0345fa48":"code","60eee9ae":"code","08452dbe":"code","061d8fe5":"code","6d1b2b70":"code","c4807ca0":"code","b10140d6":"code","c03c5e15":"code","bcd570a2":"code","2be2b2b5":"code","bbae9962":"code","d98764d1":"code","2a3e5ed9":"code","d9410e74":"code","2bc6bc13":"code","4691ced1":"code","7597c71b":"code","c21ecd30":"code","319bd030":"code","ba2a0d96":"code","8997ea11":"code","7d8e097a":"code","e364da10":"code","98a173cc":"code","5191ae85":"code","4f07be35":"code","5f967eec":"code","57c976d4":"code","eccd1588":"code","30fe5e34":"code","4a050de4":"code","83899f55":"markdown","02efc0b6":"markdown","4f2f3502":"markdown","b73a0352":"markdown","2b37f5d1":"markdown","f4bbe787":"markdown","63e5a596":"markdown","965e2c59":"markdown","cac96586":"markdown","b0193bf9":"markdown"},"source":{"81e4bfac":"# Imports\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","6ae12dc5":"plt.style.use('fivethirtyeight')","1d81d767":"ri = pd.read_csv(\"..\/input\/stanford-open-policing\/police.csv\")\n","5599d246":"ri.head()","88f6c405":"ri.stop_date = pd.to_datetime(ri.stop_date)","ea2d6424":"ri.info()","118c203e":"ri[\"year\"] = ri.stop_date.dt.year\nvil_counts_by_year = ri.year.value_counts(normalize=True).sort_index()\n\nprint(vil_counts_by_year)","3a3a6e8c":"ri.stop_date.dt.year.value_counts().plot(kind='bar')","d4c16c71":"plt.plot(vil_counts_by_year.index, vil_counts_by_year.values, \n         color='#8f3a84', marker='*', linestyle='solid', \n         markersize=12, linewidth=3, label=\"violation\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Values\")\nplt.legend()\nplt.title(\"Year Wise Violation\")\nplt.show()","0345fa48":"driver_age_not_null_data = ri.loc[ri.driver_age.notnull()].driver_age.unique().tolist()","60eee9ae":"print(driver_age_not_null_data)","08452dbe":"data = [driver_age_not_null_data]\nbox = plt.boxplot(x=data, notch=True, labels=[\"Age Distribution\"])\n\nc2 = 'purple'\nfor item in ['boxes', 'whiskers', 'fliers', 'medians', 'caps']:\n        plt.setp(box[item], color=c2)\n\nplt.setp(box[\"fliers\"], markeredgecolor=c2)\nplt.ylabel(\"Age\")\nplt.show()","061d8fe5":"vil_counts_by_year = ri.year.value_counts(normalize=True).sort_index()","6d1b2b70":"vil_counts_by_year","c4807ca0":"color = []\nfor year in vil_counts_by_year.index:\n  if year == 2005:\n    color.append('#5d4037')\n  elif year == 2012:\n    color.append('#880e4f')\n  else:\n    color.append('#90a4ae')","b10140d6":"plt.bar(\n    x=vil_counts_by_year.index,\n    height=vil_counts_by_year.values,\n    color=color\n)\nfor year,value in vil_counts_by_year.items():\n    plt.text(x=year , y =value , s=f\"{round(value*100, 2)} %\" , fontdict=dict(fontsize=9))\nplt.xlabel(\"Years\")\nplt.ylabel(\"Counts\")\nplt.title(\"Year Wise Violation\")\nplt.legend()\nplt.show()","c03c5e15":"age_vs_stop = ri[ri.driver_age.notnull()].driver_age.value_counts().sort_index()","bcd570a2":"plt.scatter(age_vs_stop.index.tolist(), age_vs_stop.values.tolist(), \n            c =\"blue\", label=\"stopped\")\nplt.title(\"Correlation\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"Stop Counts\")\nplt.legend()\nplt.show()","2be2b2b5":"ri.violation.unique()","bbae9962":"years = ri.year.unique().tolist()\nspeeding_violation = ri[ri.violation=='Speeding'].groupby(ri.year).violation.value_counts()\nspeeding_violation_data = [speeding_violation.get(x, np.array([0])).tolist()[0]  for x in years] \nmoving_violation = ri[ri.violation=='Moving violation'].groupby(ri.year).violation.value_counts()\nmoving_violation_data = [moving_violation.get(x, np.array([0])).tolist()[0] for x in years]\neqp_violation = ri[ri.violation=='Equipment'].groupby(ri.year).violation.value_counts()\neqp_violation_data = [eqp_violation.get(x, np.array([0])).tolist()[0] for x in years]\n","d98764d1":"print(years, speeding_violation_data, moving_violation_data, eqp_violation_data)","2a3e5ed9":"plt.plot([], [], color='r', label = 'D 1')\nplt.plot([], [], color='g', label = 'D 2')\nplt.plot([], [], color='b', label = 'D 3')","d9410e74":"plt.stackplot(years, speeding_violation_data, moving_violation_data, eqp_violation_data, labels=['speed', 'moving', 'equipment'], \n              colors=['r','g','b'])\nplt.legend()\nplt.xlabel(\"Years\")\nplt.ylabel(\"Violation Counts\")\nplt.show()","2bc6bc13":"pie_data = ri.violation.value_counts(normalize=True)\nprint(pie_data)\npie_label = pie_data.index.tolist()\npie_value = pie_data.values.tolist()\nprint(pie_label, pie_value)","4691ced1":"plt.pie(x=pie_value, labels=pie_label, autopct='%1.1f%%', explode=(0.05, 0, 0, 0, 0, 0))\nplt.title(\"Violation Category\")\nplt.figure(figsize=(25.0, 5.0))\nplt.show()","7597c71b":"d = ri.year.value_counts(normalize=True).sort_index()\nd.plot(xlabel=\"year\", ylabel=\"counts\", legend=True)","c21ecd30":"x = d.index.tolist()\ny = d.values.tolist()","319bd030":"plt.fill_between(x=x, y1=y,facecolor='g', alpha=0.6, label=\"violation\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Violation Percentage\")\nplt.legend()\nplt.title(\"Violation with Years\")","ba2a0d96":"ri.driver_age_raw.values","8997ea11":"ri.loc[((ri.driver_age_raw == 8801) | (ri.driver_age_raw==2919) | (ri.driver_age_raw==0)),\"driver_age_raw\"] = np.nan","7d8e097a":"plt.hist(x=ri.driver_age_raw.values, edgecolor='black')\nplt.xlabel(\"Driver BirthYear\")\nplt.ylabel(\"Driver counts\")\nplt.legend()\nplt.show()","e364da10":"ri.head()","98a173cc":"year = ri.year.unique()\n","5191ae85":"ri.violation.unique()","4f07be35":"year_srs = ri[ri.violation=='Speeding'].year.value_counts(normalize=True).sort_index()\nspeeding_data = [ year_srs.get(x, 0) for x in year ]\nprint(speeding_data)","5f967eec":"year_srs = ri[ri.violation=='Equipment'].year.value_counts(normalize=True).sort_index()\nequipment_data = [ year_srs.get(x, 0) for x in year ]\nprint(equipment_data)","57c976d4":"plt.bar(year, speeding_data, color='#f57c00', label=\"speeding\")\nplt.bar(year, equipment_data, bottom=speeding_data, color='#558b2f', label=\"equipment\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Violation Percentage\")\nplt.title(\"Speeding & Equipment Violation Percentage\")\nplt.legend()\nplt.show()","eccd1588":"from mpl_toolkits.mplot3d import axes3d","30fe5e34":"year_srs = ri[ri.violation=='Seat belt'].year.value_counts(normalize=True).sort_index()\nseat_belt_data = [ year_srs.get(x, 0) for x in year ]\nprint(seat_belt_data)","4a050de4":"fig = plt.figure()\n\nax = fig.add_subplot(111, projection = '3d')\n\nax.scatter(speeding_data, equipment_data, seat_belt_data, c='#b71c1c', marker='*', \n           label='violation')\n\nax.set_xlabel('speeding')\nax.set_ylabel('equipment')\nax.set_zlabel('seat belt')\nplt.title(\"3D Scatter Speeding\/Equip\/Seat belt\")\nplt.legend()\nplt.tight_layout()\nplt.show()","83899f55":"# 10. 3D Graph - Matplotlib","02efc0b6":"# 8. Histogram","4f2f3502":"# 2. Box Plot","b73a0352":"# 6. Pie Plot","2b37f5d1":"# 9. Stacked Bar Plot","f4bbe787":"# 1. Line Plot","63e5a596":"# 5. Stacked Area Plot","965e2c59":"# 7. Line Plot Fill Color","cac96586":"# 3. Bar Plot","b0193bf9":"# 4. Scatter Plot"}}