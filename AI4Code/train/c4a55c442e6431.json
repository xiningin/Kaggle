{"cell_type":{"6329ee17":"code","5ca4c441":"code","05803526":"code","a8a462fb":"code","43fc4761":"code","98f8402d":"code","c9c2b629":"code","6d68f50d":"code","20d6a711":"code","21e2248c":"code","809ad5cf":"code","fbf8c317":"code","b800ee63":"code","8e375c0c":"code","16b88c6b":"code","c9c4f6ce":"code","0dcb43f1":"code","c3d86fbc":"code","8fee2295":"code","7e30333b":"code","159682df":"code","252e38e2":"code","ef880346":"code","8fbb5cf8":"markdown","039a34a2":"markdown","9acdfc41":"markdown","20d60cac":"markdown","e9d1ba0c":"markdown","c80429a3":"markdown","a0027964":"markdown","cbc253ab":"markdown","9a21be3b":"markdown","d9b47e14":"markdown","6dd3a8fd":"markdown","f99845d5":"markdown","d416b210":"markdown","1d3805ca":"markdown","aab3694c":"markdown","d775d22e":"markdown","be78c8ca":"markdown"},"source":{"6329ee17":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nfrom warnings import filterwarnings\nfilterwarnings('ignore')\n%matplotlib inline","5ca4c441":"df = pd.read_csv('..\/input\/insurance.csv')\ndf.head()","05803526":"df.describe()","a8a462fb":"df.info()","43fc4761":"df_clean = df.replace(to_replace={'yes':1, 'no':0})","98f8402d":"df_clean.sex.unique()","c9c2b629":"df_clean.region.unique()","6d68f50d":"#defining my own palette for smokers and non-smokers to appear as red and green respectively.\npal = ['#FF0000', #Red\n       '#006400', #Green\n      ]","20d6a711":"plt.figure(figsize=(10,8))\nsns.heatmap(df_clean.corr(), annot=True)","21e2248c":"sns.pairplot(df_clean, hue='smoker', palette=pal)","809ad5cf":"sns.scatterplot(x='charges', y='age', data=df_clean, hue='smoker', palette=pal)","fbf8c317":"sns.boxplot(x='smoker', y='charges', data=df_clean, palette=pal, order=[1, 0])","b800ee63":"sns.scatterplot(x='charges', y='age', data=df_clean[(df_clean['smoker']==1)], color=\"Red\", hue='bmi', palette='Blues')\nplt.title('Smoker\\'s \"Age vs Charges\"')","8e375c0c":"df_clean['BMI below limit'] = df_clean['bmi'].apply(lambda x: 1 if x<=30 else 0)\nsns.scatterplot(x='charges', y='age', data=df_clean[(df_clean['smoker']==1)], color=\"Red\", hue='BMI below limit', palette='Blues')\nplt.title('Smoker\\'s \"Age vs Charges\"')","16b88c6b":"from sklearn.model_selection import train_test_split\n","c9c4f6ce":"y= df_clean[df_clean['smoker']==1]['charges']\nX= df_clean[df_clean['smoker']==1][['age', 'bmi', 'children']]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","0dcb43f1":"from sklearn.linear_model import LinearRegression\nlm = LinearRegression()","c3d86fbc":"lm.fit(X_train, y_train)\npredictions = lm.predict(X_test)\nplt.scatter(y_test,predictions)\nplt.xlabel('Y Test')\nplt.ylabel('Predicted Y')","8fee2295":"coefficients = pd.DataFrame(lm.coef_,X.columns)\ncoefficients.columns = ['Coefficient']\ncoefficients","7e30333b":"from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error, classification_report\n\nprint('MAE:', mean_absolute_error(y_test, predictions))\nprint('MSE:', mean_squared_error(y_test, predictions))\nprint('RMSE:', np.sqrt(mean_squared_error(y_test, predictions)))\nprint('R2 test_data', r2_score(y_test, predictions))","159682df":"sns.distplot((y_test-predictions),bins=15)","252e38e2":"from sklearn.ensemble import RandomForestRegressor\n\nrfr = RandomForestRegressor(n_estimators =100, criterion = 'mse',random_state = 42,n_jobs = -1)\nrfr.fit(X_train,y_train)\nrfr_pred_train = rfr.predict(X_train)\nrfr_pred_test = rfr.predict(X_test)\n\n\nprint('MSE train_data: ', round((mean_squared_error(y_train,rfr_pred_train)), 1))\nprint('MSE test_data: ', round(mean_squared_error(y_test,rfr_pred_test), 1))\nprint('R2 train_data: ',round(r2_score(y_train,rfr_pred_train), 2))\nprint('R2 test_data: ', round(r2_score(y_test,rfr_pred_test), 2))\n","ef880346":"sns.distplot((y_test - rfr_pred_test),bins=30)","8fbb5cf8":"## Time for some machine learning. Let's start with Linear Regression and see how it does","039a34a2":"> After experimentation, I found BMI of 30 to be the \"sweet-spot\" that divides these streams.\nSo, people who are smokers and have BMI over 30 pay significantly higher rates than other smokers.","9acdfc41":"> Lazy implementation gave around 69% accuracy which is not that great.","20d60cac":"First, we load the data into a dataframe and look at the sample\/head of the data.","e9d1ba0c":"> So, smokers are charged significantly higher on average than non-smokers. Let's dive into what separates the two streams of smokers (one with higher charges and one with lesser).\nSince, BMI was another correlated factor to the charges let's use that as a hue to see the trend","c80429a3":"> We can convert these regions into numerical variables later on if needed. Keeping it as strings for easy interpretability.","a0027964":"> Hmm. No other genders included. Not sure why. TODO: Research about how healthcare categorizes LGBTQ insured.","cbc253ab":"Let's explore the insurance data from kaggle and see if we can \n1. Find any useful information through Exploratory Data Analysis.\n2. Use any machine learning algorithms to predict any useful parameters.","9a21be3b":">Charges are heavily correlated to being a smoker, followed by age, bmi, and children in that order.","d9b47e14":">Seems like we are going to miss out on all the fun of cleaning the dirty data today. May be wait for the next project. \n>However, we can replace \"yes\" or \"no\" to binary (1s and 0s) to make it easier for the machine to understand.","6dd3a8fd":"> These coeff how much a unit change in the age, bmi, and having children will affect the Charges. e.g. A Unit increase in \"age\" will increase \"charges\" by ~246.","f99845d5":"> Visualizing the data definitely shows us some unique differences between the smokers and non-smokers. Let's dive a layer deeper.","d416b210":"> Looks pretty straight-forward. Let's check for other stats info and if the data has any nulls.","1d3805ca":"> We can normalize the data and recalculate the predictions but I think RandomForestRegressor should do better in this scenario as it uses bagging and the summation of results from different forests.","aab3694c":"> 87% accuracy is pretty good given that we haven't normalized the data.","d775d22e":"> Seems like BMI is the factor that splits the two categories. ","be78c8ca":"> Converted \"smoker\" column from \"yes\" or \"no\" to binary (1s, 0s)"}}