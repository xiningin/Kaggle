{"cell_type":{"6e9f736c":"code","d2113c5b":"code","d1ad8fda":"code","5ea76ce6":"code","3038a0a3":"code","4a3c0947":"code","c9f67a93":"code","84b32439":"code","2976d99e":"code","71518377":"code","f0dcb246":"code","b35cce6b":"code","d9d785d0":"code","f1bddf6c":"code","d7695243":"code","10a00f71":"code","61190667":"code","21897f2a":"code","3ce6bdd8":"markdown","2f0653bb":"markdown","c87f2313":"markdown","8a39b32c":"markdown"},"source":{"6e9f736c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","d2113c5b":"df1 = pd.read_csv('\/kaggle\/input\/toronto-bikeshare-data\/bikeshare2018\/bikeshare2018\/Bike Share Toronto Ridership_Q1 2018.csv')\ndf2 = pd.read_csv('\/kaggle\/input\/toronto-bikeshare-data\/bikeshare2018\/bikeshare2018\/Bike Share Toronto Ridership_Q2 2018.csv')\ndf3 = pd.read_csv('\/kaggle\/input\/toronto-bikeshare-data\/bikeshare2018\/bikeshare2018\/Bike Share Toronto Ridership_Q3 2018.csv')\ndf4 = pd.read_csv('\/kaggle\/input\/toronto-bikeshare-data\/bikeshare2018\/bikeshare2018\/Bike Share Toronto Ridership_Q4 2018.csv')","d1ad8fda":"df2018 = df1.copy()\ndf2018 = df2018.append([df2, df3, df4], sort=False)\ndel df1\ndel df2\ndel df3\ndel df4","5ea76ce6":"df2018.head(10)","3038a0a3":"df2018['time'] = pd.to_datetime(df2018.trip_start_time)\ndf2018.index = df2018.time.dt.date\ndf2018.index.name = 'index'\n\ndfdf2018 = df2018.dropna(subset=['from_station_name','to_station_name'])\ndf = df2018.copy()","4a3c0947":"\nstation = list(set(list(df.from_station_name.values) + list(df.to_station_name.values)))\ndate = df.index.unique().values","c9f67a93":"route = df.copy()\nroute = route[['from_station_name', 'to_station_name']]","84b32439":"twoway = route.copy()\ntwoway = twoway[twoway.from_station_name == twoway.to_station_name]\noneway = route.copy()\noneway = oneway[oneway.from_station_name != oneway.to_station_name]","2976d99e":"twoway_map = twoway.groupby('from_station_name').count().sort_values(by='to_station_name', ascending=False)\nprint('10 Stations with the highest number of two-way traveller')\ntwoway_map[:10]","71518377":"outmap = pd.get_dummies(route.from_station_name).groupby('index').sum()\ninmap = pd.get_dummies(route.to_station_name).groupby('index').sum()","f0dcb246":"outmap.head(5) # number of bikes leaves the station","b35cce6b":"inmap.head(5) # number of bikes entering the station","d9d785d0":"print('number of station with enough bike to use next morning, aka number of bikes entering > number of bikes leaving the station')\n((inmap - outmap)>=0).sum(axis=1)","f1bddf6c":"print('number of station with less bike to use next morning, or need a crew to return bikes back to station before next morning')\n((inmap - outmap)<0).sum(axis=1)","d7695243":"print('Station and the total number of days in 2017 where stations need more bikes to be returned by the crew every night')\n((inmap - outmap)<0).sum(axis=0).sort_values(ascending=False)[:20]","10a00f71":"bike_minus = inmap - outmap # incoming bikes minus leaving bikes\nbike_minus = np.absolute(bike_minus[bike_minus < 0]) # show only minus value","61190667":"bike_minus.head(10) # number of bikes that required by crew to be returned to each station","21897f2a":"print('20 Stations with the highest number of required returned bikes in a day')\nnp.max(bike_minus, axis=0).sort_values(ascending=False)[:20]","3ce6bdd8":"calculate the number of bikes entering the station minus number of bikes leaving the station\n* if the result >= 0 then there are enough bike available in the station to be used next morning\n* if the result < 0 then we need crew to return some bikes back to the station from other station","2f0653bb":"Separate two-way traveller with one-way traveller for each station","c87f2313":"Total unique days in 2017 are 329 days. But as we can see below, some stations always lack of bikes for more than 200 days out of 329 days in a year.\n\nMay be we should add more bikes in the stations or require user\/member to bring their own bikes","8a39b32c":"Create a table regarding to the number of bikes leaving ('from_station') and entering ('to_station') each day"}}