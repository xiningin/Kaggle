{"cell_type":{"94b79673":"code","970b68af":"code","ba1feec1":"code","1f633054":"code","93a825fc":"code","89b0ff99":"code","88e6b803":"code","537ac383":"code","cde2cbdc":"code","57df04cf":"code","489378e5":"code","468a6c81":"code","83e46f93":"code","c24e775a":"code","024f699a":"code","623b4cec":"code","7936e09e":"markdown","551e9a67":"markdown","b29b050f":"markdown","741ebe7a":"markdown","58de828e":"markdown","a619a96e":"markdown","42950888":"markdown","129b4d8e":"markdown","d32273ef":"markdown","1f975fbb":"markdown","a23831f5":"markdown","44774909":"markdown","7aeca7fe":"markdown","4cf9716f":"markdown","ec82c353":"markdown","bfaadb4b":"markdown","9d67e352":"markdown","6db083bc":"markdown","29774ab3":"markdown","1c773245":"markdown","78b6043b":"markdown","fdee9058":"markdown"},"source":{"94b79673":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\n\n# Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# To impute missing Values\nfrom sklearn.impute import SimpleImputer","970b68af":"# setting up the chart size and background\nplt.rcParams['figure.figsize'] = (16, 8)\nplt.style.use('fivethirtyeight')\n\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)\n\n# for Interactive Shells\nfrom IPython.display import display","ba1feec1":"# Creating sample of Standard Normal Distribution: Mean = 0 and Std Dev = 1 \n# here we are calling numpy .random.normal function that creates random numbers \n# which are normally distributed and by specifying loc =0 (mean =0) and scale = 1 (standard deviation = 1) \n# and finally we take size (n = 500)\nstd_norm_dist = np.random.normal(loc = 0, scale = 1, size=500)\n\n# Now we find the percentiles from 0 to 100th for the distribution created above. \n# we use the simple for loop and inside we call the np.percentile to get the percentiles.\nfor i in range(0,101):\n    print(i, np.percentile(std_norm_dist,i), end =\"\\t\")","1f633054":"# Created a normal distribution with mean = 17, std dev as 7 and points = 1000\nnorm_dist = np.random.normal(loc = 17, scale = 7, size=1000)\n\n#stats.probplot() here i used the normal distribution created above, to compare I passed \n# in dist = 'norm'(which means 'normal distribution'), finally the plot represents which \n# library of visualizing we want, i used matplotlib to keep things simple\nstats.probplot(norm_dist, dist=\"norm\", plot=plt)\nplt.show()","93a825fc":"std_norm_dist1 = np.random.normal(loc = 17, scale = 7, size=10000)\n\nstats.probplot(std_norm_dist1, dist=\"norm\", plot=plt)\nplt.show()","89b0ff99":"std_norm_dist1 = np.random.normal(loc = 20, scale = 5, size=100)\n\nstats.probplot(std_norm_dist1, dist=\"norm\", plot=plt)\nplt.show()","88e6b803":"df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')","537ac383":"df.head()","cde2cbdc":"df.shape","57df04cf":"df = df.select_dtypes(exclude=['object'])","489378e5":"# dropping all the rows with missing values as this is the target variable and we must not assume or impute this\ndf.dropna(axis=0, subset=['SalePrice'], inplace=True)\n\n# Imputing mean for the missing values in the rest of the columns\nmy_imputer = SimpleImputer(strategy='mean') #by default is mean \ndf_clean = pd.DataFrame(my_imputer.fit_transform(df))\n\n# imputation removed column names; getting them back\ndf_clean.columns = df.columns\n\n#finally checking the null values \ndf_clean.isnull().sum().sum()","468a6c81":"stats.probplot(df_clean['SalePrice'], dist = 'norm', plot = plt);","83e46f93":"sns.distplot(df_clean['SalePrice']);","c24e775a":"# we can use numpy .log function to Log transform the SalePrice\ndf_clean['SalePrice'] = np.log(df_clean['SalePrice'])\n\n# Now, we try QQ plot and distribution plot again and see what happens\nstats.probplot(df_clean['SalePrice'], dist = 'norm', plot = plt)\nfig = plt.figure()\nsns.distplot(df_clean['SalePrice']);","024f699a":"# Checking variable: GrLivArea\nstats.probplot(df_clean['GrLivArea'], dist ='norm', plot =plt);\nfig =plt.figure()\nsns.distplot(df_clean['GrLivArea']);","623b4cec":"# Correcting variable: LotFrontage using Log Transformation\ndf_clean['GrLivArea'] = np.log(df_clean['GrLivArea'])\n\nstats.probplot(df_clean['GrLivArea'], dist ='norm', plot =plt);\nfig =plt.figure()\nsns.distplot(df_clean['GrLivArea']);","7936e09e":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color:  #c1531f   \">Data Description<\/li>\n<div class=\"alert alert-info\" role=\"alert\">\n<ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n    <p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">Want to know more about data? <\/p>\n<a href=\"https:\/\/www.kaggle.com\/c\/house-prices-advanced-regression-techniques\/data\/?\" target=\"_blank\"><p style=\"color:  Blue; font-family:cursive;\">Check out Data_description.txt<\/a>\n","551e9a67":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Observations:<\/li>\n<div class=\"alert alert-info\" role=\"alert\">\n<ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">1. As parameter (size), number of values, increases more points fall on the line (if both plots are similar) and vice-versa <\/p>\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">2. Hence, we can say that QQ plot can do better with large number of points as compared to less number of points.<\/p>","b29b050f":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Let's try one more variable:<\/li>\n\n<div class=\"alert alert-info\" role=\"alert\">\n<ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">Checking variable: GrLivArea<\/p>","741ebe7a":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">We will use only numerical columns to ease of the topic<\/li>","58de828e":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Taking care of the missing Values which may cause errors when we Log Transform<\/li>","a619a96e":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Shape of the data<\/li>","42950888":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Implementation of QQ Plots using stats module<\/li>\n<div class=\"alert alert-info\" role=\"alert\">\n<ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">Creating sample of Normal Distribution: Mean = 17 and Std Dev = 7<\/p>\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">Now, stats module in python has a plot called PROBPLOT which exactly plots QQ plots taking care of the sorting and percentile steps behind the scene. That is the reason I showed the percentile formation but didn;t save it in a variable.<\/p>\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">Finally plotting the QQ plot using stats module and comparision distribution used here is normal distribution.<\/p>\n","129b4d8e":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color:  #c1531f   \">Notebook Description\n<\/li>\n\n><div class=\"alert alert-info\" role=\"alert\">\n><ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n><li > As discussed in the <a  style= \"color:  black\"  href=\"https:\/\/www.linkedin.com\/feed\/update\/urn:li:activity:6833230573343932416\/\" target=\"_blank\">Linkedin Post<\/a> Here we are to practice and see what we discussed.<\/li>\n> <li> In this notebook you'll see the implementation of QQ plots using stats module and then a few examples of using QQ plots with Dataset: <a style= \"color:  black\" href=\"https:\/\/www.kaggle.com\/c\/house-prices-advanced-regression-techniques\" target=\"_blank\">House Prices - Advanced Regression Techniques<\/a><\/li>\n> <li>I also corrected the noramlity issue when arise for the respective Variables.<\/li>\n> <li>Finally you can also check the normality of different variables and can practice the QQ Plots concept.<\/li>\n><\/ul>\n><\/div>\n","d32273ef":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Understanding to create a distribution and find the percentiles of it.<\/li>\n<div class=\"alert alert-info\" role=\"alert\">\n<ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\"> To get the understanding of creating a distribution using numpy and to get percentiles of the same, lets create one and see how it looks.<\/p>\n<li>Creating sample of Standard Normal Distribution: Mean = 0 and Std Dev = 1 <\/li>\n<li> Finding the 0 to 100th percentiles of created Standard Normal Distribution <\/li>\n","1f975fbb":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Lets Correct this using Log Transformation:<\/li>\n<div class=\"alert alert-info\" role=\"alert\">\n<ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">We will use easiest Log Transformation to correct this, as we know the log transformation basically zoom into the scale and which is exactly what we need here.<\/p>","a23831f5":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Observations:<\/li>\n<div class=\"alert alert-info\" role=\"alert\">\n<ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">we can see that this SalePrice is skewed and hence it is partially falling on the normal distribution line in QQ plot.<\/p>","44774909":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Observation:<\/li>\n<div class=\"alert alert-info\" role=\"alert\">\n<ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">Clearly this Variable doesn't follow Normal Distribution, to double check this lets plot its distribution<\/p>","7aeca7fe":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Conclusion:<\/li>\n<div class=\"alert alert-info\" role=\"alert\">\n<ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">QQ plots compare two distribution and checks if they belong to same distribution. <\/p>\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">More points on the line means more similarity<\/p>\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">QQ works better with more data and efficiency reduces as the data points reduces.<\/p>\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\"><b>Try out more variables and built better understanding.<b>","4cf9716f":"<div class=\"alert alert-info\" role=\"alert\">\n<ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\"> Correcting variable: GrLivArea using Log Transformation<\/p>","ec82c353":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Observation:<\/li>\n<div class=\"alert alert-info\" role=\"alert\">\n<ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">Looks Better to me as compared to the previous plots.<\/p>","bfaadb4b":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Looking at the first 5 rows of the data<\/li>","9d67e352":"<div>\n<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Setting up some parameters for Visualization, outputs etc<\/li>\n","6db083bc":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Displaying the QQ plot of variable 'SalesPrice'<\/li>","29774ab3":"<div class=\"alert alert-info\" role=\"alert\">\n<ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">Lets see what happens when the number of points (size) is increased<\/p>","1c773245":"<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Let's load the data and perform the same steps on different variables<\/li>","78b6043b":"<div class=\"alert alert-info\" role=\"alert\">\n<ul style=\"font-family:cursive;font-size:20px;color:  #2025bd\">\n<p style=\"font-family:cursive;font-size:20px;color:  #2025bd\">Lets see what happens when the number of points (size) is decreased<\/p>","fdee9058":"\n<li style=\"font-family:'Goudy Old Style';font-weight: bold;font-size:40px;color: #c1531f  \">Importing Required Libraries<\/li>"}}