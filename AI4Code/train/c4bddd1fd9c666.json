{"cell_type":{"87a7297d":"code","12fa811d":"code","acacf845":"code","524120b3":"code","217731eb":"code","08070bec":"code","3da1bcfe":"code","5729b49f":"code","d5cff7c5":"code","48caaa15":"code","12816651":"code","2962315b":"code","66c25afc":"code","9b156fab":"code","cfb49456":"markdown","b2265d89":"markdown","0ff3d751":"markdown","dcb696c6":"markdown","be47bab8":"markdown","141b9d44":"markdown","32a8125a":"markdown","95969832":"markdown","8923d9d5":"markdown","5110def8":"markdown","9b6203b1":"markdown","caea4cc2":"markdown","132768dc":"markdown","d1b96941":"markdown","7ad05f50":"markdown","f4f8802b":"markdown","451b6f9b":"markdown","ba7a62f2":"markdown","12e0fd31":"markdown","51d72be9":"markdown","f0b4ac72":"markdown"},"source":{"87a7297d":"!pip install evalml","12fa811d":"import evalml\nX, y = evalml.demos.load_breast_cancer()\nX_train, X_test, y_train, y_test = evalml.preprocessing.split_data(X, y, problem_type='binary')\n# Here we'll split the data table using evalml's preprocessing \"split_data\" library","acacf845":"X_train.head()","524120b3":"from evalml.automl import AutoMLSearch\nautoml = AutoMLSearch(X_train=X_train, y_train=y_train, problem_type='binary')","217731eb":"automl.search()","08070bec":"automl.rankings","3da1bcfe":"automl.describe_pipeline(5)","5729b49f":"pipeline = automl.get_pipeline(1)\nprint(pipeline.name)\nprint(pipeline.parameters)","d5cff7c5":"best_pipeline = automl.best_pipeline","48caaa15":"best_pipeline.score(X_test, y_test, objectives=[\"auc\",\"f1\",\"Precision\",\"Recall\"])","12816651":"automl_auc = AutoMLSearch(X_train=X_train, y_train=y_train,\n                          problem_type='binary',\n                          objective='auc',\n                          additional_objectives=['f1', 'precision'],\n                          max_batches=1,\n                          optimize_thresholds=True)\n\nautoml_auc.search()","2962315b":"best_pipeline.save(\"model.pkl\")","66c25afc":"check_model=automl.load('model.pkl')","9b156fab":"check_model.predict_proba(X_test).to_dataframe()","cfb49456":"As per the table Logistic Regression is the best pipeline with high mean_cv_score and validation_score, we can can get the description of the pipeline now by using <automl.describe_pipeline(5)> where \"5\" is the pipeline ID \n\n","b2265d89":"# Let's get started with EvalML","0ff3d751":"User can use AutoMLSearch() for searching the best pipeline. EvalML uses Bayesian optimization to sort the best pipeline as per the defined objective","dcb696c6":"## What is AutoML?\n\n**According to wikipedia** -\n\nAutomated machine learning (*AutoML*) is the process of automating the tasks of applying machine learning to real-world problems. AutoML covers the complete pipeline from the raw dataset to the deployable machine learning model. AutoML was proposed as an artificial intelligence-based solution to the ever-growing challenge of applying machine learning.The high degree of automation in AutoML allows non-experts to make use of machine learning models and techniques without requiring them to become experts in machine learning. Automating the process of applying machine learning end-to-end additionally offers the advantages of producing simpler solutions, faster creation of those solutions, and models that often outperform hand-designed models. AutoML has been used to compare the relative importance of each factor in a prediction model.","be47bab8":"Note: EvalML uses data tables as a standard data format but you can read the regular .csv dataset and it gets converted using Woorworks (another altryx project). \nEvalML also accepts and works well with pandas DataFrames. But using the DataTable makes it easy to control how EvalML will treat each feature, as a numeric feature, a categorical feature, a text feature or other type of feature. Woodwork\u2019s DataTable includes features like inferring when a categorical feature should be treated as a text feature.","141b9d44":"So from the above snippet we got the best pipline i.e \"*Logistic Regression Classifier w\/ Imputer + Standard Scaler*\" with Log loss of 0.094\n\nAfter the search we will rank the pipeline on the basis of scores, for this we need to use a simple code \n<automl.rankings>","32a8125a":"# Check the best pipeline required to build a model","95969832":"The objective to optimize for. Used to propose and rank pipelines, but not for optimizing each pipeline during fit-time.\n When set to 'auto', chooses:\n*     - LogLossBinary for binary classification problems,\n*     - LogLossMulticlass for multiclass classification problems, and\n*     - R^2 for regression problems.","8923d9d5":"## How to install ","5110def8":"## From here you can change the objective of the model you've built using EvalML","9b6203b1":"> **Note:** EvalML includes several optional dependencies. The xgboost and catboost packages support pipelines built around those modeling libraries. The plotly and ipywidgets packages support plotting functionality in automl searches. These dependencies are recommended, and are included with EvalML by default but are not required in order to install and use EvalML","caea4cc2":"# Evaluate the model by testing it against test data","132768dc":"# What is EvalML?\nEvalML is an open source automated machine learning library created by Altryx's Innovation team EvalML is an AutoML library that builds, optimizes, and evaluates machine learning pipelines using domain-specific objective functions.\n\nBasically EvalML provides a simple low code interface to create machine learning model and use those models to generate insights and to make accurate predictions.    \n\n## What I liked the most about EvalML\n\n- EvalML cuts downs the process of model training and tuning by hand, this includes data quality checks and cross-validation.\n\n- Data Checks and warnings: EvalML helps you in identifying the probelm in the data before using or setting it up for modelling\n\n- Pipeline building: EvalML helps you in consructing a highly optimised pipeline including a state-of-the-art data preprocessing, feature engineering, feature selection and a lot pf modelling techniques \n\n- Model Understanding: Just like Shap, Eli5, Lime and other model explanibility libraries EvalML also provides a broad level of understanding about the model you are building, for the purpose of presentation\n\n- Domain-specific: This is the missing link in most of the AutoML libraries where you can define the objective if the problem. Once you have determined the objective for your business, you can provide that to EvalML to optimize by defining a custom objective function. ","d1b96941":"We can easily check all the parameteres of any pipeline using pipeline ID","7ad05f50":"# Why EvalML is one of the best AutoML library you can get your hands on","f4f8802b":"Loading a dataset in EvalMl is just the usual process we can use any library for this, I am using pandas for this and I am using breast cancer dataset for this\nDataset Link: [Breast Cancer Dataset](https:\/\/www.kaggle.com\/uciml\/breast-cancer-wisconsin-data)","451b6f9b":"# Save the model by pickling it","ba7a62f2":"## Automated pipeline search","12e0fd31":"when you use search() function after automl.search() then the search for best pipeline is started. The need for data wrangling is eliminated in EvalML, you can directly load the data and start seaching for the best pipeline after defining feature and outcome variable, let's find the best pipeline now ","51d72be9":"## Loading a dataset","f0b4ac72":"# Evaluate the pipeline performance by using it against the holdoff data"}}