{"cell_type":{"4d004c3c":"code","79c6ddba":"code","dffa16d3":"code","3fee8092":"code","8e7bdd3e":"code","e47d8895":"code","4e2a64b4":"code","91540762":"code","35033d0e":"code","5fad58da":"code","1d2c6b93":"code","c204cdb5":"code","84f25a6a":"code","97157665":"code","f1181e04":"code","5984abb9":"code","599cad53":"code","15214467":"code","d14d626c":"code","15b56b77":"code","4038ace3":"code","21eb5035":"code","779b0d62":"code","8d87f200":"markdown","c470b4ba":"markdown","087725db":"markdown","1c6be92d":"markdown","636d6b34":"markdown","cf523a4c":"markdown","4f05d726":"markdown","4da53e51":"markdown","708afeba":"markdown","70ac8bb0":"markdown","0ab3de69":"markdown","b77b23f6":"markdown","13e9a752":"markdown"},"source":{"4d004c3c":"import numpy as np\nimport pandas as pd\nimport seaborn as sns","79c6ddba":"train = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/test.csv')\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/sample_submission.csv')\n\ny_train = train[['target_carbon_monoxide', 'target_benzene', 'target_nitrogen_oxides']]\nx_train = train.drop(['target_carbon_monoxide', 'target_benzene', 'target_nitrogen_oxides'], axis=1)\nx_test = test\nx_train.shape, x_test.shape, y_train.shape","dffa16d3":"correlation = train.corr()\ncorrelation","3fee8092":"sns.heatmap(correlation, square=True, cmap='coolwarm')","8e7bdd3e":"!pip install scikit-learn-intelex -q --progress-bar off","e47d8895":"from sklearnex import patch_sklearn\npatch_sklearn()","4e2a64b4":"x_train['date_time'] = x_train['date_time'].astype('datetime64[ns]').astype(np.int64)\/10**9\nx_test['date_time'] = x_test['date_time'].astype('datetime64[ns]').astype(np.int64)\/10**9","91540762":"x_train","35033d0e":"y_train","5fad58da":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import GridSearchCV\n\nparam_grid = {'n_estimators':[300, 400, 500, 600, 700, 800, 900, 1000, 1500],\n              'max_depth':[8, None],\n              'n_jobs':[-1],\n              'random_state':[42]}\ntarget_benzene         = y_train['target_benzene']\ntarget_carbon_monoxide = y_train['target_carbon_monoxide']\ntarget_nitrogen_oxides = y_train['target_nitrogen_oxides']\n\nrf = RandomForestRegressor()","1d2c6b93":"%%time\n\nclf_tb = GridSearchCV(rf, param_grid).fit(x_train, target_benzene)\nclf_tcm = GridSearchCV(rf, param_grid).fit(x_train, target_carbon_monoxide)\nclf_tno = GridSearchCV(rf, param_grid).fit(x_train, target_nitrogen_oxides)","c204cdb5":"print(clf_tb.best_params_, clf_tb.best_score_)\nprint(clf_tcm.best_params_, clf_tcm.best_score_)\nprint(clf_tno.best_params_, clf_tno.best_score_)","84f25a6a":"clf_tb.best_estimator_.feature_importances_","97157665":"clf_tcm.best_estimator_.feature_importances_","f1181e04":"clf_tno.best_estimator_.feature_importances_","5984abb9":"%%time\ntarget_benzene_pred = clf_tb.predict(x_test)\ntarget_carbon_monoxide_pred = clf_tcm.predict(x_test)\ntarget_nitrogen_oxides_pred = clf_tno.predict(x_test)","599cad53":"sample_submission['target_carbon_monoxide'] = target_carbon_monoxide_pred\nsample_submission['target_benzene'] = target_benzene_pred\nsample_submission['target_nitrogen_oxides'] = target_nitrogen_oxides_pred\nsample_submission.to_csv('submission_sklearnex.csv', index=False)","15214467":"from sklearnex import unpatch_sklearn\nunpatch_sklearn()","d14d626c":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import GridSearchCV\n\nparam_grid = {'n_estimators':[300, 400, 500, 600, 700, 800, 900, 1000, 1500],\n              'max_depth':[8, None],\n              'n_jobs':[-1],\n              'random_state':[42]}\ntarget_benzene         = y_train['target_benzene']\ntarget_carbon_monoxide = y_train['target_carbon_monoxide']\ntarget_nitrogen_oxides = y_train['target_nitrogen_oxides']\n\nrf = RandomForestRegressor()","15b56b77":"%%time\n\nclf_tb = GridSearchCV(rf, param_grid).fit(x_train, target_benzene)\nclf_tcm = GridSearchCV(rf, param_grid).fit(x_train, target_carbon_monoxide)\nclf_tno = GridSearchCV(rf, param_grid).fit(x_train, target_nitrogen_oxides)","4038ace3":"%%time\ntarget_benzene_pred = clf_tb.predict(x_test)\ntarget_carbon_monoxide_pred = clf_tcm.predict(x_test)\ntarget_nitrogen_oxides_pred = clf_tno.predict(x_test)","21eb5035":"print(clf_tb.best_params_, clf_tb.best_score_)\nprint(clf_tcm.best_params_, clf_tcm.best_score_)\nprint(clf_tno.best_params_, clf_tno.best_score_)","779b0d62":"sample_submission['target_carbon_monoxide'] = target_carbon_monoxide_pred\nsample_submission['target_benzene'] = target_benzene_pred\nsample_submission['target_nitrogen_oxides'] = target_nitrogen_oxides_pred\nsample_submission.to_csv('submission_orig.csv', index=False)","8d87f200":"Let's check correlation matrix of train data","c470b4ba":"## Fast Random Forest Regression with [Intel(R) Extension for Scikit-learn*](https:\/\/github.com\/intel\/scikit-learn-intelex)","087725db":"target_benzene have good correlation with sensor_2, so this should be seen in feature importance.","1c6be92d":"# Installing Intel(R) Extension for Scikit-learn\n### Use [Intel(R) Extension for Scikit-learn](https:\/\/github.com\/intel\/scikit-learn-intelex) for fast compute Scikit-learn estimators","636d6b34":"### I make sklearn RandomForest estimator **2 times** more faster, with helps [Intel(R) Extension for Scikit-learn](https:\/\/github.com\/intel\/scikit-learn-intelex), using only one function: patch_sklearn()","cf523a4c":"### Using same algorithms with original scikit-learn","4f05d726":"#### Save results","4da53e51":"Preprocessing","708afeba":"### Patch original scikit-learn without any code changes","70ac8bb0":"### Using GridSearchCV with RandomForestRegressor from Intel(R) Extension for Scikit-learn*","0ab3de69":"### Reading data","b77b23f6":"#### Train","13e9a752":"#### Prediction"}}