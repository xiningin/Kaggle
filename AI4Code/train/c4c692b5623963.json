{"cell_type":{"b8771431":"code","43f7735e":"code","4181946b":"code","0c087ebd":"code","cc83f2fc":"code","73c703dd":"code","bf855162":"code","b3beb809":"code","f17815a6":"code","0975726c":"code","95664ee2":"code","c5ae8188":"code","368fba62":"code","2d35eef2":"code","681a5902":"code","48e3c5df":"code","c3ed2f03":"code","5a8cbfaa":"code","f9149bd5":"markdown","ba3c4414":"markdown","161f0dc8":"markdown","7f4b264b":"markdown","0186c054":"markdown"},"source":{"b8771431":"import os\nimport re\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimport seaborn as sns","43f7735e":"df = pd.read_csv(\"\/kaggle\/input\/mobile-smartphone-images-dataset\/mobile_data_img.csv\")","4181946b":"df.head()","0c087ebd":"IMG_URL = \"\/kaggle\/input\/mobile-smartphone-images-dataset\/mobile_images\/\"","cc83f2fc":"# check stats of dataset\ndf.describe()","73c703dd":"# Checking the null values \ndf.isnull().sum()","bf855162":"def plot_12_random_images():\n    _, axs = plt.subplots(3, 4, figsize=(12, 12))\n    axs = axs.flatten()\n    for ax in axs:\n        idx = np.random.randint(0, len(df.index)-1)\n        img = mpimg.imread(IMG_URL+df.iloc[idx][\"Image_File\"])\n        ax.imshow(img)\n        ax.set_xlabel(f\"{df.iloc[idx]['Brand']} - {df.iloc[idx]['Model']}\")\n    plt.show()","b3beb809":"plot_12_random_images()","f17815a6":"# Most available Smartphone \/ Mobile Model\n\ntop_phon_type = df[[\"Image_File\", \"Model\"]].groupby(\"Model\").agg(['count'])['Image_File']['count'].sort_values(ascending=False)[:10]\nfig = sns.barplot( x = top_phon_type.index, y = top_phon_type.values)\nfig.set_xticklabels(labels=top_phon_type.index , rotation=45)\nfig.set_ylabel(\"Number of Smartphone \/ Mobile in the Dataset\")\nfig.set_xlabel(\"Smartphone \/ Mobile Model\")\nfig.set_title(\"Most availble Smartphone \/ Mobile Model\");","0975726c":"# Most available Smartphone \/ Mobile Brands\n\ntop_phon_type = df[[\"Image_File\", \"Brand\"]].groupby(\"Brand\").agg(['count'])['Image_File']['count'].sort_values(ascending=False)[:10]\nfig = sns.barplot( x = top_phon_type.index, y = top_phon_type.values)\nfig.set_xticklabels(labels=top_phon_type.index , rotation=45)\nfig.set_ylabel(\"Number of Smartphone \/ Mobile in the Dataset\")\nfig.set_xlabel(\"Smartphone \/ Mobile Brand\")\nfig.set_title(\"Most availble Smartphone \/ Mobile Brand\");","95664ee2":"# Disrtribution of Brands among the Dataset\ncolors = sns.color_palette('pastel')[0:5]\nplt.pie(top_phon_type, labels = top_phon_type.index, colors = colors, autopct='%.0f%%')\nplt.show()","c5ae8188":"# Disrtribution of Smartphone \/ Mobile by condition in the Dataset\nfig = sns.countplot(data= df, x=\"Condition\")\nfig.set_ylabel(\"Number of Smartphones \/ Mobiles\")\nfig.set_xlabel(\"Condition\")\nfig.set_title(\"Condition Distribution\");","368fba62":"from sklearn.model_selection import train_test_split","2d35eef2":"df.Brand.value_counts()","681a5902":"# Filter out and consider imager with only minimum pf 90 images\nf, u = pd.factorize(df.Brand)\ndf_filtered = df[np.bincount(f)[f] >= 90]","48e3c5df":"X = df_filtered.Image_File\ny = df_filtered.Brand","c3ed2f03":"# Use stratify param to ensure equal distribution of the class labels \nX_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.33, stratify=y)","5a8cbfaa":"len(X_train), len(X_test)","f9149bd5":"### Creating Train Test Split","ba3c4414":"### Load the Data","161f0dc8":"### EDA","7f4b264b":"### Data Viz","0186c054":"### Import Libraries"}}