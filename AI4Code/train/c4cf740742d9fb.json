{"cell_type":{"e0ea23e3":"code","b79e9a40":"code","c29c87d2":"code","4b0c6fe7":"code","151c146a":"code","f6e172e0":"code","8b83a250":"code","01bb2246":"code","cf163b5a":"code","3a595e8e":"code","d1c437c6":"code","5dae8147":"code","8da2d73f":"code","92857614":"code","3b7fed51":"code","a5278c9d":"code","21e933c6":"code","ac2e5c3a":"code","61567f73":"code","bffc940b":"code","d28030d8":"code","37461a65":"code","e47009c1":"code","23435151":"code","54c4e354":"code","69b4acf3":"code","9ca39510":"code","8b8d6571":"code","df0e5c08":"code","28802e31":"code","f92d70a4":"code","ab112c3e":"code","138b749a":"code","9495bbdc":"code","057bd648":"code","d1b1be7d":"code","6d41792a":"code","8b41b472":"code","a4f66be4":"code","173c372c":"code","d6495466":"code","04eae479":"code","79313086":"code","d61c1e5c":"code","dfdbcc4a":"code","39f552c3":"code","c3700da9":"code","e40140d4":"code","e7fe4252":"code","6d09eca6":"code","da526aee":"code","a463ff9c":"code","b93642d1":"code","6105c29b":"code","cd80c576":"code","a348687d":"code","6e868d7a":"code","4b1b872b":"code","712526ce":"code","166d63b5":"code","fb757c65":"code","39628d31":"code","86df22d4":"code","29185b6e":"code","f85e8eaf":"code","6b916f35":"code","4537afb7":"code","e05adedf":"code","38da7bd3":"markdown","019e7e47":"markdown","b1fe6010":"markdown","20ba57a0":"markdown","a6e9b612":"markdown","8cf6b927":"markdown","6f255192":"markdown","0c763e3e":"markdown","f3329b9a":"markdown","649fef6c":"markdown","3e78a260":"markdown","71ad3ecd":"markdown","ad674c8b":"markdown","64219ab3":"markdown","c0417fcc":"markdown","28ec6b80":"markdown","8762a84f":"markdown","46d136d2":"markdown","39de44d6":"markdown","0fa64213":"markdown","0e71d238":"markdown","1b911239":"markdown","2b559f51":"markdown","b663bc6e":"markdown","e21dcce3":"markdown","37ecd25a":"markdown","e22c1273":"markdown","46df167a":"markdown","4f9ad646":"markdown","582b4a9e":"markdown","af3de04a":"markdown","28261215":"markdown","6a111488":"markdown","00218cbe":"markdown","b7897613":"markdown","760f3b8e":"markdown","c4cfbd67":"markdown","9efcb4d2":"markdown","a45c6454":"markdown","cfbb23d7":"markdown","98a4e48b":"markdown","4767a161":"markdown","82f77c3c":"markdown","65dcc2b7":"markdown","0c0c96b4":"markdown","19d6c8b4":"markdown","d0c69d59":"markdown","3bb1ca02":"markdown","089794d0":"markdown","68ed6c98":"markdown"},"source":{"e0ea23e3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b79e9a40":"# numpy and pandas for data manipulation\nimport numpy as np\nimport pandas as pd \n\n# sklearn preprocessing for dealing with categorical variables\nfrom sklearn.preprocessing import LabelEncoder\n\n# File system manangement\nimport os\n\n# Suppress warnings \nimport warnings\nwarnings.filterwarnings('ignore')\n\n# matplotlib and seaborn for plotting\nimport matplotlib.pyplot as plt\nimport seaborn as sns","c29c87d2":"# List files available\nprint(os.listdir(\"..\/input\/\"))","4b0c6fe7":"# Training data\napp_train = pd.read_csv('..\/input\/home-credit-default-risk\/application_train.csv')\nprint('Training data shape: ', app_train.shape)\napp_train.head()","151c146a":"# Testing data features\napp_test = pd.read_csv('..\/input\/home-credit-default-risk\/application_test.csv')\nprint('Testing data shape: ', app_test.shape)\napp_test.head()","f6e172e0":"app_train['TARGET'].value_counts()","8b83a250":"app_train['TARGET'].astype(int).plot.hist();","01bb2246":"def missing_values_table(df):\n    # \uc804\uccb4 \uacb0\uce21\uce58 \uac1c\uc218 \ud655\uc778\n    mis_val=df.isnull().sum()\n    \n    # \uacb0\uce21\uce58 \ube44\uc911 \ud655\uc778\n    mis_val_percent=100*df.isnull().sum()\/len(df)\n    \n    # \uacb0\uce21\uce58 \uac1c\uc218 , \uacb0\uce21\uce58 \ube44\uc911 \ud14c\uc774\ube14 \ub9cc\ub4e4\uae30\n    mis_val_table=pd.concat([mis_val, mis_val_percent],axis=1)\n    \n    # \uceec\ub7fc \uc774\ub984\ubc14\uafb8\uae30\n    mis_val_table_ren_columns=mis_val_table.rename(columns={0:'Missing Values',1:'% of Total Values'})\n\n    # \uacb0\uce21\uce58 0\uc778 \uceec\ub7fc\uc740 \uc81c\uc678\ud558\uace0 \uc815\ub82c\n    mis_val_table_ren_columns=mis_val_table_ren_columns[mis_val_table_ren_columns.iloc[:,1]!=0].sort_values('% of Total Values',ascending=False).round(1)\n\n    # \uc694\uc57d \uacb0\uacfc print\n    print(\"app_train\uc758 \uc804\uccb4 \uceec\ub7fc \uac1c\uc218\ub294 \"+str(df.shape[1])+\"\uac1c \uc774\ub2e4.\\n\"\n         \"\uadf8 \uc911\uc5d0\uc11c \uacb0\uce21\uce58\uac00 \uc788\ub294 \uceec\ub7fc \uac1c\uc218\ub294 \"+str(mis_val_table_ren_columns.shape[0])+'\uac1c \uc774\ub2e4.')\n    \n    return mis_val_table_ren_columns","cf163b5a":"missing_values=missing_values_table(app_train)\nmissing_values.head(20)","3a595e8e":"app_train.dtypes.value_counts()","d1c437c6":"# \ubc94\uc8fc\ud615 \ubcc0\uc218\uc5d0\uc11c \uc720\ub2c8\ud06c\ud55c \uac12\uc758 \uac1c\uc218\ub97c \uc0b4\ud3b4\ubcf4\uc790\n# app_train.select_dtypes('object').apply(pd.Series.nunique)\napp_train.select_dtypes('object').nunique()   # apply\ud568\uc218 \uc5c6\uc774 \uac00\ub2a5","5dae8147":"le=LabelEncoder()\nle_count=0\n\n# \uceec\ub7fc\ubcc4\ub85c iterate \ub3cc\uae30\nfor col in app_train:\n    if app_train[col].dtype=='object':\n        # \ub370\uc774\ud130\ud0c0\uc785\uc774 object\uc774\uace0 \uac12\uc758 \uc885\ub958\uac00 \ub450\uac1c \uc774\ud558\uc77c\uacbd\uc6b0,\n        if len(list(app_train[col].unique())) <=2:\n            \n            # train\uacfc test\uc5d0 \ub3d9\uc77c\ud558\uac8c \ub77c\ubca8\uc778\ucf54\ub529\uc744 \ud558\uae30\uc704\ud574 train\uae30\uc900\uc73c\ub85c fit\ud55c\uac12\uc744 train,test\uc5d0 \ub3d9\uc77c\ud558\uac8c transform\ud574\uc90c\n            le.fit(app_train[col])\n            \n            # train-set, test-set \ub458\ub2e4 Transform\n            app_train[col]=le.transform(app_train[col])\n            app_test[col]=le.transform(app_test[col])\n            \n            # \ub77c\ubca8\uc778\ucf54\ub529\uc744 \ud55c \uceec\ub7fc\uc774 \uba87\uac1c\uc778\uc9c0 \uce74\uc6b4\ud2b8\n            le_count+=1\nprint('%d columns were label encoded.' % le_count)","8da2d73f":"# \uc704\uc5d0\uc11c Label-encoding\uc801\uc6a9 \uc548\ud55c \ub098\uba38\uc9c0 \ubc94\uc8fc\ud615 \ubcc0\uc218\uc5d0 One-hot encoding \uc801\uc6a9\napp_train=pd.get_dummies(app_train)\napp_test=pd.get_dummies(app_test)\n\nprint('Training Features shape: ', app_train.shape)\nprint('Testing Features shape: ', app_test.shape)","92857614":"# \uc608\uc2dc\ndf1 = pd.DataFrame([[1,2,3,4], [6,7,8,9]], columns=['D', 'B', 'E', 'A'], index=[1,2])\ndf2 = pd.DataFrame([[10,20,30,40], [60,70,80,90], [600,700,800,900]], columns=['A', 'B', 'C', 'D'], index=[2,3,4])","3b7fed51":"df1","a5278c9d":"df2","21e933c6":"# \ub450 \ub370\uc774\ud130\ud504\ub808\uc784\uc5d0 \ub458\ub2e4 \ud3ec\ud568\ub418\uc5b4\uc788\ub294 D,B,A \uceec\ub7fc\ub9cc \ub0a8\uae40\na1, a2 = df1.align(df2, join='inner', axis=1)\nprint(a1)\nprint(a2)","ac2e5c3a":"# TARGET\ubcc0\uc218\ub294 train\ub370\uc774\ud130\uc5d0\ub9cc \uc788\uc9c0\ub9cc \ud544\uc694\ud55c \ubcc0\uc218\uc774\uae30\ub54c\ubb38\uc5d0 \ub530\ub85c \ube7c\ub450\uace0\ub098\uc11c \ub2e4\uc2dc\ucd94\uac00\ud560\uac83\ntrain_labels=app_train['TARGET']\n\n\"\"\"\n\ub450 \ub370\uc774\ud130\ud504\ub808\uc784\uc5d0 \ubaa8\ub450 \uc788\ub294 \uceec\ub7fc\ub4e4\ub9cc \uc720\uc9c0\ud558\uba74\uc11c train-set\uacfc test-set\uc744 align\ud55c\ub2e4.\n\uc989, train \ub370\uc774\ud130\uc640 test \ub370\uc774\ud130\uc5d0 \ub458\ub2e4 \uc788\ub294 \uceec\ub7fc\ub4e4\uc758 \uac12\ub9cc \uac00\uc838\uc624\ub824\ub294\uac83\n\"\"\"\n\napp_train, app_test=app_train.align(app_test,join='inner',axis=1)\n\n# TARGET\ubcc0\uc218 \ub2e4\uc2dc \ucd94\uac00\napp_train['TARGET']=train_labels\n\nprint('Training Features shape: ', app_train.shape)\nprint('Testing Features shape: ', app_test.shape)","61567f73":"# DAYS_BIRTH \uceec\ub7fc\uc5d0\uc11c\ub294 \uc774\uc0c1\uce58 \uc5c6\uc5b4\ubcf4\uc784\n(app_train['DAYS_BIRTH'] \/ -365).describe()","bffc940b":"# DAYS_EMPLOYED\ub294 \uc774\uc0c1\uce58..\napp_train['DAYS_EMPLOYED'].describe()","d28030d8":"app_train['DAYS_EMPLOYED'].plot.hist(title='Days Employment Histogram')\nplt.xlabel('Days Employment');","37461a65":"# \uc774\uc0c1\uce58\nanom=app_train[app_train['DAYS_EMPLOYED']==365243]\n# \uc774\uc0c1\uce58 \uc678\nnon_anom=app_train[app_train['DAYS_EMPLOYED']!=365243]\n\nprint('The non-anomalies default on %0.2f%% of loans' %(100*non_anom['TARGET'].mean()))\nprint('The anomalies default on %0.2f%% of loans' % (100 * anom['TARGET'].mean()))\nprint('There are %d anomalous days of employment' % len(anom))","e47009c1":"# Create an anomalous flag column\n## \uc774\uc0c1\uce58(365243)\uc778 \uac12\uc5d0 \ub300\ud574\uc11c True , False\ub85c \uad6c\ubd84\napp_train['DAYS_EMPLOYED_ANOM'] = app_train[\"DAYS_EMPLOYED\"] == 365243\n\n# \uc774\uc0c1\uce58\ub97c nan\uac12\uc73c\ub85c \ub300\uce58\napp_train['DAYS_EMPLOYED'].replace({365243:np.nan},inplace=True)\n\napp_train['DAYS_EMPLOYED'].plot.hist(title='Days Employment Histogram');\nplt.xlabel('Days Employment');","23435151":"# test \ub370\uc774\ud130\uc5d0\ub3c4 train \ub370\uc774\ud130\uc640 \ub3d9\uc77c\ud558\uac8c \uc791\uc5c5\napp_test['DAYS_EMPLOYED_ANOM']=app_test['DAYS_EMPLOYED']==365243\napp_test['DAYS_EMPLOYED'].replace({365243:np.nan}, inplace=True)\n\n# True, False\ub85c \ub418\uc5b4\uc788\ub294 \ub370\uc774\ud130 sum\ud558\uba74 True\uc778\uac83 \uac1c\uc218 \uce74\uc6b4\ud305\ub428.\nprint('There are %d anomalies in the test data out of %d entries'%(app_test['DAYS_EMPLOYED_ANOM'].sum(), len(app_test)))","54c4e354":"# TARGET \ubcc0\uc218\uc640\uc758 \uc0c1\uad00\uad00\uacc4\ncorrelations=app_train.corr()['TARGET'].sort_values()\n\nprint('Most Positive Correlations:\\n', correlations.tail(15))\nprint('\\nMost Negative Correlations:\\n', correlations.head(15))","69b4acf3":"# DAYS_BIRTH\uc758 \uc808\ub300\uac12\uacfc TARGET\ubcc0\uc218\uc640\uc758 \uc0c1\uad00\uacc4\uc218\napp_train['DAYS_BIRTH']=abs(app_train['DAYS_BIRTH'])\napp_train['DAYS_BIRTH'].corr(app_train['TARGET'])","9ca39510":"plt.style.use('fivethirtyeight')\n\n# \uace0\uac1d \ub098\uc774\uc5d0 \ub300\ud55c \ud788\uc2a4\ud1a0\uadf8\ub7a8 \ubd84\ud3ec \ud655\uc778\nplt.hist(app_train['DAYS_BIRTH']\/365, edgecolor='k',bins=25)\nplt.title('Age of Client');\nplt.xlabel('Age (years)');\nplt.ylabel('Count');","8b8d6571":"plt.figure(figsize=(10,8))\n\n# \uc81c\ub54c \ub300\ucd9c\uc744 \uc0c1\ud658\ud558\ub294 \uace0\uac1d\uc758 \ub098\uc774 plot (TARGET=0)\nsns.kdeplot(app_train.loc[app_train['TARGET']==0,'DAYS_BIRTH']\/365,label='target==0')\n\n# \uc81c\ub54c \ub300\ucd9c\uc744 \uc0c1\ud658\ud558\uc9c0\ubabb\ud558\ub294 \uace0\uac1d\uc758 \ub098\uc774 plot (TARGET=1)\nsns.kdeplot(app_train.loc[app_train['TARGET']==1,'DAYS_BIRTH']\/365,label='target==1')\n\nplt.xlabel('Age(years)');\nplt.ylabel('Density');\nplt.title('Distribution of Ages');","df0e5c08":"# \ucd5c\uc18c 20 \ucd5c\ub300 70\uc73c\ub85c\ud574\uc11c \ucd1d 10\uac1c\ub85c \uadf8\ub8f9\ud551\n## \uacb0\uacfc\ub294 20\uc774\uc0c1 25\ubbf8\ub9cc, 25\uc774\uc0c1 30\ubbf8\ub9cc,,,, \uc73c\ub85c \uadf8\ub8f9\ud551\ub428. \ub2e8 (,)\ub294 \ud3ec\ud568 [,]\ub294 \ubbf8\ud3ec\ud568\uc744 \uc758\ubbf8\nnp.linspace(20,70,num=11)","28802e31":"\"\"\"\ncut() \ud568\uc218\ub97c \uc0ac\uc6a9\ud574\uc11c 5\uc0b4 \uac04\uaca9\uc73c\ub85c \ub098\uc774\ub300 \uadf8\ub8f9\uc744 \ub098\ub220\ubcf4\uc790. \n\uadf8\ub2e4\uc74c, \uac01 \ub098\uc774\ub300 \ubcc4\ub85c \ub300\ucd9c\uc0c1\ud658\uc744 \ubabb\ud558\ub294 \ube44\uc728\uc744 \uccb4\ud06c\n\"\"\"\n\nage_data=app_train[['TARGET','DAYS_BIRTH']]\nage_data['YEARS_BIRTH']=age_data['DAYS_BIRTH']\/365\n\n# Bin the age data\nage_data['YEARS_BINNED']=pd.cut(age_data['YEARS_BIRTH'],bins=np.linspace(20,70,num=11))\nage_data.head(10)","f92d70a4":"# Group by the bin and calculate averages\nage_groups  = age_data.groupby('YEARS_BINNED').mean()\nage_groups","ab112c3e":"plt.figure(figsize=(8,8))\n\n# Graph the age bins and the average of the target as a bar plot\nplt.bar(age_groups.index.astype(str), 100*age_groups['TARGET'])\n\n# Plot labeling\nplt.xticks(rotation=75);\nplt.xlabel('Age Group (years)');\nplt.ylabel('Failur to Reapy(%)')\nplt.title('Failure to Repay by Age Group');","138b749a":"ext_data=app_train[['TARGET','EXT_SOURCE_1','EXT_SOURCE_2','EXT_SOURCE_3','DAYS_BIRTH']]\next_data_corrs=ext_data.corr()\next_data_corrs","9495bbdc":"plt.figure(figsize=(8,6))\n\nsns.heatmap(ext_data_corrs, cmap=plt.cm.RdYlBu_r, vmin=-0.25, annot=True, vmax=0.6)\nplt.title('Correlation Heatmap');","057bd648":"plt.figure(figsize=(10,12))\nplt.subplot(3,1,1);\nsns.kdeplot(app_train.loc[app_train['TARGET']==0, 'EXT_SOURCE_1'],label='target==0')\nsns.kdeplot(app_train.loc[app_train['TARGET']==1, 'EXT_SOURCE_1'],label='target==1');","d1b1be7d":"plt.figure(figsize=(10,12))\n\n# iterate through the sources\nfor i, source in enumerate(['EXT_SOURCE_1','EXT_SOURCE_2','EXT_SOURCE_3']):\n    plt.subplot(3,1,i+1)\n    \n    sns.kdeplot(app_train.loc[app_train['TARGET']==0,source],label='target==0')\n    sns.kdeplot(app_train.loc[app_train['TARGET']==1,source],label='target==1')\n    \n    plt.title('Distribution of %s by Target Value' % source)\n    plt.xlabel('%s' %source);\n    plt.ylabel('Density');\nplt.tight_layout(h_pad=2.5)","6d41792a":"# Copy the data for plotting\nplot_data=ext_data.drop(columns=['DAYS_BIRTH']).copy()\n\n# \uace0\uac1d \ub098\uc774 \uceec\ub7fc \ucd94\uac00\nplot_data['YEARS_BIRTH']=age_data['YEARS_BIRTH']\n\n# \uacb0\uce21\uce58 drop\nplot_data=plot_data.dropna().loc[:100000,:]\n\n# \ub450 \uceec\ub7fc \uac04\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uacc4\uc0b0\ud558\ub294 \ud568\uc218 \uc791\uc131\ndef corr_func(x,y,**kwargs):\n    r=np.corrcoef(x,y)[0][1]\n    ax=plt.gca()\n    ax.annotate(\"r={:.2f}\".format(r),\n               xy=(.2, .8),\n               xycoords=ax.transAxes,\n               size=20)\n\n# Create the pairgrid object\n## vars = \ubcc0\uc218\uba85 \ub9ac\uc2a4\ud2b8\ngrid=sns.PairGrid(data=plot_data, size=3, diag_sharey=False, hue='TARGET',\n                 vars=plot_data.columns.drop(['TARGET']).tolist())\n\n# \uc0bc\uac01\ud615 \uc704\ucabd \uc601\uc5ed\uc740 \uc0b0\uc810\ub3c4\ngrid.map_upper(plt.scatter,alpha=0.2)\n\n# \ub300\uac01\uc120\uc740 \ud788\uc2a4\ud1a0\uadf8\ub7a8\ngrid.map_diag(sns.kdeplot)\n\n# \uc0bc\uac01\ud615 \ud558\ub2e8\uc740 density plot\ngrid.map_lower(sns.kdeplot, cmap=plt.cm.OrRd_r);\n\nplt.suptitle('Ext Source and Age Features Pairs Plot',size=32, y=1.05);","8b41b472":"'''\n\uc6b0\uc120 \ub2e4\ud56d\uc2dd \uc801\uc6a9\ud560 \ubcc0\uc218\ub4e4\uc758 null\uac12\uc744 imputer\ub85c \ucc44\uc6cc\uc900\ub2e4.\n'''\n# Make a new dataframe for polynomial features\npoly_features = app_train[['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3', 'DAYS_BIRTH', 'TARGET']]\npoly_features_test = app_test[['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3', 'DAYS_BIRTH']]\n\n# \uacb0\uce21\uce58 \ucc98\ub9ac\ub97c \uc704\ud574 imputer \ud638\ucd9c\nfrom sklearn.impute import SimpleImputer\nimputer = SimpleImputer(strategy='median')\n\n# target\uac12 \ub530\ub85c \uc800\uc7a5\npoly_target=poly_features['TARGET']\n# target\uac12 \uc81c\uc678\ud55c \ub098\uba38\uc9c0 \ubcc0\uc218 \uc800\uc7a5 \npoly_features=poly_features.drop(columns=['TARGET'])\n\n# \uacb0\uce21\uce58 impute\ub85c \uba54\uafb8\uae30 (train \ub370\uc774\ud130 \uae30\uc900\uc73c\ub85c fit\ud558\uace0, train\uacfc test\uc5d0 \ub458\ub2e4 transform \uc801\uc6a9)\n'''\ntrain set \uae30\uc900\uc758 \ud3c9\uade0, \uc911\uac04\uac12 \ub610\ub294 \ucd5c\ube48\uac12\uc73c\ub85c \uc0c8\ub85c\uc6b4 \ub370\uc774\ud130\uc758 null\uac12\uc744 \ucc44\uc6b0\ub294\uac83\n'''\npoly_features=imputer.fit_transform(poly_features)\npoly_features_test=imputer.transform(poly_features_test)\n","a4f66be4":"# imputer \uc801\uc6a9 \ud6c4\npoly_features","173c372c":"poly_features_test","d6495466":"from sklearn.preprocessing import PolynomialFeatures\n\n# Create the polynomial object with specified degree\npoly_transformer=PolynomialFeatures(degree=3)","04eae479":"# Train the polynomial features (train\ub370\uc774\ud130 \uae30\uc900\uc73c\ub85c fit)\npoly_transformer.fit(poly_features)\n\n# Transform the features\npoly_features=poly_transformer.transform(poly_features)\npoly_features_test=poly_transformer.transform(poly_features_test)\nprint('Polynomial Features shape: ', poly_features.shape)","79313086":"poly_transformer.get_feature_names(input_features=['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3', 'DAYS_BIRTH'])[:15]","d61c1e5c":"# Create a dataframe of the features \npoly_features = pd.DataFrame(poly_features, \n                             columns = poly_transformer.get_feature_names(['EXT_SOURCE_1', 'EXT_SOURCE_2', \n                                                                           'EXT_SOURCE_3', 'DAYS_BIRTH']))\n# drop\ud588\ub358 TARGET\ubcc0\uc218 \ub2e4\uc2dc \ucd94\uac00\npoly_features['TARGET']=poly_target\n\n# TARGET\ubcc0\uc218\uc640\uc758 \uc0c1\uad00\uad00\uacc4 \ud655\uc778\npoly_corrs=poly_features.corr()['TARGET'].sort_values()\n\n# Display most negative and most positive\nprint(poly_corrs.head(10))\nprint(poly_corrs.tail(5))","dfdbcc4a":"# Put test features into dataframe\npoly_features_test = pd.DataFrame(poly_features_test, \n                                  columns = poly_transformer.get_feature_names(['EXT_SOURCE_1', 'EXT_SOURCE_2', \n                                                                                'EXT_SOURCE_3', 'DAYS_BIRTH']))\n\n# \uc6d0\ubcf8 train \ub370\uc774\ud130\uc5d0 \uc0c8\ub85c \ub9cc\ub4e0 \ub2e4\ud56d\ubcc0\uc218\ub97c merge\ud574\uc11c \uc0c8\ub85c\uc6b4 \ub370\uc774\ud130\uc14b \ub9cc\ub4e4\uae30\npoly_features['SK_ID_CURR'] = app_train['SK_ID_CURR']\napp_train_poly = app_train.merge(poly_features, on = 'SK_ID_CURR', how = 'left')\n\n# \uc6d0\ubcf8 test \ub370\uc774\ud130\uc5d0 \uc0c8\ub85c \ub9cc\ub4e0 \ub2e4\ud56d\ubcc0\uc218\ub97c merge\ud574\uc11c \uc0c8\ub85c\uc6b4 \ub370\uc774\ud130\uc14b \ub9cc\ub4e4\uae30\npoly_features_test['SK_ID_CURR'] = app_test['SK_ID_CURR']\napp_test_poly = app_test.merge(poly_features_test, on = 'SK_ID_CURR', how = 'left')\n\n# Align the dataframes => train\ub370\uc774\ud130\uc14b \uae30\uc900\uc73c\ub85c align \napp_train_poly, app_test_poly = app_train_poly.align(app_test_poly, join = 'inner', axis = 1)\n\n# Print out the new shapes\nprint('Training data with polynomial features shape: ', app_train_poly.shape)\nprint('Testing data with polynomial features shape:  ', app_test_poly.shape)","39f552c3":"app_train_domain=app_train.copy()\napp_test_domain=app_test.copy()\n\n# train\ub370\uc774\ud130\uc5d0 \uc0c8\ub85c\uc6b4 \ubcc0\uc218 \ucd94\uac00\napp_train_domain['CREDIT_INCOME_PERCENT'] = app_train_domain['AMT_CREDIT'] \/ app_train_domain['AMT_INCOME_TOTAL']\napp_train_domain['ANNUITY_INCOME_PERCENT'] = app_train_domain['AMT_ANNUITY'] \/ app_train_domain['AMT_INCOME_TOTAL']\napp_train_domain['CREDIT_TERM'] = app_train_domain['AMT_ANNUITY'] \/ app_train_domain['AMT_CREDIT']\napp_train_domain['DAYS_EMPLOYED_PERCENT'] = app_train_domain['DAYS_EMPLOYED'] \/ app_train_domain['DAYS_BIRTH']","c3700da9":"# test\ub370\uc774\ud130\uc5d0 \uc0c8\ub85c\uc6b4 \ubcc0\uc218 \ucd94\uac00\napp_test_domain['CREDIT_INCOME_PERCENT'] = app_test_domain['AMT_CREDIT'] \/ app_test_domain['AMT_INCOME_TOTAL']\napp_test_domain['ANNUITY_INCOME_PERCENT'] = app_test_domain['AMT_ANNUITY'] \/ app_test_domain['AMT_INCOME_TOTAL']\napp_test_domain['CREDIT_TERM'] = app_test_domain['AMT_ANNUITY'] \/ app_test_domain['AMT_CREDIT']\napp_test_domain['DAYS_EMPLOYED_PERCENT'] = app_test_domain['DAYS_EMPLOYED'] \/ app_test_domain['DAYS_BIRTH']","e40140d4":"plt.figure(figsize=(12,20))\nfor i, feature in enumerate(['CREDIT_INCOME_PERCENT','ANNUITY_INCOME_PERCENT','CREDIT_TERM','DAYS_EMPLOYED_PERCENT']):\n    plt.subplot(4,1,i+1)\n    sns.kdeplot(app_train_domain.loc[app_train_domain['TARGET']==0,feature],label='target==0')\n    sns.kdeplot(app_train_domain.loc[app_train_domain['TARGET']==1,feature],label='target==1')\n    \n    plt.title('Distribution of %s by Target Value' % feature)\n    plt.xlabel('%s' % feature);\n    plt.ylabel('Density');\n    \nplt.tight_layout(h_pad=2.5)","e7fe4252":"from sklearn.preprocessing import MinMaxScaler\nfrom sklearn.impute import SimpleImputer\n\n# training \ub370\uc774\ud130\uc5d0\uc11c TARGET \ubcc0\uc218 drop -> TARGET\ubcc0\uc218\ub294 \uacb0\uce21\uce58\ucc98\ub9ac \ubc0f Scaling\ub300\uc0c1\uc544\ub2c8\uae30\ub54c\ubb38\uc5d0\nif 'TARGET' in app_train:\n    train=app_train.drop(columns=['TARGET'])\nelse:\n    train=app_train.copy()\n\n# \ubcc0\uc218\uc774\ub984\nfeatures=list(train.columns)\n\n# testing \ub370\uc774\ud130 \ubcf5\uc0ac\ntest=app_test.copy()\n\n# \uacb0\uce21\uce58\ub97c median\uac12\uc73c\ub85c \ucc98\ub9ac\nimputer = SimpleImputer(strategy='median')\n\n'''\n\uac01 Feature\uc758 \uac12\uc744 \uc77c\uc815\ud55c \ubc94\uc704 \ub610\ub294 \uaddc\uce59\uc5d0 \ub530\ub974\uac8c \ud558\uae30 \uc704\ud574\uc11c \uc2a4\ucf00\uc77c\ub9c1\uc744 \uc0ac\uc6a9\n'''\n# \uac01\uac01\uc758 \ubcc0\uc218\ub97c 0~1 \uc0ac\uc774\uc758 \uac12\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc8fc\ub294 MinMaxScaler \uc0ac\uc6a9\n## MinMaxScaler \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9cc\ub4e4\uc5b4\uc900\ub2e4\nscaler=MinMaxScaler(feature_range=(0,1))\n\n# training \ub370\uc774\ud130\uc5d0 fit\nimputer.fit(train)\n\n# training\ub370\uc774\ud130\uc640 testing\ub370\uc774\ud130\uc5d0 \ub458\ub2e4 transform\n## imputer \ucc98\ub9ac \ud558\uace0\ub098\uba74 DataFrame\uc5d0\uc11c array\ud615\ud0dc\ub85c \ubc14\ub01c\ntrain=imputer.transform(train)\ntest=imputer.transform(test)\n\n# Scaling\nscaler.fit(train)\ntrain=scaler.transform(train)\ntest=scaler.transform(test)\n\nprint('Training data shape: ', train.shape)\nprint('Testing data shape: ', test.shape)","6d09eca6":"from sklearn.linear_model import LogisticRegression\n\n# Make the model with the specified regularization parameter\nlog_reg=LogisticRegression(C=0.0001)\n\n# Train on the training data\nlog_reg.fit(train,train_labels)","da526aee":"# \ub450\uac1c\uc758 \uceec\ub7fc\uc774 \ub098\uc624\ub294 \uac83\uc744 \ud655\uc778\nlog_reg.predict_proba(test)","a463ff9c":"# Make predictions\n# \ub450\ubc88\uc9f8 \uceec\ub7fc \uc120\ud0dd\nlog_reg_pred=log_reg.predict_proba(test)[:,1]","b93642d1":"# submission\ud30c\uc77c\uc758 \ud615\uc2dd\uacfc \ub3d9\uc77c\ud558\uac8c SK_ID_CURR \uc640 TARGET\uc774 \ub4e4\uc5b4\uac00\uac8c \ub9cc\ub4e4\uc5b4\uc900\ub2e4\nsubmit=app_test[['SK_ID_CURR']]\nsubmit['TARGET']=log_reg_pred\n\nsubmit.head()","6105c29b":"# submission \ub370\uc774\ud130\ub97c csv file\ub85c \uc800\uc7a5\nsubmit.to_csv('log_reg_baseline.csv',index=False)","cd80c576":"from sklearn.ensemble import RandomForestClassifier\n\nrandom_forest=RandomForestClassifier(n_estimators=100, random_state=50, verbose=1, n_jobs=-1)\n","a348687d":"# training data\uc5d0 \ud6c8\ub828\nrandom_forest.fit(train, train_labels)\n\n# feature importances \ucd94\ucd9c\nfeature_importance_values=random_forest.feature_importances_\nfeature_importances=pd.DataFrame({'feature':features, 'importance':feature_importance_values})\n\n# test \ub370\uc774\ud130\uc5d0 \ub300\ud574 \uc608\uce21\npredictions=random_forest.predict_proba(test)[:,1]","6e868d7a":"# \uc81c\ucd9c\uc6a9 dataframe\ub9cc\ub4e4\uae30\nsubmit=app_test[['SK_ID_CURR']]\nsubmit['TARGET']=predictions\n\n# csv \ud30c\uc77c \uc800\uc7a5\nsubmit.to_csv('random_forest_baseline.csv',index=False)","4b1b872b":"poly_features_names = list(app_train_poly.columns)\n\n# Impute the polynomial features\nimputer = SimpleImputer(strategy = 'median')\n\n# poly_features\ub294 \ub2e4\ud56d\ubcc0\uc218\ub9cc \uc788\ub294 \ub370\uc774\ud130\n# app_train_poly\ub294 \uae30\uc874 train \ub370\uc774\ud130\uc5d0 \ub2e4\ud56d\ubcc0\uc218 \ucd94\uac00\ud55c \ub370\uc774\ud130\npoly_features = imputer.fit_transform(app_train_poly)\npoly_features_test = imputer.transform(app_test_poly)\n\n# Scale the polynomial features\nscaler = MinMaxScaler(feature_range = (0, 1))\n\npoly_features = scaler.fit_transform(poly_features)\npoly_features_test = scaler.transform(poly_features_test)\n\nrandom_forest_poly = RandomForestClassifier(n_estimators = 100, random_state = 50, verbose = 1, n_jobs = -1)","712526ce":"# training data\uc5d0 \ud6c8\ub828\uc2dc\ud0a4\uae30\nrandom_forest_poly.fit(poly_features, train_labels)\n\n# test\ub370\uc774\ud130\ub85c \uc608\uce21\npredictions = random_forest_poly.predict_proba(poly_features_test)[:, 1]","166d63b5":"submit=app_test[['SK_ID_CURR']]\nsubmit['TARGET']=predictions\n\nsubmit.to_csv('random_forest_baseline_engineered.csv',index=False)","fb757c65":"app_train_domain.head()","39628d31":"# TARGET\ubcc0\uc218\uc81c\uac70\napp_train_domain=app_train_domain.drop(columns='TARGET')\n# \ub3c4\uba54\uc778\uae30\ubc18\uc73c\ub85c \ub9cc\ub4e0 \ub370\uc774\ud130\uc758 \ubcc0\uc218\uba85 \ucd94\ucd9c\ndomain_features_names=list(app_train_domain.columns)\n\n# \uacb0\uce21\uce58 \ucc98\ub9ac\nimputer=SimpleImputer(strategy='median')\n# imputer\ucc98\ub9ac \ud574\uc8fc\uace0\ub098\uba74 DataFrame \ud615\ud0dc\uc5d0\uc11c array\ud615\ud0dc\ub85c \ubc14\ub01c\ndomain_features=imputer.fit_transform(app_train_domain)\ndomain_features_test=imputer.transform(app_test_domain)\n\n# \ub79c\ub364\ud3ec\ub808\uc2a4\ud2b8 \ubaa8\ub378 \ub9cc\ub4e4\uae30\nrandom_forest_domain=RandomForestClassifier(n_estimators=100, random_state=50, verbose=1, n_jobs=-1)\n\n# \ud6c8\ub828\uc2dc\ud0a4\uae30\nrandom_forest_domain.fit(domain_features,train_labels)\n\n# \ubcc0\uc218 \uc911\uc694\ub3c4 \ucd94\ucd9c\nfeature_importance_values_domain=random_forest_domain.feature_importances_\nfeature_importances_domain=pd.DataFrame({'feature':domain_features_names,\n                                        'importance':feature_importance_values_domain})\n\n# test\ub370\uc774\ud130 \ub123\uc5b4\uc11c \uc608\uce21\ud558\uba74 TARGET=0\uc77c \ud655\ub960\uc744 \uc608\uce21\ud55c \uceec\ub7fc \ud55c\uac1c\uc640 TARGET=1\uc77c \ud655\ub960\uc744 \uc608\uce21\ud55c \uceec\ub7fc \ud55c\uac1c\uac00 \uc788\ub294\ub370\n## \uc5ec\uae30\uc11c \uc6b0\ub9ac\uac00 \uc6d0\ud558\ub294\uac83\uc740 TARGET=1\uc77c\ub54c\uc758 \ud655\ub960\uc774\ubbc0\ub85c \ub450\ubc88\uc9f8 \uceec\ub7fc \uc120\ud0dd\ud574\uc11c \uc800\uc7a5\npredictions=random_forest_domain.predict_proba(domain_features_test)[:,1]","86df22d4":"submit=app_test[['SK_ID_CURR']]\nsubmit['TARGET']=predictions\n\nsubmit.to_csv('random_forest_baseline_domain.csv',index=False)","29185b6e":"def plot_feature_importances(df):\n    # \uc911\uc694\ub3c4 \ub192\uc740 \uc21c\uc73c\ub85c \ub098\uc5f4\n    df=df.sort_values('importance',ascending=False).reset_index()\n    \n    # \uc911\uc694\ub3c4 \uc804\uccb4\ud569 \ub300\ube44 \ud574\ub2f9 \ubcc0\uc218\uc758 \uc911\uc694\ub3c4 \ube44\uc911\ubcc0\uc218 \ucd94\uac00\n    df['importance_normalized']=df['importance']\/df['importance'].sum()\n    \n    # \uc2dc\uac01\ud654\n    plt.figure(figsize=(10,6))\n    ax=plt.subplot()\n    \n    ax.barh(list(reversed(list(df.index[:15]))), df['importance_normalized'].head(15), align='center',edgecolor='k')\n    \n    # Set the yticks and labels\n    ax.set_yticks(list(reversed(list(df.index[:15]))))\n    ax.set_yticklabels(df['feature'].head(15))\n    \n    # Plot labeling\n    plt.xlabel('Normalized Importance'); plt.title('Feature Importances')\n    plt.show()\n    \n    return df","f85e8eaf":"feature_importances","6b916f35":"# feature engineering\uc548\ud55c \uae30\ubcf8 \ubcc0\uc218\ub4e4\ub85c \ubcc0\uc218 \uc911\uc694\ub3c4 \ucd94\ucd9c\nfeature_importances_sorted=plot_feature_importances(feature_importances)","4537afb7":"feature_importances","e05adedf":"# domain\uae30\ubc18\uc73c\ub85c \ub9cc\ub4e0 \ubcc0\uc218 \ub300\uc0c1\uc73c\ub85c \ubcc0\uc218 \uc911\uc694\ub3c4 \ub3c4\ucd9c\nfeature_importances_domain_sorted=plot_feature_importances(feature_importances_domain)","38da7bd3":"### 6-3) Effect of Age on Repayment","019e7e47":"## 1) Target \uceec\ub7fc\uc758 \ubd84\ud3ec\ub97c \uc0b4\ud3b4\ubcf4\uc790\nTarget\uc740 \uc6b0\ub9ac\uac00 \uc608\uce21\ud574\uc57c\ud558\ub294 \uac12\uc774\ub2e4. 0\uc774\uba74 \uc81c\ub54c \ub300\ucd9c\uae08 \uc0c1\ud658 \uac00\ub2a5\ud55c\uac83, 1\uc774\uba74 \uc0c1\ud669\uc774 \uc5b4\ub824\uc6b4\uac83\uc744 \uc758\ubbf8\ud55c\ub2e4. ","b1fe6010":"\uc774\uc0c1\uce58\uc778\uac83 \uac19\uc740 \uace0\uac1d\ub4e4\uc740 \ub530\ub85c \ube7c\uc11c \uadf8\ub4e4\uc758 \ub300\ucd9c\uc0c1\ud658 \ube44\uc728\uc774 \uadf8\uc678\uc758 \uace0\uac1d\ub4e4\uc5d0\ube44\ud574 \ub192\uac70\ub098 \ub0ae\uc740 \uacbd\ud5a5\uc774 \uc788\ub294\uc9c0 \ud30c\uc545\ud574\ubcf4\uc790\n","20ba57a0":"#### Python align() \ud568\uc218\n* \ub450 \ub370\uc774\ud130 \ud504\ub808\uc784\uc5d0 \ud3ec\ud568 \ub41c \ub370\uc774\ud130\ub97c \ubcc0\uacbd\ud558\uc9c0 \uc54a\uace0 \ub450 \ub370\uc774\ud130 \ud504\ub808\uc784\uac04\uc5d0 \ud589 \ubc0f \/ \ub610\ub294 \uc5f4\uc758 \ubc30\uc5f4\uc774 \ub3d9\uc77c\ud55c \uc9c0 \ud655\uc778\ud560\ub54c \uc0ac\uc6a9","a6e9b612":"## 6) Back to Exploratory Data Analysis\n\n### 6-1) \uc774\uc0c1\uce58 (Anomalies)\n* \uc774\uc0c1\uce58\ub97c \ubc1c\uacac\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc911 \ud558\ub098\ub294 describe()\uba54\uc18c\ub4dc\ub85c \uceec\ub7fc\uc758 \ud1b5\uacc4\uac12\ub4e4\uc744 \ubcf4\ub294\uac83\uc774\ub2e4.","8cf6b927":"## 8) Logistic Regression Implementation\n- \ubaa8\ub4e0 categorical \ubcc0\uc218\ub97c encoding\ud55c \uac83\uc744 \uc0ac\uc6a9\ud560\uac83\uc774\ub2e4. \uadf8\ub9ac\uace0 \uacb0\uce21\uce58\ub97c imputation\uc73c\ub85c \ucc44\uc6b8\uac83\uc774\uace0, \ubcc0\uc218\ub97c normalizing\ud560\uac83\uc774\ub2e4. ","6f255192":"* target==1(\ube68\uac04\uc0c9) \uc758 \ubd84\ud3ec\ub97c \ubcf4\uba74 20-30\ub300\uc5d0 \uae30\uc6b8\uc5b4 \uc788\ub294\uac83\uc744 \ubcfc \uc218 \uc788\ub2e4. \uc774\ub294 \uc80a\uc740 \uce35\uc77c\uc218\ub85d \ub300\ucd9c \uc0c1\ud658\uc744 \ubabb\ud560 \ud655\ub960\uc774 \ub192\ub2e4\uace0 \uc720\ucd94\ud560 \uc218 \uc788\uc74c.\n* target==0\uc77c\ub54c\uc640 1\uc77c\ub54c\uc758 TARGET\uacfc\uc758 \ubd84\ud3ec\uac00 \uc0c1\uc774\ud55c\uac83\uc73c\ub85c \ubcf4\uc544 \uc774 \ubcc0\uc218\ub294 \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378\uc5d0 \uc720\uc6a9\ud558\uac8c \ud65c\uc6a9\ub420 \uac83\uc73c\ub85c \ubcf4\uc778\ub2e4.\n* \uadf8\ub7fc\uc774\uc81c \ub098\uc774\ub97c \ub098\uc774\ub300 \ubcc4\ub85c \uadf8\ub8f9\uc744 \ub098\ub220\uc11c target=1(\ub300\ucd9c \uc0c1\ud658\uc774 \uc5b4\ub824\uc6b4) \uc758 \ud3c9\uade0\uac12\uc744 \uc0b4\ud3b4\ubcf4\uc790.","0c763e3e":"### 6-2) Correlations\n\uc774\uc81c \uce74\ud14c\uace0\ub9ac\ud615 \ubcc0\uc218\uc640 outlier\ub97c \ub2e4\ub904\ubcf4\uc790. <br>\n\ub370\uc774\ud130\ub97c \uc774\ud574\ud558\ub294 \ubc29\ubc95\uc911 \ud558\ub098\ub294 \ubcc0\uc218\uac04, \uadf8\ub9ac\uace0 target\uacfc\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uc0b4\ud3b4\ubcf4\ub294\uac83\uc774\ub2e4. <br>\n.corr()\ub97c \uc0ac\uc6a9\ud574\uc11c \ubcc0\uc218\uac04, \uadf8\ub9ac\uace0 target\ubcc0\uc218\uc640\uc758 Pearson \uc0c1\uad00\uad00\uacc4\ub97c \uc0b4\ud3b4\ubcf4\uc790.","f3329b9a":"* LogisticRegression Score : 0.67887","649fef6c":"* get_feature_names \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ub2e4\ud56d\uc2dd \uc801\uc6a9\ud55c \ubcc0\uc218\uc774\ub984 \ud655\uc778","3e78a260":"* \uc774\uc0c1\uce58\ub85c \ubcf4\uc774\ub294 \uace0\uac1d\ub4e4\uc774 \ub300\ucd9c\uc744 \uc0c1\ud658\ud558\uc9c0\ubabb\ud560 \ud655\ub960\uc774 5.4%\ub85c \ub354 \ub0ae\uc74c.\n* \uc774\uc0c1\uce58\ub97c \ub2e4\ub8e8\ub294 \uac00\uc7a5 \uc548\uc804\ud55c \ubc29\ubc95\uc740 \uacb0\uce21\uce58 \ucc44\uc6b0\ub4ef\uc774 \ucc44\uc6b0\ub294 \ubc29\ubc95\n* \uc774 \uacbd\uc6b0 \ubaa8\ub4e0 \uc774\uc0c1\uce58\ub4e4\uc774 \uac19\uc740\uac12\uc744 \uac16\uace0 \uc788\uc73c\ubbc0\ub85c, \ub2e4 \uac19\uc740 \uac12\uc73c\ub85c \ucc44\uc6b8\uac83\uc774\ub2e4.\n* \uc774\uc0c1\uac12\ub4e4\uc774 \uc911\uc694\ud574\ubcf4\uc774\ub2c8, \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378\uc5d0 \uc774 \uc774\uc0c1\uac12\ub4e4\uc744 \uc784\uc758\ub85c \ucc44\uc6b4\uac83\uc5d0\ub300\ud574 \uc54c\ub824\uc904\uac83\uc774\ub2e4.\n\n> \uacb0\ub860\uc801\uc73c\ub85c\n    * \uc774\uc0c1\uac12\uc744 \uc22b\uc790\ub85c \ucc44\uc6b0\uc9c0 \uc54a\uace0, \uc0c8\ub85c\uc6b4 boolean \uceec\ub7fc\uc744 \ub9cc\ub4e4\uc5b4\uc11c \uc774\uc0c1\uac12\uc778\uc9c0 \uc544\ub2cc\uc9c0\ub97c \uad6c\ubd84\ud560\uac83\uc774\ub2e4.","71ad3ecd":"* \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378\uc744 \ub9cc\ub4dc\ub824\uba74, \uc704\uc758 \uacb0\uce21\uce58\ub4e4\uc744 \ucc44\uc6cc\uc57c\ud55c\ub2e4.(imputation)\n* \ub4b7\ubd80\ubd84\uc5d0\uc11c imputation\uc5c6\uc774 \uacb0\uce21\uce58\ub97c \ucc44\uc6b8 \uc218 \uc788\ub294 XGBoost \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud560\uac83\uc774\ub2e4.\n* \ub610 \ub2e4\ub978 \ubc29\ubc95\uc73c\ub85c\ub294 \uacb0\uce21\uce58\uac00 \ub108\ubb34 \ub9ce\uc740 \uceec\ub7fc\uc740 \uc0ad\uc81c\ud560\uc218\ub3c4\uc788\uc9c0\ub9cc, \ud574\ub2f9 \uceec\ub7fc\uc774 \ubaa8\ub378 \uc131\ub2a5\uc5d0 \ub3c4\uc6c0\uc774 \ub420\uc218\ub3c4 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc6b0\uc120 \uc720\uc9c0\ud558\uae30\ub85c\ud55c\ub2e4.","ad674c8b":"* \uc608\uc0c1\ud588\ub358\uac83 \ucc98\ub7fc EXT_SOURCE \ubcc0\uc218\uc640 DAYS_BIRTH \ubcc0\uc218\uac00 \uc911\uc694\ubcc0\uc218\ub85c \ub098\uc628\uac83\uc744 \ud655\uc778.\n* feature importances\uac00 \ubaa8\ub378\uc744 \ud574\uc11d\ud558\uace0 \ucc28\uc6d0\uc744 \uc904\uc774\ub294\ub370 \uac00\uc7a5 \uc88b\uc740 \ubc29\ubc95\uc774\ub77c\uace0 \ud560 \uc218\ub294 \uc5c6\uc9c0\ub9cc, \uc608\uce21\uc744 \ud560\ub54c \ubaa8\ub378\uc774 \uc5b4\ub5a4 \uc694\uc778\uc744 \uace0\ub824\ud558\ub294\uc9c0\ub97c \uc774\ud574\ud558\ub294\ub370 \ub3c4\uc6c0\uc774 \ub41c\ub2e4.","64219ab3":"## 4) \ubc94\uc8fc\ud615 \ubcc0\uc218 Encoding\nLightGBM\uac19\uc740 \ubaa8\ub378\uc744 \uc81c\uc678\ud558\uace0 \ub300\ubd80\ubd84\uc758 \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378\uc740 \ubc94\uc8fc\ud615 \ubcc0\uc218\ub97c \ub2e4\ub8f0 \uc218 \uc5c6\uae30 \ub54c\ubb38\uc5d0, \uc774\ub7ec\ud55c \ubc94\uc8fc\ud615 \ubcc0\uc218\ub97c encode\ud574\uc918\uc57c \ud55c\ub2e4. \uadf8 \ubc29\ubc95\uc73c\ub85c\ub294 \uc544\ub798 \ub450\uac00\uc9c0\uac00 \uc788\uc74c\n* 1) Label encoding :\n    * \ubc94\uc8fc\ud615 \ubcc0\uc218\uc758 \uac1c\ubcc4\uac12\uc744 \uc22b\uc790\ub85c \ubc14\uafd4\uc8fc\ub294 \ubc29\ubc95. \uceec\ub7fc\uc744 \uc0c8\ub85c \uc0dd\uc131\ud558\uc9c0 \uc54a\uc74c\n    * \uc5ec\uc131\/\ub0a8\uc131 \ucc98\ub7fc \ubc94\uc8fc\ud615 \ubcc0\uc218\uc758 \uac12\uc774 \ub450\uac1c\uc77c\uacbd\uc6b0\ub294 Label encoding\uc744 \uc0ac\uc6a9\ud574\ub3c4 \ubb34\uad00\ud558\uc9c0\ub9cc, \uadf8 \uc774\uc0c1\uc77c\uacbd\uc6b0\ub294 One-hot encoding\uc744 \uc0ac\uc6a9\ud558\ub294\uac83\uc774 \uc88b\uc74c\n* 2) One-hot encoding :\n    * \ud53c\ucc98 \uac12\uc758 \uc720\ud615\uc5d0 \ub530\ub77c \uc0c8\ub85c\uc6b4 \ud53c\ucc98\ub97c \ucd94\uac00\ud574 \uace0\uc720 \uac12\uc5d0 \ud574\ub2f9\ud558\ub294 \uce7c\ub7fc\uc5d0\ub9cc 1\uc744 \ud45c\uc2dc\ud558\uace0 \ub098\uba38\uc9c0 \uce7c\ub7fc\uc5d0\ub294 0\uc744 \ud45c\uc2dc\ud558\ub294 \ubc29\ubc95\n    * One-hot encoding\uc758 \uacbd\uc6b0 \ubc94\uc8fc\ud615 \ubcc0\uc218\uc758 \uc720\ub2c8\ud06c\ud55c\uac12\uc758 \uac1c\uc218\ub9cc\ud07c \uceec\ub7fc\uc774 \ub298\uc5b4\ub09c\ub2e4\ub294\uac83\n        * \uc774\ub97c \ubcf4\uc644\ud558\uae30 \uc704\ud574 PCA\uac19\uc740 \ucc28\uc6d0\ucd95\uc18c \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud560\uc218\ub3c4\uc788\uc74c\n        \n> \uc774 \ub178\ud2b8\ubd81\uc5d0\uc11c\ub294 \ubc94\uc8fc\ud615\ubcc0\uc218\uc758 \uc720\ub2c8\ud06c\ud55c \uac12\uc774 2\uac1c\uc77c\uacbd\uc6b0 Label encoding\uc744 \uc0ac\uc6a9\ud558\uace0 \uadf8 \uc774\uc0c1\uc77c \uacbd\uc6b0 One-hot encoding\uc744 \uc0ac\uc6a9\ud560\uac83\ub2e4.","c0417fcc":"### Baseline\n- \uc6b0\ub9ac\ub294 \ub300\ucd9c\uc744 \uac1a\uc9c0 \ubabb\ud560 \ud655\ub960\uc744 \uc608\uce21\ud558\uace0\uc790 \ud55c\ub2e4. \uadf8\ub798\uc11c \ub9cc\uc57d \uc544\uc608 \ubaa8\ub974\uaca0\ub2e4\uace0\ud558\uba74 test set\uc758 \ubaa8\ub4e0 \uad00\uce21\uce58\uc5d0 0.5\ub77c\uace0 \uc608\uce21\ud560\uc218\ub3c4\uc788\ub2e4. \uc774\ub807\uac8c\ud558\uba74 AUC ROC\uac12\uc774 0.5\ub85c \ub098\uc62c\uac83\uc774\ub2e4.","28ec6b80":"* Target=0\uc77c\ub54c\uc640 1\uc77c\ub54c \uac01 \ubcc0\uc218\uc758 \ubd84\ud3ec\uac00 \ubcc4 \ucc28\uc774\uac00\uc5c6\uc5b4\uc11c \uc774 feature\uac00 \uc720\uc758\ubbf8\ud560\uc9c0 \ud14c\uc2a4\ud2b8\ud574\ubcf4\uc790","8762a84f":"- \uc608\uce21\ud55c \uacb0\uacfc\uac12\uc740 mx2 \ubc30\uc5f4\ub85c \ub098\uc624\ub294\ub370(m\uc740 \uad00\uce21\uce58 \uac1c\uc218),\uccab\ubc88\uc9f8 \uceec\ub7fc\uc740 target\uc774 0\uc77c \ud655\ub960\uc774\uace0 \ub450\ubc88\uc9f8 \uceec\ub7fc\uc740 target\uc774 1\uc77c \ud655\ub960\uc774\ub2e4.(\ub530\ub77c\uc11c, \ub450 \uceec\ub7fc\uc758 \ud569\uc740 1\uc774\ub418\uc5b4\uc57c\ud568)\n- \uc6b0\ub9ac\uac00 \uc6d0\ud558\ub294 \uac83\uc740 \ub300\ucd9c\uc744 \uac1a\uc9c0 \ubabb\ud560 \ud655\ub960\uc774\ubbc0\ub85c, target=1\uc77c \ud655\ub960\uc778 \ub450\ubc88\uc9f8 \uceec\ub7fc\uc744 \uc120\ud0dd\ud574\uc57c\ud55c\ub2e4.","46d136d2":"## 9) Improved Model: Random Forest\n* \uacb0\uc815\ud2b8\ub9ac\uc758 \ub2e8\uc810\uc744 \ubcf4\uc644\ud558\uace0 \uc7a5\uc810\uc740 \uadf8\ub300\ub85c \uac00\uc9c0\uace0 \uc788\ub294 \ubaa8\ub378. \ub300\ud45c\uc801\uc778 '\ubc30\uae45' \ubaa8\ub378\uc774\ub2e4.(\ubc30\uae45(Bagging)\uc740 bootstrap aggregating\uc758 \uc904\uc784\ub9d0)\n* \ud6c8\ub828 \uacfc\uc815\uc5d0\uc11c \uad6c\uc131\ud55c \ub2e4\uc218\uc758 \uacb0\uc815 \ud2b8\ub9ac\ub4e4\uc744 \ub79c\ub364\ud558\uac8c \ud559\uc2b5\uc2dc\ucf1c \ubd84\ub958 \ub610\ub294 \ud68c\uadc0\uc758 \uacb0\uacfc\ub3c4\ucd9c\uc5d0 \uc0ac\uc6a9\ud568.\n* \uae30\ubcf8 \uacb0\uc815\ud2b8\ub9ac\ub294 \ud574\ub2f9 \ub370\uc774\ud130\uc5d0 \ub300\ud574 \ub9de\ucdb0\uc11c \ubd84\ub958\ub97c \uc9c4\ud589\ud55c \uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \uacfc\uc801\ud569 \ud604\uc0c1\uc774 \uc790\uc8fc \ub098\ud0c0\ub098\ub294 \ub2e8\uc810\uc774 \uc788\ub294\ub370, \ub79c\ub364\ud3ec\ub808\uc2a4\ud2b8\ub294 \uac01\uac01\uc758 \ud2b8\ub9ac\uac00 \ub3c5\ub9bd\uc801\uc73c\ub85c \ud559\uc2b5\ud574\uc11c \uc774\ub7f0 \ub2e8\uc810\uc744 \uac1c\uc120\ud568.\n\n\n### \ud558\uc774\ud37c\ud30c\ub77c\ubbf8\ud130 \ud29c\ub2dd\n> **n_estimators**\n    * \uacb0\uc815\ud2b8\ub9ac\uc758 \uac2f\uc218\ub97c \uc9c0\uc815 (Default=10)\n    * \ubb34\uc791\uc815 \ud2b8\ub9ac \uac2f\uc218\ub97c \ub298\ub9b0\ub2e4\uace0\ud574\uc11c \uc131\ub2a5 \uc88b\uc544\uc9c0\ub294 \uac83 \uc544\ub2d8.\uc2dc\uac04\uc774 \uac78\ub9b4 \uc218 \uc788\uc74c\n> **random_state**\n    * \ub79c\ub364\ud558\uac8c \ub9cc\ub4e4\uc5b4\uc9c0\uae30 \ub54c\ubb38\uc5d0 random_state\ub97c \uace0\uc815\ud574\uc57c \uac19\uc740 \uacb0\uacfc\ub97c \ubcfc \uc218 \uc788\uc74c\n> **verbose**\n    * \uc2e4\ud589 \uacfc\uc815 \ucd9c\ub825 \uc5ec\ubd80\n> **n_jobs**\n    * \uc801\ud569\uc131\uacfc \uc608\uce21\uc131\uc744 \uc704\ud574 \ubcd1\ub82c\ub85c \uc2e4\ud589\ud560 \uc791\uc5c5 \uc218\n    * n_jobs=-1\ub85c \uc9c0\uc815\ud558\uba74 \ucef4\ud4e8\ud130\uc758 \ubaa8\ub4e0 \ucf54\uc5b4\ub97c \uc0ac\uc6a9\ud568","39de44d6":"* \ub2e4\ud56d\uc2dd\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc9c4 \uba87\uba87 \uc0c8\ub85c\uc6b4 \ubcc0\uc218\ub4e4\uc740 \uae30\uc874 \ubcc0\uc218\ubcf4\ub2e4 \uc0c1\uad00\uad00\uacc4\uac00 \ub354 \ub192\ub2e4.<br>\n(\uc704\uc5d0\uc11c \uae30\uc874 \ubcc0\uc218\uc640 TARGET\ubcc0\uc218\uc640\uc758 \uc0c1\uad00\uad00\uacc4\uc911 \uac00\uc7a5 \ub192\uc558\ub358 \uac12\uc774 EXT_SOURCE_3 \ubcc0\uc218\uac00 -0.18\uc774\uc5c8\ub294\ub370, \ub450 \ubcc0\uc218 EXT_SOURCE_2 EXT_SOURCE_3 \ub97c \uc870\ud569\ud55c \ubcc0\uc218\ub294 -0.19\ub85c \ub354\ud07c)\n\n* \uc2e4\uc81c \uc774 \ubcc0\uc218\uac00 \ubaa8\ub378\uc5d0 \uc601\ud5a5\uc774 \uc788\ub294\uc9c0\ub294 \uc774 \ubcc0\uc218\ub97c \ub123\uc5c8\uc744\ub54c\uc640 \ube90\uc744\ub54c \ub458\ub2e4 \ud14c\uc2a4\ud2b8\ud574\ubcf4\uba74\ub41c\ub2e4.\n","0fa64213":"* EXT_SOURCE_3 \ubcc0\uc218\ub294 target\uac12\uc5d0 \ub530\ub77c \ucc28\uc774\uac00 \uac00\uc7a5 \ud070\uac83\uc73c\ub85c \ubcf4\uc778\ub2e4.\n* target \uacfc\uc758 \uc0c1\uad00\uacc4\uc218\uac00 \uadf8\ub9ac \ub192\uc9c0\ub294 \uc54a\uc9c0\ub9cc, target\uc774 0\uc778\uc9c0 1\uc778\uc9c0\uc5d0 \ub530\ub77c \uac12\uc774 \ub2e4\ub978\uac83\uc73c\ub85c \ubcf4\uc544 \ubaa8\ub378\uc5d0 \uc601\ud5a5\uc744 \uc8fc\ub294 \uc8fc\uc694 \ubcc0\uc218\ub77c\uace0 \ud310\ub2e8\ud560 \uc218 \uc788\uc74c.","0e71d238":"### 7-2) Domain Knowledge Features\n* CREDIT_INCOME_PERCENT: the percentage of the credit amount relative to a client's income\n* ANNUITY_INCOME_PERCENT: the percentage of the loan annuity relative to a client's income\n* CREDIT_TERM: the length of the payment in months (since the annuity is the monthly amount due\n* DAYS_EMPLOYED_PERCENT: the percentage of the days employed relative to the client's age","1b911239":"* \ub3c4\uba54\uc778 \uae30\ubc18\uc73c\ub85c \ub9cc\ub4e0 4\uac1c\uc758 \ubcc0\uc218\uac00 \ubcc0\uc218 \uc911\uc694\ub3c4 top15\uc5d0 \ud3ec\ud568\ub418\uc5b4\uc788\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\ub2e4. \n> \uacb0\ub860\uc801\uc73c\ub85c, \ub3c4\uba54\uc778\uae30\ubc18\uc73c\ub85c \ub9cc\ub4e0 \ubcc0\uc218\ub97c \ubaa8\ub378\uc5d0 \ud3ec\ud568\ud588\uc744\ub54c\uac00 score\uac00 \uac00\uc7a5 \uc88b\uc558\uc74c.","2b559f51":"* \uc808\ub300\uac12\uc744 \ucde8\ud574\uc11c \ub2e4\uc2dc TARGET\uacfc\uc758 \uc0c1\uad00\uacc4\uc218\ub97c \ubcf4\ub2c8 \uace0\uac1d\uc758 \ub098\uc774\uac00 \ub9ce\uc744\uc218\ub85d, \ub300\ucd9c\uc744 \uc81c\ub54c \uc0c1\ud658\ud560 \uac00\ub2a5\uc131\uc774 \ub192\ub2e4\uace0 \ub098\uc634.","b663bc6e":"### 9-2) Domain\uae30\ubc18\uc73c\ub85c \ub9cc\ub4e0 feature\ub85c \uc608\uce21\ud574\ubcf4\uc790","e21dcce3":"## 3) Column Types\nint64, float64 \ud0c0\uc785\uc740 \uc218\uce58\ud615\ubcc0\uc218\uc774\uace0 object \ud0c0\uc785\uc740 \ubc94\uc8fc\ud615 \ubcc0\uc218","37ecd25a":"* \ub300\ubd80\ubd84\uc758 \ubc94\uc8fc\ud615 \ubcc0\uc218\ub294 \uc720\ub2c8\ud06c\ud55c \uac12\uc774 \uc801\uc740\uac83\uc73c\ub85c \ubcf4\uc778\ub2e4.\n    * ORGANIZATION_TYPE \uc640 OCCUPATION_TYPE \ub294 \uc608\uc678","e22c1273":"### 6-5) Pairs Plot\n* EXT_SOURCE \uc640 DAYS_BIRTH \ubcc0\uc218\uac04\uc758 pair plot\uc744 \uadf8\ub824\ubcf4\uc790. \n* pair plot\uc740 \uac01\uac01\uc758 \ubd84\ud3ec\ub97c \ubcf4\uc5ec\uc904 \ubfd0\ub9cc \uc544\ub2c8\ub77c, \uc5ec\ub7ec \ubcc0\uc218\uac04\uc758 \uad00\uacc4\ub3c4 \ubcf4\uc5ec\uc8fc\ub294 \uc88b\uc740 \uc2dc\uac01\ud654\uc774\ub2e4.","46df167a":"* Random Forest engineered Score :0.60467","4f9ad646":"* \uc80a\uc740\uce35\uc77c\uc218\ub85d \ub300\ucd9c\uc744 \uc0c1\ud658\ud558\uc9c0 \ubabb\ud558\ub294 \uac83\uc73c\ub85c \ub098\ud0c0\ub0a8\n* 20-25\uc138, 25-30\uc138 30-35\uc138\ub294 \uac01\uac01 \uc57d10% \uc774\uc0c1 \ub300\ucd9c\uc744 \uc0c1\ud658\ud558\uc9c0 \ubabb\ud588\uace0, 55-60\uc138, 60-65\uc138, 65-70\uc138\ub294 5%\uc774\ud558\ub85c \ub300\ucd9c\uc744 \uc0c1\ud658\ud558\uc9c0 \ubabb\ud588\uc74c.","582b4a9e":"* domain\uae30\ubc18\uc73c\ub85c \uc0c8\ub85c \ub9cc\ub4e0 \ubcc0\uc218\ub97c TARGET\ubcc4\ub85c \ub2e4\ub978 \uceec\ub7ec\ub85c KDE plot\uc744 \uadf8\ub824\ubcf4\uc790","af3de04a":"* RandomForest Score :","28261215":"--------------------------------------------------------\n## Exploratory Data Analysis","6a111488":"### Label Encoding and One-Hot Encoding\n* LabelEncoder(), get_dummies() \ud65c\uc6a9","00218cbe":"- \uc774\uc81c LogisticRegression\uc744 \uc0ac\uc6a9\ud574\ubcfc\uac83\uc778\ub370, \uc624\ubc84\ud53c\ud305\uc744 \uc870\uc808\ud574\uc8fc\ub294 regularization \ud30c\ub77c\ubbf8\ud130 C \ub97c \ub0ae\ucdb0\uc11c \uc138\ud305\uc744 \ud574\ubcfc\uac83\uc774\ub2e4. \n- \uc6b0\uc120 log_reg\ub77c\ub294 \uc774\ub984\uc73c\ub85c model\uc744 \ub9cc\ub4e4\uc5b4\uc8fc\uace0, .fit()\uc744 \uc0ac\uc6a9\ud574\uc11c \ubaa8\ub378\uc744 \ud6c8\ub828\uc2dc\ud0a4\uace0, .predict_proba()\ub97c \uc0ac\uc6a9\ud574\uc11c testing data\uc5d0 \ub300\ud55c \uac12\uc744 \uc608\uce21\ud560\uac83\uc774\ub2e4.","b7897613":"## EDA\uc640 Feature-engineering\uc744 \ud1b5\ud55c \ub300\ucd9c \uc0c1\ud658\uc5ec\ubd80 \uc608\uce21\n\n#### reference\n* Home Credit Default Risk - A Gentle Introduction <br>\n\nhttps:\/\/www.kaggle.com\/willkoehrsen\/start-here-a-gentle-introduction <br>\nhttps:\/\/bkshin.tistory.com\/entry\/\uce90\uae00-5-Home-Credit-Default-Risk\n","760f3b8e":"* \ub300\ucd9c\uc744 \uc0c1\ud658\ud560 \uc218 \uc788\ub294 0\uac12\uc774 1\ubcf4\ub2e4 \ud6e8\uc52c \ub9ce\uc740 imbalanced data\uc774\ub2e4.","c4cfbd67":"### 6-4) Exterior Sources\n* \uc74c\uc758 \uc0c1\uad00\uc774 \uac00\uc7a5 \ub192\uc558\ub358 3\uac1c\uc758 \ubcc0\uc218 EXT_SOURCE_1, EXT_SOURCE_2, EXT_SOURCE_3 \uc774\ub2e4.\n    * \uc774 \ubcc0\uc218\ub4e4\uc740 \uc678\ubd80\uc5d0\uc11c \uac00\uc838\uc628 \uc815\uaddc\ud654\ub41c score\ub97c \ub098\ud0c0\ub0b8\ub2e4.\n* \uadf8\ub7fc, \uc774\uc81c TARGET \ubcc0\uc218\uc640 EXT_SOURCE\uc640\uc758 \uc0c1\uad00\uad00\uacc4\uc640 EXT_SOURCE \uc11c\ub85c\uac04\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uc0b4\ud3b4\ubcf4\uc790","9efcb4d2":"### 9-1) Feature engineering\ud55c \ub370\uc774\ud130\ub85c \uc608\uce21\ud574\ubcf4\uc790\n* (\ucc38\uace0) \uae30\uc874 train \ubcc0\uc218\uc5d0 \ub2e4\ud56d\ubcc0\uc218 \ucd94\uac00\ud55c app_train_poly\ub370\uc774\ud130\uac00 \uc544\ub2c8\ub77c, \ub2e4\ud56d\ubcc0\uc218\ub9cc \uc788\ub294 poly_features\ub85c \uc608\uce21\ud55c\uac12","a45c6454":"* \uc704\uc758 \uacb0\uacfc\uc5d0\uc11c \ube68\uac04\uc0c9\uc740 \ub300\ucd9c \uc0c1\ud658\uc744 \ubabb\ud558\ub294\uacbd\uc6b0, \ud30c\ub780\uc0c9\uc740 \ub300\ucd9c \uc0c1\ud658\ud558\ub294 \uacbd\uc6b0\ub97c \ub098\ud0c0\ub0c4.\n* EXT_SOURCE_1\uacfc YEARS_BIRTH \uac04\uc758 \uc591\uc758 \uc120\ud615\uad00\uacc4\uac00 \ub098\ud0c0\ub09c\ub2e4.\n","cfbb23d7":"## 10) Model Interpretation: Feature Importances\n\n* \uc5b4\ub5a4 \ubcc0\uc218\uac00 \uac00\uc7a5 \uad00\ub828\uc774 \uc788\ub294\uc9c0\ub97c \uc54c\uae30\uc704\ud55c \uac00\uc7a5 \uac04\ub2e8\ud55c \ubc29\ubc95\uc740 \ub79c\ub364\ud3ec\ub808\uc2a4\ud2b8\uc758 feature importances\ub97c \ud655\uc778\ud558\ub294 \uac83\uc774\ub2e4. EDA\uacfc\uc815\uc5d0\uc11c \ubcc0\uc218\uac04 \uc0c1\uad00\uad00\uacc4\ubd84\uc11d\uc744 \ud1b5\ud574 EXT_SOURCE \ubcc0\uc218\uc640 DAYS_BIRTH \ubcc0\uc218\uac00 \uc911\uc694\ud55c \ubcc0\uc218\ub77c\uace0 \uc0dd\uac01\ud574\ubcfc\uc218\uc788\ub2e4.\n* \ub098\uc911\uc5d0\ub294 \uc774 feature importances\ub97c \uc0ac\uc6a9\ud574\uc11c \ucc28\uc6d0\uc744 \uc904\uc5ec\ubcfc\uac83\uc774\ub2e4.","98a4e48b":"## 2) \uacb0\uce21\uce58 \ud655\uc778\n\uac01 \uceec\ub7fc\ubcc4 \uacb0\uce21\uce58 \uac1c\uc218 \ubc0f \ube44\uc911 \ud655\uc778","4767a161":"### \ub300\ud68c \uc124\uba85\n\uac01 \uace0\uac1d\uc758 \uc815\ubcf4\ub97c \uae30\ubc18\uc73c\ub85c \ud574\ub2f9 \uace0\uac1d\uc774 \ub300\ucd9c\ud55c \ub3c8\uc744 \uac1a\uc744 \uc218 \uc788\uc744\uc9c0 \uc5c6\uc744\uc9c0\uc5d0 \ub300\ud55c \ud655\ub960\uc744 \uc608\uce21\ud558\ub294 \ub300\ud68c <br>\n(supervised classification task)\n> * 0 \uc774\uba74 \ub300\ucd9c\uc0c1\ud658 \uac00\ub2a5, 1\uc774\uba74 \ub300\ucd9c\uc0c1\ud658 \uc5b4\ub824\uc6c0\n* \uc8fc\uc5b4\uc9c4 \uc5ec\ub7ec \ub370\uc774\ud130 \ud14c\uc774\ube14\uc774 \uc788\uc9c0\ub9cc, \uc774 \ub178\ud2b8\ubd81\uc5d0\uc11c\ub294 \uba54\uc778 \ud14c\uc774\ube14 application_train, application_test\ub9cc \uc0ac\uc6a9\ud560 \uc608\uc815","82f77c3c":"### Metric : ROC AUC\nAUC-ROC \uace1\uc120\uc740 \ub2e4\uc591\ud55c \uc784\uacc4\uac12\uc5d0\uc11c \ubaa8\ub378\uc758 \ubd84\ub958 \uc131\ub2a5\uc5d0 \ub300\ud55c \uce21\uc815 \uadf8\ub798\ud504\n* ROC = \ubaa8\ub4e0 \uc784\uacc4\uac12\uc5d0\uc11c \ubd84\ub958 \ubaa8\ub378\uc758 \uc131\ub2a5\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uadf8\ub798\ud504\n* AUC(Area Under the Curve) = ROC\uace1\uc120\uc544\ub798\uc601\uc5ed\n    * \uc6b0\uc218\ud55c \ubd84\ub958\ubaa8\ub378\uc740 AUC\uac12\uc774 1\uc5d0 \uac00\uae5d\uace0, \ud074\ub798\uc2a4\ub97c \ubd84\ub958\ud558\ub294 \uc131\ub2a5\uc774 \ub6f0\uc5b4\ub0a8\uc744 \uc758\ubbf8\n    * AUC \ucd5c\uc18c\uac12\uc740 0.5\uc73c\ub85c, \uc774 \uacbd\uc6b0 \ubaa8\ub378\uc758 \ud074\ub798\uc2a4 \ubd84\ub9ac \ub2a5\ub825\uc774 \uc804\ud600 \uc5c6\uc74c\uc744 \ub73b\ud568\n    \n    > AUC\ud574\uc11d\n      * AUC=0.7\uc774\uba74, \ud574\ub2f9 \ubd84\ub958 \ubaa8\ub378\uc774 \uc591\uc131 \ud074\ub798\uc2a4\uc640 \uc74c\uc131 \ud074\ub798\uc2a4\ub97c \uad6c\ubcc4\ud560 \uc218 \uc788\ub294 \ud655\ub960\uc740 70%\n    \n#### ROC-curve\uc5d0\uc11c\uc758 \uc218\uc2dd\n* True positive rates(=recall, sensitivity)\n    * TPR = R = TP \/ (TP+FN)\n        * \uc2e4\uc81c \uc554 \ud658\uc790 \uc911\uc5d0\uc11c \uc554\ud658\uc790\ub77c\uace0 \ub9de\ucd98 \ud655\ub960\n* True negative rates(=specificity)\n    * TNR = TN \/ (TN+FP)\n        * \uc2e4\uc81c \uc815\uc0c1\uc778 \ud658\uc790 \uc911\uc5d0\uc11c \uc815\uc0c1\uc774\ub77c\uace0 \ub9de\ucd98 \ud655\ub960\n* ROC-curve\uc5d0\uc11c x\ucd95, y\ucd95\n    * y\ucd95 : TPR(=Recall)\n    * x\ucd95 : 1-(TNR)\n","65dcc2b7":"* \uc704\uc758 \ubd84\ud3ec\ub97c \uc0b4\ud3b4\ubcf4\ub2c8 outlier\uc5c6\uc774 \ub098\uc774\uac00 \uace0\ub974\uac8c \ubd84\ud3ec\ub418\uc5b4\uc788\ub294 \ud3b8. \n* \uc774\uc81c \ub098\uc774\uac00 TARGET\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc744 \uc2dc\uac01\ud654\ud574\uc11c \ubcf4\uae30\uc704\ud574 KDE plot\uc744 \uadf8\ub824\ubcfc\uac83\uc774\ub2e4.\n\n> KDE plot\uc744 \uc0ac\uc6a9\ud558\ub294 \uc774\uc720\n* \ubcf4\ud1b5 \ubd84\ud3ec\ub97c \ud655\uc778\ud560 \ub54c \ud788\uc2a4\ud1a0\uadf8\ub7a8\uc744 \ub9ce\uc774 \ud65c\uc6a9\ud55c\ub2e4. \uadf8\ub7f0\ub370 \ud788\uc2a4\ud1a0\uadf8\ub7a8\uc740 \uad6c\uac04\uc744 \uc5b4\ub5bb\uac8c \uc124\uc815\ud558\ub0d0\uc5d0 \ub530\ub77c \uacb0\uacfc\ubb3c\uc774 \ub9e4\uc6b0 \ub2ec\ub77c\uc838\uc11c \uc5c9\ub6b1\ud55c \uacb0\ub860\uacfc \ud574\uc11d\uc744 \ub0b4\ub9b4 \uc218 \uc788\uc74c.\n* \uadf8\ub798\uc11c \uadf8 \ub300\uc548\uc73c\ub85c \ucee4\ub110 \ubc00\ub3c4 \ucd94\uc815(KDE) \uadf8\ub798\ud504\ub97c \ub9ce\uc774 \uc0ac\uc6a9\ud568.\n    * \ud788\uc2a4\ud1a0\uadf8\ub7a8 \uac19\uc740 \ubd84\ud3ec\ub97c \uace1\uc120\ud654\ud574\uc11c \ub098\ud0c0\ub0b8 \uadf8\ub798\ud504","0c0c96b4":"## 5) Train\ub370\uc774\ud130\uc640 Test\ub370\uc774\ud130 \uceec\ub7fc \ub9de\ucdb0\uc8fc\uae30\ntrain \ub370\uc774\ud130\uc640 test \ub370\uc774\ud130\uc5d0\ub294 \ub3d9\uc77c\ud55c feature\uac00 \uc788\uc5b4\uc57c \ud55c\ub2e4. <br>\ntrain \ub370\uc774\ud130\uc5d0 \uc788\ub294 \uce74\ud14c\uace0\ub9ac\ubcc0\uc218\uc758 \uc720\ub2c8\ud06c\ud55c \uac12 \uac1c\uc218\uc640 test \ub370\uc774\ud130\uc5d0 \uc788\ub294 \uce74\ud14c\uace0\ub9ac \ubcc0\uc218\uc758 \uc720\ub2c8\ud06c\ud55c \uac12 \uac1c\uc218\uac00 \ub2e4\ub978 \ubcc0\uc218\ub4e4\uc774 \uc788\uc5b4\uc11c one-hot-encoding\uc744 \ud588\ub354\ub2c8, train\uc5d0\ub294 \uc788\ub294\ub370 test\uc5d0 \uc5c6\ub294 \uceec\ub7fc\ub4e4\uc774 \uc0dd\uaca8\ubc84\ub9bc.<br>\n<br>\n\ub530\ub77c\uc11c test \ub370\uc774\ud130\uc5d0 \uc5c6\uace0 train\uc5d0\ub9cc \uc788\ub294 \uceec\ub7fc\uc744 \uc0ad\uc81c\ud574\uc57c\ub428. <br>\n> \uc6b0\uc120, train \ub370\uc774\ud130\uc5d0\uc11c TARGET \uceec\ub7fc\uc744 \ubf51\uc544\ub0b8\ub2e4. \n    * TARGET \uceec\ub7fc\uc740 test\ub370\uc774\ud130\uc5d0 \uc5c6\uc5b4\ub3c4 train \ub370\uc774\ud130\uc5d0\ub294 \ubc18\ub4dc\uc2dc \uc788\uc5b4\uc57c\ud558\uae30 \ub54c\ubb38\uc5d0\n\n> align() \ud568\uc218\uc758 join\uba54\uc18c\ub4dc\ub97c inner\ub85c \uc801\uc6a9\ud574\uc11c \uad50\uc9d1\ud569\uc73c\ub85c \uc788\ub294 \ubcc0\uc218\ub9cc \ucd94\ub9b0\ub2e4.","19d6c8b4":"* EXT_SOURCE\uc640 TARGET \ubcc0\uc218\ub294 \uc74c\uc758 \uc0c1\uad00\uc131\uc744 \ub744\ubbc0\ub85c, EXT_SOURCE\uac12\uc774 \uc99d\uac00\ud560\uc218\ub85d \ub300\ucd9c \uc0c1\ud658\uc744 \uc798\ud55c\ub2e4\ub294 \uc758\ubbf8\ub85c \ud574\uc11d\uac00\ub2a5.\n* \ub610\ud55c, DAYS_BIRTH \ubcc0\uc218\ub294 EXT_SOURCE_1 \ubcc0\uc218\uc640 \uc591\uc758 \uc0c1\uad00\uc131\uc774 \ub192\uc740\uac83\uc73c\ub85c \ubcf4\uc544 \uc774 score\uc911 \ud558\ub098\ub294 \uace0\uac1d\uc758 \ub098\uc774\uc77c\uac83\uc73c\ub85c \ucd94\uc815\ub41c\ub2e4.\n* \uadf8 \ub2e4\uc74c\uc740 \uac01 EXT_SOURCE \ub97c TARGET\uac12 \ubcc4\ub85c \ub098\ub220\uc11c \ubd84\ud3ec\ub97c \uc0b4\ud3b4\ubcf4\uc790.","d0c69d59":"## 7) Feature Engineering\n* \uae30\uc874 \ub370\uc774\ud130\ub97c \ud65c\uc6a9\ud574\uc11c \uc0c8\ub85c feature\ub97c \ucd94\uac00\ud55c\ub2e4\uac70\ub098, \uc911\uc694\ud55c \ubcc0\uc218\ub9cc \uace0\ub978\ub2e4\uac70\ub098, \ucc28\uc6d0\uc744 \uc904\uc774\ub294 \ubc29\uc2dd \ub4f1 \uc5ec\ub7ec\uac00\uc9c0 feature engineering \ubc29\ubc95\uc774 \uc788\uc74c.<br>\n\uc774 \ub178\ud2b8\ubd81\uc5d0\uc11c\ub294 \uc544\ub798 \ub450\uac00\uc9c0 \ubc29\ubc95\uc758 feature engineering\uc744 \ud574\ubcfc\uac83\uc774\ub2e4.\n\n### 7-1) Polynomial Features\n> \uace1\uc120 \ud615\ud0dc\ub97c \ub744\ub294 \ub370\uc774\ud130\ub97c \uc81c\uacf1, \uc138\uc81c\uacf1\uc758 \uac12\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc11c \uc77c\ucc28\ubc29\uc815\uc2dd\uc774 \ub418\ub3c4\ub85d \ud560 \uc218 \uc788\uc74c. \uc774\ub807\uac8c dataset\uc758 feature\ub97c \uc870\uc815\ud558\uc5ec \ub2e4\ud56d\uc2dd\uc744 \uc77c\ucc28\ubc29\uc815\uc2dd\uc73c\ub85c \ub9cc\ub4e4\uba74 Gradient Descent \uac19\uc740 \uc54c\uace0\ub9ac\uc998\uc744 \uc0ac\uc6a9\ud574\uc11c \ud559\uc2b5\uc2dc\ud0ac\uc218 \uc788\uc74c.\n\n* \uc5ec\uae30\uc5d0\uc11c\ub294 EXT_SOURCE_1\ub97c \uc81c\uacf1\ud55c\uac12\uacfc EXT_SOURCE_2\ub97c \uc81c\uacf1\ud55c \uac12, \uadf8\ub9ac\uace0 EXT_SOURCE_1 x EXT_SOURCE_2 \uc640 EXT_SOURCE_1 x EXT_SOURCE_2^2 \uac19\uc740 \ub450 \ubcc0\uc218\uac04\uc758 \uacf1\uc744 \uc0c8\ub85c\uc6b4 \ubcc0\uc218\ub85c \ub9cc\ub4e4 \uc218 \uc788\ub2e4.\uc774\ub7ec\ud55c \ubcc0\uc218\ub97c \uc0c1\ud638\uc791\uc6a9\ud56d \uc774\ub77c\uace0 \ud55c\ub2e4.\n\n* \uc5b4\ub5a4 \ubcc0\uc218 \uac01\uac01\uc740 target\ubcc0\uc218\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\uc9c0 \uc54a\uc744 \uc218 \uc788\uc9c0\ub9cc, \uc774 \ub450 \ubcc0\uc218\ub97c \uacb0\ud569\ud588\uc744\ub54c target\ubcc0\uc218\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\ub2e4.\n\n* \uc0c1\ud638\uc791\uc6a9\ud56d\uc740 \ud1b5\uacc4\ubaa8\ub378\uc5d0\uc11c \ub2e4\uc218\uc758 \ubcc0\uc218\ub4e4\uc758 \ud6a8\uacfc\ub97c \ud30c\uc545\ud558\uae30\uc704\ud574 \uc0ac\uc6a9\ub418\uace4\ud55c\ub2e4. \ud558\uc9c0\ub9cc \uba38\uc2e0\ub7ec\ub2dd\uc5d0\ub294 \uc790\uc8fc \uc0ac\uc6a9\ub418\ub294\uac83\uc744 \ubcf4\uc9c0\ub294 \ubabb\ud588\ub2e4. \uadf8\ub798\uc11c \ud55c\ubc88 \uc774 \uc0c1\ud638\uc791\uc6a9\ud56d\uc774 \ubaa8\ub378\uc608\uce21\ub825\uc5d0 \ub3c4\uc6c0\uc774 \ub418\ub294\uc9c0 \uccb4\ud06c\ud574\ubcfc\uac83\uc774\ub2e4.\n\n* \uc544\ub798 \ucf54\ub4dc\uc5d0\uc11c EXT_SOURCE, DAYS_BIRTH \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud574\uc11c polynomial feature\ub97c \ub9cc\ub4e4\uc5b4\ubcfc\uac83\uc774\ub2e4.\n","3bb1ca02":"* DAYS_BIRTH \uceec\ub7fc\uc774 \uac00\uc7a5 \uc591\uc758 \uc0c1\uad00\uc131\uc774 \ub192\ub2e4. \uc591\uc758 \uc0c1\uad00\uc744 \ub744\uc9c0\ub9cc, \uc774 \ubcc0\uc218\uc758 \uac12\ub4e4\uc740 \uc2e4\uc81c\ub85c \uc74c\uc218\uc774\ub2e4. \n    * \uc774 \uc758\ubbf8\ub294 \uace0\uac1d \ub098\uc774\uac00 \ub9ce\uc744\uc218\ub85d \ub300\ucd9c \uc0c1\ud658\ud560 \uac00\ub2a5\uc131\uc774 \uc801\ub2e4? \ub77c\ub294 \ud574\uc11d\uc774 \ub098\uc624\ub294\ub370 DAYS_BIRTH\uac00 \uc74c\uc218\uc5ec\uc11c \uadf8\ub807\uac8c \ub098\ud0c0\ub09c\uac83\uc73c\ub85c \ubcf4\uc784. \ub530\ub77c\uc11c, DAYS_BIRTH\uc5d0 \uc808\ub313\uac12\uc744 \ucde8\ud574\uc11c \ub2e4\uc2dc \uc0c1\uad00\uad00\uacc4\ub97c \ubcf4\ub824\uace0 \ud568.","089794d0":"* 35\uac1c\uc758 feature\uac00 \ub9cc\ub4e4\uc5b4\uc9c4\uac83\uc744 \ud655\uc778.\uc774\uc81c \uc774 \uc0c8\ub85c\uc6b4 Feature\ub4e4\uc774 target\uacfc \uc0c1\uad00\uad00\uacc4\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud574\ubcf4\uc790","68ed6c98":"* Random Forest domain features :0.68354"}}