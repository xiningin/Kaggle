{"cell_type":{"8077fbfb":"code","631724bd":"code","4a084d5c":"code","34e4c783":"code","354d82fb":"code","389b91c5":"code","59f02bd6":"markdown","8864afa4":"markdown"},"source":{"8077fbfb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","631724bd":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport statsmodels.stats.api as sms\nfrom scipy.stats import ttest_1samp, shapiro, levene, ttest_ind, mannwhitneyu, pearsonr, spearmanr, kendalltau, \\\n    f_oneway, kruskal\nfrom statsmodels.stats.proportion import proportions_ztest\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', 10)\npd.set_option('display.float_format', lambda x: '%.5f' % x)\n!pip install openpyxl\n","4a084d5c":"#######################################\n#data reading and preprocessing\n#######################################\ndf_control = pd.read_excel(\"..\/input\/ab-test\/ab_testing.xlsx\", sheet_name = \"Control Group\")\n\ndf_test = pd.read_excel(\"..\/input\/ab-test\/ab_testing.xlsx\", sheet_name = \"Test Group\")\n\ndf_control.head()\n#i want to get rid of columns that are called \"unnamed\".\n#so i'll redefine the dataframe with 4 variables.\ndf_control = df_control[[\"Impression\", \"Click\", \"Purchase\", \"Earning\"]]\ndf_control.head()\n\n#same for the test set.\ndf_test = df_test[[\"Impression\", \"Click\",\"Purchase\", \"Earning\"]]\ndf_test.head()\n","34e4c783":"# our average earnings by clicks:\n\ndf_control.groupby(\"Click\").agg({\"Earning\" : \"mean\"}).sort_values(\"Earning\", ascending = False).head()\n\"\"\"\nClick      Earning         \n4667.20523 2497.29522\n6653.84552 2456.30424\n6090.07732 2311.27714\n3747.15754 2256.97559\n4736.35337 2254.56383\n\"\"\"\ndf_test.groupby(\"Click\").agg({\"Earning\" : \"mean\"}).sort_values(\"Earning\", ascending = False).head()\n\n\"\"\"\n            \nClick       Earning        \n4468.26679 3171.48971\n4800.06832 2967.51839\n3635.08242 2929.40582\n4119.21862 2832.58467\n3622.93635 2811.50273\n\"\"\"\n\n\n#the results showed that the new system provided a more successful outcome.\n#but is it statistically significant? is there a real difference?\n","354d82fb":"########################################\n#Defining the Hypothesis\n########################################\n\n# H0 : M1=M2 (There is no statistically significant difference between the maximum bidding and the average bidding.)\n# H1 : M1!=M2 (..there is.)\n\n#############################################\n#Assumption of Normality\n############################################\n\n# H0: Normal distribution assumption is provided.\n# H1:..not provided.\n\n# we reject H0 from 0.05 if p-value <.\n# 0.05 H0 CANNOT BE REJECTED unless p-value !< 0.05.\n\ntest_stat, pvalue = shapiro(df_control[\"Click\"])\nprint(\"Test Stat = %.4f, p-value = %.4f\" % (test_stat,pvalue))\ntest_stat, pvalue = shapiro(df_test[\"Click\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n#Test Stat = 0.9844, p-value = 0.8461\n#Test Stat = 0.9896, p-value = 0.9699\n#we can't reject H0. now we'll look at the assumption of homogeneity of variance.\n\n\n#########################################\n# Assumption of Homogeneity of Variance\n#########################################\n\n#H0: Assumption of Homogeneity of Variance is provided.\n#H1: ...not provided.\n\n# we reject H0 from 0.05 if p-value <.\n# 0.05 H0 CANNOT BE REJECTED unless p-value !< 0.05.\n#we will use levene test.\n\ntest_stat, pvalue = levene(df_control[\"Click\"],\n                           df_test[\"Click\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n\n#Test Stat = 6.3041, p-value = 0.0141\n\n#H0 REJECTED.\n#So Assumption of Homogeneity of Variance is not provided.\n\n#######################################################\n#Application of hypothesis with t test\n#######################################################\n\ntest_stat, pvalue = ttest_ind(df_control[\"Click\"],\n                              df_test[\"Click\"],\n                              equal_var = False)\n\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n\n#Test Stat = 4.4266, p-value = 0.0000\n#H0 rejected, so it can't be said that there is no significant difference between the average bidding and the maximum bidding.\n#new feature seems better.\n#We used T-test, Shapiro and Levene tests. We used a parametric T test, since the distribution of normality was provided.\n","389b91c5":"#############################\n#Purchase\n#############################\n\ndf_control[\"Purchase\"].mean()\n#550.89\ndf_test[\"Purchase\"].mean()\n#582.10\n\n#we have a %0.04 more purchase with the new changes. but is it statistically significant?\n\n##########################\n#defining the hypothesis\n##############################\n# H0 : M1=M2 (There is no statistically significant difference between the maximum bidding and the average bidding.)\n# H1 : M1!=M2 (..there is.)\n\n\n###################\n#Assumption of Normality\n##################\n\n# H0: Normal distribution assumption is provided.\n# H1:..not provided.\n\n# we reject H0 from 0.05 if p-value <.\n# 0.05 H0 CANNOT BE REJECTED unless p-value !< 0.05.\n\ntest_stat, pvalue = shapiro(df_control[\"Purchase\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n\ntest_stat, pvalue = shapiro(df_test[\"Purchase\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n\n#Test Stat = 0.9773, p-value = 0.5891\n#Test Stat = 0.9589, p-value = 0.1541\n#we can't reject H0. now we'll look assumption of homogeneity of variance.\n\n###############################\n#Assumption of homogeneity of variance\n###############################\n\n#H0: Assumption of Homogeneity of Variance is provided.\n#H1: ...not provided.\n\n# we reject H0 from 0.05 if p-value <.\n# 0.05 H0 CANNOT BE REJECTED unless p-value !< 0.05.\n\n\ntest_stat, pvalue = levene(df_control[\"Purchase\"],\n                           df_test[\"Purchase\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n\n#Test Stat = 2.6393, p-value = 0.1083\n#Assumption of Homogeneity of Variance is provided.\n\n\n#######################################################\n#Application of hypothesis with t test\n#######################################################\ntest_stat, pvalue = ttest_ind(df_control[\"Purchase\"],\n                              df_test[\"Purchase\"],\n                              equal_var=True)\n\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))","59f02bd6":"A\/B Test\nAn interactive social media platform recently introduced a type of offer called \u201caverage bidding\u201d as an alternative to the current type which is \u201cmaximum bidding\u201d.\n\nOne of our customers decided to test this new feature and thus, wants to do an A\/B test in order to understand whether average bidding provides more returns than maximum bidding. This dataset includes our customer's website information. It also contains data on the number of advertisements that users view and click on, as well as earnings information from the website. The dataset consists of two separate sets: the control group and the test group.\n\nDATASET\n\nVARIABLES\n\nImpression <- Number of times the advertisement was viewed.\n\nClick <- Click\n\nPurchase <- Purchase\n\nEarning <- Revenue","8864afa4":"\n#Test Stat = -0.9416, p-value = 0.3493\n#We can't reject H0.\n#We did not reject H0, we can say that there is no statistically significant (95% significant) difference.\n#Since we could not achieve statistical significance in \"purchases\", it would be best to continue to observe the process and collect more data.\n"}}