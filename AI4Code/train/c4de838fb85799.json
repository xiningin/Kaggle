{"cell_type":{"9c465eac":"code","d75e489c":"code","433c1022":"code","e7c77937":"code","dd3496dd":"code","68206f4e":"code","94a06772":"code","5ca84384":"code","26d72d5b":"code","12d7ffe5":"code","95e07508":"code","578b2017":"code","25bbe487":"code","75e6087f":"code","6dbd2db5":"code","fdb5cf9a":"code","fcdc9d35":"code","f729a2aa":"code","bb436f01":"code","a45ab777":"code","10980d0f":"code","b4130089":"code","39a94e28":"code","b5586bec":"code","02c7ce6f":"code","e8dc32d5":"code","6da65601":"markdown","827c1d39":"markdown","78ba5194":"markdown","7524aec2":"markdown","f3227cdc":"markdown","10e093f1":"markdown","6e300989":"markdown","f8a571bb":"markdown","dc8278e4":"markdown","d01cfaeb":"markdown","adda6693":"markdown","e3cddecb":"markdown","dd42f79c":"markdown","4522a051":"markdown","ca9f6352":"markdown","a7023ca3":"markdown","88696190":"markdown"},"source":{"9c465eac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d75e489c":"d_train = pd.read_csv('..\/input\/train.csv')\nd_test = pd.read_csv('..\/input\/test.csv')","433c1022":"d_train.info()","e7c77937":"d_train.head()","dd3496dd":"d_test.info()","68206f4e":"d_test.head()","94a06772":"d_train.drop(['Name', 'Ticket', 'Cabin', 'Embarked'], axis=1, inplace=True)\nd_test.drop(['Name', 'Ticket', 'Cabin', 'Embarked'], axis=1, inplace=True)","5ca84384":"# Change male to 1 and female to 0:\nd_train.Sex = [1 if each =='male' else 0 for each in d_train.Sex]\nd_test.Sex = [1 if each =='male' else 0 for each in d_test.Sex]","26d72d5b":"d_train.info()","12d7ffe5":"d_test.info()","95e07508":"# Lets see the mean values of Age columns:\nprint('Mean value of train data set Age column is: ', np.mean(d_train.Age))\nprint('Mean value of test data set Age column is: ', np.mean(d_test.Age))","578b2017":"d_train['Age'].fillna(d_train['Age'].mean(), inplace=True)\nd_test['Age'].fillna(d_test['Age'].mean(), inplace=True)\nd_test['Fare'].fillna(d_test['Fare'].mean(), inplace=True)","25bbe487":"d_train.head()","75e6087f":"plt.figure(figsize=[5,5])\nplt.title('Passenger Survival')\nsns.set(style='darkgrid')\nax = sns.countplot(x= 'Survived', data=d_train, palette='Set1')\nd_train.loc[:,'Survived'].value_counts()","6dbd2db5":"d_train.describe()","fdb5cf9a":"d_train.corr()","fcdc9d35":"# True values:\ny = d_train.Survived\n# Features will be used for predictions:\nx = d_train.drop(['Survived'], axis=1)","f729a2aa":"from sklearn.ensemble import RandomForestClassifier\n\n# Defining model:\nrf = RandomForestClassifier(n_estimators=100, random_state=42)\n\n# Training Model:\nrf.fit(x, y)\n\n# Predicting test data set using trained model:\ny_pred = rf.predict(d_test)\n\nlen(y_pred)","bb436f01":"d_subm_rf = pd.DataFrame({'PassengerId': d_test['PassengerId'], 'Survived': y_pred})","a45ab777":"d_subm_rf.to_csv('data_submission.csv', index = False)","10980d0f":"from sklearn.naive_bayes import GaussianNB\n\n# Defining NB model:\nnb = GaussianNB()\n\n# Training the model:\nnb.fit(x,y)\n\n# Predicting d_test:\ny_pred_nb = nb.predict(d_test)","b4130089":"d_subm_nb = pd.DataFrame({'PassengerId': d_test['PassengerId'], 'Survived': y_pred_nb})","39a94e28":"d_subm_nb.to_csv('data_submission_nb.csv', index = False)","b5586bec":"from sklearn.linear_model import LogisticRegression\n\nlr = LogisticRegression()\n\nlr.fit(x,y)\n\ny_pred_lr = lr.predict(d_test)","02c7ce6f":"d_subm_lr = pd.DataFrame({'PassengerId': d_test['PassengerId'], 'Survived': y_pred_lr})","e8dc32d5":"d_subm_lr.to_csv('data_submission_lr.csv', index = False)","6da65601":"Changing onject classed features to integers:","827c1d39":"**Cleaning data:**\n\nExcluding unnecessary columns.","78ba5194":"**Separeting x and y Features:**","7524aec2":"See how many passengers survived and how many couldn't:","f3227cdc":"Combine our predictions and test data set for the submission csv:","10e093f1":"**MACHINE LEARNING MODEL**","6e300989":"Importing the data sets:","f8a571bb":"**2. Naive Bayes Algorithm:**","dc8278e4":"Exporting dataframe to csv file:","d01cfaeb":"Exporting dataframe to csv file:","adda6693":"Let's see our training data sets statistics:","e3cddecb":"There are NaN values in the d_test Age and Fare columns.\n\nSo I will fill the NaN values with mean values of the Age and Fare columns.","dd42f79c":"Combine our predictions and test data set for the submission csv:","4522a051":"**3. Logistic Regression Algorithm:**","ca9f6352":"**1. Random Forest Algorithm:**","a7023ca3":"**TITANIC COMPETITION FOR MACHINE LEARNING **","88696190":"There are NaN values in d_train.Age column."}}