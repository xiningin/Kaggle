{"cell_type":{"7c052a6d":"code","07deaa06":"code","249d9292":"code","e185a717":"code","3811b56f":"code","4a76fa3e":"code","513223b2":"code","747f5f34":"code","8ca70e3c":"code","bea4cb89":"code","ea308a8c":"markdown","a96b8259":"markdown","2944f707":"markdown","8b3f4885":"markdown"},"source":{"7c052a6d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","07deaa06":"%%capture\n!pip install clustergrammer2==0.18.0\n!pip install observable_jupyter\nfrom clustergrammer2 import net\nfrom observable_jupyter import embed","249d9292":"df_ini = pd.read_csv('..\/input\/Seasons_Stats.csv', index_col=0)\ndf_ini.head()","e185a717":"df = df_ini.groupby('Player').mean().transpose().dropna(how='all')\ndf.shape","3811b56f":"ser_year = df.loc['Year']\nkeep_players = ser_year[ser_year > 1980].index.tolist()","4a76fa3e":"df = df[keep_players]","513223b2":"df_meta = pd.DataFrame()\nfor player in df.columns.tolist():\n    df_player = df_ini[df_ini.Player == player]\n    position = df_player['Pos'].value_counts(ascending=False).index.tolist()[0]\n    team = df_player['Tm'].value_counts(ascending=False).index.tolist()[0]\n    num_seasons = df_player.shape[0]\n    df_meta.loc[player, 'Position'] = position\n    df_meta.loc[player, 'Team'] = team\n    df_meta.loc[player, 'Num Seasons'] = num_seasons","747f5f34":"df_meta['Year'] = df.loc['Year']\ndf_meta['Age'] = df.loc['Age']\ndf = df.drop(['Year', 'Age'])","8ca70e3c":"df_meta.head()","bea4cb89":"net.load_df(df, meta_col=df_meta)\nnet.normalize(axis='row', norm_type='zscore', z_clip=5)\nnet.swap_nan_for_zero()\nnet.cluster()\nembed('@cornhundred\/clustergrammer-gl', cells=['clustergrammer'], inputs={'network': net.viz})","ea308a8c":"## Keep Players from 1980 and Onwards","a96b8259":"# Heatmap of Players vs Statistics","2944f707":"## Player Metadata","8b3f4885":"# Heatmap View of Modern Era Player Stats\n\nSee GIF below for a preview of the interactive Clustergrammer2 Jupyter widget\n\n![](https:\/\/media.giphy.com\/media\/cYHVgkBED0BfS5qpyc\/giphy.gif)\n\n"}}