{"cell_type":{"278ffcd0":"code","be6814b5":"code","c399b939":"code","57c2b2fa":"code","a96e1476":"code","7ef4f56c":"code","f0a32120":"code","e6866e8a":"code","6df5b516":"code","0988dfdb":"code","fb4f0630":"code","f4c67813":"code","5ac250df":"code","c96f6c82":"code","cfd69cd5":"code","4e527822":"code","21cb3358":"markdown","65003485":"markdown","3d19fe45":"markdown","8cc3d74d":"markdown","dc70a9e4":"markdown","69a0cb7c":"markdown","3934eab7":"markdown","ff091e37":"markdown","f73661aa":"markdown","a53753c4":"markdown","e3cf2b55":"markdown","4a9650c1":"markdown","239fb516":"markdown"},"source":{"278ffcd0":"import torch\nimport torchvision\nimport torch.nn as nn\nimport numpy as np\nimport matplotlib.pyplot as plt","be6814b5":"model = torchvision.models.segmentation.fcn_resnet50(pretrained=True)\nmodel.eval()","c399b939":"from PIL import Image\nimg = Image.open('..\/input\/coco128\/coco128\/images\/train2017\/000000000036.jpg')\nplt.imshow(img)","57c2b2fa":"img = img.resize((1024,1024))\nplt.imshow(img)\nimg.size","a96e1476":"from torchvision import transforms\npreprocess = transforms.Compose([\n    transforms.ToTensor(),\n    #transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),\n])\nimg = preprocess(img)\nimg = img.unsqueeze(0)\nimg.shape","7ef4f56c":"plt.imshow(img[0].permute(1,2,0))","f0a32120":"with torch.no_grad():\n    output = model(img)['out'][0]\noutput_predictions = output.argmax(0)\noutput.shape","e6866e8a":"palette = torch.tensor([2 ** 25 - 1, 2 ** 15 - 1, 2 ** 21 - 1])\ncolors = torch.as_tensor([i for i in range(21)])[:, None] * palette\ncolors = (colors % 255).numpy().astype(\"uint8\")\n\n# plot the semantic segmentation predictions of 21 classes in each color\nr = Image.fromarray(output_predictions.byte().cpu().numpy()).resize((1024,1024))\nr.putpalette(colors)\n\nimport matplotlib.pyplot as plt\nplt.imshow(r)\npalette","6df5b516":"for param in model.parameters():\n    param.requires_grad = False","0988dfdb":"print('Classifier Section of Model \\n',model.classifier)","fb4f0630":"print('Last layer of section is \\n',model.classifier[4])","f4c67813":"num_classes = 8 #num classes of my dataset","5ac250df":"filters_of_last_layer = model.classifier[4].in_channels\nfilters_of_last_layer_aux = model.aux_classifier[4].in_channels\nmodel.classifier[4] = nn.Conv2d(filters_of_last_layer,num_classes,kernel_size=(1,1),stride=(1,1))\nmodel.aux_classifier[4] = nn.Conv2d(filters_of_last_layer_aux,num_classes, kernel_size=(1,1),stride=(1,1))","c96f6c82":"print(model)","cfd69cd5":"x = torch.randn(1, 3, 1024, 1024) #Example input data\ny = model(x)\ny","4e527822":"y['out'].shape","21cb3358":"## In this section, we give image into model and take output. We also take the maxiumum arguments inside every probability to have information about class. As you see, we have 21 classes in binary map.","65003485":"### **Let's read an image and show it!**","3d19fe45":"## Resize image to 1024,1024 --> H,W","8cc3d74d":"## **Prepare & download pretrained model from torchvision. FCN segmentation model with resnet backbone chosed for this notebook**","dc70a9e4":"# **Import Depended Libraries**","69a0cb7c":"## The provided model uses 21 classes, have 21 outputs. If we want to retrain & finetune the trained model, we have to change output layers for out purpose. My dataset has 8 classes. ## So I am going to change output from 21 to 8","3934eab7":"## To change last layers, we also have to know input of the last layer. So, we take this from provided model.","ff091e37":"## The readed image is in format of PIL Jpeg Image we have to convert it to torch Tensor.\n## After, we convert tensor to 4D. The provided model takes input as (Batch, C,H,W)","f73661aa":"## We have to convert 21 class binary map to 3 channel rgb to visualize the output. So that we provide a colour palette. And colour palette declared for every class in binary map.","a53753c4":"## Now our model is finetuned for my dataset. As you see, \"classifier\" and \"aux_classifier\" layers now have 8 classes output","e3cf2b55":"## Lets visualize the image to see for any corruption","4a9650c1":"## Now, you can see that the model is give output for 8 classes. Now it is ready to Train my dataset :)","239fb516":"## Let's create a random data with (1,3,1024,1024) shape(B,C,H,W). After, we fit this example data into fintuned model."}}