{"cell_type":{"8d10f567":"code","1e463b76":"code","1a37d267":"code","a195164e":"code","9158441a":"code","27ebb4ae":"code","e3bf86b7":"code","4e6dba24":"code","1ecff96b":"code","9526e030":"code","7d5d8ac4":"code","ca8e6a5f":"code","1cc8eb02":"code","273d4d44":"code","3c2a2dcd":"code","86487796":"code","46420af6":"code","77506e25":"code","40d6db34":"code","8bfe1647":"code","87f49b7b":"code","10d4d42a":"code","33c7ef20":"code","bf820506":"code","9d3e8ba7":"code","5c5a1921":"code","957c1e1f":"code","8da658d8":"code","cced0e00":"code","f44866fe":"code","1511babc":"code","32b4b598":"code","3797c652":"code","2f373389":"code","fd0dad79":"code","d72a5d05":"code","2eb0872e":"code","1bddb4f6":"code","93b777b2":"code","4549da0c":"code","58479390":"code","1abc4a48":"code","df215154":"code","c1186d7e":"code","c5f266c9":"code","7c945faa":"code","417c6324":"code","c9bf2562":"code","319b0111":"code","b5f405ba":"code","b37ed5fc":"code","cc0990b4":"code","3a26a326":"code","2a0bbab8":"code","e8a693de":"code","9a776c1c":"code","b25eee16":"code","0c19e83b":"code","b89a7c30":"code","50c4671e":"code","24a90b55":"code","826837e7":"code","b8a49684":"code","d3fba459":"code","1a4c40f3":"code","51a566c3":"code","79f662dd":"code","2ea7c431":"code","3dbe2526":"code","1c08f309":"code","b147c95e":"code","2e2ca66a":"code","eefb43ea":"code","8df86a6f":"code","032bd5fc":"code","036be014":"code","91b609b1":"code","6c204a33":"code","6e4e4b38":"code","c18842b5":"code","8dc45d35":"code","7b0ca4b1":"code","7577d121":"code","1081b953":"code","b566403d":"code","3cebc9c0":"code","0404da3c":"code","7c7df15a":"code","d5e46677":"code","e82df3a0":"code","3aebc4b8":"code","92d2f947":"code","816a2faf":"code","006b1b1d":"code","e552e682":"code","823a4b2e":"code","dc997780":"code","74ead140":"code","89ff8c82":"code","e0c19985":"code","28695148":"code","9bae4837":"code","ba4a6015":"code","ad171197":"code","305fcb18":"markdown","b8bd62a3":"markdown","ee958fd4":"markdown","e5dbc6a0":"markdown","2d2696ca":"markdown","a2e37217":"markdown","cb7ce07a":"markdown","b804d516":"markdown","688157bf":"markdown","7f5ecd6d":"markdown","2a020876":"markdown","2e8fdc3e":"markdown","e439b257":"markdown","444ce9b9":"markdown","d980f6fc":"markdown","36c93092":"markdown","208aaddd":"markdown","861c8843":"markdown","348fa35f":"markdown","d07bcc98":"markdown","de23b6d6":"markdown","9cfbe7d8":"markdown","0d9d80fe":"markdown","d63e6714":"markdown","7871f5c6":"markdown","0a04da7c":"markdown"},"source":{"8d10f567":"import numpy as np\nimport seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning)\n\n# from google.colab import drive\n# drive.mount('\/content\/drive')","1e463b76":"# df=pd.read_csv(\"\/content\/drive\/My Drive\/Supervised_Categorical\/Practice\/EarlyStageDiab\/diabetes_data_upload.csv\")\ndf=pd.read_csv(\"..\/input\/early-stage-diabetes-risk-prediction-datasets\/diabetes_data_upload.csv\")","1a37d267":"df","a195164e":"sns.countplot(df['class'])","9158441a":"df['class'].value_counts()","27ebb4ae":"pd.crosstab(df['class'],df['Age'])","e3bf86b7":"neg=df[df['class']=='Negative']\npos=df[df['class']=='Positive']","4e6dba24":"plt.figure(figsize=(20,5))\nneg['Age'].plot(kind='kde')\npos['Age'].plot(kind='kde',color='red')\nplt.xticks(np.arange(15,94,2))","1ecff96b":"plt.figure(figsize=(20,5))\nsns.countplot(df['Age'],hue=df['class'],order=pos['Age'].value_counts().sort_values(ascending=False).index)","9526e030":"df['Gender'].value_counts()","7d5d8ac4":"pd.crosstab(df['class'],df['Gender'])","ca8e6a5f":"# Total females=192 out of which 173 are diabetic.\n\n# In Above dataset 90% of feamles have diabetes","1cc8eb02":"df['Polyuria'].value_counts()","273d4d44":"pd.crosstab(df['class'],df['Polyuria'])","3c2a2dcd":"pd.crosstab(df['class'],df['Polyuria'])\/df['Polyuria'].value_counts()*100","86487796":"sns.countplot(df['Polyuria'],hue=df['class'])","46420af6":"df['Polydipsia'].value_counts()","77506e25":"pd.crosstab(df['class'],df['Polydipsia'])","40d6db34":"pd.crosstab(df['class'],df['Polydipsia'])\/df['Polydipsia'].value_counts()*100","8bfe1647":"sns.countplot(df['Polydipsia'],hue=df['class'])","87f49b7b":"df['sudden weight loss'].value_counts()","10d4d42a":"pd.crosstab(df['class'],df['sudden weight loss'])","33c7ef20":"pd.crosstab(df['class'],df['sudden weight loss'])\/df['sudden weight loss'].value_counts()*100","bf820506":"sns.countplot(df['sudden weight loss'],hue=df['class'])","9d3e8ba7":"# People who have sudden weight loss and are diabetic is 86%.\n\n# People who dont have sudden weight loss are are diabetic is 56% and People who dont have sudden weight loss are not diabetic is 43%,which we can say is almost 50-50% in both case.\n\n# People who have sudden weight loss have a higher tendency to be diabetic","5c5a1921":"pd.crosstab(df['class'],df['weakness'])\/df['weakness'].value_counts()*100","957c1e1f":"sns.countplot(df['weakness'],hue=df['class'])","8da658d8":"# 71% of patient who have weakness are diabetic.\n\n#patient who have weakness have higher tendency to be diabetic","cced0e00":"pd.crosstab(df['class'],df['Polyphagia'])\/df['Polyphagia'].value_counts()*100","f44866fe":"sns.countplot(df['Polyphagia'],hue=df['class'])","1511babc":"# 79% of patient who have Polyphagia are diabetic.\n\n#patient who have Polyphagia have higher tendency to be diabetic","32b4b598":"pd.crosstab(df['class'],df['Genital thrush'])\/df['Genital thrush'].value_counts()*100","3797c652":"df['Genital thrush'].value_counts()","2f373389":"sns.countplot(df['Genital thrush'],hue=df['class'])","fd0dad79":"# patient  who have Gential thrush have high tendency of diabetics.\n\n# People who dnt have Gential thrush have 50% tendency of being Diabetic.","d72a5d05":"pd.crosstab(df['class'],df['visual blurring'])\/df['visual blurring'].value_counts()*100","2eb0872e":"sns.countplot(df['visual blurring'],hue=df['class'])","1bddb4f6":"# People who dnt have visual blurring have have 50% chance of being diabetic.\n\n\n# 75% of people have visual blurring  and are diabetic.\n\n# People who have visual blurring have higher tendency of being diabetic.","93b777b2":"pd.crosstab(df['class'],df['Itching'])\/df['Itching'].value_counts()*100","4549da0c":"sns.countplot(df['Itching'],hue=df['class'])","58479390":"# we can see 62% of people who dont have itching are diabetic whereas 60% of people who have itching are diabetic.\n\n# Have 'itching' feature is not providing significant insights.","1abc4a48":"pd.crosstab(df['class'],df['Irritability'])\/df['Irritability'].value_counts()*100","df215154":"df['Irritability'].value_counts()","c1186d7e":"sns.countplot(df['Irritability'],hue=df['class'])","c5f266c9":"# 87% of people having irritability issue have diabetics.\n\n# WE have 394 who dont have irritability issue out of which 53% are diabetic whereas as 43% are not diabetic.\n\n","7c945faa":"pd.crosstab(df['class'],df['delayed healing'])\/df['delayed healing'].value_counts()*100","417c6324":"df['delayed healing'].value_counts()","c9bf2562":"sns.countplot(df['delayed healing'],hue=df['class'])","319b0111":"# # Have 'delayed healing' feature is not providing significant insights.","b5f405ba":"df['partial paresis'].value_counts()","b37ed5fc":"pd.crosstab(df['class'],df['partial paresis'])\/df['partial paresis'].value_counts()*100","cc0990b4":"sns.countplot(df['partial paresis'],hue=df['class'])","3a26a326":"#85% of people are having diabetes and are partial paresis\n","2a0bbab8":"df['muscle stiffness'].value_counts()","e8a693de":"pd.crosstab(df['class'],df['muscle stiffness'])\/df['muscle stiffness'].value_counts()*100","9a776c1c":"sns.countplot(df['muscle stiffness'],hue=df['class'])","b25eee16":"#  Have 'muscle stiffness' feature is not providing significant insights.","0c19e83b":"df['Alopecia'].value_counts()","b89a7c30":"pd.crosstab(df['class'],df['Alopecia'])\/df['Alopecia'].value_counts()*100","50c4671e":"sns.countplot(df['Alopecia'],hue=df['class'])","24a90b55":"#  'Alopecia' feature is not providing significant insights.","826837e7":"df['Obesity'].value_counts()","b8a49684":"pd.crosstab(df['class'],df['Obesity'])\/df['Obesity'].value_counts()*100","d3fba459":"sns.countplot(df['Obesity'],hue=df['class'])","1a4c40f3":"# 'Obesity' feature is not providing significant insights.","51a566c3":"cat=['Gender', 'Polyuria', 'Polydipsia', 'sudden weight loss',\n       'weakness', 'Polyphagia', 'Genital thrush', 'visual blurring',\n       'Itching', 'Irritability', 'delayed healing', 'partial paresis',\n       'muscle stiffness', 'Alopecia', 'Obesity']","79f662dd":"df['Gender'].value_counts()","2ea7c431":"pd.crosstab(df['Polyuria'],df['Gender'])\/df['Gender'].value_counts()*100","3dbe2526":"pd.crosstab(df['Polydipsia'],df['Gender'])\/df['Gender'].value_counts()*100","1c08f309":"pd.crosstab(df['Polyphagia'],df['Gender'])\/df['Gender'].value_counts()*100","b147c95e":"pd.crosstab(df['visual blurring'],df['Gender'])\/df['Gender'].value_counts()*100","2e2ca66a":"pd.crosstab(df['partial paresis'],df['Gender'])\/df['Gender'].value_counts()*100","eefb43ea":"pd.crosstab(df['Alopecia'],df['Gender'])\/df['Gender'].value_counts()*100","8df86a6f":"pd.crosstab(df['Obesity'],df['Gender'])\/df['Gender'].value_counts()*100","032bd5fc":"# Percentage of female having polydipsia, polyuria,sudden weight loss,Polyphagia,visual blurring,partial paresis\n# is very high as compared to male\n\n\n# Percentage of Alopecia is more in male","036be014":"pd.crosstab(df['Polyuria'],df['Polydipsia'])\/df['Polyuria'].value_counts()*100","91b609b1":"# 84% of people dnt have Polydipsia and Polyuria whereas 74% of people have Polydipsia and Polyuria.\n\n# There is a high tendency that a peroson who doent have Polyuria will not have Polydipsia","6c204a33":"pd.crosstab(df['Polyuria'],df['weakness'])\/df['Polyuria'].value_counts()*100","6e4e4b38":"# 71% of people have polyuria and have weakness.\n\n# There is a high tendency that people who have polyuria will have weakness\n","c18842b5":"pd.crosstab(df['Polyuria'],df['Polyphagia'])\/df['Polyuria'].value_counts()*100","8dc45d35":"# There are 72% of people who dont have Polyuria and Polyphagia. \n# There is a high tendency that a person doesnt have Polyuria will not have polyphagia","7b0ca4b1":"pd.crosstab(df['Polyuria'],df['partial paresis'])\/df['Polyuria'].value_counts()*100","7577d121":"# There are 78% of people who dont have Polyuria and partial paresis. \n# There is a high tendency that a person doesnt have Polyuria will not have partial paresis","1081b953":"pd.crosstab(df['Polydipsia'],df['partial paresis'])\/df['Polydipsia'].value_counts()*100","b566403d":"#People who dont have Polydipsia have high tendency that they dont have partial paresis","3cebc9c0":"pd.crosstab(df['sudden weight loss'],df['weakness'])\/df['sudden weight loss'].value_counts()*100","0404da3c":"#sudden weight loss can cause weakness-75% have people have sudden weight loss and weakness","7c7df15a":"pd.crosstab(df['Polyphagia'],df['partial paresis'])\/df['Polyphagia'].value_counts()*100","d5e46677":"# 73% of people are dont have Polyphagia and partial paresis","e82df3a0":"for i in cat:\n    df[i]=df[i].replace({'No':0,'Yes':1})\ndf['class']=df['class'].replace({'Negative':0,'Positive':1})\ndf['Gender']=df['Gender'].replace({'Male':0,'Female':1})","3aebc4b8":"plt.figure(figsize=(20,10)) \nsns.heatmap(df.corr(),annot=True)","92d2f947":"from sklearn.preprocessing import MinMaxScaler\nX=df.drop('class',axis=1)\ny=df['class']\nminmax=MinMaxScaler()\ndf1=minmax.fit_transform(X)\ndfscaled=pd.DataFrame(df1,columns=X.columns)\ndfscaled.head()","816a2faf":"import statsmodels.api as sm\nX_constant=sm.add_constant(dfscaled)\nmodel_base=sm.Logit(y,X_constant,random_state=3).fit()\nmodel_base.summary()","006b1b1d":"from sklearn.linear_model import LogisticRegression\nfrom sklearn import model_selection\nfrom sklearn.model_selection import cross_val_score\nlr=LogisticRegression()\nkfold = model_selection.KFold(n_splits = 3,random_state = 3,shuffle = True)\ncv_results = cross_val_score(lr,dfscaled,y,cv = kfold,scoring='roc_auc')\nprint(\"Logistic Regression base model\",' : ',np.mean(cv_results),' -- ',np.var(cv_results,ddof = 1))","e552e682":"cols=list(dfscaled.columns)\nwhile(len(cols)>0):\n    X_1=dfscaled[cols]\n    X_constant=sm.add_constant(X_1)\n    model=sm.Logit(y,X_constant,random_state=3).fit()\n    p = pd.Series(model.pvalues.values[1:],index = cols)      \n    pmax = max(p)\n    feature_with_p_max = p.idxmax()\n    if(pmax>0.05):\n        cols.remove(feature_with_p_max)\n    else:\n        break\ncols","823a4b2e":"X_final=dfscaled[cols]\nX_constant=sm.add_constant(X_final)\nmodel_base=sm.Logit(y,X_constant,random_state=3).fit()\nmodel_base.summary()","dc997780":"lr=LogisticRegression()\nkfold = model_selection.KFold(n_splits = 3,random_state = 3,shuffle = True)\ncv_results = cross_val_score(lr,X_final,y,cv = kfold,scoring='roc_auc')\nprint(\"Logistic Regression base model\",' : ',np.mean(cv_results),' -- ',np.var(cv_results,ddof = 1))","74ead140":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.ensemble import RandomForestClassifier,BaggingClassifier,AdaBoostClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\n","89ff8c82":"DT=DecisionTreeClassifier()\nparams={'criterion':['entropy','gini'],\n    'max_depth':np.arange(5,250),\n       'min_samples_leaf':np.arange(5,150),\n       'min_samples_split':np.arange(5,150)\n       }\ngsearch=RandomizedSearchCV(DT,param_distributions=params,cv=3,scoring='roc_auc',random_state=3)\ngsearch.fit(X_final,y)\ngsearch.best_params_","e0c19985":"LR=LogisticRegression()\nDT=DecisionTreeClassifier(**gsearch.best_params_,random_state=3)\nmodels = []\nmodels.append(('Logistic Regression',LR))\nmodels.append(('Decision Tree',DT))\n\nfrom sklearn.ensemble import BaggingClassifier\nfor name,model in models: \n    auc_var = []\n    for val in np.arange(1,150):\n        model_bag = BaggingClassifier(base_estimator = model,n_estimators = val,random_state = 3,n_jobs=-1)\n        kfold = model_selection.KFold(n_splits = 3,random_state = 0,shuffle = True)\n        results = cross_val_score(model_bag,X_final,y,cv = kfold,scoring='roc_auc')\n        auc_var.append(np.var(results,ddof = 1))\n    print(name,np.argmin(auc_var)+1)","28695148":"LR=LogisticRegression()\nFGDT=DecisionTreeClassifier()\nDT=DecisionTreeClassifier(**gsearch.best_params_,random_state=3)\nbag_LR=BaggingClassifier(base_estimator = LR,n_estimators = 7,random_state = 3)\nbag_DT=BaggingClassifier(base_estimator = DT,n_estimators = 21,random_state = 3)","9bae4837":"models = []\nmodels.append(('Logistic Regression ',LR))\nmodels.append(('Fully grown Decision Tree',FGDT))\nmodels.append(('Decision Tree',DT))\nmodels.append(('Bag Decision Tree',bag_DT))\nmodels.append(('Bag LR',bag_LR))\n\n","ba4a6015":"results = []\nnames = []\nmeans=[]\nvariance=[]\nfor name, model in models:\n    kfold = model_selection.KFold(n_splits = 5,random_state = 3,shuffle = True)\n    cv_results = cross_val_score(model,X_final,y,cv = kfold,scoring='roc_auc')\n    results.append(cv_results)\n    names.append(name)\n    means.append(np.mean(cv_results))\n  #bias.append(100-(np.mean(cv_results)))\n\n    variance.append(np.var(cv_results,ddof = 1))\n    print(name,' : ',np.mean(cv_results),' -- ',np.var(cv_results,ddof = 1))\n\ndfresults=pd.DataFrame({\"Names\":names,\"Roc Auc\":means,\"Variance\":variance})\nfig = plt.figure(figsize=(10,6))\nfig.suptitle('Algorithm Comparison')\nax = fig.add_subplot(111)\nplt.boxplot(results)\nax.set_xticklabels(names)\nplt.show()","ad171197":"dfresults","305fcb18":"# Alopecia","b8bd62a3":"# partial paresis","ee958fd4":"# weakness","e5dbc6a0":"# Genital Thrush","2d2696ca":"# Polyuria","a2e37217":"# Polydipsia","cb7ce07a":"# Polyphagia","b804d516":"# Age","688157bf":"# sudden weight loss and other independent variables","7f5ecd6d":"DataSet has more of positive cases for age group 48,35,55.\n\nAge group 48 has only positive cases","2a020876":"# Class","2e8fdc3e":"# Gender","e439b257":"# visual blurring","444ce9b9":"There are 243 people out of 258 who have polyuria and are diabetic out of 258 people who have polyuria.\n(94% of people who have polyuria and are diabetic)\n\n\nWe can infer from above graph that a person who has polyuria has higher tendency to be diabetic","d980f6fc":"\n# Polydipsia and other independent variables","36c93092":"# muscle stiffness","208aaddd":"# Polyuria and other independent variables","861c8843":"# Itching","348fa35f":"# sudden weight loss","d07bcc98":"Logistic Regression is giving good roc auc score as well as low variance","de23b6d6":"# Irritability","9cfbe7d8":"# Polyphagia","0d9d80fe":"# Obesity","d63e6714":"# Gender and other independent variables","7871f5c6":"96% of patient who have Polydipsia and are diabetic,there are only 3% of patient who have Polydipsia and are not diabetic.\n\nPeople who have Polydipsia have a higher tendency of being diabetic","0a04da7c":"# delayed healing"}}