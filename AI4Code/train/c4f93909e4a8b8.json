{"cell_type":{"fa47b6cd":"code","5fe14b56":"code","4d3cc1d3":"code","c885038f":"code","0a461201":"code","b5c54068":"code","e0d68463":"code","ce884489":"code","4d3dd5ea":"code","664a37a1":"code","e59c1be5":"code","6c904999":"code","002a7229":"code","b9265a85":"code","d5051ca1":"code","aa0b1574":"code","a8baee97":"code","3fb5c96a":"code","ead6e31f":"code","213fff7b":"code","e4351caa":"code","c8708cfd":"code","2a1f0bef":"code","b1f51ab8":"code","8d4f8acc":"code","075ff9d9":"code","6d72defe":"code","feefa669":"code","63006fc0":"code","4645d17c":"code","1883d20e":"code","dec2e633":"code","f4f48c4e":"code","231218cf":"code","1adf5bd2":"code","6b45b0cc":"code","53b3f69f":"code","2cf5579a":"code","c9795bc8":"code","9dac113c":"code","ee63978f":"code","3c4d6814":"code","dba2f0c2":"code","e7327e2e":"code","1be9d9c2":"code","41a02e93":"code","197fbab6":"code","028d5a21":"code","dda1f937":"code","16f5647c":"code","85ed431c":"code","d5f3f4c2":"code","006a2a8c":"code","f17161ff":"code","9e3c6f3b":"code","7e8712e7":"code","b5456271":"code","8c3c4e9a":"code","046c06b4":"code","d7313dc4":"code","911fb82c":"code","418105eb":"code","94d2cb1a":"code","64b09be0":"code","3f6ce045":"code","fac28e5c":"code","94027d3e":"code","0f3930f4":"code","20abcbc4":"code","74e39f2e":"code","1815cfb0":"code","b307cd5f":"code","63ce8e70":"code","94ee9084":"code","957ba321":"code","ee840b30":"code","613ccc56":"code","972c4668":"code","17e9043f":"code","2d40a607":"code","faddbba9":"code","ce479781":"code","d7989ef0":"code","a27d4264":"code","2a6e9e15":"code","cee951f4":"code","af4dadd0":"code","c55579f2":"code","a23bf261":"code","bdf57ca6":"markdown","1d58303c":"markdown","1587cf94":"markdown","cebaf6d0":"markdown","94828929":"markdown","a8ced944":"markdown","740f2f5f":"markdown","699318a3":"markdown","f3a78416":"markdown","e27fb1a2":"markdown","9197fa00":"markdown","7164f0cb":"markdown","b90a5d4f":"markdown","5912a8f1":"markdown","89b5affe":"markdown","7f2d8c44":"markdown","a93acf51":"markdown","c4cd9048":"markdown","a90738b0":"markdown","926a302d":"markdown"},"source":{"fa47b6cd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5fe14b56":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.decomposition import PCA\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import LogisticRegression\n\nsns.set()","4d3cc1d3":"purch=pd.read_csv('..\/input\/purchase\/purchase data.csv')\npurch.sample(6)","c885038f":"purch.info()","0a461201":"purch.columns","b5c54068":"purch1=purch[['ID','Incidence', 'Brand', 'Quantity','Sex', 'Marital status', 'Age', 'Education', 'Income',\n       'Occupation', 'Settlement size']]\npurch1.set_index(\"ID\", inplace=True)\npurch1","e0d68463":"purch1.corr().round(2)","ce884489":"plt.figure(figsize=(10,10))\nsns.heatmap(purch1.corr().round(2),vmin=-1,vmax=1,annot=True)\nplt.title(\"Correlation Map\",fontsize=20)\nplt.show()","4d3dd5ea":"stand=StandardScaler()\nstand=stand.fit_transform(purch1)\nstand","664a37a1":"pca=PCA()\npca.fit(stand) \npca.explained_variance_ratio_.cumsum()","e59c1be5":"plt.figure(figsize=(10,5))\nplt.plot(range(1,11),pca.explained_variance_ratio_.cumsum(),marker='o')\nplt.show()","6c904999":"pca=PCA(n_components=4)\npca.fit(stand) \npca.components_","002a7229":"pca_comp=pd.DataFrame(pca.components_,columns=['Incidence', 'Brand', 'Quantity', 'Sex', 'Marital status', 'Age', 'Education', 'Income',\n       'Occupation', 'Settlement size'],index=['comp 1','comp 2','comp 3','comp 4'])\npca_comp.round(2)","b9265a85":"plt.figure(figsize=(10,5))\nsns.heatmap(pca_comp.round(2),vmin=-1,vmax=1, cmap='RdBu',annot=True)\nplt.title(\"Component Map\",fontsize=20)","d5051ca1":"pca_tr=pca.transform(stand)","aa0b1574":"wcss=[]\nfor i in range(1,11):\n    kmeans_pca=KMeans(n_clusters=i,random_state=40)\n    kmeans_pca.fit(pca_tr)\n    wcss.append(kmeans_pca.inertia_)","a8baee97":"plt.figure(figsize=(15,5))\nplt.plot(range(1,11),wcss,marker='o')\nplt.show()","3fb5c96a":"kmeans_pca=KMeans(n_clusters=4,random_state=40)\nkmeans_pca.fit(pca_tr)\nkmeans_pca.labels_","ead6e31f":"purch['segment']=kmeans_pca.labels_\npurch.reset_index(inplace=True)\npurch","213fff7b":"purch[['ID',\"segment\"]].groupby('ID').mean().round()","e4351caa":"purch_analy=purch[['ID','Incidence']].groupby('ID').count().rename(columns={\"Incidence\":\"Number of visit\"})\npurch_incidence=purch[purch[\"Incidence\"]==1].groupby(\"ID\").sum()\npurch_analy[\"Number of Purchase\"]=purch_incidence[\"Incidence\"]\npurch_analy[\"Average Purchase\"]=(purch_analy[\"Number of Purchase\"]\/purch_analy[\"Number of visit\"]).round(3)\npurch_analy.head().sort_values(['Number of visit','Number of Purchase','Average Purchase'])\npurch_seg=purch[['ID',\"segment\"]].groupby('ID').mean().round()\npurch_analy['segment']=purch_seg['segment']\npurch_analy","c8708cfd":"purch_seg_analysis=purch[['Incidence','segment']].groupby('segment').count()\npurch_seg_analysis['segmentation proportions']=(purch[['Incidence','segment']].groupby('segment').count()\/len(purch)).round(3)\npurch_seg_analysis.rename(index=({0:'Fewer-Oppurtunitie',\n                          1:'Well-Off',\n                          2:'Career-Focused',\n                          3:'Standard'}),inplace=True)\npurch_seg_analysis","2a1f0bef":"purch_seg_analysis['segmentation proportions']","b1f51ab8":"plt.figure(figsize=(5,5))\nplt.pie(purch_seg_analysis['segmentation proportions'],autopct=\"%1.1f%%\",labels=['Fewer-Oppurtunitie','Well-Off','Career-Focused','Standard'])","8d4f8acc":"purch_seg=purch[purch['Incidence']==1]\npurch_seg=purch[['segment','Incidence']].groupby('segment').sum().rename(columns=({'Incidence':'Number of purchase'}))\npurch_seg['Number of visits']=purch[['segment','Incidence']].groupby('segment').count()\npurch_seg['Average purchase']=(purch_seg['Number of purchase']\/purch_seg['Number of visits']).round(3)\npurch_seg","075ff9d9":"purch_seg=purch[purch['Incidence']==1]\npurch_seg=purch[['segment','Incidence']].groupby('segment').sum().rename(columns=({'Incidence':'Number of purchase'}))\npurch_seg['Number of visits']=purch[['segment','Incidence']].groupby('segment').count()\npurch_seg","6d72defe":"purch_analy_mean=purch_analy.groupby('segment').mean()\npurch_analy_mean.rename(index=({0:'Fewer-Oppurtunitie',\n                          1:'Well-Off',\n                          3:'Career-Focused',\n                          2:'Standard'}),inplace=True)\npurch_analy_mean","feefa669":"purch_analy_std=purch_analy.groupby('segment').std()\npurch_analy_std.rename(index=({0:'Fewer-Oppurtunitie',\n                          1:'Well-Off',\n                          3:'Career-Focused',\n                          2:'Standard'}),inplace=True)\npurch_analy_std","63006fc0":"plt.bar(x=purch_analy_mean.index,\n           height=purch_analy_mean['Number of visit'],\n           yerr=purch_analy_std['Number of visit'],\n        color=('b','g','r','orange')\n       )\nplt.xlabel('segment')\nplt.ylabel('Number of store visit')\nplt.title('Average Number of store visits by segment')","4645d17c":"plt.bar(x=purch_analy_mean.index,\n           height=purch_analy_mean['Number of Purchase'],\n           yerr=purch_analy_std['Number of Purchase'],\n        color=('b','g','r','orange')\n       )\nplt.xlabel('segment')\nplt.ylabel('Number of store purchase')\nplt.title('Average Number of store purchase by segment')","1883d20e":"purch_incid=purch[purch['Incidence']==1]\nbrand=pd.DataFrame(pd.get_dummies(purch_incid['Brand'],prefix='Brand',prefix_sep='_'))\nbrand['segment']=purch_incid['segment']\nbrand['ID']=purch_incid['ID']\nbrand","dec2e633":"brand.groupby(\"ID\").mean().round()\n","f4f48c4e":"brand_mean=brand.groupby(\"segment\").mean().round(2)\nbrand_mean=brand_mean[['Brand_1', 'Brand_2', 'Brand_3', 'Brand_4', 'Brand_5']]\nbrand_mean","231218cf":"sns.heatmap(brand_mean,annot=True)\nplt.yticks([0,1,2,3],['Standard','Career-Focused','Fewer-Oppurtunitie','Well-Off'],rotation=45,fontsize=9)\nplt.title(\"Average Brand choice by segment\")\nplt.show()","1adf5bd2":"purch_incid","6b45b0cc":"purch_incid=purch[purch['Incidence']==1]\nbrand_revenue=pd.DataFrame(purch_incid['Price_1']*purch_incid['Quantity'],columns=['revenue brand 1'])\nbrand_revenue['revenue brand 2']=purch_incid['Price_2']*purch_incid['Quantity']\nbrand_revenue['revenue brand 3']=purch_incid['Price_3']*purch_incid['Quantity']\nbrand_revenue['revenue brand 4']=purch_incid['Price_4']*purch_incid['Quantity']\nbrand_revenue['revenue brand 5']=purch_incid['Price_5']*purch_incid['Quantity']\nbrand_revenue['segment']=purch_incid['segment']\nbrand_revenue=brand_revenue.groupby('segment').sum()\nbrand_revenue['Total Revenue']=brand_revenue['revenue brand 1']+brand_revenue['revenue brand 2']+brand_revenue['revenue brand 3']+brand_revenue['revenue brand 4']+brand_revenue['revenue brand 5']\nbrand_revenue","53b3f69f":"purch=pd.read_csv('..\/input\/purchase-segmentation\/purchase_segmentation.csv',index_col=[0])\npurch","2cf5579a":"y=purch['Incidence']","c9795bc8":"x=pd.DataFrame()\nx['mean price']=(purch['Price_1']+purch['Price_2']+purch['Price_3']+purch['Price_4']+purch['Price_5'])\/5\n","9dac113c":"model=LogisticRegression(solver='sag')\nmodel.fit(x,y)\nmodel.coef_","ee63978f":"purch[['Price_1','Price_2',\"Price_3\",\"Price_4\",\"Price_5\"]].describe()","3c4d6814":"price_range=np.arange(0.5,3.5,0.01)\nprint(price_range)\nprint('lenght:',len(price_range))","dba2f0c2":"df_price_range=pd.DataFrame(price_range,columns=['Price Range'])\ndf_price_range","e7327e2e":"purch_prob=model.predict_proba(df_price_range)","1be9d9c2":"purchase_elasticity=model.coef_[:,0]*price_range*(1-purch_prob[:,1])","41a02e93":"pd.options.display.max_rows=50","197fbab6":"price_elasticity=df_price_range.copy()\nprice_elasticity[\"Mean PE\"]=purchase_elasticity \nprice_elasticity","028d5a21":"plt.figure(figsize=(9,6))\nplt.plot(price_range,purchase_elasticity,'orange')","dda1f937":"purch","16f5647c":"pur_seg=purch[['Incidence','Sex', 'Marital status', 'Age',\n       'Education', 'Income', 'Occupation', 'Settlement size', 'segment']].groupby('segment').mean().round(3)\npur_seg","85ed431c":"pur_seg.rename({0:'Few opportunities',1:\"standard\",2:'Well off',3:'career Focused'},inplace=True)\npur_seg","d5f3f4c2":"purch['Label']=purch['segment'].map({0:'Few opportunities',1:\"standard\",2:'Well off',3:'career Focused'})\npurch","006a2a8c":"purch_few=purch[purch['segment']==0]\npurch_few","f17161ff":"y=purch_few['Incidence']\nx=pd.DataFrame()\nx['mean_price']=(purch_few['Price_1']+purch_few['Price_2']+purch_few['Price_3']+purch_few['Price_4']+purch_few['Price_5'])\/5\nmodel=LogisticRegression(solver=\"sag\")\nmodel.fit(x,y)\nmodel.coef_","9e3c6f3b":"purchase_prob=model.predict_proba(df_price_range)\npurchase_elasticity=model.coef_[:,0]*price_range*(1-purchase_prob[:,1])\nprice_elasticity['PE Few Oppur']=purchase_elasticity\nprice_elasticity","7e8712e7":"plt.figure(figsize=(9,6))\nplt.plot(price_elasticity['Price Range'],price_elasticity['Mean PE'],'orange')\nplt.plot(price_elasticity['Price Range'],price_elasticity['PE Few Oppur'],'y')","b5456271":"purch_standard=purch[purch['segment']==1]\ny=purch_standard['Incidence']\nx=pd.DataFrame()\nx['mean_price']=(purch_standard['Price_1']+purch_standard['Price_2']+purch_standard['Price_3']+purch_standard['Price_4']+purch_standard['Price_5'])\/5\nmodel1=LogisticRegression(solver=\"sag\")\nmodel1.fit(x,y)\nmodel1.coef_\npurchase_prob=model1.predict_proba(df_price_range)\npurchase_elasticity=model1.coef_[:,0]*price_range*(1-purchase_prob[:,1])\nprice_elasticity['PE Standard']=purchase_elasticity\nprice_elasticity","8c3c4e9a":"plt.figure(figsize=(9,6))\nplt.plot(price_elasticity['Price Range'],price_elasticity['Mean PE'],'orange')\nplt.plot(price_elasticity['Price Range'],price_elasticity['PE Few Oppur'],'y')\nplt.plot(price_elasticity['Price Range'],price_elasticity['PE Standard'],'r')","046c06b4":"purch_well=purch[purch['segment']==2]\ny=purch_well['Incidence']\nx=pd.DataFrame()\nx['mean_price']=(purch_well['Price_1']+purch_well['Price_2']+purch_well['Price_3']+purch_well['Price_4']+purch_well['Price_5'])\/5\nmodel1=LogisticRegression(solver=\"sag\")\nmodel1.fit(x,y)\nmodel1.coef_\npurchase_prob=model1.predict_proba(df_price_range)\npurchase_elasticity=model1.coef_[:,0]*price_range*(1-purchase_prob[:,1])\nprice_elasticity['PE well']=purchase_elasticity\nprice_elasticity","d7313dc4":"plt.figure(figsize=(9,6))\nplt.plot(price_elasticity['Price Range'],price_elasticity['Mean PE'],'orange')\nplt.plot(price_elasticity['Price Range'],price_elasticity['PE Few Oppur'],'y')\nplt.plot(price_elasticity['Price Range'],price_elasticity['PE Standard'],'r')\nplt.plot(price_elasticity['Price Range'],price_elasticity['PE well'],'grey')","911fb82c":"purch_career=purch[purch['segment']==3]\ny=purch_career['Incidence']\nx=pd.DataFrame()\nx['mean_price']=(purch_career['Price_1']+purch_career['Price_2']+purch_career['Price_3']+purch_career['Price_4']+purch_career['Price_5'])\/5\nmodel1=LogisticRegression(solver=\"sag\")\nmodel1.fit(x,y)\nmodel1.coef_\npurchase_prob=model1.predict_proba(df_price_range)\npurchase_elasticity=model1.coef_[:,0]*price_range*(1-purchase_prob[:,1])\nprice_elasticity['PE Career']=purchase_elasticity\nprice_elasticity","418105eb":"plt.figure(figsize=(9,6))\nplt.plot(price_elasticity['Price Range'],price_elasticity['Mean PE'],'orange')\nplt.plot(price_elasticity['Price Range'],price_elasticity['PE Few Oppur'],'y')\nplt.plot(price_elasticity['Price Range'],price_elasticity['PE Standard'],'r')\nplt.plot(price_elasticity['Price Range'],price_elasticity['PE well'],'grey')\nplt.plot(price_elasticity['Price Range'],price_elasticity['PE Career'],'b')\n","94d2cb1a":"purch.sample(5)","64b09be0":"y=purch[\"Incidence\"]\nx=pd.DataFrame()\nx['mean price']=(purch['Price_1']+purch['Price_2']+purch['Price_3']+purch['Price_4']+purch['Price_5'])\/5\nx['mean_promotion']=(purch[\"Promotion_1\"]+purch[\"Promotion_2\"]+purch[\"Promotion_3\"]+purch[\"Promotion_4\"]+purch[\"Promotion_5\"])\/5\nx","3f6ce045":"model=LogisticRegression(solver=\"sag\")\nmodel.fit(x,y)\nmodel.coef_","fac28e5c":"model.coef_[:,0]","94027d3e":"df_price=pd.DataFrame(price_range,columns=[\"price range\"])\ndf_price[\"promotion\"]=1\nprom_prob=model.predict_proba(df_price)\nprom_elasticity=model.coef_[:,0]*price_range*(1-prom_prob[:,1])\nprice_elasticity[\"promotion\"]=prom_elasticity\nprice_elasticity","0f3930f4":"df_price=pd.DataFrame(price_range,columns=[\"price range\"])\ndf_price[\"promotion\"]=1\nprom_prob=model.predict_proba(df_price)\nprom_elasticity=model.coef_[:,0]*price_range*(1-prom_prob[:,0])\nprice_elasticity[\"no_promotion\"]=prom_elasticity\nprice_elasticity","20abcbc4":"plt.figure(figsize=(9,6))\nplt.plot(price_elasticity['Price Range'],price_elasticity['promotion'],'r')\nplt.plot(price_elasticity['Price Range'],price_elasticity['no_promotion'],'y')\nplt.xlabel(\"Price\")\nplt.ylabel(\"Elasticity\")\nplt.title(\"Price Elasticity of Purchase Probability with and without promotion\")","74e39f2e":"brand_choice=purch[purch['Incidence']==1]\ny=brand_choice['Brand']\nx=pd.DataFrame(brand_choice[['Price_1', 'Price_2', 'Price_3', 'Price_4',\n       'Price_5']])\nmodel=LogisticRegression(solver='sag',multi_class='multinomial')\nmodel.fit(x,y)\nmodel.coef_","1815cfb0":"model_coef=pd.DataFrame((np.transpose(model.coef_)),index=['Price_1', 'Price_2', 'Price_3', 'Price_4',\n       'Price_5'],columns=['coef_brand 1','coef_brand 2','coef_brand 3','coef_brand 4','coef_brand 5'])\nmodel_coef","b307cd5f":"own_brand_1=pd.DataFrame(index=np.arange(price_range.size))\nown_brand_1['price_1']=price_range\nown_brand_1['price_2']=brand_choice['Price_5'].mean()\nown_brand_1['price_3']=brand_choice['Price_5'].mean()\nown_brand_1['price_4']=brand_choice['Price_5'].mean()\nown_brand_1['price_5']=brand_choice['Price_5'].mean()\npred_brand_1=model.predict_proba(own_brand_1)\nown_price_elasticity_brand_1=model_coef.iloc[0,0]*price_range*(1-pred_brand_1[:,0])\nprice_elasticity['brand_1']=own_price_elasticity_brand_1\nprice_elasticity","63ce8e70":"plt.figure(figsize=(9,6))\nplt.plot(price_elasticity['Price Range'],price_elasticity['brand_1'],'r')","94ee9084":"own_brand_2=pd.DataFrame(index=np.arange(price_range.size))\nown_brand_2['price_1']=brand_choice['Price_1'].mean()\nown_brand_2['price_2']=price_range\nown_brand_2['price_3']=brand_choice['Price_5'].mean()\nown_brand_2['price_4']=brand_choice['Price_5'].mean()\nown_brand_2['price_5']=brand_choice['Price_5'].mean()\npred_brand_2=model.predict_proba(own_brand_2)\nown_price_elasticity_brand_2=model_coef.iloc[1,1]*price_range*(1-pred_brand_2[:,1])\nprice_elasticity['brand_2']=own_price_elasticity_brand_2\nprice_elasticity","957ba321":"plt.figure(figsize=(9,6))\nplt.plot(price_elasticity['Price Range'],price_elasticity['brand_1'],'r')\nplt.plot(price_elasticity['Price Range'],price_elasticity['brand_2'],'orange')","ee840b30":"own_brand_3=pd.DataFrame(index=np.arange(price_range.size))\nown_brand_3['price_1']=brand_choice['Price_1'].mean()\nown_brand_3['price_2']=brand_choice['Price_2'].mean()\nown_brand_3['price_3']=price_range\nown_brand_3['price_4']=brand_choice['Price_5'].mean()\nown_brand_3['price_5']=brand_choice['Price_5'].mean()\npred_brand_3=model.predict_proba(own_brand_3)\nown_price_elasticity_brand_3=model_coef.iloc[2,2]*price_range*(1-pred_brand_3[:,2])\nprice_elasticity['brand_3']=own_price_elasticity_brand_3\nprice_elasticity","613ccc56":"plt.figure(figsize=(9,6))\nplt.plot(price_elasticity['Price Range'],price_elasticity['brand_1'],'r')\nplt.plot(price_elasticity['Price Range'],price_elasticity['brand_2'],'orange')\nplt.plot(price_elasticity['Price Range'],price_elasticity['brand_3'],'b')","972c4668":"own_brand_4=pd.DataFrame(index=np.arange(price_range.size))\nown_brand_4['price_1']=brand_choice['Price_1'].mean()\nown_brand_4['price_2']=brand_choice['Price_2'].mean()\nown_brand_4['price_3']=brand_choice['Price_3'].mean()\nown_brand_4['price_4']=price_range\nown_brand_4['price_5']=brand_choice['Price_5'].mean()\npred_brand_4=model.predict_proba(own_brand_4)\nown_price_elasticity_brand_4=model_coef.iloc[3,3]*price_range*(1-pred_brand_4[:,3])\nprice_elasticity['brand_4']=own_price_elasticity_brand_4\nprice_elasticity","17e9043f":"plt.figure(figsize=(9,6))\nplt.plot(price_elasticity['Price Range'],price_elasticity['brand_1'],'r')\nplt.plot(price_elasticity['Price Range'],price_elasticity['brand_2'],'orange')\nplt.plot(price_elasticity['Price Range'],price_elasticity['brand_3'],'b')\nplt.plot(price_elasticity['Price Range'],price_elasticity['brand_4'],'y')","2d40a607":"own_brand_5=pd.DataFrame(index=np.arange(price_range.size))\nown_brand_5['price_1']=brand_choice['Price_1'].mean()\nown_brand_5['price_2']=brand_choice['Price_2'].mean()\nown_brand_5['price_3']=brand_choice['Price_3'].mean()\nown_brand_5['price_4']=brand_choice['Price_4'].mean()\nown_brand_5['price_5']=price_range\npred_brand_5=model.predict_proba(own_brand_5)\nown_price_elasticity_brand_5=model_coef.iloc[4,4]*price_range*(1-pred_brand_5[:,4])\nprice_elasticity['brand_5']=own_price_elasticity_brand_5","faddbba9":"plt.plot(price_elasticity['Price Range'],price_elasticity['brand_1'],'r')\nplt.plot(price_elasticity['Price Range'],price_elasticity['brand_2'],'orange')\nplt.plot(price_elasticity['Price Range'],price_elasticity['brand_3'],'b')\nplt.plot(price_elasticity['Price Range'],price_elasticity['brand_4'],'y')\nplt.plot(price_elasticity['Price Range'],price_elasticity['brand_5'],'g')","ce479781":"brand5_cross_brand4=pd.DataFrame(index=np.arange(price_range.size))\nbrand5_cross_brand4[\"price_1\"]=brand_choice['Price_1'].mean()\nbrand5_cross_brand4[\"price_2\"]=brand_choice['Price_2'].mean()\nbrand5_cross_brand4[\"price_3\"]=brand_choice['Price_3'].mean()\nbrand5_cross_brand4[\"price_4\"]=price_range\nbrand5_cross_brand4[\"price_5\"]=brand_choice['Price_5'].mean()\npred_brand_4=model.predict_proba(brand5_cross_brand4)\nown_price_elasticity_brand_5_cross_brand_4=model_coef.iloc[4,4]*price_range*(1-pred_brand_4[:,3])\nprice_elasticity['Brand_5_cross_brand_4']=own_price_elasticity_brand_5_cross_brand_4\nprice_elasticity","d7989ef0":"plt.figure(figsize=(9,6))\nplt.plot(price_range,own_price_elasticity_brand_5_cross_brand_4)\nplt.xlabel('Price 4')\nplt.ylabel('Elasticity')\nplt.title('cross price elasticity of brand wrt to brand 4')","a27d4264":"brand1_cross_brand2=pd.DataFrame(index=np.arange(price_range.size))\nbrand1_cross_brand2[\"price_1\"]=brand_choice['Price_1'].mean()\nbrand1_cross_brand2[\"price_2\"]=price_range\nbrand1_cross_brand2[\"price_3\"]=brand_choice['Price_3'].mean()\nbrand1_cross_brand2[\"price_4\"]=brand_choice['Price_2'].mean()\nbrand1_cross_brand2[\"price_5\"]=brand_choice['Price_5'].mean()\npred_brand_4=model.predict_proba(brand1_cross_brand2)\nown_price_elasticity_brand_1_cross_brand_2=model_coef.iloc[1,1]*price_range*(1-pred_brand_4[:,0])\nprice_elasticity['Brand_1_cross_brand_2']=own_price_elasticity_brand_1_cross_brand_2\nprice_elasticity","2a6e9e15":"plt.figure(figsize=(9,6))\nplt.plot(price_range,own_price_elasticity_brand_1_cross_brand_2)\nplt.xlabel('Price 4')\nplt.ylabel('Elasticity')\nplt.title('cross price elasticity of brand wrt to brand 4')","cee951f4":"purc_quant=purch[purch[\"Incidence\"]==1]\npurc_quant=pd.get_dummies(purc_quant,columns=['Brand'],prefix='Brand',prefix_sep='_')\npurc_quant['Price_Incidence']=(purc_quant['Brand_1']*purc_quant[\"Price_1\"]+\n                              purc_quant['Brand_2']*purc_quant[\"Price_2\"]+\n                              purc_quant['Brand_3']*purc_quant[\"Price_3\"]+\n                              purc_quant['Brand_4']*purc_quant[\"Price_4\"]+\n                              purc_quant['Brand_5']*purc_quant[\"Price_5\"])\npurc_quant['Promotion_Incidence']=(purc_quant['Brand_1']*purc_quant[\"Promotion_1\"]+\n                              purc_quant['Brand_2']*purc_quant[\"Promotion_2\"]+\n                              purc_quant['Brand_3']*purc_quant[\"Promotion_3\"]+\n                              purc_quant['Brand_4']*purc_quant[\"Promotion_4\"]+\n                              purc_quant['Brand_5']*purc_quant[\"Promotion_5\"])","af4dadd0":"x= purc_quant[['Price_Incidence','Promotion_Incidence']]\ny=purc_quant[\"Quantity\"]\nmodel_quantity=LinearRegression()\nmodel_quantity.fit(x,y)\nmodel_quantity.coef_","c55579f2":"price_elasticity_quantity=pd.DataFrame(index=np.arange(price_range.size))\nprice_elasticity_quantity['Price_Incidence']=price_range\n# price elasticity of purchase quantity under two conditions: when the chosen brand is and is not on promotion\nprice_elasticity_quantity['Promotion_Incidence']=1\nbeta_quantity=model_quantity.coef_[0]\npred_quant=model_quantity.predict(price_elasticity_quantity) \nprice_elasticity_quantity_promotion_yes= beta_quantity* price_range \/ pred_quant\nprice_elasticity[\"PE_Quantity_Promotion_1\"]=price_elasticity_quantity_promotion_yes\nprice_elasticity","a23bf261":"plt.figure(figsize=(9,6))\nplt.plot(price_range,price_elasticity_quantity_promotion_yes)\nplt.xlabel('Price')\nplt.ylabel('Elasticity')\nplt.title('Price Elasticity of Purchase Quantity with promotion')","bdf57ca6":"# **Cross Price Elasticity Brand 5,cross Brand 4**","1d58303c":"# **own prices Elasticity Brand 1**","1587cf94":"# **own prices Elasticity Brand 2**","cebaf6d0":"# **own prices Elasticity Brand 5**","94828929":"# **Purchase Probability with Promotion**","a8ced944":"# **Brand Choice**","740f2f5f":"# **Standard**","699318a3":"# **Revenue**","f3a78416":"# **Well-Off**","e27fb1a2":"# **Few Opportunities**","9197fa00":"# **K-Means clustering with PCA**","7164f0cb":"# **Logistic Regression**","b90a5d4f":"# **own prices Elasticity Brand 4**","5912a8f1":"# **own prices Elasticity Brand 3**","89b5affe":"# **price elasticity of purchase probability**","7f2d8c44":"# **Brand Choice**","a93acf51":"# **Purchase Probablity by Segment**","c4cd9048":"# **Standard**","a90738b0":"# **Customer Pedictive Analysis**","926a302d":"# **Linear Regression**"}}