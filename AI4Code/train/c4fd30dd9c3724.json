{"cell_type":{"bd73b5b7":"code","911c68a4":"code","7c331acf":"code","58c4e0c4":"code","585fcd90":"code","89ed3afa":"code","d9f6986e":"code","783b7da9":"code","c06d41c6":"code","b2402064":"code","a8435880":"code","f5ebe252":"markdown","449c6e45":"markdown","2ae3d32e":"markdown","7faf9f28":"markdown","bbb36fd6":"markdown","248dd93c":"markdown","28d24be6":"markdown","08e7d08e":"markdown","67fc6925":"markdown","17f3070a":"markdown","dc2bbbe8":"markdown","3f1a827d":"markdown","44be8b2f":"markdown","0207072d":"markdown"},"source":{"bd73b5b7":"import pandas as pd\nimport numpy as np\n\nimport plotly.graph_objects as go\nimport plotly.express as px","911c68a4":"def subarea_extractor(x):\n    return x[0]\n\ndef area_extractor(x):\n    return x[-1]","7c331acf":"def fetch_date(time):\n    return str(time).split(' ')[0]\n\ndef fetch_weekday(time):\n    date = fetch_date(time)\n    return date + ' - ' + str(time.weekday())\n\ndef fetch_hour(time):\n    t = str(time).split(' ')\n    return t[0] + ' - ' + t[1].split(':')[0]","58c4e0c4":"def fetch_quakes_data(manner='daily', bbox='Worldwide', mag_thresh=2):\n    url_link = 'https:\/\/earthquake.usgs.gov\/earthquakes\/feed\/v1.0\/summary\/{}.csv'\n    \n    if (manner == 'weekly'):\n        data_link = url_link.format('all_week')\n    elif (manner == 'monthly'):\n        data_link = url_link.format('all_month')\n    else:\n        data_link = url_link.format('all_day')\n    \n    eqdf = pd.read_csv(filepath_or_buffer=data_link)\n    eqdf = eqdf[['time', 'latitude', 'longitude', 'mag', 'place']]\n    \n    place_list = eqdf['place'].str.split(', ')\n    eqdf['sub_area'] = place_list.apply(func=subarea_extractor)\n    eqdf['area'] = place_list.apply(func=area_extractor)\n    eqdf = eqdf.drop(columns=['place'], axis=1)\n    \n    if isinstance(mag_thresh, int) and (mag_thresh > 0):\n        eqdf = eqdf[eqdf['mag'] >= mag_thresh]\n    else:\n        eqdf = eqdf[eqdf['mag'] > 0]\n    \n    if bbox in eqdf['area'].to_list():\n        eqdf = eqdf[eqdf['area'] == bbox]\n        max_mag = eqdf['mag'].max()\n        center_lat = eqdf[eqdf['mag'] == max_mag]['latitude'].values[0]\n        center_lon = eqdf[eqdf['mag'] == max_mag]['longitude'].values[0]\n    else:\n        center_lat, center_lon = [54, 15]\n    \n    eqdf['time'] = pd.to_datetime(eqdf['time'])\n    \n    if (manner == 'weekly'):\n        new_col = 'weekday'\n        eqdf[new_col] = eqdf['time'].apply(func=fetch_weekday)\n    elif (manner == 'monthly'):\n        new_col = 'date'\n        eqdf[new_col] = eqdf['time'].apply(func=fetch_date)\n    else:\n        new_col = 'hours'\n        eqdf[new_col] = eqdf['time'].apply(func=fetch_hour)\n    \n    eqdf = eqdf.sort_values(by='time')\n    \n    return eqdf, center_lat, center_lon","585fcd90":"def visualize_quakes_data(manner='daily', bbox='Worldwide', mag_thresh=2):\n    eqdf, clat, clon = fetch_quakes_data(manner=manner, bbox=bbox, mag_thresh=mag_thresh)\n    \n    if (manner == 'monthly'):\n        af = 'date'\n    elif (manner == 'weekly'):\n        af = 'weekday'\n    else:\n        af = 'hours'\n    \n    zoom = 3 if bbox != 'Worldwide' else 1\n    \n    fig = px.scatter_mapbox(\n        data_frame=eqdf,\n        lat='latitude',\n        lon='longitude',\n        center=dict(lat=clat, lon=clon),\n        size='mag',\n        color='mag',\n        hover_name='sub_area',\n        zoom=zoom,\n        mapbox_style='stamen-terrain',\n        # color_continuous_scale=px.colors.cyclical.IceFire,\n        animation_frame=af,\n        title='{} Earthquakes - {}; mag - {}'.format(manner.title(), bbox, mag_thresh)\n    )\n    \n    fig.update_layout(\n        margin=dict(l=0, r=0, t=40, b=0)\n    )\n    \n    fig.show()\n    return None","89ed3afa":"visualize_quakes_data(manner='daily', mag_thresh=None)","d9f6986e":"visualize_quakes_data(manner='weekly', mag_thresh=None)","783b7da9":"visualize_quakes_data(manner='monthly', mag_thresh=None)","c06d41c6":"visualize_quakes_data(manner='daily', bbox='Alaska', mag_thresh=None)","b2402064":"visualize_quakes_data(manner='weekly', bbox='Alaska', mag_thresh=None)","a8435880":"visualize_quakes_data(manner='monthly', bbox='Alaska', mag_thresh=None)","f5ebe252":"### Worldwide","449c6e45":"**Weekly Basis**","2ae3d32e":"### `import` Packages","7faf9f28":"**Daily Basis**","bbb36fd6":"### Visualizer","248dd93c":"### End","28d24be6":"### Data Fetching and Preprocessing","08e7d08e":"**Daily Basis**","67fc6925":"### Area Based","17f3070a":"### Extractors","dc2bbbe8":"**Monthly Basis**","3f1a827d":"**Weekly Basis**","44be8b2f":"### Time Manipulator","0207072d":"**Montly Basis**"}}