{"cell_type":{"c233ad7c":"code","ff181141":"code","97aa0468":"code","63ea94b8":"code","a788c05a":"code","3fadf6c1":"code","2980e525":"code","af669636":"code","56294f56":"code","6843bd35":"code","710a48a4":"code","9fc6832a":"code","dec5235d":"code","048d609b":"code","213af466":"code","4c5dab7d":"code","f308383c":"code","a32f9781":"code","19e64015":"code","b16dea5b":"code","ab0f691a":"code","2a4fc208":"code","30818a17":"code","96476f6f":"code","2d7b7cbe":"code","5c810f24":"code","3ddb47e8":"code","668b1ab2":"code","2f81441d":"markdown","979075b8":"markdown","dcdfe5f1":"markdown","5c025bd6":"markdown","9799fd6b":"markdown","ada1cd57":"markdown","9aaf7a62":"markdown","f7214fcf":"markdown","f975cfd4":"markdown","98816d1e":"markdown"},"source":{"c233ad7c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ff181141":"advertising_multi = pd.read_csv('..\/input\/advertising.csv')\nadvertising_multi.head(5)","97aa0468":"advertising_multi.info()\n","63ea94b8":"advertising_multi.describe()","a788c05a":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","3fadf6c1":"sns.pairplot(advertising_multi)","2980e525":"sns.pairplot(advertising_multi, x_vars=['TV','Radio','Newspaper'],y_vars='Sales',height=7, aspect=0.9)","af669636":"X= advertising_multi[['TV','Radio','Newspaper']]\nX.head()","56294f56":"y= advertising_multi['Sales']\ny.head()","6843bd35":"advertising_multi.tail() #checking the last five rows","710a48a4":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,train_size=0.7,random_state=100 )","9fc6832a":"# Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","dec5235d":"from sklearn.linear_model import LinearRegression \nlr = LinearRegression()#Creating a LinearRegression object\nlr.fit(X_train, y_train)","048d609b":"print(lr.intercept_)","213af466":"coeff_df=pd.DataFrame(lr.coef_,X_test.columns,columns=['Coefficient'])\ncoeff_df ","4c5dab7d":"y_pred = lr.predict(X_test)","f308383c":"from sklearn.metrics import mean_squared_error, r2_score\nmse = mean_squared_error(y_test, y_pred)\nr_squared = r2_score(y_test, y_pred)","a32f9781":"print('Mean_Squared_Error :' ,mse)\nprint('r_square_value :' ,r_squared)","19e64015":"import statsmodels.api as sm\nX_train_sm = X_train \nX_train_sm = sm.add_constant(X_train_sm) #sm.add_constant(X) in order to add a constant.\nlr_1 = sm.OLS(y_train,X_train_sm).fit() #create a fitted model in one line\n\nlr_1.params #print the coefficients","b16dea5b":"print(lr_1.summary())#let's see the summary for p values","ab0f691a":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","2a4fc208":"plt.figure(figsize=(5,5))\nsns.heatmap(advertising_multi.corr(), annot=True)","30818a17":"X_train_new = X_train[['TV','Radio']]#Removing Newspaper\nX_test_new = X_test[['TV','Radio']]#Removing Newspaper","96476f6f":"lr.fit(X_train_new,y_train)","2d7b7cbe":"y_pred_new = lr.predict(X_test_new)#predicting","5c810f24":"c   = [i for i in range(1,61,1)]\nfig = plt.figure()\nplt.plot(c,y_test,color=\"blue\", linewidth=2.5,linestyle=\"-\")\nplt.plot(c,y_pred,color=\"red\", linewidth=2.5,linestyle=\"-\")\nfig.suptitle('Actual versus Predicted', fontsize=25)\nplt.xlabel('Index', fontsize=18)\nplt.ylabel('Sales', fontsize=16)","3ddb47e8":"c   = [i for i in range(1,61,1)]\nfig = plt.figure()\nplt.plot(c,y_test-y_pred,color=\"green\", linewidth=2.5,linestyle=\"-\")\nfig.suptitle('Error', fontsize=25)\nplt.xlabel('Index', fontsize=18)\nplt.ylabel('y_test-y_pred', fontsize=16)","668b1ab2":"lr.fit(X_train_new, y_train)","2f81441d":"**Splitting Data**","979075b8":"**Predicting with the test values**","dcdfe5f1":"**Checking for P_value**\ny=B      + B1 X1\n  =B X0+B1X1","5c025bd6":"**Calculating Error**","9799fd6b":"*** Fork this Kernel. Do not edit without forking!** \n* **Upload Your own Data**\n* **Do not forget to \"Commit\" in order to save your work**","ada1cd57":"**Importing and Running Linear Regression**","9aaf7a62":"**Assigning the x and y values**","f7214fcf":"#1 unit increase in TV price raises Sales by 0.045 ","f975cfd4":"**Visualizing what we have**","98816d1e":"P value of Newspaper is higher than 0.05 therefore is insignificant"}}