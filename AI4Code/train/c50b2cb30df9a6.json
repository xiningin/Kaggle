{"cell_type":{"278373d3":"code","79568488":"code","5322e891":"code","2c1dd8f4":"code","e787822f":"code","3b6abfa8":"code","78c405a4":"markdown"},"source":{"278373d3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","79568488":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout\nfrom tensorflow.keras.callbacks import EarlyStopping\nimport os\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'  # or any {'0', '1', '2'}\n\ndf = pd.read_csv('..\/input\/insurance\/insurance.csv')\nmsno.matrix(df)","5322e891":"Male = pd.get_dummies(df['sex'], drop_first=True)\ndf = pd.concat([df, Male], axis=1 )\nSmoker = pd.get_dummies(df['smoker'], drop_first=True)\ndf = pd.concat([df, Smoker], axis=1 )\ndf = df.rename(columns={'yes':'Smoker'})\nregion = pd.get_dummies(df['region'], drop_first=True)\ndf = pd.concat([df, region], axis=1 )\ndf.drop(['sex','smoker','region'], axis=1,inplace=True)\ndf.head()","2c1dd8f4":"X=df.drop('charges', axis=1)\ny=df['charges']\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.25)\nfrom sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nscaler.fit(X_train)\nX_train = scaler.transform(X_train)\nX_validate = scaler.transform(X_test)","e787822f":"import tensorflow as tf\n# Build a neural net again to fit on our normalized data\ntf.random.set_seed(42)\n# Create the model\nmodel2 = tf.keras.Sequential([\n    tf.keras.layers.Dense(100),\n    tf.keras.layers.Dense(10),\n    tf.keras.layers.Dense(1)\n])\n# Compile the model\nmodel2.compile(loss = \"mae\",optimizer = tf.keras.optimizers.Adam(lr = 0.01),metrics = [\"mae\"])\n# Fit the model\nhist = model2.fit(X_train, y_train, epochs = 200)","3b6abfa8":"model2.evaluate(X_test,y_test)","78c405a4":"# Reference\n\nhttps:\/\/www.kaggle.com\/rohanpatnaik\/neural-network-model-to-predict-insurance-cost\n\nhttps:\/\/www.kaggle.com\/praviinjaiswal\/regression-with-neural-network\n\nhttps:\/\/www.kaggle.com\/umerkk12\/artificial-neural-network"}}