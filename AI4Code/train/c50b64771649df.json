{"cell_type":{"05663d4a":"code","64700a2e":"code","e4d5fa03":"code","311254d7":"code","f77212ae":"code","2fb747a8":"code","df896ae2":"code","b573192a":"code","b59be778":"code","4afa1cf2":"code","88cca0ba":"code","e2eb4c4a":"code","7293a612":"code","40a40503":"code","5920dece":"code","d913b696":"code","f740327b":"code","91a7dae1":"code","9c6bb83e":"code","0aee06fd":"code","fb422cad":"code","44debc08":"code","3d8a5fc6":"code","aa2c5830":"code","5ec11247":"code","6a3661c2":"code","17f01867":"code","8e62dcbb":"code","0171296b":"code","0fde030f":"code","61ec0518":"code","e38d06de":"code","3a23f0d0":"code","71dba8b3":"code","0b8b0aad":"code","716cef27":"code","0a7517f9":"code","6dfca523":"code","d8fb1f54":"code","d7285a5d":"code","bf3a76c7":"code","bbbabe5a":"code","8785d305":"code","224c295d":"code","277f3631":"code","06b68092":"code","7b365ebd":"code","6abc724a":"code","98664a4a":"code","9361f26c":"code","725a6a23":"code","bb1999bf":"markdown","c071c189":"markdown","101b0f8b":"markdown","018ebbca":"markdown","b8c9e953":"markdown","b950e388":"markdown","1a47a89d":"markdown","4ecdeb82":"markdown","64416655":"markdown","252204b2":"markdown","b83e2945":"markdown","e782b4f0":"markdown","137e95a4":"markdown","2e6a75aa":"markdown","a863e4e0":"markdown","501cb4a5":"markdown","abf210fa":"markdown"},"source":{"05663d4a":"#import all dependencies\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline \nsns.set()","64700a2e":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e4d5fa03":"perform = pd.read_csv('\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv')\nperform.head()","311254d7":"perform.info()","f77212ae":"perform.describe()","2fb747a8":"perform.isnull().sum()","df896ae2":"def box_chart(feature):\n    female = perform[perform['gender']==1][feature].value_counts()\n    male = perform[perform['gender']==0][feature].value_counts()\n    df = pd.DataFrame([male,female])\n    df.index = ['male','female']\n    df.plot(kind='bar',stacked=True, figsize=(10,5))","b573192a":"def cross_tab_(feature):\n    print(pd.crosstab(perform[feature],perform['gender']).apply(lambda x: x*100\/x.sum(), axis=1))","b59be778":"perform['gender'] = perform['gender'].apply(lambda x: 1 if x == 'female' else 0)","4afa1cf2":"perform.head()","88cca0ba":"box_chart('test preparation course')\ncross_tab_('test preparation course')","e2eb4c4a":"box_chart('parental level of education')\ncross_tab = pd.crosstab(perform['parental level of education'],perform['gender']).apply(lambda x: x*100\/x.sum(), axis=1)\nprint(cross_tab)","7293a612":"box_chart('race\/ethnicity')\ncross_tab_('race\/ethnicity')","40a40503":"box_chart('lunch')\ncross_tab_('lunch')","5920dece":"perform['math score'].value_counts()","d913b696":"plt.figure(figsize=(20,10))\nsns.countplot('math score', hue='gender', data=perform)","f740327b":"plt.figure(figsize=(20,10))\nsns.countplot('math score', hue='gender', data=perform)\nplt.xlim(30,45)","91a7dae1":"plt.figure(figsize=(20,10))\nsns.countplot('math score', hue='gender', data=perform)\nplt.xlim(45,55)","9c6bb83e":"plt.figure(figsize=(20,10))\nsns.countplot('math score', hue='gender', data=perform)\nplt.xlim(55,65)","0aee06fd":"plt.figure(figsize=(20,10))\nsns.countplot('math score', hue='gender', data=perform)\nplt.xlim(65,75)","fb422cad":"plt.figure(figsize=(20,10))\nsns.countplot('math score', hue='gender', data=perform)\nplt.xlim(75,85)","44debc08":"plt.figure(figsize=(20,10))\nsns.countplot('reading score', hue='gender', data=perform)","3d8a5fc6":"plt.figure(figsize=(20,10))\nsns.countplot('writing score', hue='gender', data=perform)","aa2c5830":"plt.figure(figsize=(8,6))\nsns.heatmap(perform.corr(), annot = True)","5ec11247":"perform.head()","6a3661c2":"parent_ed_map = {'some college': 0.43, \"associate's degree\": 0.47, 'high school': 0.7,\n                 'some high school': 0.5, \"bachelor's degree\": 0.46, \"master's degree\": 0.3}\nperform['parental level of education'] = perform['parental level of education'].map(parent_ed_map)","17f01867":"perform.head()","8e62dcbb":"perform['lunch'] = perform['lunch'].apply(lambda x: 0 if x == 'free\/reduced' else 1)","0171296b":"perform.head()","0fde030f":"perform['test preparation course'] = perform['test preparation course'].apply(lambda x: 1 if x == 'completed' else 0)","61ec0518":"perform.head()","e38d06de":"group_map = {'group A': 0.2, 'group B': 0.55, 'group C': 0.6, 'group D': 0.33, 'group E': 0.3}\nperform['race\/ethnicity'] = perform['race\/ethnicity'].map(group_map)","3a23f0d0":"perform.head()","71dba8b3":"perform['math score'] = perform['math score'].apply(lambda x: x\/100)\nperform['reading score'] = perform['reading score'].apply(lambda x: x\/100)\nperform['writing score'] = perform['writing score'].apply(lambda x: x\/100)","0b8b0aad":"perform.head()","716cef27":"from sklearn.model_selection import train_test_split","0a7517f9":"X = perform.drop(['gender', 'reading score'], axis=1)\ny = perform['gender']","6dfca523":"X.head()","d8fb1f54":"y.head()","d7285a5d":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=101)","bf3a76c7":"from sklearn.linear_model import LinearRegression","bbbabe5a":"model = LinearRegression()","8785d305":"model.fit(X_train,y_train)","224c295d":"print(model.coef_, model.intercept_)","277f3631":"coeff_df = pd.DataFrame(model.coef_, X.columns,columns=['Coefficent'])\ncoeff_df","06b68092":"predictions = model.predict(X_test)\nplt.scatter(y_test, predictions)","7b365ebd":"copy_pred = (predictions > 0.6)*1","6abc724a":"sns.distplot((y_test-predictions), bins = 50)","98664a4a":"TP = sum((y_test == copy_pred) & (copy_pred == 1))","9361f26c":"FP = sum((copy_pred == 1) & (y_test != copy_pred))","725a6a23":"precision = TP\/(TP+FP)\nprint(precision)","bb1999bf":"## 5. Modeling ","c071c189":"### 5.2 Creating and Training the Model","101b0f8b":"Complete the analysis and build the model that will determine the gender of the student","018ebbca":"## 2. Defining the problem statement","b8c9e953":"## 4. Feature Engineering","b950e388":"### 4.5 scores","1a47a89d":"### 4.1 parental level of education","4ecdeb82":"### 4.4 race\/ethnicity","64416655":"## 3. Exploratory data analysis","252204b2":"### 5.3 Model Evaluation","b83e2945":"### 4.2 lunch","e782b4f0":"### 5.1 Train Test Split","137e95a4":"### 5.4 Predictions from our Model","2e6a75aa":"## 1. Collecting the data","a863e4e0":"### 5.5 Model Evaluation Metrics","501cb4a5":"### 4.3 test preparation course","abf210fa":"# Students Performance in Exams : Linear Regression"}}