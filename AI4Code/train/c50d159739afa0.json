{"cell_type":{"6d7014ba":"code","72c3f823":"code","a19a377a":"code","03e18498":"code","728d15fb":"code","eaf8653d":"code","c1ecba03":"code","5b795b1e":"code","ece4b398":"code","be1cf8ea":"code","ccc9a7b2":"code","43da0e55":"code","481fc009":"code","786c587d":"code","1c6c5e26":"code","e531c9ab":"code","10c2d492":"code","2189926d":"code","eb509421":"code","5d8a3593":"code","49f3243e":"code","cc90a1b4":"code","73d3ef6f":"code","ea8f8231":"code","ce8a4534":"code","04d5fad7":"code","edd7531c":"code","9951e44b":"code","41261a7e":"code","8827bd53":"code","a37997c5":"code","7eddd7d7":"code","be09e77d":"code","bf70c03e":"code","90d6f1f1":"code","7059cbf8":"markdown","f17de043":"markdown","4214402a":"markdown","d16e36c0":"markdown","72f99baa":"markdown","54ab2ac0":"markdown","9a0f106d":"markdown","2f488e27":"markdown","e791e09c":"markdown","e7a3444b":"markdown","b6d064c5":"markdown","0fe9c721":"markdown","e5fdd909":"markdown","b8eb6b53":"markdown","14d492ba":"markdown","8d2db87e":"markdown","95545874":"markdown","578534a4":"markdown","f5ed9dd1":"markdown","3047d599":"markdown","f65375bf":"markdown"},"source":{"6d7014ba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","72c3f823":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler \nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix,classification_report\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.metrics import roc_auc_score,accuracy_score\n\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)","a19a377a":"insurance_df = pd.read_csv('\/kaggle\/input\/health-insurance-cross-sell-prediction\/train.csv')","03e18498":"insurance_df.columns","728d15fb":"insurance_df.dtypes","eaf8653d":"insurance_df.isnull().sum()","c1ecba03":"insurance_df.shape","5b795b1e":"categorical_columns=[]\ncontinuous_columns=[]\nfor col in insurance_df.columns:\n    if insurance_df[col].dtype!='object':\n        continuous_columns.append(col)\n    else:\n        categorical_columns.append(col)","ece4b398":"continuous_columns","be1cf8ea":"plt.figure(figsize=(16,16))\nfor i, col in enumerate(['id','Age','Region_Code','Annual_Premium','Policy_Sales_Channel','Vintage']):\n    plt.subplot(4,4,i+1)\n    sns.boxplot(insurance_df[col])\n    plt.tight_layout()","ccc9a7b2":"insurance_df.loc[insurance_df.Annual_Premium> 400000,'Annual_Premium']=400000","43da0e55":"insurance_df['Gender'].value_counts()","481fc009":"fig, ax =plt.subplots(1,2,figsize=(15,5))\nsns.countplot(data=insurance_df,x='Gender',hue='Vehicle_Damage',ax=ax[0])\nsns.countplot(data=insurance_df,x='Gender',hue='Previously_Insured',ax=ax[1])\nfig.show()","786c587d":"fig, ax =plt.subplots(1,2,figsize=(15,5))\nsns.countplot(data=insurance_df,x='Gender',hue='Vehicle_Age',ax=ax[0])\nsns.countplot(data=insurance_df,x='Previously_Insured',hue='Vehicle_Damage',ax=ax[1])\nfig.show()","1c6c5e26":"fig, ax =plt.subplots(1,2,figsize=(15,5))\n# fig, ax = plt.subplots() \nsns.countplot(data=insurance_df,x='Gender',hue='Previously_Insured',ax=ax[0])\nsns.countplot(data=insurance_df,x='Gender',hue='Vehicle_Damage',ax=ax[1])\nfig.show()","e531c9ab":"plt.figure(figsize=(20,9))\nsns.FacetGrid(insurance_df, hue = 'Response',\n             height = 6,xlim = (0,150)).map(sns.kdeplot, 'Age', shade = True,bw=2).add_legend()","10c2d492":"plt.figure(figsize=(20,9))\nsns.FacetGrid(insurance_df, hue = 'Gender',\n             height = 6,xlim = (0,150)).map(sns.kdeplot, 'Age', shade = True,bw=2).add_legend()","2189926d":"plt.figure(figsize=(15,5))\nsns.boxplot(y='Age', x ='Gender', hue=\"Previously_Insured\", data=insurance_df)","eb509421":"plt.figure(figsize=(15,5))\nsns.violinplot(y='Age', x ='Gender', hue=\"Response\", data=insurance_df)","5d8a3593":"le = LabelEncoder()\ninsurance_df['Gender'] = le.fit_transform(insurance_df['Gender'])\ninsurance_df['Driving_License'] = le.fit_transform(insurance_df['Driving_License'])\ninsurance_df['Previously_Insured'] = le.fit_transform(insurance_df['Previously_Insured'])\ninsurance_df['Vehicle_Damage'] = le.fit_transform(insurance_df['Vehicle_Damage'])\ninsurance_df['Driving_License'] = le.fit_transform(insurance_df['Driving_License'])\ninsurance_df['Vehicle_Age'] = le.fit_transform(insurance_df['Vehicle_Age'])","49f3243e":"insurance_df=insurance_df[['Gender', 'Age', 'Driving_License', 'Region_Code',\n       'Previously_Insured', 'Vehicle_Age', 'Vehicle_Damage', 'Annual_Premium',\n       'Policy_Sales_Channel', 'Vintage', 'Response']]","cc90a1b4":"plt.figure(figsize=(12,12))\nsns.heatmap(insurance_df.corr())","73d3ef6f":"def evaluation_stats(model,X_train, X_test, y_train, y_test,algo,is_feature=False):\n    print('Train Accuracy')\n    y_pred_train = model.predict(X_train)                           \n    print(accuracy_score(y_train, y_pred_train))\n    print('Validation Accuracy')\n    y_pred_test = model.predict(X_test)                           \n    print(accuracy_score(y_test, y_pred_test))\n    print(\"\\n\")\n    print(\"Train AUC Score\")\n    print(roc_auc_score(y_train, y_pred_train))\n    print(\"Test AUC Score\")\n    print(roc_auc_score(y_test, y_pred_test))\n    \n    if is_feature:\n        plot_feature_importance(rf_model.feature_importances_,X.columns,algo)\n\ndef training(model,X_train, y_train):\n    return model.fit(X_train, y_train)\n\ndef plot_feature_importance(importance,names,model_type):\n    feature_importance = np.array(importance)\n    feature_names = np.array(names)\n\n    #Create a DataFrame using a Dictionary\n    data={'feature_names':feature_names,'feature_importance':feature_importance}\n    fi_df = pd.DataFrame(data)\n\n    #Sort the DataFrame in order decreasing feature importance\n    fi_df.sort_values(by=['feature_importance'], ascending=False,inplace=True)\n    #Define size of bar plot\n    plt.figure(figsize=(10,8))\n    #Plot Searborn bar chart\n    sns.barplot(x=fi_df['feature_importance'], y=fi_df['feature_names'])\n    #Add chart labels\n    plt.title(model_type + ' FEATURE IMPORTANCE')\n    plt.xlabel('FEATURE IMPORTANCE')\n    plt.ylabel('FEATURE NAMES')","ea8f8231":"insurance_df.columns","ce8a4534":"insurance_df['Response'].value_counts()","04d5fad7":"X = insurance_df.drop([\"Response\"], axis=1)\ny = insurance_df[\"Response\"]","edd7531c":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.30, random_state = 101)","9951e44b":"rf_model = training(RandomForestClassifier(),X_train,y_train)\nevaluation_stats(rf_model,X_train, X_test, y_train, y_test,'RANDOM FOREST')","41261a7e":"xbg_model = training(XGBClassifier(),X_train,y_train)\nevaluation_stats(xbg_model,X_train, X_test, y_train, y_test,'XGB')","8827bd53":"sm = SMOTE(random_state=101)\nX_res, y_res = sm.fit_resample(X_train, y_train)","a37997c5":"rf_model = training(RandomForestClassifier(),X_res, y_res)\nevaluation_stats(rf_model,X_res, X_test, y_res, y_test,'RANDOM FOREST')","7eddd7d7":"xbg_model = training(XGBClassifier(),X_train,y_train)\nevaluation_stats(xbg_model,X_res, X_test, y_res, y_test,'XGB')","be09e77d":"rf_model = training(RandomForestClassifier(criterion='entropy',n_estimators=200,max_depth=3),X_res, y_res)\nevaluation_stats(rf_model,X_res, X_test, y_res, y_test,'RANDOM FOREST')","bf70c03e":"xbg_model = training(XGBClassifier(n_estimators=1000,max_depth=10),X_res, y_res)\nevaluation_stats(xbg_model,X_res, X_test, y_res, y_test,'XGB',is_feature=False)","90d6f1f1":"from sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nclf = make_pipeline(StandardScaler(), LogisticRegression())\nclf.fit(X_res, y_res)\nevaluation_stats(clf,X_train, X_test, y_train, y_test,'LR',is_feature=False)","7059cbf8":"Lets check with adding parameters to the model","f17de043":"Females have got insurance at young age.","4214402a":"Data is highly imbalanced, but still we will try to train few models without over sampling","d16e36c0":"I see most of the vehicles are new(less than two years). People have't got insuranced for new vehicles.<BR>\nIt is surprsing that many vehicles within 2 years have got so much damage.","72f99baa":"Age is almost normally distributed for people who are interested in buying insurance. People with age nearly 30 are more interested in buying insurance.<br>\nI think young people doesn't like to get insurance.","54ab2ac0":"This model is not over fitting on the train dataset AUC is quiet decent enough ","9a0f106d":"This RF with out oversampling clearly over fits, Train accuracy and AUC is very high. Model is not able to generalization.","2f488e27":"Kindly upvote if you like this notebook.<br>\nAny issues or mistake kindly let me know in comments, happy to correct.","e791e09c":"Model is overfitting to train dataset, but it is performing good on validation dataset. <br> This is little tricky","e7a3444b":"I think this is also good model, it is not completely overfitting, accuracy is .68 but AUC is .74","b6d064c5":"**Now we will try with over sampling**","0fe9c721":"**With this we move to modelling**","e5fdd909":"I see no much signifiant difference in age vs gender","b8eb6b53":"    I don't see much outliers except in Annual_Premium, We will replace premium values greater than 400000 with 400000","14d492ba":"We clearly see that male have more vehicle damage than female, even then male don't have insurance.","8d2db87e":"**RF with parameters criterion = entropy ,n_estimators = 200 and max_depth = 3 were giving best results, that is AUC of 79%**","95545874":"I see","578534a4":"XBG is not completely overfitting, but AUC is low","f5ed9dd1":"**Data Analysis**","3047d599":"Over fitting","f65375bf":"As I said previously young doesn't like to get insurance, when we drill down further we see that\n* People who like to get insurence their age is normally distributed. The mean age of both are nearly 45 years.\n* Both young male and female doesn't like to buy insurance, distributed is right skewed.\n* But the mean age of male and female, who is not interested to buy insurance, has huge difference."}}