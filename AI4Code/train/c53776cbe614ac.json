{"cell_type":{"040089df":"code","71b04585":"code","5d75f139":"code","60cdfcbe":"code","a7008c25":"code","cd500b97":"code","3ed793c0":"code","45934893":"code","75ff96a6":"code","b167f288":"code","36fe33c8":"code","73b7e2a5":"code","0e628ac0":"code","86fb361d":"code","569bdcc4":"code","2aa35411":"code","5df1362a":"code","41b5a01c":"code","5dc7b116":"code","ac0ea7d8":"code","437025e0":"code","41912eef":"code","7811adfd":"code","c3b062fb":"code","ce80a9c2":"code","fdda3687":"code","47015676":"code","a61f0613":"code","74fd8ec8":"code","0971bf11":"code","262badb0":"markdown","97615846":"markdown","4cd77de4":"markdown","eae8c664":"markdown"},"source":{"040089df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","71b04585":"from fastai.imports import *\n\nfrom pandas_summary import DataFrameSummary\nfrom sklearn.ensemble import RandomForestClassifier\n \nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split\nimport numpy as np\nimport pandas as pd\n\n%load_ext autoreload\n%autoreload 2\n%matplotlib inline\npd.options.mode.chained_assignment=None","5d75f139":"import pandas as pd\ndf = pd.read_csv(\"..\/input\/heartcsv\/Heart.csv\",index_col=0)","60cdfcbe":"df.head()\n","a7008c25":"df.columns = ['age', 'sex', 'chest_pain_type', 'resting_blood_pressure', 'cholesterol', 'fasting_blood_sugar', 'rest_ecg', 'max_heart_rate_achieved',\n       'exercise_induced_angina', 'st_depression', 'st_slope', 'num_major_vessels', 'thalassemia', 'target']","cd500b97":"df['sex'][df['sex']==0]='female'\ndf['sex'][df['sex']==1]='male'","3ed793c0":"df['sex']","45934893":"df['chest_pain_type'][df['chest_pain_type'] == 1] = 'typical angina'\ndf['chest_pain_type'][df['chest_pain_type'] == 2] = 'atypical angina'\ndf['chest_pain_type'][df['chest_pain_type'] == 3] = 'non-anginal pain'\ndf['chest_pain_type'][df['chest_pain_type'] == 4] = 'asymptomatic'","75ff96a6":"df['chest_pain_type'].tail()","b167f288":"df['fasting_blood_sugar'][df['fasting_blood_sugar']==0]='lower than 120mg\/ml'\ndf['fasting_blood_sugar'][df['fasting_blood_sugar']==1]='greater than 120mg\/ml'","36fe33c8":"df['fasting_blood_sugar']","73b7e2a5":"df['rest_ecg'][df['rest_ecg']==0]='normal'\ndf['rest_ecg'][df['rest_ecg']==1]='ST-T wave abnormality'\ndf['rest_ecg'][df['rest_ecg']==2]='left ventiricular hypertrophy'","0e628ac0":"df['exercise_induced_angina'][df['exercise_induced_angina'] == 0] = 'no'\ndf['exercise_induced_angina'][df['exercise_induced_angina'] == 1] = 'yes'","86fb361d":"df['st_slope'][df['st_slope'] == 1] = 'upsloping'\ndf['st_slope'][df['st_slope'] == 2] = 'flat'\ndf['st_slope'][df['st_slope'] == 3] = 'downsloping'\n\ndf['thalassemia'][df['thalassemia'] == 1] = 'normal'\ndf['thalassemia'][df['thalassemia'] == 2] = 'fixed defect'\ndf['thalassemia'][df['thalassemia'] == 3] = 'reversable defect'","569bdcc4":"df.head()","2aa35411":"def missing_data_ratio(df):\n    all_data_na=(df.isnull().sum()\/len(df))*100\n    all_data_na=all_data_na.drop(all_data_na[all_data_na==0].index).sort_values(ascending=False)[:30]\n    missing_data=pd.DataFrame({'Missing Ratio':all_data_na})\n    return missing_data","5df1362a":"import warnings\nwith warnings.catch_warnings():\n    warnings.filterwarnings('ignore',category=DeprecationWarning)\n    import imp","41b5a01c":"import pandas_profiling","5dc7b116":"profile=pandas_profiling.ProfileReport(df)","ac0ea7d8":"missing_data_ratio(df)","437025e0":"profile","41912eef":"df.columns","7811adfd":"df.chest_pain_type = df.chest_pain_type.astype(\"category\")\ndf.exercise_induced_angina = df.exercise_induced_angina.astype(\"category\")\ndf.fasting_blood_sugar = df.fasting_blood_sugar.astype(\"category\")\ndf.rest_ecg = df.rest_ecg.astype(\"category\")\ndf.sex = df.sex.astype(\"category\")\ndf.st_slope = df.st_slope.astype(\"category\")\ndf.thalassemia = df.thalassemia.astype(\"category\")","c3b062fb":"df=pd.get_dummies(df,drop_first=True)","ce80a9c2":"from sklearn.model_selection import RandomizedSearchCV","fdda3687":"rf_param_grid = {\n                 'max_depth' : [4, 6, 8,10],\n                 'n_estimators': range(1,30),\n                 'max_features': ['sqrt', 'auto', 'log2'],\n                 'min_samples_split': [2, 3, 10,20],\n                 'min_samples_leaf': [1, 3, 10,18],\n                 'bootstrap': [True, False],\n                 \n                 }","47015676":"m = RandomForestClassifier()","a61f0613":"m_r = RandomizedSearchCV(param_distributions=rf_param_grid, \n                                    estimator = m, scoring = \"accuracy\", \n                                    verbose = 0, n_iter = 100, cv = 5)","74fd8ec8":"m_r.best_score_\n","0971bf11":"m_r.best_params_","262badb0":"How does random forest work?\n\nTo classify a new object with attributes a tree is planted and a tree votes for a specific class\nand the forest chooses the class with most votes.","97615846":"Now we will first convert our normal attributes like age, sex etc into numerical form so that we can further analyse it.","4cd77de4":"#### Quick exploration with pandas profiling","eae8c664":"### Models\n\n"}}