{"cell_type":{"b8eddefa":"code","30677b56":"code","1cedf5b7":"code","51686d6b":"code","b96d3b1a":"code","99d5519f":"code","c02530a9":"code","8b6b8d98":"code","32d6c25f":"code","48bcce5e":"code","97bdec27":"code","704dc245":"code","86857cd3":"code","da3a6cf0":"code","c79e53c5":"code","6979ddc9":"code","06d8ab14":"code","96571b15":"code","810d675f":"code","0794fd59":"code","7ced1c23":"code","bc4a2cc0":"code","f871d2bf":"code","a6726e67":"code","6045b331":"code","1a0d139a":"code","185540b7":"code","393335cf":"code","19f7a20a":"code","1836b336":"code","029a1faf":"code","e11f9cae":"code","cdebd0bf":"code","2a9e5cd7":"code","56d855dc":"code","2b94ebd0":"code","b314b244":"code","51b76184":"code","745b55f3":"code","8a8fe395":"code","0876c144":"code","d8f7b62c":"code","35ab7c6f":"code","a297baab":"code","fed4d5b2":"code","19e1de75":"markdown","1c84adfc":"markdown","fe7d295e":"markdown","b0b4a49c":"markdown","5fb56a8c":"markdown","9c602aed":"markdown","29053ca2":"markdown","ba567b32":"markdown","46bb6d1d":"markdown","c41b476e":"markdown","c5c82e8a":"markdown","d894c807":"markdown","e79dd93d":"markdown","40d9f2d2":"markdown","db702ef0":"markdown","6b01171a":"markdown","fd8bfc59":"markdown","cf0b7ce2":"markdown","9208976c":"markdown","f1cf7bf6":"markdown","97e2fa14":"markdown","1b1c45a5":"markdown","8cc31dba":"markdown","d0eb4fdf":"markdown","a4547652":"markdown","626acd90":"markdown","5f1f5ec3":"markdown","bdb467b5":"markdown","32861587":"markdown","1c46c092":"markdown","f53e011d":"markdown","0c19566d":"markdown","1860d816":"markdown","e5fb557d":"markdown","17aea0c9":"markdown","f334636e":"markdown","2c588a87":"markdown","96c685c5":"markdown","f3307792":"markdown","bc0003a1":"markdown","59331153":"markdown","85bd7cee":"markdown","d50d238c":"markdown","87f288db":"markdown","bbe73711":"markdown","96a52411":"markdown","16611e82":"markdown","ae13514f":"markdown","f54f9664":"markdown","9eb7a301":"markdown","add2d4d9":"markdown"},"source":{"b8eddefa":"# For data\nimport pandas as pd\nfrom pandas import Series,DataFrame\nimport numpy as np\n\n# For visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')\n%matplotlib inline","30677b56":"# Use to grab data from the web(HTTP capabilities)\nimport requests\n\n# We'll also use StringIO to work with the csv file, the DataFrame will require a .read() method\nfrom io import StringIO #Python3","1cedf5b7":"# This is the url link for the poll data in csv form\nurl = \"http:\/\/elections.huffingtonpost.com\/pollster\/2012-general-election-romney-vs-obama.csv\"\n\n# Use requests to get the information in text form\nsource = requests.get(url).text\n\n# Use StringIO to avoid an IO error with pandas\npoll_data = StringIO(source) \n","51686d6b":"poll_df = pd.read_csv(poll_data)\npoll_df.info()","b96d3b1a":"poll_df.head()","99d5519f":"sns.catplot(x='Affiliation',data=poll_df,kind='count')","c02530a9":"sns.catplot(x='Affiliation',data=poll_df,kind='count',hue='Population')","8b6b8d98":"avg = pd.DataFrame(poll_df.mean())\navg.drop(['Number of Observations','Question Text','Question Iteration'],axis=0,inplace=True)","32d6c25f":"std =pd.DataFrame(poll_df.std())\nstd.drop(['Number of Observations','Question Text','Question Iteration'],axis=0,inplace=True)","48bcce5e":"std_avg = pd.concat([avg,std],axis=1)\nstd_avg.columns = ['AVG','STD']\nstd_avg\n","97bdec27":"avg.plot(yerr = std, kind = 'bar', legend = False) #yerr\u76f8\u7576\u65bc\u5728bar\u4e0a\u52a0\u7dda\n","704dc245":"poll_df.head()","86857cd3":"# Quick plot of sentiment in the polls versus time.\npoll_df.plot(x='End Date',y=['Obama','Romney','Undecided','Other'],linestyle='',marker='o',figsize=(12,6))","da3a6cf0":"# For timestamps\nfrom datetime import datetime","c79e53c5":"# Create a new column for the difference between the two candidates\npoll_df['Diff'] = (poll_df['Obama']- poll_df['Romney'])\/100\n# Preview the new column\npoll_df.head()","6979ddc9":"# Set as_index=Flase to keep the 0,1,2,... index. Then we'll take the mean of the polls on that day.\npoll_df_gp=poll_df.groupby(['Start Date'],as_index = False).mean()\n# Drop some columns we don't need \npoll_df_gp.drop(['Question Text','Question Iteration'],axis=1,inplace=True)\n# Let's go ahead and see what this looks like\npoll_df_gp.head()","06d8ab14":"# Plotting the difference in polls between Obama and Romney\npoll_df_gp.plot(x = 'Start Date', y= 'Diff',figsize = (12,4), marker ='o', linestyle ='-')","96571b15":"# Set row count and xlimit list\nrow_in = 0 \nxlimit = []\n\n# Cycle through dates until 2012-10 is found, then print row index\nfor date in poll_df_gp['Start Date']:\n    if date[0:7] == '2012-10': #First 7 letters\n        xlimit.append(row_in)\n        row_in+=1\n    else:\n        row_in+=1\nprint (min(xlimit))\nprint (max(xlimit))","810d675f":"poll_df_gp.plot(x = 'Start Date', y= 'Diff',figsize = (12,4), marker ='o', linestyle ='-',xlim = (325,352),ylim = (-0.1,0.1)) #\u591a\u52a0\u4e00\u500b\u9650\u5236xlim=(325,352)\n\n# Now add the debate markers :\u6f14\u8b1b\u7684\u65e5\u671f\nplt.axvline(x=325+2, linewidth=4, color='grey') #Oct 3rd\nplt.axvline(x=325+10, linewidth=4, color='grey') #Oct 11th\nplt.axvline(x=325+21, linewidth=4, color='grey') #Oct 22nd\n\nplt.axhline(y=0,LineStyle='--', color='red')","0794fd59":"donor_df = pd.read_csv('..\/input\/2012us-election-donor-data\/Election_Donor_Data.csv')\ndonor_df.info()","7ced1c23":"donor_df.head()","bc4a2cc0":"# Get a quick look at the various donation amounts\ndonor_df['contb_receipt_amt'].value_counts()","f871d2bf":"don_mean = donor_df['contb_receipt_amt'].mean()\ndon_std = donor_df['contb_receipt_amt'].std()\nprint ('The average donation was %.2f wtih a STD %.2f ' %(don_mean,don_std)) #%.2f\u610f\u601d\u662ffloating\u7684\u5169\u4f4d\u6578","a6726e67":"# Let's make a Series from the DataFrame, use .copy() to avoid view errors\ntop_donor = donor_df['contb_receipt_amt'].copy()\ntop_donor.sort_values(ascending=False)","6045b331":"# Get rid of the negative values\ntop_donor = top_donor[donor_df['contb_receipt_amt']>0]\ntop_donor.sort_values(ascending=False)","1a0d139a":"# Look at the top 10 most common donations value counts\ntop_donor.value_counts().head(10)","185540b7":"# Create a Series of the common donations limited to 2500\ncom_don = top_donor[top_donor<2500]\n# Set a high number of bins to account for the non-round donations and check histogram for spikes.\ncom_don.hist(bins=100,figsize=(12,4))","393335cf":"candidates = donor_df.cand_nm.unique()\ncandidates","19f7a20a":"# Dictionary of party affiliation\nparty_map = {'Bachmann, Michelle': 'Republican',\n           'Cain, Herman': 'Republican',\n           'Gingrich, Newt': 'Republican',\n           'Huntsman, Jon': 'Republican',\n           'Johnson, Gary Earl': 'Republican',\n           'McCotter, Thaddeus G': 'Republican',\n           'Obama, Barack': 'Democrat',\n           'Paul, Ron': 'Republican',\n           'Pawlenty, Timothy': 'Republican',\n           'Perry, Rick': 'Republican',\n           \"Roemer, Charles E. 'Buddy' III\": 'Republican',\n           'Romney, Mitt': 'Republican',\n           'Santorum, Rick': 'Republican'}\n\n# Now map the party with candidate\ndonor_df['Party'] = donor_df.cand_nm.map(party_map)","1836b336":"\n# Clear refunds\ndonor_df = donor_df[donor_df.contb_receipt_amt >0]\n# Preview DataFrame\ndonor_df.head()","029a1faf":"# Groupby candidate and then displayt the total number of people who donated\ncand_times = donor_df.groupby('cand_nm')['contb_receipt_amt'].count()\ncand_times.sort_values(ascending=False)","e11f9cae":"# Groupby candidate and then displayt the total amount donated\ncand_amount = donor_df.groupby('cand_nm')['contb_receipt_amt'].sum()\ncand_amount = cand_amount\/1000000\ncand_amount.sort_values(ascending=False)","cdebd0bf":"cand_amount = donor_df.groupby('cand_nm')['contb_receipt_amt'].sum()\ncand_amount = cand_amount.sort_values(ascending=False)\n\ni= 0\nfor don in cand_amount:\n    print ('The candidate %s raise %.2f million dollars' %(cand_amount.index[i],don\/1000000))\n    i+=1","2a9e5cd7":"cand_donor_times = donor_df.groupby('cand_nm')['contb_receipt_amt'].count()\ncand_amount = donor_df.groupby('cand_nm')['contb_receipt_amt'].sum()\n\ncand_donor_times_amount = pd.concat([cand_donor_times,round(cand_amount\/1000000,2)],axis=1)\ncand_donor_times_amount.columns= ['donor_times', 'amount(mil)']\n\ncand_donor_times_amount.sort_values(by='amount(mil)',ascending=False)\n","56d855dc":"cand_amount = cand_amount.sort_values(ascending=False)\ncand_amount.plot(kind='bar',legend=True,figsize=(10,4))","2b94ebd0":"# Groupby party and then count donations\ndonor_df.groupby('Party')['contb_receipt_amt'].sum().plot(kind='bar')","b314b244":"# Use a pivot table to extract and organize the data by the donor occupation\n\noccupation_df = donor_df.pivot_table('contb_receipt_amt',\n                                        index = 'contbr_occupation',\n                                        columns = 'Party',\n                                        aggfunc ='sum')\noccupation_df.head()","51b76184":"occupation_df.shape","745b55f3":"# Set a cut off point at 1 milllion dollars of sum contributions\noccupation_df = occupation_df[occupation_df.sum(1)>1000000] #sum(1) means axis =1\noccupation_df.shape","8a8fe395":"occupation_df.plot(kind = 'bar')","0876c144":"# Horizontal plot, use a convienently colored cmap\noccupation_df.plot(kind = 'barh',cmap='seismic',figsize=(10,10))","d8f7b62c":"# Drop the unavailble occupations\noccupation_df.drop(['INFORMATION REQUESTED PER BEST EFFORTS','INFORMATION REQUESTED'],axis=0,inplace=True)","35ab7c6f":"occupation_df.loc['C.E.O.']","a297baab":"# Set new ceo row as sum of the current two\noccupation_df.loc['CEO'] = occupation_df.loc['CEO']+occupation_df.loc['C.E.O.'] #\u65b0\u589eROW\u7b49\u65bc\u5176\u4ed6\u5169\u500bROW\n# Drop CEO\noccupation_df.drop(['C.E.O.'],axis = 0, inplace=True)","fed4d5b2":"# Repeat previous plot!\noccupation_df.plot(kind='barh',figsize=(10,12),cmap='seismic')","19e1de75":"Let's start by aggregating the data by candidate. We'll take a quick look a the total amounts received by each candidate. First we will look a the total number of donations and then at the total amount.","1c84adfc":"Wow! This is probably far too large to display effectively with a small, static visualization. What we should do is have a cut-off for total contribution amounts. Afterall, small donations of 20 dollars by one type of occupation won't give us too much insight. So let's set our cut off at 1 million dollars.","fe7d295e":"## 8. Conclusion for Part II\n\n1. Donations are usually made in round number amounts. (e.g. 10,20,50,100,500 etc.) \n2. Clearly Obama is the front-runner in donation amounts and donation times.\n3. Althought total amount of Republican donation is higer than Democrat, but Obama certainly has the advantage of their funding being splintered across multiple candidates.\n4. The total amount of donation from retired group is much higher than other groups in this election.\n5. There were very clearly conservative leaning in each of occupation group. Gerenrlly, finance, CEO, Executive, banker, investor, persident, owner and homemaker support Republican. And, attorney, lawyer, not employed, professor, teacher, writer.\n6. Continue point 5th, I assume both of parties have very clearly strategy and policy to get votes from their targeted group. and very obviously, The types of supporting occupations for two parties are completely different.","b0b4a49c":"This is a bit hard to read, so let's use kind = 'barh' (horizontal) to set the ocucpation on the correct axis.","5fb56a8c":"### 4.5 How did voter sentiment change over time?","9c602aed":"If we wanted to, we could also do a quick (and messy) time series analysis of the voter sentiment by plotting Obama\/Romney favor versus the Poll End Dates. Let's take a look at how we could quickly do tht in pandas.\n\nNote: The time is in reverse chronological order. Also keep in mind the multiple polls per end date.","29053ca2":"It would be very interesting to plot marker lines on the dates of the debates and see if there is any general insight to the poll results.\n\nThe debate dates were Oct 3rd, Oct 11, and Oct 22nd. Let's plot some lines as markers and then zoom in on the month of October.\n\nIn order to find where to set the x limits for the figure we need to find out where the index for the month of October in 2012 is. Here's a simple for loop to find that row. Note, the string format of the date makes this difficult to do without using a lambda expression or a map.","ba567b32":"### 7.2 How did the donations differ between candidates?   ","46bb6d1d":"## 3. Know the datasets (Part I)","c41b476e":"I will combine these 2 questions.   \nLooks like the polls indicate it as a fairly close race, but what about the undecided voters? Most of them will likely vote for one of the candidates once the election occurs. If we assume we split the undecided evenly between the two candidates the observed difference should be an unbiased estimate of the final difference.","c5c82e8a":"The data for the polls will be obtained from HuffPost Pollster. You can check their website here. There are some pretty awesome politcal data stes to play with there so I encourage you to go and mess around with it yourself after completing this project.\n\nWe're going to use the requests module to import some data from the web. For more information on requests, check out the documentation here.\n\nWe will also be using StringIO to work with csv data we get from HuffPost. StringIO provides a convenient means of working with text in memory using the file API, find out more about it here","d894c807":"A quick note, we could have done this same operation manually using a for loop, however this operation would be much slower than using the map method.","e79dd93d":"## 6. Know the Dataset(Part II)\n\n### Donor Data Set\nLet's go ahead and switch gears and take a look at a data set consisting of information on donations to the federal campaign.\n\nThis is going to be the biggest data set we've looked at so far. You can download it here , then make sure to save it to the same folder your iPython Notebooks are in.   \nlink: https:\/\/www.dropbox.com\/s\/l29oppon2veaq4n\/Election_Donor_Data.csv?dl=0  ","40d9f2d2":"Great! Now plotting the Differencce versus time should be straight forward","db702ef0":"Great now we know where to set our x limits for the month of October in our figure.","6b01171a":"Wow! That's a huge standard deviation! Let's see if there are any large donations or other factors messing with the distribution of the donations.","fd8bfc59":"Let's go ahead and take a look at the averages for Obama, Romney , and the polled people who remained undecided.","cf0b7ce2":"Great! Keep in mind that the Difference column is Obama minus Romney, thus a positive difference indicates a leaning towards Obama in the polls.\n\nNow let's go ahead and see if we can visualize how this sentiment in difference changes over time. We will start by using groupby to group the polls by their start data and then sorting it by that Start Date.","9208976c":"What might be interesting to do is get a quick glimpse of the donation amounts, and the average donation amount. Let's go ahead and break down the data.","f1cf7bf6":"### 7.1 How much was donated and what was the average donation?   \n","97e2fa14":"Now let's repeat the same plot!","1b1c45a5":"This is okay, but its hard to do a quick comparison just by reading this information. How about just a quick graphic presentation?","8cc31dba":"### 4.3 How do undecided voters effect the poll? \n### 4.4 Can we account for the undecided voters? ","d0eb4fdf":"Great! This looks much more manageable! Now let's visualize it.","a4547652":"## 7. Questions need to be answered(Part II)   \n\nThe questions we will be trying to answer while looking at this Data Set is:\n\n- 1. How much was donated and what was the average donation?   \n- 2. How did the donations differ between candidates?   \n- 3. How did the donations differ between Democrats and Republicans?  \n- 4. What were the demographics of the donors?   \n- 5. Is there a pattern to donation amounts? ","626acd90":"## 4. Questions to be answered(Part I)\n\n- 1. Who was being polled and what was their party affiliation?   \n- 2. Did the poll results favor Romney or Obama?   \n- 3. How do undecided voters effect the poll?   \n- 4. Can we account for the undecided voters?   \n- 5. How did voter sentiment change over time?   \n- 6. Can we see an effect in the polls from the debates?   \n\nWe'll discuss the second data set later on!\n","5f1f5ec3":"### 4.6 Can we see an effect in the polls from the debates? ","bdb467b5":"Looks like Obama couldn't compete against all the republicans, but he certainly has the advantage of their funding being splintered across multiple candidates.\n\nFinally to start closing out the project, let's look at donations and who they came from (as far as occupation is concerned). We will start by grabing the occupation information from the dono_df DataFrame and then using pivot_table to make the index defined by the various occupations and then have the columns defined by the Party (Republican or Democrat). FInally we'll also pass an aggregation function in the pivot table, in this case a simple sum function will add up all the comntributions by anyone with the same profession.","32861587":"Interesting to see how close these polls seem to be, especially considering the undecided factor. Let's take a look at the numbers.","1c46c092":"Surprisingly, thse polls reflect a dip for Obama after the second debate against Romney, even though memory serves that he performed much worse against Romney during the first debate.\n\nFor all these polls it is important to remeber how geographical location can effect the value of a poll in predicting the outcomes of a national election.","f53e011d":"Now let's combine the CEO and C.E.O rows.","0c19566d":"## 5. Conclusion for Part I\n\n1. Overall the voters are relatively neutral, but still leaning towards Democratic Affiliation.\n2. These polls seem to be very close for Obama and Romney, especially considering the undecided factor.\n3. For debate: 10\/3 debate, polls for Obama go up; 10\/11 debate, polls for Romney go up, 10\/22 debate, polls seems keep the same.","1860d816":"Looks like there are some occupations that are either mislabeled or aren't really occupations. Let's get rid of: Information Requested occupations and let's combine CEO and C.E.O.","e5fb557d":"### 7.5 Is there a pattern to donation amounts? \n\nI would like to use the conclusion part to list out the findings.","17aea0c9":"Now the comparison is very easy to see. As we saw berfore, clearly Obama is the front-runner in donation amounts, which makes sense, since he is not competeing with any other democratic nominees. How about we just compare Democrat versus Republican donations?","f334636e":"### 7.3 How did the donations differ between Democrats and Republicans?   \n","2c588a87":"## 2. Set up environment","96c685c5":"Clearly Obama is the front-runner in number of people donating, which makes sense, since he is not competeing with any other democratic nominees. Let's take a look at the total dollar amounts.","f3307792":"### 4.1 Who was being polled and what was their party affiliation?\u3000\u3000\u3000  \n\n\nLet's go ahead and get a quick visualization overview of the affiliation for the polls.","bc0003a1":"Looks like we are overall relatively neutral, but still leaning towards Democratic Affiliation, it will be good to keep this in mind. Let's see if sorting by the Population hue gives us any further insight into the data.","59331153":"Looks like we have some negative values, as well as some huge donation amounts! The negative values are due to the FEC recording refunds as well as donations, let's go ahead and only look at the positive contribution amounts","85bd7cee":"### 7.4 What were the demographics of the donors?  \n","d50d238c":"Let's go ahead and seperate Obama from the Republican Candidates by adding a Party Affiliation column. We can do this by using map along a dictionary of party affiliations. Lecture 36 has a review of this topic.","87f288db":"While this may give you a quick idea, go ahead and try creating a new DataFrame or editing poll_df to make a better visualization of the above idea!\n\nTo lead you along the right path for plotting, we'll go ahead and answer another question related to plotting the sentiment versus time. Let's go ahead and plot out the difference between Obama and Romney and how it changes as time moves along. Remember from the last data project we used the datetime module to create timestamps, let's go ahead and use it now.","bbe73711":"## 1. Background\nThis is a learning project from udemy lesson made by Mr. Jose, most of content and codes here follow the lecture's instruction.\nCourse link: https:\/\/www.udemy.com\/course\/learning-python-for-data-analysis-and-visualization   \n\nElection Data Project - Polls and Donors\nIn this Data Project we will be looking at data from the 2012 election.\n\nIn this project we will analyze two datasets. The first data set will be the results of political polls. We will analyze this aggregated poll data and answer some questions:\n","96a52411":"### 4.2 Did the poll results favor Romney or Obama?   ","16611e82":"Looks like our intuition was right, since we spikes at the round numbers.\n\nLet's dive deeper into the data and see if we can seperate donations by Party, in order to do this we'll have to figure out a way of creating a new 'Party' column. We can do this by starting with the candidates and their affliliation. Now let's go ahead and get a list of candidates","ae13514f":"This isn't super readable, and an important aspect of data science is to clearly present information. Let's go ahead and just print out these values in a clean for loop.","f54f9664":"Awesome! Looks like CEOs are a little more conservative leaning, this may be due to the tax philosphies of each party during the election.","9eb7a301":"Here we can see that the top 10 most common donations ranged from 10 to 2500 dollars.\n\nA quick question we could verify is if donations are usually made in round number amounts? (e.g. 10,20,50,100,500 etc.) We can quickly visualize this by making a histogram and checking for peaks at those values. Let's go ahead and do this for the most common amounts, up to 2500 dollars.","add2d4d9":"Now that we have our data, we can set it as a DataFrame."}}