{"cell_type":{"6acfa54e":"code","4cc2186e":"code","9aa70d6f":"code","3041afac":"code","9ade93fd":"code","d858153c":"code","97bcf344":"code","8b9d9fc1":"code","3a92e23b":"code","93269cb7":"code","f43dbe23":"code","abb7c7d5":"code","f00dc4da":"code","a9b52266":"code","8b579295":"code","ba817cea":"code","8f2caaee":"code","8a9aea1b":"code","1e793acc":"code","f777eb09":"code","d9f915c8":"code","aee6c6db":"code","19db271e":"code","731f3272":"code","b9c5591e":"code","c1eb0e14":"code","7a66b3cd":"code","4c00287d":"code","be5c6db8":"code","11df285e":"code","e330efa9":"code","da876bfe":"code","75d5e920":"code","47d5fdf7":"code","241d6726":"code","959e070c":"code","6afe6502":"code","2c12bd2f":"code","db22ccf0":"code","999051fa":"code","1bc25243":"code","a422b8fe":"code","ec47eaa0":"code","9aa2f4be":"code","463a226b":"code","342b902b":"code","19d8196c":"code","53a7df76":"code","cab28b33":"code","9cba6218":"code","d0fb5d18":"code","fae9ae78":"code","dc6d2122":"code","6ef90e49":"code","4207791e":"code","714cebd5":"code","eb2b63bc":"code","02ffc927":"code","7c169aeb":"code","81511823":"code","6ce0b408":"code","deb763f7":"code","67b03eb1":"code","25c61261":"markdown","25fe70f6":"markdown","bf9953f8":"markdown","f0951c1a":"markdown","0aabfcdd":"markdown","22f02c87":"markdown","a46f21df":"markdown","bf5db319":"markdown","b92fa50b":"markdown","f473d9e0":"markdown","13596624":"markdown","b88fc08d":"markdown","04854ea9":"markdown","5746293f":"markdown","1521112c":"markdown","14710e48":"markdown","88cc8d2b":"markdown","e8bd056a":"markdown","8c0dcbfe":"markdown","5096389a":"markdown","699e3713":"markdown","68a833cb":"markdown","0fae16bf":"markdown","a7329a08":"markdown","df39f279":"markdown","e70ea48e":"markdown","01403218":"markdown","3c023150":"markdown","bf355b83":"markdown","c75e0a3e":"markdown","74999725":"markdown","5608eb60":"markdown","eca12040":"markdown","565c9bd4":"markdown","022d8ddc":"markdown","5c3b2c7d":"markdown","9c864a5b":"markdown","b21489bd":"markdown","72246963":"markdown","85e26682":"markdown","7402245c":"markdown","fd9a0743":"markdown","da491c8c":"markdown","965a9f40":"markdown","4ce880d7":"markdown","a14cd541":"markdown","65c3eb70":"markdown","fb31805b":"markdown","27e29539":"markdown","725f98af":"markdown","b184db23":"markdown","00e2f9f6":"markdown","4eaa060c":"markdown","37980474":"markdown","31eb6149":"markdown","92ea6cd5":"markdown","c24fbf27":"markdown","d8151c50":"markdown","f0a7c45c":"markdown","80238acb":"markdown","9a9b5c9c":"markdown"},"source":{"6acfa54e":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom PIL import  Image\n%matplotlib inline\n\nplt.figure(figsize=(15,10))\nimg = np.array(Image.open(r\"..\/input\/fifa-img-cup\/2014_20th_fifa_world_cup-wallpaper-1366x768.jpg\"))\nplt.imshow(img,interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","4cc2186e":"#importing libraries\nimport pandas as pd\nimport seaborn as sns\nimport itertools\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom wordcloud import WordCloud,STOPWORDS\nimport io\nimport base64\nfrom matplotlib import rc,animation\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom mpl_toolkits.basemap import Basemap\nimport folium\nimport folium.plugins\nimport os\n#print(os.listdir(\"..\/input\"))\n","9aa70d6f":"matches  = pd.read_csv(r\"..\/input\/fifa-world-cup\/WorldCupMatches.csv\")\nplayers  = pd.read_csv(r\"..\/input\/fifa-world-cup\/WorldCupPlayers.csv\")\ncups     = pd.read_csv(r\"..\/input\/fifa-world-cup\/WorldCups.csv\")\ndisplay(\"MATCHES - DATA\")\ndisplay(matches.head(3))\ndisplay(\"PLAYERS - DATA\")\ndisplay(players.head(3))\ndisplay(\"WORLD CUPS - DATA\")\ndisplay(cups.head(3))","3041afac":"matches.isnull().sum()\nsns.set_style(\"darkgrid\")\n\n#removing duplicate rows for match id column \nmatches = matches.drop_duplicates(subset=\"MatchID\",keep=\"first\")\n\n#remob=ving null values\nmatches = matches[matches[\"Year\"].notnull()]\n\natt = matches.groupby(\"Year\")[\"Attendance\"].sum().reset_index()\natt[\"Year\"] = att[\"Year\"].astype(int)\nplt.figure(figsize=(12,7))\nsns.barplot(att[\"Year\"],att[\"Attendance\"],linewidth=1,edgecolor=\"k\"*len(att))\nplt.grid(True)\nplt.title(\"Attendence by year\",color='b')\nplt.show()","9ade93fd":"att1 = matches.groupby(\"Year\")[\"Attendance\"].mean().reset_index()\natt1[\"Year\"] = att1[\"Year\"].astype(int)\nplt.figure(figsize=(12,7))\nax = sns.pointplot(att1[\"Year\"],att1[\"Attendance\"],color=\"w\")\nax.set_facecolor(\"k\")\nplt.grid(True,color=\"grey\",alpha=.3)\nplt.title(\"Average attendence by year\",color='b')\nplt.show()","d858153c":"plt.figure(figsize=(13,7))\ncups[\"Year1\"] = cups[\"Year\"].astype(str)\nax = plt.scatter(\"Year1\",\"GoalsScored\",data=cups,\n            c=cups[\"GoalsScored\"],cmap=\"inferno\",\n            s=900,alpha=.7,\n            linewidth=2,edgecolor=\"k\",)\n\n#plt.colorbar()\nplt.xticks(cups[\"Year1\"].unique())\nplt.yticks(np.arange(60,200,20))\nplt.title('Total goals scored by year',color='b')\nplt.xlabel(\"year\")\nplt.ylabel(\"total goals scored\")\nplt.show()\n","97bcf344":"plt.figure(figsize=(12,7))\nsns.barplot(cups[\"Year\"],cups[\"MatchesPlayed\"],linewidth=1,\n            edgecolor=\"k\"*len(cups),color=\"b\",label=\"Total matches played\")\nsns.barplot(cups[\"Year\"],cups[\"QualifiedTeams\"],linewidth=1,\n            edgecolor=\"k\"*len(cups),color=\"r\",label=\"Total qualified teams\")\nplt.legend(loc=\"best\",prop={\"size\":13})\nplt.title(\"Qualified teams by year\",color='b')\nplt.grid(True)\nplt.ylabel(\"total matches and qualified teams by year\")\nplt.show()","8b9d9fc1":"h_att = matches.sort_values(by=\"Attendance\",ascending=False)[:10]\nh_att = h_att[['Year', 'Datetime','Stadium', 'City', 'Home Team Name',\n              'Home Team Goals', 'Away Team Goals', 'Away Team Name', 'Attendance', 'MatchID']]\nh_att[\"Stadium\"] = h_att[\"Stadium\"].replace('Maracan\ufffd - Est\ufffddio Jornalista M\ufffdrio Filho',\"Maracan\u00e3 Stadium\")\nh_att[\"Datetime\"] = h_att[\"Datetime\"].str.split(\"-\").str[0]\nh_att[\"mt\"] = h_att[\"Home Team Name\"] + \" .Vs.  \" + h_att[\"Away Team Name\"]\n\nplt.figure(figsize=(10,9))\nax = sns.barplot(y =h_att[\"mt\"],x = h_att[\"Attendance\"],palette=\"gist_ncar\",\n                 linewidth = 1,edgecolor=\"k\"*len(h_att))\nplt.ylabel(\"match teams\")\nplt.xlabel(\"Attendance\")\nplt.title(\"Matches with highest number of attendace\",color='b')\nplt.grid(True)\nfor i,j in enumerate(\" stadium : \"+h_att[\"Stadium\"]+\" , Date :\" + h_att[\"Datetime\"]):\n    ax.text(.7,i,j,fontsize = 12,color=\"white\",weight = \"bold\")\nplt.show()","3a92e23b":"matches[\"Year\"] = matches[\"Year\"].astype(int)\nmatches[\"Datetime\"] = matches[\"Datetime\"].str.split(\"-\").str[0]\n\n\nmatches[\"Stadium\"] = matches[\"Stadium\"].str.replace('Estadio do Maracana',\"Maracan\u00e3 Stadium\")\nmatches[\"Stadium\"] = matches[\"Stadium\"].str.replace('Maracan\ufffd - Est\ufffddio Jornalista M\ufffdrio Filho',\"Maracan\u00e3 Stadium\")\nstd  = matches.groupby([\"Stadium\",\"City\"])[\"Attendance\"].mean().reset_index().sort_values(by = \"Attendance\",ascending =False)\n\n\nplt.figure(figsize=(8,9))\nax = sns.barplot(y = std[\"Stadium\"][:14],x = std[\"Attendance\"][:14],palette=\"cool\",\n                 linewidth=1,edgecolor = \"k\"*14)\nplt.grid(True)\n\nfor i,j in enumerate(\"  City : \" + std[\"City\"][:14]):\n    ax.text(.7,i,j,fontsize=14)\n\nplt.title(\"Stadiums with highest average attendance\",color='b')\nplt.show()\n","93269cb7":"mat_c = matches[\"City\"].value_counts().reset_index()\nplt.figure(figsize=(10,8))\nax = sns.barplot(y=mat_c[\"index\"][:15],x = mat_c[\"City\"][:15],palette=\"plasma\",\n                 linewidth=1,edgecolor=\"k\"*15)\nplt.xlabel(\"number of matches\")\nplt.ylabel(\"City\")\nplt.grid(True)\nplt.title(\"Cities with maximum world cup matches\",color='b')\n\nfor i,j in enumerate(\"Matches  :\" + mat_c[\"City\"][:15].astype(str)):\n    ax.text(.7,i,j,fontsize = 13,color=\"w\")\nplt.show()","f43dbe23":"ct_at = matches.groupby(\"City\")[\"Attendance\"].mean().reset_index()\nct_at = ct_at.sort_values(by=\"Attendance\",ascending=False)\nct_at\n\nplt.figure(figsize=(10,10))\n\nax = sns.barplot(\"Attendance\",\"City\",\n            data=ct_at[:20],\n            linewidth = 1,\n            edgecolor = \"k\"*20,\n            palette  = \"Spectral_r\")\n\nfor i,j in enumerate(\" Average attendance  : \"+np.around(ct_at[\"Attendance\"][:20],0).astype(str)):\n    ax.text(.7,i,j,fontsize=12)\nplt.grid(True)\n\nplt.title(\"Average attendance by city\",color='b')\nplt.show()\n","abb7c7d5":"cups[\"Winner\"]=cups[\"Winner\"].replace(\"Germany FR\",\"Germany\")\ncups[\"Runners-Up\"]=cups[\"Runners-Up\"].replace(\"Germany FR\",\"Germany\")\nc1  = cups.groupby(\"Winner\")[\"Year1\"].apply(\" , \".join).reset_index()\nc2  = cups.groupby(\"Winner\")['Year'].count().reset_index()\nc12 = c1.merge(c2,left_on=\"Winner\",right_on=\"Winner\",how=\"left\")\nc12 = c12.sort_values(by = \"Year\",ascending =False)\n\nplt.figure(figsize=(10,8))\nax = sns.barplot(\"Year\",\"Winner\",data=c12,\n            palette=\"jet_r\",\n            alpha=.8,\n            linewidth=2,\n            edgecolor=\"k\"*len(c12))\nfor i,j in enumerate(\"Years : \" + c12[\"Year1\"]):\n    ax.text(.1,i,j,weight = \"bold\")\n\nplt.title(\"Teams with the most world cup final victories\")\nplt.grid(True)\nplt.xlabel(\"count\")\nplt.show()","f00dc4da":"cou = cups[\"Winner\"].value_counts().reset_index()\ncou_w = cou.copy()\ncou_w.columns = [\"country\",\"count\"]\ncou_w[\"type\"] = \"WINNER\"\n\ncou_r = cups[\"Runners-Up\"].value_counts().reset_index()\ncou_r.columns = [\"country\",\"count\"]\ncou_r[\"type\"] = \"RUNNER - Up\"\n\ncou_t = pd.concat([cou_w,cou_r],axis=0)\n\nplt.figure(figsize=(8,10))\nsns.barplot(\"count\",\"country\",data=cou_t,\n            hue=\"type\",palette=[\"lime\",\"r\"],\n            linewidth=1,edgecolor=\"k\"*len(cou_t))\nplt.grid(True)\nplt.legend(loc=\"center right\",prop={\"size\":14})\nplt.title(\"Final results by nation\",color='b')\nplt.show()","a9b52266":"thrd = cups[\"Third\"].value_counts().reset_index()\nthrd.columns = [\"team\",\"count\"]\nthrd[\"type\"] = \"THIRD PLACE\"\n\nfrth = cups[\"Fourth\"].value_counts().reset_index()\nfrth.columns = [\"team\",\"count\"]\nfrth[\"type\"] = \"FOURTH PLACE\"\n\nplcs = pd.concat([thrd,frth],axis=0)\n\nplt.figure(figsize=(10,10))\nsns.barplot(\"count\",\"team\",data=plcs,hue=\"type\",\n           linewidth=1,edgecolor=\"k\"*len(plcs),\n           palette = [\"grey\",\"r\"])\nplt.grid(True)\nplt.xticks(np.arange(0,4,1))\nplt.title(\" World cup final result for third and fourth place by nation\",color='b')\nplt.legend(loc=\"center right\",prop={\"size\":12})\nplt.show()","8b579295":"matches[\"Home Team Name\"] = matches[\"Home Team Name\"].str.replace('rn\">United Arab Emirates',\"United Arab Emirates\")\nmatches[\"Home Team Name\"] = matches[\"Home Team Name\"].str.replace(\"C\ufffdte d'Ivoire\",\"C\u00f4te d\u2019Ivoire\")\nmatches[\"Home Team Name\"] = matches[\"Home Team Name\"].str.replace('rn\">Republic of Ireland',\"Republic of Ireland\")\nmatches[\"Home Team Name\"] = matches[\"Home Team Name\"].str.replace('rn\">Bosnia and Herzegovina',\"Bosnia and Herzegovina\")\nmatches[\"Home Team Name\"] = matches[\"Home Team Name\"].str.replace('rn\">Serbia and Montenegro',\"Serbia and Montenegro\")\nmatches[\"Home Team Name\"] = matches[\"Home Team Name\"].str.replace('rn\">Trinidad and Tobago',\"Trinidad and Tobago\")\nmatches[\"Home Team Name\"] = matches[\"Home Team Name\"].str.replace(\"Soviet Union\",\"Russia\")\nmatches[\"Home Team Name\"] = matches[\"Home Team Name\"].str.replace(\"Germany FR\",\"Germany\")\n\nmatches[\"Away Team Name\"] = matches[\"Away Team Name\"].str.replace('rn\">United Arab Emirates',\"United Arab Emirates\")\nmatches[\"Away Team Name\"] = matches[\"Away Team Name\"].str.replace(\"C\ufffdte d'Ivoire\",\"C\u00f4te d\u2019Ivoire\")\nmatches[\"Away Team Name\"] = matches[\"Away Team Name\"].str.replace('rn\">Republic of Ireland',\"Republic of Ireland\")\nmatches[\"Away Team Name\"] = matches[\"Away Team Name\"].str.replace('rn\">Bosnia and Herzegovina',\"Bosnia and Herzegovina\")\nmatches[\"Away Team Name\"] = matches[\"Away Team Name\"].str.replace('rn\">Serbia and Montenegro',\"Serbia and Montenegro\")\nmatches[\"Away Team Name\"] = matches[\"Away Team Name\"].str.replace('rn\">Trinidad and Tobago',\"Trinidad and Tobago\")\nmatches[\"Away Team Name\"] = matches[\"Away Team Name\"].str.replace(\"Germany FR\",\"Germany\")\nmatches[\"Away Team Name\"] = matches[\"Away Team Name\"].str.replace(\"Soviet Union\",\"Russia\")\n\nht = matches[\"Home Team Name\"].value_counts().reset_index()\nht.columns = [\"team\",\"matches\"]\nat = matches[\"Away Team Name\"].value_counts().reset_index()\nat.columns = [\"team\",\"matches\"]\nmt = pd.concat([ht,at],axis=0)\nmt = mt.groupby(\"team\")[\"matches\"].sum().reset_index().sort_values(by=\"matches\",ascending=False)\n\nplt.figure(figsize=(10,13))\nax = sns.barplot(\"matches\",\"team\",data=mt[:25],palette=\"gnuplot_r\",\n                 linewidth=1,edgecolor=\"k\"*25)\nplt.grid(True)\nplt.title(\"Teams with the most matches\",color='b')\nfor i,j in enumerate(\"Matches played  : \" + mt[\"matches\"][:25].astype(str)):\n    ax.text(.7,i,j,fontsize=12,color=\"white\")","ba817cea":"hy = matches[[\"Year\",\"Home Team Name\"]]\nhy.columns = [\"year\",\"team\"]\nhy[\"type\"] = \"HOME TEAM\"\nay = matches[[\"Year\",\"Away Team Name\"]]\nay.columns = [\"year\",\"team\"]\nay[\"type\"] = \"AWAY TEAM\"\n\nhome_away = pd.concat([hy,ay],axis=0)\nyt = home_away.groupby([\"year\",\"team\"]).count().reset_index()\nyt = yt[\"team\"].value_counts().reset_index()\n\nplt.figure(figsize=(10,8))\nax = sns.barplot(\"team\",\"index\",data=yt[:15],\n                 linewidth=1,edgecolor=\"k\"*15)\n\nfor i,j in enumerate(\"Particpated \" + yt[\"team\"][:15].astype(str) + \" times\"):\n    ax.text(.7,i,j,fontsize=14,color=\"k\")\nplt.grid(True)\n    \nplt.title(\"Teams with the most tournament participations\",color='b')\nplt.ylabel(\"team\")\nplt.xlabel(\"count\")\nplt.xticks(np.arange(0,22,2))\nplt.show()","8f2caaee":"plt.figure(figsize=(12,13))\nplt.subplot(211)\nsns.distplot(matches[\"Home Team Goals\"],color=\"b\",rug=True)\nplt.xticks(np.arange(0,12,1))\nplt.title(\"Distribution of Home Team Goals\",color='b')\n\n\nplt.subplot(212)\nsns.distplot(matches[\"Away Team Goals\"],color=\"r\",rug=True)\nplt.xticks(np.arange(0,9,1))\nplt.title(\"Distribution of Away Team Goals\",color='b')\nplt.show()","8a9aea1b":"plt.figure(figsize=(12,15))\nmatches = matches.rename(columns={'Half-time Home Goals':\"first half home goals\",\n                                  'Half-time Away Goals':\"first half away goals\"})\n\nmatches[\"second half home goals\"] = matches[\"Home Team Goals\"] - matches[\"first half home goals\"]\nmatches[\"second half away goals\"] = matches[\"Away Team Goals\"] - matches[\"first half away goals\"]\n\nplt.subplot(211)\nsns.kdeplot(matches[\"first half home goals\"],color=\"b\",linewidth=2)\nsns.kdeplot(matches[\"second half home goals\"],color=\"r\",linewidth=2)\nplt.xticks(np.arange(0,9,1))\nplt.title(\"Distribution of first and second Half - Home Team Goals\",color='b')\n\nplt.subplot(212)\nsns.kdeplot(matches[\"first half away goals\"],color=\"b\",linewidth=2)\nsns.kdeplot(matches[\"second half away goals\"],color=\"r\",linewidth=2)\nplt.xticks(np.arange(0,9,1))\nplt.title(\"Distribution of first and second Half - Away Team Goals\",color='b')\nplt.show()","1e793acc":"gh = matches[[\"Year\",\"Home Team Goals\"]]\ngh.columns = [\"year\",\"goals\"]\ngh[\"type\"] = \"Home Team Goals\"\n\nga = matches[[\"Year\",\"Away Team Goals\"]]\nga.columns = [\"year\",\"goals\"]\nga[\"type\"] = \"Away Team Goals\"\n\ngls = pd.concat([ga,gh],axis=0)\n\nplt.figure(figsize=(13,8))\nsns.violinplot(gls[\"year\"],gls[\"goals\"],\n               hue=gls[\"type\"],split=True,inner=\"quart\",palette=\"husl\")\nplt.grid(True)\nplt.title(\"Home and away goals by year\",color='b')\nplt.show()","f777eb09":"hhg = matches[[\"Year\",'first half home goals']]\nhhg.columns = [\"year\",\"goals\"]\nhhg[\"type\"] = 'first half home goals'\n\nhag = matches[[\"Year\",'first half away goals']]\nhag.columns = [\"year\",\"goals\"]\nhag[\"type\"] = 'first half away goals'\n\nh_time = pd.concat([hhg,hag],axis=0)\n\nplt.figure(figsize=(13,8))\nsns.violinplot(h_time[\"year\"],h_time[\"goals\"],\n               hue=h_time[\"type\"],\n               split=True,inner=\"quart\",\n               palette=\"gist_ncar\")\nplt.grid(True)\nplt.title(\" first half  home and away goals by year\",color='b')\nplt.show()","d9f915c8":"shg = matches[[\"Year\",'second half home goals']]\nshg.columns = [\"year\",\"goals\"]\nshg[\"type\"] = 'second half home goals'\n\nsag = matches[[\"Year\",'second half away goals']]\nsag.columns = [\"year\",\"goals\"]\nsag[\"type\"] = 'second half away goals'\n\ns_time = pd.concat([shg,sag],axis=0)\n\nplt.figure(figsize=(13,8))\nsns.violinplot(s_time[\"year\"],s_time[\"goals\"],\n               hue=s_time[\"type\"],\n               split=True,inner=\"quart\",\n               palette=\"gist_ncar\")\nplt.title(\"second half home and away goals by year\",color='b')\nplt.grid(True)\nplt.show()","aee6c6db":"def label(matches):\n    if matches[\"Home Team Goals\"] > matches[\"Away Team Goals\"]:\n        return \"Home team win\"\n    if matches[\"Away Team Goals\"] > matches[\"Home Team Goals\"]:\n        return \"Away team win\"\n    if matches[\"Home Team Goals\"] == matches[\"Away Team Goals\"]:\n        return \"DRAW\"\n\nmatches[\"outcome\"] = matches.apply(lambda matches:label(matches),axis=1)\nplt.figure(figsize=(9,9))\nmatches[\"outcome\"].value_counts().plot.pie(autopct=\"%1.0f%%\",fontsize =14,\n                                           colors = sns.color_palette(\"husl\"),\n                                           wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},\n                                           shadow=True)\ncirc = plt.Circle((0,0),.7,color=\"white\")\nplt.gca().add_artist(circ)\nplt.title(\"# Match outcomes by home and away teams\",color='b')\nplt.show()","19db271e":"matches[['Home Team Name','Home Team Goals', 'Away Team Goals', 'Away Team Name',\"outcome\"]]\n\n\ndef win_label(matches):\n    if matches[\"Home Team Goals\"] > matches[\"Away Team Goals\"]:\n        return matches[\"Home Team Name\"]\n    if matches[\"Home Team Goals\"] < matches[\"Away Team Goals\"]:\n        return matches[\"Away Team Name\"]\n    if matches[\"Home Team Goals\"] == matches[\"Away Team Goals\"]:\n        return \"DRAW\"\n    \ndef lst_label(matches):\n    if matches[\"Home Team Goals\"] < matches[\"Away Team Goals\"]:\n        return matches[\"Home Team Name\"]\n    if matches[\"Home Team Goals\"] > matches[\"Away Team Goals\"]:\n        return matches[\"Away Team Name\"]\n    if matches[\"Home Team Goals\"] == matches[\"Away Team Goals\"]:\n        return \"DRAW\"\n    \nmatches[\"win_team\"]  = matches.apply(lambda matches:win_label(matches),axis=1)\nmatches[\"lost_team\"] = matches.apply(lambda matches:lst_label(matches),axis=1)\nlst = matches[\"lost_team\"].value_counts().reset_index()\nwin = matches[\"win_team\"].value_counts().reset_index()\nwl  = win.merge(lst,left_on=\"index\",right_on=\"index\",how=\"left\")\nwl = wl[wl[\"index\"] != \"DRAW\"]\nwl.columns  = [\"team\",\"wins\",\"loses\"]\n","731f3272":"wl1 = wl.copy()\nwl1 = wl1.merge(mt,left_on=\"team\",right_on=\"team\",how=\"left\")\nwl1[\"draws\"] = wl1[\"matches\"]-(wl1[\"wins\"]+wl1[\"loses\"])\nwl1.index = wl1.team\nwl1 = wl1.sort_values(by=\"wins\",ascending=True)\nwl1[[\"wins\",\"draws\",\"loses\"]].plot(kind=\"barh\",stacked=True,figsize=(10,17),\n                                 colors=[\"lawngreen\",\"royalblue\",\"r\"],\n                                  linewidth=1,edgecolor=\"k\"*len(wl1))\nplt.legend(loc=\"center right\",prop={\"size\":20})\nplt.xticks(np.arange(0,120,5))\nplt.title(\"Match outcomes by countries\",color='b')\nplt.xlabel(\"matches played\")\nplt.show()","b9c5591e":"cols = [ 'wins', 'loses', 'draws']\nlength = len(cols)\n\nplt.figure(figsize=(8,18))\nfor i,j in itertools.zip_longest(cols,range(length)):\n    plt.subplot(3,1,j+1)\n    ax = sns.barplot(i,\"team\",data=wl1.sort_values(by=i,ascending=False)[:10],\n                     linewidth=1,edgecolor=\"k\"*10,palette=\"husl\")\n    for k,l in enumerate(wl1.sort_values(by=i,ascending=False)[:10][i]):\n        ax.text(.7,k,l,fontsize=13)\n    \n    plt.grid(True)\n    plt.title(\"Countries with maximum \"+i,color='b')","c1eb0e14":"tt_gl_h = matches.groupby(\"Home Team Name\")[\"Home Team Goals\"].sum().reset_index()\ntt_gl_h.columns = [\"team\",\"goals\"]\n\ntt_gl_a = matches.groupby(\"Away Team Name\")[\"Away Team Goals\"].sum().reset_index()\ntt_gl_a.columns = [\"team\",\"goals\"]\n\ntotal_goals = pd.concat([tt_gl_h,tt_gl_a],axis=0)\ntotal_goals = total_goals.groupby(\"team\")[\"goals\"].sum().reset_index()\ntotal_goals = total_goals.sort_values(by=\"goals\",ascending =False)\ntotal_goals[\"goals\"] = total_goals[\"goals\"].astype(int)\n\nplt.figure(figsize=(10,12))\nax= sns.barplot(\"goals\",\"team\",data=total_goals[:20],palette=\"cool\",\n                linewidth=1,edgecolor=\"k\"*20)\n\nfor i,j in enumerate(\"SCORED  \" +total_goals[\"goals\"][:20].astype(str) + \"  GOALS\"):\n    ax.text(.7,i,j,fontsize = 10,color=\"k\")\n\nplt.title(\"Teams with highest fifa world cup goals\",color='b')\nplt.grid(True)\nplt.show()","7a66b3cd":"matches[\"total_goals\"] = matches[\"Home Team Goals\"] + matches[\"Away Team Goals\"]\nhig_gl = matches.sort_values(by=\"total_goals\",ascending =False)[:15][['Year', 'Datetime', 'Stage', 'Stadium', 'City', 'Home Team Name',\n                                                                  'Home Team Goals', 'Away Team Goals', 'Away Team Name',\"total_goals\"]]\nhig_gl[\"match\"] = hig_gl[\"Home Team Name\"] + \" .Vs. \" + hig_gl['Away Team Name']\nhig_gl.index = hig_gl[\"match\"]\nhig_gl = hig_gl.sort_values(by=\"total_goals\",ascending =True)\nax= hig_gl[[\"Home Team Goals\",\"Away Team Goals\"]].plot(kind=\"barh\",stacked=True,\n                                                       figsize=(10,12),linewidth=2,\n                                                       edgecolor=\"w\"*15)\n\nplt.ylabel(\"home team vs away team\",color=\"b\")\nplt.xlabel(\"goals\",color=\"b\")\nplt.title(\"Highest total goals scored during a match \",color='b')\n\nfor i,j in enumerate(\"Date  : \" + hig_gl[\"Datetime\"]):\n    ax.text(.7,i,j,color=\"w\",fontsize=11)\n    \nplt.show()","4c00287d":"plt.figure(figsize=(13,8))\nsns.boxplot(y=matches[\"total_goals\"],\n            x=matches[\"Year\"])\nplt.grid(True)\nplt.title(\"Total goals scored during game by year\",color='b')\nplt.show()\n","be5c6db8":"#TEAM COMPARATOR\nmatches_played = mt.copy()\nmat_new = matches_played.merge(lst,left_on=\"team\",right_on=\"index\",how=\"left\")\nmat_new = mat_new.merge(win,left_on=\"team\",right_on=\"index\",how=\"left\")\nmat_new = mat_new[[\"team\",\"matches\",\"lost_team\",\"win_team\"]]\nmat_new = mat_new.fillna(0)\nmat_new[\"win_team\"] = mat_new[\"win_team\"].astype(int)\nmat_new[\"draws\"]    = (mat_new[\"matches\"]) - (mat_new[\"lost_team\"] + mat_new[\"win_team\"])\nmat_new = mat_new.merge(total_goals,left_on=\"team\",right_on=\"team\",how=\"left\")\nmat_new = mat_new.rename(columns={\"win_team\":\"wins\",\"lost_team\":\"loses\"})\n\ndef team_compare(team1,team2):\n    \n    lst = [team1,team2]\n    dat = mat_new[mat_new[\"team\"].isin(lst)]\n    \n    plt.figure(figsize=(12,10))\n    cols   = [\"matches\",\"goals\",\"wins\",\"loses\",\"draws\"]\n    length = len(cols)\n    \n    for i,j in itertools.zip_longest(cols,range(length)):\n        \n        fig = plt.subplot(3,2,j+1)\n        ax  = sns.barplot(dat[i],dat[\"team\"],palette=[\"royalblue\",\"r\"],\n                         linewidth=2,edgecolor=\"k\"*len(lst))\n        plt.ylabel(\"\")\n        plt.yticks(fontsize=13)\n        plt.grid(True,color=\"grey\",alpha=.3)\n        plt.title(i,color=\"b\",fontsize=15)\n        plt.subplots_adjust(wspace = .3,hspace =.5)\n        fig.set_facecolor(\"w\")\n        \n        for k,l in enumerate(dat[i].values):\n            ax.text(.7,k,l,weight = \"bold\",fontsize = 20)\n            ","11df285e":"team_compare(\"Portugal\",\"Argentina\")","e330efa9":"team_compare(\"France\",\"Croatia\")","da876bfe":"team_compare(\"Italy\",\"Spain\")","75d5e920":"team_compare(\"Brazil\",\"Germany\")","47d5fdf7":"ref = matches[\"Referee\"].value_counts().reset_index()\nref = ref.sort_values(by=\"Referee\",ascending=False)\n\nplt.figure(figsize=(10,10))\nsns.barplot(\"Referee\",\"index\",data=ref[:20],linewidth=1,edgecolor=\"k\"*20)\nplt.xlabel(\"count\")\nplt.ylabel(\"Refree name\")\nplt.grid(True)\nplt.title(\"Referee's with most matches\",color='b')\nplt.show()","241d6726":"mat_new[\"goals_per_match\"] = mat_new[\"goals\"] \/ mat_new[\"matches\"]\ncou_lst = mat_new.sort_values(by=\"wins\",ascending=False)[:15][\"team\"].tolist()\ncou_gpm = mat_new[mat_new[\"team\"].isin(cou_lst)]\ncou_gpm = cou_gpm.sort_values(by=\"goals_per_match\",ascending=False)\n\nplt.figure(figsize=(10,8))\nax = sns.barplot(\"goals_per_match\",\"team\",\n                 linewidth=1,\n                 edgecolor=[\"k\"]*len(cou_gpm),\n                 data=cou_gpm,\n                 palette=\"Spectral\")\n\nfor i,j in enumerate(np.round(cou_gpm[\"goals_per_match\"],2).astype(str) + \"  Goals per game\"):\n    ax.text(.1,i,j,color=\"k\",weight = \"bold\")\n    \nplt.grid(True)\nplt.title(\"Goals per match for countries with highest wins\",color='b')\nplt.show()","959e070c":"import networkx as nx \n\ndef interactions(year,color):\n    \n    df  =  matches[matches[\"Year\"] == year][[\"Home Team Name\",\"Away Team Name\"]]\n    G   = nx.from_pandas_dataframe(df,\"Home Team Name\",\"Away Team Name\")\n    \n    plt.figure(figsize=(10,9))\n    \n    nx.draw_kamada_kawai(G,with_labels = True,\n                         node_size  = 2500,\n                         node_color = color,\n                         node_shape = \"h\",\n                         edgecolor  = \"k\",\n                         linewidths  = 5 ,\n                         font_size  = 13 ,\n                         alpha=.8)\n    \n    plt.title(\"Interaction between teams :\" + str(year) , fontsize =13 , color = \"b\")\n    ","6afe6502":"interactions(2014,\"r\")","2c12bd2f":"interactions(1994,\"royalblue\")","db22ccf0":"interactions(1950,\"lawngreen\")","999051fa":"interactions(1930,\"Orange\")","1bc25243":"ysc = matches[[\"Year\",\"Stadium\",\"City\",\"MatchID\"]]\ncy  = cups[[\"Year\",\"Country\"]]\nysc = ysc.merge(cy,left_on=\"Year\",right_on=\"Year\",how=\"left\")\n#ysc[\"Stadium\"] = ysc[\"Stadium\"].str.split(\",\").str[0]\nysc[\"std_cty\"] = ysc[\"Stadium\"] +\" , \"+ ysc[\"City\"]\n\ncnt_mat  =  ysc.groupby(\"Country\")[\"MatchID\"].nunique().reset_index()\ncnt_mat  =  cnt_mat.sort_values(by= \"MatchID\",ascending=False)\ncnt_mat\n\n\nplt.figure(figsize=(10,8))\n\nax = sns.barplot(\"MatchID\",\"Country\",\n                data=cnt_mat,\n                linewidth=1,\n                edgecolor=\"k\"*cnt_mat[\"Country\"].nunique())\n\nfor i,j in enumerate(\"Matches : \" + cnt_mat[\"MatchID\"].astype(str)):\n    ax.text(.7 ,i,j)\n\nplt.title(\"Total world cup matches played in each country\",color='b')\nplt.grid(True)\nplt.xlabel(\"matches\")\nplt.show()","a422b8fe":"ysc[\"Country_yr\"] = ysc[\"Country\"] + \" - \" + ysc[\"Year\"].astype(str)\n\n\ndef stadium_country(country,color):\n    \n    dat2 = ysc[ysc[\"Country\"] == country]\n    \n    plt.figure(figsize=(10,8))\n\n    H = nx.from_pandas_dataframe(dat2,\"Country\",\"Stadium\")\n\n    nx.draw_kamada_kawai(H,\n                         with_labels=True,\n                         node_size  = 2500,\n                         node_color = color,\n                         node_shape = \"s\",\n                         edgecolor  = \"k\",\n                         linewidths  = 7 ,\n                         font_size  = 13 ,\n                         alpha=.8,\n                         weight = \"bold\")","ec47eaa0":"stadium_country(\"Germany\",\"c\")","9aa2f4be":"stadium_country(\"Brazil\",\"b\")","463a226b":"stadium_country(\"Mexico\",\"r\")","342b902b":"stadium_country(\"USA\",\"grey\")","19d8196c":"wrds = players[\"Player Name\"].value_counts().keys()\n\nwc = WordCloud(scale=5,max_words=1000,colormap=\"rainbow\").generate(\" \".join(wrds))\nplt.figure(figsize=(13,14))\nplt.imshow(wc,interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.title(\"Player names - word cloud\",color='b')\nplt.show()","53a7df76":"wrds1 = players[\"Coach Name\"].str.split(\"(\").str[0].value_counts().keys()\n\nwc1 = WordCloud(scale=5,max_words=1000,colormap=\"rainbow\",background_color=\"black\").generate(\" \".join(wrds1))\nplt.figure(figsize=(13,14))\nplt.imshow(wc1,interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.title(\"Coach names- word cloud\",color='b')\nplt.show()","cab28b33":"win_conditions = matches[matches[\"Win conditions\"] != \" \"]\nextra_time    = win_conditions[win_conditions[\"Win conditions\"].str.contains(\"extra time\")]\npenalties     = win_conditions[win_conditions[\"Win conditions\"].str.contains(\"penalties\")]\n\ngold_goal     = win_conditions[win_conditions[\"Win conditions\"].str.contains(\"Golden Goal\")]\ngold_goal.index  = gold_goal[\"MatchID\"].astype(int)\n\ngg= gold_goal[[\"Datetime\",\"Stage\",\"Home Team Name\",\n              \"Away Team Name\",\"Home Team Goals\",\n              \"Away Team Goals\",\"first half home goals\",\n              \"second half home goals\",\"win_team\",\"Win conditions\"]].transpose()\ngg.style.set_properties(**{\"background-color\":\"black\",\n                           \"color\" : \"white\",\n                           \"border-color\" : \"lawngreen\"}).set_caption(\"Matches with Golden Goals\")","9cba6218":"penalties_df = pd.read_csv(r\"..\/input\/penalties\/penalties.csv\", encoding='iso-8859-1')\n\n\ndef clean(data):\n    data[\"F\"] = data[\"F\"].str.replace(\"\u0096\",\"-\")\n    data[\"S\"] = data[\"S\"].str.replace(\"\u0096\",\"-\")\n    data[\"Winner\"] = data[\"Winner\"].str.replace(\"West Germany\",\"Germany\")\n    data[\"winner_penalties\"] = data[\"S\"].str.split(\"-\").str[0]\n    data[\"loser_penalties\"]  = data[\"S\"].str.split(\"-\").str[1]\n    data[\"Date\"]   = pd.to_datetime(data[\"Date\"],format=\"%d-%b-%y\") \n    data[\"year\"]   = pd.DatetimeIndex(data[\"Date\"]).year\n    data = data.rename(columns = {\"S\":\"penalties_scored\",\"F\":\"final_score\"})\n    return data\n\n\npenalties_df = clean(penalties_df)\n\nwin = penalties_df[\"Winner\"].value_counts().reset_index()\nwin.columns = [\"team\",\"count\"]\n\nlos = penalties_df[\"Loser\"].value_counts().reset_index()\nlos.columns = [\"team\",\"count\"]\n\nprint (\"Total matches with penalties :  \" ,penalties_df.shape[0])","d0fb5d18":"yr_pl = penalties_df[\"year\"].value_counts().reset_index()\nyr_pl.columns = [\"year\",\"count\"]\nyr_pl = yr_pl.sort_values(by=\"year\",ascending=True)\nyr_pl\n\nplt.figure(figsize=(10,6))\nfig = sns.pointplot(\"year\",\"count\",color=\"w\",\n                      data=yr_pl)\nplt.yticks(np.arange(0,6,1))\nplt.title(\"penalty matches by year\",color='b')\nfig.set_facecolor(\"k\")\nplt.grid(True,alpha=.4)\nplt.show()","fae9ae78":"plt.figure(figsize=(6,6))\n\npenalties_df[\"Round\"].value_counts().plot(kind=\"bar\",\n                                          linewidth =1,\n                                          figsize=(10,7),\n                                          edgecolor=\"k\"*penalties_df[\"Round\"].nunique())\nplt.xticks(rotation = 0)\nplt.title(\"Penalty matches by round\",color='b')\nplt.yticks(np.arange(0,12,1))\nplt.show()","dc6d2122":"penalties_df[penalties_df[\"Round\"] == \"Final\"].style.set_properties(**{\"background-color\":\"black\",\n                                                                       \"color\":\"yellow\",\n                                                                        \"border-color\":\"white\"}).set_caption(\"Penalty shoot outs in final\")","6ef90e49":"mst_plyd  = pd.concat([win,los],axis=0)\nmst_plyd  = mst_plyd.groupby(\"team\")[\"count\"].sum().reset_index().sort_values(by = \"count\",ascending =False)\nmst_plyd\n\nplt.figure(figsize=(9,11))\nax = sns.barplot(\"count\",\"team\",\n                 data=mst_plyd,\n                 palette = \"BuPu\",\n                 linewidth=1,\n                 edgecolor=\"k\"*len(mst_plyd))\n\nfor i,j in enumerate(\"Matches : \" + mst_plyd[\"count\"].astype(str)):\n    ax.text(.1,i,j,weight = \"bold\")\n\nplt.title(\"countries with most penalties played\",color='b')\n\nplt.grid(True)\nplt.show()","4207791e":"win\nplt.figure(figsize=(8,8))\n\nax = sns.barplot(\"count\",\"team\",\n            data=win,\n            color= \"lime\",\n            linewidth = 1,\n            edgecolor = \"k\"*len(win))\nplt.grid(True)\nplt.title(\"countries with most wins by penalties\",color='b')\nfor i,j in enumerate(\"wins  : \" + win[\"count\"].astype(str)):\n    ax.text(.1,i,j)\nplt.show()","714cebd5":"plt.figure(figsize=(8,8))\n\nax = sns.barplot(\"count\",\"team\",\n            data=los,\n            color= \"tomato\",\n            linewidth = 1,\n            edgecolor = \"k\"*len(los))\nplt.grid(True)\nplt.title(\"countries with most loses by penalties\",color='b')\nfor i,j in enumerate(\"loses  : \" + los[\"count\"].astype(str)):\n    ax.text(.1,i,j,color=\"white\")\nplt.show()","eb2b63bc":" shoot = mst_plyd.merge(win,left_on=\"team\",right_on=\"team\",how=\"left\")\nshoot = shoot.merge(los,left_on=\"team\",right_on=\"team\",how=\"left\")\nshoot = shoot.rename(columns={\"count_x\":\"matches\",\n                              \"count_y\":\"wins\",\n                              \"count\" :\"loses\"})\nshoot = shoot.fillna(0)\nshoot[\"wins\"]  = shoot[\"wins\"].astype(int)\nshoot[\"loses\"] = shoot[\"loses\"].astype(int)\nshoot.index = shoot[\"team\"]\nshoot = shoot.sort_values(by = \"matches\" ,ascending=True)\n\n\nshoot[[\"wins\",\"loses\"]].plot(kind=\"barh\",\n                             linewidth=1,\n                             colors = [\"b\",\"r\"],\n                             edgecolor = \"w\"*len(shoot),\n                             stacked = True,\n                             width=.7,\n                             figsize=(8,12))\n\nplt.legend(loc=\"center right\", prop = {\"size\" : 15})\nplt.title(\"penalties shoot out result by countries\",color='b')\nplt.yticks(color= \"k\",fontsize =12)\nplt.xlabel(\"count\")\nplt.show()","02ffc927":"cou = [\"Uruguay\",\"France\",\n       \"Brazil\" , \"Belgium\",\n       \"Sweden\" , \"England\",\n       \"Russia\" , \"Croatia\" ]\n\nqtr = mat_new[mat_new[\"team\"].isin(cou)]\n\nplt.figure(figsize=(8,8))\nax = sns.barplot(y=\"team\",x=\"goals_per_match\",\n                data=qtr,\n                linewidth=1,\n                palette = \"husl\",\n                alpha=.7,\n                edgecolor = \"k\"*len(qtr))\n\nfor i,j in enumerate(\"Goals per game : \" + np.around(qtr[\"goals_per_match\"],2).astype(str)):\n    ax.text(.1,i,j,weight = \"bold\" ,fontsize =12)\nplt.grid(True)\nplt.title(\"Goals per game for countries playing in 2018 quarter finals\")\nplt.show()","7c169aeb":"mat_new\n\ncou = [\"Uruguay\",\"France\",\n       \"Brazil\" , \"Belgium\",\n       \"Sweden\" , \"England\",\n       \"Russia\" , \"Croatia\" ]\n\nlength = len(cou)\n\nqtr = mat_new[mat_new[\"team\"].isin(cou)]\n\nplt.figure(figsize=(12,25))\n\nfor i,j in itertools.zip_longest(cou,range(length)) : \n    plt.subplot(4,2,j+1)\n    \n    lab = [\"wins\",\"draws\",\"loses\"]\n    \n    plt.pie(qtr[qtr[\"team\"] == i][lab].values.ravel(),\n            labels  = lab , \n            autopct = \"%1.0f%%\",\n            shadow  = True,\n            wedgeprops = {\"linewidth\":3.5,\"edgecolor\":\"white\"},\n            colors  = [\"lawngreen\",\"royalblue\",\"tomato\"],)\n    \n    circ = plt.Circle((0,0),.7,color=\"white\")\n    plt.gca().add_artist(circ)\n    \n    plt.title(i,color=\"navy\",fontsize=14)\n    ","81511823":"#Team interactions comparator\n\ndef teams_performance(team1,team2):\n    \n    list_teams = [team1,team2]\n    \n    df_new = matches[(matches[\"Home Team Name\"].isin(list_teams))]\n    df_new = df_new[df_new[\"Away Team Name\"].isin(list_teams)]\n    \n    print (\"Total Matches       : \", df_new.shape[0])\n    print (\"Match Years         : \", df_new[\"Year\"].unique().tolist())\n    print (\"Stadiums played     : \", df_new[\"Stadium\"].unique().tolist(),\"\\n\")\n    print (\"Match Cities        : \", df_new[\"City\"].unique().tolist())\n    print (\"Average Attendance  : \", np.around(df_new[\"Attendance\"].mean(),0) , \"per game.\")\n    print (\"Average total goals : \", np.around(df_new[\"total_goals\"].mean(),2), \"goals per game.\")\n    print (\"-----\")\n    print (\"WINS :\") \n    print (\"-----\")\n    print (df_new[\"win_team\"].value_counts().to_string(header = False))","6ce0b408":"teams_performance(\"Germany\",\"Brazil\")","deb763f7":"teams_performance(\"Belgium\",\"England\")","67b03eb1":"teams_performance(\"Croatia\",\"France\")","25c61261":"# Brazil & Germany","25fe70f6":"# Distribution of Half time Home and Away Team Goals","bf9953f8":"# Portugal & Argentina","f0951c1a":"# Average attendance by city","0aabfcdd":"# Teams with the most world cup final victories\n* The 20 World Cup tournaments have been won by eight national teams. Brazil have won five times, and they are the only team to have played in every tournament. The other World Cup winners are Germany and Italy, with four titles each; Argentina and inaugural winner Uruguay, with two titles each; and England, France, and Spain, with one title each.","22f02c87":"# Player names","a46f21df":"# penalty matches by year\n*  Penalty shoot-outs were introduced as tie-breakers in the 1978 World Cup but did not occur before 1982.","bf5db319":"# The Golden Goal  : \n* Golden goal or golden point is a rule used in association football, bandy, lacrosse, field hockey, ice hockey, floorball and korfball to decide the winner of a match (typically a knock-out match) in which scores are equal at the end of normal time. It is a type of sudden death.\n\n* From the Round of 16 on, matches which are drawn after 90 minutes will go into extra time (2 x 15 minutes). The first team to score a goal in extra time will immediately be declared the winner. If there is no goal scored in 30 minutes of extra time, the match will be settled in the customary manner by a penalty shoot-out.","b92fa50b":"# Referee's with most matches","f473d9e0":"# Distribution of home and away goals","13596624":"# 1994","b88fc08d":"# Teams with the most world cup matches","04854ea9":"# Most(penalties) Played countries:","5746293f":"# Teams with the most tournament participations","1521112c":"# \"Goals per game for countries playing in 2018 quarter finals","14710e48":"# Interactions between teams for year 2014","88cc8d2b":"# Goals per game by top countries ","e8bd056a":"# Total goals scored during games by year","8c0dcbfe":"# countries with most wins by penalties","5096389a":"# Team interactions comparator","699e3713":"# penalties shoot out result by countries","68a833cb":"# Spain & Italy","0fae16bf":"# Stadiums with highest average attendance","a7329a08":"# Croatia - France","df39f279":"# Interactions between teams","e70ea48e":"# Highest total goals scored during a match ","01403218":"# Total matches played and qualified teams  by year\n* In the tournaments between 1934 and 1978, 16 teams competed in each tournament, except in 1938, when Austria was absorbed into Germany after qualifying, leaving the tournament with 15 teams, and in 1950, when India, Scotland, and Turkey withdrew, leaving the tournament with 13 teams\n* The tournament was expanded to 24 teams in 1982, and then to 32 in 1998,also allowing more teams from Africa, Asia and North America to take part. ","3c023150":"# Teams with highest fifa world cup goals","bf355b83":"# France & Croatia","c75e0a3e":"# Average attendence by year\n* A total of 3.43 million people watched the 64 games of the 2014 FIFA World Cup in Brazil live in the stadium. This meant that the average attendance per game was 53,758 , the highest average since the 1994 World Cup in the United States where average attendance is 68,991 per game. ","74999725":"# Total attendence of world cups by year\n* The championship has been awarded every four years since the inaugural tournament in 1930, except in 1942 and 1946 when it was not held because of the Second World War.","5608eb60":"# World cup final result for third and fourth place by nation","eca12040":"# Data - Overview","565c9bd4":"# Match outcomes by countries","022d8ddc":"# Brazil - Germany","5c3b2c7d":"# Coach names","9c864a5b":"# Total goals scored by year","b21489bd":"# Stadiums - Germany","72246963":"# Matches with highest number of attendance","85e26682":"# countries with most loses by penalties","7402245c":"# Penalty matches by round","fd9a0743":"# Home and away goals by year","da491c8c":"# Belgium - England","965a9f40":"## Countries with maximum wins , loses and draw matches in world cup","4ce880d7":"# Interactions between teams for year 1930","a14cd541":"# Stadiums - Mexico","65c3eb70":"# Interactions between teams for year 1950","fb31805b":"# Match outcomes by home and away teams","27e29539":"# Team comparator","725f98af":"# First half home and away goals by year","b184db23":"# Penalty shoot outs in final","00e2f9f6":"# Matches with penalty shoot-outs","4eaa060c":"# The FIFA World Cup\nThe FIFA World Cup, often simply called the World Cup, is an international association football competition contested by the senior men's national teams of the members of the F\u00e9d\u00e9ration Internationale de Football Association (FIFA), the sport's global governing body. The championship has been awarded every four years since the inaugural tournament in 1930, except in 1942 and 1946 when it was not held because of the Second World War. The current champion is Germany, which won its fourth title at the 2014 tournament in Brazil.\n\n## Data - content \nThe World Cups dataset show all information about all the World Cups in the history, while the World Cup Matches dataset shows all the results from the matches contested as part of the cups.","37980474":"# Stadiums by countries","31eb6149":"# Stadiums - USA","92ea6cd5":"# second half home and away goals by year","c24fbf27":"# Stadiums - Brazil","d8151c50":"# Match outcomes for countries playing 2018 quarter finals","f0a7c45c":"# World cup final results by nation","80238acb":"# Total world cup matches played in each country","9a9b5c9c":"# Cities that hosted highest world cup matches"}}