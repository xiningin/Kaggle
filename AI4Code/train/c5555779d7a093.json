{"cell_type":{"1e4451e2":"code","42e29db4":"code","3a6c710e":"code","5c897e6c":"code","23380f96":"code","16bf2894":"code","e6fe7c27":"code","fa53a67f":"code","01c67493":"code","66f61fa3":"code","ccc1a7c7":"code","cd62da58":"code","9d5dd9fd":"code","b09dbc1b":"code","3b07a881":"code","d09366ed":"code","dd6332dd":"code","21cf3845":"code","cb946cac":"code","1b3b1f34":"code","87b13401":"code","bda7eef6":"code","af350ccd":"code","e7679b26":"code","ea23c29b":"code","29da400f":"code","8ed666c4":"code","3d56eba1":"code","6c754f1c":"code","903c4fc2":"code","67cbfd8b":"code","97396863":"code","1c61c39e":"code","814bcc71":"code","dd85cd30":"code","36b98808":"code","bec2f298":"code","e3675a3e":"code","8ae8ef5d":"code","c7bda974":"code","bda9f5ce":"code","97379963":"code","fc338273":"code","152e3a4e":"code","ec95b90a":"code","cad0c9fc":"code","7d9916e7":"code","062eedbc":"code","bae9ee3d":"code","76da3499":"code","2b214ef9":"code","edf20c66":"code","25b2a24d":"code","47184645":"code","85836eb5":"code","96bb9674":"code","fd212c28":"code","7bff7019":"code","254e055f":"code","a8b02b08":"code","0059265d":"code","5ca861db":"code","48b5f1de":"code","28f7cc6f":"code","6d3a1979":"code","e909e937":"code","02dd4d39":"code","4853ba05":"code","f14c0cda":"code","42566f9f":"code","e0b3701b":"code","3f47ee47":"code","be9b21f4":"code","5b2ba8a1":"code","b7d5f14d":"code","43919004":"code","d4d5edd0":"code","e99e21f9":"code","37e47d74":"code","81598769":"code","8e7031e5":"code","8aa1aac7":"code","53c63e3e":"code","a2f9254b":"code","718abd46":"code","8d693a65":"code","03886328":"code","196cf488":"code","3ddda66d":"code","ae67d077":"code","ddeb9a33":"markdown","1546b521":"markdown","edcb6c95":"markdown","705753ba":"markdown","2bd59b7b":"markdown","227029cb":"markdown","7d910656":"markdown","296da86f":"markdown","93b06cf6":"markdown","fb7e1414":"markdown","f8f8339c":"markdown","8cd6d46b":"markdown","8d48ae89":"markdown","889581d5":"markdown","3cbe9490":"markdown","7153039b":"markdown","7aae5dc3":"markdown","ee1405e0":"markdown","685f9ca5":"markdown","b3a3fab2":"markdown","4c5ccd4c":"markdown","f202ced1":"markdown","ccaf3377":"markdown","a457e61e":"markdown"},"source":{"1e4451e2":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go","42e29db4":"dataset=pd.read_csv('..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')\ndataset","3a6c710e":"df=dataset.copy()\ndf                            # We'll be working with df in whole notebook","5c897e6c":"df.isnull().sum()                       # Checking Null values for each column","23380f96":"df.columns","16bf2894":"for i in df.columns:\n    print(f\"Unique values For {i} =>\",df[i].unique())\n    print(\"\\n\")","e6fe7c27":"df['bmi'].fillna(df['bmi'].mean(), inplace=True)\ndf","fa53a67f":"df.isnull().sum()","01c67493":"df['stroke']=df['stroke'].replace(to_replace=1,value=\"Yes\")\ndf['stroke']=df['stroke'].replace(to_replace=0,value=\"No\")","66f61fa3":"fig=px.bar(df,x='gender',color='stroke',barmode='group')\nfig.show()","ccc1a7c7":"fig=px.bar(df,y='hypertension',x='stroke',color='gender',barmode='group')\nfig.show()","cd62da58":"fig=px.bar(df,y='heart_disease',x='stroke',color='gender',barmode='group')\nfig.show()","9d5dd9fd":"fig=px.bar(df,y='stroke',x='ever_married',color='gender',barmode='group')\nfig.show()","b09dbc1b":"fig=px.bar(df,x='work_type',color='gender',barmode='group')\nfig.show()","3b07a881":"px.histogram(df,x='bmi',color='stroke')","d09366ed":"px.histogram(df,x='avg_glucose_level',color='stroke')","dd6332dd":"stroke_list=df['stroke'].value_counts()\nstroke_list","21cf3845":"fig=px.pie(values=stroke_list.values,names=stroke_list.index)\nfig.show()","cb946cac":"work_list=df['work_type'].value_counts()\nwork_list\n\nfig=px.pie(values=work_list.values,names=work_list.index)\nfig.show()","1b3b1f34":"work_list=df['smoking_status'].value_counts()\nwork_list\n\nfig=px.pie(values=work_list.values,names=work_list.index)\nfig.show()","87b13401":"px.bar(df,x='smoking_status',color='stroke',barmode='group')","bda7eef6":"def remove_outliers(data):\n    arr=[]\n    #print(max(list(data)))\n    q1=np.percentile(data,25)\n    q3=np.percentile(data,75)\n    iqr=q3-q1\n    mi=q1-(1.5*iqr)\n    ma=q3+(1.5*iqr)\n    #print(mi,ma)\n    for i in list(data):\n        if i<mi:\n            i=mi\n            arr.append(i)\n        elif i>ma:\n            i=ma\n            arr.append(i)\n        else:\n            arr.append(i)\n    #print(max(arr))\n    return arr","af350ccd":"px.box(df,y='age',x='gender')","e7679b26":"fig=px.box(df,y='bmi')\nfig.show()","ea23c29b":"outlier=pd.DataFrame()","29da400f":"q1=np.percentile(df['bmi'],25)\nq3=np.percentile(df['bmi'],75)\niqr=q3-q1\nmi=q1-(1.5*iqr)\nma=q3+(1.5*iqr)","8ed666c4":"print(mi,ma)","3d56eba1":"outlier=df[(df['bmi']<mi) | (df['bmi']>ma)]","6c754f1c":"outlier","903c4fc2":"df['bmi']=remove_outliers(df['bmi'])","67cbfd8b":"fig=px.box(df,y='bmi')\nfig.show()","97396863":"fig=px.box(df,y='age',x='stroke')\nfig.show()","1c61c39e":"smoked=df[df['stroke']=='Yes']\nsmoked","814bcc71":"smoked[smoked['age']==1.32]","dd85cd30":"smoked[smoked['age']==14]","36b98808":"df = df.drop(index=[132,245]).reset_index()\ndf","bec2f298":"fig=px.box(df,y='avg_glucose_level',color='stroke',points='all')\nfig.show()","e3675a3e":"q1=np.percentile(df['avg_glucose_level'],25)\nq3=np.percentile(df['avg_glucose_level'],75)\niqr=q3-q1\nmi=q1-(1.5*iqr)\nma=q3+(1.5*iqr)\n\n","8ae8ef5d":"print(mi,ma)\n\n","c7bda974":"outlier=df[(df['avg_glucose_level']<mi) | (df['avg_glucose_level']>ma)]\noutlier","bda9f5ce":"df['avg_glucose_level']=remove_outliers(df['avg_glucose_level'])\ndf","97379963":"df['gender'].unique()","fc338273":"df['gender'].value_counts()","152e3a4e":"df['gender']=df['gender'].replace(to_replace='Other',value='Male')\ndf['stroke']=df['stroke'].replace(to_replace='Yes',value=1)\ndf['stroke']=df['stroke'].replace(to_replace='No',value=0)","ec95b90a":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\ndf['gender']=le.fit_transform(df['gender'])\ndf['ever_married']=le.fit_transform(df['ever_married'])\ndf['Residence_type']=le.fit_transform(df['Residence_type'])","cad0c9fc":"df=df.drop(['id','index'],axis=1)\ndf                                                ","7d9916e7":"stroked=df[df['stroke']==1]\nnot_stroked=df[df['stroke']==0]","062eedbc":"print(stroked.shape,not_stroked.shape)","bae9ee3d":"df['smoking_status'].value_counts()","76da3499":"df['smoking_status'].mode()[0]","2b214ef9":"df['smoking_status']=df['smoking_status'].replace(to_replace='never smoked',value=-1)\ndf['smoking_status']=df['smoking_status'].replace(to_replace='Unknown',value=0)\ndf['smoking_status']=df['smoking_status'].replace(to_replace='formerly smoked',value=1)\ndf['smoking_status']=df['smoking_status'].replace(to_replace='smokes',value=2)\n","edf20c66":"df['smoking_status'].value_counts()","25b2a24d":"df","47184645":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nct=ColumnTransformer([('encoder',OneHotEncoder(),[5])],remainder='passthrough')\ndf=ct.fit_transform(df)\ndf=pd.DataFrame(df)\ndf","85836eb5":"x=df.iloc[:,:-1].values\ny=df.iloc[:,-1].values","96bb9674":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.25,random_state=0)","fd212c28":"print(x_train.shape,y_train.shape)","7bff7019":"!pip install imbalanced-learn","254e055f":"from imblearn.over_sampling import SMOTE\nsmt=SMOTE(random_state=0)","a8b02b08":"x_train_smote,y_train_smote=smt.fit_resample(x_train,y_train)","0059265d":"print(x_train_smote.shape,y_train_smote.shape)","5ca861db":"from collections import Counter\nprint(\"Before SMOTE\", Counter(y_train))\nprint(\"After SMOTE\", Counter(y_train_smote))","48b5f1de":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression()\nlr.fit(x_train_smote,y_train_smote)","28f7cc6f":"lr_pred=lr.predict(x_test)\nlr_pred","6d3a1979":"from sklearn.metrics import confusion_matrix,accuracy_score\ncm_lr=confusion_matrix(y_test,lr_pred)\ncm_lr","e909e937":"acc_lr=accuracy_score(y_test,lr_pred)\nacc_lr","02dd4d39":"from sklearn.tree import DecisionTreeClassifier\ndsc=DecisionTreeClassifier()\ndsc.fit(x_train_smote,y_train_smote)","4853ba05":"dsc_pred=dsc.predict(x_test)\ndsc_pred","f14c0cda":"cm_dsc=confusion_matrix(y_test,dsc_pred)\ncm_dsc","42566f9f":"acc_dsc=accuracy_score(y_test,dsc_pred)\nacc_dsc","e0b3701b":"from sklearn.ensemble import RandomForestClassifier\nrfc=RandomForestClassifier(n_estimators=400)\nrfc.fit(x_train_smote,y_train_smote)","3f47ee47":"rfc_pred=rfc.predict(x_test)\nrfc_pred","be9b21f4":"cm_rfc=confusion_matrix(y_test,rfc_pred)\ncm_rfc","5b2ba8a1":"acc_rfc=accuracy_score(y_test,rfc_pred)\nacc_rfc","b7d5f14d":"from xgboost import XGBClassifier\nxgb=XGBClassifier()\nxgb.fit(x_train_smote,y_train_smote)","43919004":"xgb_pred=xgb.predict(x_test)","d4d5edd0":"cm_xgb=confusion_matrix(y_true=y_test,y_pred=xgb_pred)\ncm_xgb","e99e21f9":"acc_xgb=accuracy_score(y_test,xgb_pred)\nacc_xgb","37e47d74":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nx_train_smote=sc.fit_transform(x_train_smote)\nx_test=sc.transform(x_test)","81598769":"from keras.models import Input,Model\nfrom keras.layers import Dense","8e7031e5":"i=Input(shape=[14])\n\nlayer1=Dense(units=10,activation='relu')(i)\nlayer2=Dense(units=7,activation='relu')(layer1)\nout=Dense(units=1,activation='sigmoid')(layer2)\n\nann=Model(inputs=i,outputs=out)","8aa1aac7":"ann.summary()","53c63e3e":"from keras.utils.vis_utils import plot_model","a2f9254b":"plot_model(ann, to_file='ann_model_plot.png', show_shapes=True, show_layer_names=True)","718abd46":"ann.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])","8d693a65":"ann.fit(x_train_smote,y_train_smote,batch_size=32,epochs=15)","03886328":"y_pred=ann.predict(x_test)\ny_pred=(y_pred>0.5)\ny_pred","196cf488":"cm=confusion_matrix(y_test,y_pred)\ncm","3ddda66d":"score=accuracy_score(y_test,y_pred)\nscore","ae67d077":"print(\"Logistic Regression Accuracy=>{:.2%}\".format(acc_lr))\nprint(\"Decision Tree Classifier Accuracy=>{:.2%}\".format(acc_dsc))\nprint(\"Random Forest Classifeir Accuracy=>{:.2%}\".format(acc_rfc))\nprint(\"XGB Classifeir Accuracy=>{:.2%}\".format(acc_xgb))\nprint(\"Neural Network Accuracy=>{:.2%}\".format(score))","ddeb9a33":"\n\n1.   Logistic Regression\n\n","1546b521":"# Compiling the Model","edcb6c95":"As there are only two outliers in dataset with age==1.32 and 14 who are having stroke I am removing these rows","705753ba":"628 rows are there with outliers under avg_glucose_level so we cannot drop these rows directly.\nThese many rows make 12.5% of our dataset","2bd59b7b":"# Importing libraries","227029cb":"# Machine Learning ALgorithms","7d910656":"# Splitting Dataset ","296da86f":"# Checkin For Outliers","93b06cf6":"# Training modle","fb7e1414":"# Importing Dataset","f8f8339c":"# Neural Networks","8cd6d46b":"# Results","8d48ae89":"A blood sugar level less than 140 mg\/dL (7.8 mmol\/L) is normal. A reading of more than 200 mg\/dL (11.1 mmol\/L) after two hours indicates diabetes. A reading between 140 and 199 mg\/dL (7.8 mmol\/L and 11.0 mmol\/L) indicates prediabetes.","889581d5":" Creating copy of Dataset","3cbe9490":"\n\n3.   Random Forest Classifier\n\n\n","7153039b":"**Super Biased Dataset**","7aae5dc3":"\n\n4.   XGBoost\n\n\n","ee1405e0":"# Dealing with Missing data","685f9ca5":"# Feature Scaling\n","b3a3fab2":"# Balancing Dataset using SMOTE","4c5ccd4c":"# Dealing with Categorical Variable","f202ced1":"\n\n2.   Decision Tree Classifier\n\n","ccaf3377":"# Exploratory Data Analysis","a457e61e":"**Working With Gender Column**"}}