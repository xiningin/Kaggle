{"cell_type":{"a9e91333":"code","84fc25a7":"code","1b44b20d":"code","32f4029e":"code","f0932420":"code","98041209":"code","06d939a9":"code","504f40ea":"code","6d1844a8":"code","f9c472b5":"code","c4e269a3":"code","c22520bc":"code","e3868198":"code","84c619f3":"markdown","e423e7d2":"markdown","3aa5fc6c":"markdown","f55c534e":"markdown","96be4dfc":"markdown","f7d7572c":"markdown"},"source":{"a9e91333":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","84fc25a7":"df = pd.read_csv(\"..\/input\/tcl.csv\",sep=\";\")","1b44b20d":"df.head()","32f4029e":"df.dtypes","f0932420":"team_list = list(df.team.unique())\npoint_ratio = []\n\nfor i in team_list:\n    x = df[df.team==i]\n    point_rate = sum(x.points)\/len(x)\n    point_ratio.append(point_rate)\ndata = pd.DataFrame({'team_list': team_list,'point_ratio':point_ratio})\nnew_index = (data['point_ratio'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['team_list'], y=sorted_data['point_ratio'])\nplt.xticks(rotation= 45)\nplt.xlabel('Teams')\nplt.ylabel('Points Rate')\nplt.title('Points Rate of Teams')\nplt.show()","98041209":"won_ratio = []\ndrawn_ratio = []\nlost_ratio = []\n\nfor i in team_list:\n    x = df[df.team==i]\n    won_rate = sum(x.won)\/len(x)\n    won_ratio.append(won_rate)\n    drawn_rate = sum(x.drawn)\/len(x)\n    drawn_ratio.append(drawn_rate)\n    lost_rate = sum(x.lost)\/len(x)\n    lost_ratio.append(lost_rate)\n    \n    \nf,ax = plt.subplots(figsize = (9,10))\nsns.barplot(x=won_ratio,y=team_list,color='green',alpha = 0.7,label='Won' )\nsns.barplot(x=drawn_ratio,y=team_list,color='blue',alpha = 0.6,label='Drawn')\nsns.barplot(x=lost_ratio,y=team_list,color='red',alpha = 0.5,label='Lost')\n\n\nax.legend(loc='lower right',frameon = True) \nax.set(xlabel='Percentage of Won,Drawn and Lost', ylabel='Teams',title = \"Percentage of Team's Won,Drawn and Lost Rates \")\n","06d939a9":"won_ratio = []\ndrawn_ratio = []\nlost_ratio = []\n\nfor i in team_list:\n    x = df[df.team==i]\n    won_rate = sum(x.won)\/len(x)\n    won_ratio.append(won_rate)\n    drawn_rate = sum(x.drawn)\/len(x)\n    drawn_ratio.append(drawn_rate)\n    lost_rate = sum(x.lost)\/len(x)\n    lost_ratio.append(lost_rate)\n\nf,ax = plt.subplots(figsize = (8,8))\nsns.pointplot(y=won_ratio,x=team_list,color='orange',alpha = 0.7,label='Won' )\nsns.pointplot(y=drawn_ratio,x=team_list,color='red',alpha = 0.6,label='Drawn')\nsns.pointplot(y=lost_ratio,x=team_list,color='blue',alpha = 0.5,label='Lost')\nplt.text(0.1,15.6,'Won Ratio',color='orange',fontsize = 17,style = 'italic')\nplt.text(0.1,13.6,'Drawn Ratio',color='red',fontsize = 18,style = 'italic')\nplt.text(0.1,11.6,'Lost Ratio',color='blue',fontsize = 19,style = 'italic')\nplt.xlabel('Teams',fontsize = 15,color='green')\nplt.ylabel('Values',fontsize = 15,color='green')\nplt.title('Won , Drawn and Lost Rate',fontsize = 20,color='blue')\nplt.grid()  ","504f40ea":"df.team.dropna(inplace = True)\nlabels = df.team.value_counts().index\ncolors = ['Grey','Blue','Green','Red','Yellow']\nexplode = [0,0,0,0,0]\nsizes = df.team.value_counts().values\n\n#visual\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=10)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()","6d1844a8":"\ngoals_for_ratio = []\ngoals_against_ratio = []\nfor i in team_list:\n    x = df[df.team==i]\n    goal_rate = sum(x.goals_for)\/len(x)\n    goals_for_ratio.append(goal_rate)\n    against_rate = sum(x.goals_against)\/len(x)\n    goals_against_ratio.append(against_rate)\n    \n\n","f9c472b5":"data2 = pd.DataFrame({'goals_for_ratio': goals_for_ratio,'goals_against_ratio':goals_against_ratio})\ndata2.head()","c4e269a3":"g= sns.jointplot(data2.goals_for_ratio, data2.goals_against_ratio,kind=\"kde\", size=7)\nplt.savefig('graph.png')\nplt.legend()\nplt.show()","c22520bc":"sns.lmplot(x=\"goals_for_ratio\", y=\"goals_against_ratio\", data=data2) #F\nplt.show()","e3868198":"f,ax = plt.subplots(figsize=(5, 5))\nsns.heatmap(data2.corr(), annot=True, linewidths=0.5,linecolor=\"blue\", fmt= '.1f',ax=ax)\nplt.show()","84c619f3":"**LMPLOT**","e423e7d2":"**HORIZONTAL BARPLOT**","3aa5fc6c":"**POINTPLOT**","f55c534e":"**HEAT MAP**","96be4dfc":"***BARPLOT***","f7d7572c":"**PIEPLOT**"}}