{"cell_type":{"9a3414f0":"code","367c702f":"code","643828c1":"code","3ef3bd1f":"code","9df5643f":"code","3944ecb6":"code","8e42b1f9":"code","7834c888":"code","7e1fe66b":"code","19716dbd":"code","4dfcc334":"code","21a4c6f2":"code","4a8226df":"code","d4965558":"code","a2439b04":"code","5d44210d":"code","2c0d8c19":"code","f33ba534":"code","f3d7574b":"code","fac08096":"code","27c2585d":"code","59a2903e":"code","46a64130":"code","68d9b2ac":"code","894600d9":"code","64389499":"code","667a289d":"code","9e89a650":"code","d4969e20":"code","c836d0e0":"code","c1a4a870":"code","d9f79c1e":"code","f1bfb324":"code","ed4ba397":"code","65c333aa":"code","ce4b1277":"code","61513450":"code","32704dcc":"code","046c8172":"code","0f2285ce":"code","3bbfd26d":"code","240dadb1":"code","223c9f07":"code","dce2b6c9":"code","b08fd906":"code","b36c47e1":"code","6d34ffc7":"code","d08e9b6b":"code","a58790da":"code","d77b936c":"code","1f46e357":"code","17fab61c":"code","9037a612":"code","23661bf2":"code","c8bf178b":"code","662c6bd9":"code","540c3126":"code","87b748fe":"code","9c138b0f":"code","44a7e857":"code","f2fec8ea":"code","d64ca34b":"code","291400be":"code","bafd4206":"code","978e3342":"code","939e7706":"code","c0ee6753":"code","9808a554":"markdown","bc6bc1c5":"markdown","0b3f1603":"markdown","2df945cf":"markdown","233b81f2":"markdown","5cd58bf0":"markdown","c8061430":"markdown","7f5503ed":"markdown","4cbb99f1":"markdown","3c9853de":"markdown","9732ebf9":"markdown","11a0a621":"markdown","622d9f41":"markdown","e1493afe":"markdown","996ba78b":"markdown","8f62e5ad":"markdown","8926bbec":"markdown","72be6e9d":"markdown","3992e173":"markdown","ec0de747":"markdown","f3e1b90f":"markdown","a456b034":"markdown","ef963964":"markdown","6b1f27d5":"markdown","8f665d04":"markdown","365863ea":"markdown","75dca7a6":"markdown","0d0c5c88":"markdown","c097fdf3":"markdown","5cd247bc":"markdown","38237955":"markdown","6232153c":"markdown","673189dd":"markdown","6bfd8026":"markdown","9cca8956":"markdown","318aba77":"markdown","e255e214":"markdown","43338ba7":"markdown","c61b6da4":"markdown","0ad08288":"markdown","dbca27fe":"markdown","1a457fe1":"markdown"},"source":{"9a3414f0":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","367c702f":"import numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go","643828c1":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","3ef3bd1f":"train.head()","9df5643f":"test.head()","3944ecb6":"train[\"Survived\"] = [\"Survived\" if i == 1 else \"Not Survived\" for i in train[\"Survived\"]]","8e42b1f9":"fig = px.histogram(train, x=\"Survived\",title=\"How many passengers survived?\")\nfig.show()","7834c888":"def pclass_changes(df):\n    df[\"Pclass\"] = [\"1st\" if i == 1 else i for i in df[\"Pclass\"]]\n    df[\"Pclass\"] = [\"2nd\" if i == 2 else i for i in df[\"Pclass\"]]\n    df[\"Pclass\"] = [\"3rd\" if i == 3 else i for i in df[\"Pclass\"]]\n    \n    return df","7e1fe66b":"train = pclass_changes(train)\ntest = pclass_changes(test)","19716dbd":"fig = px.histogram(train, x=\"Pclass\",title=\"Pclass(train.csv)\",labels={\"Pclass\":\"Ticket Class\"})\nfig.show()","4dfcc334":"fig = px.histogram(test, x=\"Pclass\",title=\"Pclass(test.csv)\",labels={\"Pclass\":\"Ticket Class\"})\nfig.show()","21a4c6f2":"fig = px.histogram(train, x=\"Sex\",title=\"Male or Female(train.csv)\")\nfig.show()","4a8226df":"fig = px.histogram(test, x=\"Sex\",title=\"Male or Female(test.csv)\")\nfig.show()","d4965558":"fig = px.histogram(train, x=\"Age\",title=\"How old were the passengers? (train.csv)\")\nfig.show()","a2439b04":"fig = px.histogram(test, x=\"Age\",title=\"How old were the passengers? (test.csv)\")\nfig.show()","5d44210d":"fig = px.histogram(train, x=\"SibSp\",\n                   title=\"Did the passengers board with their siblings or spouse? (train.csv)\",\n                  labels={\"SibSp\":\"Number of siblings or spouse abroad the Titanic\"})\nfig.show()","2c0d8c19":"fig = px.histogram(test, x=\"SibSp\",\n                   title=\"Did the passengers board with their siblings or spouse? (test.csv)\",\n                  labels={\"SibSp\":\"Number of siblings or spouse abroad the Titanic\"})\nfig.show()","f33ba534":"fig = px.histogram(train, x=\"Parch\",\n                   title=\"Did the passengers board with their parents or chidren? (train.csv)\",\n                  labels={\"Parch\":\"Number of parents or children abroad the Titanic\"})\nfig.show()","f3d7574b":"fig = px.histogram(test, x=\"Parch\",\n                   title=\"Did the passengers board with their parents or children? (test.csv)\",\n                  labels={\"Parch\":\"Number of parents or children abroad the Titanic\"})\nfig.show()","fac08096":"fig = px.histogram(train, x=\"Fare\",title=\"How much did the passengers pay to get on the Titanic? (train.csv)\")\nfig.show()","27c2585d":"fig = px.histogram(test, x=\"Fare\",title=\"How much did the passengers pay to get on the Titanic? (test.csv)\")\nfig.show()","59a2903e":"def Embarked_changes(df):\n    #df[\"Embarked\"] = df[\"Embarked\"].dropna()\n    df[\"Embarked\"] = [\"Cherbourg\" if i == \"C\" else i for i in df[\"Embarked\"] ]\n    df[\"Embarked\"] = [\"Queenstown\" if i == \"Q\" else i for i in df[\"Embarked\"]]\n    df[\"Embarked\"] = [\"Southampton\" if i == \"S\" else i for i in df[\"Embarked\"]]\n    \n    return df","46a64130":"train = Embarked_changes(train)\ntest = Embarked_changes(test)","68d9b2ac":"fig = px.histogram(train, x=\"Embarked\",\n                   title=\"Which port did the passengers embark? (train.csv)\",\n                   labels={\"Embarked\":\"Port of Embarkation\"})\nfig.show()","894600d9":"fig = px.histogram(test, x=\"Embarked\",\n                   title=\"Which port did the passengers embark? (test.csv)\",\n                   labels={\"Embarked\":\"Port of Embarkation\"})\nfig.show()","64389499":"survived_or_not_male = [0,0]\nsurvived_or_not_female = [0,0]\n\nfor i in train[train[\"Survived\"] != \"Survived\"][\"Sex\"]:\n    if i == \"male\":\n        survived_or_not_male[0] += 1\n    elif i == \"female\":\n        survived_or_not_female[0] += 1\n\nfor i in train[train[\"Survived\"] == \"Survived\"][\"Sex\"]:\n    if i == \"male\":\n        survived_or_not_male[1] += 1\n    elif i == \"female\":\n        survived_or_not_female[1] += 1","667a289d":"survived_sex = pd.DataFrame(data=[[survived_or_not_male[0],survived_or_not_female[0]],[survived_or_not_male[1],survived_or_not_female[1]]],\n                           columns=['male','female'],index=['Not Survived','Survived'])","9e89a650":"survived_sex","d4969e20":"fig = px.bar(survived_sex,x=\"male\",title=\"Survived or Not (Male)\")\nfig.show()","c836d0e0":"fig = px.bar(survived_sex,x=\"female\",title=\"Survived or Not (Female)\")\nfig.show()","c1a4a870":"survived_age = [0,0,0,0]\nsurvived_not_age = [0,0,0,0]\nfor i in train[train[\"Survived\"] != \"Survived\"][\"Age\"]:\n    if i < 20.0:\n        survived_not_age[0] += 1\n    elif i < 40.0:\n        survived_not_age[1] += 1\n    elif i < 60.0:\n        survived_not_age[2] += 1\n    else:\n        survived_not_age[3] += 1\n        \nfor i in train[train[\"Survived\"] == \"Survived\"][\"Age\"]:\n    if i < 20.0:\n        survived_age[0] += 1\n    elif i < 40.0:\n        survived_age[1] += 1\n    elif i < 60.0:\n        survived_age[2] += 1\n    else:\n        survived_age[3] += 1","d9f79c1e":"survived_or_not_age = pd.DataFrame(data=[[survived_age[0],survived_age[1],survived_age[2],survived_age[3]],[survived_not_age[0],survived_not_age[1],survived_not_age[2],survived_not_age[3]]],\n                           columns=['0~20','20~40','40~60','60~'],index=['Survived','Not Survived'])","f1bfb324":"survived_or_not_age","ed4ba397":"fig = px.bar(survived_or_not_age,x=\"0~20\",title=\"Survived or Not (Age < 20)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","65c333aa":"fig = px.bar(survived_or_not_age,x=\"20~40\",title=\"Survived or Not (20 <= Age < 40)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","ce4b1277":"fig = px.bar(survived_or_not_age,x=\"40~60\",title=\"Survived or Not (40 <= Age < 60)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","61513450":"fig = px.bar(survived_or_not_age,x=\"60~\",title=\"Survived or Not (60 <= Age)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","32704dcc":"survive_pclass = [0,0,0]\nsurvive_not_pclass = [0,0,0]\nfor i in train[train[\"Survived\"] != \"Survived\"][\"Pclass\"]:\n    if i == \"1st\":\n        survive_not_pclass[0] += 1\n    elif i == \"2nd\":\n        survive_not_pclass[1] += 1\n    else:\n        survive_not_pclass[2] += 1\nfor i in train[train[\"Survived\"] == \"Survived\"][\"Pclass\"]:\n    if i == \"1st\":\n        survive_pclass[0] += 1\n    elif i == \"2nd\":\n        survive_pclass[1] += 1\n    else:\n        survive_pclass[2] += 1","046c8172":"survived_pclass = pd.DataFrame(data=[[survive_not_pclass[0],survive_not_pclass[1],survive_not_pclass[2]],[survive_pclass[0],survive_pclass[1],survive_pclass[2]]],\n                           columns=['1st','2nd','3rd'],index=['Not Survived','Survived'])","0f2285ce":"survived_pclass","3bbfd26d":"fig = px.bar(survived_pclass,x=\"1st\",title=\"Survived or Not (1st Class)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","240dadb1":"fig = px.bar(survived_pclass,x=\"2nd\",title=\"Survived or Not (2nd Class)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","223c9f07":"fig = px.bar(survived_pclass,x=\"3rd\",title=\"Survived or Not (3rd Class)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","dce2b6c9":"survived_port = [0,0,0]\nsurvived_not_port = [0,0,0]\nfor i in train[train[\"Survived\"] != \"Survived\"][\"Embarked\"]:\n    if i == \"Cherbourg\":\n        survived_not_port[0] += 1\n    elif i == \"Queenstown\":\n        survived_not_port[1] += 1\n    elif i == \"Southampton\":\n        survived_not_port[2] += 1\nfor i in train[train[\"Survived\"] == \"Survived\"][\"Embarked\"]:\n    if i == \"Cherbourg\":\n        survived_port[0] += 1\n    elif i == \"Queenstown\":\n        survived_port[1] += 1\n    elif i == \"Southampton\":\n        survived_port[2] += 1\n        ","b08fd906":"survived_or_not_port = pd.DataFrame(data=[[survived_not_port[0],survived_not_port[1],survived_not_port[2]],[survived_port[0],survived_port[1],survived_port[2]]],\n                           columns=['Cherbourg','Queenstown','Southampton'],index=['Not Survived','Survived'])","b36c47e1":"survived_or_not_port","6d34ffc7":"fig = px.bar(survived_or_not_port,x=\"Cherbourg\",title=\"Survived or Not (Port:Cherbourg)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","d08e9b6b":"fig = px.bar(survived_or_not_port,x=\"Queenstown\",title=\"Survived or Not (Port:Queenstown)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","a58790da":"fig = px.bar(survived_or_not_port,x=\"Southampton\",title=\"Survived or Not (Port:Southampton)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","d77b936c":"train[\"Cabin\"].unique()","1f46e357":"cabin_initial = [0,0,0,0,0,0]\ncabin_initial_not = [0,0,0,0,0,0]\nfor i in train[train[\"Survived\"] == \"Survived\"][\"Cabin\"]:\n    if list(str(i))[0] == \"A\":\n        cabin_initial[0] += 1\n    elif list(str(i))[0] == \"B\":\n        cabin_initial[1] += 1\n    elif list(str(i))[0] == \"C\":\n        cabin_initial[2] += 1\n    elif list(str(i))[0] == \"D\":\n        cabin_initial[3] += 1\n    elif list(str(i))[0] == \"E\":\n        cabin_initial[4] += 1\n    elif list(str(i))[0] == \"F\":\n        cabin_initial[5] += 1\nfor i in train[train[\"Survived\"] != \"Survived\"][\"Cabin\"]:\n    if list(str(i))[0] == \"A\":\n        cabin_initial_not[0] += 1\n    elif list(str(i))[0] == \"B\":\n        cabin_initial_not[1] += 1\n    elif list(str(i))[0] == \"C\":\n        cabin_initial_not[2] += 1\n    elif list(str(i))[0] == \"D\":\n        cabin_initial_not[3] += 1\n    elif list(str(i))[0] == \"E\":\n        cabin_initial_not[4] += 1\n    elif list(str(i))[0] == \"F\":\n        cabin_initial_not[5] += 1\n    \n        ","17fab61c":"survived_cabin = pd.DataFrame(data=[[cabin_initial[0],cabin_initial[1],cabin_initial[2],cabin_initial[3],cabin_initial[4],cabin_initial[5]],\n                                     [cabin_initial_not[0],cabin_initial_not[1],cabin_initial_not[2],cabin_initial_not[3],cabin_initial_not[4],cabin_initial_not[5]]],\n                                    columns=[\"Cabin Initials A\",\"Cabin Initials B\",\"Cabin Initials C\",\"Cabin Initials D\",\"Cabin Initials E\",\"Cabin Initials F\"],index = [\"Survived\",\"Not Survived\"])","9037a612":"survived_cabin","23661bf2":"fig = px.bar(survived_cabin,x=\"Cabin Initials A\",title=\"Survived or Not (Cabin: initials A)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","c8bf178b":"fig = px.bar(survived_cabin,x=\"Cabin Initials B\",title=\"Survived or Not (Cabin: initials B)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","662c6bd9":"fig = px.bar(survived_cabin,x=\"Cabin Initials C\",title=\"Survived or Not (Cabin: initials C)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","540c3126":"fig = px.bar(survived_cabin,x=\"Cabin Initials D\",title=\"Survived or Not (Cabin: initials D)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","87b748fe":"fig = px.bar(survived_cabin,x=\"Cabin Initials E\",title=\"Survived or Not (Cabin: initials E)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","9c138b0f":"fig = px.bar(survived_cabin,x=\"Cabin Initials F\",title=\"Survived or Not (Cabin: initials F)\")\nfig.update_xaxes(title_text='The number of Passengers')\nfig.update_yaxes(title_text='')\nfig.show()","44a7e857":"train.isnull().sum()","f2fec8ea":"test.isnull().sum()","d64ca34b":"missing_train = train.isnull().sum()\nmissing_test = test.isnull().sum()","291400be":"missing_values = pd.DataFrame(data=[missing_train,missing_test],index=['train','test'])","bafd4206":"missing_values = missing_values.T","978e3342":"missing_values","939e7706":"fig = px.bar(missing_values,x=\"train\",title=\"Missing Values(train.csv)\")\nfig.update_xaxes(title_text='The number of missing values')\nfig.update_yaxes(title_text='Columns')\nfig.show()","c0ee6753":"fig = px.bar(missing_values,x=\"test\",title=\"Missing Values(test.csv)\")\nfig.update_xaxes(title_text='The number of missing values')\nfig.update_yaxes(title_text='Columns')\nfig.show()","9808a554":"* \"Survived\" in the test column is NaN because test.csv doesn't have \"Survived\" column.","bc6bc1c5":"* The column Parch shows the number of  parents \/ children aboard the Titanic.","0b3f1603":"# Columns contain missing values","2df945cf":"# Survival Rate by age\n* 0~20: <span style=\"color: red; \">48.17%<\/span> (79\/164)\n* 20~40: 38.75% (150\/387)\n* 40~60: 39.41% (54\/137)\n* 60~ :  <span style=\"color: blue; \">29.06%<\/span> (59\/203)","233b81f2":"# Survival Rate by class\n* 1st Class: <span style=\"color: red; \">62.96%<\/span> (136\/216)\n* 2nd Class: 47.28% (87\/184)\n* 3rd Class: <span style=\"color: blue; \">24.23%<\/span> (119\/491)","5cd58bf0":"* These graphs imply that there is a correlation between Survived and Cabin.\n* Survival rate of passengers whose cabin(room number) starts with \"A\" was less than 50%.\n","c8061430":"# Thank you for reading!  \n# If you like, feel free to upvote!","7f5503ed":"# The correlation between \"Survived\" and \"Pclass\"","4cbb99f1":"* The column \"SibSp\" shows the number of siblings \/ spouses aboard the Titanic.","3c9853de":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/f\/fd\/RMS_Titanic_3.jpg)\n* [Image Source](https:\/\/en.wikipedia.org\/wiki\/Titanic)","9732ebf9":"# import libraries","11a0a621":"# The correlation between Survived and \"Cabin\"","622d9f41":"# Fare (train and test)","e1493afe":"* In this notebook, we visualize and analyze titanic data by using Plotly.\n* If you like this notebook, please **give an upvote!**.\n* Reference:  [Plotly Official Website](https:\/\/plotly.com\/)","996ba78b":"# Survival Rate by port\n* Cherbourg: <span style=\"color: red; \">55.35%<\/span> (93\/168)\n* Queenstown: 38.96% (30\/77)\n* Southampton: 33.69% (217\/644)","8f62e5ad":"* These graphs imply that passengers embarked at Cherbourg survived more than other passengers.","8926bbec":"# SibSp (train and test)","72be6e9d":"<h2 style='background:#FFFFFF; border:0; color:black'><center>The number of missing values(NaN)<center><h2>","3992e173":"* **Plotly** is one of the most popular data visualization library.\n* Among kagglers, matplotlib or seaborn are more popular, but I recommend Plotly.\n* This is because that you can draw beautiful graphs easily by using Plotly.","ec0de747":"<h2 style='background:#FFFFFF; border:0; color:black'><center>Data Visualization using Plotly<center><h2>","f3e1b90f":"# Age (train and test)","a456b034":"* These graphs imply that 1st class passengers survived more than other and most of 3rd passengers could not survive.","ef963964":"<h2 style='background:#FFFFFF; border:0; color:black'><center>What is \"Plotly\"?<center><h2>","6b1f27d5":"<h2 style='background:#FFFFFF; border:0; color:black'><center>Titanic: <span style=\"color:red\">EDA<\/span> and <span style=\"color:blue\">Data Visualization<\/span><center><h2>","8f665d04":"# Reading csv files","365863ea":"# Embarked(train and test)","75dca7a6":"# The correlation between \"Survived\" and \"Embarked\"","0d0c5c88":"# Survived or Not (train only)","c097fdf3":"* We'll classify passengers by Cabin initials(A,B,C,D,E,F)\n* Cabin \"T\" and \"G6\" and missing values will be excluded.","5cd247bc":"# Pcalss (train and test)","38237955":"# The correlation between \"Survived\" and \"Sex\"","6232153c":"* The column \"Survived\" is the target.\n* In titanic competition, we have to predict it.\n* If a passenger's  <span style=\"color:red\">\"Survived\" is 1<\/span>, it means that he\/she could survive, but if <span style=\"color:blue\">it is 0<\/span>, it means that he\/she could not survive.","673189dd":"* These graphs imply that more women survived than men.","6bfd8026":"* These graphs imply that passengers under 20 survived more than other passengers.","9cca8956":"* The column \"Embarked\" shows the name of port where passengers went on board.","318aba77":"# Sex (train and test)","e255e214":"* The column \"Pclass\" shows the ticket class.\n\n| Pclass | Ticket Class |\n| --- | --- |\n| 1 |  1st class|\n| 2 | 2nd class|\n| 3 | 3rd class|","43338ba7":"# The correlation between \"Survived\" and \"Age\"","c61b6da4":"# Survival Rate by gender\n* Male: <span style=\"color: blue; \">18.89%<\/span> (109\/577)\n* Female: <span style=\"color: red; \">74.20%<\/span> (233\/314)\n\n* In this notebook,especially <span style=\"color: red; \">high<\/span>\/<span style=\"color: blue; \">low<\/span> rates are written in <span style=\"color: red; \">red<\/span>\/<span style=\"color: blue; \">blue<\/span>.","0ad08288":"# Parch (train and test)","dbca27fe":"# Survival Rate by room number initials\n* A: <span style=\"color: blue; \">46.66%<\/span> (7\/15)\n* B: 74.46% (35\/47)\n* C: 71.42% (35\/49)\n* D: 75.75% (25\/33)\n* E: 75.00% (24\/32)\n* F: 61.53% (8\/13)","1a457fe1":"<h2 style='background:#FFFFFF; border:0; color:black'><center>Data Analytics with Graph<center><h2>"}}