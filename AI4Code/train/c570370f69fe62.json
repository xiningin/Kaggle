{"cell_type":{"fbd19688":"code","dc0a118f":"code","15ef9833":"code","71ee663a":"code","5705f422":"code","f57210c3":"code","01828e81":"code","1480f6a5":"code","e50efb12":"code","b2b72bf1":"code","fce18e2b":"code","06eea83c":"code","10830ca4":"code","c4b6eec6":"code","07b8cef6":"code","c566b5d3":"code","7414eee6":"code","5dd335dc":"code","0d208e95":"code","b86e074e":"code","9b24eb10":"code","ae6d2304":"code","3d14c3cf":"code","1a50ef33":"code","94e2ba19":"code","bd450e87":"code","c5a5211c":"code","7330a4b0":"code","1625946d":"code","e5b534fc":"code","00194907":"code","aa39fffe":"code","2429555c":"code","11d53e4b":"code","fa992103":"code","bfa6e776":"code","afbfa654":"code","f3c4ab21":"markdown","a09bba59":"markdown","dfa12e46":"markdown","0f3074b2":"markdown","440d956e":"markdown","43137b96":"markdown","d64d5cb4":"markdown","86f87e88":"markdown","9599f54c":"markdown"},"source":{"fbd19688":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split as tts\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom xgboost.sklearn import XGBClassifier\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dc0a118f":"df = pd.read_csv('..\/input\/water-potability\/water_potability.csv')\ndf.head()","15ef9833":"plt.figure(figsize=(10,5))\nsns.heatmap(df.corr(),annot=True, cmap=\"RdPu\",fmt='.3f',linewidths=.8)","71ee663a":"dup = df.duplicated().sum()\nprint('Any Duplicate Value:',dup)","5705f422":"df.isnull().sum()","f57210c3":"df[\"ph\"].fillna(value = df[\"ph\"].mean(), inplace = True)\ndf[\"Sulfate\"].fillna(value = df[\"Sulfate\"].mean(), inplace = True)\ndf[\"Trihalomethanes\"].fillna(value = df[\"Trihalomethanes\"].mean(), inplace = True)","01828e81":"df.isnull().sum()","1480f6a5":"df.head()","e50efb12":"plt.rcParams['figure.figsize'] = [7,5]\nsns.distplot(df['Potability'])","b2b72bf1":"sns.pairplot(data = df)","fce18e2b":"x = df.drop(['Potability'],axis=True)\ny = df['Potability']","06eea83c":"x_train,x_test,y_train,y_test = tts(x,y,test_size=0.32, random_state = 50)","10830ca4":"print(x.describe(),\"\\n\",\"\\n\", y.describe())","c4b6eec6":"logi = LogisticRegression(max_iter = 120, random_state=0,n_jobs=20)\nlogi.fit(x_train,y_train)\npredlogi_y = logi.predict(x_test)","07b8cef6":"Acc= accuracy_score(predlogi_y,y_test)\nprint( Acc)","c566b5d3":"print(classification_report(y_test,predlogi_y))","7414eee6":"RFC = RandomForestClassifier()\nRFC.fit(x_train,y_train)\ny_RFC = RFC.predict(x_test)","5dd335dc":"Acc_rfc= accuracy_score(y_RFC,y_test)\nprint( Acc_rfc)","0d208e95":"print(classification_report(y_RFC,y_test))","b86e074e":"cmr= confusion_matrix(y_test,y_RFC)\nsns.heatmap(cmr\/np.sum(cmr), annot= True, fmt= '0.2%', cmap= 'coolwarm')","9b24eb10":"DTR = DecisionTreeRegressor()\nDTR.fit(x_train,y_train)\ny_pred = DTR.predict(x_test)","ae6d2304":"Acc_dt= accuracy_score(y_pred,y_test)\nprint( Acc_dt)","3d14c3cf":"print(classification_report(y_pred,y_test))","1a50ef33":"print(classification_report(y_pred,y_test))","94e2ba19":"cmd= confusion_matrix(y_test,y_pred)\nsns.heatmap(cmd\/np.sum(cmd), annot= True, fmt= '0.2%', cmap= 'twilight_shifted')","bd450e87":"Xgb = XGBClassifier(max_depth= 8,n_estimators= 125, random_state= 0, learning_rate= 0.03, n_jobs= 5)\nXgb.fit(x_train,y_train)\npred_Xgb =Xgb.predict(x_test)","c5a5211c":"Xgb_ACC = accuracy_score(y_test,pred_Xgb)\nprint(Xgb_ACC)","7330a4b0":"print(classification_report(y_test, pred_Xgb))","1625946d":"cmx = confusion_matrix(y_test,pred_Xgb)\nsns.heatmap(cmx\/np.sum(cmx), annot= True, fmt= '0.2%', cmap= 'Reds')","e5b534fc":"Kn = KNeighborsClassifier(n_neighbors= 9, leaf_size = 20)\nKn.fit(x_train,y_train)\npred_Kn =Kn.predict(x_test)","00194907":"Kn_ACC = accuracy_score(y_test,pred_Kn)\nprint(Kn_ACC)","aa39fffe":"print(classification_report(y_test, pred_Kn))","2429555c":"cmk = confusion_matrix(y_test,pred_Kn)\nsns.heatmap(cmk\/np.sum(cmk), annot= True, fmt= '0.2%', cmap= 'Blues')","11d53e4b":"models = pd.DataFrame({\"Model\":['Logistic','Random Forest','Decision Tree','XGBoost','KNeighbours'],\n           \"Accuracy\":[Acc,Acc_rfc,Acc_dt,Xgb_ACC,Kn_ACC]})#Creat Data.....\nmodels.sort_values(by='Accuracy', ascending=False)#Show the Higher to lower value order....","fa992103":"output = pd.DataFrame({\"Model\":['Logistic','Random Forest','Decision Tree','XGBoost','KNeighbours'],\n           \"Accuracy\":[Acc,Acc_rfc,Acc_dt,Xgb_ACC,Kn_ACC]})\noutput.to_csv('Water Quality EDA & Prediction', index= False)# Save My Output........","bfa6e776":"output.head()","afbfa654":"sns.barplot(x= 'Accuracy', y= 'Model', data= models)","f3c4ab21":"# **XGBoost Classifier**","a09bba59":"# **Logistic Regression**","dfa12e46":"# **KNeighbours**","0f3074b2":"# **Random Forest Classifier**","440d956e":"# **Decision Tree**","43137b96":"#  * **Here Random Forest has Achieved High Accuracy = 0.66%**\n![](https:\/\/miro.medium.com\/max\/1184\/0*a00NU4E2ueW31mcE.png) ","d64d5cb4":"# **Final Report**","86f87e88":"# **Split and Train the model**","9599f54c":"# **--------------------------Conclusion----------------------------------**"}}