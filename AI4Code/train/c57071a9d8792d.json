{"cell_type":{"be616a21":"code","05b61cdc":"code","a6371916":"code","efec08d0":"code","02fdae1e":"code","28ec4bb6":"code","3ad24255":"code","d8ee34e9":"code","d8d658d9":"code","e6a85608":"code","6d303616":"code","d3596e49":"code","0deb35bd":"code","2d17ee03":"code","ed2bd89a":"code","7bc6f3b6":"code","55c81262":"code","eca2f633":"code","de975652":"code","a44b7a91":"code","2789c9e8":"code","d0ab23b7":"code","9ac14a60":"code","6fb657fa":"code","24667bbf":"code","93f72fb2":"code","ac192da7":"code","68f02638":"code","097e2087":"code","7c300718":"code","de769f07":"code","fcec302d":"code","62254afc":"code","b28d37f8":"code","9fa40b3e":"code","d1e77820":"code","bad33f42":"code","6e03515c":"code","225e561d":"code","7b0d86c2":"code","7856354a":"code","9795081c":"code","c55b230f":"code","a22c7997":"code","51ebed11":"code","58bde951":"code","b8bb4b69":"code","b71f7f31":"code","b8f55e44":"code","de24fcbc":"code","cde94dd0":"code","6d4b3680":"code","3e03f141":"markdown","d4f02dd1":"markdown","76a33647":"markdown","9c2ccd12":"markdown","dd09f072":"markdown","8a138e63":"markdown","87452db0":"markdown","a5f33f6e":"markdown","30260619":"markdown","e6bfc045":"markdown","ab4bf810":"markdown","4dd1ed14":"markdown","bcf11c1c":"markdown","a37c9a41":"markdown","a8a44863":"markdown","1b3b359c":"markdown","7758a5b9":"markdown","7df9ac6c":"markdown","ebc50117":"markdown","52956195":"markdown","17bfc7f0":"markdown"},"source":{"be616a21":"#iKullanaca\u011f\u0131m\u0131z K\u00fct\u00fcphaneler.\nimport numpy as np\nimport seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom scipy import stats\n%matplotlib inline","05b61cdc":"#\u00c7al\u0131\u015fmada kullanaca\u011f\u0131m\u0131z veri setini ekliyoruz.\negitim = pd.read_csv(\"..\/input\/train.csv\")","a6371916":"egitim.head()","efec08d0":"egitim.shape","02fdae1e":"egitim.info()","28ec4bb6":"plt.subplots(figsize=(12, 9))\nsns.distplot(egitim['SalePrice'], fit = stats.norm)\n\n(mu, sigma) = stats.norm.fit(egitim['SalePrice'])\n\n#\u015eimdi olu\u015fturdu\u011fumuz da\u011f\u0131l\u0131m\u0131 \u00e7izdirelim.\nplt.legend(['Normal dist. ($\\mu=$ {:.2f} and $\\sigma = $ {: .2f})'.format(mu, sigma)], loc = 'best')\nplt.ylabel('Frekans')\n\n#Olas\u0131l\u0131k durumunuda \u00e7izdirelim\nfig = plt.figure()\nstats.probplot(egitim['SalePrice'], plot = plt)\nplt.show()","3ad24255":"#Evet g\u00fczel yak\u0131\u015f\u0131kl\u0131 k\u00fct\u00fcphanelerimizden  by numpy k\u00fct\u00fcphanesi bize logaritmik d\u00f6n\u00fc\u015f\u00fcmde yard\u0131mc\u0131 olacak\negitim['SalePrice'] = np.log1p(egitim['SalePrice'])\n\n#\u015eimdi normal da\u011f\u0131l\u0131m\u0131 tekrar kontrol edelim\n\nplt.subplots(figsize =(12, 9))\nsns.distplot(egitim['SalePrice'], fit = stats.norm)\n\n#\n(mu, sigma) = stats.norm.fit(egitim['SalePrice'])\n\n#\u015eimdi da\u011f\u0131l\u0131m\u0131 g\u00f6rselle\u015ftirelim\nplt.legend(['Normal Da\u011f\u0131l\u0131m. ($\\mu=$ {:.2f} and $\\sigma = $ {:.2f} )' .format(mu, sigma)], loc = 'best')\nplt.ylabel('Log Ald\u0131ktan sonraki Frekans')\n\n#Olas\u0131l\u0131k durumunu g\u00f6rselle\u015ftirelim\nfig = plt.figure()\nstats.probplot(egitim['SalePrice'], plot = plt)\nplt.show()","d8ee34e9":"#Bakal\u0131m ne kadar eksik veri mevcut e\u011fitim verisetimizde\negitim.columns[egitim.isnull().any()]","d8d658d9":"#Gelin bu eksik verilerin bir grafi\u011fini \u00e7izelim\nplt.figure(figsize =(12, 6)) # bu bizim grafik \u00e7er\u00e7evemizi belirliyor\nsns.heatmap(egitim.isnull()) # seaborn k\u00fct\u00fcphanesinden de\u011ferli arkada\u015f\u0131m\u0131z heatmak g\u00f6rseli bize yard\u0131mc\u0131 oluyor \nplt.show()","e6a85608":"#\u015eimdi gelin her bir s\u00fctunda bulunan  bu eksik de\u011ferlerin ne kadar olduklar\u0131na bakal\u0131m.\nIsnull = egitim.isnull().sum() \/ len(egitim) * 100\nIsnull = Isnull[Isnull > 0]\nIsnull.sort_values(inplace = True, ascending = False)\nIsnull","6d303616":"#\u00d6nce verileri d\u00f6n\u00fc\u015ft\u00fcrelim\nIsnull = Isnull.to_frame()","d3596e49":"#\u015eimdi Her bir s\u00fctundaki de\u011ferlerin say\u0131s\u0131n\u0131 alal\u0131m\nIsnull.columns = ['count']","0deb35bd":"Isnull.index.names = ['\u0130simler']","2d17ee03":"Isnull['Name'] = Isnull.index","ed2bd89a":"#Art\u0131k g\u00f6rselle\u015ftirelim de\u011fil mi \nplt.figure(figsize = (15, 9))\nsns.set(style = 'whitegrid')\nsns.barplot(x = 'Name', y = 'count', data = Isnull)\nplt.xticks(rotation = 90)\nplt.show()","7bc6f3b6":"#Verilerimizin i\u00e7erisinden sadece say\u0131sal verisetini ay\u0131ral\u0131m yukar\u0131daka g\u00f6rm\u00fc\u015ft\u00fck, 81 tane s\u00fctundan 38 tanesi say\u0131sal veri i\u00e7eriyordu\negitim_corr = egitim.select_dtypes(include = [np.number])","55c81262":"egitim_corr.shape","eca2f633":"#Gelin Id s\u00fctunu veri setimizden silelim \u00e7\u00fcnk\u00fc bu bize korelasyon ili\u015fkisi hakk\u0131nda bir bilgi vermeyecek \ndel egitim_corr['Id']","de975652":"#Evet Art\u0131k korelasyon grafi\u011fimizi \u00e7izebiliriz.\ncorr = train_corr.corr()\nplt.subplots(figsize = (20, 11))\nsns.heatmap(corr, annot = True)","a44b7a91":"eniyi_50_deger = corr.index[abs(corr['SalePrice'] > 0.5)]\nplt.subplots(figsize = (12, 8))\neniyi_iliski = egitim[eniyi_50_deger].corr()\nsns.heatmap(eniyi_iliski, annot = True)\nplt.show()","2789c9e8":"#OverallQual \u00f6zelli\u011findeki benzersiz de\u011ferlere bakal\u0131m\negitim.OverallQual.unique()","d0ab23b7":"#Gelin bunlar\u0131 bir \u00e7ubuk grafi\u011finde g\u00f6relim\nsns.barplot(egitim.OverallQual, egitim.SalePrice)","9ac14a60":"#Birde bu durumlar\u0131 kutu grafi\u011finde inceleyelim\nplt.figure(figsize=(18,10))\nsns.boxplot(x = egitim.OverallQual, y = egitim.SalePrice)","6fb657fa":"col = ['SalePrice', 'OverallQual', 'GrLivArea', 'GarageCars', 'TotalBsmtSF', 'FullBath', 'TotRmsAbvGrd', 'YearBuilt']\nsns.set(style = 'ticks')\nsns.pairplot(egitim[col], size = 3, kind = 'reg')","24667bbf":"print('Hedef de\u011fi\u015fken(SalePrice) ile en iyi ili\u015fkisi olan de\u011fi\u015fkeni bulal\u0131m')\ncorr = egitim.corr()\ncorr.sort_values(['SalePrice'], ascending = False, inplace = True)\n\ncorr.SalePrice","93f72fb2":"#Mesela PoolQC de\u011feri yakla\u015f\u0131k %99 bo\u015f veriden olu\u015fuyor  bunu None olarak doldural\u0131m\negitim['PoolQC'] = egitim['PoolQC'].fillna('None')","ac192da7":"#\u00d6zellikler i\u00e7inde % 50 civar\u0131nda eksik de\u011fer i\u00e7ierenleri None ile doldural\u0131m\negitim['MiscFeature'] = egitim['MiscFeature'].fillna('None')\negitim['Alley'] = egitim['Alley'].fillna('None')\negitim['Fence'] = egitim['Fence'].fillna('None')\negitim['FireplaceQu'] = egitim['FireplaceQu'].fillna('None')","68f02638":"# Mahalleye g\u00f6re grupland\u0131ral\u0131m ve t\u00fcm de\u011ferleri medyan LotFrontage ile eksik de\u011feri doldurun\negitim['LotFrontage'] = egitim.groupby(\"Neighborhood\")[\"LotFrontage\"].transform(\n    lambda x: x.fillna(x.median()))","097e2087":"#GarageType, GarageFinish, GarageQual ve GarageCond bunlar\u0131da none ile de\u011fi\u015ftirelim\nfor col in ['GarageType', 'GarageFinish', 'GarageQual', 'GarageCond']:\n    egitim[col] = egitim[col].fillna('None')","7c300718":"#GarageYrBlt, GarageArea ve GarageCars bunlar\u0131da s\u0131f\u0131r ile de\u011fi\u015ftirelim\nfor col in ['GarageYrBlt', 'GarageArea', 'GarageCars']:\n    egitim[col] = egitim[col].fillna(int(0))\n","de769f07":"#BsmtFinType2, BsmtExposure, BsmtFinType1, BsmtCond, BsmtQual None ile de\u011fi\u015ftirelim\nfor col in ('BsmtFinType2', 'BsmtExposure', 'BsmtFinType1', 'BsmtCond', 'BsmtQual'):\n    egitim[col] = egitim[col].fillna('None')\n","fcec302d":"#MasVnrArea'y\u0131 da s\u0131f\u0131r ile de\u011fi\u015ftirelim \negitim['MasVnrArea'] = egitim['MasVnrArea'].fillna(int(0))","62254afc":"#MasVnrType  s\u00fctununu da None ile de\u011fi\u015ftirelim\negitim['MasVnrType'] = egitim['MasVnrType'].fillna('None')","b28d37f8":"#Mode De\u011ferlerini ekleyelim\negitim['Electrical'] = egitim['Electrical'].fillna(egitim['Electrical']).mode()[0]","9fa40b3e":"#Utilities e de ihtiyac\u0131m\u0131z yok onuda atal\u0131m veri setimizden\negitim = egitim.drop(['Utilities'], axis =1)\n","d1e77820":"#\u015eimdi gelin bakal\u0131m veri setimizin ahvali nas\u0131l, null de\u011fer i\u00e7eriyormu bir kontrol edelim\nplt.figure(figsize =(10, 5))\nsns.heatmap(egitim.isnull())","bad33f42":"cols = ('FireplaceQu', 'BsmtQual', 'BsmtCond', 'GarageQual', 'GarageCond', \n        'ExterQual', 'ExterCond','HeatingQC', 'PoolQC', 'KitchenQual', 'BsmtFinType1', \n        'BsmtFinType2', 'Functional', 'Fence', 'BsmtExposure', 'GarageFinish', 'LandSlope',\n        'LotShape', 'PavedDrive', 'Street', 'Alley', 'CentralAir', 'MSSubClass', 'OverallCond', \n        'YrSold', 'MoSold', 'MSZoning', 'LandContour', 'LotConfig', 'Neighborhood',\n        'Condition1', 'Condition2', 'BldgType', 'HouseStyle', 'RoofStyle', 'RoofMatl', 'Exterior1st',\n        'Exterior2nd', 'MasVnrType', 'MasVnrArea', 'Foundation', 'GarageType', 'MiscFeature', \n        'SaleType', 'SaleCondition', 'Electrical', 'Heating')","6e03515c":"from sklearn.preprocessing import LabelEncoder\nfor c in cols:\n    lbl = LabelEncoder()\n    lbl.fit(list(egitim[c].values))\n    egitim[c] = lbl.transform(list(egitim[c].values))","225e561d":"#Evet Art\u0131k verilerimizi tahminde kullanmak i\u00e7in haz\u0131rl\u0131klar\u0131 tamamlayabiliriz\n#Hedef de\u011fi\u015fkenimiz olan SalePrice de\u011fi\u015fkenini yeni bir de\u011fi\u015fkene yani y'ye atayarak ba\u015flayal\u0131m\ny = egitim['SalePrice']","7b0d86c2":"#Tahmin edece\u011fiimiz hedef de\u011fi\u015fkeni art\u0131k veri setimizden sile biliriz\ndel egitim['SalePrice']","7856354a":"#X ve Y de\u011ferlerini belirleyelim\nX = egitim.values\ny = y.values","9795081c":"#\u015eimdi de verilerimizi e\u011fitim ve test verileri olmak \u00fczere ikiye ay\u0131ral\u0131m (%80 e\u011fitim, % 20 test)\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 7)","c55b230f":"#Modeli \u00f6nce e\u011fitelim\nfrom sklearn import linear_model\nmodel = linear_model.LinearRegression()","a22c7997":"#E\u011fitti\u011fimiz modele verilerimizi uygulayal\u0131m\nmodel.fit(X_train, y_train)","51ebed11":"#\u015eimdi de e\u011fitti\u011fimiz modelimiz \u00fczerinden tahminler yapal\u0131m\nprint(\"Tahmin edilen de\u011fer : \" + str(model.predict([X_test[142]])))\nprint(\"Ger\u00e7ek de\u011fer : \" + str(y_test[142]))","58bde951":"#Bakal\u0131m ne kadar do\u011frulukla tahmin yapabilmi\u015fiz\nprint(\"Do\u011fruluk oran\u0131 :  \", model.score(X_test, y_test)* 100)","b8bb4b69":"#Modeli E\u011fitelim yine\nfrom sklearn.ensemble import RandomForestRegressor\nmodel = RandomForestRegressor(n_estimators = 1000)","b71f7f31":"#\u015eimdi veri setimizi model uygulayal\u0131m\nmodel.fit(X_train, y_train)","b8f55e44":"#Modelimizin do\u011frulu\u011funu kontrol edelim\nprint(\"Do\u011fruluk oran\u0131 :\", model.score(X_test, y_test)*100)","de24fcbc":"#Son kez modelimizi e\u011fitelim\nfrom sklearn.ensemble import GradientBoostingRegressor\nGBR = GradientBoostingRegressor(n_estimators = 100, max_depth = 4)","cde94dd0":"#E\u011fitti\u011fimiz modele e\u011fitim verilerimizi  uygulayal\u0131m\nGBR.fit(X_train, y_train)","6d4b3680":"#Do\u011fruluk oran\u0131m\u0131z\u0131 da kontrol edelim son olarak\nprint('Do\u011fruluk Oran\u0131: ', GBR.score(X_test, y_test)*100)","3e03f141":"Evet son pehlivan baya\u011f\u0131 g\u00fc\u00e7l\u00fc \u00e7\u0131kt\u0131, ve do\u011fruluk oran\u0131n\u0131 %91.77 olarak tahmin etmi\u015f oldu. G\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere Sat\u0131\u015f fiyatlar\u0131nda tahmin olarak iyi bir oran yakalam\u0131\u015f bulunuyoruz, \u015fimdi ev fiyatlar\u0131n\u0131 tahmin etmek bizim i\u00e7in +- %10  yan\u0131lma pay\u0131 ile yapabilece\u011fimiz bir tahmin olacakt\u0131r.\n\nBir \u00e7al\u0131\u015fmam\u0131z\u0131n daha sonuna geldik, yanl\u015f ve eksiklikler bana aittir. D\u00fczeltmeler i\u00e7in yorumlar\u0131n\u0131z\u0131 bekliyorum. Emlak piyasas\u0131nda yeni tahminler olu\u015fturmaya ve geli\u015ftirmeye devam...\n","d4f02dd1":"### E\u011fitim veri seti i\u00e7erisinde bulunan \u00f6zellikler aras\u0131ndaki korelasyona bir g\u00f6z atal\u0131m.","76a33647":"Yukar\u0131daki \u00e7\u0131kt\u0131dan anla\u011f\u0131ld\u0131\u011f\u0131 kadar\u0131 ile, e\u011fitim veri setimizde ; 3 \u00f6zellik Kayan noktal\u0131(float) veri tipinden, 35 \u00f6zellik say\u0131sal(int) t\u00fcrden, 43 \u00f6zellik ise nesne(object) veri t\u00fcr\u00fcnden olmak \u00fczere toplamda 81 \u00f6zelli\u011fe sahip bir veri k\u00fcmemiz mevcut.","9c2ccd12":"\u015eimdi bizim bu \u00e7al\u0131\u015fmadaki amac\u0131m\u0131z Sat\u0131\u015f fiyatlar\u0131n\u0131 tahmin etmek oldu\u011fundan, biraz sat\u0131\u015f fiyatlar\u0131n\u0131n ahvalini inceleyelim.","dd09f072":"### Gelin eksik de\u011ferlere baz\u0131 i\u015flemler yapapl\u0131m","8a138e63":"E\u011fitim veri setimizin ilk bir ka\u00e7 sat\u0131r\u0131na g\u00f6z atal\u0131m.(pythonda bu ilk 6 sat\u0131rd\u0131r)","87452db0":"Evet, tamam i\u015flem ge\u00e7erli, t\u00fcm veri seti i\u00e7erisinden sadece say\u0131sal(numerik-int) verileri ay\u0131klam\u0131\u015f olduk.\n","a5f33f6e":"%89.2 Hi\u00e7te fena bir do\u011fruluk de\u011fil, Gelin birde di\u011fer algoritmalar nas\u0131l performans g\u00f6stercek onlara bakal\u0131m.\n\n### S\u0131radaki Babayi\u011fit Rastgele Orman Regresyonu(RandomForestRegression)","30260619":"Bak\u0131n, yukar\u0131daki grafiklerde de\u011fi\u015fkenlerin hedef de\u011fi\u015fken(SalePrice) ile olan ili\u015fkileri daha iyi g\u00f6r\u00fcn\u00fcyor.","e6bfc045":"Evet, yapt\u0131\u011f\u0131m\u0131z i\u015flem faydal\u0131 oldu, bak\u0131n \u015fimdi da\u011f\u0131l\u0131m grafi\u011fimiz daha normal bir sonu\u00e7 veriyor ve regresyon \u00e7izgisi verilere daha uyumlu hale geliyor.\n\nHadi gelin \u015fimdi de e\u011fitim verisetimizdeki eksik verileri(bunlar bizim i\u00e7in problem te\u015fkil eden de\u011ferler) tespit edelim.\n","ab4bf810":"### Evet Art\u0131k maharetlerimizi g\u00f6sterip modelimizi e\u011fitelim , ilk olarak \"Do\u011frusal Regresyon\" Algoritmas\u0131 ile ba\u015flayal\u0131m","4dd1ed14":"### Bu \u00f6rnek \u00e7al\u0131\u015fmam\u0131zda ev fiyatlar\u0131n\u0131 \u00f6zelliklerine g\u00f6re tahmin etmeye \u00e7al\u0131\u015faca\u011f\u0131z.\n\n\u0130lk olarak \u00e7al\u0131\u015fmam\u0131zda kullanaca\u011f\u0131m\u0131z python k\u00fct\u00fcphanelerini ortama ekleyeyek i\u015fleme ba\u015flayal\u0131m.","bcf11c1c":"E\u011fitim veri setimizin ka\u00e7 g\u00f6zlem ve ka\u00e7 \u00f6zellikten olu\u015ftu\u011funu kontrol edelim.","a37c9a41":"Evey yukar\u0131daki \u00e7\u0131kt\u0131dan anla\u015f\u0131laca\u011f\u0131 \u00fczere e\u011fitim veri setimiz 1460 g\u00f6zlem(sat\u0131r) ve 81 \u00f6zellik(s\u00fctun)'dan olu\u015fmaktad\u0131r.\n\n\u015eimdi de e\u011fitim veri setimiz hakk\u0131nda genel birlgi almaya \u00e7al\u0131\u015fal\u0131m.","a8a44863":"%89.2'den %89.4'e bir art\u0131\u015f oldu, azda olsa bir geli\u015fme var.  Evet son pehlivanda g\u00fcc\u00fcn\u00fc g\u00f6stersin bakal\u0131m ne kadar do\u011frulukta tahminde bulunabilecek.  Son pehlivan\u0131m\u0131z....\n\n- ## GradientBoostingRegressor\n","1b3b359c":"Evet Korelasyon matrisinin grafi\u011fi bize \u00e7ok \u015feyle s\u00f6yler, hangi \u00f6zelliklerin birbirleri ile ili\u015fkisi var, hangileri \u00f6nemsiz bize bu bilgileri verir korelasyon matrisi. Seaborn k\u00fct\u00fcphanesi bizim i\u00e7in \u00e7ok g\u00fczel kolayl\u0131klar sa\u011fl\u0131yor.\n\n**Gelin \u015f\u00f6yle bir\u015fey yapal\u0131m ve bu korele ili\u015fkilerinden bize en \u00e7ok biilgi veren ilk %50 sinin g\u00f6rseline eri\u015fmeye \u00e7al\u0131\u015fal\u0131m.**","7758a5b9":"#### Encoding str to int","7df9ac6c":"Aman aman, bak\u0131n kimlerde ne kadar eksik de\u011ferler varm\u0131\u015f, tabi yukar\u0131da kodlar\u0131 olu\u015ftururken % olarak \u00e7\u0131kt\u0131 almak istedi\u011fimizi anlad\u0131k de\u011filmi!\n\n### Gelin \u015fimdi de bu eksik de\u011ferleri g\u00f6rselle\u015ftirelim","ebc50117":"Evet da\u011f\u0131l\u0131m grafi\u011fi bize baz\u0131 \u015feyler s\u00f6ylemekte, gelin bu grafikten neler anlayaca\u011f\u0131m\u0131z\u0131 birlikte yorumlayal\u0131m. Grafikten g\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere da\u011f\u0131l\u0131m sa\u011fa \u00e7arp\u0131k bir yap\u0131ya sahip(istatistik ve olas\u0131l\u0131k bilgimize dayanarak :)  \u015eimdi gelin bu da\u011f\u0131l\u0131m\u0131 notmale daha yak\u0131n bir forma d\u00f6n\u00fc\u015ft\u00fcrelim, bu noktada bize kim yard\u0131m edecek diye d\u00fc\u015f\u00fcn\u00fcrken logaritmik d\u00f6n\u00fc\u015f\u00fcm fonksiyonu yard\u0131m\u0131m\u0131za geliyor ve Python'da bulunan log fonksiyonu ile i\u015flemimizi kolay bir\u015fekilde ger\u00e7ekl\u015fetiriyoruz.\n\nNot: logaritmik d\u00f6n\u00fc\u015f\u00fcm ilei lgili detayl\u0131 bilgi almak isterseniz ekteki [link](https:\/\/whatis.techtarget.com\/definition\/skewness)faydal\u0131 olaiblir.\n\n**Burada \u015fimdi log fonksiyonundan faydalanarak hedef de\u011fi\u015fkenimiz olan 'SalePrice' '\u0131n daha notmal bir da\u011f\u0131l\u0131m g\u00f6sterdi\u011fini hep birlikte g\u00f6relim.**","52956195":"Oooo g\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere null de\u011fer i\u00e7eren bir \u00f6zellik(s\u00fctun) yok ","17bfc7f0":"Bak\u0131n \u015fimdi daha net g\u00f6rmeye ba\u015flad\u0131k, g\u00f6r\u00fcld\u00fck\u00fc kadar\u0131 ile bizim SalePrice(Sat\u0131\u015f Fiyat\u0131) ile ilgili en iyi ili\u015fki i\u00e7erisinde olan \u00f6zellik \nOverallQual \u00f6zelli\u011fi oldu\u011fu anla\u0131l\u0131yor de\u011feri %82 gibi bir oran."}}