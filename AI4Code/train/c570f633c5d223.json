{"cell_type":{"02b3745c":"code","9f046ad7":"code","570d5aaf":"code","bba944e2":"code","21f06925":"code","9b7846f1":"code","b5b2e8d8":"code","230f74a8":"code","7caece52":"code","cb0f26cc":"code","d75cc41a":"code","739a75a3":"code","dcf93ac2":"code","81374ff3":"code","1d741936":"code","b0df270f":"code","bd983863":"code","e8f7fc11":"code","110f6eb1":"code","8e47d8ae":"code","bc8d3744":"code","5cd5d381":"code","8d063a9d":"code","1e3e63aa":"code","ec86db96":"code","2de86886":"code","b44ec288":"code","17062dd1":"code","ec01027a":"code","d9e29b47":"code","e56677d6":"code","2b92bad5":"code","729b1f33":"code","5d78c4b2":"code","c6672a17":"markdown"},"source":{"02b3745c":"import pandas as pd","9f046ad7":"df = pd.read_csv(\"..\/input\/twitter-user-gender-classification\/gender-classifier-DFE-791531.csv\")","570d5aaf":"df.head()","bba944e2":"df.shape","21f06925":"df.isnull().sum()","9b7846f1":"df.columns","b5b2e8d8":"df = df[['_unit_state', '_trusted_judgments',\n       'gender', 'gender:confidence', 'profile_yn',\n       'profile_yn:confidence', 'description', \n       'gender_gold',  'name', \n       'retweet_count', 'sidebar_color', 'text', 'tweet_coord', 'tweet_count',\n        'tweet_location']]","230f74a8":"df.head(1)","7caece52":"df.isnull().sum()","cb0f26cc":"df['gender'].fillna(df['gender'].mode(),inplace = True)","d75cc41a":"df.isnull().sum()","739a75a3":"from sklearn.preprocessing import LabelEncoder","dcf93ac2":"le = LabelEncoder()","81374ff3":"df.columns","1d741936":"df.info()","b0df270f":"cat_cols = ['_unit_state',   'gender:confidence',\n       'profile_yn',  'description', \n       'name', 'retweet_count', 'sidebar_color', 'text', 'tweet_coord',\n        'tweet_location']","bd983863":"df['gender'] = le.fit_transform(df['gender'])\ndf['_unit_state'] = le.fit_transform(df['_unit_state'])\ndf['gender:confidence'] = le.fit_transform(df['gender:confidence'])\ndf['profile_yn'] = le.fit_transform(df['profile_yn'])\ndf['description'] = le.fit_transform(df['description'])\n\n\n\n\n","e8f7fc11":"df.info()","110f6eb1":"df.columns","8e47d8ae":"x = df[['_unit_state', '_trusted_judgments', 'gender:confidence',\n       'profile_yn', 'profile_yn:confidence', 'description',\n       'tweet_count', ]].values\ny = df[['gender']].values","bc8d3744":"x ","5cd5d381":"y","8d063a9d":" from sklearn.model_selection import train_test_split","1e3e63aa":"X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.33, random_state=42)","ec86db96":"from sklearn.neural_network import MLPClassifier","2de86886":"mlp = MLPClassifier(hidden_layer_sizes=(8,8,8), activation='relu', solver='adam', max_iter=500)\n\nmlp.fit(X_train,y_train)\n\n\npredict_train = mlp.predict(X_train)\n\npredict_test = mlp.predict(X_test)","b44ec288":"from sklearn.metrics import classification_report,confusion_matrix\n\nprint(confusion_matrix(y_train,predict_train))\n\nprint(classification_report(y_train,predict_train))\n\n","17062dd1":"clf = MLPClassifier(solver='lbfgs', alpha=1e-5,\n                     hidden_layer_sizes=(5, 2), random_state=1)\nclf.fit(X_train, y_train)\nMLPClassifier(alpha=1e-05, hidden_layer_sizes=(5, 2), random_state=1,\n              solver='lbfgs')","ec01027a":"[coef.shape for coef in clf.coefs_]","d9e29b47":" clf.predict_proba(X_test)","e56677d6":"y_pred = clf.predict(X_test)","2b92bad5":"list(y_pred)\n","729b1f33":"from sklearn.metrics import accuracy_score","5d78c4b2":"accuracy_score(y_test, y_pred)\n","c6672a17":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session"}}