{"cell_type":{"6896a2ee":"code","e1c645e1":"code","50d0fa10":"code","7b47556c":"code","73e662d3":"code","b2be1e57":"code","b3c8fef6":"code","0d666e6c":"code","ab590bbf":"code","765cf3c6":"code","0f8d31a8":"code","95e16c6b":"code","862cefcb":"code","fef22675":"code","70e87532":"code","353ae8f1":"code","82beb33e":"code","136e6f49":"code","cb2d70b6":"code","1d0de759":"code","0c55d27a":"code","fa5a2df4":"code","b11250a5":"code","57aa06c1":"code","795a4be2":"code","dca8512c":"code","87e32dbc":"code","8aeff194":"code","ac91d25a":"code","e34428fa":"code","84bbcc40":"code","f1a587f4":"code","9a2bf752":"code","d77bf002":"code","ebb43948":"code","aef85411":"code","89f59879":"code","c24a04b5":"code","23350c3e":"code","16b844b2":"code","99942779":"code","d95a2495":"code","e0e54fb7":"markdown","a01d9d42":"markdown","d9498155":"markdown","8759bf91":"markdown","91b4b7b5":"markdown","a5790579":"markdown","de2404ea":"markdown","9852965e":"markdown","e84e5c39":"markdown","14acba19":"markdown","8412771e":"markdown","21e8b53b":"markdown","0a08ca87":"markdown","881765f1":"markdown","e2c4af6b":"markdown","681c5bea":"markdown","ccded4a8":"markdown","02b62edd":"markdown","5d8a18af":"markdown","e983ddfa":"markdown","9ff69a8c":"markdown","a19fd230":"markdown","0a838355":"markdown","a00fa73a":"markdown","d0a7196b":"markdown"},"source":{"6896a2ee":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e1c645e1":"# Import Libraries for visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Import libraries for train test split\nfrom sklearn.model_selection import train_test_split\n\n# import Ilbrary for Scaling\nfrom sklearn.preprocessing import StandardScaler\n\n# import Ilbrary for Model Building\nfrom sklearn.linear_model import LinearRegression\n\n# Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')","50d0fa10":"# Import the data set\nadmission_org = pd.read_csv(\"..\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv\")\n\n# Print top 5 rows of dataset\nadmission_org.head()\n","7b47556c":"admission_org.info()","73e662d3":"# Create a copy of data set\nadmission_cpy = admission_org.copy()","b2be1e57":"# Check column names\nadmission_cpy.columns","b3c8fef6":"admission_cpy = admission_cpy.rename(columns= {'Chance of Admit ': 'Admit percent'})","0d666e6c":"# Remove leading and trailing edges\nadmission_cpy.columns = admission_cpy.columns.str.strip()\n\n# Replacing space in-between feature names with underscore\nadmission_cpy.columns = admission_cpy.columns.str.replace(' ','_')\n\n# print coloumns after stripping spaces\nprint(\"After removing the trailing spaces of the features \",  admission_cpy.columns)","ab590bbf":"#No need of serial no. in admission prediction\nadmission_cpy=admission_cpy.drop('Serial_No.', axis=1)\n\n# Check Null Values in data set\nadmission_cpy.isnull().sum()","765cf3c6":"# Value_counts for GRE_Score\nadmission_cpy.GRE_Score.value_counts()","0f8d31a8":"# Value_counts for TOEFL_Score\nadmission_cpy.TOEFL_Score.value_counts()","95e16c6b":"# Value_counts for University_Rating \nadmission_cpy.University_Rating.value_counts()","862cefcb":"# Value_counts for SOP \nadmission_cpy.SOP.value_counts()","fef22675":"# Value_counts for LOR \nadmission_cpy.LOR.value_counts()","70e87532":"# Value_counts for CGPA\nadmission_cpy.CGPA.value_counts()","353ae8f1":"# Value_counts for Research\nadmission_cpy.Research.value_counts()","82beb33e":"# Value_counts for Admit percent\nadmission_cpy.Admit_percent.value_counts()","136e6f49":"admission_cpy.Admit_percent.plot.box()\nplt.show()","cb2d70b6":"admission_cpy.Admit_percent.describe()","1d0de759":"# Check distribution of Target Variable\nsns.distplot(admission_cpy.Admit_percent)\nplt.title(\"Admission percentage Distribution Plot\",fontsize=15)\nplt.show()","0c55d27a":"#Let's see relation between GRE score and admit percent \nplt.figure(figsize=(10,5))\nadmission_cpy.groupby(['GRE_Score'])['Admit_percent'].mean().sort_values(ascending=False).head(25).plot.bar()\nplt.ylabel('Admission percentage')\nplt.title(\"Admission percentage vs GRE Score\",fontsize=18)\nplt.show()","fa5a2df4":"#Let's see relation between TOEFL Score and admit percent\nplt.figure(figsize=(10,5))\nadmission_cpy.groupby(['TOEFL_Score'])['Admit_percent'].mean().sort_values(ascending=False).head(25).plot.bar()\nplt.ylabel('Admission percentage')\nplt.title(\"Admission percentage vs TOEFL Score\",fontsize=18)\nplt.show()","b11250a5":"#Let's see relation between University Rating and admit percent\nplt.figure(figsize=(10,5))\nadmission_cpy.groupby(['University_Rating'])['Admit_percent'].mean().sort_values(ascending=False).head(25).plot.bar()\nplt.ylabel('Admission percentage')\nplt.title(\"Admission percentage vs University Rating\",fontsize=18)\nplt.show()","57aa06c1":"#Let's see relation between SOP and admit percent\nplt.figure(figsize=(10,5))\nadmission_cpy.groupby(['SOP'])['Admit_percent'].mean().sort_values(ascending=False).head(25).plot.bar()\nplt.ylabel('Admission percentage')\nplt.title(\"Admission percentage vs SOP\",fontsize=18)\nplt.show()","795a4be2":"#Let's see relation between LOR and admit percent\nplt.figure(figsize=(10,5))\nadmission_cpy.groupby('LOR')['Admit_percent'].mean().sort_values(ascending=False).head(25).plot.bar()\nplt.ylabel('Admission percentage')\nplt.title(\"Admission percentage vs LOR\",fontsize=18)\nplt.show()","dca8512c":"#Let's see relation between CGPA and admit percent\nplt.figure(figsize=(10,5))\nadmission_cpy.groupby(['CGPA'])['Admit_percent'].mean().sort_values(ascending=False).head(25).plot.bar()\nplt.ylabel('Admission percentage')\nplt.title(\"Admission percentage vs CGPA\",fontsize=18)\nplt.show()","87e32dbc":"#Let's see relation between Research and admit percent\nplt.figure(figsize=(10,5))\nadmission_cpy.groupby(['Research'])['Admit_percent'].mean().sort_values(ascending=False).head(25).plot.bar()\nplt.ylabel('Admission percentage')\nplt.title(\"Admission percentage vs Research\",fontsize=18)\nplt.show()","8aeff194":"# Plot a pair plot\nplt.figure(figsize=(15,20))\nsns.pairplot(admission_cpy)\nplt.show()","ac91d25a":"# HeatMap\nplt.figure(figsize=(10,5))\nsns.heatmap(admission_cpy.corr(),annot=True)","e34428fa":"# A copy of data frame for model building\nadmission_master = admission_cpy.copy()\nadmission_master.info()","84bbcc40":"# Split the data into train and test \nadmit_train, admit_test = train_test_split(admission_master,train_size=0.7, random_state=42)","f1a587f4":"# Shape of train set\nprint(admit_train.shape)\n\n# Shape of test set\nprint(admit_test.shape)","9a2bf752":"# Divide tarining set into dependent and independent variables\ny_train = admit_train.pop('Admit_percent')\n\nx_train = admit_train\n\n\n# Divide test set into dependent and independent variables\ny_test = admit_test.pop('Admit_percent')\n\nx_test = admit_test","d77bf002":"# Scale the training set\nscaler = StandardScaler()\n\nx_train[x_train.columns] = scaler.fit_transform(x_train[x_train.columns])\n\nx_train.describe()","ebb43948":"# Scale the test set\nx_test[x_test.columns] = scaler.transform(x_test[x_test.columns])\n\nx_test.describe()","aef85411":"# Build the model\n\nlr = LinearRegression()\n\nadmit_reg = lr.fit(x_train,y_train)","89f59879":"# Verify the r2 score\nadmit_reg.score(x_train,y_train)","c24a04b5":"# r2 for test data\nadmit_reg.score(x_test,y_test)","23350c3e":"# Plot Distribution plot of Residuals\nplt.figure(figsize=(10,5))\ny_train_pred = admit_reg.predict(x_train)\nres = y_train - y_train_pred\nsns.distplot(res)\nplt.xlabel('Residuals')\nplt.title(\"Residual Analysis\",fontsize=20)\nplt.show()","16b844b2":"sns.scatterplot(x=res,y=y_train_pred)\nplt.xlabel('Residuals')\nplt.title(\"Residual Analysis\",fontsize=20)\nplt.show()","99942779":"# Print coef\nprint(\"Coef are:\",admit_reg.coef_)\n\n#print intercept\nprint(\"Intercept is\",admit_reg.intercept_)","d95a2495":"model = str(admit_reg.intercept_)\n\nfor i in range(len(admit_reg.coef_)):\n    model = model +' + '  +(str(admit_reg.coef_[i])) + ' * ' +(str(x_train.columns[i]))\nprint(model)","e0e54fb7":"# **Data Cleaning and Preparation**","a01d9d42":"Since the mean of the residual analysis is around 0, it's satisfied","d9498155":"Let us check the R-squared","8759bf91":"# Scaling","91b4b7b5":"Turns out Admit_percent has very strong correlations with GRE_Score, TOEFL_Score, CGPA and significant corellations with University_Rating, SOP, LOR and Research. ","a5790579":"Changing coloumn name **Chance of Admit** to **Admit percent**","de2404ea":"From the box plot and the describe function it's clear that there are not many outliers present so we can keep the dataset as it is","9852965e":"From the above charts, it looks like Admit_percent has a linear correlation with GRE_Score, TOEFL_Score and CGPA. Lets visualize the correlation coefficients using heatmap","e84e5c39":"Since there are no null values in any coloumn we can proceed to value_counts","14acba19":"Let's check relation between the target variable and other independent features","8412771e":"Since the residuals don't form a triangular patern, the assumption of equality of variance is satisfied","21e8b53b":"Checking dimensions","0a08ca87":"# Test-Train Split","881765f1":"Since **LOR** and **Chance of Admit** have trailing spaces, need to remove them","e2c4af6b":"# Exploratory Data analysis","681c5bea":"# Observations\n\nAll the features have small but effective coefficients driving the variance of the dependent variable\nFrom all the above features, TOEFL score and University Rating have very low coefficients hence their role in predicting University admission percentage is minimum.","ccded4a8":"Since the dataset has no categorical features, it does not need feature encoding","02b62edd":"Box plot for outliers detection","5d8a18af":"Studying the above graphs it clearly shows the trend of the target variable i.e. Admit_percent follows with other independent variables. More the score in the independent variables greater the chance of admission.","e983ddfa":"# Model equation","9ff69a8c":"# Seperate Dependent and Independent Variables ","a19fd230":"# Model Evaluation","0a838355":"# Assumptions of linear regression","a00fa73a":"# Model Building","d0a7196b":"# The model has generated can be used for Admission percentage prediction. Let's check the coefficients and intercept of the equation"}}