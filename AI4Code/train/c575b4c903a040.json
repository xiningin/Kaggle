{"cell_type":{"9bd48524":"code","dcb07670":"code","b22bcadd":"code","dd49bb56":"code","6d696fa0":"code","5697024c":"code","ee7aeda9":"code","824aca1f":"code","7e09b964":"code","cdd5415d":"code","2bac298b":"code","948625b0":"code","a019fa53":"code","7051aded":"markdown","4d16b0bf":"markdown","4d7afadf":"markdown","3f1206eb":"markdown","e74c6302":"markdown"},"source":{"9bd48524":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dcb07670":"import pandas as pd\nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.graph_objs as go\nimport plotly\nimport plotly.express as px\nimport plotly.figure_factory as ff\nfrom plotly.offline import init_notebook_mode, iplot\nfrom plotly.subplots import make_subplots\nimport cufflinks\nplt.style.use('ggplot')\ncufflinks.go_offline()\ncufflinks.set_config_file(world_readable=True, theme='pearl')","b22bcadd":"df = pd.read_csv('\/kaggle\/input\/nigerian-songs-spotify\/nigerian_spotify_songs1.csv')","dd49bb56":"df.info()","6d696fa0":"df.isnull().sum()","5697024c":"df.describe()","ee7aeda9":"df.head()","824aca1f":"a = df.artist.value_counts().head(10).reset_index()\na.columns = ['artist', 'count']\n\n\nb = df.album.value_counts().head(10).reset_index()\nb.columns = ['album', 'count']\n\nfig = make_subplots(rows=1, cols=2, subplot_titles= ('Top 10 Artist Occurence', 'Top 10 album occurence'))\n\nfig.add_trace(go.Bar(x= a['artist'], y= a['count'], marker=dict(color=a['count'], coloraxis=\"coloraxis\")), row=1, col=1)\nfig.add_trace(go.Bar(x= b['album'], y= b['count'], marker=dict(color=b['count'], coloraxis=\"coloraxis\")), row=1, col=2)\n\nfig.update_layout(coloraxis=dict(colorscale='emrld'), showlegend=False)\nfig.show()","7e09b964":"c = df.sort_values(by='popularity', ascending=False).head(10)\npx.bar(c, x= 'name', y='popularity', color_discrete_sequence=px.colors.qualitative.Set2, title= 'Top 10 most popular songs')","cdd5415d":"pie = df.artist_top_genre.value_counts()\npie_df = pd.DataFrame({'index':pie.index, 'values': pie.values})\npie_df.iplot(kind='pie', labels= 'index', values= 'values', hole= .5, title=\"Value counts: genre\")","2bac298b":"px.sunburst(c, path=['release_date', 'artist', 'artist_top_genre'], values='popularity', title= 'Sunburst chart for top songs',\n           color_discrete_sequence=px.colors.qualitative.Set2)","948625b0":"e = df.groupby(['release_date', 'artist_top_genre']).count().reset_index()\n\npx.line(e, x='release_date', y='name', labels= {'name':'count'}, title= 'Songs over time', color= 'artist_top_genre')","a019fa53":"cor = df.corr()\n\n\nmask = np.zeros_like(cor, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\nsns.set_style('whitegrid')\nplt.subplots(figsize = (15,12))\nsns.heatmap(cor, \n            annot=True,\n            mask = mask,\n            cmap = 'RdBu_r', ## in order to reverse the bar replace \"RdBu\" with \"RdBu_r\"\n            linewidths=.9, \n            linecolor='white',\n            fmt='.2g',\n            center = 0,\n            square=True)\nplt.title(\"Correlations Among Numeric Dtypes\", y = 1.03,fontsize = 20, pad = 40)","7051aded":"# 2.) EDA","4d16b0bf":"# 0.) Libraries","4d7afadf":"# 1.) Import dataset","3f1206eb":"> We notice a strong correlation between energy and loudness which intuitively makes sense","e74c6302":"# 1.1) High level overview"}}