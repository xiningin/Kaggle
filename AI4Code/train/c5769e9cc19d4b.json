{"cell_type":{"9cee4c0a":"code","2838bffb":"code","3470aabf":"code","b7f8ec66":"code","9e628450":"code","31081de2":"code","c073bb81":"code","d4a61f25":"code","495940a2":"code","58d5c8e2":"code","5d5b4327":"code","51e35583":"code","19efedfc":"code","37073cb3":"code","6addb028":"code","e33ca933":"code","1f643e72":"code","d7abd8dd":"code","0117ec91":"code","2f16539b":"code","3fba3329":"code","2c3a27f3":"code","afc73a77":"code","a2c4c811":"code","c61764af":"code","c7040560":"code","bcae5bd6":"code","d072bb73":"code","1f788399":"code","4d5a505a":"code","5dcd7fab":"code","8b79f32d":"code","211d4117":"code","fa06ab3d":"code","f04777cd":"code","269d989f":"code","313c90a2":"code","5065894d":"code","595e1fb3":"code","fc252892":"code","a175daa7":"code","e768354e":"code","cc41041c":"code","e1f456e1":"code","eb6cc710":"code","d53709a2":"code","7021d16f":"code","e3f71f61":"code","11b6f152":"code","6f235fca":"code","d3d7161c":"code","8013552a":"code","6be00c3b":"code","b1f55215":"code","6659709a":"code","52850c45":"code","fe9a7cd0":"code","d5bde3b5":"code","64483365":"code","d55a3bf3":"code","e232b499":"code","acf663b6":"code","b6c5f52c":"code","548051c9":"code","07e7e5fa":"code","7d0c4eb1":"code","af6ed818":"code","191c7eb1":"code","09dcef32":"code","e8ac43a3":"code","97262660":"code","839d7f7a":"code","1e92ff79":"code","6b132129":"code","3c0454a5":"code","c05593df":"code","5b1b6d7e":"code","95ddf6ec":"markdown","e2cfafa7":"markdown","fb4626b2":"markdown","0c66c247":"markdown","c150e3d0":"markdown"},"source":{"9cee4c0a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns \nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nfrom collections import Counter\n%matplotlib inline\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","2838bffb":"df_train=pd.read_csv(\"..\/input\/titanic\/train.csv\")\ndf_test=pd.read_csv(\"..\/input\/titanic\/test.csv\")\ndf_gender=pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")","3470aabf":"print(\"================TRAIN INFO=========================\")\ndf_train.info()","b7f8ec66":"print(\"============TRAIN COLUMNS==================\")\ndf_train.columns","9e628450":"df_train.columns=[\"passid\",\"survived\",\"pclass\",\"name\",\"gender\",\"age\",\"sibsp\",\"parch\",\"ticket\",\"fare\",\"cabin\",\"embarked\"]","31081de2":"df_train.columns","c073bb81":"df_train.shape","d4a61f25":"print(\"=============TRAIN HEAD===================\")\ndf_train.head()","495940a2":"print(\"=============TRAIN TAIL====================\")\ndf_train.tail()","58d5c8e2":"df_train.dtypes","5d5b4327":"df_train.corr()","51e35583":"print(\"================TEST INFO============================\")\ndf_test.info()\n","19efedfc":"print(\"================TEST COLUMNS====================\")\ndf_test.columns","37073cb3":"df_test.columns=[\"passid\",\"pclass\",\"name\",\"gender\",\"age\",\"sibsp\",\"parch\",\"ticket\",\"fare\",\"cabin\",\"embarked\"]","6addb028":"df_test.columns","e33ca933":"df_test.shape","1f643e72":"print(\"=================TEST HEAD=================\")\ndf_test.head()","d7abd8dd":"print(\"===============TEST TAIL====================\")\ndf_test.tail()","0117ec91":"df_test.dtypes","2f16539b":"print(\"================GENDER SUBMISSION INFO============================\")\ndf_gender.info()","3fba3329":"print(\"================GENDER SUBMISSION COLUMNS======================\")\ndf_gender.columns","2c3a27f3":"df_gender.columns=[\"passid\",\"survived\"]","afc73a77":"df_gender.columns","a2c4c811":"df_gender.shape","c61764af":"print(\"===========GENDER SUBMISSION HEAD====================\")\ndf_gender.head()","c7040560":"print(\"================GENDER SUBMISSION TAIL=======================\")\ndf_gender.tail()","bcae5bd6":"df_gender.dtypes","d072bb73":"print(\"===================TRAIN NAN VALUES====================\")\nprint(\"=========AGE NAN==============\")\nprint(df_train[\"age\"].value_counts(dropna=False)) #177 NaN \nprint(\"=========CABIN NAN=====================\")\nprint(df_train[\"cabin\"].value_counts(dropna=False)) #687 NaN\nprint(\"========EMBARKED NAN====================\")\nprint(df_train[\"embarked\"].value_counts(dropna=False)) #2 NaN","1f788399":"print(\"======================TEST NaN VALUES=======================\")\nprint(\"========================AGE NaN VALUES======================\")\nprint(df_test[\"age\"].value_counts(dropna=False))#86 NaN Values\nprint(\"===================FARE NaN VALUES==========================\")\nprint(df_test[\"fare\"].value_counts(dropna=False))#1 NaN Value\nprint(\"====================CABIN NaN VALUES========================\")\nprint(df_test[\"cabin\"].value_counts(dropna=False)) #327 NaN Value","4d5a505a":"df_train.describe()","5dcd7fab":"f,ax=plt.subplots(figsize=(18,18))\nsns.heatmap(df_train.corr(),annot=True,linewidths=.5,fmt='.1f',ax=ax)\nplt.show()","8b79f32d":"fig,axes=plt.subplots(nrows=2,ncols=1)\ndf_train.plot(kind='hist',y='age',bins=50,range=(0,100),normed=True,ax=axes[0])\ndf_train.plot(kind='hist',y='age',bins=50,range=(0,100),normed=True,ax=axes[1],cumulative=True)\nplt.show()","211d4117":"print(df_train['gender'].value_counts(dropna=False))","fa06ab3d":"sns.barplot(x='gender',y='age',data=df_train)\nplt.show()","f04777cd":"df_train['age']=df_train['age']\nbins=[29,45,59,np.inf]\nlabels=[\"Young Adult\",\"Middle-Aged Adults\",\"Old Adults\"]\ndf_train['age_group']=pd.cut(df_train['age'],bins,labels=labels)\nsns.barplot(x='age_group',y='survived',data=df_train)\nplt.show()","269d989f":"sns.barplot(x='gender',y='survived',data=df_train)\nplt.show()","313c90a2":"df_train.pclass.unique()","5065894d":"sns.barplot(x='pclass',y='age',data=df_train)\nplt.show()","595e1fb3":"sns.barplot(x='survived',y='age',data=df_train)\nplt.show()","fc252892":"df_train.embarked.unique()","a175daa7":"sns.barplot(x='embarked',y='survived',data=df_train)\nplt.show()","e768354e":"df_train.sibsp.unique()","cc41041c":"sns.barplot(x='sibsp',y='age',data=df_train)\nplt.show()","e1f456e1":"sns.barplot(x='gender',y='sibsp',data=df_train)\nplt.show()","eb6cc710":"df_train.parch.unique()","d53709a2":"sns.barplot(x='parch',y='age',data=df_train)\nplt.show()","7021d16f":"sns.barplot(x='parch',y='sibsp',data=df_train)\nplt.show()","e3f71f61":"df_train.cabin.unique()","11b6f152":"plt.figure(figsize=(15,30))\nsns.barplot(x='pclass',y='cabin',data=df_train)\nplt.show()","6f235fca":"sum(df_train.pclass==3)\n\n","d3d7161c":"sum(df_train.pclass==2)\n","8013552a":"sum(df_train.pclass==1)","6be00c3b":"sns.barplot(x='pclass',y='survived',data=df_train)\nplt.show()","b1f55215":"plt.figure(figsize=(15,30))\nresult = df_train.groupby([\"cabin\"])['survived'].aggregate(np.median).reset_index().sort_values('survived')\nsns.barplot(x='survived', y=\"cabin\", data=df_train, order=result['cabin'])\nplt.title('cabin-survived')\nplt.show()","6659709a":"df_train.head()","52850c45":"# Most common 15 Name or Surname of dying people\nseparate = df_train.name.str.split() \na,b,c = zip(*separate)                    \nname_list = a+b+c\nname_count = Counter(name_list)         \nmost_common_names = name_count.most_common(15)  \nx,y = zip(*most_common_names)\nx,y = list(x),list(y)\n    \nplt.figure(figsize=(15,10))\nax= sns.barplot(x=x, y=y,palette = sns.cubehelix_palette(len(x)))\nplt.xlabel('Name or Surname of dying people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Name or Surname of dying people')\nplt.show()","fe9a7cd0":"name_list1 = list(df_train['name'])\npclass = []\nsurvived =[]\nage=[]\nparch=[]\nsibsp=[]\n\n\n\nfor i in name_list1:\n    x = df_train[df_train['name']==i]\n    pclass.append(sum(x.pclass)\/len(x))\n    survived.append(sum(x.survived) \/ len(x))\n    age.append(sum(x.age) \/ len(x))\n    parch.append(sum(x.parch) \/ len(x))\n    sibsp.append(sum(x.sibsp) \/ len(x))\n    \n# visualization\n\nf,ax = plt.subplots(figsize = (15,220))\n\nsns.barplot(x=age,y=name_list1,color='c',alpha = 0.6,label='age')\nsns.barplot(x=survived,y=name_list1,color='m',alpha = 0.7,label='survived')\nsns.barplot(x=pclass,y=name_list1,color='g',alpha = 0.5,label='pclass' )\nsns.barplot(x=parch,y=name_list1,color='y',alpha = 0.6,label='parch')\nsns.barplot(x=sibsp,y=name_list1,color='r',alpha = 0.6,label='sibsp')\n\nax.legend(loc='lower right',frameon = True)\nax.set(xlabel='Percentage of pclass, survived, age, parch, sibsp', ylabel='name',\n       title = \"Percentage of Name's According to pclass, survived, age, parch, sibsp \")\nplt.show()","d5bde3b5":"#missing values pclass\nsum(df_train.pclass.isna())","64483365":"#missing values survived\nsum(df_train.survived.isna())","d55a3bf3":"#missing values parch\nsum(df_train.age.isna())","e232b499":"df_train.columns","acf663b6":"df_train.dtypes","b6c5f52c":"df_train['age']=df_train['age'].fillna(-0.5)","548051c9":"x=df_train.iloc[:,[2,5]].values#pclass,parch","07e7e5fa":"y=df_train.survived.values.reshape(-1,1)","7d0c4eb1":"multiple_linear_regression=LinearRegression()\nmultiple_linear_regression.fit(x,y)","af6ed818":"print(\"b0:\",multiple_linear_regression.intercept_)","191c7eb1":"print(\"b1,b2:\",multiple_linear_regression.coef_)","09dcef32":"df_train.age.max()","e8ac43a3":"#pclass:1 and age 80 vs. plcass:2 and age 80\nmultiple_linear_regression.predict(np.array([[1,80],[2,80]]))","97262660":"#pclass:1 and age 80 vs. plcass:3 and age 80\nmultiple_linear_regression.predict(np.array([[1,80],[3,80]]))","839d7f7a":"#pclass:2 and age 80 vs. plcass:3 and age 80\nmultiple_linear_regression.predict(np.array([[2,80],[3,80]]))","1e92ff79":"df_train.age.mean()","6b132129":"#pclass:1 and age 23 vs. plcass:2 and age 23\nmultiple_linear_regression.predict(np.array([[1,23],[2,23]]))","3c0454a5":"#pclass:1 and age 23 vs. plcass:3 and age 23\nmultiple_linear_regression.predict(np.array([[1,23],[3,23]]))","c05593df":"#pclass:2 and age 23 vs. plcass:3 and age 23\nmultiple_linear_regression.predict(np.array([[2,23],[3,23]]))","5b1b6d7e":"print('end')\n","95ddf6ec":"<h1> - Multiple Linear Regression<\/h1>\n\n<b>survived,age,pclass<b>\n    \n   Pclass: Passenger's class (1st, 2nd, or 3rd)","e2cfafa7":"#Second class -> **E77, D, F4, F2, E101, F33, D56**\n#Third class -> **G6,FG73, FE69, E10, FG63, E121,F38**\n","fb4626b2":"<h1>Analysis of Titanic Disaster<\/h1>","0c66c247":"![](https:\/\/img-s2.onedio.com\/id-5bda2344d3904b96297c7d81\/rev-0\/raw\/s-2e1fb20763765bc9ea221d742a17ee693be19558.jpg)","c150e3d0":"![](http:\/\/img07.deviantart.net\/af19\/i\/2014\/307\/c\/f\/r_m_s__titanic_class_system_by_monroegerman-d787jna.png)"}}