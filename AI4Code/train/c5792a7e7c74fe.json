{"cell_type":{"1a8214bf":"code","e6c9ac26":"code","6cc1c020":"code","bae5d3a1":"code","700b2cb2":"code","2697189b":"markdown","95e9794e":"markdown","3e9023f4":"markdown","ff3ad86c":"markdown","cd8c9026":"markdown","1bc88b96":"markdown","7cf569f0":"markdown","24373605":"markdown","1184d66d":"markdown"},"source":{"1a8214bf":"import pandas as pd\nimport pandas_profiling as pp","e6c9ac26":"train_data = pd.read_csv('..\/input\/train\/train.csv')","6cc1c020":"train_data.head()","bae5d3a1":"pp.ProfileReport(train_data)","700b2cb2":"profile = pp.ProfileReport(train_data)\nrejected_variables = profile.get_rejected_variables(threshold=0.9)\nrejected_variables","2697189b":"Introducing, **pandas_profiling** for simple and fast exploratory data analysis of a Pandas Datafram\n----------------------------","95e9794e":"**pandas-profiling**\n--------------------------------------------\n\n***Generates profile reports from a pandas DataFrame*.** The pandas **df.describe()** function is great but a little basic for serious exploratory data analysis.\n\nFor each column the following statistics - if relevant for the column type - are presented in an interactive HTML report:\n\n1. **Essentials**: type, unique values, missing values\n\n2. **Quantile statistics **like minimum value, Q1, median, Q3, maximum, range, interquartile range\n\n3. **Descriptive statistics** like mean, mode, standard deviation, sum, median absolute deviation, coefficient of variation, kurtosis, skewness\n\n4. **Most frequent values**\n\n5. **Histogram**\n\n6. **Correlations** highlighting of highly correlated variables, Spearman and Pearson matrixes\n\n\n**Github Link:** You can refer more about this module here on github: https:\/\/github.com\/pandas-profiling\/pandas-profiling\n\n","3e9023f4":"**For example: **\n----------------------\nAssume you've got a dataset with 10 rows x 2 columns. It's very simply to specify those two column names separately and plot all the required plots to perform EDA. \n\nAlternatively, If the dataset has got 20 columns, you've to repeat the same above exercise for another 10 times. \n\nNow, there's another layer of complexity because the visualization that you choose for a continuous variable and categorical variable is different, hence ***the type of the plot changes when the data type changes.*******\n\n","ff3ad86c":"Know Where Your Data Comes From\n-----------------------\n\nBefore jumping in any EDA, you should know as much as possible on the provenance of the data you are analyzing. You need to understand how the data was collected and how it was processed. Are there any past transformations on the data that could affect your analysis?\n\n**You should be able to answer those questions on your dataset:\n**\n\nHow was it collected?\n\nIs it a sample?\n\nWas it properly sampled?\n\nWas the dataset transformed in any way?\n\nAre there some know problems on the dataset?\n\n\nIf you don\u2019t understand where the data is coming from, you will have a hard time drawing any meaningful conclusions from the dataset. You are also at risk of making very important analysis mistakes.\n\nAdditionally, you should make sure the dataset is structured in a standardized manner. The recommended format is the third normal form, also named tidy data. A \u201ctidy\u201d dataset has the following attributes:\n\nEach variable forms a column and contains values\nEach observation forms a row\nEach type of observational unit forms a table\n\nRespecting this standardized format will speed up your analysis since this it\u2019s compatible with many tools and libraries.","cd8c9026":"Given all these conditions, EDA sometimes becomes a tedious task - but remember it's all driven by a set of rules - \n\nlike plot **boxplot** and **histogram** for a **continous variable**, \n\nMeasure missing values, \n\nCalculate **frequency** if it's **categorical** variable - thus giving us opportunity to automate things. \n\nThat's the base of this python module **pandas_profiling** that helps one in automating the first-level of EDA.\n","1bc88b96":"**Exploratory Data Analysis (EDA)** plays a very important role in understanding the **dataset**. Whether you are going to build a Machine Learning Model or if it's just an exercise to bring out insights from the given data, EDA is the primary task to perform.\n\nExploratory data analysis (EDA) is a statistical approach that aims at discovering and summarizing a dataset. At this step of the data science process, you want to explore the structure of your dataset, the variables and their relationships.\n\n\nWhile it's undeniable that EDA is very important, ***The task of performing Exploratory Data Analysis grows in parallel with the number of columns your dataset has got.***\n\n","7cf569f0":"**To retrieve the list of variables which are rejected due to high correlation:**\n--------------------","24373605":"**Loading Training Dataset**\n-------------","1184d66d":"**Advanced usage**\n-------------------\nA set of options are available in order to adapt the report generated.\n\n**bins (int):** Number of bins in histogram (10 by default).\n\n**Correlation settings:**\n\n**check_correlation (boolean):** Whether or not to check correlation (True by default)\n\n**correlation_threshold (float):** Threshold to determine if the variable pair is correlated (0.9 by default).\n\n**correlation_overrides (list): ** Variable names not to be rejected because they are correlated (None by default).\n\n**check_recoded (boolean):** Whether or not to check recoded correlation (False by default). Since it's an expensive \ncomputation it can be activated for small datasets.\n\n**pool_size (int): **Number of workers in thread pool. The default is equal to the number of CPU."}}