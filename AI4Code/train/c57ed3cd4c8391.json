{"cell_type":{"2f30d1e5":"code","fbe9cf70":"code","fe79b949":"code","e4c8b296":"code","fe0c3f92":"code","8ef38109":"code","1ad7ebad":"code","f06ea06c":"code","a613c312":"code","8de3a7bf":"code","251fbb1e":"code","9ca429ec":"code","7e798556":"code","3e13da38":"code","d27b8a9d":"code","e69e141b":"code","ee0cad6b":"code","7bbe7108":"code","e0085bfc":"code","347e5be7":"code","f6838dfc":"code","c7b07794":"code","1dadb91c":"code","6cec3045":"code","93be62a0":"code","77906c87":"code","b99014db":"code","2c34eb00":"code","605fb752":"code","793585a4":"code","3fdcff65":"code","0529409a":"code","231ef306":"code","99ff7037":"code","c9c4d5c2":"code","d767dfe6":"code","46e12be1":"code","5b9b206d":"code","11e31cc9":"code","cc8685af":"code","e6fa261d":"code","ccd1e339":"code","5848a651":"code","61442602":"markdown","83663ca4":"markdown","9ccffd64":"markdown","42059d83":"markdown","a676bfaa":"markdown"},"source":{"2f30d1e5":"import pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport numpy as np","fbe9cf70":"df_movie = pd.read_csv(\"..\/input\/tmdb_5000_movies.csv\")\ndf_credit = pd.read_csv(\"..\/input\/tmdb_5000_credits.csv\")","fe79b949":"# Since genres is given in dictionary format, we have to extract first value from each genres\ndf_movie.genres = df_movie.genres.str.split(\",\",n=2,expand=True)[1]\ndf_movie.genres","e4c8b296":"# Check for any nulls after splitting it:\ndf_movie.genres.isnull().sum()","fe0c3f92":"df_movie.genres.dropna(inplace=True)","8ef38109":"# Confirm all nulls are filled with 0\ndf_movie.genres.isnull().sum()","1ad7ebad":"df_movie['genres'] = df_movie['genres'].apply(lambda x: x.split('\"name\"')[1])","f06ea06c":"df_movie['genres']","a613c312":"# Remove all special character from genres\ndf_movie['genres'] =  df_movie['genres'].str.replace('\"', '')\ndf_movie['genres'] =  df_movie['genres'].str.replace(':', '')\ndf_movie['genres'] =  df_movie['genres'].str.replace(']', '')\ndf_movie['genres'] =  df_movie['genres'].str.replace('}', '')","8de3a7bf":"# Remove white space from genres\ndf_movie['genres'] = df_movie['genres'].str.strip()","251fbb1e":"# Confirm all the values are proper\ndf_movie['genres']","9ca429ec":"# Extract year from release date\ndf_movie['release_date'] = pd.to_datetime(df_movie['release_date'])","7e798556":"df_movie['year'] = df_movie['release_date'].dt.year","3e13da38":"df_movie.year = df_movie.year.fillna(0).astype(int)","d27b8a9d":"# Confirm that new column year has proper values\ndf_movie.year","e69e141b":"# Highest top 3 categories \ndf_movie.groupby('genres').revenue.sum().nlargest(3)","ee0cad6b":"# For category- Action, plot the last 10 years moving average trend\ndf_action = df_movie.query('genres == \"Action\"').groupby('year').revenue.sum()\ndf_action = df_action.rolling(window=10).mean()\ndf_action ","7bbe7108":"df_action.dropna(inplace=True)\nplt.subplots(figsize=(10, 6))\nplt.bar(df_action.index, df_action)\nplt.title('10 Years moving average for category - Action')\nplt.xlabel('Year')\nplt.ylabel('Moving average');","e0085bfc":"# For category- Adventure, plot the last 10 years moving average trend\ndf_adventure = df_movie.query('genres == \"Adventure\"').groupby('year').revenue.sum()\ndf_adventure = df_adventure.rolling(window=10).mean()\ndf_adventure ","347e5be7":"df_adventure .dropna(inplace=True)\nplt.subplots(figsize=(10, 6))\nplt.bar(df_adventure .index, df_adventure )\nplt.title('10 Years moving average for category Adventure')\nplt.xlabel('Year')\nplt.ylabel('Moving average');","f6838dfc":"# For category- Drama, plot the last 10 years moving average trend\ndf_drama = df_movie.query('genres == \"Drama\"').groupby('year').revenue.sum()\ndf_drama = df_drama.rolling(window=10).mean()\ndf_drama","c7b07794":"df_drama.dropna(inplace=True)\nplt.subplots(figsize=(10, 6))\nplt.bar(df_drama.index, df_drama)\nplt.title('10 Years moving average for category Drama')\nplt.xlabel('Year')\nplt.ylabel('Moving average');","1dadb91c":"df_movie.plot.scatter(x='revenue',y='budget');\ndf_movie.plot.scatter(x='revenue',y='popularity');\ndf_movie.plot.scatter(x='revenue',y='runtime');\ndf_movie.plot.scatter(x='revenue',y='vote_average');","6cec3045":"# To analyse production companies, we have to first clean the dataset for production comapanies.\ndf_movie.production_companies = df_movie.production_companies.str.split(\":\",n=2,expand=True)[1]","93be62a0":"df_movie['production_companies'] =df_movie['production_companies'].fillna(0)","77906c87":"df_movie['production_companies'] = df_movie['production_companies'].str.split(\",\",n=1,expand=True)[0]","b99014db":"df_movie['production_companies'] = df_movie['production_companies'].str.replace('\"', '')\ndf_movie['production_companies'] = df_movie['production_companies'].str.strip()","2c34eb00":"# Confirm all changes done properly\ndf_movie['production_companies']","605fb752":"# creating a subset from larger dataset\ndf_movie_small = df_movie[['year','production_companies','revenue']] ","793585a4":"# Find out the maximum revnue generating production company from each year\ndf_new = df_movie_small.ix[df_movie_small.groupby(['year']).revenue.idxmax()]","3fdcff65":"df_new","0529409a":"# Count of years in which production company has generated maximum revennue\ndf_new = df_new.groupby('production_companies').year.count()","231ef306":"# To visualise we have taken where production company has highest grosser more than 1 year\ndf_new = df_new[df_new > 1]\ndf_new","99ff7037":"df_new.plot(kind='bar', stacked=True, colormap='autumn')","c9c4d5c2":"# Now we look into credits dataset to analyse some pattern\ndf_credit","d767dfe6":"# To start with we have to clean the dataset first, in particular cast column\ndf_credit['cast'] = df_credit['cast'].str.split(\":\",n=6,expand=True)[6]\ndf_credit['cast'] = df_credit['cast'].str.split(\",\",n=0,expand=True)[0]\ndf_credit['cast']","46e12be1":"df_credit['cast'] =  df_credit['cast'].str.replace('\"', '')\ndf_credit['cast'] = df_credit['cast'].str.strip()","5b9b206d":"# Merge both the credit and movie dataset\ndf_combined = df_credit.merge(df_movie, left_on='movie_id', right_on='id', how='inner')","11e31cc9":"df_cast = df_combined[['cast','year','revenue']]","cc8685af":"df_cast = df_cast.ix[df_cast.groupby(['year']).revenue.idxmax()]","e6fa261d":"df_cast","ccd1e339":"df_cast = df_cast.groupby('cast').year.count()\ndf_cast  = df_cast [df_cast >1]\ndf_cast","5848a651":"df_cast.plot(kind='bar', stacked=True, colormap='autumn')","61442602":"Ques4 : Which actor has given maximum hit in each year ?\nCONCLUSION : Sean Connery has given maximum hit each year. ","83663ca4":"QUES3: Which movie has given maximum hit for each year?\n\nCONCLUSIONS:Paramount pictures has been 14 times highest revenue earning production comapny of each year followed by United Artist\n    \n                                  **QUES3 ENDS** ","9ccffd64":"QUES2: Which factor is maximum positive impact on revenue?\n\nCONCLUSION : After visualizing the scatter plots, we can see that all of the above four factors are not highly positively correleated with revenue. \n                                **QUES2 ENDS** ","42059d83":"I have chosen TMDb movie data. This dataset contains information about 5000 movies. Columns like genres,cast,crew are in dictionary format so before starting anything we have to clean them first. \n\nHere are the four questions I have decided to give answer:\n\nQUES1: How is moving average of 10 years is trending across top three categories?\n\nQUES2: Which factor is maximum positive impact on revenue?\n\nQUES3: Which movie has given maximum hit for each year?\n\nQUES4: Which actor has given maximum hit in each year?","a676bfaa":"QUES1: How is moving average of 10 years is trending across top three categories?\n\nCONCLUSIONS : Action category is most promising and has upward trend, for adventure and drama category we can see that popularity of these two genres are decreasing.\n\n                                  **QUES1 ENDS** "}}