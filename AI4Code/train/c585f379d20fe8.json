{"cell_type":{"4dacaa09":"code","d8345a89":"code","c9ed14f9":"code","c6842830":"code","19416e59":"code","4e88afb8":"code","0e00e38a":"code","8085e175":"code","91b2f20a":"code","0c3c664f":"code","db5a8693":"code","c5480eeb":"code","29b6462e":"code","4d48134e":"code","f5bfdd56":"code","ef70e431":"code","93c0277d":"code","bd806147":"code","d025b050":"code","414b0595":"code","f0ce7451":"code","5f0c946a":"code","5bb9c2aa":"code","9d06a100":"code","8efe6e3b":"code","e8569e75":"code","b3d91087":"code","054dcb71":"markdown","cc161020":"markdown","19f7de9d":"markdown","84cab86a":"markdown","2ec69f7d":"markdown"},"source":{"4dacaa09":"import numpy as np\nimport pandas as pd\nimport time\nfrom datetime import datetime\nimport plotly_express as px\nfrom plotly.offline import init_notebook_mode\ninit_notebook_mode(connected=True)\ntodays_date = datetime.fromtimestamp(time.time()).strftime(\"%Y-%m-%d\")\n\ndef plot_stock_data(data,title):\n    '''function for plotting stock data'''\n    plot = px.line(data, \n                        x=\"Date\", \n                        y=[\"Close\"], \n                        hover_name=\"Date\",\n                        line_shape=\"linear\",\n                        title=title) \n    return plot","d8345a89":"facebook = pd.read_csv('\/kaggle\/input\/stock-market-data\/stock_market_data\/sp500\/csv\/FB.csv')\napple = pd.read_csv('\/kaggle\/input\/stock-market-data\/stock_market_data\/nasdaq\/csv\/AAPL.csv')\nnetflix = pd.read_csv('\/kaggle\/input\/stock-market-data\/stock_market_data\/nasdaq\/csv\/NFLX.csv')\ngoogle = pd.read_csv('\/kaggle\/input\/stock-market-data\/stock_market_data\/sp500\/csv\/GOOG.csv')\nmicrosoft = pd.read_csv('\/kaggle\/input\/stock-market-data\/stock_market_data\/nasdaq\/csv\/MSFT.csv')\namazon = pd.read_csv('\/kaggle\/input\/stock-market-data\/stock_market_data\/nasdaq\/csv\/AMZN.csv')\nnvidia = pd.read_csv('\/kaggle\/input\/stock-market-data\/stock_market_data\/nasdaq\/csv\/NVDA.csv')\nprint('Data from',todays_date)\nprint('Preview of NFLX.csv:')\nnetflix.tail(5)","c9ed14f9":"plot_stock_data(facebook[-30:],'Facebook')","c6842830":"plot_stock_data(apple[-30:],'Apple')","19416e59":"plot_stock_data(netflix[-30:],'Netflix')","4e88afb8":"plot_stock_data(google[-30:],'Google')","0e00e38a":"plot_stock_data(microsoft[-30:],'Microsoft')","8085e175":"plot_stock_data(amazon[-30:],'Amazon')","91b2f20a":"plot_stock_data(nvidia[-30:],'NVIDIA')","0c3c664f":"!pip install yfinance","db5a8693":"import yfinance as yf   \nfacebook_yf = yf.download('FB','2017-01-01',todays_date) \nfacebook_yf['Date'] = facebook_yf.index\napple_yf = yf.download('AAPL','2017-01-01',todays_date) \napple_yf['Date'] = apple_yf.index\nnetflix_yf = yf.download('NFLX','2017-01-01',todays_date) \nnetflix_yf['Date'] = netflix_yf.index\ngoogle_yf = yf.download('GOOG','2017-01-01',todays_date) \ngoogle_yf['Date'] = google_yf.index\namazon_yf = yf.download('AMZN','2017-01-01',todays_date) \namazon_yf['Date'] = amazon_yf.index\nmicrosoft_yf = yf.download('MSFT','2017-01-01',todays_date) \nmicrosoft_yf['Date'] = microsoft_yf.index\nnvidia_yf = yf.download('NVDA','2017-01-01',todays_date) \nnvidia_yf['Date'] = nvidia_yf.index","c5480eeb":"plot_stock_data(facebook_yf,'Facebook')","29b6462e":"plot_stock_data(apple_yf,'Apple')","4d48134e":"plot_stock_data(netflix_yf,'Netflix')","f5bfdd56":"plot_stock_data(google_yf,'Google')","ef70e431":"plot_stock_data(microsoft_yf,'Microsoft')","93c0277d":"plot_stock_data(amazon_yf,'Amazon')","bd806147":"plot_stock_data(nvidia_yf,'NVIDIA')","d025b050":"# Prophet\napple_yf.head()","414b0595":"apple_y_df=apple_yf[['Date','Volume']]\napple_y_df.columns=['ds', 'y']\napple_y_df.head()","f0ce7451":"from fbprophet import Prophet\nm = Prophet()\nm.fit(apple_y_df)","5f0c946a":"apple_future = m.make_future_dataframe(periods=365)\napple_future.tail()","5bb9c2aa":"apple_fc = m.predict(apple_future)\napple_fc[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","9d06a100":"fig1 = m.plot(apple_fc)","8efe6e3b":"fig2 = m.plot_components(apple_fc)","e8569e75":"from fbprophet.plot import plot_plotly, plot_components_plotly\nplot_plotly(m, apple_fc)","b3d91087":"plot_components_plotly(m, apple_fc)","054dcb71":"**Step 1: Import Python Packages**","cc161020":"**Step 3: Plot the data**","19f7de9d":"# How to work with stock market data on Kaggle\n\nYou can find a large number of financial datasets at kaggle.com\/datasets.  As of January 2021, [this dataset](https:\/\/www.kaggle.com\/paultimothymooney\/stock-market-data) seems to be the most complete and the most up-to-date.  It contains daily prices and volumes for all stocks listed on NYSE, S&P500, or NASDAQ and it gets updated on a weekly basis.  The data is organized by ticker symbol and it joins nicely with this [supplemental dataset](https:\/\/www.kaggle.com\/paultimothymooney\/stock-market-supplementary-data) that pairs individual ticker symbols with full-length company names (e.g. AAPL => Apple, Inc). For additional stock data, consider using the yfinance Python package (as demonstrated near the bottom of this notebook).  Hopefully this notebook will help you to get started with your own project!\n\n\n**Modified original copy of this notebook to use FB Prophet**","84cab86a":"# **Step 2: Load the Stock Market Data into your Kaggle Notebook**","2ec69f7d":"# **Step 4: Access additional stock data by using the yfinance Python package**"}}