{"cell_type":{"d9cacb31":"code","d6a47e8b":"code","c717a7c5":"code","7283697a":"code","8df09607":"code","8acad150":"code","861f4c29":"code","9a950667":"code","254c9f95":"code","d20e03ba":"code","5f74afe0":"code","1b88e357":"code","f282c2ed":"code","482d3501":"markdown","c13c75b8":"markdown","eddb0ebe":"markdown","083bc240":"markdown","8858fa3a":"markdown","51bb9bd1":"markdown"},"source":{"d9cacb31":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nIN_CLOUD = True\nINPUT_DIR = '..\/input\/titanic-1-2-exploration-pre-processing' if IN_CLOUD else '.\/data'","d6a47e8b":"train_clean_df = pd.read_csv(f'{INPUT_DIR}\/train_clean.csv')\ntest_clean_df  = pd.read_csv(f'{INPUT_DIR}\/test_clean.csv' )","c717a7c5":"train_clean_df.sample(3)","7283697a":"test_passenger_ids = test_clean_df.PassengerId\ntest_clean_df = test_clean_df.drop('PassengerId', axis=1)","8df09607":"drop_cols = ['NbrRelatives', 'Age']\n\ntrain_clean_df.drop(drop_cols, axis=1, inplace=True)\ntest_clean_df.drop(drop_cols, axis=1, inplace=True)","8acad150":"train_clean_df.sample(3)","861f4c29":"test_clean_df.sample(3)","9a950667":"train_y = train_clean_df.Survived\ntrain_x = train_clean_df.drop('Survived', axis=1)\n\ntrain_x.sample(3)","254c9f95":"from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier\nfrom sklearn.model_selection import GridSearchCV, train_test_split, cross_val_score\nfrom sklearn import metrics","d20e03ba":"GRID_SEARCH = False\nif GRID_SEARCH:\n    param_grid={\n        'n_estimators': [x for x in range(50, 400, 50)],\n        'max_features': ['auto', 'sqrt'],\n        'max_depth': [4,5,6,7],\n        'criterion': ['gini', 'entropy']\n    }\n    rfc = RandomForestClassifier()\n    model = GridSearchCV(estimator=rfc, param_grid=param_grid, cv=5)\n\n    print('Fitting ... ')\n    model.fit(train_x, train_y)\n    print('Best Params: ', model.best_params_)\n    print('CV results: ', model.cv_results_)\n","5f74afe0":"model = RandomForestClassifier(n_estimators=100, criterion='gini', max_depth=5, max_features='auto')\nCROSS_VAL = True\nif CROSS_VAL:\n    scores = cross_val_score(model, train_x, train_y, cv=5)\n    print(scores.mean())","1b88e357":"PREDICT = not GRID_SEARCH\nif PREDICT:\n    model.fit(train_x, train_y)\n    predictions = model.predict(test_clean_df)","f282c2ed":"if PREDICT:\n    OUTPUT_DIR = '' if IN_CLOUD else '.\/data\/'\n    OUTPUT = True\n    submission = pd.DataFrame({'PassengerId': test_passenger_ids, 'Survived': predictions})\n    if OUTPUT:\n        submission.to_csv(f'{OUTPUT_DIR}submission.csv', index=False)\n        print('Done exporting !')\n    print(submission.sample(5))","482d3501":"# Titanic (2\/2): Prediction\n- In the [first Kernel](https:\/\/www.kaggle.com\/hamzael1\/titanic-1-2-exploration-pre-processing), I cleaned the data, and did some Feature Selection & Engineering. This is the Second Kernel which will use the Output of the first one to make predictions using Random Forests..","c13c75b8":"#### Imports related to modeling:","eddb0ebe":"## Modeling","083bc240":"## Import Cleaned Data","8858fa3a":"#### Do some Feature Selection and experiment with different features: ","51bb9bd1":"#### Cut the Passenger Ids from the Test Dataset (because it's not a feature). We will append them later after we do our predictions:"}}