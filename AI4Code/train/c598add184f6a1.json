{"cell_type":{"c8410b28":"code","abaa2be9":"code","4ea1678d":"code","f65996ee":"code","812e9230":"code","bee4d6b9":"code","19096215":"code","63111b72":"code","e9f3c99e":"code","c24a523b":"code","402dd766":"code","e3647966":"code","d46c1448":"code","1d61463d":"code","6967c672":"code","8bd9077e":"code","80c69a48":"code","7cfdc70d":"code","35379dd5":"code","e7fc778e":"code","482c725e":"markdown"},"source":{"c8410b28":"#Loading libraries \nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.offline as offline\noffline.init_notebook_mode()\nfrom plotly import tools\nimport plotly.tools as tls\n\n\n#Importing the datasets \n\nplayers = pd.read_csv(\"..\/input\/Player.csv\", encoding='ISO-8859-1' )\nplayer_match = pd.read_csv(\"..\/input\/Player_match.csv\", encoding='ISO-8859-1' )\nteam = pd.read_csv(\"..\/input\/Team.csv\", encoding='ISO-8859-1' )\nball_fact = pd.read_csv (\"..\/input\/Ball_By_Ball.csv\", encoding='ISO-8859-1' )\nmatch = pd.read_csv (\"..\/input\/Match.csv\", encoding='ISO-8859-1' )\n\n\n","abaa2be9":"players.head(2)","4ea1678d":"player_match.describe(include='all')","f65996ee":"captain = player_match[player_match['Role_Desc'] == 'Captain']\ncaptain.Player_Name.unique()","812e9230":"plt.figure(figsize=(14,6))\nsns.countplot(x='Age_As_on_match',data=player_match)","bee4d6b9":"Keepers = player_match[player_match['Role_Desc'] == 'Captain']\nKeepers.Player_Name.unique()\n#player_match.describe(include='all')","19096215":"#Most man of the matches awards\nManofMatch = match.groupby(['ManOfMach']).count()['match_winner']\nManOfMatch_count = ManofMatch.sort_values(axis=0, ascending=False)\nManOfMatch_count.head()","63111b72":"#number of matches per season\nplt.figure(figsize=(8,7))\nsns.countplot(x='Season_Year', data=match) \n","e9f3c99e":"#Number of matches per venue \nplt.figure(figsize=(14,8))\nsns.countplot(x='Venue_Name', data=match, order=pd.value_counts(match['Venue_Name']).index) \nplt.xticks(rotation='vertical')\nplt.show()","c24a523b":"#Wins per team\nplt.figure(figsize=(8,6))\nax=sns.countplot(x='match_winner', data=match, order=pd.value_counts(match['match_winner']).index) \nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nplt.tight_layout()\nplt.show()","402dd766":"#Toss wins per team\nplt.figure(figsize=(8,6))\nax=sns.countplot(x='Toss_Winner', data=match, order=pd.value_counts(match['Toss_Winner']).index) \nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nplt.tight_layout()\nplt.show()","e3647966":"match.replace(to_replace='Field', value = 'field', inplace=True) #Replace 'Field' with 'field'\nmatch.replace(to_replace='Bat', value = 'bat', inplace=True) #Replace 'Bat' with 'bat'\nplt.figure(figsize=(12,6))\nsns.countplot(x='Season_Year', hue='Toss_Name', data=match)","d46c1448":"plt.figure(figsize=(8,6))\nsns.countplot(x='Batting_hand', data=players)","1d61463d":"plt.figure(figsize=(12,6))\nax=sns.countplot(x='Bowling_skill', data=players, order=pd.value_counts(players['Bowling_skill']).iloc[:10].index)\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nplt.show()","6967c672":"agg = players['Country_Name'].value_counts()[:10]\nlabels = list(reversed(list(agg.index )))\nvalues = list(reversed(list(agg.values)))\n\ntrace1 = go.Pie(labels=labels, values=values, marker=dict(colors=['red']))\nlayout = dict(title='Top Countries', legend=dict(orientation=\"h\"));\n\n\nfig = go.Figure(data=[trace1], layout=layout)\niplot(fig, filename='stacked-bar')","8bd9077e":"ball_fact.describe(include='all')","80c69a48":"ball_fact.replace(to_replace='Wides', value = 'wides', inplace=True) #Replace Wides with wides","7cfdc70d":"ball_fact.replace(to_replace='Legbyes', value = 'legbyes', inplace=True) #Legbyes with legbyes\nball_fact.replace(to_replace='Noballs', value = 'noballs', inplace=True) #Noballs with noballs\nball_fact.replace(to_replace='Byes', value = 'byes', inplace=True) #Byes with byes","35379dd5":"ball_df = ball_fact[ball_fact['Extra_Type']  != 'No Extras']\nagg = ball_df['Extra_Type'].value_counts()[:10]\nlabels = list(reversed(list(agg.index )))\nvalues = list(reversed(list(agg.values)))\n\ntrace1 = go.Bar(x=values, y=labels, opacity=0.75, orientation='h', name=\"month\", marker=dict(color='rgba(0, 20, 50, 0.6)'))\ntrace1 = go.Pie(labels=labels, values=values)\nlayout = dict(title='Extras given', legend=dict(orientation=\"h\"));\n\n\nfig = go.Figure(data=[trace1], layout=layout)\niplot(fig, filename='stacked-bar')","e7fc778e":"ball_df = ball_fact[ball_fact['Out_type']  != 'Not Applicable']\nagg = ball_df['Out_type'].value_counts()[:10]\nlabels = list(reversed(list(agg.index )))\nvalues = list(reversed(list(agg.values)))\n\ntrace1 = go.Bar(x=values, y=labels, opacity=0.75, orientation='h', name=\"month\", marker=dict(color='rgba(0, 20, 50, 0.6)'))\ntrace1 = go.Pie(labels=labels, values=values)\nlayout = dict(title='Out Type', legend=dict(orientation=\"h\"));\n\n\nfig = go.Figure(data=[trace1], layout=layout)\niplot(fig, filename='stacked-bar')","482c725e":"The objective of the Kernel is to try and analyze IPL data. If you like the Kernel, please upvote\/comment. Thanks!\n\nOverview\n\nThe Indian Premier League (IPL) is a professional Twenty20 cricket league in India contested during April and May of every year by teams representing Indian cities and some states. The league was founded by the Board of Control for Cricket in India (BCCI) in 2008. The IPL is the most-attended cricket league in the world and in 2014 ranked sixth by average attendance among all sports leagues. There have been 11 seasons of the IPL tournaments till now ,But we have data for 10 seasons\n\nData\n\nWe have 5 different files in the dataset:\n\n1) Player.csv: Details of all the players who have played in IPL alongwith their country, date of birth, batting\/bowling style.\n\n2) Player_match.csv: Various stats of players like team name, captaincy, keeper etc.\n\n3) Team.csv: IPL team names and ID\n\n4) Ball_By_BallL.csv: Ball by ball details\n\n5) Match.csv: Match details"}}