{"cell_type":{"e44e2f18":"code","d52528cf":"code","7b21c2bf":"code","4aebe10a":"code","d5b4c498":"code","d9bb7cbe":"code","99cff383":"code","e89393ae":"code","a59921c9":"code","ebca8dc0":"code","4f73575b":"code","4ad1a760":"code","3343107b":"code","d8372e8b":"code","368736e0":"code","3439d46d":"code","7ab8eb20":"code","737aede3":"code","e6e14e6d":"code","804eb84e":"code","ac6ea862":"code","95be73c5":"code","8761035e":"code","e74cc3f9":"code","27199a2e":"code","585f44ae":"code","4b456cea":"code","cf47ec56":"code","4ab37eee":"code","b9c4b812":"code","c9e3735a":"code","14ae353f":"code","1febef63":"code","50290fb4":"code","314d3a64":"code","fbc545ac":"code","8a16cca7":"code","404115b7":"code","144e59e5":"code","c33db7f8":"code","8df81167":"code","d4c780fb":"code","fd99299d":"code","10b946b1":"code","2d3edf47":"code","87d24306":"code","9865611c":"code","5572ebb0":"code","a2a0477b":"code","b8eb8d50":"code","a0a7b5cd":"code","0c953709":"code","5320670a":"code","b05b3567":"code","72547560":"code","e3f9dd4e":"code","c7b33699":"code","a646b7d1":"code","dba14179":"code","77ba5353":"code","20c3ad4c":"code","f44c1765":"code","86bf913c":"code","1a680b58":"code","64758e4e":"code","c09f1cb7":"code","ca2f6c1e":"code","659051a0":"code","487ce33c":"code","3b769d73":"code","2d50ae40":"code","0f54c7a8":"code","e23a1403":"code","f2752c5b":"code","7f7d60d3":"code","32411250":"code","dce7ef2f":"code","a41a4e56":"code","72619672":"code","1c535b5f":"code","7c6ad6c5":"code","81469cf7":"code","f5e223ef":"code","0380008b":"code","e84070be":"code","dea9afd8":"code","0de39072":"code","6cbba2b5":"code","e6c49dc2":"code","f3d3bbc9":"code","58b54c2d":"code","103b22cb":"code","be5ff188":"code","513e1d55":"code","32b26744":"code","3c5b7c79":"code","51dd046c":"code","5ea92c52":"code","33525773":"code","ff751b68":"code","bf9f3512":"code","7263185d":"code","0a6aa33f":"code","282ca017":"code","99b6c48d":"code","50813eef":"code","fbcbd0e6":"code","ed68e060":"code","00c5ca98":"code","c0688237":"code","7c593dd4":"code","42119f36":"code","aa69ce34":"code","6a1bd52d":"code","613802f0":"code","e08328c5":"code","e9354822":"code","6fa1e50f":"code","c7b1d4db":"code","1bae6c53":"code","060a0b1f":"code","5e6f0209":"code","57a43569":"code","16904c59":"code","5d5ebca4":"code","ce450aeb":"code","fbee2d5b":"code","ac9aebe2":"code","88a77bf1":"code","533bca02":"code","b22ac29f":"code","cf077df0":"code","36fb1d79":"code","656f9768":"code","31dae16e":"code","3f6c3de4":"markdown","92f60541":"markdown","f702e2c8":"markdown","cc4d9d53":"markdown","11875681":"markdown","4d67f3a1":"markdown","a605b47c":"markdown","97a0b2ad":"markdown","3af043b0":"markdown","69d00b30":"markdown","2a05d41a":"markdown","0e15ec0e":"markdown","c2340ef5":"markdown","1e43e702":"markdown","3f96f303":"markdown","ea50ae0e":"markdown","5884d9d9":"markdown","0428af6c":"markdown","d2b14a57":"markdown","f55e6450":"markdown","b254c7ac":"markdown","847be367":"markdown","7934c203":"markdown","a6da165e":"markdown","3597a23b":"markdown","7e9a22b4":"markdown","3f4cb0e2":"markdown","f5525306":"markdown","7b8f5001":"markdown","570b5cf2":"markdown","a1e22727":"markdown","e57915e8":"markdown","17179b4c":"markdown","bb328f40":"markdown","d81ad1bd":"markdown","af86da8a":"markdown","9364f028":"markdown","f94374e8":"markdown"},"source":{"e44e2f18":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d52528cf":"from warnings import filterwarnings\nfilterwarnings('ignore')","7b21c2bf":"import pandas as pd\nad = pd.read_csv(\"\/kaggle\/input\/d\/sezginildes\/advertising\/Advertising.csv\", usecols = [1,2,3,4])\ndf = ad.copy()\ndf.head()","4aebe10a":"# df = df.iloc[:,1:len(df)]","d5b4c498":"df.info();","d9bb7cbe":"df.describe().T","99cff383":"import seaborn as sns\nsns.jointplot(x =\"TV\", y = \"sales\",\n              data =df, kind = \"reg\");\n# TV harcalamar\u0131 art\u0131k\u00e7a sat\u0131\u015flar artm\u0131\u015f\n# do\u011frusal ve pozitif bir korelasyon var.","e89393ae":"sns.jointplot(x =\"radio\", y = \"sales\",\n              data =df, kind = \"reg\");\n# radio harcalamar\u0131 art\u0131k\u00e7a sat\u0131\u015flar artm\u0131\u015f\n# do\u011frusal ve pozitif bir korelasyon var.","a59921c9":"sns.jointplot(x =\"newspaper\", y = \"sales\",\n              data =df, kind = \"reg\");\n# newspaper harcalamar\u0131 art\u0131k\u00e7a sat\u0131\u015flar ??\n# do\u011frusal ve pozitif bir korelasyon var.","ebca8dc0":"import seaborn as sns\nsns.jointplot(x =\"TV\", y = \"sales\",\n              data =df, kind = \"reg\");\n# TV harcalamar\u0131 art\u0131k\u00e7a sat\u0131\u015flar artm\u0131\u015f\n# do\u011frusal ve pozitif bir korelasyon var.","4f73575b":"\nfrom sklearn.linear_model import LinearRegression\n# ba\u011f\u0131ms\u0131z de\u011fi\u015fken =x\n# ba\u011f\u0131ml\u0131 de\u011fi\u015fken = y\nX= df[[\"TV\"]]\nX.head()","4ad1a760":"# Ba\u011f\u0131ml\u0131  de\u011fi\u015fken\ny = df[[\"sales\"]]\ny.head()","3343107b":"# MODEL nesnesi olu\u015fturmak\nreg = LinearRegression()","d8372e8b":"# X ba\u011f\u0131ms\u0131z de\u011fi\u015fken\n# y ba\u011f\u0131ml\u0131 de\u011fi\u015fken\nmodel = reg.fit(X, y)\n#modeli fit etme: Modeli kurmak\nmodel.get_params() # model bir nesnesi","368736e0":"str(model)","3439d46d":"dir(model)\n#nesne i\u00e7inde alabilece\u011fimiz bilgiler\n# coeff katsay\u0131d\u0131r.","7ab8eb20":"#beta 0 de\u011feri\n# sbit de\u011fer\nmodel.intercept_","737aede3":"# beta 1 kat say\u0131s\u0131\nmodel.coef_","e6e14e6d":"# r^2 ifadesi modelin skoru\n# ba\u011f\u0131ml\u0131 de\u011fi\u015fkenli\u011fin, ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerce a\u00e7\u0131klanma y\u00fczdesidir\n# sat\u0131\u015flardaki de\u011fi\u015fimin y\u00fczde 60 bu algoritamlarla a\u00e7\u0131klanmaktad\u0131r\nmodel.score(X,y)\n\n# tv sat\u0131\u015farlar\u0131n %60 etkliyor.","804eb84e":"model.score(df[[\"newspaper\"]],y)\n","ac6ea862":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\ng = sns.regplot(df[\"TV\"], df[\"sales\"],\n                ci=None, scatter_kws={'color':'purple', 's':9})\ng.set_title(\"Model Denklemi: Sales = 7.03 + TV*0.05\")\ng.set_ylabel(\"Sat\u0131\u015f Say\u0131s\u0131\")\ng.set_xlabel(\"TV Harcamalar\u0131\")\n\nplt.xlim(-10,310)\nplt.ylim(bottom=0);\n\n# pazarlama y\u00f6netici, bu y\u0131l tv harcamalar\u0131na ne ladar harcarsam sat\u0131\u015f\u0131m ne kadar artar?\n# Neden Tahmin etmek gerekiyor?","95be73c5":"# 165 birimlik tv harcamas\u0131 yaparsam ne kadar sat\u0131\u015f yapar\u0131m.? \nmodel.intercept_ + model.coef_*165","8761035e":"#parametresi= ba\u011f\u0131ms\u0131z de\u011fi\u015fken de\u011feri, yani tv harcamalar\u0131\n# TV harcamas\u0131\nmodel.predict([[165]])","e74cc3f9":"# birden fazla de\u011fer ile  ne kadar \n# 5, 15, 30 birim  tv harcamam  ile ne kadar sat\u0131\u015f yapar\u0131m.\nyeni_veri=[[5], [15],[30],[450]]\n\nmodel.predict(yeni_veri)","27199a2e":"#parametresi= ba\u011f\u0131ms\u0131z de\u011fi\u015fken de\u011feri, yani tv harcamalar\u0131\n# TV harcamas\u0131 400 birim olursa, ne kadar sat\u0131\u015f olur\nmodel.predict([[400]])","585f44ae":"df.describe().T","4b456cea":"# sat\u0131\u015flar\ny.head()\n# veri setindeki ba\u011f\u0131ml\u0131 halindeki de\u011ferleri","cf47ec56":"# tv harcamalar\u0131m\u0131z: ba\u011f\u0131ms\u0131z de\u011fi\u015fken\nmodel.predict(X)[0:10]\n# tahmin et, Ba\u011f\u0131ms\u0131z de\u011ferlerin ne olaca\u011f\u0131n\u0131?","4ab37eee":"# ne kadar ba\u015far\u0131 ba\u015far\u0131l\u0131 bir i\u015flem yapm\u0131\u015fs\u0131z?\ngercek_y = y[0:10]\ntahmin_edilen_y = pd.DataFrame(model.predict(X)[0:10])","b9c4b812":"# (sol ger\u00e7ek de\u011ferler, sa\u011f tahmin edilenler)\nhatalar = pd.concat([gercek_y,tahmin_edilen_y], axis = 1)\n# isimlendirme\nhatalar.columns=[\"gercek_y\", \"tahmin_edilen_y\"]\nhatalar","c9e3735a":"#art\u0131k, Ger\u00e7ek de\u011fer ile tahmin edilen hatalar aras\u0131ndaki fark\nhatalar[\"hata\"]= hatalar[\"gercek_y\"]-hatalar[\"tahmin_edilen_y\"]\nhatalar","14ae353f":"# ortalama hata nedir?\n#MSE\nhatalar[\"hata_kareler\"]=hatalar[\"hata\"]**2\nhatalar","1febef63":"import numpy as np\nnp.mean(hatalar[\"hata_kareler\"])\n# bizim modelimiz \u015fu kadar ba\u015far\u0131,\n# hata kareler ortalamas\u0131 nedir?","50290fb4":"import pandas as pd\nad = pd.read_csv(\"\/kaggle\/input\/d\/sezginildes\/advertising\/Advertising.csv\")\ndf = ad.copy()\ndf = df.iloc[:, 1:len(df)]\ndf.head()","314d3a64":"# sales u\u00e7ur\nX = df.drop(\"sales\", axis=1)\ny = df[[\"sales\"]] #pandas dataframe \u00e7evirmek bir tane k\u00f6\u015feli parantes\n# ba\u011f\u0131ms\u0131z de\u011fi\u015fken, TV harcamam\u0131z\nX.head()","fbc545ac":"# ba\u011f\u0131ml\u0131 de\u011fi\u015fken, sat\u0131\u015f miktar\u0131m\u0131z\u0131\ny.head()","8a16cca7":"import statsmodels.api as sm\n#lm lineer model\nlm = sm.OLS(y,X) # (ba\u011f\u0131ml\u0131 de\u011fi\u015fken, ba\u011f\u0131ms\u0131z de\u011fi\u015fkenler)\nlm","404115b7":"# fit i\u015flemi, model kurmak\nmodel =lm.fit()\n#e\u011fer x ve y de\u011fi\u015fkenlirini \u00f6nce girmemi\u015f olsayd\u0131m fit s\u0131rasd\u0131nda girebiliriz\n\nmodel.summary()\n\n# f istati\u011fi, modelin anlaml\u0131\u011f\u0131n\u0131 test etmek i\u00e7in\n# prob f < 0.05 k\u00fc\u00e7\u00fck bu y\u00fczden model anlamal\u0131.\n\n\n# coef yani\n# s","144e59e5":"from sklearn.linear_model import LinearRegression\nlm = LinearRegression()\n# model nesnesi(ba\u011f\u0131ms\u0131z de\u011fi\u015fken,ba\u011f\u0131ml\u0131 de\u011fi\u015fken)\nmodel = lm.fit(X,y)\nmodel.get_params()","c33db7f8":" # sabite eri\u015fmek\nmodel.intercept_","8df81167":"#ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlere ait katsay\u0131lar\u0131\n# katsay\u0131lar\u0131 de\u011fi\u015fti fark ettin mi?\nmodel.coef_","d4c780fb":" 2.94 +30*0.04 + 10*0.19 -40*0.001","fd99299d":"yeni_veri =[[30], [10],[40]]\n# data frame \u00e7evirmek gerek\nyeni_veri = pd.DataFrame(yeni_veri).T\nyeni_veri","10b946b1":"model.predict(yeni_veri)","2d3edf47":"yeni_veri =[[300], [120],[400]]\n# data frame \u00e7evirmek gerek\nyeni_veri = pd.DataFrame(yeni_veri).T\nyeni_veri","87d24306":"model.predict(yeni_veri)","9865611c":"from sklearn.metrics import mean_squared_error\ny.head() # y nin ger\u00e7ek de\u011ferleri","5572ebb0":"model.predict(X)[0:10]\n# y \u015fapka de\u011ferleri","a2a0477b":"# MSE\n# birim ba\u015f\u0131 yapabilece\u011fimiz ortalama hata\n# (ger\u00e7ek de\u011ferler, tahmin edilen de\u011ferler)\nMSE= mean_squared_error(y, model.predict(X))\nMSE","b8eb8d50":"# hata kareler ortalamas\u0131n\u0131n karek\u00f6k\u00fc\nRMSE = np.sqrt(MSE)\nRMSE","a0a7b5cd":"# ba\u011f\u0131ms\u0131z de\u011fer\u015fer\nX.head()","0c953709":"y.head()","5320670a":"from sklearn.model_selection import train_test_split\n# %20 test i\u00e7in ayr\u0131lacak, random_state farkl\u0131 say\u0131lar gelmesin diyr b\u00f6yle yap\u0131l\u0131yor\n\n# random_state ise her seferinde \u00e7al\u0131\u015ft\u0131rd\u011f\u0131m\u0131zda farkl\u0131 sonu\u00e7lar gelmesin.\nX_train, X_test, y_train,y_test=train_test_split(X, y, \n                                                 test_size=0.20, \n                                                 random_state=99)","b05b3567":"# ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z \nX_train.head()","72547560":"# ba\u011f\u0131ml\u0131 de\u011fi\u015fken\ny_train.head()","e3f9dd4e":"# test ba\u011f\u0131ml\u0131\ny_test.head()","c7b33699":"# test ba\u011f\u0131ml\u0131\nX_test.head()","a646b7d1":"lm= LinearRegression()\n# e\u011fitim ba\u011f\u0131ms\u0131z tv,radio gazete de\u011fi\u015fkeni\n# testin sales, sat\u0131\u015f\u0131n ba\u011f\u0131ms\u0131z de\u011fi\u015fkeni\nmodel= lm.fit(X_train,y_train)\nmodel.get_params()","dba14179":"#E\u011fitim hatas\u0131\n\n#e\u011fitim hatas\u0131 varsa test hatas\u0131 da vard\u0131r.\n# hata Train hatas\u0131\nnp.sqrt(mean_squared_error(y_train, \n                           model.predict(X_train)))","77ba5353":"#test hatas\u0131\n#s\u0131nama seti yakla\u015f\u0131m\u0131yla hata bulma\nnp.sqrt(mean_squared_error(y_test, \n                           model.predict(X_test)))","20c3ad4c":"\n# %20 test i\u00e7in ayr\u0131lacak, random_state farkl\u0131 say\u0131lar gelmesin diyr b\u00f6yle yap\u0131l\u0131yor\nX_train, X_test, y_train,y_test = train_test_split(X, y, \n                                                   test_size=0.20, \n                                                   random_state=1)","f44c1765":"#E\u011fitim hatas\u0131\n# # 1.723682482265075\n\n#e\u011fitim hatas\u0131 varsa test hatas\u0131 da vard\u0131r.\n# hata Train hatas\u0131\nnp.sqrt(mean_squared_error(y_train, \n                           model.predict(X_train)))","86bf913c":"#test hatas\u0131\n# 1.4312783138301641\n\n#s\u0131nama seti yakla\u015f\u0131m\u0131yla hata bulma\nnp.sqrt(mean_squared_error(y_test, \n                           model.predict(X_test)))","1a680b58":"from sklearn.model_selection import cross_val_score\n# cv cross validition,ka\u00e7 kal\u0131 olsun\ncross_val_score(model, X_train, y_train,\n                cv=10, scoring = \"neg_mean_squared_error\")\n\n# train seti \u00fczerinde 10 par\u00e7aya b\u00f6l\u00fcnd\u00fc, 1 ayr\u0131ld\u0131, 9 ile e\u011fitildi. biri test edildir.\n# her seferinde toplamda 10 kere \u00e7al\u0131\u015ft\u0131d\u0131r","64758e4e":"# CV, MSE: Hata kareler ortalamas\u0131\n\nnp.mean(-cross_val_score(model, X_train, y_train,\n                cv=10, scoring = \"neg_mean_squared_error\"))","c09f1cb7":"# CV, Mapraz do\u011frulama ile elde edilmi\u015f RMSE\n#modei do\u011frulad\u0131k. on defa yapt\u0131k, ortalamas\u0131n\u0131 bulduk\nnp.sqrt(np.mean(-cross_val_score(model, X_train, y_train,\n                cv=10, scoring = \"neg_mean_squared_error\")))","ca2f6c1e":"# !!! veri seti yerince b\u00fcy\u00fckse\n# CV, RMSE\n# T\u00fcm veriyi tek veri olarak ele alma,!!!!!!\n# cras validaiton ile s\u0131nama seti ile kar\u015f\u0131la\u015ft\u0131rma amac\u0131\n# \u00e7al\u0131\u015fma setinde veriyi b\u00f6l, biri test biri e\u011fitim i\u00e7in.\nnp.sqrt(np.mean(-cross_val_score(model, X, y,\n                cv=10, scoring = \"neg_mean_squared_error\")))\n\n\n# Neden b\u00f6yle bir \u015fey yapt\u0131k? Tek ba\u015f\u0131na test-train hatas\u0131n\u0131n d\u0131\u015f\u0131nda modeli do\u011frulad\u0131k.\n# varkl\u0131 varyanslonlara g\u00f6re ilke test hatas\u0131na g\u00f6re de\u011fil VAL\u0130DE edilmi\u015f hatay\u0131 al\u0131r\u0131z\n# ilkel bir hata de\u011fildir.  valide edilmi\u015ftir.","659051a0":"# Gerekli k\u00fct\u00fcphanesi\nimport numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import Ridge\nfrom sklearn.metrics import mean_squared_error, r2_score # r^2 geldi\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import model_selection\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import RidgeCV","487ce33c":"hit = pd.read_csv(\"\/kaggle\/input\/hitters-baseball-data\/Hitters.csv\")\ndf = hit.copy()\ndf = df.dropna() # eksik de\u011ferleri u\u00e7urduk.\n#one hot encoding dummy de\u011fi\u015fkeni\ndms = pd.get_dummies(df[['League', 'Division', 'NewLeague']])\ny = df[\"Salary\"] # ba\u011f\u0131ml\u0131 de\u011fi\u015fken\n\n#ba\u011f\u0131ms\u0131z de\u011fi\u015fken\nX_ = df.drop(['Salary', 'League', 'Division', 'NewLeague'], axis=1).astype('float64')\n\nX = pd.concat([X_, dms[['League_N', 'Division_W', 'NewLeague_N']]], axis=1)\n\n# test-train ayr\u0131m\u0131\nX_train, X_test, y_train, y_test = train_test_split(X, y,\n                                                    test_size=0.25,\n                                                    random_state=42)\n\n\n#ama\u00e7: Maa\u015f tahmini yapmak. Bilgilileri alarak bu maa\u015f\u0131 \u00f6n g\u00f6rebilmek\n# elimde ge\u00e7mi\u015f veriler,acaba bu ki\u015fiye ne kadar maa\u015f verebilirim? \n#* Y\u00fcksek potansiyel oyuncular da tespit edilebilir.","3b769d73":"df.head()","2d50ae40":"# boyutu nedir?\ndf.shape","0f54c7a8":"# rigde model kurmak, train seti \u00fczerinden modeli e\u011fitmek\n# alpha = lambda de\u011feri oluyor\nridge_model = Ridge(alpha = 5).fit(X_train,y_train)\n\n# ridge model nesnesi\nridge_model.get_params()","e23a1403":"#katsay\u0131ar\u0131\nridge_model.coef_\n\n#farkl\u0131 lamda de\u011ferlerine kar\u015f\u0131 katsay\u0131lar\u0131n de\u011fi\u015fimi nas\u0131l olur?","f2752c5b":"#sabit katsay\u0131ar\u0131\nridge_model.intercept_","7f7d60d3":"# de\u011fer olu\u015fturmak i\u00e7in,\n# ()\n# bu lambda de\u011ferlerine kar\u015f\u0131 katsay\u0131lar nas\u0131l de\u011fi\u015fiyor acaba?\nnp.linspace(10,-2,100)","32411250":"lambdalar =10**np.linspace(10,-2,100)*.05\nlambdalar","dce7ef2f":"# model nesnesi olu\u015fturduk\nridge_model=Ridge()\nkatsayilar = []\n\nfor i in lambdalar:\n    ## set params: parametreleri ayarlamak \n    ridge_model.set_params(alpha = i)\n    # modeli fit et.\n    ridge_model.fit(X_train,y_train)\n    # her lambda ba\u011f\u0131ms\u0131z de\u011fi\u015fen say\u0131s\u0131 kadar beta katsay\u0131lar\u0131n\u0131 t\u00fcremek\n    katsayilar.append(ridge_model.coef_)\n# katsayilar","a41a4e56":"# nesne tan\u0131mla\nax = plt.gca()\n# her bir lambda kar\u015f\u0131l\u0131k katsay\u0131lar nas\u0131l de\u011fi\u015fyiro\nax.plot(lambdalar, katsayilar)\n# \u00f6l\u00e7ek de\u011fi\u015ftirme: logaritmi \u00f6l\u00e7eklendirme\nax.set_xscale(\"log\")\n\n# farkl\u0131 lambda de\u011ferlerine kar\u015f\u0131l\u0131k, katsay\u0131lar\u0131n yani parametreler nas\u0131l de\u011fi\u015fiyor\n# ridge reg anlams\u0131z parametreleri s\u0131f\u0131ra yakla\u015f\u0131yor.\n# de\u011ferler art\u0131k\u00e7a ridge vurarak s\u0131f\u0131ra yakla\u015ft\u0131yor.\n\n#optimom lambda de\u011ferleri, hata oran\u0131yla bilirkte nedir?\n# farkl\u0131","72619672":"# train modelini\nridge_model = Ridge().fit(X_train,y_train)\nridge_model.get_params()","1c535b5f":"# y_pred: tahmin edilen y de\u011ferleri: Y Predicted\ny_pred = ridge_model.predict(X_train)\ny_pred[0:10]","7c6ad6c5":"# y nin ger\u00e7ek de\u011ferleri\ny_train[0:10]","81469cf7":"# ytain ger\u00e7ek de\u011fer, y_pred: tahmin edilen de\u011ferl\nRMSE = np.sqrt(mean_squared_error(y_train, y_pred))\nRMSE\n# RMSE: hata karaler toplam\u0131\n# train hatas\u0131 ama valide edilmemi\u015f train hatas\u0131\n    # * Valide etmek i\u00e7in cross-validation yapmak gerek.\n# ilkel test hatas\u0131,","f5e223ef":"np.sqrt(np.mean(-cross_val_score(ridge_model, \n                                 X_train, y_train,\n                                 cv=10, \n                                 scoring = \"neg_mean_squared_error\")))\n\n\n# hatan\u0131n\u0131 d\u00fc\u015f\u00fck olmas\u0131 her zaman iyi de\u011fildir.\n#cross validation ile bu hata 351 oldu. daha do\u011fru hata. \n#Model optimizsayonu i\u00e7in dikkat etmek gerek.","0380008b":"# test hatas\u0131: test setinden ba\u015far\u0131m\u0131z\u0131 tahmin etmek istiyoruz.\n# test setinin ger\u00e7ek de\u011ferleri, ve tahmin edilen de\u011ferli\n# x setinin i\u00e7inde bulunan ba\u011f\u0131ms\u0131z de\u011fi\u015fkenleri kullanarak ba\u011f\u0131ml\u0131 y de\u011fi\u015fkenini tahmin et. Y Prediction\ny_pred =ridge_model.predict(X_test)","e84070be":"RMSE = np.sqrt(mean_squared_error(y_test, y_pred))\nRMSE\n\n# model kurduk, model optimuzasyonu","dea9afd8":"\nridge_model =Ridge().fit(X_train,y_train)\ny_pred= ridge_model.predict(X_test)\nRMSE = np.sqrt(mean_squared_error(y_test, y_pred))\nRMSE\n#hangi lambda de\u011feri min de\u011feri veriyor acaba?","0de39072":"\nridge_model =Ridge(1).fit(X_train,y_train)\ny_pred= ridge_model.predict(X_test)\nRMSE = np.sqrt(mean_squared_error(y_test, y_pred))\nRMSE\n#hangi lambda de\u011feri min de\u011feri veriyor acaba?","6cbba2b5":"ridge_model =Ridge(100).fit(X_train,y_train)\ny_pred= ridge_model.predict(X_test)\nRMSE = np.sqrt(mean_squared_error(y_test, y_pred))\nRMSE\n#hangi lambda de\u011feri min de\u011feri veriyor acaba?","e6c49dc2":"# modelleri deneme yap\u0131lma yoluyla ger\u00e7ekle\u015ftirdi\u011fimizde tune etmi\u015f yani ayarlm\u0131\u015f oluyoruz.\n# en uygun parametre de\u011ferini bulmaya \u00e7al\u0131\u015f\u0131yoruz.\nlambdalar1 = np.random.randint(0,1000,100)\nlambdalar2 =10**np.linspace(10,-2,100)*0.5\n\n# farkl\u0131 lambda de\u011ferlerini olu\u015fturup, farkl\u0131 de\u011ferlere kar\u015f\u0131l\u0131k nas\u0131l bir de\u011fi\u015fiklik meydana geliyor acaba","f3d3bbc9":"# farkl\u0131 lambda de\u011ferlerine kar\u015f\u0131l\u0131k olu\u015fan katsay\u0131lar\u0131ndaki hatalar nelerdir?\nridgecv = RidgeCV(alphas =lambdalar1,\n                  scoring =\"neg_mean_squared_error\", # istersek r'2, hata kareler ortalamas\u0131\n                    cv= 10, # ka\u00e7 katl\u0131 cross-validation olsun\n                    normalize = True) # normale\u015ftirme, standartla\u015fma i\u015flemi oldu.\nridgecv.fit(X_train, y_train)","58b54c2d":"#ridge cv i\u00e7indeki optimun parametresi\nridgecv.alpha_","103b22cb":"# final modeli\n# tune edilmi\u015f, parametreleri ayarlanm\u0131\u015f demek.\nridge_tuned =Ridge(alpha = ridgecv.alpha_ ).fit(X_train, y_train)\n\nridge_tuned.get_param","be5ff188":"# test hatas\u0131, \ny_pred= ridge_tuned.predict(X_test)\nRMSE = np.sqrt(mean_squared_error(y_test, y_pred))\nRMSE","513e1d55":"# farkl\u0131 lambda de\u011ferlerine kar\u015f\u0131l\u0131k olu\u015fan katsay\u0131lar\u0131ndaki hatalar nelerdir?\nridgecv = RidgeCV(alphas =lambdalar2,\n                  scoring =\"neg_mean_squared_error\", # istersek r'2, hata kareler ortalamas\u0131\n                    cv= 10, # ka\u00e7 katl\u0131 cross-validation olsun\n                    normalize = True) # normale\u015ftirme, standartla\u015fma i\u015flemi oldu.\nridgecv.fit(X_train, y_train)","32b26744":"#ridge cv i\u00e7indeki optimun parametresi\nridgecv.alpha_","3c5b7c79":"# final modeli\n# tune edilmi\u015f, parametreleri ayarlanm\u0131\u015f demek.\nridge_tuned =Ridge(alpha = ridgecv.alpha_ ).fit(X_train, y_train)\n\nridge_tuned.get_params()","51dd046c":"# test hatas\u0131, \n# 356.40713661391317\n\ny_pred= ridge_tuned.predict(X_test)\nRMSE = np.sqrt(mean_squared_error(y_test, y_pred))\nRMSE","5ea92c52":"# Gerekli k\u00fct\u00fcphanesi\nimport numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import Ridge, Lasso\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import model_selection\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import RidgeCV, LassoCV","33525773":"hit = pd.read_csv(\"\/kaggle\/input\/hitters-baseball-data\/Hitters.csv\")\n\ndf = hit.copy()\ndf = df.dropna()\ndms = pd.get_dummies(df[['League', 'Division', 'NewLeague']])\n# ba\u011f\u0131ml\u0131 de\u011fi\u015fken, hedef de\u011fi\u015fken\ny = df[\"Salary\"]\n\n#katergorik hallerini u\u00e7urduk.\nX_ = df.drop(['Salary', 'League', 'Division', 'NewLeague'], axis=1).astype('float64')\nX = pd.concat([X_, dms[['League_N', 'Division_W', 'NewLeague_N']]], axis=1)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y,\n                                                    test_size=0.25,\n                                                    random_state=42)","ff751b68":"df.head()","bf9f3512":"df.shape","7263185d":"# model kuruldu.\nlasso_model =Lasso().fit(X_train,y_train)\nlasso_model.get_params()","0a6aa33f":"# sabit  de\u011fer\nlasso_model.intercept_","282ca017":"# ba\u011f\u0131ms\u0131z de\u011fi\u015fken katsay\u0131lar\u0131\nlasso_model.coef_","99b6c48d":"#lasso nesnesi\nlasso = Lasso()#\ncoefs=[]\n#\nalphas = np.random.randint(0, 10000,10)\n\n# \u03bb = alpha\nfor a in alphas:\n    # gelen\n    lasso.set_params(alpha = a)\n    lasso.fit(X_train, y_train)\n    coefs.append(lasso.coef_)","50813eef":"# \nax = plt.gca()\nax.plot(alphas, coefs)\nax.set_xscale(\"log\")\n\n# de\u011ferlerin baz\u0131lar\u0131 s\u0131f\u0131ra yakla\u015ft\u0131r\u0131yor","fbcbd0e6":"# alphalar\u0131 iki ile \u00e7arp\u0131lm\u0131\u015f\nax = plt.gca()\nax.plot(alphas*2, coefs)\nax.set_xscale(\"log\")","ed68e060":"# ridge b\u00f6l\u00fcm\u00fcndeki katsay\u0131lar\nlasso = Lasso()\ncoefs=[]\nalphas = 10**np.linspace(10,-2,100)*0.5\n\nfor a in alphas:\n    lasso.set_params(alpha =a)\n    lasso.fit(X_train, y_train)\n    coefs.append(lasso.coef_)","00c5ca98":"ax = plt.gca()\nax.plot(alphas, coefs)\nax.set_xscale(\"log\")\n\n\n#parametre de\u011ferleri art\u0131k\u00e7a Beta de\u011feleri s\u0131f\u0131r oluyor yahut s\u0131f\u0131ra yakla\u015f\u0131yor","c0688237":"lasso_model.get_params()\n\n# default olarak 'alpha': 1.0 vermi\u015f","7c593dd4":"# ba\u011f\u0131ms\u0131z de\u011fi\u015fkenleri kullanarak\nlasso_model.predict(X_train)[0:5]","42119f36":"# test setinin ba\u011f\u0131ms\u0131z \nlasso_model.predict(X_test)[0:5]","aa69ce34":"# test hatas\u0131\n# y prediction\n\n# test hastas\u0131n\u0131 bulma: test setindeki ba\u011f\u0131ms\u0131z de\u011fi\u015fkenleri kullanarak test setindeki ba\u011f\u0131ml\u0131 yani salary maa\u015f\u0131 bulmaya \u00e7al\u0131\u015f\u0131yoruz\ny_pred = lasso_model.predict(X_test)","6a1bd52d":"#ilkel test hatas\u0131\n# optimize edilmemei\u015f test hatas\u0131.\n# modeller ilerledik\u00e7e test hatas\u0131 d\u00fc\u015fmeyebilir.\n    # \u00e7\u00fcnk\u00fc baz\u0131 modeller baz\u0131 problemlerde iyidir baz\u0131lar\u0131nda k\u00f6t\u00fcd\u00fcr. \n    # ama a\u011faca dayall\u0131 modeller ilerledik\u00e7e daha d\u00fc\u015f\u00fck hatalar verir.\nnp.sqrt(mean_squared_error(y_test, y_pred))","613802f0":"# r2 ba\u011f\u0131ms\u0131z de\u011fi\u015fkenler ba\u011f\u0131ml\u0131 de\u011fi\u015fkenlerin y\u00fczde ka\u00e7\u0131n\u0131 a\u00e7\u0131klayabilmektedir.\nr2_score(y_test, y_pred)","e08328c5":"\nlasso_cv_model =LassoCV(cv=10, \n                        max_iter = 100000).fit(X_train,y_train)\n# parametre nedir?\nlasso_cv_model.alpha_","e9354822":"# bu paramtre ile modeli fit et.\n# final modeli\nlasso_tuned= Lasso().set_params(alpha = lasso_cv_model.alpha_ ).fit(X_train,y_train)\ny_pred = lasso_tuned.predict(X_test)\n\nnp.sqrt(mean_squared_error(y_test, y_pred))","6fa1e50f":"# alphas, d\u0131\u015far\u0131dan aral\u0131k verince, aran\u0131cak uzay\u0131 verdik.\nalphas = 10**np.linspace(10,-2,100)*0.5\n\nlasso_cv_model =LassoCV(alphas = alphas, \n                        cv=10, \n                        max_iter = 100000).fit(X_train,y_train)\n# parametre nedir?\nlasso_cv_model.alpha_","c7b1d4db":"# bu paramtre ile modeli fit et.\n# final modeli\nlasso_tuned= Lasso().set_params(alpha = lasso_cv_model.alpha_ ).fit(X_train,y_train)\ny_pred = lasso_tuned.predict(X_test)\n\n# final modelin test hatas\u0131\nnp.sqrt(mean_squared_error(y_test, y_pred))","1bae6c53":"# Lasso edilmi\u015f, katsay\u0131lar\u0131n isimlerini\n# katsay\u0131lar\u0131n 0 olursa maa\u015fa etkisi olmaz\npd.Series(lasso_tuned.coef_,index =X_train.columns)\n\n# Y\u00f6netici geldi, \u00e7e\u015fitli oyunclar\u0131n bu de\u011fi\u015fkenleri verirsen maa\u015flar\u0131n ne olac\u011fa\u0131n\u0131 s\u00f6ylebilirim.","060a0b1f":"# Gerekli k\u00fct\u00fcphanesi\nimport numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import Ridge, Lasso, ElasticNet\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import model_selection\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import RidgeCV, LassoCV,ElasticNetCV","5e6f0209":"hit = pd.read_csv(\"\/kaggle\/input\/hitters-baseball-data\/Hitters.csv\")\n\ndf = hit.copy()\ndf = df.dropna()\ndms = pd.get_dummies(df[['League', 'Division', 'NewLeague']])\ny = df[\"Salary\"]\nX_ = df.drop(['Salary', 'League', 'Division', 'NewLeague'], axis=1).astype('float64')\nX = pd.concat([X_, dms[['League_N', 'Division_W', 'NewLeague_N']]], axis=1)\nX_train, X_test, y_train, y_test = train_test_split(X, y,\n                                                    test_size=0.25,\n                                                    random_state=42)","57a43569":"# model kurmak\nenet_model = ElasticNet().fit(X_train, y_train)\n\n# ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerin katsay\u0131lar\u0131\nenet_model.coef_","16904c59":"# sabit katsay\u0131lar\nenet_model.intercept_","5d5ebca4":"#tahmin\n# train setindeki ba\u011f\u0131ms\u0131z de\u011fi\u015fkenleri girdi\u011fimizde \nenet_model.predict(X_train)[0:10]","ce450aeb":"# test seti ba\u011f\u0131ms\u0131z de\u011fi\u015fkenleri\nenet_model.predict(X_test)[0:10]","fbee2d5b":"# tahmini maa\u015f\u0131 tahmin etme\ny_pred= enet_model.predict(X_test)","ac9aebe2":"#ilkel test hatas\u0131\nnp.sqrt(mean_squared_error(y_test, y_pred))","88a77bf1":"r2_score(y_test,y_pred)\n# ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerin maa\u015f\u0131 a\u00e7\u0131klanma oran\u0131","533bca02":"alphas = 10**np.linspace(10,-2,100)*0.5\nenet_cv_model = ElasticNetCV(alphas= alphas, \n                             cv=10).fit(X_train,y_train)\nenet_cv_model.alpha_\n\ny_pred = enet_tuned.predict(X_test)\n\n# test seti i\u00e7in hatas\u0131\nnp.sqrt(mean_squared_error(y_test, y_pred))","b22ac29f":"enet_cv_model.intercept_","cf077df0":"# sabit katsay\u0131lar\u0131, \nenet_cv_model.coef_","36fb1d79":"# final modeli\nenet_tuned = ElasticNet(alpha = enet_cv_model.alpha_).fit(X_train,y_train)\n\ny_pred = enet_tuned.predict(X_test)\n\n# test seti i\u00e7in hatas\u0131\nnp.sqrt(mean_squared_error(y_test, y_pred))","656f9768":"# final modeli\nenet_tuned = ElasticNet(alpha = enet_cv_model.alpha_).fit(X_train,y_train)\n\ny_pred = enet_tuned.predict(X_test)\n\n# test seti i\u00e7in hatas\u0131\nnp.sqrt(mean_squared_error(y_test, y_pred))","31dae16e":"?ElasticNet","3f6c3de4":"# 24.1. Lasso Regresyon'a Giri\u015f\n\nAma\u00e7: Hata kareler toplam\u0131n\u0131 minimize eden katsay\u0131lar\u0131 bu katsay\u0131lara bir ceza uygulayarak bulmakt\u0131r. (Tibshirani 1996)\n\nL1= Lasso Regresyonu, ceza terimiyle ilgili\nL2= Rigde Regresyonu\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/bb8efd71-4216-402d-a9c4-d0e59cb807d7\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210712%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210712T132741Z&X-Amz-Expires=86400&X-Amz-Signature=ee04daf16fb6b0b89fddeb8756201d384e4cec6d7448adcfc7ab6d70924f8dc4&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n\n\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/1bdcdb06-dc30-4c45-9922-8bc25c48504f\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210712%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210712T132826Z&X-Amz-Expires=86400&X-Amz-Signature=392ad225244d5da9e857f497a5f0d82e18c40c932288fb7e036992af690bda43&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n\n\u00d6zellikleri\n1. Ridge regresyonun ilgili-ilgisiz t\u00fcm de\u011fi\u015fkenleri modelde b\u0131rakma dezavantaj\u0131n\u0131 gidermek i\u00e7in \u00f6nerilmi\u015ftir.\n2. Lasso'da katsay\u0131lar\u0131 s\u0131f\u0131ra yakla\u015ft\u0131r\u0131r.\n3. Fakat L1 normu \u03bb yeteri kadar b\u00fcy\u00fck oldu\u011funda baz\u0131 katsay\u0131lar\u0131 s\u0131f\u0131r yapar. B\u00f6ylece de\u011fi\u015fken se\u00e7imi yapm\u0131\u015f olur.\n4. \u03bb'n\u0131n do\u011fru se\u00e7ilmesi \u00e7ok \u00f6nemlidir. Burada da Cross-validation kullan\u0131l\u0131r\n\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/c24a6c4c-68af-4cfd-995d-724524090dd6\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210712%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210712T132931Z&X-Amz-Expires=86400&X-Amz-Signature=2ce7a69190d5a896ea31a402babdff55abef05c3f86604092bab48bca99347a4&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n\n** \u03bb Ayar Parametresinin Belirlenmesi** \n1.  \u03bb'n\u0131n s\u0131f\u0131r oldu\u011fu yer EKKd\u0131r, Hata Kareler Toplam\u0131,HKT,n\u0131 minimum yapan  \u03bb'y\u0131 ar\u0131yoruz.\n \n 2.  \u03bb i\u00e7in belirli deperleri i\u00e7eren bir k\u00fcme se\u00e7ilir. Her birisi i\u00e7in crass validation test hatas\u0131 hesaplan\u0131r.\n \n 3. En k\u00fc\u00e7\u00fck cross validation veren  \u03bb ayar parametresi olarak se\u00e7ilir. \n \n 4. Son olarak se\u00e7ilen bu  \u03bb ile model yeniden t\u00fcm g\u00f6zlemlere fit edilir.\n \n ![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/8e00f12a-eee2-41b9-a88a-8a3eaa5e847a\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210712%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210712T133004Z&X-Amz-Expires=86400&X-Amz-Signature=40f2d7d24b92979cd3b44286e3b21f2464fae240b1ca57bad84b90e03695c2e3&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)","92f60541":"Farkl\u0131 lamda de\u011ferlerine kar\u015f\u0131 katsay\u0131lar\u0131n de\u011fi\u015fimi nas\u0131l olur?","f702e2c8":"1. r^2= ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerin ba\u011f\u0131ml\u0131 de\u011fi\u015fkenleri a\u00e7\u0131klanma y\u00fczdesi.\n    * Yani: Tv reklam harcamam\u0131z\u0131n, sat\u0131\u015flar\u0131m\u0131z\u0131n \u00fczerindeki etkisinin oran\u0131. \n2. r^2 d\u00fczeltilmi\u015f hali ise: Veri de\u011fikenine yeni de\u011fi\u015fken eklenince modelki r^2 b\u00fcy\u00fcr. Bu durum yan\u0131lt\u0131c\u0131d\u0131r. Bu \u015fi\u015fmenin \u00f6n\u00fcne ge\u00e7mek i\u00e7in r^2 d\u00fczeltilmi\u015f \u00f6nem arz ediyor.\n3. f istati\u011fi, modelin anlaml\u0131\u011f\u0131n\u0131 test etmek i\u00e7in\n     * prob f < 0.05 k\u00fc\u00e7\u00fck bu y\u00fczden model anlamal\u0131.\n\n3. coef: ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerinin katsay\u0131lar\u0131n\u0131 ifade ediyor. \n    * Tv harcamalar\u0131nda bir birim harcama yaparsam, sat\u0131\u015flar\u0131mlar\u0131mda ortalama 0.053 birim art\u0131\u015f olacakt\u0131r.\n4. std error: katsay\u0131lar\u0131n standart hatas\u0131d\u0131r.\n5. P>t, p<0.05 k\u00fc\u00e7\u00fck b\u00fct\u00fcn katsay\u0131lar\u0131n de\u011ferleri,","cc4d9d53":"Veri seti","11875681":"* r2 ba\u011f\u0131ms\u0131z de\u011fi\u015fkenler ba\u011f\u0131ml\u0131 de\u011fi\u015fkenlerin y\u00fczde ka\u00e7\u0131n\u0131 a\u00e7\u0131klayabilmektedir.\n* regresyon problemleri i\u00e7in \u00e7ok de\u011ferli bir s\u00f6ylemdir.","4d67f3a1":"# 201- 1. Do\u011frusal Regresyon Modelleri\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/d5b2abeb-874f-46d1-b937-082bdd374993\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210711%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210711T110432Z&X-Amz-Expires=86400&X-Amz-Signature=60098cd8b1139d8655c9caf78fdfe2ed755ca4333cc0e3a5222065987cb4bc59&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n1. Basit Do\u011frusal Regresyon\n2. \u00c7oklu Do\u011frusal Regresyon\n3. Ridge Regresyon\n4. Lasso Regresyon\n5. Elastic Net Regresyonu\n\n* Her Model \u0130\u00e7in\n    * Model\n    * Tahmin\n    * Model Optimizasyonu\n    \n    \n# 21.1.  Basit Do\u011frusal Regresyon'a Giri\u015f\n\n1. Basit Do\u011frusal Regresyon\n    * Bir ba\u011f\u0131ml\u0131 ve bir ba\u011f\u0131ms\u0131z de\u011fi\u015fkenin olmas\u0131.\n    * Temel Ama\u00e7: Ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fken aras\u0131ndaki ili\u015fkiyi ifade eden do\u011frusal fonksiyonu bulmakt\u0131r. De\u011fi\u015fkenler aras\u0131ndaki ili\u015fkiyi modellemek.\n        * Modellemek: \u00e7e\u015fitli kavramlar aras\u0131ndaki ili\u015fkileri belirli matematiksel formlarda ifade etmektir.\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/aaf978c6-835e-4a28-92ca-6125a3b9a8e0\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210710%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210710T084037Z&X-Amz-Expires=86400&X-Amz-Signature=ce93a595673a1c7dd62f6f6d6e41d98f874b3af5da0c2211d81a269d125b851d&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n    * yi = b0+b1xi: Bu fonksiyonu elde etmek. \n        * yi \u015fapka= tahmin edilen de\u011ferler, modelleme \n        * b0 veb1= veri setinden bulmak gereken parametreler= ZEKA\n        * b0= do\u011frunun y ekseninde kesti\u011fi nokta\n        * b1= Do\u011frunun e\u011fimi\n        * ei, epsilon,=Hata Terimi=Art\u0131k\n            * ei=Ger\u00e7ek de\u011fer ile tahmin edilen de\u011fer aras\u0131ndaki fark\n        * SSE=Sum of Squared Errors= Hata kareler toplam\u0131\n        \n![art\u0131klar](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/19b66ac2-8b52-4130-93a1-e968ea955d17\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210710%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210710T084317Z&X-Amz-Expires=86400&X-Amz-Signature=be8df60c431eb529148fdf42b720832d88051d08e5aace1c3b6bd381d12cc29e&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/cbafd25d-b5ad-4d1e-b2ce-49927a138928\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210710%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210710T084548Z&X-Amz-Expires=86400&X-Amz-Signature=2bd4833a3eba145b00205543992d13a2f7e4df58db0960cce11471ecb046d6e7&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n\n![Tahmin](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/b166cfd5-cd76-4331-92db-8f8b0d4b77ba\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210710%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210710T084825Z&X-Amz-Expires=86400&X-Amz-Signature=631a9aec3154aabd1712518bb88bc49fbcf87ddaed303b095a4f1a25f2be0ae9&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n\n![Geometrik G\u00f6sterim](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/34262295-a92f-488b-be1c-62e1c89fac03\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210710%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210710T085149Z&X-Amz-Expires=86400&X-Amz-Signature=d6888b84e8862bc4c804f16fe356b522be0d69c497c8b207575223b44914e719&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)","a605b47c":"# 24.3. Lasso Regresyon: Tahmin","97a0b2ad":"# 23.3. Ridge Regresyon: Tahmin","3af043b0":"# 201 Makine \u00d6\u011frenmesi Sorular\u0131\n1. Se\u00e7eneklerde regresyon modellemeleri i\u00e7in baz\u0131 yorumlar verilmi\u015ftir. Hangisi genel olarak do\u011frudur? \n    * En ba\u015far\u0131l\u0131 olan Lasso regresyonudur\n    - Problemden probleme algoritmalar\u0131n birbirlerine g\u00f6re ba\u015far\u0131lar\u0131 de\u011fi\u015febilir\n    - Lasso regresyonu parametre say\u0131s\u0131 Ridge regresyonuna g\u00f6re daha fazlad\u0131r\n    - Tarihsel olarak daha sonra bulunan\/geli\u015ftirilen modeller daha ba\u015far\u0131l\u0131d\u0131r\n    - Her zaman daha fazla veri daha fazla ba\u015far\u0131 sa\u011flar.\n  \n    \n2. **\u00c7oklu do\u011frusal regresyon modellemesi yaparken e\u011fitim hatas\u0131n\u0131 daha do\u011fru de\u011ferlendirmek i\u00e7in cross-validation y\u00f6ntemi kullan\u0131l\u0131r. Verilen se\u00e7eneklerden hangisinde (sklearn k\u00fct\u00fcphanesi \u00fczerinden) bu i\u015flemi yapan kod verilmi\u015ftir? (Gerekli mod\u00fcl\u00fcn kuruldu\u011funu varsay\u0131n\u0131z)**\n\n3. Bir basit do\u011frusal regresyon probleminde modeli kurma ad\u0131m\u0131nda temel ama\u00e7 teknik olarak hangisidir?\n    * Denklemdeki y \u015fapka de\u011ferlerini bulmak \n    * x0 de\u011ferini bulmak \n    * b0 sabit say\u0131s\u0131n\u0131 bulmak \n    * b0 ve b1 katsay\u0131lar\u0131n\u0131 bulmak \n    * Katsay\u0131y\u0131 bulmak\n\n4.  **import statsmodels.api as sm**\n\n    **lm = sm.OLS(y, X)**\n\n    **model = lm.fit()**\n\n    **model.summary()**\n\n    **Yukar\u0131da Jupiter notebook \u00fczerinede python-statsmodel k\u00fct\u00fcphanesi kullan\u0131larak \u00e7oklu do\u011frusal regresyon modellemesi yap\u0131lm\u0131\u015ft\u0131r. Buna g\u00f6re model.summary() kodunun \u00e7\u0131kt\u0131s\u0131nda a\u015fa\u011f\u0131dakilerden hangisi bulunmaz?**\n    * r^2 de\u011feri \n    * D\u00fczeltilmi\u015f r^2 de\u011feri \n    * Model katsay\u0131lar\u0131 \n    * P-value de\u011feri \n    * RMSE de\u011feri\n    \n    \n 5. **I.\u00a0\u00a0 reg = LinearRegression()**\n\n    **II.\u00a0 model = reg.fit(X, y)**\n\n    **III. print(dir(model))**\n\n    **Yukar\u0131da baz\u0131 python kodlar\u0131 verilmi\u015ftir. Gerekli mod\u00fcllerin kuruldu\u011fu varsay\u0131m\u0131 alt\u0131nda II. sat\u0131rdaki kod ile ne yap\u0131lm\u0131\u015ft\u0131r?**\n \n    * X de\u011ferleri reg nesnesi \u00fczerinden tahmin edilmi\u015ftir \n    * reg nesnesi \u00fczerinden y de\u011ferleri tahmin edilmi\u015ftir \n    * model kurulmu\u015ftur \n    * model nesnesi ile reg nesnesi tahmin edilmi\u015ftir \n    * reg nesnesi ile model ba\u015far\u0131s\u0131 test edilmi\u015ftir\n    \n    \n6. Se\u00e7eneklerde verilen kodlardan hangisi python \u00fczerinde Do\u011frusal Regresyon mod\u00fcl\u00fcn\u00fc \u00e7a\u011f\u0131rmaya yarar?\n    * from sklearn.linear_model import LinearRegression \n    * import sklearn.linear_model from LinearRegression \n    * from sklearn.linear_model import Linear_Regression \n    * import sklearn.linear_model from Linear_Regression \n    * from sklearn.LinearModel import linear_regression\n\n7. \u00c7oklu do\u011frusal regresyon ile basit do\u011frusal regresyon aras\u0131nda temel olarak ne farkl\u0131l\u0131k vard\u0131r?\n    * Ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler de\u011fi\u015fiktir \n    * Birisi s\u0131n\u0131fland\u0131rma birisi regresyon problemidir \n    * Ba\u011f\u0131ml\u0131 de\u011fi\u015fkenlerin \u00f6l\u00e7e\u011fi farkl\u0131d\u0131r \n    * Ba\u011f\u0131ms\u0131z de\u011fi\u015fken olmamas\u0131d\u0131r \n    * Basit do\u011frusal regresyon modelinde 1 \u00e7oklu do\u011frusal regresyon modellerinde 1\u2019den fazla ba\u011f\u0131ms\u0131z de\u011fi\u015fken vard\u0131r\n    \n8. Kurulan modeller i\u00e7in tahmin i\u015flemi yapmak i\u00e7in kullan\u0131lan fonksiyon hangisidir?\n    * fit()\n    * predict()\n    * tune()\n    * y_pred()\n    * Model()\n\n9. \u00c7oklu do\u011frusal regresyon modeli i\u00e7in model tuning i\u015flemi yerine model do\u011frulama i\u015flemi yap\u0131l\u0131r. Bunu yaparken se\u00e7eneklerde belirtilen hangi y\u00f6ntemler kullan\u0131labilir? \n    * S\u0131nama seti y\u00f6ntemi ve k katl\u0131 \u00e7apraz do\u011frulama y\u00f6ntemi \n    * S\u0131nama seti y\u00f6ntemi ve hiperparametre optimizasyonu \n    * K katl\u0131 \u00e7apraz do\u011frulama y\u00f6ntemi ve hiperparametre optimizasyonu \n    * S\u0131nama seti y\u00f6ntemi ve search grid y\u00f6ntemi \n    * Search grid y\u00f6ntemi ve hiperparametre optimizasyonu\n\n\n\n10. **ridge_model = Ridge(alpha = 5).fit(X_train, y_train)\n    Yukar\u0131da verilen kod ile e\u015fde\u011fer olan kod hangisidir?**\n    * ridge = Ridge(alpha = 5) ridge.fit(X_train, y_train) \n    * ridge_model = Ridge(alpha = 2) ridge_model.fit(X_train, y_train)\n    * ridge_model = Ridge(alpha = 5) ridge.fit(X_train, y_train) \n    * ridge= Ridge(alpha = 5) Ridge.fit(X_train, y_train) \n    * ridge_model = Ridge() ridge_model.fit(X_train, y_train, alpha = 5)\n    \n    \n \n    \n11. Ridge regresyon modellemesi yap\u0131l\u0131rken lambda (alpha) de\u011ferinin iyi se\u00e7ilmesi \u00f6nemlidir. Bu se\u00e7imi yaparken en \u00e7ok kullan\u0131lan y\u00f6ntem hangisidir?\n    * Cross-Validation y\u00f6ntemi \n    * Random atama y\u00f6ntemi \n    * Normal da\u011f\u0131l\u0131ml\u0131 de\u011fi\u015fken deneme y\u00f6ntemi \n    * Nacka-Island y\u00f6ntemi \n    * KNN yakla\u015f\u0131m\u0131\n    \n    \n    \n    \n12. Ridge regresyonunun katsay\u0131 bulma i\u015fleminde \u00e7oklu do\u011frusal regresyondan fark\u0131 nedir? \n    - Ayn\u0131 i\u015flemi daha h\u0131zl\u0131 yapar\n    - Denklemdeki sabit katsay\u0131n\u0131 daha b\u00fcy\u00fck tutar\n    - Denklemdeki katsay\u0131lara bir ceza uygular \n    * Ba\u011f\u0131ms\u0131z de\u011fi\u015fkeni sabit bir say\u0131 ile \u00e7arparak bir ceza uygular\n    - Ridge regresyonu daha iyi tahminde bulunur\n    \n13. GridSearchCV fonksiyonunda \u00e7apraz do\u011frulaman\u0131n ka\u00e7 katl\u0131 olaca\u011f\u0131n\u0131 belirten arg\u00fcman a\u015fa\u011f\u0131dakilerden hangisidir?\n\n\n14. Hangisi Ridge regresyonunun \u00f6zelliklerinden biri de\u011fildir?\n    - A\u015f\u0131r\u0131 \u00f6\u011frenmeye kar\u015f\u0131 diren\u00e7li de\u011fildir\n    - Yanl\u0131d\u0131r fakat varyans\u0131 d\u00fc\u015f\u00fckt\u00fcr\n    - \u00c7ok fazla parametresi oldu\u011fundan EKK\u2019ya g\u00f6re daha iyidir\n    - \u00c7ok boyutluluk lanetine kar\u015f\u0131 \u00e7\u00f6z\u00fcm sunar\n    - \u00c7oklu do\u011frusal ba\u011flant\u0131 problemi oldu\u011funda etkilidir\n    \n15. Y\u00f6ntem\/yakla\u015f\u0131m olarak \u2026 regresyonu, \u2026 ve \u2026 regresyonlar\u0131n\u0131 birle\u015ftirir.\n\n    * Lasso - Ridge - Elastic Net \n    * Ridge - Lasso - Basit Do\u011frusal \n    * Ridge - Lasso - Elastic Net \n    * Elastic Net - Lasso - Ridge \n    * Lasso - Basit Do\u011frusal - Ridge\n\n\n16. Lasso regresyon modeli kurulurken optimum lambda de\u011ferine eri\u015fmek i\u00e7in farkl\u0131 lambda (alpha) de\u011ferlerine kar\u015f\u0131l\u0131k katsay\u0131lar\u0131n durumu ve ortaya \u00e7\u0131kan hatalar incelenir. Bunun i\u00e7in denemek \u00fczere ihtiyac\u0131m\u0131z olan lambda (alpha) setini olu\u015fturmam\u0131za yard\u0131mc\u0131 olabilecek fonksiyonlardan birisi a\u015fa\u011f\u0131dakilerden hangisi olabilir? (\u0130lgili mod\u00fcllerin y\u00fcklendi\u011fini varsay\u0131n\u0131z)\n     * pd.linspace()\n     * np.linspace()\n     * pd.lin_space()\n     * np.lin_space()\n     * linspace()\n\n17.  Se\u00e7eneklerden hangisi ile bir regresyon modeli \u00fczerinden tahmin i\u015flemi yap\u0131lm\u0131\u015ft\u0131r? model: python-sklearn k\u00fct\u00fcphanesinden bir (LinearRegression) do\u011frusal regresyon modelini, new_data: tahmin edilecek olan veriyi ifade ediyor. \u0130lgili mod\u00fcllerin kurulmu\u015f oldu\u011funu varsay\u0131n\u0131z.\n\n    * model.predict(new_data)\n    * new_data.predict(model)\n    * model.fit(new_data)\n    * new_data.fit(model)\n    * predict.model(new_data)\n    \n18. Lasso regresyonu ile Ridge regresyonunun kar\u015f\u0131la\u015ft\u0131r\u0131lmas\u0131 ile ilgili verilenlerden hangisi yanl\u0131\u015ft\u0131r?\n\n    * Ridge regresyonuna g\u00f6re genel olarak daha az de\u011fi\u015fken se\u00e7ilir \n    * Ridge regresyonunda katsay\u0131lar s\u0131f\u0131r olmaz \n    * Lasso regresyonunda katsay\u0131lar s\u0131f\u0131r olabilir \n    * Yakla\u015f\u0131m olarak aralar\u0131nda bir fark yoktur \n    * Lasso regresyonu Ridge regresyonundan daha ba\u015far\u0131l\u0131d\u0131r\n\n19. ElasticNet regresyonu modeli i\u00e7in kullan\u0131lan \u00e7apraz do\u011frulama fonksiyonu a\u015fa\u011f\u0131dakilerden hangisidir?\n    * np.elastic_net_cv()\n    * np.ElasticNetCV()\n    * ElasticNetCV()\n    * pd.ElasticNetCV()\n    * pd.elastic_net_cv()\n20. Ba\u011f\u0131ml\u0131 de\u011fi\u015fkenlerdeki de\u011fi\u015fikli\u011fin, ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerce a\u00e7\u0131klama y\u00fczdesidir.\n    * Epsilon \n    * y \u015fapka \n    * intercept_ \n    * r kare \n    * coef\n    \n    \n21. .Bir adet ba\u011f\u0131ms\u0131z ve bir adet ba\u011f\u0131ml\u0131 de\u011fi\u015fkene sahip olan do\u011frusal regresyon modeline \u2026 denir.\n\n \n\n\n    **Basit do\u011frusal regresyon anakitle modeli:\u00a0 Y = \u03b2o + \u03b21 * X + \u0190**\n\n    I.\u00a0 \u03b2o: Do\u011frunun y eksenini kesti\u011fi nokta \n    II. \u03b21: Do\u011frunun e\u011fimi\n    III.Y: Ba\u011f\u0131ms\u0131z de\u011fi\u015fken\n    IV. \u0190: Hata terimi \n    V. X: Ba\u011f\u0131ml\u0131 de\u011fi\u015fken\n    Verilen a\u00e7\u0131klamalardan hangileri do\u011frudur?\n\n22. Makine \u00f6\u011frenmesi literat\u00fcr\u00fcnde bulunan ''Hata Kareler Ortalamas\u0131'' ve ''Hata Kareler Ortalamas\u0131n\u0131n Karek\u00f6k\u00fc'' ifadelerinin k\u0131salt\u0131lm\u0131\u015f g\u00f6sterimi s\u0131ras\u0131yla hangisidir?\n\n23. .A\u015fa\u011f\u0131dakilerden hangisi \u00e7oklu do\u011frusal regresyon varsay\u0131mlar\u0131ndan biri de\u011fildir?\n    - Hatalar normal da\u011f\u0131l\u0131r\n    - De\u011fi\u015fkenler ile hata terimi aras\u0131nda ili\u015fki vard\u0131r\n    - Herbir g\u00f6zlem i\u00e7in hata terimleri varyanslar\u0131 sabittir\n    - Ba\u011f\u0131ml\u0131 de\u011fi\u015fkenler aras\u0131nda \u00e7oklu do\u011frusal ili\u015fki problemi yoktur\n    - Hatalar birbirinden ba\u011f\u0131ms\u0131zd\u0131r ve aralar\u0131nda otokorelasyon yoktur\n    \n24. .Bir makine \u00f6\u011frenmesi modelinde train hatas\u0131, test hatas\u0131na g\u00f6re \u00e7ok d\u00fc\u015f\u00fck \u00e7\u0131kt\u0131\u011f\u0131nda, bu durumu nas\u0131l a\u00e7\u0131klar\u0131z?","69d00b30":"\nilkel test hatas\u0131\n1. optimize edilmemi\u015f test hatas\u0131.\n2. modeller ilerledik\u00e7e test hatas\u0131 d\u00fc\u015fmeyebilir.\n    * \u00e7\u00fcnk\u00fc baz\u0131 modeller baz\u0131 problemlerde iyidir baz\u0131lar\u0131nda k\u00f6t\u00fcd\u00fcr. \n    * ama a\u011faca dayall\u0131 modeller ilerledik\u00e7e daha d\u00fc\u015f\u00fck hatalar verir.","2a05d41a":"# 22.4. \u00c7oklu Do\u011frusal Regresyon: Model Tuning(model do\u011frulama)\n* Model do\u011frulama: S\u0131nama testi ve K-katl\u0131 yap\u0131l\u0131yor.\n* veriyi test-train olarak ay\u0131rma\n\n![image.png](https:\/\/i1.wp.com\/www.centralvision.co.nz\/wp-content\/uploads\/2019\/10\/bigstock-Eye-Test-Chart-Vector-Letters-229280050.jpg?w=760&ssl=1)","0e15ec0e":"# 21.2. Basit Do\u011frusal Regresyon Model","c2340ef5":"###  Lasso Regresyonda: **Farkl\u0131 lambda(alpha)** de\u011ferlerine kar\u015f\u0131l\u0131k katsay\u0131lar","1e43e702":"###  model ba\u015far\u0131s\u0131 nedir?: \u00c7oklu Do\u011frusal Regresyon","3f96f303":"# 25.1. ElasticNet Regresyon'a Giri\u015f\n\nAma\u00e7: Hata kareler toplam\u0131n\u0131 minimize eden katsay\u0131lar\u0131 bulmak ve bu katsay\u0131lara bir ceza uygulayarak bulmakt\u0131r. \n\n        * ElastikNet= L1 + L2= Lasso + Ridge yakla\u015f\u0131mlar\u0131n\u0131 birle\u015ftirir.  (Zou & Hastie 2005 )\n        \n        * Elasticnet: Ridge tarz\u0131 cezaland\u0131rma, lasso tarz\u0131 de\u011fi\u015fken se\u00e7imi\n\n\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/ce2f2d64-bbb2-4842-bb63-a4afe9e104e9\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210712%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210712T140532Z&X-Amz-Expires=86400&X-Amz-Signature=80833f7740ed380b6d049d867d6b22585b5e48d7d357ac425fb612ccb6ed93a9&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n\n\n\n![ElasticNet= Ridge ve Lasso  g\u00f6rseli](https:\/\/miro.medium.com\/max\/761\/1*nrWncnoJ4V_BkzEf1pd4MA.png)\n\n\n* lambda 1 + lambda 2 sanki bir lambda m\u0131ym\u0131\u015f gibi bakaca\u011f\u0131z.\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/d44777c3-d72e-408d-9ed7-60a149e90e33\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210712%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210712T140620Z&X-Amz-Expires=86400&X-Amz-Signature=8d098c4970e51d66819d823a9b7d166413b1a159806444f8186ecea8b2712b19&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n ","ea50ae0e":"[Kaggle 401 Makine Ogrenmesi Turkcell Gelecegi Yazanlar](https:\/\/www.kaggle.com\/sezginildes\/401-makine-ogrenmesi-turkcell-gelecegi-yazanlar)","5884d9d9":"ElasticNet regresyonu modeli i\u00e7in kullan\u0131lan \u00e7apraz do\u011frulama fonksiyonu a\u015fa\u011f\u0131dakilerden hangisidir?","0428af6c":"# 24.2. Lasso Regresyon: Model","d2b14a57":"# 23.2. Ridge Regresyon Model\n\n1. **ama\u00e7**: Maa\u015f tahmini yapmak. Bilgilileri alarak bu maa\u015f\u0131 \u00f6n g\u00f6rebilmek\n2. elimde ge\u00e7mi\u015f veriler,acaba bu ki\u015fiye ne kadar maa\u015f verebilirim? \n3. Y\u00fcksek potansiyel oyuncular da tespit edilebilir.","f55e6450":"# 25.3. ElasticNet Regresyon: Model Tuning","b254c7ac":"1. modelleri deneme yap\u0131lma yoluyla ger\u00e7ekle\u015ftirdi\u011fimizde tune etmi\u015f yani ayarlm\u0131\u015f oluyoruz.\n1.  en uygun parametre de\u011ferini bulmaya \u00e7al\u0131\u015f\u0131yoruz.","847be367":"# 201 Makine \u00d6\u011frenmesi: \n[201 Makine \u00d6\u011frenmesi E\u011fitimi](https:\/\/gelecegiyazanlar.turkcell.com.tr\/konu\/egitim\/makine-ogrenmesi-201\/giris)\nDenetimli \u00f6\u011frenme y\u00f6ntemlerinden biri olan ve yapay zeka d\u00fcnyas\u0131n\u0131n giri\u015f kap\u0131s\u0131 kabul edilen do\u011frusal regresyon modelleri ve bu modellere \u00f6zel optimizasyon y\u00f6ntemleri ele al\u0131n\u0131yor.\n\n\n## [1. Youtube Videolu \u00d6zet: Basit Do\u011frusal Regresyon](https:\/\/www.youtube.com\/watch?v=JkCTHuul3Jc)","7934c203":"# 21.4. Art\u0131klar: Basit Do\u011frusal Regresyon   \n**Art\u0131klar**\n> ama\u00e7: ger\u00e7ek de\u011fer ile tahmin de\u011fer fark\u0131n\u0131 minimun yapmak.\n> \n### MSE: Hata kareler ortalamas\u0131\n\n### RMSE: Hata Kareler Ortalamas\u0131n\u0131n Karek\u00f6k\u00fc","a6da165e":"## S\u0131nama seti. Holdout Y\u00f6ntemi: \u00c7oklu Do\u011frusal Regresyon Model Tuning\n1. K-katl\u0131 ->test ve train olarak veriyi ay\u0131r\n","3597a23b":"# 23.1. Ridge Regresyon'a Giri\u015f\n\n> Ama\u00e7: Hata kareler toplam\u0131n\u0131 minimize eden katsay\u0131lar\u0131, bu katsay\u0131lara ceza uygulayarak bulmak. (Hoerl & Kennard 1970)\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/ccbe9a1e-c2b1-4590-9aeb-20e4682d685c\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210712%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210712T122550Z&X-Amz-Expires=86400&X-Amz-Signature=ea1d26f8b29c6947d35801d6c420f2848a499e5208c232ce7543b4549abc01af&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n\nRidge = L2= En k\u00fc\u00e7\u00fck Kareler Toplam\u0131 + Lambda*(Ceza Parametresi)\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/10dd0bdb-7285-4531-8a03-04e0fad43009\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210712%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210712T122622Z&X-Amz-Expires=86400&X-Amz-Signature=a312f06857a41381205afaedc9f6dec76f74b4c33fa4de65891fc0a7cc79cbce&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n\nRidge Regresyon\n1. A\u015f\u0131r\u0131 \u00f6\u011frenmeye kar\u015f\u0131 diren\u00e7lidir..\n2. Yanl\u0131d\u0131r fakat varyans\u0131 d\u00fc\u015f\u00fckt\u00fcr. (Bazen yanl\u0131 modelleri daha \u00e7ok tercih ederiz)\n3. \u00c7ok fazla parametre oldu\u011funda EKK'ya g\u00f6re daha iyidir\n    * EKK: klasik Regresyon\n4. \u00c7ok boyutlu lanetine kar\u015f\u0131 \u00e7\u00f6z\u00fcm sunar. \n    * \u00c7ok boyutlu lanet: De\u011fi\u015fken say\u0131s\u0131n\u0131n g\u00f6zlem say\u0131n\u0131ndan fazla olmas\u0131 p>n\n5. \u00c7oklu do\u011frusal banlant\u0131 problemi oldu\u011funda etkilidir. \n    * Ba\u011f\u0131ms\u0131z parametreler aras\u0131nda g\u00fc\u00e7l\u00fc korelasyon varsa\n    * Yani: Bir de\u011fi\u015fkenin ta\u015f\u0131d\u0131\u011f\u0131 bilgiyi ba\u015fka bir de\u011f\u015fken\n6. T\u00fcm de\u011fi\u015fkenler ile model kurar. \u0130lgisiz de\u011fi\u015fkenleri modelden \u00e7\u0131karmaz, katsay\u0131lar\u0131n\u0131 s\u0131f\u0131ra yakla\u015ft\u0131r\u0131r.\n7. Lamda kritik roldedir.  \u0130ki terimin (form\u00fcldeki)g g\u00f6receli etkilerini kontrol etmeyi sa\u011flar.\n8. lambda i\u00e7in iyi bir deper bulunmas\u0131 \u00f6nemlidir. Bunun i\u00e7in Cross-Validation y\u00f6ntemi kullan\u0131l\u0131r.\n\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/c71d7e6e-4c75-4f99-989c-0b0a3d52bf78\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210712%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210712T122705Z&X-Amz-Expires=86400&X-Amz-Signature=f7bd9b190f734bf435404048af82be64d249a33704479770532ad8449cbd9f01&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/cd7755c8-b6a4-4c74-9239-feab09d6db6b\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210712%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210712T122809Z&X-Amz-Expires=86400&X-Amz-Signature=bd156ed64fe58fbfbcfaa4551f45bdccbcd8e0cf3e05261e7e7b6d6043bf3e2c&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n\n\n\n\n9. lambda Ayar Parametresinin Belirlenmesi\n    * Ayar parametresi: Kullan\u0131c\u0131 taraf\u0131ndan verilir.\n    * Betalar= Bulunacak olan parametreler(veri setinden bulunur.)\n10. Lambdan\u0131n s\u0131f\u0131r oldu\u011fu yer: EKK'd\u0131r. HTK(SSE) Hata kareler toplam\u0131n\u0131 minimun yapan lambday\u0131 ar\u0131yoruz.\n\n11. Lambda i\u00e7in belirli de\u011ferler i\u00e7eren bir k\u00fcme se\u00e7ilir ve her birisi i\u00e7in cross validation test hatas\u0131 hesepalan\u0131r.\n\n12. En k\u00fc\u00e7\u00fck cross validation'\u0131 veren lambda ayar parametresi olarak se\u00e7ilir.\n\n13. Son olarak se\u00e7ilen bu lambda ile model yeniden t\u00fcm g\u00f6zlemlere fit edilir.\n\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/0902816b-b976-4f9f-9c98-721114915f98\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210712%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210712T122848Z&X-Amz-Expires=86400&X-Amz-Signature=7868836f6fecea418fff33a55dca076a2b24a2f5fe12d9656bf2ea2311353f07&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)","7e9a22b4":"### R^2 ifadesi modelin skoru\n![image.png](attachment:30944102-a459-4014-89d4-d0eb90b61f1d.png) ","3f4cb0e2":"# 22.2. \u00c7oklu Do\u011frusal Regresyon: Model","f5525306":"###  statsmodels ile model kurmak: \u00c7oklu Do\u011frusal Regresyon Model","7b8f5001":"#  24.4. Lasso Regresyon: Model Tuning\n\n* optimum lamda de\u011ferini bulmak i\u00e7in LassoCV kullanmak","570b5cf2":"# 22.3. \u00c7oklu Do\u011frusal Regresyon: Tahmin\nSales = 2.94 +TV*0.04 + radio*0.19 -newspaper*0.001\n\n1. 30 birim tv\n1. 10 birim radio\n1. 40 birim gazete\n    1. sat\u0131\u015flar ne olacak?","a1e22727":"1.  farkl\u0131 lambda de\u011ferlerine kar\u015f\u0131l\u0131k, katsay\u0131lar\u0131n yani parametreler nas\u0131l de\u011fi\u015fiyor\n1.  ridge reg anlams\u0131z parametreleri s\u0131f\u0131ra yakla\u015f\u0131yor.\n1.  de\u011ferler art\u0131k\u00e7a ridge vurarak s\u0131f\u0131ra yakla\u015ft\u0131yor.\n\n1. optimom lambda de\u011ferleri, hata oran\u0131yla bilirkte nedir?\n  ","e57915e8":"# 25.2. ElasticNet Regresyon: Model ve Tahmini","17179b4c":"# 22.1. \u00c7oklu Do\u011frusal Regresyon'a Giri\u015f\n## Multiple Linear Regression\n## [\u00c7oklu Do\u011frusal Regresyon Youtube Videosu](https:\/\/youtu.be\/rr36gmS-q18)\nTemel ama\u00e7: Ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenler aras\u0131ndaki ili\u015fkiyi ifade eden do\u011frusal fonksiyonu bulmak\n\nama\u00e7 2: Ger\u00e7ek de\u011fer ile tahmin edilen de\u011fer aras\u0131ndaki farklar\u0131 minimum yapmak.\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/44778a07-e4b8-493c-a3e7-ace7010a797d\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210711%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210711T110737Z&X-Amz-Expires=86400&X-Amz-Signature=b44c15d16b4686887616d6dfa0cdfed79da7e27ac428063886ee43bc23fe7fa6&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n\n    * HATA KARELER ORTalamas\u0131n\u0131 minimunu bulmak.\n    * Modeli i\u00e7indeki katsay\u0131lar\u0131, Model i\u00e7indeki ba\u011f\u0131ms\u0131z de\u011fi\u015fkenin etkilerini kontrol etmek i\u00e7in kullan\u0131l\u0131yor.\n    * soru? Buradaki katsay\u0131lar\u0131 bulmak i\u00e7in birden farkl\u0131 yakla\u015f\u0131m kullan\u0131l\u0131yor? \n        * En k\u00fc\u00e7\u00fck Matris ile\n        * G\u00f6zlem say\u0131s\u0131 1000 ge\u00e7ince tersini alma i\u015flemi imkan\u0131ns\u0131za yakla\u015ft\u0131\u011f\u0131nda, klasik y\u00f6ntemlerle zorla\u015f\u0131r. \n    * Gredient dissent : parametre tahmin y\u00f6ntemleri. katsay\u0131lar\u0131 art\u0131k\u00e7a kullan\u0131l\u0131r.\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/066fed38-a679-4f9b-b641-e8e94d09ac59\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210711%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210711T110852Z&X-Amz-Expires=86400&X-Amz-Signature=7a10b756513f1a55aa75b637ec08d6ce56594a4b6ef2cb64bbd3aa89f3f14b43&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n\n_***Do\u011frusal Regresyon Varsay\u0131mlar\u0131***_\n1. Hatalar normal da\u011f\u0131l\u0131r.\n2. Hatalar birbirinden ba\u011f\u0131ms\u0131zd\u0131r ve aralar\u0131nda otokorelasyon yoktur.\n3. Her bir g\u00f6zlem i\u00e7in hata terimleri varyanslar\u0131 sabittir.\n4. De\u011fi\u015fkenler ile hata terimi aras\u0131nda ili\u015fki yoktur.\n5. Ba\u011f\u0131ms\u0131z de\u011fi\u015fkenler aras\u0131nda \u00e7oklu do\u011frusal ili\u015fki problemi yoktur. \n\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/a6a6a952-9375-4d19-8aa7-cfadfed6d6bd\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210711%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210711T110935Z&X-Amz-Expires=86400&X-Amz-Signature=7e98e651f721b3a5aef675efbe17b098c769335863b6c9421f5d4dde7ab7bc04&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)\n\n**Regresyon Modellerinin Avantajlar\u0131 ve Dezavantajlar\u0131**\n1. \u0130yi anla\u015f\u0131l\u0131rsa di\u011fer t\u00fcm Machine Learning ve Deep Learning konular\u0131 \u00e7ok rahat kavran\u0131r.\n2. Do\u011frusall\u0131k nedensellik yourmlar\u0131 yap\u0131labilmesini sa\u011flar. Bu durum aksiyoner ve stratejik modelleme imkan\u0131 verir.\n3. De\u011fi\u015fkenlerin etki d\u00fczeylerini ve anlaml\u0131l\u0131k de\u011ferlendirilebilir.\n4. Ba\u011f\u0131ml\u0131 de\u011fi\u015fkendeki de\u011fi\u015fkenli\u011fin a\u00e7\u0131klanmas\u0131 ba\u015far\u0131s\u0131 \u00f6l\u00e7\u00fclebilir.\n5. Model Anlaml\u0131l\u0131\u011f\u0131 de\u011ferlendirlebilir.\n\nDezavantajlar\u0131\n1. Varsay\u0131mlar\u0131 vard\u0131r\n2. Ayk\u0131r\u0131 g\u00f6zlemlere daha fazla duyarl\u0131d\u0131r.\n\n![](https:\/\/s3.us-west-2.amazonaws.com\/secure.notion-static.com\/29a234f6-377e-4bae-8b61-8beaa6ad2528\/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210711%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210711T111025Z&X-Amz-Expires=86400&X-Amz-Signature=368b636a83ad86a51a8db822ef02f69980dc8d8e99db365518ead6bd863b394f&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)","bb328f40":"### Optimum alpha ile final \u00f6dev mi","d81ad1bd":"# 23.4. Ridge Regresyon: Model Tuning (Model Validation)\n\n**Neden Model Tuning Gerekiyor?**\n\n1. Lamda parametresi d\u0131\u015far\u0131 kaynakl\u0131 oldu\u011fu i\u00e7in modellemek gerekiyor.\n\n1. **Modellemek**: E\u011fitim serisi i\u00e7indeki ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenler aras\u0131ndaki ili\u015fkiyi \u00f6\u011frendik. Modelledik.\n\n1. **Tahmin etmek**: Kurmu\u015f oldu\u011fumuz,\u00f6\u011frenmi\u015f oldu\u011fumuz veri yap\u0131s\u0131n\u0131 kullanarak onu bir fonksiyon kullanarak tahminde bulunmak. \n\n1. Elimizde, belli de\u011fi\u015fkenler geldi\u011finde onun maa\u015f\u0131n\u0131 tahmin etmek.","af86da8a":"> ## scikit learn ile model kurmak: \u00c7oklu Do\u011frasal Regresyon Model","9364f028":"# 21.3. Basit Do\u011frusal Regresyon: Tahmin","f94374e8":"##  k-katl\u0131 CV: \u00c7oklu Do\u011frusal Model Tuning,\nTrain setindeki hatay\u0131 daha do\u011fru alabilmek i\u00e7in bunu kullan\u0131yoruz."}}