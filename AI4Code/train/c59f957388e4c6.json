{"cell_type":{"9cd290b2":"code","9b3f5604":"code","0f0a26c6":"code","9231270f":"code","d0192a4d":"code","fb59df5d":"code","623eed8b":"code","52499fed":"code","e6344309":"markdown","06785870":"markdown","7d480e75":"markdown","1e7bb197":"markdown","e895d796":"markdown","8e7392d0":"markdown","76f7ed7e":"markdown"},"source":{"9cd290b2":"import pandas as pd   \nfrom bs4 import BeautifulSoup   \nimport re \nimport nltk\nfrom nltk.corpus import stopwords\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.ensemble import RandomForestClassifier","9b3f5604":"train = pd.read_csv(\"..\/input\/word2vec-nlp-tutorial\/labeledTrainData.tsv.zip\", header=0, delimiter=\"\\t\", quoting=3)\ntest = pd.read_csv(\"..\/input\/word2vec-nlp-tutorial\/testData.tsv.zip\", header=0, delimiter=\"\\t\", quoting=3 )","0f0a26c6":"train","9231270f":"def review_to_words( raw_review ):\n    review_text = BeautifulSoup(raw_review).get_text()      \n    letters_only = re.sub(\"[^a-zA-Z]\", \" \", review_text) \n    words = letters_only.lower().split()                             \n    stops = set(stopwords.words(\"english\"))                  \n    meaningful_words = [w for w in words if not w in stops]   \n    return( \" \".join( meaningful_words ))   ","d0192a4d":"num_reviews = train[\"review\"].size\nclean_train_reviews = []\nfor i in range(0, num_reviews):\n    if (i%1000 == 0):\n        print(i\/num_reviews * 100, '%')\n    clean_train_reviews.append(review_to_words(train[\"review\"][i] ) )\n","fb59df5d":"vectorizer = CountVectorizer(analyzer = \"word\",   \n                             tokenizer = None,    \n                             preprocessor = None, \n                             stop_words = None,   \n                             max_features = 20000) \n\ntrain_data_features = vectorizer.fit_transform(clean_train_reviews)\n\ntrain_data_features = train_data_features.toarray()","623eed8b":"\nforest = RandomForestClassifier(n_estimators=110) \nforest = forest.fit( train_data_features, train[\"sentiment\"] )","52499fed":"num_reviews = len(test[\"review\"])\nclean_test_reviews = [] \n\nfor i in range(0,num_reviews):\n    clean_review = review_to_words( test[\"review\"][i] )\n    clean_test_reviews.append( clean_review )\n\n\ntest_data_features = vectorizer.transform(clean_test_reviews)\ntest_data_features = test_data_features.toarray()\n\nresult = forest.predict(test_data_features)\n\noutput = pd.DataFrame( data={\"id\":test[\"id\"], \"sentiment\":result} )\n\noutput.to_csv( \"Bag_of_Words_model.csv\", index=False, quoting=3 )","e6344309":"# \u0412\u044b\u0432\u043e\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\n\u041e\u0442\u0447\u0438\u0441\u0442\u0438\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0438\u0437 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u043b\u043e\u0432 \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u0432\u0435\u043a\u0442\u043e\u0440\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432. \u0414\u0430\u043b\u044c\u0448\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043e\u0431\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043e\u0442\u0432\u0435\u0442\u0430","06785870":"\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c \u0432\u0441\u0435 \u0442\u0435\u043a\u0441\u0442\u0430 \u0432 \u0432\u044b\u0431\u043e\u0440\u043a\u0435","7d480e75":"# \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e \u043e\u0447\u0438\u0441\u0442\u043a\u0435 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\n\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0447\u0438\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 \u043e\u0442 html \u0442\u0435\u0433\u043e\u0432 \u0438 \u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u0440\u0435\u043f\u0438\u043d\u0430\u043d\u0438\u044f. \u0417\u0430\u0442\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0441\u043b\u043e\u0432 \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0441\u043b\u043e\u0432\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435\n\u043d\u0435 \u0432\u043b\u0438\u044f\u044e\u0442 \u043d\u0430 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435","1e7bb197":"# \u0418\u043c\u043f\u043e\u0440\u0442 \u043d\u0443\u0436\u043d\u044b\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a","e895d796":"# \u041f\u043e\u043b\u0443\u0447\u0438\u043c \u0432\u0435\u043a\u0442\u043e\u0440\u0430 \u043f\u0440\u0438\u0437\u043d\u043e\u043a\u043e\u0432 \u0438\u0437 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445","8e7392d0":"# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c RandomForestClassifier \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043c\u043e\u0434\u0435\u043b\u0438","76f7ed7e":"# \u0417\u0430\u0433\u0440\u0443\u0437\u0438\u043c \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0443\u044e \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443"}}