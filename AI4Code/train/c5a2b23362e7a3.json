{"cell_type":{"fe516f5c":"code","af91568b":"code","de63ae1b":"code","f088ff70":"code","d0978407":"code","2ee851c2":"code","286bdee0":"code","e2ac3dd4":"code","37acb532":"code","37a003e0":"code","231d1591":"code","7948c407":"code","d02478dd":"code","77d23c8c":"code","031be86e":"code","74fe3b96":"code","cd81b284":"code","ae14de6e":"markdown","e0e96966":"markdown","c53a0c3d":"markdown","c18cf8f8":"markdown","c66f7e54":"markdown","6fd4fe07":"markdown","247b5e82":"markdown","00ae6998":"markdown","d52f2d72":"markdown","8b986975":"markdown","c68c7b32":"markdown","6c16892b":"markdown","3a3ba8c3":"markdown","f26be9ce":"markdown","825d7659":"markdown","1045b601":"markdown","6e0bc973":"markdown","3c51291b":"markdown","9e65078e":"markdown","7e3fa4c9":"markdown","5bd0d55d":"markdown","4ef56c3e":"markdown","eb217a6d":"markdown"},"source":{"fe516f5c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","af91568b":"data_1 = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')","de63ae1b":"# TODO: \n# 1. Gender distribution +\n# 2. Ages +\n#        - Ages distribution +\n#        - Ages vs jobs +\n#        - Ages vs education +\n# 3. Education +\n#        - Education distribution +\n#        - Education vs job +\n# 4. Salary +\n#        - Education vs salary +\n# 5. Job distribution between the ages of 18 and 21 +\n# 6. Most used programing languages + \n# 7. Country with youngest kagglers + ","f088ff70":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","d0978407":"def gender_distribution():\n    data_1[\"Q2\"][1:].replace(['Prefer to self-describe', 'Prefer not to say','Nonbinary'], 'Other', inplace=True)\n    data = data_1[\"Q2\"][1:].value_counts()\n    figure, ax = plt.subplots(1,1, figsize=(10,10))\n    explode = (0.1, 0.1, 0.1) \n    wedges = plt.pie(data, explode=explode, labels=data.index, autopct='%1.1f%%',\n        shadow=True, startangle=90, colors=['lightsteelblue', 'firebrick', 'dimgray'], textprops={'fontsize': 25})\n    plt.show()\ngender_distribution()","2ee851c2":"def ages_distribution():\n    sns.set_style('ticks')\n    figure, ax = plt.subplots(1,1,figsize=(20,8))\n    data = data_1['Q1'][1:].value_counts()\n    colors = ['lightsteelblue' if (x < max(data)) else 'firebrick' for x in data]\n    graph = sns.barplot(y=data, x=data.index, palette=colors, data=data_1, edgecolor=(0, 0, 0), linewidth=1.2)\n    sns.despine(offset=15, trim=True)\n    ax.yaxis.labelpad = 25\n    ax.xaxis.labelpad = 25\n    plt.title('Ages distribuiton', fontdict={'fontsize' : 25})\n    plt.ylabel('Quantity', fontdict={'fontsize':20})\n    plt.xlabel('Age', fontdict={'fontsize':20})\n    plt.show()\n\nages_distribution()","286bdee0":"def ages_vs_jobs():\n    data_1['count'] = 1\n    data = pd.pivot_table(data_1.iloc[1:,:], values='count', index='Q5', columns='Q1', aggfunc=np.sum)\n    figure, ax = plt.subplots(1, 1, figsize=(15,15))\n    heat = sns.heatmap(data, square=True, linewidth=.5, cmap='RdGy', ax=ax, cbar=False, annot=True, fmt=\"d\")\n    heat.tick_params(labelsize=15)\n    ax.yaxis.labelpad = 25\n    ax.xaxis.labelpad = 25\n    plt.title('Ages vs jobs', fontdict={'fontsize': 25}, pad=20)\n    plt.ylabel('Jobs', fontdict={'fontsize':15})\n    plt.xlabel('Ages', fontdict={'fontsize':15})\n    plt.show()\n    \nages_vs_jobs()","e2ac3dd4":"def education():\n    # Two values are very long, I am going to shorten them for looks\n    data_1['Q4'][1:].replace(\"Some college\/university study without earning a bachelor\u2019s degree\", \"Unfinished bachelor's\", inplace=True)\n    data_1['Q4'][1:].replace(\"No formal education past high school\", \"High school\", inplace=True)\n    data = pd.concat([data_1['Q4'][1:].value_counts()[:5], data_1['Q4'][1:].value_counts()[6:]])\n    sns.set_style('ticks')\n    figure, ax = plt.subplots(1,1,figsize=(18,8))\n    colors = ['lightsteelblue' if (x < max(data)) else 'firebrick' for x in data]\n    graph = sns.barplot(y=data.index, x=data, palette=colors, orient='h', edgecolor=(0, 0, 0), linewidth=1.2)\n    graph.tick_params(labelsize=15)\n    ax.yaxis.labelpad = 25\n    ax.xaxis.labelpad = 25\n    sns.despine(offset=15, trim=True)\n    plt.title('Education levels distribution', fontdict={'fontsize': 25}, pad=20)\n    plt.xlabel('Quantity', fontdict={'fontsize':15})\n    plt.show()\neducation()","37acb532":"def ages_vs_education():\n    data_1['count'] = 1\n    fig, ax = plt.subplots(1, 1, figsize=(18,18))\n    data = pd.pivot_table(data_1.iloc[1:,:], values='count', index='Q4', columns='Q1', aggfunc=np.sum)\n    heatmap = sns.heatmap(data, square=True, linewidth=.5, ax=ax, cbar=False, annot=True, fmt=\"d\", cmap='RdGy')\n    heatmap.tick_params(labelsize=15)\n    ax.yaxis.labelpad = 25\n    ax.xaxis.labelpad = 25\n    plt.title('Age vs education', fontdict={'fontsize' : 25}, pad=20)\n    plt.xlabel('Ages', fontdict={'fontsize':15})\n    plt.ylabel('Eduacation', fontdict={'fontsize':15})\n    plt.show()\n    \nages_vs_education()","37a003e0":"def job():\n    data = data_1['Q5'][1:].value_counts()\n    sns.set_style(\"ticks\")\n    figure, ax = plt.subplots(1,1,figsize=(18,12))\n    colors = ['lightsteelblue' if (x < max(data)) else 'firebrick' for x in data]\n    graph = sns.barplot(y=data.index, x=data, palette=colors, orient='h', edgecolor=(0, 0, 0), linewidth=1.2)\n    graph.tick_params(labelsize=15)\n    ax.yaxis.labelpad = 25\n    ax.xaxis.labelpad = 25\n    sns.despine(offset=15, trim=True)\n    plt.title('Jobs distribution', fontdict={'fontsize' : 25}, pad=20)\n    plt.xlabel('Quantity', fontdict={'fontsize':15})\n    plt.show()\n\njob()","231d1591":"def education_vs_job():\n    figure, ax = plt.subplots(1,1,figsize=(20,20))\n    data_1['count'] = 1\n    data = pd.pivot_table(data_1.iloc[1:,:], values='count', index=['Q4'], columns=['Q5'], aggfunc=np.sum)\n    data.fillna(0, inplace=True)\n    graph = sns.heatmap(data, cmap='RdGy', linewidth=.5, cbar=False, annot=True, fmt=\".1f\", square=True)\n    graph.tick_params(labelsize=15)\n    graph.set_xticklabels(rotation=90, labels=data.columns)\n    ax.yaxis.labelpad = 25\n    ax.xaxis.labelpad = 25\n    plt.title('Education vs job', fontdict={'fontsize':25}, pad=20)\n    plt.xlabel('Education', fontdict={'fontsize':15})\n    plt.ylabel('Job', fontdict={'fontsize':15})\n    plt.show()\n\neducation_vs_job()","7948c407":"def salary_distribution():\n    # It is very sad how salary dtype is a str...\n    global ordering\n    ordering = ['$0-999','1,000-1,999','2,000-2,999','3,000-3,999','4,000-4,999','5,000-7,499','7,500-9,999',\n                '10,000-14,999','15,000-19,999','20,000-24,999','25,000-29,999','30,000-39,999','40,000-49,999',\n                '50,000-59,999','60,000-69,999','70,000-79,999','80,000-89,999','90,000-99,999','100,000-124,999',\n                '125,000-149,999','150,000-199,999','200,000-249,999','250,000-299,999','300,000-500,000','> $500,000']\n    helper = data_1['Q24'][1:].value_counts()[ordering]\n    sns.set_style(\"ticks\")\n    fig, ax = plt.subplots(1, 1, figsize=(20,8))\n    colors = ['lightsteelblue' if (x < max(helper)) else 'firebrick' for x in helper]\n    graph = sns.barplot(x=helper.index, y=helper, palette=colors, ax=ax, edgecolor=(0, 0, 0), linewidth=1.2)\n    ax.yaxis.labelpad = 25\n    ax.xaxis.labelpad = 25\n    sns.despine(offset=15, trim=True)\n    graph.set_xticklabels(rotation=90, labels=helper.index.unique())\n    graph.tick_params(labelsize=15)\n    plt.title('Salary distribution', fontdict={\"fontsize\":20})\n    plt.ylabel('Quantity', fontdict={'fontsize':15})\n    plt.show()\n\n    \nsalary_distribution()","d02478dd":"import plotly.express as px\nimport plotly.graph_objs as go\n\ndef age_vs_sal():\n    df_temp = data_1.iloc[1:,:].groupby('Q1')['Q24'].agg(lambda x:x.value_counts().index[1]).reset_index()\n    fig = go.Figure(data=[go.Table(\n        header=dict(values=list(df_temp.columns),\n                        line_color='darkslategray',\n                        fill_color='firebrick',\n                        font=dict(color='white', size=14)),\n        cells=dict(values=[[x for x in df_temp['Q1']], [x for x in df_temp['Q24']]],\n                        line_color='darkslategray',\n                        fill_color='lightsteelblue',\n                        font=dict(color='black', size=14)\n                        ),\n    )])\n\n    fig.update_layout(\n        width=650,\n        height=450,\n        title=\"Age and the most frequent salary\"\n    )\n    fig.show()\nage_vs_sal()","77d23c8c":"def job_dist():\n    data = []\n    data_2 = []\n    \n    for i, age in enumerate(data_1['Q1']):\n        if str(age) == '18-21':\n            if str(data_1['Q5'][i]) != 'nan':\n                data.append(data_1['Q5'][i])\n                \n    for i, age in enumerate(data_1['Q1']):\n        if str(age) == '22-24':\n            if str(data_1['Q5'][i]) != 'nan':\n                data_2.append(data_1['Q5'][i])\n                \n    df = pd.DataFrame({'freq' : data})\n    df_2 = pd.DataFrame({'freq' : data_2})\n    sns.set_style(\"ticks\")\n    fig, ax = plt.subplots(1,1, figsize=(15,10))\n    graph = sns.barplot(x=df_2['freq'].value_counts(), y=df_2['freq'].value_counts().index, color='firebrick', label='Ages: 22-24', edgecolor=(0, 0, 0), linewidth=1.3)\n    sns.barplot(x=df['freq'].value_counts(), y=df['freq'].value_counts().index, color='lightsteelblue', label='Ages: 18-21', edgecolor=(0, 0, 0), linewidth=1.2)\n    ax.legend(ncol=2, loc=\"lower right\", frameon=True)\n    ax.yaxis.labelpad = 25\n    ax.xaxis.labelpad = 25\n    graph.tick_params(labelsize=15)\n    sns.despine(offset=15, trim=True)\n    plt.title('Jobs before graduation', fontdict={'fontsize':25}, pad=20)\n    plt.xlabel('Quantity', fontdict={'fontsize':15})\n    plt.show()\n    \njob_dist()","031be86e":"def find_likelihood(more=None):\n    # more like find % of people below 24 years old who are employed\n    l = []\n    l_2 = []\n    ds = []\n    for i, age in enumerate(data_1['Q1']):\n        if age == '18-21' or more:\n            l.append(age)\n            if data_1['Q5'][i] != 'Student' and data_1['Q5'][i] != 'Other':\n                l_2.append(i)\n            if data_1['Q5'][i] == 'Data Science' or data_1['Q5'][i] == 'Machine Learning Engineer' or data_1['Q5'][i] == 'Data Analyst':\n                ds.append(i)\n    print(len(l), len(l_2))\n    print((len(l_2)\/len(l)))\n    print((len(ds)\/len(l)))\n    \n# find_likelihood('22-24')","74fe3b96":"def find_youngest(get_df=None):\n    data = pd.DataFrame()\n    countries = data_1['Q3'][1:].unique()\n    nums = []\n    for country in countries:\n        s = 0\n        for i, age in enumerate(data_1['Q1'][1:]):\n            if age == '18-21' and data_1['Q3'][i+1] == country:\n                s += 1\n        nums.append(s)\n        \n    d = dict(zip(countries, nums))\n    l = len(d.values())\n    if not get_df:\n        while True:\n            try:\n                index = list(d.values()).index(max(d.values()))\n                yield max(d.values()), list(d.keys())[index]\n                del d[list(d.keys())[index]]\n            except ValueError:\n                break\n    else:\n        df = pd.DataFrame.from_dict(d, orient='index')\n        df.columns = ['Amount']\n        return df\n    \n            \ndef find_your_country(country):       \n    for i, x in enumerate(find_youngest()):\n        if country in x:\n            print(f\"{country}'s place: {i+1}\")\n            break","cd81b284":"def foo(part):\n    ans = []\n    for i in range(len(data_1[f'Q7_Part_{part}'][0])):\n        if data_1[f'Q7_Part_{part}'][0][-i-1] != ' ':\n            ans.append(data_1[f'Q7_Part_{part}'][0][-i-1])\n        else:\n            break\n    return ''.join(reversed(ans))\n\ndef most_commonly_used():\n    data = pd.DataFrame()\n    for i in range(1,12):\n        data[f'{foo(i)}'] = [len([x for x in data_1[f'Q7_Part_{i}'][1:] if x == foo(i)])]\n    return data\n\nmcu = most_commonly_used()\n\ndef plot_langs():\n    sns.set_style(\"ticks\")\n    figure, ax = plt.subplots(1,1, figsize=(20,8))\n    colors = ['lightsteelblue' if (x < max(mcu.iloc[0, :])) else 'firebrick' for x in mcu.iloc[0, :]]\n    graph = sns.barplot(x=mcu.columns, y=mcu.iloc[0, :], palette=colors, edgecolor=(0, 0, 0), linewidth=1.2)\n    for p in graph.patches:\n        graph.annotate(format(p.get_height(), '.2f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\n    graph.tick_params(labelsize=15)\n    ax.yaxis.labelpad = 25\n    ax.xaxis.labelpad = 25\n    sns.despine(offset=15, trim=True)\n    plt.ylabel('Quantity', fontdict={'fontsize':15})\n    plt.title('Most commonly used programming language', fontdict={'fontsize':25})\n    plt.show()\nplot_langs()","ae14de6e":"# Youngest kagglers","e0e96966":"<h2 align='center'> First place goes to India with 2059 Kagglers younger than 22 <\/h2>\n<img width='150px' display='flex' src='https:\/\/upload.wikimedia.org\/wikipedia\/en\/4\/41\/Flag_of_India.svg'>\n<hr>\n<h2 align='center'> Second goes to USA with 121 Kagglers younger than 22 <\/h2>\n<img width='150px' display='flex' src='https:\/\/upload.wikimedia.org\/wikipedia\/commons\/a\/a4\/Flag_of_the_United_States.svg'>\n<hr>\n<h2 align='center'> And third goes to china for 113 Kagglers younger than 22 <\/h2>\n<img width='150px' display='flex' src='https:\/\/upload.wikimedia.org\/wikipedia\/commons\/f\/fa\/Flag_of_the_People%27s_Republic_of_China.svg'>","c53a0c3d":"<h1> Introduction <\/h1>\n<h2> Undergraduate employment <\/h2>\n<div style='width:1000px; height:700px;'>\n<img src='https:\/\/images.pexels.com\/photos\/167682\/pexels-photo-167682.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'>\n<\/div>\n\n**Plans for this notebook:**\n1. Main goal of this notebook is to explore how many people before finishing school are able to find a tech jon\n    * We'll explore how different levels of education affect employment\n    * What job is most common for each age group\n    * Employed vs unemployed for each age group\n2. Second goal is finding the countries with youngest kagglers\n3. Besides that we'll take a peak into salaries, genders, education, and used programming languages","c18cf8f8":"**Notes**\n* Python > R.\n* Second most commonly used language is SQL. Which logicaly makes a valuable tool in Data Scientist's toolkit.\n* C, C++, Java and Javascript are also quite popular. I think it's becouse that most people have a degree in Computer Science, becouse this languages aren't that usefull for Data Science.","c66f7e54":"# Introduction \n","6fd4fe07":"# Job distribution between the ages of 18 and 24\n\n*Looking for all the undergraduates ","247b5e82":"# To be continued...\n\n**If 'fun' in this_notebook: upvote()**\n\n**Elif 'tips' == True: comment()**\n\n**Else: pass**\n\n**If you have any tips for begginer on how to improve visualizations \/ data analysis, write a comment, I'll definitely appreciate that ;)**\n**If've found this notebook fun well-written and informative, upvote :)**","00ae6998":"**Notes**\n\n* As expected people between the ages of 18-29 study a lot, especially the youngest group ( 18-21 ).\n* Most jobs seem to be occupied with people aged at around 22-29. ( Later I'll return to this ) \n* Last but not least, thing that mainly interests me; some of my fellow youngsters seem to have my dream job!!\n\n**Refering back to my second point, it seems that data world is populated with very young people and industries which are filled with young people have a tendency to expand and grow the most, this assures me that data revolution isn't going anywhere anytime soon. I belive that in 5 years people who are now students or junior data scientist are going to push this industry very far with creative and fresh approaches.**","d52f2d72":"# Ages exploration","8b986975":"**Notes**\n\n*I want to note that 50% of salary data was missing, so this may not be an accurate representation of reality. \n\n* Most of Kagglers make between 0 and 999 dolars. Many make below 50K. That group most likely is stundents who haven't found job yet, or only have internships \/ do freelancing.\n* 100K is a boundry very few were able to breach, but still a significant ammount ( especialy when you compare to other job fields )","c68c7b32":"**Notes**\n* 42% of people between the ages of 18 and 24 have found a job in tech and 12% have found a job in Data Science or related field ( Machine Learning Engineer, Data Analyst ).\n* 25% of people between the ages of 18 and 21 also have found a job in tech and 6% have found a job in Data Science or related field.( this one makes me really glad!! )","6c16892b":"**Notes**\n* Majority of Kagglers are still students\n* Top 3 jobs ( excluding students ) are Data Scientists, Software Engineers and Other. By other i understand that these are people who are in collage and don't have a tech job yet, are freelancing, have their own company...\n* High place of Software Engineers implies that many people were \/ are studying Computer Science, rather that Econmics, Finances etc.","3a3ba8c3":"**Notes**\n* Expectation from previous chart is fulfiled here - 25-29 is the most numerous group with master's degree.\n* Group 22-24 has almost the same ammount of people with bachelor's and master's. That information further pushes the idea of growing intrest in data science among younger people, and shows that people really care about education in this field.\n","f26be9ce":"**NOTE**\nThis table shows second most frequent salary ( first was 0-999$ which I don't think is really intresting )","825d7659":"**Notes**\n* This chart explains why master's is so popular. It seems to be a requirement if you want a Data Science job. Generally looking, people with master's just have more ( 587 unemplyed vs 706 bachelors ) and nicer jobs.\n* More bachelors have job as a Software Engineer than masters, it makes me feel like Software Engineer is just a bridge job between collage and Data Science job.\n* 32% of people without higher education than high school have a job in tech ( which brings me hope for some kind of job in near future :D )","1045b601":"**Notes**\n* Most kagglers seem to be around 18-29, biggest representation is in 25-29 group. This indicates growing intrest in data science among young people.\n","6e0bc973":"**Notes**\n* Majority of Kagglers are men.","3c51291b":"# Gender","9e65078e":"# Salary","7e3fa4c9":"**Notes**\n* Master's seems to be a standard.\n* This correlates to fact that most of Kagglers are 25-29. Becouse 25-29 are majority, master's degree is also a majority ( people with master's are usually older than bachelors )","5bd0d55d":"# Jobs","4ef56c3e":"# Education","eb217a6d":"# Most commonly used programming language"}}