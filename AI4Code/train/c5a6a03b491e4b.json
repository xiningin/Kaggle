{"cell_type":{"26ccea1f":"code","7a97360c":"code","69b917dc":"code","59d08408":"code","6449635f":"code","8f92d4aa":"code","ac7dc9f7":"code","3f24c432":"code","dd533f56":"code","8f6ead14":"code","82df3634":"code","b607cebc":"code","7ead72aa":"code","a928a760":"code","52e2bd2f":"code","8ecf8902":"code","39b221c5":"code","f9cfe323":"code","9a894af0":"code","e03656f1":"markdown","b2c1d146":"markdown","070cc183":"markdown","d2c828d4":"markdown","2f9ae95b":"markdown","a01c2d0c":"markdown","c592a0d4":"markdown","b9a509ec":"markdown","53f0784a":"markdown","290e474c":"markdown","9ee64987":"markdown","9c43df5c":"markdown","f7fd236e":"markdown","a2243f8b":"markdown","a87592f2":"markdown","c0604d15":"markdown","cd5a02ff":"markdown","798309cb":"markdown","d4b7b20a":"markdown","311a831e":"markdown","ea73228b":"markdown","3afeebc3":"markdown","41620124":"markdown","e9d4716d":"markdown","5e1d0b4d":"markdown","b1f8507b":"markdown","4f859b9e":"markdown","3cb1a984":"markdown","a7a7a3c7":"markdown","bc46f3b3":"markdown","cd6d0fb7":"markdown","90f7b43c":"markdown","fcbcba87":"markdown","2991d04a":"markdown","76a673ee":"markdown","921ed25d":"markdown","427d7309":"markdown","2924b177":"markdown","93b8bc44":"markdown","0fb09bd7":"markdown","63ab6b9c":"markdown","64aba4b5":"markdown","5d8d7c53":"markdown","405605dd":"markdown"},"source":{"26ccea1f":"import pandas as pd\nimport pylab as pl\nimport numpy as np\nimport scipy.optimize as opt\nfrom sklearn import preprocessing\n%matplotlib inline \nimport matplotlib.pyplot as plt","7a97360c":"#Click here and press Shift+Enter\n!wget -O ChurnData.csv https:\/\/s3-api.us-geo.objectstorage.softlayer.net\/cf-courses-data\/CognitiveClass\/ML0101ENv3\/labs\/ChurnData.csv","69b917dc":"churn_df = pd.read_csv(\"ChurnData.csv\")\nchurn_df.head()","59d08408":"churn_df = churn_df[['tenure', 'age', 'address', 'income', 'ed', 'employ', 'equip',   'callcard', 'wireless','churn']]\nchurn_df['churn'] = churn_df['churn'].astype('int')\nchurn_df.head()","6449635f":"# write your code here\nchurn_df.shape\n\n","8f92d4aa":"X = np.asarray(churn_df[['tenure', 'age', 'address', 'income', 'ed', 'employ', 'equip']])\nX[0:5]","ac7dc9f7":"y = np.asarray(churn_df['churn'])\ny [0:5]","3f24c432":"from sklearn import preprocessing\nX = preprocessing.StandardScaler().fit(X).transform(X)\nX[0:5]","dd533f56":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.2, random_state=4)\nprint ('Train set:', X_train.shape,  y_train.shape)\nprint ('Test set:', X_test.shape,  y_test.shape)","8f6ead14":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix\nLR = LogisticRegression(C=0.01, solver='liblinear').fit(X_train,y_train)\nLR","82df3634":"yhat = LR.predict(X_test)\nyhat","b607cebc":"Here we are predicting using the test set.","7ead72aa":"yhat_prob = LR.predict_proba(X_test)\nyhat_prob","a928a760":"from sklearn.metrics import jaccard_similarity_score\njaccard_similarity_score(y_test, yhat)","52e2bd2f":"from sklearn.metrics import classification_report, confusion_matrix\nimport itertools\ndef plot_confusion_matrix(cm, classes,\n                          normalize=False,\n                          title='Confusion matrix',\n                          cmap=plt.cm.Blues):\n    \"\"\"\n    This function prints and plots the confusion matrix.\n    Normalization can be applied by setting `normalize=True`.\n    \"\"\"\n    if normalize:\n        cm = cm.astype('float') \/ cm.sum(axis=1)[:, np.newaxis]\n        print(\"Normalized confusion matrix\")\n    else:\n        print('Confusion matrix, without normalization')\n\n    print(cm)\n\n    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n    plt.title(title)\n    plt.colorbar()\n    tick_marks = np.arange(len(classes))\n    plt.xticks(tick_marks, classes, rotation=45)\n    plt.yticks(tick_marks, classes)\n\n    fmt = '.2f' if normalize else 'd'\n    thresh = cm.max() \/ 2.\n    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n        plt.text(j, i, format(cm[i, j], fmt),\n                 horizontalalignment=\"center\",\n                 color=\"white\" if cm[i, j] > thresh else \"black\")\n\n    plt.tight_layout()\n    plt.ylabel('True label')\n    plt.xlabel('Predicted label')\nprint(confusion_matrix(y_test, yhat, labels=[1,0]))","8ecf8902":"# Compute confusion matrix\ncnf_matrix = confusion_matrix(y_test, yhat, labels=[1,0])\nnp.set_printoptions(precision=2)\n\n\n# Plot non-normalized confusion matrix\nplt.figure()\nplot_confusion_matrix(cnf_matrix, classes=['churn=1','churn=0'],normalize= False,  title='Confusion matrix')","39b221c5":"print (classification_report(y_test, yhat))\n","f9cfe323":"from sklearn.metrics import log_loss\nlog_loss(y_test, yhat_prob)","9a894af0":"# write your code here\n\n","e03656f1":"Now we can predict using our test set:","b2c1d146":"A confusion matrix is a technique for summarizing the performance of a classification algorithm.\n\nClassification accuracy alone can be misleading if you have an unequal number of observations in each class or if you have more than two classes in your dataset.\n\nCalculating a confusion matrix can give you a better idea of what your classification model is getting right and what types of errors it is making.","070cc183":"Lets select some features for the modeling. Also we change the target data type to be integer, as it is a requirement  by the skitlearn algorithm:","d2c828d4":"## Train\/Test dataset","2f9ae95b":"Lets build our model using __LogisticRegression__ from Scikit-learn package. This function implements logistic regression and can use different numerical optimizers to find parameters, including \u2018newton-cg\u2019, \u2018lbfgs\u2019, \u2018liblinear\u2019, \u2018sag\u2019, \u2018saga\u2019 solvers. You can find extensive information about the pros and cons of these optimizers if you search it in internet.\n\nThe version of Logistic Regression in Scikit-learn, support regularization. Regularization is a technique used to solve the overfitting problem in machine learning models.\n__C__ parameter indicates __inverse of regularization strength__ which must be a positive float. Smaller values specify stronger regularization. \nNow lets fit our model with train set:","a01c2d0c":"Here in the above code we are making the objects like tenure,age,address,icome,ed,employ,equip,callcard,wireless,churn. These are the names of the ojects and then after selecting churn we are taking its values as int. In the last using churn_df.head() funtcion we will get the first n rows. It will help to display the rows as mentioned above.","c592a0d4":"<h2 id=\"about_dataset\">About the dataset<\/h2>\nWe will use a telecommunications dataset for predicting customer churn. This is a historical customer dataset where each row represents one customer. The data is relatively easy to understand, and you may uncover insights you can use immediately. Typically it is less expensive to keep customers than acquire new ones, so the focus of this analysis is to predict the customers who will stay with the company. \n\n\nThis data set provides information to help you predict what behavior will help you to retain customers. You can analyze all relevant customer data and develop focused customer retention programs.\n\n\n\nThe dataset includes information about:\n\n- Customers who left within the last month \u2013 the column is called Churn\n- Services that each customer has signed up for \u2013 phone, multiple lines, internet, online security, online backup, device protection, tech support, and streaming TV and movies\n- Customer account information \u2013 how long they had been a customer, contract, payment method, paperless billing, monthly charges, and total charges\n- Demographic info about customers \u2013 gender, age range, and if they have partners and dependents\n","b9a509ec":"Here we are printing y_test and yhat value","53f0784a":"The sklearn.linear_model module implements a variety of linear models. regr = linear_model.LinearRegression() regr.fit(X, y) Now we have a regression object that are ready to predict values. np.asanyarray()function is used when we want to convert input to an array but it pass ndarray subclasses through.Input can be scalars, lists, lists of tuples, tuples, tuples of tuples, tuples of lists and ndarrays.","290e474c":"### Load Data From CSV File  ","9ee64987":"<a id=\"ref1\"><\/a>\n## What is the difference between Linear and Logistic Regression?\n\nWhile Linear Regression is suited for estimating continuous values (e.g. estimating house price), it is not the best tool for predicting the class of an observed data point. In order to estimate the class of a data point, we need some sort of guidance on what would be the <b>most probable class<\/b> for that data point. For this, we use <b>Logistic Regression<\/b>.\n\n<div class=\"alert alert-success alertsuccess\" style=\"margin-top: 20px\">\n<font size = 3><strong>Recall linear regression:<\/strong><\/font>\n<br>\n<br>\n    As you know, <b>Linear regression<\/b> finds a function that relates a continuous dependent variable, <b>y<\/b>, to some predictors (independent variables $x_1$, $x_2$, etc.). For example, Simple linear regression assumes a function of the form:\n<br><br>\n$$\ny = \\theta_0 + \\theta_1  x_1 + \\theta_2  x_2 + \\cdots\n$$\n<br>\nand finds the values of parameters $\\theta_0, \\theta_1, \\theta_2$, etc, where the term $\\theta_0$ is the \"intercept\". It can be generally shown as:\n<br><br>\n$$\n\u210e_\\theta(\ud835\udc65) = \\theta^TX\n$$\n<p><\/p>\n\n<\/div>\n\nLogistic Regression is a variation of Linear Regression, useful when the observed dependent variable, <b>y<\/b>, is categorical. It produces a formula that predicts the probability of the class label as a function of the independent variables.\n\nLogistic regression fits a special s-shaped curve by taking the linear regression and transforming the numeric estimate into a probability with the following function, which is called sigmoid function \ud835\udf0e:\n\n$$\n\u210e_\\theta(\ud835\udc65) = \\sigma({\\theta^TX}) =  \\frac {e^{(\\theta_0 + \\theta_1  x_1 + \\theta_2  x_2 +...)}}{1 + e^{(\\theta_0 + \\theta_1  x_1 + \\theta_2  x_2 +\\cdots)}}\n$$\nOr:\n$$\nProbabilityOfaClass_1 =  P(Y=1|X) = \\sigma({\\theta^TX}) = \\frac{e^{\\theta^TX}}{1+e^{\\theta^TX}} \n$$\n\nIn this equation, ${\\theta^TX}$ is the regression result (the sum of the variables weighted by the coefficients), `exp` is the exponential function and $\\sigma(\\theta^TX)$ is the sigmoid or [logistic function](http:\/\/en.wikipedia.org\/wiki\/Logistic_function), also called logistic curve. It is a common \"S\" shape (sigmoid curve).\n\nSo, briefly, Logistic Regression passes the input through the logistic\/sigmoid but then treats the result as a probability:\n\n<img\nsrc=\"https:\/\/ibm.box.com\/shared\/static\/kgv9alcghmjcv97op4d6onkyxevk23b1.png\" width=\"400\" align=\"center\">\n\n\nThe objective of __Logistic Regression__ algorithm, is to find the best parameters \u03b8, for $\u210e_\\theta(\ud835\udc65)$ = $\\sigma({\\theta^TX})$, in such a way that the model best predicts the class of each case.","9c43df5c":"### log loss\nNow, lets try __log loss__ for evaluation. In logistic regression, the output can be the probability of customer churn is yes (or equals to 1). This probability is a value between 0 and 1.\nLog loss(\u00a0Logarithmic\u00a0loss) measures the performance of a\u00a0classifier\u00a0where the predicted output is a probability value between 0 and 1. \n","f7fd236e":"Okay, we split our dataset into train and test set:","a2243f8b":"__Did you know?__ When it comes to Machine Learning, you will likely be working with large datasets. As a business, where can you host your data? IBM is offering a unique opportunity for businesses, with 10 Tb of IBM Cloud Object Storage: [Sign up now for free](http:\/\/cocl.us\/ML0101EN-IBM-Offer-CC)","a87592f2":"Dataframe.shape Return a tuple representing the dimensionality of the DataFrame.","c0604d15":"### jaccard index\nLets try jaccard index for accuracy evaluation. we can define jaccard as the size of the intersection divided by the size of the union of two label sets. If the entire set of predicted labels for a sample strictly match with the true set of labels, then the subset accuracy is 1.0; otherwise it is 0.0.\n\n","cd5a02ff":"Lets define X, and y for our dataset:","798309cb":"__predict_proba__  returns estimates for all classes, ordered by the label of classes. So, the first column is the probability of class 1, P(Y=1|X), and second column is probability of class 0, P(Y=0|X):","d4b7b20a":"Lets first import required libraries:","311a831e":"<h2 id=\"modeling\">Modeling (Logistic Regression with Scikit-learn)<\/h2>","ea73228b":"Look at first row. The first row is for customers whose actual churn value in test set is 1.\nAs you can calculate, out of 40 customers, the churn value of 15 of them is 1. \nAnd out of these 15, the classifier correctly predicted 6 of them as 1, and 9 of them as 0. \n\nIt means, for 6 customers, the actual churn value were 1 in test set, and classifier also correctly predicted those as 1. However, while the actual label of 9 customers were 1, the classifier predicted those as 0, which is not very good. We can consider it as error of the model for first row.\n\nWhat about the customers with churn value 0? Lets look at the second row.\nIt looks like  there were 25 customers whom their churn value were 0. \n\n\nThe classifier correctly predicted 24 of them as 0, and one of them wrongly as 1. So, it has done a good job in predicting the customers with churn value 0. A good thing about confusion matrix is that shows the model\u2019s ability to correctly predict or separate the classes.  In specific case of binary classifier, such as this example,  we can interpret these numbers as the count of true positives, false positives, true negatives, and false negatives. ","3afeebc3":"###  Load the Telco Churn data \nTelco Churn is a hypothetical data file that concerns a telecommunications company's efforts to reduce turnover in its customer base. Each case corresponds to a separate customer and it records various demographic and service usage information. Before you can work with the data, you must use the URL to get the ChurnData.csv.\n\nTo download the data, we will use `!wget` to download it from IBM Object Storage.","41620124":"Based on the count of each section, we can calculate precision and recall of each label:\n\n\n- __Precision__ is a measure of the accuracy provided that a class label has been predicted. It is defined by: precision = TP\u00a0\/\u00a0(TP\u00a0+\u00a0FP)\n\n- __Recall__ is true positive rate. It is defined as: Recall = \u00a0TP\u00a0\/\u00a0(TP\u00a0+\u00a0FN)\n\n    \nSo, we can calculate precision and recall of each class.\n\n__F1 score:__\nNow we are in the position to calculate the F1 scores for each label based on the precision and recall of that label. \n\nThe F1 score is the harmonic average of the\u00a0precision and recall, where an F1\u00a0score reaches its best value at 1 (perfect precision and recall) and worst at 0. It is a good way to show that a classifer has a good value for both recall and precision.\n\n\nAnd finally, we can tell the average accuracy for this classifier is the average of the F1-score for both labels, which is 0.72 in our case.","e9d4716d":"In this code we are uploading the csv file of the current data set and from the output screen we can use the csv link to download the csv file.","5e1d0b4d":"### Customer churn with Logistic Regression\nA telecommunications company is concerned about the number of customers leaving their land-line business for cable competitors. They need to understand who is leaving. Imagine that you are an analyst at this company and you have to find out who is leaving and why.","b1f8507b":"This is the loss function used in (multinomial) logistic regression and extensions of it such as neural networks, defined as the negative log-likelihood of a logistic model that returns y_pred probabilities for its training data y_true. The log loss is only defined for two or more labels.","4f859b9e":"<h1 align=\"center\"><font size=\"5\"> Machine Learning : IT Sem V  <\/font><\/h1>\n<h1 align=\"center\"><font size=\"5\"> Logistic Regression with Python<\/font><\/h1>","3cb1a984":"Also, we normalize the dataset:","a7a7a3c7":"In the above code we are spliting the dataset into train and test set then  we are importing train_test_split from sklearn.model_selection. After that we are printing the final values.","bc46f3b3":"<h2 id=\"evaluation\">Evaluation<\/h2>","cd6d0fb7":"Fits transformer to X with optional parameters preprocessing.StandardScaler() and returns a transformed version of X. Fit to data, then transform it. ","90f7b43c":"Name: Aayushi Agrawal\nRoll no: A202\nSAP ID: 70011118003","fcbcba87":"np.asarray means input data in any form that can be converted to an array. So here we are taking the values 'tenure', 'age', 'address', 'income', 'ed', 'employ', 'equip' in X","2991d04a":"## Practice\nHow many rows and columns are in this dataset in total? What are the name of columns?","76a673ee":"<h1>Table of contents<\/h1>\n\n<div class=\"alert alert-block alert-info\" style=\"margin-top: 20px\">\n    <ol>\n        <li><a href=\"#about_dataset\">About the dataset<\/a><\/li>\n        <li><a href=\"#preprocessing\">Data pre-processing and selection<\/a><\/li>\n        <li><a href=\"#modeling\">Modeling (Logistic Regression with Scikit-learn)<\/a><\/li>\n        <li><a href=\"#evaluation\">Evaluation<\/a><\/li>\n        <li><a href=\"#practice\">Practice<\/a><\/li>\n    <\/ol>\n<\/div>\n<br>\n<hr>","921ed25d":"<h2 id=\"practice\">Practice<\/h2>\nTry to build Logistic Regression model again for the same dataset, but this time, use different __solver__ and __regularization__ values? What is new __logLoss__ value?","427d7309":"In the above code we are computing confusion matrix and then we are plotting non-normalized confusion matrix according to the true and false values.","2924b177":"Here we are importing all the needed packages.Importing a library means loading it into the memory and then it\u2019s there for you to work with. Matplotlib is a plotting library for the Python programming language and its numerical mathematics extension NumPy.If you write import pandas then the module is imported and made available under the variable named pandas. Where as \"pd\" is just a variable.","93b8bc44":"Double-click __here__ for the solution.\n\n<!-- Your answer is below:\n    \nLR2 = LogisticRegression(C=0.01, solver='sag').fit(X_train,y_train)\nyhat_prob2 = LR2.predict_proba(X_test)\nprint (\"LogLoss: : %.2f\" % log_loss(y_test, yhat_prob2))\n\n-->","0fb09bd7":"Above code is for importing the CSV file into Python using read_csv() from pandas. But as there is no data to show in this work so the error is coming up with empty data error.","63ab6b9c":"np.asarray means input data in any form that can be converted to an array. So here we are taking the values 'churn' in Y","64aba4b5":"In this notebook, you will learn Logistic Regression, and then, you'll create a model for a telecommunication company, to predict when its customers will leave for a competitor, so that they can take some action to retain the customers.","5d8d7c53":"### confusion matrix\nAnother way of looking at accuracy of classifier is to look at __confusion matrix__.","405605dd":"<h2 id=\"preprocessing\">Data pre-processing and selection<\/h2>"}}