{"cell_type":{"d3c4feb2":"code","ec7262d3":"code","3e847945":"code","2f13161a":"code","1dbfc3d8":"code","2b96392b":"code","704ffbba":"code","cfc845c7":"code","a5d19783":"code","e0513483":"code","25843f3a":"code","1beb12ff":"code","121ac05c":"code","d0db27ae":"code","02587862":"code","7f1db43b":"code","055dd9c5":"code","8e433d68":"code","64eed647":"code","2200fffb":"code","ef16d078":"code","a6619c1b":"code","24c1c132":"code","6545bc8a":"code","ec5f5794":"markdown","d59abfb9":"markdown","989eef23":"markdown","2f6da6f4":"markdown","791d39bc":"markdown","957cd7aa":"markdown","c2519ce8":"markdown","4b3417c4":"markdown"},"source":{"d3c4feb2":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LinearRegression, LogisticRegression","ec7262d3":"data = pd.read_csv('..\/input\/dissolved-oxygen-prediction-in-river-water\/train.csv')","3e847945":"data","2f13161a":"data.info()","1dbfc3d8":"data.drop('Id', axis=1, inplace=True)","2b96392b":"data.isna().sum()","704ffbba":"null_columns = list(data.columns[data.isna().sum() > 100])\n\ndata.drop(null_columns, axis=1, inplace=True)","cfc845c7":"data","a5d19783":"data.isna().sum()","e0513483":"print(\"Columns with missing values:\", (data.isna().sum(axis=0) != 0).sum())\nprint(\"Rows with missing values:\", (data.isna().sum(axis=1) != 0).sum())","25843f3a":"data.dropna(axis=0, inplace=True)","1beb12ff":"data.isna().sum().sum()","121ac05c":"data","d0db27ae":"y = data['target']\nX = data.drop('target', axis=1)","02587862":"scaler = StandardScaler()\n\nX = scaler.fit_transform(X)","7f1db43b":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7)","055dd9c5":"model = LinearRegression()\nmodel.fit(X_train, y_train)\nmodel_R2 = model.score(X_test, y_test)","8e433d68":"print(\"Model R^2 Score:\", model_R2)","64eed647":"y","2200fffb":"y.mean()","ef16d078":"y_new = pd.qcut(y, q=2, labels=[0, 1])","a6619c1b":"X_train, X_test, y_train, y_test = train_test_split(X, y_new, train_size=0.7)","24c1c132":"model = LogisticRegression()\nmodel.fit(X_train, y_train)\nmodel_acc = model.score(X_test, y_test)","6545bc8a":"print(\"Model Accuracy:\", model_acc)","ec5f5794":"# Preprocessing","d59abfb9":"## Missing Values","989eef23":"# Training (Classification)","2f6da6f4":"# Training (Regression)","791d39bc":"## Splitting and Scaling","957cd7aa":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/arfFLTtah_A","c2519ce8":"# New Problem: Predicting High or Low Dissolved Oxygen","4b3417c4":"# Getting Started"}}