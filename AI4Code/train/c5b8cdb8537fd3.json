{"cell_type":{"427c29b2":"code","f500c16d":"code","b3159eb2":"code","fcf6121c":"code","2c9f249b":"code","d9f3d862":"code","87123c87":"code","6530914b":"code","a2f90d6a":"code","15be7b89":"code","1da1030b":"code","0c7a77f8":"code","c53ac1ed":"code","8f24ac87":"code","cd040f63":"code","5231ae98":"code","bc336d41":"code","44718eaa":"code","345a7b61":"code","ad59a2b6":"code","e286d4c1":"code","9aa214e7":"code","2f067360":"code","ba052cea":"code","12a93dbc":"code","4ffa7131":"code","1c7d62c2":"code","3df7e280":"code","7fd32780":"code","2e3192df":"code","e1c58dcf":"code","72da5b6a":"code","e65ef9b7":"code","ca05ed57":"code","99b6bd45":"code","5e6f2d51":"code","2a7ed92a":"code","f10c02cb":"code","44aca657":"code","787d1dc2":"code","5bdb5049":"code","4950c277":"code","b8fbd8b2":"code","206f9a3c":"code","24e15336":"code","9de19d49":"code","51f8bf85":"code","508a4045":"code","4c72a6b3":"code","4925fc7a":"code","9e19ba70":"code","8c24c1ff":"code","cc9956b3":"code","6085c3c8":"code","a12b5af5":"code","d34f3d46":"code","09220a4d":"code","ec6b4c26":"code","eb3a3267":"markdown","0cbc52b4":"markdown","1f2a0175":"markdown","012c282b":"markdown","47582889":"markdown","f442db38":"markdown","1b3246d5":"markdown","804c882d":"markdown","0cc03105":"markdown","baf235bf":"markdown","12ee2b13":"markdown","89537cb4":"markdown","02ac4acf":"markdown","2749ab54":"markdown","2f80bd89":"markdown","43c8217c":"markdown","f70c7459":"markdown"},"source":{"427c29b2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\n\nimport cufflinks as cf\ncf.go_offline()","f500c16d":"train = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntest = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")","b3159eb2":"train.head()","fcf6121c":"train.shape","2c9f249b":"test.head()","d9f3d862":"test.shape","87123c87":"plt.figure(figsize = (12, 8))\nsns.heatmap(train.isnull(), yticklabels = False, cbar = False)","6530914b":"train_nan_vals = dict(train.isnull().sum())\nfor i, j in train_nan_vals.items():\n    print(i   ,'-->',  j)","a2f90d6a":"train['LotFrontage'] = train['LotFrontage'].fillna(train['LotFrontage'].mean())","15be7b89":"train.drop(['Alley'], axis = 1, inplace = True)","1da1030b":"train['MasVnrType'] = train['MasVnrType'].fillna(train['MasVnrType'].mode()[0])\ntrain['MasVnrArea'] = train['MasVnrArea'].fillna(train['MasVnrArea'].mode()[0])\n\ntrain['BsmtQual'] = train['BsmtQual'].fillna(train['BsmtQual'].mode()[0])\ntrain['BsmtCond'] = train['BsmtCond'].fillna(train['BsmtCond'].mode()[0])\n\ntrain['BsmtExposure'] = train['BsmtExposure'].fillna(train['BsmtExposure'].mode()[0])\ntrain['BsmtFinType1'] = train['BsmtFinType1'].fillna(train['BsmtFinType1'].mode()[0])\ntrain['BsmtFinType2'] = train['BsmtFinType2'].fillna(train['BsmtFinType2'].mode()[0])\n\ntrain['Electrical'] = train['Electrical'].fillna(train['Electrical'].mode()[0])\n\ntrain['FireplaceQu'] = train['FireplaceQu'].fillna(train['FireplaceQu'].mode()[0])\n\ntrain['GarageType'] = train['GarageType'].fillna(train['GarageType'].mode()[0])\ntrain['GarageYrBlt'] = train['GarageYrBlt'].fillna(train['GarageYrBlt'].mean())\ntrain['GarageFinish'] = train['GarageFinish'].fillna(train['GarageFinish'].mode()[0])\ntrain['GarageQual'] = train['GarageQual'].fillna(train['GarageQual'].mode()[0])\ntrain['GarageCond'] = train['GarageCond'].fillna(train['GarageCond'].mode()[0])\n","0c7a77f8":"train.drop(['Id', 'PoolQC','Fence','MiscFeature'], axis = 1, inplace = True)","c53ac1ed":"train.isnull().sum().any()","8f24ac87":"train.shape","cd040f63":"train.isnull().sum().any()","5231ae98":"test.info()","bc336d41":"plt.figure(figsize = (12,6))\nsns.heatmap(test.isnull(), cmap = 'viridis')","44718eaa":"test_nan_vals = dict(test.isnull().sum())\nfor i, j in test_nan_vals.items():\n    print(i   ,'--->',  j)","345a7b61":"test['BsmtFinType2'].value_counts()","ad59a2b6":"test['MSZoning'] = test['MSZoning'].fillna(test['MSZoning'].mode()[0])\n\ntest['LotFrontage'] = test['LotFrontage'].fillna(test['LotFrontage'].mean())\n\n\ntest['Utilities'] = test['Utilities'].fillna(test['Utilities'].mode()[0])\n\ntest['Exterior1st'] = test['Exterior1st'].fillna(test['Exterior1st'].mode()[0])\ntest['Exterior2nd'] = test['Exterior2nd'].fillna(test['Exterior2nd'].mode()[0])\n\ntest['MasVnrType'] = test['MasVnrType'].fillna(test['MasVnrType'].mode()[0])\ntest['MasVnrArea'] = test['MasVnrArea'].fillna(test['MasVnrArea'].mean())\n\ntest['BsmtQual'] = test['BsmtQual'].fillna(test['BsmtQual'].mode()[0])\ntest['MasVnrType'] = test['MasVnrType'].fillna(test['MasVnrType'].mode()[0])\ntest['BsmtCond'] = test['BsmtCond'].fillna(test['BsmtCond'].mode()[0])\ntest['BsmtExposure'] = test['BsmtExposure'].fillna(test['BsmtExposure'].mode()[0])\ntest['BsmtFinType1'] = test['BsmtFinType1'].fillna(test['BsmtFinType1'].mode()[0])\ntest['BsmtFinSF1'] = test['BsmtFinSF1'].fillna(test['BsmtFinSF1'].mean())\ntest['BsmtFinType2'] = test['BsmtFinType2'].fillna(test['BsmtFinType2'].mode()[0])\ntest['BsmtFinSF1'] = test['BsmtFinSF1'].fillna(test['BsmtFinSF1'].mean())\ntest['BsmtFinSF2'] = test['BsmtFinSF2'].fillna(test['BsmtFinSF2'].mean())\ntest['BsmtUnfSF'] = test['BsmtUnfSF'].fillna(test['BsmtUnfSF'].mean())\ntest['TotalBsmtSF'] = test['TotalBsmtSF'].fillna(test['TotalBsmtSF'].mean())\n\ntest['BsmtFullBath'] = test['BsmtFullBath'].fillna(test['BsmtFullBath'].mean())\ntest['BsmtHalfBath'] = test['BsmtHalfBath'].fillna(test['BsmtHalfBath'].mean())\n\ntest['KitchenQual'] = test['KitchenQual'].fillna(test['KitchenQual'].mode()[0])\n\ntest['Functional'] = test['Functional'].fillna(test['Functional'].mode()[0])\n\ntest['FireplaceQu'] = test['FireplaceQu'].fillna(test['FireplaceQu'].mode()[0])\n\ntest['GarageType'] = test['GarageType'].fillna(test['GarageType'].mode()[0])\ntest['GarageYrBlt'] = test['GarageYrBlt'].fillna(test['GarageYrBlt'].mean())\ntest['GarageFinish'] = test['GarageFinish'].fillna(test['GarageFinish'].mode()[0])\ntest['GarageCars'] = test['GarageCars'].fillna(test['GarageCars'].mean())\ntest['GarageArea'] = test['GarageArea'].fillna(test['GarageArea'].mean())\ntest['GarageQual'] = test['GarageQual'].fillna(test['GarageQual'].mode()[0])\ntest['GarageCond'] = test['GarageCond'].fillna(test['GarageCond'].mode()[0])\n\ntest['SaleType'] = test['SaleType'].fillna(test['SaleType'].mode()[0])\n\n","e286d4c1":"test.drop(['Id', 'Alley','PoolQC', 'Fence', 'MiscFeature'], axis = 1, inplace = True)","9aa214e7":"test.shape","2f067360":"test.isnull().sum().any()","ba052cea":"corr = train.corr()\nplt.figure(figsize=(12,10))\nsns.heatmap(corr)","12a93dbc":"n = 10\ncor_cols = corr.nlargest(n, 'SalePrice')['SalePrice'].index\ncor_cols_1 = np.corrcoef(train[cor_cols].values.T)","4ffa7131":"sns.set(font_scale=1.50)\nplt.figure(figsize = (16,10))\nsns.heatmap(cor_cols_1, cbar=True, annot=True, yticklabels=cor_cols.values, xticklabels=cor_cols.values)","1c7d62c2":"cor_cols = pd.DataFrame(cor_cols)\ncor_cols.columns = ['Top correlated features']\ncor_cols","3df7e280":"overall_qua = train['OverallQual'].value_counts().reset_index().rename(columns = {'index': 'Rating', 'OverallQual': 'No. of customers'})\noverall_qua","7fd32780":"fig = px.pie(names = overall_qua['Rating'].values, values = overall_qua['No. of customers'].values, title='overall quality')\nfig.show()","2e3192df":"sns.set(style=\"whitegrid\")\nplt.figure(figsize=(15,10))\nfig = sns.barplot(x = 'OverallQual', y='SalePrice', data = train)","e1c58dcf":"sns.set(style=\"whitegrid\")\nplt.figure(figsize=(15,10))\nfig = sns.scatterplot(x = 'GrLivArea', y='SalePrice', data = train)\n","72da5b6a":"train['GarageCars'].describe()","e65ef9b7":"fig = px.box(train, x='GarageCars', y = 'SalePrice')\nfig.show()","ca05ed57":"train['GarageArea'].describe()","99b6bd45":"fig = px.scatter(train, x = 'GarageArea', y = 'SalePrice')\nfig.show()","5e6f2d51":"plt.figure(figsize = (16,7))\nsns.scatterplot(x = 'TotalBsmtSF', y = 'SalePrice', data = train)","2a7ed92a":"train['1stFlrSF'].describe()","f10c02cb":"fig = px.scatter(train, x = '1stFlrSF', y = 'SalePrice')\nfig.show()","44aca657":"train['FullBath'].value_counts()","787d1dc2":"plt.figure(figsize = (16,7))\nsns.boxplot(x=train['FullBath'], y=train['SalePrice'])","5bdb5049":"train['TotRmsAbvGrd'].value_counts()","4950c277":"plt.figure(figsize=(15,10))\nfig = sns.barplot(x = 'TotRmsAbvGrd', y='SalePrice', data = train)","b8fbd8b2":"train['YearBuilt'].value_counts().shape","206f9a3c":"plt.figure(figsize = (16,7)) \nfig = px.bar(train, x = 'YearBuilt', y = 'SalePrice')\nfig.show()","24e15336":"dataframe = pd.concat([train, test])","9de19d49":"dataframe.shape","51f8bf85":"df = pd.get_dummies(dataframe, drop_first=True)","508a4045":"df.head()","4c72a6b3":"train_df = df.iloc[: 1460, :]\ntest_df = df.iloc[1460: , :]","4925fc7a":"X = train_df.drop('SalePrice', axis=1)\ny = train_df['SalePrice']\ntest_df = test_df.drop('SalePrice', axis=1)","9e19ba70":"from sklearn.ensemble import RandomForestRegressor\n\nforest_regressor = RandomForestRegressor()\nforest_regressor.fit(X, y)\nforest_regressor.score(X, y)","8c24c1ff":"from sklearn.svm import SVC\nclassifier_SVC = SVC(kernel = 'linear', random_state = 0)\nclassifier_SVC.fit(X, y)\nclassifier_SVC.score(X, y)","cc9956b3":"from sklearn.naive_bayes import GaussianNB\nclassifier_NB = GaussianNB()\nclassifier_NB.fit(X, y)\nclassifier_NB.score(X, y)","6085c3c8":"from sklearn.tree import DecisionTreeClassifier\nclassifier_DTC = DecisionTreeClassifier(criterion = 'entropy', random_state = 0)\nclassifier_DTC.fit(X, y)\nclassifier_DTC.score(X, y)","a12b5af5":"y_pred = forest_regressor.predict(test_df)","d34f3d46":"sample_sub = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')","09220a4d":"datasets = pd.DataFrame({\n    'Id': sample_sub['Id'],\n    'SalePrice': y_pred\n})","ec6b4c26":"datasets.to_csv('gender_submission3.csv', index=False)\n\nprint(\"File Saved\")","eb3a3267":"Let's select only top 10 correlated features.","0cbc52b4":"# CHECKING FOR CORRELATED FEATURES","1f2a0175":"* **GarageCars: Size of garage in car capacity**\n","012c282b":"# IMPORTING DATASETS","47582889":"* **YearBuilt: Original construction date**\n","f442db38":"* **1stFlrSF: First Floor square feet**\n","1b3246d5":"**These are top 10 features. Let's analyse one by one.**","804c882d":"* **GarageArea: Size of garage in square feet**\n","0cc03105":"Checking for Missing Values","baf235bf":"* **GrLivArea: Above grade (ground) living area square feet**\n","12ee2b13":"* **FullBath: Full bathrooms above grade**\n","89537cb4":"# **IMPORTING LIBRARIES**","02ac4acf":"* OverallQual: Rates the overall material and finish of the house\n\n       10\tVery Excellent\n       9\tExcellent\n       8\tVery Good\n       7\tGood\n       6\tAbove Average\n       5\tAverage\n       4\tBelow Average\n       3\tFair\n       2\tPoor\n       1\tVery Poor","2749ab54":"FILLING THE MISSING VALUES ONE BY ONE AND DROPPING UNNECESSARY COLUMNS","2f80bd89":"* ** TotalBsmtSF: Total square feet of basement area**","43c8217c":"* **TotRmsAbvGrd: Total rooms above grade (does not include bathrooms)**\n","f70c7459":"At first glance, we see that increases in living area correspond to increases in price"}}