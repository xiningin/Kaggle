{"cell_type":{"c2e4d929":"code","5e9a5f96":"code","a4188109":"code","51418851":"code","e2d0eb5e":"code","19640e5b":"code","8b786aad":"code","fd934f16":"code","a360a128":"code","d000f0fa":"code","ab4f4e76":"code","7120d2fb":"code","82617c59":"code","06700784":"code","6250a7de":"code","1b7dc966":"code","6b4aa4ac":"code","dbc3e7e2":"code","ac668107":"code","1fe827f3":"code","130f65c2":"code","38ff707c":"code","eebd2f04":"code","45ebd5a5":"code","80b77b48":"code","b58dc105":"code","ed19fefa":"code","4c9cf2b8":"code","6b9175a5":"code","6fa0f753":"code","30441cdc":"code","87344c51":"code","41c9df52":"code","14e09d5b":"code","7ef1f80f":"code","df9b9794":"code","d868d90c":"code","87c3945e":"code","a87e59f1":"code","152bd633":"code","9f5c41fa":"code","04bf74e8":"code","e2f0dc27":"code","11ece856":"markdown","43a657a3":"markdown","8e65a13a":"markdown","ace7e3fc":"markdown","01bffc99":"markdown","33a76778":"markdown","c38facc1":"markdown","d5112735":"markdown","0d481e1d":"markdown","7c26eccb":"markdown","1a566086":"markdown","4b254a06":"markdown","7190f706":"markdown","cae7e084":"markdown","cc6f5dea":"markdown","223b3f8f":"markdown","325c5947":"markdown","399772bd":"markdown","a2fede30":"markdown","3ae50638":"markdown","d1f23c39":"markdown","2bf7b842":"markdown","37a40102":"markdown","dbaf7e13":"markdown","4fe723be":"markdown","6fdf732e":"markdown"},"source":{"c2e4d929":"#importing libraries\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\nimport warnings\nwarnings.filterwarnings('always')\nwarnings.filterwarnings('ignore')","5e9a5f96":"train = pd.read_csv('train_v9rqX0R.csv')\ntest = pd.read_csv('test_AbJTz2l.csv')","a4188109":"train.shape, test.shape","51418851":"#ratio of null values\ntrain.isnull().sum()\/train.shape[0]*100","e2d0eb5e":"##ratio of null values\ntest.isnull().sum()\/test.shape[0]*100","19640e5b":"train.info()","8b786aad":"train.describe()","fd934f16":"#categorical features \ncategorical = train.select_dtypes(include=[np.object])\nprint(\"Categorical Features in train set:\", categorical.shape[1])\n\n#numerical features\nnumerical = train.select_dtypes(include=[np.int64, np.float64])\nprint(\"Numerical Features in train set:\", numerical.shape[1])","a360a128":"#categorical features \ncategorical = test.select_dtypes(include=[np.object])\nprint(\"Categorical Features in train set:\", categorical.shape[1])\n\n#numerical features\nnumerical = test.select_dtypes(include=[np.int64, np.float64])\nprint(\"Numerical Features in train set:\", numerical.shape[1])","d000f0fa":"train.isnull().sum()","ab4f4e76":"test.isnull().sum()","7120d2fb":"plt.figure(figsize=(8,5))\nsns.boxplot('Item_Weight', data=train)","82617c59":"plt.figure(figsize=(8,5))\nsns.boxplot('Item_Weight', data=test)","06700784":"#Imputing values with mean\n\ntrain['Item_Weight'] = train['Item_Weight'].fillna(train['Item_Weight'].mean())\ntest['Item_Weight'] = test['Item_Weight'].fillna(test['Item_Weight'].mean())","6250a7de":"train['Item_Weight'].isnull().sum(), test['Item_Weight'].isnull().sum()","1b7dc966":"train['Outlet_Size'].isnull().sum(), test['Outlet_Size'].isnull().sum()","6b4aa4ac":"print(train['Outlet_Size'].value_counts())\nprint(\"************************************\")\nprint(test['Outlet_Size'].value_counts())","dbc3e7e2":"#imputing values with mode\n\ntrain['Outlet_Size'] = train['Outlet_Size'].fillna(train['Outlet_Size'].mode()[0])\ntest['Outlet_Size'] = test['Outlet_Size'].fillna(test['Outlet_Size'].mode()[0])","ac668107":"train['Outlet_Size'].isnull().sum(), test['Outlet_Size'].isnull().sum()","1fe827f3":"train.columns","130f65c2":"train.head()","38ff707c":"train['Item_Fat_Content'].value_counts()","eebd2f04":"train['Item_Fat_Content'].replace(['low fat', 'LF', 'reg'], ['Low Fat', 'Low Fat', 'Regular'], inplace=True)\ntest['Item_Fat_Content'].replace(['low fat', 'LF', 'reg'], ['Low Fat', 'Low Fat', 'Regular'], inplace=True)","45ebd5a5":"train['Item_Fat_Content'] = train['Item_Fat_Content'].astype(str)","80b77b48":"plt.figure(figsize=(8,5))\nsns.countplot(train['Item_Fat_Content'], data=train, palette='ocean')","b58dc105":"plt.figure(figsize=(25,7))\nsns.countplot(train['Item_Type'], data=train, palette='spring')","ed19fefa":"plt.figure(figsize=(8,5))\nsns.countplot(train['Outlet_Size'], data=train, palette='summer')","4c9cf2b8":"plt.figure(figsize=(8,5))\nsns.countplot(train['Outlet_Location_Type'], data=train, palette='autumn')","6b9175a5":"plt.figure(figsize=(8,5))\nsns.countplot(train['Outlet_Type'], data=train, palette='twilight')","6fa0f753":"plt.figure(figsize=(10,8))\nsns.barplot(y = train['Item_Type'], x = train['Item_Outlet_Sales'], data=train, palette='flag')","30441cdc":"train.head()","87344c51":"#Label Encoding\nle = LabelEncoder()\nvar_mod = train.select_dtypes(include='object').columns\nfor i in var_mod:\n    train[i] = le.fit_transform(train[i])\n    \nfor i in var_mod:\n    test[i] = le.fit_transform(test[i])","41c9df52":"train.columns","14e09d5b":"#Seperate Target and Features\nX = train.drop(columns=['Item_Outlet_Sales'], axis=1)\ny = train['Item_Outlet_Sales']","7ef1f80f":"#20% data as validation data\nX_train, X_valid, y_train, y_valid = train_test_split(X,y,test_size=0.2, random_state=22)","df9b9794":"#Model Building\nfeatures = X.columns\nLR = LinearRegression(normalize=True)\nLR.fit(X_train, y_train)\ny_pred = LR.predict(X_valid)\ncoef = pd.Series(LR.coef_,features).sort_values()","d868d90c":"#Barplot for Coefficients\nplt.figure(figsize=(8,5))\nsns.barplot(LR.coef_, features)","87c3945e":"MSE = metrics.mean_squared_error(y_valid, y_pred)\nfrom math import sqrt\nrmse = sqrt(MSE)\nprint(\"Root Mean Squared Error is :\", rmse)","a87e59f1":"submission = pd.read_csv('sample_submission_8RXa3c6.csv')\nfinal_predictions = LR.predict(test)\nsubmission['Item_Outlet_Sales'] = final_predictions\n\n#only positive predictions for the target variable\nsubmission['Item_Outlet_Sales'] = submission['Item_Outlet_Sales'].apply(lambda x: 0 if x<0 else x)\nsubmission.to_csv('my_submission.csv', index=False)","152bd633":"!pip install pycaret","9f5c41fa":"from pycaret.regression import *","04bf74e8":"import pip\nprint(pip.__version__)","e2f0dc27":"import pkg_resources\nfrom subprocess import call\n\npackages = [dist.project_name for dist in pkg_resources.working_set]\ncall(\"pip install --upgrade \" + ' '.join(packages), shell=True)","11ece856":"We have 17% and 28% of missing values in Item weight and Outlet_Size columns respectively.","43a657a3":"We have succesfully imputed the missing values from the column Item_Weight","8e65a13a":"### RMSE ","ace7e3fc":"__The Items bought are more of Low Fat.__","01bffc99":"__Outlet Size__","33a76778":"__We see there are some irregularities in the column and it is needed to fix them.__","c38facc1":"* __Encoding the required columns from training and test dataset__","d5112735":"We have 8523 rows and 12 columns in Train set whereas Test set has 5681 rows and 11 columns.","0d481e1d":"__Since the outlet_size is a categorical column, we can impute the missing values by \"Mode\"(Most Repeated Value) from the column__","7c26eccb":"* __Item Visibility, Outlet_Type, Outlet_Size, Outlet_Location_Type are the most important attributes to determine Item_Outlet_Sales.__","1a566086":"# Step - 5 : Model Building","4b254a06":"__The Box Plots above clearly show no \"Outliers\" and hence we can impute the missing values with \"Mean\"__","7190f706":"# Step - 3 : Data Cleaning","cae7e084":"# Step - 1 : Importing Libraries","cc6f5dea":"# Step - 2 : Data Inspection","223b3f8f":"* __Fruits and Vegetables are largely sold as people tend to use them on daily purpose.__\n* __Snack Foods too have good sales.__","325c5947":"Item_Weight and Outlet_Size have some missing values in the data","399772bd":"* __The Outlets are more of Medium Size__","a2fede30":"* __The products available were Fruits-Veggies and Snack Foods but the sales of Seafood and Starchy Foods seems higher and hence the sales can be improved with having stock of products that are most bought by customers.__","3ae50638":"__Item_Weight__","d1f23c39":"__We have succesfully imputed the missing values from the column Outlet_Size.__","2bf7b842":"* __The Outlets are maximum in number in Tier 3 Cities__","37a40102":"# Step - 4 : Exploratory Data Analysis","dbaf7e13":"### Bivariate Analysis","4fe723be":"* __The Outlets are more of Supermarket Type1__","6fdf732e":"* __Validation Set RMSE score is around 1246 from this linear model__"}}