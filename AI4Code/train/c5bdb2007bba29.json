{"cell_type":{"a7c2c69c":"code","ed0bebba":"code","7cdd850e":"code","ba8a4641":"code","5458bc89":"code","5939e726":"code","0c4ce689":"code","0e42a5c5":"code","213d2444":"code","817344d1":"code","2241e089":"code","675f6e96":"code","ac1f11af":"code","075f3e0f":"code","f88daab6":"code","dcc8c505":"code","4d15a83a":"code","42c9b668":"code","4fe1c1c1":"code","d41e8fe3":"code","0a766389":"code","43a80e4e":"code","398a0f85":"code","bdacf61b":"code","cad94e4d":"code","409d3e11":"code","2c227903":"markdown","96a11c6f":"markdown","e40edaba":"markdown","f9eee04a":"markdown","bfb59fb0":"markdown","37014ba2":"markdown","c3f6e4a2":"markdown","ce598986":"markdown","1b50e16a":"markdown","ee093170":"markdown","3b2ff863":"markdown","6eddea7e":"markdown","01d1da13":"markdown","e6583c85":"markdown","19abd82a":"markdown","0fc3ff10":"markdown","6312644a":"markdown","73ef9282":"markdown","a69ccf61":"markdown","2b06d757":"markdown","1ac348fb":"markdown","16058f3d":"markdown"},"source":{"a7c2c69c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ed0bebba":"import matplotlib.pyplot as plt\nplt.rcParams['figure.figsize']=[16,6]\nimport seaborn as sns","7cdd850e":"df=pd.read_csv('..\/input\/uber-stock-data\/UBER.csv')","ba8a4641":"df.head()","5458bc89":"df.shape","5939e726":"df.describe()","0c4ce689":"df.corr()","0e42a5c5":"plt.figure(figsize=(16,6))\nsns.heatmap(data=df.corr(),linewidths=8,annot=True,fmt='f',cmap='Set1',cbar=True,vmin=-1,vmax=1)","213d2444":"high=df.loc[:,'High']\ndisplay(high)","817344d1":"plt.figure(figsize=(22,6))\nplt.xlabel('High Stock Price')\nplt.plot(high,np.zeros_like(high),color='BlueViolet',marker='o',linestyle='dashed',linewidth=0.2, markersize=5)","2241e089":"low=df.loc[:,'Low']\ndisplay(low)\nplt.figure(figsize=(22,6))\nsns.histplot(data=low, kde=True)","675f6e96":"sns.displot(data=low,kind='kde',fill=True)","ac1f11af":"plt.figure(figsize=(22,6))\nsns.FacetGrid(df,height=5).map(plt.scatter,'High','Low')\nplt.plot(high,np.zeros_like(high),color='BlueViolet',marker='o',linestyle='dashed',linewidth=0.2, markersize=5)\nplt.plot(low,np.zeros_like(low),color='DarkOrange',marker='+',linestyle='dashed',linewidth=0.2, markersize=5)","075f3e0f":"plt.figure(figsize=(16,6))\nsns.boxplot(data=df[['High','Low']])","f88daab6":"plt.figure(figsize=(16,6))\nplt.title('Uber Stock'.title())\n# Add label for horizontal axis\nplt.xlabel(\"Open\")\n# Add label for vertical axis\nplt.ylabel(\"Close\")\nsns.barplot(x=df['Open'],y=df['Close'], dodge=False, palette='tab20')","dcc8c505":"plt.figure(figsize=(16,6))\nsns.stripplot(x=df['High'],y=df['Low'])","4d15a83a":"sns.pairplot(df,height=5)","42c9b668":"plt.figure(figsize=(16,6))\n# Histograms for each species\nsns.kdeplot(data=df['High'], label=\"High\", shade=True)\nsns.kdeplot(data=df['Low'], label=\"Low\", shade=True)\nsns.kdeplot(data=df['Open'], label=\"Open\",shade=True)\nsns.kdeplot(data=df['Close'], label=\"Close\",shade=True)\n\n# Add title\nplt.title(\"Uber Stock\")\nplt.xlabel('Stock Price')\nplt.ylabel('Density')\n# Force legend to appear\nplt.legend()","4fe1c1c1":"df.plot(subplots=True, figsize=(16, 20));","d41e8fe3":"df.boxplot()","0a766389":"df.plot.area()","43a80e4e":"df1=df.drop('Date',axis=1)\ndf1","398a0f85":"df.plot.hist()","bdacf61b":"df1.diff().hist();","cad94e4d":"df['High'].plot.pie(subplots=True);\n# df1.plot.pie(subplots=True, figsize=(15, 15))","409d3e11":"fig, ax =plt.subplots(3,2,figsize=(25,35)) \nplt.style.use(\"seaborn\")\ndf.hist(ax=ax);","2c227903":"# Load","96a11c6f":"# BiVariate Analysis 4 - sns.stripplot","e40edaba":"# MultiVariate Analysis - df.boxplot()","f9eee04a":"# Additional Reference\n\nhttps:\/\/realpython.com\/pandas-plot-python\/\n\nhttps:\/\/jakevdp.github.io\/PythonDataScienceHandbook\/04.14-visualization-with-seaborn.html","bfb59fb0":"# df.plot.hist()","37014ba2":"# df.hist() - 2","c3f6e4a2":"# df.plot.area()","ce598986":"# MultiVariate Analysis 2 - sns.kdeplot","1b50e16a":"# How To Perform Data Visualization with Pandas\n\nhttps:\/\/www.analyticsvidhya.com\/blog\/2021\/07\/how-to-perform-data-visualization-with-pandas\/","ee093170":"# MultiVariate Analysis - sns.pairplot","3b2ff863":"# BiVariate Analysis - sns.FacetGrid","6eddea7e":"# UniVariate Analysis - plt.plot","01d1da13":"# UniVariate Analysis 2 - sns.histplot","e6583c85":"# View","19abd82a":"#  MultiVariate Analysis 3 - df.plot","0fc3ff10":"From above heatmap we get that except volume all other feature are strongly(+ve) correlated to each other ","6312644a":"# BiVariate Analysis 2 - sns.boxplot","73ef9282":"# df.plot.pie()","a69ccf61":"# UniVariate Analysis 3 - sns.displot","2b06d757":"# BiVariate Analysis 3 - sns.barplot","1ac348fb":"# df.diff().hist()","16058f3d":"# Correlation - sns.heatmap"}}