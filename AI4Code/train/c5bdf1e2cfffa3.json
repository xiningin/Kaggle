{"cell_type":{"523570bb":"code","73e39a22":"code","a3c55ef8":"code","5ebf6c85":"code","32a633d9":"code","fbfb7084":"code","cd9d9302":"code","033d092c":"code","8136850c":"code","9159bbf4":"code","3d6e9d10":"code","bbc8bc10":"markdown","cec102c3":"markdown","f8cbcdb1":"markdown","880beabe":"markdown","e735fd96":"markdown","0370f1d1":"markdown","1c1eff27":"markdown","00e5caf1":"markdown","0ed97690":"markdown","61ff8309":"markdown","9f414f0a":"markdown","c6ad8679":"markdown","758029d7":"markdown","2c41c38e":"markdown","a20c3612":"markdown"},"source":{"523570bb":"# Realizando Importa\u00e7\u00f5es\n\n%matplotlib inline\nimport numpy as np\nimport pandas as pd\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt\nimport plotly.figure_factory as ff\n\nfrom plotly import tools\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\ninit_notebook_mode(connected=True)","73e39a22":"#Importando arquivo do GitHub\n\nurl =\"https:\/\/raw.githubusercontent.com\/matheusmota\/dataviz2018\/master\/resources\/datasets\/Pokemon.csv\"\npokedex = pd.read_csv(url, sep=',')\npokedex.head()","a3c55ef8":"# Classifica\u00e7\u00e3o das Vari\u00e1veis\n\nresposta = [[\"#\",\"Quantitativa Continua\"],[\"Name\",\"Qualitativa Nominal\"],[\"Type 1\",\"Qualitativa Nominal\"],\n            [\"Type 2\",\"Qualitativa Nominal\"],[\"Total\",\"Quantitativa Discreta\"],[\"HP\",\"Quantitativa Nominal\"],\n            [\"Attack\",\"Quantitativa Nominal\"],[\"Defense\",\"Quantitativa Nominal\"],[\"Sp. Atk\",\"Quantitativa Nominal\"],\n            [\"Sp. Def\",\"Quantitativa Nominal\"],[\"Speed\",\"Quantitativa Nominal\"],[\"Stage\",\"Quantitativa Ordinal\"],\n            [\"Legendary\",\"Qualitativa Ordinal\"]]\n\nvariaveis = pd.DataFrame(resposta, columns=[\"Variavel\", \"Classifica\u00e7\u00e3o\"])\nvariaveis","5ebf6c85":"def stats_by_type(type):\n    data, stats_names = [], ['HP', 'Attack', 'Defense', 'Sp. Atk', 'Sp. Def', 'Speed']\n\n    particular_type = pokedex[pokedex['Type 1'] == type].reset_index(drop=True)\n    for stat in stats_names:\n        stat_line = go.Scatter(\n            x=particular_type['Name'],\n            y=particular_type[stat],\n            name=stat,\n            line=dict(\n                width=3\n            ))\n\n        data.append(stat_line)\n\n    layout = go.Layout(\n        title=\"Stats of every Pokemon of {} type\".format(type),\n        xaxis=dict(\n            title=\"{} Pokemon\".format(type)\n        ),\n        yaxis=dict(\n            title=\"Values\"\n        ))\n\n    fig = go.Figure(data=data, layout=layout)\n    iplot(fig, filename='type_stats')\n\nstats_by_type('Normal')","32a633d9":"c= ['hsl('+str(h)+',50%'+',50%)' for h in np.linspace(0, 360)]\n\ntypes = (pokedex.groupby(['Type 1'])['#'].count())\ntypes_name = list(types.keys())\n\ndata = go.Bar(\n    x=types_name,\n    y=types.values,\n    marker=dict(\n        color=np.random.randn(123), opacity=0.8),\n    name=\"{}\".format(types_name))\n\nlayout = go.Layout(\n    title= 'Visualizando o n\u00famero de pokemon por tipo em toda a gera\u00e7\u00e3o',\n    xaxis=dict(\n        title='Type'\n    ),\n    yaxis=dict(\n        title='Quantidade de Pok\u00e9mons'\n    ))\n\nfig = go.Figure(data=[data], layout=layout)\niplot(fig, filename='Types')","fbfb7084":"x = pokedex['Sp. Atk'].values\ndata = [go.Histogram(x=x)]\n\nlayout = dict(\n    title='Distribui\u00e7\u00e3o das Estat\u00edsticas Especiais de ataque entre os Pok\u00e9mons no geral',\n            autosize= True,bargap= 0.015,hovermode= 'x',\n    xaxis=dict(\n        autorange= True,\n        zeroline= False,\n        title='Estat\u00edsticas'),\n    yaxis= dict(\n        autorange= True,\n        showticklabels= True,\n        title='Valores'))\n\nfig1 = dict(data=data, layout=layout)\niplot(fig1)","cd9d9302":"x = pokedex[pokedex[\"Name\"] == \"Charizard\"]\ndata = [go.Scatterpolar(\n  r = [x['HP'].values[0],x['Attack'].values[0],x['Defense'].values[0],x['Sp. Atk'].values[0],x['Sp. Def'].values[0],x['Speed'].values[0],x[\"HP\"].values[0]],\n  theta = ['HP','Attack','Defense','Sp. Atk','Sp. Def','Speed','HP'],\n  fill = 'toself',\n     line =  dict(\n            color = 'orange'))]\n\nlayout = go.Layout(\n  polar = dict(\n    radialaxis = dict(\n      visible = True,\n      range = [0, 200])),\n  showlegend = False,\n  title = 'Estat\u00edstica de Distribui\u00e7\u00e3o do Charizard')\n\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig)","033d092c":"x = pokedex[pokedex[\"Name\"] == \"Blastoise\"]\ndata = [go.Scatterpolar(\n  r = [x['HP'].values[0],x['Attack'].values[0],x['Defense'].values[0],x['Sp. Atk'].values[0],x['Sp. Def'].values[0],x['Speed'].values[0],x[\"HP\"].values[0]],\n  theta = ['HP','Attack','Defense','Sp. Atk','Sp. Def','Speed','HP'],\n  fill = 'toself',\n     line =  dict(\n            color = 'light blue'))]\n\nlayout = go.Layout(\n  polar = dict(\n    radialaxis = dict(\n      visible = True,\n      range = [0, 200])),\n  showlegend = False,\n  title = 'Estat\u00edstica de Distribui\u00e7\u00e3o do Blastoise')\n\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig, filename = \"Single Pokemon stats\")","8136850c":"a = pokedex[pokedex[\"Name\"] == \"Blastoise\"]\nb = pokedex[pokedex[\"Name\"] == \"Charizard\"]\n\ndata = [\n    go.Scatterpolar(\n        name = a.Name.values[0],\n        r = [a['HP'].values[0],a['Attack'].values[0],a['Defense'].values[0],a['Sp. Atk'].values[0],a['Sp. Def'].values[0],a['Speed'].values[0],a[\"HP\"].values[0]],\n        theta = ['HP','Attack','Defense','Sp. Atk','Sp. Def','Speed','HP'],\n        fill = 'toself',\n        line =  dict(\n                color = 'light blue')),\n    \n    go.Scatterpolar(\n            name = b.Name.values[0],\n            r = [b['HP'].values[0],b['Attack'].values[0],b['Defense'].values[0],b['Sp. Atk'].values[0],b['Sp. Def'].values[0],b['Speed'].values[0],b[\"HP\"].values[0]],\n            theta = ['HP','Attack','Defense','Sp. Atk','Sp. Def','Speed','HP'],\n            fill = 'toself',\n            line =  dict(\n                color = 'orange'))]\n\nlayout = go.Layout(\n  polar = dict(\n    radialaxis = dict(\n      visible = True,\n      range = [0, 200])),\n  showlegend = True,\n  title = 'Blastoise vs. Charizard Compara\u00e7\u00e3o Estat\u00edstica')\n\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig)","9159bbf4":"box0 = go.Box(y=pokedex[\"HP\"],name=\"HP\")\nbox1 = go.Box(y=pokedex[\"Attack\"],name=\"Attack\")\nbox2 = go.Box(y=pokedex[\"Defense\"],name=\"Defense\")\nbox3 = go.Box(y=pokedex[\"Sp. Atk\"],name=\"Sp. Atk\")\nbox4 = go.Box(y=pokedex[\"Sp. Def\"],name=\"Sp. Def\")\nbox5 = go.Box(y=pokedex[\"Speed\"],name=\"Speed\")\n\nlayout = go.Layout(\n        title='Boxplots de todas as estat\u00edsticas',\n        xaxis=dict(title='Estat\u00edsticas'),\n        yaxis=dict(title='Valores'))\n\ndata = [box0, box1, box2,box3, box4, box5]\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig, filename='type_stats')","3d6e9d10":"fig = {'data': [{'type' : 'violin',\n                 'x' : pokedex['Legendary'].astype(str),\n                 'y' : pokedex['Attack'],\n                 'legendgroup' : 'Attack',\n                 'scalegroup' : 'Attack',\n                 'name' : 'Ataque',\n                 'side' : 'negative',\n                 'box' : {'visible' : True},\n                 'points' : 'all',\n                 'pointpos' : -1.15,\n                 'jitter' : 0.1,\n                 'scalemode' : 'probability', # 'count'\n                 'meanline' : {'visible' : True},\n                 'line' : {'color' : 'blue'},\n                 'marker' : {'line' : {'width': 0,'color' : '#000000'}},\n                 'span' : [0],\n                 'text' : pokedex['Name']},\n                \n                {'type' : 'violin',\n                 'x' : pokedex['Legendary'].astype(str),\n                 'y' : pokedex['Defense'],\n                 'legendgroup' : 'Defense',\n                 'scalegroup' : 'Defense',\n                 'name' : 'Defesa',\n                 'side' : 'positive',\n                 'box' : {'visible' : True},\n                 'points' : 'all',\n                 'pointpos' : 1.15,\n                 'jitter' : 0.1,\n                 'scalemode' : 'probability', #'count'\n                 'meanline' : {'visible': True},\n                 'line' : {'color' : 'green'},\n                 'marker' : {'line' : {'width' : 0,'color' : '#000000'}},\n                 'span' : [1],\n                 'text' : pokedex['Name']}],\n       'layout' : {'title' : 'Ataque Pokemon agrupado por Lend\u00e1rio',\n                   'xaxis' : {'title' : 'Lend\u00e1rio'},\n                   'yaxis' : {'zeroline' : False,\n                              'title' : 'Ataque \/ Defesa'},\n                   'violingap' : 0,\n                   'violinmode' : 'overlay'}}\n\niplot(fig, validate=False)","bbc8bc10":"# Gr\u00e1fico de Caixa","cec102c3":"# Histograma","f8cbcdb1":"# Quest\u00e3o \u00fanica - Plotly Python\n\nUtilizando um ou mais [datasets da disciplina](https:\/\/github.com\/matheusmota\/dataviz2018\/tree\/master\/resources\/datasets), usando o [Plotly Python](https:\/\/plot.ly\/python\/), construa:\n\n* Um gr\u00e1fico de linha\n* Um gr\u00e1fico de barras\n* Um histograma\n* Um gr\u00e1fico radar\n* Um gr\u00e1fico de caixa\n* Um gr\u00e1fico de violino\n\nDeixe claro qual o dataset escolhido e as vari\u00e1veis.\n\n","880beabe":"# Gr\u00e1fico Radar","e735fd96":"***","0370f1d1":"# Gr\u00e1fico de Linha","1c1eff27":"# Conclus\u00e3o","00e5caf1":"***","0ed97690":"# Gr\u00e1fico de Barras","61ff8309":"***","9f414f0a":"***","c6ad8679":"# Gr\u00e1fico de Violino","758029d7":"**Resultados**\n\n- A varia\u00e7\u00e3o do tipo Pokemon em rela\u00e7\u00e3o a 1\u00ba, 2\u00ba e 3\u00aa gera\u00e7\u00e3o, indicam a diversidade muito alta.\n\n- Os Pokemons tiveram os n\u00fameros mais altos na 1\u00aa Gera\u00e7\u00e3o. No entanto, o n\u00famero diminuiu na segunda gera\u00e7\u00e3o.\n\n- Pokemons de \u00e1gua tem os n\u00fameros mais altos na 1\u00aa gera\u00e7\u00e3o. No entanto, o n\u00famero diminuiu com a passagem de gera\u00e7\u00f5es.\n\n- Al\u00e9m disso, como os Pokemons de fogo t\u00eam menor alcance de valores, mas ataques mais altos, eles podem ser preferidos em rela\u00e7\u00e3o aos tipos grama e \u00e1gua para ataque.","2c41c38e":"# Especializa\u00e7\u00e3o em Ci\u00eancia de Dados - Turma 2018.1 - Facens\n## Aula 3 | Exerc\u00edcio 1\n\n* **Data de entrega:** 28\/out\/2018 11:59 AM\n* **Professor:**  Matheus Mota\n* **Aluno:** Bruno Alves Comitre\n* **RA:** 183141","a20c3612":"<h1 style=\"text-align: center;\"><strong>Dataset Escolhido - Pok&eacute;mon<\/strong><\/h1>"}}