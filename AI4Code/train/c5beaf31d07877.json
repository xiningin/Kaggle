{"cell_type":{"d4947a2d":"code","bea73cda":"code","63a98fa7":"code","4f63d630":"code","aed0d9e1":"code","bff383c9":"code","45e2cf69":"code","fd9f1900":"code","29eb7263":"code","d5eb896b":"code","ec27cf5b":"code","86601637":"code","0a3e9dd9":"code","f4d3196c":"code","d4ddcafb":"code","4adc53ac":"code","46877e52":"code","7858ad8b":"code","dbd1e292":"code","8f0a707c":"markdown","160672b7":"markdown","7f51d062":"markdown","56089bfc":"markdown","a158fbaa":"markdown","27b908c9":"markdown","c335cc12":"markdown","4843f1f8":"markdown","5e93014d":"markdown","74caebd7":"markdown","c3b1ada9":"markdown","291c3ec3":"markdown","bad94bcb":"markdown","f2465938":"markdown","68a318aa":"markdown","1c53b37b":"markdown"},"source":{"d4947a2d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\ndf = pd.read_csv(\"..\/input\/students-performance-in-exams\/StudentsPerformance.csv\")\ndf.head()","bea73cda":"df.info()","63a98fa7":"df[\"gender\"].value_counts()","4f63d630":"import plotly.graph_objects as go\nplt.figure(figsize=(14, 7))\nmylabels = [\"Female\",\"Male\"]\n\nplt.pie(df[\"gender\"].value_counts(),labels=mylabels,autopct=\"%1.1f%%\",\n        startangle = 90,textprops={'fontsize': 12})\n\nplt.axis('equal')\nplt.legend(title = \"Gender Ratios:\")\nplt.suptitle('Female vs Male', fontsize = 20)\nplt.show()\n","aed0d9e1":"df[\"race\/ethnicity\"].value_counts()","bff383c9":"plt.figure(figsize=(14, 7))\nmylabels = [\"group C\",\"group D\",\"group B\",\"group E\",\"group A\"]\n\nplt.pie(df[\"race\/ethnicity\"].value_counts(),labels = mylabels, autopct=\"%1.1f%%\",\n        startangle = 90,textprops={'fontsize': 12})\n\nplt.axis('equal')\n\nplt.suptitle('Students per Race', fontsize = 20)\nplt.show()\nplt.tight_layout()\n","45e2cf69":"p_edu = df.pivot_table(index=\"parental level of education\")\np_edu.reset_index()\n# p_edu.index  = [\"associate's degree\",\"bachelor's degree\",\n#                 'high school',\"master's degree\",'some college','some high school']\n\np_edu_reindex = p_edu.reindex(index=list(['some high school','high school','some college',\n                                          \"associate's degree\",\"bachelor's degree\",\"master's degree\",]))\n\np_edu_reindex.reset_index()","fd9f1900":"plt.subplots(figsize=(13, 7))\nsns.heatmap(p_edu_reindex, annot=True,lw=.5,cmap=\"coolwarm\")\nplt.title(\"Scores per Parental Education\",fontsize=19,weight=\"bold\")\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=13)","29eb7263":"\nplt.figure(figsize=(10,11))\nsns.histplot(data=df, x=\"parental level of education\", hue=\"race\/ethnicity\",multiple=\"stack\",discrete=False)\nplt.xticks(rotation=25,fontsize=11)\nplt.yticks(fontsize=11)\nplt.xlabel(\"Parental level of education\",fontsize=18)\nplt.ylabel(\"Counts\",fontsize=18)\nplt.title(\"Parental Educations per Race Group\",weight=\"bold\",fontsize=18)\n","d5eb896b":"#check scores correlation with race\/ethnicity\nr_scores = df.pivot_table(index=\"race\/ethnicity\")\nr_scores.reset_index()\n\n\nplt.subplots(figsize=(13, 7))\nsns.heatmap(r_scores, annot=True,lw=.5,cmap=\"coolwarm\")\nplt.title(\"Average scores per Race\",fontsize=19,weight=\"bold\")\n\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=13,rotation=0.1)","ec27cf5b":"\n\n#check scores correlation with exam preparation\nprepared = df.pivot_table(index=\"test preparation course\")\nprepared.reset_index()\nprepared.plot.bar(figsize=(9,8))\nplt.xticks(rotation=.1,fontsize=14)\nplt.ylabel(\"Scores\",fontsize=15,weight=\"bold\")\nplt.xlabel(\"Preparation\",fontsize=15,weight=\"bold\")\nplt.legend(fontsize=11)\nplt.title(\"Scores: Prepared vs Not Prepared\",fontsize=19,weight=\"bold\")","86601637":"\n\n# check scores correlation with gender\ng_scores = df.pivot_table(index=\"gender\")\ng_scores.reset_index()\n\ng_scores.plot.bar(figsize=(9,8))\nplt.xticks(rotation=.1,fontsize=14)\nplt.ylabel(\"Scores\",fontsize=17)\nplt.xlabel(\"Gender\",fontsize=17)\nplt.legend(fontsize=11)\nplt.title(\"Scores: Female vs Male\",fontsize=19,weight=\"bold\")","0a3e9dd9":"# check scores correlation with lunch type(wealth)\nl_scores = df.pivot_table(index=\"lunch\")\nl_scores.reset_index()\nl_scores.plot.bar(figsize=(9,8))\nplt.xticks(rotation=.1,fontsize=14)\nplt.ylabel(\"Scores\",fontsize=15)\nplt.xlabel(\"Lunch Type\",fontsize=15)\nplt.legend(fontsize=11)\nplt.title(\"Scores: Poor vs Rich\",fontsize=19,weight=\"bold\")","f4d3196c":"\ndf[\"total score\"] = df[\"math score\"] + df[\"reading score\"] + df[\"writing score\"] # Create Target label\ndf.drop([\"math score\",\"writing score\",\"reading score\"],axis=1,inplace=True) # drop individual score columns\n\n\n# Replace object variables with numeric values  (# another method to preprocessing is *pd.get_dummies*)\ndf[\"race\/ethnicity\"] = df[\"race\/ethnicity\"].replace([\"group A\",\"group B\",\"group C\",\"group D\",\"group E\"],[1,2,3,4,5])\n\ndf[\"parental level of education\"] = df[\"parental level of education\"].replace([\n    \"some high school\",\"high school\",\"some college\",\"associate's degree\",\"bachelor's degree\",\"master's degree\"],[1,2,3,4,5,6])\n\n\ndf[\"gender\"] = df[\"gender\"].replace([\"female\",\"male\"],[0,1])\ndf[\"lunch\"] = df[\"lunch\"].replace([\"standard\",\"free\/reduced\"],[1,0])\ndf[\"test preparation course\"] = df[\"test preparation course\"].replace([\"none\",\"completed\"],[1,0])","d4ddcafb":"X = df.drop(\"total score\",axis=1)\ny = df[\"total score\"]\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","4adc53ac":"from sklearn.linear_model import Ridge\nridge = Ridge()\nridge.fit(X_train,y_train)\nridge.score(X_test,y_test)","46877e52":"from sklearn.svm import SVR\nsvr = SVR(kernel='rbf')\n\nsvr.fit(X_train,y_train)\nsvr.score(X_test,y_test)","7858ad8b":"from sklearn.svm import SVR\nsvr = SVR(kernel=\"linear\")\n\nsvr.fit(X_train,y_train)\nsvr.score(X_test,y_test)","dbd1e292":"from sklearn.ensemble import RandomForestRegressor\nrfr = RandomForestRegressor()\nrfr.fit(X_train,y_train)\nrfr.score(X_test,y_test)","8f0a707c":"6. Visualize student numbers per race\nMost students are Group D and C.","160672b7":"****","7f51d062":"12. Visualize average scores correlation with Gender\nThe result shows female students have higher scores in both reading and writing, while male students are better at math.","56089bfc":"9. Visualize each race groups' parental educations.","a158fbaa":"7. Consolidate table with Parental Education","27b908c9":"3. Check gender ratios","c335cc12":"**Preprocessing**","4843f1f8":"According to scikit learn guidline, this dataset can use below algorithms:\n\n* RidgeRegression\n* SVR(kernel=\"linear\") - short for Support Vector Regressor, a form form of support vector machine.\n* SVR(kernel=\"rbf\") - short for Support Vector Regressor, a form of support vector machine.\n* RandomForestRegressor - the regression version of RandomForestClassifier.","5e93014d":"2. Check the data type of each column\nData type looks good","74caebd7":"8. Visualize and analyize score correlation with parental education\nObviously students scores are strongly related to parents educations.\nThose whose parents have higher education background tend to do better at schools.","c3b1ada9":"11. Visualize average scores' correlation with test Preparation\n\nWell prepared students have higher scores","291c3ec3":"4. Visualize gender ratio with pie chart\nFemale students are slightly more than male students","bad94bcb":"10. Visualize average scores' correlations with Race\/Ethnicity\nGroup A has lowest scores while Group E has highest scores","f2465938":"1. Load dataset and check the data overview.","68a318aa":"Apparently poor students tend to have lower scores","1c53b37b":"5. Check Students per Ethnicity"}}