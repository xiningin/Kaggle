{"cell_type":{"adc3af08":"code","00d351c9":"code","04d357a2":"code","7eda58d6":"code","71dccb36":"code","d6ed6235":"code","fdec44d6":"code","08fbf9c1":"code","917a8e0d":"code","a497b1c4":"code","c38080b0":"code","0d796e6e":"code","e077623d":"code","20955c36":"code","19a2bc6d":"code","a7ffcd8e":"code","335d602e":"code","c148270a":"code","c81280e1":"code","245b074e":"code","e9d1b58d":"code","e61e90cc":"code","9439f54c":"code","f691fe5b":"code","4a24f8ff":"code","00020829":"markdown","7f66ac2c":"markdown","ca93fd6f":"markdown","be681541":"markdown"},"source":{"adc3af08":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","00d351c9":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","04d357a2":"df_all_data = pd.read_csv(\"..\/input\/2019-coronavirus-dataset-01212020-01262020\/2019_nCoV_20200121_20200131.csv\")\ndf_all_data.head()","7eda58d6":"df_all_data.shape","71dccb36":"df_all_data.isnull().sum()","d6ed6235":"df_all_data.info()","fdec44d6":"# Rename Countries\ndf_all_data.replace('Mainland China', 'China', inplace=True)\ndf_all_data.replace('Hong Kong', 'China', inplace=True)\ndf_all_data.replace('Macau', 'China', inplace=True)","08fbf9c1":"# Handle NaNs\ndf_all_data['Province\/State'].fillna('Unknown', inplace=True)\ndf_all_data['Suspected'].fillna(0, inplace=True)\ndf_all_data['Recovered'].fillna(0, inplace=True)\ndf_all_data['Death'].fillna(0, inplace=True)","917a8e0d":"df_all_data['Last Update'].unique()","a497b1c4":"df_all_data['Last Update'].max()","c38080b0":"df_latest_data = df_all_data[df_all_data['Last Update'] == df_all_data['Last Update'].max()]","0d796e6e":"df_latest_data.shape","e077623d":"df_latest_data.info()","20955c36":"df_latest_data['Country\/Region'].unique()","19a2bc6d":"df_latest_data.info()","a7ffcd8e":"def convert_last_update_date_format(x):\n    return pd.to_datetime(x.split(' ')[0])","335d602e":"df_all_data['Last Update'] = df_all_data['Last Update'].apply(convert_last_update_date_format)","c148270a":"df_all_data_by_date = df_all_data.groupby(['Last Update']).sum().reset_index()\ndf_all_data_by_date","c81280e1":"df_latest_data_by_country = df_latest_data.groupby(['Country\/Region']).agg('sum').reset_index()\ndf_latest_data_by_country","245b074e":"df_latest_data_by_state = df_latest_data.groupby(['Province\/State']).agg('sum').reset_index()\ndf_latest_data_by_state","e9d1b58d":"plt.figure(figsize=(25,15))\nsns.barplot(x='Country\/Region', y='Confirmed', data = df_latest_data_by_country)\nplt.title('Country wise confirmed cases')","e61e90cc":"plt.figure(figsize=(30,20))\nsns.barplot(x='Death', y='Province\/State', data = df_latest_data_by_state)\nplt.title('State-wise death rates')","9439f54c":"plt.figure(figsize = (10,10))\npie = plt.pie(df_latest_data_by_state['Confirmed'], shadow=True)\nplt.legend(df_latest_data_by_state['Province\/State'], loc = 0)\nplt.title('State-wise confirmed cases')","f691fe5b":"plt.figure(figsize=(20,10))\nplt.plot( 'Last Update', 'Confirmed', data=df_all_data_by_date, marker='o', markerfacecolor='white', markersize=12, color='green', linewidth=4)\nplt.plot( 'Last Update', 'Suspected', data=df_all_data_by_date, marker='o', markerfacecolor='white', markersize=11, color='orange', linewidth=3)\nplt.plot( 'Last Update', 'Recovered', data=df_all_data_by_date, marker='o', markerfacecolor='white', markersize=9, color='blue', linewidth=2)\nplt.plot( 'Last Update', 'Death', data=df_all_data_by_date, marker='o', markerfacecolor='white', markersize=7, color='red', linewidth=1)\nplt.title('Conrona Virus Trends')\nplt.xlabel('Last Updated Date')\nplt.ylabel('Count')\nplt.show()","4a24f8ff":"fig= df_all_data.groupby(['Last Update','Country\/Region'])['Confirmed'].sum().unstack().plot(figsize=(20,15),linewidth=2)\nfig.set_title('Conrona Virus Country wise Confirmed Cases')\nfig.set_xlabel('Last Updated Date')\nfig.set_ylabel('Count')","00020829":"# Prepare Data","7f66ac2c":"\n#### Not the end. Will update whenever new data is available.","ca93fd6f":"# Data Visualization","be681541":"# Group Data"}}