{"cell_type":{"d3c9ce8c":"code","609e4f0d":"code","db457749":"code","12ad18c9":"code","56b5ab6a":"code","5a045b66":"code","cb20c7a8":"code","cede054c":"code","3ff97d96":"code","bc611ace":"code","c60b0b69":"code","64c1bb96":"code","1d7971b7":"code","853d82ff":"code","fab23e03":"code","975f93ce":"code","a6a87f6c":"code","acd9a48b":"code","66ff00b8":"code","b2e80780":"code","6c56524b":"code","86872725":"code","7ec80c6f":"code","d06af8da":"code","ac414e0b":"code","f716bb55":"code","cea5f35d":"code","5476a371":"code","0a5cba79":"code","37df67ed":"code","b76e7bd4":"code","df1f7213":"code","cc27b196":"code","2bb113a8":"code","ff52e6fd":"code","fe5cb7c1":"markdown","c47fb0af":"markdown","9d2b6423":"markdown","ce28af9b":"markdown","f49c8856":"markdown","a71b0149":"markdown","ac02abca":"markdown","acafe870":"markdown","66ae538c":"markdown","8b742fd5":"markdown","f66f8780":"markdown","38218041":"markdown","6c7ae69c":"markdown"},"source":{"d3c9ce8c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","609e4f0d":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n%matplotlib inline","db457749":"# Collect the data into pandas dataframe \ndf = pd.read_csv('..\/input\/titanic\/train.csv')\ndf.head()","12ad18c9":"# Check the info of Dataset\ndf.info()","56b5ab6a":"# Check How many Data is missing.\ndf.isnull()","5a045b66":"#Let's Visualise which values are missing the most:)\nsns.heatmap(df.isnull(),yticklabels=False ,cbar=False ,cmap='viridis')","cb20c7a8":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=df)","cede054c":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Sex',data=df)","3ff97d96":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Pclass',data=df,palette='rainbow')","bc611ace":"sns.distplot(df['Age'].dropna(),kde=False,color='darkred',bins=40)","c60b0b69":"sns.countplot(x='SibSp',data=df)","64c1bb96":"df['Fare'].hist(color='green',bins=40,figsize=(8,4))","1d7971b7":"plt.figure(figsize=(12,7))\nsns.boxplot(x='Pclass',y='Age',data=df,palette='winter')","853d82ff":"def impute_age(cols):\n    Age= cols[0]\n    Pclass = cols[1]\n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 37\n        if Pclass==2:\n            return 29\n        else:\n            return 24\n    return Age","fab23e03":"df['Age'] = df[['Age','Pclass']].apply(impute_age,axis=1)","975f93ce":"sns.heatmap(df.isnull(),yticklabels=False ,cbar=False ,cmap='viridis')","a6a87f6c":"df.drop('Cabin',axis=1,inplace=True)","acd9a48b":"df.head()","66ff00b8":"pd.get_dummies(df['Embarked'],drop_first=True).head()","b2e80780":"sex = pd.get_dummies(df['Sex'],drop_first=True)\nembarked = pd.get_dummies(df['Embarked'],drop_first=True)\n","6c56524b":"#Delete Features like name,ticket etc which are of no use.\ndf.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","86872725":"df.head()","7ec80c6f":"df = pd.concat([df,sex,embarked],axis=1)","d06af8da":"df.head()","ac414e0b":"df.drop('Survived',axis=1).head()","f716bb55":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(df.drop('Survived',axis=1),df['Survived'],test_size =0.3, random_state = 102)","cea5f35d":"from sklearn.linear_model import LogisticRegression","5476a371":"lr = LogisticRegression(max_iter=1000)","0a5cba79":"lr.fit(x_train,y_train)","37df67ed":"predictions = lr.predict(x_test)","b76e7bd4":"from sklearn.metrics import confusion_matrix,accuracy_score","df1f7213":"accuracy = confusion_matrix(y_test,predictions)","cc27b196":"accuracy","2bb113a8":"accuracy = accuracy_score(y_test,predictions)\naccuracy","ff52e6fd":"predictions","fe5cb7c1":"Roughly 20% of the data is missing where data of Cabin is missing more as compared to age.So we can later drop Cabin during feature selection.","c47fb0af":"The count of Age range(20-40) was more on the titanic.","9d2b6423":"Here we can clearly notice that Pclass=3 has less survived and Pclass=1 has survived more.","ce28af9b":"This Tells us that Pclass has a relation with age. So we can impute values by this relation (Also we can clearly visualise Avg value).","f49c8856":"# Exploratory Data Analysis","a71b0149":"Clearly , we can notice thtat the no of people who survived the incident was less.","ac02abca":"Distribution of Fare","acafe870":"Now,drop the Cabin as it have many null Values.","66ae538c":"# Building a Simple Logistice Regression Model","8b742fd5":"# Data Cleansing","f66f8780":"# Import the Important libraries ","38218041":"Here, we can easily notice that the survival rate of female were more as compared to male during the incident.","6c7ae69c":"This Visualises if the passengers have any siblings\/spouse."}}