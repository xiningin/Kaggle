{"cell_type":{"98bdf641":"code","d100ff77":"code","b5324a71":"code","3ef06a2b":"code","7f3601c1":"code","5d553990":"code","c9c7a5ba":"code","867859d7":"code","608b4a77":"code","3f3646db":"code","0217dd1d":"code","ca1613cb":"code","931ce038":"code","a9daa4b1":"code","a20636d3":"code","3d36f586":"code","23c46957":"markdown","a4229360":"markdown","fcce295f":"markdown","a65e8ed5":"markdown","113f654b":"markdown","1245b99d":"markdown","fe525199":"markdown","d90fed07":"markdown","45a54218":"markdown","9d90b72f":"markdown"},"source":{"98bdf641":"! pip install geopandas\n! pip install pandas_profiling\n! pip install ipywidgets\n! pip install widgetsnbextension","d100ff77":"import numpy as np\nimport pandas as pd\nimport geopandas as gpd\nimport numpy as np\nimport seaborn as sns\nimport textwrap\nimport matplotlib.pyplot as plt\nfrom pandas_profiling import ProfileReport","b5324a71":"covid19_df = pd.read_csv(\"..\/input\/covid19-indonesia\/covid_19_indonesia_time_series_all.csv\")\ncovid19_df.head(5)","3ef06a2b":"covid19_df.info()\ncovid19_df[0:10]","7f3601c1":"covid_new = covid19_df.copy()\ncovid_new.head(5)\n","5d553990":"covid_new.drop([\"Location ISO Code\", \"New Cases\", \"New Deaths\", \"New Recovered\", \"New Active Cases\", \"Province\", \"Country\", \"Continent\", \"Island\", \"Time Zone\", \n                \"Special Status\", \"Total Regencies\", \"Total Cities\", \"Total Districts\", \"Total Urban Villages\", \"Total Rural Villages\", \"Area (km2)\", \n                \"New Cases per Million\", \"Total Cases per Million\",\"New Deaths per Million\", \"Total Deaths per Million\", \"Case Fatality Rate\",\n                \"Case Recovered Rate\", \"Growth Factor of New Cases\",\"Growth Factor of New Deaths\", \"City or Regency\"],axis=1,inplace=True)","c9c7a5ba":"covid_new.info()","867859d7":"covid_final = covid_new.drop_duplicates(subset='Location', keep=\"last\")\ncovid_final","608b4a77":"prov = gpd.read_file('..\/input\/dataset-peta-indonesia\/prov.shp')\nprov.drop([\"NAME_0\"],axis=1,inplace=True)\nprov.rename(columns = {\"NAME_1\":\"Provinsi\"}, inplace = True)\nprov['Provinsi'].replace({\"Jakarta Raya\":\"DKI Jakarta\"},inplace=True)","3f3646db":"covid_final.rename(columns={\n    'Location':'Provinsi'\n},inplace=True)\ncovid_final","0217dd1d":"covid_peta = prov.merge(covid_final.sort_values(by='Provinsi'),on='Provinsi')\n","ca1613cb":"fig,ax = plt.subplots(4,figsize=(36,36))\nplt.style.use('seaborn')\ncovid_peta.plot(column='Total Cases',cmap='Reds',figsize=(9,36),legend=True,ax=ax[0])\nax[0].set_title('Total kasus',fontsize=15)\ncovid_peta.plot(column='Total Deaths',cmap='Purples',figsize=(9,36),legend=True,ax=ax[1])\nax[1].set_title('Total Kematian',fontsize=15)\ncovid_peta.plot(column='Total Recovered',cmap='Greens',figsize=(9,36),legend=True,ax=ax[2])\nax[2].set_title('Total Sembuh',fontsize=15)\ncovid_peta.plot(column='Total Active Cases',cmap='Blues',figsize=(9,36),legend=True,ax=ax[3])\nax[3].set_title('Total Kasus Aktif',fontsize=15)\n\n#add background color\nax[0].set_facecolor('#e0e0e0')\nax[1].set_facecolor('#e0e0e0')\nax[2].set_facecolor('#e0e0e0')\nax[3].set_facecolor('#e0e0e0')\n\nfor i in np.arange(4):\n    ax[i].spines['top'].set_visible(False)\n    ax[i].spines['right'].set_visible(False)\n    ax[i].spines['left'].set_visible(False)\n    ax[i].spines['bottom'].set_visible(False)\n    for item in ax[i].get_xticklabels():\n        item.set_visible(False)\n    for item in ax[i].get_yticklabels():\n        item.set_visible(False)\n    ax[i].set_xticks([])\n    ax[i].set_yticks([])\nfig.suptitle('Peta Covid-19 Indonesia', fontsize=18)","931ce038":"total_cases = covid_peta.sort_values(by=['Total Cases'], ascending=False)\ntotal_cases = total_cases[0:10]\nplt.figure(figsize=(8,15),dpi=200)\nax = sns.barplot(total_cases['Total Cases'], total_cases['Provinsi'],palette='Paired')\nplt.xlabel(\"Total Cases\",fontsize = 15)\nplt.ylabel(\"Provinsi\",fontsize = 15)\nplt.title('Top 10 provinsi dengan kasus terbanyak',fontsize = 25)\nax.set_yticklabels(textwrap.fill(y.get_text()) for y in ax.get_yticklabels())\nax.tick_params(axis=\"y\", labelsize=15)\nfor i in ax.patches:\n    ax.text(i.get_width() + .05, i.get_y() + 0.5, str(i.get_width()), fontsize = 15, color = 'black')\nplt.show()","a9daa4b1":"total_death = covid_peta.sort_values(by=['Total Deaths'], ascending=False)\ntotal_death = total_death[0:10]\nplt.figure(figsize=(8,15),dpi=200)\nax = sns.barplot(total_death['Total Deaths'], total_death['Provinsi'],palette='Paired')\nplt.xlabel(\"Total Deaths\",fontsize = 15)\nplt.ylabel(\"Provinsi\",fontsize = 15)\nplt.title('Top 10 provinsi dengan Kematian karna Covid-19 terbanyak',fontsize = 25)\nax.set_yticklabels(textwrap.fill(y.get_text()) for y in ax.get_yticklabels())\nax.tick_params(axis=\"y\", labelsize=15)\nfor i in ax.patches:\n    ax.text(i.get_width() + .05, i.get_y() + 0.5, str(i.get_width()), fontsize = 15, color = 'black')\nplt.show()","a20636d3":"total_recovery = covid_peta.sort_values(by=['Total Recovered'], ascending=False)\ntotal_recovery = total_recovery[0:10]\nplt.figure(figsize=(8,15),dpi=200)\nax = sns.barplot(total_recovery['Total Recovered'], total_recovery['Provinsi'],palette='Paired')\nplt.xlabel(\"Total Recovered\",fontsize = 15)\nplt.ylabel(\"Provinsi\",fontsize = 15)\nplt.title('Top 10 provinsi dengan kesembuhan dari  Covid-19 terbanyak',fontsize = 25)\nax.set_yticklabels(textwrap.fill(y.get_text()) for y in ax.get_yticklabels())\nax.tick_params(axis=\"y\", labelsize=15)\nfor i in ax.patches:\n    ax.text(i.get_width() + .05, i.get_y() + 0.5, str(i.get_width()), fontsize = 15, color = 'black')\nplt.show()","3d36f586":"total_active_cases = covid_peta.sort_values(by=['Total Active Cases'], ascending=False)\ntotal_active_cases = total_active_cases[0:10]\nplt.figure(figsize=(8,15),dpi=200)\nax = sns.barplot(total_active_cases['Total Active Cases'], total_active_cases['Provinsi'],palette='Paired')\nplt.xlabel(\"Total Active Cases\",fontsize = 15)\nplt.ylabel(\"Provinsi\",fontsize = 15)\nplt.title('Top 10 provinsi dengan kasus aktif Covid-19 terbanyak',fontsize = 25)\nax.set_yticklabels(textwrap.fill(y.get_text()) for y in ax.get_yticklabels())\nax.tick_params(axis=\"y\", labelsize=15)\nfor i in ax.patches:\n    ax.text(i.get_width() + .05, i.get_y() + 0.5, str(i.get_width()), fontsize = 15, color = 'black')\nplt.show()","23c46957":"Pembuatan peta","a4229360":"drop data yang double pada kolom Location untuk mendapat update terakhir","fcce295f":"Top 10 Provinsi dengan Kasus Terbanyak","a65e8ed5":"Top 10 Provinsi dengan kesembuhan dari covid-19 Terbanyak","113f654b":"copy dataset","1245b99d":"Top 10 Provinsi dengan kematian karna covid-19 Terbanyak","fe525199":"Top 10 Provinsi dengan kasus aktif covid-19 Terbanyak","d90fed07":"mengganti nama kolom Location menjadi Provinsi","45a54218":"melakukan drop kolom yang tidak berguna","9d90b72f":"penggabungan 2 dataset"}}