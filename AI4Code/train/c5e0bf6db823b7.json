{"cell_type":{"1ef37c5b":"code","bd25b3ac":"code","43a73e0d":"code","d3d9d8f4":"code","dcba8773":"code","0b7b60e0":"code","44332705":"code","3cb931ee":"code","30a804e5":"code","6d986ef7":"code","2c46b6bc":"code","d45f5945":"code","1dac9a3d":"code","c2b6ff73":"code","dad39112":"code","fc04cd5b":"code","b6646229":"code","bbc29a2a":"code","b657812e":"code","4a079787":"code","07cae2c0":"code","38013ddb":"code","4b259714":"code","24c8a859":"code","f65b4731":"code","2740c867":"code","60c0bac2":"code","139f1e13":"markdown","6038491f":"markdown","00e1d745":"markdown","113e894b":"markdown","a98ff9d4":"markdown","567d951f":"markdown","b9fa8af8":"markdown","1121ecc8":"markdown","e6195e42":"markdown","5725d165":"markdown","db8ef56e":"markdown","7b1f1622":"markdown","479d4c80":"markdown","681507f5":"markdown","589c82d7":"markdown","c610e51e":"markdown","82134971":"markdown","06d98908":"markdown"},"source":{"1ef37c5b":"import ee\nimport folium \nimport rasterio as rio\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport pickle\nimport numpy as np\nfrom scipy import optimize\nfrom folium.plugins import MarkerCluster,HeatMap\n%matplotlib inline\n","bd25b3ac":"plt.style.use('seaborn-whitegrid')\nplt.rcParams['figure.dpi']=200","43a73e0d":"#Authenticate EE \n# ee.Authenticate()","d3d9d8f4":"#Initialize EE\nee.Initialize()","dcba8773":"#coordinate of Area\n\n#PUNE Bounding polygon\npune_bb={\n0:[73.88178301489967,18.838876790850946],\n1:[73.49726153052467,18.736167227010117],\n2:[73.53434038794654,18.529258830074227],\n3:[73.60025835669654,18.357295234118066],\n4:[73.86667681372779,18.31558121975713],\n5:[74.06168413794654,18.333832339489497],\n6:[74.21549273169654,18.490191319759074],\n7:[74.11936236060279,18.69584638649362],\n8:[73.88178301489967,18.838876790850946]}\n\n\npune_rural={\n0:[73.67636171011999,18.69432640862226],\n1:[73.50195375113562,18.682618453342783],\n2:[73.53216615347937,18.51341351754636],\n3:[73.63104310660437,18.394870327434944],\n4:[73.85900941519812,18.302323879400006],\n5:[74.02929750113562,18.34534459187982],\n6:[74.14190736441687,18.488669505528566],\n7:[74.00732484488562,18.49127430673293],\n8:[73.94278016715124,18.449592738444547],\n9:[73.80957093863562,18.424839518466722],\n10:[73.72992005972937,18.509506806032565],\n11:[73.68872132926062,18.587624070602104],\n12:[73.67636171011999,18.69432640862226]\n}\n\n\npune_urban={\n0: [73.7704321446903,18.508204549042645],\n1: [73.85694947867468,18.45089544071767],\n2: [73.9297339025028,18.503646571553737],\n3: [73.9407202306278,18.554428600120815],\n4: [73.89883485465124,18.583068212205728],\n5: [73.83429017691687,18.61365520937262],\n6: [73.77661195426062,18.65269444856425],\n7: [73.74914613394812,18.59543383012851],\n8: [73.7704321446903,18.508204549042645]\n}\n\n#saving the bounds used in the study\nstudy_bounds={\n    'pune':pune_bb,\n    'pune_urban':pune_urban,\n    'pune_rural':pune_rural\n}\n\nwith open('bounding_polygons.pkl','wb') as f:\n    pickle.dump(study_bounds,f)\n\n\n\n#bounded coordinates of urban area of Pune\npune_urban_coords=ee.geometry.Geometry.Polygon(list(pune_urban.values()))\n\n#bounded coordinates of some rural parts of Pune\npune_rural_coords=ee.geometry.Geometry.Polygon(list(pune_rural.values()))\n\n\n#area of interest\naoi=ee.geometry.Geometry.Polygon(list(pune_bb.values()))\n\n#scale in meters\nscale=3000","0b7b60e0":"# Query data from EE , taking only NO2_column_number_density and images that intersect with our Area of Interest\n\n'''index_description: Total vertical column of NO2 (ratio of the slant column density of NO2 and the total air mass factor)'''\n\n\nNo2=ee.ImageCollection('COPERNICUS\/S5P\/OFFL\/L3_NO2') \\\n    .select('NO2_column_number_density') \\\n    .filterBounds(aoi) \n\n","44332705":"print('Number of Images in collection  are {}'.format(No2.size().getInfo()))","3cb931ee":"# sample a few locations for which No2 data is to be queried\n\n#Central Areas of Pune and PCMC\npune_central=No2.getRegion(geometry=pune_urban_coords,\n                          scale=scale,\n                          ).getInfo()\n\n\n# Some rural areas of Pune\npune_rural=No2.getRegion(geometry=pune_rural_coords,\n                          scale=5000,\n                          ).getInfo()\n","30a804e5":"#helper functions\n\ndef get_df(img_collection_info,\n           bands):\n    '''get a dataframe of values for the given Bands'''\n    \n    \n    df = pd.DataFrame(img_collection_info)\n\n    # Rearrange the header.\n    headers = df.iloc[0]\n    df = pd.DataFrame(df.values[1:], columns=headers)\n\n    # Remove rows without data inside.\n    df = df[['longitude', 'latitude', 'time', *bands]].dropna()\n\n    # Convert the data to numeric values.\n    for band in bands:\n        df[band] = pd.to_numeric(df[band], errors='coerce')\n\n    # Convert the time field into a datetime.\n    df['datetime'] = pd.to_datetime(df['time'], unit='ms')\n\n    #lat-long of point as location\n    df['location']=df.apply(lambda x : (x['latitude'],x['longitude']),axis=1)\n    \n    \n    # Keep the columns of interest.\n    df = df[['time','datetime','location',  *bands]]\n\n    return df\n    \ndef mean_value(df,band):\n    '''Taking the mean value for a band for each groupby (by date) object for that region,so that we have a mean value of given band for that region'''\n    \n    \n    #mean value for particular instance of time\n    mean_val_df=df.groupby('datetime').agg({f'{band}':['mean','max']})\n    mean_val_df.reset_index(inplace=True)\n    \n    #sortby date\n    mean_val_df.sort_values(by='datetime',inplace=True)\n    \n    return mean_val_df\n    ","6d986ef7":"# lets see the points which are sensed in the study\n\ndf_urban=get_df(pune_central,\n                ['NO2_column_number_density'])\n\ndf_rural=get_df(pune_rural,\n                ['NO2_column_number_density'])\n\n\nm1=folium.Map(location=[18.5477,73.8384],\n              tiles='Open Street Map',\n              zoom_start=10,min_zoom=9)\n\nHeatMap(data=df_urban['location'],\n                       radius=10,\n                       opacity=.05,\n                       name='Urban').add_to(m1)\n\nHeatMap(data=df_rural['location'],\n                       radius=10,\n                       opacity=.05,\n                       name='rural').add_to(m1)\n\nm1.save('Area_of_study_heatmap.html')\n\nprint('AREA in Study (URBAN and RURAL)')\nm1","2c46b6bc":"print('Number of Data Points in Urban Study {} \\n Number of Data Points in Rural Study {}'.format(len(df_urban),len(df_rural)))","d45f5945":"print('Number of Unique locations in Urban Study {} \\n Number of Unique locations in Rural Study {}'.format(df_urban['location'].nunique(),df_rural['location'].nunique()))","1dac9a3d":"# Dataset for Urban Pune NO2 density \nurban_no2=mean_value(df_urban,\n                     band='NO2_column_number_density')\n#saving urban no2\nurban_no2.to_csv('pune_urban_no2.csv',index=False)\n\n# Rural NO2 Dataset\nrural_no2=mean_value(df_rural,\n                    band='NO2_column_number_density')\n#saving \nrural_no2.to_csv('pune_rural_no2.csv',index=False)","c2b6ff73":"#helper Functions\n\ndef plot_all_values(df,\n                    df2,\n                    band):\n    '''Plot all the given values,\n    df: Urban Dataset\n    df2:rural Dataset'''\n    \n    fig,ax=plt.subplots(figsize=(16,8))\n    \n    ax.plot(df.datetime,\n            df[band]['mean'],\n            color='r',\n            lw=0.5,\n            label='Urban')\n\n    ax.plot(df2.datetime,\n            df2[band]['mean'],\n            color='b',\n            lw=0.5,\n            label='Rural')\n\n    plt.title(f'{band} in Pune Region')\n    plt.legend()\n    plt.xlabel('Date')\n    plt.ylabel(f'{band} (mol\/m^2)')\n    plt.show()\n    \n    \n    \ndef plot_monthwise(df,\n                  df2,\n                  band):\n    '''plot seasonal trend in concentration of specified band'''\n        \n    #mean NO2 level for each month \n    urban=df.groupby(df.datetime.dt.month).agg({(f'{band}','mean'):'mean'})\n    urban.index.name='Months'\n    urban.reset_index(inplace=True)\n    \n    \n    rural=df2.groupby(df.datetime.dt.month).agg({(f'{band}','mean'):'mean'})\n    rural.index.name='Months'\n    rural.reset_index(inplace=True)\n    \n    \n    \n    comb=urban.merge(rural,on='Months',how='inner')\n    comb.rename(columns={'NO2_column_number_density_x':f'Urban','NO2_column_number_density_y':f'Rural'},inplace=True)\n    comb.set_index('Months',inplace=True)\n    comb.plot(figsize=(16,8))\n    \n    \n    plt.title(f'Monthwise mean {band}')\n    plt.xlabel('Month of the year')\n    plt.ylabel(f'Monthwise Mean {band} (mol\/m^2)')\n    plt.show()\n    \n    \n\nplot_all_values(df=urban_no2,\n               df2=rural_no2,\n               band='NO2_column_number_density')","dad39112":"plot_monthwise(df=urban_no2,\n               df2=rural_no2,\n               band='NO2_column_number_density')","fc04cd5b":"def get_range_df(df,\n                date_col,\n                start_date,\n                end_date):\n    '''get a dataframe bounded by start and end date'''\n    \n    return df[(df[date_col]>start_date)&(df[date_col]<end_date)]\n\n\n\npre_pandemic={\n    'start_date':'2019-03-01',\n    'end_date'  :'2019-07-01'\n}\n\npandemic={\n    'start_date':'2020-03-01',\n    'end_date'  :'2020-07-01'\n}\n\n","b6646229":"#PREPANDEMIC URBAN AND RURAL NO2 DENSITY DATA\n\n#urban\nprepandemic_ur=get_range_df(df=urban_no2,\n                            date_col='datetime',\n                           start_date=pre_pandemic['start_date'],\n                           end_date=pre_pandemic['end_date'])\n\n#rural\nprepandemic_rur=get_range_df(df=rural_no2,\n                            date_col='datetime',\n                           start_date=pre_pandemic['start_date'],\n                           end_date=pre_pandemic['end_date'])","bbc29a2a":"#PANDEMIC URBAN AND RURAL NO2 DENSITY DATA\n\n#urban\npandemic_ur=get_range_df(df=urban_no2,\n                        date_col='datetime',\n                        start_date=pandemic['start_date'],\n                        end_date = pandemic['end_date'])\n\n#rural\n\npandemic_rur=get_range_df(df=rural_no2,\n                         date_col='datetime',\n                         start_date=pandemic['start_date'],\n                         end_date=pandemic['end_date'])","b657812e":"def plot_comparison_plots(df,\n                          df2,\n                          band,\n                          Title):\n    '''PLOT COMPARISON PLOTS for Before and during Pandemic\n    df: NO2 levels during pre Pandemic study period\n    df2:NO2 During Pandemic study period\n    '''\n    fig,ax=plt.subplots(2,1,figsize=(16,8))\n    print(f'{Title}')\n    \n    \n    ax[0].plot(df.datetime,\n            df[band]['mean'],\n            color='r',\n            lw=2)\n    ax[0].set_title('Before Covid-19')\n    ax[0].set_xlabel('Date')\n    ax[0].set_ylabel(f'{band} (mol\/m^2)')\n    \n    \n\n    ax[1].plot(df2.datetime,\n            df2[band]['mean'],\n            color='g',\n            lw=2)\n    ax[1].set_title('During Covid-19')\n    ax[1].set_xlabel('Date')\n    ax[1].set_ylabel(f'{band} (mol\/m^2)')\n    \n    plt.tight_layout()\n    \n    #saving image\n    fig.savefig(f'{Title}.jpg')\n    plt.show()\n    ","4a079787":"# CHange in NO2 over Urban areas\nplot_comparison_plots(df=prepandemic_ur,\n                     df2=pandemic_ur,\n                     band='NO2_column_number_density',\n                     Title='NO2 Concentration over Urban Pune')","07cae2c0":"# CHange in NO2 over Rural areas\nplot_comparison_plots(df=prepandemic_rur,\n                     df2=pandemic_rur,\n                     band='NO2_column_number_density',\n                     Title='NO2 Concentration over Rural Pune')","38013ddb":"# Approximate percent drop in NO2 levels\ndef percent_change(df,df2,band):\n    mean_pre   = df[f'{band}']['mean'].mean()\n    mean_during= df2[f'{band}']['mean'].mean()\n        \n    diff=mean_pre-mean_during\n    percent_change=(diff\/mean_pre)*100\n    \n    return percent_change\n\n\nprint('Mean % drop in Urban NO2 level during pandemic restrictions {}'.format(percent_change(df=prepandemic_ur,\n                                                                                             df2=pandemic_ur,\n                                                                                            band='NO2_column_number_density')))","4b259714":"print('Mean % drop in Rural NO2 level during pandemic restrictions {}'.format(percent_change(df=prepandemic_rur,\n                                                                                             df2=pandemic_rur,\n                                                                                            band='NO2_column_number_density')))","24c8a859":"def add_ee_layer(self, ee_image_object, vis_params, name):\n    \"\"\"Adds a method for displaying Earth Engine image tiles to folium map.\"\"\"\n    map_id_dict = ee.Image(ee_image_object).getMapId(vis_params)\n    folium.raster_layers.TileLayer(\n        tiles=map_id_dict['tile_fetcher'].url_format,\n        attr='Map Data &copy; <a href=\"https:\/\/earthengine.google.com\/\">Google Earth Engine<\/a>',\n        name=name,\n        overlay=True,\n        control=True\n    ).add_to(self)\n\n# Add Earth Engine drawing method to folium.\nfolium.Map.add_ee_layer = add_ee_layer","f65b4731":"\n#visualization parameters\nviz_param={\n    'min': 0.00001, 'max': 0.0002,\n    'palette': ['006633', 'E5FFCC', '662A00', 'D8D8D8', 'F5F5F5']}\n","2740c867":"M2=folium.Map(location=[18.5477,73.8384],\n              tiles='Open Street Map',\n              zoom_start=10,min_zoom=9)\n\n\n#adding NO2 density layer\nM2.add_ee_layer(ee_image_object=ee.Image(No2.filterDate(pre_pandemic['start_date'],pre_pandemic['end_date']).mean()).clip(aoi),\n               vis_params=viz_param,\n               name='NO2 Density (April-June 2019)')\nprint('April 2019 to June 2019')\n\n#add tile control\nM2.add_child(folium.LayerControl())\nM2.save('Prepandemic_NO2.html')\n\nM2","60c0bac2":"M3=folium.Map(location=[18.5477,73.8384],\n              tiles='Open Street Map',\n              zoom_start=10,min_zoom=9)\n\n#adding NO2 density layer\nM3.add_ee_layer(ee_image_object=ee.Image(No2.filterDate(pandemic['start_date'],pandemic['end_date']).mean()).clip(aoi),\n               vis_params=viz_param,\n               name='NO2 Density (April-June 2020)')\nprint('April 2020 to June 2020')\n\n#add tile control\nM3.add_child(folium.LayerControl())\n#saving map\nM3.save('pandemic_NO2.html')\n\nM3","139f1e13":"# **About NO2**\n* **Nitrogen dioxide (NO2) and nitrogen oxide (NO) together are usually referred to as nitrogen oxides (NOx = NO + NO2). They are important trace gases in the Earth\u2019s atmosphere, present in both the troposphere and the stratosphere.**\n* **Nitrogen Dioxide: Nitrogen dioxide enters the atmosphere as a result of anthropogenic activities such as fossil fuel combustion and biomass burning, as well as natural processes including microbiological processes in soils, wildfires and lightning.**\n* **During daytime, i.e. in the presence of sunlight, a photochemical cycle involving ozone (O3) converts NO into NO2 (and vice versa) on a timescale of minutes, so that NO2 is a robust measure for concentrations of nitrogen oxides.**\n","6038491f":"**set matplotlib style and pixel density**","00e1d745":"# **Querying Image Collections Object**","113e894b":"# Effect of Pandemic Restriction on NO2 Concentration\n\nThe Concentration of NO2 has a seasonal trend to it. Hence we will compare the changes in concentration around a particular season(i.e summer). Hence taking a period from March to July.","a98ff9d4":"# **Authenticate and Inititalize Earth Engine**","567d951f":"**PrePandemic (April 2019 to June 2019)**","b9fa8af8":"# Resources\n* [ https:\/\/developers.google.com\/earth-engine\/tutorials\/community\/intro-to-python-api-guiattard ]\n* [ https:\/\/github.com\/shakasom\/rs-python-tutorials\/blob\/master\/RS_Python.ipynb ]\n* [ https:\/\/github.com\/sarasafavi\/remote-sensing-with-python ]\n","1121ecc8":"**During Pandemic (April 2020 to June 2020)**","e6195e42":"**Query data for a specified region**","5725d165":"# **Visualization**","db8ef56e":"**Plotting change in NO2 density over time**","7b1f1622":"**Points of Study**","479d4c80":"# **Imports**","681507f5":"**NO2 Density Datasets (value: mol\/m2)**","589c82d7":"**Get info for the specified region**","c610e51e":"# **Visualizing change of mean value of NO2 over study period**","82134971":"# **Description**\n\n* **There are some compounds in the atmosphere which are majorly emitted as a result of human activities. Some of the compounds are Nitrogen Dioxide, Sulphur Dioxide, Methane, surface Ozone, CO2 and CO, Particulate Matter.**\n* **In this Notebook, we will analyse the change in NO2 levels during the covid-19 pandemic restrictions, in and around the geographic area of Pune, India.**\n","06d98908":"**There Definitely has been a reduction in NO2 levels both in Urban and Rural parts of Pune over the time of the pandemic lockdown restrictions, which is clearly visible in the plots above**"}}