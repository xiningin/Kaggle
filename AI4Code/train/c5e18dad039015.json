{"cell_type":{"32f31dec":"code","4df94115":"code","4efaab1c":"code","81abef39":"code","c47a5169":"code","af818a2b":"code","ba6fe2ba":"code","2c872c8c":"code","9601bb7c":"code","999b3cd1":"code","b470ba71":"code","484992df":"code","6d980525":"markdown","393cd285":"markdown"},"source":{"32f31dec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4df94115":"pip install keras","4efaab1c":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport random\nfrom tensorflow import keras \nimport os\nimport cv2                  \nimport numpy as np  \nfrom tqdm import tqdm\nimport os                   \nfrom random import shuffle  \nfrom zipfile import ZipFile\nfrom PIL import Image\nimport warnings\nwarnings.filterwarnings('always')\nwarnings.filterwarnings('ignore')\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\nimport seaborn as sns\n%matplotlib inline  \nstyle.use('fivethirtyeight')\nsns.set(style='whitegrid',color_codes=True)\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import KFold\nfrom sklearn.metrics import accuracy_score,precision_score,recall_score,confusion_matrix,roc_curve,roc_auc_score\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.preprocessing import LabelEncoder\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras.preprocessing import image\nimport random as rn\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator","81abef39":"imagel =[]\nlabell =[]\nIMG_SIZE=150\nMAIN_DIR = '..\/input\/image-classification-covid19-xray'\nNORMAL_DIR='..\/input\/image-classification-covid19-xray\/Normal'\nCOVID_DIR='..\/input\/image-classification-covid19-xray\/COVID19'","c47a5169":"def make_train_data(flower_type,DIR):\n    for img in tqdm(os.listdir(DIR)):\n        label=assign_label(img,flower_type)\n        path = os.path.join(DIR,img)\n        img = cv2.imread(path,cv2.IMREAD_COLOR)\n        img = cv2.resize(img, (IMG_SIZE,IMG_SIZE))\n        \n        imagel.append(np.array(img))\n        labell.append(str(label))\n","af818a2b":"def assign_label(img,what_type):\n    return what_type","ba6fe2ba":"make_train_data('Normal',NORMAL_DIR)\nprint(len(imagel))","2c872c8c":"make_train_data('Covid19',COVID_DIR)\nprint(len(imagel))","9601bb7c":"image_size = (180, 180)\nbatch_size = 32\n\ntrain_ds = tf.keras.preprocessing.image_dataset_from_directory(\n    MAIN_DIR,\n    validation_split=0.2,\n    subset=\"training\",\n    seed=1337,\n    image_size=image_size,\n    batch_size=batch_size,\n)\nval_ds = tf.keras.preprocessing.image_dataset_from_directory(\n    MAIN_DIR,\n    validation_split=0.2,\n    subset=\"validation\",\n    seed=1337,\n    image_size=image_size,\n    batch_size=batch_size,\n)\n","999b3cd1":"plt.figure(figsize=(10, 10))\nfor images, labels in train_ds.take(1):\n    for i in range(9):\n        ax = plt.subplot(3, 3, i + 1)\n        plt.imshow(images[i].numpy().astype(\"uint8\"))\n        plt.title(int(labels[i]))\n        plt.axis(\"off\")\n","b470ba71":"pip install tensorflow --upgrade","484992df":"datagen = ImageDataGenerator(\n    rotation_range = 40,\n    width_shift_range = 0.2,\n    height_shift_range = 0.2, \n    shear_range = 0.2,\n    zoom_range = 0.2,\n    horizontal_flip = True,\n    fill_mode='nearest'\n)","6d980525":"![](https:\/\/cdn1.vectorstock.com\/i\/1000x1000\/14\/75\/bronchial-system-human-lungs-vector-801475.jpg)","393cd285":"# Work in progress..."}}