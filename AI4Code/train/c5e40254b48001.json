{"cell_type":{"4cd158d7":"code","46871cf8":"code","f41db184":"code","3cfc3619":"code","50e6eeb2":"code","307ab00f":"code","a405a613":"code","7077713f":"code","596a4340":"code","6550f725":"code","8ada412a":"code","67e597bf":"code","2a811714":"code","603df174":"code","36ba825c":"code","cfd37994":"code","e6fd1225":"code","7a071df8":"code","2ec2f62d":"code","4c8cac9d":"code","eb4d0dd2":"code","377b609e":"code","34969499":"code","ffad346a":"code","aed0fca2":"code","ec160a86":"code","65ed8c9a":"code","8717544f":"code","ff11d99b":"code","062250e9":"code","674172aa":"markdown"},"source":{"4cd158d7":"import pandas as pd\nbook=pd.read_csv('..\/input\/toy-dataset\/toy_dataset.csv')\nbook.head()","46871cf8":"book.nunique()","f41db184":"book.info()","3cfc3619":"book.skew()","50e6eeb2":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfig, axs = plt.subplots(1, 2, figsize=(10,5))\naxs = axs.flatten()\nsns.boxplot(y=book['Income'],ax=axs[0])\nsns.boxplot(y=book['Age'],ax=axs[1])\nplt.show()","307ab00f":"!pip install pandas-profiling","a405a613":"from pandas_profiling import ProfileReport\nProfileReport(book, title=\"EDA Report\")","7077713f":"# book=book.sample(frac =.05)\n# book.head()","596a4340":"round(book.Illness.value_counts()*100\/len(book),2)","6550f725":"round(book.City.value_counts()*100\/len(book),2)","8ada412a":"# Creating a dummy variable for some of the categorical variables and dropping the first one.\ndummy1 = pd.get_dummies(book[['Gender','City']], drop_first=True)\ndummy1.head()","67e597bf":"# Adding the results to the master dataframe\nbook = pd.concat([book, dummy1], axis=1)\nbook.head()","2a811714":"book = book.drop(['Gender','City','Number'], axis = 1)\nbook.head()","603df174":"book=book.replace({'Illness' : { 'No' : 0, 'Yes' : 1 }})\nbook.head()","36ba825c":"book.skew()","cfd37994":"!pip install --upgrade git+https:\/\/github.com\/tusharsarkar3\/XBNet.git","e6fd1225":"import torch\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom XBNet.training_utils import training,predict\nfrom XBNet.models import XBNETClassifier\nfrom XBNet.run import run_XBNET ","7a071df8":"y=book[['Illness']]\ny.head()","2ec2f62d":"x=book.drop(['Illness'],axis=1)\nx.head()","4c8cac9d":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size= 0.2, random_state= True,stratify=y) \nx_train.shape,x_test.shape,y_train.shape,y_test.shape","eb4d0dd2":"from imblearn.over_sampling import SMOTE\n\nsm = SMOTE(random_state=42)\nx_train_smote, y_train_smote = sm.fit_resample(x_train, y_train)","377b609e":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nx_train_smote=scaler.fit_transform(x_train_smote)\nx_test=scaler.transform(x_test)","34969499":"y_train_smote=y_train_smote.to_numpy()\ny_train_smote[:5]","ffad346a":"y_test=y_test.to_numpy()\ny_test[:5]","aed0fca2":"y_train_smote=y_train_smote.reshape((-1))\ny_train_smote.shape","ec160a86":"y_test=y_test.reshape((-1))\ny_test.shape","65ed8c9a":"model = XBNETClassifier(x_train_smote,y_train_smote,num_layers=2)","8717544f":"criterion = torch.nn.CrossEntropyLoss()\noptimizer = torch.optim.Adam(model.parameters(), lr=0.02) ","ff11d99b":"m,acc, lo, val_ac, val_lo = run_XBNET(x_train_smote,x_test,y_train_smote,y_test,model,criterion,\n                                      optimizer,epochs=24,batch_size=10*len(book))","062250e9":"import matplotlib.pyplot as plt\nplt.figure(figsize=(20,5))\nplt.subplot(1,2,1)\nplt.plot(acc,label='training accuracy')\nplt.plot(val_ac,label = 'validation accuracy')\nplt.xlabel('epochs')\nplt.ylabel('accuracy')\nplt.legend()\nplt.grid()\nplt.subplot(1,2,2)\nplt.plot(lo,label='training loss')\nplt.plot(val_lo,label = 'validation loss')\nplt.xlabel('epochs')\nplt.ylabel('loss')\nplt.legend() \nplt.grid()","674172aa":"This is based on paper named \"XBNet : An Extremely Boosted Neural Network\"\n\nLink : https:\/\/arxiv.org\/abs\/2106.05239"}}