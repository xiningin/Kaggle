{"cell_type":{"1dc4b374":"code","9908c76b":"code","6dd9c913":"code","ea0f43f6":"code","b1033ea9":"code","d81c0b0a":"code","648e207e":"code","e2c37a92":"code","b1d53627":"code","24ff6327":"code","8bd6915b":"code","d0f59a13":"code","b03e0548":"code","9eb1a644":"code","c69c23fc":"code","35cfc7d5":"code","3f40a7a7":"code","333517e4":"code","7a64411b":"code","73410466":"code","eb981d01":"code","5cc3cfc6":"markdown","8adb4bf6":"markdown","8ff90ad6":"markdown","d913158f":"markdown","5641575b":"markdown","8f127f5f":"markdown","241276c4":"markdown","ec947b10":"markdown","31f895d2":"markdown","3762fee8":"markdown","0ce24d31":"markdown","cc1459ea":"markdown","570dd827":"markdown","bda0473a":"markdown","3345b0c8":"markdown","121e25b5":"markdown","eb418e57":"markdown","af3f8df5":"markdown","d9f8d3c5":"markdown","690101cc":"markdown","2179b8fd":"markdown","5a4d0979":"markdown","e566567c":"markdown","e67d8395":"markdown","b457781e":"markdown","5eea89ee":"markdown","b56825a0":"markdown"},"source":{"1dc4b374":"# Importing libraries\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\n\n# Creating data frames\ndf1 = pd.read_csv('..\/input\/cyclistic-capstone\/2020_11.csv')\ndf2 = pd.read_csv('..\/input\/cyclistic-capstone\/2020_12.csv')\ndf3 = pd.read_csv('..\/input\/cyclistic-capstone\/2021_01.csv')\ndf4 = pd.read_csv('..\/input\/cyclistic-capstone\/2021_02.csv')\ndf5 = pd.read_csv('..\/input\/cyclistic-capstone\/2021_03.csv')\ndf6 = pd.read_csv('..\/input\/cyclistic-capstone\/2021_04.csv')\ndf7 = pd.read_csv('..\/input\/cyclistic-capstone\/2021_05.csv')\ndf8 = pd.read_csv('..\/input\/cyclistic-capstone\/2021_06.csv')\ndf9 = pd.read_csv('..\/input\/cyclistic-capstone\/2021_07.csv')\ndf10 = pd.read_csv('..\/input\/cyclistic-capstone\/2021_08.csv')\ndf11 = pd.read_csv('..\/input\/cyclistic-capstone\/2021_09.csv')\ndf12 = pd.read_csv('..\/input\/cyclistic-capstone\/2021_10.csv')\n\n\n","9908c76b":"# Merging data frames\ndf = pd.concat([df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11, df12])\ndf.reset_index(drop=True, inplace=True)\ndf.head(2)","6dd9c913":"# Filter and remove duplicate entries\ndf[df.duplicated() == True]","ea0f43f6":"# Visualization of empty rows\ndf.isna().sum()","b1033ea9":"# Filling the empty values\nfor i in df:\n    if i in ['start_station_name', 'end_station_name']:\n        df[i] = df[i].fillna('Unknown')\n    elif i in ['start_station_id', 'end_station_id']:\n        df[i] = df[i].fillna(0)\n    elif i in ['end_lat', 'end_lng']:\n        df.dropna(subset=['end_lat', 'end_lng'], inplace=True)\n\n# Checking empty values after cleaning        \ndf.isna().sum()","d81c0b0a":"# Existing data types\ndf.dtypes","648e207e":"# Changing the data types\nfor i in df:\n    if i in ['started_at', 'ended_at']:\n        df[i] = pd.to_datetime(df[i])\n\n# Checking data types after cleaning\ndf.dtypes","e2c37a92":"# Total number of rows\ndf.count()[0]","b1d53627":"# Inserting a new column showing duration of a ride in minutes\nduration = df['ended_at'] - df['started_at']\ndf.insert(4, 'duration_minutes', np.round(duration.dt.seconds\/60, 1))","24ff6327":"# Inserting a new column showing a start date\nstart_date = pd.to_datetime(df['started_at']).dt.date\ndf.insert(2, 'start_date', start_date)\ndf['start_date'] = pd.to_datetime(df['start_date'])","8bd6915b":"# Create a function to calculate the distance between two points\ndef haversine_np(lon1, lat1, lon2, lat2):\n    \"\"\"\n    Calculate the great circle distance between two points\n    on the earth (specified in decimal degrees)\n    All args must be of equal length.    \n    \"\"\"\n    lon1, lat1, lon2, lat2 = map(np.radians, [lon1, lat1, lon2, lat2])\n\n    dlon = lon2 - lon1\n    dlat = lat2 - lat1\n    \n    a = np.sin(dlat\/2.0)**2 + np.cos(lat1) * np.cos(lat2) * np.sin(dlon\/2.0)**2\n    c = 2 * np.arcsin(np.sqrt(a))\n    km = 6367 * c\n    \n    return km\n\n# Add new column with the distance between points\ndistance_km = haversine_np(df['start_lng'], df['start_lat'], df['end_lng'], df['end_lat'])\ndf.insert(10, 'distance_km', distance_km)\n","d0f59a13":"# Add weekday column\nday_of_week = df['start_date'].dt.day_name()\ndf.insert(3, 'day_of_week', df['start_date'].dt.day_name())","b03e0548":"# Quick check all new columns have been added\ndf.sample(5)\n\n# Quick check new columns\ndf.dtypes","9eb1a644":"# Data frame grouped by driver type (count)\nmember = df.groupby('member_casual').count().reset_index(drop=False)[['member_casual', 'ride_id']]\n\n# Parameters\nvalues = [i for i in member['ride_id']]\nlabels = [j for j in member['member_casual']]\ncolors = sns.color_palette('pastel')[0:2]\n\n# Pie chart\nplt.figure(figsize=(8, 8))\nplt.pie(values, labels=labels, colors=colors, autopct = '%.1f %%', explode=[0.01, 0.01], textprops={'fontsize': 15})\n\n# Non-data parameters\nplt.title('Members vs. Casual Drivers', fontdict={'fontweight':'bold', 'fontsize':20})\n\nplt.show()","c69c23fc":"# Table with average overall distance\nmember_avg_distance = df[['member_casual', 'distance_km']].groupby('member_casual').mean()\nmember_avg_distance.reset_index(drop=False, inplace=True)\nmember_avg_distance.rename(columns={'member_casual':'Type', 'distance_km':'AVG. Distance'}, inplace=True)\nmember_avg_distance","35cfc7d5":"# Total distance daily\nmember_distance = df[['start_date', 'member_casual', 'distance_km']]\nmember_distance = member_distance.groupby(['start_date', 'member_casual']).sum()\nmember_distance.reset_index(drop=False, inplace=True)\n\n# Line plot\nplt.figure(figsize=(19, 9))\nsns.lineplot(data=member_distance, x='start_date', y='distance_km', hue='member_casual')\n# Non-data objects\nplt.title('Daily Usage', fontdict={'fontweight':'bold', 'fontsize':20})\nplt.xlabel('Date', fontdict={'fontsize':18, 'fontweight':'bold'})\nplt.ylabel('Total Distance (Km)', fontdict={'fontsize':18, 'fontweight':'bold'})\nplt.legend(['Casual', 'Member'], fontsize=12)\n\nplt.show()","3f40a7a7":"#Creating a data frame\navg_duration = df[['member_casual', 'rideable_type', 'duration_minutes']].groupby(['member_casual', 'rideable_type']).mean()\navg_duration.reset_index(drop=False, inplace=True)\n\n# Barplot (facegrid)\ng = sns.FacetGrid(avg_duration, col='member_casual')\ng.map(sns.barplot, 'rideable_type', 'duration_minutes', order=['classic_bike', 'docked_bike', 'electric_bike'], palette='magma')\n\n# Non-data parameters\ng.fig.suptitle('Average Duration by a Bike Type')\ng.fig.set_size_inches(10,10)\ng.set_titles(col_template=\"{col_name}\")\ng.set_axis_labels('', 'AVG Duration (minutes)')\ng.set_xticklabels(['Classic', 'Docked', 'Electric'])\n\nplt.show()","333517e4":"# Casual\/Member avg DISTANCE and bike type\navg_distance = df[['member_casual', 'rideable_type', 'distance_km']].groupby(['member_casual', 'rideable_type']).mean()\navg_distance.reset_index(drop=False, inplace=True)\n\n# Barplot (facegrid)\ng = sns.FacetGrid(avg_distance, col='member_casual')\ng.map(sns.barplot, 'rideable_type', 'distance_km', order=['classic_bike', 'docked_bike', 'electric_bike'], palette='mako')\n\n# Non-data parameters\ng.fig.suptitle('Average distance by a Bike Type')\ng.fig.set_size_inches(10,10)\ng.set_titles(col_template=\"{col_name}\")\ng.set_axis_labels('', 'AVG Distance (Km)')\ng.set_xticklabels(['Classic', 'Docked', 'Electric'])\n\nplt.show()\n","7a64411b":"# Table with average time\nmember_avg_time = df[['member_casual', 'duration_minutes']].groupby('member_casual').mean()\nmember_avg_time.reset_index(drop=False, inplace=True)\nmember_avg_time.rename(columns={'member_casual':'Type', 'duration_minutes':'AVG. Time'}, inplace=True)\nmember_avg_time","73410466":"test = df[['day_of_week', 'member_casual', 'duration_minutes', 'distance_km']]\ntest = test.groupby(['day_of_week', 'member_casual']).mean()\ntest.reset_index(drop=False, inplace=True)\n\n# Changing order or week days\nweekdays =['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ntest['day_of_week'] = pd.Categorical(test['day_of_week'], categories=weekdays, ordered=True)\n\n# test['day_of_week'] - check type changed\n# test.sort_values('day_of_week')","eb981d01":"# Grouped Barplot\nplt.figure(figsize=(10, 8))\nsns.barplot(data=test, \n            x=\"day_of_week\", \n            y='duration_minutes', \n            hue='member_casual', \n            ci=None, \n            palette='rocket')\n\n# Non-data parameters\nplt.title('Duration by Days', fontdict={'fontweight':'bold', 'fontsize':20})\nplt.xlabel('')\nplt.ylabel('Average Duration (minutes)', fontdict={'fontweight':'bold', 'fontsize':14})\nplt.legend(['Casual', 'Member'], fontsize=12)\n\nplt.show()","5cc3cfc6":"## Stage 5: Share\n### Recap of Analysis and Visualizations\n<a id=\"recap\"><\/a>\nConsidering that the customer base of the company is divided 50\/50, there are some differences in customer behavior:\n\nCasual customers spend much more time using the service than the members\nCasual customers cover more distance\nActivity in the first quarter of a year is much lower\nDocked type of a bike is much more popular among casual customers\nWeekend is the most active period","8adb4bf6":"<a id=\"visualizations\"><\/a>\n## Visualizations","8ff90ad6":"## Impacts\nBike-share programs generate a number of economic externalities, both positive and negative. The positive externalities include reduction of traffic congestion and pollution, while the negative externalities can include degradation of urban aesthetic environment and reduction of parking.\n\nLess traffic congestion\nA primary goal of bicycle-sharing systems has been to reduce traffic congestion, particularly in large urban areas. Some empirical evidence indicates that this goal has been achieved to varying degrees in different cities\n\nLess pollution\nNot only do bike-share systems intend to reduce traffic congestion, they also aim to reduce air pollution through decreased automobile usage, and indirectly through the reduction of congestion.\n\nHealthy transport\nBicycle-sharing systems have been shown to have a strong net positive health effect. Cycling is a good way for exercise and stress relief. It can increase recreation and improve sociability of a city, which make people live more happy and relaxed.","d913158f":" <a id=\"recommendations\"><\/a>\n ## Recommendations based on Analysis\n \nCyclistic have managed to create a business model that accommodates a variety of customer needs whether it is work or travel. However, aiming the business strategy towards tourism and entertainment aspects could encourage casual members to consider buying membership.\n\nCyclistic can use digital media to influence casual riders to become members by telling about positive impacts that bike-sharing program provides. Customers can be attracted by ideas of helping to support a healthy lifestyle, improve air quality, reduce traffic and congestion.","5641575b":"<a id=\"data_cleaning_doc\"><\/a>","8f127f5f":"## Additional calculations\nI am going to calculate parameters that are not in the data frame, but will be very useful during the analysis process.\nParameter duration_minutes is calculated by subtracting time when a ride was ended and starting time:","241276c4":"<a id=\"combine_data\"><\/a>","ec947b10":"Average duration and distance\nIn this section I will break down how member groups use the service.\nThe next plot shows that unlike subscribers, casual members prefer using a docked type of bikes rather than classic or electric:","31f895d2":" ## Handling empty values\nThe table below shows that the data frame contains cells in `start_station_name`, `start_station_id`, `end_station_name`, `end_station_id`, `end_lat`, and `end_lng` columns. Since I am not able to find the information about latitude and longitude, the rows will be deleted. The information in the rest of the columns is not crucial, so the empty cells will be replaced with `0` and `Unknown` values.","3762fee8":"Identifying a day of a week according to start_date can be useful when visualizing the distribution of the rides between week days:","0ce24d31":"by Ashsh Sahu\n\nThis case study was conducted as my capstone project for receiving the Google Data Analytics Professional Certificate.\n\n## Table of Contents  \n* [Introduction](#introduction)\n* [Clear Statement of Business Task](#business_task)\n* [Description of All Data Sources Used](#data_description)\n* [Data Cleaning and Manipulation](#data_cleaning_doc)\n    - [Set up environment](#setup)\n    - [Combine data into one dataframe](#combine_data)\n    - [Clean and organize data](#clean_data)\n* [Analysis](#analysis)\n* [Visualizations](#visualizations)\n* [Recap of Analysis and Visualizations](#recap)\n* [Recommendations based on Analysis](#recommendations)\n\n\n<a id=\"introduction\"><\/a>\n## Introduction  \nIn 2016, Cyclistic launched a successful bike-share offering. Since then, the program has grown to a fleet of 5,824 bicycles that are geotracked and locked into a network of 692 stations across Chicago. The bikes can be unlocked from one station and returned to any other station in the system anytime. \nUntil now,Cyclistic\u2019s marketing strategy relied on building general awareness and appealing to broad consumer segments. One approach that helped make these things possible was the flexibility of its pricing plans: single-ride passes, full-day passes,and annual memberships. Customers who purchase single-ride or full-day passes are referred to as casual riders. Customers who purchase annual memberships are Cyclistic members.\nThe Company wants to maximize the number of their customer\u2019s annual memberships. Cyclistic\u2019s finance analysts feel that converting casual users of their service to annual memberships is more profitable and is the key to future growth.\n\n##### Stakeholders:\n\nLily Moreno : The director of marketing and your manager. Moreno is responsible for the development of campaigns and initiatives to promote the bike-share program. These may include email, social media, and other channels.\n\nCyclistic marketing analytics team : A team of data analysts who are responsible for collecting, analyzing, and reporting data that helps guide Cyclistic marketing strategy. You joined this team six months ago and have been busy learning about Cyclistic\u2019s mission and business goals \u2014 as well as how you, as a junior data analyst, can help Cyclistic achieve them.\n\nCyclistic executive team : The notoriously detail-oriented executive team will decide whether to approve the recommended marketing program.\n\nQuestions:\nHow do annual members and casual riders use Cyclistic bikes differently?\nWhy would casual riders buy Cyclistic annual membership?\nHow can Cyclistic use digital media to influence casual riders to become members?","cc1459ea":"<a id=\"step_analysis\"><\/a>\nHaving latitude and longitude parameters allow us to calculate the distance between starting point and destination by creating a custom function. ","570dd827":"The table below allows us to discover that casual members spent as much as twice more time than customers with the membership. Comparing this information with the table from the section 4.3, brings me to the conclusion that casual members use the service mostly for entertainment and recreation.","bda0473a":" ## Usage by days\nFrom dividing the data on days of a week, we can see that there is a pattern showing that the casual members are active on weekends and this activity is slightly going down by the middle of a week. This pattern is not so explicit when it comes to subscribed members:","3345b0c8":"<a id=\"business_task\"><\/a>\n## Stage 1: Clear Statement of Business Task \nThe business task is to help design a new marketing strategy to convert casual riders into annual members. My research and analysis will help stakeholders determine how annual members and casual riders use Cyclistic bikes differently, based on available Cyclistic historical bike trip data. This in turn will be collected with other research and analysis from the rest of the market analyst team who are researching why casual riders would buy a membership, and how digital media could affect their marketing tactics.  \n\nThe current Cyclistic marketing strategy has relied on building general awareness of the service, appealing to broad consumer segments, and flexible pricing plans. Therefore, my research and analysis will need to show evidence that this new marketing strategy can be successful through my data insights and professional data visualizations.\n\n<a id=\"data_description\"><\/a>\n\n<center><i>Summary of Data<\/i><\/center>\n\n| Column Name | Data Type | Description |\n| :--- | :---: | :--- |\n| **ride_id** | STRING | Unique Ride ID Number |\n| **rideable_type** | STRING | Bike Type (Classic Bike, Docked Bike, Electric Bike) |\n| **started_at** | TIMESTAMP | Ride Start Date (YYYY-MM-DD HH:MM:SS UTC) |\n| **ended_at** | TIMESTAMP | Ride End Date (YYYY-MM-DD HH:MM:SS UTC) |\n| **start_station_name** | STRING | Ride's Starting Station Name |\n| **start_station_id** | STRING (Data from November2020 to October2021 uses INTEGER) | Starting Station ID Number |\n| **end_station_name** | STRING | Ride's Ending Station Name |\n| **end_station_id** | STRING (Data from November2020 to October2021 uses INTEGER) | Ending Station ID Number |\n| **start_lat** | FLOAT | Starting Station Coordinates (Latitude) |\n| **start_lng** | FLOAT | Starting Station Coordinates (Longitude) |\n| **end_lat** | FLOAT | Ending Station Coordinates (Latitude) |\n| **end_lng** | FLOAT | Ending Station Coordinates (Longitude) |\n| **member_casual** | STRING | User Type (Annual Member or Casual User) |","121e25b5":"Daily distance\nFollowing, the calculation shows that difference between average distance covered daily by members with a subscription and casual members is almost similar (2.25 km vs. 2.19 km):","eb418e57":"<a id=\"analysis\"><\/a>\n## Stage 4: Analysis","af3f8df5":"## Stage 2: Prepare\n\nI will use Cyclistic\u2019s historical trip data to analyze and identify trends. [Download the previous 12 months of Cyclistic trip data](https:\/\/divvy-tripdata.s3.amazonaws.com\/index.html) here. (Note: The datasets have a different name because Cyclistic is a fictional company.","d9f8d3c5":"Incorrect data types\nColumns `started_at` and `ended_at` represent timestamps during which the service was provided, however these columns have data type `string`. I am going to convert them to `datetime64` type.","690101cc":"The new column start_date will be useful to represent changing overtime. Basically, I am going to change the format of the started_at parameter to a standard year-month-day type:","2179b8fd":"\nNext, I will be performing data transformation and visualization. All the conclusions will be summarized in the Stage 5.","5a4d0979":"## Stage 3: Cleaning\n\n#### Uploading and processing the data\n\nDuring this case study the common python libraries will be used, namely pandas (working with data frames), numpy (data structures and math operations), matplotlib and seaborn (both for data visualization)","e566567c":"<a id=\"clean_data\"><\/a>","e67d8395":"After visualizing the total distance covered daily, we can see the difference: subscribed members use the service for daily similar purposes (commuting) whereas casual members use it mostly as one time trip, but for a longer distance. Additionally, it is clear that the usage in the first quarter is much lower than in the rest of the year. Most likely this pattern is related to weather conditions:","b457781e":"### Members vs. Casual\nIn the previous section, we determined that the number of rides between Jan - Aug 2021 is 3,596,815. The pie chart below shows that 48.1% of rides were made by casual riders.","5eea89ee":"The data is made available by Motivate International Inc. under this [license](https:\/\/www.divvybikes.com\/data-license-agreement). Privacy is not an issue, as there is no member-identifying information in the dataset (no names or credit card info). The data appears accurate and consistent throughout, and the license offered by Motivate provides initial assurance that their data collection and organization is trustworthy.  \n\nSince the data shows when, where, and how long riders used the service, as well as their membership status, then it will be possible to garner information about how casual users and annual members use the service differently. Unfortunately, there is no way to know how often a single user used the service, or how many rides they took before converting to membership, and there is no way to know where the users actually live.","b56825a0":"<a id=\"setup\"><\/a>"}}