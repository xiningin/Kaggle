{"cell_type":{"36e1ce12":"code","fca0db71":"code","2e6aaa72":"code","462d91d0":"code","4d4d5924":"code","bd77b178":"code","4df5b87b":"markdown"},"source":{"36e1ce12":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n%matplotlib inline\n\n# from fastai.imports import *\n# from fastai.structured import *\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\n\nbakery_data=pd.read_csv(\"..\/input\/BreadBasket_DMS.csv\")\n\nbakery_data['Date Time']=bakery_data['Date']+\" \"+bakery_data['Time']\n\nbakery_data=bakery_data.drop(['Date','Time'],axis=1)\n","fca0db71":"print(\"Top 5 rows of data\")\n\nprint(bakery_data.head(25))\n\nprint(\"Bottom 5 rows of data\")\n\nprint(bakery_data.tail(5))\n\nprint(len(bakery_data))","2e6aaa72":"bakery_data.dtypes\n#Can Probably ease the memory requirement and speed up processing by formatting datatypes properly.\n\n# bakery_data['Date']=pd.to_datetime(bakery_data['Date'])\n# bakery_data['Time']=pd.to_datetime(bakery_data['Time'])\nbakery_data['Date Time']=pd.to_datetime(bakery_data['Date Time'])\nbakery_data.dtypes\n\n#Types are Proper.Can move Forward.Object dtype is string.","462d91d0":"#Frequency Distribution of Items.\n\nbakery_data['Item'].unique()\n\nlen(bakery_data['Item'].unique())\n\n#95 Unique Items.Must me a big bakery.\n\nbakery_data['Item'].value_counts()\n\n# Most Popular Ordered item is Coffee which is no surprise.I am surprised though that hot chocolate is \n# ordered very less though\n","4d4d5924":"# Mandatory Nan Check\n\nbakery_data.isnull().sum()\n\n# No empty values found so dataset is clean and processed properly.","bd77b178":"# Finding Baskets based on transaction Numbers\n\nbaskets=bakery_data.groupby([\"Transaction\",\"Date Time\",\"Item\"]).groups\n\n# So we have around 19640 Baskets.Let's See if we can find out exactly what these baskets comprise of.\n\nbaskets\n","4df5b87b":"Edit:Can anybody confirm whether the above code is the correct way to get the no of items bought together based on transactions id's and the time on whch they were bought.I plan to use this to check for most ordered basket,finding out if some baskets were popular during some specific time periods or months etc."}}