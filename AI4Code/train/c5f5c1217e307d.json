{"cell_type":{"bdbc46b1":"code","ca721c8e":"code","975b4e59":"code","a7771330":"code","f92ff1b9":"code","19857fe5":"code","87140b46":"code","e8e97be8":"code","3fd361ef":"code","57e46ab8":"code","2cc00a6b":"code","1621e3f6":"code","8eff0298":"code","5d155d5b":"code","2d5e03bb":"code","6240e85b":"code","263212e9":"code","423181c6":"code","c49923cf":"code","78cbe5ad":"code","c91139d3":"code","32e0a114":"code","5a6ebb7e":"code","bccc9e4d":"code","6f9cb324":"code","df349758":"code","52745d0e":"code","1b39ef70":"code","fadfe5a7":"code","2499d79b":"code","c1b512dc":"code","549055af":"code","fad32f79":"code","24d0d3b8":"code","407817ae":"code","3f81debc":"code","d0c6e991":"code","bed58eb9":"code","a2c9e2f5":"code","1140e72b":"code","a0d4247e":"code","9edbbd14":"code","130da677":"code","7f97d027":"code","48e1a1e6":"code","b8c6de9c":"code","357c64ea":"code","1b0cd05a":"code","eea9cc1b":"code","65ae2f69":"code","99d8c759":"code","800080ad":"code","eb9e14bd":"code","57b5c28d":"code","0e84034e":"code","9ee06afe":"code","67763aad":"code","631363bd":"code","7c4bf907":"code","e6dfd97b":"code","85d23229":"code","b44c8052":"code","af664f02":"code","ca6b4d09":"code","a90b49e2":"code","0c062fe6":"code","39166f2e":"code","5124f42e":"code","f3889a87":"code","f4d540a4":"code","b84d6353":"code","c6297db0":"code","9b525385":"code","f8340945":"code","2b7011a9":"code","2406b104":"code","8abf7c1f":"code","24f56174":"code","e615d19b":"code","353c7ce8":"code","61be5af7":"code","620dd823":"code","01ee7956":"code","7b0ec2b6":"code","e25b0ea7":"code","55a4f5da":"code","58270319":"code","27ea6c73":"code","92f188a8":"code","fcac3989":"code","395c0d34":"code","56a2574e":"code","466542aa":"code","6ffd09a0":"code","a83161b2":"code","004b39fa":"code","1414ab13":"code","7fb1abf9":"code","da4a8412":"code","5e1dd36b":"code","2f28068c":"code","11bcf697":"code","3938ebbc":"code","c6d7a745":"code","94e188dd":"code","ecbbd045":"code","4e968268":"code","3826855d":"code","722aa65d":"code","39e561dd":"code","31f6ff0f":"code","f41dcffe":"code","ca58062e":"code","76f7577a":"code","ae7f7c2e":"code","62199853":"code","250c808c":"markdown","44c463e4":"markdown","110b074d":"markdown","58f8fc54":"markdown","9f933acd":"markdown","41625769":"markdown","69ccfbae":"markdown","0ad712b2":"markdown","4a66bd3a":"markdown","fb03a23b":"markdown","78ab993d":"markdown","f716f5cc":"markdown","5a51d54b":"markdown","aac57984":"markdown","d2adbf45":"markdown","211e2c04":"markdown","e8a47c54":"markdown","b02fefcc":"markdown","75cc1d84":"markdown","bfb12b0f":"markdown","7f55856f":"markdown","a0010968":"markdown","3ed26e78":"markdown","609c4d1a":"markdown","cd55e4b9":"markdown","404b7f2d":"markdown","65ed5812":"markdown","c60a6f56":"markdown","76e1d022":"markdown","32a97dd9":"markdown","f906b732":"markdown","7cf35762":"markdown","d6f0cf7f":"markdown","1d8c5c94":"markdown"},"source":{"bdbc46b1":"# importing all the necessry libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ca721c8e":"# To Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')","975b4e59":"# To increase the display size for rows and columns\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)","a7771330":"# Reading the application CSV dataset\ndf1=pd.read_csv(\"..\/input\/loan-defaulter\/application_data.csv\")\ndf1.head()","f92ff1b9":"# Reading the shape\ndf1.shape","19857fe5":"# checking statistics\ndf1.describe()","87140b46":"## Finding columns with greater than 40 % null values \nnull_column =round((df1.isnull().sum()\/len(df1))*100,4) \nnull_column_40 = null_column[null_column.values > 40.0000]\nnull_column_40","e8e97be8":"## Droping the columns more than 40%  null values \nnull_column_40 = list(null_column_40.index)\ndf1.drop(labels=null_column_40,axis=1,inplace=True)","3fd361ef":"## After anlysing we found many more columns that is not required for the analysis and dropping the same.\nlist1=['NAME_TYPE_SUITE','REGION_POPULATION_RELATIVE','DAYS_REGISTRATION','DAYS_ID_PUBLISH','FLAG_MOBIL',\n           'FLAG_EMP_PHONE','FLAG_WORK_PHONE','FLAG_PHONE','FLAG_CONT_MOBILE','FLAG_EMAIL',\n           'REGION_RATING_CLIENT','REGION_RATING_CLIENT_W_CITY','WEEKDAY_APPR_PROCESS_START','HOUR_APPR_PROCESS_START',\n           'REG_REGION_NOT_LIVE_REGION','REG_REGION_NOT_WORK_REGION','LIVE_REGION_NOT_WORK_REGION','REG_CITY_NOT_LIVE_CITY',\n           'REG_CITY_NOT_WORK_CITY','LIVE_CITY_NOT_WORK_CITY','OBS_30_CNT_SOCIAL_CIRCLE','DEF_30_CNT_SOCIAL_CIRCLE',   \n           'OBS_60_CNT_SOCIAL_CIRCLE','OBS_30_CNT_SOCIAL_CIRCLE','DEF_30_CNT_SOCIAL_CIRCLE','OBS_60_CNT_SOCIAL_CIRCLE',\n           'DEF_60_CNT_SOCIAL_CIRCLE','DAYS_LAST_PHONE_CHANGE','FLAG_DOCUMENT_2','FLAG_DOCUMENT_3','FLAG_DOCUMENT_4',\n           'FLAG_DOCUMENT_5','FLAG_DOCUMENT_6','FLAG_DOCUMENT_7','FLAG_DOCUMENT_8','FLAG_DOCUMENT_9','FLAG_DOCUMENT_10',\n           'FLAG_DOCUMENT_11','FLAG_DOCUMENT_12','FLAG_DOCUMENT_13','FLAG_DOCUMENT_14','FLAG_DOCUMENT_15','FLAG_DOCUMENT_16',\n            'FLAG_DOCUMENT_17','FLAG_DOCUMENT_18','FLAG_DOCUMENT_19','FLAG_DOCUMENT_20','FLAG_DOCUMENT_21']\ndf1.drop(labels=list1,axis=1,inplace=True)","57e46ab8":"# Checking data types.\ndf1.dtypes","2cc00a6b":"# Checking for number of unique data in each column\ndf1.nunique().sort_values()","1621e3f6":"## Numeric convertion\nnum_col=['TARGET','CNT_CHILDREN','AMT_INCOME_TOTAL','AMT_CREDIT','AMT_ANNUITY','DAYS_BIRTH',\n                'DAYS_EMPLOYED','EXT_SOURCE_2','EXT_SOURCE_3']\ndf1[num_col]=df1[num_col].apply(pd.to_numeric)","8eff0298":"##  Column -> OCCUPATION_TYPE\ndf1.OCCUPATION_TYPE.value_counts()","5d155d5b":"## Column EXT_SOURCE_2 and 3\nprint(df1.EXT_SOURCE_3.describe())\nprint(df1.EXT_SOURCE_3.describe())","2d5e03bb":"## Columns -> AMT_REQ_CREDIT_BUREAU.*\nprint(df1.AMT_REQ_CREDIT_BUREAU_HOUR.value_counts())\nprint(df1.AMT_REQ_CREDIT_BUREAU_DAY.value_counts())\nprint(df1.AMT_REQ_CREDIT_BUREAU_WEEK.value_counts())\nprint(df1.AMT_REQ_CREDIT_BUREAU_MON.value_counts())\nprint(df1.AMT_REQ_CREDIT_BUREAU_QRT.value_counts())\nprint(df1.AMT_REQ_CREDIT_BUREAU_YEAR.value_counts())","6240e85b":"## Column -> AMT_ANNUITY\ndf1.AMT_ANNUITY.describe()","263212e9":" ## The max and mean are having huge difference, so we are imputing with median\ndf1.loc[df1['AMT_ANNUITY'].isnull(),'AMT_ANNUITY']=df1['AMT_ANNUITY'].median()\n## Column ->AMT_GOODS_PRICE\ndf1.AMT_GOODS_PRICE.describe()","423181c6":"## filling the missing values with mean \ndf1.loc[df1['AMT_GOODS_PRICE'].isnull(),'AMT_GOODS_PRICE']=df1['AMT_GOODS_PRICE'].mean()\n## Column -> CNT_FAM_MEMBERS\ndf1.loc[df1['CNT_FAM_MEMBERS'].isnull()]","c49923cf":"# Replacing with 1 for missing values.\ndf1['CNT_FAM_MEMBERS'].fillna(1.0,inplace=True)","78cbe5ad":"## Column -> CODE_GENDER\ndf1.CODE_GENDER.value_counts()","c91139d3":"##  We need to convert this column to numeric which will be a good field for correlation. \n## So converting to 0 and 1 ( Male and Female ). XNA as 1.\ndf1['CODE_GENDER'].replace({\"F\":1, \"M\":0,\"XNA\":1}, inplace=True)\ndf1['CODE_GENDER']=df1['CODE_GENDER'].astype(int)","32e0a114":"## Convertion Y\/N to 1 and 0 respectively for OWN_CAR and OWN_REALTY as these two fields are good for \n## correlation analyis( correlation consider only numeric fields)\ndf1['FLAG_OWN_CAR'].replace({\"Y\":1, \"N\":0}, inplace=True)\ndf1['FLAG_OWN_REALTY'].replace({\"Y\":1, \"N\":0}, inplace=True)","5a6ebb7e":"## Column -> FAMILY_STATUS\ndf1.NAME_FAMILY_STATUS.value_counts()","bccc9e4d":"## When we took unknown family status, cannot impute as number of children is unknown and retaining as unknown itself\ndf1[df1['NAME_FAMILY_STATUS']==\"Unknown\"]","6f9cb324":"## Column -> ORGANIZATION_TYPE\ndf1.ORGANIZATION_TYPE.value_counts()","df349758":"## The second manjority is 'XNA' for Organization type . However we cannot convert to any valid values, so converting \n## them to Nan. However it will increase the NaN to 18%\ndf1.loc[df1['ORGANIZATION_TYPE'] == 'XNA', 'ORGANIZATION_TYPE'] = np.NaN","52745d0e":"## Checking Days birth and days employed fields\nprint(df1['DAYS_BIRTH'].value_counts())\nprint(df1['DAYS_EMPLOYED'].value_counts())","1b39ef70":"## adding a new column called  age group. Takking the floor value of 'Age' to get in integers.\ndf1['AGE']=abs(df1[\"DAYS_BIRTH\"]\/\/365)\nslots = ['0-20','20-30','30-40','40-50','50-60','60-70','70 and above']\nbins = [0,20,30,40,50,60,70,100]\ndf1['AGE_GROUP']=pd.cut(df1['AGE'],bins,labels=slots)","fadfe5a7":"#Removing the column Age\ndf1=df1.drop('AGE',axis=1)","2499d79b":"## Majority of the records with 365243 are without payment difficulties. May be it is a default or maxiumum value. \n## So filling with Nan\ndf1.loc[df1['DAYS_EMPLOYED'] == 365243, 'DAYS_EMPLOYED'] = np.nan","c1b512dc":"# Plotting to see the Days employed column\nabs(df1['DAYS_EMPLOYED']).plot.hist(title = 'Employment days')\nplt.xlabel('Days of Employment')","549055af":"## adding a new column with years of experience . Taking the floor value to get as integer.\ndf1[\"YEARS_EXPERIENCE\"]=abs(df1[\"DAYS_EMPLOYED\"]\/\/365)","fad32f79":"# Removing days employed and days birth as they are not required for the analysis\ndf1=df1.drop('DAYS_EMPLOYED',axis=1)\ndf1=df1.drop('DAYS_BIRTH',axis=1)","24d0d3b8":"## Since we have different income category of people it is good to bin the income slot to do the analysis. \n## Adding a new column to see the income range.\nslots = ['0-50000','50000-100000','100000-150000', '150000-200000','200000-250000','250000-300000',\n        '300000-350000','350000-400000','400000-450000','450000-500000','500000 and above']\nbins = [0,50000,100000,150000,200000,250000,300000,350000,400000,450000,500000,10000000000]\ndf1['AMT_INCOME_RANGE']=pd.cut(df1['AMT_INCOME_TOTAL'],bins,labels=slots)","407817ae":"## Checking for Outliers in AMT_ANNUITY and AMT_GOODS_PRICE columns.\nprint(df1['AMT_ANNUITY'].quantile([0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,0.95,0.99,0.999,1]))\nprint(df1['AMT_GOODS_PRICE'].quantile([0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,.95,.99,.999,1]))","3f81debc":"# Vizualising the outliers for AMT_ANNUITY\ndf1.boxplot(column='AMT_ANNUITY',figsize=(4,4))","d0c6e991":"# Identifyin the record with max value.\ndf1.loc[df1['AMT_ANNUITY'] >= 258025.5]","bed58eb9":"## Vizualising Amount Annuity and Credit via scatter plot\nplt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\np=sns.scatterplot(x=\"AMT_ANNUITY\", y=\"AMT_CREDIT\", data=df1)\nplt.xticks(rotation='vertical')\n#plt.ylabel(\" Counts\")\nplt.title(\" Annuity vs Credit\")","a2c9e2f5":"## Checking for outliers in AMT_INCOME_TOTAL\ndf1.boxplot(column='AMT_INCOME_TOTAL',figsize=(4,4))","1140e72b":"#Checking what is the occupation type of the person with highest AMT_INCOME_TOTAL\ndf1.loc[df1['AMT_INCOME_TOTAL'] == df1['AMT_INCOME_TOTAL'].max(), ['AMT_INCOME_TOTAL','OCCUPATION_TYPE']]","a0d4247e":"## Handling outliers using Zscore appraoch - Finding the rows which are more than 3 standard deviation from the Mean. \nfrom scipy import stats\nout= df1[np.abs(stats.zscore(df1['AMT_INCOME_TOTAL'])) >3]\nprint(len(out))","9edbbd14":"## Analysing CNT_CHILDREN \nprint(df1.CNT_CHILDREN.value_counts())\ndf1.boxplot(column='CNT_CHILDREN',figsize=(4,4))","130da677":"## Analysing AMT_CREDIT column\nprint(df1.AMT_CREDIT.describe())\ndf1.boxplot(column='AMT_CREDIT',figsize=(4,4))","7f97d027":"df1.loc[df1['AMT_CREDIT'] == df1['AMT_CREDIT'].max(), ['AMT_CREDIT','OCCUPATION_TYPE']]","48e1a1e6":"## Checking the imbalance with Target column\n(df1.TARGET.sum()\/len(df1))*100","b8c6de9c":"## Vizualising the % of Defaulters vs Non Defaulters in the dataset.\n## 1 indicates Defaulters and 0 indicates non defaulters.\ndf1.TARGET.value_counts(normalize=True).plot.pie(autopct='%1.1f%%')","357c64ea":"### Imbalance ratio\ntarget0_df=df1.loc[df1[\"TARGET\"]==0]\ntarget1_df=df1.loc[df1[\"TARGET\"]==1]\nratio=round(len(target0_df)\/len(target1_df),2)\nprint(\"Imbalance ratio from Defaulters to non Defaulters is -> 1 :\",ratio)","1b0cd05a":"## Univarte Analysis of AMOUNT\/EXT\/BUREAU\/Years fields\ncol = ['AMT_INCOME_TOTAL', 'AMT_CREDIT','AMT_ANNUITY', 'AMT_GOODS_PRICE','EXT_SOURCE_2','EXT_SOURCE_3',\n       'AMT_REQ_CREDIT_BUREAU_YEAR','YEARS_EXPERIENCE']\n# Plotting using box plot.. Removing the oulliers using showfliers command\nfor i in col:\n    plt.figure(figsize=(18,8))\n    plt.subplot(1,2,1)\n    target0_df.boxplot(column=i,showfliers=False)\n    plt.title('Non Defaulters (Target = 0)')\n    plt.subplot(1,2,2)\n    target1_df.boxplot(column=i,showfliers=False)\n    plt.title('Defaulters (Target = 1)')\n","eea9cc1b":"## Univarte analysis on Occupation type\nplt.figure(figsize=(25,18))\nplt.subplot(1,2,1)\np = sns.countplot(data=target0_df, x= 'OCCUPATION_TYPE')\nplt.xticks(rotation='vertical')\nplt.ylabel(\" Counts\")\nplt.title(\"Target = 0\")\nplt.subplot(1,2,2)\np = sns.countplot(data=target1_df, x= 'OCCUPATION_TYPE')\nplt.xticks(rotation='vertical')\nplt.ylabel(\" Counts\")\nplt.title(\"Target = 1\")","65ae2f69":"## Univarte analysis on Gender\nplt.figure(figsize=(12,5))\nplt.subplot(1,2,1)\nax = sns.countplot(data=target0_df, x= 'CODE_GENDER')\nplt.ylabel(\" Counts\")\nplt.title(\"Target = 0\")\ntotal = len(target0_df)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x() + p.get_width() + 0.03\n        y = p.get_y() + p.get_height()\/3\n        ax.annotate(percentage, (x, y))\nplt.subplot(1,2,2)\nax = sns.countplot(data=target1_df, x= 'CODE_GENDER')\nplt.ylabel(\"Counts\")\nplt.title(\"Target = 1\")\n\ntotal = len(target1_df)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x() + p.get_width() + 0.03\n        y = p.get_y() + p.get_height()\/3\n        ax.annotate(percentage, (x, y))","99d8c759":"## Univarate Analysis on Number of children\nplt.figure(figsize=(13,8))\nplt.subplot(1,2,1)\np = sns.countplot(data=target0_df, x= 'CNT_CHILDREN')\nplt.title(\"Target = 0\")\nplt.subplot(1,2,2)\np = sns.countplot(data=target1_df, x= 'CNT_CHILDREN')\nplt.title(\"Target = 1\")","800080ad":"# Univarate analysis on NAME_CONTRACT_TYPE\nplt.figure(figsize=(12,5))\nplt.subplot(1,2,1)\nax = sns.countplot(data=target0_df, x= 'NAME_CONTRACT_TYPE')\ntotal = len(target0_df)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height()\/2\n        ax.annotate(percentage, (x, y))\nplt.ylabel(\" Counts\")\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\nax = sns.countplot(data=target1_df, x= 'NAME_CONTRACT_TYPE')\ntotal = len(target1_df)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height()\/2\n        ax.annotate(percentage, (x, y))\nplt.ylabel(\" Counts\")\nplt.title(\"Target 1\")","eb9e14bd":"# Univarate analysis on OWN CAR\nplt.figure(figsize=(8,8))\nplt.subplot(1,2,1)\nax = sns.countplot(data=target0_df, x= 'FLAG_OWN_CAR')\ntotal = len(target0_df)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height()\/2\n        ax.annotate(percentage, (x, y))\n        \nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\nax = sns.countplot(data=target1_df, x= 'FLAG_OWN_CAR')\ntotal = len(target1_df)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height()\/2\n        ax.annotate(percentage, (x, y))\nplt.title(\"Target 1\")","57b5c28d":"# Univarate analysis on Income Type\nplt.figure(figsize=(10,6))\nplt.subplot(1,2,1)\np = sns.countplot(data=target0_df, x= 'NAME_INCOME_TYPE')\nplt.xticks(rotation='vertical')\nplt.ylabel(\" Counts\")\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(data=target1_df, x= 'NAME_INCOME_TYPE')\nplt.xticks(rotation='vertical')\nplt.ylabel(\" Counts\")\nplt.title(\"Target 1\")","0e84034e":"# Univarate analysis on Family Status\nplt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nax = sns.countplot(data=target0_df, x= 'NAME_FAMILY_STATUS')\nplt.xticks(rotation='vertical')\n\ntotal = len(target0_df)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height()\/1.25\n        ax.annotate(percentage, (x, y))\n\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\nax = sns.countplot(data=target1_df, x= 'NAME_FAMILY_STATUS')\nplt.xticks(rotation='vertical')\n    \n\ntotal = len(target1_df)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height()\/1.25\n        ax.annotate(percentage, (x, y))\n\n\nplt.title(\"Target 1\")","9ee06afe":"# Univarate analysis on Housing Type\nplt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nax= sns.countplot(data=target0_df, x= 'NAME_HOUSING_TYPE')\n\n\ntotal = len(target0_df)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height()\/1.25\n        ax.annotate(percentage, (x, y))\nplt.xticks(rotation='vertical')\nplt.ylabel(\" Counts\")\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\nax = sns.countplot(data=target1_df, x= 'NAME_HOUSING_TYPE')\n\n\ntotal = len(target1_df)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height()\/1.25\n        ax.annotate(percentage, (x, y))\nplt.xticks(rotation='vertical')\nplt.ylabel(\" Counts\")\nplt.title(\"Target 1\")","67763aad":"# Univarate analysis on Organization type\nplt.figure(figsize=(25,18))\nplt.subplot(1,2,1)\np = sns.countplot(data=target0_df, y= 'ORGANIZATION_TYPE')\nplt.xlabel(\" Counts\")\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(data=target1_df, y= 'ORGANIZATION_TYPE')\nplt.xlabel(\" Counts\")\nplt.title(\"Target 1\")","631363bd":"# Univarate analysis on Age group\nplt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\np = sns.countplot(data=target0_df, x= 'AGE_GROUP')\nplt.ylabel(\" Counts\")\nplt.xticks(rotation='vertical')\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(data=target1_df, x= 'AGE_GROUP')\nplt.xlabel(\" Counts\")\nplt.xticks(rotation='vertical')\nplt.title(\"Target 1\")","7c4bf907":"# Univarate analysis on Income Range\nplt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\np = sns.countplot(data=target0_df, x= 'AMT_INCOME_RANGE')\nplt.xticks(rotation='vertical')\nplt.ylabel(\" Counts\")\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(data=target1_df, x= 'AMT_INCOME_RANGE')\nplt.xticks(rotation='vertical')\nplt.xlabel(\" Counts\")\nplt.title(\"Target 1\")","e6dfd97b":"# Univarate analysis of AGE group and Family members\nplt.figure(figsize=(20,10))\nplt.subplot(1,2,1)\np = sns.countplot(x = \"AGE_GROUP\", hue= 'CNT_FAM_MEMBERS', data = target0_df)\nplt.xticks(rotation='vertical')\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(x = \"AGE_GROUP\", hue= 'CNT_FAM_MEMBERS', data = target1_df)\nplt.xticks(rotation='vertical')\nplt.title(\"Target 1\")","85d23229":"# Univarate Analysis of Education type and Bureau calls.\nplt.figure(figsize=(20,8))\nplt.subplot(1,2,1)\np = sns.countplot(x = \"NAME_EDUCATION_TYPE\", hue= 'AMT_REQ_CREDIT_BUREAU_YEAR', data = target0_df)\nplt.xticks(rotation='vertical')\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(x = \"NAME_EDUCATION_TYPE\", hue= 'AMT_REQ_CREDIT_BUREAU_YEAR', data = target1_df)\nplt.xticks(rotation='vertical')\nplt.title(\"Target 1\")","b44c8052":"## Univariate analysis on Age group an Number of children\nplt.figure(figsize=(20,10))\nplt.subplot(1,2,1)\np = sns.countplot(x = \"AGE_GROUP\", hue= 'CNT_CHILDREN', data = target0_df)\nplt.xticks(rotation='vertical')\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(x = \"AGE_GROUP\", hue= 'CNT_CHILDREN', data = target1_df)\nplt.xticks(rotation='vertical')\nplt.title(\"Target 1\")","af664f02":"# Univarate Analysis of Age group with Education type.\nplt.figure(figsize=(20,8))\nplt.subplot(1,2,1)\np = sns.countplot(x = \"AGE_GROUP\", hue= 'NAME_EDUCATION_TYPE', data = target0_df)\nplt.xticks(rotation='vertical')\n#plt.ylabel(\" Counts\")\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(x = \"AGE_GROUP\", hue= 'NAME_EDUCATION_TYPE', data = target1_df)\nplt.xticks(rotation='vertical')\n#plt.ylabel(\" Counts\")\nplt.title(\"Target 1\")\n","ca6b4d09":"# Univarate Analysis Income range with Family members.\nplt.figure(figsize=(20,8))\nplt.subplot(1,2,1)\np = sns.countplot(x = \"AMT_INCOME_RANGE\", hue= 'CNT_FAM_MEMBERS', data = target0_df)\nplt.xticks(rotation='vertical')\n#plt.ylabel(\" Counts\")\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(x = \"AMT_INCOME_RANGE\", hue= 'CNT_FAM_MEMBERS', data = target1_df)\nplt.xticks(rotation='vertical')\n#plt.ylabel(\" Counts\")\nplt.title(\"Target 1\")","a90b49e2":"# Bivariate Analysis of EXT souce 2 and income total\nplt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\np = sns.scatterplot(y=\"EXT_SOURCE_3\", x=\"AMT_INCOME_TOTAL\", data=target0_df)\nplt.xticks(rotation='vertical')\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.scatterplot(y=\"EXT_SOURCE_3\", x=\"AMT_INCOME_TOTAL\", data=target1_df)\nplt.xticks(rotation='vertical')\nplt.title(\"Target 1\") ","0c062fe6":"# Bivariate Analysis of EXT source 2 and Amount Credit\nplt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\np = sns.scatterplot(y=\"EXT_SOURCE_3\", x=\"AMT_CREDIT\", data=target0_df)\nplt.xticks(rotation='vertical')\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.scatterplot(y=\"EXT_SOURCE_3\", x=\"AMT_CREDIT\", data=target1_df)\nplt.xticks(rotation='vertical')\nplt.title(\"Target 1\")","39166f2e":" #Bivariate Analysis of Years Experience and Amount Income total\nplt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\np=sns.scatterplot(y=\"YEARS_EXPERIENCE\", x=\"AMT_INCOME_TOTAL\", data=target0_df)\nplt.xticks(rotation='vertical')\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.scatterplot(y=\"YEARS_EXPERIENCE\", x=\"AMT_INCOME_TOTAL\", data=target1_df)\nplt.xticks(rotation='vertical')\nplt.title(\"Target 1\")","5124f42e":"# Bivariate Analysis with box plot for Target 0 ->Occupation type vs Credit\nsns.catplot(data =target0_df, x='OCCUPATION_TYPE', y='AMT_CREDIT',kind='box',color='b',showfliers=False)\nplt.xticks(rotation='vertical')\nplt.title(\"Occupation vs Credit Amount\")","f3889a87":"# Bivariate Analysis with box plot for Target 1 ->Occupation type vs Credit\nsns.catplot(data =target1_df, x='OCCUPATION_TYPE', y='AMT_CREDIT',kind='box',color='b',showfliers=False)\nplt.xticks(rotation='vertical')\nplt.title(\"Occupation vs Credit Amout\")","f4d540a4":"# Bivariate Analysis with box plot for Target 0 ->Occupation type vs Income Total\nsns.boxplot(data =target0_df, x='OCCUPATION_TYPE', y='AMT_INCOME_TOTAL',color='b',showfliers=False)\nplt.xticks(rotation='vertical')\nplt.title(\"Occupation Type vs Income total\")","b84d6353":"# Plotting with Family status\/Income Total and education type\nplt.figure(figsize=(16,12))\nsns.boxplot(data =target1_df, x='NAME_FAMILY_STATUS', y='AMT_INCOME_TOTAL', hue ='NAME_EDUCATION_TYPE',showfliers=False)\nplt.title('Income Total\/Family Status')\nplt.show()","c6297db0":"# Plotting with Family Status\/Occupation type and Credit amount\nplt.figure(figsize=(16,12))\nsns.boxplot(data =target1_df, x='NAME_FAMILY_STATUS', y='AMT_CREDIT', hue ='OCCUPATION_TYPE',showfliers=False)\nplt.title('Family Status \/ Occupation type \/ Credit amount')\nplt.show()","9b525385":"## Converting Age group from Category to Numeric as we need this column for correlation analysis.\n\ntarget0_df.AGE_GROUP.replace({\"0-20\":1,\"20-30\":2,\"30-40\" :3,\"40-50\":4,\"50-60\":5,\"60-70\":6,\"70 and above\": 7},\n                              inplace=True)\ntarget0_df.loc[:,'AGE_GROUP'] = pd.to_numeric(target0_df['AGE_GROUP'], errors = 'coerce')\ntarget1_df.AGE_GROUP.replace({\"0-20\":1,\"20-30\":2,\"30-40\" :3,\"40-50\":4,\"50-60\":5,\"60-70\":6,\"70 and above\": 7},\n                              inplace=True)\ntarget1_df.loc[:,'AGE_GROUP'] = pd.to_numeric(target1_df['AGE_GROUP'], errors = 'coerce')","f8340945":"## Converting AMT_INCOME_RANGE from Category to Numeric as we need this column for correlation analysis.\n\ntarget0_df.AMT_INCOME_RANGE.replace({\"50000-100000\":1,\"100000-150000\":2,\"150000-200000\": 3,\"200000-250000\": 4,\n                                     \"200000-250000\": 5,\"250000-300000\": 6,\"300000-350000\": 7,\"350000-400000\": 8,\n                                      \"400000-450000\": 9,\"450000-500000\": 10,\"500000 and above\": 11},\n                                      inplace=True)\ntarget0_df.loc[:,'AMT_INCOME_RANGE'] = pd.to_numeric(target0_df['AMT_INCOME_RANGE'], errors = 'coerce')\ntarget1_df.AMT_INCOME_RANGE.replace({\"50000-100000\":1,\"100000-150000\":2,\"150000-200000\": 3,\"200000-250000\": 4,\n                                     \"200000-250000\": 5,\"250000-300000\": 6,\"300000-350000\": 7,\"350000-400000\": 8,\n                                      \"400000-450000\": 9,\"450000-500000\": 10,\"500000 and above\": 11},\n                                      inplace=True)\ntarget1_df.loc[:,'AMT_INCOME_RANGE'] = pd.to_numeric(target1_df['AMT_INCOME_RANGE'], errors = 'coerce')","2b7011a9":"# Correlation matrix columns -> Removed ID, Target, AMOUNT_INCOME_TOTAL( Kept Income range instead) ,\n# Bureau fields others than Year\n\ntarget0_corr=target0_df[['NAME_CONTRACT_TYPE', 'CODE_GENDER',\n       'FLAG_OWN_CAR', 'FLAG_OWN_REALTY', 'CNT_CHILDREN', \n       'AMT_CREDIT', 'AMT_ANNUITY', 'AMT_GOODS_PRICE', 'NAME_INCOME_TYPE',\n       'NAME_EDUCATION_TYPE', 'NAME_FAMILY_STATUS', 'NAME_HOUSING_TYPE',\n       'OCCUPATION_TYPE', 'CNT_FAM_MEMBERS', 'ORGANIZATION_TYPE',\n       'EXT_SOURCE_2', 'EXT_SOURCE_3', 'AMT_REQ_CREDIT_BUREAU_YEAR', 'AGE_GROUP', 'YEARS_EXPERIENCE',\n       'AMT_INCOME_RANGE']]\ntarget1_corr=target1_df[['NAME_CONTRACT_TYPE', 'CODE_GENDER',\n       'FLAG_OWN_CAR', 'FLAG_OWN_REALTY', 'CNT_CHILDREN',\n       'AMT_CREDIT', 'AMT_ANNUITY', 'AMT_GOODS_PRICE', 'NAME_INCOME_TYPE',\n       'NAME_EDUCATION_TYPE', 'NAME_FAMILY_STATUS', 'NAME_HOUSING_TYPE',\n       'OCCUPATION_TYPE', 'CNT_FAM_MEMBERS', 'ORGANIZATION_TYPE',\n       'EXT_SOURCE_2', 'EXT_SOURCE_3','AMT_REQ_CREDIT_BUREAU_YEAR', 'AGE_GROUP', 'YEARS_EXPERIENCE',\n       'AMT_INCOME_RANGE']] \n\ntarget0=target0_corr.corr()\ntarget1=target1_corr.corr()","2406b104":"# Seeing Target0\ntarget0","8abf7c1f":"# Seeing Target1\ntarget1","24f56174":"# Finding Top 10 correlation matrix for Target = 0\ncorrdf = target0.where(np.triu(np.ones(target0.shape), k=1).astype(np.bool))\ncorrdf = corrdf.unstack().reset_index()\ncorrdf.columns = ['Variable_1', 'Variable_2', 'Correlation']\ncorrdf.dropna(subset = ['Correlation'], inplace = True)\ncorrdf['Correlation'] = round(corrdf['Correlation'], 2)\ncorrdf['Correlation'] = abs(corrdf['Correlation'])\ncorrdf.sort_values(by = 'Correlation', ascending = False).reset_index(drop=True).head(10)","e615d19b":"# Top 10 correlation matrix for Target = 1\n\ncorrdf = target1.where(np.triu(np.ones(target1.shape), k=1).astype(np.bool))\ncorrdf = corrdf.unstack().reset_index()\ncorrdf.columns = ['Variable_1', 'Variable_2', 'Correlation']\ncorrdf.dropna(subset = ['Correlation'], inplace = True)\ncorrdf['Correlation'] = round(corrdf['Correlation'], 2)\ncorrdf['Correlation'] = abs(corrdf['Correlation'])\ncorrdf.sort_values(by = 'Correlation', ascending = False).reset_index(drop=True).head(10)","353c7ce8":"# Vizualisation of correlation using Heat map.\n\ndef corr_matrix(data,title):\n    plt.figure(figsize=(10, 12))\n    plt.rcParams['axes.titlesize'] = 25\n    plt.rcParams['axes.titlepad'] = 50\n # masking the upper side   \n    mask = np.zeros_like(data, dtype=np.bool)\n    mask[np.triu_indices_from(mask)] = True\n\n    # Want diagonal elements as well\n    mask[np.diag_indices_from(mask)] = False\n\n# heatmap with a color map of choice\n    ax=sns.heatmap(data, cmap=\"YlGnBu\",mask=mask,annot=True,linewidth=.3)\n    bottom, top = ax.get_ylim()\n    ax.set_ylim(bottom + 0.5, top - 0.5)\n    plt.title(title)\n    plt.yticks(rotation=0)\n    plt.show()\n","61be5af7":"# For Target 0\ncorr_matrix(data=target0,title='Correlation matrix for Target 0')","620dd823":"# For Target 1\ncorr_matrix(data=target1,title='Correlation matrix for Target 1')","01ee7956":"# Reading the application CSV dataset\ndf2=pd.read_csv(r\"..\/input\/loan-defaulter\/previous_application.csv\")\ndf2.head()","7b0ec2b6":"# Checking the information\ndf2.info()","e25b0ea7":"# Checking the statistics\ndf2.describe()","55a4f5da":"## Chekcing for missing values\ndf2.isnull().sum()","58270319":"# Removing null columns greater than 40 percent\nnull_column_prev =round((df2.isnull().sum()\/len(df2))*100,4) \nnull_column_40_prev = null_column_prev[null_column_prev.values > 40.0000]\nnull_column_40_prev = list(null_column_40_prev.index)\ndf2.drop(labels=null_column_40_prev,axis=1,inplace=True)","27ea6c73":"## Removing some more columns which are not important\nlist2  = ['WEEKDAY_APPR_PROCESS_START', 'HOUR_APPR_PROCESS_START','FLAG_LAST_APPL_PER_CONTRACT', 'NFLAG_LAST_APPL_IN_DAY',\n          'DAYS_DECISION','NAME_PAYMENT_TYPE','NAME_CLIENT_TYPE','SELLERPLACE_AREA','CNT_PAYMENT','NAME_YIELD_GROUP',\n          'PRODUCT_COMBINATION']\ndf2.drop(labels=list2,axis=1,inplace=True)","92f188a8":"## Merging application CSV and previous application using SKI_ID_CURR\nmerge_out = pd.merge(df1, df2, how='inner', on=('SK_ID_CURR'))","fcac3989":"# Seeing the merge dataset\nmerge_out.head()","395c0d34":"## Replacing XNA and XAP with Nan for few of the columns as they are required for the analysis.\nmerge_out.loc[merge_out['NAME_CASH_LOAN_PURPOSE']=='XNA','NAME_CASH_LOAN_PURPOSE'] = np.NaN\nmerge_out.loc[merge_out['NAME_CASH_LOAN_PURPOSE']=='XAP','NAME_CASH_LOAN_PURPOSE'] = np.NaN \nmerge_out.loc[merge_out['NAME_PORTFOLIO']=='XNA','NAME_PORTFOLIO'] = np.NaN \nmerge_out.loc[merge_out['NAME_GOODS_CATEGORY']=='XNA','NAME_GOODS_CATEGORY'] = np.NaN","56a2574e":"merge_out.info()","466542aa":"## Splitting merge-out dataset based on Target fields.\nmer_tar0 = merge_out[merge_out['TARGET'] == 0]\nmer_tar1 = merge_out[merge_out['TARGET'] == 1]","6ffd09a0":"## column Name contract Status\nplt.figure(figsize=(20,8))\nplt.subplot(1,2,1)\nax = sns.countplot(data=mer_tar0, x= 'NAME_CONTRACT_STATUS')\nplt.xticks(rotation='vertical')\ntotal = len(mer_tar0)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x() + p.get_width() + 0.03\n        y = p.get_y() + p.get_height()\/3\n        ax.annotate(percentage, (x, y))\nplt.ylabel(\" Counts\")\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\nax = sns.countplot(data=mer_tar1, x= 'NAME_CONTRACT_STATUS')\nplt.xticks(rotation='vertical')\ntotal = len(mer_tar1)\nfor p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x() + p.get_width() + 0.03\n        y = p.get_y() + p.get_height()\/3\n        ax.annotate(percentage, (x, y))\nplt.ylabel(\" Counts\")\nplt.title(\"Target 1\")","a83161b2":"# Column Goods category\nplt.figure(figsize=(20,8))\nplt.subplot(1,2,1)\np = sns.countplot(data=mer_tar0, x= 'NAME_GOODS_CATEGORY')\nplt.xticks(rotation='vertical')\nplt.ylabel(\" Counts\")\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(data=mer_tar1, x= 'NAME_GOODS_CATEGORY')\nplt.xticks(rotation='vertical')\nplt.ylabel(\" Counts\")\nplt.title(\"Target 1\")","004b39fa":"# Column Name Portfolio\nplt.figure(figsize=(20,8))\nplt.subplot(1,2,1)\np = sns.countplot(data=mer_tar0, x= 'NAME_PORTFOLIO')\nplt.xticks(rotation='vertical')\nplt.ylabel(\" Counts\")\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(data=mer_tar1, x= 'NAME_PORTFOLIO')\nplt.xticks(rotation='vertical')\nplt.ylabel(\" Counts\")\nplt.title(\"Target 1\")","1414ab13":"# Column Channe1 type\nplt.figure(figsize=(12,4))\nplt.subplot(1,2,1)\np = sns.countplot(data=mer_tar0, x= 'CHANNEL_TYPE')\nax.set(ylabel=\"Percent\")\nplt.xticks(rotation='vertical')\nplt.ylabel(\" Counts\")\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(data=mer_tar1, x= 'CHANNEL_TYPE')\nplt.xticks(rotation='vertical')\nplt.ylabel(\" Counts\")\nplt.title(\"Target 1\")","7fb1abf9":"# Column Cash loan purpose\nplt.figure(figsize=(20,8))\nplt.subplot(1,2,1)\np = sns.countplot(data=mer_tar0, x= 'NAME_CASH_LOAN_PURPOSE')\nplt.xticks(rotation='vertical')\nplt.ylabel(\" Counts\")\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(data=mer_tar1, x= 'NAME_CASH_LOAN_PURPOSE')\nplt.xticks(rotation='vertical')\nplt.ylabel(\" Counts\")\nplt.title(\"Target 1\")","da4a8412":"# Univarate Analysis of education type with contract status\nplt.figure(figsize=(20,8))\nplt.subplot(1,2,1)\np = sns.countplot(x = \"NAME_EDUCATION_TYPE\", hue= 'NAME_CONTRACT_STATUS', data = mer_tar0)\nplt.xticks(rotation='vertical')\n#plt.ylabel(\" Counts\")\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(x = \"NAME_EDUCATION_TYPE\", hue= 'NAME_CONTRACT_STATUS', data = mer_tar1)\nplt.xticks(rotation='vertical')\n#plt.ylabel(\" Counts\")\nplt.title(\"Target 1\")","5e1dd36b":"# Univarate Analysis of education type with contract status\nplt.figure(figsize=(20,8))\nplt.subplot(1,2,1)\np = sns.countplot(x = \"NAME_INCOME_TYPE\", hue= 'NAME_CONTRACT_STATUS', data = mer_tar0)\nplt.xticks(rotation='vertical')\n#plt.ylabel(\" Counts\")\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(x = \"NAME_INCOME_TYPE\", hue= 'NAME_CONTRACT_STATUS', data = mer_tar1)\nplt.xticks(rotation='vertical')\n#plt.ylabel(\" Counts\")\nplt.title(\"Target 1\")","2f28068c":"# Univarate Analysis of education type with contract status\nplt.figure(figsize=(20,8))\nplt.subplot(1,2,1)\np = sns.countplot(x = \"OCCUPATION_TYPE\", hue= 'NAME_CONTRACT_STATUS', data = mer_tar0)\nplt.xticks(rotation='vertical')\n#plt.ylabel(\" Counts\")\nplt.title(\"Target 0\")\nplt.subplot(1,2,2)\np = sns.countplot(x = \"OCCUPATION_TYPE\", hue= 'NAME_CONTRACT_STATUS', data = mer_tar1)\nplt.xticks(rotation='vertical')\n#plt.ylabel(\" Counts\")\nplt.title(\"Target 1\")","11bcf697":"# Univarate Analysis of Goods category with Contarct status for -> Target  1\nplt.figure(figsize=(10,8))\nsns.countplot(data =mer_tar1,hue='NAME_CONTRACT_STATUS',x='NAME_GOODS_CATEGORY')\nplt.xticks(rotation='vertical')\n#plt.ylabel(\" Counts\")\nplt.title(\"Target 1\")","3938ebbc":"# Univarate Analysis of AGE group with Contract Status for Target 1\nplt.figure(figsize=(10,8))\nsns.countplot(data =mer_tar1,hue='NAME_CONTRACT_STATUS',x='AGE_GROUP')\nplt.xticks(rotation='vertical')\n#plt.ylabel(\" Counts\")\nplt.title(\"Target 1\")","c6d7a745":"# Plotting Education type with Previous credit amount For Target 1\nplt.figure(figsize=(16,12))\nsns.boxplot(data =mer_tar1, x='NAME_EDUCATION_TYPE', y='AMT_CREDIT_y', hue ='NAME_CONTRACT_STATUS',showfliers=False)\nplt.title('Previous Credit amount vs Education type')\nplt.show()","94e188dd":"# Plotting Education type with Current credit amount for Target 1\nplt.figure(figsize=(16,12))\nsns.boxplot(data =mer_tar1, x='NAME_EDUCATION_TYPE', y='AMT_CREDIT_x', hue ='NAME_CONTRACT_STATUS',showfliers=False)\nplt.title('Current Credit amount vs Education Type')\nplt.show()","ecbbd045":"# Plotting Education type with Current Annuity amount for Target 1\nplt.figure(figsize=(16,12))\nsns.boxplot(data =mer_tar1, x='NAME_EDUCATION_TYPE', y='AMT_ANNUITY_x', hue ='NAME_CONTRACT_STATUS',showfliers=False)\nplt.title('Current Annuity amount vs Education Type')\nplt.show()","4e968268":"# Plotting Education type with Previous Annuity Amount for Target 1\nplt.figure(figsize=(16,12))\nsns.boxplot(data =mer_tar1, x='NAME_EDUCATION_TYPE', y='AMT_ANNUITY_y', hue ='NAME_CONTRACT_STATUS',showfliers=False)\nplt.title('Previous Annuity vs Education Type')\nplt.show()","3826855d":"## Plotting current contract type with current credit for Target 1\nplt.figure(figsize=(16,12))\nsns.boxplot(data =mer_tar1, x='NAME_CONTRACT_TYPE_x', y='AMT_CREDIT_x', hue ='NAME_CONTRACT_STATUS',showfliers=False)\nplt.title('Current Contract vs Current Credit')\nplt.show()","722aa65d":"## Plotting previous contract type with previous credit for Target 1\nplt.figure(figsize=(16,12))\nsns.boxplot(data =mer_tar1, x='NAME_CONTRACT_TYPE_y', y='AMT_CREDIT_y', hue ='NAME_CONTRACT_STATUS',showfliers=False)\nplt.title('Previous contract type vs Previous credit')\nplt.show()","39e561dd":"## Plotting current goods price with Income type for Target 1\nplt.figure(figsize=(20,8))\nsns.barplot(data =mer_tar1, x='NAME_INCOME_TYPE',hue='NAME_CONTRACT_STATUS',y='AMT_GOODS_PRICE_x')\nplt.title('Current Goods price with Income type')\nplt.show()","31f6ff0f":"# Plotting previous goods price with income type for Target 1\nplt.figure(figsize=(20,8))\nsns.barplot(data =mer_tar1, x='NAME_INCOME_TYPE',hue='NAME_CONTRACT_STATUS',y='AMT_GOODS_PRICE_y')\nplt.title('Previous Goods price with Income type')\nplt.show()","f41dcffe":"# Plotting Goods category with Current credit amount for Target 1\nplt.figure(figsize=(16,12))\nsns.boxplot(data =mer_tar1, hue='NAME_GOODS_CATEGORY', y='AMT_GOODS_PRICE_x', x='NAME_CONTRACT_STATUS',showfliers=False)\nplt.title('Current Credit amount vs Goods category')\nplt.show()","ca58062e":"# Plotting Goods Category with Previous credit amount.\nplt.figure(figsize=(16,12))\nsns.boxplot(data =mer_tar1, hue='NAME_GOODS_CATEGORY', y='AMT_GOODS_PRICE_y', x='NAME_CONTRACT_STATUS',showfliers=False)\nplt.title('Previous Credit amount vs Goods category')\nplt.show()","76f7577a":"# Plotting Income range with Current credit amount for Target 1\nplt.figure(figsize=(16,12))\nsns.boxplot(data =mer_tar1, x='AMT_INCOME_RANGE', y='AMT_CREDIT_x', hue='NAME_CONTRACT_STATUS',showfliers=False)\nplt.title('Current Credit amount vs Income range')\nplt.xticks(rotation='vertical')\nplt.show()","ae7f7c2e":"# Plotting Previous credit  with Income range for Target 1\nplt.figure(figsize=(16,12))\nsns.boxplot(data =mer_tar1, x='AMT_INCOME_RANGE', y='AMT_CREDIT_y', hue='NAME_CONTRACT_STATUS',showfliers=False)\nplt.title('Previous credit  vs amount Income range')\nplt.xticks(rotation='vertical')\nplt.show()","62199853":"## Boxplot vizualisation on Amt fields ( x indicates current and y indicates previous)\ncol = ['AMT_GOODS_PRICE_x', 'AMT_GOODS_PRICE_y','AMT_CREDIT_x', 'AMT_CREDIT_y','AMT_ANNUITY_x','AMT_ANNUITY_y']\n  # Plotting using box plot.. Removing the oulliers using showfliers command\ni=0\nfor j in range(3):\n    plt.figure(figsize=(10,6))\n    plt.subplot(1,2,1)\n    mer_tar1.boxplot(column=col[i],showfliers=False)\n    plt.title(' Current Application')\n    plt.subplot(1,2,2)\n    mer_tar1.boxplot(column=col[i+1],showfliers=False)\n    plt.title('Previous application')\n    i=i+2\n","250c808c":"> ### <font color=green>This is clearly evident that a laborers cannot be in the highest salary category. This is a true outlier and we need to remove it, so we need to analyse more with Zscore method","44c463e4":"> ### <font color=green>There are few outliers in CNT_CHILDREN column .The people who has highest number of children are non married.\nAlso people with more than 10 kids few are not married.\nWe anticipate that those people might be running charity.\nOut of which only 1 person has payment difficulties.","110b074d":"<font color=blue>INTRODUCTION<\/font>\n\nThis case study aims to give us an idea of applying EDA in a real business scenario. In this case study, we develop a basic understanding of risk analytics in banking and financial services and understand how data is used to minimise the risk of losing money while lending to customers.\n\n<font color=blue>BUSINESS OBJECTIVES<\/font>\n\n\nThis case study aims to identify patterns which indicate if a client has difficulty paying their installments which may be used for taking actions such as denying the loan, reducing the amount of loan, lending (to risky applicants) at a higher interest rate, etc. This will ensure that the consumers capable of repaying the loan are not rejected. Identification of such applicants using EDA is the aim of this case study.\n\n \n\nIn other words, the company wants to understand the driving factors (or driver variables) behind loan default, i.e. the variables which are strong indicators of default.  The company can utilise this knowledge for its portfolio and risk assessment.\n\nTo develop your understanding of the domain, you are advised to independently research a little about risk analytics - understanding the types of variables and their significance should be enough).","58f8fc54":"# Univarate Analysis on Merged Dataset","9f933acd":"> ### <font color=green>Concluding the below points about defaulters from the Univariate Segmented plots.\n\n> ### <font color=green>Age group 30 - 50 with 2 family members are more defaulters .Majority of them have secondary education only.\n> ### <font color=green>Most of them in group are having either 0 or 1 kids.\n> ### <font color=green>This age group is making more enquires with the bank in both the case.\n> ### <font color=green>Their income range are in between 1 to 2 lakhs.","41625769":"> ### <font color=green>Other than AMT_REQ_CREDIT_BUREAU_YEAR field all other Bureau fields majority of the records are having zero calls to the customer care.","69ccfbae":"> ### <font color=green>External source 3 is a good column for analysis .Normalized score scattered very less for defaulters. It is less than 10k income range, where as for non defaulters it is distributed well till 2 lakhs.The score for credit is scattered till 1.5 lakhs where as 2 lakhs for non defaulters.\n> ### <font color=green>Defaulters are maintining a low income total compare with non defulters.","0ad712b2":"> ### <font color=green>Days of birth and Days employed are in negative. We need to convert them to positive\nThere is no outliers in Days of birth.\nAdding one more column age group for our analysis","4a66bd3a":"> ### <font color=green>Concluding the below points from Univariate plots\n\n> ### <font color=green>Laborers and Sales staff are more tend to take loans in both case .\n> ### <font color=green>Females are more tend to take loans and more likely to be defaulters too.\n> ### <font color=green>People are preferring Cash loans in both categories.\n> ### <font color=green>Number of children is 1 or 0 in both case.\n> ### <font color=green>Married or unmarried are more likely to take loans.\n> ### <font color=green>Working or commercial associcate are more likely to take loans.\n> ### <font color=green>They are mostly living in House\/ appartment or with parents.\n> ### <font color=green>Busniness entity 2 and Self employed are more likely to take loans.\n> ### <font color=green>There is no defaulters from income category of Student and Businessman\n> ### <font color=green>All age group from 20 to 70 are taking taking loans and most defaulters are in 30-40 age group.\n> ### <font color=green>Defaulters Income range is mostly distributed betweem 1 lakh to 2 lakh . Lowest defaulters are in 4.5lakhs + category.","fb03a23b":"> ### <font color=green>Conculution from above Univariate plots about defaulters.\n\n> ### <font color=green>Loan demand mostly for the purchase of mobile.\n> ### <font color=green>Portfolio type mostly by POS\n> ### <font color=green>Channel type is credit and cash offices.\n> ### <font color=green>Majority of purpose of loan is for repairs.\n> ### <font color=green>More cancelled loans are from secondary\/secondary special educated people.\n> ### <font color=green>More loan cancallation is from Laborers and sales staff occupation.\n> ### <font color=green>Previously approved but now in defaulters are mostly Drivers,Laborers,Sales and Cores staffs and education is of higher education","78ab993d":"> ### <font color=green>There are outliers in both columns, but when we check the maximum value, for both column it is the same record. He has highter education with 1 year experience only.So this records need to be removed.","f716f5cc":"> ### <font color=green>AMT Annuity and Credit showing a linear relationship and it is good to procced with this data.","5a51d54b":"# Handling missing values and invalid data","aac57984":"# Univarate Analysis","d2adbf45":"# Segmented Bivariate Analysis w.r.t Target 1","211e2c04":"# Bivariate Analysis","e8a47c54":"> ### <font color=green>Conclusion from above bivariate analysis\n\n> ### <font color=green>Their credit amout has been increased as the result annuity amount also increased.\n> ### <font color=green> of credit amount starting range is 2.5 to 3 lakhs.\n> ### <font color=green>Academic degress holders has no refusal history.Previoulsy adacemic degree holder credit amount was very > ### <font color=green>less but in current application, their credit amount above 6 lakhs range.\n> ### <font color=green>Previously there were consumer loans now only revolving and cash loans.\n> ### <font color=green>More loan cancellation in previous application due to higher annuity.\n> ### <font color=green>The goods price is increased drastically for almost all the items. Previous approved loans are mostly > ### <font color=green>below 2.5 lakhs worth commodity and in current application the range is from 2.5 lakhs to 7 lakhs above.\n> ### <font color=green>Higher good price, loans are taking by people who are on maternity leave.","b02fefcc":"> ### <font color=green>Amoung defaulters managers and accountants are having more credit amount.Low credit amount are for low skill and waiters.\n> ### <font color=green>Among defaulters, Managers has more income total and cleaning\/cooking\/low skill laborers have low income range.","75cc1d84":"> ### <font color=green>Only 2 records with null values, whome they doesnot have any payment difficulties as well as family status is known. So we are imputing it with default value 1","bfb12b0f":"> ### <font color=green>There are 454 records which shows outliers those needs to be removed.","7f55856f":"> ### <font color=green>For same ID it self NAME_CONTRACT_STATUS is different status, so it is good to keep all the entries\nThere are duplicate column names which are suffixed with _x and _y","a0010968":"# Checking Imbalance in data","3ed26e78":"> ### <font color=green>For defaulters hightest and lowest credit amounts are holding by widows. The highest credit amount people are working as accountants or managers.The lowest credit amount people are working as low skilled laborers","609c4d1a":"> ### <font color=green>The cleaning Staff is a valid data for minimum value","cd55e4b9":"> ### <font color=green>Case study final conclusion\u00b6\n> ### <font color=green>AMT_CREDIT(x and y), AMT_INCOME_TOTAL, DAYS_BIRT(Age group after imputing),NAME_CONTRACT_STATUS, > ### <font color=green>AMT_ANNUITY( x and y),NAM_INCOME_TYPE,Occupation and Organization types are the major fields for analysis.\n> ### <font color=green>The imbalance ratio is too high i.e non defaulters data is 11.38 times more than defaulters.\n> ### <font color=green>Females are more tend to take loans. Among them widows and people who are on maternity leave tend to be > ### <font color=green>more defaulters.\n> ### <font color=green>Majority of loan are taking from age group 30 to 40.\n> ### <font color=green>Married people are taking more loans.\n> ### <font color=green>Most of people who are taking loans has either 0 or 1 children and they are live in House\/Apt or with parents.\n> ### <font color=green>People are preferring more cash loans than revolving.\n> ### <font color=green>Most of the loans are taking for repair works.\n> ### <font color=green>Academic degree holders are asking more credit amount.\n> ### <font color=green>Defaulters are mostly have secondary\/special educaltion only.\n> ### <font color=green>While analysing the previoius application vs current application, we identified the below points why previously approved customers are now in defaulters list.\n\n> ### <font color=green>Amount Good price spreaded for all the items in current application w.r.t previous application.\n> ### <font color=green>Amount Credit and Amount Annuity also increased from previous to current application.\n> ### <font color=green>Plotted a boxplot below for more clarity\n\n> ### <font color=green>It would be good if had a date field in the current and previous application file to see time period on which this data is collected, so that we should had a better picture on why the goods price had increased.","404b7f2d":"> ### <font color=green>Top 10 correlation of Target 0 and Traget 1 are almost same. Rank 3\/ 4 and 8 \/ 9 are interchanged.","65ed5812":"> ### <font color=green>Concluding the below points from the above plots.\n\n> ### <font color=green>Cannot predict anything from the fields AMT_GOODS_PRICE and AMT_ANNUITY as the distribution is almost same for both defaulters and non defaulters.\n> ### <font color=green>For defaulters,Total income range in mostly in Quardile 3 from 1.35 lkahs to 2 lakhs.\n> ### <font color=green>The credit amount is a little lesser for defaulters than non defaulters.\n> ### <font color=green>EXT_SOURCE_2, median is 5.75 for defaulters and 4.9 for non defaulters.\n> ### <font color=green>EXT_SOURCE_3 median is 5.5 for defaulters and 3.9 for non defaulters.\n> ### <font color=green>Defaulters had more phone calls as the AMT_REQ_CREDIT_BUREAU_YEAR median is 2, where as 1 for non defaulters.\n> ### <font color=green>For defaulters the jobs is widely in range between 4 to 7, where as it is 5 to 9 in non defaulters.","c60a6f56":"# Bivariate Analysis\nAnalysis on Merget Target 1 file with Previous and Current columns w.r.t Contract Status","76e1d022":"# Handling outliers","32a97dd9":"# Univarate Segmented Analysis","f906b732":"> ### <font color=green>Among defaulters,Academic degress holders has highest income total and lowest income total is for lower secondary education. These two categories are belongs to widow.","7cf35762":"> ### <font color=green>External source date are normalized source information and imputing with with wrong values may impact the analysis. So leaving the missing values.","d6f0cf7f":"# Correlation","1d8c5c94":"> ### <font color=green>Credit amount maximum for managers and Acccounts which looks valid data."}}