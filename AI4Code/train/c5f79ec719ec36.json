{"cell_type":{"3f1f9628":"code","bec2f4a3":"code","f33bb906":"code","e8a698d1":"code","c9fcdf09":"code","f9bbc2fa":"code","7146e324":"code","126d2579":"code","ff1f2c45":"code","f89d0436":"code","d3c871f7":"code","88db406c":"code","97e2f504":"code","7702b1f7":"code","2b53e85a":"code","13bdd61a":"code","de0b26a1":"code","240398c1":"code","1512d216":"code","9c5f49db":"markdown","e41f0b2f":"markdown","ba07becf":"markdown","21e4b063":"markdown","e5a21ee7":"markdown","31f44cc0":"markdown","3c671ef5":"markdown","31aabe14":"markdown","a402fe0d":"markdown","5fb631a2":"markdown"},"source":{"3f1f9628":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport os\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom keras import layers\nfrom sklearn import preprocessing","bec2f4a3":"def cut_to_n(cut):\n    return ['Fair', 'Good', 'Very Good', 'Premium', 'Ideal'].index(cut)\n\ndef color_to_n(color):\n    return ['D', 'E', 'F', 'G', 'H', 'I','J'].index(color)\n\ndef clarity_to_n(clarity):\n    return ['I1', 'SI2', 'SI1', 'VS2', 'VS1', 'VVS2', 'VVS1', 'IF'].index(clarity)","f33bb906":"data_train = pd.read_csv(\"..\/input\/diamonds-datamad1021-rev\/train.csv\")\ndata_train = data_train.iloc[:,1:]\ndata_train['n_cut'] = data_train['cut'].map(cut_to_n)\ndata_train['n_color'] = data_train['color'].map(color_to_n)\ndata_train['n_clarity'] = data_train['clarity'].map(clarity_to_n)\n","e8a698d1":"fig = px.imshow(data_train.corr())\nfig.show()","c9fcdf09":"data_train = data_train.drop(labels=['cut','color','clarity'],axis=1)","f9bbc2fa":"x = data_train.drop(labels=['price'],axis=1)\ny = data_train['price']","7146e324":"x.head()","126d2579":"data_train.plot.scatter(x=\"y\", y=\"price\", alpha=0.5)\ndata_train.plot.scatter(x=\"carat\", y=\"price\", alpha=0.5)\ndata_train.plot.scatter(x=\"x\", y=\"price\", alpha=0.5)","ff1f2c45":"from sklearn.model_selection import train_test_split\n(\n    X_train,\n    X_test,\n    y_train,\n    y_test,\n    indices_train,\n    indices_test,\n) = train_test_split(x, y,list(data_train.index), test_size=0.25,random_state=21)","f89d0436":"scaler = preprocessing.StandardScaler().fit(X_train)\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)\nX_test.shape","d3c871f7":"from sklearn.ensemble import RandomForestRegressor\nclf = RandomForestRegressor()\nclf.fit(X_train,y_train)\nprint(\"score =\",clf.score(X_test,y_test))\n","88db406c":"from sklearn.metrics import mean_squared_error\nprint((mean_squared_error(y_test, clf.predict(X_test)))**.5)","97e2f504":"pred = clf.predict(scaler.transform(data_train.drop([\"price\"],axis=1)))\npred = pred.reshape(pred.shape[0])","7702b1f7":"import seaborn as sns\n\ndata_train[\"residual\"] = (pred - data_train[\"price\"])\n\ndata_train[\"in_training\"] = [x in indices_train for x in range(len(data_train))]\n\nsns.scatterplot(x=data_train[\"price\"],y=data_train[\"residual\"],hue=data_train[\"in_training\"])","2b53e85a":"data_train[data_train[\"in_training\"]][\"residual\"].describe()","13bdd61a":"#data_train[data_train[\"in_training\"]][data_train[\"residual\"]<-4000].index  #","de0b26a1":"data_test = pd.read_csv(\"..\/input\/diamonds-datamad1021-rev\/test.csv\")\ndata_test = data_test.iloc[:,1:]\ndata_test['n_cut'] = data_test['cut'].map(cut_to_n)\ndata_test['n_color'] = data_test['color'].map(color_to_n)\ndata_test['n_clarity'] = data_test['clarity'].map(clarity_to_n)\ndata_test = data_test.drop(labels=['cut','color','clarity'],axis=1)\ndata_test.head()","240398c1":"x = scaler.transform(data_test)\n\n\ndata_test[\"price\"] = clf.predict(x)\n\nresult = data_test[\"price\"]\nresult.index.names = [\"id\"]\nresult.rename_axis(\"price\")\nresult.head()","1512d216":"result.to_csv('submission.csv')","9c5f49db":"# **Submit**","e41f0b2f":"# **My final data form :**","ba07becf":"# **Scaling data to normal distribution** (gives same weigth to all coloms)","21e4b063":"# **Learing : plots**","e5a21ee7":"# **Coorelations :**","31f44cc0":"# **Split train and test 75% \/ 25%**","3c671ef5":"# **Read & Convert data to number :**","31aabe14":"# **Pls Upvote if you enjoyed =D**","a402fe0d":"If there is a hudge missed value it will affect all predictions","5fb631a2":"# **Make my model** "}}