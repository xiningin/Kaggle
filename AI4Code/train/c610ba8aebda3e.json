{"cell_type":{"23853571":"code","d031889b":"code","6e6b83fc":"code","381f5e92":"code","7533002c":"code","0ceb98a6":"code","2e47971c":"code","1be3d8d8":"code","c88bac6d":"code","2a2d647b":"code","891ab5fb":"code","da6febb0":"code","5ede7621":"code","7d06b0e0":"code","863db23b":"code","34d28598":"code","9b07b0e5":"code","1e858844":"code","9344f312":"code","127367e8":"code","6ac92c47":"code","2fb37d15":"code","3b13127f":"code","c4df9160":"code","9984fb57":"code","a4567568":"code","a6a908a0":"code","8a1c001a":"code","c3d7cc0e":"code","5f0e38da":"code","8c3c7570":"code","a54cd215":"code","442063c8":"code","85033ffa":"code","a6cc7efd":"code","62bbfa44":"code","9d6e5d82":"code","d3f7bb02":"code","5dfd289a":"markdown","7aef22d1":"markdown","40193875":"markdown","a953a855":"markdown","0496c226":"markdown","eba3a389":"markdown","24e27379":"markdown","e48827f0":"markdown","2d48130d":"markdown","eebadc54":"markdown","6392ba82":"markdown","4f537a08":"markdown","3e7e8fcb":"markdown","69666d18":"markdown","f501612a":"markdown","7d2c7f52":"markdown","f47e6c18":"markdown","87c7dd2c":"markdown","da2cbde9":"markdown","6e8e7d2e":"markdown","5660c948":"markdown","f49dde73":"markdown","e3b78075":"markdown","718192a4":"markdown","89eac991":"markdown","5510e281":"markdown"},"source":{"23853571":"import os\nimport math\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport calendar\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\n\nimport plotly.graph_objs as go\n","d031889b":"train_df = pd.read_csv(\"..\/input\/web-traffic-time-series-forecasting\/train_1.csv.zip\")\nkey_df = pd.read_csv(\"..\/input\/web-traffic-time-series-forecasting\/key_1.csv.zip\")","6e6b83fc":"train_df.head(3)","381f5e92":"key_df.head(3)","7533002c":"print(\"Train--- \", train_df.shape)\nprint(\"Key----- \", key_df.shape)","0ceb98a6":"page= pd.DataFrame([i.split(\"_\")[-3:] for i in train_df[\"Page\"]])\npage.columns = [\"Site\", \"Access_Type\", \"Agent\"]\npage.describe()","2e47971c":"site_column = list(page['Site'].unique())\naccess_column =list(page['Access_Type'].unique())\nagents_column= list(page['Agent'].unique())","1be3d8d8":"print(site_column)\nprint('-----------------------------------------------------------------------------------------------------------------------')\nprint(access_column)\nprint('-----------------------------------------------------------------------------------------------------------------------')\nprint(agents_column)","c88bac6d":"import re\ndef get_language(page):\n    res = re.search('[a-z][a-z].wikipedia.org',page)\n    if res:\n        return res[0][0:2]\n    return 'na'","2a2d647b":"train_df['lang'] = train_df.Page.map(get_language)\n\npage['lang'] = train_df.Page.map(get_language)","891ab5fb":"\n\npage[\"lang\"].value_counts().sort_index().plot.bar().set_title('Language - distribution')\n\n","da6febb0":"from collections import Counter\n\nprint(Counter(train_df.lang))","5ede7621":"lang = {}\nlang['en'] = train_df[train_df.lang=='en'].iloc[:,0:-1]\nlang['ja'] = train_df[train_df.lang=='ja'].iloc[:,0:-1]\nlang['de'] = train_df[train_df.lang=='de'].iloc[:,0:-1]\nlang['na'] = train_df[train_df.lang=='na'].iloc[:,0:-1]\nlang['fr'] = train_df[train_df.lang=='fr'].iloc[:,0:-1]\nlang['zh'] = train_df[train_df.lang=='zh'].iloc[:,0:-1]\nlang['ru'] = train_df[train_df.lang=='ru'].iloc[:,0:-1]\nlang['es'] = train_df[train_df.lang=='es'].iloc[:,0:-1]","7d06b0e0":"sums = {}\nfor key in lang:\n    sums[key] = lang[key].iloc[:,1:].sum(axis=0) \/ lang[key].shape[0]","863db23b":"days = [r for r in range(sums['en'].shape[0])]\n\nfig = plt.figure(1,figsize=[10,10])\nplt.ylabel('Views per Page')\nplt.xlabel('Day')\nplt.title('Pages in Different Languages')\nlabels={'en':'English','ja':'Japanese','de':'German',\n        'na':'Media','fr':'French','zh':'Chinese',\n        'ru':'Russian','es':'Spanish'\n       }\n\nfor key in sums:\n    plt.plot(days,sums[key],label = labels[key] )\n    \nplt.legend()\nplt.show()","34d28598":"train_df_2=pd.read_csv(\"..\/input\/web-traffic-time-series-forecasting\/train_1.csv.zip\")","9b07b0e5":"train=pd.melt(train_df_2[list(train_df_2.columns[-50:])+['Page']], id_vars='Page', var_name='date', value_name='Visits')","1e858844":"train.head(3)","9344f312":"train.info()","127367e8":"train['date'] = train['date'].astype('datetime64[ns]')","6ac92c47":"train['weekend'] = ((train.date.dt.dayofweek) \/\/ 5 == 1).astype(float)","2fb37d15":"median = pd.DataFrame(train.groupby(['Page'])['Visits'].median())\nmedian.columns = ['median']\nmean = pd.DataFrame(train.groupby(['Page'])['Visits'].mean())\nmean.columns = ['mean']\n","3b13127f":"train = train.set_index('Page').join(mean).join(median)\ntrain.reset_index(drop=False,inplace=True)\ntrain['weekday'] = train['date'].apply(lambda x: x.weekday())","c4df9160":"train['year']=train.date.dt.year \ntrain['month']=train.date.dt.month \ntrain['day']=train.date.dt.day","9984fb57":"train.head(3)","a4567568":"plt.figure(figsize=(50, 2))\nmean_g = train[['Page','date','Visits']].groupby(['date'])['Visits'].mean()\nplt.plot(mean_g,c='red')\nplt.title('Mean Page Views Per Date')\nplt.show()","a6a908a0":"train[['Page','date','Visits']].groupby(['date'])['Visits'].mean().head(3)","8a1c001a":"plt.figure(figsize=(50, 10))\nmedian_g = train[['Page','date','Visits']].groupby(['date'])['Visits'].median()\nplt.plot(median_g, color = 'b')\nplt.title('Time Series - median')\nplt.show()","c3d7cc0e":"train = pd.read_csv(\"..\/input\/web-traffic-time-series-forecasting\/train_1.csv.zip\")\nkeys = pd.read_csv(\"..\/input\/web-traffic-time-series-forecasting\/key_1.csv.zip\")","5f0e38da":"from fbprophet import Prophet","8c3c7570":"means =  pd.DataFrame(mean_g).reset_index(drop=False)\nmeans['weekday'] =means['date'].apply(lambda x: x.weekday())\n\nmeans['Date_str'] = means['date'].apply(lambda x: str(x))\n\n#create new columns year,month,day in the dataframe bysplitting the date string on hyphen and converting them to a list of values and add them under the column names year,month and day\nmeans[['year','month','day']] = pd.DataFrame(means['Date_str'].str.split('-',2).tolist(), columns = ['year','month','day'])\n\n#creating a new dataframe date by splitting the day column into 2 in the means data frame on sapce, to understand these steps look at the subsequent cells to understand how the day column looked before this step\ndate = pd.DataFrame(means['day'].str.split(' ',2).tolist(), columns = ['day','other'])\nmeans['day'] = date['day']*1\n\n\n","a54cd215":"pd.DataFrame(means['Date_str'].str.split('-',2).tolist(), columns = ['year','month','day']).head(3)","442063c8":"date.head(3)","85033ffa":"means.drop('Date_str',axis = 1, inplace =True)\nmeans.head()","a6cc7efd":"pip install pystan==2.19.1.1","62bbfa44":"pip install fbprophet==0.6.0","9d6e5d82":"import seaborn as sns\nsns.set(font_scale=1) \n\n\ndate_index = means[['date','Visits']]\n\n\ndate_index = date_index.set_index('date')\n\nprophet = date_index.copy()\nprophet.reset_index(drop=False,inplace=True)\nprophet.columns = ['ds','y']\n\n\nm = Prophet()\n\nm.fit(prophet)\n\nfuture = m.make_future_dataframe(periods=30,freq='D')\nforecast = m.predict(future)\n\n\nfig = m.plot(forecast)","d3f7bb02":"m.plot_components(forecast)","5dfd289a":"#   What is Time Series Forcasting?","7aef22d1":"## <span style='color:Green'> Primary techniques and tools for time series analysis","40193875":"<span style='background : #f5ccff' >Box-Jenkins ARIMA models:<\/span> These univariate models are used to better understand a single time-dependent variable, such as temperature over time, and to predict future data points of variables. These models work on the assumption that the data is stationary. Analysts have to account for and remove as many differences and seasonality in past data points as they can. Thankfully, the ARIMA model includes terms to account for moving averages, seasonal difference operators, and autoregressive terms within the model.\n\n<span style='background : #f5ccff' >Box-Jenkins Multivariate Models:<\/span>  Multivariate models are used to analyze more than one time-dependent variable, such as temperature and humidity, over time.\n\n<span style='background : #f5ccff' >Holt-Winters Method:<\/span>  The Holt-Winters method is an exponential smoothing technique. It is designed to predict outcomes, provided that the data points include seasonality.","a953a855":" <span style='background : #f5ccff'>The make_future_dataframe is one big reason why Prophet is really user friendly, because making a dataset for future prediction in time-series analysis is usually unpleasant moment because it requires datetime handling. Here with Prophet, just giving the length of future period will provide you the necessary dataframe. Another interesting feature about Prophet is that  Prophet has no problem with missing data. If you set their values to NA in the history but leave the dates in future, then Prophet will give you a prediction for their values.","0496c226":"A time series can be constructed by any data that is measured over time at evenly-spaced intervals. Historical stock prices, earnings, GDP, or other sequences of financial or economic data can be analyzed as a time series.","eba3a389":"## <span style='color:Green'> PROPHET","24e27379":"###  What Are Some Examples of Time Series?","e48827f0":"<span style='background : #f5ccff' >\u201cProphet\u201d is an open-sourced library available on R or Python which helps users analyze and forecast time-series values released in 2017. With developers\u2019 great efforts to make the time-series data analysis be available without expert works, it is highly user-friendly but still highly customizable, even to non-expert users.","2d48130d":"The Prophet uses a decomposable time series model with three main model components: trend, seasonality, and holidays. They are combined in the following equation:\n\n<span style='background : #f5ccff' >y(t)=g(t) + h(t) + s(t) + Et <\/span>\n\n<span style='background : #f5ccff' >g(t) <\/span> : piecewise linear or logistic growth curve for modeling non-periodic changes in time series\n\n<span style='background : #f5ccff' >s(t) <\/span>: periodic changes (e.g. weekly\/yearly seasonality)\n\n<span style='background : #f5ccff' >h(t) <\/span>: effects of holidays (user provided) with irregular schedules\n\n<span style='background : #f5ccff' >\u03b5t <\/span>: error term accounts for any unusual changes not accommodated by the model\n","eebadc54":"### <span style='color:R'> How Do You Analyze Time Series Data?","6392ba82":"We can see that the page names are separated into sections using hyphen into site, access type and agent. Therefore it would be better to split them into separate sections for ease of analysis.","4f537a08":"<span style='background :#e6ffff' >Classification:<\/span> Identifies and assigns categories to the data.\n    \n<span style='background :#e6ffff' >Curve fitting: <\/span>Plots the data along a curve to study the relationships of variables within the data.\n    \n<span style='background :#e6ffff' >Descriptive analysis:<\/span> Identifies patterns in time series data, like trends, cycles, or seasonal variation.\n\n<span style='background :#e6ffff' >Explanative analysis:<\/span> Attempts to understand the data and the relationships within it, as well as cause and effect.\n\n<span style='background :#e6ffff' >Exploratory analysis:<\/span> Highlights the main characteristics of the time series data, usually in a visual format.\n\n<span style='background :#e6ffff' >Forecasting:<\/span> Predicts future data. This type is based on historical trends. It uses the historical data as a model for future\ndata, predicting scenarios that could happen along future plot points.\n\n<span style='background :#e6ffff' >Intervention analysis:<\/span> Studies how an event can change the data.\n\n    \n    ","3e7e8fcb":"# MODELS","69666d18":"Prophet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects. It works best with time series that have strong seasonal effects and several seasons of historical data.","f501612a":"# <span style='color:RED'>Web Traffic Time Series Forecasting","7d2c7f52":"## The Prophet Forecasting Model","f47e6c18":"####  <span style='background : #f5ccff'>2) prophet_plot_components: <\/span>\nPlot the components of a prophet forecast.\" Prints a ggplot2 (GGplot2 is like a R grammar system for graphics where the syntax consists various parts of graphics and you can build graphs using this syntax provided by ggplot2. Its like mapping various attributes of graphs in R, it addresses various components of graphs and stitch them together to a build complete chart.) with whichever are available of: trend, holidays, weekly seasonality, yearly seasonality, and additive and multiplicative extra regressors.\n\n","87c7dd2c":"### Methods used here in prophet","da2cbde9":"###  <span style='background : #f5ccff'>1) make_future_dataframe:<\/span> Make dataframe with future dates for forecasting.\n\n<span style='color:Green'>make_future_dataframe(m, periods, freq = \"day\", include_history = TRUE)\n\nArguments\n    \n<span style='background : #f5ccff' >m:<\/span> Prophet model object.\n\n<span style='background : #f5ccff' >periods\t:<\/span> Int number of periods to forecast forward.\n\n<span style='background : #f5ccff' >freq :<\/span> 'day', 'week', 'month', 'quarter', 'year', 1(1 sec), 60(1 minute) or 3600(1 hour).\n\n<span style='background : #f5ccff' >include_history\t:<\/span> Boolean to include the historical dates in the data frame for predictions.","6e8e7d2e":"# -------------------------------------------------------------------------------------------------------","5660c948":"##  <span style='color:Green'>Types of time series analysis","f49dde73":"Statistical techniques can be used to analyze time series data in two key ways: to generate inferences on how one or more variables affect some variable of interest over time, or to forecast future trends. ","e3b78075":"Time series forecasting uses information regarding historical values and associated patterns to predict future activity. Most often, this relates to trend analysis, cyclical fluctuation analysis, and issues of seasonality. As with all forecasting methods, success is not guaranteed.","718192a4":" <span style='background : #f5ccff'>This is the plot of the forcast.","89eac991":"## <span style='color:bLUE'> DATA ANALYSIS AND VISUALIZATIONS ","5510e281":"## What is Prophet?"}}