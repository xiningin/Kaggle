{"cell_type":{"8c53b9a0":"code","786a1936":"code","de882721":"code","6d87afed":"code","1d8c4dbc":"code","16cc9b50":"markdown","28e95d94":"markdown","aeded6c4":"markdown","746d6ec2":"markdown","9c6b26a4":"markdown","84614d96":"markdown","1a84f3b5":"markdown","ddfb74a9":"markdown","74a2d023":"markdown","62c8f3f0":"markdown","3b554762":"markdown"},"source":{"8c53b9a0":"#Importing Requierd Libraries\nimport pandas as pd\nimport datetime as dt\n!pip install xlrd xlwt openpyxl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n%matplotlib inline\n\n# for Interactive Shells\nfrom IPython.display import display\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom pandas_profiling import ProfileReport\n#!pip install dataprep\n\n#removing warnings\nimport sys\nimport warnings\nif not sys.warnoptions:\n    warnings.simplefilter(\"ignore\")\n\n#secrets\nfrom kaggle_secrets import UserSecretsClient\nsecret_label = \"notebook_secret\"\nsecret_value = UserSecretsClient().get_secret(secret_label)\n\n#loading data\ntry:\n    df_athlets = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Athletes.xlsx')\n    df_coaches = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Coaches.xlsx')\n    df_entries = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx')\n    df_medals = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Medals.xlsx')\n    df_teams = pd.read_excel('\/kaggle\/input\/2021-olympics-in-tokyo\/Teams.xlsx')\nexcept:\n    print('Smth went wrong')","786a1936":"dict_data = {'Data athlets':df_athlets, 'Data coaches':df_coaches,\n         'Data entries': df_entries,'Data medals':df_medals,\n          'Data teams':df_teams}\nfor i in dict_data:\n    print(i)\n    report = ProfileReport(dict_data[i],\n                               progress_bar=False,\n                              missing_diagrams={\n                                \"heatmap\": False,\n                                \"dendrogram\": False,\n                                }, minimal=True)\n    display(report)","de882721":"# 1 Preproccessing\nfor i in dict_data:\n    if i != 'Data entries':\n        if i == 'Data medals':\n            col = 'Team\/NOC'\n        else:\n            col = 'NOC'\n        # changing some country names\n        dict_data[i][col] = dict_data[i][col].replace('ROC', 'Russia')\n        dict_data[i][col] = dict_data[i][col].replace('United Republic of Tanzania', 'Tanzania')\n        dict_data[i][col] = dict_data[i][col].replace('Equatorial Guinea', 'Guinea')\n        dict_data[i][col] = dict_data[i][col].replace('Democratic Republic of Timor-Leste', 'Timor-Leste')\n        dict_data[i][col] = dict_data[i][col].replace('Democratic Republic of the Congo', 'Congo')\n        dict_data[i][col] = dict_data[i][col].replace('Islamic Republic of Iran', 'Iran')\n        dict_data[i][col] = dict_data[i][col].replace('Federated States of Micronesia', 'Micronesia')\n        dict_data[i][col] = dict_data[i][col].replace('United States of America', 'America')\n        dict_data[i][col] = dict_data[i][col].replace(\"People's Republic of China\", 'China')\n        dict_data[i][col] = dict_data[i][col].replace(\"Republic of Moldova\", 'Moldova')\n        \n    # making columns with lower case\n    dict_data[i].columns = dict_data[i].columns.str.lower()\n    \n# filling in missing values in df_coaches\ndf_coaches.event = df_coaches.event.fillna('U\/N')\n#renaming columns\ndf_entries.rename(columns = {'total': 'num_entr_in_dis'}, inplace = True)\ndf_athlets.rename(columns = {'name': 'athlets_name'}, inplace = True)\ndf_teams.rename(columns = {'name': 'team_name'}, inplace = True)\ndf_medals.rename(columns = {'team\/noc': 'noc'}, inplace = True)\ndf_coaches.rename(columns = {'name': 'coach_name', 'event' : 'coach_event'}, inplace = True)\n\n#2 Making df\ndf = df_athlets.merge(df_entries, on='discipline')\ndf = df_teams.merge(df, on=['discipline','noc'])\ndf = df.merge(df_medals, on='noc')\ndf = df.merge(df_coaches, on=['discipline','noc'])\n\ndf.drop_duplicates(inplace=True)\n\nreport = ProfileReport(df,\n                        progress_bar=False,\n                        missing_diagrams={\n                        \"heatmap\": False,\n                        \"dendrogram\": False,\n                        }, minimal=True)\ndisplay(report)","6d87afed":"# Medals by contries\ndf_temp = df_medals[df_medals.gold != 0]\nfig = plt.figure(figsize=(24,6))\n\nsns.barplot(x=df_temp.noc , y=df_temp.gold , data=df_temp)\nplt.title('The amount of gold medals by countries')\nplt.xlabel('Country'), plt.ylabel('Gold medals number')\nplt.grid()\nplt.xticks(fontsize=8,rotation=45);","1d8c4dbc":"# Medals by contries\n#df_temp = df_medals[df_medals.gold != 0]\nfig, axs = plt.subplots(1,3,figsize=(20,6))\n\nfor j,i in enumerate(['gold', 'silver', 'bronze']):\n\n    df_temp = df_medals.groupby('noc')[i].sum().reset_index().sort_values(i, ascending=False).head(5)\n    pal = sns.color_palette(\"Greens_d\", len(df_temp))\n    rank = df_temp[i].argsort().argsort() \n    \n    g=sns.barplot(x=df_temp.noc , y=df_temp[i] , data=df_temp, ax=axs[j], palette=np.array(pal[::-1])[rank])\n    axs[j].set_title(f'The amount of {i} medals by countries')\n    axs[j].set_xlabel('Country'), axs[j].set_ylabel(f'{i} medals number')\n    \n\n#    for index, row in df_temp.iterrows():\n#        g.text(row.name,row[i], row[i], color='black', ha=\"center\")","16cc9b50":"><div>\n><ul style=\"font-size:16px;\">\n><b>Pandas Profiling<\/b> is great tool for quick data analysis, it extends the pandas DataFrame with df.profile_report() method. For each column the following statistics - if relevant for the column type - are presented in an interactive HTML report:\n><br>\n>\n><li>Type inference: detect the types of columns in a dataframe.<\/li>\n><li>Essentials: type, unique values, missing values<\/li>\n><li> ... end etc.<\/li>\n><br>\n>\n>Thanks a lot to creators, [the link on GitHub](https:\/\/github.com\/pandas-profiling\/pandas-profiling) to search full information about this great tool\u2728 \n>\n>\n>    \n>I've used Pandas Profiling for each dataset in the next piece of code below\ud83d\udc47 <\/li>","28e95d94":"<div style=\"font-weight: bold;font-size:16px;background-color: #1179A1;padding:0 6%;color:white;margin: 0 30%\">2.2 Examining the ratio of men to women<\/div>\n\n>Questions:\n><li> The amount of females\\males by different disciplines;<\/li>\n><li> What is the amount of females\\males in TOP-countries from the plots above.<\/li>\n><li>in process \ud83d\ude42","aeded6c4":"><div>\n><ul style=\"font-size:16px;\">\n>The next step is made up of two parts:\n><li> firstly, to carry out preproccessing step:\n    <ul>\n      <li>changing some country names,<\/li> \n    <li>making columns with lower case,<\/li>  \n    <li>filling in missing values in df_coaches,<\/li>  \n    <li>renaming columns,<\/li><\/ul><\/li>\n><li> secondly, to combine data and make a common dataframe - df, in this way it will be easier to analyse some questions and investigate data.\n<\/ul>\n<\/div>","746d6ec2":"<div style=\"font-weight: bold;font-size:18px;background-color: #4682B4;padding:0 5%; color:white;margin: 0  70% 0 0\">Step 2: EDA<\/div>\n<div style=\"font-weight: bold;font-size:16px;background-color: #1179A1;padding:0 11%;color:white;margin: 0 30%\">2.1 Research of medals<\/div>\n\n><div>\n><ul style=\"font-size:16px;\">\n>Investigation if medals:\n><li> Barchart of medals by countries;<\/li>\n><li> TOP-5 countries for each medal type.<\/li>\n<\/ul>\n<\/div>","9c6b26a4":"<div style=\"font-weight: bold;font-size:40px;background-color: #4682B4;padding:0 5%; color:white\">Introduction<\/div>\n\n><div>\n><ul style=\"font-size:16px;\">\n><br>The 2020 Summer Olympics was an international multi-sport event held from 23 July to 8 August 2021 in Tokyo, Japan, with some preliminary events that began on 21 July. It was largely held behind closed doors with no public spectators permitted due to the declaration of a state of emergency in the Greater Tokyo Area in response to the pandemic.\ud83d\ude37   <\/ul><\/div>  \n>\n><div>\n><ul style=\"font-size:16px;\">\n><br>Data contains the details of over 11,000 athletes, with 47 disciplines, along with 743 Teams taking part in the 2021(2020) Tokyo Olympics.\n>This dataset includes the details of the Athletes, Coaches, Teams participating as well as the Entries by gender. It contains their names, countries represented, discipline, gender of competitors, name of the coaches.\n>\n<center><img src=\"https:\/\/i.pinimg.com\/564x\/52\/df\/a4\/52dfa46631ab4fab0de9413e9285dfbd.jpg\" width=500><\/center>\n\n<\/ul>\n<\/div>\n\n><div>\n><ul style=\"font-size:16px;\">\n>    <br>This notebook includes detailed Data-Preprocessing stage, EDA and my findings,\n>    <br><b>Our main goal is accomplish EDA<\/b> on Countries participated, disciplines, events & coaches.\n>    \n>Many thanks to the \u0441reator of this dataset,\n><br>If you like this project, please, support me - UPvote!\n>\n<\/ul>\n<\/div>\n\n<div style=\"font-weight: bold;font-size:26px;background-color: #4682B4;padding:0 5%; color:white\"> Data description<\/div>\n\n><div><ul style=\"font-size:16px;\">\n><li> Athletes - contains details about the participating Athletes \ud83d\udeb5<\/li>\n><li> Coaches - contains details about the Coach(Country, Discipline, Event)<\/li>\n><li> EntriesGender - entries by Discipline and number of females and males taking part in it<\/li>\n><li> Medals - contains information about medals as on 29th July 2021 \ud83e\udd47<\/li>\n><li> Teams - contains the details of all the Teams(Country, event, Discipline, Event)<\/li>\n><br>All datasets contain 'Details' data.\n<\/ul>\n<\/div>\n\n<br><div style=\"font-weight: bold;font-size:26px;background-color: #4682B4;padding:0 5%; color:white\">Table of Contents<\/div>\n\n* [Step 1: Examining Data](#section-two)\n    - [1.1 Pandas profiling, preproccessing](#sub-11)\n    - [1.2 Overall conclusion](#sub-12)\n\n* [Step 2: EDA](#section-three)\n    - [2.1 Research of medals](#sub-31)\n    - [2.2 Examining the ratio of men to women](#sub-32) (this and below are in the process \ud83d\ude42)\n    - [2.3 The correlation matrix](#sub-33)\n    - [2.4 Interim conclusion](#sub-34)","84614d96":"<div style=\"font-weight: bold;font-size:16px;background-color: #1179A1;padding:0 11%;color:white;margin: 0 30%\">2.3 The correlation matrix<\/div>\n\n><li>in process \ud83d\ude42","1a84f3b5":"<div style=\"font-weight: bold;font-size:16px;background-color: #1179A1;padding:0 11%;color:white;margin: 0 30%\">2.4 Interim conclusion<\/div>\n\n><div>\n><ul style=\"font-size:16px;\">\n><li>in process \ud83d\ude42\n<\/ul>\n<\/div>","ddfb74a9":"<div style=\"font-weight: bold;font-size:16px;background-color: #1179A1;padding:0 11%;color:white;margin: 0 30%\">1.2 Interim conclusion<\/div>\n\n><div>\n><ul style=\"font-size:16px;\">\n><li>The country was known as the Olympic Athletes from Russia (OAR) during the 2018 Pyeongchang Winter Games and for the 2021 Tokyo Games, they are known as the ROC;<\/li>\n><li> Athletes data has no missing values, no duplicates;<\/li>\n><li> The most common discipline is 'Athletics', 'Swimming' is the second<\/li>\n><li> Name and NOC are High-cardinality columns, it means they have very uncommon values.<\/li>\n<\/ul>\n<\/div>\n\n><div>\n><ul style=\"font-size:16px;\">\n><li> Coaches - contains details about the Coach(Country, Discipline, Event) \ud83d\udeb5<\/li>\n><li> There are missing values, no duplicates<\/li>\n><li> The most common discipline is 'Athletics', 'Swimming' is the second<\/li>\n><li> Name and NOC are High-cardinality columns, it means they have very uncommon values.<\/li>\n<\/ul>\n<\/div>","74a2d023":"<div style=\"font-weight: bold;font-size:18px;background-color: #4682B4;padding:0 5%; color:white;margin: 0  70% 0 0\">Step 3: Overall Conclusion<\/div>","62c8f3f0":"<div style=\"font-weight: bold;font-size:16px;background-color: #1179A1;padding:0 6%;color:white;margin: 0 30%\">1.1 Pandas profiling, preproccessing<\/div>","3b554762":"<div style=\"font-weight: bold;font-size:18px;background-color: #4682B4;padding:0 5%; color:white;margin: 0  70% 0 0\">Step 1: Examining Data<\/div>"}}