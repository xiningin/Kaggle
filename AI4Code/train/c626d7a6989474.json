{"cell_type":{"3f465c6c":"code","376d2517":"code","7e576f9c":"code","9c9dbf59":"code","1f41bdd8":"code","1fa6391d":"code","0e2d4eeb":"code","680779ea":"code","92baa05a":"markdown","3eb02a00":"markdown","d4fcc3ad":"markdown","1d7573d1":"markdown","0038f937":"markdown","0b9bcc4d":"markdown"},"source":{"3f465c6c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n","376d2517":"dataset = pd.read_csv(\"\/kaggle\/input\/real-estate-price-prediction\/Real estate.csv\")\ndataset.head()","7e576f9c":"#let's see if our dataset contains null values\nprint(dataset.info())","9c9dbf59":"#multivariate linear regression\n#i will ignore the 2 first columns Number+Date for this moment and we will see\nX=dataset.iloc[:,2:-1].values\ny=dataset.iloc[:,-1].values\nprint(X[:5,:])","1f41bdd8":"#let's split our data\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.1,random_state = 0)\nprint(X_train.shape)","1fa6391d":"#now let's create our model\nfrom sklearn.linear_model import LinearRegression\nlin_regressor=LinearRegression()\nlin_regressor.fit(X_train,y_train)","0e2d4eeb":"y_pred=lin_regressor.predict(X_test)","680779ea":"#now let's compare if it works perfectly\ncon=np.concatenate((y_pred.reshape(len(y_pred),1),y_test.reshape(len(y_test),1)),axis=1)\ncompare_df=pd.DataFrame(data=con,columns=[\"predicted_value\",\"real_value\"])\ncompare_df","92baa05a":"# training our model","3eb02a00":"# 2. dataset info","d4fcc3ad":"# 1. **importing dataset**","1d7573d1":"# train test splitting","0038f937":"# dependent and independent values","0b9bcc4d":"# comparing predicted data and real data\n> there are some cases where there is large difference between predicted value and the real one example:  45.739271 & 26.5\nbut generaly the model is accpetable"}}