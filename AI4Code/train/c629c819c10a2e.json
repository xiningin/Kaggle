{"cell_type":{"59723c08":"code","b552aa11":"code","8c767279":"code","30fe97ff":"code","d5fa38d4":"code","09af8ede":"code","ba5cad52":"code","e1403331":"markdown"},"source":{"59723c08":"import pandas as pd\nimport numpy as np\nfrom sklearn.ensemble import StackingRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor\nfrom sklearn.neural_network import MLPRegressor\nfrom lightgbm import LGBMRegressor\nfrom xgboost import XGBRegressor\nfrom catboost import CatBoostRegressor\nfrom vecstack import stacking\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.linear_model import Ridge, Lasso","b552aa11":"train = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-jan-2021\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-jan-2021\/test.csv\")\nsample_submission = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-jan-2021\/sample_submission.csv\")","8c767279":"train = train.drop('id', axis=1)\ntest = test.drop('id', axis=1)\nX = train.drop('target', axis=1)\ny = train.target","30fe97ff":"estimators = [\n    RandomForestRegressor(n_estimators=500),\n    GradientBoostingRegressor(n_estimators=500),\n    Ridge(),\n    Lasso(),\n    LGBMRegressor(bagging_fraction=0.82, bagging_freq=6, cat_smooth=1.0,\n              feature_fraction=0.5, lambda_l1=1.075e-05,\n              lambda_l2=2.05e-06, learning_rate=0.005,\n              max_dept=-1, metric='rmse', min_data_in_leaf=100,\n              min_data_per_group=5, min_gain_to_split=0.0,\n              min_sum_hessian_in_leaf=0.001, n_estimators=500, num_leaves=246),\n    XGBRegressor(colsample_bytree=0.5, alpha=0.01563, learning_rate=0.01, \n                 max_depth=15, min_child_weight=246, n_estimators=500,                                                                  \n                 reg_lambda=0.003, subsample=0.7, metric_period=100, silent=1),\n    CatBoostRegressor()\n]\n","d5fa38d4":"S_train, S_test = stacking(estimators,                   \n                           X, y, test,   \n                           regression=True,\n                           metric=mean_squared_error, \n                           n_folds=3,\n                           shuffle=True,  \n                           random_state=0,\n                           verbose=2)","09af8ede":"reg = LinearRegression()\nreg = reg.fit(S_train, y)","ba5cad52":"y_pred = reg.predict(S_test)\nsample_submission['target'] = y_pred\nsample_submission.to_csv(\"stacking_regressor_submission.csv\", index=False)","e1403331":"## Stacking"}}