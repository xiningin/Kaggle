{"cell_type":{"096f480a":"code","ad39ba97":"code","f423774b":"code","37c1d11c":"code","4e04d879":"code","ff40300d":"code","1efeed25":"code","a25b5805":"code","d559fcac":"code","71049ded":"code","4ddd47db":"code","ff56bba4":"code","6bf8a3ef":"code","f5dc0a5e":"code","14f0540c":"code","072c8474":"code","c33e350b":"code","d0766705":"code","0ee6d5d2":"code","5edd780a":"code","485f3e82":"code","e7a7c9f0":"code","2cd00bd3":"code","feaf73ef":"markdown","70045b08":"markdown","7001c5b8":"markdown","d0f4b023":"markdown","fc1e98a0":"markdown","6d38177b":"markdown","741cab9b":"markdown","e387c91e":"markdown","a8cefc96":"markdown","21655176":"markdown","9c4e05b1":"markdown","3bfa551d":"markdown","94d9356d":"markdown","860ebcef":"markdown","3e2561e9":"markdown"},"source":{"096f480a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', 20)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ad39ba97":"data = pd.read_csv('\/kaggle\/input\/melb_data.csv')","f423774b":"data.head()","37c1d11c":"data.info()","4e04d879":"data.describe()","ff40300d":"data.isnull().sum().sort_values(ascending = False)\nmissing_values  = data.isnull().sum().sort_values(ascending = False)\nmissing_df = pd.concat([missing_values], axis = 1, keys = ['Total'])\nf, ax = plt.subplots(figsize = (12,6))\nsns.barplot(x = missing_values.index, y = missing_values)\nplt.xticks(rotation = 90)\nplt.title('Missing Values in Features')\nplt.ylabel('Total missing values')","1efeed25":"cat_features = ['Suburb', 'Address','Type', 'Method','SellerG','Postcode','CouncilArea','Regionname']\ndata[cat_features] = data[cat_features].astype('category')","a25b5805":"pd.to_datetime(data.YearBuilt, format='%Y', errors = 'coerce').dt.to_period('Y')","d559fcac":"pd.to_datetime(data.Date, infer_datetime_format=True)","71049ded":"timeline_features = ['Yearbuilt', 'Date']","4ddd47db":"continous_features = []\nfor col in data:\n    if col not in cat_features and col not in timeline_features:\n        continous_features.append(col)","ff56bba4":"plt.subplots(figsize = (9,6))\nsns.heatmap(data[continous_features].corr(), annot = True, center = 0)","6bf8a3ef":"data[continous_features].corr().Price[(data[continous_features].corr().Price >= 0.4) | (data[continous_features].corr().Price < -0.1)]","f5dc0a5e":"corrdf_ = data[continous_features].corr().Price[(data[continous_features].corr().Price >= 0.4) | (data[continous_features].corr().Price < 0)]\ncorr_df = pd.concat([corrdf_], axis = 1, keys = ['Corr']).sort_values(by = 'Corr', ascending = False)\nindexlist =[]\nfor x in corr_df.index:\n    indexlist.append(x)","14f0540c":"sns.pairplot(data[indexlist] )","072c8474":"data.YearBuilt = data.YearBuilt[data.YearBuilt > 1800]","c33e350b":"sns.relplot(x = 'Date', y ='Price', kind= 'line', data = data, aspect = 3)\nplt.xticks(rotation =90)","d0766705":"f,ax=plt.subplots(figsize = (17,7))\nsns.regplot(x = 'YearBuilt', y ='Price', data = data, ax = ax)\nplt.xticks(rotation =90)","0ee6d5d2":"sns.relplot(y = 'YearBuilt', x ='Date',hue = 'Price' ,kind= 'scatter', data = data, aspect = 3)\nplt.xticks(rotation =90)","5edd780a":"data['Age'] = pd.DatetimeIndex(data['Date']).year - data.YearBuilt # year of selling - year built","485f3e82":"f,ax=plt.subplots(figsize = (17,7))\nsns.regplot(x = 'Age', y = 'Price' ,data = data, ax = ax)\nplt.xticks(rotation =90)","e7a7c9f0":"for cat in cat_features:\n    print(cat , data[cat].nunique())","2cd00bd3":"for cat in cat_features:\n    try:\n        if data[cat].nunique() < 15:\n            catdf = data[cat][data.Price >=  data.Price.quantile(0.75)].value_counts()\n            listof_index = []\n            for index in catdf.index:\n                listof_index.append(index)\n            df = data[(data[cat].isin(listof_index))  &  (data.Price >=  data.Price.quantile(0.75))][[cat,'Price','Method']]\n            sns.catplot(x= cat ,y='Price', data = df, kind = 'swarm', hue = 'Method' )\n            plt.xticks(rotation = 90)\n\n        else:\n            catdf = data[cat][data.Price >=  data.Price.quantile(0.75)].value_counts().iloc[:14]\n            listof_index = []\n            for index in catdf.index:\n                listof_index.append(index)\n            df = data[(data[cat].isin(listof_index))  &  (data.Price >=  data.Price.quantile(0.75))][[cat,'Price','Method']]\n            sns.relplot(x= cat ,y='Price', data = df ,hue = 'Method')\n            plt.xticks(rotation = 90)\n    except:\n        if data[cat].nunique() < 15:\n            catdf = data[cat][data.Price >=  data.Price.quantile(0.75)].value_counts()\n            listof_index = []\n            for index in catdf.index:\n                listof_index.append(index)\n            df = data[(data[cat].isin(listof_index))  &  (data.Price >=  data.Price.quantile(0.75))][[cat,'Price']]\n            sns.catplot(x= cat ,y='Price', data = df, kind = 'swarm' )\n            plt.xticks(rotation = 90)\n\n        else:\n            catdf = data[cat][data.Price >=  data.Price.quantile(0.75)].value_counts().iloc[:14]\n            listof_index = []\n            for index in catdf.index:\n                listof_index.append(index)\n            df = data[(data[cat].isin(listof_index))  &  (data.Price >=  data.Price.quantile(0.75))][[cat,'Price']]\n            sns.relplot(x= cat ,y='Price', data = df )\n            plt.xticks(rotation = 90)","feaf73ef":"# Segregating features into continous, timeline, categorical features based on description of given features above","70045b08":"Timeline Features","7001c5b8":"# Taking a overview of data","d0f4b023":"# Notes on Specific Variables\nRooms: Number of rooms\n\nPrice: Price in dollars\n\nMethod: S - property sold; SP - property sold prior; PI - property passed in; PN - sold prior not disclosed; SN - sold not disclosed; NB - no bid; VB - vendor bid; W - withdrawn prior to auction; SA - sold after auction; SS - sold after auction price not disclosed. N\/A - price or highest bid not available.\n\nType: br - bedroom(s); h - house,cottage,villa, semi,terrace; u - unit, duplex; t - townhouse; dev site - development site; o res - other residential.\n\nSellerG: Real Estate Agent\n\nDate: Date sold\n\nDistance: Distance from CBD\n\nRegionname: General Region (West, North West, North, North east \u2026etc)\n\nPropertycount: Number of properties that exist in the suburb.\n\nBedroom2 : Scraped # of Bedrooms (from different source)\n\nBathroom: Number of Bathrooms\n\nCar: Number of carspots\n\nLandsize: Land Size\n\nBuildingArea: Building Size\n\nCouncilArea: Governing council for the area","fc1e98a0":"Continous Features","6d38177b":"# Missing values in different features","741cab9b":"# **Since there are too many distinct enteries in some of the catagorical features, we will analyse the entries which showed up the most for the 75th percentile or above for the Price variable for sake of visual presentation**","e387c91e":"# Visual analysis of continous features","a8cefc96":"# Visual analysis of Timeline features","21655176":"# In this analysis we will try to seek any correlation between different features in the dataset and 'Price' primarily through visual correlations","9c4e05b1":"# Visual Analysis","3bfa551d":"Performing pairplot between the features significantly affecting the Price","94d9356d":"List of features significantly affecting the Pricing (both positively and negatively)","860ebcef":"# Importing the libraries","3e2561e9":"Categorical Features"}}