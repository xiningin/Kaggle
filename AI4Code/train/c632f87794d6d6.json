{"cell_type":{"fa33acab":"code","2bd5e5dd":"code","b2b1e7aa":"code","46dbea0d":"code","9831a82e":"code","70936983":"code","dffc98a1":"code","35076c2b":"code","4420c436":"code","8fc3de4f":"code","39b81e5d":"code","3432d8ca":"code","ca33bdce":"code","4a0325d6":"markdown"},"source":{"fa33acab":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","2bd5e5dd":"df = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')","b2b1e7aa":"df.head()","46dbea0d":"df.info()","9831a82e":"df.isnull().sum()","70936983":"df.shape","dffc98a1":"X = df.iloc[:,[3,4]].values","35076c2b":"X","4420c436":"#Building the Model\n#KMeans Algorithm to decide the optimum cluster number , KMeans++ using Elbow Mmethod\n#to figure out K for KMeans, I will use ELBOW Method on KMEANS++ Calculation\n\nfrom sklearn.cluster import KMeans\nwcss= []","8fc3de4f":"#we always assume the max number of cluster would be 10\n#you can judge the number of clusters by doing averaging\n###Static code to get max no of clusters\n\nfor i in range(1,6):\n    kmeans = KMeans(n_clusters = i, init='k-means++',random_state=0)\n    kmeans.fit(X)\n    wcss.append(kmeans.inertia_)\n    \n    #inertia_ is the formula used to segregate the data point into clusters\n    ","39b81e5d":"#Visualizing the ELBOW method to get the optimal value of K \n\nplt.plot(range(1,6),wcss)\nplt.title('The Elbow Method')\nplt.xlabel('No of clusters')\nplt.ylabel(\"wcss\")\nplt.show()","3432d8ca":"#If you zoom out this curve then you will see that last elbow comes at k=5\n#no matter what range we select ex- (1,21) also i will see the same behaviour but if we chose higher range it is little difficult to visualize the ELBOW\n#that is why we usually prefer range (1,5)\n##Finally we got that k=5\n\n\n#Model Build\nkmeansmodel = KMeans(n_clusters = 5, init = 'k-means++', random_state = 0)\ny_kmeans = kmeansmodel.fit_predict(X)\n\n#For unsupervised learning we use \"fit_predict()\" wherein for supervised learning we use \"fit_tranform()\"\n#y_kmeans is the final model . Now how and where we will deploy this model in production is depends on what tool we are using.\n#This use case is very common and it is used in BFS industry(credit card) and retail for customer segmenattion.","ca33bdce":"#visualizating all the clusters\n\nplt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1] , s = 50, c = 'red', label = 'Cluster 1')\nplt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1] , s = 50, c = 'blue', label = 'Cluster 2')\nplt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1] , s = 50, c = 'green', label = 'Cluster 3')\nplt.scatter(X[y_kmeans == 3, 0], X[y_kmeans == 3, 1] , s = 50, c = 'cyan', label = 'Cluster 4')\nplt.scatter(X[y_kmeans == 4, 0], X[y_kmeans == 4, 1] , s = 50, c = 'magenta', label = 'Cluster 5')\nplt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], s = 100, c = 'yellow',label='Centroids')\nplt.title('Clusters of Customers')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()\n","4a0325d6":"# Thank You \n# If You Like My Work Please Upvote !!"}}