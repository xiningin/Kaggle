{"cell_type":{"62835748":"code","d01d10ce":"code","1a33f525":"code","7631bdbd":"code","0a367454":"code","271c994b":"code","2c0c0922":"code","6802897f":"code","5df158a7":"code","5298b2ba":"code","6f03f478":"code","c5119526":"code","8686508e":"code","6c48e064":"code","dbfd9765":"code","1e5c0dac":"code","fe551fd6":"code","a508a30f":"code","e430a843":"code","f73d91a2":"code","47da7966":"code","3e9e2520":"code","6cb7af92":"code","45e45c24":"code","d3831be9":"code","8df43786":"code","7cbf2c49":"code","b6d3f99c":"code","98a0837b":"code","bed6b61c":"code","8361e1f5":"code","ec54dd61":"code","2692f975":"code","c9964c59":"code","db824839":"code","4a6dc247":"code","d198972f":"code","746858cd":"code","cd472746":"code","aa8adfaa":"code","07837c24":"code","bb5dd6b8":"code","6d1026c4":"code","e7555113":"code","25172019":"code","0dd03fff":"code","0240dd11":"code","7c072300":"code","7afc5821":"code","88212d13":"code","656635be":"code","eae780d0":"code","ab827603":"code","179d5f21":"code","1ef305e1":"code","4d26565f":"code","f2674355":"code","b5152a1d":"code","8f302b96":"code","29d668e4":"code","e35ad858":"code","26a4bdc7":"code","4635a061":"code","4e5d53f5":"code","a739f855":"code","48687e34":"code","3ce310e7":"code","0b62ad85":"code","4d7c4ab7":"code","cd7716ae":"code","ea00797e":"code","b53f4b9f":"code","9d96b9a2":"code","27c2c4eb":"code","359450c0":"code","4c54e3dc":"code","59002cdf":"code","12e6ff22":"code","60da7fba":"code","2939b874":"code","cf1bbff1":"code","1c7544b6":"code","57cfeec2":"code","93b7f1f6":"code","e04082de":"code","651c81d1":"code","d6e6f016":"code","e6828a2b":"code","ff1703c3":"code","b29586b1":"code","5954a65f":"code","a2e2c408":"code","dc83b386":"code","30561146":"code","42d80be9":"code","c0325c80":"code","c72dd47d":"code","4c611a4b":"code","4905fc8f":"code","05554b3f":"code","2d6133af":"code","a603cbfa":"code","c11fedc9":"code","f270e569":"code","6ce3206a":"code","8aaa581e":"code","71387786":"code","ce1f9788":"code","2defad80":"code","8a569b69":"code","f58c04a4":"code","5ca56f8e":"code","05fc6abc":"code","e881772c":"code","3026638f":"code","2437cdb5":"code","0a328a99":"code","86c1ef26":"code","3f9e7519":"code","caa9c22f":"code","a410e19b":"code","e168616e":"code","7fa14357":"code","c2e7e43a":"code","17c2b001":"code","fff1c907":"code","09edbf43":"code","5a44f1c0":"code","09d74eba":"code","3ba55e78":"code","0db3a295":"code","8ebdd273":"code","f286418b":"code","ddadbd83":"code","7e495882":"code","32e34f1a":"code","c38e64f2":"code","283c3a74":"code","12954d05":"code","5eb9c9ad":"code","cb4702b1":"code","4e899217":"code","d7a7fed2":"code","2c7d8971":"code","7cbcea98":"code","f9b2f502":"code","8721ef0f":"code","5ab9776c":"code","b4eddefc":"code","797a629f":"code","1605a74d":"code","7cde3be8":"code","ae767033":"code","138c2bd5":"code","736dbb2a":"code","26f88e0d":"code","3aff196f":"code","6e8e882b":"code","3c851bb2":"code","3eb664c5":"code","30788a7b":"code","b224e50f":"code","4e1546b0":"code","c3e7ef8c":"code","b512752b":"code","c4bf92f8":"code","d4ac15a5":"code","479536b3":"code","56cd083d":"code","bc92d8f3":"code","908e4331":"code","ff91c568":"code","df3fcc07":"code","a0cd53cf":"code","fe06ed01":"code","f28dbb41":"code","43685c8b":"code","ba9b1b34":"code","f66cde8c":"code","e7b9ee78":"code","6c7bb9e5":"code","15621156":"code","507dd2bd":"code","02db92b3":"code","5ceef62b":"code","43b54ffd":"code","f64a1ba9":"code","dc42f55f":"code","3922e6b9":"code","ee7094ff":"code","46ae863c":"code","510bb17b":"code","16c3ea56":"code","cf4c8c85":"code","17dac541":"code","a9f5e8e5":"code","989e7ee4":"code","d41f2224":"code","17ef2a0e":"code","c019f8db":"code","cfa7977c":"code","89609f19":"code","4db959a4":"code","9dba562b":"code","a4ef4cdd":"code","80c0a699":"code","66e0de5f":"code","285e99f8":"code","63c68c74":"code","8ec95b40":"code","51499439":"code","a3a9cdcf":"code","383a99f3":"code","49805079":"code","55d41097":"code","e715d906":"code","2edd9789":"code","48cd0ab5":"code","79acb6df":"code","fc47c65c":"code","607b10f7":"code","721afc8e":"code","aa6b7ff6":"code","315d2686":"code","8d202705":"code","730f7ff5":"code","d937c2c3":"code","67077c05":"code","d1e3a94b":"code","ff263c4d":"code","4964c206":"code","893231ae":"code","8da392e6":"code","55b753d5":"code","2dbd578c":"code","af88cf0c":"code","342d0a2c":"code","35e89581":"code","97342f82":"code","6c1629b6":"code","50f69579":"code","86c03b1a":"code","9c87024f":"code","bc02ff6a":"code","88863f8e":"code","7794d38d":"code","4e84db1e":"code","acd46ea2":"code","62b5f5e1":"code","17631a3a":"code","dbc66403":"code","2bd6f053":"code","e6f32b6c":"code","44370fb6":"code","bb1df028":"code","c9a79e3f":"code","5526c05a":"code","1d169806":"code","007ec108":"code","359f1c08":"code","c7e37671":"code","698ed2b6":"code","2f09dc90":"code","f05f949b":"code","b2a21fc0":"markdown","7e512166":"markdown","e51d31f4":"markdown","4c16ea42":"markdown","05ca6466":"markdown","80d243dd":"markdown","0e992d87":"markdown","e7be6b10":"markdown","adedd8ee":"markdown","473fccbb":"markdown","3925f6dd":"markdown","84c320a9":"markdown","2de8096b":"markdown","209504ab":"markdown","ab03a1d2":"markdown","7d5d7d2d":"markdown","68c58293":"markdown","a26f8166":"markdown","44a06d29":"markdown","46a3dff4":"markdown","b469f5a2":"markdown","cb03f40c":"markdown","b5c99070":"markdown"},"source":{"62835748":"#importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n","d01d10ce":"#importing dataset\n\nSource = \"\/kaggle\/input\/dry-bean-dataset\/Dry_Bean.csv\"\ndf = pd.read_csv(Source)\ndf\n","1a33f525":"#getting first five rows\ndf.head()","7631bdbd":"#fetching information from the data like the datatypes, count, features\ndf.info()","0a367454":"#checing for the null values\ndf.isnull().sum()","271c994b":"#checking for the quality of data from mean median mode std etc\ndf.describe()","2c0c0922":"#droping duplicate columns\ndf.drop_duplicates(inplace=True)","6802897f":"df.Class.value_counts()\n#checking balanced data","5df158a7":"#visualizing bargraph of class\nsns.countplot(df.Class)","5298b2ba":"df.Class.value_counts().plot(kind='pie')","6f03f478":"mino_class=len(df[df['Class']=='BOMBAY'])\nprint(mino_class)","c5119526":"majo_class_index=df[df['Class']=='DERMASON'].index\nprint(majo_class_index)","8686508e":"mino_class_index=df[df['Class']=='BOMBAY'].index","6c48e064":"random_majority_indices=np.random.choice(majo_class_index,mino_class,replace=False)\nunder_sample_indices=np.concatenate([mino_class_index,random_majority_indices])","dbfd9765":"majo_class_index=df[df['Class']=='SIRA'].index\nrandom_majority_indices=np.random.choice(majo_class_index,mino_class,replace=False)\nunder_sample_indices=np.concatenate([under_sample_indices,random_majority_indices])","1e5c0dac":"majo_class_index=df[df['Class']=='SEKER'].index\nrandom_majority_indices=np.random.choice(majo_class_index,mino_class,replace=False)\nunder_sample_indices=np.concatenate([under_sample_indices,random_majority_indices])","fe551fd6":"majo_class_index=df[df['Class']=='HOROZ'].index\nrandom_majority_indices=np.random.choice(majo_class_index,mino_class,replace=False)\nunder_sample_indices=np.concatenate([under_sample_indices,random_majority_indices])","a508a30f":"majo_class_index=df[df['Class']=='CALI'].index\nrandom_majority_indices=np.random.choice(majo_class_index,mino_class,replace=False)\nunder_sample_indices=np.concatenate([under_sample_indices,random_majority_indices])","e430a843":"majo_class_index=df[df['Class']=='BARBUNYA'].index\nrandom_majority_indices=np.random.choice(majo_class_index,mino_class,replace=False)\nunder_sample_indices=np.concatenate([under_sample_indices,random_majority_indices])","f73d91a2":"data=df.loc[under_sample_indices]","47da7966":"data.Class.value_counts()","3e9e2520":"data.replace(['SIRA','BOMBAY','DERMASON', 'BARBUNYA', 'HOROZ', 'CALI', 'SEKER',], [1,2,3,4,5,6,7], inplace=True)","6cb7af92":"sns.distplot(data.Area)\nplt.title('Area')","45e45c24":"sns.distplot(data.AspectRation)\nplt.title('AspectRation')","d3831be9":"sns.distplot(data.Perimeter)\nplt.title('Perimeter')","8df43786":"sns.distplot(data.MajorAxisLength)\nplt.title('MajorAxisLength')","7cbf2c49":"sns.distplot(data.MinorAxisLength)\nplt.title('MinorAxisLength')","b6d3f99c":"sns.distplot(data.Eccentricity)\nplt.title('Eccentricity')","98a0837b":"sns.distplot(data.ConvexArea )\nplt.title('ConvexArea ')","bed6b61c":"sns.distplot(data.EquivDiameter )\nplt.title('EquivDiameter ')","8361e1f5":"sns.distplot(data.Extent)\nplt.title('Extent')","ec54dd61":"sns.distplot(data.roundness)\nplt.title('roundness')","2692f975":"sns.distplot(data.Compactness)\nplt.title('Compactness')","c9964c59":"sns.distplot(data.Solidity)\nplt.title('Solidity')","db824839":"sns.distplot(data.ShapeFactor1)\nplt.title('ShapeFactor1')","4a6dc247":"sns.distplot(data.ShapeFactor2)\nplt.title('ShapeFactor2')","d198972f":"sns.distplot(data.ShapeFactor3)\nplt.title('ShapeFactor3')","746858cd":"sns.distplot(data.ShapeFactor4)\nplt.title('ShapeFactor4')","cd472746":"#pairplot of whole dataset \nsns.pairplot(data)","aa8adfaa":"sns.pairplot(data, hue='Class')\n#pairplot of dataset with respect to class","07837c24":"#heatmap to check corelation with the help of numeric values\nplt.figure(figsize=(15,10))\nsns.heatmap(data.corr(),annot=True)","bb5dd6b8":"#droping few attributes\ndata.drop(['ConvexArea','Solidity', 'roundness'], axis=1, inplace=True)","6d1026c4":"plt.figure(figsize=(15,10))\nsns.heatmap(data.corr(),annot=True)","e7555113":"#Droping few more attributes\ndata.drop(['ShapeFactor4','Extent', 'AspectRation'], axis=1, inplace=True)","25172019":"plt.figure(figsize=(15,10))\nsns.heatmap(data.corr(),annot=True)","0dd03fff":"#pairplot after droping attributes\nsns.pairplot(data, hue='Class')","0240dd11":"sns.boxplot(x=data.Class,y=data.Area)","7c072300":"sns.boxplot(x=data.Class,y=data.Perimeter)","7afc5821":"sns.boxplot(x=data.Class,y=data.EquivDiameter)","88212d13":"sns.boxplot(x=data.Class,y=data.ShapeFactor1)","656635be":"sns.boxplot(x=data.Class,y=data.ShapeFactor2)","eae780d0":"sns.boxplot(x=data.Class,y=data.ShapeFactor3)","ab827603":"sns.boxplot(x=data.Class,y=data.MajorAxisLength)","179d5f21":"sns.boxplot(x=data.Class,y=data.MinorAxisLength)","1ef305e1":"sns.boxplot(x=data.Class,y=data.Compactness)","4d26565f":"sns.boxplot(x=data.Class,y=data.Eccentricity)","f2674355":"def outlierdetection(data):\n    sorted(data)\n    \n    Q1,Q3=np.percentile(data,[25,75])\n    \n    IQR=Q3-Q1\n    \n    lower_range=Q1-(1.5*IQR)\n    \n    Upper_range=Q3+(1.5*IQR)\n    \n    return lower_range,Upper_range","b5152a1d":"data.Class.unique()","8f302b96":"j2=data[data.Class == 1].EquivDiameter\nlr,ur=outlierdetection(j2)","29d668e4":"data.drop(data.index[(data.Class ==1) &( data.EquivDiameter <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==1) &( data.EquivDiameter >= ur)],inplace=True)","e35ad858":"j1=data[data.Class == 2].EquivDiameter\nlr,ur=outlierdetection(j1)","26a4bdc7":"data.drop(data.index[(data.Class ==2) &( data.EquivDiameter <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==2) &( data.EquivDiameter >= ur)],inplace=True)","4635a061":"j3=data[data.Class == 3].EquivDiameter\nlr,ur=outlierdetection(j3)","4e5d53f5":"data.drop(data.index[(data.Class ==3) &( data.EquivDiameter <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==3) &( data.EquivDiameter >= ur)],inplace=True)","a739f855":"j4=data[data.Class == 4].EquivDiameter\nlr,ur=outlierdetection(j4)","48687e34":"data.drop(data.index[(data.Class ==4) &( data.EquivDiameter <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==4) &( data.EquivDiameter >= ur)],inplace=True)","3ce310e7":"j5=data[data.Class == 5].EquivDiameter\nlr,ur=outlierdetection(j5)","0b62ad85":"data.drop(data.index[(data.Class ==5) &( data.EquivDiameter <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==5) &( data.EquivDiameter >= ur)],inplace=True)","4d7c4ab7":"j6=data[data.Class == 6].EquivDiameter\nlr,ur=outlierdetection(j6)","cd7716ae":"data.drop(data.index[(data.Class ==6) &( data.EquivDiameter <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==6) &( data.EquivDiameter >= ur)],inplace=True)","ea00797e":"j7=data[data.Class == 7].EquivDiameter\nlr,ur=outlierdetection(j7)","b53f4b9f":"data.drop(data.index[(data.Class ==7) &( data.EquivDiameter <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==7) &( data.EquivDiameter >= ur)],inplace=True)","9d96b9a2":"sns.boxplot(x='Class',y='EquivDiameter',data=data)","27c2c4eb":"i1=data[data.Class == 1].ShapeFactor3\nlr,ur=outlierdetection(i1)","359450c0":"data.drop(data.index[(data.Class ==1) &( data.ShapeFactor3 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==1) &( data.ShapeFactor3 >= ur)],inplace=True)","4c54e3dc":"i2=data[data.Class == 2].ShapeFactor3\nlr,ur=outlierdetection(i2)","59002cdf":"data.drop(data.index[(data.Class ==2) &( data.ShapeFactor3 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==2) &( data.ShapeFactor3 >= ur)],inplace=True)","12e6ff22":"i3=data[data.Class == 3].ShapeFactor3\nlr,ur=outlierdetection(i3)","60da7fba":"data.drop(data.index[(data.Class ==3) &( data.ShapeFactor3 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==3) &( data.ShapeFactor3 >= ur)],inplace=True)","2939b874":"i4=data[data.Class ==4].ShapeFactor3\nlr,ur=outlierdetection(i4)","cf1bbff1":"data.drop(data.index[(data.Class ==4) &( data.ShapeFactor3 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==4) &( data.ShapeFactor3 >= ur)],inplace=True)","1c7544b6":"i5=data[data.Class == 5].ShapeFactor3\nlr,ur=outlierdetection(i5)","57cfeec2":"data.drop(data.index[(data.Class ==5) &( data.ShapeFactor3 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==5) &( data.ShapeFactor3 >= ur)],inplace=True)","93b7f1f6":"i6=data[data.Class == 6].ShapeFactor3\nlr,ur=outlierdetection(i6)","e04082de":"data.drop(data.index[(data.Class ==6) &( data.ShapeFactor3 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==6) &( data.ShapeFactor3 >= ur)],inplace=True)","651c81d1":"i7=data[data.Class == 7].ShapeFactor3\nlr,ur=outlierdetection(i7)","d6e6f016":"data.drop(data.index[(data.Class ==7) &( data.ShapeFactor3 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==7) &( data.ShapeFactor3 >= ur)],inplace=True)","e6828a2b":"sns.boxplot(x='Class',y='ShapeFactor3',data=data)","ff1703c3":"h1=data[data.Class == 1].ShapeFactor2\nlr,ur=outlierdetection(h1)","b29586b1":"data.drop(data.index[(data.Class ==1) &( data.ShapeFactor2 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==1) &( data.ShapeFactor2 >= ur)],inplace=True)","5954a65f":"h2=data[data.Class == 2].ShapeFactor2\nlr,ur=outlierdetection(h2)","a2e2c408":"data.drop(data.index[(data.Class ==2) &( data.ShapeFactor2 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==2) &( data.ShapeFactor2 >= ur)],inplace=True)","dc83b386":"h3=data[data.Class == 3].ShapeFactor2\nlr,ur=outlierdetection(h3)","30561146":"data.drop(data.index[(data.Class ==3) &( data.ShapeFactor2 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==3) &( data.ShapeFactor2 >= ur)],inplace=True)","42d80be9":"h4=data[data.Class == 4].ShapeFactor2\nlr,ur=outlierdetection(h4)","c0325c80":"data.drop(data.index[(data.Class ==4) &( data.ShapeFactor2 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==4) &( data.ShapeFactor2 >= ur)],inplace=True)","c72dd47d":"h5=data[data.Class == 5].ShapeFactor2\nlr,ur=outlierdetection(h5)","4c611a4b":"data.drop(data.index[(data.Class ==5) &( data.ShapeFactor2 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==5) &( data.ShapeFactor2 >= ur)],inplace=True)","4905fc8f":"h6=data[data.Class == 6].ShapeFactor2\nlr,ur=outlierdetection(h6)","05554b3f":"data.drop(data.index[(data.Class ==6) &( data.ShapeFactor2 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==6) &( data.ShapeFactor2 >= ur)],inplace=True)","2d6133af":"h7=data[data.Class == 7].ShapeFactor2\nlr,ur=outlierdetection(h7)","a603cbfa":"data.drop(data.index[(data.Class ==7) &( data.ShapeFactor2 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==7) &( data.ShapeFactor2 >= ur)],inplace=True)","c11fedc9":"sns.boxplot(x='Class',y='ShapeFactor2',data=data)","f270e569":"g1=data[data.Class == 1].ShapeFactor1\nlr,ur=outlierdetection(g1)","6ce3206a":"data.drop(data.index[(data.Class ==1) &( data.ShapeFactor1 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==1) &( data.ShapeFactor1 >= ur)],inplace=True)","8aaa581e":"g2=data[data.Class == 2].ShapeFactor1\nlr,ur=outlierdetection(g2)","71387786":"data.drop(data.index[(data.Class ==2) &( data.ShapeFactor1 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==2) &( data.ShapeFactor1 >= ur)],inplace=True)","ce1f9788":"g3=data[data.Class == 3].ShapeFactor1\nlr,ur=outlierdetection(g3)","2defad80":"data.drop(data.index[(data.Class ==3) &( data.ShapeFactor1 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==3) &( data.ShapeFactor1 >= ur)],inplace=True)","8a569b69":"g4=data[data.Class == 4].ShapeFactor1\nlr,ur=outlierdetection(g4)","f58c04a4":"data.drop(data.index[(data.Class ==4) &( data.ShapeFactor1 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==4) &( data.ShapeFactor1 >= ur)],inplace=True)","5ca56f8e":"g5=data[data.Class == 5].ShapeFactor1\nlr,ur=outlierdetection(g5)","05fc6abc":"data.drop(data.index[(data.Class ==5) &( data.ShapeFactor1 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==5) &( data.ShapeFactor1 >= ur)],inplace=True)","e881772c":"g6=data[data.Class == 6].ShapeFactor1\nlr,ur=outlierdetection(g6)","3026638f":"data.drop(data.index[(data.Class ==6) &( data.ShapeFactor1 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==6) &( data.ShapeFactor1 >= ur)],inplace=True)","2437cdb5":"g7=data[data.Class == 7].ShapeFactor1\nlr,ur=outlierdetection(g7)","0a328a99":"data.drop(data.index[(data.Class ==7) &( data.ShapeFactor1 <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==7) &( data.ShapeFactor1 >= ur)],inplace=True)","86c1ef26":"sns.boxplot(x='Class',y='ShapeFactor1',data=data)","3f9e7519":"f1=data[data.Class == 1].MajorAxisLength\nlr,ur=outlierdetection(f1)","caa9c22f":"data.drop(data.index[(data.Class ==1) &( data.MajorAxisLength <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==1) &( data.MajorAxisLength >= ur)],inplace=True)","a410e19b":"f2=data[data.Class == 2].MajorAxisLength\nlr,ur=outlierdetection(f2)","e168616e":"data.drop(data.index[(data.Class ==2) &( data.MajorAxisLength <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==2) &( data.MajorAxisLength >= ur)],inplace=True)","7fa14357":"f3=data[data.Class == 3].MajorAxisLength\nlr,ur=outlierdetection(f3)","c2e7e43a":"data.drop(data.index[(data.Class ==3) &( data.MajorAxisLength <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==3) &( data.MajorAxisLength >= ur)],inplace=True)","17c2b001":"f4=data[data.Class == 4].MajorAxisLength\nlr,ur=outlierdetection(f4)","fff1c907":"data.drop(data.index[(data.Class ==4) &( data.MajorAxisLength <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==4) &( data.MajorAxisLength >= ur)],inplace=True)","09edbf43":"f5=data[data.Class == 5].MajorAxisLength\nlr,ur=outlierdetection(f5)","5a44f1c0":"data.drop(data.index[(data.Class ==5) &( data.MajorAxisLength <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==5) &( data.MajorAxisLength >= ur)],inplace=True)","09d74eba":"f6=data[data.Class == 6].MajorAxisLength\nlr,ur=outlierdetection(f6)","3ba55e78":"data.drop(data.index[(data.Class ==6) &( data.MajorAxisLength <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==6) &( data.MajorAxisLength >= ur)],inplace=True)","0db3a295":"f7=data[data.Class ==7].MajorAxisLength\nlr,ur=outlierdetection(f7)","8ebdd273":"data.drop(data.index[(data.Class ==7) &( data.MajorAxisLength <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==7) &( data.MajorAxisLength >= ur)],inplace=True)","f286418b":"sns.boxplot(x='Class',y='MajorAxisLength',data=data)","ddadbd83":"e1=data[data.Class ==1].MinorAxisLength\nlr,ur=outlierdetection(e1)","7e495882":"data.drop(data.index[(data.Class ==1) &( data.MinorAxisLength <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==1) &( data.MinorAxisLength >= ur)],inplace=True)","32e34f1a":"e4=data[data.Class == 2].MinorAxisLength\nlr,ur=outlierdetection(e4)","c38e64f2":"data.drop(data.index[(data.Class ==2) &( data.MinorAxisLength <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==2) &( data.MinorAxisLength >= ur)],inplace=True)","283c3a74":"e5=data[data.Class == 3].MinorAxisLength\nlr,ur=outlierdetection(e5)","12954d05":"data.drop(data.index[(data.Class ==3) &( data.MinorAxisLength <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==3) &( data.MinorAxisLength >= ur)],inplace=True)","5eb9c9ad":"e7=data[data.Class == 4].MinorAxisLength\nlr,ur=outlierdetection(e7)","cb4702b1":"data.drop(data.index[(data.Class ==4) &( data.MinorAxisLength <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==4) &( data.MinorAxisLength >= ur)],inplace=True)","4e899217":"e6=data[data.Class == 5].MinorAxisLength\nlr,ur=outlierdetection(e6)","d7a7fed2":"data.drop(data.index[(data.Class ==5) &( data.MinorAxisLength <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==5) &( data.MinorAxisLength >= ur)],inplace=True)","2c7d8971":"e2=data[data.Class == 6].MinorAxisLength\nlr,ur=outlierdetection(e2)","7cbcea98":"data.drop(data.index[(data.Class ==6) &( data.MinorAxisLength <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==6) &( data.MinorAxisLength >= ur)],inplace=True)","f9b2f502":"e3=data[data.Class == 7].MinorAxisLength\nlr,ur=outlierdetection(e3)","8721ef0f":"data.drop(data.index[(data.Class ==7) &( data.MinorAxisLength <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==7) &( data.MinorAxisLength >= ur)],inplace=True)","5ab9776c":"sns.boxplot(x='Class',y='MinorAxisLength',data=data)","b4eddefc":"c1=data[data.Class == 1].Compactness\nlr,ur=outlierdetection(c1)","797a629f":"data.drop(data.index[(data.Class ==1) &( data.Compactness <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==1) &( data.Compactness >= ur)],inplace=True)","1605a74d":"c2=data[data.Class == 2].Compactness\nlr,ur=outlierdetection(c2)","7cde3be8":"data.drop(data.index[(data.Class ==2) &( data.Compactness <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==2) &( data.Compactness >= ur)],inplace=True)","ae767033":"c3=data[data.Class == 3].Compactness\nlr,ur=outlierdetection(c3)","138c2bd5":"data.drop(data.index[(data.Class ==3) &( data.Compactness <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==3) &( data.Compactness >= ur)],inplace=True)","736dbb2a":"c4=data[data.Class == 4].Compactness\nlr,ur=outlierdetection(c4)","26f88e0d":"data.drop(data.index[(data.Class ==4) &( data.Compactness <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==4) &( data.Compactness >= ur)],inplace=True)","3aff196f":"c5=data[data.Class ==5].Compactness\nlr,ur=outlierdetection(c5)","6e8e882b":"data.drop(data.index[(data.Class ==5) &( data.Compactness <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==5) &( data.Compactness >= ur)],inplace=True)","3c851bb2":"c6=data[data.Class == 6].Compactness\nlr,ur=outlierdetection(c6)","3eb664c5":"data.drop(data.index[(data.Class ==6) &( data.Compactness <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==6) &( data.Compactness >= ur)],inplace=True)","30788a7b":"c7=data[data.Class == 7].Compactness\nlr,ur=outlierdetection(c7)","b224e50f":"data.drop(data.index[(data.Class ==7) &( data.Compactness <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==7) &( data.Compactness >= ur)],inplace=True)","4e1546b0":"sns.boxplot(x='Class',y='Compactness',data=data)","c3e7ef8c":"b1=data[data.Class == 1].Eccentricity\nlr,ur=outlierdetection(b1)","b512752b":"data.drop(data.index[(data.Class ==1) &( data.Eccentricity <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==1) &( data.Eccentricity >= ur)],inplace=True)","c4bf92f8":"b2=data[data.Class == 2].Eccentricity\nlr,ur=outlierdetection(b2)","d4ac15a5":"data.drop(data.index[(data.Class ==2) &( data.Eccentricity <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==2) &( data.Eccentricity >= ur)],inplace=True)","479536b3":"b3=data[data.Class == 3].Eccentricity\nlr,ur=outlierdetection(b3)","56cd083d":"data.drop(data.index[(data.Class ==3) &( data.Eccentricity <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==3) &( data.Eccentricity >= ur)],inplace=True)","bc92d8f3":"b4=data[data.Class ==4].Eccentricity\nlr,ur=outlierdetection(b4)","908e4331":"data.drop(data.index[(data.Class ==4) &( data.Eccentricity <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==4) &( data.Eccentricity >= ur)],inplace=True)","ff91c568":"b5=data[data.Class == 5].Eccentricity\nlr,ur=outlierdetection(b5)","df3fcc07":"data.drop(data.index[(data.Class ==5) &( data.Eccentricity <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==5) &( data.Eccentricity >= ur)],inplace=True)","a0cd53cf":"b6=data[data.Class ==6].Eccentricity\nlr,ur=outlierdetection(b6)","fe06ed01":"data.drop(data.index[(data.Class ==6) &( data.Eccentricity <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==6) &( data.Eccentricity >= ur)],inplace=True)","f28dbb41":"b7=data[data.Class == 7].Eccentricity\nlr,ur=outlierdetection(b7)","43685c8b":"data.drop(data.index[(data.Class ==7) &( data.Eccentricity <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==7) &( data.Eccentricity >= ur)],inplace=True)","ba9b1b34":"sns.boxplot(x='Class',y='Eccentricity',data=data)","f66cde8c":"d1=data[data.Class == 1].Area\nlr,ur=outlierdetection(d1)","e7b9ee78":"data.drop(data.index[(data.Class ==1) &( data.Area <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==1) &( data.Area >= ur)],inplace=True)","6c7bb9e5":"d2=data[data.Class == 2].Area\nlr,ur=outlierdetection(d2)","15621156":"data.drop(data.index[(data.Class ==2) &( data.Area <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==2) &( data.Area >= ur)],inplace=True)","507dd2bd":"d3=data[data.Class == 3].Area\nlr,ur=outlierdetection(d3)","02db92b3":"data.drop(data.index[(data.Class ==3) &( data.Area <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==3) &( data.Area >= ur)],inplace=True)","5ceef62b":"d4=data[data.Class == 4].Area\nlr,ur=outlierdetection(d4)","43b54ffd":"data.drop(data.index[(data.Class ==4) &( data.Area <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==4) &( data.Area >= ur)],inplace=True)","f64a1ba9":"d5=data[data.Class == 5].Area\nlr,ur=outlierdetection(d5)","dc42f55f":"data.drop(data.index[(data.Class ==5) &( data.Area <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==5) &( data.Area >= ur)],inplace=True)","3922e6b9":"d6=data[data.Class == 6].Area\nlr,ur=outlierdetection(d6)","ee7094ff":"data.drop(data.index[(data.Class ==6) &( data.Area <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==6) &( data.Area >= ur)],inplace=True)","46ae863c":"d7=data[data.Class == 7].Area\nlr,ur=outlierdetection(d7)","510bb17b":"data.drop(data.index[(data.Class ==7) &( data.Area <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==7) &( data.Area >= ur)],inplace=True)","16c3ea56":"sns.boxplot(x='Class',y='Area',data=data)","cf4c8c85":"a1=data[data.Class ==1].Perimeter\nlr,ur=outlierdetection(a1)","17dac541":"data.drop(data.index[(data.Class ==1) &( data.Perimeter <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==1) &( data.Perimeter >= ur)],inplace=True)","a9f5e8e5":"a2=data[data.Class == 2].Perimeter\nlr,ur=outlierdetection(a2)","989e7ee4":"data.drop(data.index[(data.Class ==2) &( data.Perimeter <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==2) &( data.Perimeter >= ur)],inplace=True)","d41f2224":"a3=data[data.Class == 3].Perimeter\nlr,ur=outlierdetection(a3)","17ef2a0e":"data.drop(data.index[(data.Class ==3) &( data.Perimeter <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==3) &( data.Perimeter >= ur)],inplace=True)","c019f8db":"a4=data[data.Class == 4].Perimeter\nlr,ur=outlierdetection(a4)","cfa7977c":"data.drop(data.index[(data.Class ==4) &( data.Perimeter <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==4) &( data.Perimeter >= ur)],inplace=True)","89609f19":"a5=data[data.Class == 5].Perimeter\nlr,ur=outlierdetection(a5)","4db959a4":"data.drop(data.index[(data.Class ==5) &( data.Perimeter <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==5) &( data.Perimeter >= ur)],inplace=True)","9dba562b":"a6=data[data.Class == 6].Perimeter\nlr,ur=outlierdetection(a6)","a4ef4cdd":"data.drop(data.index[(data.Class ==6) &( data.Perimeter <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==6) &( data.Perimeter >= ur)],inplace=True)","80c0a699":"a7=data[data.Class == 7].Perimeter\nlr,ur=outlierdetection(a7)","66e0de5f":"data.drop(data.index[(data.Class ==7) &( data.Perimeter <= lr)],inplace=True)\ndata.drop(data.index[(data.Class ==7) &( data.Perimeter >= ur)],inplace=True)","285e99f8":"sns.boxplot(x='Class',y='Perimeter',data=data)","63c68c74":"#Data Spliting\nx= data.iloc[:,:-1].values  \ny= data.iloc[:, -1].values ","8ec95b40":"#train test split\nfrom sklearn.model_selection import train_test_split  \nx_train, x_test, y_train, y_test= train_test_split(x, y, test_size= 0.25, random_state=0) ","51499439":"#feature scaling\nfrom sklearn.preprocessing import StandardScaler    \nst_x= StandardScaler()    \nx_train= st_x.fit_transform(x_train)    \nx_test= st_x.transform(x_test)  ","a3a9cdcf":"#Importing EvaluAtion Libraries\nfrom sklearn import metrics\nfrom sklearn.metrics import precision_score,accuracy_score,recall_score,confusion_matrix\nfrom sklearn.metrics import classification_report\n\n","383a99f3":"#training the model\nfrom sklearn.neighbors import KNeighborsClassifier  \nclassifier= KNeighborsClassifier(n_neighbors=5, metric='minkowski', p=2 )  \nclassifier.fit(x_train, y_train)","49805079":"#predicting\ny_pred=classifier.predict(x_test)","55d41097":"report=classification_report(y_test,y_pred)\nprint(report)","e715d906":"Evaluation=pd.DataFrame(['knn'],columns=['Algorithm'])\n\nEvaluation.loc[0,'Precision']=metrics.precision_score(y_test, y_pred, average='micro')\nEvaluation.loc[0,'Recall']=metrics.recall_score(y_test, y_pred, average='micro')\nEvaluation.loc[0,'F1 Score']=metrics.f1_score(y_test, y_pred, average='micro')\nEvaluation.loc[0,'Accuracy']=metrics.accuracy_score(y_test,y_pred)","2edd9789":"Evaluation","48cd0ab5":"classifier.score(x_test,y_test)","79acb6df":"cm=confusion_matrix(y_test,y_pred)\nprint(cm)","fc47c65c":"from sklearn.tree import DecisionTreeClassifier\ndtc_model = DecisionTreeClassifier()\ndtc_model.fit(x_train,y_train)\n","607b10f7":"y_pred = dtc_model.predict(x_test)","721afc8e":"report=classification_report(y_test,y_pred)\nprint(report)","aa6b7ff6":"Evaluation.loc[1,'Algorithm']='Decision Tree'\nEvaluation.loc[1,'Precision']=metrics.precision_score(y_test, y_pred, average='micro')\nEvaluation.loc[1,'Recall']=metrics.recall_score(y_test, y_pred, average='micro')\nEvaluation.loc[1,'F1 Score']=metrics.f1_score(y_test, y_pred, average='micro')\nEvaluation.loc[1,'Accuracy']=metrics.accuracy_score(y_test,y_pred)\nEvaluation","315d2686":"dtc_model.score(x_test,y_test)","8d202705":"cm=confusion_matrix(y_test,y_pred)\nprint(cm)","730f7ff5":"from sklearn.naive_bayes import GaussianNB\ncla = GaussianNB()\ncla.fit(x_train, y_train)\n#cla.score(x_test,y_test)","d937c2c3":"y_pred=cla.predict(x_test)","67077c05":"Evaluation.loc[2,'Algorithm']='Naive Bayes'\nEvaluation.loc[2,'Precision']=metrics.precision_score(y_test, y_pred, average='micro')\nEvaluation.loc[2,'Recall']=metrics.recall_score(y_test, y_pred, average='micro')\nEvaluation.loc[2,'F1 Score']=metrics.f1_score(y_test, y_pred, average='micro')\nEvaluation.loc[2,'Accuracy']=metrics.accuracy_score(y_test,y_pred)\nEvaluation","d1e3a94b":"cla.score(x_test,y_test)","ff263c4d":"cm=confusion_matrix(y_test,y_pred)\nprint(cm)","4964c206":"from sklearn.ensemble import RandomForestClassifier\nclassifier1 = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)\nclassifier1.fit(x_train, y_train)","893231ae":"y_pred=classifier1.predict(x_test)","8da392e6":"Evaluation.loc[3,'Algorithm']='RF'\nEvaluation.loc[3,'Precision']=metrics.precision_score(y_test, y_pred, average='micro')\nEvaluation.loc[3,'Recall']=metrics.recall_score(y_test, y_pred, average='micro')\nEvaluation.loc[3,'F1 Score']=metrics.f1_score(y_test, y_pred, average='micro')\nEvaluation.loc[3,'Accuracy']=metrics.accuracy_score(y_test,y_pred)\nEvaluation","55b753d5":"report=classification_report(y_test,y_pred)\nprint(report)","2dbd578c":"classifier1.score(x_test,y_test)","af88cf0c":"cm=confusion_matrix(y_test,y_pred)\nprint(cm)","342d0a2c":"from sklearn.linear_model import LogisticRegression\nregressor=LogisticRegression(random_state=0)\nregressor.fit(x_train,y_train)","35e89581":"\ny_pred=regressor.predict(x_test)","97342f82":"regressor.score(x_test,y_test)","6c1629b6":"report=classification_report(y_test,y_pred)\nprint(report)","50f69579":"Evaluation.loc[4,'Algorithm']='LR'\nEvaluation.loc[4,'Precision']=metrics.precision_score(y_test, y_pred, average='micro')\nEvaluation.loc[4,'Recall']=metrics.recall_score(y_test, y_pred, average='micro')\nEvaluation.loc[4,'F1 Score']=metrics.f1_score(y_test, y_pred, average='micro')\nEvaluation.loc[4,'Accuracy']=metrics.accuracy_score(y_test,y_pred)\nEvaluation","86c03b1a":"cm=confusion_matrix(y_test,y_pred)\nprint(cm)","9c87024f":"from sklearn.svm import SVC\nclassifier = SVC(kernel = 'linear', random_state = 0)\nclassifier.fit(x_train, y_train)","bc02ff6a":"y_pred=classifier.predict(x_test)","88863f8e":"report=classification_report(y_test,y_pred)\nprint(report)","7794d38d":"Evaluation.loc[5,'Algorithm']='SVM_linear'\nEvaluation.loc[5,'Precision']=metrics.precision_score(y_test, y_pred, average='micro')\nEvaluation.loc[5,'Recall']=metrics.recall_score(y_test, y_pred, average='micro')\nEvaluation.loc[5,'F1 Score']=metrics.f1_score(y_test, y_pred, average='micro')\nEvaluation.loc[5,'Accuracy']=metrics.accuracy_score(y_test,y_pred)\nEvaluation","4e84db1e":"classifier.score(x_test,y_test)","acd46ea2":"cm=confusion_matrix(y_test,y_pred)\nprint(cm)","62b5f5e1":"from sklearn.svm import SVC\ncl = SVC(kernel = 'rbf')\ncl.fit(x_train, y_train)\ncl.score(x_test,y_test)","17631a3a":"y_pred=cl.predict(x_test)","dbc66403":"report=classification_report(y_test,y_pred)\nprint(report)","2bd6f053":"cm=confusion_matrix(y_test,y_pred)\nprint(cm)","e6f32b6c":"Evaluation.loc[6,'Algorithm']='SVM_rb funcion'\nEvaluation.loc[6,'Precision']=metrics.precision_score(y_test, y_pred, average='micro')\nEvaluation.loc[6,'Recall']=metrics.recall_score(y_test, y_pred, average='micro')\nEvaluation.loc[6,'F1 Score']=metrics.f1_score(y_test, y_pred, average='micro')\nEvaluation.loc[6,'Accuracy']=metrics.accuracy_score(y_test,y_pred)\nEvaluation","44370fb6":"plt.figure(figsize=(10,5))\nsns.barplot(x='Algorithm',y='Precision',data=Evaluation)","bb1df028":"plt.figure(figsize=(10,5))\nsns.barplot(x='Algorithm',y='Accuracy',data=Evaluation)","c9a79e3f":"plt.figure(figsize=(10,5))\nsns.barplot(x='Algorithm',y='Recall',data=Evaluation)","5526c05a":"plt.figure(figsize=(10,5))\nsns.barplot(x='Algorithm',y='F1 Score',data=Evaluation)","1d169806":"Evaluation[Evaluation.Recall==Evaluation.Recall.min()]","007ec108":"Evaluation[Evaluation.Recall==Evaluation.Recall.max()]","359f1c08":"Evaluation[Evaluation.Precision==Evaluation.Precision.min()]","c7e37671":"Evaluation[Evaluation.Precision==Evaluation.Precision.max()]","698ed2b6":"Evaluation[Evaluation.Accuracy==Evaluation.Accuracy.min()]","2f09dc90":"Evaluation[Evaluation.Accuracy==Evaluation.Accuracy.max()]","f05f949b":"Evaluation","b2a21fc0":"# Removing the outlier from independent variables with respect to target variables and then visualizing it with the help of boxplot","7e512166":"# *** OUTLIER***\n","e51d31f4":"# Support vector machine","4c16ea42":"# K Nearest Neighbors","05ca6466":"## ***Comparing model***","80d243dd":"Inference-from eda we performed above we observed that\n\n*   we do not have null values\n*   we have 7 different\/unique values in class\n*   we have inbalanced data\n*   we have 13611 rows and 17 column\n\n","0e992d87":"# Inference-From above visualization we have observed\n\n\n*   Pairplot before droping attributes were not so helpful in checking corelation\n*   Heatmap was great to check corelation and helpful in removing unwanted attributes\n* Pairplot after droping attribute was much clearly visualized\n\n","e7be6b10":"# Quality Check","adedd8ee":"**CONCLUSION:**\n* Naive bayes,random forest and KNN gives same efficency which is 92%\n* Decision tree, SVM_RBF gives same efficency which is 93%\n* Logistic regression and SVM_Linear gives same efficency which is 94%\n* All the algorithm gives almost similar Efficency. \n* Best can be Logistic Or SVM_linear\n\n","473fccbb":"## ***Objective-To determine seven different types of beans like HOROZ,CALI,DERMASON,SIRA,SEKER,BOMBAY,BARBUNYA based on their physical appearance like Area,Perimeter etc***","3925f6dd":"# Decision tree","84c320a9":"*** Inference ***\n* All the features have high correlation with the class.\n\n* Features like 'Area','ConvexArea' and 'EquivDiameter' have very high multi colinearity, so from these 3 features 2 have to be eliminated.\n\n* Other features also have multi colinearity among them. Eliminating them requires domain Knowledge\n* Out of 11 features we are left with 6 features to classify our model.\n\n* All these 6 features have high colinearity with the class attribute.","2de8096b":"# ***Models***\n","209504ab":"# Naive Bayes","ab03a1d2":"# Quality check is performed in a visualized manner on every attribute to check if the data is symetric skewed etc or not","7d5d7d2d":"# Corelation check","68c58293":"#Logistic Regression","a26f8166":"# Under Sampling","44a06d29":"# ***Dataset is now balanced and changed from categorical to numeric values for further process***","46a3dff4":"#***Eda***","b469f5a2":"Under sampling-process of balancing the inbalaced target variable","cb03f40c":"# Random Forest","b5c99070":"# *** Importing Libraries And Dataset***"}}