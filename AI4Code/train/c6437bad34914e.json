{"cell_type":{"e792dc06":"code","ac59d5e3":"code","4d901b7d":"code","cf589e4e":"code","09187f26":"code","4af6ad00":"code","aacb7702":"code","f52f981e":"code","9d2d1f5d":"code","5edfc1de":"code","7102471a":"code","76beb391":"code","b032655b":"code","e18013fc":"code","3c6e4ab5":"markdown","7861036c":"markdown","c18fa7ae":"markdown","8ea2c702":"markdown","13e1c3e9":"markdown"},"source":{"e792dc06":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ac59d5e3":"import matplotlib.pyplot as plt\nimport seaborn as sb","4d901b7d":"data = pd.read_csv('\/kaggle\/input\/top-video-games-19952021-metacritic\/all_games.csv')","cf589e4e":"data.head()","09187f26":"data.duplicated().any()","4af6ad00":"plt.figure(figsize = (16, 10))\nplt.title('Meta score and platform')\nsb.scatterplot(x = data['platform'], y = data['meta_score'])\nplt.xticks(rotation = 90)","aacb7702":"plt.figure(figsize = (26, 20))\nplt.title('User review based on platform')\nsb.scatterplot(x = data['meta_score'], y = data['user_review'], hue = data['platform'], data = data, palette = 'rocket')\nsb.set_style('darkgrid')","f52f981e":"plt.figure(figsize = (16, 10))\nplt.title('Meta Score')\nsb.kdeplot(data = data['meta_score'], shade = True)","9d2d1f5d":"data['release_date'] = pd.to_datetime(data['release_date'])\ndata['Year'] = data['release_date'].dt.year\ndata['Month'] = data['release_date'].dt.month_name()\ndata['Day'] = data['release_date'].dt.day_name()","5edfc1de":"data.head()","7102471a":"plt.figure(figsize = (16, 10))\nplt.title('Releases of games based on year')\nsb.countplot(x = data['Year'], data = data, palette = 'crest')","76beb391":"plt.figure(figsize = (16, 10))\nplt.title('Releases of games based on month')\nsb.countplot(x = data['Month'], data = data, palette = 'crest')","b032655b":"plt.figure(figsize = (16, 10))\nplt.title('Releases of games based on day')\nsb.countplot(x = data['Day'], data = data, palette = 'mako')","e18013fc":"plt.figure(figsize = (16, 10))\nplt.title('meta score and release year of games')\nsb.regplot(x = data['Year'], y = data['meta_score'])","3c6e4ab5":"**Analysis**\n    As it can be seen from the graph, October is the month with the most games released","7861036c":"**Analysis**\n    As it can be seen from the graph, most of the games were released on Tuesday.","c18fa7ae":"**Analysis**\n    As it can be seen from the graph, most of the meta score is in between 60 to 85, peaking around 75. That is most of the games have a meta score of 75.","8ea2c702":"**Analysis**\n    As it can be seen from the graph, 2018 was the year in which the most games were released.","13e1c3e9":"**Analysis**\n    As the regression line is slightly positive, meta score increased slightly with increase in games being released in a year.\n    "}}