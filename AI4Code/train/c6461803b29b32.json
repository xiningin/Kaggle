{"cell_type":{"6a914532":"code","97dce011":"code","f6c309ec":"code","0b776f27":"code","336554fa":"code","80c7e979":"code","b5878d38":"code","8899db9a":"code","2ba4b46f":"code","f5ec8b26":"code","320796a9":"code","a583cd90":"code","33143c75":"code","6ea3c798":"code","81a0850e":"code","2878e2e0":"code","7927e8c3":"code","dfa3ae0b":"code","0c648f05":"code","71eed28e":"code","7340b440":"code","5349bf91":"code","07009515":"markdown","156386c0":"markdown","2d5e6a6e":"markdown","1adf69b2":"markdown","365d1c7a":"markdown","58b9ef57":"markdown","ccca9c3b":"markdown","78348221":"markdown","79996c68":"markdown","38e3e207":"markdown","48664f95":"markdown","1f77d996":"markdown","f853770d":"markdown","fb38ccc4":"markdown","597dc840":"markdown","f86398fc":"markdown","ef966fab":"markdown"},"source":{"6a914532":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","97dce011":"data = pd.read_csv('..\/input\/datasetknn\/DataSetKNN.csv')","f6c309ec":"data.head() ","0b776f27":"data.tail() ","336554fa":"# THIS IS GOING TO BE A VERY LARGE PLOT\nsns.pairplot(data,hue='TARGET CLASS',palette='coolwarm')","80c7e979":"from sklearn.preprocessing import StandardScaler","b5878d38":"scaler = StandardScaler()","8899db9a":"scaler.fit(data.drop('TARGET CLASS',axis=1))","2ba4b46f":"scaled_features = scaler.transform(data.drop('TARGET CLASS',axis=1))","f5ec8b26":"data_feat = pd.DataFrame(scaled_features,columns=data.columns[:-1])\ndata_feat.head()","320796a9":"from sklearn.model_selection import train_test_split","a583cd90":"X_train, X_test, y_train, y_test = train_test_split(scaled_features,data['TARGET CLASS'],\n                                                    test_size=0.30)","33143c75":"from sklearn.neighbors import KNeighborsClassifier","6ea3c798":"knn = KNeighborsClassifier(n_neighbors=1)","81a0850e":"knn.fit(X_train,y_train)","2878e2e0":"pred = knn.predict(X_test)","7927e8c3":"from sklearn.metrics import classification_report,confusion_matrix","dfa3ae0b":"print(confusion_matrix(y_test,pred))","0c648f05":"print(classification_report(y_test,pred))","71eed28e":"error_rate = []\n\n# Will take some time\nfor i in range(1,40):\n    \n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train,y_train)\n    pred_i = knn.predict(X_test)\n    error_rate.append(np.mean(pred_i != y_test))","7340b440":"plt.figure(figsize=(10,6))\nplt.plot(range(1,40),error_rate,color='blue', linestyle='dashed', marker='o',\n         markerfacecolor='red', markersize=10)\nplt.title('Error Rate vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Error Rate')","5349bf91":"# NOW WITH K=30\nknn = KNeighborsClassifier(n_neighbors=30)\n\nknn.fit(X_train,y_train)\npred = knn.predict(X_test)\n\nprint('WITH K=30')\nprint('\\n')\nprint(confusion_matrix(y_test,pred))\nprint('\\n')\nprint(classification_report(y_test,pred))","07009515":"**Convert the scaled features to a dataframe and check the head of this dataframe to make sure the scaling worked.**","156386c0":"\n# 3-EDA\nSince this data is artificial, we'll just do a large pairplot with seaborn.\nUse seaborn on the dataframe to create a pairplot with the hue indicated by the TARGET CLASS column.","2d5e6a6e":"**Use the .transform() method to transform the features to a scaled version.**","1adf69b2":"#  K Nearest Neighbors Project\n\nWelcome to the KNN Project!\n\n\n## 1_ Import Libraries\n**Import pandas,seaborn, and the usual libraries.**","365d1c7a":"**Create a KNN model instance with n_neighbors=1**","58b9ef57":"# 6- Train Test Split\n\nUse train_test_split to split your data into a training set and a testing set.","ccca9c3b":"** Create a confusion matrix and classification report.**","78348221":" **Create a StandardScaler() object called scaler.**","79996c68":"**Now create the following plot using the information from your for loop.**","38e3e207":"# 4- Standardize the Variables\nTime to standardize the variables.\n Import StandardScaler from Scikit learn.","48664f95":"# 10_ Retrain with new K Value\n\nRetrain your model with the best K value (up to you to decide what you want) and re-do the classification report and the confusion matrix.","1f77d996":"# Fit this KNN model to the training data.","f853770d":"# 9_ Choosing a K Value\n\n**Let's go ahead and use the elbow method to pick a good K Value!**\n\n Create a for loop that trains various KNN models with different k values, then keep track of the error_rate for each of these models with a list. Refer to the lecture if you are confused on this step.","fb38ccc4":"# 8_ Predictions and Evaluations\n\nLet's evaluate our KNN model!\n\nUse the predict method to predict values using your KNN model and X_test.","597dc840":" **Fit scaler to the features.**","f86398fc":"# 7- Using KNN\n\nImport KNeighborsClassifier from scikit learn.","ef966fab":"# 2_Get the Data\n\n Read the 'KNN_Project_Data csv file into a dataframe"}}