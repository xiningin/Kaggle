{"cell_type":{"7b943ac1":"code","025898f6":"code","cfb52ddf":"code","9fc0678d":"code","dd10dd35":"code","dec8404a":"code","f2c4132d":"code","33c44e6a":"code","00dfacb0":"code","48b13d51":"code","b2f30942":"code","9e86e3f8":"code","d6145df6":"code","4f30c35c":"code","587c969b":"code","8feb6547":"code","eecc962b":"code","8b963ffd":"code","729c4b05":"code","56cc53db":"code","5e9ccf7e":"code","09d4cd4e":"code","1b5e55ef":"code","b2b8f780":"code","c01f8ff7":"code","85a1dd0d":"code","866d1fb6":"code","c9141da3":"code","3d2baf9f":"code","bc14d26f":"code","fc047c76":"code","8ff87c95":"code","521cc8ba":"markdown","3dcf3a33":"markdown","d3452e27":"markdown","90518c07":"markdown","73967cba":"markdown","4ebfb6de":"markdown","bb60dc70":"markdown","531a7cb8":"markdown","7c97f08f":"markdown","37927d6a":"markdown","41f15709":"markdown","24efd377":"markdown"},"source":{"7b943ac1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","025898f6":"data=pd.read_csv(\"\/kaggle\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")","cfb52ddf":"data.head() ","9fc0678d":"data.info()  #information about the dataset .. we get to know if there are any missing values","dd10dd35":"data.describe()","dec8404a":"data.shape #to know the exact shape of dataset","f2c4132d":"data['bmi'].isna().sum()","33c44e6a":"print(data['bmi'].mean())\nprint(data['bmi'].median())\nprint(data['bmi'].mode())","00dfacb0":"data['bmi']=data['bmi'].fillna(data['bmi'].median())","48b13d51":"data.info()","b2f30942":"import seaborn as sns #datavisualization ","9e86e3f8":"sns.jointplot(data['age'],data['stroke'])","d6145df6":"sns.jointplot(x=data['bmi'],y=data['stroke'])","4f30c35c":"data.head()","587c969b":"data=pd.get_dummies(data,columns=['gender'])","8feb6547":"data=pd.get_dummies(data,columns=['ever_married','work_type','Residence_type','smoking_status'])","eecc962b":"data.head()","8b963ffd":"data.shape","729c4b05":"data.columns","56cc53db":"x=data[['age','hypertension','heart_disease','avg_glucose_level','bmi','gender_Female','gender_Male','gender_Other','ever_married_No','work_type_Govt_job',\n       'work_type_Never_worked','work_type_Private','work_type_Self-employed','work_type_children','Residence_type_Rural','Residence_type_Urban','smoking_status_Unknown','smoking_status_formerly smoked','smoking_status_never smoked',\n       'smoking_status_smokes']]  #independent variable","5e9ccf7e":"y=data[['stroke']]  #dependent variable","09d4cd4e":"from sklearn.model_selection import train_test_split","1b5e55ef":"xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.3,random_state=7)\nprint(xtrain.shape)\nprint(xtest.shape)\nprint(ytrain.shape)\nprint(ytest.shape)","b2b8f780":"# importing necessary libraries for model building\n\nfrom sklearn.linear_model import LogisticRegression","c01f8ff7":"lr=LogisticRegression()\nlr.fit(xtrain,ytrain)\na=lr.predict(xtest)    #result from logistic regression is stored in a for further metrics evaluation ","85a1dd0d":"print(a)","866d1fb6":"b=pd.DataFrame(a)\n","c9141da3":"from sklearn.metrics import classification_report as cr\ncr(a,ytest)","3d2baf9f":"from sklearn.ensemble import RandomForestClassifier \nrfc=RandomForestClassifier()\nrfc.fit(xtrain,ytrain)\nc=rfc.predict(xtest)\n\n\n","bc14d26f":"cr(c,ytest)","fc047c76":"data['stroke'].value_counts()","8ff87c95":"4861\/249","521cc8ba":"I have used one hot encoding to convert object type to 0 or 1 .. \nwe can also use label encoder from sklearn\n\n\nLets assign columns to dependent and independent variables ","3dcf3a33":"the missing values are filled ","d3452e27":"0's are 19.52 times that of 1's","90518c07":"we can see that there are object columns (gender,ever_married,work_type,Residence_type,smoking_status","73967cba":"Highly imbalanced dataset ,\nsince it is imbalanced dataset we cannot classify correctly,\nthe solution for this issue will be addressed in next notebook \n","4ebfb6de":"we should fill those na values in bmi \ni will be using median value to fill these na values ","bb60dc70":"Lets build the model using Logistic regression","531a7cb8":"lets split the data into train and test dataset. The dataset will be divided like train dataset contains 70% of the data and rest in test dataset ","7c97f08f":"we found that the column named bmi has missing values","37927d6a":"DATASET is loaded into our code","41f15709":"these are the first five rows of the dataset. In this dataset dependent variable (y) is stroke","24efd377":"in the bmi column we have 201 missing columns "}}