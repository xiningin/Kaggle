{"cell_type":{"b86c0808":"code","8ecd707a":"code","b76b1057":"code","bda99e8b":"code","36ec4730":"code","99f2bba8":"code","515c6591":"code","116b3f90":"code","67adbe5d":"code","462dd4d3":"code","a2f935c4":"code","b1847fb4":"code","d47c9103":"code","67d6c1ea":"code","dd9910d0":"code","4b79e73e":"code","7ff89625":"code","e90447d0":"code","46e08018":"code","02793893":"code","0fd99f18":"code","96e78f3f":"code","e4dff4fa":"code","35d15fd0":"code","48fb42c3":"code","1034fe5e":"code","ad66711b":"code","0a98fa92":"code","2631cbed":"code","5cf70aa6":"code","e6fc4c24":"code","3eb40872":"code","99281f57":"code","5accd0b3":"code","a2385049":"code","4227fe90":"markdown","97aa559f":"markdown","fddf8179":"markdown","ca4f9917":"markdown","13199bf7":"markdown","becffe15":"markdown","bafc32a8":"markdown","e41b72a8":"markdown","dcdbf5da":"markdown","9963fd13":"markdown","88882492":"markdown","467b9f4a":"markdown","bd1dc426":"markdown","2e99a8ab":"markdown","1e76a3f5":"markdown","d2f74484":"markdown","39eb737c":"markdown","1a1c9de1":"markdown","87dbb81c":"markdown","61906da4":"markdown","b0c88b9a":"markdown","04ab842a":"markdown","2687c992":"markdown","4115e9b1":"markdown","ea7512ce":"markdown","bcfc66c6":"markdown","f3e07ea0":"markdown","ec39bb37":"markdown","e1c364d7":"markdown","c1309a69":"markdown","b2e611fc":"markdown","26f25779":"markdown"},"source":{"b86c0808":"import numpy as np\nimport pandas as pd\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8ecd707a":"wellbeing = pd.read_csv('\/kaggle\/input\/lifestyle-and-wellbeing-data\/Wellbeing_and_lifestyle_data.csv')\nprint(wellbeing.shape)\nprint(list(wellbeing.columns))\nwellbeing.head()","b76b1057":"wellbeing = wellbeing.drop('Timestamp', axis=1)\nwellbeing = wellbeing.drop([10005]) # This entry contained errors that needed to be corrected or erased\nage_dict = {'Less than 20' : 1, '21 to 35' : 2, '36 to 50' : 3, '51 or more' : 4}\nwellbeing['AGE'] = pd.Series([age_dict[x] for x in wellbeing.AGE], index=wellbeing.index)\ngender_dict = {'Female' : 1, 'Male' : 0}\nwellbeing['GENDER'] = pd.Series([gender_dict[x] for x in wellbeing.GENDER], index=wellbeing.index)\nwellbeing['DAILY_STRESS'] = wellbeing['DAILY_STRESS'].astype(int)","bda99e8b":"import matplotlib.pyplot as plt\nimport seaborn as sns","36ec4730":"sns.set(style=\"white\")\n\nplt.figure(figsize=(10,4))\nsns.distplot(wellbeing['ACHIEVEMENT'], hist=True, color=\"g\").set_yticks([])\nsns.despine(bottom=False, left=True)","99f2bba8":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['DAILY_STRESS'], hist=True, rug=False, color=\"g\").set_yticks([])\nsns.despine(bottom=False, left=True)","515c6591":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['DAILY_STEPS'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","116b3f90":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['FRUITS_VEGGIES'], hist=True, rug=False).set_yticks([])\nsns.despine(bottom=False, left=True)","67adbe5d":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['PLACES_VISITED'], hist=True, rug=False).set_yticks([])\nsns.despine(bottom=False, left=True)","462dd4d3":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['CORE_CIRCLE'], hist=True, rug=False).set_yticks([])\nsns.despine(bottom=False, left=True)","a2f935c4":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['SUPPORTING_OTHERS'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","b1847fb4":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['SOCIAL_NETWORK'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","d47c9103":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['DONATION'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","67d6c1ea":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['BMI_RANGE'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","dd9910d0":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['TODO_COMPLETED'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","4b79e73e":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['FLOW'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","7ff89625":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['LIVE_VISION'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","e90447d0":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['SLEEP_HOURS'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","46e08018":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['LOST_VACATION'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","02793893":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['DAILY_SHOUTING'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","0fd99f18":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['SUFFICIENT_INCOME'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","96e78f3f":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['PERSONAL_AWARDS'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","e4dff4fa":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['TIME_FOR_PASSION'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","35d15fd0":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['DAILY_MEDITATION'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","48fb42c3":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['AGE'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","1034fe5e":"plt.figure(figsize=(10,4))\nsns.distplot(wellbeing['GENDER'], hist=True).set_yticks([])\nsns.despine(bottom=False, left=True)","ad66711b":"wellcorr = wellbeing.corr().sort_values(by=['DAILY_STRESS'])\nwellcorr[['ACHIEVEMENT', 'DAILY_STRESS']]","0a98fa92":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import r2_score","2631cbed":"# An alternative method to gridsearch I was using to figure out the right hyperparameters to use\n# Ultimately not as useful as I hoped\n\nX = wellbeing.drop(['DAILY_STRESS', 'ACHIEVEMENT'], axis=1)\ny = wellbeing[['DAILY_STRESS', 'ACHIEVEMENT']]\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 1, test_size=.2)\nest_range = range(5, 105, 5)\nscore_graph = {'MAE Score': [],'R2 Score': [] , 'n_estimators': []}\nest_list = []\nscore_list = []\nfor num in est_range:\n    gbr = RandomForestRegressor(n_estimators=num, random_state=0)\n    gbr.fit(train_X, train_y)\n    ls_preds = gbr.predict(val_X)\n    acc_1 = r2_score(val_y, ls_preds)\n    score_graph['R2 Score'] = score_graph['R2 Score'] + [acc_1]\n    acc_2 = mean_absolute_error(val_y, ls_preds)\n    print(num ,'estimators \\tR2 score is: ', acc_1,'\\tMean Absolute Error is:', acc_2)\n    score_graph['MAE Score'] = score_graph['MAE Score'] + [acc_2]\n    score_graph['n_estimators'] = score_graph['n_estimators'] + [num]\n    \n\nfig, ax =plt.subplots(1,2, figsize=(20, 5))\nax[0].set_title('R2 Score by number of estimators')\nsns.lineplot(x=score_graph['n_estimators'], y=score_graph['R2 Score'], ax=ax[0])\nax[1].set_title('Mean Absolute Error by number of estimators')\nsns.lineplot(x=score_graph['n_estimators'], y=score_graph['MAE Score'], ax=ax[1]);","5cf70aa6":"import warnings\nwarnings.filterwarnings(\"ignore\")#silences one of the warning for eli5 about a future incompatability","e6fc4c24":"import eli5\nfrom eli5.sklearn import PermutationImportance\n\nmy_model = RandomForestRegressor(n_estimators=100).fit(train_X, train_y)\n\nperm = PermutationImportance(my_model, n_iter=10, random_state=1).fit(val_X, val_y)\neli5.show_weights(perm, feature_names = val_X.columns.tolist())","3eb40872":"X = wellbeing.drop(['DAILY_STRESS'], axis=1)\ny = wellbeing['DAILY_STRESS']\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 1, test_size=.2)\nmy_model = RandomForestRegressor(n_estimators=100).fit(train_X, train_y)\n\nperm = PermutationImportance(my_model, n_iter=10, random_state=1).fit(val_X, val_y)\neli5.show_weights(perm, feature_names = val_X.columns.tolist())","99281f57":"X = wellbeing.drop(['DAILY_STRESS', 'ACHIEVEMENT'], axis=1)\ny = wellbeing[['DAILY_STRESS', 'ACHIEVEMENT']]\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 1, test_size=.2)\nmy_model = RandomForestRegressor(n_estimators=100).fit(train_X, train_y)\n\nperm = PermutationImportance(my_model, n_iter=10, random_state=1).fit(val_X, val_y)\neli5.show_weights(perm, feature_names = val_X.columns.tolist())","5accd0b3":"_ = X.columns\ndf_pred = {}\nprint('For each of the following enter an integer value representing your answer to the survey questions')\nfor col in _:\n    print('\\n',col, end='\\t')\n    df_pred[col] = [int(input())]\n\ndf = pd.DataFrame.from_dict(df_pred, orient='columns')\ndf","a2385049":"_ = my_model.predict(df)\nprint('Prediction of Daily Stress: ', float(_[:,0]), \"\\t\\tPrediction for Achievement: \", float(_[:,1]))","4227fe90":"# Feature Importance\n\nBelow is the ranked importance of each feature in predicting the target variable, using a technique called permeation importance. Essentially permeation importance works by shuffling a column of data, retraining and evaluating the model and measuring the change in performance, then resetting and trying again on a new column. the larger the change, the more signal was lost by shuffling the data. Typically I look for (based on experience and not a firm formula) a weight of .2 or higher for a given feature.\n\nIt is worth noting that a high feature importance does not mean a linear relationship. For example if high achievers were primarily made up of two groups of people, one who rarely ate vegetables and slept 8 or more hours a day, and another group who ate tons of vegetables and slept fewer than eight hours a day. In this example both sleep and vegetable eating would have a strong impact on the model, but would have a mediocre correlation. This also means that just because there is a strong feature importance doesn't mean that it is the result of having lots of a particular thing. \n","97aa559f":"### Pearson Correlation Coefficients\nBelow is a table containing the correlation coefficients for each variable. A score close to 1 indicates a strong, positive, linear correlation (as one goes up so does the other). A score close to -1 indicates a strong, negative correlation (as one increases the other decreases). And a score close to 0 indicates no correlation or an extremely weak one (one variables change does not impact the other in a linear fashion).","fddf8179":"# Initial Observations:\n\nFrom the places visited column I'm surprised to see such a large number of frequent travellers (those who travel 10+ times a year). As I expected, hours of sleep is a bit disturbing, the average participant isn't getting enough sleep. It's interesting to me that there is also an extremely weak linear correlation between sleep and achievement or stress, I'm curious what the next section will reveal about this. The Bimodal distribution of lost vacation time I also find sort of fascinating, it would appear that most people meticulously consume their vacation time, but there is also a large concentration of people who don't use their vacation time (maybe they feel guilty for using it, or find themselves perpetually chasing a goal that they can't stop).\n\n# Moving on to Machine learning for interpretability\n\nNext we want to use machine learning models to get a better picture of what impacts stress and achievement.","ca4f9917":"### Donation\n\nHOW MANY TIMES DO YOU DONATE YOUR TIME OR MONEY TO GOOD CAUSES? * \u25ba Over a period of 12 months. Include financial donation, your time contribution, fundraising, volunteering, serving your country and the poor, ...","13199bf7":"\n # Final Thoughts:\n\nThe highlighted features paint an interesting picture of what a high achieving, stress free life is like. I find myself curious about which are causes and which are effects in this dataset. Does stress lead into shouting, or does shouting lead to stress, or does one feed the other as an endless cycle.\n\nThere are a couple opportunities for improvements. The value of the outputs of the random forest might have been more useful if I had managed to get a more accurate model. It might have been interesting to add a day of the week feature to the dataset and see if there were any interesting trends.\n\nThis year I've challenged myself to complete one task on Kaggle per week, in order to develop a larger Data Science portfolio. If you found this notebook useful or interesting please give it an upvote. I'm always open to constructive feedback. If you have any questions, comments, concerns, or if you would like to collaborate on a future task of the week feel free to leave a comment here or message me directly. \n","becffe15":"### Age\n\nChanged to integer value to make corroloations easier to plot.\n\n1 = 'Less than 20'\n2 = '21 to 35'\n3 = '36 to 50'\n4 = '51 or more'","bafc32a8":"### Sufficient Income\n\nHOW SUFFICIENT IS YOUR INCOME TO COVER BASIC LIFE EXPENSES? * \u25ba Such as the costs of housing, food, health care, car and education.","e41b72a8":"### FLOW\n\nIN A TYPICAL DAY, HOW MANY HOURS DO YOU EXPERIENCE \"FLOW\"? * \u25ba 'Flow' is defined as the mental state, in which you are fully immersed in performing an activity. You then experience a feeling of energized focus, full involvement, and enjoyment in the process of this activity. \u25baWatch the youtube video from Mihaly Csikszentmihalyi \"Flow, the secret to happiness\"","dcdbf5da":"### Lost Vacation\n\nHOW MANY DAYS OF VACATION DO YOU TYPICALLY LOSE EVERY YEAR ? * \u25ba Unused vacation days, lost or carried forward into the following year. \u25baOr because of work stress during your vacation.\n","9963fd13":"### Daily Steps\n\nHOW MANY STEPS (IN THOUSANDS) DO YOU TYPICALLY WALK EVERYDAY? * \u25ba Thousand steps, daily average over multiple days including work days and week-end.","88882492":"### Feature Importance for Daily Stress\n\nDaily shouting, lost vacation, daily meditation, gender, sleep hours, and time for passion have the strongest impact on the model.","467b9f4a":"### Sleep Hours\n\nABOUT HOW LONG DO YOU TYPICALLY SLEEP? * \u25ba Over the course of a typical working week, including week-end","bd1dc426":"# Predicting Stress and Achievement:\nBelow is a function to predict your level of stress and achievement. You will need to run the notebook to see your answers. For a link to a simple script with just this function see: https:\/\/www.kaggle.com\/schorsi\/stress-and-achievement-ml-predictor\n\nThe model isn't as accurate as I would like, but you may still find it interesting. I encourage you to run this section a few times and try modifying your answers a little to see the impact on your predictions. Could you significantly lower your stress by getting an extra hour of sleep each night? Should you consider working more time for introspection into your day? Would you be more successful if you took more vacation time?\n\n* Fruit and Veggies: number of servings per day, enter 5 if 5 or more\n* Places Visited: 1 to 10\n* Core Circle: 1 to 10\n* Supporting Others: 1 to 10\n* Social Network: 1 to 10\n* Donations: 1 to 5\n* BMI Range: 1 = below 25, 2 = above 25\n* ToDo Completed: 1 to 10\n* Flow: 1 to 10\n* Daily Steps: 1 to 10 (Thousands)\n* Live Vision: 1 to 10\n* Sleep Hours: 1 to 10\n* Lost Vacation: 1 to 10\n* Daily Shouting: 1 to 10\n* Sufficient Income: 1 = insufficient, 2 = sufficient\n* Personal Awards: 1 to 10\n* Time For Passion: 1 to 10\n* Daily Meditation: 1 to 10\n* Age: 1 = 'Less than 20', 2 = '21 to 35', 3 = '36 to 50', 4 = '51 or more'\n* Gender: 0 is male, 1 is female","2e99a8ab":"### Live Vision\n\nFOR HOW MANY YEARS AHEAD IS YOUR LIFE VISION VERY CLEAR FOR? * \u25ba For instance, illustrated in a vision board, detailed in a personal journal or openly discussed with your spouse or close friends.","1e76a3f5":"### Social Network\n\nWITH HOW MANY PEOPLE DO YOU INTERACT WITH DURING A TYPICAL DAY? * \u25ba True interactions and dialogues at home, at work, at the gym, ... \u25ba Average of workdays and weekends","d2f74484":"### Places Visited\nHOW MANY NEW PLACES DO YOU VISIT? * \u25ba Over a period of 12 months. Include new states, new cities as well as museum, places of interest and parks in your neighborhood.","39eb737c":"### Achievement\n\nHOW MANY REMARKABLE ACHIEVEMENTS ARE YOU PROUD OF? * \u25ba Over the last 12 months, personal achievements known to your family, close friends or co-workers such as: running a marathon or important race, birth, successful kids, new house or major renovation, major success at work, opening a new business...","1a1c9de1":"### Gender\n1 = 'Female'\n0 = 'Male'","87dbb81c":"### Fruits and Veggies\nHOW MANY FRUITS OR VEGETABLES DO YOU EAT EVERYDAY? * \u25ba In a typical day, averaging workdays and weekends. Select 5 if more than 5.","61906da4":"### Time for Passion\n\nHOW MANY HOURS DO YOU SPEND EVERYDAY DOING WHAT YOU ARE PASSIONATE ABOUT? * \u25ba Daily hours spent doing what you are passionate and dreaming about, and\/or contributing to a greater cause: health, education, peace, society development, ...","b0c88b9a":"### Daily Stress\nHOW MUCH STRESS DO YOU TYPICALLY EXPERIENCE EVERYDAY? * \u25ba At work or at home, due to the environment (noise, pollution, insecurity...), your co-workers or boss, or because of tragic events such as divorce, job loss, serious illness, loss of family or friends,... \u25ba In average over 12 months.\n","04ab842a":"### Daily Shouting\n\nHOW OFTEN DO YOU SHOUT OR SULK AT SOMEBODY? * \u25ba In a typical week. \u25ba Expressing your negative emotions in an active or passive manner.","2687c992":"### Feature importance when predicting both\n\nWe have some solid feature importance from personal awards, flow, time for passion, supporting others, live vision, and daily shouting. \n","4115e9b1":"### Core Circle\n\nHOW MANY PEOPLE ARE VERY CLOSE TO YOU? * \u25ba i.e. close family and friends ready to provide you with a long-term unconditional support.","ea7512ce":"### Supporting Others\n\nHOW MANY PEOPLE DO YOU HELP ACHIEVE A BETTER LIFE? * \u25ba A reflection of your altruism or selflessness (see the TED video from Matthieu Ricard 'How to let altruism be your guide') \u25ba e.g.: caring for your family, actively supporting a friend, mentoring, coaching, developing or promoting a co-worker, ...\u25ba Over a period of 12 months.","bcfc66c6":"### Todo Completed\n\nHOW WELL DO YOU COMPLETE YOUR WEEKLY TO-DO LISTS? * \u25ba Include your weekly goals, work- and personal-related tasks. \u25ba On a scale of 0 = not at all to 10 = very well.","f3e07ea0":"### Daily Meditation\n\nIN A TYPICAL WEEK, HOW MANY TIMES DO YOU HAVE THE OPPORTUNITY TO THINK ABOUT YOURSELF? * \u25ba Include meditation, praying and relaxation activities such as fitness, walking in a park or lunch breaks.","ec39bb37":"### Personal Awards\n\nHOW MANY RECOGNITIONS HAVE YOU RECEIVED IN YOUR LIFE? * \u25ba Significant public recognitions validating a personal level of expertise and engagement \u25ba E.g.: diploma, degree, certificate, accreditation, award, prize, published book, presentation at major conference, medals, cups, titles...","e1c364d7":"# Task: Can you predict stress levels or personal achievements with ML?\n\nThe goal of this notebook is to use machine learning to rank important features for determining a person's daily stress and achievements. The notebook begins with descriptions of each feature, followed by a plot of the distributions of each feature. Next, the notebook shows feature weights using permeation importance. The final section of the notebook uses the model to predict a person's level of stress and achievement based on a user's input (one will need to fork the notebook to enter their own info).\n\nSpecial thanks to:\n* Yvon Dalat https:\/\/www.kaggle.com\/ydalat for both the dataset and the task. ","c1309a69":"### Feature Importance for Achievement\n\nNaturally Personal awards have a strong connection (If we look at the definitions above you will notice that the two are very similar, with Achievement being more of a lifetime score and Awards being a last 12 month score). Flow, supporting others,Time for passion,  and live vision also have a strong impact on prediction of achievement. ","b2e611fc":"# Data Distribution and Description\n\nThis section contains plots of the distributions and the description of each feature. Descriptions are copied from the survey questions themselves. Starting first with our two target variables, Achievement and Stress.","26f25779":"### BMI Range\n\nWHAT IS YOUR BODY MASS INDEX (BMI) RANGE? * \u25ba Your body mass in kg divided by the square of your height in meters \u25ba Check the online BMI calculator such as www.cdc.gov\/healthyweight\/assessing\/bmi\/index.html. \u25ba For instance, an adult of 6 feet and 184 pounds has a BMI of 25"}}