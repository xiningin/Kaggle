{"cell_type":{"a058b711":"code","63aba241":"code","53d2beed":"code","fb3944be":"code","b4a41649":"code","1caef5cb":"code","9cdda5da":"code","e63fd81b":"code","fb6f6e78":"code","81c0d21b":"code","6fca3a85":"code","64f6a69c":"code","78239d44":"code","2f85ef30":"code","c17ce568":"code","93ac0017":"code","acb0d591":"code","56e8a736":"code","fcfc092c":"markdown","ca44da8a":"markdown","b6da5e23":"markdown","a1a1d861":"markdown","931e666d":"markdown","e2bd4992":"markdown","8a7462f0":"markdown","90353ffe":"markdown","3d912fd3":"markdown","b4020031":"markdown"},"source":{"a058b711":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","63aba241":"import seaborn as sns\nimport matplotlib.pyplot as plt","53d2beed":"data = pd.read_csv('\/kaggle\/input\/pima-indians-diabetes-database\/diabetes.csv')\ndata","fb3944be":"data.info()","b4a41649":"data.isnull().sum()","1caef5cb":"Death_Preg = data[data['Outcome'] == 1]['Pregnancies']\nAlive_Preg = data[data['Outcome'] == 0]['Pregnancies']\nprint(Death_Preg.describe())\nprint(Alive_Preg.describe())\nplt.plot(np.arange(0,len(Death_Preg)),Death_Preg)\nplt.show()\nplt.plot(np.arange(0,len(Alive_Preg)),Alive_Preg)\nplt.show()","9cdda5da":"Death_BloodPressure= data[data['Outcome'] == 1]['BloodPressure']\nAlive_BloodPressure = data[data['Outcome'] == 0]['BloodPressure']\nprint(Death_BloodPressure.describe())\nprint(Alive_BloodPressure.describe())\nplt.plot(np.arange(0,len(Death_BloodPressure)),Death_BloodPressure)\nplt.show()\nplt.plot(np.arange(0,len(Alive_BloodPressure)),Alive_BloodPressure)\nplt.show()","e63fd81b":"Death_Glucose = data[data['Outcome'] == 1]['Glucose']\nAlive_Glucose = data[data['Outcome'] == 0]['Glucose']\nprint(Death_Glucose.describe())\nprint(Alive_Glucose.describe())\nplt.plot(np.arange(0,len(Death_Glucose)),Death_Glucose)\nplt.show()\nplt.plot(np.arange(0,len(Alive_Glucose)),Alive_Glucose)\nplt.show()","fb6f6e78":"Death_SkinThickness = data[data['Outcome'] == 1]['SkinThickness']\nAlive_SkinThickness = data[data['Outcome'] == 0]['SkinThickness']\nprint(Death_SkinThickness.describe())\nprint(Alive_SkinThickness.describe())\nplt.plot(np.arange(0,len(Death_SkinThickness)),Death_SkinThickness)\nplt.show()\nplt.plot(np.arange(0,len(Alive_SkinThickness)),Alive_SkinThickness)\nplt.show()","81c0d21b":"Death_Insulin = data[data['Outcome'] == 1]['Insulin']\nAlive_Insulin = data[data['Outcome'] == 0]['Insulin']\nprint(Death_Insulin.describe())\nprint(Alive_Insulin.describe())\nplt.plot(np.arange(0,len(Death_Insulin)),Death_Insulin)\nplt.show()\nplt.plot(np.arange(0,len(Alive_Insulin)),Alive_Insulin)\nplt.show()","6fca3a85":"Death_BMI = data[data['Outcome'] == 1]['BMI']\nAlive_BMI = data[data['Outcome'] == 0]['BMI']\nprint(Death_BMI.describe())\nprint(Alive_BMI.describe())\nplt.plot(np.arange(0,len(Death_BMI)),Death_BMI)\nplt.show()\nplt.plot(np.arange(0,len(Alive_BMI)),Alive_BMI)\nplt.show()","64f6a69c":"Death_DiabetesPedigreeFunction = data[data['Outcome'] == 1]['DiabetesPedigreeFunction']\nAlive_DiabetesPedigreeFunction = data[data['Outcome'] == 0]['DiabetesPedigreeFunction']\nprint(Death_DiabetesPedigreeFunction.describe())\nprint(Alive_DiabetesPedigreeFunction.describe())\nplt.plot(np.arange(0,len(Death_DiabetesPedigreeFunction)),Death_DiabetesPedigreeFunction)\nplt.show()\nplt.plot(np.arange(0,len(Alive_DiabetesPedigreeFunction)),Alive_DiabetesPedigreeFunction)\nplt.show()","78239d44":"Death_Age = data[data['Outcome'] == 1]['Age']\nAlive_Age = data[data['Outcome'] == 0]['Age']\nprint(Death_Age.describe())\nprint(Alive_Age.describe())\nplt.plot(np.arange(0,len(Death_Age)),Death_Age)\nplt.show()\nplt.plot(np.arange(0,len(Alive_Age)),Alive_Age)\nplt.show()","2f85ef30":"data_corr = data.corr()\ndata_corr","c17ce568":"plt.figure(figsize=(10,10))\nsns.heatmap(data_corr,annot=True)\nplt.show()","93ac0017":"data_y = data['Outcome']\ndel data['Outcome']\ndel data['SkinThickness']\ndel data['Glucose']\n# \uc81c\uac00 \ubaa8\ub974\uace0 2\ubc88\uc744 \ub20c\ub7ec\uc11c ;;; \ud55c\ubc88 \ub204\ub974\uba74 \uc798 \ub429\ub2c8\ub2e4.","acb0d591":"from sklearn.linear_model import LogisticRegression\nfrom sklearn import tree\nmodel = LogisticRegression()\nmodel.fit(data,data_y)\n\nnew_data = model.predict(data)\nprint(model.score(data,data_y))\nprint(new_data)\nprint(data_y)","56e8a736":"clf = tree.DecisionTreeClassifier()\nclf = clf.fit(data,data_y)\n\nprint(clf.score(data,data_y))\nnew_data_2 = clf.predict(data)\nprint(new_data_2)\n\ncount = 0\nfor i in range(len(new_data)):\n  if new_data_2[i] != data_y[i]:\n      count = count + 1\nprint(count)   ","fcfc092c":"Sklearn\uc758 \ub85c\uc9c0\uc2a4\ud2f1\ud68c\uadc0\ub97c \uc774\uc6a9\ud558\uc5ec \uc54c\uc544\ubcf4\ub2c8 \uc815\ud655\ub3c4\uac00 \uc57d 70\ud37c\ub85c \ub098\uc628\uac70\ub85c \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","ca44da8a":"\uacb0\uc815\ud2b8\ub9ac\ub85c \ubaa8\ub378\uc744 \ud310\ub2e8\ud558\ub2c8 \uae30\uc874 \ub370\uc774\ud130\uc640 \uc0c8\ub85c\uc6b4 \ub370\uc774\ud130\uac00 \ubaa8\ub450 \uc77c\uce58\ud558\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","b6da5e23":"data.info()\ud568\uc218\ub97c \ud1b5\ud574\uc11c \ub370\uc774\ud130\uac00 \uc5b4\ub5a4 \uc885\ub958\uc774\uace0 \uac12\ub4e4\uc758 \ub370\uc774\ud130\ud0c0\uc785\uc744 \ud30c\uc545\ud569\ub2c8\ub2e4.\n","a1a1d861":"\uc0c1\uad00\uacc4\uc218\uac12\uc744 \uad6c\ud558\ub294 \uacf5\uc2dd\uc740 corr()\ud568\uc218\ub97c \uc774\uc6a9\ud558\uc5ec \uad6c\ud604\ud569\ub2c8\ub2e4.","931e666d":"\ub370\uc774\ud130\ub97c \ubcf4\ub2c8 768\ud589 9\uc5f4\uc774 \uc874\uc7ac\ud558\uace0 \ub9c8\uc9c0\ub9c9\uc5d0\ub294 \ud310\ubcc4\uc744 \ud558\ub294 \uc5f4\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4.","e2bd4992":"# Sklearn\uc744 \uc774\uc6a9\ud55c pima-indians-diabetes \uc608\uce21 \ubaa8\ub378 \uad6c\ud604\n\n1. \ubaa8\ub378 : \ub85c\uc9c0\uc2a4\ud2f1 \ud68c\uadc0, \ub79c\ub364\ud3ec\ub808\uc2a4\ud2b8 \ubaa8\ub378 \uc774\uc6a9","8a7462f0":"0\uc5d0 \uac00\uae4c\uc6b8\uc218\ub85d \uc0c1\uad00\uacc4\uc218\uac12\uc774 \uc801\ub2e4\ub294 \uc758\ubbf8\ub85c \ub458\uc774 \ub530\ub85c\ub17c\ub2e4\uace0 \uc0dd\uac01\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc800\ub294 \uadf8\ub798\uc11c 0.1\ubcf4\ub2e4 \uc791\uc740 \uac12\uc744 \uc81c\uac70\ud558\uae30\ub85c \ud558\uc600\uc2b5\ub2c8\ub2e4.","90353ffe":"\uac01 \uc5f4\uac12\uacfc OutCome \uc5f4\uac12\uc5d0 \ub530\ub77c \ube44\uad50\ud569\ub2c8\ub2e4. 1\uc744 \uc8fd\uc740\uac70\uace0 0\uc744 \uc0dd\uc874\ud55c\ub2e4\ub294 \ud558\uc5d0 \ud310\ub2e8\ud558\uc600\uc2b5\ub2c8\ub2e4.\ndescribe() \ud568\uc218\ub294 \uac01 \uc5f4\uac12\uc758 \ucd5c\ub313\uac12 \ucd5c\uc19f\uac12 \ud3c9\uade0 \ud45c\uc900\ud3b8\ucc28 \ub4f1\ub4f1\uc744 \ub2e4 \ub098\ud0c0\ub0b4\uc8fc\ub294 \uc5f4\uac12\uc785\ub2c8\ub2e4.\n","3d912fd3":"\uacb0\uce21\uac12\uc774 \uc874\uc7ac\ud558\ub294\uc9c0 \ud30c\uc545\ud558\uae30\uc704\ud574\uc11c data.isnull().sum()\uc744 \ud1b5\ud574\uc11c \uacb0\uce21\uac12\uc758 \uac1c\uc218\ub97c \ud30c\uc545\ud569\ub2c8\ub2e4.\n\n\uc774\ubc88 \ub370\uc774\ud130 \uac19\uc740 \uacbd\uc6b0\uc5d0\ub294 \uacb0\uce21\uac12\uc774 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. ","b4020031":"\uac01 \uc5f4\uac12\uc744 \ube44\uad50\ud558\uc600\uc744 \ub54c \ub69c\ub837\ud55c \ud2b9\uc9d5\uc744 \ud310\ub2e8\ud558\uae30\uac00 \ud798\ub4e4\ub2e4\uace0 \uc0dd\uac01\ud558\uc5ec \uc800\ud76c\ub294 HeatMap\uc744 \uadf8\ub824\uc11c \ud310\ub2e8\ud558\uae30\ub85c \ud558\uc600\uc2b5\ub2c8\ub2e4.\n"}}