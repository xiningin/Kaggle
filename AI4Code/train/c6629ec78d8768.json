{"cell_type":{"667e204e":"code","494b7a8f":"code","d921e1fa":"code","20d2fe37":"code","0eaa7c9e":"code","d1898188":"code","ad2ab1cb":"code","e749376f":"code","f465a6e6":"code","acf1b104":"code","27bd02db":"code","58e4f084":"markdown","7234aed2":"markdown","c0fb1860":"markdown","427e3d88":"markdown","3fa65c48":"markdown","d09349ae":"markdown"},"source":{"667e204e":"import numpy as np \nimport pandas as pd \n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nfrom sklearn.preprocessing import LabelEncoder","494b7a8f":"train = pd.read_csv('\/kaggle\/input\/av-healthcare-analytics-ii\/healthcare\/train_data.csv')\ntest = pd.read_csv('\/kaggle\/input\/av-healthcare-analytics-ii\/healthcare\/test_data.csv')","d921e1fa":"train.head()","20d2fe37":"train.drop('case_id', axis=1, inplace=True)\ntest.drop('case_id', axis=1, inplace=True)","0eaa7c9e":"print(train.info())\nprint(test.info())","d1898188":"fig = go.Figure() \nfig.add_trace(go.Box(x=train['Admission_Deposit'],\n                     marker_color=\"blue\",\n                     name=\"Train\"))\nfig.add_trace(go.Box(x=test['Admission_Deposit'],\n                     marker_color=\"red\",\n                     name=\"Test\"))\nfig.update_layout(title=\"Distributions of Admission Deposit\")\nfig.show()\n","ad2ab1cb":"fig = go.Figure() \nfig.add_trace(go.Box(x=train['Age'],\n                     marker_color=\"blue\",\n                     name=\"Train\"))\nfig.add_trace(go.Box(x=test['Age'],\n                     marker_color=\"red\",\n                     name=\"Test\"))\nfig.update_layout(title=\"Distributions of Age\")\nfig.show()\n","e749376f":"train.corr()['Stay']","f465a6e6":"fig = px.scatter(train, x=train['Visitors with Patient'], y=train['Stay'])\nfig.update_layout(title='Number of Visitors vs. Duration of Stay',xaxis_title=\"Visitors\",yaxis_title=\"Duration\")\nfig.show()","acf1b104":"le = LabelEncoder()\nfor column in train.columns:\n    if train[column].dtype == 'object': \n        train[column] = le.fit_transform(train[column])\nfor column in test.columns:\n    if test[column].dtype == 'object': \n        test[column] = le.fit_transform(test[column])\n","27bd02db":"sns.heatmap(train.corr())","58e4f084":"We can drop case_id because it isn't relevant to predicting the target variable 'Stay'","7234aed2":"Using .info() we see that there are a good mix of numerical and categorical features in the train and test sets. There are also some null values in the 'Bed Grade' and 'City_Code_Patient' columns that will need to be dealt with.","c0fb1860":"# Objective  \nThe goal of this kernel is to visually explore the data and to figure out which features are most useful and discover what features we can engineer before creating a predictive model. ","427e3d88":"We can explore the range of values that the 'Admission_Deposit' and 'Age' columns take on with boxplots to learn more about their range of values and potentially identify outliers that may be present. ","3fa65c48":"First let's load in the data and take a look at the features that are given to us","d09349ae":"We can use .corr() to figure out whether or not any of the features has a direct correlation with our target variable 'Stay'. From the output below, we see that the most correlated feature is 'Visitors with Patient' with a correlation of ~0.54. We can use a scatterplot to see that there is a very slight positive correlation."}}