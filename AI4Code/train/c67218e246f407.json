{"cell_type":{"26952da4":"code","46f724d9":"code","6002d62d":"code","cdfb2505":"code","b5a5e63a":"code","ab2eb039":"code","fe85401f":"code","311e4013":"code","31997bf5":"code","51398ed6":"code","c47b3ce8":"code","cf945da2":"code","80d3e86b":"code","95a49c8f":"code","699d9b49":"code","f0c78003":"code","7c2e3a3a":"code","73d150ff":"markdown"},"source":{"26952da4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","46f724d9":"#fundamental libraries\nimport pandas as pd\nimport numpy as np\n\n#Visualization libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# setting up the background style for the plots\nplt.style.use('fivethirtyeight')\n\n# for interactivity\nfrom ipywidgets import interact","6002d62d":"#reading data\ndf=pd.read_csv('..\/input\/gtd\/globalterrorismdb_0718dist.csv', encoding='latin1')\npd.set_option('max_columns', 135)\ndf.head()","cdfb2505":"#shape of the dataset\ndf.shape","b5a5e63a":"#Let's create copy of orginal data and select necessary features for further analysis\ndf_raw=df.copy()\n\ndf=df[['iyear', 'imonth', 'iday','extended', 'country_txt', \n       'region_txt', 'city', 'success', 'suicide', \n       'targtype1_txt', 'gname', 'weaptype1_txt']]\ndf.head()","ab2eb039":"#let's check for missing values\ndf.isna().mean().round(4)*100","fe85401f":"#It's not correct to impute missing city names. So let's drop \ndf.dropna(axis=0, how='any', inplace=True)","311e4013":"#let's change the column names for our convinient\ndf.rename(columns={'iyear': 'year', 'imonth': 'month', 'iday':'day', 'country_txt':'country',\n                  'region_txt':'region', 'targtype1_txt':'target', 'gname':'group', 'weaptype1_txt':'weapon'}, inplace=True)\ndf.head()","31997bf5":"df.describe(include='all')","51398ed6":"#Let's see in which year, attacks happened most number of times\n\nplt.rcParams['figure.figsize']=14,10\nsns.countplot(y=df['year'], palette='inferno')\nplt.show()    ","c47b3ce8":"#let's check which region is affected by terrorism in each year\n@interact\n\ndef attack_year(year=list(df['year'].unique())):\n    a = df[df['year']==year]\n    return sns.countplot(y=a['region'], palette='viridis')","cf945da2":"#let's check which countries are affected more from each region\n@interact\ndef country_name(region=list(df['region'].unique())):\n    a=df[(df['region']==region)]\n    a=pd.DataFrame(a['country'].value_counts())\n    return a.style.background_gradient(cmap='plasma')","80d3e86b":"#let's check which cities attacked most of the time from each country\n@interact\ndef city_name(country=list(df['country'].unique())):\n    a=df[df['country']==country]\n    a=pd.DataFrame(a['city'].value_counts().head(10))\n    return a.style.background_gradient(cmap='cool')","95a49c8f":"#let's check what kind of weapons used in each attacks\n@interact\ndef weapon_type(country=list(df['country'].unique())):\n    a=df[df['country']==country]\n    a=pd.DataFrame(a['weapon'].value_counts())\n    return a.style.background_gradient(cmap='plasma')","699d9b49":"#Let's find the favorite target of terrorists\n\nplt.rcParams['figure.figsize']=15,7\nsns.barplot(x=df.target.value_counts().values, y=df.target.value_counts().index, palette='inferno')\nplt.title('Terorrist\\'s favorite target', fontsize=25)\nplt.show()\n","f0c78003":"plt.rcParams['figure.figsize']=(9,9)\nexplode = (0, 0.1)\nlabels=['controlled with in 24 hours','extended more than 24 hours']\nplt.pie(df['extended'].value_counts(), explode=explode, autopct='%1.1f%%')\nplt.title('percentage of attacks extended more than 24 hours')\nplt.legend(labels, fontsize=10)\nplt.show()","7c2e3a3a":"plt.rcParams['figure.figsize']=18,7\nterror_area=pd.crosstab(df.year,df.region)\nterror_area.plot()\nplt.title('Trend of terror attacks in each region')\nplt.show()","73d150ff":"<img src=\"https:\/\/img.freepik.com\/free-photo\/terrorist-with-his-weapon-concept-about-terrorism_93675-39548.jpg?size=626&ext=jpg\" length=\"100px\" width=\"1000px\">"}}