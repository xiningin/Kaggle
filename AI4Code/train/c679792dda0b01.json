{"cell_type":{"e911da91":"code","a1d96662":"code","c267d469":"code","18917633":"code","c47f7e73":"code","abdd1665":"code","34de6a0b":"code","20acb3bb":"code","05bc06b6":"code","308e052f":"code","575bbb64":"code","5b83f4a3":"code","58d3e90c":"code","f504ff8c":"markdown"},"source":{"e911da91":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nfrom collections import Counter\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a1d96662":"median_house_hold_in_come = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\npercentage_people_below_poverty_level = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\npercent_over_25_completed_highSchool = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv', encoding=\"windows-1252\")\nshare_race_city = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/ShareRaceByCity.csv', encoding=\"windows-1252\")\nkill = pd.read_csv('\/kaggle\/input\/fatal-police-shootings-in-the-us\/PoliceKillingsUS.csv', encoding=\"windows-1252\")","c267d469":"percentage_people_below_poverty_level.head()","18917633":"percentage_people_below_poverty_level.info()","c47f7e73":"percentage_people_below_poverty_level.poverty_rate.value_counts()","abdd1665":"percentage_people_below_poverty_level.poverty_rate.replace(['-'],0.0,inplace = True)\npercentage_people_below_poverty_level.poverty_rate = percentage_people_below_poverty_level.poverty_rate.astype(float)\narea_list=list(percentage_people_below_poverty_level[\"Geographic Area\"].unique())\narea_poverty_ratio=[]\nfor i in area_list:\n    x = percentage_people_below_poverty_level[percentage_people_below_poverty_level['Geographic Area']==i]\n    area_poverty_rate = sum(x.poverty_rate)\/len(x)\n    area_poverty_ratio.append(area_poverty_rate)\ndata=pd.DataFrame({\"area_list\":area_list,\"area_poverty_ratio\":area_poverty_ratio})\nnew_index=(data[\"area_poverty_ratio\"].sort_values(ascending=False)).index.values\nsorted_data=data.reindex(new_index)\n#visualisiation\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['area_list'], y=sorted_data['area_poverty_ratio'])\nplt.xticks(rotation=90)\nplt.xlabel(\"States\")\nplt.ylabel(\"poverty_rate\")\nplt.title(\"Poverty_rate_given_States\")","34de6a0b":"kill.head()","20acb3bb":"kill.info()","05bc06b6":"kill.name.value_counts()","308e052f":"seperate=kill.name[kill.name!=\"TK TK\"].str.split()\na,b=zip(*seperate)\nname_list=a+b\nname_count=Counter(name_list)\nmost_common_names=name_count.most_common(15)\nx,y=zip(*most_common_names)\nx,y=list(x),list(y)\nplt.figure(figsize=(15,10))\nsns.barplot(x=x,y=y,palette=sns.cubehelix_palette(len(x)))\nplt.xlabel(\"Name or Surname killed people\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Most common killed peoople name\")","575bbb64":"percent_over_25_completed_highSchool.info()","5b83f4a3":"percent_over_25_completed_highSchool.percent_completed_hs.value_counts()","58d3e90c":"percent_over_25_completed_highSchool.percent_completed_hs.replace([\"-\"],0.0,inplace=True)\npercent_over_25_completed_highSchool.percent_completed_hs=percent_over_25_completed_highSchool.percent_completed_hs.astype(float)\narea_list2=list(percent_over_25_completed_highSchool[\"Geographic Area\"].unique())\narea_ratio2=[]\nfor i in area_list:\n    x=percent_over_25_completed_highSchool[percent_over_25_completed_highSchool[\"Geographic Area\"]==i]\n    area_rate2=sum(x.percent_completed_hs)\/len(x)\n    area_ratio2.append(area_rate2)\ndata2=pd.DataFrame({\"area_list\":area_list2,\"area_ratio\":area_ratio2})\nnew_index2=(data2[\"area_ratio\"].sort_values(ascending=True)).index.values\nsorted_data2=data2.reindex(new_index2)\n\n\nplt.figure(figsize=(10,15))\nsns.barplot(x=sorted_data2[\"area_list\"],y=sorted_data2[\"area_ratio\"])\nplt.xticks(rotation=90)\nplt.xlabel(\"States\")\nplt.ylabel(\"percent_completed\")\nplt.title(\"Perecent_completed_hs of States\")\n    ","f504ff8c":"**Bar Plot**"}}