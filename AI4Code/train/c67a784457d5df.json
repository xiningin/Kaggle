{"cell_type":{"bdb17a1a":"code","c381f296":"code","281480e7":"code","cf7b5167":"code","0e61e68a":"code","fbfbfa98":"code","32d441cb":"code","502cd6f5":"code","204a88b3":"code","d831a022":"code","e3912045":"code","819dc360":"code","1486b481":"code","a783f958":"code","eefbd5a1":"code","b9365c43":"code","f5dc7bbd":"code","4facd02e":"code","4476c32b":"code","fab33114":"code","f7220418":"code","f6dd3252":"code","78a5feb0":"code","cc970545":"code","c59228c7":"code","0409c32a":"code","dcdd0159":"code","9d6da47b":"markdown","128dbe23":"markdown","1fb82024":"markdown","f0a91dc2":"markdown","f85d03cd":"markdown"},"source":{"bdb17a1a":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","c381f296":"sns.set_style('whitegrid')","281480e7":"FILE_NAME = '\/kaggle\/input\/simple-datasets-beginnerfriendly\/example.csv'","cf7b5167":"dataset = pd.read_csv(FILE_NAME)","0e61e68a":"dataset.shape","fbfbfa98":"dataset.info()","32d441cb":"dataset.head(4)","502cd6f5":"dataset.tail(4)","204a88b3":"dataset.sample(4)","d831a022":"dataset.describe()","e3912045":"dataset.corr()","819dc360":"dataset.groupby('target').median()","1486b481":"dataset.groupby('target').agg(['mean', 'std'])","a783f958":"dataset.hist(bins=20, figsize=(10, 10))\nplt.show()","eefbd5a1":"sns.heatmap(dataset.corr(), square=True, annot=True)\nplt.show()","b9365c43":"sns.pairplot(dataset, hue='target')\nplt.show()","f5dc7bbd":"from catboost import CatBoostClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import f1_score, confusion_matrix\nfrom sklearn.model_selection import cross_val_score, train_test_split","4facd02e":"X, target = dataset.iloc[:, 1:], dataset.iloc[:, 0]","4476c32b":"X_train, X_test, y_train, y_test = train_test_split(X, target)","fab33114":"model = RandomForestClassifier(n_estimators=2000, max_depth=150)","f7220418":"cross_val_score(model, X, target, cv=5, scoring='f1')","f6dd3252":"cb = CatBoostClassifier(logging_level='Silent').fit(X_train, y_train)","78a5feb0":"y_predicted = cb.predict(X_test)","cc970545":"f1_score(y_test, y_predicted)","c59228c7":"confusion_matrix(y_test, y_predicted)","0409c32a":"cb.feature_importances_","dcdd0159":"np.argmax(cb.feature_importances_)","9d6da47b":"### 2.1. Random Forest","128dbe23":"## 1. Exploratory data analysis","1fb82024":"## 2. Machine learning","f0a91dc2":"# Example","f85d03cd":"### 2.2. CatBoost"}}