{"cell_type":{"2a44fbb0":"code","e77f52a8":"code","84379a2a":"code","d9ae6ffe":"code","2ca9a0ca":"code","ce33872f":"code","2d9a4618":"code","7c3bb9ea":"code","8a88e6f6":"markdown"},"source":{"2a44fbb0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e77f52a8":"# Load the data using pandas csv \n\ntrain_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","84379a2a":"#Load the test data\ntest_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","d9ae6ffe":"women = train_data.loc[train_data.Sex == 'female']['Survived']\nrate_women = sum(women)\/len(women)\n\nprint(f\"{rate_women} % of women survived\")","2ca9a0ca":"# Replace NaN cabin with \"none\"\ntrain_data.Cabin.fillna('none', inplace=True)\ntrain_data.Cabin.head()","ce33872f":"# Build a Random Forest\n\nfrom sklearn.ensemble import RandomForestClassifier\n\n# extract the target\ntarget = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\n\n# Get dummies from features on train and test set\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n","2d9a4618":"# Create the model\nmodel = RandomForestClassifier(n_estimators=100,\n                               max_depth=5,\n                              random_state=1)\n\n# train the model \nmodel.fit(X,target)\n\n# Get the predictions\npredictions = model.predict(X_test)\n","7c3bb9ea":"output = pd.DataFrame({'PassengerId': test_data.PassengerId,\n                       'Survided': predictions})\n\n# write file to csv \noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","8a88e6f6":"### Exploring Patterns \n\n> Check if all Woman survived"}}