{"cell_type":{"2cc04728":"code","a4e34f06":"code","253b6b20":"code","5194d313":"code","dcf4bb8e":"code","1f0ac45b":"code","f9012799":"code","5a3dc37d":"code","e066e5cd":"code","2e0faa08":"code","f2009250":"code","33a03f79":"code","2a1ab6bf":"code","576dd22e":"code","26900a75":"code","b376aa90":"code","4a75c5b7":"code","00113dbb":"code","2d056972":"code","1c80d053":"code","bbf128b3":"code","65fc63ed":"code","e880962f":"code","99b04d51":"code","d4b2870b":"code","9d78e645":"code","0327e519":"code","69aaf7cb":"code","9c8c0220":"code","36cd0cb7":"code","4770aee8":"code","ab605963":"code","90326eda":"code","4466bd20":"code","31bf9b8f":"code","4fe81ab1":"code","8f6244ca":"code","3389ffb8":"code","965424ed":"code","6f8d88d1":"code","f3b93fe3":"code","a7c21e61":"code","d590544d":"code","d41e86a0":"code","858abe6c":"code","174ddec6":"markdown","f762784f":"markdown","385542a2":"markdown","b12537dd":"markdown"},"source":{"2cc04728":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt\nimport seaborn as sns ","a4e34f06":"df = pd.read_csv('..\/input\/engineering-placements-prediction\/collegePlace.csv')\ndf.head().style.background_gradient(axis=0)","253b6b20":"df.isnull().sum()","5194d313":"df.info()","dcf4bb8e":"df.describe().style.background_gradient(axis=0)","1f0ac45b":"df['Internships'].unique()","f9012799":"df['Stream'].unique()","5a3dc37d":"df['Hostel'].unique()","e066e5cd":"df['HistoryOfBacklogs'].unique()","2e0faa08":"sns.countplot(data = df , x = 'PlacedOrNot')","f2009250":"sns.scatterplot(data = df, x='Age' , y ='CGPA' , hue='PlacedOrNot')","33a03f79":"sns.pairplot(data = df , hue = 'PlacedOrNot')","2a1ab6bf":"plt.figure(figsize=(16,13),dpi = 150)\nsns.catplot(x='PlacedOrNot',y='Age',data =df,kind='box')","576dd22e":"sns.heatmap(df.corr(),annot=True)","26900a75":"# Now we are going to divid the data to x and y : \nX = pd.get_dummies(df.drop('PlacedOrNot',axis=1),drop_first= True,prefix='Dummy',prefix_sep = '*')\ny = df['PlacedOrNot']","b376aa90":"# Train test split \nfrom sklearn.model_selection import train_test_split","4a75c5b7":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","00113dbb":"# Now we are going to scale the data : \nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()","2d056972":"scaled_x_train = scaler.fit_transform(X_train)\nscaled_x_test = scaler.transform(X_test)","1c80d053":"from sklearn.linear_model import LogisticRegression","bbf128b3":"from sklearn.metrics import classification_report , plot_confusion_matrix , plot_roc_curve , plot_precision_recall_curve , accuracy_score","65fc63ed":"log_model = LogisticRegression()\nlog_model.fit(scaled_x_train,y_train)","e880962f":"def Metrics_functions (model):\n    y_pred = model.predict(scaled_x_test)\n    print(classification_report(y_test,y_pred))\n    accuracy_score(y_test , y_pred)\n    plot_confusion_matrix(model , scaled_x_test , y_test)\n    plot_roc_curve(model , scaled_x_test , y_test)\n    plot_precision_recall_curve(model , scaled_x_test , y_test)","99b04d51":"Metrics_functions(log_model)","d4b2870b":"from sklearn.neighbors import KNeighborsClassifier","9d78e645":"# Now we will make for loop to get the best K value : \ntest_error_rate = []\n\nfor k in range (1,30):\n    knn_model = KNeighborsClassifier(n_neighbors=k)\n    knn_model.fit(scaled_x_train,y_train)\n    y_pred = knn_model.predict(scaled_x_test)\n    error_rate = 1-accuracy_score(y_test,y_pred)\n    test_error_rate.append(error_rate)","0327e519":"plt.plot(range(1,30),test_error_rate)\nplt.xlabel('K Value')\nplt.ylabel('Test error rate')\nplt.title('Choose the best K value')","69aaf7cb":"knn_model = KNeighborsClassifier(n_neighbors= 23)","9c8c0220":"knn_model = knn_model.fit(scaled_x_train,y_train)","36cd0cb7":"Metrics_functions(knn_model)","4770aee8":"from sklearn.svm import SVC","ab605963":"svc = SVC()\nparam_grid = {'C':[0.001,0.01,0.1,1]}\nfrom sklearn.model_selection import GridSearchCV","90326eda":"grid_model = GridSearchCV(svc,param_grid)","4466bd20":"grid_model.fit(scaled_x_train,y_train)","31bf9b8f":"grid_model.best_params_","4fe81ab1":"Metrics_functions(grid_model)","8f6244ca":"from sklearn.tree import DecisionTreeClassifier","3389ffb8":"tree_model = DecisionTreeClassifier()","965424ed":"tree_model.fit(scaled_x_train,y_train)","6f8d88d1":"Metrics_functions(tree_model)","f3b93fe3":"tree_model.feature_importances_","a7c21e61":"X.columns","d590544d":"pd.DataFrame(index=X.columns,data = tree_model.feature_importances_,columns=['Feature Importance']).sort_values('Feature Importance')","d41e86a0":" from sklearn.tree import plot_tree","858abe6c":"plt.figure(figsize=(12,10),dpi=150)\nplot_tree(tree_model,feature_names=X.columns,filled=True);","174ddec6":"**Decision Tree**","f762784f":"***KNN_Algorithm******","385542a2":"**SVM ALGORITHM **","b12537dd":"LogisticRegression Algorithm "}}