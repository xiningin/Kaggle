{"cell_type":{"7d212193":"code","83007fe8":"code","d4244dfc":"code","0d95e7e3":"code","467bd787":"code","c28417bc":"code","6db59bda":"code","79e90630":"code","3de84940":"code","f3e0e480":"code","6fd74a57":"code","b4365dcc":"code","7791a0f2":"code","c7139803":"code","e0a2f2f4":"code","8e599616":"code","d95194cd":"code","77f811e3":"code","855669c9":"code","7886a652":"code","6a062f87":"code","a10640e6":"code","4024f5df":"code","09772d37":"code","16e3bb7e":"code","8c6decf4":"code","5214a65f":"markdown","e0e40878":"markdown","40aa850f":"markdown","2e3550f4":"markdown","22f0b626":"markdown","d53f4d86":"markdown","acd4b8f3":"markdown","a505ee75":"markdown"},"source":{"7d212193":"# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n","83007fe8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","d4244dfc":"lifeExpectancy = pd.read_csv(\"\/kaggle\/input\/who-worldhealth-statistics-2020-complete\/lifeExpectancyAtBirth.csv\")\nhealthyLifeExpectancy = pd.read_csv(\"\/kaggle\/input\/who-worldhealth-statistics-2020-complete\/HALElifeExpectancyAtBirth.csv\")\nWhoLifeExpectancy = pd.read_csv(\"\/kaggle\/input\/who-worldhealth-statistics-2020-complete\/WHOregionLifeExpectancyAtBirth.csv\")\nhealthyWhoLifeExpectancy = pd.read_csv(\"\/kaggle\/input\/who-worldhealth-statistics-2020-complete\/HALeWHOregionLifeExpectancyAtBirth.csv\")","0d95e7e3":"lifeExpectancy.head()","467bd787":"healthyLifeExpectancy.head()","c28417bc":"WhoLifeExpectancy.head()","6db59bda":"healthyWhoLifeExpectancy.head()","79e90630":"WhoLifeExpectancy['Location'].unique()","3de84940":"tempData = WhoLifeExpectancy.groupby('Location')['First Tooltip'].mean()\ntempData = tempData.sort_values()\ntempData = tempData.reset_index()\nfig = plt.figure()\nax1 = plt.subplot2grid((1,1),(0,0))\nplt.xlabel(\"Regions\")\nplt.ylabel(\"Life Expectancy (Years)\")\nplt.title(\"Life Expectancy of different Region\")\nax1.bar(x=tempData['Location'], height= tempData['First Tooltip'], color = \"#b0d10d\")\nplt.xticks(rotation = 90)\nplt.show()","f3e0e480":"tempData = healthyWhoLifeExpectancy.groupby('Location')['Hale Expectency'].mean()\ntempData = tempData.sort_values()\ntempData = tempData.reset_index()\nfig = plt.figure()\nax1 = plt.subplot2grid((1,1),(0,0))\nplt.xlabel(\"Regions\")\nplt.ylabel(\"Life Expectancy (Years)\")\nplt.title(\"Life Expectancy of different Region\")\nax1.bar(x=tempData['Location'], height= tempData['Hale Expectency'], color = \"#7af564\")\nplt.xticks(rotation = 90)\nplt.show()","6fd74a57":"tempData = healthyWhoLifeExpectancy.groupby(['Location'])['Life expectany', 'Hale Expectency'].mean()\ntempData = tempData.reset_index()\nregion = tempData.Location.unique().tolist()\nfig = plt.figure(figsize=(10,5))\nx_index = np.arange(len(region))\nwidth = 0.35\nplt.bar(x_index-width\/2, tempData['Life expectany'], width = width, color='#f5f364')\nplt.bar(x_index+width\/2, tempData['Hale Expectency'], width = width, color='#7af564')\nplt.xticks(x_index, labels=region)\nplt.xticks(rotation = 90)\nplt.xlabel(\"Regions\")\nplt.ylabel(\"Life Expactancy (Years)\")\nplt.title(\"Healthy VS Total Life Expactancy\")\nplt.legend(['Total Life', 'Healthy Life'])\nplt.show()","b4365dcc":"tempData = WhoLifeExpectancy.groupby('Dim1')['First Tooltip'].mean()\ntempData = tempData.sort_values()\ntempData = tempData.reset_index()\ntempData.drop([1], axis = 0, inplace = True)\nfig = plt.figure()\nax1 = plt.subplot2grid((1,1),(0,0))\nplt.xlabel(\"Regions\")\nplt.ylabel(\"Life Expectancy (Years)\")\nplt.title(\"Life Expectancy of different Region\")\nax1.bar(x=tempData['Dim1'], height= tempData['First Tooltip'], color = \"#b0d10d\")\nplt.xticks(rotation = 90)\nplt.show()","7791a0f2":"def autolabel(rects):\n    \"\"\"\n    Attach a text label above each bar displaying its height\n    \"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.text(rect.get_x() + rect.get_width()\/2., 1*height,\n                '%d' % int(height),\n                ha='center', va='bottom')","c7139803":"tempData = healthyWhoLifeExpectancy.groupby(['Dim1'])['Life expectany', 'Hale Expectency'].mean()\ntempData = tempData.reset_index()\ntempData.drop([0], axis = 0, inplace = True)\nregion = tempData.Dim1.unique().tolist()\n\nfig = plt.figure(figsize=(10,5))\nx_index = np.arange(len(region))\nwidth = 0.35\nax = plt.subplot2grid((1,1),(0,0))\nract1 = ax.bar(x_index-width\/2, tempData['Life expectany'], width = width, color='#f5f364')\nract2 = ax.bar(x_index+width\/2, tempData['Hale Expectency'], width = width, color='#7af564')\nplt.xticks(x_index, labels=region)\nplt.xticks(rotation = 90)\nplt.xlabel(\"Regions\")\nplt.ylabel(\"Life Expactancy (Years)\")\nplt.title(\"Healthy VS Total Life Expactancy\")\nplt.legend(['Total Life', 'Healthy Life'])\n\nautolabel(ract1)\nautolabel(ract2)\n    \nplt.show()","e0a2f2f4":"tempData = WhoLifeExpectancy.groupby(['Location','Dim1'])['First Tooltip'].mean()\ntempData = tempData.reset_index()\nregion = tempData.Location.unique().tolist()\ndataM = tempData[tempData['Dim1'] == 'Male']['First Tooltip']\ndataF = tempData[tempData['Dim1'] == 'Female']['First Tooltip']\nx_index = np.arange(len(region))\nwidth = 0.35\nfig = plt.figure(figsize=(10,5))\nax = plt.subplot2grid((1,1),(0,0))\nract1 = ax.bar(x_index-width\/2, dataF, width = width, color='#f77ed7')\nract2 = ax.bar(x_index+width\/2, dataM, width = width, color=\"#6494f5\")\nplt.xticks(x_index, labels=region)\nplt.xticks(rotation = 90)\nplt.xlabel(\"Regions\")\nplt.ylabel(\"Life Expactancy (Years)\")\nplt.title(\"Life Expactancy of Male and Female of different region\")\nplt.legend(['Female', 'Male'])\n\nautolabel(ract1)\nautolabel(ract2)\n\nplt.show()","8e599616":"tempData = healthyWhoLifeExpectancy.groupby(['Location','Dim1'])['Hale Expectency'].mean()\ntempData = tempData.reset_index()\nregion = tempData.Location.unique().tolist()\ndataM = tempData[tempData['Dim1'] == 'Male']['Hale Expectency']\ndataF = tempData[tempData['Dim1'] == 'Female']['Hale Expectency']\nx_index = np.arange(len(region))\nwidth = 0.35\nfig = plt.figure(figsize=(10,5))\nax = plt.subplot2grid((1,1),(0,0))\nract1 = ax.bar(x_index-width\/2, dataF, width = width, color='#f77ed7')\nract2 = ax.bar(x_index+width\/2, dataM, width = width, color=\"#6494f5\")\nplt.xticks(x_index, labels=region)\nplt.xticks(rotation = 90)\nplt.xlabel(\"Regions\")\nplt.ylabel(\"Healthy Life Expactancy (Years)\")\nplt.title(\"Healthy Life Expactancy of Male and Female of different region\")\nplt.legend(['Female', 'Male'])\n\nautolabel(ract1)\nautolabel(ract2)\n\nplt.show()","d95194cd":"WhoLifeExpectancy['Location'].unique()","77f811e3":"def getData(region):\n    AfricaDataBoth = WhoLifeExpectancy[(WhoLifeExpectancy['Location'] == region) & (WhoLifeExpectancy['Dim1'] == 'Both sexes')]\n    AfricaDataMan = WhoLifeExpectancy[(WhoLifeExpectancy['Location'] == region) & (WhoLifeExpectancy['Dim1'] == 'Male')]\n    AfricaDataWoman = WhoLifeExpectancy[(WhoLifeExpectancy['Location'] == region) & (WhoLifeExpectancy['Dim1'] == 'Female')]\n    return AfricaDataBoth, AfricaDataMan, AfricaDataWoman","855669c9":"AfricaDataBoth, AfricaDataMan, AfricaDataWoman = getData('Africa')\nAmericaDataBoth, AmericaDataMan, AmericaDataWoman = getData('Americas')\nSEDataBoth, SEDataMan, SEDataWoman = getData('South-East Asia')\nEUDataBoth, EUDataMan, EUDataWoman = getData('Europe')\nEMDataBoth, EMDataMan, EMDataWoman = getData('Eastern Mediterranean')\nWPDataBoth, WPDataMan, WPDataWoman = getData('Western Pacific')\n\nfig = plt.figure(figsize=(16,10))\n\nax1 = plt.subplot2grid((2,3),(0,0), rowspan=1, colspan=1)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Life Expectancy (Years)\")\nplt.title(\"Life Expectancy of Africa over Time\")\nax1.plot(AfricaDataBoth['Period'], AfricaDataBoth['First Tooltip'],linestyle = \"--\", color = '#c2b4b2', label='Both')\nax1.plot(AfricaDataMan['Period'], AfricaDataMan['First Tooltip'], marker='o', color = '#5073e6', label = 'Male')\nax1.plot(AfricaDataWoman['Period'], AfricaDataWoman['First Tooltip'], marker='o', color = '#e650be', label = 'Female')\nplt.legend()\nplt.grid(True)\n\n\n\nax2 = plt.subplot2grid((2,3),(0,1), rowspan=1, colspan=1)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Life Expectancy (Years)\")\nplt.title(\"Life Expectancy of America over Time\")\nax2.plot(AmericaDataBoth['Period'], AmericaDataBoth['First Tooltip'],linestyle = \"--\", color = '#c2b4b2', label='Both')\nax2.plot(AmericaDataMan['Period'], AmericaDataMan['First Tooltip'], marker='o', color = '#5073e6', label = 'Male')\nax2.plot(AmericaDataWoman['Period'], AmericaDataWoman['First Tooltip'], marker='o', color = '#e650be', label = 'Female')\nplt.legend()\nplt.grid(True)\n\n\nax3 = plt.subplot2grid((2,3),(0,2), rowspan=1, colspan=1)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Life Expectancy (Years)\")\nplt.title(\"Life Expectancy of South-East Asia over Time\")\nax3.plot(SEDataBoth['Period'], SEDataBoth['First Tooltip'],linestyle = \"--\", color = '#c2b4b2', label='Both')\nax3.plot(SEDataMan['Period'], SEDataMan['First Tooltip'], marker='o', color = '#5073e6', label = 'Male')\nax3.plot(SEDataWoman['Period'], SEDataWoman['First Tooltip'], marker='o', color = '#e650be', label = 'Female')\nplt.legend()\nplt.grid(True)\n\n\n\nax4 = plt.subplot2grid((2,3),(1,0), rowspan=1, colspan=1)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Life Expectancy (Years)\")\nplt.title(\"Life Expectancy of Europe over Time\")\nax4.plot(EUDataBoth['Period'], EUDataBoth['First Tooltip'],linestyle = \"--\", color = '#c2b4b2', label='Both')\nax4.plot(EUDataMan['Period'], EUDataMan['First Tooltip'], marker='o', color = '#5073e6', label = 'Male')\nax4.plot(EUDataWoman['Period'], EUDataWoman['First Tooltip'], marker='o', color = '#e650be', label = 'Female')\nplt.legend()\nplt.grid(True)\n\n\nax5 = plt.subplot2grid((2,3),(1,1), rowspan=1, colspan=1)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Life Expectancy (Years)\")\nplt.title(\"Life Expectancy of Eastern Mediterranean over Time\")\nax5.plot(EMDataBoth['Period'], EMDataBoth['First Tooltip'],linestyle = \"--\", color = '#c2b4b2', label='Both')\nax5.plot(EMDataMan['Period'], EMDataMan['First Tooltip'], marker='o', color = '#5073e6', label = 'Male')\nax5.plot(EMDataWoman['Period'], EMDataWoman['First Tooltip'], marker='o', color = '#e650be', label = 'Female')\nplt.legend()\nplt.grid(True)\n\n\nax6 = plt.subplot2grid((2,3),(1,2), rowspan=1, colspan=1)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Life Expectancy (Years)\")\nplt.title(\"Life Expectancy of Western Pacific over Time\")\nax6.plot(WPDataBoth['Period'], WPDataBoth['First Tooltip'],linestyle = \"--\", color = '#c2b4b2', label='Both')\nax6.plot(WPDataMan['Period'], WPDataMan['First Tooltip'], marker='o', color = '#5073e6', label = 'Male')\nax6.plot(WPDataWoman['Period'], WPDataWoman['First Tooltip'], marker='o', color = '#e650be', label = 'Female')\nplt.legend()\nplt.grid(True)\n\nplt.show()","7886a652":"lifeExpectancy['Location'].unique()","6a062f87":"tempData = lifeExpectancy.groupby('Location')['First Tooltip'].mean()\ntempDataTop20 = tempData.sort_values(ascending=False)[:20]\ntempDataLow20 = tempData.sort_values()[:20]\ntempDataTop20 = tempDataTop20.reset_index()\ntempDataLow20 = tempDataLow20.reset_index()\nfig = plt.figure(figsize = (22,10))\n\nax1 = plt.subplot2grid((2,1), (0,0), rowspan=1, colspan=1)\nax1.bar(x = tempDataTop20['Location'], height = tempDataTop20['First Tooltip'], color = \"#6ded71\")\nax1.set_xticklabels(tempDataTop20['Location'], rotation=90)\nax1.set_ylabel(\"Life Ecpectancy (Years)\")\nax1.title.set_text(\"Top 20 Life Expectancy\")\n\nax2 = plt.subplot2grid((2,1), (1,0), rowspan=1, colspan=1)\nax2.bar(x = tempDataLow20['Location'][::-1], height = tempDataLow20['First Tooltip'][::-1], color = \"#f07d73\")\nax2.title.set_text(\"Bottom 20 Life Expectancy\")\n\nplt.xticks(rotation = 90)\nplt.xlabel(\"Countries\")\nplt.ylabel(\"Life Ecpectancy (Years)\")\nplt.subplots_adjust(hspace = 0.6)\nplt.show()","a10640e6":"tempData = lifeExpectancy.groupby('Location')['First Tooltip'].mean()\ntempData = tempData.sort_values(ascending=False)\ntempData = tempData.reset_index()\ntempData.set_index('Location',drop=True,inplace=True)\n\ncountries=['India', 'China', 'United States of America', 'Germany',\n           'United Kingdom of Great Britain and Northern Ireland', \n           'Japan', 'Canada']\n\n\nax_1 = tempData['First Tooltip'].plot(kind='bar', title =\"graph\", figsize=(22, 6), fontsize=12)\nax_1.set_xlabel(\"Country Name\", fontsize=12)\nfor ticks in ax_1.xaxis.get_major_ticks():\n    if ticks.label1.get_text() not in countries:\n        ticks.label1.set_visible(False)\n        ax_1.patches[tempData.index.get_indexer([ticks.label1.get_text()])[0]].set_facecolor('w')\n        ax_1.patches[tempData.index.get_indexer([ticks.label1.get_text()])[0]].set_edgecolor('#c7c3c3')\n    else:\n        ax_1.patches[tempData.index.get_indexer([ticks.label1.get_text()])[0]].set_facecolor('r')\n        ","4024f5df":"tempDataM = lifeExpectancy[lifeExpectancy['Dim1'] == 'Male']\ntempDataF = lifeExpectancy[lifeExpectancy['Dim1'] == 'Female']\ntempDataM.reset_index(inplace = True)\ntempDataF.reset_index(inplace = True)\ntempData = tempDataM.join(tempDataF, lsuffix = \"_m\", rsuffix = \"_f\")\ntempData['LE_diff'] = tempData['First Tooltip_f'] - tempData['First Tooltip_m']\ntempDataCountries = tempData.groupby(\"Location_m\")['LE_diff'].mean()\ntempDataCountriesTop = tempDataCountries.sort_values(ascending = False)[:20]\ntempDataCountriesTop = tempDataCountriesTop.reset_index()\n\ntempDataCountriesBot = tempDataCountries.sort_values()[:20]\ntempDataCountriesBot = tempDataCountriesBot.reset_index()\n\nfig = plt.figure(figsize = (22,10))\n\nax1 = plt.subplot2grid((2,1), (0,0), rowspan=1, colspan=1)\nax1.bar(x = tempDataCountriesTop['Location_m'], height = tempDataCountriesTop['LE_diff'], color = \"#dc6bf2\")\nax1.set_xticklabels(tempDataCountriesTop['Location_m'], rotation=90)\nax1.set_ylabel(\"Difference (Years)\")\nax1.title.set_text(\"Top Difference Between Life Expactancy of Male and Female\")\n\nax2 = plt.subplot2grid((2,1), (1,0), rowspan=1, colspan=1)\nax2.bar(x = tempDataCountriesBot['Location_m'][::-1], height = tempDataCountriesBot['LE_diff'][::-1], color = \"#f26bba\")\nax2.title.set_text(\"Bottom Difference Between Life Expactancy of Male and Female\")\n\nplt.xticks(rotation = 90)\nplt.xlabel(\"Countries\")\nplt.ylabel(\"Difference (Years)\")\nplt.subplots_adjust(hspace = 0.6)\nplt.show()","09772d37":"tempDataM = lifeExpectancy[lifeExpectancy['Dim1'] == 'Male']\ntempDataF = lifeExpectancy[lifeExpectancy['Dim1'] == 'Female']\ntempDataM.reset_index(inplace = True)\ntempDataF.reset_index(inplace = True)\ntempData = tempDataM.join(tempDataF, lsuffix = \"_m\", rsuffix = \"_f\")\ntempData['LE_diff'] = tempData['First Tooltip_f'] - tempData['First Tooltip_m']\ntempDataCountries = tempData.groupby(\"Location_m\")['LE_diff'].mean()\ntempDataCountries = tempDataCountries.sort_values(ascending = False)\ntempDataCountries = tempDataCountries.reset_index()\ntempDataCountries.set_index('Location_m',drop=True,inplace=True)\n\ncountries=['India', 'China', 'United States of America', 'Germany',\n           'United Kingdom of Great Britain and Northern Ireland', \n           'Japan', 'Canada']\n\nax_1 = tempDataCountries['LE_diff'].plot(kind='bar', title =\"graph\", figsize=(22, 6), fontsize=12)\nax_1.set_xlabel(\"Country Name\", fontsize=12)\nfor ticks in ax_1.xaxis.get_major_ticks():\n    if ticks.label1.get_text() not in countries:\n        ticks.label1.set_visible(False)\n        ax_1.patches[tempDataCountries.index.get_indexer([ticks.label1.get_text()])[0]].set_facecolor('w')\n        ax_1.patches[tempDataCountries.index.get_indexer([ticks.label1.get_text()])[0]].set_edgecolor('#c7c3c3')\n    else:\n        ax_1.patches[tempDataCountries.index.get_indexer([ticks.label1.get_text()])[0]].set_facecolor('r')\n        ","16e3bb7e":"tempData2000 = lifeExpectancy[(lifeExpectancy['Period'] == 2000) & (lifeExpectancy['Dim1'] == \"Both sexes\")]\ntempData2019 = lifeExpectancy[(lifeExpectancy['Period'] == 2019) & (lifeExpectancy['Dim1'] == \"Both sexes\")]\ntempData2000.reset_index(inplace = True)\ntempData2019.reset_index(inplace = True)\ntempData = tempData2000.join(tempData2019, lsuffix = \"_00\", rsuffix=\"_19\")\ntempData['progress'] = tempData['First Tooltip_19'] - tempData['First Tooltip_00']\ntempDataTrimmed = tempData[['Location_00', 'progress']]\ntempDataTrimmed.sort_values(by=['progress'], ascending=False, inplace=True)\ntempDataTrimmedTop = tempDataTrimmed[:20].copy()\ntempDataTrimmedBot = tempDataTrimmed[-20:].copy()\n\nfig = plt.figure(figsize=(22,10))\n\nax1 = plt.subplot2grid((2,1), (0,0), rowspan=1, colspan=1)\nax1.bar(x=tempDataTrimmedTop['Location_00'], height=tempDataTrimmedTop['progress'], color = \"#6ded71\")\nax1.set_xticklabels(tempDataTrimmedTop['Location_00'], rotation=90)\nax1.set_ylabel(\"Progress (Years)\")\n\nax2 = plt.subplot2grid((2,1), (1,0), rowspan=1, colspan=1)\nax2.bar(x=tempDataTrimmedBot['Location_00'], height=tempDataTrimmedBot['progress'], color = \"#f07d73\")\nax2.set_xticklabels(tempDataTrimmedBot['Location_00'], rotation=90)\nax2.set_ylabel(\"Progress (Years)\")\n\n\nplt.subplots_adjust(hspace = 0.6)\nplt.show()","8c6decf4":"tempData2000 = lifeExpectancy[(lifeExpectancy['Period'] == 2000) & (lifeExpectancy['Dim1'] == \"Both sexes\")]\ntempData2019 = lifeExpectancy[(lifeExpectancy['Period'] == 2019) & (lifeExpectancy['Dim1'] == \"Both sexes\")]\ntempData2000.reset_index(inplace = True)\ntempData2019.reset_index(inplace = True)\ntempData = tempData2000.join(tempData2019, lsuffix = \"_00\", rsuffix=\"_19\")\ntempData['progress'] = tempData['First Tooltip_19'] - tempData['First Tooltip_00']\ntempDataTrimmed = tempData[['Location_00', 'progress']]\ntempDataTrimmed.sort_values(by=['progress'], ascending=False, inplace=True)\ntempDataTrimmed.set_index('Location_00', drop=True, inplace=True)\n\ncountries=['India', 'China', 'United States of America', 'Germany',\n           'United Kingdom of Great Britain and Northern Ireland', \n           'Japan', 'Canada']\n\nax_1 = tempDataTrimmed['progress'].plot(kind='bar', figsize=(22,6))\nax_1.set_xlabel(\"Country Name\", fontsize=12)\n\nfor ticks in ax_1.xaxis.get_major_ticks():\n    if ticks.label1.get_text() not in countries:\n        ticks.label1.set_visible(False)\n        ax_1.patches[tempDataTrimmed.index.get_indexer([ticks.label1.get_text()])[0]].set_facecolor('w')\n        ax_1.patches[tempDataTrimmed.index.get_indexer([ticks.label1.get_text()])[0]].set_edgecolor('#c7c3c3')\n    else:\n        ax_1.patches[tempDataTrimmed.index.get_indexer([ticks.label1.get_text()])[0]].set_facecolor('r')\n        ","5214a65f":"This Notebook is not complete","e0e40878":"# Different Countries","40aa850f":"Ideas:\n1. plot where india stand in difference \n2. which country has maximum growth since 2000 to 2019\n","2e3550f4":"### Loading The Data","22f0b626":"#### Lets look at Region-wise Data first\n\nTo compare different region we take the average of each reigon for different year","d53f4d86":"# Life expectancy and Healthy life expectancy\n\n#### Datasets \n\n* **lifeExpectancyAtBirth.csv** -> Life expectancy at birth, country wise mentioned in age (years).\n* **HALElifeExpectancyAtBirth.csv** -> Healthy life expectancy (HALE) at birth, country wise mentioned in age(years).csv\n* **WHOregionLifeExpectancAtBirth.csv** -> Life expectancy at birth, Region wise mentioned in age (years).\n* **HAleWHOregionLifeExpectancy.csv** -> Healthy life expectancy at birth, region wise mentioned in age(years).\n* **%HaleInLifeExpectancy.csv** -> Healthy life and life expectancy at birth with the % of HALE in life expectancy.","acd4b8f3":"Thanks For having a look. <br>Also have a look at my other notebook on same dataset https:\/\/www.kaggle.com\/rockingromio\/data-visualization-communicable-diseases","a505ee75":"### Different Regions"}}