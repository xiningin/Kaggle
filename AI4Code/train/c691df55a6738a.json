{"cell_type":{"6bc3a89f":"code","33088e68":"code","aabb7e83":"code","9c5e2b35":"code","24609fe0":"code","b20ae9d1":"code","d357ab00":"code","ca3bd900":"code","5685f1af":"code","f1dda760":"code","87508819":"code","3c3466ad":"code","f88485ec":"code","5b6bd75f":"code","806ef9db":"code","38f7e58a":"code","e4a4a2a2":"code","f5eddd6b":"code","15418210":"code","4fc7487a":"code","a24dd525":"code","ddcf8ddf":"code","17622278":"code","df15d6c4":"code","14cfdf27":"code","5e6545f2":"code","6ed1af66":"code","aa80cff9":"code","9bf774f3":"code","cd835134":"code","dad5d681":"code","0dfaf603":"code","e1988086":"code","d758adcd":"markdown","7d48321b":"markdown","fe5daad3":"markdown","756a6721":"markdown","87fee935":"markdown","2d3b490a":"markdown","ed1af28b":"markdown","72260dcf":"markdown","0d4fd93f":"markdown","3a4bad77":"markdown","01038496":"markdown","661fb584":"markdown","28efa8de":"markdown","0e52fc06":"markdown","c1771933":"markdown","2d532d52":"markdown","93aa7729":"markdown","af0c2ae9":"markdown","1f46ad88":"markdown","b2d63e38":"markdown","bae7977b":"markdown","6a9dfb17":"markdown"},"source":{"6bc3a89f":"# imports\nimport numpy as np\nimport pandas as pd\nfrom sklearn.impute import SimpleImputer\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n## models\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import svm","33088e68":"# uci = pd.read_csv(f\"{DATA}heart-disease-eda\/heart-UCI.csv\")\nfhs = pd.read_csv('\/kaggle\/input\/framingham-heart-study-dataset\/framingham.csv')","aabb7e83":"fhs.head()","9c5e2b35":"fhs.describe()","24609fe0":"impMost = SimpleImputer(strategy='most_frequent')\nimpMean = SimpleImputer(strategy='mean')\nfhs.isnull().sum()","b20ae9d1":"# education\nfhs['education'] = impMost.fit_transform(fhs['education'].values.reshape(-1,1))","d357ab00":"# cigsperday\nrows = fhs['cigsPerDay'].isnull()\nfhs.loc[rows,'cigsPerDay'] = int(fhs['cigsPerDay'].mean())","ca3bd900":"# bpmeds\nfhs['BPMeds'] = impMost.fit_transform(fhs['BPMeds'].values.reshape(-1,1))","5685f1af":"# totChol\nfhs['totChol'] = impMean.fit_transform(fhs['totChol'].values.reshape(-1,1))","f1dda760":"fhs['BMI'] = impMean.fit_transform(fhs['BMI'].values.reshape(-1,1))","87508819":"row = fhs['heartRate'].isnull()\nfhs.loc[row,'heartRate'] = int(fhs['heartRate'].mean())","3c3466ad":"row = fhs['glucose'].isnull()\nfhs.loc[row,'glucose'] = int(fhs['glucose'].mean())","f88485ec":"fhs.isnull().sum()","5b6bd75f":"## rename TenYearCHD column name\nfhs = fhs.rename(columns={'TenYearCHD':'target'})","806ef9db":"# male vs target\nfig, ax = plt.subplots(nrows=1,ncols=2,facecolor='white',figsize=(10,5))\ngender = fhs['male'].value_counts()\nax[0].bar(gender.index.values, gender.values, align='center', \\\n          tick_label=['female','male'],width=0.2)\nax[0].set_title('Distribution of Gender Data')\ngender = gender.index.values\ncount = [0,0]\nfor t,g in zip(fhs['target'],fhs['male']):\n    count[g] += t\n\nax[1].bar(gender,count,align='center',tick_label=['female','male'],width=0.2)\nax[1].set_title('Distribution of Target in Different Sex')\nplt.show()","38f7e58a":"# age vs target\nfig, ax = plt.subplots(1,1,facecolor='white')\nx = sorted(fhs['age'].unique())\ny = fhs.groupby(['age']).mean()['target'].values\nplt.scatter(x,y)\nplt.show()","e4a4a2a2":"# education \nfix, ax = plt.subplots(1,2,facecolor='white',figsize=(15,5))\nedu = fhs['education'].value_counts().index\nfreq = fhs['education'].value_counts()\nax[1].barh(y=edu,width=freq,tick_label=edu,height=0.1)\nax[1].set_xlabel('number of people')\nax[1].set_title('Distribution of Education level')\nax[1].set_ylabel('Education level')\n\ncountOrig = [0,0,0,0]\nfor t,e in zip(fhs['target'],fhs['education']):\n    countOrig[int(e-1)] += t\ncount = list(map(lambda x: -x,countOrig))\nax[0].barh(y=edu,width=count,height=0.1,color='red')\nax[0].set_xticklabels(list(map(lambda x: str(abs(x)),ax[0].get_xticks())))\nax[0].set_title('Target true for each education levels')\nax[0].set_xlabel('number of people with Target = True')\nax[0].tick_params(axis='y',labelsize=0,which='major', \\\n                 bottom=False,top=False,left=False)\nplt.show()","f5eddd6b":"fig, ax = plt.subplots(figsize=(15,5),facecolor='white')\nxlab = fhs['education'].value_counts().index\nfreq = fhs['education'].value_counts().values\nrates = [(c\/float(f))*100 for f,c in zip(freq,countOrig)] \ncounts = countOrig\nprint(rates,counts,freq)\n\n\nx = np.arange(len(xlab))\nwidth = 0.3\nrect1  = ax.bar(x-width\/2, rates,width=width,label='Rates of CHD in 10 years',color='blue')\nrect2 = ax.bar(x+width\/2,counts,width=width,label='CHD in 10 years')\n\nax.set_ylabel('CHD Prediction for 10 years')\nax.set_title('CHD Prediction in Education Level')\nax.set_xticks(x)\nax.set_xticklabels(edu)\nax.legend()\n\ndef autoLabel(rect):\n    for r in rect:\n        heights = r.get_height()\n        ax.annotate(\"{:.2f}\".format(heights),\n                   xy=( r.get_x()+ r.get_width()\/2, heights),\n                   xytext=(0,0),\n                   textcoords='offset points',\n                   ha='center',\n                   va='bottom')\n\nautoLabel(rect1)\nautoLabel(rect2)\nplt.show()","15418210":"fig, ax = plt.subplots(figsize=(8,5),facecolor='white')\nxlab = ['Non-smoker','Smoker']\nx = np.arange(len(xlab))\nfreq = fhs['currentSmoker'].value_counts().values\ndist = [0 for w in xlab]\n\n\nfor t,s in zip(fhs['target'],fhs['currentSmoker']):\n    dist[s] += t\nrates = [(d\/float(f))*100 for d,f in zip(dist,freq)]\nwidth = 0.2\nrect1 = ax.bar(x - width\/2,freq, width=width\/2,color='green',label='Total people')\nrect2 = ax.bar(x+width\/2, dist, width= width\/2,color='black',label='Total people pre. w\/ CHD')\nrect3 = ax.bar(x,rates,width=width\/2,color='purple',label='Total people pre. w\/ CHD per 100')\nax.legend()\nax.set_xticks(x)\nax.set_xticklabels(xlab)\n\n## define autolabel to remember\ndef autoLabel(rect,k=None):\n    for b in rect:\n        height = b.get_height()\n        if k is None:\n            ax.annotate(\"%.2f\"%(height),\n                       xy=(b.get_x(),height),\n                        xytext=(0,0),\n                       xycoords='data',\n                       textcoords='offset points',\n                       ha='left',\n                       va='bottom')\n        else:\n                ax[k].annotate(\"%.2f\"%(height),\n                       xy=(b.get_x(),height),\n                        xytext=(0,0),\n                       xycoords='data',\n                       textcoords='offset points',\n                       ha='left',\n                       va='bottom',\n                        rotation=45)\n\nautoLabel(rect1)\nautoLabel(rect2)\nautoLabel(rect3)\nplt.show()","4fc7487a":"# cigsperday vs target\nfig, ax = plt.subplots(nrows=2,ncols=1,figsize=(10,10),facecolor='white')\ndist = fhs['cigsPerDay'].value_counts()\ncigs = [int(x) for x in sorted(dist.index)] \nchdCount = dict(map(lambda x: [x,0],cigs))\n\nfor t,c in zip(fhs['target'],fhs['cigsPerDay']):\n    chdCount[c] += t\nrates = [(chdCount[c] \/ float(dist.loc[c]))*100 for c in cigs]\n\nx = np.arange(len(cigs))\n\nbar1 = ax[0].bar(x,chdCount.values())\nax[0].set_xticks(x)\nax[0].set_xticklabels(cigs)\nax[0].set_ylabel('Number of People')\nax[1].bar(x,rates)\nax[1].set_xticks(x)\nax[1].set_xticklabels(cigs)\nax[1].set_xlabel('Cig Per Day')\nax[1].set_ylabel('People w\/ CHD (%)')\n\nautoLabel(bar1,0)\n\nplt.show()\nprint(chdCount[12],dist.loc[12])","a24dd525":"# BPMeds\n\nfig, ax = plt.subplots(figsize=(8,5),facecolor='white')\nxlab = ['No','Yes']\nx = np.arange(len(xlab))\ndist = fhs['BPMeds'].value_counts().values\nchd = [0 for w in xlab]\nfor t,c in zip(fhs['target'],fhs['BPMeds']):\n    chd[int(c)] += t\nrates = [(c\/float(d))*100 for c,d in zip(chd,dist)]\n\nwidth = 0.2\nrect1 = ax.bar(x - width\/2,dist, width=width\/2,color='black',label='Total people')\nrect2 = ax.bar(x+width\/2, chd, width= width\/2,color='red',label='Total people pre. w\/ CHD')\nrect3 = ax.bar(x,rates,width=width\/2,color='blue',label='Total people pre. w\/ CHD per 100')\nax.legend()\nax.set_xticks(x)\nax.set_xticklabels(xlab)\nax.set_xlabel('Takes Medicine')\nautoLabel(rect1)\nautoLabel(rect2)\nautoLabel(rect3)","ddcf8ddf":"# prevalentStroke\n\nfig, ax = plt.subplots(figsize=(8,5),facecolor='white')\nxlab = ['No','Yes']\nx = np.arange(len(xlab))\ndist = fhs['prevalentStroke'].value_counts().values\nchd = [0 for w in xlab]\nfor t,c in zip(fhs['target'],fhs['prevalentStroke']):\n    chd[int(c)] += t\nrates = [(c\/float(d))*100 for c,d in zip(chd,dist)]\n\nwidth = 0.2\nrect1 = ax.bar(x - width\/2,dist, width=width\/2,color='black',label='Total people')\nrect2 = ax.bar(x+width\/2, chd, width= width\/2,color='red',label='Total people pre. w\/ CHD')\nrect3 = ax.bar(x,rates,width=width\/2,color='blue',label='Total people pre. w\/ CHD per 100')\nax.legend()\nax.set_xticks(x)\nax.set_xticklabels(xlab)\nax.set_xlabel('Prevalent Stroke')\nautoLabel(rect1)\nautoLabel(rect2)\nautoLabel(rect3)","17622278":"# prevalent Hypertension\n\nfig, ax = plt.subplots(figsize=(8,5),facecolor='white')\nxlab = ['No','Yes']\nx = np.arange(len(xlab))\ndist = fhs['prevalentHyp'].value_counts().values\nchd = [0 for w in xlab]\nfor t,c in zip(fhs['target'],fhs['prevalentHyp']):\n    chd[int(c)] += t\nrates = [(c\/float(d))*100 for c,d in zip(chd,dist)]\n\nwidth = 0.2\nrect1 = ax.bar(x - width\/2,dist, width=width\/2,color='black',label='Total people')\nrect2 = ax.bar(x+width\/2, chd, width= width\/2,color='red',label='Total people pre. w\/ CHD')\nrect3 = ax.bar(x,rates,width=width\/2,color='blue',label='Total people pre. w\/ CHD per 100')\n\nax.legend()\nax.set_xticks(x)\nax.set_xticklabels(xlab)\nax.set_xlabel('Prevalent Hyp')\nautoLabel(rect1)\nautoLabel(rect2)\nautoLabel(rect3)\nplt.show()","df15d6c4":"# diabetes\nfig, ax = plt.subplots(figsize=(8,5),facecolor='white')\nxlab = ['No','Yes']\nx = np.arange(len(xlab))\ndist = fhs['diabetes'].value_counts().values\nchd = [0 for w in xlab]\nfor t,c in zip(fhs['target'],fhs['diabetes']):\n    chd[int(c)] += t\nrates = [(c\/float(d))*100 for c,d in zip(chd,dist)]\n\nwidth = 0.2\nrect1 = ax.bar(x - width\/2,dist, width=width\/2,color='black',label='Total people')\nrect2 = ax.bar(x+width\/2, chd, width= width\/2,color='red',label='Total people pre. w\/ CHD')\nrect3 = ax.bar(x,rates,width=width\/2,color='blue',label='Total people pre. w\/ CHD per 100')\n\nax.legend()\nax.set_xticks(x)\nax.set_xticklabels(xlab)\nax.set_xlabel('diabetes')\nautoLabel(rect1)\nautoLabel(rect2)\nautoLabel(rect3)\nplt.show()","14cfdf27":"# totchol\nchol0 = []\nchol1 = []\nfor c,t in zip(fhs['totChol'],fhs['target']):\n    if t==1:\n        chol1.append(c)\n    else:\n        chol0.append(c)\n\nfig, ax = plt.subplots(figsize=(10,8),facecolor='white')\nax.boxplot([chol0,chol1],notch=True)\nax.set_xticklabels(['w\/o CHD','w\/ CHD'])\nax.grid(True)","5e6545f2":"# sysBP\nbp0 = []\nbp1 = []\nfor c,t in zip(fhs['sysBP'],fhs['target']):\n    if t==1:\n        bp1.append(c)\n    else:\n        bp0.append(c)\n\nfig, ax = plt.subplots(figsize=(10,8),facecolor='white')\nax.boxplot([bp0,bp1],notch=True)\nax.set_xticklabels(['w\/o CHD','w\/ CHD'])\nax.grid(True)","6ed1af66":"# diaBP\ndiabp0 = []\ndiabp1 = []\nfor c,t in zip(fhs['diaBP'],fhs['target']):\n    if t==1:\n        diabp1.append(c)\n    else:\n        diabp0.append(c)\n\nfig, ax = plt.subplots(figsize=(10,8),facecolor='white')\nax.boxplot([diabp0,diabp1],notch=True)\nax.set_xticklabels(['w\/o CHD','w\/ CHD'])\nax.grid(True)","aa80cff9":"# totchol\nbmi0 = []\nbmi1 = []\nfor c,t in zip(fhs['BMI'],fhs['target']):\n    if t==1:\n        bmi1.append(c)\n    else:\n        bmi0.append(c)\n\nfig, ax = plt.subplots(figsize=(10,8),facecolor='white')\nax.boxplot([bmi0,bmi1],notch=True,meanline=True,showmeans=True)\nax.set_xticklabels(['w\/o CHD','w\/ CHD'])\nax.grid(True)","9bf774f3":"# heartrate\nhr0 = []\nhr1 = []\nfor c,t in zip(fhs['heartRate'],fhs['target']):\n    if t==1:\n        hr1.append(c)\n    else:\n        hr0.append(c)\n\nfig, ax = plt.subplots(figsize=(10,8),facecolor='white')\nax.boxplot([hr0,hr1],notch=True)\nax.set_xticklabels(['w\/o CHD','w\/ CHD'])\nax.grid(True)","cd835134":"# glucose\nglu0 = []\nglu1 = []\nfor c,t in zip(fhs['glucose'],fhs['target']):\n    if t==1:\n        glu1.append(c)\n    else:\n        glu0.append(c)\n\nfig, ax = plt.subplots(figsize=(10,8),facecolor='white')\nax.boxplot([glu0,glu1],notch=True)\nax.set_xticklabels(['w\/o CHD','w\/ CHD'])\nax.grid(True)","dad5d681":"## correlation matrix & plot without sns :v \ncorr = fhs.corr()\ndata = corr.values\nlabels = corr.index\n\nfig, ax = plt.subplots(facecolor='white',figsize=(10,10))\nsns.heatmap(corr,vmin=-1,vmax=1,center=0)\nplt.show()\n","0dfaf603":"cols = ['age', 'prevalentHyp', 'sysBP', 'diaBP', 'age', 'glucose']\ntrainX, testX,trainy,testy = train_test_split(fhs[cols],fhs['target'],test_size=0.3)","e1988086":"clf = svm.SVC(decision_function_shape='ovo',probability=True)\nclf.fit(trainX,trainy)\nprint(clf.score(testX,testy))\nprint(clf.score(trainX,trainy))","d758adcd":"Now, we can be sure that education level does not make any big impact on CHD Prediction.","7d48321b":"<h1>Table of Contents<span class=\"tocSkip\"><\/span><\/h1>\n<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#Loading-Data\" data-toc-modified-id=\"Loading-Data-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;<\/span>Loading Data<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#FHS\" data-toc-modified-id=\"FHS-1.1\"><span class=\"toc-item-num\">1.1&nbsp;&nbsp;<\/span>FHS<\/a><\/span><\/li><\/ul><\/li><li><span><a href=\"#FHS\" data-toc-modified-id=\"FHS-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;<\/span>FHS<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Missing-Values\" data-toc-modified-id=\"Missing-Values-2.1\"><span class=\"toc-item-num\">2.1&nbsp;&nbsp;<\/span>Missing Values<\/a><\/span><\/li><li><span><a href=\"#EDA\" data-toc-modified-id=\"EDA-2.2\"><span class=\"toc-item-num\">2.2&nbsp;&nbsp;<\/span>EDA<\/a><\/span><\/li><\/ul><\/li><li><span><a href=\"#Classification\" data-toc-modified-id=\"Classification-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;<\/span>Classification<\/a><\/span><\/li><\/ul><\/div>","fe5daad3":"from the analysis above, we see that data is more dependent on `age`, `prevalentHyp`, `sysBP`, `diaBP`,`glucose`\n\nSo, only those features will be used in the model.","756a6721":"**observation.** The data shows that both w\/o CHD risk and w\/ CHD risk is closer to being overweight in average. But w\/o CHD risk people are close to normal BMI rate, which indicates BMI is a good indicator of health and CHD risk.","87fee935":"**observation.** People on BP medicine is more likely to have CHD in future than people who do not need to take medicines now.","2d3b490a":"# Classification","ed1af28b":"**observations.**  If every other attributes are same, men are slightly more proned to have heart dieseases than men. This slight indifferent can be ignored.","72260dcf":"target\n1. 10 year prediction heart disease\n2. make correlation graphs, and other ideas from kaggle","0d4fd93f":"# FHS","3a4bad77":"**observation.** People with higher sysBP level is more likely to develop CHD in 10 years.","01038496":"**observation.** not a good attribute for CHD risk prediction","661fb584":"**observation.** Diabetic patients are in twice as more in risks than non-diabetic patients.","28efa8de":"## EDA\nwith `TenYearCHD` aka `target`","0e52fc06":"**observation.** People with higher diaBP level is more likely to develop CHD in 10 years.","c1771933":"**observation.** Even though we think smokers are in big risk of CHD, data says the difference is not that big. By looking at *rate*, we can see that percantage differenc is only around 1%. Hence, smoking is not a very good attribute of CHD.","2d532d52":"**observations.** age vs target shows linear relation with a few outliers. ","93aa7729":"## Missing Values","af0c2ae9":"**observation.** even though it seems heart disease is more frequent in people with lower level of education, it is not the whole truth. Number of sample in other levels is smaller. Hence, we need to another way to compare the relation. ","1f46ad88":"**observation.** from the second barplot, it is noticable that plot is highest in middle. So cigsPerDay is an important attribute.","b2d63e38":"**observation.** medians and quartiles are similar, so not a good attribute.","bae7977b":"# Loading Data\n## FHS\n**Attributes**\n1. **male**\n2. **age**\n3. **education.** 1 = Some High School; 2 = High School or GED; 3 = Some College or Vocational School; 4 = college\n4. **currentSmoker** 0 = nonsmoker; 1 = smoker\n5. **cigsPerDay** number of cigarettes smoked per day (estimated average)\n6. **BPMeds** 0 = Not on Blood Pressure medications; 1 = Is on Blood Pressure medications\n7. **prevalentStroke**\n8. **prevalentHyp** hypertension\n9. **diabetes** 0 = No; 1 = Yes\n10. **totChol** mg\/dL\n11. **sysBP** mmHg\n12. **diaBP**\n13. **BMI** Body Mass Index calculated as: Weight (kg) \/ Height(meter-squared)\n14. **heartRate** Beats\/Min (Ventricular)\n15. **glucose** mg\/dL\n16. **TenYearCHD**","6a9dfb17":"**observation.** People with higher Cholesterol level is more likely to develop CHD in 10 years."}}