{"cell_type":{"9e15bcf9":"code","7ab13046":"code","2b7eadee":"code","7dd60dac":"code","ca3955b7":"code","c9db6145":"code","9210e955":"code","2b5f86fe":"code","7fa9c2f2":"code","995a4e83":"code","ef68dbad":"code","4b03f1a3":"code","56d1748f":"code","3c3eb532":"code","b5691b79":"code","07251cfb":"code","51b895f9":"code","6499b363":"code","0898aa14":"code","c3e3acdc":"code","31a72a97":"code","58db3fbc":"code","88cbd681":"code","f9f14a0e":"code","153f3078":"code","0e3dcb7d":"markdown","741b4a57":"markdown","a25b55e0":"markdown"},"source":{"9e15bcf9":"#importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","7ab13046":"# importing dataset\ndf=pd.read_csv('\/kaggle\/input\/the-boston-houseprice-data\/boston.csv')","2b7eadee":"df.head()","7dd60dac":"df.info()","ca3955b7":"# univariate analysis\nfor i, col in enumerate(df.columns):\n    plt.figure(i)\n    sns.histplot(df[col])","c9db6145":"#Bivariate analysis\ncol=['CRIM','ZN','INDUS','CHAS','NOX','RM','AGE','DIS','RAD','TAX','PTRATIO','B','LSTAT']\nfor i in col:\n    sns.jointplot(data=df, x=i, y=\"MEDV\")","9210e955":"df.describe()","2b5f86fe":"plt.figure(figsize=(16, 6))\nsns.heatmap(df.corr(),cmap='BrBG', annot=True)","7fa9c2f2":"# outliers\nfor i, col in enumerate(df.columns):\n    plt.figure(i)\n    plt.boxplot(df[col])\n    ","995a4e83":"# log normal transformation for outliers\ncol=['CRIM','ZN','INDUS','CHAS','NOX','RM','AGE','DIS','RAD','TAX','PTRATIO','B','LSTAT']\nfor i in col:\n        df[i]=np.log(df[i].values+1)","ef68dbad":"# outliers\nfor i, col in enumerate(df.columns):\n    plt.figure(i)\n    plt.boxplot(df[col])","4b03f1a3":"df.describe()","56d1748f":"plt.figure(figsize=(16, 6))\nsns.heatmap(df.corr(),cmap='BrBG', annot=True)","3c3eb532":"df.head()","b5691b79":"# splitting the data and target\nx=df.iloc[:,:-1].values\ny=df.iloc[:,-1].values","07251cfb":"# splitting into train and test dataset\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(x, y,train_size=0.8)","51b895f9":"(X_test).shape","6499b363":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nlinear=LinearRegression()\nlinear.fit(X_train,Y_train)\npred_train=linear.predict(X_train)\npred_test=linear.predict(X_test)\nprint(np.sqrt(mean_squared_error(Y_train, pred_train)))\nprint(np.sqrt(mean_squared_error(Y_test, pred_test)))","0898aa14":"# r- squared and adjusted r squared value\nfrom sklearn.metrics import r2_score\nr2_score(Y_test, pred_test)","c3e3acdc":"linear.score(X_test,Y_test)","31a72a97":"plt.scatter(Y_train,pred_train)","58db3fbc":"plt.scatter(Y_test,pred_test)","88cbd681":"# Random forest regressor\nfrom sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators=100,random_state=42)\nregressor.fit(X_train,Y_train)\npred_train=regressor.predict(X_train)\npred_test=regressor.predict(X_test)\nprint(np.sqrt(mean_squared_error(Y_train, pred_train)))\nprint(np.sqrt(mean_squared_error(Y_test, pred_test)))\nprint('R-square value is ',r2_score(Y_test, pred_test))","f9f14a0e":"from sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score, cross_val_predict\nfrom sklearn import metrics\nfrom numpy import mean\nfrom numpy import std\ncv = KFold(n_splits=10, random_state=1, shuffle=True)\nscores = cross_val_score(regressor, X_train, Y_train, cv=cv)\nprint('Accuracy: %.3f (%.3f)' % (mean(scores), std(scores)))","153f3078":"plt.scatter(Y_test,pred_test)","0e3dcb7d":"### Model deployment","741b4a57":"### EDA","a25b55e0":"### Feature engineering"}}