{"cell_type":{"f0790b9c":"code","07dede9e":"code","c94e260e":"code","90aa9360":"code","5488b4c3":"code","2c65ba78":"code","c3a02b1f":"code","4f73fc71":"code","1a1333e0":"code","a28fb16d":"code","fc423fea":"code","3bcccb9d":"code","63f40f7c":"code","28dc9efb":"markdown","5a4c7475":"markdown","30873fb3":"markdown","854fd527":"markdown","d24cd6e5":"markdown","c983bbb4":"markdown","5f0e944a":"markdown","958d1593":"markdown","209979ff":"markdown"},"source":{"f0790b9c":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom scipy import stats\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","07dede9e":"df = pd.read_csv('\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf.head()","c94e260e":"df.info()","90aa9360":"# group by genre\ngroup_genre = df.groupby('Genre')['Name'].count().reset_index()\ngroup_genre.rename(columns={'Name':'Count'}, inplace=True)\ngroup_genre['Percentage'] = round(group_genre['Count']\/sum(group_genre['Count'])*100,2)\n\n# fig\nfig = plt.figure(figsize=(12,4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\n\n# barh\naxes1.barh(width=group_genre['Percentage'][0]+group_genre['Percentage'][1], y=0, color='MidnightBlue')\naxes1.barh(width=group_genre['Percentage'][0], y=0, color='LightSteelBlue')\n\n# percentages\naxes1.text(group_genre['Percentage'][0]\/2.9, 0, f\"{group_genre['Percentage'][0]}%\", color='Goldenrod', fontsize=30, fontweight='bold')\naxes1.text((group_genre['Percentage'][0]+group_genre['Percentage'][1])\/1.57, 0, f\"{group_genre['Percentage'][1]}%\", color='Goldenrod', fontsize=30, fontweight='bold')\n\n# count\naxes1.text(120, 0.3, 'Fiction books:', fontsize=30, fontweight='bold', color='LightSteelBlue')\naxes1.text(120, 0.2, f\"{group_genre['Count'][0]}\", fontsize=30, fontweight='bold', color='LightSteelBlue')\naxes1.text(120, 0, 'Non Fiction books:', fontsize=30, fontweight='bold', color='MidnightBlue')\naxes1.text(120, -0.1, f\"{group_genre['Count'][1]}\", fontsize=30, fontweight='bold', color='MidnightBlue')\n\n# title\naxes1.text(group_genre['Percentage'][0]\/2.9, 0.5, f\"{group_genre['Genre'][0]}\", color='Black', fontsize=30, fontweight='bold')\naxes1.text((group_genre['Percentage'][0]+group_genre['Percentage'][1])\/1.65, 0.5, f\"{group_genre['Genre'][1]}\", color='Black', fontsize=30, fontweight='bold')\n\n# axis\naxes1.axis('off')\nfig.show()","5488b4c3":"# fig\nfig = plt.figure(figsize=(12,6))\n\n# axes\naxes = fig.add_axes([0,0,1,1])\n\n# countplot\nsns.countplot(x=df['Year'], hue=df['Genre'], palette=['MidnightBlue','LightSteelBlue', ], ax=axes)\n\n# spines\naxes.spines[['right', 'top', 'left', 'bottom']].set_visible(False)\n\n# ticks\naxes.set_yticks([])\n\n# legend\naxes.get_legend().remove()\n\n# bar's annotate\nfor p in axes.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    axes.annotate('{:.0f}'.format(height), (x + width\/2, y + height*1.02), ha='center')\n\n# lables\naxes.set_xlabel('Years', fontsize=16, color='black')\naxes.set_ylabel('')\n\n# title\naxes.text(1.3, 35, 'Number of fiction and non fiction books by year', color='Black', fontsize=24, fontweight='bold', label='Fiction books')\n\n# conclusion\naxes.text(12, 25, 'Maximum books was in:', fontsize=16, color='black', fontweight='bold')\naxes.text(12, 23.5, '2014;', fontsize=14, color='LightSteelBlue', fontweight='bold')\naxes.text(12, 22, '2015.', fontsize=14, color='MidnightBlue', fontweight='bold')\naxes.text(12, 20.5, 'Minimum books was in:', fontsize=16, color='black', fontweight='bold')\naxes.text(12, 19, '2015;', fontsize=14, color='LightSteelBlue', fontweight='bold')\naxes.text(12, 17.5, '2014.', fontsize=14, color='MidnightBlue', fontweight='bold')\nfig.show()","2c65ba78":"# fig\nfig = plt.figure(figsize=(12, 4))\n\n# axes\naxes1 = fig.add_axes([0,0,1,1])\naxes2 = fig.add_axes([0,-1.3,1,1])\n\n# kde\nsns.kdeplot(df[df['Genre']=='Fiction']['Price'], color='LightSteelBlue', fill=True, shade=True, alpha=0.9, ax=axes1)\nsns.kdeplot(df[df['Genre']=='Non Fiction']['Price'], color='MidnightBlue', fill=True, shade=True, alpha=0.9, ax=axes2)\n\n# scatter\naxes1.scatter(x=[df[df['Genre']=='Fiction']['Price'].mean(), df[df['Genre']=='Fiction']['Price'].median(),\n                df[df['Genre']=='Fiction']['Price'].max(), df[df['Genre']=='Fiction']['Price'].min()],\n             y=[0.072, 0.072, 0.072, 0.072], color='Goldenrod', lw=3)\naxes2.scatter(x=[df[df['Genre']=='Non Fiction']['Price'].mean(), df[df['Genre']=='Non Fiction']['Price'].median(),\n                df[df['Genre']=='Non Fiction']['Price'].max(), df[df['Genre']=='Non Fiction']['Price'].min()],\n             y=[0.053, 0.053, 0.053, 0.053], color='Goldenrod', lw=3)\n\n# mean\naxes1.axvline(df[df['Genre']=='Fiction']['Price'].mean(), linestyle = ':', color = 'Goldenrod', ymin = 0, ymax = 0.9, lw=4)\naxes1.text(df[df['Genre']=='Fiction']['Price'].mean(), 0.075, 'mean', color = 'black', fontsize=14,  fontweight='bold')\naxes2.axvline(df[df['Genre']=='Non Fiction']['Price'].mean(), linestyle = ':', color = 'Goldenrod', ymin = 0, ymax = 0.9, lw=4)\naxes2.text(df[df['Genre']=='Non Fiction']['Price'].mean(), 0.056, 'mean', color = 'black', fontsize=14,  fontweight='bold')\n\n\n# median\naxes1.axvline(df[df['Genre']=='Fiction']['Price'].median(), linestyle = ':', color = 'Goldenrod', ymin = 0, ymax = 0.9, lw=4)\naxes1.text(df[df['Genre']=='Fiction']['Price'].median()-6, 0.075, 'median', color = 'black', fontsize=14,  fontweight='bold')\naxes2.axvline(df[df['Genre']=='Non Fiction']['Price'].median(), linestyle = ':', color = 'Goldenrod', ymin = 0, ymax = 0.9, lw=4)\naxes2.text(df[df['Genre']=='Non Fiction']['Price'].median()-8, 0.056, 'median', color = 'black', fontsize=14,  fontweight='bold')\n\n# min\naxes1.axvline(df[df['Genre']=='Fiction']['Price'].min(), linestyle = ':', color = 'Goldenrod', ymin = 0, ymax = 0.9, lw=4)\naxes1.text(df[df['Genre']=='Fiction']['Price'].min()-3, 0.075, 'min', color = 'black', fontsize=14,  fontweight='bold')\naxes2.axvline(df[df['Genre']=='Non Fiction']['Price'].min(), linestyle = ':', color = 'Goldenrod', ymin = 0, ymax = 0.9, lw=4)\naxes2.text(df[df['Genre']=='Non Fiction']['Price'].min()-3.2, 0.056, 'min', color = 'black', fontsize=14,  fontweight='bold')\n\n# max\naxes1.axvline(df[df['Genre']=='Fiction']['Price'].max(), linestyle = ':', color = 'Goldenrod', ymin = 0, ymax = 0.9, lw=4)\naxes1.text(df[df['Genre']=='Fiction']['Price'].max()-0.8, 0.075, 'max', color = 'black', fontsize=14,  fontweight='bold')\naxes2.axvline(df[df['Genre']=='Non Fiction']['Price'].max(), linestyle = ':', color = 'Goldenrod', ymin = 0, ymax = 0.9, lw=4)\naxes2.text(df[df['Genre']=='Non Fiction']['Price'].max()-0.8, 0.056, 'max', color = 'black', fontsize=14,  fontweight='bold')\n\n# spines\naxes1.spines[['right', 'top', 'left', 'bottom']].set_visible(False)\naxes2.spines[['right', 'top', 'left', 'bottom']].set_visible(False)\n\n# labels\naxes1.set_xlabel('Price', fontsize=16, color='black')\naxes2.set_xlabel('Price', fontsize=16, color='black')\naxes1.set_ylabel('')\naxes2.set_ylabel('')\n\n# ticks\naxes1.set_xticks(list(range(df[df['Genre']=='Fiction']['Price'].min(), df[df['Genre']=='Fiction']['Price'].max(),5)))\naxes2.set_xticks(list(range(df[df['Genre']=='Non Fiction']['Price'].min(), df[df['Genre']=='Non Fiction']['Price'].max(),5)))\n\n# title\naxes1.text(30, 0.075, 'Price of fiction books', fontsize=24, color='black', fontweight='bold')\naxes2.text(37, 0.056, 'Price of non fiction books', fontsize=24, color='black', fontweight='bold')\n\n# conclusion\naxes1.text(40, 0.055, 'The largest number of books in range: 3 - 15;', color='black', fontsize=14)\naxes1.text(40, 0.05, f\"Minimum price - {df[df['Genre']=='Fiction']['Price'].min()};\", color='black', fontsize=14)\naxes1.text(40, 0.045, f\"Maximum price - {df[df['Genre']=='Fiction']['Price'].max()};\", color='black', fontsize=14)\naxes1.text(40, 0.04, f\"Mean price - {df[df['Genre']=='Fiction']['Price'].mean()};\", color='black', fontsize=14)\naxes1.text(40, 0.035, f\"Median - {df[df['Genre']=='Fiction']['Price'].median()}.\", color='black', fontsize=14)\naxes2.text(50, 0.041, 'The largest number of books in range: 5 - 20;', color='black', fontsize=14)\naxes2.text(50, 0.037, f\"Minimum price - {df[df['Genre']=='Non Fiction']['Price'].min()};\", color='black', fontsize=14)\naxes2.text(50, 0.033, f\"Maximum price - {df[df['Genre']=='Non Fiction']['Price'].max()};\", color='black', fontsize=14)\naxes2.text(50, 0.029, f\"Mean price - {round(df[df['Genre']=='Non Fiction']['Price'].mean(),2)};\", color='black', fontsize=14)\naxes2.text(50, 0.025, f\"Median - {df[df['Genre']=='Non Fiction']['Price'].median()}.\", color='black', fontsize=14)\n\nplt.show()","c3a02b1f":"# create list with mean price for fiction and non fiction\nmean_price_fiction_books = []\nfor year in range(2009,2020):\n    mean = df[df['Genre']=='Fiction'][df[df['Genre']=='Fiction']['Year']==year]['Price'].mean()\n    mean_price_fiction_books.append(mean)\nmean_price_non_fiction_books = []\nfor year in range(2009,2020):\n    mean = df[df['Genre']=='Non Fiction'][df[df['Genre']=='Non Fiction']['Year']==year]['Price'].mean()\n    mean_price_non_fiction_books.append(mean)\n    \n# create list with years\nyears = range(2009,2020, 1)\n\n# create df with years and prices \nmean_price_fiction_books_df = pd.DataFrame({'Year':years, 'Mean_price':mean_price_fiction_books})\nmean_price_non_fiction_books_df = pd.DataFrame({'Year':years, 'Mean_price':mean_price_non_fiction_books})\n\n# fig\nfig = plt.figure(figsize=(12,6))\n\n# axes\naxes = fig.add_axes([0,0,1,1])\n\n# for bar's width\nx = np.arange(len(years))\nwidth = 0.35\n\n# bar\naxes.bar(x - width\/2, height=mean_price_fiction_books_df['Mean_price'], color='LightSteelBlue', width=width)\naxes.bar(x + width\/2, height=mean_price_non_fiction_books_df['Mean_price'], color='Midnightblue', width=width)\n\n# ticks\naxes.set_xticklabels(years)\naxes.set_xticks(x)\naxes.set_yticks([])\n\n# lables\naxes.set_xlabel('Years', fontsize=16, color='black')\naxes.set_ylabel('')\n\n# spines\naxes.spines[['right', 'top', 'left', 'bottom']].set_visible(False)\n\n# bar's annotate\nfor p in axes.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    axes.annotate('{:.1f}'.format(height), (x + width\/2, y + height*1.02), ha='center', fontsize=12, color='black')\n    \n# title\naxes.text(5.6, 21, 'Mean prices of fiction and', color='Black', fontsize=24, fontweight='bold', label='Fiction books')\naxes.text(5.6, 19.5, 'non fiction books by year', color='Black', fontsize=24, fontweight='bold', label='Non fiction books')\n\n# conclusion\naxes.text(12.5, 18, 'Maximum mean price was in:', fontsize=16, color='black', fontweight='bold')\naxes.text(12.5, 17, '2009;', fontsize=14, color='LightSteelBlue', fontweight='bold')\naxes.text(12.5, 16, '2014.', fontsize=14, color='MidnightBlue', fontweight='bold')\naxes.text(12.5, 14, 'Minimum mean price was in:', fontsize=16, color='black', fontweight='bold')\naxes.text(12.5, 13, '2017 and 2018;', fontsize=14, color='LightSteelBlue', fontweight='bold')\naxes.text(12.5, 12, '2019.', fontsize=14, color='MidnightBlue', fontweight='bold')\n\nfig.show()","4f73fc71":"# create list with max price for fiction and non fiction\nmax_price_fiction_books = []\nfor year in range(2009,2020):\n    max = df[df['Genre']=='Fiction'][df[df['Genre']=='Fiction']['Year']==year]['Price'].max()\n    max_price_fiction_books.append(max)\nmax_price_non_fiction_books = []\nfor year in range(2009,2020):\n    max = df[df['Genre']=='Non Fiction'][df[df['Genre']=='Non Fiction']['Year']==year]['Price'].max()\n    max_price_non_fiction_books.append(max)\n    \n\n# create df with years and prices \nmax_price_fiction_books_df = pd.DataFrame({'Year':years, 'Max_price':max_price_fiction_books})\nmax_price_non_fiction_books_df = pd.DataFrame({'Year':years, 'Max_price':max_price_non_fiction_books})\n\n# fig\nfig = plt.figure(figsize=(12,6))\n\n# axes\naxes = fig.add_axes([0,0,1,1])\n\n# for bar's width\nx = np.arange(len(years))\nwidth = 0.35\n\n# bar\naxes.bar(x - width\/2, height=max_price_fiction_books_df['Max_price'], color='LightSteelBlue', width=width)\naxes.bar(x + width\/2, height=max_price_non_fiction_books_df['Max_price'], color='MidnightBlue', width=width)\n\n# ticks\naxes.set_xticklabels(years)\naxes.set_xticks(x)\naxes.set_yticks([])\n\n# lables\naxes.set_xlabel('Years', fontsize=16, color='black')\naxes.set_ylabel('')\n\n# spines\naxes.spines[['right', 'top', 'left', 'bottom']].set_visible(False)\n\n# bar's annotate\nfor p in axes.patches:\n    width = p.get_width()\n    height = p.get_height()\n    x, y = p.get_xy() \n    axes.annotate('{:.1f}'.format(height), (x + width\/2, y + height*1.02), ha='center', fontsize=12, color='black')\n    \n# title\naxes.text(5.6, 105, 'Max prices of fiction and', color='Black', fontsize=24, fontweight='bold')\naxes.text(5.6, 98, 'non fiction books by year', color='Black', fontsize=24, fontweight='bold')\n\n# conclusion\naxes.text(12.5, 80, 'Maximum max price was in:', fontsize=16, color='black', fontweight='bold')\naxes.text(12.5, 75, '2009;', fontsize=14, color='LightSteelBlue', fontweight='bold')\naxes.text(12.5, 70, '2013 and 2014.', fontsize=14, color='MidnightBlue', fontweight='bold')\naxes.text(12.5, 65, 'Minimum max price was in:', fontsize=16, color='black', fontweight='bold')\naxes.text(12.5, 60, '2015;', fontsize=14, color='LightSteelBlue', fontweight='bold')\naxes.text(12.5, 55, '2019.', fontsize=14, color='MidnightBlue', fontweight='bold')\nfig.show()","1a1333e0":"df[df['Genre']=='Fiction'][df[df['Genre']=='Fiction']['Price']==82]","a28fb16d":"df[df['Genre']=='Non Fiction'][df[df['Genre']=='Non Fiction']['Price']==105]","fc423fea":"stat, p = stats.mannwhitneyu(df[df['Genre']=='Fiction']['Price'],df[df['Genre']=='Non Fiction']['Price'])\nprint('p=%.8f' % (p))\nprint()\nalpha = 0.05\nif p > alpha:\n    print('Same distribution (fail to reject H0)')\nelse:\n    print('Different distribution (reject H0)')","3bcccb9d":"# fig\nfig = plt.figure(figsize=(14,6))\n\n# axes\naxes = fig.add_axes([0,0,1,1])\n\n# boxplot\nsns.boxplot(x=df['Price'], y=df['Genre'], palette=['MidnightBlue','LightSteelBlue', ], ax=axes)\n\n# spines\naxes.spines[['right', 'top', 'left', 'bottom']].set_visible(False)\n\n# lables\naxes.set_xlabel('Price', fontsize=16, color='black')\naxes.set_ylabel('')\n\n# title\naxes.text(40, -0.5, 'Price by genre', color='Black', fontsize=24, fontweight='bold')\n\nfig.show()","63f40f7c":"# top 10\ntop_fiction = df[df['Genre']=='Fiction'].sort_values(by='Price', ascending=False).head()\ntop_fiction = top_fiction[['Author', 'Name', 'Price']]\ntop_fiction.reset_index(inplace=True)\ntop_fiction.drop('index', inplace=True, axis=1)\ntop_non_fiction = df[df['Genre']=='Non Fiction'].sort_values(by='Price', ascending=False).head()\ntop_non_fiction = top_non_fiction[['Author', 'Name', 'Price']]\ntop_non_fiction.reset_index(inplace=True)\ntop_non_fiction.drop('index', inplace=True, axis=1)\n\n\n# create lists for tables\nlist_fiction=[]\nfor n in range(len(top_fiction['Name'])):\n    x = top_fiction.loc[n,:]\n    list_fiction.append(x)\nlist_non_fiction=[]\nfor n in range(len(top_non_fiction['Name'])):\n    x = top_non_fiction.loc[n,:]\n    list_non_fiction.append(x)\n    \n# color list\ncolor_list=[['white', 'white', 'white']]\n\n# fig\nfig = plt.figure()\n\n# axes\naxes1 = fig.add_axes([0, 0, 1, 1]) \naxes2 = fig.add_axes([0, -1, 1, 1]) \n\n# tables\ntable1=axes1.table(cellColours=color_list*5,cellText = list_fiction, cellLoc ='left', loc ='upper left', colWidths=[0.5,1.4,0.2],\n                  colLabels=top_fiction.columns,colColours=['LightSteelBlue']*3)           \ntable1.auto_set_font_size(False) \ntable1.set_fontsize(16)  \ntable1.scale(1.5, 2.7) \naxes1.text(0.9, 1.1, 'Top 5 most expensive non fiction books', color='black', fontsize=20, fontweight='bold')\n\ntable2=axes2.table(cellColours=color_list*5,cellText = list_non_fiction, cellLoc ='left', loc ='upper left', colWidths=[0.5,1.4,0.2],\n                  colLabels=top_non_fiction.columns,colColours=['MidnightBlue']*3)           \ntable2.auto_set_font_size(False) \ntable2.set_fontsize(16)  \ntable2.scale(1.5, 2.7) \naxes2.text(0.9, 1.1, 'Top 5 most expensive non fiction books', color='black', fontsize=20, fontweight='bold')\n\n# axis\naxes1.set_axis_off()\naxes2.set_axis_off()\n\nfig.show()","28dc9efb":"**Boxplot shows the differences between prices of fiction and non fiction books**\n\n**And at the end about price I want to visualize the most expensive books by genre.**","5a4c7475":"# Ratio fiction and non fiction books","30873fb3":"**H0 rejected, and so we can say that genre is statistically significant feature for price. Let's visualize with boxplot price of fiction and non fiction books.**","854fd527":"**We also observe high variability in the indicators.**\n\n**Max price of non fiction books is higher in all years except 2009 and 2019.**\n\n**I want to know more about books with highest price.**","d24cd6e5":"**We observe a strong variability of indicators. The increase and decrease mean price of fiction and non-fiction books does not always occur in the same periods.**\n\n**Mean price of non-scientific books is higher in all years except 2009.**","c983bbb4":"# Price by genre","5f0e944a":"**And so, analysis shows that price non fiction books > price fiction books.** \n\n**But I want to know if genre is a statistically significant feature for price. We have a non-normal distribution of data, because I will use Mann-Whitney U test.**\n\n**H0 - The differences are not statistically significant and are random.**","958d1593":"**About author**: The American Psychiatric Association (APA) is the main professional organization of psychiatrists and trainee psychiatrists in the United States, and the largest psychiatric organization in the world.\n\n**(c) Wikipedia**\n\n**About book**: This new edition of Diagnostic and Statistical Manual of Mental Disorders (DSM-5), used by clinicians and researchers to diagnose and classify mental disorders, is the product of more than 10 years of effort by hundreds of international experts in all aspects of mental health. Their dedication and hard work have yielded an authoritative volume that defines and classifies mental disorders in order to improve diagnoses, treatment, and research.\n\n**(c) Amazon**","209979ff":"**About author**: Stephenie Meyer graduated from Brigham Young University with a degree in English literature, and she lives with her husband and three sons in Arizona.\n\n**About book**: Deeply romantic and extraordinarily suspenseful, Twilight, New Moon, Eclipse, and Breaking Dawn capture the struggle between defying our instincts and satisfying our desires.\n\n**(c) Amazon**"}}