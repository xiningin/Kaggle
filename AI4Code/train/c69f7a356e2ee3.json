{"cell_type":{"3eb44acc":"code","04045fab":"code","fe491595":"code","4874611a":"code","319849d7":"code","783100b8":"code","83fc5b42":"code","8c1b4780":"code","3864365b":"code","8e9473a6":"code","7823f672":"code","34bbc36d":"code","18e56301":"code","8f0709b5":"code","68a2793e":"code","1a797834":"code","b45f4294":"code","baa18992":"code","93d1d69c":"code","4643ae62":"code","cba4b552":"code","5234fd1f":"code","3de0b6cf":"code","4e46bc83":"markdown","4c07df6a":"markdown","cb1bdc28":"markdown","a9d8e18c":"markdown","c8012915":"markdown","04cd7d94":"markdown","bde9814c":"markdown","ca93a4f2":"markdown","e2d3162b":"markdown","39ae60f7":"markdown","1f60e661":"markdown","f336c13c":"markdown","3cfb26cb":"markdown","090ca812":"markdown","cdbbca73":"markdown","070fde12":"markdown","7e563b1b":"markdown","661be96e":"markdown","1f301f4d":"markdown","10b12ff4":"markdown","7dc6e9e1":"markdown","9311f469":"markdown","5a12b192":"markdown","30822ed6":"markdown","197c252f":"markdown","8980f309":"markdown"},"source":{"3eb44acc":"#Import neccessary libraries\nimport pandas as pd\nimport numpy as np\nimport os\nfrom datetime import date, datetime\n# configuring plotting modeules\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style\nimport matplotlib.pylab as pylab\nimport plotly.express as px\nfrom scipy.stats import mode, pearsonr, pointbiserialr\nimport plotly.graph_objects as go\nimport itertools\nfrom plotly.subplots import make_subplots\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nstyle.use(\"ggplot\")\nparams = {'legend.fontsize': 'x-large',\n          'figure.figsize': (20, 8),\n         'axes.labelsize': 'x-large',\n         'axes.titlesize':'x-large',\n         'xtick.labelsize':'x-large',\n         'ytick.labelsize':'x-large'}\npylab.rcParams.update(params)\npd.set_option('display.max_columns', 100)\npd.set_option('display.max_rows', 100)","04045fab":"input_data_dir = \"..\/input\/house-prices-advanced-regression-techniques\"\ntrain_df = pd.read_csv(os.path.join(input_data_dir, \"train.csv\"))\ntest_df = pd.read_csv(os.path.join(input_data_dir, \"test.csv\"))\nfull_df = pd.concat([train_df, test_df], sort=False)","fe491595":"print(\"Size of training dataset       : {}\".format(train_df.shape))\nprint(\"Size of test dataset           : {}\".format(test_df.shape))","4874611a":"full_df.describe().T","319849d7":"\nnull_stats_df = full_df.isna().sum()\nnull_stats_df = pd.DataFrame({\"null_values\": null_stats_df})\nnull_stats_df[\"total_length\"] = full_df.shape[0]\nnull_stats_df[\"null_%\"] = (null_stats_df[\"null_values\"]\/null_stats_df[\"total_length\"]) * 100\n\nnull_stats_df[null_stats_df['null_%'] > 1].sort_values(by=\"null_%\", ascending=True)[\"null_%\"].plot(kind='barh')\nplt.xlabel(\"Percentage of Null values\", size=16)\nplt.ylabel(\"Columns\", size=16)\nplt.title(\"Null value stats\", size=20, pad = 16)","783100b8":"x = train_df.SalePrice.sort_values().reset_index().index\ny = train_df.SalePrice.sort_values().reset_index()[\"SalePrice\"]\nplt.scatter(x, y, color = \"lightskyblue\")\nplt.xlabel(\"Index\", size=16)\nplt.ylabel(\"Sales Price\", size=16)\nplt.title(\"Distribution of target variable\", size=16, pad=16)","83fc5b42":"def plot_histogram(x, density=False, kde=False):\n    fig, ax = plt.subplots()\n\n    # Plot\n        # Plot histogram\n    x.plot(kind = \"hist\", density = density, alpha = 0.65, bins = 30, color='lightskyblue') # change density to true, because KDE uses density\n        # Plot KDE\n    if kde:\n        x.plot(kind = \"kde\")\n\n        # Quantile lines\n    quant_5, quant_25, quant_50, quant_75, quant_95 = x.quantile(0.05), x.quantile(0.25), x.quantile(0.5), x.quantile(0.75), x.quantile(0.95)\n    quants = [[quant_5, 0.6, 0.16], [quant_25, 0.8, 0.26], [quant_50, 1, 0.36],  [quant_75, 0.8, 0.46], [quant_95, 0.6, 0.56]]\n    for i in quants:\n        ax.axvline(i[0], alpha = i[1], ymax = i[2], linestyle = \":\")\n\n    # X\n    x_start, x_end = ax.get_xlim()\n    ax.set_xlim(x_start, x_end)\n\n# #     # Y\n    if kde:\n        ax.set_yticklabels([])\n        ax.set_ylabel(\"\")\n\n#     # Annotations\n    y_tick_max = ax.get_ylim()[1]\n    x_tick_diff = (abs(ax.get_xticks()[1]) - abs(ax.get_xticks()[0]))\/10\n    ax.text(quant_5,(y_tick_max * 0.17 ), \"5th\", size=10, alpha = 0.80)\n    ax.text(quant_25, (y_tick_max * 0.27), \"25th\", size = 11, alpha = 0.85)\n    ax.text(quant_50, (y_tick_max * 0.37), \"50th\", size = 12, alpha = 1)\n    ax.text(quant_75, (y_tick_max * 0.47), \"75th\", size = 11, alpha = 0.85)\n    ax.text(quant_95, (y_tick_max * 0.57), \"95th Percentile\", size = 10, alpha =.8)\n\n\n# #         # Remove ticks and spines\n    if kde:\n        ax.tick_params(left = False, bottom = False)\n        for ax, spine in ax.spines.items():\n            spine.set_visible(False)\n\n    return ax\n\nhigher_quantile_range = train_df[\"SalePrice\"].quantile(0.99)\nsale_price = train_df[\"SalePrice\"]\ncleaned_sales_price = sale_price[sale_price<higher_quantile_range]\nplot_histogram(cleaned_sales_price, kde=True, density=True)","8c1b4780":"f, a = plt.subplots(figsize=(16,12))\ncorr_df = train_df.corr()\nsns.heatmap(corr_df, vmax=1., square=True, xticklabels = 1, yticklabels = 1)","3864365b":"corr_df.SalePrice.apply(lambda x: abs(x)).sort_values(ascending=False).iloc[1:15][::-1].plot(kind='barh',\n                                                                                            color='lightskyblue')\nplt.title(\"Top 15 highly correlated continuos features\", size=16, pad=20)\nplt.xlabel(\"Correlation coefficient\")\nplt.ylabel(\"Features\")","8e9473a6":"sns.violinplot(train_df['OverallQual'], train_df['SalePrice'])\nplt.xlabel(\"Quality of dwelling\", size=16)\nplt.ylabel(\"Sale Price\", size=16)\nplt.title(\"Price distribution w.r.t Quality\", size=20, pad=16)","7823f672":"print(\"MSZoning abbreviation dictionary:\")\nprint(\"C       : Commercial\")\nprint(\"FV      : Floating Village Residential\")\nprint(\"RH      : Residential High Density\")\nprint(\"RL      : Residential Low Density\")\nprint(\"RM      : Residential Medium Density\")\npxfig = px.scatter(\n    data_frame=train_df, \n    x=\"GrLivArea\", \n    y=\"SalePrice\", \n    color=\"MSZoning\",\n    size_max=60,\n    hover_name=\"Id\"\n)\npxfig.update_layout(title=\"Sale-Price Vs Ground-Living-Area\", xaxis=dict(title=\"Ground Living Area\"))\npxfig.show()\n","34bbc36d":"train_df[[\"GrLivArea\", \"TotalBsmtSF\", \"1stFlrSF\"]]\ntemp_df = train_df.groupby(\"FullBath\")[\"Id\"].count().reset_index()\ntemp_df.columns = [\"FullBath\", \"counts\"]\npxfig = px.bar(\n    data_frame=temp_df, \n    x=\"FullBath\", \n    y=\"counts\", \n)\npxfig.update_layout(title=\"\", xaxis=dict(title=\"Full Bathrooms\"))\npxfig.show()","18e56301":"\ntemp_df = train_df.groupby(\"BedroomAbvGr\")[\"Id\"].count().reset_index()\ntemp_df.columns = [\"FullBath\", \"counts\"]\npxfig = px.bar(\n    data_frame=temp_df, \n    x=\"FullBath\", \n    y=\"counts\", \n)\npxfig.update_layout(title=\"\", xaxis=dict(title=\"Full Bedrooms\"))\npxfig.show()","8f0709b5":"temp_df = train_df.copy()\ntemp_df[\"PricePerSF\"] = train_df[\"SalePrice\"]\/train_df[\"GrLivArea\"]\nsns.boxplot(temp_df['YearBuilt'], temp_df['PricePerSF'])\nplt.xlabel(\"Year\", size=16)\nplt.xticks(rotation=90)\nplt.ylabel(\"Price Per Square Meter($)\", size=16)\nplt.title(\"Price distribution w.r.t Year\", size=20, pad=16)\n","68a2793e":"sns.boxplot(temp_df['YearRemodAdd'], temp_df['PricePerSF'])\nplt.xlabel(\"Year Modifier\", size=16)\nplt.xticks(rotation=90)\nplt.ylabel(\"Price Per Square Meter ($)\", size=16)\nplt.title(\"Price distribution w.r.t Year Modified\", size=20, pad=16)\n","1a797834":"sns.swarmplot(temp_df['YrSold'], temp_df['PricePerSF'])\nplt.xlabel(\"Year Sold\", size=16)\nplt.xticks(rotation=90)\nplt.ylabel(\"Price Per Square Meter($)\", size=16)\nplt.title(\"Price distribution w.r.t Year Sold\", size=20, pad=16)","b45f4294":"zone_mapper = {\n               'C (all)':'Commercial',\n               'FV' : 'Floating Village Residential',\n               'RH' : 'Residential High Density',\n               'RL' : 'Residential Low Density',\n               'RM' : 'Residential Medium Density'\n              }\n\ntemp_df = train_df[[\"MSZoning\", \"SalePrice\"]]\ntemp_df['MSZoning'] = temp_df['MSZoning'].map(zone_mapper)\n\npxfig = px.box(\n    data_frame=temp_df, \n    x=\"MSZoning\", \n    y=\"SalePrice\", \n)\npxfig.update_layout(title=\"Selling Price Vs Zone\", xaxis=dict(title=\"ZONE\"),\n                   yaxis=dict(title=\"Selling price($)\"))\npxfig.show()","baa18992":"shape_mapper = {\n       \"Reg\":\"Regular\",\n       \"IR1\":\"Slightly irregular\",\n       \"IR2\":\"Moderately Irregular\",\n       \"IR3\":\"Irregular\"\n              }\n\ntemp_df = train_df[[\"LotShape\", \"SalePrice\"]]\ntemp_df.LotShape = temp_df.LotShape.map(shape_mapper)\n\npxfig = px.box(\n    data_frame=temp_df, \n    x=\"LotShape\", \n    y=\"SalePrice\", \n)\npxfig.update_layout(title=\"Selling Price Vs Shape of property\", xaxis=dict(title=\"Shape of property\"),\n                   yaxis=dict(title=\"Selling price($)\"))\npxfig.show()","93d1d69c":"coutour_mapper= {\n       \"Lvl\": \"Near Flat\/Level\",\n       \"Bnk\": \"Banked\",\n       \"HLS\": \"Hillside\",\n       \"Low\": \"Depression\"\n        }\n\ntemp_df = train_df[[\"LandContour\", \"SalePrice\"]]\ntemp_df.LandContour = train_df.LandContour.map(coutour_mapper)\npxfig = px.box(\n    data_frame=temp_df, \n    x=\"LandContour\", \n    y=\"SalePrice\", \n)\npxfig.update_layout(title=\"Selling Price Vs Flatness of property\", xaxis=dict(title=\"Flatness\"),\n                   yaxis=dict(title=\"Selling price($)\"))\npxfig.show()","4643ae62":"pxfig = px.box(\n    data_frame=train_df, \n    x=\"Neighborhood\", \n    y=\"SalePrice\", \n)\npxfig.update_layout(title=\"Selling Price Vs Neighborhood\", xaxis=dict(title=\"Neighborhood\"), yaxis=dict(title=\"Selling price($)\"))\npxfig.show()","cba4b552":"b_type_mapper=    {   \n    \"1Fam\": \"Single-family\",\n       \"2fmCon\":\"Two-family Conversion\",\n       \"Duplex\":\"Duplex\",\n       \"TwnhsE\":\"Townhouse End Unit\",\n       \"Twnhs\":\"Townhouse Inside Unit\"\n        }\ntemp_df = train_df[[\"BldgType\", \"SalePrice\"]]\ntemp_df.BldgType = temp_df.BldgType.map(b_type_mapper)\n        \npxfig = px.box(\n    data_frame=temp_df, \n    x=\"BldgType\", \n    y=\"SalePrice\", \n)\npxfig.update_layout(title=\"Selling Price Vs Building Type\", xaxis=dict(title=\"Building Type\"), yaxis=dict(title=\"Selling price($)\"))\npxfig.show()","5234fd1f":"h_style_mapper=    {   \n       \"1Story\": \"One story\",\n       \"1.5Fin\": \"1.5 story: 2nd level finished\",\n       \"1.5Unf\": \"1.5 story: 2nd level unfinished\",\n       \"2Story\": \"Two story\",\n       \"2.5Fin\": \"2.5 story: 2nd level finished\",\n       \"2.5Unf\": \"2.5 story: 2nd level unfinished\",\n       \"SFoyer\": \"Split Foyer\",\n       \"SLvl\": \"Split Level\"\n        }\n\ntemp_df = train_df.groupby([\"HouseStyle\", \"BldgType\"])[\"Id\"].count().reset_index()\ntemp_df.columns = [\"HouseStyle\", \"BldgType\", \"Number of house\"]\ntemp_df.BldgType = temp_df.BldgType.map(b_type_mapper)\ntemp_df.HouseStyle = temp_df.HouseStyle.map(h_style_mapper)\n\npx.bar(temp_df, x=\"HouseStyle\", y=\"Number of house\", color=\"BldgType\")","3de0b6cf":"temp_df = train_df.groupby([\"BldgType\", \"RoofStyle\"])[\"Id\"].count().reset_index()\ntemp_df.columns = [\"BldgType\", \"RoofStyle\", \"Number of house\"]\n\ntemp_df.BldgType = temp_df.BldgType.map(b_type_mapper)\n\npxfig = px.bar(temp_df, x=\"BldgType\", y=\"Number of house\", color=\"RoofStyle\")\n\npxfig.update_layout(title=\"Selling Price Vs Roof Style\", xaxis=dict(title=\"Building Type\"), yaxis=dict(title=\"Number of house\"))\npxfig.show()","4e46bc83":"Oh! Ground living area is highly in sync with selling price, Color represents a general zoning. All the blue dots that we see are the dwellings from lower density residential zone. Yes! since this zone has less population so the ground living area are larger here, also we see that most of the training data has been accquired from low density residential area.\n\nAll the 4 houses that we see after Ground living area 4000 can act as outlier for our model.","4c07df6a":"End!","cb1bdc28":"Target variable looks good on left but seem to have some outliers on the extreme right. Lets drop this outliers and visualize the histogram.","a9d8e18c":"<a id='8'><\/a><br>\n#### Analyzing building\/House type","c8012915":"<a id='5'><\/a><br>\n### Exploring highly correlated features","04cd7d94":"## Ames Love Gabled Roof!","bde9814c":"Well! what we see is evident, price will increase with respect to quality so we notice that median is in sync with quality.","ca93a4f2":"<center><img src='https:\/\/upload.wikimedia.org\/wikipedia\/commons\/b\/b5\/Gables.jpg', width=500, height=200><\/center>","e2d3162b":"Lets see some more visuals below to better know how Location impact the price of house.","39ae60f7":"<a id='6'><\/a><br>\n### Exploring categorical variables","1f60e661":"<a id='4'><\/a><br>\n\n### Analysis of target variable","f336c13c":"Similar modification has been done to target variable for Year modified and year sold. As per above two plot we can say that price of the house will be higer if it has been recently modified.","3cfb26cb":"Single family is dominating in all type of houses, we can say that our data is biased towards single family, next is townhouse.","090ca812":"<a id='7'><\/a><br>\n#### Analyzing location","cdbbca73":"Okay! so we have vey few houses with 0 full bedrooms and just 1 house with 8 bedroom.","070fde12":"It will be wrong to visualize year Vs SalePrice. Sale price may get impacted by square feet or Zone. Therefore, I am visualizing a year against modified target i.e \"Price per square meter\", for zone we have seen that our training data is biased towards a single \"RL\" type so it may not make huge impact.\n\nYes! there's small hike in median price rate for houses with ~recent 10 years and decrease in price rate for ~oldest 10 years. This insight can be helpfull in creating new features. May be we can cearte an indicator to subcategorize house with resepect to age.","7e563b1b":"<a id='1'><\/a><br>\n### EDA","661be96e":"> **Objective:** \n\nIn this notebook let us perform descriptive analysis over this small real estate dataset provided to us.\n\n1. [EDA](#1)\n> 1.1 [Data Description](#2)<br>\n> 1.2 [Null Values](#3)<br>\n> 1.3 [Analysis of target variable](#4)<br>\n> 1.4 [Exploring highly correlated continuous features](#5)<br>\n> 1.5 [Exploring categorical features](#6)<br>\n>>1.5.1 [Analyzing location](#7)<br>\n>>1.5.2 [Analyzing Building\/house type](#8)<br>","1f301f4d":"We should be carefull with the result of Pearson correlation, most of the time we might have good correlation due to noise aswell, so its always good to put common sense on top of this result. In our case we will be exploring the following features among this top 15 highly correlated ones. <br>\n1) OverallQual - Over-all quality <br>\n2) GrLivArea - Ground Living Area <br>\n3) FullBath - Full Bath room above grade <br>\n4) TotRmsAbvGrd - Total rooms Above grade <br>\n5) YearBuilt - Year Built <br>\n6) YearRemodAdd - Year remodified <br>\n<br>","10b12ff4":"**Real estate** owning is the American Dream. It is a symbol of wealth and status. It has been so for generations and it will be so as long as there is an open market and land to sell.\n\nIf you look into the background and history of the wealthiest Americans, 9 times out of 10 you will discover that they used real estate as a stepping stone to wealth.\n\nInvesting in real estate gives the everyday person like you or me the opportunity to get into the game. It gives us a chance to build that wealth and status. To create passive income that compounds into freedom.\n\n","7dc6e9e1":"<a id='3'><\/a><br>\n### Null Values","9311f469":"<center><img src =https:\/\/www.bdrbusiness.com.au\/app\/uploads\/House_Sold_1572401072-1024x660.jpg, alt=\"\" width=\"500\" height=\"250\"><\/center>","5a12b192":"Location always matters. The plot below reveals the relationship between house sale price and location zone. Residential High (RH) zone has a stable house price while there is a large variance within the  Residential Low (RL) zone and the  Residential Median (RM) zone.   Floating Village(FV) is a special area where a retirement community was developed and have the highest median price.","30822ed6":"<a id='2'><\/a><br>\n\n### Looking at data description","197c252f":"Distribution of target variable(SalePrice) looks pretty good almost forming a gaussian shape. 95% of property in datatset cost below $3lac and median price is ~1.5lac.","8980f309":"We have very little houses without full bathroom."}}