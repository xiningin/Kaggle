{"cell_type":{"b81bd9fd":"code","d618adba":"code","84e4eef9":"code","d3bd741e":"code","5037cdca":"code","8168a017":"code","5f1fd881":"code","747c4407":"code","99806d1e":"code","88eb2747":"code","935c497d":"code","e59f270e":"code","4c3e3212":"code","16d78654":"code","859b3bf6":"code","0748c9a9":"code","f31f8b4c":"code","d91d9a03":"code","c6946bbc":"code","323a6dd9":"code","6e8f0869":"code","87a255f6":"code","9b2eda85":"code","ee8934ff":"code","260a0c2f":"code","23c0f1b1":"code","c4a9f05b":"code","a92930d8":"code","c6a279dd":"code","b1871436":"code","0fa060ae":"code","4c235e27":"code","b620312e":"code","3caf4708":"code","55bb7e53":"code","95dd1ae4":"markdown","6b5af4a8":"markdown","d9318f5b":"markdown","33a6da7c":"markdown","f9e99a8f":"markdown"},"source":{"b81bd9fd":"import pandas as pd\nimport numpy as np\nimport seaborn as sns # Visualization\nimport warnings\nwarnings.filterwarnings('ignore')\n#Print Multiple line output\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\n","d618adba":"data=pd.DataFrame()\n\ndata['CUST_ID']=np.arange(1,10001)\ndata['STORE']=np.random.randint(1,15,10000)\ndata['SALES']=np.random.randint(10,100,10000)\ndata['UNITS']=np.random.randint(5,15,10000)\ndata['GP']=data['SALES']*(30\/100) # Gross Profit\ndata['TRANSACTIONS']=np.random.randint(1,5,10000)\ndata['HML']=np.random.randint(0,3,10000)\ndata['AGE']=np.random.randint(10,100,10000)\ndata['GENDER']=np.random.randint(0,2,10000)\ndata['BV']=data['SALES']\/data['TRANSACTIONS'] # Basket Value\ndata['BS']=data['UNITS']\/data['TRANSACTIONS'] # Basket Size\ndata['CUST_TYPE']=np.random.randint(0,2,10000) # Existing Or New","84e4eef9":"#view data set\ndata.head()","d3bd741e":"#Sort by store id and reset the index\ndata.sort_values('STORE',ascending=True, inplace=True)\ndata.reset_index(drop=True,inplace=True)\ndata.head()","5037cdca":"#chnage name of customer id, gender, store no, hml and cutomer type\nx=[]\nfor i in data['CUST_ID']:\n    x.append(\"Cust\"+str(i))\ndata['CUST_ID']=x\n\nx=[]\nfor i in data['STORE']:\n    x.append(\"Str\"+str(i))\ndata['STORE']=x\n\nz=[]\nfor i in data['GENDER']:\n    if i==0:\n        z.append('M')\n    else:\n        z.append('F')\ndata['GENDER']=z\n\nz=[]\nfor i in data['HML']:\n    if i==0:\n        z.append('Low')\n    elif i==1:\n        z.append('Medium')\n    else:\n        z.append('High')\ndata['HML']=z\n\nz=[]\nfor i in data['CUST_TYPE']:\n    if i==0:\n        z.append('New')\n    else:\n        z.append('Existing')\ndata['CUST_TYPE']=z","8168a017":"data.head() # all set for dashboard creation","5f1fd881":"#Store level overall sales summary \nStore_Summary=pd.DataFrame(data['STORE'].unique(),columns=['STORE'])\nfor i in data.describe().columns:\n    if i != 'AGE':\n        df = pd.DataFrame(data.groupby('STORE').sum()[i], columns=[i])\n        Store_Summary= pd.merge(Store_Summary,df,on='STORE',how='inner')\nStore_Summary.set_index('STORE',inplace=True)\nStore_Summary=Store_Summary[['SALES','UNITS','TRANSACTIONS','BV','BS','GP']]","747c4407":"def highlight_header(x):\n    y= ['background-color: LightSkyBlue' if v>=40000 else '' for v in list(x)]\n    return y","99806d1e":"Store_Summary.style.apply(highlight_header)","88eb2747":"# function to get mean, median, mode, IQR(1st quantile 3rd quantile) and range on Sales attribute for a given value\ndef stats(df,col):\n    df = pd.DataFrame(data.groupby(col).describe()['SALES']).rename(columns={'25%':'FIRST_QUANTILE',\n                                          '50%':'MEDIAN',\n                                          '75%':'THIRD_QUANTILE',\n                                          'std': 'STD',\n                                           'mean':'MEAN'}) \n    df['MODE']=pd.DataFrame(data.groupby(col).SALES.apply(lambda x: x.mode()[0]))\n    df['IQR']=df.apply(lambda x: x['THIRD_QUANTILE'] - x['FIRST_QUANTILE'], axis=1)\n    df['RANGE']=df.apply(lambda x: str(x['min'])+ ' - '+ str(x['max']), axis=1)\n    df=df[['MEAN','MEDIAN','MODE','STD','IQR','RANGE']]\n    return df","935c497d":"#Store level Sales statistics  \nStore_Stats=pd.DataFrame()\nStore_Stats = stats(Store_Stats,'STORE')","e59f270e":"Store_Stats","4c3e3212":"#Customer Type wise sales Summary\nType_Sales_Summary= pd.DataFrame(data.groupby('CUST_TYPE')['SALES','UNITS','TRANSACTIONS','BV','BS','GP'].sum())","16d78654":"Type_Sales_Summary","859b3bf6":"#Customer Type wise sales stats Summary\nCust_Type_Stats=pd.DataFrame()\nCust_Type_Stats = stats(Store_Stats,'CUST_TYPE')","0748c9a9":"Cust_Type_Stats","f31f8b4c":"#Age group wise sales Summary\n#To split data by age group , we can use pd.cut() functions\nAge=pd.cut(data['AGE'],[0,18,24,35,50,101])\nAge_Sales_Summary= pd.DataFrame(data.groupby(Age)['SALES','UNITS','TRANSACTIONS','BV','BS','GP'].sum())","d91d9a03":"Age_Sales_Summary.reset_index(inplace=True)","c6946bbc":"Age_Sales_Summary","323a6dd9":"# Function to format Age data\ndef format_age(df,col):\n    x=[]\n    for i in df[col]:\n        if str(i)[1]=='0':\n            x.append(str('0-18'))\n        if str(i)[1]=='1':\n            x.append(str('18-24'))\n        if str(i)[1]=='2':\n            x.append(str('24-35'))\n        if str(i)[1]=='3':\n            x.append(str('35-50'))\n        if str(i)[1]=='5':\n            x.append(str('50+'))\n    df[col]=x\n    return df","6e8f0869":"Age_Sales_Summary = format_age(Age_Sales_Summary,'AGE')","87a255f6":"Age_Sales_Summary.set_index('AGE',inplace=True)","9b2eda85":"Age_Sales_Summary","ee8934ff":"# Age wise sales statistics\nage_sales_stats =pd.DataFrame()\nage_sales_stats = stats(age_sales_stats,Age) # Age is groups of Age","260a0c2f":"age_sales_stats.reset_index(inplace=True)","23c0f1b1":"age_sales_stats = format_age(age_sales_stats,'AGE')","c4a9f05b":"age_sales_stats.set_index('AGE',inplace=True)","a92930d8":"age_sales_stats","c6a279dd":"#HML wise sales Summary\nHML_Sales_Summary= pd.DataFrame(data.groupby('HML')['SALES','UNITS','TRANSACTIONS','BV','BS','GP'].sum())","b1871436":"HML_Sales_Summary","0fa060ae":"# HML wise sales statistics\nhml_sales_stats =pd.DataFrame()\nhml_sales_stats = stats(hml_sales_stats,'HML') \nhml_sales_stats","4c235e27":"#GENDER wise sales Summary\ngender_Sales_Summary= pd.DataFrame(data.groupby('GENDER')['SALES','UNITS','TRANSACTIONS','BV','BS','GP'].sum())\ngender_Sales_Summary","b620312e":"# Gender wise sales statistics\ngender_sales_stats =pd.DataFrame()\ngender_sales_stats = stats(gender_sales_stats,'GENDER') \ngender_sales_stats","3caf4708":"#Sales Summary by gender, and age group\nnew_data=data[data['CUST_TYPE']=='Existing']\nnew_age=pd.cut(new_data['AGE'],[0,18,24,35,50,101])\ndf1=pd.DataFrame(data.groupby(['GENDER',Age])['SALES','UNITS','TRANSACTIONS','BV','BS','GP'].sum())\ndf2=pd.DataFrame(pd.DataFrame(new_data.groupby(['GENDER',new_age])['CUST_TYPE'].count()))\ndf2=df2.rename(columns={'CUST_TYPE' : 'EXISTING_CUSTOMER'})\nsummary=pd.merge(df1,df2,on=['GENDER','AGE'],how='inner')\nfinal_summary=(summary.unstack(level=0).T).swaplevel(0,1).sort_index(level=0)\nfinal_summary.apply(np.floor)","55bb7e53":"#Sales Summary by Customer Type, and age group\nsummary1=pd.DataFrame(data.groupby(['CUST_TYPE',Age])['SALES','UNITS','TRANSACTIONS','BV','BS','GP'].sum())\nfinal_summary1=(summary1.unstack(level=0).T).swaplevel(0,1).sort_index(level=0)\nfinal_summary1.apply(np.floor)","95dd1ae4":"*  There are  stores where sales are high","6b5af4a8":"2. Create Data Set","d9318f5b":"<p>**Preprocessing which involves converting values in dashboard readable format**\n   <br>\n   <br>#Cust_Id - 1 : Cust1, 2 : Cust2..\n   <br>#HML - 2 : high, 1 : Medium , 0 : Low\n   <br>#Gender - 0 : M, 1 : F \n   <br>#Cust_Type - 1 : Existing, 0 : New<\/p>","33a6da7c":"#### This Notebook is helpful to create simple dashboard using Pandas DataFrame & Functions, Without using  plot. Function Groupby,  is used extensively. Data source is created manually using numpy. This notebook generates sales summary and stastics for different attributes like Store level, Gender, HML etc.\n![image.png](attachment:image.png)","f9e99a8f":"1. Import Libraries"}}