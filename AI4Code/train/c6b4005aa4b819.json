{"cell_type":{"50c3f31d":"code","1c578d5f":"code","40e51648":"code","9649b5a3":"code","092d7e03":"code","782c5976":"code","3bd18430":"code","bffb905e":"code","99d4da97":"code","6a7f8adb":"code","7b3cc8f2":"code","817ee30a":"code","eed16a69":"markdown","eb8bbcce":"markdown","90333bb1":"markdown","3fc47f86":"markdown","61b223a8":"markdown","1d8f4ebe":"markdown","bc25c8fc":"markdown","ab381691":"markdown","9a682d00":"markdown","cfd095b4":"markdown"},"source":{"50c3f31d":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected =True)\nimport plotly.graph_objs as go\nfrom wordcloud import WordCloud\nimport os\nprint(os.listdir(\"..\/input\"))\n","1c578d5f":"data = pd.read_csv(\"..\/input\/tables_1968_2019.csv\")","40e51648":"f,ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","9649b5a3":"data[data.season ==\"2018\/2019\"]","092d7e03":"trace1 = go.Scatter(\n                    x = data[data.team == \"Arsenal\"].season,\n                    y =  data[data.team == \"Arsenal\"].points,\n                    name = \"Arsenal\",\n                    marker = dict(color = 'rgba(16, 52, 200, 0.8)'))\ntrace2 = go.Scatter(\n                    x = data[data.team == \"Chelsea\"].season,\n                    y =  data[data.team == \"Chelsea\"].points,\n                    name = \"Chelsea\",\n                    marker = dict(color = 'rgba(160, 82, 100, 0.8)'))\ntrace3 = go.Scatter(\n                    x = data[data.team == \"Liverpool\"].season,\n                    y =  data[data.team == \"Liverpool\"].points,\n                    name = \"Liverpool\",\n                    marker = dict(color = 'rgba(16, 182, 50, 0.8)'))\n\ntemp_data = [trace1,trace2,trace3]\nlayout = dict(title = 'Arsenal-Chelsea-Liverpool Comparison of Points', xaxis= dict(title= 'Seasons',ticklen= 3,zeroline= False))\nfig = dict(data = temp_data, layout = layout)\niplot(fig,filename=\"line-mode\")","782c5976":"trace4 = go.Scatter(\n                    x = data[data.team == \"Arsenal\"].season,\n                    y =  data[data.team == \"Arsenal\"].f,\n                    name = \"Arsenal\",\n                    marker = dict(color = 'rgba(16, 52, 200, 0.8)'))\ntrace5 = go.Scatter(\n                    x = data[data.team == \"Chelsea\"].season,\n                    y =  data[data.team == \"Chelsea\"].f,\n                    name = \"Chelsea\",\n                    marker = dict(color = 'rgba(160, 82, 100, 0.8)'))\ntrace6 = go.Scatter(\n                    x = data[data.team == \"Liverpool\"].season,\n                    y =  data[data.team == \"Liverpool\"].f,\n                    name = \"Liverpool\",\n                    marker = dict(color = 'rgba(16, 182, 50, 0.8)'))\n\ntemp_data = [trace4,trace5,trace6]\nlayout = dict(title = 'Arsenal-Chelsea-Liverpool Comparison', xaxis= dict(title= 'Seasons',ticklen= 3,zeroline= False))\nfig = dict(data = temp_data, layout = layout)\niplot(fig,filename=\"line-mode\")","3bd18430":"trace7 = go.Scatter(\n                    x = data[data.team == \"Chelsea\"].season,\n                    y =  data[data.team == \"Chelsea\"].points,\n                    name = \"Points of Chelsea\",\n                    marker = dict(color = 'rgba(16, 52, 200, 0.8)'))\ntrace8 = go.Scatter(\n                    x = data[data.team == \"Chelsea\"].season,\n                    y =  data[data.team == \"Chelsea\"].f,\n                    name = \"Goal of Chelsea\",\n                    marker = dict(color = 'rgba(160, 82, 100, 0.8)'))\n\ntemp_data = [trace7,trace8]\nlayout = dict(title = 'Chelsea Goal-Point', xaxis= dict(title= 'Seasons',ticklen= 3,zeroline= False))\nfig = dict(data = temp_data, layout = layout)\niplot(fig,filename=\"line-mode\")","bffb905e":"trace9 = go.Scatter(\n                    x = data[data.team == \"Liverpool\"].season,\n                    y =  data[data.team == \"Liverpool\"].points,\n                    name = \"Points of Liveerpool\",\n                    marker = dict(color = 'rgba(16, 52, 100, 0.8)'))\ntrace10 = go.Scatter(\n                    x = data[data.team == \"Liverpool\"].season,\n                    y =  data[data.team == \"Liverpool\"].f,\n                    name = \"Goal of Liverpool\",\n                    marker = dict(color = 'rgba(160, 82, 50, 0.8)'))\n\ntemp_data = [trace9,trace10]\nlayout = dict(title = 'Liverpool Goal-Point', xaxis= dict(title= 'Seasons',ticklen= 3,zeroline= False))\nfig = dict(data = temp_data, layout = layout)\niplot(fig,filename=\"line-mode\")","99d4da97":"trace11 = go.Scatter(\n                    x = data[data.team == \"Manchester City\"].season,\n                    y =  data[data.team == \"Manchester City\"].points,\n                    name = \"Points of Manchester City\",\n                    marker = dict(color = 'rgba(16, 152, 100, 0.8)'))\ntrace12 = go.Scatter(\n                    x = data[data.team == \"Manchester City\"].season,\n                    y =  data[data.team == \"Manchester City\"].f,\n                    name = \"Goal of Manchester City\",\n                    marker = dict(color = 'rgba(100, 82, 150, 0.8)'))\n\ntemp_data = [trace11,trace12]\nlayout = dict(title = 'Manchester City Goal-Point', xaxis= dict(title= 'Seasons',ticklen= 3,zeroline= False))\nfig = dict(data = temp_data, layout = layout)\niplot(fig,filename=\"line-mode\")","6a7f8adb":"data1819 = data[data.season ==\"2018\/2019\"]\npointsallteams = go.Bar(\nx=data1819.team,\ny=data1819.points,\nname=\"points\",\nmarker = dict(color =\"rgba(250,20,20,0.4)\"))\nscoresallteams = go.Bar(\nx=data1819.team,\ny=data1819.f,\nname=\"Scores\",\nmarker = dict(color =\"rgba(50,20,220,0.4)\"))\nconcedegoalallteams = go.Bar(\nx=data1819.team,\ny=data1819.a,\nname=\"defeated goal\",\nmarker = dict(color =\"rgba(50,220,20,0.4)\"))\ndata1=[pointsallteams, scoresallteams, concedegoalallteams]\nlayout = go.Layout(barmode =\"group\")\nfig = go.Figure(data=data1,layout=layout)\niplot(fig)","7b3cc8f2":"xchampion = data[data.pos == 1]\nxchampion","817ee30a":"# data prepararion\n#x2011 = timesData.country[timesData.year == 2011]\n\n\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1024,\n                          height=768\n                         ).generate(\" \".join(xchampion.team))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\nplt.show()","eed16a69":"Now, I will create a graph to see points, scored, and defeated goal of all teams in the 2018\/2019 season.","eb8bbcce":"Now, I will examine Arsenal, Chelsea and Liverpool from 196\/1968 season to 2018\/2019 season.","90333bb1":"Lets see points and goals of Manchester City from 1967\/1968 season to 2018\/2019 season.","3fc47f86":"Your comments are important for me. Thank you for your time. \nBest regards.","61b223a8":"Next step, I will examine scores of them from 1967\/1968 season to 2018\/2019 season.","1d8f4ebe":"Hi there. I want to make practice with this data. You can see just some code and graphics that is it.","bc25c8fc":"Lets see points and goals of Chelsea from 1967\/1968 season to 2018\/2019 season.","ab381691":"Lets see points and goals of Liverpool from 1967\/1968 season to 2018\/2019 season.","9a682d00":"Lastly, I want to create a wordcloud to see champion teams.","cfd095b4":"As you can see, there is a important relation each other. I want to see points table of 2018\/2019 season."}}