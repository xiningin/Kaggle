{"cell_type":{"9d143473":"code","8292f460":"code","50fae6eb":"code","3217e3b5":"code","07c63af0":"code","26d37e57":"code","70fbd0d7":"code","4fd44f24":"code","6d7653bc":"code","3c959646":"code","c9dbd03f":"code","7640fe58":"code","63a3c9de":"code","18abb8a7":"code","3869686a":"code","c9c1b76d":"code","7e204cd2":"code","cb2fce53":"code","80b7c31c":"code","69a7a858":"markdown","9ffe90aa":"markdown","064ffc68":"markdown","678e901a":"markdown","1bb28a08":"markdown","d852069e":"markdown"},"source":{"9d143473":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set() \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8292f460":"data_wind = pd.read_csv('\/kaggle\/input\/texas-wind-turbine-dataset-simulated\/TexasTurbine.csv')\ndf = data_wind.copy()","50fae6eb":"df.head()","3217e3b5":"from datetime import datetime\n\ndef con_date(x):\n    d = datetime.strptime(x, '%b %d, %I:%M %p')\n    return(pd.to_datetime(d.replace(year=d.year + 120)))\n\ndf['time_stamp'] = df['Time stamp'].apply(lambda x : con_date(x))\ndf = df.set_index('time_stamp')","07c63af0":"df.dtypes","26d37e57":"df.drop('Time stamp', axis=1, inplace=True)\ndf = df.asfreq('H')\ndf = df.fillna(method='ffill')","70fbd0d7":"df.isna().sum()","4fd44f24":"df.dtypes","6d7653bc":"df.rename({\n    'System power generated | (kW)': 'power',\n    'Wind speed | (m\/s)': 'wind_speed',\n    'Wind direction | (deg)': 'wind_direction',\n    'Pressure | (atm)': 'pressure',\n    'Air temperature | (\\'C)': 'temperature'\n}, inplace=True, axis=1)","3c959646":"!pip install pmdarima","c9dbd03f":"from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nfrom pmdarima.arima import auto_arima","7640fe58":"df.tail()","63a3c9de":"model_auto = auto_arima(df.power,\n                        exogenous = df[['wind_speed']],\n                        max_order = None,\n                        max_p = 2,\n                        max_q = 4,\n                        max_d = 1,\n                        max_P = 1, \n                        max_Q = 1, \n                        max_D = 1,\n                        trend = 'ct')","18abb8a7":"model_auto.summary()","3869686a":"model_auto.plot_diagnostics(figsize=(20,10))\nplt.show()","c9c1b76d":"# u can change steps variable to any number of steps u would like to predict in the future\n\nsteps = 24\nsteps_index = []\nfor i in range(1, (steps+1)):\n    steps_index.append(df.index[-1] + pd.DateOffset(hours=i))","7e204cd2":"forecast = model_auto.predict(n_periods=steps, exogenous=df[['wind_speed']][-steps:])\nfor i, val in enumerate(forecast):\n    if val < 0:\n        forecast[i] = val * -1","cb2fce53":"model_predict = pd.DataFrame(forecast, index=steps_index, columns=['next_' + str(steps) + '_steps'])\nplt.figure(figsize=(20,10))\nplt.plot(df,color='blue')\nplt.plot(model_predict,color='red')\nplt.show()","80b7c31c":"model_predict\n","69a7a858":"## Data Preprocessing","9ffe90aa":"## predicting the next 24 steps","064ffc68":"## Finding the best model","678e901a":"## Importing The Data","1bb28a08":"## Ploting the predicted values","d852069e":"## Printing the predicted values"}}