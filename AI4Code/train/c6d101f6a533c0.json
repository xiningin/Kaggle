{"cell_type":{"64d319f3":"code","87dd21a3":"code","0df11f14":"code","e7f88efd":"code","802f75da":"code","5c197e44":"code","af21fa17":"code","536c6a95":"code","beba403d":"code","6e40a738":"code","6ee66c83":"code","c8c06468":"code","618d6df3":"code","ce0d7156":"code","946299a5":"code","88c40231":"code","cbeaaa0e":"markdown"},"source":{"64d319f3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","87dd21a3":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.linear_model import LogisticRegression","0df11f14":"df = pd.read_csv('\/kaggle\/input\/creditcardfraud\/creditcard.csv')\ndf.head()","e7f88efd":"df.isna().sum()","802f75da":"df.dtypes","5c197e44":"df.describe()","af21fa17":"df['Class'].value_counts()","536c6a95":"from scipy.stats import pointbiserialr\n\npb = {col: pointbiserialr(df[\"Class\"], df[col]) for col in df.columns if col != \"Class\"}\ndf_pb = pd.DataFrame(pb)\n\ndf_pb.head()","beba403d":"X1 = df.drop(columns='Class', axis=1)\ny1 = df['Class']","6e40a738":"#Creating oversampled data\nsm = SMOTE(sampling_strategy='auto', random_state=42, k_neighbors=4)\nX_oversampled , y_oversampled = sm.fit_resample(X1, y1)","6ee66c83":"y_oversampled.value_counts()","c8c06468":"#Spletting the data to train and splot\nX_train, X_test, y_train, y_test = train_test_split(X_oversampled, y_oversampled, test_size=0.33, random_state=42)","618d6df3":"lr = LogisticRegression(solver='liblinear')\nlr.fit(X_train, y_train)","ce0d7156":"from sklearn.metrics import accuracy_score\ntst_lr_smt_pred = lr.predict(X_test)\ntst_lr_smt_acc = accuracy_score(tst_lr_smt_pred, y_test)\nprint(round(tst_lr_smt_acc*100, 2))","946299a5":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, tst_lr_smt_pred)\nsns.heatmap(cm\/np.sum(cm), annot = True, fmt=  '0.2%', cmap = 'Reds')","88c40231":"from sklearn.metrics import recall_score\nfrom sklearn.metrics import precision_score\nfrom sklearn.metrics import f1_score\n\nprint(\"recall\", recall_score(tst_lr_smt_pred, y_test, average='binary'))\nprint(\"precision\", precision_score(tst_lr_smt_pred, y_test, average='binary'))\nprint(\"f1\", f1_score(tst_lr_smt_pred, y_test, average='binary'))","cbeaaa0e":"# Credit Card Fraud\n\n## Team members:\n\n- Mahmoud Ali\n- Hossam Assayed Khairullah\n- Youssef Wagih"}}