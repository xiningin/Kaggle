{"cell_type":{"ef246306":"code","3f4c14cf":"code","b53a36aa":"code","a58cdbe5":"code","9387a75f":"code","9246b69a":"code","a82d1208":"code","07c88660":"code","1923f15e":"code","a80bd7d7":"code","7f235a03":"code","72963dcf":"code","5f7dadfe":"code","cd6fdbbb":"code","7b2cf5d5":"code","fc1b44b8":"code","9460c6c8":"code","efd10324":"code","cb9cee47":"code","a932f066":"code","c64a938d":"code","4ffd31c7":"code","3197d873":"code","58bb044b":"code","77536538":"code","b915afb8":"code","a0f31e30":"code","9532bab3":"markdown","0649a132":"markdown","3e6a4b02":"markdown","1fb9a96d":"markdown"},"source":{"ef246306":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3f4c14cf":"import numpy as np\nimport pandas as pd","b53a36aa":"# Importing the dataset\ndata = pd.read_csv('..\/input\/weather-dataset\/weatherHistory.csv')","a58cdbe5":"data.head()","9387a75f":"data.shape","9246b69a":"data['Loud Cover'].value_counts()","a82d1208":"# Removing variable which wont have much impact on the prediction. value of loud cover is same for all rows, so it wont affect the prediction.\ndata.drop(['Formatted Date','Daily Summary','Loud Cover','Wind Bearing (degrees)'],axis=1,inplace=True)","07c88660":"data","1923f15e":"data.shape","a80bd7d7":"data.isnull().sum()","7f235a03":"data['Precip Type'].value_counts()","72963dcf":"data['Precip Type'].fillna(method='ffill',inplace=True,axis=0)","5f7dadfe":"data['Precip Type'].value_counts()","cd6fdbbb":"# Converting categorical data into numerical data\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndata['Precip Type']=le.fit_transform(data['Precip Type'])\ndata['Summary']=le.fit_transform(data['Summary'])","7b2cf5d5":"data","fc1b44b8":"y=data.iloc[:,0] # Dependent Variable ","9460c6c8":"x = data.iloc[:,1:]    #Independent variable\n","efd10324":"x.corr()    # checking correlation to drop unnecessary variable","cb9cee47":"# Apparent Temperature and Temperax.drop('Apparent Temperature (C)',axis=1,inplace=True)ture are highly correlated (correlation almost equal to 1). So, we can drop one of them.\nx.drop('Apparent Temperature (C)',axis=1,inplace=True)","a932f066":"x","c64a938d":"x.shape","4ffd31c7":"# Splitting the dataset into train data and test data\n# Train dataset is 70% of and Test dataset is 30% of original dataset\n\nfrom sklearn.model_selection import train_test_split\n\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3,random_state=1)","3197d873":"x_train.shape","58bb044b":"x_test.shape","77536538":"# Using Random Forest Classifier algorithm to predict the weather\n# Training model on test data\n\nfrom sklearn.ensemble import RandomForestClassifier\n\nRF = RandomForestClassifier(max_depth=32,n_estimators=120,random_state=1)\nRF.fit(x_train,y_train)\ny_pred = RF.predict(x_test)","b915afb8":"# Finding accuracy of model using test data\nfrom sklearn.metrics import accuracy_score\naccuracy_score(y_test, y_pred)","a0f31e30":"# To see importance of each variable in prediction\nRF.feature_importances_","9532bab3":"# Training the Model","0649a132":"# Preparing Data for training the model","3e6a4b02":"<h1>Weather Prediction<\\h1>","1fb9a96d":"# Measuring Accuracy"}}