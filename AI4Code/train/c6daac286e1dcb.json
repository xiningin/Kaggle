{"cell_type":{"e2412c9b":"code","8e8d48cd":"code","bb5c9152":"code","eb7c2cf0":"code","8946aadb":"code","e3b949a9":"code","b7a3ebde":"code","ac8de720":"code","d6c04594":"code","95c5c119":"code","78bf5c30":"code","fcd9c268":"code","960f4f85":"code","22837119":"code","4bd4d537":"code","aa9007f1":"code","b0d4304a":"code","d1359b31":"code","243e04d5":"code","5aba466c":"code","b3fac2df":"code","29acf3a2":"code","6f562de8":"code","3eb27ab0":"code","82848252":"code","b1625120":"code","84cb926b":"code","b1c1dc28":"code","363b9b92":"markdown","3b3fabe1":"markdown","05ec025d":"markdown","71626043":"markdown","36c76e4a":"markdown","96087bd1":"markdown","7ac2a539":"markdown","0115b9be":"markdown","3fa94f57":"markdown","3406aa79":"markdown","171e1387":"markdown","c9247af5":"markdown"},"source":{"e2412c9b":"#Importing the libraries -- These are most basic libraries, others will be imported as needed\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","8e8d48cd":"data = pd.read_csv('..\/input\/mcdonalds-stock-prices-20152020\/mcdonalds-stocks-data.csv')\nprint(\"Shape of data:\", data.shape)","bb5c9152":"# Let's see how data looks\ndata.head()","eb7c2cf0":"# I suspect some columns do not have the appropriate types. Let's check out\ndata.dtypes","8946aadb":"data.columns","e3b949a9":"# If you look closely columns names contain an extra space, its annoying so we remove it.\ndata.columns = data.columns.str.strip()\ndata.columns","b7a3ebde":"# $ signs make our work difficult, let's remove these dollar signs from entries\ndata['Low']=data['Low'].str.replace('$','').astype(float)\ndata['High']=data['High'].str.replace('$','').astype(float)\ndata['Open']=data['Open'].str.replace('$','').astype(float)\ndata['Close\/Last']=data['Close\/Last'].str.replace('$','').astype(float)","ac8de720":"# Let's check if work is done\ndata.head()","d6c04594":"# As suspected, its string type, I will convert to date type\n# And create day, month and year column\ndates = data['Date'].str.split('\/')\ndays = dates.map(lambda x:x[1])\nmonths = dates.map(lambda x:x[0])\nyears = dates.map(lambda x:x[2])\ndata['day']=days\ndata['month']=months\ndata['year']=years","95c5c119":"# Lets see if new columns are added\ndata.head()","78bf5c30":"# I won't drop the date column as it may be relevent for exploration.\n# I don't want to change the original dataset\n# So I will convert datatype of date\ndata['Date'] = pd.to_datetime(data['Date'])","fcd9c268":"data.head()","960f4f85":"# As we can see pandas is smart enough to handle date \n# Now let's check out final datatypes \ndata.dtypes","22837119":"sns.heatmap(data.isnull())","4bd4d537":"# Heatmap shows there are a few if not none, null places\n# Let's see number of null values in each column\ndata.isnull().sum()","aa9007f1":"# Hurray, we don't have any null values\n# Let's see distributions\n# Let't begin with 'Volume'\nsns.distplot(data['Volume'])\nprint(\"Skew:\",data['Volume'].skew())\nprint(\"Kurtosis:\", data[\"Volume\"].kurtosis())","b0d4304a":"# The 'Volume' is right-skewed and it should be dealt with accordingly. One way is to use logarithm.\nsns.distplot(np.log1p(data['Volume']))","d1359b31":"# Let's check other attributes\nplt.figure(figsize=(20,10))\nax1 = plt.subplot(2,2,1)\nax2=plt.subplot(2,2,2)\nax3=plt.subplot(2,2,3)\nax4=plt.subplot(2,2,4)\nsns.distplot(data['Open'],ax=ax1)\nsns.distplot(data['High'],ax=ax2)\nsns.distplot(data['Low'],ax=ax3)\nsns.distplot(data['Close\/Last'],ax=ax4)","243e04d5":"# Let's plot a box plot of volume\nsns.boxplot(y='Volume', data=data)\nplt.show()","5aba466c":"# This was actually expected because there can be some abnormal changes in stocks\n# Also it shows skewness of 'Volume' which we have seen above\n# Let's plot for others\nplt.figure(figsize=(20,10))\nax1 = plt.subplot(2,2,1)\nax2=plt.subplot(2,2,2)\nax3=plt.subplot(2,2,3)\nax4=plt.subplot(2,2,4)\nsns.boxplot(y='Open',data=data,ax=ax1)\nsns.boxplot(y='High',data=data,ax=ax2)\nsns.boxplot(y='Low',data=data,ax=ax3)\nsns.boxplot(y='Close\/Last',data=data,ax=ax4)\nplt.show()","b3fac2df":"# Let's plot volume-date because that is something very important\nplt.figure(figsize=(10,6))\nax1=plt.subplot(1,2,1)\nax2=plt.subplot(1,2,2)\nsns.lineplot(data['Date'],data['Volume'],ax=ax1)\nsns.scatterplot(data['Date'],data['Volume'],ax=ax2)","29acf3a2":"# We shall plot scatter plots for other fields as well\nplt.figure(figsize=(20,10))\nax1 = plt.subplot(2,2,1)\nax2=plt.subplot(2,2,2)\nax3=plt.subplot(2,2,3)\nax4=plt.subplot(2,2,4)\nsns.scatterplot(y=data['Open'],x=data['Date'],ax=ax1)\nsns.scatterplot(y=data['High'],x=data['Date'],ax=ax2)\nsns.scatterplot(y=data['Low'],x=data['Date'],ax=ax3)\nsns.scatterplot(y=data['Close\/Last'],x=data['Date'],ax=ax4)\nplt.show()","6f562de8":"# There is something going on in 2020, let's see this (as if we don't know)\nplt.figure(figsize=(20,10))\nax1 = plt.subplot(2,2,1)\nax2=plt.subplot(2,2,2)\nax3=plt.subplot(2,2,3)\nax4=plt.subplot(2,2,4)\ndata_for_2020 = data[data['year']=='2020']\nsns.barplot(y=data_for_2020['Open'] ,x=data_for_2020['month'],ax=ax1)\nsns.barplot(y=data_for_2020['High'],x=data_for_2020['month'],ax=ax2)\nsns.barplot(y=data_for_2020['Low'],x=data_for_2020['month'],ax=ax3)\nsns.barplot(y=data_for_2020['Close\/Last'],x=data_for_2020['month'],ax=ax4)\nplt.show()","3eb27ab0":"# Correlation plot\nsns.heatmap(data.corr())","82848252":"# Let's see relations among open-low,open-high,close-low,close-high\nplt.figure(figsize=(20,10))\nax1 = plt.subplot(2,2,1)\nax2=plt.subplot(2,2,2)\nax3=plt.subplot(2,2,3)\nax4=plt.subplot(2,2,4)\nsns.scatterplot(y=data['Open'],x=data['Low'],ax=ax1)\nsns.scatterplot(y=data['Open'],x=data['High'],ax=ax2)\nsns.scatterplot(y=data['Close\/Last'],x=data['Low'],ax=ax3)\nsns.scatterplot(y=data['Close\/Last'],x=data['High'],ax=ax4)\nplt.show()","b1625120":"# Let's see some scatter plots between low and high, we shall see a high correlation\nsns.scatterplot(x=data['Low'],y=data['High'])","84cb926b":"# At last let's plot volume vs low, high, close\/last and open\nplt.figure(figsize=(20,10))\nax1 = plt.subplot(2,2,1)\nax2=plt.subplot(2,2,2)\nax3=plt.subplot(2,2,3)\nax4=plt.subplot(2,2,4)\nsns.scatterplot(y=data['Volume'],x=data['Low'],ax=ax1)\nsns.scatterplot(y=data['Volume'],x=data['High'],ax=ax2)\nsns.scatterplot(y=data['Volume'],x=data['Close\/Last'],ax=ax3)\nsns.scatterplot(y=data['Volume'],x=data['Open'],ax=ax4)\nplt.show()","b1c1dc28":"# Let's filter the outliers and save the new dataframe to a new file\ndata = data[data['Volume']<2.0e7]\nprint(data.shape)\ndata.to_csv('final.csv')","363b9b92":"# McDonald's Stock Price EDA and Cleaning","3b3fabe1":"### Exploration","05ec025d":"None of the above attributes are much skewed but there are certainly some outliers which should be dealt","71626043":"### Dealing with columns names, data-types and creating new relevent columns","36c76e4a":"**We have seen the following while exploring data**\n* There are no null values present in data which is a bonus for us\n* 'Volume' is skewed so we need to deal with it.\n* There are some outliers present.\n* High, Low, Last\/Closed and Open incresed in years 2015-2019 but heavely dropped in 2020\n* Correlations are high among certain fields above mentioned.\n\nOf Course, this is not the end of analysis. Analysis has no end and deeper you dig better you know your data. This is just a basic **must to know** analysis.\n**You can download the new file if you don't want to perform data preparation, however, data normalization is not done so it should be handled explicitly.**","96087bd1":"### Conclusion","7ac2a539":"This shows there is a little negative correlation. Also, there are some outliers present in data which should be removed.","0115b9be":"This is something obvious, we have data for 2015-2020 however, it is again clearly visible that there are outiers","3fa94f57":"Clearly, skew is removed\n* **There are many ways to deal with skewness and taking logarithm is one way.**\n* **log1p() is a numpy method which performs the log for x as log(1+x). This helps in cases where x is close to zero.**","3406aa79":"I have created three new columns 'day', 'month','year' to seperate the year, month and day. This helps in aggregation and data munging.","171e1387":"These scatterplots clearly prove very high correlation among respective attributes.","c9247af5":"This is obvious, there are some lows and highs but in 2020, price have fallen constantly.\nLet's plot a correlation plot"}}