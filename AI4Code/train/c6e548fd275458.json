{"cell_type":{"a51dd7dc":"code","c9e55a4e":"code","6fbcd562":"code","5e299f57":"code","2a828662":"code","66f47eb0":"code","1f3a6548":"code","dbd05854":"code","56aedd75":"code","522de4fa":"code","da4131e3":"code","76c7e6d2":"code","9840cdc9":"code","5d9a1c35":"code","b08dd4d7":"code","980c29d8":"code","f5b453ce":"markdown","67a7f2b3":"markdown","d623523e":"markdown","8133cfb2":"markdown","52705499":"markdown","c40b0875":"markdown","29bcfee1":"markdown","451bf0bc":"markdown","439ec5f8":"markdown"},"source":{"a51dd7dc":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\n\n%matplotlib inline","c9e55a4e":"file_name='..\/input\/housesdataus\/us_house_data.csv'\ndf=pd.read_csv(file_name)","6fbcd562":"df.head()","5e299f57":"df.dtypes","2a828662":"df.describe()","66f47eb0":"df.drop([\"id\",\"Unnamed: 0\"], axis=1, inplace=True)\ndf.describe()","1f3a6548":"print(\"number of NaN values for the column bedrooms :\", df['bedrooms'].isnull().sum())\nprint(\"number of NaN values for the column bathrooms :\", df['bathrooms'].isnull().sum())\n","dbd05854":"mean=df['bedrooms'].mean()\ndf['bedrooms'].replace(np.nan,mean, inplace=True)","56aedd75":"mean=df['bathrooms'].mean()\ndf['bathrooms'].replace(np.nan,mean, inplace=True)","522de4fa":"print(\"number of NaN values for the column bedrooms :\", df['bedrooms'].isnull().sum())\nprint(\"number of NaN values for the column bathrooms :\", df['bathrooms'].isnull().sum())","da4131e3":"df['floors'].value_counts().to_frame()","76c7e6d2":"sns.boxplot(x=\"waterfront\",y=\"price\",data=df)","9840cdc9":"ax = sns.regplot(x=\"sqft_above\", y=\"price\", data=df)\nplt.ylim(0,)","5d9a1c35":"df.corr()['price'].sort_values()","b08dd4d7":"ax=df.iloc[:,1:9]\n# plt.show()\n# sns.pairplot(ax)","980c29d8":"corr_matrix = df.corr()\nplt.figure(figsize=(12,4),dpi=130)\nsns.heatmap(corr_matrix,\n           annot=True, annot_kws={'size': 5},\n           linewidths = 0.2,\n           fmt=\".2f\", cmap = \"Blues\")\nplt.xticks(rotation = 45);","f5b453ce":" data types of each colum","67a7f2b3":"obtain a statistical summary of the dataframe","d623523e":"Use the function regplot in the seaborn library to determine if the feature sqft_above is negatively or positively correlated with price.","8133cfb2":"use the Pandas method <code>corr()<\/code>  to find the feature other than price that is most correlated with price.","52705499":"Use the function boxplot in the seaborn library to determine whether houses with a waterfront view or without a waterfront view have more price outliers.","c40b0875":"Use the method value_counts to count the number of houses with unique floor values, use the method .to_frame() to convert it to a dataframe.","29bcfee1":"### Importing Data Sets","451bf0bc":"### It includes homes sold between May 2014 and May 2015.\n\n<b>id<\/b> : A notation for a house\n\n<b> date<\/b>: Date house was sold\n\n\n<b>price<\/b>: Price is prediction target\n\n\n<b>bedrooms<\/b>: Number of bedrooms\n\n\n<b>bathrooms<\/b>: Number of bathrooms\n\n<b>sqft_living<\/b>: Square footage of the home\n\n<b>sqft_lot<\/b>: Square footage of the lot\n\n\n<b>floors<\/b> :Total floors (levels) in house\n\n\n<b>waterfront<\/b> :House which has a view to a waterfront\n\n\n<b>view<\/b>: Has been viewed\n\n\n<b>condition<\/b> :How good the condition is overall\n\n<b>grade<\/b>: overall grade given to the housing unit, based on King County grading system\n\n\n<b>sqft_above<\/b> : Square footage of house apart from basement\n\n\n<b>sqft_basement<\/b>: Square footage of the basement\n\n<b>yr_built<\/b> : Built Year\n\n\n<b>yr_renovated<\/b> : Year when house was renovated\n\n<b>zipcode<\/b>: Zip code\n\n\n<b>lat<\/b>: Latitude coordinate\n\n<b>long<\/b>: Longitude coordinate\n\n<b>sqft_living15<\/b> : Living room area in 2015(implies-- some renovations) This might or might not have affected the lotsize area\n\n\n<b>sqft_lot15<\/b> : LotSize area in 2015(implies-- some renovations)","439ec5f8":"replace the missing values of the column 'bedrooms' and 'bathrooms' with the mean of the column 'bedrooms'  using the method replace()"}}