{"cell_type":{"f0ab7382":"code","029eafd1":"code","98ef02b6":"code","80bef100":"code","98625937":"code","0d71301d":"code","5518dfeb":"code","05e526d7":"code","ddbd5314":"code","6a5d4936":"code","b8b9ca72":"code","5c6bfc47":"code","ec08c456":"code","48c1d773":"code","90281ca5":"code","636efa27":"code","0d1cbf93":"code","616c7b3f":"code","425b48e8":"code","32e36cc9":"code","d86c762b":"code","490ce1c7":"code","eb1ed91f":"code","117b4348":"markdown","ab878286":"markdown","df2601ea":"markdown","3e499ffb":"markdown","b6d68b4c":"markdown","a08e67d5":"markdown","73b8c82b":"markdown","a71c8244":"markdown","b94baab0":"markdown","51d4a2d6":"markdown","5b05c223":"markdown","a8b7cf5f":"markdown","7f812742":"markdown"},"source":{"f0ab7382":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport pandas as pd\n\nfrom pandas.plotting import scatter_matrix\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","029eafd1":"path = '\/kaggle\/input\/premier-league-all-time-top-50-goal-scorers\/Premier League All Time Top 50 Goal Scorers..csv'\ndf = pd.read_csv(path, encoding='windows-1252')","98ef02b6":"df.info()","80bef100":"df.describe()","98625937":"df.describe(include='O')","0d71301d":"df.head()","5518dfeb":"df.tail()","05e526d7":"df.columns","ddbd5314":"df.rename(columns={'Apperances ':'Apperances'}, inplace=True)","6a5d4936":"df.groupby('Players')['Goals'].sum().sort_values().plot(kind='barh', figsize=(20, 15))\nplt.title('Players Goals', fontdict={'fontsize':30, 'weight':'bold'}, pad=20)\nplt.show()","b8b9ca72":"df.groupby('Players')['Apperances'].sum().sort_values().plot(kind='barh', figsize=(20, 15))\nplt.title('Players Apperances', fontdict={'fontsize':30, 'weight':'bold'}, pad=20)\nplt.show()","5c6bfc47":"df.groupby('Players')['Goals Per Game\/Ratio'].sum().sort_values().plot(kind='barh', figsize=(20, 15))\nplt.title('Players Goals Per Game\/Ratio', fontdict={'fontsize':30, 'weight':'bold'}, pad=20)\nplt.show()","ec08c456":"df.corr()['Goals'].sort_values(ascending=False)","48c1d773":"sns.heatmap(df[['Goals', 'Penalty Goals', 'Goals Per Game\/Ratio', 'Apperances', 'Assists', 'Minutes Per Goal']].corr(), linewidths=1, cmap='winter')\nplt.title('Players correlation', fontdict={'fontsize':20, 'weight':'bold'}, pad=20)\nplt.show()","90281ca5":"position_count_df = df.groupby('Playing Position')['Players'].count()\nposition_count_df","636efa27":"def make_autopct(values):\n    def my_autopct(pct):\n        total = sum(values)\n        val = int(round(pct*total\/100.0))\n        return '{p:.2f}%\\n({v:d})'.format(p=pct,v=val)\n    return my_autopct\n\nposition_count_df.plot(kind='pie', autopct=make_autopct(position_count_df), explode=(0, 0.1), fontsize=30, figsize=(20,10), shadow=True)\nplt.title('Number of Position', fontdict={'fontsize':30, 'weight':'bold'})\nplt.show()","0d1cbf93":"df[['Playing Position', 'Goals']].groupby('Playing Position').sum().plot(kind='bar')\nplt.title('Position Goals', fontdict={'fontsize':20, 'weight':'bold'}, pad=20)\nplt.show()","616c7b3f":"df[['Playing Position', 'Apperances']].groupby('Playing Position').sum().plot(kind='bar')\nplt.title('Position Apperances', fontdict={'fontsize':20, 'weight':'bold'}, pad=20)\nplt.show()","425b48e8":"position_df = df[['Playing Position', 'Apperances', 'Goals']].groupby('Playing Position').sum()\nposition_df['gpg'] = position_df['Goals'] \/ position_df['Apperances']\nposition_df['gpg'].plot(kind='bar', legend=True)\nplt.title('Position Goals per game', fontdict={'fontsize':20, 'weight':'bold'}, pad=20)\nplt.show()","32e36cc9":"nation_player_df = df.groupby('Nationality')['Players'].count()\nlen(nation_player_df.index)","d86c762b":"nation_player_df.sort_values(ascending=False).plot(kind='pie', autopct=make_autopct(nation_player_df), fontsize=10, figsize=(20,30), shadow=True)\nplt.show()","490ce1c7":"nation_player_df.sort_values(ascending=False).plot(kind='bar', y='Players')\nplt.show()","eb1ed91f":"nation_df = df.groupby('Nationality').agg({'Apperances':'sum', 'Goals':'sum'}).reset_index()\nnation_df.sort_values('Goals', ascending=False).plot(kind='bar', x='Nationality', y='Goals', figsize=(10, 3))\nnation_df.sort_values('Apperances', ascending=False).plot(kind='bar', x='Nationality', y='Apperances', figsize=(10, 3))\nplt.show()","117b4348":"## Nation Players","ab878286":"## Players dataframe correlation","df2601ea":"## Each Players Goals","3e499ffb":"## Each Players Apperances","b6d68b4c":"# Position","a08e67d5":"## Each Players GPG","73b8c82b":"# Nation","a71c8244":"## Position GPG","b94baab0":"## Position Apperances","51d4a2d6":"# Each Players","5b05c223":"## Nation Goals & Apperances","a8b7cf5f":"## Position Goals","7f812742":"## Postion players"}}