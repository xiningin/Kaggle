{"cell_type":{"586129f8":"code","4971d973":"code","b145e3ee":"code","c0da342a":"code","7f21f1e7":"code","cdfafc5d":"code","e771449e":"code","7b7f04f5":"code","a97f7f87":"code","329727ec":"code","59a8f00a":"code","46d726bd":"code","969e3fe9":"code","352e8ba7":"code","88e6efce":"code","b7c09382":"code","5af0e055":"code","e924c70c":"code","32bd8968":"code","a71acab9":"code","5bf19e47":"code","59c027d2":"code","f40c8f4a":"code","723a15f9":"code","94345372":"code","fdf0c696":"code","6f4abdde":"code","919b6f2d":"code","db2ee9d8":"code","52010c00":"code","e02d5158":"code","5f831a19":"code","d585a9de":"code","3033418c":"code","781d12f7":"code","c6999ac6":"code","3b8f5463":"code","52239391":"code","45907631":"code","6e27c400":"code","d2bd233d":"code","75b28f50":"code","7037e214":"code","ec690192":"code","2c0983fe":"code","69ffdc4a":"code","a621d5e3":"code","20092b3d":"code","520d3dc0":"code","e2e77683":"code","d77c31a1":"code","2b61f344":"markdown","7977e8ed":"markdown","0251a3f1":"markdown","6992958e":"markdown","441e7b6a":"markdown","cb746083":"markdown","23fd68b9":"markdown","8d99dd7d":"markdown","562a5a8f":"markdown","54adc4d3":"markdown","9920fae1":"markdown","30d2b081":"markdown","0541ac1b":"markdown","84a3efb6":"markdown","8559c4d6":"markdown","03c5d2a0":"markdown","98e3f790":"markdown","34147477":"markdown","8a85303d":"markdown","242f5f28":"markdown","0d0f4480":"markdown","c9a7974a":"markdown","673d1692":"markdown","d52abb00":"markdown","e87f48c6":"markdown","ea62f4ea":"markdown","74666603":"markdown","5a17f1f9":"markdown","6058d4ce":"markdown","f2704e62":"markdown","23b300fd":"markdown","ebd9231e":"markdown","f274f333":"markdown","57f0d8ae":"markdown","7701e0b1":"markdown","b6417b2e":"markdown","0bcd05ae":"markdown","38256e73":"markdown","25d9737d":"markdown","b69dedae":"markdown","6dfa851e":"markdown","fed31c8c":"markdown"},"source":{"586129f8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4971d973":"#Reading the data\n\ndf = pd.read_csv('\/kaggle\/input\/epl-players-deep-stats-20192020\/epl_players_stats.csv')\n","b145e3ee":"#Getting first five rows of data \n\ndf.head().T","c0da342a":"#Getting data information\n\ndf.info()","7f21f1e7":"#Getting the details of null values\ndf.isnull().sum()","cdfafc5d":"#Getting data description for detailed insights\n\ndf.describe()","e771449e":"#Getting the most rated player\n\ndf[df['rating_m']==df['rating_m'].max()]['name']","7b7f04f5":"#Top 10 most rated player\n\nrating_sort = df.sort_values('rating_m',ascending=False)\n\nrating_sort.head(10)['name']","a97f7f87":"import matplotlib.pyplot as plt\nimport seaborn as sns","329727ec":" #Getting the most aged player rating\n\ndf[df['age']==df['age'].max()][['rating_m','name','position','age','team','games']]","59a8f00a":"df1 =  df.sort_values('assists',ascending=False).head(10)\nplt.barh(df1['name'],df1['assists'])\n\nplt.show()","46d726bd":"df1=df.sort_values('goals',ascending=False).head(10)\nplt.barh(df1['name'],df1['goals'])\n\nplt.show()","969e3fe9":"df.groupby(['team'])['goals'].sum().sort_values(ascending=False).head(10)\n","352e8ba7":"df1=df.sort_values('red_cards',ascending=False).head(10)\nplt.barh(df1['name'],df1['red_cards'])\n\nplt.show()","88e6efce":"df1=df.sort_values('yel_cards',ascending=False).head(10)\nplt.barh(df1['name'],df1['yel_cards'])\n\nplt.show()","b7c09382":"df.groupby(['team'])['yel_cards'].sum().sort_values(ascending=False).head(10)","5af0e055":"df.groupby(['team'])['red_cards'].sum().sort_values(ascending=False).head(10)","e924c70c":"df.groupby(['team'])['shots_m'].sum().sort_values(ascending=False).head(10)","32bd8968":"df.groupby(['team'])['aerials_won_m'].sum().sort_values(ascending=False).head(10)","a71acab9":"df.groupby(['team'])['motm'].sum().sort_values(ascending=False).head(10)","5bf19e47":"df.groupby(['team'])['passes_m'].sum().sort_values(ascending=False).head(10)","59c027d2":"df1=df[df['minutes']>1200].sort_values('successful_passes_pt',ascending=False).head(10)\nplt.barh(df1['name'],df1['successful_passes_pt'])\n\nplt.show()","f40c8f4a":"df.groupby(['team'])['key_passes_m'].sum().sort_values(ascending=False).head(10)","723a15f9":"df1=df[df['minutes']>1200].sort_values('dribbles_won_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['dribbles_won_m'])\n\nplt.show()","94345372":"df1=df[df['minutes']<500].sort_values('dribbles_won_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['dribbles_won_m'])\n\nplt.show()","fdf0c696":"df.groupby(['team'])['dribbles_won_m'].sum().sort_values(ascending=False).head(10)","6f4abdde":"df.groupby(['team'])['fouls_given_m'].sum().sort_values(ascending=False).head(10)","919b6f2d":"df.groupby(['team'])['accurate_crosses_m'].sum().sort_values(ascending=False).head(10)","db2ee9d8":"df1=df[df['minutes']>1200].sort_values('accurate_crosses_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['accurate_crosses_m'])\n\nplt.show()","52010c00":"df1=df[df['minutes']<500].sort_values('accurate_crosses_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['accurate_crosses_m'])\n\nplt.show()","e02d5158":"df.columns\n","5f831a19":"df.groupby(['team'])['accurate_long_passes_m'].sum().sort_values(ascending=False).head(10)","d585a9de":"df1=df[df['minutes']>1200].sort_values('accurate_long_passes_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['accurate_long_passes_m'])\n\nplt.show()","3033418c":"df1=df[df['minutes']<500].sort_values('accurate_long_passes_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['accurate_long_passes_m'])\n\nplt.show()","781d12f7":"df.groupby(['team'])['accurate_through_passes_m'].sum().sort_values(ascending=False).head(10)","c6999ac6":"df1=df[df['minutes']>1200].sort_values('accurate_through_passes_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['accurate_through_passes_m'])\n\nplt.show()","3b8f5463":"df1=df[df['minutes']<500].sort_values('accurate_through_passes_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['accurate_through_passes_m'])\n\nplt.show()","52239391":"df.groupby(['team'])['tackles_m'].sum().sort_values(ascending=False).head(10)","45907631":"df1=df[df['minutes']>1200].sort_values('tackles_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['tackles_m'])\n\nplt.show()","6e27c400":"df1=df[df['minutes']<500].sort_values('tackles_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['tackles_m'])\n\nplt.show()","d2bd233d":"df.groupby(['team'])['interceptions_m'].sum().sort_values(ascending=False).head(10)","75b28f50":"df1=df[df['minutes']>1200].sort_values('interceptions_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['interceptions_m'])\n\nplt.show()","7037e214":"df1=df[df['minutes']<500].sort_values('interceptions_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['interceptions_m'])\n\nplt.show()","ec690192":"df1=df.sort_values('clearances_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['clearances_m'])\n\nplt.show()","2c0983fe":"df.groupby(['team'])['clearances_m'].sum().sort_values(ascending=False).head(10)","69ffdc4a":"df1=df.sort_values('dribbled_past_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['dribbled_past_m'])\n\nplt.show()","a621d5e3":"df.groupby(['team'])['dribbled_past_m'].sum().sort_values(ascending=False).head(10)","20092b3d":"Top Players who have scored own goals.","520d3dc0":"df1=df.sort_values('dribbled_past_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['dribbled_past_m'])\n\nplt.show()","e2e77683":"df1=df[df['minutes']>1200].sort_values('gk_saves_m',ascending=False).head(10)\nplt.barh(df1['name'],df1['gk_saves_m'])\n\nplt.show()","d77c31a1":"df.groupby(['team'])['gk_saves_m'].sum().sort_values(ascending=False).head(10)","2b61f344":"Team with most accurate long passes.","7977e8ed":"Players with most yellow cards","0251a3f1":"Teams with best interceptions.","6992958e":"- Intrestingly the dataframe is sorted on the values of rating_m initially","441e7b6a":"Here only the nationality data column has 8 null rows","cb746083":"Top 10 players who got red cards","23fd68b9":"Top teams having players which are dribbled past per match.","8d99dd7d":"Team with most accurate through passes.","562a5a8f":" Through above table we get to know mean, min and max of each numerical column, we can get usefull insights from it as follows :\n\n- The average age of EPL player is 26 ,while the min is 17 and max is 39.\n- Instrestingly there are players whos height and weights are 0 assumed to be unknown .\n- On average a player get to to play 20 games, and each player has atleast played one game.\n- On average a player playes 1440 mins whole season .\n- Average rating for players in EPL is 6.6 which from claculated to max i.e 7.97 gives that most of the players perfforms very well in the matches.\n- The goals scored by players has mean of 1.91 close to 2 but has standard deviation of 3.5 approx which is large and the maximum goals scored by player is 23.\n\nFurther on we will get the detailed insights of each features and good presentation through graphs to understand the insights effectively.\n","54adc4d3":"Teams with most passes.","9920fae1":"- 5 columns with object datatype.\n- 14 columns with integer datatype.\n- 22 columns with float datatype.\n","30d2b081":"Players with most accurate long passes per match played atmost 500 mins.","0541ac1b":"Players with most interceptions with atmost 500 mins played.","84a3efb6":"Players with most accurate crosses won playing atleast 1200 mins in the season.","8559c4d6":"Players with most tackles per match with atleast 1200 mins played.","03c5d2a0":"Top teams having players with most clearances.","98e3f790":"Players with most interceptions with atleast 1200 mins played.","34147477":"Players with most accurate through passes played atleast 1200 mins in whole season.","8a85303d":"Team with most key passes.","242f5f28":"Players with most accurate through passes played atmost 500 mins in whole season.","0d0f4480":"Team with most man of the match awarded.","c9a7974a":"Players with most accurate long passes per match played atleast 1200 mins.","673d1692":"Getting top 10 players based on goals scored ","d52abb00":"Top 10 players with assists.","e87f48c6":"Players with most dribbles won playing atleast 1200 mins in the season.","ea62f4ea":"Top players with most dribbled past per match.","74666603":"Teams penalised with most red cards .","5a17f1f9":"Team with most accurate crosses.","6058d4ce":"Teams with most dribbles won per match","f2704e62":"Teams with most goals saved per match.","23b300fd":"Top teams aerials won per match","ebd9231e":"Players with most clearances per match","f274f333":"Top goalkeepers who played atleast 1200 min and saved goals per match.","57f0d8ae":"Players with most successful passes percentage with atleast 1200 min played.","7701e0b1":"Players with most accurate crosses won playing atmost 500 mins in the season.","b6417b2e":"Teams penalised with most yellow cards .","0bcd05ae":"Teams with most fouls given.","38256e73":"Teams with best tackles per match","25d9737d":"Top teams shots per match.","b69dedae":"Players with most dribbles won playing atmost 500 mins in the season.","6dfa851e":"Players with most tackles per match with atmost 500 mins played.","fed31c8c":"Teams with most goals scored"}}