{"cell_type":{"33e37b37":"code","ea214011":"code","422602d4":"code","eb8f9a8b":"code","e272484b":"code","b3e934f4":"code","6054b8e5":"code","004f3c5c":"code","73a03978":"code","d6398f20":"code","d0ee0397":"code","032b7c0e":"code","f58e67c7":"code","eac552ac":"code","f4d54241":"code","27720f85":"code","5431a2cb":"code","a92167ab":"code","1bd237b2":"code","3649c68d":"code","958110ce":"code","f9c0f0d6":"code","62e9621d":"code","a49501f5":"code","8ab50c7f":"code","39eb4ab5":"code","933a8ea0":"code","6d8b30be":"code","36bdc70b":"markdown","38b4c1c5":"markdown","922e4062":"markdown","9b17a29c":"markdown","29c886f6":"markdown","415a08aa":"markdown","62428673":"markdown","da592619":"markdown","12c35308":"markdown","fa27a8f0":"markdown","2e819de9":"markdown","5627b5ea":"markdown","633cadb0":"markdown","21ee9242":"markdown","9a895d6c":"markdown","3b85af83":"markdown","22b153d3":"markdown","c802bf77":"markdown","fd86e71f":"markdown","2e79169a":"markdown","88b747c6":"markdown","de80aed1":"markdown"},"source":{"33e37b37":"import numpy as np # \uc218\ud559 \uc5f0\uc0b0 \uc218\ud589\uc744 \uc704\ud55c \ubaa8\ub4c8\nimport pandas as pd # \ub370\uc774\ud130 \ucc98\ub9ac\ub97c \uc704\ud55c \ubaa8\ub4c8\nimport seaborn as sns # \ub370\uc774\ud130 \uc2dc\uac01\ud654 \ubaa8\ub4c8\nimport matplotlib.pyplot as plt # \ub370\uc774\ud130 \uc2dc\uac01\ud654 \ubaa8\ub4c8 \n\n# \uc5b4\ub5a4 \ud30c\uc77c\uc774 \uc788\ub294\uc9c0 \ud45c\uc2dc\ud558\uae30\nfrom subprocess import check_output\n\nprint(check_output([\"ls\", \"..\/input\/personal-dataset\"]).decode(\"utf8\"))","ea214011":"# CSV \ud30c\uc77c \uc77d\uc5b4\uc624\uae30\ndata_frame = pd.read_csv(\"..\/input\/personal-dataset\/personal_dataset.csv\")","422602d4":"def show(df):\n    print(df.info())\n    print(df.head(10))\n\nshow(data_frame)","eb8f9a8b":"def drop(df, col):\n    # \ubd88\ud544\uc694\ud55c \uc5f4(ID) \uc81c\uac70\n    df.drop(col,axis=1,inplace=True) # ID\ub77c\ub294 \uceec\ub7fc(\uc5f4)\uc744 \uc0ad\uc81c\ud558\ub77c\ub294 \uc758\ubbf8\n\n    # \ubd88\ud544\uc694\ud55c Id \uceec\ub7fc \uc0ad\uc81c\n    # axis=1 : \uceec\ub7fc\uc744 \uc758\ubbf8\n    # inplace=True : \uc0ad\uc81c\ud55c \ud6c4 \ub370\uc774\ud130 \ud504\ub808\uc784\uc5d0 \ubc18\uc601\ud558\ub77c\ub294 \uc758\ubbf8\n\ndrop(data_frame,'Id')","e272484b":"data_frame.head(10)","b3e934f4":"def myplot(df, a, b, c):\n    fig = \\\n    df[df[c]==0].plot(kind='scatter',x=a,y=b,color='orange', label='Female')\n    df[df[c]==1].plot(kind='scatter',x=a,y=b,color='blue', label='Male', ax=fig)\n    fig.set_xlabel(a)\n    fig.set_ylabel(b)\n    fig.set_title(a + \" vs. \" + b)\n    fig=plt.gcf()\n    fig.set_size_inches(10,6)\n    plt.show()\n\n\nmyplot(data_frame, \"FeetSize\", \"Height\", \"Sex\")","6054b8e5":"myplot(data_frame, \"Height\", \"FeetSize\", \"Sex\")","004f3c5c":"def myhist(a):\n    a.hist(edgecolor='black', linewidth=1.2)\n    fig = plt.gcf()\n    fig.set_size_inches(12,10)\n    plt.show()\n\nmyhist(data_frame)","73a03978":"def myviolinplot(df, a, b):\n    plt.figure(figsize=(5,4))\n    plt.subplot(1,1,1)\n    sns.violinplot(x=a,y=b,data=df)\n\nmyviolinplot(data_frame, 'Sex', 'Height')\nmyviolinplot(data_frame, 'Sex', 'Weight')\nmyviolinplot(data_frame, 'Sex', 'FeetSize')\nmyviolinplot(data_frame, 'Sex', 'Year')","d6398f20":"# \ub2e4\uc591\ud55c \ubd84\ub958 \uc54c\uace0\ub9ac\uc998 \ud328\ud0a4\uc9c0\ub97c \uc784\ud3ec\ud2b8\ud568.\nfrom sklearn.linear_model import LogisticRegression  # Logistic Regression \uc54c\uace0\ub9ac\uc998\n#from sklearn.cross_validation import train_test_split # \ub370\uc774\ud0c0 \ucabc\uac1c\uc8fc\ub294 \ubaa8\ub4c8 \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier  # for K nearest neighbours\nfrom sklearn import svm  #for Support Vector Machine (SVM) Algorithm\nfrom sklearn import metrics #for checking the model accuracy\nfrom sklearn.tree import DecisionTreeClassifier #for using Decision Tree Algoithm","d0ee0397":"print(data_frame.shape) # \ub370\uc774\ud130 \ubaa8\uc591(shape)\uc744 \ud45c\uc2dc\nprint(data_frame.head(5))","032b7c0e":"def display_heatmap(df):\n    plt.figure(figsize=(10,6)) \n    sns.heatmap(df.corr(),annot=True,cmap='cubehelix_r') \n    plt.show()\n\ndisplay_heatmap(data_frame)\n","f58e67c7":"def jjokenda(df):\n        a, b = train_test_split(df, test_size = 0.3)\n        return a, b \n        \ntrain, test = jjokenda(data_frame)\n\n# train=70% and test=30%\nprint(train.shape)\nprint(test.shape)","eac552ac":"print(train)","f4d54241":"train_X = train[['Height','FeetSize']] # \ud0a4\uc640 \ubc1c\ud06c\uae30\ub9cc \uc120\ud0dd\ntrain_y = train.Sex # \uc815\ub2f5 \uc120\ud0dd","27720f85":"print(train_X)\nprint(train_y)","5431a2cb":"test_X = test[['Height','FeetSize']] # taking test data features\ntest_y = test.Sex   #output value of test data","a92167ab":"print(test_X)\nprint(test_y)","1bd237b2":"train_X.head(2)","3649c68d":"test_X.head(2)","958110ce":"train_y.head()  ## \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \uc815\ub2f5 \ud45c\uc2dc","f9c0f0d6":"import warnings  \nwarnings.filterwarnings('ignore')","62e9621d":"gildong = svm.SVC() # \uc560\uae30 \ngildong.fit(train_X,train_y) # \uac00\ub974\uce5c \ud6c4\nprediction = gildong.predict(test_X) # \ud14c\uc2a4\ud2b8\n\nprint('\uc778\uc2dd\ub960:',metrics.accuracy_score(prediction,test_y) * 100) \nprint(prediction)\nprint(test_y)","a49501f5":"cheolsu = LogisticRegression()\ncheolsu.fit(train_X,train_y)\nprediction = cheolsu.predict(test_X)\nprint('\uc778\uc2dd\ub960:', metrics.accuracy_score(prediction,test_y) * 100)","8ab50c7f":"youngja = DecisionTreeClassifier()\nyoungja.fit(train_X,train_y)\nprediction = youngja.predict(test_X)\nprint('\uc778\uc2dd\ub960:',metrics.accuracy_score(prediction,test_y) * 100)","39eb4ab5":"minsu = KNeighborsClassifier(n_neighbors=3) #this examines 3 neighbours for putting the new data into a class\nminsu.fit(train_X,train_y)\nprediction = minsu.predict(test_X)\nprint('\uc778\uc2dd\ub960:',metrics.accuracy_score(prediction,test_y) * 100)","933a8ea0":"train_X = train[['Height','Weight','FeetSize']] # \ud0a4\uc640 \ubc1c\ud06c\uae30\ubfd0\ub9cc \uc544\ub2c8\ub77c \ubab8\ubb34\uac8c\ub3c4 \ucd94\uac00\ntrain_y = train.Sex # \uc815\ub2f5 \uc120\ud0dd\n\ntest_X = test[['Height','Weight','FeetSize']] # taking test data features\ntest_y = test.Sex   #output value of test data","6d8b30be":"def run_4_classifiers(a, b, c, d):\n    tmp = svm.SVC() # \uc560\uae30 \n    tmp.fit(a,b) # \uac00\ub974\uce5c \ud6c4\n    prediction = tmp.predict(c) # \ud14c\uc2a4\ud2b8\n    print('\uc778\uc2dd\ub960:',metrics.accuracy_score(prediction,d) * 100) \n\n    tmp = LogisticRegression()\n    tmp.fit(a,b)\n    prediction = tmp.predict(c)\n    print('\uc778\uc2dd\ub960:', metrics.accuracy_score(prediction,d) * 100)\n\n    tmp = DecisionTreeClassifier()\n    tmp.fit(a,b)\n    prediction = tmp.predict(c)\n    print('\uc778\uc2dd\ub960:',metrics.accuracy_score(prediction,d) * 100)\n\n    tmp = KNeighborsClassifier(n_neighbors=3) #this examines 3 neighbours for putting the new data into a class\n    tmp.fit(a,b)\n    prediction = tmp.predict(c)\n    print('\uc778\uc2dd\ub960:',metrics.accuracy_score(prediction,d) * 100)\n    \nrun_4_classifiers(train_X, train_y, test_X, test_y)\n","36bdc70b":"> \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130(30%)\uc5d0\uc11c\ub3c4 \ud0a4\uc640 \ubc1c\ud06c\uae30\ub9cc \ub530\ub85c \ubf51\uc544 \ubcf4\uad00\ud568. \uc774\ub294 \ud14c\uc2a4\ud2b8\uc2dc \uc785\ub825\uc73c\ub85c \uc0ac\uc6a9\ud560 \uac83\uc784. <br\/>\n> \uc815\ub2f5\ub3c4 \ubf51\uc544 \ubcf4\uad00\ud568. ","38b4c1c5":"### 4.5 \uadfc\uc811 \uc774\uc6c3(K-Nearest Neighbours) \uc54c\uace0\ub9ac\uc998 \uc774\uc6a9\ud558\uc5ec \uc54c\uc544\ub9de\ucd94\uae30 ","922e4062":"## 1. \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30","9b17a29c":"### 4.4 \uacb0\uc815 \ud2b8\ub9ac(Decision Tree) \uc54c\uace0\ub9ac\uc998 \uc774\uc6a9\ud558\uc5ec \uc54c\uc544\ub9de\ucd94\uae30","29c886f6":"[](http:\/\/)### 4.3 \ub17c\ub9ac \ud68c\uadc0(Logistic Regression) \uc54c\uace0\ub9ac\uc998 \uc774\uc6a9\ud558\uc5ec \uc54c\uc544\ub9de\ucd94\uae30","415a08aa":"> \ud559\uc2b5 \ub370\uc774\ud130(70%)\uc5d0\uc11c \ud0a4\uc640 \ubc1c\ud06c\uae30\ub9cc \ub530\ub85c \ubf51\uc544 \ubcf4\uad00\ud568. \uc774\ub294 \ud559\uc2b5\uc2dc \uc785\ub825\uc73c\ub85c \uc0ac\uc6a9\ud560 \uac83\uc784. <br\/>\n> \uc815\ub2f5\ub3c4 \ubf51\uc544 \ubcf4\uad00\ud568. ","62428673":"> \uba38\uc2e0\ub7ec\ub2dd \uad6c\ud604 \uc808\ucc28\ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4. \n\n>  1. \ub370\uc774\ud130 \ucabc\uac1c\uae30 (\ud559\uc2b5\uc6a9, \ud14c\uc2a4\ud2b8\uc6a9) <br\/>\n>  2. \uc54c\uace0\ub9ac\uc998 \uc120\ud0dd (\ud559\uc2b5\uc2dc\ud0ac \uc544\uae30 \uac1d\uccb4 \ub9cc\ub4e4\uae30) <br\/>\n>  3. \uc544\uae30\uc758 **.fit()** \ud568\uc218 \ud638\ucd9c\ud558\uc5ec \ud559\uc2b5 \uc2dc\ud0a4\ud0a4 <br\/>\n>  4. \uc544\uae30\uc758 **.predict()** \ud568\uc218\ub97c \ud638\ucd9c\ud558\uc5ec \ud14c\uc2a4\ud2b8\ud558\uae30 <br\/>\n>  5. \uc544\uae30\uac00 \uc608\uce21\ud55c \uac12\uacfc \uc2e4\uc81c \uc815\ub2f5 \ube44\uad50\ud558\uc5ec \uc778\uc2dd\ub960 \uacc4\uc0b0\ud558\uae30","da592619":"## 4. \ub0a8\uc790\uc778\uc9c0 \uc5ec\uc790\uc778\uc9c0 \uc54c\uc544\ub9de\ucd94\uae30 (\ubd84\ub958)","12c35308":"> **\ud2b9\uc9d5(features), \uc18d\uc131(attributes)**--> \uba38\uc2e0\ub7ec\ub2dd \uc54c\uace0\ub9ac\uc998 \uc785\ub825\uc73c\ub85c \uc8fc\uc5b4\uc9c0\ub294 \uac12\ub4e4 <br\/>\n> **\uc815\ub2f5, \ubaa9\ud45c\uac12(target value)**, \ub9de\ucdb0\uc57c \ud558\ub294 \uc815\ub2f5. \uc774 \uacbd\uc6b0\ub294 \uaf43\uc758 \uc720\ud615","fa27a8f0":"**> \ub0a8\uc790 \uc5ec\uc790\ub97c \uad6c\ubcc4\ud558\ub294\ub370 \uc5b4\ub5a4 \uc815\ubcf4\uac00 \uc911\uc694\ud560\uae4c? <br\/>\n> \ub0a8\uc790\uc640 \uc5ec\uc790\uc758 \ubc1c \ud06c\uae30\ub294 \ub2e4\ub97c\uae4c? <br\/>\n> \ub0a8\uc790\uc640 \uc5ec\uc790\uc758 \ud0a4\ub294 \uc5b4\ub5a8\uae4c? <br\/>\n> \ub0a8\uc790\uc640 \uc5ec\uc790\uc758 \ubab8\ubb34\uac8c\ub294? <br\/>\n> \ub0a8\uc790\uc640 \uc5ec\uc790\uc758 \ud559\ub144\uc740? <br\/>\n> \uc0c1\uad00 \uad00\uacc4 <br\/>\n\n> \ud559\uc2b5\uc744 \uc2dc\ud0a4\ub824\uba74 \uc815\ubcf4\uc758 \uc0c1\uad00 \uad00\uacc4 \uc815\ubcf4\uac00 \uc911\uc694\ud568. <br\/>\n> \uc0c1\uad00 \uad00\uacc4 \uac12\uc774 \ud06c\uba74 \ud559\uc2b5\uc744 \uc798\ud560 \uac83\uc774\uace0 <br\/>\n> \uc0c1\uad00 \uad00\uacc4 \uac12\uc774 \uc791\uc73c\uba74 \ud559\uc2b5\uc744 \uc798 \ubabb\ud560 \uac83\uc774\ub2e4. <br\/>\n> \uc0c1\uad00 \uad00\uacc4 \uc815\ubcf4\ub97c \uc774\uc6a9\ud558\uc5ec \uc5b4\ub5a4 \ub0b4\uc6a9\uc73c\ub85c \ud559\uc2b5\uc744 \uc2dc\ud0a4\ub294\uc9c0\uac00 \uc911\uc694\ud568.","2e819de9":"## 2. \ub370\uc774\ud130 \uc804\ucc98\ub9ac","5627b5ea":"[](http:\/\/)> \ud2b9\uc9d5\uc744 \ub354 \uc774\uc6a9\ud558\uba74 \uc5b4\ub5a8\uae4c?","633cadb0":"> \ub0a8\uc790, \uc5ec\uc790\uc758 \ud0a4\uc640 \ubab8\ubb34\uac8c\ub97c \ud45c\uc2dc\ud574\ubcf4\uc790. <br\/>\n> \uc5ec\uc790\uc758 \ud0a4(Height)\uc640 \ubab8\ubb34\uac8c(Weight)\ub97c \uc624\ub80c\uc9c0 \uc0c9\uc73c\ub85c \ud45c\uc2dc(plot)\ud558\ub77c. <br\/>\n> \ub0a8\uc790\uc758 \ud0a4\uc640 \ubab8\ubd80\uac8c\ub294 \ud30c\ub780\uc0c9\uc73c\ub85c \ud45c\uc2dc\ud558\ub77c. ","21ee9242":"### 4.2 \uc368\ud3ec\ud2b8 \ubca1\ud130 \uba38\uc2e0(SVM) \uc54c\uace0\ub9ac\uc998 \uc774\uc6a9\ud558\uc5ec \uc54c\uc544\ub9de\ucd94\uae30","9a895d6c":"> \ub370\uc774\ud130\uc5d0\ub294 \ud0a4\/\ubab8\ubb34\uac8c\/\ubc1c\ud06c\uae30\/\ud559\ub144\/\uc131\ubcc4 \ud2b9\uc9d5\uc774 \uc788\ub2e4. <br\/>\n> \uac01 \ud2b9\uc9d5\ubcc4\ub85c \uc5b4\ub5a4 \ubd84\ud3ec\ub97c \ubcf4\uc774\ub294\uc9c0\ub3c4 \ud45c\uc2dc\ud560 \uc218 \uc788\ub2e4.","3b85af83":"> \uc587\uc740 \uac83\uc740 \ub2e4\uc591\ud558\uac8c \ubd84\ud3ec\uac00 \ub418\uc5b4\uc788\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud558\uace0<br\/>\n> \ub113\uc740 \uac83\uc740 \ud2b9\uc815 \ud2b9\uc815 \ubc94\uc704\uc5d0 \ubab0\ub824\uc788\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8","22b153d3":"## 5. \uacb0\ub860\n\n> - \ub370\uc774\ud130\ub97c \ubd84\uc11d\ud558\uace0, \uc0c1\uad00\uad00\uacc4\ub97c \uc774\ud574\ud560 \uc218 \uc788\ub2e4. <br\/>\n> - 4\uac00\uc9c0 \uba38\uc2e0\ub7ec\ub2dd \uc54c\uace0\ub9ac\uc998\uc744 \uc774\uc6a9\ud558\uc5ec \ud559\uc2b5\uc744 \uc2dc\ud0a4\uace0 \ud14c\uc2a4\ud2b8\ub97c \uc218\ud589\ud560 \uc218 \uc788\ub2e4. <br\/> \n> - \ud2b9\uc9d5\uc744 2\uac1c\ub9cc \uc774\uc6a9\ud560 \ub54c\ubcf4\ub2e4\ub294 3\uac1c\ub97c \uc774\uc6a9\ud560 \ub54c\uac00 \uc131\ub2a5\uc740 \uc870\uae08 \ub354 \ud5a5\uc0c1\ub418\uc5c8\ub2e4. <br\/>","c802bf77":"## \ud0a4, \ubab8\ubb34\uac8c, \ubc1c \ud06c\uae30\ub85c \uc131\ubcc4 \uc54c\uc544\ub9de\ucd94\uae30\n\n> \uc774 \ud504\ub85c\uadf8\ub7a8\uc740 \uc544\ub798 \ucf54\ub4dc\ub97c \ucc38\uace0\ud558\uc5ec \uc791\uc131\ud558\uc600\uc2b5\ub2c8\ub2e4. <br\/>\n> Source: https:\/\/www.kaggle.com\/ash316\/ml-from-scratch-with-iris <br\/><br\/>\n> \uc704 \uc0d8\ud50c \ucf54\ub4dc\ub294 \ucd08\ubcf4\uc790\ub97c \uc704\ud55c Machine Learning \ud29c\ud1a0\ub9ac\uc5bc\ub85c\uc11c <br\/>\n> \ubcf5\uc0ac\uaf43 \ub370\uc774\ud130\ub85c \uba38\uc2e0\ub7ec\ub2dd\uc744 \uc774\ud574\ud558\uae30 \uc704\ud55c \ucf54\ub4dc\uc785\ub2c8\ub2e4.  <br\/>","fd86e71f":"### 4.1 \ub370\uc774\ud130 \ucabc\uac1c\uae30 (\ud559\uc2b5 \ub370\uc774\ud130, \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130)","2e79169a":"## \uc124\uba85\n> \uc5b4\ub5bb\uac8c \ubd84\ud3ec\ud558\ub294\uc9c0\ub3c4 \uc54c \uc218 \uc788\ub2e4. \ubc14\uc774\uc62c\ub9b0 \ubaa8\uc591\uc73c\ub85c \ud45c\uc2dc\ud560 \uc218 \uc788\ub294\ub370 violinplot \ud568\uc218\ub97c \uc774\uc6a9\ud55c\ub2e4. <br\/>\n> \uc131\ubcc4\uc5d0 \ub530\ub77c \uaf43\ubc1b\uce68 \ub108\ube44, \uaf43\ubc1b\uce68 \uae38\uc774, \uaf43\uc78e \ub108\ube44, \uaf43\uc78e \uae38\uc774 \ub4f1\uc774 \uc5b4\ub5bb\uac8c \ubd84\ud3ec\ud558\ub294\uc9c0 \uc54c \uc218 \uc788\ub2e4. <br\/>","88b747c6":"> \uc704\uc758 \uacb0\uacfc\ub97c \ubcf4\uace0 \uc124\uba85\ud574\ubcf4\uc790. ","de80aed1":"> \uc774\ubc88\uc5d0\ub294 \ub0a8\ub140\uc5d0 \ub530\ub978 \ud0a4\uc640 \ubc1c \ud06c\uae30\ub97c \ud45c\uc2dc\ud558\uba74 \uc5b4\ub5a8\uae4c? <br\/>\n> \uc5ec\uc790\uc758 \ud0a4(Height)\uc640 \ubc1c\ud06c\uae30(FeetSize)\ub97c \uc624\ub80c\uc9c0 \uc0c9\uc73c\ub85c \ud45c\uc2dc(plot)\ud558\ub77c. <br\/>\n> \ub0a8\uc790\uc758 \ud0a4\uc640 \ubc1c\ud06c\uae30\ub294 \ud30c\ub780\uc0c9\uc73c\ub85c \ud45c\uc2dc\ud558\ub77c. "}}