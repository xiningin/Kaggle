{"cell_type":{"a50ccc82":"code","53a41700":"code","61748a21":"code","39fd74db":"code","c68061de":"code","ed358b44":"code","2f21499c":"code","9ea71fc0":"code","68d6b8bc":"code","810b6ca4":"code","0e091283":"code","7e02111b":"code","9d697f73":"code","6f15f31e":"code","1807763e":"markdown","fb0bf1c8":"markdown","ee884c36":"markdown","fcb08c58":"markdown","6a0bcdff":"markdown","0a8d9319":"markdown","fa218eae":"markdown","1f8b51d0":"markdown","4b879696":"markdown","2e2e0f49":"markdown","228f3665":"markdown","e3d2767a":"markdown","57b5209b":"markdown","d6c3df59":"markdown","ccb3f0b0":"markdown","f63ee621":"markdown","303bed26":"markdown","3539f9ed":"markdown","2dcebf22":"markdown","6e69e06e":"markdown","ecc00a38":"markdown","fbc9baee":"markdown","f225318e":"markdown","4f793fa9":"markdown","3f673e40":"markdown","9170c11b":"markdown","587bb223":"markdown"},"source":{"a50ccc82":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\n","53a41700":"ab=pd.read_csv('..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')","61748a21":"#Checking the most present neighbourhood group\nsns.catplot(x=\"neighbourhood_group\", kind = \"count\", palette = \"Set2\", data = ab)\nplt.show()","39fd74db":"## Now checking the most present neighbourhood \n\nneighbourhood_top10 = ab[\"neighbourhood\"].value_counts().head(10)\ndf_neighbourhood_top10 = pd.DataFrame(neighbourhood_top10)\ndf_neighbourhood_top10 = df_neighbourhood_top10.reset_index()\nf, ax = plt.subplots(figsize = (15,5))\nsns.barplot(x =\"index\", y = \"neighbourhood\", palette = \"Set2\", data = df_neighbourhood_top10)\nplt.show()","c68061de":"sns.catplot(x=\"neighbourhood_group\", y=\"price\", kind = \"box\",data = ab)\nplt.show()","ed358b44":"ab_no_outliers = ab[[\"neighbourhood_group\",\"price\"]]\n\n#Here we're going to show only the prices below 400. We have 48895 rows with the full dataset, by doing this filter we will\n#have 45338 rows, which means a lost of 7% of the rows due the filter.\n\nab_no_outliers_filteres = ab_no_outliers[ab_no_outliers[\"price\"] <= 400]\n\nsns.catplot(x=\"neighbourhood_group\", y=\"price\", kind = \"box\", data = ab_no_outliers_filteres)\nplt.show()","2f21499c":"ab_price = ab.groupby([\"room_type\"])[\"price\"].median()\ndf_ab_price = pd.DataFrame(ab_price)\ndf_ab_price = df_ab_price.reset_index()\n\nsns.catplot(x=\"room_type\", y=\"price\", kind = \"bar\", palette = \"Accent\",  data = df_ab_price)\nplt.title(\"Room_type price by it's median\")\nplt.show()","9ea71fc0":"ab_room = ab[[\"neighbourhood_group\",\"room_type\",\"price\"]]\n\nab_room_no_outliers = ab_room[ab_room[\"price\"]<=300]\n\nax = sns.catplot(x = \"neighbourhood_group\", y = \"price\", kind = \"box\", hue = \"room_type\", data = ab_room_no_outliers)\n\n\nplt.show()","68d6b8bc":"ab_reviews = ab.groupby([\"neighbourhood_group\"])[\"number_of_reviews\"].sum()\ndf_ab_reviews = pd.DataFrame(ab_reviews)\ndf_ab_reviews = df_ab_reviews.reset_index()\n\nsns.barplot(x=\"neighbourhood_group\", y=\"number_of_reviews\", data = df_ab_reviews)\nplt.title(\"Total Reviews by neighbourhood_group\")\nplt.show()","810b6ca4":"sns.relplot(x=\"latitude\", y=\"longitude\", palette = \"Set2\", hue = \"neighbourhood_group\", data = ab)\nplt.show()","0e091283":"ab_price = ab[[\"longitude\", \"latitude\", \"price\", \"neighbourhood_group\",\"room_type\"]]\nab_price_under_100 = ab_price[ab_price[\"price\"]<=100]\n\nsns.relplot(x=\"latitude\", \n            y=\"longitude\", \n            palette = \"Set2\", \n            hue = \"neighbourhood_group\", \n            style = \"room_type\", \n            data = ab_price_under_100)\nplt.title(\"Room_type under $100\")\nplt.axis(\"off\")\nplt.show()","7e02111b":"ab_price = ab[[\"longitude\", \"latitude\", \"price\", \"neighbourhood_group\",\"room_type\"]]\nab_price_above_500 = ab_price[ab_price[\"price\"]>=500]\n\nsns.relplot(x=\"latitude\", \n            y=\"longitude\", \n            palette = \"Set2\", \n            hue = \"neighbourhood_group\", \n            style = \"room_type\", \n            data = ab_price_above_500)\nplt.title(\"Room_type above $500\")\nplt.axis(\"off\")\nplt.show()","9d697f73":"ab_night = ab.groupby([\"neighbourhood_group\"])[\"minimum_nights\"].mean().round(2)\ndf_ab_night = pd.DataFrame(ab_night)\ndf_ab_night = df_ab_night.reset_index()\n\nsns.catplot(x=\"minimum_nights\", y = \"neighbourhood_group\", kind = \"bar\", data = df_ab_night)\nplt.title(\"Minimum_nights mean by neighbourhood_group\")\nplt.show()","6f15f31e":"ab_proportion = ab.groupby([\"neighbourhood_group\"])[\"room_type\"].value_counts()\ndf_ab_proportion = pd.DataFrame(ab_proportion)\ndf_ab_proportion.rename(columns={\"room_type\":\"Total of values\"}, inplace = True)\n\n\nab_count = ab.groupby([\"neighbourhood_group\"])[\"room_type\"].count()\ndf_ab_count = pd.DataFrame(ab_count)\n\n\ndf_ab_proportion[\"Total\"] = 0\n\ndf_ab_proportion.loc[\"Bronx\"][\"Total\"]= df_ab_count.room_type.loc[\"Bronx\"]\ndf_ab_proportion.loc[\"Brooklyn\"][\"Total\"]= df_ab_count.room_type.loc[\"Brooklyn\"]\ndf_ab_proportion.loc[\"Manhattan\"][\"Total\"]= df_ab_count.room_type.loc[\"Manhattan\"]\ndf_ab_proportion.loc[\"Queens\"][\"Total\"]= df_ab_count.room_type.loc[\"Queens\"]\ndf_ab_proportion.loc[\"Staten Island\"][\"Total\"]= df_ab_count.room_type.loc[\"Staten Island\"]\n\ndf_ab_proportion = df_ab_proportion.reset_index()\n\ndf_ab_proportion[\"Proportion\"] = (df_ab_proportion[\"Total of values\"]\/df_ab_proportion[\"Total\"]).round(2)\n\nsns.catplot(x=\"neighbourhood_group\",\n            y = \"Proportion\",\n            kind = \"bar\",\n            hue = \"room_type\",\n            data = df_ab_proportion)\nplt.title(\"Room_type proportion for each neighbourhood_group\")\nplt.show()","1807763e":"## Plotting latitude and longitude for price less than 100","fb0bf1c8":"## -----------------------------------------------------------------------------------","ee884c36":"## Let's see how the price varies among the neighbourhood_groups","fcb08c58":"## ----------------------------------------------------------------------------------","6a0bcdff":"## Checking the minimum_night mean for each neighbourhood_group","0a8d9319":"> ## Checking the proportion of \"private_room\", \"entire apt\" and \"shared room\" for each \"neighbourhood_group\"","fa218eae":"## As we can see Manhattan is the most frequently group in this file","1f8b51d0":"## ---------------------------------------------------------------------------------","4b879696":"## ---------------------------------------------------------------------------------------","2e2e0f49":"## ----------------------------------------------------------------------------------------","228f3665":"## ------------------------------------------------------------------------------------------\n\n","e3d2767a":"## So the most frequent neighbourhood is Williamsburg followed by Bedford-Stuyvesant","57b5209b":"## Plotting the latitude and longitude on a relplot to help us visualize the neighbourhood_group distribuition","d6c3df59":"## Manhattan has the highest mean of the neighbourhood_groups","ccb3f0b0":"## What we see here is that there's a predominance of Private Room in all the neighborhood group under $100.","f63ee621":"## So here we can see that there's a predominance of Entire home\/apt for prices above 500 dollars. Which makes sense because if someone has this amount of money to pay they'll prefer an Entire home\/apt. \n\n## Another thing to point out is that some \"neighbourhood_groups\" doesn't even have a private room or shared room above 500 dollars which is the case of \"Staten Island\" the southest \"neighbourhood_groups\" ","303bed26":"## Checking the number of reviews for each neighbourhood_group\n","3539f9ed":"## ----------------------------------------------------------------------------","2dcebf22":"## --------------------------------------------------------------------------------------","6e69e06e":"## Manhattan has the highest median for all room_types. A curious point here is that the median in \"Shared room\" at \"Staten Island is almost the same as it's 25 percentile, which shows us that the shared room price it's not homogeneous. Another thing to point out is that although the \"Entire Home\/apt\" has a clear difference between \"Queens\" and \"Brooklyn\" this difference it's not the same when we look to \"Private Room\" and \"Shared room\". ","ecc00a38":"## Let's see the price for each neighbourhood_group","fbc9baee":"## ------------------------------------------------------------------------------------","f225318e":"## Checking the most expensive room_type by it's median","4f793fa9":"## Nothing new here, as we can see the Entire Home is the most expensive room_type, followed by Private Room, and Shared room. \n## I used median to avoid the effect of the outliers.","3f673e40":"# All right, we still have some outliers, but now we can have a better visualization. Let's keep this way.\n\n# As we can see now, Queens, Manhattan, and Staten Island have a better price distribution as the median is almost on the half of the box. On the other hand, Brooklyn and Bronx have a not so good distribution because the median is near the 25th percentile than the 75th percentile","9170c11b":"## -----------------------------------------------------------------------------------","587bb223":"## That's not a very good visualization, the outliers are getting in the way. Let's remove them\n"}}