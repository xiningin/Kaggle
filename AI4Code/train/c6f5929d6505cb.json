{"cell_type":{"02078175":"code","4df09395":"code","aa36bd11":"code","7a16a072":"code","c3942489":"markdown"},"source":{"02078175":"import numpy as np\nimport pandas as pd\n\nimport numpy as np\nimport pandas as pd \nimport os \n\ndef MinMaxBestBaseStacking(input_folder, best_base, output_path):\n    sub_base = pd.read_csv(best_base)\n    all_files = os.listdir(input_folder)\n\n    # Read and concatenate submissions\n    outs = [pd.read_csv(os.path.join(input_folder, f), index_col=0) for f in all_files]\n    concat_sub = pd.concat(outs, axis=1)\n    cols = list(map(lambda x: \"target\" + str(x), range(len(concat_sub.columns))))\n    concat_sub.columns = cols\n    concat_sub.reset_index(inplace=True)\n\n    # get the data fields ready for stacking\n    concat_sub['is_iceberg_max'] = concat_sub.iloc[:, 1:6].max(axis=1)\n    concat_sub['is_iceberg_min'] = concat_sub.iloc[:, 1:6].min(axis=1)\n    concat_sub['is_iceberg_mean'] = concat_sub.iloc[:, 1:6].mean(axis=1)\n    concat_sub['is_iceberg_median'] = concat_sub.iloc[:, 1:6].median(axis=1)\n\n    # set up cutoff threshold for lower and upper bounds\n    cutoff_lo = 0.66\n    cutoff_hi = 0.33\n    \n#     cutoff_lo = 0.85\n#     cutoff_hi = 0.17\n\n    concat_sub['is_iceberg_base'] = sub_base['target']\n    concat_sub['target'] = np.where(np.all(concat_sub.iloc[:, 1:6] > cutoff_lo, axis=1),\n                                        concat_sub['is_iceberg_max'],\n                                        np.where(np.all(concat_sub.iloc[:, 1:6] < cutoff_hi, axis=1),\n                                                 concat_sub['is_iceberg_min'],\n                                                 concat_sub['is_iceberg_base']))\n    concat_sub[['image_name', 'target']].to_csv(output_path,\n                                            index=False, float_format='%.12f')","4df09395":"\nMinMaxBestBaseStacking('..\/input\/cs0099\/', '..\/input\/cs0099\/submission_mean.csv', 'submission.csv')\n\n# data1 = pd.read_csv('..\/input\/minmax-ensemble-0-9526-lb\/submission.csv')\n# data2 = pd.read_csv('..\/input\/stacking-ensemble-on-my-submissions\/submission_mean.csv')\n# submission = data1.copy()","aa36bd11":"# submission['target'] = 2\/3 * data1['target'] + 1\/3 * data2['target']","7a16a072":"# submission.to_csv('submission.csv', index=False, float_format='%.6f')","c3942489":"Based on: \nhttps:\/\/www.kaggle.com\/solomonk\/minmax-ensemble-0-9526-lb?rvi=1\nhttps:\/\/www.kaggle.com\/truonghoang\/stacking-ensemble-on-my-submissions\nhttps:\/\/www.kaggle.com\/datafan07\/analysis-of-melanoma-metadata-and-effnet-ensemble\n"}}