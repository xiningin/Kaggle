{"cell_type":{"99f5ddbf":"code","38f5e7ae":"code","f188fc1a":"code","a18a3e39":"code","e424a285":"code","a7aea7ba":"code","36584936":"code","3e8e4c27":"code","3d01510a":"code","4b2a6ce2":"code","8abb463a":"code","015eb9f0":"code","af0dedc6":"code","d2451047":"code","c96f1056":"code","a4019470":"code","7d19caa7":"code","6c2a92b7":"markdown","8cc354d4":"markdown","4bae28d7":"markdown","87e7efbc":"markdown","d9dbdc0c":"markdown","9d884018":"markdown","96fdb59d":"markdown","4f9d4526":"markdown","746d1a71":"markdown","976a8ce7":"markdown","aed60e88":"markdown","a0108da5":"markdown","0b90d246":"markdown","9dfeee34":"markdown"},"source":{"99f5ddbf":"from tensorflow.keras.layers import Input,Dense,Flatten,Lambda\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.applications.resnet50 import ResNet50\nfrom tensorflow.keras.applications.resnet50 import preprocess_input\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator,load_img\nfrom tensorflow.keras.models import Sequential\nimport numpy as np\nfrom glob import glob\nimport matplotlib.pyplot as plt","38f5e7ae":"IMAGE_SIZE = [224,224]","f188fc1a":"train_path = '..\/input\/cotton-disease-dataset\/Cotton Disease\/train'\nvalid_path = '..\/input\/cotton-disease-dataset\/Cotton Disease\/test'","a18a3e39":"resnet = ResNet50(input_shape=IMAGE_SIZE + [3], weights='imagenet',include_top=False)","e424a285":"for layer in resnet.layers:    #layer.trainable=False means we dont want to retrain the existing weights.\n    layer.trainable=False","a7aea7ba":"folders=glob('..\/input\/cotton-disease-dataset\/Cotton Disease\/train\/*')\nfolders","36584936":"resnet.output","3e8e4c27":"x= Flatten()(resnet.output)","3d01510a":"prediction = Dense(len(folders),activation='softmax')(x)","4b2a6ce2":"model = Model(inputs=resnet.input, outputs=prediction)","8abb463a":"model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])","015eb9f0":"from tensorflow.keras.preprocessing.image import ImageDataGenerator","af0dedc6":"train_datagen = ImageDataGenerator(rescale=1.\/255,shear_range = 0.2, zoom_range=0.2, horizontal_flip=True)","d2451047":"test_datagen=ImageDataGenerator(rescale=1.\/255)","c96f1056":"training_set=train_datagen.flow_from_directory('..\/input\/cotton-disease-dataset\/Cotton Disease\/train',target_size=(224,224),batch_size=32,class_mode='categorical')","a4019470":"test_set=test_datagen.flow_from_directory('..\/input\/cotton-disease-dataset\/Cotton Disease\/test',target_size=(224,224),batch_size=32,class_mode='categorical')","7d19caa7":"r=model.fit(training_set, validation_data=test_set,epochs=5,steps_per_epoch=len(training_set),validation_steps=len(test_set))","6c2a92b7":"# 6) Use glob to get total categories so that we can add it at the bottom of our network","8cc354d4":"# 7) Now flatten the output","4bae28d7":"# 8) Find the predictions and feed it to the model","87e7efbc":"# 9) Create model object","d9dbdc0c":"# 1) Import the libraries","9d884018":"# 2) Define the image size according to the standard set by ResNet50","96fdb59d":"\n**In this I have kept the epochs as 5 so the accuracy will be a bit less but if you increase the number of epochs, accuracy will definitely increase.**\n","4f9d4526":"**weights='imagenet' means that we will use pre-trained weights of the imagenet which was used to train the resnet50 model.\nSince these pre-trained models were trained on imagenet database, it was classified for 1000 categories. But we have only 4 categories so we will remove the last layer and first layer i.e. include_top=False**","746d1a71":"# INTRODUCTION","976a8ce7":"# 10) Use Image Data generator to import images from folder and for data augmentation","aed60e88":"# 5) Do not train the existing weights","a0108da5":"**In this kernel, we will go through a mini project of Deep Learning where we will predict whether the cotton plants or their leaves are infected or fresh using ResNet50 transfer learning Model.**","0b90d246":"# 3) Define the training path and testing path of the images of cotton plants","9dfeee34":"# 4) Load the pre-trained model and define the weights and input image size"}}