{"cell_type":{"00b9ef40":"code","a335846d":"code","51421bec":"code","09f195c8":"code","15da1d71":"code","dfcc4c69":"code","2c13ae41":"code","c35d6c0a":"code","e13e6d45":"markdown","e5219619":"markdown","5b03d9d2":"markdown"},"source":{"00b9ef40":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    #for filename in filenames:\n        #print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a335846d":"import cv2\nimport matplotlib.pyplot as plt\nimport os","51421bec":"def pixelator(image):\n\n    scale_percent = 40 # percent of original size\n    width = int(image.shape[1] * scale_percent \/ 100)\n    height = int(image.shape[0] * scale_percent \/ 100)\n    dim = (width, height)\n    resized = cv2.resize(image, dim, interpolation = cv2.INTER_AREA)\n\n    return resized","09f195c8":"def load_images_from_folder(folder):\n    images = []\n    for filename in os.listdir(folder):\n        img = cv2.imread(os.path.join(folder,filename), cv2.IMREAD_UNCHANGED)\n        if img is not None:\n            images.append(img)\n    return images","15da1d71":"collection = load_images_from_folder('\/kaggle\/input\/anime-faces\/data\/')","dfcc4c69":"for i in range(120,130):\n    plt.figure()\n    plt.imshow(cv2.cvtColor(collection[i],cv2.COLOR_BGR2RGB))","2c13ae41":"result = []\n\nfor i in range(len(collection)):\n    #img = cv2.imread(collection[i], cv2.IMREAD_UNCHANGED)\n    output = pixelator(collection[i])\n    result.append(output)","c35d6c0a":"for j in range(120,130):\n    plt.figure()\n    plt.imshow(cv2.cvtColor(result[j],cv2.COLOR_BGR2RGB))","e13e6d45":"# Take an example","e5219619":"# Pixel Art\n\n## Pixel art is a kind of visual we saw on old game console. I love them so much.\n\n","5b03d9d2":"# The Result"}}