{"cell_type":{"ce47d009":"code","8537c0b9":"code","f80bfc91":"code","0e7a92ab":"code","1fe95387":"code","56d3252d":"code","b86be447":"code","1103fb5e":"code","b21c2b19":"code","4f3e71f0":"code","0a94b679":"code","79835c96":"code","428da061":"code","9b4c461a":"code","10e301c7":"code","9e1336ee":"code","4ee3fba4":"code","9cddfd68":"code","8c18ae00":"code","ef2772b5":"code","dfc9b8b5":"code","df32b3dc":"markdown"},"source":{"ce47d009":"import pandas as pd\n\ntrain_data_df = pd.read_csv('..\/input\/train.csv')\ntest_data_df = pd.read_csv('..\/input\/test.csv')","8537c0b9":"new_train_data_df = train_data_df.groupby(['matchId','groupId'])['assists', 'boosts', 'damageDealt', 'DBNOs','headshotKills', 'heals', 'killPlace', 'killPoints', 'kills','killStreaks', 'longestKill', 'maxPlace', 'numGroups', 'revives','rideDistance', 'roadKills', 'swimDistance', 'teamKills','vehicleDestroys', 'walkDistance', 'weaponsAcquired', 'winPoints'].agg('mean').reset_index()\nnew_train_data_df['winPlacePerc'] = train_data_df['winPlacePerc']\nnew_train_data_df['winPlacePerc'] = train_data_df.groupby(['matchId', 'groupId'])['winPlacePerc'].agg('mean').reset_index()['winPlacePerc']","f80bfc91":"new_test_data_df = test_data_df.groupby(['matchId','groupId'])['assists', 'boosts', 'damageDealt', 'DBNOs','headshotKills', 'heals', 'killPlace', 'killPoints', 'kills','killStreaks', 'longestKill', 'maxPlace', 'numGroups', 'revives','rideDistance', 'roadKills', 'swimDistance', 'teamKills','vehicleDestroys', 'walkDistance', 'weaponsAcquired', 'winPoints'].agg('mean').reset_index()","0e7a92ab":"import numpy as np","1fe95387":"train_data = train_data_df.values\ntest_data = test_data_df.values\n\ntrain_features = new_train_data_df.values[:, 2:24][0:np.int32(0.8*len(new_train_data_df))]\ntrain_targets = new_train_data_df.values[:, 24][0:np.int32(0.8*len(new_train_data_df))]\n\nval_features = new_train_data_df.values[:, 2:24][np.int32(0.8*len(new_train_data_df)):len(new_train_data_df)]\nval_targets = new_train_data_df.values[:, 24][np.int32(0.8*len(new_train_data_df)):len(new_train_data_df)]\n\ntest_features = new_test_data_df.values[:, 2:24]\ntest_data = test_data[:, 0:3]","56d3252d":"import sklearn","b86be447":"from sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler(feature_range=(-1, 1)).fit(train_features)\n\ntrain_features = scaler.transform(train_features)\nval_features = scaler.transform(val_features)\ntest_features = scaler.transform(test_features)","1103fb5e":"import catboost\nfrom catboost import CatBoostRegressor\n\nmodel = CatBoostRegressor(iterations=20000, learning_rate=0.1, eval_metric='MAE')\nmodel.fit(train_features, train_targets, eval_set=(val_features, val_targets))","b21c2b19":"predictions = model.predict(test_features)","4f3e71f0":"new_test_data_df['winPlacePercPred'] = predictions","0a94b679":"group_preds = new_test_data_df.groupby(['matchId','groupId'])['winPlacePercPred'].agg('mean').groupby('matchId').rank(pct=True).reset_index()","79835c96":"group_preds = group_preds['winPlacePercPred']","428da061":"dictionary = dict(zip(new_test_data_df['groupId'].values, group_preds))","9b4c461a":"new_preds = []\n\nfor i in test_data_df['groupId'].values:\n    new_preds.append(dictionary[i])","10e301c7":"test_data_df['winPlacePercPred'] = new_preds","9e1336ee":"test_data_df.sort_values(by=['matchId', 'groupId'])","4ee3fba4":"import numpy as np","9cddfd68":"predictions = pd.DataFrame(np.transpose(np.array([test_data[:, 0], test_data_df['winPlacePercPred']])))\npredictions.columns = ['Id', 'winPlacePerc']","8c18ae00":"predictions['Id'] = np.int32(predictions['Id'])","ef2772b5":"predictions.head(10)","dfc9b8b5":"predictions.to_csv('PUBG_preds3.csv', index=False)","df32b3dc":"Courtesy to [Fernando Vendrameto](http:\/\/www.kaggle.com\/fvendrameto\/catboost-by-a-newbie) for giving me the idea to use Cat Boosting."}}