{"cell_type":{"0d205b45":"code","d37929a1":"code","a7ee2c7b":"code","0e82d4c8":"code","3f2aa1c8":"code","82693b90":"code","0c4fa53a":"code","fb2c3a60":"code","9ac9019e":"code","8af0eaa6":"code","4ec86419":"code","9f621dd1":"code","77298e5c":"code","70920135":"code","d4c4a596":"code","7c52e652":"code","d96fc8b3":"code","cc9c57ae":"code","7eace72e":"code","514e89d8":"code","52106ee0":"code","2840d1c7":"code","eb1cd343":"code","96c6e08f":"code","a6810b1e":"code","035daaac":"code","86783ae0":"code","7285748c":"code","674efe1e":"code","71340615":"code","28bdbf1b":"code","f82398c1":"code","f9663176":"code","6de9a473":"code","151801db":"code","d68bb47a":"code","42af0a41":"code","3951aa04":"code","524b4f80":"code","3745260a":"code","55c23f60":"code","8d7618bd":"code","fb055374":"code","bc0a25f8":"code","8891e4bf":"code","c3217118":"code","a75e213f":"code","707694da":"code","a6d4fed6":"code","ea18b12e":"code","0b738971":"code","fc784ca6":"code","f795075d":"code","5fcf1da1":"code","deb3ef24":"code","4eca8840":"code","9b34d2f2":"code","b57a932d":"code","db305098":"code","3884026d":"code","85d7228b":"code","eb2d6e16":"code","c5c6940c":"code","4f63c1ae":"code","de2ada0f":"code","98d86776":"code","82850264":"code","27ac1084":"markdown","ac0f80ba":"markdown","4485918f":"markdown","e08d987c":"markdown","0f9e7c99":"markdown","916e40ae":"markdown","488c210a":"markdown","30c8fdb8":"markdown","0a99980d":"markdown","d1151977":"markdown","b4004e6b":"markdown","f3c60304":"markdown","5daac9d2":"markdown","7f5b8302":"markdown","1221b4e3":"markdown","50e05a48":"markdown","964a0d83":"markdown","f2c6220c":"markdown","61bffbd3":"markdown","01c0bea5":"markdown","014812b2":"markdown","7bcb9d9b":"markdown","981cdc99":"markdown","67632c94":"markdown","fdfa52c5":"markdown","b06ce4db":"markdown","36b95077":"markdown","d0c151e4":"markdown","5fbd8495":"markdown","f09eb7a3":"markdown","9bd285dc":"markdown","e974140b":"markdown","442a59ea":"markdown","3a421ef1":"markdown","98d4af69":"markdown","d0042837":"markdown","2b8bcf68":"markdown","05898089":"markdown","c75c49a6":"markdown","2201f519":"markdown"},"source":{"0d205b45":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d37929a1":"# Directive pour afficher les graphiques dans Jupyter\n%matplotlib inline","a7ee2c7b":"# Pandas : librairie de manipulation de donn\u00e9es\n# NumPy : librairie de calcul scientifique\n# MatPlotLib : librairie de visualisation et graphiques\n# SeaBorn : librairie de graphiques avanc\u00e9s\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns","0e82d4c8":"# Lecture des donn\u00e9es d'apprentissage et de test\nt = pd.read_csv(\"..\/input\/pima-indians-diabetes-database\/diabetes.csv\")","3f2aa1c8":"t.head()","82693b90":"display(t.info(),t.head())","0c4fa53a":"t.count()","fb2c3a60":"t[np.isnan(t.Insulin)]","9ac9019e":"diabetes = t.fillna(value = {'Glucose':t.Glucose.mean()})","8af0eaa6":"plt.hist(diabetes.Glucose, bins=80)","4ec86419":"diabetes.count()","9f621dd1":"diabetes1 = diabetes.fillna(value = {'BloodPressure':t.BloodPressure.mean()})","77298e5c":"plt.hist(diabetes1.BloodPressure, bins=80)","70920135":"diabetes1.count()","d4c4a596":"diabetes2 = diabetes1.fillna(value = {'SkinThickness':t.SkinThickness.mean()})","7c52e652":"plt.hist(diabetes2.SkinThickness, bins=80)","d96fc8b3":"diabetes2.count()","cc9c57ae":"diabetes3 = diabetes2.fillna(value = {'Insulin':t.Insulin.mean()})","7eace72e":"plt.hist(diabetes3.Insulin, bins=80)","514e89d8":"diabetes3.count()","52106ee0":"diabetes4 = diabetes3.fillna(value = {'BMI':t.BMI.mean()})","2840d1c7":"plt.hist(diabetes4.BMI, bins=80)","eb1cd343":"diabetes4.count()","96c6e08f":"sns.distplot(diabetes4.Insulin, color='blue')","a6810b1e":"diabetes4['log_Insulin'] = np.log(diabetes4.Insulin+1)","035daaac":"sns.kdeplot(diabetes4.log_Insulin, color='blue')","86783ae0":"diabetes4[['Age','log_Insulin']].describe()","7285748c":"sns.kdeplot(diabetes4.log_Insulin, color='blue')\nsns.kdeplot(diabetes4.Age, color='red')","674efe1e":"from sklearn import preprocessing","71340615":"minmax = preprocessing.MinMaxScaler(feature_range=(0, 1))\ndiabetes4[['Age', 'log_Insulin']] = minmax.fit_transform(diabetes4[['Age', 'log_Insulin']])","28bdbf1b":"sns.distplot(diabetes4.log_Insulin, color='blue')\nsns.distplot(diabetes4.Age, color='red')","f82398c1":"scaler = preprocessing.StandardScaler()\ndiabetes4[['Age', 'log_Insulin']] = scaler.fit_transform(diabetes4[['Age', 'log_Insulin']])","f9663176":"sns.kdeplot(diabetes4.log_Insulin, color='blue')\nsns.kdeplot(diabetes4.Age, color='red')","6de9a473":"diabetes4.info()","151801db":"X = diabetes4.drop(['Outcome'], axis=1)\ny = diabetes4.Outcome","d68bb47a":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","42af0a41":"print(X_train.shape)\nprint(X_test.shape)","3951aa04":"from sklearn.linear_model import LogisticRegression","524b4f80":"lr = LogisticRegression()\nlr.fit(X_train,y_train)","3745260a":"y_lr = lr.predict(X_test)","55c23f60":"from sklearn.metrics import classification_report, confusion_matrix, roc_curve, roc_auc_score,auc, accuracy_score","8d7618bd":"print(confusion_matrix(y_test,y_lr))","fb055374":"print(accuracy_score(y_test,y_lr))","bc0a25f8":"print(classification_report(y_test, y_lr))","8891e4bf":"probas = lr.predict_proba(X_test)","c3217118":"print(probas)","a75e213f":"dfprobas = pd.DataFrame(probas,columns=['proba_0','proba_1'])\ndfprobas['y'] = np.array(y_test)","707694da":"dfprobas","a6d4fed6":"plt.figure(figsize=(10,10))\nsns.distplot(1-dfprobas.proba_0[dfprobas.y==0], bins=50)\nsns.distplot(dfprobas.proba_1[dfprobas.y==1], bins=50)","ea18b12e":"false_positive_rate, true_positive_rate, thresholds = roc_curve(y_test,probas[:, 1])\nroc_auc = auc(false_positive_rate, true_positive_rate)\nprint (roc_auc)","0b738971":"plt.figure(figsize=(12,12))\nplt.title('Receiver Operating Characteristic')\nplt.plot(false_positive_rate, true_positive_rate, 'b', label='AUC = %0.2f'% roc_auc)\nplt.legend(loc='lower right')\nplt.plot([0,1],[0,1],'r--')        \nplt.plot([0,0,1],[0,1,1],'g:')     \nplt.xlim([-0.1,1.2])\nplt.ylim([-0.1,1.2])\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')","fc784ca6":"from sklearn import ensemble\nrf = ensemble.RandomForestClassifier()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)","f795075d":"print(classification_report(y_test, y_rf))","5fcf1da1":"cm = confusion_matrix(y_test, y_rf)\nprint(cm)","deb3ef24":"rf1 = ensemble.RandomForestClassifier(n_estimators=10, min_samples_leaf=10, max_features=3)\nrf1.fit(X_train, y_train)\ny_rf1 = rf.predict(X_test)\nprint(classification_report(y_test, y_rf1))","4eca8840":"from sklearn.model_selection import validation_curve\nparams = np.arange(1, 300,step=30)\ntrain_score, val_score = validation_curve(rf, X, y, 'n_estimators', params, cv=7)\nplt.figure(figsize=(12,12))\nplt.plot(params, np.median(train_score, 1), color='blue', label='training score')\nplt.plot(params, np.median(val_score, 1), color='red', label='validation score')\nplt.legend(loc='best')\nplt.ylim(0, 1)\nplt.xlabel('n_estimators')\nplt.ylabel('score');","9b34d2f2":"from sklearn import model_selection","b57a932d":"param_grid = {\n              'n_estimators': [10, 100, 500],\n              'min_samples_leaf': [1, 20, 50]\n             }\nestimator = ensemble.RandomForestClassifier()\nrf_gs = model_selection.GridSearchCV(estimator, param_grid)","db305098":"rf_gs.fit(X_train, y_train)","3884026d":"print(rf_gs.best_params_)","85d7228b":"rf2 = rf_gs.best_estimator_","eb2d6e16":"y_rf2 = rf2.predict(X_test)","c5c6940c":"print(classification_report(y_test, y_rf2))","4f63c1ae":"importances = rf2.feature_importances_\nindices = np.argsort(importances)","de2ada0f":"plt.figure(figsize=(8,5))\nplt.barh(range(len(indices)), importances[indices], color='b', align='center')\nplt.yticks(range(len(indices)), X_train.columns[indices])\nplt.title('Importance des caracteristiques')","98d86776":"!pip install xgboost","82850264":"import xgboost as XGB\nxgb  = XGB.XGBClassifier()\nxgb.fit(X_train, y_train)\ny_xgb = xgb.predict(X_test)\ncm = confusion_matrix(y_test, y_xgb)\nprint(cm)\nprint(classification_report(y_test, y_xgb))","27ac1084":"Normaliser les valeurs min et \u00e0 max (valeurs ramen\u00e9es entre 0 et 1)","ac0f80ba":"R\u00e9gression logistique pour classifier sur l'ensemble de test","4485918f":"La fonction fillna permet de compl\u00e9ter simplement les param\u00e8tres manquants.","e08d987c":"### Insulin","0f9e7c99":"On met les probabilit\u00e9s de pr\u00e9diction de la valeur 1 dans un dataframe","916e40ae":"### Bloodpressure","488c210a":"### BMI","30c8fdb8":"## Donn\u00e9es manquante","0a99980d":"Importation des m\u00e9thodes de mesure de performances","d1151977":"### Glucose","b4004e6b":"On lance l'entrainement","f3c60304":"## Conditionnement des donn\u00e9es","5daac9d2":"## Cr\u00e9ation des jeux d'apprentissage et de test","7f5b8302":"predict_proba donne un tableau de couples de probabilit\u00e9s :[probabilit\u00e9 de pr\u00e9diction 0, probabilit\u00e9 de pr\u00e9diction 1]","1221b4e3":"On teste les for\u00eats al\u00e9atoires","50e05a48":"## D\u00e9s\u00e9quilibre des distributions","964a0d83":"StandardScaler pour ramener la moyenne \u00e0 0 et l'\u00e9cart type \u00e0 1","f2c6220c":"Cr\u00e9er les jeux d'apprentissage et de test","61bffbd3":"### Test si une valeur est VaN avec Insulin","01c0bea5":"### SkinThickness","014812b2":"### Interpr\u00e9tation des param\u00e8tres\n\nPregnancies = nombre de grossesse - Glucose = taux de glucose - BloodPressure = Pression dans le sang - SkinThickness = Epaisseur de la peau - Insulin = insulin- BMI = IMC - DiabetesPedigreeFunction = l'h\u00e9r\u00e9dit\u00e9 - Age = age - Outcome = R\u00e9sultat (0= pas de diab\u00e8te, 1 = diab\u00e8te)","7bcb9d9b":"## Importance des caract\u00e9ristiques","981cdc99":"## R\u00e9gression logistique","67632c94":"Mesure le nombre de bonnes pr\u00e9dictions sur le nombre total d'observations","fdfa52c5":"## Lecture des donn\u00e9es","b06ce4db":"La m\u00e9thode GridSearchCV permet de tester plusieurs combinaisons de param\u00e8tres (list\u00e9s dans une grille de param\u00e8tres) et de s\u00e9lectionner celle qui donne la meilleure pertinence","36b95077":"Voir les param\u00e8tres s\u00e9lectionn\u00e9s et le score","d0c151e4":"validation_curve permet de tracer la courbe du score sur un ensemble d'apprentissage et sur un ensemble de test (cross validation), en faisant varier un param\u00e8tre, par exemple n_estimators","5fbd8495":"On affiche la distribution des probabilit\u00e9s de pr\u00e9diction de 1, et celle des non probabilit\u00e9s de pr\u00e9diction de 0 :","f09eb7a3":"Pr\u00e9traitement des donn\u00e9es","9bd285dc":"## Mesures de performance","e974140b":"Certaines distributions sont d\u00e9s\u00e9quilibr\u00e9es, et \u00e9loign\u00e9es d'une loi normale :","442a59ea":"S\u00e9lectionne le meilleur estimateur","3a421ef1":"## Ajustement des hyperparam\u00e8tres (Random Forests)","98d4af69":"## Mise \u00e0 l'\u00e9chelle des donn\u00e9es quantitatives","d0042837":"## XGBoost","2b8bcf68":"On s\u00e9pare le dataset en deux parties","05898089":"Matrice de confusion :","c75c49a6":"## Encodage binaire des donn\u00e9es qualitatives (one hot encoding)","2201f519":"Dans ce cas, une transformation log peut am\u00e9liorer l'\u00e9quilibre :"}}