{"cell_type":{"8e2bff32":"code","f32bc5a4":"code","2eff6b36":"code","cec6288b":"code","7152cf95":"code","54999b84":"code","af631f40":"code","45f01b4a":"code","c4b78d5d":"code","afa586ae":"code","a23853d1":"code","5b9ebe49":"code","f17b26cc":"code","7995fa00":"code","67523ee2":"code","b739f107":"code","b0708dd2":"code","84e718ab":"code","a8924c83":"code","adc82a76":"code","066050fb":"code","7a4cabe2":"markdown","1b737515":"markdown","b25d1b94":"markdown","5af43abf":"markdown"},"source":{"8e2bff32":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f32bc5a4":"data=pd.read_csv(\"..\/input\/marvel-superheroes\/charcters_stats.csv\")\ndata","2eff6b36":"data.corr()","cec6288b":"f,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","7152cf95":"data.plot(kind='scatter', x='Durability', y='Strength',alpha = 0.5,color = 'blue')\nplt.xlabel('Durability')              \nplt.ylabel('Strength')\nplt.title('Durability Total Scatter Plot')\nplt.show()","54999b84":"data.Strength.plot(kind = 'line', color = 'r',label = 'Strength',linewidth=1,alpha = 0.5,grid = True,linestyle = '-')\ndata.Intelligence.plot(color = 'b',label = 'Intelligence',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')    \nplt.xlabel('x axis')             \nplt.ylabel('y axis')\nplt.title('Line Plot')           \nplt.show()","af631f40":"Name=data.sort_values(by=\"Total\",ascending=False).head(10)[\"Name\"]\nTotal=data.sort_values(by=\"Total\",ascending=False).head(10)[\"Total\"]\nTotal_point=pd.DataFrame({\"Name\":Name,\"Total\":Total})\nTotal_point\n\n","45f01b4a":"threshold = sum(data.Total)\/len(data.Total)\nprint(\"Mean of total value is\",threshold)\ndata[\"Total_Ratio\"] = [\"high\" if i > threshold else \"low\" for i in data.Total]\ndata.loc[:20,[\"Total_Ratio\",\"Total\"]]","c4b78d5d":"Name=data.sort_values(by=\"Power\",ascending=False).head(10)[\"Name\"]\nPower=data.sort_values(by=\"Power\",ascending=False).head(10)[\"Power\"]\nPower_point=pd.DataFrame({\"Name\":Name,\"Power\":Power})\nPower_point\n\n","afa586ae":"data.describe()","a23853d1":"data.boxplot(column='Total',by = 'Alignment')\nplt.show()","5b9ebe49":"data_new = data.head()\nmelted = pd.melt(frame=data_new,id_vars = 'Name', value_vars= ['Power','Speed'])\nmelted","f17b26cc":"def Name(Name):\n    return data[data[\"Name\"]==Name]","7995fa00":"Name('Deadpool')","67523ee2":"def alignment(Alignment):\n    return data[data[\"Alignment\"]==Alignment]","b739f107":"good=alignment('good')\nbad=alignment('bad')\nneutral=alignment('neutral')\n","b0708dd2":"good","84e718ab":"Name=good.sort_values(by=\"Total\",ascending=False).head(10)[\"Name\"]\nTotal=good.sort_values(by=\"Total\",ascending=False).head(10)[\"Total\"]\nTotal_point=pd.DataFrame({\"Name\":Name,\"Total\":Total})\nTotal_point\n","a8924c83":"mean=data[[\"Alignment\",\"Total\"]].groupby([\"Alignment\"],as_index=True).mean()\nmean=mean.sort_values(by='Total',ascending=False)\nmean\n\n","adc82a76":"Name=data.sort_values(by=\"Total\",ascending=False).head(10)[\"Name\"]\nStrength=data.sort_values(by=\"Total\",ascending=False).head(10)[\"Strength\"]\nSpeed=data.sort_values(by=\"Total\",ascending=False).head(10)[\"Speed\"]\nIntelligence=data.sort_values(by=\"Total\",ascending=False).head(10)[\"Intelligence\"]\n\nTs=pd.DataFrame({\"Name\":Name,\"Strength\":Strength,\"Speed\":Speed,\"Intelligence\":Intelligence})\nTs","066050fb":"import plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot, plot\n\ntrace1=go.Scatter(\nx=Ts[\"Name\"],\ny=Ts[\"Strength\"],\nmode=\"lines\",\nname=\"Strength\",\n)\ntrace2=go.Scatter(\nx=Ts[\"Name\"],\ny=Ts[\"Speed\"],\nmode=\"lines\",\nname=\"Speed\",\n)\ntrace3=go.Scatter(\nx=Ts[\"Name\"],\ny=Ts[\"Intelligence\"],\nmode=\"lines\",\nname=\"Intelligence\",\n)\nlayout=go.Layout(title=\"Strength-Speed-Intelligence\",xaxis=dict(title=\"Best_TP\"))\nfig=go.Figure(data=[trace1,trace2,trace3],layout=layout)\niplot(fig)","7a4cabe2":"### VISUAL-EXPLORATORY DATA ANALYSIS","1b737515":"### FUNCTIONS","b25d1b94":"# DATA CORRELATION","5af43abf":"# TOTAL RANKED"}}