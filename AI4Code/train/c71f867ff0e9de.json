{"cell_type":{"16395a04":"code","28c76c15":"code","c279ca08":"code","812160f0":"code","53c6a960":"code","bfac86d6":"code","34fb7cbc":"code","cffd46ae":"markdown","febe06eb":"markdown"},"source":{"16395a04":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","28c76c15":"'''list of integer list'''\ndef list_lines(file_name):\n    with open(file_name) as df:\n        df_line = df.read().splitlines()\n    line_list = [[int(n) for n in line.split()] for line in df_line]\n    return line_list\n\n\n'''list of parameters'''\ndef get_params(line_list):\n    top_line = line_list[0]\n    params = {\n        'drone_count' : top_line[2],\n        'max_weight' : top_line[3],\n        'max_time' : top_line[4]\n    }\n    return params\n\n\n'''inserting the line b\/w warehouse and cusotomer order '''\ndef get_wh_endline(line_list):\n    wh_endline = 24 #line where warehouse data ends\n    return wh_endline\n\n\n'''weight of each product'''\ndef get_weights(line_list):\n    weights = np.array(line_list[2])\n    return weights.astype('int')\n\n\n'''returns 2-D array of products by warehouses'''\ndef get_product_invent(line_list):\n    wh_endline = get_wh_endline(line_list)\n    supply = np.array(line_list[5:wh_endline:2])\n    return supply\n\n\n'''returns 2-D array of products by orders & array of total orders'''\ndef get_orders(line_list):\n    wh_endline = get_wh_endline(line_list)\n    orders = np.array(line_list[wh_endline+3::3])\n    total_orders = np.array(line_list[wh_endline+2::3])\n    return orders, total_orders\n\n\n'''get warehouse and customer locations'''\ndef location(line_list):\n    wh_endline = get_wh_endline(line_list)\n    wh_loc = np.array(line_list[4:wh_endline:2])\n    cust_loc = np.array(line_list[wh_endline+1::3])\n    return wh_loc, cust_loc","c279ca08":"file = ['..\/input\/hashcode-drone-delivery\/busy_day.in']\nline_list = list_lines(file[0])\n\nparams = get_params(line_list)\nweights = get_weights(line_list)\nsupply = get_product_invent(line_list)\norders, total_orders = get_orders(line_list)\nwh_loc, cust_loc = location(line_list)","812160f0":"'''Warehouse coordinates'''\nwh_xaxis = [x[0] for x in wh_loc]\nwh_yaxis = [x[1] for x in wh_loc]\n\nwarehouse_df = pd.DataFrame({'warehouse_x_axis': wh_xaxis, 'warehouse_y_axis': wh_yaxis})\nwarehouse_df","53c6a960":"'''Product data in each warehouse'''\nproduct_df = pd.DataFrame(x for x in supply).transpose()\nproduct_df.columns = [f'warehouse_{i}' for i in range(len(warehouse_df))]\nproduct_df['Product_weight'] = weights\n\nproduct_df.head()","bfac86d6":"'''Customer orders and coordinates'''\ncust_xaxis = [x[0] for x in cust_loc]\ncust_yaxis = [x[1] for x in cust_loc]\n\nmax_len_order=max([len(x) for x in orders])\n\ncust_df = pd.DataFrame(x for x in orders).fillna(0)\ncust_df.columns = [f'Product_{i}_type' for i in range(max_len_order)]\ncust_df[\"Total_orders\"] = total_orders\ncust_df[\"Order_x_coor\"] = cust_xaxis\ncust_df[\"Order_y_coor\"] = cust_yaxis\ncust_df.head()","34fb7cbc":"fig = plt.figure(figsize=(15,8))\ndata = fig.add_subplot()\ndata.scatter(wh_xaxis, wh_yaxis, c='b', s=50, label='Warehouse')\ndata.scatter(x = cust_xaxis, y = cust_yaxis, c='r', s=10, marker='x', label = 'Order_location')\nplt.legend(loc='best')","cffd46ae":"**Data Wrangling**","febe06eb":"***Creating dataframes for,***\n1. Warehouse coordinates\n2. Product data in each warehouse\n3. Customer orders and coordinates"}}