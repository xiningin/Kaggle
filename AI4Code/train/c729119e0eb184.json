{"cell_type":{"046d4f98":"code","2e2caa52":"code","9a0582e4":"code","bc146cce":"code","6f211c06":"code","99517f17":"code","e56bd99d":"code","c62aefee":"code","3f541a21":"code","74de78fa":"code","116ecd32":"code","2dbbd758":"code","02f16bb8":"code","de908f38":"code","732a085a":"code","24050ba2":"code","fb917135":"code","ca7be820":"code","aef3872b":"code","1541983e":"markdown","a75adf72":"markdown","62cfde7d":"markdown","ea283e3e":"markdown","838e592b":"markdown"},"source":{"046d4f98":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2e2caa52":"# Read the file and drop\ndf = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/2019_nCoV_data.csv')\ndf.drop('Sno',axis=1,inplace=True)","9a0582e4":"# basic Statstics for data \ndf.info()","bc146cce":"# Data missing information\ndata_info=pd.DataFrame(df.dtypes).T.rename(index={0:'column type'})\ndata_info=data_info.append(pd.DataFrame(df.isnull().sum()).T.rename(index={0:'null values (nb)'}))\ndata_info=data_info.append(pd.DataFrame(df.isnull().sum()\/df.shape[0]*100).T.\n                         rename(index={0:'null values (%)'}))\ndisplay(data_info)","6f211c06":"# Total Number of cases confirmed by dates From 22-JAN-2020 to 30-JAN-2020\n\ndf['Last Update'] = pd.to_datetime(df['Last Update'])\ndf['Last Update'] = df['Last Update'].dt.date\nconfirmed_case = df.groupby('Last Update')['Confirmed'].agg('sum')\nplt.figure(figsize=(15, 7))\nconfirmed_case.plot.barh()\nplt.xlabel('Total Number of Confirmed Cases Day-wise')\nplt.ylabel('Date (Jan 2020)')\nplt.title('Total Confirmed Cased of Corona Virus worldwide')\nfor i,v in enumerate(confirmed_case):\n    plt.text(v+2, i, str(v), color='black', fontweight='bold')\nplt.grid(True)\nplt.show()","99517f17":"# Total Number of cases Deaths by dates From 22-JAN-2020 to 30-JAN-2020\nconfirmed_death = df.groupby('Last Update')['Deaths'].agg('sum')\nplt.figure(figsize=(15, 7))\nconfirmed_death.plot.barh()\nplt.xlabel('Total Number of Death Cases Day-wise')\nplt.ylabel('Date (Jan 2020)')\nplt.title('Total Death Cases of Corona Virus worldwide')\nfor i,v in enumerate(confirmed_death):\n    plt.text(v, i, str(v), color='black', fontweight='bold')\nplt.grid(True)\nplt.show()","e56bd99d":"death_rate = confirmed_death\/confirmed_case*100\nplt.figure(figsize=(15, 7))\ndeath_rate.plot.line()\nplt.xlabel('Death Rate Day-wise')\nplt.ylabel('Date (Jan 2020)')\nplt.title('Death Rate of Corona Virus worldwide')\nplt.grid(True)\nplt.show()","c62aefee":"Countrywise = df.groupby('Country').agg('sum')\ndisplay(Countrywise)","3f541a21":"plt.figure(1, figsize=(15, 7))\nCountrywise['Confirmed'].plot.bar()\nplt.xlabel('Country')\nplt.ylabel('Total Number of confirmed Cases')\nplt.title('Total number confirmed cases of Corona Virus worldwide(Country-wise Analysis)')\nplt.grid(False)\nplt.show()","74de78fa":"plt.figure(1, figsize=(15, 7))\nCountrywise['Deaths'].plot.bar()\nplt.xlabel('Country')\nplt.ylabel('Total Number of Death Case Cases')\nplt.title('Total number Death cases of Corona Virus worldwide(Country-wise Analysis)')\nplt.grid(False)\nplt.show()","116ecd32":"statewise = df.groupby(['Country','Province\/State']).agg('sum')\ndisplay(statewise)","2dbbd758":"China =statewise.iloc[statewise.index.get_level_values('Country') == 'China']\ndisplay(China)","02f16bb8":"Mainland_China = statewise.iloc[statewise.index.get_level_values('Country') == 'Mainland China']\nMainland_China=Mainland_China.reset_index('Country')\nMainland_China.drop('Country',axis=1,inplace=True)\ndisplay(Mainland_China)","de908f38":"plt.figure(1, figsize=(20, 10))\nMainland_China['Confirmed'].plot.barh()\nplt.xlabel('Confirmed Cases')\nplt.ylabel('States')\nplt.title('Total number Confirmed cases of Corona Virus Statewise(Mainland China Statewise Analysis)')\nfor i,v in enumerate(Mainland_China['Confirmed']):\n    plt.text(v, i, str(v), color='black', fontweight='bold')\nplt.grid(False)\nplt.show()","732a085a":"# Death case Analysis Statewise\nplt.figure(1, figsize=(20, 10))\nMainland_China['Deaths'].plot.barh()\nplt.xlabel('Death Cases')\nplt.ylabel('States')\nplt.title('Total number Death cases of Corona Virus Statewise(Mainland China Statewise Analysis)')\nfor i,v in enumerate(Mainland_China['Deaths']):\n    plt.text(v, i, str(v), color='black', fontweight='bold')\nplt.grid(False)\nplt.show()","24050ba2":"# Mean Confirmed Cases and Death Cases in Mainland China\nprint(\"Mean Confirmed Cases in Mainland China  {:.1f}\".format(Mainland_China['Confirmed'].mean()))\nprint(\"Mean Confirmed Cases in Mainland China  {:.1f}\".format(Mainland_China['Deaths'].mean()))\nprint(\"Total Death Rate in Mainland China is {:.1f}%\".format((Mainland_China['Deaths'].mean()\/Mainland_China['Confirmed'].mean())*100))","fb917135":"# Mean Confirmed Cases and Death Cases in China\nprint(\"Mean Confirmed Cases in China  {:.1f}\".format(China['Confirmed'].mean()))\nprint(\"Mean Confirmed Cases in China  {:.1f}\".format(China['Deaths'].mean()))\nprint(\"Total Death Rate in China is {:.1f}%\".format((China['Deaths'].mean()\/China['Confirmed'].mean())*100))","ca7be820":"Date_Statewise = df.groupby(['Last Update','Country','Province\/State']).agg('sum')\ndisplay(Date_Statewise)","aef3872b":"# Each Date wise Analysis\nDate_Statewise.iloc[Date_Statewise.index.get_level_values('Country') == 'Mainland China']","1541983e":"## Countrywise Analysis","a75adf72":"#### This small effort to understand corona virus dataset. Please do suggest me to improve further","62cfde7d":"### We Observed that China and mainland Chaina is heavily effected with virus so let's observed which state of china is suffering most with this virus","ea283e3e":"****State and province has almost ~20% missing values","838e592b":"***** Death Rate is still almost constant from 22 Jan to 30 Jan which ~2.5-2.6%**********"}}