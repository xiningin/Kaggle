{"cell_type":{"5ac84ef2":"code","546a70c5":"code","046d3eb2":"code","1d266d40":"code","6098c7c9":"code","1b3b6906":"code","c7b87fa5":"code","ccfe2978":"code","20764b28":"code","d6e52b3e":"code","666c3e14":"code","7107fc6a":"code","7bf0629c":"code","d546a3d5":"code","72efc7ec":"code","02619878":"code","3f12ad68":"code","3f492ee8":"code","edf2b827":"code","4b10afda":"code","2dbbf288":"markdown","7b492b76":"markdown","0010e47b":"markdown","c148b436":"markdown","9090347b":"markdown","5c94df79":"markdown","bfa90f56":"markdown","149be875":"markdown","83701163":"markdown","1ae5f670":"markdown","7dd9d148":"markdown","ff6dbb14":"markdown","183c41e8":"markdown"},"source":{"5ac84ef2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session.","546a70c5":"# Import visualization packages\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')","046d3eb2":"\n#  Load data set \ndf  = pd.read_csv('\/kaggle\/input\/minihomeprices.csv')\n\n\n# show first five rows\ndf.head()","1d266d40":"# show information about data set\n\ndf.info()","6098c7c9":"# Descriptiion of our data set\n\ndf.describe().style.background_gradient(cmap='CMRmap')\n","1b3b6906":"#  to know how many null values\n\ndf.isna().sum()","c7b87fa5":"# fill null values with median value\n\ndf['bedrooms'] = df['bedrooms'].fillna( df['bedrooms'].mean() )\n\n#  here we can use inplace=True as well.  both are valid for update data frame\n\ndf.head()","ccfe2978":"# barploat show\n\nplt.figure(figsize=(10, 7))\nplt.title(\"Bedroom wise price increase.\")\n\nsns.barplot('bedrooms', 'price', data=df)\nplt.xlabel('Bedrooms', )\nplt.ylabel('Price')\nplt.show()","20764b28":"# Scatter plot\nplt.figure(figsize=(10, 5))\n\nsns.scatterplot('bedrooms', 'price',data=df)\nplt.title(\"Price vs Bedroom Scatter plot\")\n\nplt.xlabel(\"House Bedrooms\")\nplt.ylabel('House Price')\nplt.show()","d6e52b3e":"plt.figure(figsize=(10, 7))\n\nsns.lmplot(x=\"bedrooms\", y=\"price\", data=df);\nplt.title(\"Price and bedroom wise line plot\")\nplt.show()","666c3e14":"# import model \nfrom sklearn.linear_model import LinearRegression","7107fc6a":"mdl = LinearRegression()","7bf0629c":"#  Set dependent and independent variables\n\nX = df.drop(['price'], axis=1)\ny = df['price']","d546a3d5":"# Change bedrooms data type flaot to int\n\ndf['bedrooms'] = df['bedrooms'].astype('int64')\n\ndf.info()","72efc7ec":"#  shows the variables\nprint(X)\nprint(\"-\" * 25)\nprint(y)","02619878":"#  Fitting Model\n\nmdl.fit( X, y  )","3f12ad68":"# Now custimize prediction testing\n\nmdl.predict([[ 4000, 2, 50 ]])\n# show house price here","3f492ee8":"mdl.coef_","edf2b827":"mdl.intercept_","4b10afda":"#  know score \nscore = mdl.score( X, y )\n\nprint(score * 100)","2dbbf288":"# 3. Data Visualization","7b492b76":"* Here we can see bedrooms and price linearly related, House's Price increased if bedroom size will increase.","0010e47b":"- Show intecept","c148b436":"* we can see here only bedrooms has null values","9090347b":"# 1. Import Dataset\n","5c94df79":"# 4. Model Implementing","bfa90f56":"- Show Coeficient","149be875":"# Prediction \n","83701163":"# 2. Data Analysis","1ae5f670":"--- \n---\n\n<div class=\"text-center\">\n    <h1>That's it Guys,<\/h1>\n    <h1>\ud83d\ude4f<\/h1>\n    \n        \n        I Hope you guys you like and enjoy it, and learn something interesting things from this notebook, \n        \n        Even I learn a lots of things while I'm creating this notebook\n    \n        Keep Learning,\n        Regards,\n        Vikas Ukani.\n    \n<\/div>\n\n---\n---\n\n<img src=\"https:\/\/static.wixstatic.com\/media\/3592ed_5453a1ea302b4c4588413007ac4fcb93~mv2.gif\" align=\"center\" alt=\"Thank You\" style=\"min-height:20%; max-height:20%\" width=\"90%\" \/>\n\n","7dd9d148":"* Now, Create model instance from LinearRegression class","ff6dbb14":"* Now, We are going to fitting the training and testing data","183c41e8":"* Before fitting the model, create X and y for model fitting"}}