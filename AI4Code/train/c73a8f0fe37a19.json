{"cell_type":{"9be273cc":"code","1cea1822":"code","a6c67676":"code","d5957059":"code","c8588385":"code","3fb544e5":"code","c9dfebed":"code","ea67bf48":"code","4a02eca7":"code","e4226c92":"code","45f12922":"code","899fa00c":"code","d07a1223":"code","4cf49cfb":"code","b37193dd":"code","9b17ddc8":"code","0cf59854":"code","f7474f15":"code","85393a85":"code","c98d9c37":"code","151f5bb3":"code","c8cc742b":"code","6d58c680":"code","39c908cf":"code","5a2308af":"code","e50885e6":"code","78d0c246":"code","2842e88a":"code","9cf7c20d":"code","f6e79066":"code","203846dc":"code","53477543":"code","f9735d12":"code","69564c77":"code","85fe3644":"code","1d9e64fd":"markdown","23881f97":"markdown","9af24309":"markdown","6ddf994a":"markdown","0f7f8f2d":"markdown","af849d08":"markdown","75877538":"markdown","8bcf662c":"markdown","7e14eff6":"markdown"},"source":{"9be273cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1cea1822":"diabetes=pd.read_csv(\"..\/input\/diabetescsv\/diabetes.csv\")","a6c67676":"diabetes.describe()","d5957059":"diabetes.head()","c8588385":"diabetes.info()","3fb544e5":"columns=[\"Glucose\",\"BloodPressure\",\"SkinThickness\",\"BMI\",\"Insulin\"]","c9dfebed":"for i in columns:\n    print('Number of zero value of ' + i,diabetes[diabetes[i]==0].shape[0])\n   ","ea67bf48":"for i in columns:\n    diabetes[i]=diabetes[i].replace(0,np.NaN)\n    mean=int(diabetes[i].mean(skipna=True))\n    diabetes[i]=diabetes[i].replace(np.NaN,mean)","4a02eca7":"diabetes[\"Glucose\"].mean()","e4226c92":"diabetes","45f12922":"import matplotlib.pyplot as plt\nimport seaborn as sns","899fa00c":"sns.pairplot(diabetes,hue=\"Outcome\")","d07a1223":"plt.figure(figsize=(10,10))\n\nsns.scatterplot(x=\"Glucose\",y=\"BMI\",hue=\"Outcome\",data=diabetes)\n","4cf49cfb":"personwithdiabetes=diabetes[diabetes[\"Outcome\"]==1]","b37193dd":"personwithoutdiabetes=diabetes[diabetes[\"Outcome\"]==0]","9b17ddc8":"plt.figure(figsize=(6,6))\nsns.kdeplot(x=\"Age\",y=\"Glucose\",data=diabetes,hue=\"Outcome\")","0cf59854":"sns.kdeplot(x=\"Age\",data=personwithdiabetes,label=\"Diabetes patient\",shade=True)\nsns.kdeplot(x=\"Age\",data=personwithoutdiabetes,label=\"Non Diabetes patient\",shade=True)\nplt.legend()","f7474f15":"sns.kdeplot(x=\"Glucose\",data=personwithdiabetes,label=\"Diabetes patient\",shade=True)\nsns.kdeplot(x=\"Glucose\",data=personwithoutdiabetes,label=\" non Diabetes patient\",shade=True)\nplt.legend()","85393a85":"sns.kdeplot(x=\"BMI\",data=personwithdiabetes,label=\"Diabetes patient\",shade=True)\nsns.kdeplot(x=\"BMI\",data=personwithoutdiabetes,label=\" non Diabetes patient\",shade=True)\nplt.legend()","c98d9c37":"from sklearn.model_selection import train_test_split\n","151f5bb3":"x=diabetes[[\"Pregnancies\",\"Glucose\",\"BloodPressure\",\"SkinThickness\",\"BMI\",\"Insulin\",\"DiabetesPedigreeFunction\",\"Age\"]]\ny=diabetes[\"Outcome\"]","c8cc742b":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)","6d58c680":"from sklearn.preprocessing import StandardScaler\n","39c908cf":"st_scal=StandardScaler()\nx_train=st_scal.fit_transform(x_train)\nx_test=st_scal.fit_transform(x_test)","5a2308af":"from sklearn.neighbors import KNeighborsClassifier","e50885e6":"Knn=KNeighborsClassifier(n_neighbors=14,p=2,metric=\"euclidean\")","78d0c246":"Knn.fit(x_train,y_train\n       )","2842e88a":"prediction=Knn.predict(x_test)","9cf7c20d":"from sklearn.metrics import confusion_matrix,classification_report,f1_score","f6e79066":"confusion_mat=confusion_matrix(y_test,prediction)\n\nconfusion_mat","203846dc":"print(classification_report(y_test,prediction))","53477543":"print(f1_score(y_test,prediction))","f9735d12":"from sklearn.metrics import plot_confusion_matrix,accuracy_score\nplt.figure(figsize=(6,6))\nsns.heatmap(confusion_mat,annot=True,fmt=\"g\")","69564c77":"error_rate = []\nfor i in range(1,30):\n knn = KNeighborsClassifier(n_neighbors=i)\n knn.fit(x_train,y_train)\n predct = knn.predict(x_test)\n error_rate.append(np.mean(predct != y_test))\nprint(error_rate)\n\nplt.figure(figsize=(10,6))\nplt.plot(range(1,30),error_rate,color='blue', linestyle='dashed', \n         marker='o',markerfacecolor='green', markersize=8)\nplt.title('Error Rate vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Error Rate')\nprint(\"Minimum error:\",min(error_rate),\"at K =\",error_rate.index(min(error_rate)))","85fe3644":"acc = []\n# Will take some time\nfrom sklearn import metrics\nfor i in range(1,40):\n    neigh = KNeighborsClassifier(n_neighbors = i).fit(x_train,y_train)\n    yhat = neigh.predict(x_test)\n    acc.append(metrics.f1_score(y_test, yhat))\n    \nplt.figure(figsize=(10,6))\nplt.plot(range(1,40),acc,color = 'blue',linestyle='dashed', \n         marker='o',markerfacecolor='red', markersize=10)\nplt.title('accuracy vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Accuracy')\nprint(\"Maximum accuracy:\",max(acc),\"at K =\",acc.index(max(acc)))","1d9e64fd":"# Using KNN ","23881f97":"Loading our datasets\n","9af24309":"Classifying whether a person has diabetes or not using KNN algorithm.","6ddf994a":"So ,we take 14  as k value to improve accuracy of model.","0f7f8f2d":"Looking inside diabetes datasets\n","af849d08":" # **Data cleaning**\n**Since, some of the column have zero value such as BloodPressure,Glucose etc which has no meaning. So we are going to replace such values with mean of their respective columns.**\n\n","75877538":"# Finding Optimal value of k","8bcf662c":"# Splitting data","7e14eff6":"There is no Nan or null value."}}