{"cell_type":{"64dabc21":"code","a4fd8e1a":"code","8cc862b4":"code","8d4f64d6":"code","c7536a9b":"code","4b12fbfb":"code","b7177d4e":"code","bcf63617":"code","b915269e":"code","53ff187d":"code","3e12b5c2":"code","410a4c1d":"code","a301abd2":"code","eacdcb84":"markdown","598ea90f":"markdown","e3c51440":"markdown","7f6621f8":"markdown","4f88d1ea":"markdown"},"source":{"64dabc21":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a4fd8e1a":"import pandas as pd\n\ncars = pd.read_csv('..\/input\/cars-data\/2. Cars Data1.csv')\ncars","8cc862b4":"cars.shape","8d4f64d6":"cars.isnull().sum()","c7536a9b":"cars['Cylinders'].fillna(cars['Cylinders'].mean(),inplace = True)","4b12fbfb":"cars","b7177d4e":"cars.isnull().sum()","bcf63617":"cars['Make'].value_counts()","b915269e":"cars[cars['Origin'].isin(['Asia','Europe'])]","53ff187d":"cars[cars['Weight'] > 4000]","3e12b5c2":"cars[~(cars['Weight'] > 4000)]","410a4c1d":"cars['MPG_City'] = cars['MPG_City'].apply(lambda x:x+3)","a301abd2":"cars","eacdcb84":"> ** Show all the recors where origin is Asia or Europe","598ea90f":"> *Increase all the values of MPG_City column by 3*","e3c51440":"#Find the null values in the dataset. If there is any null value in any column, then fill it with the mean with that column.","7f6621f8":" **>  # Check what are the diff types of Make are there in our dataset.And what is the count(occurance) of each Make in data?","4f88d1ea":"> *Remove all the records (rows) where weight is above 4000*"}}