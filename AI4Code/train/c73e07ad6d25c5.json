{"cell_type":{"b5b496c0":"code","8e464faa":"code","ac747482":"code","a722406d":"code","2cf222ed":"code","10e37738":"code","3d9cf14b":"code","b438868c":"code","799e049b":"code","2604fe1e":"code","6c4b19ed":"code","d43d04a4":"code","66d8532b":"code","ad657d8e":"code","a62d1660":"code","6b024791":"code","dad1599e":"code","214ef242":"code","f70f60e9":"code","4866948b":"code","8fa3a905":"code","17181318":"code","da1dfc79":"code","34c5acf0":"code","e5fac0b5":"code","497a52a9":"code","ce237977":"code","c2f9cceb":"code","267cabcd":"code","609139d6":"code","a9baebb1":"code","740af9e6":"code","23b0146e":"code","1e1ea7c2":"code","f2e0c0df":"code","3143ac6b":"markdown","8f222071":"markdown","53e1d2cb":"markdown","e27e714f":"markdown","cc1d38e9":"markdown","db348569":"markdown","55e20613":"markdown","24728c38":"markdown","23088665":"markdown","d76c161c":"markdown"},"source":{"b5b496c0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","8e464faa":"data_df = pd.read_csv('..\/input\/titanic\/train.csv')","ac747482":"data_df.head(5)","a722406d":"data_df.info()","2cf222ed":"data_df.describe()","10e37738":"data_df.describe(include=['O'])","3d9cf14b":"data_df_corr = data_df.corr()","b438868c":"fig,axes = plt.subplots(1,1,figsize=(10,10))\n\nsns.heatmap(data_df_corr,ax = axes,vmax=1,vmin=-1,annot=True)\n\nplt.show()","799e049b":"sns.distplot(data_df['Age'])","2604fe1e":"data_df_age_survived = data_df[data_df.Survived == 1]['Age'].fillna(-20)\ndata_df_age_not_survived = data_df[data_df.Survived == 0]['Age'].fillna(-20)\ndisplay(data_df_age_survived)\ndisplay(data_df_age_not_survived)\n\n\nfig , ax = plt.subplots(1,1,figsize=(10,5))\n\nsns.distplot(data_df_age_not_survived)\nsns.distplot(data_df_age_survived)\n\nplt.legend(['dead','alive'])\nplt.show()\n\n\nfig , ax = plt.subplots(1,2,figsize=(10,5))\n\nsns.distplot(data_df_age_not_survived,ax=ax[0])\nsns.distplot(data_df_age_survived,ax=ax[1])\nplt.show()","6c4b19ed":"fig,ax = plt.subplots(figsize=(5,5))\n\nsns.countplot(data_df['Sex'])\nax.set_xticklabels(['male','female'])\nplt.show()\n\n#Group\nSexGroup = data_df.groupby('Sex')['Survived'].mean()\ndisplay(SexGroup)\ndisplay(SexGroup.index)\nsns.barplot(x=SexGroup.index,y=SexGroup)\nplt.show()\n\n","d43d04a4":"data_df.groupby('Sex').mean()","66d8532b":"sns.countplot(data_df['Sex'],hue=data_df['Survived'])\nax.set_xticklabels(['male','female'])\nplt.show()","ad657d8e":"fig,ax = plt.subplots(figsize=(5,5))\nsns.countplot(data_df['Pclass'])\nplt.show()","a62d1660":"sns.countplot(data_df['Pclass'],hue=data_df['Survived'])","6b024791":"fig,ax = plt.subplots(1,1,figsize=(7,7))\nsns.boxplot(x=data_df['Pclass'],y=data_df['Fare'],hue=data_df['Survived'])","dad1599e":"sns.countplot(data_df['Embarked'],hue=data_df['Survived'])\nplt.show()\n\nsns.countplot(data_df['Embarked'],hue=data_df['Pclass'])\nplt.show()\n\nfig,ax = plt.subplots(1,1,figsize=(10,5))\nsns.boxplot(data=data_df,x='Embarked',y='Fare',hue=data_df['Pclass'])\nplt.show()","214ef242":"display(data_df['Cabin'].head(10))\ndisplay(data_df['Cabin'].dropna())##\u628anull value \u5148\u4e1f\u6389\ndisplay('ABC'[0])","f70f60e9":"def getfirst(x):\n    return x[0]","4866948b":"#data_df['Cabin'].dropna().apply(getfirst)\ndata_df['Cabin_Title'] = data_df['Cabin'].dropna().apply(lambda x: x[0])#\u628a\u6bcf\u500belement\u7684\u7b2c\u4e00\u500b\u5b57\u53d6\u51fa\u4f86","8fa3a905":"tmp_df = data_df[['Cabin_Title','Survived']].dropna()#\u56e0\u70ba\u8981\u628acabin\u4e0d\u662fnull\u7684row \u7684Survived\u53d6\u51fa\n                                                     #\u6240\u4ee5\u4e00\u6b21\u53d6\u51fa\u5169\u500bcolumn\u4e00\u8d77\u505adropna\ndisplay(tmp_df['Cabin_Title'])\n\n\nsns.countplot(tmp_df['Cabin_Title'],hue=tmp_df['Survived'])\nplt.show()","17181318":"sns.countplot(data_df['Parch'],hue=data_df['Survived'])\nplt.legend(loc='upper right')","da1dfc79":"Parch_Group = data_df.groupby('Parch').mean()['Survived']-0.5\nsns.barplot(data=data_df,x=Parch_Group.index,y=Parch_Group)\nplt.show()\n\nSibSp_Group = data_df.groupby('SibSp').mean()['Survived']-0.5\nsns.barplot(data=data_df,x=SibSp_Group.index,y=SibSp_Group)","34c5acf0":"data_df[data_df['Embarked'].isnull()]","e5fac0b5":"data_df['Embarked'] = data_df['Embarked'].fillna('C')","497a52a9":"data_df[data_df['Embarked'].isnull()]","ce237977":"from sklearn.ensemble import RandomForestClassifier\nmodel =  RandomForestClassifier(random_state=2021)","c2f9cceb":"data_df['Cabin'] = data_df['Cabin'].fillna('Z')\ndata_df['Cabin'] = data_df['Cabin'].apply(lambda x: x[0])\n","267cabcd":"'A,Mr. C Dsdflkl'.split(',')[1].split('.')[0]","609139d6":"def family_feature(df):\n    df['Family'] = df['Parch']+df['SibSp']\n    return df\n\ndef child_feature(df):\n    df['Child'] = df['Age'].apply(lambda x: 1 if (x>=0 and x<18) else 0)\n    return df\n\n\ndef process_Name(df):\n    df['Name_Title']=df['Name'].apply(lambda x: x.split(',')[1].split('.')[0])\n    df.groupby(df['Name_Title'])['Survived'].count().plot.bar()\n    plt.show()\n    return df\n\ndef feature_engineering(df):\n    df = family_feature(df)\n    df = process_Name(df)\n    #df = child_feature(df)\n    return df\n\ndata_df = feature_engineering(data_df)","a9baebb1":"convert_columns = ['Cabin','Sex','Embarked']\n\nfor col in convert_columns:\n    data_df[col] = data_df[col].astype('category').cat.codes    \n\n\n#data_df.head()","740af9e6":"feature_columns = data_df.columns\nfeature_columns = feature_columns.drop(['PassengerId','Survived','Name','Ticket','Cabin_Title'])\nfeature_columns\nfeatures = data_df[feature_columns]\nlabels = data_df['Survived']","23b0146e":"#display(features.info())\nfeatures['Age']=features['Age'].fillna(-30)","1e1ea7c2":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\nX_train,X_test,Y_train,Y_test = train_test_split(features,labels,test_size=0.2,random_state=2021)\n\nmodel.fit(X_train,Y_train)\npreds = model.predict(X_test)\n\nacc = accuracy_score(preds,Y_test)\ndisplay(acc)","f2e0c0df":"test_df = pd.read_csv('..\/input\/titanic\/test.csv')","3143ac6b":"## Create Model","8f222071":"### Embarked","53e1d2cb":"## Age","e27e714f":"## Missing Value ","cc1d38e9":"### Add Family Feature","db348569":"## Sex","55e20613":"## PClass","24728c38":"## Parch","23088665":"### Cabin","d76c161c":"## Fare"}}