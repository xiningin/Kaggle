{"cell_type":{"0b7bbe7d":"code","defd0cf1":"code","4d8e7909":"code","2c38aa81":"code","f8667880":"code","d92f4d83":"code","a0fbe915":"code","94476af8":"code","ade942c6":"code","dbe4a7bb":"markdown"},"source":{"0b7bbe7d":"import numpy as np \nimport pandas as pd \nimport sqlite3\nimport os","defd0cf1":"train = pd.read_csv('\/kaggle\/input\/shopee-product-matching\/train.csv')","4d8e7909":"con = sqlite3.connect(\"data.sqlite\")","2c38aa81":"train['idx'] = [i for i in range(len(train))]\ntrain.to_sql(\"train\", con, if_exists=\"replace\")","f8667880":"pos_query =\"\"\"\nSELECT a.image as anchor, b.image as positive, a.label_group\nFROM train as a\nLEFT JOIN train as b\nON a.label_group = b.label_group \nWHERE a.idx > b.idx AND a.image!=b.image AND a.image_phash != b.image_phash\n\"\"\" \n\npos_pairs = pd.read_sql_query(pos_query, con)\npos_pairs = pos_pairs.set_index('label_group')","d92f4d83":"\ndef sample_negative_pairs(pos_pairs,train):\n\n    label_groups = pos_pairs.index.unique()\n    \n    pos_pairs['negative'] = np.nan\n    \n    for group in label_groups:\n        candidates = train[train['label_group'] != group]['image']\n\n            \n        num_candidates = len(pos_pairs.loc[[group]].index)\n        pos_pairs.loc[[group],'negative'] = np.random.choice(candidates,size=num_candidates)\n        \n    return pos_pairs.dropna()\n","a0fbe915":"anchor_pos_neg = pd.concat([sample_negative_pairs(pos_pairs,train) for i in range(3)])","94476af8":"anchor_pos_neg.to_csv('anchor_pos_neg.csv',index=False)","ade942c6":"anchor_pos_neg.head()","dbe4a7bb":"# Create triplets"}}