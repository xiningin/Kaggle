{"cell_type":{"02810976":"code","e794efe0":"code","f384345b":"code","0f7be5e3":"code","977aa665":"code","85aaf21f":"code","34bbeaa3":"code","f8bb6b3f":"code","7df77706":"code","e40fa3db":"code","05a8ea54":"code","b5368fae":"code","962572bf":"code","548d9d7b":"code","b85cc0b3":"code","42de01e5":"code","a89a0d58":"code","281956b9":"code","ebc666dc":"code","75739a08":"code","9fe3aca8":"code","e24e86c2":"code","5744068e":"code","f655c73a":"code","da2ff094":"code","dfac7410":"code","fc714b49":"code","52a9c1a4":"code","78903209":"code","5e105d56":"code","b24b7c2d":"code","666a4220":"code","e02aae10":"code","e2e502dc":"code","0a7c4488":"code","3052ad7c":"code","b2d62334":"code","6cd8813b":"code","ceed7fe5":"code","3b59dd3f":"code","6f449a2f":"code","b9d9eb21":"code","f2ce6385":"code","b67024fa":"code","4b022fa4":"code","bf9e627d":"code","2dc8792d":"code","0ad376af":"code","bae98f01":"code","4de4d0d4":"code","1f0ebc31":"code","9e5e6412":"code","e8fd1e06":"code","b9d61707":"code","5c30898d":"code","d0e158bb":"code","4020a88e":"code","6a9d50c3":"markdown","ded2af26":"markdown","9a6c34a5":"markdown","d34b45cf":"markdown","a7e719d4":"markdown","824e4dfa":"markdown","5956f4ea":"markdown","accd6635":"markdown","b232d1ba":"markdown","04f53a8b":"markdown","fffd8174":"markdown","49592505":"markdown","983aefc2":"markdown","42a3e088":"markdown","eca66170":"markdown","afe3a4d8":"markdown","7b935112":"markdown","3641bf15":"markdown"},"source":{"02810976":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib.dates import drange\nfrom datetime import date,timedelta\n%matplotlib inline\npd.options.mode.chained_assignment = None\nsns.set(font_scale = 1.2)\nsns.set_style(\"whitegrid\")","e794efe0":"# to2002 - 2002 threshold\n# to2112 - 2112 threshold\n# tod2112 - 2112 threshold on non-classified diffs\ndef cpk_filter(df, to2002=0,to2112=0,tod2112=0):\n    \n    df2002=df[(df['ClfBin']=='2002') & (df['DiffClf']>=to2002)]\n    df2112=df[(df['ClfBin']=='2112') & (df['DiffClf']>=to2112)]\n    dfr=df[df['PKDN']!=df['ClfSC']]\n    dfr2112=dfr[(dfr['PKBin']=='2112') & (dfr['DiffPK']>=tod2112)]\n    dfr2112['PrfClf']=dfr2112['PrfPK']\n    dfr2112['OddsClfR']=dfr2112['OddsPKR']\n    return pd.concat([df2002, df2112,dfr2112], axis=0, ignore_index=True)","f384345b":"bins = [1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7,1.8,1.9,2,2.1,2.2,2.3,2.5,3,4,5,7,10,99999]\nbinlabels = ['<1.1', '<1.2', '<1.3', '<1.4', '<1.5', '<1.6', '<1.7','<1.8','<1.9','<2.0','<2.1','<2.2','<2.3','<2.5','<3.0','<4.0','<5.0','<7.0','<10','>10']\n\nbins_diff = [-10, -0.4, -0.2, 0, 0.01,0.02, 0.03, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 99999]\nbinlabels_diff = ['<-0.4', '<-0.2', '<0', '<0.01', '<0.02', '<0.03', '<0.05', '<0.1', '<0.2', '<0.3', '<0.4', '<0.5', '<0.6', '>0.6']","0f7be5e3":"def calc_res(df):\n    di = {0:'2-0', 1:'0-2',2: '2-1', 3:'1-2'}\n    cols_orig=['Tour','Name_1','Name_2','TourRank','RID','GameD','Year', 'SETS', 'K20', 'K02', 'K21', 'K12', 'ClfSC', 'P_2-0', 'P_0-2', 'P_2-1', 'P_1-2']\n    cols=['Tour','Name_1','Name_2','TourRank','RID','GameD','Year', 'SETS', 'K2-0', 'K0-2', 'K2-1', 'K1-2', 'ClfSC', 'P_2-0', 'P_0-2', 'P_2-1', 'P_1-2']\n\n    df=df[cols_orig]\n    df.columns=cols\n    df['GameD']=pd.to_datetime(df['GameD'])\n    df['Month']=df['GameD'].dt.month\n    df['Weekday']=df['GameD'].dt.weekday_name\n    df['Week']=df['GameD'].dt.week\n    df['S']=df['SETS']\n    df['C']=df['ClfSC']\n    df=pd.get_dummies(df, columns=['S'])\n    df=pd.get_dummies(df, columns=['C'])\n    df['C']=1\n    df['ResClf']=np.where(df['SETS']==df['ClfSC'],1,0)\n    df['ClfBin']=np.where(df['ClfSC']<2,'2002','2112')\n    df['SETS']=df['SETS'].map(di)\n    df['ClfSC']=df['ClfSC'].map(di)\n    # Should remove low ranked tours\n    df=df[df['TourRank']>0]\n\n    # Wager on regressor prediction\n    df['OddsClf']=df.apply(lambda r: 1\/r[f'K{r.ClfSC}'], axis = 1)\n    df['OddsClfR']=pd.cut(df['OddsClf'], bins=bins, labels=binlabels)\n    df['PrfClf']=np.where(df['ResClf']==1,df['OddsClf']-1,-1)\n    df['DiffClf']=df.apply(lambda r: r[f'P_{r.ClfSC}']-r[f'K{r.ClfSC}'], axis = 1)\n    df['DiffClfR']=pd.cut(df['DiffClf'], bins=bins_diff, labels=binlabels_diff)\n\n    # Wager on P-K diffs\n    df['PKD2-0']=df['P_2-0']-df['K2-0']\n    df['PKD0-2']=df['P_0-2']-df['K0-2']\n    df['PKD2-1']=df['P_2-1']-df['K2-1']\n    df['PKD1-2']=df['P_1-2']-df['K1-2']\n    df['PKDN']=df.apply(lambda r: ['2-0','0-2','2-1','1-2'][np.argmax([r['PKD2-0'],r['PKD0-2'],r['PKD2-1'],r['PKD1-2']])], axis = 1)\n    # Filter out already classified picks\n    # df=df[df['PKDN']!=df['ClfSC']]\n    df['ResPK']=np.where(df['SETS']==df['PKDN'],1,0)\n    df['OddsPK']=df.apply(lambda r: 1\/r[f'K{r.PKDN}'], axis = 1)\n    df['OddsPKR']=pd.cut(df['OddsPK'], bins=bins, labels=binlabels)\n    df['PrfPK']=np.where(df['ResPK']==1,df['OddsPK']-1,-1)\n    df['DiffPK']=df.apply(lambda r: r[f'PKD{r.PKDN}'], axis = 1)\n    df['DiffPKR']=pd.cut(df['DiffPK'], bins=bins_diff, labels=binlabels_diff)\n    df['PKBin']=np.where((df['PKDN']=='2-0')|(df['PKDN']=='0-2'),'2002','2112')\n    return df ","977aa665":"def calc_total(target, hue, df):\n    total=df.groupby(['Year',f'{target}Bin',f'{hue}{target}R']).sum()[[f'Prf{target}',f'Res{target}','C']]\n    total.reset_index(inplace=True)\n    total[f'Roi{target}']=total[f'Prf{target}']\/total['C']*100\n    total[f'Acc{target}']=total[f'Res{target}']\/total['C']*100\n\n    ytotal=total.groupby(['Year',f'{target}Bin']).sum()[[f'Prf{target}',f'Res{target}','C']]\n    ytotal[f'Roi{target}']=ytotal[f'Prf{target}']\/ytotal['C']*100\n    ytotal[f'Acc{target}']=ytotal[f'Res{target}']\/ytotal['C']*100\n    return (total, ytotal)","85aaf21f":"dfw=calc_res(pd.read_csv('..\/input\/tennis-20112019\/wta_picks.csv'))\ndfa=calc_res(pd.read_csv('..\/input\/tennis-20112019\/atp_picks.csv'))\n# Should remove Grand Slams in ATP\ndfa=dfa[dfa['TourRank']<4]","34bbeaa3":"total=dfw.groupby(['ClfBin']).sum()[['C','ResClf']]\ntotal['Acc']=total['ResClf']\/total['C']*100\ntotal","f8bb6b3f":"total=dfa.groupby(['ClfBin']).sum()[['C','ResClf']]\ntotal['Acc']=total['ResClf']\/total['C']*100\ntotal","7df77706":"cw=len(dfw)\ndfw.dropna(subset=['K2-0','K0-2','K2-1','K1-2'], inplace=True)\nca=len(dfa)\ndfa.dropna(subset=['K2-0','K0-2','K2-1','K1-2'], inplace=True)\nprint('Removed about {:.0%} WTA and {:.0%} ATP matches.'.format((cw-len(dfw))\/cw,(ca-len(dfa))\/ca))","e40fa3db":"total=dfw.groupby(['ClfBin']).sum()[['C','ResClf']]\ntotal['Acc']=total['ResClf']\/total['C']*100\ntotal","05a8ea54":"total=dfa.groupby(['ClfBin']).sum()[['C','ResClf']]\ntotal['Acc']=total['ResClf']\/total['C']*100\ntotal","b5368fae":"target='Clf'\ntw,ytw=calc_total(target, 'Odds', dfw)\nytw","962572bf":"ta,yta=calc_total(target, 'Odds', dfa)\nyta","548d9d7b":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfClf', hue='OddsClfR', data=tw[tw['ClfBin']=='2002']);\ngr.set(xlabel=None, ylabel='Profit, units', title='WTA. Profit of 2002 classifier')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","b85cc0b3":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfClf', hue='OddsClfR', data=ta[ta['ClfBin']=='2002']);\ngr.set(xlabel=None, ylabel='Profit, units', title='ATP. Profit of 2002 classifier')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","42de01e5":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfClf', hue='OddsClfR', data=tw[tw['ClfBin']=='2112']);\ngr.set(xlabel=None, ylabel='Profit, units', title='WTA. Profit of 2112 classifier')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","a89a0d58":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfClf', hue='OddsClfR', data=ta[ta['ClfBin']=='2112']);\ngr.set(xlabel=None, ylabel='Profit, units', title='ATP. Profit of 2112 classifier')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","281956b9":"tw,ytw=calc_total(target, 'Diff', dfw)\nta,yta=calc_total(target, 'Diff', dfa)","ebc666dc":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfClf', hue='DiffClfR', data=tw[tw['ClfBin']=='2002']);\ngr.set(xlabel=None, ylabel='Profit, units', title='WTA. Profit of 2002 classifier')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","75739a08":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='RoiClf', hue='DiffClfR', data=tw[tw['ClfBin']=='2002']);\ngr.set(xlabel=None, ylabel='ROI, %', title='WTA. ROI of 2002 classifier')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","9fe3aca8":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfClf', hue='DiffClfR', data=ta[ta['ClfBin']=='2002']);\ngr.set(xlabel=None, ylabel='Profit, units', title='ATP. Profit of 2002 classifier')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","e24e86c2":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='RoiClf', hue='DiffClfR', data=ta[ta['ClfBin']=='2002']);\ngr.set(xlabel=None, ylabel='ROI, %', title='ATP. ROI of 2002 classifier')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","5744068e":"print('There are {} WTA and {} ATP picks with Diff>30%, {} WTA \/ {} ATP - with Diff>40%'.format(len(dfw[(dfw['ClfBin']=='2002') & (dfw['DiffClf']>=0.3)]),len(dfa[(dfa['ClfBin']=='2002') & (dfa['DiffClf']>=0.3)]),len(dfw[(dfw['ClfBin']=='2002') & (dfw['DiffClf']>=0.4)]),len(dfa[(dfa['ClfBin']=='2002') & (dfa['DiffClf']>=0.4)])))","f655c73a":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfClf', hue='DiffClfR', data=tw[tw['ClfBin']=='2112']);\ngr.set(xlabel=None, ylabel='Profit, units', title='WTA. Profit of 2112 classifier')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","da2ff094":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='RoiClf', hue='DiffClfR', data=tw[tw['ClfBin']=='2112']);\ngr.set(xlabel=None, ylabel='ROI, %', title='WTA. ROI of 2112 classifier')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","dfac7410":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfClf', hue='DiffClfR', data=ta[ta['ClfBin']=='2112']);\ngr.set(xlabel=None, ylabel='Profit, units', title='ATP. Profit of 2112 classifier')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","fc714b49":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='RoiClf', hue='DiffClfR', data=ta[ta['ClfBin']=='2112']);\ngr.set(xlabel=None, ylabel='ROI, %', title='ATP. ROI of 2112 classifier')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","52a9c1a4":"print('There are {} WTA with Diff>=5%, and {} ATP - with Diff>=20%'.format(len(dfw[(dfw['ClfBin']=='2112') & (dfw['DiffClf']>=0.05)]),len(dfa[(dfa['ClfBin']=='2112') & (dfa['DiffClf']>=0.2)])))","78903209":"# Filter out already classified picks\ndfrw=dfw[dfw['PKDN']!=dfw['ClfSC']]\ndfra=dfa[dfa['PKDN']!=dfa['ClfSC']]","5e105d56":"target='PK'\ntw,ytw=calc_total(target, 'Odds', dfrw)\nytw","b24b7c2d":"ta,yta=calc_total(target, 'Odds', dfra)\nyta","666a4220":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfPK', hue='OddsPKR', data=tw[tw['PKBin']=='2002']);\ngr.set(xlabel=None, ylabel='Profit, units', title='WTA. Profit of 2002 on non-classified diffs')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","e02aae10":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfPK', hue='OddsPKR', data=ta[ta['PKBin']=='2002']);\ngr.set(xlabel=None, ylabel='Profit, units', title='ATP. Profit of 2002 on non-classified diffs')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","e2e502dc":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfPK', hue='OddsPKR', data=tw[tw['PKBin']=='2112']);\ngr.set(xlabel=None, ylabel='Profit, units', title='WTA. Profit of 2112 on non-classified diffs')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","0a7c4488":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfPK', hue='OddsPKR', data=ta[ta['PKBin']=='2112']);\ngr.set(xlabel=None, ylabel='Profit, units', title='ATP. Profit of 2112 on non-classified diffs')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","3052ad7c":"tw,ytw=calc_total(target, 'Diff', dfrw)\nta,yta=calc_total(target, 'Diff', dfra)","b2d62334":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfPK', hue='DiffPKR', data=tw[tw['PKBin']=='2002']);\ngr.set(xlabel=None, ylabel='Profit, units', title='WTA. Profit of 2002 on non-classified diffs')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","6cd8813b":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfPK', hue='DiffPKR', data=ta[ta['PKBin']=='2002']);\ngr.set(xlabel=None, ylabel='Profit, units', title='ATP. Profit of 2002 on non-classified diffs')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","ceed7fe5":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfPK', hue='DiffPKR', data=tw[tw['PKBin']=='2112']);\ngr.set(xlabel=None, ylabel='Profit, units', title='WTA. Profit of 2112 on non-classified diffs')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","3b59dd3f":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='RoiPK', hue='DiffPKR', data=tw[tw['PKBin']=='2112']);\ngr.set(xlabel=None, ylabel='ROI, %', title='WTA. ROI of 2112 on non-classified diffs')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","6f449a2f":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfPK', hue='DiffPKR', data=ta[ta['PKBin']=='2112']);\ngr.set(xlabel=None, ylabel='Profit, units', title='ATP. Profit of 2112 on non-classified diffs')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","b9d9eb21":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='RoiPK', hue='DiffPKR', data=ta[ta['PKBin']=='2112']);\ngr.set(xlabel=None, ylabel='ROI, %', title='ATP. ROI of 2112 on non-classified diffs')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","f2ce6385":"print('Huh, we can grab some profit even here, just set threshold to 10%. There are {} such picks for WTA and {} ATP.'.format(len(dfrw[(dfrw['PKBin']=='2112') & (dfrw['DiffPK']>=0.1)]),len(dfra[(dfra['PKBin']=='2112') & (dfra['DiffPK']>=0.1)])))","b67024fa":"def ytotal(df):\n    ytotal=df.groupby(['Year']).sum()[['PrfClf','ResClf','C']]\n    ytotal['RoiClf']=ytotal['PrfClf']\/ytotal['C']*100\n    ytotal['AccClf']=ytotal['ResClf']\/ytotal['C']*100\n    return ytotal","4b022fa4":"df31=pd.concat([cpk_filter(dfw, to2002=0.3,to2112=0.05,tod2112=0.1), cpk_filter(dfa, to2002=0.3,to2112=0.2,tod2112=0.1)], axis=0, ignore_index=True)\nytotal(df31)","bf9e627d":"df32=pd.concat([cpk_filter(dfw, to2002=0.3,to2112=0.05,tod2112=0.2), cpk_filter(dfa, to2002=0.3,to2112=0.2,tod2112=0.2)], axis=0, ignore_index=True)\nytotal(df32)","2dc8792d":"df41=pd.concat([cpk_filter(dfw, to2002=0.4,to2112=0.05,tod2112=0.1), cpk_filter(dfa, to2002=0.4,to2112=0.2,tod2112=0.1)], axis=0, ignore_index=True)\nytotal(df41)","0ad376af":"df42=pd.concat([cpk_filter(dfw, to2002=0.4,to2112=0.05,tod2112=0.2), cpk_filter(dfa, to2002=0.4,to2112=0.2,tod2112=0.2)], axis=0, ignore_index=True)\nytotal(df42)","bae98f01":"fig, ax = plt.subplots(figsize=(15,6))\ngr=sns.barplot(x='Year', y='PrfClf', hue='OddsClfR', data=df32);\ngr.set(xlabel=None, ylabel='Profit, units', title='Profit of filtered picks')\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0.)\nplt.show()","4de4d0d4":"df32.sort_values(by=['GameD'], inplace=True, ascending=True)\ntotal=df32.groupby(['GameD']).sum()[['PrfClf','ResClf','C']]\ntotal.reset_index(inplace=True)\ntotal['mod']=total['GameD'].dt.strftime('%m-%d')\ntotal['wn']=total['GameD'].dt.strftime('%W')\ntotal['Year']=total['GameD'].dt.year\ndft=pd.DataFrame(np.sort(total['mod'].unique()), columns=['mod'])\ndft=pd.merge(dft, total[total['Year']==2017][['mod','PrfClf','ResClf','C']], how='left', on=['mod'])\ndft=pd.merge(dft, total[total['Year']==2018][['mod','PrfClf','ResClf','C']], how='left', on=['mod'], suffixes=('_2017','_2018'))\ndft=pd.merge(dft, total[total['Year']==2019][['mod','PrfClf','ResClf','C']], how='left', on=['mod'])\ndft['SUM_2017']=dft['PrfClf_2017'].cumsum()\ndft['SUM_2018']=dft['PrfClf_2018'].cumsum()\ndft['SUM_2019']=dft['PrfClf'].cumsum()\ndft['m']=dft['mod'].str[:2]","1f0ebc31":"dfplot=dft[['m','SUM_2017','SUM_2018','SUM_2019']]\nfig, ax = plt.subplots(figsize=(18,6))\ngr=sns.lineplot(x='m', y='value', hue='Year', data=pd.melt(dfplot, ['m'], var_name='Year'), linewidth=2)\ngr.set(xlabel=None, ylabel='Profit, units', title='Cumulative profits for three years')\nplt.show()","9e5e6412":"fig, ax = plt.subplots(figsize=(18,6))\nax=sns.barplot(x='mod', y='PrfClf_2017', data=dft,color='b')\nax.set(xlabel=None, ylabel='Profit, units', title='Daily profit in 2017')\nplt.show()","e8fd1e06":"fig, ax = plt.subplots(figsize=(18,6))\nax=sns.barplot(x='mod', y='C_2017', data=dft,color='b')\nax.set(xlabel=None, ylabel='# of picks', title='Picks amount per day in 2017')\nplt.show()","b9d61707":"fig, ax = plt.subplots(figsize=(18,6))\nax=sns.barplot(x='mod', y='PrfClf_2018', data=dft,color='b')\nax.set(xlabel=None, ylabel='Profit, units', title='Daily profit in 2018')\nplt.show()","5c30898d":"fig, ax = plt.subplots(figsize=(18,6))\nax=sns.barplot(x='mod', y='C_2018', data=dft,color='b')\nax.set(xlabel=None, ylabel='# of picks', title='Picks amount per day in 2018')\nplt.show()","d0e158bb":"fig, ax = plt.subplots(figsize=(18,6))\nax=sns.barplot(x='mod', y='PrfClf', data=dft,color='b')\nax.set(xlabel=None, ylabel='Profit, units', title='Daily profit in 2019')\nplt.show()","4020a88e":"fig, ax = plt.subplots(figsize=(18,6))\nax=sns.barplot(x='mod', y='C', data=dft,color='b')\nax.set(xlabel=None, ylabel='# of picks', title='Picks amount per day in 2019')\nplt.show()","6a9d50c3":"On 2112 we should wager everything. I am not sure if we can do something better with result.\n\nLet look on difference, the mirror os confidence.","ded2af26":"## Based on P-K difference on unclassified picks\nThe hypothesis: if our probability works well, it is worth to wager on outcomes with the highest difference even if it not classified by predicted probability.","9a6c34a5":"### There is no interesting on the other classifiers (Month, WeekDay, TourRank and RID).\n\n## Apply all filters","d34b45cf":"### 2002 on Diffs","a7e719d4":"I choose df32 here, because of balance between picks amount and profit (remember removed 30% to 40 % picks with no odds from dataset).","824e4dfa":"Looks totally awful!\n\nLet look on size of differences.","5956f4ea":"WTA 2112 picks shows huge ROI, so here is a small range of loss diffs. So, probably it is worth to set 5% threshold here.","accd6635":"With ATP 2112 picks good threshold is 20%","b232d1ba":"### 2112 on Diffs","04f53a8b":"Well, for 2002 accuracy is not very well, but >80% for 2112 is terrific. Really, it looks unreal. I have no idea why model is so good for 2-1 and 1-2 outcomes. Probably I made a mistake somewhere. Well, forward analysis will show the truth in 2020 season. Also, note that there are much much less picks on 2112 than on 2002. \n\nLet's remove data without odds:","fffd8174":"Huge ROI on 2112 and around zero on 2002. Look for the loss in 2019, probably bookies start to predict more accurately.","49592505":"Difference >30% shows profit. And there is the same tendency increasing ROI with increasing sureness. This is a good sign.","983aefc2":"Just to memorize: for last three years was maximum 30 picks daily, and loss not more then 5 units.","42a3e088":"What a beauty caterpillars!","eca66170":"The situation became worse, but 2112 is still good. There are few picks on 2112 generated, so it is better to increase picks amount. Let's see what we can do with that.\n\n## Based on our classifier (max probability)","afe3a4d8":"# Tennis with Catboost: Exact Score\nI never thought to wager on Exact Score market, because it has some limitations:\n \n1. Some good bookies don't provide ES lines;\n2. Most ITF tours are too small, so no one has lines;\n3. Bookies margin is bigger then on moneyline;\n4. Low limits.\n\nBut as an experiment with CatBoost multi-classification it is a good market to choose.\n\nFirst of all you should know the dataset is prepared for analyse only 3-sets matches on Exact Score market. So tours with rank>3 should be removed. Also it is necessary to remove low ranket tours (tour rank==0), because there are few odds presented on such matches.\nThe dataset has been randomized, so there is no difference between 2-0 to 0-2 and 2-1 to 1-2 outcomes. I made binary classifier 2002 for 2-0 \/ 0-2 and 2112 for 2-1 \/ 1-2.\n\nThis is the fourth part of \"Tennis with Catboost\" series, you can find others here:\n\nI.  [Tennis Prediction with Catboost](http:\/\/www.kaggle.com\/hwaitt\/tennis-prediction-with-catboost)\n\nII. [Tennis with Catboost: Moneylines](http:\/\/www.kaggle.com\/hwaitt\/tennis-with-catboost-moneylines)\n\nIII.[Tennis with Catboost: Totals](http:\/\/www.kaggle.com\/hwaitt\/tennis-with-catboost-totals)","7b935112":"Poor profit in 2019 year, so we should be be carefull here","3641bf15":"Nothing helps with 2002"}}