{"cell_type":{"bc2777fe":"code","96dee02d":"code","d689dffb":"code","07660565":"code","b74974e8":"code","f4793c66":"code","43dffb7a":"code","498e3da7":"code","0edcded6":"code","edd94b91":"code","39f95353":"code","d4b7fb95":"code","5d3f1857":"code","4c6ae6cd":"code","1d611c37":"code","4675037a":"code","27ea8819":"code","36296e11":"code","5d7997d4":"code","ce94e5bc":"code","a1e186ea":"code","eec6ff85":"code","16c3111a":"code","a2c4b7ed":"code","e81551ef":"code","50df8487":"markdown","ed0acef1":"markdown","fa2b42cc":"markdown","262ae0ae":"markdown","4dd7e154":"markdown","1da5f265":"markdown","2ee694b5":"markdown","cfb97427":"markdown","462524bf":"markdown"},"source":{"bc2777fe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","96dee02d":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","d689dffb":"path=r\"\/kaggle\/input\/palmer-archipelago-antarctica-penguin-data\/penguins_size.csv\"\n\ndf=pd.read_csv(path)","07660565":"df.head()","b74974e8":"df.info()","f4793c66":"df.describe()","43dffb7a":"sns.countplot(x=df['species'])","498e3da7":"sns.countplot(x=df['species'],hue=df['sex'])","0edcded6":"sns.jointplot(x='culmen_length_mm', y='culmen_depth_mm',data=df)","edd94b91":"sns.scatterplot(x='culmen_length_mm', y='culmen_depth_mm',data=df,hue='species')","39f95353":"sns.countplot(x=df['species'],hue=df['island'])","d4b7fb95":"df=pd.get_dummies(df,columns=['sex','island'],drop_first=True)","5d3f1857":"df.head()","4c6ae6cd":"df.info()","1d611c37":"sns.heatmap(df.isnull())","4675037a":"df=df.fillna(0)","27ea8819":"sns.heatmap(df.isnull())","36296e11":"from sklearn.preprocessing import StandardScaler","5d7997d4":"scale=StandardScaler()\nscale.fit(df.drop(['species'],axis=1))\ntransformed=scale.transform(df.drop(['species'],axis=1))\ndf_scaled=pd.DataFrame(transformed,columns=df.columns[1:])\n","ce94e5bc":"df_scaled.info()","a1e186ea":"X=df_scaled\ny=df['species']\n\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.33,random_state=101)","eec6ff85":"from sklearn.neighbors import KNeighborsClassifier\n\nknn=KNeighborsClassifier(n_neighbors=1)\n\nknn.fit(x_train,y_train)\nout1=knn.predict(x_test)","16c3111a":"from sklearn.metrics import classification_report,confusion_matrix\n\nprint(classification_report(y_test,out1))\nprint(confusion_matrix(y_test,out1))","a2c4b7ed":"error_rate=[]\n\nfor i in range(1,20):\n    knn_i=KNeighborsClassifier(n_neighbors=i)\n    knn_i.fit(x_train,y_train)\n    out_i=knn_i.predict(x_test)\n    error_rate.append(np.mean(out_i!=y_test))","e81551ef":"plt.plot(range(1,20),error_rate,marker='x',markerfacecolor='red')\nplt.xlabel('# KNeighbors')\nplt.ylabel('Error_rate')\nplt.title('Best KNeighbors')","50df8487":"# Standardizing Data","ed0acef1":"Lets see the pattern of error rate for some values of n_neighbors","fa2b42cc":"# EDA","262ae0ae":"WOW we got it right at first attempt only","4dd7e154":"# Converting categorical data","1da5f265":"# Checking for missing values","2ee694b5":"Hence this graph depicts that error_rate is \"ZERO\" for values like 1,3,5,7 and then is zero for values after 7\nSo the value of K neighbors in our model could be any odd number till 7 and any number after that giving 100% efficienct model","cfb97427":"# Hence our model predicts output with 100% efficiency","462524bf":"# Lets Build Our Model"}}