{"cell_type":{"0723dbc6":"code","3808ac8a":"code","92c70b62":"code","4e131d1c":"code","85d725d7":"code","a0f9621c":"code","dc89b0f9":"code","3f8185fe":"code","2379ea16":"code","f93d3eb2":"code","13243d9a":"code","06fa44c8":"code","a2549eff":"code","6114b19f":"code","0ea41712":"code","3d767573":"code","02e91672":"code","fe893782":"code","a07f3bf3":"code","da08457a":"code","8931d407":"code","a73def8f":"code","a43a59d5":"code","17905f49":"code","c7c12ca6":"code","5a8e07fe":"code","50bdf676":"code","7c5cebc2":"code","4bbcffb0":"code","821ebe39":"code","0405b293":"markdown","f4c7eb76":"markdown","7d1c3be0":"markdown","9bddfe1b":"markdown","79286450":"markdown","b9ab19fc":"markdown","8870893b":"markdown","1d12d10d":"markdown","c50d3626":"markdown","2504a81d":"markdown"},"source":{"0723dbc6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","3808ac8a":"from sklearn.datasets import load_breast_cancer","92c70b62":"cancer= load_breast_cancer()","4e131d1c":"# What this dataset include:\ncancer.keys()","85d725d7":"# Show the description for the dataset:\nprint(cancer['DESCR'])","a0f9621c":"#make a datafarme for the features:\ndf_features= pd.DataFrame(cancer['data'], columns=cancer['feature_names'])","dc89b0f9":"#Feature DataFrame Overview:\ndf_features.head()","3f8185fe":"df_features.info()","2379ea16":"# Target Column:\ncancer['target']","f93d3eb2":"cancer['target'].shape","13243d9a":"df_features.shape","06fa44c8":"X= df_features\ny= cancer['target']","a2549eff":"from sklearn.model_selection import train_test_split","6114b19f":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","0ea41712":"from sklearn.svm import SVC","3d767573":"model= SVC()","02e91672":"model.fit(X_train, y_train)","fe893782":"y_pred= model.predict(X_test)","a07f3bf3":"from sklearn.metrics import classification_report, confusion_matrix","da08457a":"confusion_matrix(y_test, y_pred)","8931d407":"print(classification_report(y_test, y_pred))","a73def8f":"#help(SVC)","a43a59d5":"from sklearn.model_selection import GridSearchCV","17905f49":"svm = SVC()\nparam_grid = {'C':[0.01,0.1,1, 10, 100, 1000],'gamma':[1, 0.1, 0.01, 0.001, 0.0001],'kernel':['linear','rbf']}\ngrid = GridSearchCV(svm,param_grid, cv=5)","c7c12ca6":"grid.fit(X_train, y_train)","5a8e07fe":"grid.best_estimator_","50bdf676":"grid.best_params_","7c5cebc2":"y_pred_grid= grid.predict(X_test)","4bbcffb0":"confusion_matrix(y_test, y_pred_grid)","821ebe39":"print(classification_report(y_test, y_pred_grid))","0405b293":"## Step4: EDA ","f4c7eb76":"## Step6: Split the Dataset to Train and Test","7d1c3be0":"# Hyperparameters:\n**Choosing the best hyperparameters through GridSearchCV**","9bddfe1b":"## Step8: Predicting Test data","79286450":"## Import all Necessary Libraries","b9ab19fc":"## Stpe2: Import the Dataset","8870893b":"## Step3: Data Overview","1d12d10d":"## Step7: Train the Model","c50d3626":"## Step5: Determine the Features and Lable","2504a81d":"## Step9: Evaluating the Model"}}