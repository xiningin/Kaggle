{"cell_type":{"60530ca9":"code","7cbad107":"code","6f0257ec":"code","3b07de0f":"code","0f1464f6":"code","96084c85":"code","88cdf30e":"code","25530156":"code","e02d3950":"code","2799b3b8":"code","ab8b4774":"code","38136ce6":"code","9c89f3a2":"code","64561f40":"code","f19f4d36":"code","365d6bae":"code","d8314b4d":"code","d66b9d49":"code","0bd26076":"code","482608c7":"code","be084408":"code","8184ba0f":"code","08a98e74":"markdown","fc26bc2a":"markdown","76654b35":"markdown","6da024dc":"markdown","b0ca0f64":"markdown","4da55cf1":"markdown","e2c8393a":"markdown","9a62dff0":"markdown","665dea6a":"markdown","b14393ae":"markdown"},"source":{"60530ca9":"import pandas as pd\nimport numpy as np\nimport random as rnd\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import  train_test_split\nfrom sklearn.metrics import classification_report","7cbad107":"train_df=pd.read_csv(r\"..\/input\/bank-train.csv\")\ntest_df=pd.read_csv(r\"..\/input\/bank-test.csv\")\ncombine = [train_df, test_df]","6f0257ec":"print(train_df.columns.values)","3b07de0f":"train_df.head()","0f1464f6":"train_df.info()\nprint('_'*40)\ntest_df.info()","96084c85":"train_df.describe()","88cdf30e":"train = train_df.drop(['id', 'duration'], axis=1)\ntest = test_df.drop(['id', 'duration'], axis=1)\ncombine = [train_df, test_df]","25530156":"train = pd.get_dummies(train)\ntest = pd.get_dummies(test)\ncombine = [train, test]","e02d3950":"train_corr = train.corr()","2799b3b8":"train_corr.sort_values('y').head(40)","ab8b4774":"y=train[\"y\"]","38136ce6":"X=train[[\"nr.employed\",\"pdays\",\"euribor3m\",\"emp.var.rate\",\"poutcome_nonexistent\",\"contact_telephone\",\"cons.price.idx\",\"month_may\",\"default_unknown\",\"job_blue-collar\",\"campaign\",\"education_basic.9y\",\"marital_married\",\"job_services\",\"month_jul\",\"education_basic.6y\",\"day_of_week_mon\",\"job_entrepreneur\",\"month_nov\",\"housing_no\",\"marital_divorced\",\"education_basic.4y\",\"education_high.school\",\"job_housemaid\",\"month_aug\",\"day_of_week_fri\",\"month_jun\",\"job_self-employed\",\"job_unknown\",\"loan_yes\",\"job_technician\",\"job_management\",\"education_professional.course\",\"loan_no\",\"marital_unknown\",\"loan_unknown\",\"housing_unknown\",\"day_of_week_wed\",\"education_illiterate\"]]","9c89f3a2":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.05, random_state=42)  ","64561f40":"svc = SVC()\nsvc.fit(X_train, y_train)\ny_pred = svc.predict(X_test)\n\nfrom sklearn.metrics import f1_score\nprint(\"F1 score SVC Model: \", f1_score(y_test, y_pred, average='weighted'))","f19f4d36":"Xfor_testset = test[[\"nr.employed\",\"pdays\",\"euribor3m\",\"emp.var.rate\",\"poutcome_nonexistent\",\"contact_telephone\",\"cons.price.idx\",\"month_may\",\"default_unknown\",\"job_blue-collar\",\"campaign\",\"education_basic.9y\",\"marital_married\",\"job_services\",\"month_jul\",\"education_basic.6y\",\"day_of_week_mon\",\"job_entrepreneur\",\"month_nov\",\"housing_no\",\"marital_divorced\",\"education_basic.4y\",\"education_high.school\",\"job_housemaid\",\"month_aug\",\"day_of_week_fri\",\"month_jun\",\"job_self-employed\",\"job_unknown\",\"loan_yes\",\"job_technician\",\"job_management\",\"education_professional.course\",\"loan_no\",\"marital_unknown\",\"loan_unknown\",\"housing_unknown\",\"day_of_week_wed\",\"education_illiterate\"]]","365d6bae":"predictions = svc.predict(Xfor_testset)\nsubmission = pd.concat([test_df.id, pd.Series(predictions)], axis = 1)\nsubmission.columns = ['id', 'Predicted']\nsubmission.to_csv('submission.csv', index=False)\n","d8314b4d":"logreg = LogisticRegression()\nlogreg.fit(X_train, y_train)\ny_pred = logreg.predict(X_test)\n\nprint(\"F1 score LogReg Model: \", f1_score(y_test, y_pred, average='weighted'))","d66b9d49":"predictions = logreg.predict(Xfor_testset)\nsubmission = pd.concat([test_df.id, pd.Series(predictions)], axis = 1)\nsubmission.columns = ['id', 'Predicted']\nsubmission.to_csv('submission.csv', index=False)\n ","0bd26076":"random_forest = RandomForestClassifier(n_estimators=100)\nrandom_forest.fit(X_train, y_train)\ny_pred = random_forest.predict(X_test)\n\nprint(\"F1 score Random Forest Model: \", f1_score(y_test, y_pred, average='weighted'))","482608c7":"predictions = random_forest.predict(Xfor_testset)\nsubmission = pd.concat([test_df.id, pd.Series(predictions)], axis = 1)\nsubmission.columns = ['id', 'Predicted']\nsubmission.to_csv('submission.csv', index=False)\n","be084408":"linear_svc = LinearSVC()\nlinear_svc.fit(X_train, y_train)\ny_pred = linear_svc.predict(X_test)\n\nprint(\"Linear SVC Model:\")\nprint(\"F1 score Linear SVC Model: \", f1_score(y_test, y_pred, average='weighted'))","8184ba0f":"predictions = linear_svc.predict(Xfor_testset)\nsubmission = pd.concat([test_df.id, pd.Series(predictions)], axis = 1)\nsubmission.columns = ['id', 'Predicted']\nsubmission.to_csv('submission.csv', index=False) ","08a98e74":"**Random Forest**","fc26bc2a":"Hypothesis - For this project, we considered three different models for our data: \n\n1.   Logistic regression\n2.   Random forests\n3.  Support vector classifier (SVC)\n4. Linear SVC\n\n\n\n","76654b35":"**Logistic Regression**","6da024dc":"**Linear SVC**","b0ca0f64":"We thought the logistic regression would be a good choice for this data set because it classifies variables into one of two categories. LogisticRegression has severls kernels, with radial basis function being the default. We tried linear, but that yielded a lower F1 score, so we decided to stick with RBF.","4da55cf1":"Importing the data:","e2c8393a":"We thought another solid choice for this project would be a Random Forest model. The 'wisdom of the crowd' makes this model especially good when overfitting is a concern, and we wanted to avoid overfitting as much as possible, as there's always the chance that, as we improve our F1 score, the model becomes too specific to the public data used for testing, so this seemed like a good way to offset that.","9a62dff0":"**Support Vector Machine Approach**","665dea6a":"Conclusion:\nIn researching the various options, we found that the it\u2019s difficult to know exactly which model best fits a data set, as it\u2019s hard to reason about high dimensional space. Through trial and error, we found our support vector machine to have the highest success rates in predicting outcomes in our dataset, so we selected that as our solution. Overfitting of the data is also a concern, so our second choice would be a random forest model, as that tends to be resistant to overfitting.","b14393ae":"In our research we found that Support Vector Machines are effective with high dimensional space, which is good for this project because our models used about 40 variables. SVMs are also good at fitting models even when the data is sparse, and many of our entries were 0 after converting to dummy variables, so the SVM seemed like another good choice"}}