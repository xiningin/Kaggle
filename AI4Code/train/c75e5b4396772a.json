{"cell_type":{"da97f2f4":"code","22126f01":"code","e924fd8f":"code","4a97fbfd":"code","21b8c708":"code","4326810a":"code","3434a21b":"code","9eca54cd":"code","94b664f3":"code","7233f196":"markdown","686ad0bf":"markdown","ab88a56e":"markdown","4591ad71":"markdown","9cd86643":"markdown","3fe211f9":"markdown","d26b4758":"markdown","511c96ad":"markdown"},"source":{"da97f2f4":"!pip install rdflib\n!apt-get -y install python-dev graphviz libgraphviz-dev pkg-config\n!pip install pygraphviz","22126f01":"import rdflib\nimport networkx as nx\n%matplotlib inline\nimport matplotlib.pyplot as plt","e924fd8f":"# This takes a while...\ng = rdflib.Graph()\ng.parse('\/kaggle\/input\/covid19-literature-knowledge-graph\/kg.nt', format='nt')","4a97fbfd":"# Number of triples\nprint(len(list(g.triples((None, None, None)))))\n\n#Ppredicates\nprint(len(set(g.predicates())))\n\n# Number of subjects\nprint(len(set(g.subjects())))","21b8c708":"rand_paper = rdflib.URIRef('http:\/\/dx.doi.org\/10.1016\/j.mbs.2013.08.014')\nfor i, (s, p, o) in enumerate(g.triples((rand_paper, None, None))):\n    print(s, p, o)","4326810a":"for s, p, o in g.triples((rand_paper, None, None)):\n    print(s, p, o)","3434a21b":"preds = set()\nfor s, p, o in g.triples((rdflib.URIRef('http:\/\/idlab.github.io\/covid19#bf20dda99538a594eafc258553634fd9195104cb'), None, None)):\n    print(s, p, o)","9eca54cd":"def create_sub_graph(root, depth):\n    # Limit number of hasWords relations to not overcrowd the figure\n    words_cntr = 0\n    \n    # Get all the triples that are maximally 2 hops away from our randomly picked paper\n    objects = set()\n    nx_graph = nx.DiGraph()\n    \n    rdf_subgraph = rdflib.Graph()\n    to_explore = {root}\n    for _ in range(depth):\n        new_explore = set()\n        for node in to_explore:\n            for s, p, o in g.triples((node, None, None)):\n                if 'words' in str(p).lower():\n                    if words_cntr >= 25:\n                        continue\n                    words_cntr += 1\n\n                s_name = str(s).split('\/')[-1][:25]\n                p_name = str(p).split('\/')[-1][:25]\n                o_name = str(o).split('\/')[-1][:25]\n                nx_graph.add_node(s_name, name=s_name)\n                nx_graph.add_node(o_name, name=o_name)\n                nx_graph.add_edge(s_name, o_name, name=p_name)\n                rdf_subgraph.add((s, p, o))\n                \n                new_explore.add(o)\n        to_explore = new_explore\n    return nx_graph, rdf_subgraph\n    \nnx_graph, rdf_subgraph = create_sub_graph(rand_paper, 3)\n        \nplt.figure(figsize=(20, 20))\n_pos = nx.kamada_kawai_layout(nx_graph)\n_ = nx.draw_networkx_nodes(nx_graph, pos=_pos)\n_ = nx.draw_networkx_edges(nx_graph, pos=_pos)\n_ = nx.draw_networkx_labels(nx_graph, pos=_pos, fontsize=8)\nnames = nx.get_edge_attributes(nx_graph, 'name')\n_ = nx.draw_networkx_edge_labels(nx_graph, pos=_pos, edge_labels=names, fontsize=8)","94b664f3":"rdf_subgraph.serialize(destination='sub.ttl', format='turtle')","7233f196":"# Visualise part of the KG","686ad0bf":"# Iterate over triples of a paper","ab88a56e":"**We can distinguish some information about the content of the paper in the top of the figure. Some citation information on the left and author information in the bottom**","4591ad71":"# Working with RDF data in Python\n\nTo work with RDF data in Python, [rdflib](https:\/\/github.com\/RDFLib\/rdflib) can be used.","9cd86643":"# Creating a Knowledge Graph of the COVID-19 literature\n\nThe dataset can be downloaded [here](https:\/\/www.kaggle.com\/group16\/covid19-literature-knowledge-graph).\n\n## What is a Knowledge Graph?\n\nThis dataset provides us with a large collection of papers that deal with the COVID-19 virus. For each paper, different information is provided such as the journal in which it was published, the content of the paper and information about the authors. Additionally, each paper has a number of references to other works. In order to deal with these links between papers, a graph representation is needed. A knowledge graph is a specific type of graph: it is a directed graph with labeled edges. Knowledge graphs allow to unify heteregenous sources of information into a single, standardized format. \n\nA knowledge graph of the COVID literature could look something like:\n<div style=\"text-align:center\"><img src=\"https:\/\/i.imgur.com\/MJ7VeUM.png\" style=\"width: 50%\"\/><\/div>","3fe211f9":"## Mapping to RDF data with [RML.io](https:\/\/rml.io\/)\n<div style=\"text-align:center\">\n    <img src=\"https:\/\/i.imgur.com\/bsA1VWM.png\" style=\"width: 10%; display: inline-block;\"\/> \n    <img src=\"https:\/\/i.imgur.com\/mz95P06.png\" style=\"width: 10%; display: inline-block;\"\/>\n    <img src=\"https:\/\/i.imgur.com\/InjNtFe.png\" style=\"width: 10%; display: inline-block;\"\/>\n<\/div>\nIn order to convert the provided CSV & JSON files to RDF data (the standard for Knowledge Graph representation), we will make use of [RML.io](https:\/\/rml.io\/). RML allows to easily define a mapping from different data formats to RDF data. For an interactive example of how it works, check out [this resource](https:\/\/rml.io\/yarrrml\/matey\/).","d26b4758":"# Get some basic statistics","511c96ad":"# Load the data"}}