{"cell_type":{"cffafd3f":"code","ef7058e8":"code","f9fbcf4a":"code","4db42996":"code","22ba773f":"code","ec7e7eb0":"code","91421c43":"code","22298f93":"code","4e98aad7":"code","834f5fb7":"code","1ef5e72e":"code","9ba4647a":"code","275090b4":"code","f4bd5032":"code","fecc1b77":"code","bdc613f6":"code","4ea2d19a":"code","a3e6499d":"code","10c23046":"code","a73b36dd":"code","ab9063e5":"code","1a5f8b98":"code","ed937495":"code","ac1fe368":"code","54c660ec":"code","708e076a":"code","31912400":"code","aa18cc81":"code","54320d8d":"markdown","971cf356":"markdown","0464fc3c":"markdown","4b7edd2c":"markdown","c0546433":"markdown","225ea4ec":"markdown","03249c06":"markdown","acb918fd":"markdown","1f77a111":"markdown","7ec0bd5d":"markdown","c941a3d6":"markdown","e5329c05":"markdown","9bbb0ca3":"markdown","4ce255d8":"markdown","170c0cf4":"markdown","ec0d6cf9":"markdown","54e665dc":"markdown","994da84f":"markdown"},"source":{"cffafd3f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","ef7058e8":"df = pd.read_csv('..\/input\/Admission_Predict.csv')","f9fbcf4a":"df.info()","4db42996":"df = df.rename(columns={'GRE Score': 'GRE_Score'})\ndf = df.rename(columns={'TOEFL Score': 'TOEFL_Score'})\ndf = df.rename(columns={'University Rating': 'University_Rating'})\ndf = df.rename(columns={'Chance of Admit ': 'Chance_Of_Admit'})\ndf = df.rename(columns={'LOR ': 'LOR'})","22ba773f":"df.isnull().sum()","ec7e7eb0":"df.head()","91421c43":"df.tail()","22298f93":"df.describe()","4e98aad7":"df = df.drop(['Serial No.'], axis=1)","834f5fb7":"fig,ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(df.corr(), ax=ax, annot=True, linewidths=0.05, fmt= '.2f',cmap=\"magma\")\nplt.show()","1ef5e72e":"cor=df.corr()['Chance_Of_Admit'].sort_values(ascending=False)\n# Print the correlations\nprint(cor)","9ba4647a":"print('Not Having Research:',len(df[df.Research == 0]))\nprint('Having Research:',len(df[df.Research == 1]))\ny = len(df[df.Research == 0]),len(df[df.Research == 1])\nx = ['Not Having Research','Having Research']\nplt.bar(x,y)\nplt.title('Research Experience')\nplt.show()\n","275090b4":"explode = (0.1,0)  \nfig1, ax1 = plt.subplots(figsize=(12,7))\nax1.pie(df['Research'].value_counts(), explode=explode,labels=['having_research','no_research'], autopct='%1.1f%%',\n        shadow=True)\n# Equal aspect ratio ensures that pie is drawn as a circle\nax1.axis('equal')  \nplt.tight_layout()\nplt.legend()\nplt.show()","f4bd5032":"y = ([df['TOEFL_Score'].min(),df['TOEFL_Score'].mean(),df['TOEFL_Score'].max()])\nx = ['Worst','Average','Best']\nplt.bar(x,y)\nplt.title('TOEFL Scores')\nplt.xlabel='Level'\nplt.ylabel='TOEFL Score'\nplt.show()","fecc1b77":"sns.scatterplot(data=df,x='GRE_Score',y='TOEFL_Score',hue='Research')","bdc613f6":"y = df.GRE_Score.min(), df.GRE_Score.mean(), df.GRE_Score.max()\nx = ['Worst', 'Average', 'Best']\nplt.bar(x,y)\nplt.title('GRE_Scores')\nplt.ylabel='GRE_Score'\nplt.show()","4ea2d19a":"df.GRE_Score.plot(kind = 'hist', bins=200, figsize=(7,6))\nplt.title('GRE Score')\nplt.show()","a3e6499d":"plt.scatter(df.University_Rating, df.CGPA)\nplt.title('CGPA Scores for University Rating')\nplt.xlabel=('University Rating')\nplt.ylabel=('CGPA')\nplt.show()","10c23046":"sns.scatterplot(data=df,x='GRE_Score', y='CGPA' , hue='CGPA',size='CGPA')","a73b36dd":"sns.scatterplot(data=df, x='GRE_Score', y='TOEFL_Score',size='CGPA')","ab9063e5":"x = df[df['Chance_Of_Admit'] >= 0.75]['University_Rating'].value_counts().head(5)\nplt.title('University Ratings of Candidates with an 75% acceptance chance')\nx.plot(kind='bar',figsize=(15, 10))\nplt.xlabel=('University Rating')\nplt.ylabel=('Candidates')\nplt.show()","1a5f8b98":"sns.scatterplot(x=df.CGPA, y=df.SOP,hue=df.SOP)","ed937495":"sns.scatterplot(x=df.GRE_Score, y=df.SOP,hue=df.SOP)","ac1fe368":"df[(df['Chance_Of_Admit']>0.90)].mean().reset_index()","54c660ec":"y = df[\"Chance_Of_Admit\"].values\nx = df.drop([\"Chance_Of_Admit\"],axis=1)\n\n# separating train (80%) and test (%20) sets\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_test,y_train, y_test = train_test_split(x,y,test_size = 0.20,random_state = 20)","708e076a":"from sklearn.linear_model import LinearRegression\nlinear = LinearRegression()\nlinear.fit(x_train,y_train)\ny_head_linear = linear.predict(x_test)\n\nprint(\"real value of y_test[1]: \" + str(y_test[1]) + \" -> the predict: \" + str(linear.predict(x_test.iloc[[1],:])))\nprint(\"real value of y_test[2]: \" + str(y_test[2]) + \" -> the predict: \" + str(linear.predict(x_test.iloc[[2],:])))\n\nfrom sklearn.metrics import r2_score\nprint(\"r_square score: \", r2_score(y_test,y_head_linear))\n\ny_head_linear_train = linear.predict(x_train)\nprint(\"r_square score (train dataset): \", r2_score(y_train,y_head_linear_train))","31912400":"Score=['337','118','4','4.5','4.5','9.65','1']\nScore=pd.DataFrame(Score).T\nchance=linear.predict(Score)\nchance\n","aa18cc81":"from sklearn.ensemble import RandomForestRegressor\nrandomforest = RandomForestRegressor(n_estimators = 100, random_state = 20)\nrandomforest.fit(x_train,y_train)\ny_head_randomforest = randomforest.predict(x_test) \n\nfrom sklearn.metrics import r2_score\nprint(\"r_square score: \", r2_score(y_test,y_head_randomforest))\nprint(\"real value of y_test[1]: \" + str(y_test[1]) + \" -> the predict: \" + str(randomforest.predict(x_test.iloc[[1],:])))\nprint(\"real value of y_test[2]: \" + str(y_test[2]) + \" -> the predict: \" + str(randomforest.predict(x_test.iloc[[2],:])))\n\n\ny_head_randomforest_train = randomforest.predict(x_train)\nprint(\"r_square score (train dataset): \", r2_score(y_train,y_head_randomforest_train))","54320d8d":"# <font color=seablue>INTRODUCTION<\/font>\n\n### The purpose of the project is to find out whether students will get there choice of college or not??\n\n# <font color= seablue> Dataset<\/font>\n\n### The Dataset contain the following columns:\n\n* GRE Scores (290 to 340) (min to max values)\n* TOEFL Scores (92 to 120)\n* University Rating (1 to 5)\n* Statement of Purpose (1 to 5)\n* Letter of Recommendation Strength (1 to 5)\n* Undergraduate CGPA (6.8 to 9.92)\n* Research Experience (0 or 1)\n* Chance of Admit (0.34 to 0.97)\n\n### <font color= seablue> Importing Libraries and Reading the Dataset<\/font>","971cf356":"### <font color= seablue> Good, there is no null values. And all the valuess are numeric<\/font>","0464fc3c":"* RandomForestRegressor","4b7edd2c":"#### <font color= seablue> Having research or not?<\/font>\n* The majority of the candidates in the dataset have research experience.\n* And Candidates having research are more likely to get admission","c0546433":"* ### Linear Regression","225ea4ec":"### <font color=seablue> GRE Score<\/font>\n*   We can see in the histogram below that there is           density of students scores between 310 and 330. Having     score more than that would be a positive sign for         getting admission.","03249c06":"## <font color=seablue>Importing machine learning libraries <\/font> \n* Here we are applying many machine learning alogrithms like\n* Linear Regression\n* Random Forest Regression\n* Decision Tree Regression\n* ### Here we first spliting the dataset into test and train in the ratio 80:20","acb918fd":"* ### As we see below only linear regression perform well","1f77a111":"* Same aplicable on GRE score","7ec0bd5d":"### <font color= seablue> Loading the dataset and making glimpse<\/font>","c941a3d6":"### <font color=seablue> CGPA Evaluation <\/font>\n* As CGPA increases, University rating aslo increases","e5329c05":"* Candidates who graduated from good universities are\n  more fortunate to be accepted.","9bbb0ca3":"* Students with high CGPA scores are likely to have high SOP score","4ce255d8":"### Also rename the columns","170c0cf4":"* ### Passing value and checking output","ec0d6cf9":"### <font color= seablue> As we can clearly see serial no. is not of use, so we are going to delete it.\n* GRE Score, TOEFL SCORE, CGPA are the 3 most important features<\/font>\n","54e665dc":"* Students having high GRE Scores, having high CGPA Scores also","994da84f":"* For having a 90% Chance to get admission one should have GRE=333.61,TOEFL=116.28,CGPA=9.53 .If you get scores more than this then your chances of admission are very good."}}