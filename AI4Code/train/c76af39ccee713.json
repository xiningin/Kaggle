{"cell_type":{"4630a81f":"code","11b23511":"code","184bff82":"code","612020f6":"code","4675210f":"code","22d6a987":"code","ae349a4b":"code","89978451":"code","39b4c092":"code","e27a0a8d":"code","93ec7bde":"code","3ccc0949":"markdown","f54b01af":"markdown","ad000577":"markdown","1a05793a":"markdown","4d9a9065":"markdown","2cbbd1a8":"markdown","ec2d10b1":"markdown","f665ee6a":"markdown","e6775873":"markdown","2a8f48f4":"markdown","42263d99":"markdown","ab0054b3":"markdown","deec6071":"markdown"},"source":{"4630a81f":"import numpy as np\nimport cv2\nimport random\nimport math\nimport time, os\nfrom PIL import Image, ImageEnhance\nfrom matplotlib import pyplot as plt\nfrom glob import glob\n\n%matplotlib inline","11b23511":"nrows, ncols = 4, 8\n\nfig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=(20, 20))\n\nfor i,fname in enumerate(np.random.choice(glob('..\/input\/pku-autonomous-driving\/train_images\/*'), nrows*ncols)):\n    img = Image.open(fname)\n    axes[i\/\/ncols, i%ncols].imshow(img)\n    axes[i\/\/ncols, i%ncols].axis('off')\n\nplt.subplots_adjust(left=0.1, bottom=0.7, right=0.9, top=0.9,  wspace=0.01, hspace=0.1)","184bff82":"nrows, ncols = 4, 8\nseed = np.random.randint(1, 2019)\nprint('seed=', seed)\nnp.random.seed(seed)\n\nfig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=(20, 20))\n\nfor i,fname in enumerate(np.random.choice(glob('..\/input\/pku-autonomous-driving\/test_images\/*'), nrows*ncols)):\n    img = Image.open(fname)\n    axes[i\/\/ncols, i%ncols].imshow(img)\n    axes[i\/\/ncols, i%ncols].axis('off')\n    axes[i\/\/ncols, i%ncols].set_title(fname.split('\/')[-1][:-4])\n\nplt.subplots_adjust(left=0.1, bottom=0.7, right=0.9, top=0.9, wspace=0.01, hspace=0.2)","612020f6":"# img = cv2.imread('..\/input\/pku-autonomous-driving\/test_images\/ID_23495df5e.jpg')\n# img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n# fig = plt.figure(figsize=(8,8))\n# plt.imshow(img)","4675210f":"fname_list = ['..\/input\/pku-autonomous-driving\/test_images\/ID_73094e19c.jpg', \n              '..\/input\/pku-autonomous-driving\/test_images\/ID_d4cd0361c.jpg',\n              '..\/input\/pku-autonomous-driving\/test_images\/ID_ff99f8c4b.jpg', \n              '..\/input\/pku-autonomous-driving\/test_images\/ID_23495df5e.jpg',  \n             ]\n\nfig, axes = plt.subplots(nrows=1, ncols=4, figsize=(20, 10))\n\nfor i,ax in enumerate(axes):\n    fname = fname_list[i]\n    img = cv2.imread(fname)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    ax.imshow(img)\n    ax.axis('off')\n\nplt.subplots_adjust(left=0.1, bottom=0.7, right=0.7, top=0.9, wspace=0.05, hspace=0.2)","22d6a987":"fname_list = ['..\/input\/pku-autonomous-driving\/test_images\/ID_349fe3d94.jpg', \n              '..\/input\/pku-autonomous-driving\/test_images\/ID_ea29783ac.jpg',\n              '..\/input\/pku-autonomous-driving\/test_images\/ID_fec6066ea.jpg', \n              '..\/input\/pku-autonomous-driving\/test_images\/ID_38aaf4faa.jpg',  \n             ]\n\nfig, axes = plt.subplots(nrows=1, ncols=4, figsize=(20, 10))\n\nfor i,ax in enumerate(axes):\n    fname = fname_list[i]\n    img = cv2.imread(fname)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    ax.imshow(img)\n    ax.axis('off')\n\nplt.subplots_adjust(left=0.1, bottom=0.7, right=0.7, top=0.9, wspace=0.05, hspace=0.2)","ae349a4b":"fname_list = ['..\/input\/pku-autonomous-driving\/test_images\/ID_b2d1b80e3.jpg', \n              '..\/input\/pku-autonomous-driving\/test_images\/ID_3970b0062.jpg',\n              '..\/input\/pku-autonomous-driving\/test_images\/ID_b185c63d9.jpg', \n              '..\/input\/pku-autonomous-driving\/test_images\/ID_08b7d6f4a.jpg',  \n             ]\n\nfig, axes = plt.subplots(nrows=1, ncols=4, figsize=(20, 10))\n\nfor i,ax in enumerate(axes):\n    fname = fname_list[i]\n    img = cv2.imread(fname)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    ax.imshow(img)\n    ax.axis('off')\n\nplt.subplots_adjust(left=0.1, bottom=0.7, right=0.7, top=0.9, wspace=0.05, hspace=0.2)","89978451":"seed = np.random.randint(1, 2019)\nprint('seed=', seed)\nnp.random.seed(seed)\n\nfname_list = np.random.choice(glob('..\/input\/pku-autonomous-driving\/train_images\/*'), 4)\n\nfig, axes = plt.subplots(nrows=1, ncols=4, figsize=(20, 10))\n\nfor i,ax in enumerate(axes):\n    fname = fname_list[i]\n    img = Image.open(fname)\n    ##add contrast here\n    enh = ImageEnhance.Contrast(img)\n    img_enh = enh.enhance(np.random.uniform(1.5, 2))#PIL.Image\n    img_enh = np.asarray(img_enh)\n    img_enh = (img_enh\/255).astype('float32')\n    ##plot\n    ax.imshow(img_enh)\n    ax.axis('off')\n\nplt.subplots_adjust(left=0.1, bottom=0.7, right=0.7, top=0.9, wspace=0.05, hspace=0.2)","39b4c092":"seed = np.random.randint(1, 2019)\nprint('seed=', seed)\nnp.random.seed(seed)\n\nfname_list = np.random.choice(glob('..\/input\/pku-autonomous-driving\/train_images\/*'), 4)\n\nfig, axes = plt.subplots(nrows=1, ncols=4, figsize=(20, 10))\n\nfor i,ax in enumerate(axes):\n    fname = fname_list[i]\n    img = Image.open(fname)\n    ##add Brightness here\n    enh = ImageEnhance.Brightness(img)\n    img_enh = enh.enhance(np.random.uniform(0.5, 1.0))#PIL.Image\n    img_enh = np.asarray(img_enh)\n    img_enh = (img_enh\/255).astype('float32')\n    ##plot\n    ax.imshow(img_enh)\n    ax.axis('off')\n\nplt.subplots_adjust(left=0.1, bottom=0.7, right=0.7, top=0.9, wspace=0.05, hspace=0.2)","e27a0a8d":"def add_noise(image):\n    \"\"\"gauss noise\"\"\"\n    row,col,ch= image.shape\n    mean = 0\n    var = np.random.random()*0.01 #0.001~0.01\n    sigma = var**0.5\n    gauss = np.random.normal(mean,sigma,(row,col,ch))\n    gauss = gauss.reshape(row,col,ch)\n    noisy = image + gauss\n    noisy = np.clip(noisy, 0, 1)\n    return noisy","93ec7bde":"seed = np.random.randint(1, 2019)\nprint('seed=', seed)\nnp.random.seed(seed)\n\nfname_list = np.random.choice(glob('..\/input\/pku-autonomous-driving\/train_images\/*'), 4)\n\nfig, axes = plt.subplots(nrows=1, ncols=4, figsize=(20, 10))\n\nfor i,ax in enumerate(axes):\n    fname = fname_list[i]\n    img = plt.imread(fname)\n    img = (img\/255).astype('float32')\n    ##add noise here\n    img_enh = add_noise(img)#gauss\n    ##plot\n    ax.imshow(img_enh)\n    ax.axis('off')\n\nplt.subplots_adjust(left=0.1, bottom=0.7, right=0.7, top=0.9, wspace=0.05, hspace=0.2)","3ccc0949":"## What is the purpose of this notebook?\nThere is difference between train images and test images, I will do the following analysis.\n- visualizing train images and test images, comparing their distributions, found a few main differences\n- adding image augmentation methods onto train images\n- comparing augmented train images with test images","f54b01af":"## visualize test_images\nTune the random seed to randomly browse the test images","ad000577":"## visualize train_images","1a05793a":"### 1. contrast","4d9a9065":"### 4. TODO: color jittering","2cbbd1a8":"### 3. noise","ec2d10b1":"### 3. add noise","f665ee6a":"### 2. brightness","e6775873":"## Add augmentations on train images","2a8f48f4":"### What next?\nIt is always helpful to have training data distribution similar to test data, hence we could try training with image augmentations from this notebook and see if it helps model generalization on the testset.","42263d99":"### 2. brightness","ab0054b3":"## ...found four train-test differences\nThe following are found in the test images and **NOT found in most of the train images**, which cound be manully added.\n1. contrast\n2. brightness\n3. noise\n4. TODO: color jittering","deec6071":"### 1. contrast"}}