{"cell_type":{"64e6420c":"code","b36c217a":"code","37a97309":"code","3d782242":"code","38162911":"code","da84424f":"code","a2782cb6":"code","ef9c01e6":"code","9ef6878f":"code","fb837a33":"code","b494d8c4":"code","900bcd3d":"code","b7d2df67":"code","05d73fee":"code","182c5127":"code","17facb39":"code","9c8b28d3":"code","7cb4b08b":"code","d940e652":"code","356e07b1":"markdown","6759c053":"markdown","670aa328":"markdown","5885eb79":"markdown","c47d4d01":"markdown","aa240ef1":"markdown","14b96b64":"markdown","6569538a":"markdown","466a5965":"markdown","6c6a2c61":"markdown","c7f29e80":"markdown"},"source":{"64e6420c":"# importing libraries\n\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom tensorflow import keras\nfrom keras.preprocessing.image import ImageDataGenerator as Imgen\nfrom keras.models import Model,Sequential\nfrom keras.layers import Input,Conv2D,MaxPooling2D,Dropout,Flatten,Dense,GlobalAveragePooling2D,BatchNormalization\nfrom keras.callbacks import EarlyStopping,ModelCheckpoint\n\nfrom sklearn.metrics import confusion_matrix,classification_report","b36c217a":"traingen = Imgen(rescale=1.\/255,\n                shear_range = 0.2,\n                zoom_range = 0.2,\n                width_shift_range = 0.2,\n                height_shift_range = 0.2,\n                fill_mode=\"nearest\",\n                validation_split=0.15)\n\n\ntestgen = Imgen(rescale=1.\/255)\n","37a97309":"trainds = traingen.flow_from_directory(\"..\/input\/gender-classification-dataset\/Training\",\n                                      target_size=(96,96),\n                                       seed=123,\n                                       batch_size=32,\n                                       subset=\"training\"\n                                      )\nvalds = traingen.flow_from_directory(\"..\/input\/gender-classification-dataset\/Training\",\n                                      target_size=(96,96),\n                                       seed=123,\n                                       batch_size=32,\n                                       subset=\"validation\"\n                                      )\ntestds = testgen.flow_from_directory(\"..\/input\/gender-classification-dataset\/Validation\",\n                                    target_size=(96,96),\n                                    seed=123,\n                                    batch_size=32,\n                                    shuffle=False)","3d782242":"c = trainds.class_indices\nclasses = list(c.keys())\nclasses","38162911":"plt.figure(figsize=[20,8])\nsns.countplot(x=trainds.classes);","da84424f":"x,y = next(trainds)\n\n# function to plot images\ndef plotImages(x,y):\n    plt.figure(figsize=[15,11])\n    for i in range(16):\n        plt.subplot(4,4,i+1)\n        plt.imshow(x[i])\n        plt.title(classes[np.argmax(y[i])])\n        plt.axis(\"off\")\n    plt.show()","a2782cb6":"plotImages(x,y)","ef9c01e6":"image_input = Input(shape=(96,96,3))\n\nx = Conv2D(32,(3,3),activation = \"relu\")(image_input)\nx = BatchNormalization()(x)\nx = MaxPooling2D((2,2))(x)\nx = Dropout(0.2)(x)\n\nx = Conv2D(64,(3,3),activation = \"relu\")(x)\nx = BatchNormalization()(x)\nx = MaxPooling2D((2,2))(x)\nx = Dropout(0.2)(x)\n\nx = Conv2D(128,(3,3),activation = \"relu\")(x)\nx = BatchNormalization()(x)\nx = MaxPooling2D((2,2))(x)\nx = Dropout(0.2)(x)\n\nx = Flatten()(x)\n\nx = Dense(256,activation=\"relu\")(x)\nx = BatchNormalization()(x)\nx = Dropout(0.5)(x)\n\nimage_output = Dense(2,activation=\"softmax\")(x)\n\nmodel = Model(image_input,image_output)","9ef6878f":"model.summary()","fb837a33":"model.compile(optimizer=\"adam\",loss=\"categorical_crossentropy\",metrics=[\"accuracy\"])","b494d8c4":"my_calls = [EarlyStopping(monitor=\"val_accuracy\",patience=3),\n            ModelCheckpoint(\"Model.h5\",verbose= 1 ,save_best_only=True)]","900bcd3d":"hist = model.fit(trainds,epochs=22,validation_data=valds,callbacks=my_calls)","b7d2df67":"model.evaluate(testds)","05d73fee":"plt.figure(figsize=(15,6))\n\nplt.subplot(1,2,1)\nplt.plot(hist.epoch,hist.history['accuracy'],label = 'Training')\nplt.plot(hist.epoch,hist.history['val_accuracy'],label = 'validation')\n\nplt.title(\"Accuracy\")\nplt.legend()\n\nplt.subplot(1,2,2)\nplt.plot(hist.epoch,hist.history['loss'],label = 'Training')\nplt.plot(hist.epoch,hist.history['val_loss'],label = 'validation')\n\nplt.title(\"Loss\")\nplt.legend()\nplt.show()","182c5127":"pred = model.predict(testds,verbose=1)","17facb39":"predicted,confidence = [np.argmax(i) for i in pred],[np.round((max(i)*100),2) for i in pred]","9c8b28d3":"y_test = testds.classes","7cb4b08b":"print(classification_report(predicted,y_test))","d940e652":"plt.figure(figsize=[12,6])\nsns.heatmap(confusion_matrix(predicted,y_test),annot=True,fmt=\"d\",cmap=\"Blues\");","356e07b1":"**Predictions**","6759c053":"**Dpendencies**","670aa328":"**Test**","5885eb79":"## **MODEL**","c47d4d01":"## Gender Classification","aa240ef1":"**Data generation**","14b96b64":"**Distribution of classes**","6569538a":"**Some Images**","466a5965":"**Classification Report**","6c6a2c61":"**Confusion Matrix**","c7f29e80":"**Training**"}}