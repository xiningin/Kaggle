{"cell_type":{"2d50188c":"code","20c8e306":"code","963e169b":"code","aea5ddca":"code","0d180954":"code","5284f84c":"code","ddae281a":"code","21c65ec5":"markdown","5ccf67a9":"markdown","2e29c320":"markdown","ece17011":"markdown","40ccf260":"markdown"},"source":{"2d50188c":"# As per the \"evaluation\" page:\nimport re\ndef jaccard_similarity(s1, s2):\n    l1 = s1.split(\" \")\n    l2 = s2.split(\" \")    \n    intersection = len(list(set(l1).intersection(l2)))\n    union = (len(l1) + len(l2)) - intersection\n    return float(intersection) \/ union\n\ndef clean_text(txt):\n    return re.sub('[^A-Za-z0-9]+', ' ', str(txt).lower()).strip()    ","20c8e306":"import pandas as pd\ntrain = pd.read_csv(\"\/kaggle\/input\/coleridgeinitiative-show-us-the-data\/train.csv\")\ntrain.head(2)","963e169b":"(train['dataset_label'].apply(clean_text) == train.cleaned_label).all()","aea5ddca":"train[train['dataset_label'].apply(clean_text) != train.cleaned_label].head(2)","0d180954":"train['dataset_label'].apply(clean_text).iloc[436]","5284f84c":"train.cleaned_label.iloc[436]","ddae281a":"jaccard_similarity(train['dataset_label'].apply(clean_text).iloc[436], train.cleaned_label.iloc[436])","21c65ec5":"Wait, what? Isn't that strange?\n\nLet's investigate further ...","5ccf67a9":"Mhh, almost the same, but not _exactly_ the same:","2e29c320":"Be aware! And good luck with the competition! \ud83c\udfc6","ece17011":"Hey guys, just noticed that \n\n(I haven't found nothing on the [discussion](https:\/\/www.kaggle.com\/c\/coleridgeinitiative-show-us-the-data\/discussion) tab, if it's a \"repost\", sorry for that!)","40ccf260":"According to the [data](https:\/\/www.kaggle.com\/c\/coleridgeinitiative-show-us-the-data\/data) page, the `cleaned_label` column is `dataset_label` as passed through the clean_text function from the Evaluation page ..."}}