{"cell_type":{"361cbd9a":"code","d65ee3aa":"code","89aa82e5":"code","8808b724":"code","20912864":"code","01452573":"code","52e029fb":"code","4dde369a":"code","405f2f15":"code","60708a6b":"code","0b8ab38e":"code","a008fc29":"code","3a84794f":"code","597f3cab":"code","06d72765":"code","0bbeb11b":"code","6e5820a1":"code","98c022f1":"code","50662d3b":"code","8c282c59":"code","b9e3d6d5":"code","4ee75948":"code","2959c9a3":"code","a551244d":"code","e9fca13a":"code","0c9d8b8c":"code","2070f919":"code","eb069ada":"code","f6d2078b":"code","557f4b55":"code","697276bd":"code","3bffbc54":"code","7049b133":"code","dd43a9c6":"code","585fdba0":"code","d8bec009":"code","fa57f61e":"code","113e9603":"code","3a0b4b55":"code","8e60f979":"code","450db53c":"code","1d4a2140":"code","c01e67c2":"code","49653310":"code","4b672e6f":"code","ce557cdc":"code","647979c9":"code","8f11436b":"code","b1cc85dd":"code","5bb27af3":"code","3f71060b":"code","cb84155a":"code","c8f1e0a0":"code","0372a748":"code","c464b9fd":"code","532ffdbf":"code","260d6c50":"code","83ad76f1":"code","c6bb9d84":"code","8e45fbe4":"code","63836e36":"code","4d91ce9e":"code","67b2fc8e":"code","c5655a16":"code","9ae57cd6":"code","f3ab5dfb":"code","f5af29ee":"code","c2eac5b1":"code","51deb854":"code","869224fb":"code","606d635b":"code","42f2031a":"code","e1309951":"code","6a7c625e":"code","16d98b93":"code","db6355e9":"code","5f0ffd44":"code","704b2a51":"code","e05a21e7":"code","0abdc3b9":"code","840373f0":"code","982966ae":"code","c8c7ff89":"code","89765975":"code","ec5b0b6f":"code","0a1ae869":"code","d8435166":"code","c754f1ad":"code","279bb230":"code","817ad722":"code","d76b9f31":"code","ff626a3d":"code","c5054818":"code","69a14503":"code","20d9bf0f":"code","3eaff5c6":"markdown","da76f5ba":"markdown","2c645b48":"markdown","0561243a":"markdown","6b9c4bfb":"markdown","f3f8a88e":"markdown","efee5f4f":"markdown","65a4430c":"markdown","72b85d8e":"markdown","aec75c0f":"markdown","dc3b3ec0":"markdown","92b56fb3":"markdown","326ea560":"markdown","ed035745":"markdown","f46af79b":"markdown","e6346703":"markdown","c8938c4f":"markdown","72358e5c":"markdown","3b04ec1e":"markdown","5f8d8252":"markdown","dd1aa003":"markdown","cad7da72":"markdown","ff0b63e4":"markdown","b6ad43fd":"markdown","1a62aae1":"markdown","b8889eec":"markdown","5681ae7d":"markdown","7ae0dd05":"markdown","241aee10":"markdown"},"source":{"361cbd9a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# import matplotlib\nimport matplotlib.pyplot as plt\n# import seaborn\nimport seaborn as sns\n# import sklearn\nimport sklearn\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nsns.set()\n\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d65ee3aa":"wine = pd.read_csv('..\/input\/winequality-red.csv')\nwine.head()","89aa82e5":"wine.info()","8808b724":"wine.describe()","20912864":"from sklearn.model_selection import StratifiedShuffleSplit\n\n# split the data based on the wine quality\nsplit = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)\n\nfor train_index, test_index in split.split(wine, wine[\"quality\"]):\n    strat_train_set = wine.loc[train_index]\n    strat_test_set = wine.loc[test_index]","01452573":"strat_train_set.shape","52e029fb":"strat_test_set.shape","4dde369a":"wine_strat = strat_train_set.copy()","405f2f15":"wine_strat.quality.value_counts()","60708a6b":"wine_strat.var()","0b8ab38e":"wine_strat.corr()","a008fc29":"plt.figure(figsize=(10,5))\n\n\nplt.scatter(x='free sulfur dioxide', y='total sulfur dioxide', c='quality', data=wine_strat)\nplt.legend();","3a84794f":"plt.figure(figsize=(10,5))\n\nplt.scatter(x='density', y='fixed acidity', c='quality', data=wine_strat)\nplt.legend();","597f3cab":"from pandas.plotting import scatter_matrix\n\nattributes = [\"density\", \"fixed acidity\", \"free sulfur dioxide\",\"total sulfur dioxide\"]\nscatter_matrix(wine_strat[attributes], figsize=(16, 10));","06d72765":"wine_strat.hist(figsize=(10,10));","0bbeb11b":"wine_strat.alcohol.plot(kind='box',figsize=(10,10));","6e5820a1":"wine_strat['fixed acidity'].plot(kind='box',figsize=(10,10));","98c022f1":"wine_strat['volatile acidity'].plot(kind='box',figsize=(10,10));","50662d3b":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'total sulfur dioxide', data = wine);","8c282c59":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'free sulfur dioxide', data = wine);","b9e3d6d5":"fig = plt.figure(figsize = (10,6))\n\nsns.barplot(x = 'quality', y = 'fixed acidity', data = wine);","4ee75948":"fig = plt.figure(figsize = (10,6))\n\nwine_quality_density = wine.loc[:,['quality', 'density']]\n\nwine_quality_density['density'] = np.log(wine_quality_density['density'])\n\nsns.barplot(x = 'quality', y = 'density', data = wine_quality_density);","2959c9a3":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'citric acid', data = wine);","a551244d":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'chlorides', data = wine);","e9fca13a":"fig = plt.figure(figsize = (10,6))\n\nwine_quality_ph = wine.loc[:,['quality', 'pH']].copy()\n\nwine_quality_ph['pH'] = np.log(wine_quality_ph['pH'])\n\nsns.barplot(x = 'quality', y = 'pH', data = wine_quality_ph);","0c9d8b8c":"wine_train = strat_train_set.drop(columns=['quality'], axis=1).copy()\nwine_train_labels = strat_train_set[\"quality\"].copy()","2070f919":"wine_test = strat_test_set.drop(columns=['quality'], axis=1).copy()\nwine_test_labels = strat_test_set[\"quality\"].copy()","eb069ada":"wine_train['total sulfur dioxide'] = np.log(wine_train['total sulfur dioxide'])\nwine_test['total sulfur dioxide'] = np.log(wine_test['total sulfur dioxide'])\n\nwine_train['pH'] = np.log(wine_train['pH'])\nwine_test['pH'] = np.log(wine_test['pH'])\n\nwine_train['density'] = np.log(wine_train['density'])\nwine_test['density'] = np.log(wine_test['density'])","f6d2078b":"wine_train.var()","557f4b55":"wine_train.head()","697276bd":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.svm import SVC\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline","3bffbc54":"# create StandardScaler\nst = StandardScaler()\n\nwine_train_scaled = st.fit_transform(wine_train)\nwine_test_scaled = st.fit_transform(wine_test)","7049b133":"lr = LogisticRegression(multi_class='multinomial', solver='lbfgs', max_iter=1000)\n\nlr.fit(wine_train_scaled, wine_train_labels)\n\nlr.score(wine_train_scaled, wine_train_labels)","dd43a9c6":"lr.score(wine_test_scaled, wine_test_labels)","585fdba0":"rfc = RandomForestClassifier(n_estimators=10)\n\nrfc.fit(wine_train_scaled, wine_train_labels)\n\nrfc.score(wine_train_scaled, wine_train_labels)","d8bec009":"rfc.score(wine_test_scaled, wine_test_labels)","fa57f61e":"tree = DecisionTreeClassifier()\n\ntree.fit(wine_train, wine_train_labels)\n\ntree.score(wine_train, wine_train_labels)","113e9603":"tree.score(wine_test, wine_test_labels)","3a0b4b55":"# feature importances\nimportances = tree.feature_importances_\nimportances","8e60f979":"indices = np.argsort(importances)[::-1]\n\nnames = [wine_train.columns[i] for i in indices]\nnames","450db53c":"knc = KNeighborsClassifier()\n\nknc.fit(wine_train_scaled, wine_train_labels)\n\nknc.score(wine_train_scaled, wine_train_labels)","1d4a2140":"knc.score(wine_test_scaled, wine_test_labels)","c01e67c2":"# Bad = 0 and good = 1\nwine_train_labels = np.where(wine_train_labels > 6.5, 1, 0)\nwine_test_labels = np.where(wine_test_labels > 6.5, 1, 0)","49653310":"wine_train_labels.sum()","4b672e6f":"wine_test_labels.sum()","ce557cdc":"lr = LogisticRegression(solver='lbfgs', max_iter=100)\n\nlr.fit(wine_train_scaled, wine_train_labels)\n\nlr.score(wine_train_scaled, wine_train_labels)","647979c9":"lr.score(wine_test_scaled, wine_test_labels)\n# overfitting?","8f11436b":"from sklearn.metrics import classification_report\n\ny_pred_lr = lr.predict(wine_test_scaled)\n\nprint(classification_report(wine_test_labels, y_pred_lr, target_names=['bad', 'good']))","b1cc85dd":"from sklearn.metrics import accuracy_score\nfrom sklearn.metrics import recall_score\n\naccuracy_score(wine_test_labels, y_pred_lr), recall_score(wine_test_labels, y_pred_lr)","5bb27af3":"svc = SVC()\n\nsvc.fit(wine_train_scaled, wine_train_labels)\n\nsvc.score(wine_train_scaled, wine_train_labels)","3f71060b":"svc.score(wine_test_scaled, wine_test_labels)","cb84155a":"y_pred_svc = svc.predict(wine_test_scaled)","c8f1e0a0":"print(classification_report(wine_test_labels, y_pred_svc, target_names=['bad', 'good']))","0372a748":"from sklearn.svm import LinearSVC\n\nlsvc = LinearSVC(max_iter=1000)\n\nlsvc.fit(wine_train_scaled, wine_train_labels)\n\nlsvc.score(wine_train_scaled, wine_train_labels)","c464b9fd":"lsvc.score(wine_test_scaled, wine_test_labels)","532ffdbf":"y_pred_lsvc = lsvc.predict(wine_test_scaled)","260d6c50":"print(classification_report(wine_test_labels, y_pred_lsvc, target_names=['bad', 'good']))","83ad76f1":"rfc = RandomForestClassifier()\n\nrfc.fit(wine_train_scaled, wine_train_labels)\n\nrfc.score(wine_train_scaled, wine_train_labels)","c6bb9d84":"rfc.score(wine_test_scaled, wine_test_labels)","8e45fbe4":"y_pred_rfc = rfc.predict(wine_test_scaled)","63836e36":"print(classification_report(wine_test_labels, y_pred_rfc, target_names=['bad', 'good']))","4d91ce9e":"tree = DecisionTreeClassifier()\n\ntree.fit(wine_train, wine_train_labels)\n\ntree.score(wine_train, wine_train_labels)","67b2fc8e":"tree.score(wine_test, wine_test_labels)","c5655a16":"y_pred_tree = tree.predict(wine_test)","9ae57cd6":"print(classification_report(wine_test_labels, y_pred_tree, target_names=['bad', 'good']))","f3ab5dfb":"sgd = SGDClassifier(max_iter=1000, tol=1e-3)\n\nsgd.fit(wine_train_scaled, wine_train_labels)\n\nsgd.score(wine_train_scaled, wine_train_labels)","f5af29ee":"sgd.score(wine_test_scaled, wine_test_labels)","c2eac5b1":"y_pred_sgd = sgd.predict(wine_test_scaled)","51deb854":"print(classification_report(wine_test_labels, y_pred_sgd, target_names=['bad', 'good']))","869224fb":"knc = KNeighborsClassifier()\n\nknc.fit(wine_train_scaled, wine_train_labels)\n\nknc.score(wine_train_scaled, wine_train_labels)","606d635b":"knc.score(wine_test_scaled, wine_test_labels)","42f2031a":"y_pred_knc = knc.predict(wine_test_scaled)","e1309951":"print(classification_report(wine_test_labels, y_pred_knc, target_names=['bad', 'good']))","6a7c625e":"pipe = Pipeline([('preprocessing', StandardScaler()), ('classifier', SVC())])","16d98b93":"from sklearn.model_selection import GridSearchCV\n\nparam_grid_svc = [\n    {'classifier': [SVC()], \n     'classifier__kernel':['linear', 'rbf'],\n     'classifier__gamma': [0.001, 0.01, 0.1, 1, 10, 100],\n     'classifier__C': [0.001, 0.01, 0.1, 1, 10, 100]\n    }\n]","db6355e9":"grid = GridSearchCV(pipe, param_grid_svc, scoring='accuracy', cv=10)","5f0ffd44":"grid.fit(wine_train, wine_train_labels)","704b2a51":"grid.best_score_","e05a21e7":"grid.best_params_","0abdc3b9":"y_pred_grid_svc = grid.best_estimator_.predict(wine_test)\n\nprint(classification_report(wine_test_labels, y_pred_grid_svc, target_names=['bad', 'good']))","840373f0":"accuracy_score(wine_test_labels, y_pred_grid_svc)","982966ae":"param_grid_rfc = [\n    {'classifier': [RandomForestClassifier()], \n     'classifier__n_estimators': np.arange(2,20),\n     'classifier__max_leaf_nodes' : np.arange(2,10),\n     'classifier__max_depth': np.arange(2,10),\n    }\n]","c8c7ff89":"grid_rfc = GridSearchCV(pipe, param_grid_rfc, scoring='accuracy', cv=10)","89765975":"grid_rfc.fit(wine_train, wine_train_labels);","ec5b0b6f":"grid_rfc.best_params_","0a1ae869":"grid_rfc.best_score_","d8435166":"y_pred_grid_rfc = grid_rfc.best_estimator_.predict(wine_test)\n\nprint(classification_report(wine_test_labels, y_pred_grid_rfc, target_names=['bad', 'good']))","c754f1ad":"accuracy_score(wine_test_labels, y_pred_grid_rfc)","279bb230":"param_grid_dtc = [\n    {'classifier': [DecisionTreeClassifier()], \n     'preprocessing': [None],  \n     'classifier__criterion': ['gini', 'entropy'],\n     'classifier__max_depth': np.arange(2,20)\n    }\n]","817ad722":"grid_dtc = GridSearchCV(pipe, param_grid_dtc, scoring='accuracy', cv=10)","d76b9f31":"grid_dtc.fit(wine_train, wine_train_labels);","ff626a3d":"grid_dtc.best_score_","c5054818":"grid_dtc.best_params_","69a14503":"y_pred_test_dtc = grid_dtc.best_estimator_.predict(wine_test)\n\nprint(classification_report(wine_test_labels, y_pred_grid_rfc, target_names=['bad', 'good']))","20d9bf0f":"accuracy_score(wine_test_labels, y_pred_test_dtc)","3eaff5c6":"### RandomForestClassifier","da76f5ba":"`total sulfur dioxide` has high variance!","2c645b48":"Since we don't have enough data for each class, we coudn't expect a good accuracy for multi classification.","0561243a":"### DecisionTreeClassifier","6b9c4bfb":"## Prepare the Data","f3f8a88e":"### KNeighborsClassifier","efee5f4f":"###  RandomForestClassifier ","65a4430c":"Inspired from https:\/\/www.kaggle.com\/vishalyo990\/prediction-of-quality-of-wine","72b85d8e":"### DecisionTreeClassifier ","aec75c0f":"## Binary Classification","dc3b3ec0":"we have 87% accuracy on the test set using the best parameters.","92b56fb3":"### KNeighborsClassifier","326ea560":"### LinearSVC","ed035745":"### DesicionTree","f46af79b":"###  SVC ","e6346703":"###  LogisticRegression","c8938c4f":"we have 90% accuracy on the test set using the best parameters.","72358e5c":"## Conculusion\n\nThank you for reading and examining the notebook :)","3b04ec1e":"# Wine Quality Prediction\n\nFirst of all, thank you for taking your time to read this notebook!\n\nI have used the wine dataset to model the following Machine Learning algorithms for multinomial and binary clasification. \n\n* LogisticRegression\n* SVC (only for binary)\n* RandomForestClassifier\n* DesicionTreeClassifier\n* SGDClassifier (only for binary)\n* KNeighborsClassifier\n\nNote that this notebok tries to show an introduction level for the specific concepts about Machine Learning.\n\nFeel free to leave a message If you find any mistakes I have made.","5f8d8252":"## Get the data","dd1aa003":"## Discover and Visualize the Data to Gain Insights","cad7da72":"### SVC","ff0b63e4":"* the correlation between density and fixed acidity is moderate\n* the correlation between free sulfur dioxide and total sulfur dioxide is moderate","b6ad43fd":"## Fine-Tune the Binary Models","1a62aae1":"### RandomForestClassifier","b8889eec":"we have 91% accuracy on the test set using the best parameters.","5681ae7d":"### LogisticRegression","7ae0dd05":"## Select and Train Models","241aee10":"### SGDClassifier"}}