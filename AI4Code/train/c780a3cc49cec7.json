{"cell_type":{"809a84e6":"code","6468e38c":"code","c3ca3b9a":"code","ddad8af0":"code","762140b1":"code","bbbe5041":"code","41959566":"code","30d6fda8":"code","04d28a1f":"code","7785a0bc":"code","40ceb417":"code","958a5be7":"code","007b507b":"code","b3c06670":"code","36010815":"code","bcff1a26":"code","cf4cc80e":"code","75b18502":"code","c9838fbe":"code","3caa43e4":"code","e28cb574":"code","86e7f8e5":"code","565483d8":"markdown","1fa232c7":"markdown","f5643fc0":"markdown","7521cb0e":"markdown","98e53b73":"markdown","9f4139b4":"markdown","1c67b454":"markdown","e0494b30":"markdown","16ef1bf6":"markdown","c077d9ed":"markdown","d7ed8e99":"markdown","b6817665":"markdown","248e8470":"markdown","664847da":"markdown","d13dac0d":"markdown","c05b5c36":"markdown","16e4b9a1":"markdown","58f836e0":"markdown","f8036498":"markdown"},"source":{"809a84e6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6468e38c":"data = pd.read_csv('\/kaggle\/input\/california-housing-prices\/housing.csv')","c3ca3b9a":"data.head()","ddad8af0":"data.info()","762140b1":"data.describe()","bbbe5041":"data['ocean_proximity'].value_counts()","41959566":"import matplotlib.image as mpimg\nimport matplotlib.pyplot as plt\n\ncalifornia_img = mpimg.imread('..\/input\/california-housing-feature-engineering\/california.png')\ndata.plot(kind='scatter', x='longitude', y='latitude', alpha=0.4, s=data['population']\/100, label='population', figsize=(10,7), c='median_house_value', cmap=plt.get_cmap('jet'), colorbar=True)\nplt.imshow(california_img, extent=[-124.55, -113.80, 32.45, 42.05], alpha=0.5)\nplt.show()","30d6fda8":"_ = data.hist(bins=50, figsize=(20,15))","04d28a1f":"data[data['median_house_value'] >= 500001].count()","7785a0bc":"clean_data = data.dropna()","40ceb417":"clean_data.drop('ocean_proximity', axis='columns', inplace=True)","958a5be7":"clean_data.head()","007b507b":"from sklearn.model_selection import train_test_split\n\ntrain, test = train_test_split(clean_data, test_size=0.25, random_state=42)","b3c06670":"train.info(), test.info()","36010815":"test.columns","bcff1a26":"features = ['longitude', 'latitude', 'housing_median_age', 'total_rooms','total_bedrooms', 'households', 'median_income']\ntarget = 'median_house_value'\n\nX_train = train[features]\ny_train = train[target]\n\nX_test = test[features]\ny_test = test[target]","cf4cc80e":"from sklearn.linear_model import LinearRegression\n\nmodel = LinearRegression()","75b18502":"_ = model.fit(X_train, y_train)","c9838fbe":"predictions = model.predict(X_test)","3caa43e4":"from sklearn.metrics import mean_squared_error\n\nmean_squared_error(y_test, predictions)","e28cb574":"from sklearn.metrics import r2_score\n\nr2_score(y_test, predictions)","86e7f8e5":"model.score(X_test, y_test)","565483d8":"## Missing values","1fa232c7":"## Data Normalization","f5643fc0":"\/\/ Todo","7521cb0e":"\/\/ Todo","98e53b73":"# Load the Data","9f4139b4":"## Histograms ","1c67b454":"# Model Scoring ","e0494b30":"# Data Exploration","16ef1bf6":"# Training a Model ","c077d9ed":"\/\/ Todo","d7ed8e99":"# Data Preprocessing","b6817665":"\/\/ Todo","248e8470":"## Categorical variable: ocean proximity (encode it)","664847da":"# Data Splitting ","d13dac0d":"- Polynomial features\n- Divide 'total_rooms', 'total_bedrooms' by 'households'\n- Find more!! (look at the kernels..)","c05b5c36":"# Feature Engineering","16e4b9a1":"## Capped variables ","58f836e0":"# Predict","f8036498":"# Data Visualization"}}