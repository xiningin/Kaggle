{"cell_type":{"2ce262d1":"code","aef2bb7c":"code","82230bda":"code","c82d4129":"code","3ccdb9bc":"code","8acaaa1f":"code","96c7748e":"code","3295cc07":"code","58f2993a":"code","0f2e0d0a":"code","92a79492":"code","0cb4fbce":"code","d2f76187":"code","fa7ef41d":"code","3fc084d1":"code","9a91d469":"code","adc23ec9":"code","1e7112fa":"code","d1574d2d":"code","8b88d957":"code","a38a0fca":"code","1aebc23f":"markdown","1c9a67f3":"markdown","8b4cc7b8":"markdown","6dfde192":"markdown","4df09794":"markdown","cdec5744":"markdown","65314f45":"markdown","90040d04":"markdown","f048539b":"markdown","82cd9914":"markdown","b27f2e3a":"markdown","56eaa0b5":"markdown","a940b3e6":"markdown","afc8dfdf":"markdown","723fd9d8":"markdown","71d6368f":"markdown","f8bd1fb2":"markdown","50276864":"markdown","53fe4914":"markdown","6bd2f6d5":"markdown"},"source":{"2ce262d1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport folium\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import SVR\nfrom sklearn import metrics\nfrom sklearn.metrics import r2_score\n#\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\n#\nfrom sklearn.metrics import r2_score\n#\nfrom sklearn.metrics import r2_score\n#\nimport warnings\nwarnings.filterwarnings('ignore')\n","aef2bb7c":"df_regions = pd.read_csv('\/kaggle\/input\/covid19-italy-per-regions\/dpc-covid19-ita-regioni.csv.txt')\ndf_regions.head(10)","82230bda":"missing_data2 = df_regions.isnull() \nfor column in missing_data2.columns.values.tolist():\n    print(column)\n    print(missing_data2[column].value_counts())\n    print('')","c82d4129":"df_regions = df_regions.drop(columns=['note_it', 'note_en'])","3ccdb9bc":"df_regions['data'] = df_regions['data'].astype('datetime64')","8acaaa1f":"corr = df_regions.corr()\ncorr.style.background_gradient()","96c7748e":"df_regions.describe()","3295cc07":"df_regions.plot(kind='line', x='data', y='terapia_intensiva', figsize=(12,8))\nplt.title('Number of Cases in Intensive Care from 2020-02-24 to 2020-06-28')\nplt.xlabel('Date')\nplt.ylabel('Number of Cases in Intensive Care')","58f2993a":"longitude = 12.87194\nlatitude = 42.56738\nIT_map = folium.Map(location=[latitude, longitude], zoom_start=5.5)\nregions = folium.map.FeatureGroup()\nfor lat, lng in zip(df_regions.lat, df_regions.long):\n    regions.add_child(\n        folium.CircleMarker([lat, lng],\n                            radius=5,\n                            color='yellow',\n                            fill=True,\n                            fill_color='blue',\n                            fill_opacity=0.6\n                            )\n    )\n\n    \nlatitudes = list(df_regions.lat)\nlongitudes = list(df_regions.long)\nlabels = list(df_regions.terapia_intensiva)\n\nfor lat, lng, label in zip(latitudes, longitudes, labels):\n    folium.Marker([lat, lng], popup=label).add_to(IT_map)    \n    \nIT_map.add_child(regions)","0f2e0d0a":"df_regions['data'] = df_regions['data'].astype('str')\nnew = df_regions['data'].str.split(\"-\", n=2, expand=True)\ndf_regions['mese'] = new[1]\ndf_regions['Day']= new[2]\ndf_regions.drop(columns=['data'], inplace=True)\n","92a79492":"new = df_regions['Day'].str.split(\" \", n=2, expand=True)\ndf_regions['giorno'] = new[0]\n","0cb4fbce":"df_regions.drop(columns=['Day'], inplace=True)","d2f76187":"df_regions.head()","fa7ef41d":"df_regions['casi_testati'] = df_regions['casi_testati'].fillna(0)","3fc084d1":"df_regions['codice_regione'] = df_regions['codice_regione'].astype('str')\ndf_regions['giorno'] = df_regions['giorno'].astype('int')\ndf_regions['mese'] = df_regions['mese'].astype('int')","9a91d469":"df_regions.drop(columns=['codice_regione'], inplace=True)","adc23ec9":"data = pd.get_dummies(df_regions, drop_first=True)","1e7112fa":"X = data[['ricoverati_con_sintomi','totale_ospedalizzati', 'isolamento_domiciliare', 'totale_positivi',\n       'variazione_totale_positivi', 'nuovi_positivi', 'dimessi_guariti',\n       'deceduti', 'totale_casi', 'tamponi', 'casi_testati', 'mese', 'giorno',\n       'denominazione_regione_Basilicata', 'denominazione_regione_Calabria',\n       'denominazione_regione_Campania',\n       'denominazione_regione_Emilia-Romagna',\n       'denominazione_regione_Friuli Venezia Giulia',\n       'denominazione_regione_Lazio', 'denominazione_regione_Liguria',\n       'denominazione_regione_Lombardia', 'denominazione_regione_Marche',\n       'denominazione_regione_Molise', 'denominazione_regione_P.A. Bolzano',\n       'denominazione_regione_P.A. Trento', 'denominazione_regione_Piemonte',\n       'denominazione_regione_Puglia', 'denominazione_regione_Sardegna',\n       'denominazione_regione_Sicilia', 'denominazione_regione_Toscana',\n       'denominazione_regione_Umbria', \"denominazione_regione_Valle d'Aosta\",\n       'denominazione_regione_Veneto']]\nY = data['terapia_intensiva']","d1574d2d":"x_train, x_test, y_train, y_test = train_test_split(X,Y, test_size=0.2)","8b88d957":"models = []\nmodels.append(('Linear Regression', LinearRegression()))\nmodels.append(('Decision Trees', DecisionTreeRegressor()))\nmodels.append(('K Nearest Neighbor',KNeighborsRegressor()))\nmodels.append(('Support Vector', SVR()))\nresults = []\nnames = []\nfor i, j in models: \n    k = KFold(n_splits=10 , random_state=26)\n    result = cross_val_score(j, x_train,y_train, cv=k, scoring='r2')\n    results.append(result)\n    names.append(i)\n    print('Model: ', i,'Score: %.2f' % result.mean(), \"Model's Standard Deviation: %.2f\" % result.std())","a38a0fca":"DT =DecisionTreeRegressor()\nDT.fit(x_train,y_train)\nyhat = DT.predict(x_test)\nprint('Accuracy of the model: %.2f' % r2_score(y_test, yhat))","1aebc23f":"16. Creating train and test sets","1c9a67f3":"10. Dividing the date column into Day (giorno) an Month (mese) columns","8b4cc7b8":"2.  Loading the Data and previewing the first 10 rows of the dataframe","6dfde192":"5. converting the \"data\" column to Datetime64","4df09794":"1. Loading the Python's libraries needed","cdec5744":"14. Getting dummyes for the cathegorical variable \"region name\"","65314f45":"There are 1491 missing data for Tested patients because the testing started later tha the 24th of Februrary\n\"note_en\" and \"note_it\" are annotation about the data but I won't be using it.","90040d04":"12. Changing some column's data types","f048539b":"9. Number of patients in intensive care the 28th of June per region ","82cd9914":"18. Decision Tree Regressor's accuracy","b27f2e3a":"# Covid-19 in Italy from 2020-02-24 to 2020-06-28","56eaa0b5":"8. graphic visualization of the distribution of patients in intensive care from 2020-02-24 to 2020-06-28","a940b3e6":"11. replacing nAn values with 0's","afc8dfdf":"7. Statistical analysis on the data","723fd9d8":"6. Graphic visualization of correlation between features","71d6368f":"4. Dropping columns I won't use","f8bd1fb2":"17. Loading and comparing regression's models","50276864":"3. Looking for missing values","53fe4914":"15. Dividing the data into predictors and target","6bd2f6d5":"13. Dropping the regional code's column"}}