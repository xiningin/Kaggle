{"cell_type":{"81e9b892":"code","d3d26533":"code","dcbe5be2":"code","97caa3a5":"code","d8f67827":"code","214eaadf":"code","9063155c":"code","3e445d57":"code","b932c5d4":"code","e81bbc02":"code","d99f6a4b":"code","b7ef10a8":"code","f42deb28":"markdown","090416bc":"markdown","ee1ed6f2":"markdown","a99c87c0":"markdown","33a6a8d9":"markdown","90c0266c":"markdown"},"source":{"81e9b892":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split, GridSearchCV\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d3d26533":"train = pd.read_csv(\"\/kaggle\/input\/cat-in-the-dat-ii\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/cat-in-the-dat-ii\/test.csv\")","dcbe5be2":"X = train.drop(\"target\", axis=1)\ny= train[\"target\"]","97caa3a5":"numeric_features = X.select_dtypes(include=['float64']).columns\nnumeric_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='median')),\n    ('scaler', StandardScaler())])","d8f67827":"integer_features = X.select_dtypes(include=['int64']).columns\ninteger_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='median')),\n    ('scaler', StandardScaler())])","214eaadf":"categorical_features = X.select_dtypes(include=['object']).columns\ncategorical_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='constant', fill_value='missing')),\n    ('onehot', OneHotEncoder(handle_unknown='ignore'))])","9063155c":"preprocessor = ColumnTransformer(\n    transformers=[\n        ('num', numeric_transformer, numeric_features),\n        ('int', integer_transformer, integer_features),\n        ('cat', categorical_transformer, categorical_features)])","3e445d57":"# Append classifier to preprocessing pipeline.\n# Now we have a full prediction pipeline.\nclf = Pipeline(steps=[('preprocessor', preprocessor),\n                      ('classifier', LogisticRegression())])","b932c5d4":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\n\nclf.fit(X_train, y_train)\nprint(\"model score: %.3f\" % clf.score(X_test, y_test))","e81bbc02":"y_pred = clf.predict_proba(test)","d99f6a4b":"sub = pd.DataFrame({'id': test['id'], 'target':y_pred[:,1]})","b7ef10a8":"sub.to_csv('\/kaggle\/working\/submission.csv', index=False)","f42deb28":"> #### Public score : 0.77752","090416bc":"1. Import files","ee1ed6f2":"5. Load to csv","a99c87c0":"2. Feature engineering","33a6a8d9":"4. Probability of prediction","90c0266c":"3. Apply Logistic Regression Model"}}