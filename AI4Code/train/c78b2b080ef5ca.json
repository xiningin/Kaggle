{"cell_type":{"c89cb43f":"code","0935a09f":"code","17b4945e":"code","a8d10e33":"code","71dbd5e8":"code","41773308":"code","d1869381":"code","9367dddb":"code","65cf9808":"code","6a8e5a9e":"code","9f236e81":"code","2d26a12a":"code","abc41c18":"markdown","1e3505c9":"markdown","854c7dad":"markdown","f8199ab8":"markdown","2452e798":"markdown","d76b2977":"markdown","6de63874":"markdown","02706e07":"markdown","cad6a46c":"markdown","ca52b125":"markdown"},"source":{"c89cb43f":"import warnings # Supress warnings \nwarnings.filterwarnings('ignore')","0935a09f":"import pandas as pd\n\ncovid = pd.read_csv('\/kaggle\/input\/covid19-brazil-full-cases-17062021\/caso_full.csv')","17b4945e":"covid.head()","a8d10e33":"covid = covid.drop(columns=['estimated_population_2019', 'order_for_place'], axis=1)\ncovid.head()","71dbd5e8":"import numpy as np\nimport plotly.express as px\nimport plotly.io as pio\npio.templates.default = \"plotly_dark\"\n\nconfirmed_cases = pd.DataFrame(covid.groupby('city')['last_available_confirmed'].sum())\nconfirmed_cases['city'] = confirmed_cases.index\nconfirmed_cases.index = np.arange(1,5299)\n\ndeath_cases = pd.DataFrame(covid.groupby('city')['last_available_deaths'].sum())\ndeath_cases['city'] = death_cases.index\ndeath_cases.index = np.arange(1, 5299)\n\nnew_confirmed = pd.DataFrame(covid.groupby('city')['new_confirmed'].sum())\nnew_confirmed['city'] = new_confirmed.index\nnew_confirmed.index = np.arange(1, 5299)\n\nglobal_confirmed_cases = confirmed_cases[['city', 'last_available_confirmed']]\nglobal_death_cases = death_cases[['city', 'last_available_deaths']]\nglobal_new_confirmed = new_confirmed[['city', 'new_confirmed']]\n\nfig = px.bar(global_new_confirmed.sort_values('new_confirmed', ascending=False)[:20][::-1], x='new_confirmed', y = 'city', title='New Confirmed Cases in Brazil', height=900, orientation='h')\nfig.show()","41773308":"date_c = covid.groupby('date')['new_confirmed','new_deaths'].sum().reset_index()\n\n\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nfig = make_subplots(rows=1, cols=2, subplot_titles=('New Confirmed','New Deaths'))\n\ntrace1 = go.Scatter(\n                x=date_c['date'],\n                y=date_c['new_confirmed'],\n                name=\"Confirmed\",\n                line_color='orange',\n                mode='lines+markers',\n                opacity=0.8)\n\ntrace2 = go.Scatter(\n                x=date_c['date'],\n                y=date_c['new_deaths'],\n                name=\"Deaths\",\n                line_color='red',\n                mode='lines+markers',\n                opacity=0.8)\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.update_layout(template=\"plotly_dark\",title_text = '<b>Brazilian Spread of the Coronavirus Over Time <\/b>',\n                  font=dict(family=\"Arial, Balto, Courier New, Droid Sans\",color='white'))\nfig.show()","d1869381":"sao_paulo = covid[covid['city'] == 'S\u00e3o Paulo'].reset_index()\nsao_paulo_date = sao_paulo.groupby('date')['date', 'new_confirmed', 'new_deaths'].sum().reset_index()\n\nbrasilia = covid[covid['city'] == 'Bras\u00edlia'].reset_index()\nbrasilia_date = brasilia.groupby('date')['date', 'new_confirmed', 'new_deaths'].sum().reset_index()\n\nrio_de_janeiro = covid[covid['city'] == 'Rio de Janeiro'].reset_index()\nrio_de_janeiro_date = rio_de_janeiro.groupby('date')['date', 'new_confirmed', 'new_deaths'].sum().reset_index()","9367dddb":"fig = make_subplots(rows=1, cols = 2, subplot_titles=('New Confirmed Cases', 'New Deaths'))\n\ntrace1 = go.Scatter(\n    x=sao_paulo['date'], \n    y=sao_paulo['new_confirmed'], \n    name = 'Confirmed', \n    line_color = 'orange',\n    mode = 'lines+markers',\n    opacity=0.8)\n\ntrace2 = go.Scatter(\n    x = sao_paulo['date'],\n    y=sao_paulo['new_deaths'],\n    name = 'Deaths',\n    line_color = 'red',\n    mode = 'lines+markers',\n    opacity = 0.8)\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.update_layout(template='plotly_dark', title_text='<b>Spread of the Coronavirus Over Time in S\u00e3o Paulo (TOP 1)<\/b>',\n                  font=dict(family='Arial, Balto, Courier New, Droid Sans', color='white'))\nfig.show()","65cf9808":"fig = make_subplots(rows=1, cols = 2, subplot_titles=('New Confirmed Cases', 'New Deaths'))\n\ntrace1 = go.Scatter(\n    x=brasilia['date'], \n    y=brasilia['new_confirmed'], \n    name = 'Confirmed', \n    line_color = 'orange',\n    mode = 'lines+markers',\n    opacity=0.8)\n\ntrace2 = go.Scatter(\n    x = brasilia['date'],\n    y=brasilia['new_deaths'],\n    name = 'Deaths',\n    line_color = 'red',\n    mode = 'lines+markers',\n    opacity = 0.8)\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.update_layout(template='plotly_dark', title_text='<b>Spread of the Coronavirus Over Time in Bras\u00edlia (TOP 2)<\/b>',\n                  font=dict(family='Arial, Balto, Courier New, Droid Sans', color='white'))\nfig.show()","6a8e5a9e":"fig = make_subplots(rows=1, cols = 2, subplot_titles=('New Confirmed Cases', 'New Deaths'))\n\ntrace1 = go.Scatter(\n    x=rio_de_janeiro['date'], \n    y=rio_de_janeiro['new_confirmed'], \n    name = 'Confirmed', \n    line_color = 'orange',\n    mode = 'lines+markers',\n    opacity=0.8)\n\ntrace2 = go.Scatter(\n    x = rio_de_janeiro['date'],\n    y=rio_de_janeiro['new_deaths'],\n    name = 'Deaths',\n    line_color = 'red',\n    mode = 'lines+markers',\n    opacity = 0.8)\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.update_layout(template='plotly_dark', title_text='<b>Spread of the Coronavirus Over Time in Rio de Janeiro (TOP 3)<\/b>',\n                  font=dict(family='Arial, Balto, Courier New, Droid Sans', color='white'))\nfig.show()","9f236e81":"temp = covid.groupby('date')['new_confirmed', 'new_deaths'].sum().reset_index()\ntemp = temp.melt(id_vars = 'date', value_vars=['new_confirmed', 'new_deaths'], var_name='case', value_name='count')\n\nfig = px.area(temp, x='date', y='count', color='case',\n              title='Cases over time: Area Plot', color_discrete_sequence = ['cyan', 'red', 'orange'])\n\nfig.show()","2d26a12a":"cleaned_latest = covid[covid['date'] == max(covid['date'])]\nflg = cleaned_latest.groupby('city')['new_confirmed', 'new_deaths'].sum().reset_index()\n\nflg['mortalityRate'] = round((flg['new_deaths']\/flg['new_confirmed'])*100, 2)\ntemp = flg[flg['new_confirmed']>100]\ntemp = temp.sort_values('mortalityRate', ascending=False)\n\nfig = px.bar(temp.sort_values(by=\"mortalityRate\", ascending=False)[:10][::-1],\n             x = 'mortalityRate', y = 'city', \n             title='Deaths per 100 Confirmed Cases', text='mortalityRate', height=800, orientation='h',\n             color_discrete_sequence=['darkred']\n            )\nfig.show()","abc41c18":"## Bras\u00edlia","1e3505c9":"If you have any questions, don't hesitate to comment bellow\n\nHave a great analysis! Hope to see Analysis and Predictions here","854c7dad":"Comparing New Cases and New Deaths","f8199ab8":"Let's take a look at which city has the most cases","2452e798":"Now let's see which city has the highest Deaths per 100 cases","d76b2977":"## Rio de Janeiro","6de63874":"## Comparison","02706e07":"Now lets take a closer look at the TOP 3 worst cities in Brazil","cad6a46c":"# Coronavirus (COVID-19) Visualization\n\nThis notebook was inspired by: https:\/\/www.kaggle.com\/therealcyberlord\/coronavirus-covid-19-visualization-prediction\n\nThis is an initial Analysis on Brazil's Coronavirus cases\n\nIf you like the dataset and the Inicial Notebook, please Upvote","ca52b125":"## S\u00e3o Paulo"}}