{"cell_type":{"febd1560":"code","0e3b8354":"code","3384bb98":"code","d1a65c27":"code","cdcaff4a":"code","a69e20f5":"code","273d1cb3":"code","db369129":"code","146ed528":"code","d6154376":"code","8f6ffcf1":"code","d2a461f3":"markdown","ea6e0b09":"markdown","fe32d4ee":"markdown","544f1e9b":"markdown","c0ef3867":"markdown","ccc8e52e":"markdown","6c5909cc":"markdown","5e82e7a3":"markdown","3bbb2983":"markdown","55d6141e":"markdown"},"source":{"febd1560":"import numpy as np\n\nfrom sklearn.datasets import load_iris\nfrom sklearn.tree import DecisionTreeClassifier\nimport joblib ","0e3b8354":"iris = load_iris()\niris.keys()","3384bb98":"X = iris.data\ny = iris.target\nprint(X.shape)\nprint(np.unique(y))","d1a65c27":"tree_clf = DecisionTreeClassifier(max_depth=2, random_state=42)\ntree_clf.fit(X, y)","cdcaff4a":"filename = \"iris_decision_classifer.pch\"","a69e20f5":"joblib.dump(tree_clf, filename) ","273d1cb3":"loaded_model = joblib.load(filename) \nloaded_model","db369129":"tree_clf.get_params()","146ed528":"loaded_model.get_params()","d6154376":"tree_clf.get_params() == loaded_model.get_params()","8f6ffcf1":"loaded_model.predict(X[range(10,150,10)])","d2a461f3":"# load model","ea6e0b09":"# predict using loaded model","fe32d4ee":"# make model","544f1e9b":"# split data ( input data \/ target data)","c0ef3867":"# same model ?","ccc8e52e":"# load data","6c5909cc":"# import libraries","5e82e7a3":"# check loaded model parameter ","3bbb2983":"# save model","55d6141e":"# check model parameter"}}