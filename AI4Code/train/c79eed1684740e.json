{"cell_type":{"23f6a5d6":"code","bfb71364":"code","6ee5cbe7":"code","5cd50db1":"code","670375ab":"code","63c97907":"code","576dbed9":"markdown"},"source":{"23f6a5d6":"import os\nimport torch\n!git clone https:\/\/github.com\/AIStream-Peelout\/flow-forecast.git -b metadata_v5\nos.chdir('flow-forecast')\n!wget -O \"weight.pth\" https:\/\/storage.googleapis.com\/coronaviruspublicdata\/experiments\/09_September_202006_03AM_model.pth\n!wget -O \"config.json\" https:\/\/storage.googleapis.com\/coronaviruspublicdata\/experiments\/09_September_202006_03AM.json\n!pip install -r requirements.txt\n!python setup.py develop  ","bfb71364":"import json\nmeta_embedding_config = {                 \n    \"model_name\": \"BasicAE\",\n    \"model_type\": \"PyTorch\",\n    \"model_params\": {\n       \"input_shape\":33,\n       \"out_features\":128\n     }, \n    \"dataset_params\":\n    {  \"class\": \"AutoEncoder\",\n       \"training_path\": \"acs2015_census_tract_data.csv\",\n       \"validation_path\": \"acs2015_census_tract_data.csv\",\n       \"test_path\": \"acs2017_county_data.csv\",\n       \"batch_size\":4,\n       \"train_end\": 6000,\n       \"valid_start\":6001,\n       \"valid_end\": 7000,\n       \"test_start\":0,\n       \"relevant_cols\": ['TotalPop', 'Men', 'Women',\n       'Hispanic', 'White', 'Black', 'Native', 'Asian', 'Pacific',\n       'Income', 'IncomeErr', 'IncomePerCap', 'IncomePerCapErr', 'Poverty',\n       'ChildPoverty', 'Professional', 'Service', 'Office', 'Construction',\n       'Production', 'Drive', 'Carpool', 'Transit', 'Walk', 'OtherTransp',\n       'WorkAtHome', 'MeanCommute', 'Employed', 'PrivateWork', 'PublicWork',\n       'SelfEmployed', 'FamilyWork', 'Unemployment'],\n       \"Scaling\":\"StandardScaler\",\n       \"interpolate\": False\n    },\n    \"training_params\":\n    {\n       \"criterion\":\"MSE\",\n       \"optimizer\": \"Adam\",\n       \"lr\": 0.3,\n       \"epochs\": 4,\n       \"batch_size\":4,\n       \"optim_params\":\n       {\n       }\n    \n    },\n    \"GCS\": False,\n    \n    \"wandb\": {\n       \"name\": \"flood_forecast_circleci\",\n       \"project\": \"repo-flood_forecast\",\n       \"tags\": [\"auto_encoder\", \"circleci\"]\n    },\n   \"metrics\":[\"MSE\"],\n\n   \"inference_params\":{\n      \"hours_to_forecast\":1\n\n   },\n    \"weight_path\":\"weight.pth\"\n}\n\nwith open(\"meta_config.json\", \"w+\") as j:\n    json.dump(meta_embedding_config, j)","6ee5cbe7":"def make_config(weight_path=None):\n    run = wandb.init(project=\"covid_forecast\", entity=\"covid\")\n    print(wandb.config)\n    wandb_config = wandb.config\n    full_config = {                 \n    \"model_name\": \"CustomTransformerDecoder\",\n    \"model_type\": \"PyTorch\",\n    \"model_params\": {\n      \"n_time_series\":9,\n      \"seq_length\":wandb_config[\"forecast_history\"],\n      \"output_seq_length\": wandb_config[\"out_seq_length\"], \n      \"n_layers_encoder\": wandb_config[\"number_encoder_layers\"],\n      \"dropout\": wandb_config[\"dropout\"],\n      \"meta_data\": {\n          \"embedding_size\":128,\n          \"output_size\":10\n      }\n     }, \n      \"metadata\":{\n        \"path\":\"meta_config.json\",\n        \"column_id\": \"full_county\",\n        \"uuid\": \"Middlesex County_Massachusetts\",\n        \"use\": wandb_config[\"meta_data\"]\n\n    }\n            \n    ,\n    \"dataset_params\":\n    {  \"class\": \"default\",\n       \"training_path\": \"ma_test_data.csv\",\n       \"validation_path\": \"ma_test_data.csv\",\n       \"test_path\": \"ma_test_data.csv\",\n       \"batch_size\":4,\n       \"forecast_history\":wandb_config[\"forecast_history\"],\n       \"forecast_length\":wandb_config[\"out_seq_length\"],\n       \"train_end\": 100,\n       \"valid_start\":101,\n       \"valid_end\": 126,\n       \"test_start\":101,\n       \"target_col\": [\"rolling_7\"],\n       \"relevant_cols\": [\"rolling_7\", \"month\", \"weekday\", \"mobility_retail_recreation\", \"mobility_grocery_pharmacy\", \"mobility_parks\", \"mobility_transit_stations\", \"mobility_workplaces\", \"mobility_residential\"],\n       \"scaler\": \"StandardScaler\", \n       \"interpolate\": False\n    },\n    \"training_params\":\n    {\n       \"criterion\":\"RMSE\",\n       \"optimizer\": \"Adam\",\n       \"optim_params\":\n       {\n\n       },\n       \"lr\": wandb_config[\"lr\"],\n       \"epochs\": 10,\n       \"batch_size\":wandb_config[\"batch_size\"]\n\n    },\n    \"GCS\": False,\n    \"sweep\":True,\n    \"wandb\":False,\n    \"forward_params\":{},\n    \"metrics\":[\"MSE\"],\n    \"inference_params\":\n    {     \n         \"datetime_start\":\"2020-06-18\",\n          \"hours_to_forecast\":16, \n          \"test_csv_path\":\"ma_test_data.csv\",\n          \"decoder_params\":{\n            \"decoder_function\": \"simple_decode\", \n            \"unsqueeze_dim\": 1},\n          \"dataset_params\":{\n             \"file_path\": \"ma_test_data.csv\",\n             \"forecast_history\":wandb_config[\"forecast_history\"],\n             \"forecast_length\":wandb_config[\"out_seq_length\"],\n             \"target_col\": [\"rolling_7\"],\n             \"relevant_cols\": [\"rolling_7\", \"month\", \"weekday\", \"mobility_retail_recreation\", \"mobility_grocery_pharmacy\", \"mobility_parks\", \"mobility_transit_stations\", \"mobility_workplaces\", \"mobility_residential\"],\n             \"scaling\": \"StandardScaler\",\n             \"interpolate_param\": False\n          }\n    } \n    }\n    wandb.config.update(full_config)\n    return full_config\n","5cd50db1":"from flood_forecast.trainer import train_function \nimport wandb\nsweep_config_full = {\n  \"name\": \"Default sweep\",\n  \"method\": \"grid\",\n  \"parameters\": {\n        \"meta_data\":{\n            \"values\":[True, False]\n        },\n        \"batch_size\": {\n            \"values\": [10, 25, 30]\n        },\n        \"lr\":{\n            \"values\":[0.001, 0.0001, .01, .1]\n        },\n        \"forecast_history\":{\n            \"values\":[5, 10, 11, 15]\n        },\n        \"out_seq_length\":{\n            \"values\":[1, 2, 5]\n        },\n        \"number_encoder_layers\":\n        {\n            \"values\":[1, 2, 4, 5, 6]\n        }, \n        \"dropout\":\n        {\n            \"values\":[0.1, 0.2]\n        },\n        \"use_mask\":{\n            \"values\":[True, False]\n        }\n\n        \n}}\ndef run_sweep_shit():\n    sweep_id = wandb.sweep(sweep_config_full, project=\"covid-forecast\")\n    wandb.agent(sweep_id, lambda:train_function(\"PyTorch\", make_config()))\n\n!wget -O ma_test_data.csv https:\/\/gist.githubusercontent.com\/isaacmg\/2a4cda7b72555ddd2aa75a978ef15648\/raw\/ee70bb4181f69a7cece6a6c916726eaa74c2fed8\/mass.csv","670375ab":"!pip install pandas --upgrade\nimport pandas as pd\ndef format_pd(file_path=\"..\/..\/input\/us-census-demographic-data\/acs2015_census_tract_data.csv\"):\n    df = pd.read_csv(file_path)\n    df[\"full_county\"] = df[\"County\"] + \"_\" + df[\"State\"]\n    df.dropna().to_csv(file_path.split(\"\/\")[-1])\nformat_pd()\nformat_pd(\"..\/..\/input\/us-census-demographic-data\/acs2017_county_data.csv\")","63c97907":"run_sweep_shit()","576dbed9":"# Part II of using Meta-Data for Time Series Forecast\n[Click here](https:\/\/www.kaggle.com\/isaacmg\/auto-encoder-forecasts) for Part I of the tutorial. In this part of the tutorial we are actually going to train the time series model with the meta-data.\n\n"}}