{"cell_type":{"e2ac7e78":"code","0ce92f7a":"code","dc728480":"code","474ed164":"code","864010f0":"code","42ac91f7":"code","280e97cc":"code","f5d19bec":"code","f7db6a74":"code","8f996f5f":"code","076237a5":"code","d5996e12":"code","690e845c":"code","344e8dde":"code","1fabb685":"code","37c10e3f":"code","0844cd08":"code","0e2bab55":"code","daa05cb9":"code","56222b02":"code","391eb360":"code","643ed153":"code","82324084":"code","28f1e91c":"code","e1185c3a":"code","4216f8ce":"code","89a8099e":"code","7cca2d8e":"code","b4b05912":"code","b7770abd":"code","fc0432a8":"code","bb7a56f1":"code","d4a58746":"code","fd104bc3":"code","368e6fff":"code","76715c28":"code","00b18f78":"code","c8a4b38e":"code","90e655e2":"code","e54666f8":"code","9d8d8b22":"code","391050ec":"code","802c605c":"code","7b11663a":"code","9200a25c":"code","7f016e9b":"code","8bfdf851":"code","cd5a72bd":"code","b806c7d7":"code","9feaaeae":"code","c769b491":"code","95b1ecc0":"code","724c3e14":"code","e63c693a":"code","29ec51eb":"code","1ada6ad6":"code","da854e8c":"code","fd4566b2":"code","eeb4b0f8":"code","fe5a23b8":"code","f79c55a1":"code","6510bd28":"code","ce7d3b0c":"code","4bae67f4":"code","7e41955d":"code","4f4bf5fe":"code","42c771a4":"code","ca737d3d":"code","498dc95f":"markdown","b77bda89":"markdown","1ce30948":"markdown","cd0ea321":"markdown","3e226445":"markdown","61644555":"markdown"},"source":{"e2ac7e78":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt","0ce92f7a":"global_temp=pd.read_csv('..\/input\/global-temperature\/GlobalTemperatures.csv')\nglobal_temp.head()","dc728480":"def year(date):\n    return date.split('-')[0]","474ed164":"global_temp['years']=global_temp['dt'].apply(year)\nglobal_temp.head()","864010f0":"global_temp.info()","42ac91f7":"global_temp['years']=global_temp['years'].astype(str).astype(int)\nglobal_temp.info()","280e97cc":"data=global_temp.groupby('years').agg({'LandAverageTemperature':'mean','LandAverageTemperatureUncertainty':'mean'}).reset_index()\ndata.head()","f5d19bec":"data['Uncertainity_top']=data['LandAverageTemperature'] + data['LandAverageTemperatureUncertainty']\ndata['Uncertainity_bottom']=data['LandAverageTemperature'] - data['LandAverageTemperatureUncertainty']\ndata.head()","f7db6a74":"fig=px.line(data,x='years',y=['LandAverageTemperature','Uncertainity_top', 'Uncertainity_bottom']\n            ,title='Avg Land Temp in World')\nfig.show()","8f996f5f":"global_temp['dt']=pd.to_datetime(global_temp['dt'])\nglobal_temp.info()","076237a5":"global_temp['month']=global_temp['dt'].dt.month\nglobal_temp.head()","d5996e12":"def get_season(month):\n    if month>=3 and month<=5:\n        return 'spring'\n    elif month>=6 and month<=8:\n        return 'summer'\n    elif month>=9 and month<=11:\n        return 'autumn'\n    else:\n        return 'winter'","690e845c":"global_temp['season']=global_temp['month'].apply(get_season)\nglobal_temp.head()","344e8dde":"years=global_temp['years'].unique()\nyears[:5]","1fabb685":"spring_temps=[]\nsummer_temps=[]\nautumn_temps=[]\nwinter_temps=[]","37c10e3f":"for year in years:\n    current_df=global_temp[global_temp['years']==year]\n    spring_temps.append(current_df[current_df['season']=='spring']['LandAverageTemperature'].mean())\n    summer_temps.append(current_df[current_df['season']=='summer']['LandAverageTemperature'].mean())\n    autumn_temps.append(current_df[current_df['season']=='autumn']['LandAverageTemperature'].mean())\n    winter_temps.append(current_df[current_df['season']=='winter']['LandAverageTemperature'].mean())","0844cd08":"season=pd.DataFrame()\nseason.head()","0e2bab55":"season['year']=years\nseason['spring_temps']=spring_temps\nseason['summer_temps']=summer_temps\nseason['autumn_temps']=autumn_temps\nseason['winter_temps']=winter_temps\nseason.head()","daa05cb9":"fig=px.line(season,x='year',y=['spring_temps', 'summer_temps', 'autumn_temps', 'winter_temps'],title='Avg Temp in Each Season')\nfig.show()","56222b02":"cities=pd.read_csv('..\/input\/global-temperature\/GlobalLandTemperaturesByCity.csv')\ncities.head()","391eb360":"cities.shape","643ed153":"cities.Country.value_counts()","82324084":"ind=cities[cities['Country']=='India']\nind.head()","28f1e91c":"ind.City.unique()","e1185c3a":"data=['Jamshedpur']\njsr=ind[ind['City'].isin(data)]\njsr.head()","4216f8ce":"jsr=jsr[['dt','AverageTemperature']]\njsr.head()","89a8099e":"jsr.info()","7cca2d8e":"jsr.columns=['Date','Temp']\njsr.head()","b4b05912":"jsr['Date']=pd.to_datetime(jsr['Date'])\njsr.isna().sum()","b7770abd":"jsr.dropna(inplace=True)\njsr.shape","fc0432a8":"jsr.set_index('Date',inplace=True)\njsr.head()","bb7a56f1":"plt.figure(figsize=(20, 5))\nsns.lineplot(x=jsr.index,y=jsr['Temp'])\nplt.grid()","d4a58746":"from statsmodels.tsa.stattools import adfuller\ntest_result=adfuller(jsr['Temp'])\ntest_result","fd104bc3":"def adfuller_test(Temp):\n    result=adfuller(Temp)\n    labels = ['ADF Test Statistic','p-value','#Lags Used','Number of Observations Used']\n    for value,label in zip(result,labels):\n        print(label+' : '+str(value) )\n    if result[1] <= 0.05:\n        print(\"strong evidence against the null hypothesis(Ho), reject the null hypothesis. Data has no unit root and is stationary\")\n    else:\n        print(\"weak evidence against null hypothesis, time series has a unit root, indicating it is non-stationary \")","368e6fff":"adfuller_test(jsr['Temp'])","76715c28":"df=jsr.copy()\ndf.head()","00b18f78":"df['first_temp_diff']=df['Temp']-df['Temp'].shift(12)\ndf.head(25)","c8a4b38e":"adfuller_test(df['first_temp_diff'].dropna())","90e655e2":"df[['first_temp_diff']].plot(figsize=(20,5))\nplt.grid()","e54666f8":"jsr.head()","9d8d8b22":"jsr['month']=jsr.index.month\njsr.head()","391050ec":"jsr['year']=jsr.index.year\njsr.head()","802c605c":"pivot=jsr.pivot_table(values='Temp',index='month',columns='year')\npivot","7b11663a":"pivot.plot(figsize=(20,5))\nplt.legend().remove()\nplt.xlabel('Months')\nplt.ylabel('Temperatures')\nplt.grid()","9200a25c":"monthly_seasonality=pivot.mean(axis=1)\nmonthly_seasonality.head()","7f016e9b":"monthly_seasonality.plot(figsize=(20,5))\nplt.grid()","8bfdf851":"df.head()","cd5a72bd":"df=df[['first_temp_diff']]\ndf.head()","b806c7d7":"df.dropna(inplace=True)\ndf.head()","9feaaeae":"df['first_temp_diff'].rolling(window=7).mean()","c769b491":"value=pd.DataFrame(df['first_temp_diff'])\nvalue","95b1ecc0":"temp_df=pd.concat([value,df['first_temp_diff'].rolling(window=7).mean()],axis=1)\ntemp_df","724c3e14":"temp_df.columns=['actual_temp','forecast_temp']\ntemp_df.head(20)","e63c693a":"from sklearn.metrics import mean_squared_error\nnp.sqrt(mean_squared_error(temp_df['forecast_temp'][6:],temp_df['actual_temp'][6:]))","29ec51eb":"from statsmodels.graphics.tsaplots import plot_acf,plot_pacf\ndf.head()","1ada6ad6":"plot_acf(df['first_temp_diff'].dropna())","da854e8c":"plot_pacf(df['first_temp_diff'].dropna())","fd4566b2":"df.isna().sum()","eeb4b0f8":"df.shape","fe5a23b8":"training_data=df[0:2400]\n### create test that is basically unseen to our model, or which is basocally is used for evalaution\ntest_data=df[2400:]","f79c55a1":"training_data.head()","6510bd28":"test_data.head()","ce7d3b0c":"from statsmodels.tsa.arima_model import ARIMA\narima=ARIMA(training_data,order=(2,1,3))","4bae67f4":"model=arima.fit()","7e41955d":"predictions=model.forecast(steps=len(test_data))[0]\npredictions[:5]","4f4bf5fe":"np.sqrt(mean_squared_error(test_data,predictions))","42c771a4":"p_values=range(0,4)\nq_values=range(0,4)\nd_values=range(0,4)","ca737d3d":"min_error=[]\nfor p in p_values:\n    for d in d_values:\n        for q in q_values:\n            order=(p,d,q)\n            train=df[0:2400]\n            test=df[2400:]\n            predictions=[]\n            for i in range(len(test)):\n                try:\n                    arima=ARIMA(train,order)\n                    model=arima.fit(disp=0)\n                    pred=model.forecast()[0]\n                    predictions.append(pred)\n                    error=mean_squared_error(test,predictions)\n                    print('MSE is {} with order {}'.format(error,order))\n                    min_error.append(error)\n                    print('min MSE is {} '.format(min(min_error)))\n                except:\n                    continue","498dc95f":"#### Model Tuning or Hyperparameter Tuning or choosing the best pair of (p,d,q)","b77bda89":"# Examine whether there is a seasonality factor in your data or not","1ce30948":"Is it getting warmer? Yes, it is.","cd0ea321":"Visualizing  this graph,we can say this data is seasonal The series clearly has some seasonality, the higher temperatures are around b\/w June & August and the lower are between April & June so thats basically a observation that we can drawn and represent to our client","3e226445":"Ideal choice for (p,d,q) is  (2, 2, 1) where\n- p is the number of autoregressive terms,\n- d is the number of nonseasonal differences needed for stationarity, and\n- q is the number of lagged forecast errors in the prediction equation.\n\nIt has least MSE among all, i.e. 1.3563","61644555":"- From the charts we can see, that there is global warming nowadays. \n- The average temperature of Earth surface has the highest value in the last three centuries. \n- The fastest temperature growth occurred in the last 30 years! \n- This worries us, we hope soon humanity will fully switch to ecological sources of energy, that will reduce CO2.\n- If it\u2019s will not happened, we will be in disaster.\n- This charts also have confidence intervals, which shows that measurement of temperature has become more accurate in the last few years."}}