{"cell_type":{"f7c90c47":"code","0741ad4c":"code","29e678b2":"code","61cdd4ac":"code","06e8946f":"code","73ac1938":"code","c53abfa7":"code","4005ecff":"code","7cff86f4":"code","e41ca35e":"code","b4c10fae":"code","1440e6e7":"code","10f666a8":"code","c14ced30":"code","a2e47af6":"code","f619e622":"code","1a8d13f6":"code","6f28d0a2":"code","e9fe5785":"code","0ba97a23":"code","b87e9e29":"code","05dc8df0":"code","89afac93":"code","1dca4ace":"code","e50c6910":"code","7e43340a":"code","575625f4":"code","cb394ec5":"code","9d78c323":"code","188f22c9":"code","8c81d7c8":"code","1f0571b6":"markdown","39b47e78":"markdown","ca71856d":"markdown","1f39ebf5":"markdown"},"source":{"f7c90c47":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0741ad4c":"excel_file = '\/kaggle\/input\/movies.xls'\nmovies = pd.read_excel(excel_file)","29e678b2":"movies.head()","61cdd4ac":"movies_sheet1 = pd.read_excel(excel_file, sheet_name=0, index_col=0)\nmovies_sheet1.head()","06e8946f":"movies_sheet2 = pd.read_excel(excel_file, sheet_name=1, index_col=0)\nmovies_sheet2.head()","73ac1938":"movies_sheet3 = pd.read_excel(excel_file, sheet_name=2, index_col=0)\nmovies_sheet3.head()","c53abfa7":"movies = pd.concat([movies_sheet1, movies_sheet2, movies_sheet3])","4005ecff":"movies.shape","7cff86f4":"xlsx = pd.ExcelFile(excel_file)\nmovies_sheets = []\nfor sheet in xlsx.sheet_names:\n    movies_sheets.append(xlsx.parse(sheet))\nmovies = pd.concat(movies_sheets)","e41ca35e":"movies.tail()\n","b4c10fae":"sorted_by_gross = movies.sort_values(['Gross Earnings'], ascending=False)","1440e6e7":"sorted_by_gross[\"Gross Earnings\"].head(10)","10f666a8":"import matplotlib.pyplot as plt","c14ced30":"sorted_by_gross['Gross Earnings'].head(10).plot(kind=\"barh\")\nplt.show()","a2e47af6":"movies['IMDB Score'].plot(kind=\"hist\")\nplt.show()","f619e622":"movies.describe()","1a8d13f6":"movies[\"Gross Earnings\"].mean()","6f28d0a2":"movies_subset_columns = pd.read_excel(excel_file, parsecols=6)\nmovies_subset_columns.head()","e9fe5785":"movies[\"Net Earnings\"] = movies[\"Gross Earnings\"] - movies[\"Budget\"]","0ba97a23":"sorted_movies = movies[['Net Earnings']].sort_values(['Net Earnings'], ascending=[False])\nsorted_movies.head(10)['Net Earnings'].plot.barh()\nplt.show()","b87e9e29":"movies_subset = movies[['Year', 'Gross Earnings']]\nmovies_subset.head()","05dc8df0":"earnings_by_year = movies_subset.pivot_table(index=['Year'])\nearnings_by_year.head()","89afac93":"earnings_by_year.plot()\nplt.show()","1dca4ace":"movies_subset = movies[['Country', 'Language', 'Gross Earnings']]\nmovies_subset.head()","e50c6910":"earnings_by_co_lang = movies_subset.pivot_table(index=['Country', 'Language'])\nearnings_by_co_lang.head()","7e43340a":"earnings_by_co_lang.head(20).plot(kind='bar', figsize=(20,8))\nplt.show()","575625f4":"movies.to_excel('output.xlsx')","cb394ec5":"movies.to_excel('output.xlsx', index=False)","9d78c323":"writer = pd.ExcelWriter('output.xlsx', engine='xlsxwriter')\nmovies.to_excel(writer, index=False, sheet_name='report')\nworkbook = writer.book\nworksheet = writer.sheets['report']","188f22c9":"header_fmt = workbook.add_format({'bold': True})\nworksheet.set_row(0, None, header_fmt)","8c81d7c8":"writer.save()","1f0571b6":"Blog site [link](https:\/\/dq-blog-files.s3.amazonaws.com\/movies.xls)","39b47e78":"```\nmovies_skip_rows = pd.read_excel(\"movies-no-header-skip-rows.xls\", header=None, skiprows=4)\nmovies_skip_rows.head(5)\n```\n\nTo skip rows at the bottom of the sheet, you can use option `skip_footer`, which works just like skiprows, the only difference being the rows are counted from the bottom upwards.","ca71856d":"```\nmovies_skip_rows.columns = [list_of_columns]\nmovies_skip_rows.head()\n```","1f39ebf5":"Like this, one can use `XlsxWriter` to apply various formatting to the output Excel file."}}