{"cell_type":{"3b9b5a23":"code","e8f0ae0c":"code","2d367c13":"code","d4b4081e":"code","c4a4dd94":"code","4503484f":"code","3ffc2d95":"code","5059cd49":"code","2bae9681":"code","9d8491af":"code","b68435a1":"code","63000e05":"code","4a45316f":"code","a8022791":"code","2a3d2efb":"code","eaed69f0":"code","6f160d6f":"code","e3773b41":"code","31e9f9b1":"code","83cc5a47":"code","2525dbb6":"code","19b95abd":"code","12427b2f":"code","b7c52ed9":"code","9d0eb4ec":"code","b3afd65b":"code","fdd2dc04":"code","46f35142":"code","02c4ac32":"code","aaf87ac9":"code","f143af35":"code","08a387ee":"code","b4131c19":"code","19da58e7":"code","9b6e0eb0":"code","6f4e99cc":"code","36b59d0c":"code","382cd487":"code","437b91cb":"code","a3ae1041":"code","e1c49466":"code","dbc6b30f":"code","dd4e9203":"code","7bb7669e":"code","09a8ca0c":"code","1c77bcd9":"code","1de86ffd":"code","25529e4d":"code","c442f167":"code","28b71173":"code","4d6585f9":"code","2bc718fa":"code","ece44ca3":"code","a92df18a":"code","15c7317f":"code","b59715c2":"code","f8be9d4b":"code","ad4f7b96":"code","5acb6b24":"code","923cfc71":"code","6f205056":"code","05e465a9":"code","3432948c":"code","b196ef5b":"code","d2872dc9":"code","fe98f07b":"code","4935cd2d":"code","56d0d47b":"code","c203cf9c":"code","9bd241f3":"code","f1d37f7a":"code","7c7a0166":"code","6c16d105":"code","6ab02c85":"code","58d7dcd2":"code","ddf846d7":"code","24165e9d":"code","9b6b1abe":"code","70fcaaef":"code","67d72849":"code","8785695f":"code","506a123a":"code","4207086f":"markdown","94a5b47d":"markdown","c61b30f4":"markdown","efd58197":"markdown","d9fa33e9":"markdown","c18e8a43":"markdown","15c118eb":"markdown","bc7f84ca":"markdown","162b0352":"markdown","d2634ede":"markdown","94a944f5":"markdown"},"source":{"3b9b5a23":"# Import Library \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport glob","e8f0ae0c":"# readDataset district and product\ndt_district = pd.read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv')\ndt_product = pd.read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv')","2d367c13":"#read dataset engagement and name it based on district to easy analyse\npath = '..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data' \nall_files = glob.glob(path + \"\/*.csv\")\n\nli = []\n\nfor filename in all_files:\n    df = pd.read_csv(filename, index_col=None, header=0,dtype={'lp_id':str})\n    district_id = filename.split(\"\/\")[4].split(\".\")[0]\n    df[\"district_id\"] = district_id\n    li.append(df)\n    \ndt_engagement = pd.concat(li)\ndt_engagement = dt_engagement.reset_index(drop=True)\ndt_engagement.head()","d4b4081e":"# getting a few of data in district_info\ndt_district.head()","c4a4dd94":"#find information about dataset district_info \ndt_district.info()","4503484f":"# find the record in disctrict_info dataset\nindex = dt_district.index\nrecord_total = len(index)\nprint(\"Total Record in disctrict_info\",record_total)","3ffc2d95":"# Check Statistict Description\ndt_district.describe(include='all')","5059cd49":"# Check Missing Value in district_info\ndt_district.isna().sum()","2bae9681":"#check column that contain missing value for all six column \nnull_data = dt_district.loc[dt_district.isnull().sum(1)>5].index\ndt_district.loc[null_data]","9d8491af":"#Total Data that contain Missing Value for All Six Columns\nprint('Total Data that Contains Missing Value from district_info = ',len(dt_district.loc[null_data]))","b68435a1":"# Because there are missing values in the dataset so we need to drop that to make more accurate analyst \n# dropping Missing Value for all six Columns to easy doing analysis\ndt_district.dropna(thresh=6,inplace=True)","63000e05":"#Check are the missing value already gone\ndt_district.isna().sum()","4a45316f":"#check data district after drop missing value\ndt_district.head()","a8022791":"#Dropping if there are a duplicates data to easy analyse\ndt_district = dt_district.drop_duplicates()","2a3d2efb":"#change percentage black and pct_free\/reduced to easy read and analyse\ndt_district = dt_district.replace(to_replace =[\"[0, 0.2[\"], \n                            value =\"0%-20%\")\ndt_district = dt_district.replace(to_replace =[\"[0.2, 0.4[\"], \n                            value =\"20%-40%\")\ndt_district = dt_district.replace(to_replace =[\"[0.4, 0.6[\"], \n                            value =\"40%-60%\")\ndt_district = dt_district.replace(to_replace =[\"[0.6, 0.8[\"], \n                            value =\"60%-80%\")\ndt_district = dt_district.replace(to_replace =[\"[0.8, 1[\"], \n                            value =\"80%-100%\")","eaed69f0":"#change country_connections_ratio\ndt_district = dt_district.replace(to_replace =[\"[0.18, 1[\"], \n                            value =\"18%-100%\")\ndt_district = dt_district.replace(to_replace =[\"[1, 2[\"], \n                            value =\"100%-200%\")","6f160d6f":"# Explore the State Distribution\ndt_district['state'].value_counts()","e3773b41":"plt.figure(figsize=(10,10))\ndt_district['state'].value_counts().plot(kind='barh')\nplt.title('Count Distribution for State')\nplt.xlabel('count')\nplt.ylabel('State')","31e9f9b1":"# Pie Chart Visualisation of State\ndt_district[\"state\"].value_counts().head(10).plot(kind = 'pie', autopct='%1.1f%%', figsize=(10, 10)).legend()\nplt.title('Pie Chart State')","83cc5a47":"#count locale data in district\ndt_district['locale'].value_counts()","2525dbb6":"#visualisation count of locale in district dataset\nplt.figure(figsize=(10,10))\ndt_district['locale'].value_counts().plot(kind='barh')\nplt.title('Count of Locale')\nplt.xlabel('Count')\nplt.ylabel('Locale')","19b95abd":"# pie chart visualisation of percentage locale\nplt.title('Plot Percentage Distribution Locale')\ndt_district['locale'].value_counts().plot(kind='pie', autopct='%3.1f%%',figsize=(10, 10)).legend()","12427b2f":"# show a few data product_info\ndt_product.head()","b7c52ed9":"# gain information from product info\ndt_product.info()","9d0eb4ec":"# find length of product info dataset\nindex = dt_product.index\nrecord_total = len(index)\nprint(\"Total Record in product info\",record_total)","b3afd65b":"# Check Statistict Description\ndt_product.describe(include='all')","fdd2dc04":"# Check Missing Value in product info\ndt_product.isna().sum()","46f35142":"#Dropping if there are a duplicates data to easy analyse\ndt_product = dt_product.drop_duplicates()","02c4ac32":"plt.title('Distribution of Sector(s) in the District Information Data')\ndt_product[\"Sector(s)\"].value_counts().head(10).plot(kind = 'pie', autopct='%1.1f%%', figsize=(10, 10)).legend()","aaf87ac9":"#show a few of data from Engagement_Data\ndt_engagement.head()","f143af35":"#show information about Engagement Data\ndt_engagement.info()","08a387ee":"#dropping data that contain lp_id null \ndt_engagement = dt_engagement.drop(dt_engagement.loc[dt_engagement['lp_id'].isnull()].index)\ndt_engagement = dt_engagement.fillna(0.0)","b4131c19":"# set lp_id and disctrict_id to int to merge with product_info and state_info\ndt_engagement[\"lp_id\"] = dt_engagement[\"lp_id\"].astype(int)\ndt_engagement[\"district_id\"] = dt_engagement[\"district_id\"].astype(int)\n#rename column dt_product to easy merge\ndt_product.rename(columns = {'LP ID': 'lp_id'}, inplace = True)","19da58e7":"# merge districts and products\ndt_explore = pd.merge(dt_engagement, dt_district, on=\"district_id\")\ndt_explore = pd.merge(dt_explore, dt_product, on=\"lp_id\")\ndt_explore","9b6e0eb0":"# gain information from the combine dataset \ndt_explore.info()","6f4e99cc":"# change the Dtype of time because previously it was an object\ndt_explore['time']= pd.to_datetime(dt_explore['time'])","36b59d0c":"##GroupByDay\ndf_groupbydays = dt_explore.set_index('time').groupby(pd.Grouper(freq='D')).sum()","382cd487":"#show the data of groupbyday\ndf_groupbydays","437b91cb":"sns.set(rc = {'figure.figsize':(15,8)})\nsns.lineplot(x = \"time\", y = \"pct_access\", data = df_groupbydays,marker='o')","a3ae1041":"sns.lineplot(x = \"time\", y = \"engagement_index\", data = df_groupbydays,marker='o')","e1c49466":"dt_month = dt_explore.groupby(pd.Grouper(key='time', axis=0, \n                      freq='M')).mean()","dbc6b30f":"sns.lineplot(x = \"time\", y = \"engagement_index\", data = dt_month,marker='o')","dd4e9203":"sns.lineplot(x = \"time\", y = \"pct_access\", data = dt_month,marker='o')","7bb7669e":"dt_explore.head()","09a8ca0c":"best_product = dt_explore.groupby(by = 'Product Name', as_index = False)['engagement_index'].agg('mean').sort_values(by ='engagement_index', ascending = False)\nsns.barplot(x = 'engagement_index', y ='Product Name', data = best_product[0:15])\nplt.xlabel(xlabel = 'Engagement Index')\nplt.ylabel(ylabel = 'Product Name')\nplt.title(label = 'Best 15 Product Name That Used')","1c77bcd9":"best_sectors = dt_explore.groupby(by = 'Sector(s)', as_index = False)['engagement_index'].agg('mean').sort_values(by ='engagement_index', ascending = False)\nsns.barplot(x = 'engagement_index', y ='Sector(s)', data = best_sectors)\nplt.xlabel(xlabel = 'Engagement Index')\nplt.ylabel(ylabel = 'Sectors')\nplt.title(label = 'Top Sectors')","1de86ffd":"best_company = dt_explore.groupby(by = 'Provider\/Company Name', as_index = False)['engagement_index'].agg('mean').sort_values(by ='engagement_index', ascending = False)\nsns.barplot(x = 'engagement_index', y ='Provider\/Company Name', data = best_company[0:5])\nplt.xlabel(xlabel = 'Engagement Index')\nplt.ylabel(ylabel = 'Provider\/Company Name')\nplt.title(label = 'Best 5 Provider\/Company')","25529e4d":"best_primary = dt_explore.groupby(by = 'Primary Essential Function', as_index = False)['engagement_index'].agg('mean').sort_values(by ='engagement_index', ascending = False)\nsns.barplot(x = 'engagement_index', y ='Primary Essential Function', data = best_primary[0:10])\nplt.xlabel(xlabel = 'Engagement Index')\nplt.ylabel(ylabel = 'Primary Essential Function')\nplt.title(label = 'Best 10 Primary Essential Function')","c442f167":"dt_state = dt_explore.groupby(by = 'state', as_index = False)['engagement_index'].agg('mean').sort_values(by ='engagement_index', ascending = False)\nsns.barplot(x = 'engagement_index', y ='state', data = dt_state)\nplt.xlabel(xlabel = 'Engagement Index')\nplt.ylabel(ylabel = 'State')\nplt.title(label = 'Engagement Index based on State')","28b71173":"dt_locale = dt_explore.groupby(by = 'locale', as_index = False)['engagement_index'].agg('mean').sort_values(by ='engagement_index', ascending = False)\nsns.barplot(x = 'engagement_index', y ='locale', data = dt_locale)\nplt.xlabel(xlabel = 'Engagement Index')\nplt.ylabel(ylabel = 'Locale')\nplt.title(label = 'Engagement Index based on Locale')","4d6585f9":"dt_rural =  dt_explore[dt_explore[\"locale\"] == 'Rural']\ndt_rural.head()","2bc718fa":"rural_engagement = dt_rural.groupby([\"locale\", \"time\"],as_index=False)[\"engagement_index\"].mean().reset_index(drop=True)\nrural_engagement.head()","ece44ca3":"sns.lineplot(x = 'time',y='engagement_index',data=rural_engagement)\nplt.title(label = 'Engagement Index based from Rural')","a92df18a":"dt_suburb =  dt_explore[dt_explore[\"locale\"] == 'Suburb']\ndt_suburb.head()","15c7317f":"suburb_engagement = dt_suburb.groupby([\"locale\", \"time\"],as_index=False)[\"engagement_index\"].mean().reset_index(drop=True)\nsuburb_engagement.head()","b59715c2":"sns.lineplot(x = 'time',y='engagement_index',data=suburb_engagement)\nplt.title(label = 'Engagement Index based from Suburb')","f8be9d4b":"dt_town =  dt_explore[dt_explore[\"locale\"] == 'Town']\ndt_town.head()","ad4f7b96":"town_engagement = dt_town.groupby([\"locale\", \"time\"],as_index=False)[\"engagement_index\"].mean().reset_index(drop=True)\ntown_engagement.head()","5acb6b24":"sns.lineplot(x = 'time',y='engagement_index',data=town_engagement)\nplt.title(label = 'Engagement Index based from Town')","923cfc71":"dt_city =  dt_explore[dt_explore[\"locale\"] == 'City']\ndt_city.head()","6f205056":"city_engagement = dt_city.groupby([\"locale\", \"time\"],as_index=False)[\"engagement_index\"].mean().reset_index(drop=True)\ncity_engagement.head()","05e465a9":"sns.lineplot(x = 'time',y='engagement_index',data=city_engagement)\nplt.title(label = 'Engagement Index based from City')","3432948c":"sns.lineplot(x = 'time',y='engagement_index',data=rural_engagement,color='blue')\nsns.lineplot(x = 'time',y='engagement_index',data=suburb_engagement,color='green')\nsns.lineplot(x = 'time',y='engagement_index',data=city_engagement,color='red')\nsns.lineplot(x = 'time',y='engagement_index',data=town_engagement,color='orange')\nplt.legend(labels=['Rural', 'Suburb', 'City','Town'])\nplt.title(label = 'Engagement Index based groupby Locale')","b196ef5b":"dt_explore.head()","d2872dc9":"fix_pptotalraw = {\n    '[4000, 6000[': '4000-6000',\n    '[6000, 8000[': '6000-8000',\n    '[8000, 10000[': '8000-10000',\n    '[10000, 12000[': '10000-12000',\n    '[12000, 14000[': '12000-14000',\n    '[14000, 16000[': '14000-16000',\n    '[16000, 18000[': '16000-18000',\n    '[18000, 20000[': '18000-20000',\n    '[20000, 22000[': '20000-22000',\n    '[22000, 24000[': '22000-24000',\n    '[32000, 34000[': '32000-34000'}\ndt_explore['pp_total_raw'] = dt_explore['pp_total_raw'].map(fix_pptotalraw)","fe98f07b":"dt_pctblack = dt_explore.groupby(by = 'pct_black\/hispanic', as_index = False)['engagement_index'].agg('mean').sort_values(by ='engagement_index')\nsns.barplot(x = 'engagement_index', y ='pct_black\/hispanic', data = dt_pctblack)\nplt.xlabel(xlabel = 'Engagement Index')\nplt.ylabel(ylabel = 'pct_black\/hispanic')\nplt.title(label = 'Engagement Index based on Percentage student in district identifed as Black ')","4935cd2d":"dt_connection_ratio = dt_explore.groupby(by = 'county_connections_ratio', as_index = False)['engagement_index'].agg('mean').sort_values(by ='engagement_index')\nsns.barplot(x = 'engagement_index', y ='county_connections_ratio', data = dt_connection_ratio)\nplt.xlabel(xlabel = 'Engagement Index')\nplt.ylabel(ylabel = 'Country Connections Ratio')\nplt.title(label = 'Engagement Index based on Country Connections Ratio')","56d0d47b":"dt_explore.head()","c203cf9c":"dt_explore.tail()","9bd241f3":"start_date = \"2020-3-13\"\nend_date = \"2020-11-23\"\n\nafter_start_date = dt_explore[\"time\"] >= start_date\nbefore_end_date = dt_explore[\"time\"] <= end_date\nbetween_two_dates = after_start_date & before_end_date\ndt_filtercovid = dt_explore.loc[between_two_dates]","f1d37f7a":"start_date = \"2020-1-1\"\nend_date = \"2020-3-12\"\n\nafter_start_date = dt_explore[\"time\"] >= start_date\nbefore_end_date = dt_explore[\"time\"] <= end_date\nbetween_two_dates = after_start_date & before_end_date\ndt_beforecvd19 = dt_explore.loc[between_two_dates]","7c7a0166":"dt_filtercovid.head()","6c16d105":"dt_beforecvd19.head()","6ab02c85":"dt_state_aftercvd = dt_filtercovid.groupby(by = 'state', as_index = False)['engagement_index'].agg('mean').sort_values(by ='engagement_index', ascending = False)\nsns.barplot(x = 'engagement_index', y ='state', data = dt_state_aftercvd)\nplt.xlabel(xlabel = 'Engagement Index')\nplt.ylabel(ylabel = 'State')\nplt.title(label = 'Engagement Index based on State after Covid19')","58d7dcd2":"dt_state_beforecvd = dt_beforecvd19.groupby(by = 'state', as_index = False)['engagement_index'].agg('mean').sort_values(by ='engagement_index', ascending = False)\nsns.barplot(x = 'engagement_index', y ='state', data = dt_state_beforecvd)\nplt.xlabel(xlabel = 'Engagement Index')\nplt.ylabel(ylabel = 'State')\nplt.title(label = 'Engagement Index based on State before Covid19')","ddf846d7":"best_product_beforecvd = dt_beforecvd19.groupby(by = 'Product Name', as_index = False)['engagement_index'].agg('sum').sort_values(by ='engagement_index', ascending = False)\nsns.barplot(x = 'engagement_index', y ='Product Name', data = best_product_beforecvd[0:15])\nplt.xlabel(xlabel = 'Engagement Index')\nplt.ylabel(ylabel = 'Product Name')\nplt.title(label = 'Best 15 Product Name That Used before Covid19')","24165e9d":"best_product_aftercvd = dt_filtercovid.groupby(by = 'Product Name', as_index = False)['engagement_index'].agg('sum').sort_values(by ='engagement_index', ascending = False)\nsns.barplot(x = 'engagement_index', y ='Product Name', data = best_product_aftercvd[0:15])\nplt.xlabel(xlabel = 'Engagement Index')\nplt.ylabel(ylabel = 'Product Name')\nplt.title(label = 'Best 15 Product Name That Used After Covid19')","9b6b1abe":"best_company_bfrcvd = dt_beforecvd19.groupby(by = 'Provider\/Company Name', as_index = False)['engagement_index'].agg('sum').sort_values(by ='engagement_index', ascending = False)\nsns.barplot(x = 'engagement_index', y ='Provider\/Company Name', data = best_company_bfrcvd[0:5])\nplt.xlabel(xlabel = 'Engagement Index')\nplt.ylabel(ylabel = 'Provider\/Company Name')\nplt.title(label = 'Best 5 Provider\/Company before Covid19')","70fcaaef":"best_company_aftrcvd = dt_filtercovid.groupby(by = 'Provider\/Company Name', as_index = False)['engagement_index'].agg('sum').sort_values(by ='engagement_index', ascending = False)\nsns.barplot(x = 'engagement_index', y ='Provider\/Company Name', data = best_company_aftrcvd[0:5])\nplt.xlabel(xlabel = 'Engagement Index')\nplt.ylabel(ylabel = 'Provider\/Company Name')\nplt.title(label = 'Best 5 Provider\/Company After Covid19')","67d72849":"dt_pct_black_1 =  dt_explore[dt_explore[\"pct_black\/hispanic\"] == '0%-20%']\ndt_pct_black_2 =  dt_explore[dt_explore[\"pct_black\/hispanic\"] == '20%-40%']\ndt_pct_black_3 =  dt_explore[dt_explore[\"pct_black\/hispanic\"] == '40%-60%']\ndt_pct_black_4 =  dt_explore[dt_explore[\"pct_black\/hispanic\"] == '60%-80%']\ndt_pct_black_5 =  dt_explore[dt_explore[\"pct_black\/hispanic\"] == '80%-100%']","8785695f":"dt_pct_black_1 = dt_pct_black_1.set_index('time').groupby(pd.Grouper(freq='D')).mean()\ndt_pct_black_2 = dt_pct_black_2.set_index('time').groupby(pd.Grouper(freq='D')).mean()\ndt_pct_black_3 = dt_pct_black_3.set_index('time').groupby(pd.Grouper(freq='D')).mean()\ndt_pct_black_4 = dt_pct_black_4.set_index('time').groupby(pd.Grouper(freq='D')).mean()\ndt_pct_black_5 = dt_pct_black_5.set_index('time').groupby(pd.Grouper(freq='D')).mean()","506a123a":"sns.lineplot(x = 'time',y='engagement_index',data=dt_pct_black_1,color='blue',linestyle=\"dashed\")\nsns.lineplot(x = 'time',y='engagement_index',data=dt_pct_black_2,color='green',linestyle=\"dashed\")\nsns.lineplot(x = 'time',y='engagement_index',data=dt_pct_black_3,color='red',linestyle=\"dashed\")\nsns.lineplot(x = 'time',y='engagement_index',data=dt_pct_black_4,color='orange',linestyle=\"dashed\")\nsns.lineplot(x = 'time',y='engagement_index',data=dt_pct_black_5,color='pink',linestyle=\"dashed\")\nplt.legend(labels=['0%-20%', '20%-40%', '40%-60%','60%-80%','80%-100%'])\nplt.title(label = 'Engagement Index based groupby pct_black\/hispanic')","4207086f":"### After doing analysis from the dataset that is already given I want to answer the first challenge that talking about the state of digital learning in 2020. Of course, we can see there's a lot of product digital that can help humans to learn. From the dataset, there are  372 products. We can see the picture of digital connectivity and engagement increasing in 2020 it's because all of the activity including the most important Learning sector must do digital learning. We can see the in the data visualization time series of engagement index in using product digital is increasing in months where the covid19 are spreading. In the future, this habit that doing online and distance learning will adapt to the condition because time by time off course technology will improve. Based on the data student engagement index there is an increasing percentage because pandemic it's until two times more than before and getting high after the summer holiday","94a5b47d":"# Exploration district_info dataset","c61b30f4":"## Explanation Column in Engagement Data dataset\n* Name = Description\n* time = date in \"YYYY-MM-DD\"\n* lp_id = The unique identifier of the product\n* pct_access = Percentage of students in the district have at least one page-load event of a given product and on a given day\n* engagement_index = Total page-load events per one thousand students of a given product and on a given day\n* district_id = The unique identifier of the school district","efd58197":"## Explanation Column in product_info dataset\nThe product file products_info.csv includes information about the characteristics of the top 372 products with most users in 2020. The categories listed in this file are part of LearnPlatform's product taxonomy.\n\n* LP ID = The unique identifier of the product\n* URL = Web Link to the specific product\n* Product Name = Name of the specific product\n* Provider\/Company Name = Name of the product provider\n* Sector(s) = Sector of education where the product is used\n* Primary Essential Function = The basic function of the product. There are two layers of labels here. Products are first labeled as one of these three categories: LC = Learning & Curriculum, CM = Classroom Management, and SDO = School & District Operations. Each of these categories have multiple sub-categories with which the products were labeled","d9fa33e9":"# Data Description\nThere are three dataset from a daily edtech engagement data from over 200 school districts in 2020\n1. The engagement_ data folder is based on LearnPlatform\u2019s Student Chrome Extension. The extension collects page load events of over 10K education technology products in our product library, including websites, apps, web apps, software programs, extensions, ebooks, hardwares, and services used in educational institutions. The engagement data have been aggregated at school district level, and each file represents data from one school district.\n1. The products_info.csv file includes information about the characteristics of the top 372 products with most users in 2020.\n1. The districts_info.csv file includes information about the characteristics of school districts, including data from NCES and FCC.","c18e8a43":"# Problem Statement\nThe COVID-19 Pandemic has disrupted learning for more than 56 million students in the United States. In the Spring of 2020, most states and local governments across the U.S. closed educational institutions to stop the spread of the virus. In response, schools and teachers have attempted to reach students remotely through distance learning tools and digital platforms. Until today, concerns of the exacaberting digital divide and long-term learning loss among America\u2019s most vulnerable learners continue to grow.","15c118eb":"# Challenge\n1. Doing Exploration about the state of digital learning in 2020.\n1. How the engagement of digital learning relates to factors such as district demographics, broadband access, and state\/national level policies and events.","bc7f84ca":"## Explanation Column in disctrict_info dataset\n* disctrict_id = The unique identifier of the school district\n* state = The state where the district resides in\n* locale = NCES locale classification that categorizes U.S. territory into four types of areas: City, Suburban, Town, and Rural.\n* pct_black\/hispanic = Percentage of students in the districts identified as Black or Hispanic based on 2018-19 NCES data\n* pct_free\/reduced = Percentage of students in the districts eligible for free or reduced-price lunch based on 2018-19 NCES data\n* countyconnectionsratio = ratio (residential fixed high-speed connections over 200 kbps in at least one direction\/households) based on the county level data from FCC From 477 (December 2018 version)\n* pptotalraw = Per-pupil total expenditure (sum of local and federal expenditure) from Edunomics Lab's National Education Resource Database on Schools (NERD$) project.","162b0352":"# Exploration product_info dataset","d2634ede":"# Conclusion","94a944f5":"# Explanation in Engagement_Data"}}