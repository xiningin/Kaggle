{"cell_type":{"54986fc3":"code","7e13039d":"code","46cd4ff1":"code","f37589dd":"code","2925a3e2":"code","2d6674ab":"code","8d334f1b":"code","e5b2b30d":"code","dc8459e0":"code","8a2388d2":"code","6dcaca64":"code","d4bf4b04":"code","0575bf2b":"code","1235ee0a":"code","5cb4f364":"code","640547dc":"code","ac710c4c":"code","c8eb736e":"markdown"},"source":{"54986fc3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7e13039d":"# Group number= 2\n# Group members\n# Ashwani Kumar Singh   18SCSE1180047\n# \n# Activity =2\n# Answer some questions\n# 1. Read the dataset.\n# 2. Describe the dataset.\n# 3. Find mean,median and mode of columns.\n# 4. Find the distribution of columns with numerical data. Evaluate if they are normal or not.\n# 5. Draw different types of graphs to represent information hidden in the dataset.\n# 6. Find columns which are correlated.\n# 7. Find columns which are not correlated.\n# 8. Compare different columns of dataset\n# 9. Is Any supervised machine learning possible ? if yes explain.\n","46cd4ff1":" # 1. Read the dataset.\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\ndf=pd.read_csv('\/kaggle\/input\/student-performance-data-set\/student-por.csv')\ndf","f37589dd":"# 2. Describe the dataset. \ndf.describe(include = 'all')","2925a3e2":"# 3. Find mean,median and mode of columns.\ndf.mean()","2d6674ab":"# 3. Find mean,median and mode of columns. \ndf.median()","8d334f1b":"# 3. Find mean,median and mode of columns. \ndf.mode ()","e5b2b30d":"# 4. Find the distribution of columns with numerical data. Evaluate if they are normal or not.\n# Numeric Dataset and these features are normal\nnumeric = list(df._get_numeric_data().columns)\nnumeric","dc8459e0":"# 4. Find the distribution of columns with numerical data. Evaluate if they are normal or not.\n# Ordinal columns\n# columns which are not normal are ordinal\ncategorical = list(set(df.columns) - set(df._get_numeric_data().columns))\ncategorical","8a2388d2":"# 5. Draw different types of graphs to represent information hidden in the dataset.\n\n\ndf['sex'].value_counts().plot(kind ='bar',color= 'tab:orange')","6dcaca64":"# 5. Draw different types of graphs to represent information hidden in the dataset.\n\n\ndf['sex'].value_counts().plot(kind ='bar',color= 'tab:orange')sns.distplot(df['G3'], color = 'r',bins= 10)","d4bf4b04":"# 5. Draw different types of graphs to represent information hidden in the dataset.\n\n\ndf['age'].value_counts().plot(kind ='bar',color= 'tab:green')","0575bf2b":"# 5. Draw different types of graphs to represent information hidden in the dataset.\n\n\nsns.boxplot(x = df['Fjob'], y =df['G3'])","1235ee0a":"# 5. Draw different types of graphs to represent information hidden in the dataset.\n\n\nsns.boxplot(x = df['Mjob'], y =df['G3'])","5cb4f364":"# 5. Draw different types of graphs to represent information hidden in the dataset.\nfemale=df.loc[df['sex']=='F'].count()[0]\nmale=df.loc[df['sex']=='M'].count()[0]\nlabels=['Female','Male']\nplt.pie([female,male],labels=labels,autopct='%.2f%%')\n","640547dc":"# 6. Find columns which are correlated.\n# 7. Find columns which are not correlated.\ndf.corr()","ac710c4c":"# 8. Compare different columns of dataset\ncomparison_column = np.where(df[\"G1\"] == df[\"G2\"], True, False)\ndf[\"equal\"] = comparison_column\ndf","c8eb736e":"From the histogram above, we can say that the most frequent grade is around 10\u201312,"}}