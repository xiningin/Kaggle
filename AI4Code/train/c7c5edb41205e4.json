{"cell_type":{"e834c066":"code","dee2c6d4":"code","bce74134":"code","963c80e3":"code","8cda6dff":"code","b40c4c3f":"code","7d8dff1c":"code","37b21239":"code","751bc9fb":"code","4a3090d4":"code","56bdb7ad":"code","c92f76d7":"code","c754780d":"code","70dcf04b":"code","c425f8c5":"code","92dde381":"code","66cea2db":"code","861dfd85":"code","79aafe49":"code","ab38f81c":"code","86368028":"code","ab95e5ee":"code","db7a466b":"code","700d14c5":"code","ca79971f":"code","f52b6e4f":"code","181198eb":"code","ece6a8ab":"code","115ade3b":"code","200ea8bb":"code","bd1a0737":"markdown"},"source":{"e834c066":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dee2c6d4":"import seaborn as sns\nimport matplotlib.pyplot as plt","bce74134":"gamelist = pd.read_csv(\"..\/input\/videogamesales\/vgsales.csv\")","963c80e3":"gamelist.info()","8cda6dff":"gamelist.columns","b40c4c3f":"gamelist.corr()","7d8dff1c":"f,ax = plt.subplots(figsize= (14,14))\nsns.heatmap(gamelist.corr(), annot= True, linewidths= 5, fmt= \".1f\", ax=ax)\nplt.show()","37b21239":"gamelist.head(15)","751bc9fb":"minGlobal_Sales = gamelist['Global_Sales'].min()\nmaxGlobal_Sales = gamelist['Global_Sales'].max()\npl = sns.catplot(x = \"Platform\",y = \"Global_Sales\", data = gamelist)\npl.set(ylim=(minGlobal_Sales,maxGlobal_Sales))\nfig = plt.gcf()\nfig.set_size_inches(12,12)","4a3090d4":" #Histogram\ngamelist.Global_Sales.plot(kind=\"hist\",bins= 20, figsize=(10,10))","56bdb7ad":"data_frame = gamelist[[\"Platform\"]]\nprint(type(data_frame))","c92f76d7":"x = gamelist[\"Global_Sales\"]>=29\ngamelist[x]","c754780d":"gamelist[np.logical_and(gamelist[\"Global_Sales\"]>30, gamelist[\"EU_Sales\"]<10)]","70dcf04b":"#It is an action game and games with more than 15 sales in the world.\n\ngamelist[(gamelist[\"Genre\"]==\"Action\") & (gamelist[\"Global_Sales\"]>15)] ","c425f8c5":"gamelist.columns","92dde381":"gamelist.shape","66cea2db":"gamelist.info()","861dfd85":"print(gamelist.Platform.value_counts(dropna=False))","79aafe49":"gamelist.describe()","ab38f81c":"import matplotlib.pyplot as plt\nlist_try = gamelist.boxplot(column=\"Rank\",by=\"Genre\", figsize=(12,8))\nplt.show()\n","86368028":"new_data = gamelist.head(8)\nnew_data","ab95e5ee":"data_1 = gamelist.head(8)\ndata_2 = gamelist.tail(8)\nconc_data = pd.concat([data_1, data_2],axis=0, ignore_index = True)\nconc_data","db7a466b":"data_1 = gamelist[\"EU_Sales\"].head(8)\ndata_2 = gamelist[\"JP_Sales\"].head(8)\nconc_data_col = pd.concat([data_1,data_2],axis=1)\nconc_data_col","700d14c5":"gamelist.dtypes","ca79971f":"gamelist[\"Genre\"] = gamelist[\"Genre\"].astype(\"category\")\ngamelist[\"NA_Sales\"] = gamelist[\"NA_Sales\"].astype(\"float\")\ngamelist.dtypes","f52b6e4f":"gamelist.info()","181198eb":"gamelist[\"Year\"].value_counts(dropna=False)","ece6a8ab":"#NaN = 271\ndata1=gamelist\ngamelist.Year.dropna(inplace = True)","115ade3b":"gamelist.Year.fillna(\"empty\",inplace = True)\nassert gamelist.Year.notnull().all()","200ea8bb":"gamelist.Year.value_counts(dropna=False)","bd1a0737":"##### "}}