{"cell_type":{"21fde29e":"code","4760071a":"code","f659defa":"code","80075607":"code","38ca3284":"code","8faece7c":"code","14d33257":"code","7d36a5a5":"code","23448149":"code","bd57771b":"code","c65f10f0":"code","056bc245":"code","a393aa24":"code","c2ceb82f":"code","be87d7e8":"code","e6b2da15":"code","c0172e92":"code","440990d3":"code","82c21c7a":"code","14c5a439":"code","72773562":"code","5287fd19":"code","9a47331e":"code","807a1efd":"code","78fee289":"code","45ab80e9":"code","d08e79e6":"code","1d3e7bec":"code","ffca5e9e":"code","a6f52b8a":"code","26f45d93":"code","a953ac3a":"code","136be3b8":"code","0a0b6d6f":"code","7ab54b5a":"markdown","e357e2b4":"markdown","b3853bac":"markdown","edb8c508":"markdown","d18112a9":"markdown","240194e5":"markdown","f99d75fd":"markdown","b067095f":"markdown","d4c31a54":"markdown","1f967636":"markdown","3479b22f":"markdown","b9c0d296":"markdown","1ddb8355":"markdown"},"source":{"21fde29e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4760071a":"power = pd.read_csv('\/kaggle\/input\/daily-power-generation-in-india-20172020\/file.csv')\npower.head()","f659defa":"state = pd.read_csv('\/kaggle\/input\/daily-power-generation-in-india-20172020\/State_Region_corrected.csv')\nstate.head()","80075607":"power.columns=[\"date\",\"region\",\"thermal_gen_act\",\"thermal_gen_est\",\"nuc_gen_act\",\"nuc_gen_est\",\"hydro_gen_act\",\"hydro_gen_est\"]","38ca3284":"power[\"thermal_gen_act\"]=power[\"thermal_gen_act\"].apply(lambda x:str(x).replace(',','')if ',' in str(x) else str(x))\npower[\"thermal_gen_act\"]=power[\"thermal_gen_act\"].apply(lambda x: float(x))","8faece7c":"power[\"thermal_gen_est\"]=power[\"thermal_gen_est\"].apply(lambda x:str(x).replace(\",\",\"\")if ',' in str(x) else str(x))\npower[\"thermal_gen_est\"]=power[\"thermal_gen_est\"].apply(lambda x: float(x))","14d33257":"power.tail()","7d36a5a5":"import matplotlib.pyplot as plt\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)\n\ndef automate_analysis(data):\n    print(\"\\n\")\n    print(\"The Dataset has {} rows & {} columns \\n\".format(data.shape[0],data.shape[1]))\n    print(\"\\n**********************************************************\\n\")\n    print(data.info())\n    print(\"\\n**********************************************************\\n\")\n    print(data.describe())\n    print(\"\\n**********************************************************\\n\")\n\n\n    print(\"The following are the plots for categorical columns: \\n\")\n    for i in data.columns:\n        if data[i].dtypes == object:\n            df = pd.DataFrame(data[i].value_counts().sort_values(ascending=False).head(20))\n            plot1= df.plot(kind='bar',)\n            plt.xlabel(i,fontsize=15)\n            plt.ylabel('Frequency',fontsize=15)\n            plt.yscale('log')\n            plt.xticks(fontsize=12)\n            plt.show(plot1)\t\n            print(\"\\n {} has {} unique values and {} percentage of null values \\n\".\n                   format(i,data[i].nunique(),round((data[i].isna().sum()\/data.shape[0])*100,3)))\n \n    print(\"The following are the plots for numeric columns: \\n\")\n    for i in data.columns:\n        if data[i].dtypes != object:\n            plt.figure(figsize=(12,9))\n            plot2= sns.distplot(data[i], bins = 25, kde = False)\n            plt.xlabel(i,fontsize=15)\n            plt.ylabel('Frequency',fontsize=15)\n            plt.yscale('log')\n            plt.xticks(fontsize=12)\n            plt.show(plot2)\n            print(\"\\n {} has {} unique values and {} percentage of null values \\n\".\n                  format(i,data[i].nunique(),round((data[i].isna().sum()\/data.shape[0])*100,3)))\t\n\n    print(\"The following is the heatmap to show the NA values in columns\")\n    plt.figure(figsize=(12,9))\n    plot3 = sns.heatmap(data.isnull(), cbar=False)\n    plt.show(plot3)","23448149":"automate_analysis(power)","bd57771b":"automate_analysis(state)","c65f10f0":"# correlation in the data\n\nsns.heatmap(power.corr())","056bc245":"#filling the missing values\n\npower = power.fillna(0.0)","a393aa24":"def actualVpredicted(df,f1,f2,title):\n    fig = go.Figure()\n    fig.add_trace(go.Bar(\n        x=df.region,\n        y=df.groupby(['region'])[f1].sum(),\n        name='Actual',\n        marker_color='indianred'\n    ))\n    fig.add_trace(go.Bar(\n        x=df.region,\n        y=df.groupby(['region'])[f2].sum(),\n        name='Predicted',\n        marker_color='lightsalmon'\n    ))\n\n    fig.update_layout(barmode='group', title = title)\n    fig.show()","c2ceb82f":"actualVpredicted(power,\"thermal_gen_act\",\"thermal_gen_est\",\"Thermal Generation \")","be87d7e8":"actualVpredicted(power,\"nuc_gen_act\",\"nuc_gen_est\",\"Nuclear power Generation region wise \")","e6b2da15":"actualVpredicted(power,\"hydro_gen_act\",\"hydro_gen_est\",\"Hydro power Generation region wise \")","c0172e92":"#Total power genration region wise\npower.groupby(by=['region'],as_index=False).sum()","440990d3":"data = [power['thermal_gen_est'].sum(),power['nuc_gen_est'].sum(),power['hydro_gen_est'].sum()]\nmy_labels = 'THERMAL','NUCLEAR','HYDRO'\nplt.pie(data, labels=my_labels, autopct='%1.1f%%', startangle=15)\nplt.title('Power generation from sources')\nplt.axis('equal')\nplt.show()","82c21c7a":"plt.rcParams['figure.figsize'] = 8, 5\nplt.style.use(\"fivethirtyeight\")\npd.options.plotting.backend = \"plotly\"\n\n","14c5a439":"def powergen(data,reg,title):\n    df = data[data['region']== reg]\n    fig = df.plot(x='date',y=['thermal_gen_act', 'thermal_gen_est'])\n    fig.update_layout(title= title,legend_orientation=\"h\")\n    fig.show()","72773562":"powergen(power,\"Southern\",\"Thermal Generation in Southern Region\")","5287fd19":"powergen(power,\"Northern\",\"Thermal Generation in Northern Region\")","9a47331e":"powergen(power,\"Western\",\"Thermal Generation in Western Region\")","807a1efd":"powergen(power,\"Eastern\",\"Thermal Generation in Eastern Region\")","78fee289":"share = state.groupby('Region').agg('sum')\nshare = share.reset_index()\nshare","45ab80e9":"fig=px.bar(state,\n           x='State \/ Union territory (UT)',\n           y='Area (km2)',\n           hover_data=['Area (km2)'],\n           color='State \/ Union territory (UT)',\n           )\nfig.update_layout(title_text='Statewise Area(km2)')\nfig.show()","d08e79e6":"fig=px.bar(state,\n           x='State \/ Union territory (UT)',\n           y='National Share (%)',\n           hover_data=['National Share (%)'],\n           color='State \/ Union territory (UT)',\n           )\nfig.update_layout(title_text='Statewise Generation Share (%)')\nfig.show()","1d3e7bec":"from fbprophet import Prophet\npower_prophet = power[['date','thermal_gen_act']]","ffca5e9e":"power_prophet = power_prophet.rename(columns = {'date': 'ds', 'thermal_gen_act' : 'y'})","a6f52b8a":"m = Prophet()\nm.fit(power_prophet)","26f45d93":"# Forcasting into the future\nfuture = m.make_future_dataframe(periods = 365)\nforecast = m.predict(future)","a953ac3a":"forecast","136be3b8":"figure = m.plot(forecast, xlabel = 'Date', ylabel = 'Thermal_generation')","0a0b6d6f":"figure2 = m.plot_components(forecast)","7ab54b5a":"* This will show the shape of dataframe.\n* info of data \n* it describe the stats of data\n* plots catogorical and numerical data\n* the unique values and missing value percentage\n* heatmap of missing values","e357e2b4":"# Power generation in India\n In this notebook, we will explore India's power generation over three years.\n \n India is the world's third largest producer and third largest consumer of electricity. The national electric grid in India has an installed capacity of 370.106 GW as of 31 March 2020. Renewable power plants, which also include large hydroelectric plants, constitute 35.86% of India's total installed capacity. During the 2018-19 fiscal year, the gross electricity generated by utilities in India was 1,372 TWh and the total electricity generation (utilities and non utilities) in the country was 1,547 TWh. ","b3853bac":"### Forecast comparison with facebook prophet vs tableau forecast","edb8c508":"## Trying to automate the analytics flow","d18112a9":"Nuclear Generation is not done by many of the states and hence it can assumed that values which are missing are actually 0.\n\nAnd since the values are NaN in both the nuclear variables, both of the values can be replaced by 0.0","240194e5":"\nIndia's electricity sector consumes about 72% of the coal produced in the country. For utility power generation, India consumed 622.22 million tons of coal during 2019-20 which is less by 1% compared to 628.94 million tons during 2018-19. However coal imports for utility power generation increased by 12.3% during year 2019-20 at 69.22 million tons from 61.66 million tons during 2018-19\n\nThermal power production consists of coal, lignite, gas and diesel.\n \n**From our analysis, India generates 85.7% of power using thermal which plays a major role in pollution. \nNuclear generate 2.3%, this also impact enviornment in major level.\nFrom hydro 11% are generated**\n\nThere are four types of environment impacts based on the nature and features of the impacts:\n\n\u2022  Direct impact- e.g. Impact of untreated wastewater from the power plant discharged into a river or stream impacting marine life.\n\n\u2022  Indirect impact - e.g. SO2 from power plant deposited as SO4 on the soil affects farming.\n\n\u2022 Cumulative impact - e.g. Combined impact of all emissions of existing and upcoming projects in a region\n\n\u2022 Induced impact - e.g. Impact of change in land use patterns and population in the area because of the plant on the existing natural resources like water, air.\n\nEnvironmental Impact\n\n1. Air Pollution\n2. Water Pollution\n3. Land Degradation\n4. Noise pollution\n\n***India ia country of large population, the power consumption in the upcoming years are also going to high in power consumption.\nThe country should take action to generate power using renewable sources.\n***\n\nSource:\n* [https:\/\/www.thermalwatch.org.in\/environmental-impact-assessment\/impacts-power-plants](http:\/\/)\n* [https:\/\/www.ripublication.com\/ijeem_spl\/ijeemv4n6_09.pdf](http:\/\/)\n* [https:\/\/public.tableau.com\/profile\/arul.rajan.v#!\/vizhome\/power_india\/PowergenerarioninIndia](http:\/\/)\n","f99d75fd":"The unit MU stands for Mega Unit i.e one million unit of electricity where one unit signifies one kilowatt hour.","b067095f":"## Forcast the power generation using facebook prophet","d4c31a54":"## Thermal power generation region wise\n### Comparison between actual production and estimation","1f967636":"![image.png](attachment:image.png)","3479b22f":"### Actual vs predicted","b9c0d296":"Check the tableau link, of power generation india. and I have also did analytical work and forecasted the generation\n[https:\/\/public.tableau.com\/profile\/arul.rajan.v#!\/vizhome\/power_india\/PowergenerarioninIndia](http:\/\/)","1ddb8355":"![image.png](attachment:image.png)"}}