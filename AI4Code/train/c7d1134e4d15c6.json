{"cell_type":{"691b312d":"code","35c07df5":"code","1ea8d9ff":"code","99cce34b":"code","f73897bb":"code","7bd2a625":"code","0448dcff":"code","f46b42be":"markdown","e52bcbb4":"markdown","eb701206":"markdown","34f3e7da":"markdown"},"source":{"691b312d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport csv\nfrom collections import Counter\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","35c07df5":"df = pd.read_csv(\"..\/input\/noticias-laraznpblico\/data_larazon_publico_v2.csv\")\n\ndf.info()","1ea8d9ff":"with open('..\/input\/noticias-laraznpblico\/data_larazon_publico_v2.csv', newline='', encoding=\"utf8\") as File:  \n    reader = csv.reader(File, delimiter=\",\")\n    \n    #Get words in titles\n    w_title = list()\n    w_content = list()\n    \n    for row in reader:\n        title = row[3]\n        \n        words_t = title.split(\" \")\n        \n        for w in words_t:\n            if len(w)>4:\n                w_title.append(w.lower())\n    \n        #Get words in content\n        content = row[2]\n        \n        words_c = content.split(\" \")\n        \n        for w in words_c:\n            if len(w)>4:\n                w_content.append(w.lower())","99cce34b":"c = Counter(w_title)\ndata_t = {}\nprint (\"Ranking | Word | Frequency\")\nfor i in range(0,50):\n    title_wf = c.most_common()[i][0]\n    title_wfc = c.most_common()[i][1]\n    print(f\"   {i}   :  {title_wf}  :    {title_wfc}   \")\n    data_t[title_wf] = title_wfc\n    if i == 50:\n        break","f73897bb":"c = Counter(w_content)\ndata_c = {}\nprint (\"Ranking | Word | Frequency\")\nfor i in range(0,50):\n    content_wf = c.most_common()[i][0]\n    content_wfc = c.most_common()[i][1]\n    print(f\"   {i}   :  {content_wf}  :    {content_wfc}   \")\n    data_c[content_wf] = content_wfc\n    if i == 50:\n        break","7bd2a625":"df = pd.DataFrame.from_dict(data_t, orient='index')\nmuestra = df[:20].copy()\nmuestra.plot(kind = \"bar\")","0448dcff":"df = pd.DataFrame.from_dict(data_c, orient='index')\nmuestra = df[:20].copy()\nmuestra.plot(kind = \"bar\")","f46b42be":"# Step 2 - Visualization","e52bcbb4":"Most frequent words in titles","eb701206":"# Step 1 - EDA and extract the 50 most used words in title and content","34f3e7da":"Most frequent words in news content"}}