{"cell_type":{"e0eb9d21":"code","5dc93707":"code","16299085":"code","707b7df5":"code","5ee85bb8":"code","e4e8ea3c":"code","0a6f27b7":"code","489aa05a":"code","fb74d4a6":"code","c1f079bf":"code","94105617":"code","c25ded2b":"code","f4ad3660":"code","b85ec6c3":"code","7e242b85":"code","4c7fd89a":"code","ea8500bd":"code","cc8a19e7":"code","548aa543":"code","5c9f7ef8":"code","f75b0582":"code","6d0d88db":"code","f79f530c":"code","320bab89":"code","72ed4d87":"code","1d432b95":"code","5f43e7c7":"code","28c3771d":"code","b2709b58":"code","7b3ac306":"code","6be3dc8a":"code","163f2b31":"code","1e11eea5":"code","80103ff9":"code","f6ab38f4":"code","22cc0738":"code","c8202caf":"code","75bc69b4":"code","658652ab":"code","f1f59e76":"code","c7c16fa2":"code","eba7c347":"code","355441b4":"code","84b28c65":"code","63c0d031":"code","accb953c":"code","838a2733":"code","3a7f9ab3":"code","8102ce4b":"code","2aa8119d":"code","f019821a":"code","347b1b9f":"code","624820cf":"code","f7215492":"code","eff815ca":"code","06396095":"code","afd366c4":"code","80304bb8":"code","2b843546":"code","e92089d4":"code","eda16fba":"code","b6b0114b":"code","d474c2f9":"code","d4f5d1d0":"code","73633c6d":"code","daf096db":"code","d89f2005":"code","814f92fa":"code","27916cf3":"code","84b6f6a8":"code","7e875f71":"code","6d838937":"code","0d9d026d":"code","45dd634d":"markdown","48bf26f2":"markdown","7110e051":"markdown","840ce67a":"markdown","a9242fd2":"markdown","8fb9c076":"markdown","631017a3":"markdown","23240206":"markdown","a9f2cfac":"markdown","7c86b7d2":"markdown","a9be36cf":"markdown","b2d1f095":"markdown","49d8e40e":"markdown","cdf3675e":"markdown","82066f15":"markdown","fe61b412":"markdown","a45980ad":"markdown","f6c60c61":"markdown","d43b9ed1":"markdown","bc69a4ce":"markdown","6a9781dd":"markdown","4d98a147":"markdown","6e7e95e1":"markdown","f5cd9809":"markdown","978d9f30":"markdown","68572331":"markdown","ba31df94":"markdown","d4a03d4c":"markdown","ea61ddbc":"markdown","cc14efe1":"markdown","0d51245c":"markdown","6a6ee56f":"markdown","3a0a3c35":"markdown","2bee831a":"markdown","27774a3e":"markdown","3287aac2":"markdown","db407a01":"markdown","f13f02f1":"markdown","f1faa447":"markdown","fb3b9a78":"markdown","74b77f98":"markdown","13cf14a8":"markdown","92436e2e":"markdown","84222ac7":"markdown","5a725a36":"markdown","73a01af3":"markdown","64c2eb73":"markdown","58931227":"markdown","a10ee1fe":"markdown","c835ef14":"markdown","77a6cac6":"markdown","cbb7d329":"markdown","ef7462b7":"markdown"},"source":{"e0eb9d21":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom collections import Counter\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\nimport plotly.graph_objs as go\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5dc93707":"googlePlay = pd.read_csv(\"\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv\")\ngooglePlay.head()","16299085":"googlePlay.columns","707b7df5":"googlePlay.describe() # one columns that has numbers data","5ee85bb8":"googlePlay.Price.value_counts()","e4e8ea3c":"googlePlay.Type.value_counts()","0a6f27b7":"googlePlay[\"Content Rating\"]","489aa05a":"googlePlay.Genres","fb74d4a6":"googlePlay[\"Current Ver\"]","c1f079bf":"googlePlay[\"Android Ver\"]","94105617":"googlePlay.drop_duplicates(subset=\"App\",inplace=True)\ngooglePlay=googlePlay[googlePlay[\"Android Ver\"] != np.nan]\ngooglePlay=googlePlay[googlePlay[\"Android Ver\"] != \"NaN\"]\ngooglePlay=googlePlay[googlePlay[\"Installs\"] != \"Free\"]\ngooglePlay=googlePlay[googlePlay[\"Installs\"] != \"Paid\"]","c25ded2b":"googlePlay[\"Installs\"] = googlePlay[\"Installs\"].apply(lambda x : x.replace(\"+\",\"\") if \"+\" in str(x) else x)\ngooglePlay[\"Installs\"] = googlePlay[\"Installs\"].apply(lambda x : x.replace(\",\",\"\") if \",\" in str(x) else x)\ngooglePlay[\"Installs\"] = googlePlay[\"Installs\"].apply(lambda x : int(x))","f4ad3660":"googlePlay[\"Size\"]=googlePlay[\"Size\"].apply(lambda x : str(x).replace(\"Varies with device\",\"NaN\") if \"Varies with device\" in str(x) else x)\ngooglePlay[\"Size\"] = googlePlay[\"Size\"].apply(lambda x : str(x).replace(\"M\",\"\") if \"M\" in str(x) else x)\ngooglePlay[\"Size\"]=googlePlay[\"Size\"].apply(lambda x : str(x).replace(\",\",\"\") if \",\" in str(x) else x)\ngooglePlay[\"Size\"] = googlePlay[\"Size\"].apply(lambda x : float(str(x).replace(\"k\",\"\"))\/1000 if \"k\" in str(x) else x)","b85ec6c3":"googlePlay[\"Size\"]=googlePlay[\"Size\"].apply(lambda x : float(x))\ngooglePlay[\"Installs\"] = googlePlay[\"Installs\"].apply(lambda x : float(x))","7e242b85":"googlePlay[\"Price\"] = googlePlay[\"Price\"].apply(lambda x : str(x).replace(\"$\",\"\") if \"$\" in str(x) else str(x))\ngooglePlay[\"Price\"]=googlePlay[\"Price\"].apply(lambda x : float(x))","4c7fd89a":"googlePlay[\"Reviews\"] = googlePlay[\"Reviews\"].apply(lambda x : int(x))","ea8500bd":"googlePlay.columns[googlePlay.isnull().any()]","cc8a19e7":"googlePlay[\"Rating\"].dropna(inplace=True)\ngooglePlay[\"Size\"].dropna(inplace=True)\ngooglePlay[\"Type\"].dropna(inplace=True)\ngooglePlay[\"Current Ver\"].dropna(inplace=True)\ngooglePlay[\"Android Ver\"].dropna(inplace=True)","548aa543":"Counter(googlePlay[\"Rating\"].isnull())\nCounter(googlePlay[\"Size\"].isnull())\nCounter(googlePlay[\"Type\"].isnull())","5c9f7ef8":"googlePlay.info()","f75b0582":"def barPlotApps(variable):\n    var = googlePlay[variable]\n    varValue = var.value_counts()\n    plt.figure(figsize=(14,5))\n    plt.bar(varValue.index,varValue.values)\n    plt.xticks(varValue.index,rotation=90)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"Frequency of according to categories\")\n    plt.show()\n    print(\"{} : \\n {}\".format(variable,varValue))\n    ","6d0d88db":"category = \"Category\"\n\ngooglePlay[category].value_counts().index","f79f530c":"category = [\"Category\"]\n\nfor c in category:\n    barPlotApps(c)","320bab89":"def plotHistApp(variable):\n    plt.figure(figsize=(14,5))\n    plt.hist(googlePlay[variable],bins=50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} variable showing with hist\".format(variable))\n    plt.show()","72ed4d87":"numericVar = ['Rating', 'Reviews','Installs','Size','Price']\n\nfor n in numericVar:\n    plotHistApp(n)","1d432b95":"googlePlay.columns","5f43e7c7":"# Category - Rating\ngooglePlay[[\"Category\",\"Rating\"]].groupby([\"Category\"],as_index=False).mean().sort_values(by=\"Rating\",ascending=False)","28c3771d":"# Category - Reviews\ngooglePlay.Reviews=googlePlay.Reviews.replace(np.nan,0)\ngooglePlay[[\"Category\",\"Reviews\"]].groupby([\"Category\"],as_index=False).mean().sort_values(by=\"Reviews\",ascending=False)","b2709b58":"#Category - Installs\ngooglePlay.Installs=googlePlay.Installs.replace(np.nan,0)\ngooglePlay[[\"Category\",\"Installs\"]].groupby([\"Category\"],as_index=False).mean().sort_values(by=\"Installs\",ascending=False)","7b3ac306":"# Category - Price\ngooglePlay[[\"Category\",\"Price\"]].groupby([\"Category\"],as_index=False).mean().sort_values(by=\"Price\",ascending=False)","6be3dc8a":"# Content Rating - Reviews\n\ngooglePlay[[\"Content Rating\",\"Reviews\"]].groupby([\"Content Rating\"],as_index=False).mean().sort_values(by=\"Reviews\",ascending=False)","163f2b31":"# Content Rating - Installs\n\ngooglePlay[[\"Content Rating\",\"Installs\"]].groupby([\"Content Rating\"],as_index=False).mean().sort_values(by=\"Installs\",ascending=False)","1e11eea5":"# Content Rating - Price\ngooglePlay[[\"Content Rating\",\"Price\"]].groupby([\"Content Rating\"],as_index=False).mean().sort_values(by=\"Price\",ascending=False)","80103ff9":"# App - Rating\ngooglePlay.Rating = googlePlay.Rating.replace(np.nan,0)\ngooglePlay[[\"App\",\"Rating\"]].groupby([\"App\"],as_index=False).mean().sort_values(by=\"Rating\",ascending=False)","f6ab38f4":"# App - Reviews\n\ngooglePlay[[\"App\",\"Reviews\"]].groupby([\"App\"],as_index=False).mean().sort_values(by=\"Reviews\",ascending=False)","22cc0738":"# App - Installs  # million\ngooglePlay[[\"App\",\"Installs\"]].groupby([\"App\"],as_index=False).mean().sort_values(by=\"Installs\",ascending=False)","c8202caf":"# App - Price\ngooglePlay.Price=googlePlay.Price.replace(np.nan,0)\ngooglePlay[[\"App\",\"Price\"]].groupby([\"App\"],as_index=False).mean().sort_values(by=\"Price\",ascending=False)","75bc69b4":"def findOutliers(data,columns):\n    outlierIndices = []\n    for c in columns:\n        Q1 = np.percentile(data[c],25)\n        Q2 = np.percentile(data[c],75)\n        IQR = Q2-Q1\n        outlierStep = IQR*1.5\n        outlierListIndexes = data[(data[c] < Q1-outlierStep) | (data[c] > Q2+outlierStep)].index\n        outlierIndices.extend(outlierListIndexes)\n    outlierIndices=Counter(outlierIndices)\n    multiOutliers = list(i for i,v in outlierIndices.items() if v>2)\n    return multiOutliers","658652ab":"googlePlay.loc[findOutliers(googlePlay,[\"Rating\",\"Reviews\",\"Size\",\"Installs\",\"Price\"])]","f1f59e76":"numeriColumns = [\"Category\", \"Rating\" ,\"Reviews\",\"Size\",\"Installs\"]\n#googlePlay.loc[:,numeriColumns]\nplt.figure(figsize=(10,7))\nsns.heatmap(googlePlay[numeriColumns].corr(),annot=True,fmt=\"0.5f\")\nplt.title(\"Correlation Between Columns\")\nplt.show()","c7c16fa2":"categoryIndex=googlePlay[\"Category\"].value_counts().index\ncategoryValues=googlePlay[\"Category\"].value_counts().values\n\ndata = {\n    \"values\" : categoryValues,\n    \"labels\" : categoryIndex,\n    \"type\" : \"pie\",\n    \"hoverinfo\" : \"label+percent\",\n    \"hole\" : .3\n}\n\nlayout = {\n    \"title\" : \"Frequency of categories inside of data\"\n}\n\nfigure=go.Figure(data=data,layout=layout)\niplot(figure)","eba7c347":"topInstallIndex = googlePlay[[\"Installs\"]].sort_values(by=\"Installs\",ascending=False).index\ntopInstall=googlePlay.reindex(topInstallIndex).head(100)\n\ng=sns.factorplot(x=\"Category\",y=\"Installs\",data=topInstall,kind=\"bar\",size=10)\ng.add_legend()\nplt.xticks(rotation=90)\ng.set_ylabels(\"Category Frequency according to Install\")\nplt.show()","355441b4":"topRatingIndex = googlePlay[[\"Rating\"]].sort_values(by=\"Rating\",ascending=False).index\ntopRating=googlePlay.reindex(topRatingIndex).head(100)\n\ng=sns.factorplot(x=\"Category\",y=\"Rating\",data=topRating,kind=\"bar\",size=10)\ng.add_legend()\nplt.xticks(rotation=90)\ng.set_ylabels(\"Category Frequency according to Rating\")\nplt.show()","84b28c65":"topReviewsIndex = googlePlay[[\"Reviews\"]].sort_values(by=\"Reviews\",ascending=False).index\ntopReviews=googlePlay.reindex(topReviewsIndex).head(30)\n\nlabels = topReviews[\"Category\"]\ninstalls = topReviews[\"Installs\"]\nreviews = topReviews[\"Reviews\"]\n\ntrace1=go.Bar(\n    x = labels,\n    y=reviews,\n    marker=dict(color='rgba(255, 255, 128, 0.5)',line=dict(color='rgb(0,0,0)',width=1.5)),\n    text = installs\n)\n\ndata=trace1\n\nlayout = go.Layout(barmode=\"group\",title=\"Relationship Category,Installs,Reviews according to Categories which has more reviews\",xaxis={\"title\":\"Categories\"},yaxis={\"title\":\"Reviews\"})\nfig = go.Figure(data=data,layout=layout)\niplot(fig)","63c0d031":"typeIndex=googlePlay.Type.value_counts().index\ntypeValues = googlePlay.Type.value_counts().values","accb953c":"plt.subplots(figsize=(10,10))\nsns.barplot(x=typeIndex,y=typeValues,color=\"blue\")\nplt.xlabel(\"Type\")\nplt.ylabel(\"Counts\")\nplt.show()","838a2733":"googlePlay.head()","3a7f9ab3":"topInstallsIndex = googlePlay[[\"Installs\"]].sort_values(by=\"Installs\",ascending=False).index\ntopInstalls=googlePlay.reindex(topInstallsIndex)","8102ce4b":"GroupByType=topInstalls.groupby([\"Type\"],as_index=False).mean()\nGroupByType","2aa8119d":"\n#%%\ndata = {\n    \"values\" : GroupByType[\"Installs\"],\n    \"labels\" : GroupByType[\"Type\"],\n    \"type\" : \"pie\",\n    \"hoverinfo\" : \"label+percent\",\n    \"hole\" : .3\n}\nlayout = {\n    \"title\" : \"According to Type , Rates of Installs\"\n}\n\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","f019821a":"data = {\n    \"values\" : GroupByType[\"Reviews\"],\n    \"labels\" : GroupByType[\"Type\"],\n    \"type\" : \"pie\",\n    \"hoverinfo\" : \"label+percent\",\n    \"hole\" : .3\n}\nlayout = {\n    \"title\" : \"According to Type , Rates of Reviews\"\n}\n\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","347b1b9f":"data = {\n    \"values\" : GroupByType[\"Rating\"],\n    \"labels\" : GroupByType[\"Type\"],\n    \"type\" : \"pie\",\n    \"hoverinfo\" : \"label+percent\",\n    \"hole\" : .3\n}\nlayout = {\n    \"title\" : \"According to Type , Rates of Rating\"\n}\n\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","624820cf":"categyAndType=googlePlay[[\"Category\",\"Type\"]].groupby([\"Type\"],as_index=False).count()\ncategyAndType","f7215492":"data = {\n    \"values\" : categyAndType[\"Category\"],\n    \"labels\" : categyAndType[\"Type\"],\n    \"type\" : \"pie\",\n    \"hoverinfo\" : \"label+percent\",\n    \"hole\" : .3\n}\nlayout = {\n    \"title\" : \"According to Categories Rates Type\"\n}\n\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","eff815ca":"TopTenRateIndex = googlePlay[[\"Rating\"]].sort_values(by=\"Rating\",ascending=False).index\nTopTenRate=googlePlay.reindex(TopTenRateIndex).head(10)\nTopTenRate\ng=sns.factorplot(x=\"App\",y=\"Rating\",data=TopTenRate,kind=\"bar\",size=8,)\ng.set_ylabels(\"Rating\")\ng.add_legend()\nplt.xticks(rotation=90)\nplt.show()","06396095":"TopTenReviewsIndex = googlePlay[[\"Reviews\"]].sort_values(by=\"Reviews\",ascending=False).index\nTopTenReviews=googlePlay.reindex(TopTenReviewsIndex).head(30)\ng=sns.factorplot(x=\"App\",y=\"Reviews\",data=TopTenReviews,kind=\"bar\",size=10)\ng.add_legend()\nplt.xticks(rotation=90)\ng.set_ylabels(\"Reviews counts(b)\")\nplt.show()","afd366c4":"googlePlay.Installs","80304bb8":"topInstallIndex = googlePlay[[\"Installs\"]].sort_values(by=\"Installs\",ascending=False).index\ntopInstall = googlePlay.reindex(topInstallIndex).head(30)\ng=sns.factorplot(x=\"App\",y=\"Installs\",data=topInstall,kind=\"bar\",size=10)\ng.add_legend()\ng.set_ylabels(\"Installs count(billion)\")\nplt.xticks(rotation=90)\nplt.show()","2b843546":"pieInstall = topInstall.head(10)\n \ndata = {\n    \"values\" : pieInstall[\"Installs\"],\n    \"labels\" : pieInstall[\"Category\"],\n    \"type\" : \"pie\",\n    \"hoverinfo\" : \"label+percent\",\n    \"hole\" : .3\n}\n\nlayout = {\n    \"title\" : \"Show Relationship Categories and installs\"\n}\n\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","e92089d4":"googlePlay.head()","eda16fba":"topInstallsIndex = googlePlay[[\"Installs\"]].sort_values(by=\"Installs\",ascending=False).index\ntopInstalls=googlePlay.reindex(topInstallsIndex)","b6b0114b":"\ndata = {\n    \"values\" : topInstalls[\"Installs\"],\n    \"labels\" : topInstalls[\"Content Rating\"],\n    \"type\" : \"pie\",\n    \"hoverinfo\" : \"label+percent\",\n    \"hole\" : .3\n}\n\nlayout = {\n    \"title\" : \"Show Relationship Content Rating and installs\"\n}\n\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","d474c2f9":"TopTenRateIndex = googlePlay[[\"Rating\"]].sort_values(by=\"Rating\",ascending=False).index\nTopTenRate=googlePlay.reindex(TopTenRateIndex)\n\ndata = {\n    \"values\" : TopTenRate[\"Rating\"],\n    \"labels\" : TopTenRate[\"Content Rating\"],\n    \"type\" : \"pie\",\n    \"hoverinfo\" : \"label+percent\",\n    \"hole\" : .3\n}\n\nlayout = {\n    \"title\" : \"Show Relationship Content Rating and installs\"\n}\n\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","d4f5d1d0":"TopTenReviewseIndex = googlePlay[[\"Reviews\"]].sort_values(by=\"Reviews\",ascending=False).index\nTopTenReviews=googlePlay.reindex(TopTenReviewseIndex)\n\ndata = {\n    \"values\" : TopTenReviews[\"Reviews\"],\n    \"labels\" : TopTenReviews[\"Content Rating\"],\n    \"type\" : \"pie\",\n    \"hoverinfo\" : \"label+percent\",\n    \"hole\" : .3\n}\n\nlayout = {\n    \"title\" : \"Show Relationship Content Reviews and installs\"\n}\n\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","73633c6d":"labels = topInstall[\"App\"]\ninstalls = topInstall[\"Installs\"]\nrating = topInstall[\"Rating\"]\n\ntrace1=go.Bar(\n    x = labels,\n    y=installs,\n    marker=dict(color='rgba(255, 255, 128, 0.5)',line=dict(color='rgb(0,0,0)',width=1.5)),\n    text = rating\n)\n\ndata=trace1\n\nlayout = go.Layout(barmode=\"group\",title=\"Relationship App,Installs,Rating according to Top 30 Apps which more download\")\nfig = go.Figure(data=data,layout=layout)\niplot(fig)","daf096db":"labels = topInstall[\"App\"]\ninstalls = topInstall[\"Installs\"]\nreviews = topInstall[\"Reviews\"]\n\ntrace1=go.Bar(\n    x = labels,\n    y=installs,\n    marker=dict(color='rgba(255, 255, 128, 0.5)',line=dict(color='rgb(0,0,0)',width=1.5)),\n    text = reviews\n)\n\ndata=trace1\n\nlayout = go.Layout(barmode=\"group\",title=\"Relationship App,Installs,Reviews according to Top 30 Apps which more download\")\nfig = go.Figure(data=data,layout=layout)\niplot(fig)","d89f2005":"topInstall.head()","814f92fa":"print(\"Averoage of price app on google play = {}\".format(googlePlay[\"Price\"].mean()))","27916cf3":"plt.subplots(figsize=(15,10))\nsns.lineplot(x=\"Price\",y=\"Installs\",data=googlePlay,color=\"red\")\nplt.show()","84b6f6a8":"plt.subplots(figsize=(15,10))\nsns.lineplot(x=\"Price\",y=\"Rating\",data=googlePlay,color=\"green\")\nplt.title(\"Relationship Price & Rating\")\nplt.show()","7e875f71":"plt.subplots(figsize=(15,10))\nsns.lineplot(x=\"Price\",y=\"Reviews\",data=googlePlay,color=\"green\")\nplt.title(\"Relationship Price & Reviews\")\nplt.show()","6d838937":"categoryPrices=googlePlay.groupby([\"Category\"],as_index=False).mean()\n","0d9d026d":"g=sns.factorplot(x=\"Category\",y=\"Price\",kind=\"bar\",data=categoryPrices,size=10)\ng.add_legend()\ng.set_ylabels(\"Prices Rates\")\nplt.xticks(rotation=90)\nplt.show()","45dd634d":"<a id=\"11\"><\/a>\n### Categories","48bf26f2":"<a id=\"24\"><\/a>\n#### Installs - Category","7110e051":"<a id=\"19\"><\/a>\n### Type -- Categories","840ce67a":"<a id=\"4\"><\/a>\n#### Categorical Variable\n\nI converted some columns object to float above.Here,I will use these datas as numeric data.","a9242fd2":"In order to convert numeric (float on int), I must replace signs which(\"k\",\"M\",\"$\" i.e) reason why data needed to be numeric data","8fb9c076":"<a id=\"25\"><\/a>\n## Content Rating","631017a3":"<a id=\"18\"><\/a>\n### Type -- Rating","23240206":"Convert data types object to float","a9f2cfac":"<a id=\"21\"><\/a>\n#### App Name - Rating ","7c86b7d2":"<a id=\"15\"><\/a>\n## Type","a9be36cf":"I achieved to drop NaN values","b2d1f095":"<a id=\"ek1\"><\/a>\n### Sneak Peak the Data\nIn this section , I will set some things","49d8e40e":"<a id=\"8\"><\/a>\n ## Missing Value\n \n This section provide us how find missing value and find them.This section one of the most importants section.Because I am going to useless data types to suitable data types for visualize.\n ","cdf3675e":"<a id=\"29\"><\/a>\n### App - Installs - Rating","82066f15":"<a id=\"2\"><\/a>\n# Variable Description\n\n1.App : Name of applications in the google play store\n\n2.Category : Column that show application's category\n\n3.Rating : Result of rating applications on google play\n\n4.Reviews : Count of reviews belong to applications\n\n5.Installs : Count of installs belong to applications\n\n6.Type : Type of applications (i.e free or paid)\n\n7.Size : Take place on phone as megabayte belong to applications\n\n8.Price : Amount of prices belong to applications\n\n9.Content Rating : Content info's (i.e everyone , +18)\n\n10.Genres : Kind of applications (i.e art&design or lifestyle , sport)\n\n11.Last Updated : Time of Last Updated belong to applications\n\n12.Current Ver : Current version infos belong to applications\n\n13.Android Ver : Needed android version belong to applications\n\n","fe61b412":"<a id=\"22\"><\/a>\n#### App Name - Reviews","a45980ad":"<a id=\"6\"><\/a>\n# Basic Data Analysis\n\nThis section supply how explain basics of relationship between columns\n\n* Category - Rating\n\n* Category - Reviews\n\n* Category - Installs\n\n* Category - Price\n\n* Content Rating - Reviews\n\n* Content Rating - Installs\n\n* Content Rating - Price\n\n* App - Rating\n\n* App - Reviews\n\n* App - Installs\n\n* App - Price","f6c60c61":"<a id=\"23\"><\/a>\n#### App Name - Installs","d43b9ed1":"<a id=\"10\"><\/a>\n#### Correlation Between Columns which Category\t, Rating ,\tReviews  ,Size , Installs","bc69a4ce":"Convert data types object to int","6a9781dd":"<a id=\"7\"><\/a>\n# Outlier Detection\n\nThis method shows us which outlier indexes in our data.I use every data visualize instance this method.","4d98a147":"<a id=\"ek3\"><\/a>\n<b> Set Installs -- Size -- Price<\/b>","6e7e95e1":"# Introduction\nWelcome to my interesting data visualization section.I will try to visualize different and interesting data called google play store apps.Likely most people even if don't use , knows google play store.So , I will consider to it will be attractive.Really,I will guess I will surprised when I will see results of visualization because everyting will be realize.If you want, let's move.\n\n\n<font color=\"blue\">\n    \nContent :\n    \n\n1. [Load and Check Data](#1)\n2. [Missing Value](#8)\n    * [Sneak peek at the dataset](#ek1)\n    * [Data Cleaning](#ek2)\n        * [Set Installs -- Size -- Price](#ek3)\n        * [Convert Data Types](#ek4)\n3. [Variable Description](#2)\n    * [Univariate Variable Analysis](#3)\n        * [Categorical Variable](#4)\n        * [Numeric Variable](#5)\n4. [Basic Data Analysis](#6)  \n5. [Outlier Detection](#7)    \n6. [Visualization](#9)\n    * [Correlation Between Columns which Category\t, Rating ,\tReviews  ,Size , Installs](#10)\n    * [Categories](#11)\n        * [Categories - Install](#12)\n        * [Categories - Rating](#13)\n        * [Categories - Installs - Reviews](#14)\n    * [Type](#15)\n        * [Type -- Installs](#16)\n        * [Type -- Reviews](#17)\n        * [Type -- Rating](#18)\n        * [Type -- Categories](#19)\n    * [App Name](#20)\n        * [App Name - Rating](#21)\n        * [App Name - Reviews](#22)\n        * [App Name - Installs](#23)\n        * [Installs - Category](#24)\n    * [Content Rating](#25)\n        * [Content Rating --- Installs](#26)\n        * [Content Rating and Rating](#27)\n        * [Content Rating and Reviews](#28)\n    * [App - Installs - Rating](#29)\n    * [App - Installs - Reviews](#30)\n    * [Price](#31)\n        * [Price - Installs](#32)\n        * [Price - Rating](#33)\n        * [Price - Reviews](#34)\n        * [Price - Categories](#35)","f5cd9809":"<a id=\"ek2\"><\/a>\n### Data Cleaning\n\n- Convert all app sizes to MB**\n- Remove '+' from 'Number of Installs' to make it numeric\n","978d9f30":"<a id=\"31\"><\/a>\n## Price","68572331":"I am going to use during set and clean data method which lambda.Because it supplies to easy changed and scope wide fields in data.Also why I use clean data reason why because data includes lots of objects data , however I must convert numeric type them.","ba31df94":"<a id=\"17\"><\/a>\n### Type -- Reviews","d4a03d4c":"<a id=\"5\"><\/a>\n#### Numeric Variable","ea61ddbc":"<a id=\"35\"><\/a>\n### Price - Categories","cc14efe1":"<a id=\"1\"><\/a>\n# Load and Check Data","0d51245c":"<a id=\"ek4\"><\/a>\n<b>Convert Data Types<\/b>","6a6ee56f":"<a id=\"13\"><\/a>\n### Categories - Rating","3a0a3c35":"<a id=\"20\"><\/a>\n## App Name","2bee831a":"I will convert some columns to int or float why carried out more effectively product.As you know , usually using datas which has who datatype is float or int.","27774a3e":"As you see , I made exhaustively data analyis.It was important because If we want to visualize data , then we inspected data exhaustively.","3287aac2":"In this section , I am going to laod and check data , I will show sub datas.","db407a01":"I will remove \"M\" , \"k\" , \"$\" signs inside of our data and then , make numeric them","f13f02f1":"<a id=\"33\"><\/a>\n### Price - Rating\ngroupby and mean maybe","f1faa447":"As you see , I filled np.nan datas to 0 or \"Unknown\".This is important step our visualization.But I assigned 0 to np.nan values belong to \"Size\" columns , this is may effect badly visualize results.However ,I must implemented this step.","fb3b9a78":"<a id=\"14\"><\/a>\n### Categories - Installs - Reviews","74b77f98":"<a id=\"32\"><\/a>\n### Price - Installs","13cf14a8":"As you seen obviously, size and installs have correlation , rating and reviews have correlation","92436e2e":"<a id=\"34\"><\/a>\n### Price - Reviews","84222ac7":"<a id=\"30\"><\/a>\n### App - Installs - Reviews","5a725a36":"<a id=\"26\"><\/a>\n### Content Rating --- Installs","73a01af3":"As you seen above , I determined indexes which being outliers.And I will this indexes from our data.","64c2eb73":"<a id=\"9\"><\/a>\n# Visualization","58931227":"<a id=\"16\"><\/a>\n### Type -- Installs","a10ee1fe":"<a id=\"12\"><\/a>\n### Categories - Install","c835ef14":"<a id=\"27\"><\/a>\n### Content Rating and Rating","77a6cac6":"I 'm going to query whener NaN value inside of our data.","cbb7d329":"<a id=\"3\"><\/a>\n### Univariate Variable Analysis\n\n* Categorical Variable : Category\n\n* Numeric Variable : Reviews,Size,Installs,Rating","ef7462b7":"<a id=\"28\"><\/a>\n### Content Rating and Reviews"}}