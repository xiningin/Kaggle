{"cell_type":{"49e8c2cd":"code","3c2c5350":"code","4031de91":"code","d3dd1316":"code","881dd5df":"code","3bd8ab7d":"code","6073f5be":"code","1fe7c9a6":"code","dc2b8b14":"code","6aada99c":"code","2a408073":"code","410aef47":"code","a91f9d33":"code","cc819c18":"code","f7feff56":"markdown"},"source":{"49e8c2cd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","3c2c5350":"poverty=pd.read_csv(\"..\/input\/PercentagePeopleBelowPovertyLevel.csv\", encoding=\"windows-1252\")\nmedian = pd.read_csv('..\/input\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\ncompleted= pd.read_csv('..\/input\/PercentOver25CompletedHighSchool.csv', encoding=\"windows-1252\")\nshare = pd.read_csv('..\/input\/ShareRaceByCity.csv', encoding=\"windows-1252\")\nkill = pd.read_csv('..\/input\/PoliceKillingsUS.csv', encoding=\"windows-1252\")","4031de91":"poverty.head()","d3dd1316":"median.head()","881dd5df":"completed.head()","3bd8ab7d":"share.head()","6073f5be":"kill.head()","1fe7c9a6":"poverty.info()","dc2b8b14":"poverty[\"Geographic Area\"].unique()","6aada99c":"poverty.poverty_rate.value_counts()","2a408073":"poverty.poverty_rate.replace([\"-\"],0.0,inplace=True)\npoverty.poverty_rate=poverty.poverty_rate.astype(float)\narea_list = list(poverty['Geographic Area'].unique())\narea_poverty_ratio=[]\nfor i in area_list:\n    x=poverty[poverty[\"Geographic Area\"]==i]\n    area_poverty_ratio.append(sum(x.poverty_rate)\/len(x))\ndata=pd.DataFrame({'area_list':area_list,\"area_poverty_ratio\":area_poverty_ratio})\nnew_index = (data['area_poverty_ratio'].sort_values(ascending=False)).index.values\nsorted_data=data.reindex(new_index)   \nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data[\"area_list\"],y=sorted_data[\"area_poverty_ratio\"])\nplt.xticks(rotation=45)\nplt.xlabel(\"states\")\nplt.ylabel(\"Poverty rate\")\nplt.title(\"poverty rate for states\")\nplt.show()","410aef47":"#kill.name.value_counts()\nseparate=kill.name[kill.name!=\"TK TK\"].str.split()\na,b=zip(*separate)#unzip\nname_list=a+b\nname_count = Counter(name_list)\ncommon_names=name_count.most_common(15)\nx,y=zip(*common_names)\nx,y=list(x),list(y)\nplt.figure(figsize=(15,10))\nsns.barplot(x,y,palette=sns.cubehelix_palette(len(x)))\nplt.xticks(rotation=-45)\nplt.xlabel('Name or Surname of killed people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Name or Surname of killed people')\nplt.show()\n","a91f9d33":"# High school graduation rate of the population that is older than 25 in states\ncompleted.percent_completed_hs.replace(['-'],0.0,inplace = True)\ncompleted.percent_completed_hs = completed.percent_completed_hs.astype(float)\narea_list = list(completed['Geographic Area'].unique())\narea_highschool = []\nfor i in area_list:\n    x = completed[completed['Geographic Area']==i]\n    area_highschool_rate = sum(x.percent_completed_hs)\/len(x)\n    area_highschool.append(area_highschool_rate)\n# sorting\ndata = pd.DataFrame({'area_list': area_list,'area_highschool_ratio':area_highschool})\nnew_index = (data['area_highschool_ratio'].sort_values(ascending=True)).index.values\nsorted_data2 = data.reindex(new_index)\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data2['area_list'], y=sorted_data2['area_highschool_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('States')\nplt.ylabel('High School Graduate Rate')\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High School\")","cc819c18":"share.replace(['-'],0.0,inplace = True)\nshare.replace(['(X)'],0.0,inplace = True)\nshare.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']] = share.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)\narea_list = list(share['Geographic area'].unique())\nshare_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_hispanic = []\nfor i in area_list:\n    x = share[share['Geographic area']==i]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black) \/ len(x))\n    share_native_american.append(sum(x.share_native_american) \/ len(x))\n    share_asian.append(sum(x.share_asian) \/ len(x))\n    share_hispanic.append(sum(x.share_hispanic) \/ len(x))\n\n# visualization\nf,ax = plt.subplots(figsize = (9,15))\nsns.barplot(x=share_white,y=area_list,color='green',alpha = 0.5,label='White' )\nsns.barplot(x=share_black,y=area_list,color='blue',alpha = 0.7,label='African American')\nsns.barplot(x=share_native_american,y=area_list,color='cyan',alpha = 0.6,label='Native American')\nsns.barplot(x=share_asian,y=area_list,color='yellow',alpha = 0.6,label='Asian')\nsns.barplot(x=share_hispanic,y=area_list,color='red',alpha = 0.6,label='Hispanic')\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Percentage of Races', ylabel='States',title = \"Percentage of State's Population According to Races \")","f7feff56":" **Point  plot****"}}