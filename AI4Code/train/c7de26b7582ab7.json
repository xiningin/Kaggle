{"cell_type":{"7ce6b73c":"code","15bcc129":"code","a3c57d9d":"code","86a1b654":"code","ef3b90e0":"code","d789f1ad":"code","c8b2b44c":"code","e7362925":"code","960f49fb":"code","d3cc1053":"code","e418a2d9":"code","3bf84b60":"code","8e579de0":"code","ab8c2ede":"code","841231f2":"code","52d07fd1":"code","f6745497":"code","15845ce6":"code","05db5586":"code","01ce1d52":"code","dc3aeafd":"code","e2909c34":"code","e2464ba0":"code","3fdb2ba0":"code","fc0b1a13":"code","1d015c23":"code","3779e4a9":"code","124a1f3c":"code","28db6105":"code","9aa11141":"code","60a81585":"code","e6ed5a01":"code","817ca675":"code","ef888e6d":"code","83eca86b":"code","2c691671":"code","09c9c67a":"code","1c1d567f":"code","67a80ab9":"markdown","8a5cdf32":"markdown","fb2c3ccc":"markdown","2f4f4fdb":"markdown"},"source":{"7ce6b73c":"import pandas as pd\npd.set_option('display.max_rows',100)\nimport numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno","15bcc129":"df_in = pd.read_csv(\"..\/input\/youtube-new\/INvideos.csv\")\noriginal_data = df_in.copy(deep=True)\ndf_in.head()","a3c57d9d":"df_in.shape","86a1b654":"df_in.drop('video_id', axis=1, inplace=True)","ef3b90e0":"df_in.info()","d789f1ad":"# bool_datatype = df_in.select_dtypes(include=['bool']).columns\n# for i in bool_datatype:\n#     df_in[i] = df_in[i].astype('object')\n\ndatetime = ['trending_date', 'publish_time']\nfor dnt in datetime:\n    df_in[dnt] = pd.to_datetime(df_in[dnt], format='%y.%d.%m', utc=True, infer_datetime_format=True)","c8b2b44c":"df_in.info()","e7362925":"cat_feat = df_in.select_dtypes(include=['object']).columns\nprint(cat_feat)\nprint('-'*50)\nnum_feat = df_in.select_dtypes(include=['int64', 'float64']).columns\nprint(num_feat)\nprint('-'*50)\ndatetime_feat = df_in.select_dtypes(include=['datetime64[ns, UTC]']).columns\nprint(datetime_feat)\nprint('-'*50)","960f49fb":"df_in[cat_feat]","d3cc1053":"plt.figure(figsize=(10,6))\nax = df_in['channel_title'].value_counts().sort_values(ascending=False).nlargest(10).plot.bar(width=0.9, color=sns.color_palette('ocean_r'))\nfor p in ax.patches:\n    ax.annotate(format(p.get_height()), (p.get_x()+0.15, p.get_height()+1))\nplt.title(\"channel_title\")\nplt.show()","e418a2d9":"df_in[num_feat]","3bf84b60":"df_in[num_feat].describe()","8e579de0":"## let see the doostribution of like dislikes and comment ","ab8c2ede":"num_feat","841231f2":"df_in['views'] = np.log(df_in['views']+1)\ndf_in['likes'] = np.log(df_in['likes']+1)\ndf_in['dislikes'] = np.log(df_in['dislikes']+1)\ndf_in['comment_count'] = np.log(df_in['comment_count']+1)","52d07fd1":"fig = plt.figure(figsize=(18, 9))\nplt.subplot(241)\ng1 = sns.distplot(original_data['views'], fit=stats.norm)\nplt.title(\"Original : Views\")\nplt.subplot(242)\n_ = stats.probplot(original_data['views'], plot=plt)\nplt.title(\"Original : Q-Q plot\")\nplt.subplot(245)\ng1 = sns.distplot(original_data['likes'], fit=stats.norm)\nplt.title(\"Original : Likes\")\nplt.subplot(246)\n_ = stats.probplot(original_data['likes'], plot=plt)\nplt.title(\"Original : Q-Q plot\")\n\nplt.subplot(243)\ng1 = sns.distplot(df_in['views'], fit=stats.norm)\nplt.title(\"log transformed : Views\")\nplt.subplot(244)\n_ = stats.probplot(df_in['views'], plot=plt)\nplt.title(\"log transformed : Views\")\nplt.subplot(247)\ng1 = sns.distplot(df_in['likes'], fit=stats.norm)\nplt.title(\"log transformed : Views\")\nplt.subplot(248)\n_ = stats.probplot(df_in['likes'], plot=plt)\nplt.title(\"log transformed : Views\")\n","f6745497":"fig = plt.figure(figsize=(18, 9))\nplt.subplot(241)\ng1 = sns.distplot(original_data['dislikes'], fit=stats.norm)\nplt.title(\"Original : dislikes\")\nplt.subplot(242)\n_ = stats.probplot(original_data['dislikes'], plot=plt)\nplt.title(\"Original : Q-Q plot\")\nplt.subplot(245)\ng1 = sns.distplot(original_data['comment_count'], fit=stats.norm)\nplt.title(\"Original : comment_count\")\nplt.subplot(246)\n_ = stats.probplot(original_data['comment_count'], plot=plt)\nplt.title(\"Original : Q-Q plot\")\n\nplt.subplot(243)\ng1 = sns.distplot(df_in['dislikes'], fit=stats.norm)\nplt.title(\"log transformed : dislikes\")\nplt.subplot(244)\n_ = stats.probplot(df_in['dislikes'], plot=plt)\nplt.title(\"log transformed : dislikes\")\nplt.subplot(247)\ng1 = sns.distplot(df_in['comment_count'], fit=stats.norm)\nplt.title(\"log transformed : comment_count\")\nplt.subplot(248)\n_ = stats.probplot(df_in['comment_count'], plot=plt)\nplt.title(\"log transformed : Views\")","15845ce6":"fig = plt.figure(figsize=(16,8))\n\nplt.subplot(421)\ng1 = sns.boxplot(original_data['views'])\nplt.title(\"Before\")\nplt.ylabel(\"Views\")\nplt.subplot(422)\ng1 = sns.boxplot(df_in['views'])\nplt.title(\"After\")\nplt.ylabel(\"Views\")\n\nplt.subplot(423)\ng1 = sns.boxplot(original_data['likes'])\nplt.ylabel(\"likes\")\nplt.subplot(424)\ng1 = sns.boxplot(df_in['likes'])\nplt.ylabel(\"likes\")\n\nplt.subplot(425)\ng1 = sns.boxplot(original_data['dislikes'])\nplt.ylabel(\"dislikes\")\nplt.subplot(426)\ng1 = sns.boxplot(df_in['dislikes'])\nplt.ylabel(\"dislikes\")\n\nplt.subplot(427)\ng1 = sns.boxplot(original_data['comment_count'])\nplt.ylabel(\"comment_count\")\nplt.subplot(428)\ng1 = sns.boxplot(df_in['comment_count'])\nplt.ylabel(\"comment_count\")","05db5586":"msno.matrix(df_in)","01ce1d52":"df_in['description'].fillna(\"no description\", inplace=True)","dc3aeafd":"msno.matrix(df_in)","e2909c34":"features_to_drop = ['title','tags', 'thumbnail_link', 'description']\ndf_in.drop(df_in[features_to_drop], axis=1, inplace=True)","e2464ba0":"df_in['like_rate'] = (df_in['likes']+1) \/ df_in['views'] * 100\ndf_in['dislike_rate'] = (df_in['dislikes']+1) \/ df_in['views'] * 100\ndf_in['comment_rate'] = (df_in['comment_count']+1) \/ df_in['views'] * 100","3fdb2ba0":"fig = plt.figure(figsize=(28, 6))\n\nplt.subplot(131)\ng1 = sns.distplot(df_in['like_rate'], fit=stats.norm)\nplt.title(\"Original : like_rate\")\nplt.subplot(132)\ng1 = sns.distplot(df_in['dislike_rate'], fit=stats.norm)\nplt.title(\"Original : dislike_rate\")\nplt.subplot(133)\ng1 = sns.distplot(df_in['comment_rate'], fit=stats.norm)\nplt.title(\"log transformed : dislikes\")\n","fc0b1a13":"# df_in['like_rate'] = np.log(df_in['like_rate']+1)\n# df_in['dislike_rate'] = np.log(df_in['dislike_rate']+1)\n# df_in['comment_rate'] = np.log(df_in['comment_rate']+1)","1d015c23":"# fig = plt.figure(figsize=(28, 6))\n\n# plt.subplot(131)\n# g1 = sns.distplot(df_in['like_rate'], fit=stats.norm)\n# plt.title(\"Original : like_rate\")\n# plt.subplot(132)\n# g1 = sns.distplot(df_in['dislike_rate'], fit=stats.norm)\n# plt.title(\"Original : dislike_rate\")\n# plt.subplot(133)\n# g1 = sns.distplot(df_in['comment_rate'], fit=stats.norm)\n# plt.title(\"log transformed : dislikes\")","3779e4a9":"bool_feature = ['comments_disabled', 'ratings_disabled', 'video_error_or_removed']\nfor i in bool_feature:\n    print(i)\n    print(df_in[i].unique())\n    print('-'*30)","124a1f3c":"for i in bool_feature:\n    df_in[i] = df_in[i].replace({True: 1, False: 0})","28db6105":"categories_dict = {\n    1:'Film and Animation',\n    2:'Cars and Vehicles',\n    10:'Music',\n    15:'Pets and Animals',\n    17:'Sport',\n    19:'Travel and Events',\n    20:'Gaming',\n    22:'People and Blogs',\n    23:'Comedy',\n    24:'Entertainment',\n    25:'News and Politics',\n    26:'How to and Style',\n    27:'Education',\n    28:'Science and Technology',\n    29: 'Non Profits and Activism'\n}","9aa11141":"df_in['category_name'] = df_in['category_id'].map(categories_dict)\ndf_in","60a81585":"%%javascript\nIPython.OutputArea.auto_scroll_threshold = 9999","e6ed5a01":"df_in['category_name'].fillna('no category',inplace=True)\n\nplt.figure(figsize=(28,6))\nax = df_in['category_name'].value_counts().sort_values(ascending=True).plot.bar(width=0.8, color=sns.color_palette('copper_r'))\nfor p in ax.patches:\n    ax.annotate(format(p.get_height()), (p.get_x()+0.15, p.get_height()+1))\nplt.title(\"Categories\")\nplt.xlabel(\"categories\")\nplt.ylabel(\"Count\")\n\nplt.figure(figsize=(28,9))\ng1 = sns.boxplot(x='category_name', y='views', data=df_in, palette=\"Set1\")\n\nplt.title(\"views based on categories\")\nplt.xlabel(\"category name\")\nplt.ylabel(\"views\")\n\nplt.figure(figsize=(28,9))\ng1 = sns.boxplot(x='category_name', y='likes', data=df_in, palette=\"Set1\")\n\nplt.title(\"likes based on categories\")\nplt.xlabel(\"category name\")\nplt.ylabel(\"Likes\")\n\nplt.figure(figsize=(28,9))\ng1 = sns.boxplot(x='category_name', y='dislikes', data=df_in, palette=\"Set1\")\n\nplt.title(\"dislikes based on categories\")\nplt.xlabel(\"category name\")\nplt.ylabel(\"Dislikes\")\n\nplt.figure(figsize=(28,9))\ng1 = sns.boxplot(x='category_name', y='comment_count', data=df_in, palette=\"Set1\")\n\nplt.title(\"comment count based on categories\")\nplt.xlabel(\"category name\")\nplt.ylabel(\"Comment Count\")","817ca675":"df_in['category_name'].fillna('no category',inplace=True)\n\nplt.figure(figsize=(28,6))\nax = df_in['category_name'].value_counts().sort_values(ascending=True).plot.bar(width=0.8, color=sns.color_palette('copper_r'))\nfor p in ax.patches:\n    ax.annotate(format(p.get_height()), (p.get_x()+0.15, p.get_height()+1))\nplt.title(\"Categories\")\nplt.xlabel(\"categories\")\nplt.ylabel(\"Count\")\n\nplt.figure(figsize=(28,9))\ng1 = sns.boxplot(x='category_name', y='like_rate', data=df_in, palette=\"Set1\")\n\nplt.title(\"like_rate based on categories\")\nplt.xlabel(\"category name\")\nplt.ylabel(\"like_rate\")\n\nplt.figure(figsize=(28,9))\ng1 = sns.boxplot(x='category_name', y='dislike_rate', data=df_in, palette=\"Set1\")\n\nplt.title(\"dislike_rate based on categories\")\nplt.xlabel(\"category name\")\nplt.ylabel(\"dislike_rate\")\n\nplt.figure(figsize=(28,9))\ng1 = sns.boxplot(x='category_name', y='comment_rate', data=df_in, palette=\"Set1\")\n\nplt.title(\"comment_rate based on categories\")\nplt.xlabel(\"category name\")\nplt.ylabel(\"Comment rate\")\n","ef888e6d":"plt.figure(figsize=(28,6))\n\nplt.subplot(141)\nsns.boxplot(df_in['likes'])\nplt.title(\"Likes\", fontsize=20)\nplt.subplot(142)\nsns.boxplot(df_in['dislikes'])\nplt.title(\"Dislikes\", fontsize=20)\nplt.subplot(143)\nsns.boxplot(df_in['comment_count'])\nplt.title(\"Comment Count\", fontsize=20)\nplt.subplot(144)\nsns.boxplot(df_in['views'])\nplt.title(\"Views\", fontsize=20)","83eca86b":"plt.figure(figsize=(28,6))\n\nplt.subplot(141)\nsns.boxenplot(df_in['likes'])\nplt.title(\"Likes\", fontsize=20)\nplt.subplot(142)\nsns.boxenplot(df_in['dislikes'])\nplt.title(\"Dislikes\", fontsize=20)\nplt.subplot(143)\nsns.boxenplot(df_in['comment_count'])\nplt.title(\"Comment Count\", fontsize=20)\nplt.subplot(144)\nsns.boxenplot(df_in['views'])\nplt.title(\"Views\", fontsize=20)","2c691671":"plt.figure(figsize=(28,6))\n\nplt.subplot(131)\nsns.boxplot(df_in['like_rate'])\nplt.title(\"Like Rate\", fontsize=20)\nplt.subplot(132)\nsns.boxplot(df_in['dislike_rate'])\nplt.title(\"Dislike Rate\", fontsize=20)\nplt.subplot(133)\nsns.boxplot(df_in['comment_rate'])\nplt.title(\"Comment Rate\", fontsize=20)","09c9c67a":"plt.figure(figsize=(10, 10))\n\ncorr_feat = ['views', 'likes', 'dislikes', 'comment_count', 'comments_disabled', 'ratings_disabled', 'video_error_or_removed', 'like_rate', 'dislike_rate', 'comment_rate']\n\ncorr = df_in[corr_feat].corr()\n\nsns.heatmap(corr, annot=True, square=True)","1c1d567f":"sns.dogplot()","67a80ab9":"### Analysing the Correlation Matrix of the numerical variables","8a5cdf32":"### There is a lot more to do, will keep it updating","fb2c3ccc":"### Just for fun \ud83d\ude1b\n\nthere are a number of plots recently added by seaborn in the library and `dogplot` is one of them.\nYou can plot a dog picture and it will change everytime you run the cell\n\n\nCool Nah!","2f4f4fdb":"Give me your feedback and if you like my kernel please <strong style=\"font-color:red;\">Votes up<\/strong>"}}