{"cell_type":{"0bef3ef6":"code","6ee200cf":"code","f86f4a55":"code","cd2a0ad4":"code","db087af0":"markdown","39d2e7c5":"markdown","5df949ae":"markdown"},"source":{"0bef3ef6":"import pandas as pd\nimport datetime\nfrom datetime import datetime as dt\nfrom datetime import timedelta\nimport numpy as np\nimport matplotlib.dates as mdates\nimport matplotlib.ticker as mtick\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly","6ee200cf":"dt_inicial = '2020-01-22'\ndt_final = (dt.today()+timedelta(days=-2)).strftime('%Y-%m-%d')\n\ndatas = pd.DataFrame(pd.date_range(dt_inicial, dt_final).tolist(), columns =['Data'])\ndiretorio = 'https:\/\/raw.githubusercontent.com\/CSSEGISandData\/COVID-19\/master\/csse_covid_19_data\/csse_covid_19_daily_reports\/'\ndatas['Arquivo'] = diretorio + pd.to_datetime(datas['Data']).dt.strftime('%m-%d-%Y').astype(str) + '.csv' \n\ndf_cov = pd.DataFrame()\n\nfor f in datas.index:\n    df = pd.read_csv(datas.Arquivo[f])\n    df.columns = df.columns.str.replace(\"\/\", \"_\")\n    df.columns = df.columns.str.replace(\" \", \"_\")\n    df.columns = df.columns.str.replace(\"Long_\", \"Longitude\")\n    df.columns = df.columns.str.replace(\"Latitude\", \"Lat\")\n    df['Date'] = datas.Data[f]\n    df_cov =  pd.concat([df_cov, df], ignore_index = True)\n\n#df_cov2 = pd.concat([pd.read_csv(f) for f in datas.Arquivo], ignore_index = True)\n\n\ndf_cov['Province_State'] = df_cov['Province_State'].fillna('Others')\ndf_cov['Country_Region'] = df_cov.Country_Region.str.replace('UK', 'United Kingdom').str.replace('Mainland China', 'China')\n\n#df_cov2['Province_State'] = df_cov2['Province_State'].fillna('Others')\n\ndf_cov['Cases'] = df_cov['Confirmed'].fillna(0) - df_cov['Deaths'].fillna(0) -  df_cov['Recovered'].fillna(0)","f86f4a55":"# Import world population data\ndf_pop = df_notes = pd.read_csv('https:\/\/raw.githubusercontent.com\/andre-trierveiler\/COV-19_Daily_Following\/master\/data\/world_population_2018.csv', sep = ';')\ndf_pop['Country Name'] = df_pop['Country Name'].str.replace('UK', 'United Kingdom').str.replace('Mainland China', 'China').str.replace('United States', 'US')","cd2a0ad4":"def country_grid(country):\n    country = 'Brazil'\n    df = df_cov[df_cov['Country_Region'] == country]\n    df = df.groupby(['Country_Region','Date']).sum().reset_index()\n            \n    df['Recover Rate'] = df['Recovered'].fillna(0)\/df['Confirmed']\n    df['Death Rate'] = df['Deaths'].fillna(0)\/df['Confirmed']\n    df['New Cases'] = df.Confirmed.rolling(2).sum()\n    df['New Cases'] = 2*df.Confirmed - df['New Cases']\n            \n    df['New Deaths'] = df.Deaths.rolling(2).sum()\n    df['New Deaths'] = 2*df.Deaths - df['New Deaths']\n            \n    df.set_index('Date', inplace = True)\n\n    sns.set(style=\"darkgrid\", palette=\"Set2\")\n    fig = plt.figure(figsize = (20,10), tight_layout =False, frameon = True)\n    fig.autofmt_xdate()\n\n    a1 = plt.subplot2grid((3,3),(0,0),rowspan = 2, sharex = None)\n    a2 = plt.subplot2grid((3,3),(0,2), rowspan = 3, sharex = None)\n    a3 = plt.subplot2grid((3,3),(0,1),rowspan = 2, sharex = None)\n    a4 = plt.subplot2grid((3,3),(2,0),colspan = 2, sharex = None)\n\n    def thousands(x, pos):\n        'The two args are the value and tick position'\n        if x >= 1000:    \n          return '%1.fK' % (x*1e-3)\n        else:\n          return '%1.f' % (x)\n    \n\n    a2.stackplot(df.index,[df['Recovered'], df['Deaths'], df['Cases']],colors=['Mediumseagreen','tomato','dodgerblue'], labels=['Recovered','Death','Diagnosed'], alpha = 0.4)\n    a2.set_xlim([datetime.date(2020, 1, 22),pd.to_datetime(dt_final, format='%Y-%m-%d')]) \n    a2.legend(loc='upper left')\n    a2.xaxis.set_major_formatter(mdates.DateFormatter('%b'))\n    a2.xaxis.set_major_locator(mdates.MonthLocator(interval=1))\n    a2.yaxis.set_major_formatter(mtick.FuncFormatter(thousands))\n    a2.set_title('Total Cases', loc = 'left', horizontalalignment='left')\n\n    a1.bar(df.index,df['New Cases'], alpha=0.8, color='dodgerblue')\n    a1.set_xlim([datetime.date(2020, 1, 22),pd.to_datetime(dt_final, format='%Y-%m-%d')]) \n    a1.xaxis.set_major_formatter(mdates.DateFormatter('%b'))\n    a1.xaxis.set_major_locator(mdates.MonthLocator(interval=1))\n    a1.yaxis.set_major_formatter(mtick.FuncFormatter(thousands))\n    a1.set_title('Daily New Cases', loc = 'left', horizontalalignment='left')\n\n\n    a3.bar(df.index,df['New Deaths'], alpha=0.8, color = 'tomato')\n    #ax3.legend(loc='upper left')\n    a3.set_xlim([datetime.date(2020, 1, 22),pd.to_datetime(dt_final, format='%Y-%m-%d')]) \n    a3.xaxis.set_major_formatter(mdates.DateFormatter('%b'))\n    a3.xaxis.set_major_locator(mdates.MonthLocator(interval=1))\n    a3.yaxis.set_major_formatter(mtick.FuncFormatter(thousands))\n    a3.set_title('Daily New Deaths', loc = 'left', horizontalalignment='left')\n\n    #a4.set_ylabel('Death Rate')\n    a4.set_title('Death Rate', loc = 'left', horizontalalignment='left')\n    a4.plot(df.index, df['Death Rate']*100, linestyle='-', color = 'tomato', alpha = 0.8)\n    a4.set_xlim([datetime.date(2020, 1, 22), pd.to_datetime(dt_final, format='%Y-%m-%d')]) \n    a4.yaxis.set_major_formatter(mtick.PercentFormatter(decimals=0))\n    a4.xaxis.set_major_formatter(mdates.DateFormatter('%b'))\n    a4.xaxis.set_major_locator(mdates.MonthLocator(interval=1))\n\n\n    plt.subplots_adjust(left=0.05, right=0.87, bottom = 0.20, top = 0.83, wspace=0.15, hspace=0.5)\n    fig.text(x=0.87, y=0.125, s='Last Updated '+df_cov.Date.max().strftime('%B, %d'), fontfamily = 'serif', horizontalalignment='right',color='#524939', fontname = 'DejaVu Sans')\n    fig.text(x=0.872, y=0.1, s='by Andr\u00e9 Trierveiler ', fontfamily = 'serif', horizontalalignment='right',color='#524939', fontname = 'DejaVu Sans')\n    fig.text(x=0.755, y=0.93, s='Sources: John Hopkins University', fontfamily = 'serif', horizontalalignment='left',color='#524939', fontname = 'DejaVu Sans')\n    fig.patch.set_facecolor('whitesmoke')\n    fig.suptitle('Novel Coronavirus in ' + country, fontsize = 24,x=0.05, y=0.93, horizontalalignment='left',color='#524939', fontname='Liberation Serif')\n    #fig.title('COVID')\n    #a1.set_facecolor('gainsboro')\n    #plt.margins(x=1, y=1, tight=True)\n    #plt.tight_layout()\n    plt.show()\n\ncountry_grid('Brazil')","db087af0":"**Import Data from Johns Hopkins**","39d2e7c5":"**Setup**","5df949ae":"**Country Overview Grid**"}}