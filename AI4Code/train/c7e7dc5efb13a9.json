{"cell_type":{"e7efc99d":"code","24eafb1d":"code","20f4cfd9":"code","a167f614":"code","7275091e":"code","2d2f8f34":"code","69f6901f":"code","b1419155":"code","77c74be8":"code","dec04d98":"code","2dc2bf94":"code","e8c490d7":"code","cf0d48a4":"code","c2073684":"code","c0e7978b":"code","960f0a97":"code","fcd30c8e":"code","f6a8e8a7":"code","3da7a7d6":"markdown"},"source":{"e7efc99d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","24eafb1d":"import requests\nwiki_home=\"http:\/\/en.wikipedia.org\/wiki\/Main_Page\"\nresponse=requests.get(wiki_home)","20f4cfd9":"type(response)","a167f614":"##\u68c0\u67e5\u7f51\u7edc\u8bf7\u6c42\ndef status_check(r):\n    if r.status_code==200:\n        print(\"Success!\")\n        return 1\n    else:\n        print(\"Failed!\")\n        return -1","7275091e":"status_check(response)","2d2f8f34":"##\u68c0\u67e5\u7f51\u9875\u7f16\u7801\ndef encoding_check(r):\n    return (r.encoding)","69f6901f":"encoding_check(response)","b1419155":"## \u89e3\u7801\u54cd\u5e94\u7684\u5185\u5bb9\u5e76\u68c0\u67e5\u957f\u5ea6\ndef decode_content(r,encoding):\n    return (r.content.decode(encoding))\ncontents=decode_content(response,encoding_check(response))","77c74be8":"type(contents)","dec04d98":"len(contents)","2dc2bf94":"# contents","e8c490d7":"## BeautifulSoup \u5e93\nfrom bs4 import BeautifulSoup\nsoup=BeautifulSoup(contents,\"html.parser\")","cf0d48a4":"txt_dump=soup.text\ntype(txt_dump)","c2073684":"len(txt_dump) ## \u8bf4\u660e\u5bf9\u539f\u59cb\u7684HTML\u8fdb\u884c\u89e3\u6790\nprint(txt_dump[7000:8000])","c0e7978b":"## \u4ece\u8282\u4e2d\u63d0\u53d6\u6587\u672c\nidx1=txt_dump.find(\"From today's featured article\")\nidx2=txt_dump.find(\"Recently featured\")\nprint(txt_dump[idx1+len(\"From today's featured article\"):idx2])","960f0a97":"## \nidx3=txt_dump.find(\"On this day\")\nprint(txt_dump[idx3+len(\"On this day\"):idx3+len(\"On this day\")+1000])","fcd30c8e":"## \ntext_list=[]\nfor d in soup.find_all(\"div\"):\n    if (d.get(\"id\")==\"mp-otd\"):\n        for i in d.find_all(\"ul\"):\n            text_list.append(i.text)","f6a8e8a7":"for i in text_list:\n    print(i)\n    print(\"-\"*100)","3da7a7d6":"##  \u9ad8\u7ea7\u7f51\u7edc\u722c\u53d6\u548c\u6570\u636e\u6536\u96c6\n"}}