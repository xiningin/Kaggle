{"cell_type":{"35d4376d":"code","976718e3":"code","9f42dc11":"code","db1fd672":"code","f51b08bb":"code","fd4c16d7":"code","3d49d833":"code","1e71d015":"code","e65b53bf":"code","49443a8d":"code","410e0328":"code","4a9d14cb":"code","141b74fa":"code","005d26ad":"code","8314f62f":"code","15a85c12":"code","88a3968d":"code","ce3fe9d6":"code","0912923b":"code","9832663e":"code","b0bb2fc2":"code","c21fccf7":"code","a03ec397":"code","ad7e6ad6":"code","f3134a9b":"code","1179d5dc":"code","fab45678":"code","e086901b":"code","199fda2b":"code","d14312b1":"code","24a19748":"code","18361f70":"code","2a6ebfd3":"code","c7b731d3":"code","dd039b93":"code","ac58bd39":"code","1014dc28":"code","49f669ab":"code","0cf4efe5":"code","97271f43":"code","1371bcce":"code","7e86dedc":"code","fc6b142e":"code","966c6f91":"code","43867d65":"code","1698042f":"code","d1cd9e2a":"code","4318057e":"code","0e355612":"code","d37fe4fb":"code","58c73833":"code","67531a5b":"code","79187066":"markdown","31d85350":"markdown","8e5a21c8":"markdown","c2a0fd61":"markdown","44f9595e":"markdown","bcdf8735":"markdown","221bd2bb":"markdown","0bdcd51b":"markdown","a4ad2861":"markdown","56376ab3":"markdown","37dd471c":"markdown","16b0102c":"markdown","5219a4fb":"markdown","979ad821":"markdown","c1cdb3e2":"markdown","7b81dce7":"markdown","8dfe00db":"markdown","1d6fdb97":"markdown","6a2b55ad":"markdown","e674dd60":"markdown","8acc2542":"markdown","d818d572":"markdown","38695670":"markdown","29378516":"markdown","29793f0a":"markdown"},"source":{"35d4376d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sb\n%matplotlib inline","976718e3":"df = pd.read_csv('..\/input\/data.csv')\ndf.head()","9f42dc11":"df.info()","db1fd672":"df.drop(columns=['Unnamed: 0'], inplace=True)","f51b08bb":"df.sample(5)","fd4c16d7":"df.describe()","3d49d833":"sb.set_style('whitegrid')","1e71d015":"bins = np.arange(df['Overall'].min(), df['Overall'].max()+1, 1)\n\nplt.figure(figsize=[8,5])\nplt.hist(df['Overall'], bins=bins)\nplt.title('Overall Rating Distribution')\nplt.xlabel('Mean Overall Rating')\nplt.ylabel('Count')\nplt.show()","e65b53bf":"plt.figure(figsize=[16,5])\nplt.suptitle('Overall Rating Vs Age', fontsize=16)\n\nplt.subplot(1,2,1)\nbin_x = np.arange(df['Age'].min(), df['Age'].max()+1, 1)\nbin_y = np.arange(df['Overall'].min(), df['Overall'].max()+2, 2)\nplt.hist2d(x = df['Age'], y = df['Overall'], cmap=\"YlGnBu\", bins=[bin_x, bin_y])\nplt.colorbar()\nplt.xlabel('Age (years)')\nplt.ylabel('Overall Rating')\n\nplt.subplot(1,2,2)\nplt.scatter(x = df['Age'], y = df['Overall'], alpha=0.25, marker='.')\nplt.xlabel('Age (years)')\nplt.ylabel('Overall Rating')\nplt.show()","49443a8d":"plt.figure(figsize=[8,5])\nsb.jointplot(x=df.Overall, y=df.Potential, kind='kde')\nplt.show()","410e0328":"plt.figure(figsize=[8,5])\nplt.scatter(x=df.Overall, y=df.Potential, c=df.Age, alpha=0.25, cmap='rainbow' )\nplt.colorbar().set_label('Age')\nplt.xlabel('Overall Rating')\nplt.ylabel('Potential')\nplt.show()","4a9d14cb":"df_opa = df[['ID', 'Name', 'Age', 'Overall', 'Potential', 'Value', 'International Reputation', 'Height', 'Weight', 'Position', 'Wage']]\ndf_opa.head()","141b74fa":"df_opa.head()","005d26ad":"def currencystrtoint(amount):\n    new_amount = []\n    for s in amount:\n        list(s)\n        abbr = s[-1]\n        if abbr is 'M':\n            s = s[1:-1]\n            s = float(''.join(s))\n            s *= 1000000\n        elif abbr is 'K':\n            s = s[1:-1]\n            s = float(''.join(s))\n            s *= 1000\n        else:\n            s = 0\n        new_amount.append(s)\n    return new_amount","8314f62f":"df_opa['Value'] = currencystrtoint(list(df_opa['Value']))","15a85c12":"df_opa['Wage'] = currencystrtoint(list(df_opa['Wage']))","88a3968d":"def lengthstrtoint(length):\n    new_length = []\n    for h in length:\n        if type(h) is str:\n            list(h)\n            h = (float(h[0])*12) + float(h[2:])\n        new_length.append(h)\n    return new_length","ce3fe9d6":"df_opa['Height'] = lengthstrtoint(list(df_opa['Height']))","0912923b":"mean_height = df_opa['Height'].mean()","9832663e":"df_opa.Height.loc[df_opa['Height'].isnull()] = mean_height","b0bb2fc2":"def weightstrtoint(weight):\n    new_weight = []\n    for w in weight:\n        if type(w) is str:\n            w = float(w[0:-3])\n        new_weight.append(w)\n    return new_weight","c21fccf7":"df_opa['Weight'] = weightstrtoint(list(df_opa['Weight']))","a03ec397":"mean_weight = df_opa['Weight'].mean()\ndf_opa.Weight.loc[df_opa['Weight'].isnull()] = mean_weight","ad7e6ad6":"mean_internationa_rep = df_opa['International Reputation'].mean()\ndf_opa['International Reputation'].loc[df['International Reputation'].isnull()] = mean_internationa_rep","f3134a9b":"df_opa.describe()","1179d5dc":"plt.figure(figsize=(20,15))\nsb.pairplot(df_opa)","fab45678":"sb.lmplot(data=df_opa, x='Overall', y='Wage', scatter_kws={'alpha':0.3, 'color':'y'} )","e086901b":"sb.lmplot(data=df_opa, x='Overall', y='Wage', order=2, scatter_kws={'alpha':0.3, 'color':'y'} )","199fda2b":"sb.lmplot(data=df_opa, x='Overall', y='Wage', order=3, scatter_kws={'alpha':0.3, 'color':'y'} )","d14312b1":"sb.lmplot(data=df_opa, x='Age', y='Wage', scatter_kws={'alpha':0.3, 'color':'y'} )","24a19748":"sb.lmplot(data=df_opa, x='Age', y='Wage', order=2, scatter_kws={'alpha':0.3, 'color':'y'})","18361f70":"sb.lmplot(data=df_opa, x='Value', y='Wage', scatter_kws={'alpha':0.3, 'color':'y'} )","2a6ebfd3":"sb.lmplot(data=df_opa, x='Height', y='Wage', scatter_kws={'alpha':0.3, 'color':'y'} )","c7b731d3":"sb.lmplot(data=df_opa, x='Height', y='Wage', order=2, scatter_kws={'alpha':0.3, 'color':'y'} )","dd039b93":"sb.lmplot(data=df_opa, x='Weight', y='Wage', scatter_kws={'alpha':0.3, 'color':'y'} )","ac58bd39":"sb.lmplot(data=df_opa, x='Weight', y='Wage', order=2, scatter_kws={'alpha':0.3, 'color':'y'} )","1014dc28":"sb.lmplot(data=df_opa, x='International Reputation', y='Wage', scatter_kws={'alpha':0.3, 'color':'y'} )","49f669ab":"df_opa = pd.get_dummies(df_opa, columns=['Position'], drop_first=True)","0cf4efe5":"df_opa.info()","97271f43":"df_opa.describe()","1371bcce":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn import metrics","7e86dedc":"X = df_opa.drop(['ID', 'Name', 'Wage'], axis=1)\ny = df_opa['Wage']","fc6b142e":"Xtrain, Xtest, ytrain, ytest = train_test_split(X, y, test_size=0.3, random_state=101)","966c6f91":"from sklearn.preprocessing import StandardScaler\nstsc = StandardScaler()\nXtrain = stsc.fit_transform(Xtrain)\nXtest = stsc.fit_transform(Xtest)","43867d65":"def pred_wage(degree, Xtrain, Xtest, ytrain):\n    if degree > 1:\n        poly = PolynomialFeatures(degree = degree)\n        Xtrain = poly.fit_transform(Xtrain)\n        Xtest = poly.fit_transform(Xtest)\n    lm = LinearRegression()\n    lm.fit(Xtrain, ytrain)\n    wages = lm.predict(Xtest)\n    return wages","1698042f":"predicted_wages1 = pred_wage(1, Xtrain, Xtest, ytrain)","d1cd9e2a":"sb.regplot(ytest, predicted_wages1, scatter_kws={'alpha':0.3, 'color':'y'})\nplt.xlabel('Actual Wage')\nplt.ylabel('Predicted Wage')\nplt.show()","4318057e":"print('Mean Absolute Error : ' + str(metrics.mean_absolute_error(ytest, predicted_wages1)))\nprint('Mean Squared Error : ' + str(metrics.mean_squared_error(ytest, predicted_wages1)))\nprint('Root Mean Squared Error : ' + str(np.sqrt(metrics.mean_squared_error(ytest, predicted_wages1))))","0e355612":"predicted_wages2 = pred_wage(2, Xtrain, Xtest, ytrain)","d37fe4fb":"sb.regplot(ytest, predicted_wages2, scatter_kws={'alpha':0.3, 'color':'y'})\nplt.xlabel('Actual Wage')\nplt.ylabel('Predicted Wage')\nplt.show()","58c73833":"print('Mean Absolute Error : ' + str(metrics.mean_absolute_error(ytest, predicted_wages2)))\nprint('Mean Squared Error : ' + str(metrics.mean_squared_error(ytest, predicted_wages2)))\nprint('Root Mean Squared Error : ' + str(np.sqrt(metrics.mean_squared_error(ytest, predicted_wages2))))","67531a5b":"sb.distplot(ytest-predicted_wages1, bins=200, hist_kws={'color':'r'}, kde_kws={'color':'y'})\nplt.xlim(-50000, 50000)","79187066":"## Residual","31d85350":"### Using Linear Regression","8e5a21c8":"### Segregating, Cleaning and Modifying required Data","c2a0fd61":"# Fifa19 - Player Wage Prediction","44f9595e":"### 2. Wage vs Overall (degree = 2)","bcdf8735":"### Nature of dependency of Wage on different properties","221bd2bb":"### 9. Wage vs International Reputation","0bdcd51b":"### Dependencies of properties with each other","a4ad2861":"### Overall Rating vs Potential","56376ab3":"### Overall Rating vs Potential vs Age","37dd471c":"### Distribution of Overall Rating","16b0102c":"### 5. Wage vs Age (degree = 2)","5219a4fb":"### 4. Wage vs Age (degree = 1)","979ad821":"### 6. Wage vs Value (degree = 1)","c1cdb3e2":"## Wage Prediction","7b81dce7":"## Exploratory Analysis\nWages of players to be predicted using their Age, Overall Rating, Potential, Value, Height, Weight, International Reputation and Position.","8dfe00db":"### 7. Wage vs Height","1d6fdb97":"## Adding dummy variables for Position","6a2b55ad":"### 3. Wage vs Overall (degree = 3)","e674dd60":"### Age vs Overall Rating","8acc2542":"#### As we can see above all the error values as we moved to degree=2 regression, so we are going to use only degree=1 i.e. linear regression.","d818d572":"### 1. Wage vs Overall (degree = 1)","38695670":"### Using Polynomial Regression of degree=2","29378516":"# Here We can conclude that the prediction is fairly good as residuals are mainly distributed near 0 but we can improve it by considering more factors from the original data set.","29793f0a":"### 8. Wage vs Weight"}}