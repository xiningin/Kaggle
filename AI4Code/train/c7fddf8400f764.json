{"cell_type":{"b2b471de":"code","db8fead9":"code","07cfb607":"code","f7bff4e3":"code","5467a958":"code","d567e2b2":"code","710d0b65":"code","93065754":"code","b8a0e734":"code","7756856d":"code","c78e7ee3":"code","1325f8e3":"code","1f6fc3bd":"code","0cce2604":"code","6f956fe0":"code","3deaf6a7":"code","90560e03":"code","22a2797f":"code","19f35f6f":"code","7888d22d":"code","3e6e3fdf":"code","e2033902":"code","b26cfb9e":"code","09f6a057":"markdown","25398a87":"markdown","f346b807":"markdown","147115e9":"markdown","fe8b23b1":"markdown","2ad3820c":"markdown","f309f8d8":"markdown","332cec1a":"markdown","08d784fb":"markdown","74a39b8c":"markdown"},"source":{"b2b471de":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","db8fead9":"from matplotlib import pyplot as plt\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom pandas.plotting import register_matplotlib_converters\nregister_matplotlib_converters()\nimport warnings\nwarnings.filterwarnings('ignore')","07cfb607":"!pip install pmdarima\nimport pmdarima as pm","f7bff4e3":"import seaborn as sns\nsns.set(rc={\"figure.figsize\": (8, 6)}); \nsns.set(style=\"white\")","5467a958":"path = '..\/input\/sdtdataset\/'\ndf_company=pd.read_csv(f'{path}Company.csv')\ndf_real=pd.read_csv(f'{path}Real Property.csv')\ndf_company.tail()","d567e2b2":"df_real.tail()","710d0b65":"def data_plot(df):\n    df.index=df['year']\n    df['index_log']=df['index'].apply(np.log)\n    fig = plt.figure(figsize=(16,12))\n    ax1= fig.add_subplot(2,2,1)\n    ax2= fig.add_subplot(2,2,2)\n    df['index'].plot(ax=ax1,title='Index',style=['+-'])\n    df['index_log'].plot(ax=ax2,title='Log Index',style=['d--'])\n    sns.despine()","93065754":"data_plot(df_company)","b8a0e734":"def get_stationarity(df):\n    \n    # Dickey\u2013Fuller test:\n    result = adfuller(df)\n    print('ADF Statistic: {}'.format(result[0]))\n    print('p-value: {}'.format(result[1]))\n    print('Critical Values:')\n    for key, value in result[4].items():\n        print('\\t{}: {}'.format(key, value))","7756856d":"def transformation(df):\n    rolling_mean_exp_decay = df['index_log'].ewm(halflife=26, min_periods=0, adjust=False).mean()\n    df_log_exp_decay = df['index_log'] - rolling_mean_exp_decay\n    df_log_exp_decay.dropna(inplace=True)\n    df['ewm']= df_log_exp_decay\n    df['rolling_mean']=rolling_mean_exp_decay\n    get_stationarity(df_log_exp_decay)","c78e7ee3":"get_stationarity(df_company['index'])","1325f8e3":"transformation(df_company)","1f6fc3bd":"pm.auto_arima(df_company['ewm'], trace=True, error_action='ignore', suppress_warnings=True,seasonal=False)","0cce2604":"from statsmodels.tsa.arima_model import ARIMA\nmodel = ARIMA(df_company['ewm'], order=(2,0,0))\nresults=model.fit(disp=-1)\nresults.plot_predict(1,len(df_company)+16)\nsns.despine()","6f956fe0":"def test(results):\n    from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n    plot_acf(results.resid.values)\n    plt.title('ACF for original dataset',fontsize=10, fontweight=\"bold\")\n    sns.despine()\n    import statsmodels.api as sm\n    from statsmodels.stats.diagnostic import acorr_ljungbox as lb_test\n    print('Box Test and ACF:')\n    return sm.stats.acorr_ljungbox(results.resid, lags=[10])\n    ","3deaf6a7":"test(results)","90560e03":"def prediction_1(df,a):\n    model = ARIMA(df['rolling_mean'], order=(1,0,0))\n    results_rolling = model.fit(disp=-1)\n    rolling_Log_exp=results_rolling.predict(len(df_company),len(df_company)+16)\n    \n    ##\u8fd9\u91cc\u662f\u4e4b\u524d\u90a3\u4e2a\u6a21\u578b\u5f97\u7ed3\u679c\uff1a\n    prediction_values=results.predict(len(df_company),len(df_company)+16)\n    fc, se, conf = results.forecast(17, alpha=a)  #\u8fd9\u91cc\u53ef\u4ee5\u7528\u6765\u8bbe\u7f6e\u7f6e\u4fe1\u5ea6\n    interval_bottom=conf[:,0]\n    interval_up=conf[:,1]\n\n    prediction_result=pd.DataFrame(np.exp(interval_bottom+rolling_Log_exp))\n    prediction_result['1']=np.exp(prediction_values+rolling_Log_exp)\n    prediction_result['2']=np.exp(interval_up+rolling_Log_exp)\n    prediction_result.columns=['Bottom','Fitted','Up']\n    \n    return prediction_result","22a2797f":"prediction_1(df_company,0.05)","19f35f6f":"pm.auto_arima(df_company['index'], trace=True, error_action='ignore', suppress_warnings=True,seasonal=False,information_criterion='aic',intercept=True,stationary=True)","7888d22d":"from statsmodels.tsa.arima_model import ARIMA\nmodel = ARIMA(df_company['index'], order=(2,0,0))\nresults=model.fit(disp=-1)\nresults.plot_predict(1,len(df_company)+16)\nsns.despine()","3e6e3fdf":"test(results)","e2033902":"def prediction_2(a):\n    \n    ##\u8fd9\u91cc\u662f\u4e0a\u9762\u90a3\u4e2a\u6a21\u578b\u5f97\u7ed3\u679c\uff1a\n    prediction_values=results.predict(len(df_company),len(df_company)+16)\n    fc, se, conf = results.forecast(17, alpha=a)  #\u8fd9\u91cc\u53ef\u4ee5\u7528\u6765\u8bbe\u7f6e\u7f6e\u4fe1\u5ea6\n    interval_bottom=conf[:,0]\n    interval_up=conf[:,1]\n\n    prediction_result=pd.DataFrame(interval_bottom)\n    prediction_result['1']=prediction_values.values\n    prediction_result['2']=interval_up\n    prediction_result.columns=['Bottom','Fitted','Up']\n    \n    return prediction_result","b26cfb9e":"prediction_2(0.05)","09f6a057":"#### Prediction :","25398a87":"#### Prediction :","f346b807":"#### The model 2 \uff08\u5c31\u662f\u4e4b\u524d\u7528r\u5199\u7684\u90a3\u4e2a):","147115e9":"## Guide:\n\u8fd9\u91cc\u5199\u4e00\u4e0b\u65e5\u540e\u5982\u679c\u9700\u8981\u4fee\u6539\u3001\u66f4\u65b0\u6a21\u578b\u7684\u8bdd\uff0c\u53ef\u80fd\u9700\u8981\u53d8\u52a8\u7684\u5730\u65b9\uff1a\n\n\uff08\u56e0\u4e3a\u6211\u5176\u5b9e\u5df2\u7ecf\u628aprediction\uff0ctest\uff0cplot\u7b49\u7b49\u90fd\u91cd\u65b0\u5199\u6210\u4e86\u51fd\u6570\u6a21\u5757\uff0c\u4e0d\u9700\u8981\u52a8\uff0c\u6240\u4ee5\u66f4\u65b0\u8fd8\u662f\u633a\u65b9\u4fbf\u7684\uff09\n\n*   1. \u9996\u5148\u662f\u6570\u636e\u96c6\u80af\u5b9a\u9700\u8981\u6539\u52a8\uff0c\u6211\u5728\u8fd9\u8fb9\u6f14\u793a\u7684\u6570\u636e\u96c6\u8fd8\u662f\u523018\u5e74\u5e95\u7684\uff0c\u65e5\u540e\u66f4\u65b0\u7684\u8bdd\uff0c\u5c31\u662f\u628a\u65b0\u7684\u6570\u636e\u96c6\u4f20\u5230\u8fd9\u91cc(Kaggle)\u4e0a\uff0c\u7136\u540e\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u5c31\u662f\u5217\u540d\u4e00\u5b9a\u8981\u662f\"year\"\u548c\"index\"\u3002(index\u5c31\u662f\u6570\u636e,year\u662f\u65f6\u95f4)\u3002\u5e76\u4e14\u7ed9\u4f01\u4e1a\u666f\u6c14\u6307\u6570\u90a3\u4e2a\u6570\u636e\u6587\u4ef6\u547d\u540d\u4e3aCompany\uff0c\u623f\u5730\u4ea7\u884c\u4e1a\u547d\u540d\u4e3aReal Property.\n*   2. \u7b2c\u4e8c\u4e2a\u6709\u53ef\u80fd\u6539\u52a8\u7684\u5c31\u662fARIMA\u6a21\u578b\u7684\u9636\u6570\u3002\u770b\u201cOut[13]\",\u5b83\u8fd9\u4e2a\u7ed3\u679c\u662fARIMA(order=(2, 0, 0), suppress_warnings=True\u3002\u6240\u4ee5\u6211\u5728In[14]\u4e5f\u5c31\u662f\u63a5\u4e0b\u53bb\u90a3\u4e2a\u4ee3\u7801\u5757\u7684\u7b2c\u4e8c\u884c\u4ee3\u7801\uff0c\u5199\u7684\u662f\u201dorder=(2,0,0)\u201c\u3002\u5982\u679c\u65e5\u540eOut[13]\u7684order\u53d8\u4e86\uff0c\u628a\u4e0b\u4e00\u4e2a\u4ee3\u7801\u7684order\u8ddf\u7740\u6539\u52a8\u5c31\u884c\u3002\u540c\u6837\u7684\u4e8b\u60c5\u5bf9Out[19]\u548c\u63a5\u4e0b\u53bb\u7684\u4ee3\u7801\u5757In[20]\u518d\u505a\u4e00\u904d\u5373\u53ef\n\n\n\u7b2c\u4e00\u4e2a\u6a21\u578b\u662f\u6211\u5bd2\u5047\u65f6\u6539\u52a8\u8fc7\u7684\uff0c\u7b2c\u4e8c\u4e2a\u6a21\u578b\u662f\u6211\u590d\u5199\u4e86\u53bb\u5e74\u7684\u6a21\u578b\uff0c\u4e24\u4e2a\u90fd\u6709\uff0c\u5230\u65f6\u5019Stan,Donna\u53ef\u4ee5\u770b\u4e0b\u7ed3\u679c\u81ea\u5df1\u6311\u4e00\u4e2a\u4e86\u3002\u9884\u6d4b\u51fa\u6765\u7684\u7ed3\u679c\u5206\u522b\u662fOut[18]\u548cOut[23].","fe8b23b1":"## Introduction:\n\u8fd9\u91cc\u6211\u518d\u4ecb\u7ecd\u4e00\u4e0b\u51e0\u4e2a\u51fd\u6570\u4ee5\u53ca\u6211\u540e\u6765\u52a0\u4e0a\u53bb\u7684\u529f\u80fd :\n*  1. get_stationary\u548ctransformation\u4e24\u4e2a\u51fd\u6570\uff0c\u90a3\u4e2a\u51fd\u6570\u662f\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u6a21\u578b\u7684\u4f18\u52a3\u6027\u7684\uff0c\u770bIn[11]\uff0c\u68c0\u6d4b\u51fa\u6765\u539f\u59cb\u7528r\u5199\u7684\u90a3\u4e2a\u6a21\u578b\u7684p-value\u662f0.10\uff0c\u6211\u6539\u52a8\u540e\u7684\u6a21\u578b\u662f\u7528transformation\u90a3\u4e2a\u51fd\u6570\u6765\u8868\u793a\uff0c\u68c0\u6d4b\u51fa\u6765\u7684p-value\u662f0.027\uff0c\u6bd4\u4e4b\u524d\u5c0f\uff0c\u6240\u4ee5\u4e5f\u662f\u6211\u8bf4\u4e3a\u4ec0\u4e48\u6539\u52a8\u540e\u7684\u6a21\u578b\u66f4\u597d\uff0c\u4e0d\u8fc7\u968f\u7740\u6570\u636e\u96c6\u7684\u6539\u53d8\uff0c\u8fd9\u4e24\u4e2a\u6a21\u578b\u4f18\u52a3\u6027\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002\n*  2. test\u90a3\u4e2a\u51fd\u6570\uff0c\u662f\u7528\u6765\u5206\u522b\u68c0\u6d4b\u4e24\u4e2a\u6a21\u578b\u7684\u7ed3\u679c\u662f\u5426\u53ef\u9760\uff0c\u770bOut[16]\uff0c\u90a3\u4e2a\u62ec\u53f7\u91cc\u9762\u7684\u7b2c\u4e8c\u4e2a\u6570\u503c\u662f0.8635475\uff0c\u4e00\u822c\u8fd9\u4e2a\u6570\u503c\u5927\u4e8e0.1\uff0c0.2\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd8\u6709\u4e5f\u662fOut[16]\uff0c\u91cc\u9762\u6709\u4e00\u5f20\u56fe\uff0c\u90a3\u4e9b\u84dd\u8272\u7684\u5706\u70b9\u5728\u84dd\u8272\u9634\u5f71\u90e8\u5206\u91cc\u5c31\u53ef\u4ee5\u4e86\u3002\u5728\u8fd9\u91cc\uff0c\u4e24\u4e2a\u6a21\u578b\u7ed3\u679c\u68c0\u6d4b\u51fa\u6765\u90fd\u6ca1\u95ee\u9898\n*  3. prediction\u90e8\u5206\uff0c\u6211\u7ed9prediction\u7684\u51fd\u6570\u52a0\u4e86\u7f6e\u4fe1\u6c34\u5e73a\u8fd9\u4e2a\u8f93\u5165\u53d8\u91cf\uff0c\u597d\u5904\u5c31\u662f\u6211\u8bb0\u5f97\u5f53\u521d\u5f00\u4f1a\u65f6\u5019\u9700\u8981\u6211\u4eec\u7ed9\u51fa\u4e0d\u540c\u7f6e\u4fe1\u6c34\u5e73\u4e0b\u9762\u7684\u4f30\u8ba1\uff0c\u5982\u679c\u8fd9\u6b21\u4e5f\u8981\u8fd9\u4e48\u7ed9\u7684\u8bdd\u5c31\u76f4\u63a5\u6539\u52a8a\u7684\u6570\u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\u7136\u540e\u5bf9\u5e94\u7684\u7ed3\u679c\uff0c\"Bottom\"\u548c\"Up\"\u4f1a\u968f\u7740\u53d1\u751f\u6539\u53d8","2ad3820c":"#### Test :","f309f8d8":"#### Test :","332cec1a":"## Use :\n\u56e0\u4e3a\u8003\u8651\u5230\u4f60\u4eec\u7528\u516c\u53f8\u7684\u7535\u8111\u4e0d\u65b9\u4fbf\u4e0b\u8f7dpython\uff0c\u6240\u4ee5\u6211\u628a\u6240\u6709\u7684\u4ee3\u7801\u6253\u5305\u5199\u6210\u51fd\u6570\uff0c\u7136\u540e\u90fd\u653e\u5230\u4e86\u8fd9\u4e2a\u7f51\u9875\u4e0a(\u7f51\u7ad9\u53ebKaggle\uff0c\u867d\u7136\u662f\u56fd\u5916\u7f51\u5740\uff0c\u4e0d\u8fc7\u4e0d\u7528vpn\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528)\u3002\n\u653e\u5728\u7f51\u9875\u4e0a\u7684\u597d\u5904\u5c31\u662f\uff0c\u53ea\u8981\u6ce8\u518c\u4e86\u8d26\u53f7\uff0c\u4f60\u4eec\u5c31\u53ef\u4ee5\u8dd1\u6211\u5199\u7684\u4ee3\u7801\uff0c\u4e0d\u9700\u8981\u4e0b\u8f7dpython\u6216\u8005r\uff0c\u7f51\u7ad9\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u8fd9\u4e24\u79cd\u8bed\u8a00\u7684\u8fd0\u884c\u73af\u5883\u3002\n\u5173\u4e8e\u600e\u4e48\u4f7f\u7528\u8fd9\u4e2a\u7f51\u7ad9:\n*  1. \u5148\u6ce8\u518c\u4e2a\u8d26\u53f7\uff0c\u7528\u90ae\u7bb1\u5c31\u884c\uff0cgamil\u90a3\u79cd\u90ae\u7bb1\uff0c\u79c1\u4eba\u90ae\u7bb1\u53ef\u80fd\u4e5f\u53ef\u4ee5\n*  2. \u767b\u5f55\u4ee5\u540e\u6253\u5f00\u6211\u53d1\u7684\u8fd9\u4e2a\u4ee3\u7801\u7f51\u9875\uff0c\u53f3\u4e0a\u89d2\u6709\u4e00\u4e2a\"Copy and Edit\"\uff0c\u76f4\u63a5\u62f7\u8d1d\u5230\u4f60\u7684\u8d26\u6237\u91cc\n*  3. \u5728My account\u91cc\u9762\u627enotebook\uff0c\u91cc\u9762\u4f1a\u6709\u5df2\u7ecf\u62f7\u8d1d\u597d\u7684\u6587\u4ef6\uff0c\u76f4\u63a5\u6253\u5f00\u5c31\u884c\u3002\u63a5\u4e0b\u91cc\u5c31\u662f\u53ef\u4ee5\u81ea\u5df1\u5728\u8fd9\u91cc\u4fee\u6539\u4ee3\u7801\uff0c\u8fd0\u884c\u4ee3\u7801\u3002\n\n\u5e76\u4e14\u6240\u6709\u8fd0\u884c\u7a0b\u5e8f\u65f6\u7684\u5185\u5b58\u90fd\u662f\u7528\u8fd9\u4e2a\u7f51\u7ad9\u7684\uff0c\u4e0d\u9700\u8981\u7528\u81ea\u5df1\u7684\u7535\u8111\uff0c\u6240\u4ee5\u4e5f\u4e0d\u7528\u62c5\u5fc3\u8dd1\u4e0d\u52a8\u7684\u95ee\u9898","08d784fb":"### \u5199\u5728\u6700\u540e\uff1a\n\u8fd1\u671fGRE\u7ebf\u4e0b\u8003\u8bd5\u5f00\u653e\u4e86\uff0c\u6211\u6253\u7b977\u6708\u5c31\u53bb\u8003\uff0c\u518d\u52a0\u4e0a\u829d\u5927\u7684\u6691\u7814\u6bcf\u5468\u90fd\u8981\u6c47\u62a5\uff0c\u6240\u4ee5\u4e3a\u4e86\u6f5c\u5fc3\u5b66\u4e60\u4ee5\u540e\u53ef\u80fd\u5fae\u4fe1\u56de\u590d\u4e0d\u662f\u5f88\u53ca\u65f6\uff0c\u89c1\u8c05\uff01\n\n\u4e0d\u8fc7\u548c\u5c71\u4fe1Team\u8fd8\u662f\u5f88\u6709\u611f\u60c5\u7684\uff0c\u4ee5\u540e\u5982\u679c\u6709\u5565\u80fd\u5e2e\u7684\u4e5f\u53ef\u4ee5\u8054\u7cfb\u6211\u54c8\u54c8","74a39b8c":"Build the model :"}}