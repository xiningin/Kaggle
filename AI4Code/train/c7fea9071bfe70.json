{"cell_type":{"8ab2d791":"code","27293fe6":"code","2dc36a6b":"code","e19c72c3":"code","c297b068":"code","9042647f":"code","28611eb1":"code","b1aea229":"code","0f27dc58":"code","3586cbef":"code","4c0d5485":"code","8540bedd":"code","a27563a7":"code","d7fca11f":"code","7006a229":"code","d42d558c":"code","02c9712c":"code","5de445b2":"code","bc9efe15":"code","f2f793f5":"code","6e15e4ac":"code","3444ed9d":"code","7e037607":"code","60da647f":"markdown","a9041dba":"markdown"},"source":{"8ab2d791":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns \nimport matplotlib.pyplot as plt \n\nsns.set_style('white')\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","27293fe6":"\n#Load data \ndf=pd.read_csv('..\/input\/passenger-list-for-the-estonia-ferry-disaster\/estonia-passenger-list.csv')\ndf.head()\n","2dc36a6b":"df_shape=df.shape\ndf_info=df.info()\ndf_dtyps=df.dtypes\n\n\ninfos=[df_shape,df_info,df_dtyps]\n\nfor dfs in infos :\n    dfs\n\n","e19c72c3":"num_cols=df.select_dtypes(['int64']).columns\nstr_cols=df.select_dtypes(['object']).columns\nstr_cols","c297b068":"#null values in the data \n\nnull_vals=df.isnull().sum()\nnull_vals\n\nsns.heatmap(df.isnull())\n","9042647f":"sns.countplot(df['Survived']) #highly imbalanced Data","28611eb1":"# age feature \n\nage_desc=df['Age'].describe()\nsns.distplot(df['Age'],bins=10,hist=True)\nage_desc","b1aea229":"df['Age_cut']=pd.cut(df['Age'],bins=[-1,30,60,90],labels=[0,1,2])\ndf['Age_cut'].head()","0f27dc58":"df.isnull().sum()","3586cbef":"sns.countplot(df['Age_cut'],hue=df['Survived'])","4c0d5485":"for cat in str_cols:\n    print(cat ,'\\n',df[cat].nunique())","8540bedd":"df.loc[\n    df[\"Country\"].value_counts()[df[\"Country\"]].values<20,\"Country\"] = \"RARE\"","a27563a7":"df['Country'].value_counts()","d7fca11f":"#Handle Categorical Data -> Sex,Class\n\n\nsex_map={'M':1,'F':0}\ncat_map={'P':0,'C':1}\n\n\ndf['Sex_Class']=df['Sex'].map(sex_map)\ndf['Category_Class']=df['Category'].map(cat_map)\n\n\nnew_feats=['Sex_Class','Category_Class']\n\n\nfor nf in new_feats:\n    df[nf].head()\n","7006a229":"X=pd.get_dummies(df['Sex'],drop_first=True)\ndf=pd.concat([df,X],axis=1)\n\n\nX=pd.get_dummies(df['Category'],drop_first=True)\ndf=pd.concat([df,X],axis=1)\n","d42d558c":"df.head()","02c9712c":"#Handle Country Feature \n\n\nfrom sklearn.preprocessing import LabelEncoder,OneHotEncoder\n\n\nX=pd.get_dummies(df['Country'])\ndf=pd.concat([df,X],axis=1)\ndf.head()\n","5de445b2":"df.drop('PassengerId',axis=1,inplace=True)","bc9efe15":"df.corr()['Survived'].sort_values(ascending=False)","f2f793f5":"imp_cols=['Age_cut','M','Sweden','RARE','Estonia','Survived']\ndata=df[imp_cols]","6e15e4ac":"X=data.drop('Survived',axis=1)\nY=data['Survived']","3444ed9d":"from sklearn.ensemble import RandomForestClassifier\nimport xgboost\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import accuracy_score,confusion_matrix,roc_auc_score,classification_report\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\n\n\nlreg=LogisticRegression()\nlreg.fit(X,Y)\n\n\n\nprint(cross_val_score(lreg,X,Y,cv=10).mean())\n\n\n\n\n\n\n","7e037607":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(X,Y,random_state=101,test_size=0.3)\n\nlogreg=LogisticRegression()\nlogreg.fit(x_train,y_train)\n\npred=logreg.predict(x_test)\n\n\nprint(accuracy_score(y_test,pred))\nprint(classification_report(y_test,pred))\nprint(confusion_matrix(y_test,pred))\n\n\n\n\n\n\n","60da647f":"With this Model True-Negative are 0 , Model is not able to classifying Negative class.\n\n**Thanks, Upvote!**","a9041dba":"**In this Notebbok**:\n1.EDA\n2.Visualization\n3.Handeling Categorical and Numerical Features\n4.Modeling using Logistic Regression"}}