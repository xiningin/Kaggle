{"cell_type":{"5d905c5b":"code","e35c6fe0":"code","8b7da46e":"code","ec0908a2":"code","e0429ad9":"code","72dadf33":"code","2c4f9ca8":"code","df28e558":"code","c2857be8":"code","a984e10b":"code","9ab103f3":"code","e234f6f3":"code","863cb2d0":"code","4b777f1a":"code","3c5bb25e":"code","b8c4b14a":"code","8d1d50da":"code","430d0c71":"code","f0efeced":"code","6170b61f":"code","2bc5ee46":"code","8a35ed3e":"code","5b28de42":"code","06234a19":"code","cda73b5c":"code","ec39ba44":"code","c9d8b414":"code","5442095c":"code","f75f13e0":"code","407b9933":"code","7ec8509f":"code","c8b52bd5":"code","260663ff":"code","735314e7":"code","554f8437":"code","965d885a":"code","2bfd898e":"code","e49a4407":"code","110fb995":"code","b83766e5":"code","d60715cc":"code","4d2f5438":"code","8517bb77":"code","b30f76e0":"code","c2943e40":"code","fed42874":"code","6a50e1ee":"code","f2dce938":"code","a8681243":"code","26283a8f":"code","225b4866":"code","c70ff361":"code","7d1b8f50":"code","3ee0ebb5":"code","ef05931b":"code","39550b2d":"code","036479f8":"code","946a6b7e":"code","d65e7fb2":"code","239b3881":"code","f69f3234":"code","837ceda6":"code","fa8a55c1":"code","5df6c2c0":"code","6af13bcf":"code","89901c11":"code","f13c011a":"code","dfe40f21":"code","12aa8f9e":"code","9b6e2acd":"code","7c365959":"code","37901c76":"code","d3776050":"code","042f735a":"code","5abe18e5":"code","e08f2269":"code","b4819c6e":"code","790b6eb3":"code","e5de0dcd":"code","d064a3b8":"code","14f0bce1":"code","1bdf9ce7":"code","98f36e96":"code","0890f26e":"code","eadd3972":"code","91ff98d9":"code","01c60263":"code","90a44944":"code","fe1a1e3b":"code","d5b56856":"code","ad16ea93":"code","37892057":"code","9c82636c":"code","bacdb3a8":"code","a188c428":"code","b306d2a9":"code","2decc1ef":"code","509aff0f":"code","52a6b2e8":"code","8496e71d":"code","d4896ca0":"code","b6d495a3":"code","b896583f":"code","6ece4902":"code","c1d553b6":"code","2612e545":"code","b8d90dc8":"code","04327254":"code","8d19c78b":"code","45f3391f":"code","4e961b1e":"code","0351445a":"code","c24f1f73":"code","3be715f6":"code","0c5c31ee":"code","d5ca6a4d":"code","82610ed9":"code","e56f9296":"code","d4b6b6a0":"code","2dd8da9f":"code","7cd05806":"code","9a05c6d7":"code","f53ea35b":"markdown","cb26a509":"markdown"},"source":{"5d905c5b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","e35c6fe0":"data = pd.read_csv(\"..\/input\/pokemon.csv\")","8b7da46e":"data.info()","ec0908a2":"data.corr()","e0429ad9":"# correlation map\nf, ax = plt.subplots(figsize = (18, 18))\nsns.heatmap(data.corr(), annot = True, linewidths=.5,fmt=\".1f\",ax=ax)\nplt.show()","72dadf33":"data.head(10)","2c4f9ca8":"data.columns","df28e558":"#line plot\n# color = color, label = label, linewidth = width of line, \ndata.Speed.plot(kind=\"line\", color = \"g\",label = \"Speed\", linewidth = 1, alpha=0.5,grid = True, linestyle = \":\")\ndata.Defense.plot(color=\"r\",label =\"Defense\",linewidth=1,alpha = 0.5, grid = True, linestyle=\"-\" )\nplt.legend(loc = \"upper right\")\nplt.xlabel(\"x axis\")\nplt.ylabel(\"y axis\")\nplt.title(\"Line Plot\")\n\n","c2857be8":"data.plot(kind=\"scatter\", x=\"Attack\", y= \"Defense\",alpha=0.5,color=\"red\")\nplt.xlabel(\"Attack\")\nplt.ylabel(\"Defence\")\nplt.title(\"Attack Defense Scatter Plot\")","a984e10b":"data.Speed.plot(kind=\"hist\",bins = 50, figsize=(12,12))","9ab103f3":"data.Speed.plot(kind=\"hist\",bins = 50)\nplt.clf()","e234f6f3":"dictionary = {\"spain\" : \"madrid\", \"usa\" : \"vegas\"}\nprint(dictionary.keys())\nprint(dictionary.values())","863cb2d0":"dictionary[\"spain\"]=\"barcelona\"\nprint(dictionary)","4b777f1a":"dictionary[\"france\"]=\"paris\"\nprint(dictionary)","3c5bb25e":"del dictionary[\"spain\"]\nprint(dictionary)","b8c4b14a":"print(\"france\" in dictionary)","8d1d50da":"dictionary.clear()\nprint(dictionary)","430d0c71":"del dictionary\nprint(dictionary)","f0efeced":"data = pd.read_csv(\"..\/input\/pokemon.csv\")","6170b61f":"series = data[\"Defense\"]\nprint(type(series))","2bc5ee46":"data_frame = data[[\"Defense\"]]\nprint(type(data_frame))","8a35ed3e":"print(3>2)","5b28de42":"print(3!=2)","06234a19":"print(True and False)","cda73b5c":"print(True or False)","ec39ba44":"x = data[\"Defense\"] > 200\ndata[x]","c9d8b414":"data[np.logical_and(data[\"Defense\"]>200, data[\"Attack\"]>100)]","5442095c":"data[(data[\"Defense\"]>200) &(data[\"Attack\"]>100)]","f75f13e0":"i = 0\nwhile i!=5:\n    print(\"i is: \",i)\n    i+=1\nprint(i, \"is equeal to 5\")","407b9933":"lis = [1,2,3,4,5]\nfor i in lis:\n    print(\"i is: \", i)\nprint(\"over\")","7ec8509f":"for index, value in enumerate(lis):\n    print(\"index \", index, \" : \",\"value\", value)\nprint(\"over\")","c8b52bd5":"dictionary = {\"spain\" : \"madrid\", \"france\":\"paris\"}\nfor key,value in dictionary.items():\n    print(key,\" : \", value)\nprint(\"over\")","260663ff":"import pandas as pd\ndata = pd.read_csv(\"..\/input\/pokemon.csv\")\nfor index, value in data[[\"Attack\"]][0:1].iterrows():\n    print(index, \" : \",value)","735314e7":"def tuble_ex():\n    t = (1, 2, 3)\n    return t\na, b, c = tuble_ex()\nprint(a, b ,c)","554f8437":"x = 2\ndef f():\n    x = 3\n    return x\nprint(x)\nprint(f())","965d885a":"x = 5\ndef f():\n    y = 2 * x\n    return y\nprint(f())","2bfd898e":"import builtins\ndir(builtins)","e49a4407":"def square():\n    def add():\n        x = 2\n        y = 3\n        z = x + y\n        return z\n    return add()**2\nprint(square())","110fb995":"def f(a, b = 1, c = 2):\n    y = a + b + c\n    return y\nprint(f(5))\nprint(f(5, 4, 3))","b83766e5":"def f(*args):\n    for i in args:\n        print(i)\nf(1)","d60715cc":"f(1, 2, 3, 4)","4d2f5438":"def f(**kwargs):\n    for key, value in kwargs.items():\n        print(key, \" : \", value)\nf(country = \"spain\", capital = \"madrid\", population = 123456)","8517bb77":"square = lambda x: x ** 2\nprint(square(4))\ntot = lambda x, y, z: x + y + z\nprint(tot(1, 2, 3))","b30f76e0":"number_list = [1, 2, 3]\ny = map(lambda x: x ** 2, number_list)\nprint(list(y))","c2943e40":"name = \"ronaldo\"\nit = iter(name)\nprint(next(it))\nprint(next(it))\nprint(next(it))\nprint(*it)","fed42874":"list1 = [0, 1, 2, 3]\nlist2 = [1, 2, 3, 4]\nz = zip(list1,list2)\nprint(z)\nz_list = list(z)\nprint(z_list)","6a50e1ee":"un_zip = zip(*z_list)\nun_list1, un_list2 = list(un_zip)\nprint(un_list1)\nprint(un_list2)\nprint(type(un_list2))\nliste2 = list(un_list2)\nprint(liste2)","f2dce938":"num1 = [1,2,3]\nnum2 = [i +1 for i in num1]\nprint(num2)","a8681243":"num1 = [5, 10, 15]\nnum2 = [i**2 if i == 10 else i - 5 if i < 7 else i+5 for i in num1]\nprint(num2)","26283a8f":"import pandas as pd\ndata = pd.read_csv(\"..\/input\/pokemon.csv\")\nthreshold = sum(data.Speed)\/len(data.Speed)\nprint(threshold)\ndata[\"speed_level\"] = [\"high\" if i > threshold else \"low\" for i in data.Speed]\ndata.loc[:10, [\"speed_level\",\"Speed\"]]","225b4866":"import pandas as pd\ndata = pd.read_csv(\"..\/input\/pokemon.csv\")\ndata.head()","c70ff361":"data.tail()","7d1b8f50":"data.columns","3ee0ebb5":"data.shape","ef05931b":"data.info()","39550b2d":"print(data[\"Type 1\"].value_counts(dropna = False))","036479f8":"data.describe()","946a6b7e":"data.boxplot(column=\"Attack\", by = \"Legendary\")\nplt.show()","d65e7fb2":"data_new = data.head(10)\ndata_new","239b3881":"melted = pd.melt(frame = data_new, id_vars = \"Name\", value_vars = [\"Attack\", \"Defense\"])\nmelted","f69f3234":"melted.pivot(index = \"Name\", columns = \"variable\", values=\"value\")","837ceda6":"import pandas as pd\ndata = pd.read_csv(\"..\/input\/pokemon.csv\")","fa8a55c1":"data1 = data.head()\ndata2 = data.tail()\nconc_data_row = pd.concat([data1, data2], axis = 0, ignore_index = True)\nconc_data_row","5df6c2c0":"data1 = data[\"Attack\"].head()\ndata2 = data[\"Defense\"].head()\nconc_data_col = pd.concat([data1,data2],axis = 1)\nconc_data_col","6af13bcf":"data.dtypes","89901c11":"data[\"Type 1\"]  =data[\"Type 1\"].astype(\"category\")\ndata[\"Speed\"] = data[\"Speed\"].astype(\"float\")","f13c011a":"data.dtypes","dfe40f21":"data.info()","12aa8f9e":"data[\"Type 2\"].value_counts(dropna = False)","9b6e2acd":"data1 = data\ndata1[\"Type 2\"].dropna(inplace = True)","7c365959":"assert 1 == 1","37901c76":"assert data[\"Type 2\"].notnull().all()","d3776050":"data[\"Type 2\"].fillna(\"empty\",inplace = True)","042f735a":"assert data[\"Type 2\"].notnull().all()","5abe18e5":"import pandas as pd\nimport matplotlib.pyplot as plt\ncountry = [\"Spain\",\"France\"]\nprint(country)\npopulation = [\"11\",\"12\"]\nprint(population)\nlist_label = [\"country\",\"population\"]\nprint(list_label)\nlist_col = [country, population]\nprint(list_col)\nzipped = list(zip(list_label,list_col))\nprint(zipped)\ndata_dict = dict(zipped)\nprint(data_dict)\ndf = pd.DataFrame(data_dict)\ndf","e08f2269":"df[\"capital\"]=[\"madrid\",\"paris\"]\ndf","b4819c6e":"df[\"income\"]=0\ndf","790b6eb3":"data = pd.read_csv(\"..\/input\/pokemon.csv\")\ndata1 = data.loc[:,[\"Attack\",\"Defense\",\"Speed\"]]\ndata1.plot()\nplt.show()","e5de0dcd":"data1.plot(subplots = True)\nplt.show()","d064a3b8":"data1.plot(kind = \"scatter\", x= \"Attack\", y= \"Defense\")\nplt.show()","14f0bce1":"data1.plot(kind = \"hist\", y = \"Defense\", bins = 50, range = (0,250), density = True)\nplt.show()","1bdf9ce7":"fig, axes = plt.subplots(nrows = 2, ncols = 1)\ndata1.plot(kind = \"hist\", y = \"Defense\", bins = 50, range = (0, 250), density = True, ax = axes[0] )\ndata1.plot(kind = \"hist\", y = \"Defense\", bins = 50, range = (0, 250), density = True, ax = axes[1], cumulative = True)\nplt.savefig(\"graph.png\")\nplt.show()","98f36e96":"data1.describe()","0890f26e":"time_list = [\"1992-03-08\", \"1992-04-12\"]\nprint(type(time_list[1]))\ndatetime_object = pd.to_datetime(time_list)\nprint(type(datetime_object))","eadd3972":"import warnings\nwarnings.filterwarnings(\"ignore\")\ndata2 = data.head()\ndate_list=[\"1992-01-10\",\"1992-02-10\",\"1992-03-10\",\"1993-03-15\",\"1993-03-16\"]\ndatetime_object = pd.to_datetime(date_list)\ndata2[\"date\"]=datetime_object\ndata2=data2.set_index(\"date\")\ndata2","91ff98d9":"print(data2.loc[\"1993-03-16\"])\nprint(data2.loc[\"1992-03-10\":\"1993-03-16\"])","01c60263":"data2.resample(\"A\").mean()","90a44944":"data2.resample(\"M\").mean()","fe1a1e3b":"data2.resample(\"M\").first().interpolate(\"linear\")","d5b56856":"data2.resample(\"M\").mean().interpolate(\"linear\")","ad16ea93":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\ndata = pd.read_csv(\"..\/input\/pokemon.csv\")\ndata = data.set_index(\"#\")\ndata.head()","37892057":"data[\"HP\"][1]","9c82636c":"data.loc[1,[\"HP\"]]","bacdb3a8":"data[[\"HP\",\"Attack\"]]","a188c428":"print(type(data[\"HP\"]))\nprint(type(data[[\"HP\"]]))","b306d2a9":"data.loc[1:10,\"HP\":\"Defense\"]","2decc1ef":"data.loc[10:1:-1,\"HP\":\"Defense\"]","509aff0f":"data.loc[1:10,\"Speed\":]","52a6b2e8":"boolean = data.HP > 200\ndata[boolean]","8496e71d":"first_filter = data.HP>150\nsecond_filter = data.Speed>35\ndata[first_filter & second_filter]","d4896ca0":"data.HP[data.Speed<15]","b6d495a3":"def div(n):\n    return n\/2\ndata.HP.apply(div)","b896583f":"data.HP.apply(lambda n : n\/2)","6ece4902":"data[\"total_power\"]=data.Attack + data.Defense\ndata.head()","c1d553b6":"print(data.index.name)","2612e545":"data.index.name=\"index_name\"\ndata.head()","b8d90dc8":"data3 = data.copy()\ndata3.index = range(100,900,1)\ndata3.head()","04327254":"data = pd.read_csv(\"..\/input\/pokemon.csv\")\ndata.head()","8d19c78b":"data1 = data.set_index([\"Type 1\",\"Type 2\"])\ndata1.head(100)","45f3391f":"dic = {\"treatment\":[\"A\",\"A\",\"B\",\"B\"],\"gender\":[\"F\",\"M\",\"F\",\"M\"],\"response\":[10,45,5,9],\"age\":[15,4,72,65]}\ndf = pd.DataFrame(dic)\ndf","4e961b1e":"df.pivot(index=\"treatment\",columns=\"gender\",values=\"response\")","0351445a":"df1 = df.set_index([\"treatment\",\"gender\"])\ndf1","c24f1f73":"df1.unstack(level=0)","3be715f6":"df1.unstack(level=1)","0c5c31ee":"df2= df1.swaplevel(0,1)\ndf2","d5ca6a4d":"df","82610ed9":"pd.melt(df,id_vars=\"treatment\",value_vars=[\"age\",\"response\"])","e56f9296":"df","d4b6b6a0":"df.groupby(\"treatment\").mean()","2dd8da9f":"df.groupby(\"treatment\").age.max()","7cd05806":"df.groupby(\"treatment\")[[\"age\",\"response\"]].min()","9a05c6d7":"df.info()","f53ea35b":"2. PYTHON DATA SCIENCE TOOLBOX\n","cb26a509":"Data Science ve Python: S\u0131f\u0131rdan Uzmanl\u0131\u011fa Veri Bilimi (2) kursu denemelerim"}}