{"cell_type":{"6c725d03":"code","27a00864":"code","ead77a02":"code","4975a088":"code","71162812":"code","e5955cde":"code","359e80a0":"code","fea3ae65":"code","7412edae":"code","12ea7dbe":"code","54cb210e":"code","4a628b46":"code","615a7d8c":"code","47cfc38d":"code","6e6b50ed":"code","62912adc":"code","53d34a71":"code","fc7ac822":"code","eb8dde5c":"code","6a05d79f":"markdown","354d1a5f":"markdown","0f0a5845":"markdown","b592e221":"markdown","940e0f4a":"markdown","77458b37":"markdown","d15eb462":"markdown","8549ff85":"markdown","12d52107":"markdown","2c178fa1":"markdown","e5f0d357":"markdown","6e9d068d":"markdown"},"source":{"6c725d03":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"darkgrid\")\n\n# Machine Learning\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.metrics import accuracy_score\n\nfrom sklearn import svm, tree, linear_model, neighbors, naive_bayes, ensemble, discriminant_analysis, gaussian_process\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\n\n#ignore warning messages \nimport warnings\nwarnings.filterwarnings('ignore')","27a00864":"df = pd.read_csv(\"..\/input\/most-expensive-footballers-2021\/players.csv\")\ndf = df.iloc[:, 1:]\ndf","ead77a02":"fontdict = {\"fontsize\": 16, \"fontweight\": \"bold\"}\n\ndef distribution_chart(col):\n    fig, axes = plt.subplots(1, 2, figsize=(18, 6), dpi=100)\n\n    sns.histplot(data=df, x=col, ax=axes[0])\n    axes[0].set_title(f\"{col} Distribution - Histogram\", fontdict=fontdict)\n\n    sns.kdeplot(data=df, x=col, ax=axes[1])\n    axes[1].set_title(f\"{col} Distribution - Kdeplot\", fontdict=fontdict)\n\n    plt.show()","4975a088":"distribution_chart(\"Age\")","71162812":"distribution_chart(\"Markey Value In Millions(\u00a3)\")","e5955cde":"country_value_counts = df[\"Country\"].value_counts()[:10]\n\nplt.figure(figsize=(10, 6), dpi=100)\nsns.barplot(x=country_value_counts.index,\n            y=country_value_counts.values)\nplt.ylabel(\"Count\")\nplt.show()","359e80a0":"df.loc[df[\"Matches\"] == df[\"Matches\"].max()]","fea3ae65":"df.loc[df[\"Matches\"] == df[\"Matches\"].min()]","7412edae":"df[df.Goals == df.Goals.max()]","12ea7dbe":"df[df.Assists == df.Assists.max()]","54cb210e":"df[df[\"Markey Value In Millions(\u00a3)\"] == df[\"Markey Value In Millions(\u00a3)\"].max()]","4a628b46":"plt.figure(figsize=(15, 10), dpi=80)\nsns.heatmap(df.corr(), annot=True)\nplt.show()","615a7d8c":"cols = [\"Age\", \"Markey Value In Millions(\u00a3)\", \"Matches\", \"Goals\", \"Own Goals\",\n        \"Assists\", \"Yellow Cards\", \"Second Yellow Cards\", \"Red Cards\",\n        \"Number Of Substitute In\", \"Number Of Substitute Out\"]\ndf_copy = df[cols].copy()\n\nattacker_pos = [\"Centre-Forward\", \"Left Winger\", \"Right Winger\", \"Second Striker\"]\nmidfielder_pos = [\"Attacking Midfield\", \"Central Midfield\", \"Defensive Midfield\", \"Left Midfield\", \"Right Midfield\"]\ndefender_pos = [\"Centre-Back\", \"Left-Back\", \"Right-Back\"]","47cfc38d":"attacker_col = []\n\nfor pos in df.Position:\n    if pos in attacker_pos:\n        attacker_col.append(1)\n    else:\n        attacker_col.append(0)\n        \nmidfielder_col = []\n\nfor pos in df.Position:\n    if pos in midfielder_pos:\n        midfielder_col.append(1)\n    else:\n        midfielder_col.append(0)\n        \ndefender_col = []\n\nfor pos in df.Position:\n    if pos in defender_pos:\n        defender_col.append(1)\n    else:\n        defender_col.append(0)","6e6b50ed":"X_train, X_test, y_train, y_test = train_test_split(df_copy, attacker_col, test_size = 0.2, random_state = 0)","62912adc":"MLA_compare = pd.DataFrame()\n\ndef MLA_testing(MLA, X_train, X_test):\n    row_index = 0\n    for classifier in MLA:\n        classifier.fit(X_train, y_train)\n\n        y_pred = classifier.predict(X_test)\n        classifier_accuracy_score = accuracy_score(y_test, y_pred)\n\n        kfold_accuracy = cross_val_score(estimator = classifier, X = X_train, y = y_train, cv = 10)\n\n        MLA_name = classifier.__class__.__name__\n        MLA_compare.loc[row_index, 'MLA Name'] = MLA_name\n        MLA_compare.loc[row_index, 'Accuracy Score'] = classifier_accuracy_score*100\n        MLA_compare.loc[row_index, 'K-Fold Accuracy'] = kfold_accuracy.mean()*100\n\n        print(MLA_name, \"Done\")\n        row_index+=1","53d34a71":"MLA = [\n    #Ensemble Methods\n    ensemble.AdaBoostClassifier(),\n    ensemble.BaggingClassifier(),\n    ensemble.ExtraTreesClassifier(),\n    ensemble.GradientBoostingClassifier(),\n    ensemble.RandomForestClassifier(),\n\n    #Gaussian Processes\n    gaussian_process.GaussianProcessClassifier(),\n    \n    #GLM\n    linear_model.PassiveAggressiveClassifier(),\n    linear_model.RidgeClassifierCV(),\n    linear_model.SGDClassifier(),\n    linear_model.Perceptron(),\n    \n    #Navies Bayes\n    naive_bayes.BernoulliNB(),\n    naive_bayes.GaussianNB(),\n    \n    #Nearest Neighbor\n    neighbors.KNeighborsClassifier(),\n    \n    #SVM\n    svm.SVC(probability=True),\n    svm.NuSVC(probability=True),\n    \n    #Trees    \n    tree.DecisionTreeClassifier(),\n    tree.ExtraTreeClassifier(),\n    \n    #Discriminant Analysis\n    discriminant_analysis.LinearDiscriminantAnalysis(),\n    discriminant_analysis.QuadraticDiscriminantAnalysis(),\n\n    XGBClassifier(eval_metric=\"logloss\", use_label_encoder=False),\n    CatBoostClassifier(silent=True)  \n    ]\n\nMLA_testing(MLA=MLA, X_train=X_train, X_test=X_test)","fc7ac822":"MLA_compare = MLA_compare.sort_values(by=\"Accuracy Score\", ascending=False).reset_index(drop=True)[:10]\nMLA_compare","eb8dde5c":"MLA_compare = MLA_compare.sort_values(by=\"K-Fold Accuracy\", ascending=False).reset_index(drop=True)\nMLA_compare","6a05d79f":"22 Years old Kylian Mbapp\u00e9 of France playing for Paris Saint-Germain Club has the heightest market value of 144M. He has Scored 7 goals in 16 matches with 11 assists. He also received 3 Yellow Cards during this time.","354d1a5f":"Sofiane Diop of France playing for AS Monaco Club has played the most number of mathches (24 matches). He is 21 years old and has a market evaluation of 18M.","0f0a5845":"# Imports","b592e221":"The above plot shows the top 10 countries in terms of players country. The Highest number of players are from England.","940e0f4a":"Most of the players are in their late 20's and early 30's.","77458b37":"7 Players have not played any matches and all of them are below 30 years of age.","d15eb462":"# EDA and Analysis","8549ff85":"32 years old Thomas M\u00fcller of Germany has scored the most (12) assists for his club Bayern Munich.","12d52107":"# Attacker Classification Model\nNOTE: The below method that i used tests around 20 different classification algorithms in sklearn. Pls dont use the below method for large datasets.","2c178fa1":"Very few player have high market value and most of the players have market value between 20M to 40M.","e5f0d357":"## Preprocessing and Feature Engineering","6e9d068d":"Most number of goals (23 goals) are scored by Robert Lewandowski of Poland. He is 33 years old and playing for Bayern Munich Club. He scored 23 goals in 17 matches."}}