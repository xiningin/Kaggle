{"cell_type":{"3c33bf69":"code","8d1f4351":"code","9ce6a6e8":"code","e44c567f":"code","7cb9b860":"code","139ae6e1":"markdown"},"source":{"3c33bf69":"from sklearn import datasets\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA\nimport matplotlib.pyplot as plt\nimport numpy as np\niris = datasets.load_iris();\nsetosa_versicolor = iris.data[0:100,0:3]\nsetosa_versicolor_targets = iris.target[0:100]\nversicolor_virginica = iris.data[50:150,0:3]\nversicolor_virginica_targets = iris.target[50:150]\nsetosa_virginica = np.concatenate((iris.data[0:50,0:3], iris.data[100:150,0:3]), axis=0)\nsetosa_virginica_targets = np.concatenate((iris.target[0:50], iris.target[100:150]), axis=0)\ntarget_names = iris.target_names\nt1 = [\"setosa\",\"versicolor\"]\nt2 = [\"versicolor\",\"virginica\"]\nt3 = [\"setosa\",\"virginica\"]\nlda = LDA(n_components=1)","8d1f4351":"def LDA_result(samples,target):\n    return lda.fit(samples,target).transform(samples)\n\ndef threshold(LDA_result, targets,index_1, index_2):\n    mean_class_1 = LDA_result[targets==index_1,0]\n    mean_class_2 = LDA_result[targets==index_2,0]\n    result_mean = (np.mean(mean_class_1) + np.mean(mean_class_1))\/2\n    return result_mean.round(decimals=15)\n\ndef scatterPlot(LDA_result,targets,index_1, index_2,text):\n    for color, i, target_name in zip(['red', 'blue'], [index_1, index_2], target_names):\n        plt.scatter(LDA_result[targets==i,0], np.zeros([50]), color=color,\n        label=target_name)\n        plt.title(\"Scatter plot for \" + text + \" classification\")\n    plt.show()","9ce6a6e8":"lda_result = LDA_result(setosa_versicolor,setosa_versicolor_targets)\nscatterPlot(lda_result,setosa_versicolor_targets,0,1,\"setosa and versicolor\")\nt = threshold(LDA_result(setosa_versicolor,setosa_versicolor_targets),setosa_versicolor_targets,0,1)\nprint(\"Threshold for setosa and versicolor classification: \" + str(t))","e44c567f":"lda_result = LDA_result(versicolor_virginica,versicolor_virginica_targets)\nscatterPlot(lda_result,versicolor_virginica_targets,1,2,\"versicolor and virginica\")\nt = threshold(LDA_result(versicolor_virginica,versicolor_virginica_targets),versicolor_virginica_targets,1,2)\nprint(\"Threshold for versicolor and virginica classification: \" + str(t))","7cb9b860":"lda_result = LDA_result(setosa_virginica,setosa_virginica_targets)\nscatterPlot(lda_result,setosa_virginica_targets,0,2,\"setosa and virginica\")\nt = threshold(LDA_result(setosa_virginica,setosa_virginica_targets),setosa_virginica_targets,0,2)\nprint(\"Threshold for setosa and virginica classification: \" + str(t))","139ae6e1":"Two-class **Fisher linear discriminant algorithm (LDA)** on the Iris dataset (http:\/\/en.wikipedia.org\/wiki\/Iris_flower_data_set) and the scatter plot in one dimension of the three two-way LDA data projections possible from the three categories (setosa, versicolor, virginica). Computed and reported the best possible thresholds for linear separation (in each of the three cases)."}}