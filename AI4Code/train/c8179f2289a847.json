{"cell_type":{"0d9d91d0":"code","bdfe3429":"code","9159a80e":"code","47a6d1b0":"code","9d50067b":"code","51b21eee":"code","4751b478":"code","e9d97bdf":"code","3acee23f":"code","729a8c8c":"code","57eb5719":"code","3ec15e33":"code","8bbdd6fb":"code","38baa6ea":"code","819ce127":"code","3d92f61d":"code","41d6a258":"code","a1a82399":"markdown","83c50505":"markdown","8c7b987b":"markdown","f5a689ea":"markdown","4473d6c6":"markdown","f5db69e3":"markdown"},"source":{"0d9d91d0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bdfe3429":"data=pd.read_csv(\"\/kaggle\/input\/pima-indians-diabetes-database\/diabetes.csv\")","9159a80e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ndata.head()","47a6d1b0":"#Finding general information about the dataset\nprint(\"Data shape=\"+ str(data.shape))\ndata.info()","9d50067b":"#Look for any discrepancies\nprint(\"Null Values for this dataset\")\nprint(data.isnull().sum())\n# There's no data is missingprint(\"Number of duplicated data= \"+ str(data.duplicated().sum()))","51b21eee":"# There's no data is missing\n#Description\ndata.describe()","4751b478":"\nremove=[\"Glucose\",\"BMI\",\"SkinThickness\",\"BloodPressure\",\"Age\",\"Insulin\"]\n\n#creating a duplicate of data\nnew_data=data\nfor i in remove:\n  new_data=new_data[new_data[i]!=0]","e9d97bdf":"#Description after data cleaning\nprint(\"No. of rows removed = \"+ str(len(data)-len(new_data)))","3acee23f":"#It is not advised to remove such large amount of data as it might result in misleading insights\n#Therefore, it is suggested to replace 0 with NaN\nmodifs= ['Glucose','BloodPressure','SkinThickness','Insulin','BMI','Age'] #variables to be modified\ndata[modifs] = data[modifs].replace(0,np.NaN)\n#Looking at the null values now","729a8c8c":"missing_values = (data.isnull().sum() \/ len(data) * 100).round(2)\nprint(missing_values)","57eb5719":"data.hist(bins=25, figsize=(20, 15));","3ec15e33":"for column in data:\n    plt.figure()\n    data.boxplot([column])","8bbdd6fb":"#Bivariate Analysis \n#Visualization\nsns.pairplot(data=data)\n","38baa6ea":"corr=data.corr(method=\"spearman\")\ncorr\n","819ce127":"#Some of the pairs who show some relationship are\nfactors=[\"Age\",\"Pregnancies\",\"BMI\",\"SkinThickness\",\"Glucose\",\"Insulin\",\"Outcome\"]\n\n# Creating a matrix and plotting the correlation matrix\ndata[factors].corr()","3d92f61d":"# Plotting the correlation matrix\nsns.heatmap(data[factors].corr(), annot=True, cmap = 'Reds')\nplt.show()","41d6a258":"sns.pairplot(data=data, vars=factors, hue=\"Outcome\")","a1a82399":"**Looking at the description summary - Some of the data are not satisfactory such as presence of value 0 for many variables such as glucose, BP etc.<br\/>\nHandling 0 values in the data**","83c50505":"# NOTE: Both of these coefficients cannot capture any other kind of non-linear relationships.\n\n**Thus, if a scatterplot indicates a relationship that cannot be expressed by a linear or monotonic function, \nthen both of these coefficients must not be used to determine the strength of the relationship between the variables.\nCorrelation <br\/>\nNow, if we feel that a scatterplot is visually indicating a \u201cmight be monotonic, might be linear\u201d relationship, \nour best bet would be to apply Spearman and not Pearson**","8c7b987b":"**Some of the observations from the data:** <br\/>\n\n\n1.   Glucose and Blood Pressure are normally distributed\n2.   Skin Thickness,DiabetesPedigreeFunction and BMI is positvely skewed\n\n","f5a689ea":"**Observations from boxplot**\n\n\n1.  The max Pregnacies is 17 which is quite an outlier.\n2.  Blood Pressure, SkinThickness and Age has very few outliers\n3. Insulin and DiabetesPedigreeFunction has large number of outliers","4473d6c6":"**Loading the required libraries**","f5db69e3":"# About the Pima Indians Diabetes Database \nThis dataset is originally from the National Institute of Diabetes and Digestive and Kidney Diseases. The datasets consists of several medical predictor variables and one target variable, Outcome. Predictor variables includes the number of pregnancies the patient has had, their BMI, insulin level, age, and so on.\n\n**Variables in the dataset**\n**Pregnancies**- Number of times pregnant <br\/>\n**Glucose-** Plasma glucose concentration over 2 hours in an oral glucose tolerance test <br\/>\n**BloodPressure**- Diastolic blood pressure (mm Hg)<br\/>\n**SkinThickness**- Triceps skin fold thickness (mm)<br\/>\n**Insulin**- 2-Hour serum insulin (mu U\/ml)<br\/>\n**BMI**- Body mass index (weight in kg\/(height in m)^2)<br\/>\n**DiabetesPedigreeFunction**- Diabetes pedigree function is a function which scores likelihood of diabetes based on family history <br\/>\n**Age**- Age of the individuals, ll patients here are females at least 21 years old of Pima Indian heritage.<br\/>\n**Outcome**- Class variable (0 if non-diabetic, 1 if diabetic)"}}