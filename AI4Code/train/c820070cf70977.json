{"cell_type":{"0bfe65bf":"code","4cda372c":"code","9eac483d":"code","67846dc3":"code","ffb9e0ee":"code","ddbaa4e1":"markdown"},"source":{"0bfe65bf":"import pandas as pd\nfrom sklearn.linear_model import LinearRegression\n\nCNT_MODELS = 30 # 30 linear models","4cda372c":"%%time\ndata = pd.read_pickle('..\/input\/ump-train-picklefile\/train.pkl')\n\ny = data.target.copy()\nX = data.drop(columns=['time_id', 'target'])\nX.row_id = pd.to_numeric(X.row_id.str.split('_').map(lambda x: x[1]))","9eac483d":"models = []\n\nfor i in range(0, CNT_MODELS):\n    X_s = X.loc[i::CNT_MODELS]\n    y_s = y.loc[X_s.index]\n    models.append(LinearRegression().fit(X_s, y_s))","67846dc3":"class LINEAR_models():\n    \n    def __init__(self, models):\n        self.models = models\n        \n    def predict(self, X):\n        summ = self.models[0].predict(X)\n        for model in self.models[1:]:\n            summ += model.predict(X)\n            \n        return summ \/ len(self.models)\n    \nmodel = LINEAR_models(models)","ffb9e0ee":"import ubiquant\nenv = ubiquant.make_env()\niter_test = env.iter_test()\n\nfor (test_df, sample_prediction_df) in iter_test:\n    test_df.row_id = pd.to_numeric(test_df.row_id.str.split('_').map(lambda x: x[1]))\n    sample_prediction_df['target'] = model.predict(test_df)\n    env.predict(sample_prediction_df)\n    ","ddbaa4e1":"\u041e\u0431\u0443\u0447\u0438\u043c `CNT_MODELS` \u043b\u0438\u043d\u0435\u0439\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 (\u0443 \u043c\u0435\u043d\u044f 30 \u043c\u043e\u0434\u0435\u043b\u0435\u0439).\n\n\u0418 \u043f\u0440\u0438 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0438 \u043d\u0430\u0439\u0434\u0435\u043c \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043f\u0440\u0435\u0434\u0441\u043a\u0437\u0430\u0430\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439."}}