{"cell_type":{"b5f80ec2":"code","1b9f16cc":"code","3fc5d2c7":"code","943cb2b4":"code","a3e1d747":"code","b1e40813":"code","48beb589":"code","48a41e37":"code","38c27364":"code","6d0dc6de":"code","2cdb8a11":"code","7e67fc7a":"code","31262c11":"markdown","d1651616":"markdown","8b47d072":"markdown","fb816d37":"markdown","977bbb84":"markdown","eedad3d6":"markdown","5dd3831a":"markdown","339e9b18":"markdown","2666d150":"markdown"},"source":{"b5f80ec2":"# Manipula\u00e7\u00e3o de Dataframes\nimport pandas as pd \n\n# Fun\u00e7\u00f5es de algebra linear\nimport numpy as np\n\n# Biblioteca para la\u00e7os\nimport itertools\n\n# Visuliza\u00e7\u00e3o de Gr\u00e1ficos\nfrom matplotlib.ticker import MaxNLocator\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","1b9f16cc":"# Carrega arquivo 'csv' em um dataframe Pandas\ndf = pd.read_csv('\/kaggle\/input\/la-liga-dataset\/LaLiga_dataset.csv')","3fc5d2c7":"# Sorteando 5 amostras aleat\u00f3rias para conhecimento do formato do dataset\ndf.sample(5)","943cb2b4":"# Informa\u00e7\u00f5es sobre os atributos (quantidade de valores, tipo do atributo, etc)\ndf.info()","a3e1d747":"# Visulizando algumas estatisticas b\u00e1sicas do conjunto de dados\ndf.describe().round(2)","b1e40813":"# Cria uma nova figura\nfig, ax1 = plt.subplots(1, 1, figsize=(16, 10))\n\n# Primeiro Plot: Quantidade de Clubes por Temporada\nsns.lineplot(x=df.season.unique(), y=df.groupby(by='season').size().values, color='blue', linewidth=3, label='Qtde de Clubes', ax=ax1)\nax1.set_ylabel('Quantidade de Clubes', fontsize=20) # Label do Eixo Y (esq)\nax1.set_xlabel('Temporada', fontsize=20) # Label do Eixo X\nax1.set_xticklabels(labels=ax1.get_xticklabels(), rotation=90); # Comando para rotactionar os ticks do eixo X\nax1.legend(loc=1, bbox_to_anchor=(1, 1), fontsize=20) # Legenda do primeiro gr\u00e1fico\nax1.grid(alpha=0.3) # Habilita grid com transpar\u00eancia\n\n# Segundo Plot: Quantidade de Jogos por Temporada\nax2 = ax1.twinx() # Cria um segundo eixo espelhado\nsns.lineplot(x='season', y='total_matches', color='red', linewidth=3, data=df, label='Qtde de Jogos', ax=ax2)\nax2.set_ylabel('Quantidade de Jogos', fontsize=20) # Label do Eixo Y (dir)\nax2.legend(loc=1, bbox_to_anchor=(1, 0.92), fontsize=20) # Legenda do segundo gr\u00e1fico\n\nfig.tight_layout() # Comando para ajustar o gr\u00e1fico automaticamente \u00e0 \u00e1rea dispon\u00edvel","48beb589":"clubes_campeoes = df.loc[df.groupby('season')['points'].idxmax()].club.value_counts().index\nqtde_titulos = df.loc[df.groupby('season')['points'].idxmax()].club.value_counts().values","48a41e37":"# Cria uma nova figura\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\n# Grafico em Barras Quantidade de Titulos vs Clube\nsns.barplot(x=qtde_titulos, y=clubes_campeoes, ax=ax)\nax.set_ylabel('Clube', fontsize=18) # Label Eixo Y\nax.set_xlabel('Quantidade de T\u00edtulos', fontsize=18) # Label Eixo X\nax.xaxis.set_major_locator(MaxNLocator(nbins=25, integer=True)) # For\u00e7ando exibi\u00e7\u00e3o de inteiros no Eixo X \nax.tick_params(axis='both', which='major', labelsize=16) # Aumentando o tamanho dos ticks nos eixos\nax.grid(True, alpha=0.2) # Habilita grid\n\nfig.tight_layout() # Comando para ajustar o gr\u00e1fico automaticamente \u00e0 \u00e1rea dispon\u00edvel","38c27364":"# Cria uma nova figura\nfig, ax = plt.subplots(1, 1, figsize=(12, 12))\n\n# Grafico Pizza: Clubes Campe\u00f5es e Propor\u00e7\u00f5es\nwedges, texts, autotexts = ax.pie(qtde_titulos, autopct='%.0f%%', wedgeprops=dict(width=0.5), textprops={'fontsize': 18}, startangle=-30)\n\n# Configura\u00e7\u00f5es das Anota\u00e7\u00f5es\nbbox_props = dict(boxstyle=\"round, pad=0.4\", fc=\"white\", ec=\"black\", lw=1)\nkw = dict(arrowprops=dict(arrowstyle=\"-\"), bbox=bbox_props, zorder=0, va=\"center\")\n\n# Insere as anota\u00e7\u00f5es automaticamente no gr\u00e1fico\nfor i, p in enumerate(wedges):\n    ang = (p.theta2 - p.theta1)\/2. + p.theta1\n    connectionstyle = \"angle,angleA=0,angleB={}\".format(ang)\n    kw[\"arrowprops\"].update({\"connectionstyle\": connectionstyle})\n    y = np.sin(np.deg2rad(ang))\n    x = np.cos(np.deg2rad(ang))\n    ax.annotate(clubes_campeoes[i], xy=(x, y), xytext=(1.35*np.sign(x), 1.4*y), fontsize=14, **kw)\n\n# Titulo do gr\u00e1fico\nax.set_title(\"Clubes Campe\u00f5es La Liga\", fontsize=20)\n\nfig.tight_layout() # Comando para ajustar o gr\u00e1fico automaticamente \u00e0 \u00e1rea dispon\u00edvel","6d0dc6de":"# Cria um novo dataset contendo o menor, o maior e a media de gols marcados por temporada\n#gols_marcados = df.groupby('season')['goals_scored'].agg({'Low Value':'min','High Value':'max','Mean':'mean'})\ngols_marcados = df.groupby('season')['goals_scored'].agg(['min', 'max','mean'])\ngols_marcados.reset_index(inplace=True)\n\n# Cria um novo dataset contendo o menor, o maior e a media de gols sofridos por temporada\n#gols_sofridos = df.groupby('season')['goals_conceded'].agg({'Low Value':'min','High Value':'max','Mean':'mean'})\ngols_sofridos = df.groupby('season')['goals_conceded'].agg(['min', 'max','mean'])\ngols_sofridos.reset_index(inplace=True)\n\n# Cria uma nova figura\nfig, ax = plt.subplots(1, 2, figsize=(20, 8), sharey=True)\n\n# Primeiro Plot: Gols Marcados\nsns.lineplot(x='season', y='mean', c='red', data=gols_marcados, ax=ax[0], label='Media')\nax[0].fill_between(x='season',y1='min', y2='max', data=gols_marcados)\nax[0].set_title('An\u00e1lise de gols marcados por temporada', fontsize=18)\nax[0].set_ylabel('Gols', fontsize=20) # Label do Eixo Y (esq)\nax[0].set_xlabel('Temporada', fontsize=20) # Label do Eixo X\nax[0].set_xticklabels(labels=ax1.get_xticklabels(), rotation=90); # Comando para rotactionar os ticks do eixo X\nax[0].tick_params(axis='y', which='major', labelsize=16) # Aumentando o tamanho dos ticks no eixo Y\nax[0].tick_params(axis='y', which='major', labelsize=14) # Aumentando o tamanho dos ticks no eixo X\nax[0].legend(loc=0, fontsize=14) # Legenda\nax[0].grid(alpha=0.3) # Habilita grid com transpar\u00eancia\n\n# Segundo Plot: Gols Sofridos\nsns.lineplot(x='season', y='mean', c='red', data=gols_sofridos, ax=ax[1], label='Media')\nax[1].fill_between(x='season',y1='min', y2='max', data=gols_sofridos)\nax[1].set_title('An\u00e1lise de gols sofridos por temporada', fontsize=18)\nax[1].set_ylabel('Gols', fontsize=20) # Label do Eixo Y (esq)\nax[1].set_xlabel('Temporada', fontsize=20) # Label do Eixo X\nax[1].set_xticklabels(labels=ax1.get_xticklabels(), rotation=90); # Comando para rotactionar os ticks do eixo X\nax[1].tick_params(axis='y', which='major', labelsize=16) # Aumentando o tamanho dos ticks no eixo Y\nax[1].tick_params(axis='y', which='major', labelsize=14) # Aumentando o tamanho dos ticks no eixo X\nax[1].legend(loc=0, fontsize=14) # Legenda\nax[1].grid(alpha=0.3) # Habilita grid com transpar\u00eancia\n\nfig.tight_layout() # Comando para ajustar o gr\u00e1fico automaticamente \u00e0 \u00e1rea dispon\u00edvel","2cdb8a11":"gols_marcados = df.loc[df.groupby('season')['points'].idxmax()]['goals_scored']\ngols_sofridos = df.loc[df.groupby('season')['points'].idxmax()]['goals_conceded']\nsaldo_gols = gols_marcados - gols_sofridos\ntemporadas = df.season.unique()\n\n# Cria uma nova figura\nfig, ax = plt.subplots(1, 1, figsize=(16, 10))\n\n# Plot de linhas\nsns.lineplot(x=temporadas, y=gols_marcados, color='blue', label='Marcados', ax=ax)\nsns.lineplot(x=temporadas, y=gols_sofridos, color='red', label='Sofridos', ax=ax)\nsns.lineplot(x=temporadas, y=saldo_gols, color='black', label='Saldo', ax=ax)\nax.set_title('An\u00e1lise dos gols do clube campe\u00e3o em cada temporada', fontsize=16)\nax.set_ylabel('Gols', fontsize=20) # Label do Eixo Y (esq)\nax.set_xlabel('Temporada', fontsize=20) # Label do Eixo X\nax.set_xticklabels(labels=ax1.get_xticklabels(), rotation=90); # Comando para rotactionar os ticks do eixo X\nax.tick_params(axis='y', which='major', labelsize=16) # Aumentando o tamanho dos ticks no eixo Y\nax.tick_params(axis='y', which='major', labelsize=14) # Aumentando o tamanho dos ticks no eixo X\nax.legend(loc=0, fontsize=20) # Legenda\nax.grid(alpha=0.3) # Habilita grid com transpar\u00eancia\n\nfig.tight_layout() # Comando para ajustar o gr\u00e1fico automaticamente \u00e0 \u00e1rea dispon\u00edvel","7e67fc7a":"cols = ['matches_won', 'matches_lost', 'matches_drawn', 'goals_scored', 'goals_conceded', 'points']\nlabels = ['Vitorias', 'Derrotas', 'Empates', 'Gols Marcados', 'Gols Sofridos', 'Pontos']\ntimes = ['Barcelona', 'Real Madrid']\n\n# Criando um novo dataframe contedo informa\u00e7\u00f5es apenas de Barcelona e Real Madrid\ndf2 = df.groupby('club')[cols].agg(['sum'])\ndf2.reset_index(inplace=True)\ndf2 = df2[df2['club'].isin(times)]\n\n# Cria uma nova figura, 2x3 graficos\nfig, ax = plt.subplots(2, 3, figsize=(20, 10))\naxs = ax.flatten() # Matriz para vetor\n\n# Varre todos os atributos presentes em 'cols'\nfor i,j in itertools.zip_longest(cols, range(len(cols))):\n    atributo = df2[i].values.ravel() \n    sns.barplot(x=atributo, y=times, ax=axs[j], label=labels[j], palette=['darkred','royalblue'], linewidth=2, edgecolor=\"k\"*2)\n    \n    axs[j].set_title(labels[j], fontsize=18) # Titulo\n    axs[j].tick_params(axis='y', which='major', labelsize=16) # Aumentando os ticks\n    \n    # Escreve o valor de cada caracteristica dentro de cada barra\n    for k,l in enumerate(atributo):\n        axs[j].text(.7, k, l, fontsize=20)\n\n# Comando para ajustar o gr\u00e1fico automaticamente \u00e0 \u00e1rea dispon\u00edvel\nfig.tight_layout() ","31262c11":"### Visulizando algumas informa\u00e7\u00f5es sobre a base","d1651616":"### Compara\u00e7\u00e3o Barcelona x Real Madrid\n\nNo gr\u00e1fico abaixo, temos uma compara\u00e7\u00e3o de algumas informa\u00e7\u00f5es entre Real Madrid e Barcelona, ao longo do per\u00edodo informado.\n\nPodemos dizer que esses clubes possuem praticamente todas as caracter\u00edsticas observadas equivalentes ou muito pr\u00f3ximas, o que corrobora com o amplo dom\u00ednio dessas duas equipes em rela\u00e7\u00e3o as demais.\n\n","8b47d072":"#### Bibliotecas","fb816d37":"### An\u00e1lise de gols marcados em cada temporada\n\nAnalisando os gols marcados e sofridos em cada temporada, observa-se que ambos possuem comportamentos m\u00e9dios parecidos.\n\nEntretanto, quando olhamos para os clubes que mais marcam gols, pode-se concluir que, da temporada de 2008-09 para c\u00e1, houve uma evolu\u00e7\u00e3o no quesito gols marcados.\n\nEsse per\u00edodo coincide com o auge da hegemonia dos dois principais clubes espanhois (Real Madrid e Barcelona).\n\nNesse intervalo de tempo, essas duas equipes dividiram a conquista dos t\u00edtulos nacionais, al\u00e9m de terem eleito o melhor jogador do mundo (segundo a FIFA), por 5 vezes cada.\n","977bbb84":"### Carregando a base de dados","eedad3d6":"# European Soccer Dataset: La Liga\n\n## Descri\u00e7\u00e3o\n\nA base **European Soccer Dataset: La Liga** cont\u00e9m informa\u00e7\u00f5es de partidas do campeonato espanhol de futebol, abrangendo todo o per\u00edodo das temporadas de 1970-71 \u00e0 2016-17, totalizando 47 campeonatos.\n\nDentre as informa\u00e7\u00f5es coletadas, est\u00e3o quantidae de pontos, vit\u00f3rias, derrotas, gols, etc.\n\n## Objetivos\n\nO objetivo desse relat\u00f3rio \u00e9 analisar e extrair as principais caracter\u00edsticas desse conjunto de dados, como clubes mais campe\u00f5es, an\u00e1lise de vit\u00f3rias\/derrotas, gols marcados\/sofridos, dentre outras.\n\nEssa an\u00e1lise ser\u00e1 realizada em Python, utilzando as bibliotecas para an\u00e1lise de dados, como Pandas, Numpy, Matplotlib e Seaborn.\n\n","5dd3831a":"### An\u00e1lise de gols marcados e sofridos pelo campe\u00e3o em cada temporada\n\nAnalisando somente o clube campe\u00e3o, observa-se que na \u00faltima d\u00e9cada, em seis ocasi\u00f5es, a equipe vencedora ultrapassou a marca dos 100 gols marcados em uma temporada.\n\n","339e9b18":"### Analisando a quantidade de clubes e de jogos por temporada \n\nPelo gr\u00e1fico abaixo, podemos observar que historicamente h\u00e1 uma rela\u00e7\u00e3o direta na quantidade de times e de partidas na La Liga.\n\nEntretando, na temporada de [1986-1987](http:\/\/https:\/\/en.wikipedia.org\/wiki\/1986%E2%80%9387_La_Liga) houve uma discrep\u00e2ncia nesse comportamento, pois um novo regulamento foi testado, onde inseriram quadrangular posterior \u00e0 fase de pontos corridos.\n\nNas demais temporadas, o regulamento sempre foi o de pontos corridos, onde o camp\u1ebdao \u00e9 o clube que soma mais pontos ao longo do campeonato.\n\nObserva-se tamb\u00e9m que, desde a temporada 1997-98, a quantidade de clubes manteve-se em 20 participantes.\n\nNa temporada de 1979-80, uma partida entre [M\u00e1laga e o Almeria](http:\/\/https:\/\/en.wikipedia.org\/wiki\/1979%E2%80%9380_La_Liga#cite_ref-table_note_REC0.54090029585217_2-0) n\u00e3o foi realizada, pois o primeiro clube n\u00e3o compareceu ao local do jogo.","2666d150":" ### Clubes Campe\u00f5es\n \n A an\u00e1lise dos clubes que j\u00e1 conquistaram a La Liga revelou que h\u00e1 uma enorme disparidade no campeonato, com Real Madrid e Barcelona conquistando mais de 80% dos t\u00edtulos no per\u00edodo."}}