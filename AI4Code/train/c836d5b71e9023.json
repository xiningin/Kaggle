{"cell_type":{"c396e705":"code","e0089d3d":"code","73fc2afd":"code","975a84c7":"code","944518c3":"code","ebcd8184":"code","48502801":"code","814f54b0":"code","62f91cde":"code","b047cd03":"code","e3b3f76c":"code","bc257b32":"markdown","3244ba97":"markdown","c7d7d3cb":"markdown","c3ba4db4":"markdown","97c88ecf":"markdown","6f1b15fb":"markdown","a6d63eb1":"markdown","cd95991f":"markdown","3dd25025":"markdown","49b32b3a":"markdown","1ff0b6ef":"markdown"},"source":{"c396e705":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e0089d3d":"# Import libraries \nimport pandas as pd \nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics","73fc2afd":"#Read customer csv file \ncustomer_file=\"..\/input\/ecommerce-customers\/Ecommerce Customers.csv\"\ncustomer = pd.read_csv(customer_file)\n#show the head of customer DataFrame\ncustomer.head()","975a84c7":"#show statistcs information\ncustomer.describe()","944518c3":"#visualize data\nsns.pairplot(customer)","ebcd8184":"sns.lmplot(x=\"Yearly Amount Spent\", y=\"Length of Membership\", data=customer)","48502801":"features= [\"Avg. Session Length\", \"Time on App\" ,\"Time on Website\", \"Length of Membership\"]\nX=customer[features] #Features\ny=customer[\"Yearly Amount Spent\"] #Outcome\n\n# split the data (20% for testing 80%for training)\nX_train, X_test, y_train, y_test= train_test_split(X, y, test_size=0.2, random_state=1)\n#create an instance of Linear regession model\nlmodel= LinearRegression()\n#fit the model with the training data\nlmodel.fit(X_train, y_train)\n#testing the model by making predicitions  \nprediction = lmodel.predict(X_test)","814f54b0":"#visualize real data and predictif ones \nplt.scatter(y_test, prediction)\nplt.xlabel(\"Real\")\nplt.ylabel(\"prediction\")\nplt.title(\"Yearly Amount Spent\")","62f91cde":"MAE= metrics.mean_absolute_error(y_test,prediction) #Mean absolute error \nMSE= metrics.mean_squared_error(y_test,prediction) #Mean squared error \nRMSE = np.sqrt(MSE) # Root Mean squared error ","b047cd03":"print(\"Mean absolute error: \",MAE )","e3b3f76c":"coef= lmodel.coef_\ncoeff_table = pd.DataFrame(coef, features, columns=['Coefficient'])\ncoeff_table","bc257b32":"Now we are going to create our model and predict \"The yearly amount Spent\" based on the numerical features. We will try to figure out which feature is more important to invest in  ","3244ba97":"1. A 1 unit increase in **Avg. Session Length** is associated with an increase of **25.98** total dollars yearly amount spent\n1. A 1 unit increase in **Time on App** is associated with an increase of **38.59** total dollars yearly amount spent\n1. A 1 unit increase in **Time on Website** is associated with an increase of **0.19** total dollars yearly amount spent\n1. A 1 unit increase in **Length of Membership** is associated with an increase of **61.27** total dollars yearly amount spent","c7d7d3cb":"Let's get started!","c3ba4db4":"# Linear model regression applied to E Commerce topics ","97c88ecf":"One we explore these types of relationships across the numerical features of the dataset we can see clearly linear relation between Lengh of Membership and Yearly Amount Spent. Let's see this relation in more details.","6f1b15fb":"# Explore the results","a6d63eb1":"# Linear model regression  ","cd95991f":"The website app does not bring benefit to the total dollars annual amount spent. The company should focus in this area to bring to catch up to the performance of the mobile ap or it should focus on the mobile app because it's already working well. Which means a progress in the mobile app will be associated with the highest increase in the total dollars yearly amount spent.I choose the website application. What do you choose ?\n","3dd25025":"# Interpretation","49b32b3a":"# Evaluating the Model (Measure error) ","1ff0b6ef":"We are going to analyse some customer data.This Notebook allows you to practice machine learning basics and some data visualisation :\n1. Upload and Read a csv file.\n1. Explore data by visualisation \n1. Use a LinearRegression model\n1. Predict\n1. Measure error "}}