{"cell_type":{"4f8bfc6b":"code","3d0919f7":"code","e2b6af3c":"code","b377fc48":"code","98a222ff":"code","4decb150":"code","711cf4e1":"code","aa83c585":"code","934f9079":"code","51c5e650":"code","33917dd8":"code","46e4cb23":"code","9e0bd643":"code","7664fe98":"code","89d5a368":"code","9a6ec05d":"code","7c75bae7":"markdown","9855d21b":"markdown","25c04b67":"markdown","080bc84a":"markdown","31eaef8f":"markdown","bef94322":"markdown","2198f939":"markdown"},"source":{"4f8bfc6b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3d0919f7":"data = pd.read_csv(\"\/kaggle\/input\/youtube-new\/USvideos.csv\")\n","e2b6af3c":"data.head()","b377fc48":"new_data = data.drop([\n                    \"thumbnail_link\",\"video_id\",\"trending_date\",\"publish_time\",\n                    \"comments_disabled\",\"video_error_or_removed\",\"ratings_disabled\"],\n                     axis = 1)\n\nnew_data.head()","98a222ff":"# Indexes and Columns in our new_data \n\nprint(new_data.index,\"---\",new_data.columns)","4decb150":"high = new_data[\"views\"].max()  # High of views Videos\nlower = new_data[\"views\"].min() # Minimal value of views Videos \n\nhighest = new_data[new_data[\"views\"] == high ]\nlowest = new_data[new_data[\"views\"] == lower ]\n\nprint(\"\"\"Name of video of highest views: \"{}\" and views is : {}\"\"\".format(highest[\"title\"].iloc[0],highest[\"views\"].iloc[0]))\nprint(\"\"\"Name of video of lowest views: \"{}\" and views is : {}\"\"\".format(lowest[\"title\"].iloc[0],lowest[\"views\"].iloc[0]))","711cf4e1":"# First named the index of new_data\nnew_data.index.names = [\"indexes\"]\nnew_data.plot( kind=\"scatter\",x=\"category_id\",y=\"likes\",figsize=(10,10))\nplt.xlabel(\"Video categories\")\nplt.ylabel(\"Values of likes\")\nplt.title(\"Likes of category\")\nplt.show()","aa83c585":"new_data.plot( kind=\"scatter\",x=\"category_id\",y=\"views\",color=\"red\",figsize=(10,10))\nplt.xlabel(\"Video categories\")\nplt.ylabel(\"Values of views\")\nplt.title(\"Views with category\")\nplt.show()","934f9079":"new_data[[\"category_id\",\"comment_count\"]].groupby(\"category_id\").sum() # Group by category id\n","51c5e650":"new_data[[\"category_id\",\"comment_count\"]].groupby(\"category_id\").mean() # mean of comment count with category id","33917dd8":"videos_no = new_data[\"category_id\"].value_counts() # Number of videos ( every category have one video)\n\nvideos_no.sort_index()","46e4cb23":"def number_of_tags(data):\n    \n    tags = data.split(\"|\") # The Tags for each videos is with \"|\" divided\n    \n    return len(tags)  # Number of Tags\n\nnew_data[\"tags_number\"] = new_data[\"tags\"].apply(number_of_tags)\n\nnew_data.head()","9e0bd643":"def ratio_likes_dislikes(likes,dislikes):\n    \n    likes_values = np.array([])    # Make ampty array of the likes values\n    dislikes_values = np.array([]) # Make ampty array of the dislikes values\n    \n    for values in likes:\n        \n        likes_values = np.append(likes_values,values)   # Update the empty likes_values with the values of likes with numpy append() \n        \n    for values in dislikes:\n        \n        dislikes_values = np.append(dislikes_values,values) # Update the empty dislikes_values  with the values of dislikes with numpy.append()\n    \n          \n    ratio_likes_dislikes = np.array([]) # Calculate rate of likes and dislikes\n    \n    ratio_likes_dislikes = np.append(ratio_likes_dislikes,likes_values \/ (likes_values + dislikes_values))\n    \n    ratio_likes_dislikes[np.isnan(ratio_likes_dislikes)] = 0\n    \n    return ratio_likes_dislikes\n\nlikes = new_data[\"likes\"]\ndislikes = new_data[\"dislikes\"]\n\nnew_data[\"likes_dislikes\"] = ratio_likes_dislikes(likes,dislikes)\n\nnew_data.head()","7664fe98":"# Now sort values by likes_dislikes from highest to lowest \n\nnew_data.sort_values(by = \"likes_dislikes\",ascending = False,inplace = True)\n\nnew_data.head(10)","89d5a368":"#Plotting graph of category id with likes_dislikes \n\nnew_data.plot( kind=\"scatter\",x=\"category_id\",y=\"likes_dislikes\",figsize=(10,10))\nplt.xlabel(\"Video categories\")\nplt.ylabel(\"Values of likes_dislikes\")\nplt.title(\"Likes_dislikes with category\")\nplt.show()","9a6ec05d":"new_data[\"likes_dislikes\"].plot(kind=\"hist\",color=\"g\",figsize=(10,10))\nplt.xlabel(\"likes_dislikes\")\nplt.show()","7c75bae7":"Plotting the likes values with the category id and views of videos.","9855d21b":"Grouping by category id and mean of the comment_counts and number of videos in every category.","25c04b67":"\nLet us calculate the number of tags used in each video and add the resulting values as a new column.","080bc84a":"Let us update our data set by deleting the following information.\n(thumbnail_link,video_id,trending_date,publish_time,comments_disabled,ratings_disabled,video_error_or_removed)\n","31eaef8f":"Titles of the videos with the highest and the lowest views .","bef94322":"Sort Videos By Rating From Highest To Lowest with rate of likes and add it as new column.","2198f939":"- Let's look at the first 5 cases of data"}}