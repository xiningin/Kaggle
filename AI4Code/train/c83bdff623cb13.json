{"cell_type":{"8c40b35e":"code","36bd6a03":"code","af7a29f8":"code","111a43a9":"code","a01bd851":"code","51dab7ff":"code","87cece39":"code","5a740fcc":"code","1bde6417":"code","1911b3cd":"code","1943ead8":"code","50c43ce2":"code","96c6858c":"code","2718f9bf":"code","909f8406":"code","2aa37dc0":"code","82cc6ab4":"code","3411960a":"code","c59362bb":"code","681e75b0":"code","2c1de241":"code","0481f984":"code","bb80cbc4":"code","84152d16":"code","31932078":"code","16586b1f":"markdown","7715a100":"markdown","9bb22fd9":"markdown","8ee6a254":"markdown","655a4317":"markdown","79275f3f":"markdown","626ef710":"markdown","1607b90b":"markdown","c78ff3b2":"markdown","56bc6300":"markdown","34027e37":"markdown","c36bfbad":"markdown","5a474e0a":"markdown","c3fe99e6":"markdown","a8c825b8":"markdown"},"source":{"8c40b35e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","36bd6a03":"import matplotlib as mpl\nimport matplotlib.pyplot as plt \n%matplotlib inline\nimport seaborn as sns\nimport pandas as pd\nimport statsmodels.api as sm\nsns.set_style(\"darkgrid\")\nmpl.rcParams['figure.figsize'] = (20,5)\ndf = pd.read_csv('\/kaggle\/input\/crm-racing-promo\/Racing_Business_Case_Data_Set.csv')","af7a29f8":"df['racedate']=pd.to_datetime(df['racedate'])\ndf.info()","111a43a9":"df","a01bd851":"# Revenue generated from each Customer Segment\ndf.groupby('segment')['Revenue'].sum().sort_values(ascending=False).plot(kind='bar')\nplt.ylabel('Revenue($)', size = 14)\nplt.xlabel('Player Tier', size = 14)\nplt.title('Revenue Generated from each Player Tier', size = 16)\nplt.show()","51dab7ff":"# Revenue % generated from each Customer Segment\ndf.groupby('segment')['Revenue'].sum().plot(kind='pie', autopct = '%1.1f%%', figsize=(5, 5))\nplt.ylabel('Revenue($)', size = 14)\nplt.title('Revenue % generated from each Player Tier', size = 16)\nplt.show()","87cece39":"# Customer Segment Bet Count\ndf['segment'].value_counts(ascending=False).plot(kind='bar')\nplt.title(\"Customer Segment Bet Count\", size = 16)\nplt.xlabel('Player Tier', size = 14)\nplt.ylabel('Bet Count', size = 14)\nplt.show()","5a740fcc":"# Revenue % generated from each Customer Segment for 1.1.2021\ncondition2 = df['racedate']=='2021-01-01'\ndf_date = df[condition2]\ndf_date.groupby('segment')['Revenue'].sum().plot(kind='pie', autopct = '%1.1f%%', figsize=(5, 5))\nplt.title(\"Revenue % generated from each Customer Segment for 1.1.2021\", size = 16)\nplt.ylabel('Revenue', size = 14)\nplt.show()","1bde6417":"df_date['segment'].value_counts(ascending=False).plot(kind='bar')\nplt.title(\"Customer Segment Bet Count for 1.1.2021\", size = 16)\nplt.xlabel('Player Tier', size = 14)\nplt.ylabel('Bet Count', size = 14)\nplt.show()","1911b3cd":"#Created 2 Dataframes filtering Target and Control Group\ncondition1 = df['Control\/Target']=='Target'\ndf_target = df[condition1]\ncondition3 = df['Control\/Target']=='Control'\ndf_control = df[condition3]\n#Created 2 Dataframes for Target and Control Groups on Racedate (1.1.2021)\nconditiondt = df_date['Control\/Target']=='Target'\ndf_target_date = df_date[conditiondt]\nconditiondc = df_date['Control\/Target']=='Control'\ndf_control_date = df_date[conditiondc]","1943ead8":"df2=df_target.groupby('racedate')['Revenue'].sum()\ndf2.describe()\n# mean = average revenue generated from Customers given a Bonus is $11,262 per day","50c43ce2":"df_target_date['Revenue'].sum()\n# $10,017 revenue generated from Customer's given a Bonus on 1.1.2021","96c6858c":"# ROI for Customer given a Bonus on 1.1.2021 = 1,214%\ndf_target_date['Revenue'].sum()\/df_target_date['Bonus'].sum()","2718f9bf":"# ROI for Customers given a Bonus daily = 1,473%\ndf_target['Revenue'].sum()\/df_target['Bonus'].sum()","909f8406":"daily_bettors = df.groupby(['racedate'])['accountid'].nunique()\ndaily_bettors = daily_bettors[1:(len(daily_bettors)-1)]\ndaily_bettors.plot()\nplt.title(\"Daily number of Bettors\")\nplt.xlabel('Date')\nplt.ylabel('Number of Bettors')\nplt.xticks(rotation=45)\nplt.show()\ndaily_bettors.plot(kind='box', showmeans=True)\nplt.title('Box Plot of Bettors')\nplt.show()","2aa37dc0":"daily_bettors.describe()","82cc6ab4":"daily_revenue = df.groupby(['racedate'])['Revenue'].sum()\ndaily_revenue.plot()\nplt.title(\"Daily Revenue\")\nplt.xlabel('Date')\nplt.ylabel('Revenue')\nplt.xticks(rotation=45)\nplt.show()\ndaily_revenue.plot(kind='box', showmeans=True)\nplt.title('Box Plot for Daily Revenue')\nplt.show()","3411960a":"daily_revenue.describe()","c59362bb":"daily_bettors_target = df_target.groupby(['racedate'])['accountid'].nunique()\ndaily_bettors_target = daily_bettors_target[1:(len(daily_bettors_target)-1)]\ndaily_bettors_target.plot()\nplt.title(\"Daily number of Target Bettors\")\nplt.xlabel('Date')\nplt.ylabel('Number of Target Bettors')\nplt.xticks(rotation=45)\nplt.show()\ndaily_bettors_target.plot(kind='box', showmeans=True)\nplt.title('Box Plot for Daily number of Target Bettors')\nplt.show()","681e75b0":"daily_bettors_target.describe()","2c1de241":"daily_revenue_target = df_target.groupby(['racedate'])['Revenue'].sum()\ndaily_revenue_target.plot()\nplt.title(\"Daily Revenue from Target Group\")\nplt.xlabel('Date')\nplt.ylabel('Revenue')\nplt.xticks(rotation=45)\nplt.show()\ndaily_revenue_target.plot(kind='box', showmeans=True)\nplt.title(\"Box Plot of Daily Revenue from Target Group\")\nplt.show()","0481f984":"daily_revenue_target.describe()","bb80cbc4":"df_racedate_rev = df.groupby(by=['racedate'], as_index = False).agg({'Revenue': ['sum']})\ndf_racedate_rev","84152d16":"df_racedate_rev['7_day_rev'] = df_racedate_rev.Revenue.rolling(window=7,center=False).mean()\ndf_racedate_rev['14_day_rev'] = df_racedate_rev.Revenue.rolling(window=14,center=False).mean()\ndf_racedate_rev['28_day_rev'] = df_racedate_rev.Revenue.rolling(window=28,center=False).mean()\ndf_racedate_rev\n","31932078":"df_racedate_rev.plot(x='racedate', y=['Revenue', '7_day_rev', '14_day_rev', '28_day_rev'])\nplt.show()","16586b1f":"Due to Daily Revenue being quite Noisey. Using a rolling average (7 Day to 28 Day) we can see weekly and bi-weekly seasonality. Monthly seasonality is the less variable than the lesser rolling average periods. ","7715a100":"Player Tier KA generates the most Revenue at 67.7% of total Revenue and it is has the lowest bet count. Player Tier Low has the highest bet count and generates the 2nd most revenue at 13.7%. ","9bb22fd9":"# ***Player Tier's (segment) Revenue Analysis***","8ee6a254":"**Average Daily Bettors is 90 compared to 81 on 1.1.2021**","655a4317":"ROI performance on 1.1.2021 was below the average ROI for the year. The average ROI for the year was 1,472% and the ROI performance on 1.1.2021 was 1,214%","79275f3f":"***A promotion was given to sports gambling bettors on Jan. 1st, 2021 and the Analytics team would like to assess the impact of the promotion. Bonuses were awarded to customers per day for the entire year and depending on a players tier they recieved a certain amount. The higher the player tier the more a bonus was recieved.***","626ef710":"*Target Group - Bonus Given*","1607b90b":"Revenue generated for customers given a bonus on 1.1.2021 was $10,017.\n\nRevenue generated for customers given a bonus for the year average a day at $11,262.\n\nRevenue generated on 1.1.2021 performaned below the average but within the interquartile range of expectation. ","c78ff3b2":"**Target** customer recieves Bonus per bet only - \n- \"KA\" gets $50\n\n- \"High\" gets $25\n\n- \"Medium\" gets $10\n\n- \"Low gets\" $5\n\n- \"No Value\" gets $5","56bc6300":"For Jan. 1st the Customer segment Revenue percentage and Bet count is consistant with the entire dataset with regards to Player Tier KA producing the highest percentage of revenue (71.9%) and Customer Segment Low making the most bets for Jan. 1st.","34027e37":"# ***Jan. 1st - ROI Analysis on Promotions***","c36bfbad":"**Target Group ROI Analysis**","5a474e0a":"***Daily Revenue - Rolling Average (7-Day, 14-Day and 28-Day)***","c3fe99e6":"# ***Daily Revenue and Daily Bettors***","a8c825b8":"# ***Jan. 1st Revenue Analysis***"}}