{"cell_type":{"f5ac1d7f":"code","2fa228e8":"code","19a81229":"code","87efd786":"code","ad5dd0fd":"code","23841237":"code","990c9ef9":"code","faf293ae":"code","98d43a9e":"code","8d6a1916":"code","32b601d8":"code","8ecb3a60":"code","b8fea1bd":"code","47afdee5":"code","e99c9163":"code","a7b37bf0":"code","4ea18933":"code","c68d3d81":"code","94dbb693":"code","f7c01dce":"code","6e385095":"code","06ea1639":"code","ce42309f":"code","b468f12f":"code","88b2557b":"code","59988907":"code","69202b08":"code","2f52b778":"code","92c99cbd":"code","f0d79f05":"code","424facdc":"code","967ad874":"code","48f30f4f":"code","e1311702":"code","8fd1fc35":"code","daae4eed":"code","ba44ab27":"markdown","88f04c04":"markdown","e97e306c":"markdown","63dc7301":"markdown","77ff830d":"markdown","9b42a3a9":"markdown","9f9b84e4":"markdown","d9565773":"markdown","b5ce71df":"markdown","c7a26f66":"markdown","f16d149e":"markdown"},"source":{"f5ac1d7f":"%matplotlib inline\nimport os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport statistics as st\nfrom mpl_toolkits import mplot3d","2fa228e8":"dcwikia = pd.read_csv('..\/input\/dc-wikia-data.csv')\nprint('Detective Comics data types')\nprint('')\nprint(dcwikia.dtypes)\nprint('...............................................................................................')\ndcwikia1= dcwikia.dropna(subset=['YEAR'])\ndcwikia1= dcwikia1.dropna(subset=['ALIVE'])\nprint(\"Detective Comics numbers of rows before and after dropping null values from variable or column\")\nprint('')\nprint(\"Before dropping null values: \",len(dcwikia))\nprint(\"After dropping null values: \",len(dcwikia1))\nprint('Total ',len(dcwikia)-len(dcwikia1),' rows are dropped')\nprint(\"Before updating null values : \",dcwikia.shape,\"After updating null values : \",dcwikia1.shape)\nprint('...............................................................................................')\nprint('Detective Comics total null values count')\nprint('')\nprint(dcwikia1.isnull().sum())","19a81229":"#dcwikia1['YEAR']=dcwikia1['YEAR'].replace(\"\",0).fillna(0).astype(np.int64)\ndcwikia1['YEAR']=dcwikia1['YEAR'].astype(np.int64)\n#dcwikia12=dcwikia1[dcwikia1['APPEARANCES'].isnull()]\na = dcwikia1['APPEARANCES'].mean()\ndcwikia1['APPEARANCES']=dcwikia1['APPEARANCES'].fillna(a)\n#dcwikia1[dcwikia1['page_id']==289378]\ndcwikia1['APPEARANCES']=dcwikia1['APPEARANCES'].astype(np.int64)\nprint('Detective Comics data types are converted float64 to int64')\nprint('')\nprint(dcwikia1.dtypes)\nprint('...............................................................................................')\ndcwikia1['ID']=dcwikia1['ID'].fillna('Missing Identity')\ndcwikia1['ALIGN']=dcwikia1['ALIGN'].fillna('Side Characters')\ndcwikia1['EYE']=dcwikia1['EYE'].fillna('Natural Eyes')\ndcwikia1['HAIR']=dcwikia1['HAIR'].fillna('Natural Hair')\ndcwikia1['SEX']=dcwikia1['SEX'].fillna('Gender Characters')\ndel dcwikia1['GSM']\nmfa=dcwikia1['FIRST APPEARANCE'].str.split(\" \",n=1,expand=True)\ndcwikia1['Month']=mfa[1]\ndel dcwikia1['FIRST APPEARANCE'] \ndel dcwikia1['urlslug']\ndcwikia1['Month']=dcwikia1['Month'].fillna('December')\ndcwikia1['Month'] = np.where(dcwikia1['Month'] == 'January' ,1 ,np.where(dcwikia1['Month'] == 'February' ,2 ,np.where(dcwikia1['Month'] == 'March' ,3,np.where(dcwikia1['Month'] == 'April' ,4,np.where(dcwikia1['Month'] == 'May' ,5,np.where(dcwikia1['Month'] == 'June' ,6,np.where(dcwikia1['Month'] == 'July' ,7,np.where(dcwikia1['Month'] == 'August' ,8,np.where(dcwikia1['Month'] == 'September' ,9,np.where(dcwikia1['Month'] == 'October' ,10,np.where(dcwikia1['Month'] == 'November' ,11,np.where(dcwikia1['Month'] == 'December' ,12,0))))))))))))\nprint('Detective Comics shape after data mining')\nprint('')\nprint(dcwikia1.shape)\nprint('...............................................................................................')\nprint('Detective Comics null values count after data mining')\nprint('')\nprint(dcwikia1.isnull().sum())\nprint('...............................................................................................')\nprint('Detective Comics data types values after data mining')\nprint('')\nprint(dcwikia1.dtypes)\nprint('...............................................................................................')\nprint('Detective Comics unique values after data mining')\nprint('')\nfor i in dcwikia1[['ID','ALIGN','EYE','HAIR','SEX','ALIVE','YEAR','Month']]:\n    print(i,\" : \",dcwikia1[i].unique())\n    print(\"\")","87efd786":"dcwikia1.describe().transpose()","ad5dd0fd":"dcwikia1.corr()","23841237":"#plt.subplots(figsize=(20,15))\nsns.heatmap(dcwikia1.corr()).set_title('Detective Comics Dataframe heatmap')","990c9ef9":"# sns.set()\n# sns.set_style('ticks')\n# fig, ax = plt.subplots()\n# fig.set_size_inches(11.7, 8.27)\nplt.subplots(figsize=(10,5))\nsns.scatterplot(dcwikia1.YEAR,dcwikia1.APPEARANCES,marker='o').set_title('Detective Comics Year and Appearances')","faf293ae":"# sns.set()\n# sns.set_style('ticks')\n# fig, ax = plt.subplots()\n# fig.set_size_inches(11.7, 8.27)\nplt.subplots(figsize=(15,5))\nsns.barplot(dcwikia1.YEAR,dcwikia1.APPEARANCES,hue=dcwikia1['Month']).set_title('Detective Comics Year,Month and Appearances')\n# leg = plt.legend(title=\"Title\")\n# leg._legend_box.align = \"left\"\n#ax.legend(loc='best')\nplt.xticks(rotation=90)\n#plt.savefig('y.jpg')","98d43a9e":"#sns.jointplot(x=\"YEAR\", y='APPEARANCES', data=dcwikia1,kind='kde',hue=\"ID\")","8d6a1916":"# sns.set_style('ticks')\n# fig, ax = plt.subplots()\n# fig.set_size_inches(11.7, 8.27)\nplt.subplots(figsize=(15,3))\nsns.scatterplot(dcwikia1.YEAR,dcwikia1.APPEARANCES,hue=dcwikia1['ID']).set_title('Detective Comics Year amd Appearances by ID')","32b601d8":"# sns.set_style('ticks')\n# fig, ax = plt.subplots()\n# fig.set_size_inches(11.7, 8.27)\nplt.subplots(figsize=(15,3))\nsns.scatterplot(dcwikia1.YEAR,dcwikia1.APPEARANCES,hue=dcwikia1['ALIGN'],marker='^',alpha=1).set_title('Detective Comics Year and Appearances by ALIGN')","8ecb3a60":"plt.subplots(figsize=(15,3))\nsns.barplot(dcwikia1.ID,dcwikia1.APPEARANCES,hue=dcwikia1['ALIGN']).set_title('Detective Comics ID and APPEARANCES by ALIGN')","b8fea1bd":"plt.subplots(figsize=(15,5))\nsns.barplot(dcwikia1.EYE,dcwikia1.APPEARANCES,hue=dcwikia1['ALIGN']).set_title('Detective Comics EYE and APPEARANCES by ALIGN')\nplt.xticks(rotation=90)","47afdee5":"#sns.boxenplot(x=\"APPEARANCES\", y=\"EYE\",color=\"b\", hue=\"HAIR\",data=dcwikia1)\nplt.subplots(figsize=(15,10))\nsns.boxenplot(x=\"APPEARANCES\", y=\"HAIR\",data=dcwikia1,hue=dcwikia1['EYE']).set_title('Detective Comics HAIR and APPEARANCES by EYE')\nplt.show()\n#plt.savefig('d.jpg')","e99c9163":"#plt.rc(\"font\", size=10)\nz = dcwikia1['SEX'].unique()\ny = dcwikia1.groupby(['SEX'])['APPEARANCES'].sum().reset_index()\nexplode = (0, 0.1,0.1, 0, 0) \n#fig1,ax1=plt.subplots()\nplt.figure(figsize=(10,10))\nplt.pie(y.APPEARANCES, labels=z, explode= explode,autopct='%1.1f%%', shadow=True, startangle=10)\nplt.title('Detective Comics Gender Bias Characters by APPEARANCES %')\nplt.show()\n\n#plt.savefig('country.png')","a7b37bf0":"plt.figure(figsize=(10,10))\nsns.violinplot(x=\"SEX\", y=\"YEAR\", hue=dcwikia1['ALIVE'],split=True, inner=\"quart\",data=dcwikia1).set_title('Detective Comics SEX and YEAR by ALIVE Characeters')\nplt.xticks(rotation=90)","4ea18933":"plt.figure(figsize=(10,10))\nsns.violinplot(x=\"SEX\", y=\"APPEARANCES\", hue=dcwikia1['ALIVE'],split=True, inner=\"quart\",data=dcwikia1).set_title('Detective Comics SEX and APPEARANCES by ALIVE Characeters')\nplt.xticks(rotation=90)","c68d3d81":"g = sns.FacetGrid(dcwikia1, row=\"SEX\", col=\"ALIVE\", margin_titles=True)\nbins = np.linspace(0, 60, 13)\ng.map(plt.hist, \"APPEARANCES\", color=\"steelblue\", bins=bins)","94dbb693":"fig = plt.figure(figsize=(15,15))\nax = plt.axes(projection='3d')\nxdata = dcwikia1['APPEARANCES']\nydata = dcwikia1['YEAR']\nzdata = dcwikia1['Month']\nax.plot3D(xdata, ydata, zdata, 'blue')\nax.scatter3D(xdata, ydata, zdata, c=zdata, cmap='Greens',);\nax.set_xlabel('APPEARANCES')\nax.set_ylabel('YEAR')\nax.set_zlabel('Month')\nplt.title('Detective Comics Month,YEAR and APPEARANCES')","f7c01dce":"mcwikia = pd.read_csv('..\/input\/marvel-wikia-data.csv')\nprint('Marvel data types')\nprint(' ')\nprint(mcwikia.dtypes)\nprint('...............................................................................................')\nmcwikia1= mcwikia.dropna(subset=['Year'])\nmcwikia1= mcwikia1.dropna(subset=['ALIVE'])\nprint(\"Marvel numbers of rows before and after dropping null values from variable or column\")\nprint(' ')\nprint(\"Before dropping null values: \",len(mcwikia))\nprint(\"After dropping null values: \",len(mcwikia1))\nprint('Total ',len(mcwikia)-len(mcwikia1),' rows are dropped')\nprint(\"Before updating null values : \",mcwikia.shape,\"After updating null values : \",mcwikia1.shape)\nprint('...............................................................................................')\nprint('Marvel total null values count')\nprint(' ')\nprint(mcwikia1.isnull().sum())","6e385095":"#mcwikia1['Year']=mcwikia1['Year'].replace(\"\",0).fillna(0).astype(np.int64)\nmcwikia1['Year']=mcwikia1['Year'].astype(np.int64)\n#mcwikia12=mcwikia1[mcwikia1['APPEARANCES'].isnull()]\na = mcwikia1['APPEARANCES'].mean()\nmcwikia1['APPEARANCES']=mcwikia1['APPEARANCES'].fillna(a)\nmcwikia1['APPEARANCES']=mcwikia1['APPEARANCES'].astype(np.int64)\nprint('Marvel data types are converted float64 to int64')\nprint(' ')\nprint(mcwikia1.dtypes)\nprint('...............................................................................................')\nmcwikia1['ID']=mcwikia1['ID'].fillna('Missing Identity')\nmcwikia1['ALIGN']=mcwikia1['ALIGN'].fillna('Side Characters')\nmcwikia1['EYE']=mcwikia1['EYE'].fillna('Natural Eyes')\nmcwikia1['HAIR']=mcwikia1['HAIR'].fillna('Natural Hair')\nmcwikia1['SEX']=mcwikia1['SEX'].fillna('Gender Characters')\ndel mcwikia1['GSM']\nma=mcwikia1['FIRST APPEARANCE'].str.split(\"-\",n=3,expand=True)\nmcwikia1['Month']=ma[0]\ndel mcwikia1['FIRST APPEARANCE'] \ndel mcwikia1['urlslug']\nmcwikia1['Month'].isnull().sum()\n#mcwikia1['Month']=mcwikia1['Month'].fillna('December')\nmcwikia1['Month'] = np.where(mcwikia1['Month'] == 'Jan' ,1 ,np.where(mcwikia1['Month'] == 'Feb' ,2 ,np.where(mcwikia1['Month'] == 'Mar' ,3,np.where(mcwikia1['Month'] == 'Apr' ,4,np.where(mcwikia1['Month'] == 'May' ,5,np.where(mcwikia1['Month'] == 'Jun' ,6,np.where(mcwikia1['Month'] == 'Jul' ,7,np.where(mcwikia1['Month'] == 'Aug' ,8,np.where(mcwikia1['Month'] == 'Sep' ,9,np.where(mcwikia1['Month'] == 'Oct' ,10,np.where(mcwikia1['Month'] == 'Nov' ,11,12)))))))))))\n#mcwikia1['Month'].value_counts()\nprint('Marvel shape after data mining')\nprint(' ')\nprint(mcwikia1.shape)\nprint('...............................................................................................')\nprint('Marvel null values count after data mining')\nprint(' ')\nprint(mcwikia1.isnull().sum())\nprint('...............................................................................................')\nprint('Marvel data types values after data mining')\nprint(' ')\nprint(mcwikia1.dtypes)\nprint('...............................................................................................')\nprint('Marvel unique values after data mining')\nprint(' ')\nfor i in mcwikia1[['ID','ALIGN','EYE','HAIR','SEX','ALIVE','Year','Month']]:\n    print(i,\" : \",mcwikia1[i].unique())\n    print(\"\")","06ea1639":"mcwikia1.describe().transpose()","ce42309f":"mcwikia1.corr()","b468f12f":"#plt.subplots(figsize=(20,15))\nsns.heatmap(mcwikia1.corr()).set_title('Marvel Dataframe heatmap')","88b2557b":"# sns.set()\n# sns.set_style('ticks')\n# fig, ax = plt.subplots()\n# fig.set_size_inches(11.7, 8.27)\nplt.subplots(figsize=(10,5))\nsns.scatterplot(mcwikia1.Year,mcwikia1.APPEARANCES,marker='o').set_title('Marvel Year and Appearances')","59988907":"# sns.set()\n# sns.set_style('ticks')\n# fig, ax = plt.subplots()\n# fig.set_size_inches(11.7, 8.27)\nplt.subplots(figsize=(15,5))\nsns.barplot(mcwikia1.Year,mcwikia1.APPEARANCES,hue=mcwikia1['Month']).set_title('Marvel Year,Month and Appearances')\nplt.xticks(rotation=90)\n#plt.savefig('y.jpg')","69202b08":"# sns.set_style('ticks')\n# fig, ax = plt.subplots()\n# fig.set_size_inches(11.7, 8.27)\nplt.subplots(figsize=(15,3))\nsns.scatterplot(mcwikia1.Year,mcwikia1.APPEARANCES,hue=mcwikia1['ID']).set_title('Marvel Year amd Appearances by ID')","2f52b778":"# sns.set_style('ticks')\n# fig, ax = plt.subplots()\n# fig.set_size_inches(11.7, 8.27)\nplt.subplots(figsize=(15,3))\nsns.scatterplot(mcwikia1.Year,mcwikia1.APPEARANCES,hue=mcwikia1['ALIGN'],marker='^',alpha=1).set_title('Marvel Year and Appearances by ALIGN')\n","92c99cbd":"plt.subplots(figsize=(15,3))\nsns.barplot(mcwikia1.ID,mcwikia1.APPEARANCES,hue=mcwikia1['ALIGN']).set_title('Marvel ID and APPEARANCES by ALIGN')","f0d79f05":"plt.subplots(figsize=(15,5))\nsns.barplot(mcwikia1.EYE,mcwikia1.APPEARANCES,hue=mcwikia1['ALIGN']).set_title('Marvel EYE and APPEARANCES by ALIGN')\nplt.xticks(rotation=90)","424facdc":"#sns.boxenplot(x=\"APPEARANCES\", y=\"EYE\",color=\"b\", hue=\"HAIR\",data=dcwikia1)\nplt.subplots(figsize=(15,10))\nsns.boxenplot(x=\"APPEARANCES\", y=\"HAIR\",data=mcwikia1,hue=mcwikia1['EYE']).set_title('Marvel HAIR and APPEARANCES by EYE')\nplt.show()\n#plt.savefig('d.jpg')","967ad874":"#plt.rc(\"font\", size=10)\nz1 = mcwikia1['SEX'].unique()\ny1 = mcwikia1.groupby(['SEX'])['APPEARANCES'].sum().reset_index()\nexplode1 = (0, 0.1,0.1, 0, 0) \n#fig1,ax1=plt.subplots()\nplt.figure(figsize=(10,10))\nplt.pie(y1.APPEARANCES, labels=z1, explode= explode1,autopct='%1.1f%%', shadow=True, startangle=10)\nplt.title('Marvel Gender Bias Characters by APPEARANCES %')\nplt.show()\n\n#plt.savefig('country.png')","48f30f4f":"plt.figure(figsize=(10,10))\nsns.violinplot(x=\"SEX\", y=\"Year\", hue=mcwikia1['ALIVE'],split=True, inner=\"quart\",data=mcwikia1).set_title('Marvel SEX and YEAR by ALIVE Characeters')\nplt.xticks(rotation=90)","e1311702":"plt.figure(figsize=(10,10))\nsns.violinplot(x=\"SEX\", y=\"APPEARANCES\", hue=mcwikia1['ALIVE'],split=True, inner=\"quart\",data=mcwikia1).set_title('Marvel SEX and APPEARANCES by ALIVE Characeters')\nplt.xticks(rotation=90)","8fd1fc35":"g = sns.FacetGrid(mcwikia1, row=\"SEX\", col=\"ALIVE\", margin_titles=True)\nbins = np.linspace(0, 60, 13)\ng.map(plt.hist, \"APPEARANCES\", color=\"steelblue\", bins=bins)","daae4eed":"fig = plt.figure(figsize=(15,15))\nax = plt.axes(projection='3d')\nxdata = mcwikia1['APPEARANCES']\nydata = mcwikia1['Year']\nzdata = mcwikia1['Month']\nax.plot3D(xdata, ydata, zdata, 'red')\nax.scatter3D(xdata, ydata, zdata, c=zdata, cmap='RdGy',);\nax.set_xlabel('APPEARANCES')\nax.set_ylabel('YEAR')\nax.set_zlabel('Month')\nplt.title('Marvels Month,YEAR and APPEARANCES')","ba44ab27":"# Detective Comics Data Visualization","88f04c04":"# Marvel Data Visualization","e97e306c":"# Marvel Data Cleaning and Mining\n\nConverting or filling missing values in ID as No Identity\n\nConverting or filling missing values in ALIGN as Side Characters\n\nConverting or filling missing values in EYE as Natural Eyes\n\nConverting or filling missing values in HAIR as Natural Hair\n\nConverting or filling missing values in SEX as Gender Characters\n\nDeleting GSM column because it has lot of blanks and which can be replaced with any charater\n\nSplit FIRST APPEARANCE in Month and dropped or delete FIRST APPERANCE column\n\nDeleting urlslug column\n\nAfter fill null values and deleting GSM and FIRST APPEARANCE columns, checking how many number of Rows and Columns are their\n\nVerifying are they still any null values in dataframe\n\nVerifying data types of each variable\n\nIdentifying unique values from related variables in data frame","63dc7301":"# Data downloaded from https:\/\/www.kaggle.com\/fivethirtyeight\/fivethirtyeight-comic-characters-dataset","77ff830d":"Reading dc-wikia-data csv file\n\nidentifying data types and null values from each variables\n\nDropping rows where null values are in Year and ALIVE variables or columns\n\nIdentify null values in each variable before filling or replacing null values\n\nConverting and replacing missing values in YEAR column from float64 to int64\n\nConverting and replacing missing values with mean in APPEARANCES and from float64 to int64","9b42a3a9":"# Marvel Exploratory Data Analysis","9f9b84e4":"Reading marvel-wikia-data csv file\n\nidentifying data types and null values from each variables\n\nDropping rows where null values are in Year and ALIVE variables or columns\n\nIdentify null values in each variable before filling or replacing null values\n\nConverting and replacing missing values in YEAR column from float64 to int64\n\nConverting and replacing missing values with mean in APPEARANCES and from float64 to int64","d9565773":"[](http:\/\/)# Detective Comics Exploratory Data Analysis","b5ce71df":"# Detective Comics Data Cleaning and Mining\n\nConverting or filling missing values in ID as No Identity\n\nConverting or filling missing values in ALIGN as Side Characters\n\nConverting or filling missing values in EYE as Natural Eyes\n\nConverting or filling missing values in HAIR as Natural Hair\n\nConverting or filling missing values in SEX as Gender Characters\n\nDeleting GSM column because it has lot of blanks and which can be replaced with any charater\n\nSplit FIRST APPEARANCE in Month and dropped or delete FIRST APPERANCE column\n\nDeleting urlslug column\n\nConverting or filling missing values in Month as December\n\nAfter fill null values and deleting GSM and FIRST APPEARANCE columns, checking how many number of Rows and Columns are their\n\nVerifying are they still any null values in dataframe\n\nVerifying data types of each variable\n\nIdentifying unique values from related variables in data frame","c7a26f66":"# FiveThirtyEight Comic Characters Dataset","f16d149e":"# Importing Python Packages"}}