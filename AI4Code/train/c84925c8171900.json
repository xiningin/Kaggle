{"cell_type":{"a0ae6816":"code","bb2fb45e":"code","9ebab94c":"code","b2d49193":"code","43aadb74":"code","02d17de5":"code","464b8afa":"code","1dad9c73":"code","6d4b6cec":"code","53831e38":"code","a62b50c2":"code","de5b181b":"code","6393683f":"code","8bfda4b3":"code","9a4a1f41":"code","c3d92cbe":"code","900d6c85":"code","8fc175cc":"code","8bc40f7d":"code","0a63719d":"code","ab948119":"code","38da34af":"code","b44009ab":"code","50a9beb7":"code","51acdb0b":"code","567e422d":"code","5fad8f60":"code","b367426f":"code","da94d79a":"code","86b4bb94":"code","932c720f":"code","3a3a1bf2":"code","d0a814e6":"code","e2995ca7":"code","ec8a3f9e":"code","3d7c9ea1":"code","c6c7af6e":"code","39e6555a":"code","bec5f428":"code","d46501ce":"code","7f39f5a7":"code","536a565a":"code","670dbfaa":"code","27e6fc34":"code","bcf2d057":"code","b36ca1da":"code","7c2120bc":"code","4f793ed5":"code","3c2aa04e":"code","9dc1eae5":"code","cd76d23a":"code","38ba5b28":"markdown","6069591f":"markdown","27218117":"markdown","6d38fbf8":"markdown","73018cc9":"markdown","8892eda8":"markdown","2164b949":"markdown","715cde35":"markdown","71e67c25":"markdown","e9cae55b":"markdown","fd7009a7":"markdown","031644b1":"markdown","57979a0c":"markdown","fc0dc18f":"markdown","85fd07b8":"markdown","14af6fd6":"markdown","38e5425d":"markdown","8bbadf05":"markdown","c7432db7":"markdown","438e57b8":"markdown","e2661fb5":"markdown","b20e3344":"markdown","d9b5a8a1":"markdown","0482f668":"markdown","2548e9d6":"markdown","151bf223":"markdown","1d4b4b5b":"markdown","20deb978":"markdown","4c9e1b05":"markdown","ced753a0":"markdown","5188aed3":"markdown","82e5488a":"markdown","6516564c":"markdown","fd605bc1":"markdown","87d333f7":"markdown","756fa2c7":"markdown","011f24da":"markdown","0feb3739":"markdown","8cd1e4da":"markdown","cd406e3d":"markdown","161062ec":"markdown","55793228":"markdown","eb02cc30":"markdown","7efc7e9f":"markdown","1c466c1d":"markdown","3daa0a26":"markdown","5bcff8f6":"markdown","a02124b8":"markdown","153f8b68":"markdown","638db434":"markdown","acdbccc0":"markdown","820f713d":"markdown","8553b6bd":"markdown","a2dfd489":"markdown","78623d15":"markdown","15908259":"markdown"},"source":{"a0ae6816":"#Data Analysis & Data wrangling\nimport numpy as np\nimport pandas as pd\nimport missingno as mn\nfrom collections import Counter\n\n#Visualization\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style\nfrom matplotlib.colors import ListedColormap\nfrom matplotlib import cm\nimport seaborn as sns\n%matplotlib inline\n\n#Plotly Libraris\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.colors import n_colors\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import init_notebook_mode, iplot\nfrom plotly import tools\nfrom IPython.display import display, HTML\n\n","bb2fb45e":"import warnings\nwarnings.filterwarnings('ignore')","9ebab94c":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b2d49193":"vgdata = pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv')\nvgdata.head()","43aadb74":"#database dimension\nprint(\"Database dimension     :\",vgdata.shape)\nprint(\"Database size          :\",vgdata.size)","02d17de5":"#checking numerical columns statistics\nvgdata.describe()","464b8afa":"#info about the column types etc. \nvgdata.info()","1dad9c73":"mn.matrix(vgdata)","6d4b6cec":"#Column wise null values in train data set \nnull_vgd_perc = pd.DataFrame((vgdata.isnull().sum())*100\/vgdata.shape[0]).reset_index()\nnull_vgd_perc.columns = ['Column Name', 'Null Values Percentage']\nnull_vgd_value = pd.DataFrame(vgdata.isnull().sum()).reset_index()\nnull_vgd_value.columns = ['Column Name', 'Null Values']\nnull_vgd = pd.merge(null_vgd_value, null_vgd_perc, on='Column Name')\nnull_vgd","53831e38":"year_data = vgdata['Year']\nprint(\"Max Year Value: \", year_data.max())","a62b50c2":"max_entry = year_data.idxmax()\nmax_entry = vgdata.iloc[max_entry]\npd.DataFrame(max_entry).T","de5b181b":"vgdata['Year'] = vgdata['Year'].replace(2020.0, 2009.0)\nprint(\"Max Year Value: \", year_data.max())","6393683f":"game_missedyear = vgdata[vgdata['Year'].isnull()][\"Name\"].unique()\nprint(\"total number of unique games in that missing year is : \",len(game_missedyear))","8bfda4b3":"vgdata['Year'] = vgdata['Year'].fillna(2009.0)\nvgdata['Year'].isnull().sum()","9a4a1f41":"vgdata['Year']=vgdata['Year'].astype('int')\nvgdata.info()","c3d92cbe":"print(\"Total Publisher missing for \", vgdata['Publisher'].isnull().sum(),' rows')","900d6c85":"vgdata = vgdata.dropna()\nvgdata.isnull().sum()","8fc175cc":"games = vgdata['Name'].unique()\npublisher = vgdata['Publisher'].unique()\nplatforms = vgdata['Platform'].unique()\ngenres = vgdata['Genre'].unique()","8bc40f7d":"fig = go.Figure()\nfig.add_trace(go.Indicator(\n    mode = \"number\",\n    value = len(games),\n    title = {'text': \"Games\",'font': {'color': 'gold','size':20}},\n    number={'font':{'color': 'gold','size':50}},\n    domain = {'row': 0, 'column': 0}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number\",\n    value = len(publisher),\n    title = {'text': \"Publishers\",'font': {'color': 'green','size':20}},\n    number={'font':{'color': 'green','size':50}},\n    domain = {'row': 0, 'column': 1}\n))\n\nfig.add_trace(go.Indicator(\n    mode = \"number\",\n    value = len(platforms),\n    title = {'text': \"Platforms\",'font': {'color': 'darkviolet','size':20}},\n    number={'font':{'color': 'darkviolet','size':50}},\n    domain = {'row': 0, 'column': 2}\n))\n\nfig.add_trace(go.Indicator(\n    mode = \"number\",\n    value = len(genres),\n    title = {'text': \"Genres\",'font': {'color': 'deepskyblue','size':20}},\n    number={'font':{'color': 'deepskyblue','size':50}},\n    domain = {'row': 0, 'column': 3}\n))\n\nfig.update_layout(\n    grid = {'rows': 1, 'columns': 4, 'pattern': \"independent\"})\nfig.show()","0a63719d":"# Video Game Count by Year\nyearwisegame =  vgdata.groupby('Year')['Name'].count().reset_index()","ab948119":"# Yearwise Total Game Published\nfig = go.Figure(go.Bar(x=yearwisegame['Year'],y=yearwisegame['Name'],\n                       marker={'color': yearwisegame['Name'],'colorscale': 'Viridis'}))\nfig.update_layout(title_text='Video Game Release by Year',xaxis_title=\"Year\",yaxis_title=\"Number of Games Released\")\nfig.show()","38da34af":"# Video Game Sales by Year\nyearwisesale =  vgdata.groupby('Year')['Global_Sales'].sum().reset_index()","b44009ab":"# Yearwise Total Game Sales\nfig = go.Figure(go.Bar(x=yearwisesale['Year'],y=yearwisesale['Global_Sales'],\n                       marker={'color': yearwisesale['Global_Sales'],'colorscale': 'Viridis'}))\nfig.update_layout(title_text='Video Game Global Sales by Release Year',xaxis_title=\"Year\",yaxis_title=\"Sum of Sales\")\nfig.show()","50a9beb7":"# Video Game Sales by Publisher\npubwisegame =  vgdata.groupby('Publisher')['Name'].count().reset_index()\npubwisegame = pubwisegame.sort_values('Name',ascending=False).reset_index()\npubwisegame.drop(\"index\",axis = 1,inplace=True)","51acdb0b":"# Initialize figure\nfig = go.Figure()\n\n# Add Traces\n\nfig.add_trace(\n    go.Bar(x=pubwisegame['Publisher'][:10],\n           y=pubwisegame['Name'][:10],\n           name=\"Top 10\",\n          marker={'color': pubwisegame['Name'][:10],'colorscale': 'Earth'}))\nfig.add_trace(\n    go.Bar(x=pubwisegame['Publisher'][:50],\n           y=pubwisegame['Name'][:50],\n           name=\"Top 50\",\n           marker={'color': pubwisegame['Name'][:50],'colorscale': 'Earth'},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=pubwisegame['Publisher'][:100],\n           y=pubwisegame['Name'][:100],\n           name=\"Top 100\",\n           marker={'color': pubwisegame['Name'][:100],'colorscale': 'Earth'},\n           visible=False))\n\nfig.add_trace(\n    go.Bar(x=pubwisegame['Publisher'][:500],\n           y=pubwisegame['Name'][:500],\n           name=\"Top 500\",\n           marker={'color': pubwisegame['Name'][:500],'colorscale': 'Earth'},\n           visible=False))\n\nfig.add_trace(\n    go.Bar(x=pubwisegame['Publisher'],\n           y=pubwisegame['Name'],\n           name=\"All\",\n           marker={'color': pubwisegame['Name'],'colorscale': 'Earth'},\n               visible=False ))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(label=\"Top 10\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False,False, False, False]},\n                           {\"title\": \"Top 10 Publishers\"}]),\n                dict(label=\"Top 50\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False, False, False]},\n                           {\"title\": \"Top 50 Publishers\"}]),\n                dict(label=\"Top 100\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True, False, False]},\n                           {\"title\": \"Top 100 Publishers\"}]),\n                dict(label=\"Top 500\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, True, False]},\n                           {\"title\": \"Top 500 Publishers\"}]),\n                dict(label=\"All\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, False, True]},\n                           {\"title\": \"All Publishers\"}]),\n            ]),\n        )\n    ])\n\n# Set title\nfig.update_layout(\n    title_text=\"Publisher Wise Video Game Count\",\n    xaxis_domain=[0.05, 1.0]\n)\n\nfig.show()","567e422d":"# Video Game Sales by Publisher\npubwisegamesale =  vgdata.groupby('Publisher')['Global_Sales'].sum().reset_index()\npubwisegamesale = pubwisegamesale.sort_values('Global_Sales',ascending=False).reset_index()\npubwisegamesale.drop(\"index\",axis = 1,inplace=True)","5fad8f60":"# Initialize figure\nfig = go.Figure()\n\n# Add Traces\n\nfig.add_trace(\n    go.Bar(x=pubwisegamesale['Publisher'][:10],\n           y=pubwisegamesale['Global_Sales'][:10],\n           name=\"Top 10\",\n          marker={'color': pubwisegamesale['Global_Sales'][:10],'colorscale': 'Earth'}))\n\nfig.add_trace(\n    go.Bar(x=pubwisegamesale['Publisher'][:50],\n           y=pubwisegamesale['Global_Sales'][:50],\n           name=\"Top 50\",\n           marker={'color': pubwisegamesale['Global_Sales'][:50],'colorscale': 'Earth'},\n           visible=False))\n\nfig.add_trace(\n    go.Bar(x=pubwisegamesale['Publisher'][:100],\n           y=pubwisegamesale['Global_Sales'][:100],\n           name=\"Top 100\",\n           marker={'color': pubwisegamesale['Global_Sales'][:100],'colorscale': 'Earth'},\n           visible=False))\n\nfig.add_trace(\n    go.Bar(x=pubwisegamesale['Publisher'][:500],\n           y=pubwisegamesale['Global_Sales'][:500],\n           name=\"Top 500\",\n           marker={'color': pubwisegamesale['Global_Sales'][:500],'colorscale': 'Earth'},\n           visible=False))\n\nfig.add_trace(\n    go.Bar(x=pubwisegamesale['Publisher'],\n           y=pubwisegamesale['Global_Sales'],\n           name=\"All\",\n           marker={'color': pubwisegamesale['Global_Sales'],'colorscale': 'Earth'},\n               visible=False ))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(label=\"Top 10\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False,False, False, False]},\n                           {\"title\": \"Top 10 Publishers\"}]),\n                dict(label=\"Top 50\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False, False, False]},\n                           {\"title\": \"Top 50 Publishers\"}]),\n                dict(label=\"Top 100\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True, False, False]},\n                           {\"title\": \"Top 100 Publishers\"}]),\n                dict(label=\"Top 500\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, True, False]},\n                           {\"title\": \"Top 500 Publishers\"}]),\n                dict(label=\"All\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, False, True]},\n                           {\"title\": \"All Publishers\"}]),\n            ]),\n        )\n    ])\n\n# Set title\nfig.update_layout(\n    title_text=\"Publisher Wise Video Game Sales\",\n    xaxis_domain=[0.05, 1.0]\n)\n\nfig.show()\n","b367426f":"top_5_publishers = ['Nintendo', 'Sony Computer Entertainment','Microsoft Game Studios','Konami Digital Entertainment','Electronic Arts']\nperc = vgdata.loc[:,[\"Year\",\"Publisher\",'Global_Sales']]\nperc['total_sales'] = perc.groupby([perc.Publisher,perc.Year])['Global_Sales'].transform('sum')\nperc.drop('Global_Sales', axis=1, inplace=True)\nperc = perc.drop_duplicates()\nperc = perc[(perc['Year']>=2006)]\nperc = perc.sort_values(\"Year\",ascending = False)\nperc = perc.loc[perc['Publisher'].isin(top_5_publishers)]\nperc = perc.sort_values(\"Year\")\nfig=px.bar(perc,x='Publisher', y=\"total_sales\", animation_frame=\"Year\", \n           animation_group=\"Publisher\", color=\"Publisher\", hover_name=\"Publisher\",range_y=[0,200])\nfig.update_layout(title_text=\"Top 5 Publisher Game Sale by Year\", xaxis_domain=[0.05, 1.0])\nfig.show()","da94d79a":"EU = vgdata.pivot_table('EU_Sales', columns='Publisher', aggfunc='sum').T\nEU = EU.sort_values(by='EU_Sales', ascending=False).iloc[0:5]\nEU_publishers = EU.index\n\nJP = vgdata.pivot_table('JP_Sales', columns='Publisher', aggfunc='sum').T\nJP = JP.sort_values(by='JP_Sales', ascending=False).iloc[0:5]\nJP_publishers = JP.index\n\nNA = vgdata.pivot_table('NA_Sales', columns='Publisher', aggfunc='sum').T\nNA = NA.sort_values(by='NA_Sales', ascending=False).iloc[0:5]\nNA_publishers = NA.index\n\nOther = vgdata.pivot_table('Other_Sales', columns='Publisher', aggfunc='sum').T\nOther = Other.sort_values(by='Other_Sales', ascending=False).iloc[0:5]\nOther_publishers = Other.index\n\nGlobal = vgdata.pivot_table('Global_Sales', columns='Publisher', aggfunc='sum').T\nGlobal = Global.sort_values(by='Global_Sales', ascending=False).iloc[0:5]\nGlobal_publishers = Global.index","86b4bb94":"# Initialize figure\nfig = go.Figure()\n\n# Add Traces\n\nfig.add_trace(\n    go.Bar(y=NA['NA_Sales'],\n           x=NA_publishers,\n           name=\"North America\",\n          marker={'color': NA['NA_Sales'],'colorscale': 'Portland'}))\nfig.add_trace(\n    go.Bar(y=EU['EU_Sales'],\n           x=EU_publishers,\n           name=\"Europe\",\n           marker={'color': EU['EU_Sales'],'colorscale': 'Portland'},\n           visible=False))\nfig.add_trace(\n    go.Bar(y=JP['JP_Sales'],\n           x=JP_publishers,\n           name=\"Japan\",\n           marker={'color': JP['JP_Sales'],'colorscale': 'Portland'},\n           visible=False))\n\nfig.add_trace(\n    go.Bar(y=Other['Other_Sales'],\n           x=Other_publishers,\n           name=\"Others\",\n           marker={'color': Other['Other_Sales'],'colorscale': 'Portland'},\n           visible=False))\n\nfig.add_trace(\n    go.Bar(y=Global['Global_Sales'],\n           x=Global_publishers,\n           name=\"Global\",\n           marker={'color': Global['Global_Sales'],'colorscale': 'Portland'},\n               visible=False ))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(label=\"North America\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False,False, False, False]},\n                           {\"title\": \"Top 5 Publishers for North America\"}]),\n                dict(label=\"Europe\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False, False, False]},\n                           {\"title\": \"Top 5 Publishers for Europe\"}]),\n                dict(label=\"Japan\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True, False, False]},\n                           {\"title\": \"Top 5 Publishers for Japan\"}]),\n                dict(label=\"Others\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, True, False]},\n                           {\"title\": \"Top 5 Publishers for Other Region\"}]),\n                dict(label=\"Global\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False, False, True]},\n                           {\"title\": \"Top 5 Publishers for Global\"}]),\n            ]),\n        )\n    ])\n\n# Set title\nfig.update_layout(\n    title_text=\"Top 5 Publishers per region\",\n    xaxis_domain=[0.05, 1.0]\n)\n\nfig.show()","932c720f":"# Video Game Count by Platform\nplatform_wise_game =  vgdata.groupby('Platform')['Name'].count().reset_index().sort_values(\"Name\",ascending=False)\nplatform_wise_game = platform_wise_game.reset_index()\nplatform_wise_game.drop(\"index\",axis = 1,inplace=True)\ndisplay()","3a3a1bf2":"# Initialize figure\nfig = go.Figure()\n\n# Add Traces\n\nfig.add_trace(\n    go.Bar(x=platform_wise_game['Platform'][:5],\n           y=platform_wise_game['Name'][:5],\n           name=\"Top 5\",\n          marker={'color': platform_wise_game['Name'][:5],'colorscale': 'Viridis'}))\nfig.add_trace(\n    go.Bar(x=platform_wise_game['Platform'][:10],\n           y=platform_wise_game['Name'][:10],\n           name=\"Top 10\",\n           marker={'color': platform_wise_game['Name'][:10],'colorscale': 'Viridis'},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=platform_wise_game['Platform'][:20],\n           y=platform_wise_game['Name'][:20],\n           name=\"Top 20\",\n           marker={'color': platform_wise_game['Name'][:20],'colorscale': 'Viridis'},\n           visible=False))\n\nfig.add_trace(\n    go.Bar(x=platform_wise_game['Platform'],\n           y=platform_wise_game['Name'],\n           name=\"All\",\n           marker={'color': platform_wise_game['Name'],'colorscale': 'Viridis'},\n               visible=False ))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(label=\"Top 5\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False,False, False]},\n                           {\"title\": \"Top 5 Platforms\"}]),\n                dict(label=\"Top 10\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False, False]},\n                           {\"title\": \"Top 10 Platforms\"}]),\n                dict(label=\"Top 20\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True,False]},\n                           {\"title\": \"Top 20 Platforms\"}]),\n                dict(label=\"All\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False,True]},\n                           {\"title\": \"All Platforms\"}]),\n            ]),\n        )\n    ])\n\n# Set title\nfig.update_layout(\n    title_text=\"Platform Wise Video Game Count\",\n    xaxis_domain=[0.05, 1.0]\n)\n\nfig.show()\n","d0a814e6":"# Video Game Sale by Platform\nplatform_wise_gamesale =  vgdata.groupby('Platform')['Global_Sales'].sum().reset_index().sort_values(\"Global_Sales\",ascending=False)\nplatform_wise_gamesale = platform_wise_gamesale.reset_index()\nplatform_wise_gamesale.drop(\"index\",axis = 1,inplace=True)","e2995ca7":"# Video Game Sales by Platform\n# Initialize figure\nfig = go.Figure()\n\n# Add Traces\n\nfig.add_trace(\n    go.Bar(x=platform_wise_gamesale['Platform'][:5],\n           y=platform_wise_gamesale['Global_Sales'][:5],\n           name=\"Top 5\",\n          marker={'color': platform_wise_gamesale['Global_Sales'][:5],'colorscale': 'Viridis'}))\nfig.add_trace(\n    go.Bar(x=platform_wise_gamesale['Platform'][:10],\n           y=platform_wise_gamesale['Global_Sales'][:10],\n           name=\"Top 10\",\n           marker={'color': platform_wise_gamesale['Global_Sales'][:10],'colorscale': 'Viridis'},\n           visible=False))\nfig.add_trace(\n    go.Bar(x=platform_wise_gamesale['Platform'][:20],\n           y=platform_wise_gamesale['Global_Sales'][:20],\n           name=\"Top 20\",\n           marker={'color': platform_wise_gamesale['Global_Sales'][:20],'colorscale': 'Viridis'},\n           visible=False))\n\nfig.add_trace(\n    go.Bar(x=platform_wise_gamesale['Platform'],\n           y=platform_wise_gamesale['Global_Sales'],\n           name=\"All\",\n           marker={'color': platform_wise_gamesale['Global_Sales'],'colorscale': 'Viridis'},\n               visible=False ))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"buttons\",\n            direction=\"right\",\n            active=0,\n            x=0.57,\n            y=1.2,\n            buttons=list([\n                dict(label=\"Top 5\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False,False, False]},\n                           {\"title\": \"Top 5 Platforms\"}]),\n                dict(label=\"Top 10\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,True, False, False]},\n                           {\"title\": \"Top 10 Platforms\"}]),\n                dict(label=\"Top 20\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, True,False]},\n                           {\"title\": \"Top 20 Platforms\"}]),\n                dict(label=\"All\",\n                     method=\"update\",\n                     args=[{\"visible\": [False,False, False,True]},\n                           {\"title\": \"All Platforms\"}]),\n            ]),\n        )\n    ])\n\n# Set title\nfig.update_layout(\n    title_text=\"Platform Wise Video Game Sales\",\n    xaxis_domain=[0.05, 1.0]\n)\n\nfig.show()","ec8a3f9e":"from wordcloud import WordCloud, ImageColorGenerator\n\ntext = list(set(vgdata['Platform']))\nplt.rcParams['figure.figsize'] = (15,15)\nwordcloud = WordCloud(max_font_size=50, max_words=100,background_color=\"black\").generate(str(text))\n\nplt.imshow(wordcloud,interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","3d7c9ea1":"fig = go.Figure()\n\nfig.add_trace(\n    go.Scatter(x=vgdata['NA_Sales'], \n               y=vgdata['Platform'],\n               mode='markers',\n               name = \"North America\",\n               marker=dict(color='Teal',size=vgdata['NA_Sales'],showscale=True)))\nfig.add_trace(\n    go.Scatter(x=vgdata['EU_Sales'], \n               y=vgdata['Platform'],\n               mode='markers',\n               name = \"Europe\", \n               marker=dict(color='Purple',size=vgdata['EU_Sales'],showscale=True))) \nfig.add_trace(\n    go.Scatter(x=vgdata['JP_Sales'], \n               y=vgdata['Platform'],\n               mode='markers',\n               name = \"Japan\",\n               marker=dict(color='Gold',size=vgdata['JP_Sales'],showscale=True))) \nfig.add_trace(\n    go.Scatter(x=vgdata['Other_Sales'], \n               y=vgdata['Platform'],\n               mode='markers',\n               name = \"Other Regions\",\n               marker=dict(color='Deepskyblue',size=vgdata['Other_Sales'],showscale=True)))    \nfig.update_layout(title_text='Region Wise Game Sales by Platform',xaxis_title=\"Sales in $M\",yaxis_title=\"Platform\")    ","c6c7af6e":"# Video Game Count by Genre\ngenre_wise_game =  vgdata.groupby('Genre')['Name'].count().reset_index().sort_values(\"Name\",ascending=False)\ngenre_wise_game = genre_wise_game.reset_index()\ngenre_wise_game.drop(\"index\",axis = 1,inplace=True)\n#display()","39e6555a":"fig = go.Figure([go.Pie(labels=genre_wise_game['Genre'], \n                        values=genre_wise_game['Name'],\n                        hole=0.3)])  \n\nfig.update_traces(hoverinfo='label+percent+value', \n                  textinfo='percent', \n                  textfont_size=15)\nfig.update_layout(title=\"Genre Wise Game Count\",title_x=0.5)\nfig.show()","bec5f428":"# Genre wise Game Sales\ngenre = vgdata.loc[:,['Genre','Global_Sales']]\ngenre['total_sales'] = genre.groupby('Genre')['Global_Sales'].transform('sum')\ngenre.drop('Global_Sales', axis=1, inplace=True)\ngenre = genre.drop_duplicates()\n\nfig = px.pie(genre, names='Genre', values='total_sales', template='seaborn')\nfig.update_traces(rotation=90, pull=[0.2,0.06,0.06,0.06,0.06], textinfo=\"percent+label\")\nfig.update_layout(title=\"Genre Wise Game Sales\",title_x=0.5)\nfig.show()","d46501ce":"# Top 5 Games by Genre\n\ngenre_wise_game= vgdata.groupby(['Genre','Name'])['Global_Sales'].sum().reset_index().sort_values(['Genre','Global_Sales'],ascending = (True,False))","7f39f5a7":"genre = vgdata['Genre'].unique()\ngenre_s = sorted(genre)\nprint (\"List of Game Genres : \" , genre_s)","536a565a":"# Top 5 Games per Genre\nfig = go.Figure()\nfor genre in genre_s:\n    df = genre_wise_game[genre_wise_game['Genre']==genre]\n    fig.add_trace(\n        go.Bar(x=df['Name'][:5],\n               y=df['Global_Sales'][:5],\n               name=genre,\n               marker={'color': df['Global_Sales'][:5],'colorscale': 'Electric'}))\n    \nfig.update_layout(\n    updatemenus=[\n        dict(\n            active=0,\n            buttons=list([\n                dict(label=\"Action\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False, False, False,False, False, False,False, False, False,False, False]},\n                           {\"title\": \"Top 5 Games in Action Genre\"}]),\n                dict(label=\"Adventure\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, True, False, False,False, False, False,False, False, False,False, False]},\n                           {\"title\": \"Top 5 Games in Adventure Genre\"}]),\n                dict(label=\"Fighting\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, True, False,False, False, False,False, False, False,False, False]},\n                           {\"title\": \"Top 5 Games in Fighting Genre\"}]),\n                dict(label=\"Misc\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, True,False, False, False,False, False, False,False, False]},\n                           {\"title\": \"Top 5 Games in Misc Genre\"}]),\n                dict(label=\"Platform\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, False,True, False, False,False, False, False,False, False]},\n                           {\"title\": \"Top 5 Games in Platform Genre\"}]),\n                dict(label=\"Puzzle\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, False,False, True, False,False, False, False,False, False]},\n                           {\"title\": \"Top 5 Games in Puzzle Genre\"}]),\n                dict(label=\"Racing\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, False,False, False, True,False, False, False,False, False]},\n                           {\"title\": \"Top 5 Games in Racing Genre\"}]),\n                dict(label=\"Role-Playing\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, False,False, False, False,True, False, False,False, False]},\n                           {\"title\": \"Top 5 Games in Role-Playing Genre\"}]),\n                dict(label=\"Shooter\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, False,False, False, False,False, True, False,False, False]},\n                           {\"title\": \"Top 5 Games in Shooter Genre\"}]),\n                dict(label=\"Simulation\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, False,False, False, False,False, False, True,False, False]},\n                           {\"title\": \"Top 5 Games in Simulation Genre\"}]),\n                dict(label=\"Sports\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, False,False, False, False,False, False, False,True, False]},\n                           {\"title\": \"Top 5 Games in Sport Genre\"}]),\n                dict(label=\"Strategy\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, False,False, False, False,False, False, False,False, True]},\n                           {\"title\": \"Top 5 Games in Strategy Genre\"}]),\n                \n            ]),\n        )\n    ])\nfig.update_layout(title_text=\"Top 5 Games per Genre\")\n\nfig.show()    ","670dbfaa":"na_sales=[]\neu_sales=[]\njp_sales=[]\nother_sales=[]\nglobal_sales=[]\nfor i in genre_s:\n    val=vgdata[vgdata.Genre==i]\n    na_sales.append(val.NA_Sales.sum())\n    eu_sales.append(val.EU_Sales.sum())\n    jp_sales.append(val.JP_Sales.sum())\n    other_sales.append(val.Other_Sales.sum())\n","27e6fc34":"fig = go.Figure()\nfig.add_trace(go.Bar(x=na_sales,\n                     y=genre_s,\n                     name='North America Sales',\n                     marker_color='teal',\n                     orientation='h'))\nfig.add_trace(go.Bar(x=eu_sales,\n                     y=genre_s,\n                     name='Europe Sales',\n                     marker_color='purple',\n                     orientation='h'))\nfig.add_trace(go.Bar(x=jp_sales,\n                     y=genre_s,\n                     name='Japan Sales',\n                     marker_color='gold',\n                     orientation='h'))\nfig.add_trace(go.Bar(x=other_sales,\n                     y=genre_s,\n                     name='Other Region Sales',\n                     marker_color='deepskyblue',\n                     orientation='h'))\nfig.update_layout(title_text='Region Wise Game Sales by Genre',xaxis_title=\"Sales in $M\",yaxis_title=\"Genre\",\n                  barmode='stack')\nfig.show()","bcf2d057":"from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\ntext = list(set(vgdata['Genre']))\nplt.rcParams['figure.figsize'] = (15,15)\nwordcloud = WordCloud(max_font_size=50, max_words=100,background_color=\"white\").generate(str(text))\n\nplt.imshow(wordcloud,interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","b36ca1da":"publisher_genre= vgdata.groupby(['Genre','Publisher'])['Name'].count().reset_index()","7c2120bc":"fig = px.scatter(publisher_genre, x=\"Publisher\", y=\"Name\", color='Genre')\n\nfig.update_layout(title='Genre wise Game count per Publisher',xaxis_title=\"Publisher\",yaxis_title=\"Game Count\")\nfig.update_xaxes(rangeslider_visible=True)\nfig.show()","4f793ed5":"# Top 5 Videos Generated by Global Sales\nEU = vgdata.pivot_table('EU_Sales', columns='Name', aggfunc='sum').T\nEU = EU.sort_values(by='EU_Sales', ascending=False).iloc[0:5]\nEU_games = EU.index\n\nJP = vgdata.pivot_table('JP_Sales', columns='Name', aggfunc='sum').T\nJP = JP.sort_values(by='JP_Sales', ascending=False).iloc[0:5]\nJP_games = JP.index\n\nNA = vgdata.pivot_table('NA_Sales', columns='Name', aggfunc='sum').T\nNA = NA.sort_values(by='NA_Sales', ascending=False).iloc[0:5]\nNA_games = NA.index\n\nOther = vgdata.pivot_table('Other_Sales', columns='Name', aggfunc='sum').T\nOther = Other.sort_values(by='Other_Sales', ascending=False).iloc[0:5]\nOther_games = Other.index\n","3c2aa04e":"# Initialize figure\nfig = make_subplots(\n    rows=2, cols=2, subplot_titles=(\"North Americal\", \"Europe\", \"Japan\",\"Other\"),\n    column_widths=[0.5, 0.5],\n    row_heights=[0.5, 0.5],\n    specs=[[{\"type\": \"bar\"}, {\"type\": \"bar\"}],\n           [ {\"type\": \"bar\"}, {\"type\": \"bar\"}]])\n# Add Traces\n\nfig.add_trace(\n    go.Bar(y=NA['NA_Sales'],\n           x=NA_games,\n           name=\"North America\",\n          marker={'color': NA['NA_Sales'],'colorscale': 'Portland'})\n         ,row=1, col=1)\nfig.add_trace(\n    go.Bar(y=EU['EU_Sales'],\n           x=EU_games,\n           name=\"Europe\",\n           marker={'color': EU['EU_Sales'],'colorscale': 'Portland'},\n           ),row=1, col=2)\nfig.add_trace(\n    go.Bar(y=JP['JP_Sales'],\n           x=JP_games,\n           name=\"Japan\",\n           marker={'color': JP['JP_Sales'],'colorscale': 'Portland'},\n           ),row=2, col=1)\n\nfig.add_trace(\n    go.Bar(y=Other['Other_Sales'],\n           x=Other_games,\n           name=\"Other\",\n           marker={'color': Other['Other_Sales'],'colorscale': 'Portland'},\n           ),row=2, col=2)\n\n\n\nfig.show()","9dc1eae5":"# Year wise total sale\n\nperc = vgdata[[\"Year\",'NA_Sales','EU_Sales','JP_Sales','Other_Sales']]\nperc[['NA_mean','EU_mean','JP_mean','Other_mean']] = perc.groupby('Year')[['NA_Sales','EU_Sales','JP_Sales','Other_Sales']].transform('sum')\nperc.drop(['NA_Sales','EU_Sales','JP_Sales','Other_Sales'], axis=1, inplace=True)\nperc = perc.drop_duplicates()\nperc = perc.sort_values(\"Year\")\ndf = pd.DataFrame({'Place': ['NA_Sales']*perc.shape[0], 'Year':perc['Year'], 'Sales': perc['NA_mean']})\ndf1 = pd.DataFrame({'Place': ['EU_Sales']*perc.shape[0], 'Year':perc['Year'], 'Sales': perc['EU_mean']})\ndf2 = pd.DataFrame({'Place': ['JP_Sales']*perc.shape[0], 'Year':perc['Year'], 'Sales': perc['JP_mean']})\ndf3 = pd.DataFrame({'Place': ['Other_Sales']*perc.shape[0], 'Year':perc['Year'], 'Sales': perc['Other_mean']})\nfinal = pd.concat([df,df1,df2,df3], axis=0)\nfinal = final.sort_values(\"Year\")\nfig=px.bar(final,x='Place', y=\"Sales\", animation_frame=\"Year\",animation_group=\"Place\", color=\"Place\", hover_name=\"Place\",range_y=[0,150])\nfig.update_layout(title=\"Year Wise Total Sale\",title_x=0.5)\nfig.show()","cd76d23a":"df = vgdata.loc[:,['Year','NA_Sales','EU_Sales','JP_Sales','Other_Sales','Global_Sales']]\ndf[['NA_sum','EU_sum','JP_sum','Other_sum', 'Global_sum']] = df.groupby('Year')[['NA_Sales','EU_Sales','JP_Sales','Other_Sales','Global_Sales']].transform('sum')\ndf.drop(['NA_Sales','EU_Sales','JP_Sales','Other_Sales','Global_Sales'], axis=1, inplace=True)\ndf = df.drop_duplicates()\ndf = df.sort_values('Year')\ndf1 = pd.DataFrame({'Place': ['NA_Sales']*df.shape[0], 'Year':df['Year'], 'Sales': df['NA_sum'], 'Global_Sales': df['Global_sum']})\ndf2 = pd.DataFrame({'Place': ['EU_Sales']*df.shape[0], 'Year':df['Year'], 'Sales': df['EU_sum'], 'Global_Sales': df['Global_sum']})\ndf3 = pd.DataFrame({'Place': ['JP_Sales']*df.shape[0], 'Year':df['Year'], 'Sales': df['JP_sum'], 'Global_Sales': df['Global_sum']})\ndf4 = pd.DataFrame({'Place': ['Other_Sales']*df.shape[0], 'Year':df['Year'], 'Sales': df['Other_sum'], 'Global_Sales': df['Global_sum']})\nfinal = pd.concat([df1,df2,df3,df4], axis=0)\nfinal = final.sort_values(\"Year\")\nfig = px.scatter(final, x=\"Global_Sales\", y=\"Sales\", animation_frame=\"Year\", animation_group=\"Place\", color=\"Place\", hover_name=\"Place\", size_max=1000, range_x=[0,340], range_y=[0,150])\nfig.update_traces(marker=dict(size=12,\n                              line=dict(width=2,\n                                        color='DarkSlateGrey')),\n                  selector=dict(mode='markers'))\nfig.update_layout(title=\"Global Sales vs. Individual Region Sales\",title_x=0.5)\nfig.show()","38ba5b28":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.5.5 Genre WordCloud\n            <\/span>   \n        <\/font>    \n<\/h4>","6069591f":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.6.3 Global Vs Regional Sales\n            <\/span>   \n        <\/font>    \n<\/h4>","27218117":"<a id=\"eda\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            5. Exploratory Data Analysis\n            <\/span>   \n        <\/font>    \n<\/h2>","6d38fbf8":"<a id=\"input\"><\/a>\n<h3 name='libraries'>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            3.1 Importing the input files\n            <\/span>   \n        <\/font>    \n<\/h3>","73018cc9":"<a id=\"datadesc\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            1.3 Data Description\n            <\/span>   \n        <\/font>    \n<\/h3>","8892eda8":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.4.3  Platform WordCloud\n            <\/span>   \n        <\/font>    \n<\/h4>","2164b949":"<a id=\"numvar\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            5.6 Global & Regional Sales Wise Analysis\n            <\/span>   \n        <\/font>    \n<\/h3>","715cde35":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.2.1  Year Wise Video Game Release Count \n            <\/span>   \n        <\/font>    \n<\/h4>","71e67c25":"<a id=\"publisher\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            5.3 Publisher Wise Analysis\n            <\/span>   \n        <\/font>    \n<\/h3>","e9cae55b":"<a id=\"background\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            1.1 Video Game Industry :\n            <\/span>   \n        <\/font>    \n<\/h3>","fd7009a7":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.2.2  Year Wise Video Game Sales\n            <\/span>   \n        <\/font>    \n<\/h4>","031644b1":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        We will delete these rows, i.e 39 game information as they are sold only once and sell value is insignicant in our analysis. \n    <\/span>\n<\/div>","57979a0c":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.5.1 Genre wise Video Games \n            <\/span>   \n        <\/font>    \n<\/h4>","fc0dc18f":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.4.4  Region Wise Sales per Platform\n            <\/span>   \n        <\/font>    \n<\/h4>","85fd07b8":"<p style=\"text-indent: 25px;\">\n    <span style='font-family:Georgia'>\n        A video game is an electronic game that can be played on a computing device, such as a personal computer, gaming console or mobile phone. Depending on the platform, video games can be subcategorized into computer games and console games. In recent years however, the emergence of social networks, smartphones and tablets introduced new categories such as mobile and social games. Video games have come a long way since the first games emerged in the 1970s. Today\u2019s video games offer photorealistic graphics and simulate reality to a degree which is astonishing in many cases.\n        <\/span>\n<\/p>","14af6fd6":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        We can see there are some null values in the column. Let's inspect the null values first \n    <\/span>    \n<\/div>","38e5425d":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.5.2 Genre wise Video Games Sales\n            <\/span>   \n        <\/font>    \n<\/h4>","8bbadf05":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.3.2  Publisher Wise Video Game Sales (Overall)\n            <\/span>   \n        <\/font>    \n<\/h4>","c7432db7":"<a id=\"genre\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            5.5 Genre Wise Analysis\n            <\/span>   \n        <\/font>    \n<\/h3>","438e57b8":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.4.2  Platform wise Video Game Sales\n            <\/span>   \n        <\/font>    \n<\/h4>","e2661fb5":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.4.1  Platform wise Video Game Count\n            <\/span>   \n        <\/font>    \n<\/h4>","b20e3344":"<a id=\"yearimpute\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            4.1 Year Imputation\n            <\/span>   \n        <\/font>    \n<\/h3>","d9b5a8a1":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.3.3 Top 5 Publisher - Yearwise\n            <\/span>   \n        <\/font>    \n<\/h4>","0482f668":"<p>\n    <span style='font-family:Georgia'>\n        Let's check the rest of the rows with missing year\n    <\/span>\n<\/p>","2548e9d6":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.6.1 Video Game Rank by Region\n            <\/span>   \n        <\/font>    \n<\/h4>","151bf223":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.3.1  Publisher Wise Video Game Release (Overall)\n            <\/span>   \n        <\/font>    \n<\/h4>","1d4b4b5b":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.6.2 Year Wise Regional Sales\n            <\/span>   \n        <\/font>    \n<\/h4>","20deb978":"<a id=\"yearwise\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            5.2 Year Wise Analysis\n            <\/span>   \n        <\/font>    \n<\/h3>","4c9e1b05":"<h1 style=\"text-align:center\">   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n                EDA - \ud83c\udfae Video Game Sales\n            <\/span>   \n        <\/font>    \n<\/h1>\n<hr style=\"width:100%;height:5px;border-width:0;color:gray;background-color:gray\">\n<center><img src=\"https:\/\/miro.medium.com\/max\/700\/0*73xpoUa9e8Q_vH6e.jpg\"><\/center>","ced753a0":"<p style=\"text-indent: 25px;\">\n    <span style='font-family:Georgia'>\n        The global gaming market was valued at USD 151.55 billion in 2019 and is expected to reach a value of USD 256.97 billion by 2025, registering a CAGR of 9.17% over the forecast period (2020 \u2013 2025). Game developers across emerging economies are continually striving to enhance gamer's experience, launching, and rewriting codes for diverse console\/platforms, such as PlayStation, Xbox, and Windows PC, which are incorporated into one product provided to the gamers through the cloud platform. <br>\n        The world is currently undergoing a harrowing and unprecedented event: the COVID-19 pandemic. During these trying times, gaming has become a means of escapism and time filling for many.As a result, one of this year\u2019s growth drivers is an increased interest in gaming due to COVID-19-related lockdown measures. However, the launch of the next-generation consoles toward the end of the year is also a key contributing factor.\n        <\/span>\n<\/p>","5188aed3":"<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            Table of Contents:\n            <\/span>   \n        <\/font>    \n<\/h2>\n<span style='font-family:Georgia'>\n    <ul>\n        <li><a href='#intro'>1. Introduction<\/a><\/li>\n        <ul>\n            <li><a href='#background'>1.1 Background<\/a><\/li>\n            <li><a href='#data'>1.2 Data Dictionary<\/a><\/li>\n        <\/ul>\n        <li><a href='#libraries'>2. Python Libraries<\/a><\/li>\n        <ul>\n            <li><a href='#python'>2.1 Import Python Libraries<\/a><\/li>\n            <li><a href='#warning'>2.2 Supress Warnings<\/a><\/li>\n        <\/ul>\n        <li><a href='#import'>3. Reading & Understanding the data<\/a><\/li>\n        <ul>\n            <li><a href='#import'>3.1 Importing the input files<\/a><\/li>\n            <li><a href='#inspect'>3.2 Inspecting the dataframes<\/a><\/li>\n            <li><a href='#nullcal'>3.3 Null Value Calculation<\/a><\/li>\n        <\/ul>      \n        <li><a href='#datacleaning'>4. Data Cleaning<\/a><\/li>\n        <ul>\n            <li><a href='#yearimpute'>4.1 Year Imputation<\/a><\/li>\n            <li><a href='#pubimpute'>4.2 Publisher Imputation<\/a><\/li>\n        <\/ul>\n        <li><a href='#eda'>5. Exploratory Data Analysis<\/a><\/li>\n        <ul>\n            <li><a href='#stat'>5.1 Overall Statistics<\/a><\/li>\n            <li><a href='#yearwise'>5.2 Year Wise Analysis<\/a><\/li>\n            <li><a href='#publisher'>5.3 Publisher Wise Analysis<\/a><\/li>\n            <li><a href='#platform'>5.4 Platform Wise Analysis<\/a><\/li>\n            <li><a href='#genre'>5.5 Genre Wise Analysis<\/a><\/li>\n            <li><a href='#numvar'>5.6 Global & Regional Sales Wise Analysis<\/a><\/li>\n        <\/ul>\n    <\/ul>\n<\/span>","82e5488a":"<center><img src = \"https:\/\/i.ibb.co\/WtxX3ZZ\/Wii-Sports.gif\"><\/center>","6516564c":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.5.3 Top 5 Games by Genre\n            <\/span>   \n        <\/font>    \n<\/h4>","fd605bc1":"<p style=\"text-indent: 25px;\">\n    <span style='font-family:Georgia'>\n        This dataset contains a list of video games with sales greater than 100,000 copies. It was generated by a scrape of <a href= \"https:\/\/www.vgchartz.com\/gamedb\/\">vgchartz.com <\/a>\n                <\/span>\n<\/p>\n<span style='font-family:Georgia'>\n    <ul>\n        <li><b>Rank<\/b> - Ranking of overall sales<\/li>\n        <li><b>Name<\/b> - The games name<\/li>\n        <li><b>Platform<\/b> - Platform of the games release (i.e. PC,PS4, etc.)<\/li>\n        <li><b>Year<\/b> - Year of the game's release<\/li>\n        <li><b>Genre<\/b> - Genre of the game<\/li>\n        <li><b>Publisher<\/b> - Publisher of the game<\/li>\n        <li><b>NA_Sales<\/b> - Sales in North America (in millions)<\/li>\n        <li><b>EU_Sales<\/b> - Sales in Europe (in millions)<\/li>\n        <li><b>JP_Sales<\/b> - Sales in Japan (in millions)<\/li>\n        <li><b>Other_Sales<\/b> - Sales in the rest of the world (in millions)<\/li>\n        <li><b>Global_Sales<\/b> - Total worldwide sales.<\/li>\n    <\/ul>\n<\/span>\n    \n","87d333f7":"<p style=\"font-size:20px;\">\n    <span style='font-family:Georgia'>\n        Thank you for reading my notebook. This is my first time using Plotly. Please feel free to give your honest feedbacks. If you like the notebook, please upvote\n    <\/span>\n<\/p>","756fa2c7":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.3.4 Top 5 Publisher - Reagion Wise\n            <\/span>   \n        <\/font>    \n<\/h4>","011f24da":"<a id=\"intro\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            1. Introduction:\n            <\/span>   \n        <\/font>    \n<\/h2>","0feb3739":"<a id=\"datacleaning\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            4. Data Cleaning\n            <\/span>   \n        <\/font>    \n<\/h2>","8cd1e4da":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.5.4 Region Wise Sales per Genre\n            <\/span>   \n        <\/font>    \n<\/h4>","cd406e3d":"<center><img src = \"https:\/\/i.ibb.co\/GR3mSjR\/Theo-Kate.gif\"><\/center>","161062ec":"<a id=\"inspect\"><\/a>\n<h3 name='libraries'>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            3.2 Inspect Data Frames\n            <\/span>   \n        <\/font>    \n<\/h3>","55793228":"<a id=\"warning\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            2.2 Supress Warnings:\n            <\/span>   \n        <\/font>    \n<\/h3>","eb02cc30":"<p>\n    <span style='font-family:Georgia'>\n        We can impute the years for these games from other rows where the data may exists\n    <\/span>\n<\/p>","7efc7e9f":"<a id=\"import\"><\/a>\n<h2>   \n      <font color = blue >\n            <span style='font-family:Georgia'>\n            3. Reading & Understanding the data\n            <\/span>   \n        <\/font>    \n<\/h2>","1c466c1d":"![](https:\/\/www.tinyprints.com\/inspiration\/wp-content\/uploads\/2019\/02\/thank-you-quotes-1-800x534.jpg)","3daa0a26":"<a id=\"stat\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            5.1 Overall Statistics\n            <\/span>   \n        <\/font>    \n<\/h3>","5bcff8f6":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        We have successfully imputed or removed null values \n    <\/span>\n<\/div>","a02124b8":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        This is an anomoly as the downloaded data is for Year 2017 only. We will remove the row(s) with wrong or null year or we will try to find the real year for those columns.\n    <\/span>\n<\/div>","153f8b68":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        We have successfully imputed the Year column. Now let's change it to an integer column\n    <\/span>\n<\/div>","638db434":"<p>\n    <span style='font-family:Georgia'>\n        Imagine: Makeup Artist game was launched in 16th April, 2009. Thus we will change 2020 to 2009\n    <\/span>\n<\/p>","acdbccc0":"<a id=\"market\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            1.2 Market Overview :\n            <\/span>   \n        <\/font>    \n<\/h3>","820f713d":"<a id=\"python\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            2.1 Import Python Libraries:\n            <\/span>   \n        <\/font>    \n<\/h3>","8553b6bd":"<a id=\"platform\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            5.4 Platform Wise Analysis\n            <\/span>   \n        <\/font>    \n<\/h3>","a2dfd489":"<a id=\"pubimpute\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            4.2 Publisher Imputation\n            <\/span>   \n        <\/font>    \n<\/h3>","78623d15":"<h4>   \n      <font color = darkgreen >\n            <span style='font-family:Georgia'>\n            5.5.6 Publisher wise Game Genre\n            <\/span>   \n        <\/font>    \n<\/h4>","15908259":"<a id=\"nullcal\"><\/a>\n<h3>   \n      <font color = purple >\n            <span style='font-family:Georgia'>\n            3.3 Null Value Calculation\n            <\/span>   \n        <\/font>    \n<\/h3>"}}