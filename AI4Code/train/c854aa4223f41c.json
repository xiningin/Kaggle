{"cell_type":{"6f44bc06":"code","1c869abd":"code","e75bff88":"code","a41c8439":"code","8940421c":"code","1c6297b4":"code","1f202651":"markdown","b40bb395":"markdown","e386de4d":"markdown","320f4aea":"markdown","9d920274":"markdown"},"source":{"6f44bc06":"import numpy as np \nimport pylab \nimport scipy.stats as stats\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","1c869abd":"# gen data1 and data2 --- loc ~ Mean and scale ~ std-dev\n# note: params are different\nstd_normal_data_1k = np.random.normal(loc = 0, scale = 1, size=1000)\nnormal_data_3k = np.random.normal(loc = 20, scale = 100, size=3000)\n\n# generate percentiles\npercentiles_std_norm_data = [np.percentile(std_normal_data_1k,i) for i in range(0,101)]\npercentiles_norm_data = [np.percentile(normal_data_3k,i) for i in range(0,101)]","e75bff88":"# plot percentiles\nplt.scatter(percentiles_std_norm_data, percentiles_norm_data)\n\nplt.xlabel(\"std normal data (1k samples)\")\nplt.ylabel(\"normal data (3k samples)\")\nplt.show()","a41c8439":"# method 2: using stats library\n# check if raw data `normal_data_3k` is `norm` distribures\nstats.probplot(normal_data_3k, dist=\"norm\", plot=pylab)\n\npylab.show()","8940421c":"normal_data_1000 = np.random.normal(loc = 20, scale = 100, size=1000)\nnormal_data_100  = np.random.normal(loc = 20, scale = 100, size=100)\nnormal_data_50   = np.random.normal(loc = 20, scale = 100, size=10)\n\nplt.close()\nstats.probplot(normal_data_1000, dist=\"norm\", plot=pylab)\npylab.show()\n\nplt.close()\nstats.probplot(normal_data_100, dist=\"norm\", plot=pylab)\npylab.show()\n\nplt.close()\nstats.probplot(normal_data_50, dist=\"norm\", plot=pylab)\npylab.show()","1c6297b4":"measurements = np.random.uniform(low=-1, high=1, size=100) \n\n# uniform distribution vs. normal distribution\nstats.probplot(measurements, dist=\"norm\", plot=pylab)\npylab.show()","1f202651":"**Curve changes whith sample size** i.e confidence decreases even if distributions are same!","b40bb395":"- **NOTE**\n\n    - Uses 100 percentiles not quantiles\n    - More visual than numerical\n    - Doesn't work for small smaple size\n    \n    \n- **USES**\n\n    - Checks if two distributions are same\n        - Does **not** check if params of distribution are same\n    - How to interepret\n        - If the plot is straight diagonal line, CDFs match i.e distributions match","e386de4d":"# Quantile Quantile Plot","320f4aea":"> if CDFs(percentiles) of two distributions(PDFs) are same, the distributions are same as well!\n\n- Generate 100 percentiles of data1 and data2\n- Plot scatter plot of percentiles\n- If straight diagonal line, same distribution else, difft. distributiom","9d920274":"#### Different distributions"}}