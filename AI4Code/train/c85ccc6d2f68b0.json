{"cell_type":{"f582342b":"code","eec478dc":"code","7032c825":"code","08f18991":"code","efdccb0b":"code","1a9d4c7d":"code","f48a21fe":"code","0aba29ed":"code","f787e4f8":"code","24a86dc9":"code","e6e29c0e":"code","171771fc":"code","8b18e161":"code","c7fa4d43":"code","8d779222":"code","211cdadf":"code","990b318b":"code","61217ac7":"code","df6b2a0b":"code","a0baacf8":"code","f1dfe78b":"code","76f47b2c":"code","cde5e7db":"code","dffd7061":"code","4ae1810a":"code","da323504":"code","95d61eb8":"code","db314250":"code","6f04ec76":"code","4224462e":"code","554981bc":"code","47809c29":"code","1caadf8e":"code","a88027c7":"code","ecfb1e07":"code","5996da7a":"code","5d9e2124":"code","ee431318":"code","7ff25fee":"code","4ed67b6c":"code","b1e671b6":"code","3bababb7":"code","ab0e2590":"code","656b27be":"code","f493b36d":"code","e9a89cfd":"code","f1649363":"code","cefa52df":"code","e356a373":"code","1d2f4bcb":"code","c9bda193":"code","412d487f":"code","35e71f3a":"code","f05aa6d7":"code","19b082aa":"code","890be0eb":"code","dc842f79":"code","137a0ccb":"code","fa27bfa4":"code","be8d72f8":"code","f8de55b0":"code","ba778cf1":"code","5a015f61":"code","ae1e30ea":"code","4cce0d56":"code","09591c61":"code","c6609244":"code","03c725d4":"code","66713205":"code","4dbb2420":"code","182a4b4d":"code","60f0a1c3":"code","6ca97132":"code","c094d471":"code","7c0936d4":"code","97275fab":"code","dc500dac":"markdown","4dd6378e":"markdown","f82567c4":"markdown","4390d432":"markdown","71fa3856":"markdown","8dda6a78":"markdown","48acfdfd":"markdown","8810eadc":"markdown","d789621f":"markdown","2f81249e":"markdown","d84a8010":"markdown","99968dc5":"markdown"},"source":{"f582342b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","eec478dc":"#Import Ames House Dataset\ndf= pd.read_csv('..\/input\/ames-housing-dataset\/AmesHousing.csv')","7032c825":"df.head()","08f18991":"# Correlation overview:\ndf.corr()['SalePrice'].sort_values()","efdccb0b":"sns.scatterplot(data=df, x='Overall Qual', y='SalePrice')\nplt.axhline(y=200000,color='r')","1a9d4c7d":"df[(df['Overall Qual']>8) &(df['SalePrice']<200000)][['SalePrice', 'Overall Qual']]","f48a21fe":"sns.scatterplot(x='Gr Liv Area', y='SalePrice', data=df)\nplt.axhline(y=200000, color='r')\nplt.axvline(x=4000, color='r')","0aba29ed":"df[(df['Gr Liv Area']>4000) & (df['SalePrice']<400000)][['SalePrice', 'Gr Liv Area']]","f787e4f8":"#Remove the outliers:\nindex_drop=df[(df['Gr Liv Area']>4000) & (df['SalePrice']<400000)].index\ndf=df.drop(index_drop, axis=0)","24a86dc9":"sns.scatterplot(x='Gr Liv Area', y='SalePrice', data=df)\nplt.axhline(y=200000, color='r')\nplt.axvline(x=4000, color='r')","e6e29c0e":"sns.scatterplot(x='Overall Qual', y='SalePrice', data=df)\nplt.axhline(y=200000,color='r')","171771fc":"sns.boxplot(x='Overall Qual', y='SalePrice', data=df)","8b18e161":"df.head()","c7fa4d43":"df.info()","8d779222":"df= df.drop('PID', axis=1)","211cdadf":"df.isnull()","990b318b":"#Make a Function to calculate the percent of missing data in each columns (feature) and then sort it\ndef missing_percent(df):\n    nan_percent= 100*(df.isnull().sum()\/len(df))\n    nan_percent= nan_percent[nan_percent>0].sort_values()\n    return nan_percent","61217ac7":"nan_percent= missing_percent(df)","df6b2a0b":"nan_percent","a0baacf8":"#plot the feature with missing indicating the percent of missing data\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)","f1dfe78b":"#every Feature with missing data must be checked!\n#We choose a threshold of 1%. It means, if there is less than 1% of a feature are missing,\n#then we will consider just dropping that rows\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)\n\n#Set 1% threshold:\nplt.ylim(0,1)","76f47b2c":"nan_percent[nan_percent<1]","cde5e7db":"100\/len(df)\n#It shows that, Feature with just one missing rows has this percent value of missing data","dffd7061":"df[df['Electrical'].isnull()]","4ae1810a":"df[df['Garage Area'].isnull()]","da323504":"df= df.dropna(axis=0, subset=['Electrical', 'Garage Area'])","95d61eb8":"nan_percent= missing_percent(df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)\nplt.ylim(0,1)","db314250":"#Features related to Basement:","6f04ec76":"df[df['Total Bsmt SF'].isnull()]","4224462e":"df[df['Bsmt Half Bath'].isnull()]","554981bc":"df[df['Bsmt Full Bath'].isnull()]","47809c29":"#After checking the data documentation,\n#it shows that missing value (two rows) in Basement Features are becouse of there is no basement in these rows\n#Decision: Filling in data based on column: numerical basement & string descriptive:\n\n#Numerical Columns fill with 0:\nbsmt_num_cols= ['BsmtFin SF 1', 'BsmtFin SF 2', 'Bsmt Unf SF','Total Bsmt SF' ,'Bsmt Full Bath', 'Bsmt Half Bath']\ndf[bsmt_num_cols]=df[bsmt_num_cols].fillna(0)\n\n#String Columns fill with None:\nbsmt_str_cols= ['Bsmt Qual', 'Bsmt Cond', 'Bsmt Exposure', 'BsmtFin Type 1', 'BsmtFin Type 2']\ndf[bsmt_str_cols]= df[bsmt_str_cols].fillna('None')","1caadf8e":"nan_percent= missing_percent(df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)\nplt.ylim(0,1)","a88027c7":"df[\"Mas Vnr Type\"]= df[\"Mas Vnr Type\"].fillna(\"None\")\ndf[\"Mas Vnr Area\"]= df[\"Mas Vnr Area\"].fillna(0)","ecfb1e07":"nan_percent= missing_percent(df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)\n","5996da7a":"df[['Garage Type', 'Garage Yr Blt', 'Garage Finish', 'Garage Qual', 'Garage Cond']]","5d9e2124":"#Filling the missing Value:\nGar_str_cols= ['Garage Type', 'Garage Finish', 'Garage Qual', 'Garage Cond']\ndf[Gar_str_cols]=df[Gar_str_cols].fillna('None')\n\ndf['Garage Yr Blt']=df['Garage Yr Blt'].fillna(0)","ee431318":"nan_percent= missing_percent(df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)\n","7ff25fee":"nan_percent.index","4ed67b6c":"df[['Lot Frontage', 'Fireplace Qu', 'Fence', 'Alley', 'Misc Feature',\n       'Pool QC']]","b1e671b6":"df= df.drop(['Fence', 'Alley', 'Misc Feature','Pool QC'], axis=1)","3bababb7":"nan_percent= missing_percent(df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)","ab0e2590":"#Filling in Fireplace Quality based on dataset documentation:\ndf['Fireplace Qu']= df['Fireplace Qu'].fillna('None')","656b27be":"nan_percent= missing_percent(df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)","f493b36d":"plt.figure(figsize=(8,12))\nsns.boxplot(data=df, x='Lot Frontage', y='Neighborhood')","e9a89cfd":"#Impute missing data based on other columns:\n\ndf.groupby('Neighborhood')['Lot Frontage']","f1649363":"df.groupby('Neighborhood')['Lot Frontage'].mean()","cefa52df":"df.groupby('Neighborhood')['Lot Frontage'].transform(lambda val: val.fillna(val.mean()))","e356a373":"df['Lot Frontage']=df.groupby('Neighborhood')['Lot Frontage'].transform(lambda val: val.fillna(val.mean()))","1d2f4bcb":"nan_percent= missing_percent(df)\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=nan_percent.index, y=nan_percent)\nplt.xticks(rotation=90)","c9bda193":"df['Lot Frontage']= df['Lot Frontage'].fillna(0)","412d487f":"nan_percent= missing_percent(df)\nnan_percent","35e71f3a":"df['MS SubClass']","f05aa6d7":"df.info()","19b082aa":"df['MS SubClass'].unique()","890be0eb":"#Convert to String:\ndf['MS SubClass']= df['MS SubClass'].apply(str)","dc842f79":"\ndf.info()\n#or: df['MS SubClass'].dtype","137a0ccb":"df.select_dtypes(include='object')","fa27bfa4":"df_num= df.select_dtypes(exclude='object')\ndf_obj= df.select_dtypes(include='object')","be8d72f8":"df_num.info()","f8de55b0":"# Converting:\ndf_obj= pd.get_dummies(df_obj, drop_first=True)","ba778cf1":"df_obj.shape","5a015f61":"Final_df= pd.concat([df_num, df_obj], axis=1)","ae1e30ea":"Final_df.head()","4cce0d56":"X = Final_df.drop(['SalePrice'],axis=1)\ny = Final_df['SalePrice']","09591c61":"from sklearn.model_selection import train_test_split","c6609244":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","03c725d4":"from sklearn.linear_model import LinearRegression","66713205":"model = LinearRegression()","4dbb2420":"model.fit(X_train, y_train)","182a4b4d":"y_pred=model.predict(X_test)","60f0a1c3":"print(f'mean of house price is {df[\"SalePrice\"].mean()}')\n\nfrom sklearn import metrics\n\nMAE= metrics.mean_absolute_error(y_test, y_pred)\nMSE= metrics.mean_squared_error(y_test, y_pred)\nRMSE=np.sqrt(MSE)\n\npd.DataFrame([MAE, MSE, RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['Metrics'])","6ca97132":"fig = plt.figure(figsize=(5,5))\nplt.scatter(y_test, y_pred)\nplt.xlabel('Y-Test')\nplt.ylabel('Y-Pred')","c094d471":"test_residuals = y_test - y_pred","7c0936d4":"sns.scatterplot(x=y_test, y=test_residuals)\nplt.axhline(y=0, color='r', ls='--')","97275fab":"sns.displot(test_residuals, bins=25, kde=True, aspect=2, color='purple')","dc500dac":"## 1-convert numerical columns to categorical:\n> We need to be careful when it comes to encoding categorical as numbers. We want to make sure that the numerical relationship makes sense for model. For example, the encoding MSSubClass is essentially just a code per class","4dd6378e":"# 3-Dealing with Categorical Data:\n#### in this step we have to do two things:\n* convert numerical columns to categorical\n* creating dummy variables","f82567c4":"now we dont any missing data.","4390d432":"How many missing data is there in each features?","71fa3856":"# Data Preparation:\n#### in this notebook i used 'AmesHousing' data set to predict the sale price of house with using linear regression. but at first we must prepare our data set for using linear regresion. we will do that in three steps:\n* Dealing with Outliers\n* Dealing with Missing Data\n* Dealing with Categorical Data","8dda6a78":"# 1- Dealing with Outliers:\n#### in this step we will remove the data that is far from the other data. because this data causes an error in our model","48acfdfd":"removing the 'PID' (We already have an index, so we don't need PID unique identifier. \nbecuase it doesn't have any information and can't help our learning models)","8810eadc":"# 2-Dealing with Missing Data:\n## what is missing data? \n>Missing data are values that are not recorded in a dataset. They can be a single value missing in a single cell or missing of an entire observation (row). Missing data can occur both in a continuous variable (e.g. height of students) or a categorical variable (e.g. gender of a population).\n\n#### in this step we try to remove the missing data or fill with estimated data.","d789621f":"## 2-creating dummy variables:\n#### What does it mean to create dummy variables?\n> A dummy variable is a numerical value used to represent categorical data like gender, race, etc. (for example assigning the value 1 for males or 0 for females).\n#### Is one-hot encoding the same as dummy variables?\n>No difference actually. One-hot encoding is the thing you do to create dummy variables. Choosing one of them as the base variable is necessary to avoid perfect multicollinearity among variables.","2f81249e":"# Linear regression:\nnow we use linear regression to predict the SalePrice. for more information about linear regression, you can see [my previous notebook](https:\/\/www.kaggle.com\/rezanematollahi\/linear-regression-real-estate-price-prediction).\n","d84a8010":"## Create and train the model:","99968dc5":"## Split the dataset to train & test:"}}