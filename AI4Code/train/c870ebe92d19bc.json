{"cell_type":{"f034fe4e":"code","e52ede81":"code","c5244c1f":"code","775cbdfc":"code","5acb942a":"code","06b4a530":"code","e30b354e":"code","c32a6651":"code","1514e813":"code","1b06e7b2":"code","166a5f24":"code","d9df40f6":"code","f965f35a":"code","b41c6b2b":"code","9b715db5":"code","642fd673":"code","a8f8304b":"code","bceb6761":"code","a6bfb2a6":"code","e3d66bcb":"code","c570d584":"code","3ebc876e":"code","7c8fabaf":"code","5769f5ed":"code","316c1fe4":"code","005197e8":"code","8e8b3004":"code","801f365d":"code","4d1c35a0":"code","efad7d9b":"markdown","4ebe13b9":"markdown","b39d7bd6":"markdown","114bb220":"markdown","2e33df7b":"markdown","87c2eba8":"markdown","85e8049e":"markdown","41832ad5":"markdown","0e940613":"markdown","b49aede4":"markdown","b57b5818":"markdown","99de3aeb":"markdown"},"source":{"f034fe4e":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import Lasso\nfrom sklearn import metrics","e52ede81":"# loading the data from csv file to pandas dataframe\ncar_dataset = pd.read_csv('..\/input\/used-car\/car data.csv')","c5244c1f":"# inspecting the first 5 rows of the dataframe\ncar_dataset.head()","775cbdfc":"# checking the number of rows and columns\ncar_dataset.shape","5acb942a":"# getting some information about the dataset\ncar_dataset.info()","06b4a530":"# checking the number of missing values\ncar_dataset.isnull().sum()","e30b354e":"# checking the distribution of categorical data\nprint(car_dataset.Fuel_Type.value_counts())\nprint(car_dataset.Seller_Type.value_counts())\nprint(car_dataset.Transmission.value_counts())","c32a6651":"# encoding \"Fuel_Type\" Column\ncar_dataset.replace({'Fuel_Type':{'Petrol':0,'Diesel':1,'CNG':2}},inplace=True)\n\n# encoding \"Seller_Type\" Column\ncar_dataset.replace({'Seller_Type':{'Dealer':0,'Individual':1}},inplace=True)\n\n# encoding \"Transmission\" Column\ncar_dataset.replace({'Transmission':{'Manual':0,'Automatic':1}},inplace=True)","1514e813":"car_dataset.head()","1b06e7b2":"X = car_dataset.drop(['Car_Name','Selling_Price'],axis=1)\nY = car_dataset['Selling_Price']","166a5f24":"print(X)","d9df40f6":"print(Y)","f965f35a":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.1, random_state=2)","b41c6b2b":"# loading the linear regression model\nlin_reg_model = LinearRegression()","9b715db5":"lin_reg_model.fit(X_train,Y_train)","642fd673":"# prediction on Training data\ntraining_data_prediction = lin_reg_model.predict(X_train)","a8f8304b":"# R squared Error\nerror_score = metrics.r2_score(Y_train, training_data_prediction)\nprint(\"R squared Error : \", error_score)","bceb6761":"plt.scatter(Y_train, training_data_prediction)\nplt.xlabel(\"Actual Price\")\nplt.ylabel(\"Predicted Price\")\nplt.title(\" Actual Prices vs Predicted Prices\")\nplt.show()","a6bfb2a6":"# prediction on Training data\ntest_data_prediction = lin_reg_model.predict(X_test)","e3d66bcb":"# R squared Error\nerror_score = metrics.r2_score(Y_test, test_data_prediction)\nprint(\"R squared Error : \", error_score)","c570d584":"plt.scatter(Y_test, test_data_prediction)\nplt.xlabel(\"Actual Price\")\nplt.ylabel(\"Predicted Price\")\nplt.title(\" Actual Prices vs Predicted Prices\")\nplt.show()","3ebc876e":"# loading the linear regression model\nlass_reg_model = Lasso()","7c8fabaf":"lass_reg_model.fit(X_train,Y_train)","5769f5ed":"# prediction on Training data\ntraining_data_prediction = lass_reg_model.predict(X_train)","316c1fe4":"# R squared Error\nerror_score = metrics.r2_score(Y_train, training_data_prediction)\nprint(\"R squared Error : \", error_score)","005197e8":"plt.scatter(Y_train, training_data_prediction)\nplt.xlabel(\"Actual Price\")\nplt.ylabel(\"Predicted Price\")\nplt.title(\" Actual Prices vs Predicted Prices\")\nplt.show()","8e8b3004":"# prediction on Training data\ntest_data_prediction = lass_reg_model.predict(X_test)","801f365d":"# R squared Error\nerror_score = metrics.r2_score(Y_test, test_data_prediction)\nprint(\"R squared Error : \", error_score)","4d1c35a0":"plt.scatter(Y_test, test_data_prediction)\nplt.xlabel(\"Actual Price\")\nplt.ylabel(\"Predicted Price\")\nplt.title(\" Actual Prices vs Predicted Prices\")\nplt.show()","efad7d9b":"# Splitting the data and Target","4ebe13b9":"### Model Evaluation","b39d7bd6":"# Importing the Dependencies","114bb220":"## 1. Linear Regression","2e33df7b":"# Model Training","87c2eba8":"## 2. Lasso Regression","85e8049e":"# Splitting Training and Test data","41832ad5":"# Data Collection and Processing","0e940613":"Visualize the actual prices and Predicted prices","b49aede4":"Visualize the actual prices and Predicted prices","b57b5818":"### Model Evaluation","99de3aeb":"# Encoding the Categorical Data"}}