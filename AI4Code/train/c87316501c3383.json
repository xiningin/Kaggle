{"cell_type":{"445735be":"code","88146eaf":"code","44009484":"code","b594ffb4":"code","d5fd0d73":"code","97f3ca1d":"code","5160fa23":"code","5a5073d6":"code","a85970b7":"code","c94b32a6":"code","db65005c":"markdown","7fa3a36a":"markdown","c5bcc3de":"markdown"},"source":{"445735be":"!pip install git+https:\/\/github.com\/fastai\/fastai2","88146eaf":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom os import listdir\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\nfrom fastai2.basics           import *\nfrom fastai2.medical.imaging  import *\n\nimport pydicom\nimport matplotlib.pyplot as plot\n\nprint('Done!')","44009484":"base_dir = '..\/input\/osic-pulmonary-fibrosis-progression'\nbase_path = Path('..\/input\/osic-pulmonary-fibrosis-progression')\n\n#Can use DICOM metadata explored below (do for each patient) to look at average, max, and min deviation\n#of pixel lightness\/darkness, find outliers that may be useful or not\ntrain_sample_path = base_path\/'train'\n#.ls() is a PyPI method to replace default .dir() method\nfns_trn = base_path.ls()\ntrn_short = fns_trn[:5]\n\n#Work on printing the DICOM images using pyplot","b594ffb4":"df_trn = pd.DataFrame()\ndcm_per_patient = []\n\n#Gets all DICOM metadata\nfor folder in trn_short:\n    folder_contents = folder.ls()\n    num_of_dcms = len(folder_contents)\n    dcm_per_patient.append(num_of_dcms)\n    folder_df = pd.DataFrame.from_dicoms(folder_contents, px_summ=False)\n    df_trn = df_trn.append(folder_df, ignore_index=True)","d5fd0d73":"#total number of patients   \nprint('There are' + str(len(dcm_per_patient)) + ' total patients.')\n#mean\nprint(sum(dcm_per_patient)\/len(dcm_per_patient))\n#median\nprint(dcm_per_patient[round(len(dcm_per_patient)\/2)])\n\ndcm_plt = plt.figure(figsize = (16,8))\ndcm_subplt1 = plt.subplot(1, 2, 1, title='Distribution of DICOM files per patient', xlabel='Number of Files', ylabel='Number of Patients')\ndcm_subplt2 = plt.subplot(1, 2, 2, title='Patients with Less than 100 DICOM files', xlabel='Number of Files', ylabel='Number of Patients')\ndcm_subplt1.hist(dcm_per_patient)\ndcm_subplt2.hist(dcm_per_patient, bins=[0,10,20,30,40,50,60,70,80,90,100])\ndcm_subplt2.set_xlim([0,100])\n\nprint(\"There are x patients with less than 100 DICOM files.\")\nprint(\"There are x patients with greater than 500 DICOM files.\")","97f3ca1d":"train_path = Path('..\/input\/osic-pulmonary-fibrosis-progression\/train.csv')\ntrain_csv = pd.read_csv(train_path)\ntrain_csv.pivot_table(index='Patient')\n\npatient_ids = train_csv['Patient'].unique()","5160fa23":"categorical_df = pd.DataFrame()\nfor id_number in patient_ids:\n    patient_info = train_csv.loc[train_csv['Patient'] == id_number]\n    patient_sex = patient_info.iloc[0]\n    categorical_df = categorical_df.append(patient_sex)","5a5073d6":"fig = px.sunburst(\n    categorical_df,\n    path=['Sex','SmokingStatus'],\n    color_discrete_sequence=[\"#247BA0\", \"#70C1B3\"],\n    title='Percentage of Patients by Sex and Smoking Status')\nfig.update_traces(textinfo='label+percent parent')\nfig.show()\n","a85970b7":"def load_scans(dcm_path):\n    slices = [pydicom.dcmread(dcm_path + \"\/\" + file) for file in listdir(dcm_path)]\n    slices.sort(key = lambda x: float(x.ImagePositionPatient[2]))\n    return slices\n\nsample = base_dir + '\/train\/' + patient_ids[0]\ndcms = load_scans(sample)","c94b32a6":"fig, ax = plt.subplots(1,4,figsize=(20,3))\nax[0].set_title(\"Original CT-scan\")\nax[0].imshow(dcms[0].pixel_array, cmap=\"bone\")\nax[1].set_title(\"Pixelarray distribution\")\nax[1].hist(dcms[0].pixel_array.flatten())","db65005c":"### Packages","7fa3a36a":"# EDA (Exploritory Data Analysis)\n## OSIC Pulmonary Fibrosis Progression Competition","c5bcc3de":"Are certain patients over or under-represented in the dataset? How many "}}