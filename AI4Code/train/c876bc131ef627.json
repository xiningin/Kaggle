{"cell_type":{"7a32ef84":"code","d97ed173":"code","3c2b8c1b":"code","9c756b19":"code","7bdcfe2d":"code","4c54e06a":"code","56931505":"code","5dc36ef7":"code","2621743e":"code","aa6f7901":"code","ee526ff1":"code","ff2b9f98":"code","c90283af":"code","95b6a17a":"code","c0fb3967":"code","4d7445eb":"code","3d2f081c":"markdown","4ca068a3":"markdown","9f220fb4":"markdown"},"source":{"7a32ef84":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d97ed173":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport nltk\nimport seaborn as sns\nfrom nltk.corpus import stopwords\nfrom nltk.tokenize import word_tokenize\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelBinarizer\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import roc_curve\nfrom sklearn.metrics import precision_recall_curve\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.feature_selection import RFE\nimport re\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"","3c2b8c1b":"train = pd.read_csv('\/kaggle\/input\/tamil-nlp\/tamil_news_train.csv')\ntest = pd.read_csv('\/kaggle\/input\/tamil-nlp\/tamil_news_test.csv')","9c756b19":"train.head()\ntest.head()\ntrain.shape\ntest.shape","7bdcfe2d":"train.isnull().any()\ntest.isnull().any()","4c54e06a":"train = train.drop_duplicates().reset_index(drop=True)\ntest = test.drop_duplicates().reset_index(drop=True)\ntrain.shape\ntest.shape","56931505":"stop_words = stopwords.words('english')\n\ntrain.NewsInEnglish = train.NewsInEnglish.str.lower()\ntrain.NewsInEnglish = train.NewsInEnglish.str.replace('[^\\w\\s]',' ')\ntrain.NewsInEnglish = train.NewsInEnglish.str.replace('\\d+', ' ')\ntrain.NewsInEnglish = train.NewsInEnglish.str.replace(' txt', '')\ntrain.NewsInEnglish = train.NewsInEnglish.apply(lambda x: [item for item in [x] if item not in stop_words])\ncount = 0\nfor i in range(len(train.NewsInEnglish)):\n    train.NewsInEnglish[count] = train.NewsInEnglish[count][0].replace('  ', '')\n#     train.NewsInEnglish[count] = train.NewsInEnglish[count][0].split(' ')\n    count = count + 1\n    \ntrain.NewsInTamil = train.NewsInTamil.str.lower()\ntrain.NewsInTamil = train.NewsInTamil.str.replace('[^\\w\\s]',' ')\ntrain.NewsInTamil = train.NewsInTamil.str.replace('\\d+', ' ')\n\ntest.NewsInTamil = test.NewsInTamil.str.lower()\ntest.NewsInTamil = test.NewsInTamil.str.replace('[^\\w\\s]',' ')\ntest.NewsInTamil = test.NewsInTamil.str.replace('\\d+', ' ')\n\ntest.NewsInEnglish = test.NewsInEnglish.str.lower()\ntest.NewsInEnglish = test.NewsInEnglish.str.replace('[^\\w\\s]',' ')\ntest.NewsInEnglish = test.NewsInEnglish.str.replace('\\d+', ' ')\ntest.NewsInEnglish = test.NewsInEnglish.str.replace(' txt', '')\ntest.NewsInEnglish = test.NewsInEnglish.apply(lambda x: [item for item in [x] if item not in stop_words])    \ncount = 0\nfor i in range(len(test.NewsInEnglish)):\n    test.NewsInEnglish[count] = test.NewsInEnglish[count][0].replace('  ', '')\n#     test.NewsInEnglish[count] = test.NewsInEnglish[count][0].split(' ')\n    count = count + 1\n    \ntrain = train.append(test)\ndf = train\ndf.head()\ndf.shape","5dc36ef7":"vect = TfidfVectorizer(ngram_range=(1,1),stop_words='english',min_df=100)\ndtm = vect.fit_transform(df.NewsInEnglish)\ndtm.shape","2621743e":"train_features, test_features, train_labels, test_labels = train_test_split(dtm, df['Category'], test_size=.20)","aa6f7901":"gnb = GaussianNB()\ngnb.fit(train_features.toarray(), train_labels)\nnb_pred_train = gnb.predict(train_features.toarray())\nnb_pred_test = gnb.predict(test_features.toarray())","ee526ff1":"def multiclass_roc_auc_score(truth, pred, average=\"macro\"):\n    lb = LabelBinarizer()\n    lb.fit(truth)\n\n    truth = lb.transform(truth)\n    pred = lb.transform(pred)\n\n    return roc_auc_score(truth, pred, average=average)","ff2b9f98":"print(classification_report(test_labels, nb_pred_test))\nprint('Naive Bayes baseline: ' + str(multiclass_roc_auc_score(train_labels, nb_pred_train)))\nprint('Naive Bayes: ' + str(multiclass_roc_auc_score(test_labels, nb_pred_test)))","c90283af":"vect = TfidfVectorizer(ngram_range=(1,1), min_df=100)\ndtm = vect.fit_transform(df.NewsInTamil)\nvect.get_feature_names()\ndtm.shape","95b6a17a":"train_features, test_features, train_labels, test_labels = train_test_split(dtm, df['CategoryInTamil'], test_size=.20)","c0fb3967":"gnb = GaussianNB()\ngnb.fit(train_features.toarray(), train_labels)\nnb_pred_train = gnb.predict(train_features.toarray())\nnb_pred_test = gnb.predict(test_features.toarray())","4d7445eb":"print(classification_report(test_labels, nb_pred_test))\nprint('Naive Bayes baseline: ' + str(multiclass_roc_auc_score(train_labels, nb_pred_train)))\nprint('Naive Bayes: ' + str(multiclass_roc_auc_score(test_labels, nb_pred_test)))","3d2f081c":"# English Classification","4ca068a3":"# Data cleaning","9f220fb4":"# Tamil classification"}}