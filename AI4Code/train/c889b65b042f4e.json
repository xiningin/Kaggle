{"cell_type":{"c811e049":"code","e1d4d098":"code","d09c4a74":"code","850af22a":"code","5cf5984e":"code","d9262b41":"code","05189a7f":"code","039f724a":"code","8e6b1692":"code","f3bf91cd":"code","9119180b":"code","b4d4cc0f":"code","a8b387e1":"code","c17abe87":"code","1bd68549":"code","ca6367cf":"code","dab1299a":"code","bb97a90a":"code","fa6d0fce":"code","868b7447":"code","ffd136e8":"code","2345d1d1":"code","76749980":"code","842c62bd":"code","f17823b1":"code","e95c97df":"code","84aa009c":"code","40fd3466":"code","900b8ca1":"code","a27fe30f":"code","738a0531":"code","b632ad02":"code","0f11db11":"code","ecc4878f":"code","4ccf6b52":"code","d313c4ac":"code","8ec83be8":"code","09259353":"code","aa2cdf34":"markdown","a8e63b5b":"markdown"},"source":{"c811e049":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e1d4d098":"train1= pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntrain1.head()","d09c4a74":"train1.tail()","850af22a":"train1.shape","5cf5984e":"train1.drop(columns=['PassengerId'], axis=1, inplace=True)\ntrain1.describe()","d9262b41":"print(train1)","05189a7f":"test1= pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntest1.head()","039f724a":"test1.tail()","8e6b1692":"test1.shape","f3bf91cd":"print(train1[[\"Sex\" , \"Survived\"]].groupby([\"Sex\"], as_index=False).mean())","9119180b":"#Correlation\ncorr1= train1.corr()\nprint(corr1)","b4d4cc0f":"import seaborn as sns\nsns.heatmap(corr1)","a8b387e1":"import matplotlib.pyplot as plt\nplt.hist(train1.Survived)\n\nplt.show()","c17abe87":"plt.hist(train1.Pclass)\nplt.show()","1bd68549":"print(train1[[\"Pclass\" , \"Survived\"]].groupby([\"Pclass\"], as_index=False).mean())","ca6367cf":"sns.barplot(train1.Cabin.value_counts().index, train1.Cabin.value_counts())","dab1299a":"train1['Name'] = train1['Name'].map(lambda x: x.split(',')[1].split('.')[0].strip())\nsalutation = train1['Name'].unique()\nsalutation","bb97a90a":"train1['Age'].fillna(-1, inplace=True)\n\nmean1 = dict()\nfor i in salutation:\n    mean = train1.Age[(train1[\"Age\"] != -1) & (train1['Name'] == i)].mean()\n    mean1[i] = mean\n    \nfor index, row in train1.iterrows():\n    if row['Age'] == -1:\n        train1.loc[index, 'Age'] = mean1[row['Name']]\n\ntrain1.head()","fa6d0fce":"train1.describe()","868b7447":"from sklearn.preprocessing import StandardScaler\n\nsal_to_num = {\n    'Don': 0,\n    'Rev': 0,\n    'Jonkheer': 0,\n    'Capt': 0,\n    'Mr': 1,\n    'Dr': 2,\n    'Col': 3,\n    'Major': 3,\n    'Master': 4,\n    'Miss': 5,\n    'Mrs': 6,\n    'Mme': 7,\n    'Ms': 7,\n    'Mlle': 7,\n    'Sir': 7,\n    'Lady': 7,\n    'the Countess': 7\n}\n\ntrain1['Name'] = train1['Name'].apply(lambda x: sal_to_num.get(x))\n\n\ntrain1['Name'] = StandardScaler().fit_transform(train1['Name'].values.reshape(-1, 1))","ffd136e8":"train1['Age'] = StandardScaler().fit_transform(train1['Age'].values.reshape(-1, 1))","2345d1d1":"train1['Pclass'] = StandardScaler().fit_transform(train1['Pclass'].values.reshape(-1, 1))","76749980":"train1.drop(columns=['Ticket'], axis=1, inplace=True)","842c62bd":"train1.describe()","f17823b1":"train1.shape","e95c97df":"train1.drop(columns=['Cabin'], axis =1, inplace=True)","84aa009c":"train1.info()","40fd3466":"from sklearn.preprocessing import LabelEncoder\ntrain1['Sex'] = LabelEncoder().fit_transform(train1['Sex'])","900b8ca1":"train1.drop(columns=['Embarked'], axis=1, inplace=True)","a27fe30f":"train1.info()","738a0531":"train1.shape","b632ad02":"train1.drop(columns=['Survived'], axis=1, inplace=True)","0f11db11":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split","ecc4878f":"X_train, X_test, y_train, y_test = train_test_split(train1,y, test_size=0.2, random_state=4)","4ccf6b52":"print(X_train)","d313c4ac":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()\nmodel.fit(X_train,y_train)","8ec83be8":"predictions = model.predict(X_test)\nfrom sklearn.metrics import classification_report\nprint(classification_report(y_test, predictions))","09259353":"score = model.score(X_test, y_test)\nprint(score)","aa2cdf34":"train1.info()","a8e63b5b":"This is my first project on Kaggle-- Titanic Disaster."}}