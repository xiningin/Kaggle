{"cell_type":{"6e76326d":"code","b87c3b3b":"code","71074068":"code","fccf8beb":"code","e0d050af":"code","75468c43":"code","03a0cdec":"code","d9f63785":"code","59c8bb67":"code","eb216d85":"code","f491cb4d":"code","0352627b":"code","bfc93237":"code","ae23f440":"code","b72eaecc":"code","98002106":"code","097eec3b":"markdown","c4c00dec":"markdown","73dce4e3":"markdown","92e4866c":"markdown","5a0f940d":"markdown","7367d5c4":"markdown","8c70d61d":"markdown","dbc2c936":"markdown"},"source":{"6e76326d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b87c3b3b":"data = pd.read_csv(\"..\/input\/serp_flights.csv\")\ndata.head()","71074068":"data.describe()","fccf8beb":"import missingno as msno\nmsno.matrix(data)\nplt.show()","e0d050af":"data.isnull().sum()","75468c43":"new_data = data[['searchTerms','title','snippet','displayLink','queryTime','formattedSearchTime']]\nnew_data.head()","03a0cdec":"import missingno as msno\nmsno.matrix(new_data)\nplt.show()","d9f63785":"new_data.isnull().sum()","59c8bb67":"websites_count = data['displayLink'].value_counts()\nwebsites_count","eb216d85":"new_data['WebsiteCounts'] = new_data.groupby(['displayLink'])['formattedSearchTime'].transform('count')\nnew_data.head()","f491cb4d":"new_data = new_data.rename(columns={'displayLink':'Website'})\nnew_data.head()","0352627b":"from plotly import tools\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom IPython.display import HTML, Image","bfc93237":"colors = {\n    \"Bug\": \"#A6B91A\",\n    \"Dark\": \"#705746\",\n    \"Dragon\": \"#6F35FC\",\n    \"Electric\": \"#F7D02C\",\n    \"Fairy\": \"#D685AD\",\n    \"Fighting\": \"#C22E28\",\n    \"Fire\": \"#EE8130\",\n    \"Flying\": \"#A98FF3\",\n    \"Ghost\": \"#735797\",\n    \"Grass\": \"#7AC74C\",\n    \"Ground\": \"#E2BF65\",\n    \"Ice\": \"#96D9D6\",\n    \"Normal\": \"#A8A77A\",\n    \"Poison\": \"#A33EA1\",\n    \"Psychic\": \"#F95587\",\n    \"Rock\": \"#B6A136\",\n    \"Steel\": \"#B7B7CE\",\n    \"Water\": \"#6390F0\",\n}","ae23f440":"data = go.Bar(\n    x=new_data['Website'][:20],\n    y=new_data['WebsiteCounts'][:20],\n    marker=dict(\n        color=list(colors.values())\n    ),\n\n)\n\nlayout = go.Layout(\n    title='Webiste Counts',\n    xaxis=dict(\n        title='Webistes'\n    ),\n    yaxis=dict(\n        title='Webistes Count'\n    )\n)\n\nfig = go.Figure(data=[data], layout=layout)\niplot(fig, filename='Webiste Counts')","b72eaecc":"new_data['title'].value_counts()","98002106":"new_data['searchTerms'].value_counts()","097eec3b":"#### Do Upvote and share if you like this\n### Thank You","c4c00dec":"### Adding new column of 'WebsiteCounts'","73dce4e3":"## Most Searched Website with its count while booking a ticket","92e4866c":"### Counting the number of different Websites used in the dataset","5a0f940d":"### Renaming the name of the column","7367d5c4":"### Noisy data or missing data is removed by removing the column of it \n","8c70d61d":"## Visualization","dbc2c936":"#### This is for visualizing missing data\nHere's some noise in the data"}}