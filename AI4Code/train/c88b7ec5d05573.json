{"cell_type":{"8ec24c8a":"code","1f8a3e47":"code","cc70c23b":"code","16d2e4da":"code","03031b17":"code","09226912":"code","2da91711":"code","2d79150d":"code","6b39ba80":"code","0331bb5a":"code","9888cc45":"code","56daf263":"code","135edea9":"code","b172fdd4":"code","763b3a32":"code","decb84f3":"markdown","e33978da":"markdown","f77ac016":"markdown","8cd3ef63":"markdown","0f80bfc2":"markdown","d12dc451":"markdown","fb3095d0":"markdown","90c2bd63":"markdown","c5f5c733":"markdown","b93c2ad5":"markdown","0139e965":"markdown","0bece78c":"markdown","774d7c75":"markdown","e1c34ab8":"markdown","2fc4a1e6":"markdown","a1c0db27":"markdown","59a25601":"markdown","7935b370":"markdown","62247bb9":"markdown","a13933f2":"markdown"},"source":{"8ec24c8a":"!pip install openpyxl\n!pip install pywaffle","1f8a3e47":"import numpy as np \nimport pandas as pd \nfrom plotnine import *\nfrom plotnine.data import mpg\nfrom plotnine import options as op\nfrom plotnine import watermark as wm\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\nimport geopandas as gpd\nimport random\nfrom pywaffle import Waffle\nimport collections","cc70c23b":"unicorn_data = pd.read_excel('\/kaggle\/input\/list-of-unicorn-companies\/uniorn_companies.xlsx')\nunicorn_data = unicorn_data.dropna(axis=1,how='all')\nprint('Null Values in Columns:')\nunicorn_data.isnull().sum()","16d2e4da":"import collections\ninvestor_list = list(unicorn_data['Select Investors'])\ninvestors = []\nfor ele in investor_list:\n    try:\n        investors.append(ele.split(','))\n    except:\n        investors.append(ele)\n\ninvestors_full = []\nfor sublist in investors:\n    try:\n        for item in sublist:\n            if len(item) != 0:\n                investors_full.append(item.strip())\n    except:\n        continue\n\noccurences = {k: v for k, v in sorted(dict(collections.Counter(investors_full)).items(), key=lambda item: item[1], reverse=True)}\noccurences_dict = {'company_name':['Sequoia Capital','Tencent Holdings', 'Accel'],'total_companies_invested':[60,25,23]}\noccurences_df = pd.DataFrame.from_dict(occurences_dict)","03031b17":"op.figure_size=(5,5)\nax = (ggplot(occurences_df)         \n + aes(x='company_name', y='total_companies_invested',fill='company_name')    \n + geom_col(size=15)\n + scale_fill_manual(values = [\"#FFC133\",\"#FD02A5\",\"#F03812\"])\n + labs(title = \"Top 3 Unicorn Investment Groups\")\n + labs(y = \"Number of Companies\", x = \"Investement Group\")\n + theme(\n    panel_background = element_rect(fill = \"black\"),    \n    plot_background = element_rect(fill = \"black\", color = \"black\"),\n    legend_background = element_rect(fill = \"black\"),\n    legend_key = element_blank(),\n     \n    panel_grid = element_line(size = 0.01),\n    panel_grid_minor_y = element_blank(),\n    panel_grid_major_y = element_blank(),\n    \n    legend_text = element_text(color = \"white\", size=13,face='bold'),\n    axis_text_x = element_text(color = \"white\", size = 13,angle=345,face='bold'),\n    axis_text_y = element_text(color = \"white\", size = 13, hjust = 1, margin={'b': 20, 't':10}),\n    axis_title = element_text(color = \"white\", size = 14, hjust = 1,face = \"bold\"),\n    plot_title = element_text(color = \"white\", face = \"bold\", size = 12, hjust = 4, margin={'b': 20, 't':10}),\n    panel_spacing_x = 1\n  )\n)\n\n\nfig = ax.draw()\n\naccel = plt.imread('https:\/\/raw.githubusercontent.com\/vineethbabu\/unicorn_project_images\/main\/accel_1_70x55.png')\ntencent = plt.imread('https:\/\/raw.githubusercontent.com\/vineethbabu\/unicorn_project_images\/main\/tencent_70x55.png')\nsequio = plt.imread('https:\/\/raw.githubusercontent.com\/vineethbabu\/unicorn_project_images\/main\/sequio_70x55.png')\nfig.figimage(accel, xo=100, yo=201, alpha=1, norm=None, cmap=None, vmin=None, vmax=None, origin=None, resize=False)\nfig.figimage(tencent, xo=341, yo=212, alpha=1, norm=None, cmap=None, vmin=None, vmax=None, origin=None, resize=False)\nfig.figimage(sequio, xo=222, yo=417, alpha=1, norm=None, cmap=None, vmin=None, vmax=None, origin=None, resize=False)\nfig.show()","09226912":"date_creation_df = unicorn_data[['Company','Date Added']]\ndate_creation_df = pd.DataFrame(date_creation_df.groupby('Date Added')['Company'].apply(list))\ndate_creation_df.reset_index(level=0,inplace=True)\nfor i in range(date_creation_df.shape[0]):\n    date_creation_df['Company'].iloc[i] = len(date_creation_df['Company'].iloc[i])\n\ndate_creation_df = pd.DataFrame(date_creation_df.groupby(date_creation_df['Date Added'].map(lambda x: x.year), as_index=False))\ndate_creation_df.columns = ['year','company']\n\nfor i in range(date_creation_df.shape[0]):\n    date_creation_df['company'].iloc[i] = date_creation_df['company'].iloc[i]['Company'].sum()\ndate_creation_df['company'] = date_creation_df['company'].astype(int)\ndate_creation_df['year'] = date_creation_df['year'].astype(int)\n\nop.figure_size=(8,5)\nax = (\n    ggplot(date_creation_df, aes(x='year', y='company'))\n    + geom_line()\n    + geom_area(fill = \"royalblue\", alpha = 0.8)\n    + labs(x='Year', y='No. of Unicorn Companies')\n    + theme(\n    panel_background = element_rect(fill = \"black\"),    \n    plot_background = element_rect(fill = \"black\", color = \"black\"),\n    legend_background = element_rect(fill = \"black\"),\n    legend_key = element_blank(),\n   \n    panel_grid = element_line(size = 0.01),\n    panel_grid_minor_y = element_blank(),\n    panel_grid_major_y = element_blank(),\n    \n    legend_text = element_text(color = \"white\"),\n    axis_text_x = element_text(color = \"white\", size = 10),\n    axis_text_y = element_text(color = \"white\", size = 10, hjust = 8, margin={'b': 20, 't':10}),\n    axis_title = element_text(color = \"white\", size = 14, hjust = 4),\n    plot_title = element_text(color = \"white\", face = \"bold\", size = 16, hjust = 4, margin={'b': 20, 't':10}),\n    panel_spacing_x = 1\n  )\n\n)\n\nfig = ax.draw()\n\nimage = plt.imread('https:\/\/raw.githubusercontent.com\/vineethbabu\/unicorn_project_images\/main\/unicorn_5.png')\n\nfig.figimage(image, xo=60, yo=200, alpha=1, norm=None, cmap=None, vmin=None, vmax=None, origin=None, resize=False)\n\nfig.show()","2da91711":"date_country_df = unicorn_data[['Country','Date Added']]\ndate_country_df = pd.DataFrame(date_country_df.groupby('Date Added')['Country'].apply(list))\ndate_country_df = date_country_df.reset_index()\ndate_country_df = pd.DataFrame(date_country_df.groupby(date_country_df['Date Added'].map(lambda x: x.year), as_index=False))\n\nyear_country_dict = {}\nfor i in range(date_country_df.shape[0]):\n    year_country = list(date_country_df[1].iloc[i]['Country'])\n    year_country_flat = [item for sublist in year_country for item in sublist]\n    year_country_dict.update({date_country_df[0].iloc[i]:dict(collections.Counter(year_country_flat))})\n\nselect_countries = ['United States','India','United Kingdom','China','Germany']\nten_15_countries_unicorns = {'United States':[],'India':[],'United Kingdom':[],'China':[],'Germany':[]}\nfifteen_21_countries_unicorns = {'United States':[],'India':[],'United Kingdom':[],'China':[],'Germany':[]}\n\nfor k,v in year_country_dict.items():\n    if k>2010 and k<=2015:\n        for key,value in v.items():\n            if key=='United States':\n                ten_15_countries_unicorns['United States'].append(value)\n            elif key == 'India':\n                ten_15_countries_unicorns['India'].append(value)\n            elif key == 'United Kingdom':\n                ten_15_countries_unicorns['United Kingdom'].append(value)\n            elif key == 'China':\n                ten_15_countries_unicorns['China'].append(value)\n            elif key == 'Germany':\n                ten_15_countries_unicorns['Germany'].append(value)\n    if k>2015 and k<=2021:\n        for key,value in v.items():\n            if key=='United States':\n                fifteen_21_countries_unicorns['United States'].append(value)\n            elif key == 'India':\n                fifteen_21_countries_unicorns['India'].append(value)\n            elif key == 'United Kingdom':\n                fifteen_21_countries_unicorns['United Kingdom'].append(value)\n            elif key == 'China':\n                fifteen_21_countries_unicorns['China'].append(value)\n            elif key == 'Germany':\n                fifteen_21_countries_unicorns['Germany'].append(value)     \n\n\nfor k, v in ten_15_countries_unicorns.items():\n    if k == 'United States':\n        ten_15_countries_unicorns['United States'] = [sum(ten_15_countries_unicorns['United States'])]\n    if k == 'China':\n        ten_15_countries_unicorns['China'] = [sum(ten_15_countries_unicorns['China'])]\n    if k == 'India':\n        ten_15_countries_unicorns['India'] = [sum(ten_15_countries_unicorns['India'])]\n    if k == 'United Kingdom':\n        ten_15_countries_unicorns['United Kingdom'] = [sum(ten_15_countries_unicorns['United Kingdom'])]\n    if k == 'Germany':\n        ten_15_countries_unicorns['Germany'] = [sum(ten_15_countries_unicorns['Germany'])]\n        \nfor k, v in fifteen_21_countries_unicorns.items():\n    if k == 'United States':\n        fifteen_21_countries_unicorns['United States'] = [sum(fifteen_21_countries_unicorns['United States'])]\n    if k == 'China':\n        fifteen_21_countries_unicorns['China'] = [sum(fifteen_21_countries_unicorns['China'])]\n    if k == 'India':\n        fifteen_21_countries_unicorns['India'] = [sum(fifteen_21_countries_unicorns['India'])]\n    if k == 'United Kingdom':\n        fifteen_21_countries_unicorns['United Kingdom'] = [sum(fifteen_21_countries_unicorns['United Kingdom'])]\n    if k == 'Germany':\n        fifteen_21_countries_unicorns['Germany'] = [sum(fifteen_21_countries_unicorns['Germany'])]\n\nten_15_df = pd.DataFrame.from_dict(ten_15_countries_unicorns,orient='index')\nfifteen_21_df = pd.DataFrame.from_dict(fifteen_21_countries_unicorns,orient='index')\nfive_year_plot = pd.DataFrame(columns = ['country','2010-2015','2015-2021'])\nfive_year_plot['2010-2015'] =  ten_15_df[0].values\nfive_year_plot['2015-2021'] =  fifteen_21_df[0].values + ten_15_df[0].values\nfive_year_plot['country'] = select_countries\n\nfive_year_plot['period_1'] = ['2010-2015']*5\nfive_year_plot['period_2'] = ['2015-2021']*5\nfive_year_plot = five_year_plot.set_index('country')\nfive_year_plot","2d79150d":"# code inspired from - https:\/\/www.kaggle.com\/joshuaswords\/awesome-eda-2021-happiness-population\nplt.style.use('dark_background')\nlow_c = \"#0161FF\"\nhigh_c = '#D901FF'\nplt.rcParams[\"font.family\"] = 'sans-serif'\n\nfig = plt.figure(figsize=(5,5),dpi=150)\ngs = fig.add_gridspec(1, 1)\ngs.update(wspace=0.05, hspace=0.27)\nax0 = fig.add_subplot(gs[0, 0])\n\n\nvalue1= five_year_plot['2010-2015']\nvalue2=five_year_plot['2015-2021']\n\nordered_df = five_year_plot.sort_values(by='2015-2021')\nmy_range=range(1,len(ordered_df.index)+1)\n \n\n\nplt.hlines(y=my_range, xmin=ordered_df['2010-2015'], xmax=ordered_df['2015-2021'], color='lightgray', alpha=0.4)\nplt.scatter(ordered_df['2010-2015'], my_range, color=low_c, alpha=1, ec='black',label='2010-2015',s=150)\nplt.scatter(ordered_df['2015-2021'], my_range, color=high_c, alpha=1 , ec='black', label='2015-2021',s=150)\n\n# ax0.set_xticklabels([])\n# ax0.set_yticklabels([])\n\n\nfor i in range(5):\n    ax0.annotate(list(ordered_df.index)[i], \n                   xy=((ordered_df[[\"2010-2015\", \"2015-2021\"]].max(axis=1)[i]+0.3),i+0.6), \n                   va = 'bottom', ha='left',fontweight='light', fontfamily='sans-serif',fontsize=8, color='white',rotation=0)\n\n\n\n# Xstart, Xend = ax0.get_xlim()\nax0.xaxis.set_ticks(np.arange(0, 320, 50))\nax0.yaxis.set_ticks(np.arange(0, 6, 1))\n\n\n\nfor s in ['top','left','bottom','right']:\n    ax0.spines[s].set_visible(False)\n    \n\nax0.set_xlabel(\"Number of Unicorns\",fontfamily='sans-serif',color='white')\nax0.tick_params(axis = 'both', which = 'major', labelsize = 8, color='white')\n    \nax0.tick_params(axis='both', which='both',left=False,labelbottom=True,color='white',length=0) \n\n\nL = ax0.legend(frameon=False,loc=\"center right\", ncol= 1,facecolor='white')\nplt.setp(L.texts, family='sans-serif',color='white')\nL.get_frame().set_facecolor('none')\nfig.text(0.40,0.3,'USA had 794% increase in unicorns',fontfamily='monospace',fontsize=10,color='white',bbox={'facecolor': '#B21236', 'alpha': 0.5, 'pad': 5})\nfig.text(0.40,0.242,'China had 527% increase in unicorns',fontfamily='monospace',fontsize=10,color='white',bbox={'facecolor': '#B21236', 'alpha': 0.5, 'pad': 5})\n\nplt.show()","6b39ba80":"top_100_companies = unicorn_data[['Company','Category','Valuation ($B) ']].sort_values(by=['Valuation ($B) '],ascending=False).head(15)\nop.figure_size=(8,8)\nax = (ggplot(top_100_companies)         \n + aes(x='Company', y='Valuation ($B) ', fill='Category')    \n + geom_col(size=6)\n + geom_label(aes(label = 'Valuation ($B) ',fill='Category'),ha='right',color = \"white\",label_padding= 0.7)\n + coord_flip()\n + scale_fill_manual(values = [\"#B21236\",\"#723240\",\"#FE8826\",\"#FEB914\",\"#2C9FA2\",\"#002C2B\",\"#275A75\",\"#0376B3\", \"#B3039E\"])\n + labs(title = \"Top 15 Companies based on Valuation\")\n + labs(y = \"Valuation in Billions\", x = \"Company Name\")\n + theme(\n    panel_background = element_rect(fill = \"black\"),    \n    plot_background = element_rect(fill = \"black\", color = \"black\"),\n    legend_background = element_rect(fill = \"black\"),\n    legend_key = element_blank(),\n   \n    panel_grid = element_line(size = 0.3),\n    panel_grid_minor_y = element_blank(),\n    panel_grid_major_y = element_blank(),\n    \n    legend_text = element_text(color = \"white\",face = \"bold\"),\n    axis_text_x = element_text(color = \"white\", size = 10,face = \"bold\"),\n    axis_text_y = element_text(color = \"white\", size = 10, hjust = 1, margin={'b': 20, 't':10},face = \"bold\"),\n    axis_title = element_text(color = \"white\", size = 14, hjust = 1,face = \"bold\"),\n    plot_title = element_text(color = \"white\", face = \"bold\", size = 16, hjust = 4, margin={'b': 20, 't':10}),\n    panel_spacing_x = 1\n  )\n)\n\nfig = ax.draw()\n\nfig.show()","0331bb5a":"date_creation_df = unicorn_data[['Date Added','Company','Valuation ($B) ', 'Category']]\ndate_creation_df.reset_index(level=0,inplace=True)\ndate_creation_df['Date Added'] = pd.to_datetime(date_creation_df['Date Added'], format='%m%d%y') \n\nnow = pd.Timestamp('now')\ndate_creation_df['Date Added'] = date_creation_df['Date Added'].where(date_creation_df['Date Added'] < now, date_creation_df['Date Added'] -  np.timedelta64(100, 'Y')) \n\ndate_creation_df['age'] = (now - date_creation_df['Date Added']).astype('<m8[Y]')\ndate_creation_df = date_creation_df.sort_values(by=['age'],ascending=False)\ndate_creation_df.reset_index()\ndate_creation_df = date_creation_df.drop(columns=['index'],axis=1)\ndate_creation_df.reset_index(level=0,inplace=True)\ndate_creation_df = date_creation_df.drop(columns=['index'],axis=1)\ndate_creation_df = date_creation_df.sort_values(by=['Valuation ($B) '],ascending=False).head(15)\ndate_creation_df.reset_index(level=0,inplace=True)\n\ntop_15_companies_age_valuation = pd.DataFrame(columns=['company','count','valuation_age'])\ntop_15_companies_age_valuation['company'] = ['']*date_creation_df.shape[0]*2\ntop_15_companies_age_valuation['count'] = ['']*date_creation_df.shape[0]*2\ntop_15_companies_age_valuation['valuation_age'] = ['']*date_creation_df.shape[0]*2\nj = 0\nfor i in range(date_creation_df.shape[0]):\n    top_15_companies_age_valuation['company'].iloc[j] = date_creation_df['Company'].iloc[i]\n    top_15_companies_age_valuation['company'].iloc[j+1] = date_creation_df['Company'].iloc[i]\n    top_15_companies_age_valuation['valuation_age'].iloc[j] = 'Valuation'\n    top_15_companies_age_valuation['count'].iloc[j] = date_creation_df['Valuation ($B) '].iloc[i]\n    top_15_companies_age_valuation['valuation_age'].iloc[j+1] = 'age'\n    top_15_companies_age_valuation['count'].iloc[j+1] = date_creation_df['age'].iloc[i]\n    j=j+2\n\nop.figure_size=(8,5)\nax = (ggplot(top_15_companies_age_valuation)         \n + aes(x='company', y='count',fill='valuation_age')    \n + geom_col(size=20)\n + scale_fill_manual(values = [\"#FE8826\",\"#F7E1C0\"])\n + labs(title = \"Top 15 Companies Valuation and Age of Unicorn Status\")\n + labs(y = \"Valuation in $B; Age in Years\", x = \"Company\")\n + theme(\n    panel_background = element_rect(fill = \"black\"),    \n    plot_background = element_rect(fill = \"black\", color = \"black\"),\n    legend_background = element_rect(fill = \"black\"),\n    legend_key = element_blank(),\n   \n    panel_grid = element_line(size = 0.3),\n    panel_grid_minor_y = element_blank(),\n    panel_grid_major_y = element_blank(),\n    \n    legend_text = element_text(color = \"white\",size = 10,face = \"bold\"),\n    axis_text_x = element_text(color = \"white\", size = 13,angle=90,face = \"bold\"),\n    axis_text_y = element_text(color = \"white\", size = 13, hjust = 1, margin={'b': 20, 't':10},face = \"bold\"),\n    axis_title = element_text(color = \"white\", size = 14, hjust = 1,face = \"bold\"),\n    plot_title = element_text(color = \"white\", face = \"bold\", size = 16, hjust = 4, margin={'b': 20, 't':10}),\n    panel_spacing_x = 1\n  )\n)\n\nfig = ax.draw()\n\nfig.show()","9888cc45":"country_unicorns = pd.DataFrame(unicorn_data.groupby('Country', as_index=False)['Company'])\ncountry_unicorn_scatter = pd.DataFrame(columns=['age','valuation'])\nage_list = []\nfor i in range(country_unicorns.shape[0]):\n    if country_unicorns[0].iloc[i] == 'United States':\n        now = pd.Timestamp('now')\n        start_data = pd.to_datetime(country_unicorns[1].iloc[i]['Date Added'], format='%m%d%y')\n        age = (now - start_data).astype('<m8[Y]')\n        df = pd.DataFrame({'age':age,'valuation':country_unicorns[1].iloc[i]['Valuation ($B) '],'country':'United States'})\n        country_unicorn_scatter = country_unicorn_scatter.append(df)\n    elif country_unicorns[0].iloc[i] == 'United Kingdom':\n        now = pd.Timestamp('now')\n        start_data = pd.to_datetime(country_unicorns[1].iloc[i]['Date Added'], format='%m%d%y')\n        age = (now - start_data).astype('<m8[Y]')\n        df = pd.DataFrame({'age':age,'valuation':country_unicorns[1].iloc[i]['Valuation ($B) '],'country':'United Kingdom'})\n        country_unicorn_scatter = country_unicorn_scatter.append(df)\n    elif country_unicorns[0].iloc[i] == 'China':\n        now = pd.Timestamp('now')\n        start_data = pd.to_datetime(country_unicorns[1].iloc[i]['Date Added'], format='%m%d%y')\n        age = (now - start_data).astype('<m8[Y]')\n        df = pd.DataFrame({'age':age,'valuation':country_unicorns[1].iloc[i]['Valuation ($B) '],'country':'China'})\n        country_unicorn_scatter = country_unicorn_scatter.append(df)\n    elif country_unicorns[0].iloc[i] == 'India':\n        now = pd.Timestamp('now')\n        start_data = pd.to_datetime(country_unicorns[1].iloc[i]['Date Added'], format='%m%d%y')\n        age = (now - start_data).astype('<m8[Y]')\n        df = pd.DataFrame({'age':age,'valuation':country_unicorns[1].iloc[i]['Valuation ($B) '],'country':'India'})\n        country_unicorn_scatter = country_unicorn_scatter.append(df)   \ncountry_unicorn_scatter.reset_index()     \ncountry_unicorn_scatter['age'] = country_unicorn_scatter['age'].astype(int)\ncountry_unicorn_scatter['valuation'] = country_unicorn_scatter['valuation'].astype(int)\n\nop.figure_size=(8, 8)\np = (ggplot(country_unicorn_scatter)         \n + aes(y='valuation', x='age',fill='country')    \n + geom_jitter() \n + facet_wrap('country')\n + scale_color_manual(values = [\"#B21236\",\"#F03812\",\"#FE8826\",\"#FEB914\"])\n + labs(title = \"Age of Unicorn Status vs Valuation for USA, UK, China, India\")\n + labs(y = \"Valuation in $B\", x = \"No of years since unicorn status\")\n + theme(\n    panel_background = element_rect(fill = \"black\"),    \n    plot_background = element_rect(fill = \"black\", color = \"black\"),\n    legend_background = element_rect(fill = \"black\"),\n    legend_key = element_blank(),\n   \n    panel_grid = element_line(size = 0.1),\n    panel_grid_minor_y = element_blank(),\n    panel_grid_major_y = element_blank(),\n    \n    legend_text = element_text(color = \"white\"),\n    axis_text_x = element_text(color = \"white\", size = 10,face = \"bold\"),\n    axis_text_y = element_text(color = \"white\", size = 10,face = \"bold\"),\n    axis_title = element_text(color = \"white\", size = 14, hjust = 1,face = \"bold\"),\n    plot_title = element_text(color = \"white\", face = \"bold\", size = 16, hjust = 4, margin={'b': 20, 't':10}),\n    panel_spacing_x = 1\n  )\n)\n\nfig = p.draw()\n\nfig.show()","56daf263":"sector_value = pd.DataFrame(unicorn_data.groupby('Category')['Valuation ($B) '].apply(list))\nsector_value.reset_index(level=0,inplace=True)\n\nsector_valuation_df = pd.DataFrame(columns=['Category','Valuation ($B) '])\nfor i in range(sector_value.shape[0]):\n    if sector_value['Category'].iloc[i] == 'Data management & analytics<':\n        df = pd.DataFrame({'Category':[sector_value['Category'].iloc[i].strip('<')]*len(sector_value['Valuation ($B) '].iloc[i]),'Valuation ($B) ':sector_value['Valuation ($B) '].iloc[i]})\n        sector_valuation_df = sector_valuation_df.append(df)\n    else:\n        df = pd.DataFrame({'Category':[sector_value['Category'].iloc[i]]*len(sector_value['Valuation ($B) '].iloc[i]),'Valuation ($B) ':sector_value['Valuation ($B) '].iloc[i]})\n        sector_valuation_df = sector_valuation_df.append(df)\nop.figure_size=(8, 8)\n\nax = (ggplot(sector_valuation_df)         \n + aes(x='Category', y='Valuation ($B) ', fill='Category')    \n + geom_boxplot(outlier_colour  = 'white')\n#  + scale_fill_brewer(type='qual' ,palette = 7)\n + labs(title = \"Category Wise Distribution of Valuation\")\n + labs(x = \"Category\", y = \"Valuation in Billions\")\n + scale_fill_manual(values = [\"#B21236\",\"#723240\",\"#FE8826\",\"#FEB914\",\"#2C9FA2\",\"#002C2B\",\"#275A75\",\"#0376B3\", \"#B3039E\",\"#24C0CA\",\"#24CA5B\",\"#D5C612\",\n                               \"#8212D5\",\"#7FD512\",\"#D54412\",\"#4600A4\"])\n + coord_flip()\n + theme(\n    panel_background = element_rect(fill = \"black\"),    \n    plot_background = element_rect(fill = \"black\", color = \"black\"),\n    legend_background = element_rect(fill = \"black\"),\n    legend_key = element_blank(),\n   \n    panel_grid = element_line(size = 0.1),\n    panel_grid_minor_y = element_blank(),\n    panel_grid_major_y = element_blank(),\n    \n    legend_text = element_text(color = \"white\",face = \"bold\"),\n    axis_text_x = element_text(color = \"white\", size = 10,face = \"bold\"),\n    axis_text_y = element_text(color = \"white\", size = 10, hjust = 1, margin={'b': 20, 't':10},face = \"bold\"),\n    axis_title = element_text(color = \"white\", size = 14, hjust = 'center',face = \"bold\"),\n    plot_title = element_text(color = \"white\", face = \"bold\", size = 16, hjust = 4, margin={'b': 20, 't':10}),\n    panel_spacing_x = 1\n  )\n      \n)\nfig = ax.draw()\nfig.show()","135edea9":"countries_count = pd.DataFrame(unicorn_data.groupby('Country')['Company'])\ncountries_count['unicorn_count'] = ['']*countries_count.shape[0]\ncountries_count['geometry'] = ['']*countries_count.shape[0]\nfor i in range(countries_count.shape[0]):\n    countries_count['unicorn_count'].iloc[i] = countries_count[1].iloc[i].shape[0]\n    \ncountries_count = countries_count[[0,'unicorn_count','geometry']]\ncountries_count.columns = ['NAME','unicorn_count','geometry']\n\nfile = '..\/input\/countries-geometry\/1-introData\/countries.gpkg'\nworld = gpd.read_file(file)\n\nfor i in range(countries_count.shape[0]):\n    country_geom = world[(world.NAME==countries_count['NAME'].iloc[i])]['geometry']\n    if not country_geom.empty:\n        geom = world[(world.NAME==countries_count['NAME'].iloc[i])]['geometry']\n        countries_count['geometry'].iloc[i] = geom.values[0][0]\n    elif countries_count['NAME'].iloc[i] == 'United States':\n        geom = world[(world.NAME=='United States of America')]['geometry']\n        countries_count['geometry'].iloc[i] = geom.values[0][0]\n        \nfrom IPython.display import HTML\nHTML(countries_count[['NAME','unicorn_count']].to_html(index=False))\n","b172fdd4":"fig1 = plt.figure(figsize=(4, 1),dpi=150,facecolor='#fafafa',\n    FigureClass=Waffle,\n    rows=1,\n    values=[5, 5],\n    colors=['#0161FF', \"lightgray\"],\n    icons='horse',\n    font_size=20,vertical=False,\n)\n\nfig1.text(0,1,'Nearly Five in every Ten Unicorns are from USA',fontfamily='monospace',fontsize=10,color='black')\n\nfig2 = plt.figure(figsize=(5, 1),dpi=150,facecolor='#fafafa',\n    FigureClass=Waffle,\n    rows=2,\n    values=[4, 16],\n    colors=['#D5C612', \"lightgray\"],\n    icons='horse',\n    font_size=20,vertical=True,\n)\n\nfig2.text(0,1,'Nearly Four in every Twenty Unicorns are from China',fontfamily='monospace',fontsize=10,color='black')\n\nfig3 = plt.figure(figsize=(5, 2),dpi=150,facecolor='#fafafa',\n    FigureClass=Waffle,\n    rows=4,\n    values=[2, 38],\n    colors=['#24CA5B', \"lightgray\"],\n    icons='horse',\n    font_size=20,vertical=True,\n)\nfig3.text(0,1,'Nearly Two in every Forty Unicorns are from UK',fontfamily='monospace',fontsize=10,color='black')\n\nfig4 = plt.figure(figsize=(5, 2),dpi=150,facecolor='#fafafa',\n    FigureClass=Waffle,\n    rows=3,\n    values=[1, 24],\n    colors=['#24C0CA', \"lightgray\"],\n    icons='horse',\n    font_size=20,vertical=True,\n)\nfig4.text(0,1,'Nearly One in every TwentyFive Unicorns are from India',fontfamily='monospace',fontsize=10,color='black')\nplt.show()","763b3a32":"number_of_colors = countries_count['unicorn_count'].nunique()\n\ncolor = [\"#\"+''.join([random.choice('0123456789ABCDEF') for j in range(6)])\n             for i in range(number_of_colors)]\nop.figure_size=(8, 8)\n\nax = (ggplot()\n + geom_map(world,color='#FFFFFF',size=0.1)\n + geom_map(countries_count,aes(fill='unicorn_count'))\n + labs(title=\"Unicorn Companies across the World\")\n + scale_fill_manual(values = [\"#B21236\",\"#723240\",\"#FE8826\",\"#FEB914\",\"#2C9FA2\",\"#002C2B\",\"#275A75\",\"#0376B3\", \"#B3039E\",\"#24C0CA\",\"#24CA5B\",\"#D5C612\",\n                               \"#4600A4\"])\n + scale_x_continuous(expand=(0, 0, 0, 1))\n + scale_y_continuous(expand=(0, 1, 0, 0))\n + scale_size_continuous(range=(0.4, 1))\n + coord_cartesian()\n + theme_void()\n + theme(figure_size=(8, 6), \n    panel_background = element_rect(fill = \"black\"),    \n    plot_background = element_rect(fill = \"black\", color = \"black\"),\n    legend_background = element_rect(fill = \"black\"),  \n    legend_key = element_blank(),    \n    legend_text = element_text(color = \"white\",face = \"bold\"),\n    axis_title = element_text(color = \"white\", size = 14, hjust = 'center',face = \"bold\"),\n    plot_title = element_text(color = \"white\", face = \"bold\", size = 16, hjust = 4, margin={'b': 20, 't':10}),\n    panel_spacing_x = 1\n         \n        )\n)\n\nfig = ax.draw()\nfig.show()","decb84f3":"<center><b>List of the companies who became 'UNICORN' meaning that their valuation passed 1 Billion US Dollars (As of March 2021)<\/b><\/center>","e33978da":"1. USA has the highest number of unicorns with **304 unicorns.**\n2. China has second highest with **139 unicorns.**\n3. United Kingdom has third highest with **29 unicorns.**\n4. India closely follows fouth with **25 unicorns.**","f77ac016":"The plot shows the number of unicorns these countries have. If we look at US and China, in the past 2-4 years there has been a rise in the unicorn companies. **Out of all countries USA leades with the highest number of unicorns.** Lets look at overall category that made into unicorn status.","8cd3ef63":"We can see that even though during the first five years of the decade all five countries had nearly equal number of unicorns, USA zoomed ahead from other countries. China also has significantly high unicorns than others. It is interesting to see this having known the completely different economic and political environments they operate in.","0f80bfc2":"**AI** category has the highest valued unicorn (**BYTEDANCE**), followed by **FinTech** (**STRIPE**).<br> \nWe have (**SPACEX**) in third as **OTHER** category which is actually a space technologies company followed by (**DIDI CHUXING**) an **Auto & Transportation company.**<br>\nNow lets visualise the unicorn companies count on the map and see the comparison.","d12dc451":"Distribution of Sectors in top 15 companies\n> * 3 FinTech companies\n> * 2 AI companies \n> * 2 Auto and Transporation \n> * 2 Hardware \n> * 2 other \n> * 1 EdTech \n> * 1 Ecommerce and Direct to Consumer \n> * 1 Supply Chain and Logistics Delivery\n> * 1 Data Management and Analytics<br>\n\nLet us now compare these companies against their ages in bar plot","fb3095d0":"> **Top 3 Investment Groups:**<br>\n> Top 3 invsetment groups that invested in most unicorns","90c2bd63":"There is a raise in the number of unicorn companies in recent years. It is a very healthy sign to observe, lets now plot top 15 most valuable companies.   ","c5f5c733":"Other than one row in Select Investors we dont have null values so we can dive into the data.","b93c2ad5":"> **No. of Companies vs Year:**<br>\n> Visualisation to see how many companies became unicorns in last ten years.","0139e965":"> **Top 15 Companies Valuation vs Unicorn Age:**<br>\nA bar plot with y axis containing valuation in billions and no of years since it became a unicorn","0bece78c":"<center><h2><b>Unicorn Companies - EDA with Plotnine<\/b><\/h2><\/center>","774d7c75":"We can see that the most valuable company **BYTEDANCE** became unicorn very recently but achieved very high valuation. Now I want to look into distribution in four select countries USA, UK, INDIA, CHINA.","e1c34ab8":"> **Category Wise Distribution of Unicorns:**<br>\n> Box plot of each category against valuation in billions","2fc4a1e6":"**Following Visualisations have been made in this notebook:**\n> 1. Top 3 Investement Groups\n> 2. Top 5 Countries Unicorn Count over five year periods\n> 3. No. of New Unicorn Companies each Year \n> 4. Top 15 most valuable companies\n> 5. Top 15 most valuable companies compared with its Age of Unicorn Status\n> 6. Unicorn status age vs Valuation for Companies in USA, UK, China, India\n> 7. Category wise Distribution of Valuation\n> 8. Comparison of unicorn companies count across world","a1c0db27":"> **Unicorn Companies Count between different countries across world:**<br>\n> Visualise the count in unicorns count among different countries with different colors","59a25601":"> **Top 15 most Valuable Companies:**<br>\n> Most valuable companies from each Categoty","7935b370":"<center><h2><b>Thanks for reading. Please give your suggestions and comments.<\/b><\/h2><\/center>","62247bb9":"<center><img src = \"http:\/\/andrewchen.co\/wp-content\/uploads\/2015\/05\/unicorn1.jpg\" width=\"550\"><\/center>","a13933f2":"> **Top 5 Countries Unicorn Count over five year periods:**<br>\n> Top 5 countries (USA, China, India, UK, Germany) unicorn companies count over two five year periods i.e. 2010-2015 and 2015-2021"}}