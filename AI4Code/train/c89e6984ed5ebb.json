{"cell_type":{"728b142a":"code","881f75bc":"code","08694911":"code","7c96d333":"code","a4b78163":"code","3274f108":"code","cf41f7fc":"code","ca70fbd6":"markdown","a15dedb3":"markdown","e534b4bd":"markdown"},"source":{"728b142a":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport scipy.interpolate as itp","881f75bc":"%matplotlib inline","08694911":"sns.set()","7c96d333":"meta_data = pd.read_csv('..\/input\/training_set_metadata.csv')\ndata = pd.read_csv('..\/input\/training_set.csv')\n\ntarget = meta_data['target']\nobject_id = meta_data['object_id']","a4b78163":"plt.scatter(meta_data['gal_l'], meta_data['gal_b'], s=1)\nplt.xlabel('l')\nplt.ylabel('b')","3274f108":"colours = np.array(('purple', 'blue', 'green', 'orange', 'red', 'brown'))\nfor i in range(10):\n    plt.figure(i, figsize=(20, 15))\n    mask_u = (data['object_id']==object_id[i]) & (data['passband']==0)\n    mask_g = (data['object_id']==object_id[i]) & (data['passband']==1)\n    mask_r = (data['object_id']==object_id[i]) & (data['passband']==2)\n    mask_i = (data['object_id']==object_id[i]) & (data['passband']==3)\n    mask_z = (data['object_id']==object_id[i]) & (data['passband']==4)\n    mask_y = (data['object_id']==object_id[i]) & (data['passband']==5)\n    plt.scatter(data['mjd'][mask_u], data['flux'][mask_u], s=1, color=colours[0])\n    plt.scatter(data['mjd'][mask_g], data['flux'][mask_g], s=1, color=colours[1])\n    plt.scatter(data['mjd'][mask_r], data['flux'][mask_r], s=1, color=colours[2])\n    plt.scatter(data['mjd'][mask_i], data['flux'][mask_i], s=1, color=colours[3])\n    plt.scatter(data['mjd'][mask_z], data['flux'][mask_z], s=1, color=colours[4])\n    plt.scatter(data['mjd'][mask_y], data['flux'][mask_y], s=1, color=colours[5])\n    plt.plot(data['mjd'][mask_u],itp.UnivariateSpline(data['mjd'][mask_u], data['flux'][mask_u], s=1000.*np.mean(data['flux_err'][mask_u]))(data['mjd'][mask_u]),lw=1, color=colours[0])\n    plt.plot(data['mjd'][mask_g],itp.UnivariateSpline(data['mjd'][mask_g], data['flux'][mask_g], s=1000.*np.mean(data['flux_err'][mask_g]))(data['mjd'][mask_g]),lw=1, color=colours[1])\n    plt.plot(data['mjd'][mask_r],itp.UnivariateSpline(data['mjd'][mask_r], data['flux'][mask_r], s=1000.*np.mean(data['flux_err'][mask_r]))(data['mjd'][mask_r]),lw=1, color=colours[2])\n    plt.plot(data['mjd'][mask_i],itp.UnivariateSpline(data['mjd'][mask_i], data['flux'][mask_i], s=1000.*np.mean(data['flux_err'][mask_i]))(data['mjd'][mask_i]),lw=1, color=colours[3])\n    plt.plot(data['mjd'][mask_z],itp.UnivariateSpline(data['mjd'][mask_z], data['flux'][mask_z], s=1000.*np.mean(data['flux_err'][mask_z]))(data['mjd'][mask_z]),lw=1, color=colours[4])\n    plt.plot(data['mjd'][mask_y],itp.UnivariateSpline(data['mjd'][mask_y], data['flux'][mask_y], s=1000.*np.mean(data['flux_err'][mask_y]))(data['mjd'][mask_y]),lw=1, color=colours[5])\n    plt.title(\"Class = \" + str(target[i]))\n","cf41f7fc":"colours = np.array(('purple', 'blue', 'green', 'orange', 'red', 'brown'))\n\nfor i, class_id in enumerate(set(target)):\n    plt.figure(i, figsize=(20, 15))\n    mask_u = (class_id == target) & (data['passband']==0)\n    mask_g = (class_id == target) & (data['passband']==1)\n    mask_r = (class_id == target) & (data['passband']==2)\n    mask_i = (class_id == target) & (data['passband']==3)\n    mask_z = (class_id == target) & (data['passband']==4)\n    mask_y = (class_id == target) & (data['passband']==5)\n    plt.scatter(data['mjd'][mask_u], data['flux'][mask_u], s=1, color=colours[0])\n    plt.scatter(data['mjd'][mask_g], data['flux'][mask_g], s=1, color=colours[1])\n    plt.scatter(data['mjd'][mask_r], data['flux'][mask_r], s=1, color=colours[2])\n    plt.scatter(data['mjd'][mask_i], data['flux'][mask_i], s=1, color=colours[3])\n    plt.scatter(data['mjd'][mask_z], data['flux'][mask_z], s=1, color=colours[4])\n    plt.scatter(data['mjd'][mask_y], data['flux'][mask_y], s=1, color=colours[5])\n    #plt.plot(data['mjd'][mask_u],itp.UnivariateSpline(data['mjd'][mask_u], data['flux'][mask_u], s=1000.*np.mean(data['flux_err'][mask_u]))(data['mjd'][mask_u]),lw=1, color=colours[0])\n    #plt.plot(data['mjd'][mask_g],itp.UnivariateSpline(data['mjd'][mask_g], data['flux'][mask_g], s=1000.*np.mean(data['flux_err'][mask_g]))(data['mjd'][mask_g]),lw=1, color=colours[1])\n    #plt.plot(data['mjd'][mask_r],itp.UnivariateSpline(data['mjd'][mask_r], data['flux'][mask_r], s=1000.*np.mean(data['flux_err'][mask_r]))(data['mjd'][mask_r]),lw=1, color=colours[2])\n    #plt.plot(data['mjd'][mask_i],itp.UnivariateSpline(data['mjd'][mask_i], data['flux'][mask_i], s=1000.*np.mean(data['flux_err'][mask_i]))(data['mjd'][mask_i]),lw=1, color=colours[3])\n    #plt.plot(data['mjd'][mask_z],itp.UnivariateSpline(data['mjd'][mask_z], data['flux'][mask_z], s=1000.*np.mean(data['flux_err'][mask_z]))(data['mjd'][mask_z]),lw=1, color=colours[4])\n    #plt.plot(data['mjd'][mask_y],itp.UnivariateSpline(data['mjd'][mask_y], data['flux'][mask_y], s=1000.*np.mean(data['flux_err'][mask_y]))(data['mjd'][mask_y]),lw=1, color=colours[5])\n    plt.title(\"Class = \" + str(class_id))\n","ca70fbd6":"## Load the data\n\nFor this notebook, we'll only need the metadata.","a15dedb3":"# Some test plots","e534b4bd":"Set seasborn style"}}