{"cell_type":{"0ac04253":"code","18df2bac":"code","46a8ed4b":"code","782a57de":"code","ca2b74b2":"code","da9297d7":"code","bedbc0de":"code","b8656a95":"code","473fd2a1":"code","b673c0d6":"code","ac4f4cf8":"code","7aa6c3f0":"code","f2fe779d":"code","a7c788d4":"code","2035d1ac":"code","cf4f84b5":"code","3e4f8121":"code","5f9715f0":"code","2de6459b":"code","9006f9dc":"code","65e8bb45":"code","94eeb7e0":"markdown","6608a9f7":"markdown","a24aa054":"markdown","f7a0763c":"markdown","3af6a06d":"markdown","9048a4da":"markdown","9ce040f1":"markdown","700cd708":"markdown","2337e4dc":"markdown","e23457f3":"markdown","425bfbc0":"markdown","d6162355":"markdown","cd7b044f":"markdown"},"source":{"0ac04253":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","18df2bac":"df = pd.read_csv('..\/input\/usa-cers-dataset\/USA_cars_datasets.csv')","46a8ed4b":"df.head()","782a57de":"df.shape","ca2b74b2":"df.columns","da9297d7":"df.info()","bedbc0de":"df = df.drop(['Unnamed: 0', 'vin', 'lot', 'condition'], axis=1)\ndf.head()","b8656a95":"from sklearn.preprocessing import LabelEncoder\n\nlb_make = LabelEncoder()\ndf[\"brand_num\"] = lb_make.fit_transform(df[\"brand\"])\ndf[\"model_num\"] = lb_make.fit_transform(df[\"model\"])\ndf[\"title_num\"] = lb_make.fit_transform(df[\"title_status\"])\ndf[\"color_num\"] = lb_make.fit_transform(df[\"color\"])\ndf[\"state_num\"] = lb_make.fit_transform(df[\"state\"])\ndf[\"country_num\"] = lb_make.fit_transform(df[\"country\"])\ndf.head()","473fd2a1":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.rcParams['figure.figsize']=(12,8)\nsns.swarmplot(y=df[\"price\"])","b673c0d6":"plt.rcParams['figure.figsize']=(30,6)\nsns.scatterplot(x='brand', y='price', data=df)","ac4f4cf8":"plt.rcParams['figure.figsize']=(30,10)\nsns.swarmplot(x=\"country\", y=\"brand\", data=df)","7aa6c3f0":"plt.rcParams['figure.figsize']=(50,15)\nsns.swarmplot(x=\"state\", y=\"color\", data=df)","f2fe779d":"from sklearn import tree\n\ndt = tree.DecisionTreeClassifier()\n\nfeature_names = ['brand_num',\t'model_num',\t'title_num',\t'color_num'\t,'state_num'\t,'country_num','mileage', 'year']\ntarget_name = ['price']\n\ndt.fit(\n    df[feature_names],\n    df[target_name]\n)","a7c788d4":"from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier(n_estimators=40, max_depth=20)\nrf.fit(\n    df[feature_names],\n    df[target_name]\n)","2035d1ac":"rf.predict([df.iloc[2000][feature_names]])","cf4f84b5":"df.iloc[2000]","3e4f8121":"import random\nx = random.randint(0,2499)\nreal_value = df.iloc[x]['price']\npredicted_value = rf.predict([df.iloc[x][feature_names]])\nacc = (predicted_value\/real_value)*100\nprint(f'The real price of choosen car was {real_value}\\nThe predicted value of choosen car was {predicted_value}\\nAnd the accuracy was {acc}')\n","5f9715f0":"predictions = rf.predict(df[feature_names])","2de6459b":"predictions","9006f9dc":"from sklearn import metrics\nimport numpy as np\nprint('Mean Absolute Error:', metrics.mean_absolute_error(df['price'], predictions))\nprint('Mean Squared Error:', metrics.mean_squared_error(df['price'], predictions))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(df['price'], predictions)))","65e8bb45":"from sklearn.metrics import r2_score\nr2_score(df['price'],predictions) ","94eeb7e0":"* **Dropping unused features**","6608a9f7":"## Vizualize Your Data","a24aa054":"* **Encoding Data**","f7a0763c":"Common colors in each country","3af6a06d":"# Cleaning Data","9048a4da":"# **Explore The dara**","9ce040f1":"The flow of the price","700cd708":"> Decision Tree","2337e4dc":"Most common brand in each Coutnry","e23457f3":"> Random Forest","425bfbc0":"# Train Model","d6162355":"Most common brand in each state","cd7b044f":"# Evaluate The Model"}}