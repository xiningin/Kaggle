{"cell_type":{"2041898d":"code","d7e669a3":"code","a2089ae3":"code","19ade9ec":"code","a3f677b0":"code","3ddaaf00":"code","7622e68e":"code","03f2eecc":"code","b0640a59":"code","de4140ce":"code","7cd9b3ef":"code","e3846f95":"code","3aecd09b":"code","a4d293e4":"code","fc394fe3":"code","707e4eb9":"code","a91974e2":"code","6576dc19":"code","8449663b":"code","6721846f":"code","e7f33b6b":"code","cb5eda29":"code","923ec8fd":"code","17376f07":"code","831cecd3":"code","de6acc1a":"code","7659ff8a":"code","c7308fd2":"code","cd971ba4":"code","f7b75a09":"code","47c326d6":"code","bc36b320":"code","5d93135a":"code","e41bece7":"code","4191a9f5":"code","79f7c2eb":"code","9b5a86af":"code","ff8a8d9a":"code","f336eb3f":"code","99c6ebda":"code","cfceed15":"code","ef2e6335":"code","3930460a":"code","8a83a7b1":"code","510d76cc":"code","c1afd19f":"code","aabf426b":"code","b5c613b4":"code","d0e0ec54":"code","c6d73018":"code","63364811":"code","8930e267":"code","cbc41255":"code","05ad16da":"code","c976867b":"code","f4ff8038":"code","cd773a32":"code","751048b3":"code","490bf318":"code","acfbbaf0":"code","d8978286":"code","7fef565e":"code","3ea25d16":"code","5279dc1a":"code","fee86ee3":"code","714cb130":"code","f8b918e0":"code","8c1e3090":"code","d5c3839b":"code","813bc8dd":"code","1706e73b":"code","d8a3dc39":"code","86346687":"code","2705e4fd":"code","1135a0f6":"code","719d5c6e":"code","0b015a0f":"code","ca1a09d9":"code","38fe5f5b":"code","8e14d247":"code","b1cd21fe":"code","e1d963d8":"code","48075a5e":"code","679ea78c":"code","8a6a1abe":"code","fde3e442":"code","2bf1932d":"code","27285aa4":"code","c7e254fd":"code","51332c34":"code","f783cc19":"code","4393f6c7":"code","44f2948d":"code","448a679b":"code","917e27a7":"code","e0aa7778":"code","95830233":"code","4d5c9848":"code","3a5c5b06":"code","8ca1ce73":"code","7d6017bb":"code","efe5b6f4":"code","52a64818":"code","121e6ab2":"code","11579bb1":"code","32d8c3c1":"code","c21c3242":"code","3cfaf4c0":"markdown","4ba0ea89":"markdown","3e9c5330":"markdown","cb4d9e72":"markdown","835cfd22":"markdown","c4ea8904":"markdown","929bc6d5":"markdown","a6b278ad":"markdown","a3c97d31":"markdown","eda41655":"markdown","41f8aaba":"markdown","a7844cb8":"markdown","7daf8080":"markdown","602975f5":"markdown","0cc706e5":"markdown","7349c948":"markdown","58769f4f":"markdown"},"source":{"2041898d":"print (\"ilk \u00f6dev\")","d7e669a3":"v_message = \"hello friends\"\n\nprint(\"hi\")","a2089ae3":"print(v_message)","19ade9ec":"v_name1 = \"zeynep\"\nv_name2 = \"sude\"\nv_surname = \"dinler\"\n\nv_fullname = v_name1 + v_name2 + v_surname\nprint(v_fullname)","a3f677b0":"v_fullname = v_name1 + \" \" + v_name2 + \" \" + v_surname\nprint(v_fullname)","3ddaaf00":"v_num1 = \"500\"\nv_num2 = \"300\"\nv_numSum1 = v_num1 + v_num2\nprint(v_numSum1)","7622e68e":"#length\n\nv_lenFull = len(v_fullname)\nprint(\"v_fullname:\" ,v_fullname, \"and lengt is: \" ,v_lenFull)","03f2eecc":"v_titleF = v_fullname.title()\nprint(\"v_fullname :\" ,v_fullname, \"and title is\" , v_titleF)","b0640a59":"#upper:\nv_upperF = v_fullname.upper()\n\n#lower\nv_lowerF = v_fullname.lower()\nprint(\"v_fullname:\" , v_fullname ,\"Upper:\" ,v_upperF , \" Lower \" ,v_lowerF)\n","de4140ce":"v_ch2 = v_fullname [7]\nprint(v_ch2)","7cd9b3ef":"v_num1 = 500\nv_num2 = 300\nv_sum1 = v_num1 + v_num2\n\nprint(v_sum1, \" and type :\" , type(v_sum1))","e3846f95":"v_num1 = v_num1 + 72\nv_num2 = v_num2 - 25.5\nv_sum1 = v_num1 + v_num2 \n\nprint(v_sum1)","3aecd09b":"print(\"v_sum1 : \" ,v_sum1 , \"type :\" ,type(v_sum1))","a4d293e4":"v_fl1 = 56.5\nv_fl2 = 18.5\nv_s3 = v_fl1 + v_fl2\n\nprint(v_s3 , type(v_s3))","fc394fe3":"def z_SayGreen():\n    print(\"Hi. I am coming from z_SayGreen\")\n    \ndef z_SayGreen2():\n    print(\"Hi. I am coming from z_SayGreen2\")\n    print(\"Good\")\n    \nz_SayGreen()","707e4eb9":"z_SayGreen2()","a91974e2":"def z_BlueMessages(z_BlueMessages):\n    print(z_BlueMessages , \"came from 'z_BlueMessages'\")\n    \ndef z_getFullName(z_FirstName , z_Surname , z_Age):\n    print(\"Welcome\" , z_FirstName , \" \" , z_Surname , \"your age :\" , z_Age)","6576dc19":"z_BlueMessages(\"selam selam selam\")","8449663b":"z_getFullName(\"Zeynep\" , \"D\u0130NLER\" , 15)","6721846f":"def z_Calc1(z_Num1 , z_Num2 , z_Num3 , z_Num4):\n    z_Answer = z_Num1 + z_Num2 + z_Num3 + z_Num4\n    print(\"Answer = \" , \" \" , z_Answer)","e7f33b6b":"z_Calc1(60 , 60 , 40 , 20)","cb5eda29":"# return function\ndef z_Calc2(z_Num1 , z_Num2 , z_Num3 , z_Num4):\n    z_Out = z_Num1 + z_Num2 + z_Num3 * z_Num4\n    print (\"Hi from f_Calc2\")\n    return z_Out","923ec8fd":"z_incoming = z_Calc2(1,2,3,4)\nprint(\"Score is : \" , z_incoming)","17376f07":"# Default Functions :\n\ndef z_getSchoolInfo(z_Name , z_StudentCount , z_City = \"ISTANBUL\"):\n    print(\"Name : \" , z_Name , \"St Count : \" , z_StudentCount , \"City : \" , z_City)\n    ","831cecd3":"z_getSchoolInfo(\"AAIHL\" , 482)\nz_getSchoolInfo(\"KAIHL\" , 578 , \"KAGITHANE\")","de6acc1a":"# Flexible Functions :\n\ndef z_Flex1(z_Name , *z_messages):\n    print(\"Hi \" , z_Name , \"Your first messages is\" , z_messages [1])","7659ff8a":"z_Flex1(\"Milan\", \"Amoureux\" , \"Selam\")","c7308fd2":"# Lambda Function :\n\nz_result1 = lambda x : x*4\nprint(\"Result is : \" , z_result1(6))","cd971ba4":"def z_alan(kenar1,kenar2):\n    print(kenar1*kenar2)","f7b75a09":"z_alan(3,5)","47c326d6":"s_list1 = [1,2,3,4,5,6,8]\nprint(s_list1)\nprint(\"Type for 's_list1' is : \" , type (s_list1))","bc36b320":"z_list1_4 = s_list1[4]\nprint(z_list1_4)\nprint(\"Type of 'z_list1_4' is : \" , type(z_list1_4))","5d93135a":"s_list2 = [\"Harry\" , \"Ron\" , \"Hermonie\" , \"Snape\" , \"Draco\" , \"Hagrid\"]\nprint(s_list2)\nprint(\"Type of 's_list2' is : \" , type(s_list1))","e41bece7":"z_list2_4 = s_list2[2]\nprint(z_list2_4)\nprint(\"Type of 'v_list2_4' is : \" , type(z_list2_4))","4191a9f5":"z_list2_x4 = s_list2[-4]\nprint(z_list2_x4)","79f7c2eb":"s_list2_2 = s_list2[0:6]\nprint(s_list2_2)","9b5a86af":"#Len\nz_len_s_list2_2 = len(s_list2_2)\nprint(\"Size of 's_list2_2' is : \" , z_len_s_list2_2)\nprint(s_list2_2)","ff8a8d9a":"#Append\ns_list2_2.append(\"Ron\")\nprint(s_list2_2)\n\ns_list2_2.append(\"Harry\")\nprint(s_list2_2)","f336eb3f":"#Reverse\ns_list2_2.reverse()\nprint(s_list2_2)","99c6ebda":"s_list2_2.sort()\nprint(s_list2_2)","cfceed15":"#Remove\n\n#First add 'Hagrid' then Remove 'Hagrid'\ns_list2_2.append('Hagrid')\nprint(s_list2_2)","ef2e6335":"s_list2_2.remove(\"Hagrid\")\nprint(s_list2_2)","3930460a":"z_dict1 = {\"blue\": \"mavi\" , \"green\": \"ye\u015fil\" , \"black\": \"siyah\"}\n\nprint(z_dict1)\nprint(type(z_dict1))","8a83a7b1":"z_green = z_dict1[\"green\"]\n\nprint(z_green)\nprint(type(z_green))","510d76cc":"#Keys & Values\n\nz_keys = z_dict1.keys()\nz_values = z_dict1.values()\n\nprint(z_keys)\nprint(type(z_keys))\n\nprint()\nprint(z_values)\nprint(type(z_values))","c1afd19f":"z_reux1 = 20\nz_reux2 = 30\n\nif z_reux1 > z_reux2:\n    print(z_reux1 , \" is greater then \" , z_reux2)\nelif z_reux1 < z_reux2:\n    print(z_reux1 , \" is smaller then \" , z_reux2)\nelse:\n    print(\"This 2 variables are equal\")","aabf426b":"# < , <= , > , >= , == , <>\ndef z_Comparison1(z_nina1 , z_nina2):\n    if z_nina1 >z_nina2:\n        print(z_nina2 , \" is greater then \" , z_nina2)\n    elif z_nina1 < z_nina2:\n        print(z_nina1 , \" is smaller then \" , z_nina2)\n    else :\n        print(\"These \" , z_nina2 , \" variables are equal\")\n        \nz_Comparison1(55,88)\nz_Comparison1(77,33)\nz_Comparison1(24,24)","b5c613b4":"def f_IncludeOrNot(z_search, z_searchList):\n    if z_search in z_searchList :\n        print(\"Good news ! \",z_search , \" is in list.\")\n    else :\n        print(z_search , \" can't reach, help me! \")\n\ns_list = list(z_dict1.keys())\nprint(s_list)\nprint(type(s_list))\n\nf_IncludeOrNot(\"green\" , s_list)\nf_IncludeOrNot(\"pink\" , s_list)","d0e0ec54":"for z in range (0,16):\n    print(\"o\", z , \"ya\u015f\u0131nda.\")","c6d73018":"z_tiredMessage = \"ALWAYS TIRED\"\nprint(z_tiredMessage)","63364811":"for z_chrs in z_tiredMessage:\n    print(z_chrs)\n    print(\" '''''''' \")","8930e267":"for z_chrs in z_tiredMessage.split():\n    print(z_chrs)","cbc41255":"print(s_list1)\ns_sum_list1 = sum(s_list1)\nprint(\"Sum of l_list1 is : \" , s_sum_list1)\n\nprint()\nz_cum_list1 = 0\nz_loopindex = 0\nfor z_current in s_list1:\n    z_cum_list1 = z_cum_list1 + z_current\n    print(z_loopindex , \" nd value is : \" , z_current)\n    print(\"Cumulative is : \" , z_cum_list1)\n    z_loopindex = z_loopindex + 1\n    print(\"------\")\n","05ad16da":"z = 0\nwhile(z < 7):\n    print(\"o\" , z , \"ya\u015f\u0131nda.\")\n    z = z+1","c976867b":"print(s_list1)\nprint()\n\nc = 0\nk = len(s_list1)\n\nwhile(c<k):\n    print(s_list1[c])\n    c=c+1","f4ff8038":"#Let's find minimum and maximum number in list\n\ns_list2 = [2,6,8,-7,-200,355,81,43,-95]\n\nz_min = 0\nz_max = 0\n\nz_index = 0\nz_len = len(s_list2)\n\nwhile (z_index < z_len):\n    z_current = s_list2[z_index]\n    \n    if z_current > z_max:\n        z_max = z_current\n    \n    if z_current < z_min:\n        z_min = z_current\n    \n    z_index = z_index+1\n\nprint (\"Maximum number is : \" , z_max)\nprint (\"Minimum number is : \" , z_min)","cd773a32":"# Import library to use\nimport numpy as np","751048b3":"z_array1 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\nz_array2_np = np.array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])","490bf318":"print(\"z_array1 : \" , z_array1)\nprint(\"Type of z_array1 : \" , type(z_array1))","acfbbaf0":"print(\"z_array2_np : \" , z_array2_np)\nprint(\"Type of z_array2_np : \" , type(z_array2_np))","d8978286":"# shape\nz_shape1 = z_array2_np.shape\nprint(\"z_shape1 : \" , z_shape1 , \" and type is : \" , type(z_shape1))","7fef565e":"# Reshape\nz_array3_np = z_array2_np.reshape(3,5)\nprint(z_array3_np)","3ea25d16":"z_shape2 = z_array3_np.shape\nprint(\"z_shape2 : \" , z_shape2 , \" and type is : \" , type(z_shape2))","5279dc1a":"# Dimension\nz_reux1 = z_array3_np.ndim\nprint(\"z_reux1 : \" , z_reux1 , \" type is : \" , type(z_reux1))","fee86ee3":"# Dtype.name\nz_archerd1 = z_array3_np.dtype.name\nprint(\"z_archerd1 : \" , z_archerd1 , \" and type is : \" , type(z_archerd1))","714cb130":"# Size\nz_size1 = z_array3_np.size\nprint(\"z_size1 : \" , z_size1 , \" and type : \" , type(z_size1))\n","f8b918e0":"# Let's create 3x4 array\nz_array4_np = np.array([[1,2,3,4],[5,6,7,8],[9,10,11,12]])\nprint(z_array4_np)\nprint(\"---------------\")\nprint(\"Shape is : \" , z_array4_np.shape)","8c1e3090":"# Zeros\nz_array5_np = np.zeros((5,7))\nprint(z_array5_np)","d5c3839b":"# Update an item on this array \nz_array5_np[0,5] = 45\nprint(z_array5_np)","813bc8dd":"# Ones\nz_array6_np = np.ones((6,9))\nprint(z_array6_np)","1706e73b":"# Empty\nz_array7_np = np.empty((8,5))\nprint(z_array7_np)","d8a3dc39":"# Arrange\nz_array8_np = np.arange(20,60,6)\nprint(z_array8_np)\nprint(z_array8_np.shape)","86346687":"# Linspace\nz_array9_np = np.linspace(5,60,5)\nz_array10_np = np.linspace(30,20,10)\n\nprint(z_array9_np)\nprint(z_array9_np.shape)\nprint(\"-----------------------\")\nprint(z_array10_np)\nprint(z_array10_np.shape)","2705e4fd":"# Sum , Subtract , Square\nz_np1 = np.array([4,5,6])\nz_np2 = np.array([7,8,9])\n\nprint(z_np1 + z_np2)\nprint(z_np1 - z_np2)\nprint(z_np2 - z_np1)\nprint(z_np1 ** 2)","1135a0f6":"# Sinus\nprint(np.sin(z_np2))","719d5c6e":"# True \/ False\nz_np2_TF = z_np2 < 8\nprint(z_np2_TF)\nprint(z_np2_TF.dtype.name)","0b015a0f":"# Element wise Prodcut\nz_np1 = np.array([1,2,3])\nz_np2 = np.array([7,8,9])\nprint(z_np1 * z_np2)","ca1a09d9":"# Transpose\nz_np5 = np.array([[2,4,8],[3,6,1]])\nz_np5Transpose = z_np5.T\nprint(z_np5)\nprint(z_np5.shape)\nprint()\nprint(z_np5Transpose)\nprint(z_np5Transpose.shape)","38fe5f5b":" #Matrix Multiplication\nz_np6 = z_np5.dot(z_np5Transpose)\nprint(z_np6)","8e14d247":"# Exponential --> We will use on Statistics Lesson\nz_np5Exp = np.exp(z_np5)\n\nprint(z_np5)\nprint(z_np5Exp)","b1cd21fe":"# Random \nz_np8 = np.random.random((7,5)) # --> It will get between 0 and 1 random numbers\nprint(z_np8)","e1d963d8":"#Sum , Max ,Min\nz_np8Sum = z_np8.sum()\nprint(\"Sum of array : \", z_np8Sum)  #--> Remember ! If you get sum of array we can use that :  sum(array1)\nprint(\"Max of array : \", z_np8.max()) #--> Remember ! If you get max of array we can use that :  max(array1)\nprint(\"Min of array : \", z_np8.min()) #--> Remember ! If you get min of array we can use that :  min(array1)","48075a5e":"# Sum with Column or Row\nprint(\"Sum of Columns :\")\nprint(z_np8.sum(axis=0)) # --> Sum of Columns\nprint()\nprint(\"Sum of Rows :\")\nprint(z_np8.sum(axis=1)) #Sum of Rows","679ea78c":"# Square , Sqrt\nprint(np.sqrt(z_np8))\nprint()\nprint(np.square(z_np8))","8a6a1abe":"# Add\nz_np10 = np.array([1,2,3,4,5])\nz_np11 = np.array([10,20,30,40,50])\n\nprint(np.add(z_np10,z_np11))","fde3e442":"z_np12 = np.array([1,2,3,4,5,6,7,8,9])\n\nprint(\"First item is : \" , z_np12[0])\nprint(\"Third item is : \" , z_np12[2])","2bf1932d":"# Get top 4 rows :\nprint(z_np12[0:4])","27285aa4":"# Reverse\nz_np12_Rev = z_np12[::-1]\nprint(z_np12_Rev)","c7e254fd":"z_np13 = np.array([[1,2,3,4,5],[11,12,13,14,15]])\nprint(z_np13)\nprint()\nprint(z_np13[1,3]) #--> Get a row\n\nprint()\nz_np13[1,3] = 314 #--> Update a row\nprint(z_np13)","51332c34":"# Get all rows but 3rd columns :\nprint(z_np13[:,2])","f783cc19":"#Get 2nd row but 2,3,4th columns\nprint(z_np13[1,1:4])","4393f6c7":"# Get last row all columns\nprint(z_np13[-1,:])","44f2948d":"# Get last columns but all rows\nprint(z_np13[:,-1])","448a679b":"#Flatten\nz_np14 = np.array([[1,2,3],[4,5,6],[7,8,9],[10,11,12]])\nz_np15 = z_np14.ravel()\n\nprint(z_np14)\nprint(\"Shape of z_np14 is : \" ,z_np14.shape)\nprint()\nprint(z_np15)\nprint(\"Shape of z_np15 is : \" ,z_np15.shape)\nprint()","917e27a7":"# Reshape\nz_np16 = z_np15.reshape(3,4)\nprint(z_np16)\nprint(\"Shape of z_np16 is : \" ,z_np16.shape)","e0aa7778":"z_np17 = z_np16.T\nprint(z_np17)\nprint(\"Shape of z_np17 is : \" ,z_np17.shape)","95830233":"z_np20 = np.array([[1,2],[3,4],[5,6]])\n\nprint(z_np20)\nprint()\nprint(z_np20.reshape(2,3))\n\nprint()\nprint(z_np20) #--> It has not changed !!","4d5c9848":"# Resize\nz_np20.resize((2,3))\nprint(z_np20) # --> Now it changed !  Resize can change its shape","3a5c5b06":"z_np21 = np.array([[1,2],[3,4]])\nz_np22 = np.array([[5,6],[7,8]])\n\nprint(z_np21)\nprint()\nprint(z_np22)","8ca1ce73":"# Vertical Stack\nz_np23 = np.vstack((z_np21,z_np22))\nz_np24 = np.vstack((z_np22,z_np21))\n\nprint(z_np23)\nprint()\nprint(z_np24)\n","7d6017bb":"# Horizontal Stack\nz_np25 = np.hstack((z_np21,z_np22))\nz_np26 = np.hstack((z_np22,z_np21))\n\nprint(z_np25)\nprint()\nprint(z_np26)","efe5b6f4":"v_list1 = [1,2,3,4]\nz_np30 = np.array(v_list1)\n\nprint(z_list1)\nprint(\"Type of list : \" , type(z_list1))\nprint()\nprint(z_np30)\nprint(\"Type of v_np30 : \" , type(z_np30))","52a64818":"v_list2 = list(z_np30)\nprint(v_list2)\nprint(\"Type of list2 : \" , type(v_list2))","121e6ab2":"v_list3 = v_list2\nv_list4 = v_list2\n\nprint(v_list2)\nprint()\nprint(v_list3)\nprint()\nprint(v_list4)","11579bb1":"v_list2[0] = 55\n\nprint(v_list2)\nprint()\nprint(v_list3) # --> Same address with list2\nprint()\nprint(v_list4) # --> Same address with list2","32d8c3c1":"v_list5 = v_list2.copy()\nv_list6 = v_list2.copy()\n\nprint(v_list5)\nprint()\nprint(v_list6)\n","c21c3242":"v_list2[0] = 71\n\nprint(v_list2)\nprint()\nprint(v_list5) # --> Not same address with list2\nprint()\nprint(v_list6) # --> Not same address with list2","3cfaf4c0":"**8.6.Convert and Copy Array**","4ba0ea89":"**INTRODUCTION**","3e9c5330":"***1) Basic***","cb4d9e72":"***2) VARIABLES *** ","835cfd22":"*4) DICTIONARY* ","c4ea8904":"*6) FOR LOOP*","929bc6d5":"*8.3. Indexing and Slicing*","a6b278ad":"*2.2) Numbers*","a3c97d31":"**8.1 Basic**","eda41655":"*2.1) Strings:*","41f8aaba":"*2) NUMPY*","a7844cb8":"*5) IF ELSE*","7daf8080":"*7) WHILE LOOP*","602975f5":"*3) LIST*","0cc706e5":"***8.4.Shape Manipulation***","7349c948":"**8.2 Basic Operations**","58769f4f":"*3) FUNCTIONS*"}}