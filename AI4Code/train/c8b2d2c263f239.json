{"cell_type":{"2f5912e1":"code","e65f7a98":"code","41df5e71":"code","f6482a52":"code","56f32f60":"code","f3d87c8e":"code","71b5bdb0":"code","1ed47c79":"code","d397b9fe":"code","8da359f0":"code","a2992b71":"code","53228cd5":"code","cf9f4448":"code","38118755":"code","2f1e17bc":"code","f142f88d":"code","5075fcb2":"code","8bd5b598":"code","d3d7bdd6":"code","58e1625e":"markdown","34127dd4":"markdown","16685365":"markdown","1e927c80":"markdown","25b65859":"markdown","f1954870":"markdown","798ec12d":"markdown","b069c0b6":"markdown","db616db7":"markdown"},"source":{"2f5912e1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e65f7a98":"#load datasets\ntrain=pd.read_csv('..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')\n","41df5e71":"train.head(5)","f6482a52":"train.shape","56f32f60":"train.info()","f3d87c8e":"train.describe()","71b5bdb0":"train.isnull().sum()","1ed47c79":"train['reviews_per_month']=train['reviews_per_month'].fillna(0.0)","d397b9fe":"train.drop(['id','host_name','last_review'],axis=1,inplace=True)","8da359f0":"train.drop(['name'],axis=1,inplace=True)","a2992b71":"train.head(5)","53228cd5":"train.isna().sum()","cf9f4448":"#to get a simple report with pandas profiling\nfrom pandas_profiling import ProfileReport\nreport = ProfileReport(train, title='Pandas Profiling Report')","38118755":"#to create a report use to_widgets\nreport.to_widgets()","2f1e17bc":"report.to_file('output.html')","f142f88d":"train.dtypes","5075fcb2":"#convert to category dtype\ntrain['neighbourhood_group'] = train['neighbourhood_group'].astype('category')\n#use .cat.codes to create new colums with encoded value\ntrain['neighbourhood_group_cat'] = train['neighbourhood_group'].cat.codes\ntrain.head(5)","8bd5b598":"#convert to category dtype\ntrain['room_type'] = train['room_type'].astype('category')\n#use .cat.codes to create new colums with encoded value\ntrain['room_type_cat'] = train['room_type'].cat.codes\ntrain.head(1)","d3d7bdd6":"#convert to category dtype\ntrain['neighbourhood'] = train['neighbourhood'].astype('category')\n#use .cat.codes to create new colums with encoded value\ntrain['neighbourhood_cat'] = train['neighbourhood'].cat.codes\ntrain.head(1)","58e1625e":"Pandas profiling is best when using with less features.","34127dd4":"# **Pandas Profiling**\n\nIt is an open source library used for EDA,which can be done in few lines of code.","16685365":"# **************EDA using Pandas Profiling Library***************","1e927c80":"There are missing values in 4 variables. name and host_name is not necessary for analysis,so we can drop it. last_review is date,this variable is also insignificant. we can drop this as well. missiing values in reviews_per_months can be append with '0',because missing values means no reviews(0) in that month.","25b65859":"Airbnb Dataset","f1954870":"fillna() is used to fill null values","798ec12d":"Please upvote if you find it useful. :)","b069c0b6":"Reports generated using pandas profiling provides detailed report of the dataset. It shows the data distribution correlation,missing values etc with just a single line of code.\n\nThere are 2 methods to generate a report:\n1. to_widgets() -  this generates the report in the notebook\n2. to_file(\"output.html\") - this generates a report in a html file and saved in the same location where the notebook is saved. we can send this to the clients for their easy understanding.","db616db7":"output - [.\/output.html](http:\/\/)"}}