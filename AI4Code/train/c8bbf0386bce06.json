{"cell_type":{"185e9180":"code","9f2cfe7c":"code","cd286994":"code","76bc03d2":"code","6ca0456a":"code","698d6f4a":"code","c4a0501b":"code","40811fef":"code","ae77d73d":"code","2d38f5eb":"code","6f86f211":"code","ac716887":"code","173488de":"code","76a8970a":"code","7630d159":"code","1b2f6daa":"code","a3b1caa5":"code","609dcd95":"code","a7e1a497":"code","8b32018a":"markdown"},"source":{"185e9180":"import numpy as np \nimport pandas as pd\nfrom sklearn.ensemble import RandomForestClassifier","9f2cfe7c":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport missingno","cd286994":"train_data=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_data=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\n","76bc03d2":"train_data.head()","6ca0456a":"test_data.head()","698d6f4a":"train_data.isnull().sum()","c4a0501b":"print(\"shape of training data\",train_data.shape)\nprint(\"shape of testing data\",test_data.shape)","40811fef":"train_data.describe()","ae77d73d":"train_data1=train_data.drop(columns=\"Cabin\",axis=1)\ntrain_data1.head()","2d38f5eb":"plt.figure(figsize=(25,10))\nsns.barplot(x='Age',y='Survived',data=train_data1)\nplt.xlabel('Age')\nplt.ylabel('survival')","6f86f211":"train_data1.fillna(train_data1['Age'].median(),inplace=True)","ac716887":"women=train_data1[train_data1.Sex=='female']['Survived']\nrate_w=sum(women)\/len(women)\nprint(rate_w*100,\"% women survived\")","173488de":"men=train_data1[train_data1.Sex=='male']['Survived']\nrate_m=sum(men)\/len(men)\nprint(rate_m*100,\"% men survived\")","76a8970a":"sns.barplot(x='Sex', y='Survived' ,data=train_data1)\nplt.xlabel('Gender')\nplt.ylabel('Survived')\nplt.title('Survival graph')","7630d159":"y=train_data1[\"Survived\"]\nfeatures=[\"Pclass\",\"Sex\",\"SibSp\",\"Parch\"]\nx=pd.get_dummies(train_data1[features])\n","1b2f6daa":"x_test=pd.get_dummies(test_data[features])\nx_test.head()","a3b1caa5":"test_data.head()","609dcd95":"model=RandomForestClassifier(n_estimators=100,max_depth=3,random_state=2)\nmodel.fit(x,y)\npredictions=model.predict(x_test)\n","a7e1a497":"op=pd.DataFrame({'PassengerId':test_data.PassengerId,'Survived':predictions})\nop.to_csv('submission.csv',index=False)\nprint(\"submitted\")","8b32018a":"VISUALIZATION "}}