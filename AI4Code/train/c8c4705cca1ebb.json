{"cell_type":{"10bb3582":"code","9aeefb06":"code","1bb31f9b":"code","44773a56":"code","32129974":"code","3657d9a9":"code","884e0dde":"code","ff172987":"code","8013ee78":"code","7d54ddbc":"code","7cf2ad77":"code","c561322f":"code","5040a81d":"code","72d0b318":"code","bb88f699":"code","8ccfc765":"code","f08c3cb9":"code","389f46ce":"code","85b40ba3":"code","727bee11":"code","f5039cce":"code","c8b364b7":"code","b943e890":"code","0f248ab9":"code","ed5eee68":"code","ea108b7c":"code","5c897e36":"code","7abe6f8c":"code","fbf07a86":"code","0d9786e5":"markdown","4cdf483f":"markdown","dbbca6d9":"markdown","eadb514f":"markdown","f1389a4f":"markdown","cdfc3cf9":"markdown","46dcd85e":"markdown","7ca35576":"markdown","3e3440b0":"markdown","ae70ed17":"markdown"},"source":{"10bb3582":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","9aeefb06":"sales = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv\", parse_dates=['date'], infer_datetime_format=True,dayfirst=True) ","1bb31f9b":"sales.head()","44773a56":"test = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/test.csv\")","32129974":"test.head()","3657d9a9":"#Sales subset\nsales_column = ['date_block_num','shop_id','item_id','item_price','item_cnt_day']","884e0dde":"sales.drop_duplicates(sales_column, keep='first', inplace=True)","ff172987":"sales.reset_index(drop=True, inplace=True)","8013ee78":"test_column = ['shop_id','item_id']","7d54ddbc":"test.drop_duplicates(test_column, keep='first', inplace=True)","7cf2ad77":"test.reset_index(drop=True, inplace=True)","c561322f":"sales.loc[sales.item_price < 0,'item_price'] = 0","5040a81d":"sales['item_cnt_day'] = sales['item_cnt_day'].clip(0,1000)","72d0b318":"sales['item_price'].max()","bb88f699":"sales['item_price'] = sales['item_price'].clip(0,300000)","8ccfc765":"df = sales.groupby([sales.date.apply(lambda x: x.strftime('%Y-%m')), 'item_id', 'shop_id']).sum().reset_index()","f08c3cb9":"df.columns","389f46ce":"df = df[['date', 'item_id', 'shop_id', 'item_cnt_day']]","85b40ba3":"#De\u011ferler - cnt_day , kolon - date , indexleri ise item\/shop id\ndf = df.pivot_table(index=['item_id', 'shop_id'], columns='date', values='item_cnt_day', fill_value=0).reset_index()\n","727bee11":"df","f5039cce":"data = pd.merge(test, df, on=['item_id', 'shop_id'], how='left').fillna(0)","c8b364b7":"#Ba\u011f\u0131ml\u0131 de\u011fi\u015fken\ny = y = data.iloc[:,-1:]\n#Ba\u011f\u0131ms\u0131z de\u011fi\u015fken\nx = data.iloc[:,3:]\nx.drop(['2015-10'], axis = 1, inplace = True)","b943e890":"y","0f248ab9":"x","ed5eee68":"#Decision Tree Regression i\u00e7in haz\u0131rl\u0131k\nx = x.values\ny = y.values.reshape(-1,1)","ea108b7c":"from sklearn.tree import DecisionTreeRegressor\n\ntree = DecisionTreeRegressor()\n\ntree.fit(x,y)\n\ny_head = tree.predict(x)\n\ny_head = y_head.reshape(-1,1)","5c897e36":"#Root Mean Square Error\ndef rmse(predict,real):\n    return np.sqrt(np.mean((predict-real) ** 2))\n\nrmse(y_head,y)","7abe6f8c":"d = data.loc[:,[\"ID\"]]\nd[\"item_cnt_month\"] = y_head","fbf07a86":"submission = pd.DataFrame(data=d)\nsubmission.to_csv('submission.csv', index=False)\nsubmission.head()","0d9786e5":"# 3. Root Mean Square Error","4cdf483f":"Sales_train csv dosyas\u0131n\u0131 date format\u0131na g\u00f6re oku","dbbca6d9":"if item_price < 0 than equal to Zero","eadb514f":"# 1. Data Preparation\nDrop the duplicate values","f1389a4f":"# 4. Output","cdfc3cf9":"For test.csv","46dcd85e":"Test veri seti ile df DataFrame ' i , test kesi\u015fimine g\u00f6re birle\u015ftir birle\u015ftir","7ca35576":"# 2. Model Train ","3e3440b0":"Sales veri seti i\u00e7in date format\u0131na g\u00f6re grupland\u0131r\u0131yoruz","ae70ed17":"Normalization for item_cnt_day. The values of item_cnt_day compress from 0 to 1000"}}