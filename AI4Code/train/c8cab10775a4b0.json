{"cell_type":{"297950c1":"code","93d11ebb":"code","05c20357":"code","ae9330eb":"code","d126d5e1":"code","171d71ae":"code","7913360c":"code","30280b88":"code","cda67c4a":"code","a6301739":"code","4f8ceeee":"code","9c015051":"code","7e0b82c6":"code","87de2bc4":"code","ac62a95f":"code","4392f874":"code","3ea3f40b":"code","156d2d03":"code","562be046":"code","41bf5b90":"code","ae4d42d3":"code","1a38e41d":"code","b044d1aa":"code","25b4e8e1":"code","fe81bfcf":"code","8d8d71d7":"code","b24c7550":"markdown","dd70251e":"markdown","580fc692":"markdown","28d421ef":"markdown","1733b3d3":"markdown","6ea663c1":"markdown","8e8fc722":"markdown","499d15c6":"markdown","1fcc0cd0":"markdown","802cf56c":"markdown","55206345":"markdown","883bcd55":"markdown","8d53931f":"markdown","397d21d6":"markdown","19adca67":"markdown","2f7780dc":"markdown"},"source":{"297950c1":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')\nimport plotly.express as px\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom sklearn import metrics\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import StandardScaler","93d11ebb":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntrain.head(2)","05c20357":"plt.figure(figsize=(8,5))\nsns.heatmap(train.corr(), cmap='cool')\nplt.title('Correlation between features')\nplt.show()","ae9330eb":"train.describe()","d126d5e1":"train.isnull().sum()","171d71ae":"plt.figure(figsize=(12,5))\nsns.heatmap(train.isnull(), cmap='cool')\nplt.title('Null Values in Training Data')\nplt.show()","7913360c":"fig, ax = plt.subplots(1, 2, figsize=(15,5))\nsns.distplot(train['Age'], ax=ax[0])\nsns.boxplot(train['Age'], ax=ax[1])\nax[1].set_title(\"Box plot of 'Age' Feature\")\nax[0].set_title(\"Distibution plot of 'Age' Feature\")\nfig.show()","30280b88":"train['Age'].fillna(train['Age'].mean(), inplace=True)","cda67c4a":"train['Embarked'].unique()","a6301739":"plt.figure(figsize=(8,5))\nsns.countplot(train['Embarked'], palette='cool', orient='v')\nplt.title('Counting of all unique values of \"Embarked\" feature')\nplt.show()","4f8ceeee":"train['Embarked'].fillna('S', inplace=True)","9c015051":"plt.figure(figsize=(8,4))\nsns.countplot(train['Cabin'].isnull(), palette='cool_r', orient='v')\nplt.title('Counting of null values of \"Cabin\" feature')\nplt.show()","7e0b82c6":"train.drop('Cabin', axis=1, inplace=True)","87de2bc4":"train.head(2)","ac62a95f":"fig, ax = plt.subplots(1, 2, figsize=(15,5))\nsns.distplot(train['Fare'], ax=ax[0])\nsns.boxplot(train['Fare'], ax=ax[1])\nax[1].set_title(\"Box plot of 'Fare' Feature\")\nax[0].set_title(\"Distibution plot of 'Fare' Feature\")\nfig.show()","4392f874":"med = train['Fare'].median()\nQ = np.quantile(train['Fare'], 0.945)\ntrain['Fare'] = train['Fare'].apply(lambda x:med if x > Q else x)\nprint('Outliers Removed...')","3ea3f40b":"fig, ax = plt.subplots(1,3, figsize=(18,5))\nsns.countplot(train['Pclass'], palette='cool', ax=ax[0])\nsns.countplot(train['Sex'], palette='cool', ax=ax[1])\nsns.countplot(train['Embarked'], palette='cool', ax=ax[2])\nplt.show()","156d2d03":"pclass   = pd.get_dummies(train['Pclass'])\nsex      = pd.get_dummies(train['Sex'])\nembarked = pd.get_dummies(train['Embarked'])\n\npclass.columns   = ['Pclass_1', 'Pclass_2', 'Pclass_3']\nsex.columns      = ['Female', 'Male']\nembarked.columns = ['Embarked_C', 'Embarked_Q', 'Embarked_S']","562be046":"data = pd.concat([train, pclass, sex, embarked], axis=1)\ndata.drop(['Pclass', 'Sex', 'Embarked'], axis=1, inplace=True)\ndata.drop(['Name', 'Ticket'], axis=1, inplace=True)\ndata.head(1)","41bf5b90":"X = data.drop('Survived', axis=1)\ny = data['Survived']","ae4d42d3":"scale = StandardScaler()\nX_scaled = scale.fit_transform(X)","1a38e41d":"scaled = pd.DataFrame(X_scaled)\nscaled.columns = X.columns\nscaled.head(2)","b044d1aa":"X_train, X_test, y_train, y_test = train_test_split(scaled, y, test_size=0.25)\nprint('Data Splitting Successful...')","25b4e8e1":"model = LogisticRegression()\nmodel.fit(X_train, y_train)\nprint('Model Trained...')\nprint(f'Training Accuracy - {(model.score(X_train, y_train) * 100).round(2)}%')","fe81bfcf":"y_pred = model.predict(X_test)\nscore = metrics.accuracy_score(y_test, y_pred)\nprint(f'Testing Accuracy - {(score * 100).round(2)}%')","8d8d71d7":"plt.figure(figsize=(8,5))\nsns.heatmap(metrics.confusion_matrix(y_test, y_pred), cmap='cool', annot=True, fmt='g', linewidths=5)\nplt.title('Confusion Matrix')\nplt.show()","b24c7550":"## Importing Required Libraries","dd70251e":"#### Now, we're left with fresh data, containing no null values","580fc692":"## One Hot Encoding categorical data","28d421ef":"### Working with 'Age' feature","1733b3d3":"## Model Training","6ea663c1":"## Splitting the dataset","8e8fc722":"## Model Testing | Prediction","499d15c6":"## Removing Outliers","1fcc0cd0":"![](https:\/\/wallpaperboat.com\/wp-content\/uploads\/2020\/04\/titanic-wallpaper-for-pc.jpg)","802cf56c":"### Woking with 'Cabin' features","55206345":"## Splitting dependent & independent variable","883bcd55":"## Data Visualization and Data Cleaning","8d53931f":"## Scaling the data","397d21d6":"### Working with 'Embarked' feature","19adca67":"## Exploratory Data Analysis","2f7780dc":"#### As cabin column mostly contains NaN values. So, droping it."}}