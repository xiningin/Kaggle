{"cell_type":{"90d86385":"code","868ac12e":"code","2b88c684":"code","83fd61a9":"code","6d4161d6":"code","f0907c41":"code","4bd25209":"code","b75c9d89":"code","1a9382b8":"code","f8f4fbb6":"code","bccf3716":"code","b05b1e39":"code","de2b6c02":"code","73acfff2":"code","16cfb6ae":"code","495f4b6d":"code","25c5bbda":"code","96033ada":"code","83917cca":"code","93866473":"markdown","42443175":"markdown","f6a20c72":"markdown","69f5ecab":"markdown","9132653a":"markdown","fd5cf479":"markdown","bfe2ee0b":"markdown","febd18d6":"markdown","a2a3dfb2":"markdown","3244d4f5":"markdown","514bc0ae":"markdown","be1f2777":"markdown","7db5b9eb":"markdown","e72755db":"markdown"},"source":{"90d86385":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n\ntrain_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\n\n# Any results you write to the current directory are saved as output.","868ac12e":"train_data.columns","2b88c684":"train_data.shape","83fd61a9":"train_data.head()","6d4161d6":"train_data.tail()","f0907c41":"train_data.min()","4bd25209":"train_data['Age'].min()","b75c9d89":"train_data['Age'].max()","1a9382b8":"train_data.mean()","f8f4fbb6":"train_data['Survived'].value_counts()","bccf3716":"train_data.groupby(\"Survived\")['Age'].mean()","b05b1e39":"(train_data[\"Sex\"] == \"female\")","de2b6c02":"train_data[\"Relatives\"] = train_data[\"SibSp\"] + train_data[\"Parch\"]","73acfff2":"train_data.head(1)","16cfb6ae":"train_data.info()","495f4b6d":"train_data[\"Age\"] = train_data[\"Age\"].fillna(train_data[\"Age\"].mean())","25c5bbda":"train_data[\"Embarked\"].value_counts()","96033ada":"train_data[\"Embarked\"] = train_data[\"Embarked\"].fillna(train_data[\"Embarked\"].value_counts())","83917cca":"train_data.head()","93866473":"Denne funktion viser b\u00e5de hvor mange mennesker der overlevet og hvor mange der d\u00f8de.","42443175":".shape bruges til at se hvor mange r\u00e6kker og kolonner der er i datas\u00e6ttet (r\u00e6kke, kolonne) ","f6a20c72":"De kolonner der ikke har tallet 891, er kolonner hvor der mangler data. (AGE, CABIN, EMBARKED)","69f5ecab":".colmns funktionen viser alle navnene p\u00e5 de kolonner man arbejder med i et datas\u00e6t.\nDette kan bruges n\u00e5r man arbejder med store datas\u00e6t, og skal kunne navigerer i kolonnerne. Yderligere kan man se hvordan kolonnerne er skrevet (f.eks. stavem\u00e5de store\/sm\u00e5 bogstaver) ","9132653a":"I den ovenst\u00e5ende findes minumum v\u00e6rdien i alle kolonner.","fd5cf479":"I denne funktion er der specifikt henvist til [Age]. Man kan derved arbejde med hver enkel kolonne og tr\u00e6kke den data ud man \u00f8nsker.","bfe2ee0b":"Endnu en gang er der benyttet mean (median) p\u00e5 hele datas\u00e6ttet og ikke \u00e9n specifik kolonne. ","febd18d6":".tail viser datas\u00e6ttet nedefra ","a2a3dfb2":"Der er nu gjort s\u00e5ledes at hvergang der er en data der mangler i \"Embarked\" er der sat \"S\" ind, da det er den by flest steg p\u00e5 i. Datas\u00e6ttet g\u00e5r fra at have NaN til \"S\" p\u00e5 de pladser. ","3244d4f5":"Ved at bruge .groupby henvises der til to kolonner. .mean() viser gennemsnittet","514bc0ae":"Her k\u00f8res .head for at se om funktionen virker i programmet ","be1f2777":"Her henvise til datas\u00e6ttet og derefter s\u00e6ttes det nye navn i [] for at markere det nye navn p\u00e5 kolonnen. Derefter henvises til at det skal v\u00e6re data fra kolonnerne  [\"SibSp\"] + [\"Parch\"]","7db5b9eb":"Ved at benytte fillna funktionen kan der s\u00e6ttes den gennemsnitlige alder ind p\u00e5 de tomme pladser, hvor der ikke er data i datas\u00e6ttet.","e72755db":".head bruges til at vise en lille del af datas\u00e6ttet, til at give overblik. Man kan benytte sig af .head(et tal) for at f\u00e5 vist X antal r\u00e6kker. f.eks. .head(10) s\u00e5 f\u00e5r man vist 10 r\u00e6kker. "}}