{"cell_type":{"e3a92b70":"code","337a777e":"code","b346aaf9":"code","49bc7cf5":"code","ae30aec1":"code","ce7dd2c3":"code","c08f0d4d":"code","1d278b5d":"code","671437dc":"code","9cf3957c":"code","5afd49ef":"code","fad07795":"code","ef9aefe4":"code","ac7cd886":"code","aa43264b":"code","91ecee6c":"markdown","3bc6bf1c":"markdown"},"source":{"e3a92b70":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.metrics import mean_squared_error\n\nfrom xgboost import XGBRegressor","337a777e":"train_data = pd.read_csv('\/kaggle\/input\/30-days-of-ml\/train.csv', index_col='id')\ntest_data = pd.read_csv('\/kaggle\/input\/30-days-of-ml\/test.csv', index_col='id')","b346aaf9":"categorical_cols = [col for col in train_data.columns if 'cat' in col]\ncontinuous_cols = [col for col in train_data.columns if 'cont' in col]","49bc7cf5":"X = train_data.drop(['target'], axis=1)\ny = train_data['target']","ae30aec1":"to_remove = ['cont1', 'cat4', 'cat7']\nX = X.drop(to_remove, axis=1)","ce7dd2c3":"X_train, X_val, y_train, y_val = train_test_split(X, y, random_state=42)","c08f0d4d":"preprocessor = ColumnTransformer(\n    transformers=[\n        ('continuous', MinMaxScaler(), list(set(continuous_cols)-set(to_remove))),\n        ('categorical', OrdinalEncoder(), list(set(categorical_cols)-set(to_remove)))\n    ])","1d278b5d":"model= XGBRegressor(\n    n_estimators=10000,\n    learning_rate=0.03,\n    subsample=0.8,\n    colsample_bytree=0.1,\n    max_depth=3,\n    booster='gbtree',\n    tree_method='gpu_hist',\n    predictor='gpu_predictor',\n    reg_lambda=0.0009,\n    reg_alpha=23,\n    random_state=42\n)","671437dc":"pipeline = Pipeline(\n    steps=[\n        ('preprocessor', preprocessor),\n        ('model', model)\n    ])","9cf3957c":"pipeline.fit(X_train, y_train)","5afd49ef":"mean_squared_error(y_train, pipeline.predict(X_train), squared=False)","fad07795":"mean_squared_error(y_val, pipeline.predict(X_val), squared=False)","ef9aefe4":"preprocessor = ColumnTransformer(\n    transformers=[\n        ('continuous', MinMaxScaler(), list(set(continuous_cols)-set(to_remove))),\n        ('categorical', OrdinalEncoder(), list(set(categorical_cols)-set(to_remove)))\n    ])\n\nmodel= XGBRegressor(\n    n_estimators=10000,\n    learning_rate=0.03,\n    subsample=0.8,\n    colsample_bytree=0.1,\n    max_depth=3,\n    booster='gbtree',\n    tree_method='gpu_hist',\n    predictor='gpu_predictor',\n    reg_lambda=0.0009,\n    reg_alpha=23,\n    random_state=42\n)\n\npipeline = Pipeline(\n    steps=[\n        ('preprocessor', preprocessor),\n        ('model', model)\n    ])\n\npipeline.fit(X, y)","ac7cd886":"final_predictions = pd.DataFrame(zip(test_data.index, pipeline.predict(test_data.drop(to_remove, axis=1))), columns=['id', 'target'])","aa43264b":"final_predictions.to_csv('submission.csv', index=False)","91ecee6c":"# Training Final Model","3bc6bf1c":"Removing columns based on the coefficient values from the [Data Preprocessing notebook](https:\/\/www.kaggle.com\/aniketsharma00411\/30-days-of-ml-data-analysis-and-preprocessing#Finding-correlation-between-features-and-target)."}}