{"cell_type":{"b3151fd6":"code","5f72864f":"code","1b64e571":"code","efbc3beb":"code","00f5a2c7":"code","98686bc4":"code","363e8fb9":"code","4333bbd8":"code","24d23879":"code","caf57bae":"code","265f34a7":"markdown","c9771ca7":"markdown","70c1ba47":"markdown","9b5760bc":"markdown"},"source":{"b3151fd6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings \nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","5f72864f":"# Read Data \ndf = pd.read_csv('..\/input\/BlackFriday.csv')","1b64e571":"# First 5 rows\ndf.head()","efbc3beb":"# Make columns lowercase\ndf.columns = [x.lower() for x in df.columns]","00f5a2c7":"#Summary info of the data\ndf.info()","98686bc4":"# Find which occupation spend more money\ndf_puramount = df[['occupation','purchase']]\ndf_puramount.occupation = df_puramount.occupation.astype(str)\noccupation_list = list(df_puramount.occupation.unique())\npurchase_sum = []\n\n# Find total purchase for each occupations\nfor occu in occupation_list:\n    purchase_sum.append(sum(df_puramount[df_puramount.occupation == occu].purchase))\n\n# Create a new dataframe \ndf_occupur = pd.DataFrame({'occupation':occupation_list,'total_purchase':purchase_sum})\ndf_occupur_sorted = df_occupur.sort_values(by=['total_purchase'],ascending = False)\n# Seaborn BarPlot visulazation\nplt.figure(figsize=(10,8))\nsns.barplot(x = 'occupation',y = 'total_purchase', \n            order=df_occupur_sorted.occupation,\n            color=\"salmon\", saturation=.7, \n            data = df_occupur_sorted)\nplt.title('Total Purchase for Each Occupation')\nplt.xlabel('Occupation')\nplt.ylabel('Total Purchase')\nplt.show()","363e8fb9":"# Gender and occupation spend more money\ndf_genpuramount = df[['occupation', 'gender', 'purchase']]\ndf_genpuramount.occupation = df_genpuramount.occupation.astype(str)\nocculist = list(df_genpuramount.occupation.unique())\nmale = []\nfemale = []\nfor occu in occulist:\n    df_genpuramount_temp = df_genpuramount[df_genpuramount.occupation == occu]\n    male.append(df_genpuramount_temp[df_genpuramount_temp.gender=='M']['purchase'].sum())\n    female.append(df_genpuramount_temp[df_genpuramount_temp.gender=='F']['purchase'].sum())\ndf_occupurgen = pd.DataFrame({'occupation':occulist,'male':male, 'female':female})\n#Visualization\nplt.subplots(figsize = (9,8))\nsns.barplot(x = df_occupurgen.occupation, y = df_occupurgen.male, color='blue',\n            alpha = 0.5, label = 'Male')\nsns.barplot(x = df_occupurgen.occupation, y = df_occupurgen.female, color='red',\n            alpha = 0.5, label = 'Female')\nplt.title('Gender Purchase Distrubation')\nplt.xlabel('Occupation')\nplt.ylabel('Gender Purchase')\nplt.legend()\nplt.show()","4333bbd8":"df.stay_in_current_city_years.replace('4+','4',inplace=True)\ndf.stay_in_current_city_years = df.stay_in_current_city_years.astype(int)","24d23879":"df.replace(['0-17','18-25','26-35','36-45','46-50','51-55','55+'],[0,1,2,3,4,5,6],inplace=True)\nagelist = list(df.age.unique())\npurchasesum=[]\nfor age in agelist:\n    purchasesum.append(df[df.age == age].purchase.sum())\nfig, ax =plt.subplots(figsize=(10,6))\nsns.pointplot(x=agelist,y=purchasesum,color='blue',alpha=0.8, markers='s')\nax.set_xticklabels(['0-17','18-25','26-35','36-45','46-50','51-55','55+'])\nplt.title('Age vs. Purchase')\nplt.xlabel('Age')\nplt.ylabel('Total Purchase')\nplt.grid()\nplt.show()","caf57bae":"# Percentage of Gender\nfig, ax =plt.subplots(figsize=(10,6))\nlabels = ['Male','Female']\ncolors = ['red','blue']\nsizes = [df[df.gender=='M'].gender.count(),df[df.gender=='F'].gender.count()]\nplt.pie(sizes, shadow=True, colors=colors, autopct='%1.1f%%',textprops={'fontsize': 16})\nplt.legend(labels,prop={'size': 16})\nplt.show()","265f34a7":"**People with 26-35  ages spend more than other ages.**","c9771ca7":"** Seems like Males are spending more money than Females**","70c1ba47":"** Occupation 4, 0 and 7 have the higher total purchase than other occupations. **","9b5760bc":"**Another visualization for Gender Distrubution**"}}