{"cell_type":{"414e8dfc":"code","e33dfcd9":"code","08210d58":"code","c1569f9a":"code","9fff7739":"code","fb4a2291":"code","b332236b":"code","1ce40776":"code","e8fe4e74":"code","3cdcea04":"code","503ee956":"code","63e2fb3f":"code","5067600c":"code","12a1bc24":"code","e51352dc":"code","0e3ee0bf":"code","310a9ca0":"code","1d285554":"code","7daf4f83":"code","c5a9b312":"markdown","8df33504":"markdown","2c8f38ed":"markdown","3c44d37f":"markdown","493a81b4":"markdown","4a091c05":"markdown","b69a9c0e":"markdown","8d16b0fd":"markdown","3bea6fbb":"markdown","c1a3c7b1":"markdown"},"source":{"414e8dfc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n\n# plotly\n# import plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e33dfcd9":"covid_data=pd.read_csv('\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')\ncovid_data.head()","08210d58":"covid_data.info()","c1569f9a":"covid_data.people_vaccinated.value_counts()","9fff7739":"covid_data['country'].unique()","fb4a2291":"values1=pd.notnull(covid_data['people_vaccinated'])\ncovid_data[values1].head()","b332236b":"country_list=list(covid_data['country'].unique())\ncountry_vaccination_ratio=[]\nfor i in country_list:\n    x=covid_data[covid_data['country']==i]\n    country_vaccination_rate=sum(x.people_vaccinated)\/len(x)\n    country_vaccination_ratio.append(country_vaccination_rate)\ndata1=pd.DataFrame({'country_list': country_list,'country_vaccination_ratio':country_vaccination_ratio})\nnew_index=(data1['country_vaccination_ratio'].sort_values(ascending=False)).index.values\nsorted_data=data1.reindex(new_index).iloc[:10,:]\n\n#visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['country_list'], y=sorted_data['country_vaccination_ratio'])\nplt.xticks(rotation=45)\nplt.xlabel('Countries')\nplt.ylabel('Vaccination Rate')\nplt.title('Vaccination Rate Given Country')\nplt.show()","1ce40776":"# most vaccinated countries\ncountry=covid_data.country.value_counts()\nplt.figure(figsize=(20,7))\nplt.xticks(rotation=45)\nsns.barplot(x=country[:20].index,y=country[:20].values)\nplt.title('Most Vaccinated Countries',color = 'green',fontsize=25)\nplt.show()","e8fe4e74":"covid_data.vaccines.value_counts()","3cdcea04":"# vaccines type\nvaccines_type=covid_data.vaccines.value_counts()\nplt.figure(figsize=(10,7))\nplt.xticks(rotation=90)\nsns.barplot(x=vaccines_type.index,y=vaccines_type.values)\nplt.ylabel('Number of Vaccines')\nplt.xlabel('Vaccines Types')\nplt.title('Vaccines Type Counts',color = 'green',fontsize=20)\nplt.show()","503ee956":"last_day=covid_data[covid_data.date=='2021-02-11'].iloc[-7:]\nlast_day.head()","63e2fb3f":"last_day=covid_data[covid_data.date=='2021-02-11'].iloc[-7:]\npie1=last_day.daily_vaccinations\nlabels=last_day.country\n\n#figure\nfig={\n    \"data\":[\n        {\n            \"values\":pie1,\n            \"labels\":labels,\n            \"domain\":{\"x\":[0,.5]},\n            \"name\":\"Number of Daily Vaccinations\",\n            \"hoverinfo\":\"label+percent+name\",\n            \"hole\":.3,\n            \"type\":\"pie\"\n        },],\n    \"layout\": {\n        \"title\":\"Today's Number of Daily Vaccinations\",\n        \"annotations\":[\n            {\"font\":{\"size\":20},\n             \"showarrow\":False,\n             \"text\":\"\",\n             \"x\":0.20,\n             \"y\":1\n            },\n        ]\n    }\n}\niplot(fig)","5067600c":"# data preparation\nlast_day=covid_data[covid_data.date=='2021-02-11'].iloc[-7:]\nlast_day.head()","12a1bc24":"last_day=covid_data[covid_data.date=='2021-02-11'].iloc[-7:]\nlast_day_vaccination=last_day.daily_vaccinations\nlabels=last_day.country\n\nfig = go.Figure(data=[go.Scatter(\n    x=last_day_vaccination,\n    y=labels,\n    mode='markers',\n    marker=dict(\n        color=[120, 125, 130, 135, 140, 145],\n        size=[15, 30, 55, 70, 90, 110],\n        showscale=True\n        )\n)])\n\nfig.show()","e51352dc":"# data prepararion\nlast_day=covid_data.country[covid_data.date=='2021-02-11']\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=512,\n                          height=384\n                         ).generate(\" \".join(last_day))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","0e3ee0bf":"last_day=covid_data[covid_data.date=='2021-02-11']\nlast_day.head()","310a9ca0":"# data preparation\nlast_day=covid_data[covid_data.date=='2021-02-11'].iloc[:20,:]\n\ntrace0 = go.Box(\n    y=last_day.total_vaccinations_per_hundred,\n    name = 'total vaccinations per hundered in 2021-02-11',\n    marker = dict(\n        color = 'rgb(12, 12, 140)',\n    )\n)\ntrace1 = go.Box(\n    y=last_day.people_vaccinated_per_hundred,\n    name = 'people vaccinated per hundered in 2021-02-11',\n    marker = dict(\n        color = 'rgb(12, 128, 128)',\n    )\n)\ndata = [trace0, trace1]\niplot(data)","1d285554":"# import figure factory\nimport plotly.figure_factory as ff\n# prepare data\ndataframe = covid_data[covid_data.date=='2021-02-11'].iloc[:10,:]\ndata2021_02_11 = dataframe.loc[:,[\"total_vaccinations_per_hundred\",\"people_vaccinated_per_hundred\", \"people_fully_vaccinated_per_hundred\"]]\ndata2021_02_11[\"index\"] = np.arange(1,len(data2021_02_11)+1)\n# scatter matrix\nfig = ff.create_scatterplotmatrix(data2021_02_11, diag='box', index='index',colormap='Portland',\n                                  colormap_type='cat',\n                                  height=700, width=700)\niplot(fig)","7daf4f83":"# create trace 1 that is 3d scatter\ntrace1 = go.Scatter3d(\n    x=dataframe.total_vaccinations_per_hundred,\n    y=dataframe.people_vaccinated_per_hundred,\n    z=dataframe.people_fully_vaccinated_per_hundred,\n    mode='markers',\n    marker=dict(\n        size=10,\n        color='rgb(255,0,0)',                # set color to an array\/list of desired values      \n    )\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0  \n    )\n    \n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","c5a9b312":"# Introduction\n\nThis notebook is about Covid19 vaccination in the World.\n\n<font color='green'>\nContent:\n    \n1. [Load and Check Data](#1)\n2. [Data Visualization](#2)\n    * [Bar Plot](#3)\n    * [Pie Chart](#4)\n    * [Bubble Charts](#5)\n    * [Word Cloud](#6)\n    * [Box Plot](#7)\n    * [Scatter Matrix Plot](#8)\n    * [3D Scatter Plot with Colorscaling](#9)","8df33504":"<a id=\"9\"><\/a> <br>\n## 3D Scatter Plot with Colorscaling","2c8f38ed":"<a id=\"2\"><\/a> <br>\n# Data Visualization\n\n* Now, we will use some kind of visualization techniques.","3c44d37f":"<a id=\"5\"><\/a> <br>\n## Buble Charts","493a81b4":"<a id=\"7\"><\/a> <br>\n## Box Plot","4a091c05":"<a id=\"8\"><\/a> <br>\n## Scatter Matrix Plot","b69a9c0e":"<a id=\"6\"><\/a> <br>\n## Word Cloud","8d16b0fd":"<a id=\"4\"><\/a> <br>\n## Pie Chart\n2021-02-11's Daily Vaccinations of Last 7 Contries","3bea6fbb":"<a id=\"3\"><\/a> <br>\n## Bar Plot","c1a3c7b1":"<a id=\"1\"><\/a> <br>\n# Load and Check Data\n\n* First of all, we are going to read the reports in our dataset."}}