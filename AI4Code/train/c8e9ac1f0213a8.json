{"cell_type":{"13134200":"code","87f58794":"code","78205463":"code","e76eafd8":"code","dfb8802d":"code","19c140d6":"code","d656db1b":"code","1c0629da":"code","a179a345":"code","ef225266":"code","918884b1":"markdown","e27b42a7":"markdown"},"source":{"13134200":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.graph_objects as go\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","87f58794":"data = pd.read_csv(\"\/kaggle\/input\/pakistans-largest-ecommerce-dataset\/Pakistan Largest Ecommerce Dataset.csv\")\ndata.head()","78205463":"data.shape","e76eafd8":"data = data.drop(['Unnamed: 21', 'Unnamed: 22', 'Unnamed: 23', 'Unnamed: 24', 'Unnamed: 25'], axis=1)","dfb8802d":"data.isna().sum()","19c140d6":"data = data.dropna()\ndata.head()","d656db1b":"category_total = data.groupby([\"category_name_1\"]).sum()[\"grand_total\"].reset_index()\ncategory_total","1c0629da":"fig = px.bar(category_total, x=\"category_name_1\", y=\"grand_total\", color=\"category_name_1\")\n\nfig.show()","a179a345":"complited = data[(data[\"status\"] == 'complete') | (data[\"status\"] == 'received')]\ncomplited = complited[[\"category_name_1\", \"grand_total\"]].groupby([\"category_name_1\"]).sum()[\"grand_total\"].reset_index()\ncomplited","ef225266":"fig = px.bar(complited, x=\"category_name_1\", y=\"grand_total\", color=\"category_name_1\")\n\nfig.show()","918884b1":"# Visualization","e27b42a7":"# Data preparation"}}