{"cell_type":{"08ab49da":"code","ab85fa7d":"code","df411998":"code","57df2228":"code","114289da":"code","2e93ce7e":"code","b224719b":"code","eb9c1819":"code","b82be744":"code","d39547c4":"code","a6173e52":"code","32871e5c":"code","614b63e3":"code","0e1dbb03":"code","015128a5":"code","3252d79a":"markdown","6f8d330c":"markdown","7829e9f7":"markdown","183b9245":"markdown","41da1985":"markdown","d877ac0b":"markdown","df1422df":"markdown","c7322250":"markdown","ad94ce34":"markdown","c53b4c21":"markdown","27fd2282":"markdown","3cc1accc":"markdown"},"source":{"08ab49da":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ab85fa7d":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n","df411998":"#loading datasets\nam = pd.read_csv(\"..\/input\/ulaanbaatar-air-quality\/amgalan-ulaanbaatar-air-quality.csv\")\nto = pd.read_csv(\"..\/input\/ulaanbaatar-air-quality\/tolgoit-ulaanbaatar-air-quality.csv\")\nmi = pd.read_csv(\"..\/input\/ulaanbaatar-air-quality\/misheel-expo ulaanbaatar-air-quality.csv\")\nbh = pd.read_csv(\"..\/input\/ulaanbaatar-air-quality\/bayankhoshuu-ulaanbaatar-air-quality.csv\")\nni = pd.read_csv(\"..\/input\/ulaanbaatar-air-quality\/nisekh-ulaanbaatar-air-quality.csv\")\nus = pd.read_csv(\"..\/input\/ulaanbaatar-air-quality\/ulaanbaatar-us embassy-air-quality.csv\")\nmnb = pd.read_csv(\"..\/input\/ulaanbaatar-air-quality\/m.n.b.-ulaanbaatar-air-quality.csv\")","57df2228":"am.info()","114289da":"#Converting data type of date (object to datetime)\nam['date'] = pd.to_datetime(am['date'])\nbh['date'] = pd.to_datetime(bh['date'])\nmnb['date'] = pd.to_datetime(mnb['date'])\nmi['date'] = pd.to_datetime(mi['date'])\nni['date'] = pd.to_datetime(ni['date'])\nto['date'] = pd.to_datetime(to['date'])\nus['date'] = pd.to_datetime(us['date'])\n\n","2e93ce7e":"#Removing space from column names\nam.columns = am.columns.str.replace(' ','')\nam = am.sort_values(by = 'date', ascending = False)\n#Converting data type of columns except date\ncols_to_convert_am = am.columns.drop('date')\nam[cols_to_convert_am] = am[cols_to_convert_am].apply(pd.to_numeric, errors='coerce')","b224719b":"#Doing same data cleaning for other data sets\n#Bayankhoshuu\nbh.columns = bh.columns.str.replace(' ','')\nbh = bh.sort_values(by = 'date', ascending = False)\ncols_to_convert_bh = bh.columns.drop('date')\nbh[cols_to_convert_bh] = bh[cols_to_convert_bh].apply(pd.to_numeric, errors='coerce')\n#MNB\nmnb.columns = mnb.columns.str.replace(' ','')\nmnb = mnb.sort_values(by = 'date', ascending = False)\ncols_to_convert_mnb = mnb.columns.drop('date')\nmnb[cols_to_convert_mnb] = mnb[cols_to_convert_mnb].apply(pd.to_numeric, errors='coerce')\n#Misheel expo\nmi.columns = mi.columns.str.replace(' ','')\nmi = mi.sort_values(by = 'date', ascending = False)\ncols_to_convert_mi = mi.columns.drop('date')\nmi[cols_to_convert_mi] = mi[cols_to_convert_mi].apply(pd.to_numeric, errors='coerce')\n#Nisekh\nni.columns = ni.columns.str.replace(' ','')\nni = ni.sort_values(by = 'date', ascending = False)\ncols_to_convert_ni = ni.columns.drop('date')\nni[cols_to_convert_ni] = ni[cols_to_convert_ni].apply(pd.to_numeric, errors='coerce')\n#Tolgoit\nto.columns = to.columns.str.replace(' ','')\nto = to.sort_values(by = 'date', ascending = False)\ncols_to_convert_to = to.columns.drop('date')\nto[cols_to_convert_to] = to[cols_to_convert_to].apply(pd.to_numeric, errors='coerce')\n#US embassy\nus.columns = us.columns.str.replace(' ','')\nus = us.sort_values(by = 'date', ascending = False)\ncols_to_convert_us = us.columns.drop('date')\nus[cols_to_convert_us] = us[cols_to_convert_us].apply(pd.to_numeric, errors='coerce')\n\n","eb9c1819":"#MNB\nplt.figure(figsize=(40,10))\nsns.lineplot(x = 'date', y = 'pm25', data =mnb)\nsns.lineplot(x = 'date', y = 'pm10', data =mnb)\nplt.axvline(pd.Timestamp('2019-05-15'),color='r')\nplt.text(pd.Timestamp('2019-05-15'), 450, \"Government ban of raw coal comes into effect\", horizontalalignment='left', size='medium', color='red')\nplt.legend(labels=[\"PM2.5\", \"PM10\"])\nplt.xlabel(\"Date\")\nplt.ylabel(\"PM2.5 vs PM10\")\n\nplt.axhspan(0, 30, facecolor='green', alpha=0.1)\nplt.axhspan(30, 60, facecolor='lightgreen', alpha=0.1)\nplt.axhspan(60, 90, facecolor='yellow', alpha=0.1)\nplt.axhspan(90, 120, facecolor='orange', alpha=0.1)\nplt.axhspan(120, 250, facecolor='red', alpha=0.1)\nplt.axhspan(250, 500, facecolor='darkred', alpha=0.1)","b82be744":"plt.figure(figsize=(40,10))\nsns.lineplot(x = 'date', y = 'pm25', data =am)\nsns.lineplot(x = 'date', y = 'pm10', data =am)\nplt.axvline(pd.Timestamp('2019-05-15'),color='r')\nplt.text(pd.Timestamp('2019-05-15'), 350, \"Government ban of raw coal comes into effect\", horizontalalignment='left', size='medium', color='red')\nplt.legend(labels=[\"PM2.5\", \"PM10\"])\nplt.xlabel(\"Date\")\nplt.ylabel(\"PM2.5 vs PM10\")\n\nplt.axhspan(0, 30, facecolor='green', alpha=0.1)\nplt.axhspan(30, 60, facecolor='lightgreen', alpha=0.1)\nplt.axhspan(60, 90, facecolor='yellow', alpha=0.1)\nplt.axhspan(90, 120, facecolor='orange', alpha=0.1)\nplt.axhspan(120, 250, facecolor='red', alpha=0.1)\nplt.axhspan(250, 400, facecolor='darkred', alpha=0.1)","d39547c4":"plt.figure(figsize=(40,10))\nsns.lineplot(x = 'date', y = 'pm25', data =ni)\nsns.lineplot(x = 'date', y = 'pm10', data =ni)\nplt.axvline(pd.Timestamp('2019-05-15'),color='r')\nplt.text(pd.Timestamp('2019-05-15'), 350, \"Government ban of raw coal comes into effect\", horizontalalignment='left', size='medium', color='red')\nplt.legend(labels=[\"PM2.5\", \"PM10\"])\nplt.xlabel(\"Date\")\nplt.ylabel(\"PM2.5 vs PM10\")\n\nplt.axhspan(0, 30, facecolor='green', alpha=0.1)\nplt.axhspan(30, 60, facecolor='lightgreen', alpha=0.1)\nplt.axhspan(60, 90, facecolor='yellow', alpha=0.1)\nplt.axhspan(90, 120, facecolor='orange', alpha=0.1)\nplt.axhspan(120, 250, facecolor='red', alpha=0.1)\nplt.axhspan(250, 400, facecolor='darkred', alpha=0.1)","a6173e52":"plt.figure(figsize=(40,10))\nsns.lineplot(x = 'date', y = 'pm25', data =to)\nsns.lineplot(x = 'date', y = 'pm10', data =to)\nplt.axvline(pd.Timestamp('2019-05-15'),color='r')\nplt.text(pd.Timestamp('2019-05-15'), 350, \"Government ban of raw coal comes into effect\", horizontalalignment='left', size='medium', color='red')\nplt.legend(labels=[\"PM2.5\", \"PM10\"])\nplt.xlabel(\"Date\")\nplt.ylabel(\"PM2.5 vs PM10\")\n\nplt.axhspan(0, 30, facecolor='green', alpha=0.1)\nplt.axhspan(30, 60, facecolor='lightgreen', alpha=0.1)\nplt.axhspan(60, 90, facecolor='yellow', alpha=0.1)\nplt.axhspan(90, 120, facecolor='orange', alpha=0.1)\nplt.axhspan(120, 250, facecolor='red', alpha=0.1)\nplt.axhspan(250, 600, facecolor='darkred', alpha=0.1)","32871e5c":"plt.figure(figsize=(40,10))\nsns.lineplot(x = 'date', y = 'pm25', data =us)\nsns.lineplot(x = 'date', y = 'pm10', data =us)\nplt.axvline(pd.Timestamp('2019-05-15'),color='r')\nplt.text(pd.Timestamp('2019-05-15'), 350, \"Government ban of raw coal comes into effect\", horizontalalignment='left', size='medium', color='red')\nplt.legend(labels=[\"PM2.5\", \"PM10\"])\nplt.xlabel(\"Date\")\nplt.ylabel(\"PM2.5 vs PM10\")\n\nplt.axhspan(0, 30, facecolor='green', alpha=0.1)\nplt.axhspan(30, 60, facecolor='lightgreen', alpha=0.1)\nplt.axhspan(60, 90, facecolor='yellow', alpha=0.1)\nplt.axhspan(90, 120, facecolor='orange', alpha=0.1)\nplt.axhspan(120, 250, facecolor='red', alpha=0.1)\nplt.axhspan(250, 600, facecolor='darkred', alpha=0.1)\n\n","614b63e3":"#Create a new column \"year\"\nmnb['year'] = mnb.date.dt.year\nus['year'] = us.date.dt.year\nam['year'] = am.date.dt.year\nni['year'] = ni.date.dt.year\nto['year'] = us.date.dt.year","0e1dbb03":"\nfig, axes = plt.subplots(2, 5, sharey = True, figsize=(40,20))\nsns.boxplot(x = 'year', y = 'pm25', data=mnb[mnb.date >= '2016-01-01'], palette = 'pink', ax = axes[0, 0]).set_title(\"MNB\")\nsns.boxplot(x = 'year', y = 'pm25', data=us[us.date >= '2016-01-01'],palette = 'pink', ax = axes[0,1]).set_title(\"US Embassy\")\nsns.boxplot(x = 'year', y = 'pm25', data=am[am.date >= '2016-01-01'],palette = 'pink', ax = axes[0,2]).set_title(\"Amgalan\")\nsns.boxplot(x = 'year', y = 'pm25', data=ni[ni.date >= '2016-01-01'],palette = 'pink', ax = axes[0,3]).set_title(\"Nisekh\")\nsns.boxplot(x = 'year', y = 'pm25', data=to[(to.date >= '2016-01-01')&(to.pm25<500)],palette = 'pink', ax = axes[0,4]).set_title(\"Tolgoit\")\n\nsns.boxplot(x = 'year', y = 'pm10', data=mnb[mnb.date >= '2016-01-01'], palette = 'pink', ax = axes[1,0]).set_title(\"MNB\")\nsns.boxplot(x = 'year', y = 'pm10', data=us[(us.date >= '2016-01-01') & (us.pm10<500)],palette = 'pink', ax = axes[1,1]).set_title(\"US Embassy\")\nsns.boxplot(x = 'year', y = 'pm10', data=am[am.date >= '2016-01-01'],palette = 'pink', ax = axes[1,2]).set_title(\"Amgalan\")\nsns.boxplot(x = 'year', y = 'pm10', data=ni[ni.date >= '2016-01-01'],palette = 'pink', ax = axes[1,3]).set_title(\"Nisekh\")\nsns.boxplot(x = 'year', y = 'pm10', data=to[(to.date >= '2016-01-01') &(to.pm10<500)],palette = 'pink', ax = axes[1,4]).set_title(\"Tolgoit\")\n\nplt.title(\"PM2.5 and PM10 by location and year\")\n\n","015128a5":"\nfig, axes = plt.subplots(2, 5, sharey = True, figsize=(40,20))\nsns.lineplot(x = 'year', y = 'pm25', data=mnb[mnb.date >= '2016-01-01'], palette = 'pink', ax = axes[0, 0]).set_title(\"MNB\")\nsns.lineplot(x = 'year', y = 'pm25', data=us[us.date >= '2016-01-01'],palette = 'pink', ax = axes[0,1]).set_title(\"US Embassy\")\nsns.lineplot(x = 'year', y = 'pm25', data=am[am.date >= '2016-01-01'],palette = 'pink', ax = axes[0,2]).set_title(\"Amgalan\")\nsns.lineplot(x = 'year', y = 'pm25', data=ni[ni.date >= '2016-01-01'],palette = 'pink', ax = axes[0,3]).set_title(\"Nisekh\")\nsns.lineplot(x = 'year', y = 'pm25', data=to[(to.date >= '2016-01-01')&(to.pm25<500)],palette = 'pink', ax = axes[0,4]).set_title(\"Tolgoit\")\n\nsns.lineplot(x = 'year', y = 'pm10', data=mnb[mnb.date >= '2016-01-01'], palette = 'pink', ax = axes[1,0]).set_title(\"MNB\")\nsns.lineplot(x = 'year', y = 'pm10', data=us[(us.date >= '2016-01-01') & (us.pm10<500)],palette = 'pink', ax = axes[1,1]).set_title(\"US Embassy\")\nsns.lineplot(x = 'year', y = 'pm10', data=am[am.date >= '2016-01-01'],palette = 'pink', ax = axes[1,2]).set_title(\"Amgalan\")\nsns.lineplot(x = 'year', y = 'pm10', data=ni[ni.date >= '2016-01-01'],palette = 'pink', ax = axes[1,3]).set_title(\"Nisekh\")\nsns.lineplot(x = 'year', y = 'pm10', data=to[(to.date >= '2016-01-01') &(to.pm10<500)],palette = 'pink', ax = axes[1,4]).set_title(\"Tolgoit\")\n\nplt.title(\"PM2.5 and PM10 by location and year\")\n","3252d79a":"### Ban of raw coal\n\nOn 15th of May, 2019, the Government of Mongolia banned the consumption of raw coal and introduced \"refined coal briquettes\" in response to fighting the air pollution. Since the start of this policy, the smog in Ulaanbaatar city noticably decreased. Even the smog seemed to be partly disappeared visually since the ban of raw coal, it's important to check whether the actual particulate matter in the air decreased. Thus, this data visualization will mostly focus on how the ban on raw coal changed the air quality. \n\n![Refined Coal](https:\/\/scx2.b-cdn.net\/gfx\/news\/2019\/ulaanbaatari.jpg)","6f8d330c":"### Amount of PM2.5 and PM10 over time at different locations\n#### PM2.5 health impacts are shown in the graph by colors and interpretations are shown below as a picture\n\n\n![PM levels](https:\/\/www.airveda.com\/resources\/images\/pm_levels.png)","7829e9f7":"# Air quality comparison by location","183b9245":"# Ulaanbaatar air quality data visualization analysis","41da1985":"\n![Ger District](https:\/\/www.ccacoalition.org\/sites\/default\/files\/styles\/half_content_width\/public\/18262091_304.jpg?itok=AicjmQ1j&timestamp=1584443528)","d877ac0b":"![Location of air quality monitors on a map.png](attachment:35df2bd3-d2d2-47e3-97f0-148d8506d1a1.png)","df1422df":"### About Ulaanbaatar\n\nUlaanbaatar, the capital city of Mongolia, is one of the coldest and most polluted capitals during winter times. Despite the vast territory of Mongolia, 1.5 million people - half of the population - live in a small capital city which was designed for a population of only 400000. Air pollution in Ulaanbaatar reaches to hazardous level during the winter when residents in \"ger\" district start using coal-burning stove as a heater. ","c7322250":"### Observation\n\nThese graphs show that PM10 in air significantly decreased since the ban of raw coal; however, PM2.5 is not decreased as same as PM10. Amount of PM2.5 in the air still reaches to the hazardous level during winter times. \n\n","ad94ce34":"### Data\nData from air quality monitors in Ulaanbaatar is used in this notebook.\n**Location of air quality monitors in Ulaanbaatar are shown on a map below.**","c53b4c21":"### PM2.5 AND PM10\n\nParticulate matter(PM) is a mixture of many harmful solid particles and liquid droplets in the air such as soot, smoke, metals, nitrates, sulphates, dust water and rubber etc. PM2.5 refers to the atmospheric particulate matter that has a diameter of less than 2.5 micrometres, which is about 3% of the diameter of human hair. PM10 are the particles with a diameter of 10 micrometers and they are also called fine particles. The air is considered safe to breathe when the quantity of PM2.5 in the air is 60 and PM10 is 100.\n\nNote: Various studies show that PM2.5 has more severe health effects than PM10 as PM2.5 particles are so small that they can get deep into the lungs and bloodstream whereas PM10 particles can only pass through the throat, nose and surface of lung in the short term.\n\n\n","27fd2282":"Observation: Data from MNB air quality monitor shows that the amount of 'PM10' droppped significantly since 2019. This dramatic decrease can be explained by the government ban of raw coal starting from 15th of May, 2019. ","3cc1accc":"Quick observation: These monitors started recording data at different times, and there are approximately 5 to 7 years of data(looking at the row number). Unfortunately, some monitors do not record certain type of air quality. "}}