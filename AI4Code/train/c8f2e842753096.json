{"cell_type":{"c8ca9e1d":"code","4c644212":"code","fe47de87":"code","c1a9fcd7":"code","dade1173":"code","b66bf887":"code","42396b44":"code","f5c6e5e7":"code","b085cfc1":"code","8a666ef1":"code","198eba89":"code","843a2568":"code","2c178620":"code","312c573b":"code","12a49010":"code","24702954":"code","b446209c":"code","7a5578f9":"code","8db7dc13":"code","98b64740":"code","19991101":"code","0e10a8ec":"code","a7eae56b":"code","8d2dbae5":"code","41237ee5":"code","c189874a":"code","72e64ce5":"code","7c2fe2ab":"code","5df986aa":"code","157deab8":"markdown","1350b1c2":"markdown","92229368":"markdown","bc5256d2":"markdown","c8d37b20":"markdown"},"source":{"c8ca9e1d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4c644212":"google_data = pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore.csv\")","fe47de87":"type(google_data)","c1a9fcd7":"google_data.head()     # Inspecting first 5 Rows","dade1173":"google_data.shape","b66bf887":"google_data.describe()    # Summary Stats","42396b44":"google_data.boxplot()","f5c6e5e7":"google_data.hist()","b085cfc1":"google_data.info()","8a666ef1":"google_data.isnull()","198eba89":"# Count the number of missing value in each column\n\ngoogle_data.isnull().sum()","843a2568":"google_data[google_data.Rating > 5]","2c178620":"google_data.drop([10472], inplace=True)","312c573b":"google_data[10470:10475]","12a49010":"google_data.boxplot()","24702954":"google_data.hist()","b446209c":"threshold = len(google_data)*0.1\nthreshold","7a5578f9":"google_data.dropna(thresh = threshold, axis = 1, inplace = True)","8db7dc13":"print(google_data.isnull().sum())","98b64740":"# Define a function impute_median\n\ndef impute_median(series):\n    return series.fillna(series.median())\n","19991101":"google_data.Rating = google_data[\"Rating\"].transform(impute_median)","0e10a8ec":"# count the number of null values in each column\ngoogle_data.isnull().sum()","a7eae56b":"# mode of categorical values\n\nprint(google_data[\"Type\"].mode())\nprint(google_data[\"Current Ver\"].mode())\nprint(google_data[\"Android Ver\"].mode())","8d2dbae5":"# fill the missing categorical values with mode\n\ngoogle_data[\"Type\"].fillna(str(google_data[\"Type\"].mode().values[0]),inplace = True)\ngoogle_data[\"Current Ver\"].fillna(str(google_data[\"Current Ver\"].mode().values[0]),inplace = True)\ngoogle_data[\"Android Ver\"].fillna(str(google_data[\"Android Ver\"].mode().values[0]),inplace = True)","41237ee5":"# count the number of null values in each column\ngoogle_data.isnull().sum()","c189874a":"# let's convert Price, Reviews and ratings into numerical values\n\ngoogle_data[\"Price\"] = google_data[\"Price\"].apply(lambda x : str(x).replace('$', '') if '$' in str(x) else str(x))\ngoogle_data[\"Price\"] = google_data[\"Price\"].apply(lambda x : float(x))\ngoogle_data[\"Reviews\"] = pd.to_numeric(google_data[\"Reviews\"], errors = 'coerce')\n","72e64ce5":"google_data[\"Installs\"] = google_data[\"Installs\"].apply(lambda x : str(x).replace('+', '') if '+' in str(x) else str(x))\ngoogle_data[\"Installs\"] = google_data[\"Installs\"].apply(lambda x : str(x).replace(',', '') if ',' in str(x) else str(x))\ngoogle_data[\"Installs\"] = google_data[\"Installs\"].apply(lambda x : float(x))","7c2fe2ab":"google_data.head(10)","5df986aa":"# summary stats after cleaning\ngoogle_data.describe()","157deab8":"**Remove columns that are 90 % empty**","1350b1c2":"**Check how many ratings are more than 5 - Outliers**","92229368":"**Data Visualization**","bc5256d2":"**Data Imputation and Manipulation**\n\n\nFill the null values with appropriate values using aggregate functions mean, median or mode","c8d37b20":"**Data Cleaning**\n\n**Count the number of missing values in DataFrame**"}}