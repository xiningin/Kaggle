{"cell_type":{"68fc4441":"code","807b47c1":"code","b13e9a70":"code","a4ec7df5":"code","e1e7de27":"code","70a236aa":"code","785f90df":"code","f1e0e449":"code","153c60a6":"code","60acc44d":"code","63113ffd":"code","fb16bc89":"code","bbb68c56":"code","fc673dfb":"code","e89a98c0":"code","97bd0e65":"code","6f8f9c50":"code","72de517a":"code","a0f3482f":"code","0a069143":"code","29a94709":"code","b2dd38d4":"code","6acda3de":"code","2afd7e02":"code","c61c1f74":"code","c1a63879":"code","824e6494":"code","1673e120":"code","c621764d":"code","c5f4b5db":"code","4bf82bb2":"code","81d8fa9f":"code","153520fa":"code","e5d9d9a4":"code","99bd94d6":"code","b2c7465b":"code","e19a6a89":"code","6c43149b":"code","3c2692a5":"code","042d4792":"code","0fc9a288":"code","aac9e1e5":"code","185c99d2":"markdown","dfc08090":"markdown","b1b2f741":"markdown","11187ff6":"markdown","2280b022":"markdown","ad20aed4":"markdown","2da1ff87":"markdown","a450879c":"markdown","9d44bed3":"markdown","4d57a2d0":"markdown","12104857":"markdown","2dce16e8":"markdown","8bf5f937":"markdown","5f882283":"markdown","81ac07f5":"markdown","9791064a":"markdown","2b3dc5e6":"markdown","0d46c587":"markdown","6131c19a":"markdown","d9096cb8":"markdown","66681863":"markdown"},"source":{"68fc4441":"import os\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use(\"ggplot\")\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\npd.set_option('display.max_columns', None)\npd.options.display.float_format = '{:.2f}'.format\n\nfrom termcolor import colored\n\ndfs = dict()\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        if filename.endswith('.csv'):\n            name = filename[:-4]\n            dfs[name] = pd.read_csv(os.path.join(dirname, filename))\n\nprint(\"Names of objects and shape of datasets:\")\nfor key in dfs:\n    print(f\"{key}, {dfs[key].shape}\")\n","807b47c1":"for key in dfs:\n    dfs[key].drop_duplicates(inplace=True)","b13e9a70":"def type_helper(water_object_name:str):\n    types = (\"Aquifer\", \"Water_Spring\", \"Lake\", \"River\")\n    for _ in types:\n        if water_object_name.startswith(_):\n            return _\n\nfor key in dfs:\n    dfs[key]['Date'] = pd.to_datetime(dfs[key]['Date'])\n\ndfs_info = pd.DataFrame(dfs.keys(), columns=['name'])      \ndfs_info['waterbody_type'] = dfs_info['name'].apply(type_helper)\ndfs_info['first_date'] = [dfs[key]['Date'].min() for key in dfs]\ndfs_info['last_date'] = [dfs[key]['Date'].max() for key in dfs]\ndfs_info['duration'] = (dfs_info['last_date'] - dfs_info['first_date']).apply(lambda x: x.days)\ndfs_info['unique_days'] = [dfs[key]['Date'].nunique() for key in dfs]\ndfs_info['missing_days'] = dfs_info['duration']-dfs_info['unique_days']\ndfs_info","a4ec7df5":"dfs['Aquifer_Doganella'].head()","e1e7de27":"dfs['Aquifer_Doganella'].describe()","70a236aa":"# target columns vis\n\nplt.figure(figsize=(20, 6))\nfor i in range(1, 10):\n    dfs['Aquifer_Doganella'][f\"Depth_to_Groundwater_Pozzo_{i}\"].plot()\nplt.legend()\nplt.show()","785f90df":"dfs['Aquifer_Auser'].head()","f1e0e449":"dfs['Aquifer_Auser'].info()","153c60a6":"dfs['Aquifer_Auser'].describe()","60acc44d":"# target columns vis\n\nplt.figure(figsize=(20, 6))\ndfs['Aquifer_Auser'][\"Depth_to_Groundwater_CoS\"].plot()\ndfs['Aquifer_Auser'][\"Depth_to_Groundwater_LT2\"].plot()\ndfs['Aquifer_Auser'][\"Depth_to_Groundwater_SAL\"].plot()\nplt.legend()\nplt.show()","63113ffd":"dfs['Water_Spring_Amiata'].head()","fb16bc89":"dfs['Water_Spring_Amiata'].describe()","bbb68c56":"# target columns vis\n\nplt.figure(figsize=(20, 6))\ndfs['Water_Spring_Amiata'][\"Flow_Rate_Bugnano\"].plot()\ndfs['Water_Spring_Amiata'][\"Flow_Rate_Arbure\"].plot()\ndfs['Water_Spring_Amiata'][\"Flow_Rate_Ermicciolo\"].plot()\ndfs['Water_Spring_Amiata'][\"Flow_Rate_Galleria_Alta\"].plot()\nplt.legend()\nplt.show()","fc673dfb":"dfs['Lake_Bilancino'].head()","e89a98c0":"dfs['Lake_Bilancino'].info()","97bd0e65":"dfs['Lake_Bilancino'].describe()","6f8f9c50":"dfs['Water_Spring_Madonna_di_Canneto'].head()","72de517a":"dfs['Water_Spring_Madonna_di_Canneto'].info()","a0f3482f":"dfs['Water_Spring_Madonna_di_Canneto'].describe()","0a069143":"# target column vis\n\nplt.figure(figsize=(20, 6))\ndfs['Water_Spring_Madonna_di_Canneto'][\"Flow_Rate_Madonna_di_Canneto\"].plot()\nplt.legend()\nplt.show()","29a94709":"dfs['Aquifer_Luco'].head()","b2dd38d4":"dfs['Aquifer_Luco'].info()","6acda3de":"dfs['Aquifer_Luco'].describe()","2afd7e02":"# target column vis\n\nplt.figure(figsize=(20, 6))\ndfs['Aquifer_Luco'][\"Depth_to_Groundwater_Podere_Casetta\"].plot()\nplt.legend()\nplt.show()","c61c1f74":"dfs['Aquifer_Petrignano'].head()","c1a63879":"dfs['Aquifer_Petrignano'].info()","824e6494":"dfs['Aquifer_Petrignano'].describe()","1673e120":"# target columns vis\n\nplt.figure(figsize=(20, 6))\ndfs['Aquifer_Petrignano'][\"Depth_to_Groundwater_P24\"].plot()\ndfs['Aquifer_Petrignano'][\"Depth_to_Groundwater_P25\"].plot()\nplt.legend()\nplt.show()","c621764d":"# sns.pairplot(dfs['Aquifer_Petrignano'])\n# plt.show()","c5f4b5db":"dfs['Water_Spring_Lupa'].head()","4bf82bb2":"dfs['Water_Spring_Lupa'].describe()","81d8fa9f":"# target column vis\n\nplt.figure(figsize=(20, 6))\ndfs['Water_Spring_Lupa'][\"Flow_Rate_Lupa\"].plot()\nplt.legend()\nplt.show()","153520fa":"# sns.pairplot(dfs['Water_Spring_Lupa'])\n# plt.show()","e5d9d9a4":"dfs['River_Arno'].head()","99bd94d6":"dfs['River_Arno'].describe()","b2c7465b":"# target column vis\n\nplt.figure(figsize=(20, 6))\ndfs['River_Arno'][\"Hydrometry_Nave_di_Rosano\"].plot()\nplt.legend()\nplt.show()","e19a6a89":"sum(dfs['River_Arno'][\"Hydrometry_Nave_di_Rosano\"] == 0)","6c43149b":"# Zero values where they shouldn't be\ninvalid_zeros = {\"Aquifer_Auser\": [\"Depth_to_Groundwater_LT2\",\n                                        \"Depth_to_Groundwater_SAL\",\n                                        \"Depth_to_Groundwater_CoS\"],\n                     \"Aquifer_Petrignano\": [\"Volume_C10_Petrignano\"],\n                     \"River_Arno\": [\"Hydrometry_Nave_di_Rosano\"]}\n\n\n# chains of repeating zero values where zero values can be, but cannot be repeated this way\ninvalid_zeros_chains = {\"Aquifer_Auser\": [\"Temperature_Orentano\",\n                                         \"Temperature_Ponte_a_Moriano\",\n                                         \"Volume_CSA\",\n                                         \"Volume_CSAL\"],\n                      \"Water_Spring_Amiata\": [\"Flow_Rate_Bugnano\"],\n                      \"Aquifer_Luco\": [\"Temperature_Siena_Poggio_al_Vento\",\n                                       \"Temperature_Mensano\",\n                                       \"Temperature_Pentolina\"],\n                      \"Aquifer_Petrignano\": [\"Temperature_Petrignano\",\n                                             \"Hydrometry_Fiume_Chiascio_Petrignano\"]}","3c2692a5":"from itertools import groupby\n\ndef remove_repeated_zeros(seq):\n    result = []\n    for (key, group) in groupby(seq):\n        g = list(group)\n        if (len(g) > 1) and (key == 0):\n            result += [np.nan]*len(g)\n        else:\n            result.append(key)\n    return pd.Series(result)","042d4792":"for key in invalid_zeros:\n    for col in invalid_zeros[key]:\n        plt.title(f\"{key}: {col} before correction\")\n        dfs[key][col].plot()\n        plt.show()\n        plt.title(f\"{key}: {col} after correction\")\n        dfs[key][col].replace(0, np.nan, inplace=True)\n        dfs[key][col].plot()\n        plt.show()\n        \nfor key in invalid_zeros_chains:\n    for col in invalid_zeros_chains[key]:\n        plt.title(f\"{key}: {col} before correction\")\n        dfs[key][col].plot()\n        plt.show()\n        plt.title(f\"{key}: {col} after correction\")\n        dfs[key][col] = remove_repeated_zeros(dfs[key][col])\n        dfs[key][col].plot()\n        plt.show()","0fc9a288":"# !pip install missingno  # for missing values\nimport missingno as msno\n\nfor key in dfs:\n    print(key)\n    msno.matrix(dfs[key])\n    plt.show()","aac9e1e5":"for key in dfs:\n    dfs[key]['year'] = dfs[key]['Date'].dt.year\n    dfs[key]['y_month'] = dfs[key]['Date'].dt.month\n    dfs[key]['y_week'] = dfs[key]['Date'].dt.week\n    dfs[key]['y_day'] = dfs[key]['Date'].dt.dayofyear","185c99d2":"# Aquifer Auser\n\nThis waterbody consists of two subsystems, called `NORTH` and `SOUTH`, where the former partly influences the behavior of the latter. Indeed, the north subsystem is a water table (or unconfined) aquifer while the south subsystem is an artesian (or confined) groundwater.\n\nThe levels of the `NORTH` sector are represented by the values of the `SAL`, `PAG`, `CoS` and `DIEC` wells, while the levels of the `SOUTH` sector by the `LT2` well.\n\n**Columns to predict**:\n- `Depth_to_Groundwater_LT2`\n- `Depth_to_Groundwater_SAL`\n- `Depth_to_Groundwater_CoS`","dfc08090":"For convenience of grouping let's add dates in the form of days, weeks and months of a separate year.","b1b2f741":"# River Arno\n\nArno is the second largest river in peninsular Italy and the main waterway in Tuscany and it has a relatively torrential regime, due to the nature of the surrounding soils (marl and impermeable clays). Arno results to be the main source of water supply of the metropolitan area of Florence-Prato-Pistoia. The availability of water for this waterbody is evaluated by checking the hydrometric level of the river at the section of Nave di Rosano.\n\n**Type**: River\n**Columns to predict**:\n- `Hydrometry_Nave_di_Rosano`","11187ff6":"Let's apply the techniques of removing individual zeros and sequences of zeros to the entire dataset.","2280b022":"Let's see distrbution of na-values:","ad20aed4":"# Additional information: italian locations observed in datasets\n\n- Borgo-a-Mozzano\n- Calavorno\n- Croce Arcana\n- Fabbriche di Vallico\n- Gallicano\n- Mensano\n- Montalcinello\n- Monticiano la Pineta\n- Monteporzio\n- Monteroni Arbia Biena\n- Monte Serra\n- Orentano\n- Pontetetto\n- Pentolina\n- Petrignano\n- Piaggione\n- Podere Casetta\n- Ponte Orgia\n- Siena Poggio al Vento\n- Simignano\n- Scorgiano\n- Sovicille\n- Tereglio Coreglia Antelminelli\n- Umbra\n- Velletri","2da1ff87":"# Lake Bilancino\n\nBilancino lake is an artificial lake located in the municipality of Barberino di Mugello (about 50 km from Florence). It is used to refill the Arno river during the summer months. Indeed, during the winter months, the lake is filled up and then, during the summer months, the water of the lake is poured into the Arno river.\n\n**Type**: Lake\n**Columns to predict**:\n- `Lake_Level`\n- `Flow_Rate`","a450879c":"Drop the duplicates:","9d44bed3":"# Water Spring Lupa\n\nThis water spring is located in the Rosciano Valley, on the left side of the Nera river. The waters emerge at an altitude of about 375 meters above sea level through a long draining tunnel that crosses, in its final section, lithotypes and essentially calcareous rocks. It provides drinking water to the city of Terni and the towns around it.\n\n**Type**: Water spring\n**Columns to predict**:\n- `Flow_Rate_Lupa`","4d57a2d0":"An important reason for the differences in datasets is the different nature of the water reservoirs. Let's take a closer look at their differences.\n\n# Aquifer Doganella\n\n**Glossary**: [an aquifer](https:\/\/en.wikipedia.org\/wiki\/Aquifer) is an underground layer of water-bearing permeable rock, rock fractures or unconsolidated materials (gravel, sand, or silt). Groundwater can be extracted using a water well.\n\n![image.png](attachment:image.png)\nAn example of an aquifer\n\nThe wells field Doganella is fed by two underground aquifers not fed by rivers or lakes but fed by meteoric infiltration. The upper aquifer is a water table with a thickness of about 30m. The lower aquifer is a semi-confined artesian aquifer with a thickness of 50m and is located inside lavas and tufa products. These aquifers are accessed through nine wells (in dataset there are columns names with postfix `_Pozzo[1-9]`). \n\nApproximately 80% of the drainage volumes come from the artesian aquifer. The aquifer levels are influenced by the following parameters: rainfall, humidity, subsoil, temperatures and drainage volumes.\n\n**Type**: `Aquifer`\n\n**Columns to predict**:\n- `Depth_to_Groundwater_Pozzo_[1-9]`","12104857":"# Aquifer Luco\n\nThe Luco wells field is fed by an underground aquifer. This aquifer not fed by rivers or lakes but by meteoric infiltration at the extremes of the impermeable sedimentary layers. Such aquifer is accessed through wells called Well 1, Well 3 and Well 4 and is influenced by the following parameters: rainfall, depth to groundwater, temperature and drainage volumes.\n\n**Type**: Aquifer\n**Columns to predict**:\n- `Depth_to_Groundwater_Podere_Casetta`","2dce16e8":"# Aquifer Petrignano\n\nThe wells field of the alluvial plain between Ospedalicchio di Bastia Umbra and Petrignano is fed by three underground aquifers separated by low permeability septa. The aquifer can be considered a water table groundwater and is also fed by the Chiascio river. The groundwater levels are influenced by the following parameters: rainfall, depth to groundwater, temperatures and drainage volumes, level of the Chiascio river.\n\n**Type**: Aquifer\n**Columns to predict**:\n- `Depth_to_Groundwater_P24`\n- `Depth_to_Groundwater_P25`","8bf5f937":"# Water Spring Amiata\n\n**Glossary**: a spring is a point at which water flows from an aquifer to the Earth's surface. It is a component of the hydrosphere.\n\nThe Amiata waterbody is composed of a volcanic aquifer not fed by rivers or lakes but fed by meteoric infiltration. This aquifer is accessed through Ermicciolo, Arbure, Bugnano and Galleria Alta water springs. The levels and volumes of the four sources are influenced by the parameters: rainfall, depth to groundwater, hydrometry, temperatures and drainage volumes.\n\n**Columns to predict**:\n- `Flow_Rate_Bugnano`\n- `Flow_Rate_Arbure`\n- `Flow_Rate_Ermicciolo`\n- `Flow_Rate_Galleria_Alta`","5f882283":"# Preprocessing invalid zero values\n\nA lot of data columns contain missing values or invalid zeros. For subsequent correct predictions, let's process these items. Zero values will be replaced by NA. Next, we will replace all the gaps with the values predicted using the rest of the data. Based on preliminary analysis of the data, the following columns were identified with unexpected  single or consecutive zero values.","81ac07f5":"## Time data\n\nAll dataframes contain a column with the date of observation. Let's find time characteristics of datasets:\n- first and last dates\n- observations duration\n- number of missing days","9791064a":"To be continued...","2b3dc5e6":"# Acea Smart Water Analytics \n\nA water supply company struggles with the need to forecast the water level in a waterbody (water spring, lake, river, or aquifer) to handle daily consumption. During fall and winter waterbodies are refilled, but during spring and summer they start to drain. To help preserve the health of these waterbodies it is important to predict the most efficient water availability, in terms of level and water flow for each day of the year.\n\nThe point of the competition is to predict the amount of water in each unique waterbody. The challenge is to determine how features influence the water availability of each presented waterbody. Models should capture volumes for each waterbody (for a model working on a monthly interval a forecast over the month is expected).\n\nThe desired outcome is a notebook that can generate four mathematical models, one for each category of waterbody (acquifers, water springs, river, lake) that might be applicable to each single waterbody.\n\n![image.png](attachment:image.png)\n\n\n# Evaluation \nThis is an Analytics competition where your task is to create a Notebook that best addresses the Evaluation criteria below. Submissions should be shared directly with host and will be judged by the Acea Group based on how well they address:\n\n**Methodology\/Completeness (min 0 points, max 5 points)**\n\n- Are the statistical models appropriate given the data?\n- Did the author develop one or more machine learning models?\n- Did the author provide a way of assessing the performance and accuracy of their solution?\n- What is the Mean Absolute Error (MAE) of the models?\n- What is the Root Mean Square Error (RMSE) of the models?\n\n**Presentation (min 0 points, max 5 points)**\n\n- Does the notebook have a compelling and coherent narrative?\n- Does the notebook contain data visualizations that help to communicate the author\u2019s main points?\n- Did the author include a thorough discussion on the intersection between features and their prediction? For example between rainfall and amount\/level of water.\n- Was there discussion of automated insight generation, demonstrating what factors to take into account?\n- Is the code documented in a way that makes it easy to understand and reproduce?\n- Were all external sources of data made public and cited appropriately?\n\n**Application (min 0 points, max 5 points)**\n\n- Is the provided model useful\/able to forecast water availability in terms of level or water flow in a time interval of the year?\n- Is the provided methodology applicable also on new datasets belong to another waterbody?\n\n\n## Deadline\n- Entry and Final submission deadline: **February 17, 2021**\n- Winners announced: **March 10, 2021**","0d46c587":"# Loading and a first look at the data\n\nThis competition uses nine different datasets, completely independent and not linked to each other. Each dataset can represent a different kind of waterbody. As each waterbody is different from the other, the related features as well are different from each other. \n\nLet's see the shapes of datasets.","6131c19a":"Note that the zero value is implausible here, but it does occur from time to time. This is not the only example of this data behavior.","d9096cb8":"# Water Spring Madonna di Canneto\n\nThe Madonna di Canneto spring is situated at an altitude of 1010m above sea level in the Canneto valley. It does not consist of an aquifer and its source is supplied by the water catchment area of the river Melfa.\n\n**Type**: `Water spring`\n\n**Columns to predict**:\n- `Flow_Rate_Madonna_di_Canneto`","66681863":"# Sources\n\n## EDA Sources\n- [isaenkov](https:\/\/www.kaggle.com\/isaienkov\/acea-smart-water-analytics-data-understanding)\n- [thanish](https:\/\/www.kaggle.com\/thanish\/starters-eda)\n- [salmanhiro](https:\/\/www.kaggle.com\/salmanhiro\/eda-and-data-storytelling)\n- [ekrembayar](https:\/\/www.kaggle.com\/ekrembayar\/quick-eda-reporting-data-understanding)\n- [pjoshi15](https:\/\/www.kaggle.com\/pjoshi15\/understanding-the-dataset)"}}