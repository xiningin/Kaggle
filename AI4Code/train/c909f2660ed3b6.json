{"cell_type":{"508e6b19":"code","ceea6b14":"code","e47a5e81":"code","6e9c31c3":"code","ced1b533":"code","ae4932d2":"code","0a99a192":"code","7c0ef1c2":"code","0b9a4f48":"code","3847b958":"code","27ed4ade":"code","5e21b929":"code","f9c313b9":"code","388748df":"code","24cd67f4":"code","1ef250fb":"code","e488fdec":"code","a45fe632":"code","aaef33a5":"code","e26c844d":"code","39f09a39":"code","67c26697":"markdown","b4579c8b":"markdown","e113f578":"markdown","a6036d6e":"markdown","09b75d8f":"markdown","5725a729":"markdown","9a1bd001":"markdown","35a4fe80":"markdown","59c636e6":"markdown","f4d20b20":"markdown"},"source":{"508e6b19":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ceea6b14":"data = pd.read_csv('..\/input\/world-happiness\/2015.csv')\ndata.info","e47a5e81":"data.corr()","6e9c31c3":"f, ax = plt.subplots(figsize = (12, 12))\nsns.heatmap(data.corr(), annot= True, linewidths= .8, fmt= '.1f', ax= ax)\nplt.show()\n","ced1b533":"data.head(5)","ae4932d2":"data.columns","0a99a192":"f, ax = plt.subplots(figsize = (20, 7))\ndata['Happiness Score'].plot(kind= 'line', color= 'g', label= 'Happines Score', linewidth= 3, alpha= .5, linestyle= '-')\ndata['Economy (GDP per Capita)'].plot(kind= 'line', color= 'r', label= 'Economy (GDP per Capita)', linewidth= 2, alpha= .5, linestyle= '-')\nplt.legend(loc = 'upper right')\nplt.xlabel('Countries')\nplt.ylabel('Values')\nplt.title('Line Chart')\nplt.show()","7c0ef1c2":"data.plot(kind= 'scatter', x='Happiness Score', y= 'Economy (GDP per Capita)')\ndata.plot(kind= 'scatter', x='Family', y= 'Economy (GDP per Capita)', color= 'm')\ndata.plot(kind= 'scatter', x='Happiness Rank', y= 'Economy (GDP per Capita)', color= 'c')\nplt.show()","0b9a4f48":"data['Happiness Score'].plot(kind= 'hist', bins= 50, color= 'y', figsize = (10,7))\nplt.show()","3847b958":"dictionary = {'name' : 'alex','surname' : 'vargas'}\nprint(dictionary.keys())\nprint(dictionary.values())","27ed4ade":"dictionary['name'] = \"camilla\"    # update existing entry\nprint(dictionary)\ndictionary['age'] = 12       # Add new entry\nprint(dictionary)\ndel dictionary['name']              # remove entry with key 'spain'\nprint(dictionary)\nprint('surname' in dictionary)        # check include or not\ndictionary.clear()                   # remove all entries in dict\nprint(dictionary)","5e21b929":"del dictionary\nprint(dictionary)  ","f9c313b9":"data = pd.read_csv('..\/input\/world-happiness\/2015.csv')\nseries = data['Freedom']      \nprint(type(series))\ndata_frame = data[['Generosity']] \nprint(type(data_frame))","388748df":"print(5 < 2)\nprint(3==2)\nprint(True and False)\nprint(True or False)","24cd67f4":"x = data['Trust (Government Corruption)']>0.5\ndata[x]","1ef250fb":"data[np.logical_and(data['Economy (GDP per Capita)']<1, data['Happiness Score']>7 )]","e488fdec":"data[(data['Economy (GDP per Capita)']<1) & (data['Happiness Score']>7)]","a45fe632":"t= 0\nwhile t!=5:\n    print(t)\n    t=t+1\n    ","aaef33a5":"my_list= ['a', 'b','c','d' ]\n\nfor i in my_list:\n    print(\"i=\",i)\nfor i,value in enumerate(my_list):\n    print(\"index:\",i,\",value:\", value)","e26c844d":"dictionary = {'spain':'madrid','france':'paris'}\n\nfor key,value in dictionary.items():\n    print('key:',key,',value:',value)","39f09a39":"for index,value in data[['Happiness Score']][0:2].iterrows():\n    print(value)","67c26697":"**PANDAS**","b4579c8b":"Now, we can visualize the data (the best part )","e113f578":"**DICTIONARY**","a6036d6e":"Economy vs Happiness Rank = Negatif Correlation . In the figure above, it can be seen clearly.","09b75d8f":"Now, lets explore the feature correlations","5725a729":"In the previous correlation map we could easily see that Economy and Happiness score are pozitif correlated. Then I wanted to see that correlation in the line plot. ","9a1bd001":"**WHILE AND FOR**","35a4fe80":"Firstly, we will read the data from csv as data frame","59c636e6":"If we need to headers , columns keyword is enough. :)","f4d20b20":"Correlation map.."}}