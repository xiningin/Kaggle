{"cell_type":{"15a2c59f":"code","b20a4cb8":"code","de35fbee":"code","2b5e054b":"code","b799469b":"code","c3e2e181":"code","dcebf0c3":"code","ce42e22b":"code","5bda3128":"code","3f6fa902":"code","f1e05db4":"code","eac9fdd6":"code","ab361d18":"code","740fafea":"code","5f130e4d":"code","648358a6":"markdown","32e3c915":"markdown","2a6bda69":"markdown","124d8be1":"markdown"},"source":{"15a2c59f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sn\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b20a4cb8":"dt = pd.read_csv(\"..\/input\/earthquake.csv\")","de35fbee":"dt.describe()","2b5e054b":"dt.info() #no longer i dont need to write data.columns \ndt.describe()","b799469b":"dt.corr()","c3e2e181":"f,ax = plt.subplots(figsize=(10, 10))\nsn.heatmap(dt.corr(), annot=True, linewidths=.9, fmt= '.2f',ax=ax)\nplt.show()","dcebf0c3":"dt.depth.plot(kind=\"line\",grid=True,label=\"depth\",linestyle=\":\",color=\"r\")\ndt.richter.plot(kind=\"line\",grid=True,label=\"depth\",linestyle=\"-\",color=\"g\")\nplt.legend(loc=\"best\")  #this will set the best place for label\nplt.title(\"depth-richter\")\nplt.show()\n#plot of depth's change to richter","ce42e22b":"eldenizli = dt[dt.area ==\"eldenizli\"]\ncavusoglu = dt[dt.area ==\"cavusoglu\"]\nilikaynak = dt[dt.area == \"ilikaynak\"]\n\n#i selected some areas to examine ","5bda3128":"plt.plot(eldenizli.richter,eldenizli.depth,label=\"ELDENIZLI\",color=\"red\") \nplt.legend() #this will set the best place for label\nax.set_xlabel(\"Time\")\nax.set_ylabel(\"Speed\")\nplt.show()\n","3f6fa902":"plt.plot(eldenizli.richter,eldenizli.depth,color=\"yellow\",label=\"eldenizli\")\nplt.plot(ilikaynak.richter,ilikaynak.depth,color=\"blue\",label=\"ilikaynak\")\nplt.plot(cavusoglu.richter,cavusoglu.depth,color=\"red\",label=\"cavusoglu\")\nplt.legend()\nplt.title(\"richter-depth comparison\")\nplt.show()","f1e05db4":"dt.plot(kind='scatter', x='id', y='depth',alpha = 0.5,color = 'red')\nplt.title(\"richter-depth scatter plot\")","eac9fdd6":"plt.scatter(eldenizli.richter,eldenizli.depth,color=\"yellow\",label=\"eldenizli\")\nplt.scatter(ilikaynak.richter,ilikaynak.depth,color=\"blue\",label=\"ilikaynak\")\nplt.scatter(cavusoglu.richter,cavusoglu.depth,color=\"red\",label=\"cavusoglu\")\nplt.legend()\nplt.title(\"scatter plot\")\nplt.show()  \n#It is really similar with making line plot!!\n","ab361d18":"##HERE IS A HISTOGRAM OF ELDENIZLI'S EARTHQUAKE DEPTH\nplt.hist(eldenizli.depth,bins=50)\nplt.xlabel(\"depth value\")\nplt.ylabel(\"frequency\")","740fafea":"avrg = np.mean(dt.richter) #mean\nprint(avrg)\nfilter1 = dt.richter > avrg\nprint(filter1) #if richter scale > mean this code prints True\/ else False","5f130e4d":"dt[filter1]  #and this code prints all features if their richter scale > mean\n","648358a6":"Here is Eldenizli's earthquake depths' change to richter\n\nNow let's compare Eldenizli, Ilikaynak and Cavusoglu's earthquake depths","32e3c915":"This is depth change for all areas. ","2a6bda69":"I want to find areas which are richter scales are more than average. ","124d8be1":"This is scatter plot for all areas.\nnow i will make it for specific areas"}}