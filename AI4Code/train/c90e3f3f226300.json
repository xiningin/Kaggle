{"cell_type":{"d97d642c":"code","a3c7a29f":"code","50ff54b6":"code","abb69c1c":"code","7c3f435a":"code","e562afc0":"code","1a4474f1":"code","657075c8":"code","53159f15":"code","393277b2":"markdown","3099e6c9":"markdown","6759d997":"markdown","4ba74fc8":"markdown","c8fce340":"markdown","edef7e8e":"markdown"},"source":{"d97d642c":"\nimport pandas as pd # datayi CSV veya baska kaynaklardan okutmak icin kullaniyoruz\n\n# sag tarafta draft environment bolumu var\n# o bolumde input klasorumuze sistemden veya disardan ekledigimiz data dosyasi var\n# yol tanimi ..\/input\/melb_fiyat.csv     seklinde\n","a3c7a29f":"\nveriyolu = '..\/input\/melb_fiyat.csv' # dizini veriyolu olarak degiskene atadik \ndata = pd.read_csv(veriyolu) #pandas'la read metoduyla yolunu yazdigimiz dosyayi aktardik \ndata.describe() # bakalim neler aktarmisiz describe ile ilk bir kac satiri gorelim\n","50ff54b6":"\ndata.columns # veride hangi kolonlar var gorelim","abb69c1c":"# tum veri data degiskeninde oradan alacagimiz kolonlari tanimlayalim \nsecilen_features = ['Rooms', 'Bathroom', 'Landsize', 'Lattitude', 'Longtitude']\n# simdi bu diziyi kullanarak X (tanimlayan kolonlar) ve Y (tahmin kolonu, price) sekline gecelim\n# X degerlerini data dan elde edelim\nX = data[secilen_features]","7c3f435a":"X.describe() # sectigimiz featurelar la veri kumesini gorelim","e562afc0":"# y degerini de data dan elde edecegiz.Bunun icin \ny= data.Price  # data'nin altindan Price kolonunu tum satirlarla y degiskenine aktar \ny.describe() # sectigimizi gorelim","1a4474f1":"# veriyi bolmek icin train_test_split metodunu kullanacagiz\nfrom sklearn.cross_validation import train_test_split \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0) \n# test_size 0.2 --> % 20 ise kalan % 80 train olur\n# random state = 0 ile random olmasin secimi yapiyoruz her seferinde bolumleme ve icindeki ornekler ayni kaliyor\n# arzu edilirse X_train yazilarak nasil bolundugu ekrana getirilebilir ","657075c8":"from sklearn.tree import DecisionTreeRegressor\nregressor = DecisionTreeRegressor(random_state = 0)\nregressor.fit(X_train, y_train) # modeli train degerleriyle egitiyoruz\ny_pred = regressor.predict(X_test) # modeli test bolumuyle tahmin yetenegi anlaminda test ediyoruz\n","53159f15":"# acaba tahmin ettigimiz degerler y_pred ve test degerleri y_test ne kadar yakin yanyana gorsek\n#tahmin ne kadar yakinsa fark sifira o kadar yakin olur\nfrom sklearn.metrics import mean_absolute_error\nev_fiyat_tahminleri = regressor.predict(X_test)\nmean_absolute_error(y_test, ev_fiyat_tahminleri)\n","393277b2":"Evet simdi DecisionTree algoritmas\u0131n\u0131 sklearn k\u00fct\u00fcphanesinden cagiracak ve FIT ile egitip, PREDICT ile test edecegiz","3099e6c9":"Bu sonuc (242386.78 degeri) su anlama geliyor: \nGer\u00e7ek de\u011fer ile tahmini de\u011fer aras\u0131ndaki fark\u0131n ortalamas\u0131 \u00f6rne\u011fin 1 milyonluk ev i\u00e7in 250000 civar\u0131nda olmakta. Yani model cok k\u00f6t\u00fc\nBuradan cikarilacak sonuclar\ni) Bir model her zaman kaliteli sonuclar uretmeyebilir\nii) modeli egitmekte kullandigimiz kolonlardan daha uygunlari secilirse (feature selection, extraction) tahmin yetenegi gelisebilir\niii) Baska algoritmalar kullanmak\niv) Varsa modelin parametrelerini ayarlamak (parameter hypertuning)","6759d997":"Tahmin yapmak i\u00e7in t\u00fcm kolonlar\u0131 kullanmayacagiz.. Bize gore ev fiyatini tahmin etmek icin en onemli kolonlar \n ['Rooms', 'Bathroom', 'Landsize', 'Lattitude', 'Longtitude'] baslikli kolonlar olsun. Buna gore tahminde kullan\u0131lacak kolonlar, feature lar  secilmelidir","4ba74fc8":"Simdi modeli test (%80) train (%20) diye ayirmaliyiz.\nBoylece sececegimiz algoritmayi verilerin % 80 ile egitip, % 20 si ile test edecegiz\n","c8fce340":"*  Bu notebook    [https:\/\/www.kaggle.com\/learn\/machine-learning]  linkinden adapte edilmi\u015ftir. \n*  Notebook Avustralya, Melbourne da de\u011fi\u015fik \u00f6zelliklerine g\u00f6re toplanan veriler \u00fczerinden ev fiyat\u0131 tahmin etmek \u00fczere tasarlanm\u0131\u015ft\u0131r. Bu veri  [..\/input\/melbourne-housing-snapshot\/melb_data.csv ] dizininde yer almaktad\u0131r.\n* Kaggle'da d\u0131\u015fardan y\u00fckleme yapmadan ML e\u011fitiminde kullanabilece\u011fimiz  9500 den fazla veri var.","edef7e8e":"Art\u0131k verilere ulasabiliyoruz. Bu verilerden price tahmini yapmak istiyoruz. Yan taraflardaki ifadeler( count, mean, std...) ne anlama geliyor\n\u015eimdilik detaylara girmeyelim...."}}