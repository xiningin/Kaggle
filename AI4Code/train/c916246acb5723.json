{"cell_type":{"5d3faab7":"code","3153fdac":"code","34e885e8":"code","dcdea971":"code","0a96159f":"code","5db8f2bc":"code","96569d9c":"code","586a5e22":"code","4eca5d73":"code","fc29f1b5":"code","1af77df7":"code","f246dc4f":"code","fc0c889c":"code","f3d43713":"code","35067370":"code","d3649e64":"code","ba933c3a":"code","85db2297":"code","ab95706d":"code","7618003c":"code","fa8521b4":"markdown"},"source":{"5d3faab7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\npath = \"..\/input\/picnic_hack\"\nos.listdir(path)\n\n# Any results you write to the current directory are saved as output.","3153fdac":"from fastai.vision import *\nimport pandas as pd\n\ntfms = get_transforms(flip_vert=True, max_lighting=0.15, max_zoom=1.1, max_warp=0.)\nsrc = (ImageList.from_csv(path, 'train.csv', folder='train')\n       .split_by_rand_pct(0.2)\n       .label_from_df(label_delim=','))\ndata = (src.transform(tfms, size=256)\n        .databunch().normalize(imagenet_stats))","34e885e8":"data.show_batch(rows=3, figsize=(9,9))","dcdea971":"arch = models.resnet152\nacc_02 = partial(accuracy_thresh, thresh=0.2)\nf_score_01 = partial(fbeta, thresh=0.12)\nf_score_02 = partial(fbeta, thresh=0.16)\nf_score_03 = partial(fbeta, thresh=0.18)\nf_score_04 = partial(fbeta, thresh=0.20)\nlearn = cnn_learner(data, arch, metrics=[f_score_01,f_score_02,f_score_03, f_score_04], model_dir=\"\/tmp\/model\/\")","0a96159f":"learn.lr_find()\nlearn.recorder.plot()","5db8f2bc":"lr = 0.01\nlearn.fit_one_cycle(5, slice(lr))","96569d9c":"learn.save('stage-1-rn50')\nlearn.export(file=\"\/tmp\/model\/export.pkl\")","586a5e22":"learn.unfreeze()\nlearn.lr_find()\nlearn.recorder.plot()","4eca5d73":"learn.fit_one_cycle(5, slice(1e-6, lr\/5))","fc29f1b5":"learn.freeze()\nlearn.fit_one_cycle(3, slice(lr\/10))","1af77df7":"learn.unfreeze()\nlearn.lr_find()\nlearn.recorder.plot()","f246dc4f":"learn.fit_one_cycle(5, slice(1e-6, lr\/10))","fc0c889c":"learn.freeze()\nlearn.fit_one_cycle(3, slice(lr\/50))","f3d43713":"learn.export(file=\"\/tmp\/model\/export.pkl\")","35067370":"test = ImageList.from_folder(path + '\/test')\nlen(test)","d3649e64":"learn_pred = load_learner(\"\/tmp\/model\/\", test=test)","ba933c3a":"preds, _ = learn_pred.get_preds(ds_type=DatasetType.Test)","85db2297":"thresh = 0.12\nlabelled_preds = [','.join([learn_pred.data.classes[i] for i,p in enumerate(pred) if p > thresh]) for pred in preds]","ab95706d":"fnames = [f.name for f in learn_pred.data.test_ds.items]\nprint(len(fnames))\nlabelled_preds[:5]\n","7618003c":"df = pd.DataFrame({'file':fnames, 'label':labelled_preds}, columns=['file', 'label'])\ndf.to_csv('submission.tsv', sep = '\\t', index=False)\nfrom IPython.display import FileLink\nFileLink(f'submission.tsv')","fa8521b4":"TEST PREDICTIONS"}}