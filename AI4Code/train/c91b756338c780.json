{"cell_type":{"81b76c27":"code","4a243fde":"code","5c88cac9":"code","4db09a8f":"code","d0efd279":"code","ecb45e88":"code","4f4826ba":"code","88352403":"code","0cfb9851":"code","d5a71588":"code","27e9e656":"code","b149cb25":"code","a3b01950":"markdown","61db16f7":"markdown","2e9ec062":"markdown"},"source":{"81b76c27":"import numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nfrom sklearn.metrics import roc_auc_score\n\nimport os\nprint(os.listdir(\"..\/input\"))","4a243fde":"train = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')\nprint(train.shape)\nprint(test.shape)","5c88cac9":"all_df = pd.concat([train, test], sort=False)\nbin_df = all_df.copy()\ncols = [col for col in train.columns if col not in ['ID_code', 'target']]\n\nfor col in tqdm(cols):\n    out = pd.cut(bin_df[col], bins=30, labels=False)\n    bin_df['{}_bin'.format(col)] = out.values","4db09a8f":"print(bin_df.shape)\nbin_df.head()","d0efd279":"def smooth_mean(df, col, target_col, m):\n    mean = df[target_col].mean()\n    agg = df.groupby(col)[target_col].agg(['count', 'mean'])\n    counts = agg['count']\n    means = agg['mean']\n    smooth = (counts * means + m * mean) \/ (counts + m)\n    return df[col].map(smooth)\n\ndef target_encoding(df):\n    cols = [col for col in bin_df.columns if 'bin' in col]\n    for col in tqdm(cols):\n        df['{}_smooth'.format(col)] = smooth_mean(df, col=col, target_col='target', m=30)\n        \n    return df","ecb45e88":"encoding_df = target_encoding(bin_df)","4f4826ba":"print(encoding_df.shape)\nencoding_df.head()","88352403":"smooth_cols = [col for col in encoding_df.columns if 'smooth' in col]\nencoding_df[smooth_cols].head()","0cfb9851":"all_df['pre'] = encoding_df[smooth_cols].mean(axis=1).values\ntrain = all_df[~all_df['target'].isnull()]\ntest = all_df[all_df['target'].isnull()]","d5a71588":"score = roc_auc_score(train.target, train['pre'])\nprint('{:.5f}'.format(score))","27e9e656":"sub = test[['ID_code', 'target', 'pre']].copy()\ndel sub['target']\nsub = sub.rename(columns={'pre': 'target'})\nsub.head()","b149cb25":"sub.to_csv('submission.csv', index=False)","a3b01950":"## bining","61db16f7":"## no training","2e9ec062":"## smooth target encoding\nreference: https:\/\/maxhalford.github.io\/blog\/target-encoding-done-the-right-way\/"}}