{"cell_type":{"aebac83e":"code","1f9985b3":"code","0917ad0f":"code","549d94cf":"code","3a7e1162":"code","65b5dd6d":"code","e71da593":"code","ca6ae46b":"code","9bebeda2":"code","39933cc0":"code","0d45e1dc":"code","86ac1af5":"code","1818f7e5":"code","e79b7688":"code","d1228dc7":"code","5b08b15a":"code","94d33e4d":"code","77194e4f":"code","10472086":"code","b587d722":"code","65fe5140":"code","c0a4184d":"code","1aa20fc5":"code","1f426342":"code","77a6b9fe":"code","d39bb758":"code","5a3b1f40":"code","93b98842":"code","819a1c31":"code","fc71663b":"code","61bc021e":"code","c4efb03d":"code","b8cc1d77":"code","ffd6d973":"code","67e49d8c":"code","28872cde":"code","5dd02a80":"code","b9869912":"code","1135c193":"code","42a0c10a":"code","921a83eb":"code","3cb7d490":"code","3564c994":"code","7b574e64":"code","d5037ff8":"code","24b043f7":"code","13b50f4b":"markdown","9840f3eb":"markdown","3a514932":"markdown","4c783cdb":"markdown","3033633a":"markdown","98a3b0e8":"markdown","2b253b72":"markdown","6077b834":"markdown","344a8792":"markdown","0d147cd6":"markdown","29018ae2":"markdown","b9a6407c":"markdown","60e810f6":"markdown","ccad4570":"markdown","487a872b":"markdown","d15609ad":"markdown","58e16666":"markdown","b93e5c45":"markdown","dfa8b5c4":"markdown","5a1da5ed":"markdown","19ebc0bc":"markdown","b2e4e0d4":"markdown","b284533d":"markdown","3c2f48e7":"markdown","b84088f9":"markdown","2047db3d":"markdown","6de86cbe":"markdown","77a8f679":"markdown","70e9016d":"markdown"},"source":{"aebac83e":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sbn\nimport os","1f9985b3":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import MultinomialNB, GaussianNB","0917ad0f":"from sklearn.model_selection import GridSearchCV, train_test_split\nfrom sklearn.metrics import accuracy_score, confusion_matrix, recall_score, precision_score, f1_score\nfrom sklearn.preprocessing import MinMaxScaler","549d94cf":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\ntrain_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\nx_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ny_test = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\npd.set_option(\"display.max_columns\", 12)\ntrain_data.head()","3a7e1162":"train_data.shape","65b5dd6d":"x_test.shape","e71da593":"train_data.drop([\"PassengerId\", \"Name\", \"Ticket\", \"Cabin\", \"Embarked\"], axis = 1, inplace = True)\nx_test.drop([\"PassengerId\", \"Name\", \"Ticket\", \"Cabin\", \"Embarked\"], axis = 1, inplace = True)\ny_test.drop([\"PassengerId\"], axis = 1, inplace = True)","ca6ae46b":"train_data[\"Sex\"] = np.where(train_data[\"Sex\"] == \"female\", 1, 0)\nx_test[\"Sex\"] = np.where(x_test[\"Sex\"] == \"female\", 1, 0)","9bebeda2":"Missing_values_percent = 100*(train_data.isnull().sum()\/len(train_data[\"Sex\"]))\nprint(Missing_values_percent)","39933cc0":"sbn.displot(train_data[\"Age\"], kde = True, bins = 40)\nplt.show()","0d45e1dc":"train_data[\"Age\"].fillna(train_data[\"Age\"].mean(), inplace = True)","86ac1af5":"sbn.displot(train_data[\"Age\"], kde = True, bins = 20)\nplt.show()","1818f7e5":"Missing_values_percent = 100*(train_data.isnull().sum()\/len(train_data[\"Sex\"]))\nprint(Missing_values_percent)","e79b7688":"Missing_values_percent_test = 100*(x_test.isnull().sum()\/len(x_test[\"Sex\"]))\nprint(Missing_values_percent_test)","d1228dc7":"sbn.displot(x_test[\"Age\"], kde = True, bins = 30)\nplt.show()","5b08b15a":"x_test[\"Age\"].fillna(x_test[\"Age\"].mean(), inplace = True)","94d33e4d":"sbn.displot(x_test[\"Age\"], kde = True, bins = 20)\nplt.show()","77194e4f":"x_test[\"Fare\"].fillna(x_test[\"Fare\"].mean(), inplace = True)","10472086":"Missing_values_percent_test = 100*(x_test.isnull().sum()\/len(x_test[\"Sex\"]))\nprint(Missing_values_percent_test)","b587d722":"train_data.dtypes","65fe5140":"x_test.dtypes","c0a4184d":"y_test.dtypes","1aa20fc5":"plt.figure(figsize = (7,6))\nDatacopy1 = train_data.copy()\nDatacopy1['Sex'] = Datacopy1['Sex'].replace({1: 'female', 0: 'male'})\nsbn.countplot(x= \"Sex\", hue= \"Survived\", data = Datacopy1)\nplt.show()","1f426342":"plt.figure(figsize = (6,6))\nYes_Survived_train = Datacopy1.loc[train_data[\"Survived\"] == 1]\nYes_Survived_train = Yes_Survived_train[\"Sex\"]\nYes_Survived_train.value_counts().plot(kind='pie', autopct='%1.1f%%')\nplt.title(\"Survivors\")\nplt.show()","77a6b9fe":"plt.figure(figsize = (6,6))\nNO_Survived_train = Datacopy1.loc[train_data[\"Survived\"] == 0]\nNO_Survived_train = NO_Survived_train[\"Sex\"]\nNO_Survived_train.value_counts().plot(kind='pie', autopct='%1.1f%%')\nplt.title(\"No Survivors\")\nplt.show()","d39bb758":"plt.figure(figsize = (7,6))\nDatacopy2 = train_data.copy()\nDatacopy2['Pclass'] = Datacopy2['Pclass'].replace({3: '3rd', 2: '2nd', 1: '1st'})\nsbn.countplot(x= \"Pclass\", hue= \"Survived\", data = Datacopy2)\nplt.show()","5a3b1f40":"plt.figure(figsize = (10,8))\nsbn.heatmap(train_data.corr(), annot = True, vmin = 0, cmap = \"coolwarm\")\nplt.show()","93b98842":"triu = np.triu(train_data.corr())\nplt.figure(figsize = (10,8))\nsbn.heatmap(train_data.corr(), annot = True, vmin = 0, vmax = 1, cmap = \"coolwarm\", mask = triu)\nplt.show()","819a1c31":"tril = np.tril(train_data.corr())\nplt.figure(figsize = (10,8))\nsbn.heatmap(train_data.corr(), annot = True, vmin = 0, vmax = 1, cmap = \"coolwarm\", mask = tril)\nplt.show()","fc71663b":"norm = MinMaxScaler(feature_range = (0, 1))\nx_train = train_data.drop([\"Survived\"], axis = 1)\nx_train = norm.fit_transform(x_train)\nx_test = norm.fit_transform(x_test)\ny_train = train_data[\"Survived\"]","61bc021e":"ModelKNN = KNeighborsClassifier()","c4efb03d":"# Fine-tuning\nK_values = np.array([2, 3, 5, 7, 9, 11])\nmetric = [\"minkowski\", \"chebyshev\"]\np = np.array([1, 2, 3, 4])\nparam_grid = {\"n_neighbors\": K_values, \"metric\": metric, \"p\": p}\nGridKNN = GridSearchCV(estimator = ModelKNN, param_grid = param_grid,cv = 5)\nGridKNN.fit(x_train, y_train)","b8cc1d77":"print(GridKNN.best_score_)\nprint(GridKNN.best_estimator_.n_neighbors)\nprint(GridKNN.best_estimator_.metric)\nprint(GridKNN.best_estimator_.p)","ffd6d973":"ModelKNN = KNeighborsClassifier(n_neighbors=5, p=1, metric = \"minkowski\")\nModelKNN.fit(x_train, y_train)","67e49d8c":"y_pred = ModelKNN.predict(x_test)","28872cde":"Matrix = confusion_matrix(y_test, y_pred)\nprint(Matrix)","5dd02a80":"plt.figure(figsize = (7,5))\nsbn.heatmap(Matrix, annot = True, vmin = 0,vmax = 300, cmap = \"coolwarm\")\nplt.show()","b9869912":"print(f\"Accuracy: {accuracy_score(y_test, y_pred)}\")\nprint(f\"Recall: {recall_score(y_test, y_pred)}\")\nprint(f\"Precision: {precision_score(y_test, y_pred)}\")\nprint(f\"f1_score: {f1_score(y_test, y_pred)}\")","1135c193":"ModelNBGaussian = GaussianNB()\nModelNBMultino = MultinomialNB()\nModelNBGaussian.fit(x_train, y_train)\nModelNBMultino.fit(x_train, y_train)","42a0c10a":"y_predGaussian = ModelNBGaussian.predict(x_test)\ny_predMultino = ModelNBMultino.predict(x_test)","921a83eb":"MatrixNBGaussian = confusion_matrix(y_test, y_predGaussian)\nprint(MatrixNBGaussian)","3cb7d490":"plt.figure(figsize = (7,5))\nsbn.heatmap(MatrixNBGaussian, annot = True, vmin = 0,vmax = 300, cmap = \"coolwarm\")\nplt.show()","3564c994":"print(f\"Accuracy: {accuracy_score(y_test, y_predGaussian)}\")\nprint(f\"Recall: {recall_score(y_test, y_predGaussian)}\")\nprint(f\"Precision: {precision_score(y_test, y_predGaussian)}\")\nprint(f\"f1_score: {f1_score(y_test, y_predGaussian)}\")","7b574e64":"MatrixMultinomialNB = confusion_matrix(y_test, y_predMultino)\nprint(MatrixMultinomialNB)","d5037ff8":"plt.figure(figsize = (7,5))\nsbn.heatmap(MatrixMultinomialNB, annot = True, vmin = 20,vmax = 300, cmap = \"coolwarm\")\nplt.show()","24b043f7":"print(f\"Accuracy: {accuracy_score(y_test, y_predMultino)}\")\nprint(f\"Recall: {recall_score(y_test, y_predMultino)}\")\nprint(f\"Precision: {precision_score(y_test, y_predMultino)}\")\nprint(f\"f1_score: {f1_score(y_test, y_predMultino)}\")","13b50f4b":"# ${\\color{darkred}{1.1.}}$ ${\\color{darkblue}{\\textbf{Standard libraries}}}$ $\\color{red}{\u2713}$","9840f3eb":"# ${\\color{darkred}{5.1}}$ ${\\color{darkblue}{\\textbf{Confusion matrix}}}$ $\\color{red}{\u2713}$","3a514932":"# ${\\color{darkred}{3.3.}}$ ${\\color{darkblue}{\\textbf{dtypes}}}$ $\\color{red}{\u2713}$","4c783cdb":"# $\\large{\\color{darkred}{3.}}$ $\\large{\\color{darkblue}{\\textbf{Data Preprocessing}}}$","3033633a":"# ${\\color{darkred}{4.1}}$ ${\\color{darkblue}{\\textbf{Confusion matrix}}}$ $\\color{red}{\u2713}$","98a3b0e8":"# ${\\color{darkred}{1.3.}}$ ${\\color{darkblue}{\\textbf{Data split, fine-tuning and Analysis}}}$ $\\color{red}{\u2713}$","2b253b72":"---------------\/\/-------------------------\/\/---------------------","6077b834":"${\\color{darkred}{\\textbf{GaussianNB}}}$","344a8792":"![Untitled (12).jpg](attachment:73e0f29a-573f-4dc0-86f0-5bc47780da51.jpg)","0d147cd6":"${\\color{darkred}{\\textbf{x_test}}}$ $\\color{blue}{\u2713}$","29018ae2":"# $\\large{\\color{darkred}{2.}}$ $\\large{\\color{darkblue}{\\textbf{Reading the data}}}$ $\\color{red}{\u2713}$","b9a6407c":"![titanic2-0349859403-2203948..capa_widexl.jpg](attachment:527f8e68-cdc8-439c-ab46-bc32512f8cea.jpg)","60e810f6":"# $\\large{\\color{darkred}{4.}}$ $\\large{\\color{darkblue}{\\textbf{KNN}}}$ $\\color{red}{\u2713}$","ccad4570":"# ${\\color{darkred}{3.1.}}$ ${\\color{darkblue}{\\textbf{Codification of Categorical variables}}}$  $\\color{red}{\u2713}$","487a872b":"# ${\\color{darkred}{3.4.}}$ ${\\color{darkblue}{\\textbf{Correlation}}}$ $\\color{red}{\u2713}$","d15609ad":"# ${\\color{darkred}{3.2.}}$ ${\\color{darkblue}{\\textbf{Missing Values Treatment}}}$  $\\color{red}{\u2713}$","58e16666":"# ${\\color{darkred}{1.2.}}$ ${\\color{darkblue}{\\textbf{KNN and MultinomialNB - GaussianNB}}}$ $\\color{red}{\u2713}$","b93e5c45":"${\\color{darkred}{\\textbf{train_data}}}$ $\\color{blue}{\u2713}$","dfa8b5c4":"# $\\large{\\color{darkred}{1.}}$ $\\large{\\color{darkblue}{\\textbf{Importing Libraries}}}$ $\\color{red}{\u2713}$","5a1da5ed":"${\\color{darkred}{\\textbf{Prediction}}}$","19ebc0bc":"GaussianNB\n\nAccuracy: 0.9282296650717703\n\nRecall: 0.9605263157894737\n\nPrecision: 0.8588235294117647\n\nf1_score: 0.906832298136646","b2e4e0d4":"${\\color{darkred}{\\textbf{Medium (-.3 to -.5) correlation (-): Pclass and Survived - Pclass and Age}}}$\n\n${\\color{darkred}{\\textbf{Medium (.3 to .5) correlation (+): SibSp and\tParch}}}$\n\n${\\color{darkred}{\\textbf{Large (-.5 to -1.0) correlation (-): Pclass and Fare}}}$\n\n${\\color{darkred}{\\textbf{Large (.5 to 1.0) correlation (+): Sex and Survived}}}$","b284533d":"# ${\\color{darkred}{3.5.}}$ ${\\color{darkblue}{\\textbf{Data train split}}}$ $\\color{red}{\u2713}$","3c2f48e7":"# $\\large{\\color{darkred}{5.}}$ $\\large{\\color{darkblue}{\\textbf{Naive Bayes}}}$ $\\color{red}{\u2713}$","b84088f9":"${\\color{darkred}{\\textbf{Heatmap}}}$","2047db3d":"${\\color{darkred}{\\textbf{Prediction}}}$","6de86cbe":"${\\color{darkred}{\\textbf{MultinomialNB}}}$","77a8f679":"${\\color{darkred}{\\textbf{The survival rate for women was higher than for men.}}}$","70e9016d":"# $\\Large{\\color{darkblue}{\\textbf{KNN vs Naive Bayes}}}$"}}