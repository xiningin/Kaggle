{"cell_type":{"745aa930":"code","5b65da0d":"code","e558612e":"code","257550ea":"code","c453082d":"code","762c7d4d":"code","49e70579":"code","63ee9d0b":"code","fa885f38":"code","c2a879dd":"code","9611f8a8":"code","03b4002d":"code","7d054851":"code","bc1cb863":"code","8a214cc6":"code","f31cfd6c":"code","252e8473":"code","69a69c21":"code","378a00d4":"code","4b9fd80d":"code","251eab5a":"code","1f4f5356":"code","9902d5c9":"code","c210f328":"code","9aea9add":"code","b06814c7":"code","bf4601ec":"code","e5a3aa0f":"code","d3a479fa":"code","3b7e8d9b":"code","3e81852f":"code","52644c47":"code","cbc08b10":"code","ca9d030d":"code","34b6b447":"code","5f91068b":"markdown","e42ceb66":"markdown","e53275cb":"markdown","e6cf23bb":"markdown"},"source":{"745aa930":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5b65da0d":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.express as px\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LassoCV\nfrom sklearn.linear_model import ElasticNetCV\nfrom sklearn.linear_model import RidgeCV\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error,mean_absolute_error\nfrom sklearn.ensemble import StackingRegressor","e558612e":"table = pd.read_csv(\"..\/input\/hazardous-asteroid-orbits\/pha.csv\")","257550ea":"table.head()","c453082d":"table.describe()","762c7d4d":"table.isnull().sum()","49e70579":"table.info()","63ee9d0b":"table.corr()","fa885f38":"plt.figure(figsize = (15,10))\nsns.heatmap(table.corr(),  annot = True)","c2a879dd":"X = table.loc[:,('a (AU)', 'e')].values\nY = table['Q (AU)']\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.5)","9611f8a8":"LinearRegression = LinearRegression()\nlin_reg = LinearRegression.fit(X_train, Y_train)\nY_pred = lin_reg.predict(X_test)\nprint('Predicted Q:', Y_pred)","03b4002d":"accuracy = r2_score(Y_test,Y_pred)\nprint('Accuracy: ', accuracy)","7d054851":"MAE = mean_absolute_error(Y_test, Y_pred)\nprint('Absolute error:', MAE)\nMRE = mean_squared_error(Y_test, Y_pred)\nprint('Squared error', MRE)","bc1cb863":"figure = plt.figure(figsize = (10,7))\nplt.scatter(Y_test, Y_pred, alpha = 0.5, c = \"b\")\nplt.xlabel('Actual Q (AU)')\nplt.ylabel('Predicted Q (AU)')","8a214cc6":"figure = plt.figure(figsize = (10,7))\nsns.distplot(Y_test - Y_pred, color = \"blue\")","f31cfd6c":"Lasso = LassoCV()\nlasso = Lasso.fit(X_train, Y_train)\nY_pred_lasso = lasso.predict(X_test)\nprint('Predicted Q (AU) using lasso:', Y_pred_lasso)","252e8473":"accuracy_lasso = r2_score(Y_test, Y_pred_lasso)\nprint('Accuracy: ', accuracy_lasso)","69a69c21":"MAE_lasso = mean_absolute_error(Y_test, Y_pred_lasso)\nprint('Absolute error:', MAE_lasso)\nMRE_lasso = mean_squared_error(Y_test, Y_pred_lasso)\nprint('Squared error', MRE_lasso)","378a00d4":"fig = plt.figure(figsize = (10,10))\nplt.scatter(Y_test, Y_pred_lasso, alpha = 0.5, c = \"b\")\nplt.xlabel('Actual Q (AU)')\nplt.ylabel('Predicted Q (AU)')","4b9fd80d":"fig = plt.figure(figsize=(10,10))\nsns.distplot(Y_test-Y_pred_lasso,color=\"blue\")","251eab5a":"Ridge = RidgeCV()\nridge = Ridge.fit(X_train, Y_train)\nY_pred_ridge = ridge.predict(X_test)\nprint('Predicted Q (AU) using ridge:', Y_pred_ridge)","1f4f5356":"accuracy_ridge = r2_score(Y_test, Y_pred_ridge)\nprint('Accuracy: ', accuracy_ridge)","9902d5c9":"MAE_ridge = mean_absolute_error(Y_test, Y_pred_ridge)\nprint('Absolute error:', MAE_ridge)\nMRE_ridge = mean_squared_error(Y_test, Y_pred_ridge)\nprint('Squared error', MRE_ridge)","c210f328":"fig = plt.figure(figsize = (10,10))\nplt.scatter(Y_test, Y_pred_ridge, alpha = 0.5, c = \"b\")\nplt.xlabel('Actual Q (AU)')\nplt.ylabel('Predicted Q (AU)')","9aea9add":"fig = plt.figure(figsize = (10,10))\nsns.distplot(Y_test - Y_pred_ridge, color = \"blue\")","b06814c7":"ElasticNet = ElasticNetCV()\nelasticNet = ElasticNet.fit(X_train, Y_train)\nY_pred_elasticNet = elasticNet.predict(X_test)\nprint('Predicted Q (AU) using elasticNet:', Y_pred_elasticNet)","bf4601ec":"accuracy_elasticNet = r2_score(Y_test, Y_pred_elasticNet)\nprint('Accuracy: ', accuracy_elasticNet)","e5a3aa0f":"MAE_elasticNet = mean_absolute_error(Y_test, Y_pred_elasticNet)\nprint('Absolute error:', MAE_elasticNet)\nMRE_elasticNet = mean_squared_error(Y_test, Y_pred_elasticNet)\nprint('Squared error', MRE_elasticNet)","d3a479fa":"fig = plt.figure(figsize = (10,10))\nplt.scatter(Y_test, Y_pred_elasticNet, alpha = 0.5, c = \"b\")\nplt.xlabel('Actual Q (AU)')\nplt.ylabel('Predicted Q (AU)')","3b7e8d9b":"fig = plt.figure(figsize = (10,10))\nsns.distplot(Y_test - Y_pred_elasticNet, color = \"blue\")","3e81852f":"Ensamble = StackingRegressor([('LinearRegression', LinearRegression), ('Lasso', Lasso), ('Ridge', Ridge), ('ElasticNet', ElasticNet)])\nensamble = Ensamble.fit(X_train, Y_train)\nY_pred_ensamble = ensamble.predict(X_test)\nprint('Predicted Q (AU):',Y_pred_ensamble)","52644c47":"accuracy_ensamble = r2_score(Y_test,Y_pred_ensamble)\nprint('Accuracy: ', accuracy_ensamble)","cbc08b10":"MAE_ensamble = mean_absolute_error(Y_test,Y_pred_ensamble)\nprint('Absolute error:',MAE_ensamble)\nMRE_ensamble = mean_squared_error(Y_test,Y_pred_ensamble)\nprint('Squared error',MRE_ensamble)","ca9d030d":"fig = plt.figure(figsize=(10,10))\nplt.scatter(Y_test, Y_pred_ensamble, alpha = 0.5, c = \"b\")\nplt.xlabel('Actual Q (AU)')\nplt.ylabel('Predicted Q (AU)')","34b6b447":"fig = plt.figure(figsize = (10,10))\nsns.distplot(Y_test - Y_pred_ensamble, color = \"blue\")","5f91068b":"# **Lasso**","e42ceb66":"# **ENSAMBLE USING STACKING REGRESSOR**","e53275cb":"# **Ridge**","e6cf23bb":"# **ELASTICNET**"}}