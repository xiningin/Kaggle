{"cell_type":{"4a9fc004":"code","aadf1490":"code","68c77fe2":"code","7d9b85b7":"code","3a9dc9e2":"code","d25cfe5a":"code","c8b8270f":"code","62b9bdf3":"code","b775eab1":"code","2cbd1def":"code","09e6ae25":"code","f136d883":"code","694c6b3a":"code","47d40009":"code","d299497f":"code","cb2ed3b4":"code","6d3813ae":"code","f91cb1e3":"code","0cf24c3a":"markdown","71f691c8":"markdown","3970562b":"markdown","f4c1ec9b":"markdown","1ed19c53":"markdown","e203a465":"markdown","c17203cf":"markdown","bc89487c":"markdown","b994f127":"markdown","6894b764":"markdown","8f67410b":"markdown","26cf6ac6":"markdown","2d006a53":"markdown","d8ea59a8":"markdown","5d17a197":"markdown","6280acbc":"markdown","d84fe41d":"markdown","caf86c81":"markdown","9f89a1c0":"markdown","8e222e23":"markdown"},"source":{"4a9fc004":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\nimport datetime\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nfrom shapely.geometry import Point, Polygon\n!pip install bar-chart-race\nimport bar_chart_race as bcr\nimport folium # library for interactive map drawing\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aadf1490":"df = pd.read_csv('\/kaggle\/input\/real-estate-market-trends\/RDC_Inventory_Core_Metrics_Zip_History.csv')\nprint('Dataset has ',df.shape[0],' records and ',df.shape[1], ' columns' )\nprint(' ')\ndf","68c77fe2":"df.drop(df.tail(1).index,inplace=True) ","7d9b85b7":"df.info()","3a9dc9e2":"df = df.drop(['flag'], axis=1)\ndf.rename(columns={'postal_code': 'ZIP'}, inplace=True)\ndf['ZIP'] = df['ZIP'].astype('str') \ndf['ZIP'] = df['ZIP'].apply(lambda x: x.zfill(5))\n","d25cfe5a":"\ndf['month_date_yyyymm'] = pd.to_datetime(df['month_date_yyyymm'],format = '%Y%m')\ndf.rename(columns={'month_date_yyyymm':'Date'}, inplace=True)","c8b8270f":"df['Month'] = df['Date'].dt.month\ndf['Year'] = df['Date'].dt.year\ndf['Date'] = df['Date'].dt.date\ndf.head()\n","62b9bdf3":"df[['city','STATE_ABBR']] = df.zip_name.str.split(',',expand=True)\ndf['STATE_ABBR'] = df['STATE_ABBR'].str.lstrip().str.upper()\ndf['city'] = df['city'].str.title()\ndf","b775eab1":"df = df.sort_values([\"STATE_ABBR\", \"Date\"], ascending = (True, True)).reset_index(drop = True) # Default is ascending\ndf = df[ ['STATE_ABBR'] + [ col for col in df.columns if col != 'STATE_ABBR' ] ]\ndf","2cbd1def":"df_agg=df.drop(columns = ['Year','Month']).groupby(['city','ZIP','STATE_ABBR'], as_index=False).agg(np.mean)\ndf_agg","09e6ae25":"us_zipcodes = pd.read_csv(\"..\/input\/nyc-zipcode-geodata\/uszipcodes_geodata.txt\", delimiter=',', dtype=str)\nus_zipcodes['ZIP'] = us_zipcodes['ZIP'].astype('str') \ndf_agg = pd.merge(df_agg,us_zipcodes, on=['ZIP'], how='inner')\ndf_agg","f136d883":"from folium.plugins import MarkerCluster # for clustering the markers\n\ndf_state_agg = df_agg.loc[(df_agg['STATE_ABBR']== 'NY')].reset_index()\nmap = folium.Map(location=[df_state_agg['LAT'].median(),df_state_agg['LNG'].median()], default_zoom_start=18)\n\n#### For coloring zip codes based on a column, you need to find the zipcode boundaries by googling! \nmap.choropleth(geo_data=\"..\/input\/nyc-zipcode-geodata\/nyc-zip-code-tabulation-areas-polygons.geojson\", # I found this NYC zipcode boundaries in Kaggle! Some other zipcode boundaries is harder to find\n             data=df_state_agg, # my dataset\n             columns=['ZIP', 'average_listing_price'], # \"ZIP\" is for matching the geojson zipcode, \"average_listing_price\" is the column that changes the color of zipcode areas\n             key_on='feature.properties.postalCode', # this path contains zipcodes in str type, this zipcodes should match with our ZIP CODE column \n             fill_color='BuPu', fill_opacity=0.7, line_opacity=0.3,\n             legend_name='Average Listing Price')\n\n\n# The following code adds a marker for aggregated information on each of the zip codes and is avaialble for all States\nmarker_cluster = MarkerCluster().add_to(map) # This creates marker clusters \nfor i in range(df_state_agg.shape[0]):\n    location = [df_state_agg['LAT'][i],df_state_agg['LNG'][i]]\n    folium.Marker(location, \n                  popup=\"\"\" <i>Area Name: <\/i><b><br>{}<\/b><br>\n                  <i>Average Listing Price: <\/i> <br> <b>${}<\/b> <br>\n                      <i>Average Active Listing Count: <\/i><b><br>{}<\/b><br>\n                      <i>Average yearly Listing Price change: <\/i><b><br>{}<\/b><br>\"\"\".format(df_state_agg['city'][i],df_state_agg['average_listing_price'][i], round(df_state_agg['active_listing_count'][i],2), round(df_state_agg['average_listing_price_yy'][i],2))).add_to(marker_cluster)\n#map.fit_bounds(map.get_bounds(), padding=(1, 1))\nmap.fit_bounds([[40.54, -74], [40.81, -73.9]])\nmap","694c6b3a":"# Visualization\nlist_of_city = ['New York','Atlanta','Chicago','Seattle','Boston','Los Angeles','Miami','Houston']\ndf_agg=df.drop(columns = ['Month']).groupby(['city','ZIP','STATE_ABBR','Year','Date'], as_index=False).agg(np.mean)\ndf_agg_filtered = df_agg[df_agg['city'].isin(list_of_city)]\n         \nplt.figure(figsize=(10, 8), dpi=80)\nbox_plot = sns.boxplot(x = 'city',y = 'average_listing_price',data = df_agg_filtered.sort_values('average_listing_price'))\nplt.ylabel('Price')\nplt.xlabel('city')\n\nax = box_plot.axes\nlines = ax.get_lines()\ncategories = ax.get_xticks()\nax.tick_params(axis='x', rotation=90)\n\nfor s in ['top', 'left', 'right']:\n    ax.spines[s].set_visible(False)\nax.grid(axis='y', linestyle='-', alpha=0.4) \n  \nbox_plot.figure.tight_layout()\n\nfig = box_plot.get_figure()","47d40009":"# Visualization\nplt.figure(figsize=(10, 8), dpi=80)\nbox_plot = sns.boxplot(x = 'city',y = 'active_listing_count',data = df_agg_filtered.sort_values('active_listing_count'))\nplt.ylabel('Listing Count')\nplt.xlabel('city')\n\nax = box_plot.axes\nlines = ax.get_lines()\ncategories = ax.get_xticks()\nax.tick_params(axis='x', rotation=90)\nfor s in ['top', 'left', 'right']:\n    ax.spines[s].set_visible(False)\nax.grid(axis='y', linestyle='-', alpha=0.4) \n  \nbox_plot.figure.tight_layout()\n\nfig = box_plot.get_figure()","d299497f":"df_2021 = df_agg_filtered[(df_agg_filtered['Year'] == 2021)].groupby(['city'], as_index=False).agg(np.mean)\nCounty_max_increase = df_2021.loc[df_2021['median_listing_price_yy'] == df_2021['median_listing_price_yy'].max()]['city'].values[0]\nCounty_min_increase = df_2021.loc[df_2021['median_listing_price_yy'] == df_2021['median_listing_price_yy'].min()]['city'].values[0]\nprint('city with the most yearly increase in price among ['+ ' ,'.join([str(elem) for elem in list_of_city]) +'] in 2021 is ', County_max_increase)\nprint('city with the least yearly increase in price among ['+ ' ,'.join([str(elem) for elem in list_of_city]) + '] in 2021 is ', County_min_increase)\ndf_2021.style.background_gradient()","cb2ed3b4":"sns.displot( \n    data = df[df['city']== County_min_increase],\n    x = \"median_listing_price\",\n    hue = \"Year\",\n    kind = \"hist\",\n    aspect = 1.5,\n    log_scale = 10,\n    bins = 20\n             )\nprint(' ')","6d3813ae":"df_race = df_agg_filtered[['Date','city','average_listing_price']]\ndf_race=df_race.pivot_table(values = 'average_listing_price',index=['Date'],columns = 'city')","f91cb1e3":"bcr.bar_chart_race(df =df_race,n_bars = 8, sort = 'desc', steps_per_period =7,  title= 'Average Housing Price Bar Chart Race',filter_column_colors=True,dpi=300,cmap='dark12',fixed_max=True,figsize=(6, 4))","0cf24c3a":"#### I am visualizing New York State data on map","71f691c8":"<hr\/>\n# **United States Real Estate Market Trends Visualization**\n<span id=\"0\"><\/span>\n[**Maede Maftouni**](https:\/\/www.kaggle.com\/maedemaftouni)\n<hr\/>\n<font color=green>\n1. [Overview](#1)\n1. [Importing Modules, Reading the Dataset](#2)\n1. [Data Cleaning](#3)\n1. [Market Trend Visualizations](#4)\n    * [Visualization on Map](#5)\n    * [Housing Price Comparison Between some Major U.S. Cities](#6) \n    * [Listing Count Comparison Between some Major U.S. Cities](#7) \n    * [Which Cities Had the Most Change in Prices in 2021?](#8) \n    * [Average Listing Price Distribution in NYC!](#9) \n    * [The Housing Price Bar Chart Race](#10) \n    \n    \n    \n    \n    \n    \n    ","3970562b":"## <span id=\"6\"><\/span> Housing Price Comparison Between some Major U.S. Cities\n#### [Return Contents](#0)\n<hr\/>","f4c1ec9b":"### Correcting the format of the Date column ","1ed19c53":"# <span id=\"1\"><\/span> Overview\n<hr\/>\nWelcome to my Kernel! In this kernel, I visualize the Realtor.com Data from 2016 through 2021 for better insights about the housing market trends. This notebook uses the data broken down at the Zip Code level. Please check the \"US Real Estate Market Trends Visualization\" notebook for the State level visualizations. \n\nIf you have any question or feedback, do not hesitate to write in the comments and if you like this kernel, please <b><font color=\"green\">do not forget to UPVOTE <\/font><\/b> \ud83d\ude42 \n\n<br\/>\n<img src=\"https:\/\/homespropertyguide.com\/wp-content\/uploads\/2021\/07\/14012216_G-683x375.jpg\" title=\"source: imgur.com\" \/>","e203a465":"# <span id=\"3\"><\/span> Data Cleaning \n#### [Return Contents](#0)\n<hr\/>","c17203cf":"### Adding longitude and latitude columns to each Zip code","bc89487c":"### Creating State and County columns and Sorting records by State and Date","b994f127":"## <span id=\"12\"><\/span> Average Listing Price Distribution in NYC!\n\n#### From this data alone, we can see that New York's real estate market took a heavy hit during the Covid-19. \n#### This is explainable by the demand for housing shifted from the cities to the suburbs.","6894b764":"\n### List of columns and the count and type of data in each column","8f67410b":"### Handling the columns of type \"Object\"","26cf6ac6":"### The last row is a note, not a record, and should be dropped!","2d006a53":"#### We aggregate (take the average of) the listings at each zip","d8ea59a8":"## <span id=\"5\"><\/span> Visualization on Map\n#### [Return Contents](#0)\n<hr\/>","5d17a197":"# <span id=\"2\"><\/span> Importing Modules, Reading the Dataset\n#### [Return Contents](#0)\n<hr\/>","6280acbc":"## <span id=\"7\"><\/span> Listing Count Comparison Between some Major U.S. Cities\n#### [Return Contents](#0)\n<hr\/>","d84fe41d":"# <span id=\"4\"><\/span> Market Trend Visualizations\n#### [Return Contents](#0)\n<hr\/>","caf86c81":"## <span id=\"8\"><\/span> Which Cities Had the Most Change in Prices in 2021?\n#### [Return Contents](#0)\n<hr\/>","9f89a1c0":"## <span id=\"10\"><\/span> The Housing Price Bar Chart Race\n#### The drastic change in Utah's housing price is also apparent in the this bar chart race.","8e222e23":"### Extracting the Year and Month from dates"}}