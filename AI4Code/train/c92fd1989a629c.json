{"cell_type":{"1cb20843":"code","3a21011d":"code","4bce0815":"code","3015fd8a":"code","656e56ed":"code","4a3d96a8":"code","108499d3":"code","e8fcfc08":"markdown","12db0ac4":"markdown","0f35ba1e":"markdown","ced7beeb":"markdown","481884e4":"markdown","373ce895":"markdown","5ee6c37f":"markdown","bd89bc6d":"markdown","d72ce502":"markdown","af2b1f4e":"markdown","cfe3f72b":"markdown"},"source":{"1cb20843":"!pip install pywedge --quiet","3a21011d":"import pywedge as pw","4bce0815":"import pandas as pd\ntrain = pd.read_csv('https:\/\/raw.githubusercontent.com\/taknev83\/datasets\/master\/credit_risk_train.csv')\ntest = pd.read_csv('https:\/\/raw.githubusercontent.com\/taknev83\/datasets\/master\/credit_risk_test.csv')","3015fd8a":"train.head()","656e56ed":"train.info()","4a3d96a8":"mc = pw.Pywedge_Charts(train, c=None, y = 'class', manual=False)","108499d3":"charts = mc.make_charts()","e8fcfc08":"### Please share your kind feedback on Pywedge-Make_Charts module, that will help me to refine the package.  ","12db0ac4":"### Pywedge is a [pip installable](https:\/\/pypi.org\/project\/pywedge\/) Python package that intends to,\n1. ***Make multiple charts*** in a single line of code, to enable the user to quickly read through the charts and can make informed choices in pre-processing steps\n\n2. ***Quickly preprocess*** the data by taking the user\u2019s preferred choice of pre-processing techniques & it returns the cleaned datasets to the user in the first step.\n\n3. Make a ***baseline model summary***, which can return ten various baseline models, which can point the user to explore the best performing baseline model.","0f35ba1e":"***Pywedge intends to help the user by quickly making charts, preprocessing the data and to rightly point out the best performing baseline model for the given dataset so that the user can spend quality time tuning such a model algorithm.***","ced7beeb":"Call the make_charts method from the instantiated class, which renders the following charts widget.","481884e4":"#### Importing the package ","373ce895":"### *** This Notebook walks through the Make_Charts module in Pywedge**\n\n### Please refer [GitHub](https:\/\/github.com\/taknev83\/pywedge) for more info\n\n### Please read about Pywedge-Make_Charts module in this [article published in Towards Data Science](https:\/\/towardsdatascience.com\/pywedge-a-complete-package-for-eda-data-preprocessing-and-modelling-32171702a1e0) and in this [article published in Analytics India Magazine](https:\/\/analyticsindiamag.com\/how-to-build-interactive-eda-in-2-lines-of-code-using-pywedge\/) ","5ee6c37f":"### As the make_charts module uses, IpyWidgets, the interactive charts can only be rendered in a live kernal","bd89bc6d":"## * Please Edit & Run All to have the charts rendered","d72ce502":"## Please find the preview of make_charts below\n\n![make_charts](https:\/\/raw.githubusercontent.com\/taknev83\/pywedge\/main\/images\/make_charts.gif)","af2b1f4e":"##### Instantiate the Pywedge_Charts class, which takes the following inputs & returns the Charts widget\n\n **Inputs:**\n\n 1. Dataframe\n\n 2. c = any redundant column to be removed (like ID column etc., at present supports a single column removal, the subsequent version will provision multiple column removal requirements)\n\n 3. y = target column name as a string ","cfe3f72b":"\n### Installing pywedge"}}