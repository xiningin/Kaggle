{"cell_type":{"96429b05":"code","bd26b0d7":"code","cdbc629a":"code","fe1536c6":"code","105a8ef6":"code","b3b74dcd":"code","f890f91c":"code","5c0d6954":"code","e9979fc1":"code","f702121a":"code","2e7ea635":"code","297ad439":"code","3dbec201":"code","7669a0cf":"code","49ef1997":"code","213a5e05":"code","3ba75538":"code","749d5673":"code","8878ae5d":"code","1b8065ce":"code","c1f38fbc":"markdown"},"source":{"96429b05":"import pandas as pd\nnetflix=pd.read_csv('..\/input\/updated-netflix-stock-price-all-time\/netflix.csv')\nnetflix.head()","bd26b0d7":"netflix=netflix[['Date','Close']]\nnetflix.head()","cdbc629a":"netflix.info()","fe1536c6":"!pip install pycaret-ts-alpha","105a8ef6":"from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\nfrom sktime.utils.plotting import plot_series","b3b74dcd":"netflix.index = pd.DatetimeIndex(netflix[\"Date\"])\nnetflix.drop([\"Date\"],axis=1,inplace=True)\nnetflix.head()","f890f91c":"netflix = netflix.asfreq('d')\nnetflix.index","5c0d6954":"netflix.head()","e9979fc1":"netflix=netflix.fillna(method='ffill')\nnetflix.head()","f702121a":"data=netflix.Close\ndata","2e7ea635":"import matplotlib.pyplot as plt\n_ =plot_series(data)\nplt.xticks(rotation=90)\nplt.grid()","297ad439":"exp = TimeSeriesExperiment()\nexp.setup(data=data,session_id=42,fh=365)","3dbec201":"## Create a model manually\nmodel = exp.create_model(\"arima\")\nmodel","7669a0cf":"y_train = exp.get_config(\"y_train\")\ny_train[:5]","49ef1997":"y_predict = exp.predict_model(model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","213a5e05":"tuned_model = exp.tune_model(model)\ntuned_model","3ba75538":"exp.predict_model(tuned_model)","749d5673":"y_predict = exp.predict_model(tuned_model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","8878ae5d":"# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n_=plot_series(data, y_pred_future, labels=['All', 'Future Pred (Unknown)'])\nplt.grid()","1b8065ce":"# Test Set Predictions\ny_pred = exp.predict_model(tuned_model)\n\n# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n\n# Plot Results\ny_train = exp.get_config(\"y_train\")\n_ = plot_series(data, y_train, y_pred, y_pred_future, labels=['All', 'Train', 'Test Predictions', 'Future Pred (Unknown)'])\nplt.grid()","c1f38fbc":"# "}}