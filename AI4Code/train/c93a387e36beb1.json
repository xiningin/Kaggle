{"cell_type":{"1d61488f":"code","f6e1d607":"code","f6483ba3":"code","72a61d02":"code","20c302ad":"code","ec5098e9":"code","d88b5234":"code","5d21af9c":"code","75134626":"code","aa779759":"code","8208bd2f":"code","e080aa33":"code","7bd65e52":"code","49e5e229":"code","15b895c5":"code","7054c87a":"code","aade7bf6":"code","b666157b":"code","28abb1f3":"code","6f863c51":"code","2238718b":"code","c0122c52":"code","c1bf75ce":"code","e00ba4bf":"code","2b3bb772":"code","cba4b7d5":"code","4387a74c":"code","ec51d7fb":"code","80c59a08":"code","be0c70ae":"code","c44c3c18":"code","e6af1302":"code","f63165a3":"code","76a1fd79":"code","e0c698a1":"code","18265d3a":"code","1c58382e":"code","b677fa1e":"code","20e62798":"code","0533446c":"code","9d737ca8":"code","b05d6879":"code","eb00670e":"code","17f865c2":"code","94acf84a":"code","c3579a75":"code","67c20454":"code","5ddcbb81":"code","7cfd875c":"code","6fb6a363":"code","52c396da":"code","d9066460":"code","874fb4e0":"code","a6fc5145":"code","bb55b964":"code","9234b436":"code","7eafdd6f":"code","bf28ce1b":"code","3a6a11f1":"code","1990b343":"code","ee3fd8e9":"code","3160e5a8":"code","7176c43c":"code","ba6ce340":"code","39335594":"code","f632c06e":"code","8261b9b7":"code","eb73c70c":"code","5c0b177f":"code","c71f4d86":"code","fb97d413":"code","2cc3e976":"code","30e41149":"code","d92169e4":"code","d7cae412":"code","8acd0131":"code","e1e477e5":"code","9d8a4d5a":"code","234732d9":"code","f60754b4":"code","a95372b9":"code","8f99ee1e":"code","02586f7e":"code","f4ebb298":"code","7631876b":"code","11e0cf3f":"code","3712d5d9":"code","a18e6cf8":"code","a714e265":"code","e75e00cf":"code","e4001e3b":"code","8e76ed2e":"code","f4e881f6":"code","ab8321aa":"code","7a62daca":"code","a7967975":"code","4115acf6":"code","ef58ccb4":"code","db7322dc":"code","09256145":"code","2b9f3a82":"code","ec8c610b":"code","338624bb":"code","eccaa7f4":"code","a2a99c46":"code","30305235":"code","d01caa31":"code","0825b115":"code","246e9661":"code","e54215a8":"code","de238d7e":"code","cf74fd77":"code","7b4d17b6":"code","feb36a11":"code","19983ccf":"code","24a234fc":"code","79e5912c":"code","412b5ac3":"code","9a6cbd31":"code","677cef24":"code","a76efad1":"code","28c471d7":"code","4ccbbdce":"code","1475979d":"code","e3554b2a":"code","0d874be9":"code","ef1b0807":"code","55e5d606":"code","2265ebef":"code","adc1ca1f":"code","0a9a678b":"code","3f8a8394":"code","d80d99d1":"code","fad66009":"code","b9a52359":"code","517764a0":"code","1470dc81":"code","808d6932":"code","5a3d02ea":"markdown","25e406fd":"markdown","4fc5cb9a":"markdown","e7283674":"markdown","c7775590":"markdown","ce72fd2d":"markdown","444f50cd":"markdown","9ed31e80":"markdown","5b33d3e2":"markdown","e70e67c0":"markdown","c33582e0":"markdown","f542277f":"markdown","77114d13":"markdown","a03bfd2f":"markdown","58e586e3":"markdown","7c8853ca":"markdown","42e2f270":"markdown","d07c8482":"markdown","db45767e":"markdown","bc695f68":"markdown","4b670049":"markdown","b4ccb073":"markdown","140757f0":"markdown"},"source":{"1d61488f":"!pip install dataprep by","f6e1d607":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom warnings import filterwarnings\nfrom mpl_toolkits.mplot3d import Axes3D\nimport statsmodels.api as sm\nimport missingno as msno\nimport statsmodels.stats.api as sms\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import scale\nfrom sklearn.neighbors import LocalOutlierFactor\nfrom scipy.stats import levene\nfrom scipy.stats import shapiro\nfrom scipy.stats.stats import pearsonr\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict\nfrom sklearn.preprocessing import scale\nfrom sklearn.model_selection import ShuffleSplit, GridSearchCV\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn import model_selection\nfrom sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import BaggingRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.cross_decomposition import PLSRegression\nfrom sklearn.linear_model import Ridge\nfrom sklearn.linear_model import RidgeCV\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import LassoCV\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.linear_model import ElasticNetCV\nfrom sklearn import linear_model\nfrom sklearn.ensemble import RandomForestRegressor, RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingRegressor, GradientBoostingClassifier\nimport xgboost as xgb\nfrom xgboost import XGBRegressor, XGBClassifier\nfrom lightgbm import LGBMRegressor, LGBMClassifier\nfrom catboost import CatBoostRegressor, CatBoostClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn import tree\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom yellowbrick.cluster import KElbowVisualizer\nfrom sklearn.cluster import KMeans\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.manifold import Isomap,TSNE\nfrom sklearn.feature_selection import mutual_info_classif\nfrom tqdm.notebook import tqdm\nfrom scipy.stats import ttest_ind\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.offline as pyo\nimport scipy.stats as stats\nimport pymc3 as pm\nfrom dataprep.eda import *\nfrom dataprep.eda import plot\nfrom dataprep.eda import plot_diff\nfrom dataprep.eda import plot_correlation\nfrom dataprep.eda import plot_missing\nimport plotly.figure_factory as ff\nfrom collections import Counter\nimport pandas_profiling as pp\nfrom mpl_toolkits.basemap import Basemap\nimport datetime as dt\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nfilterwarnings(\"ignore\", category=DeprecationWarning) \nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)","f6483ba3":"General_CSV = pd.read_csv(\"..\/input\/earthquake\/earthquake.csv\")\nData = General_CSV.copy()\nNumeric_Data = Data.select_dtypes(include=[\"float32\",\"float64\",\"int32\",\"int64\",\"uint8\"])","72a61d02":"Data","20c302ad":"Numeric_Data","ec5098e9":"print(\"INFO:\\n\")\nprint(Data.info())","d88b5234":"print(\"DESCRIBE:\\n\")\nprint(Data.describe().T)","5d21af9c":"print(\"CORRELATION:\\n\")\nprint(Numeric_Data.corr())","75134626":"print(\"COVARIANCE:\\n\")\nprint(Numeric_Data.cov())","aa779759":"print(\"STD SPECIAL:\\n\")\nprint(Numeric_Data.std())","8208bd2f":"print(\"COLUMNS:\\n\")\nprint(Data.columns)","e080aa33":"print(\"SHAPE: \",Data.shape)\nprint(\"SIZE: \",Data.size)","7bd65e52":"print(\"NaN:\\n\")\nprint(Data.isnull().sum())","49e5e229":"print(\"DUPLICATED\\n\")\nprint(Data.duplicated().sum())","15b895c5":"print(\"CITY\\n\")\nprint(Data[\"city\"].value_counts())","7054c87a":"print(\"AREA\\n\")\nprint(Data[\"area\"].value_counts())","aade7bf6":"print(\"DIRECTION\\n\")\nprint(Data[\"direction\"].value_counts())","b666157b":"print(\"COUNTRY\\n\")\nprint(Data[\"country\"].value_counts())","28abb1f3":"Data.sort_values(by=[\"date\"],inplace=True)","6f863c51":"Data.dropna(inplace=True)","2238718b":"Data","c0122c52":"print(\"COUNTRY\\n\")\nprint(Data[\"country\"].value_counts())","c1bf75ce":"print(\"NaN:\\n\")\nprint(Data.isnull().sum())","e00ba4bf":"Data.drop([\"id\",\"country\"],inplace=True,axis=1)","2b3bb772":"print(\"COLUMNS:\\n\")\nprint(Data.columns)","cba4b7d5":"Data = Data.reset_index(drop=True)","4387a74c":"Data","ec51d7fb":"def richter_trans(x):\n    \n    if x < 2.0:\n        return \"MICRO\"\n    elif x < 4.0:\n        return \"MINOR\"\n    elif x < 5.0:\n        return \"LIGHT\"\n    elif x < 6.0:\n        return \"MODERATE\"\n    elif x < 7.0:\n        return \"STRONG\"\n    elif x < 8.0:\n        return \"MAJOR\"\n    elif x < 9.0:\n        return \"GREAT\"\n    elif x >= 9.0:\n        return \"GREATER\"\n    else:\n        return \"NO_RISK\"","80c59a08":"Data[\"richter_risk\"] = Data[\"richter\"].apply(lambda x: richter_trans(x))","be0c70ae":"Data","c44c3c18":"print(\"NaN:\\n\")\nprint(Data[\"richter_risk\"].isnull().sum())","e6af1302":"print(\"RISK:\\n\")\nprint(Data[\"richter_risk\"].value_counts())","f63165a3":"print(\"MAJOR\\n\")\nprint(Data[Data[\"richter_risk\"] == \"MAJOR\"])","76a1fd79":"print(Data[Data[\"richter_risk\"] == \"MAJOR\"][\"city\"])","e0c698a1":"plt.style.use(\"dark_background\")\n\nfigure = plt.figure(figsize=(12,8))\n\nplt.hist(Data[Data[\"richter_risk\"] == \"MAJOR\"][\"city\"])\nplt.title(\"MAJOR-CITY\")","18265d3a":"print(\"STRONG\\n\")\nprint(Data[Data[\"richter_risk\"] == \"STRONG\"][\"city\"].value_counts())","1c58382e":"figure = plt.figure(figsize=(18,8))\n\nplt.hist(Data[Data[\"richter_risk\"] == \"STRONG\"][\"city\"])\nplt.title(\"STRONG-CITY\")\nplt.tight_layout()","b677fa1e":"print(\"STRONG\\n\")\nprint(Data[Data[\"richter_risk\"] == \"STRONG\"][\"direction\"].value_counts())","20e62798":"figure = plt.figure(figsize=(13,8))\n\nplt.hist(Data[Data[\"richter_risk\"] == \"STRONG\"][\"direction\"])\nplt.title(\"STRONG-DIRECTION\")\nplt.tight_layout()","0533446c":"print(\"MODERATE\\n\")\nprint(Data[Data[\"richter_risk\"] == \"MODERATE\"][\"city\"].value_counts())","9d737ca8":"print(\"RISK:\\n\")\nprint(Data[\"richter_risk\"].value_counts())","b05d6879":"LIGHT_Data = Data[Data[\"richter_risk\"] == \"LIGHT\"]\nMINOR_Data = Data[Data[\"richter_risk\"] == \"MINOR\"]\nMODERATE_Data = Data[Data[\"richter_risk\"] == \"MODERATE\"]\nMICRO_Data = Data[Data[\"richter_risk\"] == \"MICRO\"]\nSTRONG_Data = Data[Data[\"richter_risk\"] == \"STRONG\"]\nMAJOR_Data = Data[Data[\"richter_risk\"] == \"MAJOR\"]\n\nISTANBUL_Data = Data[Data[\"city\"] == \"istanbul\"]\nKUTAHYA_Data = Data[Data[\"city\"] == \"kutahya\"]\n\n\nLIGHT_Data = LIGHT_Data.reset_index(drop=True)\nMINOR_Data = MINOR_Data.reset_index(drop=True)\nMODERATE_Data = MODERATE_Data.reset_index(drop=True)\nMICRO_Data = MICRO_Data.reset_index(drop=True)\nSTRONG_Data = STRONG_Data.reset_index(drop=True)\nMAJOR_Data = MAJOR_Data.reset_index(drop=True)\nISTANBUL_Data = ISTANBUL_Data.reset_index(drop=True)\nKUTAHYA_Data = KUTAHYA_Data.reset_index(drop=True)","eb00670e":"Encoded_Data = Data.copy()","17f865c2":"print(\"INFO:\\n\")\nprint(Encoded_Data.info())","94acf84a":"Encoded_Data.drop([\"date\",\"time\"],axis=1,inplace=True)","c3579a75":"print(\"COLUMNS:\\n\")\nprint(Encoded_Data.columns)","67c20454":"Label_Coder = LabelEncoder()\n\n\nEncoded_Data[\"city\"] = Label_Coder.fit_transform(Encoded_Data[\"city\"])\nEncoded_Data[\"area\"] = Label_Coder.fit_transform(Encoded_Data[\"area\"])\nEncoded_Data[\"direction\"] = Label_Coder.fit_transform(Encoded_Data[\"direction\"])\nEncoded_Data[\"richter_risk\"] = Label_Coder.fit_transform(Encoded_Data[\"richter_risk\"])","5ddcbb81":"print(\"INFO:\\n\")\nprint(Encoded_Data.info())","7cfd875c":"plot_correlation(Encoded_Data)","6fb6a363":"Corr_Pearson = Encoded_Data.corr(method=\"pearson\")\nCorr_Spearman = Encoded_Data.corr(method=\"spearman\")\nCov_Result = Encoded_Data.cov()","52c396da":"figure = plt.figure(figsize=(16,7))\nplt.title(\"PEARSON\")\nsns.heatmap(Corr_Pearson,annot=True,vmin=-1,center=0,vmax=1,linewidths=3,linecolor=\"black\",cmap=\"hot\")\nplt.show()","d9066460":"figure = plt.figure(figsize=(16,7))\nplt.title(\"SPEARMAN\")\nsns.heatmap(Corr_Spearman,annot=True,vmin=-1,center=0,vmax=1,linewidths=3,linecolor=\"black\",cmap=\"jet\")\nplt.show()","874fb4e0":"figure = plt.figure(figsize=(16,7))\nplt.title(\"COVARIANCE\")\nsns.heatmap(Cov_Result,annot=True,vmin=-1,center=0,vmax=1,linewidths=2,linecolor=\"black\",cmap=\"Spectral\")\nplt.show()","a6fc5145":"Data","bb55b964":"print(\"CITY-RICHTER\\n\")\nprint(Data.groupby([\"city\"])[\"richter\"].mean())","9234b436":"print(\"CITY-RICHTER-MAX\\n\")\nprint(Data.groupby([\"city\"])[\"richter\"].mean().max())","7eafdd6f":"print(\"CITY-RICHTER-MIN\\n\")\nprint(Data.groupby([\"city\"])[\"richter\"].mean().min())","bf28ce1b":"print(\"CITY-DEPTH\\n\")\nprint(Data.groupby([\"city\"])[\"depth\"].mean())","3a6a11f1":"print(\"CITY-DURATION\\n\")\nprint(Data.groupby([\"city\"])[\"md\"].mean())","1990b343":"print(\"CITY-DEPTH KM\\n\")\nprint(Data.groupby([\"city\"])[\"depth\"].mean())","ee3fd8e9":"print(\"CITY-DEPTH KM-MIN\\n\")\nprint(Data.groupby([\"city\"])[\"depth\"].mean().min())","3160e5a8":"print(\"CITY-DEPTH KM-MAX\\n\")\nprint(Data.groupby([\"city\"])[\"depth\"].mean().max())","7176c43c":"print(\"CITY-RICHTER-DIRECTION\\n\")\nprint(Data.groupby([\"city\",\"direction\"])[\"richter\"].mean())","ba6ce340":"print(\"CITY-DURATION-DIRECTION\\n\")\nprint(Data.groupby([\"city\",\"direction\"])[\"md\"].mean())","39335594":"print(\"CITY-DEPTH KM-DIRECTION\\n\")\nprint(Data.groupby([\"city\",\"direction\"])[\"depth\"].mean())","f632c06e":"print(\"CITY-DEPTH KM-RISK\\n\")\nprint(Data.groupby([\"city\",\"richter_risk\"])[\"depth\"].mean())","8261b9b7":"print(\"CITY-DURATION-RISK\\n\")\nprint(Data.groupby([\"city\",\"richter_risk\"])[\"md\"].mean())","eb73c70c":"figure = plt.figure(figsize=(18,8))\n\nData[\"richter_risk\"].hist()\nplt.title(\"RISK\")\nplt.tight_layout()","5c0b177f":"figure = plt.figure(figsize=(18,8))\n\nData[\"richter\"].hist(bins=np.arange(2,9,1))\nplt.title(\"RICHTER\")\nplt.tight_layout()","c71f4d86":"figure = plt.figure(figsize=(18,8))\n\nData[\"md\"].hist(bins=np.arange(0,9,1))\nplt.title(\"DURATION\")\nplt.tight_layout()","fb97d413":"figure = plt.figure(figsize=(18,8))\n\nData[\"depth\"].hist(bins=np.arange(5,60,1))\nplt.title(\"DEPTH\")\nplt.tight_layout()","2cc3e976":"figure = plt.figure(figsize=(20,8))\nsns.distplot(Data[Data['richter_risk'] == \"MAJOR\"][\"depth\"], color='red',label='MAJOR DEPTH') \nsns.distplot(Data[Data['richter_risk'] == \"MINOR\"][\"depth\"], color='green',label='MINOR DEPTH')\n# for example , check others\n\nplt.title('depth', fontsize=10)\nplt.legend()","30e41149":"figure = plt.figure(figsize=(20,8))\nsns.distplot(Data[Data['richter_risk'] == \"MAJOR\"][\"md\"], color='red',label='MAJOR DURATION') \nsns.distplot(Data[Data['richter_risk'] == \"MINOR\"][\"md\"], color='green',label='MINOR DURATION')\n# for example , check others\n\nplt.title('duration', fontsize=10)\nplt.legend()","d92169e4":"figure = plt.figure(figsize=(20,8))\nsns.distplot(Data[Data['richter_risk'] == \"MAJOR\"][\"mw\"], color='red',label='MAJOR MOVEMENT') \nsns.distplot(Data[Data['richter_risk'] == \"MINOR\"][\"mw\"], color='green',label='MINOR MOVEMENT')\n# for example , check others\n\nplt.title('movement', fontsize=10)\nplt.legend()","d7cae412":"Numeric_Data = Data.select_dtypes(include=[\"float32\",\"float64\",\"int32\",\"int64\",\"uint8\"])","8acd0131":"print(Numeric_Data.columns)","e1e477e5":"figure = plt.figure(figsize=(15,8))\nfor axis,indexing in enumerate(Numeric_Data.columns[0:11]):\n    \n    plt.subplot(5,2,axis+1)\n    plt.title(f\"INFO - {indexing}\")\n    \n    sns.distplot(Numeric_Data[Numeric_Data[indexing] < Numeric_Data[indexing].mean()], color='green',label='UNDER MEAN') \n    sns.distplot(Numeric_Data[Numeric_Data[indexing] > Numeric_Data[indexing].mean()], color='red',label='UPPER MEAN')\n\n    plt.legend()\n    \nplt.tight_layout()\nplt.show()","9d8a4d5a":"print(Data.columns)","234732d9":"Special_Data = Data[[\"depth\",\"xm\",\"md\",\"richter\",\"mw\",\"ms\",\"mb\",\"richter_risk\"]]","f60754b4":"Special_Data","a95372b9":"print(Special_Data.columns[:-1])","8f99ee1e":"figure = plt.figure(figsize=(15,8))\nfor axis,indexing in enumerate(Special_Data.columns[:-1]):\n    \n    plt.subplot(3,3,axis+1)\n    plt.title(f\"INFO - {indexing}\")\n    \n    sns.distplot(Special_Data[Special_Data['richter_risk'] == \"MAJOR\"][indexing], color='red',label=f'MAJOR-{indexing}') \n    sns.distplot(Special_Data[Special_Data['richter_risk'] == \"MINOR\"][indexing], color='green',label=f'MINOR-{indexing}')\n\n    plt.legend()\n    \nplt.tight_layout()\nplt.show()","02586f7e":"figure = plt.figure(figsize=(15,8))\nfor axis,indexing in enumerate(Special_Data.columns[:-1]):\n    \n    plt.subplot(3,3,axis+1)\n    plt.title(f\"INFO - {indexing}\")\n    \n    sns.distplot(Special_Data[Special_Data['richter_risk'] == \"STRONG\"][indexing], color='yellow',label=f'STRONG-{indexing}') \n    sns.distplot(Special_Data[Special_Data['richter_risk'] == \"MAJOR\"][indexing], color='red',label=f'MAJOR-{indexing}')\n\n    plt.legend()\n    \nplt.tight_layout()\nplt.show()","f4ebb298":"figure = plt.figure(figsize=(15,8))\nfor axis,indexing in enumerate(Special_Data.columns[:-1]):\n    \n    plt.subplot(3,3,axis+1)\n    plt.title(f\"INFO - {indexing}\")\n    \n    sns.distplot(Special_Data[Special_Data['richter_risk'] == \"STRONG\"][indexing], color='yellow',label=f'STRONG-{indexing}') \n    sns.distplot(Special_Data[Special_Data['richter_risk'] == \"MAJOR\"][indexing], color='red',label=f'MAJOR-{indexing}')\n    sns.distplot(Special_Data[Special_Data['richter_risk'] == \"MINOR\"][indexing], color='green',label=f'MINOR-{indexing}')\n\n    plt.legend()\n    \nplt.tight_layout()\nplt.show()","7631876b":"figure = plt.figure(figsize=(20,8))\nsns.distplot(Data[\"depth\"] < Data[\"depth\"].mean(), color='red',label='DEPTH MEAN LOWER') \nsns.distplot(Data[\"md\"] < Data[\"md\"].mean(), color='green',label='DURATION MEAN UPPER')\n# for example , check others\n\nplt.title('depth-duration', fontsize=10)\nplt.legend()","11e0cf3f":"figure = plt.figure(figsize=(15,8))\nfor axis,indexing in enumerate(Special_Data.columns[:-2]):\n    \n    plt.subplot(3,3,axis+1)\n    plt.title(f\"INFO - {indexing}\")\n    \n    sns.scatterplot(x=Special_Data[indexing],y=Special_Data[\"mb\"],hue=Special_Data[\"richter_risk\"]) \n\n    plt.legend()\n    \nplt.tight_layout()\nplt.show()","3712d5d9":"figure = plt.figure(figsize=(12,8))\n    \nsns.scatterplot(x=Data[\"depth\"],y=Data[\"md\"],hue=Data[\"richter_risk\"])\nplt.title(\"DEPTH-DURATION \/ RISK\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","a18e6cf8":"figure = plt.figure(figsize=(12,8))\n    \nsns.scatterplot(x=Data[\"mw\"],y=Data[\"md\"],hue=Data[\"richter_risk\"])\nplt.title(\"MOVEMENT-DURATION \/ RISK\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","a714e265":"figure = plt.figure(figsize=(12,8))\n    \nsns.scatterplot(x=Data[\"xm\"],y=Data[\"md\"],hue=Data[\"richter_risk\"])\nplt.title(\"MAGNITUDE-DURATION \/ RISK\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","e75e00cf":"figure = plt.figure(figsize=(12,8))\n    \nsns.scatterplot(x=Data[\"xm\"],y=Data[\"depth\"],hue=Data[\"richter_risk\"])\nplt.title(\"MAGNITUDE-DEPTH \/ RISK\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","e4001e3b":"figure = plt.figure(figsize=(12,8))\n    \nsns.scatterplot(x=Data[\"xm\"],y=Data[\"ms\"],hue=Data[\"richter_risk\"])\nplt.title(\"MAGNITUDE-SURFACE WAVE \/ RISK\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","8e76ed2e":"figure = plt.figure(figsize=(12,8))\n    \nsns.scatterplot(x=Data[\"depth\"],y=Data[\"ms\"],hue=Data[\"richter_risk\"])\nplt.title(\"DEPTH-SURFACE WAVE \/ RISK\")\nplt.legend(prop=dict(size=10))\n    \nplt.tight_layout()\nplt.show()","f4e881f6":"figure = plt.figure(figsize=(17,8))\n    \nsns.lineplot(x=Data[\"depth\"],y=Data[\"md\"])\nplt.title(\"DEPTH-DURATION\")\n    \nplt.tight_layout()\nplt.show()","ab8321aa":"figure = plt.figure(figsize=(17,8))\n    \nsns.lineplot(x=Data[\"depth\"],y=Data[\"ms\"])\nplt.title(\"DEPTH-SURFACE WAVE\")\n    \nplt.tight_layout()\nplt.show()","7a62daca":"figure = plt.figure(figsize=(17,8))\n    \nsns.lineplot(x=Data[\"depth\"],y=Data[\"xm\"])\nplt.title(\"DEPTH-MAGNITUDE\")\n    \nplt.tight_layout()\nplt.show()","a7967975":"figure = plt.figure(figsize=(17,8))\n    \nsns.lineplot(x=Data[\"ms\"],y=Data[\"xm\"])\nplt.title(\"SURFACE WAVE-MAGNITUDE\")\n    \nplt.tight_layout()\nplt.show()","4115acf6":"figure = plt.figure(figsize=(17,8))\n    \nsns.lineplot(x=Data[\"md\"],y=Data[\"xm\"])\nplt.title(\"DURATION-MAGNITUDE\")\n    \nplt.tight_layout()\nplt.show()","ef58ccb4":"figure = plt.figure(figsize=(17,8))\n    \nsns.lineplot(x=Data[\"ms\"],y=Data[\"xm\"],hue=Data[\"richter_risk\"])\nplt.title(\"SURFACE WAVE-MAGNITUDE \/ RISK\")\n    \nplt.tight_layout()\nplt.show()","db7322dc":"figure = plt.figure(figsize=(17,8))\n    \nsns.lineplot(x=Data[\"md\"],y=Data[\"xm\"],hue=Data[\"richter_risk\"])\nplt.title(\"DURATION-MAGNITUDE \/ RISK\")\n    \nplt.tight_layout()\nplt.show()","09256145":"figure = plt.figure(figsize=(18,8))\nsns.pairplot(Data,hue=\"richter_risk\")\nplt.tight_layout()\nplt.show()","2b9f3a82":"plot(Data)","ec8c610b":"plot_diff([LIGHT_Data,MAJOR_Data])","338624bb":"plot_diff([STRONG_Data,MAJOR_Data])","eccaa7f4":"plot(Data, \"xm\")","a2a99c46":"plot(Data, \"depth\")","30305235":"plot(Data, \"richter\")","d01caa31":"plot(Data, \"md\")","0825b115":"pp.ProfileReport(Data)","246e9661":"figure = plt.figure(figsize=(17,12))\n\nMap_Plot = Basemap(projection=\"cyl\",resolution='c')\nMap_Plot.drawmapboundary(fill_color=\"w\")\nMap_Plot.drawcoastlines(linewidth=0.5)\nMap_Plot.drawmeridians(range(0, 360, 20),linewidth=0.8)\nMap_Plot.drawparallels([-66,-23,0.0,23,66],linewidth=0.8)\nlon,lat = Map_Plot(Data[\"long\"],Data[\"lat\"])\nMap_Plot.scatter(lon,lat,marker=\"*\",alpha=0.20,color=\"k\",edgecolor=\"None\")\nplt.title(\"TURKEY IN WORLD\")","e54215a8":"figure = plt.figure(figsize=(17,12))\nMap_Plot = Basemap(projection='cyl',llcrnrlat=33,llcrnrlon=20,urcrnrlat=45,urcrnrlon=55,resolution='c')\nMap_Plot.bluemarble()\nMap_Plot.drawcountries()\n\nMap_Plot.scatter(Data.long,Data.lat,edgecolor='none',color='r',alpha=0.6)\n\nplt.title(\"TURKEY GENERAL\", fontsize=15)","de238d7e":"figure = plt.figure(figsize=(17,12))\nMap_Plot = Basemap(projection='cyl',llcrnrlat=33,llcrnrlon=20,urcrnrlat=45,urcrnrlon=55,resolution='c')\nMap_Plot.bluemarble()\nMap_Plot.drawcountries()\n\nMap_Plot.scatter(LIGHT_Data.long,LIGHT_Data.lat,edgecolor='none',color='g',alpha=0.3)\nMap_Plot.scatter(MAJOR_Data.long,MAJOR_Data.lat,edgecolor='none',color='r',alpha=0.8)\n\nplt.title(\"LIGHT-MAJOR RICHTER\", fontsize=15)","cf74fd77":"figure = plt.figure(figsize=(17,12))\nMap_Plot = Basemap(projection='cyl',llcrnrlat=33,llcrnrlon=20,urcrnrlat=45,urcrnrlon=55,resolution='c')\nMap_Plot.bluemarble()\nMap_Plot.drawcountries()\n\nMap_Plot.scatter(STRONG_Data.long,STRONG_Data.lat,edgecolor='none',color='r',alpha=0.8)\nMap_Plot.scatter(LIGHT_Data.long,LIGHT_Data.lat,edgecolor='none',color='y',alpha=0.3)\n\nplt.title(\"STRONG-LIGHT RICHTER\", fontsize=15)","7b4d17b6":"figure = plt.figure(figsize=(17,12))\nMap_Plot = Basemap(projection='cyl',llcrnrlat=33,llcrnrlon=20,urcrnrlat=45,urcrnrlon=55,resolution='c')\nMap_Plot.bluemarble()\nMap_Plot.drawcountries()\n\nMap_Plot.scatter(STRONG_Data.long,STRONG_Data.lat,edgecolor='none',color='r',alpha=0.8)\nMap_Plot.scatter(LIGHT_Data.long,LIGHT_Data.lat,edgecolor='none',color='y',alpha=0.3)\nMap_Plot.scatter(MINOR_Data.long,MINOR_Data.lat,edgecolor='none',color='g',alpha=0.3)\nMap_Plot.plot(MAJOR_Data.long,MAJOR_Data.lat,color='r')\n\nplt.title(\"RICHTER TOGETHER \/ BASED ON MAJOR\", fontsize=15)","feb36a11":"figure = plt.figure(figsize=(17,12))\nMap_Plot = Basemap(projection='cyl',llcrnrlat=33,llcrnrlon=20,urcrnrlat=45,urcrnrlon=55,resolution='c')\nMap_Plot.bluemarble()\nMap_Plot.drawcountries()\n\nMap_Plot.scatter(MAJOR_Data.long,MAJOR_Data.lat,edgecolor='none',color='r',alpha=0.8)\nMap_Plot.scatter(LIGHT_Data.long,LIGHT_Data.lat,edgecolor='none',color='y',alpha=0.3)\nMap_Plot.scatter(MINOR_Data.long,MINOR_Data.lat,edgecolor='none',color='g',alpha=0.3)\nMap_Plot.plot(STRONG_Data.long,STRONG_Data.lat,color='r')\n\nplt.title(\"RICHTER TOGETHER \/ BASED ON STRONG\", fontsize=15)","19983ccf":"Eartquakes_CSV = pd.read_csv(\"..\/input\/earthquake-database\/database.csv\")\n\nfigure = plt.figure(figsize=(17,12))\n\nMap_Plot = Basemap(projection=\"cyl\",resolution='c')\nMap_Plot.drawmapboundary(fill_color=\"w\")\nMap_Plot.drawcoastlines(linewidth=0.5)\nMap_Plot.drawmeridians(range(0, 360, 20),linewidth=0.7)\nMap_Plot.drawparallels([-66,-23,0.0,23,66],linewidth=0.7)\nlon,lat = Map_Plot(Eartquakes_CSV[\"Longitude\"],Eartquakes_CSV[\"Latitude\"])\nMap_Plot.scatter(lon,lat,marker=\".\",color=\"k\",edgecolor=\"None\")\nplt.title(\"TECTONIC PLATES\")","24a234fc":"figure = plt.figure(figsize=(17,12))\nMap_Plot = Basemap(projection='cyl',llcrnrlat=33,llcrnrlon=20,urcrnrlat=45,urcrnrlon=55,resolution='c')\nMap_Plot.bluemarble()\nMap_Plot.drawcountries()\n\nMap_Plot.scatter(Eartquakes_CSV.Longitude,Eartquakes_CSV.Latitude,edgecolor='none',color='r',alpha=0.6)\nMap_Plot.scatter(Data.long,Data.lat,edgecolor='none',color='k',alpha=0.6)\n\nplt.title(\"EARTHQUAKES DATA \/ BASED ON TURKEY\", fontsize=15)","79e5912c":"Pop_CSV = pd.read_csv(\"..\/input\/turkey-population-2018\/population.csv\")\n\nPop_CSV = Pop_CSV.sort_values(by=[\"Population\"],ascending=False)\nfigure = plt.figure(figsize=(17,15))\n\nbar_plot = sns.barplot(x=Pop_CSV['Population'], y=Pop_CSV['City'], lw=0)\nplt.title(\"POPULATION PYRAMID\")\nplt.show()","412b5ac3":"figure = plt.figure(figsize=(17,15))\n\nbar_plot = sns.barplot(x=ISTANBUL_Data['xm'], y=ISTANBUL_Data['richter_risk'], lw=0)\nplt.title(\"Higher Magnitude\")\nplt.show()","9a6cbd31":"Eartquakes_CSV = pd.read_csv(\"..\/input\/earthquake-database\/database.csv\")\n\nfigure = plt.figure(figsize=(17,12))\n\nMap_Plot = Basemap(projection=\"cyl\",resolution='c')\nMap_Plot.drawmapboundary(fill_color=\"w\")\nMap_Plot.drawcoastlines(linewidth=0.5)\nMap_Plot.drawmeridians(range(0, 360, 20),linewidth=0.7)\nMap_Plot.drawparallels([-66,-23,0.0,23,66],linewidth=0.7)\nlon,lat = Map_Plot(Eartquakes_CSV[\"Longitude\"],Eartquakes_CSV[\"Latitude\"])\nMap_Plot.scatter(lon,lat,marker=\".\",color=\"k\",edgecolor=\"None\")\nMap_Plot.scatter(Data.long,Data.lat,edgecolor='none',color='r',alpha=0.6)\nplt.title(\"TECTONIC PLATES \/ BASED ON TURKEY\")","677cef24":"figure = plt.figure(figsize=(17,12))\nMap_Plot = Basemap(projection='cyl',llcrnrlat=33,llcrnrlon=20,urcrnrlat=45,urcrnrlon=55,resolution='c')\nMap_Plot.bluemarble()\nMap_Plot.drawcountries()\n\nMap_Plot.scatter(ISTANBUL_Data.long,ISTANBUL_Data.lat,edgecolor='none',color='r',alpha=0.6)\nMap_Plot.scatter(KUTAHYA_Data.long,KUTAHYA_Data.lat,edgecolor='none',color='k',alpha=0.6)\n\nplt.title(\"ISTANBUL \/ KUTAHYA\", fontsize=15)","a76efad1":"Data.drop([\"date\",\"time\",\"richter_risk\"],axis=1,inplace=True)","28c471d7":"print(Data.info())","4ccbbdce":"Data.index = Data[\"city\"]\nData = Data.drop(\"city\",axis=1)\nData.index.name = None","1475979d":"Data","e3554b2a":"Data[\"direction\"] = Label_Coder.fit_transform(Data[\"direction\"])\nData[\"area\"] = Label_Coder.fit_transform(Data[\"area\"])","0d874be9":"print(Data.info())","ef1b0807":"kmeans = KMeans().fit(Data)","55e5d606":"figure = plt.figure(figsize=(17,12))\nvisualizer = KElbowVisualizer(kmeans,k=(2,10)).fit(Data).poof()","2265ebef":"kmeans = KMeans(n_clusters=4).fit(Data)","adc1ca1f":"labels = kmeans.labels_\nData[\"Labels\"] = labels","0a9a678b":"print(Data[\"Labels\"].value_counts())","3f8a8394":"Data","d80d99d1":"print(Data[Data[\"Labels\"] == 1].index.value_counts())","fad66009":"Data[Data[\"Labels\"] == 1]","b9a52359":"figure = plt.figure(figsize=(17,15))\n\nbar_plot = sns.barplot(x=Data[Data[\"Labels\"] == 0][\"richter\"], y=Data[Data[\"Labels\"] == 0].index, lw=0)\nplt.title(\"LABEL 0\")\nplt.show()","517764a0":"figure = plt.figure(figsize=(17,15))\n\nbar_plot = sns.barplot(x=Data[Data[\"Labels\"] == 1][\"richter\"], y=Data[Data[\"Labels\"] == 1].index, lw=0)\nplt.title(\"LABEL 1\")\nplt.show()","1470dc81":"figure = plt.figure(figsize=(17,15))\n\nbar_plot = sns.barplot(x=Data[Data[\"Labels\"] == 2][\"richter\"], y=Data[Data[\"Labels\"] == 2].index, lw=0)\nplt.title(\"LABEL 2\")\nplt.show()","808d6932":"figure = plt.figure(figsize=(17,15))\n\nbar_plot = sns.barplot(x=Data[Data[\"Labels\"] == 3][\"richter\"], y=Data[Data[\"Labels\"] == 3].index, lw=0)\nplt.title(\"LABEL 3\")\nplt.show()","5a3d02ea":"#### CORRELATION AND COVARIANCE","25e406fd":"# FEATURES\n\n* MD\n* ML\n* Mw\n* Ms\n* Mb\n\n#### Biggest magnitude value in specified magnitude values (MD, ML, Mw, Ms and Mb)\n\n* Magnitude types\n\n(MD: Duration, ML: Local, Mw: Moment, Ms: Surface wave, Mb: Body-wave)\n\n**The larger circles represent higher magnitude (xM) values. The different colors indicate the different depths**\n\n**0.0 (zero) means no calculation for that type of magnitude**\n\n* CHECK:\nhttp:\/\/www.koeri.boun.edu.tr\/sismo\/2\/earthquake-catalog\/\n\n\n#### WHAT IS RICHTER SCALE\n\n* The Richter magnitude scale was developed in 1935 by Charles F. Richter of the California Institute of Technology as a mathematical device to compare the size of earthquakes. The magnitude of an earthquake is determined from the logarithm of the amplitude of waves recorded by seismographs.\n\n* The Richter scale has its limitations, as it does not reflect the impact of vertical movement, which can be the wave movement causing the greatest amount of damage. However, for most earthquakes the Richter scale has provided reasonably well correlation with the resulting damage.\n\n![](https:\/\/wikimedia.org\/api\/rest_v1\/media\/math\/render\/svg\/7690368e779e6224c83c3ec0a3ae8432a6c05c87)\n","4fc5cb9a":"#### POPULATION PYRAMID","e7283674":"#### RICHTER\n\n* 1.0\u20131.9\tMicro\tI\n\nMicroearthquakes, not felt, or felt rarely. Recorded by seismographs.Continual\/several million per year\n\n* 2.0\u20132.9\tMinor\tI to II\n\nFelt slightly by some people. No damage to buildings. Over one million per year\n\n* 3.0\u20133.9\tMinor III to IV\n\nOften felt by people, but very rarely causes damage. Shaking of indoor objects can be noticeable. Over 100,000 per year\n\n* 4.0\u20134.9\tLight\tIV to VI\n\nNoticeable shaking of indoor objects and rattling noises. Felt by most people in the affected area. Slightly felt outside. Generally causes zero to minimal damage. Moderate to significant damage very unlikely. Some objects may fall off shelves or be knocked over.\t10,000 to 15,000 per year\n\n* 5.0\u20135.9\tModerate\tVI to VII\n\nCan cause damage of varying severity to poorly constructed buildings. Zero to slight damage to all other buildings. Felt by everyone. 1,000 to 1,500 per year\n\n* 6.0\u20136.9\tStrong\tVIII to X\n\nDamage to a moderate number of well-built structures in populated areas. Earthquake-resistant structures survive with slight to moderate damage. Poorly designed structures receive moderate to severe damage. Felt in wider areas; up to hundreds of miles\/kilometers from the epicenter. Strong to violent shaking in epicentral area. 100 to 150 per year\n\n* 7.0\u20137.9\tMajor\tX or greater\n\nCauses damage to most buildings, some to partially or completely collapse or receive severe damage. Well-designed structures are likely to receive damage. Felt across great distances with major damage mostly limited to 250 km from epicenter. 10 to 20 per year\n\n* 8.0\u20138.9\tGreat\n\nMajor damage to buildings, structures likely to be destroyed. Will cause moderate to heavy damage to sturdy or earthquake-resistant buildings. Damaging in large areas. Felt in extremely large regions. One per year\n\n* 9.0 and Greater\n\nAt or near total destruction \u2013 severe damage or collapse to all buildings. Heavy damage and shaking extends to distant locations. Permanent changes in ground topography. One per 10 to 50 years","c7775590":"* llcrnrlon\n\nlongitude of lower left hand corner of the desired map domain (degrees).\n\n* llcrnrlat\n\nlatitude of lower left hand corner of the desired map domain (degrees).\n\n* urcrnrlon\n\nlongitude of upper right hand corner of the desired map domain (degrees).\n\n* urcrnrlat\n\nlatitude of upper right hand corner of the desired map domain (degrees).","ce72fd2d":"#### CREATING NEW FEATURES","444f50cd":"#### POPULATION DENSITY\n\n![](https:\/\/www.atlasbig.com\/cdn\/administrative-area-set-data\/fa87fac3-83c9-43e0-bed0-9535acefd22d\/rawImage_0.png)","9ed31e80":"# DATA PROCESS & EXPLORATORY DATA ANALYSIS (EDA)","5b33d3e2":"#### SPECIFIC CHECKING","e70e67c0":"#### GROUPBY MEANING & GRAPH","c33582e0":"![](https:\/\/oceanexpert.org\/uploads\/institutes\/11519\/instituteLogo.jpg)","f542277f":"#### CHART","77114d13":"#### ARRANGEMENT CSV","a03bfd2f":"#### INFORMATION","58e586e3":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcSE8B3-dtSdbcGCskxy9oF2kAMkP99zwXOQKA&usqp=CAU)","7c8853ca":"# HISTORY\n\n#### Context\nOver the years the earthquakes have been recorded by different organisations in Turkey. Bogazici University, as the most successful university in Turkey, has a earthquake research center and they collected up all the data during the years. They have the most technological devices to uncover the specifications about the earthquakes. The data was collected from the database with particular filters.\n\n#### Content\nThe data covers up all the recorded earthquakes in the latitudes between 25 - 50; longitudes 15 - 60. As the metering stations are placed in Turkey most of the recorded earthquakes are in latitudes between 35 - 45; longitudes 25 - 45. The database search time filter was set to dates 27\/09\/1910 to 27\/09\/2017. As there are too many earthquakes which have intensities smaller than 4.0, the filter of intensity was set to 3.5 to 9.0 (there was no earthquakes recorded larger than 9.0 intensity).\nNot being an earthquake specilist or geologist, I have no idea about the different kind of intensity measurements in the dataset (the columns between xM and Ms).\n\n#### Acknowledgements\nAll the data here is owned by \"Bo\u011fazi\u00e7i \u00dcniversitesi Rekt\u00f6rl\u00fc\u011f\u00fc\" and it can only be used for uncommercial issues with regards to \"Bo\u011fazi\u00e7i \u00dcniversitesi Kandilli Rasathanesi ve Deprem Ara\u015ft\u0131rma Enstit\u00fcs\u00fc B\u00f6lgesel Deprem-Tsunami \u0130zleme ve De\u011ferlendirme Merkezi\".\n\n#### Inspiration\nI hope all kind of data scientists would be interested in this data in order to: - Visualize the current data on any kind of GIS. - Reveal some truths and correleations behind and across the data. - Analyze seasonality across months, years and decades. - Improve any kind of data model which can be useful to represent the eathquakes in Turkey. - Develop algorithms to predict the earthquake with an intensity, an interval and a coordinate corridor.","42e2f270":"# PACKAGES AND LIBRARIES","d07c8482":"#### MAP","db45767e":"#### CSV OVERVIEW","bc695f68":"#### SPECIFIC DATA SPLITTING ","4b670049":"#### END OF THE PROJECT","b4ccb073":"# CLUSTER","140757f0":"#### READING CSV"}}