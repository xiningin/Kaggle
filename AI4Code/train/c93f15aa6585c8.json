{"cell_type":{"84979652":"code","cf0c74fc":"code","072e2521":"code","8c8ebf61":"code","52eb41d7":"code","4abfe463":"code","46c61b97":"code","46fe81af":"code","c4e2989e":"code","6cd33b23":"code","603b0450":"code","a7bfcd05":"code","8de67b19":"code","18615b6d":"code","7a5ee3a2":"code","7bad19b9":"code","e8594113":"code","24891948":"code","d86d3b07":"code","7cc80978":"code","bcc827c1":"code","c7527ab4":"markdown","acf607ae":"markdown","121d4818":"markdown","ab5ec40d":"markdown","302bc46c":"markdown","5499de1d":"markdown","7b12f11e":"markdown","b52be82d":"markdown","0440fb94":"markdown","b8b408c5":"markdown","a1b9bc39":"markdown","f9e7dbf7":"markdown","f7689cc4":"markdown","73f2590e":"markdown","a754b5d3":"markdown","a2ae32cd":"markdown","d325f99f":"markdown","8546ba93":"markdown","b19039e5":"markdown","82903af8":"markdown","c9a498a0":"markdown","b983e572":"markdown"},"source":{"84979652":"# install geopy to access geocoder package\n!pip install geopy\n# install beautifulsoup4 for web scraping\n!pip install beautifulsoup4\n# install requests to gain access to an URL\n!pip install requests\n# install kmeans for clustering\n!pip install kmeans\n# install folium for visualization\n!pip install folium\n# install sklearn\n!pip install -U scikit-learn","cf0c74fc":"# import all necessary libraries\nimport numpy as np # library to handle data in a vectorized manner\n\nimport pandas as pd # library for data analsysis\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\n\nimport json # library to handle JSON files\n\n# !conda install -c conda-forge geopy --yes # uncomment this line if you haven't completed the Foursquare API lab\nfrom geopy.geocoders import Nominatim # convert an address into latitude and longitude values\n\nfrom bs4 import BeautifulSoup\nimport requests # library to handle requests\nfrom pandas.io.json import json_normalize # tranform JSON file into a pandas dataframe\n\n# Matplotlib and associated plotting modules\nimport matplotlib.cm as cm\nimport matplotlib.colors as colors\nimport matplotlib.pyplot as plt \n\n# import k-means from clustering stage\nfrom sklearn.cluster import KMeans\n\n# !conda install -c conda-forge folium=0.5.0 --yes # uncomment this line if you haven't completed the Foursquare API lab\nimport folium # map rendering library\n\nprint('Libraries imported.')","072e2521":"import pandas as pd\n# making dataframe \ndfschool = pd.read_csv(\"..\/input\/school-directory-new-zealand\/schooldirectory-07-08-2021-083020.csv\") \ndfschool=dfschool.dropna()\n# output the dataframe\ndfschool.head(10)","8c8ebf61":"#Let's find the TOP 5 cities with the higher options for educartion. \nSC=dfschool.groupby(['Add1_City'])['School_Id'].count()\nSC=SC.sort_values(ascending=False)\nSC=SC.head(5)\ntop5cities=SC.index.tolist()","52eb41d7":"top5cities","4abfe463":"NZ_city = dfschool['Add1_City'].unique().tolist()\nprint(NZ_city)","46c61b97":"from folium.plugins import MarkerCluster","46fe81af":"lat_NZ = dfschool['Latitude'].mean()\nlon_NZ = dfschool['Longitude'].mean()\n\ncity_color = {}\nfor city in NZ_city:\n    city_color[city]= '#%02X%02X%02X' % tuple(np.random.choice(range(256), size=3)) #Random color\n\n# create map\nmap_nz = folium.Map(location=[lat_NZ, lon_NZ], zoom_start=6)\n    \nmarker_cluster = MarkerCluster().add_to(map_nz)\n    \n    \n# add markers to map\nfor lat, lng, Org_Name, Add1_City in zip(dfschool['Latitude'], \n                                         dfschool['Longitude'], \n                                         dfschool['Org_Name'], \n                                         dfschool['Add1_City']):\n    label_text = Org_Name + ' - ' + Add1_City\n    label = folium.Popup(label_text)\n    folium.CircleMarker(\n        [lat, lng],\n        radius=5,\n        popup=label,\n        color=city_color[Add1_City],\n        fill_color=city_color[Add1_City],\n        fill_opacity=0.8).add_to(marker_cluster)      \n\nmap_nz","c4e2989e":"# making dataframe \ndfhosp = pd.read_csv(\"..\/input\/new-zealand-public-hospitals\/LegalEntitySummaryPublicHospital.csv\") \n# output the dataframe\ndfhosp.head(5)","6cd33b23":"dfhosp.columns","603b0450":"# Passing Type and then Last Name as indices\ndfhosp5=dfhosp.loc[dfhosp[' Premises Address Town\/City'].isin(top5cities)]\n\nHospitalPivot = pd.pivot_table(data=dfhosp5, index=[' Premises Address Town\/City'],\n                        columns=['Certification Service Type',\"Service Types\" ],\n                        values='Premises Name',\n                        aggfunc=['count']\n                        )\nHospitalPivot","a7bfcd05":"#We'll define Foursquare Credentials\n\nCLIENT_ID = 'IMNENY40EWHMBDLJVP4BW2J4XZDB3F5MXNW2N5AXIHESE5EA' # your Foursquare ID\nCLIENT_SECRET = 'NSUWVHGYITKVOQ5AQITRKKSECPGECVO50VMLTNG3BIEXBNP4' # your Foursquare Secret\nACCESS_TOKEN = 'UFM2R1HOPYK0EXGA504XVNGSTFMWSRP0BJCHCKHP0NC45VR2' # your FourSquare Access Token\nVERSION = '20180604'# Foursquare API version\n\nprint('Your credentails:')\nprint('CLIENT_ID: ' + CLIENT_ID)\nprint('CLIENT_SECRET:' + CLIENT_SECRET)\n\nprint('Credentials Stored')","8de67b19":"top5cities","18615b6d":"rows = []\nfor city in top5cities:\n    dfilat=\"df\"+ str(city)+\"_lat\"\n    dfilon=\"df\"+ str(city)+\"_lon\"\n    dfilat=dfschool[(dfschool.Add1_City == city)]['Latitude'].mean()\n    dfilon=dfschool[(dfschool.Add1_City == city)]['Longitude'].mean()\n    rows.append([city, dfilat, dfilon])\n\ndftop5 = pd.DataFrame(rows, columns=[\"City\", \"Lat_mean\", \"Lon_mean\"])\ndftop5","7a5ee3a2":"for Lat_mean, Lon_mean, City in zip(dftop5['Lat_mean'], dftop5['Lon_mean'], dftop5['City']):\n    CityName=City\n    print(CityName)","7bad19b9":"df_venues=pd.DataFrame()\nfor Lat_mean, Lon_mean, City in zip(dftop5['Lat_mean'], dftop5['Lon_mean'], dftop5['City']):\n    CityName=City\n    radius = 50000 # define radius\n    LIMIT=200\n    urltest = 'https:\/\/api.foursquare.com\/v2\/venues\/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}'.format(\n            CLIENT_ID, \n            CLIENT_SECRET, \n            VERSION, \n            Lat_mean, \n            Lon_mean, \n            radius, \n            LIMIT)\n    \n    venues_list=[]\n\n    # make the GET request\n    results = requests.get(urltest).json()[\"response\"]['groups'][0]['items']\n    \n    # return only relevant information for each nearby venue\n    venues_list.append([(\n            CityName, \n            Lat_mean, \n            Lon_mean, \n            v['venue']['name'], \n            v['venue']['location']['lat'], \n            v['venue']['location']['lng'],  \n            v['venue']['categories'][0]['name']) for v in results])\n    \n    nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list])\n    nearby_venues.columns = ['City', \n                  'City Latitude', \n                  'City Longitude', \n                  'Venue', \n                  'Venue Latitude', \n                  'Venue Longitude', \n                  'Venue Category']\n    df_venues = df_venues.append(nearby_venues)\n    \ndf_venues=df_venues.reset_index(drop=True)\ndf_venues.head(5)","e8594113":"df_venues.tail(5)","24891948":"df_venues.shape","d86d3b07":"# Passing Type and then Last Name as indices\noutput = pd.pivot_table(data=df_venues, index=['Venue Category'],\n                        columns=['City'],\n                        values='Venue',\n                        aggfunc=['count']\n                        )\noutput","7cc80978":"dfgroupcity = df_venues.groupby(['City', 'Venue Category'])['Venue'].count()\n\ndfgroupcity=pd.DataFrame(dfgroupcity)\ndfgroupcity=dfgroupcity.sort_values(by='Venue', ascending=False)\ndfgroupcity=dfgroupcity.reset_index()\ndfgroupcity.head(10)\n\n","bcc827c1":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n#City\tVenue Category\tVenue\n\n#for vc in dfgroupcity['Venue Category']:\n   # sns.countplot(x ='City', data = dfgroupcity)\n    #print(vc)\n    \ng1 = sns.FacetGrid(dfgroupcity, col=\"City\", hue=\"Venue Category\")\ng1.map(sns.scatterplot, \"Venue\", \"Venue\", alpha=.7)\ng1.add_legend()\n\ng2 = sns.FacetGrid(dfgroupcity, col=\"City\")\ng2.map(sns.histplot, \"Venue\")","c7527ab4":"# **3. Analysing Schools Data**","acf607ae":"# **6. Foursquare API for finding the top venues for each of the TOP 5 Cities selected**","121d4818":"Mainly because I believe that education for my children is the most important thing that I should look for when emigrating, we will start working with a data set of schools in New Zealand and we will look for the cities with the most educational options. ","ab5ec40d":"# **4. Folium Maps of the top 5 cities Schools**","302bc46c":"According to this, it seems that 4 of the top 5 cities we selected from the Schools data sets have complete health services. \nAuckland with the most concentration of them, but Hamilton and Christchurch seem to be a good option too. ","5499de1d":"# **5. Analysing Hospitals Dataset**","7b12f11e":"# **7. Visualization**","b52be82d":"**Let's proceed with the hospital's dataset!**","0440fb94":"# **8. Future Work**","b8b408c5":"* It's possible to graph custom markers with folium for each venue category. \n* Build a reccomender system for the city according to values of interest. \n* Consider more then 100 venues in a city for analysis using Foursquare api.\n","a1b9bc39":"So Auckland,Christchurch, Wellington, Hamilton, Napier we'll be the choosen cities, so we can move with the analysis. ","f9e7dbf7":"Lets check how many venues are there per neighborhood","f7689cc4":"### **Thank you!**\n\n","73f2590e":"In my case, due to the interests that I have with my family, my choice is for Hamilton as the winning city. It has a balance between tranquility (It is not a city as big as Auckland) and has all the essential services, mainly education and good hospitals.\nIt has a good number of burger joints, a bookstore, bars, a beach, a football stadium, etc.\n\nThis conclusion can change quickly based on your interests. The tables and graphs above allow quick visualization to aid in your decision.\n  ","a754b5d3":"### **Objective**\n\nIn this project we will focus on using everything we learned to find the best city to emigrate within New Zealand. Taking into account some parameters such as the number of schools, shopping centers,medical centers, restaurants, etc. \n\n### **Target Audiance**\n\n* Families, young professionals looking for a change in their lives, who consider New Zealand a good option to settle. People who are finding out the best option based on their tastes and preferences and looking for a summary with quantitative fundamentals. \n\n\n### **Data Description**\nFor this project we'll use the following data:\n\n\n1. ***New Zealand Schools DATA SET***\n* **Data Source:** https:\/\/catalogue.data.govt.nz\/dataset\/directory-of-educational-institutions\n* **Description:** A list of New Zealand schools, including their contact details and institutional information. This includes state and private schools. You can also build your own tailor-made list of schools.\n\n2. ***New Zealand List of Hospitals***\n* **Data Source:** https:\/\/www.health.govt.nz\/your-health\/certified-providers\/public-hospital\n* **Description:**  Full list of certified providers in New Zealand.\n\n\n3. ***Venue Data using Foursquare API***\n* **Data Source:** https:\/\/foursquare.com\/developers\/apps\n* **Description:** From Foursquare API we can get the name,category,latitude,longitude for each venue.\n\n### **Tech Stack Used**\nPivot Tables, Web Scraping, Foursquare API, Geocoder, Beautiful Soup, Folium, Pandas, Numpy\n\n### **Table of Content**\n1. Introduction\n1. Import Libraries\n1. Analysing Schools Data\n1. Folium Maps of the top 5 citys Schools\n1. Analysing Hospitals Data\n1. Foursquare API for finding the top venues for each of the TOP 5 Cities selected\n1. Visualization\n1. Conclusion\n1. Future Work\n","a2ae32cd":"**Author : Pablo G\u00f3mez**","d325f99f":"For the final stage, we'll use FOURSQUARE API, and explore each of the TOP5 selected cities, and see what we find!!","8546ba93":"------------\n\n# **1. Introduction**","b19039e5":"## <center>Let's find the Best choice for emigrate using data science!<\/center>\n## <center>Capstone Project - IBM Data Science Professional Certificate<\/center>","82903af8":"# **8. Conclusion**","c9a498a0":"# **2. Import Libraries**","b983e572":"------------\n\n\n**Welcome to my notebook! \nThis is my final proyect for the IBM Data Science Certification.**\n\n------------\n\n"}}