{"cell_type":{"89224a60":"code","986e6b56":"code","f6276b76":"code","e5fcabea":"code","3342b78b":"code","80eceea7":"code","552251dd":"code","89010605":"code","ece7ef63":"markdown"},"source":{"89224a60":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","986e6b56":"import requests\npage = requests.get(\"https:\/\/www.timeanddate.com\/weather\/india\/chennai\/historic\")","f6276b76":"from bs4 import BeautifulSoup\nsoup=BeautifulSoup(page.content,\"html.parser\")","e5fcabea":"table=soup.find_all(\"table\",{\"class\":\"zebra tb-wt fw va-m tb-hover\"})\nl=[]\nfor i,items in enumerate(table):\n    for i,row in enumerate(items.find_all(\"tr\")):\n        d = {}\n        try:\n#             print(i , row.find_all(\"td\",{\"class\":\"\"})[0].text)\n            d['Temp'] = row.find_all(\"td\",{\"class\":\"\"})[0].text\n        except:\n            d['Temp'] = np.nan\n            \n        try:\n#             print(i , row.find(\"td\",{\"class\":\"small\"}).text)\n            d['Weather'] = row.find(\"td\",{\"class\":\"small\"}).text\n        except:\n            d['Weather']= np.nan\n            \n        try:   \n#             print(i , row.find_all(\"td\",{\"class\":\"sep\"})[0].text)\n            d['Wind'] = row.find_all(\"td\",{\"class\":\"sep\"})[0].text\n        except:\n            d['Wind'] = np.nan\n            \n        try:  \n#             print(i, row.find(\"span\",{\"class\":\"comp sa16\"})['title'])\n            d['Direction'] = row.find(\"span\")[\"title\"]\n        except:\n            try:\n                d['Direction'] = row.find(\"span\",{\"class\":\"comp sa16\"})[\"title\"]\n            except:\n                d['Direction'] = np.nan\n            \n        try:\n#             print(i , row.find_all(\"td\",{\"class\":\"\"})[2].text)\n            d['Humidity'] = row.find_all(\"td\",{\"class\":\"\"})[2].text\n        except:\n            d['Humidity'] = np.nan\n        \n        try:\n#             print(i , row.find_all(\"td\",{\"class\":\"sep\"})[1].text)\n            d['Barometer'] =  row.find_all(\"td\",{\"class\":\"sep\"})[1].text\n        except:\n            d['Barometer'] = np.nan\n    \n        try:\n#             print(i , row.find_all(\"td\",{\"class\":\"\"})[3].text)\n            d['Visibility'] =  row.find_all(\"td\",{\"class\":\"\"})[3].text\n        except:\n             d['Visibility'] = np.nan\n                \n        l.append(d)\n\n  \n\n","3342b78b":"import pandas\ndf = pandas.DataFrame(l)","80eceea7":"df2 = df.dropna(how = 'all')\ndf2 = df2.reset_index()\ndf2.pop('index')\ndf2['Barometer'] = df2['Barometer'].str.extract('(\\d+\\.\\d+)') + r'\"Hg'\ndf2['Weather'] = df2['Weather'].str.replace(\" \",\"\")\ndf2['Visibility'] = df2['Visibility'].str.extract('(\\d+)') + 'mi'\ndf2['Wind'] = df2['Wind'].str.extract('(\\d+)') + 'mph'\ndf2['Temp'] = df2['Temp'].str.extract('(\\d+)') + u'\\N{DEGREE SIGN}' + 'F'\n","552251dd":"df2.to_csv('data.csv', columns = ['Temp', 'Weather', 'Wind', 'Direction', 'Humidity', 'Barometer',\n       'Visibility'])","89010605":"df2","ece7ef63":"RESOURCES -\nhttps:\/\/medium.com\/@aakankshaws\/using-beautifulsoup-requests-to-scrape-weather-data-9c6e9d317800"}}