{"cell_type":{"cd408bf0":"code","c02d1f76":"code","2f8b5deb":"code","c6bb6197":"code","1d9b4819":"code","e9565d36":"code","ed4eb7c7":"code","cf74547f":"code","a0e92e60":"code","a6c22252":"code","20ca829e":"code","c1b5e88f":"code","ac272348":"code","f7b64a20":"code","afaed7c3":"code","f21d6e10":"code","530cfd30":"code","c1ddae93":"code","7267b788":"code","6051f4e8":"code","c50edeb4":"code","f4a3f21f":"code","29213b8d":"code","758be10f":"code","dc4f9b86":"code","4b7c1cdf":"code","03e2951b":"code","9e3ecf70":"code","d789422d":"code","42a65e4b":"code","41f22915":"code","ea4a4c36":"code","b60904c8":"code","96eed2af":"code","f26c9602":"code","9eab0c8b":"code","96711743":"code","1924b61f":"code","43766859":"code","a7a11d83":"code","a196b858":"code","50d6d002":"code","c7df3dbd":"code","f90884d8":"code","0961c733":"code","ab63185a":"code","d7b85b78":"code","65a4cebf":"code","1f7ea861":"code","2aa8cef7":"code","77ad8681":"code","4aa45fa2":"code","5f5a7349":"code","fa4fbcf7":"code","45e6158d":"code","fddbc285":"code","8b2eba67":"code","b7418708":"code","7ebdeab7":"code","c913cc13":"code","14bc25fe":"code","7f4eed52":"code","4cebc33d":"code","4c14c74b":"code","08042a73":"code","af7c5ca1":"code","18dc96ed":"code","5d7ca136":"code","eb1322d4":"code","e3bf321d":"code","13819b6c":"code","e4edbfd8":"code","e730334e":"code","367fa9de":"code","e85efe1e":"markdown","9627a202":"markdown","db284401":"markdown","cc714ea7":"markdown","08eb7c10":"markdown","8b54fdbd":"markdown"},"source":{"cd408bf0":"# Importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","c02d1f76":"# Data display coustomization\npd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)","2f8b5deb":"wine = pd.read_csv(r\"\/kaggle\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")\nwine.head()","c6bb6197":"wine_dub = wine.copy()\n\n# Checking for duplicates and dropping the entire duplicate row if any\nwine_dub.drop_duplicates(subset=None, inplace=True)\nwine_dub.shape","1d9b4819":"wine.shape","e9565d36":"#Duplicate Found ","ed4eb7c7":"wine=wine_dub.copy()\ndel wine_dub\nwine.shape","cf74547f":"wine.shape","a0e92e60":"wine.info()","a6c22252":"wine.describe()","20ca829e":"wine.isnull().sum()","c1b5e88f":"wine.isnull().sum(axis=1)","ac272348":"sns.violinplot('fixed acidity',data=wine)\nplt.show()","f7b64a20":"percentiles = wine['fixed acidity'].quantile([0.05,0.95]).values\nwine['fixed acidity'][wine['fixed acidity'] <= percentiles[0]] = percentiles[0]\nwine['fixed acidity'][wine['fixed acidity'] >= percentiles[1]] = percentiles[1]","afaed7c3":"sns.violinplot('fixed acidity',data=wine)\nplt.show()","f21d6e10":"wine.quality.nunique()","530cfd30":"sns.violinplot(y='fixed acidity',x='quality',data=wine)\nplt.show()","c1ddae93":"sns.violinplot('volatile acidity',data=wine)\nplt.show()","7267b788":"percentiles = wine['volatile acidity'].quantile([0.05,0.95]).values\nwine['volatile acidity'][wine['volatile acidity'] <= percentiles[0]] = percentiles[0]\nwine['volatile acidity'][wine['volatile acidity'] >= percentiles[1]] = percentiles[1]","6051f4e8":"sns.violinplot('volatile acidity',data=wine)\nplt.show()","c50edeb4":"sns.violinplot(y='volatile acidity',x='quality',data=wine)\nplt.show()","f4a3f21f":"sns.violinplot('citric acid',data=wine)\nplt.show()","29213b8d":"percentiles = wine['citric acid'].quantile([0.01,0.99]).values\nwine['citric acid'][wine['citric acid'] <= percentiles[0]] = percentiles[0]\nwine['citric acid'][wine['citric acid'] >= percentiles[1]] = percentiles[1]","758be10f":"sns.violinplot('citric acid',data=wine)\nplt.show()","dc4f9b86":"sns.violinplot(y='citric acid',x='quality',data=wine)\nplt.show()","4b7c1cdf":"sns.violinplot('residual sugar',data=wine)\nplt.show()","03e2951b":"percentiles = wine['residual sugar'].quantile([0.1,0.9]).values\nwine['residual sugar'][wine['residual sugar'] <= percentiles[0]] = percentiles[0]\nwine['residual sugar'][wine['residual sugar'] >= percentiles[1]] = percentiles[1]","9e3ecf70":"sns.violinplot('residual sugar',data=wine)\nplt.show()","d789422d":"sns.violinplot(y='residual sugar',x='quality',data=wine)\nplt.show()","42a65e4b":"sns.violinplot('chlorides',data=wine)\nplt.show()","41f22915":"percentiles = wine['chlorides'].quantile([0.1,0.9]).values\nwine['chlorides'][wine['chlorides'] <= percentiles[0]] = percentiles[0]\nwine['chlorides'][wine['chlorides'] >= percentiles[1]] = percentiles[1]","ea4a4c36":"sns.violinplot('chlorides',data=wine)\nplt.show()","b60904c8":"sns.violinplot(y='chlorides',x='quality',data=wine)\nplt.show()","96eed2af":"sns.violinplot('free sulfur dioxide',data=wine)\nplt.show()","f26c9602":"percentiles = wine['free sulfur dioxide'].quantile([0.05,0.95]).values\nwine['free sulfur dioxide'][wine['free sulfur dioxide'] <= percentiles[0]] = percentiles[0]\nwine['free sulfur dioxide'][wine['free sulfur dioxide'] >= percentiles[1]] = percentiles[1]","9eab0c8b":"sns.violinplot('free sulfur dioxide',data=wine)\nplt.show()","96711743":"sns.violinplot(y='free sulfur dioxide',x='quality',data=wine)\nplt.show()","1924b61f":"sns.violinplot('total sulfur dioxide',data=wine)\nplt.show()","43766859":"percentiles = wine['total sulfur dioxide'].quantile([0.05,0.95]).values\nwine['total sulfur dioxide'][wine['total sulfur dioxide'] <= percentiles[0]] = percentiles[0]\nwine['total sulfur dioxide'][wine['total sulfur dioxide'] >= percentiles[1]] = percentiles[1]","a7a11d83":"sns.violinplot('total sulfur dioxide',data=wine)\nplt.show()","a196b858":"sns.violinplot(y='total sulfur dioxide',x='quality',data=wine)\nplt.show()","50d6d002":"sns.violinplot('density',data=wine)\nplt.show()","c7df3dbd":"percentiles = wine['density'].quantile([0.01,0.99]).values\nwine['density'][wine['density'] <= percentiles[0]] = percentiles[0]\nwine['density'][wine['density'] >= percentiles[1]] = percentiles[1]","f90884d8":"sns.violinplot('density',data=wine)\nplt.show()","0961c733":"sns.violinplot(y='density',x='quality',data=wine)\nplt.show()","ab63185a":"sns.violinplot('pH',data=wine)\nplt.show()","d7b85b78":"percentiles = wine['pH'].quantile([0.05,0.95]).values\nwine['pH'][wine['pH'] <= percentiles[0]] = percentiles[0]\nwine['pH'][wine['pH'] >= percentiles[1]] = percentiles[1]","65a4cebf":"sns.violinplot('pH',data=wine)\nplt.show()","1f7ea861":"sns.violinplot(y='pH',x='quality',data=wine)\nplt.show()","2aa8cef7":"sns.violinplot('sulphates',data=wine)\nplt.show()","77ad8681":"percentiles = wine['sulphates'].quantile([0.05,0.95]).values\nwine['sulphates'][wine['sulphates'] <= percentiles[0]] = percentiles[0]\nwine['sulphates'][wine['sulphates'] >= percentiles[1]] = percentiles[1]","4aa45fa2":"sns.violinplot('sulphates',data=wine)\nplt.show()","5f5a7349":"sns.violinplot(y='sulphates',x='quality',data=wine)\nplt.show()","fa4fbcf7":"sns.violinplot('alcohol',data=wine)\nplt.show()","45e6158d":"percentiles = wine['alcohol'].quantile([0.01,0.99]).values\nwine['alcohol'][wine['alcohol'] <= percentiles[0]] = percentiles[0]\nwine['alcohol'][wine['alcohol'] >= percentiles[1]] = percentiles[1]","fddbc285":"sns.violinplot('alcohol',data=wine)\nplt.show()","8b2eba67":"sns.violinplot(y='alcohol',x='quality',data=wine)\nplt.show()","b7418708":"ax=sns.countplot('quality',data=wine)\nfor p in ax.patches:\n    ax.annotate(str(p.get_height()), (p.get_x() * 1.01 , p.get_height() * 1.01))\nplt.show()","7ebdeab7":"wine.describe()","c913cc13":"plt.figure(figsize = (10,5))\nsns.heatmap(wine.corr(), annot = True, cmap=\"rainbow\")\nplt.show()","14bc25fe":"from sklearn.model_selection import train_test_split\ntrain,test = train_test_split(wine, train_size=0.7, random_state=1)\n","7f4eed52":"train.shape,test.shape","4cebc33d":"X_train=train.drop('quality',axis=1)\nX_test=test.drop('quality',axis=1)\ny_train=train['quality']\ny_test=test['quality']","4c14c74b":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nX_train[:]=scaler.fit_transform(X_train[:])\nX_test[:]=scaler.transform(X_test[:])","08042a73":"from catboost import CatBoostClassifier\nmodel=CatBoostClassifier()\ncategorical_features_indices = np.where(X_train.dtypes != np.float)[0]\ncategorical_features_indices","af7c5ca1":"model.fit(X_train,y_train,cat_features=([]))","18dc96ed":"from sklearn.metrics import classification_report,confusion_matrix,cohen_kappa_score,roc_auc_score\nscore_cbc=model.score(X_test,y_test)\nprint('Score :',score_cbc)","5d7ca136":"roc_auc_score_cbc=roc_auc_score(y_test,model.predict_proba(X_test),multi_class='ovr')\nprint('Compute Area Under the Receiver Operating Characteristic Curve',roc_auc_score_cbc)","eb1322d4":"confusion_matrix(y_test,model.predict(X_test))","e3bf321d":"print(classification_report(y_test,model.predict(X_test)))","13819b6c":"cohen_kappa_score_cbc=cohen_kappa_score(model.predict(X_test),y_test)\nprint('Cohen\u2019s kappa :',cohen_kappa_score_cbc)","e4edbfd8":"print('Score for CatBoostClassifier:                                                        ',score_cbc)\nprint('Compute Area Under the Receiver Operating Characteristic Curve for CatBoostClassifier',roc_auc_score_cbc)\nprint('Cohen\u2019s kappa for CatBoostClassifier:                                                ',cohen_kappa_score_cbc)\n\n    ","e730334e":"print('Confusion Matrix for CatBoostClassifier:')\nprint(confusion_matrix(y_test,model.predict(X_test)))","367fa9de":"print('           Classification Report for CatBoostClassifier:')\nprint(classification_report(y_test,model.predict(X_test))) ","e85efe1e":"This  score that expresses the level of agreement between two annotators on a classification problem. \n\nIt is defined as where  is the empirical probability of agreement on the label assigned to any sample (the observed agreement ratio), and  is the expected agreement when both annotators assign labels randomly.  is estimated using a per-annotator empirical prior over the class labels ","9627a202":"![image.png](attachment:image.png)","db284401":"# Evaluation","cc714ea7":"# Summary ","08eb7c10":"# This problem is worked using CatBoostClassifier Algorithm","8b54fdbd":"#No Data missing"}}