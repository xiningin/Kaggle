{"cell_type":{"d826b2ba":"code","c5e24d8f":"code","9cce31fc":"code","abb7c342":"code","b0e09de4":"code","f5b2c6b2":"code","a7b8379f":"code","059f78a0":"code","98bbe046":"code","f38f7fca":"code","c77e2879":"code","d49adf74":"code","5c391d3f":"code","8b8f543f":"code","1272469a":"code","40978027":"markdown","582739bc":"markdown","d382322a":"markdown","84671a8a":"markdown","4de80d0f":"markdown","955f4e00":"markdown","3d2c5686":"markdown","e83ea569":"markdown","51c1a0a6":"markdown","7906678e":"markdown","2a247c97":"markdown","657d0ba8":"markdown","b90a041d":"markdown","cff0a79e":"markdown","dc00fa5c":"markdown"},"source":{"d826b2ba":"import os\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sn","c5e24d8f":"df_train = pd.read_csv(\"..\/input\/seti-breakthrough-listen\/train_labels.csv\")\ndf_train","9cce31fc":"df_train['target'].value_counts()","abb7c342":"plt.figure(figsize=(16, 5))\nsn.countplot(y=\"target\", data=df_train)\nplt.title(\"Target Distribution\");","b0e09de4":"def get_train_filename_by_id(_id: str) -> str:\n    return f\"..\/input\/seti-breakthrough-listen\/train\/{_id[0]}\/{_id}.npy\"\n\n\nget_train_filename_by_id(df_train.iloc[0][\"id\"])","f5b2c6b2":"tmp_filename = get_train_filename_by_id(df_train.iloc[0][\"id\"])\nprint(tmp_filename)\narr = np.load(tmp_filename)\narr.shape","a7b8379f":"def show_cadence(filename: str, label: int) -> None:\n    plt.figure(figsize=(16, 10))\n    arr = np.load(filename)\n    for i in range(6):\n        plt.subplot(6, 1, i + 1)\n        if i == 0:\n            plt.title(f\"ID: {os.path.basename(filename)} TARGET: {label}\", fontsize=18)\n        plt.imshow(arr[i].astype(float), interpolation='nearest', aspect='auto')\n        plt.text(5, 100, [\"ON\", \"OFF\"][i % 2], bbox={'facecolor': 'white'})\n        plt.xticks([])\n    plt.show()","059f78a0":"df_tmp = df_train[df_train[\"target\"] == 0].sample(1)\nfor ind, row in df_tmp.iterrows():\n    show_cadence(get_train_filename_by_id(row[\"id\"]), row[\"target\"])\n\ndf_tmp = df_train[df_train[\"target\"] == 1].sample(5)\nfor ind, row in df_tmp.iterrows():\n    show_cadence(get_train_filename_by_id(row[\"id\"]), row[\"target\"])","98bbe046":"def show_channels(filename: str, label: int) -> None:\n    plt.figure(figsize=(16, 10))\n    plt.suptitle(f\"ID: {os.path.basename(filename)} TARGET: {label}\", fontsize=18)\n    arr = np.load(filename)\n    for i in range(6):\n        plt.subplot(2, 3, i + 1)\n        plt.imshow(arr[i].astype(float))\n    plt.show()","f38f7fca":"df_tmp = df_train[df_train[\"target\"] == 0].sample(1)\nfor ind, row in df_tmp.iterrows():\n    show_channels(get_train_filename_by_id(row[\"id\"]), row[\"target\"])\n\ndf_tmp = df_train[df_train[\"target\"] == 1].sample(1)\nfor ind, row in df_tmp.iterrows():\n    show_channels(get_train_filename_by_id(row[\"id\"]), row[\"target\"])","c77e2879":"from sklearn.metrics import roc_auc_score, roc_curve, auc","d49adf74":"list_y_true = [\n    [1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.],\n    [1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.],\n    [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0.], #  IMBALANCE\n]\nlist_y_pred = [\n    [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],\n    [0.9, 0.9, 0.9, 0.9, 0.1, 0.9, 0.9, 0.1, 0.9, 0.1, 0.1, 0.5],\n    [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], #  IMBALANCE\n]\n\nfor y_true, y_pred in zip(list_y_true, list_y_pred):\n    fpr, tpr, _ = roc_curve(y_true, y_pred)\n    roc_auc = auc(fpr, tpr)\n\n    plt.figure(figsize=(5, 5))\n    plt.plot(fpr, tpr, color='darkorange', lw=2, label='ROC curve (area = %0.2f)' % roc_auc)\n    plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n    plt.xlim([-0.01, 1.0])\n    plt.ylim([0.0, 1.05])\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title('Receiver operating characteristic example')\n    plt.legend(loc=\"lower right\")\n    plt.show()","5c391d3f":"df_submission = pd.read_csv(\"..\/input\/seti-breakthrough-listen\/sample_submission.csv\")\ndf_submission","8b8f543f":"df_submission[\"target\"] = 0.51\ndf_submission.to_csv(\"submission.csv\", index=False)","1272469a":"df_prepared = pd.read_csv(\"..\/input\/signal-search-submissions\/submission_2021-05-13_20-00-00.csv\", index_col=0)\ndf_prepared.to_csv(\"submission_2021-05-13_20-00-00.csv\")\ndf_prepared = pd.read_csv(\"..\/input\/signal-search-submissions\/submission_2021-05-13_21-00-00.csv\", index_col=0)\ndf_prepared.to_csv(\"submission_2021-05-13_21-00-00.csv\")","40978027":"<a id=\"20\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>Sample Submission<center><h2>","582739bc":"In this competition you are tasked with looking for technosignature signals in cadence snippets taken from the Green Bank Telescope (GBT)","d382322a":"<a id=\"30\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>Prepared Submission<center><h2>","84671a8a":"<a id=\"3\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>Targets<center><h2>","4de80d0f":"Submissions are evaluated on [area under the ROC curve](https:\/\/en.wikipedia.org\/wiki\/Receiver_operating_characteristic) between the predicted probability and the observed target.","955f4e00":"## WORK IN PROGRESS...","3d2c5686":"#### Easy to find\n![](https:\/\/i.imgur.com\/5ohQpvE.png)\n\n#### Medium\n![](https:\/\/i.imgur.com\/Pz6YdoV.png)\n![](https:\/\/i.imgur.com\/81jL2N7.png)\n\n#### Hard\n![](https:\/\/i.imgur.com\/Sgu0k7n.png)","e83ea569":"<a id=\"top\"><\/a>\n\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='color:white; background:black; border:0' role=\"tab\" aria-controls=\"home\"><center>Quick Navigation<\/center><\/h3>\n\n* [Overview](#1)\n* [Visualizations](#2)\n* [Targets](#3)\n    \n    \n\n* [Competition Metric](#10)\n* [Sample Submission](#20)\n* [Prepared Submission](#30)","51c1a0a6":"<a id=\"2\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>Visualizations<center><h2>","7906678e":"I experiments with these two excellent kernels, try to retrain and ensemble them:   \n[SETI \/ NFNet_l0 starter [inference]](https:\/\/www.kaggle.com\/yasufuminakama\/seti-nfnet-l0-starter-inference)   \n[SETI-BL: TF Starter TPU \ud83d\ude80](https:\/\/www.kaggle.com\/awsaf49\/seti-bl-tf-starter-tpu)","2a247c97":"<a id=\"10\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>Competition Metric<center><h2>","657d0ba8":"<a id=\"1\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>Overview<center><h2>","b90a041d":"**train\/** - a training set of cadence snippet files stored in numpy float16 format (v1.20.1), one file per cadence snippet id, with corresponding labels found in the train_labels.csv file. Each file has dimension (6, 273, 256), with the 1st dimension representing the 6 positions of the cadence, and the 2nd and 3rd dimensions representing the 2D spectrogram.  \n**test\/** - the test set cadence snippet files; you must predict whether or not the cadence contains a \"needle\", which is the target for this competition  \n**sample_submission.csv** - a sample submission file in the correct format  \n**train_labels** - targets corresponding (by id) to the cadence snippet files found in the train\/ folder  ","cff0a79e":"# SETI Breakthrough Listen - E.T. Signal Search - Exploratory Data Analysis\n\nQuick Exploratory Data Analysis for [SETI Breakthrough Listen - E.T. Signal Search](https:\/\/www.kaggle.com\/c\/seti-breakthrough-listen\/) challenge    \n\n**\u201cAre we alone in the Universe?\u201d**\n\n\n\u8bc6\u522b\u6570\u636e\u4e2d\u7684\u5f02\u5e38\u4fe1\u53f7","dc00fa5c":"![](https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/23652\/logos\/header.png)"}}