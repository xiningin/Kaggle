{"cell_type":{"c3abecbc":"code","d6bb065f":"code","c943c8c3":"code","5a5ce480":"code","401ea4f6":"code","d5bc707c":"code","75221f05":"code","17eb10f1":"code","f822e8fe":"code","8698ed6c":"code","a703d6a9":"code","12d443a8":"code","7ff2da36":"code","997fce1e":"code","c858db38":"code","dc154dee":"code","05a11a0d":"code","676d0b69":"code","12ffa4b7":"code","64df9b1d":"code","7faa91d8":"code","5a223832":"code","6ddc84bd":"code","22968022":"code","24c03bd8":"code","b43a5501":"code","46a5bb73":"code","f778dd13":"code","d5f5534f":"code","8d1536e8":"code","733b698e":"code","bad5bb7d":"code","7a39b60c":"code","0465de81":"code","8d9b71e9":"code","e8372c71":"code","143bde76":"code","ad0bf1b9":"code","58e2387f":"code","24ea9502":"code","a04a5b64":"code","d4095021":"code","5cad23d4":"code","62a4a794":"markdown","48f911a9":"markdown","093cadef":"markdown","bb83a597":"markdown","7a548890":"markdown","447c9679":"markdown","1411544c":"markdown","37012660":"markdown","df4191da":"markdown","a2eb9aa5":"markdown","051c1cc3":"markdown","7d79bbad":"markdown","971e812f":"markdown","7fe41e5d":"markdown","b5772776":"markdown","afdb1f58":"markdown","f4406428":"markdown","88bb3057":"markdown","73c6403a":"markdown","8c0ca5c3":"markdown","033b6e23":"markdown","56e2f8ce":"markdown","5f6341f4":"markdown","656d5a2b":"markdown","aff84f74":"markdown","5add2258":"markdown","5e69d936":"markdown","e20ebd2f":"markdown","339c2486":"markdown","9eda0929":"markdown","b6121a19":"markdown","13a41e93":"markdown","bf8f4192":"markdown","49e02a41":"markdown","da17f0f7":"markdown","9840ed07":"markdown","f5c9585d":"markdown","ce430c49":"markdown","b600e696":"markdown","ef4eb126":"markdown","6391d11a":"markdown","6e678032":"markdown","935d16ec":"markdown","36b743ec":"markdown","81275fa9":"markdown","c7f53ebc":"markdown","04112b69":"markdown","b5d5548c":"markdown","f44becbc":"markdown","3ddc974d":"markdown","35204592":"markdown","09be1e09":"markdown","7894f230":"markdown","f370bea4":"markdown","ba9d1356":"markdown","21f12c99":"markdown"},"source":{"c3abecbc":"!pip install -q datascience                                         \n# Package that is required by pandas profiling\n!pip install -q pandas-profiling                                 \n# Library to generate basic statistics about data\n# To install more libraries insert your code here..","d6bb065f":"!pip install -q --upgrade pandas-profiling                      \n# Upgrading pandas profiling to the latest version","c943c8c3":"#-------------------------------------------------------------------------------------------------------------------------------\nimport pandas as pd                                                 # Importing package pandas (For Panel Data Analysis)\nfrom pandas_profiling import ProfileReport                          # Import Pandas Profiling (To generate Univariate Analysis)\n#-------------------------------------------------------------------------------------------------------------------------------\nimport numpy as np                                                  # Importing package numpys (For Numerical Python)\n#-------------------------------------------------------------------------------------------------------------------------------\nimport matplotlib.pyplot as plt                                     # Importing pyplot interface to use matplotlib\nimport seaborn as sns                                               # Importing seaborn library for interactive visualization\n%matplotlib inline\n#-------------------------------------------------------------------------------------------------------------------------------\nimport scipy as sp                                                  # Importing library for scientific calculations\n#-------------------------------------------------------------------------------------------------------------------------------","5a5ce480":"used_cars_dataset = pd.read_csv(filepath_or_buffer = 'https:\/\/raw.githubusercontent.com\/NeerajSinghbhadouria\/EDA-Used-Car-Sales\/main\/Used-Car-Dataset.csv',\n                                encoding='cp1252')\n\nused_cars_dataset.head(10)","401ea4f6":"used_cars_dataset.describe()","d5bc707c":"used_cars_dataset.info()\n","75221f05":"\nprofile = ProfileReport(used_cars_dataset, title='Pandas Pre-Profiling Report' , explorative=True)","17eb10f1":"profile.to_file(\"PreProfilingReport_UsedCars.html\")","f822e8fe":"used_cars_dataset.drop_duplicates(inplace=True)\nused_cars_dataset.shape\n\n  ","8698ed6c":"used_cars_dataset.replace({'engType': 'Other', 'price': 0, 'mileage': 0}, np.nan, inplace=True)\n\nused_cars_dataset.head(10)","a703d6a9":"used_cars_dataset.isnull().sum()","12d443a8":"\n\n\ndef get_median_price(x):\n    brand = x.name[0]\n    if x.count() > 0:\n        return x.median() # Return median for a brand\/model if the median exists.\n    elif used_cars_dataset.groupby(['car'])['price'].count()[brand] > 0:\n        brand_median = used_cars_dataset.groupby(['car'])['price'].apply(lambda x: x.median())[brand]\n        return brand_median # Return median of brand if particular brand\/model combo has no median,\n    else:                 # but brand itself has a median for the 'price' feature. \n        return used_cars_dataset['price'].median() # Otherwise return dataset's median for the 'price' feature.\n    \nprice_median = used_cars_dataset.groupby(['car','model'])['price'].apply(get_median_price).reset_index()\nprice_median.rename(columns={'price': 'price_med'}, inplace=True)\nprice_median.head(10)\n\n","7ff2da36":"def fill_with_median(x):\n    if pd.isnull(x['price']):\n        return price_median[(price_median['car'] == x['car']) & (price_median['model'] == x['model'])]['price_med'].values[0]\n    else:\n        return x['price']\n\n#applying the funtion get fill the NaN with Median.    \nused_cars_dataset['price'] = used_cars_dataset.apply(fill_with_median, axis=1)\nused_cars_dataset.head()","997fce1e":"used_cars_dataset.price.isnull().sum()\n\n","c858db38":"def get_median_mileage(x):\n    brand = x.name[0]\n    if x.count() > 0:\n        return x.median() # Return median for a brand\/model if the median exists.\n    elif used_cars_dataset.groupby(['car'])['mileage'].count()[brand] > 0:\n        brand_median = used_cars_dataset.groupby(['car'])['mileage'].apply(lambda x: x.median())[brand]\n        return brand_median # Return median of brand if particular brand\/model combo has no median,\n    else:                 # but brand itself has a median for the 'mileage' feature. \n        return used_cars_dataset['mileage'].median() # Otherwise return dataset's median for the 'mileage' feature.\n    \nmileage_median = used_cars_dataset.groupby(['car','model'])['mileage'].apply(get_median_mileage).reset_index()\nmileage_median.rename(columns={'mileage': 'mileage_med'}, inplace=True)\nmileage_median.head()","dc154dee":"\ndef fill_with_median(x):\n    if pd.isnull(x['mileage']):\n        return mileage_median[(mileage_median['car'] == x['car']) & (mileage_median['model'] == x['model'])]['mileage_med'].values[0]\n    else:\n        return x['mileage']\n \n\nused_cars_dataset['mileage'] = used_cars_dataset.apply(fill_with_median, axis=1)\nused_cars_dataset.head()","05a11a0d":"used_cars_dataset.mileage.isnull().sum()","676d0b69":"def get_median_engV(x):\n    brand = x.name[0]\n    if x.count() > 0:\n        return x.median() # Return median for a brand\/model if the median exists.\n    elif used_cars_dataset.groupby(['car'])['engV'].count()[brand] > 0:\n        brand_median = used_cars_dataset.groupby(['car'])['engV'].apply(lambda x: x.median())[brand]\n        return brand_median # Return median of brand if particular brand\/model combo has no median,\n    else:                 # but brand itself has a median for the 'engV' feature. \n        return used_cars_dataset['engV'].median() # Otherwise return dataset's median for the 'engV' feature.\n    \nengV_median = used_cars_dataset.groupby(['car','model'])['engV'].apply(get_median_engV).reset_index()\nengV_median.rename(columns={'engV': 'engV_med'}, inplace=True)\nengV_median.head()","12ffa4b7":"def fill_with_median(x):\n    if pd.isnull(x['engV']):\n        return engV_median[(engV_median['car'] == x['car']) & (engV_median['model'] == x['model'])]['engV_med'].values[0]\n    else:\n        return x['engV']\n    \nused_cars_dataset['engV'] = used_cars_dataset.apply(fill_with_median, axis=1)\nused_cars_dataset.head()","64df9b1d":"used_cars_dataset.engV.isnull().sum()","7faa91d8":"\ndef get_engType_mode(x):\n    brand = x.name[0]\n    if x.count() > 0:\n        return x.mode() # Return mode for a brand\/model if the mode exists.\n    elif used_cars_dataset.groupby(['car'])['engType'].count()[brand] > 0:\n        brand_mode = used_cars_dataset.groupby(['car'])['engType'].apply(lambda x: x.mode())[brand]\n        return brand_mode # Return mode of brand if particular brand\/model combo has no mode,\n    else:                 # but brand itself has a mode for the 'engType' feature. \n        return used_cars_dataset['engType'].mode() # Otherwise return dataset's mode for the 'engType' feature.\n    \nengType_modes = used_cars_dataset.groupby(['car','model'])['engType'].apply(get_engType_mode).reset_index().drop('level_2', axis=1)\nengType_modes.rename(columns={'engType': 'engType_mode'}, inplace=True)\nengType_modes.head()","5a223832":"def fill_with_mode(x):\n    if pd.isnull(x['engType']):\n        return engType_modes[(engType_modes['car'] == x['car']) & (engType_modes['model'] == x['model'])]['engType_mode'].values[0]\n    else:\n        return x['engType']\n    \nused_cars_dataset['engType'] = used_cars_dataset.apply(fill_with_mode, axis=1)\nused_cars_dataset.head()","6ddc84bd":"used_cars_dataset.engType.isnull().sum()\n","22968022":"def get_drive_mode(x):\n    brand = x.name[0]\n    if x.count() > 0:\n        return x.mode() # Return mode for a brand\/model if the mode exists.\n    elif used_cars_dataset.groupby(['car'])['drive'].count()[brand] > 0:\n        brand_mode = used_cars_dataset.groupby(['car'])['drive'].apply(lambda x: x.mode())[brand]\n        return brand_mode # Return mode of brand if particular brand\/model combo has no mode,\n    else:                 # but brand itself has a mode for the 'drive' feature. \n        return used_cars_dataset['drive'].mode() # Otherwise return dataset's mode for the 'drive' feature.\n    \ndrive_modes = used_cars_dataset.groupby(['car','model'])['drive'].apply(get_drive_mode).reset_index().drop('level_2', axis=1)\ndrive_modes.rename(columns={'drive': 'drive_mode'}, inplace=True)\ndrive_modes.head()","24c03bd8":"def fill_with_mode(x):\n    if pd.isnull(x['drive']):\n        return drive_modes[(drive_modes['car'] == x['car']) & (drive_modes['model'] == x['model'])]['drive_mode'].values[0]\n    else:\n        return x['drive']\n    \nused_cars_dataset['drive'] = used_cars_dataset.apply(fill_with_mode, axis=1)\nused_cars_dataset.head()","b43a5501":"used_cars_dataset.drive.isnull().sum()","46a5bb73":"import pandas_profiling\nprofile = ProfileReport(used_cars_dataset, title='Pandas Profiling Report' , explorative=True)\nprofile.to_file(\"Report_usedcars_after_preprocessing_final.html\")","f778dd13":"used_cars_dataset.groupby(by='year').count()['car'].plot.bar(figsize = (12,6))\n#plt.xticks(np.arange(1950,2025,5))","d5f5534f":"plots = used_cars_dataset.car.value_counts().head(10).plot.bar(figsize = (12,6))\nplt.title(\"Top 10 CAR BRANDS IN TERM OF OVERALL SALE \", size='20', color ='red')\nplt.xlabel(\"Car Brands\" ,color ='red', size='20' )\nplt.ylabel(\"count\", color ='red', size='20')\nplt.xticks(rotation = 45)\nfor bar in plots.patches:\n    plots.annotate(format(bar.get_height()),\n                   (bar.get_x() + bar.get_width() \/ 2,\n                    bar.get_height()), ha='center', va='center',\n                   size=10, xytext=(0, 5),\n                   textcoords='offset points')\n \n","8d1536e8":"plots = used_cars_dataset.car.value_counts().tail(20).plot.bar(figsize = (12,6))\nplt.title(\"20 LOWEST SALE CAR BRANDS IN TERM OF OVERALL SALE \", size='20', color ='red')\nplt.xlabel(\"Car Brands\" ,color ='red', size='20' )\nplt.ylabel(\"count\", color ='red', size='20')\nplt.xticks(rotation = 45)\nfor bar in plots.patches:\n    plots.annotate(format(bar.get_height()),\n                   (bar.get_x() + bar.get_width() \/ 2,\n                    bar.get_height()), ha='center', va='center',\n                   size=10, xytext=(0, 5),\n                   textcoords='offset points')\n ","733b698e":"# Getting \ndataset_top10 = used_cars_dataset[(used_cars_dataset.year>1901) &  \n                  (used_cars_dataset.car.isin(used_cars_dataset.car.value_counts().head(10).index.tolist()))].groupby(by=['car','engType']).count().sort_values(by='car' ,ascending=False).reset_index()\n\ndataset_top10 = dataset_top10[['car','engType','price']]\npivoted = dataset_top10.pivot(index='car', columns='engType', values='price')\nplots =pivoted.fillna(0).sort_values(by=['Diesel','Petrol'],axis=0,ascending=False).plot.bar(figsize = (12,6))\nfor bar in plots.patches:\n    plots.annotate(format(bar.get_height()),\n                   (bar.get_x() + bar.get_width() \/ 2,\n                    bar.get_height()), ha='center', va='center',\n                   size=10, xytext=(0, 5),\n                   textcoords='offset points')","bad5bb7d":"# Getting \ndataset_top10 = used_cars_dataset[(used_cars_dataset.year>1901) &  \n                  (used_cars_dataset.car.isin(used_cars_dataset.car.value_counts().head(10).index.tolist()))].groupby(by=['car','body']).count().sort_values(by='car' ,ascending=False).reset_index()\n\ndataset_top10 = dataset_top10[['car','body','price']]\npivoted = dataset_top10.pivot(index='car', columns='body', values='price')\nplots =pivoted.fillna(0).sort_values(by=['car'],axis=0,ascending=False).plot.bar(figsize = (20,10))\nfor bar in plots.patches:\n    plots.annotate(format(bar.get_height()),\n                   (bar.get_x() + bar.get_width() \/ 2,\n                    bar.get_height()), ha='center', va='center',\n                   size=10, xytext=(0, 5),\n                   textcoords='offset points')","7a39b60c":"data.set_index('model').price.sort_values(ascending=False)[:10].plot.bar(figsize = (15,7))","0465de81":"figure = plt.figure(figsize=[12,9])\nplots = used_cars_dataset.groupby(by='car')['body'].value_counts().sort_values(ascending=False).head(10).plot.bar(figsize = (12,6))\n\nplt.title(\"Top 10 car brands w.r.t body type\", size='25', color ='Green')\nplt.xticks(rotation = 45)\nfor bar in plots.patches:\n    plots.annotate(format(bar.get_height()),\n                   (bar.get_x() + bar.get_width() \/ 2,\n                    bar.get_height()), ha='center', va='center',\n                   size=10, xytext=(0, 5),\n                   textcoords='offset points')\n \n","8d9b71e9":"#univariate\nfigure = plt.figure(figsize=[12,6])\nplt.title(\"Most preferred engType used over the years\" , size='25', color ='Green')\nplots=sns.countplot(x='engType', data=used_cars_dataset, orient='h')\n\nfor p in plots.patches:\n    plots.annotate(f'\\n{p.get_height()}', (p.get_x()+0.37, p.get_height()), ha='center', va='top', size=15)\n\n\n#over all petrol is preferred choice but when we deep dive, disel is most preferred in van and vagon segment.","e8372c71":"figure = plt.figure(figsize=[12,6])\nplots = sns.countplot(x='body', data=used_cars_dataset, orient=None, hue='engType')\nplt.title(\"Most preferred Body type vs Engine Type used in 1953-2016\")\nfor bar in plots.patches:\n    plots.annotate(format(bar.get_height()),\n                   (bar.get_x() + bar.get_width() \/ 2,\n                    bar.get_height()), ha='center', va='center',\n                   size=10, xytext=(0, 5),\n                   textcoords='offset points')\n","143bde76":"figure = plt.figure(figsize=[12,6])\nplots = sns.countplot(x='drive', data=used_cars_dataset, orient=None, hue='engType')\nplt.title(\"Most preferred wheel drive vs Engine Type used in 1953-2016\")\nfor bar in plots.patches:\n    plots.annotate(format(bar.get_height()),(bar.get_x() + bar.get_width() \/ 2,\n                    bar.get_height()) , ha='center', va='center',size=10, xytext=(0, 5),textcoords='offset points')\n","ad0bf1b9":"figure = plt.figure(figsize=[12,6])\nplots = sns.countplot(x='drive', data=used_cars_dataset, orient=None, hue='body')\nplt.title(\"Most preferred Body type vs drive used in 1953-2016\")\nfor bar in plots.patches:\n    plots.annotate(format(bar.get_height()),(bar.get_x() + bar.get_width() \/ 2,\n                    bar.get_height()) , ha='center', va='center',size=10, xytext=(0, 5),textcoords='offset points')\n","58e2387f":"# Plotting a graph to compare the mileage and price\nfigure = plt.figure(figsize=[12,6])\nused_cars_dataset.plot.scatter(x='mileage', y='price', figsize =(12,6), color = 'green')\n\n#adding some cosmetics\nplt.xlabel('Mileage', size = 16, color = 'red')\nplt.ylabel('price', size = 16, color = 'red')\nplt.xticks(np.arange(0,1000,50))\nplt.yticks(np.arange(0,600000,50000))\nplt.title('Mileage V\/S Price', size = 20, color = 'red')","24ea9502":"figure = plt.figure(figsize=[12,6])\nsns.lineplot(x='year',y='price',data=used_cars_dataset[used_cars_dataset.year>2005], hue='body')\n#plt.xticks(np.arange(1950,100,5))\nplt.title(\"mileage - body and Year line Plot\")","a04a5b64":"\nfigure = plt.figure(figsize=[12,6])\nsns.heatmap(data= used_cars_dataset.corr(), annot = True, cmap = 'coolwarm')","d4095021":"# Initialize figure of size 12 X 6\nfigure = plt.figure(figsize=[12,6])\n\n#Checking the distribution of price\nsns.distplot(a= used_cars_dataset.mileage, kde=True, color = 'gold')\n\n#adding some cosmetics\nplt.xlabel('Mileage', size = 16, color = 'green')\nplt.ylabel('Density distribution', size = 16, color = 'green')\nplt.title('Mileage distribution among the cars', size = 20, color = 'purple')","5cad23d4":"used_cars_dataset.head(10)\n\nused_cars_dataset.groupby(by='year').count()['car'].plot.bar(figsize = (12,6))\n#plt.xticks(np.arange(1950,2025,5))\n","62a4a794":"### Q4. what are the most preferred engtype over the years?","48f911a9":"#### Observations: All 240 NaN values have been replaced.","093cadef":"### correlation between the features of the cars?","bb83a597":"---\n<a name = Section6><\/a>\n# 6. Data Pre-Processing\n---\n\n- This section is emphasised on performing data manipulation over unstructured data for further processing and analysis.\n\n- To modify unstructured data to strucuted data you need to verify and manipulate the integrity of the data by:\n  - Handling missing data,\n\n  - Handling redundant data,\n\n  - Handling inconsistent data,\n\n  - Handling outliers,\n\n  - Handling typos","7a548890":"### Since all missing values have been replaced. We are good to go with Post -Profiling , EDA and plotting.\n","447c9679":"### 6.1. Removing Duplicates rows if any.","1411544c":"#### Checking if all NaN has been replaced correctly?","37012660":"---\n<a name = Section5><\/a>\n## 5. Data Pre-Profiling\n---\n\n- This section is emphasised on getting a report about the data.\n\n- You need to perform pandas profiling and get some observations out of it...","df4191da":"### Observations: sedan body type cars usually have full drive whereas sedan leads the front drive category.","a2eb9aa5":"#### Checking if all NaN has been replaced correctly?","051c1cc3":"### Most preferred wheel drive vs Engine Type used in 1953-2016 ?","7d79bbad":"#### 6.3.4. Coming on to categorical column: 'engType'\n\n#### Creating a funtion to calculate mode of 'engType' based on car and model:","971e812f":"#### Creating a funtion to fill the NaN with median values::","7fe41e5d":"---\n<a name = Section4><\/a>\n# 4. Data Acquisition & Description\n---\n\n- This section is emphasised on the accquiring the data and obtain some descriptive information out of it.\n\n- You could either scrap the data and then continue, or use a direct source of link (generally preferred in most cases).\n\n- You will be working with a direct source of link to head start your work without worrying about anything.\n\n- Before going further you must have a good idea about the features of the data set:\n\n|Id|Feature|Description|\n|:--|:--|:--|\n|01| car           | Car brand name| \n|02| model         | Available car different Variants|  \n|03| year          | Purchasing Year| \n|04| body          | Body type-Hatchback, Sedan, Crossover etc|   \n|05| mileage       | Car Mileage|\n|06| engV          | Engine version|\n|07| engType       | Car Fuel type - Petrol, Diesel, gas etc|\n|08| drive         | Wheel Drive Front, back|\n|09| registration  | Check if the vechile is registered|\n|10| price         | Price of Car in $|\n","b5772776":"#### Checking if all NaN has been replaced correctly?","afdb1f58":"### **Installing Libraries**","f4406428":"#### 6.3.3. Coming on to 'engV'\n\n#### Creating a funtion to calculate Median of 'engV' based on car and model:","88bb3057":"#### 6.3.1. Starting with 'price'\n\n#### Creating funtion to find the median of 'price'::","73c6403a":"#### Checking if all NaN has been replaced correctly?","8c0ca5c3":"#### Creating a funtion to fill the NaN with mode values::","033b6e23":"#### Checking if all NaN has been replaced correctly?","56e2f8ce":"#### Observations: All 310 NaN values have been replaced.","5f6341f4":"### **Data Information**","656d5a2b":"<a name = Section92><\/a>\n### **9.2 Actionable Insights**\n\n- This is a very crucial part where you will present your actionable insights.\n- You need to give suggestions about what could be applied and what not.\n- Make sure that these suggestions are short and to the point, ultimately it's a catalyst to your business.","aff84f74":"#### Observations: used cars sales has been picked up drastically in 2000 and was on top in 2007 and 2008.","5add2258":"#### Observations: All 510 NaN values have been replaced.","5e69d936":"#### Observations: All 462 NaN values have been replaced.","e20ebd2f":"### Observation :  Diesel engine is preferred in van and vagon (transportation category) where as Petrol is preferred in passenger category.\n","339c2486":"### **Upgrading Libraries**\n\n- **After upgrading** the libraries, you need to **restart the runtime** to make the libraries in sync.\n\n- Make sure not to execute the cell under Installing Libraries and Upgrading Libraries again after restarting the runtime.","9eda0929":"#### Creating a funtion to fill the NaN with mode values::","b6121a19":"---\n<a name = Section7><\/a>\n## 7. Data Post-Profiling\n---\n\n- This section is emphasised on getting a report about the data after the data manipulation.\n\n- You may end up observing some new changes, so keep it under check and make right observations.","13a41e93":"### **Importing Libraries**\n\n- You can headstart with the basic libraries as imported inside the cell below.\n\n- If you want to import some additional libraries, feel free to do so.\n","bf8f4192":"#### Creating a funtion to fill the NaN with median values::","49e02a41":"### 6.3.2. Coming on to 'Mileage'\n\n#### Creating a funtion to calculate Median of 'mileage' based on car and model:\n","da17f0f7":"### Q5. Most preferred Engine Type against the body type?","9840ed07":"### Q3 what are the preferred body type in combination with brand?","f5c9585d":"---\n<a name = Section2><\/a>\n## 2. Problem Statement\n---\n\n\nCar Deal is a new company which started the business about an year ago to sell used cars in the market.\nBecause of the COVID pandemic this company was unable to sell the expeced number of cars to improve it's business.\nAs the situation is getting better and people are positively showing interest to buy used cars, Car Deal wants to use this oportunity and do more sales.\nBut, since it's a new company, the management is unaware what is market trend and what cars and models are selling fast. So, the management decided to hire a data scientist to analyse the trend and understand the user purchase behaviour using the data provided.\nOnce the Car Deal company knows the users purchase behaviour, based on that, the company can advertise more on that cars and attract the customers then improve their revenue.\n  \n<p align=\"center\"><img src=\"https:\/\/visme.co\/blog\/wp-content\/uploads\/2020\/06\/animated-interactive-infographics-header-wide.gif\"><\/p>\n\n\n  \n  **Problem**\n  1. Which brand of cars is the most selling brand ?\n  \n  2. which body type of cars are more selling?\n  \n  3. What are the factors affecting the price of cars?","ce430c49":"<a name = Section91><\/a>\n### **9.1 Conclusion**\n\n- In this part you need to provide a conclusion about your overall analysis.\n\n- Write down some short points that you have observed so far.","b600e696":"## EDA on used cars","ef4eb126":"### Q2. what are the brand performance in term of overall Sales ?","6391d11a":"---\n<a name = Section8><\/a>\n## 8. Exploratory Data Analysis\n---\n\n","6e678032":"1. [**Introduction**](#Section1)<br>\n2. [**Problem Statement**](#Section2)<br>\n3. [**Installing & Importing Libraries**](#Section3)<br>\n  3.1 [**Installing Libraries**](#Section31)<br>\n  3.2 [**Upgrading Libraries**](#Section32)<br>\n  3.3 [**Importing Libraries**](#Section33)<br>\n4. [**Data Acquisition & Description**](#Section4)<br>\n5. [**Data Pre-Profiling**](#Section5)<br>\n6. [**Data Pre-Processing**](#Section6)<br>\n7. [**Data Post-Profiling**](#Section7)<br>\n8. [**Exploratory Data Analysis**](#Section8)<br>\n9. [**Summarization**](#Section9)<\/br>\n  9.1 [**Conclusion**](#Section91)<\/br>\n  9.2 [**Actionable Insights**](#Section91)<\/br>","935d16ec":"## Table of content","36b743ec":"#### Observations: All 434 NaN values have been replaced.","81275fa9":"### **Data Description**\n\n- To get some quick description out of the data you can use describe method defined in pandas library.","c7f53ebc":"#### Observation :Shape has been changed from (9576, 10) to (9463, 10) - i.e 113 Duplicate rows have been removed.","04112b69":"---\n<a name = Section9><\/a>\n# **9. Summarization**\n---","b5d5548c":"---\n<a id = Section3><\/a>\n## **3. Installing & Importing Libraries**\n---\n\n- This section is emphasised on installing and importing the necessary libraries that will be required.","f44becbc":"### Most preferred Body type vs drive used in 1953-2016","3ddc974d":"#### Observations: 5 column have missing data , lets target them one by one.","35204592":"---\n<a name = Section1><\/a>\n# 1. Introduction\n---\n1. As the world evolving in all directions significantly, the economic gaps between the people are still exist. The livelihood of different people from different financial backgrounds are changing alot. When it comes to the comfortable travel the cars are playing a vital role.\nAlso, considering the COVID pandemic, most of the lower and middle income group of people also attracting to travel in a safe environment and not willing to choose public transport.\n2. At the same time the car manufactureres also increased the price of the new cars, which is directly effecting the buying capability of low income group people.\nHence, most of the people are looking at the used cars now.\n3. There are few people who cannot afford to buy new luxury car, but they wish to travel in it. For those, this used cars are the sunlight in dark.\n4. This used cars has become an oportunity for the business. And it's going to genereate a decent revenue for business as well.\n","09be1e09":"### Q1. Pattern of the car sales over the years?","7894f230":"#### 6.3.5. Coming on to last categorical column: 'drive'\n\n#### Creating a funtion to calculate mode of 'drive' based on car and model:","f370bea4":"#### Now creating a funtion to fill NaN with median of 'price'.","ba9d1356":"### 6.3. Handling missing data","21f12c99":"### 6.2. Handling inconsistent data\n\n#### a. price and mileage column have Zeros, which are outliers , changing it as Nan to that it can be further replaced with median.\n#### b. engType column have 'other' value , changing it as Nan so that it can be further replaced with median."}}