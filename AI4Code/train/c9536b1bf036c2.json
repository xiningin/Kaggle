{"cell_type":{"ba6979e0":"code","d98cf3cd":"code","96c26b70":"code","e457bbda":"code","b158b274":"code","ecb14a8f":"code","904c5568":"code","686cf4a2":"code","be6d89cc":"code","b3760758":"code","9de2309b":"code","dd1c4fe4":"code","1bc7bb56":"code","d3a1592f":"code","3f7af5be":"code","0660a464":"code","546bfca0":"markdown","f4387747":"markdown","e86aad18":"markdown"},"source":{"ba6979e0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d98cf3cd":"import pandas as pd\nfilename = \"\/kaggle\/input\/twitter-airline-sentiment\/Tweets.csv\"\ndf = pd.read_csv(filename)\ndf.head()","96c26b70":"df['airline_sentiment'].value_counts()\n","e457bbda":"df.isnull().sum()","b158b274":"x=df['text'].values\ny=df['airline_sentiment'].values","ecb14a8f":"from nltk.corpus import stopwords\nimport string\nstop_words = stopwords.words('english')\nstop_words += list(string.punctuation)","904c5568":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x, y,random_state = 0)","686cf4a2":"from sklearn.feature_extraction.text import CountVectorizer\ncv = CountVectorizer(max_features = 4000, analyzer = 'word', stop_words = stop_words, ngram_range = (1,4), max_df = 0.8)","be6d89cc":"x_train_vec = cv.fit_transform(X_train)\nx_test_vec  = cv.transform(X_test)","b3760758":"from sklearn.svm import SVC\nsvc = SVC(gamma = 'auto')\nsvc.fit(x_train_vec, y_train)","9de2309b":"svc.score(x_test_vec, y_test)","dd1c4fe4":"from sklearn.naive_bayes import MultinomialNB\nNBClassifer = MultinomialNB(alpha = 0.1)\nNBClassifer.fit(x_train_vec, y_train)","1bc7bb56":"NBClassifer.score(x_test_vec, y_test)","d3a1592f":"x_test_vec  = cv.transform(X_test)\ny_predicted = NBClassifer.predict(x_test_vec)","3f7af5be":"y_predicted","0660a464":"np.savetxt(\"\/kaggle\/working\/output.csv\", y_predicted, fmt='%s')","546bfca0":"# NAIVE BAYES","f4387747":"# SVM","e86aad18":"# **Cleaning**"}}