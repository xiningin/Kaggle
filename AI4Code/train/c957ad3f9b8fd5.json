{"cell_type":{"dabd3786":"code","33764fa7":"code","40b67407":"code","755c0ca0":"code","9e1dd022":"code","12eab18b":"code","f49e1249":"code","99bea967":"code","2e05d70f":"code","d80e59a6":"code","a26039f2":"code","2693d74e":"code","d2a348d4":"code","724219f3":"code","8541f842":"code","8bd66f36":"code","024e9bbb":"code","d725cad8":"markdown","5d90550e":"markdown","0409e4b4":"markdown","fdd5237c":"markdown","fc7ae053":"markdown","eeefb8c8":"markdown","c487c8ca":"markdown","5e2b678e":"markdown","0c2e3270":"markdown","5137e87c":"markdown","6707e3f5":"markdown","e113105e":"markdown","26a5d906":"markdown","6b1412b8":"markdown","398f891b":"markdown","df2e9013":"markdown","fdcb4b9d":"markdown","918899b4":"markdown","73ed102b":"markdown","d40a1151":"markdown"},"source":{"dabd3786":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(\"\u5229\u7528\u53ef\u80fd\u30c7\u30fc\u30bf\u306e\u4e00\u89a7\")\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","33764fa7":"!pwd","40b67407":"#csv\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\ntrain_df = pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\n#\u3053\u308c\u3067\u3082\u540c\u3058(csv\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f)\n#train_df = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\n\n# \u57fa\u672c\u60c5\u5831\u306e\u8868\u793a\ntrain_df.info()\n# \u5192\u982d\u306e\u30c7\u30fc\u30bf\u306e\u8868\u793a\ntrain_df.head()","755c0ca0":"# \u30e9\u30d9\u30eb\u306e\u7a2e\u985e\u306e\u78ba\u8a8d\n\n#'label'\u5217\u306e\u30e6\u30cb\u30fc\u30af\u306a\u8981\u7d20\u3092\u62bd\u51fa\nlabel_classes = train_df['label'].unique()\n\n# \u30e6\u30cb\u30fc\u30af\u306a\u8981\u7d20\u3092\u8868\u793a\nprint(\"labels:\")\nprint(label_classes)\n\n# \u30bd\u30fc\u30c8\u3057\u3066\u51fa\u529b\nprint(\"sorted_labels:\")\nprint(np.sort(label_classes))\n\n# \u30af\u30e9\u30b9\u306e\u6570\u306e\u78ba\u8a8d\nprint(\"Num of classes:\")\nprint(len(label_classes))","9e1dd022":"#csv\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\ntest_df = pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')\n\n# \u57fa\u672c\u60c5\u5831\u306e\u8868\u793a\ntest_df.info()\n# \u5192\u982d\u306e\u30c7\u30fc\u30bf\u306e\u8868\u793a\ntest_df.head()","12eab18b":"#csv\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\nspsb_df = pd.read_csv('\/kaggle\/input\/digit-recognizer\/sample_submission.csv')\n\n# \u57fa\u672c\u60c5\u5831\u306e\u8868\u793a\nspsb_df.info()\n# \u5192\u982d\u306e\u30c7\u30fc\u30bf\u306e\u8868\u793a\nspsb_df.head()","f49e1249":"# \u30c7\u30fc\u30bf\u6570\u306a\u3069\u3092\u5909\u6570\u3067\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u4ee3\u5165\n\n# train\u30c7\u30fc\u30bf\u306e\u6570 : 42,000\nn_train = len(train_df) # \u884c\u6570\n\n# pixel\u6570 : 748\nn_pixels = len(train_df.columns) - 1 # xx_df.columns \u306f\u5217\u6570\u3002-1\u306a\u306e\u306f\u30e9\u30d9\u30eb\u5206\u3092\u5f15\u3044\u3066\u3044\u308b\u3002\n\n# label\u306e\u7a2e\u985e\u306e\u6570 : 10\nn_class = len(set(train_df['label']))\n\n# train\u30c7\u30fc\u30bf\u306e\u753b\u50cf\u306epixel\u90e8\u5206\ntrain_df_p = train_df.drop(columns='label')\n\n# train\u30c7\u30fc\u30bf\u306e\u30e9\u30d9\u30eb\u90e8\u5206\ntrain_df_l = train_df['label']","99bea967":"# PyTorch\u306e\u3001\u753b\u50cf\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092import\u3057\u307e\u3059\nimport torch\nfrom torchvision.utils import make_grid\n\n# Jupyter Notebook\u4e0a\u3067\u30b0\u30e9\u30d5\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u53ca\u3073\u30b3\u30de\u30f3\u30c9\nimport matplotlib.pyplot as plt\n%matplotlib inline","2e05d70f":"#\u9069\u5f53\u306a\u884c\u756a\u53f7n\u3092\u6307\u5b9a\nn = 10\n\na_image_df = train_df_p.iloc[n,:]\na_label = train_df_l[n]\n\n# numpy\u306earray\u306b\u3059\u308b\uff1a a_image_df.values \n# array\u309228 * 28 \u306e\u884c\u5217\u306breshape: .reshape(28,28)\n# \u5404\u8981\u7d20\u3092255\u3067\u5272\u3063\u30660\uff5e1\u306e\u5024\u306b\u3059\u308b\u3002\na_image_array = a_image_df.values.reshape(28,28) \/ 255. \n\n#print(a_image_array.shape)\n#print(a_image_array)\n\nplt.rcParams['figure.figsize'] = (3, 3) # \u753b\u50cf\u30b5\u30a4\u30ba\nplt.axis('off') # \u8ef8\u8868\u793aoff\nplt.gray() # \u767d\u9ed2\u8868\u793a(\u305d\u306e\u307e\u307e\u3067\u306f\u5909\u306a\u8272\u306b\u306a\u308b)\nplt.imshow(a_image_array) # \u753b\u50cf\u30c7\u30fc\u30bf\u306e\u8ffd\u52a0\u3002\nplt.show() # \u753b\u50cf\u306e\u8868\u793a\nprint(\"label: \"+str(a_label))","d80e59a6":"label_0_index = np.where(train_df_l == 0)\nprint(label_0_index)","a26039f2":"label_0_index = np.where(train_df_l == 0)[0]\nprint(label_0_index)","2693d74e":"label_index = [np.where(train_df_l == x)[0] for x in range(10)]\nprint(\"label == 0\")\nprint(label_index[0])\nprint(\"label == 1\")\nprint(label_index[1])","d2a348d4":"n_each_class = [len(x) for x in label_index]\nprint(n_each_class)\n\nx_axis = np.arange(n_class)\nprint(x_axis)\n\nplt.rcParams['figure.figsize'] = (5, 3)\nplt.bar(x_axis, n_each_class)\nplt.xticks(x_axis)\nplt.xlabel('Class', fontsize=16)\nplt.ylabel('Count', fontsize=16)\nplt.show()","724219f3":"import seaborn as sns\n\ngraph_result = sns.countplot(train_df_l)","8541f842":"label_index","8bd66f36":"n = 30 # \u6570\u5b57\u3092\u8868\u793a\u3057\u305f\u3044\u884c\u6570\n\n#\u5404\u6570\u5b57\u6bce\u306eindex\u306e\u914d\u5217\u304b\u3089\u3001n\u500b\u305a\u3064index\u3092\u53d6\u3063\u3066\u304d\u307e\u3059\u3002\nzero2nine_2d = [[x[i] for x in label_index] for i in range(n)]\n\nprint(np.array(zero2nine_2d).shape)\n\n#\u3053\u306e\u307e\u307e\u3060\u30682\u6b21\u5143\u914d\u5217\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001numpy\u306e\u6a5f\u80fd\u3092\u4f7f\u3063\u3066flatten(\u4e00\u6b21\u5143\u914d\u5217\u5316)\u3057\u307e\u3059\u3002\nzero2nine = np.array(zero2nine_2d).flatten()\n\nprint(zero2nine.shape)\n\n# \u8a72\u5f53\u3059\u308bindex\u306e\u884c\u3092train_df_p\u304b\u3089\u53d6\u3063\u3066\u304f\u308b\u3002\n# .values : \u5024\u3092\u53d6\u308a\u51fa\u3057\u3066array\u306b\u3059\u308b\n# \/ 255. : 255.\u3067\u5272\u3063\u30660.0\uff5e1.0\u306b\u3059\u308b\u3002\n# .reshape(-1, 28, 28 ) : -1\u306e\u3068\u3053\u308d\u306f\u5165\u529b\u306b\u5408\u308f\u305b\u3066\u5909\u308f\u308b\u3002\u6b8b\u308a\u306e28*28\u305a\u3064n*10\u500b\u306e3\u6b21\u5143\u914d\u5217\u306b\u3059\u308b\nall_images = (train_df_p.iloc[zero2nine,:].values \/ 255.).reshape(-1, 28, 28)\n\n#print(\"\u30c7\u30fc\u30bf\u306e\u500b\u6570(n*10), 28(\u753b\u7d20\u884c),28(\u753b\u7d20\u5217)\")\nprint(all_images.shape)\n\ngrid = make_grid(torch.Tensor(all_images).unsqueeze(1), nrow=10)\nplt.rcParams['figure.figsize'] = (10, n)\nplt.imshow(grid.numpy().transpose((1,2,0)))\nplt.axis('off')\nplt.show()","024e9bbb":"print(all_images.shape)\nprint(torch.Tensor(all_images).size())\nprint(torch.Tensor(all_images).unsqueeze(0).size())\nprint(torch.Tensor(all_images).unsqueeze(1).size())\nprint(torch.Tensor(all_images).unsqueeze(2).size())\nprint(torch.Tensor(all_images).unsqueeze(3).size())\nprint(\"---------\")\nprint(grid.size())\nprint(grid.numpy().shape)\nprint(grid.numpy().transpose((1,2,0)).shape)","d725cad8":"## 1.2 test.csv \u306e\u78ba\u8a8d\n- test_df \u3068\u3044\u3046\u5909\u6570\u306b\u4ee3\u5165","5d90550e":"### 1.1.2 \u30e9\u30d9\u30eb\u306e\u7a2e\u985e\u306e\u78ba\u8a8d\n- \u30e9\u30d9\u30eb\u306b\u4f55\u304c\u3042\u3063\u3066\u3001\u4f55\u7a2e\u985e\u3042\u308b\u304b\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n- \u6570\u5b57\u306e\u8a8d\u8b58\u3060\u304b\u3089\u2026","0409e4b4":"- \u3088\u304f\u898b\u308b\u3068\u3001\u4e0a\u306e\u306f\u3001\u7d50\u679c\u306f\u30bf\u30d7\u30eb\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u6700\u521d\u306e\u8981\u7d20\u3055\u3048\u3042\u308c\u3070\u3044\u3044\u306e\u3067\u3001[0]\u3067\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\n","fdd5237c":"# 3.\u753b\u50cf\u3092\u8868\u793a\u3057\u3066\u78ba\u8a8d\u3057\u3066\u307f\u308b","fc7ae053":"### 1.1.1 train.csv \u304a\u3088\u3073 train_df\u306b\u3064\u3044\u3066\u3001\u4e0a\u306e\u51fa\u529b\u3092\u898b\u3066\u5206\u304b\u308b\u3053\u3068\n- 42,000\u4ef6(\u884c)\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308b\u3002\n- 785 \u5217\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308b\u3002\n    - \u6700\u521d\u306e1\u5217\u76ee\u306f\u30e9\u30d9\u30eb\n        - \u30e9\u30d9\u30eb\u3068\u3044\u3046\u306e\u306f\u3001\u305d\u306e\u753b\u50cf\u304c\u4f55\u306e\u6570\u5b57\u3067\u3042\u308b\u304b\u3002\u76ee\u7684\u5909\u6570\u3002\n    - \u6b8b\u308a784\u5217\u5206\u306e\u30c7\u30fc\u30bf\u306f\u3001\u753b\u50cf\u306e\u5404\u753b\u7d20(pixel)\u306b\u76f8\u5f53\n        - 784 = 28 * 28\n- \u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u5404\u756a\u5730\u306e\u30c7\u30fc\u30bf\u306fint\u578b","eeefb8c8":"- \u3061\u306a\u307f\u306b\u3053\u308c\u306fseaborn\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3048\u3070\u4e00\u767a\u3067\u63cf\u3051\u3066\u3057\u307e\u3044\u307e\u3059\u3002","c487c8ca":"## 3.2.3 \u624b\u66f8\u304d\u6587\u5b57\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u8868\u793a\n\n- \u6700\u521d\u306en\u3060\u3051\u5909\u3048\u308c\u3070\u8868\u793a\u6570\u304c\u5909\u308f\u308a\u307e\u3059\u3002","5e2b678e":"# MNIST - Data Check & Visualization (no submission)\n\n- \u9806\u756a\u306b\u898b\u3066\u3044\u3051\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\n- \u2193\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u633f\u5165\u3055\u308c\u308b\u30b3\u30fc\u30c9","0c2e3270":"### 3.2.2 \u5404\u30e9\u30d9\u30eb\u3054\u3068\u306e\u30c7\u30fc\u30bf\u91cf\n\n- \u3064\u3044\u3067\u3067\u3059\u304c\u3001\u5404\u30e9\u30d9\u30eb\u306e\u6570\u5b57\u3054\u3068\u306b\u3069\u308c\u3060\u3051\u30c7\u30fc\u30bf\u304c\u3042\u308b\u306e\u304b\u53ef\u8996\u5316\u3057\u3066\u307f\u307e\u3059\u3002","5137e87c":"# 1.\u307e\u305a\u306f\u7528\u610f\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u78ba\u8a8d\n\n- \u53f3(\u2192)\u306eData\u3063\u3066\u3068\u3053\u308d\u306b\u3082\u8868\u793a\u3055\u308c\u3066\u3044\u308b\n- Data - input - Digit Recognizer\n    - sample_submission.csv\n    - test.csv\n    - train.csv\n\n\n- \u5404\u30d5\u30a1\u30a4\u30eb\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u4e0b\u306b\u60c5\u5831\u8868\u793a\u3002\u76f8\u5bfe\u30d1\u30b9\u3082\u8868\u793a\u3055\u308c\u308b\u3002\n    - '..\/input\/digit-recognizer\/sample_submission.csv' \u306a\u3069\n\n\n- output\/kaggle\/working\/\u306f\u307e\u3060\u7a7a\u306a\u306f\u305a\u3002\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3059\u308b\u3068\u3053\u3053\u306b\u8868\u793a\u3055\u308c\u308b\u3002\u3053\u3053\u306b\u3042\u308b\u3082\u306e\u306f\u63d0\u51fa\u3067\u304d\u308b\u3002\u3053\u3053\u306bxxx_submission.csv\u306a\u3069\u3092\u51fa\u529b\u3057\u3066\u3001\u63d0\u51fa\u3059\u308b\u3002","6707e3f5":"### 1.3.1 sample_submission.csv\u306b\u3064\u3044\u3066\u5206\u304b\u308b\u3053\u3068\n- test\u3068\u540c\u3058\u300128,000\u4ef6\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308b\n- \u5217\u306f\u3001ImageID\u3068Label\u3060\u3051\n- \u5404\u8981\u7d20\u306e\u30c7\u30fc\u30bf\u306fint\u578b","e113105e":"## 3.2 \u5404\u6570\u5b57\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4e26\u3079\u3066\u8868\u793a\n### 3.2.1 \u30e9\u30d9\u30eb\u306e\u6570\u5b57\u6bce\u306b\u30c7\u30fc\u30bf\u3092\u5206\u3051\u308b\n\n- \u307e\u305a\u306f\u30e9\u30d9\u30eb0\u306e\u30c7\u30fc\u30bf\u3092\u96c6\u3081\u3066\u307f\u307e\u3059","26a5d906":"### 1.2.1 test.csv \u304a\u3088\u3073 test_df\u306b\u3064\u3044\u3066\u3001\u4e0a\u306e\u51fa\u529b\u3092\u898b\u3066\u5206\u304b\u308b\u3053\u3068\n- 28,000\u4ef6(\u884c)\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308b\u3002\n- 784 \u5217\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308b\u3002\n    - train.csv\u3068\u306e\u9055\u3044\u306f\u3001label(\u76ee\u7684\u5909\u6570)\u304c\u3042\u308b\u304b\u3069\u3046\u304b\n- \u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u5404\u756a\u5730\u306e\u30c7\u30fc\u30bf\u306fint\u578b\n","6b1412b8":"## 3.1 \u4e00\u3064\u306e\u753b\u50cf\u306e\u8868\u793a\n### 3.1.1 Import\n\n- torch \u3068\u3044\u3046\u306e\u306fPyTorch\u306e\u3053\u3068\u3067\u3001\u3053\u308c\u306f\u6a5f\u68b0\u5b66\u7fd2\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u753b\u50cf\u8868\u793a\u306e\u9053\u5177\u3068\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002","398f891b":"- make_grid(torch.Tensor(all_images).unsqueeze(1), nrow=10)\n- \u3053\u3053\u306f\u5206\u304b\u3089\u306a\u304f\u3066\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001Tensor\u3068\u3044\u3046\u306e\u306ftorch\u7248array\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u30014\u6b21\u5143\u914d\u5217\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n- all_images\u306f3\u6b21\u5143\u914d\u5217\u306a\u306e\u3067\u3059\u304c\u30014\u6b21\u5143\u914d\u5217\u306b\u3059\u308b\u969b\u306b\u30014\u3064\u306e\u3046\u3061\u3069\u3053\u304b\u3092\u8981\u7d201\u3068\u898b\u306a\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u3092\u5b9f\u73fe\u3059\u308b\u306e\u304cunsqueeze(n)\u306e\u90e8\u5206\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u5b9f\u884c\u7d50\u679c\u3092\u898b\u308c\u3070\u5206\u304b\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\n- transpose\u306e\u90e8\u5206\u306f\u3001plt.imshow\u306e\u5f15\u6570\u306e\u4e26\u3073\u3068\u3001numpy_array\u306e\u30c7\u30fc\u30bf\u306e\u4e26\u3073\u304c\u9055\u3046\u306e\u3067\u5408\u308f\u305b\u3066\u3044\u307e\u3059\u3002\n- transpose(1,2,0)\n    - (RGB,n, m) -> (n, m, RGB) ","df2e9013":"## 1.3 sample_submission.csv\n- \u63d0\u51fa\u30d5\u30a1\u30a4\u30eb\u306e\u5f62\u5f0f\u3092\u78ba\u8a8d\u3059\u308b\u3060\u3051\u3067\u3001\u4f7f\u3044\u307e\u305b\u3093\u304c\u3001\u4e00\u5fdc\u3002\n\n","fdcb4b9d":"# 2. \u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u306e\u6574\u7406\n- n_train : train\u30c7\u30fc\u30bf\u306e\u30b5\u30f3\u30d7\u30eb\u6570\n- n_pixels : train\u30c7\u30fc\u30bf\u306e\u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u6570(test\u30c7\u30fc\u30bf\u3067\u3082\u540c\u3058)\n- n_class : label\u306e\u7a2e\u985e\u306e\u6570(0\uff5e9\u306e\u6570\u5b57\u306e\u5224\u5225\u306a\u306e\u3067\u300110\u7a2e\u985e\u306b\u306a\u308b\u3002\n- train_df_p : train\u30c7\u30fc\u30bf\u306e\u753b\u50cf\u306epixel\u90e8\u5206\n- train_df_l : train\u30c7\u30fc\u30bf\u306e\u30e9\u30d9\u30eb\u90e8\u5206 ","918899b4":"> ## 1.1 train.csv \u306e\u78ba\u8a8d\n\n- train_df \u3068\u3044\u3046\u5909\u6570\u306b\u4ee3\u5165","73ed102b":"###  3.1.2 \u6307\u5b9a\u3057\u305f\u884c\u756a\u53f7\u306e\u30c7\u30fc\u30bf\u3092\u753b\u50cf\u3068\u3057\u3066\u8868\u793a","d40a1151":"- \u5404\u6570\u5b57\u306b\u3064\u3044\u3066\u305d\u308c\u305e\u308c\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\u5185\u5305\u8868\u8a18\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002"}}