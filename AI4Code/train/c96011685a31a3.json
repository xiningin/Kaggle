{"cell_type":{"cde9c5e1":"code","179d80f7":"code","eeaaa024":"code","9bd6c010":"code","3f81a07f":"code","14b28703":"code","9e2c07ec":"code","e46b6db0":"code","18528e5b":"code","0ca4e422":"code","f0ea5c69":"code","2955184c":"code","42a87456":"code","0df084ba":"code","89b55f8b":"code","ab04fe15":"code","efae9e65":"code","9eb77a95":"code","b302863c":"code","9649ff1c":"code","770ec1de":"code","286040fd":"code","334d8a2c":"code","67df5d2e":"code","82516284":"code","e052e56d":"code","f1d26ed5":"code","e85175bc":"code","9e40e999":"code","e7fd624a":"code","bcd05330":"code","4771d99c":"code","68efec6b":"code","fc7e9e18":"code","ffc1e0c5":"code","d2e5cefb":"code","15ce43e0":"code","7924f1c6":"code","cb06776e":"code","29c4ede7":"code","4cd4e53b":"code","9f7fba0b":"code","7dcb4c4a":"code","9cbf2d8f":"code","8f51d2d5":"code","fc41ce4b":"code","6c81321a":"code","fb11e089":"code","0cd7cb74":"markdown","05f7a6b9":"markdown"},"source":{"cde9c5e1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","179d80f7":"train = pd.read_csv(\"\/kaggle\/input\/cat-in-the-dat\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/cat-in-the-dat\/test.csv\")\nsubmission = pd.read_csv(\"\/kaggle\/input\/cat-in-the-dat\/sample_submission.csv\")\n","eeaaa024":"labels = train['target'].values\ntrain_id = train.pop(\"id\")\ntest_id = test.pop(\"id\")","9bd6c010":"print(\"Train Shape:\",train.shape)\nprint(\"\\n Column in train:\",train.columns)\nprint(\"\\n Test Shape:\",test.shape)\nprint(\"\\n Column in test:\",test.columns)\nprint(\"\\n Submission shape:\",submission.shape)\nprint(\"\\n Column in submission:\",submission.columns)","3f81a07f":"type(labels)","14b28703":"data = pd.concat([train.drop('target',axis=1), test])\ntotaal=train.append(test)","9e2c07ec":"data.shape","e46b6db0":"data.columns","18528e5b":"totaal.columns","0ca4e422":"totaal.shape","f0ea5c69":"totaal[499999:]","2955184c":"train.shape,test.shape,data.shape,totaal.shape","42a87456":"data.isna().sum()","0df084ba":"data = data.drop(columns=['ord_3', 'ord_4','ord_5'])","89b55f8b":"data['bin_3'].unique(),data['bin_4'].unique()","ab04fe15":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndata['bin_3']=le.fit_transform(data['bin_3'].values)\ndata['bin_4']=le.fit_transform(data['bin_4'].values)","efae9e65":"data['bin_3'].unique(),data['bin_4'].unique()","9eb77a95":"data = data.drop(columns=['nom_5', 'nom_6','nom_7','nom_8','nom_9'])","b302863c":"print(data['nom_0'].unique())\nprint(data['nom_1'].unique())\nprint(data['nom_2'].unique())\nprint(data['nom_3'].unique())\nprint(data['nom_4'].unique())","9649ff1c":"data.columns","770ec1de":"data = pd.get_dummies(data=data,columns=['nom_0','nom_1','nom_2','nom_3','nom_4','day','month'], drop_first=True)","286040fd":"data.shape","334d8a2c":"print(data['ord_0'].unique())\nprint(data['ord_1'].unique())\nprint(data['ord_2'].unique())","67df5d2e":"level_mapping = {\n    'Novice':0,\n    'Contributor':1,\n    'Expert':2,\n    'Master':3,\n    'Grandmaster':4\n}","82516284":"data['ord_1'] = data['ord_1'].map(level_mapping)","e052e56d":"data['ord_1'].unique()","f1d26ed5":"train['ord_2'].unique()","e85175bc":"hot_mapping = {\n    'Freezing':0,\n    'Cold':1,\n    'Warm':2,\n    'Hot':3,\n    'Boiling Hot':4,\n    'Lava Hot':5\n}","9e40e999":"data['ord_2'] = data['ord_2'].map(hot_mapping)","e7fd624a":"data.ord_2.unique()","bcd05330":"print(list(data.columns))","4771d99c":"data.shape","68efec6b":"trainX = data.iloc[:300000, :]\n","fc7e9e18":"testX = data.iloc[300000:, :]","ffc1e0c5":"trainX.shape,testX.shape","d2e5cefb":"trainY = pd.DataFrame()","15ce43e0":"trainY['target'] =labels","7924f1c6":"trainY.shape","cb06776e":"trainY.head()","29c4ede7":"trainY.target.unique()","4cd4e53b":"from sklearn.linear_model import LogisticRegression","9f7fba0b":"# create logistic regression object \nreg = LogisticRegression() \n   \n# train the model using the training sets \nreg.fit(trainX, trainY) \n  \n# making predictions on the testing set \ny_pred = reg.predict(testX)","7dcb4c4a":"y_pred.shape","9cbf2d8f":"y_pred","8f51d2d5":"submissionlr = pd.DataFrame()","fc41ce4b":"submissionlr[\"id\"] = test_id\nsubmissionlr[\"target\"] = y_pred","6c81321a":"submissionlr.head()","fb11e089":"submissionlr.to_csv(\"submissionlr.csv\", index=False)","0cd7cb74":"1. Novice\n2. Contributor\n3. Expert\n4. Master\n5. Grandmaster","05f7a6b9":"### **Preprocessing**"}}