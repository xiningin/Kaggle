{"cell_type":{"9ca979a9":"code","aaf36663":"code","5dd55059":"code","06ad7ad3":"code","fa422737":"code","06e5e32a":"code","29f10140":"code","414b1814":"code","70cd855f":"code","f0b535ae":"code","494867aa":"markdown","332f6a55":"markdown","4804c2db":"markdown","2e845e1b":"markdown","398d9506":"markdown","05ceaaaf":"markdown","f8bbc88c":"markdown","3fc18599":"markdown"},"source":{"9ca979a9":"import numpy as np\nimport os\n\n%matplotlib inline\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nmpl.rc('axes', labelsize=14)\nmpl.rc('xtick', labelsize=12)\nmpl.rc('ytick', labelsize=12)\n\nfrom sklearn.tree import DecisionTreeRegressor","aaf36663":"ROOT_DIR = \".\"\nCHAPTER_ID = \"decision_trees\"\nIMAGES_PATH = os.path.join(ROOT_DIR, \"images\", CHAPTER_ID)\nos.makedirs(IMAGES_PATH, exist_ok=True)\n\ndef save_fig(fig_id, tight_layout=True, fig_extension=\"png\", resolution=300):\n    path = os.path.join(IMAGES_PATH, fig_id + \".\" + fig_extension)\n    print(\"Saving figure\", fig_id)\n    if tight_layout:\n        plt.tight_layout()\n    plt.savefig(path, format=fig_extension, dpi=resolution)","5dd55059":"def plot_regression_predictions(tree_reg, X, y, axes=[0, 1, -0.2, 1], ylabel=\"$y$\"):\n    x1 = np.linspace(axes[0], axes[1], 500).reshape(-1, 1)\n    y_pred = tree_reg.predict(x1)\n    plt.axis(axes)\n    plt.xlabel(\"$x_1$\", fontsize=18)\n    if ylabel:\n        plt.ylabel(ylabel, fontsize=18, rotation=0)\n    plt.plot(X, y, \"b.\")\n    plt.plot(x1, y_pred, \"r.-\", linewidth=2, label=r\"$\\hat{y}$\")","06ad7ad3":"np.random.seed(42)\nm = 200\nX = np.random.rand(m, 1)\ny = 4 * (X - 0.5) ** 2\ny = y + np.random.randn(m, 1) \/ 10","fa422737":"from sklearn.tree import DecisionTreeRegressor\n\ntree_reg = DecisionTreeRegressor(max_depth=2, random_state=42)\ntree_reg.fit(X, y)","06e5e32a":"tree_reg1 = DecisionTreeRegressor(random_state=42, max_depth=2)\ntree_reg2 = DecisionTreeRegressor(random_state=42, max_depth=3)\ntree_reg3 = DecisionTreeRegressor(random_state=42, max_depth=4)\ntree_reg1.fit(X, y)\ntree_reg2.fit(X, y)\ntree_reg3.fit(X, y)","29f10140":"fig, axes = plt.subplots(ncols=2, figsize=(10, 4), sharey=True)\nplt.sca(axes[0])\nplot_regression_predictions(tree_reg1, X, y)\nfor split, style in ((0.1973, \"k-\"), (0.0917, \"k--\"), (0.7718, \"k--\")):\n    plt.plot([split, split], [-0.2, 1], style, linewidth=2)\nplt.text(0.21, 0.65, \"Depth=0\", fontsize=15)\nplt.text(0.01, 0.2, \"Depth=1\", fontsize=13)\nplt.text(0.65, 0.8, \"Depth=1\", fontsize=13)\nplt.legend(loc=\"upper center\", fontsize=18)\nplt.title(\"max_depth=2\", fontsize=14)\n\nplt.sca(axes[1])\nplot_regression_predictions(tree_reg2, X, y, ylabel=None)\nfor split, style in ((0.1973, \"k-\"), (0.0917, \"k--\"), (0.7718, \"k--\")):\n    plt.plot([split, split], [-0.2, 1], style, linewidth=2)\nfor split in (0.0458, 0.1298, 0.2873, 0.9040):\n    plt.plot([split, split], [-0.2, 1], \"k:\", linewidth=1)\nplt.text(0.3, 0.5, \"Depth=2\", fontsize=13)\nplt.title(\"max_depth=3\", fontsize=14)\n\n\nsave_fig(\"tree_regression_plot_depth_2_3\")\nplt.show()","414b1814":"fig, axes = plt.subplots(ncols=3, figsize=(10, 4), sharey=True)\nplt.sca(axes[0])\nplot_regression_predictions(tree_reg1, X, y)\nfor split, style in ((0.1973, \"k-\"), (0.0917, \"k--\"), (0.7718, \"k--\")):\n    plt.plot([split, split], [-0.2, 1], style, linewidth=2)\nplt.text(0.21, 0.65, \"Depth=0\", fontsize=15)\nplt.text(0.01, 0.2, \"Depth=1\", fontsize=13)\nplt.text(0.65, 0.8, \"Depth=1\", fontsize=13)\nplt.legend(loc=\"upper center\", fontsize=18)\nplt.title(\"max_depth=2\", fontsize=14)\n\nplt.sca(axes[1])\nplot_regression_predictions(tree_reg2, X, y, ylabel=None)\nfor split, style in ((0.1973, \"k-\"), (0.0917, \"k--\"), (0.7718, \"k--\")):\n    plt.plot([split, split], [-0.2, 1], style, linewidth=2)\nfor split in (0.0458, 0.1298, 0.2873, 0.9040):\n    plt.plot([split, split], [-0.2, 1], \"k:\", linewidth=1)\nplt.text(0.3, 0.5, \"Depth=2\", fontsize=13)\nplt.title(\"max_depth=3\", fontsize=14)\n\nplt.sca(axes[2])\nplot_regression_predictions(tree_reg3, X, y, ylabel=None)\nfor split, style in ((0.1973, \"k-\"), (0.0917, \"k--\"), (0.7718, \"k--\")):\n    plt.plot([split, split], [-0.2, 1], style, linewidth=2)\nfor split in (0.0458, 0.1298, 0.2873, 0.9040):\n    plt.plot([split, split], [-0.2, 1], \"k:\", linewidth=1)\nplt.text(0.3, 0.5, \"Depth=3\", fontsize=13)\nplt.title(\"max_depth=4\", fontsize=14)\n\nsave_fig(\"tree_regression_plot_depth_2_3_4\")\nplt.show()","70cd855f":"tree_reg4 = DecisionTreeRegressor(random_state=42, max_depth=5)\ntree_reg4.fit(X, y)\n\nplot_regression_predictions(tree_reg4, X, y, ylabel=None)\nfor split, style in ((0.1973, \"k-\"), (0.0917, \"k--\"), (0.7718, \"k--\")):\n    plt.plot([split, split], [-0.2, 1], style, linewidth=2)\nfor split in (0.0458, 0.1298, 0.2873, 0.9040):\n    plt.plot([split, split], [-0.2, 1], \"k:\", linewidth=1)\n# plt.text(0.3, 0.5, \"Depth=3\", fontsize=13)\nplt.title(\"max_depth=5\", fontsize=14)\n\nsave_fig(\"tree_regression_plot_depth5\")\nplt.show()","f0b535ae":"tree_reg5 = DecisionTreeRegressor(random_state=42, max_depth=100)\ntree_reg5.fit(X, y)\n\n\nplt.figure(figsize=(20, 12))\nplot_regression_predictions(tree_reg5, X, y, ylabel=None)\n\nfor split, style in ((0.1973, \"k-\"), (0.0917, \"k--\"), (0.7718, \"k--\")):\n    plt.plot([split, split], [-0.2, 1], style, linewidth=2)\nfor split in (0.0458, 0.1298, 0.2873, 0.9040):\n    plt.plot([split, split], [-0.2, 1], \"k:\", linewidth=1)\n# plt.text(0.3, 0.5, \"Depth=3\", fontsize=13)\nplt.title(\"max_depth=100\", fontsize=14)\n\nsave_fig(\"tree_regression_plot_depth100\")\nplt.show()","494867aa":"# max depth = 2,3","332f6a55":"# max_depth = 100","4804c2db":"# common funtions","2e845e1b":"# max depth = 5","398d9506":"# import libraries","05ceaaaf":"# default model","f8bbc88c":"# max depth = 2,3,4","3fc18599":"# decision models "}}