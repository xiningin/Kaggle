{"cell_type":{"4ef881dd":"code","2b030394":"code","435e1286":"code","15395c6c":"code","02254ef7":"code","f5280b41":"code","86df3d97":"code","ec6c4737":"code","6462aa0f":"code","b4baa26f":"code","0965c198":"code","082689de":"code","e73d1ea6":"code","c9c823b7":"code","e197c1db":"code","19165caf":"code","68e530f7":"code","4aaa4507":"code","2b6e772d":"code","3b5b6397":"code","6e93a79f":"code","89c1872d":"markdown","07b806e1":"markdown"},"source":{"4ef881dd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2b030394":"data=pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')\ndata.columns","435e1286":"data.head(5)","15395c6c":"data.describe()","02254ef7":"data.info()","f5280b41":"print(data['country'].value_counts(dropna=False))","86df3d97":"#data.boxplot(column='type',by ='release_year')","ec6c4737":"data.boxplot(column='show_id',by = 'release_year')\n","6462aa0f":"#TIDY DATA\ndata1=data.head()\ndata1","b4baa26f":"meltfonk=pd.melt(frame=data1,id_vars='title',value_vars=['country','release_year'])\nmeltfonk","0965c198":"#PIVOTING DATA\n\nmeltfonk.pivot(index='title',columns='variable',values='value')\n","082689de":"#CONCATENATING DATA\n\nD1=data.head(3)\nD2=data.tail(3)\n\nConcat_data=pd.concat([D1,D2],axis=0,ignore_index=True)\nConcat_data","e73d1ea6":"data.dtypes","c9c823b7":"data['rating']=data['rating'].astype('category')\n#------\ndata.dtypes","e197c1db":"data['rating']=data['rating'].astype('object')\ndata.dtypes","19165caf":"#MISSING DATA and TESTING WITH ASSERT\n\ndata['director'].value_counts(dropna=False)","68e530f7":"#Drop nan values\n\ndata=data1\n\ndata1['director'].dropna(inplace=True)","4aaa4507":"data['title'].value_counts(dropna=True)","2b6e772d":"assert data['title'].notnull().all()","3b5b6397":"data['director'].fillna('empty',inplace=True)","6e93a79f":"data['director'].head()","89c1872d":"Boxplot takes 2 parameters but those should have type int","07b806e1":"There are 476 NaN value\n\n"}}