{"cell_type":{"3b44b6e1":"code","5310653e":"code","b0afaf78":"code","197de41d":"code","aa31a356":"code","a176cb13":"code","b63bac92":"code","f3997c91":"code","1e7f86d3":"code","9cce78a4":"code","7cd9ac50":"code","fb20ce11":"code","d1fb9cee":"code","5d5710d9":"code","9b102a6e":"code","9f0e6d6f":"code","3adaa50a":"code","c471fc36":"markdown","15f063d3":"markdown","89190a08":"markdown","37e27dc2":"markdown","7c8b52ce":"markdown","b2530c8c":"markdown","8dcc4e73":"markdown","56af5b3d":"markdown","59a6fbb3":"markdown","5460c241":"markdown","f4d1a3b1":"markdown","5bd344bb":"markdown","054b6ab2":"markdown","b1a497a2":"markdown","c063b4f5":"markdown","f859c690":"markdown","8fc9b94d":"markdown"},"source":{"3b44b6e1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","5310653e":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport datetime\n","b0afaf78":"from kaggle.competitions import twosigmanews\nenv = twosigmanews.make_env()\nprint('done!')","197de41d":"(market_train_df, news_train_df) = env.get_training_data()","aa31a356":"market_train_df.head()","a176cb13":"market_train_df.isnull().sum()","b63bac92":"market_train_df['returnsClosePrevMktres1'] = market_train_df['returnsClosePrevMktres1'].fillna(market_train_df['returnsClosePrevMktres1'].mean())\nmarket_train_df['returnsOpenPrevMktres1'] = market_train_df['returnsOpenPrevMktres1'].fillna(market_train_df['returnsOpenPrevMktres1'].mean())\nmarket_train_df['returnsClosePrevMktres10'] = market_train_df['returnsClosePrevMktres10'].fillna(market_train_df['returnsClosePrevMktres10'].mean())\nmarket_train_df['returnsOpenPrevMktres10'] = market_train_df['returnsOpenPrevMktres10'].fillna(market_train_df['returnsOpenPrevMktres10'].mean())\nmarket_train_df.isnull().sum()","f3997c91":"print(market_train_df['time'].describe())","1e7f86d3":"print(market_train_df['assetCode'].describe())","9cce78a4":"print(2498 * 3780)","7cd9ac50":"data = pd.DataFrame()\nmarket_train_df['Fluctuation'] = market_train_df['open'] - market_train_df['close']\nfor asset in np.random.choice(market_train_df['assetName'].unique(), 10):\n    asset_df = market_train_df[(market_train_df['assetName'] == asset)]\n    data = data.append(asset_df)\n   \nfig, ax = plt.subplots(figsize=(15, 10))\nlineplot = sns.lineplot(x=\"time\", y=\"close\", data=data,hue='assetCode',ax=ax)\n","fb20ce11":"fig, ax = plt.subplots(figsize=(15, 10))\nlineplot = sns.lineplot(x=\"time\", y=\"Fluctuation\", data=data,hue='assetCode',ax=ax)","d1fb9cee":"sns.pairplot(data.loc[:,['Fluctuation','volume','assetCode']],hue='assetCode', height=3,aspect=3)","5d5710d9":"sns.pairplot(data.loc[:,['Fluctuation',\n                         'returnsClosePrevRaw1',\n                         'returnsOpenPrevRaw1',\n                         'assetCode']],hue='assetCode', height=3,aspect=3)","9b102a6e":"sns.pairplot(data.loc[:,['Fluctuation',\n                         'returnsClosePrevMktres1',\n                         'returnsOpenPrevMktres1',\n                         'assetCode']],hue='assetCode', height=3,aspect=3)","9f0e6d6f":"sns.pairplot(data.loc[:,['Fluctuation',\n                         'returnsClosePrevRaw10',\n                         'returnsOpenPrevRaw10',\n                         'assetCode']],hue='assetCode', height=3,aspect=3)","3adaa50a":"sns.pairplot(data.loc[:,['Fluctuation',\n                         'returnsOpenNextMktres10',\n                         'assetCode']],hue='assetCode', height=3,aspect=3)","c471fc36":"# 2.Analysis","15f063d3":"I randomly extracted 10 kinds of assets and plotted.  \nSome data only exist for a limited period of time.","89190a08":"There are some missing values.  \nMissing values are filled with average value.","37e27dc2":"## 1-2.NA check","7c8b52ce":"# 1.Preparation","b2530c8c":"I made a pair plot of volume and fluctuation, but nothing is particularly relevant.","8dcc4e73":"## 1-1.Data Overview","56af5b3d":"The difference from open to close was plotted as Fluctuation.  \nRegularity can not be observed in fluctuation, it looks like noise.","59a6fbb3":"# Overview\nThis Kernel is my first EDA.   \nIt's about marketdata_sample.csv only.  \nBecause I don't know how to analyze text data like news_sample.csv.  \nI'll post about analysis news_sample.csv after studying.  ","5460c241":"\nData do not exist in all time zones.","f4d1a3b1":"## 2-3.Fluctuation and Volume","5bd344bb":"## Notebook Outline\n\n1.  [**Preparation**](#1.Preparation)   \n    1-1 [**Data Overview**](#1-1.Data-Overview)  \n    1-2 [**NA check**](#1-2.NA-check)  \n2. [**Analysis**](#2.Analysis)  \n    2-1 [**About 10 asset samples transition**](#2-1.About-10-asset-samples-transition)  \n    2-2 [**Fluctuation**](#2-2.Fluctuation)  \n    2-3 [**Fluctuation and Volume**](#2-3.Fluctuation-and-Volume)  \n    2-4 [**Fluctuation and other feature**](#2-4.Fluctuation-and-other-feature)  \n","054b6ab2":"It seems that \u2019returnsClosePrevRaw1\u2019 and \u2019returnsClosePrevMktres1\u2019 have a slightly negative correlation with Fluctuation.","b1a497a2":"## 2-1.About 10 asset samples transition","c063b4f5":"There are 2498 time periods in total and 3780 kinds of asset codes.  ","f859c690":"# 2-2.Fluctuation","8fc9b94d":"## 2-4.Fluctuation and other feature"}}