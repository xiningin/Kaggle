{"cell_type":{"0baac829":"code","e23f728e":"code","e7d44554":"code","72bb32f7":"code","7a2db82d":"code","b413b9ff":"code","b1776a0c":"code","2a315775":"code","e37dd09b":"code","22443010":"code","9796b91c":"code","94430fa8":"code","70f3f11f":"code","db0479b2":"code","c2a27abe":"code","e56675ef":"code","62ae9fec":"code","62f756d8":"code","2d34918b":"code","3ae50d4b":"code","2b40554d":"code","5a0958dc":"code","c5321ed7":"code","aa4924a5":"code","de82886e":"code","2ca4e669":"code","6a0bbf31":"code","461a05a6":"code","cecb84fb":"code","588dc8fe":"code","ec41af53":"code","ff0409b6":"code","e3a69716":"code","82130bb5":"markdown","f9612a96":"markdown","c2bb9ad9":"markdown","9203080e":"markdown","24a7c55e":"markdown","44700ec8":"markdown","c5588212":"markdown","d9df149a":"markdown","08fa9c01":"markdown","69b41340":"markdown"},"source":{"0baac829":"import pandas as pd\nimport numpy as np\nimport warnings\nwarnings.filterwarnings('ignore')","e23f728e":"df = pd.read_csv('..\/input\/eergy-efficiency-dataset\/ENB2012_data.csv')","e7d44554":"columns = ['relative_compactness','surface_area','wall_area','roof_area','overall_height','orientation','glazing_area','glazing_area_distribution','heating_load','cooling_load']\ndf.columns = columns","72bb32f7":"df.head()","7a2db82d":"df.info()","b413b9ff":"df.describe()","b1776a0c":"df.isnull().sum()","2a315775":"import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set_style('darkgrid', {'legend.frameon':True})","e37dd09b":"plt.title('Relative Compactness Distribution')\nsns.distplot(df['relative_compactness'],hist=False)\nplt.show()","22443010":"plt.title('surface_area Distribution')\nsns.distplot(df['surface_area'],hist=False)\nplt.show()","9796b91c":"plt.title('wall_area Distribution')\nsns.distplot(df['wall_area'],hist=False)\nplt.show()","94430fa8":"plt.title('roof_area Distribution')\nsns.distplot(df['roof_area'],hist=False)\nplt.show()","70f3f11f":"plt.title('overall_height Distribution')\nsns.distplot(df['overall_height'],hist=False)\nplt.show()","db0479b2":"plt.title('orientation Distribution')\nsns.distplot(df['orientation'],hist=False)\nplt.show()","c2a27abe":"plt.title('glazing_area Distribution')\nsns.distplot(df['glazing_area'],hist=False)\nplt.show()","e56675ef":"plt.title('glazing_area_distribution Distribution')\nsns.distplot(df['glazing_area_distribution'],hist=False)\nplt.show()","62ae9fec":"plt.title('heating_load Distribution')\nsns.distplot(df['heating_load'],hist=False)\nplt.show()","62f756d8":"plt.title('cooling_load Distribution')\nsns.distplot(df['cooling_load'],hist=False)\nplt.show()","2d34918b":"sns.pairplot(df)","3ae50d4b":"sns.heatmap(df.corr())","2b40554d":"sns.distplot(df['cooling_load'],hist=False)\nsns.distplot(df['heating_load'],hist=False)\nplt.legend()\nplt.show()","5a0958dc":"X = df.drop(['heating_load','cooling_load'],axis=1)\ny1 = df['heating_load']\ny2 = df['cooling_load']","c5321ed7":"from sklearn.preprocessing import StandardScaler,OneHotEncoder\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import r2_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.tree import DecisionTreeRegressor ","aa4924a5":"HEATING_LOAD_MODELS = []\nHEATING_LOAD_SCORES = []","de82886e":"dtr = DecisionTreeRegressor()\nscores = cross_val_score(dtr, X, y1, cv=5)\nprint(np.mean(scores))\nHEATING_LOAD_MODELS.append('Descision Tree')\nHEATING_LOAD_SCORES.append(np.mean(scores))","2ca4e669":"rfr = RandomForestRegressor()\nscores = cross_val_score(rfr, X, y1, cv=5)\nprint(np.mean(scores))\nHEATING_LOAD_MODELS.append('Random Forest')\nHEATING_LOAD_SCORES.append(np.mean(scores))","6a0bbf31":"from sklearn.model_selection import train_test_split\ntrain_X, test_X, train_y, test_y = train_test_split(X, y1,test_size = 0.3, random_state = 123)\nimport xgboost as xg\nxgb_r = xg.XGBRegressor(objective ='reg:squarederror',\n                  n_estimators = 10, seed = 123)\nxgb_r.fit(train_X, train_y)\npred = xgb_r.predict(test_X)\nscores = r2_score(test_y,pred)\nprint(scores)\nHEATING_LOAD_MODELS.append('Xgboost')\nHEATING_LOAD_SCORES.append(scores)","461a05a6":"COOLING_LOAD_MODELS = []\nCOOLING_LOAD_SCORES = []","cecb84fb":"dtr = DecisionTreeRegressor()\nscores = cross_val_score(dtr, X, y2, cv=5)\nprint(np.mean(scores))\nCOOLING_LOAD_MODELS.append('Descision Tree')\nCOOLING_LOAD_SCORES.append(np.mean(scores))","588dc8fe":"rfr = RandomForestRegressor()\nscores = cross_val_score(rfr, X, y2, cv=5)\nprint(np.mean(scores))\nCOOLING_LOAD_MODELS.append('Random Forest')\nCOOLING_LOAD_SCORES.append(np.mean(scores))","ec41af53":"from sklearn.model_selection import train_test_split\ntrain_X, test_X, train_y, test_y = train_test_split(X, y2,test_size = 0.3, random_state = 123)\nimport xgboost as xg\nxgb_r = xg.XGBRegressor(objective ='reg:squarederror',\n                  n_estimators = 10, seed = 123)\nxgb_r.fit(train_X, train_y)\npred = xgb_r.predict(test_X)\nscores = r2_score(test_y,pred)\nprint(scores)\nCOOLING_LOAD_MODELS.append('Xgboost')\nCOOLING_LOAD_SCORES.append(scores)","ff0409b6":"from tabulate import tabulate\ntable = [['Model','Score']]\nfor i in range(len(HEATING_LOAD_MODELS)):\n    table.append([HEATING_LOAD_MODELS[i],HEATING_LOAD_SCORES[i]])\nprint('HEATING LOAD PREDICTION SCORE')\nprint(tabulate(table,headers='firstrow',tablefmt='fancy_grid'))","e3a69716":"from tabulate import tabulate\ntable = [['Model','Score']]\nfor i in range(len(COOLING_LOAD_MODELS)):\n    table.append([COOLING_LOAD_MODELS[i],COOLING_LOAD_SCORES[i]])\nprint('HEATING LOAD PREDICTION SCORE')\nprint(tabulate(table,headers='firstrow',tablefmt='fancy_grid'))","82130bb5":"# **COLUMNS**","f9612a96":"**COOLING LOAD PREDICTION**","c2bb9ad9":"# **EDA**","9203080e":"**HEATING LOAD PREDICTION**","24a7c55e":"* there are seem to be some feature correlation","44700ec8":"Data Set Information:\n\nWe perform energy analysis using 12 different building shapes simulated in Ecotect. The buildings differ with respect to the glazing area, the glazing area distribution, and the orientation, amongst other parameters","c5588212":"X1 Relative Compactness<BR>\nX2 Surface Area<BR>\nX3 Wall Area<BR>\nX4 Roof Area<BR>\nX5 Overall Height<BR>\nX6 Orientation<BR>\nX7 Glazing Area<BR>\nX8 Glazing Area Distribution<BR>\ny1 Heating Load (target)<BR>\ny2 Cooling Load (target)<BR>","d9df149a":"# **SCORES**","08fa9c01":"* heating load and cooling load are highly correlated","69b41340":"# **MODELLING**"}}