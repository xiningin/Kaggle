{"cell_type":{"6c6cfb10":"code","42fd01d9":"code","bc5132d0":"code","ed4f4d2c":"markdown","3ee70b58":"markdown","740d9399":"markdown"},"source":{"6c6cfb10":"# Install:\n# Kaggle environments.\n!git clone https:\/\/github.com\/Kaggle\/kaggle-environments.git\n!cd kaggle-environments && pip install .\n\n# GFootball environment.\n!apt-get update -y\n!apt-get install -y libsdl2-gfx-dev libsdl2-ttf-dev\n\n# Make sure that the Branch in git clone and in wget call matches !!\n!git clone -b v2.3 https:\/\/github.com\/google-research\/football.git\n!mkdir -p football\/third_party\/gfootball_engine\/lib\n\n!wget https:\/\/storage.googleapis.com\/gfootball\/prebuilt_gameplayfootball_v2.3.so -O football\/third_party\/gfootball_engine\/lib\/prebuilt_gameplayfootball.so\n!cd football && GFOOTBALL_USE_PREBUILT_SO=1 pip3 install .","42fd01d9":"%%writefile submission.py\nfrom kaggle_environments.envs.football.helpers import *\n\n# @human_readable_agent wrapper modifies raw observations \n# provided by the environment:\n# https:\/\/github.com\/google-research\/football\/blob\/master\/gfootball\/doc\/observation.md#raw-observations\n# into a form easier to work with by humans.\n# Following modifications are applied:\n# - Action, PlayerRole and GameMode enums are introduced.\n# - 'sticky_actions' are turned into a set of active actions (Action enum)\n#    see usage example below.\n# - 'game_mode' is turned into GameMode enum.\n# - 'designated' field is removed, as it always equals to 'active'\n#    when a single player is controlled on the team.\n# - 'left_team_roles'\/'right_team_roles' are turned into PlayerRole enums.\n# - Action enum is to be returned by the agent function.\n@human_readable_agent\ndef agent(obs):\n    # Make sure player is running.\n    if Action.Sprint not in obs['sticky_actions']:\n        return Action.Sprint\n    # We always control left team (observations and actions\n    # are mirrored appropriately by the environment).\n    controlled_player_pos = obs['left_team'][obs['active']]\n    # Does the player we control have the ball?\n    if obs['ball_owned_player'] == obs['active'] and obs['ball_owned_team'] == 0:\n        # Shot if we are 'close' to the goal (based on 'x' coordinate).\n        if controlled_player_pos[0] > 0.5:\n            return Action.Shot\n        # pass if not above halfline\n        if controlled_player_pos[0] < -0.1:\n            return Action.ShortPass\n        # dribble just above halfline\n        if controlled_player_pos[0] > 0 and controlled_player_pos[0] < 0.3:\n            return Action.Dribble\n        # Run towards the goal otherwise.\n        return Action.Right\n    else:\n        # Run towards the ball.\n        if obs['ball'][0] > controlled_player_pos[0] + 0.05:\n            return Action.Right\n        if obs['ball'][0] < controlled_player_pos[0] - 0.05:\n            return Action.Left\n        if obs['ball'][1] > controlled_player_pos[1] + 0.05:\n            return Action.Bottom\n        if obs['ball'][1] < controlled_player_pos[1] - 0.05:\n            return Action.Top\n        # Try to take over the ball if close to the ball.\n        return Action.Slide","bc5132d0":"# Set up the Environment.\nfrom kaggle_environments import make\nenv = make(\"football\", configuration={\"save_video\": True, \"scenario_name\": \"11_vs_11_kaggle\", \"running_in_notebook\": True})\noutput = env.run([\"\/kaggle\/working\/submission.py\", \"..\/input\/only-shoot-and-sprint\/submission_onlyshootandsprint.py\"])[-1]\nprint('Left player: reward = %s, status = %s, info = %s' % (output[0]['reward'], output[0]['status'], output[0]['info']))\nprint('Right player: reward = %s, status = %s, info = %s' % (output[1]['reward'], output[1]['status'], output[1]['info']))\nenv.render(mode=\"human\", width=800, height=600)","ed4f4d2c":"# Make your first submission!\n\nThis starter notebook includes sprint, pass and shoot. Feel free to use this to make your first submission.","3ee70b58":"# Install required files","740d9399":"> # Implementing the bot\n\n## Field dimensions\nX coordinates = [-1, 1]\ny coordinates = [-1, 1]"}}