{"cell_type":{"72233b58":"code","a9778d3e":"code","c104719e":"code","feaf006b":"code","400b1cea":"code","31f40f71":"code","af1f1c6c":"code","722960ab":"code","f817f186":"code","ca03b413":"code","8b598938":"code","901211d5":"markdown","ca88361f":"markdown","4c6930c9":"markdown"},"source":{"72233b58":"# Loading the basic libraries\n\nimport os\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Listing files in the input directory.\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","a9778d3e":"# Load plotly related packages\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go","c104719e":"# Read the required dataset\n# I have read the 31st March version of the dataset. Kindly read the latest version \ntestsC = pd.read_csv('\/kaggle\/input\/covid19-tests-conducted-by-country\/Tests_Conducted_31Mar2020.csv')\nprint(testsC.shape)\ntestsC.head()","feaf006b":"# Get basic statistics for all Tests & confirmed cases (Positive)\ntestsC[['Tests', 'Positive', 'Tests\/ million', 'Positive\/ thousands' ]].describe()","400b1cea":"# Create first scatter plot for all countries\ntrace1 = go.Scatter(\n                    x = testsC['Tests\/ million'],\n                    y = testsC['Positive\/ thousands'],\n                    mode = \"markers\",\n                    name = \"Country or Region\",\n                    marker = dict(color = 'rgba(255, 50, 50, 0.8)'),\n                    text= testsC['Country or region'])\n\ndata = [trace1]\nlayout = dict(title = 'Tests to Confirmed Cases per million of population',\n              xaxis= dict(title= 'Tests\/ million',ticklen= 5,zeroline= False),\n              yaxis= dict(title= 'Confirmed Cases\/ million',ticklen= 5,zeroline= False)\n             )\n\nfig = dict(data = data, layout = layout)\niplot(fig)","31f40f71":"USA = testsC[testsC['Country or region'].str.contains('United States')]\nprint(\"Number of cases for United States: \", len(USA))\nItaly = testsC[testsC['Country or region'].str.contains('Italy')]\nprint(\"Number of cases for United States: \", len(Italy))\nChina = testsC[testsC['Country or region'].str.contains('China')]\nprint(\"Number of cases for United States: \", len(China))","af1f1c6c":"dropIndex = list(USA.index)\ndropIndex.extend(list(Italy.index))\ndropIndex.extend(list(China.index))\nprint(len(dropIndex))\nWorld = testsC.drop(dropIndex,axis=0)\nWorld.shape","722960ab":"usa = go.Scatter(\n                    x = USA['Tests\/ million'],\n                    y = USA['Positive\/ thousands'],\n                    mode = \"markers\",\n                    name = \"United States\",\n                    marker = dict(color = 'rgba(255, 50, 50, 0.8)'),\n                    text= USA['Country or region'])\n\nitaly = go.Scatter(\n                    x = Italy['Tests\/ million'],\n                    y = Italy['Positive\/ thousands'],\n                    mode = \"markers\",\n                    marker = dict(color = 'rgba(0, 50, 255, 0.8)'),\n                    name = \"Italy\",\n                    text= Italy['Country or region'])\n\n\nchina = go.Scatter(\n                    x = China['Tests\/ million'],\n                    y = China['Positive\/ thousands'],\n                    mode = \"markers\",\n                    marker = dict(color = 'rgba(0, 0, 0, 0.8)'),\n                    name = \"China\",\n                    text= China['Country or region'])\n\n\nworld = go.Scatter(\n                    x = World['Tests\/ million'],\n                    y = World['Positive\/ thousands'],\n                    mode = \"markers\",\n                    marker = dict(color = 'rgba(150, 120, 50, 0.8)'),\n                    name = \"World\",\n                    text= World['Country or region'])\n\ndata = [usa, italy, china, world]\nlayout = dict(title = 'Tests to Confirmed Cases per million of population',\n              xaxis= dict(title= 'Tests\/ million',ticklen= 25,zeroline= False),\n              yaxis= dict(title= 'Confirmed Cases\/ million',ticklen= 25,zeroline= False)\n             )\n\nfig = dict(data = data, layout = layout)\niplot(fig)","f817f186":"testsC['Tests\/Positive'] = testsC['Tests'] \/ testsC['Positive']\ntestsC.sort_values(by=['Tests\/Positive'], ascending=False, inplace=True)","ca03b413":"import plotly.graph_objs as go\n\ntrace1 = go.Bar(\n                x = testsC['Country or region'],\n                y = testsC['Tests\/Positive'],\n                name = \"Tests per Confirmed Cases(Positive)\",\n                marker = dict(color = 'rgba(255, 174, 255, 0.5)',\n                             line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = testsC['Country or region'])\n\ndata = [trace1]\n\nlayout = go.Layout(barmode = \"group\")\n\nfig = go.Figure(data = data, layout = layout)\niplot(fig)\n","8b598938":"testsC[testsC['Country or region'].str.contains('India')]","901211d5":"We now calculate the number of tests per confirmed cases (positives) for each Country\/Region","ca88361f":"We will now create separate series for the following countries of interest:\n1. United States\n2. Italy\n3. China\n4. Rest of the World","4c6930c9":"Number of cases in the wild will always be higher than the number of cases detected by health officials. \n\nie. (Actual cases > confirmed cases)\n\nAn asymptomatic patient can lead to far wider spread of the disease and eventually lead to a condition known as *community spread*.  \n\nThe only way one can control it is by increasing the number of tests. \n\nCountries which were pro-active in prepaing for the COVID-19 pandemic,were able to control the spread & have a lower mortality rate. Their labs were preparing testing kits as far back as in early Jan [link to news article](https:\/\/www.nytimes.com\/2020\/03\/20\/world\/europe\/coronavirus-testing-world-countries-cities-states.html)\n\nPlease also read Nate Silver's critique on how the [number of case counts is meaningless](https:\/\/fivethirtyeight.com\/features\/coronavirus-case-counts-are-meaningless\/) unless it's correlated with the testing strategy. \n\nIn this notebook, I will illustrate the impact of testing on the total number of cases.\n1. Iceland has a large outlier, having conducted more than 45k+ tests\/ million\n2. Note that Iceland has a population of 3.64 lacs & has conducted 16k+ tests! \n3. Within Italy, the region of Veneto has a higher incidence of tests\/million while the confirmed cases\/million is also lower  \n\nFollowing countries have a high ``Tests\/Positive (Confirmed Cases)``\n\n|Country\/Region | Tests\/Positive |\n| --- | --- |\n|Canada-NW territories | 833 |\n|UAE | 385 |\n|Russia | 292 |\n\n\n+ All Canada territories have high ``Tests\/Positive (Confirmed Cases)`` \n+ For the following countries the ratio is \n\n|Country\/Region| Tests\/Positive |\n| --- | --- |\n|Australia| 53|\n|Singapore| 69|\n|Taiwan| 98|\n|Hong-Kong| 132|  \n\n*Assumptions & Limitations*\n1. Countries have different testing strategies.\n2. Testing strategy is often a function of the\n\n   a. country's preparedness for the disease,\n   \n   b. availability of testing kits and labs and often\n   \n   c. political will!\n   \n3. The data has been collated from multiple sources, hence it's as good as the data collected\n4. Sources of the data points are cited in the [data file](https:\/\/www.kaggle.com\/skylord\/covid19-tests-conducted-by-country)\n5. Highly connected cities\/countries will have a larger incidence of the disease"}}