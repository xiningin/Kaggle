{"cell_type":{"2d4e6f94":"code","da77a95d":"code","2a5f6208":"code","4d3dfc07":"code","3720b67d":"code","4e33a9b9":"code","e3dcfe6d":"code","b22657ac":"code","78990ded":"code","96a933bb":"code","3e2a0491":"code","f28e007c":"code","3723d230":"code","7e359401":"code","610ee75f":"code","f6084ecf":"code","423533f1":"code","7c5ee7e6":"code","6c3ff3ad":"code","c421a2b3":"code","55cb08c1":"code","dcb38e5b":"code","3c6de3cd":"code","39ee44c7":"code","cc79fd3a":"code","6c1e3442":"code","45ee0558":"code","7d938ffd":"code","f5472292":"code","fd265dbf":"code","022d53ad":"code","87c878eb":"code","cd79cb1c":"code","08b21c4a":"code","2e1464f3":"code","1efc84cb":"code","c0264a7a":"code","6602a9af":"code","5235fbac":"code","010e5215":"code","5d1345ef":"code","9a54d45a":"code","c396c1cd":"code","53c664d3":"code","562e3e99":"code","26911eaf":"code","d13429be":"markdown","ac905fa8":"markdown","54f68eb7":"markdown"},"source":{"2d4e6f94":"import numpy as np \nimport pandas as pd \nimport os\nimport os\nimport zipfile\nimport pandas as pd\nimport numpy as np\nimport csv\nimport tensorflow as tf\nfrom tensorflow.keras import Model\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.optimizers import RMSprop\nfrom tensorflow.keras.applications.inception_v3 import InceptionV3\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport cv2\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimport shutil","da77a95d":"a=[]\nb=[]\nwith open('..\/input\/retinal-disease-classification\/Training_Set\/Training_Set\/RFMiD_Training_Labels.csv','r') as F:\n  reader=csv.reader(F)\n  for row in reader:\n      if(row[1]=='1'):\n        a.append(row[0]+'.png')\n      if(row[1]=='0'):\n        b.append(row[0]+'.png')\nF.close() \nos.mkdir('.\/Training')","2a5f6208":"parent_dir=\".\/Training\"\ndirectory1 = \"Abnormal\" \ndirectory2 = \"Normal\"\npath1 = os.path.join(parent_dir, directory1)\npath2 = os.path.join(parent_dir, directory2)\nos.mkdir(path1)\nos.mkdir(path2)","4d3dfc07":"save_path = '.\/Training\/Abnormal'\nfor filename in a:\n  shutil.copy('..\/input\/retinal-disease-classification\/Training_Set\/Training_Set\/Training\/'+filename,save_path)\nsave_path = '.\/Training\/Normal'\nfor filename in b:\n  shutil.copy('..\/input\/retinal-disease-classification\/Training_Set\/Training_Set\/Training\/'+filename,save_path)","3720b67d":"a=[]\nb=[]\nwith open('..\/input\/retinal-disease-classification\/Evaluation_Set\/Evaluation_Set\/RFMiD_Validation_Labels.csv','r') as F:\n  reader=csv.reader(F)\n  for row in reader:\n      if(row[1]=='1'):\n        a.append(row[0]+'.png')\n      if(row[1]=='0'):\n        b.append(row[0]+'.png')\nF.close() \nos.mkdir('.\/Validation')","4e33a9b9":"parent_dir=\".\/Validation\"\ndirectory1 = \"Abnormal\" \ndirectory2 = \"Normal\"\npath1 = os.path.join(parent_dir, directory1)\npath2 = os.path.join(parent_dir, directory2)\nos.mkdir(path1)\nos.mkdir(path2)","e3dcfe6d":"save_path = '.\/Validation\/Abnormal'\nfor filename in a:\n  shutil.copy('..\/input\/retinal-disease-classification\/Evaluation_Set\/Evaluation_Set\/Validation\/'+filename,save_path)\nsave_path = '.\/Validation\/Normal'\nfor filename in b:\n  shutil.copy('..\/input\/retinal-disease-classification\/Evaluation_Set\/Evaluation_Set\/Validation\/'+filename,save_path)","b22657ac":"a=[]\nb=[]\nwith open('..\/input\/retinal-disease-classification\/Test_Set\/Test_Set\/RFMiD_Testing_Labels.csv','r') as F:\n  reader=csv.reader(F)\n  for row in reader:\n      if(row[1]=='1'):\n        a.append(row[0]+'.png')\n      if(row[1]=='0'):\n        b.append(row[0]+'.png')\nF.close() \nos.mkdir('.\/Testing')","78990ded":"parent_dir=\".\/Testing\"\ndirectory1 = \"Abnormal\" \ndirectory2 = \"Normal\"\npath1 = os.path.join(parent_dir, directory1)\npath2 = os.path.join(parent_dir, directory2)\nos.mkdir(path1)\nos.mkdir(path2)","96a933bb":"save_path = '.\/Testing\/Abnormal'\nfor filename in a:\n  shutil.copy('..\/input\/retinal-disease-classification\/Test_Set\/Test_Set\/Test\/'+filename,save_path)\nsave_path = '.\/Testing\/Normal'\nfor filename in b:\n  shutil.copy('..\/input\/retinal-disease-classification\/Test_Set\/Test_Set\/Test\/'+filename,save_path)","3e2a0491":"train_abnormal_dir = os.path.join('.\/Training\/Abnormal')\ntrain_normal_dir = os.path.join('.\/Training\/Normal')\ntrain_abnormal_names = os.listdir(train_abnormal_dir)\ntrain_normal_names = os.listdir(train_normal_dir)\nprint('total training images with abnormalities:', len(os.listdir(train_abnormal_dir)))\nprint('total training images of normal eyes:', len(os.listdir(train_normal_dir)))","f28e007c":"validation_abnormal_dir = os.path.join('.\/Validation\/Abnormal')\nvalidation_normal_dir = os.path.join('.\/Validation\/Normal')\nvalidation_abnormal_names = os.listdir(validation_abnormal_dir)\nvalidation_normal_names = os.listdir(validation_normal_dir)\nprint('total validation images with abnormalities:', len(os.listdir(validation_abnormal_dir)))\nprint('total validation images of normal eyes:', len(os.listdir(validation_normal_dir)))","3723d230":"test_abnormal_dir = os.path.join('.\/Testing\/Abnormal')\ntest_normal_dir = os.path.join('.\/Testing\/Normal')\ntest_abnormal_names = os.listdir(test_abnormal_dir)\ntest_normal_names = os.listdir(test_normal_dir)\nprint('total testing images with abnormalities:', len(os.listdir(test_abnormal_dir)))\nprint('total testing images of normal eyes:', len(os.listdir(test_normal_dir)))","7e359401":"train_datagen = ImageDataGenerator(rescale = 1.\/255.,\n                                    rotation_range = 30,\n                                    width_shift_range = 0.1,\n                                    height_shift_range = 0.1,\n                                    zoom_range = 0.1,\n                                    horizontal_flip = True\n                                   )\ntrain_generator = train_datagen.flow_from_directory('.\/Training', \n                                                    target_size=(150,150), \n                                                    class_mode='binary')","610ee75f":"validation_datagen = ImageDataGenerator(rescale=1\/255)\nvalidation_generator = validation_datagen.flow_from_directory('.\/Validation', \n                                                              target_size=(150,150),\n                                                              class_mode='binary')","f6084ecf":"test_datagen = ImageDataGenerator(rescale=1\/255)\ntest_generator = test_datagen.flow_from_directory('.\/Testing', \n                                                              target_size=(150,150),\n                                                              class_mode='binary')","423533f1":"from tensorflow.keras.models import Model\nfrom tensorflow.keras.models import load_model","7c5ee7e6":"m=load_model('..\/input\/models\/inception_v3.h5')","6c3ff3ad":"mo = Model(inputs=m.inputs,outputs=m.layers[-2].output)","c421a2b3":"features=mo.predict(test_generator)","55cb08c1":"features","dcb38e5b":"features.shape","3c6de3cd":"from numpy import save\nsave('test_f.npy', features)","39ee44c7":"tfeatures=mo.predict(train_generator)\nprint(tfeatures.shape)","cc79fd3a":"tfeatures","6c1e3442":"save('train_f.npy', tfeatures)","45ee0558":"import numpy as np \nimport pandas as pd \nimport os\nimport os\nimport zipfile\nimport pandas as pd\nimport numpy as np\nimport csv","7d938ffd":"tfeatures = np.load('..\/input\/extracted\/train_fe.npy')","f5472292":"features = np.load('..\/input\/extracted\/test_fe.npy')\nfeatures.shape","fd265dbf":"df = pd.read_csv('..\/input\/retinal-disease-classification\/Training_Set\/Training_Set\/RFMiD_Training_Labels.csv')\ndf","022d53ad":"df.drop(['ID'], axis=1, inplace=True)\ndf","87c878eb":"n = []\nfor x in range(1920):\n    if df.iloc[x,0]==0:\n        n.append(df.iloc[x,1:].to_numpy())","cd79cb1c":"Yt = []\nfor x in range(1920):\n    if df.iloc[x,0]==1:\n        Yt.append(df.iloc[x,1:].to_numpy())","08b21c4a":"for i in n:\n    Yt.append(i)\nlen(Yt)","2e1464f3":"Y_train = np.asarray(Yt)","1efc84cb":"Y_train.shape","c0264a7a":"dft = pd.read_csv('..\/input\/retinal-disease-classification\/Test_Set\/Test_Set\/RFMiD_Testing_Labels.csv')\ndft","6602a9af":"dft.drop(['ID'], axis=1, inplace=True)\ndft","5235fbac":"nt = []\nfor x in range(640):\n    if dft.iloc[x,0]==0:\n        nt.append(dft.iloc[x,1:].to_numpy())","010e5215":"Ytest = []\nfor x in range(640):\n    if dft.iloc[x,0]==1:\n        Ytest.append(dft.iloc[x,1:].to_numpy())","5d1345ef":"for i in nt:\n    Ytest.append(i)\nlen(Ytest)","9a54d45a":"Y_test = np.asarray(Ytest)\nY_test.shape","c396c1cd":"from sklearn.ensemble import RandomForestClassifier\nfrom skmultilearn.problem_transform import BinaryRelevance","53c664d3":"clf=BinaryRelevance(RandomForestClassifier(n_estimators=5))\nclf.fit(tfeatures,Y_train)","562e3e99":"y_pred=clf.predict(features)","26911eaf":"from sklearn import metrics\nprint(\"Accuracy:\",metrics.accuracy_score(Y_test, y_pred))","d13429be":"## Testing labels","ac905fa8":"### ML Algorithms","54f68eb7":"# Random Forest"}}