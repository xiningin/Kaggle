{"cell_type":{"392760ce":"code","d155fd57":"code","0e1fc131":"code","1e98db94":"code","22fb233b":"code","33a0e501":"code","0f5225dc":"code","592861b6":"code","a7722821":"code","e00c858f":"code","d17cb629":"code","9dfbc796":"code","dcb818b1":"code","f4df2d8e":"code","810438b4":"code","c28b6a91":"markdown","0c4a8a23":"markdown","3bf97678":"markdown","e6fa90a2":"markdown","2e8644a9":"markdown","37547e86":"markdown","4e879af3":"markdown","3629af5f":"markdown","4477d3e5":"markdown","eef731ef":"markdown","e75236da":"markdown"},"source":{"392760ce":"import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d155fd57":"import pandas as pd \nimport numpy as np\ndata = pd.read_csv(r'..\/input\/bee-data-cleaningg\/Bee Data.csv')\ndata.head(5)","0e1fc131":"data = data.rename(columns = {'January 1 colonies':'Colonies_at_start','Maximum colonies 1\/':'Maximum_colonies',\n                             'Lost colonies':'Lost_colonies','Percent lost 2\/':'Percent_lost','Added colonies':'Added_colonies','Renovated colonies 3\/':'Renovated_colonies',\n                             'Percent renovated 4\/':'Percent_renovated','Percent with varroa mites':'Percent_with_varroa_mites',\n                              'Percent with other pests':'Percent_with_other_pests','Percent with pesticides':'Percent_with_pesticides',\n                              'Percent with other failures':'Percent_with_other_failures','Percent unknown failures':'Percent_unknown_failures',\n                              'Percent with diseases':'Percent_with_diseases','Month Range':'Month_Range'})\ndata.head(3)","1e98db94":"#state column\n\ndata['State'] = data['State'].str.rstrip(' ........:')\n\n\ndata['State'] = data['State'].str.replace('5\/','')","22fb233b":"#replacing values\ndata = data.replace('-','0', regex = True)\ndata['Month_Range'] = data['Month_Range'].str.replace('0','-')\n\ndata = data.replace('(0)','0', regex = True)\ndata = data.replace(',','', regex = True)\n\ndata.head(3)","33a0e501":"data = data.dropna()\n","0f5225dc":"data.dtypes","592861b6":"data[['Colonies_at_start', 'Maximum_colonies',\n      'Lost_colonies','Added_colonies','Renovated_colonies','Percent_renovated',\n     'Percent_with_other_pests','Percent_with_diseases','Percent_with_pesticides',\n      'Percent_unknown_failures']] = data[['Colonies_at_start', 'Maximum_colonies',\n      'Lost_colonies','Added_colonies','Renovated_colonies','Percent_renovated',\n     'Percent_with_other_pests','Percent_with_diseases','Percent_with_pesticides',\n      'Percent_unknown_failures']].apply(pd.to_numeric)\ndata.dtypes","a7722821":"\ndata['Year'] = data['Year'].map(str)\ndata['Month_Range'] = data['Month_Range'].map(str)\ndata.dtypes\n\n\n\n\n\n# data['Months and year'] = data['Year'] + ' ' + data['Month Range']\n# data.head(3)\n","e00c858f":"data = data.infer_objects()\ndata.dtypes","d17cb629":"#adding variable for quarter \ndata['Month_range_and_year'] = data['Month_Range'] + ' ' + data['Year']\n\ndef Q(row):\n    if row['Month_Range'] == 'January - March':\n        val = 'Q1'\n    elif row['Month_Range'] == 'April - June':\n        val = 'Q2'\n    elif row['Month_Range'] =='July - September':\n        val = 'Q3' \n    else: val = 'Q4'\n    return val \n\ndata['Quarter'] = data.apply(Q, axis=1)\n","9dfbc796":"data.isna().sum()","dcb818b1":"data.to_csv('outputfile.csv', index=False)","f4df2d8e":"%matplotlib inline\nimport matplotlib.pyplot as plt \nimport matplotlib.patches as mpatch\nimport seaborn as sns\nimport numpy as np\nsns.set_style('white')\nstate=data['State']\nrenovated=data['Renovated_colonies']\nmonth_range=data['Month_Range']\nc_at_start=data['Colonies_at_start']\nlost=data['Lost_colonies']\nadded=data['Added_colonies']\nmonths_year=data['Month_range_and_year']\nfig, ax = plt.subplots(figsize=(12,6))\n\n#renovated lost and added by state, need to get the bars to stack properly\nax.bar(state,renovated,color=\"grey\", label=True, linewidth=1, alpha=0.5)\nax.bar(state,lost,color=\"red\", label=True)\nax.bar(state,added,color=\"green\",label=True)\nax.set_xlabel('States')\nax.set_ylabel('Colonies')\nplt.xticks(rotation='vertical')\nplt.tight_layout\ny = np.arange(0,250000,20000)\nplt.yticks(y)\nplt.ticklabel_format(style='plain', axis='y')\nplt.title('Bee Colonies by State')\n# plt.gca().spines['top'].set_visible(False)\n# plt.gca().spines['right'].set_visible(False)\nr = mpatch.Patch(color='grey',label='Renovated')\nl = mpatch.Patch(color='red',label='Lost')\na = mpatch.Patch(color='green',label='Added')\nplt.legend(handles=[r,l,a])\nplt.show()\n\n#renovated by state\nfig, ax = plt.subplots(figsize=(12,6))\nplt.bar(state,renovated, linewidth=3,color='grey', alpha=.8)\nax.set_xlabel('States')\nax.set_ylabel('Renovated_Colonies')\nplt.xticks(rotation='vertical')\nplt.tight_layout\ny = np.arange(0,250000,20000)\nplt.yticks(y)\nplt.ticklabel_format(style='plain', axis='y')\nplt.title('Renovated Colonies by State')\nplt.show()\n\n#lost and added by timeframe\nplt.bar(months_year,lost, linewidth=3, color='red',alpha=.4)\nplt.title(\"Lost Bee Colonies by Season\")\nplt.tight_layout\nplt.yticks(np.arange(0,500000,100000))\nplt.xticks(rotation='vertical')\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\nplt.show()\n\nplt.bar(months_year,added, linewidth=3,color='green', alpha=.4)\nplt.title(\"Added Bee Colonies by Season\")\nplt.tight_layout\nplt.yticks(np.arange(0,500000,100000))\nplt.xticks(rotation='vertical')\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\nplt.show()\n\n","810438b4":"#lets look at possible correlations\ndata.dtypes\nnumeric_columns = data.select_dtypes(exclude = ['object'])\n\nnumeric_columns = pd.DataFrame(numeric_columns)\ncorr = numeric_columns.corr().round(3)\ncorr.style.background_gradient(cmap='coolwarm')\n\n# numeric_columns2 = data[['Colonies at start of month range','Maximum colonies during month range',\n#                          'Lost colonies','Percent lost','Added colonies','Renovated colonies']]\n# corr2 = numeric_columns2.corr().round(3)\n# corr2.style.background_gradient(cmap='coolwarm')\n","c28b6a91":"![](https:\/\/imgur.com\/a\/j6va06o)","0c4a8a23":"Removing rows with NaN values","3bf97678":"This Bee Colony data came from the U.S. Dept of Agriculture, here: [https:\/\/downloads.usda.library.cornell.edu\/usda-esmis\/files\/rn301137d\/nc5819380\/sb397x676\/hcny0820.txt](http:\/\/)\nThe webpage offers the data in 10 tables in an obscure format, and the **goal is to use Pandas to quickly get the data into a more usable form. **\n\nThe original data:\n-needed to be copied from 10 tables and combined into one table in excel.  \n-had a table for each three month range in the time frame.  The tables for APRIL-JUNE were fully null so I left that time frame out.  \n-added a parameter for \"Month Range\" and \"Year\" so that all the data could fit into one table, and manually changed (Z) values to 0. \n\n\n\n","e6fa90a2":"The first column represents the number of colonies at the beginning of each month range. Changing the name to 'Colonies at start of month range'","2e8644a9":"Still trying to figure out what to do with these month ranges. Making a concatenated column with month range and year in case that helps with analysis. We want to be able to differentiate by season and year when explaining the data. ","37547e86":"From Source: \n\nPercent lost 2\/ is the number of lost colonies divided by maximum colonies except for the United States.                                \n\nRenovated colonies 3\/ is  Defined as any surviving colony that was requeened or received new honey bees through nuc or package.        \n\nPercent renovated 4\/  is the number of renovated colonies divided by maximum colonies except for the United States, where percent renovated is the number of renovated colonies divided by the January 1 colonies. \n\nThese column names make sense to keep, and I will simply take off the numbers. ","4e879af3":"From source: \n(-) Represents zero.\n(Z) Less than half of the unit shown.\n\nFrom source: (X) = Not applicable. Dropping these rows.\n\nRemoving commas from numeric columns. ","3629af5f":"Removing periods  and the 5\/ in \"Other States 5\/\" from 'State' column:","4477d3e5":"Checking and changing column data types ","eef731ef":"From source: \nMaximum colonies 1\/ = January 1 colonies plus all colonies moved into that state during the quarter. This will represent the max number of colonies per state during each month range.\nChanging to column title to 'Maximum Colonies during month range'","e75236da":"The output dataset will be much better for further analysis! "}}