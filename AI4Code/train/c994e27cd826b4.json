{"cell_type":{"5640bb5d":"code","47382aea":"code","3149148f":"code","2548fa86":"code","6cbde666":"code","60a23189":"markdown","92db6009":"markdown","8eff334f":"markdown","04d62622":"markdown"},"source":{"5640bb5d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","47382aea":"fn = '\/kaggle\/input\/end-als\/end-als\/transcriptomics-data\/DESeq2\/bulbar_vs_limb.csv'\n# fn = '\/kaggle\/input\/end-als\/end-als\/transcriptomics-data\/DESeq2\/median_low_vs_high.csv'\n#fn = '\/kaggle\/input\/end-als\/end-als\/transcriptomics-data\/DESeq2\/ctrl_vs_case.csv'\ndf = pd.read_csv(fn)\ndf","3149148f":"y = df.iloc[:,1]\nX = df.iloc[:,2:].values\n\nimport time \nfrom sklearn.metrics import roc_auc_score\nimport matplotlib.pyplot as plt\n\ns1 = []\nt0 = time.time()\nfor i in range(X.shape[1]):\n    u = X[:,i] \n    r = roc_auc_score(y, u )\n    s1.append(r)\nprint(time.time()-t0,'seconds passed')\nprint('Statistic for genes expressions: ')\nprint( pd.Series(s1).describe())\n\ns2 = []\nt0 = time.time()\nfor i in range(X.shape[1]):\n    u = np.random.randn(len(y))\n    r = roc_auc_score(y, u )\n    s2.append(r)\nprint(time.time()-t0,'seconds passed')\nprint('Statistic random data: ')\nprint( pd.Series(s2).describe())\n\nplt.plot(np.sort(s1), label = 'genes' )\nplt.plot(np.sort(s2), label = 'random' )\nplt.legend()\nplt.title('ordered values of rocauc')\nplt.show()\n","2548fa86":"# '\/kaggle\/input\/end-als\/end-als\/transcriptomics-data\/DESeq2\/bulbar_vs_limb.csv'\nfn = '\/kaggle\/input\/end-als\/end-als\/transcriptomics-data\/DESeq2\/median_low_vs_high.csv'\n#fn = '\/kaggle\/input\/end-als\/end-als\/transcriptomics-data\/DESeq2\/ctrl_vs_case.csv'\ndf = pd.read_csv(fn)\n\ny = df.iloc[:,1]\nX = df.iloc[:,2:].values\n\nimport time \nfrom sklearn.metrics import roc_auc_score\nimport matplotlib.pyplot as plt\n\ns1 = []\nt0 = time.time()\nfor i in range(X.shape[1]):\n    u = X[:,i] \n    r = roc_auc_score(y, u )\n    s1.append(r)\nprint(time.time()-t0,'seconds passed')\nprint('Statistic for genes expressions: ')\nprint( pd.Series(s1).describe())\n\ns2 = []\nt0 = time.time()\nfor i in range(X.shape[1]):\n    u = np.random.randn(len(y))\n    r = roc_auc_score(y, u )\n    s2.append(r)\nprint(time.time()-t0,'seconds passed')\nprint('Statistic random data: ')\nprint( pd.Series(s2).describe())\n\nplt.plot(np.sort(s1), label = 'genes' )\nplt.plot(np.sort(s2), label = 'random' )\nplt.legend()\nplt.title('ordered values of rocauc')\nplt.show()\n\n","6cbde666":"# '\/kaggle\/input\/end-als\/end-als\/transcriptomics-data\/DESeq2\/bulbar_vs_limb.csv'\n#fn = '\/kaggle\/input\/end-als\/end-als\/transcriptomics-data\/DESeq2\/median_low_vs_high.csv'\nfn = '\/kaggle\/input\/end-als\/end-als\/transcriptomics-data\/DESeq2\/ctrl_vs_case.csv'\ndf = pd.read_csv(fn)\n\ny = df.iloc[:,1]\nX = df.iloc[:,2:].values\n\nimport time \nfrom sklearn.metrics import roc_auc_score\nimport matplotlib.pyplot as plt\n\ns1 = []\nt0 = time.time()\nfor i in range(X.shape[1]):\n    u = X[:,i] \n    r = roc_auc_score(y, u )\n    s1.append(r)\nprint(time.time()-t0,'seconds passed')\nprint('Statistic for genes expressions: ')\nprint( pd.Series(s1).describe())\n\ns2 = []\nt0 = time.time()\nfor i in range(X.shape[1]):\n    u = np.random.randn(len(y))\n    r = roc_auc_score(y, u )\n    s2.append(r)\nprint(time.time()-t0,'seconds passed')\nprint('Statistic random data: ')\nprint( pd.Series(s2).describe())\n\nplt.plot(np.sort(s1), label = 'genes' )\nplt.plot(np.sort(s2), label = 'random' )\nplt.legend()\nplt.title('ordered values of rocauc')\nplt.show()\n\n","60a23189":"# What is about ?\n\nNotebook for https:\/\/www.kaggle.com\/alsgroup\/end-als\n\n**In brief:** we conclude that no gene can be considered as \"biomarker\" i.e. good enough predictor for the disease, at least by the simple\nanalysis considered below. \n\nMore details:\n\nALS ( Amyotrophic lateral sclerosis ) transciptomics data is considered - it contains data matrices X and targets y.\nThere are three pairs (X1,y1), (X2,y2), (X3,y3) are given in 3 files. (Actually data matries X1 and X2 are subsets of X3).\n\n\nData contains huge amount of features - 53859 genes expression, while we have 112, 87, 133 targets in each of the three cases,\nso it is exremely easy to overfit.\n\nHere we proceed with simple  one variable analysis - i.e. calculate predictive power of each feature (on its own, i.e. without any model) \nwith respect to targets.\nWe consider roc_auc as measure of predictive power. \n\n### Conclusion:\nWe migth see that some features show not so bad predictive power. However most probably it is just illusion - we boostrap random data of the same sizes and see that out of 53859 random  data one might find similarly \"good\" predictors. \n\nThus at the moment we cannot reliably conclude that any of genes has good enough predictive power. I.e. can serve as \"biomarker\".\nAdditional analysis is required. \n\n\nPS \n\nOne might look at max and mins of the random\/genes rocauc and see that random are sometimes higher. \nMore stable way to look on percentiles.\n\n\nPSPS\n\n\nhttps:\/\/en.wikipedia.org\/wiki\/Amyotrophic_lateral_sclerosis\n\nhttps:\/\/en.wikipedia.org\/wiki\/Amyotrophic_lateral_sclerosis_research\n\nhttps:\/\/en.wikipedia.org\/wiki\/Genetics_of_amyotrophic_lateral_sclerosis\n\n","92db6009":"# Control vs case data","8eff334f":"# Bulbar vs limb data","04d62622":"# Median low vs high data"}}