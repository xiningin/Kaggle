{"cell_type":{"c785da8b":"code","8f37f63d":"code","247194f0":"code","1ddafd05":"code","a832057f":"code","be915a15":"code","ff0ef856":"code","3f06b485":"code","3839ba73":"code","dd573d79":"code","13b0357d":"code","847f9630":"code","861f3bee":"code","ed42a2e1":"code","19dfdc63":"code","fe027be6":"code","723b5cec":"code","df0cc1b6":"code","cf630116":"code","4dd33032":"code","4a74c2d8":"code","9c55fe7e":"code","592cb083":"code","8a50dbf9":"code","fb6d29ea":"code","93c21591":"markdown","880590af":"markdown","72829645":"markdown","eca01fd7":"markdown","36cf0320":"markdown","f1614d06":"markdown"},"source":{"c785da8b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sb\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8f37f63d":"state = 10","247194f0":"data = pd.read_csv(\"..\/input\/fetal-health-classification\/fetal_health.csv\")\ndata.head(10)","1ddafd05":"data.info()","a832057f":"data.isnull().sum()","be915a15":"data.duplicated(subset=None, keep='first').value_counts()","ff0ef856":"data.drop_duplicates(subset=None, keep='first', inplace = True)","3f06b485":"data.duplicated(subset=None, keep='first').value_counts()","3839ba73":"data.info()","dd573d79":"data.isnull().sum()","13b0357d":"sb.pairplot(data)","847f9630":"from sklearn.model_selection import train_test_split","861f3bee":"x = data.iloc[:, :-1]\ny = data.iloc[:, -1]","ed42a2e1":"x.info()","19dfdc63":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = state)","fe027be6":"x_train.info()\nprint('\\n')\nx_test.info()","723b5cec":"from sklearn.ensemble import RandomForestClassifier as rfc\nfrom sklearn.model_selection import GridSearchCV","df0cc1b6":"model = GridSearchCV(rfc(random_state = state, n_jobs = 5), {\n    \"n_estimators\": range(2, 200, 4)\n}, cv = 20, return_train_score = False)","cf630116":"model.fit(x_train, y_train)","4dd33032":"model = model.best_estimator_","4a74c2d8":"model","9c55fe7e":"from sklearn.metrics import accuracy_score, confusion_matrix","592cb083":"y_predict = model.predict(x_test)","8a50dbf9":"confusion_matrix(y_predict, y_test)","fb6d29ea":"accuracy_score(y_predict, y_test)","93c21591":"# Data Cleaning","880590af":"# Import Data","72829645":"# Exploratory Data Analysis","eca01fd7":"# Get Model Metrics","36cf0320":"# Train Test Split","f1614d06":"# Model Building"}}