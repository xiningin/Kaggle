{"cell_type":{"a7c94885":"code","1cdc2440":"code","da3200f5":"code","cbb1ae32":"code","96018d78":"code","8423f9ec":"code","cfd170f0":"code","810ff53d":"code","8845a3f4":"code","f8eff7f0":"code","d27d2cc5":"code","041305de":"code","59f37995":"code","30c8c2e6":"code","b0d79687":"code","11c5f3ee":"code","9b9e9a7a":"code","8835553d":"code","fcd79661":"code","f81d0c7c":"code","cd74d788":"code","288cf7d1":"markdown","b52f2db8":"markdown","a203962b":"markdown","a6735de1":"markdown","5c6e02e9":"markdown","95521b09":"markdown","2333ca55":"markdown","6f685ab4":"markdown"},"source":{"a7c94885":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1cdc2440":"#Importing pandas and Matplotlib\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import FuncFormatter\n\n# Ensure plots are displayed inline\n%matplotlib inline\n#%matplotlib notebook\n\nc = pd.read_csv(\"..\/input\/calories-in-food-items-per-100-grams\/calories.csv\")\nc.head()","da3200f5":"#Checking data types\nc.info()\n#Result: Need to convert energy in Calories and KJ to numeric","cbb1ae32":"#Removing non numeric characters in energy columns (calories and kilojoules)\nimport re\nfor i in c.index:\n    c.Cals_per100grams[i]=re.sub('[^0-9]','', c.Cals_per100grams[i])\nfor i in c.index:\n    c.KJ_per100grams[i]=re.sub('[^0-9]','', c.KJ_per100grams[i])\nc.sample(10)","96018d78":"#Converting (calories and KJ) to numeric\nc['Cals_per100grams']=c['Cals_per100grams'].astype(str).astype(int)\nc['KJ_per100grams']=c['KJ_per100grams'].astype(str).astype(int)\n\n#Converting (Food Catogory and Food item) to string\n#c.columnname=c.columnname.astype(\"string\")\n\nc.info()","8423f9ec":"#Checking variation in quantity\nc.value_counts('per100grams')\n#It is seen that all products' energy levels are mentioned per 100gm(equal to 100ml).Hence, no normalization needed.","cfd170f0":"#Checking for null values\nc.isnull().sum()\n#Result: No null values found","810ff53d":"#Renaming for ease\nc.rename(columns={'FoodCategory': 'category', 'FoodItem': 'item', 'Cals_per100grams': 'calories', 'KJ_per100grams': 'kj'}, inplace=True)\nc.columns","8845a3f4":"#Summary: No. of items in each categories and corresponding average calories\nc_sum = (c.groupby('category')['item', 'calories'].agg({'item': 'count', 'calories': 'mean'}).sort_values(by='calories', ascending=False)).reset_index()\nc_sum\n#Data is sorted from highest to lowest average calories","f8eff7f0":"#Chossing bar plot style\nplt.style.available","d27d2cc5":"plt.style.use('Solarize_Light2')","041305de":"#Basic Bar plot\nc_top10=c_sum.iloc[0:10]\nc_top10.plot(kind='barh', y=\"calories\", x=\"category\")","59f37995":"#Adding layouts\nfig, ax = plt.subplots()\nc_top10.plot(kind='barh', y=\"calories\", x=\"category\", ax=ax)\nax.set_xlim([-100,1200]) # To show that Vegetable oils still give less calories\nax.set_xlabel('Calories per 100 grams')\nax.set_ylabel('Food Category')","30c8c2e6":"# A way of misrepresentation of data - Using logs\nfig, ax = plt.subplots(figsize=(10,5))\nc_top10.plot(kind='bar', y=\"calories\", x=\"category\", ax=ax)\nax.set_yscale('log') #Log scaling\nax.set_xlabel('Calories per 100 grams')\nax.set_ylabel('Food Category')\nplt.xticks(rotation=30)","b0d79687":"#Adding title\nfig, ax = plt.subplots()\nc_top10.plot(kind='barh', y=\"calories\", x=\"category\", ax=ax)\nax.set_xlim([-100,1000])\n#ax.set_xlabel('Calories per 100 grams')\n#ax.set_ylabel('Food Category')\nax.set(title='HIGH CALORIE FOOD INGREDIENTS - Vegetable Oil Tops the chart ',xlabel ='Calories per 100 grams',ylabel='Food Category' )","11c5f3ee":"#Changing fig size\nfig, ax = plt.subplots(figsize=(10,5))\nc_top10.plot(kind='barh', y=\"calories\", x=\"category\", ax=ax)\nax.set_xlim([-100,1000])\n#ax.set_xlabel('Calories per 100 grams')\n#ax.set_ylabel('Food Category')\nax.set(title='HIGH CALORIE FOOD INGREDIENTS - Vegetable Oil Tops the chart ',xlabel ='Calories per 100 grams',ylabel='Food Category' )","9b9e9a7a":"#Since we have only calories, we do not need the legend\nfig, ax = plt.subplots(figsize=(10,5))\nc_top10.plot(kind='barh', y=\"calories\", x=\"category\", ax=ax)\nax.set_xlim([-100,1000])\n#ax.set_xlabel('Calories per 100 grams')\n#ax.set_ylabel('Food Category')\nax.set(title='HIGH CALORIE FOOD INGREDIENTS - Vegetable Oil Tops the chart ',xlabel ='Calories per 100 grams',ylabel='Food Category' )\nax.legend().set_visible(False)","8835553d":"#Changing axis values\ndef cal(x,pos):\n    if x>=0:\n        return '{:1.0f}KJ'.format(x*4.184)\n\nfig, ax = plt.subplots(figsize=(10,5))\nc_top10.plot(kind='barh', y=\"calories\", x=\"category\", ax=ax)\nax.set_xlim([-100,1000])\nax.set(title='HIGH CALORIE FOOD INGREDIENTS - Vegetable Oil Tops the chart ',xlabel ='Calories per 100 grams',ylabel='Food Category' )\nax.legend().set_visible(False)\n\nformatter = FuncFormatter(cal)\nax.xaxis.set_major_formatter(formatter)","fcd79661":"#A WELL DETAILED VISUALIZATION\n\n#Creating figure and axes\nfig, ax = plt.subplots(figsize=(4,5))\n\n#plotting data and getting average\nc_top10.plot(kind='barh', y=\"calories\", x=\"category\", ax=ax)\navg= c_top10['calories'].mean()\n\n#setting limits and labels\nax.set_xlim([-100,1000])\nax.set(title='HIGH CALORIE FOOD INGREDIENTS',xlabel ='Calories per 100 grams (in KCal)',ylabel='Food Category' )\n\n#removing legend\nax.legend().set_visible(False)\n\n#Adding line for average\nax.axvline(x=avg, color='b', label='Avg', linestyle=':', linewidth=2)\n\n#Annotating the food category\nfor cat in [0,1]:\n    ax.text(avg,cat,\"Danger Food!\")","f81d0c7c":"#WHAT ABOUT THE NUMBER OF ITEMS?\n\n#Creating figure and axes\nfig, ax = plt.subplots(figsize=(4,5))\n\n#plotting data and getting average\nc_top10.plot(kind='barh', y=\"item\", x=\"category\", ax=ax)\navg1= c_top10['item'].mean()\n\n#setting limits and labels\n#ax.set_xlim([-100,1000])\nax.set(title='VARIETY OF FOOD INGREDIENTS ',xlabel ='Number of items in the category',ylabel='Food Category' )\n\n#removing legend\nax.legend().set_visible(False)\n\n#Adding line for average\nax.axvline(x=avg1, color='b', label='Avg', linestyle=':', linewidth=2)\n\n#Annotating the food category\nfor cat in [3,5,9]:\n    ax.text(avg1,cat,\"Lot of Variety\")\n","cd74d788":"# LET US HAVE THE GRAPHS ABOUT HIGH CALORIE FOODS TOGETHER\n\n# Get the figure and the axes\nfig, (ax0, ax1) = plt.subplots(nrows=1, ncols=2, sharey=True, figsize=(10,4))\n\n#Figure 1\nc_top10.plot(kind='barh', y=\"calories\", x=\"category\", ax=ax0)\navg= c_top10['calories'].mean()\nax0.set_xlim([-100,1000])\nax0.set(title='HIGH CALORIE FOOD INGREDIENTS',xlabel ='Calories per 100 grams (in KCal)',ylabel='Food Category' )\nax0.legend().set_visible(False)\nax0.axvline(x=avg, color='b', label='Avg', linestyle=':', linewidth=2)\nfor cat in [0,1]:\n    ax0.text(avg,cat,\"Danger Food!\")\n    \n#Figure 2\nc_top10.plot(kind='barh', y=\"item\", x=\"category\", ax=ax1)\navg1= c_top10['item'].mean()\nax1.set(title='VARIETY OF FOOD INGREDIENTS ',xlabel ='Number of items in the category',ylabel='Food Category' )\nax1.legend().set_visible(False)\nax1.axvline(x=avg1, color='b', label='Avg', linestyle=':', linewidth=2)\nfor cat in [3,5,9]:\n    ax1.text(avg1,cat,\"Lot of Variety\")\n","288cf7d1":"### TOP 10 CALORIE FOODS","b52f2db8":"### Like it would be expected, the variety of for fatty foods like chocolates, candies, sweets, cake and cookie flavors are very high. Also, we can observe that surprisingly oatmeals, muesli and cereals also are one among high calorie foods, but are assumed to be healthy and lite. For such health conscious croud, there are a variety of such foods as well.","a203962b":"## THE FINAL VISUALIZATION","a6735de1":"## Choose your ingredients wisely!","5c6e02e9":"### Data visualization using Matplotlib","95521b09":"# Calories Data Analysis using Matplotlib","2333ca55":"Now we have 2 datasets <br>\n- c: Entire Data Set<br>\n- c_sum: Summary Data with category, average calories and total items in the category<br>\nWe will be working with the summary data for barplot represenation","6f685ab4":"### Data Preprocessing"}}