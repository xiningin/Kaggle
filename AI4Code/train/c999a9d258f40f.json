{"cell_type":{"e793b37b":"code","2bbccb48":"code","68a7b3da":"code","08c84410":"code","8afa987b":"code","53196e38":"code","3e204bda":"code","9c736abc":"code","df6aa608":"markdown","e8a23036":"markdown"},"source":{"e793b37b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        if \"train.csv\" in filename:\n            df_train = pd.read_csv(os.path.join(dirname, filename))\n        elif \"test.csv\" in filename:\n            df_test = pd.read_csv(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2bbccb48":"df_train.head()","68a7b3da":"df_train_analyze = df_train.copy(deep=True)\ndf_train_analyze[\"text_len\"] = df_train_analyze[\"excerpt\"].str.len()\ndf_train_analyze.head()","08c84410":"df_train_analyze.describe()","8afa987b":"import nltk\nfrom nltk.tokenize import TreebankWordTokenizer\n\ndf_train_token = df_train_analyze.copy(deep=True)\nfor i, row in df_train_analyze.iterrows():\n    excerpt = row[\"excerpt\"].lower()\n    punc_tokenizer = nltk.RegexpTokenizer(r\"\\w+\")\n    alpha_tokenizer = nltk.RegexpTokenizer(r\"[a-zA-Z\\-]+\")\n    word_tokenizer = TreebankWordTokenizer()\n    new_words = punc_tokenizer.tokenize(excerpt)\n    new_words = \" \".join(new_words)\n    new_words = alpha_tokenizer.tokenize(new_words)\n    new_words = \" \".join(new_words)\n    new_words = word_tokenizer.tokenize(new_words)\n    df_train_token.loc[i, \"token\"] = \" \".join(new_words) ","53196e38":"df_train_token.head()","3e204bda":"from sklearn.feature_extraction.text import CountVectorizer\n\nex_list = df_train_token[\"token\"].values.tolist()\nvectorizer = CountVectorizer()\nword_vector = vectorizer.fit_transform(ex_list)\n# print(vectorizer.get_feature_names())\nword_freq_array = word_vector.toarray()\nprint(word_freq_array)","9c736abc":"import statsmodels.api as sm\n\nendog = np.array(df_train_token[\"target\"].values.tolist())\nmod = sm.OLS(endog, word_freq_array)\nres = mod.fit()\nprint(res.summary())","df6aa608":"# Word frequency analysis","e8a23036":"## Initial thought: the word frequency of certain words may influence the final score"}}