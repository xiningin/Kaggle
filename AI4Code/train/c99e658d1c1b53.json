{"cell_type":{"8e363013":"code","7246a87a":"code","07476e33":"code","936a3243":"code","dc5f1c32":"code","121e60a6":"code","a92e72bc":"code","c90cb109":"code","6bfcdf20":"code","0bf76abc":"code","8f65e03e":"code","0e6ed625":"code","c110463f":"code","e788cc5f":"markdown","6e9e91c8":"markdown","279f16ae":"markdown","45d8db88":"markdown","9c2be824":"markdown"},"source":{"8e363013":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.datasets import load_iris","7246a87a":"df = pd.DataFrame(load_iris().data, columns = load_iris().feature_names)\ndf","07476e33":"df.head()","936a3243":"df.tail()","dc5f1c32":"df.isnull().sum()","121e60a6":"df.shape","a92e72bc":"df.columns","c90cb109":"df.nunique()","6bfcdf20":"df.info()","0bf76abc":"x = df.iloc[:, [0, 1, 2, 3]].values\nfrom sklearn.cluster import KMeans\nwcss = []\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', \n                    max_iter = 300, n_init = 10, random_state = 0)\n    kmeans.fit(x)\n    wcss.append(kmeans.inertia_)\n    \n# Plotting the results onto a line graph, \n# `allowing us to observe 'The elbow'\nplt.subplots(figsize=(10,5))\nplt.plot(range(1, 11), wcss)\nplt.title('The Elbow Method', color=\"RED\",size=20)\nplt.xlabel('Number of clusters', color=\"#FDD017\",size=15)\nplt.ylabel('WCSS', color=\"#FDD017\",size=15) # Within cluster sum of squares\nplt.show()","8f65e03e":"print(wcss)","0e6ed625":"kmeans = KMeans(n_clusters = 3, init = 'k-means++',\n                max_iter = 300, n_init = 10, random_state = 0)\ny_kmeans = kmeans.fit_predict(x)\ny_kmeans","c110463f":"plt.subplots(figsize=(10,5))\nplt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], s = 100, c = '#FF2400', label = 'Iris-setosa')\nplt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], s = 100, c = '#306EFF', label = 'Iris-versicolour')\nplt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1], s = 100, c = '#FBB917', label = 'Iris-virginica')\n# Plotting the centroids of the clusters\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], s = 200, c = '#FF00FF',marker = '*', label = 'Centroids')\n_ = plt.legend()","e788cc5f":"# Visualization:","6e9e91c8":"# EDA","279f16ae":"From the given \u2018Iris\u2019 dataset, predict the optimum number of clusters and represent it visually.","45d8db88":"# ELBOW METHOD","9c2be824":"# Reading the Dataset:"}}