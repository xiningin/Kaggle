{"cell_type":{"7a5935d6":"code","d02def9a":"code","d4f24430":"code","f39829bd":"code","9e9c5946":"code","428699b8":"code","a97e8165":"code","bd8fb73b":"code","f4afedce":"code","ed57bfd2":"code","fb993dac":"code","e129a205":"code","0f7716fe":"code","bfef25b6":"code","a404eede":"code","1f760c9a":"code","526181fa":"code","e4d891e1":"code","0896af87":"code","59754fde":"code","8525af3a":"code","c2982f14":"code","18a7a64a":"code","b5dea977":"code","6e869ab2":"code","a8dcf9b7":"code","ada4c4d4":"markdown","c8b76a4e":"markdown","90090c17":"markdown","db5da951":"markdown","bdbf3c63":"markdown","711342a4":"markdown","d4937d49":"markdown","adc2fe3e":"markdown","d45ca393":"markdown","e14e510b":"markdown","8657aab1":"markdown","3e1bf93c":"markdown","c30906d3":"markdown","1eab3238":"markdown","148d95c1":"markdown","8dd2e103":"markdown","53b52a0b":"markdown","8b14a441":"markdown","13954783":"markdown","df5e167f":"markdown","867cb896":"markdown","84b118e2":"markdown","e93597e2":"markdown","e266476f":"markdown"},"source":{"7a5935d6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","d02def9a":"df = pd.read_csv('..\/input\/lending-club\/loan_data.csv')","d4f24430":"df.head()","f39829bd":"df.info()","9e9c5946":"df.describe()","428699b8":"plt.figure(figsize=(10,6))\ndf[df['credit.policy']==1]['fico'].hist(alpha=0.5,color='blue',\n                                              bins=30,label='Credit.Policy=1')\ndf[df['credit.policy']==0]['fico'].hist(alpha=0.5,color='red',\n                                              bins=30,label='Credit.Policy=0')\nplt.legend()\nplt.xlabel('FICO')\n#alpha increases translucency ","a97e8165":"plt.figure(figsize=(10,6))\ndf[df['not.fully.paid']==1]['fico'].hist(alpha=0.5,color='blue',\n                                              bins=30,label='not.fully.paid=1')\ndf[df['not.fully.paid']==0]['fico'].hist(alpha=0.5,color='red',\n                                              bins=30,label='not.fully.paid=0')\nplt.legend()\nplt.xlabel('FICO')","bd8fb73b":"plt.figure(figsize=(11,7))\nsns.countplot(x='purpose',hue='not.fully.paid',data=df,palette='Set1')","f4afedce":"sns.jointplot(x='fico',y='int.rate',data=df,color='purple')","ed57bfd2":"plt.figure(figsize=(11,7))\nsns.lmplot(y='int.rate',x='fico',data=df,hue='credit.policy',\n           col='not.fully.paid',palette='Set1')","fb993dac":"df.info()","e129a205":"cat_feats = ['purpose']","0f7716fe":"final_df = pd.get_dummies(df,columns=cat_feats,drop_first=True)","bfef25b6":"final_df.info()","a404eede":"final_df.head()","1f760c9a":"from sklearn.model_selection import train_test_split","526181fa":"X = final_df.drop('not.fully.paid',axis=1)\ny = final_df['not.fully.paid']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=101)","e4d891e1":"from sklearn.tree import DecisionTreeClassifier\n\ndtree = DecisionTreeClassifier()\ndtree.fit(X_train,y_train)","0896af87":"predictions = dtree.predict(X_test)","59754fde":"from sklearn.metrics import classification_report,confusion_matrix\n\nprint(classification_report(y_test,predictions))\n","8525af3a":"print(confusion_matrix(y_test, predictions))","c2982f14":"from sklearn.ensemble import RandomForestClassifier\n\nrfc_model = RandomForestClassifier(n_estimators=300)\nrfc_model.fit(X_train,y_train)","18a7a64a":"predictions = rfc_model.predict(X_test)","b5dea977":"from sklearn.metrics import classification_report,confusion_matrix","6e869ab2":"print(classification_report(y_test,predictions))","a8dcf9b7":"print(confusion_matrix(y_test,predictions))","ada4c4d4":"## Training a Decision Tree Model\n\nLet's start by training a single decision tree first!\n\n** Import DecisionTreeClassifier**\n**Create an instance of DecisionTreeClassifier() called dtree and fit it to the training data.**","c8b76a4e":"## Predictions and Evaluation\n\nLet's predict off the y_test values and evaluate our model.\n\n** Predict the class of not.fully.paid for the X_test data.**","90090c17":"Let's see if the trend differed between not.fully.paid and credit.policy. ","db5da951":"## Training the Random Forest model\n\nNow its time to train our model!\n\n**Create an instance of the RandomForestClassifier class and fit it to our training data from the previous step.**","bdbf3c63":"# EXPLORATORY DATA ANALYSIS\n\nCreate a histogram of two FICO distributions on top of each other, one for each credit.policy outcome.\nThe outcomes are 1 and 0 which reflects if the person meets the criteria for the loan\n","711342a4":"More people in the dataset that are equal to 1 (meets the criteria for a loan)\nPeople who tend to have a lower FICO score have a credit policy of zero. And you can see that basically any one who has a FICO score less than ~660 will automatically not meet the credit underwriting criteria of Lending Club ","d4937d49":"Neither did great.  More feature engineering is needed.\nThe recall for decision tree was better for class 1 at 24% vs class 1 for random forest at 2%","adc2fe3e":"Let's see the trend between FICO score and interest rate. ","d45ca393":"Takeaways:\n* 14 columns\n* one categorical object column called \"purpose\"\n* no null values","e14e510b":"## Train Test Split\n\nNow its time to split our data into a training set and a testing set!\n\n** Use sklearn to split your data into a training set and a testing set as we've done in the past.**","8657aab1":"A falling joint plot and you can see here that as your FICO score increases\nthe interest rate you have to pay off that loan tends to decrease which makes sense.","3e1bf93c":"The majority of people have 0 for not fully paid but who are actively paying off their loans.\nAnd we can see that more or less a similar distribution between both not fully paid equals 1 and not fully paid equals 0.\nDoesn't seem to have the same sharp cut off on FICO score as the previous credit policy.  It overlaps.\n\nThe spikes are how FICO credit scoring works.  Certain points will have a\nlarger distribution of likelihood of being your FICO score.","c30906d3":"**Now create a classification report from the results. Do you get anything strange or some sort of warning?**","1eab3238":"# SETTING UP THE DATA\n\nLet's get ready to set up our data for our Random Forest Classification Model!\n","148d95c1":"**What performed better the random forest or the decision tree?**","8dd2e103":"## Categorical Features\n\nNotice that the **purpose** column as categorical(object)\n\nThat means we need to transform them using dummy variables so sklearn will be able to understand them. Let's do this in one clean step using **pd.get_dummies**\n\nWe can deal with these columns that can be expanded to multiple categorical features if necessary.\n\n**Create a list of 1 element containing the string 'purpose'. Call this list cat_feats.**","53b52a0b":"**Now use pd.get_dummies(loans,columns=cat_feats,drop_first=True) to create a fixed larger dataframe that has new feature columns with dummy variables. Set this dataframe as final_data.**\ndrop=True to avoid multicollinarity issues","8b14a441":"**Show the Confusion Matrix for the predictions.**","13954783":"We can see that 13-18 are now new 'purpose' columns seperated with the data that was in the purpose column.","df5e167f":"## Predictions and Evaluation of Decision Tree\n**Create predictions from the test set and create a classification report and a confusion matrix.**","867cb896":"precison and recall around 73% 75%","84b118e2":"\n# DECISION TREES AND RANDOM FORESTS\n\n\nFor this project we will be exploring publicly available data from [LendingClub.com](www.lendingclub.com). Lending Club connects people who need money (borrowers) with people who have money (investors). Hopefully, as an investor you would want to invest in people who showed a profile of having a high probability of paying you back. We will try to create a model that will help predict this.\n\nLending club had a [very interesting year in 2016](https:\/\/en.wikipedia.org\/wiki\/Lending_Club#2016), so let's check out some of their data and keep the context in mind. This data is from before they even went public.\n\n**We will use lending data from 2007-2010 and be trying to classify and predict whether or not the borrower paid back their loan in full.** \n\nHere are what the columns represent:\n* credit.policy: 1 if the customer meets the credit underwriting criteria of LendingClub.com, and 0 otherwise.\n* purpose: The purpose of the loan (takes values \"credit_card\", \"debt_consolidation\", \"educational\", \"major_purchase\", \"small_business\", and \"all_other\").\n* int.rate: The interest rate of the loan, as a proportion (a rate of 11% would be stored as 0.11). Borrowers judged by LendingClub.com to be more risky are assigned higher interest rates.\n* installment: The monthly installments owed by the borrower if the loan is funded.\n* log.annual.inc: The natural log of the self-reported annual income of the borrower.\n* dti: The debt-to-income ratio of the borrower (amount of debt divided by annual income).\n* fico: The FICO credit score of the borrower.\n* days.with.cr.line: The number of days the borrower has had a credit line.\n* revol.bal: The borrower's revolving balance (amount unpaid at the end of the credit card billing cycle).\n* revol.util: The borrower's revolving line utilization rate (the amount of the credit line used relative to total credit available).\n* inq.last.6mths: The borrower's number of inquiries by creditors in the last 6 months.\n* delinq.2yrs: The number of times the borrower had been 30+ days past due on a payment in the past 2 years.\n* pub.rec: The borrower's number of derogatory public records (bankruptcy filings, tax liens, or judgments).","e93597e2":"The counts of loans by purpose. Debt consolidation is most popular reason for wanting a loan.","e266476f":"Still see the cut off mark ~660 for people who will not get approved by the lending club.  So here we have the columns representing the not fully paid value and the coloring representing the credit policy.\nAnd you can see here that the behavior is relatively the same whether or not it was fully paid off or not and whether or not they were denied the credit policy."}}