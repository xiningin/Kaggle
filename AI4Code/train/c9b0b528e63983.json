{"cell_type":{"64496034":"code","61635983":"code","dba8f9ae":"code","5e43e90e":"code","77c5b083":"code","1072550e":"code","4d80102d":"markdown","85073644":"markdown","43145d94":"markdown","ce3d0f6b":"markdown"},"source":{"64496034":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","61635983":"train = pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')\n\nX = train.drop('label', axis=1)\ny = train.label\n\nX = X \/ 255  #normalization\ntest = test \/ 255   #normalization","dba8f9ae":"X = X.values.reshape(-1, 784)\ny = y.values.reshape(-1, 1)\n\nX = X.astype('float64')\ny = y.astype('float64')\ntest = test.astype('float64')","5e43e90e":"from tensorflow import keras\nmy_model = keras.Sequential([\n    keras.layers.Dense(10, 'softmax')\n])\n\nmy_model.compile(loss='sparse_categorical_crossentropy',\n                 optimizer='adam',\n                 metrics=['accuracy'])","77c5b083":"my_model.fit(X, y,\n             batch_size=20,\n             epochs=20,\n             verbose=0)","1072550e":"pred_test = my_model.predict(test)\npred_test = pred_test.argmax(axis=1)\n\nsubmission = pd.read_csv('\/kaggle\/input\/digit-recognizer\/sample_submission.csv')\nsubmission['Label'] = pred_test\nsubmission.to_csv('sample_submission.csv', index=False)","4d80102d":"load data","85073644":"Train this extremely simple neural network","43145d94":"Convert DanaFrame to ndarray (and Convert int64 to float64)","ce3d0f6b":"Building model(use tensorflow)"}}