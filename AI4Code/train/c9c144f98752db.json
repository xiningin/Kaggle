{"cell_type":{"acaee8cf":"code","96fc5924":"code","86f1974f":"code","01eed8ee":"code","f88fbbe3":"code","07e7e120":"code","e7af0118":"code","05114899":"code","7956b8c8":"code","f6f6e765":"code","fa9b9b8d":"code","c662a520":"markdown","2f8788d5":"markdown","73e61773":"markdown","0b3f6f5e":"markdown","cadc1acb":"markdown"},"source":{"acaee8cf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Importing sklearn libaraies for model creation\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_absolute_error\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","96fc5924":"# Extracting data from the csv file\nairfoil_data = pd.read_csv(\"..\/input\/airfoil_self-noise.csv\")\n\n","86f1974f":"airfoil_data.info()\nprint(\"=\"*40)\nairfoil_data.head()","01eed8ee":"# statistical view on the data\nairfoil_data.describe().T","f88fbbe3":"# Correlation between variables and dependent variable\nairfoil_data.corr()","07e7e120":"# Checking for missing values in the dataset\nairfoil_data.isnull().sum()","e7af0118":"# Extract y vector from the dataframe\ny = airfoil_data['Scaled sound pressure level']\nX = airfoil_data.drop('Scaled sound pressure level', axis=1)\n\n# spliting train and test dataset\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=40)","05114899":"print(\"Size of train data : \", X_train.shape)\nprint(\"Size of test data : \", X_test.shape)","7956b8c8":"# Linear model object instantiation\nlr = LinearRegression().fit(X_train, y_train)\n\npredictions = lr.predict(X_test)","f6f6e765":"mae = mean_absolute_error(predictions, y_test)\n\nprint(\"Mean Absolute Error :\", round(mae, 2))","fa9b9b8d":"pred_series = pd.Series(predictions, name=\"Predicted\")\n\nsubmission = pd.concat([airfoil_data, pred_series], axis=1)\n\nsubmission.head()\n","c662a520":"### 2. Exploring the data \n\nExamining the structure of the data and variable datatype information","2f8788d5":"## Predicting Airfoil Self-Noise using Regression\n\n**Overview**\n\nThe NASA data set comprises different size NACA 0012 airfoils at various wind tunnel speeds and angles of attack. The span of the airfoil and the observer position were the same in all of the experiments.\n\nWe need to predict the scaled sound pressure level in decibels. \n\n**Data source**\n\nThe dataset has been taken from the UCI open source repository.  [UCI dataset repos](https:\/\/archive.ics.uci.edu\/ml\/datasets\/Airfoil+Self-Noise) \n\n** Predictors **\n*  Frequency, in Hertzs. \n*  Angle of attack, in degrees. \n*  Chord length, in meters. \n*  Free-stream velocity, in meters per second. \n*  Suction side displacement thickness, in meters. \n\n** Objective **\n*  Scaled sound pressure level, in decibels\n\n\n\n\n### 1. Importing libraries and loading data","73e61773":"### 3. Model creation","0b3f6f5e":"### Evaluating the model\n \n Calculating the `Mean Absoluate Error` value to evaluate the prediction","cadc1acb":"There are no missing values in any of the variables."}}