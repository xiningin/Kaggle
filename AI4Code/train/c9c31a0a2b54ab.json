{"cell_type":{"513dc4c6":"code","58c2a341":"code","c9e954bc":"code","cf6c8746":"code","8e907a98":"code","b5347a7c":"code","3e3e6c56":"code","ba506f61":"code","9b3fc379":"markdown","3d1127a9":"markdown","d6277198":"markdown","70e43de9":"markdown","63099fda":"markdown","30196490":"markdown","1dcfcbde":"markdown","449f47dd":"markdown"},"source":{"513dc4c6":"import pandas as pd\nimport numpy as np\nfrom IPython.display import display\n\ndtypes = {\n    \"tpep_pickup_datetime\": \"object\",\n    \"tpep_dropoff_datetime\": \"object\",\n    \"PULocationID\": \"uint8\",\n    \"DOLocationID\": \"uint8\",\n    \"passenger_count\": \"uint8\",\n    \"trip_distance\": \"float32\"\n}\n\ndf = pd.read_csv(\n    \"..\/input\/nyc-yellow-cab-trip-data-201703\/yellow_tripdata_2017-03.csv\",\n    usecols=list(dtypes.keys()),\n    parse_dates = [\"tpep_pickup_datetime\", \"tpep_dropoff_datetime\"],\n    dtype=dtypes\n)\n\n# insert trip duration\ndf.insert(loc=2, column=\"trip_duration\", value=df.tpep_dropoff_datetime-df.tpep_pickup_datetime)\n\n# display df properties\ndisplay(df.head())\ndisplay(df.info())\ndisplay(df.describe())\n\n# check for invalid values\nprint(\"Null values: \\t{}\".format(df.isnull().any().any()))\nprint(\"Inf values: \\t{}\".format(np.isinf(df).any().any()))","58c2a341":"df.loc[df.trip_duration < pd.Timedelta(seconds=0)]","c9e954bc":"df = df.drop(df.loc[df.trip_duration < pd.Timedelta(seconds=0)].index)","cf6c8746":"# insert CO2 produced by each trip\ndf[\"CO2_grams\"] = df.trip_distance * 404 # CO2 grams per mile\n\ndf.head()","8e907a98":"import joblib as jb\nfrom tqdm.auto import trange\n\n# align timestamp using a specified time-distance in minutes (i.e. `T` parameter)\ndef align_time(t,T):\n    if round(t.minute % T \/ T) == 1: t += pd.Timedelta(minutes = T)\n    t += pd.Timedelta(minutes = -t.minute % T, seconds = -t.second)\n    return t\n\n# introduce carpooling\ndef carpool(df, T=15):\n    \n    # leave original unchanged\n    df=df.copy()\n    \n    # align timestamps\n    df.insert(loc=0, column=\"pool_pickup_datetime\", value=jb.Parallel(n_jobs=-1)(jb.delayed(align_time)(df.tpep_pickup_datetime.iloc[i], T=T) for i in trange(df.shape[0], desc=\"Align timestamps\")))\n\n    # introduce pools\n    df_group = df.groupby([\"pool_pickup_datetime\", \"PULocationID\", \"DOLocationID\"])\n    df = df_group.agg(trip_duration=pd.NamedAgg(column=\"trip_duration\", aggfunc=lambda t: t.values.mean()), trip_distance = pd.NamedAgg(column=\"trip_distance\", aggfunc=\"mean\"), passenger_count = pd.NamedAgg(column=\"passenger_count\", aggfunc=\"sum\"), CO2_grams = pd.NamedAgg(column=\"CO2_grams\", aggfunc=\"max\")).reset_index()\n    df.insert(loc=0, column=\"pool\", value=[list(x) for x in df_group.groups.values()])\n\n    return df","b5347a7c":"df_pool = carpool(df)\n\n# replace trip_duration with dropoff_datetime\ndf_pool.insert(loc=1, column=\"pool_dropoff_datetime\", value=df_pool.pool_pickup_datetime+df_pool.trip_duration)\ndf_pool = df_pool.drop(columns=\"trip_duration\")\n\ndisplay(df_pool.head())\ndisplay(df_pool.describe())","3e3e6c56":"# print CO2 released\n\nCO2 = df.CO2_grams.sum()\/1e+6\nCO2_pool = df_pool.CO2_grams.sum()\/1e+6\n\nprint(\"CO2 produced without carpool: \\t{:.0f} tons\".format(CO2))\nprint(\"CO2 produced with carpool: \\t{:.0f} tons ({:.0%})\".format(CO2_pool, (CO2_pool - CO2)\/CO2))","ba506f61":"# save output\ndf.to_csv(\"nyc-yellow-cab-trip-data-201703-cleaned.csv\", index=False) # refer to this dataframe to retrieve the original rides from the indexes of df_pool's column `pool`\ndf_pool.to_csv(\"nyc-yellow-cab-trip-data-201703-pooled.csv\", index=False)","9b3fc379":"Dataset does not contain invalid values and it can be used as it is.\n\nLooking at `trip_duration` minimum value there are some rides with a negative duration.","3d1127a9":"This notebook estimates $\\text{CO}_2$ saved if passengers with similar pickup timestamps and same pickup and dropoff locations share their cab in NYC during March 2017.","d6277198":"# Data cleaning","70e43de9":"$\\text{CO}_2$ produced by each ride can be estimated using average value of $404\\ \\text{g}\/\\text{mile}$ (retrieved at [EPA.gov](https:\/\/www.epa.gov\/greenvehicles\/greenhouse-gas-emissions-typical-passenger-vehicle)).","63099fda":"# Introduction","30196490":"To introduce carpooling each timestamp is aligned at specific times choosed using a period $T$ between them.\nAfter the alignment only timestamps in the format\n\n<center>$ H:\\{kT\\}:00 $<\/center>\n\nare present in the dataframe.\nThis notebook uses\n\n<center>$ T = 15\\ \\text{min} $<\/center>\n\nRides are pooled using aligned pickup times and pickup and dropoff locations.\nEach pool's feature is aggregated as following:\n* `trip_duration` is the **mean** of the original values;\n* `trip_distance` is the **mean** of the original values;\n* `passenger_count` is the **sum** of the original values;\n* `CO2_grams` is the **maximum** of the original values.\n\nAfter pooling `trip_duration` is replaced with `dropoff_datetime`.","1dcfcbde":"# Carpooling","449f47dd":"Pickup and dropoff were probably transcribed incorrectly for the above rides.\nThese values are dropped."}}