{"cell_type":{"8eed9f98":"code","9d94bb15":"code","3201f828":"code","8f4d6922":"code","4abda7bc":"code","d87ae280":"code","e67d322f":"code","55c3fa47":"code","345e16ba":"code","8d22c098":"code","f86d2ab4":"code","147791e6":"code","b135641a":"code","dfe11f2a":"code","f3f33563":"code","cd948a53":"code","ce8f5d6c":"code","59efa669":"code","dd8c7294":"code","56e02884":"code","334bf2db":"code","2f0cb768":"code","b730e921":"code","8bec3bbd":"code","90c101c2":"code","b875f297":"code","c3657ceb":"code","efa49e5f":"code","03d16954":"code","7ca8908f":"code","b5a263f1":"code","af287477":"code","4e094166":"code","36bcc874":"code","3281e8af":"code","1e07c990":"code","54af7670":"code","c000d0ab":"code","f9aa5694":"code","59754658":"code","c27e60dc":"code","638a6816":"code","d55179c6":"code","0ba5aa39":"code","3682e816":"code","d4871f0f":"code","475ce5af":"code","f0fd4c24":"code","7a360c62":"code","3b72beb8":"code","af143d2f":"code","0de18df9":"code","b7d2faed":"code","944362d8":"code","e065547e":"markdown","9a02637f":"markdown","515a566e":"markdown","edbc286f":"markdown","5ad992d4":"markdown","30d819b3":"markdown","75facb19":"markdown","48bd6de5":"markdown","1568cc2b":"markdown","3a8b11d7":"markdown","1d6f535e":"markdown","39a3a542":"markdown","4ce640b4":"markdown","2e90c055":"markdown","c059e8bf":"markdown","a18f93fb":"markdown","91c77b6d":"markdown","6d41fe0d":"markdown","ac47c50a":"markdown","32da8ecd":"markdown","e5f1f716":"markdown","a40803ba":"markdown","dc1a4de3":"markdown","d0dd5df2":"markdown","a7d87453":"markdown","1729d0e1":"markdown","22a052d9":"markdown","fead71f5":"markdown","f98ae5c9":"markdown","b0751cf2":"markdown","7ef4c310":"markdown","ec010d56":"markdown","4f484143":"markdown","770a66e5":"markdown","da8dd45c":"markdown","0432d9ae":"markdown","8994dae4":"markdown","8b6c7de3":"markdown","02a3e4d2":"markdown","5f00f271":"markdown","55486a4f":"markdown","3ff946d6":"markdown","602118b3":"markdown","b332fde8":"markdown","792932b2":"markdown"},"source":{"8eed9f98":"\"\"\" \nTO DO:\n1. Add missing questions\n2. Document code\n3. Use plotly buttons to select other parameters\n4. Lint with Black\n\"\"\"","9d94bb15":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n\nimport ipywidgets as widgets\nimport numpy as np\nimport pandas as pd \nimport plotly.express as px\nimport plotly.graph_objects as go\n\nfrom IPython.display import display, clear_output\nfrom ipywidgets import Output, Button, interact\nfrom plotly.subplots import make_subplots\nfrom typing import Union\n\npd.set_option('mode.chained_assignment', None)\n!jupyter nbextension enable --py --sys-prefix widgetsnbextension","3201f828":"def donut_subplots(df:pd.DataFrame, question_text:str, country:str, title:str) -> None:\n    \"\"\"\n    Plots plotly donut charts comparing the country to the global stats for a given question.\n    \n    Arguments:\n    ----------\n    df (pandas.DataFrame): Source dataframe\n    question_text (str): Exact text of the question, or the column name if using a custom column. We use the text instead of the index as the text is more consistent across multiple years' surveys\n    country (str): The country to compare global averages with \n    title (str): Supertitle of the subplots\n    \n    Returns:\n    --------\n    None\n    \"\"\"\n    \n    fig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\n    fig.add_trace(go.Pie(labels=df[question_text].value_counts().index\n                     , values=df[question_text].value_counts()\n                     , name=\"Global\", title=\"Global\"), \n              1, 1)\n    fig.add_trace(go.Pie(labels=df[df[COUNTRY_QUESTION_TEXT]==country][question_text].value_counts().index\n                     , values=df[df[COUNTRY_QUESTION_TEXT]==country][question_text].value_counts()\n                     , name=country, title=country), \n              1, 2)\n\n    fig.update_traces(hole=.6, textposition='inside', textinfo='percent+label')\n    fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', title_text=title)\n    fig.show()","8f4d6922":"def get_popular_answer_and_plot(df: pd.DataFrame, question_text:str, country:str) -> None:\n    \"\"\"Calculates the most common response to a question and plots plotly donut charts comparing the country's answers to that of others\n    \n    Arguments:\n    ----------\n    df (pandas.DataFrame): Source dataframe\n    question_text (str): Exact text of the question, or the column name if using a custom column. We use the text instead of the index as the text is more consistent across multiple years' surveys\n    country (str): The country to compare global averages with \n    \n    Returns:\n    --------\n    None\n    \"\"\"\n    \n    items = df[question_text].value_counts(normalize=True)*100\n    most_common_item = items.index[0].strip()\n    most_common_pct = items[0]\n\n    country_items = df[df[COUNTRY_QUESTION_TEXT]==country][question_text].value_counts(normalize=True)*100\n    country_common_item = country_items.index[0].strip()\n    country_common_pct = country_items[0]\n\n    if most_common_item == country_common_item:\n        if country_common_pct > most_common_pct:\n            title = f\"In {country}, this percentage increases to {country_common_pct:.0f}%\"\n        else:\n            title = f\"In {country}, this percentage decreases to {country_common_pct:.0f}%\"\n    else:\n        title = f\"However, in {country}, {country_common_item} is more popular<br>with {country_common_pct:.0f}% using it most often\"\n\n    donut_subplots(df, question_text, country, f\"{most_common_pct:.0f}% of all Kagglers use {most_common_item} most often<br>{title}\")","4abda7bc":"def bar_with_mean_num(df:pd.DataFrame, question_text:str, country:str, global_mean:int, title:str) -> None:\n    \"\"\"\n    Plots a bar chart comparing the country's mean value for a numerical column to that of others, with a line for the global mean\n    \n    Arguments:\n    ----------\n    df (pandas.DataFrame): Source dataframe\n    question_text (str): Exact text of the question, or the column name if using a custom column. We use the text instead of the index as the text is more consistent across multiple years' surveys. This string is also used as the `yaxis_title` \n    country (str): The country to compare global averages with \n    global_mean (int): The global mean of the column in question\n    title (str): Title of the plot\n    \n    Returns:\n    --------\n    None\n    \"\"\"\n\n    df_group = df.groupby(COUNTRY_QUESTION_TEXT)[question_text].mean().sort_values(ascending=False)\n    loc = df_group.index.to_list().index(country)\n    \n    color = ['#636EFA']*len(df.groupby(COUNTRY_QUESTION_TEXT)[question_text].mean().sort_values(ascending=False).index)\n    color[loc] = 'orange'  \n    \n    fig = go.Figure(data=[go.Bar(x=df_group.index, y=df_group, marker_color=color)])\n    \n    fig.update_layout(\n        shapes=[\n        dict(\n          type='line',\n          yref='y', y0=global_mean, y1=global_mean,\n          xref='x', x0=-0.5, x1=len(df.groupby(COUNTRY_QUESTION_TEXT)[question_text])-0.5\n        )],\n        title=title,\n        xaxis_title=None,\n        yaxis_title=question_text)\n\n    fig.add_annotation(x=len(df.groupby(COUNTRY_QUESTION_TEXT)[question_text])*0.95, y=global_mean, xshift=-20, yshift=10,\n                text=\"Global Average\",\n                showarrow=False)\n    fig.show()","d87ae280":"##### WIP #####\ndef dropdown_bar_chart(df:pd.DataFrame, selected_choice, question, x, y, text, axes=None, showpercent=False):\n    buttons = []\n    fig = go.Figure()\n    for i in range(len(y)):\n        label = y[i]\n        fig.add_trace(go.Bar(\n                 x           = x, \n                 y           = y, \n                 orientation = \"h\",\n                 text        = ['{0:1.2f}%'.format(100.*x[i]\/x.sum()) for i in range(len(y))] if showpercent else x,\n                 marker      = dict(color = [\"#2471A3\" if x == label else \"#BBBBBB\" for x in y])))\n        \n        buttons.append({'label'  : label,\n                        'method' : 'update',\n                        'args'   : [{'visible'  : [True if x == i else False for x in range(len(y))]},\n                                    {'title'    : f\"{country_avg:.1f}% of Kagglers from {country} {filler_text} \\\"{label}\\\",<br>compared to the global average of {global_mean:.1f}%\"\n},\n                                    {'selected' : [True if label == selected_choice else False for x in y]}]})\n    \n    index = y.get_loc(label)\n    fig.update_layout(updatemenus = [dict(type='dropdown', x = 1.0, y = 1.0, buttons=buttons, active=index)],\n                      title       = f\"{country_avg:.1f}% of Kagglers from {country} {filler_text} \\\"{label}\\\",<br>compared to the global average of {global_mean:.1f}%\",\n                      xaxis       = dict(title = axes[0]),\n                      yaxis       = dict(title = axes[1]))\n    \n    for i in range(len(y)):\n        fig.data[i].visible = False\n    fig.data[index].visible = True\n    fig.show()\n\n#dropdown_bar_chart(df, 'Man', question_text, df[question_text].value_counts().values, df[question_text].value_counts().index, 'identified as', ['Number of Kagglers', 'Genders'], showpercent=False)","e67d322f":"def bar_with_mean_cat(df:pd.DataFrame, question_text:str, country:str, filler_text:str) -> None:\n    \"\"\"\n    Plots bar charts for all categories in a categorical column comparing the country's mean value to that of others with a line for the global mean, for all the distinct values in a column\n    \n    Arguments:\n    ----------\n    df (pandas.DataFrame): Source dataframe\n    question_text (str): Exact text of the question, or the column name if using a custom column. We use the text instead of the index as the text is more consistent across multiple years' surveys. This string is also used as the `yaxis_title` \n    country (str): The country to compare global averages with \n    filler_text (str): Filler to be used in the plot title in the format f\"{country_avg} of Kagglers from {country} {filler_text} {value} compared to the global average of {global_mean} OR f\"Nobody from {country} {filler_text} {value}\"\n    \n    Returns:\n    --------\n    None\n    \"\"\"\n    values = [x for x in df[question_text].unique() if x !='Prefer not to say']\n\n    for value in values:\n\n        df_all = df.groupby(COUNTRY_QUESTION_TEXT)[question_text].value_counts().groupby(level=0).apply(\n            lambda x: 100 * x \/ float(x.sum()))[:,value].sort_values(ascending=False)\n\n        if country in df_all.index:\n            country_avg = df_all[country]\n            global_mean = len(df[df[question_text]==value])*100\/len(df)\n            val_pct = len(df[df[question_text]==value])*100\/len(df)\n            title=f\"{country_avg:.1f}% of Kagglers from {country} {filler_text} \\\"{value}\\\",<br>compared to the global average of {global_mean:.1f}%\"\n\n            loc = df_all.index.to_list().index(country)\n            color = ['#636EFA']*len(df_all.index)\n            color[loc] = 'orange'\n\n            fig = go.Figure(data=[go.Bar(x=df_all.index, y=df_all.values, marker_color=color)])\n            fig.update_layout(\n                shapes=[\n                    dict(\n                      type= 'line',\n                      yref= 'y', y0= global_mean, y1= global_mean,\n                      xref= 'x', x0= -0.5, x1= len(df_all.index)-0.5\n                    )],\n                title=title,\n                xaxis_title=None,\n                yaxis_title='Percentage')\n            fig.add_annotation(x=len(df_all.index)*0.95, y=global_mean, xshift=-20, yshift=10,\n                        text=\"Global Average\",\n                        showarrow=False)\n            fig.show()\n            \n        else:\n            print(f\"Nobody from {country} {filler_text} {value}\")","55c3fa47":"def plot_distribution(df:pd.DataFrame, question_text:str, country:str, title:str, xaxis_title:str=None) -> None:\n    \"\"\"\n    Plots a bar chart comparing the distribution of the column's values between that country and the rest of the world\n    \n    Arguments:\n    ----------\n    df (pandas.DataFrame): Source dataframe\n    question_text (str): Exact text of the question, or the column name if using a custom column. This is also used as the `xaxis_title` of the plot. We use the text instead of the index as the text is more consistent across multiple years' surveys. \n    country (str): The country to compare global averages with \n    title (str): Title of the plot\n    xaxis_title (str): X-axis title of the plot.\n    \n    Returns:\n    --------\n    None\n    \"\"\"\n    \n    df_country = df[df.country_agg==country][question_text].value_counts(normalize=True).sort_index()\n    df_others = df[df.country_agg=='Others'][question_text].value_counts(normalize=True).sort_index()\n\n    for index in df_others.index:\n        if index not in df_country.index:\n            df_country[index] = 0\n    df_country.sort_index(inplace=True)\n\n    fig = go.Figure(data=[\n        go.Bar(name=country, y=df_country.values*100),\n        go.Bar(name='Others', y=df_others.values*100)\n    ])\n\n    fig.update_layout(\n        barmode='group',\n        title=title,\n        xaxis_title=xaxis_title,\n        yaxis_title='Percentage of respondents',\n        xaxis = dict(\n            tickmode = 'array',\n            tickvals = [x for x in range(df[question_text].nunique()+1)],\n            ticktext = df[question_text].sort_values().unique()\n        )\n    )\n\n    fig.show()","345e16ba":"def global_and_country_bars(df:pd.DataFrame, question_text:str, country:str, drop_vals:Union[list, bool] = None, title:bool = True) -> None:\n    \"\"\"\n    Plots global and country specific bar charts for 'preference' questions\n    \n    Arguments:\n    ----------\n    df (pandas.DataFrame): Source dataframe\n    question_text (str): Exact text of the question, or the column name if using a custom column. We use the text instead of the index as the text is more consistent across multiple years' surveys. This string is also used as the `yaxis_title` \n    country (str): The country to compare global averages with \n    drop_vals (list|bool): Answer values which need to dropped from calculations and plots. This overrides dropping 'None' and 'No \/ None' which are dropped by default. Use False to drop no values.\n    title (bool): True to have a detailed title, False to display just 'Global' and 'Country' (Default: True)\n    \n    Returns:\n    --------\n    None\n    \"\"\"\n    \n    filler_text = 'use' if ' use ' in question_text else 'hope to become more familiar with'\n        \n    cols = [col for col in df.columns if question_text in col]\n    mapper = [col.split('- ',maxsplit=2)[2].strip() for col in cols]\n    mapping_dict = dict(zip(cols,mapper))\n    df = df[cols + [COUNTRY_QUESTION_TEXT] + ['country_agg']].rename(columns=mapping_dict)\n    df.dropna(how='all', subset=mapper, inplace=True)\n    \n    if drop_vals:\n        df.drop(columns=drop_vals, inplace=True)\n    elif not drop_vals:\n        _\n    else:\n        try:\n            df.drop(columns=[\"None\"], inplace=True)\n        except KeyError:\n            df.drop(columns=['No \/ None'], inplace=True)\n\n    most_comm = df[df.columns[:-2]].count().sort_values(ascending=False)\/len(df)\n    most_comm_val = most_comm.index[0]\n    most_comm_pct = most_comm[0]*100\n    fig = px.bar(df[df.columns[:-2]].count().sort_values(ascending=False))\n    fig.update_layout(\n        title=f\"{most_comm_pct:.0f}% of all respondents {filler_text} {most_comm_val}\" if title else 'Global',\n        xaxis_title=None,\n        yaxis_title='Number of respondents',\n        showlegend=False\n    )\n    fig.show()\n    \n    filler_text = 'using it' if ' use ' in question_text else 'hoping to become more familiar with it'\n    \n    country_most_comm = df[df[COUNTRY_QUESTION_TEXT]==country][df.columns[:-2]].count().sort_values(ascending=False)\n    country_most_comm_val = country_most_comm.index[0]\n    country_most_comm_pct = country_most_comm[0]*100\/len(df[df[COUNTRY_QUESTION_TEXT]==country])\n    if country_most_comm_val==most_comm_val:\n        if country_most_comm_pct > most_comm_pct:\n            title_text = f'{most_comm_val} is even more popular in {country},<br>with {country_most_comm_pct:.0f}% of respondents {filler_text}'\n        else:\n            title_text = f'{most_comm_val} remains the popular in {country} too,<br>with {country_most_comm_pct:.0f}% of respondents {filler_text}'\n    else:\n        title_text = f\"However, in {country}, {country_most_comm_val} is more popular,<br>with {country_most_comm_pct:.0f}% of respondents {filler_text}\"\n\n    fig = px.bar(df[df[COUNTRY_QUESTION_TEXT]==country][df.columns[:-2]].count().sort_values(ascending=False))\n    fig.update_layout(\n        title=title_text if title else f'In {country}',\n        xaxis_title=None,\n        yaxis_title='Number of respondents',\n        showlegend=False\n    )\n    fig.show()","8d22c098":"COUNTRY_QUESTION_TEXT = 'In which country do you currently reside?'","f86d2ab4":"df = pd.read_csv('\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv', skiprows=1, low_memory=False)\n\ndf[COUNTRY_QUESTION_TEXT].replace({'United Kingdom of Great Britain and Northern Ireland':'UK',\n                           'Iran, Islamic Republic of...':'Iran',\n                           'United Arab Emirates':'UAE',\n                           'United States of America':'USA',\n                           'Viet Nam':'Vietnam'}, inplace=True)","147791e6":"output = Output()\n\ncountry_widget = widgets.Dropdown(\n    options=np.sort(df[COUNTRY_QUESTION_TEXT].unique()),\n    value='India',\n    description='Country:',\n    disabled=False,\n)\n\ndef on_change(change):\n    global country\n    country = country_widget.value\n\ncountry = country_widget.value\n\ncountry_widget.observe(on_change)\ndisplay(country_widget, output)\n\ndf['country_agg'] = np.where(df[COUNTRY_QUESTION_TEXT]==country,country,'Others')","b135641a":"fig = go.Figure()\nfig.add_trace(go.Pie(values=df[COUNTRY_QUESTION_TEXT].value_counts().values,\n                     labels=df[COUNTRY_QUESTION_TEXT].value_counts().index,\n                     pull=(df[COUNTRY_QUESTION_TEXT].value_counts().index==country)*0.2,\n                     hoverinfo ='label+percent'))\n\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(title={'text':f\"{len(df[df[COUNTRY_QUESTION_TEXT]==country])*100\/len(df):.2f}% of all survey respondents are from {country}\"},\n                  uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()","dfe11f2a":"question_text = 'What is your age (# years)?'\n\n##### Donut subplots #####\noverall_pct = len(df[(df[question_text].isin(['18-21','22-24','25-29']))])*100\/len(df)\n\nage_pct = len(df[(df[COUNTRY_QUESTION_TEXT]==country) \n                 & (df[question_text].isin(['18-21','22-24','25-29']))])*100\/len(df[df[COUNTRY_QUESTION_TEXT]==country])\n\nif age_pct < overall_pct:\n    title = f\"{country} is older, with {age_pct:.0f}% of Kagglers being under under 30\"\nelif age_pct > overall_pct:\n    title = f\"{country} is younger, with {age_pct:.0f}% of Kagglers being under under 30\"\nelse:\n    title = f\"{age_pct:.0f}% of Kagglers from {country} are also under 30\"\n\ndonut_subplots(df, question_text, country, f\"{overall_pct:.0f}% of all Kagglers are less than 30 years old<br>{title}\")\n\n##### Barchart with global average #####\ndf['age1'] = df[question_text].str.split('-').str[0]\ndf['age1'].replace('70+','70', inplace=True)\ndf['age2'] = df[question_text].str.split('-').str[1]\ndf['age1'] = df.age1.astype('int')\ndf.age2.fillna(70, inplace=True)\ndf['age2'] = df.age2.astype('int')\ndf['Age'] = (df.age1+df.age2)\/2\n\nglobal_mean = df.Age.mean()\ncountry_mean = df[df.country_agg==country].Age.mean()\n\nif country_mean <= global_mean:\n    title = f\"With an average age of {country_mean:.0f},<br>Kagglers from {country} are generally {global_mean - country_mean:.0f} years younger than the average Kaggler\"\nelse:\n    title = f\"With an average age of {country_mean:.0f},<br>Kagglers from {country} are generally {global_mean - country_mean:.0f} years older than the average Kaggler\"\n\nbar_with_mean_num(df, 'Age', country, global_mean, title)\n\n##### Distribution compared to rest of the world #####\nplot_distribution(df, question_text, country, f'Age distribution of Kagglers from {country} compared to others', 'Age')","f3f33563":"question_text = 'What is your gender? - Selected Choice'\n\n##### Donut subplots #####\ndonut_subplots(df, question_text, country, \"Gender Ratio of Kagglers: Global vs Indian\")\n\n##### Barchart with global average for each gender #####\nbar_with_mean_cat(df, question_text, country, 'identified as')","cd948a53":"question_text = 'What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'\n\n##### Donut subplots #####\ndonut_subplots(df, question_text, country, \"Academic qualification of Kagglers\")\n\n##### Barchart with global average for each qualification #####\nbar_with_mean_cat(df, question_text, country, 'reported their qualification as')","ce8f5d6c":"question_text = 'Select the title most similar to your current role (or most recent title if retired): - Selected Choice'\n\ndf_filtered = df[~df[question_text].isna()]\n\n##### Donut subplots #####\ncomm = df[question_text].value_counts(normalize=True)[[0]]*100\ncomm_val = comm.index[0]\ncomm_pct = comm.values[0]\n\ncountry_comm = df_filtered[df_filtered[COUNTRY_QUESTION_TEXT]==country][question_text].value_counts(normalize=True)[[0]]*100\ncountry_comm_val = country_comm.index[0]\ncountry_comm_pct = country_comm.values[0]\n\ntitle = f\"Most Kagglers are {comm_val}s ({comm_pct:.0f}%)<br>\"\nif country_comm_val==comm_val:\n    title = f\"{title}In {country} too, most Kagglers are {country_comm_val}s ({country_comm_pct:.0f}%)\"\nelse:\n    title = f\"{title}However, in {country}, most Kagglers are {country_comm_val}s ({country_comm_pct:.0f}%)\"\n\ndonut_subplots(df, question_text, country, title)\n\n##### Barchart with global average for each job title #####\nbar_with_mean_cat(df, question_text, country, 'reported their job-title as')","59efa669":"question_text = 'What is your current yearly compensation (approximate $USD)?'\n\ndf_filtered = df[~df[question_text].isna()]\n\n##### Barchart with global average #####\ndf_filtered['comp1'] = df_filtered[question_text].str.split('-').str[0].apply(lambda x: x.replace(',','').replace('$','').replace('>','')).astype('int')\ndf_filtered['comp2'] = df_filtered[question_text].str.split('-').str[1].fillna('5000000').apply(lambda x: x.replace(',','')).astype('int')\ndf_filtered['Annual Compensation (USD)'] = (df_filtered.comp1+df_filtered.comp2)\/2\n\nglobal_mean = df_filtered['Annual Compensation (USD)'].mean()\ncountry_mean = df_filtered[df_filtered.country_agg==country]['Annual Compensation (USD)'].mean()\n\nif country_mean <= global_mean:\n    title = f\"With an average annual compensation of {country_mean:.0f} USD,<br>Kagglers from {country} generally earn less than the global average ({global_mean:.0f} USD)\"\nelse:\n    title = f\"With an average annual compensation of {country_mean:.0f} USD,<br>Kagglers from {country} generally earn more than the global average ({global_mean:.0f} USD)\"\n\nbar_with_mean_num(df_filtered, 'Annual Compensation (USD)', country, global_mean, title)\n\n##### Donut plot #####\nmost_common = df_filtered[df_filtered.country_agg==country].groupby(df_filtered[question_text]).size().sort_values(ascending=False)\nmost_common_val = most_common.index[0]\nmost_common_pct = most_common[0]*100\/most_common.sum()\n\nfig = px.pie(df_filtered[df_filtered.country_agg==country], question_text, \n             title=f'{most_common_pct:.0f}% of Kagglers from {country} reported an annual compensation between {most_common_val}', \n             hole=0.6)\nfig.update_traces(textposition='inside',textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()\n\n##### Distribution compared to rest of the world #####\ndf_filtered['comp1'] = df_filtered[question_text].str.split('-').str[0].apply(lambda x: x.replace(',','').replace('$','').replace('>','')).astype('int')\ndf_filtered['comp2'] = df_filtered[question_text].str.split('-').str[1].fillna('5000000').apply(lambda x: x.replace(',','')).astype('int')\ndf_filtered['clean_comp'] = df_filtered['comp1'].apply(str) + '-' + df_filtered['comp2'].apply(str)\ncategories = sorted(set(df_filtered['clean_comp'].values), key=(lambda x: int(x.split('-')[0])))\n\ndf_country_agg = df_filtered[df_filtered.country_agg==country][question_text].value_counts(normalize=True)\ndf_country_agg.index = pd.Categorical(df_country_agg.index)\ndf_country_agg.sort_index(inplace=True)\n\ndf_others_agg = df_filtered[df_filtered.country_agg=='Others'][question_text].value_counts(normalize=True)\ndf_others_agg.index = pd.Categorical(df_others_agg.index)\ndf_others_agg.sort_index(inplace=True)\n\nfor index in df_others_agg.index:\n        if index not in df_country_agg.index:\n            df_country_agg[index] = 0\ndf_country_agg.sort_index(inplace=True)\n\nfig = go.Figure(data=[\n    go.Bar(name=country, x=categories, y=df_country_agg.values*100),\n    go.Bar(name='Others', x=categories, y=df_others_agg.values*100)\n])\n\nfig.update_layout(\n    title=f'Annual Compensation (USD) of Kagglers from {country} compared to others',\n    xaxis_title='Annual Compensation (USD)',\n    yaxis_title='Percentage',\n    xaxis={'categoryorder':'array',\n           'categoryarray':categories}\n)\nfig.show()","dd8c7294":"question_text = 'For how many years have you been writing code and\/or programming?'\n\ndf_filtered = df[~df[question_text].isna()]\n\n##### Barchart with global average #####\ndf_filtered[question_text] = df_filtered[question_text].replace('< 1 years','0-1 years').replace('I have never written code','0-0').apply(lambda x: x.split()[0])\ndf_filtered['code1'] = df_filtered[question_text].str.split('-').str[0].replace('20+','20').astype('int')\ndf_filtered['code2'] = df_filtered[question_text].str.split('-').str[1].fillna('25').astype('int')\ndf_filtered.groupby([df_filtered[question_text]]+['code1','code2']).size()\ndf_filtered['Coding Experience'] = (df_filtered.code1+df_filtered.code2)\/2\n\nglobal_mean = df_filtered['Coding Experience'].mean()\ncountry_mean = df_filtered[df_filtered.country_agg==country]['Coding Experience'].mean()\n\nif country_mean <= global_mean:\n    title = f\"The average Kaggler from {country} has been coding for {country_mean:.1f} years,<br>less than the global average of {global_mean:.1f} years\"\nelse:\n    title = f\"The average Kaggler from {country} has been coding for {country_mean:.1f} years,<br>more than the global average of {global_mean:.1f} years\"\n\nbar_with_mean_num(df_filtered, 'Coding Experience', country, global_mean, title)\n\n##### Donut plot #####\nmost_common = df_filtered[df_filtered.country_agg==country].groupby(df_filtered[question_text]).size().sort_values(ascending=False)\nmost_common_val = most_common.index[0]\nmost_common_pct = most_common[0]*100\/most_common.sum()\n\nfig = px.pie(df_filtered[df_filtered.country_agg==country], question_text, \n             title=f'{most_common_pct:.0f}% of Kagglers from {country} have been coding for {most_common_val} years', \n             hole=0.6)\nfig.update_traces(textposition='inside',textinfo='percent+label')\nfig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide')\nfig.show()\n\n##### Distribution compared to rest of the world #####\n\ncategories = ['I have never written code','< 1 years','1-3 years','3-5 years','5-10 years','10-20 years','20+ years']\n\ndf_country_agg = df[df.country_agg==country][question_text].value_counts(normalize=True)\ndf_country_agg.index = pd.Categorical(df_country_agg.index, categories)\ndf_country_agg.sort_index(inplace=True)\n\ndf_others_agg = df[df.country_agg=='Others'][question_text].value_counts(normalize=True)\ndf_others_agg.index = pd.Categorical(df_others_agg.index, categories)\ndf_others_agg.sort_index(inplace=True)\n\nfor index in df_others_agg.index:\n        if index not in df_country_agg.index:\n            df_country_agg[index] = 0\ndf_country_agg.sort_index(inplace=True)\n\nfig = go.Figure(data=[\n    go.Bar(name=country, x=categories, y=df_country_agg.values*100),\n    go.Bar(name='Others', x=categories, y=df_others_agg.values*100)\n])\n# Change the bar mode\nfig.update_layout(\n    title=f'Coding Experience of respondents from {country} compared to Other countries',\n    xaxis_title=None,\n    yaxis_title='Percentage'\n)\nfig.show()","56e02884":"global_and_country_bars(df, 'What programming languages do you use on a regular basis?', country)","334bf2db":"global_and_country_bars(df, \"Which of the following integrated development environments (IDE's) do you use on a regular basis?\", country)","2f0cb768":"global_and_country_bars(df, 'Which of the following hosted notebook products do you use on a regular basis?', country)","b730e921":"question_text = 'What type of computing platform do you use most often for your data science projects? - Selected Choice'\nanswer_choice= 'A deep learning workstation (NVIDIA GTX, LambdaLabs, etc)'\n\ndf_filtered = df[(~df[question_text].isna()) & (df[question_text]!='None')]\n\n##### Donut subplots #####\noverall_pct = len(df_filtered[(df_filtered[question_text]==answer_choice)])*100\/len(df_filtered)\n\ncountry_pct = len(df_filtered[(df_filtered[COUNTRY_QUESTION_TEXT]==country) \n                 & (df_filtered[question_text]==answer_choice)])*100\/len(df_filtered[df_filtered[COUNTRY_QUESTION_TEXT]==country])\n\nif country_pct < overall_pct:\n    title = f\"In {country}, this decreases to {country_pct:.0f}%.\"\nelif country_pct > overall_pct:\n    title = f\"In {country}, this increases to {country_pct:.0f}%.\"\nelse:\n    title = f\", same as that in {country}.\"\n\ndonut_subplots(df_filtered, question_text, country, f\"{overall_pct:.0f}% of all Kagglers use {answer_choice} most often<br>{title}\")\n\n##### Distribution compared to rest of the world #####\nplot_distribution(df_filtered, question_text, country, f'Coding Platform preference of Kagglers from {country} compared to others')","8bec3bbd":"global_and_country_bars(df, 'What data visualization libraries or tools do you use on a regular basis?', country)","90c101c2":"global_and_country_bars(df, 'Which of the following machine learning frameworks do you use on a regular basis?', country)","b875f297":"global_and_country_bars(df, 'Which of the following ML algorithms do you use on a regular basis?', country)","c3657ceb":"global_and_country_bars(df,  'Which categories of computer vision methods do you use on a regular basis?', country)","efa49e5f":"global_and_country_bars(df, 'Which of the following natural language processing (NLP) methods do you use on a regular basis?', country)","03d16954":"global_and_country_bars(df, 'Which of the following cloud computing platforms do you use on a regular basis?', country)","7ca8908f":"global_and_country_bars(df, 'Do you use any of the following cloud computing products on a regular basis?', country)","b5a263f1":"global_and_country_bars(df,\"Do you use any of the following managed machine learning products on a regular basis?\", country)","af287477":"multi_question_text = \"Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you use on a regular basis?\"\nsingle_question_text = \"Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often? - Selected Choice\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, multi_question_text, country)\n\n##### Donut subplots #####\nget_popular_answer_and_plot(df, single_question_text, country)\n\n#### Distribution plot #####\nplot_distribution(df, single_question_text, country, f\"Big Data product preference of Kagglers from {country} compared to others\")","4e094166":"multi_question_text = \"Which of the following business intelligence tools do you use on a regular basis?\"\nsingle_question_text = \"Which of the following business intelligence tools do you use most often? - Selected Choice\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, multi_question_text, country)\n\n##### Donut subplots #####\nget_popular_answer_and_plot(df, single_question_text, country)\n\n#### Distribution plot #####\nplot_distribution(df, single_question_text, country, f\"BI Tool preference of Kagglers from {country} compared to others\")","36bcc874":"question_text = \"Do you use any automated machine learning tools (or partial AutoML tools) on a regular basis?\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, question_text, country)","3281e8af":"question_text = \"Which of the following automated machine learning tools (or partial AutoML tools) do you use on a regular basis?\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, question_text, country)","1e07c990":"question_text = \"Do you use any tools to help manage machine learning experiments?\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, question_text, country)","54af7670":"question_text = \"Where do you publicly share your data analysis or machine learning applications?\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, question_text, country, ['I do not share my work publicly'])","c000d0ab":"question_text = 'Approximately how many times have you used a TPU (tensor processing unit)?'\nanswer_choice= 'Never'\n\ndf_filtered = df[(~df[question_text].isna()) & (df[question_text]!='None')]\n\n##### Donut subplots #####\noverall_pct = len(df_filtered[(df_filtered[question_text]!=answer_choice)])*100\/len(df_filtered)\n\ncountry_pct = len(df_filtered[(df_filtered[COUNTRY_QUESTION_TEXT]==country) \n                 & (df_filtered[question_text]!=answer_choice)])*100\/len(df_filtered[df_filtered[COUNTRY_QUESTION_TEXT]==country])\n\nif country_pct < overall_pct:\n    title = f\"Kagglers from {country} are less experienced with TPUs, with {country_pct:.1f}% having used them atleast once.\"\nelif country_pct > overall_pct:\n    title = f\"Kagglers from {country} are more experienced with TPUs, with {country_pct:.1f}% having used them atleast once.\"\nelse:\n    title = f\"{country_pct:.1f}% of Kagglers from {country} have also used a TPU atleast once.\"\n\ndonut_subplots(df_filtered, question_text, country, f\"{overall_pct:.2f}% of all Kagglers have used a TPU atleast once<br>{title}\")\n\n##### Distribution compared to rest of the world #####\nplot_distribution(df_filtered, question_text, country, f'TPU Usage of Kagglers from {country} compared to others', 'TPU Usage')","f9aa5694":"question_text = \"On which platforms have you begun or completed data science courses?\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, question_text, country)","59754658":"question_text = \"Who\/what are your favorite media sources that report on data science topics?\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, question_text, country)","c27e60dc":"question_text = \"Which of the following cloud computing platforms do you hope to become more familiar with in the next 2 years?\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, question_text, country)","638a6816":"question_text = \"In the next 2 years, do you hope to become more familiar with any of these specific cloud computing products?\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, question_text, country)","d55179c6":"question_text = \"In the next 2 years, do you hope to become more familiar with any of these managed machine learning products?\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, question_text, country)","0ba5aa39":"question_text = \"Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you hope to become more familiar with in the next 2 years?\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, question_text, country)","3682e816":"question_text = \"Which of the following business intelligence tools do you hope to become more familiar with in the next 2 years?\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, question_text, country)","d4871f0f":"question_text = \"Which categories of automated machine learning tools (or partial AutoML tools) do you hope to become more familiar with in the next 2 years?\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, question_text, country)","475ce5af":"question_text = \"Which specific automated machine learning tools (or partial AutoML tools) do you hope to become more familiar with in the next 2 years?\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, question_text, country)","f0fd4c24":"question_text = \"In the next 2 years, do you hope to become more familiar with any of these tools for managing ML experiments?\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, question_text, country)","7a360c62":"question_text = 'What is the size of the company where you are employed?'\nanswer_choice = ['0-49 employees','50-249 employees','250-999 employees']\n\ndf_filtered = df[(~df[question_text].isna()) & (df[question_text]!='None')]\n\n##### Donut subplots #####\noverall_pct = len(df_filtered[(df_filtered[question_text].isin(answer_choice))])*100\/len(df_filtered)\ncountry_pct = len(df_filtered[(df_filtered[COUNTRY_QUESTION_TEXT]==country) \n                 & (df_filtered[question_text].isin(answer_choice))])*100\/len(df_filtered[df_filtered[COUNTRY_QUESTION_TEXT]==country])\n\nif country_pct < overall_pct:\n    title = f\"For {country}, this percentage decreases to {country_pct:.0f}%<br>Kagglers from {country} tend to work in larger companies\"\nelif country_pct > overall_pct:\n    title = f\"For {country}, this percentage increases to {country_pct:.0f}%<br>Kagglers from {country} tend to work in smaller companies\"\nelse:\n    title = f\"At {country_pct:.0f}%, it is the same for {country} too\"\n\ndonut_subplots(df_filtered, question_text, country, f\"{overall_pct:.0f}% of all Kagglers work in companies with less than 1000 employees<br>{title}\")\n\n##### Distribution compared to rest of the world #####\nplot_distribution(df_filtered, question_text, country, f'Workplace size of Kagglers from {country} compared to others')","3b72beb8":"question_text = 'Approximately how many individuals are responsible for data science workloads at your place of business?'\nanswer_choice = ['0','1-2','3-4']\n\ndf_filtered = df[(~df[question_text].isna()) & (df[question_text]!='None')]\n\n##### Donut subplots #####\noverall_pct = len(df_filtered[(df_filtered[question_text].isin(answer_choice))])*100\/len(df_filtered)\ncountry_pct = len(df_filtered[(df_filtered[COUNTRY_QUESTION_TEXT]==country) \n                 & (df_filtered[question_text].isin(answer_choice))])*100\/len(df_filtered[df_filtered[COUNTRY_QUESTION_TEXT]==country])\n\nif country_pct < overall_pct:\n    title = f\"For {country}, this percentage decreases to {country_pct:.0f}%<br>Kagglers from {country} work in companies with larger Data Science teams\"\nelif country_pct > overall_pct:\n    title = f\"For {country}, this percentage increases to {country_pct:.0f}%<br>Kagglers from {country} work in companies with smaller Data Science teams\"\nelse:\n    title = f\"At {country_pct:.0f}%, it is the same for {country} too\"\n\ndonut_subplots(df_filtered, question_text, country, \n               f\"{overall_pct:.0f}% of all Kagglers work in companies with less than 5 individuals handling Data Science workloads<br>{title}\")\n\n##### Distribution compared to rest of the world #####\nplot_distribution(df_filtered, question_text, country, f'Company Data Science Team size of Kagglers from {country} compared to others')","af143d2f":"question_text = 'Does your current employer incorporate machine learning methods into their business?'\nanswer_choice = ['No (we do not use ML methods)']\n\ndf_filtered = df[(~df[question_text].isna()) & (df[question_text]!='None')]\n\n##### Donut subplots #####\noverall_pct = len(df_filtered[(df_filtered[question_text].isin(answer_choice))])*100\/len(df_filtered)\ncountry_pct = len(df_filtered[(df_filtered[COUNTRY_QUESTION_TEXT]==country) \n                 & (df_filtered[question_text].isin(answer_choice))])*100\/len(df_filtered[df_filtered[COUNTRY_QUESTION_TEXT]==country])\n\nif country_pct < overall_pct:\n    title = f\"For {country}, this percentage decreases to {country_pct:.0f}%<br>More Kagglers from {country} work in a company using ML methods\"\nelif country_pct > overall_pct:\n    title = f\"For {country}, this percentage increases to {country_pct:.0f}%<br>Less Kagglers from {country} work in a company using ML methods\"\nelse:\n    title = f\"At {country_pct:.0f}%, it is the same for {country} too\"\n\ndonut_subplots(df_filtered, question_text, country, \n               f\"{overall_pct:.0f}% of all Kagglers work in companies which don\\'t use ML methods<br>{title}\")\n\n##### Distribution compared to rest of the world #####\nplot_distribution(df_filtered, question_text, country, f'ML adoption in workplaces of Kagglers from {country} compared to others')","0de18df9":"question_text = \"Select any activities that make up an important part of your role at work\"\n\n##### Bar charts #####\nglobal_and_country_bars(df, question_text, country, drop_vals=False, title=False)","b7d2faed":"question_text = 'Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?'\nanswer_choice = ['0 (USD)']\n\ndf_filtered = df[(~df[question_text].isna()) & (df[question_text]!='None')]\ndf_filtered[question_text] = df_filtered[question_text].apply(lambda x: x.replace('$','').replace(',',''))\n\n##### Donut subplots #####\noverall_pct = len(df_filtered[(df_filtered[question_text].isin(answer_choice))])*100\/len(df_filtered)\ncountry_pct = len(df_filtered[(df_filtered[COUNTRY_QUESTION_TEXT]==country) \n                 & (df_filtered[question_text].isin(answer_choice))])*100\/len(df_filtered[df_filtered[COUNTRY_QUESTION_TEXT]==country])\n\n\nif country_pct < overall_pct:\n    title = f\"For {country}, this percentage decreases to {country_pct:.1f}%<br>Less Kagglers from {country} work in a company not spending on ML\/Cloud\"\nelif country_pct > overall_pct:\n    title = f\"For {country}, this percentage increases to {country_pct:.1f}%<br>More Kagglers from {country} work in a company not spending on ML\/Cloud\"\nelse:\n    title = f\"At {country_pct:.0f}%, it is the same for {country} too\"\n\ndonut_subplots(df_filtered, question_text, country, \n               f\"{overall_pct:.1f}% of all Kagglers work in companies which don\\'t spend on ML\/Cloud<br>{title}\")\n\n##### Distribution compared to rest of the world #####\nplot_distribution(df_filtered, question_text, country, f'Spend on ML\/Cloud in workplaces of Kagglers from {country} compared to others')","944362d8":"question_text = 'What is the primary tool that you use at work or school to analyze data? (Include text response) - Selected Choice'\nanswer_choice = ['Cloud-based data software & APIs (AWS, GCP, Azure, etc.)']\n\ndf_filtered = df[(~df[question_text].isna()) & (df[question_text]!='None')]\n\n##### Donut subplots #####\noverall_pct = len(df_filtered[(df_filtered[question_text].isin(answer_choice))])*100\/len(df_filtered)\ncountry_pct = len(df_filtered[(df_filtered[COUNTRY_QUESTION_TEXT]==country) \n                 & (df_filtered[question_text].isin(answer_choice))])*100\/len(df_filtered[df_filtered[COUNTRY_QUESTION_TEXT]==country])\n\n\nif country_pct < overall_pct:\n    title = f\"For {country}, this percentage decreases to {country_pct:.1f}%<br>Less Kagglers from {country} use clud-based data software to analyze data\"\nelif country_pct > overall_pct:\n    title = f\"For {country}, this percentage increases to {country_pct:.1f}%<br>More Kagglers from {country} use clud-based data software to analyze data\"\nelse:\n    title = f\"At {country_pct:.0f}%, it is the same for {country} too\"\n\ndonut_subplots(df_filtered, question_text, country, \n               f\"{overall_pct:.1f}% of all Kagglers use clud-based data software to analyze data<br>{title}\")\n\n##### Distribution compared to rest of the world #####\nplot_distribution(df_filtered, question_text, country, f'Primary Tool used at Work in workplaces of Kagglers from {country} compared to others')","e065547e":"## 16. NLP Methods\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Which of the following natural language processing (NLP) methods do you use on a regular basis?<\/b>'<\/font>","9a02637f":"## 42. Primary Tool used at Work\n<font color=red>Only includes respondents who answered the question '<b>What is the primary tool that you use at work or school to analyze data?<\/b>'<\/font>","515a566e":"## 9. IDE\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Which of the following integrated development environments (IDE's) do you use on a regular basis?<\/b>'<\/font>","edbc286f":"## 39. Machine Learning Adoption at Work\n<font color=red>Only includes respondents who answered the question '<b>Does your current employer incorporate machine learning methods into their business?<\/b>'<\/font>","5ad992d4":"## 29. Cloud Computing Platforms\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Which of the following cloud computing platforms do you hope to become more familiar with in the next 2 years?<\/b>'<\/font>","30d819b3":"## 17. Cloud Computing Platforms\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Which of the following cloud computing platforms do you use on a regular basis?<\/b>'<\/font>","75facb19":"## 18. Cloud Computing Products\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Do you use any of the following cloud computing products on a regular basis?<\/b>'<\/font>","48bd6de5":"## 40. Role at Work\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Select any activities that make up an important part of your role at work<\/b>'<\/font>","1568cc2b":"## 5. Job title\n<font color=red> Only includes respondents who answered the question \"<b>Select the title most similar to your current role (or most recent title if retired)<\/b>\" <\/font>","3a8b11d7":"## 6. Annual Compensation (in USD)\n<font color=red>Only includes respondents who have answered the question '<b>What is your current yearly compensation?<\/b>'<br>Compensation >1,000,000 has been limited to 5,000,000 for calculation purposes<\/font>","1d6f535e":"## 22. ML Lifecycle Automation Tools\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Do you use any automated machine learning tools (or partial AutoML tools) on a regular basis?<\/b>'<\/font>","39a3a542":"## 14. Machine Learning Algorithms\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Which of the following ML algorithms do you use on a regular basis?<\/b>'<\/font>","4ce640b4":"## 35. Machine Learning \/ Partial AutoML Tools\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Which specific automated machine learning tools (or partial AutoML tools) do you hope to become more familiar with in the next 2 years?<\/b>'<\/font>","2e90c055":"## 41. Spend on ML\/Cloud\n<font color=red>Only includes respondents who answered the question '<b>Approximately how much money have you (or your team) spent on machine learning and\/or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?<\/b>'<\/font>","c059e8bf":"# Objective\n\n## This notebook aims to analyze how Kagglers from any chosen Country differ from the Rest of the World\n\n<b>Data Source<\/b>: kaggle_survey_2021_responses.csv\n\n\"Copy and Edit\" this notebook to choose a country, and watch how the graphs and insights change accordingly!\n\n<b>Please don't forget to <font color=green>UPVOTE<\/font> if you find this interesting. Feedback is more than welcome :)<\/b>\n\n### This analysis convers almost**<font color=green>ALL<\/font>** the questions asked in the Kaggle 2021 DS and ML survey, divided into the below sections:\n* Demographics\n* Personal Background\n* Personal Preferences\n* Learning Preferences\n* Workplace\n\n### So hold on tight, this is going to take a while!","a18f93fb":"## 28. Data Science Media Sources\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Who\/what are your favorite media sources that report on data science topics?<\/b>'<\/font>","91c77b6d":"## 26. TPU Usage\n<font color=red>Only includes respondents who have answered the question '<b>Approximately how many times have you used a TPU (tensor processing unit)?<\/b>'<\/font>","6d41fe0d":"# Demographics\n## 1. Country","ac47c50a":"## 13. Machine Learning Frameworks\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Which of the following machine learning frameworks do you use on a regular basis?<\/b>'<\/font>","32da8ecd":"## 38. Data Science Team Size\n<font color=red>Only includes respondents who answered the question '<b>Approximately how many individuals are responsible for data science workloads at your place of business?<\/b>'<\/font>","e5f1f716":"## 2. Age","a40803ba":"## 10. Hosted Notebooks\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Which of the following hosted notebook products do you use on a regular basis?<\/b>'<\/font>","dc1a4de3":"## 15. Computer Vision Methods\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Which categories of computer vision methods do you use on a regular basis?<\/b>'<\/font>","d0dd5df2":"# Thanks!\n\nThanks for going through my notebook.  \nIf you liked it, please don't forget to <font color=green><b>UPVOTE<\/b><\/font>, and suggest what else you would like to be added.  \nAlso, would love to know which analysis you found particularly interesting, and why.\n\n<b>I am working on making the code as reusable as possible across questions\/plots\/countries. If you see any further scope for making the code more modular, please do let me know :)<\/b>\n\n## Check-out my similar works on the Kaggle 2020 survey\n* [Kaggle 2020: Your Country VS the World](https:\/\/www.kaggle.com\/siddhantsadangi\/kaggle-2020-your-country-vs-the-world)\n* [Kaggle 2020: India VS the World](https:\/\/www.kaggle.com\/siddhantsadangi\/kaggle-2020-india-vs-the-world-all-questions)\n* [Kaggle 2020: USA VS the World](https:\/\/www.kaggle.com\/siddhantsadangi\/kaggle-2020-usa-vs-the-world-all-questions)","a7d87453":"## 20. Big Data Products\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you use on a regular basis?<\/b>' and '<b>Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often?<\/b>' <\/font>","1729d0e1":"## 25. Data Anaysis sharing\/ML Experiment Deployment Platform\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Where do you publicly share your data analysis or machine learning applications?<\/b>'<\/font>","22a052d9":"# Personal Background\n## 4. Academic qualification\n<font color=red> Only includes respondents who answered the question \"<b>What is the highest level of formal education that you have attained or plan to attain within the next 2 years?<\/b>\" <\/font> ","fead71f5":"## 32. Big Data Products\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you hope to become more familiar with in the next 2 years?<\/b>'<\/font>","f98ae5c9":"## 30. Cloud Computing Products\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>In the next 2 years, do you hope to become more familiar with any of these specific cloud computing products?<\/b>'<\/font>","b0751cf2":"## 33. Business Intelligence Tools\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Which of the following business intelligence tools do you hope to become more familiar with in the next 2 years?<\/b>'<\/font>","7ef4c310":"## 11. Computing Platform\n\n<font color=red>Only includes respondents who answered the question '<b>What type of computing platform do you use most often for your data science projects?<\/b>'<\/font>","ec010d56":"## 7. Coding Experience\n<font color=red> Only includes respondents who answered the question \"<b>For how many years have you been writing code and\/or programming?<\/b>\"<br>Experience >20 years has been limited to 25 for calculation purposes<\/font>","4f484143":"## 34. ML Workflow Automation Tools\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Which categories of automated machine learning tools (or partial AutoML tools) do you hope to become more familiar with in the next 2 years?<\/b>'<\/font>","770a66e5":"# Personal Preferences\n## 8. Programming language\n<font color=red>Only includes respondents who chose atleast one option for the question \"<b>What programming languages do you use on a regular basis?<\/b>\"<\/font>","da8dd45c":"## 31. Machine Learning Products\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>In the next 2 years, do you hope to become more familiar with any of these specific machine learning products?<\/b>'<\/font>","0432d9ae":"# Learning Preferences\n## 27. Data Science Learning Platform\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>On which platforms have you begun or completed data science courses?<\/b>'<\/font>","8994dae4":"## 23. AutoML Tools\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Which of the following automated machine learning tools (or partial AutoML tools) do you use on a regular basis?<\/b>'<\/font>","8b6c7de3":"## 12. Data Visualization Library\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>What data visualization libraries or tools do you use on a regular basis?<\/b>'<\/font>","02a3e4d2":"<font color=red>Ipywidgets do not work in committed Kaggle notebooks. To select a country, \"Copy and Edit\" the notebook.<\/font>","5f00f271":"## 3. Gender diversity","55486a4f":"## 36. ML Experiment Management Tools\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>In the next 2 years, do you hope to become more familiar with any of these tools for managing ML experiments?<\/b>'<\/font>","3ff946d6":"## 21. Business Intelligence Tools\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Which of the following business intelligence tools do you use on a regular basis?<\/b>'<\/font>","602118b3":"## 24. ML Experiment Management Tools\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Do you use any tools to help manage machine learning experiments?<\/b>'<\/font>","b332fde8":"# Workplace\n\n## 37. Size\n<font color=red>Only includes respondents who answered the question '<b>What is the size of the company where you are employed?<\/b>'<\/font>","792932b2":"## 19. Machine Learning Products\n<font color=red>Only includes respondents who chose atleast one option for the question '<b>Do you use any of the following managed machine learning products on a regular basis?<\/b>'<\/font>"}}