{"cell_type":{"f30a9a28":"code","0e0623ec":"code","ca5e0f10":"code","1b705b18":"code","e4c6f015":"code","e8212635":"code","b7e62632":"code","a4e0f11d":"code","238e53db":"code","b5e0eaca":"code","8e96c3a4":"code","6a08747f":"code","96eb9202":"code","c7ce7264":"code","0b60fc06":"code","efd91628":"code","c1356e3d":"code","bd9911fc":"code","0096871c":"code","97b5e20b":"code","e6b8a5b1":"code","07f2078b":"code","8cdcd2de":"code","0d367d19":"code","bb56aedb":"code","9c6e8654":"code","abc914fa":"code","8566f182":"code","2ae7b20b":"code","b14e4ce9":"code","c4931dc2":"code","f1627e71":"code","fa8db629":"code","dd7aa8d5":"code","821c185a":"code","cb0a5ef4":"code","8ffeb57e":"code","c9fee39b":"code","8e38cf88":"code","b4fbee6d":"code","cdfa9496":"code","4b6e5566":"code","e639a793":"code","2c034434":"markdown","3ddcc83e":"markdown","8d1e6037":"markdown","e86d3a7f":"markdown","02668d62":"markdown","b8079ab7":"markdown","59c6babf":"markdown"},"source":{"f30a9a28":"import numpy as np\nimport pandas as pd\nimport random as rnd\n\n# visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# machine learning\nfrom sklearn.linear_model import LogisticRegressionCV\nfrom sklearn.model_selection import train_test_split\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n       print(os.path.join(dirname, filename))","0e0623ec":"df=pd.read_csv('\/kaggle\/input\/train.csv')\ndf_test=pd.read_csv('\/kaggle\/input\/test.csv')\ntest_PassengerId=df_test['PassengerId']\ndf=df.append(df_test)","ca5e0f10":"df[df.Survived.isnull()].head()","1b705b18":"df = df.drop(['Ticket', 'Cabin'], axis=1)","e4c6f015":"df['Title'] = df.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)","e8212635":"df['Title'] = df['Title'].replace(['Lady', 'Countess','Capt', 'Col',\\\n    'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\n\ndf['Title'] = df['Title'].replace('Mlle', 'Miss')\ndf['Title'] = df['Title'].replace('Ms', 'Miss')\ndf['Title'] = df['Title'].replace('Mme', 'Mrs')\n    \n","b7e62632":"title_mapping={'Mr':0,'Rare':1,'Master':2,'Miss':3,'Mrs':4}\ndf['Title']=df['Title'].map(title_mapping)\ndf['Title']=df['Title'].fillna(0)\ndf.head()","a4e0f11d":"df['Sex'] = df['Sex'].map( {'female': 1, 'male': 0} ).astype(int)","238e53db":"guess_Ages=np.zeros((2,3))\nguess_Ages","b5e0eaca":"for i in range(0,2):\n    for j in range(0,3):\n        guess_df=df[(df['Sex']==i)&(df['Pclass']==j+1)]['Age'].dropna()\n        Age_guess=guess_df.median()\n        guess_Ages[i,j] = int( Age_guess\/0.5 + 0.5 ) * 0.5\n\nfor i in range(0,2):\n    for j in range(0,3):\n        df.loc[(df.Age.isnull())&(df['Sex']==i)&(df['Pclass']==j+1),'Age']=guess_Ages[i,j]\n    \ndf['Age']=df['Age'].astype(int)","8e96c3a4":"df['AgeBand']=pd.cut(df['Age'],5)","6a08747f":"df.loc[ df['Age'] <= 16, 'Age'] = 0\ndf.loc[(df['Age'] > 16) & (df['Age'] <= 32), 'Age'] = 1\ndf.loc[(df['Age'] > 32) & (df['Age'] <= 48), 'Age'] = 2\ndf.loc[(df['Age'] > 48) & (df['Age'] <= 64), 'Age'] = 3\ndf.loc[ df['Age'] > 64, 'Age']=4","96eb9202":"df=df.drop(['PassengerId','Name'],axis=1)","c7ce7264":"df= df.drop(['AgeBand'], axis=1)","0b60fc06":"df['FamilySize']=df['SibSp']+df['Parch']+1","efd91628":"df['IsAlone']=0\ndf.loc[(df['FamilySize']==1),'IsAlone']=1","c1356e3d":"df = df.drop(['Parch', 'SibSp', 'FamilySize'], axis=1)","bd9911fc":"df['AgePclass']=df.Age*df.Pclass","0096871c":"freq_port=df.Embarked.dropna().mode()[0]","97b5e20b":"df['Embarked'] = df['Embarked'].fillna(freq_port)","e6b8a5b1":"#why not C:0,Q:1,S:2?\ndf['Embarked']=df['Embarked'].map({'S': 0, 'C': 1, 'Q': 2}).astype(int)","07f2078b":"df['Fare'].fillna(df['Fare'].dropna().median(), inplace=True)","8cdcd2de":"df['FareBand'] = pd.qcut(df['Fare'], 4)","0d367d19":"df.loc[ df['Fare'] <= 7.91, 'Fare'] = 0\ndf.loc[(df['Fare'] > 7.91) & (df['Fare'] <= 14.454), 'Fare'] = 1\ndf.loc[(df['Fare'] > 14.454) & (df['Fare'] <= 31), 'Fare']   = 2\ndf.loc[ df['Fare'] > 31, 'Fare'] = 3\ndf['Fare'] = df['Fare'].astype(int)\n\ndf = df.drop(['FareBand'], axis=1)    ","bb56aedb":"df_train=df[df['Survived'].notnull()]\nrate=df_train['Survived'].sum()\/(df_train['Survived'].count()-df_train['Survived'].sum())","9c6e8654":"def get_woe_data(cut):\n    grouped=df_train['Survived'].groupby(cut,as_index = True).value_counts()\n    woe=np.log(grouped.unstack().iloc[:,1]\/grouped.unstack().iloc[:,0]\/rate)\n    return woe\n","abc914fa":"Pclass_WOE=get_woe_data(df_train['Pclass'])\nSex_WOE=get_woe_data(df_train['Sex'])\nAge_WOE=get_woe_data(df_train['Age'])\nFare_WOE=get_woe_data(df_train['Fare'])\nEmbarked_WOE=get_woe_data(df_train['Embarked'])\nTitle_WOE=get_woe_data(df_train['Title'])\nIsAlone_WOE=get_woe_data(df_train['IsAlone'])\nAgePclass_WOE=get_woe_data(df_train['AgePclass'])","8566f182":"def get_IV_data(cut,cut_woe):\n    grouped=df_train['Survived'].groupby(cut,as_index = True).value_counts()\n    cut_IV=((grouped.unstack().iloc[:,1]\/df_train[\"Survived\"].sum()-grouped.unstack().iloc[:,0]\/(df_train[\"Survived\"].count()-df_train[\"Survived\"].sum()))*cut_woe).sum()    \n    return cut_IV\n\nPclass_IV=get_IV_data(df_train['Pclass'],Pclass_WOE)\nSex_IV=get_IV_data(df_train['Sex'],Sex_WOE)\nAge_IV=get_IV_data(df_train['Age'],Age_WOE)\nFare_IV=get_IV_data(df_train['Fare'],Fare_WOE)\nEmbarked_IV=get_IV_data(df_train['Embarked'],Embarked_WOE)\nTitle_IV=get_IV_data(df_train['Title'],Title_WOE)\nIsAlone_IV=get_IV_data(df_train['IsAlone'],IsAlone_WOE)\nAgePclass_IV=get_IV_data(df_train['AgePclass'],AgePclass_WOE)\n\nIV=pd.DataFrame([Pclass_IV,Sex_IV,Age_IV,Fare_IV,Embarked_IV,Title_IV,IsAlone_IV,AgePclass_IV],index=['Pclass_IV','Sex_IV','Age_IV','Fare_IV','Embarked_IV','Title_IV','IsAlone_IV','AgePclass_IV'],columns=['IV'])\niv=IV.plot.bar(color='b',alpha=0.3,rot=30,figsize=(10,5),fontsize=(10))\niv.set_title('\u81ea\u53d8\u91cf\u4e0eIV\u503c\u5206\u5e03\u56fe',fontsize=(15))\niv.set_xlabel('\u81ea\u53d8\u91cf',fontsize=(15))\niv.set_ylabel('IV',fontsize=(15))\nIV","2ae7b20b":"import seaborn as sns\ncorr=df_train.corr()\nfig=plt.figure(figsize=(9,9))\nax1=fig.add_subplot(1,1,1)\nsns.heatmap(corr,annot=True,cmap='YlGnBu',ax=ax1,annot_kws={'size':12,'weight':'bold','color':'blue'})","b14e4ce9":"df['Pclass']=df['Pclass']-1\ndf_train['Pclass']=df_train['Pclass']-1\n#df['AgePclass']=df['AgePclass']-1\n#df_train['AgePclass']=df_train['AgePclass']-1\n","c4931dc2":"df=df.drop(['AgePclass'],axis=1)\n#df=df.drop(['Age'],axis=1)\n#df=df.drop(['Sex'],axis=1)\ndf_train=df_train.drop(['AgePclass'],axis=1)\n#df_train=df_train.drop(['Age'],axis=1)\n#df_train=df_train.drop(['Sex'],axis=1)","f1627e71":"df_train.describe()","fa8db629":"df.head()","dd7aa8d5":"for each in ['Embarked','Fare','Pclass','Title','IsAlone','Age','Sex']:\n    df[each]=df[each].apply(lambda x:eval(each+'_WOE').iloc[x])","821c185a":"df_train=df[df['Survived'].notnull()]\ndf_test=df[df['Survived'].isnull()]\nx_train = df_train[['Embarked','Fare','Pclass','Title','IsAlone','Age','Sex']]\ny_train = df_train['Survived']\nmodel=LogisticRegressionCV(cv=3,random_state=0)\nmodel.fit(x_train,y_train)","cb0a5ef4":"df_test.head()","8ffeb57e":"print(model.score(x_train,y_train))","c9fee39b":"df_test.isnull().sum()","8e38cf88":"y_pred=model.predict(df_test[['Embarked','Fare','Pclass','Title','IsAlone','Age','Sex']])","b4fbee6d":"y_pred=y_pred.astype(int)","cdfa9496":"y_pred","4b6e5566":"Submission = pd.DataFrame({ 'PassengerId': test_PassengerId,\n                            'Survived': y_pred })\nSubmission.to_csv(\"Submission.csv\", index=False)","e639a793":"Submission","2c034434":"select feature\nstrong correlation: Pclass&Fare,Sex&title,Age&Age*Pclass;\nwe may drop Age*Pclass,Fare,sex feature.","3ddcc83e":"calculate WOE and IV;transfer to WOE","8d1e6037":"Let us start by preparing an empty array to contain guessed Age values based on Pclass x Gender combinations.","e86d3a7f":"creating new feature 'Title' from Name","02668d62":"We can convert the categorical titles to ordinal.","b8079ab7":"We can replace many titles with a more common name or classify them as Rare.","59c6babf":"Let us create Age bands and determine correlations with Survived."}}