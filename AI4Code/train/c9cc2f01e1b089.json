{"cell_type":{"eb002a11":"code","f9e53203":"code","46468309":"code","6db74150":"code","f130690e":"code","94938e68":"code","49b4eef9":"code","bdfa4b82":"code","0dbc54d5":"code","ff0fb9ca":"code","1961ae44":"code","da4bf4af":"code","6f572c2c":"code","46e01dbc":"code","e2025713":"code","83a3e3f2":"code","3bed2074":"code","9da3654c":"code","e8d86d56":"code","b435552f":"code","5064fd42":"code","670c8d5c":"code","c5eaa8ae":"code","dc2192d3":"code","ebd53b54":"code","afbab280":"code","eb2d93f5":"code","20c3aba4":"code","cb817221":"code","45a7943d":"code","6d10a5ad":"code","0bcba9da":"code","7bd468ae":"code","781bd19f":"code","8be5d3b5":"code","208c2812":"code","2aa524da":"code","57e144d9":"code","c9ca0722":"code","1d6a5a3b":"code","d096fb3a":"code","a79478c1":"markdown","14f15619":"markdown","0eb67d0d":"markdown","837147cc":"markdown","2b2b996b":"markdown","6d0880c7":"markdown","a534095f":"markdown","936bbeac":"markdown","2aa9035d":"markdown","7078be3c":"markdown","f12c1025":"markdown","adc4e45d":"markdown","5c9962dd":"markdown","76afed50":"markdown","9f1df0d8":"markdown","641d86ad":"markdown","2a0b94cd":"markdown","05e5e1ba":"markdown","7fc7a1b0":"markdown","41b11a11":"markdown","92105f74":"markdown","4470e905":"markdown","1773f35c":"markdown"},"source":{"eb002a11":"#Importing libraries \ud83d\udcda (Hidden Input\/Output)\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.tree import plot_tree\nfrom sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score\nfrom sklearn.model_selection import GridSearchCV\nsns.set_context(\"poster\")\n\nwarnings.filterwarnings(\"ignore\")","f9e53203":"# Reading the dataset and having a look at the first 5 rows of the dataframe... (Hidden Input)\n\ndf = pd.read_csv(\"..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")\ndf.head().style.set_properties(**{\"background-color\": \"#FF87CA\",\"color\": \"black\",\n                                     \"border-color\": \"black\",\"font-size\":\"10pt\",'width': 200})","46468309":"# Checking the number of rows and columns (Hidden Input)\nprint(\"***********************************\")\nprint(\"Number of Rows:\", df.shape[0])\nprint(\"Number of Columns:\", df.shape[1])\n\n# Checking the percentage of null values (Hidden Input)\n\nprint(\"*****Percentage of Null Values*****\")\nprint(round(df.isnull().sum() * 100\/df.shape[0]))\nprint(\"***********************************\")","6db74150":"# Descriptive Statistics of the numerical colums and percentile to find any potential outliers... (Hidden Input)\n\ndf.describe(percentiles=[0.25,0.5,0.75,0.90,0.95,0.98,0.99]).style.set_properties(**{\"background-color\": \"#FF87CA\",\"color\": \"black\",\n                                     \"border-color\": \"black\",\"font-size\":\"10pt\",'width': 200})","f130690e":"# Visualizing the feature: \"age\" (Hidden Input)\n\nplt.figure(figsize=[10,5])\nsns.boxplot(df[\"age\"], color=\"#FF87CA\")\nplt.title(\"Checking for Outliers in Age\", size=40, pad=20)\nsns.despine()\nplt.show()","94938e68":"# Visualizing the feature: \"sex\" Assuming 0=Female and 1=Male (No Metadata was provided for gender) (Hidden Input)\n\nplt.figure(figsize=[10,5])\nsns.barplot(x = df[\"sex\"], y = df[\"output\"], palette=['#FF87CA','black'], ci=0)\nplt.xticks(ticks=[0,1], labels=['Female','Male'])\nplt.title(\"Understanding Who Is At Risk\", size=40, pad=20)\nsns.despine()\nplt.show()","49b4eef9":"# Visualizing the feature: \"trtbps\" (Hidden Input)\n\nplt.figure(figsize=[10,5])\nsns.boxplot(df[\"trtbps\"], color=\"#FF87CA\")\nplt.title(\"Checking for Outliers in Resting BP\", size=40, pad=20)\nsns.despine()\nplt.show()","bdfa4b82":"# Visualizing the feature: \"chol\"\n\nplt.figure(figsize=[10,5])\nsns.boxplot(df[\"chol\"], color=\"#FF87CA\")\nplt.title(\"Checking for Outliers in Cholestrol\", size=40, pad=20)\nsns.despine()\nplt.show()","0dbc54d5":"# Removing the top 1 percentile...\n\nQ3 = df[\"chol\"].quantile(0.99)\ndf = df[df[\"chol\"] <= Q3]","ff0fb9ca":"# Visualizing the feature: \"fbs\" (Hidden Input)\n\nplt.figure(figsize=[10,5])\nsns.barplot(x = df[\"fbs\"], y = df[\"output\"], palette=['#FF87CA','black'], ci=0)\nplt.xticks(ticks=[0,1], labels=['False','True'])\nplt.title(\"Understanding Fasting Blood Sugar vs Risk\", size=40, pad=20)\nsns.despine()\nplt.show()","1961ae44":"# Visualizing the feature: \"restecg\" (Hidden Input)\n\nplt.figure(figsize=[10,5])\nsns.boxplot(df[\"restecg\"], color=\"#FF87CA\")\nplt.title(\"Checking for Outliers in Resting ECG Results\", size=40, pad=20)\nsns.despine()\nplt.show()","da4bf4af":"# Visualizing the feature: \"thalachh\" (Hidden Input)\n\nplt.figure(figsize=[10,5])\nsns.boxplot(df[\"thalachh\"], color=\"#FF87CA\")\nplt.title(\"Checking for Outliers in Max Heart Rate Achieved\", size=40, pad=20)\nsns.despine()\nplt.show()","6f572c2c":"# Visualizing the feature: \"exng\" (Hidden Input)\n\nplt.figure(figsize=[10,5])\nsns.barplot(x = df[\"exng\"], y = df[\"output\"], palette=['#FF87CA','black'], ci=0)\nplt.xticks(ticks=[0,1], labels=['No','Yes'])\nplt.title(\"Understanding Exercise Induces Agnia vs Risk\", size=40, pad=20)\nsns.despine()\nplt.show()","46e01dbc":"# Visualizing the feature: \"oldpeak\" (Hidden Input)\n\nplt.figure(figsize=[10,5])\nsns.boxplot(df[\"oldpeak\"], color=\"#FF87CA\")\nplt.title(\"Checking for Outliers in Prev. Peak\", size=40, pad=20)\nsns.despine()\nplt.show()","e2025713":"# Removing the top 1 percentile...\n\nQ3 = df[\"oldpeak\"].quantile(0.99)\ndf = df[df[\"oldpeak\"] <= Q3]","83a3e3f2":"# Creating a heatmap (Hidden Input)\n\nplt.figure(figsize=[25,12])\nheat = df.corr()\nsns.heatmap(heat, cmap=['#FF87CA','#ff96d1','#ffb0dc','#ffcce8','white'], annot=True)\nplt.title(\"Checking for Correlations\", size=40, pad=20)\nsns.despine()\nplt.show()","3bed2074":"# Seperating the target(y) and the independent(X) features...\n\ny = df.pop(\"output\")\nX = df","9da3654c":"# Performing the train_test_split...\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state = 42)","e8d86d56":"# Verifying the split...\n\nX_train.shape, y_train.shape","b435552f":"# Building a random Decision Tree as our first model. Here we will not tune it. Instead define a max_depth of 3\n\ndt = DecisionTreeClassifier(max_depth = 3)\n\ndt.fit(X_train, y_train)","5064fd42":"# Visualizing the result from the Decision Tree\n\nplt.figure(figsize=(60,30))\nplot_tree(dt, feature_names = X.columns, class_names=['No Disease', \"Disease\"], filled=True);","670c8d5c":"# Finding the y_train_pred and the y_test_pred... \ud83d\udd2e\n\ny_train_pred = dt.predict(X_train)\ny_test_pred = dt.predict(X_test)","c5eaa8ae":"# Evaluating the model: (Confusion Matrix) \ud83e\udd14\ud83d\ude25\u2049\n\nprint(\"Confusion Matrix for training set:\\n\")\nprint(confusion_matrix(y_train, y_train_pred))\nprint('*'*20)\nprint(\"Confusion Matrix for test set:\\n\")\nprint(confusion_matrix(y_test, y_test_pred))","dc2192d3":"# Evaluating the model: (Accuracy) \ud83e\uddbe\n\nprint(\"Accuracy on the training set: \" + str(accuracy_score(y_train, y_train_pred)))\nprint('*'*20)\nprint(\"Accuracy on the test set: \" + str(accuracy_score(y_test, y_test_pred)))","ebd53b54":"# Evaluating the model: (Precision)\ud83c\udfaf\n\nprint(\"Precision on the training set: \" + str(precision_score(y_train, y_train_pred)))\nprint('*'*20)\nprint(\"Precision on the test set: \" + str(precision_score(y_test, y_test_pred)))","afbab280":"# Evaluating the model: (Recall) \ud83e\udd14\n\nprint(\"Recall on the training set: \" + str(recall_score(y_train, y_train_pred)))\nprint('*'*20)\nprint(\"Recall on the test set: \" + str(recall_score(y_test, y_test_pred)))","eb2d93f5":"# Creating an object of the class DecisionTreeClassifier() and assigning a random_state\n\ndt = DecisionTreeClassifier(random_state=42)","20c3aba4":"# Defining the parameters for the param_grid for our Grid Search...\n\nparams = {\n    'max_depth':[2,3,10,15,20],\n    'min_samples_leaf':[2,3,5,6,8,10,12,15,20],\n    'criterion':['gini','entropy']\n}\n\n'''\nDifferent combinations were tried out for max_depth and min_samples_leaf and this set seem to give a good model.\nTrying out all the different combinations were avoided to keep the notebook clean and crisp.\nYou can try out different combination in the list or even tune some other hyper-parameters.\nAs of now, i will stick with this. :)\n'''","cb817221":"# Now, we will let GridSearchCV try out all the possible combination of the hyperparameters for our Decision Tree\n\ngrid_search = GridSearchCV(estimator=dt, param_grid=params, cv=4, n_jobs=4, verbose=10, scoring='accuracy')","45a7943d":"%%time\ngrid_search.fit(X_train, y_train)","6d10a5ad":"# Storing the results of all the combinations that had been tried in a dataframe.\n\ncv_df = pd.DataFrame(grid_search.cv_results_)","0bcba9da":"# Checking all the different combinations\n\ncv_df.head().style.set_properties(**{\"background-color\": \"#FF87CA\",\"color\": \"black\",\n                                     \"border-color\": \"black\",\"font-size\":\"10pt\",'width': 200})","7bd468ae":"# Finding the best score...\n\ngrid_search.best_score_","781bd19f":"# Finding the best hyper-parameters for the model...\n\nhyper_param = grid_search.best_estimator_\nhyper_param","8be5d3b5":"# Assigning the hyper parameter and fitting the model\n\ndt_ = hyper_param\n\ndt_.fit(X_train, y_train)","208c2812":"# Predicting on the train and test... \n\ny_train_pred = dt_.predict(X_train)\ny_test_pred = dt_.predict(X_test)","2aa524da":"# Evaluating the model: (Confusion Matrix) \ud83e\udd14\ud83d\ude25\u2049\n\nprint(\"Confusion Matrix for training set:\\n\")\nprint(confusion_matrix(y_train, y_train_pred))\nprint('*'*20)\nprint(\"Confusion Matrix for test set:\\n\")\nprint(confusion_matrix(y_test, y_test_pred))","57e144d9":"# Evaluating the model: (Accuracy) \ud83e\uddbe\n\nprint(\"Accuracy on the training set: \" + str(accuracy_score(y_train, y_train_pred)))\nprint('*'*20)\nprint(\"Accuracy on the test set: \" + str(accuracy_score(y_test, y_test_pred)))","c9ca0722":"# Evaluating the model: (Precision)\ud83c\udfaf\n\nprint(\"Precision on the training set: \" + str(precision_score(y_train, y_train_pred)))\nprint('*'*20)\nprint(\"Precision on the test set: \" + str(precision_score(y_test, y_test_pred)))","1d6a5a3b":"# Evaluating the model: (Recall) \ud83e\udd14\n\nprint(\"Recall on the training set: \" + str(recall_score(y_train, y_train_pred)))\nprint('*'*20)\nprint(\"Recall on the test set: \" + str(recall_score(y_test, y_test_pred)))","d096fb3a":"# Visualizing the result from the Decision Tree\n\nplt.figure(figsize=(65,25))\nplot_tree(dt_, feature_names = X.columns, class_names=['No Disease', \"Disease\"], filled=True);","a79478c1":"<h1 style=\"font-size:80px;color:#FF87CA;text-align:center\"><strong>Heart Attack<\/strong> <strong style=\"color:black\">Prediction<\/strong><\/h1>","14f15619":"<p style=\"font-size:120%\"> From the above metrics used for evaluating the model, we can see that <strong>our model is underfitting.<\/strong><\/p>\n<p style=\"font-size:120%\"> We need to perform some <strong>hyperparameter tuning<\/strong> with this model.<\/p>","0eb67d0d":"<p style=\"font-size:120%\"> From the diagram above, we can observe that <mark><strong>people with a chest pain category of 1 or above<\/strong> are high risk for Heart Attacks.<\/mark>","837147cc":"<p style=\"font-size:120%\"> <strong>We can definitely see that there are some outliers and they have to be handled.<\/strong><\/p>","2b2b996b":"<p style=\"font-size:120%\"> <strong> Majority of people who have heart disease are \"Female\".<\/strong><\/p>","6d0880c7":"<h1 style=\"font-size:60px;color:#FF87CA;text-align:left\"><strong>Inspecting<\/strong> <strong style=\"color:black\">Our Data<\/strong><\/h1>","a534095f":"<h2 style=\"text-align:center;color:#FF87CA\">If you enjoyed reading this Notebook \ud83d\udcd2, kindly upvote. \ud83d\udc4d\ud83d\ude01 It will help me grow. \ud83d\udcc8<\/h2>","936bbeac":"<img src=\"https:\/\/healthblog.uofmhealth.org\/sites\/consumer\/files\/2020-01\/heart_beating_0.gif\" style=\"width:70%\"><\/img>","2aa9035d":"<p style=\"font-size:120%\"> <mark>There are <strong>no NULL values<\/strong> in this dataframe.<\/mark><\/p>","7078be3c":"<p style=\"font-size:120%\"> <strong> Over here, we see a slight outlier in the feature, but it is acceptable. It is not a huge outlier.<\/strong><\/p>","f12c1025":"<h1 style=\"font-size:60px;color:#FF87CA;text-align:left\"><strong>Exploratory<\/strong> <strong style=\"color:black\">Data Analysis<\/strong><\/h1>","adc4e45d":"<h1 style=\"font-size:60px;color:#FF87CA;text-align:left\"><strong>Hyper-parameter<\/strong> <strong style=\"color:black\">Tuning<\/strong><\/h1>","5c9962dd":"<p style=\"font-size:120%\"> <strong> Heart Attack due to Exercise Induced Angina is less.<\/strong><\/p>","76afed50":"<p style=\"font-size:120%\"> <strong> This feature for resting blood pressure contains outliers.<\/strong><\/p>\n<p style=\"font-size:120%\"> <strong> But since they are not so severe, we are going to let them be.<\/strong><\/p>","9f1df0d8":"<p style=\"font-size:120%\">A blockage of blood flow to the heart muscle.<\/p>\n<p style=\"font-size:120%\">A heart attack is a medical emergency. A <strong>heart attack<\/strong> usually occurs when a blood clot blocks blood flow to the heart. Without blood, tissue loses oxygen and dies.<\/p>\n<p style=\"font-size:120%\"><mark>Symptoms include tightness or pain in the chest, neck, back or arms, as well as fatigue, lightheadedness, abnormal heartbeat and anxiety.<\/mark> Women are more likely to have atypical symptoms than men.<\/p>\n<p style=\"font-size:120%\">Treatment ranges from lifestyle changes and cardiac rehabilitation to medication, stents and bypass surgery.<\/p>\n\n\n<p style=\"font-size:120%\">With this notebook, I will be using <strong>Decision Tree<\/strong> to classify if a subject is likely to have Heart Attack or not.<\/p>\n<p style=\"font-size:120%\">This notebook is also a step by step guide to implement the <strong>DecisionTreeClassifier()<\/strong> model.<\/p>","641d86ad":"<ul>\n<li style=\"font-size:120%\"> A person regardless of gender, is most likely to have a heart attack if the level of Chest Pain is 1 or beyond.<\/li>\n<li style=\"font-size:120%\"> Even if the Chest Pain is more than 1 or more, Female subjects are more at risk then Male.<\/li>\n<li style=\"font-size:120%\"> Also, if the Heart Rate is more, combined with Chest Pain of atleast level 1, then the subject is definitely going to get Heart Attack.<\/li>\n<li style=\"font-size:120%\"> If the Chest Pain level is below 1, even then, if the subject has Exercise Induced Agnia, he\/she is at a greater risk of Heart Attack<\/li>\n<\/ul>\n\n<p style=\"font-size:120%\">Therefore, if any of the above conditions are observed in a subject, they should be immediately given medical attention. \ud83e\ude7a\ud83d\udc69\u200d\u2695\ufe0f<\/p>","2a0b94cd":"<h1 style=\"font-size:60px;color:#FF87CA;text-align:left\"><strong>Building<\/strong> <strong style=\"color:black\">Our Model<\/strong><\/h1>","05e5e1ba":"<p style=\"font-size:120%\"> Since the <strong>sensitivity<\/strong> is pretty good for this model on the test set, we will go ahead with this model.<\/p>\n<p style=\"font-size:120%\"> Also, from the confusion matrix for the test data, we can observe that the chance of <strong>Type II error<\/strong> (i.e. The patient is likely to have a Heart Attack but is declared safe by the model) is very low.<\/p>","7fc7a1b0":"<p style=\"font-size:120%\"> <strong> Here, we do not observe any significant differences.<\/strong><\/p>","41b11a11":"<h1 style=\"font-size:60px;color:#FF87CA;text-align:left\"><strong>Our<\/strong> <strong style=\"color:black\">Conclusion<\/strong><\/h1>","92105f74":"<p style=\"font-size:120%\"> <strong> No outliers detected.<\/strong><\/p>","4470e905":"<p style=\"font-size:120%\"> <strong>Here, we can see that cholestrol has a very high value. <\/strong><\/p>\n<p style=\"font-size:120%\"> <strong>In this case, we need to remove it.<\/strong><\/p>","1773f35c":"<p style=\"font-size:120%\"> <strong>No outliers detected.<\/strong><\/p>"}}