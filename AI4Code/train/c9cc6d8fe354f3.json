{"cell_type":{"f3512e92":"code","9e590cb7":"code","eaa12cb9":"code","79d8e60b":"code","f9a2c57b":"code","292d7b65":"code","331e6834":"code","86b25303":"code","53545302":"code","e7772638":"code","3cca2e5b":"code","ba4e7a83":"code","933821a1":"code","88177412":"code","41b16b07":"code","b303913e":"code","4ca4ddc2":"code","6a5761d5":"code","74bd8218":"code","53e2d3d0":"code","463fce60":"code","89667a06":"code","1936c745":"code","eba4477d":"code","72953e86":"code","218c337c":"code","7e834594":"code","331dce67":"code","a5fc5173":"code","595f0191":"code","4b11e0ff":"code","65eaf773":"code","8e371617":"code","751c81d1":"code","243bd2a4":"code","9c5e5e94":"code","3932d1bc":"markdown","b402852b":"markdown","32e58526":"markdown","28ee309e":"markdown","6bc515cd":"markdown","c54925ca":"markdown","2de01304":"markdown","6c5af7a9":"markdown","62379039":"markdown","f3a18864":"markdown"},"source":{"f3512e92":"import pandas as pd\nimport numpy as np\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\n\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns\nsns.set_style('darkgrid')\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\n%matplotlib inline \n\nimport seaborn as sns\nfrom pandas_profiling import ProfileReport","9e590cb7":"train = pd.read_csv(\"..\/input\/song-popularity-prediction\/train.csv\")\ntest = pd.read_csv(\"..\/input\/song-popularity-prediction\/test.csv\")\nsub = pd.read_csv(\"..\/input\/song-popularity-prediction\/sample_submission.csv\")","eaa12cb9":"train","79d8e60b":"test","f9a2c57b":"sub","292d7b65":"train.head()","331e6834":"train.tail()","86b25303":"train = train.drop_duplicates()\n","53545302":"train = train.fillna(method=\"ffill\")\ntest = test.fillna(method=\"ffill\")\npd.isnull(train).any()  # Checking for Null Values","e7772638":"train","3cca2e5b":"train.info()","ba4e7a83":"train.describe()","933821a1":"train.shape","88177412":"for i in range(len( train.columns)):\n    print(i+1,\":\", train.columns[i])","41b16b07":"plt.figure(figsize=(10, 6))\nplt.hist(train['song_duration_ms'], bins = 45, ec = 'black', color = '#f88f01')\nplt.xlabel('Song Duration in milliseconds', fontsize=16)\nplt.ylabel('Number of Songs', fontsize=16)\nplt.title('Distribution of Song Duration', fontsize=16)\nplt.axvline(train['song_duration_ms'].mean(), color='#21209c', linestyle='dashed', linewidth=3, label='Average Distribution of Song Duration')\nplt.show()\nplt.style.use('dark_background')","b303913e":"plt.figure(figsize=(10, 6))\nsns.distplot(train.song_duration_ms, bins = 45, color = '#f88f01', hist = True)\nplt.style.use('dark_background')\nplt.xlabel('Song Duration in milliseconds', fontsize=16)\nplt.ylabel('Number of Songs', fontsize=16)\nplt.title('Distribution of Song Duration', fontsize=16)\nplt.show()","4ca4ddc2":"mask = np.zeros_like(train.corr())\ntriangle_indicies = np.triu_indices_from(mask)\nmask[triangle_indicies] = True\nmask","6a5761d5":"plt.figure(figsize=(16, 10))\nsns.heatmap(train.corr(), mask=mask, annot=True, annot_kws={\"size\": 14})\nplt.style.use('dark_background')\nplt.xticks(fontsize=16)\nplt.yticks(fontsize=16)\nplt.show()","74bd8218":"prof = ProfileReport(train)","53e2d3d0":"import catboost","463fce60":"# Machine learning\nimport catboost\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import model_selection, tree, preprocessing, metrics, linear_model\nfrom sklearn.svm import LinearSVC\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import LinearRegression, LogisticRegression, SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom catboost import CatBoostClassifier, Pool, cv\n","89667a06":"# Split the dataframe into data and labels\nX_train = train.drop('song_popularity', axis=1) # data\ny_train = train.song_popularity # labels","1936c745":"X_train, X_test, y_train, y_test = train_test_split(X_train, y_train, test_size=0.2, random_state=4)","eba4477d":"clf = LogisticRegression()\nclf = clf.fit(X_train, y_train)","72953e86":"print('Training Regression:', clf.score(X_train, y_train))","218c337c":"clf = CatBoostClassifier()\nclf = clf.fit(X_train, y_train)","7e834594":"print('Training Regression:', clf.score(X_train, y_train))\nprint('Test Regression:', clf.score(X_test, y_test))","331dce67":"y_test_pred = clf.predict(test)","a5fc5173":"sub['song_popularity'] = y_test_pred","595f0191":"\nsub.to_csv('catboost_.csv', index=False)","4b11e0ff":"import optuna\nimport catboost as cb\nfrom sklearn.metrics import accuracy_score\ndef objective(trial):\n    train_x, valid_x, train_y, valid_y = train_test_split(X_train,y_train, test_size=0.3)\n\n    param = {\n        \"objective\": trial.suggest_categorical(\"objective\", [\"Logloss\", \"CrossEntropy\"]),\n        \"colsample_bylevel\": trial.suggest_float(\"colsample_bylevel\", 0.01, 0.1),\n        \"depth\": trial.suggest_int(\"depth\", 1, 12),\n        \"boosting_type\": trial.suggest_categorical(\"boosting_type\", [\"Ordered\", \"Plain\"]),\n        \"bootstrap_type\": trial.suggest_categorical(\n            \"bootstrap_type\", [\"Bayesian\", \"Bernoulli\", \"MVS\"]\n        ),\n        \"used_ram_limit\": \"3gb\",\n    }\n\n    if param[\"bootstrap_type\"] == \"Bayesian\":\n        param[\"bagging_temperature\"] = trial.suggest_float(\"bagging_temperature\", 0, 10)\n    elif param[\"bootstrap_type\"] == \"Bernoulli\":\n        param[\"subsample\"] = trial.suggest_float(\"subsample\", 0.1, 1)\n\n    gbm = cb.CatBoostClassifier(**param)\n\n    gbm.fit(train_x, train_y, eval_set=[(valid_x, valid_y)], verbose=0, early_stopping_rounds=100)\n\n    preds = gbm.predict(valid_x)\n    pred_labels = np.rint(preds)\n    accuracy = accuracy_score(valid_y, pred_labels)\n    return accuracy","65eaf773":"study = optuna.create_study(direction=\"maximize\")\nstudy.optimize(objective, n_trials=100)","8e371617":"optuna.visualization.plot_optimization_history(study)","751c81d1":"optuna.visualization.plot_contour(study)","243bd2a4":"model = CatBoostClassifier(objective= 'Logloss', colsample_bylevel= 0.013467686044406728, depth= 4, boosting_type= 'Plain', bootstrap_type= 'Bayesian', bagging_temperature= 7.194141475410457)","9c5e5e94":"sub['song_popularity'] = y_test_pred\nsub.to_csv('catboost_optuna.csv', index=False)","3932d1bc":"# <p style=\"background-color:purple; font-family:newtimeroman; font-size:180%; text-align:center; border-radius: 15px 50px;\"> Visualizing the Dataset \ud83d\udcc9<\/p>\n","b402852b":"# <p style=\"background-color:purple; font-family:newtimeroman; font-size:180%; text-align:center; border-radius: 15px 50px;\"> Preprocessing \ud83c\udf65<\/p>\n","32e58526":"# <p style=\"background-color:purple; font-family:newtimeroman; font-size:180%; text-align:center; border-radius: 15px 50px;\"> \ud83d\udcda Importing Libraries <\/p>","28ee309e":"# <p style=\"background-color:purple; font-family:newtimeroman; font-size:180%; text-align:center; border-radius: 15px 50px;\">  Profile Report Dashboard<\/p>\n","6bc515cd":"# <p style=\"background-color:purple; font-family:newtimeroman; font-size:180%; text-align:center; border-radius: 15px 50px;\"> \ud83d\udcc5 Importing Dataset <\/p>\n","c54925ca":"# <p style=\"background-color:skyblue; font-family:newtimeroman; font-size:250%; text-align:center; border-radius: 15px 50px;\">\ud83c\udfb5 Song Popularity \ud83c\udfb6 - Data Visualization and Modelling (CatBoost) \ud83d\udcca<\/p>\n<center><img src=\"https:\/\/media.giphy.com\/media\/tqfS3mgQU28ko\/giphy.gif\"><\/center>","2de01304":"# <p style=\"background-color:purple; font-family:newtimeroman; font-size:180%; text-align:center; border-radius: 15px 50px;\">  Basic Modelling \ud83d\udd79\ufe0f<\/p>\n","6c5af7a9":"### **Columns in the dataset**","62379039":"# <p style=\"background-color:purple; font-family:newtimeroman; font-size:180%; text-align:center; border-radius: 15px 50px;\"> \ud83e\udd14 Understanding the Dataset <\/p>\n","f3a18864":"### **Describing the dataset**"}}