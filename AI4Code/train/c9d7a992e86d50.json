{"cell_type":{"b62ea601":"code","5c033bd8":"code","4839e692":"code","3da4e18c":"code","e51c35ba":"code","8e7231e4":"code","43f75138":"code","ff386673":"code","403d9246":"code","7cc6642b":"code","f1c92cf3":"code","503ca0ee":"code","6de765e1":"code","2309fb0e":"code","65d55041":"code","57286ed5":"code","a8292356":"code","1539ef77":"code","500ede26":"code","8cde2773":"markdown","3ad18ac4":"markdown","ba03c8d0":"markdown","7bedb380":"markdown"},"source":{"b62ea601":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5c033bd8":"# Directive pour afficher les graphiques dans Jupyter\n%matplotlib inline","4839e692":"# Pandas : librairie de manipulation de donn\u00e9es\n# NumPy : librairie de calcul scientifique\n# MatPlotLib : librairie de visualisation et graphiques\n# SeaBorn : librairie de graphiques avanc\u00e9s\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, confusion_matrix, roc_curve, roc_auc_score,auc, accuracy_score","3da4e18c":"df = pd.read_csv('..\/input\/voicegender\/voice.csv')","e51c35ba":"df.head(10)","8e7231e4":"df.columns","43f75138":"from IPython.core.display import HTML # permet d'afficher du code html dans jupyter\ndisplay(HTML(df.head(10).to_html()))","ff386673":"df['label'] = df['label'].map({\"male\":0, \"female\":1})","403d9246":"y = df['label'].values\nX = df.drop(['label'], axis=1).values\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","7cc6642b":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense","f1c92cf3":"model = Sequential()\nmodel.add(Dense(1, activation=\"sigmoid\"))","503ca0ee":"model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","6de765e1":"train = model.fit(X_train , y_train , validation_data=(X_test,y_test), epochs=100, verbose=1)","2309fb0e":"y_ann = (model.predict(X_test) > 0.5).astype(\"int32\").flatten()","65d55041":"y_ann","57286ed5":"accuracy_score(y_test, y_ann)","a8292356":"confusion_matrix(y_test, y_ann)","1539ef77":"def plot_scores(train) :\n    accuracy = train.history['accuracy']\n    val_accuracy = train.history['val_accuracy']\n    epochs = range(len(accuracy))\n    plt.plot(epochs, accuracy, 'b', label='Score apprentissage')\n    plt.plot(epochs, val_accuracy, 'r', label='Score validation')\n    plt.title('Scores')\n    plt.legend()\n    plt.show()","500ede26":"plot_scores(train)","8cde2773":"Librairies utiles","3ad18ac4":"Pour avoir l'ensemble du tableau, on peut utiliser un affichage au format HTML :","ba03c8d0":"Keras n'accepte pas les dataframes, on utilise \"values\" pour avoir des valeurs (tableaux)","7bedb380":"# Dataset\n"}}