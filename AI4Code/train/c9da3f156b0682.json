{"cell_type":{"e54f8569":"code","ee42925b":"code","9f917c88":"code","23e821fc":"code","eb0ef803":"code","6aacc32e":"code","99ed9144":"code","d86ec8ac":"code","33fbc27e":"code","98782fd1":"code","37552f90":"code","de178dee":"code","a24aff0a":"code","37df01ba":"code","f983cb2b":"code","65507984":"code","475664dd":"code","328ea3b9":"code","9ea086bb":"code","7dc85897":"code","595f7f8a":"code","cdfa8008":"markdown","cc00b21d":"markdown"},"source":{"e54f8569":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ee42925b":"import matplotlib.pyplot as plt\nimport seaborn as sns","9f917c88":"train=pd.read_csv(\"\/kaggle\/input\/lish-moa\/train_features.csv\")\ntarget=pd.read_csv(\"\/kaggle\/input\/lish-moa\/train_targets_scored.csv\")\ntest=pd.read_csv(\"\/kaggle\/input\/lish-moa\/test_features.csv\")\n","23e821fc":"sample=test=pd.read_csv(\"\/kaggle\/input\/lish-moa\/sample_submission.csv\")\n","eb0ef803":"train.head()","6aacc32e":"print(\" train shape is: {},\" .format (train.shape))","99ed9144":"print(\" target shape is: {},\" .format (target.shape))","d86ec8ac":"print(\" test shape is: {},\" .format (test.shape))","33fbc27e":"target.head()","98782fd1":"sample","37552f90":"sample.shape","de178dee":"train.head()","a24aff0a":"train[\"cp_type\"].unique()\n","37df01ba":"train[\"cp_time\"].unique()","f983cb2b":"train[\"cp_dose\"].unique()","65507984":"def myplot(ss):\n    plt.figure(dpi=120)\n    sns.countplot(train[ss] )\n    return ss","475664dd":"myplot(\"cp_time\")","328ea3b9":"myplot(\"cp_dose\")","9ea086bb":"myplot(\"cp_type\")","7dc85897":"z=np.linspace(-1,1,23814)\nplt.figure(dpi=150)\nsns.lineplot(x=z, hue=train[\"cp_dose\"],  y=train[\"g-1\"])","595f7f8a":"z=np.linspace(-1,1,23814)\nplt.figure(dpi=150)\nsns.lineplot(x=train[\"g-1\"],y=z, hue=train[\"cp_type\"]  )","cdfa8008":"# Explore train data","cc00b21d":"def myplot1(feature):\n    plt.figure(dpi=80)\n   \n    sns.lineplot(x=train[\"cp_type\"], y=train[\"cp_dose\"]   , hue=\"feature\") #\n    return feature\n    "}}