{"cell_type":{"2243b906":"code","8a77e469":"code","d48a9c6a":"code","4357e65e":"code","108674ad":"code","e7e052b6":"code","ca25853d":"code","513f40dd":"code","af59cd2b":"code","00d73c6a":"code","33ed82f1":"code","24b64851":"code","f823b350":"code","1688de44":"code","ff96dad3":"code","fb7e98f0":"code","66b3dcbb":"code","0bb59f79":"code","7f100bc9":"code","6934e42d":"code","e87a598c":"code","ff1485c1":"code","9553602d":"code","8999a8fe":"code","f6c9f571":"code","79c8801b":"code","687b2c79":"code","14e98cfc":"code","8deded93":"code","ebf200c4":"markdown","69cb5a27":"markdown"},"source":{"2243b906":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8a77e469":"import matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nimport pandas_profiling as pp","d48a9c6a":"medal_df = pd.read_csv('..\/input\/tokyomedal\/Tokyo Medals 2021.csv')\nmedal_df.head()","4357e65e":"medal_df.shape","108674ad":"medal_df.describe()","e7e052b6":"medal_df.isnull().sum()","ca25853d":"medal_df.dtypes","513f40dd":"profile_medal = pp.ProfileReport(medal_df)\nprofile_medal.to_file(\"output.html\")\nprofile_medal.to_notebook_iframe()","af59cd2b":"from scipy.stats import norm","00d73c6a":"f , ax =plt.subplots(figsize=(20,5))\nsns.distplot(medal_df['Total'])","33ed82f1":"f , ax =plt.subplots(figsize=(20,5))\nsns.distplot(medal_df['Gold Medal'])","24b64851":"f , ax =plt.subplots(figsize=(20,5))\nsns.distplot(medal_df['Silver Medal'])","f823b350":"f , ax =plt.subplots(figsize=(20,5))\nsns.distplot(medal_df['Bronze Medal'])","1688de44":"f , ax = plt.subplots(figsize = (20,5))\nsns.kdeplot((medal_df['Gold Medal'])  )\nsns.kdeplot((medal_df['Silver Medal']) )\nsns.kdeplot((medal_df['Bronze Medal']) )","ff96dad3":"plt.figure(figsize=(10,10))\nheatmap = sns.heatmap(medal_df.corr() , annot = True, cmap=\"YlGnBu\")\n\nheatmap.set_title('Correlation Heatmap' , fontdict={'fontsize':12} , pad=12 );","fb7e98f0":"plt.figure(figsize=(20,10) , dpi= 500)\nsns.set_theme(style=\"dark\")\nax = sns.scatterplot(x='Total', y='Country', hue='Country', data = medal_df[:10] , size = \"Total\" , alpha =1)\nax.set_title(\"Toral Medals of Top 10 Countries\")","66b3dcbb":"plt.figure(figsize=(20,10) , dpi= 300)\nsns.set_theme(style=\"dark\")\nax = sns.scatterplot(x='Gold Medal', y='Country', hue='Country', data = medal_df[:20] , size = \"Gold Medal\",palette=\"muted\")\nax.set_title(\"Gold Medals vs Country \")","0bb59f79":"plt.figure(figsize=(20,10) , dpi= 300)\nsns.set_theme(style=\"dark\")\nax = sns.scatterplot(x='Silver Medal', y='Country', hue='Country', data = medal_df[:20] , size = \"Silver Medal\",palette=\"muted\", alpha = 1)\nax.set_title(\"Silver Medals vs Country \")","7f100bc9":"medal_df.columns\n","6934e42d":"plot = medal_df['Total'].head().plot.pie(subplots =True , figsize = (12,6) , labels = medal_df['Country'])","e87a598c":"import plotly.graph_objects as go\nnew_active_tot = medal_df.sort_values(by='Total', ascending=False).head(10)\nfigpie= go.Figure(data=[go.Pie(labels=medal_df['Country'],values= new_active_tot['Total'])])\nfigpie.update_traces(hoverinfo = 'label+percent', textinfo='label+percent', hole=0.3)\nfigpie.update_layout( title_text=\"Top 10 \")\nfigpie.show()","ff1485c1":"\nmedal_df.query('Country ==\"India\"')","9553602d":"sorted_medal_df = medal_df.sort_values(by='Total', ascending=False)\nplt.figure(figsize = (30,30))\nsns.barplot(x = 'Total', y='Country', data = sorted_medal_df)\nplt.title(\"Country by ranking\")\nplt.show()","8999a8fe":"Sorted_Gold = medal_df.sort_values(by='Gold Medal', ascending=False)","f6c9f571":"figure = px.bar(Sorted_Gold, x ='Gold Medal' , y='Country' , color='Country' , width=1500, height=1400)\n\nfigure.show()","79c8801b":"sorted_medal_df_top10 = medal_df.sort_values(by='Total', ascending=False).head(10)","687b2c79":"ax = sorted_medal_df_top10.plot(x=\"Country\", y=\"Gold Medal\", kind=\"bar\", color = \"gold\")\nsorted_medal_df_top10.plot(x=\"Country\", y=\"Silver Medal\", kind=\"bar\", color=\"silver\")\nsorted_medal_df_top10.plot(x=\"Country\", y=\"Bronze Medal\", kind=\"bar\", color=\"brown\")\n","14e98cfc":"from matplotlib.widgets import Cursor\n","8deded93":"\nfig,ax = plt.subplots(figsize = (30,10))\nplt.bar(sorted_medal_df_top10['Country'].values, sorted_medal_df_top10['Gold Medal'].values, width=0.5,color = 'gold', label = 'Gold',)\nplt.bar(sorted_medal_df_top10['Country'].values, sorted_medal_df_top10['Silver Medal'].values, width=0.25,color = 'silver', label = 'Silver')\nplt.bar(sorted_medal_df_top10['Country'].values, sorted_medal_df_top10['Bronze Medal'].values, width=0.15, color = 'brown', label = 'Bronze')\n\nplt.title('Top 10 Countries and their medals', fontsize=30)\nplt.xlabel('Country Name', fontsize = 12, fontweight = 'bold')\nplt.ylabel('No of Medals', fontsize = 12, fontweight = 'bold')\nplt.legend(fontsize = 20)\ncursor = Cursor(ax, useblit=True, color='red', linewidth=2)\nplt.show()","ebf200c4":"#Importing all libraries\nimport math\nimport","69cb5a27":"# Tokyo 2021 Olympics Data Analysis\n"}}