{"cell_type":{"42139e15":"code","a74ce264":"code","db71e063":"code","d0c2dd3b":"code","0aef215d":"code","7ce63b62":"code","dcdbd99c":"code","a5eecb86":"code","21d9b38f":"code","71268adc":"code","2ae1fd76":"code","1a2833ec":"code","73785700":"code","d8040916":"code","79ebfd55":"code","95407ffd":"code","80b703eb":"code","a1027e66":"code","45aa5c2a":"code","50110ae6":"code","9e03f235":"code","bbe5e74e":"code","1aca296b":"code","ed7395bb":"markdown","04f3bf8f":"markdown","2b648147":"markdown","3e5e9ee3":"markdown","f4dc18ea":"markdown","a29a87d1":"markdown","f6838ad6":"markdown"},"source":{"42139e15":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\nimport keras\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a74ce264":"\nclass_labels= ['T-shirt\/top','Trouser','Pullover','Dress','Coat','Sandal','Shirt','Sneakers','Bag','Ankle boot']\n\n \n\n","db71e063":"train=pd.read_csv(\"..\/input\/fashionmnist\/fashion-mnist_train.csv\")\ntest=pd.read_csv(\"..\/input\/fashionmnist\/fashion-mnist_test.csv\")","d0c2dd3b":"train.head()","0aef215d":"test.head()","7ce63b62":"Y_test=test['label']","dcdbd99c":"train.shape , test.shape","a5eecb86":"sns.countplot(train['label'])","21d9b38f":"sns.heatmap(train.isnull(),xticklabels=False,yticklabels=False,cmap='viridis')","71268adc":"x= train.drop('label',axis=1).to_numpy()\ny=train['label']\n\nx=x\/255","2ae1fd76":"plt.imshow(x[600].reshape(28,28),cmap=matplotlib.cm.binary)\nplt.show()","1a2833ec":"y[600]","73785700":"plt.figure(figsize=(16,16))\nj=1\nfor i in np.random.randint(0,1000,25):\n    plt.subplot(5,5,j)\n    j+=1\n    image=plt.imshow(x[i].reshape(28,28),cmap=matplotlib.cm.binary)\n    original=y[i]\n    plt.axis('off')\n    plt.title('{} \/ {} '.format(class_labels[y[i]],y[y[i]]))","d8040916":"from keras.models import Sequential \nfrom keras.layers import Flatten,Dense","79ebfd55":"train_X=train.drop('label',axis=1)\ntrain_Y=train['label']","95407ffd":"from sklearn.model_selection import train_test_split\ntrain_x,test_x,train_y,test_y = train_test_split(train_X,train_Y,test_size=0.30,random_state=42)","80b703eb":"model=Sequential()\nmodel.add(Flatten(input_shape=(28,28)))\nmodel.add(Dense(units=50,activation='relu'))\nmodel.add(Dense(units=60,activation='relu'))\nmodel.add(Dense(units=10,activation='softmax'))\n\nmodel.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])\nmodel.fit(train_x,train_y,batch_size=100,epochs=60)","a1027e66":"model.evaluate(test_x,test_y)","45aa5c2a":"test = pd.read_csv(\"..\/input\/fashionmnist\/fashion-mnist_test.csv\")\ntest.head()","50110ae6":"test=test.drop('label',axis=1).to_numpy()","9e03f235":"prediction=model.predict(test)\nprediction \n","bbe5e74e":"Y_test.to_frame()","1aca296b":"plt.figure(figsize=(16,16))\nfor i in range(25):\n  plt.subplot(5,5,i+1)\n  plt.imshow(test[i].reshape(28,28),cmap=\"Greys\")\n  plt.axis('off')\n  plt.title(\"ORIGINAL= {} \\n PREDICTED = {}\".format(class_labels[Y_test[i]], class_labels[np.argmax(prediction[i])]))","ed7395bb":"# **Importing all Important Libraries**","04f3bf8f":"# Data Vizualisation","2b648147":" Checking Null Values","3e5e9ee3":"# Evaluation And Prediction","f4dc18ea":"# Reading Data","a29a87d1":"\n* **CLASS LABELS**\n*  **0 = T-shirt\/top** \n*  **1 = Trouser**\n*  **2 = Pullover**\n*  **3 = Dress**\n*  **4 = Coat**\n*  **5 = Sandal** \n*  **6 = Shirt**\n*  **7 = Sneaker** \n*  **8 = Bag** \n* **9 = Ankle boot**","f6838ad6":"# Building Artificial Neural Network"}}