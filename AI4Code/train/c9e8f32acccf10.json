{"cell_type":{"e6925aaf":"code","b2913af9":"code","87dac45e":"code","fd24607f":"code","4b8dac22":"code","083aeb82":"code","81a1189d":"code","fc9def63":"code","08f76dc1":"code","781dbe1d":"code","be6ba49b":"code","6da28707":"code","ed6d1ee9":"code","bbce1b39":"code","5379783e":"code","78327cc4":"code","0d16b3a1":"code","6420fb2f":"code","834662f6":"code","b6bd87a9":"code","94397e30":"code","e42a4135":"code","f722ac5c":"code","5e27b2ab":"code","eed3f8cb":"code","2e51a5c5":"code","50bebeb4":"code","29b38c5a":"code","d520e20e":"code","28c48da7":"code","1f27523b":"code","65fd196b":"code","0a1d0a98":"code","0375c10a":"code","97fadbc3":"code","c7badd48":"code","6e84e219":"code","c405739d":"code","3b6874e4":"code","a586009e":"code","2d5a1967":"code","363a2f0f":"code","f4a10026":"code","d1d95b53":"code","2cc521e2":"code","36e11e30":"markdown","71068461":"markdown","8b5fc73e":"markdown","dd561c8c":"markdown","d4485722":"markdown","2b1c68cc":"markdown","e852f88b":"markdown","ff6f92a1":"markdown","3a9dce5a":"markdown","39859acf":"markdown","61ff0c2a":"markdown","fa8a160d":"markdown"},"source":{"e6925aaf":"# Import of librairies\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","b2913af9":"# import data from  data.gouv, csv format\ndata = pd.read_csv(\"..\/input\/33.csv\")","87dac45e":"# First vizualisation\ndata.head()","fd24607f":"data.shape","4b8dac22":"data.info()","083aeb82":"# Delete duplicate\ndata.drop_duplicates(subset = \"valeur_fonciere\", inplace = True)\ndata.shape","81a1189d":"# Selection of interest columns in a new dataframe called \"dataClean\"\ndataClean= data[[\"date_mutation\",\"valeur_fonciere\",\"code_postal\",\"nombre_pieces_principales\",\"surface_terrain\",\"surface_reelle_bati\",\"type_local\"]]","fc9def63":"# In our data, there is dependancies and industrial local. We delete them because it's very different from house and apartment \ndataClean['type_local'].value_counts()","08f76dc1":"dataClean = dataClean.drop(dataClean[dataClean[\"type_local\"] == \"D\u00e9pendance\"].index)","781dbe1d":"dataClean = dataClean.drop(dataClean[dataClean[\"type_local\"] == \"Local industriel. commercial ou assimil\u00e9\"].index)","be6ba49b":"# Delete of Nan values\ndataClean.dropna(inplace=True)","6da28707":"dataClean.info()","ed6d1ee9":"sns.distplot(dataClean.valeur_fonciere)","bbce1b39":"dataClean.valeur_fonciere.describe()","5379783e":"# delete extreme value : \n#house price higher than 4 M\u20ac and lower than 25 K\u20ac\n# Number of room = 0\n# surface lower than 11\n\ndataClean = dataClean[dataClean.valeur_fonciere < 4000000]\ndataClean = dataClean[dataClean.valeur_fonciere > 25000]\ndataClean = dataClean[dataClean.nombre_pieces_principales > 0]\ndataClean = dataClean[dataClean.surface_reelle_bati > 10]\n\ndataClean.shape","78327cc4":"# Creation of a dictionnary\nlocal = {\"Appartement\":1 , \"Maison\" : 0}","0d16b3a1":"# Replacement of values house by 0 and apartment by 1\ndataClean.replace(local, inplace=True)","6420fb2f":"dataClean.type_local.value_counts()","834662f6":"# Transformation of floats in integer\ndataClean = dataClean.astype({\"valeur_fonciere\" : int , \"code_postal\" : int, \"nombre_pieces_principales\":int,\"surface_terrain\":int,\"surface_reelle_bati\":int, \"type_local\" : int})\ndataClean.dtypes","b6bd87a9":"# New visialization\ndataClean.head(5)","94397e30":"# Creation of the column \"agglomeration\" with postal code.\ndataClean [\"agglomeration\"] = dataClean[\"code_postal\"]\n","e42a4135":"# Transforming Bordeaux postal code by the value 1. \n\ndataClean.loc[dataClean[\"agglomeration\"] == 33000, \"agglomeration\"  ]= 1\ndataClean.loc[dataClean[\"agglomeration\"] == 33100, \"agglomeration\" ] = 1\ndataClean.loc[dataClean[\"agglomeration\"] == 33200,\"agglomeration\" ] = 1\ndataClean.loc[dataClean[\"agglomeration\"] == 33300,\"agglomeration\" ] = 1\ndataClean.loc[dataClean[\"agglomeration\"] == 33800,\"agglomeration\" ] = 1\n\n\n\n\n","f722ac5c":"# Transformation of suburbs postal code by the value 2.\n\n\ndataClean.loc[dataClean[\"agglomeration\"] == 33130, \"agglomeration\"] = 2\ndataClean.loc[dataClean[\"agglomeration\"] == 33400,\"agglomeration\" ] = 2\ndataClean.loc[dataClean[\"agglomeration\"] == 33600, \"agglomeration\"] = 2\ndataClean.loc[dataClean[\"agglomeration\"] == 33140,\"agglomeration\" ] = 2\ndataClean.loc[dataClean[\"agglomeration\"] == 33700,\"agglomeration\" ] = 2\ndataClean.loc[dataClean[\"agglomeration\"] == 33110,\"agglomeration\"] = 2\ndataClean.loc[dataClean[\"agglomeration\"] == 33520,\"agglomeration\" ] = 2\ndataClean.loc[dataClean[\"agglomeration\"] == 33310, \"agglomeration\"] = 2\ndataClean.loc[dataClean[\"agglomeration\"] == 33150,\"agglomeration\" ] = 2\ndataClean.loc[dataClean[\"agglomeration\"] == 33270,\"agglomeration\" ] = 2\n","5e27b2ab":"# Transformation of all others postal code by the value 3.\ndataClean.loc[dataClean[\"agglomeration\"] >  2, \"agglomeration\" ] = 3\n","eed3f8cb":"# Counting of the agglomeration values\ndataClean.agglomeration.value_counts()","2e51a5c5":"# Visualization\ndataClean.head()","50bebeb4":"dataClean[\"squareMeterPrice\"] = round(dataClean.valeur_fonciere \/ dataClean.surface_reelle_bati).astype(int)\ndataClean.head()","29b38c5a":"# Link between surface and price : the link is not obvious on this graph\nplt.figure(figsize=(10,6))\nsns.scatterplot(x=\"surface_reelle_bati\",y=\"valeur_fonciere\",data=dataClean).set_title(\"link between surface and price\")\n\n","d520e20e":"# The square meter price is around 8 000 \u20ac in Bordeaux, 4 500 \u20ac in the suburbs, and 3 500 \u20ac in the rest of Gironde\nplt.figure(figsize=(10,6))\n\nsns.barplot(x=\"agglomeration\" , y=\"squareMeterPrice\", data=dataClean).set_title(\"link between area and price\")","28c48da7":"# link between type of goods and price : apartement are more expensive than house, probably because they are more in city center\nplt.figure(figsize=(10,6))\nsns.barplot(x=\"type_local\",y=\"valeur_fonciere\",data=dataClean).set_title(\"link between house price and type\")","1f27523b":"# Excepts for the 1 room house (wrong data?), the house are more expensive with more rooms.\nplt.figure(figsize=(10,6))\n\nsns.barplot(x=\"nombre_pieces_principales\",y=\"valeur_fonciere\",data=dataClean).set_title(\"Price and number of room\")\nplt.show()","65fd196b":"# Strong link between the price and the area\nplt.figure(figsize=(10,6))\nsns.barplot(x=\"agglomeration\",y=\"valeur_fonciere\",data=dataClean).set_title(\"Link between area and price\")\nplt.show()","0a1d0a98":"correlation = dataClean.corr()\ncorrelation[\"valeur_fonciere\"].sort_values(ascending=False)","0375c10a":"# Splitting between train and test set and selection of x and y\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\n\nx=dataClean[[\"nombre_pieces_principales\", \"surface_reelle_bati\",\"type_local\", \"agglomeration\" ]]\ny=dataClean[\"valeur_fonciere\"]\n\n\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.20)\n\nscalerX = StandardScaler().fit(X_train)\n\nX_train = scalerX.transform(X_train)\nX_test = scalerX.transform(X_test)\n","97fadbc3":"print (X_train.shape)\nprint (X_test.shape)\nprint (y_train.shape)\nprint (y_test.shape)","c7badd48":"# KNN\nfrom sklearn import neighbors\nknn = neighbors.KNeighborsRegressor(n_neighbors = 44)\n\n# model training\nknn.fit(X_train, y_train)\n\n# prediction according the X_test\nprediction = knn.predict(X_test)\n","6e84e219":"# RMSE\nfrom sklearn.metrics import mean_squared_error \nfrom math import sqrt","c405739d":"knnError = sqrt(mean_squared_error(y_test,prediction))\nprint(knnError)","3b6874e4":"# best value for k neighbors : 44\n\nrmse_val = [] #to store rmse values for different k\nfor K in range(50):\n    K = K+1\n    model = neighbors.KNeighborsRegressor(n_neighbors = K)\n\n    model.fit(X_train, y_train)  #fit the model\n    pred=model.predict(X_test) #make prediction on test set\n    error = sqrt(mean_squared_error(y_test,pred)) #calculate rmse\n    rmse_val.append(error) #store rmse values\n    print('RMSE value for k= ' , K , 'is:', error)","a586009e":"curve = pd.DataFrame(rmse_val) #elbow curve \ncurve.plot()","2d5a1967":"# R2 score\nfrom sklearn.metrics import r2_score\n\ny_true = y_test\ny_pred = prediction\nr2_score(y_true, y_pred)  ","363a2f0f":"# Linear Regression\n\nfrom sklearn.linear_model import LinearRegression\n\nlinreg = LinearRegression()\n\nlinreg.fit(X_train,y_train)\n\nlinregPrediction = linreg.predict(X_test)\n\nlinregError = sqrt(mean_squared_error(y_test,linregPrediction))\n\nprint(linregError)\nprint (r2_score(y_test, linregPrediction))","f4a10026":"# Bayesian Regression\n\n\nfrom sklearn import linear_model\nbayesian = linear_model.BayesianRidge()\nbayesian.fit(X_train, y_train)\n\nbayesianPredict = bayesian.predict(X_test)\nbayesianError = sqrt(mean_squared_error(y_test,bayesianPredict))\nprint(bayesianError)\nprint (r2_score(y_test, bayesianPredict))","d1d95b53":"# Summary : the 3 algorythm are roughtly as good with our data\n\nprint (\"The RMSE with the linear Regression alorythm is\",linregError, \"\\n\")\nprint (\"The RMSE with the Bayesian alorythm is\", bayesianError, \"\\n\")\nprint (\"The RMSE with the KNN alorythm is\", knnError, \"\\n\")","2cc521e2":"# Test with 2 cases : a house in the suburb of 130 square meter, and a flat in bordeaux of 40 square meter\nsuburbHouse = [[7,138,0,2]]\nappartmentBordeaux = [[2, 40, 1, 1]]\n\nprint(knn.predict(suburbHouse))\nprint(linreg.predict(suburbHouse))\nprint(bayesian.predict(suburbHouse),\"\\n\")\n\nprint(knn.predict(appartmentBordeaux))\nprint(linreg.predict(appartmentBordeaux))\nprint(bayesian.predict(appartmentBordeaux))","36e11e30":"## Preprocessing : scaling, selection of x and y, spliting datas between train and test set","71068461":"# Cleaning","8b5fc73e":"## Algorythms : KNN, Linear Regression, Bayesian Regression","dd561c8c":"# Vizualisation","d4485722":"### Mesuring the model accuracy with  root mean square error and score R2","2b1c68cc":"#### obviously, strong correlation between squareMeterPrice and the value. The other strong correlation of the price is with the surface, the area, and the number of rooms.\n","e852f88b":"## Transformation of discrete values in quantitative values","ff6f92a1":"## Correlation","3a9dce5a":"# Data import and firsts visualization","39859acf":"## Creation of a new column to regroup houses by Area : Bordeaux = 1, suburbs = 2, Rest of Gironde = 3","61ff0c2a":"# Use of machine learning algorythm","fa8a160d":"## Creating square meter price column"}}