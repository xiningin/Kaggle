{"cell_type":{"15a9b2bd":"code","c5ffa3d3":"code","8ac432a6":"code","5f1b9ad0":"code","d181cf27":"code","539d5d03":"code","c15030c1":"code","cd71afd2":"code","e4bee658":"code","b5acf804":"code","b48390ca":"code","b28642a2":"code","e8fbef0d":"code","d38a1116":"code","ce49279a":"code","462d79b1":"code","339692a2":"code","4af6588a":"code","2378653d":"code","34839984":"code","0ff5376d":"code","af9a0e8c":"code","d664f6ef":"code","61f0b3a4":"code","5714e08d":"code","f54e52b4":"code","df3cf595":"code","cbce2905":"code","34e410d4":"code","ee3bb89e":"code","dcf4df83":"code","eb16e899":"code","fc1632c7":"code","a50a6d29":"code","94ffa281":"code","912a844c":"code","a5dd4f79":"code","b384f1dd":"code","14425af4":"code","9e914bce":"code","9aa26e8a":"code","81b9a9cf":"code","8e481985":"code","b9e22f63":"markdown","0cc3dd20":"markdown","6f93597a":"markdown","6bb18eb4":"markdown","1969a83b":"markdown","42bf6b2c":"markdown","bc5a0317":"markdown","6d3ce1e2":"markdown","fcbf7dc9":"markdown","77e1ca62":"markdown","54e9cc75":"markdown","b3bb240a":"markdown","e175cece":"markdown","680a4e2d":"markdown","aacde0a7":"markdown","50dd693c":"markdown","f578abe2":"markdown"},"source":{"15a9b2bd":"import pandas as pd  # \u6570\u636e\u79d1\u5b66\u8ba1\u7b97\u5de5\u5177\nimport numpy as np  # \u6570\u503c\u8ba1\u7b97\u5de5\u5177\nimport matplotlib.pyplot as plt  # \u53ef\u89c6\u5316\nimport seaborn as sns  # matplotlib\u7684\u9ad8\u7ea7API","c5ffa3d3":"\npima = pd.read_csv('..\/input\/pima-indians-diabetes-database\/diabetes.csv')\npima.head()\n#pima.head()\u9ed8\u8ba4\u524d5\u884c\uff0cpima.tail()\u9ed8\u8ba4\u6700\u540e5\u884c\uff0c\u67e5\u770bSeries\u6216\u8005DataFrame\u5bf9\u8c61\u7684\u5c0f\u6837\u672c\uff0c\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u81ea\u5b9a\u4e49\u6570\u5b57","8ac432a6":"pima.shape,pima.keys(),type(pima)","5f1b9ad0":"pima.describe()\n# panda\u7684describe\u63cf\u8ff0\u5c5e\u6027\uff0c\u5c55\u793a\u4e86\u6bcf\u4e00\u4e2a\u5b57\u6bb5\u7684\n#\u3010count\u6761\u76ee\u7edf\u8ba1\uff0cmean\u5e73\u5747\u503c\uff0cstd\u6807\u51c6\u503c\uff0cmin\u6700\u5c0f\u503c\uff0c25%\uff0c50%\u4e2d\u4f4d\u6570\uff0c75%\uff0cmax\u6700\u5927\u503c\u3011","d181cf27":"pima.groupby('Outcome').size()\n#\u6309\u7167\u662f\u5426\u53d1\u75c5\u5206\u7ec4\uff0c\u5e76\u5c55\u793a\u6bcf\u7ec4\u7684\u5927\u5c0f","539d5d03":"\npima.hist(figsize=(16, 14));\n#\u67e5\u770b\u6bcf\u4e2a\u5b57\u6bb5\u7684\u6570\u636e\u5206\u5e03\uff1bfigsize\u7684\u53c2\u6570\u663e\u793a\u7684\u662f\u6bcf\u4e2a\u5b50\u56fe\u7684\u957f\u548c\u5bbd\n# \u540e\u9762\u52a0\u4e2a\u5206\u53f7\u5c31\u4e0d\u4f1a\u51fa\u73b0\u4e0b\u9762\u7684\u8f93\u51fa\n# array([[<matplotlib.axes._subplots.AxesSubplot object at 0x00000235316A7C50>,\n#         <matplotlib.axes._subplots.AxesSubplot object at 0x00000235319287B8>,\n#         <matplotlib.axes._subplots.AxesSubplot object at 0x0000023531945E48>],\n#        [<matplotlib.axes._subplots.AxesSubplot object at 0x0000023531977518>,\n#         <matplotlib.axes._subplots.AxesSubplot object at 0x000002353199FBA8>,\n#         <matplotlib.axes._subplots.AxesSubplot object at 0x000002353199FBE0>],\n#        [<matplotlib.axes._subplots.AxesSubplot object at 0x0000023531EA8908>,\n#         <matplotlib.axes._subplots.AxesSubplot object at 0x0000023531ED1F98>,\n#         <matplotlib.axes._subplots.AxesSubplot object at 0x0000023531F03668>]],\n#       dtype=object)","c15030c1":"sns.pairplot(pima, vars=pima.columns,hue = 'Outcome')\n\n# \u62a5\u9519LinAlgError: singular matrix","cd71afd2":"sns.pairplot(pima, vars=pima.columns[:-1], hue='Outcome')\nplt.show()\n# seaborn\u5e38\u7528\u547d\u4ee4\n#\u30101\u3011set_style()\u662f\u7528\u6765\u8bbe\u7f6e\u4e3b\u9898\u7684\uff0cSeaborn\u67095\u4e2a\u9884\u8bbe\u597d\u7684\u4e3b\u9898\uff1adarkgrid\u3001whitegrid\u3001dark\u3001white\u3001ticks\uff0c\u9ed8\u8ba4\u4e3adarkgrid\n#\u30102\u3011set()\u901a\u8fc7\u8bbe\u7f6e\u53c2\u6570\u53ef\u4ee5\u7528\u6765\u8bbe\u7f6e\u80cc\u666f\uff0c\u8c03\u8272\u677f\u7b49\uff0c\u66f4\u52a0\u5e38\u7528\n#\u30103\u3011displot()\u4e3ahist\u52a0\u5f3a\u7248\n#\u30104\u3011kdeplot()\u4e3a\u5bc6\u5ea6\u66f2\u7ebf\u56fe\n#\u30105\u3011boxplot()\u4e3a\u7bb1\u56fe\n#\u30106\u3011joinplot()\u8054\u5408\u5206\u5e03\u56fe\n#\u30107\u3011heatmap()\u70ed\u70b9\u56fe\n#\u30108\u3011pairplot()\u591a\u53d8\u91cf\u56fe\uff0c\u53ef\u4ee5\u652f\u6301\u5404\u79cd\u7c7b\u578b\u7684\u53d8\u91cf\u5206\u6790\uff0c\u662f\u7279\u5f81\u5206\u6790\u5f88\u597d\u7528\u7684\u5de5\u5177\n# data\uff1a\u5fc5\u4e0d\u53ef\u5c11\u7684\u6570\u636e\uff1bhue\uff1a\u7528\u4e00\u4e2a\u7279\u5f81\u6765\u663e\u793a\u56fe\u50cf\u4e0a\u7684\u989c\u8272\uff0c\u7c7b\u4f3c\u4e8e\u6253\u6807\u7b7e\uff1bvars:\u53ea\u7559\u51e0\u4e2a\u7279\u5f81\u4e24\u4e24\u6bd4\u8f83\uff0c\u5426\u5219\u4f7f\u7528data\u7684\u5168\u90e8\u53d8\u91cf\uff1b","e4bee658":"# sns.pairplot(pima,diag_kind='hist', hue='Outcome')\nsns.pairplot(pima, diag_kind='hist');\n","b5acf804":"pima.plot(kind='box', subplots=True, layout=(3,3), sharex=False,sharey=False, figsize=(16,14));\n\n# \u7bb1\u7ebf\u56fe\uff08Boxplot\uff09\u4e5f\u79f0\u7bb1\u987b\u56fe\uff08Box-whisker Plot\uff09\uff0c\u662f\u5229\u7528\u6570\u636e\u4e2d\u7684\u4e94\u4e2a\u7edf\u8ba1\u91cf\uff1a\u6700\u5c0f\u503c\u3001\u7b2c\u4e00\u56db\u5206\u4f4d\u6570\u3001\u4e2d\u4f4d\u6570\u3001\u7b2c\u4e09\u56db\u5206\u4f4d\u6570\u4e0e\u6700\u5927\u503c\n# \u6765\u63cf\u8ff0\u6570\u636e\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c\u5b83\u4e5f\u53ef\u4ee5\u7c97\u7565\u5730\u770b\u51fa\u6570\u636e\u662f\u5426\u5177\u6709\u6709\u5bf9\u79f0\u6027\uff0c\u5206\u5e03\u7684\u5206\u6563\u7a0b\u5ea6\u7b49\u4fe1\u606f\uff0c\u7279\u522b\u53ef\u4ee5\u7528\u4e8e\u5bf9\u51e0\u4e2a\u6837\u672c\u7684\u6bd4\u8f83\u3002\n# \u901a\u8fc7\u76d2\u56fe\uff0c\u5728\u5206\u6790\u6570\u636e\u7684\u65f6\u5019\uff0c\u76d2\u56fe\u80fd\u591f\u6709\u6548\u5730\u5e2e\u52a9\u6211\u4eec\u8bc6\u522b\u6570\u636e\u7684\u7279\u5f81\uff1a\n#  \u76f4\u89c2\u5730\u8bc6\u522b\u6570\u636e\u96c6\u4e2d\u7684\u5f02\u5e38\u503c(\u67e5\u770b\u79bb\u7fa4\u70b9)\u3002\n#  \u5224\u65ad\u6570\u636e\u96c6\u7684\u6570\u636e\u79bb\u6563\u7a0b\u5ea6\u548c\u504f\u5411(\u89c2\u5bdf\u76d2\u5b50\u7684\u957f\u5ea6\uff0c\u4e0a\u4e0b\u9694\u95f4\u7684\u5f62\u72b6\uff0c\u4ee5\u53ca\u80e1\u987b\u7684\u957f\u5ea6)\u3002\n\n#pandas.plot\u4f5c\u56fe\uff1a\u6570\u636e\u5206\u4e3aSeries \u548c DataFrame\u4e24\u79cd\u7c7b\u578b\uff1b\u73b0\u91ca\u4e49\u6570\u636e\u4e3aDataFrame\u7684\u53c2\u6570\n\n#\u30100\u3011data:DataFrame\n#\u30101\u3011x:label or position,default None \u6307\u6570\u636e\u6846\u5217\u7684\u6807\u7b7e\u6216\u4f4d\u7f6e\u53c2\u6570\n#\u30102\u3011y:label or position,default None \u6307\u6570\u636e\u6846\u5217\u7684\u6807\u7b7e\u6216\u4f4d\u7f6e\u53c2\u6570\n#\u30103\u3011kind:str\uff08line\u6298\u7ebf\u56fe\u3001bar\u6761\u5f62\u56fe\u3001barh\u6a2a\u5411\u6761\u5f62\u56fe\u3001hist\u67f1\u72b6\u56fe\u3001\n#               box\u7bb1\u7ebf\u56fe\u3001kde Kernel\u7684\u5bc6\u5ea6\u4f30\u8ba1\u56fe\uff0c\u4e3b\u8981\u5bf9\u67f1\u72b6\u56fe\u6dfb\u52a0Kernel\u6982\u7387\u5bc6\u5ea6\u7ebf\u3001\n#               density same as \u201ckde\u201d\u3001area\u533a\u57df\u56fe\u3001pie\u997c\u56fe\u3001scatter\u6563\u70b9\u56fe\u3001hexbin\uff09\n#\u30104\u3011subplots:boolean\uff0cdefault False\uff0c\u4e3a\u6bcf\u4e00\u5217\u5355\u72ec\u753b\u4e00\u4e2a\u5b50\u56fe\n#\u30105\u3011sharex:boolean\uff0cdefault True if ax is None else False\n#\u30106\u3011sharey:boolean,default False\n#\u30107\u3011loglog:boolean,default False,x\u8f74\/y\u8f74\u540c\u65f6\u4f7f\u7528log\u523b\u5ea6\n","b48390ca":"pima.plot(kind='box', subplots=True, layout=(3,3), sharex=False,sharey=False, figsize=(16,14))\n\n\n#pandas.plot\u4f5c\u56fe\uff1a\u6570\u636e\u5206\u4e3aSeries \u548c DataFrame\u4e24\u79cd\u7c7b\u578b\uff1b\u73b0\u91ca\u4e49\u6570\u636e\u4e3aDataFrame\u7684\u53c2\u6570\n\n#\u30100\u3011data:DataFrame\n#\u30101\u3011x:label or position,default None \u6307\u6570\u636e\u6846\u5217\u7684\u6807\u7b7e\u6216\u4f4d\u7f6e\u53c2\u6570\n#\u30102\u3011y:label or position,default None \u6307\u6570\u636e\u6846\u5217\u7684\u6807\u7b7e\u6216\u4f4d\u7f6e\u53c2\u6570\n#\u30103\u3011kind:str\uff08line\u6298\u7ebf\u56fe\u3001bar\u6761\u5f62\u56fe\u3001barh\u6a2a\u5411\u6761\u5f62\u56fe\u3001hist\u67f1\u72b6\u56fe\u3001\n#               box\u7bb1\u7ebf\u56fe\u3001kde Kernel\u7684\u5bc6\u5ea6\u4f30\u8ba1\u56fe\uff0c\u4e3b\u8981\u5bf9\u67f1\u72b6\u56fe\u6dfb\u52a0Kernel\u6982\u7387\u5bc6\u5ea6\u7ebf\u3001\n#               density same as \u201ckde\u201d\u3001area\u533a\u57df\u56fe\u3001pie\u997c\u56fe\u3001scatter\u6563\u70b9\u56fe\u3001hexbin\uff09\n#\u30104\u3011subplots:boolean\uff0cdefault False\uff0c\u4e3a\u6bcf\u4e00\u5217\u5355\u72ec\u753b\u4e00\u4e2a\u5b50\u56fe\n#\u30105\u3011sharex:boolean\uff0cdefault True if ax is None else False\n#\u30106\u3011sharey:boolean,default False\n#\u30107\u3011loglog:boolean,default False,x\u8f74\/y\u8f74\u540c\u65f6\u4f7f\u7528log\u523b\u5ea6","b28642a2":"c = pima.iloc[:,0:8].corr()# \u9009\u62e9\u7279\u5f81\u5217\uff0c\u53bb\u6389\u76ee\u6807\u5217\nc","e8fbef0d":"corr = pima.corr()  # \u8ba1\u7b97\u53d8\u91cf\u7684\u76f8\u5173\u7cfb\u6570\uff0c\u5f97\u5230\u4e00\u4e2aN * N\u7684\u77e9\u9635\ncorr","d38a1116":"plt.subplots(figsize=(14,12)) # \u53ef\u4ee5\u5148\u8bd5\u7528plt\u8bbe\u7f6e\u753b\u5e03\u7684\u5927\u5c0f\uff0c\u7136\u540e\u5728\u4f5c\u56fe\uff0c\u4fee\u6539\nsns.heatmap(corr, annot = True) # \u4f7f\u7528\u70ed\u5ea6\u56fe\u53ef\u89c6\u5316\u8fd9\u4e2a\u76f8\u5173\u7cfb\u6570\u77e9\u9635\n\n\n# \u5176\u751f\u6210\u7684\u539f\u7406\u7b80\u5355\u6982\u62ec\u4e3a\u56db\u4e2a\u6b65\u9aa4\uff1a\n\n# \uff081\uff09\u4e3a\u79bb\u6563\u70b9\u8bbe\u5b9a\u4e00\u4e2a\u534a\u5f84\uff0c\u521b\u5efa\u4e00\u4e2a\u7f13\u51b2\u533a\uff1b\n\n# \uff082\uff09\u5bf9\u6bcf\u4e2a\u79bb\u6563\u70b9\u7684\u7f13\u51b2\u533a\uff0c\u4f7f\u7528\u6e10\u8fdb\u7684\u7070\u5ea6\u5e26\uff08\u5b8c\u6574\u7684\u7070\u5ea6\u5e26\u662f0~255\uff09\u4ece\u5185\u800c\u5916\uff0c\u7531\u6d45\u81f3\u6df1\u5730\u586b\u5145\uff1b\n\n# \uff083\uff09\u7531\u4e8e\u7070\u5ea6\u503c\u53ef\u4ee5\u53e0\u52a0\uff08\u503c\u8d8a\u5927\u989c\u8272\u8d8a\u4eae\uff0c\u5728\u7070\u5ea6\u5e26\u4e2d\u5219\u663e\u5f97\u8d8a\u767d\u3002\u5728\u5b9e\u9645\u4e2d\uff0c\u53ef\u4ee5\u9009\u62e9ARGB\u6a21\u578b\u4e2d\u4efb\u4e00\u901a\u9053\u4f5c\u4e3a\u53e0\u52a0\u7070\u5ea6\u503c\uff09\uff0c\n#     \u4ece\u800c\u5bf9\u4e8e\u6709\u7f13\u51b2\u533a\u4ea4\u53c9\u7684\u533a\u57df\uff0c\u53ef\u4ee5\u53e0\u52a0\u7070\u5ea6\u503c\uff0c\u56e0\u800c\u7f13\u51b2\u533a\u4ea4\u53c9\u7684\u8d8a\u591a\uff0c\u7070\u5ea6\u503c\u8d8a\u5927\uff0c\u8fd9\u5757\u533a\u57df\u4e5f\u5c31\u8d8a\u201c\u70ed\u201d\uff1b\n\n# \uff084\uff09\u4ee5\u53e0\u52a0\u540e\u7684\u7070\u5ea6\u503c\u4e3a\u7d22\u5f15\uff0c\u4ece\u4e00\u6761\u6709256\u79cd\u989c\u8272\u7684\u8272\u5e26\u4e2d\uff08\u4f8b\u5982\u5f69\u8679\u8272\uff09\u6620\u5c04\u989c\u8272\uff0c\u5e76\u5bf9\u56fe\u50cf\u91cd\u65b0\u7740\u8272\uff0c\u4ece\u800c\u5b9e\u73b0\u70ed\u70b9\u56fe\u3002","ce49279a":"# \u5bfc\u5165\u548c\u7279\u5f81\u9009\u62e9\u76f8\u5173\u7684\u5305\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\n\n# SelectKBest() \u53ea\u4fdd\u7559K\u4e2a\u6700\u9ad8\u5206\u7684\u7279\u5f81\n# SelectPercentile() \u53ea\u4fdd\u7559\u7528\u6237\u6307\u5b9a\u767e\u5206\u6bd4\u7684\u6700\u9ad8\u5f97\u5206\u7684\u7279\u5f81\n# \u4f7f\u7528\u5e38\u89c1\u7684\u5355\u53d8\u91cf\u7edf\u8ba1\u68c0\u9a8c\uff1a\u5047\u6b63\u7387SelectFpr\uff0c\u9519\u8bef\u53d1\u73b0\u7387SelectFdr\uff0c\u6216\u8005\u603b\u4f53\u9519\u8bef\u7387SelectFwe\n# GenericUnivariateSelect\u901a\u8fc7\u7ed3\u6784\u5316\u7b56\u7565\u8fdb\u884c\u7279\u5f81\u9009\u62e9\uff0c\u901a\u8fc7\u8d85\u53c2\u6570\u641c\u7d22\u4f30\u8ba1\u5668\u8fdb\u884c\u7279\u5f81\u9009\u62e9\n\n# SelectKBest()\u548cSelectPercentile()\u80fd\u591f\u8fd4\u56de\u7279\u5f81\u8bc4\u4ef7\u7684\u5f97\u5206\u548cP\u503c\n#\n# sklearn.feature_selection.SelectPercentile(score_func=<function f_classif>, percentile=10)\n# sklearn.feature_selection.SelectKBest(score_func=<function f_classif>, k=10)\n\n# \u5176\u4e2d\u7684\u53c2\u6570score_func\u6709\u4ee5\u4e0b\u9009\u9879\uff1a\n\n#\u30101\u3011\u56de\u5f52\uff1af_regression:\u76f8\u5173\u7cfb\u6570\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u53d8\u91cf\u4e0e\u76ee\u6807\u53d8\u91cf\u7684\u76f8\u5173\u7cfb\u6570\uff0c\u7136\u540e\u8ba1\u7b97\u51faF\u503c\u548cP\u503c\n#          mutual_info_regression:\u4e92\u4fe1\u606f\uff0c\u4e92\u4fe1\u606f\u5ea6\u91cfX\u548cY\u5171\u4eab\u7684\u4fe1\u606f\uff1a\n#         \u5b83\u5ea6\u91cf\u77e5\u9053\u8fd9\u4e24\u4e2a\u53d8\u91cf\u5176\u4e2d\u4e00\u4e2a\uff0c\u5bf9\u53e6\u4e00\u4e2a\u4e0d\u786e\u5b9a\u5ea6\u51cf\u5c11\u7684\u7a0b\u5ea6\u3002\n#\u30102\u3011\u5206\u7c7b\uff1achi2\uff1a\u5361\u65b9\u68c0\u9a8c\n#          f_classif:\u65b9\u5dee\u5206\u6790\uff0c\u8ba1\u7b97\u65b9\u5dee\u5206\u6790\uff08ANOVA\uff09\u7684F\u503c\uff08\u7ec4\u95f4\u5747\u65b9\/\u7ec4\u5185\u5747\u65b9\uff09\uff1b\n#          mutual_info_classif:\u4e92\u4fe1\u606f\uff0c\u4e92\u4fe1\u606f\u65b9\u6cd5\u53ef\u4ee5\u6355\u6349\u4efb\u4f55\u4e00\u79cd\u7edf\u8ba1\u4f9d\u8d56\uff0c\u4f46\u662f\u4f5c\u4e3a\u975e\u53c2\u6570\u65b9\u6cd5\uff0c\n#                              \u9700\u8981\u66f4\u591a\u7684\u6837\u672c\u8fdb\u884c\u51c6\u786e\u7684\u4f30\u8ba1\u3002","462d79b1":"X = pima.iloc[:, 0:8]  # \u7279\u5f81\u5217 0-7\u5217\uff0c\u4e0d\u542b\u7b2c8\u5217\nY = pima.iloc[:, 8]  # \u76ee\u6807\u5217\u4e3a\u7b2c8\u5217\n\nselect_top_4 = SelectKBest(score_func=chi2, k=4)  # \u901a\u8fc7\u5361\u65b9\u68c0\u9a8c\u9009\u62e94\u4e2a\u5f97\u5206\u6700\u9ad8\u7684\u7279\u5f81","339692a2":"X.shape,pima.shape","4af6588a":"X.head()","2378653d":"fit = select_top_4.fit(X, Y)  # \u83b7\u53d6\u7279\u5f81\u4fe1\u606f\u548c\u76ee\u6807\u503c\u4fe1\u606f\nfeatures = fit.transform(X)  # \u7279\u5f81\u8f6c\u6362","34839984":"features[0:5]\n#\u65b0\u7279\u5f81\u5217\u7684\u524d5\u884c\n# \u56e0\u6b64\uff0c\u8868\u73b0\u6700\u4f73\u7684\u7279\u5f81\u662f\uff1aGlucose-\u8461\u8404\u7cd6\u3001Insulin-\u80f0\u5c9b\u7d20\u3001BMI\u6307\u6570\u3001Age-\u5e74\u9f84","0ff5376d":"# \u6784\u9020\u65b0\u7279\u5f81DataFrame\nX_features = pd.DataFrame(data = features, columns=['Glucose','Insulin','BMI','Age']) ","af9a0e8c":"X_features.head()","d664f6ef":"# \u5b83\u5c06\u5c5e\u6027\u503c\u66f4\u6539\u4e3a \u5747\u503c\u4e3a0\uff0c\u6807\u51c6\u5dee\u4e3a1 \u7684 \u9ad8\u65af\u5206\u5e03.\n# \u5f53\u7b97\u6cd5\u671f\u671b\u8f93\u5165\u7279\u5f81\u5904\u4e8e\u9ad8\u65af\u5206\u5e03\u65f6\uff0c\u5b83\u975e\u5e38\u6709\u7528\nfrom sklearn.preprocessing import StandardScaler\n\n# StandardScaler\n# \u4f5c\u7528\uff1a\u53bb\u5747\u503c\u548c\u65b9\u5dee\u5f52\u4e00\u5316\u3002\u4e14\u662f\u9488\u5bf9\u6bcf\u4e00\u4e2a\u7279\u5f81\u7ef4\u5ea6\u6765\u505a\u7684\uff0c\u800c\u4e0d\u662f\u9488\u5bf9\u6837\u672c\u3002 StandardScaler\u5bf9\u6bcf\u5217\u5206\u522b\u6807\u51c6\u5316\uff0c\n# \u56e0\u4e3ashape of data: [n_samples, n_features]\n# \u3010\u6ce8\uff1a\u3011 \u5e76\u4e0d\u662f\u6240\u6709\u7684\u6807\u51c6\u5316\u90fd\u80fd\u7ed9estimator\u5e26\u6765\u597d\u5904\u3002","61f0b3a4":"rescaledX = StandardScaler().fit_transform(\n    X_features)  # \u901a\u8fc7sklearn\u7684preprocessing\u6570\u636e\u9884\u5904\u7406\u4e2dStandardScaler\u7279\u5f81\u7f29\u653e \u6807\u51c6\u5316\u7279\u5f81\u4fe1\u606f\nX = pd.DataFrame(data=rescaledX, columns=X_features.columns)  # \u6784\u5efa\u65b0\u7279\u5f81DataFrame\nX.head()","5714e08d":"from sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import train_test_split\n\n# \u5207\u5206\u6570\u636e\u96c6\u4e3a\uff1a\u7279\u5f81\u8bad\u7ec3\u96c6\u3001\u7279\u5f81\u6d4b\u8bd5\u96c6\u3001\u76ee\u6807\u8bad\u7ec3\u96c6\u3001\u76ee\u6807\u6d4b\u8bd5\u96c6\nX_train, X_test, Y_train, Y_test = train_test_split(\n    X, Y, random_state=2019, test_size=0.2)","f54e52b4":"X.shape, Y.shape, X_train.shape, Y_train.shape, X_test.shape, Y_test.shape","df3cf595":"models = []\nmodels.append((\"LR\", LogisticRegression()))  #\u903b\u8f91\u56de\u5f52\nmodels.append((\"NB\", GaussianNB()))  # \u9ad8\u65af\u6734\u7d20\u8d1d\u53f6\u65af\nmodels.append((\"KNN\", KNeighborsClassifier()))  #K\u8fd1\u90bb\u5206\u7c7b\nmodels.append((\"DT\", DecisionTreeClassifier()))  #\u51b3\u7b56\u6811\u5206\u7c7b\nmodels.append((\"SVM\", SVC()))  # \u652f\u6301\u5411\u91cf\u673a\u5206\u7c7b","cbce2905":"models","34e410d4":"import warnings\nwarnings.filterwarnings('ignore')  #\u6d88\u9664\u8b66\u544a\n\nresults = []\nnames = []\nfor name, model in models:\n    kflod = KFold(n_splits=10, random_state=2019)\n    cv_result = cross_val_score(\n        model, X_train, Y_train, cv=kflod, scoring='accuracy')\n    names.append(name)\n    results.append(cv_result)\nprint(results,names)\n\nprint('++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++')\nfor i in range(len(names)):\n    print(names[i], results[i].mean)","ee3bb89e":"results,names","dcf4df83":"# \u30101\u3011 Applying Kernel PCA\n\nfrom sklearn.decomposition import KernelPCA\n\nkpca = KernelPCA(n_components=2, kernel='rbf')\nX_train_pca = kpca.fit_transform(X_train)\nX_test_pca = kpca.transform(X_test)\n\n# fit\u548ctransform\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u4ec5\u4ec5\u662f\u6570\u636e\u5904\u7406\u7684\u4e24\u4e2a\u4e0d\u540c\u73af\u8282\uff0c\u4e4b\u6240\u4ee5\u51fa\u6765fit_transform\u8fd9\u4e2a\u51fd\u6570\u540d\uff0c\u4ec5\u4ec5\u662f\u4e3a\u4e86\u5199\u4ee3\u7801\u65b9\u4fbf\uff0c\u4f1a\u9ad8\u6548\u4e00\u70b9\u3002\n\n# sklearn\u91cc\u7684\u5c01\u88c5\u597d\u7684\u5404\u79cd\u7b97\u6cd5\u4f7f\u7528\u524d\u90fd\u8981fit\uff0cfit\u76f8\u5bf9\u4e8e\u6574\u4e2a\u4ee3\u7801\u800c\u8a00\uff0c\u4e3a\u540e\u7eedAPI\u670d\u52a1\u3002fit\u4e4b\u540e\uff0c\u7136\u540e\u8c03\u7528\u5404\u79cdAPI\u65b9\u6cd5\uff0c\n# transform\u53ea\u662f\u5176\u4e2d\u4e00\u4e2aAPI\u65b9\u6cd5\uff0c\u6240\u4ee5\u5f53\u4f60\u8c03\u7528transform\u4e4b\u5916\u7684\u65b9\u6cd5\uff0c\u4e5f\u5fc5\u987b\u8981\u5148fit\u3002\n\n# fit\u539f\u4e49\u6307\u7684\u662f\u5b89\u88c5\u3001\u4f7f\u9002\u5408\u7684\u610f\u601d\uff0c\u5176\u5b9e\u6709\u70b9train\u7684\u542b\u4e49\uff0c\u4f46\u662f\u548ctrain\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u5e76\u4e0d\u662f\u4e00\u4e2a\u8bad\u7ec3\u7684\u8fc7\u7a0b\uff0c\u800c\u662f\u4e00\u4e2a\u9002\u914d\u7684\u8fc7\u7a0b\uff0c\n# \u8fc7\u7a0b\u90fd\u662f\u786e\u5b9a\u7684\uff0c\u6700\u540e\u5f97\u5230\u4e00\u4e2a\u53ef\u7528\u4e8e\u8f6c\u6362\u7684\u6709\u4ef7\u503c\u7684\u4fe1\u606f\u3002\n\n# 1\u3001\u5fc5\u987b\u5148\u7528fit_transform(trainData)\uff0c\u4e4b\u540e\u518dtransform(testData)\n# 2\u3001\u5982\u679c\u76f4\u63a5transform(testData)\uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\n# 3\u3001\u5982\u679cfit_transfrom(trainData)\u540e\uff0c\u4f7f\u7528fit_transform(testData)\u800c\u4e0dtransform(testData)\uff0c\u867d\u7136\u4e5f\u80fd\u5f52\u4e00\u5316\uff0c\n# \u4f46\u662f\u4e24\u4e2a\u7ed3\u679c\u4e0d\u662f\u5728\u540c\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u4e0b\u7684\uff0c\u5177\u6709\u660e\u663e\u5dee\u5f02\u3002(\u4e00\u5b9a\u8981\u907f\u514d\u8fd9\u79cd\u60c5\u51b5)\n\n# 4\u3001fit_transform()\u5e72\u4e86\u4e24\u4ef6\u4e8b\uff1afit\u627e\u5230\u6570\u636e\u8f6c\u6362\u89c4\u5219\uff0c\u5e76\u5c06\u6570\u636e\u6807\u51c6\u5316\n# 5\u3001transform()\u53ef\u4ee5\u76f4\u63a5\u628a\u8f6c\u6362\u89c4\u5219\u62ff\u6765\u7528\uff0c\u6240\u4ee5\u5e76\u4e0d\u9700\u8981fit_transform()\uff0c\u5426\u5219\uff0c\u4e24\u6b21\u6807\u51c6\u5316\u540e\u7684\u6570\u636e\u683c\u5f0f\u5c31\u4e0d\u4e00\u6837\u4e86\n\n","eb16e899":"X_train.shape,X_test.shape,X_train_pca.shape,X_test_pca.shape,Y_train.shape","fc1632c7":"plt.figure(figsize=(10,8))\nplt.scatter(X_train_pca[:,0], X_train_pca[:,1],c=Y_train,cmap='plasma')\nplt.xlabel(\"First principal component\")\nplt.ylabel(\"Second principal component\")","a50a6d29":"plt.figure(figsize=(10,8))\nplt.scatter(X_train_pca[:,0], X_train_pca[:,1],c=Y_train)\nplt.xlabel(\"First principal component\")\nplt.ylabel(\"Second principal component\")","94ffa281":"from sklearn.svm import SVC\nfrom sklearn.metrics import classification_report, confusion_matrix\n\nclassifier = SVC(kernel = 'rbf')\nclassifier.fit(X_train_pca, Y_train)","912a844c":"# \u4f7f\u7528SVC\u9884\u6d4b\u751f\u5b58\n\ny_pred = classifier.predict(X_test_pca)\ncm = confusion_matrix(Y_test, y_pred)\nprint(cm)#\u9884\u6d4b\u771f\u786e\u548c\u9519\u8bef\u7684\u4e2a\u6570\nprint('++++++++++++++++++++++++++++++++')\nprint(classification_report(Y_test, y_pred))\n\n# \u6df7\u6dc6\u77e9\u9635\uff08confusion_matrix\uff09\u3002\n\n# TP(True Positive)\uff1a\u5c06\u6b63\u7c7b\u9884\u6d4b\u4e3a\u6b63\u7c7b\u6570\uff0c\u771f\u5b9e\u4e3a0\uff0c\u9884\u6d4b\u4e5f\u4e3a0\n# FN(False Negative)\uff1a\u5c06\u6b63\u7c7b\u9884\u6d4b\u4e3a\u8d1f\u7c7b\u6570\uff0c\u771f\u5b9e\u4e3a0\uff0c\u9884\u6d4b\u4e3a1\n# FP(False Positive)\uff1a\u5c06\u8d1f\u7c7b\u9884\u6d4b\u4e3a\u6b63\u7c7b\u6570\uff0c \u771f\u5b9e\u4e3a1\uff0c\u9884\u6d4b\u4e3a0\n# TN(True Negative)\uff1a\u5c06\u8d1f\u7c7b\u9884\u6d4b\u4e3a\u8d1f\u7c7b\u6570\uff0c\u771f\u5b9e\u4e3a1\uff0c\u9884\u6d4b\u4e5f\u4e3a1\n\n# \u7cbe\u786e\u7387(precision)\u5206\u6bcd\u4e3a\u9884\u6d4b\u4e3a\u6b63\u6837\u4f8b\u7684\u4e2a\u6570\uff0c\u5206\u5b50\u4e3a\u9884\u6d4b\u4e3a\u5b9e\u9645\u6b63\u6837\u4f8b\u88ab\u9884\u6d4b\u51c6\u7684\u4e2a\u6570\n# \u53ec\u56de\u7387(recall)\u5206\u6bcd\u4e3a\u5b9e\u9645\u6b63\u6837\u4f8b\u7684\u4e2a\u6570\uff0c\u5206\u5b50\u4e3a\u9884\u6d4b\u4e3a\u5b9e\u9645\u6b63\u6837\u4f8b\u88ab\u9884\u6d4b\u51c6\u7684\u4e2a\u6570\n# F1-score\u6df7\u5408\u7684\u5ea6\u91cf\uff0c\u5bf9\u4e0d\u5e73\u8861\u7c7b\u522b\u975e\u5e38\u6709\u6548\n# \u51c6\u786e\u7387(accuracy)\u6a21\u578b\u7684\u6574\u4f53\u7684\u6027\u80fd\u7684\u8bc4\u4f30\n# Specificity\u5206\u6bcd\u4e3a\u5b9e\u9645\u8d1f\u6837\u4f8b\u7684\u4e2a\u6570\uff0c\u5206\u5b50\u4e3a\u9884\u6d4b\u4e3a\u5b9e\u9645\u8d1f\u6837\u4f8b\u88ab\u9884\u6d4b\u51c6\u7684\u4e2a\u6570\n# \u53f3\u8fb9support\u5217\u4e3a\u6bcf\u4e2a\u6807\u7b7e\u7684\u51fa\u73b0\u6b21\u6570\uff0eavg \/ total\u884c\u4e3a\u5404\u5217\u7684\u5747\u503c\uff08support\u5217\u4e3a\u603b\u548c\uff09\uff0e \n\n","a5dd4f79":"from sklearn.model_selection import GridSearchCV\nparam_grid = {'C':[0.1, 1, 10, 100], 'gamma':[1, 0.1, 0.01, 0.001]};\ngrid = GridSearchCV(SVC(),param_grid,refit=True,verbose = 2);\ngrid.fit(X_train_pca, Y_train);\n\n# \u9884\u6d4b\ngrid_predictions = grid.predict(X_test_pca);\n\n# \u5206\u7c7b\u62a5\u544a\nprint(classification_report(Y_test,grid_predictions))","b384f1dd":"results","14425af4":"ax = sns.boxplot(data = results)\nax.set_xticklabels(names)\n\n# \u901a\u8fc7\u76d2\u56fe\uff0c\u5728\u5206\u6790\u6570\u636e\u7684\u65f6\u5019\uff0c\u76d2\u56fe\u80fd\u591f\u6709\u6548\u5730\u5e2e\u52a9\u6211\u4eec\u8bc6\u522b\u6570\u636e\u7684\u7279\u5f81\uff1a\n#  \u76f4\u89c2\u5730\u8bc6\u522b\u6570\u636e\u96c6\u4e2d\u7684\u5f02\u5e38\u503c(\u67e5\u770b\u79bb\u7fa4\u70b9)\u3002\n#  \u5224\u65ad\u6570\u636e\u96c6\u7684\u6570\u636e\u79bb\u6563\u7a0b\u5ea6\u548c\u504f\u5411(\u89c2\u5bdf\u76d2\u5b50\u7684\u957f\u5ea6\uff0c\u4e0a\u4e0b\u9694\u95f4\u7684\u5f62\u72b6\uff0c\u4ee5\u53ca\u80e1\u987b\u7684\u957f\u5ea6)\u3002","9e914bce":"lr = LogisticRegression() # LR\u6a21\u578b\u6784\u5efa\nlr.fit(X_train, Y_train) # \npredictions = lr.predict(X_test) # \u4f7f\u7528\u6d4b\u8bd5\u503c\u9884\u6d4b","9aa26e8a":"from sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix","81b9a9cf":"print(accuracy_score(Y_test, predictions)) # \u6253\u5370\u8bc4\u4f30\u6307\u6807\uff08\u5206\u7c7b\u51c6\u786e\u7387\uff09\nprint(classification_report(Y_test,predictions)) ","8e481985":"conf = confusion_matrix(Y_test, predictions) # \u6df7\u6dc6\u77e9\u9635\nlabel = [\"0\",\"1\"] # \nsns.heatmap(conf, annot = True, xticklabels=label, yticklabels=label)","b9e22f63":"# 7\u3001 \u57fa\u4e8ePCA\u548c\u7f51\u683c\u641c\u7d22SVM\u53c2\u6570\n\n1\u3001PCA\u662f\u5e38\u7528\u7684\u63d0\u53d6\u6570\u636e\u7684\u624b\u6bb5\uff0c\u5176\u529f\u80fd\u4e3a\u63d0\u53d6\u4e3b\u6210\u5206\uff08\u4e3b\u8981\u4fe1\u606f\uff09\uff0c\u6452\u5f03\u5197\u4f59\u4fe1\u606f\uff08\u6b21\u8981\u4fe1\u606f\uff09\uff0c\u4ece\u800c\u5f97\u5230\u538b\u7f29\u540e\u7684\u6570\u636e\uff0c\u5b9e\u73b0\u7ef4\u5ea6\u7684\u4e0b\u964d\u3002<br\/>\n2\u3001\u5176\u8bbe\u60f3\u901a\u8fc7\u6295\u5f71\u77e9\u9635\u5c06\u9ad8\u7ef4\u4fe1\u606f\u8f6c\u6362\u5230\u53e6\u4e00\u4e2a\u5750\u6807\u7cfb\u4e0b\uff0c\u5e76\u901a\u8fc7\u5e73\u79fb\u5c06\u6570\u636e\u5747\u503c\u53d8\u4e3a\u96f6\u3002PCA\u8ba4\u4e3a\uff0c\u5728\u53d8\u6362\u8fc7\u540e\u7684\u6570\u636e\u4e2d\uff0c\u5728\u67d0\u4e00\u7ef4\u5ea6\u4e0a\uff0c\u6570\u636e\u5206\u5e03\u7684\u66f4\u5206\u6563\uff0c\u5219\u8ba4\u4e3a\u5bf9\u6570\u636e\u70b9\u5206\u5e03\u60c5\u51b5\u7684\u89e3\u91ca\u529b\u5c31\u66f4\u5f3a\u3002\u6545\u5728PCA\u4e2d\uff0c\u901a\u8fc7\u65b9\u5dee\u6765\u8861\u91cf\u6570\u636e\u6837\u672c\u5728\u5404\u4e2a\u65b9\u5411\u4e0a\u6295\u5f71\u7684\u5206\u5e03\u60c5\u51b5\uff0c\u8fdb\u800c\u5bf9\u6709\u6548\u7684\u4f4e\u7ef4\u65b9\u5411\u8fdb\u884c\u9009\u62e9\u3002<br\/>\n\n3\u3001KernelPCA\u662fPCA\u7684\u4e00\u4e2a\u6539\u8fdb\u7248\uff0c\u5b83\u5c06\u975e\u7ebf\u6027\u53ef\u5206\u7684\u6570\u636e\u8f6c\u6362\u5230\u4e00\u4e2a\u9002\u5408\u5bf9\u9f50\u8fdb\u884c\u7ebf\u6027\u5206\u7c7b\u7684\u65b0\u7684\u4f4e\u7ef4\u5b50\u7a7a\u95f4\u4e0a\uff0c\u6838PCA\u53ef\u4ee5\u901a\u8fc7\u975e\u7ebf\u6027\u6620\u5c04\u5c06\u6570\u636e\u8f6c\u6362\u5230\u4e00\u4e2a\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u4f7f\u7528PCA\u5c06\u5176\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u5e76\u901a\u8fc7\u7ebf\u6027\u5206\u7c7b\u5668\u5bf9\u6837\u672c\u8fdb\u884c\u5212\u5206\u3002<br\/>\n\n4\u3001\u6838\u51fd\u6570\uff1a\u901a\u8fc7\u4e24\u4e2a\u5411\u91cf\u70b9\u79ef\u6765\u5ea6\u91cf\u5411\u91cf\u95f4\u76f8\u4f3c\u5ea6\u7684\u51fd\u6570\u3002\u5e38\u7528\u51fd\u6570\u6709\uff1a\u591a\u9879\u5f0f\u6838\u3001\u53cc\u66f2\u6b63\u5207\u6838\u3001\u5f84\u5411\u57fa\u548c\u51fd\u6570\uff08RBF\uff09\uff08\u9ad8\u65af\u6838\u51fd\u6570\uff09\u7b49\u3002<br\/>\n\n5\u3001KPCA\u548cPCA\u90fd\u662f\u7528\u6765\u505a\u65e0\u76d1\u7763\u6570\u636e\u5904\u7406\u7684\uff0c\u4f46\u662f\u6709\u4e00\u70b9\u4e0d\u4e00\u6837\u3002PCA\u662f\u964d\u7ef4\uff0c\u628am\u7ef4\u7684\u6570\u636e\u964d\u81f3k\u7ef4\u3002KPCA\u6070\u6070\u76f8\u53cd\uff0c\u5b83\u662f\u628am\u7ef4\u7684\u6570\u636e\u5347\u81f3k\u7ef4\u3002\u4f46\u662f\u4ed6\u4eec\u5171\u540c\u7684\u76ee\u6807\u90fd\u662f\u8ba9\u6570\u636e\u5728\u76ee\u6807\u7ef4\u5ea6\u4e2d\uff08\u7ebf\u6027\uff09\u53ef\u5206\uff0c\u5373PCA\u7684\u6700\u5927\u53ef\u5206\u6027\u3002\u5728sklearn\u4e2d\uff0ckpca\u548cpca\u7684\u4f7f\u7528\u57fa\u672c\u4e00\u81f4\uff0c\u63a5\u53e3\u90fd\u662f\u4e00\u6837\u7684\u3002kpca\u9700\u8981\u6307\u5b9a\u6838\u51fd\u6570\uff0c\u4e0d\u7136\u9ed8\u8ba4\u7ebf\u6027\u6838\u3002","0cc3dd20":"## \u5f53\u6211\u4eec\u62ff\u5230\u4e00\u6279\u539f\u59cb\u7684\u6570\u636e\n\n1\u3001\u9996\u5148\u8981\u660e\u786e\u6709\u591a\u5c11\u7279\u5f81\uff0c\u54ea\u4e9b\u662f\u8fde\u7eed\u7684\uff0c\u54ea\u4e9b\u662f\u7c7b\u522b\u7684\u3002<br\/>\n2\u3001\u68c0\u67e5\u6709\u6ca1\u6709\u7f3a\u5931\u503c\uff0c\u5bf9\u786e\u5b9e\u7684\u7279\u5f81\u9009\u62e9\u6070\u5f53\u65b9\u5f0f\u8fdb\u884c\u5f25\u8865\uff0c\u4f7f\u6570\u636e\u5b8c\u6574\u3002<br\/>\n3\u3001\u5bf9\u8fde\u7eed\u7684\u6570\u503c\u578b\u7279\u5f81\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u4f7f\u5f97\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1\u3002<br\/>\n4\u3001\u5bf9\u7c7b\u522b\u578b\u7684\u7279\u5f81\u8fdb\u884cone-hot\u7f16\u7801\u3002<br\/>\n5\u3001\u5c06\u9700\u8981\u8f6c\u6362\u6210\u7c7b\u522b\u578b\u6570\u636e\u7684\u8fde\u7eed\u578b\u6570\u636e\u8fdb\u884c\u4e8c\u503c\u5316\u3002<br\/>\n6\u3001\u4e3a\u9632\u6b62\u8fc7\u62df\u5408\u6216\u8005\u5176\u4ed6\u539f\u56e0\uff0c\u9009\u62e9\u662f\u5426\u8981\u5c06\u6570\u636e\u8fdb\u884c\u6b63\u5219\u5316\u3002<br\/>\n7\u3001\u5728\u5bf9\u6570\u636e\u8fdb\u884c\u521d\u63a2\u4e4b\u540e\u53d1\u73b0\u6548\u679c\u4e0d\u4f73\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u591a\u9879\u5f0f\u65b9\u6cd5\uff0c\u5bfb\u627e\u975e\u7ebf\u6027\u7684\u5173\u7cfb\u3002<br\/>\n8\u3001\u6839\u636e\u5b9e\u9645\u95ee\u9898\u5206\u6790\u662f\u5426\u9700\u8981\u5bf9\u7279\u5f81\u8fdb\u884c\u76f8\u5e94\u7684\u51fd\u6570\u8f6c\u6362\u3002<br\/>\n","6f93597a":"# 4\u3001Feature Extraction \u7279\u5f81\u63d0\u53d6","6bb18eb4":"# 3\u3001Data Visualization - \u6570\u636e\u53ef\u89c6\u5316","1969a83b":"# 14\u3001\u4f7f\u7528\u903b\u8f91\u56de\u5f52\u9884\u6d4b ","42bf6b2c":"# 6\u3001\u673a\u5668\u5b66\u4e60 - \u6784\u5efa\u4e8c\u5206\u7c7b\u7b97\u6cd5\u6a21\u578b","bc5a0317":"# 9\u3001SVC","6d3ce1e2":"# 8\u3001 SVM\u65e8\u5728\u5c06\u4e00\u7ec4\u4e0d\u53ef\u7ebf\u6027\u5206\u5272\u7684\u6570\u636e\u7ebf\u6027\u5206\u5272\u3002\n##### \u6838\u51fd\u6570\uff1a\u901a\u8fc7\u4e24\u4e2a\u5411\u91cf\u70b9\u79ef\u6765\u5ea6\u91cf\u5411\u91cf\u95f4\u76f8\u4f3c\u5ea6\u7684\u51fd\u6570\u3002\u5e38\u7528\u51fd\u6570\u6709\uff1a\u591a\u9879\u5f0f\u6838\u3001\u53cc\u66f2\u6b63\u5207\u6838\u3001\u5f84\u5411\u57fa\u548c\u51fd\u6570\uff08RBF\uff09\uff08\u9ad8\u65af\u6838\u51fd\u6570\uff09\u7b49\u3002\n\u8fd9\u4e9b\u51fd\u6570\u4e2d\u5e94\u7528\u6700\u5e7f\u7684\u5e94\u8be5\u5c31\u662fRBF\u6838\u4e86\uff0c\u65e0\u8bba\u662f\u5c0f\u6837\u672c\u8fd8\u662f\u5927\u6837\u672c\uff0c\u9ad8\u7ef4\u8fd8\u662f\u4f4e\u7ef4\u7b49\u60c5\u51b5\uff0cRBF\u6838\u51fd\u6570\u5747\u9002\u7528\uff0c\u5b83\u76f8\u6bd4\u5176\u4ed6\u7684\u51fd\u6570\u6709\u4e00\u4e0b\u4f18\u70b9\uff1a<br\/>\n1\uff09RBF\u6838\u51fd\u6570\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6837\u672c\u6620\u5c04\u5230\u4e00\u4e2a\u66f4\u9ad8\u7ef4\u7684\u7a7a\u95f4\uff0c\u800c\u4e14\u7ebf\u6027\u6838\u51fd\u6570\u662fRBF\u7684\u4e00\u4e2a\u7279\u4f8b\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u8003\u8651\u4f7f\u7528RBF\uff0c\u90a3\u4e48\u5c31\u6ca1\u6709\u5fc5\u8981\u8003\u8651\u7ebf\u6027\u6838\u51fd\u6570\u4e86\u3002<br\/>\n2\uff09\u4e0e\u591a\u9879\u5f0f\u6838\u51fd\u6570\u76f8\u6bd4\uff0cRBF\u9700\u8981\u786e\u5b9a\u7684\u53c2\u6570\u8981\u5c11\uff0c\u6838\u51fd\u6570\u53c2\u6570\u7684\u591a\u5c11\u76f4\u63a5\u5f71\u54cd\u51fd\u6570\u7684\u590d\u6742\u7a0b\u5ea6\u3002\u53e6\u5916\uff0c\u5f53\u591a\u9879\u5f0f\u7684\u9636\u6570\u6bd4\u8f83\u9ad8\u65f6\uff0c\u6838\u77e9\u9635\u7684\u5143\u7d20\u503c\u5c06\u8d8b\u4e8e\u65e0\u7a77\u5927\u6216\u65e0\u7a77\u5c0f\uff0c\u800cRBF\u5219\u5728\u4e0a\uff0c\u4f1a\u51cf\u5c11\u6570\u503c\u7684\u8ba1\u7b97\u56f0\u96be\u3002<br\/>\n3\uff09\u5bf9\u4e8e\u67d0\u4e9b\u53c2\u6570\uff0cRBF\u548csigmoid\u5177\u6709\u76f8\u4f3c\u7684\u6027\u80fd\u3002<br\/>\n","fcbf7dc9":"# 15\u3001\u8865\u5145\n\u6570\u636e\u9884\u5904\u7406\u65b9\u6cd5\n1. \u53bb\u9664\u552f\u4e00\u5c5e\u6027<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\u552f\u4e00\u5c5e\u6027\u901a\u5e38\u662f\u4e00\u4e9bid\u5c5e\u6027\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5e76\u4e0d\u80fd\u523b\u753b\u6837\u672c\u81ea\u8eab\u7684\u5206\u5e03\u89c4\u5f8b\uff0c\u6240\u4ee5\u7b80\u5355\u5730\u5220\u9664\u8fd9\u4e9b\u5c5e\u6027\u5373\u53ef\u3002<br\/>\n2. \u7f3a\u5931\u503c\u5904\u7406\u7684\u4e09\u79cd\u65b9\u6cd5\uff1a<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\u76f4\u63a5\u4f7f\u7528\u542b\u6709\u7f3a\u5931\u503c\u7684\u7279\u5f81\uff1b<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\u5220\u9664\u542b\u6709\u7f3a\u5931\u503c\u7684\u7279\u5f81\uff08\u8be5\u65b9\u6cd5\u5728\u5305\u542b\u7f3a\u5931\u503c\u7684\u5c5e\u6027\u542b\u6709\u5927\u91cf\u7f3a\u5931\u503c\u800c\u4ec5\u4ec5\u5305\u542b\u6781\u5c11\u91cf\u6709\u6548\u503c\u65f6\u662f\u6709\u6548\u7684\uff09\uff1b<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\u7f3a\u5931\u503c\u8865\u5168\u3002<br\/>\n3.\u5e38\u89c1\u7684\u7f3a\u5931\u503c\u8865\u5168\u65b9\u6cd5\uff1a<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\uff081\uff09\u5747\u503c\u63d2\u8865<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\u5982\u679c\u6837\u672c\u5c5e\u6027\u7684\u8ddd\u79bb\u662f\u53ef\u5ea6\u91cf\u7684\uff0c\u5219\u4f7f\u7528\u8be5\u5c5e\u6027\u6709\u6548\u503c\u7684\u5e73\u5747\u503c\u6765\u63d2\u8865\u7f3a\u5931\u7684\u503c\uff1b<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\u5982\u679c\u7684\u8ddd\u79bb\u662f\u4e0d\u53ef\u5ea6\u91cf\u7684\uff0c\u5219\u4f7f\u7528\u8be5\u5c5e\u6027\u6709\u6548\u503c\u7684\u4f17\u6570\u6765\u63d2\u8865\u7f3a\u5931\u7684\u503c\u3002\u5982\u679c\u4f7f\u7528\u4f17\u6570\u63d2\u8865\uff0c\u51fa\u73b0\u6570\u636e\u503e\u659c\u4f1a\u9020\u6210\u4ec0\u4e48\u5f71\u54cd\uff1f<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\uff082\uff09\u540c\u7c7b\u5747\u503c\u63d2\u8865<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\u9996\u5148\u5c06\u6837\u672c\u8fdb\u884c\u5206\u7c7b\uff0c\u7136\u540e\u4ee5\u8be5\u7c7b\u4e2d\u6837\u672c\u7684\u5747\u503c\u6765\u63d2\u8865\u7f3a\u5931\u503c\u3002<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\uff083\uff09\u5efa\u6a21\u9884\u6d4b<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\u5c06\u7f3a\u5931\u7684\u5c5e\u6027\u4f5c\u4e3a\u9884\u6d4b\u76ee\u6807\u6765\u9884\u6d4b\uff0c\u5c06\u6570\u636e\u96c6\u6309\u7167\u662f\u5426\u542b\u6709\u7279\u5b9a\u5c5e\u6027\u7684\u7f3a\u5931\u503c\u5206\u4e3a\u4e24\u7c7b\uff0c\u5229\u7528\u73b0\u6709\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5bf9\u5f85\u9884\u6d4b\u6570\u636e\u96c6\u7684\u7f3a\u5931\u503c\u8fdb\u884c\u9884\u6d4b\u3002<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\u8be5\u65b9\u6cd5\u7684\u6839\u672c\u7684\u7f3a\u9677\u662f\u5982\u679c\u5176\u4ed6\u5c5e\u6027\u548c\u7f3a\u5931\u5c5e\u6027\u65e0\u5173\uff0c\u5219\u9884\u6d4b\u7684\u7ed3\u679c\u6beb\u65e0\u610f\u4e49\uff1b\u4f46\u662f\u82e5\u9884\u6d4b\u7ed3\u679c\u76f8\u5f53\u51c6\u786e\uff0c\u5219\u8bf4\u660e\u8fd9\u4e2a\u7f3a\u5931\u5c5e\u6027\u662f\u6ca1\u5fc5\u8981\u7eb3\u5165\u6570\u636e\u96c6\u4e2d\u7684\uff1b\u4e00\u822c\u7684\u60c5\u51b5\u662f\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4\u3002<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\uff084\uff09\u9ad8\u7ef4\u6620\u5c04<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\u5c06\u5c5e\u6027\u6620\u5c04\u5230\u9ad8\u7ef4\u7a7a\u95f4\uff0c\u91c7\u7528\u72ec\u70ed\u7801\u7f16\u7801\uff08one-hot\uff09\u6280\u672f\u3002\u5c06\u5305\u542bK\u4e2a\u79bb\u6563\u53d6\u503c\u8303\u56f4\u7684\u5c5e\u6027\u503c\u6269\u5c55\u4e3aK+1\u4e2a\u5c5e\u6027\u503c\uff0c\u82e5\u8be5\u5c5e\u6027\u503c\u7f3a\u5931\uff0c\u5219\u6269\u5c55\u540e\u7684\u7b2cK+1\u4e2a\u5c5e\u6027\u503c\u7f6e\u4e3a1\u3002\u8fd9\u79cd\u505a\u6cd5\u662f\u6700\u7cbe\u786e\u7684\u505a\u6cd5\uff0c\u4fdd\u7559\u4e86\u6240\u6709\u7684\u4fe1\u606f\uff0c\u4e5f\u672a\u6dfb\u52a0\u4efb\u4f55\u989d\u5916\u4fe1\u606f\uff0c\u82e5\u9884\u5904\u7406\u65f6\u628a\u6240\u6709\u7684\u53d8\u91cf\u90fd\u8fd9\u6837\u5904\u7406\uff0c\u4f1a\u5927\u5927\u589e\u52a0\u6570\u636e\u7684\u7ef4\u5ea6\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u5b8c\u6574\u4fdd\u7559\u4e86\u539f\u59cb\u6570\u636e\u7684\u5168\u90e8\u4fe1\u606f\u3001\u4e0d\u7528\u8003\u8651\u7f3a\u5931\u503c\uff1b\u7f3a\u70b9\u662f\u8ba1\u7b97\u91cf\u5927\u5927\u63d0\u5347\uff0c\u4e14\u53ea\u6709\u5728\u6837\u672c\u91cf\u975e\u5e38\u5927\u7684\u65f6\u5019\u6548\u679c\u624d\u597d\u3002<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\uff085\uff09\u591a\u91cd\u63d2\u8865\uff08MultipleImputation\uff0cMI\uff09<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\u591a\u91cd\u63d2\u8865\u8ba4\u4e3a\u5f85\u63d2\u8865\u7684\u503c\u662f\u968f\u673a\u7684\uff0c\u5b9e\u8df5\u4e0a\u901a\u5e38\u662f\u4f30\u8ba1\u51fa\u5f85\u63d2\u8865\u7684\u503c\uff0c\u518d\u52a0\u4e0a\u4e0d\u540c\u7684\u566a\u58f0\uff0c\u5f62\u6210\u591a\u7ec4\u53ef\u9009\u63d2\u8865\u503c\uff0c\u6839\u636e\u67d0\u79cd\u9009\u62e9\u4f9d\u636e\uff0c\u9009\u53d6\u6700\u5408\u9002\u7684\u63d2\u8865\u503c\u3002<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\uff086\uff09\u538b\u7f29\u611f\u77e5\u548c\u77e9\u9635\u8865\u5168<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\uff087\uff09\u624b\u52a8\u63d2\u8865<br\/>\n&nbsp;&nbsp;&nbsp;&nbsp;\u63d2\u8865\u5904\u7406\u53ea\u662f\u5c06\u672a\u77e5\u503c\u8865\u4ee5\u6211\u4eec\u7684\u4e3b\u89c2\u4f30\u8ba1\u503c\uff0c\u4e0d\u4e00\u5b9a\u5b8c\u5168\u7b26\u5408\u5ba2\u89c2\u4e8b\u5b9e\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u6839\u636e\u5bf9\u6240\u5728\u9886\u57df\u7684\u7406\u89e3\uff0c\u624b\u52a8\u5bf9\u7f3a\u5931\u503c\u8fdb\u884c\u63d2\u8865\u7684\u6548\u679c\u4f1a\u66f4\u597d\u3002","77e1ca62":" # 11\u3001\u4f7f\u7528 \u7f51\u683c\u641c\u7d22 \u6765\u63d0\u9ad8\u6a21\u578b\n1\u3001GridSearchCV\uff0c\u5b83\u5b58\u5728\u7684\u610f\u4e49\u5c31\u662f\u81ea\u52a8\u8c03\u53c2\uff0c\u53ea\u8981\u628a\u53c2\u6570\u8f93\u8fdb\u53bb\uff0c\u5c31\u80fd\u7ed9\u51fa\u6700\u4f18\u5316\u7684\u7ed3\u679c\u548c\u53c2\u6570\u3002<br\/>\n    \u4f46\u662f\u8fd9\u4e2a\u65b9\u6cd5\u9002\u5408\u4e8e\u5c0f\u6570\u636e\u96c6\uff0c\u4e00\u65e6\u6570\u636e\u7684\u91cf\u7ea7\u4e0a\u53bb\u4e86\uff0c\u5f88\u96be\u5f97\u51fa\u7ed3\u679c<br\/>\n2\u3001C: float\u53c2\u6570 \u9ed8\u8ba4\u503c\u4e3a1.0<br\/>\n    \u9519\u8bef\u9879\u7684\u60e9\u7f5a\u7cfb\u6570\u3002C\u8d8a\u5927\uff0c\u5373\u5bf9\u5206\u9519\u6837\u672c\u7684\u60e9\u7f5a\u7a0b\u5ea6\u8d8a\u5927\uff0c\u56e0\u6b64\u5728\u8bad\u7ec3\u6837\u672c\u4e2d\u51c6\u786e\u7387\u8d8a\u9ad8\uff0c\u4f46\u662f\u6cdb\u5316\u80fd\u529b\u964d\u4f4e\uff0c\u4e5f\u5c31\u662f\u5bf9\u6d4b\u8bd5\u6570\u636e\u7684\u5206\u7c7b\u51c6\u786e\u7387<br\/>\n    \u964d\u4f4e\u3002\u76f8\u53cd\uff0c\u51cf\u5c0fC\u7684\u8bdd\uff0c\u5bb9\u8bb8\u8bad\u7ec3\u6837\u672c\u4e2d\u6709\u4e00\u4e9b\u8bef\u5206\u7c7b\u9519\u8bef\u6837\u672c\uff0c\u6cdb\u5316\u80fd\u529b\u5f3a\u3002\u5bf9\u4e8e\u8bad\u7ec3\u6837\u672c\u5e26\u6709\u566a\u58f0\u7684\u60c5\u51b5\uff0c\u4e00\u822c\u91c7\u7528\u540e\u8005\uff0c<br\/>\n    \u628a\u8bad\u7ec3\u6837\u672c\u96c6\u4e2d\u9519\u8bef\u5206\u7c7b\u7684\u6837\u672c\u4f5c\u4e3a\u566a\u58f0\u3002<br\/>\n3\u3001gamma\uff1afloat\u53c2\u6570 \u9ed8\u8ba4\u4e3aauto<br\/>\n\n   \u6838\u51fd\u6570\u7cfb\u6570\uff0c\u53ea\u5bf9\u2018rbf\u2019,\u2018poly\u2019,\u2018sigmod\u2019\u6709\u6548\u3002<br\/>\n\n   \u5982\u679cgamma\u4e3aauto\uff0c\u4ee3\u8868\u5176\u503c\u4e3a\u6837\u672c\u7279\u5f81\u6570\u7684\u5012\u6570\uff0c\u53731\/n_features.<br\/>","54e9cc75":"# 1\u3001\u52a0\u8f7d\u5e93","b3bb240a":"# 12\u3001\u53ef\u89c6\u5316\u7ed3\u679c","e175cece":"# 2\u3001\u8bfb\u53d6\u6570\u636e","680a4e2d":"# 10\u3001classification_report\u7b80\u4ecb\nsklearn\u4e2d\u7684classification_report\u51fd\u6570\u7528\u4e8e\u663e\u793a\u4e3b\u8981\u5206\u7c7b\u6307\u6807\u7684\u6587\u672c\u62a5\u544a\uff0e\u5728\u62a5\u544a\u4e2d\u663e\u793a\u6bcf\u4e2a\u7c7b\u7684\u7cbe\u786e\u5ea6\uff0c\u53ec\u56de\u7387\uff0cF1\u503c\u7b49\u4fe1\u606f\u3002 \n\u4e3b\u8981\u53c2\u6570: <br\/>\ny_true\uff1a1\u7ef4\u6570\u7ec4\uff0c\u6216\u6807\u7b7e\u6307\u793a\u5668\u6570\u7ec4\/\u7a00\u758f\u77e9\u9635\uff0c\u76ee\u6807\u503c\u3002  <br\/>\ny_pred\uff1a1\u7ef4\u6570\u7ec4\uff0c\u6216\u6807\u7b7e\u6307\u793a\u5668\u6570\u7ec4\/\u7a00\u758f\u77e9\u9635\uff0c\u5206\u7c7b\u5668\u8fd4\u56de\u7684\u4f30\u8ba1\u503c\u3002  <br\/>\nlabels\uff1aarray\uff0cshape = [n_labels]\uff0c\u62a5\u8868\u4e2d\u5305\u542b\u7684\u6807\u7b7e\u7d22\u5f15\u7684\u53ef\u9009\u5217\u8868\u3002  <br\/>\ntarget_names\uff1a\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u4e0e\u6807\u7b7e\u5339\u914d\u7684\u53ef\u9009\u663e\u793a\u540d\u79f0\uff08\u76f8\u540c\u987a\u5e8f\uff09\u3002  <br\/>\nsample_weight\uff1a\u7c7b\u4f3c\u4e8eshape = [n_samples]\u7684\u6570\u7ec4\uff0c\u53ef\u9009\u9879\uff0c\u6837\u672c\u6743\u91cd\u3002  <br\/>\ndigits\uff1aint\uff0c\u8f93\u51fa\u6d6e\u70b9\u503c\u7684\u4f4d\u6570\uff0e","aacde0a7":"# PimaIndiansdiabetes.csv \u6570\u636e\u96c6\u4ecb\u7ecd\n\u94fe\u63a5\uff1ahttps:\/\/pan.baidu.com\/s\/1PyP_r8BMnLLE-2fkKEPqKA <br\/>\n\u63d0\u53d6\u7801\uff1avztm <br\/>\n\n1\u3001\u8be5\u6570\u636e\u96c6\u6700\u521d\u6765\u81ea\u56fd\u5bb6\u7cd6\u5c3f\u75c5\/\u6d88\u5316\/\u80be\u810f\u75be\u75c5\u7814\u7a76\u6240\u3002\u6570\u636e\u96c6\u7684\u76ee\u6807\u662f\u57fa\u4e8e\u6570\u636e\u96c6\u4e2d\u5305\u542b\u7684\u67d0\u4e9b\u8bca\u65ad\u6d4b\u91cf\u6765\u8bca\u65ad\u6027\u7684\u9884\u6d4b \u60a3\u8005\u662f\u5426\u60a3\u6709\u7cd6\u5c3f\u75c5\u3002<br\/>\n2\u3001\u4ece\u8f83\u5927\u7684\u6570\u636e\u5e93\u4e2d\u9009\u62e9\u8fd9\u4e9b\u5b9e\u4f8b\u6709\u51e0\u4e2a\u7ea6\u675f\u6761\u4ef6\u3002\u5c24\u5176\u662f\uff0c\u8fd9\u91cc\u7684\u6240\u6709\u60a3\u8005\u90fd\u662fPima\u5370\u7b2c\u5b89\u81f3\u5c1121\u5c81\u7684\u5973\u6027\u3002<br\/>\n3\u3001\u6570\u636e\u96c6\u7531\u591a\u4e2a\u533b\u5b66\u9884\u6d4b\u53d8\u91cf\u548c\u4e00\u4e2a\u76ee\u6807\u53d8\u91cf\u7ec4\u6210Outcome\u3002\u9884\u6d4b\u53d8\u91cf\u5305\u62ec\u60a3\u8005\u7684\u6000\u5b55\u6b21\u6570\u3001BMI\u3001\u80f0\u5c9b\u7d20\u6c34\u5e73\u3001\u5e74\u9f84\u7b49\u3002<br\/>\n\n4\u3001\u6570\u636e\u96c6\u7684\u5185\u5bb9\u662f\u76ae\u9a6c\u4eba\u7684\u533b\u7597\u8bb0\u5f55\uff0c\u4ee5\u53ca\u8fc7\u53bb5\u5e74\u5185\u662f\u5426\u6709\u7cd6\u5c3f\u75c5\u3002\u6240\u6709\u7684\u6570\u636e\u90fd\u662f\u6570\u5b57\uff0c\u95ee\u9898\u662f\uff08\u662f\u5426\u6709\u7cd6\u5c3f\u75c5\u662f1\u62160\uff09\uff0c\u662f\u4e8c\u5206\u7c7b\u95ee\u9898\u3002\u6570\u636e\u7684\u6570\u91cf\u7ea7\u4e0d\u540c\uff0c\u67098\u4e2a\u5c5e\u6027\uff0c1\u4e2a\u7c7b\u522b\uff1a<br\/>\n\n\u30101\u3011Pregnancies\uff1a\u6000\u5b55\u6b21\u6570 <br\/>\n\u30102\u3011Glucose\uff1a\u8461\u8404\u7cd6 <br\/>\n\u30103\u3011BloodPressure\uff1a\u8840\u538b (mm Hg) <br\/>\n\u30104\u3011SkinThickness\uff1a\u76ae\u5c42\u539a\u5ea6 (mm) <br\/>\n\u30105\u3011Insulin\uff1a\u80f0\u5c9b\u7d20 2\u5c0f\u65f6\u8840\u6e05\u80f0\u5c9b\u7d20\uff08mu U \/ ml <br\/>\n\u30106\u3011BMI\uff1a\u4f53\u91cd\u6307\u6570 \uff08\u4f53\u91cd\/\u8eab\u9ad8\uff09^2 <br\/>\n\u30107\u3011DiabetesPedigreeFunction\uff1a\u7cd6\u5c3f\u75c5\u8c31\u7cfb\u529f\u80fd <br\/>\n\u30108\u3011Age\uff1a\u5e74\u9f84 \uff08\u5c81\uff09 <br\/>\n\u30109\u3011Outcome\uff1a\u7c7b\u6807\u53d8\u91cf \uff080\u62161\uff09<br\/>\n","50dd693c":"# 13\u3001\u4e2d\u4f4d\u6570\u7684\u6c42\u6cd5\n\n2710 2755 2850 | 2880 2880 2890 | 2920 2940 2950 | 3050 3130 3325<br\/>\n\nQ1\u00a0= 2865\u3000Q2\u00a0= 2905(\u4e2d\u4f4d\u6570)\u3000Q3\u00a0= 3000<br\/>\n\n\u4e2d\u4f4d\u6570\u662f2 905\uff0c\u7b2c\u4e00\u4e2a\u56db\u5206\u4f4d\u6570Q1\u00a0= 2865\uff0c\u7b2c\u4e09\u4e2a\u56db\u5206\u4f4d\u6570Q3\u00a0= 3000\u3002\u68c0\u67e5\u8fd9\u4e9b\u6570\u636e\uff0c\u6700\u5c0f\u503c\u4e3a2710\uff0c<br\/>\n\u6700\u5927\u503c\u4e3a3325\u3002\u56e0\u6b64\uff0c\u85aa\u6c34\u6570\u636e\u7684\u4e94\u6570\u6982\u62ec\u6570\u636e\u4e3a2710\u30012865\u30012905\u30013000\u30013325\u3002\u5927\u7ea61\uff0f4\u621625\uff05\u7684\u89c2\u5bdf\u503c\u5728\u4e94\u6570\u6982\u62ec\u7684\u76f8\u90bb\u4e24\u4e2a\u6570\u5b57\u4e4b\u95f4\u3002<br\/>\n\n\na = [2755 ,2850,  2880 ,2880 ,2710, 2890, 2920 ,2940, 2950, 3050 ,3130, 3325]<br\/>\n\n2905 = (2890+2920)\/2     # 2*(12+1)\/4=6.5 \u53d66\u30017\u4f4d\u7684\u6570\u7684\u5e73\u5747\u503c<br\/>\n2865 = (2850+2880)\/2     # (12+1)\/4=3.25 \u53d62\u30013\u4f4d\u7684\u6570\u7684\u5e73\u5747\u503c<br\/>\n3000 = (2950+3050)\/2     # 3*(12+1)\/4=9.75 \u53d67\u300110\u4f4d\u7684\u6570\u7684\u5e73\u5747\u503c<br\/>","f578abe2":"# 5\u3001Standardization - \u6807\u51c6\u5316"}}