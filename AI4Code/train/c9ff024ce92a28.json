{"cell_type":{"b55c491c":"code","f8d226c2":"code","49f19766":"code","6886d70d":"code","c8c53eeb":"code","a196e855":"code","c64029ee":"code","dae7515f":"markdown","98d7ed5e":"markdown","dfa9824f":"markdown","7df3009d":"markdown","5090b177":"markdown"},"source":{"b55c491c":"import numpy as np\nimport os\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.ensemble import GradientBoostingRegressor\n\nimport xgboost","f8d226c2":"SEED = 42\nEARLY_STOP_NUM = 5 \nDATA_NUM = 1000 # row number \nCOL_NUM = 5 #column number ","49f19766":"np.random.seed(SEED)\nX = np.random.rand(DATA_NUM, COL_NUM) - 0.5\ny = 3*X[:, 0]**2 + 0.05 * np.random.randn(DATA_NUM)","6886d70d":"X[:5]","c8c53eeb":"y[:5]","a196e855":"X_train, X_val, y_train, y_val = train_test_split(X, y, random_state=SEED)","c64029ee":"xgb_reg = xgboost.XGBRegressor(random_state=SEED)\nxgb_reg.fit(X_train, y_train,eval_set=[(X_val, y_val)], early_stopping_rounds=EARLY_STOP_NUM)\ny_pred = xgb_reg.predict(X_val)\nval_error = mean_squared_error(y_val, y_pred)  \nprint(\"Validation MSE:\", val_error)         ","dae7515f":"# split train set and validation set","98d7ed5e":"# import libraries","dfa9824f":"# global variables","7df3009d":"# make data","5090b177":"# get best xgb model "}}