{"cell_type":{"5c468e8f":"code","ccae59f5":"code","d771f1cc":"code","44cdad16":"code","32e899f9":"code","915a81bc":"code","69753fa1":"code","4c2ce4c9":"code","c3e0c867":"code","66deb1bf":"markdown","c4f0df01":"markdown","1189e95c":"markdown","0c749d66":"markdown","8155568b":"markdown","2efd256a":"markdown"},"source":{"5c468e8f":"import os\nfrom PIL import Image\nfrom os.path import join\n# Kumar -> Changing image_dir and img_paths -> Unable to use the new files and reverted\n#image_dir = '..\/input\/dog-breed-identification\/train\/'\nimage_dir = '..\/input\/asl-alphabet\/asl_alphabet_test\/asl_alphabet_test'\nimg_paths = [join(image_dir, filename) for filename in \n                           #['0246f44bb123ce3f91c939861eb97fb7.jpg',\n                          #'84728e78632c0910a69d33f82e62638c.jpg',\n                           # '8825e914555803f4c67b26593c9d5aff.jpg',\n                            #'91a5e8db15bccfb6cfa2df5e8b95ec03.jpg']]\n             \n                           ['A_test.jpg',\n                            'C_test.jpg',\n                           'E_test.jpg',\n                           'G_test.jpg']]","ccae59f5":"import numpy as np\nfrom tensorflow.python.keras.applications.resnet50 import preprocess_input\nfrom tensorflow.python.keras.preprocessing.image import load_img, img_to_array\n\nimage_size = 224\n\ndef read_and_prep_images(img_paths, img_height=image_size, img_width=image_size):\n    imgs = [load_img(img_path, target_size=(img_height, img_width)) for img_path in img_paths]\n    img_array = np.array([img_to_array(img) for img in imgs])\n    return preprocess_input(img_array)","d771f1cc":"from tensorflow.python.keras.applications import ResNet50\n\nmy_model = ResNet50(weights='..\/input\/resnet50\/resnet50_weights_tf_dim_ordering_tf_kernels.h5')\ntest_data = read_and_prep_images(img_paths)\npreds = my_model.predict(test_data)","44cdad16":"# Kumar - created a png file but am unable to locate the model.png file\nfrom tensorflow.python.keras.utils import plot_model\nplot_model(my_model, to_file='..\/working\/model.png')\nprint(os.listdir('..\/working'))\n\n\n","32e899f9":"plot_model(my_model, to_file='model.png')\n\n\nfrom IPython.display import Image\nImage(\"..\/working\/model.png\")","915a81bc":"# Kumar - Visualizing the model from https:\/\/keras.io\/visualization\/ - This worked\n#from IPython.display import SVG\n#from tensorflow.python.keras.utils.vis_utils import model_to_dot\n#SVG(model_to_dot(my_model).create(prog='dot', format='svg'))","69753fa1":"# Kumar - Trying suggestion from Kaggle learn forums\nmy_model.summary()","4c2ce4c9":"# Kumar - trying ANN visualization as per https:\/\/towardsdatascience.com\/visualizing-artificial-neural-networks-anns-with-just-one-line-of-code-b4233607209e\n# Not working - How to install ann_viz? \n#ann_viz(my_model, view=True, filename='network.gv', title='MyNeural Network')\n#pip install ann_visualizer","c3e0c867":"import sys\n# Add directory holding utility functions to path to allow importing\nsys.path.append('\/kaggle\/input\/python-utility-code-for-deep-learning-exercises\/utils')\nfrom decode_predictions import decode_predictions\n\nfrom IPython.display import Image, display\n\nmost_likely_labels = decode_predictions(preds, top=3, class_list_path='..\/input\/resnet50\/imagenet_class_index.json')\n\nfor i, img_path in enumerate(img_paths):\n    display(Image(img_path))\n    print(most_likely_labels[i])","66deb1bf":"### Create Model with Pre-Trained Weights File. Make Predictions","c4f0df01":"### Choose Images to Work With","1189e95c":"### Kumar - Attempting model visualization","0c749d66":"### Visualize Predictions","8155568b":"### Function to Read and Prep Images for Modeling","2efd256a":"# Exercise\nNow you are ready to [use a powerful TensorFlow model](https:\/\/www.kaggle.com\/dansbecker\/my-first-exercise-with-tensorflow-and-keras\/) yourself.\n\n# Continue\nAfter the exercise, continue to learn about [Transfer Learning](https:\/\/www.kaggle.com\/dansbecker\/transfer-learning\/).  Transfer learning will let you leverage pre-trained models for purposes far beyond what they were originally built for. Most people are amazed when they first experience the power of transfer learning.\n\n---\nHave questions, comments or feedback?  Bring them to [the Learn forum](https:\/\/www.kaggle.com\/learn-forum)\n\n**[Deep Learning Track Home](https:\/\/www.kaggle.com\/learn\/deep-learning)**"}}