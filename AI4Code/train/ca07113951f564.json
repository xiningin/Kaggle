{"cell_type":{"d88a90a0":"code","7acda510":"code","ae26f045":"code","584f219a":"code","a162d44c":"code","cf69ab2b":"code","e2f35f03":"code","7042aa23":"code","3c2e149a":"code","e707b3e4":"code","77d31a09":"code","e2038a43":"code","6cff750a":"code","e0e26c6a":"code","b9bc5fe9":"code","4eb17733":"code","c25b8112":"code","2f1f457c":"code","ec654517":"code","1350751a":"code","4b99f862":"code","923ceca7":"code","97771a37":"code","19405479":"code","61e57318":"code","e0bf7e51":"code","678880b0":"code","605f4b20":"markdown","31c97759":"markdown","9eca711d":"markdown","be8f375c":"markdown","6d1f5941":"markdown","1cfb8e3f":"markdown","a80766d1":"markdown","ad792d3b":"markdown","394e0598":"markdown","5eacb44e":"markdown","a950671d":"markdown","ea2ac7cb":"markdown","f8bea848":"markdown","646e407c":"markdown","ccee6b14":"markdown","c23e8d86":"markdown","943d9b20":"markdown"},"source":{"d88a90a0":"# \u30e9\u30a4\u30d6\u30e9\u30ea\u306eimport\nfrom dataclasses import dataclass\nfrom pathlib import Path\n\nimport numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\nimport librosa\nimport librosa.display\nimport IPython\n\nfrom sklearn.preprocessing import minmax_scale, MinMaxScaler\nfrom sklearn.decomposition import PCA\nfrom sklearn.manifold import TSNE\n\nimport seaborn as sns","7acda510":"INPUT = '..\/input\/hah-data-science-challenge\/'","ae26f045":"# \u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\ndf_train = pd.read_csv(INPUT + 'train.csv', index_col=False)\ndf_test = pd.read_csv(INPUT + 'test.csv', index_col=False)\n\n# meta_data\u306b\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u8ffd\u52a0\ndf_train['filepath'] = INPUT + 'train\/train\/' + df_train['\u30d5\u30a1\u30a4\u30eb']\ndf_test['filepath'] = INPUT + 'test\/test\/' + df_test['\u30d5\u30a1\u30a4\u30eb']\n\n# train\u3068test\u3092\u3072\u3068\u3064\u306b\ndf = pd.concat([df_train, df_test]).reset_index(drop=True)","584f219a":"# \u540d\u5bc4\u305b\nrecording_map = {\n    'PC\u5185\u81d3': 'PC\u5185\u8535', \n    'PC\u5185\u8535': 'PC\u5185\u8535', \n    'USB1': 'USB1', \n    'USB2': 'USB2', \n    'USB3': 'USB3', \n    'USB4': 'USB4', \n    '\u30b9\u30de\u30db': '\u30b9\u30de\u30db', \n    '\u30b9\u30de\u30db\u306e\u30dc\u30a4\u30b9\u30ec\u30b3\u30fc\u30c0': '\u30b9\u30de\u30db', \n    '\u5185\u8535\u30de\u30a4\u30af': 'PC\u5185\u8535'\n}\n\ndistance_map = {\n    '10cm': '10cm',\n    '10\u339d': '10cm',\n    '1M': '1m',\n    '20cm': '20cm',\n    '20\u339d': '20cm',\n    '2M': '2m',\n    '2m': '2m',\n    '30cm': '30cm',\n    '30cn': '30cm',\n    '30\u339d': '30cm',\n    '3m': '3m',\n    '40cm': '40cm',\n    '40\u339d': '40cm',\n    '50cm': '50cm',\n    '50\u339d': '50cm',\n    '5cm': '5cm',\n    '8cm': '8cm',\n    '\uff11\uff2d': '1m'\n}\n\ndf['\u9332\u97f3\u65b9\u6cd5'] = df['\u9332\u97f3\u65b9\u6cd5'].replace(recording_map)\ndf['\u30de\u30a4\u30af\u8ddd\u96e2'] = df['\u30de\u30a4\u30af\u8ddd\u96e2'].replace(distance_map)\n\n# \u306e\u3061\u307b\u3069\u30e9\u30d9\u30eb\u306b\u4f7f\u3046\ndf['\u306d\u3058_\u30d7\u30ec\u30fc\u30c8'] = '\u306d\u3058' + df['\u306d\u3058'] + '_\u30d7\u30ec\u30fc\u30c8' + df['\u30d7\u30ec\u30fc\u30c8']\ndf['\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2'] = df['\u9332\u97f3\u65b9\u6cd5'] + '_' + df['\u30de\u30a4\u30af\u8ddd\u96e2']","a162d44c":"# FFT\nfilelist = df['filepath'].to_list()\n\nspectra = []\nfrequencies = []\nfor i, filename in enumerate(tqdm(filelist)):\n    y, sr = librosa.core.load(filename,sr=None)\n    y = y[:40000]\n    fft = np.fft.fft(y)\n    spectrum = np.abs(fft)\n    frequency = np.linspace(0, sr, int(len(spectrum)\/2))\n    spectrum = spectrum[:int(len(spectrum)\/2)]\n    spectra.append(spectrum)\n    frequencies.append(frequency)\nspectra = minmax_scale(spectra, axis=1)","cf69ab2b":"df_frq = pd.DataFrame(spectra)\ndf = pd.concat([df, df_frq], axis=1)","e2f35f03":"tsne_embed = TSNE().fit_transform(df.iloc[:, 10:])\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df['Target'].astype(str).tolist(),\n                 hover_name=df['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u5168\u30c7\u30fc\u30bf label\u3067\u8272\u5206\u3051')\nfig.show()\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df['\u306d\u3058_\u30d7\u30ec\u30fc\u30c8'].astype(str).tolist(),\n                 hover_name=df['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u5168\u30c7\u30fc\u30bf \u306d\u3058_\u30d7\u30ec\u30fc\u30c8\u3067\u8272\u5206\u3051')\nfig.show()\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df['\u9332\u97f3\u65b9\u6cd5'].astype(str).tolist(),\n                 hover_name=df['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u5168\u30c7\u30fc\u30bf \u9332\u97f3\u65b9\u6cd5\u3067\u8272\u5206\u3051')\nfig.show()\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df['\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u5168\u30c7\u30fc\u30bf \u30de\u30a4\u30af\u8ddd\u96e2\u3067\u8272\u5206\u3051')\nfig.show()\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df['\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u5168\u30c7\u30fc\u30bf \u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2\u3067\u8272\u5206\u3051')\nfig.show()","7042aa23":"df2 = df[(df['\u306d\u3058']=='\u5927') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5927')]\ntsne_embed = TSNE().fit_transform(df2.iloc[:, 10:])\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['Target'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5927 \u30d7\u30ec\u30fc\u30c8\u5927  | label\u3067\u8272\u5206\u3051')\nfig.show()\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u9332\u97f3\u65b9\u6cd5'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5927 \u30d7\u30ec\u30fc\u30c8\u5927  | \u9332\u97f3\u65b9\u6cd5\u3067\u8272\u5206\u3051')\nfig.show()\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5927 \u30d7\u30ec\u30fc\u30c8\u5927  | \u30de\u30a4\u30af\u8ddd\u96e2\u3067\u8272\u5206\u3051')\nfig.show()\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5927 \u30d7\u30ec\u30fc\u30c8\u5927  | \u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2\u3067\u8272\u5206\u3051')\nfig.show()","3c2e149a":"df2 = df[(df['\u306d\u3058']=='\u5c0f') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5927')]\ntsne_embed = TSNE().fit_transform(df2.iloc[:, 10:])\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['Target'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5c0f \u30d7\u30ec\u30fc\u30c8\u5927  | label\u3067\u8272\u5206\u3051')\nfig.show()\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u9332\u97f3\u65b9\u6cd5'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5c0f \u30d7\u30ec\u30fc\u30c8\u5927  | \u9332\u97f3\u65b9\u6cd5\u3067\u8272\u5206\u3051')\nfig.show()\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5c0f \u30d7\u30ec\u30fc\u30c8\u5927  | \u30de\u30a4\u30af\u8ddd\u96e2\u3067\u8272\u5206\u3051')\nfig.show()\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5c0f \u30d7\u30ec\u30fc\u30c8\u5927  | \u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2\u3067\u8272\u5206\u3051')\nfig.show()","e707b3e4":"df2 = df[(df['\u306d\u3058']=='\u5927') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5c0f')]\ntsne_embed = TSNE().fit_transform(df2.iloc[:, 10:])\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['Target'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5927 \u30d7\u30ec\u30fc\u30c8\u5c0f  | label\u3067\u8272\u5206\u3051')\nfig.show()\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u9332\u97f3\u65b9\u6cd5'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5927 \u30d7\u30ec\u30fc\u30c8\u5c0f  | \u9332\u97f3\u65b9\u6cd5\u3067\u8272\u5206\u3051')\nfig.show()\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5927 \u30d7\u30ec\u30fc\u30c8\u5c0f  | \u30de\u30a4\u30af\u8ddd\u96e2\u3067\u8272\u5206\u3051')\nfig.show()\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5927 \u30d7\u30ec\u30fc\u30c8\u5c0f  | \u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2\u3067\u8272\u5206\u3051')\nfig.show()","77d31a09":"# 80Hz\uff5e10,000Hz\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\nidx = np.where((frequencies[0]>80)&(frequencies[0]<10000))[0]","e2038a43":"df2 = df[(df['\u306d\u3058']=='\u5927') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5927')]\n\ntsne_embed = TSNE().fit_transform(df2.iloc[:, 10:])\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5927 \u30d7\u30ec\u30fc\u30c8\u5927  | \u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2\u3067\u8272\u5206\u3051')\nfig.show()\n\ntsne_embed = TSNE().fit_transform(df2.iloc[:, 10+idx])\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='80 - 10,000Hz\u306b\u9650\u5b9a')\nfig.show()","6cff750a":"df2 = df[(df['\u306d\u3058']=='\u5c0f') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5927')]\n\ntsne_embed = TSNE().fit_transform(df2.iloc[:, 10:])\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5c0f \u30d7\u30ec\u30fc\u30c8\u5927  | \u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2\u3067\u8272\u5206\u3051')\nfig.show()\n\ntsne_embed = TSNE().fit_transform(df2.iloc[:, 10+idx])\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='80 - 10,000Hz\u306b\u9650\u5b9a')\nfig.show()","e0e26c6a":"df2 = df[(df['\u306d\u3058']=='\u5927') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5c0f')]\n\ntsne_embed = TSNE().fit_transform(df2.iloc[:, 10:])\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5927 \u30d7\u30ec\u30fc\u30c8\u5c0f  | \u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2\u3067\u8272\u5206\u3051')\nfig.show()\n\ntsne_embed = TSNE().fit_transform(df2.iloc[:, 10+idx])\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='80 - 10,000Hz\u306b\u9650\u5b9a')\nfig.show()","b9bc5fe9":"df['\u6761\u4ef6'] = df['\u306d\u3058_\u30d7\u30ec\u30fc\u30c8'] + '_' + df['\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2']","4eb17733":"df.loc[df['Target']==0, '\u6b63\u5e38'] = 1\ndf['\u6b63\u5e38'] = df['\u6b63\u5e38'].fillna(0)","c25b8112":"from matplotlib_venn import venn2\n\nset_norm = set(df.loc[df['\u6b63\u5e38']==1, '\u9332\u97f3\u65b9\u6cd5'].unique().tolist())\nset_other = set(df.loc[df['\u6b63\u5e38']==0, '\u9332\u97f3\u65b9\u6cd5'].unique().tolist())\nvenn2(subsets=[set_norm, set_other], set_labels=['normal', 'others'])\nplt.title('recording')\nprint('\u6b63\u5e38\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u60c5\u5831', set_other - set_norm)","2f1f457c":"set_norm = set(df.loc[df['\u6b63\u5e38']==1, '\u30de\u30a4\u30af\u8ddd\u96e2'].unique().tolist())\nset_other = set(df.loc[df['\u6b63\u5e38']==0, '\u30de\u30a4\u30af\u8ddd\u96e2'].unique().tolist())\nvenn2(subsets=[set_norm, set_other], set_labels=['normal', 'others'])\nplt.title('mic')\nprint('\u6b63\u5e38\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u60c5\u5831', set_other - set_norm)","ec654517":"set_norm = set(df.loc[df['\u6b63\u5e38']==1, '\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2'].unique().tolist())\nset_other = set(df.loc[df['\u6b63\u5e38']==0, '\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2'].unique().tolist())\nvenn2(subsets=[set_norm, set_other], set_labels=['normal', 'others'])\nplt.title('recording_mic')\nprint('\u6b63\u5e38\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u60c5\u5831', set_other - set_norm)","1350751a":"set_norm = set(df.loc[df['\u6b63\u5e38']==1, '\u6761\u4ef6'].unique().tolist())\nset_other = set(df.loc[df['\u6b63\u5e38']==0, '\u6761\u4ef6'].unique().tolist())\nvenn2(subsets=[set_norm, set_other], set_labels=['normal', 'others'])\nplt.title('total_condition')\nprint('\u6b63\u5e38\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u60c5\u5831', set_other - set_norm)","4b99f862":"other_only = list(set_other - set_norm)\ndf.loc[df['\u6761\u4ef6'].isin(other_only), 'exist'] = '\u30e9\u30d9\u30eb\u306a\u3057\u306e\u307f'\ndf['exist'] = df['exist'].fillna('\u6b63\u5e38\u30fb\u30e9\u30d9\u30eb\u306a\u3057\u4e21\u65b9')","923ceca7":"df2 = df[(df['\u306d\u3058']=='\u5c0f') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5927')]\n\ntsne_embed = TSNE().fit_transform(df2.iloc[:, 10:-3])\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5c0f \u30d7\u30ec\u30fc\u30c8\u5927  | \u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2\u3067\u8272\u5206\u3051')\nfig.show()\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['exist'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u6b63\u5e38\u30e9\u30d9\u30eb\u5145\u8db3\u72b6\u6cc1')\nfig.show()","97771a37":"df2 = df[(df['\u306d\u3058']=='\u5927') & (df['\u30d7\u30ec\u30fc\u30c8']=='\u5927')]\n\ntsne_embed = TSNE().fit_transform(df2.iloc[:, 10:-3])\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u306d\u3058\uff1a\u5927 \u30d7\u30ec\u30fc\u30c8\u5927  | \u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2\u3067\u8272\u5206\u3051')\nfig.show()\n\nfig = px.scatter(x=tsne_embed[:,0],y=tsne_embed[:,1], \n                 color=df2['exist'].astype(str).tolist(),\n                 hover_name=df2['\u30d5\u30a1\u30a4\u30eb'].tolist(),\n                 title='\u6b63\u5e38\u30e9\u30d9\u30eb\u5145\u8db3\u72b6\u6cc1')\nfig.show()","19405479":"sub = pd.read_csv('..\/input\/hah-exp005-simple-baseline\/submission.csv')","61e57318":"sub = sub.merge(df[['ID', '\u6761\u4ef6', 'exist']], on='ID', how='left')","e0bf7e51":"sub.groupby(['\u6761\u4ef6', 'exist'])['Target'].mean()","678880b0":"sns.distplot(sub.loc[sub['exist']=='\u6b63\u5e38\u30fb\u30e9\u30d9\u30eb\u306a\u3057\u4e21\u65b9', 'Target'], label='both')\nsns.distplot(sub.loc[sub['exist']=='\u30e9\u30d9\u30eb\u306a\u3057\u306e\u307f', 'Target'], label='label-less only')\nplt.legend()","605f4b20":"\u3059\u3067\u306b\u5ea6\u3005\u8b70\u8ad6\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u306d\u3058\u30fb\u30d7\u30ec\u30fc\u30c8\u306f\u9855\u8457\u306b\u7fa4\u304c\u5206\u304b\u308c\u3066\u3044\u308b\u3002  \n\u9332\u97f3\u65b9\u6cd5\u3001\u30de\u30a4\u30af\u8ddd\u96e2\u306b\u3064\u3044\u3066\u3082\u50be\u5411\u304c\u898b\u3048\u305d\u3046\u3002\u306d\u3058\u30fb\u30d7\u30ec\u30fc\u30c8\u3092\u9650\u5b9a\u3057\u3066\u518d\u5ea6\u78ba\u8a8d\u3059\u308b","31c97759":"\u3042\u307e\u308a\u50be\u5411\u306b\u5909\u5316\u306f\u898b\u3089\u308c\u306a\u304b\u3063\u305f","9eca711d":"# \u30e9\u30d9\u30eb\u306a\u3057\u306b\u3057\u304b\u5b58\u5728\u3057\u306a\u3044\u6761\u4ef6\u306f\u7570\u5e38\u5ea6\u304c\u9ad8\u304f\u3067\u3066\u308b\u306e\u304b","be8f375c":"# \u5468\u6ce2\u6570\u7279\u6027\u306e\u8003\u616e\n\u30de\u30a4\u30af\u306b\u3088\u3063\u3066\u5468\u6ce2\u6570\u7279\u6027\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2\u306b\u3088\u3063\u3066\u7fa4\u304c\u5206\u304b\u308c\u3066\u3044\u308b\uff1f  \n\u3069\u306eUSB\u30de\u30a4\u30af\u3082\u30ab\u30d0\u30fc\u3057\u3066\u3044\u308b\u5468\u6ce2\u6570\u9818\u57df\u306bFFT\u3092\u9650\u5b9a\u3057\u3066\u307f\u3066\u7fa4\u306e\u5206\u304b\u308c\u65b9\u306e\u50be\u5411\u304c\u5909\u308f\u308b\u304b\u78ba\u8a8d\u3059\u308b\u3002  \n\u53c2\u8003\uff1a\nhttps:\/\/www.kaggle.com\/c\/hah-data-science-challenge\/discussion\/274448","6d1f5941":"# \u306d\u3058\u3068\u30d7\u30ec\u30fc\u30c8\u3092\u5206\u3051\u3066\u53ef\u8996\u5316","1cfb8e3f":"\u5272\u3068\u305d\u3093\u306a\u50be\u5411\u304c\u3042\u308b\u3002\uff08\u304c\u3069\u3046\u5bfe\u5fdc\u3059\u308c\u3070\u3088\u3044\u304b","a80766d1":"# tsne\u3067\u306e\u6b21\u5143\u524a\u6e1b\u7d50\u679c\u3092\u5143\u306b\u9332\u97f3\u65b9\u6cd5\u30fb\u30de\u30a4\u30af\u8ddd\u96e2\u306b\u3064\u3044\u3066\u8003\u3048\u308b\n\u9332\u97f3\u65b9\u6cd5\u3068\u30de\u30a4\u30af\u8ddd\u96e2\u306e\u5f71\u97ff\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u307e\u3057\u305f\uff08\u304c\u767a\u6563\u3057\u3066\u307e\u3059\n\n[\u53c2\u8003]  \nhttps:\/\/www.kaggle.com\/hattan0523\/fft-tsne-umap","ad792d3b":"## \u306d\u3058\uff1a\u5927\u3000\u30d7\u30ec\u30fc\u30c8\uff1a\u5c0f","394e0598":"\u9332\u97f3\u65b9\u6cd5_\u30de\u30a4\u30af\u8ddd\u96e2\u3067\u3082\u304d\u308c\u3044\u306b\u7fa4\u304c\u5206\u304b\u308c\u308b\u3002\u305f\u3060\u3057\u98db\u3073\u5730\u306b\u306a\u3063\u3066\u3044\u308b\u30b1\u30fc\u30b9\u3082\u7d50\u69cb\u3042\u308b\u3002  ","5eacb44e":"\u30e9\u30d9\u30eb\u306a\u3057\u306b\u304b\u5b58\u5728\u3057\u306a\u3044\u6761\u4ef6\u3067\u3001\u7fa4\u304c\u5206\u304b\u308c\u3066\u3044\u308b\u3082\u306e\u304c\u3061\u3089\u307b\u3089\u3042\u308b\u306e\u3067\u5bfe\u5fdc\u304c\u5fc5\u8981\uff1f","a950671d":"## \u306d\u3058\uff1a\u5927\u3000\u30d7\u30ec\u30fc\u30c8\uff1a\u5c0f","ea2ac7cb":"# \u6b63\u5e38\u30e9\u30d9\u30eb\u306e\u5145\u8db3\u72b6\u6cc1\u78ba\u8a8d\n(\u5c11\u306a\u304f\u3068\u3082FFT\u3067\u306f)\u306d\u3058\u30fb\u30d7\u30ec\u30fc\u30c8\u3060\u3051\u3067\u306a\u304f\u3001\u9332\u97f3\u65b9\u6cd5\u3001\u30de\u30a4\u30af\u8ddd\u96e2\u306b\u3088\u3063\u3066\u7fa4\u304c\u5206\u304b\u308c\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002  \n\u3053\u306e\u305f\u3081\u3001\u6b63\u5e38\u30e9\u30d9\u30eb\u306b\u5b58\u5728\u3057\u306a\u3044\u6761\u4ef6\u306f\u5b9f\u969b\u306f\u6b63\u5e38\u3067\u3082\u7570\u5e38\u5ea6\u304c\u9ad8\u304f\u51fa\u3084\u3059\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002  \n\u3069\u306e\u7a0b\u5ea6\u306e\u5f71\u97ff\u304c\u3042\u308b\u304b\u3001\u6b63\u5e38\u30e9\u30d9\u30eb\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u6761\u4ef6\u304c\u3069\u306e\u7a0b\u5ea6\u3042\u308b\u304b\u78ba\u8a8d\u3059\u308b\u3002","f8bea848":"## \u306d\u3058\uff1a\u5927\u3000\u30d7\u30ec\u30fc\u30c8\uff1a\u5927","646e407c":"## \u306d\u3058\uff1a\u5c0f\u3000\u30d7\u30ec\u30fc\u30c8\uff1a\u5927","ccee6b14":"## \u306d\u3058\uff1a\u5c0f\u3000\u30d7\u30ec\u30fc\u30c8\uff1a\u5927","c23e8d86":"## \u306d\u3058\uff1a\u5927\u3000\u30d7\u30ec\u30fc\u30c8\uff1a\u5927","943d9b20":"# \u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u53ef\u8996\u5316"}}