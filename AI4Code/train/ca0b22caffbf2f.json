{"cell_type":{"e0dfd5ae":"code","68aef5c3":"code","72e45746":"code","0178f98f":"code","9faa5682":"code","0364b410":"code","ea693a17":"code","f6bcc52b":"code","fab1a702":"code","59094cba":"code","8f6c7c99":"code","eb01da9c":"code","d30f93e9":"code","8f83115d":"code","70f34c39":"code","08a8ebcf":"code","8985a636":"code","d918b909":"code","349cab67":"code","2682837c":"code","e0c4ed9f":"code","adf11263":"code","9d6140b0":"code","b6918497":"code","7f84a9f5":"code","62a12c20":"code","3f96e8de":"markdown","a01de797":"markdown","cf157536":"markdown","5a24332e":"markdown","bf35fcde":"markdown","f21ae44b":"markdown","d5af748e":"markdown","68a100f9":"markdown","1b753f88":"markdown","9ca5c102":"markdown","b352bb77":"markdown"},"source":{"e0dfd5ae":"# data manipulation\nimport pandas as pd\nimport numpy as np\n\n# data visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nplt.style.use('seaborn')\nplt.rcParams[\"figure.figsize\"] = (20,12)","68aef5c3":"import warnings\nwarnings.filterwarnings(\"ignore\")","72e45746":"df = pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv', index_col='Rank')\ndf.head()","0178f98f":"# info about the column types etc. \ndf.info()","9faa5682":"# find nan values\ndf_null_perc = pd.DataFrame((df.isnull().sum())*100\/df.shape[0]).reset_index()\ndf_null_perc.columns = ['column_name', 'null_values_perc']\ndf_null_abs = pd.DataFrame(df.isnull().sum()).reset_index()\ndf_null_abs.columns = ['column_name', 'null_values']\ndf_null = pd.merge(df_null_abs, df_null_perc, on='column_name')\ndf_null","0364b410":"# drop nan values\ndf = df.dropna()\ndf.isna().sum()","ea693a17":"# checking numerical columns statistics\ndf.describe()","f6bcc52b":"# checking object-type columns statistics\ndf.describe(include=['object'])","fab1a702":"# find duplicates\nprint(f'dataframe contains {df.shape[0] - df.drop_duplicates().shape[0]} duplicates')","59094cba":"# Overall Statistics\n\nfig = go.Figure()\nfig.add_trace(go.Indicator(\n    mode = \"number\",\n    value = df['Name'].nunique(),\n    title = {'text': \"Games\",'font': {'color': 'firebrick','size':15}},\n    number={'font':{'color': 'firebrick','size':40}},\n    domain = {'row': 0, 'column': 0}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number\",\n    value = df['Publisher'].nunique(),\n    title = {'text': \"Publishers\",'font': {'color': 'coral','size':15}},\n    number={'font':{'color': 'coral','size':40}},\n    domain = {'row': 0, 'column': 1}\n))\n\nfig.add_trace(go.Indicator(\n    mode = \"number\",\n    value = df['Platform'].nunique(),\n    title = {'text': \"Platforms\",'font': {'color': 'darkturquoise','size':15}},\n    number={'font':{'color': 'darkturquoise','size':40}},\n    domain = {'row': 0, 'column': 2}\n))\n\nfig.add_trace(go.Indicator(\n    mode = \"number\",\n    value = df['Genre'].nunique(),\n    title = {'text': \"Genres\",'font': {'color': 'olivedrab','size':15}},\n    number={'font':{'color': 'olivedrab','size':40}},\n    domain = {'row': 0, 'column': 3}\n))\n\nfig.update_layout(\n    width=800,\n    height=300,\n    grid = {'rows': 1, 'columns': 4, 'pattern': \"independent\"})","8f6c7c99":"rel_by_year = df.groupby('Year', as_index=False)['Name'].count().astype({'Year':'int'}).rename(columns={'Name':'count'})\n\nsns.barplot(x='Year', y='count', data=rel_by_year, palette=\"flare\")\nplt.title('Video Game Release by Year', fontsize=20)\nplt.xlabel('')\nplt.ylabel('Count', fontsize=18);","eb01da9c":"glsales_by_year=df.groupby('Year', as_index=False)['Global_Sales'].sum().astype({'Year':'int'})\n\nsns.barplot(x='Year', y='Global_Sales', data=glsales_by_year, palette=\"flare\")\nplt.title('Video Game Global Sales by Release Year', fontsize=20)\nplt.xlabel('')\nplt.ylabel('Sum of Sales, $M', fontsize=18);","d30f93e9":"top_publ=df.groupby('Publisher', as_index=False)['Name'].count().sort_values('Name', ascending=False).rename(columns={'Name':'count'})\n\nax = sns.barplot(x='Publisher', y='count', data=top_publ[:10], palette=\"magma\")\nplt.title('Top 10 Publishers by Count of VG Sales', fontsize=20)\nplt.xlabel('')\nplt.ylabel('Count', fontsize=18)\nplt.yticks(fontsize=12)\nfor i in ax.patches:\n    ax.text(i.get_x()+i.get_width()\/2, i.get_height()+1, int(i.get_height()),  ha='center', va='bottom', fontsize = 12)","8f83115d":"glsales_by_publ=df.groupby('Publisher', as_index=False)['Global_Sales'].sum().sort_values('Global_Sales', ascending=False)\n\nax = sns.barplot(x='Publisher', y='Global_Sales', data=glsales_by_publ[:10], palette=\"magma\")\nplt.title('Top 10 Publishers by Sales', fontsize=20)\nplt.xlabel('')\nplt.ylabel('Sum of Sales, $M', fontsize=18)\nplt.yticks(fontsize=12)\nfor i in ax.patches:\n    ax.text(i.get_x()+i.get_width()\/2, i.get_height()+1, \"%.2f\" % i.get_height(),  ha='center', va='bottom', fontsize = 12)","70f34c39":"top_platforms=df.groupby('Platform', as_index=False)['Name'].count().sort_values('Name', ascending=False).rename(columns={'Name':'count'})\n\nax = sns.barplot(x='Platform', y='count', data=top_platforms[:10], palette=\"magma\")\nplt.title('Top 10 Platforms by Count of VG Sales', fontsize=20)\nplt.xlabel('')\nplt.ylabel('Count', fontsize=18)\nplt.yticks(fontsize=12)\nfor i in ax.patches:\n    ax.text(i.get_x()+i.get_width()\/2, i.get_height()+1, int(i.get_height()),  ha='center', va='bottom', fontsize=12)","08a8ebcf":"glsales_by_pform = df.groupby('Platform', as_index=False)['Global_Sales'].sum().sort_values('Global_Sales', ascending=False)\n\nax = sns.barplot(x='Platform', y='Global_Sales', data=glsales_by_pform[:10], palette=\"magma\")\nplt.title('Top 10 Platforms by Sales', fontsize=20)\nplt.xlabel('')\nplt.ylabel('Sum of Sales, $M', fontsize=18)\nplt.yticks(fontsize=12)\nfor i in ax.patches:\n    ax.text(i.get_x()+i.get_width()\/2, i.get_height()+1, \"%.2f\"%i.get_height(),  ha='center', va='bottom', fontsize = 12)\n    ","8985a636":"NA_Sales = df.groupby('Platform', as_index=False)['NA_Sales'].sum().sort_values('NA_Sales', ascending=False)\nEU_Sales = df.groupby('Platform', as_index=False)['EU_Sales'].sum().sort_values('EU_Sales', ascending=False)\nJP_Sales = df.groupby('Platform', as_index=False)['JP_Sales'].sum().sort_values('JP_Sales', ascending=False)\nOther_Sales = df.groupby('Platform', as_index=False)['Other_Sales'].sum().sort_values('Other_Sales', ascending=False)","d918b909":"fig, [ax1, ax2,ax3, ax4] = plt.subplots(nrows=4, ncols=1, sharex=True)\nfig.suptitle('Sum of Sales per Region', x=0.5, y=0.935, fontsize=20)\nax1.set_title('NA Sales')\nax2.set_title('EU Sales')\nax3.set_title('JP Sales')\nax4.set_title('Other Sales')\n\n\nsns.barplot(ax=ax1, x='NA_Sales', y='Platform', data=NA_Sales[:10], palette=\"magma\", orient='h')\nsns.barplot(ax=ax2, x='EU_Sales', y='Platform', data=EU_Sales[:10], palette=\"magma\", orient='h')\nsns.barplot(ax=ax3, x='JP_Sales', y='Platform', data=JP_Sales[:10], palette=\"magma\", orient='h')\nsns.barplot(ax=ax4, x='Other_Sales', y='Platform', data=Other_Sales[:10], palette=\"magma\", orient='h')\n\n\nax1.set(xlabel=None, ylabel=None)\nax2.set(xlabel=None, ylabel=None)\nax3.set(xlabel=None, ylabel=None)\nax4.set(xlabel=None, ylabel=None)\n\nfig.text(0.08, 0.5, 'Platform', va='center', rotation='vertical', fontsize=18)\nfig.text(0.5, 0.08, 'Sum of Sales, $M', ha='center', fontsize=18)\n\nfor i in fig.axes:\n    for j in i.patches:\n        i.text(j.get_width()+8, j.get_y()+j.get_height(), int(j.get_width()), ha='center', fontsize=11)","349cab67":"sort_genre = df.groupby('Genre', as_index=False)['Name'].count().rename(columns={'Name':'count'}).sort_values('count', ascending=False)","2682837c":"plt.rcParams[\"figure.figsize\"] = (16,10)\n\ngroup_size = sort_genre['count'].values.tolist()\ngroup_labels = sort_genre['Genre'].values.tolist()\npalette = sns.color_palette('Blues_r', 12)\n\n#plt.pie(group_size, autopct='%1.1f%%', labels=group_labels, pctdistance=0.8, colors=palette)\nplt.pie(group_size, autopct=lambda p: '{:.2f}%  ({:.0f})'.format(p,p * sum(group_size)\/100), labels=group_labels, pctdistance=0.8, colors=palette)\ncentral_circle = plt.Circle((0, 0), 0.6, color='white')\nfig = plt.gcf()\nfig.gca().add_artist(central_circle)\nplt.title('Genre\\'s Distribution by VG Count', fontsize=18);","e0c4ed9f":"glsales_genre = df.groupby('Genre', as_index=False)['Global_Sales'].sum().sort_values('Global_Sales', ascending=False)","adf11263":"group_size = glsales_genre['Global_Sales'].values.tolist()\ngroup_labels = sort_genre['Genre'].values.tolist()\npalette = sns.color_palette('Blues_r', 12)\n\nplt.pie(group_size, autopct=lambda p: '{:.2f}%  ({:,.0f} $M)'.format(p,p * sum(group_size)\/100), labels=group_labels, pctdistance=0.8, colors=palette)\ncentral_circle = plt.Circle((0, 0), 0.6, color='white')\nfig = plt.gcf()\nfig.gca().add_artist(central_circle)\nplt.title('Sum Of Sales per Genre', fontsize=18);","9d6140b0":"NA_genre = df.groupby('Genre', as_index=False)['NA_Sales'].sum()\nEU_genre = df.groupby('Genre', as_index=False)['EU_Sales'].sum()\nJP_genre = df.groupby('Genre', as_index=False)['JP_Sales'].sum()\nOther_genre = df.groupby('Genre', as_index=False)['Other_Sales'].sum()","b6918497":"plt.rcParams[\"figure.figsize\"] = (20,12)\nfig,ax = plt.subplots()\n\nplt.title('Genre Sales per Region', fontsize=18)\n\nbar_na = np.array(NA_genre['NA_Sales'])\nbar_eu = np.array(EU_genre['EU_Sales'])\nbar_jp = np.array(JP_genre['JP_Sales'])\nbar_other = np.array(Other_genre['Other_Sales'])\n\n\nax.bar(group_labels, bar_na, color='rosybrown') \nax.bar(group_labels, bar_eu, bottom=bar_na, color='steelblue') \nax.bar(group_labels, bar_jp, bottom=bar_na+bar_eu, color='aquamarine')\nax.bar(group_labels, bar_other, bottom=bar_na+bar_eu+bar_jp, color='firebrick')\nax.set_ylabel('Sales in $M', {'fontname':'Arial', 'fontsize':14})\nax.legend([\"NA\", \"EU\", \"JP\", \"Other\"], fontsize=16)\nax.set_xticklabels(group_labels, fontsize=12)\nx_pos = 0\nfor i in list(zip(bar_na, bar_eu, bar_jp, bar_other)):\n    ax.text(x_pos, i[0]\/2, int(i[0]), ha='center', fontsize=12)\n    ax.text(x_pos, i[1]\/2+i[0], int(i[1]), ha='center', fontsize=12)\n    ax.text(x_pos, i[2]\/2.8+(i[1]+i[0]), int(i[2]), ha='center', fontsize=12)\n    if i[3] < 60:\n        ax.text(x_pos, i[3]+i[2]+i[1]+i[0]+2, int(i[3]), ha='center', fontsize=12)\n    else:\n        ax.text(x_pos, i[3]\/2.5+i[2]+i[1]+i[0]+2, int(i[3]), ha='center', fontsize=12)\n    x_pos+=1","7f84a9f5":"top_games_eu = df.groupby('Name', as_index=False).agg({'EU_Sales': 'sum'}).sort_values('EU_Sales', ascending=False)\ntop_games_na = df.groupby('Name', as_index=False).agg({'NA_Sales': 'sum'}).sort_values('NA_Sales', ascending=False)\ntop_games_jp = df.groupby('Name', as_index=False).agg({'JP_Sales': 'sum'}).sort_values('JP_Sales', ascending=False)\ntop_games_other = df.groupby('Name', as_index=False).agg({'Other_Sales': 'sum'}).sort_values('Other_Sales', ascending=False)","62a12c20":"fig, [[ax1, ax2], [ax3, ax4]] = plt.subplots(nrows=2, ncols=2, constrained_layout = True)\nfig.suptitle('Top 5 Games per Region', fontsize=20)\n\nsns.barplot(ax=ax1, x='Name', y='NA_Sales', data=top_games_na[:5], palette='crest_r')\nsns.barplot(ax=ax2, x='Name', y='EU_Sales', data=top_games_eu[:5], palette='crest_r')\nsns.barplot(ax=ax3, x='Name', y='JP_Sales', data=top_games_jp[:5], palette='crest_r')\nsns.barplot(ax=ax4, x='Name', y='Other_Sales', data=top_games_other[:5], palette='crest_r')\n\nax1.set_title('NA Sales', fontsize=16)\nax2.set_title('EU Sales', fontsize=16)\nax3.set_title('JP Sales', fontsize=16)\nax4.set_title('Other Sales', fontsize=16)\n\nfor i in fig.axes:\n    x_pos=0\n    i.set(xlabel=None, ylabel=None)\n    i.set_xticklabels(ax1.get_xticklabels(), rotation=-20, fontsize=12, fontweight='bold')\n    for j in i.patches:\n        i.text(x_pos, j.get_height()\/2, str(\"%.2f\"%j.get_height())+' $M', ha='center', fontsize=13, color='white')\n        x_pos+=1","3f96e8de":"# Data Visualization","a01de797":"### Region Wise Sales per Platform","cf157536":"### Video Game Rank per Region","5a24332e":"### Platform Wise Analysis","bf35fcde":"# import packages and themes","f21ae44b":"### Publisher Wise Analysis","d5af748e":"# Data Analysis","68a100f9":"![](https:\/\/media.npr.org\/assets\/img\/2017\/08\/08\/gettyimages-176426057_wide-c6d79c47986bd46b88ffe656b1ca09afd3b7e7b3-s800-c85.webp)\n","1b753f88":"### Year Wise Analysis","9ca5c102":"# Description\n\nFields include\n\n* Name - The games name;\n\n* Platform - Platform of the games release; \n\n* Year - Year of the game's release;\n\n* Genre - Genre of the game;\n\n* Publisher - Publisher of the game;\n\n* NA_Sales - Sales in North America (in millions);\n\n* EU_Sales - Sales in Europe (in millions);\n\n* JP_Sales - Sales in Japan (in millions);\n\n* Other_Sales - Sales in the rest of the world (in millions);\n\n* Global_Sales - Total worldwide sales.","b352bb77":"### Genre Wise Analysis"}}