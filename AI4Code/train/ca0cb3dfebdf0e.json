{"cell_type":{"37784f5b":"code","a95cc7dc":"code","e2a348ac":"code","34a4c256":"code","f55a2a5d":"code","5cc4671e":"code","fcd5919e":"code","f776d8b8":"markdown"},"source":{"37784f5b":"# Do some feature extraction.\n\n!pip install fastai==0.7\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\/Data\"))\n\n# Any results you write to the current directory are saved as output.","a95cc7dc":"import pandas as pd\nSTOCKS = '..\/input\/Data\/Stocks\/'\nFILE = 'fb.us.txt'\nstocks = pd.read_csv(STOCKS+FILE)\n\n# TODO detrend data by removing average stock movement (how tho?)","e2a348ac":"import numpy as np\nclose = np.array(stocks['Close'])\nreturn_raw_prev1 = (close[1:]- close[:-1]) \/ close[:-1]\n# These are like, if you bought stock yesterday and sold it today, what's your ROI\nstocks['ReturnsRawPrev1'] = None\nstocks['ReturnsRawPrev1'][1:] = return_raw_prev1\nreturn_raw_prev5 = (close[5:] - close[:-5]) \/ close[:-5]\nstocks['ReturnsRawPrev5'] = None\nstocks['ReturnsRawPrev5'][5:] = return_raw_prev5\nreturn_raw_prev10 = (close[10:] - close[:-10]) \/ close[:-10]\nstocks['ReturnsRawPrev10'] = None\nstocks['ReturnsRawPrev10'][10:] = return_raw_prev10\nstocks.head(15)\n\n# This is if you buy stock today and sell it tomorrow, what will your return be? Target variable you want to predict\nstocks['ReturnsRawFut1'] = None\nstocks['ReturnsRawFut1'][:-1] = return_raw_prev1\nstocks['ReturnsRawFut5'] = None\nstocks['ReturnsRawFut5'][:-5] = return_raw_prev5\nstocks['ReturnsRawFut10'] = None\nstocks['ReturnsRawFut10'][:-10] = return_raw_prev10\n","34a4c256":"from fastai.structured import add_datepart\n\nadd_datepart(stocks, 'Date')\nstocks.head(15)","f55a2a5d":"stocks.head(15)","5cc4671e":"stocks.to_csv('fb.us.txt')","fcd5919e":"!ls ..","f776d8b8":"Extract market returns and cyclic information about the dates.\n\nI used fastai's add_datepart to break up the date into day of month, week, year, etc.\n\nI also calculated market returns looking (1,5,10) days behind and ahead. This format is similar to the dataset found here:\nhttps:\/\/www.kaggle.com\/c\/two-sigma-financial-news\nThe ReturnsRawPrevN can be used as an input feature, and the ReturnsRawFutN can be the predicted value."}}