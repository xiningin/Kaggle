{"cell_type":{"8b71a362":"code","90b240d7":"code","9c2fbc84":"code","cfa153d7":"code","6f089302":"code","4cf455f3":"code","1a152e79":"code","a3742108":"code","63c28761":"code","ba977342":"code","265d2595":"code","014fd92b":"code","aefb98cd":"code","98c66653":"code","374de677":"code","6beb4f84":"code","73ad29ab":"code","eea4336f":"code","7deb63fe":"code","b8df030d":"code","96c7126f":"code","7b743fdd":"code","5adae2d2":"code","1d323168":"code","56807150":"code","528d5963":"markdown","ca0d5081":"markdown","be0bf65c":"markdown","57a5fbc3":"markdown","15f9ddad":"markdown","33587e8d":"markdown","5ed42ade":"markdown","1b06a68c":"markdown","ddfa9135":"markdown","0e6f9774":"markdown","58e2e797":"markdown","33cfc09c":"markdown","13ed560e":"markdown","89469bef":"markdown","c1bbfafe":"markdown"},"source":{"8b71a362":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","90b240d7":"import os\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np # linear algebra\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n\nimport sqlite3 # SQLite \n\n","9c2fbc84":"# Create connection\ndatabase_connection = sqlite3.connect(\"..\/input\/soccer\/database.sqlite\")\n\n\n                                      ","cfa153d7":"tables = pd.read_sql(\"\"\"SELECT *\n                        FROM sqlite_master\n                        WHERE type='table';\"\"\", database_connection)\ntables","6f089302":"tables = pd.read_sql(\"\"\"SELECT * FROM country;\"\"\", database_connection)\ntables","4cf455f3":"leagues = pd.read_sql(\"\"\"SELECT *\n                        FROM League\n                        JOIN Country ON Country.id = League.country_id;\"\"\", database_connection)\nleagues","1a152e79":"teams = pd.read_sql(\"\"\"SELECT *\n                        FROM Team\n                        ORDER BY team_long_name\n                        LIMIT 20;\"\"\", database_connection)\nteams","a3742108":"detailed_matches = pd.read_sql(\"\"\"SELECT Match.id, \n                                        Country.name AS country_name, \n                                        League.name AS league_name, \n                                        season, \n                                        stage, \n                                        date,\n                                        HT.team_long_name AS  home_team,\n                                        AT.team_long_name AS away_team,\n                                        home_team_goal, \n                                        away_team_goal                                        \n                                FROM Match\n                                JOIN Country on Country.id = Match.country_id\n                                JOIN League on League.id = Match.league_id\n                                LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id\n                                LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id\n                                WHERE country_name = 'Spain'\n                                ORDER by date\n                                LIMIT 15;\"\"\", database_connection)\ndetailed_matches\n","63c28761":"leages_by_season = pd.read_sql(\"\"\"SELECT Country.name AS country_name, \n                                        League.name AS league_name, \n                                        season,\n                                        count(distinct stage) AS number_of_stages,\n                                        count(distinct HT.team_long_name) AS number_of_teams,\n                                        avg(home_team_goal) AS avg_home_team_scors, \n                                        avg(away_team_goal) AS avg_away_team_goals, \n                                        avg(home_team_goal-away_team_goal) AS avg_goal_dif, \n                                        avg(home_team_goal+away_team_goal) AS avg_goals, \n                                        sum(home_team_goal+away_team_goal) AS total_goals                                       \n                                FROM Match\n                                JOIN Country on Country.id = Match.country_id\n                                JOIN League on League.id = Match.league_id\n                                LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id\n                                LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id\n                                WHERE country_name in ('Spain', 'Germany', 'France', 'Italy', 'England')\n                                GROUP BY Country.name, League.name, season\n                                HAVING count(distinct stage) > 10\n                                ORDER BY Country.name, League.name, season DESC\n                                ;\"\"\", database_connection)\nleages_by_season","ba977342":"df = pd.DataFrame(index=np.sort(leages_by_season['season'].unique()), columns=leages_by_season['country_name'].unique())\n\ndf.loc[:,'Germany'] = list(leages_by_season.loc[leages_by_season['country_name']=='Germany','avg_goals'])\ndf.loc[:,'Spain']   = list(leages_by_season.loc[leages_by_season['country_name']=='Spain','avg_goals'])\ndf.loc[:,'France']   = list(leages_by_season.loc[leages_by_season['country_name']=='France','avg_goals'])\ndf.loc[:,'Italy']   = list(leages_by_season.loc[leages_by_season['country_name']=='Italy','avg_goals'])\ndf.loc[:,'England']   = list(leages_by_season.loc[leages_by_season['country_name']=='England','avg_goals'])\n\ndf.plot(figsize=(12,5),title='Average Goals per Game Over Time')\n","265d2595":"df = pd.DataFrame(index=np.sort(leages_by_season['season'].unique()), columns=leages_by_season['country_name'].unique())\n\ndf.loc[:,'Germany'] = list(leages_by_season.loc[leages_by_season['country_name']=='Germany','avg_goal_dif'])\ndf.loc[:,'Spain']   = list(leages_by_season.loc[leages_by_season['country_name']=='Spain','avg_goal_dif'])\ndf.loc[:,'France']   = list(leages_by_season.loc[leages_by_season['country_name']=='France','avg_goal_dif'])\ndf.loc[:,'Italy']   = list(leages_by_season.loc[leages_by_season['country_name']=='Italy','avg_goal_dif'])\ndf.loc[:,'England']   = list(leages_by_season.loc[leages_by_season['country_name']=='England','avg_goal_dif'])\n\ndf.plot(figsize=(12,5),title='Average Goals Difference Home vs Out')\n\n","014fd92b":"# Read Cristiano's Data from the database\ncris = pd.read_sql(\"\"\"SELECT player_name,\n                                  date,overall_rating,\n                                  attacking_work_rate,\n                                  crossing,\n                                  finishing,\n                                  shot_power,\n                                  heading_accuracy,\n                                  free_kick_accuracy,\n                                  sprint_speed,\n                                  dribbling,\n                                  agility\n                                    \n                      FROM Player \n                      LEFT JOIN Player_Attributes\n                      ON Player.player_api_id = Player_Attributes.player_api_id\n                    \n                      WHERE player_name = 'Cristiano Ronaldo'\n                        \n                      ORDER by date\n                      \"\"\", database_connection)\n\n# Read Messi's Data from the database\nmessi = pd.read_sql(\"\"\"SELECT player_name,\n                                  date,overall_rating,\n                                  attacking_work_rate,\n                                  crossing,\n                                  finishing,\n                                  shot_power,\n                                  heading_accuracy,\n                                  free_kick_accuracy,\n                                  sprint_speed,\n                                  dribbling,\n                                  agility\n                                    \n                      FROM Player \n                      LEFT JOIN Player_Attributes\n                      ON Player.player_api_id = Player_Attributes.player_api_id\n                    \n                      WHERE player_name = 'Lionel Messi'\n                        \n                      ORDER by date\n                      \"\"\", database_connection)\n# Covert date column\ncris[\"date\"] = pd.to_datetime(cris[\"date\"])\nmessi[\"date\"] = pd.to_datetime(messi[\"date\"])\n\n\n","aefb98cd":"cris.head()","98c66653":"messi.head()","374de677":"cris.describe()","6beb4f84":"messi.describe()","73ad29ab":"plt.figure(figsize=(12,5))\nsns.lineplot(x='date', y='finishing', data=cris, markerfacecolor=\"gold\", markersize=12, color='red', linewidth=2, label='Cristiano Ronaldo').set_title(\"Messi vs. Ronaldo Finishing from 2007 to 2015\", fontname ='Times New Roman', size = 12, color ='Darkred' )\nsns.lineplot(x='date', y='finishing', data=messi, markerfacecolor=\"darkblue\", markersize=12, color='skyblue', linewidth=2, label='Lionel Messi')","eea4336f":"plt.figure(figsize=(12,5))\nsns.lineplot(x='date', y='free_kick_accuracy', data=cris, markerfacecolor=\"gold\", markersize=12, color='red', linewidth=2, label='Cristiano Ronaldo').set_title(\"Messi vs. Ronaldo Free-kick Accuracy from 2007 to 2015\", fontname ='Times New Roman', size = 12, color ='Darkred' )\nsns.lineplot(x='date', y='free_kick_accuracy', data=messi, markerfacecolor=\"darkblue\", markersize=12, color='skyblue', linewidth=2, label='Lionel Messi')","7deb63fe":"plt.figure(figsize=(12,5))\n\nsns.lineplot(x='date', y='overall_rating', data=cris, markerfacecolor=\"gold\", markersize=12, color='red', linewidth=2, label='Cristiano Ronaldo').set_title(\"Messi vs. Ronaldo Overall Rating from 2007 to 2015\", fontname ='Times New Roman', size = 12, color ='Darkred' )\nsns.lineplot(x='date', y='overall_rating', data=messi, markerfacecolor=\"darkblue\", markersize=12, color='skyblue', linewidth=2, label='Lionel Messi')","b8df030d":"plt.figure(figsize=(12,5))\nsns.lineplot(x='date', y='dribbling', data=cris, markerfacecolor=\"gold\", markersize=12, color='red', linewidth=2, label='Cristiano Ronaldo').set_title(\"Messi vs. Ronaldo Dribbling from 2007 to 2015\", fontname ='Times New Roman', size = 12, color ='Darkred' )\nsns.lineplot(x='date', y='dribbling', data=messi, markerfacecolor=\"darkblue\", markersize=12, color='skyblue', linewidth=2, label='Lionel Messi')\n","96c7126f":"plt.figure(figsize=(12,5))\nsns.lineplot(x='date', y='agility', data=cris, markerfacecolor=\"gold\", markersize=12, color='red', linewidth=2, label='Cristiano Ronaldo').set_title(\"Messi vs. Ronaldo Agility from 2007 to 2015\", fontname ='Times New Roman', size = 12, color ='Darkred' )\nsns.lineplot(x='date', y='agility', data=messi, markerfacecolor=\"darkblue\", markersize=12, color='skyblue', linewidth=2, label='Lionel Messi')","7b743fdd":"plt.figure(figsize=(12,5))\nsns.lineplot(x='date', y='sprint_speed', data=cris, markerfacecolor=\"gold\", markersize=12, color='red', linewidth=2, label='Cristiano Ronaldo').set_title(\"Messi vs. Ronaldo Sprint Speed from 2007 to 2015\", fontname ='Times New Roman', size = 12, color ='Darkred' )\nsns.lineplot(x='date', y='sprint_speed', data=messi, markerfacecolor=\"darkblue\", markersize=12, color='skyblue', linewidth=2, label='Lionel Messi')","5adae2d2":"plt.figure(figsize=(12,5))\nsns.lineplot(x='date', y='heading_accuracy', data=cris, markerfacecolor=\"gold\", markersize=12, color='red', linewidth=2, label='Cristiano Ronaldo').set_title(\"Messi vs. Ronaldo Heading Accuracy from 2007 to 2015\", fontname ='Times New Roman', size = 12, color ='Darkred' )\nsns.lineplot(x='date', y='heading_accuracy', data=messi, markerfacecolor=\"darkblue\", markersize=12, color='skyblue', linewidth=2, label='Lionel Messi')","1d323168":"plt.figure(figsize=(12,5))\nsns.lineplot(x='date', y='shot_power', data=cris, markerfacecolor=\"gold\", markersize=12, color='red', linewidth=2, label='Cristiano Ronaldo').set_title(\"Messi vs. Ronaldo Shot Power from 2007 to 2015\", fontname ='Times New Roman', size = 12, color ='Darkred' )\nsns.lineplot(x='date', y='shot_power', data=messi, markerfacecolor=\"darkblue\", markersize=12, color='skyblue', linewidth=2, label='Lionel Messi')","56807150":"plt.figure(figsize=(12,5))\nsns.lineplot(x='date', y='crossing', data=cris, markerfacecolor=\"gold\", markersize=12, color='red', linewidth=2, label='Cristiano Ronaldo').set_title(\"Messi vs. Ronaldo Crossing from 2007 to 2015\", fontname ='Times New Roman', size = 12, color ='Darkred' )\nsns.lineplot(x='date', y='crossing', data=messi, markerfacecolor=\"darkblue\", markersize=12, color='skyblue', linewidth=2, label='Lionel Messi')","528d5963":"# List of teams \n\nORDER BY defines the sorting of the output - ascending or descending (DESC)\n\nLIMIT, limits the number of rows in the output - after the sorting","ca0d5081":"#  Ronaldo's table","be0bf65c":"# We view the entries of each players dataframe","57a5fbc3":"# List of countries and thier league\n\nJoins is the most important part of data analysis in SQL \nWhat we will do here is:\n* (INNER) JOIN - keep only records that match the condition (after the ON) in both the tables, and records in both tables that do not match wouldn't appear in the output\n* LEFT JOIN - keep all the values from the first (left) table - in conjunction with the matching rows from the right table. The columns from the right table, that don't have matching value in the left, would have NULL values.\n* Specify the common value that is used to connect the tables (the id of the country in that case). \n* Make sure that at least one of the values has to be a key in its table. In our case, it's the Country.id. The League.country_id is not unique, as there can be more than one league in the same country","15f9ddad":"# First things first\n\nYou need to Import the libraries that python has to offer \nWhy Python and SQLite:\nWhile both the languages are most popular and used languages when it comes data.\nPython has great many libraries which we need to import to analyis our data.\nand Why SQLite it is one of the python library ergo you need to install any software.","33587e8d":"# Now we get started\n\nFor assuring that we made connection to database , we start with basic SQL syntax.","5ed42ade":"# <center>Lionel Messi VS Cristiano Ronaldo  \nTime to see some stats for the Argentine and Barcelona forward Lionel Messi and Portuguese and Juventus forward Christiano Ronaldo.","1b06a68c":"#  Creating connection to the DB","ddfa9135":"#  Messi's Table","0e6f9774":"# List of countries","58e2e797":"# Now it comes to some analysis\n\nHere we are starting to look at the data at more aggregated level. Instead of looking on the raw data we will start to grouping it to different levels we want to examine. In this example, we will base it on the previous query, remove the match and date information, and look at it at the country-league-season level\n\nthe functionalities we will use are as follows:\n* We'll use GROUP BY , WHERE AND ORDER\n* Metrics - all the metrics have to be aggregated using functions.. The common functions are: sum(), count(), count(distinct), avg(), min(), max()\n* Also, matplotlibrary for representing data","33cfc09c":"# Summaries of the both the players ","13ed560e":"<h1><center> European Football Analysis & Data Visualization<\/center><\/h1>\n\nIn this project, we will take a look at\n\n* First step,in to the world of data\n* Data Visualization and Analysis \n* Lionel Messi vs Cristiano Ronaldo -comparisson\n* SQL in Python\n","89469bef":"# Data Visualization and Analysis","c1bbfafe":"# List of matches \n\nIn this exapmle we will show only the columns that interests us, so instead of * we will use the exact names.\n\nSome of the cells have the same name (Country.name,League.name). We will rename them using AS\n\nbecause they the same id in each table so that alll info will be stored in other tables like(country,League,Team)"}}