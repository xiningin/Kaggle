{"cell_type":{"e718613a":"code","4976c4cd":"code","25c1dfa7":"code","742aea3d":"code","502e8080":"code","c90460a0":"code","f3054ec4":"code","247a4a9c":"code","3eaf42f5":"code","4f43d35d":"code","6361e466":"code","f0a7d301":"code","4840e331":"code","8a706bab":"code","e1009cc1":"code","4875d672":"code","d98f42f2":"code","70152cbb":"code","e28ce086":"code","ee98c51a":"code","9099d591":"code","f96e7410":"code","f7fe1ca9":"code","e7133f12":"code","ba7bd15d":"code","4b31cbf0":"code","1de39e67":"code","35ac5746":"code","1ec626d7":"code","bd447b47":"code","6ccbf5ae":"code","d4d2a685":"code","b5bc8271":"code","7ed112a9":"code","0e7acf1f":"code","0f42bf70":"code","c60b9efc":"code","36518901":"code","35c3752c":"code","6d7d9fbe":"code","f818a33d":"code","dcceea9f":"code","c7423de7":"code","76747b6d":"code","ba9c135b":"markdown","485c6a60":"markdown","ac006271":"markdown","b9bccceb":"markdown","217c3402":"markdown","7b0796de":"markdown","49d43bb9":"markdown","86c7ccce":"markdown","19a13aa6":"markdown","5368e27b":"markdown","72d4dac5":"markdown","bf35df42":"markdown","f9b519f6":"markdown","88cf2fa4":"markdown","a402f5ce":"markdown","58f38dac":"markdown"},"source":{"e718613a":"from IPython.display import Image\nImage(\"..\/input\/titanic-image\/sinking-of-the-titanic-gettyimages-542907919-1.jpg\")","4976c4cd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Plotting libraries\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(color_codes = True)\n%matplotlib inline\n\n##### Scikit Learn modules needed for Logistic Regression\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.preprocessing import LabelEncoder,MinMaxScaler , StandardScaler\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","25c1dfa7":"##loading data\ntrain_df = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/titanic\/test.csv\")","742aea3d":"train_df.head()","502e8080":"train_df.shape ##checking shape of dataset","c90460a0":"train_df.info()","f3054ec4":"## dropping column which dont have any relation on dependent variable\ntrain_df.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin','Embarked'],axis='columns',inplace=True)","247a4a9c":"train_df.head()","3eaf42f5":"#function for converting male and female into 0 and 1\n\ndef clean_string(x):\n    if x == 'female':\n        return 1\n    else:\n        return 0","4f43d35d":"df_clean = train_df\ndf_clean['Sex'] = df_clean['Sex'].apply(clean_string)","6361e466":"df_clean.head()","f0a7d301":"sns.set_style('darkgrid')\nsns.countplot(data=df_clean,x='Survived')\nplt.show()","4840e331":"sns.set_style('darkgrid')\nsns.countplot(data=df_clean,x='Sex')\nplt.show()","8a706bab":"sns.set_style('darkgrid')\nsns.countplot(data=df_clean,x='Pclass')\nplt.show()","e1009cc1":"sns.set_style('darkgrid')\nsns.histplot(data=df_clean,x='Age')\nplt.show()","4875d672":"## correlation will give relation between each variable\ncorrelation = df_clean.corr()\nplt.figure(figsize=(15,10) )\nsns.heatmap(correlation,annot = True,cmap = 'Blues')","d98f42f2":"## checking any null value \ndf_clean.isnull().sum()","70152cbb":"df_clean[\"Age\"].describe()","e28ce086":"## filling na Age value as mean of overall age column\ndf_clean[\"Age\"].fillna(df_clean[\"Age\"].mean(),inplace= True)","ee98c51a":"## Seprating independent and dependent variable\ninputs = df_clean.drop('Survived',axis='columns')\ntarget = df_clean.Survived","9099d591":"inputs","f96e7410":"target","f7fe1ca9":"test_df.head()","e7133f12":"## dropping column which dont have any relation on dependent variable\ntest_df.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin','Embarked'],axis='columns',inplace=True)","ba7bd15d":"test_df.head()","4b31cbf0":"test_df.isnull().sum()","1de39e67":"test_df[\"Age\"].describe()","35ac5746":"test_df[\"Age\"].fillna(test_df[\"Age\"].mean(),inplace= True)","1ec626d7":"test_df[\"Fare\"].describe()","bd447b47":"test_df[\"Fare\"].fillna(test_df[\"Fare\"].mean(),inplace= True)","6ccbf5ae":"test_df2 = test_df\ntest_df2['Sex'] = test_df2['Sex'].apply(clean_string)","d4d2a685":"test_df2.head()","b5bc8271":"from sklearn.model_selection import train_test_split\n","7ed112a9":"X_train, X_test, y_train, y_test = train_test_split(inputs,target,test_size=0.3,random_state= 20)","0e7acf1f":"## checking length of x train y train\nprint(len(X_train),len(y_train),len(X_test),len(y_test))","0f42bf70":"clf = LogisticRegression()\nclf.fit(X_train, y_train)\ny_predicted = clf.predict(X_test)\nscore = clf.score(X_test, y_test)","c60b9efc":"print(score)","36518901":"clf.fit(inputs,target)","35c3752c":"## Predicting model with test dataset\npred=clf.predict(test_df2)","6d7d9fbe":"submission=pd.read_csv('..\/input\/titanic\/gender_submission.csv')","f818a33d":"submission.head()","dcceea9f":"submission=pd.DataFrame({\"PassengerId\": submission[\"PassengerId\"],\"Survived\":pred})","c7423de7":"submission","76747b6d":"## making submission file\nsubmission.to_csv('submission.csv',index=False)","ba9c135b":"## 2. Loading Train and test dataset","485c6a60":"### most of passengers travelling with 3rd class","ac006271":"## 4. visualize data","b9bccceb":"### Above plot we can see that for survived sex which depend +0.54 and fare depend +0.26### ","217c3402":"## 5. Build Logistic Regression Model","7b0796de":"## 3. Cleaning data","49d43bb9":"### here we can see that 350 peoples are survived and near about 550 people died in this disaster","86c7ccce":"### survival - Survival\t0 = No, 1 = Yes\n### pclass - Ticket class\t1 = 1st, 2 = 2nd, 3 = 3rd\n### sex -Sex\n### Age\t- Age in years\n### sibsp - # of siblings \/ spouses aboard the Titanic\n### parch - # of parents \/ children aboard the Titanic\n### ticket -Ticket number\n### fare - Passenger fare\n### cabin  -  Cabin number\n### embarked  - Port of Embarkation\tC = Cherbourg, Q = Queenstown, S = Southampton","19a13aa6":"## About Titanic dataset","5368e27b":"## About Titanic Disaster\nThe RMS Titanic sank in the early morning hours of 15 April 1912 in the North Atlantic Ocean, four days into her maiden voyage from Southampton to New York City. The largest ocean liner in service at the time, Titanic had an estimated 2,224 people on board when she struck an iceberg at around 23:40 (ship's time)[a] on Sunday, 14 April 1912. Her sinking two hours and forty minutes later at 02:20 (ship's time; 05:18 GMT) on Monday, 15 April, resulted in the deaths of more than 1,500 people, making it one of the deadliest peacetime maritime disasters in history.\n\n","72d4dac5":"## Conclusion - In this titanic dataset problem with help of  Logistic Regression we 77.98% accuracy.","bf35df42":"### Now will play with test data","f9b519f6":"### Most of the people are travelling is in the range of 20-30","88cf2fa4":"### near about 550 male and 310 are female on board","a402f5ce":"## 1. importing libraries","58f38dac":"### 6. kaggle compedition"}}