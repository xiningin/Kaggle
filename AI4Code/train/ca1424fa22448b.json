{"cell_type":{"901cc8c7":"code","25bc2e79":"code","1ad7eae3":"code","a27e74c4":"code","34347cb0":"code","39ac9737":"code","1d283cb4":"markdown"},"source":{"901cc8c7":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","25bc2e79":"import pandas as pd\nimport numpy as np\n\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix, roc_auc_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\n#from imblearn.over_sampling import SMOTE\n\nimport warnings\nwarnings.filterwarnings('ignore')","1ad7eae3":"#Read Data\ndf=pd.read_csv(\"..\/input\/passenger-list-for-the-estonia-ferry-disaster\/estonia-passenger-list.csv\")\n#New Column Ctry\ndf['Ctry']=df.Country.apply(lambda x: 'Estonia' if x=='Estonia' \n                            else ('Sweden' if x=='Sweden' else 'Others'))\n\n# Delete PassengerId, Country, Firstname and Lastname as they are not required for further analysis\ndf=df[['Sex', 'Age','Category', 'Survived', 'Ctry']]\n#without ctry\n#df=df[['Sex', 'Age','Category', 'Survived']]\ndf.head()","a27e74c4":"scalar=StandardScaler()\ndf.Age=scalar.fit_transform(np.array(df.Age).reshape(-1,1))\n\ndf_dummy=pd.get_dummies(df[['Sex','Category','Ctry']], drop_first=True)\n#without ctry\n#df_dummy=pd.get_dummies(df[['Sex','Category']], drop_first=True)\ndf=pd.concat([df,df_dummy], axis=1)\n\ndf.drop(['Sex','Category','Ctry'], axis=1, inplace=True)\n#without ctry\n#df.drop(['Sex','Category'], axis=1, inplace=True)\ndf.head()","34347cb0":"X=df.drop('Survived', axis=1)\ny=df.Survived","39ac9737":"model_rf=RandomForestClassifier(class_weight='balanced')\nmodel_rf.fit(X,y)\ny_pred_rf=model_rf.predict(X)\ny_proba_rf=model_rf.predict_proba(X)\ny_proba_rf=[p[1] for p in y_proba_rf]\n\nprint(\"Score : \", accuracy_score(y,y_pred_rf))\nprint(\"Confusion Matrix : \\n\", confusion_matrix(y, y_pred_rf))\nprint(\"ROC AUC Score : \" , roc_auc_score(y,y_proba_rf))\nprint(classification_report(y,y_pred_rf))","1d283cb4":"[**CHECK OUT MY EDA NOTEBOOK HERE**](https:\/\/www.kaggle.com\/abhijithchandradas\/ms-estonia-beginners-guide-to-eda-and-prediction)"}}