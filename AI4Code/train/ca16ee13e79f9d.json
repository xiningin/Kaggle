{"cell_type":{"18120b69":"code","60cfcaff":"code","3cf3b3ae":"code","5de4327d":"code","e2d0864c":"code","6efdd393":"code","e2ce3cd7":"code","771974b8":"code","389adfab":"code","4b459a72":"code","930fa14c":"markdown"},"source":{"18120b69":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","60cfcaff":"data = pd.read_csv('..\/input\/disney-movies-and-tv-shows\/disney_plus_titles.csv')\ndata.head()","3cf3b3ae":"data.dtypes","5de4327d":"data.info()","e2d0864c":"data[\"director\"].value_counts(dropna= False) #it helps for calculating director data","6efdd393":"data[\"director\"].dropna(inplace=True) ##inplace = True means we do not assign it to a new variable. Changes automatically assigned to data\n#Remove missing values.","e2ce3cd7":"assert  data['director'].notnull().all() # returns nothing because we drop nan values","771974b8":"data[\"director\"].fillna('empty',inplace = True) #We wrote empty instead of nan values. That makes code better. Because now we haven't any missing data.","389adfab":"assert data.columns[1] == 'type' #Is the type of the first column \"type\"? That's the answer of this question.","4b459a72":"data.info() #And now we filled the space in the director data frame. ","930fa14c":"It seems that there are 473 nan values in the director data frame.\n"}}