{"cell_type":{"3e05ed07":"code","4fb82387":"code","85863560":"code","da108066":"code","8e0fbb64":"code","9cafbc24":"code","a5d49bf6":"code","17a199e7":"code","d4b21592":"code","cddf99ed":"code","9a561da2":"code","7815db1d":"code","c257477b":"code","8f7c0f40":"code","9b7da7ec":"code","7a9a7d33":"code","c3630d92":"code","cf8514e8":"code","9b256a55":"code","7fe19580":"code","c351cf4e":"code","1d2abc2c":"markdown","e4684156":"markdown","8c8ffe9c":"markdown","6f80739c":"markdown"},"source":{"3e05ed07":"# Import Libraries\nimport numpy as np\nimport pandas as pd \n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC \nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix,  classification_report\n\nfrom sklearn.preprocessing import StandardScaler\nfrom warnings import filterwarnings\nfilterwarnings('ignore')","4fb82387":"#Load dataset\ndata = pd.read_csv(\"..\/input\/lower-back-pain-symptoms-dataset\/Dataset_spine.csv\")\n\ndata.head()","85863560":"# Data is clean except the \"Unnamed: 13\" column\ndata.info()","da108066":"# More details\ndata[\"Unnamed: 13\"].unique()","8e0fbb64":"# Type of Backbone Conditions\ndata.Class_att.unique()","9cafbc24":"# Remove unwanted column\ndf = data.drop(\"Unnamed: 13\", axis=1)","a5d49bf6":"# Change the Column names to be sensable\ndf.rename(columns = {\n    \"Col1\" : \"pelvic_incidence\", \n    \"Col2\" : \"pelvic_tilt\",\n    \"Col3\" : \"lumbar_lordosis_angle\",\n    \"Col4\" : \"sacral_slope\", \n    \"Col5\" : \"pelvic_radius\",\n    \"Col6\" : \"degree_spondylolisthesis\", \n    \"Col7\" : \"pelvic_slope\",\n    \"Col8\" : \"direct_tilt\",\n    \"Col9\" : \"thoracic_slope\", \n    \"Col10\" :\"cervical_tilt\", \n    \"Col11\" : \"sacrum_angle\",\n    \"Col12\" : \"scoliosis_slope\", \n    \"Class_att\" : \"target\"}, inplace=True)","17a199e7":"# How skewed is the data?\ndf[\"target\"].value_counts().sort_index().plot.bar()","d4b21592":"# Check which parameters are correlated to each other (have importance), they are\n# pelvic_incidence ,pelvic_tilt ,lumbar_lordosis_angle, sacral_slope, pelvic_radius & degree_spondylolisthesis\nplt.subplots(figsize=(12,8))\nsns.heatmap(df.corr())","cddf99ed":"# From above also, there are only first 5 params that can help is classifing\n# Others, give mixed relations\nsns.pairplot(df,hue=\"target\")","9a561da2":"# Convert categorical to numeric {\"Abnormal\":0, Normal:1}\ndf.target = df.target.astype(\"category\").cat.codes","7815db1d":"df.head()","c257477b":"# 70% Accuracy\n# dataset = df\n\n# 88% Accuracy\ndataset = df[[\"pelvic_incidence\",\"pelvic_tilt\",\"lumbar_lordosis_angle\",\"sacral_slope\",\"pelvic_radius\",\"degree_spondylolisthesis\",\"target\"]]\n\n# 75-80% Accuracy\n# dataset = df[[\"degree_spondylolisthesis\",\"target\"]]\n\n# 60% Accuracy\n# dataset = df[[\"pelvic_slope\",\"direct_tilt\",\"thoracic_slope\",\"cervical_tilt\",\"sacrum_angle\",\"scoliosis_slope\",\"target\"]]","8f7c0f40":"# Selected parameters\nsns.pairplot(dataset,hue=\"target\")","9b7da7ec":"# Separate input and output\ny = dataset.target\nX = dataset.drop(\"target\", axis=1)","7a9a7d33":"# Scale data between [-1, 1]\nsc = StandardScaler()\nX = sc.fit_transform(X)","c3630d92":"# Split data between train and test\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","cf8514e8":"# List models\nmodels =  [LogisticRegression, DecisionTreeClassifier, RandomForestClassifier,GradientBoostingClassifier, XGBClassifier,LGBMClassifier, SVC]","9b256a55":"# Train & Predict models\nacc_list = []\nname_list =[]\nfor model in models:\n    clf = model()\n    clf = clf.fit(X_train, y_train)\n    predictions = clf.predict(X_test)\n    \n    name_list.append((model).__name__)\n    acc_list.append(classification_report(y_test,predictions,output_dict=True)[\"accuracy\"])\n    print((model).__name__,\" --> \",classification_report(y_test,predictions,output_dict=True)[\"accuracy\"])","7fe19580":"# Make a dataframe\nteam = pd.DataFrame(list(zip(name_list,acc_list)))  \nteam.columns =['Name', \"Accuracy\"]\nteam","c351cf4e":"# Render a Chart\nsns.barplot(x=team[\"Name\"], y=team[\"Accuracy\"],data=team)\n\n# Rotate x-labels\nplt.xticks(rotation=-45)\nplt.ylim(0.7, 1)","1d2abc2c":"# Lower Back Pain Symptoms (88.3% accuracy)","e4684156":"**Logestic Regression** predicts with **88.3%** accuray whether a backbone has a **normal or abnormal condition.**","8c8ffe9c":"## Up vote notebook if it helps you","6f80739c":"# Please Upvote the notebook if it helps you"}}