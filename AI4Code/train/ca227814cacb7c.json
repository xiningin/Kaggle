{"cell_type":{"a6ea3061":"code","78df3886":"code","381cc808":"code","e981cb28":"code","37e8b19b":"code","808da3f4":"code","147cc066":"code","3ca18578":"code","874558ae":"code","5f54898e":"code","998bbfbe":"code","04aed4b5":"code","56a769dd":"code","e2a8a313":"code","6efa70cc":"code","c266211d":"code","6b6ca62b":"code","91725015":"code","d26c5339":"code","80c2f406":"code","ea45279e":"code","b1f385a4":"code","d8a01f70":"code","683961c5":"code","967c3716":"markdown","e208d33c":"markdown","b9e04754":"markdown","256c0e29":"markdown","cdd0e280":"markdown","4957fb75":"markdown","ab1feff9":"markdown","b03db80f":"markdown"},"source":{"a6ea3061":"import numpy as np \nimport pandas as pd \n\ndf = pd.read_csv(\"..\/input\/data.csv\")","78df3886":"df = df.drop(['id', 'Unnamed: 32'], axis=1)","381cc808":"df.head()","e981cb28":"df_features = df.drop(['diagnosis'], axis=1)","37e8b19b":"from sklearn.preprocessing import StandardScaler","808da3f4":"standardized = StandardScaler()","147cc066":"standardized.fit(df_features)","3ca18578":"scaled_data = standardized.transform(df_features)","874558ae":"#PCA\nfrom sklearn.decomposition import PCA","5f54898e":"pca = PCA(n_components=3)","998bbfbe":"pca.fit(scaled_data)","04aed4b5":"x_pca = pca.transform(scaled_data)","56a769dd":"scaled_data.shape","e2a8a313":"x_pca.shape","6efa70cc":"def diag(x):\n    if x =='M':\n        return 1\n    else:\n        return 0\ndf_diag= df['diagnosis'].apply(diag)","c266211d":"from mpl_toolkits.mplot3d import Axes3D\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","6b6ca62b":"x_pca[:1]","91725015":"fig = plt.figure(figsize=(15, 8))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(x_pca[:,0], x_pca[:,1], x_pca[:,2], c=df_diag, s=60)\nax.legend(['Malign'])\nax.set_xlabel('First Principal Component')\nax.set_ylabel('Second Principal Component')\nax.set_zlabel('Third Principal Component')\nax.view_init(30, 120)","d26c5339":"ax = plt.figure(figsize=(12,8))\nsns.scatterplot(x_pca[:,0], x_pca[:,2],hue=df['diagnosis'], palette ='Set1' )\nplt.xlabel('First Principal Component')\nplt.ylabel('Third Principal Component')","80c2f406":"ax = plt.figure(figsize=(12,8))\nsns.scatterplot(x_pca[:,1], x_pca[:,2],hue=df['diagnosis'], palette ='Set1' )\nplt.xlabel('Second Principal Component')\nplt.ylabel('Third Principal Component')","ea45279e":"ax = plt.figure(figsize=(12,8))\nsns.scatterplot(x_pca[:,0], x_pca[:,1],hue=df['diagnosis'], palette ='Set1' )\nplt.xlabel('First Principal Component')\nplt.ylabel('Second Principal Component')","b1f385a4":"df_pc = pd.DataFrame(pca.components_, columns = df_features.columns)","d8a01f70":"df_pc","683961c5":"plt.figure(figsize=(15, 8))\nsns.heatmap(df_pc, cmap='viridis')\nplt.title('Principal Components correlation with the features')\nplt.xlabel('Features')\nplt.ylabel('Principal Components')","967c3716":"**I plot the principal components  to see the relations **","e208d33c":"> **Principal Component Analysis (PCA) method applied to the Breast Cancer data set. \nI only want to visualized the features that really matters in predicting breast cancer**","b9e04754":"**I used 3 principal components decomposition of the 30 features**","256c0e29":"**I make a series of the diagnosis value**","cdd0e280":"**Each column is a principal component**","4957fb75":"**With the principal component analysis we only use the features, since PCA  is a unsupervised machine learning method.**","ab1feff9":"**Standardize the data of the features**","b03db80f":"**I focused in the features and the labels only and drop the other columns**"}}