{"cell_type":{"ffcc9161":"code","dc5e66ae":"code","4aa99b0f":"code","90822731":"code","bc3623c4":"code","5bbcbc8c":"code","11c51758":"code","789677d9":"code","8b62bd3e":"code","b97271a1":"code","8e9ab21e":"code","8ea2de1d":"code","865ff7a4":"code","22f5001e":"code","0dfecdfb":"code","4661c2a2":"code","dbc79d6e":"code","10ec68ac":"code","c02cd42c":"code","085c33ab":"code","beed415b":"code","e3886680":"code","1ca8b997":"code","1dea4247":"code","d41991a0":"code","7785f046":"code","dbf5afc1":"code","d21278fe":"code","6409ae12":"code","683736ce":"markdown","9f7d9e29":"markdown","13fb35b0":"markdown","366ed8b4":"markdown","e18fcc30":"markdown","a64785f1":"markdown","1651b551":"markdown","52e2d6bc":"markdown","2e50f1dd":"markdown","2ac4f496":"markdown","ca3dce76":"markdown","bde0013f":"markdown","1d12860c":"markdown","b29bdb07":"markdown","db23d407":"markdown","056c6eae":"markdown","649dd8f9":"markdown"},"source":{"ffcc9161":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\n\n# Graph display setting\n%matplotlib inline","dc5e66ae":"train = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntrain.head()","4aa99b0f":"train.SalePrice.describe()","90822731":"sns.distplot(train.SalePrice)","bc3623c4":"# correlation coefficient\ncorr = train.corr()\ncorr.head()","5bbcbc8c":"# The number of columns to be displayed in the heat map\nk = 10\n\n# Calculate for the top 10 columns with the highest correlation with SalesPrice\ncols = corr.nlargest(k, 'SalePrice')['SalePrice'].index\ncm = np.corrcoef(train[cols].values.T)\n\n# Font size of the heatmap\nsns.set(font_scale=1.25)\n\n# View in a heat map\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","11c51758":"# scatter plots\nsns.set()\ncols = ['SalePrice', 'OverallQual', 'GrLivArea']\nsns.pairplot(train[cols], size = 2.5)\nplt.show()","789677d9":"# top two highest-ranked data\ntrain.sort_values(by = 'GrLivArea', ascending = False)[:2]","8b62bd3e":"# Deleting the top two data\ntrain = train.drop(index = train[train['Id'] == 1299].index)\ntrain = train.drop(index = train[train['Id'] == 524].index)","b97271a1":"sns.set()\ncols = ['SalePrice', 'OverallQual', 'GrLivArea']\nsns.pairplot(train[cols], size = 2.5)\nplt.show()","8e9ab21e":"# feature values\ntrain_x = train[[\"OverallQual\", \"GrLivArea\"]]\ntrain_y = train[\"SalePrice\"]","8ea2de1d":"from sklearn.preprocessing import StandardScaler","865ff7a4":"# We are going to scale to data\ntrain_y = train_y.values.reshape(-1,1)","22f5001e":"# Data scaling\nscaler_x = StandardScaler()\nscaler_y = StandardScaler()\n\ntrain_x = scaler_x.fit_transform(train_x)\ntrain_y = scaler_y.fit_transform(train_y)","0dfecdfb":"train_x","4661c2a2":"from sklearn.linear_model import LinearRegression","dbc79d6e":"lm = LinearRegression()\nlm.fit(train_x, train_y)\n\n# partial regression coefficient\nprint('slope \uff1a {0}'.format(lm.coef_))\n\n# y-intercept\nprint('y-intercept : {0}'.format(lm.intercept_))","10ec68ac":"lm_pred = lm.predict(train_x)\nlm_pred","c02cd42c":"plt.figure(figsize = (15,8))\nplt.scatter(train_y, lm_pred)\nplt.xlabel('train_y')\nplt.ylabel('lm_pred_Y')\nplt.show()","085c33ab":"plt.figure(figsize = (16,8))\nplt.plot(train_y, label = 'train_y')\nplt.plot(lm_pred, label = 'lm_pred_Y')\nplt.show()","beed415b":"from sklearn import metrics","e3886680":"print('MAE :', metrics.mean_absolute_error(train_y, lm_pred))\nprint('MSE :', metrics.mean_squared_error(train_y, lm_pred))\nprint('RMSE :', np.sqrt(metrics.mean_squared_error(train_y, lm_pred)))","1ca8b997":"test = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")\ntest.head()","1dea4247":"test_x = test[[\"OverallQual\", \"GrLivArea\"]]","d41991a0":"test_x = scaler_x.fit_transform(test_x)","7785f046":"test_pred = lm.predict(test_x)","dbf5afc1":"test_pred = scaler_y.inverse_transform(test_pred)\ntest_pred","d21278fe":"test[\"SalePrice\"] = test_pred\ntest[[\"Id\",\"SalePrice\"]]","6409ae12":"test[[\"Id\",\"SalePrice\"]].to_csv(\".\/submission.csv\",index=False)","683736ce":"# Predict SalePrice of test data from trained models","9f7d9e29":"## An improved scatter plot","13fb35b0":"## Multiple regression model","366ed8b4":"## Display of scatter plots of highly correlated OverallQual and GrLivArea","e18fcc30":"# The next step is to create a features","a64785f1":"\u2022 A look at the SalesPrice and GrLivArea scatterplots shows a significant deviation from the trend There are two sets of data.  \n\u2022 Two data that deviate significantly from other are considered inappropriate training data or outlier data and delete.","1651b551":"## The top 10 data with high correlation coefficient with SalePrice","52e2d6bc":"## Regression Evaluation Metrics\n\u2022 MAE(Mean Absolute Error) is the average of the absolute value of the error  \n  \n$$ MAE = \\frac{1}{N}\\sum_{i=1}^{N} \\left| y_i - \\hat{y}_{i} \\right| $$  \n\u2022 MSE(Mean Squared Error) is the mean of the squared error  \n  \n$$ MSE = \\frac{1}{N}\\sum_{i=1}^{N} { ( y_i - \\hat{y}_{i} ) }^{2} $$  \n\u2022 RMSE(Root Mean Squared Error) is the square root of the mean of the squared error  \n  \n$$ RMSE = \\sqrt{ \\frac{1}{N}\\sum_{i=1}^{N} { ( y_i - \\hat{y}_{i} ) }^{2} } $$  ","2e50f1dd":"# We do a multiple regression analysis","2ac4f496":"# The first step is to perform an initial analysis.","ca3dce76":"## Heat map","bde0013f":"## Analyze SalesPrice with a Histogram\n\u2022 SalesPrice on the horizontal axis.  \n\u2022 Percentage on the vertical axis.","1d12860c":"## Basic statistics","b29bdb07":"# #Predicting House Prices","db23d407":"\u2022 The highest percentage of data around 160,000$.  \n\u2022 Extremely high SalesPrice exist.  \n\u2022 It's not a normal distribution.","056c6eae":"## Data scaling","649dd8f9":"### \u2022 The heat map shows that OverallQual and GrLivArea are highly correlated with SalePrice."}}