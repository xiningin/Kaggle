{"cell_type":{"5c5a853e":"code","d5e2e090":"code","a625b3bb":"code","d01f16a1":"code","7ff31236":"code","239fdfd5":"code","859eed04":"code","62186943":"code","c9a9cae0":"code","4b51c77f":"code","09ff5ae0":"code","692c943d":"code","4881a60e":"code","00f20ae0":"code","238c1d9d":"code","cc7e511e":"code","45af642c":"code","ffad968f":"code","ea863c64":"code","cfd5ad83":"code","fe31431c":"code","71316330":"code","4c418045":"code","94dc5245":"code","f3169c88":"code","60ea784e":"code","12a3206e":"code","3a3e7b55":"code","9257b954":"code","435b43c6":"code","76deaa03":"code","6d54c5ed":"code","226aecf8":"code","42c38ca5":"code","f506e8b5":"code","6d0a8421":"code","ad335c55":"code","6eb231a2":"code","36a9fff4":"code","2fbff048":"code","8b268cc9":"code","2904ceb7":"code","88410c27":"code","24f6c05d":"code","f8d6bcc8":"code","8a169f24":"code","16f90995":"code","ed68380b":"code","d4de73d2":"code","984d6dac":"code","31e69062":"code","2402284c":"code","60ce78b5":"code","bea9a0c5":"code","5b2b2c6b":"code","d4637c35":"code","f07f9df6":"code","27f37bc6":"code","f6fbf23c":"code","337d9478":"code","db55abff":"code","a8eefa73":"code","13d9f200":"code","c1f971df":"code","cf1b9b68":"code","bea1e9b1":"code","4ca9ed93":"code","f374a6be":"code","d9c4d13a":"code","6272545e":"code","04ecb8c6":"code","feef98aa":"code","d495d0a3":"code","7eab8e54":"markdown","f78575be":"markdown","02a74ccb":"markdown","5adcc3b7":"markdown","d1b59c47":"markdown","a32f2c34":"markdown","2a7750e3":"markdown","80625ee7":"markdown","9460680f":"markdown","ca1be07a":"markdown","946b7063":"markdown","759eddee":"markdown","4517d9c0":"markdown","1980b647":"markdown","72bee37e":"markdown","6296f01b":"markdown","fe856f58":"markdown","45dd6c2a":"markdown","62864e6c":"markdown","4b071ccc":"markdown","f86d0f52":"markdown","63672649":"markdown","7a707e0d":"markdown"},"source":{"5c5a853e":"!pip install pyforest \n#Install this and thank me later","d5e2e090":"from pyforest import *","a625b3bb":"df = pd.read_excel('\/kaggle\/input\/online-retail-store-data-from-uci-ml-repo\/Online Retail.xlsx', encoding = 'unicode_escape', parse_dates = ['InvoiceDate'])","d01f16a1":"#no need to sit and try to remember all the libraries you are going to need\nactive_imports()","7ff31236":"lazy_imports()","239fdfd5":"df.head()","859eed04":"df.info()","62186943":"df.describe(include = 'all')","c9a9cae0":"df.Country.value_counts()","4b51c77f":"#let's focus on the customers from France. \n\nfrance_customers = df[df.Country == 'France']","09ff5ae0":"france_customers.head()","692c943d":"france_customers.info()","4881a60e":"france_customers.describe(include = 'all')","00f20ae0":"negative_quantity = france_customers.query('Quantity < 0')","238c1d9d":"negative_quantity","cc7e511e":"# # %load Data Dictionary.txt\n# Attribute Information:\n\n# InvoiceNo: Invoice number. Nominal, a 6-digit integral number uniquely assigned to each transaction. If this code starts with letter 'c', it indicates a cancellation.\n# StockCode: Product (item) code. Nominal, a 5-digit integral number uniquely assigned to each distinct product.\n# Description: Product (item) name. Nominal.\n# Quantity: The quantities of each product (item) per transaction. Numeric.\n# InvoiceDate: Invice Date and time. Numeric, the day and time when each transaction was generated.\n# UnitPrice: Unit price. Numeric, Product price per unit in sterling.\n# CustomerID: Customer number. Nominal, a 5-digit integral number uniquely assigned to each customer.\n# Country: Country name. Nominal, the name of the country where each customer resides.","45af642c":"columns_to_drop = negative_quantity.index.tolist()","ffad968f":"france_customers.drop(index = columns_to_drop, inplace = True)","ea863c64":"france_customers.shape","cfd5ad83":"france_customers['Quantity'].describe()","fe31431c":"france_customers['InvoiceNo'] = france_customers['InvoiceNo'].astype(str)","71316330":"france_customers.InvoiceNo.str.contains('C').sum()","4c418045":"threshold_date = dt.datetime(2011,12,10)","94dc5245":"france_customers['Year'] = france_customers['InvoiceDate'].dt.year","f3169c88":"france_customers.head()","60ea784e":"#we only want to work with data for the one year so let us choose the year 2011. \nfrance_customers.Year.value_counts()","12a3206e":"france_customers = france_customers[france_customers.Year == 2011]","3a3e7b55":"france_customers.shape","9257b954":"france_customers.isnull().sum()","435b43c6":"france_customers[france_customers.CustomerID.isnull()]","76deaa03":"france_customers.dropna(inplace = True)","6d54c5ed":"france_customers.isnull().sum()","226aecf8":"rfm_data = france_customers.copy()","42c38ca5":"rfm_data.head()","f506e8b5":"%who","6d0a8421":"rfm_data['Days_since_purchase'] = threshold_date - rfm_data['InvoiceDate']","ad335c55":"rfm_data['Days_since_purchase'] = rfm_data['Days_since_purchase'].dt.days","6eb231a2":"rfm_data.head()","36a9fff4":"rfm_data['Total_amount_spent'] = rfm_data['Quantity'] * rfm_data['UnitPrice']","2fbff048":"rfm_data.head()","8b268cc9":"group_data = rfm_data.groupby('CustomerID')","2904ceb7":"columns = ['Recency', 'Frequency', 'Monetary']","88410c27":"rfm = pd.DataFrame(columns = columns)","24f6c05d":"rfm","f8d6bcc8":"rfm['Recency'] = group_data['Days_since_purchase'].max()","8a169f24":"rfm","16f90995":"rfm['Frequency'] = group_data['InvoiceNo'].size()","ed68380b":"rfm","d4de73d2":"rfm['Monetary'] = group_data['Total_amount_spent'].sum()","984d6dac":"rfm","31e69062":"rfm.shape","2402284c":"rfm_quantiles = rfm.quantile(q=[0.25,0.5,0.75])","60ce78b5":"rfm_quantiles = rfm_quantiles.to_dict()","bea9a0c5":"rfm_quantiles","5b2b2c6b":"plt.style.available","d4637c35":"plt.style.use('fivethirtyeight')\nplt.figure(figsize = (8,8))\nsns.distplot(rfm['Frequency'])","f07f9df6":"rfm_quantiles","27f37bc6":"rfm['Recency'] = rfm['Recency'].astype(int)","f6fbf23c":"def recency_score(value,d,l):\n#d is the dictionary\n#l is key label\n\n    if value <= d[l][0.25]:\n        return 1\n    elif value <= d[l][0.5]:\n        return 2\n    elif value <= d[l][0.75]:\n        return 3\n    else:\n        return 4\n    ","337d9478":"def frequency_score(value,d,l):\n#d is the dictionary\n#l is key label\n# be careful with assigning the scores here. Since a higher frequency means better for our business, we need to reverse the\n# scoring criteria\n\n    if value <= d[l][0.25]:\n        return 4\n    elif value <= d[l][0.5]:\n        return 3\n    elif value <= d[l][0.75]:\n        return 2\n    else:\n        return 1","db55abff":"#this is a redundant step.only for the purpose of this notebook am I repeating the formula for monetary score otherwise the same\n#formula for frequency_score can be used\n\n\ndef monetary_score(value,d,l):\n#d is the dictionary\n#l is key label\n# be careful with assigning the scores here. Since a higher frequency means better for our business, we need to reverse the\n# scoring criteria\n\n    if value <= d[l][0.25]:\n        return 4\n    elif value <= d[l][0.5]:\n        return 3\n    elif value <= d[l][0.75]:\n        return 2\n    else:\n        return 1","a8eefa73":"rfm['Recency_score'] = rfm['Recency'].apply(func = recency_score, args = (rfm_quantiles, 'Recency'))","13d9f200":"rfm.head()","c1f971df":"rfm['Frequency_score'] = rfm['Frequency'].apply(func = frequency_score, args = (rfm_quantiles, 'Frequency'))","cf1b9b68":"rfm.head()","bea1e9b1":"rfm['Monetary_score'] = rfm['Monetary'].apply(func = frequency_score, args = (rfm_quantiles, 'Monetary'))","4ca9ed93":"rfm.head()","f374a6be":"rfm['RFM_Score'] = rfm[['Recency_score','Frequency_score','Monetary_score']].sum(axis = 1)","d9c4d13a":"rfm.head()","6272545e":"plt.style.use('default')\nplt.figure(figsize = (7,7))\nrfm['RFM_Score'].plot.hist()\nplt.axvline(rfm['RFM_Score'].mean(), color = 'orange', label = 'Mean RFM Score')\nplt.legend()\nplt.show()","04ecb8c6":"rfm['Customer_Class'] = pd.cut(rfm['RFM_Score'],4, labels = ['Platinum','Gold','Silver','Bronze'])","feef98aa":"rfm.head()","d495d0a3":"rfm.Customer_Class.value_counts()","7eab8e54":"So what is the purpose of this whole excercise. What strategies can we build on using our results: \n\n- The platinum customers are you most loyal customers. In terms of product development, this group is ideal for testing out new products and using their feedback to make improvements.\n\n- Using the results we can improve customer lifetime value, cross sell items and reduce customer churn. \n\n- If you want to get really specific, one strategy that I as a digital marketer would employ is using the platinum and gold customer list plus other data such as age, location etc, to create affinity audiences in adwords. I can then use these audiences in DSA's or remarketing campaigns. ","f78575be":"So if we had a monetary value of let's say 3000, we can say that this customer's spend is more than our average customer's spend. We end up with an idea for creating quantiles and using the quantiles to classify the values into scores between 1 to 4.\n\nThis is where the science in data science can be experienced. Now again you can use your own scoring method if you want. But remember it should be valid, accurate and measurable. \n\nThe next step is to create a formula that would help us assign scores to each column for each row.","02a74ccb":"The results are not just limited to being used by one department. The science behind calculating RFM scores can change depending on the business model and needs. The key takeaway from this notebook is knowing your customers and we looked at one of the approaches to understanding your customer. ","5adcc3b7":"So we have calculated the RFM score for each customer in our dataset. The main steps that follow are how do we interpret our results and use them to build future marketing strategies. ","d1b59c47":"Continuing on the idea of using data science and digital marketing, let us look at the concept of customer segmentation. I am sure all of us have heard this term in some form or the other. CSeg(let us use this alias for now) is one of the core foundations to any marketing strategy. I would go so far as to say an accurate CSeg is one of the core foundations of a successful business. \n\nIn simple words, CSeg is about knowing who your customers are. I know its a simplistic definition but that is what it really is. Are my customers loyal to my business or churning out? Are my customers avid hikers or couch potatoes? If my customers are tech savvy, how is my business online presence? \n\nNow CSeg is a vast topic and can be talked about for hours, but you get the gist of it. In this notebook we will look at a method of segmentation that is fairly important. Segmenting using the **RFM Score**. The Recency, Frequency and Monetary score.\n\nI see you yawning and thinking man these marketers love to talk don't they. Yes, so let's take a break from text and go about reading and understanding our data. Before that let me just put the link for my other notebook on [Market Basket Analysis](https:\/\/www.kaggle.com\/hamzajabbarkhan\/simple-market-basket-analysis). If you haven't viewed it, please do. Just a bit of promotion while we are at it.\n","a32f2c34":"So from the above formula we know that if a customer has a recency score of 1, then that customer often buys from us. ","2a7750e3":"Before we can calculate and segment, there is a lot data cleaning and manipulation that needs to be performed. ","80625ee7":"### Understanding the results: ","9460680f":"The quantity columns is cleaned. Let us move on towards the next step in our action plan.","ca1be07a":"### Data Cleaning:","946b7063":"### Data Manipulation: ","759eddee":"### Data:","4517d9c0":"### RFM Scores:","1980b647":"So let us create a action plan for the data cleaning process:\n\n- 'Quantity' column needs to be cleaned since there is a negative value of -250.\n- Let us look at data from the year 2011 only.\n- The most recent data is 2011 - 12 - 09. So let us set the threshold date at 2011 - 12 - 10 . \n- There are missing values that we will need to take care of.","72bee37e":"Using quantiles we are dividing the customers that exhibit low, average and extraordinary behavior. From the graph above it is evident that customers who have a buying frequency of 400 or 500 are quite rare. Now if a customer resides in the 75% percentile or more for all the scores, then that customer is what we can call loyal or extraordinary. \n\nSimilarly if the customer resides in the lower percentiles for all the columns, then that customer is dissatisfied with our business and in the process of churning out. ","6296f01b":"We now have the RFM values for each individual customer. Trying to identify which customers are loyal and which customers are on the verge of churning out just by looking at the above values is hard. We know RFM score is actually the sum of all the three individual columns.\n\nThe approach we will take is to ensure all the values in each column are compressed between the range of 1 and 4. That way the values are standardised and no particular column influences the final results.","fe856f58":"### The RFM Score:","45dd6c2a":"### \"Talk is cheap. Show me the code\" - Linus Torvalds","62864e6c":"From the data dictionary we know that any invoices that have been cancelled start with the letter 'C'. Hence these entries need to be dropped since we cannot use their data in our analysis. ","4b071ccc":"Now that we have cleaned our data, let us start calculating the values for RFM.","f86d0f52":"So why did we perform the above few steps. Let me explain that with a graph.","63672649":"So what exactly is the RFM score. Before that let's understand the meaning of each of the individual component of the RFM score. Recency is when the customer last purchased your product. Frequency is how many transactions the customer has had with your business over a certain period of time. Monetary is the amount the customer has spend over a certain period of time. \n\nAll these score when combined in a certain way form the RFM score. Using the RFM score we can segment or classify our customers into groups. Fro example groups such as loyal, on the fence, about to churn. Once we realise the phase or status of our customers, we can then buld our future business and marketing strategies accordingly. \n\nSo the best customer would be someone who purchased quite recently, has been purchasing quite frequently for the past six months and has had a above average spend with the business.\n","7a707e0d":"We have a somewhat uniform distribution of RFM scores. Now an ideal scenario for a business would be to have a right tailed distribution. Meaning a lot of customers with an RFM score of 6 and below and fewer customers with an RFM score of 8 and above. \n\nIt can be hard to keep track of whether a lower or higher RFM score is better, especially for non technical audiences. So let us rather classify the customers using labels such as 'Platinum', 'Gold', 'Silver', 'Bronze'. "}}