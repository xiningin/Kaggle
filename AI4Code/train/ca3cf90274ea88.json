{"cell_type":{"c6433dc2":"code","6eb9d8dd":"code","15dfdc71":"code","a69cd5e7":"code","ebb3a66f":"code","fd378445":"code","e2d5a6a1":"code","10b9e27c":"code","8e55fdec":"code","61cce17d":"code","3dac3ec2":"code","d39614bb":"code","d6d8e959":"code","59669c31":"code","a807413b":"code","e17b8a51":"code","58f5f44e":"code","b2cfdd52":"code","3ad9f55d":"markdown","31d8f2d6":"markdown","6d1b804a":"markdown"},"source":{"c6433dc2":"#Your Code Goes Here\n\nmetal_dict = {'name': \"Mustaine\", 'band': \"Megadeth\", 'album': \"Rust In Piece\", 'year': 1990}\n\nprint(metal_dict)\n","6eb9d8dd":"#Print Full Dictionary\n\nprint(metal_dict)\n","15dfdc71":"#Printing Value of key\n\nprint(metal_dict['year'])","a69cd5e7":"#Print Value of Key\n\nprint(metal_dict['band'])\n\nprint(metal_dict['band'], metal_dict['year'] )","ebb3a66f":"#Adding an element\n\nmetal_dict['instrument'] = \"guitar\"\nmetal_dict['band'] = 'guitar'\n\nprint(metal_dict)","fd378445":"#Removing an element\n\n#metal_dict.pop('album')\n\nprint(metal_dict)\n","e2d5a6a1":"#Storing Lists as the value of a key\n\nmetal_dict2 = {\n    'name': [\"Mustaine\", \"Friedman\", \"Burton\"],\n    'band': [\"Megadeth\", \"Megadeth\", \"Metallica\"],\n    'instrument': [\"Guitar\", \"Guitar\", \"Bass\"],\n    'year':1990\n}\n\nprint(metal_dict2)\n","10b9e27c":"#Accesing elements Similar to nested lists \n\nprint(metal_dict2['name'])\n\nprint(metal_dict2['name'][0])\n\nprint(metal_dict2['instrument'][1])\n","8e55fdec":"metal_dict2['genre']= {'pop': 100, 'rock': 1000}\n\nprint(metal_dict2)\nprint(metal_dict2['genre']['pop'])\n\n#metal_dict2['metal_dict'] = metal_dict2\n\n#print(metal_dict2)\n\n#metal_dict2.pop('metal_dict')\n#metal_dict2.pop('genre')\n\n#metal_dict2.pop('genre')\n\n#metal_dict2\n","61cce17d":"#Copying a dictionary\n'''\nYou cannot copy a dictionary simply by typing dict2 = dict1, \nbecause: dict2 will only be a reference to dict1, \nand changes made in dict1 will automatically also be made in dict2.\nThere are ways to make a copy, one way is to use the built-in Dictionary method \ncopy()\n'''\n\nmetal_dict3 = metal_dict2.copy()\n","3dac3ec2":"#Looping through a dictionary\n\nfor key,value in metal_dict.items():\n    print(key,value)","d39614bb":"#Looping through a dictionary that's value is a list\n\nfor key,value in metal_dict2.items(): \n    print(\"{}: {}\".format(key,value))\n\n","d6d8e959":"###Creating a disctionary with lists\nmusic = {'name': ['Frankenstein', 'Waste', 'Make Light'],\n         'band':['TPC', 'FTP', 'PP'],\n         'album': ['Champ', 'Torches', 'Manners']\n         }\n###Looping though the dictionary with lists\n\nfor key,value in music.items():\n    print(key,value)\n#By key\n\n\n#By element in list\n\nfor key,value in music.items():\n    print(key)\n    for element in value:\n        print(element)\n","59669c31":"#Check if a key exists in a dictionary\n\nkey = 'name'\n\nif key in music:\n    print(\"Key Exists! Value:\", music[key])\n    \nkey2 = 'apple'\n\nif key2 in music:\n    print(\"In dictionary!\")\nelse: \n    print(\"Not in dictionary!\")\n    \n\n","a807413b":"#Your Code Goes Here\n\nbands = ('Megadeth', 'Metallica', 'Slayer')\nprint(bands)\n","e17b8a51":"#Print one element\n\nprint(bands[0])\n#Can't change an assignment\n\n","58f5f44e":"#Unpack them\n\ntup = (4,5,6)\n\na,b,c = tup\n\nprint(a)","b2cfdd52":"countries = {'US': [100,40], 'Canada': [54,77], 'Mexico': [247,6,8]}\n\n###Your Code Here\n\n","3ad9f55d":"# Putting It All Together\n\nWrite a Python program to sum all the values in the given dictionary! Hint you will need to use += , and a nested loop and make sure you set up the for loop correclty (look at previous examples to understand the difference between a dictionary loop and normal loops)\n","31d8f2d6":"# Dictionaries\n\nA dictionary is a collection which is unordered, changeable and indexed. In Python dictionaries are written with curly brackets, and they have keys and values. While the values of a dict can be any Python object, \nthe keys generally have to be immutable objects like scalar types (int, float, string) or tuples (all the objects in the tuple need to be immutable, too).\n\nLet's try and example!","6d1b804a":"# Tuples\n\nA tuple is a collection which is ordered and unchangeable. In Python tuples are written with round brackets.\n"}}