{"cell_type":{"dee81453":"code","543e3c96":"code","31520ab1":"code","730e8e31":"code","cee8556a":"code","51df1fc9":"code","bd21f789":"code","b4098eb2":"code","32a384e5":"code","5b2ef68e":"code","b72889ef":"code","3203aa99":"code","c864d71d":"code","c4d584cd":"code","8032eaa0":"code","130c1252":"code","d7bc412d":"code","85145ad9":"code","7c2fdc0c":"code","3fbcb569":"code","7a475804":"code","3a8203de":"code","e66056a8":"code","3ad043e4":"code","90390436":"code","9cbb9a27":"code","96cfa291":"code","08137d11":"code","a219b263":"code","69871892":"code","77eb68b6":"code","831355b6":"code","af121491":"code","5ab116ba":"code","93a93d4a":"code","0feb0437":"code","2b045d53":"code","f152158e":"code","bacf829d":"code","e0db700b":"code","5e513d5e":"code","6e95fa9f":"code","ecc805e3":"code","1d31ac7c":"code","9cbb482c":"code","4f9720c6":"code","d43ad811":"code","1acbf8ec":"code","7d5719e8":"code","ada08ada":"code","03bc3eec":"code","0677516e":"code","e21bdd1c":"markdown","598e67a6":"markdown","14796535":"markdown","f2cf2f4f":"markdown","26765553":"markdown","c78a2afb":"markdown","5247ebd0":"markdown","c17f723c":"markdown","3fc07e76":"markdown","45490e88":"markdown","77614de4":"markdown","41676206":"markdown","dc7eeb35":"markdown","afed0b73":"markdown","28902e46":"markdown","29571bbe":"markdown","6cd0bdb8":"markdown","6e283b01":"markdown","23a7dba2":"markdown","9b370cd3":"markdown","f67dfc92":"markdown","333aa20e":"markdown","c08330a8":"markdown","8ae3e5cd":"markdown","e96e0fdf":"markdown","0c06d213":"markdown","3ca397e3":"markdown","c8edb779":"markdown","b0268e7f":"markdown","f6bd4212":"markdown","7440a9e8":"markdown","17162c22":"markdown","3454f262":"markdown","0990f945":"markdown","97fa395d":"markdown","7d8bcec6":"markdown","d077d9f6":"markdown","50a001b0":"markdown","8467f89c":"markdown","523aebad":"markdown","00d6a6aa":"markdown","6f5e04c3":"markdown","ee05b31b":"markdown","62a6b1f5":"markdown","bd6fd10a":"markdown","366fd82f":"markdown","7e145cfb":"markdown","d1ee227c":"markdown","62ffef02":"markdown","9d8b1589":"markdown","bd01af73":"markdown","174efc9e":"markdown","5a99abf0":"markdown"},"source":{"dee81453":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\n","543e3c96":"sample = pd.read_csv(\"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/sample_submission.csv\")\nsample","31520ab1":"train = pd.read_csv(\"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train_labels.csv\")\ntrain","730e8e31":"import pydicom\nimport matplotlib.pyplot as plt\n\ndataset = pydicom.filereader.dcmread('..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train\/00000\/FLAIR\/Image-109.dcm')\nimg = dataset.pixel_array\n\nfig, ax = plt.subplots()\nax.imshow(img, cmap='gray')\nax.set_axis_off()\nplt.show()","cee8556a":"def makeimg(path):\n    dataset = pydicom.filereader.dcmread(path)\n    img = dataset.pixel_array\n    return img","51df1fc9":"train[\"imfolder\"] = ['{0:05d}'.format(s) for s in train[\"BraTS21ID\"]]\ntrain","bd21f789":"train_path = \"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train\"\n\ntrain[\"path\"] = [os.path.join(train_path,s) for s in train[\"imfolder\"]  ]\ntrain","b4098eb2":"Scans = [\"FLAIR\",\"T1w\",\"T1wCE\",\"T2w\"]","32a384e5":"from tqdm import tqdm","5b2ef68e":"train.head(3)","b72889ef":"os.path.join(train[\"path\"].iloc[0],\"FLAIR\")","3203aa99":"os.listdir(os.path.join(train[\"path\"].iloc[0],\"FLAIR\"))[:3]","c864d71d":"len(os.listdir(os.path.join(train[\"path\"].iloc[0],\"FLAIR\")))","c4d584cd":"for scan in Scans:\n    train[scan +\"_count\"] = [ len(os.listdir(os.path.join(train[\"path\"].iloc[s],scan))) for s in tqdm(range(len(train))) ]","8032eaa0":"train","130c1252":"allsame = [train[\"FLAIR_count\"].iloc[s] ==   train[\"T1w_count\"].iloc[s] ==train[\"T1wCE_count\"].iloc[s] ==train[\"T2w_count\"].iloc[s] \n          for s in range(len(train))]","d7bc412d":"train[\"allsame\"] = allsame\ntrain","85145ad9":"train[\"allsame\"].sum()","7c2fdc0c":"train[\"allsame\"].sum()\/len(train) * 100","3fbcb569":"train[train[\"allsame\"]]","7a475804":"row_ID = 64","3a8203de":"train[\"BraTS21ID\"].iloc[row_ID]","e66056a8":"temp_folder = train[\"path\"].iloc[row_ID]\ntemp_folder","3ad043e4":"temp_folder2 = os.path.join(temp_folder,\"FLAIR\")\ntemp_files = os.listdir(temp_folder2)\ntemp_files[:3]","90390436":"imagenum = [s.split(\"-\")[1] for s in temp_files]\nimagenum = [s.split(\".\")[0] for s in imagenum]\nimagenum[:3]","9cbb9a27":"temp_path = [os.path.join(temp_folder2,s) for s in temp_files]\ntemp_path[:3]","96cfa291":"tempdf = pd.DataFrame()\ntempdf[\"image_num\"] = imagenum\ntempdf[\"image_num\"] = tempdf[\"image_num\"].astype(\"int\")\n\ntempdf[\"temp_path\"] = temp_path","08137d11":"tempdf.head(3)","a219b263":"tempdf = tempdf.sort_values(\"image_num\").reset_index(drop=True)\ntempdf.head(3)","69871892":"finpath = tempdf[\"temp_path\"]","77eb68b6":"def makepath(row_ID,scan):\n    \n    temp_folder = train[\"path\"].iloc[row_ID]\n    temp_folder2 = os.path.join(temp_folder,scan)\n    temp_files = os.listdir(temp_folder2)\n    imagenum = [s.split(\"-\")[1] for s in temp_files]\n    imagenum = [s.split(\".\")[0] for s in imagenum]\n    temp_path = [os.path.join(temp_folder2,s) for s in temp_files]\n    tempdf = pd.DataFrame()\n    tempdf[\"image_num\"] = imagenum\n    tempdf[\"image_num\"] = tempdf[\"image_num\"].astype(\"int\")\n    tempdf[\"temp_path\"] = temp_path\n    tempdf = tempdf.sort_values(\"image_num\").reset_index(drop=True)\n    finpath = tempdf[\"temp_path\"]\n    return finpath","831355b6":"Scans","af121491":"row_id=64\n\nsampledf = pd.DataFrame()\nfor scan in Scans:\n    sampledf[scan + \"_path\"] = makepath(row_id,scan)","5ab116ba":"sampledf.head(3)","93a93d4a":"print(\"MGMT_value = \" + str(train[\"MGMT_value\"].iloc[row_id]))\n\n\nfor row in range(len(sampledf)):\n    plt.figure(figsize=(80,10))\n    for num,scan in enumerate(Scans):\n        img = makeimg(sampledf[scan + \"_path\"].iloc[row])\n        plt.subplot(4,25,num+1)\n        #plt.axis(\"off\")\n        plt.imshow(img)\n        \n        if row==0:\n            plt.title(scan,fontsize=18)\n        if num==0:\n            plt.ylabel(\"row=\" + str(row),fontsize=18)\n\n        ","0feb0437":"row_id = 65\n\nsampledf = pd.DataFrame()\nfor scan in Scans:\n    sampledf[scan + \"_path\"] = makepath(row_id,scan)\n\nprint(\"MGMT_value = \" + str(train[\"MGMT_value\"].iloc[row_id]))\n\nfor row in range(len(sampledf)):\n    plt.figure(figsize=(80,10))\n    for num,scan in enumerate(Scans):\n        img = makeimg(sampledf[scan + \"_path\"].iloc[row])\n        plt.subplot(4,25,num+1)\n        #plt.axis(\"off\")\n        plt.imshow(img)\n        \n        if row==0:\n            plt.title(scan,fontsize=18)\n        if num==0:\n            plt.ylabel(\"row=\" + str(row),fontsize=18)\n\n        ","2b045d53":"train","f152158e":"row_id = 0\n\nsampledf = pd.DataFrame()\nfor scan in Scans:\n    sampledf[scan + \"_path\"] = makepath(row_id,scan)","bacf829d":"sampledf","e0db700b":"sampledf[\"T1w_path\"].iloc[32]","5e513d5e":"print(\"MGMT_value = \" + str(train[\"MGMT_value\"].iloc[row_id]))\n\nfor row in range(33):\n    plt.figure(figsize=(80,5))\n    for num,scan in enumerate(Scans):\n        img = makeimg(sampledf[scan + \"_path\"].iloc[row])\n        plt.subplot(4,33,num+1)\n        #plt.axis(\"off\")\n        plt.imshow(img)\n        \n        if row==0:\n            plt.title(scan,fontsize=18)\n        if num==0:\n            plt.ylabel(\"row=\" + str(row),fontsize=18)\n\n        ","6e95fa9f":"sample[\"imfolder\"] = ['{0:05d}'.format(s) for s in sample[\"BraTS21ID\"]]\n\ntest_path = \"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/test\"\n\nsample[\"path\"] = [os.path.join(test_path,s) for s in sample[\"imfolder\"]  ]\n\n\nallres = []\n\nfor scan in Scans:\n    sample[scan +\"_count\"] = [ len(os.listdir(os.path.join(sample[\"path\"].iloc[s],scan))) for s in tqdm(range(len(sample))) ]","ecc805e3":"sample","1d31ac7c":"allsame = [sample[\"FLAIR_count\"].iloc[s] ==   sample[\"T1w_count\"].iloc[s] ==sample[\"T1wCE_count\"].iloc[s] ==sample[\"T2w_count\"].iloc[s] \n          for s in range(len(sample))]\n\nsample[\"allsame\"] = allsame\n\nsample","9cbb482c":"sample[\"allsame\"].sum()","4f9720c6":"sample[\"allsame\"].sum()\/len(sample) * 100","d43ad811":"train.groupby(\"allsame\")[\"MGMT_value\"].mean().reset_index()","1acbf8ec":"sample[\"MGMT_value\"] = np.where(sample[\"allsame\"],0.460317,0.532567)","7d5719e8":"sample","ada08ada":"sample= sample[[\"BraTS21ID\",\"MGMT_value\"]]","03bc3eec":"sample.to_csv(\"submission.csv\",index=False)","0677516e":"sample","e21bdd1c":"## **The one with MGMT_value = 0**\n## Visualize the person who does not have gene methylation = those who do not have favorable prognostic and strong predictors of responsiveness to chemotherapy","598e67a6":"Create a list of row Ids (you can make it a dataframe because you know the same number, you can't do anything else)","14796535":"## 2.3.1 Create dcm folder path","f2cf2f4f":"# 2. What to predict from ? Let's look from train.csv","26765553":"# 1. What to predict ?? (Let's see from submission.csv)","c78a2afb":"It's a quick glance, but the first and last ones are pitch black, so if you want to pick up a few, you might want to go to the middle.","5247ebd0":"## 2.3 Let's look at typical examples of images of FLAIR, T1w, T1wCE, and T2w.","c17f723c":"# Thank you for watching until the end.\n\n\u203bThank you to those who have uploaded to my notebook before.\n\n# If you find it useful, I would be grateful if you could **upvote**!\n\n\u203b At first, I misinterpreted this competition whether the people having or not having a brain tumor. \n\nI was pointed out in the English version. Thank you very much. \n\nAnd I'm sorry for those who were looking at the first version.\n","3fc07e76":"I will list the paths. First with FLAIR.","45490e88":"I made it a function only where it is made into img. (I will use it later)","77614de4":"2. The file name in this can be obtained by attaching os.listdir to \u2191. (Since the display is long, I intentionally set it to three)","41676206":"I confirmed that the bottom is Nan. The numbers are sorted in ascending order, and the 32nd line is 33th, so the file names are serial numbers.","dc7eeb35":"![image.png](attachment:f62278ec-cdeb-40d3-bf9c-3031fd13c359.png)\n\n\nFLAIR, T1w, T1wCE, T2w are linked to each ID.","afed0b73":"3. The number of files is OK if you add len to this.","28902e46":"Use image_num to sort them neatly. It is important to make it an int type with \u2191 and make it a number. As shown in the picture below, if you line up like the usual 1.dcm \u2192 10.dcm, the time series will collapse.\n\n![image.png](attachment:1fdae302-8cb5-4ac9-8f3d-4305cfcdf9ff.png)","29571bbe":"Almost the same information as submission.csv. \n\nBraTS21ID contains the patient's Id and MGMT_value contains information on whether the MGMT promoter has methylation.\n\n\nThis train data has FLAIR, T1w, T1wCE, and T2w, respectively, as shown below, and the dcm file is hung in them.","6cd0bdb8":"## 2.5 When the number of files in each scan is not complete (this is about 90%)","6e283b01":"It was confirmed that 585 patient ids had the same number of 63 patient ids (about 10%).\n\n","23a7dba2":"## 2.4 Deepen your understanding by looking at the images of people who have the same number of images\n\nFor an easy-to-understand image, let's try a person who has all the images.\n\n\nMoreover, let's look at the images of MGMT_value is 1 or 0 in each.","9b370cd3":"Let's take a look at 33 images with pacient ID = 0 (because the number of T1w is 33, which is the smallest in the four Scans.)","f67dfc92":"After issuing the path, use this function to see typical examples of FLAIR, T1w, T1wCE, and T2w images.\n\n\nBefore that, I made sure whether the same number of dcm files in each folder or not.","333aa20e":"# 3. Check how much the number of test data is the same.","c08330a8":"First, let's think about putting out the path of the dcm image.","8ae3e5cd":"# **RSNA-MICCAI Brain Tumor Radiogenomic Classification**&#x1f600;\nPredict the status of a genetic biomarker important for brain cancer treatment\n\n\u203b Japanese version is here.\n\nhttps:\/\/www.kaggle.com\/chumajin\/brain-tumor-eda-for-starter-version\n\n## I think this competition is a competition that predicts the methylation of the MGMT promoter, which is an important gene biomarker for the treatment of brain tumors, from MRI images.\n\nI think this sentence is difficult to understand for like me who is not specialist.\n\nIt seems that it has been reported that the response and prognosis to chemotherapy differ depending on the methylation status of the promoter region of the gene called MGMT.\n\nRecently, by referring to this methylation test, it is possible to properly select radiation therapy or chemotherapy as postoperative treatment, which prolongs the survival period while maintaining the patient's condition well. It seems that it has been found to be useful for.\n\n\u203b ref(Japanese) : https:\/\/www.h.u-tokyo.ac.jp\/neurosurg\/rinsho\/noushu.htm \n\nAt first I thought it was a competition to guess whether it was a brain tumor.\nBut this is misunderstanding (commented in English, thank you so much.).\n\n\nAll the subjects in this dataset seem to have a brain tumor. \nClass 0 refers to people who do not have the methylation of the MGMT promoter. Class 1 seems to be someone who has the methylation of the MGMT promoter. It is a competition that gives the probability of it.\n\n## If you find it useful, I would be grateful if you could upvote it.\n\u3000\n \n \u203b\u3000Thank you to those who have uploaded to my notebook before.\n  \n  \n  \u203b Before ver3, I made a mistake. Thank you for pointing out (@mpwolke, @giemmecci).","e96e0fdf":"![image.png](attachment:43a5e528-5750-4b79-876b-0eed0745bf27.png)\n\n\nEach has a lot of dcm files.","0c06d213":"Sort by dataframe.","3ca397e3":"The code is the same as the basic train, so I will put it together.","c8edb779":"## 2.3.2 Check the number of dcm files","b0268e7f":"To see what a dcm file looks like, firstly I opened one dcm file.","f6bd4212":"You can see that some IDs are the same and some are different.","7440a9e8":"True is treated as 1, so you can see how many True there are by adding them.","17162c22":"Make these functions (the function looks long, but I just copied the code of the person on line 64 of \u2191 to this point and made FLAIR the expression scan).Turn the list of Scans with a for statement, and with this, you can put out other than FLAIR at once","3454f262":"Check if they are all the same","0990f945":"FLAIR etc. take the same position, but you can see that they look different.\n\n![image.png](attachment:a1b7915a-e4e5-49b4-a4dd-8ef16de718bb.png)\n\nThe upper right corner of this is characteristic, so I guess it is methylated.","97fa395d":"The person with ID 100 on line 64 : MGMT_values 1(the person with the methylation of the MGMT promoter) and\n\n\nLet's take a look at all the images of the person with ID 102 : MGMT_values 0 (the person who does not have) on the 65th line.\n\n\n**First, do the person on line 64, then make it a function to see the person on line 65.**","7d8bcec6":"Stored in finpath.","d077d9f6":"* BraTS21ID is the patient's Id,\n\n* Class 0 refers to people who do not have the methylation of the MGMT promoter. \n\n* Class 1 seems to be someone who has the methylation of the MGMT promoter. ","50a001b0":"In the first place, check whether the number of dcm of these Scans is the same for each patient.","8467f89c":"## 2.1 Train.csv file structure","523aebad":"\n1. First of all, the FLAIR path on the 0th line of train can be expressed as follows.","00d6a6aa":"## 2.2 Let's take a look at one dcm file.","6f5e04c3":"There seems to be a slight difference, so I will put it out with this.","ee05b31b":"4. The \"FLAIR\" part of the \u2191 code is Scans [0], so replace it and turn it with a for statement. \n\nAlso, if you shake the 0th line using list comprehension, you can store all in DataFrame with the following sentence.","62a6b1f5":"# 4. Submit\n\n\nI want to change something as a test. For example, let's look at the tendency when the number of images is the same.","bd6fd10a":"If you list it as Scans, it will be easier to turn it with a for statement.","366fd82f":"Save the numbers in the file names here so that you can sort them properly later.","7e145cfb":"### There is no test.csv, so let's take a look at train.csv.","d1ee227c":"Give a dcm pass","62ffef02":"T1W has only 33 images, but the timing is obviously off, so there seems to be a time difference between the file names.\nIt may be possible to get some other information from the dcm file (not yet investigated. I'm sorry).","9d8b1589":"## **The one with MGMT_value = 1**\n## Visualize the person with gene methylation = people with favorable prognostic factors and strong predictors of responsiveness to chemotherapy","bd01af73":"About 12% of the test data are available.","174efc9e":"This area \u2193 is suspicious, but since this person is 0, methylation can not be found. There are few suspicious places as a whole. I guess we will also look at the test data from this information.\n\n![image.png](attachment:d030383d-4fe2-43fd-81d2-80ae6e083bf2.png)","5a99abf0":"When the number of data is not the same for 4 types, are the numbers the same in chronological order, or are they just serial numbers?\nLet's look at the person with id = 0"}}