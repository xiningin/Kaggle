{"cell_type":{"f521f505":"code","3b217b4b":"code","6f66a8d0":"code","b42a3bd2":"code","73765d92":"code","226f40ef":"code","edc600c7":"code","700561e4":"code","fc37ee4e":"code","06141c2a":"code","de84b6d1":"code","218a36b0":"code","227c7b99":"code","65172eae":"code","8e8ad68f":"code","44aa89be":"code","d268601c":"code","e5a234d9":"markdown","cfdfd3de":"markdown","af42f247":"markdown","6cfa983f":"markdown","c8572006":"markdown","223c4df7":"markdown","e7c96dd1":"markdown","221c81ce":"markdown","a9b5b7e2":"markdown","830212d4":"markdown","e72aa02e":"markdown","a89f1b4b":"markdown","6c8c15f7":"markdown","865091d3":"markdown"},"source":{"f521f505":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3b217b4b":"data = pd.read_csv(\"\/kaggle\/input\/netflix-shows\/netflix_titles.csv\")","6f66a8d0":"data .head()","b42a3bd2":"data .tail()","73765d92":"data .columns","226f40ef":"data .info()","edc600c7":"data.describe()","700561e4":"import matplotlib.pyplot as plt\nprint(data['type'].value_counts(dropna =False))","fc37ee4e":"data.count ()\n","06141c2a":"data.isnull (). sum ()","de84b6d1":"monitoring_studies = [4265,1969]\nheadlines = ['Movie','TV Show']\ncolors = ['g','y']\n\nplt.pie(monitoring_studies,\nlabels=headlines,\ncolors=colors,\n  startangle=90,\n  shadow= True,\n  explode=(0,0),\n  autopct='%1.1f%%')\n \nplt.title('percentiles')\nplt.show()","218a36b0":"print(data['director'].value_counts(dropna =False) )","227c7b99":"data['country'].value_counts(dropna =True)","65172eae":"objects = (\"United States\",\"India\",\"United Kingdom\",\"Japan\",\"Canada\")\ny_pos = np.arange(len(objects))\nperformance =[2032,777,348,176,141]\n\nplt.bar(y_pos, performance, align='center', alpha=0.5)\nplt.xticks(y_pos, objects)\nplt.xlabel('country')\nplt.ylabel('number of movies and tv show')\nplt.title('countries with the most movies and tv show')\n\nplt.show()","8e8ad68f":"data_new = data.head() \n#Although this method of use is not preferred ...\n\nmelted = pd.melt(frame=data_new,id_vars = 'title', value_vars= ['type'])\n\nmelted","44aa89be":"melted = pd.melt(frame=data_new,id_vars = 'title', value_vars= ['director','cast'])\n\nmelted.pivot(index = 'title', columns = 'variable',values='value')\n","d268601c":"data1 = data.head()\ndata2= data.tail()\nconc_data_row = pd.concat([data1,data2],axis =0,ignore_index =True)\nconc_data_row","e5a234d9":"the last 5 data of our table .","cfdfd3de":"Let's look at the countries now.\n\nNOTE = Let's do this time (dropna = True) in order not to see the parts whose country is not written.","af42f247":"first 5 and last 5 columns.","6cfa983f":"movies and tv show numbers","c8572006":"data types of the headings of our table .","223c4df7":"Let's look at the names that are most and least directed.","e7c96dd1":"\nmovie actors director ranking","221c81ce":"blank data count.","a9b5b7e2":"Now let's graph our data.","830212d4":"Let's examine a few details about the table now .","e72aa02e":"numerical data","a89f1b4b":"\nIf you want, we can sort it as (movie name-data type-movie type)","6c8c15f7":"Top 5 data of our table .","865091d3":"the number of filled data in the table."}}