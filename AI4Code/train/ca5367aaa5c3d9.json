{"cell_type":{"0a1a8b21":"code","ef4f1c75":"code","dc3a7a46":"code","7d601624":"code","ad3afa05":"code","4b83deb5":"code","4e992485":"code","09441b66":"code","b01f4175":"code","539bcbac":"code","36002ff8":"markdown","40a477ca":"markdown","595d3f8c":"markdown","3652a1f1":"markdown","1dee848f":"markdown"},"source":{"0a1a8b21":"import warnings\nwarnings.filterwarnings(\"ignore\")","ef4f1c75":"from matplotlib.pyplot import imread,imshow\nimport matplotlib.pyplot as plt\nfrom skimage.transform import resize\nfrom sklearn.utils import shuffle\nfrom tensorflow.keras.layers import *\nfrom tensorflow.keras.models import *\nfrom tensorflow.keras.optimizers import *\nfrom sklearn.model_selection import train_test_split\nimport numpy as np\nimport glob\nfrom tensorflow.keras.callbacks import EarlyStopping\nfrom tensorflow.keras.applications import MobileNet\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport seaborn as sns","dc3a7a46":"train_list = \"..\/input\/cat-and-dog\/training_set\/training_set\"\ntest_list = \"..\/input\/cat-and-dog\/training_set\/test_set\"","7d601624":"train_data=ImageDataGenerator(rescale=(1\/255.0),\n                              zoom_range=0.2,\n                              rotation_range=0.2,\n                              horizontal_flip=True,\n                              shear_range=0.1)\n\ntest_data=ImageDataGenerator(rescale=(1\/255.0))","ad3afa05":"training=train_data.flow_from_directory(directory='..\/input\/cat-and-dog\/training_set\/training_set', target_size=(224,224), \n                                           classes=['cats', 'dogs'], batch_size=10, shuffle=False,class_mode=\"binary\")\ntesting=test_data.flow_from_directory(directory= '..\/input\/cat-and-dog\/test_set\/test_set', target_size=(224,224), classes=['cats', 'dogs'], \n                                       batch_size=10, shuffle=False,class_mode=\"binary\")","4b83deb5":"base_model = MobileNet(input_shape=(224,224,3),include_top=False,weights='imagenet',pooling='avg')\nbase_model.trainable = False\nprediction_layer = Dense(1,activation=\"sigmoid\")","4e992485":"model = Sequential([\n  base_model,\n  prediction_layer\n])\nmodel.summary()\nmodel.compile(optimizer=\"adam\",\n              loss=\"binary_crossentropy\",\n              metrics=['accuracy'])\n\nes = EarlyStopping(monitor='val_accuracy', mode='max',patience=2,restore_best_weights=True)","09441b66":"history = model.fit(training,validation_data=testing,epochs=3,steps_per_epoch=len(training),validation_steps=len(testing),callbacks=[es])","b01f4175":"plt.figure(figsize=(15,6))\nax = plt.subplot(1, 2, 1)\nax.set_xlabel(\"Epoch N.\")\nax.set_ylabel(\"Training loss\")\n\nsns.lineplot(x=[1,2,3],y=history.history['loss'],axes = ax)\nax = plt.subplot(1, 2, 2)\nax.set_xlabel(\"Epoch N.\")\nax.set_ylabel(\"Test loss\")\n\nplot = sns.lineplot(x=[1,2,3],y=history.history['val_loss'],axes = ax)","539bcbac":"plt.figure(figsize=(15,6))\nax = plt.subplot(1, 2, 1)\nax.set_xlabel(\"Epoch N.\")\nax.set_ylabel(\"Training accuracy\")\n\nsns.lineplot(x=[1,2,3],y=history.history['accuracy'],axes = ax)\nax = plt.subplot(1, 2, 2)\nax.set_xlabel(\"Epoch N.\")\nax.set_ylabel(\"Test accuracy\")\n\nplot = sns.lineplot(x=[1,2,3],y=history.history['val_accuracy'],axes = ax)","36002ff8":"# Loading and processing images","40a477ca":"# Model performance","595d3f8c":"# Transfer Learning","3652a1f1":"## Loss","1dee848f":"## Accuracy"}}