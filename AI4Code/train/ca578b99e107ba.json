{"cell_type":{"9c3841ca":"code","b3239981":"code","a9c0ced0":"code","8728ead7":"code","2f63a30b":"code","dc3b1c9e":"code","1833b9c4":"code","c4851f96":"code","328af107":"code","4cf61716":"markdown","b7998791":"markdown","f3b06e33":"markdown","4fa4c7fa":"markdown","da70c8d6":"markdown","203c8945":"markdown"},"source":{"9c3841ca":"import numpy as np\nimport math\nimport pandas as pd\nimport warnings\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import mean_squared_log_error\nfrom sklearn.preprocessing import StandardScaler,MinMaxScaler\nfrom sklearn.model_selection import StratifiedKFold,train_test_split\nfrom catboost import CatBoostRegressor\n\nwarnings.filterwarnings(\"ignore\")\nsns.set_style(\"darkgrid\")","b3239981":"train = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-jul-2021\/train.csv\")\ntest  = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-jul-2021\/test.csv\")\ntrain_x = train.iloc[:,:-3]\ntrain_y = train.iloc[:,-3:]\ndate_time = pd.to_datetime(train_x[\"date_time\"])\ntrain_x[\"month\"] = date_time.dt.month\ntrain_x[\"hour\"] = date_time.dt.hour\ntrain_x[\"day_of_week\"] = date_time.dt.dayofweek\ntrain_analyze = pd.concat((train_x,train_y),axis=1)","a9c0ced0":"test_date_time = pd.to_datetime(test[\"date_time\"])\ntest[\"day_of_week\"] = test_date_time.dt.dayofweek\ntest[\"month\"] = test_date_time.dt.month\ntest[\"hour\"] = test_date_time.dt.hour","8728ead7":"targets = train_y.columns\nfig,ax = plt.subplots(3,3,figsize=(17,10))\nfor w in range(3):\n    sns.barplot(train_analyze[\"hour\"],train_analyze[targets[w]],ax=ax[0,w])\n    sns.barplot(train_analyze[\"day_of_week\"],train_analyze[targets[w]],ax=ax[1,w])\n    sns.barplot(train_analyze[\"month\"],train_analyze[targets[w]],ax=ax[2,w])","2f63a30b":"plt.figure(figsize=(18,10))\nsns.heatmap(train_analyze.corr(),annot=True)","dc3b1c9e":"fig,ax = plt.subplots(3,5,figsize=(18,12))\n\nfor j in range(5):\n    sns.scatterplot(y=train_analyze[\"sensor_\"+str(j+1)],x=train_analyze[\"target_carbon_monoxide\"],ax=ax[0,j]\n                   ,alpha=0.5,ec=\"red\",s=6)\n    sns.scatterplot(y=train_analyze[\"sensor_\"+str(j+1)],x=train_analyze[\"target_benzene\"],ax=ax[1,j]\n                   ,alpha=0.5,ec=\"green\",s=6)\n    sns.scatterplot(y=train_analyze[\"sensor_\"+str(j+1)],x=train_analyze[\"target_nitrogen_oxides\"],ax=ax[2,j]\n                   ,alpha=0.5,ec=\"yellow\",s=6)","1833b9c4":"features = train_analyze.columns[1:11].tolist()#+[\"day_of_week\"]\nx = train_analyze[features]\ny = np.log1p(train_analyze[train_y.columns])\nxtrain,xtest,ytrain,ytest = train_test_split(x,y,test_size=0.45)\nytr_cm = ytrain.iloc[:,0]\nytr_be = ytrain.iloc[:,1]\nytr_no = ytrain.iloc[:,2]\n\nyte_cm = ytest.iloc[:,0]\nyte_be = ytest.iloc[:,1]\nyte_no = ytest.iloc[:,2]","c4851f96":"print(\"Features used for model : \",features)\ntest_set = test[features]\nearly_stop = 3\nverbose = 0\nprint(\"--\"*25)\nprint(\"Fitting with CO\")\ncatregcm = CatBoostRegressor(iterations=1200,depth=6,early_stopping_rounds=early_stop,verbose=verbose,use_best_model=True)\ncatregcm.fit(xtrain,ytr_cm,eval_set=(xtest,yte_cm))\n\nrmsle = np.sqrt(mean_squared_log_error(yte_cm,catregcm.predict(xtest)))\nprint(f\"RMSLE score carbon monoxide: {rmsle*2}\")\n\n\npredict_catcm = np.expm1(catregcm.predict(test_set))\nprint(\"--\"*25)\nprint(\"Fitting with Benzene\")\ncatregbe = CatBoostRegressor(iterations=1200,depth=6,early_stopping_rounds=early_stop,verbose=verbose,use_best_model=True)\ncatregbe.fit(xtrain,ytr_be,eval_set=(xtest,yte_be))\n\nrmsle = np.sqrt(mean_squared_log_error(yte_be,catregbe.predict(xtest)))\nprint(f\"RMSLE score benzene: {rmsle*2}\")\npredict_catbe = np.expm1(catregbe.predict(test_set))\n\nprint(\"--\"*25)\nprint(\"Fitting with NO\")\ncatregno = CatBoostRegressor(iterations=1430,depth=6,early_stopping_rounds=early_stop,verbose=verbose,use_best_model=True)\ncatregno.fit(xtrain,ytr_no,eval_set=(xtest,yte_no))\n\nrmsle = np.sqrt(mean_squared_log_error(yte_no,catregno.predict(xtest)))\nprint(f\"RMSLE score Nitrogen_oxide: {rmsle*2}\")\npredict_catno = np.expm1(catregno.predict(test_set))\nprint(\"--\"*25)","328af107":"frame = pd.DataFrame({\"date_time\":test[\"date_time\"].tolist(),\n                     \"target_carbon_monoxide\":predict_catcm,\n                     \"target_benzene\":predict_catbe,\n                     \"target_nitrogen_oxides\":predict_catno})\n\n\nframe.to_csv(\"sample_sub.csv\",index=False)","4cf61716":"**Feature correlations - pearson**","b7998791":"**Time based analysis of chemicals**","f3b06e33":"**Baseline Catboost regressor**","4fa4c7fa":"**Data transform and splits**","da70c8d6":"**Sensors and their patterns in the target var**","203c8945":"**submission code**"}}