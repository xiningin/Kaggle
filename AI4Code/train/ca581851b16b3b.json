{"cell_type":{"ec0e95c7":"code","573b1cbb":"code","4fa920a9":"code","e19c1110":"code","34a67cbe":"code","436db460":"code","3b681986":"code","2b75bb37":"code","53f56b78":"code","a613994d":"code","b600d38d":"code","ea0bd2a1":"code","7c7b1bf5":"code","32f9f14f":"code","8f640c56":"markdown","6a0b18f5":"markdown","32eb9109":"markdown","16c61a16":"markdown","99f7cf60":"markdown"},"source":{"ec0e95c7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","573b1cbb":"#Code By Kohei-mu  https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-machine-anomaly-detection\n\nimport numpy as np\nimport pandas as pd\nimport holoviews as hv\nfrom holoviews import opts\nhv.extension('bokeh')\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport os\nimport scipy.stats as stats\nfrom sklearn.svm import OneClassSVM\nfrom sklearn.ensemble import IsolationForest\nfrom sklearn.neighbors import LocalOutlierFactor\n!pip install changefinder\nimport changefinder\nfrom sklearn.metrics import f1_score\nimport shap\nshap.initjs()\nfrom tabulate import tabulate\nfrom IPython.display import HTML, display","4fa920a9":"df = pd.read_csv(\"\/kaggle\/input\/i-dont-work-here-lady\/reddit_i_don_t_work_here_lady.csv\")\ndf.head(2)","e19c1110":"df.isnull().sum()","34a67cbe":"df['timestamp'] = pd.to_datetime(df['timestamp'])","436db460":"#Code By Kohei-mu  https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-machine-anomaly-detection\n\ndf['year'] = df['timestamp'].apply(lambda x : x.year)\ndf['month'] = df['timestamp'].apply(lambda x : x.month)\ndf['day'] = df['timestamp'].apply(lambda x : x.day)\ndf['hour'] = df['timestamp'].apply(lambda x : x.hour)\ndf['minute'] = df['timestamp'].apply(lambda x : x.minute)","3b681986":"df.index = df['timestamp']\ndf.drop(['timestamp'], axis=1, inplace=True)\ndf.head(3)","2b75bb37":"#Code By Kohei-mu  https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-machine-anomaly-detection\n\ncount = hv.Bars(df.groupby(['year','month'])['comms_num'].count()).opts(ylabel=\"Count\", title='Year\/Month Count')\nmean = hv.Bars(df.groupby(['year','month']).agg({'comms_num': ['mean']})['comms_num']).opts(ylabel=\"Number of comments\", title='Year\/Month Mean Comments')\n(count + mean).opts(opts.Bars(width=380, height=300,tools=['hover'],show_grid=True, stacked=True, legend_position='bottom'))","53f56b78":"#Code By Kohei-mu  https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-machine-anomaly-detection\n\nyear_maxmin = df.groupby(['year','month']).agg({'comms_num': ['min', 'max']})\n(hv.Bars(year_maxmin['comms_num']['max']).opts(ylabel=\"Number of Comments\", title='Year\/Month Max Comments') \\\n+ hv.Bars(year_maxmin['comms_num']['min']).opts(ylabel=\"Number of Comments\", title='Year\/Month Min Comments'))\\\n    .opts(opts.Bars(width=380, height=300,tools=['hover'],show_grid=True, stacked=True, legend_position='bottom'))","a613994d":"#Code By Kohei-mu  https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-machine-anomaly-detection\n#Density is the distribution density. Not a feature. Hence, don't change it.\n\nhv.Distribution(df['comms_num']).opts(opts.Distribution(title=\"Comments Distribution\", xlabel=\"Number of Comments\", ylabel=\"Density\", width=700, height=300,tools=['hover'],show_grid=True))","b600d38d":"#Code By Kohei-mu  https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-machine-anomaly-detection\n\n((hv.Distribution(df.loc[df['year']==2021,'comms_num'], label='2021') * hv.Distribution(df.loc[df['year']==2021,'comms_num'], label='2021')).opts(title=\"Comments by Year Distribution\", legend_position='bottom') + \\\n(hv.Distribution(df.loc[df['month']==12,'comms_num'], label='12') * hv.Distribution(df.loc[df['month']==1,'comms_num'], label='1') \\\n     * hv.Distribution(df.loc[df['month']==2,'comms_num'], label='2')).opts(title=\"Comments by Month Distribution\", legend_position='bottom')) \\\n     .opts(opts.Distribution(xlabel=\"Number of comments\", ylabel=\"Density\", width=380, height=300,tools=['hover'],show_grid=True))","ea0bd2a1":"#Code By Kohei-mu  https:\/\/www.kaggle.com\/koheimuramatsu\/industrial-machine-anomaly-detection\n\nhv.Curve(df['comms_num'].resample('D').mean()).opts(opts.Curve(title=\"Comments Mean by Day\", xlabel=\"Time\", ylabel=\"Number of comments\", width=700, height=300,tools=['hover'],show_grid=True))","7c7b1bf5":"#Code By Kohei-Mu  https:\/\/www.kaggle.com\/koheimuramatsu\/women-s-shoes-eda\n\ntitle_cnt = df['title'].value_counts() > 100\ncol = hv.Bars(df['title'].value_counts()[title_cnt][::-1]).opts(title=\"Titles Count over 100\", color=\"purple\", xlabel=\"Titles\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True,fontsize={'title':10}))\npr = hv.Distribution(df['score']).opts(title=\"Score Distribution\", color=\"purple\", xlabel=\"Score\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\ncol + pr","32f9f14f":"#Code by Kohei-Mu  https:\/\/www.kaggle.com\/koheimuramatsu\/women-s-shoes-eda\n\nwh_br_cnt = df['title'].value_counts() > 10\nbr = hv.Bars(df['title'].value_counts()[wh_br_cnt][::-1]).opts(title=\"Title Count over 10\", color=\"white\", xlabel=\"Titles\", ylabel=\"Count\")\\\n                .opts(opts.Bars(width=400, height=300,tools=['hover'],show_grid=True,invert_axes=True))\npr = hv.Distribution(df['score']).opts(title=\"Score Distribution\", color=\"white\", xlabel=\"score\", ylabel=\"Density\",xformatter='$ %d')\\\n                            .opts(opts.Distribution(width=400, height=300,tools=['hover'],show_grid=True))\nbr + pr","8f640c56":"#Kaggle's Meta Meme Mug (MMM)\n\n![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQFtyNUaNDKR-nbu6DF5FmWSJ4SmMugDoIWPg&usqp=CAU)madeindreamland.com","6a0b18f5":"#Fortunately,(for my sake) Kaggle community, very often, choose to help. Otherwise I'd be so screwed.","32eb9109":"#Splitting timestamp columns.","16c61a16":"#Read  Kohei-Mu https:\/\/www.kaggle.com\/koheimuramatsu Codes. And vote for his work.\n\nThe original code has anomaly. Unfortunately, I couldn't perform Kohei's brilliant code till the end since the only anomaly I have here is myself.","99f7cf60":"![](https:\/\/i.pinimg.com\/originals\/8e\/69\/99\/8e6999898e0633471f78a67d31778df0.jpg)pinterest.ie"}}