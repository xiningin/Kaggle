{"cell_type":{"007b0ccc":"code","29760798":"code","62f225b1":"code","3b042453":"code","da5c6e70":"code","cdea97cc":"code","e7d55012":"code","fe4b55f2":"code","6ed5eb43":"code","19497545":"code","bbb00714":"code","62e03b59":"code","f328ca18":"code","fa371cdd":"code","947869c2":"code","b28daeaf":"code","1dea521a":"code","463a53fe":"code","c3749f57":"code","4371f42f":"code","28655f27":"code","92bf9793":"code","bcfb5ba9":"code","f1c83745":"code","d1fb7ba1":"code","f0e835a1":"code","9ce7862c":"code","734382fc":"code","a56871ed":"code","fc52bb4c":"code","953c79ed":"code","10bc7fba":"code","f0a148a7":"code","832ba245":"code","e5520dae":"code","6d881091":"code","291f6ffc":"code","79a9fee0":"code","59c1a8e4":"code","09b9ac28":"code","b6d32f44":"code","af58f6d1":"code","f4432d43":"code","fbe0d333":"code","18393e50":"code","a0fed5de":"code","eb796299":"code","6c40d273":"code","1212e98f":"markdown","d8706296":"markdown","ea521c89":"markdown","1b6f7091":"markdown","9e6dc4f9":"markdown","4a870aa4":"markdown","33ab1fc0":"markdown","1add67fa":"markdown","5ed035f4":"markdown","fc6e0821":"markdown","c817baa7":"markdown","c09ca3fa":"markdown","98792320":"markdown","14c3f611":"markdown","ac681749":"markdown","cce09e04":"markdown","3807e3f5":"markdown","7590cafb":"markdown","50364a01":"markdown","d6e0a334":"markdown","f98a6d6d":"markdown","0951a59f":"markdown","3e38d939":"markdown","ecc02847":"markdown","f78102e9":"markdown","63cd3942":"markdown","dd3cfeeb":"markdown","35651794":"markdown","dddfd083":"markdown","34c798dc":"markdown","537fc600":"markdown","bc23ef71":"markdown","fc8ba6f9":"markdown","39ce7745":"markdown","eff1560f":"markdown","23ac4df5":"markdown","e164eac7":"markdown","152bbd9f":"markdown","1a354a47":"markdown","3425cd5b":"markdown","2171726d":"markdown","f3370bca":"markdown"},"source":{"007b0ccc":"import pandas as pd\nimport seaborn as sns\n\ngender_submission = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntrain = pd.read_csv(\"..\/input\/titanic\/train.csv\")","29760798":"print('Test data shape: ', train.shape)\ntrain.head()","62f225b1":"sns.distplot(train['Sex'], bins=8) ","3b042453":"sns.pairplot(train)","da5c6e70":"train.describe()","cdea97cc":"train.info()","e7d55012":"train.isnull().sum()","fe4b55f2":"import numpy as np\n\nfrom pandas import Series,DataFrame\nimport matplotlib.pyplot as plt\n\nfrom sklearn.impute import SimpleImputer","6ed5eb43":"imputer = SimpleImputer(np.nan, \"mean\")\n\ntrain['Age'] = imputer.fit_transform(np.array(train['Age']).reshape(891, 1)) \ntrain.Embarked.fillna(method='ffill', inplace=True) \ntrain.drop(['PassengerId', 'Name','Ticket'], axis=1, inplace=True)\ntrain.head()","19497545":"test['Age'] = imputer.fit_transform(np.array(test['Age']).reshape(418, 1))\ntest.Embarked.fillna(method='ffill', inplace=True)\ntest.Fare.fillna(method='ffill', inplace=True)\ntest.drop(['Name', 'Ticket'], axis=1, inplace=True)\ntest.head()","bbb00714":"train['Survived'].value_counts()","62e03b59":"plt.figure(figsize=[10,5])\nsns.countplot(x = 'Sex', hue = 'Survived', data = train)\nplt.xticks(rotation = 20);","f328ca18":"sns.barplot(x='Sex', y='Survived', data=train, palette=('RdPu'));","fa371cdd":"print('% of survived females:', train['Survived'][train['Sex'] == 'female'].value_counts(normalize = True)[1]*100)\nprint('% of survived males:', train['Survived'][train['Sex'] == 'male'].value_counts(normalize = True)[1]*100)","947869c2":"train[['Sex', 'Survived']].groupby(['Sex'], as_index=False).mean().sort_values(by='Survived', ascending=False)","b28daeaf":"fig, ax = plt.subplots(figsize = (10,6))\nax = sns.countplot(x = 'Survived', hue = 'Pclass', data = train, palette = 'YlOrRd')\nax.set_xlabel('Survived')\nax.set_title('Survival Rate for Passenger Classes', fontsize = 14, fontweight='bold');","1dea521a":"ax = sns.catplot(x=\"Pclass\", hue=\"Sex\", col=\"Survived\",\n                data=train, kind=\"count\",\n                height=4, aspect=.7, palette = 'OrRd');","463a53fe":"sns.countplot(x = \"Pclass\", hue = \"Survived\", data = train, palette = 'RdPu');","c3749f57":"sns.barplot(x=\"Pclass\", y=\"Survived\", data= train, palette = 'BuGn');","4371f42f":"perc = train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=False).mean().sort_values(by='Survived', ascending=False)\nperc*100","28655f27":"sns.factorplot(x='Pclass', y='Survived', hue = 'Sex', data = train, palette = 'PRGn');","92bf9793":"sns.boxplot(x='Sex', y='Age', hue = 'Survived',data=train);","bcfb5ba9":"grid = sns.FacetGrid(train, col='Survived')\ngrid.map(plt.hist, 'Age', bins=25, color = 'y').add_legend();\nsns.set(style=\"ticks\", color_codes=True);","f1c83745":"plt.figure(figsize=(10,5))\nsns.distplot(train['Age'], bins=24, color='g');","d1fb7ba1":"avg_age_train = train [\"Age\"].mean()\nstd_age_train = train [\"Age\"].std()\n\navg_age_test = test[\"Age\"].mean()\nstd_age_test = test [\"Age\"].std()","f0e835a1":"bins = [0, 1, 12, 18, 21,  60, np.inf]\nlabels = ['Infant', 'Child', 'Teenager',' Young Adult', 'Adult', 'Senior']\ntrain['AgeGroup'] = pd.cut(train[\"Age\"], bins, labels = labels)\ntest['AgeGroup'] = pd.cut(test[\"Age\"], bins, labels = labels)\nsns.barplot(x=\"AgeGroup\", y=\"Survived\", data= train)\nplt.show;","9ce7862c":"train.head()","734382fc":"train[['AgeGroup', 'Survived']].groupby(['AgeGroup'], as_index=False).mean().sort_values(by='Survived', ascending=False)","a56871ed":"AgeGroup_train  = pd.get_dummies(train['AgeGroup'])\nAgeGroup_train.columns = ['Infant', 'Child', 'Teenager',' Young Adult', 'Adult', 'Senior']\nAgeGroup_test  = pd.get_dummies(test['AgeGroup'])\nAgeGroup_test.columns = ['Infant', 'Child', 'Teenager',' Young Adult', 'Adult', 'Senior']\n\ntrain = train.join(AgeGroup_train)\ntest = test.join(AgeGroup_test)","fc52bb4c":"age_mapping = {'Infant': 1, 'Child': 2, 'Teenager': 3, 'Young Adult': 4, 'Adult': 5, 'Senior': 7}\ntrain['AgeGroup'] = train['AgeGroup'].map(age_mapping)\ntest['AgeGroup'] = test['AgeGroup'].map(age_mapping)\n\ntrain.head()\n","953c79ed":"train.drop(['AgeGroup', 'Age'],axis=1,inplace=True)\ntest.drop(['AgeGroup', 'Age'],axis=1,inplace=True)\ntrain.head()","10bc7fba":"train[\"Cabin_new\"] = (train[\"Cabin\"].notnull().astype('int'))\ntest[\"Cabin_new\"] = (test[\"Cabin\"].notnull().astype('int'))\ntrain = train.drop(['Cabin'], axis = 1)\ntest = test.drop(['Cabin'], axis = 1)\n","f0a148a7":"print(\"% of Cabin = 1 survived:\", train[\"Survived\"][train[\"Cabin_new\"] == 1].value_counts(normalize = True)[1]*100)\nprint(\"% of Cabin = 0 survived:\", train[\"Survived\"][train[\"Cabin_new\"] == 0].value_counts(normalize = True)[1]*100)\n\nsns.barplot(x=\"Cabin_new\", y=\"Survived\", data=train).set_title('Cabin vs No Cabin')\nplt.show()","832ba245":"train[[\"SibSp\", \"Survived\"]].groupby(['SibSp'], as_index=False).mean().sort_values(by='Survived', ascending=False)","e5520dae":"train[[\"Parch\", \"Survived\"]].groupby(['Parch'], as_index=False).mean().sort_values(by='Survived', ascending=False)","6d881091":"train['FamilySize'] = train['Parch'] + train['SibSp']\ntest['FamilySize'] = test['Parch'] + test['SibSp']\n#train.drop(['Parch', 'SibSp'], axis=1,inplace=True)\n#test.drop(['Parch', 'SibSp'], axis=1,inplace=True)\nsns.barplot(x=\"FamilySize\", y=\"Survived\", data=train)\nplt.show;","291f6ffc":"sns.pointplot(x='FamilySize', y = 'Survived', data = train);","79a9fee0":"train[['Embarked', 'Survived']].groupby(['Embarked'], as_index=False).mean().sort_values(by='Survived', ascending=False)","59c1a8e4":"embark_perc = train[[\"Embarked\", \"Survived\"]].groupby(['Embarked'],as_index=False).mean()\nsns.barplot(x='Embarked', y='Survived', data=embark_perc,order=['S','C','Q']);","09b9ac28":"sns.countplot(x='Embarked', hue='Survived', data=train);","b6d32f44":"embark_dummies_train  = pd.get_dummies(train['Embarked'])\nembark_dummies_test  = pd.get_dummies(test['Embarked'])\n\ntrain = train.join(embark_dummies_train)\ntest = test.join(embark_dummies_test)\ntrain.head()","af58f6d1":"train = train.drop(['Embarked'], axis = 1)\ntest = test.drop(['Embarked'], axis = 1)\ntrain.head()","f4432d43":"sex_mapping = {\"male\": 0, \"female\": 1}\ntrain['Sex'] = train['Sex'].map(sex_mapping)\ntest['Sex'] = test['Sex'].map(sex_mapping)\n\ntrain.head()","fbe0d333":"f, ax = plt.subplots(figsize=(6, 6))\ncmap = sns.cubehelix_palette(as_cmap=True)\nsns.kdeplot(train['Survived'], train['Sex'],cbar = cmap,shade=True);","18393e50":"g = sns.jointplot(x='Survived', y = 'Sex', data=train, kind=\"kde\", color=\"m\")\ng.plot_joint(plt.scatter, c=\"w\", s=30, linewidth=1, marker=\"+\")\ng.ax_joint.collections[0].set_alpha(0)\ng.set_axis_labels(\"Survived\", \"Gender\")","a0fed5de":"f, ax = plt.subplots(figsize=(6, 6))\nsns.kdeplot(train['Survived'], train['Sex'], ax=ax)\nsns.rugplot(train['Survived'], color=\"g\", ax=ax)\nsns.rugplot(train['Sex'], vertical=True, ax=ax);","eb796299":"# convert from float to int\ntrain['Fare'] = train['Fare'].astype(int)\ntest['Fare']= test['Fare'].astype(int)\n\n# get fare for survived & didn't survive passengers \nfare_not_survived = train[\"Fare\"][train[\"Survived\"] == 0]\nfare_survived = train[\"Fare\"][train[\"Survived\"] == 1]\n\n# get average and std for fare of survived\/not survived passengers\navgerage_fare = DataFrame([fare_not_survived.mean(), fare_survived.mean()])\nstd_fare = DataFrame([fare_not_survived.std(), fare_survived.std()])\n\n# plot\ntrain['Fare'].plot(kind='hist', figsize=(15,3),bins=100, xlim=(0,50), color = 'purple')\n\navgerage_fare.index.names = std_fare.index.names = [\"Survived\"]\navgerage_fare.plot(yerr=std_fare,kind='bar',legend=False, color = 'r');","6c40d273":"mask = np.zeros_like(train.corr(), dtype=np.bool)\n## in order to reverse the bar replace \"RdBu\" with \"RdBu_r\"\nplt.subplots(figsize = (15,12))\nsns.heatmap(train.corr(), annot=True,mask = False,cmap = 'OrRd', linewidths=.7, linecolor='black',fmt='.2g',center = 0,square=True)\n\nplt.title(\"Correlations\", y = 1.03,fontsize = 20, fontweight = 'bold', pad = 40);","1212e98f":"## Correlations  and Heatmap","d8706296":"The percentage of survived women is a lot higher. However, it was expected since the women and children were put on the emergency boats first.","ea521c89":"Some additional statistics for both data sets: Average and Standard Deviation.","1b6f7091":"Another way to calculate these % using groupby():","9e6dc4f9":"Looking at the survaval data for each port separetely, port Southampton has the highest number of survivors. At the same time, the largest number of victims came from port Cherbourg.","4a870aa4":"Instead of creating dummies like I did above, you can map values to each category. And, as you can see, these works.","33ab1fc0":"Most of the passengers are between 15 and 40 years old and many infants had survived. ","1add67fa":"### Gender","5ed035f4":"Now, it's clear that 1st class had 63%, 2nd class is almost 'fifty-fifty' and 3rd class had only 24% survival rate.","fc6e0821":"## Fare","c817baa7":"By creating Age subgroups we can examen the data even more.","c09ca3fa":"As a metter of fact, passangers with the Cabin were more likely to survive.","98792320":"Here is another representation of this correlation:","14c3f611":"As expected, 3rd class passngers has the lowest survival rate, while the 1st class has the highest.","ac681749":"#### Barplot of survival rate between men and women:","cce09e04":"Now, I map each Gender value to a numerical value:","3807e3f5":"## Missing values","7590cafb":"### Survived","50364a01":"Another way to present it:","d6e0a334":"## Data Analysis\n","f98a6d6d":"Note: Some of the seaborn color palettes can be found here:\nhttps:\/\/images.app.goo.gl\/a4gDzjx5ZgAvf5Kf8","0951a59f":"To analyse the data based on the family size, first, create new column:","3e38d939":"## Age","ecc02847":"At the catplot below we can see the detailed distribution of the survival rate between different passenger classes on the Titanic for men and women.  ","f78102e9":"Percentages of who survived: The men's survival is tragically a lot lower than women's.","63cd3942":"The survival rate of women is a lot higher than men.","dd3cfeeb":"### Passenger Class","35651794":"## Treating Missing Values","dddfd083":"## Family Size","34c798dc":"## Cabin","537fc600":"And now for the test data:","bc23ef71":"Distribution of survived: 1 is for survived and 0 is for not. ","fc8ba6f9":"In this case, I decided to use mapping each Embarked value to a numerical value instead of creating a dummies.","39ce7745":"Below, another representation of the survivors and victims for each ticket class.","eff1560f":"To look at the correlation between passenger class and survival statistics I would plot a countplot.","23ac4df5":"And the next 3 plots are just cool kdeplots for Gender and Survival Rate ","e164eac7":"Now, let's take a look at the titanic data: There are 891 rows by 12 columns observations in total. Just by the logic, I would assume that Age, Passenger Class, and Sex are major factors in the survival rate on the Titanic.","152bbd9f":"Looking at the Age distribution for men and women, it's clear that the average age for both was about 30. Many men older 50 years old and children after 8 years old did not survive. However, it's opposite for women: most of the women older 50 years old survived. The middle age of men, who did not survive, was between 24 and 36 years old, for women - between 18 and 32. The oldest person on the Titanic survived who was 80 years old. ","1a354a47":"## Port of Embarkation","3425cd5b":"The average Age is around 30 years old which is not a surprise considering the time.","2171726d":"Missing Values in the column Age can be fixed by imputing values, in our case, using average, of this column. \nFor the column Embarked the missing values can be fixed by 'ffil' that implaces last valid observation in this column. At the same time, I dropped PassengerId, Name and Ticket columns.","f3370bca":"And here is the rate of survival by class:"}}