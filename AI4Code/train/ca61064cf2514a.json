{"cell_type":{"6f3865ea":"code","cbf43afb":"code","6aa478ad":"code","b30ae2e4":"code","ecc13026":"code","396d33d9":"code","a8462734":"code","baa8f9ea":"code","94f5a6d9":"code","e18cd637":"code","8e614a74":"code","70790570":"code","8322b472":"markdown","72dd9798":"markdown","fb617418":"markdown","5eac0a69":"markdown","7e920d01":"markdown","5a06490c":"markdown"},"source":{"6f3865ea":"from mpl_toolkits.mplot3d import Axes3D\nimport matplotlib.pyplot as plt # plotting\nimport numpy as np # linear algebra\nimport os # accessing directory structure\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport time\nfrom datetime import datetime\nimport datetime\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport folium\nfrom folium import plugins\nimport seaborn as sns ","cbf43afb":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6aa478ad":"folium_map = folium.Map(location=[45.438759, 12.327145],\n                        zoom_start=10,\n                        tiles=\"CartoDB dark_matter\")\n\npopups = ['Punta della Salute','San Giorgio', 'Burano','Malamocco','Chioggia']\ndata = np.array([np.array([45.431078,45.428408,45.487503,45.339800,45.232539]),np.array([12.336378, 12.346264, 12.415486, 12.291967, 12.280597 ])]).T\n\n\nplugins.MarkerCluster(data,popups).add_to(folium_map)\n\nfolium_map","b30ae2e4":"df1 = pd.read_csv('\/kaggle\/input\/venice-high-water-acqua-alta\/VeneziaPuntaSalute.csv',delimiter=',')\ndf1.columns = ['date','time','liv','temp']\n\ndf1.time = df1.time.map(lambda x: x.rstrip('AMP').replace(';',''))\ndf1.temp = df1.temp.map(lambda x: x.replace(';','')).replace(r'^\\s*$', np.nan, regex=True).astype(float)\n\n# df1.isnull().sum()\n\ndf1.liv = df1.liv.fillna(method='pad')\ndf1.temp = df1.temp.fillna(method='pad')\n\n#df1.isnull().sum()\n\ndt = datetime.datetime(2019, 10, 10, 0, 10, 0)\nend = datetime.datetime(2020, 1, 11, 0, 10, 0)\nstep = datetime.timedelta(minutes=10)\n\nresult = []\n\nwhile dt < end:\n    result.append(dt.strftime('%Y-%m-%d %H:%M:%S'))\n    dt += step\n\ndf1.insert(0,'datetime',result)","ecc13026":"df2 = pd.read_csv('\/kaggle\/input\/venice-high-water-acqua-alta\/VeneziaSanGiorgio.csv',delimiter=',')\ndf2.columns = ['date','time','vv','vmax','dv','tair','um','rs']\n# df2.time = df2.time.map(lambda x: x.rstrip('AMP').replace(';',''))\n\ndt = datetime.datetime(2019, 10, 11, 1, 0, 0)\nend = datetime.datetime(2020, 1, 12, 1, 0, 0)\nstep = datetime.timedelta(hours=1)\n\nresult = []\n\nwhile dt < end:\n    result.append(dt.strftime('%Y-%m-%d %H:%M:%S'))\n    dt += step\n\ndf2.insert(0,'datetime',result)\ndf2.drop(['date','time'],axis=1, inplace=True)","396d33d9":"df3 = pd.read_csv('\/kaggle\/input\/venice-high-water-acqua-alta\/burano.csv',delimiter=',')\ndf4 = pd.read_csv('\/kaggle\/input\/venice-high-water-acqua-alta\/malamocco.csv',delimiter=',')\ndf5 = pd.read_csv('\/kaggle\/input\/venice-high-water-acqua-alta\/chioggia.csv',delimiter=',')\n\ndf3 = df3.iloc[1:,:]\ndf4 = df4.iloc[1:,:]\ndf5 = df5.iloc[1:,:]","a8462734":"df3.columns = ['date','time','liv']\ndf4.columns = ['date','time','liv']\ndf5.columns = ['date','time','liv']\n\ndf3.time = df3.time.map(lambda x: x.rstrip('AMP').replace(';',''))\ndf4.time = df4.time.map(lambda x: x.rstrip('AMP').replace(';',''))\ndf5.time = df5.time.map(lambda x: x.rstrip('AMP').replace(';',''))\n\ndf3.liv = df3.liv.fillna(method='pad')\ndf4.liv = df4.liv.fillna(method='pad')\ndf5.liv = df5.liv.fillna(method='pad')\n\ndt = datetime.datetime(2019, 10, 11, 0, 10, 0)\nend = datetime.datetime(2020, 1, 12, 0, 10, 0)\nstep = datetime.timedelta(minutes=10)\n\nresult = []\n\nwhile dt < end:\n    result.append(dt.strftime('%Y-%m-%d %H:%M:%S'))\n    dt += step\n\ndf3.insert(0,'datetime',result)\ndf4.insert(0,'datetime',result)\ndf5.insert(0,'datetime',result)\n\ndf3.to_csv('df3.csv')\ndf4.to_csv('df4.csv')\ndf5.to_csv('df5.csv')\n","baa8f9ea":"df1 = df1[df1['datetime']>='2019-10-11 00:10:00']\ndf3 = df3[df3['datetime']<='2020-01-11 00:00:00']\ndf4 = df4[df4['datetime']<='2020-01-11 00:00:00']\ndf5 = df5[df5['datetime']<='2020-01-11 00:00:00']\n","94f5a6d9":"df1 = df1.reset_index().drop('index',axis=1)\ndf3 = df3.reset_index().drop('index',axis=1)\ndf4 = df4.reset_index().drop('index',axis=1)\ndf5 = df5.reset_index().drop('index',axis=1)\n\ndf_all_sensors = pd.concat([df1.datetime, df1.liv,df3.liv,df4.liv,df5.liv],axis=1)\ndf_all_sensors = df_all_sensors#.astype(float)\ndf_all_sensors.columns = ['datetime', 'Punta della Salute',\n                   'Burano','Malamocco','Chioggia']\n\ndf_all_sensors['datetime'] = pd.to_datetime(df_all_sensors['datetime'])\ndf_all_sensors.head()","e18cd637":"df_all_sensors['month'] = df_all_sensors['datetime'].dt.month\ndf_all_sensors['hour'] = df_all_sensors['datetime'].dt.hour\ndf_all_sensors['week'] = df_all_sensors['datetime'].dt.week","8e614a74":"df = df_all_sensors.melt(id_vars=['hour','week','month'], value_vars=['Punta della Salute','Burano','Malamocco','Chioggia'],\n        var_name='station', value_name='liv')\n\ndf.liv = df.liv.astype('float')\n\ndf.head()","70790570":"\n# water trends\nsns.relplot(data = df, x = 'hour', y = \"liv\", kind='line',\n            markers=True, height=5, aspect=1.7, \n               col = 'month', \n               hue = 'station',\n            style=\"station\")\n","8322b472":"## stations : Burano - Malamocco - Chioggia","72dd9798":"# station : Punta della Salute","fb617418":"# station : San Giorgio","5eac0a69":"# Sensors Location in Venice's Map\n* Station for data collection at Punta della Salute\n* Station for data collection at San Giorgio\n* Station for data collection at Burano \n* Station for data collection at Malamocco \n* Station for data collection at Chioggia","7e920d01":"# Exploratory Data Analysis","5a06490c":"![acqua%20alta.jpg](attachment:acqua%20alta.jpg)"}}