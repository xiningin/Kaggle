{"cell_type":{"ae004d44":"code","17280a19":"code","7434d661":"code","b859568e":"code","90b1cd8e":"code","c971ce84":"code","ef5d0bdf":"code","0b080351":"code","7b9d9d34":"code","db9c9535":"code","733779ec":"code","65142af8":"code","1ea85c2e":"code","551a4dfb":"code","7131867a":"code","ee4b9f46":"code","0c3a93e3":"code","f5903b78":"code","b840de6c":"code","2fab92fb":"code","97ca5b0f":"code","9b532a8c":"code","783a8737":"code","add222a8":"code","6c3b0c44":"code","ddf42206":"code","a73bc7af":"code","e409665c":"code","bba9319c":"code","45736c5b":"code","18a7861d":"code","0584aaea":"code","eb0db99a":"code","39c36ae1":"code","3e3a5bc1":"code","e405334d":"code","dd48a337":"code","fc8f3b43":"code","98e8feaa":"markdown"},"source":{"ae004d44":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","17280a19":"df=pd.read_csv('..\/input\/hackerearth-love-in-the-time-of-screens\/data.csv')","7434d661":"df.head()","b859568e":"user_id=df['user_id']","90b1cd8e":"df.drop(columns=['user_id','username'],inplace=True)","c971ce84":"df.head()","ef5d0bdf":"for i in df:\n    print(i,df[i].isna().sum())","0b080351":"len(df['language'].value_counts())","7b9d9d34":"df.shape","db9c9535":"from sklearn.preprocessing import LabelEncoder","733779ec":"lan=[]\nfor i in df['language']:\n    l=i.split(',')\n    for j in l:\n        if j not in lan:\n            lan.append(j)\nprint(len(lan))","65142af8":"XX={}\nfor i in lan:\n    l=[]\n    for j in df['language']:\n        if i in j.split(','):\n            l.append(1)\n        else:\n            l.append(0)\n    XX[i]=l\n            ","1ea85c2e":"len(XX['english'])","551a4dfb":"df.drop(columns=['language','bio'],inplace=True)","7131867a":"df.shape","ee4b9f46":"le=LabelEncoder()","0c3a93e3":"a=df.dtypes","f5903b78":"for i in a:\n    print(a[0])","b840de6c":"s=0\nfor i in df:\n    if a[s]=='object':\n        df[i]=le.fit_transform(df[i])\n    s+=1","2fab92fb":"df.head()","97ca5b0f":"for i in XX:\n    df[i]=XX[i]","9b532a8c":"df.head()","783a8737":"df.shape","add222a8":"from sklearn.metrics.pairwise import cosine_similarity","6c3b0c44":"X=df.values","ddf42206":"X.shape","a73bc7af":"ans=[]\nfor i in X:\n    l=[]\n    for j in X:\n        l.append(cosine_similarity([i],[j])*100)\n    ans.append(l)","e409665c":"ans_ar=np.array(ans)\nnp.save('ans.npy',ans_ar)","bba9319c":"ans[1][0][0][0]","45736c5b":"a=[]\nfor i in ans:\n    l=[]\n    for j in i:\n        l.append(j[0][0]\/100)\n    a.append(l)\n        ","18a7861d":"a[:2]","0584aaea":"data=pd.DataFrame()","eb0db99a":"s=0\nfor i in user_id:\n    data[i]=a[s]\n    s+=1\n    ","39c36ae1":"data.head()","3e3a5bc1":"data.shape","e405334d":"data.set_index(user_id,inplace=True)","dd48a337":"data.head()","fc8f3b43":"data.to_csv('submission.csv')","98e8feaa":"# I tried using values between 0-1 and also 0-100(here 0-1)"}}