{"cell_type":{"f85e3dde":"code","61230188":"code","3ed3970b":"code","a6c59465":"code","7f2c0847":"code","8227b6dc":"code","5914a184":"code","75abeefc":"code","68437f8f":"code","35f71529":"code","40e74828":"code","4ee9ce3a":"code","8430684d":"code","2cd5cf31":"code","912fecff":"code","cfcc2d23":"code","2f200ed9":"code","5f00f0ea":"code","ca7532d7":"code","0709a465":"code","4230efcd":"code","08e65d76":"code","36c5f3b2":"code","cc09b945":"code","0fdb3b91":"code","a732cc7b":"code","d6fa9a4c":"code","806e2671":"code","84e94f69":"code","02afe55f":"code","12dd094d":"code","40c4eca5":"code","63a9a49c":"code","39ae2ec0":"code","dc96edee":"code","9ea877de":"code","1c1fe729":"code","3e13f8b5":"code","26d417bf":"code","868bc80e":"code","cc2cc6cb":"code","a10306ac":"code","66901719":"code","bf440e9f":"code","444c2036":"code","994f8bf5":"code","ef0825ea":"code","00918cee":"code","fabcc6c3":"code","fddf0ef1":"code","c070bdd5":"code","93d823c6":"code","e3b6b6be":"code","20f8a88c":"code","41846fc0":"code","c0e3be49":"code","6da0650b":"code","8b666032":"code","a8594c03":"code","646d2833":"code","6cecae94":"code","15a37f2e":"code","6cc8cc60":"code","e7019fec":"code","ad18652f":"code","d403d488":"code","7d7f8a78":"code","1854f58f":"code","42e8b442":"code","c7acdef1":"code","64f985ea":"code","9c09590f":"code","4eae0356":"code","3ffdbde7":"code","1d6d98f6":"code","8ebdedee":"code","953d7b2d":"code","91ae7b43":"code","8492ef46":"code","76eb6f27":"code","f05d027e":"code","09e0a860":"markdown","7ffceccc":"markdown","750c8212":"markdown","3b1fe0fa":"markdown","c1f9fa00":"markdown"},"source":{"f85e3dde":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","61230188":"dataset = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/train.csv')\ntestset = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/test.csv')","3ed3970b":"dataset.sample(10)","a6c59465":"dataset.info()","7f2c0847":"dataset.isna().sum()","8227b6dc":"dataset.nunique()","5914a184":"dataset.dropna(inplace=True)","75abeefc":"X = dataset.iloc[:, 2:].values\ny = np.floor(dataset.iloc[:, 1].values)","68437f8f":"X[1]","35f71529":"y[1]","40e74828":"from sklearn.model_selection import train_test_split","4ee9ce3a":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.20, random_state = 80,stratify =y)","8430684d":"from sklearn.metrics import accuracy_score, recall_score, precision_score, f1_score, classification_report, confusion_matrix","2cd5cf31":"target_names = ['0 chance', '1 chance']","912fecff":"print(classification_report(y_test, y_preds, target_names=target_names))","cfcc2d23":"from sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics","2f200ed9":"logreg = LogisticRegression(max_iter=100000)\nlogreg.fit(X_train, y_train)","5f00f0ea":"# test = testset.iloc[:, 1:].values\ny_pred = logreg.predict(X_test)\nprint('Accuracy of logistic regression classifier on test set: {:.2f}'.format(logreg.score(X_test, y_test)))\nresult = pd.DataFrame({\"target\" : np.array(y_pred).T})\nresult['target'].value_counts()","ca7532d7":"print(classification_report(y_test, y_pred, target_names=target_names))","0709a465":"X_train, X_test, y_train, y_test = train_test_split(X,y,train_size = 199998, random_state = 80,stratify =y)","4230efcd":"logreg = LogisticRegression(max_iter=100000)\nlogreg.fit(X_train, y_train)","08e65d76":"test = testset.iloc[:, 1:].values\ny_pred = logreg.predict(test)\n","36c5f3b2":"sub = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/sample_submission.csv')\nsub['target'] = y_pred\nsub.to_csv('logregFi.csv', index=False)","cc09b945":"from sklearn.naive_bayes import GaussianNB","0fdb3b91":"gnb = GaussianNB()","a732cc7b":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.20, random_state = 80,stratify =y)","d6fa9a4c":"gnb.fit(X_train, y_train)","806e2671":"y_pred = gnb.predict(X_test)\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","84e94f69":"print(classification_report(y_test, y_pred, target_names=target_names))","02afe55f":"y_pred = gnb.predict(X_test)\nprint('Accuracy of gnb classifier on test set: {:.2f}'.format(gnb.score(X_test, y_test)))\nresult = pd.DataFrame({\"target\" : np.array(y_pred).T})\nresult['target'].value_counts()","12dd094d":"X_train, X_test, y_train, y_test = train_test_split(X,y,train_size = 199998, random_state = 80,stratify =y)\n","40c4eca5":"test = testset.iloc[:, 1:].values\n\ny_pred = gnb.predict(test)","63a9a49c":"\nsub = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/sample_submission.csv')\nsub['target'] = y_pred\nsub.to_csv('gaussianF.csv', index=False)","39ae2ec0":"from sklearn.naive_bayes import BernoulliNB\nfrom sklearn.model_selection import train_test_split","dc96edee":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.20, random_state = 80,stratify =y)","9ea877de":"bnb = BernoulliNB(binarize=0.0)","1c1fe729":" bnb.fit(X_train, y_train)","3e13f8b5":" bnb.score(X_test, y_test)","26d417bf":"y_pred = bnb.predict(X_test)","868bc80e":"print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","cc2cc6cb":"\nprint('Accuracy of bnb classifier on test set: {:.2f}'.format(bnb.score(X_test, y_test)))\nresult = pd.DataFrame({\"target\" : np.array(y_pred).T})\nresult['target'].value_counts()","a10306ac":"X_train, X_test, y_train, y_test = train_test_split(X,y,train_size = 199998, random_state = 80,stratify =y)\n","66901719":" bnb.fit(X_train, y_train)","bf440e9f":"y_pred = bnb.predict(test)","444c2036":"result = pd.DataFrame({\"target\" : np.array(y_pred).T})\n# train_ds['target'].value_counts()\nresult['target'].value_counts()","994f8bf5":"sub = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/sample_submission.csv')\nsub['target'] = y_pred\nsub.to_csv('bernulliF.csv', index=False)","ef0825ea":"from sklearn.tree import DecisionTreeClassifier\n","00918cee":"from sklearn import metrics ","fabcc6c3":"from sklearn.tree import export_graphviz ","fddf0ef1":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.20, random_state = 80,stratify =y)","c070bdd5":"clf = DecisionTreeClassifier()","93d823c6":"clf = clf.fit(X_train,y_train)","e3b6b6be":"y_pred = clf.predict(X_test)","20f8a88c":"print('Accuracy of clf classifier on test set: {:.2f}'.format(clf.score(X_test, y_test)))\nresult = pd.DataFrame({\"target\" : np.array(y_pred).T})\nresult['target'].value_counts()","41846fc0":"print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","c0e3be49":"X_train, X_test, y_train, y_test = train_test_split(X,y,train_size = 199998, random_state = 80,stratify =y)","6da0650b":"clf = clf.fit(X_train,y_train)","8b666032":"y_pred = clf.predict(test)","a8594c03":"result = pd.DataFrame({\"target\" : np.array(y_pred).T})\n# train_ds['target'].value_counts()\nresult['target'].value_counts()","646d2833":"sub = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/sample_submission.csv')\nsub['target'] = y_pred\nsub.to_csv('decissionTreeFi.csv', index=False)","6cecae94":"import os  \nos.environ['KMP_DUPLICATE_LIB_OK']='True'","15a37f2e":"import xgboost as xgb\nimport pandas as pd","6cc8cc60":"xg_cl = xgb.XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n              colsample_bynode=1, colsample_bytree=1, gamma=1,\n              learning_rate=0.1, max_delta_step=0, max_depth=8,\n              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,\n              nthread=None, objective='binary:logistic', random_state=0,\n              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n              silent=None, subsample=1, verbosity=1)\n","e7019fec":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.20, random_state = 10,stratify =y)","ad18652f":"xg_cl.fit(X_train, y_train)","d403d488":"y_pred = xg_cl.predict(X_test)","7d7f8a78":"print(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","1854f58f":"\nprint('Accuracy of XGBOOST classifier on test set: {:.2f}'.format(xg_cl.score(X_test, y_test)))\nresult = pd.DataFrame({\"target\" : np.array(y_pred).T})\nresult['target'].value_counts()","42e8b442":"print(classification_report(y_test, y_pred, target_names=target_names))","c7acdef1":"dataset_dmatrix = xgb.DMatrix(data = X,label = y)\ndataset_dmatrix","64f985ea":"params = {\"objective\":\"reg:logistic\", \"max_depth\":3}\nparams","9c09590f":"# Perform cross-validation: cv_results\ncv_results = xgb.cv(dtrain = dataset_dmatrix, params = params, num_boost_round = 5, nfold = 3, metrics = \"rmse\", as_pandas = True, seed = 123)","4eae0356":"print(cv_results)","3ffdbde7":"print(1-cv_results[\"test-rmse-mean\"].tail(1))","1d6d98f6":"cv_results = xgb.cv(dtrain = dataset_dmatrix, params = params, num_boost_round = 5, nfold = 3, metrics = \"auc\", as_pandas = True, seed = 123)","8ebdedee":"print(cv_results[\"test-auc-mean\"].tail(1))","953d7b2d":"X_train, X_test, y_train, y_test = train_test_split(X,y,train_size = 199998, random_state = 80,stratify =y)","91ae7b43":"xg_cl.fit(X_train, y_train)","8492ef46":"y_pred = xg_cl.predict(test)","76eb6f27":"result = pd.DataFrame({\"target\" : np.array(y_pred).T})\n# train_ds['target'].value_counts()\nresult['target'].value_counts()","f05d027e":"sub = pd.read_csv('\/kaggle\/input\/santander-customer-transaction-prediction\/sample_submission.csv')\nsub['target'] = y_pred\nsub.to_csv('XGBOOSTv2.csv', index=False)","09e0a860":"BNB","7ffceccc":"XGboost","750c8212":"> Naive Bayes\n> ","3b1fe0fa":"DTress and RF","c1f9fa00":"![](http:\/\/)Logistic Regression"}}