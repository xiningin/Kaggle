{"cell_type":{"ca023bfa":"code","7f8214a1":"code","d14ff894":"code","6f51b917":"code","9daa51ab":"code","abeacc8b":"code","2be0fd90":"code","2b0c87c7":"code","80b514e5":"code","3d9c89c4":"code","277d9324":"code","a61b534f":"code","7e85ddaf":"code","6b668a0d":"code","f87c96e2":"code","e84e3f78":"code","2e12507a":"code","6cae42c9":"code","82265ac5":"code","e0598982":"code","1fc3159f":"code","acd19229":"markdown"},"source":{"ca023bfa":"import pandas as pd\nimport geopandas as gpd\nimport folium\nimport numpy as np\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)","7f8214a1":"df=pd.read_excel('..\/input\/registering-property\/registering_property.xlsx')\ndf.head()","d14ff894":"df.describe().T","6f51b917":"df.loc[(df.Tapu_Sicili_Puan\u0131== -9999),'Tapu_Sicili_Puan\u0131']='NaN'\ndf.loc[(df.\u0130\u015flem_say\u0131s\u0131==-9999),'\u0130\u015flem_say\u0131s\u0131']='NaN'\ndf.loc[(df.\u0130\u015flem_S\u00fcresi==-9999),'\u0130\u015flem_S\u00fcresi']='NaN'\ndf.loc[(df.\u0130\u015flem_Masraf\u0131==-9999),'\u0130\u015flem_Masraf\u0131']='NaN'\ndf.loc[(df.Arazi_Y\u00f6netimi_Kalitesi_Endeksi==-9999),'Arazi_Y\u00f6netimi_Kalitesi_Endeksi']='NaN'","9daa51ab":"df[\"Arazi_Y\u00f6netimi_Kalitesi_Endeksi\"] = df[\"Arazi_Y\u00f6netimi_Kalitesi_Endeksi\"].astype(str).astype(float)\ndf[\"Tapu_Sicili_Puan\u0131\"] = df[\"Tapu_Sicili_Puan\u0131\"].astype(str).astype(float)\ndf[\"\u0130\u015flem_say\u0131s\u0131\"] = df[\"\u0130\u015flem_say\u0131s\u0131\"].astype(str).astype(float)\ndf[\"\u0130\u015flem_S\u00fcresi\"] = df[\"\u0130\u015flem_S\u00fcresi\"].astype(str).astype(float)\ndf[\"\u0130\u015flem_Masraf\u0131\"] = df[\"\u0130\u015flem_Masraf\u0131\"].astype(str).astype(float)","abeacc8b":"df.describe().T","2be0fd90":"df.info()","2b0c87c7":"world=gpd.read_file('..\/input\/country-state-geo-location\/countries.geo.json')","80b514e5":"world.head()","3d9c89c4":"df.drop(df[df.\u00dclke=='Bangladesh - Chittagong'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Bangladesh - Dhaka'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Barbados'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Brazil - Rio de Janeiro'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Brazil - S\u00e3o Paulo'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Brunei Darussalam'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Cabo Verde'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='China - Beijing'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='China - Shanghai'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Comoros'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Dominica'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Eswatini'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Gambia, The'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Grenada'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Guinea-Bissau'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Hong Kong SAR, China'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='India - Delhi'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='India - Mumbai'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Indonesia - Jakarta'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Indonesia - Surabaya'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Japan - Osaka'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Japan - Tokyo'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Mexico - Mexico City'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Mexico - Monterrey'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Nigeria - Kano'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Nigeria - Lagos'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Pakistan - Karachi'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Pakistan - Lahore'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='United States - Los Angeles'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='United States - New York City'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Timor-Leste'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Tonga'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='West Bank and Gaza'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='San Marino'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Russian Federation - Moscow'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Russian Federation - Saint Petersburg'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='Palau'].index, inplace=True)\ndf.drop(df[df.\u00dclke=='St. Lucia'].index, inplace=True)","277d9324":"for items in df['\u00dclke'].tolist():\n    world_list=world['name'].tolist()\n    if items in world_list:\n        pass\n    else:\n        print(items)","a61b534f":"for items in world['name'].tolist():\n    df_list=df['\u00dclke'].tolist()\n    if items in df_list:\n        pass\n    else:\n        print(items)","7e85ddaf":"df.replace('Yemen, Rep.','Yemen',inplace=True)\ndf.replace('Syrian Arab Republic','Syria',inplace=True)\ndf.replace('Russian Federation','Russia',inplace=True)\ndf.replace('Kyrgyz Republic','Kyrgyzstan',inplace=True)\ndf.replace('United States','United States of America',inplace=True)\ndf.replace('Slovak Republic','Slovakia',inplace=True)\ndf.replace('Republic of Serbia','Serbia',inplace=True)\ndf.replace('Tanzania','United Republic of Tanzania',inplace=True)\ndf.replace('Taiwan, China','Taiwan',inplace=True)\ndf.replace('Egypt, Arab Rep.','Egypt',inplace=True)\ndf.replace('Iran, Islamic Rep.','Iran',inplace=True)\ndf.replace('Korea, Rep.','South Korea',inplace=True)\ndf.replace('Samoa','Somaliland',inplace=True)\ndf.replace('Lao PDR','Laos',inplace=True)\ndf.replace('Congo, Dem. Rep.','Democratic Republic of the Congo',inplace=True)\ndf.replace('Macedonia','North Macedonia',inplace=True)\ndf.replace('Venezuela, RB','Venezuela',inplace=True)","6b668a0d":"import folium\nm = folium.Map(tiles='cartodbpositron')\nm","f87c96e2":"country=pd.read_csv(\"..\/input\/latitude-and-longitude-for-every-country-and-state\/world_country_and_usa_states_latitude_and_longitude_values.csv\")\ncountry.head()","e84e3f78":"country=country.dropna(subset=['latitude'])\ncountry=country.dropna(subset=['longitude'])","2e12507a":"country.rename(columns={'country':'\u00dclke'},inplace=True)\ncountry.replace('United States', \"United States of America\", inplace = True)","6cae42c9":"combine=df.merge(country,on='\u00dclke')\ncombine.head()","82265ac5":"choropleth=folium.Choropleth(\n    geo_data=world,\n    name='Arazi Y\u00f6netim Kalite Endeksi',\n    data=combine,\n    columns=['\u00dclke', 'Arazi_Y\u00f6netimi_Kalitesi_Endeksi'],\n    key_on='feature.properties.name',\n    legend_name='Arazi Yonetimi Kalitesi Endeksi',\n    fill_color='OrRd',\n    nan_fill_color='black'\n).add_to(m)\nchoropleth.geojson.add_child(\n    folium.features.GeoJsonTooltip(['name'],labels=False)\n)\nm","e0598982":"choropleth=folium.Choropleth(\n    geo_data=world,\n    name='Tapu_Sicili_Puan\u0131',\n    data=combine,\n    columns=['\u00dclke', 'Tapu_Sicili_Puan\u0131'],\n    key_on='feature.properties.name',\n    fill_color='YlGn',\n    legend_name='Tapu Sicil Puani',\n    nan_fill_color='black'\n).add_to(m)\nchoropleth.geojson.add_child(\n    folium.features.GeoJsonTooltip(['name'],labels=False)\n)\nfolium.LayerControl().add_to(m)\nm","1fc3159f":"choropleth=folium.Choropleth(\n    geo_data=world,\n    name='\u0130\u015flem_say\u0131s\u0131',\n    data=combine,\n    columns=['\u00dclke', '\u0130\u015flem_say\u0131s\u0131'],\n    key_on='feature.properties.name',\n    fill_color='RdPu',\n    legend_name='Islem Sayisi',\n    nan_fill_color='black'\n).add_to(m)\nchoropleth.geojson.add_child(\n    folium.features.GeoJsonTooltip(['name'],labels=False)\n)\nfolium.LayerControl().add_to(m)\nm","acd19229":"BuGn, BuPu, GnBu, OrRd, PuBu, PuBuGn, PuRd, RdPu, YlGn, YlGnBu, YlOrBr, and YlOrRd"}}