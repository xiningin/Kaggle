{"cell_type":{"3d3242ee":"code","addeec6e":"code","f5296f7c":"code","ec9cf28c":"code","32381bc6":"code","2333ce37":"code","59603334":"code","1fb42558":"code","7294bb49":"code","89b558ab":"code","b2e588b8":"code","63925780":"code","f261a3a5":"code","49e4d1e2":"code","ba3acad2":"code","9d91ac0d":"code","4e2c7ffb":"code","386488a2":"code","08990ae3":"code","70674027":"code","6874f7a3":"markdown","324ecc74":"markdown"},"source":{"3d3242ee":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","addeec6e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set_style('darkgrid')","f5296f7c":"starbucks_sh = pd.read_csv('..\/input\/starbucks-stock-data-live-and-latest\/Starbucks_stock_history.csv', header=0, index_col=0, parse_dates=True, squeeze=True)\nstarbucks_sh.head(10)","ec9cf28c":"starbucks_sh.info()","32381bc6":"starbucks_sh.tail(10)","2333ce37":"fig, ax = plt.subplots(4, 1, figsize=(9, 18))\nsns.lineplot(data=starbucks_sh[['Open']], dashes=False, ax=ax[0])\nsns.lineplot(data=starbucks_sh[['High']], dashes=False, ax=ax[1])\nsns.lineplot(data=starbucks_sh[['Low']], dashes=False, ax=ax[2])\nsns.lineplot(data=starbucks_sh[['Close']], dashes=False, ax=ax[3])\nplt.show()","59603334":"starbucks_selected = starbucks_sh[starbucks_sh.index >= '2016']\nstarbucks_selected.head(10)","1fb42558":"fig, ax = plt.subplots(4, 1, figsize=(9, 18))\nsns.lineplot(data=starbucks_selected[['Open']], dashes=False, ax=ax[0])\nsns.lineplot(data=starbucks_selected[['High']], dashes=False, ax=ax[1])\nsns.lineplot(data=starbucks_selected[['Low']], dashes=False, ax=ax[2])\nsns.lineplot(data=starbucks_selected[['Close']], dashes=False, ax=ax[3])\nplt.show()","7294bb49":"splitter = int(0.8 * len(starbucks_selected))\n\nX_train = starbucks_selected.index[:splitter]\nX_test = starbucks_selected.index[splitter:]\n\ny_train = starbucks_selected['Close'][:splitter]\ny_test = starbucks_selected['Close'][splitter:]","89b558ab":"plt.figure(figsize=(14, 6))\n\ny_train.plot()\ny_test.plot()\nplt.show()","b2e588b8":"from sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import mean_squared_error as MSE\n\nimport xgboost as xgb","63925780":"starbucksdb = starbucks_sh[starbucks_sh.index >= '2016']\nstarbucksdb","f261a3a5":"pd.Series(y_train).values","49e4d1e2":"import statsmodels.api as sm","ba3acad2":"model = sm.tsa.arima.ARIMA(pd.Series(y_train).resample('MS').mean(), order=(1, 1, 1))\nres = model.fit()","9d91ac0d":"res.summary()","4e2c7ffb":"plt.plot(res.predict())\nplt.plot(pd.Series(y_train).resample('MS').mean())","386488a2":"history = [x for x in pd.Series(y_train).values]\npredictions = list()\n\nfor t in range(len(y_test)):\n    model = sm.tsa.arima.ARIMA(history, order=(1, 1, 1))\n    res = model.fit()\n    yhat = res.forecast()[0]\n    predictions.append(yhat)\n    history.append(y_test[t])","08990ae3":"from sklearn.metrics import mean_squared_error\nerror = mean_squared_error(y_test.values, predictions)\nprint(error)","70674027":"plt.figure(figsize=(14, 6))\nplt.plot(predictions)\nplt.plot(y_test.values)\nplt.show()","6874f7a3":"# **Starbucks Stock**\n## Learn Time Series\n---","324ecc74":"### **Preparation**"}}