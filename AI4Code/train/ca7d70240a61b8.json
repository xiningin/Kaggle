{"cell_type":{"349678d1":"code","1199c41d":"code","9e81e80e":"code","3587bf1e":"code","035d1a99":"code","cad6a65d":"code","9f9fa015":"code","917065af":"code","32c20914":"code","79b9899e":"code","4a34ee67":"code","b36c35ba":"code","21392d33":"code","84599379":"code","c6ee08d1":"code","997240d2":"code","5a86d326":"code","23786eff":"code","0b67fc3d":"code","8460ae5c":"code","b793e625":"code","9f908820":"code","a7abda08":"code","ff01b0e5":"code","e28217ef":"code","5dc743ee":"code","e1214c34":"code","e2ceb58f":"code","f08531c1":"code","8807f78d":"code","e000adc2":"code","777a0afa":"code","f8fdb144":"code","d7f25b50":"code","9ba8cdcc":"code","9b3620b2":"code","1d950891":"code","6a943511":"code","e6991251":"code","b0097345":"code","c21359e4":"code","e2beb773":"code","5dffc2e7":"code","b21abb59":"code","c270e5fe":"code","6df8acd9":"code","1c579951":"code","fdf0e4cc":"code","516a72c7":"code","f3bb847f":"code","07ade0a7":"code","2c7d6851":"code","a9ab3b9c":"code","22eef01a":"code","68fdf178":"code","be9005c3":"code","3dc94d11":"code","91a30790":"code","8b22b499":"code","76ea9472":"code","02ecd964":"code","1e6ee089":"code","2a8014fe":"code","e720d4e5":"code","39fb0197":"code","1e6fc696":"code","0f63f0b3":"code","77559487":"code","b2e4f362":"code","d66e3780":"code","363cb97c":"code","185de4c8":"code","f91c63c1":"code","e82f76b4":"code","c17a0a98":"code","f607abd6":"code","9ef5f259":"code","55767190":"code","ee7cec8e":"code","d42ff3de":"code","11bade94":"code","2a976d52":"code","9c68ef02":"code","e51680e2":"code","2715606d":"code","d85a87fa":"code","794005e5":"code","58ff007d":"code","ded0145e":"code","f3686230":"code","c9cd0ede":"code","0a50b20c":"code","daa81290":"code","a06d2da7":"code","8216caab":"code","c47f5790":"code","d6ba6f1d":"markdown","a0c4f59d":"markdown","39f2f80f":"markdown","bf3417ef":"markdown","fdcf1754":"markdown","b90a48d0":"markdown","9e3b8689":"markdown","b4080167":"markdown","ac4df301":"markdown","4f7dc199":"markdown","940fc931":"markdown","d4a8fe2f":"markdown","6c95350c":"markdown","f870e314":"markdown","377ec7da":"markdown","9bda0d58":"markdown","9da0e0f6":"markdown","ed0de74f":"markdown","11cb43c5":"markdown","e72db6f3":"markdown","80a6a737":"markdown","a1a17e5f":"markdown","57e4cf34":"markdown","dea323d7":"markdown","58d5195c":"markdown","ebb048cd":"markdown","4b640d35":"markdown","8cdf851a":"markdown","f2005f36":"markdown","2a3914c6":"markdown","fc6435b0":"markdown","54217f92":"markdown","4a8b3f2b":"markdown","9f434fae":"markdown","969ed999":"markdown","5230f89a":"markdown","4003b7ad":"markdown","754fab2a":"markdown","46609a62":"markdown","221d8f1f":"markdown","e9e2d322":"markdown","f00a33cd":"markdown","ae0a5966":"markdown","10a6b67e":"markdown","9bb4c413":"markdown","2c0017cf":"markdown","08ce113e":"markdown","8cf2f9e1":"markdown","fe1c5828":"markdown","4fedb094":"markdown","ccab6df2":"markdown","02c33d4e":"markdown","734fcb6e":"markdown","051b2662":"markdown","981eb2ce":"markdown","5630343d":"markdown","9137c662":"markdown","1e890a0d":"markdown","563c34b6":"markdown","eccb6364":"markdown","59b96244":"markdown","1d129cee":"markdown"},"source":{"349678d1":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns #visualition\nimport matplotlib.pyplot as plt\nimport missingno as msno\nimport scipy.stats as stats\nimport statsmodels.api as sm\nimport pylab \nimport scipy\nfrom scipy.stats import mannwhitneyu\nfrom scipy.stats import chi2_contingency\nfrom scipy.stats import kstest\nfrom yellowbrick.cluster import KElbowVisualizer\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report\nimport sklearn.metrics as metrics\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1199c41d":"germanCreditData=pd.read_csv(\"\/kaggle\/input\/german-credit-data-with-risk\/german_credit_data.csv\")","9e81e80e":"df=germanCreditData.copy()\n\ndf.head(10)","3587bf1e":"df.info()\nprint(\"\\n\")\nprint(\"shape: \",df.shape)\n","035d1a99":"df.drop(df.columns[[0]],axis=1,inplace=True)","cad6a65d":"df.columns","9f9fa015":"oldColumn = df.columns\n\nnewColumn = [\"age\",\"sex\",\"job\",\"housing\",\"savingAccounts\",\"checkingAccount\",\"creditAmount\",\"duration\",\"purpose\",\"risk\"]","917065af":"#df.rename(columns={\"Age\":\"age\"})\n\nfor i in range(len(newColumn)):\n    \n    df.rename(columns={oldColumn[i]:newColumn[i]},inplace=True)\n                \ndf","32c20914":"df.isnull().values.any()","79b9899e":"df.isnull().sum()","4a34ee67":"msno.bar(df,color=sns.color_palette(\"deep\"));","b36c35ba":"msno.heatmap(df);","21392d33":"msno.matrix(df,color=(0.5,0.3,0.2));","84599379":"df.savingAccounts=df.savingAccounts.fillna(value=\"no account\")\ndf.checkingAccount=df.checkingAccount.fillna(value=\"no account\")\ndf","c6ee08d1":"ekle = pd.DataFrame(\n        {'housing': pd.Categorical(\n              values =  df[\"housing\"],\n              categories=[\"free\",\"rent\",\"own\"]),\n\n         'savingAccounts': pd.Categorical(\n             values = df[\"savingAccounts\"],\n             categories=[\"no account\",\"little\",\"moderate\",\"rich\",\"quite rich\"]),\n\n         'checkingAccount': pd.Categorical(\n             values = df[\"checkingAccount\"],\n             categories=[\"no account\",\"little\",\"moderate\",\"rich\"])\n        }\n    )","997240d2":"df1 = df.copy()\nekle = ekle.apply(lambda x: x.cat.codes)\nekle.head()","5a86d326":"del df1[\"savingAccounts\"]\ndel df1[\"checkingAccount\"]\ndel df1[\"housing\"]\ndf1 = pd.concat([df1,ekle],axis=1)\ndf1.head()","23786eff":"df1=pd.get_dummies(df1, columns = [\"sex\"], prefix = [\"sex\"])\ndf1=pd.get_dummies(df1, columns = [\"risk\"], prefix = [\"risk\"])","0b67fc3d":"del df1[\"sex_male\"]\ndel df1[\"risk_bad\"]\ndf1.rename(columns={\"risk_good\":\"risk\",\n                  \"sex_female\":\"sex\"},inplace=True)","8460ae5c":"df.duration.plot(kind='hist',color='green',bins=20,figsize=(10,5))\nplt.title(\"duration Variable Histogram Chart\");","b793e625":"plt.subplot(2,1,1)\ndf.creditAmount.plot(kind='hist',color='pink',bins=50,figsize=(10,10))\nplt.title(\"creditAmount Variable Histogram Chart\");","9f908820":"stats.probplot(df.creditAmount, dist=\"norm\", plot=pylab)\npylab.show()","a7abda08":"stat, p = stats.kstest(df[\"creditAmount\"], 'norm')\nprint('Statistics=%.3f, p=%.3f' % (stat, p))\nalpha = 0.05\nif p > alpha:\n    print('Credit Amount is distributed normally(H0:fail to reject)')\nelse:\n    print('Credit Amount is not distributed normally.(H0:reject)')","ff01b0e5":"group1 = df1[\"creditAmount\"][df1[\"risk\"] == 1]\ngroup2 = df1[\"creditAmount\"][df1[\"risk\"] == 0]\nstat, p = scipy.stats.mannwhitneyu(group1,group2)\nprint('Statistics=%.3f, p=%.3f' % (stat, p))\nalpha = 0.05\nif p > alpha:\n    print('it is not significant between Risk and Credit Amount(H0:fail to reject)')\nelse:\n    print('it is significant between Risk and Credit Amount(H0:reject)')","e28217ef":"sns.set(style=\"ticks\", palette=\"pastel\")\nsns.boxplot(x=\"risk\",y=\"creditAmount\",\n             palette=[\"m\", \"g\"],\n            data=df)\nsns.despine(offset=10, trim=True)","5dc743ee":"\nsns.set(style=\"ticks\", palette=\"pastel\")\n# Draw a nested boxplot to show bills by day and time\nsns.boxplot(x=\"housing\",y=\"creditAmount\",\n            hue=\"risk\", palette=[\"m\", \"g\"],\n            data=df)\nsns.despine(offset=10, trim=True)","e1214c34":"sns.set(style=\"whitegrid\", palette=\"pastel\", color_codes=True)\nsns.violinplot(x=\"job\", y=\"creditAmount\", hue=\"risk\",\n               split=True, inner=\"quarts\",\n               palette={\"good\": \"G\", \"bad\": \"B\"},\n               data=df);\nsns.despine(left=True);","e2ceb58f":"df.purpose.value_counts()","f08531c1":"sns.set(style=\"whitegrid\")\nsns.boxenplot(x=\"purpose\", y=\"creditAmount\",\n              color=\"b\",\n              scale=\"linear\", data=df);","8807f78d":"sns.pairplot(df, height=3,\n                 vars=[\"creditAmount\",\"duration\"],hue=\"risk\");","e000adc2":"sns.barplot(x='sex',y='creditAmount',hue='risk',data=df);","777a0afa":"sns.boxplot(df.creditAmount);","f8fdb144":"Q1 = df1.creditAmount.quantile(0.25)\nQ3 = df1.creditAmount.quantile(0.75)\nIQR = Q3 - Q1","d7f25b50":"print(\"Q1:\",Q1)\nprint(\"Q3:\",Q3)\nprint(\"IQR:\",IQR)","9ba8cdcc":"upper_value = Q3 + 1.5*IQR\nlower_value = Q1 - 1.5*IQR","9b3620b2":"print(\"upper_value:\",upper_value)\nprint(\"lower_value:\",lower_value)","1d950891":"outlier_values = (df1.creditAmount < lower_value) | (df1.creditAmount > upper_value)","6a943511":"df1.creditAmount[outlier_values].value_counts().sum() ","e6991251":"upper_outlier = df1.creditAmount> upper_value\nupper_outlier.sum()","b0097345":"df1.creditAmount[upper_outlier] = upper_value","c21359e4":"sns.boxplot(df1.creditAmount);","e2beb773":"df1.columns","5dffc2e7":"print(\"Purpose : \",df.purpose.unique())\nprint(\"Sex : \",df.sex.unique())\nprint(\"Housing : \",df.housing.unique())\nprint(\"Saving accounts : \",df['savingAccounts'].unique())\nprint(\"Risk : \",df['risk'].unique())\nprint(\"Checking account : \",df['checkingAccount'].unique())","b21abb59":"df1.age.unique","c270e5fe":"stat, p = stats.kstest(df[\"age\"], 'norm')\nprint('Statistics=%.3f, p=%.3f' % (stat, p))\nalpha = 0.05\nif p > alpha:\n    print('Age is distributed normally(H0:fail to reject)')\nelse:\n    print('Age is not distributed normally.(H0:reject)')","6df8acd9":"group1 = df[\"age\"][df1[\"risk\"] == 1]\ngroup2 = df[\"age\"][df1[\"risk\"] == 0]\nstat, p = scipy.stats.mannwhitneyu(group1,group2)\nprint('Statistics=%.3f, p=%.3f' % (stat, p))\nalpha = 0.05\nif p > alpha:\n    print('it is not significant between Risk and Age(H0:fail to reject)')\nelse:\n    print('it is significant between Risk and Age(H0:reject)')","1c579951":"sns.swarmplot(x='risk',y='age',hue='sex',data=df1);","fdf0e4cc":"from sklearn.cluster import KMeans\ncolumns = ['job', 'creditAmount', 'duration', 'purpose', 'housing',\n       'savingAccounts', 'checkingAccount', 'sex', 'risk']\nkumeleme = df1.drop(columns,axis=1)\nkumeleme","516a72c7":"kmeans = KMeans()\nclust = KElbowVisualizer(kmeans, k = (2,20))\nclust.fit(kumeleme)\nclust.poof()","f3bb847f":"df1.head()","07ade0a7":"k_means = KMeans(n_clusters = 3).fit(kumeleme)\ncluster = k_means.labels_\nplt.scatter(df1.iloc[:,0], df.iloc[:,9], c = cluster, s = 60, cmap = \"winter\");","2c7d6851":"df1[\"age\"] = cluster","a9ab3b9c":"df1.age.value_counts()","22eef01a":"nl = \"\\n\"\ncrosstab = pd.crosstab(df1['age'], df1['risk'])\nchi2, p, dof, expected = stats.chi2_contingency(crosstab)\nprint(f\"Chi-square= {chi2}{nl}p-value= {p}{nl}Degrees of freedom= {dof}\")\nalpha = 0.05\nif p > alpha:\n    print('it is not significant between Age and Risk(H0:fail to reject)')\nelse:\n    print('it is significant between Age and Risk(H0:reject)')","68fdf178":"sns.countplot(x=\"age\",hue=\"risk\",data=df1);","be9005c3":"df.sex.value_counts()","3dc94d11":"sns.countplot(x=\"sex\",hue=\"risk\",data=df);","91a30790":"nl = \"\\n\"\ncrosstab = pd.crosstab(df1['sex'], df1['risk'])\nchi2, p, dof, expected = stats.chi2_contingency(crosstab)\nprint(f\"Chi-square= {chi2}{nl}p-value= {p}{nl}Degrees of freedom= {dof}\")\nalpha = 0.05\nif p > alpha:\n    print('it is not significant between Sex and Risk(H0:fail to reject)')\nelse:\n    print('it is significant between Sex and Risk(H0:reject)')","8b22b499":"df.risk.value_counts()","76ea9472":"df.housing.value_counts()","02ecd964":"sns.countplot(x=\"housing\",hue=\"risk\",data=df);","1e6ee089":"nl = \"\\n\"\ncrosstab = pd.crosstab(df1['housing'], df1['risk'])\nchi2, p, dof, expected = stats.chi2_contingency(crosstab)\nprint(f\"Chi-square= {chi2}{nl}p-value= {p}{nl}Degrees of freedom= {dof}\")\nalpha = 0.05\nif p > alpha:\n    print('it is not significant between Housing and Risk(H0:fail to reject)')\nelse:\n    print('it is significant between Housing and Risk(H0:reject)')","2a8014fe":"df.checkingAccount.value_counts()","e720d4e5":"sns.countplot(x=\"checkingAccount\",hue=\"risk\",data=df);","39fb0197":"nl = \"\\n\"\ncrosstab = pd.crosstab(df1['checkingAccount'], df1['risk'])\nchi2, p, dof, expected = stats.chi2_contingency(crosstab)\nprint(f\"Chi-square= {chi2}{nl}p-value= {p}{nl}Degrees of freedom= {dof}\")\nalpha = 0.05\nif p > alpha:\n    print('it is not significant between Checking Account and Risk(H0:fail to reject)')\nelse:\n    print('it is significant between Checking Account and Risk(H0:reject)')","1e6fc696":"df.savingAccounts.value_counts()","0f63f0b3":"sns.countplot(x=\"savingAccounts\",hue=\"risk\",data=df);","77559487":"nl = \"\\n\"\ncrosstab = pd.crosstab(df1['savingAccounts'], df1['risk'])\nchi2, p, dof, expected = stats.chi2_contingency(crosstab)\nprint(f\"Chi-square= {chi2}{nl}p-value= {p}{nl}Degrees of freedom= {dof}\")\nalpha = 0.05\nif p > alpha:\n    print('it is not significant between Saving Accounts and Risk(H0:fail to reject)')\nelse:\n    print('it is significant between Saving Accounts and Risk(H0:reject)')","b2e4f362":"risk2=df.risk.value_counts()","d66e3780":"sns.barplot( x=risk2.index,y=risk2.values,data=df);","363cb97c":"sns.countplot(x=\"purpose\",hue=\"risk\",data=df);","185de4c8":"nl = \"\\n\"\ncrosstab = pd.crosstab(df1['purpose'], df1['risk'])\nchi2, p, dof, expected = stats.chi2_contingency(crosstab)\nprint(f\"Chi-square= {chi2}{nl}p-value= {p}{nl}Degrees of freedom= {dof}\")\nalpha = 0.05\nif p > alpha:\n    print('it is not significant between Purpose and Risk(H0:fail to reject)')\nelse:\n    print('it is significant between Purpose and Risk(H0:reject)')","f91c63c1":"purpose_vs_Risk = pd.crosstab(index=df1[\"purpose\"], \n                             columns=df1[\"risk\"],\n                             margins=True)\n\npurpose_vs_Risk","e82f76b4":"df1.purpose[df1.purpose == \"domestic appliances\"] = \"furniture\/equipment\"","c17a0a98":"nl = \"\\n\"\ncrosstab = pd.crosstab(df1['purpose'], df1['risk'])\nchi2, p, dof, expected = stats.chi2_contingency(crosstab)\nprint(f\"Chi-square= {chi2}{nl}p-value= {p}{nl}Degrees of freedom= {dof}\")\nalpha = 0.05\nif p > alpha:\n    print('it is not significant between Purpose and Risk(H0:fail to reject)')\nelse:\n    print('it is significant between Purpose and Risk(H0:reject)')","f607abd6":"ekle1 = pd.DataFrame({'purpose': pd.Categorical(\n             values = df1[\"purpose\"],\n             categories=[\"repairs\",\"vacation\/others\",\"furniture\/equipment\"\n                         ,\"radio\/TV\",\"education\",\"business\",\"car\"])\n    }\n)","9ef5f259":"df2 = df1.copy()\nekle1 = ekle1.apply(lambda x: x.cat.codes)\nekle1.head()","55767190":"del df2[\"purpose\"]\ndf2 = pd.concat([df2,ekle1],axis=1)\ndf2.head()","ee7cec8e":"df1=pd.get_dummies(df1, columns = [\"purpose\"], prefix = [\"p\"])","d42ff3de":"del df1[\"p_repairs\"]\ndf1.head()","11bade94":"nl = \"\\n\"\ncrosstab = pd.crosstab(df1['job'], df1['risk'])\nchi2, p, dof, expected = stats.chi2_contingency(crosstab)\nprint(f\"Chi-square= {chi2}{nl}p-value= {p}{nl}Degrees of freedom= {dof}\")\nalpha = 0.05\nif p > alpha:\n    print('it is not significant between Job and Risk(H0:fail to reject)')\nelse:\n    print('it is significant between Job and Risk(H0:reject)')","2a976d52":"job_vs_Risk = pd.crosstab(index=df1[\"job\"], \n                             columns=df1[\"risk\"],\n                             margins=True)\n\njob_vs_Risk","9c68ef02":"df2.head()","e51680e2":"y = df2[\"risk\"]\nX = df2.drop([\"risk\"], axis = 1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.30, \n                                                    random_state=982)","2715606d":"xgb_tuned1 = XGBClassifier(learning_rate= 0.01, \n                                max_depth= 7, \n                                n_estimators= 1000, \n                                subsample= 0.7).fit(X_train, y_train)\ny_pred = xgb_tuned1.predict(X_test)\naccuracy_score(y_test,y_pred)","d85a87fa":"metrics.confusion_matrix(y_test,y_pred)","794005e5":"print(classification_report(y_test, y_pred))","58ff007d":"fpr, tpr, threshold = metrics.roc_curve(y_test, y_pred)\nroc_auc = metrics.auc(fpr, tpr)\nplt.title('Feature Characteristics')\nplt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)\nplt.legend(loc = 'lower right')\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0, 1])\nplt.ylim([0, 1])\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')\nplt.show()","ded0145e":"feature_imp = pd.Series(xgb_tuned1.feature_importances_,\n                        index=X_train.columns).sort_values(ascending=False)\nsns.barplot(x=feature_imp, y=feature_imp.index)\nplt.xlabel(\"Feature Significance Scores\")\nplt.ylabel('Features')\nplt.title(\"Significance Levels\")\nplt.show()","f3686230":"df1.head()","c9cd0ede":"y = df1[\"risk\"]\nX = df1.drop([\"risk\"], axis = 1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.30, \n                                                    random_state=982)","0a50b20c":"xgb_tuned2 = XGBClassifier(learning_rate= 0.01, \n                                max_depth= 7, \n                                n_estimators= 1000, \n                                subsample= 0.7).fit(X_train, y_train)\ny_pred = xgb_tuned2.predict(X_test)\naccuracy_score(y_test,y_pred)","daa81290":"metrics.confusion_matrix(y_test,y_pred)","a06d2da7":"print(classification_report(y_test, y_pred))","8216caab":"fpr, tpr, threshold = metrics.roc_curve(y_test, y_pred)\nroc_auc = metrics.auc(fpr, tpr)\nplt.title('Feature Characteristics')\nplt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)\nplt.legend(loc = 'lower right')\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0, 1])\nplt.ylim([0, 1])\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')\nplt.show()","c47f5790":"feature_imp = pd.Series(xgb_tuned2.feature_importances_,\n                        index=X_train.columns).sort_values(ascending=False)\n\nsns.barplot(x=feature_imp, y=feature_imp.index)\nplt.xlabel(\"Feature Significance Scores\")\nplt.ylabel('Features')\nplt.title(\"Significance Levels\")\nplt.show()","d6ba6f1d":"<a id=\"4\"><\/a>\n# Data Outlier","a0c4f59d":"<a id=\"5\"><\/a>\n# Data Visualition","39f2f80f":"* Old column names are replaced with new column names.","bf3417ef":"* Load file","fdcf1754":"* The number of data is observed for each variable with barplot.","b90a48d0":"* Unique values of observations are examined.","9e3b8689":"* Age variable","b4080167":"* Risk variable\n","ac4df301":"* IQR value calculation is made to observe excessive values.","4f7dc199":"* CheckingAccount variable","940fc931":"* SECOND TR\u0130AL ML MODEL","d4a8fe2f":"<h2>Content<\/h2>\nIt is almost impossible to understand the original dataset due to its complicated system of categories and symbols. Thus, I wrote a small Python script to convert it into a readable CSV file. Several columns are simply ignored, because in my opinion either they are not important or their descriptions are obscure. The selected attributes are:\n\n<b>Age <\/b>(numeric)<br>\n<b>Sex <\/b>(text: male, female)<br>\n<b>Job <\/b>(numeric: 0 - unskilled and non-resident, 1 - unskilled and resident, 2 - skilled, 3 - highly skilled)<br>\n<b>Housing<\/b> (text: own, rent, or free)<br>\n<b>Saving accounts<\/b> (text - little, moderate, quite rich, rich)<br>\n<b>Checking account <\/b>(numeric, in DM - Deutsch Mark)<br>\n<b>Credit amount<\/b> (numeric, in DM)<br>\n<b>Duration<\/b> (numeric, in month)<br>\n<b>Purpose<\/b>(text: car, furniture\/equipment, radio\/TV, domestic appliances, repairs, education, business, vacation\/others<br>\n<b>Risk <\/b> (Value target - Good or Bad Risk)<br>","6c95350c":"* SavingAccount variable","f870e314":"* Our data set consists of 11 columns and 1000 observations.\n* There are two types of data among variables. Data types are int and object.\n* Unnamed variable has no effect on the data set. Therefore, it will be removed from the data set in the next steps.\n* When we look at the information about the data set, it is determined that there is missing data in the SAving account and Checking amount section.","377ec7da":"* Categorical variables are examined and new variables are created from categorical variables using the dummy method and categorical methods.","9bda0d58":"* According to the graph, the most contradictory observations are observed in its own class in the housing variable.","9da0e0f6":"* Missing data is observed in SavingAccount and checkingAccount variables.","ed0de74f":"<a id=\"0\"><\/a>\n# Load and Check Data","11cb43c5":"**IQR (Interquartile Range)**","e72db6f3":"* Purpose Variable","80a6a737":"* Boxenplot chart shows outliers between creditAmount and purpose variable.","a1a17e5f":"* We have 10 variables in total, 2 of these variables are numeric and 8 of them are categorical. Each variable will be analyzed according to targe and standardization work will be done for it.","57e4cf34":"* The Pairplot chart shows the relationship between creditAmount and the duration variable.","dea323d7":"* The relationship between the heatmap chart and missing observations is examined.","58d5195c":"* Cleaning is done to standardize the column names in the data set. New column names and old column names are kept in the list for the operation.","ebb048cd":"* There is a 0.1 relationship between the Saving Account value and the Checking Account value.","4b640d35":"* The relationship between creditAmount and the sex variable is visualized according to the barplot chart.","8cdf851a":"There is a significant betweet Risk and Age features. We decided to classificate of variable Age.\nK-Means applied.","f2005f36":"* The relationship between CreditAmount and risk is analyzed with the boxplot chart.","2a3914c6":"* After Correction","fc6435b0":"* Is there any missing data?","54217f92":"* When the missing observation values are examined, it is confirmed that the relationship between the observations is low.\n","4a8b3f2b":"* Violinplot visualizes the data according to its quartiles. The place where the violin is the widest is the place where the creditAmount value repeats the most according to the job variable.","9f434fae":"<a id=\"2\"><\/a>\n# Standardization of Data","969ed999":"<a id=\"1\"><\/a>\n# Dataset Description","5230f89a":"* Total outliers.","4003b7ad":"* Sex variable","754fab2a":"<a id=\"3\"><\/a>\n# Missing Value ","46609a62":"* The relationship between creditAmount variable and job variable is visualized with violinplot.","221d8f1f":"# Missing data is Visualized","e9e2d322":"* The density of the values is between x = 0-50 and y = 0-10000.","f00a33cd":"* The graph is not distributed normally because the data in the CreditAmount variable is not around the line.","ae0a5966":"* The relationship between the credit amount and housing is visualized by the boxplot method according to risk.","10a6b67e":"**Outliers Value Correction**","9bb4c413":"# Introduction\n\n![](https:\/\/comps.canstockphoto.com\/credit-risk-drawings_csp11709232.jpg)\n\n## Context\n\nThe original dataset contains 1000 entries with 20 categorial\/symbolic attributes prepared by Prof. Hofmann. In this dataset, each entry represents a person who takes a credit by a bank. Each person is classified as good or bad credit risks according to the set of attributes.\n\n## Content\n\n1. [Load and Check Data](#0)\n1. [Dataset Description](#1)\n1. [Standardization of Data](#2)\n1. [Missing Value Analysis](#3)\n1. [Outlier Value Analysis](#4)\n1. [Variable Transformation](#5)\n1. [Exploratory Data Analysis](#6)","2c0017cf":"* The randomness between Saving Account and Checking Account observations is examined by looking at the matrix table.","08ce113e":"* The CreditAmount variable is skewed to the left so it is not distributed normally.","8cf2f9e1":"* Using the threshold values, outliers in the data set are detected.","fe1c5828":"* First 10 records in the Dataset","4fedb094":"* Customers may not have or may not have an account in the bank, so missing data are filled with \"no account\" information.","ccab6df2":"* The normality of the credit amount variable is examined with histogram and propplot graphs.","02c33d4e":"* Unnecessary variable deletion.","734fcb6e":"<a id=\"6\"><\/a>\n# ML Modeling","051b2662":"* SECOND TRIAL","981eb2ce":"*  Also Kruskal-wallis test shows that it is not distributed normally.","5630343d":"* Job Variable","9137c662":"There is no significant difference between the Job and Risk variable.","1e890a0d":"* How many are missing data in what variables?","563c34b6":"* Housing variable","eccb6364":"\nThere is no significant difference between the Purpose and Risk variable.\n\nSignificance can be gained by making various changes.\n\nWe decided to combine domestic appliances and furniture\/equipment.","59b96244":"* All outliers are upper outliers.","1d129cee":"* Check, delete successful. Our new number of variables is 10."}}