{"cell_type":{"e00970d0":"code","5c30140a":"code","f1b59c6c":"code","714a4a3d":"code","24f06266":"code","2e838346":"code","373e0ea8":"code","3efeff48":"code","649952b1":"code","9d9b2628":"code","5ab4b0f8":"code","536f24ce":"code","03c0c3c6":"code","79e6af26":"code","964811b9":"code","e489415b":"code","dba48426":"code","f1470efd":"code","fbb31d88":"code","a97ce702":"code","3476aa2b":"code","da4bbfa4":"code","a05a326c":"code","0ea77e7f":"code","67dd7465":"code","6584dd27":"code","4142121a":"code","3f92462f":"code","33fdfd13":"code","63072d68":"code","ec2fa1c1":"code","4ac555e7":"code","7c9d97cc":"code","80409590":"code","74c26b53":"code","2cdb25b3":"markdown","275ac1b5":"markdown","6e209c9e":"markdown","4bf4c590":"markdown","10bf543d":"markdown","ee5821e9":"markdown","247c6c71":"markdown","01be40a9":"markdown","14f472be":"markdown","565108e2":"markdown","e7d6b64c":"markdown","cbaef7ca":"markdown","b280b036":"markdown","ceeea9c5":"markdown","7b5e6ca0":"markdown","47e920e5":"markdown","e6658ca2":"markdown","620f3470":"markdown","ef9d7255":"markdown","30fd018d":"markdown","86368ad4":"markdown","e5c75f68":"markdown","c5acd57c":"markdown","9935d945":"markdown","287560da":"markdown","cd06e97f":"markdown","04b22967":"markdown","02575ef2":"markdown","3e271a87":"markdown","78e9f853":"markdown","10f84259":"markdown","7e070bc9":"markdown","d45d7ac2":"markdown","1198e4b1":"markdown","8a8558a1":"markdown","81f0da91":"markdown","0298142b":"markdown","49b7330d":"markdown","f19a0431":"markdown","6f8aeab9":"markdown","62af9aaa":"markdown","de3667f0":"markdown","ed4d3a9f":"markdown","6515fc10":"markdown"},"source":{"e00970d0":"# IMPORTS\n\n# Essential data analysis libs\nimport numpy as np\nimport pandas as pd\n\n# Basic dataviz libs\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Plotly: advanced and flexible dataviz libs\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nfrom plotly.subplots import make_subplots","5c30140a":"def default_layout(fig=None):\n    \"\"\"\n    Applies white background and gray line to x and y axis to a existent \n    or a new plotly figure\n    \n    Params\n    fig: plotly figure to apply default layout\n    \n    Return\n    Plotly figure with layout applied\n    \"\"\"    \n    if not fig:\n        fig = go.Figure()\n    \n    fig.update_layout(\n      plot_bgcolor='rgba(0,0,0,0)',\n    )\n    \n    fig.update_xaxes(showline=True, linewidth=2, linecolor='gray')\n    fig.update_yaxes(showline=True, linewidth=2, linecolor='gray')\n    \n    return fig","f1b59c6c":"# import dataset\npath = '\/kaggle\/input\/noshowappointments\/KaggleV2-May-2016.csv'\n\ndata = pd.read_csv(path)\ndata.head()","714a4a3d":"# Looking at the data types and null values\ndata.info()","24f06266":"# Casting id columns to object\ndata['PatientId'] = data.PatientId.astype('object')\ndata['AppointmentID'] = data.AppointmentID.astype('object')","2e838346":"# Casting date columns to datetime data type\ndata['ScheduledDay'] = pd.to_datetime(data.ScheduledDay)\ndata['AppointmentDay'] = pd.to_datetime(data.AppointmentDay)","373e0ea8":"bool_cols = [\n    'Scholarship',\n    'Hipertension',\n    'Diabetes',\n    'Alcoholism',\n    'SMS_received',\n    'Handcap'\n]\n\ndata[bool_cols].describe()","3efeff48":"data.Handcap.value_counts()","649952b1":"data['handcap_value'] = data.Handcap\ndata['Handcap'] = data.Handcap > 0","9d9b2628":"# And let's cast other columns to bool\nbool_cols.remove('Handcap')\n\nfor col in bool_cols:\n    data[col] = data[col].astype('bool')","5ab4b0f8":"data['No-show'].unique()","536f24ce":"# Yes it is. Let's cast it\ndata['No-show'] = data['No-show'] == 'Yes'\n\n# Also, this \"-\" could hinder us, let's rename this column\ndata = data.rename({'No-show': 'no_show'}, axis=1)\n\ndata['no_show'].unique()","03c0c3c6":"data.info()","79e6af26":"data.describe()","964811b9":"def plot_age_distribution(dataframe):\n    set_sns_default_customization()\n\n    fig, axes = plt.subplots(2, 1, figsize=(24,6), sharex=True)\n    fig.suptitle('Age distribution', fontsize=20)\n\n    sns.boxplot(ax=axes[0], x=dataframe.Age, color='#F28155');\n    sns.histplot(ax=axes[1], x=dataframe.Age, color='#F28155');\n\n    fig, axes = plt.subplots(2, 2, figsize=(24,8), sharex=True)\n    fig.suptitle('Age distribution by gender', fontsize=18)\n\n    query = 'Gender == \"M\"'\n    sns.boxplot(ax=axes[0, 0], x=dataframe.query(query).Age, color='#5E6DF5');\n    sns.histplot(ax=axes[1, 0], x=dataframe.query(query).Age, color='#5E6DF5');\n    axes[0, 0].set_title('Male distribution');\n\n\n    query = 'Gender == \"F\"'\n    sns.boxplot(ax=axes[0, 1], x=dataframe.query(query).Age, color='#E35CE6');\n    sns.histplot(ax=axes[1, 1], x=dataframe.query(query).Age, color='#E35CE6');\n    axes[0, 1].set_title('Female distribution');\n\nplot_age_distribution(data)","e489415b":"def plot_top_neighbourhoods(dataframe, top=30, x_label_position=200, subplot=None, title=''):\n    neighbourhood = pd.DataFrame(dataframe.Neighbourhood.value_counts()[:top]).reset_index()\n    neighbourhood['percent'] = dataframe.Neighbourhood.value_counts(normalize=True)[:top].values\n\n    neighbourhood.columns = ['neighbourhood', 'count', 'share']\n\n    if subplot:\n        bar = sns.barplot(\n            ax=subplot,\n            x='count', \n            y='neighbourhood',\n            data=neighbourhood    \n        )\n        \n        bar.set_title(title, fontsize=16)\n        \n    else:\n        set_plot_size(20,12)\n\n        bar = sns.barplot(\n            x='count', \n            y='neighbourhood',\n            data=neighbourhood    \n        );\n        \n        plt.title(f'Top 30 appointments by neighbourhood ({len(data.Neighbourhood.unique())} neighbourhoods on total)', fontsize=20)\n\n    for index, row in neighbourhood.iterrows():\n        bar.text(row['count']+x_label_position, row.name, str(round(row.share*100, 2))+'%', color='#323232', ha=\"center\", va=\"center_baseline\")\n    \n\nplot_top_neighbourhoods(data)","dba48426":"def plot_bool_features(dataframe, subplot=None, title=''):\n    data_bools = dataframe.select_dtypes('bool').drop('no_show', axis=1)\n\n    data_bools_plot = pd.DataFrame(columns=['quantity', 'hue'])\n\n    for col in data_bools:\n        data_bools_plot.loc[col, 'quantity'] = data_bools.query(f'{col}').count()[col]\n        data_bools_plot.loc[f'no_{col}', 'quantity'] = data_bools.query(f'not {col}').count()[col]\n\n        data_bools_plot.loc[col, 'hue'] = col\n        data_bools_plot.loc[f'no_{col}', 'hue'] = col\n\n    if subplot:\n        bar = sns.barplot(\n            ax=subplot,\n            x=data_bools_plot.index, \n            y=data_bools_plot.quantity,\n            hue=data_bools_plot.hue,\n            dodge=False\n        );\n        \n        bar.set_title(title, fontsize=16)\n        bar.get_legend().set_visible(False)\n        \n    else:\n        set_plot_size(20,8)\n        \n        bar = sns.barplot(\n            x=data_bools_plot.index, \n            y=data_bools_plot.quantity,\n            hue=data_bools_plot.hue,\n            dodge=False\n        );\n\n        bar.get_legend().set_visible(False)\n\n        plt.title('Boolean features counts', fontsize=20)\n        plt.show()\n\nplot_bool_features(data)","f1470efd":"def plot_handicap_values(dataframe, subplot=None, title='', y_label_position=3000):\n    data_handicap_values = pd.DataFrame(dataframe['handcap_value'].value_counts()).reset_index()\n\n    if subplot:\n        bar = sns.barplot(\n            ax=subplot,\n            x=data_handicap_values.index, \n            y=data_handicap_values.handcap_value,\n        )\n        \n        bar.set_title(title, fontsize=16)\n    else:\n        set_plot_size(20,8)\n\n        bar = sns.barplot(\n            x=data_handicap_values.index, \n            y=data_handicap_values.handcap_value,\n        )\n    \n        plt.title('Handicap value counts', fontsize=20)    \n\n    for index, row in data_handicap_values.iterrows():\n        bar.text(row['index'], row['handcap_value']+y_label_position, row['handcap_value'], ha=\"center\", va=\"center_baseline\")\n\n    \nplot_handicap_values(data)","fbb31d88":"def plot_time_series_appointments(dataframe, subplot=None, title=''):\n    data_time_series = dataframe.select_dtypes('datetime64[ns, UTC]').copy()\n\n    data_time_series_plot = pd.DataFrame()\n\n    for col in data_time_series:\n        temp = pd.DataFrame()\n\n        temp['date'] = data_time_series[col].dt.date\n        temp['appointments'] = 1\n        temp['date_type'] = col.replace('Day', '')\n\n        data_time_series_plot = data_time_series_plot.append(temp)\n\n    data_time_series_plot = data_time_series_plot.groupby(['date', 'date_type']).sum().reset_index()\n\n    if subplot:\n        lineplot = sns.lineplot(ax=subplot, data=data_time_series_plot, x=\"date\", y=\"appointments\", hue=\"date_type\")\n        lineplot.set_title(title, fontsize=16)\n    else:\n        sns.lineplot(data=data_time_series_plot, x=\"date\", y=\"appointments\", hue=\"date_type\")\n        \n        plt.title('Schedules and appointments time series', fontsize=20)\n        plt.show()\n        \nplot_time_series_appointments(data)","a97ce702":"# Same day appointment: indicates our suspicious \"emergencial attendences\"\ndata['same_day_appointment'] = data.ScheduledDay.dt.date == data.AppointmentDay.dt.date\n\n# Delta appointment: difference between appointment date and schedule date (that we see from May 2016)\ndata['delta_appointment'] = data.AppointmentDay.dt.date - data.ScheduledDay.dt.date\n\ndata.head()","3476aa2b":"data_no_show = pd.DataFrame(data['no_show'].value_counts()).reset_index()\ndata_no_show['percent'] = data['no_show'].value_counts(normalize=True).values\n\ndef plot_no_show_appointments(dataframe, title, y_axis='no_show', y_label_position=3000):\n    set_plot_size(20,8)\n\n    bar = sns.barplot(\n        x=dataframe['index'], \n        y=dataframe[y_axis],\n    )\n\n    for index, row in dataframe.iterrows():\n        bar.text(row['index'], row[y_axis]+y_label_position, str(round(row.percent,2)*100)+'%', ha=\"center\", va=\"center_baseline\")\n\n    plt.title(title, fontsize=20)\n    plt.show()\n    \nplot_no_show_appointments(data_no_show, 'No show appointments value counts')","da4bbfa4":"data_patients_no_show = data.query('no_show').copy()\ndata_patients_no_show = pd.DataFrame(data_patients_no_show.PatientId.value_counts()).reset_index()\ndata_patients_no_show.columns = ['patient_id', 'quantity']\n\ndata_patients_no_show.patient_id = data_patients_no_show.patient_id.map(lambda x: str(x))\n\ndata_patients_no_show_plot = data_patients_no_show.query(\"quantity > 5\")\n\nset_plot_size(20,14)\n\nbar = sns.barplot(\n    x=data_patients_no_show_plot.quantity, \n    y=data_patients_no_show_plot.patient_id\n)\n\nprint(f\"Total of patients 5+ no show: {len(data_patients_no_show_plot)}\")\n\nplt.title('5+ No show appointments by patient id', fontsize=20)\nplt.show()","a05a326c":"data_low_no_show = data.query(f\"PatientId not in {list(data_patients_no_show.patient_id)}\")\n\ndata_low_no_show_plot = pd.DataFrame(data_low_no_show.no_show.value_counts()).reset_index()\ndata_low_no_show_plot['percent'] = data_low_no_show.no_show.value_counts(normalize=True).values\n\nplot_no_show_appointments(data_low_no_show_plot, 'No show appointments value counts (without top no show patients)')","0ea77e7f":"data_patients_no_show['unique_no_show'] = data_patients_no_show.quantity == 1\n\ndata_patients_no_show_plot = pd.DataFrame(data_patients_no_show.unique_no_show.value_counts()).reset_index()\ndata_patients_no_show_plot['percent'] = data_patients_no_show.unique_no_show.value_counts(normalize=True).values\n\nplot_no_show_appointments(\n    data_patients_no_show_plot,\n    y_axis='unique_no_show',\n    y_label_position=300,\n    title='Unique no show appointments'\n)","67dd7465":"data_no_show = data.query('no_show').copy()","6584dd27":"plot_age_distribution(data_no_show)","4142121a":"fig, axes = plt.subplots(1, 2, figsize=(24,5), sharey=True)\nplt.suptitle('Age: 10 years groups', fontsize=20)\n\nbins = range(0, 120, 10)\n\nquery = 'Gender == \"M\"'\nsns.histplot(ax=axes[0], x=data_no_show.query(query).Age, color='#5E6DF5', bins=bins).set_title('Male', fontsize=16);\n\nquery = 'Gender == \"F\"'\nsns.histplot(ax=axes[1], x=data_no_show.query(query).Age, color='#E35CE6', bins=bins).set_title('Female', fontsize=16);","3f92462f":"fig, axes = plt.subplots(1, 2, figsize=(24,10))\n\nplot_top_neighbourhoods(data, x_label_position=300, subplot=axes[0], title='Population data')\nplot_top_neighbourhoods(data_no_show, x_label_position=60, subplot=axes[1], title='No show data')\n\nplt.suptitle('Neighbourhoods comparisson', fontsize=20)\nplt.show()","33fdfd13":"fig, axes = plt.subplots(2, 1, figsize=(24,12))\n\nplot_time_series_appointments(data, subplot=axes[0], title='Appointments time series by date type')\nplot_time_series_appointments(data_no_show, subplot=axes[1], title='No show appointments time series by date type')","63072d68":"fig, axes = plt.subplots(2, 2, figsize=(24,10), sharex=True)\nfig.suptitle('Delta appointment (in days) distribution', fontsize=20)\n\nsns.boxplot(\n    ax=axes[0, 0], \n    x=data.delta_appointment.dt.days,\n    color='#F28155'\n).set_title('Population data', fontsize=16);\n\nsns.histplot(\n    ax=axes[1, 0],\n    x=data.delta_appointment.dt.days, \n    color='#F28155', \n);\n\nsns.boxplot(\n    ax=axes[0, 1], \n    x=data_no_show.delta_appointment.dt.days,\n).set_title('No show data', fontsize=16);\n\nsns.histplot(\n    ax=axes[1, 1],\n    x=data_no_show.delta_appointment.dt.days, \n);","ec2fa1c1":"week_days = {\n    0: '0. Monday',\n    1: '1. Tuesday',\n    2: '2. Wednesday',\n    3: '3. Thursday',\n    4: '4. Friday',\n    5: '5. Saturday',\n    6: '6. Sunday'\n}\n\ndata['schedule_day_of_week'] = data.ScheduledDay.dt.dayofweek.map(week_days)\ndata['appointment_day_of_week'] = data.AppointmentDay.dt.dayofweek.map(week_days)\n\nscheduled_day_week = data.schedule_day_of_week.value_counts()\nscheduled_day_week = scheduled_day_week.reset_index().sort_values(by=['index'])\n\nappointment_day_week = data.appointment_day_of_week.value_counts()\nappointment_day_week = appointment_day_week.reset_index().sort_values(by=['index'])\n\ndata_no_show['schedule_day_of_week'] = data_no_show.ScheduledDay.dt.dayofweek.map(week_days)\ndata_no_show['appointment_day_of_week'] = data_no_show.AppointmentDay.dt.dayofweek.map(week_days)\n\nscheduled_day_week_no_show = data_no_show.schedule_day_of_week.value_counts()\nscheduled_day_week_no_show = scheduled_day_week_no_show.reset_index().sort_values(by=['index'])\n\nappointment_day_week_no_show = data_no_show.appointment_day_of_week.value_counts()\nappointment_day_week_no_show = appointment_day_week_no_show.reset_index().sort_values(by=['index'])\n\n\nfig, axes = plt.subplots(2, 2, figsize=(24,11))\nfig.suptitle('Appointments day of week frequency', fontsize=20)\n\nbar = sns.barplot(\n    ax=axes[0, 0],\n    x=scheduled_day_week['index'], \n    y=scheduled_day_week['schedule_day_of_week']\n).set_title('Population schedule day of week', fontsize=16)\n\nbar = sns.barplot(\n    ax=axes[0, 1],\n    x=appointment_day_week['index'], \n    y=appointment_day_week['appointment_day_of_week']\n).set_title('Population appointment day of week', fontsize=16)\n\nbar = sns.barplot(\n    ax=axes[1, 0],\n    x=scheduled_day_week_no_show['index'], \n    y=scheduled_day_week_no_show['schedule_day_of_week']\n).set_title('No show schedule day of week', fontsize=16)\n\nbar = sns.barplot(\n    ax=axes[1, 1],\n    x=appointment_day_week_no_show['index'], \n    y=appointment_day_week_no_show['appointment_day_of_week']\n).set_title('No show appointment day of week', fontsize=16)\n","4ac555e7":"fig, axes = plt.subplots(2, 1, figsize=(24,10))\nfig.suptitle('Boolean features count', fontsize=20)\n\naxes[0].axes.xaxis.set_visible(False)\naxes[1].tick_params(labelrotation=10)\n\nplot_bool_features(data, subplot=axes[0], title='Population data')\nplot_bool_features(data_no_show, subplot=axes[1], title='No show data')","7c9d97cc":"fig, axes = plt.subplots(2, 1, figsize=(24,10))\nfig.suptitle('Handicap value counts', fontsize=20)\n\n\nplot_handicap_values(data, subplot=axes[0], title='Population data')\nplot_handicap_values(data_no_show, subplot=axes[1], title='No show data', y_label_position=1000)","80409590":"no_show_age_median = data_no_show.Age.median()\n\ndata_no_show.delta_appointment = data_no_show.delta_appointment.dt.days\ndelta_days_median = data_no_show.delta_appointment.median()\n\ndata_no_show_medians = data_no_show.query(f\"Age <= {no_show_age_median} & delta_appointment <= {delta_days_median}\").copy()","74c26b53":"fig, axes = plt.subplots(2, 1, figsize=(24,10))\nfig.suptitle('Boolean features count', fontsize=20)\n\naxes[0].axes.xaxis.set_visible(False)\naxes[1].tick_params(labelrotation=10)\n\nplot_bool_features(data, subplot=axes[0], title='Population data')\nplot_bool_features(data_no_show_medians, subplot=axes[1], title=f'No show data: age ({int(no_show_age_median)}) and delta ({int(delta_days_median)} days) medians')","2cdb25b3":"We have a sparse-ish appointments by neighbourhoods. The top neighbourhood appointments correspond to about 7% of data, but the majority of neighbourhoods have a pretty fewer share of appointments. ","275ac1b5":"Let's check if handicap has some particularly between the datasets","6e209c9e":"### 6. Is there any seasonality or trend involved with no show appointments?","4bf4c590":"Now we have a tidy dataset with proper data types and no null occurences, let's take a fist look in its features to formulate some questions related to medical appointments absence.","10bf543d":"### 7. Is the period between scheduled day and appointment day affecting the number of no-show appointments?","ee5821e9":"# Introdution\n\nThis notebook aims to explore [Medical Appointment No Shows dataset](https:\/\/www.kaggle.com\/joniarroba\/noshowappointments), formulates and answer some questions about what causes medical appointment absences.","247c6c71":"If `no-show` column it's only yes and no values, could be a bool type as well.","01be40a9":"In this view, we can see that male distribution is more frequent than male distribuition. \n\nMale 0-20 years old and Female 20-50 years old are the most frequent values.","14f472be":"In terms of the bool features, we see that the majority of patients don't have disabilities (and no scholarship as well - scholarship refers to brazilian government subsidy *see https:\/\/www.kaggle.com\/joniarroba\/noshowappointments\/discussion\/29841* )\n\nSMS received is more balanced than the other bool features. Maybe that can leads to some conclusion afterwards.","565108e2":"Boolean features are pretty like in both dataset. Chronic illness and alcoholism seems not affect the appointment absence. \n\nIn the other hand, there are two features in no show dataset that are noteworthy: \n\n- sms received\n\nThe share is more equal in no show data than population data. Even patients that appears on appointments, mostly don't receive any sms. It seems that receive or no a sms don't affects directly in no show appointments. \n\nPS: By the fact that sms notification process exists in the appointments, maybe excluding it can leads to high no show appointments. The most certain to say is that incresing sms_receive likely won't decrease no show appointments. \n\n- same day appointment\n\nLike we saw in time series, appointments that scheduled and appointment date are the same, tends to have more patients that appears on appointments.","e7d6b64c":"We don't have a predominant gender in appointments with absence, but we see a lower age distribution than the population data (the whole dataset). \n\nMale age distribution has younger ages in absences appointments whereas in female age distribution is older and more frequent.\n\nLet's aggregate the ages into 10 years groups to check if we can see clearly the distribution. ","cbaef7ca":"### 8. Does the scheduled day affect the number of no-show appointments if it is a workday or a weekend?\n","b280b036":"### 5. Patient's neighbourhood could be a reason to absence?","ceeea9c5":"# 5 Conclusion\n\n**Results**: The data suggest that\n1. No show appointments tends to have more younger patients, but in fact, there is no relevant difference between distribution of Age between patients who showed up for the appointment versus the patients that did not show up for the appointment.\n2. There is a higher percentange of people that received an SMS and did not show up when compared to people who received an SMS and did show up.\n3. People that have a disease are more likely to show up for the appointment than people who do not have a disease.\n4. Being enrolled in the Scholarship program does not seem to make people more likely to show up to the appointment.\n\n**Limitations**: There are a couple of limitations with data:\n1. Most of our variables are categorical, which does not allow for a high level of statistical method\n2. The statistics used here are descriptive statistics, not inferential, meaning that we did not create any hypotheses or controlled experiments or inferences with our data.\n3. We do not have a lot of details for certain factors to draw conclusions. For the SMS_received example, the data shows that no-showers are more likely to receive an SMS. This may seem counter intuitive, but we do not have information on the conditions of when the SMS is sent. For example they may target No-showers with SMS, or they may send the SMS once the Patient has not checked in few minutes prior to their appointment.","7b5e6ca0":"No-show appointments tend to have a larger delta in days between the scheduled date and the appointment date.\n\nAs we saw in the time series, most of the appointments that the patient appears, have zero days between the scheduled date and the date of the consultation.","47e920e5":"# 2 Formulating questions\n","e6658ca2":"No show appointments follows the population appointments growth and decreasing. There no seasonality or another effect that affects appointments apparently.","620f3470":"### 3. Are no-show appointments associated with a certain gender?\n### 4.How is age affecting the patient's absence?","ef9d7255":"1. Is no show a real problem? There are a significant appointments that patients not showing up?\n2. There are a couple of patients that increase this not show up number (*aka outliers*)? \n3. Are no-show appointments associated with a certain gender?\n4. How is age affecting the patient's absence?\n5. Patient's neighbourhood could be a reason to absence?\n6. Is there any seasonality or trend involved with no show appointments?\n7. Is the period between scheduled day and appointment day affecting the number of no-show appointments?\n8. Does the scheduled day affect the number of no-show appointments if it is a workday or a weekend?\n9. Do SMS reminders decrease the number of absences?\n10. Are chronic illnesses like hypertension and diabetes affecting patient's absences?\n11. Is alcoholism a prominent factor in patient's absences? Are the absences frequent?","30fd018d":"Actually, these patient aren't enough to change the whole data about no show appointment. \n\nTherefore, the problem appears to be the high quantity of unique no show appointments more than recurrent patients that no show in appointments.","86368ad4":"There are a couple of features that are boolean data types according data dictionary. Let's check out if their values are proper to boolean assigment.","e5c75f68":"As wee see in data wrangling section, handicap with 0 value is has a huge amount comparing another values. This can tell us something too in forward analysis.","c5acd57c":"In whole data, we see a median about 38 years old and a interspersed high and low frequency throughout ages.\n\nHowever, when we split between gender, we see the clearly characteristic for each age and gender.\n\nMale appointments tends to have younger ages and his median follows the median whole data. In early ages (until about 10 years old) there are 2000+ appointments, but after that, we don't see this frequency anymore. It's sounds like male patients don't concern about heath care after this early age.\n\nOn the other hand, we see the opposite in Female appointments distribution. A not so high frequency in early ages, but a quite  consistent appointments throughout the ages.\n\n\n","9935d945":"Handicap values are pretty same in both datasets.","287560da":"### 9. Do SMS reminders decrease the number of absences?\n### 10. Are chronic illnesses like hypertension and diabetes affecting patient's absences?\n### 11. Is alcoholism a prominent factor in patient's absences? Are the absences frequent?","cd06e97f":"Age and delta days between scheduled and appointment date maybe could have some effect on no show appointments.\n\nLet's dive in on these features to find out if it's true and check their values concentrated on median.\n","04b22967":"So far we have a consistent dataset with properly data types and no null values. Let's move foward to analyze this dataset.","02575ef2":"There is a interesting fact about the data appointments. Until May 2016, schedule and appointment occured in same day (since don't exists null date values in dataset, as we see in data wrangling section).\n\n\nBut from this month and on, there are a highs distances between schedule and appointments dates. \n\nWhat happened before and after May 2016? Is this possible that before May 2016 it was just exists emergencial attendances and after this period begins a scheduled appointments?\n\nLet's create two new features on dataset from this characteristics.","3e271a87":"Considering age and delta medians dataset, we see that hipertension, diabetes and alcoholism tends to zero. Other features remains like the previous no show dataset. ","78e9f853":"# 4 Data Analysis\n\nSo far we have a pretty notion about the whole data. Let's start to answer our initial questions.","10f84259":"Each dataset's row contains an appointment data, its feature are:\n- **PatientId**: patient unique identification\n- **AppointmentID**: appointment unique identification\n- **Gender**: patient gender\n- **ScheduledDay**: appointment scheduled date\n- **AppointmentDay**: appointment date\n- **Age**: patient age\n- **Neighbourhood**: patient neighbourhood\n- **Scholarship**: indicates if patient have government scholarship\n- **Hipertension**: indicates if patient have hipertension\n- **Diabetes**: indicates if patient have diabetes\n- **Alcoholism**: indicates if patient have alcoholism\n- **Handcap**: indicates how many disabilities condition have\n- **SMS_received**: indicates if the patient received a sms reminder about the appointment\n- **No-show**: indicates if the patient attended the appointment","7e070bc9":"Regarding to data types, we'll change some columns according the following:\n\n- **Identification columns to object data type**: According data dictionary (and column names itself), `PatientId` and `AppointmentID` are identification columns. There are no reason for they would be numeric columns.\n\n- **Date columns to proper data type**: Also it'll need to cast date columns to datetime type.\n\n- **Boolean numeric representation**: Some columns are boolean","d45d7ac2":"# 3 Exploratory","1198e4b1":"Handcap should be a boolean column, but its max value is 4. \n\nConsidering the 3rd quartile is zero, values > 0 could be outliers.","8a8558a1":"### 2. There are a couple of patients that increase this not show up number (aka outliers)?","81f0da91":"There are no issues involving null values. \n\n\n","0298142b":"# 1 Data wrangling","49b7330d":"Well, it seems not be outliers, but real int type. \n\nBut most values are zero, and that could be mean something. Let's make a new column named `handcap_value`, that remains the int data type. Handcap will be a bool type: if zero, false, otherwise, true.\n\n*PS:* according [this comment](https:\/\/www.kaggle.com\/joniarroba\/noshowappointments\/discussion\/29699) of dataset creator, handcap is actually a int type.","f19a0431":"The patient neighbourhood is pretty like in two dataset. The neighborhoods in no show appointments follows the share of population data.","6f8aeab9":"It seems that we have some \"villains\" that affects the no show quantity. The top one has 18 no show up appointments only by himself (or herself)!\n\nLet's check how it would be the no show reality without these patients.","62af9aaa":"### 1. Is no show a real problem? There are a significant appointments that patients not showing up?","de3667f0":"Yes, it appears to be a real problem. In 20% of the data, patients no show to the appointments.\n\nLet's dive in the other questions to check this problem deeper.","ed4d3a9f":"Yes, patients that have only one no show appointments are the most frequently between the no show patients.\n\nIn other words, the problem appears not to be involving some patients, but a general behavior on no show patient.","6515fc10":"We can see that Monday, Tuesday and Wednesday have more absences then other days of week. But we see this exactly characteristic in population data.\n\nSo, day of week seems not to affect the no show appointments."}}