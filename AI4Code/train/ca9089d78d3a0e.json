{"cell_type":{"027eada2":"code","58dbed22":"code","66d1d8aa":"code","8446c075":"code","6d32422c":"code","e53705af":"code","c020e197":"code","7f6f0247":"code","0d22dc2d":"code","28ad59c3":"code","12bcc3eb":"code","aeebbdbd":"code","3d69067c":"code","94ac90be":"code","bc83f415":"code","04906ea3":"code","5390b9c2":"code","656de8ff":"code","994a2d8f":"code","e0a6b520":"code","ec3387a4":"code","865b36fa":"code","6873f2e2":"code","4d46706a":"code","b3b40079":"code","9c97047e":"code","dc889187":"markdown","86502088":"markdown","0a377ade":"markdown","e6468a13":"markdown","9c9c6a4d":"markdown","9f2d0cfe":"markdown","eb497da7":"markdown","ea97813b":"markdown","dc79a4a5":"markdown","b819f7ac":"markdown","e5164d26":"markdown","3e30edb0":"markdown","3f85360b":"markdown","54a72dd4":"markdown","a8c84758":"markdown","694a693f":"markdown","3d55b0bd":"markdown","c92f10af":"markdown","dfa16998":"markdown","95ac2e11":"markdown","313ae47d":"markdown","d7eea49f":"markdown","0e0ea7fd":"markdown","bf64403a":"markdown","14ec6272":"markdown","66a3fea1":"markdown","38a5c88c":"markdown","da726a72":"markdown","421d54d8":"markdown","4b6d7bd2":"markdown","b37b1bf3":"markdown"},"source":{"027eada2":"# Warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Data and analysis\nimport pandas as pd\nimport numpy as np\n\n# Visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nsns.set(style='darkgrid')\nplt.rcParams[\"patch.force_edgecolor\"] = True","58dbed22":"df = pd.read_csv('..\/input\/BlackFriday.csv')","66d1d8aa":"# First 5 rows:\ndf.head(5)","8446c075":"print(df.info())\nprint('Shape: ',df.shape)","6d32422c":"total_miss = df.isnull().sum()\nperc_miss = total_miss\/df.isnull().count()*100\n\nmissing_data = pd.DataFrame({'Total missing':total_miss,\n                            '% missing':perc_miss})\n\nmissing_data.sort_values(by='Total missing',\n                         ascending=False).head(3)","e53705af":"print('Unique Values for Each Feature: \\n')\nfor i in df.columns:\n    print(i, ':',df[i].nunique())","c020e197":"# Info about products\nprint('Number of products:',df['Product_ID'].nunique())\nprint('Number of categories:',df['Product_Category_1'].unique().max())\nprint('Highest and lowest purchase:',\n      df['Purchase'].max(),',',df['Purchase'].min())","7f6f0247":"# Info about shoppers\nprint('Number of shoppers:',df['User_ID'].nunique())\nprint('Years in city:',df['Stay_In_Current_City_Years'].unique())\nprint('Age Groups:',df['Age'].unique())","0d22dc2d":"count_m = df[df['Gender']=='M'].count()[0]\ncount_f = df[df['Gender']=='F'].count()[0]","28ad59c3":"print('Number of male clients:',count_m)\nprint('Number of female clients:',count_f)","12bcc3eb":"print('Female Purchases:',round(df[df['Gender']=='F']['Purchase'].sum()\/count_f,3))\nprint('Male Purchases:',round(df[df['Gender']=='M']['Purchase'].sum()\/count_m,3))","aeebbdbd":"plt.pie(df.groupby('Gender')['Product_ID'].nunique(),labels=['Male','Female'],\n       shadow=True, autopct='%1.1f%%',colors=['steelblue','cornflowerblue'])\nplt.title('Unique Item Purchases by Gender')\nplt.show()","3d69067c":"# Individual groupby dataframes for each gender\ngb_gender_m = df[df['Gender']=='M'][['Product_Category_1','Gender']].groupby(by='Product_Category_1').count()\ngb_gender_f = df[df['Gender']=='F'][['Product_Category_1','Gender']].groupby(by='Product_Category_1').count()\n\n# Concatenate and change column names\ncat_bygender = pd.concat([gb_gender_m,gb_gender_f],axis=1)\ncat_bygender.columns = ['M ratio','F ratio']\n\n# Adjust to reflect ratios\ncat_bygender['M ratio'] = cat_bygender['M ratio']\/df[df['Gender']=='M'].count()[0]\ncat_bygender['F ratio'] = cat_bygender['F ratio']\/df[df['Gender']=='F'].count()[0]\n\n# Create likelihood of one gender to buy over the other\ncat_bygender['Likelihood (M\/F)'] = cat_bygender['M ratio']\/cat_bygender['F ratio']\n\ncat_bygender['Total Ratio'] = cat_bygender['M ratio']+cat_bygender['F ratio']","94ac90be":"cat_bygender.sort_values(by='Likelihood (M\/F)',ascending=False)","bc83f415":"# Encoding the age groups\ndf['Age_Encoded'] = df['Age'].map({'0-17':0,'18-25':1,\n                          '26-35':2,'36-45':3,\n                          '46-50':4,'51-55':5,\n                          '55+':6})\n","04906ea3":"prod_byage = df.groupby('Age').nunique()['Product_ID']\n\nfig,ax = plt.subplots(1,2,figsize=(14,6))\nax = ax.ravel()\n\nsns.countplot(df['Age'].sort_values(),ax=ax[0], palette=\"Blues_d\")\nax[0].set_xlabel('Age Group')\nax[0].set_title('Age Group Distribution')\nsns.barplot(x=prod_byage.index,y=prod_byage.values,ax=ax[1], palette=\"Blues_d\")\nax[1].set_xlabel('Age Group')\nax[1].set_title('Unique Products by Age')\n\nplt.show()","5390b9c2":"spent_byage = df.groupby(by='Age').sum()['Purchase']\nplt.figure(figsize=(12,6))\n\nsns.barplot(x=spent_byage.index,y=spent_byage.values, palette=\"Blues_d\")\nplt.title('Mean Purchases per Age Group')\nplt.show()","656de8ff":"plt.figure(figsize=(12,6))\nsns.countplot(df['Occupation'])\nplt.title('Occupation Distribution')\nplt.show()","994a2d8f":"plt.figure(figsize=(12,6))\nprod_by_occ = df.groupby(by='Occupation').nunique()['Product_ID']\n\nsns.barplot(x=prod_by_occ.index,y=prod_by_occ.values)\nplt.title('Unique Products by Occupation')\nplt.show()","e0a6b520":"spent_by_occ = df.groupby(by='Occupation').sum()['Purchase']\nplt.figure(figsize=(12,6))\n\nsns.barplot(x=spent_by_occ.index,y=spent_by_occ.values)\nplt.title('Total Money Spent per Occupation')\nplt.show()","ec3387a4":"plt.figure(figsize=(12,6))\nprod_by_cat = df.groupby('Product_Category_1')['Product_ID'].nunique()\n\nsns.barplot(x=prod_by_cat.index,y=prod_by_cat.values, palette=\"Blues_d\")\nplt.title('Number of Unique Items per Category')\nplt.show()","865b36fa":"category = []\nmean_purchase = []\n\n\nfor i in df['Product_Category_1'].unique():\n    category.append(i)\ncategory.sort()\n\nfor e in category:\n    mean_purchase.append(df[df['Product_Category_1']==e]['Purchase'].mean())\n\nplt.figure(figsize=(12,6))\n\nsns.barplot(x=category,y=mean_purchase)\nplt.title('Mean of the Purchases per Category')\nplt.xlabel('Product Category')\nplt.ylabel('Mean Purchase')\nplt.show()","6873f2e2":"# Dictionary of product IDs with minimum purchase\nprod_prices = df.groupby('Product_ID').min()['Purchase'].to_dict()","4d46706a":"def find_price(row):\n    prod = row['Product_ID']\n    \n    return prod_prices[prod]","b3b40079":"df['Price'] = df.apply(find_price,axis=1)","9c97047e":"df['Amount'] = round(df['Purchase']\/df['Price']).astype(int)","dc889187":"Now, the purchase value for each item ID is grouped by what one could asume is the amount of items purchased. Then, the prices and quantities calculated below are an estimate, but it is a very good one:","86502088":"### Libraries\n\nWe will be using the Pandas, Numpy, Seaborn, and Matplotlib Python libraries for this analysis.","0a377ade":"## <font color='blue'>Estimate of price and quantity of purchase\n<\/font>\nSince the **Purchases** feature alludes to how much a customer paid for an unknown amount of a certain item, let's make a bold assumption that the lowest purchase paid by product is the price of said item:","e6468a13":"# Black Friday\n### A study of sales trough consumer behaviours\nhttps:\/\/www.kaggle.com\/mehdidag\/black-friday\n\n Dataset of 550 000 observations about the black Friday in a retail store, it contains different kinds of variables either numerical and categorical.\n","9c9c6a4d":"Interestingly enough, our most popular categories are not the ones making the most money. This appears to be a big store, and they may be aware of this. Yet this same form of analysis can be used in the case of a smaller store that might not be aware, and it could be very useful.","9f2d0cfe":"***","eb497da7":"**This Kernel is still in progress, and we appreciate any constructive insights. If you found this helpful, please give this Kernel an upvote, as it keeps up motivated to continue to progress and share with the community.**","ea97813b":"It's quite apparent that the largest age group amongst the customers is 26-35. Interestingly, the distribution of product purchase, in terms of quantity, does not vary greatly amongst the age groups. This means that, though the 26-35 age group is the most popular, the other age groups purchase almost as many unique items as them. But does this mean that the amount of money spent amongst the age groups is the same? Let's see...","dc79a4a5":"Since most products will belong to only one category, it makes sense for less products to have a second category, let alone a third one.","b819f7ac":"We can see that the number of male clients recorded exceeds the number of female clients recorded by almost 4 times. For this reason, it will be much more informational to analyze **Gender** by using ratios instead of counting each entry. Lets see how much each gender spent in regards to eachself:","e5164d26":"## <font color='blue'>Age<\/font>\nSince as of now, **Age** values are strings, lets encode each group so they can be represented with an integer value which a machine learning algorithm can understand:","3e30edb0":"***","3f85360b":"## <font color='blue'>Occupation<\/font>","54a72dd4":"## <font color='blue'>Products<\/font>","a8c84758":"Our data clearly shows that the amount of money made from each age group correlates proportionally with the amount of customers within the age groups. This can be valuable information for the store, as it might want to add more products geared towards this age group in the future, or perhaps work on marketing different items to increase a broader diversity in the age groups of their customers.","694a693f":"***","3d55b0bd":"Category labels 1, 5, and 8 clearly have the most items within them. This could mean the store is known for that item, or that the category is a broad one.","c92f10af":"Here we explore the products themselves. This is important, as we do not have labeled items in this dataset. Theoretically, a customer could be spending $5,000 on 4 new TVs, or 10,000 pens. This difference matters for stores, as their profits are affected. Since we do not know what the items are, let's explore the categories of the items.","dfa16998":"***","95ac2e11":"Lets now explore the unique values in some of the features. Remember there is a total of 537577 entries:","313ae47d":"This table tells us a lot about how likely a type of product is to be bought in regards of gender. For instance, men are almost 3 times as likely to buy an item in category 17, while women are almost 2 times as likely to buy a product in category 14.","d7eea49f":"Although almost even, women did purchase a slightly wider array of products than men did. Now, lets analyze the proportions of each gender's purchase in terms of the product categories:","0e0ea7fd":"## <font color='blue'>Gender<\/font>\nLets first find whether the data is uniformly distributed by gender by looking at how many entries belong to each one:","bf64403a":"This sections draws some insights on our data in terms of the occupation of the customers.","14ec6272":"## <font color='blue'>Missing Values<\/font>\n\n","66a3fea1":"Once again, the distribution of the mean amount spent within each occupation appears to mirror the distribution of the amount of people within each occupation. This is fortunate from a data science perspective, as we are not working with odd or outstanding features. Our data, in terms of age and occupation seems to simply make sense.","38a5c88c":"## <font color='blue'>Unique Values<\/font>","da726a72":"# Data Import and Feature Exploration\n\nLet's import the data into a Pandas dataframe and check out some of its broader aspects to see what we're working with.","421d54d8":"In Progress...","4b6d7bd2":"***","b37b1bf3":"***"}}