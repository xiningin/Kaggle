{"cell_type":{"fc7f0827":"code","1d934d47":"code","522e1073":"code","b470e3d1":"code","c462e63a":"code","6880bc5d":"code","9dfde605":"code","71969317":"code","b315684a":"code","6e2338f4":"markdown","3033aae2":"markdown","7632ea5b":"markdown","824a1666":"markdown"},"source":{"fc7f0827":"# Import Data Processing Modules\n\nimport pandas as pd\nimport numpy as np\n","1d934d47":"# Import Dataset and Show Head\n\ndf = pd.read_csv(\"..\/input\/africa_recession.csv\")\ndf.head()\n","522e1073":"# Define X and Y Variables\n\ndependent_variable = 'growthbucket'\n\nX = df[df.columns.difference([dependent_variable])]\nY = df[dependent_variable]\n","b470e3d1":"from sklearn.model_selection import train_test_split\n\ntrain_features, val_features, train_targets, val_targets = train_test_split(X, Y, \n                                                                            test_size=0.30, \n                                                                            #stratify=Y,\n                                                                            random_state=7)\n","c462e63a":"mean = np.mean(train_features, axis=0)\ntrain_features -= mean\nval_features -= mean\nstd = np.std(train_features, axis=0)\ntrain_features \/= std\nval_features \/= std\n","6880bc5d":"# Load Basic ML Packages\n\nfrom sklearn import metrics\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\n","9dfde605":"# Import the Random Forest Classifier from Sklearn\n\nfrom sklearn.ensemble import RandomForestClassifier\n\n","71969317":"# The class_weight Parameter is Set to \"balanced\" to Account for the Class Imbalance\n\nensemble = RandomForestClassifier(bootstrap=True, class_weight='balanced', criterion='gini',\n                                  max_depth=1000, max_features='auto', max_leaf_nodes=10,\n                                  min_impurity_decrease=0.0, min_impurity_split=None,\n                                  min_samples_leaf=1, min_samples_split=2,\n                                  min_weight_fraction_leaf=0.0, n_estimators=40000, n_jobs=None,\n                                  oob_score=False, random_state=0, verbose=0, warm_start=False)\n","b315684a":"# Fit the Model to the Training Set and Test its Accuracy\n\nensemble.fit(train_features, train_targets)\n\npredicted = ensemble.predict(val_features)\n\nprint('Accuracy achieved is: ' + str(np.mean(predicted == val_targets)))\nprint(metrics.classification_report(val_targets, predicted, target_names=(\"0\", \"1\"))),\nmetrics.confusion_matrix(val_targets, predicted)\n","6e2338f4":"# Normalize Data Using Training Set Statistics","3033aae2":"# Import the Dataset\n","7632ea5b":"# Conduct Machine Learning Using Sci-Kit Learn Random Forest Package","824a1666":"# Split Data into Training and Test Sets"}}