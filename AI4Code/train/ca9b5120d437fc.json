{"cell_type":{"8de32628":"code","f4229ecd":"code","46e32cf7":"code","01f17139":"code","7bdbf4d6":"code","92d23fbf":"code","3a3742cc":"code","d9172518":"code","ac10a584":"code","80de5983":"code","cc897bec":"code","b332aae9":"code","f691a87e":"code","44165504":"code","ded88d9f":"code","2ba62cd3":"code","638c8d38":"code","d565d672":"code","89d55d1b":"code","015ec1a4":"code","35be86db":"code","ba52e414":"code","2db199d8":"markdown","336c23f9":"markdown","b861abe7":"markdown","d0cdc9cb":"markdown","72a0c1d8":"markdown","fa337042":"markdown"},"source":{"8de32628":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f4229ecd":"df = pd.read_csv('\/kaggle\/input\/dictionary-for-sentiment-analysis\/dict.csv', encoding = 'latin1', header = None)","46e32cf7":"df.head()","01f17139":"df.columns = ['review', 'level']","7bdbf4d6":"df.head()","92d23fbf":"import nltk","3a3742cc":"from nltk.sentiment.vader import SentimentIntensityAnalyzer","d9172518":"sid = SentimentIntensityAnalyzer()","ac10a584":"test = 'he is the best boy in the class'","80de5983":"sid.polarity_scores(test)","cc897bec":"sid.polarity_scores(df['review'].iloc[4])","b332aae9":"df['scores'] = df['review'].apply(lambda re: sid.polarity_scores(re))","f691a87e":"df.head()","44165504":"df['compound'] = df['scores'].apply(lambda d: d['compound'])","ded88d9f":"df.head()","2ba62cd3":"df['compound_label'] = df['compound'].apply(lambda number: 'positive' if number>=0 else 'negative')","638c8d38":"df.head()","d565d672":"from sklearn.metrics import confusion_matrix, classification_report, accuracy_score","89d55d1b":"print(accuracy_score(df['level'], df['compound_label']))","015ec1a4":"print(classification_report(df['level'], df['compound_label']))","35be86db":"print(confusion_matrix(df['level'], df['compound_label']))","ba52e414":"df","2db199d8":"**select compound number******","336c23f9":"**Create another new column******","b861abe7":"**Use confusion_matrix, classification_report, accuracy_score**","d0cdc9cb":"**Create Sentiment Analyzer**","72a0c1d8":"**New column score**","fa337042":"Create columns name"}}