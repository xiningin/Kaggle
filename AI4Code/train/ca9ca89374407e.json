{"cell_type":{"9aec3246":"code","01d0facd":"code","5514c7ed":"code","d25a7606":"code","d931daa3":"code","0b502033":"code","3156575a":"code","063c31c6":"code","5110e371":"code","810547d3":"code","91218f55":"code","9ac3ea8b":"code","eaf221d0":"code","f89af819":"markdown"},"source":{"9aec3246":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","01d0facd":"data=pd.read_csv(\"..\/input\/oranges-vs-grapefruit\/citrus.csv\")","5514c7ed":"data.head(10)","d25a7606":"data.info()","d931daa3":"data.describe()","0b502033":"x=data.iloc[:,1:]\ny=pd.DataFrame([1 if each==\"orange\" else 0 for each in data[\"name\"]],columns=[\"features\"])","3156575a":"g=sns.PairGrid(data,hue=\"name\")\ng.map_diag(plt.hist)\ng.map_offdiag(plt.scatter)\ng.add_legend()","063c31c6":"# Feature Scaling\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx= sc.fit_transform(x)","5110e371":"# Then lets create x_train, y_train, x_test, y_test arrays\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.2,random_state=42)","810547d3":"# Evaluating the ANN\nfrom keras.wrappers.scikit_learn import KerasClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom keras.models import Sequential # initialize neural network library\nfrom keras.layers import Dense # build our layers library\ndef build_classifier():\n    classifier = Sequential() # initialize neural network\n    classifier.add(Dense(units = 8, kernel_initializer = 'uniform', activation = 'relu', input_dim = x_train.shape[1]))\n    classifier.add(Dense(units = 4, kernel_initializer = 'uniform', activation = 'relu'))\n    classifier.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))\n    classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\n    return classifier\nclassifier = KerasClassifier(build_fn = build_classifier, epochs = 100)\naccuracies = cross_val_score(estimator = classifier, X = x_train, y = y_train, cv = 3)\nmean = accuracies.mean()\nvariance = accuracies.std()\nprint(\"Accuracy mean: \"+ str(mean))\nprint(\"Accuracy variance: \"+ str(variance))","91218f55":"#fit the models\nclassifier.fit(x_train, y_train, \n               batch_size = 60, \n               epochs = 100, verbose=2)","9ac3ea8b":"#x_test accuracy\nprint(classifier.score(x_test,y_test))","eaf221d0":"y_output=classifier.predict(x)","f89af819":"***Welcome my Orages-Grapefruit Kernel\n> in this  kernel we will analize and compile oranges-grapefruit data with using Keras ANN\n\n"}}