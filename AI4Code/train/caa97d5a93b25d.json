{"cell_type":{"5df87c89":"code","d6121528":"code","9504f862":"code","0486771f":"code","f1adfb54":"code","b221f598":"code","17651825":"code","a9405e48":"code","e245b768":"code","ae9dab2a":"code","f448b964":"code","ef39fc04":"code","ec754faa":"code","0d683f4e":"code","19cbbc5d":"code","454ce3c9":"code","058e34fb":"code","19f0613d":"code","f989ec44":"code","3a5d678b":"code","e00c9255":"code","657ed0c4":"code","4c38c5db":"code","20594815":"code","d9e10791":"code","1c30a349":"code","e1c9c346":"code","7bdee91b":"markdown","71b5ae76":"markdown","9fda4304":"markdown","28708728":"markdown","e854cfca":"markdown","7588b18e":"markdown","9d49eba6":"markdown","81006fe4":"markdown","90bb3231":"markdown","9c30b099":"markdown","bf4ac3ac":"markdown","fb115dba":"markdown","be82fc5a":"markdown","5851d0f8":"markdown","1abf54fd":"markdown","61627289":"markdown","28c81405":"markdown","02310f8b":"markdown","9272cffd":"markdown","d1dfdd9e":"markdown","1a2d1a9f":"markdown","01275d81":"markdown","a824c0e1":"markdown","3afc55ae":"markdown"},"source":{"5df87c89":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","d6121528":"df = pd.read_csv('..\/input\/haberman.csv', names=['Patient_Age', 'Year_of_Operation', 'Axil_Nodes_Found', 'Survival_Status'])\ndf.head()","9504f862":"# High-level\ndf.describe()","0486771f":"# About 225 survived (lived 5 years or longer after operation) out of 306\ndf[df['Survival_Status'] == 1].shape[0]","f1adfb54":"# About 81 did not survive (lived less than 5 years after operation) out of 306\ndf[df['Survival_Status'] == 2].shape[0]","b221f598":"df.plot(y='Axil_Nodes_Found', x='Patient_Age',kind='scatter');\nplt.show()","17651825":"sns.set_style(\"whitegrid\")\n\nsns.FacetGrid(df,hue='Survival_Status',size=5) \\\n    .map(plt.scatter,'Patient_Age','Axil_Nodes_Found') \\\n    .add_legend()\nplt.show()","a9405e48":"sns.set_style(\"whitegrid\");\n\nsns.pairplot(df,hue='Survival_Status',size=3,vars=[\"Patient_Age\", \"Year_of_Operation\",\"Survival_Status\"])\nplt.show()\n","e245b768":"sns.FacetGrid(df, hue=\"Survival_Status\", size=5) \\\n   .map(sns.distplot, \"Axil_Nodes_Found\") \\\n   .add_legend();\nplt.ylabel('pdf')\nplt.show();","ae9dab2a":"sns.FacetGrid(df, hue=\"Survival_Status\", size=5) \\\n   .map(sns.distplot, \"Patient_Age\") \\\n   .add_legend();\nplt.ylabel('pdf')\nplt.show();","f448b964":"sns.FacetGrid(df, hue=\"Survival_Status\", size=5) \\\n   .map(sns.distplot, \"Year_of_Operation\") \\\n   .add_legend();\nplt.ylabel('pdf')\nplt.show();","ef39fc04":"status_1 = df[df['Survival_Status'] == 1]\nstatus_1.describe()","ec754faa":"status_2 = df[df['Survival_Status'] == 2]\nstatus_2.describe()","0d683f4e":"counts, bin_edges = np.histogram(status_1['Axil_Nodes_Found'], bins=25, \n                                 density = True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf,label='status1 pdf');\nplt.plot(bin_edges[1:], cdf,label='status2 cdf')\n\n\ncounts, bin_edges = np.histogram(status_2['Axil_Nodes_Found'], bins=25, \n                                 density = True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf,label='Statu2 pdf');\nplt.plot(bin_edges[1:], cdf,label='status2 cdf')\nplt.legend()\nplt.show()","19cbbc5d":"counts, bin_edges = np.histogram(status_1['Year_of_Operation'], bins=25, \n                                 density = True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf,label='status1 pdf');\nplt.plot(bin_edges[1:], cdf,label='status2 cdf')\n\n\ncounts, bin_edges = np.histogram(status_2['Year_of_Operation'], bins=25, \n                                 density = True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf,label='Statu2 pdf');\nplt.plot(bin_edges[1:], cdf,label='status2 cdf')\nplt.legend()\nplt.show()","454ce3c9":"sns.boxplot(x='Survival_Status',y='Axil_Nodes_Found', data=df)\nplt.show()","058e34fb":"sns.violinplot(x='Survival_Status',y='Axil_Nodes_Found', data=df, size=8)\nplt.show()","19f0613d":"sns.jointplot(x= 'Patient_Age',kind = 'kde', y='Year_of_Operation', data = df)\nplt.show()","f989ec44":"sns.jointplot(x= 'Patient_Age',kind = 'kde', y='Axil_Nodes_Found', data=df)\nplt.show()","3a5d678b":"from sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neural_network import MLPClassifier\nfrom matplotlib.ticker import FormatStrFormatter","e00c9255":"# Train \/ Test data split\n\narray = df.values\nX = array[:,:3]\nY = array[:,3]\nvalidation_size = 0.30\nseed = 10\nX_train, X_validation, Y_train, Y_validation = train_test_split(X, Y, \ntest_size=validation_size, random_state=seed)","657ed0c4":"# Test options and evaluation metric\n\nnum_folds = 20\nnum_instances = len(X_train)\nseed = 10\nscoring = 'accuracy'","4c38c5db":"# Spot Check Algorithms\n\nalgorithms = []\nalgorithms.append(('LR', LogisticRegression(solver='lbfgs')))\nalgorithms.append(('LDA', LinearDiscriminantAnalysis()))\nalgorithms.append(('KNN', KNeighborsClassifier()))\nalgorithms.append(('CART', DecisionTreeClassifier()))\nalgorithms.append(('NB', GaussianNB()))\nalgorithms.append(('SVM', SVC(gamma='scale')))\nalgorithms.append(('NN', MLPClassifier()))\nalgorithms.append(('RFC', RandomForestClassifier(n_estimators=100)))\n# evaluate each model in turn\nresults = []\nnames = []\nfor name, algorithm in algorithms:\n    kfold = KFold(n_splits=num_folds, random_state=seed)\n    cv_results = cross_val_score(algorithm, X_train, Y_train, cv=kfold, scoring=scoring)\n    results.append(cv_results)\n    names.append(name)\n    msg = \"%s: %f (%f)\" % (name, cv_results.mean(), cv_results.std())\n    print(msg)","20594815":"# Make predictions on validation dataset\nknn =  GaussianNB()\nknn.fit(X_train, Y_train)\npredictions = knn.predict(X_validation)\nprint(accuracy_score(Y_validation, predictions))\nprint(confusion_matrix(Y_validation, predictions))\nprint(classification_report(Y_validation, predictions))","d9e10791":"# Applying the trained model to unseen data\n\ndf_data = {'Age': [30,34, 35,38,40,50,43,45,34,34,46,50,45,38,42],\n           'Year os operations': [65,64,63,64,66,64,64,64,63,63,64,67,64,65,67],\n           'axillary nodes detected': [4,10,15,8,40,25,23,40,3,40,3,1,4,2,4]}\nnew_df = pd.DataFrame(df_data)\nnew_df","1c30a349":"prediction = knn.predict(new_df)","e1c9c346":"print(\"Prediction of data survival status: {}\".format(prediction))","7bdee91b":"# Test on unseen data","71b5ae76":"# Model","9fda4304":"> **Observation:**\n> \n>  * status_1 -> About 50 percentile people have Axillary nodes 0 and 75 percentile have about 3~ axillary nodes.\n>  * status_2 -> About 50 percentile people have Axillary nodes more than 4~ and 25 percentile patients have 1-3 nodes.","28708728":"## BiVariant Analysis","e854cfca":"### Violin Plot","7588b18e":"> **Note:** With above 3 plots it's difficult to classify the Survival_Status.","9d49eba6":"### PDF CDF","81006fe4":"> **Observation:** For Most of the Patients The No.of axillary nodes is '0'","90bb3231":"# Dataset\n\nThe dataset contains cases from a study that was conducted between 1958 and 1970 at the University of Chicago's Billings Hospital on the survival of patients who had undergone surgery for breast cancer.","9c30b099":"> There are more number of patients undergone operation during the year 1960 - 1964 period and between ages 45 - 55","bf4ac3ac":"### Dataset balance\n\nIt's imbalanced data set.","fb115dba":"> **Observation:** We cant classify through this features with this type of plot.","be82fc5a":"## Attribute Information\n* Age of patient at time of operation (numerical)\n* Patient's year of operation (year - 1900, numerical)\n* Number of positive axillary nodes detected (numerical)\n* Survival status (class attribute) 1 = the patient survived 5 years or longer 2 = the patient died within 5 year","5851d0f8":"> **Conclusion:** From PDF,Box plot and Means of no.of axillary nodes, It is evident that if there are more no.of axillary nodes the patient may tend to die with in 5 years of operation.","1abf54fd":"## MultiVariant Analysis\n","61627289":"> **Observation:**\n> \n>  * Status 1: Mean of number of axillary nodes -> 2.8~ std -> 5.9~ \n>  * Status 2: Mean of number of axillary nodes -> 7.5~ std -> 9.1~ \n> \n> That implies surival rate is inversely propotional to the number of axillary nodes.","28c81405":"# Data Analysis","02310f8b":"### PDF","9272cffd":"### PairPlot","d1dfdd9e":"> **Observation:** Spread is more for status 1 than status 2. More number of patients of status 1 has less number of Axillary Nodes that may indicate an inverse relation between Axillary nodes and Survival Status.","1a2d1a9f":"> **Observation:** The Average age is 30","01275d81":"## Univariant Analysis","a824c0e1":"### Box Plot","3afc55ae":"### 2D Scatter Plot"}}