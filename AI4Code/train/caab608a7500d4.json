{"cell_type":{"b38f62b4":"code","b9dddf2a":"code","a719e7c7":"code","63a0e0ca":"code","cb893350":"code","aecb45b2":"code","9c42d537":"code","b3241ce0":"code","fc47e033":"code","a24a44bf":"code","82a207cb":"code","ab62cd76":"code","d74545ac":"code","fb801654":"code","94d34b2b":"code","a6180da8":"code","3f11a4a7":"code","40980373":"code","7c06e891":"code","2de25a04":"code","a01ca226":"code","42b8cb60":"code","6bfcdc4a":"code","555bf363":"code","3ff4fb76":"code","5a8fba35":"code","32c56966":"code","2584ab01":"code","7fd1e923":"code","34ecaa4d":"code","92297527":"markdown","f8c679c3":"markdown","631e634a":"markdown","e0ecd7e8":"markdown","4a898bb4":"markdown","3e5f0e2f":"markdown","8bb431c2":"markdown","909e4dc2":"markdown","fa71bf31":"markdown","f8bacfff":"markdown","99bf538b":"markdown","c46652f7":"markdown","ac31fc06":"markdown","9ada30b3":"markdown","8737ffaa":"markdown","c6258eab":"markdown","43709e8a":"markdown","648b207c":"markdown","99b21f99":"markdown","b30c6bd2":"markdown","396c36b3":"markdown","657ef161":"markdown","c009db63":"markdown"},"source":{"b38f62b4":"import os\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sn","b9dddf2a":"BASE_PATH = '..\/input\/lish-moa\/'","a719e7c7":"os.listdir(BASE_PATH)","63a0e0ca":"df_test_features = pd.read_csv(os.path.join(BASE_PATH, 'test_features.csv'))\ndf_train_features = pd.read_csv(os.path.join(BASE_PATH, 'train_features.csv'))\ndf_train_targets_scored = pd.read_csv(os.path.join(BASE_PATH, 'train_targets_scored.csv'))\ndf_train_targets_nonscored = pd.read_csv(os.path.join(BASE_PATH, 'train_targets_nonscored.csv'))\ndf_sample_submission = pd.read_csv(os.path.join(BASE_PATH, 'sample_submission.csv'))","cb893350":"df_train_features","aecb45b2":"df_test_features","9c42d537":"len(set(df_train_features.columns) & set(df_test_features.columns))","b3241ce0":"print('Number of g-X features: ', df_train_features.columns.str.startswith('g-').sum())\nprint('Number of c-X features: ', df_train_features.columns.str.startswith('c-').sum())","fc47e033":"plt.figure(figsize=(16, 5))\nplt.subplot(1, 2, 1)\nplt.title('TRAIN', fontsize=16)\nx = df_train_features['cp_type'].value_counts()\nplt.bar(x.index, x.values)\nplt.subplot(1, 2, 2)\nplt.title('TEST', fontsize=16)\nx = df_test_features['cp_type'].value_counts()\nplt.bar(x.index, x.values);","a24a44bf":"plt.figure(figsize=(16, 5))\nplt.subplot(1, 2, 1)\nplt.title('TRAIN', fontsize=16)\nx = (df_train_features['cp_time'] \/\/ 24).value_counts()\nplt.xlabel('days', fontsize=15)\nplt.xticks([1, 2, 3])\nplt.bar(x.index, x.values)\nplt.subplot(1, 2, 2)\nplt.title('TEST', fontsize=16)\nx = (df_test_features['cp_time'] \/\/ 24).value_counts()\nplt.xlabel('days', fontsize=15)\nplt.xticks([1, 2, 3])\nplt.bar(x.index, x.values);","82a207cb":"plt.figure(figsize=(16, 5))\nplt.subplot(1, 2, 1)\nplt.title('TRAIN', fontsize=16)\nx = df_train_features['cp_dose'].value_counts()\nplt.bar(x.index, x.values)\nplt.subplot(1, 2, 2)\nplt.title('TEST', fontsize=16)\nx = df_test_features['cp_dose'].value_counts()\nplt.bar(x.index, x.values);","ab62cd76":"tmp_df = df_train_features.loc[:, ['g-0', 'g-1', 'g-2', 'c-97', 'c-98', 'c-99']]\n\nplt.figure(figsize=(8, 8))\nsn.heatmap(tmp_df.corr(), annot=True)\nplt.show()","d74545ac":"df_train_targets_scored.sample(5)","fb801654":"df_sample_submission.sample(5)","94d34b2b":"len(set(df_train_targets_scored.columns) & set(df_sample_submission.columns))","a6180da8":"x = df_train_targets_scored.drop(['sig_id'], axis=1).sum(axis=0).sort_values()[-30:]\nplt.figure(figsize=(16, 10))\nplt.yticks(fontsize=15)\nplt.barh(x.index, x.values);","3f11a4a7":"x = df_train_targets_nonscored.drop(['sig_id'], axis=1).sum(axis=0).sort_values()[-30:]\nplt.figure(figsize=(16, 10))\nplt.yticks(fontsize=15)\nplt.barh(x.index, x.values);","40980373":"x = df_train_targets_scored.drop(['sig_id'], axis=1).sum(axis=1).value_counts(sort=False)\nplt.figure(figsize=(16, 5))\nplt.bar(x.index, x.values);","7c06e891":"x = df_train_targets_nonscored.drop(['sig_id'], axis=1).sum(axis=1).value_counts(sort=False)\nplt.figure(figsize=(16, 5))\nplt.bar(x.index, x.values);","2de25a04":"plt.figure(figsize=(16, 8))\nplt.imshow(df_train_targets_scored.sample(1000).iloc[:, 1:].values.T)\nplt.ylabel('Target features', fontsize=15)\nplt.xlabel('Rows', fontsize=15)\nplt.title('Active target columns for samples', fontsize=16);","a01ca226":"plt.figure(figsize=(16, 8))\nplt.imshow(df_train_features.iloc[:200, df_train_features.columns.str.startswith('g-')])\nplt.colorbar();","42b8cb60":"plt.figure(figsize=(16, 8))\nplt.imshow(df_train_features.iloc[:200, df_train_features.columns.str.startswith('c-')])\nplt.colorbar();","6bfcdc4a":"plt.figure(figsize=(16, 8))\nplt.imshow(df_train_features.iloc[:500, df_train_features.columns.str.startswith('c-') | df_train_features.columns.str.startswith('g-')])\n# plt.colorbar();","555bf363":"plt.figure(figsize=(16, 16))\ncols = [\n    'g-1', 'g-2', 'g-3', 'g-4',\n    'g-5', 'g-6', 'g-7', 'g-8',\n    'g-10', 'g-13', 'g-16', 'g-20', \n    'g-70', 'g-80', 'g-90', 'g-100']\nfor i, col in enumerate(cols):\n    plt.subplot(4, 4, i + 1)\n    plt.hist(df_train_features.loc[:, col], bins=100, alpha=1);\n    plt.title(col)","3ff4fb76":"plt.figure(figsize=(16, 16))\ncols = [\n    'c-1', 'c-2', 'c-3', 'c-4',\n    'c-5', 'c-6', 'c-7', 'c-8',\n    'c-9', 'c-10', 'c-11', 'c-12', \n    'c-13', 'c-14', 'c-15', 'c-16']\nfor i, col in enumerate(cols):\n    plt.subplot(4, 4, i + 1)\n    plt.hist(df_train_features.loc[:, col], bins=100, alpha=1);\n    plt.title(col)","5a8fba35":"df_train_targets_scored.sum()[1:].sort_values()","32c56966":"plt.figure(figsize=(16, 8))\ncols = ['g-1', 'g-2', 'g-3', 'g-4', 'g-5', 'g-6', 'g-7', 'g-8']\nfor i, col in enumerate(cols, 1):\n    plt.subplot(2, 4, i)\n    tmp_normal = df_train_features[df_train_targets_scored['nfkb_inhibitor'] == 0]\n    plt.hist(tmp_normal.loc[:, col], bins=50, density=True, alpha=0.5, label='false nfkb_inhibitor')\n    tmp_normal = df_train_features[df_train_targets_scored['nfkb_inhibitor'] == 1]\n    plt.hist(tmp_normal.loc[:, col], bins=50, density=True, alpha=0.5, label='true nfkb_inhibitor')\n    plt.title(col)\n    plt.legend();","2584ab01":"plt.figure(figsize=(16, 8))\ncols = ['g-1', 'g-2', 'g-3', 'g-4', 'g-5', 'g-6', 'g-7', 'g-8']\nfor i, col in enumerate(cols, 1):\n    plt.subplot(2, 4, i)\n    tmp_normal = df_train_features[df_train_targets_scored['proteasome_inhibitor'] == 0]\n    plt.hist(tmp_normal.loc[:, col], bins=50, density=True, alpha=0.5, label='false proteasome_inhibitor')\n    tmp_normal = df_train_features[df_train_targets_scored['proteasome_inhibitor'] == 1]\n    plt.hist(tmp_normal.loc[:, col], bins=50, density=True, alpha=0.5, label='true proteasome_inhibitor')\n    plt.title(col)\n    plt.legend();","7fd1e923":"plt.figure(figsize=(16, 8))\ncols = ['g-1', 'g-2', 'g-3', 'g-4', 'g-5', 'g-6', 'g-7', 'g-8']\nfor i, col in enumerate(cols, 1):\n    plt.subplot(2, 4, i)\n    tmp_normal = df_train_features[df_train_targets_scored['cyclooxygenase_inhibitor'] == 0]\n    plt.hist(tmp_normal.loc[:, col], bins=50, density=True, alpha=0.5, label='false cyclooxygenase_inhibitor')\n    tmp_normal = df_train_features[df_train_targets_scored['cyclooxygenase_inhibitor'] == 1]\n    plt.hist(tmp_normal.loc[:, col], bins=50, density=True, alpha=0.5, label='true cyclooxygenase_inhibitor')\n    plt.title(col)\n    plt.legend();","34ecaa4d":"plt.figure(figsize=(16, 8))\ncols = ['g-1', 'g-2', 'g-3', 'g-4', 'g-5', 'g-6', 'g-7', 'g-8']\nfor i, col in enumerate(cols, 1):\n    plt.subplot(2, 4, i)\n    tmp_normal = df_train_features[df_train_targets_scored['dopamine_receptor_antagonist'] == 0]\n    plt.hist(tmp_normal.loc[:, col], bins=50, density=True, alpha=0.5, label='false dopamine_receptor_antagonist')\n    tmp_normal = df_train_features[df_train_targets_scored['dopamine_receptor_antagonist'] == 1]\n    plt.hist(tmp_normal.loc[:, col], bins=50, density=True, alpha=0.5, label='true dopamine_receptor_antagonist')\n    plt.title(col)\n    plt.legend();","92297527":"### Check if some features is correlated","f8c679c3":"### g-X and c-X","631e634a":"### c-X","e0ecd7e8":"### Distribution of c-X","4a898bb4":"### dopamine_receptor_antagonist  ","3e5f0e2f":"### How many active columns in each row in train noscored dataset","8bb431c2":"### How many active rows in each target column in train dataset (top 50)","909e4dc2":"## Let's check distributions of normal and drugged samples for different features","fa71bf31":"### Let's look at active rows values in columns","f8bacfff":"### nfkb_inhibitor","99bf538b":"### cp_dose distribution in train and test","c46652f7":"### Let's check if train and test features match","ac31fc06":"### cp_type distribution in train and test","9ada30b3":"### cyclooxygenase_inhibitor","8737ffaa":"### How many active rows in each target column in train noscored dataset (top 50)","c6258eab":"### Distribution of g-X","43709e8a":"### g-X","648b207c":"### Let's check if train and test features match","99b21f99":"### proteasome_inhibitor","b30c6bd2":"### How many active columns in each row in train dataset","396c36b3":"### cp_time distribution in train and test","657ef161":"### Look how many gene expression data columns, and cell viability data columns","c009db63":"### Visualize train features values"}}