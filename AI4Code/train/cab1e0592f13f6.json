{"cell_type":{"908974e2":"code","7eb12010":"code","0277ef3d":"code","318c42bb":"code","9643c21b":"code","23077b26":"code","2695748e":"code","01b335b0":"code","d1dbebd2":"code","d4b16c86":"code","1cf27a07":"code","7d8c6ef6":"code","e56f0cb8":"code","5060b093":"markdown","bb81dc67":"markdown","cd9c4317":"markdown","13562e68":"markdown","22fda63c":"markdown"},"source":{"908974e2":"import numpy as np\nimport os\nimport shutil\nfrom pathlib import Path","7eb12010":"root_annots_path = '\/kaggle\/input\/dog-and-cat-detection\/annotations\/'\nroot_images_path = '\/kaggle\/input\/dog-and-cat-detection\/images\/'\n\nannots_path = sorted([i for i in Path(root_annots_path).glob('*.xml')])\nimages_path = sorted([i for i in Path(root_images_path).glob('*.png')])\n\nn_imgs = len(images_path)\n\nclasses = np.array([\"cat\", \"dog\"])","0277ef3d":"with open(annots_path[500], 'r') as f:\n    print(f.read())","318c42bb":"!pip install imageai","9643c21b":"from imageai.Detection import ObjectDetection\n\ndetector = ObjectDetection()\ndetector.setModelTypeAsRetinaNet()\ndetector.setModelPath('..\/input\/gb-retinanet\/resnet50_coco_best_v2.1.0.h5')\ndetector.loadModel()\ndetections = detector.detectObjectsFromImage(input_image='..\/input\/dog-and-cat-detection\/images\/Cats_Test1010.png',\n                                             output_image_path='detected.png',\n                                             minimum_percentage_probability=30)\n\nfor eachObject in detections:\n    print(eachObject[\"name\"] , \" : \", eachObject[\"percentage_probability\"], \" : \", eachObject[\"box_points\"] )\n    print(\"--------------------------------\")","23077b26":"from PIL import Image\nImage.open('detected.png')","2695748e":"os.makedirs('imageai\/data\/train\/images', exist_ok=True)\nos.makedirs('imageai\/data\/train\/annotations', exist_ok=True)\n\nos.makedirs('imageai\/data\/validation\/images', exist_ok=True)\nos.makedirs('imageai\/data\/validation\/annotations', exist_ok=True)\n\nos.makedirs('imageai\/data\/test\/images', exist_ok=True)\nos.makedirs('imageai\/data\/test\/annotations', exist_ok=True)","01b335b0":"n_imgs = 400\nn_split = n_imgs \/\/ 20\n\n\nfor i, (annot_path, img_path) in enumerate(zip(annots_path, images_path)):    \n    if i > n_imgs:\n        break\n    # train-val-test split\n    if i < n_split:\n        shutil.copy(img_path, 'imageai\/data\/test\/images\/' + img_path.parts[-1])\n        shutil.copy(annot_path, 'imageai\/data\/test\/annotations\/' + annot_path.parts[-1])\n    elif n_split <= i < n_split*5:\n        shutil.copy(img_path, 'imageai\/data\/validation\/images\/' + img_path.parts[-1])\n        shutil.copy(annot_path, 'imageai\/data\/validation\/annotations\/' + annot_path.parts[-1])\n    else:\n        shutil.copy(img_path, 'imageai\/data\/train\/images\/' + img_path.parts[-1])\n        shutil.copy(annot_path, 'imageai\/data\/train\/annotations\/' + annot_path.parts[-1])","d1dbebd2":"print(len(list(Path('imageai\/data\/train\/annotations\/').glob('*.xml'))))\nprint(len(list(Path('imageai\/data\/validation\/annotations\/').glob('*.xml'))))\nprint(len(list(Path('imageai\/data\/test\/annotations\/').glob('*.xml'))))","d4b16c86":"from imageai.Detection.Custom import DetectionModelTrainer\n\ntrainer = DetectionModelTrainer()\ntrainer.setModelTypeAsYOLOv3()\ntrainer.setDataDirectory(data_directory=\".\/imageai\/data\/\")\ntrainer.setTrainConfig(object_names_array=[\"cat\", \"dog\"],\n                       batch_size=8,\n                       num_experiments=20,\n                       train_from_pretrained_model=\"..\/input\/gb-pretrainedyolov3h5\/pretrained-yolov3.h5\")\n#                        train_from_pretrained_model=\"imageai\/data\/models\/detection_model-ex-009--loss-0024.110.h5\")\n\ntrainer.trainModel()","1cf27a07":"from imageai.Detection.Custom import DetectionModelTrainer\n\ntrainer = DetectionModelTrainer()\ntrainer.setModelTypeAsYOLOv3()\ntrainer.setDataDirectory(data_directory=\".\/imageai\/data\/\")\nmetrics = trainer.evaluateModel(model_path=\"imageai\/data\/models\/detection_model-ex-020--loss-0017.844.h5\",\n                                json_path=\"imageai\/data\/json\/detection_config.json\",\n                                iou_threshold=0.2,\n                                object_threshold=0.3,\n                                nms_threshold=0.5)","7d8c6ef6":"from imageai.Detection.Custom import CustomObjectDetection\n\ndetector = CustomObjectDetection()\ndetector.setModelTypeAsYOLOv3()\ndetector.setModelPath(\"imageai\/data\/models\/detection_model-ex-020--loss-0017.844.h5\")\ndetector.setJsonPath(\"imageai\/data\/json\/detection_config.json\")\ndetector.loadModel()\ndetections = detector.detectObjectsFromImage(minimum_percentage_probability=50,\n                                             input_image=\"imageai\/data\/validation\/images\/Cats_Test1015.png\",\n                                             output_image_path=\"detected.jpg\")\nfor detection in detections:\n    print(detection[\"name\"], \" : \", detection[\"percentage_probability\"], \" : \", detection[\"box_points\"])","e56f0cb8":"from PIL import Image\nImage.open('detected.jpg')","5060b093":"## ImageAI\nhttps:\/\/github.com\/OlafenwaMoses\/ImageAI\/blob\/master\/imageai\/Detection\/Custom\/CUSTOMDETECTIONTRAINING.md","bb81dc67":"### Preparing your custom dataset","cd9c4317":"### Evaluating your saved detection models","13562e68":"### Training on your custom dataset\n","22fda63c":"https:\/\/github.com\/OlafenwaMoses\/ImageAI\/blob\/master\/imageai\/Detection\/Custom\/CUSTOMDETECTION.md"}}