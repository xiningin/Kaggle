{"cell_type":{"0958be29":"code","99cd9935":"code","f77e1362":"code","113e47d0":"code","e5b23275":"code","7ac282bf":"code","e756364a":"code","24ef0805":"code","c872665a":"code","df930975":"code","0ec92ec6":"code","23c50fba":"code","82a2ae79":"code","da1db7a7":"code","98195a09":"code","6eb85b02":"markdown","ebd09221":"markdown","5465ef61":"markdown","58c9c25e":"markdown","0883c14d":"markdown","2375a369":"markdown","5c1e8bd0":"markdown","7f4d68ee":"markdown","5c42e8d2":"markdown","66520b90":"markdown","b9903481":"markdown","5cc4ecf1":"markdown","eeb9b2c0":"markdown","64a2ba22":"markdown","da92bc15":"markdown","46c74b9d":"markdown","adc78d14":"markdown","e869d74d":"markdown"},"source":{"0958be29":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport sklearn.metrics as metrics","99cd9935":"data_location='..\/input\/used-car-dataset-ford-and-mercedes\/toyota.csv'\nrow_data = pd.read_csv(data_location)\nrow_data.shape","f77e1362":"row_data.describe","113e47d0":"data = row_data.dropna(axis=0)\ndata.describe()","e5b23275":"print (row_data.dtypes)","7ac282bf":"features = ['year', 'mileage', 'tax', 'mpg', 'engineSize']\nx = data[features]\ny = data['price']\nx.shape, y.shape","e756364a":"from sklearn.model_selection import train_test_split\ntrain_x, test_x, train_y, test_y = train_test_split(x, y, random_state = 70)","24ef0805":"test_y.shape","c872665a":"from sklearn.neighbors import KNeighborsRegressor as KNN_Reg\nfrom sklearn.metrics import mean_squared_error as mse\n\nmodel = KNN_Reg(n_neighbors = 80)\n\n# training the model:\nmodel.fit(train_x, train_y)\nacc1 = model.score(test_x, test_y)\n\n# test for prediction\ntest_predict = model.predict(test_x)\nscore = mse(test_predict, test_y)\nprint(' MSE: ', score, '\\n', 'Accuracy: ', acc1)  ","df930975":"def Elbow(K):\n  #initiating an empy list\n  test_mse =[]\n\n  #train model for every value of K\n  for i in K:\n    model = KNN_Reg(n_neighbors=i)\n    model.fit(train_x, train_y)\n    tmp = model.predict(test_x)\n    tmp = mse(tmp, test_y)\n    test_mse.append(tmp)\n  \n  return test_mse","0ec92ec6":"K = range(80, 100)\ntest = Elbow(K)\n\n#plotting\nplt.plot(K,test)\nplt.xlabel('K Neighbors')\nplt.ylabel('Mean Squared Error (MSE)')\nplt.title('Elbow Curve for Test')","23c50fba":"new_model = KNN_Reg(n_neighbors=97)\n\n# Train model\nnew_model.fit(train_x, train_y)\nacc2 = new_model.score(test_x, test_y)\n\n# Prediction test\nprint(' Accuracy of new model (%):', acc2*100, '\\n', 'Accuracy of old model (%):', acc1*100, '\\n Improvement (%):', (acc2-acc1)*100)","82a2ae79":"data_mobil_bekas = np.array([[2019,5000,145,30.2,2]])\nprediction_old = model.predict(data_mobil_bekas)\nprediction_new = new_model.predict(data_mobil_bekas)\nprint(' Hasil Prediksi harga rumah dengan old model: \u00a3', prediction_old, 'atau jika dirupiahkan yaitu: Rp', prediction_old * 19110*1e-6, 'Juta\\n',\n      'Hasil Prediksi harga rumah dengan new model: \u00a3', prediction_new, 'atau jika dirupiahkan yaitu: Rp', prediction_new * 19110*1e-6, 'Juta')","da1db7a7":"data_mobil_bekas = np.array([[2019,15000,200,20.4,3]])\nprediction_old = model.predict(data_mobil_bekas)\nprediction_new = new_model.predict(data_mobil_bekas)\nprint(' Hasil Prediksi harga rumah dengan old model: \u00a3', prediction_old, 'atau jika dirupiahkan yaitu: Rp', prediction_old * 19110*1e-6, 'Juta\\n',\n      'Hasil Prediksi harga rumah dengan new model: \u00a3', prediction_new, 'atau jika dirupiahkan yaitu: Rp', prediction_new * 19110*1e-6, 'Juta')","98195a09":"data_mobil_bekas = np.array([[2016,30000,150,20,2]])\nprediction_old = model.predict(data_mobil_bekas)\nprediction_new = new_model.predict(data_mobil_bekas)\nprint(' Hasil Prediksi harga rumah dengan old model: \u00a3', prediction_old, 'atau jika dirupiahkan yaitu: Rp', prediction_old * 19110*1e-6, 'Juta\\n',\n      'Hasil Prediksi harga rumah dengan new model: \u00a3', prediction_new, 'atau jika dirupiahkan yaitu: Rp', prediction_new * 19110*1e-6, 'Juta')","6eb85b02":"Nilai K terbaik adalah nilai K yang menghasilkan MSE minimum, dalam kasus ini k=97","ebd09221":"Memprediksi dengan memasukkan data yang dimiliki berupa:\n1. Tahun dibuatnya mobil --- year\n2. Jarak tempuh mobil dalam satuan mil --- mileage\n3. Pajak kendaraan yang berlaku --- tax\n4. Kebutuhan rata-rata bahan bakar dalam satuan mpg --- mpg\n5. Besarnya ukuran mesin --- engineSize\n\nKonversi mata uang : \u00a3 1 = Rp 19110, data diambil pada 2 Januari 2021","5465ef61":"# 10. Contoh penggunaan machine learning yang dibuat untuk memprediksi harga mobil bekas di UK","58c9c25e":"# 4. Definisikan input output data yang menggunakan tipe data integer dan float","0883c14d":"**Percobaan ke 3**\n\nData mobil bekas: year=2016, mileage=30000, tax=150, mpg=20, engineSize=2]\n\nFormat input data:\n\ndata_mobil_bekas = ['year', 'mileage', 'tax', 'mpg', 'engineSize']","2375a369":"# 8. Menampilkan grafik nilai k berdasarkan MSE","5c1e8bd0":"# 3. Bersihkan data yang tidak lengkap (kalau ada)","7f4d68ee":"# 6. Membangun machine learning model dengan algoritma K-Nearest Neighbors","5c42e8d2":"Memeriksa tipe data mana saja yang bernilai integer dan float untuk diolah selanjutnya","66520b90":"# 5. Membagi data untuk training dan validasi (test)","b9903481":"**Percobaan ke 1**\n\nData mobil bekas: year=2019, mileage=5000, tax=145, mpg=30.2, engineSize=2\n\nFormat input data:\n\ndata_mobil_bekas = ['year', 'mileage', 'tax', 'mpg', 'engineSize']","5cc4ecf1":"# 1. Import libraries yang diperlukan","eeb9b2c0":"# 7. Menggunakan Elbow method untuk menentukan nilak K terbaik","64a2ba22":"Thank you for seeing my program\n\nInformatika, Universitas Pembangunan Jaya\n\n\u24b8 Evander Naufal 2020","da92bc15":"**Percobaan ke 2**\n\nData mobil bekas: year=2019, mileage=15000, tax=200, mpg=20.4, engineSize=3]\n\nFormat input data:\n\ndata_mobil_bekas = ['year', 'mileage', 'tax', 'mpg', 'engineSize']","46c74b9d":"# 2. Load data harga mobil bekas merek Toyota di UK berdasarkan lokasi data","adc78d14":"**EVANDER NAUFAL LASMANTO - 2018071028**\n\n**UAS Kecerdasan Buatan**\n\n**Sistem Memprediksi Harga Mobil Merek Toyota di United Kingdom Menggunakan Algoritma K-Nearest Neighbors**\n\n* Program ini menyajikan sebuah machine learning yang digunakan untuk prediksi harga mobil merek Toyota yang berada di United Kingdom (UK)\n* Machine learning ini dibuat menggunakan algoritma K-Nearest Neighbors (KNN)\n* Data yang digunakan dalam pembuatan machine learning ini diambil dari: https:\/\/www.kaggle.com\/adityadesai13\/used-car-dataset-ford-and-mercedes?select=toyota.csv\n* Program ini dibuat menggunakan bahasa Python","e869d74d":"# 9. Melakukan koreksi nilai K dengan menggunakan nilai K terbaik berdasarkan hasil dari Elbow method."}}