{"cell_type":{"afa18ea9":"code","a72b9173":"code","32734d52":"code","3f67c57d":"code","c9a95970":"code","29d2ecec":"code","00ac7a38":"code","a7141ed6":"code","1386140d":"code","57e41981":"code","33624449":"code","2ecc846a":"code","2ff6128c":"code","d2006b15":"code","5093ed77":"code","74059770":"code","f36a2204":"code","a5da97d8":"code","0823d7e7":"code","2cbc3b29":"code","c3c8a4f9":"code","ba2135b2":"markdown","00e57045":"markdown","280de028":"markdown"},"source":{"afa18ea9":"%config Completer.use_jedi = False","a72b9173":"from fastai.vision.all import *","32734d52":"import fastai\nfastai.__version__","3f67c57d":"train_df = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntrain_df.head(3)","c9a95970":"train_df.dtypes","29d2ecec":"#mudar tipo de variavel\ntrain_df = train_df.astype(np.uint8)","00ac7a38":"linha = train_df.loc[0]\nlinha","a7141ed6":"linha.drop('label').values.reshape(28,28)","1386140d":"linha","57e41981":"def get_img(line): return line.drop('label').values.reshape(28,28)","33624449":"plt.imshow(get_img(train_df.loc[100]), cmap = 'gray')","2ecc846a":"dblock = DataBlock(\nblocks= [ImageBlock(cls=PILImageBW), CategoryBlock],\nsplitter = RandomSplitter(valid_pct = 0.2, seed = 42),\nget_x = get_img,\nget_y = ColReader('label')\n)\ndls = dblock.dataloaders(train_df, num_workers = 4, bs = 256)\ndls.show_batch()","2ff6128c":"learn = cnn_learner(dls, resnet34, metrics = accuracy)\nlearn.fine_tune(10)","d2006b15":"learn.show_results()","5093ed77":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()","74059770":"test_df = pd.read_csv('..\/input\/digit-recognizer\/test.csv')\ntest_df.head(3)","f36a2204":"test_df['label'] = 99\n#mudar tipo de variavel\ntest_df = test_df.astype(np.uint8)","a5da97d8":"test_dataloader = dls.test_dl(test_df)","0823d7e7":"preds, _ = learn.get_preds(dl = test_dataloader)","2cbc3b29":"predicted_labels = preds.argmax(dim = 1)\npredicted_labels","c3c8a4f9":"submission = pd.DataFrame({\n    'ImageId': range(len(predicted_labels)),\n    'Label' : predicted_labels\n})\nsubmission.to_csv('submission.csv', index = False)\nsubmission.head()","ba2135b2":"DATALOADER","00e57045":"### Interference","280de028":"## Verification"}}