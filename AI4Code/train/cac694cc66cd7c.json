{"cell_type":{"ec951df4":"code","ab6f350a":"code","5462bf82":"code","77cec37e":"code","1bff6096":"code","69fd1058":"code","34745351":"code","55c8a745":"code","0124f46b":"code","9ac245de":"code","121994b4":"code","2a664834":"code","552faf87":"code","6277f5f9":"code","baca7a70":"code","58bcc793":"code","d120bf19":"code","2f3b8133":"code","efcce8cb":"code","49f16b31":"code","12b2b88b":"code","efa822c0":"code","171b4042":"code","8e1281e6":"code","3a5d88dc":"code","dd5558e0":"code","c0de55ca":"code","44ecbc37":"code","271901a8":"code","7ce2bfa8":"code","3c1035d9":"code","5ad6c98f":"code","75a47ac2":"code","7c26012d":"code","29165f9a":"code","142a1c23":"markdown","e91f52cd":"markdown","13ab1915":"markdown","ffe9ad61":"markdown","8945c76b":"markdown","f86beb06":"markdown","6e4ddf84":"markdown"},"source":{"ec951df4":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","ab6f350a":"path = \"..\/input\/comprehensive-database-of-minerals\/Minerals_Database.csv\"\ndf = pd.read_csv(path)","5462bf82":"df.head()","77cec37e":"df.info()","1bff6096":"df.isnull().sum()","69fd1058":"df['Crystal Structure'].unique()","34745351":"#Heatmap displaying correalation between each attributes\nplt.figure(figsize=(10,15))\nsns.heatmap(df[['Crystal Structure','Mohs Hardness','Diaphaneity','Specific Gravity','Optical','Refractive Index','Dispersion','Molar Mass','Molar Volume','Calculated Density']].corr(),annot=True,cmap='Blues');\nplt.title('Correlation of crystal structure with other given features');\nplt.show()","55c8a745":"plt.figure(figsize=(18,10))\nsns.barplot(x=df['Optical'],y=df['Crystal Structure'],hue=df['Diaphaneity'])\nplt.title('Crystal Structure of minerals varied based on Optical property and Diaphaneity',fontdict = {'fontsize' : 20},loc ='center', )\nplt.xticks(rotation=45)\n#ax.set_xticklabels(ax.get_xticklabels(),rotation=90)\nplt.show()\n","0124f46b":"X=df[['Mohs Hardness','Diaphaneity','Specific Gravity','Optical','Refractive Index','Dispersion','Molar Mass','Molar Volume','Calculated Density']]\ny=df['Crystal Structure']","9ac245de":"from imblearn.over_sampling import SMOTE","121994b4":"smk = SMOTE(sampling_strategy='all',random_state=42)\nX,y=smk.fit_resample(X,y)","2a664834":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=.2,random_state=42,stratify=y)","552faf87":"#Scaling the data\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","6277f5f9":"from sklearn.neighbors import KNeighborsClassifier as KNN\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import accuracy_score","baca7a70":"\nclf=KNN(n_neighbors=8)\n\n#fitting the model\nclf.fit(X_train,y_train)","58bcc793":"accuracy=[] # empty list to save the accuracy scores  \n#Predicting over the train set and calculating F1\ny_predict_knn=clf.predict(X_test)\naccuracy.append(('KNeighborsClassifier',accuracy_score(y_test,y_predict_knn)))\nprint(accuracy_score(y_test,y_predict_knn))","d120bf19":"from sklearn.metrics import classification_report\n\nprint(\"classification_report for KNeighborsClassifier\")\n\nprint(\"...\"*10)\n\nprint(classification_report(y_test, y_predict_knn))","2f3b8133":"from sklearn.svm import SVC","efcce8cb":"svc= SVC(gamma=0.025, C=3)\nsvc.fit(X_train, y_train)","49f16b31":"y_predict_svc= svc.predict(X_test)","12b2b88b":"from sklearn.metrics import classification_report\n\nprint(\"classification_report for SVC\")\n\nprint(\"...\"*10)\n\nprint(classification_report(y_test, y_predict_svc));","efa822c0":"accuracy.append(('SupportVectorClassifier', accuracy_score(y_test,y_predict_svc)))\nprint(accuracy_score(y_test,y_predict_svc))","171b4042":"from sklearn.tree import DecisionTreeClassifier","8e1281e6":"dtc= DecisionTreeClassifier()\ndtc.fit(X_train, y_train)","3a5d88dc":"y_predict_dtc = dtc.predict(X_test)","dd5558e0":"from sklearn.metrics import classification_report\n\nprint(\"classification_report for DTC\")\n\nprint(\"...\"*10)\n\nprint(classification_report(y_test, y_predict_dtc))","c0de55ca":"accuracy.append(('DecisionTreeClassifier',accuracy_score(y_test,y_predict_dtc)))\nprint(accuracy_score(y_test,y_predict_dtc))","44ecbc37":"from sklearn.ensemble import RandomForestClassifier","271901a8":"rfc=RandomForestClassifier()","7ce2bfa8":"rfc.fit(X_train,y_train)","3c1035d9":"y_predict_rfc=rfc.predict(X_test)","5ad6c98f":"from sklearn.metrics import classification_report\n\nprint(\"classification_report for DTC\")\n\nprint(\"...\"*10)\n\nprint(classification_report(y_test, y_predict_rfc))","75a47ac2":"accuracy.append(('RandomForestClassifier',accuracy_score(y_test,y_predict_rfc)))\nprint(accuracy_score(y_test,y_predict_rfc))","7c26012d":"print(accuracy)","29165f9a":"#plotting barplot\ndf1= pd.DataFrame(accuracy,columns =['Models', 'Scores']) \nplt.figure(figsize=(10,8))\nsns.barplot(x=df1['Models'],y=df1['Scores'])\nplt.xticks(rotation=45)\n\nplt.title('Models and the respective scores' )\nplt.tight_layout()\nplt.show()","142a1c23":"KNeighborsClassifier","e91f52cd":"Random forest classifier model accuracy score 0.96 is higher compared to other classifier models.","13ab1915":"Splitting the dataset","ffe9ad61":"Crystal Structure: 0: Data not available 1:Triclinic 2:Monoclinic 3:Orthorhombic 4:Tetragonal 5:Hexagonal 6:Trigonal 7:Cubic","8945c76b":"Optical properties are classified as 1. anisotropic, 2. isotropic, 3. uniaxial, 4. biaxial Warning: 0 is used if there is no data available.Ignore value= 0 in the data analysis","f86beb06":"Support Vector Classifier","6e4ddf84":"DecisionTreeClassifier"}}