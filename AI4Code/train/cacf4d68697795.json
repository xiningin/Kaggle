{"cell_type":{"3207684b":"code","3f766d9e":"code","ade07637":"code","ff5dbbdb":"code","28877229":"code","7da36a26":"code","cf15cc63":"code","d08198ef":"code","2520d0eb":"code","89aaf74c":"code","00afd364":"code","4425e280":"code","d8a64553":"code","eb172ce7":"code","44d95005":"code","825d12ec":"code","62655e13":"code","6ca6de7c":"code","3a998e50":"code","6c44de97":"code","b7d5c895":"code","ca12a3ba":"code","ff69b79a":"code","63d45098":"code","0bc351a5":"code","3c69bfc4":"code","2b42eb1a":"code","db75b0a3":"code","905cd559":"code","6ef9e1db":"code","1ce9a433":"code","0dedcb33":"code","63ea9af7":"code","da9062d5":"code","7154fdf9":"code","bd959a02":"code","006de4c2":"code","03914e5d":"code","2772ae2b":"code","ceb800a4":"code","83bd166e":"code","dd7ae5da":"code","0d68c691":"code","6521f514":"code","cbd38e51":"code","284c23fc":"code","7e7353b8":"code","479add2d":"code","c2eb6e48":"code","5e3d6538":"code","a705538c":"code","6bd94706":"code","a9e71d00":"code","9c567124":"code","3a6b07fc":"code","700d9b5c":"code","033b4f65":"code","967b9f5a":"code","09895c18":"code","87371a82":"markdown","896efff6":"markdown","658f5bcc":"markdown","961ddb26":"markdown"},"source":{"3207684b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sbn\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3f766d9e":"dataFrame = pd.read_csv(\"\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/merc.csv\")","ade07637":"dataFrame.head() #mpg kilometrede ka\u00e7 yak\u0131yor , tax:vergi","ff5dbbdb":"sbn.countplot(dataFrame[\"transmission\"])\n","28877229":"dataFrame.info() #bo\u015f data yok.","7da36a26":"dataFrame.isnull().sum()","cf15cc63":"dataFrame.describe()","d08198ef":"plt.figure(figsize = (7,5))\nsbn.distplot(dataFrame[\"price\"])","2520d0eb":"sbn.countplot(dataFrame[\"year\"])","89aaf74c":"dataFrame.corr()","00afd364":"dataFrame.corr()[\"price\"].sort_values()","4425e280":"sbn.scatterplot(x=\"mileage\", y=\"price\",data=dataFrame)","d8a64553":"sbn.scatterplot(x=\"year\", y=\"price\",data=dataFrame)","eb172ce7":"dataFrame.sort_values(\"price\",ascending = False)","44d95005":"dataFrame[\"price\"].count() * 0.01","825d12ec":"yuzdeDoksanDokuzDf = dataFrame.sort_values(\"price\",ascending = False).iloc[131:]","62655e13":"yuzdeDoksanDokuzDf.sort_values(\"price\",ascending=False)","6ca6de7c":"yuzdeDoksanDokuzDf.describe()","3a998e50":"plt.figure(figsize = (7,5))\nsbn.distplot(yuzdeDoksanDokuzDf[\"price\"])","6c44de97":"dataFrame.groupby(\"year\").mean()","b7d5c895":"dataFrame.groupby(\"year\").mean()[\"price\"]","ca12a3ba":"yuzdeDoksanDokuzDf.groupby(\"year\").mean()[\"price\"]","ff69b79a":"dataFrame = yuzdeDoksanDokuzDf","63d45098":"dataFrame = dataFrame[dataFrame.year != 1970]","0bc351a5":"dataFrame","3c69bfc4":"dataFrame.groupby(\"year\").mean()[\"price\"]","2b42eb1a":"dataFrame.drop(\"model\",axis= 1 ,inplace=True)\n","db75b0a3":"sbn.countplot(dataFrame[\"model\"])","905cd559":"dataFrame.head()","6ef9e1db":"transmission =dataFrame.iloc[:,2:3]\ntransmission","1ce9a433":"dataFrame[\"transmission\"] = [1 if each ==\"Automatic\" else (2 if each == \"Semi-Auto\"else 3) for each in dataFrame[\"transmission\"]]\ndataFrame","0dedcb33":"dataFrame[\"transmission\"].value_counts()","63ea9af7":"dataFrame[\"fuelType\"].value_counts()","da9062d5":"dataFrame[\"fuelType\"] = [1 if each ==\"Diesel\" else (2 if each == \"Petrol\"else 3) for each in dataFrame[\"fuelType\"]]\ndataFrame","7154fdf9":"dataFrame.corr()","bd959a02":"dataFrame.info() # object veri kalmad\u0131. NICE!","006de4c2":"y = dataFrame[\"price\"].values\nx = dataFrame.drop(\"price\",axis = 1).values","03914e5d":"x.shape # (12987, 7)\ny.shape # (12987,)","2772ae2b":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(x,y,test_size = 0.33 ,random_state = 42)","ceb800a4":"len(X_test) #4286\nlen(X_train) #8701","83bd166e":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()","dd7ae5da":"X_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","0d68c691":"from sklearn.tree import DecisionTreeClassifier\ndt = DecisionTreeClassifier()\ndt.fit(X_train,y_train)\nprint(\"Decision Tree Score : \", dt.score(X_test,y_test))","6521f514":"from sklearn.naive_bayes import GaussianNB\nnb = GaussianNB()\nnb.fit(X_train,y_train)\nprint(\"Naive Bayes Score : \", nb.score(X_test,y_test))","cbd38e51":"X_train.shape","284c23fc":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense","7e7353b8":"model = Sequential()\nmodel.add ( Dense (12,activation = \"relu\"))\nmodel.add ( Dense (12,activation = \"relu\"))\nmodel.add ( Dense (12,activation = \"relu\"))\nmodel.add ( Dense (12,activation = \"relu\"))\n\nmodel.add( Dense (1))\n\nmodel.compile(optimizer = \"Adam\", loss = \"mse\")","479add2d":"model.fit(X_train,y_train,validation_data = (X_test,y_test),batch_size = 250,epochs = 300)","c2eb6e48":"kayipVerisi = pd.DataFrame(model.history.history)\nkayipVerisi.head()","5e3d6538":"kayipVerisi.plot()","a705538c":"from sklearn.metrics import mean_absolute_error,mean_squared_error","6bd94706":"tahminDizisi = model.predict(X_test)\ntahminDizisi","a9e71d00":"mean_absolute_error(y_test,tahminDizisi)","9c567124":"mean_squared_error(y_test,tahminDizisi)","3a6b07fc":"plt.scatter(y_test,tahminDizisi)\nplt.plot(y_test,y_test ,\"g-*\")","700d9b5c":"dataFrame.iloc[2]","033b4f65":"yeniArabaSeries = dataFrame.drop(\"price\",axis = 1).iloc[2]\nyeniArabaSeries","967b9f5a":"yeniArabaSeries = scaler.transform(yeniArabaSeries.values.reshape(-1,7))\nmodel.predict(yeniArabaSeries)","09895c18":"#price -- 65980.0\n#tahmin -- 59850.504\n","87371a82":"# **MODEL**","896efff6":"# **Deneme**","658f5bcc":"# **Classificatin yapmak mant\u0131kl\u0131 de\u011fil....**","961ddb26":"# **Tensorflow**"}}