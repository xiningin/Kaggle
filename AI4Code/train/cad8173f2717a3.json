{"cell_type":{"e94f5bb6":"code","1e5350e8":"code","be35e089":"code","2f06bf10":"code","bc44bcda":"code","5870ce32":"code","fe021df0":"code","e0ca51bf":"code","9ab09a2a":"code","d03afed1":"code","1291bf13":"code","9832af65":"code","7b217499":"code","dcc42948":"code","d77ef9e9":"code","81fa90a7":"code","16fa279b":"code","917c590a":"code","4998b3e2":"code","6a6bdcf4":"code","7f178efc":"code","2f8cb708":"markdown","f1a9723a":"markdown","a2a49c0f":"markdown","619aa2ac":"markdown","025777eb":"markdown","4d06d279":"markdown","e904b65f":"markdown","624b621b":"markdown","215e484a":"markdown","95adda7d":"markdown","087247ac":"markdown","ccdb3b26":"markdown","6e40bf5c":"markdown","8c96460c":"markdown","2718d25f":"markdown","61f12ef4":"markdown","66e5cce6":"markdown","1816dd46":"markdown","e240162c":"markdown","72a96519":"markdown","72929fa1":"markdown","b6160589":"markdown","0a2e8b99":"markdown"},"source":{"e94f5bb6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1e5350e8":"from collections import Counter\nimport category_encoders as ce\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport datetime as dt\nimport matplotlib.pyplot as plt\n%matplotlib inline","be35e089":"def what_is_dataset(data):\n    print(\"[shape]\\n\"+str(data.shape[0])+','+str(data.shape[1]))\n    print(\"[type]\\n\"+str(data.dtypes.value_counts()))\n    Count=data.describe().T['count'].astype(int)\n    Mean=data.describe().T['mean'].round(2)\n    Max=data.describe().T['max'].round(2)\n    Min=data.describe().T['min'].round(2)\n    Count_missing = data.isnull().sum()\n    Percent_missing = (data.isnull().sum()\/data.isnull().count()*100).round(2)\n    Count_unique = data.nunique()\n    Percent_unique = (Count_unique \/ len(data)*100).round(2)\n    Type = data.dtypes  \n    data=[[i, Counter(data[i][data[i].notna()]).most_common(5)] for i in list(data)]\n    top = pd.DataFrame(data, columns=['columns', 'Top_5']).set_index(['columns'])\n    tmp = pd.concat([Count,Type,Count_missing, Percent_missing, Count_unique, Percent_unique,Mean,Max,Min], axis=1, \n                   keys=['Count','Type','n_missing', 'missing(%)', 'n_unique', 'unique(%)','mean','max','min'])\n    tmp = pd.concat([tmp, top[['Top_5']]], axis=1, sort=False)\n    \n    return((tmp))","2f06bf10":"def day_Country_datasets(country):\n    tmp_data = data[data['Country\/Region'] == country]\n    tmp_data = tmp_data.groupby('ObservationDate',as_index = False).sum()\n    tmp_data['Active_rate'] = tmp_data['Active']\/ tmp_data['Confirmed'] * 100\n    tmp_data[\"Deaths_rate\"] = tmp_data[\"Deaths\"]\/ tmp_data[\"Confirmed\"] * 100\n    tmp_data[\"Recovered_rate\"] = tmp_data[\"Recovered\"]\/ tmp_data[\"Confirmed\"] * 100\n    return tmp_data","bc44bcda":"data = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\ndata['ObservationDate'] = pd.to_datetime(data[\"ObservationDate\"])#time-data\ndata_copy = data\ndata = data[data['ObservationDate'] >= dt.datetime(2020,2,15)]\ndata['ObservationDate'] = data['ObservationDate'].dt.strftime('%m-%d')\ndata['Active'] = data['Confirmed'] - data['Deaths'] - data['Recovered']\ndata.drop(['SNo','Last Update','Province\/State'],axis = 1, inplace = True) #this column is not meaningful\ndata.head()","5870ce32":"what_is_dataset(data)","fe021df0":"data_Country = data.groupby('Country\/Region',as_index = False).sum().sort_values([\"Confirmed\"],ascending = False).head(10)\ndata_Country['Active_rate'] = data_Country['Active']\/ data_Country['Confirmed'] * 100\ndata_Country[\"Deaths_rate\"] = data_Country[\"Deaths\"]\/ data_Country[\"Confirmed\"] * 100\ndata_Country[\"Recovered_rate\"] = data_Country[\"Recovered\"]\/ data_Country[\"Confirmed\"] * 100\n#data_Country","e0ca51bf":"#Top 10 Confirmed\ndata_China = day_Country_datasets('Mainland China')\ndata_Italy = day_Country_datasets('Italy')\ndata_Korea = day_Country_datasets('South Korea')\ndata_Iran = day_Country_datasets('Iran')\ndata_Spain = day_Country_datasets('Spain')\ndata_France = day_Country_datasets('France')\ndata_Germany = day_Country_datasets('Germany')\ndata_US = day_Country_datasets('US')\ndata_Japan = day_Country_datasets('Japan')","9ab09a2a":"data_Country_rate = data_Country.drop(['Confirmed',\"Deaths\",'Recovered','Active'],axis = 1)\ndata_Country_rate = data_Country_rate.set_index('Country\/Region')\ndata_Country_rate","d03afed1":"x = 'ObservationDate'\ny = 'Confirmed'\nplt.figure(figsize=(20, 10)) \nplt.plot(data_China[x], data_China[y] ,label = \"Chi\")","1291bf13":"x = 'ObservationDate'\ny = 'Confirmed'\nplt.figure(figsize=(25, 13)) \nplt.plot(x,y, data = data_Italy, label = \"Ita\")\nplt.plot(x,y, data = data_Korea, label = \"Kor\")\nplt.plot(x,y, data = data_Iran, label = \"Ira\")\nplt.plot(x,y, data = data_Spain, label = \"Spa\")\nplt.plot(x,y, data = data_France, label = \"Fra\")\nplt.plot(x,y, data = data_Germany, label = \"Ger\")\nplt.plot(x,y, data = data_US, label = \"US\")\nplt.plot(x,y, data = data_Japan, label = \"Jap\")\n\n\nplt.legend(fontsize = 18 ,loc = 'upper left')","9832af65":"y = 'Active'\nplt.figure(figsize=(25, 13)) \nplt.plot(x,y, data = data_Italy, label = \"Ita\")\nplt.plot(x,y, data = data_Korea, label = \"Kor\")\nplt.plot(x,y, data = data_Iran, label = \"Ira\")\nplt.plot(x,y, data = data_Spain, label = \"Spa\")\nplt.plot(x,y, data = data_France, label = \"Fra\")\nplt.plot(x,y, data = data_Germany, label = \"Ger\")\nplt.plot(x,y, data = data_US, label = \"US\")\nplt.plot(x,y, data = data_Japan, label = \"Jap\")\n\nplt.legend(fontsize = 18 ,loc = 'upper left')","7b217499":"plt.figure(figsize=(25, 13)) \ny = \"Deaths_rate\"\nplt.plot(x,y, data = data_Italy, label = \"Ita\")\nplt.plot(x, y, data = data_Korea, label = \"Kor\")\nplt.plot(x,y,data = data_China,label = \"Chi\",linewidth = 5.0)\n#plt.plot(x,y, data = data_Iran, label = \"Ira\")\nplt.plot(x, y, data = data_Spain, label = \"Spa\")\nplt.plot(x, y, data = data_France, label = \"Fra\")\nplt.plot(x, y, data = data_Germany, label = \"Ger\")\nplt.plot(x, y, data = data_US, label = \"US\")\nplt.plot(x, y, data = data_Japan, label = \"Jap\")\n\nplt.legend(fontsize = 18 ,loc = 'upper left')","dcc42948":"plt.figure(figsize=(25, 13)) \ny = \"Active_rate\"\nplt.plot(x,y, data = data_Italy, label = \"Ita\")\nplt.plot(x, y, data = data_Korea, label = \"Kor\")\nplt.plot(x,y,data = data_China,label = \"Chi\",linewidth = 5.0)\nplt.plot(x,y, data = data_Iran, label = \"Ira\")\nplt.plot(x, y, data = data_Spain, label = \"Spa\")\nplt.plot(x, y, data = data_France, label = \"Fra\")\nplt.plot(x, y, data = data_Germany, label = \"Ger\")\nplt.plot(x, y, data = data_US, label = \"US\")\nplt.plot(x, y, data = data_Japan, label = \"Jap\")\n\nplt.legend(fontsize = 18 ,loc = 'upper left')","d77ef9e9":"plt.figure(figsize=(25, 13)) \ny = \"Recovered_rate\"\nplt.plot(x,y, data = data_Italy, label = \"Ita\")\nplt.plot(x, y, data = data_Korea, label = \"Kor\")\nplt.plot(x,y,data = data_China,label = \"Chi\",linewidth = 5.0)\nplt.plot(x,y, data = data_Iran, label = \"Ira\")\nplt.plot(x, y, data = data_Spain, label = \"Spa\")\nplt.plot(x, y, data = data_France, label = \"Fra\")\nplt.plot(x, y, data = data_Germany, label = \"Ger\")\nplt.plot(x, y, data = data_US, label = \"US\")\nplt.plot(x, y, data = data_Japan, label = \"Jap\")\n\nplt.legend(fontsize = 18 ,loc = 'upper left')","81fa90a7":"x = 'ObservationDate'\ny = 'Confirmed'\nplt.figure(figsize=(25, 13)) \nplt.plot(data_Italy[x],np.log(data_Italy[y]), label = \"Ita\")\nplt.plot(data_Korea[x],np.log(data_Korea[y]) ,label = \"Kor\")\nplt.plot(data_Iran[x],np.log(data_Iran[y]), label = \"Ira\")\nplt.plot(data_Spain[x], np.log(data_Spain[y]),label = \"Spa\")\nplt.plot(data_France[x], np.log(data_France[y]),label = \"Fra\")\nplt.plot(data_Germany[x],np.log(data_Germany[y]), label = \"Ger\")\nplt.plot(data_US[x],np.log(data_US[y]), label = \"US\")\nplt.plot(data_Japan[x],np.log(data_Japan[y]), label = \"Jap\")\n\n#plt.xticks([0,5,10],[\"01\",\"02\",\"03\"])\nplt.ylabel(\"log(Confirmed)\")\n\nplt.legend(fontsize = 18 ,loc = 'upper left')","16fa279b":"MSE_list = []\nprint(\"How close to China\")\nfor i in range(10):\n    MSE  = (data_Country_rate.iloc[i,0]-data_Country_rate.iloc[0,0])**2 \/ data_Country_rate.iloc[0,0]\n    MSE += (data_Country_rate.iloc[i,1]-data_Country_rate.iloc[0,1])**2 \/ data_Country_rate.iloc[0,1]\n    MSE += (data_Country_rate.iloc[i,2]-data_Country_rate.iloc[0,2])**2 \/ data_Country_rate.iloc[0,2]\n    MSE_list.append(MSE\/100)\ndata_Country_rate['China_metric']=MSE_list \ndata_Country_rate[\"China_metric\"]","917c590a":"data_ebola = pd.read_csv(\"..\/input\/ebola-outbreak-20142016-complete-dataset\/ebola_2014_2016_clean.csv\")\ndata_ebola[\"Date\"] = pd.to_datetime(data_ebola[\"Date\"])\n#data_ebola.Country.unique()\ndata_ebola.fillna(0, inplace = True)","4998b3e2":"what_is_dataset(data_ebola)","6a6bdcf4":"data_ebola_Guinea = data_ebola[data_ebola['Country'] == 'Guinea']\n#data_ebola_Italy = data_ebola[data_ebola['Country'] == 'Italy']\nwhat_is_dataset(data_ebola_Guinea)","7f178efc":"x = 'Date'\nplt.figure(figsize=(25, 13)) \nfor y in ['No. of suspected cases', 'No. of probable cases',\n       'No. of confirmed cases',\n       'No. of confirmed, probable and suspected cases',\n       'No. of suspected deaths', 'No. of probable deaths',\n       'No. of confirmed deaths',\n       'No. of confirmed, probable and suspected deaths']:\n    plt.plot(x,y,data = data_ebola_Guinea,label = y) \n\nplt.legend(fontsize = 18 ,loc = 'upper left')","2f8cb708":"# basic_data:covid_19_data.csv[](http:\/\/)","f1a9723a":"### how close to China","a2a49c0f":"### recoverd-rate","619aa2ac":"log(Confirmed) factor has been like stright line firstly. (this character is exponential function.)\nHowever, you can see that the rate of increase decreases over time","025777eb":"I has made new columns.\n'Active_rate' 'Death_rate' 'Recoverd_rate'","4d06d279":"I supposed that the situation in China will be better and\u3000damage of Corona in other countries will not be better.","e904b65f":"### Active_rate","624b621b":"### Deaths_rate","215e484a":"Exponentially increasing","95adda7d":"Beacause, in China\n1. Deaths_rate is constant\n2. Active_rate is decreasing\n3. Recovered_rate is increasing","087247ac":"This notebook has focused China mainly. ","ccdb3b26":"## The situation in China will be better!","6e40bf5c":"# define function and load dataset","8c96460c":"## this figure is similar to China's graph. (Confirmed)","2718d25f":"> ### Confirmed","61f12ef4":"## Data Show","66e5cce6":"# library","1816dd46":"Q 'confirmed' factor is increasing on the exponential function?","e240162c":"## Country\/Region","72a96519":"### Active","72929fa1":"## Analysis","b6160589":"## Ebola","0a2e8b99":"# Comparing with China"}}