{"cell_type":{"028bddb6":"code","a55fcd2c":"code","894ea376":"code","3ae6aadb":"code","6f2a713c":"code","d5c643ad":"code","9a099e9c":"code","af7b9d5a":"code","086a9d18":"code","6420180e":"code","0c37da2e":"code","8f2a8592":"code","4231a31c":"code","61de3e8d":"code","71e06a31":"code","369eb20c":"code","b6a89bb7":"code","01456f8d":"code","5c9fefe9":"code","94016532":"code","d8a56182":"code","6f75be6a":"code","cbaacf72":"code","e8ea4c7f":"code","5909bb39":"code","91eab5a3":"code","3701802a":"code","6995fd61":"code","1918dd3a":"code","e2a03a42":"code","798c7685":"code","e4e0378d":"code","f07ad8d0":"code","67172907":"markdown","cba3c06d":"markdown","adeb7919":"markdown","c512da09":"markdown","086c79d3":"markdown","9606eafb":"markdown","6fcddb71":"markdown","99708068":"markdown","a0afa9c9":"markdown","e67174b1":"markdown","2bd92b57":"markdown","3725ab69":"markdown","d5a41d9e":"markdown"},"source":{"028bddb6":"#Linear Algrebra\nimport numpy as np  \n#Data Preprocessing \nimport pandas as pd \n#For Data Viz. \nimport matplotlib.pyplot as plt \nimport seaborn as sns \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","a55fcd2c":"df = pd.read_csv('\/kaggle\/input\/company-ipos-2019-2021\/company_ipo.csv')\ndf.head()","894ea376":"df1 = df.copy()","3ae6aadb":"# Accessing the Information of the dataset. \n\ndf1.info()","6f2a713c":"#Accessing Statistical Information of the dataframe.\ndf1.describe()","d5c643ad":"df1.head(5)","9a099e9c":"df1.tail(5)","af7b9d5a":"ipo_price = []\nfor i in df1['IPO Price'] : \n    splitted_price = i.split('$')\n    ipo_price.append(splitted_price[1])","086a9d18":"current_price = []\nfor i in df1['Current'] : \n    splitted_current_price = i.split('$')\n    current_price.append(splitted_current_price[1])\n    ","6420180e":"\nreturn_in_percentage = []\nfor i in df1['Return'] : \n    splitted_return = i.split('%')\n    return_in_percentage.append(splitted_return[0])\n    \n","0c37da2e":"#Adding all the columns into the dataframe 'df1'.\n\ndf1['ipo_price'] = ipo_price \ndf1['Current Price'] = current_price\ndf1['Return In Percentage'] = return_in_percentage\n","8f2a8592":"df1.head()","4231a31c":"# Converting newly created columns into numerical data.\n\ndf1['Current Price'] = df1['Current Price'].astype(float)\ndf1['ipo_price'] = df1['ipo_price'].astype(float)\ndf1['Return In Percentage'] = df1['Return In Percentage'].astype(float)","61de3e8d":"df2 = df1.copy()","71e06a31":"df2.head()","369eb20c":"# Setting date column as index\n\ndf2.set_index('IPO Date' ,inplace = True)","b6a89bb7":"#Dropping existing non-needed columns from df2.\n\ndf2.drop(['ID','IPO Price','Current','Return'] ,axis = 1 , inplace = True)","01456f8d":"df2.head()","5c9fefe9":"#Accessing information of df2 dataframe. \n\ndf2.info()","94016532":"o = (df2.dtypes == 'object')\nobject_cols = o[o].index \n\nprint(f'Categorical Variables: {object_cols}')","d8a56182":"# Checking correlation matrix \n\ncorrelation_matrix = df2.corr()\n\n#heatmap plot of correlation matrix. \nsns.heatmap(correlation_matrix  , linewidth = 1 , annot = True)\n","6f75be6a":"features = df2.iloc[:,:-1]\nlabel = df2.iloc[:,-1]","cbaacf72":"#Encoding categoricals with ordinal encoders. \n\nimport category_encoders as ce\noe = ce.OrdinalEncoder(cols = object_cols )\nfeatures = oe.fit_transform(features )","e8ea4c7f":"\nfeatures.head(5)","5909bb39":"#Importing libraries for model building \nfrom sklearn.linear_model import LinearRegression \nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.metrics import mean_squared_error \n\n#Split train_test datasets. \n\nx_train, x_test, y_train, y_test = train_test_split(features , label , test_size = 0.2)\n\n#Shape of train_test datasets.\nprint('Shape of train and test datasets : ')\nprint(f'x_train shape : {x_train.shape}')\nprint(f'x_test shape : {x_test.shape}')\nprint(f'y_train shape : {y_train.shape}')\nprint(f'y_test shape : {y_test.shape}')","91eab5a3":"lr_model = LinearRegression()\n\nlr_model.fit(x_train,y_train)\n\npredict_train = lr_model.predict(x_train)\npredict_test = lr_model.predict(x_test)\n\n#Root Mean Squared Error on train and test sets, \n\nprint(f'RMSE on train data : {mean_squared_error(y_train,predict_train)**(0.5)}')\nprint(f'RMSE on test data : {mean_squared_error(y_test,predict_test)**(0.5)}')","3701802a":"#Feature Importance of Linear Regression\n\nfrom matplotlib import pyplot \n\nlr_importance = lr_model.coef_\n# summarize feature importance with linear regression\nfor i,v in enumerate(lr_importance):\n    print('Feature: %0d, Score: %.5f' % (i,v))\n# plot feature importance with linear regression\npyplot.bar([x for x in range(len(lr_importance))], lr_importance)\npyplot.show()","6995fd61":"rf_model = RandomForestRegressor(random_state = 42)\n\nrf_model.fit(x_train,y_train)\n\npredict_train = rf_model.predict(x_train)\npredict_test = rf_model.predict(x_test)\n\n#Root Mean Squared Error on train and test sets, \n\nprint(f'RMSE on train data : {mean_squared_error(y_train,predict_train)**(0.5)}')\nprint(f'RMSE on test data : {mean_squared_error(y_test,predict_test)**(0.5)}')","1918dd3a":"\n# plot the 3 most important features \nplt.figure(figsize=(10,7))\nfeat_importances = pd.Series(rf_model.feature_importances_, index = x_train.columns)\nfeat_importances.nlargest(3).plot(kind='barh');","e2a03a42":"three_if_features_x_train = x_train[['Company Name','ipo_price','Current Price']]\nthree_if_features_x_test = x_test[['Company Name','ipo_price','Current Price']]\n\nrf_model_three_if = RandomForestRegressor(max_depth = 10 , random_state = 42)\n\n#Fitting RF Model with 3 important features \nrf_model_three_if.fit(three_if_features_x_train,y_train)\n\n#Predicting RF Model with 3 important features \npredict_three_if_train = rf_model_three_if.predict(three_if_features_x_train)\npredict_three_if_test = rf_model_three_if.predict(three_if_features_x_test)\n\n#RMSE Score \nprint(f'RMSE on train data : {mean_squared_error(y_train,predict_three_if_train)**(0.5)}')\nprint(f'RMSE on test data : {mean_squared_error(y_test,predict_three_if_test)**(0.5)}')","798c7685":"\n# plot the 2 most important features \nplt.figure(figsize=(10,7))\nfeat_importances = pd.Series(rf_model.feature_importances_, index = x_train.columns)\nfeat_importances.nlargest(2).plot(kind='barh');","e4e0378d":"two_if_features_x_train = x_train[['ipo_price','Current Price']]\ntwo_if_features_x_test = x_test[['ipo_price','Current Price']]\n\nrf_model_two_if = RandomForestRegressor(max_depth = 10 , random_state = 42)\n\n#Fitting RF Model with 3 important features \nrf_model_two_if.fit(two_if_features_x_train,y_train)\n\n#Predicting RF Model with 3 important features \npredict_two_if_train = rf_model_two_if.predict(two_if_features_x_train)\npredict_two_if_test = rf_model_two_if.predict(two_if_features_x_test)\n\n#RMSE Score \nprint(f'RMSE on train data : {mean_squared_error(y_train,predict_two_if_train)**(0.5)}')\nprint(f'RMSE on test data : {mean_squared_error(y_test,predict_two_if_test)**(0.5)}')","f07ad8d0":"# Linear Regression \nprint('RMSE Linear Regression: ')\nprint(f'RMSE on train data : {mean_squared_error(y_train,predict_train)**(0.5)}')\nprint(f'RMSE on test data : {mean_squared_error(y_test,predict_test)**(0.5)}')\nprint()\n#Random Forest Regressor \nprint('RMSE Random Forest Regressor: ')\nprint(f'RMSE on train data : {mean_squared_error(y_train,predict_train)**(0.5)}')\nprint(f'RMSE on test data : {mean_squared_error(y_test,predict_test)**(0.5)}')\nprint()\n#Random Forest Regressor with 3 important Features.\nprint('RMSE Random Forest Regressor with 3 important features: ')\nprint(f'RMSE on train data : {mean_squared_error(y_train,predict_three_if_train)**(0.5)}')\nprint(f'RMSE on test data : {mean_squared_error(y_test,predict_three_if_test)**(0.5)}')\nprint()\n#Random Forest Regressor with 2 important Features. \nprint('RMSE Random Forest Regressor with 2 important features: ')\nprint(f'RMSE on train data : {mean_squared_error(y_train,predict_two_if_train)**(0.5)}')\nprint(f'RMSE on test data : {mean_squared_error(y_test,predict_two_if_test)**(0.5)}')","67172907":"### Doing all the data analysis on 'df1' dataframe.","cba3c06d":"## Encoding Categorical Variables to Numeric.","adeb7919":"## Model Building with 3 Important Features","c512da09":"<b>IPO Price and Current are in dollars and Return is in percentage so,for the model we need to remove '$' , '%' sign from the respective columns. <\/b>","086c79d3":"## Importing Required Libraries ","9606eafb":"## Model Building with 2 Important Features","6fcddb71":"## Understanding the Dataset.","99708068":"#### 1.Now the dataset has two categorical columns and 3 floating point values.\n#### 2.Dataframe is clean","a0afa9c9":"<b style = 'font-size:22px'>RMSE Random Forest Regressor with 2 important features performed better than other models.<\/b>","e67174b1":"#### 1.The dataset has shape of 1765 X 7.\n#### 2.ID is int type data and IPO Date,Symbol,Company Name,IPO Price,Current,Return are categorical data.\n#### 3.The dataset has no null values ,\n#### 4.The dataset has no missing values.","2bd92b57":"## Model Creation","3725ab69":"### Doing further data analysis and manipulation on 'df2' dataframe.","d5a41d9e":"## Splitting Features and Label."}}