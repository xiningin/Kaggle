{"cell_type":{"f1b281b2":"code","4fc4f1f6":"code","e2f60d03":"code","1d79ccb3":"code","915f3d93":"code","a197364d":"code","3106e00a":"code","c42edde7":"code","3a70d901":"code","d67fb382":"markdown","d9ebd7b7":"markdown","fb6cf0b1":"markdown","771f5e5f":"markdown","bcde870d":"markdown","3e5acf82":"markdown","cfeb8dbd":"markdown","4668680e":"markdown","7bbc6a0c":"markdown"},"source":{"f1b281b2":"# Data Processing Libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Visualization Libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Module for parsing DateTime objects\nfrom datetime import datetime\n\nimport locale # Used for formatting large number to have commas\nlocale.setlocale(locale.LC_ALL, '')\n\n# Filepaths to datasets\nmaindata_filepath = \"\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\"\nlinelist_filepath = \"\/kaggle\/input\/novel-corona-virus-2019-dataset\/COVID19_line_list_data.csv\"\nopenline_filepath = \"\/kaggle\/input\/novel-corona-virus-2019-dataset\/COVID19_open_line_list.csv\"\nconfirmed_filepath = \"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv\"\nrecovered_filepath = \"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_recovered.csv\"\ndeaths_filepath = \"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_deaths.csv\"\n\n# Read csv: covid_19_data.csv\ncovid = pd.read_csv(maindata_filepath,index_col=0)","4fc4f1f6":"print(\"Novel Corona Virus 2019 Dataset: Day level information on covid-19 affected cases\")\nprint(\"Cumulative Data as of\",covid['ObservationDate'].iloc[-1])\n\n# Sub-dataframe: Contains latest data\nfilter_latest_data = covid['ObservationDate'] == covid['ObservationDate'].iloc[-1]\ncovid_latest = covid[filter_latest_data].copy()\n\nprint(\"Confirmed Cases:\",int(covid_latest['Confirmed'].sum()))\nprint(\"Death Toll:\", int(covid_latest['Deaths'].sum()), \", \", ((covid_latest['Deaths'].sum() \/ covid_latest['Confirmed'].sum())*100),\"% of Confirmed Cases\")\nprint(\"Recovered:\", int(covid_latest['Recovered'].sum()), \", \", ((covid_latest['Recovered'].sum() \/ covid_latest['Confirmed'].sum())*100),\"% of Confirmed Cases\")\nprint(\"Source: https:\/\/www.kaggle.com\/sudalairajkumar\/novel-corona-virus-2019-dataset\")","e2f60d03":"# Top 10 Countries with most cases of COVID-19\nlatest_date = covid['ObservationDate'].iloc[-1]\ncovid_latest = covid[covid['ObservationDate'] == latest_date].groupby(['Country\/Region']).sum().copy()\ncovid_latest = covid_latest.sort_values(by='Confirmed',ascending=False)\ncovid_latest[:10]","1d79ccb3":"# Function for generating lineplot\ndef make_lineplot(country,x_dates=covid['ObservationDate'].unique()):\n    '''\n    Generates lineplot of cumulative counts of\n    confirmed cases, deaths, and recoveries on COVID-19 patients\n    country - str, Country\/Region\n    x_dates - list, array, or pandas series: Observation Dates\n    '''\n\n    # Filter data per country\n    filter_country = covid['Country\/Region'] == country\n    covid_country = covid[filter_country].copy()\n\n    # Dictionary of daily data\n    confirmed_dict = dict()\n    deaths_dict = dict()\n    recovered_dict = dict()\n\n    for date in x_dates:\n        # filter dataframe by date\n        filter_country_date = covid_country['ObservationDate'] == date\n        covid_country_date = covid_country[filter_country_date].copy()\n        short_date = date[:5]\n\n        # Assign data to dictionary key: Confirmed\n        confirmed_dict[short_date] = covid_country_date['Confirmed'].sum()\n\n        # Assign data to dictionary key: Deaths\n        deaths_dict[short_date] = covid_country_date['Deaths'].sum()\n\n        # Assign data to dictionary key: Recovered\n        recovered_dict[short_date] = covid_country_date['Recovered'].sum()\n\n    # Initialize the matplotlib figure\n    f, ax = plt.subplots(figsize=(25,5))\n\n    # Plot the confirmed cases\n    sns.set_color_codes('pastel')\n    sns.lineplot(x=list(confirmed_dict.keys()),\n                y=list(confirmed_dict.values()),\n                label='Confirmed',\n                color='green'\n                )\n\n    # Plot the deaths\n    sns.set_color_codes('pastel')\n    sns.lineplot(x=list(deaths_dict.keys()),\n                y=list(deaths_dict.values()),\n                label='Deaths',\n                color='red'\n                )\n\n    # Plot the recoveries\n    sns.set_color_codes('pastel')\n    sns.lineplot(x=list(recovered_dict.keys()),\n                y=list(recovered_dict.values()),\n                label='Recovered',\n                color='blue'\n                )\n\n    # Add a legend and informative axis label\n    ax.legend(ncol=3, loc='lower right', frameon=True)\n    ax.set(xlabel='Observation Dates',\n           ylabel='Cumulative Counts',\n           title=f\"COVID-19 Data ({country})\"\n          )","915f3d93":"# Line plot for Mainland China\ncountry = 'Mainland China'\nmake_lineplot(country)\n\n# Latest Statistics\n# Filter data per country\nfilter_country = covid['Country\/Region'] == country\ncovid_country = covid[filter_country].copy()\n\nprint(\"Novel Corona Virus 2019 Dataset: Day level information on covid-19 affected cases\")\nprint(\"Cumulative Data as of\", covid_country['ObservationDate'].iloc[-1],\"from\",covid_country['Country\/Region'].unique()[0])\n\nfilter_country_latest = covid_country['ObservationDate'] == covid_country['ObservationDate'].iloc[-1]\ncovid_country_latest = covid_country[filter_country_latest].copy()\n\nprint(\"Confirmed Cases:\",int(covid_country_latest['Confirmed'].sum()))\nprint(\"Death Toll:\", int(covid_country_latest['Deaths'].sum()), \", \", ((covid_country_latest['Deaths'].sum() \/ covid_country_latest['Confirmed'].sum())*100),\"% of Confirmed Cases\")\nprint(\"Recovered:\", int(covid_country_latest['Recovered'].sum()), \", \", ((covid_country_latest['Recovered'].sum() \/ covid_country_latest['Confirmed'].sum())*100),\"% of Confirmed Cases\")\nprint(\"Source: https:\/\/www.kaggle.com\/sudalairajkumar\/novel-corona-virus-2019-dataset\")","a197364d":"# Line plot for USA\ncountry = 'US'\nmake_lineplot(country)\n\n# Latest Statistics\n# Filter data per country\nfilter_country = covid['Country\/Region'] == country\ncovid_country = covid[filter_country].copy()\n\nprint(\"Novel Corona Virus 2019 Dataset: Day level information on covid-19 affected cases\")\nprint(\"Cumulative Data as of\", covid_country['ObservationDate'].iloc[-1],\"from\",covid_country['Country\/Region'].unique()[0])\n\nfilter_country_latest = covid_country['ObservationDate'] == covid_country['ObservationDate'].iloc[-1]\ncovid_country_latest = covid_country[filter_country_latest].copy()\n\nprint(\"Confirmed Cases:\",int(covid_country_latest['Confirmed'].sum()))\nprint(\"Death Toll:\", int(covid_country_latest['Deaths'].sum()), \", \", ((covid_country_latest['Deaths'].sum() \/ covid_country_latest['Confirmed'].sum())*100),\"% of Confirmed Cases\")\nprint(\"Recovered:\", int(covid_country_latest['Recovered'].sum()), \", \", ((covid_country_latest['Recovered'].sum() \/ covid_country_latest['Confirmed'].sum())*100),\"% of Confirmed Cases\")\nprint(\"Source: https:\/\/www.kaggle.com\/sudalairajkumar\/novel-corona-virus-2019-dataset\")","3106e00a":"# Line plot for South\ncountry = 'South Korea'\nmake_lineplot(country)\n\n# Latest Statistics\n# Filter data per country\nfilter_country = covid['Country\/Region'] == country\ncovid_country = covid[filter_country].copy()\n\nprint(\"Novel Corona Virus 2019 Dataset: Day level information on covid-19 affected cases\")\nprint(\"Cumulative Data as of\", covid_country['ObservationDate'].iloc[-1],\"from\",covid_country['Country\/Region'].unique()[0])\n\nfilter_country_latest = covid_country['ObservationDate'] == covid_country['ObservationDate'].iloc[-1]\ncovid_country_latest = covid_country[filter_country_latest].copy()\n\nprint(\"Confirmed Cases:\",int(covid_country_latest['Confirmed'].sum()))\nprint(\"Death Toll:\", int(covid_country_latest['Deaths'].sum()), \", \", ((covid_country_latest['Deaths'].sum() \/ covid_country_latest['Confirmed'].sum())*100),\"% of Confirmed Cases\")\nprint(\"Recovered:\", int(covid_country_latest['Recovered'].sum()), \", \", ((covid_country_latest['Recovered'].sum() \/ covid_country_latest['Confirmed'].sum())*100),\"% of Confirmed Cases\")\nprint(\"Source: https:\/\/www.kaggle.com\/sudalairajkumar\/novel-corona-virus-2019-dataset\")","c42edde7":"# Line plot for South\ncountry = 'Malaysia'\nmake_lineplot(country)\n\n# Latest Statistics\n# Filter data per country\nfilter_country = covid['Country\/Region'] == country\ncovid_country = covid[filter_country].copy()\n\nprint(\"Novel Corona Virus 2019 Dataset: Day level information on covid-19 affected cases\")\nprint(\"Cumulative Data as of\", covid_country['ObservationDate'].iloc[-1],\"from\",covid_country['Country\/Region'].unique()[0])\n\nfilter_country_latest = covid_country['ObservationDate'] == covid_country['ObservationDate'].iloc[-1]\ncovid_country_latest = covid_country[filter_country_latest].copy()\n\nprint(\"Confirmed Cases:\",int(covid_country_latest['Confirmed'].sum()))\nprint(\"Death Toll:\", int(covid_country_latest['Deaths'].sum()), \", \", ((covid_country_latest['Deaths'].sum() \/ covid_country_latest['Confirmed'].sum())*100),\"% of Confirmed Cases\")\nprint(\"Recovered:\", int(covid_country_latest['Recovered'].sum()), \", \", ((covid_country_latest['Recovered'].sum() \/ covid_country_latest['Confirmed'].sum())*100),\"% of Confirmed Cases\")\nprint(\"Source: https:\/\/www.kaggle.com\/sudalairajkumar\/novel-corona-virus-2019-dataset\")","3a70d901":"# Line plot for Philippines\ncountry = 'Philippines'\nmake_lineplot(country)\n\n# Latest Statistics\n# Filter data per country\nfilter_country = covid['Country\/Region'] == country\ncovid_country = covid[filter_country].copy()\n\nprint(\"Novel Corona Virus 2019 Dataset: Day level information on covid-19 affected cases\")\nprint(\"Cumulative Data as of\", covid_country['ObservationDate'].iloc[-1],\"from\",covid_country['Country\/Region'].unique()[0])\n\nfilter_country_latest = covid_country['ObservationDate'] == covid_country['ObservationDate'].iloc[-1]\ncovid_country_latest = covid_country[filter_country_latest].copy()\n\nprint(\"Confirmed Cases:\",int(covid_country_latest['Confirmed'].sum()))\nprint(\"Death Toll:\", int(covid_country_latest['Deaths'].sum()), \", \", ((covid_country_latest['Deaths'].sum() \/ covid_country_latest['Confirmed'].sum())*100),\"% of Confirmed Cases\")\nprint(\"Recovered:\", int(covid_country_latest['Recovered'].sum()), \", \", ((covid_country_latest['Recovered'].sum() \/ covid_country_latest['Confirmed'].sum())*100),\"% of Confirmed Cases\")\nprint(\"Source: https:\/\/www.kaggle.com\/sudalairajkumar\/novel-corona-virus-2019-dataset\")","d67fb382":"## USA now on no. 1 spot\nThese are trying times to President Trump.","d9ebd7b7":"## Special mention: Model for ASEAN Region\nMalaysia seems to be the model for the South East Asia","fb6cf0b1":"# COVID-19 Data Analysis\nAs of the April 19, 2020, here are the current statistics on Philippines:\n- Total Confirmed Cases: 6,259\n- Deaths: 409\n- Recovered: 572","771f5e5f":"## Mainland China, is now flattening the curve\nChina may be the first to be hit by the virus and with the most cases but they are now able to slow down the spread of the virus. The flattening curve (green) shows that the rate of confirmed cases per day is greatly minimized.","bcde870d":"### Line Plot: Cumulative Counts per Country","3e5acf82":"### Global Counts","cfeb8dbd":"### Top 10 Countries with most confirmed cases of COVID-19","4668680e":"## Special mention: Best Recovery Rate in East Asia\nNext to China's flattening of the curve is South Korea that shows a similar trend on the green line of daily confirmed cases.","7bbc6a0c":"## From my home country Philippines"}}