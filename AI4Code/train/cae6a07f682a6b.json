{"cell_type":{"96b40d75":"code","73dfcf1b":"code","11bd0c4b":"code","fdde7ae2":"code","b9fa06bc":"code","c68dc655":"code","db131769":"code","d0d0578c":"code","2feb4658":"code","49b4ed90":"code","48e2fba2":"code","fc6176af":"code","ca990fc1":"code","f3198b45":"code","b875a263":"markdown","54938135":"markdown","87b2d1da":"markdown","36b7e050":"markdown"},"source":{"96b40d75":"# Import the necessary modules\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport random as rd\nimport plotly.express as px\nimport statsmodels.formula.api as smf\n\n%config IPCompleter.greedy = True\n%matplotlib inline","73dfcf1b":"data = pd.read_csv('..\/input\/song-popularity-dataset\/song_data.csv')\ndata.head()","11bd0c4b":"data.info()","fdde7ae2":"data.nunique().sort_values()","b9fa06bc":"data.columns","c68dc655":"data.describe().T","db131769":"def analysis(df):\n\n    print(\"--------------D-TYPES------------- \" + '\\n')\n    if len(df.select_dtypes(\"object\").columns) > 0:\n        print(\"Object Variables:\", \"\\n\", \"variables:\", \n              df.select_dtypes(\"object\").columns.tolist(), \"\\n\")\n\n    if len(df.select_dtypes(\"integer\").columns) > 0:\n        print(\"Integer Variables:\", \"\\n\", \"variables:\", \n              df.select_dtypes(\"integer\").columns.tolist(), \"\\n\")\n\n    if len(df.select_dtypes(\"float\").columns) > 0:\n        print(\"Float Variables:\", \"\\n\", \"variables:\", \n              df.select_dtypes(\"float\").columns.tolist(), \"\\n\")\n\n    if len(df.select_dtypes(\"bool\").columns) > 0:\n        print(\"Bool Variables:\", \"\\n\", \"variables:\", \n              df.select_dtypes(\"bool\").columns.tolist(), \"\\n\")\n\n    print(\"--------------MISSING VALUE----------\" + '\\n')\n    print(\"Any missing values? \\n \", np.where(df.isnull().values.any() == False,  \"No NaN values \u274c\", \"Data includes NaN values \u2714\ufe0f\"), \"\\n\")\n\nprint('-' * 10 + 'BASIC INFORMATION' + '-' * 10 + '\\n')\n\nprint('The number of rows is about: ' + \"\\033[1m\" + str(data.shape[0]) + \"\\033[0;0m\")\nprint('The number of cols is about: ' + \"\\033[1m\" + str(data.shape[1]) + \"\\033[0;0m\")\nprint('The number of data is about: ' + \"\\033[1m\" + str(data.shape[0] * data.shape[1]) + \"\\033[0;0m\" + '\\n')\nanalysis(data)","d0d0578c":"# There aren't NaN values\n\ndata.isnull().sum()","2feb4658":"clean_duplicated = data.duplicated(subset = None, keep = 'first')\nn_duplicated = clean_duplicated[clean_duplicated == True].shape[0]\n\nprint('There are ' + str(n_duplicated) + ' rows in the DataFrame.')\nprint('Its the same to say that the ' + \"\\033[1m\" + str(round(((n_duplicated \/ data.shape[0]) * 100), 2)) + \"\\033[0;0m\" +\n      '% of the data is duplicated')","49b4ed90":"# Clean the duplicated data...\n\ndata = data.drop_duplicates(subset = None, keep = 'first')\nprint('Now we have: ' + \"\\033[1m\" + str(18835 - 3909) + \"\\033[0;0m\" + ' rows.')\ndata","48e2fba2":"top_songs = data.sort_values('song_popularity', ascending = False).head(15)\n\nfig = px.bar(top_songs, x = 'song_popularity', y = 'song_name', orientation = 'h', color = 'song_name', text_auto = True)\nfig.update_layout(title_text = 'Top 15 most popular songs')\n\nfig.show()","fc6176af":"not_top_songs = data.loc[data['song_popularity'] > 0].sort_values('song_popularity', ascending = True).head(15)\n\nfig = px.bar(not_top_songs, x = 'song_popularity', y = 'song_name', orientation = 'h', color = 'song_name', text_auto = True)\nfig.update_layout(title_text = 'Top 15 less popular songs')\n\nfig.show()","ca990fc1":"# Convert the ms to min, in order to have a cleaner information\n\nduration = data['song_duration_ms']\n\ndata['song_duration_ms'] = duration.apply(lambda x: round(x \/ 60000, 2))\n\ndata","f3198b45":"sns.histplot(data['song_popularity'], kde = True, element = 'step', bins = 30, color = 'orange')\nsns.set_style('darkgrid')\n\nplt.title('The song popularity hist', fontsize = 18, fontweight = 'bold', backgroundcolor = 'pink')\nplt.xlabel('POPULARITY', fontsize = 12)\nplt.ylabel('COUNT', fontsize = 12)","b875a263":"## Data exploration ","54938135":"# SONG POPULARITY  ","87b2d1da":"## Data Cleaning","36b7e050":"This is my analysis, about the **song-popularity dataset**. I use many elements in order to analyse a great part of the dataset.  I hope you enjoy it as much as I did :)"}}