{"cell_type":{"4b9baa3e":"code","29786ad4":"code","62d73d06":"code","c222e6df":"code","d6fc32ed":"markdown","5e34eb57":"markdown"},"source":{"4b9baa3e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","29786ad4":"df = pd.read_csv(\"\/kaggle\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")\ndf.head()","62d73d06":"import  seaborn as sns\nimport matplotlib.pyplot as plt","c222e6df":"fig, ax =  plt.subplots(2, 4, figsize=(18, 10))\n\n# stroke\nsns.countplot(df[\"stroke\"], ax=ax[0,0])\n# gender\nsns.countplot(df[\"gender\"], ax=ax[0,1])\n# hypertension\nsns.countplot(df[\"hypertension\"], ax=ax[0,2])\n# Residence_type\nsns.countplot(df[\"Residence_type\"], ax=ax[0,3])\n# heart_disease\nsns.countplot(df[\"heart_disease\"], ax=ax[1,0])\n# ever_married\nsns.countplot(df[\"ever_married\"], ax=ax[1,1])\n# work_type\nsns.countplot(df[\"work_type\"], ax=ax[1,2])\nax[1,2].tick_params('x', labelrotation=45)\n# smoking_status\nsns.countplot(df[\"smoking_status\"], ax=ax[1,3])\nax[1,3].tick_params('x', labelrotation=45)\n\n\nfig.show()\nplt.xticks(rotation=45)","d6fc32ed":"# Load the data","5e34eb57":"# Data visualization"}}