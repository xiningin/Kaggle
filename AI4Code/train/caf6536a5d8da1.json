{"cell_type":{"1a6c2603":"code","eb0686a9":"code","c4a636fb":"code","8c5dd1ed":"code","6490d2c2":"code","6246f684":"code","84d6623b":"code","270d7f46":"code","27322b52":"code","5211cec9":"code","48944823":"code","742ed363":"code","3bb4edb1":"code","edd5d6fc":"code","97ac7766":"code","811e4172":"code","bb43377e":"code","55e220ad":"code","242bffc7":"markdown","93d66147":"markdown","b3eab3d3":"markdown","c18930c1":"markdown","831487da":"markdown","8ed0e475":"markdown","abe53981":"markdown","92b4cf3a":"markdown","5b1f024a":"markdown"},"source":{"1a6c2603":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","eb0686a9":"# importing all the required libraries\nimport warnings\nwarnings.filterwarnings('ignore')\nimport numpy as np\nimport skimage.io as io\nfrom skimage.transform import rotate, AffineTransform, warp\nfrom skimage.util import random_noise\nfrom skimage.filters import gaussian\nimport matplotlib.pyplot as plt\nimport PIL.Image\nimport matplotlib.pyplot as plt\nimport torch\nfrom torchvision import transforms","c4a636fb":"def imshow(img, transform):\n    \"\"\"helper function to show data augmentation\n    :param img: path of the image\n    :param transform: data augmentation technique to apply\"\"\"\n    \n    img = PIL.Image.open(img)\n    fig, ax = plt.subplots(1, 2, figsize=(15, 4))\n    ax[0].set_title(f'original image {img.size}')\n    ax[0].imshow(img)\n    img = transform(img)\n    ax[1].set_title(f'transformed image {img.size}')\n    ax[1].imshow(img)","8c5dd1ed":"loader_transform = transforms.Resize((140, 140))\n\nimshow('..\/input\/ice-cream-dataset\/bj\/images\/Vanilla-Caramel-Fudge.png', loader_transform)","6490d2c2":"loader_transform = transforms.CenterCrop(140)\nimshow('..\/input\/ice-cream-dataset\/bj\/images\/Vanilla-Caramel-Fudge.png', loader_transform)","6246f684":"# horizontal flip with probability 1 (default is 0.5)\nloader_transform = transforms.RandomHorizontalFlip(p=1)\nimshow('..\/input\/ice-cream-dataset\/bj\/images\/Vanilla-Caramel-Fudge.png', loader_transform)","84d6623b":"# left, top, right, bottom\nloader_transform = transforms.Pad((2, 5, 0, 5))\nimshow('..\/input\/ice-cream-dataset\/bj\/images\/Vanilla-Caramel-Fudge.png', loader_transform)","270d7f46":"loader_transform = transforms.RandomRotation(30)\nimshow('..\/input\/ice-cream-dataset\/bj\/images\/Vanilla-Caramel-Fudge.png', loader_transform)","27322b52":"# random affine transformation of the image keeping center invariant\nloader_transform = transforms.RandomAffine(0, translate=(0.4, 0.5))\nimshow('..\/input\/ice-cream-dataset\/bj\/images\/Vanilla-Caramel-Fudge.png', loader_transform)","5211cec9":"# reading the image using its path\nimage = io.imread('..\/input\/ice-cream-dataset\/bj\/images\/Vanilla-Caramel-Fudge.png')\n\n# shape of the image\nprint(image.shape)\n\n# displaying the image\nio.imshow(image)","48944823":"print('Rotated Image')\n#rotating the image by 45 degrees\nrotated = rotate(image, angle=45, mode = 'wrap')\n#plot the rotated image\nio.imshow(rotated)","742ed363":"#apply shift operation\ntransform = AffineTransform(translation=(25,25))\nwrapShift = warp(image,transform,mode='wrap')\nplt.imshow(wrapShift)\nplt.title('Wrap Shift')","3bb4edb1":"#flip image left-to-right\nflipLR = np.fliplr(image)\n\nplt.imshow(flipLR)\nplt.title('Left to Right Flipped')","edd5d6fc":"#flip image up-to-down\nflipUD = np.flipud(image)\n\nplt.imshow(flipUD)\nplt.title('Up Down Flipped')","97ac7766":"#standard deviation for noise to be added in the image\nsigma=0.155\n#add random noise to the image\nnoisyRandom = random_noise(image,var=sigma**2)\n\nplt.imshow(noisyRandom)\nplt.title('Random Noise')","811e4172":"#blur the image\nblurred = gaussian(image,sigma=1,multichannel=True)\n\nplt.imshow(blurred)\nplt.title('Blurred Image')","bb43377e":"#Hue can be described of as the shade of the colors in an image\n\nimg = PIL.Image.open('..\/input\/ice-cream-dataset\/bj\/images\/Peanut-Butter-Half-Baked.png')\nfig, ax = plt.subplots(2, 2, figsize=(16, 10))\n\n# brightness\nloader_transform1 = transforms.ColorJitter(brightness=2)\nimg1 = loader_transform1(img)\nax[0, 0].set_title(f'brightness')\nax[0, 0].imshow(img1)\n\n# contrast\nloader_transform2 = transforms.ColorJitter(contrast=2)\nimg2 = loader_transform2(img)\nax[0, 1].set_title(f'contrast')\nax[0, 1].imshow(img2)\n\n# saturation\nloader_transform3 = transforms.ColorJitter(saturation=2)\nimg3 = loader_transform3(img)\nax[1, 0].set_title(f'saturation')\nax[1, 0].imshow(img3)\nfig.savefig('color augmentation', bbox_inches='tight')\n\n# hue\nloader_transform4 = transforms.ColorJitter(hue=0.2)\nimg4 = loader_transform4(img)\nax[1, 1].set_title(f'hue')\nax[1, 1].imshow(img4)\n\nfig.savefig('color augmentation', bbox_inches='tight')","55e220ad":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#a83a32','#a8324e','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Kaggle Notebook Runner: Mar\u00edlia Prata, not a DS. Shh! @mpwolke' )","242bffc7":"#Translation \n\nIn translation, the image is moved either along the x-axis or y-axis.\n\nAffine transformation The affine transformation preserves points, straight lines, and planes. It can be used for scaling, tranlation, shearing, rotation etc.","93d66147":"#Padding In padding, the image is padded with a given value on all sides.","b3eab3d3":"#Scaling In scaling or resizing, the image is resized to the given size e.g. the width of the image can be doubled.","c18930c1":"#Flipping In flipping, the image is flipped horizontally or vertically.","831487da":"#Other way to perform.","8ed0e475":"#Rotation The image is rotated randomly in rotation.","abe53981":"#That snippet didn't work with Vanilla, therefore I changed the Flavour.","92b4cf3a":"#Cropping In cropping, a portion of the image is selected e.g. in the given example the center cropped image is returned.","5b1f024a":"#Codes by Naim Mhedhbi https:\/\/www.kaggle.com\/naim99\/data-augmentation-techniques"}}