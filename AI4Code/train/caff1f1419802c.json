{"cell_type":{"861858b8":"code","a4c7df42":"code","e845bc87":"code","e7e897f2":"code","9367c6bb":"code","99ef121d":"code","c5a164c2":"code","23ee933d":"code","c8b1375b":"code","34ce9deb":"code","d2c7f656":"code","b507b677":"code","3b5ee80a":"code","ca49b2fa":"code","998329af":"code","e5bab44c":"code","d28020fb":"code","add7aabc":"code","aa78a40a":"code","199223d4":"code","154fdb8b":"code","1c35c4cd":"code","1db73885":"code","1b625b1b":"code","e1065194":"code","d1256172":"markdown","87088776":"markdown","1bda7bf2":"markdown","a1c745d0":"markdown","1279f5ac":"markdown","19685a53":"markdown","412cc7ef":"markdown","244bafae":"markdown","0b6ce7a0":"markdown","c686eff1":"markdown","0c0f85bc":"markdown","219a2d8f":"markdown","29cbfc6e":"markdown","8c8836c3":"markdown"},"source":{"861858b8":"pip install plotly","a4c7df42":"pip install chart_studio","e845bc87":"import pandas as pd\nimport numpy as np\nimport chart_studio.plotly as py\nimport cufflinks as cf\nimport seaborn as sns\nimport plotly.express as px\n\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\ninit_notebook_mode(connected=True)\ncf.go_offline()","e7e897f2":"arr_1 = np.random.randn(50,4)\ndf_1 = pd.DataFrame(arr_1,columns=['A','B','C','D'])\ndf_1.head()\ndf_1.iplot()","9367c6bb":"import plotly.graph_objects as go\ndf_stocks = px.data.stocks()\npx.line(df_stocks,x='date',y ='GOOG',labels={'x':'Date','y':'Price'})","99ef121d":"px.line(df_stocks,x='date',y =['GOOG','AAPL'],labels={'x':'Date','y':'Price'},title='Apple vs Google')","c5a164c2":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=df_stocks.date,y = df_stocks.AAPL,mode='lines',name='Apple'))\nfig.add_trace(go.Scatter(x=df_stocks.date,y = df_stocks.AMZN,mode='lines+markers',name='Amazon'))\nfig.add_trace(go.Scatter(x=df_stocks.date,y = df_stocks.GOOG,mode='lines+markers',name='Google',line=dict(color='firebrick',width=2,dash='dashdot')))","23ee933d":"df_us = px.data.gapminder().query(\"country == 'United States'\")\npx.bar(df_us,x='year',y='pop')","c8b1375b":"df_tips = px.data.tips()\npx.bar(df_tips,x='day',y='tip',color='sex',labels={'tip':'Tip Amount','day':'Day of the week'})","34ce9deb":"px.bar(df_tips,x='sex',y='total_bill',color='smoker',barmode='group')","d2c7f656":"df_europe = px.data.gapminder().query(\"continent == 'Europe' and year == 2007 and pop > 2.e6\")\nfig = px.bar(df_europe,y = 'pop',x = 'country',text = 'pop',color = 'country')\nfig","b507b677":"df_iris = px.data.iris()\npx.scatter(df_iris,x='sepal_width',y='sepal_length',color='species',size='petal_length',hover_data=['petal_width'])","3b5ee80a":"fig = go.Figure(data=go.Scattergl(\nx=np.random.randn(100000),\ny = np.random.randn(100000),\nmode='markers',\nmarker=dict(\ncolor=np.random.randn(100000),\ncolorscale='viridis',\nline_width=1)))\nfig","ca49b2fa":"import plotly.express as px\ndf = px.data.gapminder().query(\"year == 2007\").query(\"continent == 'Europe'\")\ndf.loc[df['pop'] < 2.e6, 'country'] = 'Other countries' # Represent only large countries\nfig = px.pie(df, values='pop', names='country', title='Population of European continent')\nfig.show()","998329af":"df = px.data.tips()\nfig = px.pie(df, values='tip', names='day')\nfig.show()","e5bab44c":"df = px.data.gapminder().query(\"year == 2007\").query(\"continent == 'Americas'\")\nfig = px.pie(df, values='pop', names='country',\n             title='Population of American continent',\n             hover_data=['lifeExp'], labels={'lifeExp':'life expectancy'})\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","d28020fb":"dice_1 = np.random.randint(1,7,5000)\ndice_2 = np.random.randint(1,7,5000)\ndice_sum = dice_1+dice_2\nfig = px.histogram(dice_sum,nbins=11,labels={'value':'Dice Roll'},\n                  title = '5000 Dice roll histogram',\n                  marginal='violin',\n                  color_discrete_sequence=['green'])\n\nfig.show()","add7aabc":"df_tips = px.data.tips()\npx.histogram(df_tips,x='total_bill',color='sex')","aa78a40a":"df_tips = px.data.tips()\npx.box(df_tips,x='sex',y = 'tip',points='all')","199223d4":"df_tips = px.data.tips()\npx.box(df_tips,x='day',y = 'tip',points='all',color='sex')","154fdb8b":"df_tips = px.data.tips()\npx.violin(df_tips,y = 'total_bill',box=True,points='all')","1c35c4cd":"df_tips = px.data.tips()\npx.violin(df_tips,x = 'smoker',y = 'total_bill',color = 'sex',box=True,points='all',hover_data = df_tips.columns)","1db73885":"df_flights = sns.load_dataset('flights')\nfig = px.scatter_3d(df_flights,x='year',y = 'month',z='passengers',\n                   color='year',opacity=0.7)\nfig","1b625b1b":"fig = px.line_3d(df_flights,x='year',y = 'month',z='passengers',\n                   color='year')\nfig","e1065194":"df = px.data.gapminder().query('year==2007')\nfig= px.scatter_geo(df,locations='iso_alpha',\n                   color = 'continent',\n                   size='pop',\n                   projection='orthographic')\nfig","d1256172":"**Scatter Plots**","87088776":"**Histograms**","1bda7bf2":"**Basics**","a1c745d0":"**Box Plots**","1279f5ac":"**Import**","19685a53":"**Installation**","412cc7ef":"**Bar Charts**","244bafae":"**Line Plots**","0b6ce7a0":"# Plotly Tutorial  \n\nby https:\/\/www.youtube.com\/watch?v=GGL6U0k8WYA","c686eff1":"**Pie Charts**","0c0f85bc":"**Map Scatter Plots**","219a2d8f":"**3D-Scatter Plot**","29cbfc6e":"**Violin plots**","8c8836c3":"**3D-Line Plot**"}}