{"cell_type":{"b68a6d82":"code","e310f053":"code","d8b1b53d":"code","f1a2406a":"code","0b16d93e":"code","c0e43ba5":"code","68e2b091":"code","6aa845cf":"code","c2fcf9da":"code","f2ce0456":"code","b14bf659":"code","e3f2139a":"code","612fd2b5":"code","dd0b03fc":"code","e9973ca8":"code","667169b1":"code","4b205b6f":"code","cae7b7ef":"markdown","d24b4cca":"markdown","9a3cdac0":"markdown","936f9d3f":"markdown","b07e88a5":"markdown","9add177b":"markdown","e0b10d6d":"markdown","c3856b94":"markdown","f6771941":"markdown","fc4b271b":"markdown","ff09a137":"markdown"},"source":{"b68a6d82":"IMAGES = '\/kaggle\/input\/siim-covid19-detection\/train_image_level.csv'\nSTUDIES = '\/kaggle\/input\/siim-covid19-detection\/train_study_level.csv'","e310f053":"import pandas as pd\nimport plotly.express as px","d8b1b53d":"studies = pd.read_csv(STUDIES, index_col='id')\n# assert studies['id'].nunique() == len(studies)\nstudies = studies.idxmax(axis=1).to_frame(name='case')\nstudies.index = studies.index.str.replace('_study', '')\nstudies.head()","f1a2406a":"labels = pd.read_csv(IMAGES, index_col='id')\n# assert labels['id'].nunique() == len(labels)\n# assert set(labels['StudyInstanceUID']) ^ set(studies.index) == set()\nlabels = labels.merge(studies, left_on='StudyInstanceUID', right_index=True)\nlabels.head()","0b16d93e":"boxes = []\nfor i, row in labels.iterrows():\n    value = row['boxes']\n    if isinstance(value, float): # nan\n        print('x', end='')\n        continue\n    values = eval(value)\n    print('.', end='')\n    for val in values:\n        box = {\n            'image': i,\n            'study': row['StudyInstanceUID'],\n            'case': row['case'],\n            'xmin': val['x'],\n            'ymin': val['y'],\n            'xmax': val['x'] + val['width'],\n            'ymax': val['y'] + val['height'],\n            'width': val['width'],\n            'height': val['height'],\n        }\n        boxes.append(box)\nboxes = pd.DataFrame(boxes)\nboxes.head()","c0e43ba5":"labels.info()","68e2b091":"images_per_study = labels['StudyInstanceUID'].value_counts()\nimages_per_study","6aa845cf":"px.histogram(images_per_study)","c2fcf9da":"images_no_boxes = labels[labels['label']=='none 1 0 0 1 1']\nlen(images_no_boxes) \/ len(labels) * 100","f2ce0456":"boxes.info()","b14bf659":"px.histogram(boxes, x='xmin', color='case')","e3f2139a":"px.histogram(boxes, x='ymin', color='case')","612fd2b5":"px.histogram(boxes, x='xmax', color='case')","dd0b03fc":"px.histogram(boxes, x='ymax', color='case')","e9973ca8":"px.histogram(boxes, x='width', color='case')","667169b1":"px.histogram(boxes, x='height', color='case')","4b205b6f":"px.scatter(boxes, x='width', y='height', color='case')","cae7b7ef":"- We see two modes, one for each lungs\n- The distribution of cases if about the same.\n- There seems to be more boxes on the left lung.","d24b4cca":"- Most studies contain a single image.\n- The maximum number of images per study is 9.","9a3cdac0":"# CONFS","936f9d3f":"## Boxes","b07e88a5":"**Analysis of the training labels\/boxes for the [SIIM COVID-19 Detection](https:\/\/www.kaggle.com\/c\/siim-covid19-detection\/overview) competition**.\n\n**Conclusions**:\n- There is no duplicates.\n- 32% of images don't have a box.\n- There can be multiple images per study!\n- There are two recurring areas: one for each lung.","9add177b":"# DATASETS","e0b10d6d":"- 32% of images don't have boxes.","c3856b94":"# ANALYSIS","f6771941":"# IMPORTS","fc4b271b":"- There is a linear relation between the width and the height.\n- The heigth is often greater than the width (explained by the size of human lungs).","ff09a137":"## Labels"}}