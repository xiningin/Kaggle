{"cell_type":{"ec0fed15":"code","bb0c9c05":"code","6453b2fd":"code","c7186e7b":"code","4c7b2d28":"code","4a3f5807":"code","ff18c48b":"code","8307b7c7":"code","32013296":"code","81293059":"code","097bcf9a":"code","bbe7d000":"code","762af129":"code","39b17c2c":"code","b59eae5a":"code","cdb8e30c":"code","0f2c22ec":"code","bb9e93b6":"code","751d97ad":"code","2f46363b":"code","c5b986c6":"code","4f5848b6":"markdown","93e76adf":"markdown","316250e6":"markdown","1e505702":"markdown","965f4167":"markdown","ec208fd6":"markdown","e2276af3":"markdown","cdc80968":"markdown","26975708":"markdown","35f4c1dc":"markdown","dfc05815":"markdown"},"source":{"ec0fed15":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nplt.style.use('seaborn')\nimport os","bb0c9c05":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6453b2fd":"train = pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')","c7186e7b":"train.label.value_counts().plot.bar(rot=0,title='Number of train samples by label');","4c7b2d28":"plt.imshow(train[train.columns[1:]].sample(1).values.ravel().reshape(28,28));","4a3f5807":"from sklearn.model_selection import train_test_split","ff18c48b":"train_, test_ = train_test_split(train,test_size=0.33,random_state=42,stratify=train.label)","8307b7c7":"'train',train_.label.value_counts() \/ len(train_),'test',test_.label.value_counts() \/ len(test_)","32013296":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import metrics","81293059":"%%time\nknn = KNeighborsClassifier(n_neighbors=3)\nknn.fit(train_[train_.columns[1:]],train_['label'])","097bcf9a":"%%time\nknn_results = test_.copy()\nknn_results['y_pred'] = knn.predict(test_[test_.columns[1:]])","bbe7d000":"print(metrics.classification_report(knn_results.label,knn_results.y_pred))","762af129":"sns.heatmap(metrics.confusion_matrix(knn_results.label,knn_results.y_pred),annot=True,fmt='d');","39b17c2c":"import xgboost as xgb","b59eae5a":"%%time\nxgc = xgb.XGBClassifier(objective='multi:softmax',num_class=train.label.nunique(),n_estimators=300)\nxgc.fit(train_[train_.columns[1:]],train_['label'],verbose=1000)","cdb8e30c":"%%time\nxgc_results = test_.copy()\nxgc_results['y_pred'] = xgc.predict(test_[test_.columns[1:]])","0f2c22ec":"print(metrics.classification_report(xgc_results.label,xgc_results.y_pred))","bb9e93b6":"sns.heatmap(metrics.confusion_matrix(xgc_results.label,xgc_results.y_pred),annot=True,fmt='d');","751d97ad":"%%time\nfull_xgc = xgb.XGBClassifier(objective='multi:softmax',num_class=train.label.nunique(),n_estimators=300)\nfull_xgc.fit(train[train.columns[1:]],train['label'],verbose=1000)","2f46363b":"%%time\nfull_xgc_results = test.copy()\nfull_xgc_results['y_pred'] = full_xgc.predict(test)","c5b986c6":"full_xgc_results['ImageId'] = list(range(1,len(test) + 1))\nfull_xgc_results[['ImageId','y_pred']].rename(columns={'y_pred':'label'}).to_csv('submission.csv',index=False)","4f5848b6":"**XGBoost**","93e76adf":"**Random Sample to Image**","316250e6":"**Number of train samples by label**","1e505702":"**Train \/ Test data**","965f4167":"**KNN**","ec208fd6":"## Data","e2276af3":"**Check if the data it's fair splitted based on label**","cdc80968":"# Digit Recogniser","26975708":"## Imports","35f4c1dc":"**Train on Full Data then create submission file**","dfc05815":"**Load data**"}}