{"cell_type":{"cf5bd3a4":"code","26a2a526":"code","8aa503cd":"code","13c71f22":"code","34a4bf4c":"code","0fb99df8":"code","ffcf7995":"code","605cb8c3":"code","f5e37f72":"code","1a16a2a6":"code","9d064fab":"code","09338794":"code","7ca8e88d":"code","c2e05eae":"code","70a5bc77":"code","bea55511":"code","6344019d":"code","51c92c0c":"code","b273433e":"code","06343a32":"code","1cd5534e":"code","3d49ea78":"code","11efdf3e":"code","f2493f91":"code","3987e202":"code","6f7f52a1":"code","f4354fa7":"code","670a3955":"code","9c6f495b":"code","6926b45e":"code","ef8ddb44":"code","6348fd8c":"code","aff1b5bf":"code","2c6baff8":"code","14c3924f":"code","d48b0348":"code","50537924":"code","1b826e96":"code","fd927f72":"code","996e1272":"code","812460e7":"code","d06b4720":"code","efc96ca6":"code","1bc2defd":"code","f32b7281":"code","89e78bfc":"code","ae180ef8":"code","23a3399a":"code","28650126":"code","04511ccf":"code","3dab0a5d":"code","4f57a6ac":"code","597d7d7b":"code","2ab75b38":"code","a6540f70":"code","20ff09d2":"code","b6922aa8":"code","62e5f286":"code","877ce359":"code","563f1ce3":"code","87a83981":"code","bc31dd4c":"code","f572bd94":"code","aad5590e":"code","3dc97fa2":"code","4a8adf3f":"code","7a11840e":"code","d822b086":"code","8cd185d7":"code","bdeaf15e":"code","3cb31e05":"code","69bb1c6d":"code","10275d1a":"code","420658a6":"code","4e99770b":"code","728433c9":"code","8b96db3f":"code","baaf4532":"code","15aa9fba":"code","54f4c07d":"code","31054f5a":"code","49c7014a":"code","53ad261b":"code","57c3981b":"code","b17764f1":"code","4d7c2ceb":"code","4947e9a2":"code","d3c3a7a5":"code","afa4ca4e":"code","b62a8fef":"code","73b77826":"code","cf2deb18":"code","e4977dba":"code","2fb7fd70":"code","ed80b860":"code","ce06f7c3":"code","3b3dea47":"code","5883c4b2":"code","dad4062c":"code","dd7207a3":"code","228482cc":"code","551dc7e9":"code","e5b05142":"code","4572fdb6":"code","757f15f5":"code","abea6696":"code","ee0bc59b":"code","85864772":"code","5e75806d":"code","421ef512":"code","d5ee5930":"code","fc334971":"code","4d68f69d":"code","261e960d":"code","af62e256":"code","4c10057d":"code","0ebf7202":"code","47d3ec27":"code","a28c7068":"code","50097655":"code","f6b172b0":"code","61e8f7d0":"code","efeca226":"code","120ab03c":"code","3b184df5":"code","db32b6b0":"code","ac4c9625":"code","d2e630e7":"code","9f978df9":"code","46a09e98":"code","dc8eb25d":"code","68eed5ae":"code","b12b21e6":"code","bb0b856e":"code","53cd7802":"code","501ff57b":"code","cdc4719f":"code","54b2a1b8":"code","036bbd38":"code","8ab0219e":"code","52b935df":"code","f12767ca":"code","741f6a3b":"code","e031043f":"code","076be664":"code","c0a0f687":"code","b8ca90ca":"code","f444b0de":"code","739f6c48":"code","cdfaaa1a":"code","8d1c3f8f":"code","52ab29e6":"code","2d40928f":"code","95efb823":"code","3a10bc32":"code","6b68fead":"code","ba264bed":"code","47bc3289":"code","d333da39":"code","034cd5f7":"code","1882709f":"code","5d333374":"code","ac155727":"code","4e9ec0e8":"code","44a69acd":"code","44268d93":"code","da2c8d1b":"code","2934ceee":"code","e10cd9b4":"code","ddc7d5dc":"code","5126e4ff":"code","0b15158f":"code","eecd3226":"code","4795e04d":"code","5d86052d":"code","77d4b4c3":"code","bc33b60c":"code","185865b9":"code","4fd582b0":"code","8269294f":"code","f15c8104":"code","4ad6d836":"code","0c15ee86":"code","16957884":"code","e39c76fd":"code","b684fcb6":"code","1d0513e8":"code","457a3254":"code","c125a3ad":"code","e8e34f58":"code","06a000b5":"code","85a0fa80":"code","69f27487":"code","6525eaf6":"code","0b791b51":"code","5350052c":"code","0fbcf43c":"code","22dc6c45":"code","6a1abad6":"code","6e64cd12":"code","bc6caeed":"code","3b20d2b1":"code","2eedf12c":"code","0b7eab5a":"code","c795770f":"code","caa5912d":"markdown","b4a5c756":"markdown","2bb30a88":"markdown","853bb25f":"markdown","8d4bf869":"markdown","1913259e":"markdown","e3ba1bd4":"markdown","7c2125e4":"markdown","c0d242fa":"markdown","d62b7541":"markdown","0a13c047":"markdown","e2b3eadc":"markdown","c5332a21":"markdown","97d95d5a":"markdown","285252ac":"markdown","133de520":"markdown","8317e5f8":"markdown","20bfe4e3":"markdown","dcd2c17a":"markdown","7a3a41d8":"markdown","6b474db9":"markdown","3c3eb493":"markdown","d30b4941":"markdown","a4fe60c9":"markdown","3406b064":"markdown","5e1af8da":"markdown","f4757e39":"markdown","fcfcc10f":"markdown","fc8ab68a":"markdown","a25ffa22":"markdown","46da3dd3":"markdown","31066425":"markdown","fdfd4820":"markdown","97e01164":"markdown"},"source":{"cf5bd3a4":"# Import the basic libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom pandas import Series, DataFrame\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# libraries related to map\nimport plotly.offline as pyo\nimport plotly.express as px\nimport json\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\n# libraries related to word cloud\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nfrom nltk.tokenize import word_tokenize\nimport nltk","26a2a526":"#Set the display of the data set\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', 20)\npd.set_option('max_colwidth',100)","8aa503cd":"# Load dataset\nsummary_listings = pd.read_csv('..\/input\/202109airbnbdataset\/Summary_listings.csv')","13c71f22":"summary_listings.info()","34a4bf4c":"summary_listings.shape","0fb99df8":"print(\"Number of airbnb hosts in Melbourne: \",len(pd.unique(summary_listings['host_id'])))","ffcf7995":"summary_listings.isnull().sum()","605cb8c3":"#ues the function to check the percentage of missing values\ndef missing_percent(df):\n    percent = 100* df.isnull().sum() \/ len(df)\n    percent = percent[percent>0].sort_values()\n    return percent","f5e37f72":"summary_listings_missing = missing_percent(summary_listings)","1a16a2a6":"summary_listings_missing","9d064fab":"ax = sns.barplot(y=summary_listings_missing.index,x=summary_listings_missing, orient='h')\nax.set_ylabel('column name', fontsize=15)\nax.set_xlabel('percentage of missing value(%)', fontsize=15)\nplt.show()","09338794":"#Use boxplot to view data distribution\nplt.figure(figsize=(20, 5))\nsns.set_theme(style=\"whitegrid\")\nsns.boxplot(x=summary_listings['price'],orient=\"h\")\nplt.show()","7ca8e88d":"#View the distribution of prices\nplt.figure(figsize=(20, 5))\nsns.set_theme(style=\"whitegrid\")\nsns.histplot(x=summary_listings['price'],kde=True)\nplt.show()","c2e05eae":"price_mean = summary_listings['price'].mean()","70a5bc77":"price_mean","bea55511":"price_std = summary_listings['price'].std()","6344019d":"price_std ","51c92c0c":"#Define outliers,Estimated prices that exceed 3 standard deviations are outliers\nprice_range_high = price_mean + 3*price_std","b273433e":"price_range_high","06343a32":"summary_listings[summary_listings['price']>1348]","1cd5534e":"summary_listings[summary_listings['price']>10000].sort_values(by ='price',ascending = False)","3d49ea78":"summary_listings[summary_listings['price']<10]","11efdf3e":"#After observation, there is a listing in which the price is set to 0. It is an enthusiastic host who provided free housing for people in need during the Australian bushfire. Because the data has only one row and is an abnormal market behaviour, so consider deleting it from the data set.","f2493f91":"summary_listings = summary_listings.drop(summary_listings[summary_listings['price']==0].index)","3987e202":"import folium\nfrom folium import plugins\nfrom folium.plugins import HeatMap","6f7f52a1":"#heat map\nairbnb_heatMap = folium.Map([-37.77247,145.09232],zoom_start=10)\nHeatMap(summary_listings[['latitude','longitude']],radius=8,gradient={0.2:'blue',0.4:'purple',0.6:'orange',1.0:'red'}).add_to(airbnb_heatMap)\ndisplay(airbnb_heatMap)","f4354fa7":"airbnb_clusterMap = folium.Map([-37.77247,145.09232], zoom_start=10,width=\"%100\",height=\"%100\")\nmel_locations = list(zip(summary_listings['latitude'], summary_listings['longitude']))\ncluster = plugins.MarkerCluster(locations=mel_locations,popups=summary_listings[\"neighbourhood\"].tolist())\nairbnb_clusterMap.add_child(cluster)\nairbnb_clusterMap","670a3955":"f, ax = plt.subplots(figsize=(30, 20))\nsns.set_theme(style=\"whitegrid\")\nsns.boxplot(data=summary_listings, x = 'price',y = 'neighbourhood')\nsns.set(font_scale = 2)\nplt.show()","9c6f495b":"f, ax = plt.subplots(figsize=(30, 20))\nsns.set_theme(style=\"whitegrid\")\nsns.boxplot(data=summary_listings, x = summary_listings[summary_listings.price<500].price,y = 'neighbourhood')\nsns.set(font_scale = 2)\nplt.show()","6926b45e":"price_median = summary_listings.groupby('neighbourhood')['price'].median().reset_index(name='price_median')","ef8ddb44":"price_median","6348fd8c":"#The median rental price in each suburb\nprice_median = price_median.sort_values(by ='price_median',ascending = False)","aff1b5bf":"f, ax = plt.subplots(figsize=(30, 20))\nsns.set(font_scale = 2)\nsns.barplot(data=price_median, x = 'price_median',y = 'neighbourhood',palette=sns.color_palette('Blues_r',50))","2c6baff8":"#Number of listings in each area\nlisting_counts = summary_listings.groupby('neighbourhood')['id'].count().reset_index(name='listing_counts')","14c3924f":"listing_counts","d48b0348":"#Ranking by number of listings in each region\nlisting_counts = listing_counts.sort_values(by ='listing_counts',ascending = False)","50537924":"f, ax = plt.subplots(figsize=(30, 20))\nsns.set(font_scale = 2)\nsns.barplot(data=listing_counts, x = 'listing_counts',y = 'neighbourhood',palette=sns.color_palette('Blues_r',50))","1b826e96":"mel_geoData = gpd.read_file('..\/input\/airbnb-melbourne\/neighbourhoods.geojson')","fd927f72":"mel_geoData","996e1272":"mel_geo_price =mel_geoData.merge(price_median,on=\"neighbourhood\")","812460e7":"mel_map_price = folium.Map(location=[-37.82914331279211,145.06544718046285 ], zoom_start=10,tiles=None)\n\nmel_map_price.choropleth(geo_data=mel_geo_price,\n             name='Choropleth',         \n             data=mel_geo_price,\n             columns=['neighbourhood','price_median'], \n             key_on='feature.properties.neighbourhood', \n             fill_color='YlOrRd',\n             fill_opacity=0.6, \n             line_opacity=0.8,\n             legend_name='median', \n             smooth_factor=0,     \n             highlight=True\n                 )\n\n# Adding labels to map\nstyle_function = lambda x: {'fillColor': '#ffffff', \n                            'color':'#000000', \n                            'fillOpacity': 0.1, \n                            'weight': 0.1}\n\nSuburbName = folium.features.GeoJson(\n    mel_geo_price,\n    style_function=style_function, \n    control=False,\n    tooltip=folium.features.GeoJsonTooltip(\n        fields=['neighbourhood','price_median'],\n        aliases=['suburb','median price'],\n        style=(\"background-color: white; color: #333333; font-family: arial; font-size: 12px; padding: 10px;\") \n    )\n)\nmel_map_price.add_child(SuburbName)\nmel_map_price.keep_in_front(SuburbName)\nfolium.LayerControl().add_to(mel_map_price)","d06b4720":"mel_map_price","efc96ca6":"listing_counts_map =mel_geoData.merge(listing_counts,on=\"neighbourhood\")","1bc2defd":"listing_counts_map","f32b7281":"mel_map_listing_counts = folium.Map(location=[-37.82914331279211,145.06544718046285 ], zoom_start=10,tiles=None)\n\nmel_map_listing_counts.choropleth(geo_data=listing_counts_map,\n             name='Choropleth',         \n             data=listing_counts_map,\n             columns=['neighbourhood','listing_counts'], \n             key_on='feature.properties.neighbourhood', \n             fill_color='YlOrRd',\n             fill_opacity=0.6, \n             line_opacity=0.8,\n             legend_name='counts', \n             smooth_factor=0,     \n             highlight=True\n                 )\n\n# Adding labels to map\nstyle_function = lambda x: {'fillColor': '#ffffff', \n                            'color':'#000000', \n                            'fillOpacity': 0.1, \n                            'weight': 0.1}\n\nSuburbName = folium.features.GeoJson(\n    listing_counts_map,\n    style_function=style_function, \n    control=False,\n    tooltip=folium.features.GeoJsonTooltip(\n        fields=['neighbourhood','listing_counts'],\n        aliases=['suburb','listing counts'],\n        style=(\"background-color: white; color: #333333; font-family: arial; font-size: 12px; padding: 10px;\") \n    )\n)\nmel_map_listing_counts.add_child(SuburbName)\nmel_map_listing_counts.keep_in_front(SuburbName)\nfolium.LayerControl().add_to(mel_map_listing_counts)","89e78bfc":"mel_map_listing_counts","ae180ef8":"#Room type statistics\nroom_type_counts = summary_listings.groupby('room_type')['id'].count().reset_index(name='room_type_counts')","23a3399a":"room_type_counts","28650126":"#Use a pie chart to show the proportions of various room types\nplt.pie(room_type_counts.room_type_counts,labels=room_type_counts.room_type,autopct='%.0f%%')\nplt.axis('equal')\nplt.show()","04511ccf":"#Top 10 host IDs with the most listings\nsummary_listings['host_id'].value_counts().head(10)","3dab0a5d":"top10_host_listings = summary_listings['host_id'].value_counts().head(10).index.tolist()","4f57a6ac":"top10_host_listings","597d7d7b":"summary_listings[summary_listings['host_id'].isin(top10_host_listings)]['host_name'].value_counts().head(10)","2ab75b38":"summary_listings[summary_listings['host_id'].isin(top10_host_listings)]['host_name'].value_counts(ascending=True).head(10).plot(kind='barh', figsize=(10,6))","a6540f70":"#the host who has the most listings\nhost_id_90729398 = summary_listings[summary_listings['host_id']==90729398]","20ff09d2":"host_id_90729398_map = folium.Map([-37.77247,145.09232], zoom_start=10,width=\"%100\",height=\"%100\")\nhost_id_90729398_locations = list(zip(host_id_90729398['latitude'], host_id_90729398['longitude']))\nfor i in range(len(host_id_90729398_locations)):\n    folium.CircleMarker(location=host_id_90729398_locations[i],radius=10).add_to(host_id_90729398_map)\nhost_id_90729398_map","b6922aa8":"#Top 100 listings with the most number of reviews\nmost_reviews = summary_listings.sort_values(by ='number_of_reviews', ascending = False).head(100)","62e5f286":"most_reviews_map = folium.Map([-37.77247,145.09232], zoom_start=10,width=\"%100\",height=\"%100\")\nmost_reviews_locations = list(zip(most_reviews['latitude'], most_reviews['longitude']))\nfor i in range(len(most_reviews_locations)):\n    folium.CircleMarker(location=most_reviews_locations[i],radius=10).add_to(most_reviews_map)\nmost_reviews_map","877ce359":"most_reviews","563f1ce3":"#process data for the word cloud\ndef generate_word_cloud(data):\n    data = [item.lower() for item in data]\n    data =' '.join(data)\n    data = word_tokenize(data)\n    data =' '.join(word for word in data)\n    return data","87a83981":"top100_most_reviews = generate_word_cloud(most_reviews['name'])\ntop100_most_reviews_cloud = WordCloud(width = 1200,height = 800).generate(top100_most_reviews)\nplt.imshow(top100_most_reviews_cloud, interpolation='bilinear')\nplt.axis('off')\nplt.margins(x=0,y=0)\nplt.title('The word cloud of listing names',fontsize=15)\nplt.show()","bc31dd4c":"detailed_listings = pd.read_csv('..\/input\/202109airbnbdataset\/Detailed_listings.csv')","f572bd94":"detailed_listings.head()","aad5590e":"detailed_listings.info()","3dc97fa2":"#Count the number of appearances of each property type\ndetailed_listings['property_type'].value_counts()","4a8adf3f":"def clean_amenities(data):\n    #remove special characters\n    data['amenities'] = data['amenities'].str.replace('[','').str.replace(']','').str.replace('\"','')\n    #concate processed data\n    amenities_counts = pd.Series(np.concatenate(data['amenities'].map(lambda x:x.split(',')))).value_counts()\n    #convert Series to DataFrame\n    amenities_counts = pd.DataFrame({'amenity_name':amenities_counts.index, 'counts':amenities_counts.values})  \n    return amenities_counts","7a11840e":"amenities_counts = clean_amenities(detailed_listings)","d822b086":"amenities_counts.head(20)","8cd185d7":"#Ranking of the most used facilities in Melbourne listings\nf, ax = plt.subplots(figsize=(30, 20))\nsns.set(font_scale = 2)\nsns.barplot(data=amenities_counts.head(20), x='counts',  y='amenity_name',palette=sns.color_palette('Blues_r',50))","bdeaf15e":"top100_reviews_descriptions = detailed_listings.sort_values(by ='number_of_reviews', ascending = False).head(100)","3cb31e05":"def clean_characters(data):\n    data = data.str.replace('< br \/ >','')\n    data = data.str.replace('< \/b >','')\n    data = data.str.replace('< b >','')\n    data = data.str.replace(' br \/ ','')\n    data = data.str.replace(' \/b ','')\n    data = data.str.replace(' b ','')\n    data = data.str.replace('\/b','')\n    data = data.str.replace('<b>','')\n    data = data.str.replace('<br \/>','')\n    data = data.str.replace(' br ','')  \n    return data","69bb1c6d":"top100_reviews_descriptions = clean_characters(top100_reviews_descriptions['description'])","10275d1a":"top100_reviews_descriptions","420658a6":"top100_reviews_descriptions = generate_word_cloud(top100_reviews_descriptions)\ntop100_reviews_descriptions_cloud = WordCloud(width = 1200,height = 800).generate(top100_reviews_descriptions)\nplt.imshow(top100_reviews_descriptions_cloud, interpolation='bilinear')\nplt.axis('off')\nplt.margins(x=0,y=0)\nplt.title('The word cloud of listing descriptions',fontsize=15)\nplt.show()","4e99770b":"listings_ML1 = detailed_listings[['host_is_superhost', 'host_identity_verified', 'host_verifications','host_has_profile_pic', \n                                       'neighbourhood_cleansed','property_type','room_type','host_response_rate','host_acceptance_rate',\n                     'bedrooms', 'beds','amenities','number_of_reviews','host_response_time','review_scores_accuracy',\n                                  'reviews_per_month','review_scores_rating','price']]","728433c9":"listings_ML1['target']=listings_ML1['host_is_superhost'].apply(lambda x: 1 if x =='t' else 0)","8b96db3f":"#Select numeric columns\n#numeric_columns = detailed_listings.select_dtypes(include=[np.number]).columns.tolist()","baaf4532":"listings_ML1 = listings_ML1.drop('host_is_superhost',axis=1)","15aa9fba":"#new_detailed_listings= detailed_listings[numeric_columns]","54f4c07d":"listings_ML1.isnull().sum()","31054f5a":"#Delete columns that are all empty values\nlistings_ML1.dropna(axis=1, how='all', thresh=None,inplace=True)","49c7014a":"#Delete rows with empty values\nlistings_ML1.dropna(axis=0, how='any', thresh=None,inplace=True)","53ad261b":"listings_ML1.shape","57c3981b":"sns.countplot(x='target',data=listings_ML1);","b17764f1":"listings_ML1.isnull().sum()","4d7c2ceb":"plt.figure(figsize=(30,30))\nsns.heatmap(listings_ML1.corr(),cmap='Blues',annot=True);","4947e9a2":"#\ndef clean_price(data):\n    data['price'] = data['price'].str.replace('$','')\n    data['price'] = data['price'].str.replace(',','')\n    data['price'] = data['price'].astype(float)\n    return data","d3c3a7a5":"listings_ML1 = clean_price(listings_ML1)","afa4ca4e":"#\ndef clean_character(data,col_name):\n    data[col_name] = data[col_name].str.replace('%','')\n    data[col_name] = data[col_name].astype(float)\n    return data","b62a8fef":"listings_ML1 = clean_character(listings_ML1,'host_response_rate')","73b77826":"listings_ML1 = clean_character(listings_ML1,'host_acceptance_rate')","cf2deb18":"# extract the columns that are string values\ndef extract_string(data):\n    x =[]\n    for i in data.columns: \n        if i not in data.select_dtypes(include=[np.number]).columns.tolist():\n            x.append(i)\n    return x","e4977dba":"listings_ML1_str = extract_string(listings_ML1)","2fb7fd70":"listings_ML1_str","ed80b860":"from sklearn.preprocessing import LabelEncoder","ce06f7c3":"listings_ML1[listings_ML1_str] = listings_ML1[listings_ML1_str].apply(LabelEncoder().fit_transform)","3b3dea47":"X = listings_ML1.drop('target',axis=1)\ny = listings_ML1['target']","5883c4b2":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegressionCV ","dad4062c":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=100)","dd7207a3":"scaler = StandardScaler()","228482cc":"scaled_X_train = scaler.fit_transform(X_train)\nscaled_X_test = scaler.transform(X_test)","551dc7e9":"log_model = LogisticRegressionCV()","e5b05142":"log_model.fit(scaled_X_train,y_train)","4572fdb6":"log_model.coef_","757f15f5":"coefs = pd.Series(index=X.columns,data=log_model.coef_[0])","abea6696":"coefs = coefs.sort_values()","ee0bc59b":"# visualize the coefficients \nplt.figure(figsize=(10,6))\nsns.barplot(y=coefs.index,x=coefs.values);","85864772":"from sklearn.metrics import confusion_matrix,classification_report,plot_confusion_matrix","5e75806d":"y_pred = log_model.predict(scaled_X_test)","421ef512":"confusion_matrix(y_test,y_pred)","d5ee5930":"#visualize the confusion matrix\nplot_confusion_matrix(log_model,scaled_X_test,y_test)","fc334971":"print(classification_report(y_test,y_pred))","4d68f69d":"from sklearn.metrics import plot_precision_recall_curve,plot_roc_curve","261e960d":"#precision recall curve\nplot_precision_recall_curve(log_model,scaled_X_test,y_test)","af62e256":"#ROC Curve\nplot_roc_curve(log_model,scaled_X_test,y_test)","4c10057d":"from sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2","0ebf7202":"select_feature = SelectKBest(chi2, k=5).fit(X_train,y_train)","47d3ec27":"select_feature.scores_","a28c7068":"plt.figure(figsize=(14,10))\nscores = select_feature.scores_\nsns.barplot(x= scores,y=X.columns)","50097655":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.feature_selection import RFE\n# Feature extraction\nmodel2 = LogisticRegression(solver='liblinear')\nrfe = RFE(estimator=model2, n_features_to_select=5, step=2)\nfit = rfe.fit(X, y)","f6b172b0":"print(\"Num Features: %s\" % (fit.n_features_))\nprint(\"Selected Features: %s\" % (fit.support_))\nprint(\"Feature Ranking: %s\" % (fit.ranking_))","61e8f7d0":"print('the best 5 feature:',X.columns[rfe.support_])","efeca226":"from sklearn.feature_selection import RFECV\n\nmodel3 = LogisticRegression(solver='liblinear')\nrfecv = RFECV(estimator=model3,step=1,cv=5,scoring='f1')\n\nrfecv.fit(X, y)\n\nprint(\"Optimal number of features:\",rfecv.n_features_)\nprint('the best features:',X.columns[rfecv.support_])","120ab03c":"# Plot number of features VS. cross-validation scores\nplt.figure()\nplt.xlabel(\"Number of features selected\")\nplt.ylabel(\"Cross validation score of selected features\")\nplt.plot(range(1, len(rfecv.grid_scores_) + 1), rfecv.grid_scores_)\nplt.show()","3b184df5":"from mlxtend.feature_selection import SequentialFeatureSelector as sfs\nfrom mlxtend.plotting import plot_sequential_feature_selection as plot_sfs\n\n# Build RF regressor to use in feature selection\nclf = LogisticRegression()\n\n# Sequential Forward Selection\nsfs = sfs(clf,\n           k_features=5, \n           forward=True,\n           floating=True,\n           scoring='f1',\n           cv=5)\n\nsfs = sfs.fit(X, y)","db32b6b0":"selected_features = X.columns[list(sfs.k_feature_idx_)]\nprint(selected_features)\nprint(sfs.k_score_)","ac4c9625":"#Import libraries\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\nfrom sklearn.ensemble import RandomForestRegressor","d2e630e7":"def clean_price(data):\n    data['price'] = data['price'].str.replace('$','')\n    data['price'] = data['price'].str.replace(',','')\n    data['price'] = data['price'].astype(float)\n    return data","9f978df9":"listings_ML2 = clean_price(detailed_listings)","46a09e98":"listings_ML2 = detailed_listings.loc[(detailed_listings['price']> 0)& (detailed_listings['price'] <= 500)]","dc8eb25d":"listings_ML2.shape","68eed5ae":"listings_ML2 = listings_ML2[['host_is_superhost', 'host_identity_verified', 'host_has_profile_pic', \n                                       'neighbourhood_cleansed','property_type','room_type',\n                     'bathrooms', 'bedrooms', 'beds','amenities','number_of_reviews','review_scores_rating', 'price']]","b12b21e6":"#Delete columns that are all empty values\nlistings_ML2.dropna(axis=1, how='all', thresh=None,inplace=True)","bb0b856e":"listings_ML2.shape","53cd7802":"#Delete rows with empty values\nlistings_ML2.dropna(axis=0, how='any', thresh=None,inplace=True)","501ff57b":"listings_ML2.shape","cdc4719f":"listings_ML2.isnull().sum()","54b2a1b8":"# extract the columns that are string values\ndef extract_string(data):\n    x =[]\n    for i in data.columns: \n        if i not in data.select_dtypes(include=[np.number]).columns.tolist():\n            x.append(i)\n    return x","036bbd38":"listings_ML2_str = extract_string(listings_ML2)","8ab0219e":"listings_ML2[listings_ML2_str] = listings_ML2[listings_ML2_str].apply(LabelEncoder().fit_transform)","52b935df":"y = listings_ML2['price']\nx = listings_ML2.drop('price',axis=1)\nX_train,X_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=1)","f12767ca":"from sklearn.preprocessing import StandardScaler\nstd = StandardScaler()\nX_fit = std.fit(X_train)\nX_train = X_fit.transform(X_train)\nX_test = X_fit.transform(X_test)","741f6a3b":"rf = RandomForestRegressor(n_estimators=500,criterion='mse',random_state=3,n_jobs=-1)\nrf.fit(X_train,y_train)\ny_train_predict = rf.predict(X_train)\ny_test_predict = rf.predict(X_test)\nrmse_rf = mean_squared_error(y_test,y_test_predict)**(1\/2)","e031043f":"rmse_rf","076be664":"r2_score(y_test,y_test_predict)","c0a0f687":"from lightgbm import LGBMRegressor","b8ca90ca":"fit_params ={'early_stopping_rounds':30,\n            'eval_metric':'rmse',\n            'eval_set':[(X_test,y_test)],\n            'eval_names':['valid'],\n            'verbose':100,\n            'feature_name': 'auto'}","f444b0de":"lgb = LGBMRegressor(max_depth=20,learning_rate =0.01,n_estimators=1000)\nlgb.fit(X_train,y_train,**fit_params)","739f6c48":"y_pred = lgb.predict(X_test)","cdfaaa1a":"r2_score(y_test,y_pred)","8d1c3f8f":"feature_imp = pd.Series(lgb.feature_importances_, index=x.columns)\nfeature_imp.nlargest(10).plot(kind='barh', figsize=(10,6))","52ab29e6":"calendar = pd.read_csv('..\/input\/202109airbnbdataset\/calendar.csv')","2d40928f":"calendar.info()","95efb823":"calendar = calendar[['listing_id','date','available','price']]","3a10bc32":"calendar.head()","6b68fead":"calendar.date.min(),calendar.date.max()","ba264bed":"calendar.shape","47bc3289":"calendar.isnull().sum()","d333da39":"calendar = calendar.dropna()","034cd5f7":"calendar.isnull().sum()","1882709f":"#Room availability in the next year, observe the peak season in the future\ndef booking_available(data):\n    data = data[['date', 'available']]\n    data['booking_rate'] = data['available'].map( lambda x: 0 if x == 't' else 100)\n    data = data.groupby('date')['booking_rate'].mean().reset_index()\n    data['date'] = pd.to_datetime(data['date'])\n    return data","5d333374":"future_booking = booking_available(calendar)","ac155727":"future_booking ","4e9ec0e8":"future_booking.drop(future_booking.tail(1).index,inplace=True)","44a69acd":"plt.figure(figsize=(20, 10))\nsns.lineplot(x='date', y='booking_rate',data=future_booking)\nplt.title('Airbnb Melbourne Calendar',fontsize=20)\nplt.xlabel(\"date\",fontsize=20)\nplt.ylabel(\"booking rate (%)\",fontsize=20)\nplt.show();","44268d93":"def clean_price(data):\n    data['price'] = data['price'].str.replace('$','')\n    data['price'] = data['price'].str.replace(',','')\n    data['price'] = data['price'].astype(float)\n    return data","da2c8d1b":"calendar = clean_price(calendar)","2934ceee":"calendar['date'] = pd.to_datetime(calendar['date'])\nmean_priceOfMonth = calendar.groupby(calendar['date'].dt.strftime('%b'))['price'].mean().sort_values(ascending=True)","e10cd9b4":"mean_priceOfMonth.plot(kind='barh',figsize=(15,10));","ddc7d5dc":"def price_in_week(data):\n    dayOfWeek = [ 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n    data['dayOfWeek'] = calendar.date.dt.day_name()\n    data = calendar[['dayOfWeek','price']]\n    data = calendar.groupby(['dayOfWeek']).mean().reindex(dayOfWeek)\n    data.drop('listing_id', axis=1, inplace=True)\n    data.reset_index(inplace=True)\n    return data","5126e4ff":"week_price = price_in_week(calendar)","0b15158f":"week_price","eecd3226":"week_price.plot(x=\"dayOfWeek\", y=\"price\",figsize=(15,6))\nplt.show()","4795e04d":"detailed_reviews = pd.read_csv('..\/input\/202109airbnbdataset\/Detailed_reviews.csv')","5d86052d":"detailed_reviews.shape","77d4b4c3":"detailed_reviews.head()","bc33b60c":"detailed_reviews['comments']","185865b9":"# libraries related to word cloud\nfrom wordcloud import WordCloud\nfrom wordcloud import STOPWORDS\nfrom nltk.tokenize import word_tokenize\nimport nltk","4fd582b0":"top200_most_reviews = detailed_listings.sort_values(by ='number_of_reviews', ascending = False).head(200)","8269294f":"top100_good_popular_listings = top200_most_reviews.sort_values(by ='review_scores_rating', ascending = False).head(100)","f15c8104":"top100_good_popular_listings_id = top100_good_popular_listings['id'].tolist()","4ad6d836":"top100_good_popular_listings_df = detailed_reviews[detailed_reviews['listing_id'].apply(lambda x: x in top100_good_popular_listings_id)]","0c15ee86":"top100_good_popular_listings_df","16957884":"def clean_characters(data):\n    data = data.str.replace('< br \/ >','')\n    data = data.str.replace('< \/b >','')\n    data = data.str.replace('< b >','')\n    data = data.str.replace(' br \/ ','')\n    data = data.str.replace(' \/b ','')\n    data = data.str.replace(' b ','')\n    data = data.str.replace('\/b','')\n    data = data.str.replace('<b>','')\n    data = data.str.replace('<br \/>','')\n    data = data.str.replace(' br ','') \n    data = data.str.replace('<br\/>','') \n    data = data.str.replace('br','') \n    data = data.astype(str)\n    return data","e39c76fd":"#process data for the word cloud\ndef generate_word_cloud(data):\n    data = [item.lower() for item in data]\n    data =' '.join(data)\n    data = word_tokenize(data)\n    data =' '.join(word for word in data)\n    return data","b684fcb6":"top100_good_popular_listings_comments = clean_characters(top100_good_popular_listings_df['comments'])","1d0513e8":"top100_good_popular_listings_comments","457a3254":"top100_good_popular_listings_comments = generate_word_cloud(top100_good_popular_listings_comments)","c125a3ad":"#\ntop100_good_comments_cloud = WordCloud(width = 1200,height = 800).generate(top100_good_popular_listings_comments)\nplt.imshow(top100_good_comments_cloud, interpolation='bilinear')\nplt.axis('off')\nplt.margins(x=0,y=0)\nplt.title('The word cloud of comments',fontsize=12)\nplt.show()","e8e34f58":"reviews_counts = detailed_reviews[['date','reviewer_id']]","06a000b5":"reviews_counts = reviews_counts.groupby('date')['reviewer_id'].count().reset_index()","85a0fa80":"reviews_counts = reviews_counts.rename(columns={'reviewer_id':'reviews_counts'})","69f27487":"reviews_counts['date']= pd.to_datetime(reviews_counts['date'])","6525eaf6":"reviews_counts","0b791b51":"plt.figure(figsize=(30, 10))\nsns.lineplot(x='date', y='reviews_counts',data=reviews_counts)\nplt.title('Airbnb Melbourne reviews counts',fontsize=20)\nplt.xlabel(\"date\",fontsize=20)\nplt.ylabel(\"reviews_counts\",fontsize=10)\nplt.show();","5350052c":"#covid19 out break - now\nplt.figure(figsize=(30, 10))\nsns.lineplot(x=reviews_counts[reviews_counts['date'] >'2020'].date, y='reviews_counts',data=reviews_counts)\nplt.title('Airbnb Melbourne reviews counts',fontsize=20)\nplt.xlabel(\"date\",fontsize=20)\nplt.ylabel(\"reviews_counts\",fontsize=10)\nplt.show();","0fbcf43c":"reviews_counts.date.min(),reviews_counts.date.max()","22dc6c45":"covid_Melbourne = pd.read_csv('..\/input\/coviddata\/new  active cases in Victoria.csv')","6a1abad6":"covid_Melbourne['Date']=pd.to_datetime(covid_Melbourne['Date'])","6e64cd12":"covid_Melbourne = covid_Melbourne.set_index('Date')","bc6caeed":"reviews_counts_new = reviews_counts.set_index('date')","3b20d2b1":"#Merging the two data sets of reviews_counts_new and covid_Melbourne\ncovid19_impact = covid_Melbourne.join(reviews_counts_new,how=\"inner\")","2eedf12c":"covid19_impact","0b7eab5a":"covid19_impact.plot(figsize=(20,10));","c795770f":"covid19_impact['New_Cases'].loc['2020-01':'2021-09'].plot(figsize=(30,10),label='new cases',\\\n                                    title='The relationship between covid19 cases and aidbnb comments')\ncovid19_impact['reviews_counts'].loc['2020-01':'2021-09'].plot(figsize=(30,10),label='reviews_counts')\nplt.legend();","caa5912d":"<a class=\"anchor\" id=\"Conclusion\"><\/a>\n## Conclusion","b4a5c756":"<a class=\"anchor\" id=\"CalendarData\"><\/a>\n## Analysis of calendar data set","2bb30a88":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\"><strong style=\"color:#006DAE\">Insights <\/strong> \n<ul>\n    <li>When the number of new confirmed cases of COVID-19 in Melbourne rises, the number of comments on Airbnb drops\n<\/li>\n    <\/ul>   \n<\/div>","853bb25f":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\"><strong style=\"color:#006DAE\">Insights <\/strong> \n<ul>\n    <li>Service is more important than facilities\n<\/li>\n    <\/ul>   \n<\/div>","8d4bf869":"<a class=\"anchor\" id=\"DataSources\"><\/a>\n## Data Sources","1913259e":"<a class=\"anchor\" id=\"RandomForest\"><\/a>\n### RandomForest","e3ba1bd4":"# Data Exploration on Airbnb Melbourne\n\n##  An Exploratory Analysis of Airbnb's Data to Understand the Short-term Rental Market in Melbourne","7c2125e4":"#### Randomly checked the prices of listings which with more than 3 standard deviations, and checked the listings with more than 10,000 Australian dollars per night, all of which are real listings, so consider keeping these listings","c0d242fa":"#### Dealing with outliers","d62b7541":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\"><strong style=\"color:#006DAE\">Insights <\/strong> \n<ul>\n    <li>Kitchen facilities are ranked first, WIFI, heating and other amenities are also ranked very high.\n<\/li>\n    <\/ul>   \n<\/div>","0a13c047":"<a class=\"anchor\" id=\"LightGBM\"><\/a>\n### LightGBM","e2b3eadc":"#### Dealing with missing values","c5332a21":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\"><strong style=\"color:#006DAE\">Insights <\/strong> \n<ul>\n    <li>When Covid19 outbreak, the number of Airbnb reviews plummeted\n<\/li>\n    <\/ul>   \n<\/div>","97d95d5a":"<a class=\"anchor\" id=\"LogisticRegressionCV\"><\/a>\n### LogisticRegressionCV","285252ac":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\"><strong style=\"color:#006DAE\">Insights <\/strong> \n<ul>\n    <li>This host's listings are mainly located in the city, Melbourne Zoo, St Kilda and other places with convenient transportation or popular attractions<\/li>\n    <\/ul>   \n<\/div>","133de520":"<a class=\"anchor\" id=\"DetailedListings\"><\/a>\n## Analysis of detailed listings dataset","8317e5f8":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\"><strong style=\"color:#006DAE\">Insights <\/strong> \n<ul>\n    <li>Hosts like to name their listing by room type, location, etc.\n<\/li>\n    <\/ul>   \n<\/div>","20bfe4e3":"<a class=\"anchor\" id=\"SummaryListings\"><\/a>\n## Analysis of summary listings dataset","dcd2c17a":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\">\n    <strong style=\"color:#006DAE\">Marketing advice<\/strong> \n<ul>\n    <li>Hosts can prepare for the following December and January, such as increase exposure through advertising.<\/li>\n<li>Set keywords and descriptions according to user preferences to increase search exposure rate.<\/li>\n    <\/ul>   \n        <strong style=\"color:#006DAE\">Pricing Strategy<\/strong> \n<ul>\n    <li>The hosts can adjust the price according to the month and weekend fluctuations to gain more profits.<\/li>\n<li>The price-setting can refer to the median price of each suburb.\n<\/li>\n    <\/ul>   \n        <strong style=\"color:#006DAE\">Others<\/strong> \n<ul>\n    <li>The host can become a super host by improving the service level, such as increasing the response rate and responding to customer inquiries as soon as possible.\n<\/li>\n    <\/ul>  \n<\/div>","7a3a41d8":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\"><strong style=\"color:#006DAE\">Insights <\/strong> \n<ul>\n    <li>Through the heat map and the cluster map, we can observe that Melbourne\u2019s Airbnb listings mainly are located in the city area.<\/li>\n    <\/ul>   \n<\/div>","6b474db9":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\"><strong style=\"color:#006DAE\">Insights <\/strong> \n<ul>\n    <li>Observing the price boxplot shows that the overall price of listings located in Yarra Ranges will be higher than in other regions.<\/li>\n    <\/ul>   \n<\/div>","3c3eb493":"<a class=\"anchor\" id=\"foliumMap\"><\/a>\n### Use folium map to visualize data","d30b4941":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\"><strong style=\"color:#006DAE\">Insights <\/strong> \n<ul>\n    <li>The average price on weekends will be higher than other days\n\n<\/li>\n    <\/ul>   \n<\/div>","a4fe60c9":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\">\nAirbnb is a service-oriented website that connects tourists and landlords with vacant rentals, and can provide users with various accommodation information. \n\nAccording to the official website description, Airbnb was established in August 2008 and is headquartered in San Francisco, California. At present, Airbnb has operated in more than 191 countries, 65,000 cities, and has more than 4 million listings. This platform has become a vital force that cannot be ignored in the short-term rental and tourism markets. \n\nAirbnb entered the Melbourne market in August 2010. Let us through this project to understand the operation of Airbnb in Melbourne. At the same time, we also provide hosts with brief insights based on data analysis and predictions and observations after the COVID-19 pandemic.  \n<\/div>","3406b064":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\"><strong style=\"color:#006DAE\">Insights <\/strong> \n<ul>\n    <li>December and January are Melbourne's traditional peak tourist seasons, and the average rental price in these two months is also the highest.\n\n<\/li>\n    <\/ul>   \n<\/div>","5e1af8da":"<a class=\"anchor\" id=\"Introduction\"><\/a>\n## Introduction","f4757e39":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\"><strong style=\"color:#006DAE\">Insights <\/strong> \n<ul>\n    <li>Guests like to comment on the location, facilities and services of the listing\n<\/li>\n    <\/ul>   \n<\/div>","fcfcc10f":"\n## Table of Contents\n\n* [Introduction](#Introduction)\n* [Analysis of summary listings dataset](#SummaryListings)\n* [Analysis of detailed listings dataset](#DetailedListings)\n    * [foliumMap](#foliumMap)\n    * [LogisticRegressionCV](#LogisticRegressionCV)\n    * [Select best features](#bestFeatures)\n    * [RandomForest](#RandomForest)\n    * [LightGBM](#LightGBM)            \n* [Analysis of calendar dataset](#CalendarData)\n* [Analysis of detailed review dataset](#ReviewData)\n* [Conclusion](#Conclusion)\n* [Data Sources](#DataSources)","fc8ab68a":"<a class=\"anchor\" id=\"ReviewData\"><\/a>\n## Analysis of detailed review data set","a25ffa22":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\"><strong style=\"color:#006DAE\">Insights <\/strong> \n<ul>\n    <li>The Melbourne city area has most of the listings, and the top 4 areas are also next to the city area.\n\n<\/li>\n    <\/ul>   \n<\/div>","46da3dd3":"<a class=\"anchor\" id=\"bestFeatures\"><\/a>\n### Select the best features","31066425":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\"><strong style=\"color:#006DAE\">Insights <\/strong> \n<ul>\n    <li>Yarra Ranges has the highest median rental price. This place has attractions such as Puffing Billy Railway, Dandenong Ranges National Park, etc.\n\n<\/li>\n    <\/ul>   \n<\/div>","fdfd4820":"http:\/\/insideairbnb.com\/get-the-data.html \n\nhttps:\/\/www.coronavirus.vic.gov.au\/victorian-coronavirus-covid-19-data","97e01164":"<div style=\"background:rgba(0,109,174,0.2);padding:10px;border-radius:4px\"><strong style=\"color:#006DAE\">Insights <\/strong> \n<ul>\n    <li>According to the Airbnb calendar data, it is expected that the following December and January will usher in the booking peak.\n<\/li>\n    <\/ul>   \n<\/div>"}}