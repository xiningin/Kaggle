{"cell_type":{"9cf5c42a":"code","235270d7":"code","ff802b53":"code","dbf6096e":"code","7351926a":"code","92c76cde":"code","58670e21":"code","8e792e77":"code","e8a694a4":"code","a1c837ff":"code","3985b436":"code","37adc445":"code","f8efb2cc":"code","6b638973":"code","8cfa30c8":"code","5bbe589a":"code","d3a93855":"code","aa66ea91":"code","eabaa83f":"code","52f5159d":"code","9c94e4de":"code","f851d0e3":"code","4a3b077f":"code","8867a7dc":"code","2fe71eca":"code","77e98edf":"code","5b8e1d00":"code","de1e15ca":"code","7d566c63":"code","cf92260f":"code","3b9c781b":"code","3d8533e0":"code","5656fa50":"code","b8ec1fe9":"code","54761113":"code","c7d77802":"code","b3b7f2c4":"code","7fc76db5":"code","da2e437d":"code","59550b01":"code","1b616c1b":"code","62fd1840":"code","8e89ee65":"code","53d0f016":"code","4091ac40":"code","19bba147":"code","9adf29dd":"code","88c80e4f":"code","3682791d":"code","da555553":"code","c9df1b6c":"code","048c40d8":"code","2dec7687":"code","b34bde43":"code","16e82119":"code","7bab5d0b":"code","b09724e2":"code","42ec8481":"code","6d27682c":"code","c593d096":"code","d4cbfc3e":"code","f2263097":"code","a9f1d2ec":"code","f54eac4f":"code","0f191acf":"code","bc72e396":"code","52f5b42b":"code","e89ea72b":"code","a9649c91":"code","abf9d9dc":"code","f0db9039":"code","b96c5ed4":"code","2c97528b":"code","a0c2e5cc":"markdown","2f3d8613":"markdown","c6a79e3d":"markdown","0a8720b9":"markdown","ea136b43":"markdown","db463d1f":"markdown","d816d48c":"markdown","eb77c280":"markdown","aad43096":"markdown","95eeddcc":"markdown","bda65537":"markdown","368e84fa":"markdown","8769ba68":"markdown","9eb8de85":"markdown","ffea232b":"markdown","8130650b":"markdown","736daadc":"markdown","ea1437f3":"markdown","c1fbb02c":"markdown","885e6f83":"markdown","a91f7cf4":"markdown","a6a7a018":"markdown","4e45f89d":"markdown","c74d308b":"markdown","3421e38a":"markdown","01bfca4b":"markdown","f408ae54":"markdown","58d76bf9":"markdown","beb9b1ed":"markdown","fdb118a5":"markdown","72ff328f":"markdown","2cedffeb":"markdown","91f7146a":"markdown","dc30e466":"markdown","f1b45d9e":"markdown","6ce57602":"markdown","f6cd4647":"markdown","a395ba50":"markdown","206065a7":"markdown","01f73189":"markdown","e81ddea7":"markdown","e8930906":"markdown","18e28445":"markdown","749f54be":"markdown"},"source":{"9cf5c42a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # this is used for the plot the graph \nimport seaborn as sns # used for plot interactive graph.\n\nimport matplotlib.pyplot as plt\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom pylab import rcParams\n# figure size in inches\n\n%matplotlib inline","235270d7":"## Read file\n\ndata = pd.read_csv(\"..\/input\/googleplaystore.csv\")","ff802b53":"data.head()","dbf6096e":"print(data.shape)","7351926a":"#missing data\ntotal = data.isnull().sum().sort_values(ascending=False)\npercent = (data.isnull().sum()\/data.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(6)","92c76cde":"data.dropna(how ='any', inplace = True)","58670e21":"#missing data\ntotal = data.isnull().sum().sort_values(ascending=False)\npercent = (data.isnull().sum()\/data.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(6)","8e792e77":"print(data.shape)","e8a694a4":"data['Rating'].describe()","a1c837ff":"# rating distibution \nrcParams['figure.figsize'] = 11.7,8.27\ng = sns.kdeplot(data.Rating, color=\"Red\", shade = True)\ng.set_xlabel(\"Rating\")\ng.set_ylabel(\"Frequency\")\nplt.title('Distribution of Rating',size = 20)","3985b436":"print( len(data['Category'].unique()) , \"categories\")\n\nprint(\"\\n\", data['Category'].unique())","37adc445":"g = sns.countplot(x=\"Category\",data=data, palette = \"Set1\")\ng.set_xticklabels(g.get_xticklabels(), rotation=90, ha=\"right\")\ng \nplt.title('Count of app in each category',size = 20)","f8efb2cc":"g = sns.catplot(x=\"Category\",y=\"Rating\",data=data, kind=\"box\", height = 10 ,\npalette = \"Set1\")\ng.despine(left=True)\ng.set_xticklabels(rotation=90)\ng.set( xticks=range(0,34))\ng = g.set_ylabels(\"Rating\")\nplt.title('Boxplot of Rating VS Category',size = 20)","6b638973":"data['Reviews'].head()","8cfa30c8":"# convert to int\n\ndata['Reviews'] = data['Reviews'].apply(lambda x: int(x))","5bbe589a":"# rating distibution \nrcParams['figure.figsize'] = 11.7,8.27\ng = sns.kdeplot(data.Reviews, color=\"Green\", shade = True)\ng.set_xlabel(\"Reviews\")\ng.set_ylabel(\"Frequency\")\nplt.title('Distribution of Reveiw',size = 20)","d3a93855":"data[data.Reviews > 5000000].head()","aa66ea91":"plt.figure(figsize = (10,10))\ng = sns.jointplot(x=\"Reviews\", y=\"Rating\",color = 'orange', data=data,size = 8);","eabaa83f":"plt.figure(figsize = (10,10))\nsns.regplot(x=\"Reviews\", y=\"Rating\", color = 'darkorange',data=data[data['Reviews']<1000000]);\nplt.title('Rating VS Reveiws',size = 20)","52f5159d":"data['Size'].head()","9c94e4de":"data['Size'].unique()","f851d0e3":"len(data[data.Size == 'Varies with device'])","4a3b077f":"# change it to NA first\n\ndata['Size'].replace('Varies with device', np.nan, inplace = True ) ","8867a7dc":"data.Size = (data.Size.replace(r'[kM]+$', '', regex=True).astype(float) * \\\n             data.Size.str.extract(r'[\\d\\.]+([KM]+)', expand=False)\n            .fillna(1)\n            .replace(['k','M'], [10**3, 10**6]).astype(int))","2fe71eca":"data['Size'].fillna(data.groupby('Category')['Size'].transform('mean'),inplace = True)","77e98edf":"plt.figure(figsize = (10,10))\ng = sns.jointplot(x=\"Size\", y=\"Rating\",color = 'orangered', data=data, size = 8);","5b8e1d00":"data['Installs'].head()","de1e15ca":"data['Installs'].unique()","7d566c63":"data.Installs = data.Installs.apply(lambda x: x.replace(',',''))\ndata.Installs = data.Installs.apply(lambda x: x.replace('+',''))\ndata.Installs = data.Installs.apply(lambda x: int(x))","cf92260f":"data['Installs'].unique()","3b9c781b":"Sorted_value = sorted(list(data['Installs'].unique()))","3d8533e0":"data['Installs'].replace(Sorted_value,range(0,len(Sorted_value),1), inplace = True )","5656fa50":"data['Installs'].head()","b8ec1fe9":"plt.figure(figsize = (10,10))\nsns.regplot(x=\"Installs\", y=\"Rating\", color = 'teal',data=data);\nplt.title('Rating VS Installs',size = 20)","54761113":"data['Type'].unique()","c7d77802":"# Data to plot\nlabels =data['Type'].value_counts(sort = True).index\nsizes = data['Type'].value_counts(sort = True)\n\n\ncolors = [\"palegreen\",\"orangered\"]\nexplode = (0.1,0)  # explode 1st slice\n \nrcParams['figure.figsize'] = 8,8\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,\n        autopct='%1.1f%%', shadow=True, startangle=270,)\n\nplt.title('Percent of Free App in store',size = 20)\nplt.show()","b3b7f2c4":"data['Free'] = data['Type'].map(lambda s :1  if s =='Free' else 0)\ndata.drop(['Type'], axis=1, inplace=True)","7fc76db5":"data['Price'].head()","da2e437d":"data.Price.unique()","59550b01":"data['Price'].value_counts().head(30)","1b616c1b":"data.Price = data.Price.apply(lambda x: x.replace('$',''))\ndata['Price'] = data['Price'].apply(lambda x: float(x))","62fd1840":"data['Price'].describe()","8e89ee65":"data[data['Price'] == 400]","53d0f016":"plt.figure(figsize = (10,10))\nsns.regplot(x=\"Price\", y=\"Rating\", color = 'darkorange',data=data[data['Reviews']<1000000]);\nplt.title('Scatter plot Rating VS Price',size = 20)","4091ac40":"data.loc[ data['Price'] == 0, 'PriceBand'] = '0 Free'\ndata.loc[(data['Price'] > 0) & (data['Price'] <= 0.99), 'PriceBand'] = '1 cheap'\ndata.loc[(data['Price'] > 0.99) & (data['Price'] <= 2.99), 'PriceBand']   = '2 not cheap'\ndata.loc[(data['Price'] > 2.99) & (data['Price'] <= 4.99), 'PriceBand']   = '3 normal'\ndata.loc[(data['Price'] > 4.99) & (data['Price'] <= 14.99), 'PriceBand']   = '4 expensive'\ndata.loc[(data['Price'] > 14.99) & (data['Price'] <= 29.99), 'PriceBand']   = '5 too expensive'\ndata.loc[(data['Price'] > 29.99), 'PriceBand']  = '6 FXXXing expensive'\n","19bba147":"data[['PriceBand', 'Rating']].groupby(['PriceBand'], as_index=False).mean()","9adf29dd":"g = sns.catplot(x=\"PriceBand\",y=\"Rating\",data=data, kind=\"boxen\", height = 10 ,palette = \"Pastel1\")\ng.despine(left=True)\ng.set_xticklabels(rotation=90)\ng = g.set_ylabels(\"Rating\")\nplt.title('Boxen plot Rating VS PriceBand',size = 20)","88c80e4f":"import random\n\ndef generate_color():\n    color = '#{:02x}{:02x}{:02x}'.format(*map(lambda x: random.randint(0, 255), range(3)))\n    return color","3682791d":"# Create palette for categories\n\nflatui = []\nfor i in range(0,len(data['Category'].unique()),1):\n    flatui.append(generate_color())","da555553":"g = sns.catplot(x=\"PriceBand\", y=\"Rating\", hue=\"Category\", kind=\"swarm\", data=data,palette = flatui,size = 10)\ng.despine(left=True)\ng.set_xticklabels(rotation=90)\nplt.title('Category in each Priceband VS Rating',size = 20)","c9df1b6c":"data['Content Rating'].unique()","048c40d8":"g = sns.catplot(x=\"Content Rating\",y=\"Rating\",data=data, kind=\"box\", height = 10 ,palette = \"Paired\")\ng.despine(left=True)\ng.set_xticklabels(rotation=90)\ng = g.set_ylabels(\"Rating\")\nplt.title('Box plot Rating VS Content Rating',size = 20)","2dec7687":"data[data['Content Rating']=='Unrated']","b34bde43":"data = data[data['Content Rating'] != 'Unrated']","16e82119":"data = pd.get_dummies(data, columns= [\"Content Rating\"])","7bab5d0b":"print( len(data['Genres'].unique()) , \"genres\")\n\nprint(\"\\n\", data['Genres'].unique())","b09724e2":"data.Genres.value_counts().head(10)","42ec8481":"data.Genres.value_counts().tail(10)","6d27682c":"data['Genres'] = data['Genres'].str.split(';').str[0]","c593d096":"print( len(data['Genres'].unique()) , \"genres\")\n\nprint(\"\\n\", data['Genres'].unique())\n","d4cbfc3e":"data.Genres.value_counts().tail(10)","f2263097":"data['Genres'].replace('Music & Audio', 'Music',inplace = True)","a9f1d2ec":"data[['Genres', 'Rating']].groupby(['Genres'], as_index=False).mean().describe()","f54eac4f":"data[['Genres', 'Rating']].groupby(['Genres'], as_index=False).mean().sort_values('Rating').head(1)","0f191acf":"data[['Genres', 'Rating']].groupby(['Genres'], as_index=False).mean().sort_values('Rating').tail(1)","bc72e396":"g = sns.catplot(x=\"Genres\",y=\"Rating\",data=data, kind=\"boxen\", height = 10 ,palette = \"Paired\")\ng.despine(left=True)\ng.set_xticklabels(rotation=90)\ng = g.set_ylabels(\"Rating\")\nplt.title('Boxenplot of Rating VS Genres',size = 20)","52f5b42b":"data['Last Updated'].head()","e89ea72b":"data['new'] = pd.to_datetime(data['Last Updated'])\ndata['new'].describe()","a9649c91":"# new format of  Last Updated\ndata['new'].max() ","abf9d9dc":"# Example of finding difference between two dates in pandas\ndata['new'][0] -  data['new'].max()","f0db9039":"data['lastupdate'] = (data['new'] -  data['new'].max()).dt.days\ndata['lastupdate'].head()","b96c5ed4":"plt.figure(figsize = (10,10))\nsns.regplot(x=\"lastupdate\", y=\"Rating\", color = 'lightpink',data=data );\nplt.title('Rating  VS Last Update( days ago )',size = 20)","2c97528b":"data.head()","a0c2e5cc":"**<font color='forestgreen'> Note <\/font>**\n\n    I decide to change it to \"datetime\" format but it still can't use in raw,\n    I create new feature which called \"lastupdate\",\n    \"lastupdate\" will contain how long is this app got update in last time (... days ago).\n    I assume that today is the day which the latest Update of application in this dataset (2018 - 08 -08)","2f3d8613":"## Content Rating","c6a79e3d":"**<font color='tomato'> Finding<\/font>**\n\n    Data still in object type, and contain the metric symbol for the perefix,\n    and special size which are \"Varies with device\" that we need to deal with it.","0a8720b9":"**<font color='tomato'> Finding<\/font>**\n\n    Data still in object type, and contain the plus sign","ea136b43":"**<font color='tomato'> Finding<\/font>**\n\n    Average of price is around 0.96, but most of them are free (8715 from 9360).\n    The most expensive app is 400 dollar !!!.","db463d1f":"**<font color='tomato'> Finding<\/font>**\n\n    Average of rating of application in store is around 4 which is very high","d816d48c":"## Genres","eb77c280":"**<font color='tomato'> Finding<\/font>**\n\n    Observing from Standard Deviation, seem like genre is not effect too much to rating.\n    The lowest of an average rating on genres (Dating) is 3.97 \n    while the highest (Events) is 4.43\n   ","aad43096":"## Type","95eeddcc":"**<font color='tomato'> Finding<\/font>**\n\n    Data still in object type, we need to convert to int","bda65537":"## Price","368e84fa":"**<font color='tomato'> Finding<\/font>**\n\n    After remove missing data,\n    our data contain 9,360 records with 13 fields","8769ba68":"# Introduction\n\nFrom google playstore dataset, I decide to make some simple notebook for Exploratory Data Analysis<br>\nand do some wrangling data for put it on my prediction model in future <br>\n\n\nIn this kernel,\n\n - Simple Exploratory Data Analysis\n - Data preprocessing\n - ...","9eb8de85":"**<font color='tomato'> Finding<\/font>**\n\n    Content Rating not effect too much to rating, \n    but in Mature applications ,look like they get lower rating than other.","ffea232b":"## Size","8130650b":"![imglink](http:\/\/emojimyface.com\/wp-content\/uploads\/2015\/01\/msg-apps-icons-trans.png)\n","736daadc":"**<font color='tomato'> Finding<\/font>**\n\n    Seem like number of install affect to rating","ea1437f3":"**<font color='forestgreen'> Note <\/font>**\n\n    Group Music & Audio  as  Music","c1fbb02c":"## Last Updated","885e6f83":"    Thanks you for read til the end.\n    If I made some mistake, please tell me in comment.\n    and...\n    \n    Vote up this kernel if you like it :)\n    \n    Next version will update soon...","a91f7cf4":"**<font color='forestgreen'> Note <\/font>**\n\n    Because string can't enter to model, I need to change format a little bit","a6a7a018":"![imglink](https:\/\/cdn.wccftech.com\/wp-content\/uploads\/2017\/09\/download-google-play-store-1.png)\n","4e45f89d":"**<font color='tomato'> Finding<\/font>**\n\n    Game and Family category are the most appearances for application in store","c74d308b":"# Google Play Store Visualization","3421e38a":"**<font color='tomato'> Finding<\/font>**\n\n    \"Last Updated\" feature still in String format, we need to change it in someway for plot or put it in model","01bfca4b":"**<font color='tomato'> Finding<\/font>**\n\n    Most of application in this store are free (93.1%).","f408ae54":"**<font color='forestgreen'> Note <\/font>**\n\n    I decide to fill \"Varies with device\" with mean of size in each category","58d76bf9":"**<font color='tomato'> Finding<\/font>**\n\n    Rating of application in each category is not different too much ","beb9b1ed":"### Category","fdb118a5":"**<font color='forestgreen'> Note <\/font>**\n\n    Many genre contain only few record, it may make a bias.\n    Then, I decide to group it to bigger genre by ignore sub-genre (after \" ; \" sign)","72ff328f":"**<font color='forestgreen'> Note <\/font>**\n\n    I encode it by order of size;\n    ex: 0 refer to 1+\n        1 refer to 5+\n        2 refer  to 10+\n        .\n        .\n        .","2cedffeb":"**<font color='tomato'> Finding<\/font>**\n\n    Higher price application may make customer disappointed, if they are not good enough.","91f7146a":"**<font color='tomato'> Finding<\/font>**\n\n    Price are not effect to rating ,but if it is very expensive, it might get low rating","dc30e466":"**<font color='tomato'> Finding<\/font>**\n\n    Seem like well-known application will get a good rating","f1b45d9e":"### Data exploration","6ce57602":"### Reviews","f6cd4647":"**<font color='forestgreen'> Note <\/font>**\n\n    Try to visualize in type of band, it may easier to understand","a395ba50":"## Rating","206065a7":"## Installs","01f73189":"**<font color='tomato'> Finding<\/font>**\n\n    Most of application in this store have less than 1M in reviews.\n    Obviously, well-known applictions have a lot of reviews","e81ddea7":"**<font color='forestgreen'> Note <\/font>**\n\n    I decide to drop 'Unrated' rating because it contain only 1 record","e8930906":"## Import libraries","18e28445":"![imglink](https:\/\/lh3.googleusercontent.com\/j1tsG7eaKkVidSRk6eE25bX7sQASNGdfrUof50UM7rKu-HV_Qg7dLeKyHPSxkx-myQ=s180)\n","749f54be":"**<font color='tomato'> Finding<\/font>**\n\n    Data is in object type, in format of dollar sign."}}