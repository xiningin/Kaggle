{"cell_type":{"3b766ed4":"code","02ce319d":"code","2464ff92":"code","1911a167":"code","3b24c717":"code","ece3d586":"code","6225107c":"code","1e7025ae":"code","dcbe1173":"code","1092ac9c":"code","41e6d1db":"code","6b17031a":"code","b01ca00d":"code","e2c4b38b":"code","ba907274":"code","862ac01c":"code","e81a579a":"code","619cf5df":"code","033b8930":"code","cd632c06":"code","70d2fe97":"code","809a5818":"code","b37e8b80":"code","f8ed107a":"markdown","166042da":"markdown","bfd88d0b":"markdown","fee24224":"markdown","acb22a3d":"markdown","b3331ba8":"markdown","7004d351":"markdown","5ea7c31c":"markdown","11843994":"markdown","a74d4bab":"markdown","cf809f22":"markdown","6aef2aa0":"markdown","a2f34350":"markdown","a38e8201":"markdown","9da169fc":"markdown","9d35b920":"markdown","7a30238a":"markdown","3da30835":"markdown","6badf610":"markdown","924b0086":"markdown","6de60870":"markdown","ef6741e9":"markdown","8cde8b91":"markdown","6fc81c6b":"markdown","40aa77ef":"markdown","d91e574b":"markdown","bf85939f":"markdown","d4c5f9b4":"markdown","8f385c96":"markdown","edb468e6":"markdown","fe892373":"markdown","047b725f":"markdown","10e1e7a4":"markdown","ccc61a3f":"markdown","98c216d8":"markdown","e5be86bc":"markdown","6525133e":"markdown"},"source":{"3b766ed4":"!pip install pycountry_convert","02ce319d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nimport plotly.express as px\nimport matplotlib.pyplot as plt\n\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nimport pycountry_convert as pc\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2464ff92":"migration = pd.read_csv(\"\/kaggle\/input\/indian-migration-history\/IndianMigrationHistory.csv\")\nprint(migration.info())\nmigration.head()","1911a167":"# Renaming column names\nmigration = migration.rename(columns={'Country Origin Name':'Origin','Migration by Gender Name':'Gender','2000 [2000]':'2000','1990 [1990]':'1990','1980 [1980]':'1980','1970 [1970]':'1970','1960 [1960]':'1960','Country Dest Code':'DestCode','Migration by Gender Code':'GenCode','Country Origin Code':'OriCode','Country Dest Name':'Country'})\n\n# Dropping some columns\nmigration = migration.drop(columns=['GenCode','DestCode','OriCode'],axis=1)\n\n# Adding some columns\nmigration['Year'] = '0'\nmigration['Population'] = 0\n\nprint(migration.columns)","3b24c717":"# Remove the total column\nmig = migration[migration['Gender'] != 'Total']\nmig.shape","ece3d586":"# We have years as columns, we want to make them as values in the column year. \n# We are also adding migration numbers per year\/gender to the 'pop' column\n\ndef populate_years(df):\n    for ind in (df.index):\n        if ((ind >= 0) and (ind < 26)):\n            yr = '1960'\n            df.at[ind, 'Year'] = yr\n            df.at[ind, 'Population'] = df.at[ind, yr]            \n        elif ((ind >= 26) and (ind < 52)):\n            yr = '1970'\n            df.at[ind, 'Year'] = yr\n            df.at[ind, 'Population'] = df.at[ind, yr]             \n        elif ((ind >= 52)and (ind < 78)):\n            yr = '1980'\n            df.at[ind, 'Year'] = yr\n            df.at[ind, 'Population'] = df.at[ind, yr]           \n        elif ((ind >= 78) and (ind < 104)):\n            yr = '1990'\n            df.at[ind, 'Year'] = yr\n            df.at[ind, 'Population']= df.at[ind, yr]            \n        else :\n            yr = '2000'\n            df.at[ind, 'Year'] = yr\n            df.at[ind, 'Population'] = df.at[ind, yr]             \n        \n    return df\n\n# We want to make 5 copies of data, because we have 5 decades to cover.\n\nmig_year = pd.concat([mig, mig], ignore_index=True)\nmig_year = pd.concat([mig, mig_year], ignore_index=True)\nmig_year = pd.concat([mig, mig_year], ignore_index=True)\nmig_year = pd.concat([mig, mig_year], ignore_index=True)\nprint(mig_year.shape)\n\npopulate_years(mig_year)","6225107c":"print(\"Countries selected for migration are: \", mig_year['Country'].unique())\nprint(\"Number of countries covered are: \",mig_year['Country'].nunique())\n","1e7025ae":"# Dict for Continent code and Continent mapping\ncontinent_dict = dict({\"AS\":\"Asia\",\"AF\":\"Africa\", \"OC\":\"Oceania\",\"NA\":\"North America\",\"SA\":\"South America\",\"EU\":\"Europe\"})\n\n# Given a country name, fetches the country code\n\ndef find_country_code(country):\n    return pc.country_name_to_country_alpha2(country, cn_name_format=\"default\")\n\n# Given a country code, fetches the continent code\n\ndef find_continent_code(country):\n    return pc.country_alpha2_to_continent_code(country)   \n\n# Given a continent code, fetches the continent name\n\ndef find_continent(continent):\n    return continent_dict[continent]  \n    \nmig_year['Country_code'] = mig_year['Country'].map(find_country_code)\nmig_year['Continent_code'] = mig_year['Country_code'].map(find_continent_code)\nmig_year['Continent'] = mig_year['Continent_code'].map(find_continent)\n\nmig_year.tail(10)\n","dcbe1173":"fig = px.pie(mig_year, values='Population', names='Country', title='Migration')\nfig.show()","1092ac9c":"fig = px.area(mig_year, x=\"Year\", y=\"Population\", color=\"Continent\", line_group=\"Country\")\nfig.show()","41e6d1db":"fig = px.box(mig_year, x=\"Country\", y=\"Population\", color=\"Year\", notched=True)\nfig.show()","6b17031a":"fig = px.scatter(mig_year, x=\"Population\", y=\"Year\", size=\"Population\", color=\"Continent\", hover_name=\"Country\", log_x=True, size_max=100)\nfig.show()","b01ca00d":"fig = px.bar(mig_year, x=\"Gender\", y=\"Population\", color=\"Continent\", barmode=\"group\")\nfig.show()","e2c4b38b":"fig = px.histogram(mig_year, x=\"Year\", y=\"Population\", log_y=True,color=\"Gender\", marginal=\"rug\", hover_data=mig_year.columns)\nfig.show()","ba907274":"fig = go.Figure(data=[go.Histogram(x=mig_year['Population'], cumulative_enabled=True)])\nfig.show()","862ac01c":"fig = px.violin(mig_year, y=\"Population\", x=\"Continent\", color=\"Gender\", box=True, points=\"all\", hover_data=mig_year.columns)\nfig.show()","e81a579a":"fig = px.treemap(mig_year, path=[px.Constant('world'), 'Continent', 'Country','Gender'], values='Population', color='Population', hover_data=['Continent'])\nfig.show()","619cf5df":"fig = px.sunburst(mig_year, path=['Continent', 'Country'], values='Population', color='Population', hover_data=['Continent'])\nfig.show()","033b8930":"fig = px.strip(mig_year, x=\"Population\", y=\"Country\", orientation=\"h\", color=\"Gender\")\nfig.show()","cd632c06":"<font size=\"+1\" color=\"purple\"><b>Density contour plot, is a 2-dimensional generalization of a histogram which resembles a contour plot but is computed by grouping a set of points specified by their x and y coordinates into bins, and applying an aggregation function such as count or sum (if z is provided) to compute the value to be used to compute contours.  <\/b><\/font><br>","70d2fe97":"fig = px.density_contour(mig_year, x=\"Year\", y=\"Population\", color=\"Country\", marginal_x=\"rug\", marginal_y=\"histogram\")\nfig.show()","809a5818":"female = migration[migration['Gender'] == 'Female']\nfemale['Total'] = female['1960'] + female['1970'] + female['1980'] + female['1990'] +female['2000']\ny_2000 = female['2000']\ny_total = female['Total']\nx = female['Country']\n    \n# Creating two subplots\nfig = make_subplots(rows=1, cols=2, specs=[[{}, {}]], shared_xaxes=True,\n                    shared_yaxes=False, vertical_spacing=0.001)\n\nfig.append_trace(go.Bar(\n    x=y_2000,\n    y=x,\n    marker=dict(\n        color='rgba(250, 190, 160, 0.6)', line=dict(color='rgba(150, 90, 16, 1.0)', width=1),\n    ),\n    name='Migration of females in year 2000',orientation='h',), 1, 1)\n\nfig.append_trace(go.Scatter(\n    x=y_total, y=x,\n    mode='lines+markers', line_color='rgb(80, 140, 80)', name='Migration of females between years 1960 - 2000',\n), 1, 2)\n\nfig.update_layout(\n    title='Migration of females in year 2000 and from years 1960 - 2000',\n    yaxis=dict(showgrid=False, showline=False, showticklabels=True, domain=[0, 0.85],),\n    yaxis2=dict(showgrid=False, showline=False, showticklabels=True, linecolor='rgba(200, 252, 20, 0.8)',linewidth=2,domain=[0, 0.85],    ),\n    xaxis=dict(zeroline=False, showline=False, showticklabels=True, showgrid=False, domain=[0, 0.42], ),\n    xaxis2=dict(zeroline=False, showline=False,     showticklabels=True,\n        showgrid=False,        domain=[0.47, 1],   side='top',       dtick=25000,     ), legend=dict(x=0.029, y=1.038, font_size=10),\n    margin=dict(l=100, r=20, t=70, b=70),\n    paper_bgcolor='rgb(228, 200, 208)',    plot_bgcolor='rgb(200, 80, 10)',)\n\nannotations = []\n\n# Adding labels\nfor ydn, yd, xd in zip(y_total, y_2000, x):\n    # labeling the scatter \n    annotations.append(dict(xref='x2', yref='y2',\n                            y=xd, x=ydn, text='{:,}'.format(ydn), font=dict(family='Arial', size=17, color='rgb(13, 5, 4)'), showarrow=True))\n    \n    # labeling the bar \n    annotations.append(dict(xref='x1', yref='y1',\n                            y=xd, x=yd, text=str(yd) , font=dict(family='Arial', size=17,color='rgb(13, 5, 4)'), showarrow=False))\n# Source\nannotations.append(dict(xref='paper', yref='paper',\n                        x=0.2, y=-0.109, text='World Bank ' + 'Migration ' + 'across Continents ',\n                        font=dict(family='Arial', size=12, color='rgb(150,150,150)'), showarrow=False))\n\nfig.update_layout(annotations=annotations)\nfig.show()","b37e8b80":"male = migration[migration['Gender'] == 'Male']\nmale['Total'] = male['1960'] + male['1970'] + male['1980'] + male['1990'] +male['2000']\ny_2000 = male['2000']\ny_total = male['Total']\nx = male['Country']\n    \n# Creating two subplots\nfig = make_subplots(rows=1, cols=2, specs=[[{}, {}]], shared_xaxes=True, shared_yaxes=False, vertical_spacing=0.001)\n\nfig.append_trace(go.Bar(\n    x=y_2000, y=x,\n    marker=dict(\n        color='rgba(250, 190, 160, 0.6)', line=dict(color='rgba(150, 90, 16, 1.0)', width=1),\n    ),\n    name='Migration of Males in year 2000',orientation='h',), 1, 1)\n\nfig.append_trace(go.Scatter(\n    x=y_total, y=x,\n    mode='lines+markers', line_color='rgb(80, 140, 80)', name='Migration of Males between years 1960 - 2000',\n), 1, 2)\n\nfig.update_layout(\n    title='Migration of Males in year 2000 and from years 1960 - 2000',\n    yaxis=dict(showgrid=False, showline=False, showticklabels=True, domain=[0, 0.85],),\n    yaxis2=dict(showgrid=False, showline=False, showticklabels=True, linecolor='rgba(200, 252, 20, 0.8)',linewidth=2,domain=[0, 0.85],    ),\n    xaxis=dict(zeroline=False, showline=False, showticklabels=True, showgrid=False, domain=[0, 0.42], ),\n    xaxis2=dict(zeroline=False, showline=False,     showticklabels=True,\n        showgrid=False,        domain=[0.47, 1],   side='top',       dtick=25000,     ), legend=dict(x=0.029, y=1.038, font_size=10),\n    margin=dict(l=100, r=20, t=70, b=70),\n    paper_bgcolor='rgb(228, 200, 208)',    plot_bgcolor='rgb(200, 80, 10)',)\n\nannotations = []\n\n# Adding labels\nfor ydn, yd, xd in zip(y_total, y_2000, x):\n    # labeling the scatter \n    annotations.append(dict(xref='x2', yref='y2',\n                            y=xd, x=ydn, text='{:,}'.format(ydn), font=dict(family='Arial', size=17, color='rgb(13, 5, 4)'), showarrow=True))\n    \n    # labeling the bar \n    annotations.append(dict(xref='x1', yref='y1',\n                            y=xd, x=yd, text=str(yd) , font=dict(family='Arial', size=17,color='rgb(13, 5, 4)'), showarrow=False))\n# Source\nannotations.append(dict(xref='paper', yref='paper',\n                        x=0.2, y=-0.109, text='World Bank ' + 'Migration ' + 'across Continents ',\n                        font=dict(family='Arial', size=12, color='rgb(150,150,150)'), showarrow=False))\n\nfig.update_layout(annotations=annotations)\nfig.show()","f8ed107a":"<a id=\"3\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Countries<\/b><\/font><br>","166042da":"**Conclusion**\n* Male migrants preferred US, UK, Canada, France, Singapore, Australia, Germany, New Zealand, Netherlands, Sweden","bfd88d0b":"<a id=\"10\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Bar and Scatter maps<\/b><\/font><br>","fee24224":"<a id=\"7\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>SunBurst charts<\/b><\/font><br>","acb22a3d":"<a id=\"6\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>TreeMap charts<\/b><\/font><br>","b3331ba8":"<a id=\"intro\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Introduction and Imports<\/b><\/font><br>","7004d351":"**Inference: ** \n* Notice that migration (both male\/female migrants) to has been increasing over the decades.","5ea7c31c":"<font size=\"+1\" color=\"purple\"><b>Pie Chart of Countries migrated to<\/b><\/font><br>","11843994":"**Inference: ** \n* Male migrants are more than female migrants heading to North America, Europe, Asia.\n* Migration to Oceania is more or less than same between Male-female migrants.","a74d4bab":"**Inference: ** \n* Majority of Exodus happened to UK (35.2%), with USA (34.6%) closely following at heels.\n* Finland was least preferred with just nearly 2k migrants.**\n","cf809f22":"**Conclusion**\n* Female migrants preferred US, UK, Canada, France, Singapore, Australia, Germany, New Zealand, Sweden, Netherlands","6aef2aa0":"<a id=\"intro\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Data<\/b><\/font><br>\n\nData is migration numbers of men and women across 5 decades between 1960 - 2000. Only limited countries data has been provided. Some continents like South America and Africa has not been covered.","a2f34350":"<a id=\"5\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Violin charts<\/b><\/font><br>","a38e8201":"**Inference: ** \n* Singapore in Asia has been preferred destination.\n* UK has been preferred destnation in Europe.\n* Australia has been preferred destination in Oceania.\n","9da169fc":"<font size=\"+1\" color=\"purple\"><b>Box Chart of Countries migrated to (year-wise)<\/b><\/font><br>","9d35b920":"<font size=\"+1\" color=\"purple\"><b>Cumulative Histogram of Population migrated <\/b><\/font><br>","7a30238a":"**Inference**\n* Notice that UK has more migrants than USA, but Americas continent has more migrants than Europe.\n* Notice that Australia has more migrants than New Zealand in Oceania. ","3da30835":"*Inference: *\n* Notice that migration (both male\/female migrants) to has been increasing over the decades.","6badf610":"<a id=\"4\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Gender<\/b><\/font><br>","924b0086":"<font size=\"+1\" color=\"purple\"><b>Bar chart of Countinents migrated to (gender-wise)<\/b><\/font><br>","6de60870":"Friends, Please upvote if you like. Thank you !!!","ef6741e9":"<a id=\"top\"><\/a>\n\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\">Table of content<\/h3>\n\n* [Introduction](#intro)\n* [Data](#data)\n* [1. Cleaning ](#1)\n* [2. Rearranging Dataframe ](#2)\n* [3. Countries and Continents](#3)\n* [4. Gender](#4)\n* [5. Violin Graphs](#5)\n* [6. Tree Maps](#6)\n* [7. Sunburst Charts](#7)\n* [8. Strip Charts](#8)\n* [9. Density Contour Maps](#9)\n* [10. Bar and Scatter maps](#10)\n","8cde8b91":"<a id=\"8\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Strip charts<\/b><\/font><br>","6fc81c6b":"**Inference: ** \n* Notice that migration to countries like Denmark, Finland, Netherlands, Sweden, Switzerland has been low.\n* Migrations to Australia has been more in years 1960, 2000 than in other decades.","40aa77ef":"**Inference**\n* Singapore, Germany have more male migrants than female migrants.\n ","d91e574b":"**Quote**\n> **Migration is an expression of the human aspiration for dignity, safety and a better future. It is part of the social fabric, part of our very make-up as a human family** - \n*Ban Ki-moon*","bf85939f":"<a id=\"9\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Density Contour Maps<\/b><\/font><br>","d4c5f9b4":"**Inference**\n* Notice that France, Germany are next popular destinations after UK in Europe.\n ","8f385c96":"<font size=\"+1\" color=\"purple\"><b>Bubble Scatter plot of Countries migrated to (year-wise)<\/b><\/font><br>","edb468e6":"<font size=\"+1\" color=\"purple\"><b>Area Chart of Continents migrated to<\/b><\/font><br>","fe892373":"**Inference: ** \n* Notice that migration to conntinents like North America and Europe has been increasing over the decades.","047b725f":"<a id=\"2\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Rearranging Data Frame - Population by Year<\/b><\/font><br>","10e1e7a4":"<font size=\"+1\" color=\"purple\"><b>Histogram of Population migrated (gender-wise)<\/b><\/font><br>","ccc61a3f":"<font size=\"+4\" color=purple><u><center>Migration Analysis (5 decades 1960  - 2000)<\/center><\/u><\/font>","98c216d8":"**Inference**\n* Notice that many countries in Europe has less migrants than UK in Europe.","e5be86bc":"<a id=\"1\"><\/a>\n<font size=\"+2\" color=\"blue\"><b>Cleaning<\/b><\/font><br>","6525133e":"**Inference: ** \n* Migration to Oceania - Male = 44.3K, Female = 49.7K.\n* Migration to Europe - Male = 259K, Female = 266K.\n* Migration to Americas - Male = 561K, Female = 480K.\n* Migration to Asia - Male = 57.2K, Female = 47.9K."}}