{"cell_type":{"782642d7":"code","61eced63":"code","5b6a0679":"code","13172169":"code","7a039e1b":"code","01157430":"code","766559e5":"code","ef692f2c":"code","3ea742ea":"code","97e11523":"code","52716c10":"code","e5f93bdb":"code","3dacb16a":"code","905aa874":"code","bbc3248b":"code","7993f38b":"code","f85dbb8b":"code","daf4bcb5":"code","26fccb06":"code","7c5245b4":"code","5379ccbc":"code","62e1da3c":"code","a5e81467":"code","d5e3747b":"code","c05b0ce6":"code","47d2a645":"code","112f6fe6":"code","61630031":"code","beb15b05":"markdown","7b72dea0":"markdown","b9a02bdf":"markdown","56755c22":"markdown","9a3952a8":"markdown","a8e3388e":"markdown","00692dda":"markdown","35fa25bd":"markdown","5eb508c5":"markdown"},"source":{"782642d7":"import pandas as pd\nimport numpy as np\n%matplotlib inline\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","61eced63":"train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv', index_col='PassengerId')\ntest=pd.read_csv('\/kaggle\/input\/titanic\/test.csv', index_col='PassengerId')\nsubmission=pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv', index_col='PassengerId')\n\nprint(train.shape, test.shape, submission.shape)","5b6a0679":"train.isnull().sum()","13172169":"test.isnull().sum()","7a039e1b":"train=train.drop(columns='Cabin')\ntest=test.drop(columns='Cabin')","01157430":"sns.countplot(data=train, x='Sex', hue='Survived')","766559e5":"train.loc[train['Sex']=='male', 'Sex']=0\ntrain.loc[train['Sex']=='female','Sex']=1\ntest.loc[test['Sex']=='male','Sex']=0\ntest.loc[test['Sex']=='female','Sex']=1","ef692f2c":"sns.countplot(data=train, x='Pclass', hue='Survived')","3ea742ea":"train['Pclass_3']=(train['Pclass']==3)\ntrain['Pclass_2']=(train['Pclass']==2)\ntrain['Pclass_1']=(train['Pclass']==1)\n\ntest['Pclass_3']=(test['Pclass']==3)\ntest['Pclass_2']=(test['Pclass']==2)\ntest['Pclass_1']=(test['Pclass']==1)","97e11523":"train=train.drop(columns='Pclass')\ntest=test.drop(columns='Pclass')","52716c10":"sns.lmplot(data=train, x='Age', y='Fare', fit_reg=False, hue='Survived')","e5f93bdb":"LowFare=train[train['Fare']<80]\nsns.lmplot(data=LowFare, x='Age', y='Fare', hue='Survived')","3dacb16a":"test.loc[test['Fare'].isnull(),'Fare']=0","905aa874":"train=train.drop(columns='Age')\ntest=test.drop(columns='Age')","bbc3248b":"train['FamilySize']=train['SibSp']+train['Parch']+1\ntest['FamilySize']=test['SibSp']+test['Parch']+1\n\nfigure, (ax1, ax2, ax3) = plt.subplots(nrows=1, ncols=3)\nfigure.set_size_inches(18,6)\nsns.countplot(data=train, x='SibSp', hue='Survived', ax=ax1)\nsns.countplot(data=train, x='Parch', hue='Survived', ax=ax2)\nsns.countplot(data=train, x='FamilySize',hue='Survived', ax=ax3)","7993f38b":"train['Single']=train['FamilySize']==1\ntrain['Nuclear']=(2<=train['FamilySize']) & (train['FamilySize']<=4)\ntrain['Big']=train['FamilySize']>=5\n\ntest['Single']=test['FamilySize']==1\ntest['Nuclear']=(2<=test['FamilySize']) & (test['FamilySize']<=4)\ntest['Big']=test['FamilySize']>=5\n\nfigure, (ax1, ax2, ax3) = plt.subplots(nrows=1, ncols=3)\nfigure.set_size_inches(18,6)\nsns.countplot(data=train, x='Single', hue='Survived', ax=ax1)\nsns.countplot(data=train, x='Nuclear', hue='Survived', ax=ax2)\nsns.countplot(data=train, x='Big',hue='Survived', ax=ax3) ","f85dbb8b":"train=train.drop(columns=['Single','Big','SibSp','Parch','FamilySize'])\ntest=test.drop(columns=['Single','Big','SibSp','Parch','FamilySize'])","daf4bcb5":"sns.countplot(data=train, x='Embarked', hue='Survived')","26fccb06":"train['EmbarkedC']=train['Embarked']=='C'\ntrain['EmbarkedS']=train['Embarked']=='S'\ntrain['EmbarkedQ']=train['Embarked']=='Q'\ntest['EmbarkedC']=test['Embarked']=='C'\ntest['EmbarkedS']=test['Embarked']=='S'\ntest['EmbarkedQ']=test['Embarked']=='Q'","7c5245b4":"train=train.drop(columns='Embarked')\ntest=test.drop(columns='Embarked')","5379ccbc":"train['Name']=train['Name'].str.split(', ').str[1].str.split('. ').str[0]\ntest['Name']=test['Name'].str.split(', ').str[1].str.split('. ').str[0]","62e1da3c":"sns.countplot(data=train, x='Name', hue='Survived')","a5e81467":"train['Master']=(train['Name']=='Master')\ntest['Master']=(test['Name']=='Master')\n\ntrain=train.drop(columns='Name')\ntest=test.drop(columns='Name')","d5e3747b":"train=train.drop(columns='Ticket')\ntest=test.drop(columns='Ticket')","c05b0ce6":"from sklearn.tree import DecisionTreeClassifier","47d2a645":"Ytrain=train['Survived']\nfeature_names=list(test)\nXtrain=train[feature_names]\nXtest=test[feature_names]\n\nprint(Xtrain.shape, Ytrain.shape, Xtest.shape)\nXtrain.head()","112f6fe6":"model=DecisionTreeClassifier(max_depth=8, random_state=18)","61630031":"model.fit(Xtrain, Ytrain)\npredictions=model.predict(Xtest)\nsubmission['Survived']=predictions\nsubmission.to_csv('Result.csv')\nsubmission.head()","beb15b05":"# Load Data","7b72dea0":"# EDA","b9a02bdf":"# Build Models","56755c22":"## Sex","9a3952a8":"## SibSp & Parch","a8e3388e":"## Age & Fare","00692dda":"## Embarked","35fa25bd":"## Name","5eb508c5":"## Pclass"}}