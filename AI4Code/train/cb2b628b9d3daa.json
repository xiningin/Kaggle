{"cell_type":{"97309df7":"code","8571f309":"code","d83d5d47":"code","8a12f040":"code","91e746cd":"code","abb5a93a":"code","4c6ff7f4":"code","fc0082ae":"code","47239288":"code","17ff393b":"code","d1375bde":"code","8b3d3f06":"code","88e60f9c":"markdown","4a10f64b":"markdown","29c76300":"markdown","5246c7de":"markdown","9e84fa26":"markdown","304b2dd3":"markdown","12416ab8":"markdown"},"source":{"97309df7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/examresult\/py_sense.xlsx'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8571f309":"import numpy as np\nimport pandas as pd\nxls_py_mind = pd.ExcelFile('\/kaggle\/input\/examresult\/py_mind.xlsx')\nxls_py_science = pd.ExcelFile('\/kaggle\/input\/examresult\/py_science.xlsx')\nxls_py_sense = pd.ExcelFile('\/kaggle\/input\/examresult\/py_sense.xlsx')\nxls_py_opinion = pd.ExcelFile('\/kaggle\/input\/examresult\/py_opinion.xlsx')\n","d83d5d47":"\nouterIndex_sinif_ismi=[\"py_mind\", \"py_mind\", \"py_mind\", \"py_mind\",\"py_mind\", \"py_mind\",\"py_mind\", \"py_mind\",\"py_mind\", \"py_mind\",\\\n                       \"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\\\n                       \"py_science\",\"py_science\",\"py_science\",\"py_science\",\"py_science\",\"py_science\",\"py_science\",\"py_science\",\\\n                       \"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"cevap_A.\"]\n","8a12f040":"sheet_to_df_map = {}\nfor sheet_name in xls_py_mind.sheet_names:\n    sheet_to_df_map[sheet_name] = xls_py_mind.parse(sheet_name)\nfor sheet_name in xls_py_opinion.sheet_names:\n        sheet_to_df_map[sheet_name] = xls_py_opinion.parse(sheet_name)\nfor sheet_name in xls_py_science.sheet_names:\n        sheet_to_df_map[sheet_name] = xls_py_science.parse(sheet_name)\nfor sheet_name in xls_py_sense.sheet_names:\n        sheet_to_df_map[sheet_name] = xls_py_sense.parse(sheet_name)\ndegerler=list(sheet_to_df_map.values())","91e746cd":"\nInnerIndex_isimler=list(sheet_to_df_map.keys())\nInnerIndex_isimler.append(\"Cevap A.\")\nInnerIndex_isimler.remove(\"Blad9\")\nInnerIndex_isimler.remove(\"Blad11\")\nhierarch1=list(zip(outerIndex_sinif_ismi,InnerIndex_isimler))\nhierarch1=pd.MultiIndex.from_tuples(hierarch1)","abb5a93a":"sinavsonuclari=[]\nkolonlar=[]\nfor i in range(len(degerler)):\n    kolonlar.append(degerler[i].columns)\ncevap_anahtari=[]\nfor i in range(len(degerler)):\n        if len(kolonlar[i])==3:\n            sinavsonuclari.append( list(degerler[i][kolonlar[0][2]])[:20])\n            cevap_anahtari.append( list(degerler[i][kolonlar[0][1]])[:20])\n            print(list(degerler[i][kolonlar[0][2]])[:20])\n        elif len(kolonlar[i])==2 :\n            sinavsonuclari.append( list(degerler[i][kolonlar[i][1]])[:20])\nsinavsonuclari.append(cevap_anahtari[0])\ndf1=pd.DataFrame(sinavsonuclari,hierarch1,columns=[i for i in range(20)])\n","4c6ff7f4":"\ncorrect=[]\nblank=[]\nwrong=[]\nfor i in  range(len(degerler)-1):\n    countc=0\n    countb=0\n    countw=0\n    for j in range(20):\n        if str(df1.iloc[i,j])==str(\"nan\"):\n            countb +=1\n        elif df1.iloc[i,j]==df1.xs(\"cevap_A.\")[j][0]:\n            countc+=1\n        elif df1.iloc[i,j]!=df1.xs(\"cevap_A.\")[j][0]:\n            countw+=1\n    correct.append(countc)\n    blank.append(countb)\n    wrong.append(countw)\ndf1[\"True\"]=correct\ndf1[\"Wrong\"]=wrong\ndf1[\"Blank\"]=blank\n\nprint(df1)","fc0082ae":"print(\"The number of people Who attend the second Quiz:{}\".format(len(InnerIndex_isimler)-1))","47239288":"print(\"The most 3 succesful students according to their True answer numbers\\n\",df1.sort_values(\"True\",ascending=False).nlargest(4,\"True\")[\"True\"][1:4])\n","17ff393b":"means={}\nmeans[\"py_mind\"]=df1.loc[\"py_mind\"].mean()\nmeans[\"Py_opinion\"]=df1.loc[\"py_opinion\"].mean()\nmeans[\"py_science\"]=df1.loc[\"py_science\"].mean()\nmeans[\"Py_sense\"]=(df1.loc[\"py_sense\"].mean())\nprint(\"Mean of the Classes\\n\",pd.DataFrame(means))","d1375bde":"print(\"the most succesfull class according to their true answers\\n\",pd.DataFrame(means).T.sort_values(\"True\",ascending=False).nlargest(1,\"True\"))\n","8b3d3f06":"\nprint(\"the most succesful student of the every class\\n\")\nprint(\"Py Mind:\",df1.loc[\"py_mind\"].sort_values(\"True\",ascending=False).nlargest(1, \"True\")[\"True\"])\nprint(\"Py Opinion:\",df1.loc[\"py_opinion\"].sort_values(\"True\",ascending=False).nlargest(1, \"True\")[\"True\"])\nprint(\"Py science:\",df1.loc[\"py_science\"].sort_values(\"True\",ascending=False).nlargest(1, \"True\")[\"True\"])\nprint(\"Py sense:\",df1.loc[\"py_sense\"].sort_values(\"True\",ascending=False).nlargest(1, \"True\")[\"True\"])\n","88e60f9c":"eylul ayi ilk odevi, derte vermis oldugum odevi burdan fork ederek yaparsaniz sonuclari kontrol edebiliyorum. odevleri unutmayin bu hafta aldigimiz kararlarida. lutfen bu odev 07.09.2019 saat 24:00 a kadar bitirilsin. iyi calismalar. odevle ilgili yapilmasi gerekenler resim olarak gruba gonderilmistir, Datalari kendiniz ekleyebilir veya sorun yasarsaniz, datalari local calistirabilirisiniz. iyi calismalar","4a10f64b":"#the most succesfull class according to their true answer numbers\n","29c76300":"#The number of people Who attend the second Quiz\n","5246c7de":"#The most 3 succesful students according to their True answer numbers","9e84fa26":"#the most succesful student of the every class\n","304b2dd3":"read data from excel sheets and create outer index","12416ab8":"#Mean of the Classes\n"}}