{"cell_type":{"5692b71e":"code","1d136071":"code","78d28247":"code","2b711a3b":"code","e15b4f62":"code","0d7b0c7a":"code","94fda770":"code","9ccd9690":"code","51b5f505":"code","a4654669":"code","c4e6c92d":"code","4933b726":"code","a8f59d7f":"code","6f5f45f4":"code","706534d5":"code","58421b64":"code","bfbe0521":"code","cdfd2383":"code","3e9c1a42":"code","118740e5":"code","17a25c89":"code","0785fa56":"code","0362e2f9":"code","17399f6f":"code","8a669214":"code","0b000793":"code","a94d133c":"code","1299c3f1":"code","f675e8dc":"code","829c30e4":"code","88c2f049":"code","7e9b1cfd":"markdown"},"source":{"5692b71e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom datetime import datetime\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1d136071":"data_path = '\/kaggle\/input\/dwdm-petrol-prices\/Petrol Prices.csv'","78d28247":"petrol = pd.read_csv(data_path)\npetrol","2b711a3b":"petrol.head(7)","e15b4f62":"petrol.tail(4)","0d7b0c7a":"p=petrol['Date'].value_counts()\np","94fda770":"petrol['Date'] = pd.to_datetime(petrol['Date'])","9ccd9690":"print(petrol.loc[143])","51b5f505":"petrol.iat[143,0]='Aug 18 2016'","a4654669":"#petrol['Date'] = pd.to_datetime(petrol['Date'])","c4e6c92d":"#petrol['Month'] = petrol['Date'].dt.month\n","4933b726":"petrol['month'] = pd.DatetimeIndex(petrol['Date']).month\npetrol","a8f59d7f":"test=petrol.groupby('month').count()\ntest.head(13)","6f5f45f4":"test.plot(kind='barh',figsize=(15,15),title='months count')","706534d5":"petrol['month'] = petrol['month'].astype(str)","58421b64":"i=0\n\nwhile(i<232):\n    if petrol.iat[i,14]=='1.0':\n        petrol.iat[i,14]='Jan'\n    if petrol.iat[i,14]=='2.0':\n        petrol.iat[i,14]='Feb'\n    if petrol.iat[i,14]=='3.0':\n        petrol.iat[i,14]='Mar'\n    if petrol.iat[i,14]=='4.0':\n        petrol.iat[i,14]='Apr'\n    if petrol.iat[i,14]=='5.0':\n        petrol.iat[i,14]='May'\n    if petrol.iat[i,14]=='6.0':\n        petrol.iat[i,14]='Jun'\n    if petrol.iat[i,14]=='7.0':\n        petrol.iat[i,14]='Jul'\n    if petrol.iat[i,14]=='8.0':\n        petrol.iat[i,14]='Aug'\n    if petrol.iat[i,14]=='9.0':\n        petrol.iat[i,14]='Sep'\n    if petrol.iat[i,14]=='10.0':\n        petrol.iat[i,14]='Oct'\n    if petrol.iat[i,14]=='11.0':\n        petrol.iat[i,14]='Nov'\n    if petrol.iat[i,14]=='12.0':\n        petrol.iat[i,14]='Dec'\n    i=i+1","bfbe0521":"petrol['day'] = pd.DatetimeIndex(petrol['Date']).day\npetrol","cdfd2383":"petrol['year'] = pd.DatetimeIndex(petrol['Date']).year\npetrol","3e9c1a42":"petrol = petrol.fillna(0)\npetrol['day']=petrol['day'].astype(int)\npetrol['year']=petrol['year'].astype(int)\npetrol","118740e5":"petrol['ts']= pd.to_datetime(petrol['Date']).values.astype(datetime)\npetrol","17a25c89":"petrol['try']=pd.to_datetime(petrol['Date']).values.astype(datetime)\npetrol","0785fa56":"petrol.reset_index\npetrol.set_index('ts')\npetrol.plot(kind='line',x='ts',y=['Gasolene_87', 'Gasolene_90', 'Auto_Diesel', 'Kerosene', 'Propane','Butane'\n                         , 'Asphalt','HFO','ULSD', 'Ex_Refinery'],figsize=(10,5), grid=True)","0362e2f9":"x2 = petrol.copy()\n\nx2 = x2.drop(x2.index[[229,230,231]])\n\nx2.plot(kind='line',x='ts',y=['Gasolene_87', 'Gasolene_90', 'Auto_Diesel', 'Kerosene', 'Propane','Butane'\n                         , 'Asphalt','HFO','ULSD', 'Ex_Refinery'],figsize=(10,5), grid=True)","17399f6f":"interest = petrol['Propane']\n\ninterest.pct_change(periods=4)","8a669214":"interest.plot()","0b000793":"new = {'Propane':petrol.Propane,'ULSD':petrol.ULSD,'month':petrol.month,'day':petrol.day,'year':petrol.year,'timestamp':petrol.ts}\n\nnewDatax = pd.DataFrame(new)\n\nnewData = newDatax.drop(newDatax.index[[229,230,231]])\n\nnewData","a94d133c":"s={'ULSD': newData.ULSD,'Propane':newData.Propane}\ndata =pd.DataFrame(s)\ndata","1299c3f1":"kmeans=KMeans(n_clusters=5, init='k-means++',n_init=10, max_iter=300)\nnewData['cluster'] = kmeans.fit_predict(data)\nnewData","f675e8dc":"print(kmeans.labels_)","829c30e4":"newData.plot(kind='scatter',x='Propane',y='ULSD',c=kmeans.labels_, cmap='rainbow')","88c2f049":"petrol.groupby('year').mean()","7e9b1cfd":"Autoregression \n\nAutoregression is a time series model that uses observations from previous time steps as input to a regression equation to predict the value at the next time step (Brownlee, 2019).\n\nhttps:\/\/machinelearningmastery.com\/autoregression-models-time-series-forecasting-python\/"}}