{"cell_type":{"17ed0285":"code","e1122d81":"code","c26e6fa3":"code","4b9648ed":"code","d7adeb7d":"code","31827dc2":"code","304a053b":"code","f36cf160":"code","5b6334dd":"code","dae11d91":"code","e9369d93":"code","52469d1d":"code","16c53eab":"code","99170626":"code","ffdf4b50":"code","9470e071":"code","ee3c8856":"code","60312c9f":"code","a990f80e":"code","a1e58363":"code","bad8b35e":"code","12e96cf7":"code","4d30ef86":"code","1a3321d9":"code","b0ebe232":"code","ebb426e5":"code","4a8ab472":"code","b42d737e":"code","06edfbb7":"code","e6912102":"code","b2dff2fb":"code","d1734f70":"code","2ad59571":"code","8d7688cb":"code","c37037e8":"code","258ec0b6":"code","ee76fcc4":"code","5828c6d9":"markdown","9c068c06":"markdown","8720d95e":"markdown","0af47385":"markdown","609b6cf8":"markdown"},"source":{"17ed0285":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as  plt\n%matplotlib inline\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","e1122d81":"df = pd.read_csv(\"..\/input\/HR-Employee-Attrition.csv\")","c26e6fa3":"df.head()","4b9648ed":"df.info()","d7adeb7d":"df.isna().sum()","31827dc2":"df.notnull().sum()","304a053b":"df.describe()","f36cf160":"df[['EmployeeCount','EmployeeNumber']]\n","5b6334dd":"df.head()","dae11d91":"df['StandardHours'].value_counts()\ndf['StandardHours'].unique()","e9369d93":"df.drop(['EmployeeCount','EmployeeNumber','Over18','StandardHours'], axis = 1, inplace = True)","52469d1d":"df.head()","16c53eab":"df.dtypes","99170626":"numericalColumns = df.select_dtypes(include=np.number).columns\ncategoricalColumns = df.select_dtypes(exclude=np.number).columns","ffdf4b50":"print(numericalColumns)\nprint(categoricalColumns)","9470e071":"ls = list(df[categoricalColumns])\nfor i in ls:\n    print(i,\":\\n\",df[i].unique(),'value Counts :',df[i].value_counts())\n    print('-----------------------------------------------------------')","ee3c8856":"df.Attrition.replace({\"Yes\":1,\"No\":0},inplace = True)","60312c9f":"df.head()","a990f80e":"# df.Attrition.replace({\"Yes\":1,\"No\":0},inplace=True)\n# df.Gender.replace({\"Male\":1,\"Female\":0},inplace=True)\n# df.MaritalStatus.replace({\"Single\":1,\"Married\":0},inplace=True)","a1e58363":"encodedCatCol = pd.get_dummies(df[categoricalColumns.drop([\"Attrition\"])])\nencodedCatCol.head()","bad8b35e":"df_encoded_onehot = pd.concat([df[numericalColumns],encodedCatCol], axis = 1)\ndf_encoded_onehot.head()","12e96cf7":"df_final =pd.concat([df_encoded_onehot,df[\"Attrition\"]],axis=1)","4d30ef86":"df_final.head()","1a3321d9":"df_final.corr()","b0ebe232":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split ","ebb426e5":"X = df_final.drop(columns='Attrition')\nY = df_final[['Attrition']]","4a8ab472":"X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.3, random_state=0)\nlogreg = LogisticRegression()\nlogreg.fit(X_train,Y_train)","b42d737e":"train_pred = logreg.predict(X_train)","06edfbb7":"from sklearn import metrics","e6912102":"metrics.confusion_matrix(Y_train,train_pred)","b2dff2fb":"tn, fp, fn, tp = metrics.confusion_matrix(Y_train,train_pred).ravel()\nspecificity = tn \/ (tn+fp)\n\nprint(specificity)","d1734f70":"metrics.accuracy_score(Y_train,train_pred)","2ad59571":"test_pred = logreg.predict(X_test)","8d7688cb":"metrics.confusion_matrix(Y_test, test_pred)","c37037e8":"metrics.accuracy_score(Y_test, test_pred)","258ec0b6":"from sklearn.metrics import classification_report\nprint(classification_report(Y_test,test_pred))","ee76fcc4":"from sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import roc_curve\nROC_auc = roc_auc_score(Y_test,test_pred)\nfpr, tpr, thresholds = roc_curve(Y_test,logreg.predict_proba(X_test)[:,1]) \nplt.figure()\nplt.plot(fpr, tpr, label='Logistic Regression (area = %0.2f)' % ROC_auc)\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver operating characteristic')\nplt.legend(loc=\"lower right\")\nplt.savefig('Log_ROC')\nplt.show()\n\nprint(ROC_auc)\n#print(thresholds)\n#print(fpr)","5828c6d9":"Replace Yes and No with 1 and 0","9c068c06":"From the above descirbe table we can take decision of removing the column \"Over18\" because all the above emplyees are 18+. Since the column Over18 becomes meaning less.\n\nAlso Employee count, Employee number can be omitted. Employee count is one for every employees and employee number wont create any impact on attrition rate. ","8720d95e":"Specificity****","0af47385":"Confusion Matrix","609b6cf8":"**Converting object data in to integer data in every column. In order to do that going for one hot encoding **\n"}}