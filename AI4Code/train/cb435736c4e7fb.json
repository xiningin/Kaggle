{"cell_type":{"2e7592d0":"code","ff3a2e7e":"code","1c39819a":"code","7af25ae2":"code","f6c808ac":"code","55c64e36":"code","046163bd":"code","89b20296":"code","75d43b47":"code","85fe086a":"code","0706491e":"code","407eb9b9":"code","274fc306":"code","1684cfb9":"code","02f29e81":"markdown","119bb258":"markdown","8d2ebea7":"markdown","f6f5847f":"markdown","6b802d58":"markdown","65389814":"markdown","ba625066":"markdown"},"source":{"2e7592d0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ff3a2e7e":"data = pd.read_csv('\/kaggle\/input\/iris-dataset-uci\/Iris.csv')","1c39819a":"data.head()","7af25ae2":"data['Species'].value_counts()","f6c808ac":"data.info()","55c64e36":"data.isna().sum()","046163bd":"newData = data.drop('Id',axis=1)\nX = newData.drop('Species',axis=1)\nY = newData.Species","89b20296":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.33, random_state = 15)","75d43b47":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_train = scaler.fit_transform(x_train)\nX_test = scaler.transform(x_test)","85fe086a":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score","0706491e":"lr = LogisticRegression()\nlr.fit(X_train, y_train)\npredictList = lr.predict(X_test)\n","407eb9b9":"print('Accuracy = {} '.format(accuracy_score(lr.predict(X_test), y_test)*100))","274fc306":"matrix = confusion_matrix(y_test, predictList)\nmatrixPd = pd.DataFrame(matrix)\nmatrixPd","1684cfb9":"import seaborn as sns\nimport matplotlib.pyplot as plt\ncor = matrixPd.corr()\n\nf,ax = plt.subplots(figsize = (5,5))\nsns.heatmap(data=cor,annot=True,linewidths=0.5,linecolor=\"g\",ax=ax,fmt=\".1f\")\nplt.show()","02f29e81":"Also Gaussian Naive Bayes And Support Vector Classifier is effective for %100 accuracy.\n\nTHANK YOU FOR READING","119bb258":"Logistic Regression","8d2ebea7":"Logistic Regression Confusion Matrix","f6f5847f":"Scale Values","6b802d58":"Build a Machine Learning Model","65389814":"NAN Values Detect","ba625066":"Matrix is a Numpy array. Numpy array is can't be a corr. But Pandas array is can be corr."}}