{"cell_type":{"59d766a3":"code","c9841503":"code","8e4c3551":"code","12f22b9c":"code","f3146fcd":"code","53acb6d6":"code","863001d6":"code","0f506f48":"code","8940032f":"code","e6e6d54d":"code","cda6e08a":"code","4d43f48f":"code","2650f59a":"code","e1c16f3a":"code","35bd264b":"code","dab97704":"code","74f6b7f3":"code","cff20f7a":"code","fe458932":"code","7c1660aa":"code","b8e3cb2b":"code","2677b618":"code","0672c56f":"code","8d23db1d":"code","868cfe84":"code","11d4137a":"code","e8ff1a8d":"code","0dc0f67c":"code","5506d9c5":"code","12558a67":"code","05e74e9f":"code","f54fe1e0":"code","7e48a28e":"code","03935e84":"code","f4c3fb02":"code","510ada88":"code","e7833fcd":"code","3db2a308":"code","53d77be4":"code","16309f97":"code","a43b4313":"code","6ad08f43":"code","fc84180a":"code","a24a4eff":"code","417e9002":"code","96a60e8e":"code","3433a33d":"code","16c684dd":"code","b2b80ba1":"code","1d322aa4":"code","d5a753ff":"code","765666ac":"code","ccee41a5":"code","d5486b4b":"code","f80a60d6":"code","136ada20":"code","b9d35269":"code","47e26de6":"code","d7925cca":"code","5c32861e":"code","dc668de8":"code","c90d38c5":"code","137f19de":"code","2dbb7a7b":"code","125c0755":"code","d5a1a0e9":"code","f5fe7325":"code","a84d487d":"code","a6355dbd":"code","33db6671":"code","510ba59c":"code","cda5dfbf":"code","8812b797":"code","6a8f0dd2":"code","d6d9562f":"code","f776ba30":"code","0a88a2b9":"code","b8ea5dcc":"code","9d634063":"code","c8abef3f":"code","36400055":"code","cb7cc277":"code","13446f65":"code","19e92742":"code","2a7d554c":"code","a8216b7c":"code","5f4b2c10":"code","56bd60d3":"code","362bb07c":"code","617119bb":"code","ec68292c":"code","cdacaefe":"code","a774bfa1":"code","8d0de651":"code","d874fa00":"code","9cfe1f4c":"markdown","4c8c1bb9":"markdown","f088378f":"markdown","e0e32917":"markdown","9b9708f7":"markdown","c9283908":"markdown","d1af0931":"markdown","0ed620cd":"markdown","73b87471":"markdown","d002acd8":"markdown","26281b85":"markdown","c2613b89":"markdown","3cfdc7af":"markdown","46dc0126":"markdown","67c0747a":"markdown","ff7d0c70":"markdown","5a89be94":"markdown","8e6b0288":"markdown","3c3b9fd2":"markdown","2c456990":"markdown","16e8e824":"markdown","0e3233d1":"markdown"},"source":{"59d766a3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c9841503":"import pandas as pd\nimport numpy as np\nimport sklearn\nimport seaborn as sns\nimport matplotlib.pyplot as plt","8e4c3551":"df1 = pd.read_csv(\"\/kaggle\/input\/red-wine\/winequality-red.csv\")","12f22b9c":"df=df1\n","f3146fcd":"df['Best Quality']=[1 if x>=7 else 0 for x in df['quality']]","53acb6d6":"df","863001d6":"df.info()","0f506f48":"df['Best Quality'].value_counts()","8940032f":"df.isnull().sum()","e6e6d54d":"df.shape","cda6e08a":"df.duplicated().sum()","4d43f48f":"df.drop_duplicates()","2650f59a":"df['quality'].value_counts()","e1c16f3a":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')","35bd264b":"df.columns","dab97704":"sns.swarmplot(y='alcohol',x='Best Quality',data=df)","74f6b7f3":"plt.scatter(y='density',x='Best Quality',data=df)","cff20f7a":"plt.scatter(y='pH',x='Best Quality',data=df)","fe458932":"sns.lineplot(x='fixed acidity',y='pH',data=df)","7c1660aa":"df.plot(kind='box',subplots=True,figsize=(15,10))","b8e3cb2b":"import seaborn as sns","2677b618":"for i in df.columns:\n    sns.distplot(df[i])\n    plt.subplot(111)\n    plt.show()","0672c56f":"df.describe()","8d23db1d":"corr=df.corr()\ncorr","868cfe84":"plt.figure(figsize=(15,8))\nsns.heatmap(corr,annot=True)","11d4137a":"sns.lineplot(x='free sulfur dioxide',y='total sulfur dioxide',data=df)","e8ff1a8d":"df.drop('volatile acidity',axis=1)","0dc0f67c":"from scipy.stats import zscore\nimport numpy as np","5506d9c5":"z=abs(zscore(df))","12558a67":"threshold=3\nprint(np.where(z>3))","05e74e9f":"df_new=df[(z<3).all(axis=1)]","f54fe1e0":"df_new.shape","7e48a28e":"df=df_new","03935e84":"df.shape","f4c3fb02":"df","510ada88":"df.skew()","e7833fcd":"df['residual sugar']=np.sqrt(df['residual sugar'])\ndf['total sulfur dioxide']=np.sqrt(df['total sulfur dioxide'])\ndf['sulphates']=np.sqrt(df['sulphates'])\ndf['alcohol']=np.sqrt(df['alcohol'])\ndf['fixed acidity']=np.sqrt(df['fixed acidity'])\ndf['chlorides']=np.sqrt(df['chlorides'])","3db2a308":"x=df.iloc[:,:-2]\nx.shape","53d77be4":"y=df.iloc[:,-1]\ny.shape","16309f97":"y.value_counts()","a43b4313":"from imblearn.over_sampling import SMOTE","6ad08f43":"smt=SMOTE()","fc84180a":"trainx,trainy=smt.fit_resample(x,y)","a24a4eff":"trainy","417e9002":"trainy.value_counts()","96a60e8e":"x=trainx\ny=trainy","3433a33d":"from sklearn.preprocessing import StandardScaler","16c684dd":"std=StandardScaler()","b2b80ba1":"x1=std.fit_transform(x)\nx1","1d322aa4":"x=x1\nx","d5a753ff":"from sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import accuracy_score","765666ac":"svc=SVC()","ccee41a5":"\nfor i in range(1,100):\n    x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.20,random_state=i)\n    svc.fit(x_train,y_train)\n    pred_test=svc.predict(x_test)\n    pred_train=svc.predict(x_train)\n    if round(accuracy_score(y_test,pred_test)*100,2)==round(accuracy_score(y_train,pred_train)*100,2):\n        print('Random state',i,'Score is well')\n        print('test accuracy score',accuracy_score(y_test,pred_test)*100)\n        print('train accuracy score',accuracy_score(y_train,pred_train)*100)","d5486b4b":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.20,random_state=50)","f80a60d6":"x_train.shape","136ada20":"y_train.shape","b9d35269":"x_test.shape","47e26de6":"y_test.shape","d7925cca":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score,confusion_matrix,classification_report,f1_score\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom sklearn.model_selection import GridSearchCV","5c32861e":"dtc=DecisionTreeClassifier()","dc668de8":"param={'criterion':['gini', 'entropy'],'splitter':['best', 'random'],'max_features':['none','auto','sqrt','log2']}","c90d38c5":"gd=GridSearchCV(dtc,param)\ngd.fit(x,y)\nprint(gd.best_score_)\nprint(gd.best_params_)","137f19de":"svc=SVC()\nsvcp=SVC(kernel='poly')\nsvcl=SVC(kernel='linear')\ndtc=DecisionTreeClassifier(criterion='entropy',splitter='best',max_features='sqrt')\nmnb=MultinomialNB()\nknn=KNeighborsClassifier(n_neighbors=5)\nlg=LogisticRegression()","2dbb7a7b":"def fun(f):\n    f.fit(x_train,y_train)\n    pred=f.predict(x_test)\n    print('Score',f.score(x_train,y_train))\n    print('Accuracy Score\\n',accuracy_score(y_test,pred))\n    print('Confusion Matrix\\n',confusion_matrix(y_test,pred))\n    print('Classification Report',classification_report(y_test,pred))\n    print('f1_score',f1_score(y_test,pred))","125c0755":"fun(svc)","d5a1a0e9":"fun(svcp)","f5fe7325":"fun(svcl)","a84d487d":"fun(dtc)","a6355dbd":"fun(knn)","33db6671":"fun(lg)","510ba59c":"from sklearn.model_selection import GridSearchCV\n","cda5dfbf":"from sklearn.ensemble import RandomForestClassifier","8812b797":"rfc=RandomForestClassifier(n_estimators=50,random_state=42)","6a8f0dd2":"rfc.fit(x_train,y_train)\npred=rfc.predict(x_test)\nprint('Score',rfc.score(x_train,y_train))\nprint('Accuracy Score\\n',accuracy_score(y_test,pred))\nprint('Confusion Matrix\\n',confusion_matrix(y_test,pred))\nprint('Classification Report',classification_report(y_test,pred))\nprint(\"f1 score\",f1_score(y_test,pred))","d6d9562f":"from sklearn.ensemble import GradientBoostingClassifier,AdaBoostClassifier","f776ba30":"ad=AdaBoostClassifier()\nad.fit(x_train,y_train)\npredad=ad.predict(x_test)\nprint('Score',ad.score(x_train,y_train))\nprint('Accuracy Score\\n',accuracy_score(y_test,predad))\nprint('Confusion Matrix\\n',confusion_matrix(y_test,predad))\nprint('Classification Report',classification_report(y_test,predad))\nprint(\"f1 score\",f1_score(y_test,pred))","0a88a2b9":"from sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import KFold","b8ea5dcc":"score=cross_val_score(svc,x,y,cv=14)\nprint(score.mean())","9d634063":"score=cross_val_score(svc,x,y,cv=5)\nprint(score.mean())","c8abef3f":"score=cross_val_score(svcp,x,y,cv=14)\nprint(score.mean())","36400055":"score=cross_val_score(svcl,x,y,cv=14)\nprint(score.mean())","cb7cc277":"score=cross_val_score(dtc,x,y,cv=14)\nprint(score.mean())","13446f65":"score=cross_val_score(knn,x,y,cv=14)\nprint(score.mean())","19e92742":"score=cross_val_score(rfc,x,y,cv=14)\nprint(score.mean())","2a7d554c":"score=cross_val_score(lg,x,y,cv=14)\nprint(score.mean())","a8216b7c":"score=cross_val_score(ad,x,y,cv=14)\nprint(score.mean())","5f4b2c10":"sd=pd.DataFrame({'column name':['svc','svcp','svcl','dtc','knn','rfc','ada','Log']})","56bd60d3":"sd['score']=[0.92,0.89,0.84,1.0,0.91,1.0,0.89,0.84]\nsd['Accuracy Score']=[0.92,0.90,0.86,0.90,0.89,0.94,0.86,0.86]\nsd['CV Score']=[0.89,0.85,0.823,0.87,0.87,0.91,0.85,0.83]\nsd['F1 Score']=[0.92,0.90,0.86,0.89,0.89,0.93,0.93,0.85]","362bb07c":"sd","617119bb":"from sklearn.metrics import roc_curve,roc_auc_score","ec68292c":"y_pred_prob=rfc.predict_proba(x_test)[:,1]\nfpr,tpr,thresold=roc_curve(y_test,y_pred_prob)\nprint('ROC score:',roc_auc_score(y_test,y_pred_prob))","cdacaefe":"plt.plot(fpr,tpr)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Logistic Regression')\nplt.show()","a774bfa1":"sd","8d0de651":"import pickle\nfilename='Wine_Quality.pkl'\npickle.dump(rfc,open(filename,'wb'))","d874fa00":"res=pd.DataFrame()\nres['Actual']=y_test\nres['Predict']=rfc.predict(x_test)\n\nprint(res)\nsns.catplot(data=res)","9cfe1f4c":"## SMOTE","4c8c1bb9":"Duplicate data will be drop\n","f088378f":"### Data Cleaning\n\nvolatile acidity having negative relation with quality so we will drop it\n\n","e0e32917":"## Ensemble Method\n\nBagging","9b9708f7":"Above Tabel we get best result in rfc=RandomForestClassifier so we save this model\n\n","c9283908":"## Training the Model","d1af0931":"#### this indicate fixed acidity is linearly in negative relation with pH.\n\n","0ed620cd":"### Outlier detection","73b87471":"### Statastical","d002acd8":"### This Chart shows outliers are present in data we will remove outliers in data cleaning part\n","26281b85":"#### This chart shows fixed acidity is linearly in relation with density\n\n","c2613b89":"## Conclusion","3cfdc7af":"#### This data shows some outliers are present in dataset & from mean of this that we can say that skewness is present in some features.\n\n","46dc0126":"#### Skewness Remove: set(0.5 to -0.5)\n\n","67c0747a":"#### Scaling The Data","ff7d0c70":"##### this data show that some features have skewness that will be removed in data cleaning part.\n\n","5a89be94":"### Biveriant Analysis\n\n","8e6b0288":"### Saving Model","3c3b9fd2":"## Hyperparameter Tuning","2c456990":"## Cross Validation","16e8e824":"## Visualization","0e3233d1":"### Univariate Analysis"}}