{"cell_type":{"6a470282":"code","d176a95c":"code","150993b7":"code","e89bb900":"code","371a99b1":"code","db8ba5d4":"code","fbae2ed4":"code","ebf289d7":"code","e567bb41":"code","e4dad08f":"code","d236e837":"code","8265716b":"code","5b5ecae7":"code","2d9b0057":"code","bf91cc58":"code","e36a811d":"code","6e059450":"code","82616240":"code","d58a5de5":"code","6ab6c5b7":"code","9b396323":"code","89edc689":"code","cf561249":"code","43c7f54d":"code","31022b38":"code","5648cc09":"code","26755457":"code","d227502a":"code","c9d096ef":"code","a1f9fd31":"code","48c4c38e":"code","d2a3f59d":"code","d052aba8":"code","fc190a75":"code","7f470500":"code","d272dd0d":"code","d932d218":"code","f22e3795":"code","b6968318":"code","70afc308":"markdown","28168449":"markdown","dde0fc99":"markdown","f018377b":"markdown","1ca2e32a":"markdown","766b938e":"markdown","fd9d7b84":"markdown","ff951d1b":"markdown","441a1f2c":"markdown","e03cfaf3":"markdown","95bf1231":"markdown","1d046c36":"markdown","381784bf":"markdown","49db46a6":"markdown","cfab7b5c":"markdown","a6703584":"markdown","8489cfcc":"markdown","5c570783":"markdown","dd8fa9f9":"markdown","1e286131":"markdown","62d96423":"markdown","569342eb":"markdown"},"source":{"6a470282":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nimport xgboost as xgb\nfrom sklearn.linear_model import LinearRegression","d176a95c":"df = pd.read_csv('..\/input\/insurance\/insurance.csv')\ndf.head()","150993b7":"df.info()","e89bb900":"df.describe()","371a99b1":"df.isna().sum()","db8ba5d4":"sns.pairplot(df)","fbae2ed4":"corr = df.corr()\ncorr","ebf289d7":"fig,ax = plt.subplots(figsize = (8,8))\nax = sns.heatmap(corr,\n                 annot = True,\n                 linewidths = 0.5,\n                 fmt = '.2f',\n                 cmap = 'YlGnBu');","e567bb41":"df.head()","e4dad08f":"fig, ax = plt.subplots(figsize=(6,6))\nsns.barplot(x = \"sex\", y = \"charges\", ax=ax, data=df);","d236e837":"fig, ax = plt.subplots(figsize=(10,6))\nsns.barplot(x = \"children\", y = \"charges\", ax=ax, data=df);","8265716b":"fig, ax = plt.subplots(figsize=(6,6))\nsns.barplot(x = \"smoker\", y = \"charges\", ax=ax, data=df);","5b5ecae7":"fig, ax = plt.subplots(figsize=(8,6))\nsns.barplot(x = \"region\", y = \"charges\", ax=ax, data=df);","2d9b0057":"fig, ax = plt.subplots(figsize=(16,8))\nsns.scatterplot(x = \"bmi\", y = \"charges\", ax=ax, data=df);","bf91cc58":"fig, ax = plt.subplots(figsize=(16,8))\nsns.scatterplot(x = \"age\", y = \"charges\", ax=ax, data=df);","e36a811d":"from sklearn.preprocessing import LabelEncoder","6e059450":"le = LabelEncoder()\ndf['sex'] = le.fit_transform(df['sex'])\ndf['smoker'] = le.fit_transform(df['smoker'])\ndf['region'] = le.fit_transform(df['region'])","82616240":"df.head()","d58a5de5":"df.info()","6ab6c5b7":"x = df.drop('charges',axis = 1)\ny = df['charges']","9b396323":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2)","89edc689":"%%time\nmodel = RandomForestRegressor(n_estimators = 1000,random_state = 42)\nmodel.fit(x_train,y_train)","cf561249":"print(model.score(x_train,y_train))\nprint(model.score(x_test,y_test))","43c7f54d":"rf_preds = model.predict(x_test)","31022b38":"preds = pd.DataFrame({'Actual Charges': y_test,\n                      'Predicted Charges': rf_preds,\n                      'Difference': rf_preds - y_test})\npreds.head()","5648cc09":"print(model.feature_importances_)","26755457":"feat_importances = pd.Series(model.feature_importances_, index=x.columns)\nfeat_importances.nlargest(5).plot(kind='barh')\nplt.title('RandomForest Feature impotance')\nplt.show()","d227502a":"xg_model = xgb.XGBRegressor()\nxg_model.fit(x_train,y_train)","c9d096ef":"print(xg_model.score(x_train,y_train))\nprint(xg_model.score(x_test,y_test))\n","a1f9fd31":"xg_preds = xg_model.predict(x_test)","48c4c38e":"xpreds = pd.DataFrame({'Actual Charges': y_test,\n                      'Predicted Charges': xg_preds,\n                      'Difference': xg_preds - y_test})\nxpreds.head()","d2a3f59d":"print(xg_model.feature_importances_)","d052aba8":"xfeat_importances = pd.Series(xg_model.feature_importances_, index=x.columns)\nxfeat_importances.nlargest(5).plot(kind='barh')\nplt.title('XGBoost Feature impotance')\nplt.show()","fc190a75":"reg = LinearRegression()\nreg.fit(x_train,y_train)","7f470500":"print(reg.score(x_train,y_train))\nprint(reg.score(x_test,y_test))","d272dd0d":"reg_preds = reg.predict(x_test)","d932d218":"rpreds = pd.DataFrame({'Actual Charges': y_test,\n                      'Predicted Charges': reg_preds,\n                      'Difference': reg_preds - y_test})\nrpreds.head()","f22e3795":"scores = pd.DataFrame({'RandomForest': model.score(x_test,y_test),\n                       'XGBoost': xg_model.score(x_test,y_test),\n                       'LinearRegression': reg.score(x_test,y_test)},\n                      index = [0])\nscores","b6968318":"scores.T.plot(kind = 'bar',\n              figsize = (10,10))\nplt.title('Scores of all Model')\nplt.xlabel('Model Name')\nplt.ylabel('Scores');","70afc308":"* Plotting some columns","28168449":"* Building Model","dde0fc99":"# Plotting The Scores of all the Models","f018377b":"# LinearRegression","1ca2e32a":"# Model Building","766b938e":"* Scores","fd9d7b84":"# Data Visualization","ff951d1b":"# XgBoost","441a1f2c":"* Building Model","e03cfaf3":"* Scores","95bf1231":"* Plotting feature importance","1d046c36":"* Splitting The data into training and testing sets","381784bf":"# Importing Data","49db46a6":"# Plz Upvote!!! If You like This Kernal","cfab7b5c":"* Plotting feature importance","a6703584":"* Scores","8489cfcc":"# Basic Exploration","5c570783":"* Label Encoding the Categorical columns","dd8fa9f9":"* Making pairplots","1e286131":"* Correlation Matrix","62d96423":"# RandomForest","569342eb":"* Building Model"}}