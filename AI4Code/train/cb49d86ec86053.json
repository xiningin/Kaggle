{"cell_type":{"75338782":"code","286980ce":"code","c19fc8b3":"code","72aefca9":"code","81a2e2ee":"code","28b6573a":"code","82630435":"code","a6b466ca":"code","814e5d78":"code","0829ec91":"code","3772ac19":"code","a80fcda0":"code","50827ac4":"code","3e7a1fd7":"code","bcda3a23":"code","ef7c002f":"code","4d2fd907":"code","b7f05fd6":"code","1b46c919":"code","014e1154":"code","30ea351f":"code","47cabe65":"code","3092e2da":"markdown","d3faacdb":"markdown","836b0bc0":"markdown","fca92ebe":"markdown","c9b80045":"markdown","113b7351":"markdown","53c15476":"markdown","3ee9c421":"markdown","675df4da":"markdown","94e0cc54":"markdown","dbb36e5f":"markdown","3eb7779c":"markdown","9c895e38":"markdown"},"source":{"75338782":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport os\nimport warnings\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom math import pi\nimport plotly.express as px\nfrom IPython.display import HTML,display\n\nwarnings.filterwarnings(\"ignore\")\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","286980ce":"city_day = pd.read_csv(\"\/kaggle\/input\/air-quality-data-in-india\/city_day.csv\")","c19fc8b3":"city_day.shape","72aefca9":"city_day","81a2e2ee":"city_day.mean()","28b6573a":"gases = ['PM2.5', 'PM10', 'NO', 'NO2', 'NOx', 'NH3', 'CO', 'SO2', 'O3', 'Benzene', 'Toluene', 'Xylene']","82630435":"gases","a6b466ca":"\ncity_day = city_day.fillna(city_day.mean())\ncity_day.head()","814e5d78":"pre_covid=city_day.loc[(city_day['Date']> '2014-12-31') & (city_day['Date']<'2020-0101')]\npre_covid=pre_covid.groupby(\"City\").mean()\npre_covid.head()","0829ec91":"pre_covid.shape","3772ac19":"post_covid=city_day.loc[(city_day['Date']>'2019-12-31') & (city_day['Date']<'2020-06-01')]\npost_covid=post_covid.groupby(\"City\").mean()\npost_covid.shape\n","a80fcda0":"P_So_2=sns.barplot(x=pre_covid.index,y=pre_covid['SO2'],palette=\"bright\")\nP_So_2.set_xticklabels(P_So_2.get_xticklabels(),rotation=90)\nplt.title(\"Pre Covid SO2 levels in the atmosphere\")","50827ac4":"PO_So_2=sns.barplot(x=post_covid.index,y=post_covid['SO2'],palette='bright')\nPO_So_2.set_xticklabels(PO_So_2.get_xticklabels(),rotation=90)\nplt.title(\"Post Covid SO2 in atmosphere\")","3e7a1fd7":"maincities=['Benguluru', 'Delhi', 'Mumbai', 'Patna']\nmaingases=['NH3' , 'O3' , 'NO2']\npre_covid_mod = pre_covid.loc[(pre_covid.index.isin(maincities))]\npre_covid_mod =pre_covid_mod[maingases]\nprint(pre_covid_mod)\n","bcda3a23":"pre_covid_mod = pre_covid.loc[(pre_covid.index.isin(maincities))]\npre_covid_mod =pre_covid_mod[maingases]\nbarWidth = 0.5\n \n# set height of bar\nbars1, bars2, bars3 = list(pre_covid_mod.NH3), list(pre_covid_mod.O3), list(pre_covid_mod.NO2)\n \n# Set position of bar on X axis\nr1 = np.arange(len(bars1))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n \n# Make the plot\nplt.bar(r1, bars1, color='#994BBB', width=barWidth, edgecolor='black', label='NH3')\nplt.bar(r2, bars2, color='#F12290', width=barWidth, edgecolor='black', label='O3')\nplt.bar(r3, bars3, color='#F7E44A', width=barWidth, edgecolor='black', label='NO2')\n# Add xticks on the middle of the group bars\nplt.xlabel('group', fontweight='bold')\nplt.xticks([r + barWidth for r in range(len(bars1))], list(pre_covid_mod.index))\n \n# Create legend & Show graphic\nplt.legend()\nplt.show()","ef7c002f":"post_covid_mod = post_covid.loc[(post_covid.index.isin(maincities))]\npost_covid_mod =post_covid_mod[maingases]\n\n# set height of bar\nbars1, bars2, bars3 = list(post_covid_mod.NH3), list(post_covid_mod.O3), list(post_covid_mod.NO2)\n \n# Set position of bar on X axis\nr1 = np.arange(len(bars1))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n \n# Make the plot\nplt.bar(r1, bars1, color='#994BBB', width=barWidth, edgecolor='black', label='NH3')\nplt.bar(r2, bars2, color='#F12290', width=barWidth, edgecolor='black', label='O3')\nplt.bar(r3, bars3, color='#F7E44A', width=barWidth, edgecolor='black', label='NO2')\n \n# Add xticks on the middle of the group bars\nplt.xlabel('group', fontweight='bold')\nplt.xticks([r + barWidth for r in range(len(bars1))], list(post_covid_mod.index))\n ","4d2fd907":"plt.title(\"Gas Levels in different cities Pre-Covid\")\nplt.figure(figsize=(14,7))\n# Heatmap showing average arrival delay for each airline by month\nsns.heatmap(data=pre_covid, annot=False, cmap='inferno', fmt='g')","b7f05fd6":"plt.title(\"Gas Levels in different cities Post-Covid\")\nplt.figure(figsize=(14,7))\n# Heatmap showing average arrival delay for each airline by month\nsns.heatmap(data=post_covid, annot=False, cmap='inferno', fmt='g')","1b46c919":"df_2019 = city_day.loc[(city_day['Date'] > '2019-03-31') & (city_day['Date'] < '2019-04-15')]\ndf_2020 = city_day.loc[(city_day['Date'] > '2020-03-31') & (city_day['Date'] < '2020-04-15')]\ncompare_df = pd.concat([df_2019, df_2020])\ncompare_df.head()\ncompare_df.shape\n\ndf_mumbai = compare_df[compare_df['City'] == \"Mumbai\"]\ndf_mumbai[['PM2.5', 'PM10', 'NO2', 'NOx', 'CO', 'SO2', 'NH3', 'AQI', \"Date\"]].style.background_gradient(cmap='Blues')","014e1154":"df_delhi = compare_df[compare_df['City'] == \"Delhi\"]\ndf_delhi[['PM2.5', 'PM10', 'NO2', 'NOx', 'CO', 'SO2', 'NH3', 'AQI', \"Date\"]].style.background_gradient(cmap='Purples')","30ea351f":"df_bang=compare_df[compare_df['City']==\"Bengaluru\"]\ndf_bang[['PM2.5', 'PM10', 'NO2', 'NOx', 'CO', 'SO2', 'NH3', 'AQI', \"Date\"]].style.background_gradient(cmap='Reds')","47cabe65":"compare_df['Year'] = pd.DatetimeIndex(compare_df['Date']).year\ncompo3 = sns.catplot(x=\"City\", y=\"O3\", hue=\"Year\", data = compare_df, height=10, aspect=1.8, kind=\"bar\", palette=\"bright\")\ncompo3.set_xticklabels(rotation=90)","3092e2da":"# visualization of all gases in India","d3faacdb":"Pre-Covid","836b0bc0":"# Banglore","fca92ebe":"# City wise Comparison between 2019-20","c9b80045":"**Creating a Pre-covid 19 city wise air quality data frame**","113b7351":"# Delhi","53c15476":"**post-covid**","3ee9c421":"# Mumbai","675df4da":"# HeatMaps for a better understanding","94e0cc54":"**Creating a Pre-covid 19 city wise air quality data frame**","dbb36e5f":"# Visualizing Post-Covid Atmosphere","3eb7779c":"1. Comparing S0-2 Levels","9c895e38":"2) Specific city wise comparison of particular Gases in Various Cities2. "}}