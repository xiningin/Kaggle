{"cell_type":{"85680568":"code","0b73e9a9":"code","95399c6b":"code","98649f26":"code","1d8d4ba0":"code","d8717886":"code","3084cab2":"code","e2d9569d":"code","a1cd6cb9":"code","f6ec2932":"code","4a93b4ea":"code","4e7374d2":"code","716a9289":"code","238a30a0":"code","74b6ab55":"code","1d9f24bd":"code","0baf63a0":"code","6b652999":"code","e9019899":"code","cc87b41e":"code","3f9728a1":"code","21a1a58e":"code","0da6d74b":"code","fe560a6d":"code","c9ddffc1":"code","584e3296":"code","f63aabaf":"code","8395fa4a":"code","e6768286":"code","262ac197":"markdown","32d48d79":"markdown","e6be7dd0":"markdown","bad83858":"markdown","ed0fdded":"markdown","9110b25a":"markdown","6a20ffd1":"markdown","5a2628e1":"markdown","d9047db9":"markdown","81234dbc":"markdown","b34f470d":"markdown","231b95d5":"markdown","4301ec94":"markdown","d379b8b0":"markdown","d5b722bc":"markdown","acb41762":"markdown","e29c8119":"markdown","acfa0acf":"markdown","046ce543":"markdown","9b19a748":"markdown","11ac20ae":"markdown","5b8981e4":"markdown","a979a93f":"markdown","2c2ece0c":"markdown"},"source":{"85680568":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as snd\nimport numpy as np\n%matplotlib inline\n!pip install chart_studio\nimport chart_studio.plotly as py\nfrom plotly import tools\nfrom plotly.offline import init_notebook_mode,iplot\ninit_notebook_mode(connected=False)\nimport plotly.figure_factory as ff\nimport plotly.graph_objs as go\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport math","0b73e9a9":"data_ipl=pd.read_csv(\"..\/input\/ipldata\/matches.csv\")\ndata_ipl.head(3)","95399c6b":"data_ipl=data_ipl.drop([\"date\",\"umpire1\",\"umpire2\",\"umpire3\",\"id\",\"dl_applied\"],axis=1)","98649f26":"data_ipl[\"team1\"].value_counts()","1d8d4ba0":"data_ipl=data_ipl.replace({\"Rising Pune Supergiants\":\"Rising Pune Supergiant\"},regex=True)\ndata_ipl=data_ipl.replace({\"Delhi Daredevils\":\"Delhi Capitals\"},regex=True)\ndata_ipl=data_ipl.replace({\"Deccan Chargers\":\"Sunrisers Hyderabad\"},regex=True)","d8717886":"plt.figure(figsize=(10,5))\n#plt.plot.bar()\nsnd.set_style('whitegrid')\nsnd.set_context('notebook')\nsnd.set_color_codes(\"bright\")\nplt.xticks(rotation=90,fontsize=12)\nwinnerplot = pd.DataFrame(data_ipl['winner'].value_counts())\nsnd.barplot(y = winnerplot[\"winner\"] , x = winnerplot.index, data=winnerplot,palette=\"rocket\",color=\"blue\")\n#plt.bar(winnerplot.index,winnerplot[\"winner\"])\nplt.title('Total wins of each team',fontsize=20)\nplt.xlabel('Teams',fontsize=20)\nplt.ylabel(\"Total wins from 2008-2019\",fontsize=20)\ncount=0\nfor i in winnerplot['winner']:\n    plt.text(count-0.20,i+1,str(i),size=15,color='black',rotation=0)\n    count+=1\nplt.show()    \n    ","3084cab2":"# Creating a new column \"Loser\" so that we can plot graphs on who lost the maximum matches\ndata_ipl.loc[data_ipl[\"team1\"]==data_ipl[\"winner\"],\"loser\"]=data_ipl[\"team2\"]\ndata_ipl.loc[data_ipl[\"team2\"]==data_ipl[\"winner\"],\"loser\"]=data_ipl[\"team1\"]","e2d9569d":"plt.figure(figsize=(10,5))\n#plt.plot.bar()\nsnd.set_style('whitegrid')\nsnd.set_context('notebook')\nsnd.set_color_codes(\"bright\")\nplt.xticks(rotation=90,fontsize=12)\nloserplot = pd.DataFrame(data_ipl['loser'].value_counts())\nsnd.barplot(y = loserplot[\"loser\"] , x = loserplot.index, data=loserplot,palette=\"BuGn_r\")\n#plt.bar(winnerplot.index,winnerplot[\"winner\"])\nplt.title('Total loses of each team',fontsize=20)\nplt.xlabel('Teams',fontsize=20)\nplt.ylabel(\"Total loses from 2008-2019\",fontsize=20)\ncount=0\nfor i in loserplot['loser']:\n    plt.text(count-0.20,i+1,str(i),size=15,color='black',rotation=0)\n    count+=1","a1cd6cb9":"Total_Match=data_ipl[\"team1\"].value_counts()+data_ipl[\"team2\"].value_counts()\nTotal_Match = Total_Match.rename_axis('Teams').to_frame('Matches_played')\nTotal_Match[\"Won\"]=winnerplot[\"winner\"]\nTotal_Match[\"Lost\"]=loserplot[\"loser\"]\nTotal_Match=Total_Match.sort_values(by=\"Won\",ascending=False)","f6ec2932":"# Calculating win and Lose Percentage\nTotal_Match[\"Win Percent\"]=(Total_Match[\"Won\"]\/Total_Match[\"Matches_played\"])*100\nTotal_Match[\"Lose Percent\"]=(Total_Match[\"Lost\"]\/Total_Match[\"Matches_played\"])*100\nTotal_Match=Total_Match.round({\"Win Percent\": 1,\"Lose Percent\":1})\nTotal_Match.head(13)","4a93b4ea":"# Setting Bars\nbar1=Total_Match[\"Matches_played\"]\nbar2=Total_Match[\"Won\"]\nbar3=Total_Match[\"Lost\"]\n\n# set width of bar\nbarWidth = 0.25\n\n\n#plt.xticks(rotation=90,fontsize=12)\ntrace1 = go.Bar(x = Total_Match.index,  y = bar1 ,name='Total Matches',width=barWidth)\ntrace2 = go.Bar(x = Total_Match.index,  y = bar2,name='Matches_won',marker=dict(color='green'),width=barWidth)\ntrace3 = go.Bar(x = Total_Match.index, y = bar3,name='Matches_lost',marker=dict(color='red'),width=barWidth)\n\n\ndata = [trace1, trace2, trace3]\n\nlayout = go.Layout(title='Match Played, Wins And Loses',xaxis=dict(title='Team'), \n                   yaxis=dict(title='Total Matches'),bargap=0.25,bargroupgap=0.25)\n\nfig = go.Figure(data=data, layout=layout)\n\n\niplot(fig)","4e7374d2":"fig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\n\nfig.add_trace(go.Pie(labels=Total_Match.index, values=Total_Match[\"Win Percent\"]),1,1)\nfig.update_traces(hoverinfo='label', textinfo='value', textfont_size=20,\n                  marker=dict(line=dict(color='#000000', width=2)),hole=.3)\n\nfig.add_trace(go.Pie(labels=Total_Match.index, values=Total_Match[\"Lose Percent\"]),1,2)\nfig.update_traces(hoverinfo='label+value', textinfo='value', textfont_size=20,\n marker=dict(line=dict(color='#000000', width=2)),hole=.4)\n\n# Add annotations in the center of the donut pies.\nfig.update_layout(\n    title_text=\"Win and Lose Percent for Each Team\",\n    annotations=[dict(text='Win Percent', x=0.15, y=0.5, font_size=16, showarrow=False),\n                 dict(text='Lose Percent', x=0.86, font_size=16, showarrow=False)])\nfig.show()","716a9289":"plt.figure(figsize=(12,5))\nCity_Data=data_ipl[\"city\"].value_counts()[:9]\nCity_Data = City_Data.rename_axis('City').to_frame('Matches_played')\nsnd.barplot(x = City_Data.index , y = City_Data[\"Matches_played\"], data=City_Data,palette=\"cubehelix\")\nplt.show()","238a30a0":"#City_teams=.loc[City_teams[\"City\"]==data_ipl[\"winner\"],\"loser\"]=data_ipl[\"team2\"]\nCity_teams=data_ipl[[\"city\",\"team1\",\"team2\",\"winner\"]]\nCity_teams\n\n# Creating a new column \"Result\" based on Home Wins and Home Lose\nCity_teams.loc[(City_teams['city'] == \"Mumbai\") & (City_teams['winner'] == \"Mumbai Indians\"),\"Result\"]=\"Won\"\nCity_teams.loc[(City_teams['city'] == \"Mumbai\") & ((City_teams[\"team1\"] == \"Mumbai Indians\") | (City_teams[\"team2\"] == \"Mumbai Indians\")) & (City_teams['winner'] != \"Mumbai Indians\"),\"Result\"]=\"Lost\"\nCity_teams.loc[(City_teams['city'] == \"Kolkata\") & (City_teams['winner'] == \"Kolkata Knight Riders\"),\"Result\"]=\"Won\"\nCity_teams.loc[(City_teams['city'] == \"Kolkata\") & ((City_teams[\"team1\"] == \"Kolkata Knight Riders\") | (City_teams[\"team2\"] == \"Kolkata Knight Riders\")) & (City_teams['winner'] != \"Kolkata Knight Riders\"),\"Result\"]=\"Lost\"\nCity_teams.loc[(City_teams['city'] == \"Delhi\") & (City_teams['winner'] == \"Delhi Capitals\"),\"Result\"]=\"Won\"\nCity_teams.loc[(City_teams['city'] == \"Delhi\") & ((City_teams[\"team1\"] == \"Delhi Capitals\") | (City_teams[\"team2\"] == \"Capitals\")) & (City_teams['winner'] != \"Delhi Capitals\"),\"Result\"]=\"Lost\"\nCity_teams.loc[(City_teams['city'] == \"Bangalore\") & (City_teams['winner'] == \"Royal Challengers Bangalore\"),\"Result\"]=\"Won\"\nCity_teams.loc[(City_teams['city'] == \"Bangalore\") & ((City_teams[\"team1\"] == \"Royal Challengers Bangalore\") | (City_teams[\"team2\"] == \"Royal Challengers Bangalore\"))& (City_teams['winner'] != \"Royal Challengers Bangalore\"),\"Result\"]=\"Lost\"\nCity_teams.loc[(City_teams['city'] == \"Hyderabad\") & (City_teams['winner'] == \"Sunrisers Hyderabad\"),\"Result\"]=\"Won\"\nCity_teams.loc[(City_teams['city'] == \"Hyderabad\") & ((City_teams[\"team1\"] == \"Sunrisers Hyderabad\") | (City_teams[\"team2\"] == \"Sunrisers Hyderabad \"))  & (City_teams['winner'] != \"Sunrisers Hyderabad\"),\"Result\"]=\"Lost\"\nCity_teams.loc[(City_teams['city'] == \"Chennai\") & (City_teams['winner'] == \"Chennai Super Kings\"),\"Result\"]=\"Won\"\nCity_teams.loc[(City_teams['city'] == \"Chennai\") & ((City_teams[\"team1\"] == \"Chennai Super Kings\") | (City_teams[\"team2\"] == \"Chennai Super Kings\"))& (City_teams['winner'] != \"Chennai Super Kings\"),\"Result\"]=\"Lost\"\nCity_teams.loc[(City_teams['city'] == \"Jaipur\") & (City_teams['winner'] == \"Rajasthan Royals\"),\"Result\"]=\"Won\"\nCity_teams.loc[(City_teams['city'] == \"Jaipur\")& ((City_teams[\"team1\"] == \"Rajasthan Royals\") | (City_teams[\"team2\"] == \"Rajasthan Royals\")) & (City_teams['winner'] != \"Rajasthan Royals\"),\"Result\"]=\"Lost\"\nCity_teams.loc[(City_teams['city'] == \"Chandigarh\") & (City_teams['winner'] == \"Kings XI Punjab\"),\"Result\"]=\"Won\"\nCity_teams.loc[(City_teams['city'] == \"Chandigarh\") & ((City_teams[\"team1\"] == \"Kings XI Punjab\") | (City_teams[\"team2\"] == \"Kings XI Punjab\")) & (City_teams['winner'] != \"Kings XI Punjab\"),\"Result\"]=\"Lost\"\n\n# Dropping NaN values\nCity_teams=City_teams.dropna()","74b6ab55":"# Grouping By City and Result and Unstacking\n\nCity_teams_group=City_teams.groupby([\"city\",\"Result\"]).size().unstack(fill_value=0)\nCity_teams_group[\"Teams\"]=[\"Royal Challengers Bangalore\",\"Kings XI Punjab\",\"Chennai Super Kings\",\"Delhi Capitals\",\"Sunrisers Hyderabad\",\"Rajashtan Royals\",\"Koklata Knight Riders\",\"Mumbai Indians\"]\nCity_teams_group[\"Total Played\"]=City_teams_group[\"Won\"]+City_teams_group[\"Lost\"]\ncolumn_names = [\"Teams\",\"Total Played\", \"Won\",\"Lost\"]\nCity_teams_group=City_teams_group.reindex(columns= column_names)\nCity_teams_group.head(8)\n","1d9f24bd":"#plt.figure(figsize=(12,8))\n#City_teams_group.plot(figsize=(12,8))\nCity_teams_group.plot.bar(\"Teams\",width = 0.7,figsize=(12,8),color=[\"#011627\",\"#f71735\",\"#41ead4\"])\nplt.show()","0baf63a0":"City_teams_group_total=City_teams_group[[\"Total Played\"]]\nCity_teams_group_total[\"Home Win Percent\"]=(City_teams_group[\"Won\"]\/City_teams_group_total[\"Total Played\"])*100\nCity_teams_group_total[\"Home Lose Percent\"]=(City_teams_group[\"Lost\"]\/City_teams_group_total[\"Total Played\"])*100\nCity_teams_group_total=City_teams_group_total.round({\"Home Win Percent\": 1,\"Home Lose Percent\":1})\nCity_teams_group_total[\"Teams\"]=City_teams_group[[\"Teams\"]]\ncolumn_names = [\"Teams\",\"Total Played\", \"Home Win Percent\",\"Home Lose Percent\"]\nCity_teams_group_total=City_teams_group_total.reindex(columns= column_names)\nCity_teams_group_total.head(8)","6b652999":"fig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\n\nfig.add_trace(go.Pie(labels=City_teams_group_total[\"Teams\"], values=City_teams_group_total[\"Home Win Percent\"]),1,1)\nfig.update_traces(hoverinfo='label', textinfo='value', textfont_size=20,\n                  marker=dict(line=dict(color='#000000', width=2)),hole=.3)\n\nfig.add_trace(go.Pie(labels=City_teams_group_total[\"Teams\"], values=City_teams_group_total[\"Home Lose Percent\"]),1,2)\nfig.update_traces(hoverinfo='label+value', textinfo='value', textfont_size=20,\n marker=dict(line=dict(color='#000000', width=2)),hole=.48)\n\n# Add annotations in the center of the donut pies.\nfig.update_layout(\n    title_text=\"Home Win and Lose Percent\",\n    annotations=[dict(text=\"Home Win Percent\", x=0.12, y=0.5, font_size=15, showarrow=False),\n                dict(text='Home Lose Percent', x=0.88, font_size=14, showarrow=False)])\nfig.show()","e9019899":"# Setting Bars\nbar2=City_teams_group_total[\"Home Win Percent\"]\nbar3=City_teams_group_total[\"Home Lose Percent\"]\n\n# set width of bar\nbarWidth = 0.25\n\n\n#plt.xticks(rotation=90,fontsize=12)\ntrace2 = go.Bar(x = City_teams_group_total[\"Teams\"],  y = bar2,name='Home Win Percent',marker=dict(color='green'),width=barWidth)\ntrace3 = go.Bar(x = City_teams_group_total[\"Teams\"], y = bar3,name='Home Lose Percent',marker=dict(color='red'),width=barWidth)\n\n\ndata = [trace2, trace3]\n\nlayout = go.Layout(title='Home Win Percent Vs Home Lose Percent',xaxis=dict(title='Team'), \n                   yaxis=dict(title='Matches'),bargap=0.25,bargroupgap=0.25)\n\nfig = go.Figure(data=data, layout=layout)\n\n\niplot(fig)\n","cc87b41e":"All_time_man=data_ipl[\"player_of_match\"].value_counts()[:15]","3f9728a1":"All_time_man.plot.barh(figsize=(10,8),color=['#220901', '#621708', '#941b0c', '#bc3908', '#f6aa1c',\"#00a8e8\",\"red\",\"grey\"])\nplt.gca().invert_yaxis()","21a1a58e":"Match_man_2017=data_ipl[[\"player_of_match\"]]\nMatch_man_2017[\"Season\"]=data_ipl[\"season\"]\nMatch_man_2017=Match_man_2017[Match_man_2017[\"Season\"] == 2017]\n#Match_man_2017=Match_man[(Match_man[\"Season\"].isin(['2008','2009',\"2010\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\",\"2018\",\"2\"]))]\nMatch_man_2017=Match_man_2017[\"player_of_match\"].value_counts()[:10]\nMatch_man_2017 = Match_man_2017.rename_axis('Players').to_frame('2017: No of Man of the match')\n\nMatch_man_2018=data_ipl[[\"player_of_match\"]]\nMatch_man_2018[\"Season\"]=data_ipl[\"season\"]\nMatch_man_2018=Match_man_2018[Match_man_2018[\"Season\"] == 2018]\nMatch_man_2018=Match_man_2018[\"player_of_match\"].value_counts()[:10]\nMatch_man_2018 = Match_man_2018.rename_axis('Players').to_frame('2018: No of Man of the match')\n\n\nMatch_man_2019=data_ipl[[\"player_of_match\"]]\nMatch_man_2019[\"Season\"]=data_ipl[\"season\"]\nMatch_man_2019=Match_man_2019[Match_man_2019[\"Season\"] == 2019]\nMatch_man_2019=Match_man_2019[\"player_of_match\"].value_counts()[:13]\nMatch_man_2019 = Match_man_2019.rename_axis('Players').to_frame('2019: No of Man of the match')                        ","0da6d74b":"f, axes = plt.subplots(1, 3,figsize=(20,5))\nMatch_man_2017.plot.bar(color=\"#ff6600\",ax=axes[0])\nMatch_man_2018.plot.bar(ax=axes[1])\nMatch_man_2019.plot.bar(color=\"#669900\", ax=axes[2])\nplt.show()","fe560a6d":"data_toss_bat=data_ipl[[\"toss_winner\",\"toss_decision\",\"winner\"]]\ndata_toss_bat.loc[((data_toss_bat['toss_winner']) == (data_toss_bat[\"winner\"])) &  (data_toss_bat[\"toss_decision\"] == \"bat\"),\"First Batting Result\"]=\"Won\"\ndata_toss_bat.loc[((data_toss_bat['toss_winner']) != (data_toss_bat[\"winner\"])) &  (data_toss_bat[\"toss_decision\"] == \"bat\"),\"First Batting Result\"]=\"Lost\"\ndata_toss_bat=data_toss_bat.dropna()","c9ddffc1":"data_toss_bat.head()\ndata_toss_bat=data_toss_bat.groupby([\"toss_winner\",\"First Batting Result\"]).size().unstack(fill_value=0)\ncolumn_names = [\"Won\",\"Lost\"]\ndata_toss_bat=data_toss_bat.reindex(columns= column_names)\ndata_toss_bat","584e3296":"data_toss_bat.plot.bar(width = 0.7,figsize=(12,8),color=[\"#003049\",\"#fcbf49\"])","f63aabaf":"data_toss_field=data_ipl[[\"toss_winner\",\"toss_decision\",\"winner\"]]\ndata_toss_field.loc[((data_toss_field['toss_winner']) == (data_toss_field[\"winner\"])) &  (data_toss_field[\"toss_decision\"] == \"field\"),\"First Fielding Result\"]=\"Won\"\ndata_toss_field.loc[((data_toss_field['toss_winner']) != (data_toss_field[\"winner\"])) &  (data_toss_field[\"toss_decision\"] == \"field\"),\"First Fielding Result\"]=\"Lost\"\ndata_toss_field=data_toss_field.dropna()\n","8395fa4a":"data_toss_field=data_toss_field.groupby([\"toss_winner\",\"First Fielding Result\"]).size().unstack(fill_value=0)\ncolumn_names = [\"Won\",\"Lost\"]\ndata_toss_field=data_toss_field.reindex(columns= column_names)\ndata_toss_field\n\n","e6768286":"data_toss_field.plot.bar(width = 0.7,figsize=(12,8),color=[\"#003049\",\"#fcbf49\"])","262ac197":"# Removing unwanted columns\n1. As we can see date columns are not important as we just need the Year which are present in Season Column\n2. We can Remove the Umpire Variables as Umpiring wont affect our result\n3.  Id column is not significant for analysis\n4. Duckworth Lewis method (dl_applied) which is used to reduce the target rate for second innings due to poor weather is also not significant ","32d48d79":"# Lets check all the teams present in our data","e6be7dd0":"# Lets check the statistics for Wins , Loses , Win Percent and Lose Percent for each team\n\n### Win Percent= (Number of Matches Won \/Total Number of matches)*100\n\n### Lose Percent = (Number of Matches Lost \/Total Number of matches)*100","bad83858":"# From the Graph we can conclude :\n    \n#### 1. Chennai super Kings have won more matches when they have elected to bat first\n#### 2. Mumbai Indians have also won more matches when the have elected to bat first\n\n#### 3. Rest All the teams have lost more matches when they have elected to Bat first","ed0fdded":"# Lets check the number of wins and loses when the teams elect to field first","9110b25a":"# Win Percent and Lose Percent for Each Team\n","6a20ffd1":"# Total Loses of each team from 2008-2019\n\n### 1. Delhi Capitals have lost 98 matches out of total matches played from 2008 to 2019","5a2628e1":"# We Know That Home Matches and Away Matches always have a big impact on win and loses\n### 1. Home Match  - Matches played in the team's Home City\n\n### 2 Away Match - Matches played in Different City\n","d9047db9":"# Bar Graph for Home Win and Lose Percent\n\n### 1. We Conclude that almost Every Team Performs better in their Home cities  Except Kings XI Punjab and Royal Challengers Banglore\n\n###    2. Chennai Super Kings , Mumbai Indians , Rajasthan Royals have a very high Win Percentage in their respective home cities.\n","81234dbc":"# Team that won the Most number of Matches from 2008-2019\n\n### 1. Mumbai Indians have won 109 matches from 2008 to 2019 which is the highest win record.\n\n### 2. Mumbai indians is followed by Chennai super Kings with 100 wins\n","b34f470d":"# Lets check the Statistics  for each of the Teams for their respectve home cities","231b95d5":"# Pie Chart For Home Win and Home lose Percentage\n\n## (Hover over pie chart for team names)","4301ec94":"# Graph for Total Matches Played, Wins and Loses\n\n## As we can see from Graph \n\n### 1. Royal challengers Banglore have lost  more matches than the number of matches they have won\n\n### 2. Same goes for Kings XI Punjab ,Delhi Capitals and  Sunrisers Hyderabad \n\n## (Hover above the Graph Bars for Detailed Statistics)","d379b8b0":"# Most Number of Man of the Matches award for Season 2017 , 2018 and 2019\n\n#### 1. Rashid Khan received Man of the Match 4 times in 2018 followed by Ab de Villers , Watson , Narine and Butler\n\n#### 2.  Russel received Man of the Match 4 times in 2019\n\n#### 3. Dhoni , Pant , Hardik Pandya , Bumrah recieved Man of the match 3 times each in 2019\n\n#### The  chances of these players Receiving Man of the Match in 2020 will be higher","d5b722bc":"# Some information Regarding the teams in IPL\n1.Pune Warriors India played for three Seasons(2011-2013).It was Terminated in 2013 beacuse of financial Problems.\n\n2.Rising Pune Supergiant played for two Seasons (2016-2017)\n\n3.Gujrat Lions played for two Seasons (2016-2017)\n\n4.Kochi Tuskers Kerala played for just one Season (2011)\n\n5.Chennai Super Kings were banned for Two Seasons (2016-2017)\n\n6.Rajasthan Royals were banned for Two Seasons (2016-2017)\n\n7.Deccan Chargers played from (2008-2012)..The Team was permanently banned in 2012. Deccan Chargers were Replaced by Sunrisers Hyderabad from 2013. Maximum Players were Retained\n","acb41762":"# Lets check the Win and Lose Percentage of teams in their respective Home Cities ","e29c8119":"# Most Number of MAN OF THE MATCH Award from 2008 to 2019 goes to\n\n### 1. Chris Gayle Stands at the top for most number of Man Of the Match award with a count more than 20\n\n### 2. Everyone's favourite AB de Villers stands at the second position for Most Number of Man of the match award.","acfa0acf":"# From the Below Graph We Can say that most of the Matches were Played in Mumbai  Kolkata , Delhi, Banglore , Hyderabad and Chennai\n","046ce543":"# All  Teams based on certain conditions Elect to Bat first or Bowl first after winning the toss\n\n## Lets check the number of wins and loses  when the teams elect to bat first ","9b19a748":"## As We can see From the below Graph \n\n### 1. Mumbai Indians, Chennai super kings and Kolkata Knight Riders have a high win record at home\n\n### 2. Only Kings XI Punjab has lost More Games at Home than they have won\n\n### 3. Royal Challengers Banglore have equal number of wins and loses in their home city","11ac20ae":"# As  we see from the Below Pie Chart\n\n### 1. Chennai SuperKings have the highest Win Rate Followed by Mumbai Indians\n\n### 2. Kolkata Knight Riders Also Have a decent Win Rate\n\n### 3.Pune Warriors have the highest Lose Rate\n\n## (Hover above the pie chart for Team Names)","5b8981e4":"# As Most of the Players have Retired since 2008 , We can check  Most Number  of MAN OF THE MATCH Award for last 3 Seasons ","a979a93f":"# Some Analysis from the above Data \n\n#### 1. Rising Pune Supergiant and Rising Pune Supergiants are same team.. so we will turn all Rising Pune Supergiant's' to Rising Pune Supergiant\n\n#### 2. Delhi Daredevils and Delhi Capitals are the same team. Delhi Capitals is the present Name\n\n#### 3. Deccan Chargers was Replaced By a Hyderabad Sunrisers in 2013. Maximum Players were retained so we can combine the data.","2c2ece0c":"# From the Below Graph we can Conclude\n\n### 1. All teams have a good winning record when they have won the toss and elected to Field first\n \n 1. Kolkata Knight Riders have the highest win rate when they have elected to field first\n\n### So lets conclude chasing runs is easier in IPL. "}}