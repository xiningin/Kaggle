{"cell_type":{"77b7f59b":"code","289663ad":"code","88669b80":"code","8cde3561":"markdown","3349f826":"markdown"},"source":{"77b7f59b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","289663ad":"import cv2 as cv\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\n#denoising\nimage = cv.imread('..\/input\/pothole\/pothole.jpeg',255)\ndst = cv.fastNlMeansDenoisingColored(image,None,5,10,7,21)\n\n#show image\nplt.subplot(121),plt.imshow(image)\nplt.subplot(122),plt.imshow(dst)\nplt.show()","88669b80":"#edges detection\nedges =cv.Canny(image,10,90)\n\n#show image\nplt.subplot(121),plt.imshow(image,cmap = 'gray')\nplt.title('Original Image'), plt.xticks([]), plt.yticks([])\n\nplt.subplot(122),plt.imshow(edges,cmap = 'gray')\nplt.title('Edge Image'), plt.xticks([]), plt.yticks([])\nplt.show()","8cde3561":"for detect the potholes we can use edges detection for viewing the edge of potholes, but its still basic ","3349f826":"First, we remove the noise from the picture using denoising "}}