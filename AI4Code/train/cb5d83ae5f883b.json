{"cell_type":{"32c77734":"code","fc883d3e":"code","e3969669":"code","a9a15354":"code","61c285ab":"code","1e70d59e":"code","db9f9ff7":"code","8ae42804":"code","d911d5fb":"code","ee29255c":"code","0ad311e4":"code","4110b88e":"code","9fdd0b0d":"code","980fb0a1":"code","0de0f724":"code","2bf4d9cf":"code","c966317b":"code","1423a1da":"markdown","0751bf09":"markdown","2e122c65":"markdown","411c79fd":"markdown","cb6cf6dc":"markdown","6bab307c":"markdown","a0ddf230":"markdown","13f6f500":"markdown","7d20ad67":"markdown","0d642217":"markdown","825b9561":"markdown","b7436d35":"markdown","74486e5e":"markdown","13d8e2d7":"markdown","ed59b737":"markdown","0e3adba5":"markdown","b563fda5":"markdown","00722fa3":"markdown","5f3a77a0":"markdown","fda6d5eb":"markdown","9a3c2903":"markdown","ad4867fe":"markdown"},"source":{"32c77734":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","fc883d3e":"dataset_train = pd.read_csv('..\/input\/gooogle-stock-price\/Google_Stock_Price_Train.csv')\ntraining_set = dataset_train.iloc[:, 1:2].values","e3969669":"from sklearn.preprocessing import MinMaxScaler\nsc = MinMaxScaler(feature_range = (0, 1))\ntraining_set_scaled = sc.fit_transform(training_set)","a9a15354":"X_train = []\ny_train = []\nfor i in range(60, 1258):\n    X_train.append(training_set_scaled[i-60:i, 0])\n    y_train.append(training_set_scaled[i, 0])\nX_train, y_train = np.array(X_train), np.array(y_train)","61c285ab":"X_train = np.reshape(X_train, (X_train.shape[0], X_train.shape[1], 1))","1e70d59e":"import tensorflow\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import LSTM\nfrom tensorflow.keras.layers import Dropout","db9f9ff7":"regressor = Sequential()","8ae42804":"regressor.add(LSTM(units = 50, return_sequences = True, input_shape = (X_train.shape[1], 1)))\nregressor.add(Dropout(0.2))","d911d5fb":"regressor.add(LSTM(units = 100, return_sequences = True))\nregressor.add(Dropout(0.5))","ee29255c":"regressor.add(LSTM(units = 100, return_sequences = True))\nregressor.add(Dropout(0.5))","0ad311e4":"regressor.add(LSTM(units = 50))\nregressor.add(Dropout(0.2))","4110b88e":"regressor.add(Dense(units = 1))","9fdd0b0d":"regressor.compile(optimizer = 'adam', loss = 'mean_squared_error')","980fb0a1":"regressor.fit(X_train, y_train, epochs = 100, batch_size = 32)","0de0f724":"dataset_test = pd.read_csv('..\/input\/gooogle-stock-price\/Google_Stock_Price_Test.csv')\nreal_stock_price = dataset_test.iloc[:, 1:2].values","2bf4d9cf":"dataset_total = pd.concat((dataset_train['Open'], dataset_test['Open']), axis = 0)\ninputs = dataset_total[len(dataset_total) - len(dataset_test) - 60:].values\ninputs = inputs.reshape(-1,1)\ninputs = sc.transform(inputs)\nX_test = []\nfor i in range(60, 80):\n    X_test.append(inputs[i-60:i, 0])\nX_test = np.array(X_test)\nX_test = np.reshape(X_test, (X_test.shape[0], X_test.shape[1], 1))\npredicted_stock_price = regressor.predict(X_test)\npredicted_stock_price = sc.inverse_transform(predicted_stock_price)","c966317b":"plt.plot(real_stock_price, color = 'red', label = 'Real Google Stock Price')\nplt.plot(predicted_stock_price, color = 'blue', label = 'Predicted Google Stock Price')\nplt.title('Google Stock Price Prediction')\nplt.xlabel('Time')\nplt.ylabel('Google Stock Price')\nplt.legend()\nplt.show()","1423a1da":"### 2.5 Adding a third LSTM layer and some Dropout regularisation","0751bf09":"## We can see that the model learned the pattern kind of correctly.","2e122c65":"### 2.9 Fitting the RNN to the Training set","411c79fd":"## Part 3 - Making the predictions and visualising the results","cb6cf6dc":"## Part 1 - Data Preprocessing","6bab307c":"### 2.8 Compiling the RNN","a0ddf230":"### 3.3 Visualising the results","13f6f500":"### 1.3 Creating a data structure with 60 timesteps and 1 output","7d20ad67":"# Recurrent Neural Network","0d642217":"### 2.1 Importing the Keras libraries and packages","825b9561":"## Part 2 - Building and Training the RNN","b7436d35":"### 2.7 Adding the output layer","74486e5e":"### 2.4 Adding a second LSTM layer and some Dropout regularisation","13d8e2d7":"### 1.2 Importing the training set","ed59b737":"### 3.2 Getting the predicted stock price of 2017","0e3adba5":"### Feature Scaling","b563fda5":"### Reshaping","00722fa3":"### 3.1 Getting the real stock price of 2017","5f3a77a0":"### 2.2 Initialising the RNN","fda6d5eb":"### 2.6 Adding a fourth LSTM layer and some Dropout regularisation","9a3c2903":"### 2.3 Adding the first LSTM layer and some Dropout regularisation","ad4867fe":"### 1.1 Importing the libraries"}}