{"cell_type":{"699b39fa":"code","99a5525e":"code","88509b8d":"code","bab0b189":"code","4654befc":"code","bce11b2c":"code","c8830b12":"code","78fc0ac3":"code","d30ec77b":"code","e59edc17":"code","a209eb94":"code","3e24d123":"code","b5a56d55":"code","8c3f743b":"code","3c5f8785":"code","d9a395f7":"code","02fcc74b":"code","88071da0":"code","73d17b12":"code","055823e8":"code","89b940ca":"code","9be10768":"code","9fa58d32":"code","0d6b256d":"code","dab335d1":"code","61fbcb79":"code","5122db61":"markdown","1d5255ae":"markdown","c73c17d7":"markdown","cdbdd6f5":"markdown","659219ac":"markdown","760aaebe":"markdown","2dcadac5":"markdown","8da58a25":"markdown","a260d6d7":"markdown","11165726":"markdown","651fbe46":"markdown","537cf42a":"markdown","2cab30d5":"markdown","563dd4a8":"markdown","f168e83c":"markdown","0689c4fa":"markdown","9df649c3":"markdown","3d408e0f":"markdown","f51a2e16":"markdown","9e442d1c":"markdown","262417dc":"markdown","2754f6c8":"markdown","253058fd":"markdown","39034254":"markdown","a8eb7954":"markdown","be96af23":"markdown","ef33ae9b":"markdown"},"source":{"699b39fa":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\npd.set_option('display.max_colwidth', -1)","99a5525e":"data = pd.read_csv('\/kaggle\/input\/unemloyment\/UNRATE.csv', header = None)\ndata.columns = ['Month','Unemployment']\ndata['Month'] = pd.to_datetime(data['Month'], format='%d-%m-%Y')\ndata = data.set_index('Month')\ndata.head(12)","88509b8d":"data.plot(figsize=(20, 5))\nplt.grid()\nplt.legend(loc='best')\nplt.title('Unemployment')\nplt.show(block=False)","bab0b189":"import seaborn as sns\nfig = plt.subplots(figsize=(20, 5))\nax = sns.boxplot(x=data['Unemployment'],whis=1.5)","4654befc":"fig = data.Unemployment.hist(figsize = (20,5))","bce11b2c":"from pylab import rcParams\nimport statsmodels.api as sm\nrcParams['figure.figsize'] = 20, 10\ndecomposition = sm.tsa.seasonal_decompose(data.Unemployment, model='additive') # additive seasonal index\nfig = decomposition.plot()\nplt.show()","c8830b12":"decomposition = sm.tsa.seasonal_decompose(data.Unemployment, model='multiplicative') # multiplicative seasonal index\nfig = decomposition.plot()\nplt.show()","78fc0ac3":"train_len = 612\ntrain = data[0:train_len] # first 612 months as training set\ntest = data[train_len:] # last 255 months as out-of-time test set","d30ec77b":"data['Unemployment'].plot(figsize=(20, 5))\nplt.grid()\nplt.legend(loc='Unemployment')\nplt.title('Unemployment')\nplt.show(block=False)","e59edc17":"from statsmodels.tsa.stattools import adfuller\nadf_test = adfuller(data['Unemployment'])\n\nprint('ADF Statistic: %f' % adf_test[0])\nprint('Critical Values @ 0.05: %.2f' % adf_test[4]['5%'])\nprint('p-value: %f' % adf_test[1])","a209eb94":"from statsmodels.tsa.stattools import kpss\nkpss_test = kpss(data['Unemployment'])\n\nprint('KPSS Statistic: %f' % kpss_test[0])\nprint('Critical Values @ 0.05: %.2f' % kpss_test[3]['5%'])\nprint('p-value: %f' % kpss_test[1])","3e24d123":"from scipy.stats import boxcox\ndata_boxcox = pd.Series(boxcox(data['Unemployment'], lmbda=0), index = data.index)\n\ndata['Unemployment'].plot(figsize=(20, 5))\nplt.grid()\nplt.plot(data_boxcox, label='After Box Cox tranformation')\nplt.legend(loc='best')\nplt.title('After Box Cox transform')\nplt.show()","b5a56d55":"data_boxcox_diff = pd.Series(data_boxcox - data_boxcox.shift(), data.index)\nplt.figure(figsize=(20,5))\nplt.grid()\nplt.plot(data_boxcox_diff, label='After Box Cox tranformation and differencing')\nplt.legend(loc='best')\nplt.title('After Box Cox transform and differencing')\nplt.show()","8c3f743b":"data_boxcox_diff.dropna(inplace=True)","3c5f8785":"data_boxcox_diff.head()","d9a395f7":"adf_test = adfuller(data_boxcox_diff)\n\nprint('ADF Statistic: %f' % adf_test[0])\nprint('Critical Values @ 0.05: %.2f' % adf_test[4]['5%'])\nprint('p-value: %f' % adf_test[1])","02fcc74b":"kpss_test = kpss(data_boxcox_diff)\n\nprint('KPSS Statistic: %f' % kpss_test[0])\nprint('Critical Values @ 0.05: %.2f' % kpss_test[3]['5%'])\nprint('p-value: %f' % kpss_test[1])","88071da0":"from statsmodels.graphics.tsaplots import plot_acf\nplt.figure(figsize=(20,5))\nplt.grid()\nplot_acf(data_boxcox_diff, ax=plt.gca(), lags = 30)\nplt.show()","73d17b12":"from statsmodels.graphics.tsaplots import plot_pacf\nplt.figure(figsize=(20,5))\nplt.grid()\nplot_pacf(data_boxcox_diff, ax=plt.gca(), lags = 30)\nplt.show()","055823e8":"train_data_boxcox = data_boxcox[:train_len]\ntest_data_boxcox = data_boxcox[train_len:]\ntrain_data_boxcox_diff = data_boxcox_diff[:train_len-1]\ntest_data_boxcox_diff = data_boxcox_diff[train_len-1:]","89b940ca":"train_data_boxcox_diff","9be10768":"from statsmodels.tsa.arima_model import ARIMA\nmodel = ARIMA(train_data_boxcox_diff, order=(12,0, 0)) \nmodel_fit = model.fit()\nprint(model_fit.params)","9fa58d32":"y_hat_ar = data_boxcox_diff.copy()\ny_hat_ar['ar_forecast_boxcox_diff'] = model_fit.predict(data_boxcox_diff.index.min(), data_boxcox_diff.index.max())\ny_hat_ar['ar_forecast_boxcox'] = y_hat_ar['ar_forecast_boxcox_diff'].cumsum()\ny_hat_ar['ar_forecast_boxcox'] = y_hat_ar['ar_forecast_boxcox'].add(data_boxcox[0])\ny_hat_ar['ar_forecast'] = np.exp(y_hat_ar['ar_forecast_boxcox'])","0d6b256d":"y_hat_ar['ar_forecast'].head(6)","dab335d1":"plt.figure(figsize=(20,5))\nplt.grid()\nplt.plot(train['Unemployment'], label='Train')\nplt.plot(test['Unemployment'], label='Test')\nplt.plot(y_hat_ar['ar_forecast'][test.index.min():], label='Auto regression forecast')\nplt.legend(loc='best')\nplt.title('Auto Regression Method')\nplt.show()","61fbcb79":"from sklearn.metrics import mean_squared_error\nrmse = np.sqrt(mean_squared_error(test['Unemployment'], y_hat_ar['ar_forecast'][test.index.min():])).round(2)\nmape = np.round(np.mean(np.abs(test['Unemployment']-y_hat_ar['ar_forecast'][test.index.min():])\/test['Unemployment'])*100,2)\n\nresults = pd.DataFrame({'Method':['Autoregressive (AR) method'], 'RMSE': [rmse],'MAPE': [mape] })\nresults = results[['Method', 'RMSE', 'MAPE']]\nresults","5122db61":"## Import required packages","1d5255ae":"## Plot time series data","c73c17d7":"## Outlier detection","cdbdd6f5":"# Time series analysis","659219ac":"### Additive seasonal decomposition","760aaebe":"## Auto regression method (AR)","2dcadac5":"# Initial setup","8da58a25":"### Histogram plot","a260d6d7":"## Stationarity vs non-stationary time series","11165726":"# Build and evaluate time series forecast","651fbe46":"### Plot train, test and forecast","537cf42a":"### Calculate RMSE and MAPE","2cab30d5":"### Differencing to remove trend","563dd4a8":"### Kwiatkowski-Phillips-Schmidt-Shin (KPSS) test","f168e83c":"## Import time series data: Unemployment","0689c4fa":"### Augmented Dickey-Fuller (ADF) test","9df649c3":"## Autocorrelation function (ACF)","3d408e0f":"### Recover original time series","f51a2e16":"### Box plot and interquartile range","9e442d1c":"## Split time series data into training and test set","262417dc":"## Partial autocorrelation function (PACF)","2754f6c8":"### Kwiatkowski-Phillips-Schmidt-Shin (KPSS) test","253058fd":"### Multiplicative seasonal decomposition","39034254":"# Auto Regressive methods","a8eb7954":"### Augmented Dickey-Fuller (ADF) test","be96af23":"### Box Cox transformation to make variance constant","ef33ae9b":"## Time series Decomposition"}}