{"cell_type":{"b64f4275":"code","39d9a5cb":"code","21683ed6":"code","83e07f6d":"code","5b2dd4bd":"code","462af26e":"code","44ae66ec":"code","20367fcb":"code","2bea0843":"code","ffee4244":"code","0745f744":"code","b6cbffd8":"code","bf787adc":"code","17f80588":"code","b79866d4":"code","da423ed2":"code","c796ef41":"code","536cb952":"code","9cbb918b":"code","3671385d":"code","8c2dfd7f":"code","45d16a52":"code","42810d62":"code","0ae38fcb":"code","d243f0cf":"code","d2c21b5b":"code","e02af2b9":"code","a9c4e894":"code","49382c97":"code","6a71f4c1":"code","40a6a4fb":"code","53741b17":"code","d933f13e":"code","aa7e13aa":"code","a977a448":"code","8458deb2":"code","f747d848":"markdown","d444b1b4":"markdown","5d5e1864":"markdown","74d95a01":"markdown","33759f7e":"markdown","8c7e6b1f":"markdown","7e0e21e9":"markdown","0897e87b":"markdown","2eb2bece":"markdown","67c62827":"markdown","999297f4":"markdown","5ed081a0":"markdown","a4ad27c0":"markdown","702e7b7e":"markdown","a7c7f408":"markdown","7be7831f":"markdown","70c3cbb9":"markdown","a65add02":"markdown","c031652b":"markdown","225d98fc":"markdown","65424890":"markdown","e60415c2":"markdown","d74846d8":"markdown"},"source":{"b64f4275":"import os\nprint(os.listdir(\"..\/input\"))","39d9a5cb":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nsns.set()\nimport matplotlib.pyplot as plt\nimport datetime as dt\n\nimport warnings\nwarnings.filterwarnings('ignore')","21683ed6":"merchants = pd.read_csv('..\/input\/merchants.csv')\nhistorical_transactions = pd.read_csv('..\/input\/historical_transactions.csv')\nnew_merchant_transactions = pd.read_csv('..\/input\/new_merchant_transactions.csv')\ntrain = pd.read_csv('..\/input\/train.csv', parse_dates = ['first_active_month'])\ntest = pd.read_csv('..\/input\/test.csv', parse_dates = ['first_active_month'])","83e07f6d":"print(\"Historical_transactions   :\", historical_transactions.shape)\nprint(\"Merchants                 :\", merchants.shape)\nprint(\"New_merchant_transactions :\", new_merchant_transactions.shape)\nprint(\"Train set                 :\", train.shape)\nprint(\"Test set                  :\", test.shape)","5b2dd4bd":"print(pd.read_excel('..\/input\/Data_Dictionary.xlsx', sheet_name = 'train'))","462af26e":"print('target:', pd.read_excel('..\/input\/Data_Dictionary.xlsx', sheet_name = 'train')['Unnamed: 1'][7])","44ae66ec":"train.head(2)","20367fcb":"train.describe()","2bea0843":"plt.figure(figsize = (10,6))\nsns.distplot(train.target)\nplt.show()","ffee4244":"plt.figure(figsize = (10,5))\nplt.scatter(train.index, np.sort(train.target.values))\nplt.xlabel('Index')\nplt.ylabel('Loyalty Score')\nplt.show()","0745f744":"print((train.target == -33.21928095).sum())\nprint((train.target == -33.21928095).sum()*100 \/ len(train.target))","b6cbffd8":"plt.figure(figsize = (14,6))\nsns.boxplot('feature_1', 'target', data = train)\nplt.title('Feature_1 distribution (loyalty score)')\nplt.show()\n\nplt.figure(figsize = (12,6))\nsns.boxplot('feature_2', 'target', data = train)\nplt.title('Feature_2 distribution (loyalty score)')\nplt.show()\n\nplt.figure(figsize = (8,4))\nsns.boxplot('feature_3', 'target', data = train)\nplt.title('Feature_3 distribution (loyalty score)')\nplt.show()","bf787adc":"train['new_target'] = 2**train.target","17f80588":"train.new_target.describe()","b79866d4":"plt.figure(figsize = (10,6))\nsns.distplot(train.new_target)\nplt.show()","da423ed2":"train.sort_values(by = 'new_target').head(5)","c796ef41":"train.sort_values(by = 'new_target').tail(5)","536cb952":"plt.figure(figsize = (14,6))\nsns.boxplot('feature_1', 'new_target', data = train)\nplt.title('Feature_1 distribution (loyalty score)')\nplt.show()\n\nplt.figure(figsize = (12,6))\nsns.boxplot('feature_2', 'new_target', data = train)\nplt.title('Feature_2 distribution (loyalty score)')\nplt.show()\n\nplt.figure(figsize = (8,4))\nsns.boxplot('feature_3', 'new_target', data = train)\nplt.title('Feature_3 distribution (loyalty score)')\nplt.show()","9cbb918b":"train['year'] = train['first_active_month'].dt.year","3671385d":"plt.figure(figsize = (8,6))\nplt.scatter(train.year, train.new_target, alpha = 0.5)\nplt.xlabel('First Active Year')\nplt.ylabel('Loyalty Score (new_target)')\nplt.title('Loyalty Score vs First Active Year')\nplt.show()","8c2dfd7f":"month_count = train.first_active_month.dt.date.value_counts().sort_index()\n\nplt.figure(figsize = (14,6))\nsns.barplot(month_count.index, month_count.values, color = 'r')\nplt.xticks(rotation = 'vertical')\nplt.title('Train data distribution based on first active month')\nplt.show()\n\nplt.figure(figsize = (14,6))\nmonth_count = test.first_active_month.dt.date.value_counts().sort_index()\nsns.barplot(month_count.index, month_count.values, color = 'g')\nplt.xticks(rotation = 'vertical')\nplt.title('Test data distribution based on first active month')\nplt.show()","45d16a52":"print(pd.read_excel('..\/input\/Data_Dictionary.xlsx', sheet_name = 'new_merchant_period'))","42810d62":"new_merchant_transactions.head()","0ae38fcb":"hist_new = pd.concat((historical_transactions, new_merchant_transactions), ignore_index = True)","d243f0cf":"hist_new.shape","d2c21b5b":"hist_new.purchase_amount.describe()","e02af2b9":"hist_new['new_amount'] = hist_new.purchase_amount - hist_new.purchase_amount.min()","a9c4e894":"hist_new.new_amount.describe()","49382c97":"np.sort(hist_new.new_amount.unique())[:10]","6a71f4c1":"np.diff(np.sort(hist_new.new_amount.unique()))","40a6a4fb":"hist_new_sorted = hist_new.groupby('new_amount').new_amount.first().to_frame().reset_index(drop=True)\nhist_new_sorted['delta'] = hist_new_sorted.new_amount.diff()\nhist_new_sorted[hist_new_sorted.delta >= 2e-5].head()","53741b17":"hist_new_sorted[1:52623].delta.mean()","d933f13e":"hist_new['new_amount'] = np.round(hist_new['new_amount'] \/ (100 * hist_new_sorted[1:52623].delta.mean()), 2)","aa7e13aa":"hist_new.new_amount.value_counts().head()","a977a448":"historical_transactions = hist_new[:29112361]\nnew_merchant_transactions = hist_new[29112361:]","8458deb2":"historical_transactions.shape, new_merchant_transactions.shape","f747d848":"There looks a pattern here","d444b1b4":"Interestingly our target variable has max value of -33.xx and max of 17.xx. But they are not distributed normally. 25th to 72th quartile value lies in (+-)0.xx values. Lets look at them visually.","5d5e1864":"Thank you for reading. If you liked my kernel or was helpful to you kindly upvote it. Thanks!","74d95a01":"**purchase_amount**\n\nPurchase amount should be positive but here it is not. Again, some sort of calculation is required to extract original purchase amount.\n\nAgain the kernel by [@raddar](http:\/\/kaggle.com\/raddar) sir gave some magic numbers for transforming the purchase amount. But, I was not sure how this number came. Thanks to [@CPMP](http:\/\/kaggle.com\/cpmpml) sir. His kernel helped to find pattern from the data and transform them using codes. Link to the kernel: https:\/\/www.kaggle.com\/cpmpml\/raddar-magic-explained-a-bit\/\n\n","33759f7e":"### Explore train dataset","8c7e6b1f":"So, loyalty score are high for the 2016 and 2017 first active users. \n\n Lets look if the distribution of train and test dataset based on first_active_month is same or different.","7e0e21e9":"Let do this steps in a proper way","0897e87b":"Import required libraries","2eb2bece":"After search I found this great kernel by @raddar Sir. Link to kernel : https:\/\/www.kaggle.com\/raddar\/towards-de-anonymizing-the-data-some-insights. Target value was revealed as 10^(target(log10(2))) which is simply 2**target.","67c62827":"Looks like Feature_x variables are not very good or helpful estimators for target variable. Here arises another question why not dig more our target variable. Loyalty score with negative value. There is definately some calculations behind the true loyalty score and to be it seems like an exponential or logarithmic function behind this due to -33.xx.","999297f4":"So our target variable is the loyalty score (numerical). Though it is not cleared how it is calculated. We will look into it further.","5ed081a0":"Yes, the distribution is same enough.","a4ad27c0":"We will first explore our train and test dataset and mainly the target variable.","702e7b7e":"Look at unique values we got after the new_amount","a7c7f408":"### Load the datasets.","7be7831f":"# References \n> https:\/\/www.kaggle.com\/raddar\/towards-de-anonymizing-the-data-some-insights\n\n> https:\/\/www.kaggle.com\/sudalairajkumar\/simple-exploration-notebook-elo\n\n> https:\/\/www.kaggle.com\/cpmpml\/raddar-magic-explained-a-bit\/","70c3cbb9":"### New Merchant Transactions & Historical Transactions","a65add02":"Results are not great but yes, difference can be seen between each category of each variable. Thus, now, Feature_x variable will help some how for prediction in the test set.\n\nNow, we are left with only one varible to explore i.e., first_active_month which gives us the customer first month of purchase.","c031652b":"1% of data. We will look into it further. Lets look at the other variables in the train data.\n\nWe will look if there is something which Feature_x variables can find for the target variable.","225d98fc":"Looking at graph, I got some confused. But its clear now. Only 0.02% card_ids have loyalty score of 0.xx and thats expected (I expected even more than this).\n\nSo, target variable is set. Remeber we will have to reverse the calculation after the prediction in the test set.\n\nLets again plot Feature_x distribution with the new_target variable","65424890":"Make purchase amount non-negative.","e60415c2":"So, the distribution seems normal. Though it contains an unexpected value of -33.xx. Lets see how much.","d74846d8":"new_merchant_tranactions and historical transactions have same variables. Thus, I will only explore and work on new_merchant_transactions and will update the manipulation in the historical transactions."}}