{"cell_type":{"42d3a2d6":"code","46456241":"code","f85b28bd":"code","2b0d5dd0":"code","9c43b088":"code","eed53d69":"code","31e247b7":"code","24d3751a":"code","e1defdda":"code","f09a6e91":"markdown","e91487df":"markdown","ee186cb8":"markdown","39d83c9d":"markdown","5dc4ae6d":"markdown","022ec211":"markdown","6904006f":"markdown","488ed28a":"markdown"},"source":{"42d3a2d6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # data visualization\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","46456241":"data = pd.read_csv(\"\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv\")\ndata.head()","f85b28bd":"data.drop([\"id\",\"Unnamed: 32\"],axis=1,inplace=True)\ndata","2b0d5dd0":"data.diagnosis = [1 if each=='M' else 0 for each in data.diagnosis]","9c43b088":"y = data.diagnosis.values\nx = data.drop([\"diagnosis\"],axis=1)\nx,y","eed53d69":"from sklearn.model_selection import train_test_split\n\nx_train , x_test , y_train, y_test=train_test_split(x,y,test_size=0.2,random_state=1)\nx_train","31e247b7":"from tensorflow import keras\nfrom keras.models import Sequential \nfrom keras.layers import Dense\nfrom sklearn.model_selection import cross_val_score\n\nfrom keras.wrappers.scikit_learn import KerasClassifier\n\ndef build_classifier():\n    classifier = Sequential()\n    classifier.add(Dense(units = 32, kernel_initializer = 'uniform', activation = 'relu', input_dim = x_train.shape[1]))\n    classifier.add(Dense(units = 32, kernel_initializer = 'uniform', activation = 'relu'))\n    classifier.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))\n    classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\n    return classifier","24d3751a":"classifier = KerasClassifier(build_fn = build_classifier, epochs = 300)\nacc = cross_val_score(estimator = classifier, X = x_train, y = y_train, cv = 3)\nmean = acc.mean()","e1defdda":"print(\"Accuracy mean: \"+ str(mean))","f09a6e91":"In this kernel i will use a 2 Layer Neural Network to classify whether it is cancer or not.In addition , i will use keras for coding my neural network.","e91487df":"First of all i will import my data , and take a look at it.","ee186cb8":"Time to split our data to x and y , test and train.","39d83c9d":"My data preprocessing is done.Now i will start writing my 2 layer network , and i will use relu activation function for hidden layers.Then i will use sigmoid for output layer.\nMy optimizer will be adam, and my loss function will be binary crossentropy because my data has only 2 labels zeroes and ones.\nHidden layers will have 32 nods , because i have two labels , i do not need so much complexity.","5dc4ae6d":"Now i will encode my labels because i need mathematical data to implement my neural network model.","022ec211":"**Time to train our model !**","6904006f":"As you can see my accuracy is %94 which is pretty good for a simple model.","488ed28a":"As you can see there are some not usefull features like id and unnamed :32.I need to delete them and , i need to label my diagnosis."}}