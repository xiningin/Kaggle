{"cell_type":{"15e12f7b":"code","e8c237a1":"code","62b66d96":"code","0d575801":"code","53eb79b9":"code","e53325d4":"code","16f5e700":"code","5ec59e41":"code","7af8b630":"code","76207e82":"code","2f9397c6":"code","0fb24eee":"code","41d8ff5a":"code","fe560069":"code","573ae3de":"code","8e0c7b85":"code","b3a7951d":"code","3e0db574":"code","edae1282":"code","c38b1023":"code","9e2d9f9c":"code","c55a90fa":"code","5e40916b":"code","d0ba411f":"code","14d1810a":"code","b56033ac":"markdown"},"source":{"15e12f7b":"import pandas as pd\nimport numpy as np","e8c237a1":"from google.colab import drive\ndrive.mount(\"\/content\/drive\/\")","62b66d96":"#Dataset used: https:\/\/www.kaggle.com\/kmader\/skin-cancer-mnist-ham10000\npath='\/content\/drive\/My Drive\/Colab Notebooks\/Skin Cancer\/hmnist_28_28_RGB.csv'\n","0d575801":"df=pd.read_csv(path)","53eb79b9":"df.tail()","e53325d4":"#reference https:\/\/github.com\/rohanmandrekar\/Cifar-10-\/blob\/master\/best_attempt%28model7%29.ipynb\n\nfractions=np.array([0.8,0.2])\ndf=df.sample(frac=1)\ntrain_set, test_set = np.array_split(\n    df, (fractions[:-1].cumsum() * len(df)).astype(int))","16f5e700":"print(len(train_set))","5ec59e41":"print(len(test_set))","7af8b630":"df.label.unique()","76207e82":"# reference: https:\/\/www.kaggle.com\/kmader\/skin-cancer-mnist-ham10000\/discussion\/183083\nclasses={0:('akiec', 'actinic keratoses and intraepithelial carcinomae'),\n         1:('bcc' , 'basal cell carcinoma'),\n         2:('bkl', 'benign keratosis-like lesions'),\n         3:('df', 'dermatofibroma'),\n         4:('nv', ' melanocytic nevi'),\n         5:('vasc', ' pyogenic granulomas and hemorrhage'),\n         6:('mel', 'melanoma'),}","2f9397c6":"y_train=train_set['label']\nx_train=train_set.drop(columns=['label'])\ny_test=test_set['label']\nx_test=test_set.drop(columns=['label'])\n\ncolumns=list(x_train)","0fb24eee":"import torch\ndevice = torch.device(\"cuda:0\" if torch.cuda.is_available() else \"cpu\")\nprint(device)","41d8ff5a":"import seaborn as sns\n\nsns.countplot(train_set['label'])","fe560069":"from imblearn.over_sampling import RandomOverSampler \noversample = RandomOverSampler()\nx_train,y_train  = oversample.fit_resample(x_train,y_train)","573ae3de":"sns.countplot(y_train)","8e0c7b85":"import matplotlib.pyplot as plt\nimport random\nnum=random.randint(0,8000)\nx_train=np.array(x_train, dtype=np.uint8).reshape(-1,28,28,3)\n\nplt.imshow(x_train[num].reshape(28,28,3))\nplt.title(\"Random image from training data\")\nplt.show()\nnum=random.randint(0,8000)\nplt.imshow(x_train[num].reshape(28,28,3))\nplt.title(\"Random image from training data\")\nplt.show()\n\nnum=random.randint(0,8000)\nplt.imshow(x_train[num].reshape(28,28,3))\nplt.title(\"Random image from training data\")\nplt.show()","b3a7951d":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, Flatten, Dense, MaxPool2D\nimport tensorflow as tf","3e0db574":"model = Sequential()\nmodel.add(Conv2D(16, kernel_size = (3,3), input_shape = (28, 28, 3), activation = 'relu', padding = 'same'))\nmodel.add(MaxPool2D(pool_size = (2,2)))\nmodel.add(tf.keras.layers.BatchNormalization())\nmodel.add(Conv2D(32, kernel_size = (3,3), activation = 'relu'))\nmodel.add(Conv2D(64, kernel_size = (3,3), activation = 'relu'))\nmodel.add(MaxPool2D(pool_size = (2,2)))\nmodel.add(tf.keras.layers.BatchNormalization())\nmodel.add(Conv2D(128, kernel_size = (3,3), activation = 'relu'))\nmodel.add(Conv2D(256, kernel_size = (3,3), activation = 'relu'))\nmodel.add(Flatten())\nmodel.add(tf.keras.layers.Dropout(0.2))\nmodel.add(Dense(256,activation='relu'))\nmodel.add(tf.keras.layers.BatchNormalization())\nmodel.add(tf.keras.layers.Dropout(0.2))\nmodel.add(Dense(128,activation='relu'))\nmodel.add(tf.keras.layers.BatchNormalization())\nmodel.add(Dense(64,activation='relu'))\nmodel.add(tf.keras.layers.BatchNormalization())\nmodel.add(tf.keras.layers.Dropout(0.2))\nmodel.add(Dense(32,activation='relu'))\nmodel.add(tf.keras.layers.BatchNormalization())\nmodel.add(Dense(7,activation='softmax'))\n\nmodel.summary()","edae1282":"#reference: https:\/\/www.kaggle.com\/dhruv1234\/ham10000-skin-disease-classification\ncallback = tf.keras.callbacks.ModelCheckpoint(filepath='\/content\/drive\/My Drive\/Colab Notebooks\/Skin Cancer\/best_model.h5',\n                                                  monitor='val_acc', mode='max',\n                                                 verbose=1, save_best_only=True)","c38b1023":"optimizer=tf.keras.optimizers.Adam(lr=0.001)\nmodel.compile(loss = 'sparse_categorical_crossentropy',\n             optimizer =optimizer,\n              metrics = ['accuracy'])\nhistory = model.fit(x_train,\n                    y_train,\n                    validation_split=0.2,\n                    batch_size = 128,\n                    epochs = 50,\n                    shuffle=True,\n                    callbacks=[callback])","9e2d9f9c":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'val'], loc='upper left')\nplt.show()\n","c55a90fa":"plt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'val'], loc='upper left')\nplt.show()","5e40916b":"model.load_weights('\/content\/drive\/My Drive\/Colab Notebooks\/Skin Cancer\/best_model.h5')","d0ba411f":"x_test=np.array(x_test).reshape(-1,28,28,3)\nloss, acc = model.evaluate(x_test, y_test, verbose=2)","14d1810a":"import PIL\nimage=PIL.Image.open('\/content\/drive\/My Drive\/Colab Notebooks\/Skin Cancer\/tester.jpg')\nimage=image.resize((28,28))\nimg=x_test[1]\nimg=np.array(image).reshape(-1,28,28,3)\nresult=model.predict(img)\nprint(result[0])\nresult=result.tolist()\nmax_prob=max(result[0])\nclass_ind=result[0].index(max_prob)\nprint(classes[class_ind])","b56033ac":"# Check outputs at https:\/\/github.com\/rohanmandrekar\/Skin-Cancer-Classification\/blob\/main\/Skin_Cancer_Detection.ipynb"}}