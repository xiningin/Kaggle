{"cell_type":{"b428af1d":"code","d7d78e1d":"code","56446b12":"code","379faa57":"code","6846b6d4":"code","219002aa":"code","44919b23":"code","9aeadf06":"code","9051496c":"code","4f653c24":"code","857caae2":"code","b428a442":"code","6bd2fa97":"code","257ed825":"markdown","fdd86a11":"markdown","fb4fa48e":"markdown","62329493":"markdown","4e5d7153":"markdown","a8d0dfd3":"markdown","33ffed88":"markdown","5e677952":"markdown","70385209":"markdown","b04a9a52":"markdown","b1b1cf77":"markdown","dcc7ae93":"markdown","505a79b5":"markdown","0f383443":"markdown","005a356c":"markdown"},"source":{"b428af1d":"a = ['1', '13', 'b1', 1.2, 22.1, 2.34]\n# slicing list\nprint(a[1:5])","d7d78e1d":"a = [1.32, 22.1, 2.34]\nb = ['1', '13b', 'aa1']\nc = [3, 40, 100]\n# combine list\nprint([a,c,b])","56446b12":"a = [\n    [5, 9, 8],\n    [0, 0, 6]\n    ]\n# subsetting list\nprint([a[1][0],a[1][2]])","379faa57":"p = [0, 5, 2, 10, 4, 9]\n# ordered list\nprint(sorted(p, reverse=False))\n# get max value of list\nprint(max(p))","6846b6d4":"a = [1, 3, 5]\nb = [5, 1, 3]\n# combine list\ncombine = b + a\nprint(combine)","219002aa":"a = [\n    [5, 9, 8],\n    [0, 0, 6]\n    ]\n# change list value\na[0][2] = 10\n# change list value\na[1][0] = 11\nprint(a)","44919b23":"areas = [\"hallway\", 11.25, \"kitchen\", 18.0,\n        \"chill zone\", 20.0, \"bedroom\", 10.75,\n         \"bathroom\", 10.50, \"poolhouse\", 24.5,\n         \"garage\", 15.45]\n\n# deleting element with value \"bathroom\" and 10.50 in one statement code\ndel(areas[8:10])\nprint(areas)","9aeadf06":"S = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n\nT = [x for x in S if x % 2 ==0]\n\nprint(T)","9051496c":"europe = {'spain':'madrid', 'france':'paris', 'germany':'berlin', 'norway':'oslo' }\n\n# print semua key yang ada di objek europe\nprint(europe.keys())\n# print nilai dari key franche\nprint(europe['france'])","4f653c24":"europe = {'spain':'madrid', 'france':'paris', 'germany':'berlin', 'norway':'oslo' }\n\n# adding key italy to object dictionary with value roma\neurope1 = {'italy':'roma'}\neurope.update(europe1)\n\n# check if italy already in object dictionary\n'italy' in europe","857caae2":"europe = {'spain':'madrid', 'france':'paris', 'germany':'bonn',\n          'norway':'oslo', 'italy':'rome', 'poland':'warsaw',\n          'australia':'vienna' }\n\n# update nilai ibukota german ke berlin\neurope['germany']= 'berlin'\n\n# remove australia dari europa\neurope.pop('australia')\n\nprint(europe)","b428a442":"country = { \n           'spain': { 'capital':'madrid', 'population':46.77 },\n           'france': { 'capital':'paris', 'population':66.03 },\n           'germany': { 'capital':'berlin', 'population':80.62 },\n           'norway': { 'capital':'oslo', 'population':5.084 } \n         }\n\n# berapa populasi dari kota german?\nprint(country['germany']['population'])\n\n# update data baru, yaitu negara indonesia dengan capital jakarta dan poulasi 250\ncountry1 = {'indonesia' : {'capital':'jakarta', 'population':250}}\ncountry.update(country1)\n\nprint(country)","6bd2fa97":"country = { \n           'spain': { 'capital':'madrid', 'population':46.77 },\n           'france': { 'capital':'paris', 'population':66.03 },\n           'germany': { 'capital':'berlin', 'population':80.62 },\n           'norway': { 'capital':'oslo', 'population':5.084 },\n           'indonesia' : {'capital':'jakarta', 'population':250}\n         }\n\nfor i,j in country.items() :\n    print('Ibukota '+ i +' adalah '+ j['capital'] )","257ed825":"**Accessing List**\n\n> In this case we have to print list value from the 2nd list until 5th on the list.","fdd86a11":"**Nested List**\n\n> In this case we have to create a queue\/nesting and combining from 3 different lists","fb4fa48e":"**Accessing datum from Nested List**\n\n> In this case we have to print list value that in 2nd row 1st column and 2nd row and 3rd column","62329493":"**List Operation**\n\n> In this case we have to combine from 2 different list to 1 list","4e5d7153":"**Adding key-value to new dictionary**\n\n> In this case we have to make a new key and value to a dictionary","a8d0dfd3":"**List Comperhension**\n\n> In this case we have to search which value from the list that is divided by 2 then assign the result to list in new variable 'T'","33ffed88":"# List","5e677952":"**Update and Remove Dictinary**\n\n> In this case we have to do a change from list value and delete from list value","70385209":"# Dictionary","b04a9a52":"**List Manipulation**\n\n> In this case we have to change the list value from 1st row 3rd column and 2nd row 1st column","b1b1cf77":"**Accessing Dictionary**\n\n> In this case we have to print list values that in the dictionary key","dcc7ae93":"**Delete Element List**\n\n> In this case we have to delete data from list values","505a79b5":"**Loop Dictionary**\n\n> In this case we have to make looping from list dictionary","0f383443":"**Built in Function List**\n\n> In this case we have to make list queued and print the max valuea from the list","005a356c":"**Nested Dictionary**\n\n> In this case we have to do process manipulation in nested dictionary"}}