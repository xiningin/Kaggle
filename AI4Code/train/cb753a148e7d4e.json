{"cell_type":{"fdfd640d":"code","946951f2":"code","b2c53f77":"code","0d60f9cb":"code","086d30bc":"code","b3f383cd":"code","29681522":"code","f248aa27":"code","23ca93d2":"code","1bb25acd":"code","cd62412f":"markdown","fd50dfc0":"markdown","ab5f9d4b":"markdown","543c703f":"markdown"},"source":{"fdfd640d":"import os\nimport numpy as np\nimport pandas as pd\nfrom tqdm import tqdm","946951f2":"# Read the submisison file\nsub_df = pd.read_csv('\/kaggle\/input\/siim-covid19-detection\/sample_submission.csv')\nprint(len(sub_df))\nsub_df","b2c53f77":"study_df = sub_df.loc[sub_df.id.str.contains('_study')]\nlen(study_df)","0d60f9cb":"image_df = sub_df.loc[sub_df.id.str.contains('_image')]\nlen(image_df)","086d30bc":"#Function changed from original\ndef prepare_test_images():\n    image_id = []\n\n    for dirname, _, filenames in tqdm(os.walk(f'..\/input\/siim-covid19-detection\/test')):\n        for file in filenames:\n            image_id.append(file.replace('.dcm', ''))\n\n    return image_id","b3f383cd":"image_ids = prepare_test_images()\nprint(f'Number of test images: {len(image_ids)}')","29681522":"meta_df = pd.DataFrame.from_dict({'image_id': image_ids})\n\n# Associate image-level id with study-level ids.\n# Note that a study-level might have more than one image-level ids.\nfor study_dir in os.listdir('..\/input\/siim-covid19-detection\/test'):\n    for series in os.listdir(f'..\/input\/siim-covid19-detection\/test\/{study_dir}'):\n        for image in os.listdir(f'..\/input\/siim-covid19-detection\/test\/{study_dir}\/{series}\/'):\n            image_id = image[:-4]\n            meta_df.loc[meta_df['image_id'] == image_id, 'study_id'] = study_dir\n\nmeta_df","f248aa27":"image_labels = []\n\nfor image_id, df in meta_df.groupby('image_id'):\n    image_labels.append(f'{image_id}_image')\n\nimage_pred = ['none 1 0 0 1 1']*len(image_labels)\nimage_df = pd.DataFrame.from_dict({'id': image_labels, 'PredictionString': image_pred})\nimage_df","23ca93d2":"study_labels = []\n\nfor study_id, df in meta_df.groupby('study_id'):\n    study_labels.append(f'{study_id}_study')\n\nstudy_pred = ['negative 1 0 0 1 1']*len(study_labels)\nstudy_df = pd.DataFrame.from_dict({'id': study_labels, 'PredictionString': study_pred})\nstudy_df","1bb25acd":"sub_df = pd.concat([study_df, image_df])\nsub_df.to_csv('submission.csv', index=False)\nsub_df","cd62412f":"# Prepare Image Level Test Images","fd50dfc0":"# Imports","ab5f9d4b":"# Load Submission ","543c703f":"## Original code from: https:\/\/www.kaggle.com\/ayuraj\/submission-covid19\/output\n\n**NOTES**\n1. Re-run of the code is done when submitting. Test folder is modified (hidden elements are added), therefore CAN\u00b4T submit csv file directly. \n2. Prediction must be done in Kaggle Notebook.\n3. sample_submission.csv is used to verify the code extracts the correct id's from test folder.\n4. This notebook sets all predicionts to \"negative 1 0 0 1 1\" in the study level and \"none 1 0 0 1 1\" in the case level.\n5. ONLY FOR SUBMISSION TESTING."}}