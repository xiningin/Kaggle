{"cell_type":{"c8a019af":"code","f735a27d":"code","7c075d2c":"code","30eaabb6":"code","0f283911":"code","0b4de020":"code","490c0501":"code","9f7ba7b3":"code","442d79ba":"code","3a1460ae":"code","7dff4778":"code","efe582e4":"code","32137240":"markdown"},"source":{"c8a019af":"import numpy as np\nimport matplotlib.pyplot as plt\n\nfrom keras.datasets import cifar10\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Flatten, Dropout","f735a27d":"#Loading dataset\n\n(trainX, trainY), (testX, testY) = cifar10.load_data()","7c075d2c":"#Analyzing shape of data\nprint('Train ', '\\nData :', trainX.shape, '\\nLabel :', trainY.shape)\n\nprint('\\nTest ', '\\nData :', testX.shape, '\\nLabel :', testY.shape)","30eaabb6":"#Visualizing image from training dataset\n\nimg = plt.imshow(trainX[1])","0f283911":"#One Hot Encoding Labels from Train and Test Dataset\nfrom keras.utils import to_categorical\n\ntrainY_one_hot = to_categorical(trainY)\ntestY_one_hot = to_categorical(testY)","0b4de020":"#Initializing MobileNet as Base Model for Transfer Learning\n\nfrom keras.applications import MobileNet\n\nbase_model = MobileNet(include_top=False, weights='imagenet',\n            input_shape=(32,32,3), classes=trainY.shape[1])","490c0501":"#Adding layers to base model of MobileNet\n\nmodel = Sequential()\n\n#Creating base layer of VGG19\nmodel.add(base_model)\nmodel.add(Dropout(0.5))\nmodel.add(Flatten())\n\n#Adding the Dense Layers and Dropout\nmodel.add(Dense(512,activation=('relu'))) \n\nmodel.add(Dense(256,activation=('relu'))) \n\nmodel.add(Dropout(.3))\n\nmodel.add(Dense(128,activation=('relu')))\n\nmodel.add(Dropout(.2))\n\nmodel.add(Dense(10,activation=('softmax')))","9f7ba7b3":"#Visualizing Model Summary\nmodel.summary()","442d79ba":"#Compiling Model using SGD \n\nmodel.compile(loss = 'categorical_crossentropy', optimizer = 'adam',\n              metrics = ['accuracy'])","3a1460ae":"#Training Model\nhist = model.fit(trainX, trainY_one_hot, batch_size = 100, epochs = 20, \n                 validation_split = 0.1)","7dff4778":"#Testing accuracy of trained model\n\nmodel.evaluate(testX, testY_one_hot)[1]","efe582e4":"#Visualizing Model Accuracy\n\nplt.plot(hist.history['accuracy'])\nplt.plot(hist.history['val_accuracy'])\nplt.title('Model Accuracy')\nplt.xlabel('Epoch')\nplt.ylabel('Accuracy')\nplt.legend(['Train', 'Val'], loc = 'upper left')","32137240":"# Using Transfer Learning on Cifar10 Dataset - MobileNet with Keras\n\n* Cifar10 consists of 10 classes of images labeled - ['airplane', 'automobile', 'bird', 'cat', 'deer','dog', 'frog', 'horse', 'ship', 'truck']"}}