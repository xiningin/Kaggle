{"cell_type":{"e05ad9e0":"code","317045ee":"code","e9d0f437":"code","762ee82a":"code","6a96b482":"code","7a7024c0":"code","cd25b8eb":"code","75ecb98e":"code","9503b3f7":"code","b816b7db":"code","e354c1c0":"code","961390d4":"code","bda30914":"code","5d4ea293":"code","7b8f86bf":"code","8a9c0eab":"code","9f569f19":"code","2a57d3d1":"code","4ec911ce":"code","fce915af":"code","2837297c":"code","d383c7b2":"code","cff5a055":"code","d6022ff7":"code","e83767f8":"code","ce3b151d":"code","fd5c7085":"code","13b4c72f":"code","d476a1d0":"code","bf020827":"code","eab913a7":"code","a25fd3ba":"code","95b4351b":"code","df0630b6":"code","cd0fb12e":"code","6c1f2748":"code","8fda6e40":"markdown","aa8a5e2a":"markdown","4bea38c3":"markdown","30e74dae":"markdown","5ef4354e":"markdown","f22e938b":"markdown","32cb94ce":"markdown","5871c520":"markdown","8f3c56ec":"markdown","9d28b0e4":"markdown","a34b50d6":"markdown","06a579f8":"markdown"},"source":{"e05ad9e0":"import pandas as pd\nimport plotly\nimport plotly.graph_objs as go\nplotly.offline.init_notebook_mode(connected=True)\nimport warnings\nwarnings.filterwarnings('ignore')","317045ee":"import os\nprint(os.listdir(\"..\/input\"))","e9d0f437":"events = pd.read_csv('..\/input\/athlete_events.csv')\nevents.head(2)","762ee82a":"noc = pd.read_csv('..\/input\/noc_regions.csv')\nnoc.head(2)","6a96b482":"data = pd.merge(events, noc, on='NOC', how='left')\ndata.head(1)","7a7024c0":"region = data['region'].value_counts()\nlen(region)","cd25b8eb":"region = region.sort_values()[::-1][:50]","75ecb98e":"plotly.offline.iplot({\n    \"data\": [go.Bar(x=region.values, y=region.index, orientation = 'h')],\n    \"layout\": go.Layout(title=\"Number of participants per country\"\n                           ,width=1000,height=1000,)\n})","9503b3f7":"season = data['Season'].value_counts()","b816b7db":"plotly.offline.iplot({\n    \"data\": [go.Pie(labels=season.index, values=season.values)],\n})","e354c1c0":"sport = data['Sport'].value_counts()\nsport = sport.sort_values()[::-1][:40]\nplotly.offline.iplot({\n    \"data\": [go.Bar(x=sport.values, y=sport.index, orientation = 'h', marker = dict(color = 'rgba(222,45,38,0.8)'))],\n    \"layout\": go.Layout(title=\"Sports with most events\"\n                           ,width=700,height=800,margin=go.Margin(\n        l=300,\n        r=100,\n        b=100,\n        t=100,\n        pad=4\n    ),)\n})","961390d4":"India = data[(data['region']=='India')]\nmedals = India['Medal'].value_counts()\nmedals","bda30914":"plotly.offline.iplot({\n    \"data\": [go.Pie(labels=medals.index, values=medals.values)],\n    \n})","5d4ea293":"India['Gold'] = India['Medal'].map({'Gold': 1, 'Bronze': 0,'Silver':0})\nIndia['Silver'] = India['Medal'].map({'Gold': 0, 'Bronze': 0,'Silver':1})\nIndia['Bronze'] = India['Medal'].map({'Gold': 0, 'Bronze': 1,'Silver':0})\ntotal_medals =India.groupby(['Year']).sum()","7b8f86bf":"total_medals= total_medals.fillna(0)\ntrace0 = go.Scatter(\n    x = total_medals.index,\n    y = total_medals['Gold'],\n    mode = 'lines',\n    name = 'GOLD'\n)\ntrace1 = go.Scatter(\n    x = total_medals.index,\n    y = total_medals['Silver'],\n    mode = 'lines',\n    name = 'SILVER'\n)\ntrace2 = go.Scatter(\n    x = total_medals.index,\n    y = total_medals['Bronze'],\n    mode = 'lines',\n    name = 'BRONZE'\n)\n\ndata = [trace0, trace1, trace2]\n\nplotly.offline.iplot({\n    \"data\": data\n})","8a9c0eab":"data = pd.merge(events, noc, on='NOC', how='left')\nUSA = data[(data['region']=='USA')]\nmedals = USA['Medal'].value_counts()\nprint(medals)\nUSA['Gold'] = USA['Medal'].map({'Gold': 1, 'Bronze': 0,'Silver':0})\nUSA['Silver'] = USA['Medal'].map({'Gold': 0, 'Bronze': 0,'Silver':1})\nUSA['Bronze'] = USA['Medal'].map({'Gold': 0, 'Bronze': 1,'Silver':0})\ntotal_medals =USA.groupby(['Year']).sum()","9f569f19":"total_medals= total_medals.fillna(0)\ntrace0 = go.Scatter(\n    x = total_medals.index,\n    y = total_medals['Gold'],\n    mode = 'lines',\n    name = 'GOLD'\n)\ntrace1 = go.Scatter(\n    x = total_medals.index,\n    y = total_medals['Silver'],\n    mode = 'lines',\n    name = 'SILVER'\n)\ntrace2 = go.Scatter(\n    x = total_medals.index,\n    y = total_medals['Bronze'],\n    mode = 'lines',\n    name = 'BRONZE'\n)\n\ndata = [trace0, trace1, trace2]\n\nplotly.offline.iplot({\n    \"data\": data\n})","2a57d3d1":"data = pd.merge(events, noc, on='NOC', how='left')\nmean = data.groupby('region').mean()\nsort = mean.sort_values('Height')[::-1]","4ec911ce":"sort = sort.head(50)","fce915af":"trace1 = go.Bar(\n    x= sort.index,\n    y=sort['Weight'],\n    name='Average Weight'\n)\ntrace2 = go.Bar(\n    x= sort.index,\n    y= sort['Height'],\n    name='Average Height'\n)\n\ndata = [trace1, trace2]\nlayout = go.Layout(\n    barmode='stack'\n)\n\n\nplotly.offline.iplot({\n    \"data\": data\n})","2837297c":"data = pd.merge(events, noc, on='NOC', how='left')\nmean = data.groupby('region').mean()\nsort = mean.sort_values('Height')[::-1]\nsort.tail(1)","d383c7b2":"sort.sort_values('Weight').head(1)","cff5a055":"sort.sort_values('Weight').tail(1)","d6022ff7":"sort.sort_values('Age')['Age'].mean()","e83767f8":"data.head(1)","ce3b151d":"data['region'] = data['region'].fillna(data['Team'])\ndata['Medal'] = data['Medal'].fillna(0)\ndata['Medal'] = data['Medal'].map({'Gold': 1, 'Bronze': 1,'Silver':1})","fd5c7085":"almedal = data.groupby('region').sum()\nmedal =almedal[(almedal['Medal'] != 0)]\nnomedals = almedal[(almedal['Medal'] == 0)].index","13b4c72f":"medal['COUNTRY'] = medal.index\nmedal['Medal']=medal['Medal'].map(int)","d476a1d0":"df = pd.read_csv('https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/2014_world_gdp_with_codes.csv')\nd = pd.merge(medal,df, on='COUNTRY', how='left')\nd.head(1)","bf020827":"d[(d['CODE'].isnull())]","eab913a7":"d['CODE'] =  d['CODE'].fillna(d['COUNTRY'])","a25fd3ba":"d = d.replace('Bahamas', 'BHM')\nd = d.replace('Ivory Coast', 'CIV')\nd = d.replace('North Korea', 'PRK')\nd = d.replace('South Korea', 'KOR')\nd = d.replace('Trinidad', 'BRB')\nd = d.replace('UK', 'GBR')\nd = d.replace('Virgin Islands, US', 'VGB')","95b4351b":"import plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode,iplot\ninit_notebook_mode(connected=True)\n\ndata = dict(type='choropleth',\nlocations = d['CODE'],z = d['Medal'],\ntext = d['COUNTRY'], colorbar = {'title':'No of medals'},\ncolorscale=[[0, 'rgb(224,255,255)'],\n            [0.01, 'rgb(166,206,227)'], [0.02, 'rgb(31,120,180)'],\n            [0.03, 'rgb(178,223,138)'], [0.05, 'rgb(51,160,44)'],\n            [0.10, 'rgb(251,154,153)'], [0.20, 'rgb(255,255,0)'],\n            [1, 'rgb(227,26,28)']],    \nreversescale = False)","df0630b6":"layout = dict(title='Medal count with respect to each country',\ngeo = dict(showframe = True, projection={'type':'mercator'}))\n","cd0fb12e":"choromap = go.Figure(data = [data], layout = layout)\niplot(choromap, validate=False)","6c1f2748":"print(\"#### COUNTRIES WITH NO OLYMPIC MEDALS ###\\n\")\nfor i in nomedals:\n    print(i)","8fda6e40":"### The Map does not Highlight the countries with no medals","aa8a5e2a":"### Lets combine the dataframes","4bea38c3":"### 205 countries have participated in the Olympics","30e74dae":"### The distribution is very lean, let's try USA","5ef4354e":"### Almost all athletes lie in the same height, weight range","f22e938b":"## India's Medal Count and distribution","32cb94ce":"- Nauru has the heaviest athletes\n- Maldives has the lightest athletes\n","5871c520":"## Average Age of Olympic atheltes is about 25","8f3c56ec":"# THANK YOU","9d28b0e4":"- Micronesia has the Shortest Atheletes\n- Croatia has the tallest athletes","a34b50d6":"### USA has sent the most number of athletes to the olympics followed by Germany ","06a579f8":"# Olympic Dataset"}}