{"cell_type":{"842736e4":"code","b6ad681c":"code","77e73e06":"code","411877b2":"code","901773ed":"code","71ac88be":"code","9851629b":"code","b1517fe1":"code","c42681f7":"code","c40aa20a":"markdown","7e6d4e1d":"markdown","4b2058cb":"markdown","9039f111":"markdown","5f038e3f":"markdown","51474aa8":"markdown","6f3fc77f":"markdown"},"source":{"842736e4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\n# import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n","b6ad681c":"# x = np.linspace(0, 10, 30)\n# y = np.sin(x)\n# plt.figure(figsize=(10,5))\n# plt.style.use('seaborn-whitegrid')\n# plt.xlabel(\"X-Axis\")\n# plt.ylabel(\"Y-Axis\")\n# plt.plot(x, y, 'o', color='red');\n","77e73e06":"\nx = [10,20,5,100,50,18,100,60,30] #BILLS = Independent variable\ny = [0, 0, 1,5,  5, 2, 10, 5, 0] #TIPS = Dependent variable\n\nplt.figure(figsize=(10,5))\nplt.grid(True)\nplt.xlabel(\"Food Bill\")\nplt.ylabel(\"Tips given\")\nplt.plot(x, y, 'o', color='blue');\nfor xi,yj in zip(x,y):\n    label = f\"({xi},{yj})\"\n\n    plt.annotate(label, # this is the text\n                 (xi,yj), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,10), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center","411877b2":"x2 = range(0,100,10)\ny2 = []\nm = 1 # y2-y1\/x2-x1\nb = 0\nfor xi in x2:\n    y_temp = (m*xi)+ b # y = mX + b\n    y2.append(y_temp)\n\nplt.figure(figsize=(10,5))\nplt.grid(True)\nplt.plot(x2, y2, '-*', color='red');\n\nfor xi,yj in zip(x2,y2):\n    label = f\"({xi},{yj})\"\n    plt.annotate(label, # this is the text\n                 (xi,yj), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,10), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center","901773ed":"\nplt.figure(figsize=(10,5))\nplt.grid(True)\nplt.plot(x, y, 'o', color='blue');\nfor xi,yj in zip(x,y):\n    label = f\"({xi},{yj})\"\n    plt.annotate(label, # this is the text\n                 (xi,yj), # this is the point to label\n                 textcoords=\"offset points\", # how to position the text\n                 xytext=(0,10), # distance from text to points (x,y)\n                 ha='center') # horizontal alignment can be left, right or center\n\nx_lr = []\ny_lr = []\nm = .1\nb = -1.5\nfor xi in x:\n    x_lr.append(xi)\n    output_y = (m*xi)+b\n    y_lr.append(output_y)\nplt.xlabel(\"Food Bill\")\nplt.ylabel(\"Tips given\")\nplt.plot(x_lr, y_lr, '-', color='red');","71ac88be":"d = [1, 0.5, 1, 8, 0.5, 1, -0.5, -1, -2]\nprint(d)","9851629b":"sd = []\nfor di in d:\n    sd.append(di * di)\nprint(sd)","b1517fe1":"sum = 0;\nfor sdi in sd:\n    sum += sdi\nprint(sum)","c42681f7":"import math\nrmse = math.sqrt(sum)\nprint(rmse)","c40aa20a":"# Import Libraries","7e6d4e1d":"# Variance\n- Stability of the model accross the data distribution\n- Lower the variance, stable is the model.","4b2058cb":"# Understanding linear function","9039f111":"\n# * Underfitting: High Bias\n\n# * Overfitting: High Variance\n\n# * Best Fit: Low variance, Low Bias","5f038e3f":"# Fitting line to the data : Prev Video: seen line as math formula","51474aa8":"# Visualizing sample data:","6f3fc77f":"# Bias:\n- Difference between model prediction & actual value.\n- Higher the bias, poor is the prediction"}}