{"cell_type":{"5d346c6a":"code","bd90a660":"code","d95a8117":"code","5b0fe286":"code","47f2671a":"code","e3fc299f":"code","259f1a34":"code","4b22832c":"code","8445be7d":"code","c4150791":"code","d63ff130":"code","27b08353":"code","2b2cf95c":"code","f735de39":"code","887c305d":"code","00476dd0":"code","b4e3e9d0":"code","5304d9a3":"code","99804480":"code","d9921f37":"code","f1bb56c7":"code","a58c868e":"code","c7594eff":"code","e5ad2d2b":"code","6e09f2eb":"code","714ca295":"code","8642acd9":"code","9de53246":"code","78f02c8e":"code","efc11319":"code","76cc72e7":"code","5240fe33":"code","b1293275":"code","cf2723cb":"code","8c2caa27":"code","5d01dce8":"code","9d082943":"code","ecc4d53d":"code","71055bd5":"code","5ba562f0":"code","2a17b1fa":"code","cb6c1766":"code","93cafb63":"code","7f7c6410":"code","5187f164":"code","04cb73be":"code","2b5d460b":"code","10cf79ab":"code","fb20dc35":"code","0bc06c67":"code","5d1c0d8f":"markdown","41fe0cce":"markdown"},"source":{"5d346c6a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bd90a660":"train_df = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')\ntrain_df.head()\ntest_df.head()","d95a8117":"print(train_df.shape)\n# print(train_df.columns)\nprint(train_df.info())\n# print(train_df['SalePrice'])\nprint(train_df.describe().T)","5b0fe286":"num_df = train_df.select_dtypes(['number'])\nnum_df","47f2671a":"test_num_df = test_df.select_dtypes(['number'])\ntest_num_df","e3fc299f":"sns.heatmap(num_df)","259f1a34":"train_df.columns","4b22832c":"train_df['SalePrice'].describe()","8445be7d":"plt.scatter(train_df['LotFrontage'],train_df['SalePrice'])","c4150791":"plt.scatter(train_df['OverallQual'],train_df['SalePrice'])\ntrain_df['OverallQual'].value_counts()","d63ff130":"labels = [5,6,7,8,4,9,3,10,2,1]\nplt.pie(train_df['OverallQual'].value_counts(),labels=labels)","27b08353":"train_df.describe()\ntrain_df.columns","2b2cf95c":"train_df['SaleCondition'].value_counts()","f735de39":"plt.scatter(train_df['SaleCondition'],train_df['SalePrice'])","887c305d":"train_df.info()","00476dd0":"null_columns = {}\nfor column in train_df:\n    x = train_df[column].isnull().sum() \/ len(train_df[column])\n    if x > 0:\n        null_columns[column] = round(x*100,3)\nnull_columns","b4e3e9d0":"sns.barplot(x='FireplaceQu',y='SalePrice',data=train_df)","5304d9a3":"# sns.barplot(x=\"LotFrontage\",y=\"SalePrice\",data=train_df)\ntrain_df['LotFrontage'].value_counts()","99804480":"extreme_null = []\nfor column in null_columns:\n    if null_columns[column] > 80:\n        extreme_null.append(column)\nextreme_null","d9921f37":"for column in extreme_null:\n    train_df.drop(column,inplace=True,axis=1)\n    test_df.drop(column,inplace=True,axis=1)\ntrain_df.info()","f1bb56c7":"null_columns","a58c868e":"for col in null_columns:\n    if col not in extreme_null and train_df.dtypes[col] != 'object':\n        train_df[col].fillna(train_df[col].mean())\n        test_df[col].fillna(test_df[col].mean())\ntrain_df.info()","c7594eff":"train_df.columns","e5ad2d2b":"null_object = []\nfor col in null_columns:\n    try:\n        if train_df.dtypes[col] == 'object':\n            null_object.append(col)\n    except:\n        pass\nnull_object","6e09f2eb":"for col in null_object:\n    train_df[col].fillna(train_df[col].mode()[0],inplace=True)\n    test_df[col].fillna(test_df[col].mode()[0],inplace=True)","714ca295":"test_df.info()","8642acd9":"train_df.info()","9de53246":"for col in train_df.columns:\n    if train_df.dtypes[col] == 'float64':\n        train_df[col].fillna(train_df[col].median(),inplace=True)\n        test_df[col].fillna(test_df[col].median(),inplace=True)","78f02c8e":"train_df.info()","efc11319":"data_type_dict = {}\nnon_num = []\nfor i in train_df:\n    data_type_dict[i] = train_df.dtypes[i]\n    if data_type_dict[i] == 'object':\n        non_num.append(i)\nnon_num","76cc72e7":"final_mapping = {}\nfor column in non_num:\n    distinct_values = train_df[column].unique()\n    temp = {}\n    for i,value in enumerate(distinct_values):\n        temp[value] = i\n    final_mapping[column] = temp\nfinal_mapping","5240fe33":"for column in non_num:\n    train_df[column] = train_df[column].map(final_mapping[column])\n    test_df[column] = test_df[column].map(final_mapping[column])\ntrain_df.head()","b1293275":"test_df.info()","cf2723cb":"train_df.info()","8c2caa27":"y_train = train_df['SalePrice']","5d01dce8":"y_train","9d082943":"train_df.drop('SalePrice',axis=1,inplace=True)","ecc4d53d":"train_df.describe()","71055bd5":"test_df.info()","5ba562f0":"n = []\nfor col in test_df:\n        n.append(col)\nfor col in n:\n    test_df[col].fillna(test_df[col].mode()[0],inplace=True)","2a17b1fa":"n","cb6c1766":"test_df.head()","93cafb63":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import accuracy_score","7f7c6410":"linear_regression = LinearRegression()\nlinear_regression.fit(train_df,y_train)","5187f164":"pred = linear_regression.predict(test_df)","04cb73be":"res_dict = {\n    'Id' : test_df['Id'],\n    'SalePrice' : pred\n}","2b5d460b":"res_dict","10cf79ab":"pred_df = pd.DataFrame(res_dict)","fb20dc35":"pred_df.head()","0bc06c67":"pred_df.to_csv('prices_pred.csv',index=False)","5d1c0d8f":"**Exploring the dataframe**","41fe0cce":"**Handling null values in object data type**"}}