{"cell_type":{"406ec983":"code","edf88cf9":"code","8511e983":"code","f5ccf526":"markdown","f52f8ae1":"markdown","e4aa3475":"markdown"},"source":{"406ec983":"import pandas as pd\nimport os\n\nfrom bokeh.models import (LinearInterpolator,\n                          CategoricalColorMapper,\n                          ColumnDataSource,\n                          HoverTool,\n                          NumeralTickFormatter)\n\nfrom bokeh.palettes import Spectral5\nfrom bokeh.io import output_notebook, show, push_notebook\nfrom bokeh.plotting import figure\n\nfrom ipywidgets import interact\nfrom IPython.display import IFrame\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        data = pd.read_csv(os.path.join(dirname, filename), sep='\\t', index_col = 'year')\n\noutput_notebook()","edf88cf9":"print(data.dtypes)\ndata.head()","8511e983":"\nsource = ColumnDataSource(data.loc[data.index.min()])\n\nPLOT_OPTS = dict(\n    height=400, width = 800, x_axis_type='log',\n    x_range = (100,100000), y_range = (0,100),\n    background_fill_color = 'black'\n)\n\n# Making Hover\nhover = HoverTool(tooltips = '@country', show_arrow = False)\n\n\nfig = figure(tools = [hover],\n             toolbar_location = 'above',\n             **PLOT_OPTS)\n\ndef update(year):\n    \"\"\" Build New Data Based On The Year, method that update the source object \"\"\"\n    try:\n        new_data =data.loc[year]\n        source.data = new_data\n    except KeyError:\n        new_data = dict()\n    fig.title.text = str(year)\n    push_notebook()\n\n\n# Interactive Widget\ninteract(update, year =(data.index.min(), data.index.max(),1))         \n\n# Mapping biggest population to size 50\n# Linearly interpolating all of the one in between\nsize_mapper = LinearInterpolator(\n    x = [data['pop'].min(), data['pop'].max()],\n    y = [10,60]\n)\n\ncolor_mapper = CategoricalColorMapper(\n    factors = data.continent.unique().tolist(),\n    palette = Spectral5,\n)\n\n\n\nfig.circle('gdpPercap', 'lifeExp',\n           size = {'field':'pop', 'transform':size_mapper},\n           color = {'field': 'continent', 'transform': color_mapper},\n           alpha = 0.6,\n           legend_field = 'continent',\n           source = source,\n           hover_color='white',\n           line_color=\"white\"\n           )\n\n# Move Legends off Canvas\nfig.legend.border_line_color = None\nfig.legend.location = (0,200)\nfig.right.append(fig.legend[0])\n\nfig.axis[0].formatter = NumeralTickFormatter(format = \"$0\")\nshow(fig, notebook_handle = True)","f5ccf526":"### Everything in *Bokeh* is a *ColumnDataSource* that accept two type of objects:\n   - Data Frame\n   - Python Dictionary\nIn this example *ColumnDataSource* will be fed the data yearly.\n\nAs not all countries have the same population, it makes sense to map the size of each point to the population size of the country. Therefore, we have used an interpolation method, which allowed us to map smaller (resp. larger) populations up to size 10 (resp. 60), and then linearly interpolated all countries in-between.\n\n# HoverTool\nHovertool can be very customized and have a very specific HTMl (for example showing country flag), however in this case we have restricted usage to only show the country when we hover over a data point.\n\n\n# Interactions\nUsing interactive widgets, we build a slider to update data, by slicing the data every year and updating the plot. In order to do this, we need to update the data in the *ColumnDataSource*, using the update() function. ","f52f8ae1":"__Data Colums__","e4aa3475":"## Inspired by statistics guru Hans Rosling who used an amazing new presentation tool in his [presentation](https:\/\/www.youtube.com\/watch?v=hVimVzgtD6w), an interactive visualization showing the evolution of life expectancy in each country on four continents based on GDPPercap. "}}