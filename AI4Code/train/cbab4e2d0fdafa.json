{"cell_type":{"a557f3c0":"code","10cd732b":"code","425d21d2":"code","b38933e8":"code","d1e0af16":"code","832078d8":"code","ec5ba5bc":"code","c4d7b141":"code","724db81e":"code","80b29c1b":"code","12abc9af":"code","acfacf77":"code","46def4b7":"code","a9724353":"code","ff168938":"code","e9435b30":"code","66ef9f02":"code","cc1a674b":"code","b7b8cfea":"code","301f4142":"code","670c41a0":"markdown","72537063":"markdown","98371421":"markdown","ef7f32b8":"markdown","334bce51":"markdown","9e853437":"markdown","eeabb1b5":"markdown"},"source":{"a557f3c0":"import seaborn as sns\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os\nfrom sklearn.metrics import mean_absolute_error as mae","10cd732b":"DIR_NAME = {'DeeperGCN':'..\/input\/openvaccine-deepergcn\/',\n           'RNN':'..\/input\/gru-lstm-with-feature-engineering-and-augmentation\/',\n           'AE_TF':'..\/input\/covid-ae-pretrain-gnn-attn-cnn\/',\n           'AE_PT':'..\/input\/openvaccine-pytorch-ae-pretrain\/'}","425d21d2":"test  = pd.read_json(\"\/kaggle\/input\/stanford-covid-vaccine\/test.json\",lines=True)\ntest_pri = test[test[\"seq_length\"] == 130]\ntest_pri.head()","b38933e8":"sub = pd.read_csv(\"\/kaggle\/input\/stanford-covid-vaccine\/sample_submission.csv\")\nid_pri = []\nfor i, uid in enumerate(test_pri['id']):\n    id_seqpos = [f'{uid}_{x}' for x in range(130)]\n    id_pri += id_seqpos\nid_pri = pd.DataFrame(id_pri, columns=['id_seqpos'])","d1e0af16":"sub.loc[sub['id_seqpos'].isin(id_pri['id_seqpos'])].head()","832078d8":"DIR_NAME[key[1]]","ec5ba5bc":"subs = [] \ntarget_cols = ['reactivity', 'deg_Mg_50C','deg_Mg_pH10']\n\nfor key in enumerate(DIR_NAME.keys()):\n    df = pd.read_csv(DIR_NAME[key[1]]+'submission.csv',\n                   index_col=False, \n                   usecols=['id_seqpos']+target_cols)\n    df.sort_values('id_seqpos',inplace=True, ascending=True)\n    df['model'] = key[1]\n    print(set(sub.id_seqpos) == set(df.id_seqpos))\n    subs.append(df)\n\n    ","c4d7b141":"for t in target_cols:\n    print(f'\\nMean abs difference in {t}:\\n')\n    for i in range(len(DIR_NAME)):\n        for j in range(i+1, len(DIR_NAME)):\n            df_i, df_j = subs[i], subs[j]\n            abs_diff= mae(subs[i][t], subs[j][t])\n            print(f'submission {i} and {j}: {abs_diff:.5f}')","724db81e":"N_VIS = 200\nRANGE_VIS = [[68, 75], [76, 83], [84, 91]]","80b29c1b":"def plot_pairplot(positions):\n    id_pri = []\n    for i, uid in enumerate(test_pri['id']):\n        id_seqpos = [f'{uid}_{x}' for x in range(positions[0], positions[1])]\n        id_pri += id_seqpos\n    id_pri = pd.DataFrame(id_pri, columns=['id_seqpos'])\n\n    subs_pri = []\n    for i in range(len(DIR_NAME)): \n        df_tmp = subs[i]\n        subs_pri.append(df_tmp.loc[df_tmp['id_seqpos'].isin(id_pri['id_seqpos'])])\n        \n    idx = np.random.randint(0,len(subs_pri[0]), N_VIS)\n    subs_vis = []\n    df_vis = pd.DataFrame()\n    for i in range(len(DIR_NAME)):\n        df_vis = subs_pri[i].iloc[idx].copy()\n        df_vis.loc[:,target_cols] = df_vis[target_cols].values\n        subs_vis.append(df_vis)\n    df_vis = pd.concat(subs_vis)\n    \n    sns.set_style(style=\"ticks\")\n    sns.pairplot(df_vis, hue=\"model\");\n    \ndef plot_lineplot(positions):\n    id_pri = []\n    for i, uid in enumerate(test_pri['id']):\n        id_seqpos = [f'{uid}_{x}' for x in range(positions[0], positions[1])]\n        id_pri += id_seqpos\n    id_pri = pd.DataFrame(id_pri, columns=['id_seqpos'])\n\n    subs_pri = []\n    for i in range(len(DIR_NAME)): \n        df_tmp = subs[i]\n        subs_pri.append(df_tmp.loc[df_tmp['id_seqpos'].isin(id_pri['id_seqpos'])])\n        \n    idx = np.random.randint(0,len(subs_pri[0]), N_VIS)\n    subs_vis = []\n    df_vis = pd.DataFrame()\n    for i in range(len(DIR_NAME)):\n        df_vis = subs_pri[i].iloc[idx].copy()\n        df_vis.loc[:,target_cols] = df_vis[target_cols].values\n        subs_vis.append(df_vis)\n    df_vis = pd.concat(subs_vis)\n\n    fig, axes = plt.subplots(3,1,figsize=(10, 15))\n    \n    for i, col in enumerate(target_cols):\n        g = sns.lineplot(data=df_vis, x=\"id_seqpos\", y=col, hue='model', ax=axes[i])\n        g.set(xticklabels=[]) ","12abc9af":"plot_pairplot(RANGE_VIS[0])","acfacf77":"plot_pairplot(RANGE_VIS[1])","46def4b7":"plot_pairplot(RANGE_VIS[2])","a9724353":"plot_lineplot(RANGE_VIS[0])","ff168938":"plot_lineplot(RANGE_VIS[1])","e9435b30":"plot_lineplot(RANGE_VIS[2])","66ef9f02":"def plot_rna_preds(seq_ids=None, n_sample=1, positions=(68,91)):\n    if seq_ids is None:\n        ids = test_pri['id'].sample(n=n_sample)\n    else:\n        ids= seq_ids\n    id_pri = []\n    for i, uid in enumerate(ids):\n        id_seqpos = [f'{uid}_{x}' for x in range(positions[0],positions[1])]\n        id_pri += id_seqpos\n    id_pri = pd.DataFrame(id_pri, columns=['id_seqpos'])\n    subs_pri = []\n    for i in range(len(DIR_NAME)): \n        df_tmp = subs[i]\n        subs_pri.append(df_tmp.loc[df_tmp['id_seqpos'].isin(id_pri['id_seqpos'])])\n        \n    subs_vis = []\n    df_vis = pd.DataFrame()\n    for i in range(len(DIR_NAME)):\n        df_tmp = subs_pri[i]\n        df_vis = df_tmp.loc[df_tmp['id_seqpos'].isin(id_pri['id_seqpos'])].copy()\n        df_vis.loc[:,target_cols] = df_vis[target_cols].values\n        subs_vis.append(df_vis)\n    df_vis = pd.concat(subs_vis)\n    \n    fig, axes = plt.subplots(3*n_sample,1,figsize=(10, 15*n_sample))\n    for j, id_seq in enumerate(ids):\n        for i, col in enumerate(target_cols):\n            g = sns.lineplot(data=df_vis, x=\"id_seqpos\", y=col, hue='model', ax=axes[i+j*3])\n            g.set(xticklabels=[]) \n            g.set_title(f'{id_seq}')","cc1a674b":"plot_rna_preds(seq_ids=['id_9085aafc1'])","b7b8cfea":"plot_rna_preds(seq_ids=['id_4cc792927'])","301f4142":"plot_rna_preds(seq_ids=['id_2dc15cef2'])","670c41a0":"## Summary\nIn this notebook, we visualize and analyze the difference of some best scored public kernels' stats on private set.","72537063":"## Computing MAE for different subs\nThe original computation computation is wrong, the submissions have different `seqpos_id`. Thanks to Marcello Susanto pointed out.","98371421":"### This difference is quite huge considering the gold and nothing is less than 0.03 as of right now on public","ef7f32b8":"## Read a bunch of high scored public kernels","334bce51":"## Randomly choosing 200 predictions for pairplot between different positions after 68-th base","9e853437":"## Getting private's id's of sequence + position","eeabb1b5":"## Randomly choose an mRNA in private set"}}