{"cell_type":{"de81883b":"code","02c1d5a5":"code","c586e014":"code","ba0c739d":"code","616d8e5d":"code","fb1a8b9c":"code","731c26b4":"code","836370a3":"code","3c3158fd":"code","893188af":"code","bea9a21e":"code","a8368482":"code","4a1fd885":"code","e041ce1a":"code","6fff07ee":"code","b6d565f7":"code","86623188":"code","fc573f55":"code","0e48902b":"code","714eae2f":"code","5d40c780":"code","7ba2e48b":"code","a7493452":"code","90512c49":"code","b6b1cd9d":"code","e5791088":"code","f3166b89":"code","228b68d9":"code","3466cc7c":"code","f268e984":"code","e060a229":"code","73d55067":"code","c1c657e6":"code","bbab8798":"code","e185a3c1":"code","6c55c00a":"code","1af6c393":"code","1fe446e3":"markdown","920dfc95":"markdown","8a409b4e":"markdown","1e318379":"markdown","ad52d36a":"markdown","73b45019":"markdown","3566e948":"markdown","a06c95f7":"markdown","65421453":"markdown","3e865e88":"markdown","d6e81899":"markdown","82c1b87a":"markdown","f9296f95":"markdown","d92bf10d":"markdown","b7c381bf":"markdown","44543d29":"markdown","0db0a136":"markdown","702e6b45":"markdown","284be070":"markdown","a140aef3":"markdown","fc4b9b3a":"markdown","ccc0853b":"markdown","c0d3ff26":"markdown","520d6e46":"markdown","abd71c30":"markdown","dacb8994":"markdown","02c3f562":"markdown","a6c824cf":"markdown","13918eb4":"markdown","3f4694b6":"markdown","08653dfe":"markdown","99720823":"markdown","7f680545":"markdown"},"source":{"de81883b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","02c1d5a5":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom imblearn.over_sampling import RandomOverSampler\nfrom imblearn.under_sampling import RandomUnderSampler\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error\nfrom imblearn.over_sampling import RandomOverSampler\nfrom sklearn.ensemble import RandomForestClassifier","c586e014":"# Carregando dados e verificando a quantidade de observa\u00e7\u00f5es\ndf_train = pd.read_csv('\/kaggle\/input\/costa-rican-household-poverty-prediction\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/costa-rican-household-poverty-prediction\/test.csv')\n\ndf_all = df_train.append(df_test)\n\ndf_train.shape, df_test.shape, df_all.shape","ba0c739d":"# verificando os tipos de variaveis\ndf_all.info(max_cols=143)","616d8e5d":"df_all.duplicated().value_counts()","fb1a8b9c":"## verificando a quantidade de nulos\ndf_all.isna().sum().sort_values(ascending = False)[df_all.isnull().sum() >= 1]","731c26b4":"# An\u00e1lise dos tablets v18q\ndf_all['v18q'].value_counts()","836370a3":"# Quantidade de nulos bate com a quantidade de individuos que n\u00e3o possuem tablets\ndf_all['v18q1'].isna().sum()","3c3158fd":"# Prenchendo com 0 os valores nulos de v18q1\ndf_all['v18q1'].fillna(0, inplace=True)","893188af":"# Verificando os valores de aluguel (v2a1) para os chefes\/as de familia (parentesco1 = 1)\ndf_all[df_all['parentesco1'] == 1]['v2a1'].isnull().sum()","bea9a21e":"# Prenchendo com -1 os valores nulos de v2a1 (tratativa do outlier)\ndf_all['v2a1'].fillna(-1, inplace=True)","a8368482":"# Verificando a distancia entre a media e a mediana\ndf_all.meaneduc.mean(), df_all.meaneduc.median()","4a1fd885":"# Preenchendo os valores nulos de meaneduc com o valor de 9 anos de estudos (entre m\u00e9dia e mediana), ou seja, uma tend\u00eancia geral dos dados\ndf_all['meaneduc'].fillna(df_all['meaneduc'].mean(), inplace=True)","e041ce1a":"# Prenchendo com -1 os valores nulos de SQBmeaned (estrat\u00e9gia do outlier)\ndf_all['SQBmeaned'].fillna(-1, inplace=True)","6fff07ee":"# Prenchendo com -1 os valores nulos de rez_esc (estrat\u00e9gia do outlier)\ndf_all['rez_esc'].fillna(-1, inplace=True)","b6d565f7":"df_all['Target'].isna().value_counts()","86623188":"## verificando a quantidade de nulos\ndf_all.isna().sum().sort_values(ascending = False)[df_all.isnull().sum() >= 1]","fc573f55":"# verificando possiveis variaveis categoricas\ndf_all.select_dtypes('object').head()","0e48902b":"# Tratando valores quantitativos de acordo com o dicion\u00e1rio \nmapeamento = {'yes': 1, 'no': 0}\n\ndf_all['edjefa'] = df_all['edjefa'].replace(mapeamento).astype(int)\ndf_all['edjefe'] = df_all['edjefe'].replace(mapeamento).astype(int)\ndf_all['dependency'] = df_all['dependency'].replace(mapeamento).astype(float)","714eae2f":"# verificando possiveis variaveis categoricas\ndf_all.select_dtypes('object').head()","5d40c780":"# Separando as colunas para treinamento\nfeats = [c for c in df_all.columns if c not in ['Id', 'idhogar', 'Target']]","7ba2e48b":"# Separar os dataframes\ntrain, test = df_all[~df_all['Target'].isnull()], df_all[df_all['Target'].isnull()]\n\nXtrain, Ytrain = train[feats], train[['Target']]\nXtest, Ytest = test[feats], test[['Target']]\n\nXtrain.shape, Ytrain.shape, Xtest.shape, Ytest.shape","a7493452":"# Analisando vari\u00e1vel Target\nax = sns.countplot(data=Ytrain, x=\"Target\")\nplt.show()","90512c49":"# Verificando valores absolutos\nYtrain['Target'].value_counts()","b6b1cd9d":"# Parentesco dos ocupantes das resid\u00eancias\nvar = 'parentesco1','parentesco2','parentesco3','parentesco4','parentesco5','parentesco6','parentesco7','parentesco8','parentesco9','parentesco10','parentesco11','parentesco12'\nleg = ['Chefe de fam\u00edlia','C\u00f4njuge','Filho(a)','Enteado(a)','Genro\/Nora','Neto(a)','Pai\/M\u00e3e','Sogro(a)','Irm\u00e3o\/Irm\u00e3','Cunhado(a)','Outro familiar','Outro n\u00e3o familiar']\n\ny = []\nfor v in var: \n    y.append(Xtrain[v].value_counts()[1])\n    \nplt.figure(figsize=(18,5))\nsns.barplot(x=leg, y=y).set_title(\"Parentesco\")\nplt.show()","e5791088":"# Sexo dos ocupantes das resid\u00eancias\nvar = 'male','female'\nleg = ['Masculino','Feminino']\n\ny = []\nfor v in var: \n    y.append(Xtrain[Xtrain['parentesco1'] == 1][v].value_counts()[1])\n    \nplt.figure(figsize=(18,5))\nsns.barplot(x=leg, y=y).set_title(\"Sexo\")\nplt.show()","f3166b89":"# Tipo de moradia\nvar = 'tipovivi1','tipovivi2','tipovivi3','tipovivi4','tipovivi5'\nleg = ['Pr\u00f3pria','Financiada','Alugada','Prec\u00e1ria','Outras']\n\ny = []\nfor v in var: \n    y.append(Xtrain[v].value_counts()[1])\n    \nplt.figure(figsize=(18,5))\nsns.barplot(x=leg, y=y).set_title(\"Tipo de Moradia\")\nplt.show()","228b68d9":"# Verificando a distribui\u00e7\u00e3o das classes na vari\u00e1vel Target\nYtrain[\"Target\"].value_counts(normalize = True)","3466cc7c":"# Fazendo o over-sampling\nros = RandomOverSampler(random_state=42)\nX_over,y_over= ros.fit_resample(Xtrain,Ytrain)\n\n# Verificando os dados\ny_over['Target'].value_counts(normalize = True)","f268e984":"rf = RandomForestClassifier(n_jobs=1, n_estimators=200, random_state=42)\nrf.fit(X_over,y_over)","e060a229":"# Prever o Target de teste usando o modelo treinado\ntest['Target'] = rf.predict(test[feats]).astype(int)\ntest['Target'].value_counts(normalize=True)","73d55067":"# submitendo\ntest[['Id', 'Target']].to_csv('submission.csv', index=False)","c1c657e6":"# Fazendo o over-sampling\nros = RandomUnderSampler(random_state=42)\nX_under,y_under= ros.fit_resample(Xtrain,Ytrain)\n\n# Verificando os dados\ny_under['Target'].value_counts(normalize = True)","bbab8798":"rf = RandomForestClassifier(n_jobs=1, n_estimators=200, random_state=42)\nrf.fit(X_under,y_under)","e185a3c1":"# Prever o Target de teste usando o modelo treinado\ntest['Target'] = rf.predict(test[feats]).astype(int)\ntest['Target'].value_counts(normalize=True)","6c55c00a":"# submitendo\ntest[['Id', 'Target']].to_csv('submission.csv', index=False)","1af6c393":"# Verificando o peso de cada coluna na predi\u00e7\u00e3o\nfig = plt.figure(figsize=(15, 20))\npd.Series(rf.feature_importances_, index=feats).sort_values().plot.barh()","1fe446e3":"## 6. Utilizando balanceamento Under-sampling","920dfc95":"## 4. Balanceamento com Over-Sampling","8a409b4e":"### rez_esc","1e318379":"### Composi\u00e7\u00e3o do grupo familiar","ad52d36a":"### Composi\u00e7\u00e3o da vari\u00e1vel Target","73b45019":"## 7. Verificando a import\u00e2ncia de cada vari\u00e1vel","3566e948":"#### v2a1 = valor do aluguel mensal <br\/>v18q1 = quantidade de tablets<br\/>rez_esc = anos atrasado na escola<br\/> meaneduc = media dos anos de educa\u00e7\u00e3o dos adultos <br\/> SQBmeaned = raiz quadrado da m\u00e9dia dos anos de educa\u00e7\u00e3o dos adultos","a06c95f7":"Vari\u00e1vel com poucos nulos. N\u00e3o faz sentido o preenchimento com a m\u00e9dia dos quadrados. Optado em identificar os nulos como outliers","65421453":"### Verificando resultado do tratamento dos missing values","3e865e88":"Por se tratar de valores de pagamentos, o preenchimento com zero n\u00e3o \u00e9 vi\u00e1vel por se tratar de um valor que pode ser utilizado. Sendo assim, foi optado em identificar os nulos com -1 para serem detectados como outliers","d6e81899":"## 5. Treinando o modelo","82c1b87a":"## 1.1 Verificando duplicidades","f9296f95":"### v18q1","d92bf10d":"### meaneduc","b7c381bf":"Vari\u00e1vel com poucos nulos. Como a m\u00e9dia \u00e9 pr\u00f3ximo da mediana, foi optado por utilizar a m\u00e9dia como m\u00e9todo de tratamento","44543d29":"### SQBmeaned","0db0a136":"Como o zero \u00e9 uma vari\u00e1vel poss\u00edvel de acontecer (0 anos de atrasos), foi optado em identificar os nulos como outliers","702e6b45":"## 1. Carregamento dos datasets","284be070":"A quantidade de nulos na vari\u00e1vel v18q1 possuem a mesma quantidade de observa\u00e7\u00f5es da variavel v18q (0). Subentende que os nulos s\u00e3o indiv\u00edduos que n\u00e3o possuem tablets. Logo aplicado tratativa para preencher com 0.","a140aef3":"#### Dicionario de dados\n#### id - Identificador de um membro da fam\u00edlia <br\/> idhogar - Identificador de familia <br\/> dependency - Taxa de depend\u00eancia<br\/> edjefa - anos de escolaridade do chefe de fam\u00edlia do sexo feminino <br\/> edjefe - anos de escolaridade do chefe de fam\u00edlia do sexo masculino","fc4b9b3a":"## 2. Separando dataframes","ccc0853b":"Nota-se enviesamento dos dados da vari\u00e1vel Target","c0d3ff26":"## 3. An\u00e1lise Explorat\u00f3ria","520d6e46":"## 1.3 Tratando Missing Values","abd71c30":"## 1.2 Verificando Missing Values","dacb8994":"## Bibliotecas","02c3f562":"### v2a1","a6c824cf":"## 1.4 Utilizando dicion\u00e1rio de dados","13918eb4":"Os valores batem com a divis\u00e3o de base treino e teste. Sendo assim n\u00e3o ser\u00e1 realizado tratativa de missing values pois ser\u00e1 utilizado a mesma divis\u00e3o original e n\u00e3o haver\u00e1 missings.","3f4694b6":"### Tipo de Moradia","08653dfe":"### Target","99720823":"### Perfil do chefe de fam\u00edlia","7f680545":"Analisando dataframe de treino"}}