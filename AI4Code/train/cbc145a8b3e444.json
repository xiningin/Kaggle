{"cell_type":{"14923d4d":"code","51823cc6":"code","abc39b16":"code","6c4e1530":"code","21adb45b":"code","b6572834":"code","b293c078":"code","a180314f":"code","520babf5":"code","cca6c4ee":"code","f49447fc":"code","874237f6":"code","17dd1711":"code","9f8c4b99":"code","67993981":"code","2e936d28":"code","f46119af":"code","f7bc49d4":"markdown","3c644661":"markdown","24cc0fe9":"markdown","0ae155d3":"markdown","daa3bd47":"markdown","6c94198d":"markdown","a62beaa3":"markdown","4db14abd":"markdown","da4b3b7d":"markdown","3e9f46dd":"markdown","316451f0":"markdown","34f92f7e":"markdown","dfd1a321":"markdown","bc38b75a":"markdown","cbb7169e":"markdown","6de15070":"markdown","7a400d94":"markdown"},"source":{"14923d4d":"import tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator","51823cc6":"tf.__version__","abc39b16":"train_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)\ntraining_set = train_datagen.flow_from_directory('..\/input\/cat-and-dogs\/dataset\/training_set',\n                                                 target_size = (64, 64),\n                                                 batch_size = 32,\n                                                 class_mode = 'binary')","6c4e1530":"test_datagen = ImageDataGenerator(rescale = 1.\/255)\ntest_set = test_datagen.flow_from_directory('..\/input\/cat-and-dogs\/dataset\/test_set',\n                                            target_size = (64, 64),\n                                            batch_size = 32,\n                                            class_mode = 'binary')","21adb45b":"cnn = tf.keras.models.Sequential()","b6572834":"cnn.add(tf.keras.layers.Conv2D(filters=32, kernel_size=3, activation='relu', input_shape=[64, 64, 3]))","b293c078":"cnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))","a180314f":"cnn.add(tf.keras.layers.Conv2D(filters=32, kernel_size=3, activation='relu'))\ncnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))","520babf5":"cnn.add(tf.keras.layers.Flatten())","cca6c4ee":"cnn.add(tf.keras.layers.Dense(units=128, activation='relu'))","f49447fc":"cnn.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))","874237f6":"cnn.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","17dd1711":"cnn.fit(x = training_set, validation_data = test_set, epochs = 25)","9f8c4b99":"import numpy as np\nfrom tensorflow.keras.preprocessing import image\ntest_image = image.load_img('..\/input\/cat-and-dogs\/dataset\/single_prediction\/cat_or_dog_1.jpg', target_size = (64, 64))\ntest_image = image.img_to_array(test_image)\ntest_image = np.expand_dims(test_image, axis = 0)\nresult = cnn.predict(test_image)\ntraining_set.class_indices\nif result[0][0] == 1:\n  prediction = 'dog'\nelse:\n  prediction = 'cat'","67993981":"print(prediction)","2e936d28":"import numpy as np\nfrom tensorflow.keras.preprocessing import image\ntest_image = image.load_img('..\/input\/cat-and-dogs\/dataset\/single_prediction\/cat_or_dog_2.jpg', target_size = (64, 64))\ntest_image = image.img_to_array(test_image)\ntest_image = np.expand_dims(test_image, axis = 0)\nresult = cnn.predict(test_image)\ntraining_set.class_indices\nif result[0][0] == 1:\n  prediction = 'dog'\nelse:\n  prediction = 'cat'","f46119af":"print(prediction)","f7bc49d4":"### Step 3 - Flattening","3c644661":"## Part 3 - Training the CNN","24cc0fe9":"### Step 1 - Convolution","0ae155d3":"### Preprocessing the Training set","daa3bd47":"## Part 4 - Making a single prediction","6c94198d":"## Part 2 - Building the CNN","a62beaa3":"### Preprocessing the Test set","4db14abd":"### Importing the libraries","da4b3b7d":"### Adding a second convolutional layer","3e9f46dd":"### Initialising the CNN","316451f0":"### Compiling the CNN","34f92f7e":"### Step 4 - Full Connection","dfd1a321":"### Step 2 - Pooling","bc38b75a":"## Part 1 - Data Preprocessing","cbb7169e":"### Training the CNN on the Training set and evaluating it on the Test set","6de15070":"# Convolutional Neural Network","7a400d94":"### Step 5 - Output Layer"}}