{"cell_type":{"4e073c33":"code","dc183b56":"code","bc5b3fc4":"code","cd444658":"code","1870876e":"code","df92c6c0":"code","5e973859":"code","fabe8132":"code","12070a46":"code","17c2d140":"code","b87376c3":"code","11862c52":"code","c0545cd5":"code","990f982e":"code","e54c0255":"code","a981be60":"code","fe0a3f6b":"code","261d4326":"code","e4517b4a":"code","6394b9be":"code","15d01ec6":"code","4333f9c3":"code","34d8ecd6":"code","a9bfce86":"code","64685c73":"code","76e87a42":"code","f5153c72":"code","f94c754c":"code","01d2a601":"code","0e36fa2e":"code","f1031bea":"code","6979e731":"code","0577a13d":"code","aec48adf":"code","f19f6d3a":"code","7543f393":"code","ed2cc6c6":"code","20e362d4":"code","bbab55da":"code","3f7a4f9f":"code","a2a89a86":"code","d1c6606f":"code","edd562b7":"code","ec2d4d65":"code","62f07551":"code","3f02d2e0":"code","a5cdca0c":"code","caa293a5":"code","9f71fe08":"code","3c971df0":"code","02b63f6d":"code","5621b952":"code","80eedc66":"code","4f0ab5d4":"code","34c28ad7":"code","a7ec091e":"code","af8c4e8a":"code","bec27b0b":"code","9515e2de":"code","a5201097":"code","d19da3b7":"code","8b8b4ce1":"code","ebf3a170":"code","91ae17cc":"code","e2cbd116":"code","077db872":"code","3b8044f6":"code","eea27aac":"code","b89fa1fd":"code","f19dd3af":"code","f2234964":"markdown","afe03d18":"markdown","9b5ee00f":"markdown","47b4915f":"markdown","5f264342":"markdown","ea622c7d":"markdown","6b825c72":"markdown","7dbdd2fd":"markdown","ad3e8538":"markdown","55fdc53e":"markdown","389f73f7":"markdown","6fc01b3e":"markdown","0415eef1":"markdown","7bd23a1c":"markdown","8d377d89":"markdown","01114560":"markdown","34149762":"markdown","e7d7d568":"markdown","69462522":"markdown","9c71d44c":"markdown","afe25ad1":"markdown","612a7c19":"markdown","186ab86e":"markdown","a3d4b36a":"markdown","fe836d33":"markdown","2ac68ecd":"markdown","c4c0e2ee":"markdown","56f0a8e4":"markdown","d15e8c4f":"markdown","122477d4":"markdown","13d6d4e8":"markdown","d2f59a70":"markdown","081cf49f":"markdown","5e8a0bdc":"markdown","815a3885":"markdown","eb2df66d":"markdown","b626fe07":"markdown","ed731b95":"markdown","de8f1151":"markdown","f3c7abf8":"markdown","ff0f1ede":"markdown","8d662834":"markdown"},"source":{"4e073c33":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import accuracy_score,confusion_matrix\n%matplotlib inline","dc183b56":"dataset = pd.read_csv('..\/input\/early-stage-diabetes-risk-prediction-dataset\/diabetes_data_upload.csv')\ndataset.head()","bc5b3fc4":"sns.heatmap(dataset.isnull())","cd444658":"dataset['class'].value_counts()","1870876e":"dataset['Gender'] = dataset['Gender'].map({'Male':1,'Female':0})\ndataset['class'] = dataset['class'].map({'Positive':1,'Negative':0})\ndataset['Polyuria'] = dataset['Polyuria'].map({'Yes':1,'No':0})\ndataset['Polydipsia'] = dataset['Polydipsia'].map({'Yes':1,'No':0})\ndataset['sudden weight loss'] = dataset['sudden weight loss'].map({'Yes':1,'No':0})\ndataset['weakness'] = dataset['weakness'].map({'Yes':1,'No':0})\ndataset['Polyphagia'] = dataset['Polyphagia'].map({'Yes':1,'No':0})\ndataset['Genital thrush'] = dataset['Genital thrush'].map({'Yes':1,'No':0})\ndataset['visual blurring'] = dataset['visual blurring'].map({'Yes':1,'No':0})\ndataset['Itching'] = dataset['Itching'].map({'Yes':1,'No':0})\ndataset['Irritability'] = dataset['Irritability'].map({'Yes':1,'No':0})\ndataset['delayed healing'] = dataset['delayed healing'].map({'Yes':1,'No':0})\ndataset['partial paresis'] = dataset['partial paresis'].map({'Yes':1,'No':0})\ndataset['muscle stiffness'] = dataset['muscle stiffness'].map({'Yes':1,'No':0})\ndataset['Alopecia'] = dataset['Alopecia'].map({'Yes':1,'No':0})\ndataset['Obesity'] = dataset['Obesity'].map({'Yes':1,'No':0})","df92c6c0":"corrdata = dataset.corr()","5e973859":"ax,fig = plt.subplots(figsize=(15,8))\nsns.heatmap(corrdata,annot=True)","fabe8132":"sns.distplot(dataset['Age'],bins=30)  ","12070a46":"sns.barplot(x='class',y='Age',data=dataset)","17c2d140":"ds = dataset['class'].value_counts().reset_index()\nds.columns = ['class', 'count']\nplot=ds.plot.pie(y='count')","b87376c3":"sns.countplot(x='class',data=dataset,hue='Gender')","11862c52":"sns.catplot(x=\"Polyuria\", y=\"class\", kind=\"point\", data=dataset)\n","c0545cd5":"sns.barplot(x='Polydipsia',y='class',data=dataset)","990f982e":"sns.countplot(x='class',data=dataset,hue='sudden weight loss')","e54c0255":"sns.countplot(x='class',data=dataset, hue='Polyphagia')","a981be60":"sns.barplot(x='Polyphagia',y='class',data=dataset)","fe0a3f6b":"sns.catplot(x='class',y='Genital thrush',kind='point',data=dataset)","261d4326":"sns.barplot(x='class',y='partial paresis',data=dataset)","e4517b4a":"sns.violinplot(x='Alopecia',y='class',data=dataset)","6394b9be":"sns.barplot(x=\"visual blurring\", y=\"class\", data=dataset)","15d01ec6":"sns.barplot(x=\"Itching\", y=\"class\", data=dataset)","4333f9c3":"sns.violinplot(x='Obesity',y='class',data=dataset)","34d8ecd6":"sns.barplot(x='Irritability',y='class',data=dataset)","a9bfce86":"X1 = dataset.iloc[:,0:-1]\ny1 = dataset.iloc[:,-1]","64685c73":"X1.columns","76e87a42":"\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\nbest_feature = SelectKBest(score_func=chi2,k=10)\nfit = best_feature.fit(X1,y1)","f5153c72":"dataset_scores = pd.DataFrame(fit.scores_)\ndataset_cols = pd.DataFrame(X1.columns)","f94c754c":"featurescores = pd.concat([dataset_cols,dataset_scores],axis=1)\nfeaturescores.columns=['column','scores']","01d2a601":"featurescores","0e36fa2e":"print(featurescores.nlargest(10,'scores'))","f1031bea":"featureview=pd.Series(fit.scores_, index=X1.columns)\nfeatureview.plot(kind='barh')","6979e731":"from sklearn.feature_selection import VarianceThreshold\nfeature_high_variance = VarianceThreshold(threshold=(0.5*(1-0.5)))\nfalls=feature_high_variance.fit(X1)","0577a13d":"dataset_scores1 = pd.DataFrame(falls.variances_)\ndat1 = pd.DataFrame(X1.columns)\n\n","aec48adf":"high_variance = pd.concat([dataset_scores1,dat1],axis=1)\nhigh_variance.columns=['variance','cols']","f19f6d3a":"high_variance[high_variance['variance']>0.2]","7543f393":"X = dataset[['Polydipsia','sudden weight loss','partial paresis','Irritability','Polyphagia','Age','visual blurring']]\ny = dataset['class']","ed2cc6c6":"\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2,random_state=0)","20e362d4":"from sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nX_train = ss.fit_transform(X_train)\nX_test = ss.transform(X_test)","bbab55da":"\nfrom sklearn.linear_model import LogisticRegression\nlg=LogisticRegression()\nlg.fit(X_train,y_train)","3f7a4f9f":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator=lg, X=X_train ,y=y_train,cv=10)\nprint(\"accuracy is {:.2f} %\".format(accuracies.mean()*100))\nprint(\"std is {:.2f} %\".format(accuracies.std()*100))\n","a2a89a86":"pre=lg.predict(X_test)","d1c6606f":"logistic_regression=accuracy_score(pre,y_test)\nprint(accuracy_score(pre,y_test))\nprint(confusion_matrix(pre,y_test))\n\n\n","edd562b7":"from sklearn.metrics import classification_report\nprint(classification_report(pre,y_test))","ec2d4d65":"from sklearn.svm import SVC\nsv=SVC(kernel='linear',random_state=0)\nsv.fit(X_train,y_train)","62f07551":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator=sv, X=X_train ,y=y_train,cv=10)\nprint(\"accuracy is {:.2f} %\".format(accuracies.mean()*100))\nprint(\"std is {:.2f} %\".format(accuracies.std()*100))\n","3f02d2e0":"pre1=sv.predict(X_test)","a5cdca0c":"svm_linear=accuracy_score(pre1,y_test)\nprint(accuracy_score(pre1,y_test))\nprint(confusion_matrix(pre1,y_test))","caa293a5":"from sklearn.metrics import classification_report\nprint(classification_report(pre1,y_test))","9f71fe08":"\nfrom sklearn.svm import SVC\nsvrf=SVC(kernel='rbf',random_state=0)\nsvrf.fit(X_train,y_train)","3c971df0":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator=svrf, X=X_train ,y=y_train,cv=10)\nprint(\"accuracy is {:.2f} %\".format(accuracies.mean()*100))\nprint(\"std is {:.2f} %\".format(accuracies.std()*100))\n","02b63f6d":"pre2=svrf.predict(X_test)","5621b952":"svm_rbf=accuracy_score(pre2,y_test)\nprint(accuracy_score(pre2,y_test))\nprint(confusion_matrix(pre2,y_test))","80eedc66":"from sklearn.metrics import classification_report\nprint(classification_report(pre2,y_test))","4f0ab5d4":"from sklearn.neighbors import KNeighborsClassifier\nscore=[]\n\nfor i in range(1,10):\n    \n    \n    knn=KNeighborsClassifier(n_neighbors=i,metric='minkowski',p=2)\n    knn.fit(X_train,y_train)\n    pre3=knn.predict(X_test)\n    ans=accuracy_score(pre3,y_test)\n    score.append(round(100*ans,2))\nprint(sorted(score,reverse=True)[:5])\nknn=sorted(score,reverse=True)[:1]\n","34c28ad7":"from sklearn.naive_bayes import GaussianNB\ngb=GaussianNB()\ngb.fit(X_train,y_train)","a7ec091e":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator=gb, X=X_train ,y=y_train,cv=10)\nprint(\"accuracy is {:.2f} %\".format(accuracies.mean()*100))\nprint(\"std is {:.2f} %\".format(accuracies.std()*100))","af8c4e8a":"pre4=gb.predict(X_test)","bec27b0b":"Naive_bayes_Gaussian_nb=accuracy_score(pre4,y_test)\nprint(accuracy_score(pre4,y_test))\nprint(confusion_matrix(pre4,y_test))","9515e2de":"from sklearn.metrics import classification_report\nprint(classification_report(pre4,y_test))","a5201097":"from sklearn.tree import DecisionTreeClassifier\ndc=DecisionTreeClassifier(criterion='gini')\ndc.fit(X_train,y_train)","d19da3b7":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator=dc, X=X_train ,y=y_train,cv=10)\nprint(\"accuracy is {:.2f} %\".format(accuracies.mean()*100))\nprint(\"std is {:.2f} %\".format(accuracies.std()*100))","8b8b4ce1":"pre5=dc.predict(X_test)","ebf3a170":"Decisiontress_classifier=accuracy_score(pre5,y_test)\nprint(accuracy_score(pre5,y_test))\nprint(confusion_matrix(pre5,y_test))","91ae17cc":"from sklearn.metrics import classification_report\nprint(classification_report(pre5,y_test))","e2cbd116":"from sklearn.ensemble import RandomForestClassifier\nestime=[]\nfor i in range(1,100):\n    rc=RandomForestClassifier(n_estimators=i,criterion='entropy',random_state=0)\n    rc.fit(X_train,y_train)\n    ","077db872":"from sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator=rc, X=X_train ,y=y_train,cv=10)\nprint(\"accuracy is {:.2f} %\".format(accuracies.mean()*100))\nprint(\"std is {:.2f} %\".format(accuracies.std()*100))","3b8044f6":"pre6 = rc.predict(X_test)","eea27aac":"Random_forest=accuracy_score(pre6,y_test)\nprint(accuracy_score(pre6,y_test))\nprint(confusion_matrix(pre6,y_test))","b89fa1fd":"from sklearn.metrics import classification_report\nprint(classification_report(pre6,y_test))","f19dd3af":"print('Logistic regression:',logistic_regression)\nprint('svmlinear:',svm_linear)\nprint('svmrbf:',svm_rbf)\nprint('knn:',knn)\nprint('naive bayes:',Naive_bayes_Gaussian_nb)\nprint('Decision tress:',Decisiontress_classifier)\nprint('Random forest:',Random_forest)","f2234964":"# Logistic Regression","afe03d18":"**Feature selection using selectkbest**","9b5ee00f":"# Let's start building models for prediction","47b4915f":"**Top 10 features**","5f264342":"**Polyuria**","ea622c7d":"**Sudden weight loss**","6b825c72":"**Classification Report**","7dbdd2fd":"**Polydipsia**","ad3e8538":"# Decision Tress Classifier","55fdc53e":"**Genital Thrush**","389f73f7":"**Cross validation test for training data**","6fc01b3e":"**Gender**","0415eef1":"# EDA","7bd23a1c":"**Checking the variance of each feature**,\nFeatures must have high variance with other features","8d377d89":"**Age distribution**","01114560":"# SVM","34149762":"**These are the variables with their feature scores ,their importance\/contribution towards class**","e7d7d568":"**Early stage Diabetes Risk prediction**   (Acc=98%)\n**Please upvote**","69462522":"**Prediction**","9c71d44c":"**Itching**","afe25ad1":"#Task:Early stage Diabetes prediction\n* The number of Diabetes patients are increasing in recent years.Machine learning models helps in early detection and  the diagnosis needed.Now predicting whether a person had daibetes or not by Exploring data analysis, Feature selection ,Building models. ","612a7c19":"# Accuracies of all classification model overview","186ab86e":"**Irritability**","a3d4b36a":"**Splitting the dataset into training and testing sets**","fe836d33":"# Random Forest Classifier","2ac68ecd":"# PLEASE UPVOTE\nThis will keep me motivated.","c4c0e2ee":"**Analysing the correlation between independent and dependent variables**\nconsidering independent variables that has high correlation with the dependent variables and less correlation with other variables","56f0a8e4":"**Standardization of independant variables**","d15e8c4f":"**Obesity**","122477d4":"**Alopecia**","13d6d4e8":"**Take a look into Accuracy and Confusion matrix**","d2f59a70":"**Have a look at the dataset**","081cf49f":"# KNN","5e8a0bdc":"**Age\/class(dependent variable)**","815a3885":"#Importing necessary libraries","eb2df66d":"**Checking whether dataset has null values**","b626fe07":"**Visual blurring**","ed731b95":"# Naive bayes-Gaussian NB","de8f1151":"**The best model is SVM , KNN and Random forest  with 98% Accuracy**","f3c7abf8":"**Polyphagia**","ff0f1ede":"**Mapping text into values**","8d662834":"**Partial paresis**"}}