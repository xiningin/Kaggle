{"cell_type":{"88c05a05":"code","723e37c4":"code","7d647c73":"code","019e8a03":"code","14c71ce6":"code","ac4bd127":"code","4983d855":"code","459d3b40":"code","8b16c670":"code","790e838a":"code","585af7b4":"code","9016e4eb":"code","1e0c3397":"code","dfd72900":"code","37c9d1b3":"code","3c5b027b":"code","f3f53b34":"code","7604556d":"code","205da29a":"code","67020eaf":"code","595f59e0":"code","496c70da":"code","7835937b":"code","48247653":"code","094eef40":"code","5549b33a":"code","e1eb2c1d":"code","a43d9c2d":"code","453ce3ad":"code","48c1897f":"code","2e0103d4":"code","28543c37":"code","4249e94a":"code","2ef3a8ed":"code","1d78bc5a":"code","6ae3ec79":"code","1d7aadaa":"code","f64d47a6":"code","7fb0759d":"code","c2cca01c":"code","056a5c37":"code","866e817f":"code","c2b8271b":"code","e3095ea3":"code","b790a1b7":"code","857f4103":"code","d8e4b26c":"code","fd5014fb":"code","d8281848":"code","4068d0ee":"code","585bfb58":"code","602dba7b":"code","49cf99ba":"code","ed7b1a32":"code","9b4598a5":"code","07c237e2":"code","f5c52606":"code","0896db11":"code","bec1fc8a":"code","e56b3bfb":"code","a415da1a":"code","dbfe716d":"code","d655f9bf":"code","fefb3a38":"code","968c94e5":"code","1c33db6f":"markdown","2a9343aa":"markdown","b491517a":"markdown","e8e4514d":"markdown","7aba36f7":"markdown","6c8c6141":"markdown","f3987e4f":"markdown","063511df":"markdown","55937de5":"markdown","54cd8670":"markdown","441f4d44":"markdown","8dcaacc2":"markdown","b966d863":"markdown","b3990fd5":"markdown","6a36966a":"markdown","d8708f75":"markdown","d4e7c4ff":"markdown","28eb8dbe":"markdown","00d76e3f":"markdown","8cf63b24":"markdown","87e31a03":"markdown","e94879fc":"markdown","2d9cdfef":"markdown","68072ff6":"markdown","9c5f1efd":"markdown","ba2d16d6":"markdown","dc120065":"markdown","5086bfd2":"markdown","b48240ed":"markdown","1fc5cbe5":"markdown","f3cc8a29":"markdown","7a10c857":"markdown","1ce949c5":"markdown"},"source":{"88c05a05":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom calendar import month_name, day_name\nfrom scipy import stats\nimport statsmodels.api as sm\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom statsmodels.tsa.api import adfuller,hp_filter\n\nimport warnings\nwarnings.filterwarnings('ignore')","723e37c4":"hourly_df = pd.read_csv('..\/input\/bike-sharing-hourly-data\/hour.csv', \n                        parse_dates=['dteday'], index_col=0)\nhourly_df.head()","7d647c73":"print('Shape', hourly_df.shape)","019e8a03":"hourly_df.info()","14c71ce6":"# check null values\n\nhourly_df.isna().sum()","ac4bd127":"# Columns Renaming\n\nhourly_df.rename(columns={'dteday':'date', 'yr':'year', 'mnth':'month', 'hr':'hour',\n                          'holiday':'is_holiday', 'workingday':'is_workingday', 'hum':'humidity',\n                         'cnt':'total'}, inplace=True)","4983d855":"# copying data\ndf_copy = hourly_df.copy()\n\n# data stats\ndf_copy.describe().T","459d3b40":"df_copy[['casual', 'registered', 'total']].skew(axis=0)","8b16c670":"## Grouping columns\ntime_features = ['date', 'season', 'year', 'month', 'hour', 'weekday', 'is_holiday', 'is_workingday']\nweather_features = ['weathersit', 'temp', 'atemp', 'humidity', 'windspeed']\ntarget_features = ['casual', 'registered', 'total']","790e838a":"## data mapping of categorical columns\n\nmonths = month_name[1:13]\nseasons = ['Winter', 'Spring', 'Summer', 'Fall']\nyears = ['2011', '2012']\ndays = day_name[:7]            # ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ndays = [days[-1]] + days[:-1]  # ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\nweathers = ['Clear', 'Cloudy', 'Light_rain_snow', 'Heavy_rain_snow']\n\n\ndf_copy.season = df_copy.season.map(dict(zip(range(1,5), seasons)))\ndf_copy.month = df_copy.month.map(dict(zip(range(1, 13), months)))\ndf_copy.year = df_copy.year.map(dict(zip(range(2), years)))\ndf_copy.weekday = df_copy.weekday.map(dict(zip(range(7), days)))\ndf_copy.weathersit = df_copy.weathersit.map(dict(zip(range(1,5), weathers)))","585af7b4":"# changing humidity to percent and windspeed values to minimum (0) and maximum (67)\n\ndf_copy.windspeed = df_copy.windspeed * 67\ndf_copy.humidity = df_copy.humidity * 100\n\n\n# given data is normalized as (t-t_min)\/(t_max-t_min)\n\n# getting original temperatues in celsius\n\ntemp_min = -8\ntemp_max = 39\n\natemp_min = -16\natemp_max = 50\n\ndf_copy['temp'] = df_copy.temp*(temp_max-temp_min) + temp_min\ndf_copy['atemp'] = df_copy.atemp * (atemp_max-atemp_min) + atemp_min","9016e4eb":"df_copy.loc[:, weather_features].sample(10, random_state=101)","1e0c3397":"## counts of weather situations in dataset\ndf_copy.weathersit.value_counts()","dfd72900":"df_copy.weathersit.value_counts(normalize=True)*100","37c9d1b3":"df_copy.head()","3c5b027b":"def plot_countplot(df, column_name):\n    # draw countplot\n    sns.countplot(x=column_name,data=df)\n    plt.title(f\"Countplot for feature - {column_name}\", fontdict={'size':18})\n    plt.xlabel(f\"{column_name}\", fontsize=14)\n    plt.ylabel('Count', fontsize=14)\n    plt.show()","f3f53b34":"plot_countplot(df_copy, 'season')","7604556d":"plot_countplot(df_copy, 'year')","205da29a":"plt.xticks(rotation=20)\nplot_countplot(df_copy, 'month')","67020eaf":"plot_countplot(df_copy, 'hour')","595f59e0":"plot_countplot(df_copy, 'is_holiday')","496c70da":"plot_countplot(df_copy, 'weekday')","7835937b":"plot_countplot(df_copy, 'is_workingday')","48247653":"plot_countplot(df_copy, 'weathersit')","094eef40":"## check the total rides is equal to sum of registered vs casual\n\n(df_copy.registered + df_copy.casual == df_copy.total).all()","5549b33a":"sns.set(font_scale=1.3)\nsns.set_theme(style='whitegrid')\n\nsns.kdeplot(data=df_copy, x='registered', shade=True, label='Registered')\nsns.kdeplot(data=df_copy, x='casual', shade=True, label='Casual')\n\nplt.xlabel('Rides')\nplt.legend()\nplt.title('Rides Distribution')\n\nplt.show()","e1eb2c1d":"# set the date column to index\ndf_copy.set_index('date', inplace=True)","a43d9c2d":"# daily data\n\ndata_per_day = df_copy.groupby('date')[['registered', 'casual']].sum()\n\ndata_per_day.plot(figsize=(15,8))\nplt.ylabel('No. of rides per day')\nplt.title('Daily Data Plot', fontdict={'size':16})\nplt.show()","453ce3ad":"## Rolling mean of data\n## Smoothing data\n\nwindow = 7\nrolling_means = data_per_day.rolling(window).mean()\nrolling_stds = data_per_day.rolling(window).std()\n\nax = rolling_means.plot(figsize=(15, 8))\nplt.fill_between(x=rolling_means.index, y1=rolling_means['registered']+2*rolling_stds['registered'],\n                y2=rolling_means['registered']-2*rolling_stds['registered'], alpha=0.2)\n\nplt.fill_between(x=rolling_means.index, y1=rolling_means['casual']+2*rolling_stds['casual'],\n                y2=rolling_means['casual']-2*rolling_stds['casual'], alpha=0.2)\n\n\nplt.ylabel('No. of rides per day')\nplt.title('Rolling Mean Daily Data Plot', fontdict={'size':16})\nplt.show()","48c1897f":"df2 = df_copy[['hour', 'weekday', 'season', 'registered', 'casual']]\ndf2.head()","2e0103d4":"df2 = df2.melt(id_vars=['hour', 'weekday', 'season'], var_name='user', value_name='rides')\ndf2.head()","28543c37":"sns.catplot(data=df2, x='hour', y='rides', col='user', row='weekday', kind='bar')\n\nplt.show()","4249e94a":"sns.catplot(data=df2, x='weekday', y='rides', col='user', row='season', kind='bar')\n\nplt.show()","2ef3a8ed":"plt.figure(figsize=(15,8))\nsns.catplot(data=df2, x='weekday', y='rides', kind='violin', row='user', aspect=2)\nplt.show()","1d78bc5a":"weekdays_data = df_copy.registered[~df_copy.weekday.isin(['Saturday', 'Sunday'])]\nweekends_data = df_copy.registered[df_copy.weekday.isin(['Saturday', 'Sunday'])]\n\ntest_result = stats.ttest_ind(weekdays_data, weekends_data) # two-sided test\n\nprint(f\"Test Statistic: {test_result[0]:.3f}\")\nprint(f\"P-value: {test_result[1]:.3f}\")","6ae3ec79":"plt.figure(figsize=(10,6))\nsns.histplot(data=weekdays_data, kde=True, stat='density', fill=True, element='poly', label='Weekdays')\nsns.histplot(data=weekends_data, kde=True, stat='density', color='orange',\n             fill=True, element='poly', label='Weekends', alpha=0.5)\n\nplt.xlabel('Rides')\nplt.legend()\nplt.show()","1d7aadaa":"weekdays_data_casual = df_copy.casual[~df_copy.weekday.isin(['Saturday', 'Sunday'])]\nweekends_data_casual = df_copy.casual[df_copy.weekday.isin(['Saturday', 'Sunday'])]\n\ntest_result = stats.ttest_ind(weekdays_data_casual, weekends_data_casual)\n\nprint(f\"Test Statistic: {test_result[0]:.3f}\")\nprint(f\"P-value: {test_result[1]:.3f}\")","f64d47a6":"plt.figure(figsize=(10,6))\nsns.histplot(data=weekdays_data_casual, kde=True, stat='density', fill=True, element='poly', label='Weekdays')\nsns.histplot(data=weekends_data_casual, kde=True, stat='density', color='orange',\n             fill=True, element='poly', label='Weekends', alpha=0.5)\n\nplt.xlabel('Rides')\nplt.legend()\nplt.show()","7fb0759d":"sns.catplot(data=df2, x='hour', y='rides', col='user', row='season', kind='bar')\n\nplt.show()","c2cca01c":"winter_data = df_copy.loc[df_copy.season=='Winter'][['registered', 'casual']]\nnot_winter_data = df_copy.loc[~(df_copy.season=='Winter')][['registered', 'casual']]","056a5c37":"## Hypothesis test for registered users\n\nresults = stats.ttest_ind(winter_data.registered, not_winter_data.registered)\n\nprint(f\"Test Statistic: {results[0]:.3f}\")\nprint(f\"P-value: {results[1]:.3f}\")","866e817f":"## Hypothesis test for casual users\n\nresults = stats.ttest_ind(winter_data.registered, not_winter_data.registered)\n\nprint(f\"Test Statistic: {results[0]:.3f}\")\nprint(f\"P-value: {results[1]:.3f}\")","c2b8271b":"df_copy.head()","e3095ea3":"holiday_data = pd.melt(df_copy, id_vars=['is_holiday'], \n                       value_vars=['casual', 'registered'], \n                       var_name='user', value_name='rides')\n\nholiday_data.head()","b790a1b7":"sns.catplot(x='is_holiday', y='rides', col='user',kind='violin', data=holiday_data, aspect=1.5, height=6)\nplt.xticks(ticks=[0,1], labels=['No', 'Yes'])\nplt.show()","857f4103":"holiday_yes = df_copy.loc[df_copy.is_holiday==1][['registered', 'casual']]\nholiday_no = df_copy.loc[df_copy.is_holiday==1][['registered', 'casual']]","d8e4b26c":"## Hypothesis test\n\n# Registered User\ntest_results = stats.ttest_ind(holiday_yes.registered, holiday_no.registered)\n\nprint(f\"Test Statistic: {test_results[0]:.3f}\")\nprint(f\"P-value: {test_results[1]:.3f}\")","fd5014fb":"# Casual User\ntest_results = stats.ttest_ind(holiday_yes.casual, holiday_no.casual)\n\nprint(f\"Test Statistic: {test_results[0]:.3f}\")\nprint(f\"P-value: {test_results[1]:.3f}\")","d8281848":"weather_features[1:]  # ['temp', 'atemp', 'humidity', 'windspeed']","4068d0ee":"weather_df = df_copy[weather_features+['registered', 'casual']]\nweather_df.head()","585bfb58":"def plot_correlation(df, col):\n    \n    registered_corr = df['registered'].corr(df[col])\n    casual_corr = df['casual'].corr(df[col])\n    \n    plt.figure(figsize=(12, 6))\n    sns.regplot(data=df_copy, x=col, y='registered',\n                label=f'Registered Rides correlation {registered_corr:.3f}',\n                scatter_kws={'alpha':0.3})\n    sns.regplot(data=df_copy, x=col, y='casual', \n                label=f'Casual Rides correlation {casual_corr:.3f}',\n                scatter_kws={'alpha':0.3})\n    \n    plt.title(f\"Correlation Between rides and {col}\", fontdict={'size':16,'color':'green'})\n    plt.legend()\n    plt.show()\n","602dba7b":"plot_correlation(df_copy, 'humidity')","49cf99ba":"plot_correlation(df_copy, 'temp')","ed7b1a32":"plot_correlation(df_copy, 'atemp')","9b4598a5":"plot_correlation(df_copy, 'windspeed')","07c237e2":"cols = ['temp', 'atemp', 'humidity', 'windspeed', 'registered', 'casual']\n\ncorr_matrix = df_copy[cols].corr()\n\nplt.figure(figsize=(12, 8))\nsns.heatmap(corr_matrix, annot=True, fmt='.2g', cmap='Oranges', mask=np.triu(corr_matrix))\n\nplt.show()","f5c52606":"from statsmodels.tsa.stattools import adfuller","0896db11":"daily_rides = df_copy[['registered', 'casual']].resample('D').sum()\ndaily_rides.head()","bec1fc8a":"daily_rides.plot(figsize=(15, 8))\nplt.ylabel('Rides')\nplt.title(\"Total Daily Rides\")\nplt.show()","e56b3bfb":"## Stationarity Test\n\nresult_registered = adfuller(daily_rides.registered)\nresult_casual = adfuller(daily_rides.casual)\n\nprint(\"Rigistered Rides' p-value\", result_registered[1])\nprint(\"Casual Rides' p-value\", result_casual[1])","a415da1a":"## Trends and seasonality in data\nmonthly_rides = daily_rides.resample('MS').sum()\n\n\ncycle_reg, trend_reg =  hp_filter.hpfilter(monthly_rides.registered, lamb=129600)\ncycle_casual, trend_casual =  hp_filter.hpfilter(monthly_rides.casual, lamb=129600)","dbfe716d":"trend_reg.plot();","d655f9bf":"cycle_reg.plot();","fefb3a38":"trend_casual.plot();","968c94e5":"cycle_casual.plot();","1c33db6f":"### Holiday Analysis","2a9343aa":"- **Hypothesis test for casual users**","b491517a":"- More than 65% of our data has weather situation `clear` and 26% of `cloudy`.\n- In other words, more than 91% of data has weather situation either clear or cloudy","e8e4514d":"### Weekly Analysis","7aba36f7":"- During working days most registered users use bike service before and after business hours. It is likely that most registered users use the bike sharing service for commuting.\n- Casual users on working days are quite limited.\n- Mostly casual users use bike sharing service on weekends.\n- During weekends both casual and registered users have the same distribution between the time interval of 11 AM to 6 PM.","6c8c6141":"$ \n    H_0 = \\text{Average casual rides over weekdays is equal to average casual rides of weekends} \\\\\n    H_a = \\text{Opposite of } H_0\n$","f3987e4f":"- ***In conclusion, we can say that there is a statistically significant difference between the number of rides on working days and weekend days for both casual and registered customers.***","063511df":"1. Mostly registered users use bike sharing service before and after business hours.\n2. Casual users shows no pattern, they use the service during day more.\n3. Registered users take more rides in weekdays and less rides in weekends. In contrast, casual users take more rides in weekends and less rides in weekdays.\n4. As expected during winter season both casual and registered users take far less rides than other season.\n5. Holidays have no impact on users rides.\n6. Temperature has positive impact on both users (casual & registered). If temperature increases then we can expect increase in demand of bike sharing service.\n7. In contrast, humidity has negative impact on users.\n8. Wind speed has no impact on users.\n9. Data has same seasonal effect on each year.\n10. There is an upward trend for both casual and registered users' rides. It's a good indication for business. Meaning as the business grows older more and more people using bike sharing service.","55937de5":"> p-value is less than 0.05, so we can reject the null hypothesis and conclude that there is difference between average casual rides during weekdays and weekends.","54cd8670":"### Hourly Analysis","441f4d44":"### Seasonal Impact","8dcaacc2":"- Registered users use the bike sharing service more on weekdays than weekends.\n- But casual user use it more in weekends than working days.","b966d863":"$ \n    H_0 = \\text{Average registered rides over weekdays is equal to average registered rides of weekends} \\\\\n    H_a = \\text{Opposite of } H_0\n$","b3990fd5":"- Registered users perform way more rides than casual ones.\n- Both distributions are right skewed, meaning most of the entries are small numbers of rides\n- Data has some large number of rides, considered to be outliers","6a36966a":"> **Dataset used in this project can be found [here](https:\/\/archive.ics.uci.edu\/ml\/datasets\/bike+sharing+dataset)**","d8708f75":"### Time series analysis","d4e7c4ff":"## Registered Vs Casual Customers Analysis","28eb8dbe":"### Hypothesis test for Average Weekdays rides vs Average Weekends Rides","00d76e3f":"- Casual, Registered, and Total all columns are positive skewed.\n- All have standard deviation is greater than their respective median values. Means, data is not consistent in that columns.","8cf63b24":"## Loading and Preprocessing Data","87e31a03":"- As expected there are fewer rides during winter season for both casual and registered users.","e94879fc":"### Analysis of Weather related features","2d9cdfef":"We can observe that higher temperatures have a positive impact on the number of rides.\n\n> Note that as the values in the registered column are widely spread with respect to the different values in temp, we have a lower correlation compared to the casual column. The same pattern can be observed in the humidity level has a negative correlation with both types of rides. This means that with a high level of humidity (mist or rain), customers will tend not to use the bike sharing service. There is minimal correlation between the number of rides and the wind speed (a weak positive correlation).","68072ff6":"- Number of registered rides are always greater than casual rides.\n- this data has some seasonality and trend in it. (need to check by TSA)\n- During winter (November to February) overall number of rides decreases (As it was expected)\n- Both casual and registered rides has a lot of variance. We need to smoothen it.","9c5f1efd":"> **For both casual and registered users we get the p-value less than 0.05. So, there is statistically significant difference in rides between both users during winter and non-winter season.**","ba2d16d6":"- Distribution of registered users is almost same for weekdays, but weekends.\n- It seems mostly registered users use bike sharing service in weekdays.\n- In contrast, there is slight increment in casual users' rides during weekends","dc120065":"## Final Conclusion","5086bfd2":"> p-value is less than 0.05, so we can reject the null hypothesis and conclude that there is statistically significance difference between average registered rides during weekdays and weekends.","b48240ed":"- We can see an upward trend in registered users (good indication for business)\n- casual users don't have much amount of upward trend.","1fc5cbe5":"## Univariate Analysis","f3cc8a29":"- Here we got interesting results - **For both casual and registered users, average rides during holidays and non-holidays are same.**","7a10c857":"### Correlations","1ce949c5":"- For both registered and casual users p-value is greater than 0.5, so we cannot reject the null hypothesis. It means they are non - stationary."}}