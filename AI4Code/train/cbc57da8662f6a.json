{"cell_type":{"25b0f9cc":"code","61891c1d":"code","3d73c52f":"code","301b08f0":"code","d8e8c040":"code","89b6c68e":"code","f77a7261":"code","2442c4b0":"code","de20f34f":"code","1491fdd8":"code","489dd5ad":"code","6b449e44":"code","d6749cbe":"code","0b138300":"code","4d2bdd5a":"code","e40290d9":"code","208309d8":"code","bca6fd55":"code","2ae0f5c5":"code","c8199a04":"code","4ac29a5e":"code","6f9c3a57":"code","faca0c47":"code","b6e43ebc":"code","b68d5868":"code","7524db40":"code","1c393a3f":"code","c97492d3":"code","a25d9e4e":"code","d378f5dd":"code","d6be40f7":"code","8157ffa2":"code","aef00049":"code","a16ed677":"code","623af8ef":"code","ad247280":"code","1799b97b":"code","9d9c3d2c":"code","54037910":"code","62722a75":"code","88cac42d":"code","0ae729e8":"code","bf10a752":"code","41097194":"code","3be9c202":"code","b085a62b":"code","68baec17":"code","357418c7":"code","65bc3108":"code","b7405286":"code","5fdf3852":"code","f300f462":"code","21456f72":"code","1a5b8e1d":"code","3474cf14":"code","76c0850d":"code","61877602":"code","16d2f46c":"code","491e329c":"code","701aacba":"code","d3d30f3c":"code","f6922e07":"code","622ecb76":"code","5bdcd414":"markdown","21c7ab73":"markdown","73bb46f2":"markdown","ee51bede":"markdown","6c9c63a0":"markdown","1ab14fa6":"markdown","a7dd5b5e":"markdown","287a8040":"markdown","ac6db63f":"markdown","64c190cd":"markdown","a7cf4892":"markdown","5b591f58":"markdown","667dfc5e":"markdown","8585d843":"markdown","1e24dce9":"markdown","88be6afb":"markdown","eb36983b":"markdown"},"source":{"25b0f9cc":"# Maths\n1 + 1","61891c1d":"# strings -> text\n'This is a string'","3d73c52f":"# floats -> Maths with dots\n4.9","301b08f0":"type(2)","d8e8c040":"type('example string')","89b6c68e":"type(4.2)","f77a7261":"# basic maths\n1 - 2","2442c4b0":"# Adding strings puts them together\n'foo' + 'bar'","de20f34f":"# Adding floats works\n1.2 + 5.2","1491fdd8":"# Bool <- true and false\ntype(True), type(False)","489dd5ad":"print(5 + 5)\nprint(2 + 2)\nprint('dog')","6b449e44":"# 'foo' + 1  <-- this gives an error\n\n# Example 1 string and int\nprint('foo' + str(4))\n\n# Example 2 string and int\nprint('foo' + str(4.2))","d6749cbe":"print(type(float(5)))\nprint(float(5))","0b138300":"#     <------\n# myname = 5\ntest = 5\nprint(test)\nprint(type(test))","4d2bdd5a":"# It keeps the last thing you named it\ntest = 5\ntest = 2\ntest = 99\ntest = 'foo'\nprint(test)","e40290d9":"test = 1\nprint(test + 50)","208309d8":"# test is a string here and it won't work\n# This will error\n# print('test' + 50)","bca6fd55":"# lists are just a list of objects\n[1, 2, 3, 4] # A list of ints","2ae0f5c5":"['foo', 'bar', 'foo', 'bar'] # A list of strings","c8199a04":"[4.2, 5.2, 5.5] # A list of floats","4ac29a5e":"# How the computer thinks\n# 000000000000000001 <- 1 in binary\n# 000000000000000010 <- 2 in binary\n# 000000000000000011 <- 3 in binary","6f9c3a57":"[4.2, 'foo', 5, 'bar'] # <- list of objects","faca0c47":"mylist = [5, 4, 3, 2, 1]","b6e43ebc":"myval = mylist.pop()","b68d5868":"print(myval)\nprint(mylist)","7524db40":"mylist.append(1)","1c393a3f":"print(mylist)","c97492d3":"print(1 + 1) # ints add\nprint('foo' + 'bar') # strings join\n","a25d9e4e":"# What about lists?\n# Adding lists\nmylist1 = [1, 2, 3, 4]\nmylist2 = [5, 6, 7, 8]\nnewlist = mylist1 + mylist2\nprint(newlist)","d378f5dd":"# Remember in python we count from zero!\n# 0 is the first thing.... 1 is the next\nnewlist[3]","d6be40f7":"anotherlist = ['zebra', 'taco', 'man', 'woman', 'camera', 'tv']","8157ffa2":"anotherlist[4]","aef00049":"# To find out how long a list is\nlen(newlist)","a16ed677":"len(['test', 'this', 'thing'])\n\nprint(len('test this thing'))","623af8ef":"mystring = 'test This thing'\nmystring[5]","ad247280":"['test', 'this', 1, 2, 3] + [2, 5]","1799b97b":"[mylist, mylist, mylist]","9d9c3d2c":"(2, 1)","54037910":"('50', 10)","62722a75":"(5, 1000, 5.5)","88cac42d":"type((2, 1))","0ae729e8":"(2, 1) + ('foo', 'bar')","bf10a752":"len((2, 5, 3))","41097194":"# Dicts store things in the format:\n# keys and values\nmydict = {'foo': 1, 'bar': 2}","3be9c202":"thislist = ['ahh', 'this', 'is', 'a', 'thing']\nthislist[2]","b085a62b":"temp_dict = {'Alaska': -100, 'Hawaii': 100}\ntemp_dict['Hawaii'] = 99\nprint(temp_dict)","68baec17":"print('\\t test')","357418c7":"mylist = [1, 2, 3, 4, 5]\n# A for loop\nfor x in mylist:\n    # Very important in python is indentation\n    print(x)","65bc3108":"mydict = {'foo': 55, 'bar': 99}\nfor (key, value) in mydict.items():\n    print('my key is:')\n    print(key)\n    print('my value is:')\n    print(value)\n    mydict[key] += 1\nprint(mydict)","b7405286":"# Enumerate is powerful!\nmylist = [1, 2, 3, 4, 5]\n# A for loop\nfor i, x in enumerate(mylist):\n    # Very important in python is indentation\n    print('index location:')\n    print(i)\n    print('value at that location')\n    print(x)","5fdf3852":"type(5 > 2)","f300f462":"x = 'apple'\ny = 'banana'\nz = 'cherry'\nk = 'Apple'\nprint(y > x) #True\nprint(y > z) #False\nprint(x > k) #True","21456f72":"mymoney = 0\nyourmoney = 50\n\nif mymoney > yourmoney:\n    # do stuff if it's true\n    print('Im rich')\nelse:\n    print('Im poor')","1a5b8e1d":"mymoney = 0\nyourmoney = 50\n\nif mymoney > yourmoney:\n    # do stuff if it's true\n    print('Im rich')\nelif mymoney == yourmoney:\n    print('we are even')\nelse:\n    print('Im poor')","3474cf14":"def myfunction(instuff):\n    outstuff = instuff + 1\n    return outstuff","76c0850d":"myfunction(500)","61877602":"'this' + str(1)","16d2f46c":"f'This is a fancy dancy fstring {1} - {2.5} - {mydict[\"foo\"]}'","491e329c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pylab as plt","701aacba":"pd.__version__","d3d30f3c":"np.__version__","f6922e07":"myarray = np.array([[1, 2, 3], [3, 5, 6]])\nprint(myarray)","622ecb76":"myarray + myarray","5bdcd414":"# dicts are lists with names","21c7ab73":"# Storing things as variables","73bb46f2":"# Things you can do with these types","ee51bede":"# Tuple is a list but less fancy","6c9c63a0":"# How to Python\n\nTalking on twitch stream about python basics.\n\nStreamed on: https:\/\/www.twitch.tv\/medallionstallion_","1ab14fa6":"# Stuff to talk about later:\n## Functions\n## Reading in data","a7dd5b5e":"## elif","287a8040":"# You can print things","ac6db63f":"# Protip: Everything is an object in python","64c190cd":"# Lists and Dictionaries","a7cf4892":"## With lists you can `pop` and you can `append`","5b591f58":"# `if` statements are huge","667dfc5e":"# Cool things with strings","8585d843":"# The big packages for data science","1e24dce9":"## Int","88be6afb":"# Combine types","eb36983b":"# Looping or iterating over things is important"}}