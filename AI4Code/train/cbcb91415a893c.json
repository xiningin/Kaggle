{"cell_type":{"b54ac394":"code","4065853d":"code","220ad570":"code","9b1ba11a":"code","3baff4ca":"code","51affb4b":"code","248a980a":"code","a3007ca3":"code","aa492ee3":"code","9ba4d02d":"code","d62c2ebf":"code","eed48f9c":"code","e24260ff":"code","88ce36fa":"code","93af0d21":"code","8e2e9f41":"code","e4b34ba3":"code","cadcf6af":"code","43e38bc0":"code","70fec25f":"code","7fe8153d":"code","50435156":"code","e8b83930":"code","0e4a102b":"code","6b562482":"code","8d98936b":"code","d4232009":"code","36d95569":"code","dd2c1055":"code","0620689b":"code","8ebc3408":"code","468b8cc2":"code","f6b8ce8c":"code","a4f10de7":"code","16e64a8b":"code","d56033c5":"code","21ccb657":"code","0541e066":"code","de72e7bf":"code","b20b747b":"code","c2fc9d93":"code","3b649266":"code","3e907c7d":"code","30fab8ad":"code","5c1a7fb2":"code","2c91c558":"code","cb06f5fc":"code","1db706a7":"code","b670ad1e":"code","2bee134d":"code","1cb16a8a":"code","b5299bd1":"code","c2198ef2":"code","d569f98c":"code","4181973f":"code","ec854bfb":"code","61fb2161":"code","794c4f6c":"code","9928cfa6":"code","000fce6f":"code","8624d480":"code","3204c497":"code","755c2a5a":"code","36fd7177":"code","25009178":"code","39e2e385":"code","38afc0b0":"code","bac1b468":"code","d3d7a558":"code","e86d4a57":"markdown","67729111":"markdown","840f46f8":"markdown","09714f3a":"markdown","b618553c":"markdown","9d472d79":"markdown","6bc3a3f4":"markdown","d446b94f":"markdown","8eec4f58":"markdown","e8095618":"markdown","be824ceb":"markdown","97ed794b":"markdown","3cdfdf3f":"markdown","c48a4f60":"markdown","15d8d12e":"markdown","08a5c935":"markdown","f41182c8":"markdown","8c934537":"markdown"},"source":{"b54ac394":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4065853d":"df_train=pd.read_csv('..\/input\/predict-closed-questions-on-stack-overflow\/train-sample.csv')\ndf_train.head()","220ad570":"df_train.shape","9b1ba11a":"from sklearn.model_selection import train_test_split\ntrain_df,test_df=train_test_split(df_train,test_size=0.2)\nprint('Training data shape: {}'.format(train_df.shape))\nprint('Testing data shape: {}'.format(test_df.shape))\n","3baff4ca":"train_post_id=train_df.PostId\ntest_post_id=test_df.PostId","51affb4b":"train_df.drop(['PostCreationDate'],axis=1,inplace=True)\ntest_df.drop(['PostCreationDate'],axis=1,inplace=True)","248a980a":"train_df.head(2)","a3007ca3":"train_df['PostCount']=[1]*len(train_df['PostId'])","aa492ee3":"pd.pivot_table(train_df,index='OwnerUserId',columns='OpenStatus',values='PostCount',aggfunc='sum')","9ba4d02d":"train_df.loc[train_df['OpenStatus']=='open','OwnerUserId'].value_counts()","d62c2ebf":"train_df.drop(['OwnerUserId'],axis=1,inplace=True)\ntest_df.drop(['OwnerUserId'],axis=1,inplace=True)","eed48f9c":"df_train['ReputationAtPostCreation'].min()","e24260ff":"df_train['ReputationAtPostCreation'].max()","88ce36fa":"minimum=df_train['ReputationAtPostCreation'].min()\nmaximum=df_train['ReputationAtPostCreation'].max()","93af0d21":"train_df['ReputationAtPostCreation']=(train_df['ReputationAtPostCreation']-minimum)\/(maximum-minimum)","8e2e9f41":"test_df['ReputationAtPostCreation']=(test_df['ReputationAtPostCreation']-minimum)\/(maximum-minimum)","e4b34ba3":"train_df.OwnerUndeletedAnswerCountAtPostTime.value_counts()","cadcf6af":"train_df.drop(['OwnerUndeletedAnswerCountAtPostTime'],axis=1,inplace=True)\ntest_df.drop(['OwnerUndeletedAnswerCountAtPostTime'],axis=1,inplace=True)","43e38bc0":"train_df.drop(['PostClosedDate'],axis=1,inplace=True)\ntest_df.drop(['PostClosedDate'],axis=1,inplace=True)","70fec25f":"train_df['Tag1'].isnull().sum()","7fe8153d":"test_df['Tag1'].isnull().sum()","50435156":"train_df['Tag1']=train_df['Tag1'].replace(np.nan,' ')","e8b83930":"train_df['Tag2']=train_df['Tag2'].replace(np.nan,' ')\ntrain_df['Tag3']=train_df['Tag3'].replace(np.nan,' ')\ntrain_df['Tag4']=train_df['Tag4'].replace(np.nan,' ')\ntrain_df['Tag5']=train_df['Tag5'].replace(np.nan,' ')","0e4a102b":"test_df['Tag1']=test_df['Tag1'].replace(np.nan,' ')\ntest_df['Tag2']=test_df['Tag2'].replace(np.nan,' ')\ntest_df['Tag3']=test_df['Tag3'].replace(np.nan,' ')\ntest_df['Tag4']=test_df['Tag4'].replace(np.nan,' ')\ntest_df['Tag5']=test_df['Tag5'].replace(np.nan,' ')","6b562482":"train_df['Tag1']","8d98936b":"train_df['Tags']=train_df['Tag1']+' '+train_df['Tag2']+' '+train_df['Tag3']+' '+train_df['Tag4']+' '+train_df['Tag5']","d4232009":"test_df['Tags']=test_df['Tag1']+' '+test_df['Tag2']+' '+test_df['Tag3']+' '+test_df['Tag4']+' '+test_df['Tag5']","36d95569":"train_df['Tags']=train_df['Tags'].str.lower()","dd2c1055":"test_df['Tags']=test_df['Tags'].str.lower()","0620689b":"test_df['Tags']","8ebc3408":"train_df['Tags']=train_df['Tags'].apply(lambda x:x.lstrip())\ntrain_df['Tags']=train_df['Tags'].apply(lambda x:x.rstrip())\n","468b8cc2":"train_df['Tags']","f6b8ce8c":"test_df['Tags']=test_df['Tags'].apply(lambda x:x.lstrip())\ntest_df['Tags']=test_df['Tags'].apply(lambda x:x.rstrip())","a4f10de7":"train_df.head(1)","16e64a8b":"# Dropping excess columns \ntrain_df.drop(['PostId','OwnerCreationDate','Tag1','Tag2','Tag3','Tag4','Tag5','PostCount'],axis=1,inplace=True)\ntest_df.drop(['PostId','OwnerCreationDate','Tag1','Tag2','Tag3','Tag4','Tag5'],axis=1,inplace=True)","d56033c5":"train_df.head()","21ccb657":"test_df.head()","0541e066":"y_train=train_df['OpenStatus']\ny_test=test_df['OpenStatus']","de72e7bf":"train_df.drop(['ReputationAtPostCreation','OpenStatus'],axis=1,inplace=True)\ntest_df.drop(['ReputationAtPostCreation','OpenStatus'],axis=1,inplace=True)","b20b747b":"y_train=y_train.map({'not a real question':0,\n  'not constructive':1,\n  'off topic':2,\n  'open':3,\n  'too localized':4})","c2fc9d93":"y_test=y_test.map({'not a real question':0,\n  'not constructive':1,\n  'off topic':2,\n  'open':3,\n  'too localized':4})","3b649266":"train_df.head()","3e907c7d":"test_df.head()","30fab8ad":"train_df['Text']=train_df['Title']+' '+train_df['BodyMarkdown']+' '+train_df['Tags']\ntest_df['Text']=test_df['Title']+' '+test_df['BodyMarkdown']+' '+test_df['Tags']","5c1a7fb2":"train_df.drop(['Title','BodyMarkdown','Tags'],axis=1,inplace=True)\ntest_df.drop(['Title','BodyMarkdown','Tags'],axis=1,inplace=True)","2c91c558":"train_df.reset_index(inplace=True)\ntest_df.reset_index(inplace=True)","cb06f5fc":"train_df.drop(['index'],inplace=True,axis=1)","1db706a7":"test_df.drop(['index'],axis=1,inplace=True)","b670ad1e":"from tensorflow.keras.preprocessing.text import Tokenizer\nmax_words=10000\ntokenizer=Tokenizer(max_words)\ntokenizer.fit_on_texts(train_df['Text'])\nsequence_train=tokenizer.texts_to_sequences(train_df['Text'])\nsequence_test=tokenizer.texts_to_sequences(test_df['Text'])","2bee134d":"word_2_vec=tokenizer.word_index\nV=len(word_2_vec)\nprint('Dataset has {} number of independent tokens'.format(V))","1cb16a8a":"from tensorflow.keras.preprocessing.sequence import pad_sequences\ndata_train=pad_sequences(sequence_train)\ndata_train.shape","b5299bd1":"T=data_train.shape[1]\ndata_test=pad_sequences(sequence_test,maxlen=T)\ndata_test.shape\n","c2198ef2":"from tensorflow.keras.layers import Input,Conv1D,MaxPooling1D,Dense,GlobalMaxPooling1D,Embedding\nfrom tensorflow.keras.models import Model\nD=20\ni=Input((T,))\nx=Embedding(V+1,D)(i)\nx=Conv1D(32,3,activation='relu')(x)\nx=MaxPooling1D(3)(x)\nx=Conv1D(64,3,activation='relu')(x)\nx=MaxPooling1D(3)(x)\nx=Conv1D(128,3,activation='relu')(x)\nx=GlobalMaxPooling1D()(x)\nx=Dense(5,activation='softmax')(x)\nmodel=Model(i,x)\nmodel.summary()","d569f98c":"model.compile(loss='sparse_categorical_crossentropy',optimizer='adam',metrics=['accuracy'])\ncnn_senti=model.fit(data_train,y_train,validation_data=(data_test,y_test),batch_size=100,epochs=5)","4181973f":"model.predict(data_test)","ec854bfb":"y_pred=model.predict(data_test)","61fb2161":"y_pred_final=np.argmax(y_pred,axis=1)\ny_pred_final","794c4f6c":"from sklearn.metrics import confusion_matrix,classification_report\nimport seaborn as sns","9928cfa6":"cm=confusion_matrix(y_test,y_pred_final)\nax=sns.heatmap(cm,cmap='Blues',annot=True,fmt=' ')\nax.set_title('Confusion Matrix')\nax.set_xlabel('Y Test')\nax.set_ylabel('Y Pred')","000fce6f":"print(classification_report(y_test,y_pred_final))","8624d480":"df_submission=pd.DataFrame(test_post_id,columns=['PostId'])\ndf_submission.head()","3204c497":"test_post_id.reset_index(drop=True)","755c2a5a":"df_submission_1=pd.DataFrame(y_pred,columns=[0,1,2,3,4])","36fd7177":"df_submission_1","25009178":"df_submission_1['PostId']=list(test_post_id)","39e2e385":"columns=['PostId',0,1,2,3,4]\ndf_submission_1=df_submission_1[columns]\ndf_submission_1","38afc0b0":"df_submission_1.columns","bac1b468":"df_submission_1['Sum']=df_submission_1[0]+df_submission_1[1]+df_submission_1[2]+df_submission_1[3]+df_submission_1[4]\n","d3d7a558":"df_submission_1","e86d4a57":"## OwnerUserId","67729111":"Since the data range is such high let us scale it using MinMaxScaler","840f46f8":"## OwnerUndeletedAnswerCountAtPostTime ","09714f3a":"As we have observed that it doesn't matter on the time the question is posted on its label thus we can just remove this column both from our train and test.","b618553c":"## PostCreationDate\n\nThe post creation date is the date and time on which the query was posted by the user let us see if we could make something out of this.","9d472d79":"# Exploratory Data Analysis","6bc3a3f4":"## Scoring","d446b94f":"## PostClosedDate","8eec4f58":"## Reputation at Post Created\n\nThis can be a important factor. Let's take a look at it","e8095618":"We see that it does not matter on the OwnerUserId whether his question is going to be open or not as there are many user whose only one question remain open \nSo, we would be dropping this column","be824ceb":"# Building the tensorflow model\n","97ed794b":"We can combine all the tags column into one this would help us in comparing the words which are used as tags and the words used in Title and Body.","3cdfdf3f":"This feature is the id of the query posted by the user. This feauture does not have any importance in making the prediction but it will be used later for submission we will save it.","c48a4f60":"This feature doesnot seem to be doing anything, we will be dropping it for now.","15d8d12e":"Dropping this column as post closed date does not seem to be doing anything, so we would be dropping it ","08a5c935":"This is the user id who posted the query. Let us check it","f41182c8":"## PostID","8c934537":"## Tag1"}}