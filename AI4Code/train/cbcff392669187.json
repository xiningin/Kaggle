{"cell_type":{"99a41be2":"code","5211ec0b":"code","fea78ee0":"code","102492b5":"code","85f907a4":"code","9cc60260":"code","7c00a1b7":"code","1a66f2ac":"code","29c750df":"code","acab6324":"code","8efbbd76":"code","8ad2c55c":"code","5cea3f6f":"code","ca914bde":"code","7cf57e90":"code","1c0f406e":"code","a6ac784d":"code","5ad05ec0":"code","ccfc25ae":"code","64065434":"code","b135c88d":"code","db56ea95":"code","957d63e0":"code","8a1afc7d":"markdown","2a937319":"markdown","cc62f1f5":"markdown","dfa14bf6":"markdown","ef21b835":"markdown","8923fec8":"markdown","dfd05371":"markdown","d2416553":"markdown","c53f2802":"markdown","861fa1d8":"markdown","dd1c163c":"markdown","ef830a6f":"markdown","872e0f67":"markdown","e2b7ef7e":"markdown","428c461d":"markdown","44662d1e":"markdown","bd73dc8c":"markdown","35ac2e06":"markdown","a4dee513":"markdown","35720546":"markdown","6ac117aa":"markdown","797cce6e":"markdown","f4b63076":"markdown","4c046fcb":"markdown","08b7a3f1":"markdown","1b7528ec":"markdown","f9b0ce3b":"markdown"},"source":{"99a41be2":"! pip install calmap","5211ec0b":"# essential libraries\nimport random\nfrom datetime import timedelta  \n\n# storing and anaysis\nimport numpy as np\nimport pandas as pd\n\n# visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\nimport calmap\nimport folium\n\n# color pallette\ncnf, dth, rec, act = '#393e46', '#ff2e63', '#21bf73', '#fe9801' \n\n# converter\nfrom pandas.plotting import register_matplotlib_converters\nregister_matplotlib_converters()   \n\n# hide warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# html embedding\nfrom IPython.display import Javascript\nfrom IPython.core.display import display\nfrom IPython.core.display import HTML\n\n# plot wtih holoviews + datashader - bokeh with map background\nimport holoviews as hv\nimport geoviews as gv\nimport datashader as ds\nfrom colorcet import fire, rainbow, bgy, bjy, bkr, kb, kr\nfrom datashader.colors import colormap_select, Greys9\nfrom holoviews.streams import RangeXY\nfrom holoviews.operation.datashader import datashade, dynspread, rasterize\nfrom bokeh.io import push_notebook, show, output_notebook\noutput_notebook()\nhv.extension('bokeh')\nfrom folium import Marker,GeoJson,Choropleth, Circle\nfrom folium.plugins import HeatMap\nfrom folium.plugins import HeatMap, MarkerCluster\n%opts Overlay [width=800 height=600 toolbar='above' xaxis=None yaxis=None]\n%opts QuadMesh [tools=['hover'] colorbar=True] (alpha=0 hover_alpha=0.2)\n\nT = 0.05\nPX = 1\n","fea78ee0":"details= pd.read_csv('..\/input\/corona-virus-report\/covid_19_clean_complete.csv', parse_dates=['Date'])\ndetails.sample(6)","102492b5":"details.describe()","85f907a4":"details.info()","9cc60260":"details.isna().sum()","7c00a1b7":"cases = ['Confirmed', 'Deaths', 'Recovered', 'Active']\ndetails['total_cases']=details['Confirmed'] + details['Deaths'] + details['Recovered']\n# Active Case = confirmed - deaths - recovered\ndetails['Active'] = details['Confirmed'] - details['Deaths'] - details['Recovered']\n# replacing Mainland china with just China\ndetails['Country\/Region'] = details['Country\/Region'].replace('Mainland China', 'China')\n\n# filling missing values \ndetails[['Province\/State']] = details[['Province\/State']].fillna('')\ndetails[cases] = details[cases].fillna(0)\n\n# fixing datatypes\ndetails['Recovered'] = details['Recovered'].astype(int)\n\ndetails.sample(6)\n\n","1a66f2ac":"temp = details.groupby('Date')['Confirmed', 'Deaths', 'Recovered', 'Active'].sum().reset_index()\ntemp = temp[temp['Date']==max(temp['Date'])].reset_index(drop=True)\ntemp['Global Moratality'] = temp['Deaths']\/temp['Confirmed']\ntemp['Deaths per 100 Confirmed Cases'] = temp['Global Moratality']*100\ntemp.style.background_gradient(cmap='Pastel1')","29c750df":"full_latest = details[details['Date'] == max(details['Date'])].reset_index()\nfull_latest_grouped = full_latest.groupby('Country\/Region')['Confirmed', 'Deaths', 'Recovered', 'Active'].sum().reset_index()\ntemp_f = full_latest_grouped.sort_values(by='Confirmed', ascending=False)\ntemp_f = temp_f[['Country\/Region', 'Confirmed', 'Active', 'Deaths', 'Recovered']]\ntemp_f = temp_f.reset_index(drop=True)\n\ntemp_f.style.background_gradient(cmap=\"Blues\", subset=['Confirmed', 'Active'])\\\n            .background_gradient(cmap=\"Greens\", subset=['Recovered'])\\\n            .background_gradient(cmap=\"Reds\", subset=['Deaths'])\n","acab6324":"temp_flg = temp_f[temp_f['Deaths']>0][['Country\/Region', 'Deaths']]\ntemp_flg['Deaths \/ 100 Cases'] = round((temp_f['Deaths']\/temp_f['Confirmed'])*100, 2)\ntemp_flg.sort_values('Deaths', ascending=False).reset_index(drop=True).style.background_gradient(cmap='Reds')","8efbbd76":"# Confirmed\nfig = px.choropleth(full_latest_grouped, locations=\"Country\/Region\", \n                    locationmode='country names', color=np.log(full_latest_grouped[\"Confirmed\"]), \n                    hover_name=\"Country\/Region\", hover_data=['Confirmed'],\n                    color_continuous_scale=\"peach\", \n                    title='Countries with Confirmed Cases')\nfig.update(layout_coloraxis_showscale=False)\nfig.show()","8ad2c55c":"# Deaths\ntemp = full_latest_grouped[full_latest_grouped['Deaths']>0]\nfig = px.choropleth(temp, \n                    locations=\"Country\/Region\", locationmode='country names',\n                    color=np.log(temp[\"Deaths\"]), hover_name=\"Country\/Region\", \n                    color_continuous_scale=\"Peach\", hover_data=['Deaths'],\n                    title='Countries with Deaths Reported')\nfig.update(layout_coloraxis_showscale=False)\nfig.show()","5cea3f6f":"formated_gdf = details.groupby(['Date', 'Country\/Region'])['Confirmed', 'Deaths'].max()\nformated_gdf = formated_gdf.reset_index()\nformated_gdf['Date'] = pd.to_datetime(formated_gdf['Date'])\nformated_gdf['Date'] = formated_gdf['Date'].dt.strftime('%m\/%d\/%Y')\nformated_gdf['size'] = formated_gdf['Confirmed'].pow(0.3)\n\nfig = px.scatter_geo(formated_gdf, locations=\"Country\/Region\", locationmode='country names', \n                     color=\"Confirmed\", size='size', hover_name=\"Country\/Region\", \n                     range_color= [0, max(formated_gdf['Confirmed'])+2], animation_frame=\"Date\", \n                     title='Spread over time')\nfig.update(layout_coloraxis_showscale=False)\nfig.show()","ca914bde":"formated_gdf = details.groupby(['Date', 'Country\/Region'])['Recovered', 'Deaths'].max()\nformated_gdf = formated_gdf.reset_index()\nformated_gdf['Date'] = pd.to_datetime(formated_gdf['Date'])\nformated_gdf['Date'] = formated_gdf['Date'].dt.strftime('%m\/%d\/%Y')\nformated_gdf['size'] = formated_gdf['Recovered'].pow(0.3)\n\nfig = px.scatter_geo(formated_gdf, locations=\"Country\/Region\", locationmode='country names', \n                     color=\"Recovered\", size='size', hover_name=\"Country\/Region\", \n                     range_color= [0, max(formated_gdf['Recovered'])+2], animation_frame=\"Date\", \n                     title='Recovery over time')\nfig.update(layout_coloraxis_showscale=False)\nfig.show()","7cf57e90":"full_latest_grouped = full_latest.groupby('Country\/Region')[ 'Confirmed', 'Deaths', 'Recovered','Active','Lat','Long'].sum().reset_index()","1c0f406e":"full_latest_grouped.head()","a6ac784d":"# Create a map\nm = folium.Map(location=[54, 15], tiles='openstreetmap', zoom_start=2)\n\n# Add points to the map\nfor idx, row in full_latest_grouped.iterrows():\n    Marker([row['Lat'], row['Long']], popup=row['Confirmed']).add_to(m)\n\n# Display the map\nm","5ad05ec0":"# Create a map\nm = folium.Map(location=[54, 15], tiles='openstreetmap', zoom_start=2)\n\n# Add points to the map\nfor idx, row in full_latest_grouped.iterrows():\n    Marker([row['Lat'], row['Long']], popup=row['Recovered']).add_to(m)\n\n# Display the map\nm","ccfc25ae":"# Create a map\nm = folium.Map(location=[54, 15], tiles='openstreetmap', zoom_start=2)\n\n# Add points to the map\nfor idx, row in full_latest_grouped.iterrows():\n    Marker([row['Lat'], row['Long']], popup=row['Deaths']).add_to(m)\n\n# Display the map\nm","64065434":"# Create map with release incidents and monitoring stations\nm = folium.Map(location=[54,15], zoom_start=2)\nHeatMap(data=full_latest_grouped[['Lat', 'Long']], radius=15).add_to(m)\n\n# Show the map\nm","b135c88d":"import math\nm = folium.Map(location=[54,15], tiles='cartodbpositron', zoom_start=2)\n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in full_latest_grouped.iterrows():\n    if not math.isnan(row['Long']) and not math.isnan(row['Lat']):\n        mc.add_child(Marker([row['Lat'], row['Long']]))\nm.add_child(mc)\n\n# Display the map\nm","db56ea95":"# Create map with overall cases registered\nm = folium.Map(location=[54,15], zoom_start=2)\nHeatMap(data=details[['Lat', 'Long']], radius=15).add_to(m)\n\n# Show the map\nm","957d63e0":"import math\nm = folium.Map(location=[54,15], tiles='cartodbpositron', zoom_start=2)\n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in details.iterrows():\n    if not math.isnan(row['Long']) and not math.isnan(row['Lat']):\n        mc.add_child(Marker([row['Lat'], row['Long']]))\nm.add_child(mc)\n\n# Display the map\nm","8a1afc7d":"If we do not Stay at home or doesnt take any precautions, it will leave a greater impact on our lives effecting various factors like stock markets, revenue, jobs, taxes, High rates ....etc","2a937319":"# Reading Data","cc62f1f5":"The spread is very fast. It started in China and spread to the complete world","dfa14bf6":"These are the Total number cases registered till date in respective regions through out the world","ef21b835":"**Please Upvote If you like this Notebook and keep me motivated**","8923fec8":"In these places the effect is more. The people from italy, Us, Spain,Chain, France, Germany must take more care. This is based only on the past day alone","dfd05371":"If the same situation continues We will loose the hands, We have to definitely follow certain Precautions","d2416553":"# Basic EDA","c53f2802":"Lets be a responsible citigen and follow these. ","861fa1d8":"By seeing this map, we get the total count of cases through the world registered in the past day alone","dd1c163c":"In these regions the effect of corona virus is more till date. Countries like italy, China,Spain, France, US are suffering a lot.","ef830a6f":"# Geospatial Analysis","872e0f67":"This notebook will be **Updated for every 24hrs** and you can see the latest visualization each day. You will see this notebook updated until corona virus cases are completely vanished","e2b7ef7e":"# STAY AT HOME AND DO KAGGLE","428c461d":"Across World","44662d1e":"Deaths are from these marked placesin the past day alone","bd73dc8c":"By seeing the above map we can conclude that almost all the countries are suffering with this issue except Green Land and very some states in some countries","35ac2e06":"![image.png](attachment:image.png)","a4dee513":"# Country Wise data","35720546":"These are places which cases are Confirmed recently through the world in the past day alone","6ac117aa":"From above interactive map we can say that recovery is very slow as compared to the spread.","797cce6e":"Lets all see this cases dropdown by sitting in home and by making this analysis","f4b63076":"# Introduction","4c046fcb":"People from these places are recovered from corona virus in the past day alone","08b7a3f1":"**The only thing we can do is prevention. We have to follow some precautions: **\n1. HANDS Wash them often\n2. ELBOW Cough into it\n3. FACE Don't touch it\n4. SPACE Keep safe distance\n5. HOME Stay if you can","1b7528ec":"# Importing Necessary Packages","f9b0ce3b":"Coronavirus disease (COVID-19) is an infectious disease caused by a newly discovered coronavirus.\n\nMost people infected with the COVID-19 virus will experience mild to moderate respiratory illness and recover without requiring special treatment.  Older people, and those with underlying medical problems like cardiovascular disease, diabetes, chronic respiratory disease, and cancer are more likely to develop serious illness.\n\nThe best way to prevent and slow down transmission is be well informed about the COVID-19 virus, the disease it causes and how it spreads. Protect yourself and others from infection by washing your hands or using an alcohol based rub frequently and not touching your face. \n\nThe COVID-19 virus spreads primarily through droplets of saliva or discharge from the nose when an infected person coughs or sneezes, so it\u2019s important that you also practice respiratory etiquette (for example, by coughing into a flexed elbow).\n\nAt this time, there are no specific vaccines or treatments for COVID-19. However, there are many ongoing clinical trials evaluating potential treatments. WHO will continue to provide updated information as soon as clinical findings become available.\n\nStay informed:\n\nProtect yourself: advice for the public\nMyth busters\nQuestions and answers\nSituation reports\nAll information on the COVID-19 outbreak"}}