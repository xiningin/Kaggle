{"cell_type":{"bb5a049d":"code","d4345eb8":"code","150531d7":"code","1cc6bb9d":"code","bb65da40":"code","278499c1":"code","c97314be":"code","698de1ce":"code","090d6f89":"code","cc98e2a8":"code","5903da7f":"code","86500d8d":"code","64ec9341":"markdown","ddf23048":"markdown","bc560d06":"markdown","890b2dad":"markdown","56b4ee4e":"markdown"},"source":{"bb5a049d":"! tree ..","d4345eb8":"%%time\n!pip uninstall pytorch-lightning -qqq -y\n!pip install pytorch-lightning==1.5.5 -qqq \n!pip install wandb --upgrade -qqq\n\nimport sys,os\nsys.path.append(\"\/kaggle\/input\/tmptmptmp\")\nfrom my_module import *\ndir_path=\"\/kaggle\/input\/tmptmptmp\/my_module\"\nconfig_ini = configparser.ConfigParser()\nconfig_ini.optionxform = str\nconfig_ini.read(os.path.join(dir_path,'config.ini'), encoding='utf-8')\nvar1 = config_ini['DEFAULT']\nfor_save=\"\"\nfor i,u in var1.items():\n    for_save+=f\"{i}({type(eval(u))}) : {u}\\n\"\n    globals()[i]=eval(u)\nprint(for_save)","150531d7":"train_df = pd.read_csv(train_path)\ntest_df = pd.read_csv(test_path)","1cc6bb9d":"print(train_df.isnull().values.sum() != 0)\nprint(test_df.isnull().values.sum() != 0)","bb65da40":"[print(i,end=\", \") for i in set(train_df[\"label\"].tolist())]\nTrue","278499c1":"my_visualize.compare([train_df,test_df],partial(my_visualize.count_label,label=\"label\"))","c97314be":"x_train, y_train = my_preprocessing.to_input(train_df)\nx_test, y_test = my_preprocessing.to_input(test_df)","698de1ce":"my_visualize.plot_sample(x_train,y_train)","090d6f89":"X_train, X_valid, Y_train, Y_valid = train_test_split(x_train, y_train, test_size=0.33, random_state=SEED)\ntrain_dataset=my_preprocessing.Mydatasets(X_train,Y_train,transform=my_preprocessing.transform_train)\ntrainloader = torch.utils.data.DataLoader(train_dataset, batch_size = 64, shuffle = True, num_workers = 1)\nvalid_dataset=my_preprocessing.Mydatasets(X_valid,Y_valid,transform=my_preprocessing.transform_dict[\"test\"])\nvalidloader = torch.utils.data.DataLoader(valid_dataset, batch_size = 64, shuffle = True, num_workers = 1)","cc98e2a8":"my_visualize.compare([Y_train,Y_valid],partial(my_visualize.count_label,label=\"label\"))","5903da7f":"my_models.set_seed(42)\nfor _ in range(2):\n    for one_iteration in trainloader:\n        xs,ys=one_iteration\n        for (x,y) in zip(xs,ys):\n            print(x.shape, y)\n            break\n        break\n    my_visualize.plot_sample(xs,ys)","86500d8d":"my_models.set_seed(42)\nfor _ in range(2):\n    for one_iteration in validloader:\n        xs,ys=one_iteration\n        for (x,y) in zip(xs,ys):\n            print(x.shape, y)\n            break\n        break\n    my_visualize.plot_sample(xs,ys)","64ec9341":"# 1. \u6b20\u640d\u5024\u306e\u78ba\u8a8d","ddf23048":"# Import module","bc560d06":"# 2. split into valid and train","890b2dad":"J\u3068Z\u306f\u52d5\u304d\u3092\u8981\u3059\u308b\u624b\u8a71\u306e\u305f\u3081,\u6539\u3081\u3066\u306a\u3044\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059.","56b4ee4e":"\u6b20\u640d\u5024\u306f\u306a\u3044\u3067\u3059."}}