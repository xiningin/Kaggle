{"cell_type":{"050e0692":"code","d3bc63da":"code","0cb9de5b":"code","1aa57bb0":"code","4e126a45":"code","bef70656":"code","ab711002":"code","fc4a9e4b":"code","b6c6ac60":"code","2183bcfa":"code","218ccf78":"code","0c71029c":"code","0df541e1":"code","36de3a1b":"code","9217087e":"code","2262d3db":"code","e9f030fd":"code","ba1653a7":"code","17d38d8e":"code","6d0a2356":"code","af822dff":"markdown","15b7db36":"markdown"},"source":{"050e0692":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport datetime\nfrom fbprophet import Prophet\nfrom sklearn.metrics import mean_absolute_error\nfrom matplotlib.cbook import boxplot_stats","d3bc63da":"parser = (lambda x:datetime.datetime.strptime(x, '%Y.%m.%d')) \ndf = pd.read_csv('..\/input\/sp-beaches-update\/sp_beaches_update.csv', parse_dates=['Date'])\ndf.head()","0cb9de5b":"print(f'Numero de praias: {len(df.Beach.unique())}') \nprint(f'Numero de cidades: {len(df.City.unique())}')\nprint('Dados de: {} at\u00e9 {}'.format(df.Date.min().year, df.Date.max().year ))\nprint(df.isnull().sum(axis=0)) \ndf.info() # Nao tem dados faltando","1aa57bb0":"df2=df.loc[~df['Enterococcus'].isnull()]\ndf2.info()","4e126a45":"\nplt.figure(figsize=(30,10))\nsns.boxplot(y=df['Enterococcus'], x=df['Beach'])","bef70656":"for city in df.City.unique():\n   # print(df.loc[df['City']==city])\n    plt.figure(figsize=(30,5))\n    sns.boxplot(y=df['Enterococcus'], x=df.loc[df['City']==city]['Beach']).set_title(city)\n#df.loc[df['Beach']==\"PULSO\"].loc[df['City']==\"BERTIOGA\"]","ab711002":"df_pivot = df.sort_values(by=['Date'])\nfor city in df_pivot.City.unique():\n    df_city = df_pivot.loc[df_pivot['City']==city].pivot( index='Date', columns='Beach', values='Enterococcus').fillna(0)\n    df_city.plot(figsize=(30,5), title=city)\n    x_coordinates= [df_pivot.loc[df_pivot['City']==city]['Date'].min(), df_pivot.loc[df_pivot['City']==city]['Date'].max()]\n    y_coordinates100= [100,100]\n    plt.plot(x_coordinates, y_coordinates100,'r--')\n    y_coordinates400= [400,400]\n    plt.plot(x_coordinates, y_coordinates400,'k--')\n    \n#df_pivot = df_pivot.dropna(subset=['Date'])\n#df_pivot.loc[df_pivot['Date'].isnull()]\n#df_pivot = df_pivot.loc[df_pivot['City']==\"SANTOS\"].pivot( index='Date', columns='Beach', values='Enterococcus').fillna(0)\n#df_pivot\n#df_pivot.plot(figsize=(30,10))","fc4a9e4b":"df2_limpo = df2.sort_values(by=['Date'])\n#remover a praia do Leste, da cidade de iguape, pois esta praia sumiu por eros\u00e3o em 2012\n#remover a Lagoa Prumirim, da cidade de Ubatuba, pois esta praia possui somente 3 medi\u00e7\u00f5es\ndf2_limpo = df2_limpo.loc[df2_limpo['Beach']!='DO LESTE'].loc[df2_limpo['Beach']!='LAGOA PRUMIRIM']","b6c6ac60":"# prepare expected column names\n#df2_pereque = df2_limpo.loc[df2_limpo['City']==\"GUARUJ\u00c1\"].loc[df2_limpo['Beach']==\"PEREQU\u00ca\"][['Date','Enterococcus']]\ncidade=\"UBATUBA\"\npraia=\"GRANDE\"\ntest_size=5\n\ndf2_beach = df2_limpo.loc[df2_limpo['City']==cidade].loc[df2_limpo['Beach']==praia][['Date','Enterococcus']]\ndf2_beach.columns = ['ds', 'y']\ndf2_beach\n\n","2183bcfa":"\npre_beach_plot =df2_limpo.loc[df2_limpo['City']==cidade].loc[df2_limpo['Beach']==praia][['Date','Beach','Enterococcus']]\nbeach_plot=pre_beach_plot.pivot( index='Date', columns='Beach', values='Enterococcus')\nbeach_plot\nbeach_plot.plot(figsize=(30,5), title=praia)\nx_coordinates= [pre_beach_plot['Date'].min(), pre_beach_plot['Date'].max()]\ny_coordinates100= [100,100]\nplt.plot(x_coordinates, y_coordinates100,'r--')\ny_coordinates400= [400,400]\nplt.plot(x_coordinates, y_coordinates400,'k--')\nwhisker_upper = boxplot_stats(df2_beach['y']).pop(0)['whishi']\nprint(whisker_upper)\ny_coordinates_whisker_upper = [whisker_upper,whisker_upper]\nplt.plot(x_coordinates, y_coordinates_whisker_upper,'b--')","218ccf78":"# define the model\nmodel = Prophet()\n# fit the model\nmodel.fit(df2_beach)\n","0c71029c":"# define the period for which we want a prediction\nfuture = list()\nfor i in range(1, 13):\n\tdate = '2020-%02d' % i\n\tfuture.append([date])\nfuture = pd.DataFrame(future)\nfuture.columns = ['ds']\nfuture['ds']= pd.to_datetime(future['ds'])\nfuture","0df541e1":"# use the model to make a forecast\nforecast = model.predict(future)\n# summarize the forecast\nprint(forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].head())\n# plot forecast\nmodel.plot(forecast)\nx_coordinates= [df2_beach['ds'].min(), forecast['ds'].max()]\ny_coordinates100= [100,100]\nplt.plot(x_coordinates, y_coordinates100,'r--')\ny_coordinates400= [400,400]\nplt.plot(x_coordinates, y_coordinates400,'k--')\nwhisker_upper = boxplot_stats(df2_beach['y']).pop(0)['whishi']\nprint(whisker_upper)\ny_coordinates_whisker_upper = [whisker_upper,whisker_upper]\nplt.plot(x_coordinates, y_coordinates_whisker_upper,'b--')\nplt.show()\n","36de3a1b":"# create test dataset, remove last test_siz measurements\n\ntrain = df2_beach.loc[df2_beach.index[1:len(df2_beach.index)-test_size]]\n#print(train.tail())\ntrain","9217087e":"# define the model\nmodel2 = Prophet()\n# fit the model\nmodel2.fit(train)","2262d3db":"future2=df2_beach.loc[df2_beach.index[-test_size:]]['ds']\nfuture2 = pd.DataFrame(future2)\nfuture2.columns = ['ds']\nfuture2['ds'] = pd.to_datetime(future2['ds'])\nfuture2","e9f030fd":"forecast2 = model.predict(future2)\nforecast2","ba1653a7":"# calculate MAE between expected and predicted values \ny_true = df2_beach['y'][-test_size:].values\ny_pred = forecast2['yhat'].values\nmae = mean_absolute_error(y_true, y_pred)\nprint('MAE: %.3f' % mae)","17d38d8e":"# plot expected vs actual\nplt.plot(y_true, label='Actual')\nplt.plot(y_pred, label='Predicted')\nplt.legend()\nplt.show()","6d0a2356":"# summarize the forecast\nprint(forecast2[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].head())\n# plot forecast\nmodel.plot(forecast2)\nx_coordinates= [df2_beach['ds'].min(), forecast['ds'].max()]\ny_coordinates100= [100,100]\nplt.plot(x_coordinates, y_coordinates100,'r--')\ny_coordinates400= [400,400]\nplt.plot(x_coordinates, y_coordinates400,'k--')\nwhisker_upper = boxplot_stats(train['y']).pop(0)['whishi']\nprint(whisker_upper)\ny_coordinates_whisker_upper = [whisker_upper,whisker_upper]\nplt.plot(x_coordinates, y_coordinates_whisker_upper,'b--')\nplt.show()","af822dff":"## Le dados e converte a coluna Date para datetime ","15b7db36":"## Explorar dados "}}