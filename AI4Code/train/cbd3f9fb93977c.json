{"cell_type":{"5be5769d":"code","a626574d":"code","55f67f1b":"code","65b9ed11":"code","27216f18":"code","17796775":"code","7a9d4dfb":"code","ab68ea19":"code","30aa6494":"code","43e62b52":"code","d63ed757":"code","0cb6d429":"code","4151a1bb":"code","d0bdb419":"code","74e93f6e":"code","4d5b90cc":"code","881999fd":"code","f8b58ec0":"code","0bcbfb7c":"code","d2b5c0f7":"code","a300b55b":"code","9bf4ddfb":"code","a368d0f0":"code","a766c1bd":"code","72591783":"code","af4118e0":"markdown","3c956982":"markdown","8241b621":"markdown"},"source":{"5be5769d":"import os\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","a626574d":"%%time\ntrade_df=pd.read_parquet('..\/input\/optiver-realized-volatility-prediction\/trade_train.parquet')\ntrade_df.head()","55f67f1b":"train_df=pd.read_csv('..\/input\/optiver-realized-volatility-prediction\/train.csv')\ntrain_df.head()","65b9ed11":"print(\"Number Of Trade Records:\", len(trade_df))\nprint(\"Number Of Trade timeds:\", len(trade_df[['stock_id', 'time_id']].drop_duplicates()))\n\n","27216f18":"num_stocks=trade_df.stock_id.nunique()\nnum_times=trade_df.time_id.nunique()\nscarce_percent=1- len(trade_df)\/(num_stocks * num_times * 600)\n\nprint(\"Number Of Stocks:\", num_stocks)\nprint(\"Scarcity Percentage:{:.4f}\".format( scarce_percent ))\nprint(\"Expected Number of trade records per stock:{:.4f}\".format((1-scarce_percent) * 600))","17796775":"len(trade_df[(trade_df.stock_id==1) & (trade_df.time_id==5)])","7a9d4dfb":"trade_price=trade_df[(trade_df.stock_id==20) & (trade_df.time_id==5)].price.values\ntrade_volume=trade_df[(trade_df.stock_id==20) & (trade_df.time_id==5)]['size'].values\ntrade_order_count=trade_df[(trade_df.stock_id==20) & (trade_df.time_id==5)]['order_count'].values\n\n\n_,ax,=plt.subplots(1, 3, figsize=(12, 5))\nax[0].plot(trade_price, label='Trade Price')\nax[1].plot(trade_volume, label='Trade Volume')\nax[2].plot(trade_order_count, label='Trade Order Counts')\n\nplt.legend(loc='best')\nplt.show()","ab68ea19":"df=trade_df[(trade_df.stock_id==20) & (trade_df.time_id==5)]\nx=df['size'].values\ny=df['order_count'].values\n\nplt.scatter(x, y)\nplt.show()","30aa6494":"order_count_df=trade_df.groupby(['stock_id', 'time_id'])[['order_count']].mean().reset_index()\norder_count_df=order_count_df.merge(train_df)\norder_count_df['log_order_count'] = np.log(order_count_df['order_count'])\n\norder_count_df.head()","43e62b52":"_,ax=plt.subplots(1, 2, figsize=(15, 5))\nplt.title(\"Mean Order Counts:\")\nax[0].hist(order_count_df.order_count.values, bins=100)\nsns.boxplot(y=order_count_df.order_count.values, ax=ax[1])\nplt.show()","d63ed757":"_,ax=plt.subplots(1, 2, figsize=(15, 5))\nplt.title(\"Mean Order Counts Normalized\")\nax[0].hist(order_count_df.log_order_count.values, bins=100, density=True)\nsns.boxplot(y=order_count_df.log_order_count.values, ax=ax[1])\nplt.show()","0cb6d429":"order_count_df.log_order_count.describe()","4151a1bb":"def get_order_count_bin(x):\n    return x\/\/0.2","d0bdb419":"order_count_df['bin']=order_count_df.log_order_count.apply(get_order_count_bin)\norder_count_df.head()","74e93f6e":"plt.title(\"Order Count Bin Distribution\")\nsns.histplot(order_count_df.bin)\nplt.show()","4d5b90cc":"order_count_df.head()","881999fd":"order_bin_stat=order_count_df.groupby('bin')[['target']].agg(list).reset_index()\norder_bin_stat['avg']=order_bin_stat['target'].apply(lambda x : np.mean(x))\norder_bin_stat['q_50']=order_bin_stat['target'].apply(lambda x : np.quantile(x, q=0.5))\norder_bin_stat['q_75']=order_bin_stat['target'].apply(lambda x : np.quantile(x, q=0.75))\norder_bin_stat['q_90']=order_bin_stat['target'].apply(lambda x : np.quantile(x, q=0.9))\n\norder_bin_stat.drop(columns='target', inplace=True)\norder_bin_stat.head()","f8b58ec0":"order_bin_stat.plot(x='bin')","0bcbfb7c":"share_df=trade_df.groupby(['stock_id', 'time_id'])[['size']].mean().reset_index()\nshare_df=share_df.merge(train_df)\nshare_df['log_size']=np.log(share_df['size'])\nshare_df.head()","d2b5c0f7":"_,ax=plt.subplots(1, 2, figsize=(15, 5))\nplt.title(\"Mean Order Sizes:\")\nax[0].hist(share_df['size'].values, bins=100)\nsns.boxplot(y=share_df['size'].values, ax=ax[1])\nplt.show()","a300b55b":"_,ax=plt.subplots(1, 2, figsize=(15, 5))\nplt.title(\"Mean Order Log Sizes:\")\nax[0].hist(share_df['log_size'].values, bins=100)\nsns.boxplot(y=share_df['log_size'].values, ax=ax[1])\nplt.show()","9bf4ddfb":"def get_shares_count_bin(x):\n    return x\/\/0.5","a368d0f0":"share_df['bins']=share_df['log_size'].apply(get_shares_count_bin)\nplt.title(\"Total Shares Bin Distribution\")\nsns.histplot(share_df.bins)\nplt.show()","a766c1bd":"share_bin_stat=share_df.groupby('bins')[['target']].agg(list).reset_index()\nshare_bin_stat['avg']=share_bin_stat['target'].apply(lambda x : np.mean(x))\nshare_bin_stat['q_50']=share_bin_stat['target'].apply(lambda x : np.quantile(x, q=0.5))\nshare_bin_stat['q_75']=share_bin_stat['target'].apply(lambda x : np.quantile(x, q=0.75))\nshare_bin_stat['q_90']=share_bin_stat['target'].apply(lambda x : np.quantile(x, q=0.9))\n\nshare_bin_stat.drop(columns='target', inplace=True)\nshare_bin_stat.head()","72591783":"share_bin_stat.plot(x='bins')","af4118e0":"1. As the order counts increases the realized volatitly is increasing in most of the situations.\n2. Most of the order counts in bin range of [4-8]","3c956982":"1. As the Number of the shares traded increases the volatility decreses as a trend, this could be due to high volatile activity in the current 10-min window followed by less-volatility","8241b621":"order_count vs target"}}