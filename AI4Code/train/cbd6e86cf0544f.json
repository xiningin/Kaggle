{"cell_type":{"d62ebc50":"code","f0723ce2":"code","787613f7":"code","d5a6ff34":"code","01bb21da":"code","2421b09d":"code","26c8476e":"code","58d4f24f":"code","b98212b8":"code","27e040cd":"code","9cf7502e":"code","b936f073":"code","bc6a3dbf":"code","77dd551d":"code","7b00242d":"code","f4e5e2b1":"code","5aa8230d":"code","f65c7231":"code","a4002ae8":"code","887cad7d":"code","afe09483":"code","f6549438":"code","14d851b0":"code","5c3f0e8e":"code","dea412f1":"code","74d05ed1":"code","15524760":"code","d20927aa":"code","821efccc":"code","0a3f96e4":"code","35391b49":"code","0cd9fc54":"code","853da538":"code","49df896f":"code","9e3f2764":"code","751d9702":"code","0d22b852":"code","a6e1c9b6":"code","fddc7b44":"code","1c493a15":"code","43083e85":"code","d6335f08":"code","fa95296e":"code","e28f786c":"code","5635373b":"code","f0462df8":"code","1f12bbeb":"code","fa9922ed":"code","293b5062":"code","f595ccc5":"code","e96eafb0":"code","3493c602":"code","283652be":"code","71392f48":"code","b3052cd2":"code","044de441":"code","35181a1c":"code","a044d3b9":"code","550f676c":"code","25962410":"code","c05de281":"code","b2fdba0c":"code","9d49a346":"code","ec0ed75b":"code","30f6123f":"markdown","59bf4ff0":"markdown","d56be9b6":"markdown","10b1cde1":"markdown","3eae25b4":"markdown","22bee7a4":"markdown","cc09041c":"markdown","68f7f70a":"markdown","3fd0cc6b":"markdown","7d2f798d":"markdown","3612a1a7":"markdown","04add20c":"markdown","6897d1a9":"markdown","4238cdd6":"markdown","536ff7a9":"markdown","129b766d":"markdown","384eb490":"markdown","d3e89270":"markdown","7f5cb714":"markdown","84704eda":"markdown","c2b3112d":"markdown","41e05833":"markdown","09fb0b34":"markdown","0538c0a8":"markdown","7923a7f4":"markdown","edc06ab7":"markdown","5e15e500":"markdown","5ef77c07":"markdown"},"source":{"d62ebc50":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f0723ce2":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy import stats\n%matplotlib inline","787613f7":"master = pd.read_csv(\"\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv\")","d5a6ff34":"def check_missing_data(df):\n    flag=df.isna().sum().any()\n    if flag==True:\n        total = df.isnull().sum()\n        percent = ((df.isnull().sum())\/len(df))*100\n        output = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n        data_type = []\n        for col in df.columns:\n            dtype = str(df[col].dtype)\n            data_type.append(dtype)\n        output['Types'] = data_type\n        return(np.transpose(output))\n    else:\n        return(False)","01bb21da":"check_missing_data(master)","2421b09d":"master.shape","26c8476e":"master.info()","58d4f24f":"master.head(5)","b98212b8":"master.drop('sl_no',axis=1,inplace = True)","27e040cd":"cat = master.drop('status',axis=1).select_dtypes(include = object).columns\nfor i in cat:\n    print(i)\n    print(master[i].value_counts())\n    print( )\n    print( )","9cf7502e":"plt.figure(figsize = (10,8))\nsns.countplot('gender',data =master)","b936f073":"plt.figure(figsize = (10,8))\nsns.countplot(\"gender\",data= master,hue='status')","bc6a3dbf":"print(\"out of {} Boys,\".format(len(master[master['gender']=='M'])),\"{} got placed,\".format(len(master[(master['gender']=='M') & (master['status']=='Placed')])),\"which is {} % of placement among males.\".format(len(master[(master['gender']=='M') & (master['status']=='Placed')])\/len(master[master['gender']=='M']) * 100))","77dd551d":"print(\"out of {} girls,\".format(len(master[master['gender']=='F'])),\"{} got placed,\".format(len(master[(master['gender']=='F') & (master['status']=='Placed')])),\"which is {} % of placement among females.\".format(len(master[(master['gender']=='F') & (master['status']=='Placed')])\/len(master[master['gender']=='F']) * 100))","7b00242d":"plt.figure(figsize = (10,8))\nsns.countplot(\"ssc_b\",data = master,hue='status')","f4e5e2b1":"plt.figure(figsize = (10,8))\nsns.countplot('hsc_b',data = master,hue = 'status')","5aa8230d":"print(len(master[(master['ssc_b']=='Central') & (master['hsc_b']=='Others')]),\" people studied in central board for their 10th and moved to some other board for their 12th\")\nprint( )\nprint(len(master[(master['ssc_b']=='Central') & (master['hsc_b']=='Central')]),\" people stayed in Cetral for both their 10th and 12th board. \")\nprint ( )\nprint(len(master[(master['ssc_b']=='Others') & (master['hsc_b']=='Central')]),\" people studied in other boards for their 10th and moved to Central board for their 12th\")\nprint( )\nprint(len(master[(master['ssc_b']=='Others') & (master['hsc_b']=='Others')]),\" people never came to Central board\")","f65c7231":"plt.figure(figsize = (10,8))\nsns.countplot('degree_t',data = master,hue = 'status')","a4002ae8":"plt.figure(figsize = (10,8))\nsns.countplot('workex',data = master,hue = 'status')","887cad7d":"# Cramer's v tests\ndef cramers_stat(confusion_matrix):\n    chi2 = stats.chi2_contingency(confusion_matrix)[0]\n    n = confusion_matrix.sum()\n    return np.sqrt(chi2 \/ (n*(min(confusion_matrix.shape)-1)))\n\nfor i in cat:\n  ctest = pd.crosstab(master[i],master['status'])\n  print(i,\"test with target data\")\n  print( )\n  (chi2,p,dof,_) = stats.chi2_contingency([ctest.iloc[0].values,ctest.iloc[1].values])\n  print(\"Chi-Squared :\",chi2)\n  print(\"P-value :\",p)\n  print(\"Freedom :\",dof)\n  print(\"Cramer's test :\",cramers_stat(ctest))\n  print( )\n  print( )","afe09483":"plt.figure(figsize = (10,8))\nsns.heatmap(master.corr(method = 'spearman'),annot = True)","f6549438":"sns.pairplot(master,diag_kind = 'kde',hue = 'status',dropna = True)","14d851b0":"master.select_dtypes(exclude = object).columns","5c3f0e8e":"plt.figure(figsize = (10,8))\nsns.scatterplot('salary','etest_p',data = master)","dea412f1":"plt.figure(figsize = (10,8))\nsns.scatterplot('degree_p','salary',data = master)","74d05ed1":"master[master.isnull().any(axis = 1)]","15524760":"data = master.copy()","d20927aa":"data = data.fillna(0)","821efccc":"check_missing_data(data)","0a3f96e4":"from sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestClassifier","35391b49":"data_enc = data.apply(LabelEncoder().fit_transform)","0cd9fc54":"x = data_enc.drop('status',axis = 1)\ny = data_enc['status']","853da538":"rnd = RandomForestClassifier().fit(x,y)","49df896f":"feature_importances = pd.DataFrame((rnd.feature_importances_*100),index = x.columns,columns=['importance']).sort_values('importance',ascending=False)","9e3f2764":"feature_importances","751d9702":"plt.figure(figsize = (20,4))\nplt.plot(feature_importances)","0d22b852":"index_drop = feature_importances[feature_importances['importance']<1.5].index","a6e1c9b6":"data_imp = data_enc.drop(index_drop,axis = 1)","fddc7b44":"data_imp.head()","1c493a15":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import ExtraTreesClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import svm\nfrom sklearn.metrics import accuracy_score,roc_auc_score,roc_curve,f1_score","43083e85":"X = data_imp.drop('status',axis = 1)\nY = data_imp['status']","d6335f08":"data_imp.shape","fa95296e":"x_train,x_test,y_train,y_test = train_test_split(X,Y,test_size = 0.3,random_state = 123)","e28f786c":"Log_model = LogisticRegression().fit(x_train,y_train)","5635373b":"Logpred = Log_model.predict(x_test)","f0462df8":"print (\"Confusion Matrix :\", pd.crosstab(y_test,Logpred))\nprint( )\nprint(\"Accuracy :\",accuracy_score(y_test,Logpred))\nprint( )\nprint(\"F1-Score :\",f1_score(y_test,Logpred))\nprint( )\nprint(\"auc_roc_score :\", roc_auc_score(y_test,Logpred))\nprint( )\nfpr,tpr,thres = roc_curve(y_test,Logpred)\nplt.figure(figsize = (10,8))\nplt.plot(fpr,tpr)\nplt.plot([0,1],ls = '--')\nplt.plot([0,0],[1,0],c = \"0.7\")\nplt.plot([1,1],c = \"0.7\")\nplt.xlabel(\"FalsePositiveRate\")\nplt.ylabel(\"TruePositiveRate\")\nplt.show()","1f12bbeb":"tree_model = DecisionTreeClassifier().fit(x_train,y_train)","fa9922ed":"treepred = tree_model.predict(x_test)","293b5062":"print (\"Confusion Matrix :\", pd.crosstab(y_test,treepred))\nprint( )\nprint(\"Accuracy :\",accuracy_score(y_test,treepred))\nprint( )\nprint(\"F1-Score :\", f1_score(y_test,treepred))\nprint( )\nprint(\"auc_roc_score :\", roc_auc_score(y_test,treepred))\nprint( )\nfpr,tpr,thres = roc_curve(y_test,treepred)\nplt.figure(figsize = (10,8))\nplt.plot(fpr,tpr)\nplt.plot([0,1],ls = '--')\nplt.plot([0,0],[1,0],c = \"0.7\")\nplt.plot([1,1],c = \"0.7\")\nplt.xlabel(\"FalsePositiveRate\")\nplt.ylabel(\"TruePositiveRate\")\nplt.show()","f595ccc5":"rnd_model = RandomForestClassifier().fit(x_train,y_train)","e96eafb0":"rndpred = rnd_model.predict(x_test)","3493c602":"print (\"Confusion Matrix :\", pd.crosstab(y_test,rndpred))\nprint( )\nprint(\"Accuracy :\",accuracy_score(y_test,rndpred))\nprint( )\nprint(\"F1-Score :\", f1_score(y_test,rndpred))\nprint( )\nprint(\"auc_roc_score :\", roc_auc_score(y_test,rndpred))\nprint( )\nfpr,tpr,thres = roc_curve(y_test,rndpred)\nplt.figure(figsize = (10,8))\nplt.plot(fpr,tpr)\nplt.plot([0,1],ls = '--')\nplt.plot([0,0],[1,0],c = \"0.7\")\nplt.plot([1,1],c = \"0.7\")\nplt.xlabel(\"FalsePositiveRate\")\nplt.ylabel(\"TruePositiveRate\")\nplt.show()","283652be":"etr_model = ExtraTreesClassifier().fit(x_train,y_train)","71392f48":"etrpred = etr_model.predict(x_test)","b3052cd2":"print (\"Confusion Matrix :\", pd.crosstab(y_test,etrpred))\nprint( )\nprint(\"Accuracy :\",accuracy_score(y_test,etrpred))\nprint( )\nprint(\"F1-Score :\", f1_score(y_test,etrpred))\nprint( )\nprint(\"auc_roc_score :\", roc_auc_score(y_test,etrpred))\nprint( )\nfpr,tpr,thres = roc_curve(y_test,etrpred)\nplt.figure(figsize = (10,8))\nplt.plot(fpr,tpr)\nplt.plot([0,1],ls = '--')\nplt.plot([0,0],[1,0],c = \"0.7\")\nplt.plot([1,1],c = \"0.7\")\nplt.xlabel(\"FalsePositiveRate\")\nplt.ylabel(\"TruePositiveRate\")\nplt.show()","044de441":"xgb_model = XGBClassifier().fit(x_train,y_train)","35181a1c":"xgbpred = xgb_model.predict (x_test)","a044d3b9":"print (\"Confusion Matrix :\", pd.crosstab(y_test,xgbpred))\nprint( )\nprint(\"Accuracy :\",accuracy_score(y_test,xgbpred))\nprint( )\nprint(\"F1-Score :\", f1_score(y_test,xgbpred))\nprint( )\nprint(\"auc_roc_score :\", roc_auc_score(y_test,xgbpred))\nprint( )\nfpr,tpr,thres = roc_curve(y_test,xgbpred)\nplt.figure(figsize = (10,8))\nplt.plot(fpr,tpr)\nplt.plot([0,1],ls = '--')\nplt.plot([0,0],[1,0],c = \"0.7\")\nplt.plot([1,1],c = \"0.7\")\nplt.xlabel(\"FalsePositiveRate\")\nplt.ylabel(\"TruePositiveRate\")\nplt.show()","550f676c":"knn_model = KNeighborsClassifier().fit(x_train,y_train)","25962410":"knnpred = knn_model.predict(x_test)","c05de281":"print (\"Confusion Matrix :\", pd.crosstab(y_test,knnpred))\nprint( )\nprint(\"Accuracy :\",accuracy_score(y_test,knnpred))\nprint( )\nprint(\"F1-Score :\", f1_score(y_test,knnpred))\nprint( )\nprint(\"auc_roc_score :\", roc_auc_score(y_test,knnpred))\nprint( )\nfpr,tpr,thres = roc_curve(y_test,knnpred)\nplt.figure(figsize = (10,8))\nplt.plot(fpr,tpr)\nplt.plot([0,1],ls = '--')\nplt.plot([0,0],[1,0],c = \"0.7\")\nplt.plot([1,1],c = \"0.7\")\nplt.xlabel(\"FalsePositiveRate\")\nplt.ylabel(\"TruePositiveRate\")\nplt.show()","b2fdba0c":"svm_model = svm.SVC().fit(x_train,y_train)","9d49a346":"svmpred = svm_model.predict(x_test)","ec0ed75b":"print (\"Confusion Matrix :\", pd.crosstab(y_test,svmpred))\nprint( )\nprint(\"Accuracy :\",accuracy_score(y_test,svmpred))\nprint( )\nprint(\"F1-Score :\", f1_score(y_test,svmpred))\nprint( )\nprint(\"auc_roc_score :\", roc_auc_score(y_test,svmpred))\nprint( )\nfpr,tpr,thres = roc_curve(y_test,svmpred)\nplt.figure(figsize = (10,8))\nplt.plot(fpr,tpr)\nplt.plot([0,1],ls = '--')\nplt.plot([0,0],[1,0],c = \"0.7\")\nplt.plot([1,1],c = \"0.7\")\nplt.xlabel(\"FalsePositiveRate\")\nplt.ylabel(\"TruePositiveRate\")\nplt.show()","30f6123f":"## Let's see the highest placement happened for people having which degree.","59bf4ff0":"Let's impute the missing salary to 0 as those missing data due to people not getting placed.","d56be9b6":"If you go up and check the cramer's v test ,we already found out that the which categorical variables that a significance to our target variable.and here it's confirmed,So let's just drop the variable after etest_p","10b1cde1":"# SVM","3eae25b4":"## Let's see about 12th board","22bee7a4":"People belonging to the central board got placed the most however there is not much of a difference.","cc09041c":"people with higher employbility test does not guarantee higher salary","68f7f70a":"# DecisionTree","3fd0cc6b":"Seems that experience was not taken into account for placement.","7d2f798d":"No variables show high correlation to each other.","3612a1a7":"higher percentage in college does not guarantee higher package.","04add20c":"# KNN","6897d1a9":"# Feature selection","4238cdd6":"## Let's see people belonging to which board in 10th got placed.","536ff7a9":"Let's see the correlation between features in the data","129b766d":"## Does work experience had an impact on students who were placed?","384eb490":"Humongous amount of people that were placed belonged to commerce and management.","d3e89270":"creating a copy of master data so that if anything goes wrong i can come back to my main master dataframe.","7f5cb714":"Only work experience and specialization were the categorical columns that had an impact to our target variable.We can remove the rest.","84704eda":"Turns out people in other boards in 12th got placed,maybe because they got good marks.\nLet's see how many of them moved from central in 10th to other boards for 12th.","c2b3112d":"# XGBoost","41e05833":"# RandomForestClassifier","09fb0b34":"# missing value imputation","0538c0a8":"## Let's visualize placement among the gender","7923a7f4":"# ExtraTreeClassifier","edc06ab7":"Let's see how each categorical variable is significant to the target label.For that i will use the Cramer's V test","5e15e500":"# Different Supervised Learning","5ef77c07":"# LogisticRegression"}}