{"cell_type":{"da1f6658":"code","86eb3b11":"code","ca4a1f17":"code","b7ebca27":"code","d2b86430":"code","1bf07959":"code","b0b52f49":"code","70fe695d":"code","3d47bc23":"code","10c87fed":"code","8f888b80":"code","c3fa17d6":"code","4bdc26c0":"code","c429e6c8":"code","a546890e":"code","9deeec69":"code","60cbbc21":"code","1d47792e":"code","1019c98b":"code","9bb1121e":"code","3aec68e9":"code","652c76d8":"code","669e81da":"code","fc33aad6":"code","3630e7db":"code","3b344809":"code","4d701b2f":"code","9fe69d4f":"code","7e6cfe72":"code","04efc140":"code","68682ec0":"code","8c3a226f":"code","305ba9d6":"code","92f98ff7":"code","9742dcb0":"markdown","2f2d7ac3":"markdown","7e21bba4":"markdown","91e93b77":"markdown","46d4d5a2":"markdown","f57360ed":"markdown","03c4c776":"markdown","eb6b825b":"markdown","7c269ea8":"markdown","fe3ee107":"markdown","971c6274":"markdown"},"source":{"da1f6658":"import numpy as np\nimport pandas as pd\nimport datetime as dt\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom geopy import distance\nimport os\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble.forest import RandomForestClassifier\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.datasets import make_regression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\n","86eb3b11":"#train = pd.read_csv(\".\/input\/nyc-taxi-trip-duration\/train.csv\")\n#test = pd.read_csv(\".\/input\/nyc-taxi-trip-duration\/test.csv\")\n#sample = pd.read_csv(\".\/input\/nyc-taxi-trip-duration\/sample_submission.csv\")\nimport os\ntrain = pd.read_csv(\"..\/input\/train.csv\")\ntest = pd.read_csv(\"..\/input\/test.csv\")\n#sample = pd.read_csv(\"..\/input\/sample_submission.csv\")","ca4a1f17":"train.shape,test.shape","b7ebca27":"train.head(10)","d2b86430":"test.head(10)","1bf07959":"test.describe()","b0b52f49":"train.describe()","70fe695d":"train.isna().sum()","3d47bc23":"test.isna().sum()","10c87fed":"plt.subplots(figsize=(18,7))\nplt.title(\"Outliers\")\ntrain.boxplot()","8f888b80":"train[['trip_duration']].boxplot()","c3fa17d6":"train[['trip_duration']].boxplot(vert=False)","4bdc26c0":"train[['pickup_longitude','dropoff_longitude']].boxplot()","c429e6c8":"train = train.loc[train['dropoff_longitude']> -75]\ntrain = train.loc[train['pickup_longitude']> -75]\ntrain[['pickup_longitude','dropoff_longitude']].boxplot()","a546890e":"train = train.loc[train['dropoff_longitude']< -73]\ntrain = train.loc[train['pickup_longitude']< -73]\ntrain[['pickup_longitude','dropoff_longitude']].boxplot()","9deeec69":"train[['pickup_latitude','dropoff_latitude']].boxplot()","60cbbc21":"train = train.loc[train['dropoff_latitude']>40.5]\ntrain = train.loc[train['pickup_latitude']>40.5]\ntrain[['pickup_latitude','dropoff_latitude']].boxplot()","1d47792e":"train = train.loc[train['dropoff_latitude']<41]\ntrain = train.loc[train['pickup_latitude']<41]\ntrain[['pickup_latitude','dropoff_latitude']].boxplot()","1019c98b":"train['pickup_datetime']= pd.to_datetime(train.pickup_datetime, format='%Y-%m-%d %H:%M:%S')\ntrain['day_of_the_date']=train.pickup_datetime.dt.dayofweek\ntrain['month'] = train.pickup_datetime.dt.month\ntrain['day'] = train.pickup_datetime.dt.day\ntrain['hour'] = train.pickup_datetime.dt.hour\ntrain['minute'] = train.pickup_datetime.dt.minute\ntrain.head(5)","9bb1121e":"test['pickup_datetime']= pd.to_datetime(test.pickup_datetime, format='%Y-%m-%d %H:%M:%S')\ntest['day_of_the_date']=test.pickup_datetime.dt.dayofweek\ntest['month'] = test.pickup_datetime.dt.month\ntest['day'] = test.pickup_datetime.dt.day\ntest['hour'] = test.pickup_datetime.dt.hour\ntest['minute'] = test.pickup_datetime.dt.minute\ntest.head(5)","3aec68e9":"def distancer(row):\n    coords_1 = (row['pickup_latitude'], row['pickup_longitude'])\n    coords_2 = (row['dropoff_latitude'], row['dropoff_longitude'])\n    return distance.distance(coords_1, coords_2).km\n\ntrain['distance'] = train.apply(distancer, axis=1)\ntest['distance'] = test.apply(distancer, axis=1)","652c76d8":"train.head()","669e81da":"test.head()","fc33aad6":"train['trip_duration_log']=np.log(train['trip_duration'].values)\nplt.hist(train['trip_duration_log'],bins=50)","3630e7db":"train.columns,test.columns","3b344809":"input_columns=['day_of_the_date', 'month', 'day', 'hour','distance', 'pickup_longitude', 'pickup_latitude', 'dropoff_longitude', 'dropoff_latitude']\ny=train['trip_duration_log']\nX=train[input_columns]\nX_test=test[input_columns]","4d701b2f":"X_train, X_valid, y_train, y_valid = train_test_split(X,y, test_size=0.2, random_state=42)","9fe69d4f":"X_train.shape, X_valid.shape, y_train.shape, y_valid.shape","7e6cfe72":"# n_estimators=19, min_samples_split=2, min_samples_leaf=4, max_features='auto', bootstrap=True, verbose=2\nrfr = RandomForestRegressor(n_estimators=100,min_samples_leaf=3, min_samples_split=15, n_jobs=-1, max_features=\"auto\")\nrfr.fit(X_train, y_train)","04efc140":"cv_scores = cross_val_score(rfr, X_train, y_train, cv=5)\nfor i in range (len (cv_scores)):\n    cv_scores[i]=np.sqrt(abs(cv_scores[i]))\nprint(np.mean(cv_scores))","68682ec0":"train_pred=rfr.predict(X_test)\ntrain_pred","8c3a226f":"len(train_pred)","305ba9d6":"my_submission = pd.DataFrame({'id':test.id, 'trip_duration':np.exp(train_pred)})","92f98ff7":"my_submission.to_csv('sub.csv',index=False)","9742dcb0":"## Make more data","2f2d7ac3":"## Submission","7e21bba4":"# Taxi New York","91e93b77":"### Calculate the distance between pickup point and dropoff point","46d4d5a2":"## data exploration","f57360ed":"## Features selection","03c4c776":"## Log trip duration","eb6b825b":"## data cleaning","7c269ea8":"### Creat column for Day of the week, minute, hour, day and month","fe3ee107":"## Entrainement","971c6274":"## Data loading"}}