{"cell_type":{"46ed58ec":"code","fc92716a":"code","33260e58":"code","f25547f2":"code","302447a2":"code","590bbca9":"code","62e301b3":"code","5b6f6934":"code","03f3e122":"code","b4140030":"code","8d6983c8":"code","06c4f245":"code","3a7391e4":"code","85102163":"markdown","38f2d8ec":"markdown","11155263":"markdown","05389f86":"markdown"},"source":{"46ed58ec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom subprocess import check_output\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fc92716a":"df = pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv')\ndf1 = df.drop([\"Rank\"],axis=1)\ndf.head(100)","33260e58":"df.info()","f25547f2":"df.corr()","302447a2":"df.columns","590bbca9":"df.plot(kind = 'scatter', x='Year', y='Platform', alpha = 0.5, color = 'red', linewidth = 10000 )\nplt.title(\"Pl\")\nplt.legend()\nplt.show()","62e301b3":"Number = df[df.Platform == \"2600\"]\nSNES = df[df.Platform == \"SNES\"]\nGC = df[df.Platform == \"GC\"]\nPSV = df[df.Platform == \"PSV\"]\n\nplt.scatter(Number.Year, Number.EU_Sales, color = \"purple\", label = \"2600\")\nplt.scatter(SNES.Year, SNES.EU_Sales, color = \"red\", label = \"SNES\")\nplt.scatter(GC.Year, GC.EU_Sales,  color = \"blue\", label = \"GC\")\nplt.scatter(PSV.Year, PSV.EU_Sales, color = \"green\", label = \"PSV\")\nplt.title(\"Platform EU sales\")\nplt.legend()\nplt.show()","5b6f6934":"plt.scatter(Number.Year, Number.JP_Sales, color = \"purple\", label = \"2600\")\nplt.scatter(SNES.Year, SNES.JP_Sales, color = \"red\", label = \"SNES\")\nplt.scatter(GC.Year, GC.JP_Sales,  color = \"blue\", label = \"GC\")\nplt.scatter(PSV.Year, PSV.JP_Sales, color = \"green\", label = \"PSV\")\nplt.title(\"Platform JP sales\")\nplt.legend()\nplt.show()","03f3e122":"plt.scatter(Number.Year, Number.NA_Sales, color = \"purple\", label = \"2600\")\nplt.scatter(SNES.Year, SNES.NA_Sales, color = \"red\", label = \"SNES\")\nplt.scatter(GC.Year, GC.NA_Sales,  color = \"blue\", label = \"GC\")\nplt.scatter(PSV.Year, PSV.NA_Sales, color = \"green\", label = \"PSV\")\nplt.title(\"Platform NA sales\")\nplt.legend()\nplt.show()","b4140030":"plt.scatter(Number.Year, Number.Other_Sales, color = \"purple\", label = \"2600\")\nplt.scatter(SNES.Year, SNES.Other_Sales, color = \"red\", label = \"SNES\")\nplt.scatter(GC.Year, GC.Other_Sales,  color = \"blue\", label = \"GC\")\nplt.scatter(PSV.Year, PSV.Other_Sales, color = \"green\", label = \"PSV\")\nplt.title(\"Platform Other sales\")\nplt.legend()\nplt.show()","8d6983c8":"plt.scatter(Number.Year, Number.Global_Sales, color = \"purple\", label = \"2600\")\nplt.scatter(SNES.Year, SNES.Global_Sales, color = \"red\", label = \"SNES\")\nplt.scatter(GC.Year, GC.Global_Sales,  color = \"blue\", label = \"GC\")\nplt.scatter(PSV.Year, PSV.Global_Sales, color = \"green\", label = \"PSV\")\nplt.title(\"Platform Global sales\")\nplt.legend()\nplt.show()","06c4f245":"df.columns","3a7391e4":"Gb_sales_threshold = sum(df.Global_Sales[:10])\/len(df.Global_Sales[:10])\nEU_sales_threshold = sum(df.EU_Sales[:10])\/len(df.EU_Sales[:10])\nNA_sales_threshold = sum(df.NA_Sales[:10])\/len(df.NA_Sales[:10])\nJP_sales_threshold = sum(df.JP_Sales[:10])\/len(df.JP_Sales[:10])\nOther_sales_threshold = sum(df.Other_Sales[0:10])\/len(df.Other_Sales[:10])\nprint(\"Gb_sales_threshold\",Gb_sales_threshold)\nprint(\"EU_sales_threshold\",EU_sales_threshold)\nprint(\"NA_sales_threshold\",NA_sales_threshold)\nprint(\"JP_sales_threshold\",JP_sales_threshold)\nprint(\"Other_sales_threshold\",Other_sales_threshold)\ndf[\"GS_Ratio\"] = [ \"High\" if i > Gb_sales_threshold else \"Low\" for i in df.Global_Sales]\ndf[\"EU_Ratio\"] = [ \"High\" if i > EU_sales_threshold else \"Low\" for i in df.EU_Sales]\ndf[\"NA_Ratio\"] = [ \"High\" if i > NA_sales_threshold else \"Low\" for i in df.NA_Sales]\ndf[\"JP_Ratio\"] = [ \"High\" if i > JP_sales_threshold else \"Low\" for i in df.JP_Sales]\ndf[\"Other_Ratio\"] = [ \"High\" if i > Other_sales_threshold else \"Low\" for i in df.Other_Sales]\ndf.loc[:10,[\"GS_Ratio\",\"Global_Sales\",\"EU_Ratio\",\"EU_Sales\",\"NA_Ratio\",\"NA_Sales\",\"JP_Ratio\",\"JP_Sales\",\"Other_Ratio\",\"Other_Sales\",\"Name\"]]","85102163":"Comparison of the regional and global sales of the top **10** games by the average among them.","38f2d8ec":"When we examine the statistics above, we see that it has been past **40** years when video games first started to be sold, if we divide these **40 years** into **4 main** patterns, it would be **1980-1990,1990-2000,2000-2010,2000-2020** and we select the best selling (as the number of years sold) platforms on each mold.It is clear that their names are **\"2600\", \"SNES\", \"GC\", \"PSV\"**.                                                                ","11155263":"By looking at the sales of these **4** platforms, it shows which one is selling more in which regions.","05389f86":"Finally, when we examine it, we see that \"SNES\" is sold more widely on the basis of region and general. By looking at sales, we can understand which platform is more popular in which regions."}}