{"cell_type":{"e9c4f40f":"code","51c55947":"code","5ee98c0c":"code","1a0b0fbc":"code","5f3a4552":"code","84958889":"code","a5b55422":"code","6a3742c5":"code","438dc34b":"code","e727a17d":"code","e3244283":"code","67af0c47":"code","4087f18e":"code","d711aec5":"code","bd4a21e9":"code","d7cdc2a7":"code","a778fad4":"code","d33b5bd8":"code","60dae75b":"code","a4212124":"code","b0d42c85":"code","5c19ad4d":"code","89736eb9":"code","f49f4e49":"code","a0914414":"code","fdd58085":"code","d6166500":"code","33a1577a":"code","10e6c881":"code","d03ca1ee":"code","1f88bff6":"code","d4778340":"code","0d98e8ea":"code","5b094b96":"code","049ac084":"markdown","cd258e7a":"markdown","a224ed04":"markdown","3e84aa35":"markdown","4ca4d234":"markdown","ae207923":"markdown","a6027236":"markdown","b562dfac":"markdown","28e5adf9":"markdown","f766c854":"markdown","3108f8de":"markdown","d6af23b3":"markdown"},"source":{"e9c4f40f":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","51c55947":"pip install pygal","5ee98c0c":"import plotly as plot\nimport pygal as py\nfrom PIL import Image \n%matplotlib inline\nimport warnings\nwarnings.filterwarnings(\"ignore\")","1a0b0fbc":"# creating a object \nim = Image.open('..\/input\/money-heist\/HEIST.png')\nim.show()","5f3a4552":"from IPython.display import Image\nImage(filename='..\/input\/money-heist\/HEIST.png', width=400, height=300)","84958889":"df=pd.read_csv('..\/input\/money-heist-season-1-to-5\/money heist - all seasons.csv',engine=\"python\",encoding='latin-1')","a5b55422":"df","6a3742c5":"df.iloc[:,6:7].plot.hist()","438dc34b":"df[\"IMDB\"].plot.box()","e727a17d":"df.shape","e3244283":"df.info()","67af0c47":"df.describe().transpose()","4087f18e":"df.dtypes","d711aec5":"df.isna().sum()","bd4a21e9":"df.columns","d7cdc2a7":"df['Season '].unique().tolist()","a778fad4":"df1=df.groupby(\"Season \").count().iloc[:,0:1]\ndf1.plot(kind=\"barh\",color=\"red\",title=(\"Season with highest number of episodes\"));plt.show()","d33b5bd8":"sns.countplot(x=\"Year\",data=df,palette=\"rainbow\",hue=\"Year\")\nplt.title(\"years in which highest number of episodes came\");plt.show()","60dae75b":"plt.figure(figsize=(10,8))\nsns.barplot(x=\"Name\",y=\"Watch Time (minutes)\",data=df.sort_values(\"Watch Time (minutes)\",ascending=False),hue=\"Year\",alpha=0.75);plt.xticks(rotation=90)\nplt.title(\"episodes with highest runtime\");plt.show()","a4212124":"plt.figure(figsize=(15,8))\nsns.categorical.barplot(x=\"Name\",y=\"IMDB\",data=df.sort_values(\"IMDB\",ascending=False),hue=\"Year\",alpha=0.75,palette=\"Accent\");plt.xticks(rotation=90)\nplt.title(\"episodes with highest IMDB Rating\");plt.show()","b0d42c85":"sns.boxplot(x=\"Year\",y=\"Watch Time (minutes)\",data=df,palette='seismic',hue=\"Season \");plt.title(\"Watchtime boxplot over the years\")\nplt.show()","5c19ad4d":"sns.boxenplot(x=\"Year\",y=\"IMDB\",data=df,palette='seismic_r',hue=\"Season \");plt.title(\"Rating boxplot over the years\")\nplt.show()","89736eb9":"df[[\"Season \",\"IMDB\",\"Watch Time (minutes)\"]].groupby(\"Season \").mean()","f49f4e49":"df[[\"Season \",\"Watch Time (minutes)\"]].groupby(\"Season \").sum()[\"Watch Time (minutes)\"].rename(\"Watch Time (minutes)'s sum'\")\ndata=pd.DataFrame({\"Watch Time (minutes)'s sum\":df[[\"Season \",\"Watch Time (minutes)\"]].groupby(\"Season \").sum()[\"Watch Time (minutes)\"].rename(\"Watch Time (minutes)'s sum'\").values},index=[1,2,3,4,5])\nprint(data)","a0914414":"df_1=df[[\"Year\",\"IMDB\",\"Watch Time (minutes)\"]]\ndf1=df_1.groupby(\"Year\").mean()\ndf1[\"MEAN of WatchTime\"]=df1[\"Watch Time (minutes)\"]\ndf1=df1.drop(columns=\"Watch Time (minutes)\")\ndf1","fdd58085":"df2=df_1.drop(columns=[\"IMDB\"])\ndf2=df2.groupby(\"Year\").sum()\ndf2=pd.DataFrame({\"Sum of WatchTime\":list(df2[\"Watch Time (minutes)\"].rename(\"sum of WatchTime\").values)},index=[2017,2019,2020,2021])\ndf_3=pd.concat([df1,df2],axis=1)\ndf_3.style.highlight_max(color=\"orange\")","d6166500":"radar_chart = py.Radar()\nradar_chart.title = 'Performance of Money Heist over the years'\nradar_chart.x_labels = [\"2017\",\"2019\",\"2020\",\"2021\"]\nradar_chart.add('IMDB', df_3[\"IMDB\"])\nradar_chart.add('MEAN of WatchTime',df_3[\"MEAN of WatchTime\"] )\nradar_chart.add('Sum of WatchTime',df_3[\"Sum of WatchTime\"] )\nradar_chart.render_in_browser()","33a1577a":"sns.heatmap(df[[\"Year\",\"Watch Time (minutes)\",\"IMDB\"]].corr(),annot=True,vmax=1,vmin=-1)\nplt.title(\"correlation between time,year,rating\")\nplt.show()","10e6c881":"sns.pointplot(x=\"Year\",y=\"IMDB\",data=df,linestyles=\"dashed\",color=\"k\")\nplt.title(\"Average of ratings over the year\");plt.show()","d03ca1ee":"season = df[\"Season \"].unique().tolist()\nyear = df[\"Year\"].unique().tolist()\n\nrating_overyws=[np.mean(df[df[\"Year\"]==2017][df[\"Season \"]==1][\"IMDB\"].values),np.mean(df[df[\"Year\"]==2017][df[\"Season \"]==2][\"IMDB\"].values),\n                np.mean(df[df[\"Year\"]==2019][df[\"Season \"]==3][\"IMDB\"].values),np.mean(df[df[\"Year\"]==2020][df[\"Season \"]==4][\"IMDB\"].values),\n                np.mean(df[df[\"Year\"]==2017][df[\"Season \"]==1][\"IMDB\"].values)]\n\nepisode_rating = np.array([[rating_overyws[0],0,0,0],[rating_overyws[1],0,0,0],[0,rating_overyws[2],0,0],[0,0,rating_overyws[3],0],\n                          [0,0,0,rating_overyws[4]]])\n\nfig, ax = plt.subplots()\nim = ax.imshow(episode_rating, cmap=\"rainbow\")\n\n# We want to show all ticks...\nax.set_xticks(np.arange(len(year)))\nax.set_yticks(np.arange(len(season)))\n# ... and label them with the respective list entries\nax.set_xticklabels(year)\nax.set_yticklabels(season)\n\n# Rotate the tick labels and set their alignment.\nplt.setp(ax.get_xticklabels(), rotation=45, ha=\"right\",\n         rotation_mode=\"anchor\")\n\n# Loop over data dimensions and create text annotations.\nfor i in range(len(season)):\n    for j in range(len(year)):\n        text = ax.text(j, i, episode_rating[i, j],\n                       ha=\"center\", va=\"center\", color=\"white\")\n\nax.set_title(\"Rating over the years and season\")\nfig.tight_layout()\nplt.show()","1f88bff6":"a =rating_overyws\nlist(round(a,2) for a in a)","d4778340":"ex_df=df[[\"On Air\",\"IMDB\",\"Watch Time (minutes)\"]]\n\nfor i in ex_df.columns.tolist()[1:]:\n    ex_df.sort_values(i,ascending=False).head().plot(x=\"On Air\",y=i,kind=\"bar\",color=[\"purple\"])","0d98e8ea":"#df[[\"Year\",\"On Air\",\"Season \"]]","5b094b96":"import plotly.express as px\n\ndf = pd.DataFrame([\n    dict(Task=\"season1\", Start='2017-5-2', Finish='2017-5-27' ,Completion_pct=25),\n    dict(Task=\"season2\", Start='2017-10-16', Finish='2017-11-23',Completion_pct=37),\n    dict(Task=\"season3\", Start='2019-7-19', Finish='2019-7-20',Completion_pct=1),\n    dict(Task=\"season4\", Start='2020-4-3', Finish='2020-4-4',Completion_pct=1),\n    dict(Task=\"season5\", Start='2021-9-3', Finish='2021-9-4',Completion_pct=1)\n])\n\nfig = px.timeline(df, x_start=\"Start\", x_end=\"Finish\", y=\"Task\")\nfig.update_yaxes(autorange=\"reversed\") # otherwise tasks are listed from the bottom up\nfig.show()","049ac084":"episodes came in 2017 and also the no. of episodes came in 1st season are highest. ","cd258e7a":"Highest watchtime came in 3-april-2022, but highest rating came in 19-july-2021 as per given data","a224ed04":"The paris plan episode has longest watchtime ","3e84aa35":"avg.Watchtime increased over the Years","4ca4d234":"Average rating came over the 5 season in their year : **[8.37, 8.82, 8.45, 7.61, 8.37]**","ae207923":" is a Spanish heist crime drama television series created by \u00c1lex Pina. The series traces two long-prepared heists led by the Professor (\u00c1lvaro Morte), one on the Royal Mint of Spain, and one on the Bank of Spain, told from the perspective of one of the robbers, Tokyo (\u00darsula Corber\u00f3). The narrative is told in a real-time-like fashion and relies on flashbacks, time-jumps, hidden character motivations, and an unreliable narrator for complexity.","a6027236":"avg.rating over the year was highest in 2017","b562dfac":"their is reverse relation between years and Imdb rating bcoz over year the rating decreased","28e5adf9":"Season 2 aired most days on tv","f766c854":"Imdb was height in 2017, avg.mean of watchtime highest came in 2021,total length of episodes was highest in 2017","3108f8de":"Astray episode has highest rating as per Imdb","d6af23b3":"# About Money Heist:"}}