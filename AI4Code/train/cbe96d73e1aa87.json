{"cell_type":{"93ec26a3":"code","05ea3264":"code","9a0f3852":"code","4e1cf33f":"code","07a999aa":"code","bfa3382d":"code","81a86290":"code","a5651043":"code","23738dde":"code","88153774":"code","45ebfe86":"code","2f0d29a3":"code","882a6af5":"code","7e21d731":"code","e24b841a":"code","186f47c4":"code","991d210f":"code","65edcd80":"code","9872321c":"code","8bccb3c7":"code","d1e21e93":"code","08932be5":"code","41717151":"code","410c2940":"code","9a49392c":"code","f0920255":"code","fd58cb33":"markdown","8637b2d3":"markdown","5654abb8":"markdown","5d123f26":"markdown","a36cecae":"markdown","75077365":"markdown","58fdb1b0":"markdown"},"source":{"93ec26a3":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n# Matplotlib for additional customization\nfrom matplotlib import pyplot as plt\n%matplotlib inline\n# Seaborn for plotting and styling\nimport seaborn as sns\n\nimport os\nprint(os.listdir(\"..\/input\"))","05ea3264":"# Read dataset\ndf = pd.read_csv('..\/input\/Pokemon.csv', index_col=0)","9a0f3852":"# Display first 5 observations\ndf.head()","4e1cf33f":"# Display last 5 observations\ndf.tail()","07a999aa":"# Recommended way\nsns.lmplot(x='Attack', y='Defense', data=df)\n \n# Alternative way\n# sns.lmplot(x=df.Attack, y=df.Defense)","bfa3382d":"# Scatterplot arguments\nsns.lmplot(x='Attack', y='Defense', data=df,\n           fit_reg=False, # No regression line\n           hue='Generation')   # Color by evolution stage","81a86290":"# Plot using Seaborn\nsns.lmplot(x='Attack', y='Defense', data=df,\n           fit_reg=False, \n           hue='Generation')\n \n# Tweak using Matplotlib\nplt.ylim(0, None)\nplt.xlim(0, None)","a5651043":"# Boxplot\nsns.boxplot(data=df)","23738dde":"# Pre-format DataFrame\nstats_df = df.drop(['Total', 'Generation', 'Legendary'], axis=1)\n \n# New boxplot using stats_df\nsns.boxplot(data=stats_df)","88153774":"# Set theme\nsns.set_style('whitegrid')\n \n# Violin plot\nsns.violinplot(x='Type 1', y='Attack', data=df)","45ebfe86":"## Color palettes.","2f0d29a3":"pkmn_type_colors = ['#78C850',  # Grass\n                    '#F08030',  # Fire\n                    '#6890F0',  # Water\n                    '#A8B820',  # Bug\n                    '#A8A878',  # Normal\n                    '#A040A0',  # Poison\n                    '#F8D030',  # Electric\n                    '#E0C068',  # Ground\n                    '#EE99AC',  # Fairy\n                    '#C03028',  # Fighting\n                    '#F85888',  # Psychic\n                    '#B8A038',  # Rock\n                    '#705898',  # Ghost\n                    '#98D8D8',  # Ice\n                    '#7038F8',  # Dragon\n                   ]","882a6af5":"# Violin plot with Pokemon color palette\nsns.violinplot(x='Type 1', y='Attack', data=df, \n               palette=pkmn_type_colors) # Set color palette","7e21d731":"# Swarm plot with Pokemon color palette\nsns.swarmplot(x='Type 1', y='Attack', data=df, \n              palette=pkmn_type_colors)","e24b841a":"# Set figure size with matplotlib\nplt.figure(figsize=(10,6))\n \n# Create plot\nsns.violinplot(x='Type 1',\n               y='Attack', \n               data=df, \n               inner=None, # Remove the bars inside the violins\n               palette=pkmn_type_colors)\n \nsns.swarmplot(x='Type 1', \n              y='Attack', \n              data=df, \n              color='k', # Make points black\n              alpha=0.7) # and slightly transparent\n \n# Set title with matplotlib\nplt.title('Attack by Type')","186f47c4":"stats_df.head()","991d210f":"# Melt DataFrame\nmelted_df = pd.melt(stats_df, \n                    id_vars=[\"Name\", \"Type 1\", \"Type 2\"], # Variables to keep\n                    var_name=\"Stat\") # Name of melted variable\nmelted_df.head()","65edcd80":"print( stats_df.shape )\nprint( melted_df.shape )","9872321c":"# Swarmplot with melted_df\nsns.swarmplot(x='Stat', y='value', data=melted_df, \n              hue='Type 1')","8bccb3c7":"# 1. Enlarge the plot\nplt.figure(figsize=(10,6))\n \nsns.swarmplot(x='Stat', \n              y='value', \n              data=melted_df, \n              hue='Type 1', \n              split=True, # 2. Separate points by hue\n              palette=pkmn_type_colors) # 3. Use Pokemon palette\n \n# 4. Adjust the y-axis\nplt.ylim(0, 260)\n \n# 5. Place legend to the right\nplt.legend(bbox_to_anchor=(1, 1), loc=2)","d1e21e93":"# Calculate correlations\ncorr = stats_df.corr()\n \n# Heatmap\nsns.heatmap(corr)","08932be5":"# Distribution Plot (a.k.a. Histogram)\nsns.distplot(df.Attack)","41717151":"# Count Plot (a.k.a. Bar Plot)\nsns.countplot(x='Type 1', data=df, palette=pkmn_type_colors)\n \n# Rotate x-labels\nplt.xticks(rotation=-45)","410c2940":"# Factor Plot\ng = sns.factorplot(x='Type 1', \n                   y='Attack', \n                   data=df, \n                   hue='Generation',  # Color by stage\n                   col='Generation',  # Separate by stage\n                   kind='swarm') # Swarmplot\n \n# Rotate x-axis labels\ng.set_xticklabels(rotation=-45)\n \n# Doesn't work because only rotates last plot\n# plt.xticks(rotation=-45)","9a49392c":"# Density Plot\nsns.kdeplot(df.Attack, df.Defense)","f0920255":"# Joint Distribution Plot\nsns.jointplot(x='Attack', y='Defense', data=df)","fd58cb33":"## Customizing with Matplotlib.","8637b2d3":"##  Importing libraries and dataset.","5654abb8":"## Contents\n1. Importing libraries and dataset.\n2. Seaborn\u2019s plotting functions.\n    * Scatter Plot\n3. Customizing with Matplotlib.\n4. The role of Pandas.\n    * Box Plot\n5. Seaborn themes.\n    * Violin Plot\n6. Color palettes.\n     * Swarm Plot\n7. Overlaying plots.\n8. Putting it all together.\n9. Pok\u00e9dex \n    * Heatmap\n    * Histogram\n    * Bar Plot\n    * Factor Plot\n    * Density Plot\n    * Joint Distribution Plot\n\n","5d123f26":"### Introduction to Seaborn\n\nSeaborn provides a high-level interface to Matplotlib, a powerful but sometimes unwieldy Python visualization library.\n\nOn Seaborn\u2019s official website, they state:\n\n`If matplotlib \u201ctries to make easy things easy and hard things possible\u201d, seaborn tries to make a well-defined set of hard things easy too.`","a36cecae":"## Seaborn themes.","75077365":" scatter plot is just one line of code using the lmplot() function.","58fdb1b0":"### Joint Distribution Plot\n\nJoint distribution plots combine information from scatter plots and histograms to give you detailed information for bi-variate distributions."}}