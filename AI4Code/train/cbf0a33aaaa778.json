{"cell_type":{"583703c8":"code","d7d0c814":"code","3b178612":"code","659a4ee3":"code","d2d30132":"code","c0f1b4ee":"code","38693bd8":"code","f90f8149":"code","04ff4381":"code","ac4305d3":"code","e7b75502":"code","e448146b":"code","eda26bd5":"code","f51c2864":"code","2c58af7a":"code","322fa85b":"code","65c1de47":"markdown","76e51230":"markdown","ee459444":"markdown","805f33a0":"markdown","ae527129":"markdown","a53efb59":"markdown","106f7e3c":"markdown","8726ca79":"markdown","5fd8d333":"markdown","51f4ad07":"markdown","cccbb57b":"markdown","1f8eb11d":"markdown","a6df984e":"markdown","e90ec88e":"markdown","d8e18363":"markdown"},"source":{"583703c8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\ndf = pd.read_csv(\"..\/input\/Admission_Predict_Ver1.1.csv\")\n# Any results you write to the current directory are saved as output.","d7d0c814":"print(\"Let's see a sample\\n\",df.sample(2))\nprint(\"Information\\n\",df.info())","3b178612":"df.drop(columns=\"Serial No.\",inplace= True)","659a4ee3":"plt.hist(df['GRE Score'])","d2d30132":"plt.hist(df['TOEFL Score'])","c0f1b4ee":"plt.hist(df['CGPA'])","38693bd8":"df.isna().sum()","f90f8149":"df.corr()","04ff4381":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\ntrain_x,test_x,train_y,test_y = train_test_split(df.iloc[:,:-1], df.iloc[:,-1])\nlin_model = LinearRegression()\nlin_model.fit(train_x,train_y)\ntarget = lin_model.predict(test_x)\nprint(\"Mean Squared Error: \",mean_squared_error(test_y,target))\n","ac4305d3":"target[:5]","e7b75502":"test_y[:5]","e448146b":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\ntrain_scale = scaler.fit(df.iloc[:,:-1])\nscale_train = train_scale.transform(df.iloc[:,:-1])\ntrain_x,test_x,train_y,test_y = train_test_split(scale_train, df.iloc[:,-1])\nlin_model = LinearRegression()\nlin_model.fit(train_x,train_y)\ntarget = lin_model.predict(test_x)\nprint(\"Mean Squared Error: \",mean_squared_error(test_y,target))","eda26bd5":"from xgboost import XGBRegressor\nmodel = XGBRegressor(max_depth = 6)\ntrain_x,test_x,train_y,test_y = train_test_split(df.iloc[:,:-1], df.iloc[:,-1])\nmodel.fit(train_x,train_y)\ntarget = model.predict(test_x)\nprint(\"RMS ERROR: \",mean_squared_error(target,test_y))\nprint (train_y[:2])","f51c2864":"plt.plot(range(len(test_y)),test_y)\nplt.plot(range(len(target)),target)","2c58af7a":"df_sort = df.sort_values(by=df.columns[-1],ascending=False)\ndf_sort.head(5)","322fa85b":"\ndf_sort[(df_sort['Chance of Admit ']>0.9)].mean().reset_index()","65c1de47":"Are there any NaN values??","76e51230":"Is the data good??Let's see","ee459444":"Hello friends, let's get started.","805f33a0":"let's see correlation towards Chance of Admit.","ae527129":"So, Let's see the factors that influence the Chance of Admint. Before that let's verify whether data is good or not.\nIntuitively, Each and every column depends on Adminssion. But let's see how they influence.","a53efb59":"Let's use famous algorithm, XGBoost Regressor and let's see error rate for it.","106f7e3c":"As you can see, even after scaling, there isn't much affect.","8726ca79":"* All columns are of either int or float.\n* What's point in using Serial No......for Chance of Admit?? So, let's remove that Column.","5fd8d333":"Let's understand the Data. What I understood?\n* GRE Score,TOEFL Score (Examination scores which are basic criteria for Admiting into Universerties)\n* SOP(Statement Of Purpose: What's the purpose of your interest in applying to this University?)\n* LOR(Letter Of Recommendation)\n* CGPA(Percentage out of 10)","51f4ad07":"Let's analyze the given data for some time","cccbb57b":"let's see what happens when we use scaling...\n","1f8eb11d":"As we see, GRE, TOEFL, CGPA are highly correlated to Admission.\nSo, if we have good CGPA and if our GRE, TOEFL score is good. There's high chance to get admission.","a6df984e":"so now, lets see the scores required to get 93.5% chance for admissions.\nAs you see, \n*     GRE Score\t                   ->    332.8\n*     TOEFL Score\t                 ->    116.213115\n*     University Rating\t        ->    4.6\n*     SOP\t                                ->    4.5\n*     LOR                                 ->    4.5\n*     CGPA\t                          ->    9.5\n*     Research\t                     ->    1.00\n*     Chance of Admit\t          ->     0.935\n\nThese are the  scores,ratings needed for getting 93.5% admission chances.","e90ec88e":"I'm a beginner. I would like to know in what way I can improve the score. Please give suggestions. Also I would like to know the Scaling affect on models. How scaling affects some algorithms??","d8e18363":"If corr nears 1, relation increases, itseems like all factors influence Chance of Admit."}}