{"cell_type":{"f9117348":"code","8821448e":"code","7d6f53d0":"code","53e652f0":"code","955c07dc":"code","b2b0b16d":"code","3c2c6d0d":"code","a74032ee":"code","9f4a2e46":"code","2d12fab4":"code","a837d225":"code","b58f2555":"code","586d929e":"code","f035228f":"code","50928a4f":"code","79d798a3":"code","b64009ad":"code","ad0b9d5f":"code","88c088af":"markdown","e46d5dd4":"markdown","206f7b5b":"markdown","ba66cc2f":"markdown"},"source":{"f9117348":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8821448e":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport tensorflow as tf\nfrom tensorflow import keras\nimport gensim\nfrom sklearn.feature_extraction.text import CountVectorizer\n\nfrom nltk.corpus import stopwords\nfrom textblob import Word","7d6f53d0":"train_set=pd.read_csv(\"..\/input\/imdb-dataset-sentiment-analysis-in-csv-format\/Train.csv\")\ntrain_set","53e652f0":"train_set=pd.read_csv(\"..\/input\/imdb-dataset-sentiment-analysis-in-csv-format\/Train.csv\")\ntrain_set","955c07dc":"test_set=pd.read_csv(\"..\/input\/imdb-dataset-sentiment-analysis-in-csv-format\/Test.csv\")\ntest_set","b2b0b16d":"valid=pd.read_csv(\"..\/input\/imdb-dataset-sentiment-analysis-in-csv-format\/Valid.csv\")\nvalid","3c2c6d0d":"sns.countplot(x=\"label\",data=train_set)","a74032ee":"sns.countplot(x=\"label\",data=test_set)","9f4a2e46":"print(train_set.shape, test_set.shape, valid.shape)","2d12fab4":"set=pd.concat([train_set,test_set,valid],axis=0,ignore_index=True)\nset","a837d225":"set.isnull().sum()","b58f2555":"sns.heatmap(set.isnull(),cbar=False)","586d929e":"set.label.value_counts()","f035228f":"review_txt=set.text.apply(gensim.utils.simple_preprocess)\nreview_txt","50928a4f":"rev=[0]*50000\nfor i in range(0,50000):\n    str=\" \"\n    re=review_txt[i]\n    rev[i]=str.join(re)","79d798a3":"cv1=CountVectorizer()\ngen=cv1.fit_transform(rev)\nprint(gen)","b64009ad":"from sklearn.model_selection import train_test_split \nX_train,X_test,y_train,y_test=train_test_split(gen,set.label,train_size=0.8)\n\nfrom sklearn.ensemble import RandomForestClassifier\nrf=RandomForestClassifier(n_estimators=50)\nrf.fit(X_train,y_train)\n\npre=rf.predict(X_test)","ad0b9d5f":"from sklearn.metrics import accuracy_score\n\nprint(accuracy_score(pre,y_test))","88c088af":"# Data Preprocessing","e46d5dd4":"# Data Reading","206f7b5b":"# Model Training ","ba66cc2f":"# Data Visualization"}}