{"cell_type":{"0d6af490":"code","77813d86":"code","c5515913":"code","1a41476b":"code","1867f876":"code","60285ac4":"code","a79fb788":"code","75711c4f":"code","b3969600":"code","2685e5fb":"code","9ae9a884":"code","5a30486d":"code","885ccf01":"code","00204ea1":"code","1ac092f2":"code","b7382696":"code","9f32d80e":"code","c59e0dac":"code","b31b6914":"code","58c5e4d4":"code","02777fd5":"code","283f5ca0":"code","bfd18b2a":"code","2edd474c":"code","3473b6e2":"code","2734cf36":"code","24d37885":"code","e35cd53b":"code","2348c588":"code","1ed7e750":"code","9763d385":"markdown","e3ee43a2":"markdown","d5f94daf":"markdown","ccb74a0a":"markdown","4e1690c8":"markdown","fc41f8ca":"markdown","9244aa66":"markdown","7524be4a":"markdown","975d2cc8":"markdown","5603016b":"markdown","689ce72f":"markdown","7f1f11a1":"markdown","f9aa48be":"markdown","46ee2fa9":"markdown","de90954d":"markdown","4610f48c":"markdown","2928f54a":"markdown","d10f6ae3":"markdown","1906f970":"markdown","0cc8400c":"markdown","c2925c5c":"markdown","beaa4d9d":"markdown","585ccd24":"markdown","1feb933e":"markdown"},"source":{"0d6af490":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sbn","77813d86":"from sklearn.neighbors import KNeighborsClassifier # KNN \nfrom sklearn.naive_bayes import GaussianNB","c5515913":"from sklearn.model_selection import train_test_split, GridSearchCV # train - test split and fine tuning for KNN\nfrom sklearn.preprocessing import MinMaxScaler # Norm\nfrom sklearn.metrics import accuracy_score, confusion_matrix, recall_score, precision_score, roc_curve, roc_auc_score","1a41476b":"Data = pd.read_csv(\"..\/input\/pima-indians-diabetes-database\/diabetes.csv\")\npd.set_option(\"display.max_columns\", 9)\nData.head()","1867f876":"Data.shape # small dataset","60285ac4":"Missing_values_percent = 100*(Data.isnull().sum()\/len(Data[\"Insulin\"]))\nprint(Missing_values_percent)","a79fb788":"Data.dtypes","75711c4f":"sbn.pairplot(Data, hue = \"Outcome\")\nplt.show()","b3969600":"sbn.pairplot(Data[[\"Glucose\", \"BloodPressure\", \"SkinThickness\", \"Insulin\", \"BMI\", \"DiabetesPedigreeFunction\"]])\nplt.show()","2685e5fb":"# Histograms ----> Glucose - BloodPressure - SkinThickness - Insulin - BMI - DiabetesPedigreeFunction\nData[[\"Glucose\", \"BloodPressure\", \"SkinThickness\", \"Insulin\", \"BMI\", \"DiabetesPedigreeFunction\"]].hist(figsize = (16, 9), color = \"darkred\", bins = 60, grid = False, layout = (2, 3))\nplt.show()","9ae9a884":"# kde - BMI\nsbn.displot(data=Data, x=\"BMI\", kind=\"kde\")\nplt.show()","5a30486d":"# kde - Glucose\nsbn.displot(data=Data, x=\"Glucose\", kind=\"kde\")\nplt.show()","885ccf01":"plt.figure(figsize = (16,12))\nsbn.heatmap(Data.corr(), annot = True, vmin = -1, cmap = \"coolwarm\")\nplt.show()","00204ea1":"plt.figure(figsize = (16,12))\ntriu = np.triu(Data.corr())\nsbn.heatmap(Data.corr(), annot = True, vmin = -1, cmap = \"coolwarm\", mask = triu)\nplt.show()","1ac092f2":"plt.figure(figsize = (16,12))\ntril = np.tril(Data.corr())\nsbn.heatmap(Data.corr(), annot = True, vmin = -1, cmap = \"coolwarm\", mask = tril)\nplt.show()","b7382696":"# Features and target\nNorm = MinMaxScaler(feature_range = (0, 1))\nx = Data.drop([\"Outcome\"], axis = 1)\nx = Norm.fit_transform(x)\ny = Data[\"Outcome\"]","9f32d80e":"# Train - test split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.33, random_state = 45)","c59e0dac":"ModelKNN = KNeighborsClassifier()","b31b6914":"# Fine - tuning\nK_Values = np.array([11, 12, 13, 14, 15, 16, 17, 18])\nmetric = [\"minkowski\", \"chebyshev\"]\np = np.array([5, 6, 7, 8, 9, 10, 11])\nparam_grid = {\"n_neighbors\": K_Values, \"metric\": metric, \"p\": p}\nGridKNN = GridSearchCV(estimator = ModelKNN, param_grid = param_grid, cv = 5)\nGridKNN.fit(x_train, y_train)","58c5e4d4":"print(f\"B.score = {GridKNN.best_score_}\")\nprint(f\"k = {GridKNN.best_estimator_.n_neighbors}\")\nprint(f\"metric = {GridKNN.best_estimator_.metric}\")\nprint(f\"p = {GridKNN.best_estimator_.p}\")","02777fd5":"ModelKNN = KNeighborsClassifier(n_neighbors = 15, metric = \"minkowski\", p = 9)\nModelKNN.fit(x_train, y_train)","283f5ca0":"y_predKNN = ModelKNN.predict(x_test)","bfd18b2a":"MatrixKNN = confusion_matrix(y_test, y_predKNN)\nprint(MatrixKNN)","2edd474c":"plt.figure(figsize = (10,7))\nsbn.heatmap(MatrixKNN, annot = True, vmin = 0, vmax = 150, cmap = \"coolwarm\")\nplt.show()","3473b6e2":"print(f\"Accuracy KNN: {accuracy_score(y_test, y_predKNN)}\")\nprint(f\"Recall KNN: {recall_score(y_test, y_predKNN)}\")\nprint(f\"Precision KNN: {precision_score(y_test, y_predKNN)}\")","2734cf36":"ModelNB = GaussianNB()\nModelNB.fit(x_train, y_train)","24d37885":"y_predNB = ModelNB.predict(x_test)","e35cd53b":"MatrixNB = confusion_matrix(y_test, y_predNB)\nprint(MatrixNB)","2348c588":"plt.figure(figsize = (10,7))\nsbn.heatmap(MatrixNB, annot = True, vmin = 0, vmax = 150, cmap = \"coolwarm\")\nplt.show()","1ed7e750":"print(f\"Accuracy Naive Bayes: {accuracy_score(y_test, y_predNB)}\")\nprint(f\"Recall Naive Bayes: {recall_score(y_test, y_predNB)}\")\nprint(f\"Precision Naive Bayes: {precision_score(y_test, y_predNB)}\")","9763d385":"${\\color{darkblue}{\\textbf{Prediction}}}$","e3ee43a2":"# $\\large{\\color{darkred}{6.}}$ $\\large{\\color{darkblue}{\\textbf{Conclusion}}}$ $\\color{red}{\u2713}$","d5f94daf":"# $\\Large{\\color{darkblue}{\\textbf{KNN vs Naive Bayes}}}$","ccb74a0a":"# $\\large{\\color{darkred}{3.}}$ $\\large{\\color{darkblue}{\\textbf{Data Preprocessing}}}$ ","4e1690c8":"${\\color{darkred}{3.3.2.}}$ ${\\color{darkblue}{\\textbf{Histograms and Heatmaps}}}$ $\\color{red}{\u2713}$","fc41f8ca":"# ${\\color{darkred}{4.1.}}$ ${\\color{darkblue}{\\textbf{Confusion matrix}}}$ $\\color{red}{\u2713}$","9244aa66":"# $\\large{\\color{darkred}{1.}}$ $\\large{\\color{darkblue}{\\textbf{Importing Libraries}}}$","7524be4a":"${\\color{darkred}{\\textbf{The Naive Bayes algorithm was generally superior to KNN. For example, it had a higher recall than KNN, which is very good for the type of problem we are solving.}}}$","975d2cc8":"${\\color{darkred}{\\textbf{Medium (.3 to .5) correlation (+): Outcome and Glucose, BMI and SkinThickness, Insulin and SkinThickness, Insulin and Glucose}}}$\n\n${\\color{darkred}{\\textbf{Large (.5 to 1.0) correlation (+): Age and Pregnancies}}}$","5603016b":"# $\\large{\\color{darkred}{2.}}$ $\\large{\\color{darkblue}{\\textbf{Reading the data}}}$ $\\color{red}{\u2713}$","689ce72f":"# ${\\color{darkred}{1.1.}}$ ${\\color{darkblue}{\\textbf{Standard libraries}}}$ $\\color{red}{\u2713}$","7f1f11a1":"# ${\\color{darkred}{3.4.}}$ ${\\color{darkblue}{\\textbf{Data split}}}$ $\\color{red}{\u2713}$","f9aa48be":"# ${\\color{darkred}{3.3.}}$ ${\\color{darkblue}{\\textbf{Correlation}}}$  $\\color{red}{\u2713}$","46ee2fa9":"${\\color{darkblue}{\\textbf{Prediction}}}$","de90954d":"# $\\large{\\color{darkred}{4.}}$ $\\large{\\color{darkblue}{\\textbf{KNN}}}$","4610f48c":"# ${\\color{darkred}{3.1.}}$ ${\\color{darkblue}{\\textbf{Missing Values Treatment}}}$  $\\color{red}{\u2713}$","2928f54a":"# $\\large{\\color{darkred}{5.}}$ $\\large{\\color{darkblue}{\\textbf{Naive Bayes}}}$","d10f6ae3":"${\\color{darkred}{3.3.1.}}$ ${\\color{darkblue}{\\textbf{pairplot}}}$ $\\color{red}{\u2713}$","1906f970":"# ${\\color{darkred}{5.1.}}$ ${\\color{darkblue}{\\textbf{Confusion matrix}}}$ $\\color{red}{\u2713}$","0cc8400c":"# ${\\color{darkred}{1.2.}}$ ${\\color{darkblue}{\\textbf{KNN and GaussianNB}}}$ $\\color{red}{\u2713}$","c2925c5c":"# ${\\color{darkred}{3.2.}}$ ${\\color{darkblue}{\\textbf{Dtypes}}}$  $\\color{red}{\u2713}$","beaa4d9d":"# ${\\color{darkred}{1.3.}}$ ${\\color{darkblue}{\\textbf{Data split, fine-tuning and Analysis}}}$ $\\color{red}{\u2713}$","585ccd24":"${\\color{darkblue}{\\textbf{Heatmap}}}$ $\\color{red}{\u2713}$","1feb933e":"${\\color{darkred}{\\textbf{There are NO missing values in the dataset!!}}}$"}}