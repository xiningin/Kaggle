{"cell_type":{"fb33f229":"code","024cb342":"code","fa18f15b":"code","9cfb75d1":"code","1b682733":"code","4037e0c3":"code","cfa227e9":"code","ef7c7043":"code","1f753e9d":"code","e7fe902c":"code","cd9926ef":"code","ac68185e":"code","8a9a6a5e":"code","d9495c8f":"code","b0e44007":"code","719ae56c":"code","09a827a8":"code","39a4fd1f":"code","931a65b5":"code","5cf6da06":"code","53d78820":"code","e60c05b5":"code","aacf58c3":"code","00087d6a":"code","8f1f79ba":"code","936dfcce":"code","f89e33ca":"code","44e0a645":"code","7c6231a5":"code","6aeb85d4":"code","0532028c":"code","da6ea471":"markdown","581cea86":"markdown","3797fef1":"markdown","3a0f9ead":"markdown","6fa8df4c":"markdown","2751d8e3":"markdown","8d8a073f":"markdown","1db3a4ae":"markdown","cf4bf40b":"markdown","a16dee68":"markdown","1344787d":"markdown","bacf52eb":"markdown","34cf5b93":"markdown","9bca86a9":"markdown","bf0bdf42":"markdown","917825ba":"markdown","ef97d23d":"markdown","c38caa91":"markdown","3db85296":"markdown","186d63e3":"markdown","e61d63da":"markdown","b8c50bba":"markdown"},"source":{"fb33f229":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn import linear_model\nfrom sklearn.preprocessing import StandardScaler\nscale = StandardScaler()\n\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\ndf = pd.read_csv('\/kaggle\/input\/brasilian-houses-to-rent\/houses_to_rent_v2.csv')\n# Any results you write to the current directory are saved as output.","024cb342":"# Vis\u00e3o geral dos dados \/ General view od data\ndf.head(15)","fa18f15b":"# Os valores \u00fanicos da coluna cidade \/ Unique values from city colum\ndf.city.unique()","9cfb75d1":"df.info()","1b682733":"# Cidades mais populares \/ Most popular cities\ndf.groupby(['city'])['city'].aggregate(lambda x: x.count()\/ 10692).plot(kind='pie',autopct='%.2f',fontsize=13);\n","4037e0c3":"# Valor m\u00e9dio das casas por cidade \/  Average Total value by city\ndf.groupby(['city'])['total (R$)'].aggregate(lambda x: x.mean()).plot(kind='bar',color=['blue','orange','green','red','purple']\\\n    , label='Average R$', title='Average R$ in a city', fontsize=15);","cfa227e9":"fig, axes = plt.subplots(1,2, figsize=(14,5))\n\nsns.countplot(x='city', hue='animal', data=df, palette=sns.color_palette(), ax=axes[0]);\nsns.countplot(x='city', hue='furniture', data=df, palette='Set1', ax=axes[1]);","ef7c7043":"sns.pairplot(df, hue = \"city\", corner = True, height=2.5, kind = 'reg')","1f753e9d":"correlacao = df.corr()","e7fe902c":"# Mapa de calor da correla\u00e7ao \/ Heatmap fo Correlation\nplt.figure(figsize=(8, 7))\nsns.heatmap(correlacao, cmap=\"Oranges\", center=0, annot=True,vmin=-1, vmax=1,linewidth=1, linecolor='w', square=True,mask= np.triu(correlacao));","cd9926ef":"\nplt.scatter(x ='fire insurance (R$)', y = 'rent amount (R$)', data = df, s = 100, alpha = 0.3, edgecolor = 'white');\nplt.title('fire insurance  rent amounttal', fontsize = 16);\nplt.ylabel('fire insurance (R$)', fontsize = 12);\nplt.xlabel('rent amount (R$)', fontsize = 12);","ac68185e":"# Como alguns dados deveriam ser do tipo inteiro (int64), mas aparecem como objeto, irei verificar quais s\u00e3o e transformar em inteiros\n# As some data should be of the integer type (int64), but appear as an object, I will check who they are and transform them into integers\nfor i in df.select_dtypes('object'):\n    print(i,df[i].unique())","8a9a6a5e":"# Vou considerar o valor ' - ' como indicando uma casa e n\u00e3o apartamento para facilitar as an\u00e1lises e transformar em Inteiro\n# I will consider the value '-' as indicating a house and not an apartment to facilitate analysis and transform it into Integer\n\ndf['floor'] = df['floor'].apply(lambda x: -1 if x == '-' else x).astype(int)    ","d9495c8f":"df.info()","b0e44007":"# transformando dados categoricos em dummys\n# turning categorical data into dummys\ndummy_city = pd.get_dummies(df.city, prefix='city')\ndummy_animal = pd.get_dummies(df.animal, prefix='animal',drop_first = True) \ndummy_furniture = pd.get_dummies(df.furniture, prefix='furniture',drop_first = True)\n\nprint(dummy_furniture.head())","719ae56c":"# concatenando dummys\/ concatenate dummys\ndf = pd.concat([df,dummy_city], axis=1)\ndf = pd.concat([df,dummy_animal], axis=1)\ndf = pd.concat([df,dummy_furniture], axis=1)\n\ndf.head()","09a827a8":"df.info()","39a4fd1f":"correlacao_02 = df.corr()","931a65b5":"# Nova correla\u00e7\u00e3o com os dados transformados\n# New correlation with transformed data\nplt.figure(figsize=(15, 12))\nsns.heatmap(correlacao_02, cmap=\"coolwarm\", center=0, annot=True,vmin=-1, vmax=1,linewidth=1, linecolor='w', square=True,mask= np.triu(correlacao_02));","5cf6da06":"df.columns","53d78820":"# Decidi usar apenas as casas de S\u00e3o Paulo pois usando todas as cidades obtive mais erros;\n# I decided to use only the houses in S\u00e3o Paulo because using all the cities I got more errors;\n\ndf_Sao_Paulo = df.loc[df['city'] == 'S\u00e3o Paulo']","e60c05b5":"# Valores \/ Values\n\n\n# Vari\u00e1vel Dependente \/ Dependent Variable \nX_var = df_Sao_Paulo[['hoa (R$)','rent amount (R$)','property tax (R$)']]\n\n# Vari\u00e1vel Independente \/ Independent Variable \ny_var = df_Sao_Paulo['total (R$)']\n","aacf58c3":"# Dividindo em Treino e Teste\n# Splitting the dataset into the Training set and Test set\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X_var, y_var, test_size = 0.2, random_state = 0)","00087d6a":"# Usando regressor\n# Fitting Multiple Linear Regression to the Training set\nfrom sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train, y_train)","8f1f79ba":"# Predizendo com r2 score \/ Predicting with r2 score\ny_pred = regressor.predict(X_test)\n\nfrom sklearn.metrics import r2_score\nscore=r2_score(y_test,y_pred)\nscore","936dfcce":"# Coeficientes \nregressor.coef_","f89e33ca":"# Intercept\nregressor.intercept_","44e0a645":"valor_teste = df_Sao_Paulo.loc[0][12]\nvalor_teste","7c6231a5":"\ndf_Sao_Paulo.loc[0]","6aeb85d4":"#predizendo um valor, inserir:\n'''  \n\nX_var = df_Sao_Paulo[['hoa (R$)','rent amount (R$)','property tax (R$)']]\n\n'''\npredicted = regressor.predict([[2065,3300,211]])\n\nprint(\"O valor predito era pra ser {:03d} R$ e foi {:03d} R$.\".format(valor_teste,int(predicted)))\n\ndiferenca = predicted - valor_teste\n\nprint(\"com uma diferen\u00e7a de {:02d} R$.\".format(int(diferenca)))\n","0532028c":"import statsmodels.api as sm \nfrom termcolor import colored as cl # para mudar fonte do terminal e deixar em negrito\n\nslr_model = sm.OLS(y_var, X_var) # Ordinary Least Squares \nslr_reg = slr_model.fit()\n\n# sumario\nprint(cl(slr_reg.summary(),attrs = ['bold']))","da6ea471":"> Aqui pode-se ver a alta correla\u00e7\u00e3o linear entre as duas vari\u00e1veis selecionadas;\n> Here you can see the high linear correlation between the two selected variables.","581cea86":"## Considera\u00e7\u00f5es finais \/  Final considerations","3797fef1":"> Os tipos de dados (Dtype) s\u00e3o diferentes, transformar depois.\n> The data types (Dtype) are different, transform it later.","3a0f9ead":"## Tratamento de Dados \/ Data Engineering","6fa8df4c":"Devido a alta correla\u00e7\u00e3o entre fire insurance e rent amount (0.99), irei retirar a fire insurance para evitar multicolinearidade","2751d8e3":"### Testando com o primeiro valor do Data Frame","8d8a073f":"> Pode-se notar a rela\u00e7\u00e3o entre as vari\u00e1veis, que n\u00e3o se parece t\u00e3o linear. Isto ser\u00e1 mais evidente no final da an\u00e1lise.\n> One can notice the relationship between the variables, which does not seem so linear. This will be most evident at the end of the analysis.","1db3a4ae":"* R-squared (uncentered): 1.000    \n    * Deve estar proximo de 1\n* F-statistic(significance of the regression): 1.773e+09\n    * Deve estar proximo de 0\n* AIC(It is calculated as number of parameters minus the likelihood of the overall model): 4.427e+04\n    * Deve ser o menor poss\u00edvel\n* Omnibus(normal distribuition of errors): 11494.474\n    * Deve estar proximo de 1\n* Durbin-Watson(homoscedasticity , constant variance of erros): 2.000\n    * Deve estar entre 1 e 2\n*  Jarque-Bera (JB)(distribution analysis of the regression errors): 70846183.405\n    * Quanto maior, indica que os erros n\u00e3o est\u00e3o distribuidos normalmente","cf4bf40b":"## An\u00e1lise Explorat\u00f3ria de Dados \/ Explodaroty Data Analisys - EDA ","a16dee68":"> Pouca diferen\u00e7a...\n> Little difference ...","1344787d":"> o sinal '-' em \"floor\" \n> the sign '-' in \"floor\"","bacf52eb":"O OLS permite uma vis\u00e3o mais detalhada da regress\u00e3o permitindo uma melhor an\u00e1lise e ajuste\n\nThe OLS allows a more detailed view of the regression allowing for better analysis and adjustment","34cf5b93":"> A maioria das casas aceitam animais e n\u00e3o possuem m\u00f3veis.\n> Most houses accept animals and have no furniture.","9bca86a9":"O modelo ainda est\u00e1 muito impreciso, segundo os dados da OLS. Irei testar outros algoritmos como \u00c0rvores de Decis\u00e3o, Redes Neurais e outros. Qualquer ajuda \u00e9 bem vinda.\n\nThe model is still very inaccurate, according to OLS data. I will test other algorithms like Decision Trees, Neural Networks and others. Every help is welcome.","bf0bdf42":"## Regression","917825ba":"O objetivo principal deste notebook \u00e9 realizar uma regress\u00e3o multipla para verificar o pre\u00e7o total em R$ de um im\u00f3vel.\nIrei escrever baseado no que j\u00e1 conhe\u00e7o, nos notebooks que vejo aqui e ir melhorando com o tempo. Irei adicionar coment\u00e1rios\nIrei adicionar coment\u00e1rios em portugues e ingles\n\nThe main objective of this notebook is to perform a multiple regression to check the total price in R $ of a property.\nI will write based on what I already know, on the notebooks I see here and get better with time. I will add comments\nI will add comments in Portuguese and English","ef97d23d":"* R-squared (uncentered): 1,000\n     * Must be close to 1\n* F-statistic (significance of the regression): 1,773e + 09\n     * Must be close to 0\n* AIC (It is calculated as number of parameters minus the likelihood of the overall model): 4.427e + 04\n     * Must be as small as possible\n* Omnibus (normal distribution of errors): 11494.474\n     * Must be close to 1\n* Durbin-Watson (homoscedasticity, constant variance of errors): 2,000\n     * Must be between 1 and 2\n* Jarque-Bera (JB) (distribution analysis of the regression errors): 70846183.405\n     * The larger, indicates that errors are not normally distributed","c38caa91":"## OLS Regression Results","3db85296":"## Correla\u00e7\u00e3o \/ Correlation","186d63e3":"**In English**","e61d63da":"> Nota-se que a maioria dos dados concentra-se em S\u00e3o Paulo o que favorece a an\u00e1lise.\n> Note that most data is concentrated in S\u00e3o Paulo, which favors the analysis. ","b8c50bba":"> N\u00e3o mudou muita coisa e algumas vari\u00e1veis deram pequena correla\u00e7\u00e3o negativa;\n> Not much has changed and some variables gave a small negative correlation."}}