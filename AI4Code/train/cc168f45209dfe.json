{"cell_type":{"4f75e573":"code","01cdde92":"code","d3a407e1":"code","e1a5752d":"code","bc224625":"code","a913a171":"code","d49be1f4":"code","3c8c9eaf":"code","5cd79132":"code","c2169b7e":"code","44560296":"code","1feb2261":"code","9aa92830":"code","7acf7805":"code","74164759":"code","d2a6070e":"code","d2e3c030":"code","8b28379e":"code","1e576f88":"code","95eff36c":"code","8c34e6bf":"code","207259ab":"code","bb85c5e9":"code","f1651869":"code","163ef094":"code","e05e6536":"code","ae05d066":"code","068aa9d9":"code","cd11229f":"code","264f0534":"code","bc9692d6":"code","3e8fc7a1":"code","3da7e5c9":"code","397a10aa":"code","1629007a":"code","7b55269a":"markdown","9763e112":"markdown","eb2da8c7":"markdown","f2b8d693":"markdown","2490d612":"markdown","87d0c152":"markdown","14234ae2":"markdown","5acc0ea1":"markdown","25f2b3b2":"markdown","7a26cd0e":"markdown","6e416a42":"markdown","89939a49":"markdown","cf0647d0":"markdown","1e1b44c8":"markdown","51a2bde7":"markdown","b2412a81":"markdown","208438dc":"markdown","b9f76213":"markdown","aae8c1f0":"markdown","cd165d95":"markdown","4c7745ce":"markdown","39793336":"markdown","e992c52d":"markdown","c3d95211":"markdown","0c16a2a2":"markdown","c0766526":"markdown","18ecc4b4":"markdown","b78457d1":"markdown","0605765f":"markdown","803cc8f5":"markdown","7b9fb1f2":"markdown","8be52a4b":"markdown","217bfd45":"markdown"},"source":{"4f75e573":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nfrom plotly.offline import init_notebook_mode, iplot\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","01cdde92":"games = pd.read_csv(\"..\/input\/nfl-big-data-bowl-2021\/games.csv\")\ngames","d3a407e1":"gameDate = games.gameDate.value_counts()\ntrace = go.Bar(\n    y=gameDate.index[::-1],\n    x=gameDate.values[::-1],\n    orientation='h',\n\n    marker=dict(\n        color=gameDate.values[::-1],\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='gameDate',\n    template=\"plotly_white\",\n    height=900,\n\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"gameDate\")","e1a5752d":"gameTimeEastern = games.gameTimeEastern.value_counts()\n\ntrace = go.Bar(\n    y=gameTimeEastern.index[::-1],\n    x=gameTimeEastern.values[::-1],\n    orientation='h',\n\n    marker=dict(\n        color=gameTimeEastern.values[::-1],\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='gameTimeEastern',\n    template=\"plotly_white\",\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"gameTimeEastern\")","bc224625":"homeTeamAbbr = games.homeTeamAbbr.value_counts()\n\ntrace = go.Bar(\n    y=homeTeamAbbr.index[::-1],\n    x=homeTeamAbbr.values[::-1],\n    orientation='h',\n\n    marker=dict(\n        color=homeTeamAbbr.values[::-1],\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='homeTeamAbbr',\n    template=\"plotly_white\",\n    height=800,\n    )\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"homeTeamAbbr\")","a913a171":"visitorTeamAbbr = games.visitorTeamAbbr.value_counts()\n\ntrace = go.Bar(\n    y=visitorTeamAbbr.index[::-1],\n    x=visitorTeamAbbr.values[::-1],\n    orientation='h',\n\n    marker=dict(\n        color=visitorTeamAbbr.values[::-1],\n        colorscale = 'BrBg',\n        reversescale = True\n    )\n)\n\nlayout = go.Layout(\n    title='visitorTeamAbbr',\n    template=\"plotly_white\",\n    height=800,\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"visitorTeamAbbr\")","d49be1f4":"week = games.week.value_counts()\ntrace = go.Bar(\n    x=week.index[::-1],\n    y=week.values[::-1],\n    orientation='v',\n    marker=dict(\n        color=week.values[::-1],\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='week',\n    template=\"plotly_white\"\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"week\")","3c8c9eaf":"players = pd.read_csv(\"..\/input\/nfl-big-data-bowl-2021\/players.csv\")\nplayers","5cd79132":"from plotly.subplots import make_subplots\n\nheight = players.height.value_counts()\ntrace1 = go.Bar(\n    x=height.index,\n    y=height.values,\n    marker=dict(\n        color=height.values,\n        colorscale = 'BrBg',\n        reversescale = False\n    ),\n)\n\nweight = players.weight.value_counts().head(10)\n\ntrace2 = go.Bar(\n    x=weight.index,\n    y=weight.values,\n    orientation='v',\n    marker=dict(\n        color=weight.values,\n        colorscale = 'BrBg',\n        reversescale = False\n    ),\n)\nfig = make_subplots(rows=1, cols=2, subplot_titles=('height', 'weight'))\nfig.append_trace(trace1, 1,1)\nfig.append_trace(trace2, 1,2)\n\n\nfig['layout'].update(showlegend=False, template ='plotly_white') \npy.iplot(fig, filename=\"weight\")","c2169b7e":"collegeName = players.collegeName.value_counts().head(50)\ntrace = go.Bar(\n    y=collegeName.index[::-1],\n    x=collegeName.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=collegeName.values[::-1],\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='collegeName',\n    template=\"plotly_white\",  \n    height=1000,\n\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"collegeName\")","44560296":"position = players.position.value_counts().head(50)\ntrace = go.Bar(\n    x=position.index,\n    y=position.values,\n    orientation = 'v',\n    marker=dict(\n        color=position.values[::-1],\n        colorscale = 'BrBg',\n        reversescale = False\n    ),\n)\n\nlayout = go.Layout(\n    title='position',\n    template=\"plotly_white\"\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\n\npy.iplot(fig, filename=\"position\")","1feb2261":"plays = pd.read_csv(\"..\/input\/nfl-big-data-bowl-2021\/plays.csv\")\nplays.head()","9aa92830":"quarter = plays.quarter.value_counts()\nlabels = plays.quarter.unique()\n\ntrace1 = go.Pie(labels=labels, \n               values=quarter, \n                domain=dict(x=[0, 0.4]),\n               )\n\ndown = plays.down.value_counts()\nlabels = plays.down.unique()\n\ntrace2 = go.Pie(labels=labels, \n               values=down, \n                domain=dict(x=[0.5, 0.9]),\n               )\n\nlayout = go.Layout(title=\"quarter-down\",)\ndata = [trace1,trace2]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"quarter-down\")","7acf7805":"yardsToGo = plays.yardsToGo.value_counts()\n\ntrace = go.Bar(\n    x=yardsToGo.index,\n    y=yardsToGo.values,\n    marker=dict(\n        color=yardsToGo.values,\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='yardsToGo',\n    template=\"plotly_white\"\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"yardsToGo\")","74164759":"possessionTeam = plays.possessionTeam.value_counts()\n\ntrace = go.Bar(\n    x=possessionTeam.index,\n    y=possessionTeam.values,\n    orientation = 'v',\n    marker=dict(\n        color=possessionTeam.values,\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='possessionTeam',\n    template=\"plotly_white\"\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"possessionTeam\")","d2a6070e":"playType = plays.playType.value_counts()\n\ntrace = go.Bar(\n    x=playType.index,\n    y=playType.values,\n    marker=dict(\n        color=playType.values,\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='playType',\n    template=\"plotly_white\"\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"playType\")","d2e3c030":"yardlineSide = plays.yardlineSide.value_counts()\n\ntrace = go.Bar(\n    x=yardlineSide.index,\n    y=yardlineSide.values,\n    marker=dict(\n        color=yardlineSide.values,\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='yardlineSide',\n    template=\"plotly_white\"\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"yardlineSide\")","8b28379e":"yardlineNumber = plays.yardlineNumber.value_counts()\ntrace = go.Bar(\n    x=yardlineNumber.index,\n    y=yardlineNumber.values,\n    orientation = 'v',\n    marker=dict(\n        color=yardlineNumber.values,\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='yardlineNumber',\n    template=\"plotly_white\",\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"yardlineNumber\")","1e576f88":"offenseFormation = plays.offenseFormation.value_counts()\n\ntrace = go.Bar(\n    y=offenseFormation.index[::-1],\n    x=offenseFormation.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=offenseFormation.values,\n        colorscale = 'BrBg',\n        reversescale = False\n    ),\n)\n\nlayout = go.Layout(\n    title='offenseFormation',\n    template=\"plotly_white\",\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"offenseFormation\")","95eff36c":"personnelO = plays.personnelO.value_counts()\n\ntrace = go.Bar(\n    y=personnelO.index[::-1],\n    x=personnelO.values[::-1],\n    orientation='h',\n    marker=dict(\n        color=personnelO.values[::-1],\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='personnelO',\n    template=\"plotly_white\",\n    height=1000\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"personnelO\")","8c34e6bf":"from plotly.subplots import make_subplots\n\ndefendersInTheBox = plays.defendersInTheBox.value_counts()\ntrace1 = go.Bar(\n    x=defendersInTheBox.index,\n    y=defendersInTheBox.values,\n    marker=dict(\n        color=defendersInTheBox.values,\n        colorscale = 'BrBg',\n        reversescale = False\n    ),\n)\n\nnumberOfPassRushers = plays.numberOfPassRushers.value_counts()\n\ntrace2 = go.Bar(\n    x=numberOfPassRushers.index,\n    y=numberOfPassRushers.values,\n    orientation='v',\n    marker=dict(\n        color=numberOfPassRushers.values,\n        colorscale = 'BrBg',\n        reversescale = False\n    ),\n)\nfig = make_subplots(rows=1, cols=2, subplot_titles=('defendersInTheBox', 'numberOfPassRushers'))\nfig.append_trace(trace1, 1,1)\nfig.append_trace(trace2, 1,2)\n\n\nfig['layout'].update(showlegend=False, template ='plotly_white') \npy.iplot(fig, filename=\"numberOfPassRushers\")","207259ab":"personnelD = plays.personnelD.value_counts()\n\ntrace = go.Bar(\n    y=personnelD.index[::-1],\n    x=personnelD.values[::-1],\n    orientation='h',\n    marker=dict(\n        color=personnelD.values[::-1],\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='personnelD',\n    template=\"plotly_white\",\n    height=1000\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"personnelD\")","bb85c5e9":"typeDropback = plays.typeDropback.value_counts()\n\ntrace = go.Bar(\n    y=typeDropback.index[::-1],\n    x=typeDropback.values[::-1],\n    orientation= 'h',\n    marker=dict(\n        color=typeDropback.values,\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='typeDropback',\n    template=\"plotly_white\",\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"typeDropback\")","f1651869":"preSnapVisitorScore = plays.preSnapVisitorScore.value_counts()\n\ntrace = go.Bar(\n    x=preSnapVisitorScore.index,\n    y=preSnapVisitorScore.values,\n    marker=dict(\n        color=preSnapVisitorScore.values,\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='preSnapVisitorScore',\n    template=\"plotly_white\",\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"preSnapVisitorScore\")","163ef094":"absoluteYardlineNumber = plays.absoluteYardlineNumber.value_counts()\n\ntrace = go.Bar(\n    x=absoluteYardlineNumber.index,\n    y=absoluteYardlineNumber.values,\n    marker=dict(\n        color=absoluteYardlineNumber.values,\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='absoluteYardlineNumber',\n    template=\"plotly_white\",\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"absoluteYardlineNumber\")","e05e6536":"passResult = plays['passResult'].value_counts().reset_index()\n\npassResult.columns = [\n    'passResult', \n    'plays'\n]\n\npassResult = passResult.sort_values('plays')\n\nfig = px.pie(\n    passResult, \n    names='passResult', \n    values=\"plays\",  \n    height=500,\n    width=600\n)\n\nfig.show()","ae05d066":"from plotly.subplots import make_subplots\n\noffensePlayResult = plays.offensePlayResult.value_counts().sample(10)\n\ntrace1 = go.Scatter(\n    x=offensePlayResult.index,\n    y=offensePlayResult.values,\n    mode='markers',\n    marker=dict(\n        sizemode = 'diameter',\n        sizeref = 1,\n        size = 40,\n        color = offensePlayResult.values,\n        colorscale='BrBg',\n        showscale=True)\n)\n\nplayResult = plays.playResult.value_counts().sample(10)\n\ntrace2 = go.Scatter(\n    x=playResult.index,\n    y=playResult.values,\n    mode='markers',\n    marker=dict(\n        sizemode = 'diameter',\n        sizeref = 1,\n        size = 40,\n        color =playResult.values,\n        colorscale='BrBg',\n        showscale=True)\n)\n\nfig = make_subplots(rows=1, cols=2, subplot_titles=('offensePlayResult', 'playResult'))\nfig.append_trace(trace1, 1,1)\nfig.append_trace(trace2, 1,2)\n\n\nfig['layout'].update(showlegend=False, template ='plotly_white') \npy.iplot(fig)","068aa9d9":"isDefensivePI = plays.isDefensivePI.value_counts()\n\ntrace = go.Bar(\n    x=isDefensivePI.index,\n    y=isDefensivePI.values,\n    marker=dict(\n        color=isDefensivePI.values,\n        colorscale = 'BrBg',\n        reversescale = False\n    ),\n)\n\nlayout = go.Layout(\n    title='isDefensivePI',\n    template=\"plotly_white\",\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"isDefensivePI\")","cd11229f":"weeks = [\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week1.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week2.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week3.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week4.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week5.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week6.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week7.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week8.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week9.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week10.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week11.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week12.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week13.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week14.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week15.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week16.csv',\n    '\/kaggle\/input\/nfl-big-data-bowl-2021\/week17.csv'\n]\n","264f0534":"week_df = list()\nfor week in weeks:\n    week_df.append(pd.read_csv(week))\nweeks = pd.concat(week_df)\nweeks = weeks[:10000]\nweeks","bc9692d6":"mix = weeks.columns\nmix = mix[1:8]\nmix = mix[:10000]","3e8fc7a1":"traces = [\n    go.Histogram(\n        x = weeks[mix[i]].value_counts().index, \n        name=mix[i]\n    ) for i in range(len(mix))\n]\n\nfig = make_subplots(rows=3, cols=3,subplot_titles=(mix))\nfor i in range(len(traces)):\n    fig.append_trace(\n        traces[i], \n        (i \/\/ 3) + 1, \n        (i % 3) + 1\n    )\n\nfig.update_layout(\n    template=\"plotly_white\",\n    height=1000\n)\n\nfig.show()","3da7e5c9":"event = weeks.event.value_counts()\n\ntrace = go.Bar(\n        x=event.index,\n        y=event.values,\n    marker=dict(\n            color=event.values,\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n        title='event',\n    template=\"plotly_white\",\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"event\")","397a10aa":"jerseyNumber = weeks.jerseyNumber.value_counts()\n\ntrace = go.Bar(\n        x=jerseyNumber.index,\n        y=jerseyNumber.values,\n    marker=dict(\n            color=jerseyNumber.values,\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n        title='jerseyNumber',\n    template=\"plotly_white\",\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"event\")","1629007a":"position = weeks.position.value_counts()\n\ntrace = go.Bar(\n        y=position.index[::-1],\n        x=position.values[::-1],\n        orientation= 'h',\n    marker=dict(\n            color=position.values,\n        colorscale = 'BrBg',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n        title='position',\n    template=\"plotly_white\",\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"position\")","7b55269a":"<a id=\"22\"><\/a>\n# typeDropback","9763e112":"<a id=\"17\"><\/a>\n# yardlineNumber","eb2da8c7":"<a id=\"4\"><\/a>\n# homeTeamAbbr","f2b8d693":"<a id=\"9\"><\/a>\n# collegeName","2490d612":"<a id=\"15\"><\/a>\n# playType","87d0c152":"<a id=\"30\"><\/a>\n# event","14234ae2":"<a id=\"23\"><\/a>\n# preSnapVisitorScore","5acc0ea1":"<a id=\"11\"><\/a>\n# plays.csv","25f2b3b2":"<a id=\"13\"><\/a>\n# yardsToGo","7a26cd0e":"<a id=\"25\"><\/a>\n# passResult","6e416a42":"<a id=\"21\"><\/a>\n# personnelD","89939a49":"<a id=\"7\"><\/a>\n# players.csv","cf0647d0":"<a id=\"6\"><\/a>\n# week","1e1b44c8":"<a id=\"10\"><\/a>\n# position","51a2bde7":"<a id=\"8\"><\/a>\n# height-weight ","b2412a81":"<a id=\"1\"><\/a>\n# games.csv","208438dc":"<a id=\"14\"><\/a>\n# possessionTeam\t","b9f76213":"<a id=\"26\"><\/a>\n# offensePlayResult-playResult","aae8c1f0":"<a id=\"12\"><\/a>\n# quarter-down","cd165d95":"<a id=\"16\"><\/a>\n# yardlineSide","4c7745ce":"<a id=\"18\"><\/a>\n# offenseFormation","39793336":"# INTRODUCTION\n1. [games.csv](#1)\n    1. [gameDate](#2)\n    1. [gameTimeEastern](#3)\n    1. [homeTeamAbbr](#4)\n    1. [visitorTeamAbbr](#5)\n    1. [week](#6)\n1. [players.csv](#7)\n    1. [height-weight](#8)\n    1. [collegeName](#9)\n    1. [position](#10)\n1. [plays.csv](#11)\n    1. [quarter-down](#12)\n    1. [yardsToGo](#13)\n    1. [possessionTeam](#14)\n    1. [playType](#15)\n    1. [yardlineSide](#16)\n    1. [yardlineNumber](#17)\n    1. [offenseFormation](#18)\n    1. [personnelO](#19)\n    1. [defendersInTheBox-numberOfPassRushers](#20)\n    1. [personnelD](#21)\n    1. [typeDropback](#22)\n    1. [preSnapVisitorScore](#23)\n    1. [absoluteYardlineNumber](#24)\n    1. [passResult](#25)   \n    1. [offensePlayResult-playResult](#26) \n    1. [isDefensivePI](#27) \n1. [weeks.csv](#28)\n    1. [x-y-s-a-dis-o-dir](#29)\n    1. [event](#30)\n    1. [jerseyNumber](#31)\n    1. [position](#32)","e992c52d":"<a id=\"27\"><\/a>\n# isDefensivePI ","c3d95211":"<a id=\"3\"><\/a>\n# gameTimeEastern","0c16a2a2":"<a id=\"5\"><\/a>\n# visitorTeamAbbr","c0766526":"<a id=\"31\"><\/a>\n# jerseyNumber","18ecc4b4":"<a id=\"24\"><\/a>\n# absoluteYardlineNumber","b78457d1":"<a id=\"20\"><\/a>\n# defendersInTheBox-numberOfPassRushers","0605765f":"<a id=\"32\"><\/a>\n# position ","803cc8f5":"<a id=\"29\"><\/a>\n# x-y-s-a-dis-o-dir","7b9fb1f2":"<a id=\"28\"><\/a>\n# weeks.csv","8be52a4b":"<a id=\"19\"><\/a>\n# personnelO","217bfd45":"<a id=\"2\"><\/a>\n# gameDate"}}