{"cell_type":{"fd9863ef":"code","056f6196":"code","919adb20":"code","1138d414":"code","78ad1b52":"code","26870a8d":"code","5426131a":"code","33cc6d65":"code","edd94511":"code","6c05567e":"code","bd883cd1":"code","b6aa3517":"code","1c9ecc93":"code","27e273c6":"code","199cb111":"code","e9fe78ff":"code","591d658e":"markdown","7ad300d2":"markdown","491650d3":"markdown","530ef44c":"markdown","c7f68bc2":"markdown"},"source":{"fd9863ef":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()","056f6196":"data = pd.read_csv('..\/input\/noshowappointments\/KaggleV2-May-2016.csv')\ndata.head(5)","919adb20":"data.nunique()","1138d414":"data.info()","78ad1b52":"# fixing and cleaning data\ndata = data[data['Handcap'] <= 1]\ndata = data[data['Age'] >= 0]\ndata['No-show'] = data['No-show'].map({'Yes':1 , 'No':0})\ndata.nunique()","26870a8d":"data.head()","5426131a":"# supposing that receiving a SMS will be the treatment which we will apply to the experimental group\n# spliting data into 2 groups ( SMS receciveed & NO_SMS_received ) \n# then removing duplicates ( for 6 control variables ) for each group\n# the target varible here will be to decrease the NO-show = 1 .\ndata_SMS_received = data[data['SMS_received']==1].drop_duplicates(subset=['Neighbourhood','Scholarship','Hipertension','Diabetes','Alcoholism','Handcap'] )\ndata_No_SMS_received = data[data['SMS_received']==0].drop_duplicates(subset=['Neighbourhood','Scholarship','Hipertension','Diabetes','Alcoholism','Handcap'] )\nprint(data_SMS_received.shape)\nprint(data_No_SMS_received.shape)","33cc6d65":"# making sure that we have only one observation for each patientid in each group\ndata_SMS_received = data_SMS_received.drop_duplicates(subset=['PatientId'])\ndata_No_SMS_received = data_No_SMS_received.drop_duplicates(subset=['PatientId'])\nprint(data_SMS_received.shape)\nprint(data_No_SMS_received.shape)","edd94511":"# concatenating the 2 groups\ndata_ = pd.concat([data_SMS_received,data_No_SMS_received])\ndata_ = data_.drop_duplicates(subset=['PatientId'])\nprint(data_.shape)","6c05567e":"# making matched pair groups ( for the 6 control variables )\n# 1 group received a SMS & the other did not \ndata_ = data_[(data_.duplicated(subset=['Neighbourhood','Scholarship','Hipertension','Diabetes',\n                                        'Alcoholism','Handcap'],keep = False)) == True ]\nprint(data_[data_['SMS_received'] == 0 ].shape)\nprint(data_[data_['SMS_received'] == 1 ].shape)","bd883cd1":"control_mean = data_[data_['SMS_received'] == 0 ]['No-show'].sum()\/data_[data_['SMS_received'] == 0 ].shape[0]\ncontrol_mean","b6aa3517":"experiment_mean = data_[data_['SMS_received'] == 1 ]['No-show'].sum()\/data_[data_['SMS_received'] == 1 ].shape[0]\nexperiment_mean","1c9ecc93":"obs_diff = control_mean-experiment_mean\nobs_diff","27e273c6":"diffs = []\nfor _ in range(10000):\n    sample = data_.sample(data_.shape[0],replace=True)\n    control_mean = sample[sample['SMS_received'] == 0 ]['No-show'].sum()\/sample[sample['SMS_received'] == 0 ].shape[0]\n    experiment_mean = sample[sample['SMS_received'] == 1 ]['No-show'].sum()\/sample[sample['SMS_received'] == 1 ].shape[0]\n    diffs.append(control_mean-experiment_mean)","199cb111":"diffs = np.array(diffs)\nplt.hist(diffs)","e9fe78ff":"null_vals = np.random.normal(0,diffs.std(),diffs.size)\nplt.hist(null_vals)\nplt.axvline(obs_diff,color='red')","591d658e":"## Note that we can apply the same idea for every feature , this notebook is for SMS_received only\n## You can also check my deep analysis and visualizations for a better understanding of the data , [here](http:\/\/www.kaggle.com\/mohamedelbeih\/no-show-deep-analysis)","7ad300d2":"#### we will use bootstrapping technique , thus we will have imbalanced samples for making groups\n#### so we will use the percent of No-show for each groups as our target variable \n#### this percent is same like CTR ( click through rate ) for websites feature testing.  ","491650d3":"### the null hypothesis :\n#### the No-show = 1 percent for patients who didn't receive a SMS >= the No-show = 1 percent for patients who did receive a SMS\n### the alternative hypothesis : \n#### the No-show = 1 percent for patients who didn't receive a SMS < the No-show = 1 percent for patients who did receive a SMS","530ef44c":"### Creating a matched pair design A\\B test","c7f68bc2":"#### So we reject the null\n#### The No-show = 1 percent for patients who didn't receive a SMS < the No-show = 1 percent for patients who did receive a SMS\n#### So it seems that sending SMSs make patients not to attend the appointment , this is logically unacceptable , so we might be in a need to fix our strategy for sending SMSs ( sending to people who , receiving SMSs to them will increase their attendance )"}}