{"cell_type":{"ddb67828":"code","10bb950a":"code","0f207100":"code","51e0baca":"code","d10e966e":"code","db953301":"code","fc44097f":"code","bbdcefce":"code","4659ca7d":"code","fc1c4dcf":"code","1b373932":"code","0e3a7959":"code","02a211a3":"code","7680b4f1":"markdown","9e8a3d34":"markdown","56d110bd":"markdown","b1fcc3ee":"markdown","4f314f3b":"markdown","33d002e2":"markdown"},"source":{"ddb67828":"!pip3 install arch","10bb950a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport statsmodels.graphics.tsaplots as sgt\nimport statsmodels.tsa.stattools as sts\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom scipy.stats.distributions import chi2 \nfrom arch import arch_model\nfrom math import sqrt\nimport seaborn as sns\nsns.set()","0f207100":"raw_csv_data = pd.read_csv(\"..\/input\/financial-markets\/Index2018.csv\") \ndf_comp=raw_csv_data.copy()\ndf_comp.date = pd.to_datetime(df_comp.date, dayfirst = True)\ndf_comp.set_index(\"date\", inplace=True)\ndf_comp=df_comp.asfreq('b')\ndf_comp=df_comp.fillna(method='ffill')","51e0baca":"df_comp['market_value']=df_comp.ftse","d10e966e":"del df_comp['spx']\ndel df_comp['dax']\ndel df_comp['ftse']\ndel df_comp['nikkei']\nsize = int(len(df_comp)*0.8)\ndf, df_test = df_comp.iloc[:size], df_comp.iloc[size:]","db953301":"import warnings\nwarnings.filterwarnings(\"ignore\")","fc44097f":"def LLR_test(mod_1, mod_2, DF = 1):\n    L1 = mod_1.fit(start_ar_lags = 11).llf\n    L2 = mod_2.fit(start_ar_lags = 11).llf\n    LR = (2*(L2-L1))    \n    p = chi2.sf(LR, DF).round(3)\n    return p","bbdcefce":"df['returns'] = df.market_value.pct_change(1)*100","4659ca7d":"model_garch_1_1 = arch_model(df.returns[1:], mean = \"Constant\", vol = \"GARCH\", p = 1, q = 1)\nresults_garch_1_1 = model_garch_1_1.fit(update_freq = 5)\nresults_garch_1_1.summary()","fc1c4dcf":"model_garch_1_2 = arch_model(df.returns[1:], mean = \"Constant\",  vol = \"GARCH\", p = 1, q = 2)\nresults_garch_1_2 = model_garch_1_2.fit(update_freq = 5)\nresults_garch_1_2.summary()","1b373932":"model_garch_1_3 = arch_model(df.returns[1:], mean = \"Constant\",  vol = \"GARCH\", p = 1, q = 3)\nresults_garch_1_3 = model_garch_1_3.fit(update_freq = 5)\nresults_garch_1_3.summary()","0e3a7959":"model_garch_2_1 = arch_model(df.returns[1:], mean = \"Constant\",  vol = \"GARCH\", p = 2, q = 1)\nresults_garch_2_1 = model_garch_2_1.fit(update_freq = 5)\nresults_garch_2_1.summary()","02a211a3":"model_garch_3_1 = arch_model(df.returns[1:], mean = \"Constant\",  vol = \"GARCH\", p = 3, q = 1)\nresults_garch_3_1 = model_garch_3_1.fit(update_freq = 5)\nresults_garch_3_1.summary()","7680b4f1":"## The Simple GARCH Model","9e8a3d34":"## Importing the relevant packages","56d110bd":"## Creating Returns","b1fcc3ee":"## Importing the Data and Pre-processing ","4f314f3b":"## Higher-Lag GARCH Models","33d002e2":"## The LLR Test"}}