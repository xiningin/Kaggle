{"cell_type":{"a3ff09cf":"code","3b69f9e9":"code","864eeaa8":"code","5fde4113":"code","987f748c":"code","a50bf2d2":"code","83128b47":"code","ffc5da13":"code","e8506cec":"code","c36ca51f":"code","737cb70a":"code","983136f5":"code","757c9823":"code","90e350a9":"code","eb0fe25f":"code","d6e79eb0":"code","53039f3f":"code","88a3238a":"markdown","8cffb008":"markdown","ce10cec3":"markdown","8ee65647":"markdown","3b5980cd":"markdown","12aa3cbd":"markdown","a5e29f63":"markdown","9fdcda1c":"markdown","07a861cb":"markdown","83958c4e":"markdown","a34fe10c":"markdown"},"source":{"a3ff09cf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3b69f9e9":"import pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.ensemble import IsolationForest\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.metrics import confusion_matrix\nfrom mlxtend.plotting import plot_confusion_matrix\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","864eeaa8":"path = '\/kaggle\/input\/tabular-playground-series-mar-2021\/'\nos.listdir(path)","5fde4113":"train_data = pd.read_csv(path+'train.csv')\ntest_data = pd.read_csv(path+'test.csv')\nsamp = pd.read_csv(path+'sample_submission.csv')","987f748c":"print(train_data.shape)\ntrain_data.info()\ntrain_data.head()","a50bf2d2":"print(test_data.shape)\ntest_data.head()","83128b47":"features_cat = ['cat'+str(i) for i in range(19)]\nfeatures_num = ['cont'+str(i) for i in range(11)]\nno_features = ['id', 'target']","ffc5da13":"for i in features_cat:\n    sns.displot(train_data, x=i)","e8506cec":"for i in features_num:\n    sns.displot(train_data, x=i)","c36ca51f":"le = LabelEncoder()\nfor col in features_cat:\n    le.fit(train_data[col].append(test_data[col]))\n    train_data[col] = le.transform(train_data[col])\n    test_data[col] = le.transform(test_data[col])","737cb70a":"X_train = train_data.drop(['id', 'target'], 1)\ny_train = train_data['target']\nX_test = test_data.drop('id', 1)","983136f5":"X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size = 0.1, random_state=2021)","757c9823":"sc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_val = sc.fit_transform(X_val)\nX_test = sc.fit_transform(X_test)","90e350a9":"model = RandomForestClassifier(n_estimators=200,max_depth=8,random_state=0)","eb0fe25f":"model.fit(X_train, y_train)\ny_val_pred = model.predict_proba(X_val)\nprint('Score validation data:', roc_auc_score(y_val, y_val_pred[:, 1]))","d6e79eb0":"y_pred = model.predict_proba(X_test)","53039f3f":"output = samp.copy()\noutput['target'] = y_pred[:, 1].round()\noutput.to_csv('submission.csv', index=False)\noutput.head()","88a3238a":"#### Split features:","8cffb008":"#### Categorical distribution: ","ce10cec3":"#### Encoding categorical data:","8ee65647":"## EDA and preprocessing:","3b5980cd":"## Submission:","12aa3cbd":"#### Train-Test split:","a5e29f63":"#### Validation:","9fdcda1c":"## Overview:","07a861cb":"#### Numeric distribution","83958c4e":"## Model development:","a34fe10c":"#### Import libraries:"}}