{"cell_type":{"e33e51cc":"code","f9924519":"code","6e7bc8f2":"code","7ac062ea":"code","44095159":"code","84bf94b1":"code","a31b52e4":"code","f060c1e1":"code","a36c55c6":"code","151892c9":"code","5b8fbfbc":"code","93dbef4e":"code","fc9ff4e6":"code","8729a9b1":"markdown","0acb27df":"markdown","1eb5dc78":"markdown"},"source":{"e33e51cc":"import os\nimport numpy as np\nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom xgboost import XGBRegressor\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import GradientBoostingRegressor","f9924519":"#Train Data\nmeta_data=pd.read_csv('..\/input\/petfinder-pawpularity-score\/train.csv')\nprint(len(meta_data))\nmeta_data.head()","6e7bc8f2":"#Test data\ntest=pd.read_csv('..\/input\/petfinder-pawpularity-score\/test.csv')","7ac062ea":"#Lets check distribution of target variable\nplt.hist(meta_data['Pawpularity'])","44095159":"#Checking inter dependencies betweeen variables(Correlation matrix)\n#TRAIN DATA\ncorr = meta_data.drop('Id',axis=1).corr()\nax = sns.heatmap(\n    corr, \n    vmin=-1, vmax=1, center=0,\n    cmap=sns.diverging_palette(20, 220, n=200),\n    square=True\n)","84bf94b1":"#TEST DATA\ncorr = test.drop('Id',axis=1).corr()\nax = sns.heatmap(\n    corr, \n    vmin=-1, vmax=1, center=0,\n    cmap=sns.diverging_palette(20, 220, n=200),\n    square=True\n)","a31b52e4":"x_train,x_test,y_train,y_test=train_test_split(meta_data.drop(['Pawpularity','Id'],axis=1),meta_data.Pawpularity)","f060c1e1":"def reg_score(real,pred):    #Uses it to check deviation of predicted output with a +2,-1 error\n    count=0\n    for r,p in zip(real,pred):\n        if r-2<=p<=r+2:count+=1\n    return count\/len(real)","a36c55c6":"#M1\nlinReg=LinearRegression().fit(x_train,y_train)\nlinReg_predict=linReg.predict(x_test)\nprint(linReg.score(x_test,y_test))\nprint(reg_score(y_test,linReg_predict))\nmse = mean_squared_error(y_test,linReg_predict, squared= False)\nprint(mse)","151892c9":"#M2\nxgb = XGBRegressor(n_estimators=1000, max_depth=6, eta=0.1, subsample=0.7, colsample_bytree=0.8)\nxgb.fit(x_train,y_train)\nxgb_predict=xgb.predict(x_test)\nprint(xgb.score(x_test,y_test))\nprint(reg_score(y_test,xgb_predict))\nmse = mean_squared_error(y_test,xgb_predict, squared= False)\nprint(mse)","5b8fbfbc":"#M3\ngbr = GradientBoostingRegressor()\ngbr.fit(x_train, y_train)\ngb_predict = gbr.predict(x_test)\nmse = mean_squared_error(y_test,gb_predict, squared= False)\nprint(mse)","93dbef4e":"submit = pd.read_csv('..\/input\/petfinder-pawpularity-score\/sample_submission.csv')\nsubmit['Pawpularity'] = linReg_predict=linReg.predict(test.drop(['Id'],axis=1))\nsubmit.head(10)","fc9ff4e6":"submit.to_csv('submission.csv',index=False)","8729a9b1":"We can see the distribution is normal with some outliners","0acb27df":"There is lot more correlation in test data wrt train data","1eb5dc78":"Now some regression models:-\nAlways start with linear regression\n* Linear Reg\n* XG Boost\n* Gradient Boost"}}