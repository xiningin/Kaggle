{"cell_type":{"f6600e5b":"code","f7225259":"code","eb365945":"code","f8ab0083":"code","034d0f34":"code","a1621742":"code","16ad7795":"code","cfa57ea6":"code","18cdb733":"code","f2e6285e":"code","1eb9a9b7":"code","0b3473df":"code","a593c37b":"code","aa9dcaa0":"code","5bfcd6dd":"code","fbfbe4f8":"code","1a9f2883":"code","2a3223db":"code","8ae290b2":"code","3a40d0b7":"code","48b0a7d0":"code","cf3d6bda":"code","c089eb20":"code","afbe9a9e":"code","b0571de7":"code","40b15730":"code","6be2a774":"code","4ca5b60b":"code","1bd404b6":"code","c504310a":"code","2f3514ab":"code","8a95e942":"code","8e9767a4":"code","5742013d":"code","c0006e0d":"code","d1d557e5":"code","b4f6e6de":"code","047528a0":"code","40bba643":"code","9d7b3f31":"code","e7216b90":"code","fab72bcc":"code","6a84d495":"code","e9b0679e":"code","74146e5e":"code","6137d45d":"markdown","a1de3018":"markdown","ddca720d":"markdown","585c1d42":"markdown","3a127883":"markdown","3401729f":"markdown","84d7bcc3":"markdown","b2dd8709":"markdown","82ee5f5d":"markdown","737f1509":"markdown","13dc8248":"markdown","f446a1c1":"markdown","c89091ff":"markdown"},"source":{"f6600e5b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f7225259":"AMD_train = pd.read_csv(\"..\/input\/AMD_train.csv\")\nBABA_train = pd.read_csv(\"..\/input\/BABA_train.csv\")\nNFLX_train = pd.read_csv(\"..\/input\/NFLX_train.csv\")","eb365945":"AMD_train","f8ab0083":"BABA_train","034d0f34":"NFLX_train","a1621742":"AMD_training_set = AMD_train.iloc[:,1:2].values\nBABA_training_set = BABA_train.iloc[:,1:2].values\nNFLX_training_set = NFLX_train.iloc[:,1:2].values","16ad7795":"from sklearn.preprocessing import MinMaxScaler\n\nsc = MinMaxScaler(feature_range = (0,1))\n\nAMD_training_scaled = sc.fit_transform(AMD_training_set)\n\nBABA_training_scaled = sc.fit_transform(BABA_training_set)\n\nNFLX_training_scaled = sc.fit_transform(NFLX_training_set)","cfa57ea6":"amd_x_train = []\namd_y_train = []\nnflx_x_train = []\nnflx_y_train = []\n\nfor i in range(60,1259):\n    amd_x_train.append(AMD_training_scaled[i-60:i,0])\n    amd_y_train.append(AMD_training_scaled[i,0])\n    nflx_x_train.append(NFLX_training_scaled[i-60:i,0])\n    nflx_y_train.append(NFLX_training_scaled[i,0])\n    \namd_x_train,amd_y_train,nflx_x_train,nflx_y_train = np.array(amd_x_train),np.array(amd_y_train),np.array(nflx_x_train),np.array(nflx_y_train)","18cdb733":"baba_x_train = []\nbaba_y_train = []\n\nfor y in range(60,827):\n    baba_x_train.append(BABA_training_scaled[y-60:y,0])\n    baba_y_train.append(BABA_training_scaled[y,0])\n    \nbaba_x_train,baba_y_train = np.array(baba_x_train),np.array(baba_y_train)","f2e6285e":"amd_x_train.shape","1eb9a9b7":"baba_x_train.shape","0b3473df":"nflx_x_train.shape","a593c37b":"amd_x_train = np.reshape(amd_x_train,(amd_x_train.shape[0],amd_x_train.shape[1],1))\nbaba_x_train = np.reshape(baba_x_train,(baba_x_train.shape[0],baba_x_train.shape[1],1))\nnflx_x_train = np.reshape(nflx_x_train,(nflx_x_train.shape[0],nflx_x_train.shape[1],1))","aa9dcaa0":"from keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import LSTM\nfrom keras.layers import Dropout","5bfcd6dd":"amdregressor = Sequential()\namdregressor.add(LSTM(units = 50,return_sequences = True,input_shape = (amd_x_train.shape[1],1)))\namdregressor.add(Dropout(0.2))\namdregressor.add(LSTM(units = 50, return_sequences = True))\namdregressor.add(Dropout(0.2))\namdregressor.add(LSTM(units = 50, return_sequences = True))\namdregressor.add(Dropout(0.2))\namdregressor.add(LSTM(units = 50))\namdregressor.add(Dropout(0.2))\namdregressor.add(Dense(units = 1))","fbfbe4f8":"babaregressor = Sequential()\nbabaregressor.add(LSTM(units = 50, return_sequences = True, input_shape = (baba_x_train.shape[1],1)))\nbabaregressor.add(Dropout(0.2))\nbabaregressor.add(LSTM(units = 50, return_sequences = True))\nbabaregressor.add(Dropout(0.2))\nbabaregressor.add(LSTM(units = 50, return_sequences = True))\nbabaregressor.add(Dropout(0.2))\nbabaregressor.add(LSTM(units = 50))\nbabaregressor.add(Dropout(0.2))\nbabaregressor.add(Dense(units = 1))","1a9f2883":"nflxregressor = Sequential()\nnflxregressor.add(LSTM(units = 50, return_sequences = True, input_shape = (nflx_x_train.shape[1],1)))\nnflxregressor.add(Dropout(0.2))\nnflxregressor.add(LSTM(units = 50, return_sequences = True))\nnflxregressor.add(Dropout(0.2))\nnflxregressor.add(LSTM(units = 50, return_sequences = True))\nnflxregressor.add(Dropout(0.2))\nnflxregressor.add(LSTM(units = 50))\nnflxregressor.add(Dropout(0.2))\nnflxregressor.add(Dense(units = 1))","2a3223db":"amdregressor.compile(optimizer = 'adam',loss = 'mean_squared_error')\nbabaregressor.compile(optimizer = 'adam', loss = 'mean_squared_error')","8ae290b2":"nflxregressor.compile(optimizer = 'adam', loss = 'mean_squared_error')","3a40d0b7":"amdregressor.fit(amd_x_train,amd_y_train,epochs = 100, batch_size = 32)","48b0a7d0":"babaregressor.fit(baba_x_train,baba_y_train,epochs = 100,batch_size = 32)","cf3d6bda":"nflxregressor.fit(nflx_x_train,nflx_y_train,epochs = 150, batch_size = 32)","c089eb20":"amd_test =pd.read_csv(\"..\/input\/AMD_test.csv\")\nbaba_test = pd.read_csv(\"..\/input\/BABA_test.csv\")\nnflx_test = pd.read_csv(\"..\/input\/NFLX_test.csv\")","afbe9a9e":"amd_real_stock_price = amd_test.iloc[:,1:2].values\nbaba_real_stock_price = baba_test.iloc[:,1:2].values\nnflx_real_stock_price = nflx_test.iloc[:,1:2].values","b0571de7":"amd_total = pd.concat((AMD_train['Open'],amd_test['Open']),axis = 0)\nbaba_total = pd.concat((BABA_train['Open'],baba_test['Open']),axis = 0)\nnflx_total = pd.concat((NFLX_train['Open'],nflx_test['Open']),axis = 0)","40b15730":"amdinputs = amd_total[len(amd_total) - len(amd_test)-60:].values\nbabainputs = baba_total[len(baba_total) - len(baba_test) - 60:].values\nnflxinputs = nflx_total[len(nflx_total) - len(nflx_test) - 60:].values","6be2a774":"amdinputs = amdinputs.reshape(-1,1)\nbabainputs = babainputs.reshape(-1,1)\nnflxinputs = nflxinputs.reshape(-1,1)","4ca5b60b":"amdinputs = sc.transform(amdinputs)\nbabainputs = sc.transform(babainputs)\nnflxinputs = sc.transform(nflxinputs)","1bd404b6":"amdinputs.shape","c504310a":"nflxinputs.shape","2f3514ab":"babainputs.shape","8a95e942":"amd_x_test = []\nfor i in range(60,164):\n    amd_x_test.append(amdinputs[i-60:i,0])\n    \nbaba_x_test = []\nfor y in range(60,164):\n    baba_x_test.append(babainputs[y-60:y,0])\n    \nnflx_x_test = []\nfor z in range(60,164):\n    nflx_x_test.append(nflxinputs[z-60:z,0])","8e9767a4":"amd_x_test = np.array(amd_x_test)\namd_x_test.shape","5742013d":"baba_x_test = np.array(baba_x_test)\nbaba_x_test.shape","c0006e0d":"nflx_x_test = np.array(nflx_x_test)\nnflx_x_test.shape","d1d557e5":"amd_x_test = np.reshape(amd_x_test, (amd_x_test.shape[0],amd_x_test.shape[1],1))\namd_x_test.shape","b4f6e6de":"baba_x_test = np.reshape(baba_x_test, (baba_x_test.shape[0],baba_x_test.shape[1],1))\nbaba_x_test.shape","047528a0":"nflx_x_test = np.reshape(nflx_x_test, (nflx_x_test.shape[0],nflx_x_test.shape[1],1))\nnflx_x_test.shape","40bba643":"amd_predicted_price = amdregressor.predict(amd_x_test)\nbaba_predicted_price = babaregressor.predict(baba_x_test)","9d7b3f31":"nflx_predicted_price = nflxregressor.predict(nflx_x_test)","e7216b90":"amd_predicted_price = sc.inverse_transform(amd_predicted_price)\nbaba_predicted_price = sc.inverse_transform(baba_predicted_price)","fab72bcc":"nflx_predicted_price = sc.inverse_transform(nflx_predicted_price)","6a84d495":"plt.plot(amd_real_stock_price,color = 'red', label = 'Real Price')\nplt.plot(amd_predicted_price, color = 'blue', label = 'Predicted Price')\nplt.title('AMD Stock Price Prediction')\nplt.xlabel('Time')\nplt.ylabel('AMD Stock Price')\nplt.legend()\nplt.show()","e9b0679e":"plt.plot(baba_real_stock_price, color = 'red',label = 'Real Price')\nplt.plot(baba_predicted_price, color = 'blue', label = 'Predicted Price')\nplt.title('BABA Stock Price Prediction')\nplt.xlabel('Time')\nplt.ylabel('BABA Stock Price')\nplt.legend()\nplt.show()","74146e5e":"plt.plot(nflx_real_stock_price, color = 'red', label = 'Real Price')\nplt.plot(nflx_predicted_price, color = 'blue', label = 'Predicted Price')\nplt.title('NFLX Stock Price Prediction')\nplt.xlabel('Time')\nplt.ylabel('NFLX Stock Price')\nplt.legend()\nplt.show()","6137d45d":"***Prediction***","a1de3018":"***NFLX plot***","ddca720d":"***Using LSTM***","585c1d42":"***Adding Hidden Layers for BABA***","3a127883":"***Convert to 3D***","3401729f":"***Converting to 2D** as it is always better if it is in higher dimension*","84d7bcc3":"***Adding Hidden Layers for NFLX***","b2dd8709":"***BABA plot***","82ee5f5d":"***Adding Hidden Layers for AMD***","737f1509":"***Convert testdata to match trainset format***","13dc8248":"***Converting to 3D***","f446a1c1":"***Convert back from z score format***","c89091ff":"***AMD plot***"}}