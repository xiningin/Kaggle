{"cell_type":{"25d2b0d2":"code","b7acd539":"code","f667e3c6":"code","01dc3504":"code","9d5f35ef":"code","6289e293":"code","6972be84":"code","9fe46f4f":"markdown","600781d6":"markdown","9cf69869":"markdown","4c44f164":"markdown","888312ef":"markdown","a4a03647":"markdown","2fddcdd6":"markdown","6344eb47":"markdown"},"source":{"25d2b0d2":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","b7acd539":"dataset = pd.read_csv('..\/input\/Salary_Data.csv')\nX = dataset.iloc[:, 0:1].values  # We use this python function to get the 1st coloumn alone as it is X\ny = dataset.iloc[:, 1].values # We use this to get the 2nd coloumn alone which is the one we want to predict Y","f667e3c6":"from sklearn.linear_model import LinearRegression \nlin_reg  = LinearRegression()\nlin_reg.fit(X,y)","01dc3504":"from sklearn.preprocessing import PolynomialFeatures\npoly_reg = PolynomialFeatures(degree = 5) # we use the degree as 5 here for best prediction.\nX_poly = poly_reg.fit_transform(X)\n\n","9d5f35ef":"lin_reg2 = LinearRegression()\nlin_reg2.fit(X_poly,y)","6289e293":"plt.scatter(X,y,color = 'red')\nplt.plot(X,lin_reg.predict(X),color = 'blue')\nplt.title('truth or bluff - linear reg')\nplt.xlabel('Experience level')\nplt.ylabel('salary')\nplt.show()\n\n\n\nplt.scatter(X,y,color = 'red')\nplt.plot(X,lin_reg2.predict(poly_reg.fit_transform(X)),color = 'blue')\nplt.title('truth or bluff - polynomial reg')\nplt.xlabel('Experience level')\nplt.ylabel('salary')\nplt.show()\n","6972be84":"lin_reg2.predict(poly_reg.fit_transform([[6.5]]))","9fe46f4f":"### Be any regression model, we need to use linear regression to fit out data into the model so we must import LinearRegression from the sklearn.linear_model class","600781d6":"### We perform fitting of our polynomial data here using lin_reg2.","9cf69869":"### We can use matplotlib for using plt.scatter to get the visual data.\n","4c44f164":"# **Bluff Detector using Polynimial Regression**\n\n!\/usr\/bin\/env python3\n -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri Aug  2 14:29:41 2019\n\n@author: siddharth.m98@gmail.com\n\"\"\"\n## An Machine learning model that can help HR team by detecting the bluff of an candidate regarding the negotiation salary wrt the years of experience.","888312ef":"### First we need to import 3 libraries for this. These are numpy,matplotlib(if you want to visualize) and pandas","a4a03647":"### Now we can predict any salary by passing years of experience as parameter.","2fddcdd6":"### Till now we can use this model for making a linear prediction. BUt since we want super accuracy, we must use polynomial prediction. where we have to give powers multiplication in linear manner. \n### So we use our PolynomialFeatures from sklearn.preprocessing class for this. Later we transform the current X data to polynomial data using lin_reg.","6344eb47":"### Importing the dataset"}}