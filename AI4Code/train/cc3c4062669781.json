{"cell_type":{"b45c3d35":"code","f4f1b2c6":"code","8c408f69":"code","f5bc157c":"code","d96a97ba":"code","87a7bdb6":"code","b0287a23":"code","42046312":"code","c7986cd9":"code","59edb36b":"code","28b58d26":"code","7f7b7672":"code","0e9ed12a":"code","0893942f":"code","93303b6f":"code","ca429914":"code","5373b6b2":"code","389a4160":"code","0ff1ce41":"code","589b440d":"code","a0216e34":"code","01718466":"code","31ec8a05":"code","08567f15":"code","af95f5dd":"code","c4e905ed":"code","b3a9cf8f":"code","9effd59f":"code","cd976808":"code","bcbc51d0":"code","9f1abc5e":"code","aec99909":"code","22aebe8c":"code","76c493e7":"code","b4d7fe51":"code","b6826dd5":"code","6a18e7d1":"code","dd4d6e0e":"markdown","5e256d46":"markdown","dd8fdd9f":"markdown","07937f01":"markdown","c2f20b3a":"markdown"},"source":{"b45c3d35":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom pandas import Series\nimport matplotlib.pyplot as plt # For visualization\nimport seaborn as sns # For data Visualization\nimport seaborn as seabornInstance \n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f4f1b2c6":"df = pd.read_csv('..\/input\/nobel-laureates\/archive.csv')","8c408f69":"df.head()","f5bc157c":"# Let's check the columns\ndf.keys()","d96a97ba":"# Let's check the data types\ndf.info()","87a7bdb6":"# Let's use value_counts() to determine the frequency of the values present in one particular column\nbc = df['Birth Country'].value_counts()","b0287a23":"bc.head(15)","42046312":"# Let's plot it \nsns.countplot(bc)","c7986cd9":"# Let's see how winners year wise disctributed\ndf[\"Year\"].plot.hist(bins = 100)","59edb36b":"# Let's check the birth Cities\nbb = df['Birth City'].value_counts()","28b58d26":"# Top 15 cities with max nobel laureate\nbb.head(15)","7f7b7672":"# Let's plot it and than see\nsns.countplot(bb)","0e9ed12a":"# with normalize=True, the object returned contains the relative \n# frequencies of unique values (* 100 to get %ge)\nround(df['Birth Country'].value_counts(normalize=True) * 100,2)","0893942f":"# extract a subset of the data from a DataFrame to display multiple columns, rows\ndf_cat = df[['Prize','Category','Sex','Birth Country']]","93303b6f":"df_cat.head()","ca429914":"# Let's use value_counts() to determine the frequency of the values present in Sex column\ndf_cat['Sex'].value_counts()","5373b6b2":"sns.countplot(df_cat['Sex'])","389a4160":"# Let's check the percentage\n# with normalize=True, the object returned contains the relative \n# frequencies of unique values (* 100 to get %ge)\nround(df_cat['Sex'].value_counts(normalize=True) * 100,2)","0ff1ce41":"# crosstab() computes a simple cross-tabulation of two (or more) factors let's check for Sex\npd.crosstab(df_cat.Sex, df_cat.Category)","589b440d":"# using isnull(), sum(), sort_values(), count() to get the total missing values and % missing for the features\n# I am using sort_values() and head() on the output because we don't need to see all features, many have no missing values\ntotal_missing = df.isnull().sum().sort_values(ascending=False)\ncol_pct_missing = round(df.isnull().sum()\/df.isnull().count()*100, 1).sort_values(ascending=False)\nmissing_data = pd.concat([total_missing, col_pct_missing], axis=1, keys=['Total Missing', '% Missing'])\nmissing_data.head(7)","a0216e34":"# Let's check the Prize share\nc = sns.FacetGrid(df, col='Prize Share')\nc.map(plt.hist, 'Category', bins=20)","01718466":"# Let's see the Category by Sex\ng = sns.FacetGrid(df_cat, col='Sex')\ng.map(plt.hist, 'Category', bins=12)","31ec8a05":"# Let's check the winners by County of birth by Category\nl = sns.FacetGrid(df_cat, col='Category')\nl.map(plt.hist, 'Birth Country', bins=10)","08567f15":"# Category by Birth Date\nm = sns.FacetGrid(df, col='Category')\nm.map(plt.hist, 'Birth Date', bins=10)","af95f5dd":"#plot distributions of winners by Death Country\na = sns.FacetGrid( df, hue = 'Death Country', aspect=4 )\na.map(sns.kdeplot, 'Year', shade= True )\na.set(xlim=(0 , df['Year'].max()))\na.add_legend()","c4e905ed":"# Let's check the winners over the years\ndf['Year'].plot(legend=True,figsize=(15,5))","b3a9cf8f":"# How about winners by Category\nsns.countplot(df['Category'])","9effd59f":"# Another way to see it\ndf[\"Category\"].value_counts(sort = False).plot.bar()","cd976808":"# Winners by Prize\nsns.countplot(df['Prize'])","bcbc51d0":"#Let's check the comparison of sex, Category, and Year with the help of histogram\nh = sns.FacetGrid(df, row = 'Sex', col = 'Category', hue = 'Sex')\nh.map(plt.hist, 'Year', alpha = .75)\nh.add_legend()","9f1abc5e":"# Let's check by Laureate Type\nsns.countplot(df['Laureate Type'])","aec99909":"# Another way\ndf[\"Laureate Type\"].value_counts(sort = False).plot.bar()","22aebe8c":"# Let's check by Organization \non = df['Organization Name'].value_counts()\non.head()","76c493e7":"sns.countplot(on)","b4d7fe51":"# Let's see Prize share distribution\ndf[\"Prize Share\"].value_counts(sort = False).plot.bar()","b6826dd5":"# Let's see winners by Birth City and Category\ndf.groupby([\"Birth City\", \"Category\"]).size()","6a18e7d1":"That's all I tried whatever learnt from Kaggle data Visualization so far. \nLove to hear feedback on the same to improve it further. ","dd4d6e0e":"Again New York tops the list with 48 winners followed by Paris and London\nSome surprise names in top 10 list Hamburg and Milwaukee","5e256d46":"Graph shows the top 5 Organizations (all Universities) with maximum number of winners","dd8fdd9f":"So It shows US tops the list with 276 winners followed by UK and Germany","07937f01":"Note: As we know due to World war II there was no winners in 40's","c2f20b3a":"The result shows 29% winners from US followed by UK, Germany and France"}}