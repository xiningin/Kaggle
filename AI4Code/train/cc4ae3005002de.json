{"cell_type":{"a0d6d175":"code","9d744343":"code","94f9839e":"code","a97a6550":"code","473d3077":"code","05a9c361":"code","0e3a202f":"markdown"},"source":{"a0d6d175":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9d744343":"import pandas as pd\n\ndf = pd.read_csv('\/kaggle\/input\/steam-video-games\/steam-200k.csv',\n                                  names=[\"id\", \"Game\", \"Transaction\", \"attribute\", \"noise\"])","94f9839e":"df.groupby(['customerId','categoryTags']).sum()","a97a6550":"df['Game'].unique().shape\n#  12393 * 5155","473d3077":"df_purchase =  df.loc[df['Transaction'] == 'purchase', ['id','Game','Transaction','attribute']].rename(columns={'attribute': 'purchased'})\ndf_play = df.loc[df['Transaction'] == 'play', ['id','Game','attribute']].rename(columns={'attribute': 'play_hours'})\n\nprint('shape of purchase dataset : ', df_purchase.shape[0])\nprint('shape of play dataset : ', df_play.shape[0])\n\ngame_dataset = pd.merge(df_purchase, df_play, left_on=['id','Game'], right_on=['id','Game'], how='left').fillna(0) #left join -> if purchased but not played then means 0 hrs","05a9c361":"game_dataset.loc[game_dataset['id'] == 151603712]","0e3a202f":"##### Following steps will be followed:\n    1. Creating different datasets for purchase and play\n    2. Since there are multiple rows per game in play dataset we need to group to find total hrs played and total frequency of play\n    3. join these two datasets to have one row per id per game\n    4. creating a rating mechanism for each game (think phase for logic on this)"}}