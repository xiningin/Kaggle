{"cell_type":{"17dd8019":"code","3b241433":"code","04bbc834":"code","19f2e159":"code","8c273641":"code","34c7959e":"code","dddd0b9c":"code","33adbc8d":"code","76bb19b0":"code","f438333d":"code","4d200581":"code","5fdaa253":"code","f8ca75ff":"code","d7fa820a":"code","9e936c6d":"code","b8e3fc7a":"code","7f46ac9a":"code","fae7f7ef":"code","9d931d88":"code","45612f68":"code","2e82ad9f":"code","ac2b478c":"code","95ea702f":"code","16693dd4":"code","76ae39ac":"code","689fc0bc":"code","4e5ecd3e":"code","ada93e1d":"code","0ce72028":"code","1137151a":"code","8b1f0921":"code","3f889df7":"code","77b53b66":"code","52456deb":"code","a59fc2e3":"code","dd106ce3":"code","41336471":"code","abb83ec3":"code","7684b7be":"code","0f26ca89":"code","d0644b79":"code","cf7f8447":"code","7a3b243d":"code","0d107f9a":"code","73eb268f":"code","92d0b80d":"code","006e61c9":"code","0f76aaa6":"code","3c6d5344":"code","74518147":"code","f9a48aaa":"code","e02a6e05":"code","2fd1967d":"code","22d5b076":"code","0fec40cf":"code","f33ad7e5":"code","ea5b63ed":"code","7a1afdcb":"code","7662d944":"code","37046fdd":"code","b924611f":"code","6c26dc51":"code","b8d2a3ae":"code","4d41dfc3":"code","a7544a85":"code","7fb5b228":"code","1b725ee3":"code","892c146e":"code","f8eff91e":"code","798118dd":"code","574a91c8":"code","aac31eab":"code","7894ef87":"code","e35e2cff":"code","7b5bab36":"code","14d1408b":"code","5a54a85c":"code","c36f7dfb":"code","570326d3":"code","e9cc40c6":"code","f582e211":"code","576a84eb":"code","cd89cd45":"code","ecae3a8e":"code","ff76fcef":"code","222a8af8":"code","bb8dfaf1":"code","a4b3749e":"code","9eece69a":"code","a77a2876":"code","fcf9b5bb":"code","ac9741c8":"code","9e5acbfe":"code","172946e9":"code","e0ebfbb0":"code","df0633af":"code","5303235e":"code","8bb6370f":"code","2a16cb82":"code","a4caa41c":"code","3943223d":"code","662ad9d3":"code","1cc59411":"code","755943f3":"code","64e87ca6":"code","5861b62d":"code","bdaa02e3":"code","4e0528e0":"code","ccdb23fd":"code","642049be":"code","c607fa76":"code","f183d956":"code","4bfd74d3":"code","89a4f5a3":"code","8ee74254":"code","4df9dca6":"code","f5f214f5":"code","a19bd1af":"code","e1b3e7da":"code","e92a3bea":"code","c4d1ed8b":"code","4cfd73f0":"code","9bffe724":"code","4fcf9ace":"code","23c298a5":"code","070819e3":"code","82b821af":"code","2ea00940":"code","b4b052c2":"code","30f3b444":"code","fbe23530":"code","7e0308f2":"code","87337a1b":"code","323ae3d1":"code","7ef85e74":"code","9280bd50":"code","ecf7c12f":"code","77da902e":"code","c69cbbe3":"code","780a4b58":"code","86c7306e":"code","98b42056":"code","cc29824c":"code","6166bde2":"code","4de6a3c7":"code","a880fa36":"code","3a785ece":"code","bdd400be":"code","58eaffcc":"code","3a531373":"code","ea7056e2":"code","d89b7474":"code","e0951047":"code","13e7305a":"code","8c5836d4":"code","cf768902":"code","eb120941":"code","3abde2b1":"code","5a0818c4":"code","025d6a29":"code","0466a592":"code","ed654591":"code","22103898":"code","e446fb37":"code","2f8956ce":"code","aa7c8be2":"code","8e30b858":"code","7ee177a2":"code","0dd4b242":"code","4965c7aa":"code","32d1811d":"code","fc3face7":"code","69a16a0e":"code","bed55828":"code","6e455c33":"code","3de41b36":"code","b9819c8d":"code","d60337fd":"code","36992c8c":"code","a4285ffb":"code","133e910d":"code","42aa5ca9":"code","bf07ba50":"code","4bfdc1bb":"code","e8ea9db7":"code","c0ba2878":"code","23511978":"code","71065b60":"code","6158dc30":"code","c795787d":"code","4a3c6742":"code","12d0128b":"code","8a12cc1f":"code","b40317ba":"code","2e99c7e7":"code","cd00fba6":"code","e12f6b64":"code","59a902d0":"code","10f0693f":"markdown","2170d78d":"markdown","d35feb62":"markdown","751db611":"markdown","022bb699":"markdown","8004bd0d":"markdown","f2c08bfd":"markdown","ab5bceb0":"markdown","1a6d4229":"markdown","182fe25d":"markdown","9ee93883":"markdown","2d3f2341":"markdown","46eb8735":"markdown","20c71663":"markdown","fc77553c":"markdown","2282fe8d":"markdown","5b3e20b5":"markdown","749683f8":"markdown","7afa158e":"markdown","b29213b0":"markdown","6ae1dd59":"markdown","e8e1ebc7":"markdown","017bc71b":"markdown","3b111388":"markdown","20e70d59":"markdown","a6d48f7c":"markdown","f0ad745e":"markdown","f576c252":"markdown","6d3b5bb9":"markdown","05d82969":"markdown","fa6e3762":"markdown","775ab37f":"markdown","0de52fb7":"markdown","5589b01e":"markdown","89c0006a":"markdown","efb82465":"markdown","9475f66a":"markdown","6d273a6f":"markdown","37a3429a":"markdown","4bc6f549":"markdown","97b9d366":"markdown","0b46c7a2":"markdown","a5be7880":"markdown","2491c11b":"markdown","fb68ac2b":"markdown","7f6e5e45":"markdown","162fea4d":"markdown","f98f008a":"markdown","bff20ab9":"markdown","02403b00":"markdown","d079bbb5":"markdown","4218fe90":"markdown","3ed50ed2":"markdown","c9858a46":"markdown","4f215bcb":"markdown","9310f745":"markdown","5be4a27f":"markdown","39ed7bba":"markdown","d9b88ef1":"markdown","c23d4f0f":"markdown","5c05506d":"markdown","8086c401":"markdown","4d4f314d":"markdown","c1c37220":"markdown","30b6ec3f":"markdown","118b0cab":"markdown","c9471023":"markdown","7a31fe27":"markdown","9e22113e":"markdown","d357e370":"markdown","7b842299":"markdown","b8377fef":"markdown","bc9e32b4":"markdown","5d2b3aa7":"markdown","769d3b17":"markdown","0f8a9d4e":"markdown","1bffbb5f":"markdown","04c05dce":"markdown","a826faab":"markdown","da52e41e":"markdown","648b98a9":"markdown","1d1fd570":"markdown","69d13230":"markdown","c556ab6e":"markdown","730e19bc":"markdown","a3d1b5f9":"markdown"},"source":{"17dd8019":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as mno\nsns.set_style('darkgrid')","3b241433":"import warnings\nwarnings.filterwarnings('ignore')","04bbc834":"data0 = pd.read_csv('..\/input\/loan-defaulter\/application_data.csv')","19f2e159":"data1 = pd.read_csv('..\/input\/loan-defaulter\/previous_application.csv')","8c273641":"#Column descriptions\ndes = pd.read_csv('..\/input\/loan-defaulter\/columns_description.csv', engine='python')","34c7959e":"data0.shape, data1.shape","dddd0b9c":"data0.head()","33adbc8d":"data0.info(verbose = True, null_counts = True)","76bb19b0":"#statistical summary of numerical variables\ndata0.describe()","f438333d":"#changing the column names to lower-case for convinience\ndata0.columns = data0.columns.astype('str').map(lambda x: x.lower())","4d200581":"#list of columns with at least one values missing\nmissing_col = [col for col in data0.columns if data0[col].isna().sum()\/data0.shape[0] > 0]","5fdaa253":"#checking number of such columns\nlen(missing_col)","f8ca75ff":"#number of columns with more than 40% missing values\nmissing_col1 = [col for col in data0.columns if data0[col].isna().sum()\/data0.shape[0] > 0.4]\nlen(missing_col1)","d7fa820a":"#visualizing columns with missing value counts greater than 0\nmno.bar(data0[missing_col1], sort='ascending', color = 'darkolivegreen')","9e936c6d":"#dropping columns with more than 40% missing values\ndata0.drop(missing_col1, axis = 1, inplace = True)","b8e3fc7a":"#shape of dataframe upon dropping columns\ndata0.shape","7f46ac9a":"data0.info()","fae7f7ef":"#new list of columns with with atleast one missing value\nmissing_col2 = [col for col in data0.columns if data0[col].isna().sum() > 0]\nmno.matrix(data0[missing_col2], color = '0.2')","9d931d88":"#information about the columns with missing values\ndata0[missing_col2].info()","45612f68":"#columns sorted by percentage of missing values\nx = data0.isnull().sum()\/data0.shape[0]*100\nx[x > 0].sort_values()","2e82ad9f":"data0.select_dtypes(['float64', 'int64']).shape","ac2b478c":"data0.select_dtypes(exclude = ['float64', 'int64']).shape","95ea702f":"#checking number of missing values\ndata0.days_last_phone_change.isnull().sum()","16693dd4":"#checking number of missing values\ndata0.cnt_fam_members.isnull().sum()","76ae39ac":"#dropping corresponding rows\ndata0.dropna(subset = ['days_last_phone_change', 'cnt_fam_members'], inplace = True)","689fc0bc":"#statistical summary of 'amt_annuity' column\ndata0.amt_annuity.describe()","4e5ecd3e":"plt.figure(figsize = [8,6])\nsns.boxplot(data0.amt_annuity)\nplt.show()","ada93e1d":"#imputing median\nm = data0.amt_annuity.median()\ndata0.amt_annuity.fillna(m, inplace = True)","0ce72028":"data0.amt_annuity.isna().sum()","1137151a":"data0.amt_goods_price.describe()  #impute median","8b1f0921":"plt.figure(figsize = [8,6])\nsns.boxplot(data0.amt_goods_price)\nplt.show()","3f889df7":"#imputing median\nm = data0.amt_goods_price.median()\ndata0.amt_goods_price.fillna(m, inplace = True)","77b53b66":"data0.amt_goods_price.isna().sum()","52456deb":"#information on client's social surroundings\n#unique value counts for following,\n##observable 30 DPD default\ndata0.obs_30_cnt_social_circle.value_counts(normalize = True).head()","a59fc2e3":"plt.figure(figsize = [10,6])\nsns.countplot(data0.obs_30_cnt_social_circle)\nplt.xticks(rotation = 90)\nplt.show()","dd106ce3":"##defaulted on 30 DPD\ndata0.def_30_cnt_social_circle.value_counts(normalize = True).head()","41336471":"##observable 60 DPD default\ndata0.obs_60_cnt_social_circle.value_counts(normalize = True).head()","abb83ec3":"##defaulted on 60 DPD\ndata0.def_60_cnt_social_circle.value_counts(normalize = True).head()","7684b7be":"#imputing mode\ndata0.obs_30_cnt_social_circle.fillna(data0.obs_30_cnt_social_circle.mode()[0], inplace = True)\ndata0.def_30_cnt_social_circle.fillna(data0.def_30_cnt_social_circle.mode()[0], inplace = True)\ndata0.obs_60_cnt_social_circle.fillna(data0.obs_60_cnt_social_circle.mode()[0], inplace = True)\ndata0.def_60_cnt_social_circle.fillna(data0.def_60_cnt_social_circle.mode()[0], inplace = True)","0f26ca89":"plt.figure(figsize = [10,6])\ndata0.amt_req_credit_bureau_year.value_counts(normalize = True).plot(kind = 'bar', color = 'forestgreen')\nplt.xlabel('Number of enquiries')\nplt.show()","d0644b79":"#imputing mode\ndata0.amt_req_credit_bureau_year.fillna(data0.amt_req_credit_bureau_year.mode()[0], inplace = True)","cf7f8447":"plt.figure(figsize = [8,6])\ndata0.amt_req_credit_bureau_qrt.value_counts(normalize = True).plot(kind = 'bar', color = 'forestgreen')\nplt.xlabel('Number of enquiries')\nplt.show()","7a3b243d":"#imputing mode\ndata0.amt_req_credit_bureau_qrt.fillna(data0.amt_req_credit_bureau_qrt.mode()[0], inplace = True)","0d107f9a":"plt.figure(figsize = [10,6])\ndata0.amt_req_credit_bureau_mon.value_counts(normalize = True).plot(kind = 'bar', color = 'forestgreen')\nplt.xlabel('Number of enquiries')\nplt.show()","73eb268f":"#imputing mode\ndata0.amt_req_credit_bureau_mon.fillna(data0.amt_req_credit_bureau_mon.mode()[0], inplace = True)","92d0b80d":"plt.figure(figsize = [8,6])\ndata0.amt_req_credit_bureau_week.value_counts(normalize = True).plot(kind = 'bar', color = 'forestgreen')\nplt.xlabel('Number of enquiries')\nplt.show()","006e61c9":"#imputing mode\ndata0.amt_req_credit_bureau_week.fillna(data0.amt_req_credit_bureau_week.mode()[0], inplace = True)","0f76aaa6":"plt.figure(figsize = [8,6])\ndata0.amt_req_credit_bureau_day.value_counts(normalize = True).plot(kind = 'bar', color = 'forestgreen')\nplt.xlabel('Number of enquiries')\nplt.show()","3c6d5344":"#imputing mode\ndata0.amt_req_credit_bureau_day.fillna(data0.amt_req_credit_bureau_day.mode()[0], inplace = True)","74518147":"plt.figure(figsize = [8,6])\ndata0.amt_req_credit_bureau_hour.value_counts(normalize = True).plot(kind = 'bar', color = 'forestgreen')\nplt.xlabel('Number of enquiries')\nplt.show()","f9a48aaa":"#imputing mode\ndata0.amt_req_credit_bureau_hour.fillna(data0.amt_req_credit_bureau_hour.mode()[0], inplace = True)","e02a6e05":"plt.figure(figsize = [10,6])\nwith plt.style.context('seaborn-muted'):\n    plt.subplot(2,1,1)\n    sns.boxplot(data0.ext_source_2)\n    plt.subplot(2,1,2)\n    sns.boxplot(data0.ext_source_3)","2fd1967d":"data0[['ext_source_2', 'ext_source_3']].describe()","22d5b076":"#imputing median\ndata0.ext_source_2.fillna(data0.ext_source_2.median(), inplace = True)\ndata0.ext_source_3.fillna(data0.ext_source_3.median(), inplace = True)","0fec40cf":"#Count of all the unique categories in name_type suit column\ndata0.name_type_suite.value_counts(normalize = True)","f33ad7e5":"plt.figure(figsize = [8,6])\nsns.countplot(data0.name_type_suite)","ea5b63ed":"#imputing mode\nm = data0.name_type_suite.mode()[0]\ndata0.name_type_suite.fillna(m, inplace = True)","7a1afdcb":"#Count of all the unique categories in occupation_type suit column\ndata0.occupation_type.value_counts()","7662d944":"#imputing missing values with top categories in existing ratio\ns = data0.occupation_type.isna().sum()\ndata0.occupation_type.fillna(pd.Series(np.random.choice(['Laborers', 'Sales staff', 'Core staff', 'Managers', 'Drivers'], \n                                              p = [0.37, 0.21, 0.18, 0.14, 0.10], size = s)), inplace = True)","37046fdd":"data0.occupation_type.value_counts(normalize = True)*100","b924611f":"#strictly catagorical columns\ndata0.select_dtypes(exclude = ['float64', 'int64']).columns","6c26dc51":"data0.code_gender.value_counts()","b8d2a3ae":"#imputing mode in place of XNA in gender coulmn\n#m = data0.code_gender.mode()[0]\ndata0.code_gender.replace({'XNA': np.random.choice(['F','M'], p = [0.65,0.35])}, inplace = True)","4d41dfc3":"data0.code_gender.value_counts()","a7544a85":"#unique value counts\ndata0.organization_type.value_counts(normalize = True)*100","7fb5b228":"#replacing with NAN\ndata0.organization_type.replace({'XNA':np.nan}, inplace = True)","1b725ee3":"data0.organization_type.isna().sum()","892c146e":"#integer and float columns\ndata0.select_dtypes(include = ['float64', 'int64']).columns","f8eff91e":"data0[[ 'days_birth', 'days_employed', 'days_registration', 'days_id_publish','days_last_phone_change']].describe()","798118dd":"#converting to absolute value\ndata0.days_birth = data0.days_birth.apply(lambda x: abs(x))\ndata0.days_employed = data0.days_employed.apply(lambda x: abs(x))\ndata0.days_id_publish = data0.days_id_publish.apply(lambda x: abs(x))\ndata0.days_last_phone_change = data0.days_last_phone_change.apply(lambda x: abs(x))\ndata0.days_registration = data0.days_registration.apply(lambda x: abs(x))","574a91c8":"data0[[ 'days_birth', 'days_employed', 'days_registration', 'days_id_publish','days_last_phone_change']].describe()","aac31eab":"#creating new columns with new unit - years\ndata0['years_birth'] = data0.days_birth.apply(lambda x: int(x\/365))\ndata0['years_employed'] = data0.days_employed.apply(lambda x: int(x\/365))","7894ef87":"data0[['years_birth', 'years_employed']].describe()","e35e2cff":"#Distribution of age of clients in years\nplt.figure(figsize = [8,6])\nsns.boxplot(data0.years_birth)\nplt.show()","7b5bab36":"#distribution of number of years in current employment\nplt.figure(figsize = [8,6])\nsns.boxplot(data0.years_employed)\nplt.show()","14d1408b":"#number of data points with years_employed > 100\ndata0[data0.years_employed > 100].shape[0]","5a54a85c":"data0[data0.years_employed > 100].years_employed.describe()","c36f7dfb":"#replacing with NAN\ndata0.years_employed.replace({1000: np.nan}, inplace = True)","570326d3":"#sanity check\ndata0[data0.years_employed > data0.years_birth]","e9cc40c6":"data0[data0.amt_income_total > 5000000]","f582e211":"plt.figure(figsize = [8,6])\nsns.distplot(data0.amt_income_total[data0.amt_income_total < 1000000])\nplt.show()","576a84eb":"#binning amt_income_total to keep the outlier in the analysis\nL = [0, 0.05, 0.2, 0.35, 0.60, 0.75, 0.95, 1]\ndata0.amt_income_total.quantile(L)","cd89cd45":"#Binning Age, years employed, income into buckets(for future use) to make the distribustion more easy to understand\ndata0['age_group'] = pd.cut(data0.years_birth, [0,25,30,35,40,45,50,55,60,65,200], labels = ['<25','25-30','30-35','35-40','40-45',\n                                                                                             '45-50','50-55','55-60','60-65','>65'])\ndata0['income_group'] = pd.qcut(data0.amt_income_total, q = L, labels = ['very-low', 'low','low-medium', 'medium',\n                                                                         'high-medium', 'high', 'very-high'])","ecae3a8e":"data0.target.value_counts()","ff76fcef":"#Visualizing imabalance in the target variable\nwith plt.style.context('seaborn-deep'):\n    explode = (0.1, 0.1)\n    plt.pie(data0.target.value_counts(), labels = ['Target = 0','Target = 1'], explode = explode, radius = 1.8, autopct='%0.1f%%', shadow = True)\n    plt.title('Target Imbalance', fontsize = 20, y = 1.3)\n    plt.legend(bbox_to_anchor=(1.2, 1.2), fancybox=True, shadow=True)\n    plt.show()","222a8af8":"#segmenting the dataset with respect to target variable\nT0 = data0.loc[data0.target == 0]\nT1 = data0.loc[data0.target == 1]","bb8dfaf1":"#Function for visualizing catagorical variables\ndef cat_plot(x):\n    plt.subplot(1,2,1)\n    cnt1 = sns.countplot(T0[x], palette = 'hls', order = T0[x].value_counts().index)\n    plt.xticks(rotation = 45)\n    cnt1.set_title('{} composition of Non-Defaulters'.format(x), fontsize = 16)\n    for k in cnt1.patches:\n        cnt1.annotate('{:.1f}%'.format(k.get_height()\/T0.shape[0]*100),(k.get_x()+0.1, k.get_height()))\n    plt.subplot(1,2,2) \n    cnt2 = sns.countplot(T1[x], palette = 'hls', order = T1[x].value_counts().index)\n    plt.xticks(rotation = 45)\n    cnt2.set_title('{} composition of Defaulters'.format(x), fontsize = 16)\n    for k in cnt2.patches:\n        cnt2.annotate('{:.1f}%'.format(k.get_height()\/T1.shape[0]*100),(k.get_x()+0.2, k.get_height()))","a4b3749e":"T0.code_gender.value_counts(normalize = True)*100","9eece69a":"T1.code_gender.value_counts(normalize = True)*100","a77a2876":"#gender composition in both groups\nplt.figure(figsize = [10, 6])\ncat_plot('code_gender')\nplt.tight_layout()","fcf9b5bb":"#Income source composition of both groups\n##Non-Defauters\nT0.name_income_type.value_counts(normalize = True)*100","ac9741c8":"##Defaulters\nT1.name_income_type.value_counts(normalize = True)*100","9e5acbfe":"plt.figure(figsize = [18, 6])\ncat_plot('name_income_type')","172946e9":"#Rate of Defaulting: (Number of people with default history)\/(Total number of applicants with same income type)\nwith plt.style.context('bmh'):\n    plt.figure(figsize = [10,6])\n    cnt = sns.barplot(data0.name_income_type, data0.target*100, palette=\"Blues_d\", ci = False)\n    plt.title('Rate of Defaulting', fontsize = 16)\n    plt.xticks(rotation = 45)\n    for k in cnt.patches:\n        cnt.annotate('{:.1f}%'.format(k.get_height()),(k.get_x()+0.2, k.get_height()))","e0ebfbb0":"#Type of organisation that the client works in, in both groups\n##Non-defaulters\nT0.organization_type.value_counts(normalize = True).mul(100).head(10)","df0633af":"##Defaulters\nT1.organization_type.value_counts(normalize = True).mul(100).head(10)","5303235e":"plt.figure(figsize = [20, 10])\nsns.countplot(data0['organization_type'], hue = data0.target)\nplt.xticks(rotation = 90)\nplt.show()","8bb6370f":"#Rate of Defaulting: (Number of people with default history)\/(Total number of applicants with same organization type)\nplt.figure(figsize = [16, 8])\nwith plt.style.context('bmh'):\n    plt.figure(figsize = [10,6])\n    cnt = sns.barplot(data0.organization_type, data0.target*100, capsize=.1, palette=\"Blues_d\", ci = None)\n    plt.title('Rate of Defaulting', fontsize = 16)\n    plt.xticks(rotation = 90)","2a16cb82":"#Family status of clients in both groups\n##Non-Defaulters\nT0.name_family_status.value_counts(normalize = True)*100","a4caa41c":"##Defaulters\nT1.name_family_status.value_counts(normalize = True)*100","3943223d":"plt.figure(figsize = [18, 6])\ncat_plot('name_family_status')","662ad9d3":"#Rate of Defaulting: (Number of people with default history)\/(Total number of applicants with same family status)\nwith plt.style.context('bmh'):\n    plt.figure(figsize = [10,6])\n    cnt = sns.barplot(data0.name_family_status, data0.target*100, palette=\"Blues_d\", ci = False)\n    plt.title('Rate of Defaulting', fontsize = 16)\n    plt.xticks(rotation = 45)\n    for k in cnt.patches:\n        cnt.annotate('{:.1f}%'.format(k.get_height()),(k.get_x()+0.2, k.get_height()))","1cc59411":"#Composition of clients who own and do not own a car in both groups\nplt.figure(figsize = [10, 6])\ncat_plot('flag_own_car')\nplt.tight_layout()","755943f3":"#Composition of clients who own and do not own a flat or house in both groups\nplt.figure(figsize = [10, 6])\ncat_plot('flag_own_realty')\nplt.tight_layout()","64e87ca6":"T0.flag_own_realty.value_counts(normalize = True)*100","5861b62d":"#Housing type of clients in both groups\n##Non-defaulters\nT0.name_housing_type.value_counts(normalize = True)*100","bdaa02e3":"#Defaulters\nT1.name_housing_type.value_counts(normalize = True)*100","4e0528e0":"plt.figure(figsize = [18, 6])\ncat_plot('name_housing_type')","ccdb23fd":"#Rate of Defaulting: (Number of people with default history)\/(Total number of applicants with same housing type)\nwith plt.style.context('bmh'):\n    plt.figure(figsize = [10,6])\n    cnt = sns.barplot(data0.name_housing_type, data0.target*100, palette=\"Blues_d\", ci = False)\n    plt.title('Rate of Defaulting', fontsize = 16)\n    plt.xticks(rotation = 45)\n    for k in cnt.patches:\n        cnt.annotate('{:.1f}%'.format(k.get_height()),(k.get_x()+0.2, k.get_height()))","642049be":"#Name_type_suite: Who was accompanying client when he was applying for the loan\nplt.figure(figsize = [18, 6])\ncat_plot('name_type_suite')","c607fa76":"#Level of Highest education of clients in both groups\n##Non-defaulters\nT0.name_education_type.value_counts(normalize = True)*100","f183d956":"#Defaulters\nT1.name_education_type.value_counts(normalize = True)*100","4bfd74d3":"plt.figure(figsize = [18, 6])\ncat_plot('name_education_type')","89a4f5a3":"#Rate of Defaulting: (Number of people with default history)\/(Total number of applicants with same highest level of education)\nwith plt.style.context('bmh'):\n    plt.figure(figsize = [10,6])\n    cnt = sns.barplot(data0.name_education_type, data0.target*100, palette=\"Blues_d\", ci = False)\n    plt.title('Rate of Defaulting', fontsize = 16)\n    plt.xticks(rotation = 45)\n    for k in cnt.patches:\n        cnt.annotate('{:.1f}%'.format(k.get_height()),(k.get_x()+0.2, k.get_height()))","8ee74254":"#Age of Applicants\n#Age is not a catagorical variable but has been visualized here so that age analysis stays in one place. \nplt.figure(figsize = [10,6])\nsns.kdeplot(T0.years_birth, fill = True, linewidth = 1.5, label = 'Non-Defaulter')\nsns.kdeplot(T1.years_birth, fill = True, linewidth = 1.5, label = 'Defaulter')\nplt.legend()","4df9dca6":"data0.years_birth.unique()","f5f214f5":"plt.figure(figsize = [18, 6])\nplt.subplot(1,2,1)\ncat_plot('age_group')","a19bd1af":"#Rate of Defaulting: (Number of people with default history)\/(Total number of applicants in that age group)\nwith plt.style.context('bmh'):\n    plt.figure(figsize = [10,6])\n    cnt = sns.barplot(data0.age_group, data0.target*100, palette=\"Blues_d\", ci = False)\n    plt.title('Rate of Defaulting', fontsize = 16)\n    for k in cnt.patches:\n        cnt.annotate('{:.1f}%'.format(k.get_height()),(k.get_x()+0.2, k.get_height()))","e1b3e7da":"#Income of Applicants\n#Income is not a catagorical variable but has been visualized here so that income analysis stays in one place.\n##plotting excluding some outliers\nplt.figure(figsize = [10,6])\nsns.kdeplot(T0.amt_income_total[T0.amt_income_total < 1000000], fill = True, linewidth = 1.5, label = 'Non-Defaulter')\nsns.kdeplot(T1.amt_income_total[T1.amt_income_total < 1000000], fill = True, linewidth = 1.5, label = 'Defaulter')\nplt.legend()","e92a3bea":"plt.figure(figsize = [18, 6])\ncat_plot('income_group')","c4d1ed8b":"#Rate of Defaulting: (Number of people with default history)\/(Total number of applicants in that income group)\nwith plt.style.context('bmh'):\n    plt.figure(figsize = [10,6])\n    cnt = sns.barplot(data0.income_group, data0.target*100, palette=\"Blues_d\", ci = False)\n    plt.title('Rate of Defaulting', fontsize = 16)\n    for k in cnt.patches:\n        cnt.annotate('{:.1f}%'.format(k.get_height()),(k.get_x()+0.2, k.get_height()))","4cfd73f0":"#Region rating of the region where client lives\nplt.figure(figsize = [12, 6])\ncat_plot('region_rating_client')\nplt.tight_layout()","9bffe724":"#Rate of Defaulting: (Number of people with default history)\/(Total number of applicants in with same region rating)\nwith plt.style.context('bmh'):\n    plt.figure(figsize = [10,6])\n    cnt = sns.barplot(data0.region_rating_client, data0.target*100, palette=\"Blues_d\", ci = False)\n    plt.title('Rate of Defaulting', fontsize = 16)\n    for k in cnt.patches:\n        cnt.annotate('{:.1f}%'.format(k.get_height()),(k.get_x()+0.3, k.get_height()))","4fcf9ace":"from numpy.core.fromnumeric import size\n#Function for visualizing numerical variables\ndef num_plot(x):\n    with sns.axes_style(\"whitegrid\"):\n        G = plt.GridSpec(2, 2)\n        ax1 = plt.subplot(G[0,0])\n        sns.distplot(T0[x], label = 'target = 0', color = 'tab:green')\n        plt.title('Distribution plots of {}'.format(x), fontsize = 16)\n        plt.legend(prop = {'size':16})\n        ax2 = plt.subplot(G[1,0], sharex = ax1, sharey = ax1)\n        sns.distplot(T1[x], label = 'target = 1', color = 'sienna')\n        plt.legend(prop = {'size':16})\n        ax3 = plt.subplot(G[:,1])\n        sns.boxplot(data0.target, data0[x], palette = 'Set2', showmeans = True)\n        plt.title('Box plots of {}'.format(x), fontsize = 16)\n    plt.tight_layout()\n    plt.show()","23c298a5":"#Number of children that the client has\nplt.figure(figsize = [18,10])\nnum_plot('cnt_children')","070819e3":"plt.figure(figsize = [18,10])\nnum_plot('cnt_fam_members')","82b821af":"#sanity check\ndata0[data0.cnt_children > data0.cnt_fam_members].size","2ea00940":"plt.figure(figsize = [18,10])\nnum_plot('amt_annuity')","b4b052c2":"plt.figure(figsize = [18,10])\nnum_plot('amt_credit')","30f3b444":"plt.figure(figsize = [18,10])\nnum_plot('amt_goods_price')","fbe23530":"#Normalized population of region where client lives (higher number means the client lives in more populated region)\nplt.figure(figsize = [18,10])\nnum_plot('region_population_relative')","7e0308f2":"#Sanity check to confirm normalization of values \ndata0.region_population_relative.unique().sum()","87337a1b":"#Age of clients in years wrt Target\nplt.figure(figsize = [18,10])\nnum_plot('years_birth')","323ae3d1":"#Number of years the client has been employed to his current employement\nplt.figure(figsize = [18,10])\nnum_plot('years_employed')","7ef85e74":"data0.select_dtypes(include = ['int64', 'float64']).columns","9280bd50":"#List of columns with data type integer or float\ndata0.select_dtypes(include = ['int64', 'float64']).columns","ecf7c12f":"#Pair to visualize relavant numeric variables against each other at the same time to maximise insights\n##Non-defaulters\nplt.figure(figsize = [20,16])\nsns.pairplot(T0[['cnt_children', 'cnt_fam_members', 'amt_income_total',\n       'amt_credit', 'amt_annuity', 'amt_goods_price',\n       'years_birth']])","77da902e":"##Defaulter\nplt.figure(figsize = [20,16])\nsns.pairplot(T1[['cnt_children', 'cnt_fam_members', 'amt_income_total',\n       'amt_credit', 'amt_annuity', 'amt_goods_price',\n       'years_birth']])","c69cbbe3":"##Non-defaulters\nplt.figure(figsize = [18,8])\nsns.heatmap(T0[['cnt_children', 'cnt_fam_members', 'amt_income_total',\n       'amt_credit', 'amt_annuity', 'amt_goods_price',\n       'region_population_relative', 'days_birth', 'days_employed','days_registration', \n       'days_id_publish']].corr(), cmap = 'RdYlGn', annot = True)","780a4b58":"plt.figure(figsize = [18,8])\nsns.heatmap(T1[['cnt_children', 'cnt_fam_members', 'amt_income_total',\n       'amt_credit', 'amt_annuity', 'amt_goods_price',\n       'region_population_relative', 'days_birth', 'days_employed','days_registration', \n       'days_id_publish']].corr(), cmap = 'RdYlGn', annot = True)","86c7306e":"#List of columns with non numeric data type. (There are few other catagorical varibles with numeric data type too)\ndata0.select_dtypes(exclude = ['int64', 'float64']).columns","98b42056":"#gender, education\ndata0.groupby(['name_education_type','code_gender']).target.mean().unstack()","cc29824c":"#gender, income group\ndata0.groupby(['income_group','code_gender']).target.mean().unstack()","6166bde2":"#gender, age-group, education\ntable0 = data0.groupby(['code_gender','age_group','name_education_type']).target.mean().unstack()","4de6a3c7":"plt.figure(figsize = [14,10])\nsns.heatmap(table0, cmap = 'Greens', annot = True, center = 0.0807)","a880fa36":"#gender, housing type, family status\ntable1 = data0.groupby(['code_gender','name_housing_type','name_family_status']).target.mean().unstack()","3a785ece":"plt.figure(figsize = [14,8])\nsns.heatmap(table1, cmap = 'Blues', annot = True, center = 0.0807)","bdd400be":"#top 10 corelations of relevant numerical variables\ncols = ['cnt_children', 'cnt_fam_members', 'amt_income_total', 'amt_credit', 'amt_annuity', 'amt_goods_price', 'region_population_relative',\n        'region_rating_client', 'region_rating_client_w_city', 'days_birth', 'days_employed','days_registration', 'days_id_publish']\n##Non-defaulters\ncorr = T0[cols].corr()\ncorr_matrix0 = corr.where(np.triu(np.ones(corr.shape),k=1).astype(np.bool)).unstack().reset_index()\ncorr_matrix0.columns = ['variable_1', 'variable_2', 'correlation_coeff']\ncorr_matrix0 = corr_matrix0.loc[corr_matrix0.variable_1 != corr_matrix0.variable_2]\ncorr_matrix0.dropna(inplace = True)\n#new column with absolute correlation coefficient as a high negative correlation is also a strong correlation\ncorr_matrix0['abs_correlation_coeff'] = corr_matrix0['correlation_coeff'].abs()\ncorr_matrix0.sort_values('abs_correlation_coeff', ascending = False, inplace = True)","58eaffcc":"corr_matrix0.head(10)","3a531373":"##Defaulters\ncorr = T1[cols].corr()\ncorr_matrix1 = corr.where(np.triu(np.ones(corr.shape),k=1).astype(np.bool)).unstack().reset_index()\ncorr_matrix1.columns = ['variable_1', 'variable_2', 'correlation_coeff']\ncorr_matrix1 = corr_matrix1.loc[corr_matrix1.variable_1 != corr_matrix1.variable_2]\ncorr_matrix1.dropna(inplace = True)\n#new column with absolute correlation coefficient as a high negative correlation is also a strong correlation\ncorr_matrix1['abs_correlation_coeff'] = corr_matrix1['correlation_coeff'].abs()\ncorr_matrix1.sort_values('abs_correlation_coeff', ascending = False, inplace = True)","ea7056e2":"corr_matrix1.head(10)","d89b7474":"#Clustermap of all the relevant numeric columns for both the groups\n#It shows varibles that are more and less correlated\n##Non-defaulters\nsns.clustermap(T0[cols].corr(), cmap = 'RdYlGn', annot = True, figsize = [16,12])\nplt.show()","e0951047":"##Defaulters\nsns.clustermap(T1[cols].corr(), cmap = 'RdYlGn', annot = True, figsize = [16,12])\nplt.show()","13e7305a":"data1.head()","8c5836d4":"#changing column names to lower-case for convinience\ndata1.columns = data1.columns.map(lambda x: str(x).lower())","cf768902":"data1.info()","eb120941":"#Replacing 'XNA' and 'XAP' with NaN\ndata1.replace({'XNA':np.nan, 'XAP':np.nan}, inplace = True)","3abde2b1":"data1.columns","5a0818c4":"#Function for visualizing composition of categories of different qualitative variables\ndef cat_plotp(x):\n    with plt.style.context('seaborn-muted'):\n        cnt1 = sns.countplot(data1[x], order = data1[x].value_counts().index)\n        plt.xticks(rotation = 45, ha = 'right')\n        cnt1.set_title('Distribution plot of {}'.format(x), fontsize = 16)\n        for k in cnt1.patches:\n            cnt1.annotate('{:.1f}%'.format(k.get_height()\/data1[x].notnull().sum()*100),(k.get_x()+0.1, k.get_height()))\n    plt.show()","025d6a29":"#Contract status of previous application\ndata1.name_contract_status.value_counts(normalize = True)*100","0466a592":"with plt.style.context('seaborn-deep'):\n    explode = (0, 0.1, 0.1, 0.1)\n    plt.pie(data1.name_contract_status.value_counts(), labels = ['Approved', 'Cancelled', 'Refused', 'Unused offer'], explode = explode, radius = 1.8, autopct='%0.1f%%', shadow = True)\n    plt.title('Contract status', fontsize = 20, y = 1.3)\n    plt.legend(bbox_to_anchor=(1.2, 1.2), fancybox=True, shadow=True)\n    plt.show()","ed654591":"data1.name_cash_loan_purpose.notnull().sum()","22103898":"#Purpose of cash loan\nplt.figure(figsize = [16,6])\ncat_plotp('name_cash_loan_purpose')","e446fb37":"#Contract product type of previous application\nplt.figure(figsize = [8,6])\ncat_plotp('name_contract_type')","2f8956ce":"#Payment method that the client chose to pay for the previous application\ndata1.name_payment_type.value_counts(normalize = True).mul(100)","aa7c8be2":"#Reasons for why the previous application wa rejected\nplt.figure(figsize = [14,6])\ncat_plotp('code_reject_reason')","8e30b858":"#Through what channel was the client acquired\nplt.figure(figsize = [16,6])\ncat_plotp('channel_type')","7ee177a2":"#On which day of the week did the client apply for previous application\nplt.figure(figsize = [16,6])\ncat_plotp('weekday_appr_process_start')","0dd4b242":"#kind of goods did the client apply for in the previous application\nplt.figure(figsize = [18,6])\ncat_plotp('name_goods_category')","4965c7aa":"#Type of client: whether he\/she was new or old client\nwith plt.style.context('seaborn-deep'):\n    explode = (0, 0.1, 0.1)\n    plt.pie(data1.name_client_type.value_counts(), labels = ['Rpeater', 'New', 'Refreshed'], explode = explode, radius = 1.8, autopct='%0.1f%%', shadow = True)\n    plt.title('Client type', fontsize = 20, y = 1.3)\n    plt.legend(bbox_to_anchor=(1.2, 1.2), fancybox=True, shadow=True)\n    plt.show()","32d1811d":"#Fuction for visualizing two catagorical variables at the same time\n#Function for visualizing composition of categories of different qualitative variables\ndef hue_cat_plotp(x, y):\n    with plt.style.context('seaborn-muted'):\n        cnt1 = sns.countplot(data1[x], order = data1[x].value_counts().index, hue = data1[y])\n        #plt.xticks(rotation = 45, ha = 'right')\n        cnt1.set_title('Distribution plot of {}'.format(x), fontsize = 16)\n        for k in cnt1.patches:\n            cnt1.annotate('{:.1f}%'.format(k.get_height()\/data1[x].notnull().sum()*100),(k.get_x()+0.05, k.get_height()))\n    plt.show()","fc3face7":"plt.figure(figsize = [18,6])\nhue_cat_plotp('name_client_type', 'name_contract_status')","69a16a0e":"plt.figure(figsize = [18,6])\nhue_cat_plotp('name_contract_type', 'name_contract_status')","bed55828":"plt.figure(figsize = [18,6])\nhue_cat_plotp('weekday_appr_process_start', 'name_client_type')","6e455c33":"plt.figure(figsize = [18,6])\nhue_cat_plotp('channel_type', 'name_client_type')","3de41b36":"#Intrest rate group of clients\nplt.figure(figsize = [16,6])\nhue_cat_plotp('name_yield_group', 'name_contract_status')","b9819c8d":"data1.shape, data0.shape","d60337fd":"#Visualizing distribution of some important numerical variables\nplt.figure(figsize = [20,8])\nplt.subplot(1,7,1)\nsns.boxplot(y = data1.amt_annuity, color = 'tab:green')\nplt.subplot(1,7,2)\nsns.boxplot(y = data1.amt_application, color = 'tab:green')\nplt.subplot(1,7,3)\nsns.boxplot(y = data1.amt_credit, color = 'tab:green')\nplt.subplot(1,7,4)\nsns.boxplot(y = data1.amt_down_payment, color = 'tab:green')\nplt.subplot(1,7,5)\nsns.boxplot(y = data1.amt_goods_price, color = 'tab:green')\nplt.subplot(1,7,6)\nsns.boxplot(y = data1.rate_down_payment, color = 'tab:green')\nplt.subplot(1,7,7)\nsns.boxplot(y = data1.rate_interest_primary, color = 'tab:green')\nplt.tight_layout()\nplt.show()","36992c8c":"data1.name_contract_status.value_counts()","a4285ffb":"#name_contract_status vs amt_annuity\nplt.figure(figsize = [12,8])\nwith plt.style.context('seaborn-whitegrid'):\n    sns.boxplot(data1.name_contract_status, data1.amt_annuity, palette = 'Set2')\nplt.show()","133e910d":"#name_contract_status vs amt_goods_price\nplt.figure(figsize = [12,8])\nwith plt.style.context('seaborn-whitegrid'):\n    sns.boxplot(data1.name_contract_status, data1.amt_goods_price, palette = 'Set2')\nplt.show()","42aa5ca9":"#We will merge only 'sk_id_curr' and 'target' of aplication dataset with previous application data\n##Extracting 'kn_id_curr', 'target','code_gender from application dataset.(more attributes can be extracted for more analysis.)\ndf_id = data0[['sk_id_curr', 'target','code_gender']]\ndf_id","bf07ba50":"#merginging datasets\nnew_data = pd.merge(df_id, data1, on = 'sk_id_curr', how = 'inner')","4bfdc1bb":"#shape of merged dataset\nnew_data.shape","e8ea9db7":"new_data.head()","c0ba2878":"#Fuction for visualizing two catagorical variables at the same time in merged dataset\n#Function for visualizing composition of categories of different qualitative variables\ndef hue_cat_plotp2(x, y, t):\n    with plt.style.context('seaborn-muted'):\n        cnt1 = sns.countplot(new_data.loc[new_data.target == t, x], order = new_data.loc[new_data.target == t, x].value_counts().index, hue = new_data[y])\n        #plt.xticks(rotation = 45, ha = 'right')\n        cnt1.set_title('Distribution plot of {}'.format(x), fontsize = 16)\n        for k in cnt1.patches:\n            cnt1.annotate('{:.1f}%'.format(k.get_height()\/new_data.loc[new_data.target == t, x].notnull().sum()*100),(k.get_x()+0.05, k.get_height()))\n    plt.show()","23511978":"#Non-defaulters\nplt.figure(figsize = [16,6])\nhue_cat_plotp2('name_client_type', 'name_contract_status', 0)","71065b60":"#Defaulters\nplt.figure(figsize = [16,6])\nhue_cat_plotp2('name_client_type', 'name_contract_status', 1)","6158dc30":"#Gender and name_contract_status\n##Non-defaulters\nplt.figure(figsize = [16,6])\nhue_cat_plotp2('name_contract_status', 'code_gender', 0)","c795787d":"##Defaulters\nplt.figure(figsize = [16,8])\nhue_cat_plotp2('name_contract_status', 'code_gender', 1)","4a3c6742":"#Pair to visualize relavant numeric variables against each other at the same time.\n##Non-defaulters and Defaulters\ncols = ['amt_annuity', 'amt_application', 'amt_credit', 'amt_down_payment',\n       'amt_goods_price', 'rate_down_payment','target']\nplt.figure(figsize = [18,12])\nsns.pairplot(new_data[cols], hue = 'target')","12d0128b":"new_data.select_dtypes(include = ['int64','float64']).columns","8a12cc1f":"#Heatmap of all the relevant numeric columns for both the groups in new_data\n##Non-defaulters\ncols = ['amt_annuity', 'amt_application', 'amt_credit', 'amt_down_payment', 'amt_goods_price', 'rate_down_payment', 'rate_interest_primary',\n       'rate_interest_privileged', 'days_decision', 'sellerplace_area', 'cnt_payment', 'days_first_drawing', 'days_first_due',\n       'days_last_due_1st_version', 'days_last_due', 'days_termination']\nplt.figure(figsize = [18,12])\nsns.heatmap(new_data.loc[new_data.target == 0, cols].corr(), cmap = 'RdYlGn', annot = True)\nplt.show() ","b40317ba":"#Defaulters\nplt.figure(figsize = [18,12])\nsns.heatmap(new_data.loc[new_data.target == 1, cols].corr(), cmap = 'RdYlGn', annot = True)\nplt.show() ","2e99c7e7":"#Top correlations in previous application dataset\n##Non-defaulters\ncorr = new_data.loc[new_data.target == 0, cols].corr()\ncorr_matrix0 = corr.where(np.triu(np.ones(corr.shape),k=1).astype(np.bool)).unstack().reset_index()\ncorr_matrix0.columns = ['variable_1', 'variable_2', 'correlation_coeff']\ncorr_matrix0.dropna(inplace = True)\n#new column with absolute correlation coefficient as a high negative correlation is also a strong correlation\ncorr_matrix0['abs_correlation_coeff'] = corr_matrix0['correlation_coeff'].abs()\ncorr_matrix0.sort_values('abs_correlation_coeff', ascending = False, inplace = True)","cd00fba6":"corr_matrix0.head(10)","e12f6b64":"##Defaulters\ncorr = new_data.loc[new_data.target == 1, cols].corr()\ncorr_matrix1 = corr.where(np.triu(np.ones(corr.shape),k=1).astype(np.bool)).unstack().reset_index()\ncorr_matrix1.columns = ['variable_1', 'variable_2', 'correlation_coeff']\ncorr_matrix1.dropna(inplace = True)\n#new column with absolute correlation coefficient as a high negative correlation is also a strong correlation\ncorr_matrix1['abs_correlation_coeff'] = corr_matrix1['correlation_coeff'].abs()\ncorr_matrix1.sort_values('abs_correlation_coeff', ascending = False, inplace = True)","59a902d0":"corr_matrix1.head(10)","10f0693f":"\n\n\n> The overall percentage of previous application that were refused or canceled is more is clearly more for defaulters\/people with payment difficulties when compared to the non-defaulter group.\n\n\n> Percentage of men who applied for loans previously and canceled\/refused it is relatively higher in defaulter group.\n\n\n\n\n","2170d78d":"\n\n> A lot of inferences can be made here if we observe closely, like amt_goods_price and total income have negligible correlation for defaulters and a weak correlation for Non-defaulters.\n\n","d35feb62":"There are no outliers and the distribution is not too skewed so it'll be ok if we imputed 'mean' or 'median' but scince we do not know much about this varible we can just go with median.","751db611":"From the missing number matrix representation, it's clear that the coulmns,\n  '***amt_req_credit_bureau_hour***'\n  '***amt_req_credit_bureau_day***'\n  '***amt_req_credit_bureau_week***'\n  '***amt_req_credit_bureau_mon***'\n  '***amt_req_credit_bureau_qrt***'\n  '***amt_req_credit_bureau_year***'\nare all missing for same data objects and can be treated in same fashion.","022bb699":"To make these columns make more sense, we change the units from days to years.","8004bd0d":"Reading the datasets","f2c08bfd":"## EDA - Bank Defaulter case study","ab5bceb0":"Once again, the column 'amt_goods_price' is a quantitative variable and has a tail of outliers and therefore missing values should be imputed by median.","1a6d4229":"\n\n> From the Age density plot, it looks like people in range 25-45 tend to apply for loan more than much youger and older people.\n\n> Also, it's clear that young people default more than older people.\n\n\n\n","182fe25d":"\n\n> Percentage composition of people with secondary ducation is highest in both groups, indicating that people with secondary education apply for loan much more than others.\n\n\n> Percentage of people with higher education decreases from 25.1% in Non-defaulters to 16.1% in Defaulters. People in this category are less likely to default.\n\n\n\n\n","9ee93883":"End","2d3f2341":"![instant-loan.png](attachment:8973ea58-e780-4c8a-a99a-8afa8f179362.png)","46eb8735":"\n\n> Looks like application were consistent throughout the week except for sunday.\n\n","20c71663":"Age and Income have already been visualised earlier as continuous variables and also as catagorical.\nWe will visualize other quantitative variables with respect to target.","fc77553c":"##3. Analysis","2282fe8d":"We can impute mode here as 'name_type_suit' is a catagorical variable.","5b3e20b5":"####Merging dataframes and bivariate and multivariate analysis","749683f8":"\n\n> HC is appears to be main reason for reject of application\n\n","7afa158e":"###3.2 Bivariate and Multivariate Analysis","b29213b0":"####Quantitative variable Analysis","6ae1dd59":"\n\n>As evident, all of these variables have a tail of outliers.\n\n","e8e1ebc7":"####Inspecting other columns with missing values.","017bc71b":"\n\n> Around 74% of the aplicants were repeaters, 16% New and 8% refreshed.\n\n","3b111388":"\n\n> Most of the clients applying for the loan appear to be from regions with rating 2.\n\n> From the data, it looks like people from regions with rating 1 are less likely to default and those from regions with rating 3 are relatively more likely to default.\n\n\n\n","20e70d59":"\n\n> Data suggests that men in lower to medium income group are more likely to default.\n\n","a6d48f7c":"'amt_annuity' is a quantitative variable and the boxplot reveals that most of the values are closely packed and therefore, it will only make sense if we impute median.","f0ad745e":"\n\n>Almost all the payemnts (99.1%) were made by Cash through bank.\n\n","f576c252":"\n\n> It's clear that men who are widows living in Co-op apartment or rented apartment are more likely to default that any other group in the above heatmap. Also, Men who are widows and live in office apartments, and men who are seperated living in co-op appartmrnts need to to be scrutinised.\n\n","6d3b5bb9":"Analysing catagorical variables with respect to other catagorical variables.","05d82969":"### 3.1 Univariate Analysis","fa6e3762":"## 1. Importing libraries and Reading dataset(s)","775ab37f":"These columns are numerical attributes with decrete values(counts) and have a highly skewed distribution, therefore, it'd make sense to impute mode of distributions in these cases.","0de52fb7":"Rudimentary inspection of application data","5589b01e":"###2.1 Handling Missing values","89c0006a":"###3.3 Previous Application dataset","efb82465":"\n\n> It looks like men with lower secondary education and secondary\/secondary special education are more likely to default\n\n","9475f66a":"> Percentage composition of married people is more than 50 in cases, whcih in indicates that married people apply for loans more than other categories.\n\n\n\n>Percentage composition of categories, single\/non-married, civil marriage increases from 14.5% and 9.5% in Non-defaulters to 18.0% and 11.9% in Defaulters(Clients with payment difficulties). These groups should be scrutinized.\n\n\n\n\n\n\n","6d273a6f":"### Business Understanding: \nThe company\/bank is involved in money lending buisiness. When the company receives a loan application, the company has to decide for loan approval based on the applicant\u2019s profile. Two types of risks are associated with the bank\u2019s decision:\n\n\n> \u2022\tIf the applicant is likely to repay the loan, then not approving the loan results in a loss of business to the company.\n\n\n> \u2022\tIf the applicant is not likely to repay the loan, i.e. he\/she is likely to default, then approving the loan may lead to a financial loss for the company.\n\nBoth of these cases result in a loss to the bank.","37a3429a":"####Correlation and more multivariate analysis","4bc6f549":"\n> Gender composition of Defaulter and Non-Defaulters are different. It looks like there are more Female clients in both the cases which indicates that more women apply for loan than men and also that women are less likely to default.\n\n\n\n\n","97b9d366":"All the values of these columns are negative\/mixed, which is absurd values for any of these variables. Assuming there was some kind of mistake in due to which all the figures are saved as negative, we can convert them to positive values.","0b46c7a2":"\n\n> From the data, the application with low_normal intrest rates were refused more than the other intrest rate groups.\n\n","a5be7880":"Rudimentary inspection of dataset","2491c11b":"\n\n> We can see a clear difference here of status of previous loan for different client types. It looks like repeaters who are defaulters\/have payment difficulties are refused and cancelled more than that for non-defaulters. So, clearly, bank pays attention to this kind of information.\n\n> Also, people with payment difficulties tend to apply for loans in several bank and pick best one. Therefore, the percentage of cancelled application is also more for defaulters.\n\n\n\n","fb68ac2b":"In this we will analyse individual variables with respect to target variable.","7f6e5e45":"Plotting heatmap of correlation matrix of relevant numerical variables for both defaulter and Non-defaulters.","162fea4d":"\n\n> Looks like transport type 2 has the highest defaulting rate. Few other organization type also have high default rate but we can not concusively say about them as there are relatively very less data points corresponding to those organisation types.\n\n","f98f008a":"\n\n> It looks like more than two-thirds of the people who apply for loans own a flat\/house. There is not significant change in composition of the two.\n\n","bff20ab9":"There are around 18% values in year_employed that are equal to 1000. This looks like an error. 18% is a lot of rows, so we can replace it with NAN for now as it will not affect the analysis.","02403b00":"\n\n> We can infer from this chart that most loan applicant live in their own apartment\/house. This is probably due to high cost of maintainance.\n\n\n\n> Rate of defaulting is highest for people living in rented appartments and with parents. It is least for people living in office apartments.\n\n","d079bbb5":"droping data entries for which **'days_last_phone_change'** and **'cnt_fam_members'** values are missing as this count is insignificant.","4218fe90":"####Catagorical variables Analysis","3ed50ed2":"\n\n> Eventhough most of the loan types are cash loans as we have already seen in univariate analysis, consumer loans have a higher likelihood of getting approved.\n\n\n\n","c9858a46":"The imbalance in Target variable is apparent. 91.9% clients have no default histoy and 8.1% have default history.","4f215bcb":"####Quantitative varible analysis","9310f745":"Impute missing values with top categories in existing ratio. It makes sense to do this for a column with more than 31% missing values instead of simply imputing mode.","5be4a27f":"Top 10 correlation for the Client with payment difficulties and all other cases (Target variable).","39ed7bba":"\n\n> No significant change in composition here. Slight increase(65.7% -> 69.5) in percentage of people wo don't own a car and a slight decrease(34.3 -> 30.5) in percentage of people who own a car from Non-defaulters to Defaulters. This means that people who own a car are relatively less likely to default.\n\n","d9b88ef1":"####Catagorical Unordered univariate analysis","c23d4f0f":"Percentage or proportion of clients with default history\/ payment difficulty in the data for different combination of qualitative variables.","5c05506d":"###Problem Statement:\nThis case study aims to identify patterns which indicate if a client has difficulty paying their installments which may be used for taking actions such as denying the loan, reducing the amount of loan, lending (to risky applicants) at a higher interest rate, etc. This will ensure that the consumers capable of repaying the loan are not rejected. Identification of such applicants using EDA is the aim of this case study.\n\n \n\nIn other words, the company wants to understand the driving factors (or driver variables) behind loan default, i.e. the variables which are strong indicators of default. ","8086c401":"\n\n> We can observe here, goods price of goods that client asked for is realtively higher for the applications that got canceled and refused. Most lower amt_goods_price were approved possibly because these applications look less risky.\n\n","4d4f314d":"####Numeric to numeric analysis","c1c37220":"\n\n> Annuity amount was lower for loan application that were approved. Most of the cancelled and refused applications had higher annuity amount.\n\n","30b6ec3f":"####Analysing catagorical Variables","118b0cab":"###2.2 Inspecting Other columns, fixing invalid values and Standardising values","c9471023":"\n\n> There is a consitensy in the overall composition here. When we compare Defaulters to Non-defaulters, there is a decrease in percentage Commercial asociates, pensioners and state servants but an increase in working class percentage, indicating that this group is more likely to default.\n\n\n> The categories, Unemployed and and Maternity leave have a high rate of default but we can not conclusively say anything about these groups as we have very less data corresponding to these two categories.\n\n\n","7a31fe27":"\n\n> It's apparent here that females in age group 25-30 and 30-35 with lower secomdary education, and men in age group 30-35 and 35-40 are more likely to default or have payment difficulties.\n\n","9e22113e":"\n\n> Most of the clients were acquired through credit and cash office and country-wide channels.\n\n","d357e370":"####Catagorical Ordered Univariate Analysis","7b842299":"###Handling Outliers","b8377fef":"Top 10 correlations in previous application dataset","bc9e32b4":"Again, missing values are ancoded as 'XNA'. Replace these with np.nan.\nOrganisation type depends on other variables like occupation type. It can be imputed using a **decision tree classfier**. For now leave it with NAN.","5d2b3aa7":"\n\n> We get a very clear trend with respect to age groups here. Younger people are more likely to default that older people.\n\n","769d3b17":"It looks like for most of these cutomers there were 0 observations for observable 30\/60 DPD and defaulted on 30\/60 DPD. Eventhough it a quantitative variable, it is descrete(counts) and the distribution is highly skewed and therefore, it makes sense to impute mode.","0f8a9d4e":"It looks like XNA is an encoding for missing values. Replacing the missing values in existing female to male ratio makes more sense than simply imputing mode.","1bffbb5f":"\n\n> Composition of type of clients looks more or less the same throughout the week except on sunday.\n\n","04c05dce":"\n\n> It's looks like people with higher income are less likely to default and understandably so. People with low income are also better relatively to the mid range income groups. This is probably because their loans are smaller.\n\n","a826faab":"\n\n> Most of the new clients were acquired through Country-wide channel. On the other hand, old clients were mostly acquired through Credit and cash offices channel.\n\n","da52e41e":"Convert '***days_birth***', '***days_employed***',\n       '***days_registration***', '***days_id_publish***', '***days_last_phone_change***' to a more readable format.","648b98a9":"\n\n> It looks like there's no notable change in who accompanied the client during application.\n\n","1d1fd570":"\n\n>Most of the previous loan application were for mobiles, electronics, computers and A\/V.\n\n","69d13230":"Other Categorical variables with missing values","c556ab6e":"##2. Data Cleaning","730e19bc":"\n\n\n> There is high percentage, 39.4% of clients who are repeaters and whose application were approved.\n\n\n> Repeaters' application is more rejected and cancelled when compared to the percentage approved than any other client types. \n\n","a3d1b5f9":"Dropping Useless columns: It appears that the columns, **'ext_source_1', 'ext_source_2', 'ext_source_3'** are useless columns but will not drop them and instead, we'll simply not use these for any analysis as we do not have much information on what these columns mean. As for the flag_documents columns may not be useful in EDA but can propably be important for model building."}}