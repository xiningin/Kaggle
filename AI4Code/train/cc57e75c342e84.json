{"cell_type":{"95027bf7":"code","a70ce97f":"code","3450fc53":"code","090edd36":"code","00ca8d7e":"code","5cee42b8":"code","084e479e":"code","73724111":"code","faa809fd":"code","2540408a":"code","cfb6ab22":"code","0f4ca78b":"code","8e407913":"code","eb179494":"code","08fe4259":"code","4b589147":"code","986a911d":"code","ddb5687a":"code","c7c1314f":"code","f2afc9ef":"code","cdea343f":"markdown","ee7c4d44":"markdown","6e475e2f":"markdown","31a79445":"markdown","86f75591":"markdown","1db6451e":"markdown","f1ce2dd1":"markdown","1f532ea5":"markdown","7b4c58f4":"markdown","1b3619d3":"markdown","6382a439":"markdown","ae60292f":"markdown","58d8c4b3":"markdown","1b593618":"markdown","af86b482":"markdown","157dde44":"markdown","40244d20":"markdown","bd03f2cc":"markdown","ed09a38c":"markdown","cb150b4f":"markdown","ade97f18":"markdown","dcc5b5d5":"markdown","cc822166":"markdown","f596fb32":"markdown","3c411df3":"markdown","2df178a7":"markdown","8f559d45":"markdown","5b6fbb3a":"markdown","e591e627":"markdown","cb1f52c3":"markdown","84c5f3d2":"markdown","5ffda4c4":"markdown","8d817c4f":"markdown","397986b9":"markdown","1651eddb":"markdown","c4688b6a":"markdown","8480f3b8":"markdown"},"source":{"95027bf7":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom scipy import stats\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics\nfrom sklearn.preprocessing import MinMaxScaler","a70ce97f":"df =pd.read_csv('\/kaggle\/input\/top50spotify2019\/top50.csv',encoding='ISO-8859-1')\ndf.drop(df.columns[0] ,axis=1,inplace=True)\ndf.head()","3450fc53":"df.info()","090edd36":"df.describe()","00ca8d7e":"df.describe(include=['object'])","5cee42b8":"df_num = df[['Beats.Per.Minute', 'Energy', 'Danceability', 'Loudness..dB..', 'Liveness', 'Valence.', 'Length.', 'Acousticness..', 'Speechiness.', 'Popularity']]\ndf_cat = df[['Track.Name', 'Artist.Name', 'Genre']]","084e479e":"for i in df_num.columns:\n    plt.hist(df_num[i])\n    plt.title(i)\n    plt.show()","73724111":"plt.figure(figsize = (10,8))\nsns.heatmap(df_num.corr())\ndf_num.corr()","faa809fd":"pd.pivot_table(df, index = 'Genre', values = ['Beats.Per.Minute', 'Energy', 'Danceability', 'Loudness..dB..', 'Liveness', 'Valence.', 'Length.', 'Acousticness..', 'Speechiness.', 'Popularity'])","2540408a":"plt.figure(figsize = (10,6))\n#sns.set_theme(style=\"whitegrid\")\nplot = sns.swarmplot(x='Genre', y='Popularity', data=df, size=8)\nplt.setp(plot.get_xticklabels(), rotation=70)\nplt.title('Popularity distribution')\nplt.show()","cfb6ab22":"plt.figure(figsize = (10,6))\n#sns.set_theme(style=\"whitegrid\")\nplot = sns.stripplot(x='Genre', y='Beats.Per.Minute', data=df, size=8)\nplt.setp(plot.get_xticklabels(), rotation=70)\nplt.title('BPM distribution')\nplt.show()","0f4ca78b":"plt.figure(figsize = (16,8))\ngenre_grouped = df.groupby('Genre')['Popularity'].sum().sort_values(ascending=False)\nchart = sns.barplot(x=genre_grouped.index, y=genre_grouped)\nplt.xticks(rotation=70)\nplt.title('The most popular music genres')\nplt.tight_layout() ","8e407913":"unique_genre = df['Genre'].drop_duplicates(keep='first') \nmain_genres = ['pop','hip hop',' rap','r&b', 'edm', 'trap', 'latin', 'escape room', 'brostep', 'big room'] # reggae jest w latin, boy band to pop, \ndf.loc[df['Genre'].str.contains('reggae'), 'Genre'] = 'latin' # bez tego po przecinku tez dzia\u0142a\ndf.loc[df['Genre'].str.contains('boy band'), 'Genre'] = 'pop'\n\nd = {'Key':[],'Value':[]}\nfor genre in main_genres:\n    count = df['Genre'].str.contains(genre).sum()\n    d['Key'].append(count)\n    d['Value'].append(genre)\n\ndff = pd.DataFrame(d)\ndff.sort_values(['Key'], ascending=False, inplace=True)\ndff.plot('Value','Key', kind='bar', figsize=(16,8), legend=False, colormap='Paired', fontsize=12)\nplt.title('The most popular main music genres')\nplt.xlabel('Genre')\nplt.ylabel('Popularity')\nplt.tight_layout()","eb179494":"plt.figure(figsize = (12,8))\nartist = df['Artist.Name'].value_counts()[:10]\nsns.barplot(x=artist.index, y=artist, palette=\"Blues_d\")\nplt.xticks(rotation=70)\nplt.xlabel('Artist name')\nplt.ylabel('Number of songs')\nplt.title('Top 10 artists')\nplt.tight_layout()","08fe4259":"fig,axs = plt.subplots(2,2)\nfig.set_figheight(15)\nfig.set_figwidth(15)\nsns.regplot(x='Danceability',y='Popularity', ax=axs[0,1], data=df,color='g')\nsns.regplot(x='Speechiness.',y='Popularity', ax=axs[0,0], data=df)\nsns.regplot(x='Beats.Per.Minute',y='Popularity', ax=axs[1,0], data=df)\nsns.regplot(x='Valence.',y='Popularity', ax=axs[1,1], data=df,color='g')\nplt.show()","4b589147":"pearson_coef, p_value = stats.pearsonr(df['Valence.'], df['Popularity'])\nprint(\"The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  ","986a911d":"pearson_coef, p_value = stats.pearsonr(df['Beats.Per.Minute'], df['Popularity'])\nprint(\"The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  ","ddb5687a":"scaler = MinMaxScaler()\ny=df['Popularity']\nX=scaler.fit_transform(df[['Speechiness.','Beats.Per.Minute','Valence.','Liveness']])\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","c7c1314f":"knn_model = KNeighborsRegressor(n_neighbors=7) # k na pocz\u0105tku 3; pierwiastek z ilo\u015bci data points u mnie pier z 50\nknn_model.fit(X_train, y_train)\ntrain_preds = knn_model.predict(X_train)\nmse = mean_squared_error(y_train, train_preds)\nrmse = sqrt(mse)\ntest_preds = knn_model.predict(X_test)\nmse = mean_squared_error(y_test, test_preds)\nrmse = sqrt(mse)\nprint('RMSE test',rmse)","f2afc9ef":"clf=RandomForestClassifier(n_estimators=100)\nclf.fit(X_train,y_train)\ny_pred=clf.predict(X_test)\nmse = mean_squared_error(y_test, y_pred)\nrmse = sqrt(mse)\nprint('RMSE test',rmse)","cdea343f":"### Let's look on characteristic features based on genre.","ee7c4d44":"### Plot data and a linear regression model fit","6e475e2f":"### Conclusion","31a79445":"### BPM vs Popularity","86f75591":"> The diagram above shows that the most popular genres are dance pop and pop. It is look like genere and subgenre. In the dataset we have more example like this - country rap and dfw rap. Let's try to check what the data will look like when we group all genres with the appropriate subgenres.","1db6451e":"This dataset contains 50 rows and 13 columns about the most popular songs on spotify in 2019. We have information about artist name, track title and genre. The rest columns contain numerical values about: \n* **BPM** - the tempo of the song,\n* **Energy**- the energy of a song - the higher the value, the more energtic song is,\n* **Danceability** - the higher the value, the easier it is to dance to this song,\n* **Loudness** - the higher the value, the louder the song,\n* **Liveness** - the higher the value, the more likely the song is a live recording,\n* **Valence** - the higher the value, the more positive mood for the song,\n* **Length** - the duration of the song,\n* **Acousticness** - the higher the value the more acoustic the song is,\n* **Speechiness** - the higher the value the more spoken word the song contains,\n* **Popularity** - the higher the value the more popular the song is.","f1ce2dd1":"**Conclusion:**\nThe p-value is  >  0.1: there is no evidence that the correlation is significant and also the linear relationship is not significant (~ 0.2)","1f532ea5":"### To better understand the numeric data I use describe() method - it gives understanding of the central tendencies.","7b4c58f4":"### What music genres are the most popular ","1b3619d3":"> Most songs of most music genres fall in the popularity range 85-92.   ","6382a439":"# Top songs from spotify - exploratory data analysis","ae60292f":"> We can see average values of features based on music genre.","58d8c4b3":"> We can see that popularity is correlated mostly with Beats Per Minute and Speechiness. We can see also that Beats Per Minute is highly correlated with Speechiness and Energy with Loudness.","1b593618":"### Distributions for all numeric variables.","af86b482":"### Which artist has the most songs in top list","157dde44":"### Create dataframe and display 5 rows from dataset.","40244d20":"> We can see that the dataset doesn't contain null value. Three column are object type and the rest is int64. ","bd03f2cc":"### The target feature and the predictor features","ed09a38c":"### Random forest ","cb150b4f":"### The k-Nearest Neighbors","ade97f18":"### Popularity distribution","dcc5b5d5":"> We can see that the most popular genres are pop and latin, where the most popular sub-genre is dance-pop.  ","cc822166":"### Separate numerical and categorical values.","f596fb32":"> The graphs above show that different features have different normal distributions ","3c411df3":"Based on RMSE we can see that the k-Nearest Neighbors model works better but I am not able to judge the popularity of the songs based on the parameters available in dataset. Popularity is caused by many more factors.","2df178a7":"### Valence vs Popularity","8f559d45":"**Conclusion:**\nThe p-value is  <  0.05: there is moderate evidence that the correlation is significant, although the linear relationship isn't extremely strong (~ -0.3), the minus sign shows that the relationship is negative","5b6fbb3a":"### Building model, trying a few algorithms and check which work the best","e591e627":"### The purpose of this EDA is to find out if any of the features of the song contributes to its popularity. I also builded a few models to predict popularity based on features available in dataset.","cb1f52c3":"> The chart above shows that the top artist of the 2019 was Ed Sheeran who had 4 songs on the top list. ","84c5f3d2":"> Different genres have different bpm characteristics in range 80-190.","5ffda4c4":"### I tried the Pearson Correlation Coefficient and a P-value for selected features","8d817c4f":"### Beats per minute distribution ","397986b9":"### Importing the necessary libraries.","1651eddb":"### Quick look at our data type and null counts.","c4688b6a":"### Coleration Table and Heatmap","8480f3b8":"### The default setting of 'describe' skips variables of type object. We can apply the method 'describe' on the variables of type 'object'."}}