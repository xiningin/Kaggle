{"cell_type":{"d7bcf396":"code","420c52b3":"code","77386b58":"code","bf23238e":"code","0bd35229":"code","17b65bed":"code","5e981160":"code","3b487e0c":"code","6184b431":"code","1283aad3":"code","4f14276b":"code","af8a708a":"code","af61d08d":"code","8c36b6a5":"code","2e2173c8":"code","9e319f1f":"code","a97a12fe":"code","ed5bb218":"code","a1b52eac":"code","a2818ffe":"code","b74cd8b1":"code","7e6e7666":"code","b529cffd":"code","1659d4dc":"code","09151cba":"code","c5f6e8ce":"code","7c570797":"code","b7b1c67b":"code","3de6e78a":"code","c7a56996":"code","e1c643bd":"code","f1adfcfc":"code","c56b2707":"code","bde1545c":"code","cc13ecfe":"code","2bdf71e6":"code","7d7afcd9":"code","f580cc75":"code","a4f82e35":"code","5cec213e":"code","cba98a2b":"code","6ae82602":"code","a4c651a8":"code","f99ead6f":"code","94e9cf28":"code","b8f2b19c":"code","ab00d362":"code","269a981b":"code","f7e9cbde":"code","e404436f":"code","b7877ee0":"code","89f8f431":"markdown","f34f772a":"markdown","a108923e":"markdown","7b771c66":"markdown","bf08611c":"markdown","151e33f7":"markdown","931366c3":"markdown","e675b544":"markdown","d457c033":"markdown","38458743":"markdown","8f60b08c":"markdown","b8bb95ea":"markdown"},"source":{"d7bcf396":"import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","420c52b3":"data = pd.read_csv('..\/input\/iris\/Iris.csv')\ndata.head()","77386b58":"data.drop(columns='Id', inplace=True)\ndata.head()","bf23238e":"data.shape","0bd35229":"data.columns","17b65bed":"data.dtypes","5e981160":"data.info()","3b487e0c":"data.isna().values.any()","6184b431":"data[data.duplicated()]","1283aad3":"data.duplicated().value_counts()","4f14276b":"data.drop_duplicates(inplace=True)\ndata.shape","af8a708a":"data.describe()","af61d08d":"data.corr()","8c36b6a5":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","2e2173c8":"sns.heatmap(data=data.corr())","9e319f1f":"data['Species'].value_counts()","a97a12fe":"data['Species'].value_counts().plot.bar()\nplt.tight_layout()\nplt.show()","ed5bb218":"sns.countplot(data=data, x='Species')\nplt.tight_layout()","a1b52eac":"data['Species'].value_counts().plot.pie(autopct='%1.1f%%', labels=None, legend=True)\nplt.tight_layout()","a2818ffe":"fig,ax = plt.subplots(nrows=2, ncols=2, figsize=(8,8))\n\ndata['SepalLengthCm'].plot.line(ax=ax[0][0])\nax[0][0].set_title('Sepal Length')\n\ndata['SepalWidthCm'].plot.line(ax=ax[0][1])\nax[0][1].set_title('Sepal Width')\n\ndata['PetalLengthCm'].plot.line(ax=ax[1][0])\nax[1][0].set_title('Petal Length')\n\ndata['PetalWidthCm'].plot.line(ax=ax[1][1])\nax[1][1].set_title('Petal Width')","b74cd8b1":"data.plot()\nplt.tight_layout()","7e6e7666":"data.hist(figsize=(6,6), bins=10)\nplt.tight_layout()","b529cffd":"data.boxplot()\nplt.tight_layout()","1659d4dc":"data.boxplot(by='Species', figsize=(8,8))\nplt.tight_layout()","09151cba":"sns.scatterplot(x='SepalLengthCm', y='SepalWidthCm', data=data, hue='Species')\nplt.tight_layout()","c5f6e8ce":"sns.pairplot(data, hue='Species', markers='+')\nplt.tight_layout()","7c570797":"sns.violinplot(data=data, y='Species', x='SepalLengthCm', inner='quartile')\nplt.tight_layout()","b7b1c67b":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score,confusion_matrix,classification_report","3de6e78a":"X = data.drop(columns='Species')\nX.head()","c7a56996":"y = data['Species']\ny.head()","e1c643bd":"X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.4, random_state=10)\nprint('training dataset')\nprint(X_train.shape)\nprint(y_train.shape)\nprint('testing dataset')\nprint(X_test.shape)\nprint(y_test.shape)","f1adfcfc":"from sklearn.neighbors import KNeighborsClassifier","c56b2707":"k_range = list(range(1,26))\nscores = []\nfor k in k_range:\n    model_knn = KNeighborsClassifier(n_neighbors=k)\n    model_knn.fit(X_train,y_train)\n    y_pred = model_knn.predict(X_test)\n    scores.append(accuracy_score(y_test,y_pred))","bde1545c":"plt.plot(k_range,scores)\nplt.xlabel('Value of k for KNN')\nplt.ylabel('Accuracy Score')\nplt.title('Accuracy Scores for Values of k of k-Nearest-Neighbors')\nplt.tight_layout()\nplt.show","cc13ecfe":"model_knn = KNeighborsClassifier(n_neighbors=3)\nmodel_knn.fit(X_train,y_train)\ny_pred = model_knn.predict(X_test)","2bdf71e6":"print(accuracy_score(y_test,y_pred))","7d7afcd9":"print(confusion_matrix(y_test,y_pred))","f580cc75":"print(classification_report(y_test,y_pred))","a4f82e35":"from sklearn.linear_model import LogisticRegression","5cec213e":"model_logreg = LogisticRegression(solver='lbfgs', multi_class='auto')\nmodel_logreg.fit(X_train, y_train)\ny_pred = model_logreg.predict(X_test)","cba98a2b":"print(accuracy_score(y_test,y_pred))","6ae82602":"print(confusion_matrix(y_test,y_pred))","a4c651a8":"print(classification_report(y_test,y_pred))","f99ead6f":"from sklearn.svm import SVC","94e9cf28":"model_svc = SVC(gamma='scale')\nmodel_svc.fit(X_train,y_train)\ny_pred = model_svc.predict(X_test)","b8f2b19c":"from sklearn.tree import DecisionTreeClassifier","ab00d362":"model_dt = DecisionTreeClassifier()\nmodel_dt.fit(X_train,y_train)\ny_pred = model_dt.predict(X_test)","269a981b":"from sklearn.ensemble import RandomForestClassifier","f7e9cbde":"model_rf = RandomForestClassifier(n_estimators=100)\nmodel_rf.fit(X_train,y_train)\npred_rf = model_rf.predict(X_test)","e404436f":"models = [model_knn, model_logreg, model_svc, model_dt, model_rf]\naccuracy_scores = []\nfor model in models:\n    pred = model.predict(X_test)\n    accuracy = accuracy_score(y_test,y_pred)\n    accuracy_scores.append(accuracy)\n    \nprint(accuracy_scores)","b7877ee0":"plt.bar(['KNN', 'LR', 'SVC', 'DT', 'RF'], accuracy_scores)\nplt.ylim(0.9,1.01)\nplt.title('Accuracy comparison for various models', fontsize=15, color='r')\nplt.xlabel('Models', fontsize=10, color='g')\nplt.ylabel('Accuracy Score', fontsize=10, color='g')\nplt.tight_layout()\nplt.show()","89f8f431":"## **K Nearest Neighbors**","f34f772a":"## **Decision Tree Classifier**","a108923e":"## **Support Vector Classifier**","7b771c66":"#### **Classification Report**","bf08611c":"## **Random Forest Classifier**","151e33f7":"# **Iris Dataset: Classification Models**","931366c3":"#### **Accuracy Score**","e675b544":"### **Accuracy Comparison for Various Models**","d457c033":"#### **Confusion Matrix**","38458743":"## **Logistic Regression**","8f60b08c":"# **Iris Dataset: Data Visualisation**","b8bb95ea":"# **Iris Dataset: Simple Exploratory Data Analysis (EDA)**"}}