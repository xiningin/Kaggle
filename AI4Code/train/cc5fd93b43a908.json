{"cell_type":{"6b1def9f":"code","1a48e87b":"code","70be7a47":"code","f81aa12b":"code","05ab99ab":"code","60594f63":"code","f07d661b":"code","def33806":"code","e398a2cd":"code","01cd7053":"code","285a92ad":"code","ac7d17e4":"code","d803ac9a":"code","c4beaf35":"code","2636bcc9":"code","1b77e165":"code","f0cb4b00":"code","14394e42":"code","f0b257a7":"code","4166ed12":"markdown","8618dc9e":"markdown","3af459d6":"markdown","fef643a7":"markdown","01702280":"markdown","8d124c34":"markdown","9244c833":"markdown","1aa1109e":"markdown","5c996b3a":"markdown"},"source":{"6b1def9f":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nimport numpy as np\nimport scipy.io as sio\nimport random\nimport matplotlib.pyplot as plt\nimport os\nfrom scipy.io import loadmat\nimport seaborn as sns\nimport pandas as pd\nimport plotly.express as px\nfrom sklearn.svm import SVC\nfrom sklearn.decomposition import PCA\nfrom sklearn.model_selection import train_test_split\nimport time\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score","1a48e87b":"import pandas as pd\nimport numpy as np","70be7a47":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import metrics","f81aa12b":"def read_HSI():\n    X = loadmat('..\/input\/mat-files\/Indian_pines.mat')['indian_pines']\n    y = loadmat('..\/input\/mat-files\/Indian_pines_gt.mat')['indian_pines_gt']\n    print(f\"X shape:{X.shape}\\ny shape: {y.shape}\")\n    return X,y\nX, y = read_HSI()","05ab99ab":"def plot_band(dataset):\n    plt.figure(figsize=(8, 6))\n    band_no = 40\n    plt.imshow(dataset[:,:, band_no], cmap='jet')\n    plt.title(f'Band-{band_no}', fontsize=14)\n    plt.axis('off')\n    plt.colorbar()\n    plt.show()\nplot_band(X)","60594f63":"sns.axes_style('whitegrid')\nfig = plt.figure(figsize=(12,6))\n\nfor i in range(1,1+6):\n    fig.add_subplot(2,3,i)\n    q = np.random.randint(X.shape[2])\n    plt.imshow(X[:,:,q],cmap='jet')\n    plt.axis('off')\n    plt.title(f'band - {q}')","f07d661b":"def extract_pixels(X,y):\n    q = X.reshape(-1,X.shape[2])\n    df = pd.DataFrame(data=q)\n    df = pd.concat([df,pd.DataFrame(data = y.ravel())], axis=1)\n    df.columns = [f'band{i}' for i in range(1,1+X.shape[2])]+['class']\n    df.to_csv('IndianPines.csv')\n    return df\ndf = extract_pixels(X,y)","def33806":"df = pd.read_csv(\"IndianPines.csv\")\ndf","e398a2cd":"df.iloc[:,:-1].describe()","01cd7053":"pca = PCA(n_components = 3)\ndt = pca.fit_transform(df.iloc[:, :-1].values)\nq = pd.concat([pd.DataFrame(data = dt), pd.DataFrame(data = y.ravel())], axis = 1)\nq.columns = [f'PC-{i}' for i in range(1,4)]+['class']\n\nq.to_csv('IndianPines_.csv',index=False)\n\nqq = q[q['class']!=0]\nqq['class'].value_counts()","285a92ad":"class_labels = {'1':'Alfaalfa','2':'Corn-notill','3':'Corn-mintill','4':'Corn','5':'Grass\/pasture','6':'Grass\/trees','7':'Grass\/pasture-mowed','8':'Hay-windrowed','9':'Oats','10':'Soyabean-notill','11':'Soyabean-mintill','12':'Soyabean-clean','13':'Wheat','14':'Woods','15':'Building-grass-trees-drives','16':'Stone-steel towers'}","ac7d17e4":"qq['label'] = qq['class'].apply(lambda x:class_labels[str(x)])","d803ac9a":"qq['label'].value_counts()","c4beaf35":"count = qq['class'].value_counts()\nbar_fig = px.bar(x=count.index[1:],y = count[1:], labels=class_labels, color = count.index[1:])\nbar_fig.update_layout(\n        xaxis = dict(\n            title='Class',\n            tickmode='array',\n            tickvals= count.index[1:].tolist(),\n            tickangle = 45\n        ),\n        yaxis = dict(\n            title='count',\n        ),\n          showlegend = False\n)\nbar_fig.show()","2636bcc9":"sample_size = 10\nsample = qq.groupby('class').apply(lambda x: x.sample(sample_size))\nsample.head()","1b77e165":"scatter_3d = px.scatter_3d(sample, x=\"PC-1\", y=\"PC-2\", z=\"PC-3\", color=\"label\", size=\"class\", hover_name=\"label\",symbol=\"label\")\nscatter_3d.show()\npy.plot(scatter_3d, filename = 'scatter_3d', auto_open=True)","f0cb4b00":"pair = px.scatter_matrix(sample, dimensions=[\"PC-1\", \"PC-2\", \"PC-3\"], color=\"label\")\npair.show()\npy.plot(pair, filename = 'pair_plot_pc', auto_open=True)","14394e42":"fig = px.scatter(sample, x=\"PC-1\", y=\"PC-2\", size=\"class\", color=\"label\",\n           hover_name=\"label\", log_x=True, size_max=12)\nfig.show()","f0b257a7":"fig = fig = px.violin(sample, y=\"PC-1\", x=\"PC-2\", color=\"label\", box=True, points=\"all\", \n                      hover_data=['PC-1', 'PC-2', 'PC-3','label'])\nfig.show()","4166ed12":"#### Description of the dataset","8618dc9e":"#### Visualization ","3af459d6":"#### count all the classes","fef643a7":"#### Plotting of Dataset ","01702280":"#### Loading dataset","8d124c34":"#### Reading csv","9244c833":"#### Extracting Pixels","1aa1109e":"#### Box Plot","5c996b3a":"#### Importing Packages"}}