{"cell_type":{"6d735d73":"code","43a581fa":"code","28ae38b4":"code","d9a2cb37":"code","2f3a6ea8":"code","ff86cb5d":"code","6bd6ee15":"code","14453def":"code","68b5475c":"code","5be2964c":"code","38ccc00a":"code","6b4ab48e":"code","9ee4b767":"code","91cbd9ef":"code","2aa578cd":"code","fe2da31b":"code","ec028d6b":"code","d957b1b3":"code","455b4f82":"code","c41ff2be":"code","d47d30d4":"code","5759dc19":"code","e0984223":"code","0299517e":"code","a0c9039e":"code","57c2634c":"code","d296aa54":"markdown"},"source":{"6d735d73":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","43a581fa":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","28ae38b4":"test_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","d9a2cb37":"train_data.dtypes\n","2f3a6ea8":"import pandas_profiling as pdp","ff86cb5d":"#df = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\n#pdp.ProfileReport(df)\n#profile_report = df.profile_report()\n#profile_report.to_file(\"\/content\/drive\/My Drive\/AI TiagoScopel\/example.html\")\n#profile_report","6bd6ee15":"train_data.isnull().sum()","14453def":"train_data.shape","68b5475c":"train_data = train_data.drop(columns =[\n    \"Name\",\n    \"Ticket\"\n])","5be2964c":"mapping = train_data.Cabin.value_counts()\n\ndf = train_data.Cabin.map(mapping)","38ccc00a":"train_data.loc[train_data['Cabin'].isnull(),'Cabin_value'] = 0\ntrain_data.loc[train_data['Cabin'].notnull(), 'Cabin_value'] = 1\n\nprint (train_data)","6b4ab48e":"test_data.loc[test_data['Cabin'].isnull(),'Cabin_value'] = 0\ntest_data.loc[test_data['Cabin'].notnull(), 'Cabin_value'] = 1\n\nprint (test_data)","9ee4b767":"train_data = train_data.drop(columns =[\n    \"Cabin\"\n])\ntest_data = test_data.drop(columns =[\n    \"Cabin\"\n])","91cbd9ef":"train_data =pd.get_dummies(train_data)\n","2aa578cd":"test_data =pd.get_dummies(test_data)","fe2da31b":"train_data.dtypes","ec028d6b":"train_data.head()","d957b1b3":"train_data.isnull().sum()","455b4f82":"y = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\",\"Sex_male\", \"SibSp\", \"Parch\", \"Cabin_value\", \"Embarked_C\", \"Embarked_Q\",\"Embarked_S\"]\nX = train_data[features]\nX_test = test_data[features]\n\nfrom sklearn import model_selection\nfrom sklearn.dummy import DummyClassifier\nfrom sklearn.linear_model import(\nLogisticRegression,\n)\n\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import(KNeighborsClassifier,)\n\n","c41ff2be":"#help(model_selection)","d47d30d4":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import (\nRandomForestClassifier,)\nimport xgboost","5759dc19":"from sklearn.model_selection import KFold","e0984223":"for model in[\n    DummyClassifier,\n    LogisticRegression,\n    DecisionTreeClassifier,\n    GaussianNB,\n    SVC,\n    RandomForestClassifier,\n    xgboost.XGBClassifier,\n    ]:\n    cls=model()\n    kfold = model_selection.KFold(n_splits=10,random_state=42)\n    s=model_selection.cross_val_score(\n    cls, X,y,scoring=\"roc_auc\",cv=kfold\n    )\n    print(\n    f\"{model.__name__:22} AUC: \"\n    f\"{s.mean():3f} STD: {s.std():.2f}\"\n    )","0299517e":"from sklearn.ensemble import RandomForestRegressor","a0c9039e":"rf = RandomForestClassifier(\nn_estimators=100,random_state=42)\n\nrf.fit(X,y)\npredictions = rf.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission2.csv', index=False)\nprint(\"Your submission was successfully saved!\")","57c2634c":"rf.score(X, y)","d296aa54":"train_data.columns"}}