{"cell_type":{"578d8520":"code","83413ebc":"code","93b3b55c":"code","18a4491a":"code","14f6c016":"code","9658265e":"code","200f753a":"code","eda2ab34":"code","d1b5a0ba":"code","d4e5ffe7":"code","68439c65":"code","10c38fe0":"code","473c0844":"code","dd79edab":"code","16992fbe":"code","8aa66132":"code","b11e8c13":"code","e5e78a2a":"markdown","d7b6fed2":"markdown","97e82e3f":"markdown","ebf51736":"markdown","6a03e440":"markdown","c4321ba0":"markdown","6c75134b":"markdown","4d010b5a":"markdown","19275e60":"markdown","bc678e4d":"markdown","05e520e2":"markdown","8786e1e2":"markdown","32b516df":"markdown","a77fe41c":"markdown","2ae2143b":"markdown","40dd115d":"markdown","c51a40dd":"markdown","36ad99b0":"markdown","db3e3534":"markdown"},"source":{"578d8520":"%%time\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_score, cross_val_predict\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import classification_report, confusion_matrix","83413ebc":"%%time\ndf = pd.read_csv('..\/input\/pima-indians-diabetes-database\/diabetes.csv')\ndf.head()\n","93b3b55c":"%%time\nX = df.drop('Outcome', axis=1)\nX = StandardScaler().fit_transform(X)\ny = df['Outcome']","18a4491a":"%%time\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.25, random_state=0)","14f6c016":"%%time\nmodel = SVC()\n\nparameters = [{'kernel': ['rbf'], 'gamma': [1e-3, 1e-4],\n                     'C': [1, 10, 100, 1000]},\n                    {'kernel': ['linear'], 'C': [1, 10, 100, 1000]}]","9658265e":"%%time\ngrid = GridSearchCV(estimator=model, param_grid=parameters, cv=5)\ngrid.fit(X_train, y_train)","200f753a":"%%time\nroc_auc = np.around(np.mean(cross_val_score(grid, X_test, y_test, cv=5, scoring='roc_auc')), decimals=4)\nprint('Score: {}'.format(roc_auc))","eda2ab34":"%%time\nmodel = RandomForestClassifier(n_estimators=1000)\nmodel.fit(X_train, y_train)\npredictions = cross_val_predict(model, X_test, y_test, cv=5)\nprint(classification_report(y_test, predictions))","d1b5a0ba":"%%time\nprint(confusion_matrix(y_test, predictions))","d4e5ffe7":"%%time\nscore = np.mean(cross_val_score(model, X_test, y_test, cv=5, scoring='roc_auc'))\nnp.around(score, decimals=4)","68439c65":"%%time\ndf_diabetes = pd.read_csv('..\/input\/diabetes\/diabetes.csv')\ndfMerged = pd.merge(df, df_diabetes)\ndfMerged.shape","10c38fe0":"X = dfMerged.drop('Outcome', axis=1)\nX = StandardScaler().fit_transform(X)\ny = dfMerged['Outcome']\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.25, random_state=0)\nmodel = SVC()\n\nparameters = [{'kernel': ['rbf'], 'gamma': [1e-3, 1e-4],\n                     'C': [1, 10, 100, 1000]},\n                    {'kernel': ['linear'], 'C': [1, 10, 100, 1000]}]\ngrid = GridSearchCV(estimator=model, param_grid=parameters, cv=5)\ngrid.fit(X_train, y_train)\nroc_auc = np.around(np.mean(cross_val_score(grid, X_test, y_test, cv=5, scoring='roc_auc')), decimals=4)\nprint('Score: {}'.format(roc_auc))","473c0844":"model = RandomForestClassifier(n_estimators=1000)\nmodel.fit(X_train, y_train)\npredictions = cross_val_predict(model, X_test, y_test, cv=5)\nprint(classification_report(y_test, predictions))\nscore = np.mean(cross_val_score(model, X_test, y_test, cv=5, scoring='roc_auc'))\nnp.around(score, decimals=4)","dd79edab":"df_liverpatient = pd.read_csv('..\/input\/indian-liver-patient-records\/indian_liver_patient.csv')\ndf_liverpatient","16992fbe":"pd.get_dummies(df_liverpatient['Gender'], prefix = 'Gender').head()\ndf_liverpatient = pd.concat([df_liverpatient,pd.get_dummies(df_liverpatient['Gender'], prefix = 'Gender')], axis=1)\ndf_liverpatient[\"Albumin_and_Globulin_Ratio\"] = df_liverpatient.Albumin_and_Globulin_Ratio.fillna(df_liverpatient['Albumin_and_Globulin_Ratio'].mean())\n\nX =df_liverpatient.drop(['Gender','Dataset'], axis=1)\n","8aa66132":"\nX = StandardScaler().fit_transform(X)\ny = df_liverpatient['Dataset']\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.25, random_state=0)\nmodel = SVC()\n\nparameters = [{'kernel': ['rbf'], 'gamma': [1e-3, 1e-4],\n                     'C': [1, 10, 100, 1000]},\n                    {'kernel': ['linear'], 'C': [1, 10, 100, 1000]}]\ngrid = GridSearchCV(estimator=model, param_grid=parameters, cv=5)\ngrid.fit(X_train, y_train)\nroc_auc = np.around(np.mean(cross_val_score(grid, X_test, y_test, cv=5, scoring='roc_auc')), decimals=4)\nprint('Score: {}'.format(roc_auc))","b11e8c13":"model = RandomForestClassifier(n_estimators=1000)\nmodel.fit(X_train, y_train)\npredictions = cross_val_predict(model, X_test, y_test, cv=5)\nprint(classification_report(y_test, predictions))\nscore = np.mean(cross_val_score(model, X_test, y_test, cv=5, scoring='roc_auc'))\nnp.around(score, decimals=4)","e5e78a2a":"# Seperate independent(X) and dependent variables(y)","d7b6fed2":"# With RandomForestClassifier","97e82e3f":"# Import libraries","ebf51736":"# Evaluate score by cross-validation","6a03e440":"# Hence with merged dataset Random forest classifier is performing better","c4321ba0":"# Data cleaning","6c75134b":"Context \n1. Complete this code execution and send us all the steps you have taken with time to complete each step. you also need to identify most accurate data set & combine few data sets from different sources. \n\n2. You need to identify another sample for the following,\n    1. Diabetes\n    2. Liver\n    3. Cardiac\n    4. Kidney\n    5. Lungs\n","4d010b5a":"# Check score with Random forest classifier cross validation ","19275e60":"# Check cross validation score with RandomForestClassifier ","bc678e4d":"# Print Confusion Matrix","05e520e2":"# Execute program with Liver patient dataset","8786e1e2":"# Load data set","32b516df":"# Merged one more dataset and check score with SVC cross validation ","a77fe41c":"# With SVC","2ae2143b":"# Fit model using cross validation","40dd115d":"#Hence we can say that SVC has better score as compared to Random forest classifier","c51a40dd":"# Select Model and assign parameters, here we have chosen SVC , Support vector classifier with cross validation","36ad99b0":"# Check Model performance with RandomForestClassifier","db3e3534":"# Create train and test data"}}