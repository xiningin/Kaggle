{"cell_type":{"593571d3":"code","60297c3b":"code","25dd5e67":"code","93f6ae34":"code","ab1a18ef":"code","234da115":"code","b039945f":"code","49a686e4":"code","d4d4b733":"code","aa92b516":"code","4129b754":"code","65a36a47":"code","d94a0337":"code","79399ab1":"code","79e2137e":"code","5833e1b5":"code","858e9388":"code","e4b9ede1":"code","d494f135":"code","fc9216c8":"code","6daf7813":"code","e83f36de":"code","6246ac5b":"code","981bc4ec":"code","ab78fc8b":"code","350a5b6f":"code","17c8425b":"code","6291ce70":"code","03baa023":"code","0ae67e9e":"code","27e3145d":"code","d2eebb55":"code","d941504a":"code","df48244c":"code","acbfb098":"code","85d18957":"code","397e2af5":"code","36608708":"code","15336ff6":"code","e4aa8e72":"code","888acce8":"code","e829b946":"code","8648e414":"code","ccea5497":"code","1d6423c1":"code","05e9998f":"code","f1e7c20f":"code","ebf783a2":"code","17a4b1f6":"code","c1db9dd1":"code","9fc91dd7":"code","c3d76872":"code","7724f837":"markdown","3e128d45":"markdown","ebab20a9":"markdown","6a99d272":"markdown","654c4673":"markdown","d4c2a1c1":"markdown","a4c015c3":"markdown","09a096c2":"markdown","836e99ff":"markdown","cbb13cb9":"markdown","524de58e":"markdown","b64c518b":"markdown"},"source":{"593571d3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","60297c3b":"df=pd.read_csv(\"\/kaggle\/input\/house-price-prediction\/train.csv\")","25dd5e67":"df.head()","93f6ae34":"df.isnull().sum()","ab1a18ef":"df['LotFrontage']=df['LotFrontage'].replace(np.NaN,df['LotFrontage'].mean())\n","234da115":"df.shape","b039945f":"df.info()","49a686e4":"df.isnull().sum()","d4d4b733":"df=df.drop([\"MiscFeature\",\"Fence\",\"PoolQC\",\"Alley\"],axis=1)","aa92b516":"df.shape","4129b754":"df['FireplaceQu'].value_counts()","65a36a47":"df['FireplaceQu']=df['FireplaceQu'].replace(np.NaN,'Gd')\n\n","d94a0337":"df.isnull().values.sum()","79399ab1":"df=df.dropna()","79e2137e":"df.isnull().values.sum()","5833e1b5":"# Seperating the Categorical columns from the data\ncat_data = df.select_dtypes(include=['object'])\np=cat_data.columns","858e9388":"import seaborn as sns","e4b9ede1":"def fn(p):\n    for i in p:\n        sns.countplot(x=i, data=df)\n        plt.title(i)\n        plt.show()\nfn(p)","d494f135":"def fn2(p):\n    for i in p:\n        s=df[i].value_counts()\n        print(i)\n        print(s)\nfn2(p)","fc9216c8":"df=df.drop(['Street','Condition2','RoofStyle','Heating','Id'],axis=1)\ndf.shape\n","6daf7813":"df.info()","e83f36de":"int_data = df.select_dtypes(include=['int64'])\ns=int_data.columns\n","6246ac5b":"def fn3(a):\n    for i in a:\n        sns.scatterplot(x=df[i],y=df['SalePrice'],data=df)\n        \n        plt.show()\nfn3(s)","981bc4ec":"df = df[df['PoolArea']< 200]\ndf=df[df['BsmtHalfBath']<1.75]\ndf=df[df['BsmtFullBath']<2.5]\ndf=df[df['TotalBsmtSF']<4000]\ndf=df[df['1stFlrSF']<4000]\ndf.shape","ab78fc8b":"X=df.iloc[:,:-1]\nY=df.iloc[:,-1]\n","350a5b6f":"cat_data = X.select_dtypes(include=['object'])\np=cat_data.columns","17c8425b":"dummies=pd.get_dummies(cat_data,drop_first=True)\ndummies","6291ce70":"X=X.drop(cat_data,axis=1)\nX","03baa023":"X=pd.concat([X,dummies],axis=1)","0ae67e9e":"X","27e3145d":"X.isnull().values.sum()","d2eebb55":"from sklearn.preprocessing import StandardScaler\n","d941504a":"i_f_data = X.select_dtypes(include=['int64','float64'])\ns=i_f_data.columns\n","df48244c":"scaler = StandardScaler()\nX[s] = scaler.fit_transform(X[s])","acbfb098":"X.head(5)","85d18957":"from sklearn.model_selection import train_test_split\n","397e2af5":"X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.3)","36608708":"from sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\nregr=LinearRegression()\nregr.fit(X_train,Y_train)\n\n","15336ff6":"mse = np.mean((regr.predict(X_test) - Y_test)**2)\nmse","e4aa8e72":"print(metrics.r2_score(y_true=Y_train, y_pred=regr.predict(X_train)))","888acce8":"from sklearn.linear_model import Ridge","e829b946":"from sklearn.model_selection import GridSearchCV","8648e414":"ridge=Ridge()\nparameters={'alpha':[1e-15,1e-10,1e-8,1e-3,1e-2,1,5,10,20,30,35,40,45,50,55,100]}\nridge_regr=GridSearchCV(ridge,parameters)\nridge_regr.fit(X_train,Y_train)","ccea5497":"print(ridge_regr.best_params_)\nprint(ridge_regr.best_score_)","1d6423c1":"print(metrics.r2_score(y_true=Y_train, y_pred=ridge_regr.predict(X_train)))","05e9998f":"print(metrics.r2_score(y_true=Y_test, y_pred=ridge_regr.predict(X_test)))","f1e7c20f":"sns.distplot(Y_test-ridge_regr.predict(X_test))","ebf783a2":"from sklearn.linear_model import Lasso\nparameters={'alpha':[1e-15,1e-10,1e-8,1e-3,1e-2,1,5,10,20,30,35,40,45,50,55,100]}\nlasso=Lasso()\nlasso_regr=GridSearchCV(lasso,parameters)\n\nlasso_regr.fit(X_train,Y_train)","17a4b1f6":"print(lasso_regr.best_params_)\nprint(lasso_regr.best_score_)","c1db9dd1":"print(metrics.r2_score(y_true=Y_train, y_pred=lasso_regr.predict(X_train)))","9fc91dd7":"print(metrics.r2_score(y_true=Y_test, y_pred=lasso_regr.predict(X_test)))","c3d76872":"sns.distplot(Y_test-lasso_regr.predict(X_test))","7724f837":"#### Lasso Regression","3e128d45":"## Ridge and Lasso Regression","ebab20a9":"#### Normalizing the data","6a99d272":"#### Ridge Regression","654c4673":"#### Linear Regression","d4c2a1c1":"### Import Libraries","a4c015c3":"### Data Preprocessing","09a096c2":"#### Splitting Data","836e99ff":"#### Converting Categorical Data to numeric","cbb13cb9":"#### Visualizing Categorical Data","524de58e":"#### Dealing with Null Values","b64c518b":"#### Visualizing Integer Data "}}