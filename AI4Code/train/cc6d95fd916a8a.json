{"cell_type":{"456c084c":"code","e01fc08b":"code","ae9a0d28":"code","f4834110":"code","90d32d0d":"code","c2e3942b":"code","ea542311":"code","fc4cf950":"code","6522151e":"code","fd4868ad":"code","ee89b281":"code","a15aae93":"markdown","2658a709":"markdown","801608c8":"markdown","ed4074ac":"markdown"},"source":{"456c084c":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport os.path as osp\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","e01fc08b":"path = '..\/input\/laboratory-acoustic-data-exp4581\/p4581'","ae9a0d28":"acDataStd = np.empty((0,))\nacTime = np.empty((0,))\nevents = 297\n\nfor i in range(events):\n    a = np.load(osp.join(path, f\"earthquake_{i:03d}.npz\"))['acoustic_data'] \n    t = np.load(osp.join(path, f\"earthquake_{i:03d}.npz\"))['ttf'] \n    acDataStd = np.hstack([acDataStd, a.std(axis=1)])\n    acTime = np.hstack([acTime, t])","f4834110":"# smooth data\nN = 1000\nacDataStd = np.convolve(acDataStd, np.ones((N))\/ N, mode='same')","90d32d0d":"fig, ax1 = plt.subplots(figsize=(16, 8))\nplt.title(\"Trends of acoustic_data and time\")\nplt.plot(acDataStd, color='b')\nax1.set_ylabel('acoustic_data', color='b')\nplt.legend(['acoustic_data'])\nax2 = ax1.twinx()\nplt.plot(acTime, color='g')\nax2.set_ylabel('time', color='g')\nplt.legend(['time'], loc=(0.875, 0.9))\nplt.grid(False)","c2e3942b":"event = 50\nacData = np.load(osp.join(path, f\"earthquake_{event:03d}.npz\"))['acoustic_data'] \nacTime = np.load(osp.join(path, f\"earthquake_{event:03d}.npz\"))['ttf'] ","ea542311":"steps = np.arange(4096) * 0.252016890769332e-6\nt = acTime[:, np.newaxis] + np.flip(steps)[np.newaxis]","fc4cf950":"fig, ax1 = plt.subplots(figsize=(16, 8))\nplt.title(\"Trends of acoustic_data and time\")\nplt.plot(acData.flatten(), color='b')\nax1.set_ylabel('acoustic_data', color='b')\nplt.legend(['acoustic_data'])\nax2 = ax1.twinx()\nplt.plot(t.flatten(), color='g')\nax2.set_ylabel('time', color='g')\nplt.legend(['time'], loc=(0.875, 0.9))\nplt.grid(False)","6522151e":"event = 3\nacData = np.load(osp.join(path, f\"earthquake_{event:03d}.npz\"))['acoustic_data'] \nacTime = np.load(osp.join(path, f\"earthquake_{event:03d}.npz\"))['ttf'] ","fd4868ad":"steps = np.arange(4096) * 0.252016890769332e-6\nt = acTime[:, np.newaxis] + np.flip(steps)[np.newaxis]","ee89b281":"fig, ax1 = plt.subplots(figsize=(16, 8))\nplt.title(\"Trends of acoustic_data and time\")\nplt.plot(acData.flatten(), color='b')\nax1.set_ylabel('acoustic_data', color='b')\nplt.legend(['acoustic_data'])\nax2 = ax1.twinx()\nplt.plot(t.flatten(), color='g')\nax2.set_ylabel('time', color='g')\nplt.legend(['time'], loc=(0.875, 0.9))\nplt.grid(False)","a15aae93":"We actually can see different parts of set with chenged constant stress.\n<br \/>![a classic laboratory earthquake model](https:\/\/i.imgur.com\/moMmVqh.jpg)","2658a709":"# General information\n\nLinks to Raw Acoustic Data for experiment [p4581](https:\/\/psu.box.com\/s\/6c2mkkb8s3qhb74urx18igbk5sg7iius).\n<br \/>Data shared by David Chas Bolton. More information on his personal [site](https:\/\/sites.psu.edu\/chasbolton\/).\n\n<br \/>The .npz files contain the raw continuous time series data, single channel-33 and time to failure. Acoustic data are recorded continuously at 4 MHz throughout the experiment from a 14-bit data acquisition system.","801608c8":"# How load?\n<br>Access to Acoustic Data: ``numpy.load(\"earthquake_*.npz\")['acoustic_data'] ``\n<br>Time between acoustica data by axis = 1: 0.252016890769332e-6\n<br>Time between acoustica data by axis = 0 contained here: ``numpy.load(\"earthquake_*.npz\")['ttf'] ``","ed4074ac":"# Plot std and single event from set\n\nData have various std by time. Its terms of the experiment."}}