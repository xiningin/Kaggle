{"cell_type":{"ddbd12b7":"code","03780a05":"code","aa6bd1dd":"code","d1d5e5ba":"code","efc66651":"code","f4e25383":"code","8705cd95":"code","7e1a96de":"code","9db12f34":"code","4c4c29f9":"markdown","dc81c2cf":"markdown","b2f61318":"markdown","50d07da5":"markdown"},"source":{"ddbd12b7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","03780a05":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain.head()","aa6bd1dd":"test = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest.head()","d1d5e5ba":"x=[]\n\n# changing the cabin and cabinas columns \nfor i in range(len(train['Cabin'])):\n    y = ord(str(train['Cabin'][i])[0])\n   \n    if y==110:\n        train['cabinas'] = 99999\n    \n    else:\n        train['cabinas'] = y \nfor i in range(len(test['Cabin'])):\n    y = ord(str(test['Cabin'][i])[0])\n   \n    if y==110:\n        test['cabinas'] = 99999\n    \n    else:\n        test['cabinas'] = y        ","efc66651":"train_test_data = [train, test] # combining train and test dataset\n\n# changing sex column to integers\nfor dataset in train_test_data:\n    dataset['Sex'] = dataset['Sex'].map( {'female': 1, 'male': 0} ).astype(int)\n    \n# droppig irrelevant features for basic model    \nfeatures_drop = ['PassengerId','Name', 'Fare', 'Ticket','Cabin','Embarked']\n\ntrain = train.drop(features_drop, axis=1)\ntest = test.drop(features_drop, axis=1)\n\ntrain.fillna(0,inplace=True)\ntest.fillna(0,inplace=True)\n\nX = train.drop('Survived', axis=1)\ny = train['Survived']\n\ntrain = train.drop('Survived',axis=1)\ntest = test","f4e25383":"from sklearn.ensemble import RandomForestClassifier","8705cd95":"from sklearn.model_selection import cross_val_score\nclf = RandomForestClassifier(n_estimators=100,n_jobs=5)\nclf.fit(X, y)\nscores = cross_val_score(clf, X, y, cv=5)\nprint('scores_mean = ',scores.mean())","7e1a96de":"y_pred_random_forest = clf.predict(test)","9db12f34":"test_copy = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\nsubmission = pd.DataFrame({\n        'PassengerId': test_copy[\"PassengerId\"],\n        'Survived': y_pred_random_forest\n    })\nsubmission.reset_index(drop=True, inplace=True) \nsubmission.to_csv('submission.csv',index=False)","4c4c29f9":"## Editing the feature columns","dc81c2cf":"## Predicting","b2f61318":"## Training","50d07da5":"## Load data using pandas"}}