{"cell_type":{"7d8eb06c":"code","2a0f2675":"code","ee151e4f":"code","8dc1f514":"code","db4204f0":"code","f9af02cc":"code","c9b6add9":"code","c81bd9e4":"code","06adee18":"code","11d00567":"code","64415663":"code","c21140a1":"code","e5aaf855":"code","8f03d715":"code","6f9c74c1":"code","dac1ad10":"code","0472a787":"code","4b75da22":"code","7fe7b858":"code","6e5e380b":"markdown","69f1454e":"markdown","bac40a6c":"markdown","51f40118":"markdown","734d7ff9":"markdown","e183f1cd":"markdown","a24e9ed7":"markdown","7543d312":"markdown","fb777b2a":"markdown","2b86966a":"markdown","d9ea09b7":"markdown","4cd932af":"markdown","fd5802d8":"markdown","28802388":"markdown"},"source":{"7d8eb06c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport tensorflow as tf","2a0f2675":"img_folder = '..\/input\/cassava-leaf-disease-classification\/train_images\/'\ntrain_df = pd.read_csv('..\/input\/cassava-leaf-disease-classification\/train.csv')\ntrain_df.head()","ee151e4f":"label_count = train_df.label.value_counts()\nplt.figure(figsize=(6, 3))\nsns.set_palette(\"mako\")\nsns.countplot(x=\"label\", data=train_df)\nplt.title('label count')\nprint(f'total images: {train_df.shape[0]}')\nprint(f'class 3 has {label_count[3]\/label_count.sum()*100 :.2f}% of images')","8dc1f514":"cat = [\n    \"Cassava Bacterial Blight (CBB)\",\n    \"Cassava Brown Streak Disease (CBSD)\",\n    \"Cassava Green Mottle (CGM)\",\n    \"Cassava Mosaic Disease (CMD)\",\n    \"Healthy\"\n]","db4204f0":"def getImage(path):\n    img = tf.io.read_file(path)\n    return tf.image.decode_jpeg(img, channels=3)\n    \ndef getImageFromLabel(label, n, seed=3):\n    img_ids = train_df.image_id[train_df.label == label].sample(n,random_state=seed).to_numpy()\n    f = plt.figure(figsize=(25,5))\n    for i,img_id in enumerate(img_ids):\n        ax = f.add_subplot(1,n,i+1)\n        ax.imshow(getImage(img_folder+img_id))\n        ax.set_title(img_id)\n        ax.axis(\"off\")\n    f.suptitle(cat[label], fontsize=24)\n    plt.show()","f9af02cc":"getImageFromLabel(4, 6)","c9b6add9":"getImageFromLabel(0, 6)","c81bd9e4":"getImageFromLabel(1, 6)","06adee18":"getImageFromLabel(2, 6)","11d00567":"getImageFromLabel(3, 6)","64415663":"stats_df = pd.read_csv('..\/input\/cassavaimagestatistics\/train_image_statistics.csv')\n# add label column to the stats\nstats_df = stats_df.merge(train_df, left_on='image_name', right_on='image_id')\nstats_df = stats_df.drop(['image_id'], axis=1)\nstats_df.head()\nstats_df[stats_df.image_mean.duplicated(keep=False)]","c21140a1":"# from stats\npair1 = ['2161216430.jpg','1882441539.jpg']\npair2 = ['895356426.jpg', '1470037662.jpg']\n# from imagehash\npair3 = ['1562043567.jpg', '3551135685.jpg']\npair4 = ['2252529694.jpg', '911861181.jpg']\ndef plotPair(img_ids):\n    f,ax = plt.subplots(1,2,figsize=(10,5))\n    for i,img_id in enumerate(img_ids):\n        label = stats_df.label[stats_df.image_name==img_id].values[0]  # grab the label\n        img = tf.io.read_file(img_folder+img_id)  # read img\n        img = tf.image.decode_jpeg(img)\n        ax[i].imshow(img)\n        ax[i].set_title(f'cat: {label}')\n\nplotPair(pair1)\nplotPair(pair2)\nplotPair(pair3)\nplotPair(pair4)","e5aaf855":"# let's see the stats of duplicate pair3\nstats_df[stats_df.image_name.isin(pair3)]","8f03d715":"# drop pair 3 and one of pair 4\ndrop_img = ['1562043567.jpg', '3551135685.jpg', '2252529694.jpg']\ndrop_df = train_df[train_df.image_id.isin(drop_img)]\ntrain_df2 = train_df.drop(index=drop_df.index)\ntrain_df2.shape","6f9c74c1":"green_imgs = stats_df.sort_values(['mean_green_value'])[:15]\ngreen_imgs = green_imgs[['image_name','label']].to_numpy()\nplt.figure(figsize=(25,12))\nfor i,row in enumerate(green_imgs):\n    plt.subplot(3,5,i+1)\n    img = getImage(img_folder+row[0])\n    plt.imshow(img)\n    plt.title(f'{row[0]}: {row[1]}')\n    plt.axis('off')","dac1ad10":"from sklearn.cluster import KMeans\n\nnum_clusters = 5\nnum_sample = 8\nkmeans = KMeans(n_clusters=num_clusters, \n                random_state=0)\n\nx = stats_df.loc[:, [\"image_mean\", \"image_sd\", \"image_skewness\",\n                     'mean_red_value', 'mean_green_value', \n                     'mean_blue_value']].values\ncluster_labels = kmeans.fit_predict(x)\nstats_df[\"cluster_label\"] = cluster_labels\nstats_df.head()","0472a787":"fig, ax = plt.subplots(num_clusters, num_sample, figsize=(20, 2.5*num_clusters))\n\nfor cluster in range(num_clusters):\n    # grab a sample from the each clusters\n    selection = stats_df[stats_df.cluster_label==cluster].sample(num_sample, random_state=5)\n    # for plotting, get only img_id and label\n    selection = selection[['image_name','label']].to_numpy()\n    m=0\n    for img_id,label in selection:\n        image = getImage(img_folder+img_id)\n        ax[cluster, m].imshow(image)\n        ax[cluster, m].set_title(f'cluster: {cluster}, cat: {label}')\n        ax[cluster, m].axis(\"off\")\n        m+=1\n","4b75da22":"plt.figure(figsize=(12,5))\nsns.scatterplot(data=stats_df,\n                x=stats_df.image_mean.values,\n                y=stats_df.image_sd.values,\n                hue=stats_df.cluster_label,\n                palette='bright')\nplt.xlabel('mean')\nplt.ylabel('std')\nplt.title('Clustering based on K-means')\nplt.show()","7fe7b858":"# scatterplot based on labels\nplt.figure(figsize=(12,5))\nsns.scatterplot(data=stats_df,\n                x=stats_df.image_mean.values,\n                y=stats_df.image_sd.values,\n                hue=stats_df.label,\n                palette='bright')\nplt.xlabel('mean')\nplt.ylabel('std')\nplt.title('Clustering from labels')\nplt.show()","6e5e380b":"## Cat 3: CMD\nquick obs: yellow area around the base, spreading along the midrib, largest category in the dataset","69f1454e":"# Read the CSV","bac40a6c":"## Cat 4: Healthy\nquick obs: green color looks fresh, not much color variance of the blades","51f40118":"## Cat 1: CBSD\nquick obs: yellow patches and stripes on the leaves","734d7ff9":"# On progress..","e183f1cd":"## Cat 0: CBB\nquick obs: some yellow areas near the end, brownish spots","a24e9ed7":"## Cat 2: CGM\nquick obs: almost similar like cat 1, but with thinner patterns along the veins","7543d312":"- looks like some images from category 1 has focus on the cassava roots instead of the leaves\n- these images have a lot of dark areas. this makes sense, since dark pixel have values near 0\n- dark areas are either because of night time, or strong shadows in a bright day","fb777b2a":"# Duplicates?\n* pair 3 and 4 definitely are duplicates. they're same images but their pixel statistics are not exactly the same\n* pair 1 and 2 is unlikely, although they weirdly has the same pixel mean\n* interestingly in pair 3, both have different class, so which one should we trust? better just drop both IMO","2b86966a":"# Image statistics\n* created by Aditya [[source](https:\/\/www.kaggle.com\/fireheart7\/cassavaimagestatistics)]\n* found duplicate images using imageHash [[source](https:\/\/www.kaggle.com\/nakajima\/duplicate-train-images)]\n","d9ea09b7":"# Clustering based on statistics\nusing K-means, inspired by this [awesome notebook](https:\/\/www.kaggle.com\/allunia\/don-t-turn-into-a-smoothie-image-statistics)","4cd932af":"# Viewing leaves\n![image.png](attachment:image.png)\nleaf structure, source: [The Leaf: Site of Photosynthesis & Transpiration](http:\/\/www.bio.miami.edu\/dana\/dox\/leaf.html)\n\nas confirmed by others, all images have res of 800x600 (wxh)","fd5802d8":"given only label category, this would be a simple multi-class classification task<br>\nways of improving would be:\n- augmentation\n- external dataset\n- balancing the dataset (currently bias to class 3)","28802388":"## Least green images\nsince it's about leaves, what if we plot images that have the least amount of 'green'"}}