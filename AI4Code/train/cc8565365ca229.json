{"cell_type":{"37d68150":"code","ee360ec6":"code","ab13f1d5":"code","bdd210b8":"code","0aaf5bcc":"code","e775cb54":"code","c1f273a8":"code","2546cc1d":"code","77c1dc42":"code","ff63a222":"code","f9faa8e4":"code","60e6dc5f":"code","8a37d8c8":"code","855603c3":"code","bb9c3170":"code","ace8eaaa":"code","1abca0f0":"code","8eb80fe3":"code","22d0d346":"code","fbec487b":"code","3e86c2ba":"code","2369af3e":"code","b36965a8":"code","11234bd3":"code","b0d91c7b":"code","c77d5de5":"code","394982b4":"code","aed7e81d":"code","f6bb9b88":"code","cf82bb7e":"code","468f7442":"code","d47fc451":"code","c4e19d1e":"code","1a379362":"code","a15a08c0":"code","4d465e2e":"code","20876b84":"code","86d725b3":"code","5c8c0e69":"code","f3b03fb8":"markdown","febed305":"markdown","79a9f453":"markdown","3ab2dfe0":"markdown","ca8611c1":"markdown","b3a172cb":"markdown","596750ec":"markdown","e4b9df07":"markdown","7465e5b5":"markdown","3e9d0ec9":"markdown","a0aa6270":"markdown","bfe39083":"markdown","ac944543":"markdown","21dd2e34":"markdown","80c3fc9a":"markdown","f257bc08":"markdown"},"source":{"37d68150":"import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport keras","ee360ec6":"(X_train,y_train),(X_test,y_test) = keras.datasets.fashion_mnist.load_data()","ab13f1d5":"X_train.shape","bdd210b8":"y_train.shape","0aaf5bcc":"X_test.shape","e775cb54":"y_test.shape","c1f273a8":"X_train","2546cc1d":"X_train[0]","77c1dc42":"y_train[0]","ff63a222":"class_labels = [\"T-shirt\/top\",\n                \"Trouser\",\n                \"Pullover\",\n                \"Dress\",\n                \"Coat\",\n                \"Sandal\",\n                \"Shirt\",\n                \"Sneaker\",\n                \"Bag\",\n                \"Ankle boot\"]","f9faa8e4":"plt.imshow(X_train[5])","60e6dc5f":"plt.imshow(X_train[5],cmap=\"gray\")","8a37d8c8":"y_train[5]","855603c3":"plt.figure(figsize=(20,60))\n\nj=1\nfor i in np.random.randint(0,1000,100):\n  plt.subplot(20,5,j)\n  j+=1\n  plt.imshow(X_train[i],cmap=\"gray\")\n  plt.axis(\"off\")\n  plt.title(str(class_labels[y_train[i]])+\"\/\"+str(y_train[i]))","bb9c3170":"X_train.shape","ace8eaaa":"X_train.ndim","1abca0f0":"X_train = np.expand_dims(X_train,-1)\nX_test = np.expand_dims(X_test,-1)","8eb80fe3":"X_train.shape","22d0d346":"X_train.ndim","fbec487b":"X_train = X_train\/255\nX_test = X_test\/255","3e86c2ba":"X_train[0]","2369af3e":"from sklearn.model_selection import train_test_split\nX_train,X_val,y_train,y_val = train_test_split(X_train,y_train,test_size=0.2,random_state=2020)","b36965a8":"X_train.shape,y_train .shape","11234bd3":"X_val.shape,y_val.shape","b0d91c7b":"model = keras.models.Sequential([\n                         keras.layers.Conv2D(filters=64,\n                                             kernel_size=3,\n                                             strides=(1,1),\n                                             padding=\"valid\",\n                                             activation=\"relu\",\n                                             input_shape=[28,28,1]),\n                         keras.layers.MaxPooling2D(pool_size=(2,2)),\n\n                         keras.layers.Conv2D(filters=128,\n                                             kernel_size=3,\n                                             strides=(2,2),\n                                             padding=\"same\",\n                                             activation=\"relu\",\n                                             input_shape=[28,28,1]),\n                         keras.layers.MaxPooling2D(pool_size=(2,2)),\n\n                         keras.layers.Flatten(),\n\n                         keras.layers.Dense(units=128, activation=\"relu\"),\n                         keras.layers.Dropout(0.25),\n                         keras.layers.Dense(units=256, activation=\"relu\"),\n                         keras.layers.Dropout(0.5),\n                         keras.layers.Dense(units=256, activation=\"relu\"),\n                         keras.layers.Dropout(0.25),\n                         keras.layers.Dense(units=128, activation=\"relu\"),\n                         keras.layers.Dropout(0.10),\n\n                         keras.layers.Dense(units=10, activation=\"softmax\")\n])","c77d5de5":"model.summary()","394982b4":"model.compile(optimizer=\"adam\",loss=\"sparse_categorical_crossentropy\",metrics=[\"accuracy\"])","aed7e81d":"X_train.shape","f6bb9b88":"X_val.shape,y_val.shape","cf82bb7e":"model_hist = model.fit(X_train,y_train,\n          epochs=30,\n          batch_size=25,\n          validation_data=(X_val,y_val))","468f7442":"X_test.shape","d47fc451":"model.predict(np.expand_dims(X_test[0], axis=0)).round(2)","c4e19d1e":"np.argmax(model.predict(np.expand_dims(X_test[0], axis=0)).round(2))","1a379362":"y_pred = model.predict(X_test).round(2)\ny_pred","a15a08c0":"score = model.evaluate(X_test,y_test)\nscore","4d465e2e":"score[1]*100","20876b84":"plt.plot(model_hist.history[\"accuracy\"])\nplt.plot(model_hist.history[\"val_accuracy\"])\nplt.title(\"model accuracy\")\nplt.ylabel(\"accuracy\")\nplt.xlabel(\"epoch\")\nplt.legend([\"train\", \"test\"], loc=\"upper left\")\nplt.show()","86d725b3":"plt.plot(model_hist.history[\"loss\"])\nplt.plot(model_hist.history[\"val_loss\"])\nplt.title(\"model accuracy\")\nplt.ylabel(\"accuracy\")\nplt.xlabel(\"epoch\")\nplt.legend([\"train\", \"test\"], loc=\"upper left\")\nplt.show()","5c8c0e69":"from sklearn.metrics import confusion_matrix\n\nplt.figure(figsize=(16,9))\ny_pred_labels = [np.argmax(label) for label in y_pred]\ncm = confusion_matrix(y_test, y_pred_labels)\n\nsns.heatmap(cm, annot=True, fmt=\"d\", xticklabels=class_labels, yticklabels=class_labels)","f3b03fb8":"### all image predict","febed305":"## Split Data set","79a9f453":"## Change Dimension","3ab2dfe0":"### loss","ca8611c1":"### all image","b3a172cb":"## Hist Plot","596750ec":"## All Classes","e4b9df07":"### accuracy","7465e5b5":"## Import Library","3e9d0ec9":"## Show Image","a0aa6270":"## Test CNN model","bfe39083":"## Load Dataset","ac944543":"## Feature Scaling","21dd2e34":"## Confusion Matrix","80c3fc9a":"### evaluate model","f257bc08":"## Convolution Neural Network"}}