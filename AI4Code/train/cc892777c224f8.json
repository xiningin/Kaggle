{"cell_type":{"cf8cda53":"code","afb81941":"code","cd2c873c":"code","71040f69":"code","7112da64":"code","0d80ff84":"code","091bba59":"code","c63b0371":"code","9bf997c7":"code","ed5b3ddf":"code","03607e2a":"code","b8cf889a":"code","5f3da0cb":"code","701adb73":"code","b6e1446b":"code","54684e2d":"code","befeb5b4":"code","d4e1e7df":"code","a52d2d56":"code","727cef48":"code","809a11a5":"code","af9183fa":"code","303f5349":"code","9d60f9f9":"code","12162cf2":"code","9bec8ad3":"code","bf1e4ddd":"code","de9497c5":"code","64b016de":"code","2a8bb4a3":"code","e315bf45":"code","c153f69a":"code","af9ef727":"code","816295a2":"code","fde5c4f9":"code","c6b91a82":"code","271d0c98":"code","f60fe265":"markdown","69d093a0":"markdown","046a50af":"markdown"},"source":{"cf8cda53":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import precision_score,recall_score\nfrom sklearn.feature_selection import RFECV","afb81941":"original = pd.read_csv('\/kaggle\/input\/company-bankruptcy-prediction\/data.csv')\noriginal.head()","cd2c873c":"y = original['Bankrupt?']","71040f69":"original = original.drop(['Bankrupt?'], axis=1)","7112da64":"X_train, X_test, y_train, y_test = train_test_split(original,y, test_size=0.33,stratify=y,random_state=42)","0d80ff84":"os = SMOTE()","091bba59":"columns = X_train.columns","c63b0371":"os_data_X,os_data_y=os.fit_resample(X_train, y_train)","9bf997c7":"X_train = pd.DataFrame(data=os_data_X,columns=columns )","ed5b3ddf":"y_train = pd.DataFrame(data=os_data_y,columns=['y'])","03607e2a":"y_train = os_data_y","b8cf889a":"parameters = {'criterion':['entropy'], 'max_depth':range(11,17),'n_estimators':range(9,12),'class_weight':['balanced',None] }","5f3da0cb":"clf_rf = RandomForestClassifier(random_state=42)","701adb73":"grid_search_cv_clf = GridSearchCV(clf_rf,parameters,cv=5, scoring='f1')","b6e1446b":"grid_search_cv_clf.fit(X_train,y_train)","54684e2d":"grid_search_cv_clf.best_params_","befeb5b4":"y_pred = grid_search_cv_clf.predict(X_test)","d4e1e7df":"recall = recall_score(y_test,y_pred)","a52d2d56":"precision = precision_score(y_test,y_pred)","727cef48":"F1 = 2 * (precision * recall) \/ (precision + recall)","809a11a5":"precision","af9183fa":"recall","303f5349":"F1","9d60f9f9":"clf_rf = RandomForestClassifier(**grid_search_cv_clf.best_params_,random_state=42)","12162cf2":"cv_selector = RFECV(clf_rf,cv= 5, step=1,scoring='f1')","9bec8ad3":"cv_selector = cv_selector.fit(X_train, y_train)","bf1e4ddd":"rfecv_mask = cv_selector.get_support()","de9497c5":"rfecv_features = [] \nfor bool, feature in zip(rfecv_mask, X_train.columns):\n if bool:\n     rfecv_features.append(feature)","64b016de":"X_train_ref = X_train[rfecv_features]","2a8bb4a3":"clf_rf.fit(X_train_ref,y_train)","e315bf45":"y_pred = clf_rf.predict(X_test[rfecv_features])","c153f69a":"recall = recall_score(y_test,y_pred)","af9ef727":"precision = precision_score(y_test,y_pred)","816295a2":"F1 = 2 * (precision * recall) \/ (precision + recall)","fde5c4f9":"recall","c6b91a82":"precision","271d0c98":"F1","f60fe265":"1. I'm a beginner and it is my first public notebook here\n2. It is a very basic approach with RandomForest and SMOTE resampling. I will try to improve my work with some kinds of feature engineering later.\n3. F1 score is about 42% and it is the best until now. Other notebooks with F1=99% are examples of incorrect validation techniques.\n4. I will add some comments later","69d093a0":"RFE","046a50af":"RFE didn't improve the model quality  a lot :("}}