{"cell_type":{"c5446e30":"code","5ad0486e":"code","8a97213f":"code","e80d75e5":"code","28dfb5de":"code","854498d5":"code","0f3998a9":"code","783cce03":"code","257b4469":"code","02d6cf2a":"code","977cee84":"code","eff2153c":"code","fdee4de8":"code","77f87add":"code","7510239e":"code","17b328cc":"code","1f0c1d9a":"code","cd52dfef":"code","ed288f37":"code","3e31e3fc":"code","8bddafbd":"code","5c636017":"code","42c29c8b":"code","78fc2fb3":"code","c9f3488e":"code","fdfaf395":"code","3605455d":"code","1aec69df":"code","22aa07cd":"code","00af74d7":"code","a6a56177":"code","404dad36":"code","3bbdae37":"code","3974a39a":"code","1c854c3c":"code","63701009":"code","bd9ecb2e":"code","39284a3e":"code","7fc2b5d5":"code","698869aa":"markdown","34cb5c68":"markdown","c9fede5f":"markdown","f91ed706":"markdown","cf311c3e":"markdown","f3a21621":"markdown","73054efd":"markdown","bc666911":"markdown","3c4209dd":"markdown","fa817e7e":"markdown","3c81af11":"markdown","0d06bb90":"markdown","738b0433":"markdown","0104b113":"markdown","eb3be7d3":"markdown","9237ce6b":"markdown","d6f9195e":"markdown","a72210e6":"markdown","e0032468":"markdown","dcbbbec5":"markdown"},"source":{"c5446e30":"import warnings\nwarnings.filterwarnings('ignore')","5ad0486e":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","8a97213f":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e80d75e5":"plant_1_sensor = pd.read_csv(\"\/kaggle\/input\/solar-power-generation-data\/Plant_1_Weather_Sensor_Data.csv\")\nplant_2_sensor = pd.read_csv(\"\/kaggle\/input\/solar-power-generation-data\/Plant_2_Weather_Sensor_Data.csv\")\nplant_1_generation = pd.read_csv(\"\/kaggle\/input\/solar-power-generation-data\/Plant_1_Generation_Data.csv\")\nplant_2_generation = pd.read_csv(\"\/kaggle\/input\/solar-power-generation-data\/Plant_2_Generation_Data.csv\")","28dfb5de":"print(plant_1_sensor.shape,plant_1_generation.shape,plant_2_sensor.shape,plant_2_generation.shape)","854498d5":"plant_1_sensor.head()","0f3998a9":"plant_1_generation.head()","783cce03":"plant_2_sensor.head()","257b4469":"plant_2_generation[plant_2_generation.DC_POWER > 1000]","02d6cf2a":"print(\"*******************Plant_1_Sensor*****************\")\nprint(plant_1_sensor.nunique()\/plant_1_sensor.shape[0]*100)\nprint(\"*******************Plant_1_Generation*****************\")\nprint(plant_1_generation.nunique()\/plant_1_generation.shape[0]*100)\nprint(\"*******************Plant_2_Sensor*****************\")\nprint(plant_2_sensor.nunique()\/plant_2_sensor.shape[0]*100)\nprint(\"*******************Plant_2_Generation*****************\")\nprint(plant_2_generation.nunique()\/plant_2_generation.shape[0]*100)","977cee84":"print(plant_1_sensor.info())\nprint(plant_1_generation.info())\nprint(plant_2_sensor.info())\nprint(plant_2_generation.info())","eff2153c":"from datetime import datetime","fdee4de8":"plant_1_generation['DATE'] = [datetime.strftime(i,format=\"%d-%m-%Y\") for i in pd.to_datetime(plant_1_generation.DATE_TIME)]\nplant_1_generation['DATE'] = pd.to_datetime(plant_1_generation['DATE'])","77f87add":"plant_2_generation['DATE'] = [datetime.strftime(i,format=\"%Y-%m-%d\") for i in pd.to_datetime(plant_2_generation.DATE_TIME)]\nplant_2_generation['DATE'] = pd.to_datetime(plant_2_generation['DATE'])","7510239e":"plant_1_sensor['DATE'] = [datetime.strftime(i,format=\"%Y-%m-%d\") for i in pd.to_datetime(plant_1_sensor.DATE_TIME)]\nplant_1_sensor['DATE'] = pd.to_datetime(plant_1_sensor['DATE'])","17b328cc":"plant_2_sensor['DATE'] = [datetime.strftime(i,format=\"%Y-%m-%d\") for i in pd.to_datetime(plant_2_sensor.DATE_TIME)]\nplant_2_sensor['DATE'] = pd.to_datetime(plant_2_sensor['DATE'])","1f0c1d9a":"plant_1_generation['YEAR'] = [datetime.strftime(i,format=\"%Y\") for i in plant_1_generation.DATE]\nplant_1_generation['MONTH'] = [datetime.strftime(i,format=\"%m\") for i in plant_1_generation.DATE]\nplant_1_generation['DAY'] = [datetime.strftime(i,format=\"%d\") for i in plant_1_generation.DATE]","cd52dfef":"plant_2_generation['YEAR'] = [datetime.strftime(i,format=\"%Y\") for i in plant_2_generation.DATE]\nplant_2_generation['MONTH'] = [datetime.strftime(i,format=\"%m\") for i in plant_2_generation.DATE]\nplant_2_generation['DAY'] = [datetime.strftime(i,format=\"%d\") for i in plant_2_generation.DATE]","ed288f37":"plant_1_sensor['YEAR'] = [datetime.strftime(i,format=\"%Y\") for i in plant_1_sensor.DATE]\nplant_1_sensor['MONTH'] = [datetime.strftime(i,format=\"%m\") for i in plant_1_sensor.DATE]\nplant_1_sensor['DAY'] = [datetime.strftime(i,format=\"%d\") for i in plant_1_sensor.DATE]","3e31e3fc":"plant_2_sensor['YEAR'] = [datetime.strftime(i,format=\"%Y\") for i in plant_2_sensor.DATE]\nplant_2_sensor['MONTH'] = [datetime.strftime(i,format=\"%m\") for i in plant_2_sensor.DATE]\nplant_2_sensor['DAY'] = [datetime.strftime(i,format=\"%d\") for i in plant_2_sensor.DATE]","8bddafbd":"sns.set_style('whitegrid')\nplt.figure(figsize=(14,8))\nfig=sns.lineplot(data=plant_1_generation,x='DATE',y='DAILY_YIELD',ci=None)\nfig.set_title('Plant 1 Daily Power Generation')\nplt.show()","5c636017":"sns.set_style('whitegrid')\nplt.figure(figsize=(16,8))\nsns.lineplot(data=plant_2_generation,x='DATE',y='DAILY_YIELD',ci=None)\nplt.title('Plant 2 Daily Power Generation')\nplt.show()","42c29c8b":"plant_1_daily_yield_mean = plant_1_generation.groupby(['DATE']).DAILY_YIELD.sum().mean() \nplant_2_daily_yield_mean = plant_2_generation.groupby(['DATE']).DAILY_YIELD.sum().mean()","78fc2fb3":"print(plant_1_daily_yield_mean,plant_2_daily_yield_mean)","c9f3488e":"sns.set_style('darkgrid')\nplt.figure(figsize=(10,6))\nplt.bar(x=['Plant_1','Plant_2'],height=[plant_1_daily_yield_mean,plant_2_daily_yield_mean],color=[\"green\",\"blue\"])\nfor i,j in enumerate([plant_1_daily_yield_mean,plant_2_daily_yield_mean]):\n    plt.text(i-0.2,j+100000,str(j))\nplt.title(\"mean value of daily yield\")\nplt.yticks(range(0,8000001,1000000))\nplt.show()","fdfaf395":"plant_1_irradiation = plant_1_sensor.groupby(['DATE']).IRRADIATION.sum()\nplant_2_irradiation = plant_2_sensor.groupby(['DATE']).IRRADIATION.sum()","3605455d":"pd.DataFrame({'Date':plant_1_irradiation.index,'Plant_1_Daily_Irradiation':plant_1_irradiation.values,'Plant_2_Daily_Irradiation':plant_2_irradiation.values})","1aec69df":"max_amb_modu_temp =pd.DataFrame({'Max_Ambient':[plant_1_sensor.AMBIENT_TEMPERATURE.max(),plant_2_sensor.AMBIENT_TEMPERATURE.max()],\n                                 'Max_Module':[plant_1_sensor.MODULE_TEMPERATURE.max(),plant_2_sensor.MODULE_TEMPERATURE.max()]},index=['Plant_1','Plant_2'])\nmax_amb_modu_temp","22aa07cd":"print(\"No. of inverters in Plant_1 : \",len(plant_1_generation.SOURCE_KEY.value_counts()))\nprint(\"No. of inverters in Plant_2 : \",len(plant_2_generation.SOURCE_KEY.value_counts()))","00af74d7":"pd.DataFrame({'DC_Power_Max':plant_1_generation.groupby(['DATE']).DC_POWER.max().values,'DC_Power_Min':plant_1_generation.groupby(['DATE']).DC_POWER.min().values,\n              'AC_Power_Max':plant_1_generation.groupby(['DATE']).AC_POWER.max().values,'AC_Power_Min':plant_1_generation.groupby(['DATE']).AC_POWER.min().values},\n             index=plant_1_generation.groupby(['DATE']).DC_POWER.max().index)","a6a56177":"pd.DataFrame({'DC_Power_Max':plant_2_generation.groupby(['DATE']).DC_POWER.max().values,'DC_Power_Min':plant_2_generation.groupby(['DATE']).DC_POWER.min().values,\n              'AC_Power_Max':plant_2_generation.groupby(['DATE']).AC_POWER.max().values,'AC_Power_Min':plant_2_generation.groupby(['DATE']).AC_POWER.min().values},\n             index=plant_2_generation.groupby(['DATE']).DC_POWER.max().index)","404dad36":"dc_ac =pd.DataFrame({'Inverter_Source_Key':[plant_1_generation.groupby(['SOURCE_KEY']).DC_POWER.sum().sort_values(ascending=False).index[0],\n                    plant_2_generation.groupby(['SOURCE_KEY']).DC_POWER.sum().sort_values(ascending=False).index[0]],\n                    'Max_DC':[plant_1_generation.groupby(['SOURCE_KEY']).DC_POWER.sum().max(),plant_2_generation.groupby(['SOURCE_KEY']).DC_POWER.sum().max()],\n                        'Max_AC':[plant_1_generation.groupby(['SOURCE_KEY']).AC_POWER.sum().max(),plant_2_generation.groupby(['SOURCE_KEY']).AC_POWER.sum().max()],\n                     },index=['Plant_1','Plant_2'])\ndc_ac","3bbdae37":"index_dc_p1 = plant_1_generation.groupby(['SOURCE_KEY']).DC_POWER.sum().sort_values(ascending=False).index\nindex_ac_p1 = plant_1_generation.groupby(['SOURCE_KEY']).AC_POWER.sum().sort_values(ascending=False).index","3974a39a":"#Reason to create this is so that we can create a single dataframe for both AC and DC production ranking.\n#Through this we can give excat rating to each inverter w.r.t their production.\n\nac_dict_p1 = dict() \nfor i,j in zip(index_dc_p1,range(1,23,1)):\n    ac_dict_p1[i] = j\nac_pr_per_dc_rank = []\nfor i in index_dc_p1:\n    ac_pr_per_dc_rank.append(ac_dict_p1[i])\nac_pr_per_dc_rank","1c854c3c":"plant_1_dc_ac_rank = pd.DataFrame({'Plant_1_Inverter_Source_Key':index_dc_p1,'DC_Production_Rank':range(1,23,1),'AC_Production_Rank':ac_pr_per_dc_rank})\nplant_1_dc_ac_rank","63701009":"index_dc_p2 = plant_2_generation.groupby(['SOURCE_KEY']).DC_POWER.sum().sort_values(ascending=False).index\nindex_ac_p2 = plant_2_generation.groupby(['SOURCE_KEY']).AC_POWER.sum().sort_values(ascending=False).index","bd9ecb2e":"ac_dict_p2 = dict()\nfor i,j in zip(index_dc_p2,range(1,23,1)):\n    ac_dict_p2[i] = j\nac_pr_per_dc_rank_p2 = []\nfor i in index_dc_p2:\n    ac_pr_per_dc_rank_p2.append(ac_dict_p2[i])\nac_pr_per_dc_rank_p2","39284a3e":"plant_2_dc_ac_rank = pd.DataFrame({'Plant_2_Inverter_Source_Key':index_dc_p2,'DC_Production_Rank':range(1,23,1),'AC_Production_Rank':ac_pr_per_dc_rank_p2})\nplant_2_dc_ac_rank","7fc2b5d5":"print(\"*******************Plant_1_Sensor*****************\")\nprint(plant_1_sensor.isna().sum()\/plant_1_sensor.shape[0]*100)\nprint(\"*******************Plant_1_Generation*****************\")\nprint(plant_1_generation.isna().sum()\/plant_1_generation.shape[0]*100)\nprint(\"*******************Plant_2_Sensor*****************\")\nprint(plant_2_sensor.isna().sum()\/plant_2_sensor.shape[0]*100)\nprint(\"*******************Plant_2_Generation*****************\")\nprint(plant_2_generation.isna().sum()\/plant_2_generation.shape[0]*100)","698869aa":"# Q7. Is there any missing data?\n\n>We will see percentage of Missing or NaN in each column of each dataframe","34cb5c68":"# Plant_1","c9fede5f":"<h3>Conclusion : So plant 1 is generating more power than plant 2<\/h3>","f91ed706":"# Plant_1_Min_Max","cf311c3e":"# Q4. What is the maximum\/minimum amount of DC\/AC Power generated in a time interval\/day?","f3a21621":"**In our dataset `DATE_TIME` is of object type. So we will convert it to datetime type. We will also extract date part from timestamp data.**\n\n**cell 14 to cell 17**","73054efd":"# Q2. What is the total irradiation per day?\n\n**steps :**\n\n> Group by DAY\n\n>Calculate aggregate sum of each day\n\n>create dataframe for better formating","bc666911":"# Plant_2_Min_Max","3c4209dd":"**In the next few lines we will work with datetime**","fa817e7e":"<h3>Please give your valuable suggestion so that i can make it more useful.<\/h3>\n\n<h3>If you Liked this notebook then don't forget to upvote it. It will motivate me to do more works like this in future.<\/h3>\n\n# Thank You :)","3c81af11":"<h3>This notebook is regarding a task assosiate with the data used in this notebook<\/h3>\n\n**In this task we have to do some descriptive statistics based on following questions:**\n\n1. What is the mean value of daily yield?\n2. What is the total irradiation per day?\n3. What is the max ambient and module temperature?\n4. How many inverters are there for each plant?\n5. What is the maximum\/minimum amount of DC\/AC Power generated in a time interval\/day?\n6. Which inverter (source_key) has produced maximum DC\/AC power?\n7. Rank the inverters based on the DC\/AC power they produce\n8. Is there any missing data?\n\n**You can more learn more about this task @** https:\/\/www.kaggle.com\/anikannal\/solar-power-generation-data\/tasks?taskId=1749","0d06bb90":"**Checking percentage of unique values in all 4 datasets**","738b0433":"# Plant_2\n\n**We will do same process for plant_2**","0104b113":"<h3>Now we will solve actual questions mentioned in task :)<\/h3>","eb3be7d3":"# Q5. Which inverter (source_key) has produced maximum DC\/AC power?\n\n**steps :**\n\n>In a data frame create 3 key-value pairs of Max_DC,Mac_AC, and the source key of those inverters which are generating these outputs.\n\n>Group data by Source_Key and find aggregate sum and then find maximum values by sorting them in descending order.","9237ce6b":"# Q3. What is the max ambient and module temperature?","d6f9195e":"# Q4. How many inverters are there for each plant?\n\n>Source key is a unique key for each inverter used in power plant","a72210e6":"# Q1. What is the mean value of daily yield?\n\n\n**steps**\n\n>Group data by `each_day`\n\n>calculate sum of each day yield\n\n>at last calculate mean","e0032468":"# Q6. Rank the inverters based on the DC\/AC power they produce ","dcbbbec5":"**Extracting `Year`,`Month`,`Day` from `DATE` Column and creating 3 new features. This will help us to solve some questions related to daily production or rate.**\n\n**cell 18 to cell 21**"}}