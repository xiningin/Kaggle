{"cell_type":{"da633407":"code","64a3fa34":"code","60d2f158":"code","422da153":"code","649c8834":"code","98099157":"code","bf67c681":"code","02748383":"code","4e73cf3c":"code","1e05234d":"code","9562a68d":"code","8b3765b3":"code","7318d63e":"code","3622db06":"code","ad2249ac":"code","42a32129":"code","5b97ca04":"code","d582c97f":"code","2c5dad25":"code","981abf25":"code","04b391ef":"code","de3160f4":"code","87d89d6b":"code","e48ffd86":"code","9c995556":"code","ab94de66":"code","cc4c3b22":"code","c4f4e6f4":"code","32977e5b":"code","29539b18":"code","40606de5":"markdown","50b8b62d":"markdown","367c58b6":"markdown","1d67e3d8":"markdown","2a73007e":"markdown","3d6904a3":"markdown","21434119":"markdown","592fb04d":"markdown","be0daea7":"markdown","62f0ea2f":"markdown","f919025c":"markdown","dc6b53ca":"markdown"},"source":{"da633407":"!pip install squarify","64a3fa34":"import os\nimport squarify\nimport warnings\nimport matplotlib\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud\nfrom mlxtend.frequent_patterns import apriori, association_rules\nfrom mlxtend.preprocessing import TransactionEncoder\nfrom mlxtend.frequent_patterns import association_rules\n\nplt.style.use('ggplot')\nwarnings.filterwarnings(\"ignore\")","60d2f158":"df = pd.read_csv('\/kaggle\/input\/market-basket-optimization\/Market_Basket_Optimisation.csv', header = None)\nprint(\"==============================\")\nprint(\"SHAPE OF DATAFRAME: \"+str(df.shape))\nprint(\"==============================\")\ndf.head(10)","422da153":"print(\"===================\")\nprint(\"DESCRIPTION OF DATA\")\nprint(\"===================\")\ndf.describe()","649c8834":"len(df[0].unique())","98099157":"print(\"=========\")\nprint(\"WORDCLOUD\")\nprint(\"=========\")\nprint(\"\")\n\nplt.figure(figsize=(30,30))\nwordcloud = WordCloud(background_color = \"black\",width=1920,height=1080).generate(str(df[0]))\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.title(\"FREQUENTLY BOUGHT ITEMS\",fontsize = 40)\nplt.show()","bf67c681":"print(\"==============\")\nprint(\"FREQUENCY PLOT\")\nprint(\"==============\")\nprint(\"\")\n\ncounts = df[0].value_counts().head(50)\nlab = list(counts.index)\nval = list(counts.values)\nlabel_index_org = np.array(lab)\nlabel_values_org = np.array(val)\n\nplt.figure(figsize=(10,7))\nsns.barplot(label_index_org,label_values_org)\nplt.xlabel('Items')\nplt.ylabel('Frequency')\nplt.xticks(rotation=90)\nplt.title('FREQUECY OF MOST POPULAR ITEMS', fontsize=20)\nplt.show()","02748383":"norm = matplotlib.colors.Normalize(vmin=min(val), vmax=max(val))\ncolors = [matplotlib.cm.Blues(norm(v)) for v in val]\nplt.figure(figsize=(15,10))\nsquarify.plot(sizes=val, label=lab, color=colors)\nplt.title('TREE MAP OF POPULAR ITEMS', fontsize=20)\nplt.axis('off')\nplt.show()","4e73cf3c":"transactions_list = []\n\nfor i in range(0, 7501): transactions_list.append([str(df.values[i,j]) for j in range(0, 20)])\ntransactions_array = np.array(transactions_list)\n\nprint(\"======================================\")\nprint(\"SHAPE OF TRANSACTION ARRAY: \"+str(transactions_array.shape))\nprint(\"======================================\")","1e05234d":"te = TransactionEncoder()\n\ntransactions_data = te.fit_transform(transactions_array)\ntransactions_data = pd.DataFrame(transactions_data, columns=te.columns_)\ntransactions_data.replace(np.nan, False)\n\nprint(\"===========================================\")\nprint(\"SHAPE OF TRANSACTION DATAFRAME: \"+str(transactions_data.shape))\nprint(\"===========================================\")","9562a68d":"print(\"=========================\")\nprint(\"THE TRANSACTION DATAFRAME\")\nprint(\"=========================\")\nprint(\"\")\ntransactions_data.head(10)","8b3765b3":"truncated_transactions_data = transactions_data.iloc[:, :50]\ntruncated_transactions_data.shape\n\nprint(\"====================================================\")\nprint(\"SHAPE OF TRUNCATED TRANSACTION DATAFRAME: \"+str(truncated_transactions_data.shape))\nprint(\"====================================================\")","7318d63e":"print(\"====================================\")\nprint(\"THE TRUNCATED TRANSACTION DATAFRAME:\")\nprint(\"====================================\")\nprint(\"\")\ntruncated_transactions_data.head(10)","3622db06":"frequent_itemsets_from_truncated_dataframe = apriori(truncated_transactions_data, min_support=0.01, use_colnames=True)\nfrequent_itemsets_from_truncated_dataframe['Length of Itemset'] = frequent_itemsets_from_truncated_dataframe['itemsets'].apply(lambda x: len(x))\n\nprint(\"==========================================\")\nprint(\"RULES FROM TRUNCATED TRANSACTION DATAFRAME\")\nprint(\"==========================================\")\nprint(\"\")\nfrequent_itemsets_from_truncated_dataframe","ad2249ac":"print(\"========================================================================\")\nprint(\"TOTAL NUMBER OF RULES GENERATED FROM TRUNCATED TRANSACTION DATAFRAME: \" + str(frequent_itemsets_from_truncated_dataframe.shape[0]))\nprint(\"========================================================================\")","42a32129":"frequent_itemsets_from_complete_dataframe = apriori(transactions_data, min_support=0.01, use_colnames=True)\nfrequent_itemsets_from_complete_dataframe['Length of Itemset'] = frequent_itemsets_from_complete_dataframe['itemsets'].apply(lambda x: len(x))\n\nprint(\"=====================================================\")\nprint(\"FREQUENT ITEMSETS FROM COMPLETE TRANSACTION DATAFRAME\")\nprint(\"=====================================================\")\nprint(\"\")\nfrequent_itemsets_from_complete_dataframe","5b97ca04":"print(\"====================================================================================\")\nprint(\"TOTAL NUMBER OF FREQUENT ITEMSETS GENERATED FROM COMPLETE TRANSACTION DATAFRAME: \" + str(frequent_itemsets_from_complete_dataframe.shape[0]))\nprint(\"====================================================================================\")","d582c97f":"frequent_itemsets_with_len_1 = frequent_itemsets_from_complete_dataframe[frequent_itemsets_from_complete_dataframe['Length of Itemset'] == 1]\n\nprint(\"===============================\")\nprint(\"FREQUENT ITEMSETS WITH ONE ITEM\")\nprint(\"===============================\")\nprint(\"\")\nfrequent_itemsets_with_len_1","2c5dad25":"print(\"===================================================\")\nprint(\"TOTAL NUMBER OF FREQUENT ITEMSETS WITH ONE ITEM: \" + str(frequent_itemsets_with_len_1.shape[0]))\nprint(\"===================================================\")","981abf25":"frequent_itemsets_with_len_2 = frequent_itemsets_from_complete_dataframe[frequent_itemsets_from_complete_dataframe['Length of Itemset'] == 2]\n\nprint(\"================================\")\nprint(\"FREQUENT ITEMSETS WITH TWO ITEMS\")\nprint(\"================================\")\nprint(\"\")\nfrequent_itemsets_with_len_2","04b391ef":"print(\"=====================================================\")\nprint(\"TOTAL NUMBER OF FREQUENT ITEMSETS WITH TWO ITEMS: \" + str(frequent_itemsets_with_len_2.shape[0]))\nprint(\"=====================================================\")","de3160f4":"frequent_itemsets_with_len_3 = frequent_itemsets_from_complete_dataframe[frequent_itemsets_from_complete_dataframe['Length of Itemset'] == 3]\n\nprint(\"==================================\")\nprint(\"FREQUENT ITEMSETS WITH THREE ITEMS\")\nprint(\"==================================\")\nprint(\"\")\nfrequent_itemsets_with_len_3","87d89d6b":"print(\"=======================================================\")\nprint(\"TOTAL NUMBER OF FREQUENT ITEMSETS WITH THREE ITEMS: \" + str(frequent_itemsets_with_len_3.shape[0]))\nprint(\"=======================================================\")","e48ffd86":"frequent_itemsets_with_len_4 = frequent_itemsets_from_complete_dataframe[frequent_itemsets_from_complete_dataframe['Length of Itemset'] == 4]\n\nprint(\"=================================\")\nprint(\"FREQUENT ITEMSETS WITH FOUR ITEMS\")\nprint(\"=================================\")\nprint(\"\")\nfrequent_itemsets_with_len_4","9c995556":"print(\"======================================================\")\nprint(\"TOTAL NUMBER OF FREQUENT ITEMSETS WITH THREE ITEMS: \" + str(frequent_itemsets_with_len_4.shape[0]))\nprint(\"======================================================\")","ab94de66":"rules_df = association_rules(frequent_itemsets_from_complete_dataframe, metric=\"lift\", min_threshold=1.2)\nrules_df[\"Antecedents_Length\"] = rules_df[\"antecedents\"].apply(lambda x: len(x))\nrules_df[\"Consequents_Length\"] = rules_df[\"consequents\"].apply(lambda x: len(x))\nprint(\"=================\")\nprint(\"ASSOCIATION RULES\")\nprint(\"=================\")\nprint(\"\")\nrules_df.sort_values(\"lift\",ascending=False)","cc4c3b22":"def findFrequentlyBoughtTogether(items):\n    for itemset in frequent_itemsets_from_complete_dataframe['itemsets']:\n        item_lis = list(itemset)\n        if any(item in items for item in item_lis):\n            print(item_lis)","c4f4e6f4":"def AprioriDriver():\n    basket = []\n    print(\"\")\n    basket_length = int(input(\"ENTER NUMBER OF ITEMS ALREADY IN BASKET: \"))\n    print(\"\")\n    print(\"ENTER THE NAME OF THE ITEMS IN THE BASKET: \")\n    for i in range(0, basket_length):\n        temp = input().lower()\n        basket.append(temp)\n    print(\"\")\n    print(\"===================================================\")\n    print(\"FREQUENTLY BOUGHT TOGETHER WITH ITEMS IN THE BASKET\")\n    print(\"===================================================\")\n    print(\"\")\n    findFrequentlyBoughtTogether(basket)","32977e5b":"def main():\n    \n    while(1):\n        \n        print(\"\")\n        print(\"\")\n        \n        STATUS = input(\"ENTER: M -> Mining || Q -> QUIT : \").upper()\n        \n        if STATUS == 'M':\n            AprioriDriver()\n        \n        elif STATUS == 'Q':\n            print(\"\")\n            print(\"\")\n            print(\"=======================\")\n            print(\"---Execution Stopped---\")\n            print(\"=======================\")\n            break\n        \n        else:\n            print(\"=======================================\")\n            print(\"---ERROR: INVALID Keystroke is given---\")\n            print(\"=======================================\")\n            break","29539b18":"'''\nSAMPLE INPUTS\n\nM\n1\nmilk\n\nM\n2\nshrimp\ntomatoes\n\nQ\n'''\n\n\nif __name__==\"__main__\":\n    main()","40606de5":"## **FIND FREQUENTLY BOUGHT TOGETHER ITEMS**","50b8b62d":"## **LOAD DATASET AND EXPLORATORY DATA ANALYSIS (EDA)**","367c58b6":"## **DATA PREPROCESSING**","1d67e3d8":"### APRIORI with Truncated Transactions Dataframe","2a73007e":"### APRIORI with Complete Transactions Dataframe","3d6904a3":"## **APRIORI ALGORITHM**","21434119":"## **GENERATION OF ASSOCIATION RULES**","592fb04d":"## **FILTERATION OF FREQUENT ITEMSETS**","be0daea7":"### Frequent Itemsets With FOUR Items","62f0ea2f":"### Frequent Itemsets With TWO Items","f919025c":"### Frequent Itemsets With ONE Item","dc6b53ca":"### Frequent Itemsets With THREE Items"}}