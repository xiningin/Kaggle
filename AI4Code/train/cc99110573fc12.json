{"cell_type":{"93122eea":"code","80bc8f89":"code","624c3110":"code","bbc7f1b5":"code","95c2ab90":"code","f43a6d45":"code","9024632a":"code","098f3d47":"code","a2169811":"code","db506c8c":"code","b10def6f":"code","12845bb0":"code","0f688855":"code","9327b599":"code","9fa46d5b":"code","e8b133f8":"code","f2f5c123":"code","8d62b3ed":"code","5bb076f6":"code","1db6e29f":"code","61f48176":"code","2a5344ea":"code","6ec7ac95":"code","a07d06bf":"code","8a720df7":"code","e0bdaff6":"code","9cf59c3c":"code","6e57c289":"code","baedb833":"markdown","14c7259d":"markdown","a4ced5cc":"markdown","484a3621":"markdown","a52f551b":"markdown","cb7568b3":"markdown","d84dc8de":"markdown"},"source":{"93122eea":"import gc\nimport json\n\nimport pandas as pd\nimport numpy as np\nimport shap\nimport lightgbm as lgb\nimport matplotlib.pyplot as plt\n\nfrom tqdm import tqdm\n%matplotlib inline","80bc8f89":"%%capture\n!pip install nyaggle","624c3110":"from nyaggle.validation import TimeSeriesSplit","bbc7f1b5":"df = pd.read_csv('..\/input\/mlb-player-digital-engagement-forecasting\/train.csv', \n                 usecols=['date', 'nextDayPlayerEngagement', 'events'])","95c2ab90":"def load_subdata(df, col):\n    eng = []\n    for i, row in tqdm(df.iterrows()):\n        try:\n            loaded = json.loads(row[col])\n            for l in loaded:\n                l['dailyDataDate'] = row.date\n            eng.extend(loaded)\n        except:\n            pass\n\n    return pd.DataFrame(eng)\n\nengagement = load_subdata(df, 'nextDayPlayerEngagement')\nevents = load_subdata(df, 'events')\n\nfor c in events.columns:\n    if events[c].dtype.name == 'float64':\n        events[c] = events[c].astype(np.float32)\n\ndel df\ngc.collect()","f43a6d45":"def prep_events(events: pd.DataFrame, sort_by_date: bool = True):\n    events_p = events.copy()\n    events_p['asPitcher'] = 1\n    events_p['playerId'] = events_p['pitcherId']\n    events_p['teamId'] = events_p['pitcherTeamId']\n\n    events_h = events.copy()\n    events_h['asPitcher'] = 0\n    events_h['playerId'] = events_p['hitterId']\n    events_h['teamId'] = events_p['hitterTeamId']\n\n    if sort_by_date:\n        events_stacked = pd.concat([events_p, events_h]).sort_values(\n            by=['dailyDataDate', 'gamePk', 'inning']).reset_index(\n            drop=True)\n        events_stacked['dailyDataDate'] = pd.to_datetime(events_stacked['dailyDataDate'], format='%Y%m%d')\n    else:\n        events_stacked = pd.concat([events_p, events_h]).reset_index(drop=True)\n\n    drop_cols = [\n        'gameDate', 'season', 'playId', 'pitcherTeam', 'hitterTeam', 'pitcherName', 'pitcherHand', 'hitterName',\n        'batSide', 'atBatDesc', 'gameTimeUTC',\n        'description', 'halfInning', 'hitterTeamId', 'pitcherTeamId', 'gamePk', 'pitcherId', 'hitterId'\n    ]\n\n    events_stacked.drop(drop_cols, axis=1, inplace=True)\n\n    events_stacked['scoreDiff'] = events_stacked['homeScore'] - events_stacked['awayScore']\n\n    cats = {\n        'menOnBase': {\n            'Empty': 1,\n            'Men_On': 2,\n            'RISP': 3,\n            'Loaded': 4\n        },\n        'gameType': {\n            'R': 1,\n            'D': 2,\n            'L': 3,\n            'F': 4,\n            'W': 5\n        },\n        'atBatEvent': {\n            'Strikeout': 1,\n            'Groundout': 2,\n            'Single': 3,\n            'Walk': 4,\n            'Flyout': 5,\n            'Lineout': 6,\n            'Pop Out': 7,\n            'Double': 8,\n            'Home Run': 9,\n            'Forceout': 10,\n            'Grounded Into DP': 11,\n            'Hit By Pitch': 12,\n            'Field Error': 13,\n            'Sac Fly': 14,\n            'Intent Walk': 15,\n            'Triple': 16,\n            'Double Play': 17,\n            'Sac Bunt': 18,\n            'Fielders Choice Out': 19,\n            'Fielders Choice': 20,\n            'Strikeout Double Play': 21,\n            'Caught Stealing 2B': 22,\n            'Bunt Groundout': 23,\n            'Catcher Interference': 24,\n            'Bunt Pop Out': 25,\n            'Batter Interference': 26,\n            'Runner Out': 27,\n            'Pickoff Caught Stealing 2B': 28,\n            'Fan Interference': 29,\n            'Pickoff 1B': 30,\n            'Caught Stealing 3B': 31,\n            'Caught Stealing Home': 32,\n            'Pickoff 2B': 33,\n            'Sac Fly Double Play': 34,\n            'Bunt Lineout': 35,\n            'Wild Pitch': 36,\n            'Pickoff Caught Stealing Home': 37,\n            'Triple Play': 38,\n            'Pickoff Caught Stealing 3B': 39,\n            'Pickoff 3B': 40,\n            'Game Advisory': 41,\n            'Stolen Base 2B': 42,\n            'Sac Bunt Double Play': 43,\n            'Runner Double Play': 44,\n            'Passed Ball': 45,\n            'Pickoff Error 1B': 46,\n            'Balk': 47\n        },\n        'event': {\n            'Strikeout': 1,\n            'Groundout': 2,\n            'Single': 3,\n            'Game Advisory': 4,\n            'Flyout': 5,\n            'Pitching Substitution': 6,\n            'Walk': 7,\n            'Lineout': 8,\n            'Pop Out': 9,\n            'Double': 10,\n            'Home Run': 11,\n            'Offensive Substitution': 12,\n            'Defensive Switch': 13,\n            'Forceout': 14,\n            'Grounded Into DP': 15,\n            'Defensive Sub': 16,\n            'Hit By Pitch': 17,\n            'Stolen Base 2B': 18,\n            'Wild Pitch': 19,\n            'Field Error': 20,\n            'Sac Fly': 21,\n            'Intent Walk': 22,\n            'Triple': 23,\n            'Sac Bunt': 24,\n            'Caught Stealing 2B': 25,\n            'Double Play': 26,\n            'Passed Ball': 27,\n            'Injury': 28,\n            'Fielders Choice Out': 29,\n            'Fielders Choice': 30,\n            'Stolen Base 3B': 31,\n            'Defensive Indiff': 32,\n            'Bunt Groundout': 33,\n            'Ejection': 34,\n            'Balk': 35,\n            'Strikeout Double Play': 36,\n            'Runner Placed On Base': 37,\n            'Pickoff Error 1B': 38,\n            'Bunt Pop Out': 39,\n            'Pitch Challenge': 40,\n            'Runner Out': 41,\n            'Pickoff 1B': 42,\n            'Pickoff Caught Stealing 2B': 43,\n            'Caught Stealing 3B': 44,\n            'Catcher Interference': 45,\n            'Error': 46,\n            'Umpire Substitution': 47,\n            'Batter Interference': 48,\n            'Pickoff Error 2B': 49,\n            'Pitcher Switch': 50,\n            'Fan Interference': 51,\n            'Pickoff 2B': 52,\n            'Caught Stealing Home': 53,\n            'Stolen Base Home': 54,\n            'Sac Fly Double Play': 55,\n            'Bunt Lineout': 56,\n            'Pickoff Caught Stealing 3B': 57,\n            'Pickoff 3B': 58,\n            'Pickoff Caught Stealing Home': 59,\n            'Other Advance': 60,\n            'Pickoff Error 3B': 61,\n            'Triple Play': 62,\n            'Sac Bunt Double Play': 63},\n        'pitchType': {'FF': 1,\n                      'SL': 2,\n                      'CH': 3,\n                      'SI': 4,\n                      'CU': 5,\n                      'FT': 6,\n                      'FC': 7,\n                      'KC': 8,\n                      'FS': 9,\n                      'KN': 10,\n                      'EP': 11,\n                      'CS': 12,\n                      'FO': 13,\n                      'PO': 14,\n                      'SC': 15,\n                      'FA': 16,\n                      'AB': 17},\n        'call': {'B': 1,\n                 'F': 2,\n                 'C': 3,\n                 'X': 4,\n                 'S': 5,\n                 'D': 6,\n                 '*B': 7,\n                 'E': 8,\n                 'T': 9,\n                 'W': 10,\n                 'V': 11,\n                 'H': 12,\n                 'L': 13,\n                 'M': 14,\n                 'P': 15,\n                 'O': 16,\n                 'Q': 17,\n                 'R': 18},\n        'type': {\n            'pitch': 1,\n            'action': 2\n        }\n    }\n\n    for k in cats:\n        events_stacked[k] = events_stacked[k].map(cats[k])\n\n    return events_stacked\n","9024632a":"engagement['dailyDataDate'] = pd.to_datetime(engagement['dailyDataDate'], format='%Y%m%d')\n\nevent_df = prep_events(events)\n\nevent_df = pd.merge(event_df, engagement, how='left', on=['dailyDataDate', 'playerId'])\nevent_df = event_df[~event_df['target1'].isnull()]\n\ndel engagement\ngc.collect()","098f3d47":"params = {\n    'objective': 'mae',\n    'metrics': 'mae',\n    'num_leaves': 256,\n    'max_depth': 16,\n    'n_estimators': 100\n}\n\nhitter_df = event_df[event_df.asPitcher==0]\n\nX = hitter_df.drop(['target1', 'target2', 'target3', 'target4', 'dailyDataDate', 'playerId', 'teamId', 'engagementMetricsDate'], axis=1).astype(np.float32)\ny = hitter_df['target1']\n\nmodel = lgb.LGBMRegressor(**params)\n\nmodel.fit(X, y, categorical_feature=['atBatEvent', 'event', 'menOnBase', 'gameType', 'pitchType', 'call'])\n\ndel hitter_df","a2169811":"explainer = shap.Explainer(model)\nshap_values_hitter = explainer(X.sample(50000))","db506c8c":"shap.plots.beeswarm(shap_values_hitter)","b10def6f":"shap.plots.scatter(shap_values_hitter[:,\"inning\"])","12845bb0":"shap.plots.scatter(shap_values_hitter[:,\"scoreDiff\"])","0f688855":"shap.plots.scatter(shap_values_hitter[:,\"rbi\"])","9327b599":"shap.plots.scatter(shap_values_hitter[:,\"gameType\"], show=False)\nplt.xlim(0, 6)\nplt.xticks(np.arange(0, 6), ['', 'Regular Season', 'Division Series', 'League Championship Series', 'Wild Card Game', 'World Series'], rotation='vertical')\nplt.show()","9fa46d5b":"bat_events = ['','Strikeout',\n            'Groundout',\n            'Single',\n            'Walk',\n            'Flyout',\n            'Lineout',\n            'Pop Out',\n            'Double',\n            'Home Run',\n            'Forceout',\n            'Grounded Into DP',\n            'Hit By Pitch',\n            'Field Error',\n            'Sac Fly',\n            'Intent Walk',\n            'Triple',\n            'Double Play',\n            'Sac Bunt',\n            'Fielders Choice Out',\n             'Strikeout Double Play']\n\nshap.plots.scatter(shap_values_hitter[:,\"atBatEvent\"], color=shap_values_hitter, show=False)\nplt.xlim(0, 20)\nplt.xticks(np.arange(21), bat_events, rotation='vertical')\nplt.show()","e8b133f8":"pitcher_df = event_df[event_df.asPitcher==1]\n\nX = pitcher_df.drop(['target1', 'target2', 'target3', 'target4', 'dailyDataDate', 'playerId', 'teamId', 'engagementMetricsDate'], axis=1).astype(np.float32)\ny = pitcher_df['target1']\n\nmodel = lgb.LGBMRegressor(**params)\n\nmodel.fit(X, y, categorical_feature=['atBatEvent', 'event', 'menOnBase', 'gameType', 'pitchType', 'call'])\n\ndel pitcher_df","f2f5c123":"explainer = shap.Explainer(model)\nshap_values_pitcher = explainer(X.sample(50000))","8d62b3ed":"shap.plots.beeswarm(shap_values_pitcher)","5bb076f6":"shap.plots.scatter(shap_values_pitcher[:,\"nastyFactor\"])","1db6e29f":"shap.plots.scatter(shap_values_pitcher[:,\"scoreDiff\"])","61f48176":"shap.plots.scatter(shap_values_pitcher[:,\"gameType\"], show=False)\nplt.xlim(0, 6)\nplt.xticks(np.arange(0, 6), ['', 'Regular Season', 'Division Series', 'League Championship Series', 'Wild Card Game', 'World Series'], rotation='vertical')\nplt.show()","2a5344ea":"bat_events = ['','Strikeout',\n            'Groundout',\n            'Single',\n            'Walk',\n            'Flyout',\n            'Lineout',\n            'Pop Out',\n            'Double',\n            'Home Run',\n            'Forceout',\n            'Grounded Into DP',\n            'Hit By Pitch',\n            'Field Error',\n            'Sac Fly',\n            'Intent Walk',\n            'Triple',\n            'Double Play',\n            'Sac Bunt',\n            'Fielders Choice Out',\n             'Strikeout Double Play']\n\nshap.plots.scatter(shap_values_pitcher[:,\"atBatEvent\"], color=shap_values_pitcher, show=False)\nplt.xlim(0, 20)\nplt.xticks(np.arange(21), bat_events, rotation='vertical')\nplt.show()","6ec7ac95":"pitch_type = ['', 'FF', 'SL', 'CH', 'SI', 'CU', 'FT', 'FC', 'KC', 'FS', 'KN', 'EP', 'CS', 'FO', 'PO', 'SC', 'FA', 'AB']\n\nshap.plots.scatter(shap_values_pitcher[:,\"pitchType\"], color=shap_values_pitcher, show=False)\nplt.xlim(0, 19)\nplt.xticks(np.arange(18), pitch_type, rotation='vertical')\nplt.show()","a07d06bf":"shap.plots.scatter(shap_values_pitcher[:,\"inning\"])","8a720df7":"shap.plots.scatter(shap_values_pitcher[:,\"x0\"])","e0bdaff6":"shap.plots.scatter(shap_values_pitcher[:,\"zone\"])","9cf59c3c":"shap.plots.scatter(shap_values_pitcher[:,\"nastyFactor\"])","6e57c289":"shap.plots.scatter(shap_values_pitcher[:,\"startSpeed\"])","baedb833":"## Events vs Target\nIn this notebook, I will use the event level meta-model to analyze how engagement is related to the play-by-play information recorded in events.\n\nThe event-level meta model was not only used for the EDA, but also for the actual features of the [3rd place solution](https:\/\/www.kaggle.com\/c\/mlb-player-digital-engagement-forecasting\/discussion\/256620), which improved the score by about 0.001.","14c7259d":"## Hitter Events vs Target","a4ced5cc":"The relationship between nastyfactor and engagement seems to be weak.","484a3621":"Obviously, home runs are related to hitters' engagement. Interestingly, triples also seem to boost engagement.","a52f551b":"Hitters who appear in extra innings tend to get higher engagement.","cb7568b3":"The relationship between score difference and target shows that hitters who appear when the score difference is zero tend to get higher engagement, while the opposite is true for pitchers.","d84dc8de":"## Pitcher Events vs Target"}}