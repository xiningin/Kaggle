{"cell_type":{"86088274":"code","6c195caf":"code","7a772021":"code","9338a445":"code","36b89c21":"code","d3d1d5b6":"code","5a3cd8a4":"code","e2f4c399":"code","6709bdbc":"code","be639aa9":"code","f66e7ca3":"code","098b4b43":"code","aa029466":"code","41334f64":"code","fcb09ee7":"code","29bee33c":"code","ce3cd7d4":"code","686aff67":"code","9eb22b1c":"code","5e32918f":"code","a8035b16":"code","db56c36e":"code","f123f5d7":"code","5ad36a3f":"code","a51b14ef":"code","250eeabb":"code","35760ee3":"code","7c98c483":"code","79040619":"code","1a271fa9":"code","8e34690a":"markdown","79dcec1a":"markdown","50324673":"markdown","a5b23662":"markdown","3b7188dd":"markdown","246dee6e":"markdown","6c1fcd2b":"markdown","14f127cb":"markdown","2ef5adfa":"markdown","2093739a":"markdown","8b1252c4":"markdown","b54df749":"markdown","b2b6acf0":"markdown","770d8141":"markdown","564fd908":"markdown","f02aad54":"markdown","3c0a5182":"markdown","87cd152a":"markdown","e369e98b":"markdown","44a53640":"markdown","e9be98fd":"markdown"},"source":{"86088274":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport os\nimport matplotlib.pyplot as plt\nimport random\nfrom sklearn import preprocessing\nfrom sklearn.feature_extraction import text\nfrom sklearn import linear_model\nfrom sklearn import metrics","6c195caf":"input_path = '\/kaggle\/input\/nlp-getting-started\/'","7a772021":"train_df = pd.read_csv(os.path.join(input_path, 'train.csv'))\ntest_df = pd.read_csv(os.path.join(input_path, 'test.csv'))\nsubmission_df = pd.read_csv(os.path.join(input_path, 'sample_submission.csv'))","9338a445":"train_df.head()","36b89c21":"train_df.target.value_counts()","d3d1d5b6":"most_frequent_keywords = train_df.keyword.value_counts().head(10).keys()","5a3cd8a4":"train_df_selected = train_df[train_df.keyword.isin(list(most_frequent_keywords))]\nsns.violinplot(data=train_df_selected, x='keyword', y='target', )\nplt.xticks(rotation=45)","e2f4c399":"most_frequent_locations = train_df.location.value_counts().head(10).keys()","6709bdbc":"train_df_selected = train_df[train_df.location.isin(list(most_frequent_locations))]\nsns.violinplot(data=train_df_selected, x='location', y='target', )\nplt.xticks(rotation=45)","be639aa9":"new_train_df = train_df.copy()\nnew_train_df['location_null'] = train_df.location.isnull()\nsns.violinplot(data=new_train_df, x='location_null', y='target', )\nplt.xticks(rotation=45)","f66e7ca3":"new_train_df = train_df.copy()\nnew_train_df['keyword_null'] = train_df.keyword.isnull()\nsns.violinplot(data=new_train_df, x='keyword_null', y='target', )\nplt.xticks(rotation=45)","098b4b43":"len(new_train_df[(new_train_df.keyword_null == True) & (new_train_df.target == 1)])","aa029466":"len(new_train_df[(new_train_df.keyword_null == False) & (new_train_df.target == 0)])","41334f64":"len(train_df)","fcb09ee7":"new_train_df = train_df.iloc[:6000]\nnew_val_df = train_df.iloc[6000:]","29bee33c":"tfidf_extractor = text.TfidfVectorizer()","ce3cd7d4":"tfidf_extractor.fit(new_train_df.text)","686aff67":"train_tfidf_features = tfidf_extractor.transform(new_train_df.text).todense()\nval_tfidf_features = tfidf_extractor.transform(new_val_df.text).todense()\ntest_tfidf_features = tfidf_extractor.transform(test_df.text).todense()","9eb22b1c":"train_other_features = new_train_df.drop(columns=['id', 'text', 'target']).fillna('')\nval_other_features = new_val_df.drop(columns=['id', 'text', 'target']).fillna('')\ntest_other_features = test_df.drop(columns=['id', 'text']).fillna('')","5e32918f":"dummy_train = pd.get_dummies(train_other_features)\ndummy_val = pd.get_dummies(val_other_features)\ndummy_test = pd.get_dummies(test_other_features)","a8035b16":"dummy_val = dummy_val.reindex(columns = dummy_train.columns, fill_value=0)\ndummy_test = dummy_test.reindex(columns = dummy_train.columns, fill_value=0)","db56c36e":"train_features = np.concatenate([train_tfidf_features, dummy_train.values], 1)\nval_features = np.concatenate([val_tfidf_features, dummy_val.values], 1)\ntest_features = np.concatenate([test_tfidf_features, dummy_test.values], 1)","f123f5d7":"model = linear_model.LogisticRegression()","5ad36a3f":"model.fit(train_features, new_train_df.target.values)","a51b14ef":"val_preds = model.predict(val_features)","250eeabb":"metrics.f1_score(val_preds, new_val_df.target.values)","35760ee3":"test_preds = model.predict(test_features)","7c98c483":"submission_df['target'] = test_preds","79040619":"submission_df.to_csv('submission.csv', index=False)","1a271fa9":"submission_df","8e34690a":"Concatenate the tfidf and one-hot features","79dcec1a":"* Get 10 most frequent keywords","50324673":"Read the files","a5b23662":"Convert to one-hot","3b7188dd":"We use a simple logistic regression model from linear_model module of scikit-learn library.","246dee6e":"Make predictions on the validation dataset.","6c1fcd2b":"Import the required libraries","14f127cb":"Plot the variation of target when these keywords are present","2ef5adfa":"Location being null does not seem to have any bearing on the target.","2093739a":"Extract the tfidf features for train, validation and test set","8b1252c4":"We fit the the vectorizer on only **train text** so as to not have any data leakage.","b54df749":"Clearly, keywords such as armageddon, body%20bags, harm, etc. have very high probability of target being 0. Whereas, outbreak has high probability of target being 1. We can use this knowledge to do better predictions on the test set.","b2b6acf0":"We can also create some features based on the keyword and location columns by representing in one-hot representation.","770d8141":"<h2>Modelling with TfIdf and Logistic Regression<\/h2>","564fd908":"Obtain the f1-score on the validation dataset.","f02aad54":"Make predictions on the test dataset.","3c0a5182":"Clearly it seems like if keyword is null, it is much more likely to be true and if keyword is available is it more likely to be not real.","87cd152a":"From the 7613 rows, let us use first 6000 be for training, and rest for validation","e369e98b":"Let us use a tfidf-vectorizer from the feature extraction module of scikit-learn library.","44a53640":"Fit the model on the training data.","e9be98fd":"Remove features from validation and test that are not there in training"}}