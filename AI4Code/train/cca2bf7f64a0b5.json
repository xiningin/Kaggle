{"cell_type":{"02b84f66":"code","3544825a":"code","8b592c47":"code","b9600c40":"code","6ee1e489":"code","5ba9836d":"code","9a07fc0d":"code","99fd4fe8":"code","1b400b9d":"code","73b8e792":"code","c5d1b4ae":"code","97baf7f7":"code","ab94d1e2":"code","2c820551":"code","9be003c2":"markdown","c5768866":"markdown","7cebeb6f":"markdown","88cf5cc4":"markdown","237a4f6b":"markdown","6e787533":"markdown","0a1fbc64":"markdown","42123cfb":"markdown"},"source":{"02b84f66":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","3544825a":"# Import dataset\ndata = pd.read_csv(\"..\/input\/voice.csv\")","8b592c47":"# Showing five columns\ndata.head()","b9600c40":"# Showing five column\ndata.tail()","6ee1e489":"# Describing data show us statics features\ndata.describe()","5ba9836d":"data.label = [1 if each == \"female\" else 0 for each in data.label ]\ny = data.label.values\nx_data = data.drop([\"label\"], axis = 1)","9a07fc0d":"# Normalization\nx = (x_data -np.min(x_data))\/(np.max(x_data)-np.min(x_data)).values","99fd4fe8":"#correlation map\nf,ax = plt.subplots(figsize=(20, 20))\nsns.heatmap(x.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)","1b400b9d":"sns.set(style=\"white\")\ndf = x.loc[:,['meandom','mindom','maxdom']]\ng = sns.PairGrid(df, diag_sharey=False)\ng.map_lower(sns.kdeplot, cmap=\"Blues_d\")\ng.map_upper(plt.scatter)\ng.map_diag(sns.kdeplot, lw=3)","73b8e792":"# Plotting\ndata.plot(kind='scatter', x='meanfreq', y='dfrange')\ndata.plot(kind='kde', y='meanfreq')","c5d1b4ae":"# Pairplotting\nsns.pairplot(data[['meanfreq', 'Q25', 'Q75', 'skew', 'centroid', 'label']], \n                 hue='label', size=3)","97baf7f7":"# Train and test split\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 42)","ab94d1e2":"# Importing SVM from sklearn\nfrom sklearn.svm import SVC\nsvm = SVC(random_state = 1)\nsvm.fit(x_train, y_train)","2c820551":"# Testing\nprint(\"Print accuracy of svm algorithm: \", svm.score(x_test,y_test))","9be003c2":"<a id=\"p3\"><\/a>\n# 3. Clean and Normalization Data\nWe need to change categorical data to numeric data.","c5768866":"<a id=\"p1\"><\/a>\n# 1. Importing Libraries and Packages\nWe will use these packages to help us manipulate the data and visualize the features\/labels as well as measure how well our model performed. Numpy and Pandas are helpful for manipulating the dataframe and its columns and cells. We will use matplotlib along with Seaborn to visualize our data.","7cebeb6f":"<a id=\"p5\"><\/a>\n# 5. Initializing, Optimizing, and Predicting\nNow that our data has been processed and formmated properly, and that we understand the general data we're working with as well as the trends and associations, we can start to build our model. We can import different classifiers from sklearn. ","88cf5cc4":"# Contents\n1. [Importing Libraries and Packages](#p1)\n2. [Loading and Viewing Data Set](#p2)\n3. [Clean and Normalization Data](#p3)\n4. [Visualization](#p4)\n5. [Initializing, Optimizing, and Predicting](#p5)","237a4f6b":"<a id=\"p2\"><\/a>\n# 2. Loading and Viewing Data Set\nWith Pandas, we can load both the training and testing set that we wil later use to train and test our model. Before we begin, we should take a look at our data table to see the values that we'll be working with. We can use the head and describe function to look at some sample data and statistics.","6e787533":"<a id=\"p4\"><\/a>\n# 4. Visualization\n\nIn order to visualizate the data, we are goingo to use matplotlib and seaborn. Before the visualization don't forget the normalize the data.","0a1fbc64":"**If you liked the kernel, please upvote or make a comment. They motivate me :)**","42123cfb":"# SVM"}}