{"cell_type":{"6bdb2199":"code","f5bf999c":"code","684bca62":"code","0553af57":"code","88b40de5":"code","55a14f01":"code","6724b675":"code","1374e3fd":"code","f109342e":"code","726a3dd2":"code","367c0454":"code","75d936fa":"code","56c777f5":"code","9fed377c":"code","17836ab7":"code","7eba1da6":"code","d951de79":"code","1be89a23":"code","c6cbe8f7":"code","ac2cf29c":"code","05c0ebaa":"code","effd260e":"code","670a490d":"code","b8e385c7":"code","9ea249ae":"code","c06454c5":"code","aee29439":"code","30f98af8":"code","01b61bd2":"code","c01bf808":"markdown","01c2280b":"markdown","25eda585":"markdown","d6c2b20b":"markdown","df201792":"markdown","b33939f5":"markdown","d5aa4442":"markdown","702e1791":"markdown","079c1118":"markdown","370e5134":"markdown","d05e4d26":"markdown","0053783a":"markdown","6926dfa3":"markdown","8b00c038":"markdown","767a5e24":"markdown","8761ef01":"markdown","880b9b46":"markdown","c2545653":"markdown","e1c3ea92":"markdown","8d571637":"markdown"},"source":{"6bdb2199":"import pandas as pd\nimport numpy as np\n\nimport matplotlib as mpl\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nimport warnings\nfrom collections import Counter\nimport datetime\nimport wordcloud\nimport json\n","f5bf999c":"df = pd.read_csv('..\/input\/youtube-new\/CAvideos.csv')\ndf.head()","684bca62":"df.info()","0553af57":"df.shape","88b40de5":"df[df[\"description\"].apply(lambda x: pd.isna(x))].head(3)","55a14f01":"df[\"description\"] = df[\"description\"].fillna(value=\"\")","6724b675":"cdf = df[\"trending_date\"].apply(lambda x: '20' + x[:2]).value_counts() \\\n            .to_frame().reset_index() \\\n            .rename(columns={\"index\": \"year\", \"trending_date\": \"No_of_videos\"})\n\nfig, ax = plt.subplots()\n_ = sns.barplot(x=\"year\", y=\"No_of_videos\", data=cdf, \n                palette=sns.color_palette(['#ff764a', '#ffa600'], n_colors=7), ax=ax)\n_ = ax.set(xlabel=\"Year\", ylabel=\"No. of videos\")","1374e3fd":"df[\"trending_date\"].apply(lambda x: '20' + x[:2]).value_counts(normalize=True)","f109342e":"PLOT_COLORS = [\"#268bd2\", \"#0052CC\", \"#FF5722\", \"#b58900\", \"#003f5c\"]\npd.options.display.float_format = '{:.2f}'.format\nsns.set(style=\"ticks\")\nplt.rc('figure', figsize=(8, 5), dpi=100)\nplt.rc('axes', labelpad=20, facecolor=\"#ffffff\", linewidth=0.4, grid=True, labelsize=14)\nplt.rc('patch', linewidth=0)\nplt.rc('xtick.major', width=0.2)\nplt.rc('ytick.major', width=0.2)\nplt.rc('grid', color='#9E9E9E', linewidth=0.4)\nplt.rc('font', family='Arial', weight='400', size=10)\nplt.rc('text', color='#282828')\nplt.rc('savefig', pad_inches=0.3, dpi=300)","726a3dd2":"fig, ax = plt.subplots()\n_ = sns.distplot(df[\"views\"], kde=False, color=PLOT_COLORS[4], \n                 hist_kws={'alpha': 1}, bins=np.linspace(0, 2.3e8, 47), ax=ax)\n_ = ax.set(xlabel=\"Views\", ylabel=\"No. of videos\", xticks=np.arange(0, 2.4e8, 1e7))\n_ = ax.set_xlim(right=2.5e8)\n_ = plt.xticks(rotation=90)","367c0454":"fig, ax = plt.subplots()\n_ = sns.distplot(df[df[\"views\"] < 25e6][\"views\"], kde=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\"Views\", ylabel=\"No. of videos\")","75d936fa":"df[df['views']<1e6]['views'].count() \/ df['views'].count()*100","56c777f5":"plt.rc('figure.subplot', wspace=0.9)\nfig, ax = plt.subplots()\n_ = sns.distplot(df[\"likes\"], kde=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, \n                 bins=np.linspace(0, 6e6, 61), ax=ax)\n_ = ax.set(xlabel=\"Likes\", ylabel=\"No. of videos\")\n_ = plt.xticks(rotation=90)","9fed377c":"fig, ax = plt.subplots()\n_ = sns.distplot(df[df[\"likes\"] <= 1e5][\"likes\"], kde=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\"Likes\", ylabel=\"No. of videos\")","17836ab7":"df[df['likes'] < 2e4]['likes'].count() \/ df['likes'].count() * 100","7eba1da6":"df.describe(include = 'O')","d951de79":"grouped = df.groupby(\"video_id\")\ngroups = []\nwanted_groups = []\nfor key, item in grouped:\n    groups.append(grouped.get_group(key))\n\nfor g in groups:\n    if len(g['title'].unique()) != 1:\n        wanted_groups.append(g)\n\nwanted_groups[0]\n","1be89a23":"def contains_capitalized_word(s):\n    for w in s.split():\n        if w.isupper():\n            return True\n    return False\n\n\ndf[\"contains_capitalized\"] = df[\"title\"].apply(contains_capitalized_word)\n\nvalue_counts = df[\"contains_capitalized\"].value_counts().to_dict()\nfig, ax = plt.subplots()\n_ = ax.pie([value_counts[False], value_counts[True]], labels=['No', 'Yes'], \n           colors=['#003f5c', '#ffa600'], textprops={'color': '#040204'}, startangle=45)\n_ = ax.axis('equal')\n_ = ax.set_title('Title Contains Capitalized Word?')","c6cbe8f7":"df[\"contains_capitalized\"].value_counts(normalize=True)","ac2cf29c":"df[\"title_length\"] = df[\"title\"].apply(lambda x: len(x))\n\nfig, ax = plt.subplots()\n_ = sns.distplot(df[\"title_length\"], kde=False, rug=False, \n                 color=PLOT_COLORS[4], hist_kws={'alpha': 1}, ax=ax)\n_ = ax.set(xlabel=\"Title Length\", ylabel=\"No. of videos\", xticks=range(0, 110, 10))","05c0ebaa":"fig, ax = plt.subplots()\n_ = ax.scatter(x=df['views'], y=df['title_length'], color=PLOT_COLORS[2], edgecolors=\"#000000\", linewidths=0.5)\n_ = ax.set(xlabel=\"Views\", ylabel=\"Title Length\")","effd260e":"df.corr()","670a490d":"h_labels = [x.replace('_', ' ').title() for x in \n            list(df.select_dtypes(include=['number', 'bool']).columns.values)]\n\nfig, ax = plt.subplots(figsize=(10,6))\n_ = sns.heatmap(df.corr(), annot=True, xticklabels=h_labels, yticklabels=h_labels, cmap=sns.cubehelix_palette(as_cmap=True), ax=ax)","b8e385c7":"fig, ax = plt.subplots()\n_ = plt.scatter(x=df['views'], y=df['likes'], color=PLOT_COLORS[2], edgecolors=\"#000000\", linewidths=0.5)\n_ = ax.set(xlabel=\"Views\", ylabel=\"Likes\")","9ea249ae":"title_words = list(df['title'].apply(lambda x: x.split()))\ntitle_words = [x for y in title_words for x in y]\nCounter(title_words).most_common(25)","c06454c5":"wc = wordcloud.WordCloud(width=1200, height=500, \n                         collocations=False, background_color=\"white\", \n                         colormap=\"tab20b\").generate(\" \".join(title_words))\nplt.figure(figsize=(15,10))\nplt.imshow(wc, interpolation='bilinear')\n_ = plt.axis(\"off\")","aee29439":"cdf = df.groupby(\"channel_title\").size().reset_index(name=\"video_count\") \\\n    .sort_values(\"video_count\", ascending=False).head(20)\n\nfig, ax = plt.subplots(figsize=(8,8))\n_ = sns.barplot(x=\"video_count\", y=\"channel_title\", data=cdf,\n                palette=sns.cubehelix_palette(n_colors=20, reverse=True), ax=ax)\n_ = ax.set(xlabel=\"No. of videos\", ylabel=\"Channel\")","30f98af8":"with open(\"..\/input\/youtube-new\/CA_category_id.json\") as f:\n    categories = json.load(f)[\"items\"]\ncat_dict = {}\nfor cat in categories:\n    cat_dict[int(cat[\"id\"])] = cat[\"snippet\"][\"title\"]\ndf['category_name'] = df['category_id'].map(cat_dict)","01b61bd2":"cdf = df[\"category_name\"].value_counts().to_frame().reset_index()\ncdf.rename(columns={\"index\": \"category_name\", \"category_name\": \"No_of_videos\"}, inplace=True)\nfig, ax = plt.subplots()\n_ = sns.barplot(x=\"category_name\", y=\"No_of_videos\", data=cdf, \n                palette=sns.cubehelix_palette(n_colors=16, reverse=True), ax=ax)\n_ = ax.set_xticklabels(ax.get_xticklabels(), rotation=90)\n_ = ax.set(xlabel=\"Category\", ylabel=\"No. of videos\")","c01bf808":"Likes Histogram","01c2280b":"We notice that vast majority of trending videos have 5 million or less views. So lets plot a histogram with 25 million or less to get a closer look at the distribution.","25eda585":"Now we can see that the majority of trending videos have 20000 likes or less. \n","d6c2b20b":"Let's see in which years the dataset was collected\n\n","df201792":"Let's add another column to our dataset to represent the length of each video title, then plot the histogram of title length to get an idea about the lengths of trnding video titles","b33939f5":"Let's see if there are some words that are used significantly in trending video titles. We will display the 25 most common words in all trending video titles","d5aa4442":"Videos that have 100,000,000 views and more have title length between 33 and 55 characters approximately.","702e1791":"The correlation map and correlation table above say that views and likes are highly positively correlated. Let's verify that by plotting a scatter plot between views and likes to visualize the relationship between these variables","079c1118":"After we described numerical columns previously, we now describe non-numerical columns","370e5134":"We see for example that views and likes are highly positively correlated with a correlation value of 0.83; we see also a high positive correlation (0.84) between likes and comment count, and between dislikes and comment count (0.64).\n\nThere is some positive correlation between views and dislikes, between views and comment count, between likes and dislikes.","d05e4d26":"To check the total number of tuples(rows,columns) in the dataframe","0053783a":"Import all the important libraries","6926dfa3":"HISTOGRAM\n\nviews histogram","8b00c038":"Almost 49% of trending videos on youtube use capitalized words.","767a5e24":"Now we want to see how many trending video titles contain at least a capitalized word (e.g. HOW).","8761ef01":"We can see that title-length distribution resembles a normal distribution, where most videos have title lengths between 30 and 60 character approximately.\n\nNow let's draw a scatter plot between title length and number of views to see the relationship between these two variables","880b9b46":"\nWhich channels have the largest number of trending videos?","c2545653":"Now we see that the majority of trending videos have 1 million views or less. Let's see the exact percentage of videos less than 1 million views","e1c3ea92":"So it is around 75%. Similarly videos less than 1.5 million is 83% and less than 5 million is 96%.","8d571637":"Read the csv file and convert it to pandas dataframe"}}