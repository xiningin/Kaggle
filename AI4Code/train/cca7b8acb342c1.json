{"cell_type":{"b0024b69":"code","9fb7b6c4":"code","21b1039c":"code","cab3a082":"code","99ce319c":"code","83de8efa":"code","05393e3c":"code","cffe8d49":"code","46e9294b":"code","dc1671f9":"code","c8219ed8":"code","5ed650df":"code","e8b25d87":"code","c671b210":"code","dc889696":"code","2082ea4e":"code","ad618e83":"code","7be65ccc":"code","3adf07a8":"code","ae1c24f2":"code","0219e8c7":"code","586120a8":"code","e95bd9b3":"code","3cd95ece":"code","9f27a834":"code","c4813afd":"code","30d009e5":"code","6fa0c67f":"code","2fa1886b":"code","199a0abc":"code","7f645b97":"code","b61380c9":"code","4c610a72":"code","abff57a4":"code","11207c5b":"markdown","85d852d6":"markdown","991f1726":"markdown","581ab6df":"markdown","122f45c5":"markdown","de9e6c42":"markdown","7c325bd7":"markdown","ffa29100":"markdown","efd7281f":"markdown","92467414":"markdown","3b02d318":"markdown","66afcb88":"markdown","e039fe18":"markdown","221ac665":"markdown","12534068":"markdown"},"source":{"b0024b69":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9fb7b6c4":"import seaborn as sns\nimport matplotlib.pyplot as plt","21b1039c":"sns.set_style('darkgrid')","cab3a082":"df = pd.read_csv('\/kaggle\/input\/temperature-change\/Environment_Temperature_change_E_All_Data_NOFLAG.csv', encoding='latin-1')\ndf.head()","99ce319c":"df.columns = df.columns.str.lower()\ndf.columns = df.columns.str.replace('y', '')\ndf.head()","83de8efa":"df.drop(columns=['area code', 'months code', 'element code', 'unit'], inplace=True)\ndf.head()","05393e3c":"months_replace = {'Dec\\x96Jan\\x96Feb': 'quarter_1', 'Mar\\x96Apr\\x96May': 'quarter_2', 'Jun\\x96Jul\\x96Aug': 'quarter_3', 'Sep\\x96Oct\\x96Nov': 'quarter_4'}\ndf.replace(months_replace, inplace=True)","cffe8d49":"# get specific dataframe for country\ndef country_df(df, country):\n    dfn = df[(df['element'] == 'Temperature change') & (df['area'] == country)]\n    dfn = dfn.set_index('months').transpose()[2:]\n    dfn['year'] = dfn.index\n    dfn.reset_index(drop=True, inplace=True)\n    dfn.index.names = [country]\n    dfn = dfn.astype('float')\n    dfn = dfn.astype({'year': 'int'})\n    return dfn","46e9294b":"def months_df(df, country):\n    months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'] \n    dfn = df[(df['element'] == 'Temperature change') & (df['area'] == country)]\n    dfn = dfn.drop(columns=['element', 'area'])\n    dfn = pd.melt(dfn, id_vars=['months'], value_vars=dfn.columns[1:], var_name='year', value_name='delta_temperature')\n    return dfn","dc1671f9":"def seasons_df(df, country):\n    months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    dfn = df[(df['element'] == 'Temperature change') & (df['area'] == country)]\n    dfn.rename(columns={'months': 'seasons'}, inplace=True)\n    dfn = dfn.set_index('seasons').transpose()[2:]\n    dfn['year'] = dfn.index\n    dfn.drop(columns=months, inplace=True)\n    dfn.reset_index(drop=True, inplace=True)\n    dfn.index.names = [country]\n    dfn = dfn.astype('float')\n    return dfn","c8219ed8":"# create regression plot for country\ndef country_regplot(data, period):\n    fig = plt.figure(figsize=(8, 8))\n    sns.regplot(data=data, x='year', y=period, fit_reg=True, lowess=True, scatter_kws={'alpha': 0.2}, line_kws={'lw': 2, 'alpha': 0.78})\n    plt.xlabel('Year')\n    plt.ylabel('\u2206 \u00b0C')\n    plt.title(data.index.name)","5ed650df":"# create density plot for country\ndef country_densityplot(data):\n    quarters = ['quarter_1', 'quarter_2', 'quarter_3', 'quarter_4']\n    labels = ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n    colors = ['r', 'g', 'b', 'y']\n    \n    for i, quarter in enumerate(quarters):\n        fig = sns.kdeplot(data[quarter], shade=True, color=colors[i], label=labels[i])\n    plt.xlabel('\u2206 \u00b0C')\n    plt.legend()\n    plt.show()","e8b25d87":"# create box plot for country\ndef country_boxplot(data, country):\n    fig = plt.figure(figsize=(24, 8))\n    sns.boxplot(x=data['months'], y=data['delta_temperature'])\n    plt.title(country)\n    plt.ylabel('\u2206 \u00b0C')\n    plt.xlabel('Months')\n    plt.show()","c671b210":"germany = country_df(df, 'Germany')\ncountry_regplot(germany, 'Meteorological year')","dc889696":"country_densityplot(germany)","2082ea4e":"country_boxplot(months_df(df, 'Germany'), 'Germany')","ad618e83":"australia = country_df(df, 'Australia')\ncountry_regplot(australia, 'Meteorological year')","7be65ccc":"country_densityplot(australia)","3adf07a8":"country_boxplot(months_df(df, 'Australia'), 'Australia')","ae1c24f2":"usa = country_df(df, 'United States of America')\ncountry_regplot(usa, 'Meteorological year')","0219e8c7":"country_densityplot(usa)","586120a8":"country_boxplot(months_df(df, 'United States of America'), 'United States of America')","e95bd9b3":"china = country_df(df, 'China')\ncountry_regplot(china, 'Meteorological year')","3cd95ece":"country_densityplot(china)","9f27a834":"country_boxplot(months_df(df, 'China'), 'China')","c4813afd":"russia = country_df(df, 'Russian Federation')\ncountry_regplot(russia, 'Meteorological year')","30d009e5":"country_densityplot(russia)","6fa0c67f":"country_boxplot(months_df(df, 'Russian Federation'), 'Russia')","2fa1886b":"africa = seasons_df(df, 'Africa')\nasia = seasons_df(df, 'Asia')\neurope = seasons_df(df, 'Europe')\nnorth_america = seasons_df(df, 'Northern America')\nsouth_america = seasons_df(df, 'South America')\naustralia = seasons_df(df, 'Australia')\nantarctica = seasons_df(df, 'Antarctica')","199a0abc":"continents_str=[\"Africa\",\"Asia\",\"Europe\",\"Northern America\",\"South America\",\"Australia\",\"Antarctica\"]\ncontinents=[africa, asia, europe, north_america, south_america, australia, antarctica]","7f645b97":"quarters = ['quarter_1', 'quarter_2', 'quarter_3', 'quarter_4']\n\ncont_yearly = pd.concat(continents, axis=1, ignore_index=False)\ncont_yearly.drop(columns=quarters, axis=1, inplace=True)\ncont_yearly.set_index(africa['year'], inplace=True)\ncont_yearly.drop('year', axis=1, inplace=True)\ncont_yearly.columns = continents_str\ncont_yearly.head()","b61380c9":"def continents_violinplot(data):\n    violins = plt.figure(figsize=(15,10))\n    sns.violinplot(data=data, inner='quartile', cut=0, bw=0.3)  \n    plt.ylabel('\u2206 \u00b0C', rotation=0)\n    plt.title('Continental Temperature Shifts  \\nper year average')\n    plt.show()\n    \ncontinents_violinplot(cont_yearly)","4c610a72":"world = sum(continents) \/ 7\nworld.index.name = 'world'\nworld.head()","abff57a4":"def world_regplot(data):\n    labels = ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n    plt.figure(figsize=(8,8))\n    \n    for i, q in enumerate(quarters):\n        sns.regplot(data=data, x='year', y=q, fit_reg=True, lowess=True, label=labels[i], scatter_kws={'alpha':0.2}, line_kws={'lw':2, 'alpha':0.75})\n    \n    plt.gca().set_ylabel('\u2206 \u00b0C', rotation=0)\n    plt.gca().set_title('World \u2206 Continental Temperatures')\n    plt.legend(loc='best', frameon=False)\n    plt.show()\n    \nworld_regplot(world)","11207c5b":"## Australia","85d852d6":"# Read in data","991f1726":"# Temperature analysis","581ab6df":"## China","122f45c5":"# Analyze Continents","de9e6c42":"## Russia","7c325bd7":"# Configs","ffa29100":"## Germany","efd7281f":"# Rename columns","92467414":"# Rename month combinations","3b02d318":"# Analyze World","66afcb88":"# Remove unnecessaray columns","e039fe18":"## USA","221ac665":"# Imports","12534068":"# Helper functions"}}