{"cell_type":{"cd6ed9e2":"code","3131aac9":"code","7736a8cf":"code","5659ab6c":"code","074a7906":"code","00c2ff00":"code","e471e7ff":"code","807fd062":"code","87ee4b74":"code","394ffdaa":"code","7d6bb79a":"code","9bc4124e":"code","bd877c8c":"code","152d0693":"code","d4a2d342":"code","7a82a5ac":"code","9d448afb":"code","f08f16ce":"code","15d3cc59":"code","9900349e":"code","6e8a7253":"code","dafccd71":"code","1d18b5a5":"code","a59a9457":"code","ca0b7ad9":"code","7ceb07be":"code","5186899b":"code","493c6ec0":"code","eea665a3":"code","c0d36dfd":"code","055cfc38":"code","37bb8548":"code","57ca2f1a":"code","c5ab06f0":"code","800221ad":"code","ac1fb13a":"code","c7c1c553":"code","fe64fe5d":"code","9dae4758":"code","cd64480d":"code","d8e6a2fd":"code","d488e1c3":"code","3bffdd3c":"code","ba0a907f":"code","8ba89762":"code","808704f9":"code","4fa58ff4":"markdown","d9961c81":"markdown","a1af7c34":"markdown","2f51bcc8":"markdown","2b1ba6f8":"markdown","fcc856c0":"markdown","5e2ef5f3":"markdown","164cf0c3":"markdown","234f8766":"markdown","f7bc4b69":"markdown","a07ab3d2":"markdown","3bb8a3cc":"markdown"},"source":{"cd6ed9e2":"import numpy as np\n\nimport pandas as pd\n\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\n\nimport plotly.express as px\n\n%matplotlib inline\n\nfrom sklearn.model_selection import  train_test_split\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.metrics import confusion_matrix, accuracy_score\n\n\n\n#warning ignore\nimport warnings\nwarnings.filterwarnings('ignore')","3131aac9":"heartdf = pd.read_csv('..\/input\/heart-attack\/Heart Attack Data Set.csv')\n\n\n# Getting top 5 rows\nheartdf.head()\n\n# Getting top 5 rows\n#heart.head()","7736a8cf":"# List of all columns present in dataframe\n\nheartdf.columns","5659ab6c":"# Dimension of dataframe\n\nheartdf.shape","074a7906":"# getting the information about dataframe\n\nheartdf.info()","00c2ff00":"# To view some basic statistical details \n\nheartdf.describe()","e471e7ff":"#  check for null value or not\n\nheartdf.isnull().sum()","807fd062":"# checking a unique values in column\n\nheartdf.nunique()","87ee4b74":"# correlation heatmap\nplt.figure(figsize=(10,10))\nsns.heatmap(heartdf.corr(), annot = True, cmap='coolwarm')","394ffdaa":"xl = sns.countplot(x = \"sex\",data= heartdf, saturation=0.8)\nplt.xticks(ticks=[0,1], labels = [\"female\", \"male\"])\nplt.show()","7d6bb79a":"# Visualizing dataset and also checking for outliers \n\nfig, ax = plt.subplots(ncols = 7, nrows = 2, figsize = (20, 10))\nindex = 0\nax = ax.flatten()\n\nfor cols, value in heartdf.items():\n    sns.boxplot(y=cols, data=heartdf, ax=ax[index])\n    index += 1\nplt.tight_layout(pad = 0.5, w_pad=0.7, h_pad=5.0)","9bc4124e":"# Individual box plot for each feature\ndef Box(heartdf):\n    plt.title(\"Box Plot\")\n    sns.boxplot(heartdf)\n    plt.show()\nBox(heartdf['age'])","bd877c8c":"sns.histplot(x = \"chol\", data=heartdf)\n","152d0693":"# Individual box plot for each feature\nsns.histplot(x = \"trestbps\", data=heartdf)\n","d4a2d342":"sns.histplot(x = \"cp\", data=heartdf)","7a82a5ac":"sns.histplot(x = \"thalach\", data=heartdf)","9d448afb":"fig = px.histogram (heartdf, x = \"thalach\",  facet_row = \"target\",  template = 'plotly_dark')\nfig.show ()","f08f16ce":"# PLotting Histogram for whole dataset using hist()\nheartdf.hist(figsize=(17,12),color='Pink')\nplt.show()","15d3cc59":"colums = ['age', 'trestbps', 'chol','thalach', 'oldpeak']\nfor cols in colums:\n    minimum = min(heartdf[cols])\n    maximum = max(heartdf[cols])\n    heartdf[cols] = (heartdf[cols] - minimum)\/ (maximum - minimum)","9900349e":"heartdf.head()","6e8a7253":"# Mean of other colums such as sex,cp,fbs,restcg, exang, slope, thal.","dafccd71":"print(heartdf[[\"sex\", \"target\"]].groupby(['sex']).mean())\n","1d18b5a5":"print(heartdf[[\"cp\", \"target\"]].groupby(['cp']).mean())\n","a59a9457":"print(heartdf[[\"fbs\", \"target\"]].groupby(['fbs']).mean())\n","ca0b7ad9":"print (heartdf[[\"exang\", \"target\"]].groupby(['exang']).mean())\n","7ceb07be":"print (heartdf[[\"slope\", \"target\"]].groupby(['slope']).mean())\n","5186899b":"print (heartdf[[\"thal\", \"target\"]].groupby(['thal']).mean())\n","493c6ec0":"# Visualizing after min-max normalization \nfig, ax = plt.subplots(ncols = 7, nrows = 2, figsize = (20, 10))\nindex = 0\nax = ax.flatten()\n\nfor col, value in heartdf.items():\n    sns.boxplot(y=col, data=heartdf, ax=ax[index])\n    index += 1\nplt.tight_layout(pad = 0.5, w_pad=0.7, h_pad=5.0)","eea665a3":"heartdf.head()","c0d36dfd":"# Exploring dataset through visualization \n\nheartdf2=heartdf[heartdf[\"target\"]==0]     # We can also use 1 insted of 0(zero)\n\nsns.histplot(heartdf2[\"thalach\"],bins=25,  color=\"skyblue\");     # we can also use different columns for graph.\n\nplt.xlabel(\"Heart rate  outcome is 0\")\n\nplt.show()","055cfc38":"# dropping 'target' from dataframe \n\nX = heartdf.drop(\"target\", axis=1)\n","37bb8548":"X.shape","57ca2f1a":"X.nunique()","c5ab06f0":"heartdf.nunique()\n","800221ad":"fig = px.scatter (heartdf, x = \"thalach\", y = \"chol\", color = \"target\", template = \"plotly_dark\",  trendline=\"lowess\")\nfig.show ()","ac1fb13a":"fig = px.scatter (heartdf, x = \"thalach\", y = \"oldpeak\", color = \"target\", template = \"gridon\",  trendline=\"ols\")\nfig.show ()","c7c1c553":"fig =  px.pie (heartdf, names = \"sex\", hole = 0.4, template = \"plotly_dark\")\nfig.show ()","fe64fe5d":"fig =  px.pie (heartdf, names = \"cp\", hole = 0.4, template = \"plotly_white\")\nfig.show ()","9dae4758":"sns.pairplot(data=heartdf, vars=['thalach', 'chol', 'trestbps'], \\\n             hue='target', kind='reg', diag_kind='kde', markers=['*','.'], size=5, palette='husl', corner=True)\n","cd64480d":"X.head()","d8e6a2fd":"# y have only 'output' column \ny = heartdf['target']\ny.shape","d488e1c3":"X_train, X_test, y_train, y_test = train_test_split(X, y,train_size=0.8,random_state=42)","3bffdd3c":"model_ada = AdaBoostClassifier(learning_rate= 0.002,n_estimators= 200,random_state=0)\nmodel_ada.fit(X_train, y_train)\n","ba0a907f":"# Making Prediction\npred_ada = model_ada.predict(X_test)","8ba89762":"# Calculating Accuracy Score\nada = accuracy_score(y_test, pred_ada)\nprint(ada)","808704f9":"# confusion Maxtrix\ncm7 = confusion_matrix(y_test, pred_ada)\nsns.heatmap(cm7\/np.sum(cm7), annot = True, fmt=  '0.2%', cmap = 'Blues')","4fa58ff4":"# \ud83c\udd70\ud83c\udd73\ud83c\udd70 \ud83c\udd71\ud83c\udd7e\ud83c\udd7e\ud83c\udd82\ud83c\udd83","d9961c81":"![mildHeartAttack-866257238-770x553.jpg](attachment:3ca96fd9-3434-4369-856b-b7405a67cbaa.jpg)","a1af7c34":"# \u24e2\u24df\u24db\u24d8\u24e3 \u24e3\u24e1\u24d0\u24d8\u24dd_\u24e3\u24d4\u24e2\u24e3","2f51bcc8":"# In This Analysis Use AdaBoost Algorithm","2b1ba6f8":"# \ud83c\udd65\ud83c\udd58\ud83c\udd62\ud83c\udd64\ud83c\udd50\ud83c\udd5b\ud83c\udd58\ud83c\udd69\ud83c\udd58\ud83c\udd5d\ud83c\udd56 ","fcc856c0":"# \u24d2\u24de\u24dd\u24d5\u24e4\u24e2\u24d8\u24de\u24dd \u24c2\u24d0\u24e7\u24e3\u24e1\u24d8\u24e7","5e2ef5f3":"# \ud83c\udd50\ud83c\udd52\ud83c\udd52\ud83c\udd64\ud83c\udd61\ud83c\udd50\ud83c\udd52\ud83c\udd68 \ud83c\udd62\ud83c\udd52\ud83c\udd5e\ud83c\udd61\ud83c\udd54","164cf0c3":"#                                              # Heart Attack Analysis","234f8766":"# \u24c2\u24d8\u24dd-\u24c2\u24d0\u24e7 \u24dd\u24de\u24e1\u24dc\u24d0\u24db\u24d8\u24e9\u24d0\u24e3\u24d8\u24de\u24dd","f7bc4b69":"# Import Heart Attack Data Set \u2764","a07ab3d2":"# Import Libraries","3bb8a3cc":"# \ud83c\udd7f\ud83c\udd81\ud83c\udd74\ud83c\udd73\ud83c\udd78\ud83c\udd72\ud83c\udd83\ud83c\udd78\ud83c\udd7e\ud83c\udd7d**"}}