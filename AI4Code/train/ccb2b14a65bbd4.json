{"cell_type":{"ef72a199":"code","f3c67a24":"code","c60ea0d1":"code","c8e430b0":"code","7790174f":"code","ffd7554f":"code","2b698702":"markdown"},"source":{"ef72a199":"import numpy as np \nimport matplotlib.pyplot as plt","f3c67a24":"# height (cm)\nX = np.array([[147, 150, 153, 158, 163, 165, 168, 170, 173, 175, 178, 180, 183]]).T\n# weight (kg)\ny = np.array([[ 49, 50, 51,  54, 58, 59, 60, 62, 63, 64, 66, 67, 68]]).T\n# Visualize data \nplt.plot(X, y, 'b*')\nplt.axis([140, 190, 45, 75])\nplt.xlabel('Height (cm)')\nplt.ylabel('Weight (kg)')\nplt.show()","c60ea0d1":"# Building Xbar \none = np.ones((X.shape[0], 1))\nXbar = np.concatenate((one, X), axis = 1)\n\n# Calculating weights of the fitting line \nA = np.dot(Xbar.T, Xbar)\nb = np.dot(Xbar.T, y)\nw = np.dot(np.linalg.pinv(A), b)\nprint('w = ', w)\n# Preparing the fitting line \nw_0 = w[0][0]\nw_1 = w[1][0]\nx0 = np.linspace(145, 185, 2, endpoint=True)\ny0 = w_0 + w_1*x0\n\n# Drawing the fitting line \nplt.plot(X.T, y.T, 'ro')     # data \nplt.plot(x0, y0)               # the fitting line\nplt.axis([140, 190, 45, 75])\nplt.xlabel('Height (cm)')\nplt.ylabel('Weight (kg)')\nplt.show()","c8e430b0":"y1 = w_1*155 + w_0\ny2 = w_1*160 + w_0\n\nprint('D\u1ef1 \u0111o\u00e1n c\u00e2n n\u1eb7ng c\u1ee7a ng\u01b0\u1eddi c\u00f3 chi\u1ec1u cao 155 cm: %.2f (kg), s\u1ed1 li\u1ec7u th\u1eadt: 52 (kg)'  %(y1))\nprint('D\u1ef1 \u0111o\u00e1n c\u00e2n n\u1eb7ng c\u1ee7a ng\u01b0\u1eddi c\u00f3 chi\u1ec1u cao 160 cm: %.2f (kg), s\u1ed1 li\u1ec7u th\u1eadt: 56 (kg)'  %(y2))","7790174f":"from sklearn import datasets, linear_model\n\n# fit the model by Linear Regression\nregr = linear_model.LinearRegression(fit_intercept=False) # fit_intercept = False for calculating the bias\nregr.fit(Xbar, y)\n\n# Compare two results\nprint('Nghi\u1ec7m t\u00ecm \u0111\u01b0\u1ee3c b\u1eb1ng scikit-learn  : ', regr.coef_) \nprint('Nghi\u1ec7m t\u00ecm \u0111\u01b0\u1ee3c t\u1eeb ph\u01b0\u01a1ng tr\u00ecnh: ', w.T)","ffd7554f":"import numpy as np \nimport matplotlib.pyplot as plt\n\n# height (cm)\nX = np.array([[147, 150, 153, 158, 163, 165, 168, 170, 173, 175, 178, 180, 183, 150]]).T\n# weight (kg)\ny = np.array([[ 49, 50, 51,  54, 58, 59, 60, 62, 63, 64, 66, 67, 68, 90]]).T\n\n# Building Xbar \none = np.ones((X.shape[0], 1))\nXbar = np.concatenate((one, X), axis = 1)\n\n# Calculating weights of the fitting line \nA = np.dot(Xbar.T, Xbar)\nb = np.dot(Xbar.T, y)\nw = np.dot(np.linalg.pinv(A), b)\nprint('w = ', w)\n# Preparing the fitting line \nw_0 = w[0][0]\nw_1 = w[1][0]\nx0 = np.linspace(145, 185, 2, endpoint=True)\ny0 = w_0 + w_1*x0\n\n# Drawing the fitting line \nplt.plot(X, y, 'ro')     # data \nplt.plot(x0, y0)               # the fitting line\nplt.axis([140, 190, 45, 95])\nplt.xlabel('Height (cm)')\nplt.ylabel('Weight (kg)')\nplt.show()","2b698702":"Trong tr\u01b0\u1eddng h\u1ee3p c\u00f3 nhi\u1ec5u, v\u1edbi m\u1ed9t c\u1eb7p d\u1eef li\u1ec7u (150 cm, 70kg), k\u1ebft qu\u1ea3 \u0111\u00e3 sai"}}