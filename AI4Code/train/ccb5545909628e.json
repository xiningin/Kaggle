{"cell_type":{"f00b8a13":"code","f6a604e2":"code","16649275":"code","48cd1c2f":"code","95710b7c":"code","e45753f3":"code","d01c3ee6":"code","53375864":"code","f14cde31":"code","d4abaf82":"code","b5c41b2b":"code","4a5043b0":"code","240a87c9":"code","21c45a7c":"code","f33bce05":"code","09a5f946":"code","95e8f48f":"code","65422e77":"code","c663e27b":"code","f90e2033":"code","da7be3ed":"code","48102843":"code","b4a49659":"code","b7567034":"code","18bfa38e":"code","ea202756":"code","a27c6b49":"code","299166ff":"code","9b3fe258":"code","fc112a51":"code","ccfbeefa":"markdown","0ac95f90":"markdown","a2e87864":"markdown"},"source":{"f00b8a13":"import pandas as pd\nimport numpy as np\n\n\nfrom tensorflow import keras\nfrom tensorflow.keras.datasets import mnist\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Activation, Dense, Dropout\nfrom tensorflow.keras.optimizers import Adam\n\n\nfrom sklearn.metrics import classification_report, confusion_matrix","f6a604e2":"#Torna os valores numpy mais f\u00e1ceis de ler.\nnp.set_printoptions(precision=3, suppress=True)\n\nimport tensorflow as tf\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.layers.experimental import preprocessing","16649275":"df = pd.read_csv(\"..\/input\/ann-dataset-label11\/anndataset_n_l Label1.1.csv\")\ndf.head()","48cd1c2f":"df.info()","95710b7c":"df.set_index('label', inplace=True)\ndf.head(2000)","e45753f3":"df.columns","d01c3ee6":"df.values","53375864":"df.select_dtypes(include=['object'])","f14cde31":"df.select_dtypes(include=['float'])","d4abaf82":"df.isnull().sum()","b5c41b2b":"train_df = pd.read_csv(\"..\/input\/ann-dataset-label11\/anndataset_n_l Label1.1.csv\")\n\ntrain_df.head(n = 3300)","4a5043b0":"test_df = pd.read_csv(\"..\/input\/ann-dataset-label11\/anndataset_n_l Label1.1.csv\")\n\ntest_df.head(n = 1000)","240a87c9":"train = pd.read_csv(\"..\/input\/ann-dataset-label11\/anndataset_n_l Label1.1.csv\")","21c45a7c":"print(\"Quantidade de elementos de treino: {}\". format(len(train)))\nprint(train.head())","f33bce05":"Y = train[\"label\"]\nX = train.drop(labels = [\"label\"],axis = 1)\nprint(X.head())","09a5f946":"print(Y)","95e8f48f":"print(X)","65422e77":"# definir o modelo com keras\n# inicializar o modelo sequencial\nmodel = Sequential()\n# inicializar a primeira camada, com 30 neur\u00f4nios, 20 entradas utilizando a fun\u00e7\u00e3o ReLU\nmodel.add(Dense(30, input_dim=20, activation='relu'))\n# inicializar a segunda camada com 20 neur\u00f4nios e a fun\u00e7\u00e3o ReLU\nmodel.add(Dense(20, activation='relu'))\n# inicializar a \u00faltima camada (camada de sa\u00edda) com um neur\u00f4nio e a fun\u00e7\u00e3o Sigmoid\nmodel.add(Dense(2, activation='sigmoid'))\n","c663e27b":"# compilar o modelo keras\nmodel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","f90e2033":"normalize = preprocessing.Normalization()","da7be3ed":"abalone_train = pd.read_csv(\n    \"..\/input\/ann-dataset-label11\/anndataset_n_l Label1.1.csv\",\n    names=[\"filename\",\"label\",\"u-r\", \"F378-r\", \"F395-r\", \"F410-r\", \"F430-r\",\n           \"g-r\", \"F515-r\", \"r-F660\", \"r-i\",\"r-F861\",\"r-z\"])\n\nabalone_train.head()\n","48102843":"abalone_features = abalone_train.copy()\nabalone_labels = abalone_features.pop('label')","b4a49659":"abalone_features = np.array(abalone_features)\nabalone_features","b7567034":"abalone_model = tf.keras.Sequential([\n  layers.Dense(64),\n  layers.Dense(1)\n])\n\nabalone_model.compile(loss = tf.losses.MeanSquaredError(),\n                      optimizer = tf.optimizers.Adam())","18bfa38e":"normalize = preprocessing.Normalization()","ea202756":"data = pd.read_csv(\"..\/input\/ann-dataset-label11\/anndataset_n_l Label1.1.csv\")\ndata.head()","a27c6b49":"# definir o modelo com keras\n# inicializar o modelo sequencial\nmodel = Sequential()\n# inicializar a primeira camada, com 30 neur\u00f4nios, 20 entradas utilizando a fun\u00e7\u00e3o ReLU\nmodel.add(Dense(30, input_dim=20, activation='relu'))\n# inicializar a segunda camada com 20 neur\u00f4nios e a fun\u00e7\u00e3o ReLU\nmodel.add(Dense(20, activation='relu'))\n# inicializar a \u00faltima camada (camada de sa\u00edda) com dois neur\u00f4nios e a fun\u00e7\u00e3o Softmax\nmodel.add(Dense(2, activation='softmax'))\n","299166ff":"# compilar o modelo keras\nmodel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n","9b3fe258":"results = pd.DataFrame({\n    \"filename\": test_df[\"filename\"].values,\n    \"label\": np.random.choice(train_df[\"label\"].unique(), test_df.shape[0])\n})\n\nresults.head( n = 3000 )","fc112a51":"#results.to_csv(\"results_to_submit.csv\", index = False)","ccfbeefa":"**Treino**","0ac95f90":"**An\u00e1lise de Dados usando Pandas**","a2e87864":"# An\u00e1lise"}}