{"cell_type":{"d7ea3268":"code","906e92ce":"code","21b70347":"code","f3b1d5af":"code","8fe5aaad":"code","881ed185":"code","89d6c537":"code","79bae9cc":"code","070d9951":"code","b829c65e":"markdown","8e99a88d":"markdown","083e6b04":"markdown","63e11fdc":"markdown","eac15105":"markdown","937c8f2f":"markdown","86524029":"markdown"},"source":{"d7ea3268":"# =======================================================\n# TPS November 2021 - LazyPredict\n# =======================================================\n# Name: B\u00e1rbara Sulpis\n# Date: 1-nov-2021\n# Description: I will run an auto machine learning with the library \"LazyPredict\"\n#  This will run 29 models and throws the kpis of each model\n#  This is a good tool to check which algorithm perform better for the dataset\n#  NOTE: It delays a lot of time. In the free KAGGLE notebook could delay 9 hours\n#  I Strongly recommend to run it locally in your pc \n#  because in kaggle notebooks or google colab it hangs and doesn't reach to the end successfully\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\n\nfrom sklearn.model_selection import train_test_split\n\n#Lgbm\nimport lightgbm as lgb\n\n# roc\nimport sklearn.metrics as metrics   # Para la curva ROC\nimport matplotlib.pyplot as plt     # Para la curva ROC\n\n# ---------------------------------------------------------------------------------\n# Input data:\n# Go to file -> add or upload data -> \"Competition\" data tab \n#    and select the commpetition which you want to add the csv data data \n#    in this example I worked with \"Tabular Playground Oct 2021\"\n# files are available in the read-only \"..\/input\/\" directory\n# ---------------------------------------------------------------------------------\n\ndata = pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/train.csv\")        \nsubm = pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/test.csv\")        \n\n","906e92ce":"# We have to install lazypredict library to kaggle notebook because it is not included.\n%pip install lazypredict","21b70347":"# We install Lazypredict after instalation\nfrom lazypredict.Supervised import LazyClassifier,LazyRegressor","f3b1d5af":"# Make sampling of the data because the dataset is too big \ndatasam =  data.sample(n=100000)","8fe5aaad":"# --------------------------------------------------------------------\n#     TARGET\n# --------------------------------------------------------------------\ny = datasam['target']\nX = datasam.drop(['target', 'id'], axis=1)","881ed185":"# --------------------------------------------------------------------\n#     SPLIT TRAIN - TEST - VALIDATION\n# --------------------------------------------------------------------\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=123)","89d6c537":"# --------------------------------------------------------------------\n#     CLASSIFIER\n# --------------------------------------------------------------------\nclassi=LazyClassifier(verbose=0,predictions=True)","79bae9cc":"# --------------------------------------------------------------------\n#     FIT\n# --------------------------------------------------------------------\nmodels_c,predictions_c=classi.fit(X_train, X_test, y_train, y_test)","070d9951":"# --------------------------------------------------------------------\n#     OUTPUT\n# --------------------------------------------------------------------\nmodels_c","b829c65e":"NOTE: The algorithm elapsed a total of 4 hours in my personal pc: i7, 16GB","8e99a88d":"# Conclusion\nWith LazyPredict we won't get our final model to implement in production, but we can have an aproximation of which models perform better than others. \n\nIn this case, for \"TPS Nov 2021\" we colud work directly with the first 3 or 4 models and may think on an ensemble solution on those type of algorithms.","083e6b04":"![](https:\/\/storage.googleapis.com\/kagglesdsdata\/datasets\/1688372\/2766787\/LazyPredict_Output.JPG?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=databundle-worker-v2%40kaggle-161607.iam.gserviceaccount.com%2F20211101%2Fauto%2Fstorage%2Fgoog4_request&X-Goog-Date=20211101T184743Z&X-Goog-Expires=345599&X-Goog-SignedHeaders=host&X-Goog-Signature=6c1cd084aba59beeeff0e6693e6a7ef90622da8fada973655f2d9ba938c4dabb397239ee2ddb904411d1bcf42b37129db61807b0f198f2a80a293618aaaae73c4caf876e905454c513271a987644ddf59149a1cf5f772994c3c03f83130270c2d51c98b693388167c1d278a601581756f8c492378463407d6a145dab84a7bef8507349aec4059a6203a87c99fe46e7b595e5a7ea66371583a4ca6a69d845cd147dd4d15550cfb20a8df8b2ab073a877642eab1af0cf3d11bb805af546bbcb2c8d20701e9256a0d060cc162d112992e4e4bf68d298099db1d2a7cb3099bde7c082ebf7aa4ac7421b399c3069be31294ff9c7f54db70ac34c6315e533532310164)\n\n","63e11fdc":"# Installation of LazyPredict in the notebook","eac15105":"# Dataset Sampling\nThe dataset has 1M rows, so to make a model comparisson is good to take a sample of the population.\n\nWe can assume that the random sample is representative, so, the algorithm results will be trustable","937c8f2f":"# Fitting\nWe ran the algorithm. It elapses many hours.","86524029":"100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 29\/29 [3:52:23<00:00, 480.82s\/it]"}}