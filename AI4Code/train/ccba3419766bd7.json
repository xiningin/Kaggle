{"cell_type":{"264aa48b":"code","c47649dd":"code","86578f7f":"code","7bbae251":"code","b9dd35fb":"code","3b6e7f54":"code","30d53aa0":"code","f8b0803f":"code","c253c0b6":"code","14310a93":"code","3df9f1b1":"code","aec55526":"code","bda97760":"code","662d6bb3":"code","30ea242f":"code","7c685855":"markdown","a4b2d07d":"markdown","d76781fc":"markdown","3acb1f01":"markdown"},"source":{"264aa48b":"# https:\/\/www.openml.org\/d\/1464\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom keras.utils import np_utils\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nimport pickle\nimport os","c47649dd":"print(os.listdir(\"..\/input\"))","86578f7f":"df = pd.read_csv(\"..\/input\/blood-transfusion-service-center.csv\")\ndf.head()","7bbae251":"df = df.dropna(how='all')","b9dd35fb":"df[\"Class\"].value_counts()","3b6e7f54":"from sklearn.utils import resample\n\ndf_majority = df[df.Class==2]\ndf_minority = df[df.Class==1]\n\n# Upsample minority class\ndf_minority_upsampled = resample(df_minority, \n                                 replace=True,     # sample with replacement\n                                 n_samples=178,    # to match majority class\n                                 random_state=42) # reproducible results\n\n# Combine majority class with upsampled minority class\ndf = pd.concat([df_majority, df_minority_upsampled])\n\n# Display new class counts\ndf.Class.value_counts()","30d53aa0":"df[\"Class\"].value_counts()","f8b0803f":"X = df.drop(['Class'], axis=1).values\n#X = StandardScaler().fit_transform(X)\nY = df['Class']","c253c0b6":"X_Train, X_Test, Y_Train, Y_Test = train_test_split(X, Y, test_size = 0.30, random_state = 101)","14310a93":"trainedforest = RandomForestClassifier(n_estimators=700).fit(X_Train,Y_Train)\npredictionforest = trainedforest.predict(X_Test)\ntrainedforest.score(X_Train, Y_Train)","3df9f1b1":"trainedforest = RandomForestClassifier(n_estimators=700).fit(X,Y)","aec55526":"# Saving model to disk\npickle.dump(trainedforest, open('model.pkl','wb'))","bda97760":"# Loading model to compare the results\nmodel = pickle.load(open('model.pkl','rb'))","662d6bb3":"print(model.predict([[2,  430, 10350,  86]]))","30ea242f":"p = model.predict(X_Test)\n#print(X_Test)\nprint(list(p).count(1))\nprint(list(p).count(2))","7c685855":"## This dataset was retrieved from: https:\/\/www.openml.org\/d\/1464\n### Author: Prof. I-Cheng Yeh\nSource: UCI <br>\nTo cite: Yeh, I-Cheng, Yang, King-Jang, and Ting, Tao-Ming, \"Knowledge discovery on RFM model using Bernoulli sequence\", Expert Systems with Applications, 2008. <br>\n\nData taken from the Blood Transfusion Service Center in Hsin-Chu City in Taiwan -- this is a classification problem. <br>\n\nTo demonstrate the RFMTC marketing model (a modified version of RFM), this study adopted the donor database of Blood  Transfusion Service Center in Hsin-Chu City in Taiwan. The center passes their blood transfusion service bus to one university in Hsin-Chu City to gather blood donated about every three months. To build an FRMTC model, we selected 748 donors at random from the donor database.","a4b2d07d":"### Label\n#### The target attribute is a binary variable representing whether he\/she donated blood in March 2007 (2 stands for donating blood; 1 stands for not donating blood).","d76781fc":"# Blood transfusion service center","3acb1f01":"### Features\n#### V1: Recency - months since last donation <br>\n#### V2: Frequency - total number of donation <br>\n#### V3: Monetary - total blood donated in c.c. <br>\n#### V4: Time - months since first donation), and a binary variable representing whether he\/she donated blood in March 2007 (1 stand for donating blood; 0 stands for not donating blood)."}}