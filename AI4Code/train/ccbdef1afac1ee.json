{"cell_type":{"0193cdf9":"code","13de44e8":"code","6b99fb66":"code","2ab1858d":"code","1a44ed57":"code","7ea23055":"code","3d94cf50":"code","007f704a":"code","c91220af":"code","0abdc6aa":"code","cfc2a997":"code","0a763583":"code","38cbe100":"code","a7b28605":"markdown","274665e8":"markdown","7ad020a5":"markdown","3af939a2":"markdown","bedd31ed":"markdown"},"source":{"0193cdf9":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTFB5FUzbkBrIpkyouf_8hnjGdbSGgON-zsKYN4Vpei-0kaY1WM&usqp=CAU',width=400,height=400)","13de44e8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn import feature_extraction, linear_model, model_selection, preprocessing\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6b99fb66":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsdepressioncsv\/depression.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'depression.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","2ab1858d":"df.head()","1a44ed57":"fig = px.treemap(df, path=['emad'], values='epad',\n                  color='epad', hover_data=['emad'],\n                  color_continuous_scale='Rainbow')\nfig.show()","7ea23055":"ax = df.plot(figsize=(15,8), title='Depression Medication')\nax.set_xlabel('epad,epan,ewad,ewan,emad,eman')\nax.set_ylabel('Count')","3d94cf50":"df.iloc[0]","007f704a":"df.plot.hist()","c91220af":"df.plot(kind = 'hist', stacked = False, bins = 100)","0abdc6aa":"from pandas.plotting import scatter_matrix\nscatter_matrix(df, figsize= (8,8), diagonal='kde', color = 'b')\nplt.show()","cfc2a997":"import seaborn as sns\ndef plot_correlation_map( df ):\n    corr = df.corr()\n    _ , ax = plt.subplots( figsize =( 8 , 6 ) )\n    cmap = sns.diverging_palette( 220 , 10 , as_cmap = True )\n    _ = sns.heatmap(\n        corr, \n        cmap = cmap,\n        square=True, \n        cbar_kws={ 'shrink' : .9 }, \n        ax=ax, \n        annot = True, \n        annot_kws = { 'fontsize' : 12 }\n    )\n\nplot_correlation_map( df )","0a763583":"df.hist()","38cbe100":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTXM0Y1smfhFyyGi0LXZPPSUCHWLgTy6tXAI2JE9ZNdSKsQH4LQ&usqp=CAU',width=400,height=400)","a7b28605":"#Codes from Sanket Parate https:\/\/www.kaggle.com\/sanketparate5\/data-visualization-with-pandas","274665e8":"Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke","7ad020a5":"#Codes from Santosh Kumar https:\/\/www.kaggle.com\/dssant85\/reason-for-heart-disease\/notebook","3af939a2":"researchgate.net","bedd31ed":"openforwards.com"}}