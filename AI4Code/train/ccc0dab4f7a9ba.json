{"cell_type":{"2c7c130b":"code","d4b4c87d":"code","ffaf9f30":"code","5beab2d7":"code","0d95dc42":"code","3e6a40f3":"code","ef1d744d":"code","0cdf0bdc":"code","b1d413fd":"code","d0dd3bb6":"code","949bd312":"code","73ee5a81":"code","d232b22e":"markdown","39902aac":"markdown"},"source":{"2c7c130b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d4b4c87d":"import numpy as np\nimport pandas as pd","ffaf9f30":"glove_vectors = dict()","5beab2d7":"\nfile = open('..\/input\/glove6b\/glove.6B.100d.txt', encoding = 'utf-8')\nfor line in file:\n    values = line.split()\n    word = values[0]\n    vectors = np.asarray(values[1:])\n    glove_vectors[word] = vectors\nfile.close()    ","0d95dc42":"glove_vectors","3e6a40f3":"len(glove_vectors)","ef1d744d":"glove_vectors.get('houseuuu')\n","0cdf0bdc":"glove_vectors.get('house')\n","b1d413fd":"vec_dimension = 100\ndef get_vec(x):\n    arr  = np.zeros(vec_dimension)\n    text = str(x).split()\n    for t in text:\n        try:\n            vec = glove_vectors.get(t).astype(float)\n            arr = arr + vec\n        except:\n            pass\n    arr = arr.reshape(1,-1)[0]\n    return(arr\/len(text))","d0dd3bb6":"x = ['I love you',\n     'I love NLP and i will try to learn',\n    'this is word embedding']","949bd312":"x = ['I love you',\n     'I love NLP and i will try to learn',\n    'this is word embedding']\nfeatures = get_vec(x)\nfeatures","73ee5a81":"len(x_vectors)","d232b22e":"if a word not present in glove word vectors it will return null","39902aac":"### loading the pretrained glove word vectors of dimension 100"}}