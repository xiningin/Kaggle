{"cell_type":{"eb382937":"code","b48073bb":"code","e8178a4c":"code","9f87b611":"code","fc852b00":"code","3b38f85f":"code","04fe9fd7":"code","10f6c2be":"code","71434beb":"code","1e3c3fd5":"code","edda9baf":"code","8b35ce2e":"code","52deaf82":"code","ac3cf138":"code","0d58de40":"code","1e6584ce":"code","dddfac3e":"code","45fbe135":"code","53206645":"code","c612e270":"code","18a70e04":"code","0cf77b37":"code","1be44945":"code","4f1ce286":"code","550808c8":"code","e5b0384e":"code","bf6fc74b":"code","3c3a1601":"code","8ab26988":"code","413472bf":"code","f441fe19":"code","b406701e":"code","0a88b520":"code","1c6e46db":"code","5fde1850":"code","05342bb8":"code","9b0000e4":"code","2469cbbf":"code","4e48f738":"code","98418c80":"code","6b8a5de8":"code","3dd2ebc2":"code","c5be1b8b":"code","e31788d1":"code","19a76f4b":"code","f051a706":"code","3e861a84":"code","a8ddaf3f":"code","580b9396":"code","99719392":"code","5668282a":"code","a080c848":"code","f28613f9":"code","4b7e8e47":"code","27153e1d":"code","d1ffe206":"code","0db33068":"code","4836eb47":"code","d13a101d":"code","a91d0b52":"code","d272a3d5":"code","d6b1e99d":"code","d5eaaa8c":"markdown","4bf35a72":"markdown","5af80738":"markdown","e28ce4b5":"markdown","a7dcdc9b":"markdown","1bda82ff":"markdown","399a397e":"markdown","e74edbf2":"markdown","0443384d":"markdown","25cd9740":"markdown","b97829d2":"markdown","c74fd2b1":"markdown"},"source":{"eb382937":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n","b48073bb":"df = pd.DataFrame({\n    'name':['Ram','mary','Drik','John','Arav','lisa','Gud'],\n    'age':[23,78,22,19,45,33,20],\n    'gender':['M','F','M','M','M','F','M'],\n    'state':['california','texas','california','dc','california','dc','texas'],\n    'num_children':[2,0,4,3,2,1,1],\n    'num_pets':[3,1,0,5,2,2,1]})\nprint(df)","e8178a4c":"##Scatter Plot\ndf.plot(kind='scatter',x='num_children',y='num_pets',color='red')\nplt.show()","9f87b611":"##Barplot\ndf.plot(kind='bar',x='name',y='age')","fc852b00":"##BarPlot\ndf.groupby('state')['name'].nunique().plot(kind='bar')\nplt.show()","3b38f85f":"##StackedBarPlot\ndf.groupby(['state','gender']).size().unstack().plot(kind='bar',stacked=True)\nplt.show()","04fe9fd7":"#Line PLot\ndf.plot(kind='line',x='name',y='num_children')\nplt.show()","10f6c2be":"#Histogram\ndf.hist()","71434beb":"#Histogram\ndf[['age']].plot(kind='hist',bins=[0,20,40,60,80,100],rwidth=0.8)\nplt.show()","1e3c3fd5":"##Area Plot\ndf.plot.area()","edda9baf":"##BoxPlot\ndf.boxplot('age')","8b35ce2e":"pd.plotting.scatter_matrix(df)\nplt.show()","52deaf82":"##LinePlot\ntime = [0, 1, 2, 3]\nposition = [0, 10, 20, 30]\n##Normal X & Y axis plot\nplt.plot(time, position)\nplt.xlabel('Time (hr)') ##labelling the axis\nplt.ylabel('Position (km)')","ac3cf138":"##Scatter Plot\nx=[1,2,3,4,5,6,7,8,9,10]\ny=[11,23,46,56,76,87,56,22,99,76]\nplt.scatter(x,y,label='Scatter',color='g',marker='o',s=100) #k represents black color\nplt.xlabel('X Value')\nplt.ylabel('Y Value')\nplt.show()\nplt.ioff() ","0d58de40":"#Pie Plot\nhours=[8,2,8,2,4]\nactivity=['Sleep','Eat','Work','Play','Others']\ncol=['c','b','m','r','y']\nplt.figure(figsize=(9,9))\nplt.pie(hours,labels=activity,colors=col,shadow=True,startangle=0,explode=(0,0,0,0.2,0),autopct='%1.1f%%')\nplt.title('How time is in a Day')\nplt.ioff()\n","1e6584ce":"##BarPlot\ncar = ['Audi', 'BMW', 'Honda', 'Maruti', 'Toyota']\ncount = [20,45,65,60,35]\nplt.bar(car,count)\nplt.show()","dddfac3e":"##Grouped BarPlot\n\nmen_means = (20, 35, 30, 35, 27)\nwomen_means = (25, 32, 34, 20, 25)\n\nind = np.arange(5) \nwidth = 0.35       \nplt.bar(ind, men_means, width, label='Men')\nplt.bar(ind + width, women_means, width,\n    label='Women')\n\nplt.ylabel('Scores')\nplt.title('Scores by group and gender')\n\nplt.xticks(ind + width \/ 2, ('G1', 'G2', 'G3', 'G4', 'G5'))\nplt.legend(loc='best')\nplt.show()","45fbe135":"##Stacked bar plot\np1 = plt.bar(ind, men_means, width)\np2 = plt.bar(ind, women_means, width,\n             bottom=men_means)\n\nplt.ylabel('Scores')\nplt.title('Scores by group and gender')\nplt.xticks(ind, ('G1', 'G2', 'G3', 'G4', 'G5'))\nplt.yticks(np.arange(0, 81, 10))\nplt.legend((p1[0], p2[0]), ('Men', 'Women'))\n\nplt.show()","53206645":"tips = sns.load_dataset(\"tips\")## default dataset present in seaborn package","c612e270":"tips.head()## will display top 5 rows","18a70e04":"\nsns.relplot(x=\"total_bill\", y=\"tip\", data=tips) ##Relating variables with scatter plots","0cf77b37":"sns.relplot(x=\"total_bill\", y=\"tip\", hue=\"smoker\", data=tips);","1be44945":"sns.relplot(x=\"total_bill\", y=\"tip\", hue=\"smoker\", style=\"smoker\",data=tips);","4f1ce286":"sns.relplot(x=\"total_bill\", y=\"tip\", hue=\"smoker\", style=\"time\", data=tips);","550808c8":"sns.relplot(x=\"total_bill\", y=\"tip\", hue=\"size\", data=tips);","e5b0384e":"sns.relplot(x=\"total_bill\", y=\"tip\", size=\"size\", sizes=(15, 200), data=tips);","bf6fc74b":"\nsns.catplot(x=\"day\", y=\"total_bill\", data=tips);","3c3a1601":"sns.catplot(x=\"day\", y=\"total_bill\", jitter=False, data=tips);","8ab26988":"sns.catplot(x=\"day\", y=\"total_bill\", kind=\"swarm\", data=tips);","413472bf":"sns.catplot(x=\"total_bill\", y=\"day\", kind=\"swarm\", data=tips);","f441fe19":"sns.catplot(x=\"day\", y=\"total_bill\", hue=\"sex\", kind=\"swarm\", data=tips);","b406701e":"sns.catplot(x=\"size\", y=\"total_bill\", kind=\"swarm\",data=tips.query(\"size != 3\"));","0a88b520":"sns.catplot(x=\"smoker\", y=\"tip\", order=[\"No\", \"Yes\"], data=tips);","1c6e46db":"##Box Plot\nsns.catplot(x=\"day\", y=\"total_bill\", kind=\"box\", data=tips);","5fde1850":"sns.catplot(x=\"day\", y=\"total_bill\", hue=\"smoker\", kind=\"box\", data=tips);","05342bb8":"tips[\"weekend\"] = tips[\"day\"].isin([\"Sat\", \"Sun\"])\nsns.catplot(x=\"day\", y=\"total_bill\", hue=\"weekend\",kind=\"box\", dodge=False, data=tips);","9b0000e4":"sns.catplot(x=\"day\", y=\"total_bill\", hue=\"weekend\",kind=\"boxen\", dodge=False, data=tips);","2469cbbf":"#Violinplots\nsns.catplot(x=\"total_bill\", y=\"day\", hue=\"sex\",kind=\"violin\", data=tips);","4e48f738":"sns.catplot(x=\"day\", y=\"total_bill\", hue=\"sex\",kind=\"violin\", split=True, data=tips);","98418c80":"sns.catplot(x=\"day\", y=\"total_bill\", hue=\"sex\",kind=\"violin\", inner=\"stick\", split=True,\n            palette=\"pastel\", data=tips);","6b8a5de8":"g = sns.catplot(x=\"day\", y=\"total_bill\", kind=\"violin\", inner=None, data=tips)\nsns.swarmplot(x=\"day\", y=\"total_bill\", color=\"k\", size=3, data=tips, ax=g.ax);","3dd2ebc2":"\nsns.catplot(x=\"day\", y=\"total_bill\",kind=\"bar\", data=tips);","c5be1b8b":"sns.catplot(x=\"day\", kind=\"count\", palette=\"ch:.25\", data=tips)","e31788d1":"sns.catplot(x=\"day\", hue=\"sex\", kind=\"count\",palette=\"pastel\", edgecolor=\".6\",data=tips);","19a76f4b":"#Point plots\nsns.catplot(x=\"day\", y=\"total_bill\", hue=\"time\", kind=\"point\", data=tips);","f051a706":"\nsns.regplot(x=\"total_bill\", y=\"tip\", data=tips);","3e861a84":"sns.lmplot(x=\"total_bill\", y=\"tip\", data=tips); ##More linear relation with facetgrid","a8ddaf3f":"g = sns.lmplot(x=\"total_bill\", y=\"tip\", hue=\"smoker\", data=tips,markers=[\"o\", \"x\"])","580b9396":"g = sns.lmplot(x=\"total_bill\", y=\"tip\", col=\"smoker\", data=tips)","99719392":"g = sns.lmplot(x=\"total_bill\", y=\"tip\", col=\"day\", hue=\"day\",data=tips, col_wrap=2, height=3)","5668282a":"g = sns.lmplot(x=\"total_bill\", y=\"tip\", row=\"sex\", col=\"time\",data=tips, height=3)","a080c848":"sns.set_style('ticks',{\"xtick.major.size\": 12, \"ytick.major.size\": 12})\nsns.distplot(tips['total_bill'], kde = False, color ='red', bins = 30)","f28613f9":"sns.kdeplot(tips['total_bill'], color ='green',shade=True)","4b7e8e47":"g = sns.jointplot(x=\"total_bill\", y=\"tip\", data=tips)","27153e1d":"sns.jointplot(x ='total_bill', y ='tip', data = tips, kind ='kde')","d1ffe206":"g = sns.jointplot(x=\"total_bill\", y=\"tip\", data=tips, kind=\"reg\")","0db33068":"g = sns.jointplot(x=\"total_bill\", y=\"tip\", data=tips, kind=\"hex\")","4836eb47":"iris = sns.load_dataset(\"iris\")\ng = sns.pairplot(iris)","d13a101d":"g = sns.pairplot(iris, hue=\"species\")","a91d0b52":"g = sns.pairplot(iris, hue=\"species\", palette=\"husl\")","d272a3d5":"g = sns.pairplot(iris, corner=True) #Plot only the lower triangle of bivariate axes","d6b1e99d":"g = sns.pairplot(iris, diag_kind=\"kde\")","d5eaaa8c":"# Plotting of Categorical data","4bf35a72":"* regplot() performs a simple linear regression model fit and plot. lmplot() combines regplot() and FacetGrid.\n\n![image.png](attachment:image.png)","5af80738":"# KDEPlot(kernel Density Plot)\n* Fit and plot a univariate or bivariate kernel density estimate.","e28ce4b5":"# Seaborn","a7dcdc9b":"# Matplotlib\n","1bda82ff":"# Distribution Plot\n* Flexibly plot a univariate distribution of observations\n","399a397e":"# Visualisation of statistical relationship between variables","e74edbf2":"# Basic Visualisation with Python\n* Pandas Plot\n* Matplotlib\n* Seaborn\n* Bokeh","0443384d":"# PairPlot\n* Plot pairwise relationships in a dataset.","25cd9740":"# JointPlot\n* Draw a plot of two variables with bivariate and univariate graphs.","b97829d2":"# Functions to draw Linear Regression Models\n\n* lmplot() combines regplot() and FacetGrid. It is more computationally intensive and is intended as a convenient interface to fit regression models across conditional subsets of a dataset.\n\n![image.png](attachment:image.png)","c74fd2b1":"# **Pandas Plot**"}}