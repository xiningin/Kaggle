{"cell_type":{"9e30686a":"code","dbe5603e":"code","f9d07d6e":"code","1875f5b9":"code","85b1b476":"code","b1fc4f44":"code","8062113c":"code","c3752da8":"markdown","5eb9983b":"markdown","5754eb53":"markdown","2b0e4541":"markdown","e9adb252":"markdown","5acfd6f4":"markdown"},"source":{"9e30686a":"! conda install -y -c conda-forge  hvplot=0.5.2 bokeh==1.4.0","dbe5603e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport holoviews as hv\nfrom scipy.optimize import linprog\nimport hvplot.pandas  #noqa\n\n\nhv.extension('bokeh')\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f9d07d6e":"plant_names = ['alfalfa', 'corn', 'sorghum']\nconstraint_names = ['loam', 'sandy', 'alkaline', 'saline', 'crop rotation', 'water']\n\nj = 4  # soil type\nk = 3  # crop type\nl = 3  # applied water-yield coefficient\nm = 2  # water delivery\n\n# planting\n# X1 = np.array([])\n# growing\n# X2 = np.array([])\n# harvesting\n# x3 = np.array([])\n\n# planting\n## Assume fixed\n# C1 = np.array([])\n\n# labour\n## $5\/hour\n## Assume fixed\n# C2 = np.full(shape=(j, k, l, m), fill_value=5)\n\n# revenue\n## alfalfa, corn, sorghum\n## https:\/\/www.sagis.org.za\/conversion_table.html tonne = 39.3679 bu\n## https:\/\/grains.org\/markets-tools-data\/tools\/converting-grain-units\/\nC3 = np.array([[[73.38]*k,[2.75]*k,[2.46]*k]]*j)\n\n# nature\nP1 = np.array([0.25, 1-0.25]) #diversions\nP2 = np.array([0.6, 1-0.6]) # precipitation\n# soil type\nR1 = np.array(\n    [1700,  # loam\n     9600,  # sandy soil\n     16400,  # alkaline\n     4500]  # aline\n)\nR1_1 = np.array([np.ones((3,3)), np.zeros((3,3)), np.zeros((3,3)), np.zeros((3,3))])\nR1_2 = np.array([np.zeros((3,3)), np.ones((3,3)), np.zeros((3,3)), np.zeros((3,3))])\nR1_3 = np.array([np.zeros((3,3)), np.zeros((3,3)), np.ones((3,3)), np.zeros((3,3))])\nR1_4 = np.array([np.zeros((3,3)), np.zeros((3,3)), np.zeros((3,3)), np.ones((3,3))])\n\n# canal diversions\n## acre-feet\nR2_diversions = np.array([135000, 73100])\n\n# inches [4, 8]\n# acre feet [0.335, 0.67]\nR2_precipitation = np.array([0.335, 0.67])*np.sum(R1)\n\nER = np.sum(P1 * R2_diversions + P2 * R2_precipitation)\/2\n\n# minimum crop rotation\n## crop alfalfa, corn, sorghum\nB_rot = np.array([[-5, 1, 1],  # loam\n                  [-5, 1, 1],  # sandy soil\n                  [-3, 1, 1],  # alkaline\n                  [-3, 1, 1],  # saline\n                 ])\nB = np.repeat(np.expand_dims(B_rot, -1), l, -1)\n\n# Irrigation Water Input Coefficients\n## crop alfalfa, corn, sorghum\n##  preplant\n##   acre-inches [0, 4, 4]\n##   acre-feet [0, 0.335, 0.335]\nA1_preplant = np.array([0., 0.335, 0.335])\n##  growing\n##   acre-inches [0, 5*5, 4*3]\n##   acre-feet [0., 0.42*5, 0.335*3]\nA1_growing = np.array([0., 0.42*5., 0.335*3.])\n##  harvest\n##   acre-inches [6*4, 0, 0]\n##   acre-feet [0.5*4, 0, 0]\nA1_harvest = np.array([0.5*4, 0., 0.])\nA1 = A1_preplant + A1_growing + A1_harvest\nEA = np.repeat(np.expand_dims(A1, 0), l, 0) * np.full((j, k, l), 1)\n\n# crop yields\n## alfalfa, corn, sorghum\nA2_yield_soil = np.array([[1, 1, 1],  # loam\n               [1, 1-0.25, 1-0.1],  # sandy soil\n               [0.8, 0.6, 0.7],  # alkaline\n               [0.6, 0, 0],  # saline\n              ])\n## alfalfa, corn, sorghum\n## corn 5 - 16 stalks per bushel, 18000-22000 stalks per care | 135\n## https:\/\/www.uky.edu\/ccd\/sites\/www.uky.edu.ccd\/files\/cornshocks.pdf\n## https:\/\/mda.maryland.gov\/farm_to_school\/Documents\/f2s_corn_math.pdf\n## Alfalfa 86 bushels per acre in 2001, 140-160\n## https:\/\/www.uaex.edu\/publications\/pdf\/mp297\/MP297.pdf\n## https:\/\/www.hpj.com\/dreiling\/3-factors-to-boost-sorghum-yields\/article_1213a4c5-4143-5abf-a4f3-b79671bb3e5d.html\nA2_yield_acre = np.array([[4. * (1 + 3\/4 + 2\/4 + 1\/4), 135, 150]])\nA2 = A2_yield_soil * A2_yield_acre","1875f5b9":"def linear_programme(percent_of_water = 1):\n    c = -np.array(C3.flatten()) * np.repeat(np.expand_dims(A2, -1), l, -1).flatten() # negative of objective function\n    b = np.hstack((R1,\n                   0, \n                   ER*percent_of_water)).reshape(-1, 1) # constraint bounds\n    A = np.vstack((R1_1.flatten(),\n                   R1_2.flatten(),\n                   R1_3.flatten(),\n                   R1_4.flatten(),\n                   -B.flatten(),\n                   EA.flatten()))  # constraints\n\n    primal_result = linprog(c,A_ub=A, b_ub=b, options={'cholesky':False})\n\n    dual_c = b\n    dual_b = c\n    dual_A = -A.T\n    dual_result = linprog(dual_c, A_ub=dual_A, b_ub=dual_b, options={'cholesky':False})\n    \n    return (pd.DataFrame([primal_result.x.reshape((j, k, l)).sum((0, 2)).round(0)], \n                         columns=plant_names)\n            .assign(Revenue = [-primal_result.fun])\n            .assign(percent_of_water = percent_of_water)\n            .assign(**dict(zip(['price ' + c for c in constraint_names], \n                               dual_result.x.round(0)))))\n\nsimulation_results = (pd.concat([linear_programme((p+1)\/10) for p in range(10)], axis=0)\n                      .assign(percent_of_water = lambda df: df.percent_of_water * 100))","85b1b476":"(simulation_results.set_index('percent_of_water')\n .loc[:, plant_names]\n .hvplot(xlabel='Percent Expected Water (%)', ylabel='Acres Allocated',\n         title='Optimal Allocation of Land under Water Restrictions'))","b1fc4f44":"# which bounds are active\nprice_columns = (simulation_results\n                 .columns[simulation_results\n                          .columns\n                          .str.startswith('price')])\n(simulation_results\n .loc[:, ['percent_of_water'] + price_columns.tolist()]\n .melt(id_vars = 'percent_of_water', var_name='Constraint', value_name='Shadow Prices')\n .assign(Constraint = lambda df: df.Constraint.apply(lambda s: s.split()[1]))\n .replace({s: s.title() + ' (acre)' for s in constraint_names[:4]})\n .replace({'crop': 'Plant Rotation', 'water': 'Water  (feet\/acre)'})\n .hvplot(x='percent_of_water', y='Shadow Prices', by='Constraint',\n         ylabel = 'Implied (Shadow) Prices ($)',\n         xlabel='Percent Expected Water (%)', title='Implied Price of Constraint, under water restrictions'))","8062113c":"simulation_results.hvplot.line(x='percent_of_water', y='Revenue',\n                               ylabel='Revenue ($)', xlabel='Percent Expected Water (%)',\n                               title='Revenue under varying Water Restrictions')","c3752da8":"# Conclusion\nAs with any service, we must be very aware about how we position ourselves between the factors of Predictive Accuracy, Uncertainty Quantification and Explainability. While at the heart of these factors lies insight, value exists for well positioned products at each of these vertices. While our Linear Programme, assumes a risk-neutral view of the farmers decision- this may untrue in some circumstances, and our approach looks to clearly position itself between Predictive Accuracy and Explainability to forecasting optimal decision-making, while providing decision-support through transparent and explainable models. ","5eb9983b":"One of my all-time favourite papers of all time is a paper by Taylor and Young, which explores the the optimal pricing under water supply uncertainty. \n\nIn previous work, I have taken regression based approaches to price perceptions of water for consumers but here we explore at the producer side of the equations. The ability to explore and quantify optimal decisions for farmers can be critical in both managing risk and optimizing profitibility. While farmers stand as domain experts with deep knowledge of their farms and the market more broadly, quantitative methods can be seen as tools for both exploring insights from that knowledge in decision-support, as well as in communicating those insights to other stakeholders which farmers rely on. \n\nThese tools can help explore the impact of forecasts on decision-making and for companies offering this service serve as decision-enhancing tools, as opposed to insight substituting tools. While the distinction between decision-enhancing and insight-substituting serviecs is not always clear, entreprenuers face a risks in oppotunities in how they position themselves. For insight-substituting services, customers may be hesitant in adoption as services need to be both trustworthy and price-competitive against existing solutions, for decision-enhancing you may face a challenge in price your value-add to your customer, but avoid competiting against existing trusted and widely adopted alternatives. \n\nIn this notebook, we explore the Linear Programming approach taken by their paper. While this paper does provide a strong basis for the assumptions make in our model, we have looked to other sources where assumptions are unclear or may be more appropriately substited more more recent studies and reports. These have been commented in the code for those who look to explore this model more closely.\n\n\nTaylor, R.G. and Young, R.A., 1995. Rural-to-urban water transfers: measuring direct foregone benefits of irrigation water under uncertain water supplies. Journal of Agricultural and Resource Economics, pp.247-262.","5754eb53":"# Insight\nBy exploring our optimal land assightment under various levels of Expected Water Availibility, we can see not only the decision-making and substitution of farmers, but also the implied price farmers should be willing to pay to access more land, more water and perhaps certain fertilizers or equipment (by looking at the crop rotation constraint they currently face). \n\nLooking at these simulation results we can see that as water supply increase to its expected levels, the allocation of corn remains constant, while the allocation of alfalfa and sorghum increase and different rates before hitting  their land constraint. ","2b0e4541":"In exploring the sentitivity of the farmers optimal planting decision, we can investigate the shadow prices on our constraints, which are the implied pricing farmers should be willing to pay to loosen the constrain on that resource. As we can see from our simulation, are expected water availibility increase farms become less willing to pay for additional water and more willing to pay for rich fertile land.  ","e9adb252":"# Model\nIn the model presented by Taylor and Young, they explore the decision make by farmers between planting alfalfa, corn or sorghum. For farmers their decisions is not only affected by the price of these crops in the market, but also constraints and uncertainty is rainfall, water transfers for irrigation and land availibility across loam, sandy, alkaline and highly saline soil.  Each crop requires different amounts of water and is affected differently by the quality of soil it is placed under. Beyond land and water constraints farmers also face agronomic constraints which demand crops are rotated to ensure the long-term productivity and health of the farm. \n\nWhile the details of how this model is constructed in highly valuable I will leave this to those interested in exploring the code and the underlying research. At a high level in order the structure the constraints and objectives expressed by domain experts, the Taylor and Young Linear Programme is defined as follows:\n$$\n\\textit{Maximise:} \\\\\n\\sum_j \\sum_k \\sum_l C_{jkl} X_{jkl} \\\\\n\\\\\n\\textit{Subject to:} \\\\\n\\sum_k X_jkl \\leq R1_j\\\\\n\\sum_k B_k X_{jkl} \\geq 0\\\\\n\\sum_k \\sum_l E(A_{kl}) X_{jkl} \\leq E(R2)\\\\\nX_{jkl} \\geq 0\\\\\n$$\nWhere j represents our soil types, k our crops and l our applied water-yield coefficient. In this model R1 represents the land constrains, E(R2) our expected water constraints, B our crop rotation constraints and E(A) our expected water requirements for each crop. \n\nWhile many may argue that assumptions made of linearity is a high restrictive and naive assumption, we must remember this model is not only informed by the insights of Taylor and Young as economist but their engagement with domain experts.  In many cases the assumption of linearity can be deeply empowering in its ability to communicate and explore insights. In some models, constraints can be placed to more deeply explore elements of interaction between variables- but also while some relationships may be non-linear locally accross a well defined model, the relationships between variables can exhibit linear characteristics which are valuable to explore. ","5acfd6f4":"For farmers the ability to investigate their optimal decicisions under different scenarios can have a significant impact on revenues and their contribution margin. While may have a signicant impact on their long-term business planning. "}}