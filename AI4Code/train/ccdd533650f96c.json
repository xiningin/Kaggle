{"cell_type":{"8c7b9662":"code","a4db9413":"code","906dff7b":"code","4257bf65":"code","a7459a9f":"code","a8e6c568":"code","afbedb76":"code","fcbc2493":"code","44187730":"code","834b0a78":"code","0b5ef6ec":"code","e3eaa0b3":"code","0ec7227c":"code","1b13f9ca":"code","6bc50150":"code","4041246f":"code","773968e6":"code","6d4e669c":"code","eea9b659":"code","a05765bf":"code","6264e333":"code","2509485d":"code","acba73b5":"code","55134fc3":"code","0d73ac17":"code","ee17918a":"code","a8c6b917":"code","39fb32b0":"code","f8c0c739":"markdown","acb62f2e":"markdown","7285e393":"markdown","c876f468":"markdown","cdee6aed":"markdown","d3f0fa13":"markdown","148045b2":"markdown","91346a4e":"markdown","ebc71c2a":"markdown","79a912d3":"markdown","1028d8e3":"markdown","a8000b22":"markdown"},"source":{"8c7b9662":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\") #burda matplotlibin stilini se\u00e7iyoruz(arkas\u0131 karelere b\u00f6l\u00fcnm\u00fc\u015f). di\u011fer stilleri g\u00f6rmek i\u00e7in plt.style.avaliable yaz \u00e7al\u0131\u015ft\u0131r \u00e7\u0131kar. \nimport seaborn as sns\nfrom collections import Counter\n\nimport warnings \nwarnings.filterwarnings(\"ignore\") #Pythondan kaynakl\u0131 hatalar\u0131 g\u00f6sterme demek.\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a4db9413":"train_df=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassengerId=test_df[\"PassengerId\"]","906dff7b":"train_df.columns","4257bf65":"train_df.head()","a7459a9f":"train_df.describe()","a8e6c568":"train_df.info() #s\u00fctunlarla ilgili \u00f6zellikler.","afbedb76":"def bar_plot(variable):\n    \"\"\"\n    input: variable ex: \"Sex\"\n    output: barplot & value count\n    \n    \"\"\"\n    #get feature \n    var=train_df[variable]  \n    #count number of categorical variable (value)\n    varValue=var.value_counts() #hangi ba\u015fl\u0131ktan ka\u00e7 tane oldu\u011funu say\u0131yor.(value_counts)\n    \n    #visualize\n    plt.figure(figsize=(9,3)) #tablolar\u0131m\u0131z\u0131n boyutu\n    plt.bar(varValue.index,varValue) #s\u00fctun grafi\u011fi gibi t\u00fcr say\u0131lar\u0131n\u0131 g\u00f6rmemizi sa\u011fl\u0131yor.(x eksenine indexleri yaz y eksenine adetlerini)\n    plt.xticks(varValue.index,varValue.index.values) #x eksenindeki noktalar sadece bizim \u00e7e\u015fitlerimiz kadar olsun demek.\n    plt.ylabel(\"Frequency\") #y label ad\u0131 ( adet)\n    plt.title(variable) #tablo ba\u015fl\u0131\u011f\u0131 gelen s\u00fctunumuzun ad\u0131 olsun.\n    plt.show() #her zamanki gibi.\n    print(\"{}: \\n {}\".format(variable,varValue)) #ekrana gelen s\u00fctun ad\u0131n\u0131 ve hangi t\u00fcrden ka\u00e7ar tane oldu\u011funu yazd\u0131k.\n    ","fcbc2493":"category1=[\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"] #kategorik s\u00fctunlar\u0131m\u0131z\u0131 bir listeye att\u0131k.\nfor i in category1:\n    bar_plot(i) #kategorik s\u00fctunlar\u0131m\u0131z\u0131n hepsini tek tek \u00fcstteki fonksiyonumuza yollad\u0131k.","44187730":"category2=[\"Cabin\",\"Name\",\"Ticket\"] #bunlar \u00e7ok \u00e7e\u015fitli s\u00fctunlar oldu\u011fu i\u00e7in herhangi bir analiz yap\u0131nca anlaml\u0131 olmayan \u015feylerler kar\u015f\u0131la\u015fmak olas\u0131.\nfor i in category2:\n    print(\"{} \\n {}\".format(i,train_df[i].value_counts()))","834b0a78":"def hist(variable):\n    plt.figure(figsize=(9,3))\n    plt.hist(train_df[variable],bins=50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} Histogram\".format(variable))\n    plt.show()","0b5ef6ec":"numerical=[\"Age\",\"Fare\",\"PassengerId\"]\nfor i in numerical:\n    hist(i)","e3eaa0b3":"##Pclass vs Survived\ntrain_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"],as_index = False).mean().sort_values(by=\"Survived\",ascending=False)\n#tablodaki Pclass ve Survived s\u00fctunlar\u0131n\u0131 al bunlar\u0131 Pclass a g\u00f6re s\u0131n\u0131fland\u0131r. Ve ortalamas\u0131n\u0131 al. B\u00fcy\u00fckten k\u00fc\u00e7\u00fc\u011fe s\u0131rala.\n#Bu tablo ile hangi s\u0131n\u0131f insan\u0131n sa\u011f olma olas\u0131l\u0131\u011f\u0131n\u0131 g\u00f6zlemleyebiliriz.(1 sa\u011f 0 \u00f6l\u00fcyd\u00fc.)\n","0ec7227c":"train_df[[\"Sex\",\"Survived\"]].groupby([\"Sex\"],as_index = False).mean().sort_values(by=\"Survived\",ascending=False)\n#bu tablo ile kad\u0131n\u0131n hayatta kalma olas\u0131l\u0131\u011f\u0131n\u0131n daha \u00e7ok oldu\u011funu g\u00f6rebiliriz.","1b13f9ca":"train_df[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"],as_index = False).mean().sort_values(by=\"Survived\",ascending=False) #(mean dan sonraki \u00f6l\u00fcm oran\u0131na g\u00f6re b\u00fcy\u00fcktn k\u00fc\u00e7\u00fc\u011fe s\u0131ralamak i\u00e7in.)\n#yan\u0131nda bir karde\u015fi veya e\u015fi olanlar\u0131n hayatta kalma olas\u0131l\u0131\u011f\u0131 en y\u00fcksekmi\u015f.","6bc50150":"train_df[[\"Parch\",\"Survived\"]].groupby([\"Parch\"],as_index = False).mean().sort_values(by=\"Survived\",ascending=False)\n#Yan\u0131m\u0131zda 3 ki\u015filik bir ailemiz varsa kurtulma olas\u0131l\u0131\u011f\u0131m\u0131z daha y\u00fcksekmi\u015f.","4041246f":"#hangi s\u0131n\u0131ftan ka\u00e7 tane var?\ntrain_df[[\"Pclass\",\"Sex\"]].groupby([\"Pclass\"],as_index=False).count().sort_values(by=\"Sex\",ascending=False)","773968e6":"train_df[\"expensiveness\"]=[\"cheap\" if i<50.0 else \"expensive\" for i in train_df.Fare]\ndataexpensive=train_df[[\"expensiveness\",\"Survived\"]].groupby([\"expensiveness\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)\nplt.figure(figsize=(9,3))\nplt.bar(dataexpensive.expensiveness,dataexpensive.Survived,color=\"gray\")\nplt.title(\"The effect of wealth on survival\")\nplt.show()\nprint(dataexpensive.expensiveness[0],\":\",dataexpensive.Survived[0])\nprint(dataexpensive.expensiveness[1],\":\",dataexpensive.Survived[1])","6d4e669c":"#ayr\u0131k veriyi bulmak i\u00e7in olan form\u00fcl\u00fc kulland\u0131k.\ndef detect(df,features):\n    outlier_indices=[]\n    for i in features:\n        #1st quartile\n        q1=np.nanpercentile(df[i],25) #1.medyan\u0131 buluyor.\n        #3.quartile\n        q3=np.nanpercentile(df[i],75) #3.medyan\u0131 buluyor.\n        #IQR\n        \u0131qr=q3-q1  #form\u00fclden \n        #outlier step\n        outlier_step=\u0131qr*1.5  #form\u00fclden.\n        #detect outlier and their indeces\n        outlier_list_col=df[(df[i]<q1-outlier_step) | (df[i]>q3+outlier_step)].index #ayr\u0131k verinin indexini bulduk.\n        #store indeces\n        outlier_indices.extend(outlier_list_col) #outlier_indices dizimize ekledik.\n    \n    outlier_indices=Counter(outlier_indices) #liste i\u00e7indeki elemanlar\u0131n ka\u00e7ar tane oldu\u011funu bulur.\n    multiple_outliers=list(i for i,v in outlier_indices.items() if v>2) #e\u011fer ayn\u0131 veriden 2 tane varsa bul diziye at.\n    return multiple_outliers","eea9b659":"train_df.loc[detect(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","a05765bf":"#drop outliers  #d\u00fczeni bozan verileri sil.\ntrain_df=train_df.drop(detect(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]),axis=0).reset_index(drop=True)","6264e333":"train_df_len=len(train_df)\ntrain_df=pd.concat([train_df,test_df],axis=0).reset_index(drop=True)\ntrain_df","2509485d":"train_df.columns[train_df.isnull().any()] #i\u00e7inde null veri olan s\u00fctunlar\u0131 getir.","acba73b5":"train_df.isnull().sum() #hangi s\u00fctunda ne kadar bo\u015f karakter var onlar\u0131 bul.","55134fc3":"train_df[train_df[\"Embarked\"].isnull()] #embarked s\u00fctunun bo\u015f olan sat\u0131r\u0131 bul getir.\n#hangi limandan bindiklerini bilmedi\u011fimiz ki\u015filer 1.s\u0131n\u0131f yolcu ve 80 dolara bilet alm\u0131\u015f.","0d73ac17":"train_df.boxplot(column=\"Fare\",by=\"Embarked\")\nplt.show()\n#a\u015fa\u011f\u0131daki grafikte anla\u015f\u0131laca\u011f\u0131 gibi 80 ve daha \u00e7ok veren ki\u015filer en \u00e7ok C den kat\u0131lm\u0131\u015f.C nin medyan\u0131 80 e en yak\u0131n liman.Q olma ihtiamli \u00e7ok d\u00fc\u015f\u00fck \u00e7\u00fcnk\u00fc en ucuz biletler orda sat\u0131lm\u0131\u015f.","ee17918a":"train_df.Embarked=train_df[\"Embarked\"].fillna(\"C\") #burda da embarkedi bo\u015f olanlar\u0131 C yi att\u0131k.\ntrain_df[train_df[\"Embarked\"].isnull()]","a8c6b917":"train_df[train_df[\"Fare\"].isnull()]","39fb32b0":"train_df.Fare=train_df[\"Fare\"].fillna(train_df[train_df[\"Pclass\"]==3][\"Fare\"].mean())\n#s\u0131n\u0131f\u0131 3 olan ki\u015filer ortalama ne kadar  \u00f6demi\u015f onu bulduk.\u00d6demeyen ki\u015fi de ortalama o kadar \u00f6demi\u015ftir diyip onu kabul ettik.\ntrain_df[train_df[\"Fare\"].isnull()]  ","f8c0c739":"<a id=9><\/a>\n## Find Missin Value","acb62f2e":"<a id=\"4\"><\/a> \n## Categorical Variable\n\/\/\u00e7e\u015fitlerden olu\u015fan s\u00fctunlar (Kategorik De\u011fi\u015fkenler.)","7285e393":"* float64(2) : Fare and Age\n* int64(5) : Pclass,Sibsp,Parch,PassengerId and Survived\n* object(5) : Cabin,Ticket,Embarked,Name and Sex","c876f468":"<a id=8><\/a>\n# Missing Value\n* Find Missin Value\n * Fill Missin Value","cdee6aed":"<a id=\"7\" ><\/a>\n# Outlier Detection\n\/\/ayr\u0131k veri demek.Yani devam eden d\u00fczene uymayan.","d3f0fa13":"<a id=\"3\"><\/a> \n# Univariate Variable Analysis\n*Categorical Variable: Survived,Sex,Pclass,Embarked,Cabin,Name,Ticket,Sibsp and Parch\n\n*Numerical Variable: Age,PassengerId,Fare","148045b2":"<a id=\"2\"><\/a> \n# Variable Description  \n\/\/s\u00fctun incelemesi\n1. PassengerId : Unique id number to each passenger\n1. Survived : Passenger survive(1) or died(0)\n1. Pclass : Passenger class\n1. Name : name\n1. Sex : gender of passenger\n1. Age : age of passenger\n1. SibSp : Number of siblings\/spouses\n1. Parch : Number of parents\/children\n1. Ticket : Ticket number\n1. Fare : Amount of money spent on ticket \n1. Cabin : Cabin category \n1. Embarked : Port where passenger embarked (C=Cherbourg,Q=Queenstown,S=Southampton)","91346a4e":"<a id=\"1\"><\/a>  \/\/birinci link buraya y\u00f6nlendirsin demek\n# Load and check data","ebc71c2a":"<a id=\"5\"><\/a> \n## Numerical Variable\n\/\/say\u0131sal de\u011ferlerden olu\u015fan s\u00fctunlar. (Say\u0131sal De\u011fi\u015fkenler.)\nAge,PassengerId,Fare","79a912d3":"<a id=\"6\"><\/a>\n# Basic Data Analysis\nili\u015fkileri inceleyece\u011fiz.\n* Pclass-Survived\n* Sex-Survived\n* SibSp-Survived\n* Parch-Survived","1028d8e3":"# Introduction (giris)\n --ilk \u00f6nce konu hakk\u0131nda k\u0131sa bir bilgi.\nThe sinking of Titanic one of the most notorious shepwredcks in the history. In 1992,during her voyage,the titianic sank after colliding with an iceberg,killing 1502 out of 2224 passengers and crew.\n\n--sonra yapacaklar\u0131m\u0131z\n<font color='blue'>         \nContent:\n\n1. [Load and check data](#1) \n2. [Variable Description](#2) \n  * [Univariate Variable Analysis](#3) \n      * [Categorical Variable Analysis](#4)\n      * [Numerical Variable Analysis](#5) \n3. [Basic Data Analysis](#6)\n4. [Outlier Detection](#7)\n5. [Missing Value](#8)\n    * [Find Missin Value](#9)\n    * [Fill Missin Value](#10)","a8000b22":"<a id=10><\/a>\n## Fill Missin Value\n* Embarked has 2 missing value\n* Fare has only 1"}}