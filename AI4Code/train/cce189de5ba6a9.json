{"cell_type":{"95178d3b":"code","f14f604e":"code","0e417cab":"code","703c916c":"code","c000590f":"code","41fcf61d":"code","4be888c8":"code","55800469":"code","7485897a":"code","2cc0def2":"code","baa953b0":"code","a7149abc":"code","4bfa9122":"code","90ca57ba":"code","4652d836":"code","cd68ce57":"code","e04283a4":"code","ed7d76b0":"code","740964f6":"code","05c0090a":"code","8854efef":"code","c63cd5bb":"code","768b0b4e":"code","258d999e":"code","6d141576":"markdown","d7c92773":"markdown","f472a7e4":"markdown","e911e243":"markdown","4d9e1d43":"markdown","023eaee5":"markdown","0629dd03":"markdown","dcb97ff8":"markdown"},"source":{"95178d3b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f14f604e":"# THIS WILL CHECK THE POSITION OF A TEAM IF THEY WON OR NOT AND THE RETURN VALUE WE WILL GET\n# WE WILL USE IT TO SCATTER ON THE PLOT\n\ndef position(ratio,value):\n    if value == '1st':\n        return ratio\n    else:\n        return None","0e417cab":"# THIS WILL CALCULATE THE WIN RATIO\n\ndef win_ratio(win,loss):\n    w = int(win)\n    l = int(loss)\n    return w\/l","703c916c":"# THIS WILL CALCULATE GOAL DIFFERENCE\n\ndef goal_difference(gf,ga):\n    scored = int(gf)\n    conceded = int(ga)\n    return scored-conceded","c000590f":"# THIS WILL HELP TO CONVERT LARGE VALUES OF POUNDS IN HUMAN READABLE FORMAT\n# EG:- 1000000 -> 1M\n\ndef human_format(num):\n    magnitude = 0\n    while abs(num) >= 1000:\n        magnitude += 1\n        num \/= 1000.0\n    # add more suffixes if you need them\n    return '%.2f%s' % (num, ['', 'K', 'M', 'G', 'T', 'P'][magnitude])","41fcf61d":"mancity_df = pd.read_csv('\/kaggle\/input\/pl-big-six-dataset-from-0506-to-1920-seasons\/mancity.csv')\nmancity_df","4be888c8":"mancity_df = mancity_df.set_index('Season')\n\n# USING THOSE FUNCTIONS THAT WE CREATED THROUGH np.vectorize\nmancity_df['w\/l ratio'] = np.vectorize(win_ratio)(mancity_df['W'],mancity_df['L'])\nmancity_df['Pos'] = np.vectorize(position)(mancity_df['w\/l ratio'],mancity_df['Pos'])\nmancity_df['GD'] = np.vectorize(goal_difference)(mancity_df['GF'],mancity_df['GA'])\nmancity_df","55800469":"# THESE VALUES GOT FROM THIS WEBSITE https:\/\/www.transferleague.co.uk\/ AND THEN IT IS COVERTED\n# BY THE human_format function\nmc_list = [9.75,2.40,45.82,127.70,125.00,154.75,76.00,54.00,103.20,87.50,152.10,\n               168.85,272.20,69.75,155.55]\nmancity_df.insert(10,'money spent (\u00a3 in millions)',mc_list)\n\n# DATA AFTER CLEANING AND GETTING REQUIRED DATA\n\nmancity_df","7485897a":"manutd_df = pd.read_csv('\/kaggle\/input\/pl-big-six-dataset-from-0506-to-1920-seasons\/manutd.csv')\nmanutd_df","2cc0def2":"manutd_df = manutd_df.set_index('Season')\nmanutd_df['w\/l ratio'] = np.vectorize(win_ratio)(manutd_df['W'],manutd_df['L'])\nmanutd_df['Pos'] = np.vectorize(position)(manutd_df['w\/l ratio'],manutd_df['Pos'])\nmanutd_df['GD'] = np.vectorize(goal_difference)(manutd_df['GF'],manutd_df['GA'])\nmanutd_df","baa953b0":"mu_list = [19.50,18.60,61.75,35.75,21.00,27.20,52.90,63.00,67.70,145.50,103.60,\n          149.00,146.00,67.53,145.00]\nmanutd_df.insert(10,'money spent (\u00a3 in millions)',mu_list)\nmanutd_df","a7149abc":"arsenal_df = pd.read_csv('\/kaggle\/input\/pl-big-six-dataset-from-0506-to-1920-seasons\/arsenal.csv')\narsenal_df","4bfa9122":"arsenal_df = arsenal_df.set_index('Season')\narsenal_df['w\/l ratio'] = np.vectorize(win_ratio)(arsenal_df['W'],arsenal_df['L'])\narsenal_df['Pos'] = np.vectorize(position)(arsenal_df['w\/l ratio'],arsenal_df['Pos'])\narsenal_df['GD'] = np.vectorize(goal_difference)(arsenal_df['GF'],arsenal_df['GA'])\narsenal_df","90ca57ba":"arsenal_list = [36.90,13.90,31.00,15.75,10.00,14.50,53.23,52.30,42.50,95.60,15.00,\n               92.94,110.90,71.30,153.00]\narsenal_df.insert(10,'money spent (\u00a3 in millions)',arsenal_list)\narsenal_df","4652d836":"liverpool_df = pd.read_csv('\/kaggle\/input\/pl-big-six-dataset-from-0506-to-1920-seasons\/liverpool.csv')\nliverpool_df","cd68ce57":"liverpool_df = liverpool_df.set_index('Season')\nliverpool_df['w\/l ratio'] = np.vectorize(win_ratio)(liverpool_df['W'],liverpool_df['L'])\nliverpool_df['Pos'] = np.vectorize(position)(liverpool_df['w\/l ratio'],liverpool_df['Pos'])\nliverpool_df['GD'] = np.vectorize(goal_difference)(liverpool_df['F'],liverpool_df['A'])\nliverpool_df","e04283a4":"liverpool_list = [35.14,28.04,69.75,39.00,36.00,80.45,56.40,49.30,48.80,117.00,\n                 82.60,67.90,155.00,161.00,4.40]\nliverpool_df.insert(10,'money spent (\u00a3 in millions)',liverpool_list)\nliverpool_df","ed7d76b0":"chelsea_df = pd.read_csv('\/kaggle\/input\/pl-big-six-dataset-from-0506-to-1920-seasons\/chelsea.csv')\nchelsea_df","740964f6":"chelsea_df = chelsea_df.set_index('Season')\nchelsea_df['w\/l ratio'] = np.vectorize(win_ratio)(chelsea_df['W'],chelsea_df['L'])\nchelsea_df['Pos'] = np.vectorize(position)(chelsea_df['w\/l ratio'],chelsea_df['Pos'])\nchelsea_df['GD'] = np.vectorize(goal_difference)(chelsea_df['GF'],chelsea_df['GA'])\nchelsea_df","05c0090a":"chelsea_list = [111.90,12.00,40.50,24.20,23.50,94.60,87.80,92.00,105.91,118.30,\n               71.95,119.30,240.00,185.60,40.00]\nchelsea_df.insert(10,'money spent (\u00a3 in millions)',chelsea_list)\nchelsea_df","8854efef":"tottenham_df = pd.read_csv('\/kaggle\/input\/pl-big-six-dataset-from-0506-to-1920-seasons\/tottenham.csv')\ntottenham_df","c63cd5bb":"tottenham_df = tottenham_df.set_index('Season')\ntottenham_df['w\/l ratio'] = np.vectorize(win_ratio)(chelsea_df['W'],tottenham_df['L'])\ntottenham_df['Pos'] = np.vectorize(position)(chelsea_df['w\/l ratio'],tottenham_df['Pos'])\ntottenham_df['GD'] = np.vectorize(goal_difference)(chelsea_df['GF'],tottenham_df['GA'])\ntottenham_df","768b0b4e":"tottenham_list = [34.40,48.90,48.70,87.20,32.00,18.50,8.00,61.50,103.70,27.95,\n                 53.50,68.80,112.50,0.00,87.50]\ntottenham_df.insert(10,'money spent (\u00a3 in millions)',tottenham_list)\ntottenham_df","258d999e":"# THIS WILL SET ITS SIZE\nplt.figure(figsize=(40,20))\n\n# PLOT 1 WIN\/LOSS RATIO PLOT\n\n# THIS WILL SET FONT SIZE OF ENTIRE GRAPH\nplt.rc('font', size=15)\n\nwin_ratio_plot = plt.subplot(2,2,1)\n\n# SETTING UP LINE AND SCATTER GRAPH\nwin_ratio_plot.plot(mancity_df.index,mancity_df['w\/l ratio'],color='#06EEF9',label='Manchester City')\nwin_ratio_plot.scatter(mancity_df.index,mancity_df['Pos'],linewidths=5,marker='h',label='Titles Won by City')\n\nwin_ratio_plot.plot(manutd_df.index,manutd_df['w\/l ratio'],color='#E1333B',label='Manchester United')\nwin_ratio_plot.scatter(manutd_df.index,manutd_df['Pos'],color='#891D1D',linewidths=5,marker='h',label='Titles Won by United')\n\nwin_ratio_plot.plot(arsenal_df.index,arsenal_df['w\/l ratio'],color='#95118F',label='Arsenal')\n\nwin_ratio_plot.plot(liverpool_df.index,liverpool_df['w\/l ratio'],color='#FA4F04',label='Liverpool')\nwin_ratio_plot.scatter(liverpool_df.index,liverpool_df['Pos'],color='#B04A1D',linewidths=5,marker='h',label='Titles Won by Liverpool')\n\nwin_ratio_plot.plot(chelsea_df.index,chelsea_df['w\/l ratio'],color='#041CE9',label='Chelsea')\nwin_ratio_plot.scatter(chelsea_df.index,chelsea_df['Pos'],color='#101756',linewidths=5,marker='h',label='Titles Won by Chelsea')\n\nwin_ratio_plot.plot(tottenham_df.index,tottenham_df['w\/l ratio'],color='#169511',label='Tottenham Hotspur')\n\nwin_ratio_plot.grid()\nwin_ratio_plot.set_title(\"Big Six W\/L Ratio (Last 15 Years)\")\nwin_ratio_plot.set_xlabel(\"Seasons (2005-06 To 2019-20)\")\nwin_ratio_plot.set_ylabel('W\/L Ratio')\nwin_ratio_plot.legend()\n\n# PLOT 2 MONEY SPENT ON TRANSFERS BY EACH TEAM BY SEASONS PLOT\n\n# SETTING UP LINE GRAPH\nmoney_spent = plt.subplot(2,2,3)\nmoney_spent.plot(mancity_df.index,mancity_df['money spent (\u00a3 in millions)'],color='#06EEF9',label='Manchester City')\nmoney_spent.plot(manutd_df.index,manutd_df['money spent (\u00a3 in millions)'],color='#E1333B',label='Manchester United')\nmoney_spent.plot(arsenal_df.index,arsenal_df['money spent (\u00a3 in millions)'],color='#95118F',label='Arsenal')\nmoney_spent.plot(liverpool_df.index,liverpool_df['money spent (\u00a3 in millions)'],color='#FA4F04',label='Liverpool')\nmoney_spent.plot(chelsea_df.index,chelsea_df['money spent (\u00a3 in millions)'],color='#041CE9',label='Chelsea')\nmoney_spent.plot(tottenham_df.index,tottenham_df['money spent (\u00a3 in millions)'],color='#169511',label='Tottenham Hotspur')\n\nmoney_spent.grid()\nmoney_spent.set_title(\"Big Six Money Spent on Tranfers (Last 15 Years)\")\nmoney_spent.set_xlabel(\"Seasons (2005-06 To 2019-20)\")\nmoney_spent.set_ylabel(\"\u00a3 in millions\")\nmoney_spent.legend()\n\n# PLOT 3 WINS AND LOSE COMPARISON OF EACH TEAM \n\n# SETTING UP BAR GRAPH\nwins_and_lose = plt.subplot(2,2,2)\nteams = ['Manchester City','Manchester United','Arsenal','Liverpool','Chelsea','Tottenham Hotspur']\nteams_position = np.arange(len(teams))\n\ngames_win_loss_data = [[pd.to_numeric(mancity_df['Pld']).sum()],\n                       \n        [pd.to_numeric(mancity_df['W']).sum(),pd.to_numeric(manutd_df['W']).sum(),pd.to_numeric(arsenal_df['W']).sum(),\n        pd.to_numeric(liverpool_df['W']).sum(),pd.to_numeric(chelsea_df['W']).sum(),pd.to_numeric(tottenham_df['W']).sum()],\n                       \n        [pd.to_numeric(mancity_df['L']).sum(),pd.to_numeric(manutd_df['L']).sum(),pd.to_numeric(arsenal_df['L']).sum(),\n        pd.to_numeric(liverpool_df['L']).sum(),pd.to_numeric(chelsea_df['L']).sum(),pd.to_numeric(tottenham_df['L']).sum()]]\n\nbar_plot_1 = wins_and_lose.bar(teams_position - 0.25, games_win_loss_data[0], color = '#19BACE', width = 0.25, label='Total Games')\nbar_plot_2 = wins_and_lose.bar(teams_position , games_win_loss_data[1], color = '#09DA12', width = 0.25,tick_label=teams, label='Wins')\nbar_plot_3 = wins_and_lose.bar(teams_position + 0.25, games_win_loss_data[2], color = '#E74F61', width = 0.25, label='Lose')\n\nbar_label_1 = [570,570,570,570,570,570]\nbar_label_2 = games_win_loss_data[1]\nbar_label_3 = games_win_loss_data[2]\n\n# THIS FUNCTION WILL SET NUMBERS INSIDE THE BAR\ndef autolabel(rects,bar_label,wid,hei):\n    for idx,rect in enumerate(bar_plot_1):\n        height = rect.get_height()\n        wins_and_lose.text(rect.get_x() + wid\/2., hei*height,\n                bar_label[idx],\n                ha='center', va='bottom', rotation=90)\n        \nautolabel(bar_plot_1,bar_label_1,0.25,0.05) \nautolabel(bar_plot_2,bar_label_2,0.75,0.05)\nautolabel(bar_plot_3,bar_label_3,1.25,0.05)\n\nwins_and_lose.set_title(\"Games Played (Wins and Lose Comparison)\")\nwins_and_lose.set_xlabel(\"Teams (Big Six)\")\nwins_and_lose.set_ylabel(\"Total Games Played\")\nwins_and_lose.legend()\n\n# PLOT 4 GOALS COMPARISON\n\n# SETTING UP BAR GRAPH\ngoals_comparison = plt.subplot(2,2,4)\n\ngoals_scored_data = [[pd.to_numeric(mancity_df['GF']).sum(),pd.to_numeric(manutd_df['GF']).sum(),pd.to_numeric(arsenal_df['GF']).sum(),\n        pd.to_numeric(liverpool_df['F']).sum(),pd.to_numeric(chelsea_df['GF']).sum(),pd.to_numeric(tottenham_df['GF']).sum()],\n             \n             [pd.to_numeric(mancity_df['GA']).sum(),pd.to_numeric(manutd_df['GA']).sum(),pd.to_numeric(arsenal_df['GA']).sum(),\n        pd.to_numeric(liverpool_df['A']).sum(),pd.to_numeric(chelsea_df['GA']).sum(),pd.to_numeric(tottenham_df['GA']).sum()],\n              \n             [mancity_df['GD'].sum(),manutd_df['GD'].sum(),arsenal_df['GD'].sum(),liverpool_df['GD'].sum(),\n             chelsea_df['GD'].sum(),tottenham_df['GD'].sum()]]\n\nbar_plot_4 = goals_comparison.bar(teams_position - 0.25, goals_scored_data[0], color = '#09DA12', width = 0.25, label='Goals Scored')\nbar_plot_5 = goals_comparison.bar(teams_position , goals_scored_data[1], color = '#E74F61', width = 0.25,tick_label=teams, label='Goals Conceded')\nbar_plot_6 = goals_comparison.bar(teams_position + 0.25, goals_scored_data[2], color = '#F9B505', width = 0.25, label='Goal Difference')\n\nbar_label_4 = goals_scored_data[0]\nbar_label_5 = goals_scored_data[1]\nbar_label_6 = goals_scored_data[2]\n\ndef autolabel_2(rects,bar_label,wid,hei):\n    for idx,rect in enumerate(bar_plot_1):\n        height = rect.get_height()\n        goals_comparison.text(rect.get_x() + wid\/2., hei*height,\n                bar_label[idx],\n                ha='center', va='bottom', rotation=90)\n\nautolabel_2(bar_plot_4,bar_label_4,0.25,0.05) \nautolabel_2(bar_plot_5,bar_label_5,0.75,0.05)\nautolabel_2(bar_plot_6,bar_label_6,1.25,0.05)\n\ngoals_comparison.set_title(\"Goals Comparison (Scored, Concede and Difference)\")\ngoals_comparison.set_xlabel(\"Teams (Big Six)\")\ngoals_comparison.set_ylabel(\"Total Goals\")\ngoals_comparison.legend()\n\n# THIS WILL ARANGE ALL THE GRAPHS\nplt.tight_layout()\nplt.savefig('PL THE BIG SIX.png')\nplt.show()","6d141576":"****TOTTENHAM DATA****","d7c92773":"****ARSENAL DATA****","f472a7e4":"**MAKING SOME FUNCTIONS THAT WE WILL REQUIRED LATER******","e911e243":"****LIVERPOOL DATA****","4d9e1d43":"****CHELSEA DATA****","023eaee5":"****FIRST WE WILL GET MANCHESTER CITY DATA FROM THE YEARS 2005-06 TO 2019-20 SEASONS AND CLEAN IT UNTIL WE GET ALL THE REQUIRED DATA****","0629dd03":"****NOW WE WILL GET MANCHESTER UNITED DATA FROM THE YEARS 2005-06 TO 2019-20 SEASONS AND CLEAN IT UNTIL WE GET ALL THE REQUIRED DATA****","dcb97ff8":"****NOW PLOTTING THE DATA****"}}