{"cell_type":{"5513d8c6":"code","fcbdb26c":"code","00a9af56":"code","30f4ea1d":"code","84c3afa4":"code","5b27fd8c":"code","461d8215":"code","2e0b1a72":"code","6c56c812":"code","6b43a026":"code","6e801438":"code","4549abe0":"code","ef6245c1":"code","0d1447e4":"code","3f5de610":"code","aa125bcb":"code","3f115055":"code","d4809db1":"code","ffa1a627":"code","b392fe07":"code","d04d1ac8":"code","2c333369":"code","d8e0f576":"code","63c5d1d2":"code","ad80169a":"code","363c454f":"code","a95b0b82":"markdown","ff0dc5c7":"markdown","32ce58ce":"markdown","447c259d":"markdown","c892fc69":"markdown","172aa546":"markdown","ea2d68d7":"markdown","cabdefa4":"markdown","87df8cbe":"markdown","1eafd3ad":"markdown","a4d38eea":"markdown","92e8d84a":"markdown","26aa5090":"markdown","f36d92ba":"markdown","8db57beb":"markdown","5c7e1657":"markdown"},"source":{"5513d8c6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport lightgbm as lgb\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","fcbdb26c":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxMTEhUTExMVFhUXGBgbGRcYGBgYGBgaGBoXHhoYGBgYHSggHRolGxgYITEhJikrLi4uGB8zODMtNygtLisBCgoKDg0OGhAQGy0mICYtLS0tLS0tLS0tLS0tLS0tLS0wLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLf\/AABEIAKgBLAMBIgACEQEDEQH\/xAAbAAABBQEBAAAAAAAAAAAAAAAGAAIDBAUBB\/\/EAEkQAAECAwUEBgUJBgQGAwAAAAECEQADIQQFEjFBBlFhcSIygZGhsRNSwdHwBxQjQmJygpLhM0NTstLxFRYkwjRkc5OiszVEVP\/EABoBAAIDAQEAAAAAAAAAAAAAAAIDAQQFAAb\/xAAyEQACAgECAwUHBAIDAAAAAAAAAQIDEQQhEjFBBRNRkaEUIjJSYXGBM0LR8CPxscHh\/9oADAMBAAIRAxEAPwDxNEt4lwNECFNFyTMBDefnAsOLwMaJ5UxqGo8RHV2c5pc8PdEaEwBZilI2BJSpLprllmOEcNjDAYTXXWKchZBcFjGvYLaFdFbA7954HSFtsmdLW65GdPkFAGHXw90MXZkqHSU5p0hU8jvjZtFmSXAPJ\/jxhSbEU\/Vb25b8zHceBGAYn2QoLEU0Oh+N0QkboOZUsMy00VQg1BPn46xi3hcJAxSnI1QQcX4d44Zw2FqezAlDHIwIdhjoTWorD0oNYckLIimJEIh6UtHSrhE4OGoDRtbLzgmeSR+7VT8SO6MXEY1tlkAzziNMCuL1T7YCz4GTHmgltN5JwzAUBmVh6RfI5b8xSBUz+HiIKrdZ04CdcJrxKTQ7uMCnoaRSWDV0vFh4Ii5cmvsEdRLAOcOEotFiRK7IJsswrcmX9nJAVNUDUYDTtTGxeMh0zMz0FF3yodddIh2UsRXPKUn92rVqOh6n4rBBelzKRJmqcH6NZd3phLN+hgE9ynrI8M8fQ8pSI6BDwgwmjSwZYkiOx0COEQRA3DDcMPaJ7DYFzl4UBydSWSOZPlnAtpbslFMJrGzYNnlKGKYG3JcOeJ3cs+UEt1XLKkJxOFL1WrqhhXBoBXOKV63kMpParj9kfHCKk787RLVOnlN7GZeOGWMKQARpXvaMlZUvMxeTKLkmpO+r8zrD7PYipWFCcSju+KCFqRox0nCssyxLYVzizJspLPQefKCCRcBlqBUMSt1MP6kRa9Cgg4ksXPno1YniK07Etog2tQRQAjgw05xXnIOJ9D8NzgiXdyV9LUV93lFGbY2xBRGEb2p7IJSKzMtEqnR90VZoANSB8cYmn27DSXTj7ozTWGqL6i2\/AhhwhNDgIMAvWW2aK7\/fGwLElQd6kUI15wOgRcsNsVLyqk5pPsOhgJV55DIWOLLkyzlBZQY+HYY6Ehm1jWlW5E5IAwu1Qp3HL3iK867lAFSajcM9e+K7z1NKm+L2Y+77dgooYgTmesPeOEEmFKkJwVrmKCviOUBaHz9sX7DazLViSRxGYPOAkHPSxnvHZhnKsqUJzGbM1XPx4xXXLBbM9w+P0itZb2TPASThIrg1Lbi1fZFuUpGTnI1AKgaZEdlf7QBQlFxeGZV63GiaX6q2HSA\/mbPnygStliXJVhWGfIjqnkdfOPSJElxiNHY0LeO7hFibdKVowqAWkjIjIacjxBeHVXuOz5C5QTPKWeGKPCCa\/dlZknEqWCtIqU\/WT\/UPHhrA0YvKSksoQ01zGjPKCDYyWg2g4mb0ajUOHCpdIwWjf2IBNpLO\/olZfeRA2\/AyY80F16pGBbBhhVlyo\/bAUlDgfDwd27CZa6v0TXjhy41JgICTT+0ZqZuaBZUiL5s29s4lKMt0SiZRtI4mYxZs4nLNFQiuQQbFyXtBb+GrzR7IJ71lj0E\/EUh5S2zBPRLvxfzEDmxI\/wBQan9mr+ZFIKb7Qn0E+rn0Uzs6KsvdER5mR2iv8v4PGMNIfgENRHXrGyYpwJEdUmLl23fNtCxLkoK1cMgN6joOMem3BsbKsyQuZ9JO5dFH3QdftGu4B4XZbGtbhRi5Afs1sYucQueFIl54BSYsDcD1RxNfONy\/7JZ7MAgDABVKEly\/BzXioxdvbagIGCRVeq\/qp5et5eUBVsWVqKlkqUcyan+3CM2y6U3ubGm7Ok1xS2XqR2y3rmUPVGSRl7zFVqRPJs6lKASComgSAXJ4NG5YbjKCTOBJ9TMB8n0PlA5Ls5Qojh+Rl2C6VTSkkMk\/WOoDO2\/nBPY5UuSChNN5Bqrc57eXlFiXMCiOFBwDDdo8MnodZHaDQc0kNzjs5My6+Vn28CSZKLkmvbl8OIzJ0gA0FXOlO7I5xpSlYU6MHfd26aGBm+9qgxRJAJyMzNPYDmeOXODhFyeEVm0uZHel4Jl1W2IiiQBXdTQcYF7xvBc01YJ0SMu3eeMRTVlSipRJJzJqTEaouQqURMptkbQxoeY5ig2QQiJAYiCoc8QcSgw5oYkxIDEnDpbhiMxrBNct\/pBwzQAaDHkD97d5coGkGOkxEoKS3OUmg+td1yp3SQUoWz7gT9pqdo8YwLbYVSzhmBjyBB4gjMRTum+VyKdZBzSdOKTpyygyEyXapQKWUA2IVCknlm7\/AARFOdcofYv6fV8O0twRTKJFGjZu69lJovL1hpzbzFY5bLpmIBWk4kZv9ZP3gPOM\/C\/thbeTUVdd0Ntz0SzqRhRhUCCKVDEk5tGwhLJcEcsJBb3eyPLbut65CgUl6uUnI8W38YObsvlE9ISDhVmUGhDEZbxxHhAcjOu0sq9+aNudK6IIJFXrQe96QHbT7KpnFUxAEubz6K\/vACiuI5l4LrOXGFjwOgah7ogny2JDUD5M\/N\/D4eJjNxeUVWk+Z4xbLDMlKwzElJzD5EbwciOIjX2LLWk1AeUsZtqk9uRpz3QeXmEWkJlzkBYZRBqMOQ6CvWqMj3vGLcmzy7PasQIWgy1AHJQOJBwka0B6QoWNBFt3qUGnsxXA1JFycSUrASzIVXM5EF3gRSd+Wpg8t8spTNJQQFS1ijBuiqoanPmYAsRAyrFNG32d8Mh8tebAQ3C50EMMzT2QkE7te6JNDizsEmxo\/wBScv2as8usiCu9XEidl+ymb36qt8COxMhSrSRulqObZKRvPGCu9rKpUuYgdI4FgM9SUqYOS2bCOXMx+0N7fwePoTBHs9sjMtBStby5RyV9ZX3EnT7RplnBJs1sUJRTNnp9IsVCM0JbVvrHw4UeNa+NqpUp0y2XM5ulJ4nMngMuEXLdVjaHmZ9GmnbLCX9+poWRNmsEsUShG4VUtWr6qVx04CBLaDaaZaHT1JXqg1UPtH\/aKc4ybVbJk1RXMUVK3nQbgMgOAiOWglgEkk0AFSTuA1MUW2+Z6TS6CFPvPd+i\/viRqLht0WrquqZaD0QcIFVNSnmeAjfuzZsgpM9Kqn9nkfxqyHIHt0ghtKyFJCQEhAw4csLcBp3ZRwnVdoRj7te78en\/AKZFgsKJFJeLEwxK+sXzrokE6UpEs1KmJw\/eIJqGLUep4xsKIIYAB3LsGfnDF9IDRq6HVjXc8cYspOTy+ZgSpakKJCS5fMpJFDkX19kV7xvJFnSFzAzuQxGJR3BOdDrlWM7aTadMomXJIWsO6h1EnVvWL\/GkA9ptC5iitaipRzJz7Nw4CkWatO5by5CpWJcjQvy\/lzyUgYJfqjXio6nhl5xjw4JhKEXlFJYQhvJEBDVxIzQwiOOIVwkw5ZiMQLCHfN4nl3cTkR3RNZwdRrFyyJxKqfdCXJh8KK0q51nXT1TFtFwqYELGbdU++sactZSQQRuD+OsXJc3fWmnwPgwt2yC4EYIuIuR6QOPsmvjEydmlP+0A\/CT7Y30DzFdX9saFmQCMg3fURHez8TuBAvL2TmE9dPPCR21Pw4ieTsxPlkKRNAVmCAcqZ18DugjTkSAaD4zyixZ5pUQHzozEg7tRuiHdMngRHd0xSU4VKdQNSAWJ4Pl3nOI7VcaZhGFQlqJrTolzmwyPKLKbGc8O9y+VPinGLBAB7s31qT+jxXY6u2VbzFmKrZCakA40nkK8s84kRswsEH0oDZEJUG40gkAIrSm459jxPKSQxUC++hyetSafrHZHrW3ePoie6kzJaD6VSVqGSmwvzBLPnUMK5R23atUagUBD6HTv7oaoGjOaP+jHmIkKmZ0s+tMt9TlUd8RkrN5eSrNk0Z2NGpmK5cKvFlFkXkXBGeXeHyHviCZZ8ScaqEEtXwYVyi4SB0QFdXi53+JjgTGvKYoS5riuBQbTqUrvPxujzmWgtUZeMemXtLKZa3SoDAtqVPRO7tzjzuWx\/XyiTW7NjlSI0yxnE6EHNvZCYAPDELNc4g1klE3tkE\/6gnP6NVN9UQfJGP2uzCATYn\/iS5AHol580Vpr+sHUmQkGjM1dQC1MzU5RxhdpfrfhGZfNjnTR6OXNTLScwASpX4gcuArnXSMqVsNMLNOT+RWnbSC4oYU9g7o0LPJfkOPbUco5ITXrLao4g8fhAJN2GmaTkGgySffBPs3cUuytTFNyMxQYh9EDQHhXiYtWiQTkrLIt5AAPXTjF4qKUlTvSrP8AG\/wiUjrdbdZHhlLbyK3SxUZwa5VGZqaiIZ9ldWMpAPJhzz4w602xk0AIqaVAHE9sRWi3KCQUpJZ8mJrwGnCOKpyYQGxAnN6Z6a8fKBTaC7bTPHopUwS5baJJXM341Plo3eTSCAWtZf0kssTQkuR+Uc4nkTglnSWcuCDXk+fdExk4vKJayjzQ\/J9Mp9MP+2r3xyd8n0wN9OgvuQffHoq5yVVSoEGlN\/ueJ1BJFWJOo3jUcKQ72mzxA7uJ5WnYhZLenRQsegXHY8Pn7BrDfTor9gj2x6LaJlOggEjeaDwdoxbUhSsQKjTNnDPub2x3tFnid3cQJ\/yWv+Mn8p98ULRs2UkgTUkjTCX84OFWdKaEK\/M7cqxk2yXnm0Erpnd2gNtFzqSzrTXcP1iobCoa+EFFrs7cd3CMwo4t3e2DVjO4UY0qerJzFqTaVt1u4D3RSlJrFmXL4xMixXHPQnTaFb\/Ae7hFgW2Z63gPdFSWImSrMQtlmFceqLiLxm5Y\/BJ8xFmVeM0Ci\/8AxR\/TGYEiJpb74Bj4Qh1SNFV6TiGMzf8AVR7o5IvKaMlkfhTv+7FPSsOlAtTP43QI9VQz8K8jXRfk+vTz1wI\/piQ3zaCXxjP1Ef0xkyTwL74tSxAMsQprf7V5I0f8atOfpG16kvTd0YcvaC1fxjWnUQ38sZyn0r4QlI7IEZ7PV8q8kaP+P2n+MW3YEd3VjqNpbSCPpi5+ygv\/AOMZh4RGo744h0VL9q8kaszaa1DKcau\/Rl6\/haGjaa0v+149SX\/TB9sLs9Yp93mfOsyZkxBmgnEsYsDqGSmyIGWkQXbs7YbysM2bZ7ObNPl4gAJi1pxBIUkHFQpUCA7Agvuq1VPCKMrqVKXubJ4bwgKm7S2taSlU4lJcEYZeRoQ4TujPlSCsgJSpSiWCUgkngAMzEElGRppFiTNVLONCyhQdlJLEOCKEZFiaiFl+Faivdil6E67jtAb\/AE9oD0DyZjksSw6NSwJ5AxDIsE9dUSZqg5S6Za1DEMwWTmN0euG2zP8AFbsR6ReFVlxKQVEpUr0M\/pEGmLjnEuwqZCZaRZ1TVJNvm4vShKTj+bLcAJJ6PV8Ycqk3jJnz1sox4uHpn1f8Hk0hFosywopmSVkEAqRhJDh2EwVDgaReTtJawf25bR0S\/wCiI9qlBU9eC0TZyQV1mApKFY1YkJBUeiABUZxjejyevaWhLW5ejCE4qUopv6r+TdnbV2ws84lj6kunbgiRG1FtP\/2DX7Etv5Yx0igGQ7Y7g4wI1aar5V5I1rRtTagQ88\/kl\/0Qw7U2vCR6cn8ErKv2IxbYitCfOGJW\/V07okB1VKTXAvJGkjaK1DF9NQ5gIl1A\/BlDpe0dpxP6Y9iZY\/2xlkZkREtIcPnEi3TWv2ryRup2ntY\/fq\/JL9qYX+ZLSrOc4+7L\/pjGQo84e0cGqavlXkjSTe9pq05nb6ssZfhjiL8tQzmE\/hRXP7OUZ9cno0dK2eIJ7in5V5I0\/wDMVpFPSkDgiX\/TFVV+WkP9Ia59FGmrYc4rCYIrLiUBOmrG0V5IsKvqfX6Q1+yj+mKc29Z38Q9yfdDJiNYrTkDdDYlOyqK\/ajlot8w\/WPcn3RnzJyiaq8vdEk5JEVimHxM61LPIdJi2hMU5cWULaOkFU1jclw56NHUprDkjfHQdRCyykPCI6kQkreJEEQI5JHUl6GJ5KYYwaJpZ4QDLEFuWABHQ+kMEJS9wgC1kS1Ehv0jqVHKGl89I4lccRnc4U6GkMqOI4xaAereURzEZ0jkyJQ6nsHyVpKrqmhIclc8AbyUJAEL5P7Au7rBaJ1rHonOLCSHAQlhlqpTgDlvhfJWopuqaRQhc8jgQhJB74p\/JzehvKVOstvAn4QlaVLAxMpwagUUksyhXpcItrHu+ONjCmpf5fl4lnx59ASufYW0T7Mi0pmWZMpQNZkxScOFRScXQYdIEZxlX3cqrKtMtcyUvEjEFSVY0sSpOeEVdJ3x6vY7mAuabZTNRLCVz0elmEBICLUtlKPFvGPOLFcQF5WeyibLnArlEzJdUKT11AVLskEQmVeEsI0KNVxSm5PZN7Y6L6hXtUu1WKdZLdNRZnlAyZaETJpxAoWAVYkBmSVa1pF7Y277fLkIMpFkIXMNpCZk2YFp9LLwgKSmWW6Jif5Q5otV3WhYYmzWnDT7ChLV3CYT2RgfIsom12kkuTKS5zJOMZmGcp4KnPTOWFlbNb\/jr9WcvrYi0TZstEuXZJZX6ZSlImzlgqBl4gpS0EhXScJFKK7RAXHM+efMnl+l9IZYU6vR4hxwuz0yg02GJF92kOWK7USHo4mkAtvAJ7zGNK\/8An3\/50\/8AsIhbinv9S1CyyDcG84jn+8yxO+T+0oOFc+xpUzhJnKCiK5Aoc5RDdux0xdnTaZs+TZpS2wGcpsT5aMAWprq0EvynXEmbPM82mQhSLPSSs\/SrwGYroh8i7dhieRJlXrYJElE1Mu0WdKXQrJ0owmmeAhiFB2yOoiXWuJrHrzJhq7HXGbls2svh+H\/fj0PM78umZIm+jmFBUAFPLVjSQoOkhTahj2iKSaDmI0L+u2bZ5pkzk4VgCjuCC7KSRmkt4NpFObLo76QlmhHdZTz9fErhZERYeNIdNxCISoxKFSkWMGsJqRxCjDsfCICWDoMcB5wwqhYh2Rx3EPMwaeWcMf8AtCCohUqJSBlI5MTxiquJVrpESzDEVLGmVpp8IqmLc0RVJh0ShaQAxbklhDJNnchovosej5\/BiZFeuaW7IZJBOkPUoxdk3UDUKL\/di7MudNPpaEZsC3OsLb3LCvgluzHSXi3LTF+y3Gk1Mx66NGkjZ5JAImFvu+\/44wMhteqqXNmAAYfKmPQiNyZs6l+jNJ7B745Z9nASp5pDZ9EbucANWtqT5mM7RwzYIv8ALct\/2q9GoKv2\/FIinbNISA80u+RA98dgJ66ro\/8AkxZUwtD3jcs2zUtRH0pHdp8eEX5eyaHH0quPRHtI+AYFhx11XV+gLpJEOKXzyg0kbEIP75X5Q3hDV7GIH77sOEcd+cRgYtfR83oww+TGSTdawBVap+Hj0QnzDRm\/JZcs2yC0Wm1pMhAQlP0nRokkrUQagUSH1rGELtmSgEottqSA7JQtYSOWFTCI7TccyaAmbbLRMGeFalLA4spRAhqsW23Iz5TrfGuPaTzyeQwnTVWq4565aFqM5c9SUJSSshVrWQAlNXbygd+TDZifKtqZ1olKlhMqYtIXRQJKUAqTmHCls9eiqMaZYrRJQQi12hKUpUUpTMmJSGcsAlTDsgeVfdrz+c2hyzn00zIOw61RU95ie8TabDqhxwnGt7Nvo+p7Lct72e9LJbZVnkGU6VOCEDEualTL6OZdOZrAr8ib\/ObQ4b6EBtxxhwY8\/sdtmyn9FNmSnZ8ExaH3PhIePQ\/kZpOtM1agAUJBUpQdSioqLk1J1J4jfBRlxSiFbR3VNiT2eMEmwwP+N2rcFWv\/ANw98MlbNWkXsq0rllEoWzEFKIGPHN6OAO5cF9zA8owbRKWbytSEzVyiZk5WOWspJSqaFJ6STUEKSe6NGZdM81+fWotUPMXQ9q6HjxgOJLZ+JNtkYzzxLeKXJs1PlKuO02i8EegkTFgyEDGE9AHHNoVnojMGpjJmbJWpM2RMsSVLQpMpSJyVBgvCMZUSeiy8VN1K1ETC75+F\/n1qO\/6Vbfzw6w3WqWjDLtk6XizShSgK7wksDAylFvOCa9VGEFBTWyxyeH\/f5J\/lltKFWiQgEFctC8baYynCk\/lJb7Q3x5+o00gwmbJBSiDOWS5egJerkkmsVLTsohJb0i9fqiBm+J5HUavT01qClnH0YHqVVqw3Dv8AOC7\/ACkFBxMLcQkV74avZBAD+lLnLoirducdkh62nx9GC4EIEwVSdlU4SVzSmu4GnfEi9jqAiaTwYO3xpEBe20+PoBkxUcSOLQWz9j2FJiu1Ip3GGS9kQ4eYoDUtlE5FvWVZ5+jBZQY8IjWpoKJ+zaUkgzCSNGApwiA7OAnrn8vP4aJTIlrKuj9AazrEC8oKV7OpGUw9gHsihPuQCmMvyHvg0xM9TW+oPKyioqN6Zd4w0UacA3nujOVYn+t4Q2LKtlkXyZLd7MDqY0VzA3OBSXaFDJR74f8AOV+srvMMdeSkphVZLVRm8G5l4sTJ7s9OXtgQFoXmFK74lFrmN11d5iO5Icw1szHWo3\/GUaiFHDUht707o83Ta5gymLH4jEht800M1f5j4RDob6kKZ6JImO4yHHyFIls9lDgCldCQK5DOPOheE4U9ItvvGNS602maR9LMSj1iTX7u\/nlEOhpbsnjPQJkpKXDV0\/saZxTnoFKDPL3REhLDC6lMzqUslTlnPfDvFjxHxnCcE5LFgmYFgEADjly\/WCCzlBFQFEu+R30gaWVPpnTOJ5t7JkAKX1tEhiTxAPnxiGHCMpPCCiZMSmWl3JowBPJmFYiRbRmGS3BjTlHnlu2knTFOFGWkdVKKM+85kxWXe880M6ZX7Rgcl+PZ02sto9DtdrxV62VaMOffCsoVhp4\/pAlc1itM6pnTES6Vcufuj25c8oJZbywNTpiKiTk5JPE+MRgr3VKp44k39BXlIJlTFEFvRq13JNGEeclMej2u0pVJmNXoLoN5SWfzjzlChEGj2Z8MjmGnlHQl82PcTDAovlSHJVyaONJNBFsPJBnr0+iVk3rS+6kHZVLShszkBm2X96wCbDFrSSD+7V\/MjJ4J7QBVSVMA+tRoS57e6IMTtH9b8ItolJIOTnTJ+wu8RTrMUqQUmuIU350zasZ0tZd8WIjSvm0PscxQmBZLpS7ZqqxDtnrrHYKJblzZgKppCgkmr0fPfrEC7YFaVq56Lgtw3P7YjvK2FSmSosaj2AsKcoFLxkzmK5c1dXoVGv3ST4GJW4cIqTw3gJ7Jai5SRvZy\/srFoodqvQM3DTlHmci3zAWMxYI4kMfZF4XtOcn0y3d+sT3745xLkdDKSymj0YSaZkAitHfu3R2xIKKKq5PLf5RjXFtOhbIm9BdGJfAo8Nx4GnlDtorvmTEldmnzUTBUoxKCFab+ieVOGsTFJvd4Kltc6niSNebNc4WalBw4d0QS0kZ51PLP4pujyufe9slrKVzpyVjMFRf9Rxyhhvu05\/OJv5zFhaVvqV+9R6TaHAIckuG4CKQX0TUgnPMGmfxwjz1V92j+PNP4yfOGi+J\/8aZ+Yx3sr8Tu8R6BJBpWnH2vFK3yxvd+yvtgJTe0\/wDjTPzGGKvGcf3q\/wAxgvZ34nd4gkXJYZ08X4RmzJQc5DtEY063zTmtXeYjFsX6x74JVNdTuMpNEiIaBDkw4WSpMSvFVMTyzEpkM60SSJZUQkAknICpMSWSyqmEAUD9Y5fqYOLju+ShgkEkviVmot2Uq1BATtUSVBszrp2aCRjnkH7AIIHBRep4CnON1NmBIzA3Ub4ZouWgJDpDkcWz3GK61gVr8Zdwis5uTyxmMciVCetQaPmTpr3w5Mg8eftMQz7SJScSiA5pvPADM84Hr1vVU6jYUeqCa8zrygMlinTTt5cvE0bzvwJ6MshSmqpujplvPhzgbnrUo4lEqJq5LmETF+7LtXOPRDI1UcuzeY404110x\/7KlllqUQkJKiaAawX3Ps8lDLnMVP1Pqjc4+seGXOElMuyoJDADrKUxJ4P4sO6Bm+tq5k10yyUIOZyUof7Ryr5QcanN7FG\/XNrhjsvULtpdqZcjoSyJkxsh1UH7Z3j1R2tGFsTeEybbVKmrKyZKxU0AK5dAMhAYkwR7Bgm1Fj+6W\/LFL3dkWXXGFbwZyk3JZDu8pZCJlGOBVdMjQgCPPMJEejXhLaSvN8C33dWPN0LL8oom52e1wy+45CC2cKnOEmZDkgRBorHQ2NklNPNQOgrOuqPGCe85afm80g\/u1uN3QVl8awObHyQu0EKy9Go0+8iCi9FoRJmpFXlTOzoHL40jordGN2h+r+Dzy5tqJshOBXTlsQA\/SQ\/qndwPeIMbvvOStDpUFjPkWyIzB4HyjzUgEQ2z2lctWJBIOu48xrF+7TqW65mZCeD1K8FUGGgzej+DnMDKIZ8hIQACXGulezlAzd+0HpSlJZBFGc4VPqDvyp5wTJlqUkGgfXhzbnGfKDjsx6eTOm3EJjdIP6wzA3Ea\/wB4H7xsS5KmVUaKGR+N0GMqbgJGppV+4dnxlEaZZwKQoAhsiAzHSsdks06mVe3QEUzHjcuC\/wBUlQCwVy9Q9U8t44Hwina7mUAVSzi+zmRuYnP4zjOkq3xzRrRnXqI4e4cWuwSLanIqGigQCknyPA7oBr\/2cm2bpHpynosacFjQ+HGLtiti5SsctRByIzBG4jdBVYdoUTU4VBKZhzSapVT6r+R8YbVdKH2MvVaBw96O6PLS0QkQb3zsriHpJAwnMy64T9x8uRpygOWkgkKBBFCCGIi9GcZrYy3FxIVJhhiY1iNcS0cQqjmGHriMRBJGmHiOIEWLNIUsskczoIjkcMCXo1fHsjXsd04WM3h0X7sRGUaN22BMtPVClEdYny4RqldE4gObl8sqmETt6IZGHiUJ9iCsKmAANAKAbqCkX7DaTLJShi2vS7Rm1OERTlSnYZg5VYvQ90R2fChONRDdoc8AIT9w+bwjXCFKO\/8AWK1vvfAyQylBwdyeDvWugjLt99LWGS6E616SuZ0HARRQsHOIZeo0izmfkTKmFRdSiTx9nCGkEkAVOnGLFiu9c79mOiM1aD3ltBG5Z7HLkIJJALdJRozjedMqCILd2ohUuFcyrdlyAHFOD5MjSvrHhuG6Ld7X1Ks9AAZjUQk9UfaIoBwzjBvjackqTIJAd8ZoW3JGg4mvKB3G9dTFmunO8jEuvlN5Zbt95TJysUxT7hklI4D25xXJhgMdxRbWEiuJIaCPYafhtKi7fRK\/mlwOxubHf8Qr\/pq\/mlwFnwMKPM9Atlp+imOx6Chy6J98edLXqO2DC1zFIQtziBQrQAsx3bj8bwgzWFdYzsGzop4jIspUIYFV18IjkFxkYeVR2C+pZWTb2WtBE9VWPo1V\/EiN+3LxSZpcOJa3q56p374Edn54E5yKYFatqndBLbp4VKmlyPo1ULCrHvHsiUsNGRrJcVjf0PPUZQ2ZDQzQo1GZgxSXgiuTaZUshM0FadF5rT39YeMYRjgWGZoXKEZbMJSa5HogmIX0kqCkl6j4z4aRJa5oocRB3Nr+I8oArvvGZJVilqA3jMHmPaKwY3NeEu1dHGETSKoL1bMpLV8w2UUraHHdch8bEzUsJ6SVKBB45jwMS3xdCJ3V6K9FN1h9oZHnyjiVKQSFFyDuzpwizJnBRyrxFdM3NBlnCMDoTlB5iwHtdlmSlBK0kPka4TyMQKj0ybd6JicCw4Oe5944vqID792bVKcy+mnd9ZI4t1hyjjWo1sZ7T2foVrDfy09CYSpO\/wCsOep840Z9yybSjEVPolaQHTz9YVyPhAs0WbDeK5C8SDTMg9U8x7YJPDyheo0cZ7x2foZd9XLNsymWHScljI+48D4xlkwfzb0RaXBIG9BYvyfMQPXrs8R0pLn7Hf1S9eRi5XdnaRi2UuDwDi4jaJVd0RAw1i0WLvsmI1p7Y37GAGDADKFCivN5GR2LoVqzjT+0OROepOR7m3jthQoVgMzLdbUpPR6R1DMAd+94oieVFyfd2QoUHjYs0pReSwlVaV4RsXbdQUXWW3JdicszmOWeUKFC2h198orCL15XuJCQnEzO0tLV5+qlxn5wI2685k09M0GSRkPeeJhQotVQSWTKnJtlJRGlIROUKFDQSZLQwQoUH0BHvGzsifp1f9NX8yIUKF2fAwo8wmva0JwqbRB0rl8UgLxiFCimlsaeleExJX4eUdVlChRxbT2NDZ+kxR+wd29LZxsTnMuY+WBX8py3QoUR1M\/U\/H+AIEdBrChRoFAdpDQHhQo445ihwmHOr74UKIOCi49p2UlNoLjLGzkffGo4juMHNkUhZCgQUqDuliKvkYUKKt9aW6HVyb2NOw2da1KAWKB\/dQa0jqrlKlE42L+qffz74UKFRimgm9zIvPYYTHUleBe8JLHmHz4wPzti5iSxm7\/3Z044st0KFBqCLFWqsXu5IjsWv+MxDV9ErzCov2e4Jo6KpxNWcSyHz61cuMKFEqCCsm5cyreuw3pel6VlbxLOm\/pVjKHycr\/\/AED\/ALZ\/qhQoatkUnzP\/2Q==',width=400,height=400)","00a9af56":"train = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/test.csv')\nsubmission = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/sample_submission.csv')","30f4ea1d":"train_time = train['time'].values\ntrain_time_0 = train_time[:50000]","84c3afa4":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcRoCi2-W71AWrWH7yn2taf8B9lpOfAC2pMfFx1DV52x5qAQmrSK&s',width=400,height=400)","5b27fd8c":"for i in range(1,100):\n    train_time_0 = np.hstack([train_time_0, train_time[i*50000:(i+1)*50000]])","461d8215":"train['time'] = train_time_0","2e0b1a72":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/miro.medium.com\/max\/1380\/1*NxiBxeASQIej_qx5Eu_qYA.png',width=400,height=400)","6c56c812":"train_time_0 = train_time[:50000] \n\nfor i in range(1,40):\n    train_time_0 = np.hstack([train_time_0, train_time[i*50000:(i+1)*50000]])\n    \ntest['time'] = train_time_0","6b43a026":"n_groups = 100\ntrain[\"group\"] = 0\nfor i in range(n_groups):\n    ids = np.arange(i*50000, (i+1)*50000)\n    train.loc[ids,\"group\"] = i","6e801438":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcRursYTNfVXcyao1fqpUzN935goZFrZtG1dSph6n5E35VywgYqv&s',width=400,height=400)","4549abe0":"n_groups = 40\ntest[\"group\"] = 0\nfor i in range(n_groups):\n    ids = np.arange(i*50000, (i+1)*50000)\n    test.loc[ids,\"group\"] = i","ef6245c1":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/miro.medium.com\/max\/1448\/1*IUv42UtorfHGmx9aND3whA.png',width=400,height=400)","0d1447e4":"train['signal_2'] = 0\ntest['signal_2'] = 0","3f5de610":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/miro.medium.com\/max\/1780\/1*_0kQ6xWdHS4cI4d9xnaBNw.png',width=400,height=400)","aa125bcb":"#plot of the signal\nplt.figure(figsize=(20, 8))\ntrain.signal.plot()\nplt.title(\"Train data\")","3f115055":"X = train[['signal_2']].values\ny = train['open_channels'].values","d4809db1":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcSpKnb5_peEj54gqYmF04NWK8hT5m_Py4ErKEUV-XqgxIWB2jBxuA&s',width=400,height=400)","ffa1a627":"trnX = train[['signal']].values\ntrnY = train['open_channels'].values","b392fe07":"model_lgb = lgb.LGBMRegressor(objective='regression',\n                              num_leaves=4,\n                              learning_rate=0.05, \n                              n_estimators=1080,\n                              max_bin=75, \n                              bagging_fraction=0.80,\n                              bagging_freq=5, \n                              feature_fraction=0.232,\n                              feature_fraction_seed=9, \n                              bagging_seed=9,\n                              min_data_in_leaf=6, \n                              min_sum_hessian_in_leaf=11)","d04d1ac8":"model_lgb.fit(trnX, trnY)","2c333369":"from sklearn.linear_model import Ridge\nmodel = Ridge(alpha=0.5)\nmodel.fit(trnX, trnY)","d8e0f576":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/miro.medium.com\/max\/1895\/1*fV6LtafEA0ZC3SB7QErxeg.png',width=400,height=400)","63c5d1d2":"submission = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/sample_submission.csv')\ntestX = test[['signal']].values\nridge_prediction = model.predict(testX)\nridge_prediction = np.rint(ridge_prediction).astype(int)","ad80169a":"lgb_train_pred_trn = model_lgb.predict(trnX)\nlgb_train_pred = model_lgb.predict(testX)\nlgb_pred = np.rint(lgb_train_pred).astype(int)","363c454f":"#ensemble\nensemble = ridge_prediction*0.35 + lgb_pred*0.65\nsubmission['open_channels'] = ensemble\nsubmission[submission['open_channels']<0]['open_channels'] = 0\nsubmission.head()\nsubmission.to_csv(\"submission.csv\", index=False)","a95b0b82":"![](https:\/\/media1.giphy.com\/media\/rh0W2vpayXMac\/200.webp?cid=790b7611116ffd2ecbcfb5c66aa5e439f7c991b1abe4b6d4&rid=200.webp)","ff0dc5c7":"Image towardsdatascience - https:\/\/towardsdatascience.com\/john-or-paul-data-resolves-the-age-old-who-was-the-1-beatle-question-fca8d8232df5 Article by Dan Raviv.","32ce58ce":"# codes from Nike https:\/\/www.kaggle.com\/kunaal0\/simple-starter-code-with-logistic-regression","447c259d":"netflix.com","c892fc69":"pinterest.com","172aa546":"![](https:\/\/media1.giphy.com\/media\/3ohzdOKguX7nXShLaw\/giphy.webp?cid=790b761150134f5257a19ed9a290f31988b99a5f117ca17b&rid=giphy.webp)","ea2d68d7":"Image towardsdatascience - https:\/\/towardsdatascience.com\/john-or-paul-data-resolves-the-age-old-who-was-the-1-beatle-question-fca8d8232df5 Article by Dan Raviv.","cabdefa4":"#Codes from KKR https:\/\/www.kaggle.com\/kalyankkr\/simple-eda-ridge-lgb-for-beginner","87df8cbe":"![](https:\/\/media.giphy.com\/media\/Xpjg5nwpCdE7UuSkgj\/giphy.gif)","1eafd3ad":"Kaggle Notebook Runner: Mar\u00edlia Prata @mpwolke","a4d38eea":"towardsdatascience - https:\/\/towardsdatascience.com\/john-or-paul-data-resolves-the-age-old-who-was-the-1-beatle-question-fca8d8232df5 Article by Dan Raviv.","92e8d84a":"sportsgalleryweb.com","26aa5090":"![](https:\/\/media0.giphy.com\/media\/1g1fqntyud56tLaCfY\/giphy.webp?cid=790b76118827302d15c3a29b6c6199a4b7c098a05d91aa49&rid=giphy.webp)","f36d92ba":"Image towardsdatascience - https:\/\/towardsdatascience.com\/john-or-paul-data-resolves-the-age-old-who-was-the-1-beatle-question-fca8d8232df5 Article by Dan Raviv.","8db57beb":"#Codes from KKR https:\/\/www.kaggle.com\/kalyankkr\/simple-eda-ridge-lgb-for-beginner\n\n#Codes from Nike https:\/\/www.kaggle.com\/kunaal0\/simple-starter-code-with-logistic-regression","5c7e1657":"Don't think I'm in the wrong competition. These guys are from Liverpool. Since ion switching encode learning and memory, Why not the memory of The Beatles. Last year(2019) we comemorate their 50-Year Anniversary. "}}