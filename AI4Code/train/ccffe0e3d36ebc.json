{"cell_type":{"f04ec1dd":"code","fbdd0d41":"code","b7f69ad7":"code","a8e71047":"code","393eaae9":"code","bf933126":"code","8d15b1d8":"code","e9814df7":"code","282e4a4b":"code","38b26fc1":"code","aaf486fe":"code","2fc7495b":"code","5003d8f3":"code","478f3382":"code","4ceeda88":"code","ebefd04b":"code","be560bc1":"code","58086fa7":"code","dbe05a87":"code","699f5d18":"code","0ff00407":"code","d1b21221":"code","9c097cd9":"code","9f461e1a":"code","82077ec5":"code","a0fb4413":"code","4c2bc4c6":"code","0a065a0e":"code","f487c142":"code","af0a2c4f":"code","9ae4efd7":"code","8804cc5c":"code","b105086e":"code","4894afde":"code","efc2599c":"code","4ef4164c":"code","035a9678":"markdown","e8147b3d":"markdown","1d97dc46":"markdown","95d130d1":"markdown","59de3d27":"markdown","6d927a4e":"markdown","026ae26c":"markdown","87aa3b61":"markdown","1771bcf8":"markdown","11c3f033":"markdown","9e30179e":"markdown","d1a21773":"markdown","5bf34e81":"markdown","18fd9943":"markdown"},"source":{"f04ec1dd":"# Libraries\n\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport re\n\nimport warnings\nwarnings.filterwarnings('ignore')","fbdd0d41":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","b7f69ad7":"# Reading the data\n\ndf = pd.read_csv('\/kaggle\/input\/violence-against-women-turkey-20082021\/Violence Against Women_Turkey.csv')\ndf.head()","a8e71047":"# Which province has highest number of cases\n\ndf['Province'].value_counts(normalize = True)[:10]","393eaae9":"# The first column is a empty column and we will drop it\n\ndf.drop('Unnamed: 0',axis = 1, inplace = True)","bf933126":"# Are there any rows which have all the NaN values\n\ndf[df.isnull().all(1)]","8d15b1d8":"# Dropping row with all NaN values\n\ndf.dropna(axis = 0, how = 'all', inplace = True)","e9814df7":"# Let's see the dtypes\n\ndf.info()","282e4a4b":"# Missing value percentage in each column\n\nround(100*df.isnull().sum()\/len(df))","38b26fc1":"# Dropping the Date Column as 50 % values are missing and going forward with it will give wrong idea about the timeline\n# Can't extract anything useful from 'Name' column and we will drop it\n\ndf.drop(['Date', 'Name'], axis = 1, inplace = True)","aaf486fe":"# We will remove all the column with more 60% of missing values\n\nfor col in df.columns:\n    if (df[col].isnull().sum()\/len(df)) > 0.60:\n        df.drop(col, axis = 1, inplace = True)","2fc7495b":"# Rechecking Missing value percentage in each column\n\nround(100*df.isnull().sum()\/len(df))","5003d8f3":"# There are empty spaces \n\ndf['Murder Motive'] = df['Murder Motive'].str.strip()","478f3382":"# Renaming some values for ease of understanding\n\ndf['Murder Motive'] = df['Murder Motive'].replace(['Not Determined','For', \"Men's something he wanted to happen because\",'Separation Request', 'Up rejected','house'], \n                                                  ['Unknown','Unknown','Unknown','Divorce Request', 'Rejection', 'House'])","4ceeda88":"# Renaming other values as others Motives\n\ninsignificant_motives = pd.Series(df['Murder Motive'].unique())\ninsignificant_motives = list(insignificant_motives[~insignificant_motives.isin(df['Murder Motive'].value_counts().keys()[:10])])\ndf['Murder Motive'] = df['Murder Motive'].apply(lambda x : 'Other Motives' if x in insignificant_motives else x)","ebefd04b":"# Looking into the value count\n\ndf['Murder Motive'].value_counts(normalize = True)","be560bc1":"# There are empty spaces \n\ndf['Murderer Name'] = df['Murderer Name'].str.strip()","58086fa7":"# We will rename Not Determined to Unknown\n\ndf['Murderer Name'] = df['Murderer Name'].replace(['Not Determined','someone unfamiliar'], 'Unknown')","dbe05a87":"# Renaming other values as others People\n\ninsignificant_people = pd.Series(df['Murderer Name'].unique())\ninsignificant_people = list(insignificant_people[~insignificant_people.isin(df['Murderer Name'].value_counts().keys()[:10])])\ndf['Murderer Name'] = df['Murderer Name'].apply(lambda x : 'Other People' if x in insignificant_people else x)","699f5d18":"# Looking into the value count\n\ndf['Murderer Name'].value_counts(normalize = True)","0ff00407":"# There are empty spaces \n\ndf['Protection Request'] = df['Protection Request'].str.strip()","d1b21221":"# We will rename Unknow to Not Determined\n\ndf['Protection Request'] = df['Protection Request'].replace(['Unknown','Unrealized', 'Where', 'no'], ['Not Determined', 'Not Determined','Not Determined','No'])","9c097cd9":"# Renaming other values as others Request\n\ninsignificant_request = pd.Series(df['Protection Request'].unique())\ninsignificant_request = list(insignificant_request[~insignificant_request.isin(df['Protection Request'].value_counts().keys()[:3])])\ndf['Protection Request'] = df['Protection Request'].apply(lambda x : 'Other Request' if x in insignificant_request else x)","9f461e1a":"# Looking into the value count\n\ndf['Protection Request'].value_counts(normalize = True)","82077ec5":"# There are empty spaces \n\ndf['Way Of Killing'] = df['Way Of Killing'].str.strip()","a0fb4413":"# We will rename Unknow to Not Determined\n\ndf['Way Of Killing'] = df['Way Of Killing'].replace(['Not Determined','DARPA'], ['Unknown', 'Darpa'])","4c2bc4c6":"# # Renaming other values as Other Ways\n\ninsignificant_ow = pd.Series(df['Way Of Killing'].unique())\ninsignificant_ow = list(insignificant_ow[~insignificant_ow.isin(df['Way Of Killing'].value_counts().keys()[:9])])\ndf['Way Of Killing'] = df['Way Of Killing'].apply(lambda x : 'Other Ways' if x in insignificant_ow else x)","0a065a0e":"# Looking into the value count\n\ndf['Way Of Killing'].value_counts(normalize = True)","f487c142":"# There are empty spaces \n\ndf['News Source 1'] = df['News Source 1'].str.strip()","af0a2c4f":"# We will fill the missing values as Unknown Source\n\ndf['News Source 1'].fillna('Unknown Source', inplace = True)","9ae4efd7":"# Extracting the domain name\n\ndef domain_name(url):\n    return url.split(\"www.\")[-1].split(\"\/\/\")[-1].split(\".\")[0]\n\ndf['News Source 1'] = df['News Source 1'].apply(domain_name)","8804cc5c":"# Renaming other values as Other Source\n\ninsignificant_source = pd.Series(df['News Source 1'].unique())\ninsignificant_source = list(insignificant_source[~insignificant_source.isin(df['News Source 1'].value_counts().keys()[:10])])\ndf['News Source 1'] = df['News Source 1'].apply(lambda x : 'Other Source' if x in insignificant_source else x)","b105086e":"# Looking into the value count\n\ndf['News Source 1'].value_counts(normalize = True)[:10]","4894afde":"# Final data frame\n\ndf.head()","efc2599c":"# Plotting countplots\n\nfigure = plt.figure(figsize = (15,10))\nplt.suptitle('Top Reasons for',fontsize =25)\n\nfor idx, col in enumerate(df.columns[:4]):\n    plt.subplot(2,2,idx+1)\n    plt.title(\"{0}\".format(col), fontsize = 20)\n    \n    sns.countplot(y = col, data = df, palette='Set1', order = df[col].value_counts().index)\n    \n    plt.ylabel(col,Fontsize = 20 )\n    plt.xlabel('Frequency',Fontsize = 20)\n    \n    plt.xticks(rotation = 'horizontal', Fontsize = 15)\n    plt.yticks(Fontsize = 15)\n    \n    figure.tight_layout(pad= 3)","4ef4164c":"# Plotting graph for News source 1\n\nsns.countplot(y = 'News Source 1', data =df, palette = 'Set1',order = df['News Source 1'].value_counts().index)\n\nplt.title('Reports published by Source', fontsize = 20)\nplt.ylabel('News Source 1',Fontsize = 20 )\nplt.xlabel('Frequency',Fontsize = 20)\n\nplt.xticks(Fontsize = 15)\nplt.yticks(Fontsize = 15)\n\nplt.show()","035a9678":"#### Way Of Killing","e8147b3d":"#### News Source 1","1d97dc46":"# Topics\n\n1. Importing Libraries\n2. Data Reading, Formatting and Cleaning\n3. Analysis and Visualization\n4. Conclusion","95d130d1":"## My Other Works\n\n**Internet Usage: EDA and Cluster Analysis**:https:\/\/www.kaggle.com\/vishalraibagi\/internet-usage-eda-and-cluster-analysis\n<br>\n\n**Price Class Classification: SweetViz & 5 Models**:https:\/\/www.kaggle.com\/vishalraibagi\/price-class-classification-sweetviz-5-models\n<br>\n<br>\n<br>","59de3d27":"# Importing Libraries","6d927a4e":"# Conclusion\n- Extracting from the data which was available `Istanbul` province has highest number of cases\n- From the known motives `Discussion` causes **22%** of murder and there are other small motives which are collective grouped as `Other Motives` also seem to be primary cause\n- `Husband` is the primary murderer contributing to **32%** to Murder cases\n-  **87%** of the times there is `No` protection request\n- Most of women have been killed by `Firearm` **44.6%** of cases and `Cutting Tools` **22.6%** of cases\n- `Milliyet` reports **11%** of news and other non-primary small sources collectively report **21.7%**","026ae26c":"We will impute the remaining missing values of News Source 1 as Unknown source instead of removing that column","87aa3b61":"#### Murderer Name","1771bcf8":"#### Protection Request","11c3f033":"<img src= \"https:\/\/www.aljazeera.com\/wp-content\/uploads\/2020\/08\/853cae263ce746368d5ccae0c5027a39_18.jpeg?resize=770%2C513\">","9e30179e":"# Analysis and Visualization","d1a21773":"# Data Reading, Formatting and Cleaning","5bf34e81":"## Upvote if you like my work\u2764\ufe0f\n## If you have any queries, doubt or any suggestion feel free to drop it in comment section\u00b6","18fd9943":"#### Muder Motive"}}