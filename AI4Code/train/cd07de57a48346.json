{"cell_type":{"1eb549d2":"code","d84c9297":"code","a3d41fc8":"code","e2736da1":"code","97d9b6b9":"code","7a063544":"code","975325f2":"code","366f755f":"code","4e111ee0":"code","bf01943f":"code","6d360d48":"code","0645eaeb":"code","e670894a":"code","bfb394c1":"code","dca9deba":"code","34160e80":"code","deed5b4a":"code","6d43203a":"code","482f7ba5":"code","baa5810f":"code","7c38c61b":"code","14e134d8":"code","ce0aec2b":"code","7719908a":"code","73809a19":"code","bae2fcbd":"markdown","b89418bc":"markdown","d16cb375":"markdown","1a4c32b1":"markdown","0ef4f105":"markdown","362501da":"markdown","10d93e1d":"markdown","9f83ee6e":"markdown","3ea13300":"markdown","82861dc0":"markdown","6296d2a9":"markdown","fb9891c8":"markdown","ab1c9d70":"markdown"},"source":{"1eb549d2":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\n\nfrom sklearn.linear_model import LogisticRegression, LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor,BaggingRegressor,GradientBoostingRegressor,AdaBoostRegressor\n\nfrom sklearn.preprocessing import OrdinalEncoder, OneHotEncoder\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use('classic')\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(action='ignore')","d84c9297":"data = pd.read_csv(\"\/kaggle\/input\/diamonds\/diamonds.csv\")\n\ndata","a3d41fc8":"data.info()","e2736da1":"data.nunique()","97d9b6b9":"data = data.drop('Unnamed: 0', axis=1) #the column is just indexes","7a063544":"object_columns = data.select_dtypes(include='object').columns\n\nfor col in object_columns:\n    print('-'*50)\n    print(col+':', '\\n\\n', ',  '.join(data[col].unique()), '\\n')\nprint('-'*50)","975325f2":"data.describe()","366f755f":"cols = object_columns\n\nfig = plt.figure(figsize = (20, 6), facecolor='#fbe7dd')\n\n\n\nfor i in range(len(cols)):\n    fig.add_subplot(1, 3, i+1)\n    sns.countplot(data[cols[i]], palette='icefire_r')\nplt.show() \n\nfig = plt.figure(figsize = (20, 6), facecolor='#fbe7dd')\nfor i in range(len(cols)):\n    fig.add_subplot(1, 3, i+1)\n    sns.barplot(x=cols[i], y=\"price\", data=data, palette='icefire_r')\n\nplt.show()","4e111ee0":"fig = plt.figure(figsize = (20, 6), facecolor='#fbe7dd')\n\nfor i in range(len(cols)):\n    plt.style.use('Solarize_Light2')\n    fig.add_subplot(1, 3, i+1)\n    plt.title(\"%s\" % cols[i],color = 'black',fontsize = 19)\n    plt.pie(\n        x=data[cols[i]].value_counts().values, labels=data[cols[i]].value_counts().index, autopct = '%1.1f%%'\n    )\n\nplt.show()","bf01943f":"cols = object_columns\n\nfig = plt.figure(figsize = (25, 17), facecolor='#fbe7dd')\n\n\n\nfor i in range(len(cols)):\n    fig.add_subplot(1, 3, i+1)\n    sns.scatterplot(\n        y=data['carat'], x=data['price'], hue=data[cols[i]], palette='Paired', hue_order=data[cols[i]], markers=None\n    )\n\nplt.show()","6d360d48":"float_columns = data.select_dtypes(include='float64').columns\n\nfig = plt.figure(figsize = (22, 9), facecolor='#fbe7dd')\n\n\n\nfor i in range(len(float_columns)):\n    fig.add_subplot(2, 3, i+1)\n    sns.distplot(data[float_columns[i]], color='#604039')\n\nplt.show()","0645eaeb":"# correlation matrix\n\nplt.figure(figsize = (16, 7), facecolor='#fbe7dd')\nsns.heatmap(data.corr(), vmin=-1, vmax=1, cmap= 'icefire')\nplt.show()","e670894a":"y = data['price'] #Assigning the target as y","bfb394c1":"#Assigning the featurs as df_tran\n\ndf_tran = pd.get_dummies(data[[\"cut\", 'color','clarity']])\ndf_tran['carat'] = MinMaxScaler().fit_transform(pd.DataFrame(data['carat']))\ndf_tran['table'] = MinMaxScaler().fit_transform(pd.DataFrame(data['table']))\ndf_tran['depth'] = MinMaxScaler().fit_transform(pd.DataFrame(data['depth']))\ndf_tran.head()","dca9deba":"# correlation matrix\n\nplt.figure(figsize = (16, 7), facecolor='#fbe7dd')\nsns.heatmap(df_tran.corr(), vmin=-1, vmax=1, cmap= 'icefire')\nplt.show()","34160e80":"X_train, X_test, y_train, y_test = train_test_split(df_tran, y, train_size=0.7, shuffle=True, random_state=42)","deed5b4a":"Models = {\n    \"               Random Forest Regressor\": RandomForestRegressor(),\n    \"           Gradient Boosting Regressor\": GradientBoostingRegressor(),\n    \"                     Bagging Regressor\": BaggingRegressor(),\n    \"                    AdaBoost Regressor\": AdaBoostRegressor(),\n    \"                     Linear Regression\": LinearRegression()\n}\n\n# Models Evaluation\n\nfor name, model in Models.items():\n    model.fit(X_train, y_train)\n\n    print(name + \": {:1.2f}%\".format(model.score(X_test, y_test) * 100))","6d43203a":"df_tran2 = data.copy().drop('price', axis=1)\n\ndf_tran2.head()","482f7ba5":"Cut_dict = {\n    'Fair': 0,\n    'Good': 1,\n    'Very Good': 2,\n    'Premium': 3,\n    'Ideal': 4\n}\n\nColor_dict = {\n    'J': 0,\n    'I': 1,\n    'H': 2,\n    'G': 3,\n    'F': 4,\n    'E': 5,\n    'D': 6\n}\n\nClarity_dict = {\n    'I1': 0,\n    'SI2': 1,\n    'SI1': 2,\n    'VS2': 3,\n    'VS1': 4,\n    'VVS2': 5,\n    'VVS1': 6,\n    'IF': 7\n}","baa5810f":"df_tran2['Cut_Ordinal'] = df_tran2.cut.map(Cut_dict)\ndf_tran2['Color_Ordinal'] = df_tran2.color.map(Color_dict)\ndf_tran2['Clarity_Ordinal'] = df_tran2.clarity.map(Clarity_dict)\ndf_tran2 = df_tran2.drop(['cut', 'color', 'clarity'], axis=1)\ndf_tran2 = df_tran2.drop(['x', 'y', 'z'], axis=1)","7c38c61b":"df_tran2","14e134d8":"#Assigning the featurs as X_tran\n\nX_tran = pd.DataFrame(MinMaxScaler().fit_transform(df_tran2))","ce0aec2b":"# correlation matrix\n\nplt.figure(figsize = (16, 7), facecolor='#fbe7dd')\nsns.heatmap(X_tran.corr(), vmin=-1, vmax=1, cmap= 'icefire')\nplt.show()","7719908a":"X_train, X_test, y_train, y_test = train_test_split(X_tran, y, train_size=0.7, shuffle=True, random_state=42)","73809a19":"# Models Evaluation\n\nfor name, model in Models.items():\n    model.fit(X_train, y_train)\n\n    print(name + \": {:1.2f}%\".format(model.score(X_test, y_test) * 100))","bae2fcbd":"**price** price in US dollars (\\$326--\\$18,823)\n\n**carat** weight of the diamond (0.2--5.01)\n\n**cut** quality of the cut (Fair, Good, Very Good, Premium, Ideal)\n\n**color** diamond colour, from J (worst) to D (best)\n\n**clarity** a measurement of how clear the diamond is (I1 (worst), SI2, SI1, VS2, VS1, VVS2, VVS1, IF (best))\n\n**x** length in mm (0--10.74)\n\n**y** width in mm (0--58.9)\n\n**z** depth in mm (0--31.8)\n\n**depth** total depth percentage = z \/ mean(x, y) = 2 * z \/ (x + y) (43--79)\n\n**table** width of top of diamond relative to widest point (43--95)","b89418bc":"Using the ordinal encoding, we improved the score of all models with the exception of Linear Regression. Get_dummies turned out to be better for the Linear Regression score.","d16cb375":"<img src=\"https:\/\/imgur.com\/LqVrupH.jpg\" width=\"800\">","1a4c32b1":"The Cut, Color, Clarity features have an order, so we will make the encoding in accordance with the order","0ef4f105":"### Diamond cut grade:\n\n<img src=\"https:\/\/imgur.com\/ppd6912.jpg\" width=\"800\">\n\n1) **Excellent:**  \tExcellent Cut Diamonds provide the highest level of fire and brilliance. Because almost all of the incoming light is reflected through the table, the diamond radiates with magnificent sparkle.\n\n2) **Very Good:**  Very Good Cut Diamonds offer exceptional brilliance and fire. A large majority of the entering light reflects through the diamond\u2019s table. To the naked eye, Very Good diamonds provide similar sparkle to those of Excellent grade.\n\n3) **Good:**  Good Cut Diamonds showcase brilliance and sparkle, with much of the light reflecting through the table to the viewer\u2019s eye. These diamonds provide beauty at a lower price point.\n\n4) **Fair:**  Fair Cut Diamonds offer little brilliance, as light easily exits through the bottom and sides of the diamond. Diamonds of a Fair Cut may be a satisfactory choice for smaller carats and those acting as side stones.\n\n5) **Poor:**  Poor Cut Diamonds yield nearly no sparkle, brilliance or fire. Entering light escapes from the sides and bottom of the diamond.\n\nLearn more about diamond cut: https:\/\/www.diamonds.pro\/education\/cuts\/\n\n \n \n\nSo, we have quality of the cut: **Fair < Good < Very Good < Premium < Ideal**","362501da":"# get_dummies","10d93e1d":"# Diamonds\n\n","9f83ee6e":"We will not use the x, y, z features, since they are very strongly correlated with the carat feature. Also, these features have a similar meaning.","3ea13300":"### Diamond color grade:\n\n<img src=\"https:\/\/imgur.com\/97Txyxi.jpg\" width=\"800\">\n\n1) **D:**  \tD is the highest color grade, meaning it has nearly no color. Under magnification and to the naked eye, a D color diamond will appear colorless.\n\n2) **E:**  \tE color diamonds look almost identical to D color diamonds. Most of the time, the differences in color between a D and E diamond are only visible to an expert gemologist when the two diamonds are viewed under magnification.\n\n3) **F:**  F color diamonds are almost identical to D and E color diamonds, with nearly no visible color. Even under magnification and side by side, a D, E and F diamond will look almost identical to anyone other than an expert gemologist.\n\n4) **G:**  \tG color diamonds exhibit nearly no color and appear primarily colorless to the naked eye. The G color grade is the highest, best grade in the \u201cNear Colorless\u201d range of the GIA\u2019s scale, which covers diamonds graded G to J.\n\n5) **H:**  H color diamonds appear primarily colorless to the naked eye but have a faint yellow hue that\u2019s often visible under magnification in bright lighting, especially when they\u2019re compared to diamonds of a higher color grade.\n\n3) **I:**  I color diamonds offer a great combination of near colorless looks and good value for money. These diamonds have a slight yellow tint that\u2019s usually only visible when they\u2019re viewed next to diamonds of a higher color grade.\n\n4) **J:**  J color diamonds look mostly colorless to the naked eye, but usually have a faint yellow tint that\u2019s easy to notice under bright lights and magnification. In diamonds with a large table, the color might also be visible with the naked eye in certain lighting conditions.\n\n5) **K:**  K color diamonds are classed as \u201cfaint tint\u201d on the GIA\u2019s diamond color scale, meaning they have a slight yellow tint that\u2019s visible even to the naked eye.\n\n5) **L:**  L color diamonds have a yellow tint that\u2019s visible to the naked eye in normal lighting conditions. Diamonds with this color grade are much more affordable than those in the G to J range, making them a good value for money option.\n\n3) **M:**  M color diamonds have a definite yellow tint that\u2019s visible to the naked eye. Like K and L diamonds, M color diamonds offer fantastic value for money when compared to near colorless or colorless diamonds.\n\n4) **N-R:**  Diamonds in the N to R range have noticeable yellow or brown tinting. These diamonds are available at a much lower price point than faintly tinted or near colorless diamonds. We do not recommend diamonds of an N-R grade.\n\n5) **S-Z:**  Diamonds of an S-Z range have easily noticeable yellow or brown tinting. For this reason, We do not recommend S-Z diamonds.\n\nLearn more about diamond color: https:\/\/www.diamonds.pro\/education\/color\/\n\n\n\nSo, we have diamond colour, from J (worst) to D (best): **J < I < H < G < F < E < D**","82861dc0":"### Diamond clarity grade:\n\n<img src=\"https:\/\/imgur.com\/NErG1AE.jpg\" width=\"800\">\n\n1) **IF:**  Internally Flawless \/ Flawless \u2013 No internal or external imperfections. Flawless diamonds are extremely rare.\n\n2) **VVS1:**  Very Very Slightly Included (1st Degree) \u2013 Diamond clarity inclusions rated VVS1 are not visible at all under 10x magnification.\n\n3) **VVS2:**  Very Very Slightly Included (2nd Degree) \u2013 Diamond clarity inclusions rated VVS2 are sometimes just barely visible under 10x magnification (standard jeweler\u2019s loupe). When they are visible, they are quite difficult to find and can often take quite a while to locate.\n\n4) **VS1:**  Very Slightly Included (1st Degree) \u2013 VS1 diamond clarity inclusions are just barely visible under 10x magnification (standard jeweler\u2019s loupe). When looking for VS1 clarity inclusions with a loupe, it can sometimes take a good few seconds until the pinpoint is located.\n\n5) **VS2:**  Very Slightly Included (2nd Degree) \u2013 VS2 clarity inclusions are almost always easily noticeable at 10x magnification (standard jeweler\u2019s loupe). Occasionally, the inclusion will be located in a difficult-to-spot location, but otherwise, the inclusion is large enough that it can be spotted quickly under magnification.\n\n3) **SI1:**  Slightly Included (1st Degree) \u2013 SI1 Clarity inclusions are easily found with a standard jeweler\u2019s loupe at 10x magnification. With most shapes (to the exclusion of step cuts like Asscher and Emerald Cuts), SI1 clarity inclusions are almost always clean to the naked eye.\n\n4) **SI2:**  Slightly Included (2nd Degree) \u2013 SI2 clarity inclusions are seen clearly and obviously with the help of a jeweler\u2019s loupe. With step cuts like Emerald and Asscher cuts, an SI2 clarity inclusion will most likely be visible to the naked eye.\n\n5) **I1:**  Included (1st Degree) \u2013 I1 clarity inclusions are even more obvious and clearly seen than SI2 clarity inclusions. Most I1 inclusions are visible to the naked eye\u2014even on brilliant cuts.\n\n5) **I2-I3:** Included (2st-3st Degree) - I2, I3 clarity represents the lowest official clarity grade for a diamond. \n\nLearn more about diamond clarity: https:\/\/www.diamonds.pro\/education\/clarity\/\n\n\n\n\nSo, we have diamond clarity, from I1 (worst) to IF (best): **I1 < SI2 < SI1 < VS2 < VS1 < VVS2 < VVS1 < IF**","6296d2a9":"# Feature Analysis","fb9891c8":"Remember that\n\n**Fair < Good < Very Good < Premium < Ideal**\n\n**J < I < H < G < F < E < D**\n\n**I1 < SI2 < SI1 < VS2 < VS1 < VVS2 < VVS1 < IF**","ab1c9d70":"# Ordinal Encoder"}}