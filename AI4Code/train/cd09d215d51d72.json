{"cell_type":{"085fe94e":"code","07f2c841":"code","42909587":"code","f9f859da":"code","454801ea":"code","7ff08e4b":"code","f4043de4":"code","82a9787d":"code","95a29f8c":"code","a3c5bfe2":"code","b4768398":"code","5242b16a":"code","fe249ced":"code","92a4a110":"code","32bd4652":"code","99ddbb8d":"code","3eec74e8":"code","fbbe2623":"code","a86c01ee":"code","7a49f941":"code","da409410":"code","eea44d6b":"code","d2bc6d1b":"code","e2021c71":"code","dec1ec92":"code","1b1e7378":"code","780efed8":"code","dd71561b":"code","dab699db":"code","8b5fb5bf":"code","3c485ede":"code","41cafcec":"code","922ee5df":"code","16996d45":"code","48eb08a6":"code","9845006f":"code","c82d0e62":"code","6e260ec8":"code","a290c547":"code","8c6d82da":"code","b398482c":"code","c4a53df6":"code","f7f52966":"code","8d231251":"code","e8d0bf1e":"code","c3f1f841":"code","9cb36cc5":"code","376bd010":"markdown","e2d71dea":"markdown","3c6c5cbe":"markdown","1031fba7":"markdown","c85920f2":"markdown","c9f6dceb":"markdown","8ed5a605":"markdown","b9be8883":"markdown","48d8b76a":"markdown","a6e4be2a":"markdown","e9f4b895":"markdown","fa479dbd":"markdown","1988181c":"markdown","d384539c":"markdown","8fe26eff":"markdown","9485edc3":"markdown","4371d18a":"markdown","697b6bda":"markdown","2ad1c874":"markdown","aa264f01":"markdown","7122b771":"markdown","3815991c":"markdown","97197797":"markdown","4589f68b":"markdown","29d6ff60":"markdown","f1ae8473":"markdown","b9ae96f7":"markdown"},"source":{"085fe94e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')","07f2c841":"df=pd.read_csv('..\/input\/pima-indians-diabetes-database\/diabetes.csv')","42909587":"df.shape","f9f859da":"df.head()","454801ea":"df.info()","7ff08e4b":"df.describe().transpose()","f4043de4":"sns.set_style(style='darkgrid', rc={\"grid.color\": \".8\", \"grid.linestyle\": \"--\"})\ndf.hist(figsize = (20,20),bins=25,color='#ff7f50',edgecolor=\"black\")\nplt.show()","82a9787d":"df['Glucose'].replace(0,df['Glucose'].mean(),inplace=True)\ndf['BloodPressure'].replace(0,df['BloodPressure'].mean(),inplace=True)\ndf['SkinThickness'].replace(0,df['SkinThickness'].mean(),inplace=True)\ndf['BMI'].replace(0,df['BMI'].mean(),inplace=True)\ndf['Insulin'].replace(0,df['Insulin'].median(),inplace=True)","95a29f8c":"df.describe().transpose()","a3c5bfe2":"df.drop(['DiabetesPedigreeFunction'],axis=1,inplace=True)","b4768398":"plt.figure(figsize=(5,4))\nsns.boxplot(y=df['Pregnancies'],palette='OrRd_r',saturation=0.8)\nplt.tight_layout()\nplt.grid(True)\nplt.show()","5242b16a":"df[df['Pregnancies']>13]","fe249ced":"df.drop(df[df['Pregnancies']>13].index, inplace=True)","92a4a110":"plt.figure(figsize=(5,4))\nsns.boxplot(y=df['Glucose'],palette='OrRd_r',saturation=0.8)\nplt.tight_layout()\nplt.grid(True)\nplt.show()","32bd4652":"plt.figure(figsize=(5,4))\nsns.boxplot(y=df['BloodPressure'],palette='OrRd_r',saturation=0.8)\nplt.tight_layout()\nplt.grid(True)\nplt.show()","99ddbb8d":"mean=df['BloodPressure'].mean()\nstd=df['BloodPressure'].std()\ndf[(df['BloodPressure']<(mean-3*std))]","3eec74e8":"df['BloodPressure'].replace(30.0,40,inplace=True)\ndf['BloodPressure'].replace(24.0,40,inplace=True)","fbbe2623":"plt.figure(figsize=(5,4))\nsns.boxplot(y=df['SkinThickness'],palette='OrRd_r',saturation=0.8)\nplt.tight_layout()\nplt.grid(True)\nplt.show()","a86c01ee":"df[df['SkinThickness']>55]","7a49f941":"df.drop(df[df['SkinThickness']>55].index, inplace=True)","da409410":"plt.figure(figsize=(5,4))\nsns.boxplot(y=df['Insulin'],palette='OrRd_r',saturation=0.8)\nplt.tight_layout()\nplt.grid(True)\nplt.show()","eea44d6b":"df[df['Insulin']>600]","d2bc6d1b":"df.drop(df[df['Insulin']>600].index, inplace=True)","e2021c71":"plt.figure(figsize=(5,4))\nsns.boxplot(y=df['BMI'],palette='OrRd_r',saturation=0.8)\nplt.tight_layout()\nplt.grid(True)\nplt.show()","dec1ec92":"df[df['BMI']>60]","1b1e7378":"df.drop(df[df['BMI']>60].index, inplace=True)","780efed8":"plt.figure(figsize=(5,4))\nsns.countplot(df['Outcome'],palette='OrRd_r',saturation=0.8)\nplt.tight_layout()\nplt.grid(True)\nplt.show()","dd71561b":"out_df=pd.DataFrame(df.groupby('Outcome')['Outcome'].count())\ncolors = ['#F66D44','#FEAE65']\nplt.pie(out_df['Outcome'],labels=['healthy','Diabetic'],autopct='%.0f%%',colors=colors,radius=2,explode = (0, 0.1),shadow=True)\nplt.legend()\nplt.show()","dab699db":"sns.pairplot(df,palette='OrRd_r',hue='Outcome',corner=True)\nplt.show()","8b5fb5bf":"plt.figure(figsize=(10,10))\nsns.heatmap(df.corr(),annot=True,cmap=\"OrRd\")\nplt.show()","3c485ede":"plt.figure(figsize=(5,4))\nsns.boxplot(y=df['Age'],x=df['Outcome'],palette='OrRd_r',saturation=0.8)\nplt.tight_layout()\nplt.grid(True)\nplt.show()","41cafcec":"plt.figure(figsize=(5,4))\nsns.boxplot(y=df['Glucose'],x=df['Outcome'],palette='OrRd_r',saturation=0.8)\nplt.tight_layout()\nplt.grid(True)\nplt.show()","922ee5df":"plt.figure(figsize=(5,4))\nsns.boxplot(y=df['Pregnancies'],x=df['Outcome'],palette='OrRd_r',saturation=0.8)\nplt.tight_layout()\nplt.grid(True)\nplt.show()","16996d45":"plt.figure(figsize=(5,4))\nsns.boxplot(y=df['BloodPressure'],x=df['Outcome'],palette='OrRd_r',saturation=0.8)\nplt.tight_layout()\nplt.grid(True)\nplt.show()","48eb08a6":"plt.figure(figsize=(5,4))\nsns.boxplot(y=df['SkinThickness'],x=df['Outcome'],palette='OrRd_r',saturation=0.8)\nplt.tight_layout()\nplt.grid(True)\nplt.show()","9845006f":"plt.figure(figsize=(5,4))\nsns.boxplot(y=df['BMI'],x=df['Outcome'],palette='OrRd_r',saturation=0.8)\nplt.tight_layout()\nplt.grid(True)\nplt.show()","c82d0e62":"X=df.drop(['Outcome'],axis=1)\ny=df.Outcome","6e260ec8":"from sklearn.preprocessing import StandardScaler\nStdSc=StandardScaler()","a290c547":"for col in X.columns:\n    X[col]=StdSc.fit_transform(X[[col]])","8c6d82da":"X.head()","b398482c":"X.aggregate(['mean','var']).transpose()","c4a53df6":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier","f7f52966":"model_param={\n    'svm':{\n        'model':SVC(),\n        'params':{ 'C':[1,10,20,50],\n                  'kernel':['linear', 'rbf']\n                 }\n    },\n    'Randomforest':{\n        'model':RandomForestClassifier(),\n        'params':{'n_estimators':[10,30,50,100],\n                  'criterion':['gini','entropy']}\n    },\n    'Logistic':{\n        'model':LogisticRegression(),\n        'params':{ 'C': [1,5,10]}\n    },\n    'naive_bayes_gaussian': {\n        'model': GaussianNB(),\n        'params': {}\n   \n    },\n    'decision_tree': {\n        'model': DecisionTreeClassifier(),\n        'params': {\n            'criterion': ['gini','entropy'],\n            \n        }\n    },\n    'XGBClass':{\n        'model':XGBClassifier(eval_metric='logloss'),\n        'params':{\n            'eta':[0.01,0.05,0.1,0.2,0.25,0.3],\n            'n_estimators':[10,100,1000],\n            'lambda':[0,1],\n            'alpha':[0,1]\n        }\n    },\n    'KNN':{\n        'model':KNeighborsClassifier(),\n        'params':{\n            'n_neighbors' : [5,7,9,11,13,15],\n            'weights' : ['uniform','distance'],\n            'metric' : ['minkowski','euclidean','manhattan']\n        }\n    }\n}","8d231251":"scores = []\nfrom sklearn.model_selection import GridSearchCV\nfor model_name, mp in model_param.items():\n    clf =  GridSearchCV(mp['model'], mp['params'], cv=15, return_train_score=False)\n    clf.fit(X,y)\n    scores.append({\n        'model': model_name,\n        'best_score': clf.best_score_,\n        'best_params': clf.best_params_\n    })\n    \ndataframe = pd.DataFrame(scores,columns=['model','best_score','best_params'])","e8d0bf1e":"dataframe","c3f1f841":"dataframe.sort_values('best_score',ascending=False,inplace=True)\ndataframe[['model','best_score']]","9cb36cc5":"plt.figure(figsize=(10,5))\nsns.barplot(y=dataframe['model'],x=dataframe['best_score'],palette='OrRd_r',edgecolor=\"black\")\nplt.title(\"Model's accuracy\")\nplt.xlabel('Accuracy')\nplt.tight_layout()\nplt.grid(True)\nplt.show()","376bd010":"There is no missing value in the data. Now let's take a look at the statistics of data.","e2d71dea":"Now lets find if there are outliers in the data.","3c6c5cbe":"In pregnency there are some outliers and they shall be removed","1031fba7":"No outlier in Glucose","c85920f2":"# Model Fitting","c9f6dceb":"In this notebook I performed exploratory data analysis, data preprocessing and hyperparameter tuning to fit the data and predict whether a person has diabetes or not.","8ed5a605":"Women with high pregnancy are diabetes patient","b9be8883":"The dataset is imbalanced. 66% is of healthy and 34% is of diabetic","48d8b76a":"# Data Preparation","a6e4be2a":"will impute these points with 40 as blood pressure less than 40 very deadly. And blood pressure in range of 100 to 120 is considered to be case of high blood perssure","e9f4b895":"Now we will perform exploratory data analysis and try to find some answer to question","fa479dbd":"![](https:\/\/thumbs.dreamstime.com\/b\/close-up-diabetic-measurement-tools-pills-pink-background-close-up-diabetic-measurement-tools-pills-color-196696166.jpg)","1988181c":"# Conclusion","d384539c":"A person with thick tricep skin can be diabetic.","8fe26eff":"Since DiabetesPedigreeFunction has very low variance hence dropping this feature","9485edc3":"# Data preprocessing","4371d18a":"We will use Na\u00efve Bayes, KNN, Logistic Regression, SVC, Decision tree, Random Forest, Xg-boost","697b6bda":"As observed earlier that high BMI leads to diabetes","2ad1c874":"# EDA","aa264f01":"Here you can see that some of the variables (Glucose, Blood pressure, Skin thickness, Insulin and BMI) has value 0 in them but they cant be zero. Will try to replace 0 with appropriate statistics as per their distribution.","7122b771":"tricep skin thickness range is from 10 to 50. Therefore removing those entries","3815991c":"As we can see from the plots that in Glucose, Blood pressure, Skin thickness, Insulin and BMI the bar at 0 is different from data. So we will replace those zeros with mean or median depending on there distribution.\n\n* Glucose is normally distributed therefore 0 will be replaced by mean of glucose.\n* Blood pressure is normally distributed therefore 0 will be replaced by mean of blood pressure.\n* Skin thickness is normally distributed therefore 0 will be replaced by mean of skin thickness.\n* Insulin is skewed hence 0 will be replaced by median of insulin.\n* BMI is normally distributed therefore 0 will be replaced by mean of BMI.","97197797":"From the above plot we can see that XGBoost classifier is most accurate and decision tree is least accurate on data.","4589f68b":"As observed earlier that high Glucose leads to diabetes","29d6ff60":"From above pairplot we can see that:\n1. A person with high Glucose can be diabetic.\n2. A person with thick tricep skin can be diabetic.\n3. A person with high BMI can be diabetic.","f1ae8473":"From the graph we can say that person with more age is more likely to be diabetic","b9ae96f7":"Will remove entries for more than 600 insulin"}}