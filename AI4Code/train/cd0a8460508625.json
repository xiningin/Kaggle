{"cell_type":{"dc4d17ea":"code","953363a9":"code","ce594d90":"code","075f9b0a":"code","4af16118":"code","d82df3c4":"code","1c15daee":"code","97a1fef6":"code","664471db":"code","01e260de":"code","e5934d4a":"code","883f9134":"code","6b882ce1":"code","931572ac":"code","08e12f96":"code","6204e676":"code","44b9a63a":"code","ffe71367":"code","7b9aebce":"code","41dbaa2e":"code","8b04f59e":"code","4e983de7":"code","d5f0d614":"code","ae6761fa":"code","1efc7ac0":"code","82773e60":"code","b37fd3ae":"code","2e685852":"code","5fead71b":"code","deb4a74b":"code","83f53138":"code","55336f0f":"code","3c8200bc":"code","dc0036de":"code","bfb087ce":"code","040a7b9e":"code","99c11f5f":"code","40d65e39":"code","f51d1331":"code","75100de8":"code","80f98e8b":"markdown","ab594183":"markdown","3e8e20c0":"markdown","203703ba":"markdown","1b60bd7a":"markdown","63c9d322":"markdown","9b265be5":"markdown","12f441aa":"markdown","fc40a852":"markdown","ba45a934":"markdown","f5af975c":"markdown","3d0734e5":"markdown","863b348f":"markdown","e9353df3":"markdown","32e1cacd":"markdown","08120f9a":"markdown","4d55b3b7":"markdown","ff9e630f":"markdown","f677da77":"markdown","a394d166":"markdown","a1e03f7f":"markdown"},"source":{"dc4d17ea":"from datetime import datetime, timedelta\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns","953363a9":"dateparse = lambda x: pd.datetime.strptime(x, '%m\/%d\/%Y %H:%M')\ndf = pd.read_csv('\/kaggle\/input\/onlineretail\/OnlineRetail.csv', parse_dates=['InvoiceDate'], date_parser=dateparse, encoding = 'unicode_escape')","ce594d90":"df.head()","075f9b0a":"df.shape","4af16118":"df = df.loc[df['Quantity'] > 0]\ndf.shape","d82df3c4":"df['CustomerID'].describe()","1c15daee":"df['CustomerID'].isna().sum()","97a1fef6":"df.loc[df['CustomerID'].isna()].head()","664471db":"df.shape","01e260de":"df1 = df.dropna(subset=['CustomerID'])\ndf1.shape","e5934d4a":"df1.head()","883f9134":"customer_item_matrix = df1.pivot_table(index='CustomerID',columns='StockCode',values='Quantity',aggfunc='sum')","6b882ce1":"customer_item_matrix.loc[12481:].head()","931572ac":"customer_item_matrix.shape","08e12f96":"df1['CustomerID'].nunique()","6204e676":"df1['StockCode'].nunique()","44b9a63a":"customer_item_matrix.loc[12348.0].sum()","ffe71367":"customer_item_matrix = customer_item_matrix.applymap(lambda x: 1 if x>0 else 0)","7b9aebce":"customer_item_matrix.loc[12481:].head()","41dbaa2e":"from sklearn.metrics.pairwise import cosine_similarity","8b04f59e":"user_to_user_sim_matrix = pd.DataFrame(cosine_similarity(customer_item_matrix))","4e983de7":"user_to_user_sim_matrix.head()","d5f0d614":"user_to_user_sim_matrix.columns = customer_item_matrix.index","ae6761fa":"user_to_user_sim_matrix['CustomerID'] = customer_item_matrix.index","1efc7ac0":"user_to_user_sim_matrix = user_to_user_sim_matrix.set_index('CustomerID')","82773e60":"user_to_user_sim_matrix.head()","b37fd3ae":"user_to_user_sim_matrix.loc[12350.0].sort_values(ascending = False)","2e685852":"items_bought_by_A = set(customer_item_matrix.loc[12350.0].iloc[customer_item_matrix.loc[12350.0].nonzero()].index)","5fead71b":"items_bought_by_A","deb4a74b":"items_bought_by_B = set(customer_item_matrix.loc[17935.0].iloc[customer_item_matrix.loc[17935.0].nonzero()].index)","83f53138":"items_bought_by_B","55336f0f":"items_to_recommend_User_B = items_bought_by_A - items_bought_by_B","3c8200bc":"items_to_recommend_User_B","dc0036de":"df1.loc[\n    df['StockCode'].isin(items_to_recommend_User_B),\n    ['StockCode','Description']\n].drop_duplicates().set_index('StockCode')","bfb087ce":"item_item_sim_matrix = pd.DataFrame(cosine_similarity(customer_item_matrix.T))","040a7b9e":"item_item_sim_matrix.columns = customer_item_matrix.T.index\nitem_item_sim_matrix['StockCode'] = customer_item_matrix.T.index\nitem_item_sim_matrix = item_item_sim_matrix.set_index('StockCode')","99c11f5f":"item_item_sim_matrix.head()","40d65e39":"top_10_similar_items = list(\n    item_item_sim_matrix\\\n        .loc['23166']\\\n        .sort_values(ascending=False)\\\n        .iloc[:10]\\\n    .index\n)","f51d1331":"top_10_similar_items","75100de8":"df.loc[\n    df['StockCode'].isin(top_10_similar_items), \n    ['StockCode', 'Description']\n].drop_duplicates().set_index('StockCode').loc[top_10_similar_items]","80f98e8b":"### You can user this Kernel for commercial or educational use. You can add to it. Kindly leave a thumbs up and comment","ab594183":"## We analyze an online retail data set and provide recommendation to User B depending on User A buying pattern, list the top 10 similar product based on consine similarity Matrix from SkLearn.","3e8e20c0":"We drop null values for the customers and return rows with valid ID","203703ba":"##### Walah! We just got top 10 similar items. In human sense, we can relate its simialar","1b60bd7a":"### 3. Now we create a Customer-Item Matrix. ","63c9d322":"Items bought by User A","9b265be5":"### 5. Another type: Item-Based Collaborative Filtering[](http:\/\/)","12f441aa":"So there are null values of customer ID","fc40a852":"##### Walah! We just picked a random customer ID and found some recommendation items for him based on User A","ba45a934":"summary of the CustomerID field","f5af975c":"Lets get rid of rows lesser than zero","3d0734e5":"#### Now we make Recommendations","863b348f":"#### We setup user to user matrix table column names and the user ID","e9353df3":"### 1. Load the libraries and data set","32e1cacd":"#### Now we make Recommendations","08120f9a":"### 4. User based Collaborative Filtering using Sklearn module","4d55b3b7":"Note: we use 3 columns which include CustomerID, StockCode, Quantity and create a pivot table","ff9e630f":"One Hot Encoding: We apply lambda function to convert anything above zero to 1 and zero to 0","f677da77":"#### User based Collaborative Filtering\n- User to User Similarity Matrix","a394d166":"Get rid of rows consisting o Null values in CustomerID","a1e03f7f":"### 2. Prepare the Data"}}