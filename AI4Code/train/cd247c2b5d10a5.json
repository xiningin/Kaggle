{"cell_type":{"140ec301":"code","967ea139":"code","06e83a35":"code","85f0b451":"code","525758dd":"markdown","97e7d4a4":"markdown"},"source":{"140ec301":"\ndef weights_exact(step,sum,n):\n    if sum%step!=0:\n        return \"This step is not allowed.\"\n    w=list()\n    weights=list()\n    w[0:n]=[0]*(n)\n    w[0]=sum\n    counter=0\n    i=0\n    weights.append(w.copy())\n    while w[n-1]!=sum:\n        w[i] =0\n        i=i+1\n        w[i]=w[i]+step        \n        counter=counter+step\n        if counter==sum:\n            counter=counter-w[i]\n        else:\n            w[0]=sum-counter\n            i=0\n        weights.append(w.copy())\n    return weights\n    \n        ","967ea139":"w=weights_exact(10,50,3)\nprint(w)","06e83a35":"def weights(step,sum,n):    \n    sum_adj=round(int(sum\/step)*step,5)\n    w=list()\n    weights=list()\n    w[0:n]=[0]*n\n    w[0]=sum    \n    counter=0\n    i=0\n    weights.append(w.copy())\n    while round(w[n-1],5)!=sum:\n        w[i] =0        \n        i=i+1     \n        w[i]=round(w[i]+step,5)    \n        counter=round(counter+step,5)\n        if counter==sum_adj:\n            counter=round(counter-w[i],5)\n            w[i]=round(w[i]+sum-sum_adj,5)\n        else:\n            w[0]=round(sum-counter,5)\n            i=0\n        weights.append(w.copy())\n    return weights\n    ","85f0b451":"w=weights(33.33,100,3)\nprint(w)","525758dd":"Following procedure does almost the same as previous procedure, but weights do not have to sum up to *sum* exactly.","97e7d4a4":"# Non-negative weights assignment\n\n\n\nFollowing procedure assigns weights to **w**[*i*], so they sum up to *sum* for *i*=0...*n*-1. Weights have to sum up to *sum* exactly. If *sum*=100, just steps like 0.5,1,2,5,10,25 are allowed. As *n* is increasing and *step* is decreasing, assignments count is increasing very steeply."}}