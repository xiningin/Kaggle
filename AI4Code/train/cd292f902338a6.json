{"cell_type":{"b5290502":"code","452da96e":"code","c001ed9c":"code","8ee8f2ef":"code","bf12f101":"code","5745af84":"code","56ad68d6":"code","05e3670c":"code","3e56cadd":"code","6acc56f3":"code","99f05cc5":"code","ce37fee6":"code","6747483a":"code","57cdc5b2":"code","9adbe57b":"code","160402d7":"code","049b63a0":"code","9a4ff23c":"code","c2da35c4":"code","932e1513":"code","40227765":"code","4a7b0c69":"code","eb3f2f1f":"code","649cd9f7":"code","a9f65530":"code","8287448f":"code","383f34be":"markdown","1a879199":"markdown"},"source":{"b5290502":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","452da96e":"saleReport = pd.read_csv('..\/input\/SalesReport.csv')\nsaleReport = saleReport[saleReport['Product Code'] != 'SHIP']\nsaleReport = saleReport[saleReport['Product Code'] != 'DISCOUNT']","c001ed9c":"def getProductFromReport(saleReportinput):\n    productCodeList = saleReportinput['Product Code'].unique()\n    productSellQuantityList = []\n    for productCode in productCodeList:\n        total = 0\n        productSaleQuantity = saleReportinput[saleReportinput['Product Code'] == productCode]['Order Qty']\n        for productQuantity in productSaleQuantity:\n            total += int(productQuantity.split('.')[0].replace(',', ''))\n        productSellQuantityList.append(total)\n    productSellQuantityForThisPeriod = pd.DataFrame(columns=['Product Code', 'Sell Quantity'])\n    productSellQuantityForThisPeriod['Product Code'], productSellQuantityForThisPeriod['Sell Quantity'] = productCodeList, productSellQuantityList\n    \n    return productSellQuantityForThisPeriod","8ee8f2ef":"productSellQuantityForAYear = getProductFromReport(saleReport)\nproductSellQuantityForAYear = productSellQuantityForAYear.sort_values(by='Sell Quantity', ascending=False)\ntop100bestsellProduct = productSellQuantityForAYear.head(100)\nsellLessThan5 = productSellQuantityForAYear[productSellQuantityForAYear['Sell Quantity'] <= 5]\ntop100bestsellProduct.to_csv('top100bestsellProduct.csv')\nsellLessThan5.to_csv('sellLessThan5.csv')","bf12f101":"firstMonthSaleReport = saleReport[saleReport['Order Date'] <= 20180418.0]\nfirstMonthSaleReport = firstMonthSaleReport[firstMonthSaleReport['Order Date'] >= 20180318.0]\nsecondMonthSaleReport = saleReport[saleReport['Order Date'] <= 20180518.0]\nsecondMonthSaleReport = secondMonthSaleReport[secondMonthSaleReport['Order Date'] >= 20180418.0]\nthirdMonthSaleReport = saleReport[saleReport['Order Date'] <= 20180618.0]\nthirdMonthSaleReport = thirdMonthSaleReport[thirdMonthSaleReport['Order Date'] >= 20180518.0]\nforthMonthSaleReport = saleReport[saleReport['Order Date'] <= 20180718.0]\nforthMonthSaleReport = forthMonthSaleReport[forthMonthSaleReport['Order Date'] >= 20180618.0]\nfifthMonthSaleReport = saleReport[saleReport['Order Date'] <= 20180818.0]\nfifthMonthSaleReport = fifthMonthSaleReport[fifthMonthSaleReport['Order Date'] >= 20180718.0]\nsixthMonthSaleReport = saleReport[saleReport['Order Date'] <= 20180918.0]\nsixthMonthSaleReport = sixthMonthSaleReport[sixthMonthSaleReport['Order Date'] >= 20180818.0]\nseventhMonthSaleReport = saleReport[saleReport['Order Date'] <= 20181018.0]\nseventhMonthSaleReport = seventhMonthSaleReport[seventhMonthSaleReport['Order Date'] >= 20180918.0]\neighthMonthSaleReport = saleReport[saleReport['Order Date'] <= 20181118.0]\neighthMonthSaleReport = eighthMonthSaleReport[eighthMonthSaleReport['Order Date'] >= 20181018.0]\nninthMonthSaleReport = saleReport[saleReport['Order Date'] <= 20181218.0]\nninthMonthSaleReport = ninthMonthSaleReport[ninthMonthSaleReport['Order Date'] >= 20181118.0]\ntenthMonthSaleReport = saleReport[saleReport['Order Date'] <= 20190118.0]\ntenthMonthSaleReport = tenthMonthSaleReport[tenthMonthSaleReport['Order Date'] >= 20181218.0]\neleventhMonthSaleReport = saleReport[saleReport['Order Date'] <= 20190218.0]\neleventhMonthSaleReport = eleventhMonthSaleReport[eleventhMonthSaleReport['Order Date'] >= 20190118.0]\ntwelfthMonthSaleReport = saleReport[saleReport['Order Date'] <= 20190318.0]\ntwelfthMonthSaleReport = twelfthMonthSaleReport[twelfthMonthSaleReport['Order Date'] >= 20190218.0]\n\nfirstMonthSellDistribution = getProductFromReport(firstMonthSaleReport)\nsecondMonthSellDistribution = getProductFromReport(secondMonthSaleReport)\nthirdMonthSellDistribution = getProductFromReport(thirdMonthSaleReport)\nforthMonthSellDistribution = getProductFromReport(forthMonthSaleReport)\nfifthMonthSellDistribution = getProductFromReport(fifthMonthSaleReport)\nsixthMonthSellDistribution = getProductFromReport(sixthMonthSaleReport)\nseventhMonthSellDistribution = getProductFromReport(seventhMonthSaleReport)\neighthMonthSellDistribution = getProductFromReport(eighthMonthSaleReport)\nninthMonthSellDistribution = getProductFromReport(ninthMonthSaleReport)\ntenthMonthSellDistribution = getProductFromReport(tenthMonthSaleReport)\neleventhMonthSellDistribution = getProductFromReport(eleventhMonthSaleReport)\ntwelfthMonthSellDistribution = getProductFromReport(twelfthMonthSaleReport)","5745af84":"from functools import reduce\nproductSellDistributionLastYear = reduce(lambda x, y: pd.merge(x, y, on='Product Code', how='outer'), [firstMonthSellDistribution, secondMonthSellDistribution, thirdMonthSellDistribution, forthMonthSellDistribution, fifthMonthSellDistribution, sixthMonthSellDistribution, seventhMonthSellDistribution, eighthMonthSellDistribution, ninthMonthSellDistribution, tenthMonthSellDistribution, eleventhMonthSellDistribution, twelfthMonthSellDistribution])\nproductSellDistributionLastYear.fillna(0, inplace=True)\nproductSellDistributionLastYear.columns = ['Product Code', '1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th', '9th', '10th', '11th', '12th']\n\nkwfrf10bk = productSellDistributionLastYear[productSellDistributionLastYear['Product Code'] == 'KWFRF10BK']\nproductSellDistributionEachThreeMonthLastYear = pd.DataFrame(columns=['Product Code', '1st 3 month', '2nd 3 month', '3rd 3 month', '4th 3 month'])\nproductSellDistributionEachThreeMonthLastYear['Product Code'] = productSellDistributionLastYear['Product Code'] \nproductSellDistributionEachThreeMonthLastYear['1st 3 month'] = productSellDistributionLastYear['1st'] + productSellDistributionLastYear['2nd'] + productSellDistributionLastYear['3rd']\nproductSellDistributionEachThreeMonthLastYear['2nd 3 month'] = productSellDistributionLastYear['4th'] + productSellDistributionLastYear['5th'] + productSellDistributionLastYear['6th']\nproductSellDistributionEachThreeMonthLastYear['3rd 3 month'] = productSellDistributionLastYear['7th'] + productSellDistributionLastYear['8th'] + productSellDistributionLastYear['9th']\nproductSellDistributionEachThreeMonthLastYear['4th 3 month'] = productSellDistributionLastYear['10th'] + productSellDistributionLastYear['11th'] + productSellDistributionLastYear['12th']\n\nproductSellDistributionhalfYearLastYear =  pd.DataFrame(columns=['Product Code', 'first half year', 'next half year'])\nproductSellDistributionhalfYearLastYear['Product Code'] = productSellDistributionLastYear['Product Code'] \nproductSellDistributionhalfYearLastYear['next half year'] = productSellDistributionLastYear['4th'] + productSellDistributionLastYear['5th'] + productSellDistributionLastYear['6th'] + productSellDistributionLastYear['7th'] + productSellDistributionLastYear['8th'] + productSellDistributionLastYear['9th'] \nproductSellDistributionhalfYearLastYear['first half year'] = productSellDistributionLastYear['10th'] + productSellDistributionLastYear['11th'] + productSellDistributionLastYear['12th'] + productSellDistributionLastYear['1st'] + productSellDistributionLastYear['2nd'] + productSellDistributionLastYear['3rd']\n\nproductSellDistributionLastYear.to_csv('productSellDistributionLastYear.csv')\nproductSellDistributionEachThreeMonthLastYear.to_csv('productSellDistributionEachThreeMonthLastYear.csv')\nproductSellDistributionhalfYearLastYear.to_csv('productSellDistributionhalfYearLastYear.csv')\n","56ad68d6":"products = []\nvariances = []\nfor productCode in productSellDistributionLastYear['Product Code']:\n    row = productSellDistributionLastYear[productSellDistributionLastYear['Product Code'] == productCode]\n    variance = np.var([int(row['1st']), int(row['2nd']), int(row['3rd']), int(row['4th']), int(row['5th']), int(row['6th']), int(row['7th']), int(row['8th']), int(row['9th']), int(row['10th']), int(row['11th']), int(row['12th'])])\n    products.append(productCode)\n    variances.append(variance)\nproductVarianceDistributionLastYear = pd.DataFrame(columns=['Product Code', 'Variances'])\nproductVarianceDistributionLastYear['Product Code'], productVarianceDistributionLastYear['Variances'] = products, variances\n\nproductVarianceDistributionLastYear.sort_values(by='Variances', inplace=True, ascending=False)","05e3670c":"productsInventory = pd.read_csv('..\/input\/inventory.csv')","3e56cadd":"productsInventory","6acc56f3":"condition1Passed = productsInventory[productsInventory['Quantity in Stock'] == '0.00']\n","99f05cc5":"productSellDistributionLastYear","ce37fee6":"productVarianceDistributionLastYear","6747483a":"bigVarianceProduct = []\nfor productCode in productSellDistributionLastYear['Product Code']:\n    row = productSellDistributionLastYear[productSellDistributionLastYear['Product Code'] == productCode]\n    sellList = list([int(row['1st']), int(row['2nd']), int(row['3rd']), int(row['4th']), int(row['5th']), int(row['6th']), int(row['7th']), int(row['8th']), int(row['9th']), int(row['10th']), int(row['11th']), int(row['12th'])])\n    if int(productVarianceDistributionLastYear[productVarianceDistributionLastYear['Product Code'] == productCode]['Variances']) ** 2 > 1.8:\n        bigVarianceProduct.append(productCode)","57cdc5b2":"np.var([2, 0, 0, 0, 2, 1, 1, 3, 0, 1, 1, 0])","9adbe57b":"\n\ninventoryMayShortageList = productSellDistributionLastYear.loc[productSellDistributionLastYear['Product Code'].isin(bigVarianceProduct)]","160402d7":"bigVarianceProduct = []\nproductCodesList = []\nmonthRequiredList = []\nfor productCode in inventoryMayShortageList['Product Code']:\n    row = inventoryMayShortageList[inventoryMayShortageList['Product Code'] == productCode]\n    sellList = list([int(row['1st']), int(row['2nd']), int(row['3rd']), int(row['4th']), int(row['5th']), int(row['6th']), int(row['7th']), int(row['8th']), int(row['9th']), int(row['10th']), int(row['11th']), int(row['12th'])])\n    monthRequired = 12\n    for i in range(1, len(sellList)):\n        if sellList[i] == 0:\n            j = i - 1\n            while sellList[j] == 0:\n                j -= 1\n            if sellList[j] > 5:\n                monthRequired -= 1\n    \n    productCodesList.append(productCode)\n    monthRequiredList.append(monthRequired)\n    \nshortageProductwithMonthRequired = pd.DataFrame(columns=['Product Code', 'Month Required'])\nshortageProductwithMonthRequired['Product Code'] = productCodesList\nshortageProductwithMonthRequired['Month Required'] = monthRequiredList\n                ","049b63a0":"shortageProductwithMonthRequired = shortageProductwithMonthRequired[shortageProductwithMonthRequired['Month Required'] != 12]","9a4ff23c":"shortageProductwithMonthRequired","c2da35c4":"averageSales = []\nfor productCode in productSellDistributionLastYear['Product Code']:\n    row = productSellDistributionLastYear[productSellDistributionLastYear['Product Code'] == productCode]\n    saleQuantityforAyear = sum([int(row['1st']), int(row['2nd']), int(row['3rd']), int(row['4th']), int(row['5th']), int(row['6th']), int(row['7th']), int(row['8th']), int(row['9th']), int(row['10th']), int(row['11th']), int(row['12th'])])\n    averageSale = 0\n    if productCode in shortageProductwithMonthRequired['Product Code']:\n        averageSale = float(saleQuantityforAyear) \/ shortageProductwithMonthRequired[shortageProductwithMonthRequired['Product Code'] == productCode] \/ 4\n        averageSales.append(averageSale)\n    else:\n        averageSale = float(saleQuantityforAyear) \/ 12 \/ 4\n        averageSales.append(averageSale)\n\n        \n\nproductSellPerWeek = pd.DataFrame(columns=['Product Code', 'Sell per Week'])\nproductSellPerWeek['Product Code'] = productSellDistributionLastYear['Product Code']\nproductSellPerWeek['Sell per Week'] = averageSales\n    ","932e1513":"productSellPerWeek","40227765":"productSellPerWeek = productSellPerWeek[productSellPerWeek['Sell per Week'] != 0.000000]","4a7b0c69":"productsInventory","eb3f2f1f":"renamedProducts = []\nfor product in productSellPerWeek['Product Code']:\n    quantity = productsInventory[productsInventory['Product Code'] == product]['Quantity in Stock']\n    if quantity.empty:\n        renamedProducts.append(product)\n    ","649cd9f7":"remainingWeeks = []\nproductsCodeList = []\nproductSellPerWeekList = []\nproductStockList = []\nfor product in productSellPerWeek['Product Code']:\n    if product not in renamedProducts:\n        remainingWeeks.append(int(float(productsInventory[productsInventory['Product Code'] == product]['Quantity in Stock'].values[0].replace(',', '')) \/ productSellPerWeek[productSellPerWeek['Product Code'] == product]['Sell per Week'].values[0]))\n        productsCodeList.append(product)\n        productSellPerWeekList.append(productSellPerWeek[productSellPerWeek['Product Code'] == product]['Sell per Week'].values[0])\n        productStockList.append(float(productsInventory[productsInventory['Product Code'] == product]['Quantity in Stock'].values[0].replace(',', '')))\nproductsStockSellingRateDistribution = pd.DataFrame(columns=['Product Code','Quantity in Stock', 'Sell per Week', 'Remaining Weeks'])\nproductsStockSellingRateDistribution['Product Code'] = productsCodeList\nproductsStockSellingRateDistribution['Sell per Week'] = productSellPerWeekList\nproductsStockSellingRateDistribution['Quantity in Stock'] = productStockList\nproductsStockSellingRateDistribution['Remaining Weeks'] = remainingWeeks","a9f65530":"productsStockSellingRateDistribution = productsStockSellingRateDistribution.sort_values(by='Remaining Weeks')","8287448f":"productsStockSellingRateDistribution.to_csv('productsStockSellingRateDistribution.csv')","383f34be":"**The first 100 best sell products are:**","1a879199":"**The sales of 1090 products are less than 5 last year:**"}}