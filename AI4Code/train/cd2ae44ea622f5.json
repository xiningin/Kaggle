{"cell_type":{"68d9a448":"code","85ec7b74":"code","33ba5030":"code","981a34b6":"code","95227ad7":"code","80de3a0c":"code","83dd9446":"code","097def46":"code","946408ce":"code","c3587a86":"code","f835d6cf":"markdown","d50104dc":"markdown","997bb5dd":"markdown","275c008d":"markdown","ce254eac":"markdown","3c500e1d":"markdown","c0328c95":"markdown","2cb06876":"markdown"},"source":{"68d9a448":"pip install qrcode","85ec7b74":"pip install image","33ba5030":"import qrcode\nimport image","981a34b6":"qr = qrcode.QRCode(version=1,\n    error_correction=qrcode.constants.ERROR_CORRECT_L,\n    box_size=12,\n    border=2)","95227ad7":"data = \"https:\/\/www.linkedin.com\/in\/sonali-analyst\/\"","80de3a0c":"qr.add_data(data)","83dd9446":"qr.make(fit =True)","097def46":"img = qr.make_image(fill = 'Black',back_color = 'White')","946408ce":"img.save(\"Image.png\")","c3587a86":"from IPython.display import display, Image\ndisplay(Image(filename='Image.png'))","f835d6cf":"* **fill_color** and **back_color** can change the background and the painting color of the QR, when using the default image factory. Both parameters accept RGB color tuples.","d50104dc":"**Now you can download the LinkedIn Application on your mobile and scan my QRCode and connect me!**","997bb5dd":"* The **error_correction** parameter controls the error correction used for the QR Code. \n\n The following four constants are made available on the qrcode package:\n\n> **1.ERROR_CORRECT_L:-**\nAbout 7% or less errors can be corrected.\n\n> **2.ERROR_CORRECT_M (default):-**\nAbout 15% or less errors can be corrected.\n\n> **3.ERROR_CORRECT_:-**\nAbout 25% or less errors can be corrected.\n\n> **4.ERROR_CORRECT_H:-**\nAbout 30% or less errors can be corrected.\n\n","275c008d":"# Conclusion:-\nShort and simple explanation.\n\nHere I have created a QR code of my LinkedIn profile using the **QRcode module** of python.You can refer to any websites of your choice and generate your own QRcode.    \n    ","ce254eac":"# Hey Everyone,\n\nPlease vote up if you like this notebook. Also, try to refer to all other notebooks already attached to my profile.\n\nLet get started....\n\nToday I learnt a new module from python.\n\nLet\u2019s see how to generate QRcode in Python using the QRcode module.\n\n**What is a QR Code?**\nA Quick Response code is a two-dimensional pictographic code used for its fast readability and comparatively large storage capacity. The code consists of black modules arranged in a square pattern on a white background. The information encoded can be made up of any kind of data (e.g., binary, alphanumeric, or Kanji symbols).\n\n\n**QRcode module** is a QR code generator. The module automates most of the building process for creating QR codes.\nThis module attempts to follow the QR code standard as closely as possible. The terminology and the encodings used in QRcode come directly from the standard.\n\nYou need to install the QRcode module first.\n\n# **Pip Install QRcode**\n\nAlso, install an image module from python which will help you display the image on a screen.\n\n# **Pip Install Image**\n\nImage module:-It provides a class with the same name which is used to represent a PIL image.\n\n","3c500e1d":"* The **version** parameter is an integer from 1 to 40 that controls the size of the QR Code (the smallest, version 1, is a 21x21 matrix). ","c0328c95":"* The **box_size **parameter controls how many pixels each \u201cbox\u201d of the QR code is.\n\n* The **border** parameter controls how many boxes thick the border should be (the default is 4, which is the minimum according to the specs).","2cb06876":"**Thank you so much for your time.Happy learning!!!**"}}