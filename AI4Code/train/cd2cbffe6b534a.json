{"cell_type":{"c1d5a2d2":"code","8eab71e7":"code","743bdba5":"code","5ac4c14c":"code","b66ed36c":"code","5264e3a4":"code","b6840289":"code","481b4089":"code","28e9d6cc":"code","09981bfc":"code","737e69f5":"code","3cb4cfa9":"code","3e4c2a2b":"code","2cf548f7":"code","ef50360c":"code","95eac8a9":"code","7502cf65":"code","74e6f2f1":"code","44452719":"code","5ecb3ced":"code","0d441f20":"code","95e2665f":"code","f96c93ca":"code","d0e2edc1":"code","c96f1727":"code","f54ae23d":"markdown","74fb3085":"markdown","eadc477b":"markdown","81dc4ded":"markdown","7423e3f7":"markdown","1e049ac7":"markdown","ff5eccbc":"markdown","f7d88b45":"markdown","d27df7a6":"markdown","59e0c01c":"markdown"},"source":{"c1d5a2d2":"# Import the required packages\nimport sklearn\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport geopandas as gpd","8eab71e7":"import shapely\nimport numpy as np\nimport seaborn as sns","743bdba5":"from sklearn.cluster import KMeans\nfrom sklearn.datasets import make_blobs\nfrom sklearn.neighbors import KNeighborsClassifier","5ac4c14c":"import folium","b66ed36c":"df = pd.read_csv(\"..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv\")","5264e3a4":"## Checking the data types\ndf.dtypes","b6840289":"df.isnull().sum()","481b4089":"## id, last_review, reviews_per_month columns can be dropped\n\ndf.drop(['id','host_name','last_review', 'reviews_per_month'], axis=1, inplace=True)","28e9d6cc":"# Checking the categories of each column \ndf['room_type'].unique()\ndf['neighbourhood_group'].unique()\ndf['neighbourhood'].unique()","09981bfc":"df['price'].describe()","737e69f5":"df['minimum_nights'].describe()","3cb4cfa9":"df['number_of_reviews'].describe()","3e4c2a2b":"## Seperating the first and the last word from the name of the property\n\ndf['last'] = df[\"name\"].apply(lambda x: str(x).split()[-1])\ndf['first'] = df[\"name\"].apply(lambda x: str(x).split()[0])","2cf548f7":"## Areas with most rooms available for 365 days\n\na365 = df[df['availability_365'] == 365]\na365 = a365['neighbourhood'].value_counts()\n(a365.head(n = 20)).plot.bar(figsize =(20, 20), title = \"Localities with most number of rooms available for 365 days\")","ef50360c":"# Neighborhoods with most places for rent\ncount = df['neighbourhood'].value_counts()\n(count.head(n = 20)).plot.bar(figsize =(20, 20), title = \"Localities with most number of rooms available\")","95eac8a9":"# Number of reviews per Neighbourhood\npd.DataFrame(df[['neighbourhood_group', 'number_of_reviews']].groupby(['neighbourhood_group']).agg(['count'])).plot.bar(figsize = (20,20), title = \"Number of reviews per locality\")","7502cf65":"# Costliest Neighborhoods(Groups)\n\na = pd.DataFrame(df[['neighbourhood_group', 'price']].groupby(['neighbourhood_group']).agg(['mean']))\n\na.plot.bar(figsize = (20,20), title = \"Mean price of each Locality\")","74e6f2f1":"## Which Adjectives(first word) received the most number of reviews \nword = pd.DataFrame(df[['first', 'number_of_reviews']].groupby(['first']).agg(['count']))\nword.columns=['totalreviews']\nadjective = word.nlargest(20, ['totalreviews']) \nadjective.plot.bar(figsize = (20,20), title = \"Top Adjectives according to the number reviews\")","44452719":"## Top 20 Costliest Neighbourhoods(According to mean price)\nword = pd.DataFrame(df[['neighbourhood', 'price']].groupby(['neighbourhood']).agg(['mean']))\nword.columns=['totalprice']\nadjective = word.nlargest(20, ['totalprice']) \nadjective.plot.bar(figsize = (20,20), title = \"Top Locations according to Mean Price\")","5ecb3ced":"# Does the last word tell us anything\n\nword = pd.DataFrame(df[['last', 'number_of_reviews']].groupby(['last']).agg(['count']))\nword.columns=['totalreviews']\nadjective = word.nlargest(20, ['totalreviews']) \nadjective.plot.bar(figsize = (20,20), title = \"Which last words gained most reviews\")\n\n## Owners often used the locality names to gain cutomers and for better reviews; for eg. \"Affordable room in Bushwick\/East Williamsburg\" or \"Trendy duplex in the very heart of Hell's Kitchen\" ","0d441f20":"# Plotting Locations\nm = folium.Map(location=[df.latitude.mean(), df.longitude.mean()], zoom_start = 10, tiles = 'Open Street Map')\n\n\nfor _, row in df.iterrows():\n    folium.CircleMarker(location=[row.latitude, row.longitude],\n                       radius = 4, \n                       popup = row.name,\n                       color = '#1787FE',\n                       fill = True,\n                        fill_color = '#1787FE').add_to(m)\n    \nm    ","95e2665f":"## Let us convert the object and string data types to first categorical type and then to integer for clustering\n\ndf['neighbourhood_group'] = df['neighbourhood_group'].astype('category')\ndf['neighbourhood_group'] = df['neighbourhood_group'].cat.codes\n\ndf['room_type'] = df['room_type'].astype('category')\ndf['room_type'] = df['room_type'].cat.codes\n\ndf['neighbourhood'] = df['neighbourhood'].astype('category')\ndf['neighbourhood'] = df['neighbourhood'].cat.codes\n\ndf['last'] = df['last'].astype('category')\ndf['last'] = df['last'].cat.codes\n\ndf['first'] = df['first'].astype('category')\ndf['first'] = df['first'].cat.codes","f96c93ca":"X = np.array(df[['longitude', 'latitude', 'host_id', 'neighbourhood', 'neighbourhood_group', 'room_type', 'number_of_reviews', 'price', 'minimum_nights', 'calculated_host_listings_count', 'availability_365', 'last', 'first']], dtype='float64')\n","d0e2edc1":"## Making a column for clusters\n\nX = np.array(df[['longitude', 'latitude', 'host_id', 'neighbourhood', 'neighbourhood_group', 'room_type', 'number_of_reviews', 'price', 'minimum_nights', 'calculated_host_listings_count', 'availability_365', 'last', 'first']])\n\nk = 70\nmodel = KMeans(n_clusters=k, random_state=17).fit(X)\nclass_predictions = model.predict(X)\ndf[f'Cluster_'] = class_predictions","c96f1727":"## Check the clusters column\ndf","f54ae23d":"*Please Upvote if you liked it ! *","74fb3085":"**4. *Feature Engineering***","eadc477b":"# Clustering of the AirBNB Data","81dc4ded":"**5. *Data Visualisation***","7423e3f7":"**6. *Creating the Clusters***","1e049ac7":"Neighbourhood Analysis","ff5eccbc":"Whats in the Name ?","f7d88b45":"**1. *Importing the Data***","d27df7a6":"**3. *Analysing the Data***","59e0c01c":"**2. *Cleaning the Data***"}}