{"cell_type":{"88599db5":"code","e53b0c35":"code","f0309735":"code","eb7ef6ef":"code","754836b2":"code","f125f8f3":"code","8414e8ab":"code","358e0fbb":"code","4b06b673":"code","81ecda73":"code","456d354a":"code","5e0abdcf":"code","a1535d84":"code","c11169cf":"code","30f3fb9f":"markdown"},"source":{"88599db5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e53b0c35":"dataset = pd.read_csv(\"\/kaggle\/input\/kerala-assembly-election-history\/Election dataset.csv\")","f0309735":"dataset.head()","eb7ef6ef":"dataset.describe().T","754836b2":"dataset.nunique()","f125f8f3":"dataset.shape","8414e8ab":"print(dataset.groupby('Party').size())","358e0fbb":"print(\"The numbers of votes voted in kerala assembly election are:\",dataset[\"Total Votes\"].sum() )","4b06b673":"import matplotlib.pyplot as plt\n\nimport seaborn as sns\ndef plot_missing_data(dataset, title):\n    fig, ax = plt.subplots(figsize=(5,5))\n    plt.title(title)  \n    sns.heatmap(dataset.isnull(), cbar=False)","81ecda73":"plot_missing_data(dataset, \"Kerala Assembly Election History\")","456d354a":"# dataset['AC Name'].value_counts()\ndataset['AC Name'].unique()","5e0abdcf":"dataset.groupby(['Party'])['Total Votes'].sum().sort_values().to_frame()","a1535d84":"def display_counts(dataset, feature, title, fsize = (5,5)):\n    fig, ax = plt.subplots(figsize=fsize)\n    sns.countplot(dataset[feature], ax=ax).set_title(title)","c11169cf":"display_counts(dataset, \"Type\", \"Distribution by Type\")","30f3fb9f":"Total Number of votes "}}