{"cell_type":{"2953a6f2":"code","fb5001a1":"code","f960bfc8":"code","2d9899df":"code","1c3e00e5":"code","0afecf7c":"code","cc4144f2":"code","9e08d5d5":"code","67f7ee5a":"code","93eedb7a":"code","866df82f":"code","c09967da":"code","7b798424":"code","45977720":"code","fb246edf":"markdown","fa6d9009":"markdown","eab4d519":"markdown","232b5649":"markdown","535b07c5":"markdown"},"source":{"2953a6f2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nplt.style.use('fivethirtyeight')\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\nimport xml.etree.ElementTree as ET\nimport re\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fb5001a1":"#Code by LazyPanda  https:\/\/www.kaggle.com\/runesh\/rider-ride-data-from-tcx-file-plotted-on-a-graph\n\n# Reading and setting up the data frame from TCX file\nride_time = []\nHR_rate = []\nlat = []\nlon = []\nalt = []\ndist = []\ncadence = []\nspeed = []\nwatt = []\nwith open('\/kaggle\/input\/tcx-file-cycling-dataset\/Lazy_Sunday.tcx') as xml_file:\n    xml_str = xml_file.read()\n    xml_str = re.sub(' xmlns=\"[^\"]+\"', '', xml_str, count=1)\n    root = ET.fromstring(xml_str)\n    activities = root.findall('.\/\/Activity')\n    for activity in activities:\n        tracking_points = activity.findall('.\/\/Trackpoint')\n        for tracking_point in list(tracking_points):\n            children = list(tracking_point)\n            ride_time.append(children[0].text)\n            HR_rate.append(list(children[4])[0].text)\n            lat.append(list(children[1])[0].text)\n            lon.append(list(children[1])[1].text)\n            alt.append(children[2].text)\n            dist.append(children[3].text)\n            cadence.append(children[5].text)\n            speed.append(list(children[6])[0][0].text)\n            watt.append(list(children[6])[0][1].text)","f960bfc8":"#Code by LazyPanda  https:\/\/www.kaggle.com\/runesh\/rider-ride-data-from-tcx-file-plotted-on-a-graph\n\n#Creating a new DataFrame\ndf = pd.DataFrame({'Time':ride_time,\n                      'HR Rate':HR_rate,\n                     'Latitude':lat,\n                     'Longitude':lon,\n                     'Altitude':alt,\n                     'Distance':dist,\n                     'Cadence':cadence,\n                     'speed':speed,\n                     'watt':watt})\ndf.head()","2d9899df":"df.describe()","1c3e00e5":"df.isnull().sum()","0afecf7c":"#Code by LazyPanda  https:\/\/www.kaggle.com\/runesh\/rider-ride-data-from-tcx-file-plotted-on-a-graph\n\ndef findMean(data):\n    data = data.astype(float)\n    return data.mean()","cc4144f2":"#Code by LazyPanda  https:\/\/www.kaggle.com\/runesh\/rider-ride-data-from-tcx-file-plotted-on-a-graph\n\ncut1 = df.iloc[0:1000]\ncut2 = df.iloc[1001:2000]\ncut3 = df.iloc[2001:3000]\ncut4 = df.iloc[3001:4000]\ncut5 = df.iloc[4001:5000]\ncut6 = df.iloc[5001:6000]\ncut7 = df.iloc[6001:7000]\ncut8 = df.iloc[7001:8000]\n\ncuts = [cut1,cut2,cut3,cut4,cut5,cut6,cut7,cut8]\n\nspeed_mean = []\ndistance_mean = []\nhr_mean = []\nwatt_mean = []\ncadence_mean = []\nfor c in cuts:\n    speed_mean.append(findMean(c['speed']))\n    distance_mean.append(findMean(c['Distance'])*0.001)# converting meters to KM *0.001\n    hr_mean.append(findMean(c['HR Rate']))\n    watt_mean.append(findMean(c['watt']))\n    cadence_mean.append(findMean(c['Cadence']))","9e08d5d5":"#Code by LazyPanda  https:\/\/www.kaggle.com\/runesh\/rider-ride-data-from-tcx-file-plotted-on-a-graph\n\nplt.figure(figsize=(12,6))\nplt.title(\"Speed chart on Distance\")\nplt.xlabel(\"Distance(km)\")\nplt.ylabel(\"Speed(mph)\")\nsns.lineplot(x=distance_mean,y=speed_mean);","67f7ee5a":"#Code by LazyPanda  https:\/\/www.kaggle.com\/runesh\/rider-ride-data-from-tcx-file-plotted-on-a-graph\n\nplt.figure(figsize=(12,6))\nplt.title(\"Heart Rate with Distance\")\nplt.xlabel(\"Distance(km)\")\nplt.ylabel(\"HR\")\nsns.lineplot(x=distance_mean,y=hr_mean);","93eedb7a":"#Code by LazyPanda  https:\/\/www.kaggle.com\/runesh\/rider-ride-data-from-tcx-file-plotted-on-a-graph\n\nplt.figure(figsize=(12,6))\nplt.title(\"Cadence with Distance\")\nplt.xlabel(\"Distance(km)\")\nplt.ylabel(\"Cadence\")\nsns.lineplot(x=distance_mean,y=cadence_mean);","866df82f":"#Code by LazyPanda  https:\/\/www.kaggle.com\/runesh\/rider-ride-data-from-tcx-file-plotted-on-a-graph\n\nplt.figure(figsize=(12,6))\nplt.title(\"Power with Distance\")\nplt.xlabel(\"Distance(km)\")\nplt.ylabel(\"watt\")\nsns.lineplot(x=distance_mean,y=watt_mean);","c09967da":"#Codes by Tawej https:\/\/www.kaggle.com\/tawejssh\/covid-19\n\nplt.figure(figsize=(20,7))\nplt.plot(df['speed'], label='speed')\nplt.plot(df['Cadence'], label='Cadence')\nplt.plot(df['watt'], label='watt')\n\nplt.legend()\n#plt.grid()\nplt.title('Smartwatch Riding records')\nplt.xticks(df.index,rotation=45)\nplt.xlabel('Count')\nplt.ylabel('Count')\nplt.show()","7b798424":"fig = px.line(df, x=\"Distance\", y=\"speed\", color_discrete_sequence=['darksalmon'], \n              title=\"Lazy Sunday Riding Records\")\nfig.show()","45977720":"fig = px.line(df, x=\"Distance\", y=\"Cadence\", color_discrete_sequence=['darkgreen'], \n              title=\"Lazy Sunday Riding Records\")\nfig.show()","fb246edf":"<h1 style=\"background-color:#DC143C; font-family:'Brush Script MT',cursive;color:white;font-size:200%; text-align:center;border-radius: 50% 20% \/ 10% 40%\">What is a TCX file?<\/h1>\n\nA TCX file is an XML file used to transfer workout data between fitness devices. It contains a record of a user's workout, including the user's running or cycling course, heart rate, cadence, lap time, and calories burned. TCX files are typically created by Garmin and Fitbit devices.\n\nhttps:\/\/fileinfo.com\/extension\/tcx","fa6d9009":"#Code by LazyPanda  https:\/\/www.kaggle.com\/runesh\/rider-ride-data-from-tcx-file-plotted-on-a-graph","eab4d519":"#It's a Garmin smartwatch. There is No Missing values.","232b5649":"![](https:\/\/image.slidesharecdn.com\/garminapiintegration-150828103300-lva1-app6892\/95\/garmin-api-integration-8-638.jpg?cb=1440758092)slideshare.net","535b07c5":"#Thank you LazyPanda for the TCX script.\n\nhttps:\/\/www.kaggle.com\/runesh\/rider-ride-data-from-tcx-file-plotted-on-a-graph"}}