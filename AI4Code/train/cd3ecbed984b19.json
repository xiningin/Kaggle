{"cell_type":{"3a3d7326":"code","bc45a36a":"code","a369ff30":"code","038dcc23":"code","dfeb3d19":"code","0112d0b5":"code","e17666cf":"code","32c2fdb2":"code","e367bc0e":"code","1e5608f7":"code","a88898af":"code","1cc5a763":"code","e002a8db":"code","c2308466":"code","38426d24":"code","23811a8d":"code","53a7f316":"code","d0013c0b":"code","6ff50fc5":"code","d77ec618":"code","14fc4cbd":"code","05281bc8":"code","d71a01ff":"markdown"},"source":{"3a3d7326":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","bc45a36a":"import pandas as pd #for data importing and manupulation\nimport numpy as np  #for data manupulation and cleaning\nimport seaborn as sns # data visualization\nimport matplotlib.pyplot as plt # data visualization\n%matplotlib inline ","a369ff30":"train = pd.read_csv('\/kaggle\/input\/cat-in-the-dat-ii\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/cat-in-the-dat-ii\/test.csv')\nsub = pd.read_csv('\/kaggle\/input\/cat-in-the-dat-ii\/sample_submission.csv')","038dcc23":"from catboost import CatBoostClassifier","dfeb3d19":"#Imputing missing values for both train and test\ntrain.fillna(0, inplace=True)\ntest.fillna(0,inplace=True)","0112d0b5":"sub.head()","e17666cf":"test_id = test['id']","32c2fdb2":"train = train.drop('id', axis=1)\ntest = test.drop('id', axis=1)","e367bc0e":"X = train.drop('target', axis=1)\ny = train.target","1e5608f7":"len(test)","a88898af":"from sklearn.model_selection import train_test_split","1cc5a763":"# Split the data into 30% validation and 70% training\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.15, random_state=101)","e002a8db":"categorical_features_indices = np.where(X.dtypes != np.float)[0]","c2308466":"model=CatBoostClassifier(iterations=1000, #leaf_estimation_iterations=10,#800\n                              learning_rate=0.1,\n                              depth=5,#loss_function='MultiClass',#,scale_pos_weight=200,\n                             #l2_leaf_reg=10,\n                             bootstrap_type='Bernoulli',\n                              subsample=0.9,\n                              eval_metric='AUC',\n                              metric_period=20,\n                                   #class_weight s=0,\n                              #od_type='Iter',\n                              #od_wait=45,\n                              #random_seed=10,\n                              allow_writing_files=False)","38426d24":"model.fit(X_train, y_train, cat_features=categorical_features_indices, eval_set=(X_val, y_val))","23811a8d":"y_pred=model.predict_proba(test)[:, 1]","53a7f316":"from sklearn.metrics import roc_auc_score","d0013c0b":"print(roc_auc_score(y_val, model.predict_proba(X_val)[:, 1]))","6ff50fc5":"fea_imp = pd.DataFrame({'imp':model.feature_importances_, 'col': X.columns})\nfea_imp = fea_imp.sort_values(['imp', 'col'], ascending=[True, False]).iloc[-30:]\n_ = fea_imp.plot(kind='barh', x='col', y='imp', figsize=(20, 10))\nplt.savefig('catboost_feature_importance.png')    ","d77ec618":"d = {\"id\": test_id, 'target': y_pred.round(3)}\ntest_predictions = pd.DataFrame(data=d)\ntest_predictions = test_predictions[[\"id\", 'target']]","14fc4cbd":"test_predictions.head()","05281bc8":"test_predictions.to_csv('kagle_cat2.csv', index=False)","d71a01ff":"**This NotebooK is A startter code for Cat boost which uses is Encoding power and Hold out Validation Strategy. Upvote more to come **"}}