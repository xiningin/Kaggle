{"cell_type":{"a2a7ba16":"code","9db1c655":"code","04e0aa83":"code","32a7913b":"code","85b9fdf9":"code","30dadb36":"code","ba12c346":"code","4f90eb06":"code","256814fa":"code","467e96d1":"code","06f9a12e":"code","f0966538":"code","9540a13a":"code","a6dc07ce":"code","8a4a49d2":"code","408e1493":"code","3a3d5614":"code","3f3cc1e5":"code","faff138a":"code","5e9ee6e5":"code","bc5097e4":"code","0aae2070":"code","2a78c6e5":"code","24881a0f":"code","d88c7d74":"code","485e8962":"code","400d3cf1":"code","c2155d79":"code","a77baf6b":"code","fac5845a":"code","af532a40":"code","fe1e54d3":"code","9a268fd5":"code","93a102c2":"code","e54030d4":"code","da0d9650":"code","390368aa":"code","4a6629e6":"markdown","1196e5b6":"markdown","f421e1a1":"markdown","67777b50":"markdown","ae3c2c9e":"markdown","be67a39e":"markdown","e7115d00":"markdown","333231b1":"markdown","e0162abb":"markdown","306c0c54":"markdown","6c522d9e":"markdown","4a7edaad":"markdown","c2da4bd4":"markdown","22541070":"markdown","7932ff5f":"markdown","da6d8c9f":"markdown","d52fd5fb":"markdown","e4a50ea0":"markdown","007f2027":"markdown","327edd36":"markdown","20d25be4":"markdown","80232c03":"markdown","ddd7906a":"markdown","9c8a7ffd":"markdown","8499412d":"markdown","f62c423d":"markdown","40b9d924":"markdown","946e3a89":"markdown","2bbde3a0":"markdown"},"source":{"a2a7ba16":"!pip install bubbly","9db1c655":"# for basic operations\nimport numpy as np\nimport pandas as pd\n\n# for data visualizations\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# for advanced visualizations \nimport plotly.offline as py\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\ninit_notebook_mode(connected = True)\nfrom bubbly.bubbly import bubbleplot\n\n# for providing path\nimport os\nprint(os.listdir('..\/input\/'))\n\n# for model explanation\nfrom sklearn.tree import export_graphviz\nfrom sklearn.metrics import roc_curve\nfrom sklearn.metrics import auc\n\n# for classification\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\n\n#for purmutation importance\nimport eli5 \nfrom eli5.sklearn import PermutationImportance\n\n#for SHAP values\nimport shap \nfrom pdpbox import pdp, info_plots #for partial plots\n\n# for warning ignore\nimport warnings\nwarnings.filterwarnings('ignore')","04e0aa83":"# reading the data\ndata = pd.read_csv('..\/input\/UniversalBank.csv')\n\n# getting the shape\ndata.shape","32a7913b":"# reading the head of the data\n\ndata.head()","85b9fdf9":"# describing the data\n\ndata.describe()","30dadb36":"# drop 'ID' and 'ZIP Code'\ndata = data.drop([\"ID\",\"ZIP Code\"],axis=1)","ba12c346":"# check missing data\ndata.isnull().sum()","4f90eb06":"figure = bubbleplot(dataset = data, x_column = 'Experience', y_column = 'Income', \n    bubble_column = 'Personal Loan', time_column = 'Age', size_column = 'Mortgage', color_column = 'Personal Loan', \n    x_title = \"Experience\", y_title = \"Income\", title = 'Experience vs Income. vs Age vs Mortgage vs Personal Loan',\n    x_logscale = False, scale_bubble = 3, height = 650)\n\npy.iplot(figure, config={'scrollzoom': True})","256814fa":"# making a heat map\nplt.rcParams['figure.figsize'] = (20, 15)\nplt.style.use('ggplot')\n\nsns.heatmap(data.corr(), annot = True, cmap = 'Wistia')\nplt.title('Heatmap for the Dataset', fontsize = 20)\nplt.show()","467e96d1":"# checking the distribution of age\n\nplt.style.use('fivethirtyeight')\nplt.rcParams['figure.figsize'] = (15, 5)\nsns.distplot(data['Age'], color = 'cyan')\nplt.title('Distribution of Age', fontsize = 20)\nplt.show()","06f9a12e":"# plotting a donut chart for visualizing 'Personal Loan','Securities Account','CD Account','Online','CreditCard'\n\nfig, ax = plt.subplots(1,5,figsize=(20,20))\ncolumns = ['Personal Loan','Securities Account','CD Account','Online','CreditCard']\n\nfor i,column in enumerate(columns):\n    plt.subplot(1,5,i+1)\n    size = data[column].value_counts()\n    colors = ['lightblue', 'lightgreen']\n    labels = \"No\", \"Yes\"\n    explode = [0, 0.01]\n\n    my_circle = plt.Circle((0, 0), 0.7, color = 'white')\n\n    plt.rcParams['figure.figsize'] = (20, 20)\n    plt.pie(size, colors = colors, labels = labels, shadow = True, explode = explode, autopct = '%.2f%%')\n    plt.title('Distribution of {}'.format(column), fontsize = 15)\n    p = plt.gcf()\n    p.gca().add_artist(my_circle)\nplt.legend()\nplt.show()","f0966538":"# show relation of family with personal loan\n  \nplt.rcParams['figure.figsize'] = (12, 9)\ndat = pd.crosstab(data['Personal Loan'], data['Family']) \ndat.div(dat.sum(1).astype(float), axis = 0).plot(kind = 'bar', \n                                                 stacked = False, \n                                                 color = plt.cm.rainbow(np.linspace(0, 1, 4)))\nplt.title('Relation of Family with Personal Loan', fontsize = 20, fontweight = 30)\nplt.show()\n","9540a13a":"# show relation of education with personal loan\n  \nplt.rcParams['figure.figsize'] = (12, 9)\ndat = pd.crosstab(data['Personal Loan'], data['Education']) \ndat.div(dat.sum(1).astype(float), axis = 0).plot(kind = 'bar', \n                                                 stacked = False, \n                                                 color = plt.cm.rainbow(np.linspace(0, 1, 4)))\nplt.title('Relation of Education with Personal Loan', fontsize = 20, fontweight = 30)\nplt.show()\n","a6dc07ce":"# show relation of income with personal loan\n\nplt.rcParams['figure.figsize'] = (12, 9)\nsns.boxplot(data['Personal Loan'], data['Income'], palette = 'viridis')\nplt.title('Relation of Income with Personal Loan', fontsize = 20)\nplt.show()","8a4a49d2":"# show relation of CCAvg with personal loan\n\nplt.rcParams['figure.figsize'] = (12, 9)\nsns.violinplot(data['Personal Loan'], data['CCAvg'], palette = 'colorblind')\nplt.title('Relation of CCAvg with Target', fontsize = 20, fontweight = 30)\nplt.show()","408e1493":"# show relation of mortgage with personal loan\n\nplt.rcParams['figure.figsize'] = (12, 9)\nsns.violinplot(data['Personal Loan'], data['Mortgage'], palette = 'colorblind')\nplt.title('Relation of Mortgage with Target', fontsize = 20, fontweight = 30)\nplt.show()","3a3d5614":"# Give meaning to category data \n\ndata['Securities Account'][data['Securities Account'] == 0] = 'No'\ndata['Securities Account'][data['Securities Account'] == 1] = 'Yes'\n\ndata['CD Account'][data['CD Account'] == 0] = 'No'\ndata['CD Account'][data['CD Account'] == 1] = 'Yes'\n\ndata['Online'][data['Online'] == 0] = 'No'\ndata['Online'][data['Online'] == 1] = 'Yes'\n\ndata['CreditCard'][data['CreditCard'] == 0] = 'No'\ndata['CreditCard'][data['CreditCard'] == 1] = 'Yes'","3f3cc1e5":"data['Securities Account'] = data['Securities Account'].astype('object')\ndata['CD Account'] = data['CD Account'].astype('object')\ndata['Online'] = data['Online'].astype('object')\ndata['CreditCard'] = data['CreditCard'].astype('object')\n\n# drop age (Because the correlation with experience is high.)\ndata = data.drop([\"Age\"],axis=1)","faff138a":"# taking the labels out from the data\n\ny = data['Personal Loan']\ndata = data.drop('Personal Loan', axis = 1)\n\nprint(\"Shape of y:\", y.shape)","5e9ee6e5":"# One hot encoding\ndata = pd.get_dummies(data, drop_first=True)","bc5097e4":"# check data\ndata.head()","0aae2070":"# Split the data\nx = data\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)\n\n# getting the shapes\nprint(\"Shape of x_train :\", x_train.shape)\nprint(\"Shape of x_test :\", x_test.shape)\nprint(\"Shape of y_train :\", y_train.shape)\nprint(\"Shape of y_test :\", y_test.shape)","2a78c6e5":"# MODELLING\n# Random Forest Classifier\n\nmodel = RandomForestClassifier(n_estimators = 50, max_depth = 5)\nmodel.fit(x_train, y_train)\ny_predict = model.predict(x_test)\ny_pred_quant = model.predict_proba(x_test)[:, 1]\ny_pred = model.predict(x_test)\n\n# evaluating the model\nprint(\"Training Accuracy :\", model.score(x_train, y_train))\nprint(\"Testing Accuracy :\", model.score(x_test, y_test))\n\n# cofusion matrix\ncm = confusion_matrix(y_test, y_pred)\nplt.rcParams['figure.figsize'] = (5, 5)\nsns.heatmap(cm, annot = True, annot_kws = {'size':15}, cmap = 'PuBu')\n\n# classification report\ncr = classification_report(y_test, y_pred)\nprint(cr)","24881a0f":"# show tree map\n\nestimator = model.estimators_[1]\nfeature_names = [i for i in x_train.columns]\n\ny_train_str = y_train.astype('str')\ny_train_str[y_train_str == '0'] = 'no loan'\ny_train_str[y_train_str == '1'] = 'loan'\ny_train_str = y_train_str.values\n\n\nexport_graphviz(estimator, out_file='tree.dot', \n                feature_names = feature_names,\n                class_names = y_train_str,\n                rounded = True, proportion = True, \n                label='root',\n                precision = 2, filled = True)\n\nfrom subprocess import call\ncall(['dot', '-Tpng', 'tree.dot', '-o', 'tree.png', '-Gdpi=50'])\n\nfrom IPython.display import Image\nImage(filename = 'tree.png')","d88c7d74":"# show ROC curve\n\nfpr, tpr, thresholds = roc_curve(y_test, y_pred_quant)\n\nfig, ax = plt.subplots()\nax.plot(fpr, tpr)\nax.plot([0, 1], [0, 1], transform=ax.transAxes, ls=\"-\", c=\".3\")\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.0])\n\nplt.rcParams['figure.figsize'] = (15, 5)\nplt.title('ROC curve for classifier', fontweight = 30)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.show()","485e8962":"# check the auc score\n\nauc = auc(fpr, tpr)\nprint(\"AUC Score :\", auc)","400d3cf1":"# let's check the importance of each attributes\n\nperm = PermutationImportance(model, random_state = 0).fit(x_test, y_test)\neli5.show_weights(perm, feature_names = x_test.columns.tolist())","c2155d79":"# plotting the partial dependence plot for Income\n\nbase_features = data.columns.values.tolist()\n\nfeat_name = 'Income'\npdp_dist = pdp.pdp_isolate(model=model, dataset=x_test, model_features = base_features, feature = feat_name)\n\npdp.pdp_plot(pdp_dist, feat_name)\nplt.show()\n","a77baf6b":"# let's plot the partial dependence plot for Education\n\nbase_features = data.columns.values.tolist()\n\nfeat_name = 'Education'\npdp_dist = pdp.pdp_isolate(model = model, dataset = x_test, model_features = base_features, feature = feat_name)\n\npdp.pdp_plot(pdp_dist, feat_name)\nplt.show()\n","fac5845a":"# let's plot the partial dependence plot for Family\n\nbase_features = data.columns.values.tolist()\n\nfeat_name = 'Family'\npdp_dist = pdp.pdp_isolate(model = model, dataset = x_test, model_features = base_features, feature = feat_name)\n\npdp.pdp_plot(pdp_dist, feat_name)\nplt.show()","af532a40":"# let's see the shap values\n\nexplainer = shap.TreeExplainer(model)\nshap_values = explainer.shap_values(x_test)\n\nshap.summary_plot(shap_values[1], x_test, plot_type=\"bar\")","fe1e54d3":"shap.summary_plot(shap_values[1], x_test)","9a268fd5":"# define function to make force plot\ndef show_forceplot(model, data):\n  explainer = shap.TreeExplainer(model)\n  shap_values = explainer.shap_values(data)\n  shap.initjs()\n  return shap.force_plot(explainer.expected_value[1], shap_values[1], data)","93a102c2":"tmp = x_test.iloc[1,:].astype(float)\nshow_forceplot(model, tmp)","e54030d4":"tmp = x_test.iloc[:, 2].astype(float)\nshow_forceplot(model, tmp)","da0d9650":"tmp = x_test.iloc[:,3].astype(float)\nshow_forceplot(model, tmp)","390368aa":"shap_values = explainer.shap_values(x_train.iloc[:50])\nshap.initjs()\nshap.force_plot(explainer.expected_value[1], shap_values[1], x_test.iloc[:50])","4a6629e6":"# Bank Loan Analysis","1196e5b6":"<img src=\"https:\/\/start-note.com\/image-files\/thumbnail\/70\" width=\"700px\">","f421e1a1":"# Notebook Outline","67777b50":"# Classification ","ae3c2c9e":"# Data Visualizations","be67a39e":"## Eli5 Values","e7115d00":"# Importing Libraries","333231b1":"The above chart shows distribution of age.  \nAge is well-balanced.","e0162abb":"There is a clear difference in the relationship between income and personal loans.","306c0c54":"The above chart shows relation of Education with personal loan.  \nIt seems that people who have a high education tend to have a loan.  ","6c522d9e":"The figure shows the relationship between income and years of experience for each age.    \nThe size of the sphere represents the size of the mortgage.  \nIf the sphere is red, it has a personal loan.  ","4a7edaad":"'ID' and 'ZIP Code' can not be treated as features, so delete them.","c2da4bd4":"## Partial Dependence Plot","22541070":"# Data Load","7932ff5f":"1. [**Importing Libraries**](#Importing-Libraries)   \n2. [**Data Load**](#Data-Load)  \n3. [**Data Visualizations**](#Data-Visualizations)  \n4. [**Classification**](#Classification)  \n    4-1 [**Prepare Data**](#Prepare-Data)  \n    4-2 [**Random Forest Classifier**](#Random-Forest-Classifier)  \n5. [**Model Explanation**](#Model-Explanation)  \n    5-1 [**Tree Map**](#Tree-Map)  \n    5-2 [**ROC Curve**](#ROC-Curve)  \n    5-3 [**AUC Score**](#AUC-Score)  \n    5-4 [**Eli5 Values**](#Eli5-Values)  \n    5-5 [**Partial Dependence Plot**](#Partial-Dependence-Plot)  \n    5-6 [**Shap Values**](#Shap-Values)  \n    5-7 [**Force Plot**](#Force-Plot)  ","da6d8c9f":"## Prepare Data","d52fd5fb":"## Shap Values","e4a50ea0":"## AUC Score","007f2027":"## Force Plot","327edd36":"Mortgages seem to be unrelated to personal loans.","20d25be4":"The above pie chart shows distribution of personal loan, securities account, CD account, online, and credit card.  \npersonal loan will be target of classification.  \nSo it's unbalance dataset.  ","80232c03":"Although not as much as income, CCAvg is also likely to be related to the availability of personal loans.","ddd7906a":"The above chart shows relation of family with personal loan.  \nIt seems that the more families there are, the more likely they are to make a loan.  ","9c8a7ffd":"No missing value.","8499412d":"## Tree Map","f62c423d":"# Model Explanation","40b9d924":"## Random Forest Classifier","946e3a89":"Let's check the overall correlation in the heat map.  \n'Age' and 'Exprerience' has so high correlation.  \nSo I'll delete one of them.    ","2bbde3a0":"## ROC Curve"}}