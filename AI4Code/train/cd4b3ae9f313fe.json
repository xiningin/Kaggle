{"cell_type":{"94ed1747":"code","efdea0aa":"code","c9348f06":"code","bfd02ab7":"code","d8d1fc4f":"code","5cabd63e":"code","5e1b3648":"code","0fd8d73d":"code","23a29e7c":"code","37b00ae1":"code","3fe076c0":"code","294d6b7a":"code","aaab6e61":"code","793d31cf":"code","c52d9ee2":"code","a52051fc":"code","c7e41199":"code","a8239fb9":"code","65770d56":"code","6a1e71db":"code","c9bb4964":"code","7943ba0d":"code","48939cda":"code","3ac3f566":"code","b7090f07":"code","677cc6f4":"code","df1dc9d5":"code","71c23504":"markdown"},"source":{"94ed1747":"import pandas as pd\nAmazonData = pd.read_csv('C:\/Users\/sovon\/Python ML\/My Works\/Final projects\/Datasets\/Text Mining\/Amazon Reviews.csv')\nprint(AmazonData.shape)\nAmazonData.head()","efdea0aa":"AmazonData.columns","c9348f06":"FullData = pd.DataFrame(AmazonData['reviews.text'].values, columns=['Reviews'])","bfd02ab7":"FullData.head()","d8d1fc4f":"ReviewsText = FullData['Reviews'].values\nReviewsText = str(ReviewsText)","5cabd63e":"ReviewsText","5e1b3648":"import re\nCleanedReviewsText = re.sub(r'[^a-z A-Z]', r' ',ReviewsText)\nCleanedReviewsText = re.sub(r'\\b\\w{1,3}\\b', ' ', CleanedReviewsText)\nCleanedReviewsText = CleanedReviewsText.lower()\nCleanedReviewsText = re.sub(' +',' ', CleanedReviewsText)","0fd8d73d":"CleanedReviewsText","23a29e7c":"from textblob import TextBlob\nTextInBlob = TextBlob(CleanedReviewsText)","37b00ae1":"TextInBlob.sentiment","3fe076c0":"NounPhrases = TextInBlob.noun_phrases\nNounPhrases\nnewNounPhrases = []\nfor i in NounPhrases:\n    n = re.sub(' ', '_', i)\n    newNounPhrases.append(n)","294d6b7a":"newNounPhrases","aaab6e61":"newNounPhrasesStr = ' '.join(newNounPhrases)\nnewNounPhrasesStr","793d31cf":"%matplotlib inline\nfrom wordcloud import WordCloud, STOPWORDS\nimport matplotlib.pyplot as plt\nwordcloudImage = WordCloud(max_words=50,\n                           font_step=2 ,\n                            max_font_size=500,\n                            width=1000,\n                            height=720\n                          ).generate(newNounPhrasesStr)\nplt.figure(figsize=(10,10))\nplt.axis('off')\nplt.imshow(wordcloudImage)\nplt.show()","c52d9ee2":"PositiveWords = pd.read_table('C:\/Users\/sovon\/Python ML\/My Works\/Final projects\/Datasets\/Text Mining\/Positive_words.txt', encoding='latin')\nNegativeWords = pd.read_table('C:\/Users\/sovon\/Python ML\/My Works\/Final projects\/Datasets\/Text Mining\/Negative_words.txt', encoding='latin')","a52051fc":"NegativeWords.head()","c7e41199":"def ComputeSentiment(inpData):\n    PositiveScore = 0\n    NegativeScore = 0\n    OverallSentiment = ''\n    inpData = inpData.lower()\n    wordList = inpData.split()\n    for words in wordList:\n        if (words in PositiveWords.values):\n            PositiveScore+=1\n        if(words in NegativeWords.values):\n            NegativeScore+=1\n    if((PositiveScore-NegativeScore)>0):\n        OverallSentiment = 'Positive'\n    else:\n        OverallSentiment = 'Negative'\n    return(OverallSentiment)","a8239fb9":"FullData['Sentiment'] = FullData['Reviews'].apply(ComputeSentiment)","65770d56":"FullData.head()","6a1e71db":"FullData['Sentiment'].unique()","c9bb4964":"FullData.groupby('Sentiment').size().plot.bar(color = ['grey', 'black'])","7943ba0d":"ReviewsText","48939cda":"import nltk\nfrom nltk.tokenize import sent_tokenize, word_tokenize","3ac3f566":"sent_tokenize(ReviewsText)","b7090f07":"from nltk import word_tokenize, pos_tag\nwords = word_tokenize(CleanedReviewsText)\nwordsPOS = pos_tag(words)\nOnlyAdjectives = (' ').join([POSTags[0] for POSTags in wordsPOS if POSTags[1] in ['JJ', 'JJR', 'JJS']])\nprint(OnlyAdjectives)","677cc6f4":"TextBlob(OnlyAdjectives).sentiment","df1dc9d5":"patternsToFind = '''NP: {<JJ><VBG>}\n                    NP:{<RB><JJ><NN>}'''\nSampleText = word_tokenize(CleanedReviewsText)\nSampleTextPOS = pos_tag(SampleText)\nPatternParser = nltk.RegexpParser(patternsToFind)\nParsedResult = PatternParser.parse(SampleTextPOS)\nfor i in ParsedResult:\n    if(type(i)==nltk.tree.Tree):\n        print(i)","71c23504":"## Reading the data"}}