{"cell_type":{"988b567b":"code","e289a563":"code","b9cbc568":"code","0ec537c5":"code","d87f3f33":"code","7eea209b":"code","7d5819a3":"code","65dc78da":"code","181ad1ae":"code","1001c88c":"code","f87bf925":"code","920a39c7":"code","085aa3e6":"code","276a5de8":"code","0b47ab26":"code","887d2b10":"code","47229b24":"code","1bab184b":"code","42095d98":"code","9ae2022d":"markdown"},"source":{"988b567b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set()","e289a563":"train = pd.read_csv(\"..\/input\/train.csv\")\nhistory = pd.read_csv(\"..\/input\/historical_user_logs.csv\", nrows= 40_00_000)\ndisplay(train.head())\ndisplay(history.head())","b9cbc568":"def datatypes_insight(data):\n    display(data.dtypes.to_frame())\n    data.dtypes.value_counts().plot(kind=\"barh\")","0ec537c5":"datatypes_insight(train)","d87f3f33":"datatypes_insight(history)","7eea209b":"train.shape,history.shape","7d5819a3":"df_train = train.merge(history, on = \"user_id\")","65dc78da":"y = df_train['is_click']\ndf_train.drop(['is_click'], axis = 1, inplace = True)","181ad1ae":"df_train.isnull().sum().plot(kind=\"barh\")","1001c88c":"df_train.columns","f87bf925":"df_train.drop(['session_id','user_id','product_category_2'], axis=1, inplace=True)\n# yourdf.drop(['columnheading1', 'columnheading2'], axis=1, inplace=True)","920a39c7":"df_train['DateTime_x'] = pd.to_datetime(df_train['DateTime_x'])\ndf_train['DateTime_y'] = pd.to_datetime(df_train['DateTime_y'])\ndf_train['DateTime_x'] = pd.to_datetime(df_train['DateTime_x'],format='%d-%m-%Y %H:%M')\ndf_train['DateTime_y'] = pd.to_datetime(df_train['DateTime_y'],format = '%d-%m-%y %H:%M')","085aa3e6":"df_train['date_x']= df_train['DateTime_x'].dt.date                    \ndf_train['time_x']= df_train['DateTime_x'].dt.time                   \ndf_train['year_x']= df_train['DateTime_x'].dt.year                   \ndf_train['month_x']= df_train['DateTime_x'].dt.month                  \ndf_train['day_x']= df_train['DateTime_x'].dt.day                    \ndf_train['hour_x']= df_train['DateTime_x'].dt.hour                   \ndf_train['minute_x']= df_train['DateTime_x'].dt.minute                 \ndf_train['second_x']= df_train['DateTime_x'].dt.second                 \ndf_train['microsecond_x']= df_train['DateTime_x'].dt.microsecond            \ndf_train['nanosecond_x']= df_train['DateTime_x'].dt.nanosecond             \ndf_train['week_x']= df_train['DateTime_x'].dt.week                   \ndf_train['weekofyear_x']= df_train['DateTime_x'].dt.weekofyear             \ndf_train['dayofweek_x']= df_train['DateTime_x'].dt.dayofweek              \ndf_train['weekday_x']= df_train['DateTime_x'].dt.weekday                \ndf_train['dayofyear_x']= df_train['DateTime_x'].dt.dayofyear              \ndf_train['quarter_x']= df_train['DateTime_x'].dt.quarter                \ndf_train['is_month_start_x']= df_train['DateTime_x'].dt.is_month_start         \ndf_train['is_month_end_x']= df_train['DateTime_x'].dt.is_month_end           \ndf_train['is_quarter_start_x']= df_train['DateTime_x'].dt.is_quarter_start       \ndf_train['is_quarter_end_x']= df_train['DateTime_x'].dt.is_quarter_end         \ndf_train['is_year_start_x']= df_train['DateTime_x'].dt.is_year_start          \ndf_train['is_year_end_x']= df_train['DateTime_x'].dt.is_year_end            \ndf_train['is_leap_year_x']= df_train['DateTime_x'].dt.is_leap_year           \ndf_train['daysinmonth_x']= df_train['DateTime_x'].dt.daysinmonth            \ndf_train['days_in_month_x']= df_train['DateTime_x'].dt.days_in_month          \ndf_train['tz_x']= df_train['DateTime_x'].dt.tz                     \ndf_train['freq_x']= df_train['DateTime_x'].dt.freq\n\ndf_train['date_y']= df_train['DateTime_y'].dt.date                    \ndf_train['time_y']= df_train['DateTime_y'].dt.time                   \ndf_train['year_y']= df_train['DateTime_y'].dt.year                   \ndf_train['month_y']= df_train['DateTime_y'].dt.month                  \ndf_train['day_y']= df_train['DateTime_y'].dt.day                    \ndf_train['hour_y']= df_train['DateTime_y'].dt.hour                   \ndf_train['minute_y']= df_train['DateTime_y'].dt.minute                 \ndf_train['second_y']= df_train['DateTime_y'].dt.second                 \ndf_train['microsecond_y']= df_train['DateTime_y'].dt.microsecond            \ndf_train['nanosecond_y']= df_train['DateTime_y'].dt.nanosecond             \ndf_train['week_y']= df_train['DateTime_y'].dt.week                   \ndf_train['weekofyear_y']= df_train['DateTime_y'].dt.weekofyear             \ndf_train['dayofweek_y']= df_train['DateTime_y'].dt.dayofweek              \ndf_train['weekday_y']= df_train['DateTime_y'].dt.weekday                \ndf_train['dayofyear_y']= df_train['DateTime_y'].dt.dayofyear              \ndf_train['quarter_y']= df_train['DateTime_y'].dt.quarter                \ndf_train['is_month_start_y']= df_train['DateTime_y'].dt.is_month_start         \ndf_train['is_month_end_y']= df_train['DateTime_y'].dt.is_month_end           \ndf_train['is_quarter_start_y']= df_train['DateTime_y'].dt.is_quarter_start       \ndf_train['is_quarter_end_y']= df_train['DateTime_y'].dt.is_quarter_end         \ndf_train['is_year_start_y']= df_train['DateTime_y'].dt.is_year_start          \ndf_train['is_year_end_y']= df_train['DateTime_y'].dt.is_year_end            \ndf_train['is_leap_year_y']= df_train['DateTime_y'].dt.is_leap_year           \ndf_train['daysinmonth_y']= df_train['DateTime_y'].dt.daysinmonth            \ndf_train['days_in_month_y']= df_train['DateTime_y'].dt.days_in_month          \ndf_train['tz_y']= df_train['DateTime_y'].dt.tz                     \ndf_train['freq_y']= df_train['DateTime_y'].dt.freq\ndf_train.shape","276a5de8":"def mis_impute(data):\n    for i in data.columns:\n        if data[i].dtype == \"object\":\n            data[i] = data[i].fillna(\"other\")\n        elif (data[i].dtype == \"int64\" or data[i].dtype == \"float64\"):\n            data[i] = data[i].fillna(data[i].mean())\n        else:\n            pass\n    return data\n\ndf_train = mis_impute(df_train)\n# df_train.isnull().sum()","0b47ab26":"df_train.shape","887d2b10":"y.value_counts().plot(kind=\"bar\")","47229b24":"x = df_train\nx.shape,y.shape","1bab184b":"from sklearn.model_selection import train_test_split\n\nX_train,X_test,y_train,y_test = train_test_split(x,y, test_size = 0.25, random_state = 42)\nX_train.shape,X_test.shape,y_train.shape,y_test.shape","42095d98":"%time\nfrom sklearn.naive_bayes import GaussianNB\n\n# Initialize our classifier\ngnb = GaussianNB()\n\n# Train our classifier\nmodel = gnb.fit(X_train, y_train)\npreds = gnb.predict(X_test)\nprint(preds)\nplt.figure(figsize = (20,8))\nplt.plot(preds)\nplt.plot(y_test)\nplt.show()","9ae2022d":"<h2 id=\"problem-statement\">Data<\/h2>\n<p><strong>Train Data<\/strong><\/p>\n<table border=\"1\" cellspacing=\"0\"><colgroup width=\"200\"><\/colgroup><colgroup width=\"472\"><\/colgroup>\n<tbody>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\"><strong>Variable<\/strong><\/td>\n<td align=\"left\" valign=\"bottom\"><strong>Definition<\/strong><\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\">session_id<\/td>\n<td align=\"left\" valign=\"bottom\">Unique ID for a session<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\">DateTime<\/td>\n<td align=\"left\" valign=\"bottom\">Timestamp<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\">user_id<\/td>\n<td align=\"left\" valign=\"bottom\">Unique ID for user<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\">product<\/td>\n<td align=\"left\" valign=\"bottom\">Product ID<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\">campaign_id<\/td>\n<td align=\"left\" valign=\"bottom\">Unique ID for ad campaign<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\">webpage_id<\/td>\n<td align=\"left\" valign=\"bottom\">Webpage ID at which the ad is displayed<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\">product_category_1<\/td>\n<td align=\"left\" valign=\"bottom\">Product category 1 (Ordered)<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\">product_category_2<\/td>\n<td align=\"left\" valign=\"bottom\">Product category 2<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\">user_group_id<\/td>\n<td align=\"left\" valign=\"bottom\">Customer segmentation ID<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\">gender<\/td>\n<td align=\"left\" valign=\"bottom\">Gender of the user<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\">age_level<\/td>\n<td align=\"left\" valign=\"bottom\">Age level of the user<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\">user_depth<\/td>\n<td align=\"left\" valign=\"bottom\">Interaction level of user with the web platform (1 - low, 2 - medium, 3 - High)<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\">city_development_index<\/td>\n<td align=\"left\" valign=\"bottom\">Scaled development index of the residence city<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\">var_1<\/td>\n<td align=\"left\" valign=\"bottom\">Anonymised session feature<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"20\">is_click<\/td>\n<td align=\"left\" valign=\"bottom\">0 - no click, 1 - click<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p><strong>Historical User logs<\/strong><\/p>\n<table border=\"1\" cellspacing=\"0\"><colgroup width=\"200\"><\/colgroup><colgroup width=\"472\"><\/colgroup>\n<tbody>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"19\"><strong>Variable<\/strong><\/td>\n<td align=\"left\" valign=\"bottom\"><strong>Definition<\/strong><\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"19\">DateTime<\/td>\n<td align=\"left\" valign=\"bottom\">Timestamp<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"19\">user_id<\/td>\n<td align=\"left\" valign=\"bottom\">Unique ID for the user<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"19\">product<\/td>\n<td align=\"left\" valign=\"bottom\">Product ID<\/td>\n<\/tr>\n<tr>\n<td align=\"left\" valign=\"bottom\" height=\"19\">action<\/td>\n<td align=\"left\" valign=\"bottom\">view\/interest (view - viewed the product page, interest - registered interest for the product)<\/td>\n<\/tr>\n<\/tbody>\n<\/table>"}}