{"cell_type":{"609a708d":"code","24ec96c3":"code","0556f954":"code","9b6e3a72":"code","6b906f4e":"code","9a1efeea":"code","c1c5115b":"code","31fcc830":"code","a3b4b22e":"code","681b315e":"code","0b8c459c":"code","fafc6e5c":"code","079d9bc0":"code","b8e51471":"code","6257b015":"code","187ee26d":"code","db1525dc":"code","1c355e96":"code","70e42e06":"code","7a65ae69":"code","32007124":"code","8f49981d":"code","d2d49dad":"code","6d57d326":"code","b07b61d5":"code","7179c588":"code","07ac49aa":"code","6eae8564":"code","5c99271c":"code","b378f6ec":"code","90fa4a40":"code","f9637e94":"code","ee8b2e45":"code","35fe66cb":"code","903012d7":"code","72de5712":"code","949a17ba":"code","834b62da":"code","b3e3b06c":"code","9c7794d4":"code","695ee24f":"code","4fc21ded":"code","c23ad780":"code","67e9183e":"code","73f1f7fd":"markdown","a7454b35":"markdown","a40bbce6":"markdown","76b7bc45":"markdown","e8d5f3d3":"markdown","c383287b":"markdown"},"source":{"609a708d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","24ec96c3":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","0556f954":"import plotly.graph_objs as go\nfrom plotly.offline import iplot\nimport plotly.express as px","9b6e3a72":"df = pd.read_csv('..\/input\/chennai-zomato-restaurants-data\/Zomato Chennai Listing 2020.csv')\ndf.head()","6b906f4e":"df.shape\n","9a1efeea":"df.dtypes","c1c5115b":"len(df['Name of Restaurant'].unique())","31fcc830":"df.isna().sum()","a3b4b22e":"df.replace(to_replace = ['None','Invalid','Does not offer Delivery','Does not offer Dining','Not enough Delivery Reviews','Not enough Dining Reviews'], value =np.nan,inplace=True)\ndf.isnull().sum()","681b315e":"feature_na=[feature for feature in df.columns if df[feature].isnull().sum()>0]\nfeature_na","0b8c459c":"#% of missing values\nfor feature in feature_na:\n    print('{} has {} % missing values'.format(feature,np.round(df[feature].isnull().sum()\/len(df)*100,4)))","fafc6e5c":"df['Dining Rating'].unique()","079d9bc0":"df['Dining Rating']=df['Dining Rating'].astype(float)","b8e51471":"df.dropna(axis='index',subset=['Dining Rating'],inplace=True)","6257b015":"df.groupby('Name of Restaurant')['Dining Rating'].mean().nlargest(20).plot.bar()","187ee26d":"df_rate=df.groupby('Name of Restaurant')['Dining Rating'].mean().to_frame()\ndf_rate=df_rate.reset_index()\ndf_rate.columns=['restaurant','rating']\ndf_rate.head(20)","db1525dc":"plt.figure(figsize=(10,7))\nchains=df['Name of Restaurant'].value_counts()[0:20]\nsns.barplot(x=chains,y=chains.index,palette='deep')\nplt.title(\"Most famous restaurants chains in chennai\")\nplt.xlabel(\"Number of outlets\") ","1c355e96":"food = []\n\nfor i in df.Cuisine:\n    str1 = \"\"\n    str1 = (str1.join(i))\n    str1 = str1.split(', ')\n    food.append(str1)","70e42e06":"f_category = []\ndef reemovNestings(l): \n    for i in l: \n        if type(i) == list: \n            reemovNestings(i) \n        else: \n            f_category.append(i) \n            \nfor i in food:\n    reemovNestings(i)\n\nfood_category_df = pd.DataFrame({\"Food\" : f_category})\n","7a65ae69":"plt.subplots(figsize=[10,100])\nax = sns.countplot(data=food_category_df,y='Food')\nplt.xticks(rotation=0)\nplt.xlabel('Count',size = 20)\nplt.ylabel('Type of the food',size = 20)\nplt.title('Food category in chennai',size = 20)\n\ntotal = len(food_category_df['Food'])\nfor p in ax.patches:\n        percentage = '{:.2f}%'.format(100 * p.get_width()\/total)\n        x = p.get_x() + p.get_width() + 0.02\n        y = p.get_y() + p.get_height()\/2\n        ax.annotate(percentage, (x, y))\n\nplt.show()\n","32007124":"plt.figure(figsize=(20,12))\ndf['Features'].value_counts().nlargest(20).plot.bar(color='red')\nplt.gcf().autofmt_xdate()\nplt.xlabel('Features',size = 20)","8f49981d":"df.rename(columns={'Locaton': 'location'}, \n                 inplace=True)","d2d49dad":"df.groupby('Location')['Name of Restaurant'].unique()","6d57d326":"restaurant=[]\nlocation=[]\nfor key,location_df in df.groupby('Location'):\n    location.append(key)\n    restaurant.append(len(location_df['Name of Restaurant'].unique()))","b07b61d5":"df_total=pd.DataFrame(zip(location,restaurant))\ndf_total.columns=['Location','Restaurants']\ndf_total.set_index('Location',inplace=True)\ndf_total.sort_values(by='Restaurants').tail(10)","7179c588":"df_total.sort_values(by='Restaurants').tail(10).plot.bar()","07ac49aa":"df_total.sort_values(by='Restaurants').tail(10).index","6eae8564":"trace1 = go.Bar( \n        x = df_total['Restaurants'].nlargest(10).index,\n        y = df_total['Restaurants'].nlargest(10),\n        name= 'Priority')","5c99271c":"iplot([trace1])","b378f6ec":"\ncuisines=df['Cuisine'].value_counts()[:10]\nsns.barplot(cuisines,cuisines.index)\nplt.xlabel('Count')\nplt.title(\"Most popular cuisines of Bangalore\")","90fa4a40":"cuisines=df['Cuisine'].value_counts()[:10]\ntrace1 = go.Bar( \n        x = cuisines.index,\n        y = cuisines,\n        name= 'Cuisine')\niplot([trace1])","f9637e94":"len(df['Price for 2'].value_counts())","ee8b2e45":"df['Price for 2'].isna().sum()","35fe66cb":"df['Price for 2'].unique()","903012d7":"df['Price for 2'].dtype","72de5712":"df['Price for 2']","949a17ba":"df['Price for 2'].min()","834b62da":"df[df['Price for 2']== 40]","b3e3b06c":"df['Price for 2'].max()","9c7794d4":"df[df['Price for 2']== 5000.0]","695ee24f":"plt.figure(figsize=(6,6))\nsns.distplot(df['Price for 2'])\nplt.show()","4fc21ded":"px.histogram(df, x=\"Price for 2\")","c23ad780":"df['Price for 2'].nlargest(10).plot.bar()","67e9183e":"len(df['Location'].unique())","73f1f7fd":"# Cheapest Rate for 2 people","a7454b35":"# Most costly Rate for 2 people","a40bbce6":"# Most costly for 2 people","76b7bc45":"# Distribution of cost for 2 people","e8d5f3d3":"# **Analyse Approx cost for 2 people**","c383287b":"From this we can observe that most of the price lies between in a range of under 1000,it means most are affordable & very few are luxurious"}}