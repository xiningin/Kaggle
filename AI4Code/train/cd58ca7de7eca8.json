{"cell_type":{"d818ecc4":"code","a961b421":"code","ade27df7":"code","3f83a711":"code","999e5b20":"code","380caf58":"code","60ed301e":"code","af90fadf":"markdown","a579c919":"markdown","b734f4c4":"markdown","708e6170":"markdown","76be4a2b":"markdown","842562cb":"markdown","0b3a31d4":"markdown"},"source":{"d818ecc4":"# Import python packages\nimport os\nfrom os import walk\nimport shutil\nfrom shutil import copytree, ignore_patterns\nfrom PIL import Image\nfrom wand.image import Image as Img\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom collections import Counter\nfrom nltk.corpus import stopwords\nfrom wordcloud import WordCloud, STOPWORDS\n\n# Define helper function for plotting word clouds\ndef wordCloudFunction(df,column,numWords):\n    # adapted from https:\/\/www.kaggle.com\/benhamner\/most-common-forum-topic-words\n    topic_words = [ z.lower() for y in\n                       [ x.split() for x in df[column] if isinstance(x, str)]\n                       for z in y]\n    word_count_dict = dict(Counter(topic_words))\n    popular_words = sorted(word_count_dict, key = word_count_dict.get, reverse = True)\n    popular_words_nonstop = [w for w in popular_words if w not in stopwords.words(\"english\")]\n    word_string=str(popular_words_nonstop)\n    wordcloud = WordCloud(stopwords=STOPWORDS,\n                          background_color='white',\n                          max_words=numWords,\n                          width=1000,height=1000,\n                         ).generate(word_string)\n    plt.clf()\n    plt.imshow(wordcloud)\n    plt.axis('off')\n    plt.show()\n\n# Define helper function for plotting word bar graphs\ndef wordBarGraphFunction(df,column,title):\n    # adapted from https:\/\/www.kaggle.com\/benhamner\/most-common-forum-topic-words\n    topic_words = [ z.lower() for y in\n                       [ x.split() for x in df[column] if isinstance(x, str)]\n                       for z in y]\n    word_count_dict = dict(Counter(topic_words))\n    popular_words = sorted(word_count_dict, key = word_count_dict.get, reverse = True)\n    popular_words_nonstop = [w for w in popular_words if w not in stopwords.words(\"english\")]\n    plt.barh(range(50), [word_count_dict[w] for w in reversed(popular_words_nonstop[0:50])])\n    plt.yticks([x + 0.5 for x in range(50)], reversed(popular_words_nonstop[0:50]))\n    plt.title(title)\n    plt.show()\n\n# Preview the data folder\ninputFolder = '..\/input\/cityofla\/CityofLA\/Additional data\/PDFs'\nfor root, directories, filenames in os.walk(inputFolder):\n    for filename in filenames: \n        print(os.path.join(root,filename))\n        \n# Reorganize the data folder\noutputFolder = '\/kaggle\/working\/pdfs\/'\nshutil.copytree(inputFolder,outputFolder,ignore=ignore_patterns('*.db'))\nfor root, directories, filenames in os.walk(outputFolder, topdown=False):\n    for file in filenames:\n        try:\n            shutil.move(os.path.join(root, file), outputFolder)\n        except OSError:\n            pass\nshutil.rmtree(os.path.join(outputFolder,'2018'),\n              os.path.join(outputFolder,'2017'),\n              os.path.join(outputFolder,'2016'))\nshutil.rmtree(os.path.join(outputFolder,'2015'),\n              os.path.join(outputFolder,'2014'))\nprint(os.listdir(outputFolder))","a961b421":"files = next(os.walk('\/kaggle\/working\/pdfs\/'))[2] \nprint(\"Total Number of Files in CityofLA Dataset: \", len(files))","ade27df7":"# Preview a PDF file\npdf = os.path.join(outputFolder,'APPRENTICE - METAL TRADES 3789.pdf')\nImg(filename=pdf, resolution=300)","3f83a711":"# Parse a PDF file\nwith Img(filename=pdf, resolution=300) as img:\n    img.compression_quality = 99\n    img.convert(\"RGBA\").save(filename='\/kaggle\/working\/test_jpg.jpg')\n!pip install tika\nimport tika\nfrom tika import parser\ntika.initVM()\nparsed = parser.from_file('\/kaggle\/working\/test_jpg-1.jpg')\ntext = parsed[\"content\"]\ndf = pd.DataFrame([text.split('\\n')])\ndf.drop(df.iloc[:, 1:46], inplace=True, axis=1)","999e5b20":"# Make a Word Cloud\nplt.figure(figsize=(15,15))\nwordCloudFunction(df.T,0,10000000)\n\nplt.figure(figsize=(10,10))\nwordBarGraphFunction(df.T,0,\"Most Common Words in Job Posting\")","380caf58":"# Preview a Text File\njob_posting = '..\/input\/cityofla\/CityofLA\/Job Bulletins\/APPRENTICE - METAL TRADES 3789 070816.txt'\nwith open(job_posting) as f: \n    print (f.read(1000))","60ed301e":"# Clean Up The Notebook\n!apt-get install zip\n!zip -r pdfs.zip \/kaggle\/working\/pdfs\/\n!rm -rf pdfs\/* ","af90fadf":"# Prizes and Eligibility\n\n**Main Prizes**\n\nThe Los Angeles Mayor's Office of Budget and Innovation will award $15,000 in total prizes to 5 winning authors who submit public kernels that tackle the objective effectively.  The contest launches on May 8th, with final kernels due by June 21st.\n\n**Prizes:**\n\n - 1st place:  $5,000\n\n - 2nd place: $4,000\n\n - 3rd place: $3,000\n\n - 4th place: $1,500\n\n - 5th place: $1,500\n\n\n**Kaggle Swag Prizes** \n\nKaggle Swag Prizes will be awarded to authors of public kernels that make original insights and recommendations on any topic, including topics that are not otherwise covered in the competition description. Those prizes include the winner's choice of:\n\n - Kaggle 'No Free Hunch' t-shirt\n\n - Kaggle tier t-shirt\n\n - Kaggle coffee mug\n\n - Kaggle water bottle\n\n","a579c919":"See the following kernel for more detail: https:\/\/www.kaggle.com\/bbailey\/data-science-for-good-city-of-la-starter-kernel ","b734f4c4":"# Grading Rubric \n\nThe bulk of the grade will be determined by the contents of your kernel notebook, including: (1) the creation of a single structured CSV file and data dictionary that contains all of the information from the job postings; and (2) the quality of the insights and data-driven recommendations that you make to the City of LA.  \n\nThe possible elements contained within each job bulletin are described in Kaggle_data_dictionary.csv, Sample job class export template.csv, and Job_titles.csv. If competitors extract additional data elements, they should provide an updated data dictionary, which builds on the one provided but includes at a minimum greater detail about allowable values, additionally identified variables, data types, and explanatory notes as appropriate.\n\n\n**Performances will be scored on:**\n\n - Accuracy (5 points)\n\n - Documentation (5 points)\n\n - Recommendation (5 points)\n\n\n**Accuracy (5 points):**\n\n - Did the user convert the folder of job postings into a structured CSV?\n\n - Job class structures will be evaluated on how accurately each prepared field matches manually-structured fields for a randomized set of classes. \n\n**Documentation (5 points):**\n\n - Does the user follow good coding practices?\n\n - Useful comments\n\n - Description of coding language used\/modules used\n\n - Are the modules open sourced? (prefer open sourced modules)\n\n - Documentation of script automation. (Fully-automated scripts are preferred)\n\n - Does the user document their methodology? \n\n - Is there documentation about how the solution was evaluated?\n\n - Is there documentation about the pros and cons of their solution?\n\n\n**Recommendation (5 points)**\n\n - Did the authors use the structured data to make an original insight?\n\n - Did the authors identify and communicate details about something that they discovered in the data?\n\n - Did the authors make an actionable recommendation to the City of LA?\n\n - Did the authors make effective use of data visualizations to communicate their recommendations to the City of LA? \n\n - Do the recommendations give helpful solutions to one or more of the following issues?\n\n -  - (1) identify language that can bias the pool of applicants\n\n -  - (2) improve the diversity and quality of the applicant pool; and\/or \n\n -  - (3) increase the discoverability of promotional pathways\n\n","708e6170":"You can find the official starter kernel with helpful code snippets [in this link](https:\/\/www.kaggle.com\/bbailey\/data-science-for-good-city-of-la-starter-kernel), or below you can find some functions for previewing the data files. ","76be4a2b":"![](https:\/\/i.imgur.com\/esrWigW.jpg)\n\nPhoto by [Sasha \u2022 Stories](https:\/\/unsplash.com\/photos\/5c1kq_XmPEY) on Unsplash","842562cb":"# Data Science for Good: City of Los Angeles","0b3a31d4":"# Data Science for Good: City of Los Angeles\n**Help the City of Los Angeles to structure and analyze its job descriptions**\n\nThe City of Los Angeles faces a big hiring challenge: 1\/3 of its 50,000 workers are eligible to retire by July of 2020. The city has partnered with Kaggle to create a competition to improve the job bulletins that will fill all those open positions.\n\n# Problem Statement\n\nThe content, tone, and format of job bulletins can influence the quality of the applicant pool. Overly-specific job requirements may discourage diversity. The Los Angeles Mayor\u2019s Office wants to reimagine the city\u2019s job bulletins by using text analysis to identify needed improvements.  \n\nThe goal is to convert a folder full of plain-text job postings into a structured CSV file and then to use this data to: (1) identify language that can negatively bias the pool of applicants; (2) improve the diversity and quality of the applicant pool; and\/or (3) make it easier to determine which promotions are available to employees in each job class.\n\n# How to Participate\n1. Accept the Rules\n - Accept the [competition rules][1].  \n2. Make Your Submission\n - Follow the [submission instructions][2].\n\nWIth your help, Los Angeles will overcome a wave of retirements and fill those jobs with a strong and diverse workforce. Good luck and happy Kaggling!\n\n\n  [1]: https:\/\/www.kaggle.com\/c\/data-science-for-good-city-of-los-angeles\/rules\n  [2]: https:\/\/www.kaggle.com\/c\/data-science-for-good-city-of-los-angeles\/overview\/submission-instructions"}}