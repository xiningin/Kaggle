{"cell_type":{"21f700f8":"code","64b48ee5":"code","fb89a57b":"code","b355197f":"code","c38c5509":"code","e01fb263":"code","2d22c4c5":"code","b73ef505":"code","a7d0448c":"code","1fdd1d90":"code","cd5e443d":"code","8d50a8b2":"code","e3ef5e15":"code","5e28008a":"code","0973392b":"code","5f25c353":"code","ba474972":"code","7bed1522":"code","1f435541":"code","a0757e03":"code","858d9c2e":"code","7baac821":"code","1b4dde34":"code","93ed273b":"code","f96ec683":"code","89ea27b5":"markdown","667bc852":"markdown","99693dc7":"markdown","d256bd33":"markdown","767fb25d":"markdown"},"source":{"21f700f8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","64b48ee5":"df=pd.read_csv(\"..\/input\/movie-lens-dataset\/movies.csv\")","fb89a57b":"df.head()","b355197f":"df2 =pd.read_csv(\"..\/input\/movie-lens-dataset\/ratings.csv\")","c38c5509":"df2.head()","e01fb263":"data = pd.merge(df,df2,on='movieId')\ndata.head()","2d22c4c5":"data.isnull().sum()","b73ef505":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('white')\n%matplotlib inline","a7d0448c":"data.groupby('title')['rating'].mean().sort_values(ascending=False).head()","1fdd1d90":"data.groupby('title')['rating'].count().sort_values(ascending=False).head()","cd5e443d":"ratings = pd.DataFrame(data.groupby('title')['rating'].mean())\nratings.head()","8d50a8b2":"ratings['num of ratings'] = pd.DataFrame(data.groupby('title')['rating'].count())\nratings.head()","e3ef5e15":"plt.figure(figsize=(10,4))\nratings['num of ratings'].hist(bins=70)","5e28008a":"plt.figure(figsize=(10,4))\nratings['rating'].hist(bins=70)","0973392b":"sns.jointplot(x='rating',y='num of ratings',data=ratings,alpha=0.5)","5f25c353":"movie = data.pivot_table(index='userId',columns='title',values='rating')\nmovie.head()","ba474972":"ratings.sort_values('num of ratings',ascending=False).head(10)","7bed1522":"forest_user_ratings = movie['Forrest Gump (1994)']\nbrave_user_ratings = movie['Braveheart (1995)']\nbrave_user_ratings.head()","1f435541":"forest_user_ratings","a0757e03":"similar_to_forest = movie.corrwith(forest_user_ratings)\nsimilar_to_brave = movie.corrwith(brave_user_ratings)","858d9c2e":"corr_forest = pd.DataFrame(similar_to_forest,columns=['Correlation'])\ncorr_forest.dropna(inplace=True)\ncorr_forest.head()","7baac821":"corr_forest.sort_values('Correlation',ascending=False).head(10)","1b4dde34":"corr_forest = corr_forest.join(ratings['num of ratings'])\ncorr_forest.head()","93ed273b":"corr_forest[corr_forest['num of ratings']>100].sort_values('Correlation',ascending=False).head()","f96ec683":"corr_brave = pd.DataFrame(similar_to_brave,columns=['Correlation'])\ncorr_brave.dropna(inplace=True)\ncorr_brave = corr_brave.join(ratings['num of ratings'])\ncorr_brave[corr_brave['num of ratings']>100].sort_values('Correlation',ascending=False).head()","89ea27b5":"Grab the ratings for two movies","667bc852":"# EDA","99693dc7":"Correlation","d256bd33":"## Recommending Similar Movies","767fb25d":"The above shown movies will be recommended to a person who watched Forrest Gumb based on their rating"}}