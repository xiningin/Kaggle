{"cell_type":{"bc4a3c40":"code","434b3722":"code","8dfc1f22":"code","8ab2656a":"code","74b938d4":"code","1d2b92dc":"code","61699048":"code","d0b12865":"markdown","a4e4097a":"markdown"},"source":{"bc4a3c40":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nimport json\nfrom pathlib import Path\n\nfiles = list(Path(\"\/kaggle\/input\/CORD-19-research-challenge\/2020-03-13\/pmc_custom_license\/\").glob(\"**\/*.json\"))\n\n\n# Any results you write to the current directory are saved as output.","434b3722":"strAbstract =\"\"\nfor file in files:\n    with open(file) as f:\n        jsonLoads = json.loads(f.read())\n    listAbstract = jsonLoads[\"abstract\"]\n    for listItem in listAbstract:\n        strAbstract = strAbstract +\" \"+listItem[\"text\"] \n    file1 = open(\"Abstract.txt\",\"w\")\n    file1.write(strAbstract) ","8dfc1f22":"import spacy\nimport scispacy\nnlp = spacy.load(\"en_core_sci_sm\")","8ab2656a":"doc = nlp(strAbstract[0:1000000])\nprint(len(list(doc.sents)))","74b938d4":"print(type(doc.ents))","1d2b92dc":"from collections import Counter \nsplit_it = strAbstract.split() \nCounter = Counter(split_it) \nmost_occur = Counter.most_common(1000000) \n  \nprint(most_occur) ","61699048":"strBodyText=\"\"\nfor file in files:\n    with open(file) as f:\n        jsonLoads = json.loads(f.read()) \n    listBodyText = jsonLoads[\"body_text\"]\n    for listItem in listBodyText:\n        strBodyText = strBodyText+\" \"+listItem[\"text\"]\n    file1 = open(\"BodyText.txt\",\"w\")\n    file1.write(strBodyText) ","d0b12865":"def freq(str):  \n    str_list = str.split() \n    unique_words = set(str_list) \n    for words in unique_words : \n        print('Frequency of ', words , 'is :', str_list.count(words)) \nfreq(strAbstract)","a4e4097a":"from spacy import displacy\ndisplacy.render(next(doc.sents), style='dep', jupyter=True)\n"}}