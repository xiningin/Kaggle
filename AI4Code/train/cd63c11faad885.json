{"cell_type":{"cf9ea9ad":"code","b0512ea5":"code","a046a744":"code","12d992c1":"code","7f2386fa":"code","ea111a0c":"code","061523c0":"code","a1566696":"code","02a70e5d":"code","a9f738b1":"code","6f1db460":"code","d4873cc9":"code","4b499bd1":"code","d2b89bf2":"code","e494607e":"markdown","b06b7cfe":"markdown","ef18c161":"markdown","304a8d75":"markdown","6d4ddf17":"markdown","26775f82":"markdown","76f17b48":"markdown","e53f326f":"markdown","9b225811":"markdown","264bdc57":"markdown","3ef8a03d":"markdown","2d24a0f6":"markdown","f6f551ec":"markdown","9f7e1f74":"markdown"},"source":{"cf9ea9ad":"#Importing important packages\nimport pandas as pd\nimport numpy as np","b0512ea5":"#Importing Dataset\ndf_titanic=pd.read_csv('..\/input\/titanic\/train.csv')","a046a744":"#Dataset information\ndf_titanic.info()","12d992c1":"#Checking top 5 rows of the dataset\ndf_titanic.head()","7f2386fa":"#Importing Plotly package\nimport plotly as py\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\nimport plotly.graph_objects as go","ea111a0c":"#Colorscales in Plotly\nimport plotly.express as px\nfrom textwrap import wrap\n\nnamed_colorscales = px.colors.named_colorscales()\nprint(\"\\n\".join(wrap(\"\".join('{:<12}'.format(c) for c in named_colorscales), 96)))","061523c0":"df_surv = df_titanic.groupby(['Survived'])['PassengerId'].count().reset_index()\ndf_surv.rename(columns = {'PassengerId':'PassesngerCount'}, inplace = True)\ndf_surv","a1566696":"#Pie Chart for Survival Count\nfig = {\n  \"data\": [\n    {\n      \"values\": df_surv['PassesngerCount'],\n      \"labels\": df_surv['Survived'],\n      \"name\": \"Survival Counts\",\n      \"sort\": False,\n      \"marker\": {'colors': ['#F38E87', '#2EF91D']},\n      \"textinfo\":\"percent\",\n      \"textfont\": {'color': '#040504', 'size': 15},\n\n      \"hole\": .4,\n      \"type\": \"pie\"\n    } ],\n    \"layout\": {\n        \"title\":\"Survival Counts\",\n        \"annotations\": [\n            {\n                \"font\": {\n                    \"size\": 15,\n                    \"color\": '#5A5A5A'\n                },\n                \"showarrow\": False,\n                \"text\": \"Less than 40% people survived on the Titanic\",\n                \"x\": 0.50,\n                \"y\": -0.2\n            }\n        ]\n    }\n}\n\niplot(fig)","02a70e5d":"df_g = df_titanic.groupby(['Survived', 'Sex']).size().reset_index()\ndf_g['percentage'] = df_titanic.groupby(['Survived', 'Sex']).size().groupby(level=1).apply(lambda x: 100 * x \/ float(x.sum())).values\ndf_g.columns = ['Survived', 'Sex', 'Counts', 'Percentage']\ndf_g","a9f738b1":"import plotly.graph_objects as go\n\nfig = go.Figure()\n\nx=df_g['Sex']\ny=df_g['Percentage']\nz=df_g['Survived']\n\nfig.add_trace(go.Bar(x=x, y=y,\n                     text=y,\n                     textposition='auto',\n                     texttemplate=\"%{y:.1f}\",\n                     textfont_color=\"black\",\n                     textfont_size=11,\n                     marker=dict(\n                         color = z,\n                         colorscale='Tealgrn'\n                        ),\n                    width=0.2\n                    )\n             )\nfig.update_layout(xaxis_ticks='outside', #Adding Tick Marks on X axis\n                  yaxis_ticks='outside', #Adding Tick Marks on Y axis\n                  yaxis_ticksuffix = '%', #Adds $ as Prefix\n                  paper_bgcolor='rgba(0,0,0,0)',#Transparent Paper BG color\n                  plot_bgcolor='rgba(0,0,0,0)', #Transparent Plot BG color\n                  #showlegend=True, # Remove Legends\n                  title=\"Survival ratio by Male vs Female\",\n                  title_x=0.45, #Center title\n                  title_yanchor='bottom',#Title Y Axis position\n                  title_y=0.88,#Title Y Axis position\n                  title_font_size=18,#Title Y Axis position\n                  legend=dict(\n                      x=0.8,\n                      y=0.9,\n                      traceorder=\"normal\"\n                      ),\n                  autosize=False,\n                  width=1000,\n                  height=450,\n                  xaxis=dict(\n                            linecolor=\"#BCCCDC\"\n                            ),\n                  yaxis=dict(\n                            linecolor=\"#BCCCDC\"\n                            )\n                 )\nfig.show()","6f1db460":"df_titanic['Embarked'] = df_titanic['Embarked'].fillna('Unknown')\nembarked_points = df_titanic['Embarked'].sort_values(ascending=True).unique()\nembarked_points=embarked_points.tolist()\nprint(embarked_points)\nprint(type(embarked_points))\n\ntotal_embarked = df_titanic.groupby(['Embarked'],as_index=True,sort=True).count()['Survived'].to_list()\ntotal_embarked\nprint(type(total_embarked))","d4873cc9":"embarked_pie = go.Pie(labels=embarked_points, values=total_embarked)\nembarked_pie_layout = go.Layout(title='Embarked')\nembarked_pie_fig = go.Figure(data = [embarked_pie], layout=embarked_pie_layout)\niplot(embarked_pie_fig, filename='Titanic Embarked', )","4b499bd1":"df_pc = df_titanic.groupby(['Survived', 'Pclass']).size().reset_index()\ndf_pc['percentage'] = df_titanic.groupby(['Survived', 'Pclass']).size().groupby(level=1).apply(lambda x: 100 * x \/ float(x.sum())).values\ndf_pc.columns = ['Survived', 'Pclass', 'Counts', 'Percentage']\ndf_pc","d2b89bf2":"import plotly.graph_objects as go\n\nfig = go.Figure()\n\nx=df_pc['Pclass']\ny=df_pc['Percentage']\nz=df_pc['Survived']\n\nfig.add_trace(go.Bar(x=x, y=y,\n                     text=y,\n                     textposition='auto',\n                     texttemplate=\"%{y:.1f}\",\n                     textfont_color=\"black\",\n                     textfont_size=11,\n                     marker=dict(\n                         color = z,\n                         colorscale='Tealgrn'\n                        ),\n                    width=0.2\n                    )\n             )\nfig.update_layout(xaxis_ticks='outside', #Adding Tick Marks on X axis\n                  yaxis_ticks='outside', #Adding Tick Marks on Y axis\n                  yaxis_ticksuffix = '%', #Adds $ as Prefix\n                  paper_bgcolor='rgba(0,0,0,0)',#Transparent Paper BG color\n                  plot_bgcolor='rgba(0,0,0,0)', #Transparent Plot BG color\n                  #showlegend=True, # Remove Legends\n                  title=\"Survival ratio by Passenger Class\",\n                  title_x=0.45, #Center title\n                  title_yanchor='bottom',#Title Y Axis position\n                  title_y=0.88,#Title Y Axis position\n                  title_font_size=18,#Title Y Axis position\n                  legend=dict(\n                      x=0.8,\n                      y=0.9,\n                      traceorder=\"normal\"\n                      ),\n                  autosize=False,\n                  width=1000,\n                  height=450,\n                  xaxis=dict(\n                            linecolor=\"#BCCCDC\"\n                            ),\n                  yaxis=dict(\n                            linecolor=\"#BCCCDC\"\n                            )\n                 )\nfig.show()","e494607e":"* Most of the passengers onboarded from Southampton (S), followed by Cherbourg (C) and then Queenstown (Q)","b06b7cfe":"**Class 1 passengers had highest survival chances**","ef18c161":"### Paasenger Class and their Survival chance","304a8d75":"# Beginner's Guide for visualization with Plotly using Titanic Dataset","6d4ddf17":"**Dataset contains total of *891 entries* out of which *Age*, *Cabin* and *Embarked* are having Null\/NaN\/missing values.**","26775f82":"![Plotly](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAYUAAACBCAMAAAAYG1bYAAAAnFBMVEX\/\/\/8\/T3UvQm02R3AxRG3S1d2Tmq62vMnAxNCAz749TXTHy9UyRW7V2ODz9Pc2SHKaobPk5uutssBSYIJKWX07RnFqdpOCi6KD1MEqPmrq7PCjqrrd4OZ\/zL1ytK52gJpbaIh5wbZFVXqKk6hgbYtmnaB6w7dTeItIYX9LZ4JejZdmnKBvr6trpqZhlJuxt8VzfZhRcohSdopZg5IJa4dnAAAK0klEQVR4nO2ca2OiOhCGJcGqkaKoqHjXur1tW9vt\/\/9vB8gk5EZXWjV4Nu9+kgYW5iHJzGRCo+Hk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5GRPYbN1SjVD2w90hbodI+SfUAihcdf2Q12b7hJMvNOKkGRi+7GuS2P\/xAiogr3tB7sm3aGzQPA83\/WGo7VIzgTB85Km7Ye7Gk3w2SiQse2Huxqdel4WFTiH9TgtzjM1U6Fb2493JWqea27OKbRtP96VyFGogxyFOshRqIMchTrIUaiDHIU6yFGog46iQEgv\/jLGJgSbGjgKR8pEAcexZFP88PH5+hELR2K5BXn4eH59FBs4CpVkoBA\/33e2fwqbko9ppmd+hMS\/lp3VU\/H7M2\/woOUFHYUjpVOIP6edTkcwevw7O9CZPrG3P\/6Vt\/jDrB6\/5A06I3VQchSOlEaBPOUmXU0\/mZF36c\/7ZWf6Clx6D1mL5Xb6QYoztimWN7UzOApHSqMQv05zo3dWsYDlPjXyFg7Eqw498Jse6H0ChVd1Zvg2hflwNIkqnjObjIb9ksttduvFN2\/lIlIpEG+Zjy6FTcnjMj+0AizkcQotnum7T\/5Ag5NReEep04WqYZh5ASHIuNa9TrLL1TnLrvUFvE2NnFp1+singeVL9vKv3mKZ03IHmEbLrHdst5+901Do5ouwuNpK3STI\/8eD4RHzy5E6FyPo88LjfYphOn0TXKDsxe9s2e\/eRydvwX2i+C1vsNJc1W9SuKEX7lU6aZi\/NNhQcTAP6GPUeOFP95HI7m21XX0KJo0fttvX3zvuAZHH36vty0cxF8fPaYM3PWz7GQVc6aRyCn18hRRo1CYNLr0sShNBxWpcF6f\/Tk3hVH3hSimcTI7Ckbo4heYBqpTCRbvV6pocoS8ozLKq5ubM8BdKgYxZwXLhmaoUZu2W6X9tHuyV1l6YQrhJUDJMrdje4wT5CCVkormQZRRm82Fe1YySUV8DMYQQklUsF3WyCoVDkv6vWmAR7tMbG1WNUU6lC1MYZxbB+7aH+CyCk70SUZkphDcoYCeRAN0pA8xQnZaSOfxFpnCb+a0kUe9snTlSePgDS\/5Ex1EgmHxdPUaMVd8ahSgBI0qtCTcYlZHC7S6Qzgk8eQDRKBBmUpnCXf6LbIw3Zqum00SBKB6Qh4bveywmiZTcN\/E37xt0hI90ay6KJWgttjJRaCealRMpQtMpeNBbZApr2k4JpSkbD1maGkyZ7YfV\/cuTkNkm2b1FeyU+GHFnloyyR1podjBQKOt5vojBQKFrwidh0CmwYFmm0KddCkvcQ6hQTCxlm3QK+A+NjDkGRLtpyJ8zfs5adHimG9OpMvwBBQ8J86VOoaSOUxxAFAqEJOy9lilEtM8SJM7vA18Gd2kZMhhLmrd+gMfC79C0BaYgH5DZBgz4Bhr0A+VaX1JIZ9hUbD4hwhChU+AmJj7yEz72EU9rQrLtXKmCIR9cFB9pTX8GopsEeQFtzr6U9Mz2L5rZnrK0UMCmTvZCxivIZENmm9u6q17rKwqBN7+Nou6EmVSYLzUKA3Ya2h+iKGqN2W+\/MCVEbetZlEt40xUKTRjcSNECbpyMfmzOb6o8s\/3CKAygaQTdlme2YVXH\/w4F7s5HQ5hv+AiiUQg9IOW34EibOVmI+6vHx84bmJ9bvMWeHvHn+smXkdYXevdgYzbsqxTytTdxhfM7FMRpAKxSDMoqhRacJXgwC0BXGO54Cgd483lwsIDrY2s5Dn1eyPLWwvqmTgF\/TvMWbGX6GxSktYMZTCd8vlQpjKHPDYST2qopj6fAuhaf22E7E76rZroTypDZfny9X94XywsaBS9+erlfbnnu+xsUkOQRwgIAH28UCuB7ETmwhVGEo6uQzVOc1bBnuqmLyhAvpEEbERLZOgXagocL1SkoHuEskd9FhQKcFMijNnhsfJSqQAE6H\/EpQbYKZHEXnjmDIfreBgqyqlNQDAozAzeDQoHZW35VZ758qSqZbdlZhenNVtyc6e95pDNQUI\/TrAIfchQK9F0lWE6jhtTH58FKFQrw0DTHoc0wFmSHgvLaQYaNuetGCp6neDAj2eyVVnnALctnorFtN7XxP6DAJpNKFMD3zSJFFotaXYr7Nyk0YOZDzRq4qY1\/lgI4q2TN3FTfau2ekUKWZ+NukolCgBKfN7hGCjPIrBLoCpY\/FmGKF3B\/EXU3LEGqUyBkEEUtlv+5SgpsIGJLiDbd1IaZAu2c4FTrFMiO+ox7lmP7MYXJMRTU6fNnFOSVDnvZVCqdAkvXsBFTo+B3ld+VKfgt+fA7pVASLwwohUCJF+DuWFoQKmGkJTQqcz3SRoxMpRSVBekUAlYOAiu0ejaPncu87soUeKgFggCMLScpFCCs8uUOBIlQn616QvxtWC0zU2iLN2v74zWGbB67IzCGtr7Ae+\/4uxSUAQA+lMXZKBTAo1d8SRinEEuM0gGUBHrFWEltnpCmseumNixREFdYUr0riRw1sw2JHiIamKWn+VsMVAJ9I0kJBWF9NrFVDcZkhwIRHR42Nqj\/MacAZSp8xDIe40s1muNfQmHGnfGKOyXOIDsUPDzkNmnCO1m4NyoFdo9+MXD09eU3tvzvqRjKqoX5t+rsf9\/PEgUPe\/RvIbOnUAukrf5zn3hM20TvzGkWJpgD61JYcXjKKLDeYzWbSmWLgkfQ6G4wX2O2jh8Unr5Ggd8kRvv+oL9H\/C0W\/Sa+zcUn6\/mgKKwprZxn6+aGXVgXljUK2UsbFPWq4kyh1yPdBcJJRUmsXGDXLOr3cOAn\/G9lFG7V+cieLFKQmwpjs6FCkqdLpDsdyfbrS2WUvMyjjAIkB9TgxYbqQYFILQ0UwpGOARPVwZQ+k1xSs83FEnoVd\/SeRbWggAMpLjbVbIcbn8gnBUNDgCZUdhc12+Y8FMvnvWtXubzsUJDK8AnayK9ji25Q3sjn3iBxjwROJqbhvLvjsHiyumu8HHOpkHU3tWGJQtDqE2rTbFP+UMntNRpZVp1oXvxi7ft5JjqdodG4xHjhfIfyLS+kMO8+HXtIIqeh5hCzqXDsyAqFNNYK25Oh1yO7\/Y3BnOGE9DaG49FgPSLpSeP5V2N5926zk84P77zeUIAQRoeNX3aLVmSLQq6w1Ef84i+zYxxL9Xzh582IBMWwVY\/vMlilYENjcecXwTVwkBr\/HoWmFFMkdhc6ub6g0P8\/UpgL+42IX4tJoWGqnOedlFXqsBj0tmytje\/tUEtlynbaJva+VXQo7tEf1ebLVYZ1Z5bcYludlBjU88H7mEEWiOf412p8qzsgm3zXucW1dl4CE\/RKPixmQ4YRyaOdgaffYfNYk\/0msDbwzqY5WDlra5fSKUQjFCBtBeCSagd+4KNgMzd9TMOWTJUw3iGaNd+Lrosmt7NoLqQyR63ZrFvsfyb+3SJc3OilewZnPGz1W3ZzmLPDfGD8CIpFGWvz\/ABLWRvs9wJxF20a+GoNfEPWsx4h0RWopE5V\/5yB8vtvDRyFKqrjV6r+PTkKdZCjUAc5CnWQo1AHOQp10OKsFOqwmngNCk0lJieS\/CUopy80Ph+GeqzpXoWMX6Q7jZC2rO9UprN1BlyPNd3rULg7DwbsuVmhgkLTp1B\/KuIbSuecvtJghwJ8SgXIs\/lxj2tVc35zSs1rUtvg5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5PRX\/QeO7sr9VLwuRgAAAABJRU5ErkJggg==)","76f17b48":"### Bar Chart for Survival Counts by Male vs Female","e53f326f":"**I Keep updating this space with more visualizations, please keep visiting here!**","9b225811":"**Females passengers have higher survival ratio compared to Male passengers**","264bdc57":"### Bar Chart for Survival Counts","3ef8a03d":"**Importing the packages**","2d24a0f6":"# Visualization with Plotly","f6f551ec":"### Distribution of Place of Embarked","9f7e1f74":"This notebook will guide basic EDAs and Visualization using ***Pandas*** and ***Plotly*** libraries in Python."}}