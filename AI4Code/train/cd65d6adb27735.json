{"cell_type":{"4fd6df91":"code","f9ee3e88":"code","a44a425d":"code","455a5a8a":"code","935e155b":"code","97446455":"code","143cdc0b":"code","c9e51ddf":"code","333cea31":"code","3eea23b5":"code","a7d8d370":"code","81f49406":"code","8eaa1ebb":"code","fdf5efa7":"code","5466ba8b":"code","cb5364a8":"code","9f1f503e":"code","ac726d45":"code","873be271":"code","2ebdd711":"code","b087cefc":"code","da92f370":"code","ea3a6e50":"markdown"},"source":{"4fd6df91":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f9ee3e88":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt \nimport seaborn as sns","a44a425d":"df = pd.read_csv('\/kaggle\/input\/netflix-shows\/netflix_titles.csv')\ndf.head(10)","455a5a8a":"df.shape","935e155b":"df.drop(['show_id', 'director', 'cast', 'date_added', 'duration', 'listed_in', 'description'], axis = 1, inplace = True)","97446455":"df.head()","143cdc0b":"df.isna().sum()","c9e51ddf":"df.dropna(subset = ['country', 'rating'], axis = 0, inplace = True)","333cea31":"df.isna().sum()","3eea23b5":"df.shape","a7d8d370":"df.rating.unique()","81f49406":"df['rating'] = df['rating'].replace({'74 min': 'TV-MA', '84 min': 'TV-MA', '66 min': 'TV-MA', 'TV-Y7-FV': 'TV-Y7'})","8eaa1ebb":"plt.figure(figsize = [10,7])\nplt.xticks(rotation = 90)\nsns.countplot(x = df.rating, palette='rocket')","fdf5efa7":"sns.countplot(y = df.type, palette=['red', 'black'])","5466ba8b":"sort_data = df.sort_values(\"release_year\", ascending = True)\nsort_data[['title', \"release_year\"]][:10]","cb5364a8":"df.country.value_counts()","9f1f503e":"def handlecountry(value):\n    if ',' in value:\n        value = value.split(',')\n        value = value[0]\n    return value\ndf.country = df.country.apply(handlecountry)","ac726d45":"df.country.value_counts()","873be271":"top_ten_countries = df.country.value_counts().sort_values(ascending = False)[:10]\ntop_ten_countries","2ebdd711":"x = top_ten_countries.index\ny = top_ten_countries.values\nplt.figure(figsize = [8,6])\nplt.xticks(rotation = 45)\nsns.barplot(x = x, y = y, palette='rocket')","b087cefc":"df.release_year.unique()","da92f370":"rel1943to1990 = df.release_year[(df.release_year>=1943) & (df.release_year<=1990)]\nrel1991to2005 = df.release_year[(df.release_year>=1991) & (df.release_year<=2005)]\nrel2006to2015 = df.release_year[(df.release_year>=2006) & (df.release_year<=2015)]\nrel2016to2021 = df.release_year[(df.release_year>=2016) & (df.release_year<=2021)]\n\nx_year = ['1943 to 1990', '1991 to 2005', '2006 to 2015', '2016 to 2021']\ny_year = [len(rel1943to1990), len(rel1991to2005), len(rel2006to2015), len(rel2016to2021)]\nsns.barplot(x = x_year, y = y_year)","ea3a6e50":"Rating has some incorrect entries"}}