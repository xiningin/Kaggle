{"cell_type":{"1a12daea":"code","173de89b":"code","a5425bf4":"code","997c007c":"code","83d7401d":"code","d306658b":"code","be80e58e":"code","0707f371":"code","2c4d7988":"code","8000db5b":"code","92c71b1c":"code","d9c3d407":"code","ae27f74b":"code","eb413e09":"code","c2e0a696":"code","9e4df55b":"code","bac1881f":"code","9cba6426":"code","6cc18171":"code","f05ece95":"code","9057d833":"markdown","61a5d549":"markdown"},"source":{"1a12daea":"import numpy as np, pandas as pd\nimport json\nimport ast \nfrom textblob import TextBlob\nimport nltk\nimport torch\nimport pickle\nfrom scipy import spatial\nimport warnings\nwarnings.filterwarnings('ignore')\nimport spacy\nfrom nltk import Tree\nen_nlp = spacy.load('en')\nfrom nltk.stem.lancaster import LancasterStemmer\nst = LancasterStemmer()\nfrom sklearn.feature_extraction.text import TfidfVectorizer, TfidfTransformer","173de89b":"# !conda update pandas --y","a5425bf4":"train = pd.read_csv(\"..\/input\/sentence-embedding\/train.csv\",encoding=\"latin-1\")","997c007c":"train.shape","83d7401d":"with open(\"..\/input\/sent-embedding\/dict_embeddings1.pickle\", \"rb\") as f:\n    d1 = pickle.load(f)","d306658b":"with open(\"..\/input\/sent-embedding\/dict_embeddings2.pickle\", \"rb\") as f:\n    d2 = pickle.load(f)","be80e58e":"dict_emb = dict(d1)\ndict_emb.update(d2)","0707f371":"len(dict_emb)","2c4d7988":"del d1, d2","8000db5b":"def get_target(x):\n    idx = -1\n    for i in range(len(x[\"sentences\"])):\n        if x[\"text\"] in x[\"sentences\"][i]: idx = i\n    return idx","92c71b1c":"train.head(3)","d9c3d407":"train.shape","ae27f74b":"train.dropna(inplace=True)","eb413e09":"train.shape","c2e0a696":"def process_data(train):\n    \n    print(\"step 1\")\n    train['sentences'] = train['context'].apply(lambda x: [item.raw for item in TextBlob(x).sentences])\n    \n    print(\"step 2\")\n    train[\"target\"] = train.apply(get_target, axis = 1)\n    \n    print(\"step 3\")\n    train['sent_emb'] = train['sentences'].apply(lambda x: [dict_emb[item][0] if item in\\\n                                                           dict_emb else np.zeros(4096) for item in x])\n    print(\"step 4\")\n    train['quest_emb'] = train['question'].apply(lambda x: dict_emb[x] if x in dict_emb else np.zeros(4096) )\n        \n    return train   ","9e4df55b":"train = process_data(train)","bac1881f":"train.head(3)","9cba6426":"train.to_csv(\"procesed_train.csv\")","6cc18171":"del train","f05ece95":"import gc\ngc.collect()","9057d833":"## Data Processing","61a5d549":"### Loading Embedding dictionary"}}