{"cell_type":{"25c730d0":"code","07f9dda4":"code","8ee463a7":"code","88a07844":"code","bbe694bc":"code","2ce191c8":"code","fc5761f0":"code","8c1fad60":"code","cf667895":"code","ac837524":"code","c74d335a":"code","e17524a3":"code","d5bb22b6":"markdown","ec62ea86":"markdown","ae388c09":"markdown","302efc09":"markdown","79398c8d":"markdown","785cbb9a":"markdown","5da41a47":"markdown","f9e7f1a6":"markdown","4028844f":"markdown","b6858455":"markdown","2c810bc5":"markdown","181b6f9d":"markdown","049fab03":"markdown","3151a3c2":"markdown","bb3b238f":"markdown","09e5d646":"markdown","8516aac0":"markdown","66c8fb00":"markdown","4b242b08":"markdown","30aea8bb":"markdown","62b1e5f2":"markdown","ea6dcee3":"markdown","92bead48":"markdown","1d4ebf33":"markdown","abb0992b":"markdown","849b40b9":"markdown","f84ec7c4":"markdown","7ce18f55":"markdown","931b7b63":"markdown","edd50a6c":"markdown","4f722e1d":"markdown","d7f2871a":"markdown","e29f0b3e":"markdown","d226a72f":"markdown","622aa59d":"markdown","f9a67d6f":"markdown","baab689a":"markdown","e5740432":"markdown"},"source":{"25c730d0":"import tensorflow as tf","07f9dda4":"# \uc2e4\uc81c \uc120\nTRUE_W = 3.0\nTRUE_B = 2.0\n\nNUM_EXAMPLES = 1000\n\n# \ubb34\uc791\uc704 x \uac12\uc758 \ubca1\ud130\nx = tf.random.normal(shape=[NUM_EXAMPLES])\n\n# \uc7a1\uc74c\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4\nnoise = tf.random.normal(shape=[NUM_EXAMPLES])\n\n# y\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4\ny = x * TRUE_W + TRUE_B + noise","8ee463a7":"# \ubaa8\ub4e0 \ub370\uc774\ud130\ub97c \ucc0d\uc2b5\ub2c8\ub2e4\nimport matplotlib.pyplot as plt\n\nplt.scatter(x, y, c=\"b\")\nplt.show()","88a07844":"class MyModel(tf.Module):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        # \uac00\uc911\uce58\ub97c `5.0`\uc73c\ub85c, \ud3b8\ud5a5\uc744 `0.0`\uc73c\ub85c \ucd08\uae30\ud654\ud569\ub2c8\ub2e4\n        # \uc2e4\ubb34\uc5d0\uc11c\ub294 \ubb34\uc791\uc704\ub85c \ucd08\uae30\ud654\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4\n        self.w = tf.Variable(5.0)\n        self.b = tf.Variable(0.0)\n    \n    def __call__(self, x):\n        return self.w * x + self.b\n\nmodel = MyModel()\n\n# tf.module\uc758 \uae30\ubcf8\uc801\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc9c4 \ubcc0\uc218 \uc9d1\ud569\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4\nprint(\"Variables:\", model.variables)\n\n# \ubaa8\ub378\uc774 \uc791\ub3d9\ud558\ub294 \uac83\uc744 \ud655\uc778\ud569\ub2c8\ub2e4\nassert model(3.0).numpy() == 15.0","bbe694bc":"# \uc774\uac83\uc740 \uc804\uccb4 \ubb36\uc74c\uc5d0 \ub300\ud574\uc11c \ud558\ub098\uc758 \uc190\uc2e4\uac12\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4\ndef loss(target_y, predicted_y):\n    return tf.reduce_mean(tf.square(target_y - predicted_y))","2ce191c8":"plt.scatter(x, y, c=\"b\")\nplt.scatter(x, model(x), c=\"r\")\nplt.show()\n\nprint(\"Current loss: %1.6f\" % loss(model(x), y).numpy())","fc5761f0":"# \ud638\ucd9c \uac00\ub2a5\ud55c \ubaa8\ub378, \uc785\ub825, \ucd9c\ub825, \uadf8\ub9ac\uace0 \ud559\uc2b5\ub960\uc774 \uc8fc\uc5b4\uc9c0\uba74...\ndef train(model, x, y, learning_rate):\n    \n    with tf.GradientTape() as t:\n        # \ud559\uc2b5 \uac00\ub2a5\ud55c \ubcc0\uc218\ub4e4\uc740 GradientTape\uc5d0 \uc758\ud574 \uc790\ub3d9\uc73c\ub85c \ucd94\uc801\ub429\ub2c8\ub2e4\n        current_loss = loss(y, model(x))\n    \n    # W\uc640 b\uc5d0 \ub300\ud574 \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud558\uae30 \uc704\ud574 GradientTape\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4\n    dw, db = t.gradient(current_loss, [model.w, model.b])\n    \n    # \ud559\uc2b5\ub960\uc5d0 \uc758\ud574 \ud06c\uae30\uac00 \uc870\uc808\ub41c \uae30\uc6b8\uae30\ub97c \ube8d\ub2c8\ub2e4\n    model.w.assign_sub(learning_rate * dw)\n    model.b.assign_sub(learning_rate * db)","8c1fad60":"model = MyModel()\n\n# \ub098\uc911\uc5d0 \uadf8\ub798\ud504\uc5d0 \ud45c\uc2dc\ud558\uae30 \uc704\ud574 W\uac12\uacfc b\uac12\uc758 \uae30\ub85d\uc744 \ubaa8\uc74d\ub2c8\ub2e4\nWs, bs = [], []\nepochs = range(10)\n\n# \ud559\uc2b5 \ubc18\ubcf5\ubb38\uc744 \uc815\uc758\ud569\ub2c8\ub2e4\ndef training_loop(model, x, y):\n    \n    for epoch in epochs:\n        # \uac70\ub300\ud55c \ub2e8\uc77c \ubb36\uc74c\uc73c\ub85c \ubaa8\ub378\uc744 \uac31\uc2e0\ud569\ub2c8\ub2e4\n        train(model, x, y, learning_rate=0.1)\n        \n        # \uac31\uc2e0 \uc774\uc804\uc5d0 \uc774\uac83\uc744 \ucd94\uc801\ud569\ub2c8\ub2e4\n        Ws.append(model.w.numpy())\n        bs.append(model.b.numpy())\n        current_loss = loss(y, model(x))\n        print(\"Epoch %2d: W=%1.2f b=%1.2f, loss=%2.5f\" %\n             (epoch, Ws[-1], bs[-1], current_loss))\n\n\n\nprint(\"Starting: W=%1.2f b=%1.2f, loss=%2.5f\" %\n     (model.w, model.b, loss(y, model(x))))\n\n# \ud559\uc2b5\uc744 \uc9c4\ud589\ud569\ub2c8\ub2e4\ntraining_loop(model, x, y)\n\n# \uadf8\ub798\ud504\ub85c \uadf8\ub9bd\ub2c8\ub2e4\nplt.plot(epochs, Ws, \"r\",\n        epochs, bs, \"b\")\n\nplt.plot([TRUE_W] * len(epochs), \"r--\",\n         [TRUE_B] * len(epochs), \"b--\")\n\nplt.legend([\"W\", \"b\", \"True W\", \"True b\"])\nplt.show()","cf667895":"# \ud559\uc2b5\ub41c \ubaa8\ub378\uc774 \uc5b4\ub5bb\uac8c \uc791\ub3d9\ud558\ub294\uc9c0 \uc2dc\uac01\ud654\ud569\ub2c8\ub2e4\nplt.scatter(x, y, c=\"b\")\nplt.scatter(x, model(x), c=\"r\")\nplt.show()\n\nprint(\"Current loss: %1.6f\" % loss(model(x), y).numpy())","ac837524":"class MyModelKeras(tf.keras.Model):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        # \uac00\uc911\uce58\ub97c `5.0`\uc73c\ub85c \ud3b8\ud5a5\uc744 `0.0`\uc73c\ub85c \ucd08\uae30\ud654\ud569\ub2c8\ub2e4\n        # \uc2e4\uc804\uc5d0\uc11c\ub294 \ubb34\uc791\uc704\ub85c \ucd08\uae30\ud654\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4\n        self.w = tf.Variable(5.0)\n        self.b = tf.Variable(0.0)\n    \n    def __call__(self, x, **kwargs):\n        return self.w * x + self.b\n\nkeras_model = MyModelKeras()\n\n# Keras \ubaa8\ub378\ub85c \ud559\uc2b5 \ubc18\ubcf5\ubb38\uc744 \uc7ac\uc0ac\uc6a9\ud569\ub2c8\ub2e4\ntraining_loop(keras_model, x, y)\n\n# Keras\uc758 \uae30\ubcf8 \uc9c0\uc6d0\uc744 \uc0ac\uc6a9\ud574\uc11c \uccb4\ud06c\ud3ec\uc778\ud2b8\ub97c \uc800\uc7a5\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4\nkeras_model.save_weights(\"my_checkpoint\")","c74d335a":"keras_model = MyModelKeras()\n\n# \ucef4\ud30c\uc77c\uc740 \ud559\uc2b5 \ub9e4\uac1c \ubcc0\uc218\ub97c \uc124\uc815\ud569\ub2c8\ub2e4\nkeras_model.compile(\n    # \uae30\ubcf8\uc801\uc73c\ub85c, fit()\ub294 tf.function()\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\n    # \ub514\ubc84\uae45\uc744 \uc704\ud574\uc11c \uc774\uac83\uc744 \ub04c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc9c0\uae08\uc740 \ucf1c\uc838 \uc788\uc2b5\ub2c8\ub2e4.\n    run_eagerly=False,\n    \n    # \uac1d\uccb4\ucc98\ub7fc \uc124\uc815\ub41c \ub9cc\ub4e4\uc5b4\uc9c4 \ucd5c\uc801\ud654\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4\n    optimizer=tf.keras.optimizers.SGD(learning_rate=0.1),\n    \n    # Keras\ub294 \ub9cc\ub4e4\uc5b4\uc9c4 MSE \uc624\ucc28\uac00 \uc788\uc9c0\ub9cc,\n    # \uc704\uc5d0\uc11c \uc815\uc758\ub41c \uc190\uc2e4 \ud568\uc218\ub97c \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4\n    loss=tf.keras.losses.mean_squared_error,\n)","e17524a3":"print(x.shape[0])\nkeras_model.fit(x, y, epochs=10, batch_size=1000)","d5bb22b6":"\ub9cc\uc57d \uc0ac\uc6a9\ud558\uac8c \ub41c\ub2e4\uba74, \ub9e4\uac1c \ubcc0\uc218\ub97c \uc124\uc815\ud558\uae30 \uc704\ud574 `model.compile()`\uc744, \ud559\uc2b5\uc744 \uc704\ud574 `model.fit()`\uc744 \uc0ac\uc6a9\ud574\uc57c \ub420 \uac83\uc785\ub2c8\ub2e4. \ub610\ub2e4\uc2dc \uac04\ub2e8\ud558\uac8c, L2 \uc190\uc2e4\uacfc \uae30\uc6b8\uae30 \uac15\ud558\ubc95\uc758 Keras \uad6c\ud604\uc744 \uc0ac\uc6a9\ud574\uc11c \uc801\uc740 \ucf54\ub4dc\uac00 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Keras \uc190\uc2e4\uacfc \ucd5c\uc801\ud654 \ub610\ud55c \uc774\ub7f0 \ud3b8\uc758 \ud568\uc218\ub4e4\uc758 \ubc16\uc5d0\uc11c \uc0ac\uc6a9\ub420 \uc218 \uc788\uace0, \uc774\uc804 \uc608\uc81c\ub294 \uc774\uac83\ub4e4\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.","ec62ea86":"\uc190\uc2e4 \ud568\uc218\ub294 \uc8fc\uc5b4\uc9c4 \uc785\ub825\uc5d0 \ub300\ud574 \ubaa8\ub378\uc758 \ucd9c\ub825\uc774 \ubaa9\ud45c\ub85c \ud558\ub294 \ucd9c\ub825\uc5d0 \uc5bc\ub9c8\ub098 \uc798 \ub9de\uc558\ub294\uc9c0 \uce21\uc815\ud569\ub2c8\ub2e4. \ubaa9\ud45c\ub294 \uc774 \ucc28\uc774\ub97c \ud559\uc2b5 \ub3d9\uc548\uc5d0 \ucd5c\uc18c\ud654\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ud45c\uc900 \"\uc81c\uacf1\uc758 \ud3c9\uade0\" \uc624\ucc28\ub85c\ub3c4 \uc54c\ub824\uc838 \uc788\ub294 L2 \uc190\uc2e4\uc744 \uc815\uc758\ud558\uc138\uc694:","ae388c09":"## Keras\ub97c \uc774\uc6a9\ud55c \uac19\uc740 \ud574\uacb0\ucc45","302efc09":"\ud559\uc2b5\uc744 \ubcf4\uae30 \uc704\ud574\uc11c, \ud559\uc2b5 \ubc18\ubcf5\ubb38\uc744 \ud1b5\ud574 _x_ \uc640 _y_ \uc758 \ub3d9\uc77c\ud55c \ubb36\uc74c\uc744 \ubcf4\ub0b4\uace0, `W`\uc640 `b`\uac00 \uc5b4\ub5bb\uac8c \ubc1c\ub2ec\ud558\ub294\uc9c0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","79398c8d":"# \uae30\ubcf8\uc801\uc778 \ud559\uc2b5 \ubc18\ubcf5\ubb38","785cbb9a":"TensorFlow\uc5d0\uc11c\ub294, \ub370\uc774\ud130\uc758 \uac01 \uc785\ub825\uc740 \uac70\uc758 \ud56d\uc0c1 \ud150\uc11c\ub85c \ub098\ud0c0\ub0b4\uc9c0\uace0, \uc8fc\ub85c \ubca1\ud130\uc785\ub2c8\ub2e4. \uc9c0\ub3c4 \ud559\uc2b5\uc5d0\uc11c\ub294 \ucd9c\ub825 (\ub610\ub294 \uc608\uce21\ud558\uace0\uc790 \ud558\ub294 \uac12) \ub610\ud55c \ud150\uc11c\uc785\ub2c8\ub2e4.","5da41a47":"\ubaa8\ub378\uc744 \uc815\uc758\ud558\ub294 \uac83\uc740 [tf.keras.Model](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/keras\/Model)\ub97c \uc0c1\uc18d\ubc1b\ub294\ub2e4\uba74 \uc644\ubcbd\ud788 \ub3d9\uc77c\ud558\uac8c \ubcf4\uc785\ub2c8\ub2e4. Keras \ubaa8\ub378\uc740 \uad81\uadf9\uc801\uc73c\ub85c \ubaa8\ub4c8\uc5d0\uc11c \uc0c1\uc18d\ub41c\ub2e4\ub294 \uac83\uc744 \uae30\uc5b5\ud558\uc138\uc694.","f9e7f1a6":"\uc774 \uc608\uc81c\uc5d0\uc11c\ub294, [\uae30\uc6b8\uae30 \uac15\ud558\ubc95](https:\/\/en.wikipedia.org\/wiki\/Gradient_descent)\uc744 \uc0ac\uc6a9\ud574 \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4.","4028844f":"## \ubaa8\ub378 \uc815\uc758","b6858455":"\ub9cc\ub4e4\uc5b4\uc9c4 Keras \ud559\uc2b5 \ubc18\ubcf5\ubb38\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \ub354 \uc54c\uace0 \uc2f6\ub2e4\uba74 [\uc774 \uac00\uc774\ub4dc](https:\/\/www.tensorflow.org\/guide\/keras\/train_and_evaluate)\ub97c \ubcf4\uc138\uc694. \ud559\uc2b5 \ubc18\ubcf5\ubb38\uacfc Keras\uc5d0 \ub300\ud574 \ub354 \uc54c\uace0 \uc2f6\ub2e4\uba74 [\uc774 \uac00\uc774\ub4dc](https:\/\/www.tensorflow.org\/guide\/keras\/writing_a_training_loop_from_scratch)\ub97c \ubcf4\uc138\uc694. \uac1c\uc778\ud654\ub41c \ubd84\uc0b0 \ud559\uc2b5 \ubc18\ubcf5\ubb38\uc744 \uc801\ub294 \ubc29\ubc95\uc740 [\uc774 \uac00\uc774\ub4dc](https:\/\/www.tensorflow.org\/guide\/guide\/distributed_training#using_tfdistributestrategy_with_basic_training_loops_loops)\ub97c \ubcf4\uc138\uc694.","2c810bc5":"\uc774 \uacbd\uc6b0\uc5d0\ub294, \uc9c1\uc811 \uc4f4 \ubc18\ubcf5\ubb38\uacfc \ud589\ub3d9\uc744 \ub9de\ucd94\uae30 \uc704\ud574, `x`\ub97c \ud06c\uae30 1000\uc758 \ub2e8\uc77c \ubb36\uc74c\uc73c\ub85c \uc804\ub2ec\ud574\uc918\uc57c \ud569\ub2c8\ub2e4.","181b6f9d":"Keras\ub294 \ud559\uc2b5 \uc774\uc804\uc774 \uc544\ub2cc \uc774\ud6c4\uc5d0 \uc190\uc2e4\uc744 \ucd9c\ub825\ud558\uae30 \ub54c\ubb38\uc5d0, \uccab \uc190\uc2e4\uc774 \ub0ae\uac8c \ubcf4\uc5ec\uc9c0\uc9c0\ub9cc, \ub2e4\ub978 \uba74\uc5d0\uc11c\ub294 \uadfc\ubcf8\uc801\uc73c\ub85c \uac19\uc740 \ud559\uc2b5 \uc131\ub2a5\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.","049fab03":"\uadf8\ub7ec\ub098, \uc774\uac83\uc740 \uadf9\ub2e8\uc801\uc73c\ub85c \uac04\ub2e8\ud55c \ubb38\uc81c\uc785\ub2c8\ub2e4. \ub354 \uc2e4\uc6a9\uc801\uc778 \uc18c\uac1c\ub97c \uc6d0\ud55c\ub2e4\uba74, [\uac1c\uc778\ud654\ub41c \ud559\uc2b5\uc5d0 \ub300\ud55c \ub2e8\uacc4\uc801\uc778 \uc124\uba85](https:\/\/www.tensorflow.org\/tutorials\/customization\/custom_training_walkthrough)\uc744 \ubcf4\uc138\uc694.","3151a3c2":"\uc9c0\ub3c4 \ud559\uc2b5\uc740 _\uc785\ub825_ (\uc8fc\ub85c _x_ \ub85c \ud45c\uc2dc)\uc640 _\ucd9c\ub825_ (_y_ \ub85c \ud45c\uc2dc, \uc8fc\ub85c _\ub77c\ubca8_ \ub85c \uce6d\ud568)\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubaa9\ud45c\ub294 \uc9dd\uc9c0\uc5b4\uc9c4 \uc785\ub825\uacfc \ucd9c\ub825\uc73c\ub85c\ubd80\ud130 \ud559\uc2b5\ud574\uc11c \uc785\ub825\uc5d0\uc11c \ucd9c\ub825\uc758 \uac12\uc744 \uc608\uce21\ud560 \uc218 \uc788\uac8c \ud558\ub294 \uac83\uc785\ub2c8\ub2e4.","bb3b238f":"\uae30\uacc4 \ud559\uc2b5 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294 \ub370\uc5d0\ub294 \uc8fc\ub85c \ub2e4\uc74c\uacfc \uac19\uc740 \ub2e8\uacc4\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4:\n* \ud559\uc2b5 \ub370\uc774\ud130\ub97c \ubaa8\uc74d\ub2c8\ub2e4.\n* \ubaa8\ub378\uc744 \uc815\uc758\ud569\ub2c8\ub2e4.\n* \uc190\uc2e4 \ud568\uc218\ub97c \uc815\uc758\ud569\ub2c8\ub2e4.\n* \ud559\uc2b5 \ub370\uc774\ud130\ub97c \ud1b5\ud574 \uc2e4\ud589\uc2dc\ud0a4\uba70, \uc774\uc0c1\uc801\uc778 \uac12\uacfc\uc758 \uc190\uc2e4\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.\n* \uadf8 \uc190\uc2e4\uc5d0 \ub300\ud55c \uae30\uc6b8\uae30\ub97c \uacc4\uc0b0\ud558\uace0, \ub370\uc774\ud130\uc5d0 \ub9de\ucd94\uae30 \uc704\ud574 \ubcc0\uc218\ub97c \uc870\uc808\ud558\ub294\ub370\uc5d0 _\ucd5c\uc801\ud654_ \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\n* \uacb0\uacfc\ub97c \ud3c9\uac00\ud569\ub2c8\ub2e4.","09e5d646":"\ubcc0\uc218\uc640 \uacc4\uc0b0\uc744 \ucea1\uc290\ud654\ud558\uae30 \uc704\ud574\uc11c [tf.Module](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Module)\uc744 \uc0ac\uc6a9\ud558\uc138\uc694. \uc544\ubb34 Python \uac1d\uccb4\ub97c \uc0ac\uc6a9\ud574\ub3c4 \ub418\uc9c0\ub9cc, \uc774 \ubc29\ubc95\uc774 \uc27d\uac8c \uc800\uc7a5\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","8516aac0":"\ucd08\uae30 \ubcc0\uc218\ub294 \uc5ec\uae30\uc5d0\uc11c\ub294 \uace0\uc815\ub41c \ubc29\ubc95\uc73c\ub85c \uc124\uc815\ub418\uc5c8\uc9c0\ub9cc, Keras\ub294 Keras\uc758 \ub098\uba38\uc9c0\ub97c \uc0ac\uc6a9\ud558\ub358\uc9c0 \uc548\ud558\ub358\uc9c0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc218\ub9ce\uc740 [\ucd08\uae30\ud654](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/keras\/initializers)\uac00 \ub530\ub77c\uc635\ub2c8\ub2e4.","66c8fb00":"\ubaa8\ub378\uc744 \uc0dd\uc131\ud560 \ub54c\ub9c8\ub2e4 \uc0c8\ub85c\uc6b4 \ud559\uc2b5 \ubc18\ubcf5\ubb38\uc744 \uc801\ub294 \uac83\ubcf4\ub2e4, \uac04\ub2e8\ud558\uac8c Keras\uc758 \uae30\ubcf8 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Python \ud559\uc2b5 \ubc18\ubcf5\ubb38\uc744 \uc801\uac70\ub098 \ub514\ubc84\uae45\ud558\uace0 \uc2f6\uc9c0 \uc54a\uc744 \ub54c \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","4b242b08":"### \ud559\uc2b5 \ubc18\ubcf5\ubb38 \uc815\uc758","30aea8bb":"### \uc190\uc2e4 \ud568\uc218 \uc815\uc758","62b1e5f2":"## \ub370\uc774\ud130","ea6dcee3":"[tf.keras.optimizers](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/keras\/optimizers)\uc5d0 \ubaa8\uc544\uc838 \uc788\ub294 \uae30\uc6b8\uae30 \uac15\ud558\ubc95 \uc804\ub7b5\uc758 \ub9ce\uc740 \ubcc0\ud615\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uccab \uc6d0\ub9ac\ub85c\ubd80\ud130 \ub9cc\ub4e4\uc5b4\ub0b4\ub294 \uc815\uc2e0\uc73c\ub85c, \uc5ec\uae30\uc11c\ub294 \uc790\ub3d9 \ubbf8\ubd84\uc744 \uc704\ud55c [tf.GradientTape](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/GradientTape)\uc640 \uac12\uc744 \uac10\uc18c\uc2dc\ud0a4\uae30 \uc704\ud55c `tf.assign_sub`(`tf.assign`\uacfc `tf.sub`\uc758 \uacb0\ud569\uc785\ub2c8\ub2e4)\uc758 \ub3c4\uc6c0\uc73c\ub85c \uae30\ubcf8\uc801\uc778 \uc218\ud559\uc744 \uc9c1\uc811 \uad6c\ud604\ud560 \uac83\uc785\ub2c8\ub2e4:","92bead48":"## \uc124\uc815","1d4ebf33":"\uc5ec\uae30 \uc120\uc744 \ub530\ub77c \uac00\uc6b0\uc2a4 (Normal) \uc7a1\uc74c\uc744 \ub354\ud574\uc11c \ud569\uc131\ud55c \uc77c\ubd80 \ub370\uc774\ud130\uc785\ub2c8\ub2e4.","abb0992b":"\ud559\uc2b5 \ubc18\ubcf5\ubb38\uc740 \uc138\uac00\uc9c0 \uc77c\uc744 \uc21c\uc11c\ub300\ub85c \ubc18\ubcf5\uc801\uc73c\ub85c \uc218\ud589\ud558\ub294 \uac83\uc73c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4:\n* \ucd9c\ub825\uc744 \uc0dd\uc131\ud558\uae30 \uc704\ud574 \uc785\ub825\uc758 \ubb36\uc74c\uc744 \ubaa8\ub378\uc744 \ud1b5\ud574 \ubcf4\ub0b4\uae30\n* \ucd9c\ub825\uc744 \ucd9c\ub825(\ub610\ub294 \ub77c\ubca8)\uacfc \ube44\uad50\ud558\uc5ec \uc190\uc2e4\uc744 \uacc4\uc0b0\ud558\uae30\n* \uae30\uc6b8\uae30\ub97c \ucc3e\uae30 \uc704\ud574 \uae30\uc6b8\uae30 \ud14c\uc774\ud504\ub97c \uc0ac\uc6a9\ud558\uae30\n* \uc774 \uae30\uc6b8\uae30\ub97c \ud1b5\ud574 \ubcc0\uc218\ub97c \ucd5c\uc801\ud654\ud558\uae30","849b40b9":"\ubcf4\uc5ec\uc8fc\uae30 \uc704\ud55c \ubaa9\uc801\uc73c\ub85c, \uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 \ub450\uac1c\uc758 \ubcc0\uc218, $W$(\uac00\uc911\uce58)\uc640 $b$(\ud3b8\ud5a5)\ub97c \uac00\uc9c0\ub294 \uac04\ub2e8\ud55c \uc120\ud615 \ubaa8\ub378 $f(x) = x * W + b$\ub97c \ub9cc\ub4e4 \uac83\uc785\ub2c8\ub2e4.","f84ec7c4":"\uc5ec\uae30, _w_ \uc640 _b_ \ub97c \ubaa8\ub450 \ubcc0\uc218\ub85c\uc11c \uc815\uc758\ud569\ub2c8\ub2e4.","7ce18f55":"\uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294, \ubaa8\ub378\uc744 \ub9cc\ub4e4\uace0 \ud559\uc2b5\uc2dc\ud0a4\uae30 \uc704\ud574 \ud150\uc11c, \ubcc0\uc218, \ubaa8\ub4c8, \uadf8\ub9ac\uace0 \uae30\uc6b8\uae30 \ud14c\uc774\ud504\uc758 \ud575\uc2ec \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc558\uace0, \ub354 \ub098\uc544\uac00 \uc774 \uac1c\ub150\uc744 Keras\ub85c \uc62e\uae30\ub294 \ubc29\ubc95\uc744 \ubcf4\uc558\uc2b5\ub2c8\ub2e4.","931b7b63":"\uc774\uc804 \uac00\uc774\ub4dc\uc5d0\uc11c, [\ud150\uc11c](https:\/\/www.tensorflow.org\/guide\/tensor), [\ubcc0\uc218](https:\/\/www.tensorflow.org\/guide\/variable), [\uae30\uc6b8\uae30 \ud14c\uc774\ud504](https:\/\/www.tensorflow.org\/guide\/autodiff), \uadf8\ub9ac\uace0 [\ubaa8\ub4c8](https:\/\/www.tensorflow.org\/guide\/intro_to_modules)\uc5d0 \ub300\ud574\uc11c \ubc30\uc6e0\uc2b5\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294, \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0a4\uae30 \uc704\ud574 \uc774 \ubaa8\ub4e0 \uac83\uc744 \ub9de\ucd9c \uac83\uc785\ub2c8\ub2e4.","edd50a6c":"\uc774\uac83\uc740 \uae30\uacc4 \ud559\uc2b5 \ubb38\uc81c\ub4e4\uc758 \uac00\uc7a5 \uae30\ubcf8\uc785\ub2c8\ub2e4: \uc8fc\uc5b4\uc9c4 $x$\uc640 $y$\uc5d0 \ub300\ud574, [\uac04\ub2e8\ud55c \uc120\ud615 \ud68c\uadc0](https:\/\/en.wikipedia.org\/wiki\/Linear_regression#Simple_and_multiple_linear_regression)\ub97c \ud1b5\ud574 \uc120\uc758 \uae30\uc6b8\uae30\uc640 \uc2dc\ucd08\ub97c \ucc3e\uae30 \uc704\ud574 \ub178\ub825\ud569\ub2c8\ub2e4.","4f722e1d":"Keras `fit`\ub294 NumPy \ubc30\uc5f4\ub85c\uc368 \ubb36\uc5b4\uc9c4 \ub370\uc774\ud130\ub098 \uc644\uc804\ud55c \ub370\uc774\ud130 \uc138\ud2b8\ub97c \uae30\ub300\ud569\ub2c8\ub2e4. NumPy \ubc30\uc5f4\uc740 \ubb36\uc74c\uc73c\ub85c \ud1a0\ub9c9\ub0b4\uc9c0\uace0 \uae30\ubcf8 \ubb36\uc74c \ud06c\uae30\ub294 32\uc785\ub2c8\ub2e4.","d7f2871a":"\ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0a4\uae30 \uc804\uc5d0, \ubaa8\ub378\uc758 \uc608\uce21\uc744 \ube68\uac04\uc0c9\uc73c\ub85c \ud45c\uc2dc\ud558\uace0 \ud559\uc2b5 \ub370\uc774\ud130\ub97c \ud30c\ub780\uc0c9\uc73c\ub85c \ud45c\uc2dc\ud558\uc5ec \uc190\uc2e4\uac12\uc744 \uc2dc\uac01\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:","e29f0b3e":"\ubaa8\ub378\uc5d0\uc11c \ubaa8\ub4e0 \uac00\uc911\uce58\ub97c \ub098\ud0c0\ub0b4\uae30 \uc704\ud574 [tf.Variable](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Variable)\ub97c \uc0ac\uc6a9\ud558\uc138\uc694. [tf.Variable](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Variable)\uc740 \ud544\uc694\ud55c \ub300\ub85c \uac12\uc744 \uc800\uc7a5\ud558\uace0 \ud150\uc11c\uc758 \ud615\ud0dc\ub85c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 [\ubcc0\uc218 \uac00\uc774\ub4dc](https:\/\/www.tensorflow.org\/guide\/variable)\ub97c \ubcf4\uc138\uc694.","d226a72f":"\uc704\uc758 \ucf54\ub4dc\ub97c Keras\uc5d0\uc11c \ub300\uc751\ub418\ub294 \uac83\uacfc \ub300\uc870\ud558\ub294 \uac83\uc740 \uc720\uc6a9\ud569\ub2c8\ub2e4.","622aa59d":"## \uae30\uacc4 \ud559\uc2b5 \ubb38\uc81c \ud574\uacb0","f9a67d6f":"## \ub2e4\uc74c \ub2e8\uacc4","baab689a":"TensorFlow\ub294 \uc0c1\ud22c\uc5b4\ub97c \uad74\uc774\uae30 \uc704\ud55c \uc720\uc6a9\ud55c \ucd94\uc0c1\ud654\ub97c \uc81c\uacf5\ud558\ub294 \uace0\uc218\uc900 \uc2e0\uacbd\ub9dd API\uc778 [tf.Keras API](https:\/\/www.tensorflow.org\/guide\/keras\/overview) \ub610\ud55c \ud3ec\ud568\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294, \uae30\ubcf8 \ud074\ub798\uc2a4\ub4e4\ub9cc \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4.","e5740432":"\ud150\uc11c\ub294 \uc8fc\ub85c _\ubb36\uc74c_ \uc774\ub098 \uac19\uc774 \uc313\uc5ec\uc788\ub294 \uc785\ub825\uacfc \ucd9c\ub825\uc758 \ubb34\ub9ac\ub85c \ubaa8\uc544\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ubb36\ub294 \uac83\uc740 \ud559\uc2b5\uc5d0\uc11c\uc758 \uba87\uac1c\uc758 \uc774\uc810\uc744 \uc904 \uc218 \uc788\uace0 \uac00\uc18d\uae30\uc640 \ubca1\ud130\ud654\ub41c \uacc4\uc0b0\ub4e4\uacfc \uc798 \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc774 \ub370\uc774\ud130 \uc138\ud2b8\uac00 \uc5bc\ub9c8\ub098 \uc791\uac8c \uc8fc\uc5b4\uc84c\ub294\uc9c0\uc5d0 \ub300\ud574\uc11c \uc804\uccb4 \ub370\uc774\ud130 \uc138\ud2b8\ub97c \ud558\ub098\uc758 \ubb36\uc74c\uc73c\ub85c \uc5ec\uae38 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4."}}