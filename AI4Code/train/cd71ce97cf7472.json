{"cell_type":{"b2664b7d":"code","f93ec3c1":"code","1f2710ea":"code","c843140e":"code","3b292d0a":"code","1cf04d88":"code","8b5078e3":"code","0ad08114":"code","828cb1c0":"code","7ad240b8":"code","8102a99f":"code","73ecba39":"code","17e6d2ee":"code","e7d21fb8":"markdown","b99415b6":"markdown","dbc6fd60":"markdown","20ab001c":"markdown","f8d9eb3c":"markdown","5cd4f0e5":"markdown","896a5215":"markdown","535632ea":"markdown","3e5d36bf":"markdown","e8ffba9e":"markdown","32a0dd91":"markdown","e66f3e02":"markdown","e806d813":"markdown","6dc01aec":"markdown","307875a9":"markdown","77ef3c62":"markdown","fb2ac588":"markdown","8c54acbe":"markdown","e1f36610":"markdown","8aa7d235":"markdown"},"source":{"b2664b7d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport matplotlib\nfrom matplotlib import cm\nimport seaborn as sns\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)    #THIS LINE IS MOST IMPORTANT AS THIS WILL DISPLAY PLOT ON \n#NOTEBOOK WHILE KERNEL IS RUNNING\nimport plotly.graph_objects as go\n\nfrom IPython.display import HTML,display\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f93ec3c1":"murder = pd.read_csv(\"..\/input\/crime-in-india\/32_Murder_victim_age_sex.csv\")\nmurder.Year.unique()\nmurder.Area_Name.unique()\nmurder.Sub_Group_Name.unique()\nmurder.head(10)\n","1f2710ea":"from IPython.core.display import HTML\nHTML('''<div class=\"flourish-embed flourish-bar-chart-race\" data-src=\"visualisation\/2693755\" data-url=\"https:\/\/flo.uri.sh\/visualisation\/2693755\/embed\"><script src=\"https:\/\/public.flourish.studio\/resources\/embed.js\"><\/script><\/div>''')","c843140e":"\n\nmurdert = murder[murder['Sub_Group_Name']== '3. Total']  #keeping only total category of subgroup\nmurdery = murdert.groupby(['Year'])['Victims_Total'].sum().reset_index() #grouping\nsns.set_context(\"talk\")\nplt.style.use(\"fivethirtyeight\")\nplt.figure(figsize = (14,10))\n#sns.palplot(sns.color_palette(\"hls\", 8))\nax = sns.barplot(x = 'Year' , y = 'Victims_Total' , data = murdery ,palette= 'dark') #plotting bar graph\nplt.title(\"Total Victims of Murder per Year\")\nax.set_ylabel('')\nfor p in ax.patches:\n             ax.annotate(\"%.f\" % p.get_height(), (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                 ha='center', va='center', fontsize=15, color='black', xytext=(0, 8),\n                 textcoords='offset points')","3b292d0a":"murderg = murder.groupby(['Year' , 'Sub_Group_Name'])['Victims_Total'].sum().reset_index() # grouping with year and sub group\nmurderg = murderg[murderg['Sub_Group_Name']!= '3. Total']   # we dont need total category of sub group\n\nplt.style.use(\"fivethirtyeight\")\nplt.figure(figsize = (14,10))\nax = sns.barplot( x = 'Year', y = 'Victims_Total' , hue = 'Sub_Group_Name' , data = murderg ,palette= 'bright') #plotting barplot\nplt.title('Gender Distribution of Victims per Year',size = 20)\nax.set_ylabel('')","1cf04d88":"murdera = murder.groupby(['Year'])['Victims_Upto_10_15_Yrs','Victims_Above_50_Yrs',\n                                   'Victims_Upto_10_Yrs', 'Victims_Upto_15_18_Yrs',\n                                   'Victims_Upto_18_30_Yrs','Victims_Upto_30_50_Yrs',].sum().reset_index()  #grouby year and age group\nmurdera = murdera.melt('Year', var_name='AgeGroup',  value_name='vals') #melting the dataset\n\nplt.style.use(\"fivethirtyeight\")\nplt.figure(figsize = (14,10))\nax = sns.barplot(x = 'Year' , y = 'vals',hue = 'AgeGroup' ,data = murdera ,palette= 'bright') #plotting a bar\nplt.title('Age Distribution of Victims per Year',size = 20)\nax.get_legend().set_bbox_to_anchor((1, 1)) #anchoring the labels so that they dont show up on the graph\nax.set_ylabel('')\n","8b5078e3":"murderag = murder.groupby(['Sub_Group_Name'])['Victims_Upto_10_15_Yrs',\n                                              'Victims_Above_50_Yrs', 'Victims_Upto_10_Yrs',\n                                              'Victims_Upto_15_18_Yrs','Victims_Upto_18_30_Yrs',\n                                              'Victims_Upto_30_50_Yrs',].sum().reset_index()       #grouping with the gender and age groups\n\nmurderag = murderag.melt('Sub_Group_Name', var_name='AgeGroup',  value_name='vals')  #melting the dataset for drawing the desired plot\nmurderag= murderag[murderag['Sub_Group_Name']!= '3. Total']\n\nplt.style.use(\"fivethirtyeight\")\nplt.figure(figsize = (14,10))\nax = sns.barplot(x = 'Sub_Group_Name' , y = 'vals',hue = 'AgeGroup' ,data = murderag,palette= 'colorblind') #making barplot taking Agegroup as hue\/category \nplt.title('Age & Gender Distribution of Victims',size = 20)\nax.get_legend().set_bbox_to_anchor((1, 1)) #using anchor so that legend doesnt show on the graph\nax.set_ylabel('')\nax.set_xlabel('Victims Gender')\nfor p in ax.patches:\n             ax.annotate(\"%.f\" % p.get_height(), (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                 ha='center', va='center', fontsize=15, color='black', xytext=(0, 8),\n                 textcoords='offset points')","0ad08114":"murderst = murder[murder['Sub_Group_Name']== '3. Total']   #we need only total number of victims per state\nmurderst= murderst.groupby(['Area_Name'])['Victims_Total'].sum().sort_values(ascending = False).reset_index()\nnew_row = {'Area_Name':'Telangana', 'Victims_Total':27481}\nmurderst = murderst.append(new_row , ignore_index=True )\nmurderst.sort_values('Area_Name')\nimport geopandas as gpd\ngdf = gpd.read_file('..\/input\/india-states\/Igismap\/Indian_States.shp')\nmurderst.at[17, 'Area_Name'] = 'NCT of Delhi'\nmerged = gdf.merge(murderst, left_on='st_nm', right_on='Area_Name')\nmerged.drop(['Area_Name'], axis=1)\n#merged.describe()\n","828cb1c0":"\nmerged['coords'] = merged['geometry'].apply(lambda x: x.representative_point().coords[:])\nmerged['coords'] = [coords[0] for coords in merged['coords']]\n\n\nsns.set_context(\"talk\")\nsns.set_style(\"dark\")\n#plt.style.use('dark_background')\ncmap = 'YlGn'\nfigsize = (25, 20)\n\nax = merged.dropna().plot(column= 'Victims_Total', cmap=cmap, figsize=figsize, scheme='equal_interval',edgecolor='black')\n\n\nfor idx, row in merged.iterrows():\n   ax.text(row.coords[0], row.coords[1], s=row['Victims_Total'], horizontalalignment='center', bbox={'facecolor': 'skyblue', 'alpha':0.8, 'pad': 2, 'edgecolor':'yellow'})\n\n\nax.set_title(\"Murders Per State\", size = 25)\n\nnorm = matplotlib.colors.Normalize(vmin=merged['Victims_Total'].min(), vmax= merged['Victims_Total'].max())\nn_cmap = cm.ScalarMappable(norm=norm, cmap= cmap)\nn_cmap.set_array([])\nax.get_figure().colorbar(n_cmap)\nax.set_axis_off()\nplt.axis('equal')\nplt.show()","7ad240b8":"murders = murder[murder['Sub_Group_Name']== '3. Total']   #we need only total number of victims per state\nmurders= murders.groupby(['Area_Name'])['Victims_Total'].sum().sort_values(ascending = False).reset_index()\n \nmurdersbad = murders.head(15) #top highest states\nmurdersgood = murders.tail(15) #top lowest states\/ut\n\n#sns.set_context(\"talk\")\nsns.set_style(\"darkgrid\")\nplt.style.use(\"fivethirtyeight\")\n\nf , axes = plt.subplots(2,1, figsize = (15,14))\nax = sns.barplot(x = 'Victims_Total' , y = 'Area_Name' , data = murdersbad, ax = axes[0],palette= 'bright') #barplot for highest numbers of victims per state\naxes[0].set_title(\"15 states  with Highest number of Victims\", size = 20)\naxes[0].set_ylabel('')\naxes[0].set_xlabel('No. of Victims')\nax1 = sns.barplot(x = 'Victims_Total' , y = 'Area_Name' , data = murdersgood, ax = axes[1],palette= 'dark' )#barplot for lowest numbers of victims per state\naxes[1].set_title(\"15 states and UT with lowest number of Victims\", size = 20)\naxes[1].set_ylabel('')\naxes[1].set_xlabel('No. of Victims')\nplt.tight_layout()  #tight layout so that subplots look fitted\nplt.subplots_adjust(hspace= .3) #adjusting the space between the plots\n#murders.to_csv('murder.csv',index=False)\nfor p in ax.patches:\n        ax.annotate(\"%.f\" % p.get_width(), xy=(p.get_width(), p.get_y()+p.get_height()\/2),\n            xytext=(5, 0), textcoords='offset points', ha=\"left\", va=\"center\")\n\nfor p in ax1.patches:\n        ax1.annotate(\"%.f\" % p.get_width(), xy=(p.get_width(), p.get_y()+p.get_height()\/2),\n            xytext=(5, 0), textcoords='offset points', ha=\"left\", va=\"center\")\n","8102a99f":"murdergs = murder.groupby(['Area_Name' , 'Sub_Group_Name'])['Victims_Total'].sum().sort_values(ascending = False).reset_index() #groupby state and gender\nmurdergs = murdergs[murdergs['Sub_Group_Name']!= '3. Total'] #we dont need total category of gender\nplt.figure(figsize = (14,15))\nplt.style.use(\"fivethirtyeight\")\nsns.barplot( x = 'Victims_Total', y = 'Area_Name' , hue = 'Sub_Group_Name' , data = murdergs,palette= 'bright') #barplot\nplt.title('Gender Distribution of Victims per State',size = 20)","73ecba39":"murdernt = murder[murder['Sub_Group_Name']== '3. Total']\nmurdersa = murdernt.groupby(['Area_Name'])['Victims_Upto_10_15_Yrs','Victims_Above_50_Yrs', \n                                           'Victims_Upto_10_Yrs', 'Victims_Upto_15_18_Yrs',\n                                           'Victims_Upto_18_30_Yrs','Victims_Upto_30_50_Yrs',].sum().reset_index() #grouping with state and age group\nmurdersa = murdersa.melt('Area_Name', var_name='AgeGroup',  value_name='vals') #melting the dataset\n\nsns.set_style(\"darkgrid\")\nsns.set_context(\"talk\")\nplt.style.use(\"fivethirtyeight\")\n\n\nf, axes = plt.subplots(3,2, figsize = (30,30))\nplt.figure(figsize = (14,15))\nsns.barplot(x = 'vals', y = 'Area_Name', data = murdersa[murdersa['AgeGroup']== 'Victims_Upto_10_Yrs'].sort_values(by=['vals'],ascending = False).head(10),ax = axes[0,0],palette= 'dark')\naxes[0,0].set_title(' Age 0 - 10', size = 20)\naxes[0,0].set_ylabel('')\naxes[0,0].set_xlabel('No.of Victims')\n\nsns.barplot(x = 'vals', y = 'Area_Name', data = murdersa[murdersa['AgeGroup']== 'Victims_Upto_10_15_Yrs'].sort_values(by=['vals'],ascending = False).head(10), ax = axes[0,1],palette= 'bright' )\naxes[0,1].set_title(' Age 10 - 15', size = 20)\naxes[0,1].set_ylabel('')\naxes[0,1].set_xlabel('No.of Victims')    \n\n\nsns.barplot(x = 'vals', y = 'Area_Name', data = murdersa[murdersa['AgeGroup']== 'Victims_Upto_15_18_Yrs'].sort_values(by=['vals'],ascending = False).head(10),ax = axes[1,0],palette= 'dark')\naxes[1,0].set_title(' Age 15 - 18', size = 20)\naxes[1,0].set_ylabel('')\naxes[1,0].set_xlabel('No.of Victims')  \n\nsns.barplot(x = 'vals', y = 'Area_Name', data = murdersa[murdersa['AgeGroup']== 'Victims_Upto_18_30_Yrs'].sort_values(by=['vals'],ascending = False).head(10), ax = axes[1,1],palette= 'bright' )\naxes[1,1].set_title(' Age 18 - 30', size = 20)\naxes[1,1].set_ylabel('')\naxes[1,1].set_xlabel('No.of Victims')  \n\nsns.barplot(x = 'vals', y = 'Area_Name', data = murdersa[murdersa['AgeGroup']== 'Victims_Upto_30_50_Yrs'].sort_values(by=['vals'],ascending = False).head(10), ax = axes[2,0],palette= 'dark')\naxes[2,0].set_title(' Age 30 - 50', size = 20)\naxes[2,0].set_ylabel('')\naxes[2,0].set_xlabel('No.of Victims')  \n\nsns.barplot(x = 'vals', y = 'Area_Name', data = murdersa[murdersa['AgeGroup']== 'Victims_Above_50_Yrs'].sort_values(by=['vals'],ascending = False).head(10),ax = axes[2,1],palette= 'bright')\naxes[2,1].set_title(' Age 50 +', size = 20)\naxes[2,1].set_ylabel('')\naxes[2,1].set_xlabel('No.of Victims')  \nplt.tight_layout()\n#plt.subplots_adjust(hspace= .0001)","17e6d2ee":"\n#murderbr = murdert.groupby(['Year', 'Area_Name'])['Victims_Total'].sum().reset_index()\n#murderbr = murderbr.pivot(index='Area_Name', columns='Year', values='Victims_Total').reset_index()\n#murderbr.dropna()\n#murderbr.to_csv('out.csv', index=False)\n","e7d21fb8":"Statewise Distribution of victims according to their age","b99415b6":"![andy-li-7WHr0xmGiBA-unsplash.jpg](attachment:andy-li-7WHr0xmGiBA-unsplash.jpg)","dbc6fd60":"**Inference**: With almost 60000  murders Uttarpradesh has highest victims of murder. Bihar has second highest number of victims which has less than 25000 victims than Uttarpradesh. Interestingly Uttarpradesh  has the highest population in the country. Bihar has less population than maharashtra still it has higher number of victims than Maharashtra.\n\nUnion Territory Lakshadweep has lowest number of Murder Victims. Factors like population of the state and **Population density** might be responsible for the number of murder victims in the state.","20ab001c":"# Murders: Statewise","f8d9eb3c":"**Inference** : We can see that the no. of victims is gradually decresing over the years.","5cd4f0e5":"**Inference** : Uttarpradesh has the highest number of murder victims in all age group except age group 0 - 10 , Surprisingly Maharashtra has the highest child victims  and Gujrat ranks second in case of child victims. Assam is the only north eastern state which comes under these graphs. ","896a5215":"Inference: Males are more prone to be murder victim as compared to women . Over the years the number of male victims has decreased but the number of female victims is almost same as the previous years.","535632ea":"# **Introduction**\n\nMurder is the top most category of crime in India. Currently India's homicide rate is 3.08 per 100,000 population. The objective of this notebook is to see the trend of murder victims  over the years as well as murder victims per state. first lets see the data.","3e5d36bf":"Although country level murder rate is decreasing slowly over the years. State like Uttarpradesh , Bihar , Mahrashtra , West Bengal has the high number of victims over the years. The male age group of 18-30 is most unsafe. So if you belong to this age group Be Safe.","e8ffba9e":"Gender of the victims","32a0dd91":"**Inference**: Compared to people of other ages the age group 18 - 30 years is more prone to be victim of the murder. The rise in 2002 numbers is **maybe** due to the riots of gujrat . Another age group which is most likely to be victim of murder is 30 - 50. Compared to these two groups other age groups are very small in number. From all the groups children are most likely to be safe.","e66f3e02":"This dataset contains Victim's information from year 2001 to 2010 and 35 states & Union territories. The age group is divided into 6 categories.\n* less than 10 year old victims\n* 10-15 year old victims\n* 15-18 year old victims\n* 18-30 year old victims\n* 30-50 year old victims\n* 50 + older victims","e806d813":"# Age & Gender of the victim","6dc01aec":"Gender Distribution of victims per state","307875a9":"Running Bar Chart","77ef3c62":"Inference: Males of age 18-30 are more likely to be get killed as compared to the any of the age-gender group. After them male of 30-50 are prone to be victim of murder. Similar to male age groups females of age 18-30 are more likely to be get killed . ","fb2ac588":"**Age of the victim**","8c54acbe":"**Inference** : Similar to above results males are more likely to be get murdered as compared to females. Interesting thing to notice in this graph is Mahrashtra has second highest female victims.","e1f36610":"# **Conclusion**","8aa7d235":"# Murder Victims Per Year"}}