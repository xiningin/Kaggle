{"cell_type":{"39d9ee47":"code","f4abe84a":"code","5c6330b0":"code","b30ff34e":"code","7f9017f2":"code","9ae6d322":"code","27bdbaca":"code","a996cb5f":"code","7cbc6a3e":"code","c1903b74":"code","747f9915":"code","79dd7275":"code","b0228263":"code","d2cc29f3":"code","423aacfa":"code","b8052532":"code","855071b0":"code","15f1e3ca":"code","7caed0c8":"markdown","81254c5b":"markdown","9f19da01":"markdown","3eb32601":"markdown","9c9af093":"markdown","4926119f":"markdown","2d131a9a":"markdown","34060ab4":"markdown","beed3a3e":"markdown","27a33609":"markdown","e60bde09":"markdown","db4dabb0":"markdown","0dfd00b2":"markdown","212dcb81":"markdown","3015ff53":"markdown","a181b401":"markdown","cbb40a5d":"markdown"},"source":{"39d9ee47":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f4abe84a":"import plotly.graph_objects as go\nimport matplotlib.pyplot as plt\nimport folium","5c6330b0":"# 'covid_19_india.csv' contains cured, deaths and confirmed cases on a day-to-day basis.\ncases = pd.read_csv(\"\/kaggle\/input\/covid19-in-india\/covid_19_india.csv\")\ncases.head()\n\n# It contains latitude and longitude coordinates of indian states.\nlat_long = pd.read_csv(\"\/kaggle\/input\/lat-lon-indian-states\/datasets_652259_1374178_Total_India_covid-19.csv\")\nlat_long.head()\n\n# It can provide us the ratio or rate or percentage of positive cases per population statewise.\npopul = pd.read_csv(\"\/kaggle\/input\/covid19-in-india\/population_india_census2011.csv\")\npopul","b30ff34e":"# No null value or no null record is found.\ncases.info()","7f9017f2":"cases['State\/UnionTerritory'].unique()","9ae6d322":"cases['State\/UnionTerritory'].replace({\"Telengana\" : \"Telangana\", \"Telengana***\" : \"Telangana\",\n                                        \"Telangana***\" : \"Telangana\"}, inplace = True)\n\ncases['State\/UnionTerritory'].replace({\"Daman & Diu\" : \"Dadra and Nagar Haveli and Daman and Diu\",\n                                          \"Dadar Nagar Haveli\" : \"Dadra and Nagar Haveli and Daman and Diu\"},\n                                         inplace = True)\ncases = cases[(cases['State\/UnionTerritory'] != 'Unassigned') &\n                    (cases['State\/UnionTerritory'] != 'Cases being reassigned to states')]\ncases['State\/UnionTerritory'].unique()","27bdbaca":"popul.rename(columns={'State \/ Union Territory':'State\/UnionTerritory'}, inplace=True)\npopul['State\/UnionTerritory'].replace({\"Telengana\" : \"Telangana\"})","a996cb5f":"cases.Date = pd.to_datetime(cases.Date, dayfirst=True)\n\ncases.drop(['Sno', 'Time', 'ConfirmedIndianNational', 'ConfirmedForeignNational'], axis = 1, inplace=True)\ncases.head()","7cbc6a3e":"print(\"Starting date : \", min(cases.Date.values))\nprint(\"Ending date : \", max(cases.Date.values))","c1903b74":"daily_cases = cases.groupby('Date').sum().reset_index()\ndaily_cases['Active'] = 1\n\nfor val in daily_cases.index:\n    if val != 0:\n        daily_cases['Active'].loc[val] = daily_cases['Confirmed'].loc[val] - daily_cases['Cured'].loc[val-1] - daily_cases['Deaths'].loc[val-1]\n    \ndaily_cases","747f9915":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = daily_cases.Date, y = daily_cases.Confirmed, name = 'Confirmed'))\nfig.add_trace(go.Scatter(x = daily_cases.Date, y = daily_cases.Cured, name = 'Cured'))\nfig.add_trace(go.Scatter(x = daily_cases.Date, y = daily_cases.Deaths, name = 'Deaths'))\nfig.add_trace(go.Scatter(x = daily_cases.Date, y = daily_cases.Active, name = 'Active Cases'))\n\nfig.update_layout(title = 'CORONA VIRUS CASES IN INDIA', yaxis_title = 'Cases Count (in lakhs)')\n\nfig.show()","79dd7275":"country_cases = cases[cases.Date == max(cases.Date)]\nprint(country_cases.shape)\ncountry_cases.head()","b0228263":"lat_long.rename(columns={\"State\":\"State\/UnionTerritory\"}, inplace=True)\nlat_long = lat_long[['State\/UnionTerritory', 'Latitude', 'Longitude']]\ncountry_cases = pd.merge(country_cases, lat_long, on='State\/UnionTerritory')\ncountry_cases.head()","d2cc29f3":"# Make an empty map\nm = folium.Map(location=[28,77], zoom_start=4)\ncountry_cases['Confirmed'] = country_cases['Confirmed'].astype(float)\n\n# I can add marker one by one on the map\nfor i in range(0,len(country_cases)):\n    folium.Circle(location = [country_cases.iloc[i]['Latitude'], country_cases.iloc[i]['Longitude']],\n                popup = [country_cases.iloc[i]['State\/UnionTerritory'],country_cases.iloc[i]['Confirmed']],\n                radius = country_cases.iloc[i]['Confirmed']\/2,\n                color = 'crimson', fill = True, fill_color='crimson').add_to(m)\n    \nm","423aacfa":"# We're saving it for further use\ntotal_pop = popul['Population'].sum()\nprint(\"The total population of India is : \", total_pop)\n\npopul = cases.merge(popul[['State\/UnionTerritory', 'Population']])\npopul['ConfirmPerc'] = 0\npopul['ConfirmPerc'] = (popul['Confirmed']\/popul['Population'])*100","b8052532":"fig = go.Figure()\nfor st in popul['State\/UnionTerritory'].unique():\n    df = popul[popul['State\/UnionTerritory'] == st]\n    fig.add_trace(go.Scatter(x = df.Date, y = df.ConfirmPerc, name = st))\n    \nfig.update_layout(title = 'Positive Cases Percentage Per Population', yaxis_title = 'Percentage (%)')\nfig.show()","855071b0":"# Here, we're grouping the data by date bcoz we want to visualize the data on per basis\npopul_dates = popul.drop('ConfirmPerc', axis=1).groupby('Date').sum()\n\n# In this, population should be same, as we're talking about the positive percentage per population\npopul_dates['Population'] = total_pop\n\n# Calculating total percentage of positive cases\npopul_dates['TotConfirmPerc'] = (popul_dates['Confirmed']\/popul_dates['Population'])*100\npopul_dates","15f1e3ca":"fig = go.Figure()\nfig.add_trace(go.Scatter(x = popul_dates.index, y = popul_dates.TotConfirmPerc))\nfig.update_layout(title = 'Percentage of positive cases across India', yaxis_title = 'Percentage (%)')\nfig.show()","7caed0c8":"# Reading required data for further analysis","81254c5b":"# Checking whether the data contains any null values","9f19da01":"# Visualization of Confirmed cases on Indian map using Folium","3eb32601":"# Visualizing the increase in percentage","9c9af093":"This '**lat_long**' dataframe contains the latitude & longitude coordinates which we use to locate the states on the map so to properly visualize the number of cases a state have till the date.","4926119f":"# Calculating total active cases per day across India","2d131a9a":"# Analyzing the data & calculating positive percentage on a day-to-day basis","34060ab4":"If you want to know how to flatten the curve or wanted to get the idea of capacity of patients a state can have look at my another notebook where I've described the hospitals capacity of sustaining patients and how many more beds it needed to have. \n**Link:-** https:\/\/www.kaggle.com\/ayushirastogi15\/covid-19-flattening-the-curve\n\nIf you want to look at the interactive & interesting visualization of how the corona virus cases increases in each state then take a look at my another notebook which shows you the interesting bar-chart race of Indian states. \n**Link:-** https:\/\/www.kaggle.com\/ayushirastogi15\/covid-19-india-bar-chart-race\n\nYou can also look at the analysis & interesting visualizations of corona-virus cases all over the world. How the confirmed cases increasing, death cases increasing & the recovery rate as well. The link for the notebook is given below.\n**Link:-** https:\/\/www.kaggle.com\/ayushirastogi15\/covid-19\n\n*If you found anything wrong, do let me know. I'll be happy to get any kind of feed back.\nThanks in advance for the whole data science kaggle community.*","beed3a3e":"# Calculating how much percentage of population gets infected till the date","27a33609":"# Analyzing total cases uptill now \nConsidering the total cases uptill now on a day-to-day basis to further visualize the increase in cases.","e60bde09":"# Visualizing how different states have increament in positive cases by considering the percentage","db4dabb0":"# Renaming state names that've different names for same state\nSince the given .csv file has different names for same state like \"Telangana\" -> \"Telangana***\" or \"Telengana\". So, replacing the name as \"Telangana\" only. We have entries in state names like \"Unassigned\" or \"Cases being reassigned to states\" so, for now we are going to ignore them and removing those rows from the data.","0dfd00b2":"# Visualization of Cured, Death, Confirmed & Active Cases by Date \nThe following graph shows us how the cases are increasing day by day.","212dcb81":"# Getting the time-period of given data","3015ff53":"# Changing dates into datetime & removing unnecessary columns","a181b401":"# Importing required libraries","cbb40a5d":"# Exploring COVID-19 data and analyzing various factors"}}