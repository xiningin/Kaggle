{"cell_type":{"8687e21e":"code","1bd13f7b":"code","6b66c776":"code","df1b5f09":"code","0ac21b66":"code","e8f49a2a":"code","3d7291d6":"code","50f096db":"code","493fdc58":"code","c536e5a5":"code","473e7f86":"code","1938e5f4":"code","0cb442b5":"code","cb17a70c":"code","fbcebe76":"code","94360d2a":"code","d6c2de25":"code","c8c0a400":"code","be052f98":"code","cadf3f1b":"code","9aba3080":"code","fa8a20db":"code","80302083":"code","3edf4b05":"code","0915c317":"code","f36b044f":"code","c5020aa7":"code","44123cf1":"code","5215f06d":"code","32f92437":"code","be3111e1":"code","f69bc4e1":"code","480781fb":"code","62c2c9f2":"code","92ecfe84":"code","fd53991c":"code","4e997a47":"code","02f88a8d":"code","0199a049":"code","19b10cfe":"code","944d5dbb":"code","9f88aae5":"code","e66c25e9":"code","61e5cf1b":"code","3560dae5":"code","062ecf8b":"code","cfc95750":"code","2c34a473":"code","972ca22e":"code","263006b0":"code","bc78330b":"code","77829bfd":"code","489f8b00":"code","48f2c938":"code","5e5df449":"code","9803c1ed":"code","62faf7e0":"markdown","9c4cbe75":"markdown","44603e71":"markdown","b0e73ad9":"markdown","5a7e5cd5":"markdown","146b4239":"markdown","199848d2":"markdown","38f84a17":"markdown","326fa136":"markdown","271d4401":"markdown","6d6e3a7a":"markdown","fefe4f6e":"markdown","13bddcc3":"markdown","f515c9d1":"markdown","212be2ba":"markdown","5d190333":"markdown","48c55e3f":"markdown","9c2845c7":"markdown","1a1c7f31":"markdown","12420c1c":"markdown","236588a6":"markdown","e3d69a09":"markdown","b731c062":"markdown","6f634d1c":"markdown","91db724c":"markdown","7cab8a6f":"markdown","d26aa7c1":"markdown","b9d16620":"markdown","8940cbb5":"markdown","be04a7ce":"markdown","2e083800":"markdown","046b5c92":"markdown","fcbc9f68":"markdown","d5f85d90":"markdown","cddd26fa":"markdown","1c1d4c7e":"markdown","d23533b6":"markdown","667d323e":"markdown","91446243":"markdown","32462735":"markdown","a5c345c6":"markdown","547a2f22":"markdown","22d19c4f":"markdown","248060c8":"markdown","7ce567ee":"markdown","2ce4a808":"markdown","16408a59":"markdown","80689a4a":"markdown","03cfec4a":"markdown","69489bf8":"markdown","89e1fe52":"markdown","f79d3a19":"markdown","a43af4b0":"markdown","4169464f":"markdown","ba97c5ca":"markdown","99a48bb7":"markdown","461650b0":"markdown","f5682097":"markdown","e7b189a3":"markdown","b712efba":"markdown","f227af93":"markdown","0f15e48f":"markdown","dc9055d7":"markdown"},"source":{"8687e21e":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport math\n\nplt.rcParams['figure.figsize'] = [10, 10]\nplt.rcParams.update({'font.size': 16})","1bd13f7b":"movies = pd.read_csv('..\/input\/movies\/movies.csv')","6b66c776":"new_column_names = []\n\nfor col in movies.columns:\n    new_column_names.append('_'.join(col.split()))\n\nmovies.columns = new_column_names","df1b5f09":"movies.describe()","0ac21b66":"movies.replace('Unknown',np.nan, inplace=True)","e8f49a2a":"movies.isnull().sum()","3d7291d6":"movies.dropna(subset=['IMDB_Rating', 'IMDB_Votes', 'US_Gross', 'Worldwide_Gross'], inplace=True)","50f096db":"print('We have dropped {:.2f}% of the total datapoints.'.format((3201 - movies.shape[0]) *100 \/ 3201))","493fdc58":"movies['US_Gross'] = pd.to_numeric(movies['US_Gross'])\nmovies['Worldwide_Gross'] = pd.to_numeric(movies['Worldwide_Gross'])\nmovies['IMDB_Votes'] = pd.to_numeric(movies['IMDB_Votes'])","c536e5a5":"sns.distplot(movies['Worldwide_Gross']\/10**6, bins=100)\nplt.xlabel('Worldwide Gross in million U.S. Dollars', fontsize=16);","473e7f86":"sns.distplot(movies['IMDB_Rating'], bins=100)\nplt.xlabel('IMDB Rating', fontsize=16);","1938e5f4":"sns.distplot(movies['IMDB_Votes']\/10**3, bins=100)\nplt.xlabel('Thousands of IMDB Votes', fontsize = 16);","0cb442b5":"sns.distplot(movies['Rotten_Tomatoes_Rating'], bins=100)\nplt.xlabel('Rotten Tomatoes Rating', fontsize=16);","cb17a70c":"from scipy import stats\nplt.rcParams['figure.figsize'] = [20, 10]\nf, axes = plt.subplots(1, 2)\n\nsns.distplot(movies['Worldwide_Gross'], bins=100, hist=False, fit=stats.powerlaw, ax=axes[0])\naxes[0].set_xlabel('Worldwide Gross', fontsize=16)\n\nsns.distplot(movies['IMDB_Votes'], hist=False, fit=stats.powerlaw, ax=axes[1])\naxes[1].set_xlabel('IMDB Votes', fontsize=16);","fbcebe76":"f, axes = plt.subplots(1, 2)\n\nsns.distplot(movies['IMDB_Rating'], bins=100, hist=False, fit=stats.norm, ax=axes[0])\naxes[0].set_xlabel('IMDB Rating', fontsize=16);\n\nsns.distplot(movies['Rotten_Tomatoes_Rating'], bins=100, hist=False, fit=stats.gennorm, ax=axes[1])\naxes[1].set_xlabel('Rotten Tomatoes Rating', fontsize=16);","94360d2a":"plt.rcParams['figure.figsize'] = [10, 10]","d6c2de25":"genre = movies.groupby('Major_Genre').count().sort_values(by='Title', ascending=False)","c8c0a400":"plt.rcParams['figure.figsize'] = [20, 10]\nplt.rcParams.update({'font.size': 10})\n\nsns.barplot(genre.index, genre['Title'], palette='GnBu_d')\nplt.xlabel('Major Genre', fontsize=16)\nplt.ylabel('Number of Movies', fontsize=16);","be052f98":"plt.rcParams['figure.figsize'] = [10, 10]\nplt.rcParams.update({'font.size': 16})","cadf3f1b":"plt.hist(movies['Worldwide_Gross']\/10**6, bins=[0, 10, 20, 40, 80, 160, 320, 640, 1280, 2560], rwidth=0.8)\nplt.xlabel('Worldwide Gross in milions of U.S. dollars', fontsize = 16)\nplt.ylabel('Number of movies', fontsize = 16);","9aba3080":"plt.hist(movies['IMDB_Votes']\/10**3, bins=[0, 1, 2, 4, 8, 16, 32, 64, 128, 256, 512], rwidth=0.8)\nplt.xlabel('Thousands of IMDB Votes', fontsize = 16)\nplt.ylabel('Number of movies', fontsize = 16);","fa8a20db":"sns.scatterplot(movies['IMDB_Votes']\/10**3, movies['Worldwide_Gross']\/10**6)\nplt.ylabel('Worldwide Gross in million U.S. Dollars', fontsize=16)\nplt.xlabel('Thousands of IMDB Votes', fontsize = 16);","80302083":"splot = sns.regplot(movies['IMDB_Votes']\/10**3, movies['Worldwide_Gross']\/10**6, \n                    scatter_kws = {'color': 'blue', 'alpha': 0.2}, line_kws = {'color': 'red'})\nsplot.set(xscale='log')\nsplot.set(yscale='log')\n\nplt.ylabel('Worldwide Gross in milion U.S. dollars', fontsize=16)\nplt.xlabel('Thousands of IMDB Votes', fontsize = 16);","3edf4b05":"sns.pairplot(movies[['Worldwide_Gross', 'Rotten_Tomatoes_Rating', 'IMDB_Votes', 'IMDB_Rating']]);","0915c317":"from scipy import stats\n\ndef correlations(x, y):\n    spearman = stats.spearmanr(x, y)\n    pearson = stats.pearsonr(x, y)\n\n    print(\"Spearman correlation coefficient for {} and {}:\".format(x.name, y.name), spearman.correlation)\n    print(\"Pearson correlation coefficient for {} and {}:\".format(x.name, y.name), pearson[0])\n    print(\"P-value correlation coefficient for {} and {}:\".format(x.name, y.name), spearman.pvalue)\n    print(\"\")","f36b044f":"no_null_tomatoes = movies.dropna(subset=['Rotten_Tomatoes_Rating'])\n\ncorrelations(no_null_tomatoes['Rotten_Tomatoes_Rating'], no_null_tomatoes['IMDB_Rating'])\ncorrelations(movies['IMDB_Votes'], movies['IMDB_Rating'])\ncorrelations(no_null_tomatoes['IMDB_Votes'], no_null_tomatoes['Rotten_Tomatoes_Rating'])\n\ncorrelations(no_null_tomatoes['Worldwide_Gross'], no_null_tomatoes['Rotten_Tomatoes_Rating'])\ncorrelations(movies['Worldwide_Gross'], movies['IMDB_Rating'])\ncorrelations(movies['Worldwide_Gross'], movies['IMDB_Votes'])","c5020aa7":"sns.regplot(no_null_tomatoes['Rotten_Tomatoes_Rating'], no_null_tomatoes['IMDB_Rating'], \n            scatter_kws = {'color': 'blue', 'alpha': 0.2}, line_kws = {'color': 'red'})\n\nplt.ylabel('IMDB Rating', fontsize=16)\nplt.xlabel('Rotten Tomatoes Rating', fontsize=16);","44123cf1":"sns.regplot(movies['Worldwide_Gross']\/10 ** 6, movies['IMDB_Votes']\/10**3,\n            scatter_kws = {'color': 'blue', 'alpha': 0.2}, line_kws = {'color': 'red'})\n\nplt.ylabel('Thousands of IMDB Votes', fontsize = 16)\nplt.xlabel('Worldwide Gross in milion U.S. dollars', fontsize=16);","5215f06d":"plt.rcParams['figure.figsize'] = [20, 10]\nplt.rcParams.update({'font.size': 10})\n\nsns.barplot(movies['Major_Genre'], movies['Worldwide_Gross']\/10 ** 6, palette='GnBu_d')\nplt.ylabel('Worldwide Gross in milion U.S. dollars', fontsize=16)\nplt.xlabel('Major Genre', fontsize=16);","32f92437":"plt.rcParams['figure.figsize'] = [10, 10]\nplt.rcParams.update({'font.size': 16})","be3111e1":"def t_test(genre1, genre2):\n    x = movies[movies['Major_Genre'] == genre1]['Worldwide_Gross']\n    y = movies[movies['Major_Genre'] == genre2]['Worldwide_Gross']\n    \n    print('The p-value for genres {} and {} is:'.format(genre1, genre2) ,stats.ttest_ind(x, y).pvalue)","f69bc4e1":"t_test('Action', 'Adventure')\nt_test('Action', 'Romantic Comedy')\nt_test('Adventure', 'Romantic Comedy')\nt_test('Action', 'Drama')","480781fb":"t_test('Documentary', 'Black Comedy')\nt_test('Western', 'Horror')\nt_test('Western', 'Drama')\nt_test('Horror', 'Comedy')","62c2c9f2":"movies['Release_Date'].replace('TBD', np.nan, inplace=True)\nmovies['Release_Date'].dropna()","92ecfe84":"def to_str(row):\n    row_as_string = str(row)\n    no_spaces = row_as_string.split()[-1]\n    year = no_spaces[-2:]\n    \n    if not year.isdigit():\n        return np.nan\n    return year\n\nmovies['Year'] = movies['Release_Date'].apply(lambda row: to_str(row))\nmovies['Year'] = movies['Year'].dropna()","fd53991c":"movies['Year'] = pd.to_numeric(movies['Year'])\n\ndef to_year(row):\n    #1915 - 2011    \n    if row >= 15:\n        row += 1900\n    else:\n        row += 2000\n    return row\n    \nmovies['Year'] = movies['Year'].apply(lambda row: to_year(row))","4e997a47":"movies['Year']","02f88a8d":"movies['Year'] = movies['Year'].fillna(0)\nmovies['Year'].astype('int')\nmovies = movies[movies['Year'] != 0]","0199a049":"sns.distplot(movies['Year'], bins=100);","19b10cfe":"def roundup(x):\n    return int(math.floor(x \/ 10.0)) * 10\n\nmovies['Decade'] = movies['Year'].apply(lambda row: roundup(row))","944d5dbb":"sns.barplot(movies['Decade'], movies['Rotten_Tomatoes_Rating'], palette='GnBu_d')\nplt.ylabel('Rotten Tomatoes Rating');","9f88aae5":"sns.barplot(movies['Decade'], movies['IMDB_Rating'], palette='GnBu_d')\nplt.ylabel('IMDB Rating');","e66c25e9":"movies_after_20s = movies[movies['Decade'] > 1920]\ndifference_of_opinion = movies_after_20s['IMDB_Rating']*10 - movies_after_20s['Rotten_Tomatoes_Rating']\n\nsns.barplot(movies_after_20s['Decade'], difference_of_opinion, palette='GnBu_d')\nplt.xlabel('Decade after the 1920s')\nplt.ylabel('Difference between IMDB and Rotten Tomatoes Rating');","61e5cf1b":"no_null_directors = movies.dropna(subset=['Director'])\nmean_stats = no_null_directors.groupby('Director')[['Worldwide_Gross', 'IMDB_Rating']].mean()\n\ntop_earning = mean_stats.sort_values(by='Worldwide_Gross', ascending=False)[:100]\ntop_rated  = mean_stats.sort_values(by='IMDB_Rating', ascending=False)[:100]","3560dae5":"sns.distplot(top_earning['IMDB_Rating'], label='top earning')\nsns.distplot(top_rated['IMDB_Rating'], label='top rated')\nplt.legend();","062ecf8b":"sns.distplot(top_earning['Worldwide_Gross']\/10**6, label='top earning')\nsns.distplot(top_rated['Worldwide_Gross']\/10**6, label='top rated')\nplt.legend();","cfc95750":"t1 = stats.ttest_ind(top_earning['Worldwide_Gross'], top_rated['Worldwide_Gross'])\nt2 = stats.ttest_ind(top_earning['IMDB_Rating'], top_rated['IMDB_Rating'])\n\nprint('t-statistic: {}, p-value: {}'.format(t1.statistic, t1.pvalue))\nprint('t-statistic: {}, p-value: {}'.format(t2.statistic, t2.pvalue))","2c34a473":"movies['Performance'] = movies['Worldwide_Gross'] - movies['Production_Budget']\nmovies['Flop'] = movies['Performance'].loc[movies['Performance'] < 0]\nmovies['Win'] = movies['Performance'].loc[movies['Performance'] > 0]\n\nmovies['Production_Budget'].fillna(0, inplace=True)\nflops = movies.dropna(subset=['Flop'])\nwins = movies.dropna(subset=['Win'])","972ca22e":"plt.rcParams['figure.figsize'] = [20, 10]\nf, axes = plt.subplots(1, 2)\n\nsns.scatterplot(movies['Flop']*(-1), movies['Production_Budget'], ax=axes[0])\naxes[0].set_xlabel('Flop', fontsize=16)\naxes[0].set_ylabel('Production Budget', fontsize=16)\n\nsns.scatterplot(movies['Win']\/10**6, movies['Production_Budget'], ax=axes[1])\naxes[1].set_xlabel('Win', fontsize=16)\naxes[1].set_ylabel('Production Budget', fontsize=16);","263006b0":"correlations(flops['Production_Budget'], flops['Flop']*(-1))\ncorrelations(wins['Production_Budget'], wins['Win'])","bc78330b":"plt.rcParams['figure.figsize'] = [10, 10]\n\nsns.regplot(movies['Worldwide_Gross']\/10**6, movies['Production_Budget']\/10**6, \n           scatter_kws = {'color': 'blue', 'alpha': 0.2}, line_kws = {'color': 'red'})\nplt.xlabel('Worldwide Gross in milions of U.S. dollars', fontsize=16)\nplt.ylabel('Production Budget in milions of U.S. dollars', fontsize=16)\n\ncorrelations(movies['Worldwide_Gross'], movies['Production_Budget'])","77829bfd":"plt.rcParams['figure.figsize'] = [20, 10]\nf, axes = plt.subplots(1, 2)\n\nsns.scatterplot(movies['IMDB_Rating'], movies['Flop']*(-1), ax=axes[0])\naxes[0].set_xlabel('IMDB Rating', fontsize=16)\naxes[0].set_ylabel('Flop', fontsize=16)\n\nsns.scatterplot(movies['Rotten_Tomatoes_Rating'], movies['Flop']*(-1), ax=axes[1])\naxes[1].set_xlabel('Rotten Toamtoes Rating', fontsize=16)\naxes[1].set_ylabel('Flop', fontsize=16);","489f8b00":"correlations(flops['IMDB_Rating'], flops['Flop'])\ncorrelations(flops['Rotten_Tomatoes_Rating'].fillna(0), flops['Flop'])","48f2c938":"plt.rcParams['figure.figsize'] = [10, 10]\nflops_per_decade = flops.groupby('Decade').agg({'Flop' : 'count'})\n\nsns.barplot(flops_per_decade.index, flops_per_decade['Flop'], palette='GnBu_d')\nplt.ylabel('Flops', fontsize=16);","5e5df449":"sns.barplot(flops['Decade'], flops['Flop']*(-1)\/10**6, palette='GnBu_d')\nplt.ylabel('Average loss for flops in U.S. dollars', fontsize=16);","9803c1ed":"sns.barplot(movies['Decade'], movies['Production_Budget']\/10**6, palette='GnBu_d')\nplt.ylabel('Production Budget in milions of U.S. dollars', fontsize=16);","62faf7e0":"### Let's create a histogram with exponentally icreasing bin size, to visualize the number of movies that generate different sizes of Worldwide Gross.","9c4cbe75":"### Some of the quantitative attributes, we are going to use, are strings so we transofrm them into numbers.","44603e71":"### Create a histogram of the IMDB Rating of the top earing and top rated director's movies.","b0e73ad9":"### In conlcusion, when they say that \"they don't make good movies anymore\", it is probably the critics that hold that opinion.","5a7e5cd5":"# Data Analysis on movies.","146b4239":"## They say that \"They don't make good movies anymore\", maybe we can answer the question with data.","199848d2":"### Create a histogram of the Worldwide Gross for the top earing and top rated director's movies.","38f84a17":"### Create a column for the release year of each movie.","326fa136":"## Let's look into the distributions of some of the attributes of the data.","271d4401":"### Since we will be examining the ratings of the movies, let's drop the NaN and not applicable values for the IMDB Rating and Rotten Tomatoes Rating columns.","6d6e3a7a":"### For other Genres the difference are indeed statistically important.","fefe4f6e":"### It seems that the majority of movies generate a moderate gross and some a significant gross and only very few movies manage to generate a huge gross, just as the power law distribution suggests. This seems to be the case for online popularity as well.","13bddcc3":"### To quantify the correlations let's use the Spearman and Pearson correlation coefficients as well as the p-value.","f515c9d1":"### The critics highly disagree with the users on the superior quality of movies form earlier Decades but the difference of opinion decreases as time goes on. In the 1990s however, the users start to disagree with the critics on the superior quality of movies from later Decades being good.<br>Seeing how the IMDB Ratings (user's rating) show roughly similar quality for movies across multiple Decades, it would seem that the critics do not find the movies from later Decades as high quality as movies from earlier Decades.","212be2ba":"### Create a barplot for the number of flops in each decade to visualize the how the number of flopped movies changes overtime.","5d190333":"### Use t-tests to see if the difference between the means is statistically significant.","48c55e3f":"### The flops are strongly correleted with the budget of the movie. It makes sense because if a high profile movie flops, then the losses are big.<br> The wins are also strongly correlated with the budget, not as strongly though. It also makes sense because high profile movies are the ones that can generate the highest gross.","9c2845c7":"### Create a column for the Decade of release.","1a1c7f31":"### Create a scatterplot for the Production Budget and the movies that flopped then a scatterplot for those that didn't flop.","12420c1c":"### The number of datapoints we dropped is very small.","236588a6":"### Plot a histogram for the release year.","e3d69a09":"### Read the data from a .cvs file and create a pandas DataFrame named movies.","b731c062":"## The data needs some cleaning.","6f634d1c":"### Interestingly, the correlation of Flop and the Ratings is very weak. This indicates that the quality of a movie is not the deciding factor that makes a movie flop. In other words good movies can flop too.","91db724c":"### Import necessary dependencies. Adjust the display settings.","7cab8a6f":"## What is the difference in movie quality and movie gross between top rated and top earning directors?","d26aa7c1":"### Check the scatterplots for the relevant attributes for more correlations.","b9d16620":"### Let's find out how many null or not applicable values exist in each column.","8940cbb5":"### Create the same plot for IMDB Rating to visualize the overall quality of movies for each decade accoriding to the USERS.","be04a7ce":"### Plot a histogram of the IMDB Rating of the movies.","2e083800":"### The Worldwide Gross as well as IMDB Votes of the movies seem to follow a power law distribution. The IMDB Rating follows a Normal distribution. The Rotten Tomatoes Rating looks like it can be approximated with a generalized Normal distribution. ","046b5c92":"### A movie's gross and online popularity seem to be positively correlated. To visualize this let's create a log-log plot and fit a regression curve.","fcbc9f68":"### To visualize the strong correlation between the IMDB Rating and the Rotten Tomatoes Rating let's create a scatterplot and fit a regression line.","d5f85d90":"### It is clear that the critics and the users sometimes have difference of opinion. To visualize this let's create a column for the difference in the IMDB Ratings and Rotten Tomatoes Ratings. Then, create a bar plot for the difference for each Decade.","cddd26fa":"### Low p-value indicates that the difference between the means are not statistically significant. The opposite is also true. For p-values below 5% to 1% the difference is not considered statistically important.","1c1d4c7e":"### It seems that the Production Budget continually increases as time goes on but interestingly, the losses for flops do not increase with it.","d23533b6":"### Create a scatterplot for the IMDB Rating and Rotten Tomatoes Rating and the movies that flopped.","667d323e":"### <ul><li> There is a strong correlation between IMDB Rating and Rotten Tomatoes Rating. Makes sense sicne both measure the same thing, movie quality.<\/li><br><li> There is a moderetly strong correlation between the Worldwide Gross and the IMDB Votes just as we detected with the plots.<\/li><br><li> There is almost no correlation between Worldwide Gross and Rotten Tomatoes Rating. It seems the critics are not biased towards high profile movies.<\/li><\/ul>","91446243":"### Create some new columns to measure the performance.","32462735":"### For some Genres the difference between their means are not significantly important. Such are Action movies and Adventure movies.","a5c345c6":"## One more question that we could answer is about the performance of a movie. More specifically, did the movie make more money than its budget or did it \"flop\" and which are the factors that affect its performance?","547a2f22":"### Finally plot a histogram of the Rotten Tomatoes Rating of the movies.","22d19c4f":"### There is a spike in the number of movies produced in the late 1990s and early 2000s.","248060c8":"### Create the same histogram for IMDB Votes, to visualize the number of movies that achieve different popularity hights online.","7ce567ee":"### Create a barplot for the average losses of flops dor each Decade to visualize the change in losses for flopped movies overtime.","2ce4a808":"### To test these beliefs let's fit a scipy distribution with the data and compare it with the Kernel Density Estimate of the data.","16408a59":"### Basic Statistics for quantitative attributes.","80689a4a":"### Plot a histogram of the Worlwide Gross of the movies.","03cfec4a":"### We will use the Release Date attribute as well as the IMDB Rating and Rotten Tomatoes Rating.<br>First we must clean up the Release Date data and create some new columns in the movies DataFrame.","69489bf8":"### Next, let's look at the popularity of the different movie Genres.","89e1fe52":"### Let's use some t-tests to see if the diferences in gross between the different Genres are statistically significant.","f79d3a19":"### Rename the columns for convinence.","a43af4b0":"## Let's look for correlations in the data.","4169464f":"### According to the critics, there is a steady decrease in movie quality as time goes on. According to the users however the movie quality is not decreasing consistently, but stays roughly the same as time goes on.<br> Perhaps the users do not have as high standards for movie quality as critics.","ba97c5ca":"### Create a bar plot for the average Rotten Tomatoes Rating for each decade with confidence intervals to visualize the overall quality of movies for each decade according to the CRITICS.","99a48bb7":"### Use Spearman and Pearson correlation coefficients to measure the correlations.","461650b0":"### Create a barplot with the mean gross for each Genre to visualize the distribution of Worldwide Gross across the different Genres.","f5682097":"### Do the same for Worldwide Gross and IMDB Votes.","e7b189a3":"### Create a scatterplot for Worldwide Gross and IMDB Votes.","b712efba":"### The highest losses occured in the 1990s and 2000s. Let's check the Production Budget for each decade since we know that the correlation is strong.","f227af93":"### Create a pandas DataFrame for the top 100 earning and top 100 rated movie Directors with the Worldwide Gross and IMDB Rating.","0f15e48f":"### Plot a histogram of the IMDB Votes of the movies.","dc9055d7":"### The number of flopped movies spikes in the 2000s. This makes sense because the overall number of movies also spikes in the 2000s. More movies means more flops as well."}}