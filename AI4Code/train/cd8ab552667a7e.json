{"cell_type":{"13884f5b":"code","60043311":"code","5ec60bc8":"code","ed97e66b":"code","ccd48a28":"code","901d2fb0":"code","cd4031c6":"code","557c8727":"code","292ee8f6":"code","4f2f15c0":"code","2c31b3c0":"code","344a9ca3":"code","591c33f2":"markdown","500ee00c":"markdown"},"source":{"13884f5b":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn.dummy import DummyClassifier\nfrom sklearn.metrics import log_loss, make_scorer\nfrom pathlib import Path","60043311":"data_dir = Path('..\/input\/lish-moa')","5ec60bc8":"tr_tg = pd.read_csv(data_dir\/'train_targets_scored.csv', index_col='sig_id')","ed97e66b":"Y = tr_tg.iloc[:,0:].values\nY.shape","ccd48a28":"def mean_log_loss(Y, Y_pred):\n    return np.mean([log_loss(Y[:,i], Y_pred[i], labels=[0, 1]) for i in range(len(Y_pred))])","901d2fb0":"clf_prior = DummyClassifier(strategy='prior')","cd4031c6":"clf_prior.fit(Y, Y)","557c8727":"mean_log_loss(Y, clf_prior.predict_proba(Y))","292ee8f6":"list(zip(tr_tg.columns, map(lambda x: x[1], clf_prior.class_prior_)))","4f2f15c0":"submission = pd.read_csv(data_dir\/'sample_submission.csv', index_col='sig_id')","2c31b3c0":"for i, p in enumerate(clf_prior.class_prior_):\n    submission.iloc[:, i] = p[1]","344a9ca3":"submission.to_csv('submission.csv', index=True)","591c33f2":"# Divide your score by whatever this notebook scores. \n\n# If you get a value greater than one, you are doing something wrong.","500ee00c":"# If this loss value is similar to loss in test set, then it is reasonable to assume test target distribution is similar to train target distribution."}}