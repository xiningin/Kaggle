{"cell_type":{"3c1b7bb8":"code","4e487969":"code","6fea7de1":"code","8d295091":"code","56c2d6f4":"code","4b53b454":"code","22164dc7":"code","ac99c659":"code","45592a1c":"code","3f24507e":"code","4e6ea9a1":"code","0e70974e":"code","9cf60736":"code","c008e1dc":"code","1ddf7145":"code","c98cf0ce":"code","5b6aff9c":"code","74bb2c98":"code","93616cc5":"code","c1b2f843":"code","b36dd2a7":"code","89af40d0":"markdown","c40efb0d":"markdown","c7571db3":"markdown","ff3d842d":"markdown","c37f4abe":"markdown","e1cbbdf2":"markdown","0feabfc9":"markdown","534c0a6c":"markdown"},"source":{"3c1b7bb8":"# for file operations\nimport os\n\n# opencv for computer vision\nimport cv2\n# basic image loading and display operations\nimport matplotlib.image as mpimg\n# ploting\nimport matplotlib.pyplot as plt\n\n\n# linear algebra\nimport numpy as np \n# data processing, CSV file I\/O\nimport pandas as pd ","4e487969":"# list of available files\n! ls ..\/input\/global-wheat-detection","6fea7de1":"# no. of images in train and test folder\nprint('No. of files in train folder :', len(os.listdir('..\/input\/global-wheat-detection\/train')))\nprint('No. of files in test folder :', len(os.listdir('..\/input\/global-wheat-detection\/test')))","8d295091":"# train features and lable\ndf = pd.read_csv('..\/input\/global-wheat-detection\/train.csv')\ndf.head()","56c2d6f4":"# no. of rows and columns in the dataframe\ndf.shape","4b53b454":"# images with most bounding boxes\ndf['image_id'].value_counts()[:5]","22164dc7":"# Is there any other image size than 1024 ?\nprint('No. of images with width not equal to 1024 :', df[df['width']!=1024].shape[0])\nprint('No. of images with height not equal to 1024 :', df[df['height']!=1024].shape[0])","ac99c659":"# how many images from each source\ndf['source'].value_counts()","45592a1c":"# df[df['bbox'] == '[, , , ]']","3f24507e":"group_by_img_id = df['image_id'].value_counts()\nimg_wo_bbox = group_by_img_id[group_by_img_id == 1].index\ndf[df['image_id'].isin(img_wo_bbox)]","4e6ea9a1":"# plot single image\n# =================\n\ndef plot_image(img_id, fig_size=(4, 4)):\n    \"\"\"Plot the image corresponds to the image_id\n    \n    Args:\n        img_src(str) : image id\n        fig_size(tuple optional) : figure size     \n    \"\"\"\n    \n    # complete image path\n    img_src = '..\/input\/global-wheat-detection\/train\/' + img_id + '.jpg'\n    # read image\n    image = mpimg.imread(img_src)\n    # plot image\n    plt.figure(figsize=fig_size)\n    plt.imshow(image)\n    plt.axis('off')\n    plt.show()","0e70974e":"# plot single image with bounding boxes\n# =====================================\n\ndef plot_with_bboxes(img_id, fig_size=(4, 4)):\n    \"\"\"Plot the image with bounding box corresponds to the image_id\n    \n    Args:\n        img_src(str) : image id\n        fig_size(tuple optional) : figure size     \n    \"\"\"\n    \n    # complete image path\n    img_src = '..\/input\/global-wheat-detection\/train\/' + img_id + '.jpg'\n    # read image\n    img = mpimg.imread(img_src)\n    # convert image to np array\n    img = np.array(img)\n    \n    # extract bboxes\n    bboxes = [eval(i) for i in df[df['image_id'] == '7ad46c7f4']['bbox']]\n\n    # plot\n    fig, ax = plt.subplots(1, 1, figsize=fig_size)\n\n    for box in bboxes:\n\n        x = int(box[0])\n        y = int(box[1])\n        w = int(box[2])\n        h = int(box[3])\n\n        cv2.rectangle(img, (x, y), (x + w, y + h), (255, 255, 255), 3)\n\n    ax.set_axis_off()\n    ax.imshow(img)","9cf60736":"# plot images in subplots\n# =======================\n\ndef subplot_images(img_id_array, fig_size=(20, 4)):\n    \"\"\"Plot the images in a subplot\n    \n    Args:\n        img_id_array(list) : list of image ids\n        fig_size(tuple optional) : figure size     \n    \"\"\"\n    \n    # path to the dir\n    src = '..\/input\/global-wheat-detection\/train\/'\n    # list of image srcs\n    img_src = [src + img_id + '.jpg' for img_id in img_id_array]\n    \n    # plot in subplots\n    fig, axes = plt.subplots(1, 5, figsize=(20, 4))\n    axes = axes.flatten()\n\n    for ind, src in enumerate(img_src[:5]):\n        \n        # read image\n        img = mpimg.imread(img_src[ind])\n        # convert image to numpy array\n        img = np.array(img)\n\n        axes[ind].set_title(img_ids[ind])\n        axes[ind].set_axis_off()\n        axes[ind].imshow(img)","c008e1dc":"plot_image('7ad46c7f4')","1ddf7145":"plot_with_bboxes('7ad46c7f4')","c98cf0ce":"subplot_images(img_ids[:5])","5b6aff9c":"img_dir = '..\/input\/global-wheat-detection\/train\/'\nimg_ids = [img.replace('.jpg', '') for img in os.listdir(img_dir)]\nimg_src = [img_dir + img for img in os.listdir(img_dir)]\nbboxes = [df[df['image_id'] == img_id]['bbox'] for img_id in img_ids]","74bb2c98":"fig, axes = plt.subplots(1, 5, figsize=(20, 4))\naxes = axes.flatten()\n\nfor ind, src in enumerate(img_src[:5]):\n    \n    img = mpimg.imread(img_src[ind])\n    img = np.array(img)\n\n    axes[ind].imshow(img)\n    axes[ind].set_title(img_ids[ind])\n    axes[ind].set_axis_off()\n    axes[ind].imshow(img)","93616cc5":"fig, axes = plt.subplots(5, 5, figsize=(20, 20))\naxes = axes.flatten()\n\nfor ind, src in enumerate(img_src[:25]):\n    \n    img = mpimg.imread(img_src[ind])\n    img = np.array(img)\n\n    axes[ind].imshow(img)\n    axes[ind].set_title(img_ids[ind])\n    axes[ind].set_axis_off()\n    axes[ind].imshow(img)","c1b2f843":"img = mpimg.imread(img_src[2])\nimg = np.array(img)\n\nfig, ax = plt.subplots(1, 1, figsize=(5, 5))\n\nfor box in bboxes[2]:\n    \n    box = eval(box)\n    x = int(box[0])\n    y = int(box[1])\n    w = int(box[2])\n    h = int(box[3])\n\n    cv2.rectangle(img, (x, y), (x + w, y + h), (255, 255, 255), 3)\n    \nax.set_axis_off()\nax.imshow(img)","b36dd2a7":"fig, axes = plt.subplots(5, 5, figsize=(20, 20))\naxes = axes.flatten()\n\nfor ind, src in enumerate(img_src[:25]):\n    \n    img = mpimg.imread(img_src[ind])\n    img = np.array(img)\n\n    for box in bboxes[ind]:\n\n        box = eval(box)\n        x = int(box[0])\n        y = int(box[1])\n        w = int(box[2])\n        h = int(box[3])\n\n        cv2.rectangle(img, (x, y), (x + w, y + h), (255, 255, 255), 3)\n\n    axes[ind].set_title(img_ids[ind])\n    axes[ind].set_axis_off()\n    axes[ind].imshow(img)","89af40d0":"## What we need to predict ?","c40efb0d":"## What is available ?","c7571db3":"> * The data is images of wheat fields, with bounding boxes for each identified wheat head. \n> * Not all images include wheat heads \/ bounding boxes. \n> * The images were recorded in many locations around the world.","ff3d842d":"# Data","c37f4abe":"> * Bounding boxes around each wheat head in images that have them. \n> * If there are no wheat heads, you must predict no bounding boxes.","e1cbbdf2":"# Utility functions","0feabfc9":"* looks like one image has multiple bounding box","534c0a6c":"# Libraries"}}