{"cell_type":{"3b2bafca":"code","4734eb24":"code","08cebc58":"code","26ee93bf":"code","791da542":"code","4cbed553":"code","2ca471be":"code","999b49f6":"code","f1475246":"code","c80412a5":"code","ea16667e":"code","ae40ef7e":"code","343001ef":"markdown","3c823cd3":"markdown","52004d48":"markdown","59ba371f":"markdown","1951dcd1":"markdown","fd3cd6c5":"markdown","71768a97":"markdown","c4c8592e":"markdown","7ccd3abc":"markdown","c9567b30":"markdown"},"source":{"3b2bafca":"import pandas as pd\nimport itertools\nimport seaborn as sns\nimport matplotlib.pyplot as plt","4734eb24":"plt.rcParams['figure.figsize']=(12,5)\n\nfont = {'family': 'serif',\n        'color':  'darkred',\n        'weight': 'normal',\n        'size': 16,\n        }","08cebc58":"df = pd.read_csv(\"..\/input\/gufhtugu-publications-dataset-challenge\/GP Orders - 4.csv\")\ndf.dropna(inplace=True)\ndf.head()","26ee93bf":"book_counts = {}\nfor book in df['Book Name']:\n    if '\/' in book:\n        m_bks = book.split('\/')\n        for bk in m_bks:\n            if bk in book_counts:\n                book_counts[bk] += 1\n            else:\n                book_counts[bk] = 1\n    else:\n        if book in book_counts:\n            book_counts[book] += 1\n        else:\n            book_counts[book] = 1","791da542":"top = dict(sorted(book_counts.items(), key=lambda x: x[1], reverse=True))\ntop = dict(itertools.islice(top.items(), 5))\nplt.barh(list(top.keys())[::-1], list(top.values())[::-1])\nplt.title('Top 5 Selling Books', fontdict=font)\nplt.margins(0.01)\nplt.show()","4cbed553":"least = dict(sorted(book_counts.items(), key=lambda x: x[1]))\nleast = dict(itertools.islice(least.items(), 5))\nplt.barh(list(least.keys())[::-1], list(least.values())[::-1])\nplt.title('Least 5 Selling Books', fontdict=font)\nplt.margins(0.01)\nplt.show()","2ca471be":"os = dict(df['Order Status'].value_counts())\nplt.barh(list(os.keys())[::-1], list(os.values())[::-1])\nplt.title('Books Order Status', fontdict=font)\nplt.margins(0.01)\nplt.show()","999b49f6":"df_new = df[df['Order Status']=='Returned']\ndf_new.head()","f1475246":"returned_counts = {}\nc = 0\nfor book in df_new['Book Name']:\n    if '\/' in book:\n        c += 1\n        m_bks = book.split('\/')\n        for bk in m_bks:\n            if bk in returned_counts:\n                returned_counts[bk] += 1\n            else:\n                returned_counts[bk] = 1\n    else:\n        if book in returned_counts:\n            returned_counts[book] += 1\n        else:\n            returned_counts[book] = 1\nprint(c\/len(df_new))","c80412a5":"top = sorted(returned_counts.items(), key=lambda x: x[1], reverse=True)\ntop[0]","ea16667e":"df_new['City (Billing)'].value_counts()","ae40ef7e":"df['Order Date']= pd.to_datetime(df['Order Date'])\ndf['Day'] = df['Order Date'].apply(lambda x : x.day_name())\ndf['Day'].value_counts()[::-1].plot(kind='barh')\nplt.title('Order Frequency by Day', fontdict=font)\nplt.margins(0.01)\nplt.show()","343001ef":"## Exploring Returned Orders","3c823cd3":"## Order Frequency by Day","52004d48":"### Findings:\n<b>*<\/b> <b><i>21%<\/i><\/b> returned orders contained more than 1 book.<br>\n<b>*<\/b> Most returning book is <b><i>Internet Se Paise Kamayen<\/i><\/b>. Exactly <b><i>481<\/i><\/b> times.<br>\n<b>*<\/b> Most returned orders are from <b><i>Karachi<\/i><\/b>.<br>","59ba371f":"## Preprocessing Book Names","1951dcd1":"## Top Selling Books","fd3cd6c5":"## Least Selling Books","71768a97":"## Load Data","c4c8592e":"## Set Parameters","7ccd3abc":"## Importing Libraries","c9567b30":"## Visualizing Order Status"}}