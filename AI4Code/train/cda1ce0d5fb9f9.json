{"cell_type":{"b443a048":"code","cef7e4ac":"code","ad470e10":"code","35fccbb8":"code","9038bfd9":"code","4babadb0":"code","c65cc1ac":"code","760cb12c":"code","2db0bdf0":"code","86455f58":"code","637f4c54":"code","2d0181f9":"code","dd114a20":"code","b7017153":"code","dd87670e":"code","005ca709":"code","0f9c0616":"code","4a69586e":"code","b5345ae5":"code","5a727e3c":"code","6b5ae193":"code","4df0dc57":"code","b12c04ff":"markdown","361727f0":"markdown","fd13c1b1":"markdown"},"source":{"b443a048":"import numpy as np\nimport pandas as pd\nimport os\n\ndf_labels = pd.read_csv(\"\/kaggle\/input\/global-wheat-detection\/train.csv\")\ndf_labels.head()","cef7e4ac":"pic_ids, bboxes = [], []\nfor img in os.listdir(\"\/kaggle\/input\/global-wheat-detection\/train\"):\n    pic_id = img[:-4]\n    bbox = df_labels.loc[df_labels['image_id'] == pic_id][\"bbox\"]\n    \n    pic_ids.append(pic_id)\n    bboxes.append(bbox)","ad470e10":"from ast import literal_eval\n\ndef draw_bboxes(img, bbox):\n    for box in bbox:\n        box = literal_eval(box)\n        x, y, w, h = [int(n) for n in box]\n        cv2.rectangle(img, (x, y), (x+w, y+h), (255, 0, 0), 2)\n        \n    return img","35fccbb8":"import cv2\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\n\nrcParams[\"figure.figsize\"] = 15, 15\n\nfor i in range(4):\n    pic = pic_ids[i]\n    bbox = bboxes[i].values\n    \n    path = f\"\/kaggle\/input\/global-wheat-detection\/train\/{pic}.jpg\"\n    pic = cv2.imread(path)\n    \n    pic = draw_bboxes(pic, bbox)\n    \n    plt.imshow(pic)\n    plt.show()","9038bfd9":"import csv\n\nimg_path = \"\/kaggle\/input\/global-wheat-detection\/train\"\n\nwith open(\"img.csv\", \"w\") as f:\n    for i in range(len(pic_ids)):\n        bbox = bboxes[i].values\n        for box in bbox:\n            box = literal_eval(box)\n            box = [int(b) for b in box]\n            try:\n                a, b, c, d = box[0], box[1], box[0]+box[2], box[1]+box[3]\n                s = f\"{img_path}\/{pic_ids[i]}.jpg,{a},{b},{c},{d},wheat\\n\"\n    #             s = f\"{pic_ids[i]};{b}\\n\"\n\n            except:\n                continue\n            f.write(s)","4babadb0":"sample_df = pd.read_csv(\"img.csv\")\nsample_df.head()","c65cc1ac":"with open(\"classes.csv\", \"w\") as f:\n    f.write(\"wheat,0\")","760cb12c":"! wget 'https:\/\/github.com\/fizyr\/keras-retinanet\/releases\/download\/0.5.1\/resnet50_coco_best_v2.1.0.h5'","2db0bdf0":"!git clone https:\/\/github.com\/fizyr\/keras-retinanet.git","86455f58":"%cd keras-retinanet\n! pip install .","637f4c54":"!python setup.py build_ext --inplace","2d0181f9":"! pip install keras==2.3.1","dd114a20":"!keras_retinanet\/bin\/train.py --freeze-backbone --random-transform --weights \"..\/resnet50_coco_best_v2.1.0.h5\" --lr 1e-3 --batch-size 8 --steps 100 --epochs 5  csv ..\/img.csv ..\/classes.csv","b7017153":"%cd snapshots\nos.listdir(os.getcwd())","dd87670e":"from keras_retinanet.models import load_model\nfrom keras_retinanet.utils.image import preprocess_image, resize_image\nfrom keras_retinanet import models\n\nmodel = load_model(\"resnet50_csv_01.h5\", backbone_name='resnet50')\nmodel = models.convert_model(model)","005ca709":"from keras_retinanet.utils.visualization import draw_box, draw_caption\nfrom keras_retinanet.utils.colors import label_color\n\ndef draw_boxes(img_id, img, boxes, scores, labels):\n    for box, score, label in zip(boxes[0], scores[0], labels[0]):\n        if score < 0.5:\n            break\n        box = [int(b) for b in box]\n        \n        submission.append([img_id, score, box])\n        \n        draw_box(img, box, color=label_color(label))\n        score = \"{:.3f}\".format(score)\n        draw_caption(img, box, score)","0f9c0616":"test_path = \"\/kaggle\/input\/global-wheat-detection\/test\"\ntest_imgs  = [img for img in os.listdir(test_path)]","4a69586e":"%cd ..\n%cd ..\n%mkdir detected\n%cd detected","b5345ae5":"submission = []\n\nfor i in range(len(test_imgs)):\n    pic_path = test_path + \"\/\" + test_imgs[i]\n    img = cv2.imread(pic_path)\n    pic = preprocess_image(img)\n    \n    box, score, label = model.predict_on_batch(np.expand_dims(pic, axis=0))\n    draw_boxes(test_imgs[i], img, box, score, label)\n    \n    plt.imshow(cv2.cvtColor(img,cv2.COLOR_BGR2RGB))\n    plt.savefig(test_imgs[i], )","5a727e3c":"df = pd.DataFrame(submission)\ndf.columns = [\"img\", \"prediction\", \"bbox\"]\ndf","6b5ae193":"%cd ..\/..","4df0dc57":"df.to_csv(\"wheat_detected.csv\")","b12c04ff":"# CONTINUATION [HERE](https:\/\/www.kaggle.com\/imakaruamikurah\/detect-wheat-results)","361727f0":"### Display boxes on pictures.","fd13c1b1":"## IMPORTANT!\nYou have to downgrade keras to version 2.3.1. It is necessary for the code to work."}}