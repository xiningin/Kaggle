{"cell_type":{"9d044321":"code","e98a4b18":"code","39fd0a80":"code","9887ab7e":"code","eedc6314":"code","093c046d":"code","db5d7f2e":"code","82ed0ada":"code","dfff4cc9":"code","1151cbe0":"markdown","8fb971e0":"markdown"},"source":{"9d044321":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e98a4b18":"#importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","39fd0a80":"#importing dataset\nds = pd.read_csv('..\/input\/mall-customer-relation\/mall customers.csv')\nds.head()","9887ab7e":"#getting dimensions\nds.shape","eedc6314":"#checking for missing values\nds.isnull().any()","093c046d":"x = ds.iloc[:, [3,4]].values","db5d7f2e":"#using dendogram to find optimal number of clusters\nimport scipy.cluster.hierarchy as sch\ndendrogram = sch.dendrogram(sch.linkage(x, method = 'ward'))\nplt.title('Dendrogram')\nplt.xlabel('Customers')\nplt.ylabel('Euclidean Distance')\nplt.show()","82ed0ada":"#training the model on the dataset\nfrom sklearn.cluster import AgglomerativeClustering\nhc = AgglomerativeClustering(n_clusters = 5, affinity = 'euclidean', linkage = 'ward')\ny_hc = hc.fit_predict(x)","dfff4cc9":"#visualising the clusters\nplt.scatter(x[y_hc == 0, 0], x[y_hc == 0, 1], s = 100, c = 'red', label = 'Cluster 1')\nplt.scatter(x[y_hc == 1, 0], x[y_hc == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')\nplt.scatter(x[y_hc == 2, 0], x[y_hc == 2, 1], s = 100, c = 'green', label = 'Cluster 3')\nplt.scatter(x[y_hc == 3, 0], x[y_hc == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4')\nplt.scatter(x[y_hc == 4, 0], x[y_hc == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')\nplt.title('Clusters of customers')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()","1151cbe0":"**Hierarchical Clustering** to determine the behaviour\/pattern of the customers in a mall","8fb971e0":"NO MISSING DATA"}}