{"cell_type":{"ba80d6c0":"code","456f5c77":"code","2bc55d97":"code","defe4cf3":"code","b830dc2e":"code","7be5120a":"code","2a2aa510":"code","8e305f13":"code","ffd1c6d2":"code","45d2221f":"code","a109304e":"code","5c9642a1":"code","fe651971":"code","e8df86fe":"code","9a9729fe":"code","8cfef882":"code","0be0644b":"code","d60e2759":"code","04a35495":"code","ab63e791":"code","a42124d4":"code","e0469528":"code","c08cc27b":"code","766af967":"code","02653fbc":"code","e0bb947b":"code","71fc13ac":"code","454283d1":"code","ab304337":"code","74f71ca5":"markdown","96de5408":"markdown","da6fc595":"markdown","945a968c":"markdown","97325e58":"markdown","e613c422":"markdown","154090c4":"markdown","dd4ab11c":"markdown","deca1ec5":"markdown"},"source":{"ba80d6c0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","456f5c77":"df = pd.read_csv(\"..\/input\/employee_reviews.csv\")","2bc55d97":"df.shape","defe4cf3":"df.info()","b830dc2e":"df.isnull().sum()","7be5120a":"df.head()","2a2aa510":"df.groupby('company').size()","8e305f13":"df.groupby(['overall-ratings','company']).size().unstack().plot.bar(subplots=True, rot=0, figsize=(15,20), legend=True)","ffd1c6d2":"df.groupby(['work-balance-stars','company']).size().unstack().plot.bar(subplots=True, rot=0, figsize=(15,20), legend=True)","45d2221f":"df.groupby(['culture-values-stars','company']).size().unstack().plot.bar(subplots=True, rot=0, figsize=(15,20), legend=True)","a109304e":"df.groupby(['carrer-opportunities-stars','company']).size().unstack().plot.bar(subplots=True, rot=0, figsize=(15,20), legend=True)","5c9642a1":"df.groupby(['comp-benefit-stars','company']).size().unstack().plot.bar(subplots=True, rot=0, figsize=(15,20), legend=True)","fe651971":"df.groupby(['senior-mangemnet-stars','company']).size().unstack().plot.bar(subplots=True, rot=0, figsize=(15,20), legend=True)","e8df86fe":"def plot_heatmap(dataCol1, dataCol2, heading):\n    grpby = df.groupby([dataCol1, dataCol2]).size()\n    pct = grpby.groupby(level=1).apply(lambda x:100 * x \/ float(x.sum()))\n    unstk_data = pct.unstack()\n    fig, ax = plt.subplots()\n    sns.heatmap(unstk_data, annot=True, linewidths=.5, ax=ax, cmap='YlGn')\n    ax.set_title(heading)\n    fig.tight_layout()\n    plt.show()","9a9729fe":"plot_heatmap('overall-ratings','company', 'Overall-ratings in Companies in %' )","8cfef882":"plot_heatmap('work-balance-stars','company', 'Work-Life-Balance in Companies in %' )","0be0644b":"plot_heatmap('culture-values-stars','company', 'Culture Values in Companies in %' )","d60e2759":"plot_heatmap('carrer-opportunities-stars','company', 'Career Opportunities in Companies in %' )","04a35495":"plot_heatmap('comp-benefit-stars','company', 'Compensation Benefits in Companies in %' )","ab63e791":"plot_heatmap('senior-mangemnet-stars','company', 'Senior-Management Ratings in Companies in %' )","a42124d4":"#Define a function to get rid of stopwords present in the messages\nfrom nltk.corpus import stopwords\nimport string\n\ndef message_text_process(mess):\n    # Check characters to see if there are punctuations\n    no_punctuation = [char for char in mess if char not in string.punctuation]\n    # now form the sentence.\n    no_punctuation = ''.join(no_punctuation)\n    # Now eliminate any stopwords\n    return [word for word in no_punctuation.split() if word.lower() not in stopwords.words('english')]    ","e0469528":"from sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.decomposition import LatentDirichletAllocation\n\nvectorizer = TfidfVectorizer(analyzer=message_text_process)","c08cc27b":"n_top_words = 20\nlda = LatentDirichletAllocation()\n\ndef print_top_words(model, feature_names, n_top_words):\n    for topic_idx, topic in enumerate(model.components_):\n        message = \"Topic #%d: \" % topic_idx\n        message += \" \".join([feature_names[i]\n                             for i in topic.argsort()[:-n_top_words - 1:-1]])\n        print(message)\n    print()\n    \ndef find_top_comments(corpus):\n    tfidf_transformer = vectorizer.fit_transform(corpus)\n    tf_feature_names = vectorizer.get_feature_names()    \n    lda.fit_transform(tfidf_transformer)\n    print_top_words(lda, tf_feature_names, n_top_words)","766af967":"find_top_comments(df['pros'])","02653fbc":"find_top_comments(df['cons'])","e0bb947b":"find_top_comments(df[df.summary.notnull()].summary)","71fc13ac":"df[df.summary.notnull()].summary.head(25)","454283d1":"from wordcloud import WordCloud, STOPWORDS \nimport matplotlib.pyplot as plt \n\ndef generate_word_cloud(text):  \n    comment_words = ' '\n    stopwords = set(STOPWORDS) \n\n    # iterate through the csv file \n    for val in text: \n\n        # typecaste each val to string \n        val = str(val) \n\n        # split the value \n        tokens = val.split() \n\n        # Converts each token into lowercase \n        for i in range(len(tokens)): \n            tokens[i] = tokens[i].lower() \n\n        for words in tokens: \n            comment_words = comment_words + words + ' '\n        \n    wordcloud = WordCloud(width = 800, height = 800, \n                background_color ='white', \n                stopwords = stopwords, \n                min_font_size = 10).generate(comment_words) \n    \n    # plot the WordCloud image                        \n    plt.figure(figsize = (8, 8), facecolor = None) \n    plt.imshow(wordcloud) \n    plt.axis(\"off\") \n    plt.tight_layout(pad = 0) \n\n    plt.show() ","ab304337":"grouped = df.groupby('company')\n\nfor name,group in grouped:\n    print (name)\n    generate_word_cloud(group['summary'])\n    print('cons')\n    generate_word_cloud(group['cons'])\n    print('pros')\n    generate_word_cloud(group['pros'])\n    print('Advice to Management')\n    generate_word_cloud(group['advice-to-mgmt'])\n    ","74f71ca5":"## Assuming 4 and above to be very good rating, and less than 4 to be not so good, some observations from the above plot are for Work\/Life Balance\n### 46.2% people in amazon have a W\/L balance\n### 54% apple \n### 70.5% FB\n### 76.3% Google\n### 60.6% Microsoft\n### 50.5% Netflix","96de5408":"# EDA","da6fc595":"## In cultural values,\n### Facebook leads with 89%\n### Amazon 48%\n### Apple 60%\n### GOogle 62%\n### Microsoft 45%\n### Netflix 36%","945a968c":"## Assuming 4 and above to be very good rating, and less than 4 to be not so good, some observations from the above plot are:\n### 72% people in FB have rated it 5 and overall 87% people are very happy working in FB. This is followed by Gogle with 85%\n### NetFlix has got a 55-45% which means people have neutral say about the company\n### 60% people are happy with Amazon\n### 72% people are happy with Apple\n### 68% people are happy with Microsoft","97325e58":"# Heatmaps","e613c422":"# Plots of Company-wise Ratings on various parameters","154090c4":"# Summary, Pros, Cons Columns Analysis - Top 10 comments","dd4ab11c":"# WordClouds of Summary \/ Pros \/ Cons Columns","deca1ec5":"# Import Libraries & Data"}}