{"cell_type":{"8e8d7dc2":"code","ae5d808c":"code","e70b6ac5":"code","24148e8b":"code","36f9ea72":"code","b0c45d58":"code","bd2424c9":"code","f671cd84":"code","b776c844":"code","225244b7":"code","c534cdf5":"code","8097034f":"code","a1e31b52":"code","700525ff":"code","3fbe00ca":"code","239860c7":"code","3a5ed957":"code","48e24459":"code","dcd45207":"code","dd338353":"code","e53328d0":"code","54951291":"code","8c49beb7":"markdown","e1b5b0e0":"markdown","f133817a":"markdown","791b1099":"markdown","ef517b66":"markdown","267d62f6":"markdown","ce2f8281":"markdown"},"source":{"8e8d7dc2":"#Bibliotecas utilizadas\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport time\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import GaussianNB, BernoulliNB, MultinomialNB\n%matplotlib inline","ae5d808c":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","e70b6ac5":"train.sample(5)","24148e8b":"plt.figure(figsize=(9,6))\nsns.barplot(x='Sex',y='Survived',data=train)","36f9ea72":"plt.figure(figsize=(9,6))\nsns.barplot(x='Pclass', y='Survived', data=train)","b0c45d58":"train.drop(['Name', 'Ticket', 'Cabin'], axis=1, inplace=True)\ntest.drop(['Name', 'Ticket', 'Cabin'], axis=1, inplace=True)","bd2424c9":"train.isnull().sum()","f671cd84":"from cesium import featurize\nfrom sklearn.impute import SimpleImputer \nimputer = SimpleImputer(missing_values=np.nan, strategy='mean')","b776c844":"train_numerico = train.drop(['Sex','Embarked'], axis=1)\ntest_numerico = test.drop(['Sex','Embarked'], axis=1)","225244b7":"imputer.fit(train_numerico)","c534cdf5":"train_no_null = imputer.transform(train_numerico)","8097034f":"imputer.fit(test_numerico)\ntest_no_null = imputer.transform(test_numerico)","a1e31b52":"train_tr = pd.DataFrame(train_no_null, columns=train_numerico.columns)\ntest_tr = pd.DataFrame(test_no_null, columns=test_numerico.columns)","700525ff":"train_cat = train[['Sex', 'Embarked']]\ntest_cat = test[['Sex', 'Embarked']]\n","3fbe00ca":"train_cat_encoded = pd.get_dummies(train_cat)\ntest_cat_encoded = pd.get_dummies(test_cat)","239860c7":"train_cat_encoded.head()","3a5ed957":"new_train = train_tr.join(train_cat_encoded)\nnew_test = test_tr.join(test_cat_encoded)","48e24459":"from sklearn.model_selection import train_test_split\n\npredictors = new_train.drop(['Survived', 'PassengerId'], axis=1)\ntarget = train[\"Survived\"]\nx_train, x_val, y_train, y_val = train_test_split(predictors, target, test_size = 0.2, random_state = 0)","dcd45207":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\ndecisiontree = DecisionTreeClassifier()\ndecisiontree.fit(x_train, y_train)\ny_pred = decisiontree.predict(x_val)\nacc_decisiontree = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_decisiontree)","dd338353":"from sklearn.ensemble import GradientBoostingClassifier\ngbk = GradientBoostingClassifier()\ngbk.fit(x_train, y_train)\ny_pred = gbk.predict(x_val)\nacc_gbk = round(accuracy_score(y_pred, y_val) * 100, 2)\nprint(acc_gbk)","e53328d0":"ids = test['PassengerId']\npredictions = gbk.predict(new_test.drop('PassengerId', axis=1))","54951291":"Titanic_Katyane = pd.DataFrame({ 'PassengerId' : ids, 'Survived': predictions.astype('int64') })\nTitanic_Katyane.to_csv('Titanic_Katyane.csv', index=False)","8c49beb7":"Portanto, com os resultados de precis\u00e3o obtidos, a melhor op\u00e7\u00e3o \u00e9 utilizar o Algoritmo de Aumente de Gradiente","e1b5b0e0":"Podemos perceber que os passageiros da primeira e segunda classe tiveram mais chance de sobreviver.","f133817a":"Limpeza dos dados","791b1099":"Removendo dados irrelevantes","ef517b66":"Algoritmo de aumento de gradiente","267d62f6":"Podemos perceber que temos mais sobreviventes do sexo feminino.","ce2f8281":"\u00c1rvore de Decis\u00e3o"}}