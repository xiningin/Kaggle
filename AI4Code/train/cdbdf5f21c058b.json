{"cell_type":{"961f6ad2":"code","2d662fde":"code","5110e492":"code","bde4737a":"code","e9a87afa":"code","f33dc609":"code","270ff9c2":"code","8c8cc0b7":"code","fe9be810":"code","27704038":"code","b02bd157":"code","56c7dedb":"code","7429144b":"code","96e7cf84":"code","9df894e9":"code","b0d2c598":"code","36a2b39d":"code","1dc3a1a0":"code","b0ce46e9":"code","f44755f3":"code","f4968718":"code","1ad105d2":"code","fb03eb4e":"code","31e8f858":"code","9dbf151c":"markdown","9c80cbe9":"markdown"},"source":{"961f6ad2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2d662fde":"train_data=pd.read_csv('..\/input\/used-cars-price-prediction\/train-data.csv')\ntrain_data.head()","5110e492":"train_data.shape","bde4737a":"train_data.isnull().sum()","e9a87afa":"len(train_data['Name'].unique())","f33dc609":"train_data.drop(['New_Price','Unnamed: 0'],axis=1,inplace=True)","270ff9c2":"train_data.shape","8c8cc0b7":"# Lets check datatypes of features\ntrain_data.dtypes","fe9be810":"train_data[\"Engine\"] = train_data[\"Engine\"].str.replace('CC',' ')\ntrain_data['Power'] = train_data['Power'].str.replace('bhp', '')\ntrain_data['Mileage'] = train_data['Mileage'].str.replace('kmpl', '')\ntrain_data['Mileage'] = train_data['Mileage'].str.replace('km\/kg', '')","27704038":"train_data['Engine']=train_data['Engine'].astype(float)\ntrain_data['Mileage']=train_data['Mileage'].astype(float)","b02bd157":"train_data.head()","56c7dedb":"train_data['Owner_Type'].value_counts()","7429144b":"train_data.corr()['Price']","96e7cf84":"train_data.plot(x='Engine',y='Price',kind='scatter')","9df894e9":"from sklearn.model_selection import train_test_split\n\nX= train_data.drop(['Price'],axis=1)\ny= train_data['Price']\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=40)","b0d2c598":"from sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder, StandardScaler\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.compose import make_column_transformer","36a2b39d":"num_pipe1=make_pipeline(StandardScaler(),SimpleImputer(strategy='mean'))\n\ncat_pipe2=make_pipeline(SimpleImputer(strategy='most_frequent'),OneHotEncoder(handle_unknown='ignore'))\n\nct=make_column_transformer((num_pipe1,['Year','Kilometers_Driven','Mileage','Engine','Seats']),\n                           (cat_pipe2,['Name', 'Location','Fuel_Type','Transmission','Owner_Type','Power']),\n                          remainder='passthrough')","1dc3a1a0":"from sklearn.linear_model import LinearRegression","b0ce46e9":"LR_pipeline=make_pipeline(ct,LinearRegression())\nLR_pipeline.fit(X_train,y_train)","f44755f3":"LR_pipeline.score(X_train, y_train), LR_pipeline.score(X_test, y_test)","f4968718":"import xgboost as xgb","1ad105d2":"xg_pipeline=make_pipeline(ct,xgb.XGBRegressor(max_depth=9,n_estimators=600,learning_rate=0.06,colsample_bytree=0.38))\nxg_pipeline.fit(X_train,y_train)","fb03eb4e":"xg_pipeline.score(X_train,y_train)","31e8f858":"xg_pipeline.score(X_test,y_test)","9dbf151c":"# Used Cars Price Prediction \n# Predict the price of an unknown car. Build your own Algo for cars 24 !!","9c80cbe9":"# Here we drop columns New_price and Unnamed: 0 "}}