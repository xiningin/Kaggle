{"cell_type":{"16ca9129":"code","82831fe6":"code","9415c823":"code","e90f61e9":"code","785c4e79":"code","740784c0":"code","754f68de":"code","5b4965d1":"code","0e89e8b8":"code","46b3cb7d":"code","3af7a9dd":"code","4122b482":"code","265e2e1a":"code","04e9409e":"code","6eef8909":"code","0e6a4c23":"code","242f9e62":"code","000211e2":"markdown","de01979c":"markdown","522853d4":"markdown","b3cb0dc8":"markdown","15542b17":"markdown","9173a620":"markdown","9ecccfc8":"markdown","52e1bf70":"markdown","aff33d46":"markdown","2863d2b9":"markdown","c5360a14":"markdown","fe4ac40d":"markdown","5711b163":"markdown","afc17bcd":"markdown","4bd68be7":"markdown","2323569b":"markdown","b709b707":"markdown","305849b0":"markdown"},"source":{"16ca9129":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","82831fe6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nprint('Libraries imported succesfully')","9415c823":"url='\/kaggle\/input\/startup-logistic-regression\/50_Startups.csv'\ndata=pd.read_csv(url)\ndata.head()","e90f61e9":"print('There are ',data.shape[0],'rows and ',data.shape[1],'columns in the dataset.')","785c4e79":"print('There are',data.duplicated().sum(),'duplicate values in the dateset.')","740784c0":"data.isnull().sum()","754f68de":"data.info()","5b4965d1":"data.describe()","0e89e8b8":"data.corr()","46b3cb7d":"# Correlation matrix\nc=data.corr()\nsns.heatmap(c,annot=True,cmap='Blues')","3af7a9dd":"sns.pairplot(data)","4122b482":"independent=['R&D Spend','Administration','Marketing Spend']\ny=data['Profit'].to_numpy()\ny=y.reshape(-1,1)\nx=data[independent].to_numpy()\nx,y","265e2e1a":"# Splitting the data into train and test datasets\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,train_size=0.7,random_state=0)\nx_train","04e9409e":"from sklearn.linear_model import LinearRegression\nmodel=LinearRegression()\nmodel.fit(x_train,y_train)\nprint('Model Trained')","6eef8909":"y_pred=model.predict(x_test)\ny_pred","0e6a4c23":"df=pd.DataFrame(data={'Predicted value':y_pred.flatten(),'Actual Value':y_test.flatten()})\ndf","242f9e62":"from sklearn.metrics import mean_absolute_error\nmae=mean_absolute_error(y_pred,y_test)\nmae","000211e2":"#### Schema of dataset","de01979c":"# Linear Regression Model\n## by Vikram Jeet Singh","522853d4":"#### Duplicated Values","b3cb0dc8":"##### As we can observe that all the columns have the right data type they should have, so we need not to change anything.","15542b17":"#### So, the mean absolute error is 6489.6601704866425. Therefore our predicted value can be 6489.6601704866425 units greater than or less than the actual value.","9173a620":"#### Now let's use the data above and make a Linear regression model from the same.","9ecccfc8":"After this Pairplot, it is confirmed that there is a direct relationship of all the three numeric columns with our Profit. So lets use this relationship and make a model.","52e1bf70":"## Exploratory Data Analysis","aff33d46":"##### Now lets see how much the model's prediction differs from actual values by comparing predictions and actual values\n","2863d2b9":"##### Therefore there are zero null values in the dataset.","c5360a14":"##### As we can see that the predicted value is somewhat near to the actual values, therefore, we can use this model for prediction. But first we need to calculate how much is the error generated.","fe4ac40d":"#### Null Values","5711b163":"#### Dimensions of Dataset","afc17bcd":"## Analyzing the data","4bd68be7":"## Creating Model","2323569b":"#### Correlation between the columns of dataset.","b709b707":"#### Descriptive analysis of data","305849b0":"From the heatmap above we can obseve that all three columns have a direct relationship with the profit, which is our target variable."}}