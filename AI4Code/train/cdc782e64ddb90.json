{"cell_type":{"6d58d85a":"code","0f15fb59":"code","fca8d5c8":"code","9cb070ee":"code","9faccac1":"code","4e790fc2":"code","5b731a60":"code","79934a2c":"code","a3ea5eb1":"code","7aa29d37":"code","f518e334":"code","bc10da7d":"code","4fde6b8b":"code","06111c66":"code","ee1946f5":"code","069054cb":"code","ee820c3f":"code","c5799a54":"code","cdd73c44":"code","c8097a2d":"code","0fcb4eb4":"code","1510e36f":"code","2a7c36d3":"code","286c2538":"code","5078c121":"code","22768a82":"code","ac3a0ccf":"code","05825bb5":"code","89b82e83":"code","367bcd35":"code","d9c44d0a":"code","c6048d68":"code","b4d26191":"code","45643b6e":"code","1b6dd03a":"code","e35a5da6":"markdown","039139da":"markdown","1d0259a4":"markdown","30d525a2":"markdown","0dc49019":"markdown","596e0ac5":"markdown","d437d9c9":"markdown","823ba36a":"markdown","3ec12045":"markdown","76ae2429":"markdown","95100860":"markdown","36683fbd":"markdown"},"source":{"6d58d85a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nfrom plotnine import *\nimport warnings\nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0f15fb59":"sample = pd.read_csv('\/kaggle\/input\/sample-supermarket-dataset\/SampleSuperstore.csv')\nsample.head()","fca8d5c8":"sample.shape","9cb070ee":"sample.info()","9faccac1":"sample.describe()","4e790fc2":"# Chaecking the dupilication in data\nsample.duplicated().sum()","5b731a60":"sample.drop_duplicates(inplace = True)","79934a2c":"sample.head()","a3ea5eb1":"sample.nunique()","7aa29d37":"#Deleting the Variable.\ncol=['Postal Code']\nsample1=sample.drop(columns=col,axis=1)","f518e334":"#Correlation Between Variables.\nsample1.corr()","bc10da7d":"# Covariance of columns\nsample1.cov()","4fde6b8b":"sample1.head()","06111c66":"plt.figure(figsize=(16,8))\nplt.bar('Sub-Category','Category', data=sample1)\nplt.title('Category vs Sub Category')\nplt.xlabel('Sub-Catgory')\nplt.ylabel('Category')\nplt.xticks(rotation=45)\nplt.show()","ee1946f5":"sample1.corr()","069054cb":"sample1.hist(bins=50 ,figsize=(20,15))\nplt.show();","ee820c3f":"# Count the total repeatable states\nsample1['State'].value_counts()","c5799a54":"plt.figure(figsize=(15,15))\nsns.countplot(x=sample1['State'])\nplt.xticks(rotation=90)\nplt.title(\"STATE\")\nplt.show()","cdd73c44":"Profit_plot = (ggplot(sample, aes(x='Sub-Category', y='Profit', fill='Sub-Category')) + geom_col() + coord_flip()\n+ scale_fill_brewer(type='div', palette=\"Spectral\") + theme_classic() + ggtitle('Pie Chart'))\n\ndisplay(Profit_plot)","c8097a2d":"sns.set(style=\"whitegrid\")\nplt.figure(2, figsize=(20,15))\nsns.barplot(x='Sub-Category',y='Profit', data=sample, palette='Spectral')\nplt.suptitle('Pie Consumption Patterns in the United States', fontsize=16)\nplt.show()","0fcb4eb4":"ggplot(sample, aes(x='Ship Mode', fill = 'Category')) + geom_bar(stat = 'count')","1510e36f":"figsize=(15,10)\nsns.pairplot(sample1,hue='Sub-Category')\nplt.show","2a7c36d3":"flip_xlabels = theme(axis_text_x = element_text(angle=90, hjust=1),figure_size=(10,5),\n                     axis_ticks_length_major=10,axis_ticks_length_minor=5)\n(ggplot(sample, aes(x='Sub-Category', fill='Sales')) + geom_bar() + facet_wrap(['Segment']) \n+ flip_xlabels +theme(axis_text_x = element_text(size=12))+ggtitle(\"Sales From Every Segment Of United States of Whole Data\"))","286c2538":"flip_xlabels = theme(axis_text_x = element_text(angle=90, hjust=1),figure_size=(10,5),\n                     axis_ticks_length_major=10,axis_ticks_length_minor=5)\n(ggplot(sample, aes(x='Sub-Category', fill='Discount')) + geom_bar() + facet_wrap(['Segment']) \n+ flip_xlabels +theme(axis_text_x = element_text(size=12))+ggtitle(\"Discount on Categories From Every Segment Of United States of Whole Data\"))","5078c121":"flip_xlabels = theme(axis_text_x = element_text(angle=90, hjust=10),figure_size=(10,10),\n                     axis_ticks_length_major=50,axis_ticks_length_minor=50)\n(ggplot(sample1, aes(x='Category', fill='Sales')) + geom_bar() + theme(axis_text_x = element_text(size=10)) \n+ facet_wrap(['Region']) + flip_xlabels+ ggtitle(\"Sales From Every Region Of United States of Whole Data\"))","22768a82":"plt.figure(figsize=(10,4))\nsns.lineplot('Discount','Profit', data=sample1 , color='y',label='Discount')\nplt.legend()\nplt.show()","ac3a0ccf":"import plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots","05825bb5":"state_code = {'Alabama': 'AL','Alaska': 'AK','Arizona': 'AZ','Arkansas': 'AR','California': 'CA','Colorado': 'CO','Connecticut': 'CT','Delaware': 'DE','Florida': 'FL','Georgia': 'GA','Hawaii': 'HI','Idaho': 'ID','Illinois': 'IL','Indiana': 'IN','Iowa': 'IA','Kansas': 'KS','Kentucky': 'KY','Louisiana': 'LA','Maine': 'ME','Maryland': 'MD','Massachusetts': 'MA','Michigan': 'MI','Minnesota': 'MN','Mississippi': 'MS','Missouri': 'MO','Montana': 'MT','Nebraska': 'NE','Nevada': 'NV','New Hampshire': 'NH','New Jersey': 'NJ','New Mexico': 'NM','New York': 'NY','North Carolina': 'NC','North Dakota': 'ND','Ohio': 'OH','Oklahoma': 'OK','Oregon': 'OR','Pennsylvania': 'PA','Rhode Island': 'RI','South Carolina': 'SC','South Dakota': 'SD','Tennessee': 'TN','Texas': 'TX','Utah': 'UT','Vermont': 'VT','Virginia': 'VA','District of Columbia': 'WA','Washington': 'WA','West Virginia': 'WV','Wisconsin': 'WI','Wyoming': 'WY'}\nsample1['state_code'] = sample1.State.apply(lambda x: state_code[x])","89b82e83":"state_data = sample1[['Sales', 'Profit', 'state_code']].groupby(['state_code']).sum()\n\n\nfig = go.Figure(data=go.Choropleth(\n    locations=state_data.index, \n    z = state_data.Sales, \n    locationmode = 'USA-states', \n    colorscale = 'Reds',\n    colorbar_title = 'Sales in USD',\n))\n\nfig.update_layout(\n    title_text = 'Total State-Wise Sales',\n    geo_scope='usa',\n    height=800,\n)\n\nfig.show()","367bcd35":"def state_data_viewer(states):\n    \"\"\"Plots the turnover generated by different product categories and sub-categories for the list of given states.\n    Args:\n        states- List of all the states you want the plots for\n    Returns:\n        None\n    \"\"\"\n    product_data = sample1.groupby(['State'])\n    for state in states:\n        data = product_data.get_group(state).groupby(['Category'])\n        fig, ax = plt.subplots(1, 3, figsize = (28,5))\n        fig.suptitle(state, fontsize=14)        \n        ax_index = 0\n        for cat in ['Furniture', 'Office Supplies', 'Technology']:\n            cat_data = data.get_group(cat).groupby(['Sub-Category']).sum()\n            sns.barplot(x = cat_data.Profit, y = cat_data.index, ax = ax[ax_index])\n            ax[ax_index].set_ylabel(cat)\n            ax_index +=1\n        fig.show()","d9c44d0a":"states = ['California', 'Washington', 'Mississippi', 'Arizona', 'Texas']\nstate_data_viewer(states)","c6048d68":"x = sample.iloc[:, [9, 10, 11, 12]].values\n\nfrom sklearn.cluster import KMeans\nwcss = []\n\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', \n                    max_iter = 300, n_init = 10, random_state = 0).fit(x)\n    wcss.append(kmeans.inertia_)","b4d26191":"sns.set_style(\"whitegrid\") \nsns.FacetGrid(sample, hue =\"Sub-Category\",height = 6).map(plt.scatter,'Sales','Quantity')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], \n            s = 100, c = 'yellow', label = 'Centroids')\n\nplt.legend()\nplt.show()","45643b6e":"sns.set_style(\"whitegrid\") \nsns.FacetGrid(sample, hue =\"Sub-Category\",height = 6).map(plt.scatter,'Sales','Profit')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], \n            s = 100, c = 'yellow', label = 'Centroids')\n\nplt.legend()\nplt.show()","1b6dd03a":"fig, ax = plt.subplots(figsize = (10 , 6))\nax.scatter(sample1[\"Sales\"] , sample1[\"Profit\"])\nax.set_xlabel('Sales')\nax.set_ylabel('Profit')\nax.set_title('Sales vs Profit')\nplt.show()","e35a5da6":"* Above Pie chart Shows the profit and loss of each and every subcategories.Here from graph we can visualize that \"binders\" sub-category has suffered the highest amount of loss and also profit amongst all other sub-Categories (For now we can't say that what is the reason it may be because of discounts given on binders subcategory)","039139da":"## Please Upvote my work Thank you.","1d0259a4":"* One thing to be noted is that while the superstore is incurring losses due to giving discounts on its products, they can't stop giving discounts of their products. Most of the heavy discounts are during festivals, end-of-season and clearance sales which are necessary so that the store can make space in their warehouses for fresh stock. Also, by incurring small losses, the company gains in the future by attracting more long term customers. Therefore, the small losses from discounts are an essential part of company's business","30d525a2":"**Next,\"Copiers\" Sub-category has gain highest amount of profit with no loss.There are other sub-categories too who are not faced any kind of losses but their profit margins are also low.**\n\n**Next,Suffering from highest loss is machines.**","0dc49019":"# EDA- To Explore Business Analytics","596e0ac5":"# EDA- DATA VISUALIZATION","d437d9c9":"### From the Above data Visualization and Clustering we can see that in Which states and in which Category Sales and profits are High or less,We can improve in that States By Providing Discounts in prefered Range so that Company and cosumer both will be in profit.So For Deciding that Range we have to do some Technical Analysis.One can Do it through Factor Analysis,or also can Do it throgh neural networks.","823ba36a":"## Objective:\n\n**\u25cf Perform \u2018Exploratory Data Analysis\u2019 on dataset  \u2018SampleSuperstore\u2019**\n\n**\u25cf As a business manager, try to find out the weak areas where you can work to make more profit.** \n\n**\u25cf What all business problems you can derive by exploring the  data?** ","3ec12045":"    From above Graph we can say that \"Home Office\" segment has less purchased Sub-Categories and in that \n    \"Tables\",\"Supplies\",\"Machines\",\"Copiers\",\"Bookcases\" has the lowest Sales. \"Consumer\" has purchased more sub-categories as compared to other segments.","76ae2429":"Now, let us analyze the sales of a few random states from each profit bracket (high profit, medium profit, low profit, low loss and high loss) and try to observe some crucial trends which might help us in increasing the sales.\n\n**We have a few questions to answer here.**\n\n**1 What products do the most profit making states buy?**\n\n**2 What products do the loss bearing states buy?**\n\n**3 What product segment needs to be improved in order to drive the profits higher?**","95100860":"**Let's explore more about these outliers by using boxplots.**\n\n**Ist we'll check Sales from Every Segments of Whole Data**","36683fbd":"# Using Cluster Analysis(K-Mean Clustering)"}}