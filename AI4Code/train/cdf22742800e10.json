{"cell_type":{"39484312":"code","10b276ad":"code","f3c95974":"code","b396eabc":"code","aea1fbfc":"code","246c0562":"code","9bf7a444":"code","ad143824":"code","e88284ae":"code","7de6e027":"code","b13a44c1":"code","4c2684b3":"code","8d4ae328":"code","e096ac17":"code","77b4268d":"code","44a6cafa":"code","0d05d1aa":"code","f3ed6157":"code","467f3c76":"code","0d773c6a":"code","fd7c7046":"code","a102b1cb":"code","77735877":"code","52e7930b":"code","67b04e5c":"code","66c7fc75":"code","6991c386":"code","3548e3ab":"code","88d36969":"code","3991fb34":"code","9b013427":"code","35425166":"code","bc2d1755":"code","df7fc472":"code","d5de5297":"code","af40075e":"code","75da45ec":"code","f239667b":"code","6a1343b8":"code","be16f638":"code","4149b794":"markdown","512cd63c":"markdown","ce33063c":"markdown","ca17eac0":"markdown","6fb7a152":"markdown","16dc82ca":"markdown","b230c092":"markdown","4a17e341":"markdown","cb94c3a2":"markdown","8bf34335":"markdown","6e3e56a7":"markdown","838b1997":"markdown","2fa6ff22":"markdown","0fb4ab67":"markdown","ed2279ca":"markdown"},"source":{"39484312":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nimport category_encoders as ce","10b276ad":"# Install 7zip and unzip all files\n!apt install --assume-yes p7zip-full\n!7z x ..\/input\/mercari-price-suggestion-challenge\/train.tsv.7z -y\n!7z x ..\/input\/mercari-price-suggestion-challenge\/test.tsv.7z -y\n!7z x ..\/input\/mercari-price-suggestion-challenge\/test_stg2.tsv.zip -y\n!7z x ..\/input\/mercari-price-suggestion-challenge\/sample_submission.csv.7z -y\n!7z x ..\/input\/mercari-price-suggestion-challenge\/sample_submission_stg2.csv.zip -y","f3c95974":"train = pd.read_csv(\"train.tsv\",sep = '\\t')","b396eabc":"train.shape","aea1fbfc":"train.head()","246c0562":"train['log_price'] = np.log1p(train.price)","9bf7a444":"from scipy.stats import norm\n\nfig, axes = plt.subplots(1, 3, figsize=(10,4))\n\naxes[0].set_title('Price')\nsns.distplot(train.price, ax=axes[0], kde=False)\naxes[0].grid()\n\naxes[1].set_title('Price < 75')\nsns.distplot(train.price[train.price<75], ax=axes[1], kde=False)\naxes[1].grid()\n\naxes[2].set_title('log(Price + 1)')\nsns.distplot(train.log_price, ax=axes[2], fit=norm, kde=False)\naxes[2].set_xticks(range(0,9))\naxes[2].grid()\n\nfig.tight_layout()","ad143824":"def plot_distribution_and_violin(variable):\n    fig, axes = plt.subplots(2,1,figsize=(5,6), sharex=True)\n    axes[0].set_title(variable)\n    sns.countplot(x=variable, data=train, palette=\"ch:.25\", color=\"c\", ax=axes[0])\n    sns.violinplot(x=variable, y='log_price', palette=\"ch:.25\", data=train, ax=axes[1])\n    fig.tight_layout()","e88284ae":"plot_distribution_and_violin('item_condition_id')","7de6e027":"plot_distribution_and_violin('shipping')\nprint('shipping - 1 if shipping fee is paid by seller and 0 by buyer')","b13a44c1":"avg_log_price = train.groupby('shipping')['log_price'].mean()\ndiff = np.expm1(avg_log_price[0]) - np.expm1(avg_log_price[1])\nprint(f'Shipping shipping is paid by buyer ${diff:.3} greater than shipping is paid by seller')","4c2684b3":"train[train.category_name.str.count('\/')!=2].groupby('category_name').count()#sort_values(ascending=False)","8d4ae328":"def transform_split_category_name(df):\n    category_split = df['category_name'].str.split(r'\/', n=2, expand=True)\n    for i in [0,1,2]:\n        df['cat_level_' + str(i)] = category_split[i]\n    return df","e096ac17":"train = transform_split_category_name(train)","77b4268d":"train.head()","44a6cafa":"gb = train.groupby('item_description')['train_id'].count()\ngb[gb>500].sort_values(ascending=False)","0d05d1aa":"def transform_missing_brand(df):\n    df['missing_brand'] = df.brand_name.isna()\n    return df","f3ed6157":"train = transform_missing_brand(train)","467f3c76":"plot_distribution_and_violin('missing_brand')","0d773c6a":"# Most common brands\ntrain.groupby('brand_name')['train_id'].count().sort_values(ascending=False).head(40)","fd7c7046":"class baseline_model():\n    \n    def fit(self):\n        pass\n    \n    def predict(self, X):\n        return np.zeros(shape=len(X))","a102b1cb":"m = baseline_model()\nm.fit()\nm.predict([[1,2,3],\n           [4,5,6]])","77735877":"X = train[[col for col in train.columns if col not in ['price', 'log_price']]]\ny = train['log_price']","52e7930b":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","67b04e5c":"# Select necessary columns\nX_train = X_train[['item_condition_id', 'category_name', 'brand_name', 'shipping']]\nX_test = X_test[['item_condition_id', 'category_name', 'brand_name', 'shipping']]","66c7fc75":"te = ce.TargetEncoder()\nte.fit(X_train, y_train)\nX_train = te.transform(X_train)\nX_test = te.transform(X_test)","6991c386":"from sklearn.linear_model import LinearRegression","3548e3ab":"lr = LinearRegression()","88d36969":"lr.fit(X_train, y_train)","3991fb34":"predictions = lr.predict(X_test)","9b013427":"predictions","35425166":"sns.jointplot(predictions, y_test, kind=\"hex\")","bc2d1755":"## Generate submissions\nkaggle_test = pd.read_csv(\"test_stg2.tsv\",sep = '\\t')","df7fc472":"kaggle_test = transform_split_category_name(kaggle_test)\nX_kaggle_test = kaggle_test\nX_kaggle_test = X_kaggle_test[['item_condition_id', 'category_name', 'brand_name', 'shipping']]\nX_kaggle_test = te.transform(X_kaggle_test)","d5de5297":"X_kaggle_test.head()","af40075e":"output = lr.predict(X_kaggle_test)","75da45ec":"submission = np.expm1(output)","f239667b":"submission_df = pd.DataFrame({'test_id': kaggle_test.test_id, 'price': submission})","6a1343b8":"submission_df.to_csv('submission.csv', index=False)","be16f638":"submission_df.shape","4149b794":"## Exploring Price\n\nHypothesis: Price will follow a log-normal distribution","512cd63c":"## Analyze Brands","ce33063c":"\n# Mercari Price Suggestion Algorithm","ca17eac0":"#### Decompose category\n\nCategory can be decomposed into three levels (ie. Men\/Tops\/T-shirts). In the data they are delimited by forward slashes. Some of the third level categories have slashes in the name, but it is still reliable to split on the first two slashes.","6fb7a152":"#### Analyze Description\nHypothesis: There will be some very common descriptions that can be treated as missing values.","16dc82ca":"## Test Train Split","b230c092":"## Exploring Data Attributes","4a17e341":"Hypothesis: Items in better condition will have a higher average price","cb94c3a2":"Ideas:\n\n- Reduce the dimensionality of the brand column by encoding similar brand to the same value (gucci, louis) > brand_1 (adidas, nike) > brand_2\n- Feature (binary) is brand in title\n- Identify certain n-grams that change value ('smoke free', 'minor damage')\n- Remove tag words? Could be challenging...\n- Look for typos in brand_name (probably not many because the field autofills)","8bf34335":"Items where shipping is paid by seller (1) will be priced higher on average than where shipping is paid by buyer (0)","6e3e56a7":"## Initial Model\n\n- Linear Regression\n- Target encoded categories\n- Target encoded brand_name\n- Item condition\n- Shipping","838b1997":"Actually shipping paid by buyer was greater. Maybe that means \"free shipping\" is more commonly used for cheaper items.","2fa6ff22":"# Baseline Models\n\nHere is a baseline model that predicts based on the average price of one field","0fb4ab67":"There are 82,489 items with 'No description yet' which can be considered a missing value, but other very common short phrases are also duplicated often. \n\nThe length of the description may have some predictive power.","ed2279ca":"The price follows a log-normal distribution with some spikes around round numbers such as 10, 25, 30, and 40 dollars."}}