{"cell_type":{"44d57e65":"code","e9bfad4f":"code","b299432e":"code","ece1e5a7":"code","dc187620":"code","a3cc79a1":"code","dae4f36d":"code","d893a32c":"code","5d03a4c0":"code","091fa690":"code","8d83156f":"code","c5926a95":"code","b59af554":"code","b5555351":"code","d9441170":"code","4bd80b49":"markdown","2cdb2aa7":"markdown","6e1f61a5":"markdown"},"source":{"44d57e65":"import pandas as pd\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error","e9bfad4f":"#importing the dataset \ndata = '..\/input\/melbourne-housing-snapshot\/melb_data.csv'\n#stoing the data\nmelbourne_data = pd.read_csv(data)\n#getting the basic insight of the data\nmelbourne_data.describe()\n","b299432e":"melbourne_data.head(5)","ece1e5a7":"melbourne_data.columns\n","dc187620":"#dropping the null values \nmelbourne_data.dropna(axis=0)","a3cc79a1":"y = melbourne_data.Price","dae4f36d":"melbourne_features = ['Rooms','Bathroom','Landsize','Lattitude','Longtitude']","d893a32c":"X = melbourne_data[melbourne_features]","5d03a4c0":"X.describe()","091fa690":"X.head(5)","8d83156f":"melbourne_model = DecisionTreeRegressor(random_state = 1)\nmelbourne_model.fit(X, y)","c5926a95":"print('Printing the values of the first five houses')\nprint(X.head())\nprint('The prediction of the values of the houses are:')\nprint(melbourne_model.predict(X.head()))","b59af554":"train_X,val_X,train_y,val_y = train_test_split(X,y,random_state = 0)\n\ndef magg(max_leaf_nodes,train_X,val_X,train_y,val_y):\n    model = DecisionTreeRegressor(max_leaf_nodes=max_leaf_nodes, random_state =100)\n    model.fit(train_X,train_y)\n    predicted_y = model.predict(val_X)\n    error = mean_absolute_error(val_y,predicted_y)\n    return(error)","b5555351":"for max_leaf_nodes in [2,16,128,256,512,1024]:\n    err = magg(max_leaf_nodes,train_X,val_X,train_y,val_y)\n    print(\"Max Leaf Nodes & Mean Absolue Error =\",(max_leaf_nodes,err))","d9441170":"\n\nforest_model = RandomForestRegressor(random_state = 1)\nforest_model.fit(train_X,train_y)\nmelbourne_predicted_y = forest_model.predict(val_X)\nprint(mean_absolute_error(val_y,melbourne_predicted_y))","4bd80b49":"Here's the takeaway: Models can suffer from either:\n\nOverfitting: capturing spurious patterns that won't recur in the future, leading to less accurate predictions, or\nUnderfitting: failing to capture relevant patterns, again leading to less accurate predictions.\nWe use validation data, which isn't used in model training, to measure a candidate model's accuracy. This lets us try many candidate models and keep the best one.","2cdb2aa7":"Random forrest are an aggregate of the decision trees and provide more accurate results \n","6e1f61a5":"**The steps to building and using a model are:\n**\n\n**Define:** What type of model will it be? A decision tree? Some other type of model? Some other parameters of the model type are specified too.\n\n**Fit:** Capture patterns from provided data. This is the heart of modeling.\n\n**Predict:** Just what it sounds like\n\n**Evaluate:** Determine how accurate the model's predictions are."}}