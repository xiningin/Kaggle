{"cell_type":{"3e402aab":"code","51fb3a8d":"code","bbf2d9ea":"code","2479ead5":"code","faf38af0":"code","0f8782c0":"code","1f407780":"code","43d5ef3e":"code","1e111edb":"code","03a2cedf":"code","17f50319":"code","04671d5a":"code","5cd3f460":"code","f4bda16d":"code","2de0c5a4":"code","84a6ce95":"code","780e2175":"code","22178eb1":"code","05ff121d":"code","0c664dc5":"code","79c22d72":"code","69a14bb6":"code","2eeb59b6":"markdown"},"source":{"3e402aab":"#Importing Libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport tensorflow as tf\n\nimport warnings\nwarnings.filterwarnings('ignore')","51fb3a8d":"#import data\ndf = pd.read_csv('..\/input\/boston-housing-price-data\/boston_data.csv')\ndf.head()","bbf2d9ea":"# shape of the dataset\ndf.shape","2479ead5":"#information about the dataset\ndf.info()","faf38af0":"#description about the data\ndf.describe()","0f8782c0":"#check for the null values\ndf.isnull().sum()","1f407780":"import missingno as msno\nmsno.bar(df)","43d5ef3e":"# checking for datatypes\ndf.dtypes","1e111edb":"#Preprocessing data\n\ndf['age'].plot(kind='hist')","03a2cedf":"df.plot(x='medv', y='crim', kind='scatter')\nplt.show()","17f50319":"df.hist(figsize=(15,30),layout=(9,3))\nplt.show()","04671d5a":"plt.figure(figsize=(10,5))\nplt.xlabel('Price')\nplt.ylabel('Density')\nsns.kdeplot(df['medv'],shade=True)\nplt.show()","5cd3f460":"plt.figure(figsize=(10,5))\nplt.xlim(0,100)\nplt.ylabel('Price')\nsns.boxplot(x=df['medv'])\nplt.show()","f4bda16d":"plt.figure(figsize=(10,5))\nsns.pairplot(df,palette='RdGB')\nplt.show()","2de0c5a4":"X = df.drop('medv',axis=1)\ny = df['medv']\n","84a6ce95":"# split the dataset\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.30,random_state=123)","780e2175":"model = tf.keras.Sequential([\n      tf.keras.layers.Dense(100,activation='relu',name = 'input_layer'),\n      tf.keras.layers.Dense(80,activation='relu',name = 'dense_layer1'),\n      tf.keras.layers.Dense(40,activation='relu',name = 'dense_layer2'),\n      tf.keras.layers.Dense(1,name='Output_layer')\n],name='Model')\n\nmodel.compile(loss = tf.keras.losses.mae,\n              optimizer = tf.keras.optimizers.Adam(),\n              metrics='mae')\n\nhistory = model.fit(X_train,y_train,epochs=200)","22178eb1":"y_pred = model.predict(X_test)\ny_pred","05ff121d":"model.summary()","0c664dc5":"from tensorflow.keras.utils import plot_model\n\nplot_model(model, show_shapes = True)","79c22d72":"model.evaluate(X_test,y_test)","69a14bb6":"pd.DataFrame(history.history).plot()\nplt.ylabel('loss')\nplt.xlabel('epochs')","2eeb59b6":"## We come to know,there is no missing value in our data."}}