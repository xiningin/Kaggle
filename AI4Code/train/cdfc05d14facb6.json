{"cell_type":{"a91d685d":"code","9f427e9c":"code","8ae316ef":"code","8c070b8f":"code","b97351bb":"code","65958f3a":"code","34e8ed24":"code","cf396e23":"code","aaf962a0":"code","9ef1fc33":"code","3d12a00e":"code","f415656b":"code","0c654e0c":"code","e6461341":"code","934c9e7d":"code","018b6c34":"code","310fe061":"code","33a70328":"code","24b8cc97":"code","287741f6":"code","02babceb":"code","0b456301":"code","00e219f6":"markdown","9bf49338":"markdown","50076d80":"markdown","2cf22520":"markdown","d3ccadf8":"markdown","3f5bff3c":"markdown"},"source":{"a91d685d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9f427e9c":"from fastai.vision.all import *\nfrom fastai.imports import *\nfrom fastai.vision.data import *\nfrom fastai import *\n\nimport fastai\nimport matplotlib.pyplot as plt","8ae316ef":"path = Path(\"\/kaggle\/input\/mechanical-tools-dataset\/Mechanical Tools Image dataset-20201009T110652Z-001\/Mechanical Tools Image dataset\/\")\npath.ls()","8c070b8f":"np.random.seed(42)\ndata = ImageDataLoaders.from_folder(path, train=\".\", valid_pct=0.2, item_tfms=RandomResizedCrop(512, min_scale=0.75),\n                                    bs=32,batch_tfms=[*aug_transforms(size=256, max_warp=0), Normalize.from_stats(*imagenet_stats)],num_workers=0)","b97351bb":"data.show_batch(nrows=3, figsize=(7,8))","65958f3a":"%matplotlib inline","34e8ed24":"import matplotlib.pyplot as plt\nimport matplotlib.image as mpimg","cf396e23":"img = mpimg.imread('..\/input\/mechanical-tools-dataset\/Mechanical Tools Image dataset-20201009T110652Z-001\/Mechanical Tools Image dataset\/Wrench\/000197.jpg')\nprint(img)","aaf962a0":"implot = plt.imshow(img)","9ef1fc33":"lum_img = img[:,:,0]\nplt.imshow(lum_img)","3d12a00e":"plt.imshow(lum_img, cmap=\"hot\")","f415656b":"imgplot = plt.imshow(lum_img)\nimgplot.set_cmap('nipy_spectral')","0c654e0c":"imgplot = plt.imshow(lum_img)\nimgplot.set_cmap('summer')","e6461341":"imgplot = plt.imshow(lum_img)\nplt.colorbar()\nimgplot.set_cmap('winter')\nplt.title(\"Color Bar\")","934c9e7d":"plt.hist(lum_img.ravel(), bins=100, range=(0.0, 1.0), fc='k', ec='k')","018b6c34":"img2 = mpimg.imread('..\/input\/mechanical-tools-dataset\/Mechanical Tools Image dataset-20201009T110652Z-001\/Mechanical Tools Image dataset\/Wrench\/000084.jpg')\nprint(img)","310fe061":"img2plot = plt.imshow(img2)","33a70328":"lum_img2 = img2[1:,0:,0]\nplt.imshow(lum_img2)","24b8cc97":"plt.imshow(lum_img2,cmap=\"rainbow\")","287741f6":"img2plot = plt.imshow(lum_img2)\nimg2plot.set_cmap('Set3')","02babceb":"img2plot = plt.imshow(lum_img2)\nimg2plot.set_cmap('bone')","0b456301":"img2plot = plt.imshow(lum_img2)\nplt.colorbar()\nplt.title(\"Color Bar\")","00e219f6":"#Codes from Salman Ibne Eunus  https:\/\/www.kaggle.com\/salmaneunus\/mechanical-tools-image-basic-eda-using-matplotlib\/notebook","9bf49338":"#Applying pseudocolor schemes to image plots\n\nPseudocolor is a useful tool for enhancing contrast and visualizing data more easily","50076d80":"#Color Maps","2cf22520":"#Thanks Salman Ibne Eunus https:\/\/www.kaggle.com\/salmaneunus\/mechanical-tools-image-basic-eda-using-matplotlib\/notebook\n\nFor the script and the Dataset.","d3ccadf8":"#Plotting numpy arrays as Images","3f5bff3c":"#Examining a specific data range using histogram"}}