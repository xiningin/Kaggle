{"cell_type":{"14e7b65d":"code","d91d4670":"code","28c516f0":"code","366c7cb5":"code","f4334ac3":"code","c7a054d1":"code","86a04eed":"code","8462d304":"code","51f18c60":"code","da6c6bfc":"code","2a2a2e40":"code","29c89186":"code","7861ae7c":"code","6cf5b54b":"code","9042fc5f":"code","8b54977b":"code","48ac9c98":"code","46219d72":"code","e87da37e":"code","b92d4412":"code","f3fc1d30":"code","44d081ed":"code","b92ea00d":"code","0a4767fd":"code","8ae909df":"code","9bd8bf24":"code","f26243d7":"code","d999202a":"code","a00922fb":"code","ecce977e":"code","d49f90e5":"code","118ba06d":"code","272958ae":"markdown","3c5cbb39":"markdown","36b8967d":"markdown","841bd9bc":"markdown","0efdb8d7":"markdown","0459685b":"markdown","e1beeb0c":"markdown","a963aaeb":"markdown","bd98ef5b":"markdown","c4c9bb3a":"markdown","8f162011":"markdown","04c07ef6":"markdown"},"source":{"14e7b65d":"import time\nstart_time = time.time()","d91d4670":"!pip install bar_chart_race\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport requests\nfrom bs4 import BeautifulSoup\n\nimport bar_chart_race as bcr\nfrom IPython.display import Video\n\nplt.style.use('ggplot')\n\n%matplotlib inline","28c516f0":"df = pd.read_excel('..\/input\/brasil-solicitaes-de-refugiado\/solicitacoes-de-reconhecimento-da-condicao-de-refugiado.xlsx',\n                  encoding='latin1')\ndf.head()","366c7cb5":"df.shape","f4334ac3":"df.dtypes","c7a054d1":"df['M\u00eas\/Ano'] = pd.to_datetime(df['M\u00eas\/Ano'].str.replace('\/', ''), format='%m%Y', errors='coerce')\ndf['Year'] = df['M\u00eas\/Ano'].dt.year","86a04eed":"df.groupby('Year')['Quantidade'].sum().plot(kind='bar', rot=45, figsize=(18,6), color='skyblue', title='N\u00fameros de Refugiados por ano');","8462d304":"df_paises = df.groupby(['Year', 'Nacionalidade'])['Quantidade'].sum().unstack()\ntop_10 = df.groupby('Nacionalidade')['Quantidade'].sum().sort_values(ascending=False)[:10]\ndf_paises[top_10.index.to_list()].plot(figsize=(18,8), linewidth=2, alpha=0.7)\nplt.title('Pa\u00edses com maior n\u00famero de refugiados')\nplt.xticks(np.arange(2000, 2020, 1))\nplt.xlim(2000, 2019);","51f18c60":"df_paises[top_10.index.to_list()[1:-1]].plot(figsize=(18,8), linewidth=2, alpha=0.7)\nplt.title('Pa\u00edses com maior n\u00famero de refugiados(Sem Venezuela)')\nplt.xticks(np.arange(2000, 2020, 1))\nplt.xlim(2000, 2019);","da6c6bfc":"df_paises[top_10.index.to_list()].plot(figsize=(20,8), linewidth=2, alpha=0.7)\nplt.title('Pa\u00edses com maior n\u00famero de refugiados')\nplt.xticks(np.arange(2000, 2020, 1))\nplt.xlim(2000, 2019)\nplt.axvline(x=2010, linestyle='--', color='skyblue')\nplt.axvline(x=2011, linestyle='--', color='red')\nplt.axvline(x=2016, linestyle='--', color='violet')\nplt.text(2007.8, 30000, 'Terremoto no Haiti', va='center', bbox=dict(facecolor='skyblue', alpha=0.5), fontsize=13)\nplt.text(2011.1, 20000, 'Guerra na S\u00edria', va='center', bbox=dict(facecolor='red', alpha=0.5), fontsize=13)\nplt.text(2013.7, 40000, 'Crise na Venezuela', va='center', bbox=dict(facecolor='violet', alpha=0.5), fontsize=13);","2a2a2e40":"df_paises[['HAITI', 'S\u00cdRIA']].plot(figsize=(20,8), linewidth=2, alpha=0.7, rot=45)\nplt.title('Refugiados Haiti e S\u00edria')\nplt.xticks(np.arange(2000, 2020, 1))\nplt.xlim(2000, 2019)\nplt.axvline(x=2010, linestyle='--', color='red')\nplt.axvline(x=2011, linestyle='--', color='skyblue')\nplt.text(2007.8, 3000, 'Terremoto no Haiti', va='center', bbox=dict(facecolor='red', alpha=0.5), fontsize=13)\nplt.text(2011.1, 2000, 'Guerra na S\u00edria', va='center', bbox=dict(facecolor='skyblue', alpha=0.5), fontsize=13);","29c89186":"SUL = ['SC', 'RS', 'PR']\nSUDESTE = ['MG', 'RJ', 'SP', 'ES']\nCENTRO_OESTE = ['DF', 'GO', 'MT', 'MS' ]\nNORDESTE = ['AL', 'BA', 'CE', 'MA', 'PB', 'PE', 'PI', 'RN', 'SE']\nNORTE = ['AC', 'AP', 'AM', 'PA', 'RN', 'RR', 'TO']","7861ae7c":"def regiao(row):\n    if row in SUL:\n        return 'SUL'\n    if row in SUDESTE:\n        return 'SUDESTE'\n    if row in CENTRO_OESTE:\n        return 'CENTRO_OESTE'\n    if row in NORDESTE:\n        return 'NORDESTE'\n    if row in NORTE:\n        return 'NORTE'","6cf5b54b":"df['REGIAO'] = df['UF'].apply(regiao)\ndf.head()","9042fc5f":"regiao_sul = df.query('REGIAO == \"SUL\"')\nregiao_sudeste = df.query('REGIAO == \"SUDESTE\"')\nregiao_norte = df.query('REGIAO == \"NORTE\"')\nregiao_nordeste = df.query('REGIAO == \"NORDESTE\"')\nregiao_centro_oeste = df.query('REGIAO == \"CENTRO_OESTE\"')","8b54977b":"def df_plot(df, title='title'):\n    regiao = df.groupby(['Nacionalidade', 'Year'])['Quantidade'].sum().unstack()\n    mask = regiao.T.sum().sort_values(ascending=False)[:5]\n    ax = regiao.T[mask.index].plot(figsize=(18,8), rot=45, linewidth=2, alpha=0.8, title=title)\n    plt.xticks(np.arange(2000, 2020, 1))\n    plt.xlim(2000, 2019)\n    return ax","48ac9c98":"df_plot(regiao_sul, 'Pa\u00edses com mais refugiados no Sul');","46219d72":"df_plot(regiao_sudeste, 'Pa\u00edses com mais refugiados no Sudeste');","e87da37e":"df_plot(regiao_norte, 'Pa\u00edses com mais refugiados no Norte');","b92d4412":"df_plot(regiao_nordeste, 'Pa\u00edses com mais refugiados no Nordeste');","f3fc1d30":"df_plot(regiao_centro_oeste, 'Pa\u00edses com mais refugiados no Centro Oeste');","44d081ed":"wiki_url = 'https:\/\/pt.wikipedia.org\/wiki\/Compara%C3%A7%C3%A3o_entre_c%C3%B3digos_de_pa%C3%ADses_COI,_FIFA,_e_ISO_3166'\nresponse = requests.get(wiki_url)\nsoup = BeautifulSoup(response.text, 'xml')\n\ntable = soup.find('table',{'class': \"wikitable sortable\"})\nwiki = pd.read_html(str(table), header=0)[0]\nwiki.head()","b92ea00d":"wiki['Pa\u00eds'] = wiki['Pa\u00eds'].str.upper()\nwiki.drop('Bandeira', axis=1, inplace=True)\nwiki.rename(columns={'Pa\u00eds': 'Nacionalidade'}, inplace=True)\nwiki.head()","0a4767fd":"merge_df = pd.DataFrame.merge(df, wiki, on='Nacionalidade')\nmerge_df.head()","8ae909df":"quantidade = merge_df.groupby([\"Nacionalidade\", \"Year\", 'ISO-3'])['Quantidade'].sum().reset_index()\nmundo = quantidade.sort_values(by='Year').reset_index()\nsem_venezuela = mundo[mundo['Nacionalidade'] != 'VENEZUELA']","9bd8bf24":"fig = px.choropleth(mundo, locations=\"ISO-3\", color=\"Quantidade\", hover_name=\"Nacionalidade\", animation_frame=\"Year\", \n                    projection=\"natural earth\", title=\"Refugiados Globo\")\nfig.show()","f26243d7":"fig = px.choropleth(sem_venezuela, locations=\"ISO-3\", color=\"Quantidade\", hover_name=\"Nacionalidade\", animation_frame=\"Year\", \n                    projection=\"natural earth\", title='Refugiados Globo (Sem Venezuela)')\nfig.show()","d999202a":"sem_venezuela = sem_venezuela.groupby(['Nacionalidade', 'ISO-3'])['Quantidade'].sum().reset_index()\nfig = px.choropleth(sem_venezuela, locations=\"ISO-3\", color=\"Quantidade\", hover_name=\"Nacionalidade\", \n                    projection=\"natural earth\", title='Refugiados Globo (Sem Venezuela)' )\nfig.show()","a00922fb":"paises = df.groupby(['M\u00eas\/Ano', 'Nacionalidade'])['Quantidade'].sum().reset_index()\npaises = paises.pivot_table(index='M\u00eas\/Ano', columns='Nacionalidade', values='Quantidade').fillna(0).cumsum()\ntop_50 = df.groupby('Nacionalidade')['Quantidade'].sum().sort_values(ascending=False)[:50]\npaises.head()","ecce977e":"paises_bar_chart = bcr.bar_chart_race(\n    df=paises[top_50.index],\n    filename=None,\n    period_length=500,\n    figsize=(7, 4),\n    n_bars=10,\n    bar_size=.5,\n    filter_column_colors=True,\n    period_fmt= '%B %d, %Y',\n    title='Solicita\u00e7\u00e3o de Ref\u00fagio por Pa\u00eds')","d49f90e5":"paises_bar_chart","118ba06d":"print(f\"This kernel took {(time.time() - start_time)\/60:.2f} minutes to run\")","272958ae":"## Refer\u00eancias  <a id='5'><\/a>\n\n[Bar Chart Racet](https:\/\/github.com\/dexplo\/bar_chart_race)<br>\n[Dados sobre ref\u00fagio no Brasil](https:\/\/www.acnur.org\/portugues\/dados-sobre-refugio\/dados-sobre-refugio-no-brasil\/#:~:text=O%20ano%20de%202018%20foi,Haiti%2C%20com%207%20mil%20solicita%C3%A7%C3%B5es.)<br>\n[Dados solicita\u00e7\u00f5es de reconhecimento da condi\u00e7\u00e3o de refugiado](http:\/\/dados.gov.br\/dataset\/comite-nacional-para-os-refugiados\/resource\/4a82b3c6-53d4-42d6-99f5-09183cec4e30)","3c5cbb39":"Baixei as siglas ISO-3 da wikipedia para o choropleth ficar mais f\u00e1cil.","36b8967d":"Criando duas vari\u00e1veis `mundo` e `sem_venezuela`, para choropleth, novamente o plot fica mais did\u00e1tico sem a venezuela.","841bd9bc":"Traz a tabela de solicita\u00e7\u00f5es de reconhecimento da condi\u00e7\u00e3o de refugiado - 1994 (primeiro registro dispon\u00edvel) a 13 de mar\u00e7o de 2019, e a tabela com decis\u00f5es sobre pedidos de reconhecimento da condi\u00e7\u00e3o de refugiado - ACNUR (1993-1997) e Conare (1998 a janeiro de 2019).\n\nO ano de 2018 foi o maior em n\u00famero de solicita\u00e7\u00f5es de reconhecimento de condi\u00e7\u00e3o de refugiado. Isso porque o fluxo venezuelano de deslocamento aumentou exponencialmente. No total, foram mais de 80 mil solicita\u00e7\u00f5es no ano passado, sendo 61.681 de venezuelanos. Em segundo lugar est\u00e1 o Haiti, com 7 mil solicita\u00e7\u00f5es. Na sequ\u00eancia est\u00e3o os cubanos (2.749), os chineses (1.450) e os bengaleses (947).\n\n* [<font size=3>Importando Bibliotecas<\/font>](#1)\n* [<font size=3>Carregando e limpando os dados<\/font>](#2)\n* [<font size=3>Visualiza\u00e7\u00f5es <\/font>](#3)\n* [<font size=3>Bar chart Race <\/font>](#4)\n* [<font size=3>Refer\u00eancias <\/font>](#5)","0efdb8d7":"Nesse plot, marquei as datas dos eventos que trouxeram maior n\u00famero de refugiados para o Brasil.","0459685b":"![](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAT4AAACeCAMAAACcjZZYAAABL1BMVEX\/\/\/8AAAD8\/PxhYWHa2tr\/\/\/3\/\/v\/\/\/\/v39\/e7u7uNjY3r6+u\/v7+hoaHl5eV4eHjx8fHU1NT\/\/\/isrKzIyMjg4OCampqCgoLR0dHn5+d2dnadnZ1\/f39ZWVm2tra9vb0hISFsbGyQkJBEREQoKChPT086Ojqnp6cZGRkQEBAzMzP7+f\/W1N13dIQAAD8AADObmaRpZnjs6fOvrbbHxc90cIgAACj39P9bWG3h3uyXk6dlY3Gko6qLhp38\/u\/Iw9ouJlJQSnBPS2O0sMGJh5QiHTqvq8FnYoAuKUYwKk8gFke9uNCfmLh7dpcNADU8OFIkHUQAABJsZoY9PGItKVrX0+UgGFVFQnEpH1lkXYUBAEYSAFJ+fIdYU3QAAEJ9d5w7OUtLSVhXT38AAB5XVWEtVEgmAAAVF0lEQVR4nO2diX\/aSLLHiwa1xGGQAXEZ8H0KHFvg8e1kbDbHZBNnx+vMJmPPTt7m\/\/8bXlVLAh0tING+NzMf6zeZDOjWV9XVVdUtBiBRokSJEiVKlOiJK5v\/o6\/gL63O4h99BX9ppTN\/9BX8pZXgi6UEXywl+GIpwRdLCb5YSvDFUoIvlhJ8sZTgi6UEXywl+GIpwRdLCb5YSvDFUoIvlhJ8sZTgi6UEXywl+GIpwRdLCb5YSvDFUoIvlhJ8sZTgi6UEXywl+GIpwRdLTxmfogDnqsIVdbJIBQ7K\/Id4oviQkUKUVAUYUya8FBWXq9H7BfVE8SGjchmALW5f5tH+PGvU8jcY31PFh+hAvQL+\/MWPN2SLrjg3OUsa7wwpau\/6pmeNDm\/vB3\/jStmz6u4llCP3C+lJ4RMej9PfKn913X92dgpgvraUMnk\/pqAXhIs3L\/iV4jXIqXpS+BRQVfR56OxU6F1Cz8QlvT72H7gIVyO+4vXxjyZ94\/Pxe1L4RK9ApsWVK\/jpraYip8ENlKmrHVw8cOv4YQij4Tcc8WnhY9ap9fd3R1A2y\/Dze72MPK1bxDk8u\/zh7dmLHz8ccRj+4xQYKPP1H08LH5wc9Y8uH3sA1tkJ9rFodvxoNHhzcjMYoBvETXjZfPkeW646X\/D3pPCp\/PGFBXBze3N0e2Cq2IbR4cHFgyVWolcsq+qVev8DV1XGce1shk8Ln\/Xm5x4isw4uT8GXm7mfMes4vvvnW7uLmaP9Pil8rHmI3axCloXtk7lLx5\/IBO8\/ftx\/djnk5P5mO8AnhY+zh0EZDUxVVSkYBircff7ldPj3\/X\/96\/LezJc9ZKWajY\/Z\/0YfhzH3rz+7GBz\/DgKdSrWW8HpFP3v\/8bd3zz99\/vTL52d3j8\/j4wPQ3JNHX9d\/Dd7\/7VNQzOtJSBI2QAbn++8+ff746\/5d7+Ddp\/1ff8LAWrjBclnei0TjIyT5wlpnY2d3Z6OzVtAkm+Cf6lJ6YwW3WM\/Ru60seP9GrRuBxFhakqxgsLCwLdtcW1pwVclWDQiSri7I5H9fVFGLD1G365zdhN7j59+eW5Bv5O\/vPv\/7cmialOyhzcraeyQ+vLhqOuVVazFwxQyMum+LzW7IfLqpVEV+guVUSvJEoIrHyUiI51N+pbv+beopmZZ826jKcDCtN2CMYawyPOsDUzExUe9\/23\/x7tmHV2eUiZAZhvaItr7GliBS3+4udxdym+KSm74t9BYt3GsvVbLd7VyHvmxUA0fJ4kJDevwIfHSYlmQ54tuqt4VK6T0610rBuz6XSnXSQXWyvmMwOOhNL6co2Eo16oApL2aXL44sGA6Pbnr9c4srkgYsx4cNFy8ntVXRx4ualY0UWdKkuy\/QPdQmbPTuOi4o+R0h4VvRZO23IMVXTKXwKHp4BeJre74tE+Y1z3q83hkvxpPdHVkzqlFUfaaLVagOrWNiwuwizfD1UJaJRODTqN12PR0u\/RcbYmpiXdv4re4BQ2ct7KK9+qBkhdXOjw\/b4GKwzQnl6cl4Ra3c4yURX1F2K454GY7vH99\/MGclEozbANHVMTRBooduj4N5e08PIBDySPExakLrGgQ9md5Jjz9XfCxdadjI1717IT4kUpOcRIaPsVRqFU++Eu6CQ\/ggk\/IeYQY+Ve3d9m+OLT5PKUASSKjq8e3IsoLJsAwfgxIakWy5e1dMPHupT0sTgMnpER89izBoufXhQ2nQmkJoTQgfgxqZn3uqGfiuercWhs0z01ijtL4piwjQFOHg5PDEnI2P2GzJ3LrjF1DaDt1n+DS4wZbv5hEf03dlfkmKbyu1hUfdSXVmWx9juKgzL77y2VvsF1RZ7+k5JCyK\/npdcvOq6Dj6PX8pX2p9K1G95VhrqVQuKp5LpXZ91qdBA6+IBVuEDB9uSGHiguT84cYLsJFaGX+egQ8eT69mhuQM9ux4J+xsCHv5Sjl4OQsfoxYUxcaRjogiV9a9Ll3go26mHdxMhg9bPrMPH9pchi+d2h0fYga+mxOzPDujMZxwcSu0hoJm9apsHcL0xotWsiKNHLxa8HqdoPDm98ZfbHywapuVVyF8DJr03EitMNqY+O4sdY4BtIyDb0O+WmX3r2FWz9uQXKhPDFuNNOR11qbJLzrKCntibIPao4+fxPrW3Ea76ItJhGT4VjzPaQa+f56Wy7NHf3QH36p8tZq\/vp6Bj1Hja8BU5UUoF2F9Ip4eOw\/b+hg1ixU\/LYn1uV0Bg\/XUTvicQXxNbxufge9tX0zImJxLrpqNL8LzK+Iw3iUSfNh1TrkOEjJZmLI6T2EPG29qQ+oGkQfxMdqk4HysUKzju0d54DIJiGZ1Hf2XMO47ImM\/0WulNqKsR4XDU3VG16FR4Dtddcrqpyg18UkuPmHUNZiKbyu14YSVFD53ZuAjg16f2NGswGW4fwbmYQ\/Tj7J6fPPqDNRQW2ZUL2IZw76agBSMXI6pmDDD98mcTEDpGX1LehLnZSeQNv3RcwCfiLkmAUM92IJCl2Xs+IAhPn9Bw0+AWdbJ4fUHizxg7\/eb5ycQcoVET9M1XSjolinzhcG1yZUZ+Bb9qbhM6Jkiew6Sxzo9+Mgv65N7CuFb9T4U9Gt13zED+DRKub2NDPFlNJ98CLiq6pZ5ZJnHx68eLbBOIDgSxCDf2R1XunYDXRfSOx18MdnMnLcgzdh92kutTI2h8FbcOqUHn4ieJzYRxJf3Z3udQNue4GO6UaDq3nrRa2C5cLHPe2tcLXOu9D88\/s9\/3uIX\/ZaHu74N397+SquqPP9hFKoY\/L\/igyXqKt09g76v5r\/faqDOGiyXbvpLeTJ8XgAIDw3Qou5XKStcOboMXXXGv7c\/81D42T8sKr74J7+E8VXlBRKvtmbgkzdexuzo2VHQ+la8sT6jxHfPs9qHb2Wtmw\/WRRBfI+9Vs+g9vJjdolDJmEp5vGw+3B4NOdDAuLtJIwKfQjOLTDgcKuHAO4zPCHqdsDZndB2liVP3WR9onug5gG\/ZQ1Zo2+\/bEF+LoUPT8yURNgWfX7jrmCI0QOjd978MvBPRFiPw0exn8\/XJCCTzJsP4dArQpqs1o7K7N8Hrwyei5z0mxbcZjDZ1f\/Dv6TrQLS7L8E2N+\/xiCrLgp\/03b4amuyzQeHPucmqwp\/tHvMzCaYukZLCTWplxcowts1NWM0\/SG8BHobEDxYuP0bUHXUbb95Am+DSqlhnx8Cli\/FGh2ZGm4sxtjsJH688+Pceueh589HD16QWXRUlFZCzmW50Npmbj6NmPD1vkrv\/yd3fFLbgX4ul5yYZ3gt7jW\/GJIQymAkYxMB0ftfXBmRKMWYQkSds2+ZbpxZ2U360HDlDzuLEgPsbWHZ\/ma7x6Sq5J9+BpvKLWHcyMvg2fK2Vx\/7R8xcWEXcN\/ag8+FS5usPOR5HoS6ysGhitCEj2orNbsrF3xmG\/I+ojDrm4XFiZr8JEVnHh\/LK3i7U28YbN4QiUI9rzfgY\/BS5pMSoPgCvjxLU+2UmkOqlSyavOmdGzCq8Vp3UuBBmrdWwvjI9PZDOLbkZkz2\/XYmC\/rEA\/QX7X4Pnx4K28er\/uKmI1W9RufZ94V3FzI95bhq0a3TXFIbFGbEUUtamwb3nQ1jE+YTt3feAvyEo4n\/A7lvFuBZ\/yd+BTFNO8vgWG\/gClvxYW37ouMVHjoyXeXDhV1KO2Vt01nKbrZldB8FnDH1z33KbE+MQya9eATT0OXnC\/viV0C+Bh5y6I\/afs+fOqVdneGGQllcePewz8yrfLfI4pcUnzo\/SRDhaTxsHg9qvlmqVoVGCoKHQW9Y9NjfYa3uU8kOLuxSxAfJQneAuz3Nl5OOdydZXereVnTpWTvMGJv+Tgvzb\/IBuvJ+DXrtjHRga4GEyf8hsmDL3WV4WOMomcPvlB1ylVjUiMM19EqwofOWe+LlHif8lVPsaOSFQeft97CVTgcSGI+UsQUoW1\/z+0IA9kN93I1dD5boZumxN3nkqTWJwrLk\/ESTTa0ZW+3MR7Rk1Sb6+RDPfjmT9q8wqTX\/MCdoK7k4Fv0bXDajwozIua4iPksG\/7UIouPpsPcaQag0SSdujd5Y116eP6IRooPt2jTRTprtqNchbAw5yLC1ifa9jiy+V58mH3wwZkz98Ke2xOo9ZTV+1FUfT9yglqGRoxX6tU8jfRozWodMyWqZI3nDNnjAqlOJZPXmKYbhTZt0Qkkw3J8uPvWBN+eNzz2Sx\/Hx7IiOFUgGs7kV8RXNUKa\/X8joXkHB0c2PjEjtJFt+K+4rLwbqN9kfWKaaMVxBCsbO\/aH1abX1+HHvGvru07CtV4NWrk9UCk5fH6MrzqtvN12XakEn8jeUnn7+JJ6X2p23dw+TOPn8OQzSoqp1lJW4fI88i2ZqXObq61JHprellmRtt0Zb7GeC7lC4QTk1kfUdHCilnzk5GjDjV2a0tHXwnhUSj67dFbl0r4U8xrE29FeiayYxof46WtRZZVqCj5xS\/lqtuLOJY64xWJjOZutZphkC8aYFjEqQuMyTOwTGpbxbQXOAfBA0gvQdDtM0qSaPS+DlH88PtVlU9cwG2Hw5ZRHvp8\/1frmO\/m0rRmLPIrbCU0\/CZMF54Etvu0yJdKOrl+\/CWe1DDj+Y\/2N5klG7PmkXouJElOBnx4GelfOIdMb9C5OhkrEWzSQ4HOkquaJaZavRHCMPu9KhavjT\/\/5+ObugzVtP2nWQS1Ok7UrBpo9FE9\/u+UD50PoELID67LUdqowLKM3H7kYluVcZVzTRK8ohHfKTJM59qFgAmapovo53mK+F0txs\/713dAunKplzszLVz89DvGrNvUI8qQts4qSvc9Sw2RQROTNVafiYtiBf87v\/7sRc5S6UfFxpBisP9RLFU6TO6kv1FbrRWUsuu82Xqgiqu8qlOErE8s9m8wjReEm\/Hgqugiuls3j\/qvn9xa9pjD9CNLG2+gQjG3dtSFhYuKvfBM05MW0GtTskqixU6D\/ljyFd\/yjG26vMTkEabk62chroZ734hyjdhdwOMdPowHNrsA4Ai6GzoiXfWy8w6IuXq+nN0gxPT1n7g8TQLBJzCDI9n9mdvTS+\/nZAMoi7gNl6q8aSPFtjW9HN+xGXNRAM+w2q5XEZRlOl5jppim0b+MX3R6DzDcFbIyMizaHZp58gUajO9mqA6spQnDNsF2BIT66N1sU2+uGA5jwHT9gq7XyVDa38EZJ5EYMdEyMc8bNogkYY5hFOKSfVcJv4uI5m\/cnMfDRDH\/79cwedjt79hbsF1LREiO7jSh8jZxrLKW1bLoK2mou21lsd9d1KHS11l5rAbKtQt1u3JmKvmnjq+e69E5HeqGbBmMJWKuGe4FWynVzbWBL7e6m7lgfS9cqtTTmNa3lTQMKa6t1vVanw4vn0enWWgyWS4WWXc9LI7ThARiHw4scZL+cPxRzyIW3wUx3B1\/W+MEiZFeH5z1MvkaF0RcTCueD0RrwhbVsy5zvFzEUYb7HPx7bqC4v6T2QeSTDV7DzcEwZKHXuMLaFFrEHsLgGhWXQWmhn5Npa4nYzFSjkEDQaG6Yp25ATgIrbUKGjrDNt3d4ULTGTcxsv1W0WlmmZXkdXgefCj4sL4qT0MAoLsG5fAqL7YvQGqyb\/it8rDbhoYlNG7wcPUOkBXBhwkMEDKVpf6VFm\/5XrtOVB1aS3\/+a2PfSdDK41G9rlWSx8bsEhTd6vVmU0rxERNUuET0d81dXt7e3VjIMP6lXReHF5DewSHOJbpSULhkZjlmvCjoyS03gFIl0UxJqrUF2wjT0jFuTJ9Nkq1Nbs8p3Kfy+kB2DmvwwuttcqyEu18dWhO0R8GcRHNqP1YXSKXcc5DPGKFOsBWhf5eZ0ftVE4vXXnfb+NZX2ZkuN00+RftguID1gdb7Xt4utWaSjMvmlivakhvu5aLWfjY4RPFKO7GRtfE6prtVrbtT7aSMuhl1hbWiWTxUeWq9VEfm\/UCCbuvFhPa8L60Pd91bkx0sS0O4HPQP\/2AOz8YmnECV9vVKv04cES+AbLwBUL9xq2S3NaH6cXKd\/fuD9+c9aPgw\/QCwm3XaK+oG64+PJjfJnauFcV+PLpOkPLg8watXXb+urUttt5G1++iPtjpzPBh9TIBWgCHyPLE+bI0Dcw6p7wIA3iqhA+qwPmOXYZuFTgs1QN22bm5lgHwmdS79KHg57A1zvAhT1Rpd6e8\/\/\/ij32zWtrnF1cv1Vi4GPNrYbGmmmjmaYQEFhnYn1Z0NPQhLQBWkXEKoSPqvvkrzS0vgJ2E4V8cQF3ZLCYJmZkfQa2yYW223h3cPd1vYikKmlqvNCogbYk8EEJ+6rWImCAuFAV+L5iA662YZTlvNqEJUN0JOygDvkvo4WBbuNTC4eKlWZq4XcOX4ugfbVYVYFcc67fMlRUbt1aYrCS4suzE65GFOfnwgdaLZ3GU4PRbtU0YGhXGlLSK7CIwfICBtTaWqteFY23aANZQifZqhlZqnK1uyxfIB\/QQhPQyIS6OltorTW70LDNYbPbaucZ67bWjApkKHCslWq6U1febpXwLNVSyenBlqg1bxtQeXjImrCMPRS\/WB1ZXbjo6c3eJiwXMRA4MLIcGqsPvYHJzIOHkcF5t9SugmRSmUTMvO7Ztod\/Bn1Q4+Dzha7AnH\/sT74A1xMYM1+YyiabOLu6+9uLNyeHn0TQXjc\/CZtFMZk7p+HicIqztfCuaYqmadWkhCNmQnF7+\/myDv3kEa7s\/Uf3tyYFe\/+1nwCbr\/fyJr5RVaox3fDU\/SkncVdheuvAEJ8YGtvFBbpnOwNm9gqxyv39TGXOjpfpD2cnx9RxKNYPP9zAnNDhD6q4SN8un6ZABmsXgmlgIi9+rRVcp+9uIn6CVBGDj\/NYEZnrWeqCfpvk5f4vJk3k\/TP\/BNg3VzidgQfuBBbiV4BUBe+a0yu64pculPEK2sitycz7O3z0SsLo0VSeP\/tgzbsLKan32aInenN7\/8ujNa\/hCSX4XClXcPP+o8mVqTWCgBJ8Y5XVt88up4xryJTgG4upoyNOQ5KJ7\/s+fYvXs5Xgm4h9+5hngi+WEnyxlOCLpQRfLCX4YinBF0sJvlhK8MVSgi+WEnyxlOCLpQRfLCX4YinBF0sJvlhK8MVSgi+WEnyxlOCLpQRfLCX4YinBF0sJvlhK8MVSgi+WEnyxlOCLpQRfLCX4YinBF0sJvlhK8MVSgi+WOgm+OMp88y+DJPIqoZcoUaJEiRIlSvSn0v8C9dhzt5BuZFkAAAAASUVORK5CYII=)","e1beeb0c":"## Importando Bibliotecas <a id=\"1\"><\/a>","a963aaeb":"## Visualiza\u00e7\u00f5es <a id=\"3\"><\/a>","bd98ef5b":"## Bar chart Race <a id='4'><\/a>","c4c9bb3a":"## Carregando Limpando os dados <a id=\"2\"><\/a>","8f162011":"Novamente, fica dif\u00edcil ver os outros pa\u00edses com Venezuela, nesse plot deixamos somente Haiti e S\u00edria para que posso ficar mais simples de ver.","04c07ef6":"Retirei a Venezuela dos dados, j\u00e1 que devido a crise humanit\u00e1ria na Venezuela o n\u00fameros de refugiados aumentou drasticamente, fazendo assim os dados ficarem muito discrepante com os outros pa\u00edses."}}