{"cell_type":{"d688ae1a":"code","a01e64a7":"code","70e47629":"code","d2b694e8":"code","5d01ed13":"code","4389c28a":"code","545c7e60":"code","8e93a2f3":"code","b368ec25":"code","37da1b0a":"code","bacc550f":"code","932009f8":"code","d021d281":"markdown","7f6904e7":"markdown","3074d864":"markdown","dba078aa":"markdown","c27f2142":"markdown","39a3221a":"markdown","b1dbcf21":"markdown","0edd64e5":"markdown","ce6db0de":"markdown","aba7f51c":"markdown","af1c3e55":"markdown","0d4eb7bf":"markdown","c5cc30fd":"markdown","a35f1384":"markdown","913e4d78":"markdown","4d471c73":"markdown","cf19725e":"markdown","5729548a":"markdown"},"source":{"d688ae1a":"import pandas as pd\nimport numpy as np","a01e64a7":"df = pd.read_csv('..\/input\/property-price-register-ireland\/Property_Price_Register_Ireland-28-05-2021.csv')\ndf","70e47629":"#largest sale price recorded \nBiggun = df.loc[:,'SALE_PRICE'].max()\ndisplay(Biggun)","d2b694e8":"#loc() is a label based data selecting and includes the last element of range passed to it\ndisplay(df.loc[df.IF_VAT_EXCLUDED == 1])\n#loc() as demonstrated above also allows for use of conditionals and boolean data","5d01ed13":"#iloc() is an indexed based selecting method that takes integer parameters to find row\/col\nprint(\"Spontaneous iloc use to access a SALE_PRICE:\") #look into wrapping outputs of a dataframe with a label\ndisplay(df.iloc[15,4])\nprint(\"\\n==================================================================================\")\n#unlike loc() it doesn't accept boolean data within the paramaters\ndisplay(df.iloc[0:5, 0:5])","4389c28a":"df = df.dropna(axis=0)\n#checks all columns in each row and then drops those rows\n#as such axis=0 refers to checking and acting on rows within cols \n#conversely, axis=1 refers to checking and acting on the cols within the rows\ndf","545c7e60":"#by convention y is the target value, I will not be recreating the wheel on this front\ny = df.SALE_PRICE\n# display(y)","8e93a2f3":"df_features = ['IF_MARKET_PRICE', 'IF_VAT_EXCLUDED']\n#ideally I would binarize the counties as I assume that certainly effect price as well as convert the 'greater&lesser' sqft-info\n#another way to get some good info would be to parse through the words in the PROPERTY_DESC and binarize based on key words they contain; \n#it may make sense to actually create more features from those provided in the PROPERTY_DESC and analyze them separately","b368ec25":"X = df[df_features]\ndisplay(X)","37da1b0a":"X.describe()","bacc550f":"X.head()","932009f8":"from sklearn.tree import DecisionTreeRegressor\n\n#define model from library\nireland_model = DecisionTreeRegressor(random_state=1)\n\n#fit model\nireland_model.fit(X,y)\n#computes mean and standard deviation\n\n#transform() would then apply the normalization formula to each data point as well as replace Nan Values with the mean","d021d281":"Defining X","7f6904e7":"Creating a basic model using scikit learn","3074d864":"# Testing out functionalities as I go with a different dataset\n* Chosen Dataset Type: tabular price data\n* Chosen Dataset Name: property-price-register-ireland","dba078aa":"*Dropping any and all NaN values in the dataframe*","c27f2142":"Meaning of: random_state = 1\n\n* regardless of your parameter choice there will be a random number generated using the random function, however the rationale behind using the seed is to encertain you are getting the same random value throughout runs(determinsitic result)","39a3221a":"*Accessing specific index locations programmatically*","b1dbcf21":"Quick Vocabulary Lesson:\n* A series is effectively a dataframe composed of a single column","0edd64e5":"**loc()**","ce6db0de":"**iloc()**","aba7f51c":"*Loading the Data into a Dataframe*","af1c3e55":"*Selecting Prediction Target*","0d4eb7bf":"part 2 of the day","c5cc30fd":"# pick up from \"Many machine learning models allow some randomness in model training. Specifying a number for random_state ensures you get the same results in each run. This is considered a good practice. You use any number, and model quality won't depend meaningfully on exactly what value you choose.\n\n\"","a35f1384":"*Meaningful tool improvement and understanding application: loc v.s. iloc*","913e4d78":"*Choosing Features*","4d471c73":"* # PICKUP FROM \"By convention, this data is called X.\"\n@ https:\/\/www.kaggle.com\/dansbecker\/your-first-machine-learning-model\n# IRELAND DATASET I'M WORKING W\/ LINKED HERE\n@https:\/\/www.kaggle.com\/erinkhoo\/property-price-register-ireland","cf19725e":"Decision Tree logic(minimalistic explanation)\n\n* there are a series of nodes at which there is a heurisitic that if true or false will result in the continuation down that branch\n\nmore in depth analysis, good read:\nhttps:\/\/scikit-learn.org\/stable\/modules\/tree.html#tree","5729548a":"finish this video:\nhttps:\/\/www.youtube.com\/watch?v=BotYLBQfd5M&ab_channel=KrishNaik\n"}}