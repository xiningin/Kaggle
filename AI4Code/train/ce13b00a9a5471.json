{"cell_type":{"995ad184":"code","a43a0c57":"code","67d8f528":"code","64803930":"code","c10b0f73":"code","37a2560f":"code","3a2ab14a":"code","6ab5e8b4":"code","1bd95bf1":"code","000abee8":"code","d8377c85":"code","e789a561":"markdown","b32b1585":"markdown","f6016595":"markdown","02b8251b":"markdown","73f1d566":"markdown","4b173777":"markdown","3e0f740d":"markdown","bf7a8d2e":"markdown","cc5ae88b":"markdown"},"source":{"995ad184":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","a43a0c57":"house_sales = pd.read_csv('\/kaggle\/input\/House Price.csv')","67d8f528":"house_sales.head()","64803930":"len(house_sales)","c10b0f73":"x = house_sales[['sqft_living']]\ny = house_sales[['price']]","37a2560f":"plt.figure(figsize=(16,10))\nsns.scatterplot(x=x['sqft_living'], y= y['price'], marker='x')\nplt.title(\"Price vs Square Feet of Living\")\nplt.xlabel(\"Square Feet of Living\")\nplt.ylabel(\"Price\")\nplt.show()","3a2ab14a":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train,y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)\n\nprint(\"Number of samples in Training set: \", len(X_train), \"(80%)\\nNumber of samples in Testing set: \", len(X_test), \"(20%)\")","6ab5e8b4":"from sklearn.linear_model import LinearRegression\nsq_model = LinearRegression()\n\nsq_model.fit(X_train,y_train)","1bd95bf1":"y_pred = pd.DataFrame(sq_model.predict(X_test), columns= ['Predictions'])\n\nfrom sklearn import metrics\nprint(\"Mean Absolute Error:\",metrics.mean_absolute_error(y_test, y_pred).round(decimals =2))","000abee8":"plt.figure(figsize=(16,10))\nsns.scatterplot(x=x['sqft_living'], y= y['price'],marker='x')\nsns.regplot(X_test['sqft_living'], y = y_pred['Predictions'], color= 'red')\nplt.title(\"Price vs Square Feet of Living\")\nplt.xlabel(\"Square Feet of Living\")\nplt.ylabel(\"Price\")\nplt.show()","d8377c85":"area = int(input(\"Enter Area in sqft: \"))\npred_val = sq_model.predict([[area]])                                                             #Important: Used to take input so that it can predict.\nprint(\"\\nPredicted Price:\", pred_val[0][0].round(decimals = 2))\n\n#The following lines of codes basically finds the house with same area or area close to the given value and takes mean of all houses with that area\n#so that we can compare how correctly we predicted the price.\n\nresult_index = house_sales['sqft_living'].sub(area).abs().idxmin()\nnearest_house = house_sales.iloc[result_index]['sqft_living']\nhouse = house_sales[house_sales['sqft_living']==nearest_house]\nmean_price = house[\"price\"].mean()\nprint(\"Mean Price for houses with\", house_sales.iloc[result_index]['sqft_living'], \"sqft area:\", mean_price)","e789a561":"## Fitting the data into the model.","b32b1585":"## Let's predict.","f6016595":"## Loading the data using Pandas.","02b8251b":"## Exploring the data.\n### The dataset has total 18 features. ","73f1d566":"# House Prediction using Simple Linear Regression.","4b173777":"## Use the following code to predict price.\n[Note: The following code has a few unnecessary lines of code which are not so important from point of view of learning Linear Regression. So, I will just mark important line as 'Important' and I will explain remaining lines in brief.]","3e0f740d":"## Visualising the data using Scatter plot.","bf7a8d2e":"# Training our model begins from here.\n## Splitting the data set in 2 parts viz.Train set and Test set.","cc5ae88b":"# Simple Linear Regression i.e only one feature is used for predicting price.\n## Here, we will be using Square Feet to predict the price."}}