{"cell_type":{"3732b34f":"code","6a1ad9d7":"code","a77eca9f":"code","bb0f9610":"code","37ce69a4":"code","7174b12d":"code","cf919009":"code","0263b60f":"code","5de0e282":"code","0478cf8b":"code","6aba9b2e":"code","e6a84257":"code","346d5e9f":"code","c7a9ca4e":"code","faa0157f":"code","23ef6b6f":"code","85761de0":"code","2d3fa247":"markdown","ba0809ff":"markdown","2c8a615c":"markdown","a512d394":"markdown","f2cb7c9e":"markdown","1d15892e":"markdown","cc619ce1":"markdown","65066902":"markdown","cddedb9e":"markdown","aaf03474":"markdown","55c95ecf":"markdown","d0b790bd":"markdown"},"source":{"3732b34f":"import pandas as pd\nimport numpy as np","6a1ad9d7":"path = \"..\/input\/classification-of-ripeness-stage-of-mango-fruit\/Train_Data.csv\"   # data location\nnc = 2 # number of cluster\nMG = pd.read_csv(path)  \nMG = MG.loc[(MG['DAFS']>70)] # filter data  ","a77eca9f":"path2 = \"..\/input\/classification-of-ripeness-stage-of-mango-fruit\/Validate_Data.csv\"   # data location\nMG2 = pd.read_csv(path2)  \nMG2 = MG2.loc[(MG2['DAF']>70)] # filter data  \n","bb0f9610":"X = MG\n# Destructive Variables\nvars_d = ['TSS','TA','TSS\/TA']\nX_d = X[vars_d]\n# Non-destructive Variables\nvars_nd = ['W', 'C', 'V', 'W\/C', 'R', 'G', 'B']\nX_nd = X[vars_nd]","37ce69a4":"# Data Normalization \ntrain_stats = X_d.describe()\ntrain_stats = train_stats.transpose()\n# train_stats\n\ndef norm(x): # Normalization function\n  return (x - train_stats['mean']) \/ train_stats['std']\nX_norm = norm(X_d)","7174b12d":"def dnorm(x): # Normalization function\n  return x*train_stats['std'] + train_stats['mean']","cf919009":"from sklearn.cluster import KMeans\ndata = np.array(list(X_norm[['TSS','TA','TSS\/TA']].apply(tuple, axis=1)))\nkmeans = KMeans(n_clusters=2, n_init = 100, random_state= 0, max_iter=1000,tol=0.0000001).fit(data)\ntmp = pd.DataFrame(kmeans.cluster_centers_, columns = ['TSS','TA','TSS\/TA'])\nprint(dnorm(tmp))\n# print(kmeans.cluster_centers_)","0263b60f":"X_d.insert(3,\"category_kmeans\",kmeans.labels_)\nX_d.head()","5de0e282":"# Encoding categorical data\nfrom sklearn.preprocessing import LabelEncoder\nlabelencoder_X_1 = LabelEncoder()\n# y = cluster_index\n# y = labelencoder_X_1.fit_transform(y)\ny = labelencoder_X_1.fit_transform(X_d['category_kmeans'])","0478cf8b":"# import imbalance data dandle librarys\nfrom imblearn.over_sampling import RandomOverSampler\nfrom imblearn.under_sampling import NearMiss\nfrom imblearn.under_sampling import TomekLinks\nfrom imblearn.combine import SMOTEENN\nfrom imblearn.combine import SMOTETomek  \nfrom collections import Counter\nros = SMOTETomek(random_state=42)\nvars_all = ['TSS','TA','TSS\/TA','W', 'C', 'V','W\/C' ,'R', 'G', 'B']\nvars_d = ['TSS','TA','TSS\/TA']\nvars_nd = ['W', 'C', 'V', 'W\/C' , 'R', 'G', 'B']\nX_all = X[vars_all]\n\n# fit predictor and target varaible\nx_ros, y_ros = ros.fit_resample(X[vars_all], y)\n\nprint('Original nd dataset shape', Counter(y))\nprint('Resample nd dataset shape', Counter(y_ros))\n\nx_rosT = pd.DataFrame(x_ros, columns = vars_all)\nx_rosT['TSS\/TA'] = x_rosT['TSS']\/x_rosT['TA'] \nx_rosT['W\/C'] = x_rosT['W']\/x_rosT['C'] \nx_rosT","6aba9b2e":"x_rosT['Class'] = y_ros\nx_rosT.head()","e6a84257":"x_rosT[['W', 'C', 'V', 'W\/C' , 'R', 'G', 'B', 'Class']].to_csv(\"Train_Data_smotetomek2.csv\")","346d5e9f":"x_rosT[['TSS','TA','TSS\/TA','W', 'C', 'V','W\/C' ,'R', 'G', 'B', 'Class']].describe()","c7a9ca4e":"X[['TSS','TA','TSS\/TA','W', 'C', 'V','W\/C' ,'R', 'G', 'B']].iloc[np.where(y==0)].describe()","faa0157f":"x_rosT[['TSS','TA','TSS\/TA','W', 'C', 'V','W\/C' ,'R', 'G', 'B', 'Class']].iloc[np.where(x_rosT['Class']==0)].describe()","23ef6b6f":"X[['TSS','TA','TSS\/TA','W', 'C', 'V','W\/C' ,'R', 'G', 'B']].iloc[np.where(y==1)].describe()","85761de0":"x_rosT[['TSS','TA','TSS\/TA','W', 'C', 'V','W\/C' ,'R', 'G', 'B', 'Class']].iloc[np.where(x_rosT['Class']==1)].describe()","2d3fa247":"# Creating ground truth for ripeness stages from Kmeans","ba0809ff":"# Original Data-Class 1","2c8a615c":"# Grouping Destructive Variables and Non-destructive Variables","a512d394":"# Saving DATA","f2cb7c9e":"# Adding ripeness stages to dataframe","1d15892e":"# Normalizing DATA","cc619ce1":"# Original Data-Class 0","65066902":"# SMOTETOMEK Data-Class 1","cddedb9e":"# Load DATA","aaf03474":"# Data description","55c95ecf":"# SMOTETOMEK Data-Class 0","d0b790bd":"# SMOTETOMEK DATA-ALL"}}