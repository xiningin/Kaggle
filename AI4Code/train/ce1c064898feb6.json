{"cell_type":{"1ab92cf2":"code","0fd3ba52":"code","473d97ee":"code","40b57d0c":"code","95ec6f9a":"code","68b5994e":"code","8c3eb417":"code","5d02f38b":"code","18ea71f1":"code","863ca1e1":"code","a1331e1e":"code","5459239c":"code","abe66434":"code","3a0d0b10":"code","840fa958":"code","b59f38fe":"code","e0d3d757":"code","f948c885":"code","c23b83ae":"code","86fa6be0":"code","5a4976a3":"code","8d133c71":"code","81599c4f":"code","c55c4a0e":"code","472cfdae":"code","cb9eb9cb":"code","c16a8e37":"code","670b5168":"code","bdbcc731":"code","a374e30e":"code","916ba93e":"code","50822059":"code","c5464d32":"code","0fb69435":"markdown","5badb38d":"markdown","79547300":"markdown","fd707d2f":"markdown","19a8e6c3":"markdown","54242b87":"markdown","84f4eb2c":"markdown","795b5b16":"markdown","7369531e":"markdown","b65d0770":"markdown","46d382ab":"markdown","9ada6ccb":"markdown","9d05edd6":"markdown","c049af9f":"markdown","ce359514":"markdown","3c4b70fc":"markdown","89942fa4":"markdown"},"source":{"1ab92cf2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom pathlib import Path\n\n#Ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0fd3ba52":"import warnings\nwarnings.filterwarnings('ignore')\n\nimport shap\nimport lightgbm as lgb\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import KFold\nimport random","473d97ee":"players = pd.read_csv('..\/input\/nfl-big-data-bowl-2022\/players.csv')\nplayers.head()","40b57d0c":"mean=np.ceil(players['weight'].mean())\nmedian=np.ceil(players['weight'].median())","95ec6f9a":"#Code by Chinta https:\/\/www.kaggle.com\/chinta\/mlb-is-player-age-important\n\nplt.figure(figsize=(10, 5))\nsns.set_style('white')\nhist_plot = sns.histplot(players['weight'], )\nhist_plot.axvline(mean, color='r', linestyle='--', linewidth = 4, label = f'mean-{mean}')\nhist_plot.axvline(median, color='g', linestyle='-', linewidth = 4, label = f'median-{median}')\nplt.suptitle(\"Players Weight Distribution\")\nplt.legend();","68b5994e":"scouting = pd.read_csv('..\/input\/nfl-big-data-bowl-2022\/PFFScoutingData.csv')\nscouting.head(2)","8c3eb417":"tracking = pd.read_csv('..\/input\/nfl-big-data-bowl-2022\/tracking2020.csv')\ntracking.head(2)","5d02f38b":"tracking19 = pd.read_csv('..\/input\/nfl-big-data-bowl-2022\/tracking2019.csv')\ntracking19.head(2)","18ea71f1":"tracking18 = pd.read_csv('..\/input\/nfl-big-data-bowl-2022\/tracking2018.csv')\ntracking18.head(2)","863ca1e1":"games = pd.read_csv('..\/input\/nfl-big-data-bowl-2022\/games.csv')\ngames.head()","a1331e1e":"plays = pd.read_csv('..\/input\/nfl-big-data-bowl-2022\/plays.csv')\nplays.head(2)","5459239c":"plays.isnull().sum()","abe66434":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in plays.specialTeamsPlayType)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","3a0d0b10":"playscorr=plays.corr()\nplayscorr","840fa958":"plt.figure(figsize=(10,4))\nsns.heatmap(plays.corr(),annot=False,cmap='summer')\nplt.show()","b59f38fe":"#Code by Thor the God of Thunder\n\ncat = []\nnum = []\nfor col in tracking.columns:\n    if tracking[col].dtype=='O':\n        cat.append(col)\n    else:\n        num.append(col)  \n        \n        \nnum ","e0d3d757":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in plays.specialTeamsResult)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='GnBu', background_color=\"white\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","f948c885":"#Code by Thor the God of Thunder\n\n#plt.style.use('dark_background') #dark ruined my Shap values \nfor col in tracking[num].drop(['playId'],axis=1):\n    plt.figure(figsize=(8,5))\n    plt.plot(tracking[col].value_counts(),color='Red')\n    plt.xlabel(col)\n    plt.ylabel('playId')\n    plt.tight_layout()\n    plt.show()","c23b83ae":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/www.rookieroad.com\/img\/football\/football-touchback.png',width=400,height=400)","86fa6be0":"#Code by rossinEndrew https:\/\/www.kaggle.com\/endrewrossin\/fast-initial-lightgbm-model-to-detect-exam-result\/comments\n\nSEED = 99\nrandom.seed(SEED)\nnp.random.seed(SEED)","5a4976a3":"#Code by rossinEndrew https:\/\/www.kaggle.com\/endrewrossin\/fast-initial-lightgbm-model-to-detect-exam-result\/comments\n\nplaysmodel = plays.copy()\n\n# read the \"object\" columns and use labelEncoder to transform to numeric\nfor col in playsmodel.columns[playsmodel.dtypes == 'object']:\n    le = LabelEncoder()\n    playsmodel[col] = playsmodel[col].astype(str)\n    le.fit(playsmodel[col])\n    playsmodel[col] = le.transform(playsmodel[col])","8d133c71":"#change columns names to alphanumeric\nplaysmodel.columns = [\"\".join (c if c.isalnum() else \"_\" for c in str(x)) for x in playsmodel.columns]","81599c4f":"X = playsmodel.drop(['playResult','playId'], axis = 1)\ny = playsmodel['playResult']","c55c4a0e":"lgb_params = {\n                    'objective':'binary',\n                    'metric':'auc',\n                    'n_jobs':-1,\n                    'learning_rate':0.005,\n                    'num_leaves': 20,\n                    'max_depth':-1,\n                    'subsample':0.9,\n                    'n_estimators':2500,\n                    'seed': SEED,\n                    'early_stopping_rounds':100, \n                }","472cfdae":"#Code by rossinEndrew https:\/\/www.kaggle.com\/endrewrossin\/fast-initial-lightgbm-model-to-detect-exam-result\/comments\n\n# choose the number of folds, and create a variable to store the auc values and the iteration values.\nK = 5\nfolds = KFold(K, shuffle = True, random_state = SEED)\nbest_scorecv= 0\nbest_iteration=0\n\n# Separate data in folds, create train and validation dataframes, train the model and cauculate the mean AUC.\nfor fold , (train_index,test_index) in enumerate(folds.split(X, y)):\n    print('Fold:',fold+1)\n          \n    X_traincv, X_testcv = X.iloc[train_index], X.iloc[test_index]\n    y_traincv, y_testcv = y.iloc[train_index], y.iloc[test_index]\n    \n    train_data = lgb.Dataset(X_traincv, y_traincv)\n    val_data   = lgb.Dataset(X_testcv, y_testcv)\n    \n    LGBM = lgb.train(lgb_params, train_data, valid_sets=[train_data,val_data], verbose_eval=250)\n    best_scorecv += LGBM.best_score['valid_1']['auc']\n    best_iteration += LGBM.best_iteration\n\nbest_scorecv \/= K\nbest_iteration \/= K\nprint('\\n Mean AUC score:', best_scorecv)\nprint('\\n Mean best iteration:', best_iteration)","cb9eb9cb":"#Code by rossinEndrew https:\/\/www.kaggle.com\/endrewrossin\/fast-initial-lightgbm-model-to-detect-exam-result\/comments\n\nlgb_params = {\n                    'objective':'binary',\n                    'metric':'auc',\n                    'n_jobs':-1,\n                    'learning_rate':0.05,\n                    'num_leaves': 20,\n                    'max_depth':-1,\n                    'subsample':0.9,\n                    'n_estimators':round(best_iteration),\n                    'seed': SEED,\n                    'early_stopping_rounds':None, \n                }\n\ntrain_data_final = lgb.Dataset(X, y)\nLGBM = lgb.train(lgb_params, train_data)","c16a8e37":"print(LGBM)","670b5168":"# telling wich model to use\nexplainer = shap.TreeExplainer(LGBM)\n# Calculating the Shap values of X features\nshap_values = explainer.shap_values(X)","bdbcc731":"shap.summary_plot(shap_values[1], X, plot_type=\"bar\")","a374e30e":"shap.summary_plot(shap_values[1], X)","916ba93e":"from sklearn.preprocessing import LabelEncoder\n\n#fill in mean for floats\nfor c in plays.columns:\n    if plays[c].dtype=='float16' or  plays[c].dtype=='float32' or  plays[c].dtype=='float64':\n        plays[c].fillna(plays[c].mean())\n\n#fill in -999 for categoricals\nplays = plays.fillna(-999)\n# Label Encoding\nfor f in plays.columns:\n    if plays[f].dtype=='object': \n        lbl = LabelEncoder()\n        lbl.fit(list(plays[f].values))\n        plays[f] = lbl.transform(list(plays[f].values))\n        \nprint('Labelling done.')","50822059":"#Code by Tudor Ioan  https:\/\/www.kaggle.com\/tudoale1\/heart-failure-prediction-using-adasys\n\ndef plotting(col): #function to plot data\n    plt.figure(figsize=(5, 3))\n    sns.distplot(plays[col])\n\nfor col in plays:\n    plotting(col)","c5464d32":"brady = players[(players['displayName']=='Tom Brady')].reset_index(drop=True)\nbrady.head()","0fb69435":"<h1><span class=\"label label-default\" style=\"background-color:#8B4513;border-radius:100px 100px; font-weight: bold; font-family:Garamond; font-size:20px; color:#DEB887; padding:10px\">Receptions, Catches, Laterals<\/span><\/h1><br>\n\n#That's the moment I'm really going crazy: We have R and C in Ventilator Pressure Prediction Contest. Above we see R and C (kickDirectionIntended, kickDirectionActual,returnDirectionIntended, returnDirectionActual) columns. \n\nMaybe it's Reception\/Catch\/Lateral.\n\n\"When a player catches (receives) the ball past the line of scrimmage. If a RECEPTION is made behind the line of scrimmage, it is a LATERAL. Another name for a CATCH.\"\n\nhttps:\/\/en.wikipedia.org\/wiki\/Glossary_of_American_football_terms","5badb38d":"![](http:\/\/static1.squarespace.com\/static\/54aac868e4b00f7c5fbf0a24\/54ad9112e4b00b45194e9d3f\/558452a5e4b0875de16d1201\/1434736328179\/?format=1500w)makegamedayeveryday.com","79547300":"![](https:\/\/nflstatic.s3.amazonaws.com\/attachments\/ckd0czhw40o680imyjdsqysfy-offensive-vs-defensivev2.max.png)nflflag.com","fd707d2f":"![](https:\/\/images.daznservices.com\/di\/library\/sporting_news\/e7\/b2\/2022-nfl-draft-big-board_9ege0v5zsuwa1hofx39butfta.jpg?t=476393145&quality=100)sportingnews.com","19a8e6c3":"<h1><span class=\"label label-default\" style=\"background-color:#8B4513;border-radius:100px 100px; font-weight: bold; font-family:Garamond; font-size:20px; color:#DEB887; padding:10px\">NFL Abbreviations<\/span><\/h1><br>\n\nAbbreviation\tPosition\n\nQB\tQuarterback\n\nRB\tRunning Back\n\nFB\tFullback\n\nWR\tWide Receiver\n\nTE\tTight End\n\nOL\tOffensive Lineman\n\nC\tCenter\n\nG\tGuard\n\nLG\tLeft Guard\n\nRG\tRight Guard\n\nT\tTackle\n\nLT\tLeft Tackle\n\nRT\tRight Tackle\n\nK\tKicker\n\nKR\tKick Returner\n\nDL\tDefensive Lineman\n\nDE\tDefensive End\n\nDT\tDefensive Tackle\n\nNT\tNose Tackle\n\nLB\tLinebacker\n\nILB\tInside Linebacker\n\nOLB\tOutside Linebacker\n\nMLB\tMiddle Linebacker\n\nDB\tDefensive Back\n\nCB\tCornerback\n\nFS\tFree Safety\n\nSS\tStrong Safety\n\nS\tSafety\n\nP\tPunter\n\nPR\tPunt Returner\n\nhttp:\/\/stats.washingtonpost.com\/fb\/glossary.asp","54242b87":"<iframe width=\"956\" height=\"538\" src=\"https:\/\/www.youtube.com\/embed\/i8wkptMptOE\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>","84f4eb2c":"#In spite of the charts above, I still don't know the meaning of x, y, s, a, dis, o features.","795b5b16":"#Are you going to stick up for your teammates in this competition?\n\n#This is what you call sticking up for your teammates\n\nhttps:\/\/www.youtube.com\/watch?v=i8wkptMptOE ","7369531e":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 20px; background: black;\"><i><b style=\"color:#DEB887;\">NFL Bowl 2022 - Plays and Players<\/b><\/i><\/h1><\/center>","b65d0770":"#Since the Label Encoder above didn't work, I encoded again so that I could see the density of some features.","46d382ab":"![](https:\/\/pbs.twimg.com\/media\/DMSJFq1WkAAv6BR.jpg)twitter.com","9ada6ccb":"<h1><span class=\"label label-default\" style=\"background-color:#8B4513;border-radius:100px 100px; font-weight: bold; font-family:Garamond; font-size:20px; color:#DEB887; padding:10px\">Jersey Numbers: Squad Numbers<\/span><\/h1><br>\n\nJersey Numbers:\n\n\"Numbers 1 to 19 are worn by quarterbacks, kickers, and punters. Since 2004, wide receivers are also allowed to wear numbers between 10 and 19 if they so choose, even if there is an 80-89 number available. In the rare event that all numbers from 10-19 and 80-89 are taken, receivers are allowed to wear single digit numbers, such as Biren Ealy, current NFL Free Agent, on the Baltimore Ravens then wore a single digit number in the 2009 Preseason.\"\n\n\n\"Numbers 20 to 49 are worn by running backs, tight ends (who may wear a number between 40-49 when 80-89 are unavailable), cornerbacks and safeties.\"\n\n\"Numbers 50 to 59 are worn by linebackers and centers.\"\n\n\"Numbers 60 to 79 are worn by tackles, guards and defensive linemen (the defensive ends, defensive tackles or nose guard).\"\n\n\"Numbers 80 to 89 are worn by wide receivers and tight ends.\"\n\n\"Numbers 90 to 99 are worn by linebackers and defensive linemen. In use since 1984.\"\n\n\"Numbers 0 and 00 are no longer used, though they were issued in the NFL before the number standardization in 1973. George Plimpton wore 0 during a brief preseason stint at quarterback for the Detroit Lions. Jim Otto (\"aught-oh\") wore number \"00\" during most of his career with the Oakland Raiders. Wide receiver Ken Burrough of the Houston Oilers also wore \"00\" during his NFL career in the 1970s.\"\n\nhttps:\/\/americanfootball.fandom.com\/wiki\/Squad_number","9d05edd6":"#I couldn't find Tom Brady. Anyhow....","c049af9f":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcRnOP38qQrRtc32f5eG3pzQh0K_iRQOMgq5Wg&usqp=CAU)twitter.com","ce359514":"<h1><span class=\"label label-default\" style=\"background-color:#8B4513;border-radius:100px 100px; font-weight: bold; font-family:Garamond; font-size:20px; color:#DEB887; padding:10px\">American Football Terms<\/span><\/h1><br>\n\nWhat is a TOUCHBACK?\n\n\"A situation in football in which the ball is down behind the goal line after a kick or intercepted forward pass after which it is put in play by the team defending the goal on its own 20-yard line \u2014 compare safety.\"\n\nDefinition of YARD LINE: \n\nAny of a series of marked or imaginary lines one yard apart on a football field that are parallel to the goal lines and that indicate the distance to the nearest goal line\n\nKICKOFF\n\nA free kick which starts each half, or restarts the game following a touchdown or field goal. The kickoff may be a place kick in American or Canadian football, or a drop kick in American football.\n\nhttps:\/\/www.merriam-webster.com\/dictionary\n\nhttps:\/\/en.wikipedia.org\/wiki\/Glossary_of_American_football_terms","3c4b70fc":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQBJ4LtgNbo9atvDby0C-pp5tP0ab0_WnIh4Q&usqp=CAU)sportsnaut.com","89942fa4":"![](https:\/\/media0.giphy.com\/media\/Nj4QsiCRlqIUuVji0B\/200w.webp?cid=ecf05e47keq40ler7q04o5hamk99zdqniwcm3hhr49lzai89&rid=200w.webp&ct=g)"}}