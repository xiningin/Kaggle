{"cell_type":{"1c668edc":"code","65a4045f":"code","60adf1ff":"code","1005e8c4":"code","8b6284e2":"code","f14a5ca9":"code","0a6a41c5":"code","cb0c5d53":"code","34bcf282":"code","9171fab7":"code","60167b4c":"code","6ed1603f":"code","cfd6618d":"code","4b3bdf22":"code","a8bcbc10":"code","620b5ba3":"code","24e3c7fe":"code","522cf022":"code","6ecb0603":"code","c6381cbd":"code","4707b2db":"code","46ca5f95":"code","faa27682":"code","44777921":"code","f617ab6a":"code","f0321617":"markdown","1a0f393e":"markdown","7f8a22a3":"markdown","c33bf70d":"markdown","7a63755b":"markdown","29d9f318":"markdown","b8849592":"markdown","938c187f":"markdown","e1100f09":"markdown","1deb3445":"markdown"},"source":{"1c668edc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\nimport pandas as pd\nimport boto3\nfrom io import StringIO\nimport io\nimport string\nimport random\nimport json\nimport pickle\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom scipy import stats\nfrom scipy.stats import norm\n\n# Any results you write to the current directory are saved as output.","65a4045f":"# Loading 100k data rows\n# Load train data\ntrain = pd.read_csv('..\/input\/train.csv', nrows=100000)\n\n# Load test data\ntest = pd.read_csv('..\/input\/test.csv', nrows=100000)\n\n# Load destination data\ndestination = pd.read_csv('..\/input\/destinations.csv', nrows=100000)\n","60adf1ff":"train.head()","1005e8c4":"train.columns","8b6284e2":"train.info()","f14a5ca9":"# Check the percentage of Nan in dataset\ntotal = train.isnull().sum().sort_values(ascending=False)\npercent = (train.isnull().sum()\/train['hotel_cluster'].count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(20)","0a6a41c5":"fig, ax = plt.subplots()\nfig.set_size_inches(15, 10)\nsns.heatmap(train.corr(),cmap='coolwarm',ax=ax,annot=True,linewidths=2)","cb0c5d53":"# Frequency of posa continent\nfig, ax = plt.subplots()\nfig.set_size_inches(13, 8)\nsns.countplot('posa_continent', data=train,order=[0,1,2,3,4],ax=ax)\n","34bcf282":"# frequency of hotel continent\nfig, ax = plt.subplots()\nfig.set_size_inches(13, 8)\nsns.countplot('hotel_continent', data=train,order=[0,2,3,4,5,6],ax=ax)\n","9171fab7":"# Frequency of booking through mobile\nfig, ax = plt.subplots()\nfig.set_size_inches(13, 8)\nsns.countplot(x='is_mobile',data=train, order=[0,1],ax=ax)\n","60167b4c":"# frequency of bookings with package\nfig, ax = plt.subplots()\nfig.set_size_inches(13, 8)\nsns.countplot(x='is_package',data=train, order=[0,1], ax=ax)","6ed1603f":"train.info()","cfd6618d":"# Function to convert date object into relevant attributes\ndef convert_date_into_days(df):\n    df['srch_ci'] = pd.to_datetime(df['srch_ci'])\n    df['srch_co'] = pd.to_datetime(df['srch_co'])\n    df['date_time'] = pd.to_datetime(df['date_time'])\n    \n    df['stay_dur'] = (df['srch_co'] - df['srch_ci']).astype('timedelta64[D]')\n    df['no_of_days_bet_booking'] = (df['srch_ci'] - df['date_time']).astype('timedelta64[D]')\n    \n    # For hotel check-in\n    # Month, Year, Day\n    df['Cin_day'] = df[\"srch_ci\"].apply(lambda x: x.day)\n    df['Cin_month'] = df[\"srch_ci\"].apply(lambda x: x.month)\n    df['Cin_year'] = df[\"srch_ci\"].apply(lambda x: x.year)\n","4b3bdf22":"convert_date_into_days(train)","a8bcbc10":"train.info()","620b5ba3":"# Count the bookings in each month\nfig, ax = plt.subplots()\nfig.set_size_inches(13, 8)\nsns.countplot('Cin_month',data=train[train[\"is_booking\"] == 1],order=list(range(1,13)),ax=ax)","24e3c7fe":"# Count the bookings as per the day\nfig, ax = plt.subplots()\nfig.set_size_inches(13, 8)\nsns.countplot('Cin_day',data=train[train[\"is_booking\"] == 1],order=list(range(1,32)),ax=ax)","522cf022":"# Count the bookings as per the stay_duration\nfig, ax = plt.subplots()\nfig.set_size_inches(13, 8)\nsns.countplot('stay_dur',data=train[train[\"is_booking\"] == 1],ax=ax)","6ecb0603":"# Check the percentage of Nan in dataset\ntotal = train.isnull().sum().sort_values(ascending=False)\npercent = (train.isnull().sum()\/train['hotel_cluster'].count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data","c6381cbd":"#train['Cin_day'].value_counts() = 26\n#train['Cin_month'].value_counts() = 8\n#train['Cin_year'].value_counts() = 2014\n#train['stay_dur'].value_counts() = 1\n#train['no_of_days_bet_booking'].value_counts() = 0","4707b2db":"train['Cin_day'] = train['Cin_day'].fillna(26.0)\ntrain['Cin_month'] = train['Cin_month'].fillna(8.0)\ntrain['Cin_year'] = train['Cin_year'].fillna(2014.0)\ntrain['stay_dur'] = train['stay_dur'].fillna(1.0)\ntrain['no_of_days_bet_booking'] = train['no_of_days_bet_booking'].fillna(0.0)","46ca5f95":"# Fill average values in place for nan, fill with mean\ntrain['orig_destination_distance'].fillna(train['orig_destination_distance'].mean(), inplace=True)","faa27682":"train.head()","44777921":"## Remove datetime object from the dataset\n#columns to remove\nuser_id = train['user_id']\ncolumns = ['date_time', 'srch_ci', 'srch_co','user_id','srch_destination_type_id','srch_destination_id']\ntrain.drop(columns=columns,axis=1,inplace=True)","f617ab6a":"train.info()","f0321617":"## Add Extra features\nExtract relevant information from date columns\n### Additional attributes\n- stay_dur: number of duration of stay\n- no_of_days_bet_booking: number of days between the booking and \n- Cin_day: Check-in day\n- Cin_month: Check-in month\n- Cin_year: Check-out year","1a0f393e":"Reference : http:\/\/www.cs.ccsu.edu\/~markov\/ccsu_courses\/datamining-3.html","7f8a22a3":"### Convert it into numerical values which will be relevant to our model.\n- date_time\n- srch_ci\n- srch_co\n\n\n","c33bf70d":"### Dataset\n\n- Dataset 2013-1014 time frame\n- Train Data: 37 million entires\n- Test Data: 2.5 million entries","7a63755b":"## Steps\n\nfirst step was to clean and pre-process the data and perform exploratory analysis to get some interesting insights into the process of choosing a hotel.\n\n- Remove the users who did not booked the hotel\n- Identify the searches by each user belonging to a specific type of destination\n- orig_destination_distance contains Nan values\n- The  check-in  and  check-out  dates  to find the duration of the stay for each of the entries in the training set.\n\n","29d9f318":"We have preprocessed our data and it is ready to fit into the model.\nAll the object values are converted into numerical values. Also, we have more insights of the data.","b8849592":"#### Features\n\n|  Feature |  Description | \n|----------|:---------|\n| date_time  | Timestamp     |\n| site_name | ID of Expedia point of sale|\n| posa_continent | ID of site\u2019s continent |\n| user_location_country |ID of customer\u2019s country |\n| user_location_region|ID of customer\u2019s region |\n| user_location_city| ID of customer\u2019s city|\n| orig_destination_distance| Physical distance between a hotel and a customer|\n| user_id| ID of user|\n| is_mobile| 1 for mobile device, 0 otherwise|\n| is_package| 1 if booking\/click was part of package, 0 otherwise|\n| channel| ID of a marketing channel|\n| srch_ci| Check-in date|\n| srch_co| Check-out date|\n| srch_adults_cnt| Number of adults|\n| srch_children_cnt| Number of children|\n| srch_rm_cnt| Number of rooms|\n| srch_destination_id| ID of the destination|\n| srch_destination_type_id| Type of destination|\n| is_booking | 1 if a booking, 0 if a click|\n| cnt| Number of similar events in the context of the same user sessiont|\n| hotel_continent| Hotel continent|\n| hotel_country| Hotel country|\n| hotel_market| Hotel market|\n| hotel_cluster| ID of hotel cluster|\n","938c187f":"### Fill nan with the day which has max occurence\n","e1100f09":"## Visualization of Data\n","1deb3445":"## Clean the Data"}}