{"cell_type":{"a0a8db47":"code","1293ae48":"code","6dbc4694":"code","2c6166b1":"code","6f9a8541":"code","9ae63de1":"code","9dab3685":"code","a916fe0d":"code","50269d17":"code","6433cf00":"code","a6be9670":"code","d68067ec":"code","17de747c":"code","a1a30c68":"markdown","0452769d":"markdown","23855ec7":"markdown","d7f0c567":"markdown","8eb63520":"markdown","0b4a5370":"markdown","2019681e":"markdown","f38f546c":"markdown","eac91da7":"markdown"},"source":{"a0a8db47":"import pandas as pd\nimport numpy as np\nimport re\n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom textblob import TextBlob as tb\nfrom subprocess import check_output\nfrom wordcloud import WordCloud, STOPWORDS\n\n!pip install PySastrawi\nfrom Sastrawi.Stemmer.StemmerFactory import StemmerFactory\n\n!pip install googletrans\nfrom googletrans import Translator","1293ae48":"df = pd.read_csv('..\/input\/covid19-indonesian-twitter-sentiment\/covid-sentiment.csv')\ndf.shape","6dbc4694":"df = df.drop_duplicates(subset='tweet', keep='first').reset_index()\ndf.shape","2c6166b1":"slang_dict = pd.read_csv('..\/input\/indonesian-abusive-and-hate-speech-twitter-text\/new_kamusalay.csv', encoding='latin-1', header=None)\nslang_dict = slang_dict.rename(columns={0: 'original', \n                                      1: 'replacement'})\n\nid_stopword_dict = pd.read_csv('..\/input\/indonesian-stoplist\/stopwordbahasa.csv', header=None)\nid_stopword_dict = id_stopword_dict.rename(columns={0: 'stopword'})\nstopwords_new = pd.DataFrame(['sih','nya', 'iya', 'nih', 'biar', 'tau', 'kayak', 'banget'], columns=['stopword'])\nid_stopword_dict = pd.concat([id_stopword_dict,stopwords_new]).reset_index()\nid_stopword_dict = pd.DataFrame(id_stopword_dict['stopword'])","6f9a8541":"factory = StemmerFactory()\nstemmer = factory.create_stemmer()\n\n\ndef lowercase(text):\n    return text.lower()\n\ndef remove_unnecessary_char(text):\n    text = re.sub(r'pic.twitter.com.[\\w]+', '', text) # Remove every pic \n    text = re.sub('((www\\.[^\\s]+)|(https?:\/\/[^\\s]+)|(http?:\/\/[^\\s]+))',' ',text) # Remove every URL\n    \n    text = re.sub('gue','saya',text) # Sub gue saya\n    text = re.sub('\\n',' ',text) # Remove every '\\n'\n    \n    text = re.sub(r'[^\\x00-\\x7F]+',' ', text)\n    text = re.sub(r':', '', text)\n    text = re.sub(r'\u201a\u00c4\u00b6', '', text)\n    \n    to_delete = ['hypertext', 'transfer', 'protocol', 'over', 'secure', 'socket', 'layer', 'dtype', 'tweet', 'name', 'object'\n                 ,'twitter','com', 'pic', ' ya ']\n    \n    for word in to_delete:\n        text = re.sub(word,'', text)\n        text = re.sub(word.upper(),' ',text)\n    \n    retweet_user = [' rt ', ' user ']\n    \n    for word in retweet_user:\n        text = re.sub(word,' ',text) # Remove every retweet symbol & username\n        text = re.sub(word.upper(),' ',text)\n        \n    text = re.sub('  +', ' ', text) # Remove extra spaces\n    return text\n    \ndef remove_nonaplhanumeric(text):\n    text = re.sub('[^0-9a-zA-Z]+', ' ', text) \n    return text\n\nslang_dict_map = dict(zip(slang_dict['original'], slang_dict['replacement']))\n\ndef normalize_slang(text):\n    return ' '.join([slang_dict_map[word] if word in slang_dict_map else word for word in text.split(' ')])\n\ndef remove_stopword(text):\n    text = ' '.join(['' if word in id_stopword_dict.stopword.values else word for word in text.split(' ')])\n    text = re.sub('  +', ' ', text) # Remove extra spaces\n    text = text.strip()\n    return text\n\ndef stemming(text):\n    return stemmer.stem(text)","9ae63de1":"def preprocess(text):\n    text = lowercase(text)\n    text = remove_unnecessary_char(text)\n    text = remove_nonaplhanumeric(text)\n    text = normalize_slang(text)\n    text = stemming(text) \n    text = remove_stopword(text)\n    return text","9dab3685":"df['tweet'] = df['tweet'].apply(preprocess).apply(preprocess)","a916fe0d":"df = df.drop_duplicates(subset='tweet', keep='first').reset_index()\ndf.shape","50269d17":"df.to_csv('covid-sentiment-preprocessed.csv', index=False)","6433cf00":"mpl.rcParams['figure.figsize']=(12.0,12.0) \nmpl.rcParams['font.size']=12              \nmpl.rcParams['savefig.dpi']=100             \nmpl.rcParams['figure.subplot.bottom']=.1 \n\n\nstopwords = set(STOPWORDS)\n\nwordcloud = WordCloud(\n                          background_color='white',\n                          stopwords=id_stopword_dict,\n                          max_words=400,\n                          max_font_size=50, \n                          random_state=69\n                         ).generate(str(df['tweet']))\n\nprint(wordcloud)\nfig = plt.figure(1)\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()\nfig.savefig(\"word1.png\", dpi=900)","a6be9670":"translator = Translator()\ntranslator.translate('nice', dest='id').text","d68067ec":"def en_to_id(sentence):\n    if tb(sentence).detect_language() == 'en':\n        return tb(sentence)\n    \n    translator = Translator()\n    \n    output = translator.translate(sentence, dest='en')\n    return tb(output.text)\n    \ndef get_sentiment(sentence):\n    sentence = en_to_id(sentence)\n    return sentence.sentiment\n\ndef round_polarity(value):\n    if value >= 0.3:\n        return 1\n    elif value == 0:\n        return 0\n    return -1\n\ndef round_subjectivity(value):\n    if value >= 0:\n        return 1\n    elif value == 0:\n        return 0\n    return -1","17de747c":"tweets = df['tweet']\npolarity = []\nsubjectivity = []\n\nfor tweet in tweets:\n    sentiment = get_sentiment(tweet)\n    \n    polarity.append(round_polarity(sentiment[0]))\n    subjectivity.append(round_subjectivity(sentiment[1]))","a1a30c68":"## Dropping Duplicates","0452769d":"* Lowercasing\n* Stemming\n* Stopwords Removal\n* Non-Alphanumeric Removal\n* Unnecessary Character Removal","23855ec7":"# Simple Sentiment Analysis","d7f0c567":"# WordCloud","8eb63520":"## Text Preprocessing","0b4a5370":"# COVID-19 Tweets: Data Cleaning","2019681e":"**Credits**:\n* Indonesian Stoplist by <a href=\"https:\/\/www.kaggle.com\/oswinrh\">oswinrh<\/a>\n* Indonesian Abusive and Hate Speech Twitter Text by <a href=\"https:\/\/www.kaggle.com\/ilhamfp31\">ilhamfp31<\/a>","f38f546c":"### Others","eac91da7":"### Slang Words Replacement"}}