{"cell_type":{"0b65bdca":"code","1d8af922":"code","dbc8d50d":"code","86493478":"code","1f6b9ac6":"code","de0aaf1c":"markdown","96eebf40":"markdown","06aa7656":"markdown"},"source":{"0b65bdca":"import keras\nimport numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom keras.models import Sequential\nfrom keras.layers import Conv2D,MaxPooling2D,Flatten,Dense","1d8af922":"file = '\/kaggle\/input\/digit-recognizer\/train.csv'\ndata = pd.read_csv(file)","dbc8d50d":"X = data.drop('label',axis =1)\/255.0\nY = data['label']\ntrain_x,test_x,train_y,test_y = train_test_split(X,Y,test_size =0.1)\ntrain_x = train_x.values.reshape(-1,28,28,1)\ntest_x = test_x.values.reshape(-1,28,28,1)","86493478":"model = Sequential() \nmodel.add(Conv2D(32, kernel_size =(5, 5), strides =(1, 1), \n                 activation ='relu',input_shape=(28,28,1))) \nmodel.add(MaxPooling2D(pool_size =(2, 2), strides =(2, 2))) \nmodel.add(Conv2D(64, (5, 5), activation ='relu')) \nmodel.add(MaxPooling2D(pool_size =(2, 2))) \nmodel.add(Conv2D(128, (3, 3), activation ='relu')) \nmodel.add(MaxPooling2D(pool_size =(2, 2))) \nmodel.add(Flatten()) \nmodel.add(Dense(1000, activation ='relu')) \nmodel.add(Dense(500, activation ='relu')) \nmodel.add(Dense(10, activation ='softmax')) \nmodel.compile(loss = keras.losses.sparse_categorical_crossentropy, \n              optimizer = keras.optimizers.SGD(lr = 0.01), \n              metrics =['accuracy']) ","1f6b9ac6":"model.fit(train_x,train_y,epochs=50,validation_data = (test_x,test_y))","de0aaf1c":"Load data","96eebf40":"Importing Library","06aa7656":"Splitting Datas"}}