{"cell_type":{"1236dab4":"code","cd8161a2":"code","72d72e20":"code","68db81cd":"code","63f97511":"code","1c699c7c":"code","6b766af5":"code","36eab64f":"code","6faf7d0a":"code","d0c44760":"code","5c998c99":"code","bc8457aa":"code","7e8754a7":"code","19885e60":"code","6a28ce5e":"code","bf045a2c":"code","0c3417d1":"code","8a1b94f7":"code","7d0f5cac":"code","47aacc8f":"code","5a876120":"code","d3fd02aa":"markdown","8ba62a3d":"markdown","f73fb5e6":"markdown","19c45994":"markdown","b205f799":"markdown","ec82e42d":"markdown","3c3d1109":"markdown","00a2179b":"markdown","acb4741c":"markdown","f5e288b5":"markdown","710922a4":"markdown","02491c05":"markdown","978c43ab":"markdown","cfc23944":"markdown","9d310b0d":"markdown","8bd53449":"markdown","5f19e0ea":"markdown","5d910bec":"markdown","8df35891":"markdown"},"source":{"1236dab4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error, mean_squared_log_error","cd8161a2":"data = pd.read_csv('..\/input\/world-bank-data-1960-to-2016-extended\/countries-of-the-world\/countries of the world.csv',decimal=',')\ndata.head()","72d72e20":"data.info()","68db81cd":"data.describe(include='all')","63f97511":"print('number of missing data:')\nprint(data.isnull().sum())","1c699c7c":"data.groupby('Region')[['GDP ($ per capita)','Literacy (%)','Agriculture']].median()","6b766af5":"for col in data.columns.values:\n    if data[col].isnull().sum() == 0:\n        continue\n    if col == 'Climate':\n        guess_values = data.groupby('Region')['Climate'].apply(lambda x: x.mode().max())\n    else:\n        guess_values = data.groupby('Region')[col].median()\n    for region in data['Region'].unique():\n        data[col].loc[(data[col].isnull())&(data['Region']==region)] = guess_values[region]","36eab64f":"fig, ax = plt.subplots(figsize=(16,6))\n#ax = fig.add_subplot(111)\ntop_gdp_countries = data.sort_values('GDP ($ per capita)',ascending=False).head(20)\nmean = pd.DataFrame({'Country':['World mean'], 'GDP ($ per capita)':[data['GDP ($ per capita)'].mean()]})\ngdps = pd.concat([top_gdp_countries[['Country','GDP ($ per capita)']],mean],ignore_index=True)\n\nsns.barplot(x='Country',y='GDP ($ per capita)',data=gdps, palette='Set3')\nax.set_xlabel(ax.get_xlabel(),labelpad=15)\nax.set_ylabel(ax.get_ylabel(),labelpad=30)\nax.xaxis.label.set_fontsize(16)\nax.yaxis.label.set_fontsize(16)\nplt.xticks(rotation=90)\nplt.show()","6faf7d0a":"plt.figure(figsize=(16,12))\nsns.heatmap(data=data.iloc[:,2:].corr(),annot=True,fmt='.2f',cmap='coolwarm')\nplt.show()","d0c44760":"fig, axes = plt.subplots(nrows=2, ncols=3, figsize=(20,12))\nplt.subplots_adjust(hspace=0.4)\n\ncorr_to_gdp = pd.Series()\nfor col in data.columns.values[2:]:\n    if ((col!='GDP ($ per capita)')&(col!='Climate')):\n        corr_to_gdp[col] = data['GDP ($ per capita)'].corr(data[col])\nabs_corr_to_gdp = corr_to_gdp.abs().sort_values(ascending=False)\ncorr_to_gdp = corr_to_gdp.loc[abs_corr_to_gdp.index]\n\nfor i in range(2):\n    for j in range(3):\n        sns.regplot(x=corr_to_gdp.index.values[i*3+j], y='GDP ($ per capita)', data=data,\n                   ax=axes[i,j], fit_reg=False, marker='.')\n        title = 'correlation='+str(corr_to_gdp[i*3+j])\n        axes[i,j].set_title(title)\naxes[1,2].set_xlim(0,102)\nplt.show()","5c998c99":"data.loc[(data['Birthrate']<14)&(data['GDP ($ per capita)']<10000)]","bc8457aa":"LE = LabelEncoder()\ndata['Region_label'] = LE.fit_transform(data['Region'])\ndata['Climate_label'] = LE.fit_transform(data['Climate'])\ndata.head()","7e8754a7":"train, test = train_test_split(data, test_size=0.3, shuffle=True)\ntraining_features = ['Population', 'Area (sq. mi.)',\n       'Pop. Density (per sq. mi.)', 'Coastline (coast\/area ratio)',\n       'Net migration', 'Infant mortality (per 1000 births)',\n       'Literacy (%)', 'Phones (per 1000)',\n       'Arable (%)', 'Crops (%)', 'Other (%)', 'Birthrate',\n       'Deathrate', 'Agriculture', 'Industry', 'Service', 'Region_label',\n       'Climate_label','Service']\ntarget = 'GDP ($ per capita)'\ntrain_X = train[training_features]\ntrain_Y = train[target]\ntest_X = test[training_features]\ntest_Y = test[target]","19885e60":"model = LinearRegression()\nmodel.fit(train_X, train_Y)\ntrain_pred_Y = model.predict(train_X)\ntest_pred_Y = model.predict(test_X)\ntrain_pred_Y = pd.Series(train_pred_Y.clip(0, train_pred_Y.max()), index=train_Y.index)\ntest_pred_Y = pd.Series(test_pred_Y.clip(0, test_pred_Y.max()), index=test_Y.index)\n\nrmse_train = np.sqrt(mean_squared_error(train_pred_Y, train_Y))\nmsle_train = mean_squared_log_error(train_pred_Y, train_Y)\nrmse_test = np.sqrt(mean_squared_error(test_pred_Y, test_Y))\nmsle_test = mean_squared_log_error(test_pred_Y, test_Y)\n\nprint('rmse_train:',rmse_train,'msle_train:',msle_train)\nprint('rmse_test:',rmse_test,'msle_test:',msle_test)","6a28ce5e":"model = RandomForestRegressor(n_estimators = 50,\n                             max_depth = 6,\n                             min_weight_fraction_leaf = 0.05,\n                             max_features = 0.8,\n                             random_state = 42)\nmodel.fit(train_X, train_Y)\ntrain_pred_Y = model.predict(train_X)\ntest_pred_Y = model.predict(test_X)\ntrain_pred_Y = pd.Series(train_pred_Y.clip(0, train_pred_Y.max()), index=train_Y.index)\ntest_pred_Y = pd.Series(test_pred_Y.clip(0, test_pred_Y.max()), index=test_Y.index)\n\nrmse_train = np.sqrt(mean_squared_error(train_pred_Y, train_Y))\nmsle_train = mean_squared_log_error(train_pred_Y, train_Y)\nrmse_test = np.sqrt(mean_squared_error(test_pred_Y, test_Y))\nmsle_test = mean_squared_log_error(test_pred_Y, test_Y)\n\nprint('rmse_train:',rmse_train,'msle_train:',msle_train)\nprint('rmse_test:',rmse_test,'msle_test:',msle_test)","bf045a2c":"plt.figure(figsize=(18,12))\n\ntrain_test_Y = train_Y.append(test_Y)\ntrain_test_pred_Y = train_pred_Y.append(test_pred_Y)\n\ndata_shuffled = data.loc[train_test_Y.index]\nlabel = data_shuffled['Country']\n\ncolors = {'ASIA (EX. NEAR EAST)         ':'red',\n          'EASTERN EUROPE                     ':'orange',\n          'NORTHERN AFRICA                    ':'gold',\n          'OCEANIA                            ':'green',\n          'WESTERN EUROPE                     ':'blue',\n          'SUB-SAHARAN AFRICA                 ':'purple',\n          'LATIN AMER. & CARIB    ':'olive',\n          'C.W. OF IND. STATES ':'cyan',\n          'NEAR EAST                          ':'hotpink',\n          'NORTHERN AMERICA                   ':'lightseagreen',\n          'BALTICS                            ':'rosybrown'}\n\nfor region, color in colors.items():\n    X = train_test_Y.loc[data_shuffled['Region']==region]\n    Y = train_test_pred_Y.loc[data_shuffled['Region']==region]\n    ax = sns.regplot(x=X, y=Y, marker='.', fit_reg=False, color=color, scatter_kws={'s':200, 'linewidths':0}, label=region) \nplt.legend(loc=4,prop={'size': 12})  \n\nax.set_xlabel('GDP ($ per capita) ground truth',labelpad=40)\nax.set_ylabel('GDP ($ per capita) predicted',labelpad=40)\nax.xaxis.label.set_fontsize(24)\nax.yaxis.label.set_fontsize(24)\nax.tick_params(labelsize=12)\n\nx = np.linspace(-1000,50000,100) # 100 linearly spaced numbers\ny = x\nplt.plot(x,y,c='gray')\n\nplt.xlim(-1000,60000)\nplt.ylim(-1000,40000)\n\nfor i in range(0,train_test_Y.shape[0]):\n    if((data_shuffled['Area (sq. mi.)'].iloc[i]>8e5) |\n       (data_shuffled['Population'].iloc[i]>1e8) |\n       (data_shuffled['GDP ($ per capita)'].iloc[i]>10000)):\n        plt.text(train_test_Y.iloc[i]+200, train_test_pred_Y.iloc[i]-200, label.iloc[i], size='small')","0c3417d1":"data['Total_GDP ($)'] = data['GDP ($ per capita)'] * data['Population']\n#plt.figure(figsize=(16,6))\ntop_gdp_countries = data.sort_values('Total_GDP ($)',ascending=False).head(10)\nother = pd.DataFrame({'Country':['Other'], 'Total_GDP ($)':[data['Total_GDP ($)'].sum() - top_gdp_countries['Total_GDP ($)'].sum()]})\ngdps = pd.concat([top_gdp_countries[['Country','Total_GDP ($)']],other],ignore_index=True)\n\nfig, axes = plt.subplots(nrows=1, ncols=2, figsize=(20,7),gridspec_kw = {'width_ratios':[2,1]})\nsns.barplot(x='Country',y='Total_GDP ($)',data=gdps,ax=axes[0],palette='Set3')\naxes[0].set_xlabel('Country',labelpad=30,fontsize=16)\naxes[0].set_ylabel('Total_GDP',labelpad=30,fontsize=16)\n\ncolors = sns.color_palette(\"Set3\", gdps.shape[0]).as_hex()\naxes[1].pie(gdps['Total_GDP ($)'], labels=gdps['Country'],colors=colors,autopct='%1.1f%%',shadow=True)\naxes[1].axis('equal')\nplt.show()","8a1b94f7":"Rank1 = data[['Country','Total_GDP ($)']].sort_values('Total_GDP ($)', ascending=False).reset_index()\nRank2 = data[['Country','GDP ($ per capita)']].sort_values('GDP ($ per capita)', ascending=False).reset_index()\nRank1 = pd.Series(Rank1.index.values+1, index=Rank1.Country)\nRank2 = pd.Series(Rank2.index.values+1, index=Rank2.Country)\nRank_change = (Rank2-Rank1).sort_values(ascending=False)\nprint('rank of total GDP - rank of GDP per capita:')\nRank_change.loc[top_gdp_countries.Country]","7d0f5cac":"corr_to_gdp = pd.Series()\nfor col in data.columns.values[2:]:\n    if ((col!='Total_GDP ($)')&(col!='Climate')&(col!='GDP ($ per capita)')):\n        corr_to_gdp[col] = data['Total_GDP ($)'].corr(data[col])\nabs_corr_to_gdp = corr_to_gdp.abs().sort_values(ascending=False)\ncorr_to_gdp = corr_to_gdp.loc[abs_corr_to_gdp.index]\nprint(corr_to_gdp)","47aacc8f":"plot_data = top_gdp_countries.head(10)[['Country','Agriculture', 'Industry', 'Service']]\nplot_data = plot_data.set_index('Country')\nax = plot_data.plot.bar(stacked=True,figsize=(10,6))\nax.legend(bbox_to_anchor=(1, 1))\nplt.show()","5a876120":"plot_data = top_gdp_countries[['Country','Arable (%)', 'Crops (%)', 'Other (%)']]\nplot_data = plot_data.set_index('Country')\nax = plot_data.plot.bar(stacked=True,figsize=(10,6))\nax.legend(bbox_to_anchor=(1, 1))\nplt.show()","d3fd02aa":"## Total GDP\n\n### Top Countries\n\n#### It is also interesting to look at the total GDPs, which I take as \u2018GDP ($ per capita)\u2019 \u00d7 \u2018Population\u2019.\n\n Here are the top 10 countries with highest total GDPs, their GDP make up to about 2\/3 of the global GDP.","8ba62a3d":"# 4. Data Exploration\n\n### Top Countries with highest GDP per capita\nLook at the top 20 countries with highest GDP per capita. Luxembourg is quite ahead, the next 19 countries are close. German, the 20th has about 2.5 times GDP per capita of the world average.","f73fb5e6":"## Training and Testing\n\n### First label encode the categorical features \u2018Region\u2019 and \u2018Climate\u2019, and I will just use all features given in the data set without further feature engineering.","19c45994":"### Let\u2019s compare the above ten countries\u2019 rank in total GDP and GDP per capita.\n\n","b205f799":"### First let\u2019s try the linear regression model. As for metric, I will check both root mean squared error and mean squared log error.\n\n","ec82e42d":"# 2. Let\u2019s look at the data","3c3d1109":"### We see the countries with high total GDPs are quite different from those with high average GDPs.\n\n### China and India jump above a lot when it comes to the total GDP.\n\n### The only country that is with in top 10 (in fact top 2) for both total and average GDPs is the United States.","00a2179b":"# 1. importing the required Python libraries","acb4741c":"![](https:\/\/i1.wp.com\/thecleverprogrammer.com\/wp-content\/uploads\/2020\/05\/Untitled-108.png?resize=600%2C338&ssl=1)\n\n### In this Data Science Project, I am investigating the dataset \u201cCountries of the World\u201d. I will be focusing on the factors affecting a country\u2019s GDP per capita and try to make a model using the data of 227 countries from the dataset. I will also briefly discuss the total GDP.","f5e288b5":"## Visualization of Results\n\n### To see how the model is doing, we can make scatter plot of prediction against ground truth. The model gives a reasonable prediction, as the data points are gathering around the line y=x.","710922a4":"### As we know the target not linear with many features, it is worth trying some nonlinear models. For example, the random forest model:\n\n","02491c05":"## Countries with low Birthrate and low GDP per capita\n\n### Some features, like phones, are related to the average GDP more linearly, while others are not. For example, High birthrate usually means low GDP per capita, but average GDP in low birthrate countries can vary a lot.\n\n### Let\u2019s look at the countries with low birthrate (<14%) and low GDP per capita (<10000 $). They also have hight literacy, like other high average GDP countires. But we hope their other features can help distiguish them from those with low birthrate but high average GDPs, like service are not quite an importent portion in their economy, not a lot phone procession, some have negative net migration, and many of them are from eastern Europe or C.W. of IND. STATES, so the \u2018region\u2019 feature may also be useful.","978c43ab":"## Data Preparation \u2013 fill in missing values\n\nWe noticed that there are some missing data in the table. For simplicity, I will just fill the missing data using the median of the region that a country belongs, as countries that are close geologically are often similar in many ways. For example, lets check the region median of \u2018GDP ($ per capita)\u2019, \u2018Literacy (%)\u2019 and \u2018Agriculture\u2019.\n\nNote that for \u2018climate\u2019 we use the mode instead of median as it seems that \u2018climate\u2019 is a categorical feature here.","cfc23944":"## Comparison of the Top 10\n\n### Finally, let us do a comparison of the economy structure for the ten countries with highest total GDP.","9d310b0d":"# 4. Correlation between Variables\n\n### The heatmap shows the correlation between all numerical columns.\n\n\n","8bd53449":"# 5. Modeling","5f19e0ea":"# 3. Missing values","5d910bec":"## Top Factors affecting GDP per capita\n\n### We pick the six columns that mostly correlated to GDP per capita and make scatter plots. The results agree with our common sense. Also we notice there are many countries with low average GDP and few with high average GDP \u2014- a pyramid structure.","8df35891":"### Factors affecting Total GDP\n\nWe can also check the correlation between total GDP and the other columns. The top two factors are population and area, following many factors that have also been found mostly correlated to GDP per capita."}}