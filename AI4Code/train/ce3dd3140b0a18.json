{"cell_type":{"9ac2d12e":"code","0595e905":"code","00502561":"code","63dfed48":"code","a9f6862a":"code","8739daa9":"code","6d0817e9":"code","300ee575":"code","e3317b6e":"code","f8c23511":"code","1c53ef2c":"code","e0b3166b":"code","128a9688":"code","33b96d03":"code","03bb5e86":"code","9e516433":"code","eea78349":"code","3604533a":"code","9bc53ab1":"code","86ca6941":"code","8fe05c66":"code","51db4928":"code","b002e81e":"code","1e345915":"code","7b1f67a4":"code","e7566cd1":"code","d5a9414d":"code","2a9957fa":"code","0175d1c7":"code","65d5cf1b":"code","5de6ece0":"markdown","694b675b":"markdown","eaf33f18":"markdown","04384356":"markdown","c41540f6":"markdown"},"source":{"9ac2d12e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0595e905":"df=pd.read_csv('\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv',index_col='App')\nimport seaborn as sns\ndf.head()","00502561":"import matplotlib.pyplot as plt\n%matplotlib inline\ndf['Installs']=df['Installs'].apply(lambda x:x.replace(\"+\",\"\"))\n","63dfed48":"df['Installs']=df['Installs'].apply(lambda x:x.replace(\",\",\"\"))","a9f6862a":"df=df[df[\"Installs\"]!='Free']\ndf['Installs']=df['Installs'].astype(int)","8739daa9":"\nsns.barplot(y='Installs',x='Type',data=df)","6d0817e9":"plt.figure(figsize=(18,4))\nsns.barplot(y='Installs',x='Category',data=df)","300ee575":"plt.figure(figsize=(20,4))\nsns.barplot(x='Android Ver',y='Installs',data=df)","e3317b6e":"df['Reviews']=df['Reviews'].astype(int)","f8c23511":"plt.figure(figsize=(12,4))\nsns.distplot(a=df['Rating'],kde=False)","1c53ef2c":"plt.figure(figsize=(14,4))\nsns.barplot(y='Reviews',x='Rating',data=df)","e0b3166b":"def func(x):\n    f=list(x)\n    if 'k' in f:\n        return float(x.replace(\"k\",''))\/1000\n    elif 'M' in f:\n        return float(x.replace('M',''))\n    elif x=='Varies with device':\n        return 11\ndf['Size']=df['Size'].apply(lambda x:func(x))","128a9688":"plt.figure(figsize=(16,4))\nsns.distplot(a=df['Size'])","33b96d03":"plt.figure(figsize=(20,4))\nsns.barplot(x='Content Rating',y='Installs',data=df)","03bb5e86":"df=df.reset_index()","9e516433":"android_ver=pd.get_dummies(df['Android Ver'])\ndf=df.join(android_ver)","eea78349":"def func1(x):\n    x=x.replace('$','')\n    return float(x)","3604533a":"df['Price']=df['Price'].apply(lambda x:func1(x))","9bc53ab1":"category=pd.get_dummies(df['Category'])\ntype=pd.get_dummies(df['Type'])\ncontent=pd.get_dummies(df['Content Rating'])\ndf=df.join(category)\ndf=df.join(type)\ndf=df.join(content)","86ca6941":"df.drop(['Rating','Reviews','Type','Content Rating','Genres','Current Ver','Last Updated','Android Ver','Category'],axis=1,inplace=True)","8fe05c66":"df=df.set_index('App')\ndf['Installs']=df['Installs'].astype(str)+'+'","51db4928":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import mean_absolute_error,mean_squared_error,accuracy_score,precision_score","b002e81e":"X_train,X_test,y_train,y_test=train_test_split(df.drop('Installs',axis=1),df['Installs'],random_state=0)","1e345915":"y_train=y_train.replace({'10000000+':'In Millions','1000000+':'In Millions','500000000+':'In Millions','100000000+':'In Millions','500000+':'In Lakhs','100000+':'In Lakhs',\n                 '50000000+':'In Millions','5000000+':'In Millions','1000+':'In Thousands','10000+':'In Thousands','100+':'In Hundreds','5000+':'In Thousands',\n                '5+':'In Hundreds','10+':'In Hundreds','50000+':'In Thousands','500+':'In Hundreds','50+':'In Hundreds','1000000000+':'In Millions',\n                '1+':'In Hundreds','0+':'In Hundreds'})\ny_test=y_test.replace({'10000000+':'In Millions','1000000+':'In Millions','500000000+':'In Millions','100000000+':'In Millions','500000+':'In Lakhs','100000+':'In Lakhs',\n                 '50000000+':'In Millions','5000000+':'In Millions','1000+':'In Thousands','10000+':'In Thousands','100+':'In Hundreds','5000+':'In Thousands',\n                '5+':'In Hundreds','10+':'In Hundreds','50000+':'In Thousands','500+':'In Hundreds','50+':'In Hundreds','1000000000+':'In Millions',\n                '1+':'In Hundreds','0+':'In Hundreds'})","7b1f67a4":"for x in range(15,40):\n        forest=RandomForestClassifier(max_depth=x,n_estimators=100)\n        forest.fit(X_train,y_train)\n        y_pred=forest.predict(X_test)\n        print('depth= ',x,' estimators= ',100,'accuracy= ',accuracy_score(y_test,y_pred))","e7566cd1":"forest1=RandomForestClassifier(max_depth=19)\nforest1.fit(X_train,y_train)\ny_pred=forest1.predict(X_test)\nfinal_df=pd.DataFrame({'Pred':y_pred,'Actual':y_test})","d5a9414d":"miss_class=final_df[final_df['Pred']!=final_df['Actual']]","2a9957fa":"h=[]\nfor x in miss_class.index:\n    h.append(df.loc[x]['Installs'])\n    ","0175d1c7":"final_df_miss_class=pd.DataFrame({'Pred':miss_class['Pred'],'Actual':miss_class['Actual'],'Installs':h})","65d5cf1b":"pd.set_option('display.max_rows',None)\nfinal_df_miss_class","5de6ece0":"**Most of the ratings lie in the 4.0-4.5 region**","694b675b":"**Changing the labels**","eaf33f18":"**All mis-classified rows from the test set**","04384356":"****Most of the apps have a size in range of 0-20 MB****","c41540f6":"Well who doesn't like **Free** apps!"}}