{"cell_type":{"b755d195":"code","3adaf0b4":"code","d68958f9":"code","846237df":"code","e973ef04":"code","7cb9b3fe":"code","98d66c8d":"code","09cc82d0":"code","85fb4242":"code","89ef7618":"code","9467b939":"code","4b20a607":"code","e22467d9":"code","8e564891":"code","f62d9030":"code","4ef0db5e":"code","5576333e":"code","022c4751":"code","0f24df83":"code","5c06a55b":"code","a98bce24":"code","b5449c79":"code","f313ab32":"code","f353b9ae":"code","249c60c2":"code","c9092aa5":"code","a9ae5179":"code","54c734bb":"code","0da4cf21":"code","7445e2a2":"code","4d1bfba0":"code","88be23ff":"code","30c2b6bc":"code","483255db":"code","746d4d97":"code","371da635":"code","ac3aa694":"code","4a80ef93":"code","eac98eea":"code","4ba8dc54":"code","9d6a5263":"code","5cfbf22d":"code","06156882":"code","56fbf77d":"code","ed93ca7d":"markdown","71ef8ab3":"markdown","1750716a":"markdown","2993e8c6":"markdown","3e6e1b53":"markdown","1280b4dc":"markdown","76987c35":"markdown","ad84f785":"markdown","66ef1477":"markdown","c43330a1":"markdown","764b212d":"markdown","c9f20bf7":"markdown","66509979":"markdown","176f87b6":"markdown","c2a89981":"markdown","23e78b4a":"markdown","b3d3f6e7":"markdown","945027b5":"markdown","47f2dae0":"markdown","652103b2":"markdown","15c78fc6":"markdown","a6a77089":"markdown","49946c78":"markdown","971801ba":"markdown","a3235ea9":"markdown","73c89ff8":"markdown","ca9a762a":"markdown","f5bb0bd8":"markdown","bb5b2345":"markdown","48e62c2d":"markdown"},"source":{"b755d195":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","3adaf0b4":"x=pd.read_json('..\/input\/train.json')\ny=pd.read_json('..\/input\/test.json')","d68958f9":"from nltk.corpus import stopwords\nfrom sklearn.feature_extraction.stop_words import ENGLISH_STOP_WORDS\nimport string\nfrom nltk.stem.snowball import SnowballStemmer\nfrom nltk.stem import WordNetLemmatizer\nz=x['cuisine']\nfrom sklearn.preprocessing import LabelEncoder as le\nfrom sklearn.preprocessing import OneHotEncoder as ohe\n","846237df":"x.info()","e973ef04":"x.head()","7cb9b3fe":"y.info()","98d66c8d":"y.head()","09cc82d0":"x['separated_ing']=x['ingredients'].map(lambda x: ' '.join(x))\ny['separated_ing']=y['ingredients'].map(lambda x: ' '.join(x))\n","85fb4242":"import string,re\ndef purify(f):\n    f=f.lower()\n    f=re.sub('[%s]' % re.escape(string.punctuation),'',f)\n    f=re.sub('\\s+',' ',f)\n    return f\nx['cleared_ing']=x['separated_ing'].map(lambda g :purify(g))\ny['cleared_ing']=y['separated_ing'].map(lambda g :purify(g))","89ef7618":"sb=SnowballStemmer('english')\ndef stemmer(f):\n    lists=[sb.stem(c) for c in f.split(\" \")]\n    return lists\nl=WordNetLemmatizer()\ndef lemmar(f):\n    lists=[l.lemmatize(g) for g in f.split(\" \")]\n    return lists\nx['separated_ing_stemmed']=[stemmer(l) for l in x['cleared_ing']]\nx['separated_ing_stemmed']=x['separated_ing_stemmed'].map(lambda x: ' '.join(x))\nx['separated_ing_lemma']=[lemmar(l) for l in x['separated_ing_stemmed']]\nx['separated_ing_lemma']=x['separated_ing_lemma'].map(lambda x: ' '.join(x))\ny['separated_ing_stemmed']=[stemmer(l) for l in y['cleared_ing']]\ny['separated_ing_stemmed']=y['separated_ing_stemmed'].map(lambda x: ' '.join(x))\ny['separated_ing_lemma']=[lemmar(l) for l in y['separated_ing_stemmed']]\ny['separated_ing_lemma']=y['separated_ing_lemma'].map(lambda x: ' '.join(x))","9467b939":"x=x.drop(['ingredients','separated_ing','cleared_ing','separated_ing_stemmed'],axis=1)\ny=y.drop(['ingredients','separated_ing','cleared_ing','separated_ing_stemmed'],axis=1)","4b20a607":"x.columns","e22467d9":"allCuisine=[]\nfor x1 in x['cuisine']:\n    if x1 not in allCuisine:\n        allCuisine.append(x1)\ndic={}\nfor x1 in allCuisine:\n    dic[x1]=[]\ndef IngredientsForCuisine(x):\n    dic[x['cuisine']]=list(dic[x['cuisine']])+[f for f in x['separated_ing_lemma'].split(\" \") if f not in dic[x['cuisine']]]\nfor e,d in x.iterrows():   \n    IngredientsForCuisine(d)\n    \n    ","8e564891":"xx=pd.DataFrame(index=allCuisine,columns=allCuisine)","f62d9030":"for z in allCuisine:\n    for z1 in allCuisine:\n        xx.loc[z,z1]=len(list(set(dic[z]) & set(dic[z1])))\/len(list(set(dic[z]) | set(dic[z1])))\n        xx.loc[z1,z]=xx.loc[z,z1]","4ef0db5e":"xx.to_csv(\"cor.csv\")","5576333e":"%%html\n<div class='tableauPlaceholder' id='viz1538489378237' style='position: relative'><noscript><a href='#'><img alt='Sheet 1 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Co&#47;CorForCuisine&#47;Sheet1&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='CorForCuisine&#47;Sheet1' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Co&#47;CorForCuisine&#47;Sheet1&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='filter' value='publish=yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1538489378237');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","022c4751":"%%html\n<div class='tableauPlaceholder' id='viz1538489639742' style='position: relative'><noscript><a href='#'><img alt='Cuisine and distinct ingredients count ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;NL&#47;NLP_0&#47;Sheet1&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='NLP_0&#47;Sheet1' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;NL&#47;NLP_0&#47;Sheet1&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='filter' value='publish=yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1538489639742');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","0f24df83":"%%html\n<div class='tableauPlaceholder' id='viz1538489685013' style='position: relative'><noscript><a href='#'><img alt='Rare Ingredients ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;NL&#47;NLP_0&#47;Sheet2&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='NLP_0&#47;Sheet2' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;NL&#47;NLP_0&#47;Sheet2&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1538489685013');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","5c06a55b":"%%html\n<div class='tableauPlaceholder' id='viz1538489718393' style='position: relative'><noscript><a href='#'><img alt='Most Common Ingredients ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;NL&#47;NLP_0&#47;Sheet3&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='NLP_0&#47;Sheet3' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;NL&#47;NLP_0&#47;Sheet3&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1538489718393');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","a98bce24":"%%html\n<div class='tableauPlaceholder' id='viz1538556179098' style='position: relative'><noscript><a href='#'><img alt='10 Most Common Ingredient in Cuisines ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;NL&#47;NLP_0&#47;Sheet4&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='NLP_0&#47;Sheet4' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;NL&#47;NLP_0&#47;Sheet4&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='filter' value='publish=yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1538556179098');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","b5449c79":"lists=list(ENGLISH_STOP_WORDS)+stopwords.words()","f313ab32":"from sklearn.feature_extraction.text import TfidfVectorizer  as tfidf,CountVectorizer as cv","f353b9ae":"z=x['cuisine']","249c60c2":"tfidf1=tfidf(max_df=0.9,stop_words=lists,analyzer=u'word')\ntrain=tfidf1.fit_transform(x['separated_ing_lemma'])\ntest=tfidf1.transform(y['separated_ing_lemma'])","c9092aa5":"from sklearn.svm import SVC\nfrom sklearn.model_selection import GridSearchCV as gsc\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost.sklearn import XGBClassifier as xgb\nfrom lightgbm import LGBMClassifier as lgb\nfrom sklearn.linear_model import LogisticRegression as lr","a9ae5179":"svm={'C':[6]}\n","54c734bb":"from sklearn.preprocessing import LabelEncoder as le\np=le().fit(z)","0da4cf21":"z=p.transform(z)","7445e2a2":"from sklearn.model_selection import train_test_split as tts\nxtrain,xtest,ztrain,ztest=tts(train,z,train_size=0.7)","4d1bfba0":"r1={'n_estimators':[500],'max_depth':[7],'objective':['multiclass'],'metric':['multi_logloss'],'bagging_fraction':[0.6],'feature_fraction':[0.6]}","88be23ff":"from sklearn.model_selection import GridSearchCV as gsc\na=gsc(lr(),svm)\nb=gsc(lgb(),r1)\nb.fit(xtrain,ztrain)\n","30c2b6bc":"a.best_params_","483255db":"from sklearn.metrics import accuracy_score as acs\nprint(acs(ztest,a.predict(xtest)))","746d4d97":"from sklearn.neighbors import KNeighborsClassifier as knn\nk={'n_neighbors':[5,7,9]}\nk1=gsc(knn(),k)","371da635":"\nfrom sklearn.ensemble import VotingClassifier as vc\n","ac3aa694":"v=vc(estimators=[('lr',a),('k1',k1),('lg',b)],voting='soft')","4a80ef93":"v.fit(xtrain,ztrain)","eac98eea":"from sklearn.metrics import accuracy_score \nprint(accuracy_score(ztest,v.predict(xtest)))","4ba8dc54":"z1=v.predict(test)","9d6a5263":"z=p.inverse_transform(z1)","5cfbf22d":"ff=pd.DataFrame(z,index=y['id'],columns=['cuisine'])","06156882":"ff.index.name='id'","56fbf77d":"ff.to_csv('aagya.csv')","ed93ca7d":"Performing validation train  split of train dataset in ratio 3:7","71ef8ab3":"Detecting correlation between various cuisines","1750716a":"Dropping all unnecessary data columns from train and test dataset","2993e8c6":"1-Correlation between various Cuisine.SIMILAR CUISINES","3e6e1b53":"Predicting test data target","1280b4dc":"Importing TFIDFVectorizer-->Term Frequency*Inverse Document frequency (Count of an element in doc*log(no. of doc\/docs in which element present)) and CountVectorizer(count of each element in a row as vector)","76987c35":"describe test dataset","ad84f785":"Using Voting Classifier for classification purpose with\n-SVM\n-KNN\n-LGBM\nusing soft margin for classification","66ef1477":"Setting required parameters for svm","c43330a1":"Setting  LGBM parameters","764b212d":"Using a SnowballStemmer with english as parameter representing English language and also WordNetLemmatizer for bringing all ingredients to core form .Like 'works' -->'work'\nThis has been used by both training and test dataset","c9f20bf7":"Preparing output result file","66509979":"Importing required ML functions from sklearn","176f87b6":"FINDINGS FROM VISUALIZATION--\nwe come to a onclusion that there are ingredients present in more than 1 cuisine\nMaximum distinct ingredients are present in Intalian and Mexican cuisine\nMinimum distinct ingredients are present in Russian and Brazilian\nCertain cuisines are correlated\nsalt,onions and olive oils appears to be amongst the most commong element in every ingredient","c2a89981":"setting parameters for itidf \n-max_df relates to maximum doc freq to be cosidered\n-stop_words eliminate common words from given text\n-analyzer how the text to be analyzed,word by word or character by character\nfitting tf-idf over train dataset","23e78b4a":"getting all unique ingredients from 'a'","b3d3f6e7":"Loading training And Testing Dataset.....\nThe given dataset is in json format","945027b5":"Loading Various preprocessing element for Natural Language Processing.......","47f2dae0":"Getting all the cuisines in a list  allCuisine\nAlso we need to separate ingredients for each cuisine","652103b2":"Checking accuracy_score","15c78fc6":"DATA VISUALIZATIONS","a6a77089":"Target as series z","49946c78":"Converting list of ingredients to a sentence where each ingredient is separated by a space","971801ba":"Fitting  labelencoder over target to convert categorical target to numeric in nature ","a3235ea9":"describe train dataset","73c89ff8":"Using STOP_WORDS to remove all common ingredients present in the recipes ","ca9a762a":"Fitting train data over votingclassifier","f5bb0bd8":"Preprocessing the sentence formed off in the above steps to \n-coverting all characters of ingredients to smalll letter\n-remove punctuation marks\n-converting multiple spaces to single spaces\nBoth Test and Train Data preprocessed\n","bb5b2345":"Checking KNearestNeighbors over the data","48e62c2d":"converting  numeric target back to categorical data"}}