{"cell_type":{"9dd4d335":"code","fe3741c5":"code","9009af47":"code","84767aca":"code","29a37eea":"code","5f5622eb":"code","73411299":"code","c0323ef4":"code","cbc87732":"code","6392b966":"code","1629a932":"code","533608f9":"code","2c97e52b":"markdown","92058a8a":"markdown","14168959":"markdown","878d0577":"markdown","102e9621":"markdown","c5d618d1":"markdown"},"source":{"9dd4d335":"import pandas as pd\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\n\nimport matplotlib.pyplot as plt\n%matplotlib inline","fe3741c5":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","9009af47":"train = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntest = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","84767aca":"X = train.drop(columns=['label']).values\ny = keras.utils.to_categorical(train['label'].values)\n\nX_test = test.values","29a37eea":"def pre_process(X):\n    X = X\/255.0\n    X = X.reshape(-1, 28, 28, 1)\n    return X\n\nX = pre_process(X)\nX_test = pre_process(X_test)","5f5622eb":"from sklearn.model_selection import train_test_split\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, random_state=0)","73411299":"def show_images(X, y):\n    fig, axis = plt.subplots(4, 4, figsize=(10, 10))\n    for i, ax in enumerate(axis.flat):\n        ax.axis('off')\n        ax.imshow(X[i], cmap='binary')\n        digit = y[i]\n        ax.set(title = digit);\n\nshow_images(X_train.reshape(X_train.shape[0], 28, 28), np.argmax(y_train, axis=1))","c0323ef4":"data_augmentation = keras.Sequential(\n    [\n        layers.RandomRotation(0.05),\n        layers.RandomTranslation(0.05, 0.05),\n        layers.RandomZoom(0.05, 0.05),\n    ]\n)","cbc87732":"keras.backend.clear_session()\ntf.random.set_seed(42)\n\nmodel = keras.Sequential(\n    [\n        keras.Input(shape=(28, 28, 1)),\n        data_augmentation,\n        layers.Conv2D(32, kernel_size=(3, 3), activation=\"relu\"),\n        layers.Conv2D(64, kernel_size=(3, 3), activation=\"relu\"),\n        layers.MaxPooling2D(pool_size=(2, 2)),\n        layers.Flatten(),\n        layers.Dropout(0.25),\n        layers.Dense(128, activation=\"relu\"),\n        layers.Dropout(0.5),\n        layers.Dense(10, activation=\"softmax\"),\n    ]\n)","6392b966":"batch_size = 64\nepochs = 15\n\nmodel.compile(loss=\"categorical_crossentropy\", optimizer=\"adam\", metrics=[\"accuracy\"])\n\nmodel.fit(X_train, y_train, batch_size=batch_size, epochs=epochs, validation_split=0.2)","1629a932":"score = model.evaluate(X_valid, y_valid, verbose=0)\nprint(\"Test loss:\", score[0])\nprint(\"Test accuracy:\", score[1])","533608f9":"pred = model.predict(X_test, verbose=1)\n\nsub = pd.read_csv('..\/input\/digit-recognizer\/sample_submission.csv')\nsub['Label'] = np.argmax(pred, axis=1)\nsub.to_csv(\"submission.csv\", index=False)","2c97e52b":"# 3. Gerando mais dados","92058a8a":"# 5. Avalia\u00e7\u00e3o","14168959":"# 1. Carregando as bases","878d0577":"# 6. Submiss\u00e3o","102e9621":"# 4. Modelo","c5d618d1":"# 2. Preparando os dados"}}