{"cell_type":{"f9c94f36":"code","887e9c39":"code","1eb23908":"code","5356e960":"code","72d685ca":"code","6cdd6b26":"code","28715d4a":"code","fb263a90":"code","1ba7ee03":"code","d83afe4d":"code","1001f59c":"code","fc700f3f":"code","2ce08fa0":"code","1fdfe6fe":"code","672e45b3":"code","d748e2ce":"code","6d7b31fa":"markdown","f8fee934":"markdown","9e1be5f8":"markdown","c16709b0":"markdown","f58cac88":"markdown","7a76ca2e":"markdown","56f1b012":"markdown","5dd7430d":"markdown","f297bcd3":"markdown","0291aa52":"markdown","c98d9423":"markdown","35efb10d":"markdown","3d7764d6":"markdown","3f6d26cd":"markdown","d1035bff":"markdown"},"source":{"f9c94f36":"# Import Libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport matplotlib.animation as animation\nfrom IPython.display import HTML","887e9c39":"# read the file\nfullData = pd.read_csv(\"..\/input\/covid19-dataset\/full_data.csv\")","1eb23908":"fullData.head()","5356e960":"df = pd.read_csv(\"..\/input\/covid19-dataset\/full_data.csv\",\n                 usecols=['date','location','total_cases'])","72d685ca":"df.head()","6cdd6b26":"df.drop(df[df['location'] == 'World' ].index, inplace=True)\ndf.fillna(0)\ndf","28715d4a":"end = df['date'].max()\ndff = (df[df['date'].eq(end)]\n       .sort_values(by='total_cases', ascending=False).head(10))\ndff","fb263a90":"array = dff['location'].tolist()\ndf = df.loc[df['location'].isin(array)]\ndf","1ba7ee03":"fig, ax = plt.subplots(figsize=(15, 8))\nax.barh(dff['location'], dff['total_cases'])","d83afe4d":"colors = dict(zip(\n    dff['location'].tolist(),\n    ['#adb0ff', '#ffb3ff', '#90d595', '#e48381','#9e9395','#f2eea7',\n     '#aafbff', '#f7bb5f', '#eafb50', '#f26d85']\n))","1001f59c":"fig, ax = plt.subplots(figsize=(15, 8))\ndff = dff[::-1] \nax.barh(dff['location'], dff['total_cases'], color=[colors[x] for x in dff['location']])\nfor i, (total_cases, location) in enumerate(zip(dff['total_cases'], dff['location'])):\n    ax.text(total_cases, i,     location,            ha='right') \n    ax.text(total_cases, i,     total_cases,           ha='left')\nax.text(1, 0.4, end, transform=ax.transAxes, size=46, ha='right')","fc700f3f":"def draw_barchart(date):\n        \n    dff = (df[df['date'].eq(date)]\n           .sort_values(by='total_cases', ascending=False)\n           .head(10))\n    \n    ax.clear()\n    dff = dff[::-1]\n    ax.barh(dff['location'], dff['total_cases'], color=[colors[x] for x in dff['location']])\n    \n    dx = dff['total_cases'].max() \/ 200\n    for i, (total_cases, location) in enumerate(zip(dff['total_cases'], dff['location'])):\n        ax.text(total_cases-dx, i,     location,           size=14, weight=600, ha='right', va='bottom')\n        ax.text(total_cases+dx, i,     f'{total_cases:,.0f}',  size=14, ha='left',  va='center')\n        \n    ax.text(1, 0.4, date, transform=ax.transAxes, color='#777777', size=46, ha='right', weight=800)\n    ax.text(0, 1.06, 'Confirmed Cases', transform=ax.transAxes, size=12, color='#777777')\n    ax.xaxis.set_major_formatter(ticker.StrMethodFormatter('{x:,.0f}'))\n    ax.xaxis.set_ticks_position('top')\n    ax.tick_params(axis='x', colors='#777777', labelsize=12)\n    ax.set_yticks([])\n    ax.margins(0, 0.01)\n    ax.grid(which='major', axis='x', linestyle='-')\n    ax.set_axisbelow(True)\n    ax.text(0, 1.12, 'Confirmed Coronavirus cases in the world',\n            transform=ax.transAxes, size=24, weight=600, ha='left')\n    ax.text(1, 0, 'by @minaliu', transform=ax.transAxes, ha='right',\n            color='#777777', bbox=dict(facecolor='white', alpha=0.8, edgecolor='white'))\n    plt.box(False)\n","2ce08fa0":"fig, ax = plt.subplots(figsize=(15, 8))\ndraw_barchart(df['date'].max())","1fdfe6fe":"start = df['date'].min()\nfig, ax = plt.subplots(figsize=(15, 8))\ndraw_barchart(start)","672e45b3":"fig, ax = plt.subplots(figsize=(15, 8))\ndraw_barchart('2020-02-14')","d748e2ce":"dates = df.date.unique()\nfig, ax = plt.subplots(figsize=(15, 8))\nanimator = animation.FuncAnimation(fig, draw_barchart, frames=dates)\nHTML(animator.to_jshtml()) ","6d7b31fa":"## **Coronavirus Bar Chart Race - The Race No One Wants To Win**\n***The death toll from the coronavirus in the United States passed 50,000 Friday morning (04\/23\/2020), accounting for more than 25% of COVID-19 deaths globally, according to a tally from Johns Hopkins University. More than 2.7 million COVID-19 cases have been confirmed worldwide, with over 880,000 of them in the United States.***\n\n![](https:\/\/www.strategy-business.com\/media\/image\/42769364_1000x600.jpg)\n\nTo prevent the spread of COVID-19:\n* Clean your hands often. Use soap and water, or an alcohol-based hand rub.\n* Maintain a safe distance from anyone who is coughing or sneezing.\n* Don\u2019t touch your eyes, nose or mouth.\n* Cover your nose and mouth with your bent elbow or a tissue when you cough or sneeze.\n* Stay home if you feel unwell.\n* If you have a fever, a cough, and difficulty breathing, seek medical attention. Call in advance.\n* Follow the directions of your local health authority.\n* Avoiding unneeded visits to medical facilities allows healthcare systems to operate more effectively, therefore protecting you and others.","f8fee934":"Now the data is clean, we can go to our main step. We find the ten countries that have the most cases on the last day of this dataset. \n\nYou can also check the top 11 countries (using 'head(11)') or as many as you want (using 'head(x)').  ","9e1be5f8":"We'll animate the race and run from the first day of the dataset (2019\/12\/31) to the last day of the dataset 2020\/04\/23:","c16709b0":"*Use 'frames' to accept the values we want to run. We cannot put our dates into 'range()', first we have to convert dates to an array. *","f58cac88":"**In this notebook, I selected the Top 10 countries with most cases of coronavirus. I illustrated how the cases are growing in these countries through a bar chart race. **","7a76ca2e":"We want to see how confirmed cases (total_cases) change in different countries. \n\nTo do so, I kept these three columns: 'date', 'location' and 'total_cases'.","56f1b012":"Now that we have the Top 10 countries, we can update our data frame to only have these 10 countries.","5dd7430d":"We will style following items:\n* Text: Update font sizes, color, orientation\n* Axis: Move X-axis to top, add color & subtitle\n* Grid: Add lines behind bars\n* Format: comma separated values and axes tickers\n* Add title, credits, gutter space\n* Remove: box frame, y-axis labels\n\nWe will also make a function called 'draw_barchart', and we will call this function to animate the race.","f297bcd3":"We will use a full dataset (fullData) to make the bar chat race, let's have a quick look about this dataset.","0291aa52":"When I sorted the data by total number of cases, I found that this dataset also counts the total world cases. So I removed the row where the location shows 'World'.\n\nIn case there are missing values, I filled NA values with 0.","c98d9423":"**Make it fancy!**\n> **Add values, labels and colors for each country**\n\n>**Here is the link for picking the colors: https:\/\/htmlcolorcodes.com\/color-picker\/**","35efb10d":"Here is how the cases look on the first day of this dataset.","3d7764d6":"Here is how the case numbers look on the last day of this dataset.","3f6d26cd":"Let's make a simple horizontal bar chart.","d1035bff":" Show the country with the most cases on top (using dff = dff[::-1])."}}