{"cell_type":{"a80e5126":"code","5ed8c248":"code","95d1627e":"code","b1508840":"code","a154aeb6":"code","21cf53ac":"code","7a7e81ba":"code","105d2a1f":"code","628cfb6f":"code","49ae4779":"code","b2587d34":"code","1df378e4":"code","7f3a9a0a":"code","16342839":"code","888b60a4":"code","37648894":"code","7d77b91d":"code","45d53e86":"code","b0160832":"code","69c33127":"code","986519ba":"code","0cc7f774":"code","0db88272":"code","37e19c89":"code","b4669d3a":"code","d7e71e3f":"markdown","a35efd4a":"markdown","1837fd5f":"markdown","46edff67":"markdown","b7d58d8b":"markdown","c838ad38":"markdown","4443460b":"markdown","bb552594":"markdown","8072f945":"markdown","53c4a739":"markdown","82045aa6":"markdown","82a7405b":"markdown","f8a1f561":"markdown","fa4db92f":"markdown"},"source":{"a80e5126":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_palette('bright')\nimport os\nprint(os.listdir('..\/input\/cat-in-the-dat'))","5ed8c248":"train_df = pd.read_csv('..\/input\/cat-in-the-dat\/train.csv')\ntest_df = pd.read_csv('..\/input\/cat-in-the-dat\/test.csv')\nprint(train_df.shape, test_df.shape)","95d1627e":"train_df.head(3)","b1508840":"train_df.describe(include='O')","a154aeb6":"sns.heatmap(train_df.corr())","21cf53ac":"sns.countplot(train_df['target'])\nprint(\"percentage of target 1 : {}%\".format(train_df['target'].sum() \/ len(train_df)))\n","7a7e81ba":"print(train_df['month'].value_counts().sort_index(axis = 0) )\nprint(train_df['day'].value_counts().sort_index(axis = 0) )","105d2a1f":"def percentage_of_feature_target(df, feat, tar, tar_val):\n    return df[df[tar]==tar_val][feat].value_counts().sort_index(axis = 0) \/ df[feat].value_counts().sort_index(axis = 0)\n\nP_month = percentage_of_feature_target(train_df, 'month', 'target', 1)","628cfb6f":"P_month.plot()","49ae4779":"fig, ax = plt.subplots(1,1, figsize=(20, 5))\nsns.countplot('month', hue='target', data= train_df, ax=ax)\nplt.show()","b2587d34":"print(percentage_of_feature_target(train_df, 'day', 'target', 1))","1df378e4":"fig, ax = plt.subplots(1,1, figsize=(20, 5))\nsns.countplot('day', hue='target', data= train_df, ax=ax)\nplt.show()","7f3a9a0a":"fig, ax = plt.subplots(1,4, figsize=(20, 5))\nfor i in range(4):\n    sns.countplot(f'bin_{i}', hue='target', data= train_df, ax=ax[i])\n    ax[i].set_title(f'bin_{i} feature countplot')\n    print(percentage_of_feature_target(train_df,f'bin_{i}','target',1))\nplt.show()","16342839":"for i in range(9):\n    tmp_list = train_df[f'nom_{i}'].value_counts().index\n    print(f'nom_{i} feature\\'s unique value {len(tmp_list)}')","888b60a4":"for i in range(5):\n    print(percentage_of_feature_target(train_df, f'nom_{i}', 'target',1))","37648894":"fig, ax = plt.subplots(1,5, figsize=(25, 7))\nfor i in range(5):\n    sns.countplot(f'nom_{i}', hue='target', data= train_df, ax=ax[i])\n    plt.setp(ax[i].get_xticklabels(),rotation=30)\nplt.show()","7d77b91d":"print(train_df['nom_5'].value_counts()) ","45d53e86":"fig, ax = plt.subplots(4,1,figsize=(40, 40))\nfor i in range(5, 9):\n    sns.countplot(sorted(train_df[f'nom_{i}']), ax=ax[i-5])\n    plt.setp(ax[i-5].get_xticklabels(),rotation=90)\nplt.show();","b0160832":"\n\n\n\nfor i in range(5, 9):\n    fig, ax = plt.subplots(1,1,figsize=(8, 2))\n    P_nom = percentage_of_feature_target(train_df, f'nom_{i}', 'target', 1)\n    P_nom.plot() # easy plot\n    #sns.barplot(P_nom.index, P_nom, ax=ax[i-5])\n    #plt.setp(ax[i-5].get_xticklabels(),rotation=90)\nplt.show();","69c33127":"# fig, ax = plt.subplots(1,1,figsize=(40, 10))\n# sns.countplot(sorted(train_df['nom_9']), ax=ax)\n# plt.show();","986519ba":"train_df['ord_5'].value_counts().sort_index(axis=0)","0cc7f774":"P_ord5 = percentage_of_feature_target(train_df, 'ord_5', 'target', 1)\nfig, ax = plt.subplots(1,1,figsize=(20,7))\nsns.barplot(P_ord5.index, P_ord5, ax=ax)\nplt.title('ord_5 : Percentage of target==1 in dictionary order')\nplt.setp(ax.get_xticklabels(),rotation=90, fontsize=5)\nplt.show()","0db88272":"P_ord4 = percentage_of_feature_target(train_df, 'ord_4', 'target', 1)\nfig, ax = plt.subplots(1,1,figsize=(20,7))\nsns.barplot(P_ord4.index, P_ord4, ax=ax)\nplt.title('ord_4 : Percentage of target==1 in dictionary order')\nplt.setp(ax.get_xticklabels(),rotation=90, fontsize=5)\nplt.show()","37e19c89":"P_ord3 = percentage_of_feature_target(train_df, 'ord_3', 'target', 1)\nfig, ax = plt.subplots(1,1,figsize=(20,7))\nsns.barplot(P_ord3.index, P_ord3, ax=ax)\nplt.title('ord_3 : Percentage of target==1 in dictionary order')\nplt.setp(ax.get_xticklabels(),rotation=90, fontsize=5)\nplt.show()","b4669d3a":"import sklearn.","d7e71e3f":"## Norminal Features","a35efd4a":"## Ordinal Features","1837fd5f":"There are scale differences, so let's look at the features nom 0-4 first.","46edff67":"## Binary Features\n\nyou can also use Facetgrid too ","b7d58d8b":"I think nom_8 can make total 17 group and nom5 - 6 - 7 have some relation\nbut i don'k know exactly... :(","c838ad38":"- id \n- bin_0 ~ bin_4 : binary\n- norm_0 ~ norm_9 : norminal\n- ord_0 ~ ord_5 : ordinal\n- day, month : date\n- target","4443460b":"How about percentage grapth..? It seems there are no relation between nom's..","bb552594":"## Target Distribution","8072f945":"## Model","53c4a739":"### nom 5 ~ nom 9 \n\nall length is 9","82045aa6":"## Date Feature","82a7405b":"I am just curious about this [discussion](https:\/\/www.kaggle.com\/c\/cat-in-the-dat\/discussion\/105702#latest-633384)\n\nso I want to find out the pattern of ord_5","f8a1f561":"And I find out ord3, ord4, ord5 feature target percentage is linear (in dictionary order)","fa4db92f":"It maybe some encoding about hexadecimal. but length 9 is uncomfortable..."}}