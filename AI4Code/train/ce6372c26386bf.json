{"cell_type":{"3de8feeb":"code","df7e550f":"code","4b99f042":"code","e2eea24c":"code","4fed5fc4":"code","4db2672b":"code","de796be5":"code","75326efe":"code","1e8333f1":"code","5989e32b":"code","e60e92e6":"code","ce4e1f97":"code","23e50f2b":"code","ba740c33":"code","009b2375":"code","274c5bdf":"code","e6b09140":"code","dd32f22f":"code","e21477e1":"code","0730c39e":"code","379bdbbd":"code","0402c0b7":"code","93109c5b":"code","a8725b6e":"code","ae5ddebf":"code","2727a240":"code","1fb7f129":"code","52222a9c":"code","fa9bb0e0":"code","6bdae201":"code","af2729f8":"code","6176e539":"code","824a06f2":"code","b72e3b37":"code","6543f888":"code","1f0447cc":"markdown","bc81424d":"markdown","fa086b7b":"markdown","e2946aef":"markdown","fbcc0726":"markdown"},"source":{"3de8feeb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \ndata=pd.read_csv('\/kaggle\/input\/netflix-shows\/netflix_titles.csv')\n\n# Any results you write to the current directory are saved as output.","df7e550f":"data.sample(4)","4b99f042":"data.shape","e2eea24c":"df = data.copy()\ndf.shape\n","4fed5fc4":"import seaborn as sns\nimport matplotlib.pyplot as plt","4db2672b":"\n\nlabels = ['Movie', 'TV show']\nsize = data['type'].value_counts()\nplt.figure(figsize=(9,6))\nplt.pie(size,labels=labels,autopct='%1.1f%%')\n ","de796be5":"plt.figure(figsize=(12,6))\nsns.countplot(data['rating'])","75326efe":"plt.figure(figsize=(12,6))\nsns.countplot(x='rating',hue='type',data=data).set_title('rating ')","1e8333f1":"df2 = data.copy()\ndf2 = df2[df2['date_added'].notna()]\ndf2['date']=pd.to_datetime(df2['date_added'])\ndf2['month']=df2['date'].dt.strftime('%b')\ndf2['month'].value_counts()\nplt.figure(figsize=(12,6))\nsns.countplot(x='month',hue='type',data=df2).set_title('Movies and TV shows added')","5989e32b":"df2['date']=pd.to_datetime(df2['date_added'])\ndf2['Year']=df2['date'].dt.strftime('%Y')\nplt.figure(figsize=(12,6))\nsns.countplot(x='Year',hue='type',data=df2).set_title('Movies and TV shows added')   \n","e60e92e6":"df3=data[data.release_year>1999]\nplt.figure(figsize=(30,6))\nsns.countplot('release_year',data=df3).set_title('release_year')","ce4e1f97":"df5=data['director'].value_counts()\ndf5=df5[df5>3]\ndf5","23e50f2b":"\nplt.figure(figsize=(5,10))\nsns.countplot(y='director',data=data,order = data['director'].value_counts().head(20).index).set_title('director')\nplt.show()","ba740c33":"plt.figure(figsize=(8,10))\nsns.countplot(y='country',hue='type',data=data,order = data['country'].value_counts().head(15).index).set_title('Country wise distribution')\nplt.show()","009b2375":"df6=data[data.country=='India']\nplt.figure(figsize=(5,10))\nsns.countplot(y='director',data=df6,order = df6['director'].value_counts().head(30).index).set_title(' Indian director')\nplt.show()","274c5bdf":"sns.countplot(y='cast',data=data,order = data['cast'].value_counts().head(15).index) \nplt.figure(figsize=(5,10))\nplt.show()","e6b09140":"cast=[]\nfor i in data['cast']:\n    cast.append(i)\nnewls=[]\nfor i in cast:\n    newls.append(str(i).split(',')[0])\ndf7=pd.DataFrame(newls,columns=['name'])\ndf7=df7.drop(df7.query('name==\"nan\"').index)\nplt.figure(figsize=(10,10))\nsns.countplot(y='name',data=df7,order = df7['name'].value_counts().head(20).index)\n\nplt.show()","dd32f22f":"df9=data[data.type==\"Movie\"]\nindcast=[]\nind=df9.query('country==\"India\"')\nfor i in ind['cast']:\n    indcast.append(i)\nnewls=[]\nfor i in indcast:\n    newls.append(str(i).split(',')[0])\ninddf=pd.DataFrame(newls,columns=['name'])\nind_df=inddf.drop(inddf.query('name==\"nan\"').index)\nplt.figure(figsize=(10,10))\nsns.countplot(y='name',data=ind_df,order = ind_df['name'].value_counts().head(20).index)\nplt.title(\"Indian stars with max movies on netflix\")\nplt.show()","e21477e1":"df9=data[data.type==\"Movie\"]\nusacast=[]\nusa=df9.query('country==\"United States\"')\nfor i in usa['cast']:\n    usacast.append(i)\nnewls=[]\nfor i in usacast:\n    newls.append(str(i).split(',')[0])\nusadf=pd.DataFrame(newls,columns=['name'])\nusa_df=usadf.drop(usadf.query('name==\"nan\"').index)\nplt.figure(figsize=(10,10))\nsns.countplot(y='name',data=usa_df,order = usa_df['name'].value_counts().head(20).index)\nplt.title(\"Usa stars with max movies on netflix\")\nplt.show()","0730c39e":"df9=data[data.type==\"TV Show\"]\nindcast=[]\nind=df9.query('country==\"India\"')\nfor i in ind['cast']:\n    indcast.append(i)\nnewls=[]\nfor i in indcast:\n    newls.append(str(i).split(',')[0])\ninddf=pd.DataFrame(newls,columns=['name'])\nind_df=inddf.drop(inddf.query('name==\"nan\"').index)\nplt.figure(figsize=(10,10))\nsns.countplot(y='name',data=ind_df,order = ind_df['name'].value_counts().head(20).index)\nplt.title(\"Indian stars with max TV SHOW on netflix\")\nplt.show()","379bdbbd":"\nl1=[]\nfor i in data['listed_in']:\n    l1.append(i)\nnewls=[]\nfor i in l1:\n    newls.append(str(i).split(',')[0])\ninddf=pd.DataFrame(newls,columns=['name'])\nind_df=inddf.drop(inddf.query('name==\"nan\"').index)\nplt.figure(figsize=(10,10))\nsns.countplot(y='name',data=ind_df,order = ind_df['name'].value_counts().index)\nplt.title(\"genre on netflix\")\nplt.show()","0402c0b7":"d=data.query('country==\"United States\"')\nl1=[]\nfor i in d['listed_in']:\n    l1.append(i)\nnewls=[]\nfor i in l1:\n    newls.append(str(i).split(',')[0])\ninddf=pd.DataFrame(newls,columns=['name'])\nind_df=inddf.drop(inddf.query('name==\"nan\"').index)\nplt.figure(figsize=(10,10))\nsns.countplot(y='name',data=ind_df,order = ind_df['name'].value_counts().index)\nplt.title(\"IN USA genre on netflix\")\nplt.show()","93109c5b":"d=data.query('country==\"India\"')\nl1=[]\nfor i in d['listed_in']:\n    l1.append(i)\nnewls=[]\nfor i in l1:\n    newls.append(str(i).split(',')[0])\ninddf=pd.DataFrame(newls,columns=['name'])\nind_df=inddf.drop(inddf.query('name==\"nan\"').index)\nplt.figure(figsize=(10,10))\nsns.countplot(y='name',data=ind_df,order = ind_df['name'].value_counts().index)\nplt.title(\"IN INDIA genre on netflix\")\nplt.show()","a8725b6e":"!pip install rake-nltk","ae5ddebf":"from rake_nltk import Rake\nfrom sklearn.metrics.pairwise import cosine_similarity\nfrom sklearn.feature_extraction.text import CountVectorizer","2727a240":"data2 = data[['title','director','cast','listed_in','description']]\ndata2.head()","1fb7f129":"data2['director']=data2['director'].fillna(' ')\ndata2['director']=data2['director'].astype('str')\ndata2['cast']=data2['cast'].fillna(' ')\ndata2['cast']=data2['cast'].astype('str')","52222a9c":"data2['Description']=\"\"\nfor i ,r in data2.iterrows():\n    rake=Rake()\n    \n    rake.extract_keywords_from_text(r['description'])\n    score_keyword=rake.get_word_degrees()\n    a=''.join(r['listed_in'].split(',')).lower()\n    b=''.join(r['director'].replace(' ','').split(',')).lower()\n    c=''.join(r['cast'].replace(' ','').split(',')).lower()\n    k = ' '.join(list(score_keyword.keys()))\n    r['Description']=a+' '+b+' '+c+' '+k\ndata3=data2[['title','Description']]","fa9bb0e0":"data3.sample(5)","6bdae201":"count=CountVectorizer()\nmatrix=count.fit_transform(data3['Description'])\ncosine_sim = cosine_similarity(matrix,matrix)\nprint(cosine_sim)","af2729f8":"ind= pd.Series(data3['title'])\ndef recommend(name):\n    movie=[]\n    idx = ind[ind == name].index[0]\n    sort_index = pd.Series(cosine_sim[idx]).sort_values(ascending = False)\n    top_10 = sort_index.iloc[1:11]\n    for i in top_10.index:\n        movie.append(ind[i])\n    return movie","6176e539":"recommend('3Below: Tales of Arcadia')","824a06f2":"recommend('Khosla Ka Ghosla')","b72e3b37":"recommend('Dil Dhadakne Do')","6543f888":"recommend(\"Power Rangers Dino Thunder\")","1f0447cc":"****DATA VISUALIZATION****","bc81424d":"TV-MA: MATURE AUDIENCE ONLY \nThis program is specifically designed to be viewed by adults and therefore may be unsuitable for children under 17. .\n\nTV-14: PARENTS STRONGLY CAUTIONED\nThis program contains some material that parents would find unsuitable for children under 14 years of age. Parents are strongly urged to exercise greater care in monitoring this program and are cautioned against letting children under the age of 14 watch unattended.","fa086b7b":"Most of the Movies and TVshow were added to netfix in Jan,Oct,Nov,Dec","e2946aef":"Most of movie and tvshow was added in 2019 and 2018","fbcc0726":"*from above we can see that dataset contains more number of Movies  *"}}