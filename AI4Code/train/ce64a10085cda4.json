{"cell_type":{"11835e00":"code","fb502f53":"code","878500fa":"code","b9331ef5":"code","3c0a069b":"code","ab0e384b":"code","0442cd28":"code","a197b013":"code","8f57ee63":"code","1c99fde5":"code","077a10e4":"code","4810e93f":"code","25953491":"code","175282e9":"code","58465e9c":"code","b5cee6bb":"code","22d3e9f1":"code","738db90c":"code","82887eda":"markdown","64fec1db":"markdown","9dbd3db6":"markdown","e10012f8":"markdown","da0a1236":"markdown"},"source":{"11835e00":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.cluster import KMeans\nfrom sklearn.decomposition import PCA\n\nfrom sklearn.neural_network import MLPClassifier","fb502f53":"data = pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")","878500fa":"data","b9331ef5":"data.isnull().sum()","3c0a069b":"data.dtypes","ab0e384b":"data['quality'].unique()","0442cd28":"y = data['quality']\nX = data.drop('quality', axis=1)","a197b013":"scaler = StandardScaler()\n\nX = pd.DataFrame(scaler.fit_transform(X), columns=X.columns)","8f57ee63":"X","1c99fde5":"kmeans = KMeans(n_clusters=6)\nkmeans.fit(X)","077a10e4":"clusters = kmeans.predict(X)\nclusters","4810e93f":"pca = PCA(n_components=2)\n\nreduced_X = pd.DataFrame(pca.fit_transform(X), columns=[\"PC1\", \"PC2\"])\nreduced_X","25953491":"reduced_X['cluster'] = clusters\nreduced_X","175282e9":"plt.figure(figsize=(14, 10))\n\nplt.scatter(reduced_X[reduced_X['cluster'] == 0].loc[:, 'PC1'], reduced_X[reduced_X['cluster'] == 0].loc[:, 'PC2'], color='slateblue')\nplt.scatter(reduced_X[reduced_X['cluster'] == 1].loc[:, 'PC1'], reduced_X[reduced_X['cluster'] == 1].loc[:, 'PC2'], color='springgreen')\nplt.scatter(reduced_X[reduced_X['cluster'] == 2].loc[:, 'PC1'], reduced_X[reduced_X['cluster'] == 2].loc[:, 'PC2'], color='indigo')\nplt.scatter(reduced_X[reduced_X['cluster'] == 3].loc[:, 'PC1'], reduced_X[reduced_X['cluster'] == 3].loc[:, 'PC2'], color='teal')\nplt.scatter(reduced_X[reduced_X['cluster'] == 4].loc[:, 'PC1'], reduced_X[reduced_X['cluster'] == 4].loc[:, 'PC2'], color='lightcoral')\nplt.scatter(reduced_X[reduced_X['cluster'] == 5].loc[:, 'PC1'], reduced_X[reduced_X['cluster'] == 5].loc[:, 'PC2'], color='gold')\n\nplt.scatter(reduced_centers[:, 0], reduced_centers[:, 1], color='black', marker='x', s=300)\n\nplt.show()","58465e9c":"reduced_centers = pca.transform(kmeans.cluster_centers_)\nreduced_centers","b5cee6bb":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.8)","22d3e9f1":"model = MLPClassifier(hidden_layer_sizes=(256, 256), max_iter=500)\n\nmodel.fit(X_train, y_train)","738db90c":"print(f\"Model Accuracy: {model.score(X_test, y_test)}\")","82887eda":"# Clustering","64fec1db":"# Preprocessing","9dbd3db6":"# Training","e10012f8":"# Getting Started","da0a1236":"# Visualization"}}