{"cell_type":{"81a900d1":"code","e7984be2":"code","25bb3dfb":"code","a3a05d96":"code","5b1a96b2":"code","ab7a9b3c":"code","a674ae0e":"code","fd4fed68":"code","2d3a889b":"code","17137732":"code","2add9805":"code","f666d3ba":"code","ea03d604":"code","a465d7e0":"markdown","3438ff09":"markdown","6428644d":"markdown","06fae3d4":"markdown","0e039ba3":"markdown"},"source":{"81a900d1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e7984be2":"train_data = pd.read_csv('..\/input\/learn-together\/train.csv')","25bb3dfb":"train_data.head()","a3a05d96":"train_data.describe()","5b1a96b2":"train_data.columns","ab7a9b3c":"train_data[train_data.isnull().any(axis=1)]","a674ae0e":"predictors = ~train_data.columns.isin(['Id','Cover_Type'])\ntarget     = \"Cover_Type\"\nX_full_data     = train_data[train_data.columns[predictors]]\ny_full_data     = train_data[target]\n\n\n# Split dataset into training set and test set\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X_full_data, y_full_data, test_size=0.3)\nprint(\"Dataset split\")","fd4fed68":"X_train.describe()","2d3a889b":"X_test.head()","17137732":"from sklearn.neighbors import KNeighborsClassifier\n\n# Train model\nknn = KNeighborsClassifier(n_neighbors=7, metric='minkowski', p=2)\nknn.fit(X_train, y_train)\n\n# Test model\ny_hat = knn.predict(X_test)\nprint(\"Model built\")","2add9805":"from sklearn import metrics\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_hat))","f666d3ba":"knn_on_full_data = KNeighborsClassifier(n_neighbors=7)\nknn_on_full_data.fit(X_full_data, y_full_data)\n","ea03d604":"test_data_path = '..\/input\/learn-together\/test.csv'\ntest_data = pd.read_csv(test_data_path)\ntest_X = test_data[test_data.columns[~test_data.columns.isin(['Id'])]]\ntest_preds = knn_on_full_data.predict(test_X)\n\n# The lines below shows how to save predictions in format used for competition scoring\n# Just uncomment them.\noutput = pd.DataFrame({'Id': test_data.Id,'Cover_Type': test_preds})\noutput.to_csv('submission.csv', index=False)","a465d7e0":"# Submiting Model for Competition","3438ff09":"[](http:\/\/)> # 1. Load data","6428644d":"# 2. Review data","06fae3d4":"# [](http:\/\/)Feature Engineering","0e039ba3":"# Building Model"}}