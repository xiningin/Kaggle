{"cell_type":{"8fd1301a":"code","031f3a17":"code","966a00c5":"code","87857c6b":"code","18038e0e":"code","5b7f70c3":"code","dded091c":"code","ebfd8b26":"code","d49de115":"code","0e2b543a":"code","c9a1a7b1":"code","bd7b00b2":"code","14725afb":"code","283361db":"code","c6dccf35":"code","0ce5047d":"code","30d1f9ab":"code","19d99c4e":"code","6fcd23c6":"code","27e9bdcc":"markdown","2ba34a17":"markdown","96ef0466":"markdown","fd698088":"markdown","b366f965":"markdown","ad669e20":"markdown"},"source":{"8fd1301a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","031f3a17":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","966a00c5":"import warnings\nwarnings.filterwarnings('ignore')","87857c6b":"df=pd.read_csv('\/kaggle\/input\/room-occupancy-detection-data-iot-sensor\/Occupancy.csv')","18038e0e":"df.head()","5b7f70c3":"df.info()","dded091c":"df.describe()","ebfd8b26":"fig = plt.figure(figsize=(15,15))\nax = fig.add_subplot(2, 3, 1)\nsns.boxplot(x='Occupancy', y='Temperature', data=df, showfliers=True, ax=ax)\nax.set_title('Tempereture')\nax = fig.add_subplot(2, 3, 2)\nsns.boxplot(x='Occupancy', y='Humidity', data=df, showfliers=True, ax=ax)\nax.set_title('Humidity')\nax = fig.add_subplot(2, 3, 3)\nsns.boxplot(x='Occupancy', y='Light', data=df, showfliers=True, ax=ax)\nax.set_title('Light')\nax = fig.add_subplot(2, 3, 4)\nsns.boxplot(x='Occupancy', y='CO2', data=df, showfliers=True, ax=ax)\nax.set_title('CO2')\nax = fig.add_subplot(2, 3, 5)\nsns.boxplot(x='Occupancy', y='HumidityRatio', data=df, showfliers=True, ax=ax)\nax.set_title('HumidityRatio')\n\nplt.subplots_adjust(hspace=0.3)\nplt.subplots_adjust(wspace=1)\nplt.show()","d49de115":"plt.figure(figsize = (15,8))\nsns.heatmap(df.corr(),annot=True, fmt=\"1.2f\")","0e2b543a":"df_0=df[df['Occupancy']==0]\ndf_0['Light'].plot.hist()","c9a1a7b1":"df1=df.drop(['Light','date'],axis=1)","bd7b00b2":"pip install pycaret --ignore-installed llvmlite numba","14725afb":"from pycaret.classification import *","283361db":"exp_clf = setup(df1, target = 'Occupancy',silent=True,session_id=1)","c6dccf35":"compare_models()","0ce5047d":"et = create_model('et')","30d1f9ab":"plot_model(et,'confusion_matrix')","19d99c4e":"plot_model(et,'auc')","6fcd23c6":"plot_model(et,'feature')","27e9bdcc":"According to OMRON website(https:\/\/components.omron.com\/us-en\/solutions\/iot ),in the home security field, a wide variety of sensors are used with wireless camera networks such as detecting doors and windows open\/close status, warning you if you left a window or a door open, monitoring and measuring room temperature, humidity and light intensity, and detecting motion when a person or an animal is in the room.\n\n![IoT-sec4_home-security-min.png](attachment:10d726e6-ffdf-47cb-a37e-1a8227255f3f.png)\n\n(from OMRON website https:\/\/components.omron.com\/us-en\/solutions\/iot )\n\nAnd according to the abstract of article 'Accurate occupancy detection of an office room from light, temperature, humidity and CO2 measurements using statistical learning models' ( https:\/\/www.sciencedirect.com\/science\/article\/abs\/pii\/S0378778815304357 ), it may be obvious that 'Light' is the most critical feature for predicting. This is the Graphical abstractof Occupancy CART model for temperature, humidity, light, CO2 and humidity ratio.\n\n![1-s2.0-S0378778815304357-fx1_lrg.jpg](attachment:ba2b4b1a-c2b7-4eaa-bc98-c8d95378bdc2.jpg)\nimage from https:\/\/www.sciencedirect.com\/science\/article\/abs\/pii\/S0378778815304357\n\nBut on the other hand, light intensity is sometimes tuned by people, and it may cause 'leakage'. And if we would like to use this model for home security, 'Light' is not suitable feature because thief does not turn on the light.\n\nSo I tried to find the model without 'Light' feature.\n\n![image.png](attachment:3ed93f5e-6e7f-4fdb-a988-bc76936b2cb3.png)\n\nBy useing PyCaret, I found that Extra Trees Classifier is the best model.\nAccuracy: 0.9853, AUC: 0.9962 may be not so bad. We can use it without 'Light'.","2ba34a17":"3. Modeling by PyCaret","96ef0466":"Considering the boxplot of Occupancy and Light, no light seems to mean no person, and any light seems to mean that there are someone in the room. \nLight and Occupancy correlation have strong positive correlation 0.91.\n\nIt means that any light shows that in many cases, the room is occupied. But it may cause target leakage when light is on, off and tuned by people. And for security use, in many case, thief does not turn on the light.\nSo I think that it will be better for me to try modeling without 'Light'.","fd698088":"Let's go into the detail.","b366f965":"1. Data Outline","ad669e20":"2. Features Engineering"}}