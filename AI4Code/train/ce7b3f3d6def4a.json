{"cell_type":{"e50b9e00":"code","f494967b":"code","5a5a9e73":"code","0ce4d8d1":"code","3448ae2b":"code","fb1f3d9f":"code","cdbf8ff3":"code","78ffd9d3":"code","9d7b343f":"code","8d96912a":"code","e55858c9":"code","a71c7275":"code","357ddc07":"code","43ad0ed4":"code","7fc6f668":"code","37c535a6":"code","9476bb24":"code","951a6269":"code","618d536a":"code","04f641c9":"code","145f8a69":"code","2128094e":"code","03b6da6a":"code","c9260157":"code","ecd4e846":"code","3f988627":"code","7a26dd77":"code","c8f48bb3":"code","5ef6ff14":"code","51566d21":"code","ecf1da83":"code","2daeb754":"code","a9277065":"code","0b8e74bf":"code","707cbbb1":"code","9e40738e":"code","86ea72e8":"code","f7308815":"code","45c4407a":"code","8760f597":"code","b272b158":"code","33d3cba4":"code","85fdfb0a":"code","17f1c9dc":"code","103d0e3e":"code","c8680848":"code","cdd26a4c":"markdown","4384febb":"markdown","25904ed3":"markdown","475103e2":"markdown","31d77a5b":"markdown"},"source":{"e50b9e00":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","f494967b":"df = pd.read_csv(\"..\/input\/diamonds\/diamonds.csv\")\ndf.head()","5a5a9e73":"df.drop('Unnamed: 0',axis=1,inplace=True)","0ce4d8d1":"df.head()","3448ae2b":"df.shape","fb1f3d9f":"df.info()","cdbf8ff3":"df['cut'].value_counts()","78ffd9d3":"df['color'].value_counts()","9d7b343f":"df['clarity'].value_counts()","8d96912a":"NCut = pd.get_dummies(df['cut'],drop_first=True)\nNColor = pd.get_dummies(df['color'],drop_first=True)\nNClarity = pd.get_dummies(df['clarity'],drop_first=True)","e55858c9":"df = pd.concat([df,NCut,NColor,NClarity],axis=1)","a71c7275":"df.head()","357ddc07":"df.columns","43ad0ed4":"df.drop(['cut','color','clarity'],axis=1,inplace=True)","7fc6f668":"df.head()","37c535a6":"sns.distplot(df['carat'])","9476bb24":"sns.distplot(df['depth'])","951a6269":"df['table'].hist()","618d536a":"plt.figure(figsize=(20,10))\nsns.heatmap(df.corr(),annot=True)","04f641c9":"X = df.drop('price',axis=1)\ny = df['price']","145f8a69":"from sklearn.model_selection import train_test_split","2128094e":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2)","03b6da6a":"from sklearn.linear_model import LinearRegression,Ridge,Lasso\nLR = LinearRegression()\nR = Ridge()\nL = Lasso()","c9260157":"LR.fit(X_train,y_train)","ecd4e846":"print(LR.score(X_test,y_test))","3f988627":"y_predLR = LR.predict(X_test)","7a26dd77":"sns.distplot(y_test-y_predLR)","c8f48bb3":"from sklearn import metrics\nprint('MAE:', metrics.mean_absolute_error(y_test, y_predLR))\nprint('MSE:', metrics.mean_squared_error(y_test, y_predLR))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_predLR)))","5ef6ff14":"plt.figure(figsize=(10,10))\nplt.plot(y_predLR,y_test,'o')\nplt.xlabel(\"predicted value\")\nplt.ylabel(\"actual value\")\nplt.show()","51566d21":"R.fit(X_train,y_train)","ecf1da83":"print(R.score(X_test,y_test))","2daeb754":"y_predR = R.predict(X_test)","a9277065":"sns.distplot(y_test-y_predR)","0b8e74bf":"from sklearn import metrics\nprint('MAE:', metrics.mean_absolute_error(y_test, y_predR))\nprint('MSE:', metrics.mean_squared_error(y_test, y_predR))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_predR)))","707cbbb1":"plt.figure(figsize=(10,10))\nplt.plot(y_predR,y_test,'o')\nplt.xlabel(\"predicted value\")\nplt.ylabel(\"actual value\")\nplt.show()","9e40738e":"L.fit(X_train,y_train)","86ea72e8":"print(L.score(X_test,y_test))","f7308815":"y_predL = L.predict(X_test)","45c4407a":"sns.distplot(y_test-y_predL)","8760f597":"from sklearn.ensemble import RandomForestRegressor\nRFR = RandomForestRegressor()","b272b158":"RFR.fit(X_train,y_train)","33d3cba4":"print(RFR.score(X_test,y_test))","85fdfb0a":"y_predRFR = RFR.predict(X_test)","17f1c9dc":"sns.distplot(y_test-y_predRFR)","103d0e3e":"from sklearn import metrics\nprint('MAE:', metrics.mean_absolute_error(y_test, y_predRFR))\nprint('MSE:', metrics.mean_squared_error(y_test, y_predRFR))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_predRFR)))","c8680848":"plt.figure(figsize=(10,10))\nplt.plot(y_predRFR,y_test,'o')\nplt.xlabel(\"predicted value\")\nplt.ylabel(\"actual value\")\nplt.show()","cdd26a4c":"Data Analysis\/Preprocessing","4384febb":"# importing library","25904ed3":"# EDA","475103e2":"# Splitting the data","31d77a5b":"# Correlation"}}