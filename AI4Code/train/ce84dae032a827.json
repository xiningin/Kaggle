{"cell_type":{"fd18c73e":"code","bd029fac":"code","c0b7cf3c":"code","46b996e2":"code","e0f6a949":"code","61380517":"code","3f668402":"code","9ddecf9c":"code","516f2f3c":"code","39f566a8":"code","517f5e02":"code","2db2aa38":"code","bbc2b4e3":"code","ad727878":"code","fbc41433":"code","6d538872":"code","02f2bbca":"code","3154fa9f":"code","1f4c0211":"code","2aa79f5d":"code","586b8875":"code","d1b1baa0":"code","eba3fcef":"code","32a738b1":"code","0e54a80b":"code","18d24dd7":"code","c76dcb06":"code","5cd0f9e3":"code","3c8e2992":"code","d8df7f03":"code","994cd073":"code","f8a7dc6a":"code","4cda48eb":"code","69101bd9":"markdown","7161314e":"markdown","5a6d75f9":"markdown","6e341bdc":"markdown","f717f4e0":"markdown","dfbbef67":"markdown","6081fd4a":"markdown","319df7e9":"markdown","52fc53de":"markdown","6fe44d3c":"markdown","beeb98be":"markdown","c81c14e2":"markdown","389e1dbc":"markdown","837b94f2":"markdown","ad7f5ac1":"markdown","f8b815f6":"markdown","dc1b243b":"markdown","4723c721":"markdown","0d7cb154":"markdown","8646a206":"markdown","5b8fa050":"markdown","b1386731":"markdown","170a5741":"markdown","e9aac415":"markdown","adc7fb35":"markdown","23f2795b":"markdown"},"source":{"fd18c73e":"import pandas as pd\nimport numpy as np\nimport cv2\nfrom ast import literal_eval\nfrom tqdm import tqdm\nimport os\n\nimport plotly_express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\nimport matplotlib.pyplot as plt\nfrom matplotlib_venn import *\n\nfrom plotly.offline import init_notebook_mode\ninit_notebook_mode()","bd029fac":"BASE_DIR = \"..\/input\/ranzcr-clip-catheter-line-classification\/\"\ndf = pd.read_csv(BASE_DIR + 'train.csv')\ndf.head()","c0b7cf3c":"print(f\"The size of the dataset is {df.shape[0]} and it contains {df['PatientID'].nunique()} patient ids\")","46b996e2":"idCounts = df['PatientID'].value_counts().reset_index()\nidCounts.columns = ['PatientID', 'Number of Observations']\nidCounts = idCounts.sort_values(by = 'Number of Observations', ascending = False)\nidCounts.head()","e0f6a949":"fig = px.histogram(idCounts, 'Number of Observations', title = 'Distribution of Number of Observations per PatientIDs', template = 'ggplot2')\nfig.show()","61380517":"categories = ['ETT - Abnormal', 'ETT - Borderline',\n       'ETT - Normal', 'NGT - Abnormal', 'NGT - Borderline',\n       'NGT - Incompletely Imaged', 'NGT - Normal', 'CVC - Abnormal',\n       'CVC - Borderline', 'CVC - Normal','Swan Ganz Catheter Present']\ncategoryCounts = df[categories].sum(axis = 0).reset_index()\ncategoryCounts.columns = ['Malpositions', 'Number of Observations']","3f668402":"fig = px.bar(categoryCounts, y = 'Malpositions', x = 'Number of Observations', template = 'seaborn', text = 'Number of Observations', title = 'Line and tube positions')\nfig.show()","9ddecf9c":"countsDf = {'Type' : [], 'Malposition'  : [], 'Num of Observations' : []}\nfor Type in ['Normal','Abnormal','Borderline']:\n    for malposition in ['ETT','NGT','CVC']:\n        colName = f'{malposition} - {Type}'\n        countsDf['Type'].append(Type)\n        countsDf['Malposition'].append(malposition)\n        val = df[colName].sum(axis = 0)\n        countsDf['Num of Observations'].append(val)\ncountsDf = pd.DataFrame(countsDf)","516f2f3c":"fig = px.bar(countsDf, x = 'Num of Observations', y = 'Type', color = 'Malposition', barmode = 'stack', \n             color_discrete_map={'ETT' : '#a2885e', 'NGT' : '#e9cf87', 'CVC' : '#f1efd9'}, template = 'plotly_dark')\nfig.show()","39f566a8":"annotations = pd.read_csv(BASE_DIR + 'train_annotations.csv')\nannotations['data'] = annotations['data'].apply(literal_eval)\nannotations.head()","517f5e02":"IMAGE_DIR_TRAIN = BASE_DIR + 'train\/'\nIMAGE_DIR_TEST = BASE_DIR + 'test\/'","2db2aa38":"def plot_image_and_annotations(image_uid, title,singleLabel = True):\n    image_path = IMAGE_DIR_TRAIN + image_uid + '.jpg'\n    data = annotations[annotations['StudyInstanceUID'] == image_uid]\n    if(singleLabel):\n        data = data[data['label'] == title]\n    data = data['data']\n    if(len(data) == 0):\n        print(title)\n        return\n    plt.figure(figsize=(10,6))\n\n    plt.subplot(1, 2,1)\n    img = plt.imread(image_path)\n    \n    print(f\"Image dimensions:  {img.shape[0],img.shape[1]}\")\n    print(f\"Maximum pixel value : {img.max():.1f} ; Minimum pixel value:{img.min():.1f}\")\n    print(f\"Mean value of the pixels : {img.mean():.1f} ; Standard deviation : {img.std():.1f}\")\n    \n    plt.imshow(img, cmap='gray')\n    plt.title('Actual Image')\n    plt.axis('off')\n\n    plt.subplot(1,2,2)\n    plt.imshow(img, cmap='gray')\n    plt.axis('off')\n    \n    for i in range(len(data)):\n        curr_data = data.values[i]\n        x_loc = [x[0] for x in curr_data]\n        y_loc = [x[1] for x in curr_data]\n        \n        plt.plot(x_loc, y_loc, linewidth = 5.0)\n    plt.tight_layout()\n    \n    plt.title('Annotated Image')\n    \n    plt.suptitle(title)\n    plt.show()","bbc2b4e3":"imageIds = {}\nfor cat in categories:\n    imageIds[cat] = df[df[cat] == 1]['StudyInstanceUID'].to_list()","ad727878":"plot_image_and_annotations(imageIds[categories[0]][0], categories[0])","fbc41433":"plot_image_and_annotations(imageIds[categories[1]][2], categories[1])","6d538872":"plot_image_and_annotations(imageIds[categories[2]][-1], categories[2])","02f2bbca":"plot_image_and_annotations(imageIds[categories[3]][-1], categories[3])","3154fa9f":"plot_image_and_annotations(imageIds[categories[4]][-1], categories[4])","1f4c0211":"plot_image_and_annotations(imageIds[categories[5]][-1], categories[5])","2aa79f5d":"plot_image_and_annotations(imageIds[categories[6]][7], categories[6])","586b8875":"plot_image_and_annotations(imageIds[categories[7]][-1], categories[7])","d1b1baa0":"plot_image_and_annotations(imageIds[categories[8]][0], categories[8])","eba3fcef":"plot_image_and_annotations(imageIds[categories[9]][-1], categories[9])","32a738b1":"plot_image_and_annotations(imageIds[categories[10]][5], categories[10])","0e54a80b":"image_width = []\nimage_height = []\nimage_channel_mean = []\nfor image_uid in tqdm(df['StudyInstanceUID'].to_list()):\n    image_path = IMAGE_DIR_TRAIN + image_uid + '.jpg'\n    img = cv2.imread(image_path,cv2.IMREAD_GRAYSCALE)\n    image_height.append(img.shape[0])\n    image_width.append(img.shape[1])\n    image_channel_mean.append(np.mean(img))\ndf['Image Height'] = image_height\ndf['Image Width'] = image_width\ndf['Total Pixels'] = df['Image Height'] * df['Image Width']","18d24dd7":"test_image_width = []\ntest_image_height = []\ntest_channel_mean = []\nfor image_name in tqdm(os.listdir(IMAGE_DIR_TEST)):\n    image_path = IMAGE_DIR_TEST + image_name\n    img = cv2.imread(image_path,cv2.IMREAD_GRAYSCALE)\n    test_image_height.append(img.shape[0])\n    test_image_width.append(img.shape[1])\n    test_channel_mean.append(np.mean(img))","c76dcb06":"trace0 = go.Violin(x = image_height, name = 'Train Height')\ntrace1 = go.Violin(x = image_width, name = 'Train Width')\n\ntrace2 = go.Violin(x = test_image_width, name = 'Test Width')\ntrace3 = go.Violin(x = test_image_height, name = 'Test Height')\n\nfig = go.Figure([trace0,trace3, trace1, trace2])\nfig.update_layout(title = 'Image Height and Widths', template = 'ggplot2')\nfig.show()","5cd0f9e3":"fig = ff.create_distplot([image_channel_mean, test_channel_mean], group_labels=['Training Images', 'Testing Images'], colors = ['#cecece','#808080'])\nfig.update_layout(template = 'plotly_white', title_text = 'Channel Distribution')\nfig.show()","3c8e2992":"plt.figure(figsize=(6,6))\nfig = venn3([set(df[df[col] == 1]['StudyInstanceUID']) for col in ['ETT - Abnormal', 'ETT - Borderline', 'ETT - Normal']], set_labels = ['ETT - Abnormal', 'ETT - Borderline', 'ETT - Normal'])\nplt.title('ETT Image Overlap')\nplt.show()","d8df7f03":"plt.figure(figsize=(6,6))\nfig = venn3([set(df[df[col] == 1]['StudyInstanceUID']) for col in ['NGT - Abnormal', 'NGT - Borderline','NGT - Normal']], set_labels = ['NGT - Abnormal', 'NGT - Borderline','NGT - Normal'])\nplt.title('NGT Image Overlap')\nplt.show()","994cd073":"plt.figure(figsize=(6,6))\nfig = venn3([set(df[df[col] == 1]['StudyInstanceUID']) for col in ['CVC - Abnormal', 'CVC - Borderline','CVC - Normal']], set_labels = ['CVC - Abnormal', 'CVC - Borderline','CVC - Normal'])\nplt.title('CVC Image Overlap')\nplt.show()","f8a7dc6a":"df[(df['CVC - Abnormal'] == 1) & (df['CVC - Normal'] == 1) & (df['CVC - Borderline'] == 1)]","4cda48eb":"plot_image_and_annotations('1.2.826.0.1.3680043.8.498.74579763900891627023142390145044977755', 'Image with CVC Normal, Abnormal and Borderline Annotations',singleLabel=False)","69101bd9":"<h1 style=\"border:2px solid Purple;text-align:center\">Table of Contents<\/h1>\n\n* [The Competition](#competition)\n\n* [Objective](#obj)\n\n* [Dataset](#ds)\n\n* [Importing Necessary Libraries](#libs)\n\n* [Training Dataset](#trainds)\n\n* [Image Annotations](#annot)\n\n* [Image Information](#image)\n\n* [Category Overlap](#overlap)","7161314e":"<h1 style=\"border:2px solid Purple;text-align:center\">Image Annotations - CVC - Normal<\/h1>","5a6d75f9":"<a id = \"eval\"><\/a>\n\n<h1 style=\"border:2px solid Purple;text-align:center\">Evaluation Metric<\/h1>\n\nSubmissions are evaluated on area under the ROC curve between the predicted probability and the observed target.\n\nTo calculate the final score, AUC is calculated for each of the 11 labels, then averaged. The score is then the average of the individual AUCs of each predicted column.\n\nIn case you need a python code [Source](https:\/\/www.kaggle.com\/c\/ranzcr-clip-catheter-line-classification\/discussion\/203581#1115260)\n\n> np.mean([roc_auc_score(y_true[:, i], y_pred[:, i]) for i in range(11)])","6e341bdc":"<a id=\"overlap\"><\/a>\n<h1 style=\"border:2px solid Purple;text-align:center\">Category Overlap<\/h1>","f717f4e0":"<h1 style=\"border:2px solid Purple;text-align:center\">Image Annotations - Swan Ganz Catheter Present<\/h1>","dfbbef67":"<h1 style=\"border:2px solid Purple;text-align:center\">Image Annotations - ETT - Normal<\/h1>","6081fd4a":"<a id = \"obj\"><\/a>\n\n<h1 style=\"border:2px solid Purple;text-align:center\">Objective<\/h1>\n\nIn this competition, you\u2019ll detect the presence and position of catheters and lines on chest x-rays. Use machine learning to train and test your model on 40,000 images to categorize a tube that is poorly placed.\n","319df7e9":"<h1 style=\"border:2px solid Purple;text-align:center\">Image Annotations - ETT - Borderline<\/h1>","52fc53de":"<h1 style=\"border:2px solid Purple;text-align:center\">RANZCR CLiP - Catheter and Line Position Challenge<\/h1>\n\n![](https:\/\/storage.googleapis.com\/kaggle-organizations\/3765\/thumbnail.png?r=270)","6fe44d3c":"<a id = \"ds\"><\/a>\n\n<h1 style=\"border:2px solid Purple;text-align:center\">Dataset<\/h1>\n\nThe dataset has been labelled with a set of definitions to ensure consistency with labelling. The normal category includes lines that were appropriately positioned and did not require repositioning. The borderline category includes lines that would ideally require some repositioning but would in most cases still function adequately in their current position. The abnormal category included lines that required immediate repositioning.","beeb98be":"<h1 style=\"border:2px solid Purple;text-align:center\">Image Annotations - CVC - Borderline<\/h1>","c81c14e2":"<a id = \"trainds\"><\/a>\n<h1 style=\"border:2px solid Purple;text-align:center\">Training Dataset<\/h1>","389e1dbc":"<h1 style=\"border:2px solid Purple;text-align:center\">Image Annotations - NGT - Borderline<\/h1>","837b94f2":"<a id = \"libs\"><\/a>\n<h1 style=\"border:2px solid Purple;text-align:center\">Importing Necessary Libraries<\/h1>","ad7f5ac1":"<h1 style=\"border:2px solid Purple;text-align:center\">Image Annotations - NGT - Abnormal<\/h1>","f8b815f6":"<h1 style=\"border:2px solid Purple;text-align:center\">Image Annotations - NGT - Incompletely Imaged<\/h1>","dc1b243b":"<h1 style=\"border:2px solid Purple;text-align:center\">Image Annotations - CVC - Abnormal<\/h1>","4723c721":"<h1 style=\"border:2px solid Purple;text-align:center\">Image Annotations - NGT - Normal<\/h1>","0d7cb154":"## Work in Progress","8646a206":"### Columns\n\n* **StudyInstanceUID** - unique ID for each image\n* **ETT - Abnormal** - endotracheal tube placement abnormal\n* **ETT - Borderline** - endotracheal tube placement borderline abnormal\n* **ETT - Normal** - endotracheal tube placement normal\n* **NGT - Abnormal** - nasogastric tube placement abnormal\n* **NGT - Borderline** - nasogastric tube placement borderline abnormal\n* **NGT - Incompletely Imaged** - nasogastric tube placement inconclusive due to imaging\n* **NGT - Normal** - nasogastric tube placement borderline normal\n* **CVC - Abnormal** - central venous catheter placement abnormal\n* **CVC - Borderline** - central venous catheter placement borderline abnormal\n* **CVC - Normal** - central venous catheter placement normal\n* **Swan Ganz Catheter Present**\n* **PatientID** - unique ID for each patient in the dataset","5b8fa050":"Most of the PatientID's have only one observation in the dataset, but there are some PatientIDs with as many as 100+ records in the training dataset. ","b1386731":"<a id = \"competition\"><\/a>\n\n<h1 style=\"border:2px solid Purple;text-align:center\">The Competition<\/h1>\n\nSerious complications can occur as a result of malpositioned lines and tubes in patients. Doctors and nurses frequently use checklists for placement of lifesaving equipment to ensure they follow protocol in managing patients. Yet, these steps can be time consuming and are still prone to human error, especially in stressful situations when hospitals are at capacity.\n\nHospital patients can have catheters and lines inserted during the course of their admission and serious complications can arise if they are positioned incorrectly. Nasogastric tube malpositioning into the airways has been reported in up to 3% of cases, with up to 40% of these cases demonstrating complications [1-3]. Airway tube malposition in adult patients intubated outside the operating room is seen in up to 25% of cases [4,5]. The likelihood of complication is directly related to both the experience level and specialty of the proceduralist. Early recognition of malpositioned tubes is the key to preventing risky complications (even death), even more so now that millions of COVID-19 patients are in need of these tubes and lines.\n\nThe gold standard for the confirmation of line and tube positions are chest radiographs. However, a physician or radiologist must manually check these chest x-rays to verify that the lines and tubes are in the optimal position. Not only does this leave room for human error, but delays are also common as radiologists can be busy reporting other scans. Deep learning algorithms may be able to automatically detect malpositioned catheters and lines. Once alerted, clinicians can reposition or remove them to avoid life-threatening complications.\n\nThe Royal Australian and New Zealand College of Radiologists (RANZCR) is a not-for-profit professional organisation for clinical radiologists and radiation oncologists in Australia, New Zealand, and Singapore. The group is one of many medical organisations around the world (including the NHS) that recognizes malpositioned tubes and lines as preventable. RANZCR is helping design safety systems where such errors will be caught.","170a5741":"### It must be noted that that the fact that we have an overlap in NGT and CVC categories does not mean that the images are mislabeled. \n\n> The labels reflect whether or not a particular finding is present or absent in the image, and are not mutually exclusive as there may be more than one line or tube of that type in the patient. For instance, it is not uncommon to have 2 or more CVCs in the same patient, where one could be in a Normal position but another could be in a Borderline or Abnormal position. This will explain the majority of the cases you see where there are more than one label for NGT or CVC. There may be a small minority of incorrectly labelled cases due to human error but this should be a small percentage.\n\nRead the following [discussion](https:\/\/www.kaggle.com\/c\/ranzcr-clip-catheter-line-classification\/discussion\/203372) to know more","e9aac415":"<h1 style=\"border:2px solid Purple;text-align:center\">Image Annotations - ETT - Abnormal<\/h1>","adc7fb35":"<a id=\"image\"><\/a>\n<h1 style=\"border:2px solid Purple;text-align:center\">Image Info<\/h1>","23f2795b":"<a id = \"annot\"><\/a>\n<h1 style=\"border:2px solid Purple;text-align:center\">Image Annotations<\/h1>"}}