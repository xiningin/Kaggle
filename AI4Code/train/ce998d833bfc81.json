{"cell_type":{"3e30b1df":"code","e4cb8523":"code","c8761832":"code","781dd0b8":"code","7ff5518f":"code","34ae53d1":"code","c485f030":"code","3ce15d06":"code","993849b7":"markdown"},"source":{"3e30b1df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\n\nimport pickle\nfrom matplotlib import pyplot as plt\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e4cb8523":"%%time\ndtype = pickle.load(open('..\/input\/kdd2020-cpr\/2018_dtypes.pkl', 'rb'))\ndel dtype['date']\ndf = pd.read_csv(\n    '..\/input\/kdd2020-cpr\/2018.csv',\n    dtype=dtype,\n    parse_dates=['date']\n)","c8761832":"%%time\nprint(\"Dropping nan columns:\", df.dropna(axis=1).shape)\nprint(\"Dropping nan rows:\", df.dropna(axis=0).shape)","781dd0b8":"nan_per_row = df.isna().sum(axis=1) \/ df.shape[1]\nnan_per_line = df.isna().sum(axis=0) \/ df.shape[0]","7ff5518f":"nan_per_line","34ae53d1":"nan_per_row","c485f030":"plt.hist","3ce15d06":"plt.figure(1, figsize=(10, 6.6), dpi=150)\nplt.hist(nan_per_line, bins=50)\nplt.title('NaN percentage')\nplt.show()","993849b7":"Since every row have missing values then dropping na-rows is infeasible."}}