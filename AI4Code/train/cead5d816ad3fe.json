{"cell_type":{"dee521d0":"code","8b7f8c8d":"code","a374b9e6":"code","ccb64678":"code","615a6338":"code","65bf6c12":"code","f92e576d":"code","e3794340":"code","774ec240":"code","22dda16e":"code","c12419a6":"code","2b099571":"code","e6a90d29":"code","a5d0bd4f":"code","8c5a2861":"code","859feb02":"code","8c9d9405":"code","8dad1597":"code","e106b7e1":"code","14344a7a":"code","2e7283ad":"code","bffb95cd":"code","64e17ab5":"markdown"},"source":{"dee521d0":"import os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport sklearn\nimport warnings\nwarnings.filterwarnings('ignore', category=DeprecationWarning)\nwarnings.filterwarnings('ignore', category=UserWarning)\n\n%matplotlib inline","8b7f8c8d":"dataframe = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/train.csv')","a374b9e6":"dataframe.head()","ccb64678":"dataframe.columns","615a6338":"dataframe.dtypes","65bf6c12":"dataframe.describe()","f92e576d":"X = dataframe.iloc[:,1:-1].values #dropping id and targets column\ny = dataframe.iloc[:,-1].values #getting last column of the dataframe which in this case are the labels\n\nprint(dataframe.shape)\nprint(X.shape)\nprint(y.shape)","e3794340":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.2,random_state = 42,stratify = y) \n#random_state = 42 \n#This ensures that the random numbers are generated in the same order.\n#stratify helps the splitting in train and test to be in proportion with how the data is in proportion in original y.","774ec240":"from sklearn.preprocessing import StandardScaler\n\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","22dda16e":"from sklearn.model_selection import GridSearchCV","c12419a6":"from xgboost import XGBClassifier","2b099571":"warnings.filterwarnings('ignore', category=FutureWarning)\nxgb_model = XGBClassifier(random_state = 42)\nparameters = {'learning_rate': [0.05,0.1,0.5],\n              'max_depth': [3,4,5]\n              }\n\ngridsearch = GridSearchCV(xgb_model,parameters,cv = 10,scoring = 'accuracy')\ngridsearch.fit(X, y)\nprint(gridsearch.best_params_)\nprint(gridsearch.best_score_)","e6a90d29":"xgb = XGBClassifier(learning_rate = 0.5, max_depth = 3,random_state = 42)","a5d0bd4f":"xgb.fit(X_train,\n              y_train,\n              verbose = True,\n              #eval_set = [(X_test,y_test)]\n             )","8c5a2861":"print(\"Accuracy on training set: {:.3f}\".format(xgb.score(X_train, y_train)))\nprint(\"Accuracy on testing set: {:.3f}\".format(xgb.score(X_test,y_test)))","859feb02":"test = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/test.csv')","8c9d9405":"test = test.drop(columns = ['id'])","8dad1597":"preds = xgb.predict_proba(test)","e106b7e1":"submission = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/sample_submission.csv')","14344a7a":"test_df = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/test.csv')","2e7283ad":"submission['id'] = test_df['id']\nsubmission['Class_1']=preds[:,0]\nsubmission['Class_2']=preds[:,1]\nsubmission['Class_3']=preds[:,2]\nsubmission['Class_4']=preds[:,3]\nsubmission.head()","bffb95cd":"submission.to_csv('Submission.csv', index = False)\nsubmission.head()","64e17ab5":"The idea behind **Standard Scaler** is to transform the data such that it's mean = 0 and standard deviation = 1"}}