{"cell_type":{"9e9dddf3":"code","5d73a4ee":"code","d48b6aef":"code","4e92bd1c":"code","2c4ba941":"code","86eda196":"code","0216e2b9":"code","b4079bab":"code","c18ff836":"code","0d7481b6":"code","76894d70":"code","8d3948e7":"code","7a753165":"code","f57604e1":"code","fd230549":"code","3097c3f9":"code","a5268a71":"code","149baf07":"code","32f13f2f":"code","e39cab04":"code","6e475d90":"code","4db8a3d3":"markdown","370586cd":"markdown","c1e19607":"markdown"},"source":{"9e9dddf3":"# first thing first \"Import all the related libraries\"\n\n#import pandas for high performance data analysis tools\nimport pandas as pd\n\n# import seaborn for statistical data visualization\nimport seaborn as sns\n\n#import numpy for array-processing package\nimport numpy as np\n\n#import matplotlib.pyplot for MATLAB like interface \nimport matplotlib.pyplot as plt\n\nimport warnings   #Learnt from CancernDiagonostic Case Study\nwarnings.filterwarnings(\"ignore\")\nimport os\nprint(os.listdir('..\/input'))","5d73a4ee":"#import the data and store it as data frame\n\nhaberman_df= pd.read_csv('..\/input\/haberman.csv')\n\n#print(haberman_df) \n\n#check the total number of data points, features \n\nprint(haberman_df.shape)\n\nprint(haberman_df.columns)","d48b6aef":"# Clearly above code displays just 305 rows and 4 columns. As per data info , we have 306 rows.  Also, there are no column names here, just data displayed\n\nhaberman_df= pd.read_csv('..\/input\/haberman.csv', header=None)\n\nprint(haberman_df.shape)","4e92bd1c":"#We can start mentioning the feature names as there is none.\n# Age of patient at time of operation (numerical)  : Age\n#Patient's year of operation (year - 1900, numerical)  : Year\n#Number of positive axillary nodes detected (numerical) : Nodes\n#Survival status : Status\n\ncolumn_names= ['Age', 'Year' , 'Nodes' , 'Status']\n\n#infusing column names in the dataset.\n\nhaberman_df= pd.read_csv('..\/input\/haberman.csv', header=None, names=column_names )\n# sample checkout for  first five rows with infused column names\n\nprint(haberman_df.head(10))","2c4ba941":"print(haberman_df.info())","86eda196":"haberman_df['Status'].value_counts()","0216e2b9":"#Series has a map method for applying an element-wise function\n#I will map the Status to categories : Survived, Died   using that method\n\n#haberman_df['Status']= haberman_df['Status'].map({1:'Survived ', 2:'Died'})\n#haberman_df['Status']= haberman_df['Status'].astype('category')\n\nhaberman_df.head(10)","b4079bab":"#Univariate Analysis\n\n#      1. PDF  \n\nsns.FacetGrid(haberman_df, hue=\"Status\", size=5).map(sns.distplot, \"Age\").add_legend();\nsns.FacetGrid(haberman_df, hue=\"Status\", size=5).map(sns.distplot, \"Year\").add_legend();\nsns.FacetGrid(haberman_df, hue=\"Status\", size=5).map(sns.distplot, \"Nodes\").add_legend();\nwarnings.filterwarnings(\"ignore\")\nplt.show();","c18ff836":"# Observations\n\n# 1. Nodes(axillary nodes) found useful in identifying the status.\n# 2. Rest of the classes cannot be used for analysis as they are overlapping here.\n\nprint(haberman_df['Nodes'].mean())\n\n# 3. \"Survived\" status falls mostly from 0 to 4 Nodes range. Those falling under mean have great chances of survival ","0d7481b6":"chance = haberman_df.loc[haberman_df[\"Status\"] == 1];\n\n#Summary for People belonging to class 1 (the patient survived 5 years after opertn)\n\nchance.describe()","76894d70":"no_chance = haberman_df.loc[haberman_df[\"Status\"] == 2];\n\n#Summary for People belonging to class 1 (the patient who died within 5 years of opertn)\n\nno_chance.describe()","8d3948e7":"#CDF of axil_nodes for two classes\n\n\n\n#patient who Survived 5 years or longer\n\ncounts, bin_edges = np.histogram(chance['Nodes'], bins=20, density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges)\n\n#compute CDF\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf,label= \"PDF-axil nodes for the patient who Survived 5 years or longer\")\nplt.plot(bin_edges[1:], cdf, label= \"CDF-axil nodes for the patient who Survived 5 years or longer\")\n\nplt.legend(loc='best')\nplt.show();\n\n# patient who died within 5 years of opertn\n\ncounts, bin_edges = np.histogram(no_chance['Nodes'], bins=20, density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges)\n\n#compute CDF\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf,label= \"PDF-axil nodes for the patient who died within 5 years of opertn\")\nplt.plot(bin_edges[1:], cdf, label= \"CDF-axil nodes for the patient who died within 5 years of oprtn\")\n\nplt.legend(loc='best')\nplt.show()","7a753165":"#Observarions using Describe and CDFs\n\n#  None of the patient survived more than 5 year with Nodes greater than 46.","f57604e1":"#BOX PLOT And WHISKERS\n\nsns.boxplot(x='Status', y='Nodes', data = haberman_df)\n    \nplt.show()\n\nsns.boxplot(x='Status', y='Age', data = haberman_df)\nplt.show()\n\nsns.boxplot(x='Status', y='Year', data = haberman_df)\nplt.show()","fd230549":"#Observations\n\n#1. Survival rate is great for people having less than 4 nodes\n#2. People with age above 78 year have no chance of survival(belongs to class 2)","3097c3f9":"#VIOLIN PLOTS\n\n\nsns.violinplot(x='Status',y='Nodes', data=haberman_df)\n\nplt.show()\n\nsns.violinplot(x='Status',y='Age', data=haberman_df)\nplt.show()\n\nsns.violinplot(x='Status',y='Year', data=haberman_df)\nplt.show()\n","a5268a71":"#Observations\n\n#1. Status Vs Nodes Violin plot indicates their is fatter region around 0-4 region,which indicates Nodes as the useful feature\n#2. More than 50 percent of people who didn't survived is having aux nodes greater than 4 \n","149baf07":"#Univariate Analysis\n\n#2-D Scatter Plot\nsns.set_style(\"whitegrid\");\nsns.FacetGrid(haberman_df, hue=\"Status\", size=4).map(plt.scatter, \"Age\", \"Nodes\").add_legend();\nplt.show();","32f13f2f":"#Observations\n\n#1. Age group from 51 to 59 having zero Nodes has high survival rate among any other age group ","e39cab04":"# PAIR PLOTS\n\nsns.pairplot(haberman_df, hue=\"Status\",vars=['Age','Year','Nodes'] );\nplt.show()","6e475d90":"##Observation\n\n1.No clear observations can be made using Pair Plot  as we are not able to  distinguish data easily here.\n2.Still Nodes Vs Year is better in classifying the data here.\n\n#End Of Observation.","4db8a3d3":"                               **Title: Haberman's Survival Data**\nSource: Kaggle\n\nRelevant Information: The dataset contains cases from a study that was conducted between 1958 and 1970 at the University of Chicago's Billings Hospital on the survival of patients who had undergone surgery for breast cancer.\n\nNumber of Instances: 306\n\nNumber of Attributes: 4 (including the class attribute)\n\nAttribute Information:\n    Age of patient at time of operation (numerical)\n    Patient's year of operation (year - 1900, numerical)\n    Number of positive axillary nodes detected (numerical)\n    Survival status (class attribute) 1 = the patient survived 5 years or longer & Class attribute 2 = the patient died within 5 year\n\nMissing Attribute Values: None ","370586cd":"## Observations on the above data\n\n###   1. class attribute 1 has 225 points i.e. \" 225 patients survived 5 years or longer\"  This is around 73.5 percent\n###   2. class attribute 2 has 81 points i.e. \" 81  patients died within 5 year\" This is around 26.5 percent","c1e19607":"\n## Observations on the above data\n\n###   1. No missing values in dataset.\n###  2.  Data of every column is integer type, this contradi****cts the statement in the top(\"Survival status (class attribute) 1 = the patient survived 5 years or longer & Class attribute 2 = the patient died within 5 year\")\n###   3. We have to see the number of points for column Status. "}}