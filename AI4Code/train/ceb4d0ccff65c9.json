{"cell_type":{"ffe8e0fa":"code","e916f078":"code","d80be3a6":"code","9f757564":"code","edf232e5":"code","58918622":"code","5c727a3f":"code","c230b8cb":"code","14e5170b":"code","4da89fd7":"code","fde7621c":"code","e4f56c88":"code","8c839823":"code","1c00b792":"code","026845db":"code","56691bf0":"code","98e61c0d":"code","9cb799c8":"code","0c5b5acf":"code","091c3af9":"code","52542390":"code","eb74e140":"code","ccab861f":"code","8c204282":"code","e0b1ee8c":"code","e9f5f027":"code","ce172a64":"code","2a69d10d":"code","6db9d552":"code","4c3d3539":"code","57307d2d":"code","027a1312":"code","63e2396c":"code","eb884a6b":"code","fdc80169":"code","4e9f04a3":"code","0b9a4a92":"code","b10b28ab":"code","186d8d2f":"code","b93d6444":"code","20d2cbf2":"code","fd7e8833":"code","a4132443":"code","dc449b2b":"code","72d84f77":"code","14d65718":"code","8726afcd":"code","f50c4afc":"code","01400b27":"code","45c3a165":"code","41e32b34":"code","1e9517e8":"code","214b9adf":"code","2b35fd31":"code","131a6e7b":"code","f087bb3f":"code","876bc9fb":"code","6ea54fd9":"code","d05e4b4a":"code","dfbdb547":"markdown","c3b35dcc":"markdown","3e7a0b91":"markdown","4d5b34b1":"markdown","c32d5da4":"markdown","0e7dfaed":"markdown","dc9e4194":"markdown","d77bd8b8":"markdown","762f5215":"markdown","9ddea14a":"markdown","08036012":"markdown","8a234efa":"markdown","94c5fca3":"markdown","33cd6973":"markdown","b3d0c5cf":"markdown","9a9c02e8":"markdown","ff9f5340":"markdown","c05ca27b":"markdown","ba1d73d4":"markdown","0636c8d0":"markdown","a014da52":"markdown","537dd311":"markdown","e20463fe":"markdown","f4c56cdb":"markdown","52cb40de":"markdown","a3b53425":"markdown","95f54830":"markdown","5b833ba1":"markdown","5c3f42e0":"markdown","b60fa3b8":"markdown","472db977":"markdown","a193ba56":"markdown","1fc58604":"markdown","c7e238db":"markdown","cf7c3c5f":"markdown","8835e233":"markdown","dfae8a8e":"markdown","4b335479":"markdown","82763e29":"markdown","eb787e3e":"markdown","56d61119":"markdown","ee47398b":"markdown","0469f1b2":"markdown","cf1d4c0a":"markdown","11f230e6":"markdown","14a32fc1":"markdown","15ee8957":"markdown","e8d4f753":"markdown","7e5676d2":"markdown","23c96cbc":"markdown","9713dca3":"markdown"},"source":{"ffe8e0fa":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport glob\nimport os\n\nfrom plotly import subplots\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport datetime\nimport plotly.express as px\n\n# define the colour palette to be used\npalette_darkgrey = \"#383C45\"\npalette_silver = \"#A2A5A9\"\npalette_green = \"#4DC000\"\npalette_blue = \"#278BD3\"\npalette_platinum = \"#E3E4E5\" \npalette_red = '#d32744'\npalette_grey2 = \"#676A6C\"\npalette_grey3 = \"#959894\"\npalette_grey4 = \"#C4C5BB\"\n\n# engagement data\neng_path = '..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data'\neng_files = glob.glob(eng_path + \"\/*.csv\")\nfiles = []\n\nfor file in eng_files:\n    df = pd.read_csv(file, index_col = None, header = 0)\n    district_id = file.split('\/')[4].split('.')[0]\n    df['district_id'] = district_id\n    files.append(df)\n\nengagement = pd.concat(files)\nengagement = engagement.reset_index(drop = True)\nengagement['time'] = pd.to_datetime(engagement['time'])\n\n# districts and products data\ndistricts = pd.read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv')\nproducts = pd.read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv')\n\n# NAEP test scores by state\nnaep = pd.read_csv('..\/input\/us-education-datasets-unification-project\/output_data\/output_data\/naep_states.csv')\n\n# enrollment data by state\nenrollment = pd.read_csv('..\/input\/us-education-datasets-unification-project\/output_data\/output_data\/enroll_states.csv')","e916f078":"# districts data clean up\nmapping_dict = {'[0, 0.2[':0.1,\n                '[0.2, 0.4[':0.3,\n                '[0.4, 0.6[':0.5,\n                '[0.6, 0.8[':0.7,\n                '[0.8, 1[':0.9,\n                np.nan:np.nan}\ndistricts['pct_black\/hispanic'] = districts['pct_black\/hispanic'].map(mapping_dict)\ndistricts['pct_free\/reduced'] = districts['pct_free\/reduced'].map(mapping_dict)\npp_total_dict = {np.nan:np.nan,\n                '[8000, 10000[':9000,\n                '[10000, 12000[':11000,\n                '[14000, 16000[':15000,\n                '[12000, 14000[':13000,\n                '[16000, 18000[':17000,\n                '[6000, 8000[':7000,\n                '[18000, 20000[':19000,\n                '[20000, 22000[':21000,\n                '[22000, 24000[':23000,\n                '[4000, 6000[':5000,\n                '[32000, 34000[':33000}\ndistricts['pp_total_raw'] = districts['pp_total_raw'].map(pp_total_dict)\n\n# get latest NAEP scores\nnaep = naep[naep['YEAR']==2019]\n\n# get latest enrollment\nenrollment = enrollment[enrollment['YEAR'] == 2016]\n\n# calculating percent of students enrolled by demographic\nfor i in ['AM','AS','HI','BL','WH','HP','TR']:\n    enrollment['G05_percent_{}'.format(i)] = (enrollment['G05_{}_F'.format(i)]+enrollment['G05_{}_M'.format(i)])\/enrollment['G05_A_A']\n    enrollment['G01_percent_{}'.format(i)] = (enrollment['G01_{}_F'.format(i)]+enrollment['G01_{}_M'.format(i)])\/enrollment['G01_A_A']\n    \n# enrollment by sex, this wasn't used\nfor i in ['M','F']:\n    enrollment['G05_percent_{}'.format(i)] = 0\n    enrollment['G01_percent_{}'.format(i)] = 0\n    for j in ['AM','AS','HI','BL','WH','HP','TR']:\n        enrollment['G05_percent_{}'.format(i)] += enrollment['G05_{}_{}'.format(j,i)]\/enrollment['G05_A_A']\n        enrollment['G01_percent_{}'.format(i)] += enrollment['G01_{}_{}'.format(j,i)]\/enrollment['G05_A_A']\n\n# some districts are missing data on american indians\nenrollment['G05_percent_AM'] = 1 - (enrollment['G05_percent_AS'] + enrollment['G05_percent_HI'] + enrollment['G05_percent_BL'] + enrollment['G05_percent_WH'] + enrollment['G05_percent_HP'] + enrollment['G05_percent_TR'])\n\n# calculate these as a sanity check to ensure the demographics add up to 1\nenrollment['G05_demo_total_percent'] = enrollment['G05_percent_AM'] + enrollment['G05_percent_AS'] + enrollment['G05_percent_HI'] + \\\n          enrollment['G05_percent_BL'] + enrollment['G05_percent_WH'] + enrollment['G05_percent_HP'] + enrollment['G05_percent_TR']\nenrollment['G01_demo_total_percent'] = enrollment['G01_percent_AM'] + enrollment['G01_percent_AS'] + enrollment['G01_percent_HI'] +  \\\n          enrollment['G01_percent_BL'] + enrollment['G01_percent_WH'] + enrollment['G01_percent_HP'] + enrollment['G01_percent_TR']\n\n# keep columns that we want\nenrollment = enrollment[['G05_percent_AM','G05_percent_AS','G05_percent_HI','G05_percent_BL','G05_percent_WH','G05_percent_HP','G05_percent_TR','STATE',\n                        'G01_percent_AM','G01_percent_AS','G01_percent_HI','G01_percent_BL','G01_percent_WH','G01_percent_HP','G01_percent_TR',\n                        'G05_demo_total_percent','G01_demo_total_percent']]\n\n# merge naep data with enrollment numbers\nnaep_join_enrollment = enrollment.merge(naep, how='inner', on=['STATE'])\n\n# format state columns to join later\ndistricts['state'] = districts['state'].str.upper()\ndistricts['state'] = districts['state'].str.replace(' ','_')\ndistricts.rename(columns={'state':'STATE'},inplace=True)\n\n# some test scores aren't filled for certain states + demographics, this is meant to fill in the average state score for those\nfor i in naep_join_enrollment.columns.tolist():\n    # top level if check for grade 04 or grade 08\n    if i[:3] == 'G04':\n        # check if reading score or not\n        if i[-4:] == 'DING':\n            naep_join_enrollment[i].fillna(naep_join_enrollment['G04_A_A_READING'],inplace=True)\n        else:\n            naep_join_enrollment[i].fillna(naep_join_enrollment['G04_A_A_MATHEMATICS'],inplace=True)\n    # top level if check for grade 04 or grade 08\n    if i[:3] == 'G08':\n        # check if reading score or not\n        if i[-4:] == 'DING':\n            naep_join_enrollment[i].fillna(naep_join_enrollment['G08_A_A_READING'],inplace=True)\n        else:\n            naep_join_enrollment[i].fillna(naep_join_enrollment['G08_A_A_MATHEMATICS'],inplace=True)","d80be3a6":"# merge districts with naep data\ndist_naep_demo = districts.merge(naep_join_enrollment, how='left', on=['STATE'])\n\n# function to calculate demographic adjusted NAEP scores for each district\ndef calculate_adjusted_naep_score(df):\n    test_types = ['MATHEMATICS','READING']\n    grade_levels = ['08','04']\n    for test in test_types:\n        for grade in grade_levels:\n            if grade == '08':\n                enroll = '05'\n                df['ADJ_GR{}_{}'.format(grade, test)] = df['pct_black\/hispanic']*(df['G{}_HI_A_{}'.format(grade, test)]*(df['G{}_percent_HI'.format(enroll)]\/( df['G{}_percent_HI'.format(enroll)] + df['G{}_percent_BL'.format(enroll)])) \\\n                                                                              + df['G{}_BL_A_{}'.format(grade, test)]*(df['G{}_percent_BL'.format(enroll)]\/( df['G{}_percent_HI'.format(enroll)] + df['G{}_percent_BL'.format(enroll)])))  \\\n               + (1-df['pct_black\/hispanic'])*(df['G{}_AS_A_{}'.format(grade, test)]*(df['G{}_percent_AS'.format(enroll)]\/(1-(df['G{}_percent_HI'.format(enroll)] + df['G{}_percent_BL'.format(enroll)]))) + \\\n                                               df['G{}_AM_A_{}'.format(grade, test)]*(df['G{}_percent_AM'.format(enroll)]\/(1-(df['G{}_percent_HI'.format(enroll)] + df['G{}_percent_BL'.format(enroll)]))) + \\\n                                             df['G{}_WH_A_{}'.format(grade, test)]*(df['G{}_percent_WH'.format(enroll)]\/(1-(df['G{}_percent_HI'.format(enroll)] + df['G{}_percent_BL'.format(enroll)]))) + \\\n                                             df['G{}_HP_A_{}'.format(grade, test)]*(df['G{}_percent_HP'.format(enroll)]\/(1-(df['G{}_percent_HI'.format(enroll)] + df['G{}_percent_BL'.format(enroll)]))) + \\\n                                             df['G{}_TR_A_{}'.format(grade, test)]*(df['G{}_percent_TR'.format(enroll)]\/(1-(df['G{}_percent_HI'.format(enroll)] + df['G{}_percent_BL'.format(enroll)]))) )\n            else:\n                enroll = '01'\n                df['ADJ_GR{}_{}'.format(grade, test)] = df['pct_black\/hispanic']*(df['G{}_HI_A_{}'.format(grade, test)]*(df['G{}_percent_HI'.format(enroll)]\/( df['G{}_percent_HI'.format(enroll)] + df['G{}_percent_BL'.format(enroll)])) \\\n                                                                              + df['G{}_BL_A_{}'.format(grade, test)]*(df['G{}_percent_BL'.format(enroll)]\/( df['G{}_percent_HI'.format(enroll)] + df['G{}_percent_BL'.format(enroll)])))  \\\n               + (1-df['pct_black\/hispanic'])*(df['G{}_AS_A_{}'.format(grade, test)]*(df['G{}_percent_AS'.format(enroll)]\/(1-(df['G{}_percent_HI'.format(enroll)] + df['G{}_percent_BL'.format(enroll)]))) + \\\n                                               df['G{}_AM_A_{}'.format(grade, test)]*(df['G{}_percent_AM'.format(enroll)]\/(1-(df['G{}_percent_HI'.format(enroll)] + df['G{}_percent_BL'.format(enroll)]))) + \\\n                                             df['G{}_WH_A_{}'.format(grade, test)]*(df['G{}_percent_WH'.format(enroll)]\/(1-(df['G{}_percent_HI'.format(enroll)] + df['G{}_percent_BL'.format(enroll)]))) + \\\n                                             df['G{}_HP_A_{}'.format(grade, test)]*(df['G{}_percent_HP'.format(enroll)]\/(1-(df['G{}_percent_HI'.format(enroll)] + df['G{}_percent_BL'.format(enroll)]))) + \\\n                                             df['G{}_TR_A_{}'.format(grade, test)]*(df['G{}_percent_TR'.format(enroll)]\/(1-(df['G{}_percent_HI'.format(enroll)] + df['G{}_percent_BL'.format(enroll)]))) )\n            \n    return df\n    \ndist_naep_demo = calculate_adjusted_naep_score(dist_naep_demo)\n\n# drop all districts in which the state is not known\ndist_naep_demo = dist_naep_demo[dist_naep_demo['STATE'].notna()]","9f757564":"dist_naep_demo.shape","edf232e5":"import plotly.graph_objects as go\n\nimport pandas as pd\n\nus_state_to_abbrev = {\n    \"Alabama\": \"AL\",\n    \"Alaska\": \"AK\",\n    \"Arizona\": \"AZ\",\n    \"Arkansas\": \"AR\",\n    \"California\": \"CA\",\n    \"Colorado\": \"CO\",\n    \"Connecticut\": \"CT\",\n    \"Delaware\": \"DE\",\n    \"Florida\": \"FL\",\n    \"Georgia\": \"GA\",\n    \"Hawaii\": \"HI\",\n    \"Idaho\": \"ID\",\n    \"Illinois\": \"IL\",\n    \"Indiana\": \"IN\",\n    \"Iowa\": \"IA\",\n    \"Kansas\": \"KS\",\n    \"Kentucky\": \"KY\",\n    \"Louisiana\": \"LA\",\n    \"Maine\": \"ME\",\n    \"Maryland\": \"MD\",\n    \"Massachusetts\": \"MA\",\n    \"Michigan\": \"MI\",\n    \"Minnesota\": \"MN\",\n    \"Mississippi\": \"MS\",\n    \"Missouri\": \"MO\",\n    \"Montana\": \"MT\",\n    \"Nebraska\": \"NE\",\n    \"Nevada\": \"NV\",\n    \"New Hampshire\": \"NH\",\n    \"New Jersey\": \"NJ\",\n    \"New Mexico\": \"NM\",\n    \"New York\": \"NY\",\n    \"North Carolina\": \"NC\",\n    \"North Dakota\": \"ND\",\n    \"Ohio\": \"OH\",\n    \"Oklahoma\": \"OK\",\n    \"Oregon\": \"OR\",\n    \"Pennsylvania\": \"PA\",\n    \"Rhode Island\": \"RI\",\n    \"South Carolina\": \"SC\",\n    \"South Dakota\": \"SD\",\n    \"Tennessee\": \"TN\",\n    \"Texas\": \"TX\",\n    \"Utah\": \"UT\",\n    \"Vermont\": \"VT\",\n    \"Virginia\": \"VA\",\n    \"Washington\": \"WA\",\n    \"West Virginia\": \"WV\",\n    \"Wisconsin\": \"WI\",\n    \"Wyoming\": \"WY\",\n    \"District of Columbia\": \"DC\",\n    \"American Samoa\": \"AS\",\n    \"Guam\": \"GU\",\n    \"Northern Mariana Islands\": \"MP\",\n    \"Puerto Rico\": \"PR\",\n    \"United States Minor Outlying Islands\": \"UM\",\n    \"U.S. Virgin Islands\": \"VI\",\n}\ncodes = {}\nfor i in us_state_to_abbrev:\n    codes[i.upper()] = us_state_to_abbrev[i]\n\ndf = dist_naep_demo.groupby('STATE')['ADJ_GR08_MATHEMATICS'].mean().reset_index()\ndf['STATE'] = df['STATE'].map(codes)\n\nfig = go.Figure(data=go.Choropleth(\n    locations=df['STATE'], # Spatial coordinates\n    z = df['ADJ_GR08_MATHEMATICS'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Reds',\n    colorbar_title = \"Average Math NAEP Score\",\n))\n\nfig.update_layout(\n    title_text = 'Adjusted Average Math NAEP Score by State',\n    geo_scope='usa', # limite map scope to USA\n    height= 550,\n    width = 900\n)\n\nfig.show()","58918622":"df = dist_naep_demo.groupby('STATE')['district_id'].nunique().reset_index()\ndf['STATE'] = df['STATE'].map(codes)\n\nfig = go.Figure(data=go.Choropleth(\n    locations=df['STATE'], # Spatial coordinates\n    z = df['district_id'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Reds',\n    colorbar_title = \"Number of Districts by State\",\n))\n\nfig.update_layout(\n    title_text = 'Number of Districts by State',\n    geo_scope='usa', # limite map scope to USA\n    height= 550,\n    width = 900\n)\n\nfig.show()","5c727a3f":"# Using plotly express for trendline feature\nfig = px.scatter(\n    dist_naep_demo, \n    x='ADJ_GR08_MATHEMATICS', \n    y='pct_black\/hispanic', \n#     color = 'pp_total_raw',\n    trendline='ols', \n    trendline_color_override= palette_red,\n)\n\nfig.update_traces(marker = dict( color = palette_grey3, size = 12, opacity=0.35, line_width=1.5, line_color= palette_grey2 ), line_dash=\"dash\", line_width=4, showlegend=False)\n\nlarge_title_format = \"<span style='font-size:28px; font-family:Times New Roman'>Adjusted Math NAEP Scores & Percent Black + Hispanic Pupils<\/span>\"\nsmall_title_format = \"<span style='font-size:15px; font-family:Helvetica'>Reading and Math NAEP scores are <b style='color:%s'> slightly negatively correlated<\/b> <\/span>\" % (palette_red)\n        \nlayout = dict(\n    title = large_title_format + \"<br>\" + small_title_format,\n    margin = dict(t=110, b=0),\n    plot_bgcolor='#fff',\n    height= 550,\n    width = 900\n)\n\nfig.update_layout(layout)\nfig.show()","c230b8cb":"# Using plotly express for trendline feature\nfig = px.scatter(\n    dist_naep_demo, \n    x='ADJ_GR08_MATHEMATICS', \n    y='pp_total_raw', \n#     color = 'pp_total_raw',\n    trendline='ols', \n    trendline_color_override= palette_darkgrey,\n)\n\nfig.update_traces(marker = dict( color = palette_grey3, size = 12, opacity=0.35, line_width=1.5, line_color= palette_grey2 ), line_dash=\"dash\", line_width=4, showlegend=False)\n\nlarge_title_format = \"<span style='font-size:28px; font-family:Times New Roman'>Adjusted Math NAEP Scores & District Spending<\/span>\"\nsmall_title_format = \"<span style='font-size:15px; font-family:Helvetica'>Reading and Math NAEP scores are <b style='color:%s'>lightly correlated<\/b> <\/span>\" % (palette_darkgrey)\n        \nlayout = dict(\n    title = large_title_format + \"<br>\" + small_title_format,\n    margin = dict(t=110, b=0),\n    plot_bgcolor='#fff',\n    height= 550,\n    width = 900\n)\n\nfig.update_layout(layout)\nfig.show()","14e5170b":"# Using plotly express for trendline feature\nfig = px.scatter(\n    dist_naep_demo, \n    x='ADJ_GR08_MATHEMATICS', \n    y='ADJ_GR08_READING', \n#     color = 'pp_total_raw',\n    trendline='ols', \n    trendline_color_override= palette_green,\n)\n\nfig.update_traces(marker = dict( color = palette_grey3, size = 12, opacity=0.35, line_width=1.5, line_color= palette_grey2 ), line_dash=\"dash\", line_width=4, showlegend=False)\n\nlarge_title_format = \"<span style='font-size:28px; font-family:Times New Roman'>Adjusted Reading & Math NAEP Scores<\/span>\"\nsmall_title_format = \"<span style='font-size:15px; font-family:Helvetica'>Reading and Math NAEP scores are <b style='color:%s'>highly correlated<\/b> <\/span>\" % (palette_green)\n        \nlayout = dict(\n    title = large_title_format + \"<br>\" + small_title_format,\n    margin = dict(t=110, b=0),\n    plot_bgcolor='#fff',\n    height= 550,\n    width = 900\n)\n\nfig.update_layout(layout)\nfig.show()","4da89fd7":"dist_naep_demo[['ADJ_GR08_MATHEMATICS','ADJ_GR08_READING','ADJ_GR04_MATHEMATICS','ADJ_GR04_READING','pct_black\/hispanic','pct_free\/reduced','pp_total_raw']].corr().style.background_gradient(cmap='Greens')","fde7621c":"# drop not needed columns\ndrop_cols = ['G05_percent_AM',\n 'G05_percent_AS',\n 'G05_percent_HI',\n 'G05_percent_BL',\n 'G05_percent_WH',\n 'G05_percent_HP',\n 'G05_percent_TR',\n 'G01_percent_AM',\n 'G01_percent_AS',\n 'G01_percent_HI',\n 'G01_percent_BL',\n 'G01_percent_WH',\n 'G01_percent_HP',\n 'G01_percent_TR',\n 'PRIMARY_KEY',\n 'YEAR',\n 'G04_A_A_READING',\n 'G04_A_A_MATHEMATICS',\n 'G04_A_M_READING',\n 'G04_A_M_MATHEMATICS',\n 'G04_A_F_READING',\n 'G04_A_F_MATHEMATICS',\n 'G04_WH_A_READING',\n 'G04_WH_A_MATHEMATICS',\n 'G04_BL_A_READING',\n 'G04_BL_A_MATHEMATICS',\n 'G04_HI_A_READING',\n 'G04_HI_A_MATHEMATICS',\n 'G04_AS_A_READING',\n 'G04_AS_A_MATHEMATICS',\n 'G04_AM_A_READING',\n 'G04_AM_A_MATHEMATICS',\n 'G04_HP_A_READING',\n 'G04_HP_A_MATHEMATICS',\n 'G04_TR_A_READING',\n 'G04_TR_A_MATHEMATICS',\n 'G08_A_A_READING',\n 'G08_A_A_MATHEMATICS',\n 'G08_A_M_READING',\n 'G08_A_M_MATHEMATICS',\n 'G08_A_F_READING',\n 'G08_A_F_MATHEMATICS',\n 'G08_WH_A_READING',\n 'G08_WH_A_MATHEMATICS',\n 'G08_BL_A_READING',\n 'G08_BL_A_MATHEMATICS',\n 'G08_HI_A_READING',\n 'G08_HI_A_MATHEMATICS',\n 'G08_AS_A_READING',\n 'G08_AS_A_MATHEMATICS',\n 'G08_AM_A_READING',\n 'G08_AM_A_MATHEMATICS',\n 'G08_HP_A_READING',\n 'G08_HP_A_MATHEMATICS',\n 'G08_TR_A_READING',\n 'G08_TR_A_MATHEMATICS',\n 'county_connections_ratio',\n 'G05_demo_total_percent',\n 'G01_demo_total_percent',\n 'ADJ_GR04_MATHEMATICS',\n 'ADJ_GR08_READING',\n 'ADJ_GR04_READING']\ndist_naep_demo.drop(columns=drop_cols,inplace=True)\n# function to create groupings from percentile ranks of NAEP test scores\ndef naep_percentile_groupings(x):\n    if x >= 0.8:\n        return ']0.8 - 1.0'\n    elif x < 0.8 and x >= 0.6:\n        return '[0.6 - 0.8['\n    elif x < 0.6 and x >= 0.4:\n        return '[0.4 - 0.6['\n    elif x < 0.4 and x >= 0.2:\n        return '[0.2 - 0.4['\n    elif x <= 0.2:\n        return '0 - 0.2['\n    else:\n        return 'other'\n# create rank of percentiles\ndist_naep_demo['ADJ_GR08_MATHEMATICS_percentile'] = dist_naep_demo['ADJ_GR08_MATHEMATICS'].rank(pct = True)\n# percentile groupings\ndist_naep_demo['ADJ_GR08_MATHEMATICS_percentile_groups'] = dist_naep_demo['ADJ_GR08_MATHEMATICS_percentile'].apply(naep_percentile_groupings)","e4f56c88":"dist_naep_demo.groupby('ADJ_GR08_MATHEMATICS_percentile_groups')['ADJ_GR08_MATHEMATICS'].mean().reset_index().style.background_gradient(cmap='Greens')","8c839823":"dist_naep_demo.groupby('ADJ_GR08_MATHEMATICS_percentile_groups')['district_id'].nunique().reset_index().style.background_gradient(cmap='Greens')","1c00b792":"df = dist_naep_demo[dist_naep_demo['ADJ_GR08_MATHEMATICS_percentile_groups']==']0.8 - 1.0'].groupby(['STATE'])['district_id'].nunique().reset_index()\ndf['STATE'] = df['STATE'].map(codes)\n\nfig = go.Figure(data=go.Choropleth(\n    locations=df['STATE'], # Spatial coordinates\n    z = df['district_id'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Reds',\n    colorbar_title = \"Number of Districts by State\",\n))\n\nfig.update_layout(\n    title_text = '80th to 100th percentile test score districts',\n    geo_scope='usa', # limite map scope to USA\n    height= 550,\n    width = 900\n)\n\nfig.show()","026845db":"df = dist_naep_demo[dist_naep_demo['ADJ_GR08_MATHEMATICS_percentile_groups']=='[0.6 - 0.8['].groupby(['STATE'])['district_id'].nunique().reset_index()\ndf['STATE'] = df['STATE'].map(codes)\n\nfig = go.Figure(data=go.Choropleth(\n    locations=df['STATE'], # Spatial coordinates\n    z = df['district_id'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Reds',\n    colorbar_title = 'Number of Districts by State',\n))\n\nfig.update_layout(\n    title_text = '60th to 80th percentile test score districts',\n    geo_scope='usa', # limite map scope to USA\n    height= 550,\n    width = 900\n)\n\nfig.show()","56691bf0":"df = dist_naep_demo[dist_naep_demo['ADJ_GR08_MATHEMATICS_percentile_groups']=='[0.4 - 0.6['].groupby(['STATE'])['district_id'].nunique().reset_index()\ndf['STATE'] = df['STATE'].map(codes)\n\nfig = go.Figure(data=go.Choropleth(\n    locations=df['STATE'], # Spatial coordinates\n    z = df['district_id'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Reds',\n    colorbar_title = 'Number of Districts by State',\n))\n\nfig.update_layout(\n    title_text = '40th to 60th percentile test score districts',\n    geo_scope='usa', # limite map scope to USA\n    height= 550,\n    width = 900\n)\n\nfig.show()","98e61c0d":"df = dist_naep_demo[dist_naep_demo['ADJ_GR08_MATHEMATICS_percentile_groups']=='[0.2 - 0.4['].groupby(['STATE'])['district_id'].nunique().reset_index()\ndf['STATE'] = df['STATE'].map(codes)\n\nfig = go.Figure(data=go.Choropleth(\n    locations=df['STATE'], # Spatial coordinates\n    z = df['district_id'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Reds',\n    colorbar_title = 'Number of Districts by State',\n))\n\nfig.update_layout(\n    title_text = '20th to 40th percentile test score districts',\n    geo_scope='usa', # limite map scope to USA\n    height= 550,\n    width = 900\n)\n\nfig.show()","9cb799c8":"df = dist_naep_demo[dist_naep_demo['ADJ_GR08_MATHEMATICS_percentile_groups']=='0 - 0.2['].groupby(['STATE'])['district_id'].nunique().reset_index()\ndf['STATE'] = df['STATE'].map(codes)\n\nfig = go.Figure(data=go.Choropleth(\n    locations=df['STATE'], # Spatial coordinates\n    z = df['district_id'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Reds',\n    colorbar_title = 'Number of Districts by State',\n))\n\nfig.update_layout(\n    title_text = '0th to 20th percentile test score districts',\n    geo_scope='usa', # limite map scope to USA\n    height= 550,\n    width = 900\n)\n\nfig.show()","0c5b5acf":"# change datatype for join\nengagement['district_id'] = engagement['district_id'].astype(int)\n\n# join all engagement data with matches in the district and NAEP test scores\nengagement_districts = pd.merge(engagement, dist_naep_demo, how='left', on=['district_id'])\n\n# join products with engagement + district\/NAEP data\nengagement_districts_products = pd.merge(engagement_districts, products, how=\"left\", left_on=\"lp_id\", right_on=\"LP ID\")","091c3af9":"# credit goes to https:\/\/www.kaggle.com\/spitfire2nd\/the-learning-gap for the code for these visuals\n'''\nfunction annotation_helper(...)\n\nHelper for annotations in plotly, while reducing the amount of code in the block, it also:\n- Allows us to provide the text into an array of \n  strings(one for each new line) instead of one really long <br> separated text param\n- Provides basic functionality for line spacing(s) between each line\n'''\n\ndef annotation_helper(fig, texts, x, y, line_spacing, align=\"left\", bgcolor=\"rgba(0,0,0,0)\", borderpad=0, ref=\"axes\", width=100):\n    \n    is_line_spacing_list = isinstance(line_spacing, list)\n    total_spacing = 0\n    \n    for index, text in enumerate(texts):\n        if is_line_spacing_list and index!= len(line_spacing):\n            current_line_spacing = line_spacing[index]\n        elif not is_line_spacing_list:\n            current_line_spacing = line_spacing\n        \n        fig.add_annotation(dict(\n            x= x,\n            y= y - total_spacing,\n            width = width,\n            showarrow=False,\n            text= text,\n            bgcolor= bgcolor,\n            align= align,\n            borderpad=4,\n            xref= \"x\" if ref==\"axes\" else \"paper\",\n            yref= \"y\" if ref==\"axes\" else \"paper\"\n        ))\n        \n        total_spacing  += current_line_spacing","52542390":"engagement_naep = engagement_districts_products.groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 900,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2020, 11, 20), 380, [25], width=200)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 150, [25])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>Test Score Group<\/b>\" % (palette_darkgrey),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 400, [25,25,25,25,25], width=120, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Engagement Index Grouped by NAEP Score<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 420, [35], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Do districts with higher test scores have higher engagement?<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> have higher engagement than <b style='color:%s'>districts with lower test scores<\/b>. <\/span>\"\"\" % (palette_green,palette_red) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=700)\n\nfig.show()","eb74e140":"pivot_engagement_naep = engagement_naep.pivot(index='time', columns='ADJ_GR08_MATHEMATICS_percentile_groups',values=['engagement_index'])\npercent_greater_than = pd.DataFrame({'Test Score Group':['80-100%','60-80%','40-60%','20-40%'] ,\n             'Percent of Days with greater engagement than lower scoring test groups':[\n                 100*sum((pivot_engagement_naep[('engagement_index', ']0.8 - 1.0')]  > pivot_engagement_naep[('engagement_index',   '0 - 0.2[')]) &\n    (pivot_engagement_naep[('engagement_index', ']0.8 - 1.0')]  > pivot_engagement_naep[('engagement_index',   '[0.2 - 0.4[')]) &\n    (pivot_engagement_naep[('engagement_index', ']0.8 - 1.0')]  > pivot_engagement_naep[('engagement_index',   '[0.4 - 0.6[')]) &\n    (pivot_engagement_naep[('engagement_index', ']0.8 - 1.0')]  > pivot_engagement_naep[('engagement_index',   '[0.6 - 0.8[')]))\/pivot_engagement_naep.shape[0],\n                 100*sum((pivot_engagement_naep[('engagement_index', '[0.6 - 0.8[')]  > pivot_engagement_naep[('engagement_index',   '0 - 0.2[')]) &\n    (pivot_engagement_naep[('engagement_index', '[0.6 - 0.8[')]  > pivot_engagement_naep[('engagement_index',   '[0.2 - 0.4[')]) &\n    (pivot_engagement_naep[('engagement_index', '[0.6 - 0.8[')]  > pivot_engagement_naep[('engagement_index',   '[0.4 - 0.6[')]))\/pivot_engagement_naep.shape[0],\n                 100*sum((pivot_engagement_naep[('engagement_index', '[0.4 - 0.6[')]  > pivot_engagement_naep[('engagement_index',   '0 - 0.2[')]) &\n    (pivot_engagement_naep[('engagement_index', '[0.4 - 0.6[')]  > pivot_engagement_naep[('engagement_index',   '[0.2 - 0.4[')]))\/pivot_engagement_naep.shape[0],\n                 100*sum(pivot_engagement_naep[('engagement_index', '[0.2 - 0.4[')]  > pivot_engagement_naep[('engagement_index',   '0 - 0.2[')])\/pivot_engagement_naep.shape[0]\n             ]})\npercent_greater_than.style.background_gradient(cmap='Greens')","ccab861f":"engagement_naep = engagement_districts_products[engagement_districts_products['URL'].notna()].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 900,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 20), 440, [25], width=100)\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 150, [25,30])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2020, 11, 5), 175, [25,25,25,25], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Engagement Index Grouped by NAEP Score<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 520, [35], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Do districts with higher test scores have higher engagement<\/span>\",\n    \"<span style='font-size:26px; font-family:Times New Roman;'>with the 372 most used products?<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> have higher engagement than <b style='color:%s'>districts with lower test scores<\/b>. <\/span>\"\"\" % (palette_green,palette_red) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.08,0.1,0.055], ref=\"paper\", width=700)\n\nfig.show()","8c204282":"pivot_engagement_naep = engagement_naep.pivot(index='time', columns='ADJ_GR08_MATHEMATICS_percentile_groups',values=['engagement_index'])\npercent_greater_than = pd.DataFrame({'Test Score Group':['80-100%','60-80%','40-60%','20-40%'] ,\n             'Percent of Days with greater engagement than lower scoring test groups':[\n                 100*sum((pivot_engagement_naep[('engagement_index', ']0.8 - 1.0')]  > pivot_engagement_naep[('engagement_index',   '0 - 0.2[')]) &\n    (pivot_engagement_naep[('engagement_index', ']0.8 - 1.0')]  > pivot_engagement_naep[('engagement_index',   '[0.2 - 0.4[')]) &\n    (pivot_engagement_naep[('engagement_index', ']0.8 - 1.0')]  > pivot_engagement_naep[('engagement_index',   '[0.4 - 0.6[')]) &\n    (pivot_engagement_naep[('engagement_index', ']0.8 - 1.0')]  > pivot_engagement_naep[('engagement_index',   '[0.6 - 0.8[')]))\/pivot_engagement_naep.shape[0],\n                 100*sum((pivot_engagement_naep[('engagement_index', '[0.6 - 0.8[')]  > pivot_engagement_naep[('engagement_index',   '0 - 0.2[')]) &\n    (pivot_engagement_naep[('engagement_index', '[0.6 - 0.8[')]  > pivot_engagement_naep[('engagement_index',   '[0.2 - 0.4[')]) &\n    (pivot_engagement_naep[('engagement_index', '[0.6 - 0.8[')]  > pivot_engagement_naep[('engagement_index',   '[0.4 - 0.6[')]))\/pivot_engagement_naep.shape[0],\n                 100*sum((pivot_engagement_naep[('engagement_index', '[0.4 - 0.6[')]  > pivot_engagement_naep[('engagement_index',   '0 - 0.2[')]) &\n    (pivot_engagement_naep[('engagement_index', '[0.4 - 0.6[')]  > pivot_engagement_naep[('engagement_index',   '[0.2 - 0.4[')]))\/pivot_engagement_naep.shape[0],\n                 100*sum(pivot_engagement_naep[('engagement_index', '[0.2 - 0.4[')]  > pivot_engagement_naep[('engagement_index',   '0 - 0.2[')])\/pivot_engagement_naep.shape[0]\n             ]})\npercent_greater_than.style.background_gradient(cmap='Greens')","e0b1ee8c":"engagement_naep = engagement_districts_products[engagement_districts_products['URL'].notna()].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"URL\"].nunique().reset_index()\n\nmoving_average_window = 7;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 900,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"URL\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"URL\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"URL\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"URL\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"URL\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 20), 350, [5], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 300, [5])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2020, 11, 5), 320, [5,5,5,5], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Unique Products Grouped by NAEP Score<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>7 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 380, [5], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Do districts with higher test scores use more or less products?<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> use a similar amount of products as <b style='color:%s'>districts with lower test scores<\/b>. <\/span>\"\"\" % (palette_green,palette_red) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=700)\n\nfig.show()","e9f5f027":"products['Primary Essential Function'].value_counts().reset_index().style.background_gradient(cmap='Greens')","ce172a64":"products[products['Primary Essential Function']=='LC - Career Planning & Job Search']['URL'].tolist()","2a69d10d":"engagement_naep = engagement_districts_products[engagement_districts_products['Primary Essential Function']=='LC - Career Planning & Job Search'].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 1000,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 20), 100, [10], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 50, [10])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 170, [10,10,10,10], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Engagement of Grouped by NAEP Score<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 150, [10], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Districts with higher test scores investigate career opportunities<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> engage more with career related URLs <\/span>\"\"\" % (palette_green) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\nfig.show()","6db9d552":"pivot_engagement_naep = engagement_naep.pivot(index='time', columns='ADJ_GR08_MATHEMATICS_percentile_groups',values=['engagement_index'])\npercent_greater_than = pd.DataFrame({'Test Score Group':['80-100%','60-80%','40-60%','20-40%'] ,\n             'Percent of Days with greater engagement than lower scoring test groups':[\n                 100*sum((pivot_engagement_naep[('engagement_index', ']0.8 - 1.0')]  > pivot_engagement_naep[('engagement_index',   '0 - 0.2[')]) &\n    (pivot_engagement_naep[('engagement_index', ']0.8 - 1.0')]  > pivot_engagement_naep[('engagement_index',   '[0.2 - 0.4[')]) &\n    (pivot_engagement_naep[('engagement_index', ']0.8 - 1.0')]  > pivot_engagement_naep[('engagement_index',   '[0.4 - 0.6[')]) &\n    (pivot_engagement_naep[('engagement_index', ']0.8 - 1.0')]  > pivot_engagement_naep[('engagement_index',   '[0.6 - 0.8[')]))\/pivot_engagement_naep.shape[0],\n                 100*sum((pivot_engagement_naep[('engagement_index', '[0.6 - 0.8[')]  > pivot_engagement_naep[('engagement_index',   '0 - 0.2[')]) &\n    (pivot_engagement_naep[('engagement_index', '[0.6 - 0.8[')]  > pivot_engagement_naep[('engagement_index',   '[0.2 - 0.4[')]) &\n    (pivot_engagement_naep[('engagement_index', '[0.6 - 0.8[')]  > pivot_engagement_naep[('engagement_index',   '[0.4 - 0.6[')]))\/pivot_engagement_naep.shape[0],\n                 100*sum((pivot_engagement_naep[('engagement_index', '[0.4 - 0.6[')]  > pivot_engagement_naep[('engagement_index',   '0 - 0.2[')]) &\n    (pivot_engagement_naep[('engagement_index', '[0.4 - 0.6[')]  > pivot_engagement_naep[('engagement_index',   '[0.2 - 0.4[')]))\/pivot_engagement_naep.shape[0],\n                 100*sum(pivot_engagement_naep[('engagement_index', '[0.2 - 0.4[')]  > pivot_engagement_naep[('engagement_index',   '0 - 0.2[')])\/pivot_engagement_naep.shape[0]\n             ]})\npercent_greater_than.style.background_gradient(cmap='Greens')","4c3d3539":"engagement_naep = engagement_districts_products[engagement_districts_products['Primary Essential Function']=='LC - Career Planning & Job Search'].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"pct_access\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 900,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 20), 0.3, [0.05], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 0.01, [0.05])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 5), 0.6, [0.04,0.04,0.04,0.04], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Percent Access of Grouped by NAEP Score<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 0.6, [0.05], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Districts with higher test scores access career URLs more<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> access career related URLs more often <\/span>\"\"\" % (palette_green) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=700)\n\nfig.show()","57307d2d":"pivot_engagement_naep = engagement_naep.pivot(index='time', columns='ADJ_GR08_MATHEMATICS_percentile_groups',values=['pct_access'])\npercent_greater_than = pd.DataFrame({'Test Score Group':['80-100%','60-80%','40-60%','20-40%'] ,\n             'Percent of Days with greater access than lower scoring test groups':[\n                 100*sum((pivot_engagement_naep[('pct_access', ']0.8 - 1.0')]  > pivot_engagement_naep[('pct_access',   '0 - 0.2[')]) &\n    (pivot_engagement_naep[('pct_access', ']0.8 - 1.0')]  > pivot_engagement_naep[('pct_access',   '[0.2 - 0.4[')]) &\n    (pivot_engagement_naep[('pct_access', ']0.8 - 1.0')]  > pivot_engagement_naep[('pct_access',   '[0.4 - 0.6[')]) &\n    (pivot_engagement_naep[('pct_access', ']0.8 - 1.0')]  > pivot_engagement_naep[('pct_access',   '[0.6 - 0.8[')]))\/pivot_engagement_naep.shape[0],\n                 100*sum((pivot_engagement_naep[('pct_access', '[0.6 - 0.8[')]  > pivot_engagement_naep[('pct_access',   '0 - 0.2[')]) &\n    (pivot_engagement_naep[('pct_access', '[0.6 - 0.8[')]  > pivot_engagement_naep[('pct_access',   '[0.2 - 0.4[')]) &\n    (pivot_engagement_naep[('pct_access', '[0.6 - 0.8[')]  > pivot_engagement_naep[('pct_access',   '[0.4 - 0.6[')]))\/pivot_engagement_naep.shape[0],\n                 100*sum((pivot_engagement_naep[('pct_access', '[0.4 - 0.6[')]  > pivot_engagement_naep[('pct_access',   '0 - 0.2[')]) &\n    (pivot_engagement_naep[('pct_access', '[0.4 - 0.6[')]  > pivot_engagement_naep[('pct_access',   '[0.2 - 0.4[')]))\/pivot_engagement_naep.shape[0],\n                 100*sum(pivot_engagement_naep[('pct_access', '[0.2 - 0.4[')]  > pivot_engagement_naep[('pct_access',   '0 - 0.2[')])\/pivot_engagement_naep.shape[0]\n             ]})\npercent_greater_than.style.background_gradient(cmap='Greens')","027a1312":"engagement_naep = engagement_districts_products[engagement_districts_products['URL']=='http:\/\/www.linkedin.com'].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 1000,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 20), 10, [1], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 1, [1])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 20, [1,1,1,1], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Engagement on Linkedin by NAEP Score<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 20, [1], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Linkedin: Engagement<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> engage more with Linkedin <\/span>\"\"\" % (palette_green) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\nfig.show()","63e2396c":"engagement_naep = engagement_districts_products[engagement_districts_products['URL']=='http:\/\/www.linkedin.com'].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"pct_access\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 900,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 20), 0.1, [0.01], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 0.01, [0.01])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2020, 11, 5), 0.15, [0.01,0.01,0.01,0.01], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Percent Access of Grouped by NAEP Score<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 0.15, [0.01], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Linkedin: Percent Access<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> access Linkedin more often <\/span>\"\"\" % (palette_green) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=700)\n\nfig.show()","eb884a6b":"engagement_naep = engagement_districts_products[engagement_districts_products['URL']=='https:\/\/www.commonapp.org\/'].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 1000,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 20), 100, [15], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 10, [15])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 225, [15,15,15,15], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Engagement on Commonapp by NAEP Score<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 200, [25], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Commonapp: Engagement<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> engage more with Commonapp <\/span>\"\"\" % (palette_green) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\nfig.show()","fdc80169":"engagement_naep = engagement_districts_products[engagement_districts_products['URL']=='https:\/\/www.commonapp.org\/'].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"pct_access\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 900,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 20), 0.3, [0.05], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 0.1, [0.05])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 5), 0.6, [0.05,0.05,0.05,0.05], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Percent Access of Commonapp by NAEP Score<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 0.6, [0.04], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Commonapp: Percent Access<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> access Commonapp more often <\/span>\"\"\" % (palette_green) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=700)\n\nfig.show()","4e9f04a3":"products[products['Primary Essential Function']=='LC - Sites, Resources & Reference - Encyclopedia']","0b9a4a92":"engagement_naep = engagement_districts_products[engagement_districts_products['Primary Essential Function']=='LC - Sites, Resources & Reference - Encyclopedia'].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 1000,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 50, [10], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 20, [10])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 175, [15,15,15,15], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Encyclopedia Engagement of Grouped by NAEP Score<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 220, [10], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Encyclopedia: Engagement<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> utilize encyclopedia resources more often <\/span>\"\"\" % (palette_green) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\nfig.show()","b10b28ab":"engagement_naep = engagement_districts_products[engagement_districts_products['Primary Essential Function']=='LC - Sites, Resources & Reference - Encyclopedia'].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"pct_access\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 900,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 0.6, [0.1], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 0.1, [0.1])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 5), 1.4, [0.1,0.1,0.1,0.1], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Percent Access Encyclopedia by NAEP Score<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 1.5, [0.1], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Encyclopedia: Percent Access<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> utilize encyclopedia resources more often <\/span>\"\"\" % (palette_green) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=700)\n\nfig.show()","186d8d2f":"engagement_naep = engagement_districts_products[engagement_districts_products['URL']=='http:\/\/www.wikipedia.org\/'].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 1000,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 100, [15], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 10, [15])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 225, [25,25,25,25], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Engagement on Wikipedia by NAEP Score<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 370, [20], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Wikipedia: Engagement<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> engage more with Wikipedia <\/span>\"\"\" % (palette_green) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\nfig.show()","b93d6444":"engagement_naep = engagement_districts_products[engagement_districts_products['URL']=='http:\/\/www.wikipedia.org\/'].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"pct_access\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 900,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 5), 0.6, [0.2], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 5), 0.1, [0.2])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 5), 2.5, [0.25,0.25,0.25,0.25], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Percent Access Wikipedia by NAEP Score<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 3.5, [0.2], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Wikipedia: Percent Access<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> utilize wikipedia resources more often <\/span>\"\"\" % (palette_green) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=700)\n\nfig.show()","20d2cbf2":"products[products['Primary Essential Function']=='LC - Sites, Resources & Reference - Thesaurus & Dictionary']","fd7e8833":"engagement_naep = engagement_districts_products[engagement_districts_products['Primary Essential Function']=='LC - Sites, Resources & Reference - Thesaurus & Dictionary'].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 1000,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 50, [5], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 20, [5])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 125, [15,15,15,15], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Dictionary\/Thesaurus Engagement <\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 125, [10], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Dictionary\/Thesaurus: Engagement<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> utilize Dictionary\/Thesaurus resources more often <\/span>\"\"\" % (palette_green) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\nfig.show()","a4132443":"engagement_naep = engagement_districts_products[engagement_districts_products['Primary Essential Function']=='LC - Sites, Resources & Reference - Thesaurus & Dictionary'].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"pct_access\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 900,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 0.6, [0.1], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 0.1, [0.1])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2020, 9, 5), 1, [0.1,0.1,0.1,0.1], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Percent Access Dictionary\/Thesaurus<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 1, [0.1], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Dictionary\/Thesaurus: Percent Access<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> utilize Dictionary\/Thesaurus resources more often <\/span>\"\"\" % (palette_green) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=700)\n\nfig.show()","dc449b2b":"products[products['LP ID'].isin([57724,73323])]","72d84f77":"engagement_naep = engagement_districts_products[engagement_districts_products['LP ID'].isin([57724,73323])].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 1000,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 50, [5], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 20, [5])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 125, [15,15,15,15], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Plagiarism Detection Engagement <\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 175, [10], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Plagiarism Detection: Engagement<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with worse test scores<\/b> do not engage with plagiarism detection products resources as often <\/span>\"\"\" % (palette_red) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\nfig.show()","14d65718":"engagement_naep = engagement_districts_products[engagement_districts_products['LP ID'].isin([57724,73323])].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"pct_access\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 900,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 0.6, [0.05], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 0.1, [0.05])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2020, 9, 5), 1, [0.05,0.05,0.05,0.05], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Percent Access Plagiarism Detection<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 1, [0.05], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Plagiarism Detection: Percent Access<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with worse test scores<\/b> do not engage with plagiarism detection products resources as often <\/span>\"\"\" % (palette_red) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=700)\n\nfig.show()","8726afcd":"products[products['LP ID'].isin([95731,99916])]","f50c4afc":"engagement_naep = engagement_districts_products[engagement_districts_products['LP ID'].isin([95731,99916])].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 1000,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 6000, [750], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 2000, [750])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 15000, [950,950,950,950], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Google docs\/drive Engagement <\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 16000, [750], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Google Docs\/Drive: Engagement<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with worse test scores<\/b> do not engage with google docs or drive as often <\/span>\"\"\" % (palette_red) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\nfig.show()","01400b27":"engagement_naep = engagement_districts_products[engagement_districts_products['LP ID'].isin([95731,99916])].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"pct_access\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 900,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"pct_access\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 15, [2], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 5, [2])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2020, 7, 25), 25, [2,2,2,2], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Percent Access Google Docs\/Drive<\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 27, [1], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Google Docs\/Drive: Percent Access<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with worse test scores<\/b> do not engage with google docs\/drive as often <\/span>\"\"\" % (palette_red) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=700)\n\nfig.show()","45c3a165":"products[products['LP ID'].isin([18090,32555])]","41e32b34":"engagement_naep = engagement_districts_products[engagement_districts_products['LP ID'].isin([18090])].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 1000,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 5, [1], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 1, [1])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 10, [1,1,1,1], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Minecraft Engagement <\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 10, [1], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Minecraft: Engagement<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>Districts with better test scores<\/b> have high engagement with minecraft <\/span>\"\"\" % (palette_green) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\nfig.show()","1e9517e8":"engagement_naep = engagement_districts_products[engagement_districts_products['LP ID'].isin([32555])].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 1000,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 12), 1.5, [0.2], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 12), 0.5, [0.2])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 12), 3, [0.2,0.2,0.2,0.2], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Among Us Engagement <\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 11, 15), 3, [0.2], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Among Us: Engagement<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>There is no clear trend<\/b> both low and high scoring districts have high engagement with Among Us <\/span>\"\"\" % (palette_darkgrey) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\nfig.show()","214b9adf":"products[products['LP ID'].isin([13983,36859])]","2b35fd31":"engagement_naep = engagement_districts_products[engagement_districts_products['LP ID'].isin([13983])].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 1000,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 12), 55, [3], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 12), 50, [3])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 12), 80, [4,4,4,4], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Facebook Engagement <\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 9, 15), 80, [3], width=350)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'>Facebook: Engagement<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>There is no clear trend<\/b> both low and high scoring districts have high engagement with Facebook <\/span>\"\"\" % (palette_darkgrey) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\nfig.show()","131a6e7b":"engagement_naep = engagement_districts_products[engagement_districts_products['LP ID'].isin([36859])].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 1000,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 12), 600, [50], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 12), 200, [50])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 12), 1000, [50,50,50,50], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Instagram Engagement <\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 9, 15), 800, [50], width=350)\n\n\n# # title annotation\n# text = [\n#     \"<span style='font-size:26px; font-family:Times New Roman;'>Instagram: Engagement<\/span>\", \n#     \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>There is no clear trend<\/b> both low and high scoring districts have high engagement with Instagram <\/span>\"\"\" % (palette_darkgrey) \n    \n# ]\n\n# annotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'> I nstagram: Engagement<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>There is no clear trend<\/b>  <\/span>\"\"\" % (palette_darkgrey) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\nfig.show()","f087bb3f":"products[products['LP ID'].isin([90153,61292,36620])]","876bc9fb":"engagement_naep = engagement_districts_products[engagement_districts_products['LP ID'].isin([61292])].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 1000,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 12), 2000, [400], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 12), 4000, [400])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 12), 7000, [400,400,400,400], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average YouTube Engagement <\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 8, 15), 5000, [400], width=350)\n\n\n# # title annotation\n# text = [\n#     \"<span style='font-size:26px; font-family:Times New Roman;'>Instagram: Engagement<\/span>\", \n#     \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>There is no clear trend<\/b> both low and high scoring districts have high engagement with Instagram <\/span>\"\"\" % (palette_darkgrey) \n    \n# ]\n\n# annotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'> YouTube: Engagement<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>There is no clear trend<\/b> but it looks like poor performing districts spend a lot of time on youtube.  <\/span>\"\"\" % (palette_darkgrey) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\nfig.show()","6ea54fd9":"engagement_naep = engagement_districts_products[engagement_districts_products['LP ID'].isin([90153])].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 1000,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 150, [20], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 50, [20])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 12), 300, [20,20,20,20], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average Netflix Engagement <\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 300, [20], width=350)\n\n\n# # title annotation\n# text = [\n#     \"<span style='font-size:26px; font-family:Times New Roman;'>Instagram: Engagement<\/span>\", \n#     \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>There is no clear trend<\/b> both low and high scoring districts have high engagement with Instagram <\/span>\"\"\" % (palette_darkgrey) \n    \n# ]\n\n# annotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\n\n# title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'> Netflix: Engagement<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>There is no clear trend<\/b>  <\/span>\"\"\" % (palette_darkgrey) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\nfig.show()","d05e4b4a":"engagement_naep = engagement_districts_products[engagement_districts_products['LP ID'].isin([36620])].groupby([\"ADJ_GR08_MATHEMATICS_percentile_groups\",\"time\"])[\"engagement_index\"].mean().reset_index()\n\nmoving_average_window = 14;\n\nlayout = dict(\n    margin = dict(t=150),\n    xaxis = dict(showline=True, linewidth=1, linecolor=palette_darkgrey, dtick=\"M1\",tickformat=\"%b\\n%Y\"),\n    yaxis = dict(showline=False, showgrid=True, gridwidth=1, gridcolor='#ddd', linecolor=palette_darkgrey),\n    showlegend = False,\n    hovermode=\"x unified\",\n    width = 1000,\n    height = 600,\n    plot_bgcolor= \"#fff\",\n    hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=12\n    )\n)\n\nfig = go.Figure(layout=layout)\n\nengagement_high_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"]0.8 - 1.0\"]\n\nfig.add_trace(go.Scatter(\n                    x=engagement_high_naep[\"time\"], \n                    y= engagement_high_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_green, width=3),\n                    name='     80-100%'))\n\nengagement_low_naep= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]==\"0 - 0.2[\"]\nfig.add_trace(go.Scatter(\n                    x=engagement_low_naep[\"time\"], \n                    y= engagement_low_naep[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_red, width=1.5),\n                    name='  0-20%'))\n\n\nengagement_02_04= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.2 - 0.4[']\nfig.add_trace(go.Scatter(\n                    x=engagement_02_04[\"time\"], \n                    y= engagement_02_04[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey4, width=1.5),\n                    name='  20-40%'))\n\nengagement_04_06= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.4 - 0.6[']\nfig.add_trace(go.Scatter(\n                    x=engagement_04_06[\"time\"], \n                    y= engagement_04_06[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey3, width=1.5),\n                    name='  40-60%'))\n\nengagement_06_08= engagement_naep[engagement_naep[\"ADJ_GR08_MATHEMATICS_percentile_groups\"]=='[0.6 - 0.8[']\nfig.add_trace(go.Scatter(\n                    x=engagement_06_08[\"time\"], \n                    y= engagement_06_08[\"engagement_index\"].rolling(moving_average_window).mean(),\n                    mode='lines',\n                    line= dict(color=palette_grey2, width=1.5),\n                    name='  60-80%'))\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%% <\/b>\" % (palette_green),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 40, [5], width=100)\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>NAEP Test Score <\/b>\" % (palette_red)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 2, 12), 20, [5])\n\n\ntext = [\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>0-20%%<\/b>\" % (palette_red),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>20-40%%<\/b>\" % (palette_grey4),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>40-60%%<\/b>\" % (palette_grey3),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>60-80%%<\/b>\" % (palette_grey2),\n    \"<b style='color:%s; font-family:Tahoma; font-size:12px'>80-100%%<\/b>\" % (palette_green)\n]\n\nannotation_helper(fig, text, datetime.date(2021, 1, 12), 100, [5,5,5,5], width=60, bgcolor=\"rgba(255,255,255,0.7)\")\n\n\ntext = [\n    \"<span style='color:%s; font-family:Tahoma; font-size:14px'>Average D isney Engagement <\/span>\" % palette_darkgrey,\n    \"<span style='color:%s; font-family:Tahoma; font-size:13px'>14 day moving average<\/span>\" % palette_grey2,\n]\n\nannotation_helper(fig, text, datetime.date(2020, 4, 15), 100, [5], width=350)\n\n\n# # title annotation\ntext = [\n    \"<span style='font-size:26px; font-family:Times New Roman;'> D isney: Engagement<\/span>\", \n    \"\"\"<span style='font-size:13px; font-family:Helvetica'><b style='color:%s'>There is no clear trend<\/b>  <\/span>\"\"\" % (palette_darkgrey) \n    \n]\n\nannotation_helper(fig, text, 0.9, 1.375, [0.12,0.055,0.055], ref=\"paper\", width=800)\n\nfig.show()","dfbdb547":"First we start with youtube","c3b35dcc":"Below: number of districts in each group","3e7a0b91":"There are clearly some trends, specifically with the best performing school districts being located in the northeast. However after that it seems to be a mixed bag with states being represented everywhere in the rest of the buckets, this is probably due to district level differences in demographics and socio-economic status of the pupils located in those districts.\n\nNow, to complete the rest of the analysis we join the district level data with the engagement data and the product data. Our goal from here is to plot the groups of data aggregated and attempt to reveal differences between all of the groupings.\n\nFor the rest of this analysis we will be using the math naep percentile groups that were constructed earlier to extract insights and trends from our data on engagement and usage of online platforms.\n\nWhile socio-economic status is a pervasive issue in the united states, solving problems related to that requires a very long time frame which starts with the pupils of those school districts. Most online learning platforms are free or very low cost and hence are accessible to most students. It is expected that enhancing curriculums and in turn enabling students to use the correct online learning tools will improve outcomes. There is a suspicion that the districts with the best outcomes use online platforms differently and the hope is that the analysis below will prove that.","4d5b34b1":"Again we can very clearly see a trend amongst each group","c32d5da4":"- Linkedin: professional networking\n- naviance: american college and career readiness software \n- commonapp: college application form","0e7dfaed":"Interestingly, here we do not have a perfect trend where the highest scoring group uses plagiarism detection products the most often, but we have a clear trend where the lowest performing districts are almost always using it the least often","dc9e4194":"Given the fact we have adjusted math naep scores, we want to group them into districts with similar outcomes. Hence the districts are divided into 5 groups, based on their adjusted math naep score percentile.\n\nWe group the adjusted NAEP scores into percentile buckets. This is done so it becomes easier to group districts in the subsequent analysis of the districts.\n\n]0.8 - 1.0 is the top 20 percent of scores, [0.6 - 0.8[ is the next 20 percent, and so forth, finally where 0 - 0.2[ is the bottom 20 percent of scores\n\n\nBelow: average NAEP adjusted math score by grouping","d77bd8b8":"- It looks like the best performing students use and engage more often with resources like wikipedia, thesaurses and dictionaries.\n\n- Its possible that worse performing schools are not as aware or know how to utilize free internet resources as well as schools that perform better","762f5215":"# Summary:\n\nThrough the analysis we have uncovered some insights into better performing school districts. along with possible insights and solutions into what may improve student peformance. Below we outline key findings, trends and possible solutions.\n\n- Usage of online learning platforms is up across <b>all school districts<\/b>. Understanding the usage of online learning platforms and how it relates with districts that have the best outcomes <b style='color:#1aab45'>makes this analysis important<\/b>. \n\n- It is unquestionable that districts with <b style='color:#1aab45'>better outcomes have more engaged students<\/b>, while districts with <b style='color:#d32744'> worse outcomes have less engaged students<\/b>. A simple remedy to this may be to introduce a <b>participation grade<\/b> to all classes where one does not exist. The participation portion of the grade can be small, but meaningful, and should be related to students paying attention in class. Various forms of this exist already. Some educators use a 'magic word' in their slides that is used to later collect participation marks. Another fashion of this exists where mini-questions are asked mid lesson to all students and if the question is answered correctly then participation marks are given otherwise half-marks are given for just answering.     \n\n- An interesting finding as well was noticed among the engagement data. <b style='color:#1aab45'>Districts with better outcomes start the year later around the beginning of September<\/b>. Starting the school year in mid to late august may distract students from completing schoolwork as the summer is still going on and students are looking to go outside more instead of studying hard. This effect can be especially pronounced in classes where units build on each other like mathematics. A possible solution to this may be just starting the year right around labour day.\n\n- Another unsuprising finding is that districts with <b style='color:#1aab45'>better outcomes have higher engagement & usage with Career Planning & Job Search URLs<\/b>. While socio-economic issues may dissaude those who are less fortunate from looking towards university, college, or future careers that are possible, its important that all students are aware of the possibilities that exist including potential scholarships. Districts that have poor outcomes may need to think about introducing topics in various classes that force students to think about their future. When I was in high school there was a mandatory class for careers. While this may exist already at many schools, its possible that creating a district-wide career planning class or session every week or month can possibly make students more aware and interested in their futures.\n\n- As expected districts with <b style='color:#1aab45'>better outcomes have higher engagement & usage with FREE online dictionaries, thesauruses, encyclopedias, etc<\/b>. All of these resources are free and usable by any student. All districts should make an effort to educate all students on free resources and how they can find and use them. We need to ensure that students are all capable of accessing free resources!\n\n- Districts that have the <b style='color:#d32744'>worst test outcomes are the least likely to use and be engaged with plagiarism detection services<\/b>. Ensuring academic integrity is incredibly important. Average educators do not have the time to copy and paste excerpts of essays online to catch cheaters when they have 100s of essays left to grade. Utilizing automatic services to detect plagiarism should be the norm. If students are aware that they can get away with cheating it doesn't only make the grades they get unfair but also cheats them out of an education.\n\n- The most interesting finding of the work is that districts that have the <b style='color:#d32744'>worst test outcomes<\/b> do not have students that are mostly distracted online with social media, video games or streaming platforms. While some trends surfaced like on youtube, the 60-80% test score grouping also had similar levels of youtube engagement. This leads us to the conclusion that poorer performing students aren't performing that way due to being distracted online.\n\nWe expect that most of these suggestions should improve student outcomes across the US.\n\nBelow in the analysis we provide evidence for the above recommendations","9ddea14a":"# Encyclopedia Resources\n\nNext we will take a look at another grouping: <b> LC - Sites, Resources & Reference - Encyclopedia <\/b>\n\nHopefully here we can reveal more patterns among the best performing districts","08036012":"# Products Used","8a234efa":"# Google Docs & Drive\n\nFirst we look at google docs and drive. Here we expect the best performing districts to have high usage. The best students are most likely to spend a lot of time interacting with document creation services. Google docs and drive happen to be some of the most popular ones.","94c5fca3":"- As expected, districts with better test outcomes have higher interest in career focused URLs.\n\nHow does this stack up on a day to day basis?","33cd6973":"- There appears to be no clear trend from the engagement with video games\n\nNext we take a look at social media platforms like instagram and facebook:","b3d0c5cf":"- One insight we can notice is that since the pandemic began all groups adopted the use of more online products to supplement their teaching. Which leads us to believe that this analysis has more value than previously anticipated since more districts are all using more products it would make sense that they would want to know which are being adopted for use by the best students and best school districts.\n- There is not a significant difference across each test score group, if you look closely it does seem like less products are used, but its a very small difference of about 5-10 products over a 7 day moving period. Which isn't very much whatsoever\n\nNow lets breakdown the products provided. Within the provided URLs we have 372 different products with different categorical variables.\n\nOne of the fields provided in the 372 most used products is 'Primary Essential Function'. Below we have the counts of the number of products in each grouping. Instead of plotting them all we will take a look at a few that may have a correlation with higher test scores.","9a9c02e8":"- Here it looks like better performing districts engage with instagram more\n\nSince we have covered video games and two of the most popular social media sites, lets take a look at streaming services like: Youtube, netflix and disneyplus.","ff9f5340":"- A much higher proportion of students access and are more engaged with career related URLS","c05ca27b":"- Its very important for schools to utilize whatever resources they can to ensure academic integrity. If integrity is not ensured then students cheat and lose out on learning valuable information.","ba1d73d4":"The top 60-80% group follow very closely to the bottom 20 percentile grouping.\n\nNow lets take a look at the 2 video streaming services that offer episodes and movies, whereas youtube is mostly short clips.\n\nFirst we work with netflix:","0636c8d0":"There seems to be an overlap in some of the middle test score groups, but clearly the best performing districts have much higher engagement and the lowest performing districts have the lowest engagement.","a014da52":"Lets take a look at wikipedia specifically since its a well known tool that many people are familiar with:","537dd311":"- Better performing districts seem to play more minecraft? We would expect that districts that have higher engagement with video games might perform worse\n\nNow lets take a look at among us. Another popular game during 2020. The data was only collected since around the time of october 2020 for among us.","e20463fe":"# Next Steps:\n\n- A fuller analysis without all of the demographic data being obfuscasted would be nice\n- Not sure if possible but maybe learn platform tracks individual students\n- Segmenting activity by grade level would also leading to interesting results","f4c56cdb":"- We affirm our suspicisions across the most used 372 products where the URLs are known.\n- The highest scoring districts have higher engagement for 75% of the year than all of the other test score groups \n\nFor the rest of this analysis we will be focusing on known URLs, as we can better understand from them exactly what better performing school districts are using and how they are using them.\n\nAmong the URLs that are known how many of the 372 products are students actually using?","52cb40de":"Among these there are a few that are interesting groups. The first one that will be looked at is <b>LC - Career Planning & Job Search<\/b>. It should be expected that the better performing school districts have more students engaged and using sites that allow them to investigate career planning and job searches. What are the URLs in that grouping?","a3b53425":"# Distractions:\n\nThe purpose of this section to attempt to understand if worse performing school districts have students that are more distracted than others?\n\nWe analyze in this section social media, video streaming sites and video games.\n\nTwo video games: minecraft and among us clearly pop out from the products list","95f54830":"# References:\n\n1. NAEP information (https:\/\/en.wikipedia.org\/wiki\/National_Assessment_of_Educational_Progress)\n2. Beautiful visualizations: spitfire2nd kaggle notebook (https:\/\/www.kaggle.com\/spitfire2nd\/the-learning-gap\/notebook)","5b833ba1":"# General Engagement","5c3f42e0":"# Plagiarism Detection Products\n\nNext we turn our attention to <b>plagiarism detection products<\/b>. Some districts use tools like turnitin to automatically check for plagiarism. Its possible that poorer performing school districts are less likely to catch students submitting work that is not theirs ","b60fa3b8":"Below: geographic breakdowns on where each group exists","472db977":"# LearnPlatform COVID-19 Impact on Digital Learning\n\nThe purpose of this notebook is to look at simple trends in LearnPlatform usage among school districts that have different outcomes\n\n# Problem Statement:\n\nAs lockdowns began pupils all around the US and the world moved immediately towards online learning platforms to continue their education. With the landscape of education changing overnight school districts had to act quickly to adapt to online-based solutions. Difficulties around utilizing new technologies, lack of face to face learning, social isolation and many other factors contributed to learning loss deeply impact students future outcomes. \n\nLearnPlatform is uniquely positioned to provide analytics, insights, and possible solutions to issues that may arise from the use of online learning platforms. Educators and LearnPlatform alike are interested in optimizing and improving educational outcomes across the nation. With the ability to clearly see activity across school districts LearnPlatform is able to provide insight into what online learning platforms are used and how often they are utilized.While socio-economic inequality clearly remains an important factor in educational outcomes most educational tools on the internet are generally open source and can be purposed by any school district regardless of their economic prosperity. \n\n<b>What actionable insights can we make into the usage of online platforms and how they relate to student outcomes?<\/b>\n\nTo determine district level student outcomes NAEP test scores will be calculated and then grouped into percentile level categories to then complete an analysis of the usage of online platforms.","a193ba56":"- Not an exact trend once again, seems like better performing districts use netflix more throughout the year, while the worser performing districts are using it closer to the average\n\nLast but not least we turn to disneyplus","1fc58604":"# Thesaurus & Dictionary Resources\n\nStudents with better outcomes seem to use encyclopedia resources more effectively\n\nDo they also use thesaurses and dictionary resources more as well? We now look at <b> LC - Sites, Resources & Reference - Thesaurus & Dictionary<\/b>","c7e238db":"Lets look at the specific URLs in the list:\n\nLinkedin: http:\/\/www.linkedin.com","cf7c3c5f":"Now lets look at commonapp, a website for college applications: https:\/\/www.commonapp.org\/\n","8835e233":"- From the above we can determine that the top 80-100% performing school districts have a higher engagement index than all of the other school districts 85% of the time. Which seems to confirm our suspicision that higher engagement correlates to better peformance \n- As expected 80-100% group has more engagement a vast majority of the time, similarly all the other test score groups have more engagement than lower scoring groups below them\n\nHowever the previous graph was for <b>all of the products<\/b> that are tracked and we only have data on the 372 products in the provided file products_info.csv.\n\n<b>If we only filtered for products in which the URL was known does the trend hold?<\/b>","dfae8a8e":"School districts with the best outcomes seem to be in the northeast of the country.","4b335479":"- From inspection this seems to confirm our prior conclusions\n- Again we notice slight differences at the end and start of the year that can be attributed to different times of the year districts begin and end the school year\n\nHow does this stack up on a day to day basis?","82763e29":"Hypothesis: Do districts with higher test scores have higher engagement?\n\n- The graph confirms our suspicision that higher test scoring districts have higher engagement.\n- Slight differences can be observed at the end of august and july where certain school districts start and end the year earlier hence influencing the engagement scores. \n- The top peforming school districts seem to have far and away the highest engagement\n\nThis graph also shows a correlation in when the school year begins and how it relates to student outcomes. It looks like schools that begin in mid-late august have worse outcomes. I believe this can be attributed to the fact starting school while summer is still raging can be a distraction for many students as they may want to enjoy the last bits of the hot weather before the weather cools significantly. This probably leads to worse outcomes in math scores because most of the material builds on previously learned material and if the students fall behind or don't learn the first units well they may struggle as the year continues. \n\nAs per the visual above, our suspicisions are confirmed. But lets try to quantify how often each of the test groups average engagement index is larger than the test groups that perform worse.\n\nBelow we calculate what percent of days in 2020 did a test group have higher engagement than all of the other test groups that score beneath them","eb787e3e":"#  Career Planning & Job Search","56d61119":"Since we want to investigate all of the test scores and it looks like the mathematics and reading scores are incredibly related, lets plot a correlation matrix among some of the district variables that were provided along with the test scores.","ee47398b":"- Clearly we have confirmed that students that perform better engage more often with google docs and drive\n- This begs the question... are worse students distracted?\n\n","0469f1b2":"# NAEP & Districts Data\n\nWe are working here with 176 districts worth of data from the original 233.\n\nBelow we take a look at some geographic level information on the districts we are looking at:\n","cf1d4c0a":"- No clear trend\n- It looks like a pattern is emerging where students aren't being that distracted\n\nWe continue with instagram","11f230e6":"- Nope. Students aren't being very distracted by Disney+\n\nAfter looking at lots of ways in which students can be distracted while learning online it doesn't seem like anything conclusive was found.\n\nHopefully this analysis illuminates that poorer performing districts may not be dealing with problems where students are just distracted by video games, social media or video streaming on their laptop directly. While its possible distractions exist in other facets of their lives, the computer that they are using doesn't seem to indicate that they are distracted.\n\nI hope you enjoyed this analysis and I expect some of the findings here to be of use to LearnPlatform and educators","14a32fc1":"- Students with better outcomes seem to use encyclopedia resources more often ","15ee8957":"- As expected better performing districts have more engagement with career and college application platforms\n- Should be expected that better performing districts have more applications to colleges and universities","e8d4f753":"- As expected, better students spend more time interacting with document creation services\n- Does the same trend for percent access?","7e5676d2":"All of the test scores are over <b style='color:#1aab45'>90% positively correlated<\/b> which is to be expected. Better performing school districts should perform better across the board between reading and mathematics tests across both grade levels.\n\nSince all of the adjusted NAEP scores are <b style='color:#1aab45'>highly positively correlated<\/b> we continue this analysis with only the adjusted grade 8 NAEP mathematics score. ","23c96cbc":"# Analysis:\n\nTo complete this analysis we need to understand which school districts perform better than other school districts. To do this we use NAEP test scores.\n\nThe <b>National Assessment of Educational Progress<\/b> or NAEP for short, is the largest continuing and nationally representative assessment of what U.S. students know and can do in various subjects (1). NAEP is a congressionally mandated project administered by the National Center for Education Statistics (NCES), within the Institute of Education Sciences (IES) of the U.S. Department of Education (1). NAEP uses a sampling procedure that allows the assessment to be representative of the geographical, racial, ethnic, and socioeconomic diversity of the schools and students in the United States (1). State NAEP results are available in some subjects for grades 4 and 8 (1). \n\nLuckily we have 2019 NAEP grade 4 and 8 test scores for mathematics and reading, by race and state. This allows us to create an <b>Adjusted NAEP Score<\/b> for each district given the proportion of black and hispanic students is given. We also have data on enrollment from 2016 by race which allows us to calculate the proportion of each race of students to create a weighted average NAEP score given a district. \n\nSince we are using 2016 race statistics and 2019 test scores we use the race statistics that were calculated for grade 5 in 2016, because we assume the demographics \n\nSince the proportion of black and hispanic students per district is given as a range, we choose the middle of the range as the value to be used. \n\nNAEP Test Score Source: https:\/\/www.kaggle.com\/noriuk\/us-education-datasets-unification-project\n\n<b>We need some definitions for how to calculate the adjusted NAEP scores: <\/b>\n\nHere the demographic related definitions: \n\nProportion of black and hispanic students in a given district is: $$Percent Black Hispanic_{district_{i}} = PCT BLK HIS_{i}$$\n\nState level proportion of black students is : $$Percent Black_{state} = PCT  BLK_{state}$$\n\nState level proportion of hispanic students is : $$Percent Hispanic_{state} = PCT  HIS_{state}$$\n\nState level proportion of American Indian students is : $$Percent American Indian_{state} = PCT AM_{state}$$\n\nState level proportion of asian students is : $$Percent Asian_{state} = PCT AS_{state}$$\n\nState level proportion of white students is : $$Percent White_{state} = PCT WH_{state}$$\n\nState level proportion of Two or more races students is : $$Percent Two or more races_{state} = PCT TR_{state}$$\n\nHere are the grade related definitions:\n\nAverage grade of black students in state : $$Grade Black_{state} = GR  BLK_{state}$$\n\nAverage grade of hispanic students in state : $$Grade Hispanic_{state} = GR  HIS_{state}$$\n\nAverage grade of American Indian students in state : $$Grade American Indian_{state} = GR AM_{state}$$\n\nAverage grade of asian students in state : $$Grade Asian_{state} = GR AS_{state}$$\n\nAverage grade of white students in state : $$Grade White_{state} = GR WH_{state}$$\n\nAverage grade of Two or more races students in state : $$Grade Two or more races_{state} = GR TR_{state}$$\n\nAdjuted NAEP score for a given district over some grade or subject: $$NAEP_{district_{i}}$$\n\n<b>Below we have the definition for the adjusted NAEP score <\/b>\n\n\n$$NAEP_{district_{i}} = (PCT BLK HIS_{i}) *( GR  HIS_{state}* \\frac {PCT  HIS_{state}}{PCT  HIS_{state} + PCT  BLK_{state}}  + GR  BLK_{state}* \\frac {PCT  BLK_{state}}{PCT  HIS_{state} + PCT  BLK_{state}})  + \\\\\n                         (1 - PCT BLK HIS_{i}) *(GR  AS_{state}* \\frac {PCT  AS_{state}}{1 - (PCT  HIS_{state} + PCT  BLK_{state})}  +    \\\\     \n                         GR  AM_{state}* \\frac {PCT  AM_{state}}{1 - (PCT  HIS_{state} + PCT  BLK_{state})}  + \\\\\n                         GR  WH_{state}* \\frac {PCT  WH_{state}}{1 - (PCT  HIS_{state} + PCT  BLK_{state})}  + \\\\\n                         GR  TR_{state}* \\frac {PCT  TR_{state}}{1 - (PCT  HIS_{state} + PCT  BLK_{state})}  )$$\n\nThe adjusted NAEP district score is basically just using the percentage of black and hispanic student to weigh the respective scores of each demographic of students, weighted by their representation in each state.\n\nWhere there were null values the average state test score was used.\n\nThe purpose of this adjusted test score is to better gage which districts score well on standardized tests. While standardized tests have many flaws and the NAEP has been criticized we believe that a test that is taken by a nationally and state representative sample, across demographics, in which the tests that are administered are identical can prove to be a valuable marker on school districts and their performance. ","9713dca3":"\n\nNow we plot the adjusted mathematics 8th grade score against other variables in the dataset."}}