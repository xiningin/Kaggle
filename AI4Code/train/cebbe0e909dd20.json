{"cell_type":{"ef253d13":"code","3bd444b9":"code","fd3446de":"code","d169e5c3":"code","c428a2fb":"code","aa25715f":"code","8b0017e9":"code","6520d823":"code","6161418e":"code","7060d36f":"code","cf756b9b":"code","930e96ff":"code","8111418b":"code","3eaa23ee":"code","1d1c69ea":"code","4dc2009b":"code","bf802c28":"code","01f0f4c9":"markdown","085318e4":"markdown","482c1ad1":"markdown","87c2bf2f":"markdown","d0ace9d5":"markdown","54baea4e":"markdown","56e90301":"markdown","8e8a8793":"markdown","04802a06":"markdown","09b4835c":"markdown","36d5ec97":"markdown","9a0c1cb4":"markdown","dd5621c4":"markdown","72af9621":"markdown","a685fa54":"markdown","3dde740b":"markdown","8922c63f":"markdown"},"source":{"ef253d13":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom sklearn import linear_model\nimport matplotlib as lib\nfrom sklearn.model_selection import train_test_split \nfrom sklearn import metrics\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3bd444b9":"df = pd.read_csv(r'''\/kaggle\/input\/forest-fires-in-brazil\/amazon.csv''', engine='python')","fd3446de":"print(df.head())\nprint(df.shape)\nprint(df.columns)\nprint(df.dtypes)\nprint (df.describe())","d169e5c3":"df['Month'] = df['month'].map( {'Janeiro': 'January', 'Fevereiro': 'Febuary', 'Mar\u00e7o': 'March', 'Abril': 'April','Maio': 'May', 'Junho': 'June', 'Julho': 'July', 'Agosto': 'August', 'Setembro': 'September', 'Outubro': 'October', 'Novembro': 'November', 'Dezembro':'December' } ).astype(str)\ndf=df.drop(['month'], axis = 1)\nprint(df.head())","c428a2fb":"print(df.state.unique())\nprint(df.isnull().sum())","aa25715f":"df1=df.groupby('state').number.mean().reset_index()\ndf1=df1.sort_values('number', ascending=False)\nprint(df1)\ndf1.plot(x='state', y='number', kind = 'bar')\nplt.show()","8b0017e9":"df1=df.groupby('year').number.mean().reset_index()\ndf1=df1.sort_values('year', ascending=False)\nprint(df1)\ndf1.plot(x='year', y='number', kind = 'line')\nplt.show()","6520d823":"df1=df.groupby('Month').number.mean().reset_index()\ndf1=df1.sort_values('number', ascending=False)\nprint(df1)\ndf1.plot(x='Month', y='number', kind = 'bar')\nplt.show()\n","6161418e":"df1=df.groupby(['state', 'Month']).number.mean().reset_index()\nprint(df1)","7060d36f":"li_state = ['Acre','Alagoas','Amapa','Amazonas', 'Bahia' ,'Ceara' ,'Distrito Federal',\n 'Espirito Santo', 'Goias' ,'Maranhao', 'Mato Grosso', 'Minas Gerais' ,'Par\u00e1',\n 'Paraiba' ,'Pernambuco', 'Piau', 'Rio', 'Rondonia' ,'Roraima' ,'Santa Catarina',\n 'Sao Paulo' ,'Sergipe', 'Tocantins']\ndf_f=pd.DataFrame(columns=['state', 'number'])\nfor i in range (len(li_state)):\n    df2 = pd.DataFrame(columns=['state', 'number'])\n    df3=df1.loc[df1.state==li_state[i],:].number.nlargest(3)\n    df2.number=df3\n    df2['state']=li_state[i]\n    #print(df2)\n    df_f=df_f.append(df2)\n    del(df2)\nprint(df_f)\n","cf756b9b":"df_f.plot(x='state', y='number', kind='bar')\nplt.show()","930e96ff":"state_map = {'Acre':1,'Alagoas':2,'Amapa':3,'Amazonas':3,'Bahia':4 ,'Ceara':5 ,'Distrito Federal':6,\n 'Espirito Santo':7, 'Goias':8 ,'Maranhao':9, 'Mato Grosso':10, 'Minas Gerais':11 ,'Par\u00e1':12,\n 'Paraiba':13 ,'Pernambuco':14, 'Piau':15, 'Rio':16, 'Rondonia':17 ,'Roraima':18 ,'Santa Catarina':19,\n 'Sao Paulo':21 ,'Sergipe':22, 'Tocantins':23}\n\ndf['State'] = df['state'].map(state_map).astype(str)\ndf=df.drop(['state'], axis = 1)\nprint(df.head())","8111418b":"df['month'] = df['Month'].map( {'January': 1, 'Febuary': 2, 'nan': 3, 'April': 4,'May': 5, 'June': 6, 'July': 7, 'August': 8, 'September': 9, 'October': 10, 'November': 11, 'December':12}).astype(int)\n\nprint(df.head())\n","3eaa23ee":"df=df.drop(['Month'], axis = 1)\nprint(df.head())\n","1d1c69ea":"ax=sns.heatmap(df.corr())\nprint(ax)","4dc2009b":"\nX = df['month'].values.reshape(-1,1)\ny = df['number'].values.reshape(-1,1)\n\n#Splitting the dataset in Test and Training set\n\nX_train,X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)\nreg= linear_model.LinearRegression()\n\n#Fitting the model\n\nreg.fit(X_train,y_train)\n\n#To retrieve the intercept:\nprint(reg.intercept_)\n#For retrieving the slope:\nprint(reg.coef_)\ny_pred = reg.predict(X_test)\ndf3 = pd.DataFrame({'Actual': y_test.flatten(), 'Predicted': y_pred.flatten()})\n\n# We will see 25 values for Predicted value as actual dataset is pretty big.\ndf1 = df3.head(25)\ndf1.plot(kind='bar',figsize=(16,10))\nplt.grid(which='major', linestyle='-', linewidth='0.5', color='green')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='black')\nplt.show()\n","bf802c28":"print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","01f0f4c9":"We will take into consideration only top 3 number of forest fire of each state. ","085318e4":"Now lets get Dataset Ready for some Machine Learning, we will convert state to numerical value.","482c1ad1":"Now Lets analyze the Forest Fire state wise and month.","87c2bf2f":"Lets plot this to get a better idea.","d0ace9d5":"**State** - is of Object DataType (should be str)\n**Month** - is of objext Datatype (should be of str)\n**Date** - is of object (should be of Datetime)","54baea4e":"Analyzing Forest Fire according to State","56e90301":"Plotting Heat map to see the coreleation between the Features of the Dataset","8e8a8793":"Analyzing Forest Fire According to Year ","04802a06":"Now Analyzing Month in which forest fire ocuurs the most.","09b4835c":"Now we will use Linear regression to predict Forest Fire.\nWe wil use month to predict the same as it is more coreleated than year.","36d5ec97":"Converting Month to English and type String","9a0c1cb4":"Forest Fire occurs more in months like July, October, August, November instead of April, March","dd5621c4":"Getting All distinct states","72af9621":"Few States like Sao Paulo, Mato, Grosso, Bahia show higher number of forest fires as compared to others Sergipe and Alagoas","a685fa54":"Now we have top 3 forest fire number for each state.","3dde740b":"We will convert months to numerical value using MAP finction too.","8922c63f":"We can see an increment in number of Forest Fire since 2007. It has increased Steadily. We can also see year 2003 as an exception or outlier.\nBut since 2007 Forest Fire is surging."}}