{"cell_type":{"25389000":"code","f3afb420":"code","15b4a4e1":"code","01d2ad11":"code","b62f82c1":"code","6185b989":"code","a76a2059":"code","6e423ffc":"code","20d38752":"code","739f919c":"code","09bd97c1":"code","884e8acb":"code","1d5122b0":"code","16f577f7":"code","0006e2a7":"code","64ce4e05":"code","80ba6794":"code","8b6e4a9b":"code","9e51f5bf":"code","7a2285fe":"code","a1d74b84":"markdown","f9181f65":"markdown","ad9d2163":"markdown","ad3971fe":"markdown","d6bc418a":"markdown","5c5fe8ae":"markdown","1afb23bc":"markdown","508d80c9":"markdown","f2d07e2c":"markdown","c46c21ac":"markdown","4b5222fc":"markdown","d60637a1":"markdown","8a4bec40":"markdown"},"source":{"25389000":"pip install GaugeRnR","f3afb420":"import numpy as np\nimport GaugeRnR\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import PercentFormatter\nimport seaborn as sns\nimport pandas as pd\nplt.style.use('seaborn-colorblind')","15b4a4e1":"def Pareto(problems, values):\n    df = pd.DataFrame({'Values': values})\n    df.index = problems\n    df = df.sort_values(by='Values',ascending=False)\n    df[\"cumpercentage\"] = df[\"Values\"].cumsum()\/df[\"Values\"].sum()*100\n    \n    plt.figure(figsize=(14,6))\n    plt.bar(df.index, df[\"Values\"], color=\"C0\")\n    plt.xticks(rotation=70)\n    ax = plt.twinx()\n    ax.plot(df.index, df[\"cumpercentage\"], color=\"r\", marker=\"D\")\n    ax.yaxis.set_major_formatter(PercentFormatter())\n    plt.title(\"Pareto Diagram\")\n    plt.tick_params(axis=\"y\", colors=\"k\")\n    plt.tick_params(axis=\"y\", colors=\"r\")\n    plt.grid()\n    plt.show()","01d2ad11":"class XR_ControlChart:\n    \n    def fit(self,data):\n        \n        self.sample_size = len(data[0])\n        self.number_of_sample = len(data)\n        self.X = np.zeros((self.number_of_sample,1))\n        self.R = np.zeros((self.number_of_sample,1))\n\n        for i in range(self.number_of_sample):\n            self.X[i] = data[i].mean()\n            self.R[i] = data[i].max() - data[i].min()\n        \n        self.data = data\n        \n    def ControlChart(self,A2,D3,D4):\n\n        ucl_X   = self.X.mean() + A2*self.R.mean()\n        cl_X    = self.X.mean() \n        lcl_X   = self.X.mean() - A2*self.R.mean()\n\n        ucl_R   = D4*self.R.mean()\n        cl_R    = self.R.mean() \n        lcl_R   = D3*self.R.mean()\n        \n        plt.figure(figsize=(15,5))\n        plt.title(\"Boxplot for {} Observations\\nSample Size {}\".format(len(self.data),len(self.data[0])))\n        plt.boxplot(self.data.T)\n        plt.show()\n\n        plt.figure(figsize=(15,5))\n        plt.plot(self.X,marker=\"o\",color=\"k\",label=\"X\")\n        plt.plot([ucl_X]*len(self.X),color=\"r\",label=\"UCL={}\".format(ucl_X.round(2)))\n        plt.plot([cl_X]*len(self.X),color=\"b\",label=\"CL={}\".format(cl_X.round(2)))\n        plt.plot([lcl_X]*len(self.X),color=\"r\",label=\"LCL={}\".format(lcl_X.round(2)))\n        plt.title(\"X Chart\")\n        plt.xticks(np.arange(len(self.data)))\n        plt.legend()\n        plt.show()\n\n        plt.figure(figsize=(15,5))\n        plt.plot(self.R,marker=\"o\",color=\"k\",label=\"R\")\n        plt.plot([ucl_R]*len(self.X),color=\"r\",label=\"UCL={}\".format(ucl_R.round(2)))\n        plt.plot([cl_R]*len(self.X),color=\"b\",label=\"CL={}\".format(cl_R.round(2)))\n        plt.plot([lcl_R]*len(self.X),color=\"r\",label=\"LCL={}\".format(lcl_R.round(2)))\n        plt.title(\"R Chart\")\n        plt.xticks(np.arange(len(self.data)))\n        plt.legend()\n        plt.show()\n        \n        plt.figure(figsize=(15,5))\n        plt.subplot(1,2,1)\n        plt.boxplot(x=self.X)\n        plt.title(\"Boxplot X\")\n        plt.xlabel(\"X\")\n        plt.subplot(1,2,2)\n        plt.boxplot(x=self.R)\n        plt.title(\"Boxplot R\")\n        plt.xlabel(\"R\")\n        plt.show()","b62f82c1":"class XS_ControlChart:\n    \n    def fit(self,data):\n        \n        self.sample_size = len(data[0])\n        self.number_of_sample = len(data)\n        self.X = np.zeros((self.number_of_sample,1))\n        self.S = np.zeros((self.number_of_sample,1))\n\n        for i in range(self.number_of_sample):\n            self.X[i] = data[i].mean()\n            self.S[i] = data[i].std()\n        \n        self.data = data\n        \n    def ControlChart(self,A3,B3,B4):\n\n        ucl_X   = self.X.mean() + A3*self.S.mean()\n        cl_X    = self.X.mean() \n        lcl_X   = self.X.mean() - A3*self.S.mean()\n\n        ucl_S   = B4*self.S.mean()\n        cl_S    = self.S.mean() \n        lcl_S   = B3*self.S.mean()\n        \n        plt.figure(figsize=(15,5))\n        plt.title(\"Boxplot for {} Observations\\nSample Size {}\".format(len(self.data),len(self.data[0])))\n        plt.boxplot(self.data.T)\n        plt.show()\n\n        plt.figure(figsize=(15,5))\n        plt.plot(self.X,marker=\"o\",color=\"k\",label=\"X\")\n        plt.plot([ucl_X]*len(self.X),color=\"r\",label=\"UCL={}\".format(ucl_X.round(2)))\n        plt.plot([cl_X]*len(self.X),color=\"b\",label=\"CL={}\".format(cl_X.round(2)))\n        plt.plot([lcl_X]*len(self.X),color=\"r\",label=\"LCL={}\".format(lcl_X.round(2)))\n        plt.title(\"X Chart\")\n        plt.xticks(np.arange(len(self.data)))\n        plt.legend()\n        plt.show()\n\n        plt.figure(figsize=(15,5))\n        plt.plot(self.S,marker=\"o\",color=\"k\",label=\"S\")\n        plt.plot([ucl_S]*len(self.X),color=\"r\",label=\"UCL={}\".format(ucl_S.round(2)))\n        plt.plot([cl_S]*len(self.X),color=\"b\",label=\"CL={}\".format(cl_S.round(2)))\n        plt.plot([lcl_S]*len(self.X),color=\"r\",label=\"LCL={}\".format(lcl_S.round(2)))\n        plt.title(\"S Chart\")\n        plt.xticks(np.arange(len(self.data)))\n        plt.legend()\n        plt.show()\n        \n        plt.figure(figsize=(15,5))\n        plt.subplot(1,2,1)\n        plt.boxplot(x=self.X)\n        plt.title(\"Boxplot X\")\n        plt.xlabel(\"X\")\n        plt.subplot(1,2,2)\n        plt.boxplot(x=self.S)\n        plt.title(\"Boxplot S\")\n        plt.xlabel(\"S\")\n        plt.show()","6185b989":"class MR_ControlChart:\n    \n    def fit(self,data):\n        \n        self.X = data\n        self.number_of_sample = len(self.X)\n        self.mR = np.zeros(((self.number_of_sample-1),1))\n\n        for i in range(len(self.mR)):\n            self.mR[i] = abs(self.X[i+1] - self.X[i])\n    \n    def ControlChart(self,d2,D4,D3):\n        \n        ucl_X   = self.X.mean() + (3\/d2*np.sqrt(self.number_of_sample))*self.mR.mean()\n        cl_X    = self.X.mean() \n        lcl_X   = self.X.mean() - (3\/d2*np.sqrt(self.number_of_sample))*self.mR.mean()\n\n        ucl_mR   = D4*self.mR.mean()\n        cl_mR    = self.mR.mean() \n        lcl_mR   = D3*self.mR.mean()\n        \n\n        plt.figure(figsize=(15,5))\n        plt.plot(self.X,marker=\"o\",color=\"k\",label=\"X\")\n        plt.plot([ucl_X]*len(self.X),color=\"r\",label=\"UCL={}\".format(ucl_X.round(2)))\n        plt.plot([cl_X]*len(self.X),color=\"b\",label=\"CL={}\".format(cl_X.round(2)))\n        plt.plot([lcl_X]*len(self.X),color=\"r\",label=\"LCL={}\".format(lcl_X.round(2)))\n        plt.title(\"X Chart\")\n        plt.xticks(np.arange(len(self.X)))\n        plt.legend()\n        plt.show()\n\n        plt.figure(figsize=(15,5))\n        plt.plot(self.mR ,marker=\"o\",color=\"k\",label=\"mR \")\n        plt.plot([ucl_mR ]*len(self.X),color=\"r\",label=\"UCL={}\".format(ucl_mR.round(2)))\n        plt.plot([cl_mR ]*len(self.X),color=\"b\",label=\"CL={}\".format(cl_mR.round(2)))\n        plt.plot([lcl_mR ]*len(self.X),color=\"r\",label=\"LCL={}\".format(lcl_mR.round(2)))\n        plt.title(\"mR  Chart\")\n        plt.xticks(np.arange(len(self.X)))\n        plt.legend()\n        plt.show()\n        \n        plt.figure(figsize=(15,5))\n        plt.subplot(1,2,1)\n        plt.boxplot(x=self.X)\n        plt.title(\"Boxplot X\")\n        plt.xlabel(\"X\")\n        plt.subplot(1,2,2)\n        plt.boxplot(x=self.mR )\n        plt.title(\"Boxplot mR\")\n        plt.xlabel(\"mR \")\n        plt.show()","a76a2059":"class p_ControlChart:\n    def fit(self,D,n):\n        self.D = D\n        self.n = n \n        self.p = np.zeros(len(self.D)) \n        for i in range(len(D)):\n            self.p[i] = D[i] \/ n\n    \n    def ControlChart(self):\n        m      = len(self.p)\n        p_mean = self.p.sum() \/ m\n        \n        ucl = p_mean + 3*np.sqrt((p_mean*(1-p_mean))\/(self.n))\n        cl  = p_mean\n        lcl = p_mean - 3*np.sqrt((p_mean*(1-p_mean))\/(self.n)) \n        \n        plt.figure(figsize=(15,5))\n        plt.plot(self.p,marker=\"o\",color=\"k\",label=\"$p_i$\")\n        plt.plot([ucl]*(len(self.D)),label=\"UCL\",color=\"r\")\n        plt.plot([cl]*(len(self.D)),label=\"CL\",color=\"k\",alpha=0.4)\n        plt.plot([lcl]*(len(self.D)),label=\"LCL\",color=\"r\")\n        plt.legend(loc=\"best\")\n        plt.xticks(np.arange(len(self.D)))\n        plt.title(\"p Control Chart\")\n        plt.show()\n        \n        plt.figure(figsize=(15,5))\n        plt.subplot(1,2,1)\n        plt.boxplot(self.D,vert=False)\n        plt.title(\"Boxplot of Data\")\n        plt.ylabel(\"Data\")\n        plt.subplot(1,2,2)\n        plt.hist(self.D,bins=int(len(self.D)\/3),density=True,color=\"blue\")\n        plt.ylabel(\"Frequency\")\n        plt.title(\"Histogram of Data\")\n        plt.show()","6e423ffc":"class u_ControlChart:\n    \n    def fit(self,c,n):\n        \n        self.c      = c\n        self.n      = n\n        self.u_mean = sum(self.c) \/ sum(self.n)\n        self.value  = np.array(c) \/  np.array(n)\n        \n    def ControlChart(self):\n        \n        ucl = self.u_mean + 3 * np.sqrt(self.u_mean\/np.mean(self.n))\n        cl  = self.u_mean\n        lcl = self.u_mean - 3 * np.sqrt(self.u_mean\/np.mean(self.n))     \n        \n        plt.figure(figsize=(15,5))\n        plt.plot(self.value,marker=\"o\",color=\"k\",label=\"$C_i$\")\n        plt.plot([ucl]*len(self.n),color=\"r\",label=\"UCL{}\".format(ucl.round(2)))\n        plt.plot([cl]*len(self.n),color=\"k\",alpha=0.4,label=\"CL{}\".format(cl.round(2)))\n        plt.plot([lcl]*len(self.n),color=\"r\",label=\"LCL{}\".format(lcl.round(2)))\n        plt.xticks(np.arange(len(self.c)))\n        plt.legend(loc=\"best\")\n        plt.title(\"u - Control Chart\")\n        plt.show()\n        \n        plt.figure(figsize=(15,5))\n        plt.subplot(1,2,1)\n        plt.boxplot(self.c,vert=False)\n        plt.title(\"Boxplot of Data\")\n        plt.ylabel(\"Data\")\n        plt.subplot(1,2,2)\n        plt.hist(self.c,bins=int(len(self.c)\/3),density=True,color=\"blue\")\n        plt.ylabel(\"Frequency\")\n        plt.title(\"Histogram of Data\")\n        plt.show()   ","20d38752":"class EWMA:\n    def fit(self,data,lamda,mean):\n        \n        self.X     = data\n        self.z     = np.zeros(len(data))\n        self.lamda = lamda\n        self.mean  = mean\n        self.z[0]  = self.mean\n        for i in range(1,len(self.z)):\n            self.z[i] = self.lamda*self.X[i] + (1-self.lamda)*self.z[i-1] \n \n    def  ControlChart(self,L,sigma):\n        # L     : Kontrol limitlerinin geni\u015fli\u011fi\n        ucl = np.zeros(len(self.X))\n        lcl = np.zeros(len(self.X))\n        I   = np.arange(1,len(self.X)+1)\n        \n        for i in range(len(self.X)):\n            ucl[i] = self.mean + L*sigma*np.sqrt((self.lamda \/ (2 - self.lamda))*(1-(1-self.lamda)**(I[i])))\n            lcl[i] = self.mean - L*sigma*np.sqrt((self.lamda \/ (2 - self.lamda))*(1-(1-self.lamda)**(I[i])))\n        \n        plt.figure(figsize=(15,5))\n        plt.plot(self.z,marker=\"o\",color=\"k\",label=\"$Z_i$\")\n        plt.plot([self.mean]*len(self.X),color=\"k\",alpha=0.35)\n        plt.plot(ucl,color=\"r\",label=\"UCL {}\".format(ucl[len(ucl)-1].round(2)))\n        plt.plot(lcl,color=\"r\",label=\"LCL {}\".format(lcl[len(lcl)-1].round(2)))\n        plt.title(\"EWMA Conrol Chart\")\n        plt.legend(loc=\"upper left\")\n        plt.show()\n        \n        plt.figure(figsize=(15,5))\n        plt.subplot(1,2,1)\n        plt.boxplot(self.X,vert=False)\n        plt.title(\"Boxplot of Data\")\n        plt.ylabel(\"Data\")\n        plt.subplot(1,2,2)\n        plt.hist(self.X,bins=int(len(self.X)\/3),density=True,color=\"blue\")\n        plt.ylabel(\"Frequency\")\n        plt.title(\"Histogram of Data\")\n        plt.show()","739f919c":"problems=['A\u011f Hatas\u0131', 'Pul Hatas\u0131', 'Yanl\u0131\u015f \u00dcr\u00fcn', 'Kula\u011f\u0131 Kesik', 'Ya\u011f Lekesi',\n          'Kuma\u015f Lekesi', 'Lastik Lekesi', 'Kenar Hatas\u0131','Bask\u0131 Hatas\u0131','Yamuk','D\u00fc\u011fme Tamiri','Son Kapama']\nvalues=[5,21,9,20,16,123,99,5,74,8,94,10]\n\nc = np.array([2,3,8,1,1,4,1,4,5,1,8,2,4,3,4,1,8,3,7,4])\nn = np.array([50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50,\n       50, 50, 50])\n\ndata = np.array([[57, 46, 62, 23, 19],\n       [52, 49, 42, 60, 32],\n       [64, 53, 33, 20, 32],\n       [46, 61, 55, 24, 44],\n       [26, 47, 21, 62, 48],\n       [36, 64, 63, 42, 38],\n       [22, 52, 44, 49, 43],\n       [56, 38, 56, 44, 46],\n       [52, 33, 40, 30, 65],\n       [57, 55, 30, 35, 46],\n       [53, 24, 63, 49, 43],\n       [24, 33, 38, 67, 24],\n       [65, 36, 32, 48, 35],\n       [38, 61, 48, 43, 38],\n       [68, 42, 21, 29, 43],\n       [60, 48, 44, 19, 60],\n       [43, 28, 32, 65, 22],\n       [57, 47, 69, 56, 24],\n       [31, 29, 48, 63, 42],\n       [39, 68, 20, 51, 26]])\n\ndata2 = np.array([296, 289, 309, 302, 308, 291, 298, 288, 305, 303, 296, 294, 297,\n       308, 294, 308, 292, 300, 299, 291])\n\ndata3 = np.array([ 9.86309233,  9.84000103, 10.97886276,  9.50805567,  9.79770921,\n       10.3763538 , 10.77708283, 10.91984387, 10.58749389, 10.55658341,\n       10.56227153,  9.23660779, 10.66084511, 10.12406454,  9.22176616,\n       10.23525939,  9.63873061, 10.63521265,  9.34684212,  9.74626569,\n        9.55167571,  9.203874  ,  9.11321254,  9.28478856, 10.21514137,\n       10.93835811,  9.00417726, 10.20495895, 10.12245382,  9.46752498])\n\ndata5 = np.array(           \n    [[[37, 38, 37],   \n      [42, 42, 43],   \n      [30, 31, 31],  \n      [42, 43, 42],    \n      [28, 30, 29],\n      [42, 42, 43],   \n      [25, 26, 27],  \n      [40, 40, 40],    \n      [25, 25, 25],\n      [35, 34, 34]],   \n     [[41, 41, 40],   \n      [42, 42, 42],   \n      [31, 31, 31],   \n      [43, 43, 43],    \n      [29, 30, 29],\n      [45, 45, 45],\n      [28, 28, 30],   \n      [43, 42, 42],   \n      [27, 29, 28],   \n      [35, 35, 34]],   \n     [[41, 42, 41],   \n      [43, 42, 43],   \n      [29, 30, 28],   \n      [42, 42, 42],    \n      [31, 29, 29],\n      [44, 46, 45],\n      [29, 27, 27],   \n      [43, 43, 41],   \n      [26, 26, 26],   \n      [35, 34, 35]]])\n\n#       m1    m2    m3\ndata4 = np.array(            #\n    [[[3.29, 3.41, 3.64],   # p1 | o1\n      [2.44, 2.32, 2.42],   # p2\n      [4.34, 4.17, 4.27],   # p3\n      [3.47, 3.5, 3.64],    # p4\n      [2.2, 2.08, 2.16]],   # p5\n     [[3.08, 3.25, 3.07],   # p1 | o2\n      [2.53, 1.78, 2.32],   # p2\n      [4.19, 3.94, 4.34],   # p3\n      [3.01, 4.03, 3.2],    # p4\n      [2.44, 1.8, 1.72]],   # p5\n     [[3.04, 2.89, 2.85],   # p1 | o3\n      [1.62, 1.87, 2.04],   # p2\n      [3.88, 4.09, 3.67],   # p3\n      [3.14, 3.2, 3.11],    # p4\n      [1.54, 1.93, 1.55]]]) # p5\n\ndata6 =  np.array([12,15,8,10,4,7,16,9,14,10,5,6,17,12,22,8,10,5,13,11,20,18,24,15,9,12,7,13,9,6])","09bd97c1":"Pareto(problems,values)","884e8acb":"chart = MR_ControlChart()\nchart.fit(data2)\nchart.ControlChart(d2 = 1.128,D3 = 0 ,D4 = 3.267)","1d5122b0":"chart = XR_ControlChart()\nchart.fit(data)\nchart.ControlChart(A2 = 0.577,D3 = 0 ,D4 = 2.115)","16f577f7":"chart = XS_ControlChart()\nchart.fit(data)\nchart.ControlChart(A3 = 1.427 ,B3 = 0 ,B4 = 2.089)","0006e2a7":"chart = p_ControlChart()\nchart.fit(D=data6,n=50)\nchart.ControlChart()","64ce4e05":"chart = u_ControlChart()\nchart.fit(c,n)\nchart.ControlChart()","80ba6794":"chart = EWMA()\nchart.fit(data=data3,lamda=0.1,mean=10)\nchart.ControlChart(L=2.7,sigma=1)","8b6e4a9b":"g = GaugeRnR.GaugeRnR(data4)\ng.calculate()\nprint(g.summary())","9e51f5bf":"g.creatPartsBoxPlot()","7a2285fe":"g.creatOperatorsBoxPlot()","a1d74b84":"# u Control Chart","f9181f65":"# Moving Average Control Chart","ad9d2163":"# Gauge R&R","ad3971fe":"# Observations(Datas)","d6bc418a":"# X-R Control Chart","5c5fe8ae":"# Classes","1afb23bc":"# Simple Quality Control Charts (Standards are unknown)","508d80c9":"# EWMA Control Chart","f2d07e2c":"# p Control Chart","c46c21ac":"# Libraries","4b5222fc":"# Pareto Diagram","d60637a1":"**The parameters of the classes are determined from the \"Factors for Constructing Variables Control Chart\".**","8a4bec40":"# X-S Control Chart"}}