{"cell_type":{"9c61b3d4":"code","7a912004":"code","404c6b27":"code","46e8e5f0":"code","47050994":"code","3dda2c5f":"code","38b0ba1a":"code","0f33d2e3":"code","4029a476":"code","ca83c51e":"code","4045f93a":"code","4fbe67ad":"code","05eebab4":"code","5bf0983d":"code","45a0f17e":"code","4fc2c104":"code","c449de29":"code","f866b5a3":"code","aa5de60a":"code","0b0d7511":"code","e1031f01":"code","bfa31764":"code","9cf45e87":"code","23c9f670":"code","24d1eecf":"code","de7d7383":"code","2ce15e8a":"code","01e75395":"code","82e194e5":"code","5b957ee7":"markdown","961377ba":"markdown","5390e348":"markdown","f4733f08":"markdown","779af325":"markdown","a395f424":"markdown","39c73cbb":"markdown"},"source":{"9c61b3d4":"import os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","7a912004":"fashion_train_df = pd.read_csv(\"..\/input\/fashion-mnist_train.csv\") \nfashion_test_df = pd.read_csv(\"..\/input\/fashion-mnist_test.csv\")","404c6b27":"fashion_train_df.head()","46e8e5f0":"fashion_train_df.tail()","47050994":"fashion_test_df.head()","3dda2c5f":"fashion_test_df.tail()","38b0ba1a":"fashion_train_df.shape","0f33d2e3":"fashion_test_df.shape","4029a476":"training = np.array(fashion_train_df, dtype = 'float32')\ntesting = np.array(fashion_test_df, dtype = 'float32')","ca83c51e":"import random\ni = random.randint(1, 60000)\nplt.imshow(training[i, 1:].reshape(28, 28))\nlabel = training[i, 0]\nlabel","4045f93a":"W_grid = 15\nL_grid = 15\n\nfig, axes = plt.subplots(L_grid, W_grid, figsize = (17, 17))\naxes = axes.ravel()\nn_training = len(training)\n\nfor i in np.arange(0, W_grid * L_grid):\n    index = np.random.randint(0, n_training)\n    axes[i].imshow(training[index, 1:].reshape((28, 28)))\n    axes[i].set_title(training[index, 0], fontsize = 8)\n    axes[i].axis('off')\n    \nplt.subplot_adjust(hspace = 0.4)","4fbe67ad":"X_train = training[:, 1:]\/255\ny_train = training[:, 0]\nX_test = testing[:, 1:]\/255\ny_test = testing[:, 0]","05eebab4":"from sklearn.model_selection import train_test_split\nX_train, X_validate, y_train, y_validate = train_test_split(X_train, y_train, test_size = 0.2, random_state = 12345)","5bf0983d":"X_train = X_train.reshape(X_train.shape[0], *(28, 28, 1))\nX_test = X_test.reshape(X_test.shape[0], *(28, 28, 1))\nX_validate = X_validate.reshape(X_validate.shape[0], *(28, 28, 1))","45a0f17e":"X_train.shape","4fc2c104":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Conv2D, MaxPooling2D, Dense, Flatten, Dropout\nfrom keras.optimizers import Adam\nfrom keras.callbacks import TensorBoard","c449de29":"cnn_model = Sequential()\ncnn_model.add(Conv2D(32, 3, 3, input_shape = (28, 28, 1), activation = 'relu'))","f866b5a3":"cnn_model.add(MaxPooling2D(pool_size = (2, 2)))","aa5de60a":"cnn_model.add(Flatten())","0b0d7511":"cnn_model.add(Dense(output_dim = 32, activation = 'relu'))\ncnn_model.add(Dense(output_dim = 10, activation = 'sigmoid'))","e1031f01":"cnn_model.compile(loss = 'sparse_categorical_crossentropy', optimizer = Adam(lr = 0.001), metrics = ['accuracy'])","bfa31764":"epochs = 50","9cf45e87":"cnn_model.fit(X_train, y_train,\n             batch_size = 512,\n             nb_epoch = epochs,\n             verbose = 1,\n             validation_data = (X_validate, y_validate))","23c9f670":"evaluation = cnn_model.evaluate(X_test, y_test)\nprint('Test Accuracy : {:.3f}'.format(evaluation[1]))","24d1eecf":"predict_classes = cnn_model.predict_classes(X_test)","de7d7383":"predict_classes","2ce15e8a":"L = 5\nW = 5\nfig, axes = plt.subplots(L, W, figsize = (12, 12))\naxes = axes.ravel()\n\nfor i in np.arange(0, L * W):\n    axes[i].imshow(X_test[i].reshape(28, 28))\n    axes[i].set_title(\"Prediction Class = {:0.1f}\\n True Class = {:0.1f}\".format(predict_classes[i], y_test[i]))\n    axes[i].axis('off')\n    \nplt.subplots_adjust(wspace = 0.5)","01e75395":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, predict_classes)\nplt.figure(figsize = (14, 10))\nsns.heatmap(cm, annot = True)","82e194e5":"from sklearn.metrics import classification_report\n\nnum_classes = 10\ntarget_names = ['Class {}'.format(i) for i in range(num_classes)]\n\nprint(classification_report(y_test, predict_classes, target_names = target_names))","5b957ee7":"## STEP #3: VISUALIZATION OF THE DATASET","961377ba":"## STEP #2: IMPORTING THE DATA","5390e348":"## STEP #1: PROBLEM STATEMENT AND BUSINESS CASE","f4733f08":"Fashion training set consists of 70,000 images divided into 60,000 training and 10,000 testing samples. Dataset sample consists of 28x28 grayscale image, associated with a label from 10 classes.\n\nThe 10 classes are as follows:\n\n0 => T-shirt\/top 1 => Trouser 2 => Pullover 3 => Dress 4 => Coat 5 => Sandal 6 => Shirt 7 => Sneaker 8 => Bag 9 => Ankle boot\n\nEach image is 28 pixels in height and 28 pixels in width, for a total of 784 pixels in total. Each pixel has a single pixel-value associated with it, indicating the lightness or darkness of that pixel, with higher numbers meaning darker. This pixel-value is an integer between 0 and 255.","779af325":"# CASE STUDY: FASION CLASS CLASSIFICATION","a395f424":"## STEP #4: TRAINING THE MODEL","39c73cbb":"## STEP #5: EVALUATING THE MODEL"}}