{"cell_type":{"8c096f60":"code","cb515c61":"code","ed13976a":"code","89a7f900":"code","5b4ee05f":"code","37602a91":"code","d66257ad":"code","4f9d2465":"code","7c816e5e":"code","7c42e125":"code","ff39b8ac":"code","6bb122c3":"code","37961447":"code","a1815f91":"code","0aee8dae":"code","0dc27047":"code","7b1c393d":"code","270f5185":"code","ad907d54":"code","94111822":"code","0fc48cb0":"code","c8f90f98":"code","25911a58":"code","b10e2dc3":"code","e457f9ac":"code","59213349":"code","7aeca1ef":"code","de8e58a3":"code","88b9919f":"code","8f1d3084":"code","383ce636":"code","62ac7983":"code","556a19e0":"code","b59970eb":"code","57bd7325":"code","e9d5741b":"code","6447a8b7":"code","4d4123bd":"code","d25dedfe":"code","bdaed3a6":"code","5c63aaf2":"code","afc76f38":"code","bc7ab9cf":"code","39c2e112":"code","f6682c04":"code","0f1005b9":"code","ed6d97f2":"code","92c88a71":"code","1f153a27":"code","47c6b64c":"code","00f4f74c":"code","25ab191d":"code","8a559cbc":"code","f56e4ead":"code","5da1396c":"code","69058b4a":"code","99bc172c":"code","23afce11":"code","fb794cff":"code","40dc253d":"code","a16c643c":"code","cbc00b97":"code","3853f1e2":"code","4d81db51":"code","683c1191":"code","fdb795a8":"code","c58b9d23":"markdown","a4041d70":"markdown","908b8fcb":"markdown","478b6d70":"markdown","24d5ba31":"markdown"},"source":{"8c096f60":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cb515c61":"import warnings\nwarnings.filterwarnings('ignore')\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split, cross_val_score\n\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier, BaggingClassifier\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.experimental import enable_hist_gradient_boosting\nfrom sklearn.ensemble import HistGradientBoostingClassifier","ed13976a":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\nprint(train.shape, test.shape)","89a7f900":"train.head()","5b4ee05f":"test.head()","37602a91":"train.info()","d66257ad":"test.info()","4f9d2465":"train.describe()","7c816e5e":"test.describe()","7c42e125":"sns.set()\nsns.countplot(x='Sex', data=train, hue='Survived');","ff39b8ac":"train[['Sex', 'Survived']].groupby(['Sex']).mean()","6bb122c3":"sns.countplot(x='Pclass', data=train, hue='Survived');","37961447":"train[['Pclass', 'Survived']].groupby(['Pclass']).mean()","a1815f91":"sns.countplot(x='Embarked', data=train, hue='Survived');","0aee8dae":"train[['Embarked', 'Survived']].groupby(['Embarked']).mean()","0dc27047":"sns.countplot(x='Embarked', data=train, hue='Sex');","7b1c393d":"sns.countplot(x='Embarked', data=train, hue='Pclass');","270f5185":"sns.countplot(x='Pclass', data=train[train['Embarked'] == 'C'], hue='Survived');","ad907d54":"sns.countplot(x='SibSp', data=train, hue='Survived');","94111822":"sns.countplot(x='Parch', data=train, hue='Survived');","0fc48cb0":"train['Family'] = train['SibSp'] + train['Parch'] + 1\ntest['Family'] = test['SibSp'] + test['Parch'] + 1\ntrain['Alone'] = (train['Family'] <= 1).astype(int)\ntest['Alone'] = (test['Family'] <= 1).astype(int)","c8f90f98":"sns.countplot(x='Family', data=train, hue='Survived');","25911a58":"train[['Family', 'Survived']].groupby(['Family']).mean()","b10e2dc3":"sns.countplot(x='Alone', data=train, hue='Survived');","e457f9ac":"train[['Alone', 'Survived']].groupby(['Alone']).mean()","59213349":"sns.FacetGrid(train, hue='Survived', height=5).map(sns.distplot, 'Age').add_legend();","7aeca1ef":"sns.FacetGrid(train[train['Pclass'] == 1], hue='Survived', height=5).map(sns.distplot, 'Age').add_legend();","de8e58a3":"sns.FacetGrid(train[train['Pclass'] == 2], hue='Survived', height=5).map(sns.distplot, 'Age').add_legend();","88b9919f":"sns.FacetGrid(train[train['Pclass'] == 3], hue='Survived', height=5).map(sns.distplot, 'Age').add_legend();","8f1d3084":"sns.FacetGrid(train, hue='Survived', height=5).map(sns.distplot, 'Fare').add_legend();","383ce636":"sns.FacetGrid(train[train['Pclass'] == 1], hue='Survived', height=5).map(sns.distplot, 'Fare').add_legend();","62ac7983":"sns.FacetGrid(train[train['Pclass'] == 2], hue='Survived', height=5).map(sns.distplot, 'Fare').add_legend();","556a19e0":"sns.FacetGrid(train[train['Pclass'] == 3], hue='Survived', height=5).map(sns.distplot, 'Fare').add_legend();","b59970eb":"sns.countplot(x='Fare', data=train[train['Pclass'] == 1]);","57bd7325":"sns.boxplot(x=train['Fare']);","e9d5741b":"sns.heatmap(train.isnull(), yticklabels=False, cbar=False, cmap='winter');","6447a8b7":"sns.heatmap(test.isnull(), yticklabels=False, cbar=False, cmap='winter');","4d4123bd":"sns.pairplot(train[['Survived', 'Pclass', 'Fare', 'Age']], hue='Survived', height=3);","d25dedfe":"data = pd.concat((train.drop('Survived', axis=1), test)).reset_index(drop=True)\ndata.shape","bdaed3a6":"data.isnull().sum()","5c63aaf2":"data['Title'] = data['Name'].str.split(', ', expand=True)[1].str.split('.', expand=True)[0]","afc76f38":"data['Title'].value_counts()","bc7ab9cf":"pd.crosstab(data['Title'], data['Sex'])","39c2e112":"titles = data['Title'].value_counts() < 10\ndata['Title'] = data['Title'].apply(lambda x: 'Misc' if titles.loc[x] else x)","f6682c04":"data['Surname'] = data['Name'].apply(lambda x: x.split(',')[0])","0f1005b9":"data.groupby(['Sex', 'Pclass'])['Age'].median()","ed6d97f2":"data['Age'] = data.groupby(['Sex', 'Pclass'])['Age'].apply(lambda x: x.fillna(x.median()))","92c88a71":"data[data['Fare'].isnull()]","1f153a27":"data.groupby(['Pclass', 'Sex', 'Embarked'])['Fare'].median()","47c6b64c":"data['Fare'].fillna(8.05, inplace=True)","00f4f74c":"data[data['Embarked'].isnull()]","25ab191d":"data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)","8a559cbc":"data['Cabin'].fillna('N', inplace=True)","f56e4ead":"data['Deck'] = data['Cabin'].str[0]","5da1396c":"sns.countplot(x='Deck', data=data, hue='Sex');","69058b4a":"sns.countplot(x='Deck', data=data, hue='Pclass');","99bc172c":"data['Age_b'] = pd.cut(data['Age'], bins=8, labels=[1,2,3,4,5,6,7,8]).astype(int)\ndata['Fare_b'] = pd.qcut(data['Fare'], 4, labels=[1,2,3,4]).astype(int)","23afce11":"data.head()","fb794cff":"data.info()","40dc253d":"drop_columns = ['PassengerId', 'Name', 'Ticket', 'Age', 'Fare', 'Cabin', 'Deck']\ndata = data.drop(drop_columns, axis=1)","a16c643c":"data = pd.get_dummies(data, drop_first=True)\n\ntrain_s = train.shape[0]\nX = data[:train_s]\ny = train['Survived']\ntest_df = data[train_s:]\nprint(X.shape, y.shape, test_df.shape)","cbc00b97":"X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=1234)","3853f1e2":"models = [GaussianNB(),\n          DecisionTreeClassifier(),\n          RandomForestClassifier(),\n          AdaBoostClassifier(),\n          GradientBoostingClassifier(),\n          BaggingClassifier(),\n          LinearDiscriminantAnalysis(),\n          KNeighborsClassifier(),\n          SVC(probability=True),\n          LinearDiscriminantAnalysis(),\n          HistGradientBoostingClassifier()]\nfor model in models:\n    model.fit(X_train, y_train)\n    print(model.__class__.__name__)\n    print(round(model.score(X_test, y_test), 5))","4d81db51":"for model in [RandomForestClassifier(), AdaBoostClassifier(), SVC(probability=True)]:\n    cross_score = cross_val_score(model, X, y, cv=5)\n    print(model.__class__.__name__)\n    print(cross_score)\n    print(cross_score.mean())","683c1191":"model = SVC(probability=True)\nmodel.fit(X, y)\npredict = model.predict(test_df)\npredict.shape","fdb795a8":"test_new = pd.read_csv('..\/input\/titanic\/test.csv')\n\nsubmission = pd.DataFrame({'PassengerId': test_new['PassengerId'], 'Survived': predict})\nsubmission.to_csv('submission.csv', index = False)\nsubmission.head()","c58b9d23":"# Visualization","a4041d70":"# Training Models","908b8fcb":"# Create new features","478b6d70":"# Loading data","24d5ba31":"# Imports"}}