{"cell_type":{"ce8f8880":"code","c26be217":"code","1ce669d0":"code","8b4e9480":"code","89776628":"code","160ccc19":"code","90c6dccd":"code","a0ab1e8f":"code","c29f52b3":"code","c3ab99b7":"code","1d11e4db":"code","aea96dda":"code","773bd0bc":"code","3b07a081":"code","d2b1d11f":"code","1471525b":"code","4969294e":"code","e5214de3":"code","e237e66f":"code","a3856205":"code","a435f419":"code","503ae1f5":"code","cb450ad4":"code","350b5889":"code","357e91ca":"code","fd3e1259":"code","b0f4bf07":"code","e7c36421":"code","d0ec2acf":"code","0b00c997":"code","7c821637":"code","d8b33211":"code","7189c9d5":"markdown","9ee2b107":"markdown","83147c22":"markdown","f60e46ea":"markdown","214de0a4":"markdown"},"source":{"ce8f8880":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c26be217":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression","1ce669d0":"plt.style.use('fivethirtyeight')","8b4e9480":"pas = pd.read_csv('\/kaggle\/input\/russian-passenger-air-service-20072020\/russian_passenger_air_service_2.csv')\npackage = pd.read_csv('\/kaggle\/input\/russian-passenger-air-service-20072020\/russian_air_service_CARGO_AND_PARCELS.csv')","89776628":"pas.head()","160ccc19":"pas.isna().sum()\/len(pas)*100","90c6dccd":"pas.head()","a0ab1e8f":"long = pas.melt(id_vars = ['Airport name', 'Year'],\n         value_vars = ['January', 'February', 'March', 'April', 'May','June', 'July', 'August', 'September', 'October', 'November','December'])\n\nlong.rename(columns = {'variable':'month', 'value':'passengers'}, inplace = True)","c29f52b3":"# sort months in right order\n\nmonths = ['January', 'February', 'March', 'April', 'May','June', 'July', 'August', 'September', 'October', 'November','December']\nlong['month'] = pd.Categorical(long['month'], categories=months, ordered=True)","c3ab99b7":"long","1d11e4db":"per_year = long.groupby('Year')['passengers'].sum()\/1000000\nper_year = per_year.reset_index()","aea96dda":"plt.figure(figsize=(20,11))\n\nsns.barplot(data = per_year, x = 'Year', y = 'passengers')\nplt.xlabel('Year', fontsize = 16)\nplt.ylabel('Passengers in millions', fontsize = 16)\nplt.title(\"Passengers per Year in Russia's airports\", fontsize = 24)\nplt.xticks(fontsize=15)\nplt.yticks(fontsize=15)","773bd0bc":"ts =  long.groupby(['Year', 'month'])['passengers'].sum()","3b07a081":"ts.to_frame()","d2b1d11f":"ts = ts.reset_index()\n\ntime = range(1,169)\nts['time'] = time                            # create time variable\nts['pasmio'] = ts['passengers'] \/ 1000000    # change representation to millions","1471525b":"plt.figure(figsize = (20,10))\n\nsns.scatterplot(data = ts, x = 'time', y = 'pasmio', color = 'black')\nsns.lineplot(data = ts, x = 'time', y = 'pasmio', color = 'r')\nplt.ylabel('Passengers in million', fontsize=  16)\nplt.title(\"Time Series of Russias's airline passengers from 2007-2020\", fontsize = 19)","4969294e":"ts","e5214de3":"from statsmodels.tsa.stattools import adfuller\nresults = adfuller(ts['pasmio'])\nprint(results[1])","e237e66f":"ts['log_pas'] = np.log(ts['pasmio'])","a3856205":"X = ts['time'].values\nX = np.reshape(X, (len(X), 1))","a435f419":"y = ts['pasmio'].values","503ae1f5":"model = LinearRegression()\nmodel.fit(X, y)","cb450ad4":"trend = model.predict(X)","350b5889":"plt.figure(figsize = (20,10))\n\nsns.lineplot(data = trend)\nsns.lineplot(data = ts, x = 'time', y = 'pasmio', color = 'r')\nplt.ylabel('Passengers in million', fontsize=  16)\nplt.title(\"Time Series of Russias's airline passengers from 2007-2020\", fontsize = 19)","357e91ca":"model","fd3e1259":"detrended = [y[i]-trend[i] for i in range(0, len(ts))]","b0f4bf07":"plt.figure(figsize = (20,10))\n\nplt.plot(detrended)\nplt.show()","e7c36421":"plt.figure(figsize = (20,10))\n\nX = ts['pasmio'].values\n\ndiff = list()\nfor i in range(1, len(X)):\n\tvalue = X[i] - X[i - 1]\n\tdiff.append(value)\nplt.plot(diff)\nplt.show()","d0ec2acf":"from statsmodels.tsa.stattools import acf, pacf\nfrom statsmodels.graphics.tsaplots import plot_acf","0b00c997":"detrended = pd.Series(detrended)","7c821637":"plot_acf(ts['pasmio'])","d8b33211":"plot_acf(detrended)","7189c9d5":"## Clear trend and seasonality is visible\n\n### Peak in July, low in December\n### Constant upward trend\n","9ee2b107":"## Time Series of Russias's airline passengers from 2007-2020","83147c22":"We can also still see the yearly periodic pattern","f60e46ea":"We can still clearly see the problem of heteroscedasticity.\n\n\nDifferenced time series","214de0a4":"Removing linear trend "}}