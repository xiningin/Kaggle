{"cell_type":{"f75d6ff5":"code","5c82cee1":"code","02d1c095":"code","cd983131":"code","4da11a54":"code","0edb376a":"code","042f8ec3":"code","a14950bc":"code","c70745bb":"code","b4944db8":"code","386b7d46":"code","a68b500e":"code","49b57bfa":"code","47737b18":"code","4f6ee1f5":"code","3189eb3c":"code","6fefba05":"code","96e75684":"code","2f83fdab":"code","c98f6636":"code","9014a1d2":"code","668927a3":"code","283aa6c5":"code","ef60b2af":"code","efe47427":"code","b5e5df97":"code","bf6994ff":"code","28f8fbbb":"code","e721f573":"code","8bf30ab2":"code","f36ab3cc":"code","a40c51e6":"code","bd0a562c":"code","3180925b":"code","91da4079":"code","3c5d9a5d":"markdown","4f8568ea":"markdown","d9db3287":"markdown","6a8f8435":"markdown","c09fe027":"markdown","53cf3ec1":"markdown","b9c1e891":"markdown","09e5f705":"markdown","1cbbb4a9":"markdown","900ce144":"markdown","c928a303":"markdown","23d5db36":"markdown","e9609b3a":"markdown","2373a798":"markdown","b05c1d7a":"markdown","b5a305a4":"markdown","833a7478":"markdown","99c7aec6":"markdown","11e28e64":"markdown","07ffe4c4":"markdown","daeff7f4":"markdown","2e428b53":"markdown","b6d0a363":"markdown","b03ad930":"markdown","935dfa3a":"markdown","c829d70b":"markdown","d1dca78f":"markdown","fb41e8ad":"markdown","a5a8c8a2":"markdown","1dad998c":"markdown","f1c4b570":"markdown","6e2d6877":"markdown","76b2320e":"markdown","7f75be69":"markdown","c3c6319e":"markdown","8d609be7":"markdown","3722a08e":"markdown","d4410768":"markdown"},"source":{"f75d6ff5":"#Importamos las librerias basicas y necesarias\nimport pandas as pd #Libreria de manipulacion de datos\nimport numpy as np #Libreria numerica muy potente\nimport matplotlib.pyplot as plt #Libreria para graficos\nimport seaborn as sns #Libreria para graficos basada en Matplotlib (es mas simple)","5c82cee1":"df_airbnb = pd.read_csv(\"..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv\") \n#La funcion read_ tiene muchas opciones dependiendo el tipo de dato que se vaya a cargar","02d1c095":"df_airbnb.head(6) #Vemos los primeros 6 datos para ver que se cargaron correctamente","cd983131":"df_airbnb.shape #Esto nos brinda las dimensiones de los datos (\"filas\",\"columnas\")","4da11a54":"df_airbnb[48889:-1] #Esta es otra forma de filtrar una porcion del dataset\n#esto se interpreta [desde:hasta], el -1 se utiliza para indicar el ultimo valor","0edb376a":"df_airbnb.columns #Vemos los features (asi vamos a llamar a las columnas) que tiene nuestro dataset","042f8ec3":"print(\"cantidad de barrios:\", len(df_airbnb[\"neighbourhood_group\"].unique())) \n#len brinda la longitud de un array\n#unique() brinda los valores sin repetir \n#df[\"host_id\"] metodo de filtrado por features","a14950bc":"df_airbnb[[\"minimum_nights\",\"price\",\"availability_365\"]].describe()\n#Brinda los estadisticos basicos de las columnas seleccionadas","c70745bb":"df_filter = df_airbnb[df_airbnb[\"price\"]<df_airbnb[\"price\"].mean()]\n#Esta es otra forma de filtrar datos por condiciones\n#En este caso filtramos por precio, los alquileres que esten por debajo de la media","b4944db8":"df_filter[\"price\"].max() #Vemos si se aplico el filtro, visualizamos el valor maximo del precio","386b7d46":"df_airbnb[\"price\"].mean() #Validamos y vemos que filtro correctamente los datos por la media","a68b500e":"df_airbnb.isna().sum() #De esta forma vemos el total de valores NaN en nuestro dataset\n#Si no se utiliza el sum() va a devolver la condicion True o False de los campos","49b57bfa":"df_airbnb.isna().sum()\/df_airbnb.shape[0]*100","47737b18":"#Aprovechamos a eliminar otras columnas que no seran necesarias\ndf_airbnb.drop(['name','id','host_name','last_review','reviews_per_month','calculated_host_listings_count'], axis=1, inplace=True)\n#cuando vean en la mayoria de las funciones AXIS es = 1 (columna), 0 (fila)","4f6ee1f5":"#Agrupamos por \"neighbourhood_group\" y mostramos el precio mas alto por barrio\ndf_airbnb.groupby(['neighbourhood_group'])[[\"price\"]].max()","3189eb3c":"df_airbnb.columns","6fefba05":"plt.figure(1, figsize=(10,6)) #Tama\u00f1o del grafico\nplt.title(\"Distribucion del precio\") #Titulo\nsns.boxplot(df_airbnb[\"price\"]) #Grafico, en este caso estamos usando la libreria seaborn\n\nplt.figure(2, figsize=(10,6))\nplt.title(\"Distribucion de las noches minimas de estadia\")\nsns.distplot(df_airbnb[\"minimum_nights\"])\n\nplt.figure(3, figsize=(10,6))\nplt.title(\"Distribucion de la cantidad de reviews\")\nsns.distplot(df_airbnb[\"number_of_reviews\"])","96e75684":"#Quitando valores extremos en el precio\np10 = np.percentile(df_airbnb[\"price\"], 10)\np90 = np.percentile(df_airbnb[\"price\"], 90)\ndf_airbnb = df_airbnb[(df_airbnb[\"price\"] >= p10) & (df_airbnb[\"price\"] <= p90)]","2f83fdab":"#Quitando valores extremos en la cantidad de noches minimas\np10 = np.percentile(df_airbnb[\"minimum_nights\"], 10)\np90 = np.percentile(df_airbnb[\"minimum_nights\"], 90)\ndf_airbnb = df_airbnb[(df_airbnb[\"minimum_nights\"] >= p10) & (df_airbnb[\"minimum_nights\"] <= p90)]","c98f6636":"plt.figure(1, figsize=(10,6)) #Tama\u00f1o del grafico\nplt.title(\"Distribucion del precio\") #Titulo\nsns.boxplot(df_airbnb[\"price\"]) #Grafico, en este caso estamos usando la libreria seaborn\n\nplt.figure(2, figsize=(10,6))\nplt.title(\"Distribucion de las noches minimas de estadia\")\nsns.distplot(df_airbnb[\"minimum_nights\"])","9014a1d2":"plt.figure(figsize=(8,6))\nplt.title(\"Tipos de habitacion por precio\")\nsns.barplot(y='price',x='room_type',data=df_airbnb, palette=\"Set1\")\nplt.show()","668927a3":"plt.figure(figsize=(8,6))\nplt.title(\"Cantidad de alojamientos por barrio\")\nsns.countplot(df_airbnb['neighbourhood_group'])","283aa6c5":"plt.figure(figsize=(10,7))\nsns.barplot(x = \"neighbourhood_group\", y=\"price\", hue = \"room_type\",data = df_airbnb, palette=\"Set1\")\nplt.title(\"Precio agrupado por barrios y tipo de habitacion\")\nplt.show()","ef60b2af":"f,ax = plt.subplots(figsize=(16,8))\nax = sns.scatterplot(y=df_airbnb[\"latitude\"],x=df_airbnb[\"longitude\"],hue=df_airbnb[\"neighbourhood_group\"],palette=\"coolwarm\")\nplt.show()","efe47427":"#Vamos a trabajar solo con las columnas categoricas\ndf_airbnb_cat = df_airbnb[[\"neighbourhood_group\",\"neighbourhood\",\"room_type\"]]\ndf_airbnb_cat.head()","b5e5df97":"dic_room_type = {\n    \"Private room\":0,\n    \"Entire home\/apt\":1,\n    \"Shared room\":2\n}","bf6994ff":"#Con la funcion map unimos el diccionario a nuestro dataset agregandolo a una nueva columna \"dic_room_type\"\ndf_airbnb_cat['dic_room_type'] = df_airbnb_cat['room_type'].map(dic_room_type) ","28f8fbbb":"df_airbnb_cat.head()","e721f573":"neighbourhood_dummy = pd.get_dummies(df_airbnb_cat[\"neighbourhood_group\"])\nneighbourhood_dummy.head() #Vemos como quedaron transformados los barrios","8bf30ab2":"df_airbnb_cat = pd.concat([df_airbnb_cat, neighbourhood_dummy], axis=1) #Unimos nuestro \"neighbourhood_dummy\" al \"df_airbnb_cat\"\ndf_airbnb_cat.head()\n","f36ab3cc":"df_airbnb_cat.drop(['neighbourhood_group',\"neighbourhood\",\"room_type\",\"dic_room_type\"], axis=1, inplace=True)","a40c51e6":"room_type_d = pd.get_dummies(df_airbnb[\"room_type\"]) #Corregimos el room_type\"","bd0a562c":"df_airbnb = pd.concat([df_airbnb, neighbourhood_dummy,room_type_d], axis=1) #Unimos todos los dataframe","3180925b":"df_airbnb.drop(['neighbourhood_group',\"neighbourhood\",\"room_type\"], axis=1, inplace=True) #Eliminamos las columnas que ya no necesitamos","91da4079":"df_airbnb.head()","3c5d9a5d":"- df_airbnb.loc[[4,5,9,40], [\"price Code\", \"minimum_nights\", \"availability_365\"]]\n\nEl loc permite filtrar por el nombre directo de la columna\n\n- df_airbnb.iloc[[4,5,9,40], [9,10,15]]\n\nEl iloc permite filtrar por el n\u00famero de columna\n\n- df_airbnb.iloc[20:30,3:6]\n\ndf_airbnb[fila(desde:hasta),columna(desde:hasta)] --> Esta es la forma de interpretar el filtro","4f8568ea":"Vemos que las columnas relacionadas a las fechas de los comentarios y las cantidades de comentarios por mes tienen algunos NaN, estas columnas no son representativas para nuestro analisis en este momento, asique vamos a eliminarlas.\n\nEn caso de que nos encontremos con features que si nos serian \u00fatiles, podemos utilizar alguna estrategia para reemplazarlos,\n\n- df_airbnb[\"last_review\"].fillna(inplace = True)\n\nHay muchas otras estrategias para tratar con valores NaN, les recomiendo ir googleandolas a medida que se vayan encontrando con los distintos problemas.","d9db3287":"**Limpiando outliers**","6a8f8435":"Con estos primeros gr\u00e1ficos ya podemos ver que tenemos **outliers**, valores at\u00edpicos\n\n- Vemos en el primer grafico de precios que el valor m\u00e1ximo es de USD 10.000 la noche, es un valor que tiene poco sentido en nuestro an\u00e1lisis, asique tenemos que ver como lo tratamos.\n- En el segundo grafico vemos que tambi\u00e9n tenemos valores extra\u00f1os, la estad\u00eda m\u00ednima de 1250 dias, el due\u00f1o pide que el alquiler sea de alrededor de 3 a\u00f1os como m\u00ednimo... en tal caso no aplica para la plataforma de airbnb, deber\u00edamos hacer algo con esos datos.\n- En la ultima vemos que la mayoria de los datos estan en 0, esto puede deberse a que muchos clientes que alquilan no deja ningun comentarios, son valores que tienen alguna explicaci\u00f3n l\u00f3gica","c09fe027":"otras formas de unir dataset es con pd.merge(), es recomendable investigar esta funci\u00f3n\n\nhttps:\/\/pandas.pydata.org\/pandas-docs\/stable\/user_guide\/merging.html","53cf3ec1":"Vamos a trabajar con el dataset de AirBnB que contiene datos de alquileres en New York.\n\nPara mas detalles: https:\/\/www.kaggle.com\/dgomonov\/new-york-city-airbnb-open-data","b9c1e891":"Se puede realizar una gran cantidad de gr\u00e1ficos de todo tipo y con otro tipo de librer\u00edas, solo queda ponerse a googlear. Esto es solo un acercamiento a lo utilizado de forma b\u00e1sica. \n\nPasemos a la pr\u00f3xima etapa","09e5f705":"Vamos a filtrar los datos para quedarnos con los que representen del 10 al 90 porciento de los mismos","1cbbb4a9":"Volvemos a graficar ","900ce144":"Ya tenemos el dataset listo para pasar la etapa mas interesante, Machine Learning. ","c928a303":"Antes de empezar es recomendable instalar Anaconda Navigator, es un entorno de desarrollo que nos va a permitir ejecutar nuestro c\u00f3digo de una forma muy practica\n\ngui\u00e1 para instalarlo: \nhttps:\/\/docs.anaconda.com\/anaconda\/install\/\n\nTambi\u00e9n es recomendable instalar **pip** esto va a facilitar la instalacion de librerias \nhttps:\/\/pypi.org\/project\/pip\/","23d5db36":"Esta etapa cubre el 80% del tiempo de trabajo, el 20% restante se divide en el desarrollo del modelo, evaluaci\u00f3n y optimizacion","e9609b3a":"Si solo queremos eliminar los valores NaN y quedarnos con los demas datos debiamos utilizar lo siguiente\n\n- df_airbnb.dropna(axis=0, how='any', subset=['name', 'host_name'], inplace=True)\n\nSi necesitamos eliminar duplicados\n\n- df_airbnb.drop_duplicates(inplace = True)","2373a798":"La funci\u00f3n groupby es muy \u00fatil para explorar nuestro dataset y realizar an\u00e1lisis.\nEs muy recomendable explorarla y tener el dominio de esta funcion\n\nhttps:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.groupby.html","b05c1d7a":"Vemos que ahora se ve un poco mejor la distribuci\u00f3n de nuestros datos","b5a305a4":"Casi todas las librer\u00edas tiene un API reference donde pueden ver que par\u00e1metros espera cada funci\u00f3n, ejemplos y detalles de como utilizarla\n\nhttps:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/frame.html\n\nO pueden pararse sobre la funci\u00f3n y apretar en el teclado SHIFT + TAB\nesto les va a ahorrar mucho trabajo","833a7478":"En esta etapa podemos ver de forma visual la consistencia de nuestros datos, tambi\u00e9n podemos inferir, sacar algunas conclusiones e incluso armar un informe \n\nRecomendaci\u00f3n: Ver ejemplos de gr\u00e1ficos en https:\/\/seaborn.pydata.org\/examples\/index.html","99c7aec6":"#### Formas de filtrado de los datos","11e28e64":"Dejemos el dataframe prolijo, como deber\u00eda quedar, para que pueda recibirlo un modelo de Machine Learning","07ffe4c4":"### Analicemos un poco","daeff7f4":"Vemos que alquilar una habitaci\u00f3n privada y una compartida tienen un precio similar y alquilar la casa completa nos puede salir casi el doble\n\nVamos a ver que barrios tenemos en New York","2e428b53":"#### TIPs","b6d0a363":"**\u00bfA que barrio tenemos que ir si queremos alquilar una casa completa al menor precio?**","b03ad930":"Bronx es el barrio con precios mas bajos","935dfa3a":"## Feature Engineering","c829d70b":"Otra herramienta para transformaci\u00f3n de datos es el escalado est\u00e1ndar, esta t\u00e9cnica es necesaria ya que los algoritmos de machine learning tienden a comparar los elementos. Por ejemplo en el caso que tengamos variables de Edad y Sueldo, estas no se encuentran en el mismo rango de valores. Es recomendable investigar m\u00e1s sobre esta t\u00e9cnica:\nhttps:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.preprocessing.StandardScaler.html","d1dca78f":"# Preprocesamiento de datos","fb41e8ad":"Esta opci\u00f3n de transformaci\u00f3n de datos no es muy conveniente ya que algunas categor\u00edas tendr\u00e1n mas \"pesos\" que otras, en el caso de \"Shared room\":2 y \"Entire home\/apt\":1 un modelo de Machine Learning interpretaria que \"Shared room\" tiene mas relevancia que \"Entire home\/apt\".\n\nEsto solo aplicar\u00eda para variables **categ\u00f3ricas ordinales**, como por ejemplo una alerta baja, media y alta o las notas A,B,C,D,E y F","a5a8c8a2":"### Limpieza y manipulaci\u00f3n","1dad998c":"Podemos armar un diccionario y mapearlo a nuestro dataset","f1c4b570":"En este dataset tenemos las columnas **latitude** y **longitude**, esto nos indica que podemos graficar las coordenadas de los alojamientos y barrios que tenemos.\n\nTomemos estos datos y grafiquemoslos divididos por barrio","6e2d6877":"Vemos que en nuestro dataset tenemos conjuntos de datos categ\u00f3ricos como los barrios y tipos de habitaci\u00f3n, lo que podemos hacer es transformar cada categor\u00eda a una columna y completar los campos con 1 en caso de que el alojamiento sea en ese barrio y un 0 en caso de que no lo sea.","76b2320e":"Si buscamos una foto del mapa de New York vemos que se asemeja a la forma de esta ciudad","7f75be69":"Para este caso vamos a armar un Dummy dataframe (tambi\u00e9n podr\u00eda aplicar la t\u00e9cnica de OneHotEncoder que viene con la librer\u00eda sklearn: https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.preprocessing.OneHotEncoder.html)\n","c3c6319e":"Este es un proceso b\u00e1sico de limpieza y tratamiento de los datos, existe una gran cantidad de t\u00e9cnicas para poder manipularlos. Las t\u00e9cnicas que usemos van a depender de nuestro set de datos y el objetivo que buscamos","8d609be7":"## Visualizacion","3722a08e":"### Veamos cuantos NaN (Not a Number) tiene nuestro dataset","d4410768":"Veamos nivel porcentual que tantos nan ocupan nuestro dataset, al ser bajo podemos prescindir  de ellos"}}