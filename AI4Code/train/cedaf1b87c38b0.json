{"cell_type":{"303410d9":"code","1bfe819a":"code","946f9be1":"code","b6f775a9":"code","822d8236":"code","19e7c0f1":"code","2866a880":"code","fb1be861":"code","6081ee51":"code","1dd2f2be":"code","3d4d5d89":"code","476d0ecf":"code","92feaecb":"code","b5ca97ae":"code","2b48ac10":"code","67fc7f9c":"code","0d243937":"code","2993e3b1":"code","603499dc":"code","9aa1fca2":"code","1e184ee7":"markdown","780adc91":"markdown","6f63aba6":"markdown","f7436c3b":"markdown","2eea5430":"markdown","12b4dd24":"markdown","cc56a668":"markdown","fce05330":"markdown","6d2fa8cd":"markdown","1700b492":"markdown","08e701a2":"markdown","be562381":"markdown","6e3e7721":"markdown","69a63cff":"markdown","d362df2c":"markdown"},"source":{"303410d9":"# Data handling and visualizing\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Machine Leaarning Libraries\nfrom sklearn.model_selection import train_test_split,cross_val_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import tree","1bfe819a":"df = pd.read_csv(\"..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")\ndf.head()","946f9be1":"df.columns","b6f775a9":"df.shape","822d8236":"df.info()","19e7c0f1":"df.describe()","2866a880":"df.isnull().sum()","fb1be861":"df.hist(figsize=(20,20),color=\"#44B1B1\");","6081ee51":"plt.figure(figsize=(20,10))\nsns.countplot(x = \"age\", hue = \"DEATH_EVENT\",data=df,palette=['#432371',\"#FAAE7B\"])","1dd2f2be":"#plt.figure(figsize=(20,10))\nsns.countplot(x = \"diabetes\", hue = \"DEATH_EVENT\",data=df,palette=['#CAF6D6',\"#DC74AD\"])","3d4d5d89":"## Plotting heatmap to identify all the relationships\n\nplt.figure(figsize=(20,20))\nsns.heatmap(df.corr(),cmap=\"coolwarm\",annot=True)","476d0ecf":"sns.pairplot(df,hue=\"DEATH_EVENT\")","92feaecb":"X = df.drop(['anaemia', 'creatinine_phosphokinase', \n            'diabetes', 'high_blood_pressure', \n            'platelets', 'sex', 'smoking', \n            'time', 'DEATH_EVENT'], axis=1) \ny = df['DEATH_EVENT']\n\n# Splitting the dataset into the Training set and Test set\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)","b5ca97ae":"## Feature Scaling to scale the values in a same range\n\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","2b48ac10":"kclassifier = KNeighborsClassifier(n_neighbors=5,metric=\"minkowski\",p=2)\nkclassifier.fit(X_train,y_train)","67fc7f9c":"y_pred_kn = kclassifier.predict(X_test)\n\nkac = cross_val_score(estimator=kclassifier,X=X_test,y = y_test,cv = 10)\nprint(\"Accuracy of KNN: \", str(round(kac.mean()*100,2))+\"%\")","0d243937":"cf_knn = confusion_matrix(y_pred_kn,y_test)\nsns.heatmap(cf_knn,annot=True)","2993e3b1":"dt = DecisionTreeClassifier()\ndt.fit(X_train,y_train)","603499dc":"y_pred_dt = dt.predict(X_test)\n\ndac = cross_val_score(estimator=dt,X=X_test,y = y_test,cv = 10)\nprint(\"Accuracy of Decision Tree: \", str(round(dac.mean()*100,2))+\"%\")","9aa1fca2":"cf_dt = confusion_matrix(y_pred_dt,y_test)\nsns.heatmap(cf_dt,annot=True)","1e184ee7":"## <h1 id=\"con\" style=\"background-color:#85B3F1;\" align=\"center\">Conclusions<\/h1>\n<br>\n<p style=\"font-size:20px\">This clearly shows that the <b>KNN algorithm<\/b> has better accuracy than <b>Decision Tree algorithm<\/b> for the prediction.<br>","780adc91":"###  <i>Observations<\/i>:\n<br>\n<p style=\"font-size:15px\">From the graph following insights can be drawn:<br><br>\n<li style=\"font-size:15px\">The column \"DEATH_EVENT\" is independent of 'anaemia', 'creatinine_phosphokinase','diabetes', 'high_blood_pressure','platelets', 'sex', 'smoking' and 'time' as they are negatively corelated.<\/li><br>\n<li style=\"font-size:15px\">The column \"DEATH_EVENT\" is dependent on 'age','anaemia','creatinine_phosphokinase', 'high_blood_pressure' and 'serum_creatinine' as they have positive vaues for the corelation.<\/li><\/p><br>","6f63aba6":"<li style=\"font-size:15px\">Importing Libraries<\/li> \n<li style=\"font-size:15px\">Analyzing Data<\/li> \n<li style=\"font-size:15px\">Visualizing Data<\/li> \n<li style=\"font-size:15px\">Data Modelling<\/li>\n<li style=\"font-size:15px\">Conclusions<\/li> ","f7436c3b":"### 2. Decision Tree Algorithm","2eea5430":"### <i>Observations:<\/i>\n<br>\n<li style=\"font-size:15px\">The column \"DEATH_EVENT\" is dependant on the age column.<\/li><br>","12b4dd24":"### <i>Observations:<\/i>\n<br>\n<li style=\"font-size:15px\">The column \"DEATH_EVENT\" is not dependant on the diabetes column.<\/li>\n<br>","cc56a668":"### <i>Observations:<\/i>\n<br>\n<li style=\"font-size:15px\">The dataset has no null values.<\/li>\n<li style=\"font-size:15px\">There are only numerical values in the dataset.<\/li>","fce05330":"## <h1 id=\"moddata\" style=\"background-color:#85B3F1;\" align=\"center\">Dataset Modeling<\/h1>","6d2fa8cd":"## <h1 style=\"background-color:#85B3F1\" align=\"center\" id=\"visdata\">Visualizing dataset<\/h1>","1700b492":"### 1. KNN Algorithm","08e701a2":"### <i>Observations:<\/i>\n<br>\n<p style=\"font-size:15px\">The graph clearly shows that there is overlapping of data points for the features so it is better to use Decision tree and KNN algorithms.<br>","be562381":"## <h1 style=\"background-color:#85B3F1\" align=\"center\">About Dataset<\/h1>\n\n<br>\n<p style=\"font-size:20px;\">This dataset is for the prediction of heart failure based on multiple attributes like diabetes, sex, smoking etc. Our task is to find a appropriate model that can easily predict the death event based on the attributes.<\/p>","6e3e7721":"## <h1 id=\"anadata\" style=\"background-color:#85B3F1;\" align=\"center\">Analyzing Dataset<\/h1>","69a63cff":"## <h1 id='implib' style=\"background-color:#85B3F1;\" align=\"center\">Importing Libraries<\/h1>","d362df2c":"## <h1 style=\"background-color:#85B3F1\" align=\"center\"> Contents<\/h1>"}}