{"cell_type":{"523ac7c1":"code","b38bb3ea":"code","b775ba89":"code","55981aca":"code","34284d65":"code","49b4573f":"code","1b8c3e0d":"code","d590a1c5":"code","883a9496":"code","56c34770":"code","ce36ff75":"code","5b1f4140":"code","f7d7e553":"code","861b267e":"code","f4589f84":"code","fec190de":"code","2a23ae82":"code","b4c1c8ef":"code","1df97a1a":"code","f27923c8":"code","63538214":"code","43e85190":"code","303dcfa1":"code","56b76e57":"code","bada100a":"code","77d385eb":"code","8c549518":"code","e2f99802":"code","b66478b2":"code","a5290f9f":"code","8b1b47ae":"markdown","1b5177a5":"markdown","b962e54c":"markdown","6a7fe473":"markdown","70aa7e2e":"markdown","26a13039":"markdown"},"source":{"523ac7c1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b38bb3ea":"train_data=pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv')\ntest_data=pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/aug_test.csv')","b775ba89":"train_data.head()","55981aca":"train_data.info()","34284d65":"train_data.isnull().sum()","49b4573f":"train_data.dropna(inplace=True)","1b8c3e0d":"train_data.nunique()","d590a1c5":"train_data.drop(columns=['enrollee_id','city','city_development_index'],inplace=True)","883a9496":"train_data.head()","56c34770":"train_data['relevent_experience'].replace(to_replace=['Has relevent experience','No relevent experience'],\n                                          value=[1,0],inplace=True)","ce36ff75":"train_data['enrolled_university'].replace(to_replace=['no_enrollment','Part time course','Full time course'],\n                                          value=[0,1,2],inplace=True)","5b1f4140":"from sklearn.preprocessing import LabelEncoder \nlabelencoder= LabelEncoder()\ntrain_data['education_level']=labelencoder.fit_transform(train_data['education_level'])\ntrain_data['major_discipline']=labelencoder.fit_transform(train_data['major_discipline'])\ntrain_data['experience']=labelencoder.fit_transform(train_data['experience'])\ntrain_data['company_size']=labelencoder.fit_transform(train_data['company_size'])\ntrain_data['company_type']=labelencoder.fit_transform(train_data['company_type'])\ntrain_data['last_new_job']=labelencoder.fit_transform(train_data['last_new_job'])\ntrain_data['gender']=labelencoder.fit_transform(train_data['gender'])\n\n","f7d7e553":"features=train_data.drop(columns=['target'])\ntargets=train_data.target","861b267e":"print(features.shape)\nprint(targets.shape)","f4589f84":"test_data.head()","fec190de":"test_data.dropna(inplace=True)","2a23ae82":"enID=test_data['enrollee_id']\ntype(enID)","b4c1c8ef":"test_data.drop(columns=['enrollee_id','city','city_development_index'],inplace=True)","1df97a1a":"test_data['relevent_experience'].replace(to_replace=['Has relevent experience','No relevent experience'],\n                                          value=[1,0],inplace=True)\ntest_data['enrolled_university'].replace(to_replace=['no_enrollment','Part time course','Full time course'],\n                                          value=[0,1,2],inplace=True)\ntest_data['education_level']=labelencoder.fit_transform(test_data['education_level'])\ntest_data['major_discipline']=labelencoder.fit_transform(test_data['major_discipline'])\ntest_data['experience']=labelencoder.fit_transform(test_data['experience'])\ntest_data['company_size']=labelencoder.fit_transform(test_data['company_size'])\ntest_data['company_type']=labelencoder.fit_transform(test_data['company_type'])\ntest_data['last_new_job']=labelencoder.fit_transform(test_data['last_new_job'])\ntest_data['gender']=labelencoder.fit_transform(test_data['gender'])\n","f27923c8":"test_data.head()","63538214":"test_data.info()","43e85190":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nx_train,x_val,y_train,y_val=train_test_split(features,targets,test_size=0.2, random_state=101)\n\n\nprint(x_train.shape,x_val.shape,y_train.shape,y_val.shape)","303dcfa1":"# from sklearn.linear_model import LinearRegression\n# lr=LinearRegression()\n# lr.fit(features,targets)\n\n# pred=lr.predict(test_data)\n\n","56b76e57":"from sklearn.ensemble import RandomForestRegressor\nmodel = RandomForestRegressor(n_estimators=1000)\nmodel.fit(features,targets)\npred=model.predict(test_data)","bada100a":"print(pred.mean())\nprint(pred.max())\nprint(pred.min())","77d385eb":"df=pd.DataFrame(columns=['enrollee_id','target'])\ndf['enrollee_id']=enID\ndf['target']=pred","8c549518":"df['target']=df['target'].apply(lambda x: 1 if x>0.3  else 0)","e2f99802":"df.head()","b66478b2":"df.to_csv('submission.csv',index=False)","a5290f9f":"pd.read_csv('.\/submission.csv')","8b1b47ae":"# Model ","1b5177a5":"# EDA","b962e54c":"**Leabeling all columns**","6a7fe473":"# **Define Teatures and terget value**","70aa7e2e":"#  **Test data processing**","26a13039":"**Drop NAN value**"}}