{"cell_type":{"eda74940":"code","7875623c":"code","fd3e62c7":"code","acf9fbd1":"code","d3ba7664":"code","3abcd0e2":"code","1987fcd5":"code","f2d31fb3":"code","0563dd7c":"code","10b1c13a":"code","218e0fc3":"code","6e90acf7":"code","b0b3dbde":"code","b5da0a58":"code","374882db":"code","e53751b3":"code","2a03341f":"code","75a5e91f":"code","7de7d14b":"code","3d9de787":"code","4a18cdf8":"code","42835cce":"code","957ce77e":"code","387785c9":"code","dec9acfd":"code","241e178b":"code","43b1c6cd":"code","cf39f069":"markdown","0361ee9b":"markdown","5d1a7e9c":"markdown","f65d3359":"markdown","68842305":"markdown","3c079b6c":"markdown","800b4e7c":"markdown","c5bcda73":"markdown","91f04b0e":"markdown","1a54ff4e":"markdown","1ebbfae5":"markdown","a3217085":"markdown","ad3963d1":"markdown","bcb3bf25":"markdown","cb491fc3":"markdown","ca2d2b2d":"markdown","9879ba84":"markdown","0733a5bb":"markdown","4c574e52":"markdown","8b046251":"markdown","523b640e":"markdown","9e0963be":"markdown","3f6a6fb4":"markdown","8abc7e5b":"markdown","80a50ece":"markdown","fc5b97f6":"markdown","fbb4fac3":"markdown","abc744ae":"markdown","6632654d":"markdown"},"source":{"eda74940":"import matplotlib.pyplot as plt\nimport mpl_toolkits.basemap\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport sklearn\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import make_scorer\nfrom sklearn.model_selection import GridSearchCV","7875623c":"training_db = pd.read_csv(\"..\/input\/atividade-regressao-PMR3508\/train.csv\")\ntesting_db = pd.read_csv(\"..\/input\/atividade-regressao-PMR3508\/train.csv\")","fd3e62c7":"training_db.head()","acf9fbd1":"training_db.info()","d3ba7664":"training_db['avg_bedrooms'] = training_db['total_bedrooms']\/training_db['total_rooms']","3abcd0e2":"plt.hist(training_db.avg_bedrooms)","1987fcd5":"plt.scatter(training_db.latitude, training_db.median_house_value)","f2d31fb3":"plt.scatter(training_db.longitude, training_db.median_house_value)","0563dd7c":"fig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nax.scatter(training_db.latitude, training_db.median_house_value, training_db.longitude)\nax.set_xlabel('Latitude')\nax.set_zlabel('Longitude')\nax.set_ylabel('Median House Value')","10b1c13a":"plt.scatter(training_db.latitude, training_db.longitude)","218e0fc3":"training_db.corr(method='pearson')","6e90acf7":"training_db.drop_duplicates(keep='first', inplace=True)\ntraining_db = training_db.drop(['population', 'Id', 'total_bedrooms', 'total_rooms', 'households'], axis=1)","b0b3dbde":"Y = training_db.pop('median_house_value').values.astype(float)\nX = training_db\nX = StandardScaler().fit_transform(X)","b5da0a58":"X","374882db":"XTraining, XTest, YTraining, YTest = train_test_split(X, Y, test_size = 0.20)","e53751b3":"YTraining","2a03341f":"kNN_parameters = {\"n_neighbors\": [i for i in range(1, 40)], 'weights': ['uniform', 'distance'], 'p': [1, 2]}\nkNN_best_estimator = GridSearchCV(KNeighborsRegressor(), kNN_parameters, cv=10)\nkNN_best_estimator.fit(XTraining, YTraining)\nkNN_best_estimator.best_estimator_","75a5e91f":"kNN = KNeighborsRegressor(n_neighbors=15)\nkNN.fit(XTraining, YTraining)\nYPredicted = kNN.predict(XTest)","7de7d14b":"np.sqrt(np.mean((np.log(np.abs(YPredicted)+1) - np.log(np.abs(YTest)+1))**2))","3d9de787":"linear_parameters = {\"fit_intercept\": [True, False], \"normalize\": [True, False]}\npossibleLR = GridSearchCV(LinearRegression(), linear_parameters, cv=10)\npossibleLR.fit(XTraining, YTraining)\npossibleLR.best_estimator_","4a18cdf8":"LinearRegressor = possibleLR.best_estimator_\nLinearRegressor.fit(XTraining, YTraining)\nYPredicted = LinearRegressor.predict(XTest)","42835cce":"np.sqrt(np.mean((np.log(np.abs(YPredicted)+1) - np.log(np.abs(YTest)+1))**2))","957ce77e":"test_db = pd.read_csv(\"..\/input\/atividade-regressao-PMR3508\/test.csv\")\ntest_db['bedrooms_per_room'] = test_db['total_bedrooms']\/test_db['total_rooms']\nIdTests = test_db.Id\nX_test = test_db.drop(['population', 'Id', 'total_bedrooms', 'total_rooms', 'households'], axis=1)\nX_test = StandardScaler().fit_transform(X_test)\n\nkNN.fit(X,Y)","387785c9":"predictions = kNN.predict(X_test)","dec9acfd":"submission = pd.DataFrame(IdTests)","241e178b":"submission['median_house_value'] = predictions","43b1c6cd":"submission.to_csv('submission.csv', index = False, index_label = 'Id')","cf39f069":"Looks like that 15 is our number!","0361ee9b":"There are no null fields within the dataset, so there is no need to edit the data.","5d1a7e9c":"The notebook shows how to predict the price of houses by implementing different methods of regression analysis in the CaliforniaHousing database.","f65d3359":"It means that kNN is more Accurate than a simple linear regressor!","68842305":"When implementing a kNN classifier we must choose a value for *k*, that is, the number of closest neighbors. Here we try to estimate the best possible value. Have in mind that if the number is too small you're probably underfitting your algorithm, and if it's too big, you're probably overfitting it...","3c079b6c":"And now, finally the cherry on the top of the cake: The classifiers","800b4e7c":"Well, it seems that these two charts alone don't bring us much information about geographic location. But what if we plot them together?","c5bcda73":"... so why don't we check it?!","91f04b0e":"# Classifiers","1a54ff4e":"Geographic location probably has also something to do with house pricing in the state...","1ebbfae5":"Since kNN is our best classifier here, we'll use it to submit our results!","a3217085":"Wow, 0.42290... \nThat's way higher","ad3963d1":"# CaliforniaHousing - Regression Analysis\nBy: Eduardo Netto","bcb3bf25":"## kNN","cb491fc3":"Thanks!","ca2d2b2d":"## Linear Regressor","9879ba84":"Looks like we can see California's shape here, with two main hotspot of data, maybe LA and SF regions. And not surprisingly that is where we find the higher median house values.","0733a5bb":"Yet, a very common indicator used in housing surveys is the average number bedrooms per household. Thus we add here the indicator as _avg_bedrooms_ by simply dividing the number of total_bedrooms by the number of households.","4c574e52":"And last (but not least), normalize the data","8b046251":"Here we implement the classifiers and compare them","523b640e":"And our RMSLE is:","9e0963be":"# Data Prep & Visualization","3f6a6fb4":"Now, moving on, we must remove duplicated data in order to avoid double counting and drop less relevant attributes","8abc7e5b":"Yep, that is Cali. Just checking... #WestCoast","80a50ece":"# Submission","fc5b97f6":"But first, we have to split X in training data and test data","fbb4fac3":"Now, we evaluate our RMSLE again:","abc744ae":"Checking correlations:","6632654d":"0.31024... Seems good!"}}