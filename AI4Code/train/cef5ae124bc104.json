{"cell_type":{"a689c0fe":"code","a42f4e5c":"code","00bfc569":"code","a64fc0c6":"code","7dc7ab71":"code","81035784":"code","57be35f4":"code","691d7269":"code","e3665b41":"code","cd0be10f":"code","75a4a740":"code","54eb4e9f":"code","cfa4e3a1":"code","f2f7a2e0":"code","99ab1315":"code","349236c5":"code","ff38995c":"code","059e707b":"code","9f54fbc6":"code","24e76700":"code","b35739a4":"code","48a44c19":"markdown","603a8d9d":"markdown","ea9a870b":"markdown","cf53692a":"markdown"},"source":{"a689c0fe":"'''This is a playground with data from https:\/\/www.kaggle.com\/miroslavsabo\/paintings\n'''\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a42f4e5c":"people_file_location = 'paintings.csv'","00bfc569":"row_data = pd.read_csv('..\/input\/paintings\/paintings.csv')","a64fc0c6":"print(row_data.shape)","7dc7ab71":"print(row_data.head())","81035784":"print(row_data.columns)","57be35f4":"# art movements are\n\nart_movements = np.array(row_data['art movement'].drop_duplicates())\nfor movement in art_movements:\n    print(movement)","691d7269":"# artists for each art movement\n\npaintings_in_movement = pd.DataFrame(row_data)\npaintings_in_movement = paintings_in_movement.sort_values('art movement', ascending=True )\nprint(paintings_in_movement[['art movement','artist']])","e3665b41":"print(row_data.head())","cd0be10f":"pic_row_data = row_data.iloc[: , :48]\n#print(type(pic_row_data))\n#print(pic_row_data.columns)\n\nfig, ax = plt.subplots()\nplt.imshow(pic_row_data)\nax.set_xlabel('paintings')\nax.set_ylabel('paintings scores')\nax.set_xticks([]) \nax.set_yticks([]) \nplt.show()","75a4a740":"#scores_data = row_data.iloc[:,:51]\n#print(scores_data.columns)","54eb4e9f":"scores_data = pd.DataFrame(row_data)","cfa4e3a1":"# Calculate score of 48 personal votes\nfor i, row in scores_data.iterrows():\n        scores_data.loc[i ,'score'] = round(row[0:48].mean(), 2)  ","f2f7a2e0":"# Drop the 48 columns of personal votes\ncols_to_drop = ['S1', 'S2', 'S3', 'S4', 'S5', 'S6', 'S7', 'S8', 'S9', 'S10', 'S11',\n           'S12', 'S13', 'S14', 'S15', 'S16', 'S17', 'S18', 'S19', 'S20', 'S21',\n           'S22', 'S23', 'S24', 'S25', 'S26', 'S27', 'S28', 'S29', 'S30', 'S31',\n           'S32', 'S33', 'S34', 'S35', 'S36', 'S37', 'S38', 'S39', 'S40', 'S41',\n           'S42', 'S43', 'S44', 'S45', 'S46', 'S47', 'S48']\n\nthin_data = scores_data.drop(columns=cols_to_drop)","99ab1315":"# top 5 paintings \nthin_data.sort_values('score', ascending=False)","349236c5":"print(thin_data.head())","ff38995c":"# top scored art movements\nart_movements_score = thin_data.groupby('art movement').sum()\nart_movements_score = art_movements_score.sort_values('score', ascending=False)\nprint(art_movements_score)","059e707b":"# Score of each category's artists\n\nscore_by_art_movement = thin_data.groupby('art movement')['score'].sum()\nscore_by_art_movement = score_by_art_movement.sort_values()\n\nprint(type(score_by_art_movement))\nprint(score_by_art_movement)\n","9f54fbc6":"fig, ax = plt.subplots()\n\nplt.plot(score_by_art_movement, marker = 'x')\nax.tick_params(rotation=90)\n\nplt.show()","24e76700":"\nprint(type(score_by_art_movement))\nprint(score_by_art_movement)\nprint(score_by_art_movement.index)\nprint(score_by_art_movement.values)\n\n# make a bar plot\n#fig, ax = plt.subplots()\n#ax.bar(x = score_by_art_movement.index, y = score_by_art_movement.values)\n#plt.show()","b35739a4":"# art movements are\n\nfig, ax = plt.subplots()\nax.text(1,1,art_movements[0])\nax.text(1,1.1,art_movements[1])\nax.text(1,1.2,art_movements[2])\nax.text(1,1.3,art_movements[3])\nax.text(1,1.4,art_movements[4])\nax.text(1,1.5,art_movements[5])\nax.text(1,1.6,art_movements[6])\nax.text(1,1.7,art_movements[7])\nax.text(1,1.8,art_movements[8])\nax.text(1,1.9,art_movements[9])\nax.text(1,2,art_movements[10])\nax.set_axis_off()\nfig.show()","48a44c19":"# Load Data","603a8d9d":"# Show Data","ea9a870b":"# Have a look on the data\n* row_data\n* type: pd.Dataframe","cf53692a":"# Improve data\n* scores_data\n* thin data\n* type: pd.Dataframe"}}