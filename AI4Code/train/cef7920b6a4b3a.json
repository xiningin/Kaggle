{"cell_type":{"3f5e4354":"code","61af0e42":"code","8be12944":"code","30a6612a":"code","f2ebc0eb":"code","0977314d":"code","6b01d124":"code","71ff7d00":"code","4dc44087":"code","07b02d17":"code","56ad6154":"code","46fa4ad2":"code","5f99286c":"code","db62850a":"code","9bd1185a":"code","b2a3fe3b":"code","1f789661":"code","bf9ef95d":"code","0880f8f8":"code","3af27f37":"code","0d06ff8f":"code","a079e502":"code","1ae04daa":"code","e048d2e3":"code","ab3a44a2":"code","6fb29b6a":"code","c3b40b81":"code","e12e6a8e":"code","5e06fe6e":"code","a8a90cd0":"code","ccbd60c7":"code","58fd8133":"code","cf576b21":"code","ea344776":"code","f88b13b8":"code","2f862a40":"code","775856ce":"code","71815364":"code","a0901b9e":"code","7c7e12d8":"code","362d4c69":"code","3b14ab61":"code","4b052161":"code","c80accef":"code","320049b0":"code","c26a02c6":"code","077c88da":"code","96c44e12":"code","5df1eed7":"code","4eab488a":"code","9f261d4d":"code","2a5527b5":"code","eae0028c":"code","41ffcc0b":"code","622578aa":"code","37ccf4df":"code","18eb10ec":"code","7f4a0283":"code","09aa8150":"code","95ff2518":"code","a17ea1e1":"code","0ac99289":"code","d52cc902":"code","b870718a":"code","35fb75a5":"code","cadcd540":"code","5c90df34":"code","99fa9521":"code","89b4ff6e":"code","f5c9203e":"code","f7cb9e5d":"code","1d17a77b":"code","401f5a27":"code","d1839ccd":"code","5f1c7d94":"code","93be9ac2":"code","b9f23f41":"code","26212664":"code","d02ff7bc":"code","ce16d033":"code","665c6e55":"code","c11bb368":"code","611d7ef8":"code","8d4aea96":"code","0f452977":"code","e4fe5759":"code","ca334175":"code","ddcd2627":"code","030ae57e":"code","e01e94be":"code","c0a12c2f":"code","b72110dc":"code","7c10dedb":"code","319eb945":"code","4efc46ce":"code","a148d90e":"code","7c007d4b":"code","4c0c831f":"code","08776525":"code","67c52551":"code","68f639d0":"code","71e9f6ee":"code","27556ebf":"markdown","e4afde98":"markdown","0dbc2456":"markdown","d50bbd73":"markdown","3e3ffd76":"markdown","aa77ebaf":"markdown","d09e586a":"markdown","601cc165":"markdown","d3d19a18":"markdown","98ad6ebe":"markdown","67745662":"markdown","8643d35b":"markdown","fc4984d2":"markdown","6462cd9d":"markdown","f50f6936":"markdown","4f5a256a":"markdown","0cf8c1ea":"markdown","cbe4e884":"markdown","51abb0d4":"markdown","16b63861":"markdown","d8a5a0bd":"markdown","cdf6a88d":"markdown","0d4a5935":"markdown","63cf6b6a":"markdown","bcaba708":"markdown","562c9348":"markdown","53c36d2f":"markdown","bfe23260":"markdown","57c7d399":"markdown","3c9152d8":"markdown","829e8ae6":"markdown","96bf9423":"markdown","7d9c51bd":"markdown","da660338":"markdown","ef6dc9ac":"markdown","56365352":"markdown","03dae7e0":"markdown","418b3b5c":"markdown","60eee9f5":"markdown","77f9855a":"markdown","cce72a69":"markdown","45dd7c01":"markdown","4a41045c":"markdown","49da541e":"markdown","a7845026":"markdown","c834823c":"markdown","f5d3beed":"markdown","12b0bbc0":"markdown","12797077":"markdown","4af5f5c1":"markdown","e9c13514":"markdown","52fcc3f1":"markdown","8c25f306":"markdown","5345a018":"markdown","c3f7051a":"markdown","862cc506":"markdown","fa11301d":"markdown","4371f52d":"markdown","4052e931":"markdown","28f1b88a":"markdown","9369e9ac":"markdown","b97e8ade":"markdown","5a369ccd":"markdown","8e57ebef":"markdown","a0807e29":"markdown","154bd912":"markdown","84718117":"markdown","dc5e3891":"markdown","b1b4c2c2":"markdown","38206d1e":"markdown","bb80ea9e":"markdown","1230178b":"markdown","809747c2":"markdown","760e2cd0":"markdown","331d4a71":"markdown","049a7df1":"markdown","cb1be085":"markdown","83232f80":"markdown","d26144b3":"markdown","63f463cd":"markdown","7ae6e4ca":"markdown"},"source":{"3f5e4354":"pip install googlemaps","61af0e42":"import requests\nimport time\nimport folium\nimport googlemaps\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimport matplotlib.cm as cm\nimport matplotlib.colors as colors\nfrom sklearn.cluster import KMeans","8be12944":"pd.options.mode.chained_assignment = None","30a6612a":"def read_json_google_places(json_dict):\n    '''\n    tes a JSON dict query result from google places and returns a dataframe\n    ak'''\n    places_list= []\n    results = json_dict[\"results\"]\n    \n    for g in results:\n        if ('rating' in g) and  ('price_level' not in g):\n            places_list.append([(\n            g['business_status'],\n            g['name'],\n            g['types'],\n            g['geometry']['location']['lat'], \n            g['geometry']['location']['lng'],\n            g['rating'],\n            g['user_ratings_total'],\n            'N\/A',\n            g['place_id']\n                )])\n            \n            \n        elif ('rating' in g) and ('price_level' in g):\n            places_list.append([(\n            g['business_status'],\n            g['name'],\n            g['types'],\n            g['geometry']['location']['lat'], \n            g['geometry']['location']['lng'],\n            g['rating'],\n            g['user_ratings_total'],\n            g['price_level'],\n            g['place_id']\n                )])\n        else:\n            pass\n                        \n    nearby_places = pd.DataFrame([x for places_list in places_list for x in places_list])\n    nearby_places.columns = ['Business Status',\n                'Name',\n                'Categories',\n                'Lat', \n                'Long', \n                'Rating',\n                'User Review Count',\n                'Price Level',\n                'Place Id']\n\n    return(nearby_places)","f2ebc0eb":"def two_gplace_results_one_df(type, lat, long):\n    '''\n    takes a text query and establisment type(refer to google api documentation for types accepted)\n    takes the latitude and longitude of an area and the radius you want to search in\n    returns the first 2 pages of results in a single dataframe\n    '''\n    first_result = gmaps.places_nearby(type = type, location = lat + ', ' + long, rank_by = 'distance')\n    df1 = read_json_google_places(first_result)\n    pagetoken = first_result['next_page_token']\n    time.sleep(2)\n    second_result = gmaps.places_nearby(type = type, page_token=pagetoken)\n    df2 = read_json_google_places(second_result)\n    df_temp = [df1,df2]\n    final_df = pd.concat(df_temp, ignore_index=True)\n    return final_df","0977314d":"def three_gplace_results_one_df(type, lat, long):\n    '''\n    takes a text query and establisment type(refer to google api documentation for types accepted)\n    takes the latitude and longitude of an area and the radius you want to search in\n    returns the first 3 pages of results in a single dataframe\n    '''\n    first_result = gmaps.places_nearby(type = type, location = lat + ', ' + long, rank_by = 'distance')\n    df1 = read_json_google_places(first_result)\n    pagetoken = first_result['next_page_token']\n    time.sleep(2)\n    second_result = gmaps.places_nearby(type = type, page_token=pagetoken)\n    df2 = read_json_google_places(second_result)\n    pagetoken2 = second_result['next_page_token']\n    time.sleep(2)\n    third_result = gmaps.places_nearby(type = type, page_token=pagetoken2)\n    df3 = read_json_google_places(third_result)\n    df_temp = [df1,df2, df3]\n    final_df = pd.concat(df_temp, ignore_index=True)\n    return final_df","6b01d124":"def get_gplace_results_df(type, lat, long):\n    '''takes a string query, an establishment type (refer to google places API types), the latitude and longitude of a \n    place and the radius around it in which you wish to search and returns a Pandas Dataframe with the results'''\n    result = gmaps.places_nearby(type = type, location = lat + ', ' + long, rank_by = 'distance')\n    df = read_json_google_places(result)\n    return df","71ff7d00":"def create_folium_map_with_markers(data, name_column, location_lat, location_long, \\\n                                   lat_column, long_column, label_column, zoom_level):\n    '''uses data from a dataframe to create a map with blue markers, need to specify dataframe, the column name for label,\n    the latitude and longitude of where you want the map to show, the name of the long and lat columns in the dataframe,\n    the name of secondary label column, and level of zoom you want it to show initially'''\n    map_ = folium.Map(location=[location_lat, location_long], zoom_start=zoom_level)\n\n    for lat, lng, label, name in zip(data[lat_column], data[long_column], data[label_column], data[name_column]):\n        folium.CircleMarker(\n            [lat, lng],\n            radius=5,\n            popup=str(name) + ', ' + str(label),\n            fill = True,\n            fill_color = 'blue',\n            fill_opacity=0.9,\n            color= 'blue',\n            parse_html=False).add_to(map_)  \n    \n    return map_","4dc44087":"def get_long_lat(location_string):\n    '''returns to variables associated with the latitude and longitude of a string location inserted as a parameter\n    uses google geocode API'''\n    results = gmaps.geocode(location_string)\n    lat = str(results[0]['geometry']['location']['lat'])\n    long = str(results[0]['geometry']['location']['lng'])\n    return lat, long","07b02d17":"def get_df_locinfo_from_location(loc_string, type):\n    '''returns 3 items: A dataframe, a latitude string, and a longitude string by entering a location in the form of a \n    string, a string query, an establishment type (refer to google places API types), and a radius in which to search\n    using google places API'''\n    lat, long = get_long_lat(loc_string)\n    df = get_gplace_results_df(type = type, lat = lat, long = long)\n    return df, lat, long","56ad6154":"def get_df_locinfo_from_location_2pages(loc_string, type):\n    '''returns 3 items: A dataframe, a latitude string, and a longitude string by entering a location in the form of a \n    string, a string query, an establishment type (refer to google places API types), and a radius in which to search\n    using google places API'''\n    lat, long = get_long_lat(loc_string)\n    df = two_gplace_results_one_df(type = type, lat = lat, long = long)\n    return df, lat, long","46fa4ad2":"def get_df_locinfo_from_location_3pages(loc_string, type):\n    '''returns 3 items: A dataframe, a latitude string, and a longitude string by entering a location in the form of a \n    string, a string query, an establishment type (refer to google places API types), and a radius in which to search\n    using google places API'''\n    lat, long = get_long_lat(loc_string)\n    df = three_gplace_results_one_df(type = type, lat = lat, long = long)\n    return df, lat, long","5f99286c":"def create_folium_map_with_colored_clusters(data, num_clusters, name_column, location_lat, location_long, \\\n                                   lat_column, long_column, label_column, cluster_column, zoom_level):\n    '''uses data from a dataframe and a specified number of clusters to create color coded markers \n    to group results by location, need to specify dataframe, the column name for label,\n    the latitude and longitude of where you want the map to show, the name of the long and lat columns in the dataframe,\n    the name of secondary label column, and level of zoom you want it to show initially'''\n    map_clusters = folium.Map(location=[location_lat, location_long], tiles='Stamen Toner', zoom_start=zoom_level)\n    \n    x = np.arange(num_clusters)\n    ys = [i + x + (i*x)**2 for i in range(num_clusters)]\n    colors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\n    rainbow = [colors.rgb2hex(i) for i in colors_array]\n\n    for lat, lng, label, name, cluster in zip(data[lat_column], data[long_column],\\\n                                          data[label_column], data[name_column], data[cluster_column]):\n        label = folium.Popup(str(name) + ', ' + str(label) + ' C:' + str(cluster), parse_html=True)\n        folium.CircleMarker(\n            [lat, lng],\n            radius=5,\n            popup=label,\n            color=rainbow[cluster-1],\n            fill=True,\n            fill_color=rainbow[cluster-1],\n            fill_opacity=0.9).add_to(map_clusters)\n       \n    return map_clusters","db62850a":"def cluster_data(data, num_of_clusters):\n    '''Uses Kmeans model from scikitlearn to cluster data based on location and add that info to a dataframe\n    where data is the pandas dataframe and num_of_clusters is an integer specifying the number of clusters you want'''\n    kclusters = num_of_clusters\n    df_grouped = data.drop(['Name','Rating', 'User Review Count', 'Business Status', 'Food', 'Place Id', 'Price Level'], 1)\n    kmeans = KMeans(n_clusters=kclusters, random_state=42).fit(df_grouped)\n    df = data.insert(0, 'Cluster Labels', kmeans.labels_)\n    return df ","9bd1185a":"def drop_non_operational(data):\n    '''takes a dataframe made from df creation methods above and drops non operational establishments'''\n    df = data.loc[data['Business Status'] == 'OPERATIONAL']\n    df.reset_index(inplace=True)\n    df.drop('index', 1, inplace = True)\n    return df","b2a3fe3b":"def convert_categories_to_food(data):\n    '''takes a dataframe made from df creation method and searches categories column for food\n    it renames the category column to food and lists the value of Yes or No for each venue as to wether or not food\n    was listed in their categories'''\n    temp_list = []\n    df = data.rename(columns = {'Categories':'Food'})\n    for g in df['Food']:\n        if 'food' in g:\n            temp_list.append('Yes')\n        else: \n            temp_list.append('No')\n        \n    i = 0\n    for x in temp_list:\n        df['Food'][i] =  x\n        i += 1\n    \n    return df","1f789661":"def format_df(data):\n    '''Take a dataframe a performs 3 methods I created above on it to convert that dataframe into my desired output'''\n    df = drop_non_operational(data)\n    df_1 = convert_categories_to_food(df)\n    cluster_data(df_1, 5)\n    return df_1","bf9ef95d":"def drop_cluster(data, cluster_num):\n    '''drops a cluster from a data frame where data is the dataframe and cluster_num \n    is the cluster label'''\n    df = data.loc[data['Cluster Labels'] != cluster_num]\n    df.reset_index(inplace=True)\n    df.drop('index', 1, inplace = True)\n    return df","0880f8f8":"def get_cluster(data, cluster_num):\n    '''returns a dataframe consisting of a single cluster where data is the dataframe and \n    cluster_num is the cluster label'''\n    df = data.loc[data['Cluster Labels'] == cluster_num]\n    df.reset_index(inplace=True)\n    df.drop('index', 1, inplace = True)\n    return df","3af27f37":"def add_location_label_to_df(df, label_str):\n    '''Adds a string label to a dataframe for every entry in the data frame in a column called\n    Location Zone where df is the dataframe you want to add label to and label_str is the label'''\n    df_1 = df\n    list_x = []\n    for x in df_1['Name']:\n        list_x.append(label_str)\n    df_1['Location Zone'] = list_x\n    return df_1","0d06ff8f":"def drop_ratings_under_three(df):\n    norm_rating_df = df[df['Rating'] > 3]\n    return norm_rating_df","a079e502":"def drop_review_count_over_3500(df):\n    norm_review_df = df[df['User Review Count'] < 3500]\n    return norm_review_df","1ae04daa":"from kaggle_secrets import UserSecretsClient\nuser_secrets = UserSecretsClient()\nsecret_value = user_secrets.get_secret(\"mapsapi\")\n\nkey = secret_value #put your google maps api key here to use this notebook :)","e048d2e3":"gmaps = googlemaps.Client(key)","ab3a44a2":"NE_bars, NE_lat, NE_long = get_df_locinfo_from_location_3pages(loc_string = 'Chamblee, Ga', type = 'bar')","6fb29b6a":"NE_bars.head()","c3b40b81":"NE_1 = drop_non_operational(NE_bars)","e12e6a8e":"NE_df_formatted = convert_categories_to_food(NE_1)","5e06fe6e":"cluster_data(NE_df_formatted, 5)","a8a90cd0":"NE_df_formatted.head()","ccbd60c7":"create_folium_map_with_colored_clusters(data = NE_df_formatted, num_clusters = 5,name_column = 'Name', \\\n                                        location_lat= NE_lat, location_long = NE_long, \\\n                                        lat_column = 'Lat', long_column = 'Long', label_column = 'Rating', \\\n                                        cluster_column = 'Cluster Labels', zoom_level = 12)","58fd8133":"NW_df, NW_lat, NW_long = get_df_locinfo_from_location_3pages(loc_string = 'Kingswood, Ga', type = 'bar')","cf576b21":"NW_df_formatted = format_df(NW_df)","ea344776":"create_folium_map_with_colored_clusters(data = NW_df_formatted, num_clusters = 5, name_column = 'Name', \\\n                                        location_lat= NW_lat, location_long = NW_long, \\\n                                        lat_column = 'Lat', long_column = 'Long', label_column = 'Rating', \\\n                                        cluster_column = 'Cluster Labels', zoom_level = 12)","f88b13b8":"SW_df, SW_lat, SW_long = get_df_locinfo_from_location_3pages(loc_string = 'East Point, Ga', type = 'bar')","2f862a40":"SW_df_formatted = format_df(SW_df)","775856ce":"create_folium_map_with_colored_clusters(data = SW_df_formatted, num_clusters = 5, name_column = 'Name', \\\n                                        location_lat= SW_lat, location_long = SW_long, \\\n                                        lat_column = 'Lat', long_column = 'Long', label_column = 'Rating', \\\n                                        cluster_column = 'Cluster Labels', zoom_level = 12)","71815364":"SE_df, SE_lat, SE_long = get_df_locinfo_from_location_3pages(loc_string = 'Decatur, Ga', type = 'bar')","a0901b9e":"SE_df_formatted = format_df(SE_df)","7c7e12d8":"create_folium_map_with_colored_clusters(data = SE_df_formatted, num_clusters = 5, name_column = 'Name', \\\n                                        location_lat= SE_lat, location_long = SE_long, \\\n                                        lat_column = 'Lat', long_column = 'Long', label_column = 'Rating', \\\n                                        cluster_column = 'Cluster Labels', zoom_level = 12)","362d4c69":"MT_df, MT_lat, MT_long = get_df_locinfo_from_location_3pages(loc_string = 'Midtown, Ga',  type = 'bar')","3b14ab61":"MT_df_formatted = format_df(MT_df)","4b052161":"create_folium_map_with_colored_clusters(data = MT_df_formatted, num_clusters = 5, name_column = 'Name', \\\n                                        location_lat= MT_lat, location_long = MT_long, \\\n                                        lat_column = 'Lat', long_column = 'Long', label_column = 'Rating', \\\n                                        cluster_column = 'Cluster Labels', zoom_level = 12)","c80accef":"DT_df, DT_lat, DT_long = get_df_locinfo_from_location_3pages(loc_string = 'Downtown Atlanta, Ga', type = 'bar')","320049b0":"DT_df_formatted = format_df(DT_df)","c26a02c6":"create_folium_map_with_colored_clusters(data = DT_df_formatted, num_clusters = 5, name_column = 'Name', \\\n                                        location_lat= DT_lat, location_long = DT_long, \\\n                                        lat_column = 'Lat', long_column = 'Long', label_column = 'Rating', \\\n                                        cluster_column = 'Cluster Labels', zoom_level = 12)","077c88da":"DT_df_formatted = add_location_label_to_df(DT_df_formatted, 'Downtown')\nMT_df_formatted = add_location_label_to_df(MT_df_formatted, 'Midtown')\nSE_df_formatted = add_location_label_to_df(SE_df_formatted, 'SE')\nSW_df_formatted = add_location_label_to_df(SW_df_formatted, 'SW')\nNE_df_formatted = add_location_label_to_df(NE_df_formatted, 'NE')\nNW_df_formatted = add_location_label_to_df(NW_df_formatted, 'NW')","96c44e12":"DT_df_formatted.head()","5df1eed7":"list_dfs = [DT_df_formatted,MT_df_formatted,SE_df_formatted, SW_df_formatted, NE_df_formatted, NW_df_formatted]","4eab488a":"all_bars_atlanta = pd.concat(list_dfs)","9f261d4d":"all_bars_atlanta.shape","2a5527b5":"food_order = ['Yes', 'No']","eae0028c":"price_level_order = ['N\/A', 1, 2, 3, 4]","41ffcc0b":"location_order = ['SE', 'SW', 'NE', 'NW', 'Downtown', 'Midtown']","622578aa":"food_labels=all_bars_atlanta['Food'].value_counts().index\nfood_values=all_bars_atlanta['Food'].value_counts().values\n\nplt.figure(figsize = (8, 5))\nax = sns.barplot(x=food_labels, y=food_values, order = food_order)\nfor i, p in enumerate(ax.patches):\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2., height + 0.1, food_values[i],ha=\"center\")\n    \nax.set(ylabel='# of Bars', title = 'Food Served?')","37ccf4df":"sns.countplot(all_bars_atlanta['Price Level'], order = price_level_order).set(xlabel='Price Level', ylabel='# of Bars', title = 'Price Level by Zone')","18eb10ec":"sns.boxplot(y = 'Rating', data = all_bars_atlanta).set(title = 'Overall Bar Ratings')","7f4a0283":"sns.boxplot(x = 'Location Zone', y = 'Rating', data = all_bars_atlanta, order = location_order).set(title = 'Bar Ratings by Zone')","09aa8150":"sns.boxplot(x = 'Location Zone', y = 'User Review Count', data = all_bars_atlanta, order = location_order).set(title = 'User Review Count by Zone')","95ff2518":"sns.countplot(all_bars_atlanta['Location Zone'], order = location_order).set(xlabel='Location', ylabel='# of Bars', title = 'Bar Count by Zone')","a17ea1e1":"sns.countplot(SE_df_formatted['Food'], order = food_order).set(ylabel = '# of bars', title = 'Southeast Food or Not')","0ac99289":"sns.countplot(SE_df_formatted['Price Level'], order = price_level_order).set(ylabel = '# of bars', title = 'Southeast Price Level')","d52cc902":"sns.boxplot(x = 'Cluster Labels', y = 'Rating', data = SE_df_formatted).set(title = 'Southeast Reviews')","b870718a":"sns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = SE_df_formatted).set(title = 'Southeast User Review Count')","35fb75a5":"sns.countplot(SE_df_formatted['Cluster Labels']).set(xlabel='Cluster', ylabel='# of Bars',\\\n                                                                             title = 'Southeast Bar Count')","cadcd540":"sns.countplot(SW_df_formatted['Food'], order = food_order).set(ylabel = '# of bars', title = 'Southwest Food or Not')","5c90df34":"sns.countplot(SW_df_formatted['Price Level'], order = price_level_order).set(ylabel = '# of bars', title = 'Southwest Price Level')","99fa9521":"sns.boxplot(x = 'Cluster Labels', y = 'Rating', data = SW_df_formatted).set(title = 'Southwest Ratings')","89b4ff6e":"sns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = SW_df_formatted).set(title = 'Southwest User Review Count')","f5c9203e":"sns.countplot(SW_df_formatted['Cluster Labels']).set(xlabel='Cluster', ylabel='# of Bars', title = 'Southwest Bar Count')","f7cb9e5d":"sns.countplot(NE_df_formatted['Food'], order = food_order).set(ylabel = '# of bars', title = 'Northeast Food or Not')","1d17a77b":"sns.countplot(NE_df_formatted['Price Level'], order = price_level_order).set(ylabel = '# of bars', title = 'Northeast Price Level')","401f5a27":"sns.boxplot(x = 'Cluster Labels', y = 'Rating', data = NE_df_formatted).set(title = 'Northeast Ratings')","d1839ccd":"sns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = NE_df_formatted).set(title = 'Northeast User Review Count')","5f1c7d94":"sns.countplot(NE_df_formatted['Cluster Labels']).set(xlabel='Cluster', ylabel='# of Bars', title = 'Northeast Bar Count')","93be9ac2":"sns.countplot(NW_df_formatted['Food'], order = food_order).set(title='Northwest Food or Not')","b9f23f41":"sns.countplot(NW_df_formatted['Price Level'], order = price_level_order).set(ylabel = '# of bars', title = 'Northwest Price Level')","26212664":"sns.boxplot(x = 'Cluster Labels', y = 'Rating', data = NW_df_formatted).set(title = 'Northwest Ratings')","d02ff7bc":"sns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = NW_df_formatted).set(title = 'Northwest User Review Count')","ce16d033":"sns.countplot(NW_df_formatted['Cluster Labels']).set(xlabel='Cluster', ylabel='# of Bars', title = 'Northwest Bar Count')","665c6e55":"sns.countplot(DT_df_formatted['Food'], order = food_order).set(ylabel = '# of bars', title = 'Downtown Food or Not')","c11bb368":"sns.countplot(DT_df_formatted['Price Level'], order = price_level_order).set(ylabel = '# of bars', title = 'Downtown Price Level')","611d7ef8":"sns.boxplot(x = 'Cluster Labels', y = 'Rating', data = DT_df_formatted).set(title = 'Downtown Ratings')","8d4aea96":"sns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = DT_df_formatted).set(title= 'Downtown User Review Count')","0f452977":"sns.countplot(DT_df_formatted['Cluster Labels']).set(xlabel='Cluster', ylabel='# of Bars', title = 'Downtown Bar Count')","e4fe5759":"sns.countplot(MT_df_formatted['Food'], order = food_order).set(ylabel = '# of bars', title = 'Midtown Food or Not')","ca334175":"sns.countplot(MT_df_formatted['Price Level'], order = price_level_order).set(ylabel = '# of bars', title = 'Midtown Price Level')","ddcd2627":"sns.boxplot(x = 'Cluster Labels', y = 'Rating', data = MT_df_formatted).set(title = 'Midtown Ratings')","030ae57e":"sns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = MT_df_formatted).set(title = 'Midtown User Review Count')","e01e94be":"sns.countplot(MT_df_formatted['Cluster Labels']).set(xlabel='Cluster', ylabel='# of Bars', title = 'Midtown Bars Count')","c0a12c2f":"fig, (ax1, ax2, ax3, ax4, ax5, ax6) = plt.subplots(1,6, figsize=(16,8), sharey=True)\n\nsns.boxplot(x = 'Cluster Labels', y = 'Rating', data = SE_df_formatted, ax=ax1).set(title = 'Southeast')\nsns.boxplot(x = 'Cluster Labels', y = 'Rating', data = SW_df_formatted, ax=ax2).set(title = 'Southwest')\nsns.boxplot(x = 'Cluster Labels', y = 'Rating', data = NE_df_formatted, ax=ax3).set(title = 'Northeast')\nsns.boxplot(x = 'Cluster Labels', y = 'Rating', data = NW_df_formatted, ax=ax4).set(title = 'Northwest')\nsns.boxplot(x = 'Cluster Labels', y = 'Rating', data = DT_df_formatted, ax=ax5).set(title = 'Downtown')\nsns.boxplot(x = 'Cluster Labels', y = 'Rating', data = MT_df_formatted, ax=ax6).set(title = 'Midtown')\n\nax1.set_ylabel(\"\")\nax2.set_ylabel(\"\")\nax3.set_ylabel(\"\")\nax4.set_ylabel(\"\")\nax5.set_ylabel(\"\")\nax6.set_ylabel(\"\")\n\nax1.set_xlabel(\"\")\nax2.set_xlabel(\"\")\nax3.set_xlabel(\"\")\nax4.set_xlabel(\"\")\nax5.set_xlabel(\"\")\nax6.set_xlabel(\"\")\n\nfig.suptitle('Bar Ratings by Zone', fontsize=16, ha='center')\nfig.text(0.51, 0.07, 'Cluster Labels', ha='center', fontsize=14)\nfig.text(0.08, 0.5, 'Rating', va='center', rotation='vertical', fontsize=14)\nplt.show()","b72110dc":"SE_low_reviews_dropped = drop_ratings_under_three(SE_df_formatted)","7c10dedb":"SW_low_reviews_dropped = drop_ratings_under_three(SW_df_formatted)\nNE_low_reviews_dropped = drop_ratings_under_three(NE_df_formatted)\nNW_low_reviews_dropped = drop_ratings_under_three(NW_df_formatted)\nDT_low_reviews_dropped = drop_ratings_under_three(DT_df_formatted)\nMT_low_reviews_dropped = drop_ratings_under_three(MT_df_formatted)","319eb945":"fig, (ax1, ax2, ax3, ax4, ax5, ax6) = plt.subplots(1,6, figsize=(16,8), sharey=True)\n\nsns.boxplot(x = 'Cluster Labels', y = 'Rating', data = SE_low_reviews_dropped, ax=ax1).set(title = 'Southeast')\nsns.boxplot(x = 'Cluster Labels', y = 'Rating', data = SW_low_reviews_dropped, ax=ax2).set(title = 'Southwest')\nsns.boxplot(x = 'Cluster Labels', y = 'Rating', data = NE_low_reviews_dropped, ax=ax3).set(title = 'Northeast')\nsns.boxplot(x = 'Cluster Labels', y = 'Rating', data = NW_low_reviews_dropped, ax=ax4).set(title = 'Northwest')\nsns.boxplot(x = 'Cluster Labels', y = 'Rating', data = DT_low_reviews_dropped, ax=ax5).set(title = 'Downtown')\nsns.boxplot(x = 'Cluster Labels', y = 'Rating', data = MT_low_reviews_dropped, ax=ax6).set(title = 'Midtown')\n\nax1.set_ylabel(\"\")\nax2.set_ylabel(\"\")\nax3.set_ylabel(\"\")\nax4.set_ylabel(\"\")\nax5.set_ylabel(\"\")\nax6.set_ylabel(\"\")\n\nax1.set_xlabel(\"\")\nax2.set_xlabel(\"\")\nax3.set_xlabel(\"\")\nax4.set_xlabel(\"\")\nax5.set_xlabel(\"\")\nax6.set_xlabel(\"\")\n\nfig.suptitle('Bar Ratings by Zone', fontsize=16, ha='center')\nfig.text(0.51, 0.07, 'Cluster Labels', ha='center', fontsize=14)\nfig.text(0.08, 0.5, 'Rating', va='center', rotation='vertical', fontsize=14)\nplt.show()","4efc46ce":"fig, (ax1, ax2, ax3, ax4, ax5, ax6) = plt.subplots(1,6, figsize=(16,8), sharey=True)\n\nsns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = SE_df_formatted, ax=ax1).set(title = 'Southeast')\nsns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = SW_df_formatted, ax=ax2).set(title = 'Southwest')\nsns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = NE_df_formatted, ax=ax3).set(title = 'Northeast')\nsns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = NW_df_formatted, ax=ax4).set(title = 'Northwest')\nsns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = DT_df_formatted, ax=ax5).set(title = 'Downtown')\nsns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = MT_df_formatted, ax=ax6).set(title = 'Midtown')\n\nax1.set_ylabel(\"\")\nax2.set_ylabel(\"\")\nax3.set_ylabel(\"\")\nax4.set_ylabel(\"\")\nax5.set_ylabel(\"\")\nax6.set_ylabel(\"\")\n\nax1.set_xlabel(\"\")\nax2.set_xlabel(\"\")\nax3.set_xlabel(\"\")\nax4.set_xlabel(\"\")\nax5.set_xlabel(\"\")\nax6.set_xlabel(\"\")\n\nfig.suptitle('User Review Count by Zone', fontsize=16, ha='center')\nfig.text(0.51, 0.07, 'Cluster Labels', ha='center', fontsize=14)\nfig.text(0.08, 0.5, 'Review Count', va='center', rotation='vertical', fontsize=14)\nplt.show()","a148d90e":"SE_high_review_count_dropped = drop_review_count_over_3500(SE_df_formatted)\nSW_high_review_count_dropped = drop_review_count_over_3500(SW_df_formatted)\nNE_high_review_count_dropped = drop_review_count_over_3500(NE_df_formatted)\nNW_high_review_count_dropped = drop_review_count_over_3500(NW_df_formatted)\nDT_high_review_count_dropped = drop_review_count_over_3500(DT_df_formatted)\nMT_high_review_count_dropped = drop_review_count_over_3500(MT_df_formatted)","7c007d4b":"fig, (ax1, ax2, ax3, ax4, ax5, ax6) = plt.subplots(1,6, figsize=(16,8), sharey=True)\n\nsns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = SE_high_review_count_dropped, ax=ax1).set(title = 'Southeast')\nsns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = SW_high_review_count_dropped, ax=ax2).set(title = 'Southwest')\nsns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = NE_high_review_count_dropped, ax=ax3).set(title = 'Northeast')\nsns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = NW_high_review_count_dropped, ax=ax4).set(title = 'Northwest')\nsns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = DT_high_review_count_dropped, ax=ax5).set(title = 'Downtown')\nsns.boxplot(x = 'Cluster Labels', y = 'User Review Count', data = MT_high_review_count_dropped, ax=ax6).set(title = 'Midtown')\n\nax1.set_ylabel(\"\")\nax2.set_ylabel(\"\")\nax3.set_ylabel(\"\")\nax4.set_ylabel(\"\")\nax5.set_ylabel(\"\")\nax6.set_ylabel(\"\")\n\nax1.set_xlabel(\"\")\nax2.set_xlabel(\"\")\nax3.set_xlabel(\"\")\nax4.set_xlabel(\"\")\nax5.set_xlabel(\"\")\nax6.set_xlabel(\"\")\n\nfig.suptitle('User Review Count by Zone', fontsize=16, ha='center')\nfig.text(0.5, 0.07, 'Cluster Labels', ha='center', fontsize=14)\nfig.text(0.08, 0.5, 'Review Count', va='center', rotation='vertical', fontsize=14)\nplt.show()","4c0c831f":"fig, (ax1, ax2, ax3, ax4, ax5, ax6) = plt.subplots(1,6, figsize=(16,8), sharey=True, sharex=True)\n\na = sns.countplot(SE_df_formatted['Food'], order = food_order, ax=ax1).set(title = 'Southeast')\nb = sns.countplot(SW_df_formatted['Food'], order = food_order, ax=ax2).set(title = 'Southwest')\nc = sns.countplot(NE_df_formatted['Food'], order = food_order, ax=ax3).set(title = 'Northeast')\nd = sns.countplot(NW_df_formatted['Food'], order = food_order, ax=ax4).set(title = 'Northwest')\ne = sns.countplot(DT_df_formatted['Food'], order = food_order, ax=ax5).set(title = 'Downtown')\nf = sns.countplot(MT_df_formatted['Food'], order = food_order, ax=ax6).set(title = 'Midtown')\n\nax1.set_ylabel(\"\")\nax2.set_ylabel(\"\")\nax3.set_ylabel(\"\")\nax4.set_ylabel(\"\")\nax5.set_ylabel(\"\")\nax6.set_ylabel(\"\")\n\nax1.set_xlabel(\"\")\nax2.set_xlabel(\"\")\nax3.set_xlabel(\"\")\nax4.set_xlabel(\"\")\nax5.set_xlabel(\"\")\nax6.set_xlabel(\"\")\n\n    \n\nfig.suptitle('Food Comparison by Zone', fontsize=16, ha='center')\nfig.text(0.51, 0.07, 'Food', ha='center', fontsize=14)\nfig.text(0.09, 0.5, '# of Bars', va='center', rotation='vertical', fontsize=14)\nplt.show()","08776525":"fig, (ax1, ax2, ax3, ax4, ax5, ax6) = plt.subplots(1,6, figsize=(16,8), sharey=True)\n\nsns.countplot(SE_df_formatted['Price Level'], order = price_level_order, ax=ax1).set(title = 'Southeast')\nsns.countplot(SW_df_formatted['Price Level'], order = price_level_order, ax=ax2).set(title = 'Southwest')\nsns.countplot(NE_df_formatted['Price Level'], order = price_level_order, ax=ax3).set(title = 'Northeast')\nsns.countplot(NW_df_formatted['Price Level'], order = price_level_order, ax=ax4).set(title = 'Northwest')\nsns.countplot(DT_df_formatted['Price Level'], order = price_level_order, ax=ax5).set(title = 'Downtown')\nsns.countplot(MT_df_formatted['Price Level'], order = price_level_order, ax=ax6).set(title = 'Midtown')\n\nax1.set_ylabel(\"\")\nax2.set_ylabel(\"\")\nax3.set_ylabel(\"\")\nax4.set_ylabel(\"\")\nax5.set_ylabel(\"\")\nax6.set_ylabel(\"\")\n\nax1.set_xlabel(\"\")\nax2.set_xlabel(\"\")\nax3.set_xlabel(\"\")\nax4.set_xlabel(\"\")\nax5.set_xlabel(\"\")\nax6.set_xlabel(\"\")\n\nfig.text(0.51, 0.07, 'Price Level', ha='center', fontsize = 14)\nfig.suptitle('Price Level by Zone', fontsize=16, ha='center')\nfig.text(0.09, 0.5, '# of Bars', va='center', rotation='vertical', fontsize=14)\nplt.show()","67c52551":"fig, (ax1, ax2, ax3, ax4, ax5, ax6) = plt.subplots(1,6, figsize=(16,8), sharey=True)\n\nsns.countplot(SE_df_formatted['Cluster Labels'], ax=ax1).set(title = 'Southeast')\nsns.countplot(SW_df_formatted['Cluster Labels'], ax=ax2).set(title = 'Southwest')\nsns.countplot(NE_df_formatted['Cluster Labels'], ax=ax3).set(title = 'Northeast')\nsns.countplot(NW_df_formatted['Cluster Labels'], ax=ax4).set(title = 'Northwest')\nsns.countplot(DT_df_formatted['Cluster Labels'], ax=ax5).set(title = 'Downtown')\nsns.countplot(MT_df_formatted['Cluster Labels'], ax=ax6).set(title = 'Midtown')\n\nax1.set_ylabel(\"\")\nax2.set_ylabel(\"\")\nax3.set_ylabel(\"\")\nax4.set_ylabel(\"\")\nax5.set_ylabel(\"\")\nax6.set_ylabel(\"\")\n\nax1.set_xlabel(\"\")\nax2.set_xlabel(\"\")\nax3.set_xlabel(\"\")\nax4.set_xlabel(\"\")\nax5.set_xlabel(\"\")\nax6.set_xlabel(\"\")\n\n\n\nfig.suptitle('Bar Count by Zone', fontsize=16, ha='center')\nfig.text(0.51, 0.07, 'Cluster Labels', ha='center', fontsize=14)\nfig.text(0.09, 0.5, '# of Bars', va='center', rotation='vertical', fontsize=14)\nplt.show()","68f639d0":"create_folium_map_with_colored_clusters(data = NW_df_formatted, num_clusters = 5, name_column = 'Name', \\\n                                        location_lat= NW_lat, location_long = NW_long, \\\n                                        lat_column = 'Lat', long_column = 'Long', label_column = 'Rating', \\\n                                        cluster_column = 'Cluster Labels', zoom_level = 12)","71e9f6ee":"create_folium_map_with_colored_clusters(data = NE_df_formatted, num_clusters = 5,name_column = 'Name', \\\n                                        location_lat= NE_lat, location_long = NE_long, \\\n                                        lat_column = 'Lat', long_column = 'Long', label_column = 'Rating', \\\n                                        cluster_column = 'Cluster Labels', zoom_level = 12)","27556ebf":"Now we can cluster the data based on location. I am using a method I created that drops the fields that arent being used and clusters the results by Kmeans and then adds it back into the dataframe as a new row. I will then print out final dataframe to ensure that everything looks correct after the changes I made.","e4afde98":"So we see a few things here that we could alter.\n\nWe can remove the establishments that have the CLOSED_TEMPORARILY tag since they might not reopen and currently arent open.\n\nAnd I want to know what bars serve food and which do not. So lets go ahead and change categories to a serves food column. \n\nFirst lets drop all the businesses that are not operational.","0dbc2456":"Here I save the variable key with my Google API key that I set to use Google Places and Grocoding API","d50bbd73":"Dowtown doesn't have any price level 4 establishments, but has more level 3 than 1 which is something we didn't see often in previous sections. The trend of most being price level 2 and there being a decent chunk that don't have a price level listed shows here as well.","3e3ffd76":"## Side-by-Side <a name='sidebyside'><\/a>","aa77ebaf":"Cluster 2 also has the highest average of user reviews closely followed by 1. Cluster 4 seems to perform the worst and Cluster 0 is just a bit beneath one and 2. Once again cluster 3 doesnt have much data so we just get the line for that entry or entries with same results.","d09e586a":"Clusters 1, 2, and 4 all have 4-5 bars. Cluster 0 and 3 having the 2 most in that order. It's interesting to point out that Cluster 3 has better numbers for user reviews and less bars. This could indicate less competition and more foot traffic.   ","601cc165":"Let's see what neighborhoods these are by name instead of cluster number.   \nBest: Dunwoody  \nWorst: Buckhead","d3d19a18":"Now that I have 90 percent of my code written into nice little one line calls that will do most of the grunt work, I can start easily analyzing the data I have acquired and reporting my results.\n\nEvery business owner or corporate chain has the question, \"Where is the best place to open up a new establishment?\". There are many different areas to choose from and it can get overwhelming fast. I want to make it easier to answer this question using data that is readily available. Different types of establishments will be looking for different information when deciding where to open up a new location. Even though my notebook can be used to answer this question for many types of establishments anywhere in the world, I am going to focus on bars in Atlanta, Georgia. \n\nThe question is, what would be a good location in Atlanta, GA to open up a bar? I chose this because I would love to open up a pub style establishment someday. This information is relevant to me and other prospective bar owners in Atlanta. Let's see what we can find out!","98ad6ebe":"Cluster 0 and 4 are gonna have the most competition, where cluster 1 will have the least. 2 and 3 seem pretty similar in size.","67745662":"Cluster 4 looks to be the best cluster in terms of averag and consistant ratings. Cluster 0 looks to be the worst. Cluster 2 seems to have a small amount of enteries with sparse data. Cluster 1 is also very consistant with ratings but has a slightly worse average. Cluster 3 seems to have a decent amount entries, but also has the most sparity. ","8643d35b":"Most of our establisments are a 2 price level rating, followed by 1 and 3. We see there is a large chunk of establishments that didnt list a price level. For our purposes I wil keep an eye on what area they are in but we will mostly just be ignoring them when loooking at price level data. ","fc4984d2":"# Data Science Capstone \n## Where to open a bar in Atlanta? ","6462cd9d":"## Results and Discussion <a name='results'><\/a>","f50f6936":"### Downtown <a name='downtown'>","4f5a256a":"I like Northwest cluster 3 based on the data I found, as well as Northeast 2 and Northwest 4. I don't like the idea of trying to compete in Midtown, Downtown, Northwest cluster 1 or Southeast cluster 3. Too much competition. There seems like less bars in downtown and midtown but they are all much closer together than the Metro-Atlanta zones. We also can see the Northwest and Northeast sections dont have the most competition for bars with food, but also don\u2019t have the least. I think it is important to have some competition to drive business but not so much that the business gets lost in it. Northwest 4 has the highest average of user rating counts with cluster 3 being a close to second. Northeast 2 doesn\u2019t have the best average amount of user reviews but it does have a large third and fourth quartile meaning that the amount of foot traffic through that area can be good. With ratings Northwest cluster 4 has the highest average and the most consistent ratings, with cluster 3 falling a bit behind but still holding an average of 4.6. Northeast 2 has a similar average to Northwest 3.  ","0cf8c1ea":"A good bit more restaurant\/bars in midtown. Only about 12 do not serve food.","cbe4e884":"We have a bit more restaurants that arent serving food in Downtown compared to the other areas. It still remains the trend that there are more establishments that serve food and alcohol too, than ones that just serve alcohol. ","51abb0d4":"Cluster 2 has the highest average and least decent consistancy with the exception of one outlier. Cluster 3 must not have many bars in it. Cluster 0 has the worst average of the clusters with a decent amount of data with Cluster 4 performing slightly better and cluster 1 being a close second to 2.","16b63861":"I am acquiring the data from google geolocator and google places. I have made a method in which I acquire a list of results from google places using a string query. The results are returned in a JSON format and have to be parsed for the information that we are looking for. The method I made to get the results contains another method I made to parse the results for the information I want. The same method turns it into a Dataframe and returns that Dataframe. There are methods like this created for receiving up to 3 pages of results. I left them open ended so if anyone wants to use them, they can just change the parameters to get data for any type of place, anywhere in the world.\n\nMy methods return:  \nBusiness Status - If the business is operational or not  \nName - name listed for the establishment  \nAddress - returns the address of the establishment  \nCategories - an array of tags placed on a business  \nLat - latitude of establishment  \nLong - Longitude of establishment  \nRating - rating of establishment  \nUser Review Count - the number of ratings an establishment has  \nPrice Level - if it has it it will return a number 1-4 if not it returns a 0  \nPlace Id - this can be used to get more detailed information such as establishment hours.\n\nI am using a group of methods I made to manipulate some of this information. I remove all establishments whose business status is not 'OPERATIONAL'. This allows me to remove places that have permanently closed or are closed down for other reasons, even if temporarily. I parse through the array in categories and turn it into a boolean field of whether or not the establishment serves food. I also cluster the data and add cluster labels to the dataframe in the same method. We will discuss that further in the next section. ","d8a5a0bd":"Cluster 0 has the most bars followed by cluster 1. Cluster 2 and 3 are tied with 10 bars and cluster 4 has the least. Cluster 2 has little competiton, the highest average user reviews and the second highest average in ratings. I would say it isa  stand out for the Northeast.","cdf6a88d":"Looking at our clusters we can see that cluster 0 and cluster 4 have a high average but lots of variance in the ratings. Cluster 2 to be our worst, however Cluster 3 seems good. ","0d4a5935":"Below I am going to map out our clustered data. Each color represents a different cluster, and if our clustering worked properly then each cluster should represent a psuedo-neighborhood (This is because most neighborhoods have a 'Downtown' area where establishments are likely to be closer together). ","63cf6b6a":"Sticking with the trend of overall bars, we have a lot more bars with food than without. Less than 10 bars in the southeast do noot have a food menu it seems. ","bcaba708":"Same story different zone. ","562c9348":"Let's go ahead and add location labels to all the Dataframes using a method I made. Then we can pull up a test df to see if it worked.","53c36d2f":"## Methodology <a name='methodology'><\/a>","bfe23260":"### Southeast Analysis <a name='southeast'>","57c7d399":"Below I made some methods to help me retrieve, navigate, manipulate, and visualize the data. These methods can be highly dependent on each other so to use one you may need to use them all. I put documentation on them, feel free to email me any questions you have surrounding them at justinflanaganit@gmail.com. ","3c9152d8":"### Midtown <a name='midtown'>","829e8ae6":"Northwest cluster 4 stands out as the best for user review count right off the bat but has a large amount of sparsity. That being said,the lower end of the boxplot is still a higher numberr than a good chuck of these averages. Southeast 3 and 2 have mediocre averages of user counts but have a decent amount of establishments that are higher up there, though the sparsity is huge. Downtown obviously has the most reviews and most foot traffic, but the averages are much lower. I think this is because a lot of them can get lost in the market so to speak because there are so many to choose from.    ","96bf9423":"Looks good! Now lets go through the categories and see if they serve food or not.","7d9c51bd":"### Table of contents \n* [Methods Used](#methods)\n* [Introduction: Business Problem](#introduction)\n* [Data](#data)\n* [Methodology](#methodology)\n* [Analysis](#analysis)  \n    *[Metro-Atlanta](#overall)  \n    *[Southeast](#southeast)  \n    *[Southwest](#southwest)  \n    *[Northeast](#northeast)  \n    *[Northwest](#northwest)  \n    *[Downtown](#downtown)  \n    *[Midtown](#midtown)  \n    *[Side-by-Side](#sidebyside)\n* [Results and Discussion](#results)\n* [Conclusion](#conclusion)","da660338":"We actually have a few price levels 3 and 4 in the northeast. Still mainly 2 with a handful of 1's. We have a decent chunk of not listed like the last area. ","ef6dc9ac":"As I thought cluster 3 only has 1 entry. Cluster 4 an 0 are close to having the most bars with 18 and 19 respectively. ","56365352":"Northwest Cluster 1 will have the most competition with Midtown cluster 3 having the least with 1. Southeast cluster 3 has a large amount of competition as well followed closely by Southwest 0.  I think it is important for bar business to have other bars around though (for activities like bar hopping), but to not have too much competition. ","03dae7e0":"Every area has more restaurant bars than non-food bars. Southeast seems to have the most competition for food and least for non-food. With downtown having the least competition for food and most for non-food.","418b3b5c":"Cluster 4 has the most consistancy and the highest average. On the other end cluster 1 has the most sparity and the lowest average. Cluster 2 is interesting, its average is also the same as its lowest rating and is the second lowest average overall, this is probably due to a low amount of listings in that cluster.  ","60eee9f5":"Removing chained assignments warning as they do not pertain to what I am doing with the dataframes. ","77f9855a":"In terms of user rating counts the only clusters that seem to matter are 0 and 3. With 3 having a better average and some establishments having higher numbers than all other clusters.","cce72a69":"Seems like everything has worked now lets make some graphs and explore this data!","45dd7c01":"## Analysis <a name='analysis'><\/a>","4a41045c":"### Northeast Analysis <a name='northeast'>","49da541e":"Alright everything looks good! we got a few neighborhoods worth of data here. Looks like we have Dunwoody, BrookHaven, Chamblee, Norcross, and Embry Hills. Lets do the same thing for all of our other 'areas' in Atlanta.","a7845026":"Cluster 3 seems to not only have the least variance in rating but also has the largest average as well as the largest fourth quartile.","c834823c":"Cluster 2 has the highest average rating but has some sparsity in its ratings, with cluster 0 having the second highest and the same amount of sparsity. ","f5d3beed":"Same issue as last time we have a few outliers with lots of reviews making it hard to get a good view of our data so lets drop them off and look at the box plots closer. ","12b0bbc0":"Lets group our data by zone and count how many bars are in each. ","12797077":"### Methods <a name='methods'><\/a>","4af5f5c1":"Cluster 2 has the most ratings and the highest average of reviews on an establishment. Cluster 1 is close in average but doesnt reach the numbers that Cluster 2 does.","e9c13514":"## Introduction: Business Problem <a name='introduction'><\/a>\n","52fcc3f1":"## Conclusion <a name='conclusion'><\/a>","8c25f306":"Price level 2 reigns supreme once again with level 1 being second. It seems like most of our data entries don't have any price level listed. ","5345a018":"Cluster 1 has way more bars than others almost hitting 40, followed by cluster 3 which barely compares only getting to 12. I wonder if Cluster 1 prevented more bars from being picked up in other areas.  ","c3f7051a":"Now we are going to create a list with all of our data frames and concatenate them together into a single Dataframe. ","862cc506":"Lets check out the Dataframe to get an idea of the data we are working with and to ensure our method worked properly","fa11301d":"I now pass my key into the Google Maps Client for python which can be found here: https:\/\/github.com\/googlemaps\/google-maps-services-python","4371f52d":"### Southwest Analysis <a name='southwest'>","4052e931":"Our overall rating average is ~4.3 with our lower quartile being between 3.3 and 4. With our top quartile being between 4.5 and 5.","28f1b88a":"The price level data is also similar to overall data, yet there are no 4 star and barely any 3 star cost bars. This probably indicates we would'nt do well to open an expensive establishment here.","9369e9ac":"We can see here that out of all the bars we have data for in Atlanta 276 of them serve food, and 71 do not. This is assuming they are labeled correctly by Google Maps. Most of these listings are probably establishments that are actually mainly restaurants with a bar, this is fine for me because I want to serve food at my bar. If we wanted to we could only analyze one or the other but a gastro style pub is sorta between the 2 so I will study both of them. I also like the idea of keeping as much data to analyze as possible.","b97e8ade":"Cluster 4 has the the highest average for user reviews by a long shot, being higher than the fourth quartile max on most others. There are a few outliers that beat it in cluster 3 and cluster 1.","5a369ccd":"Here we will start with the Northeast side of Metro-Atlanta and work our way through.","8e57ebef":"According to our data the establishments in the southeast have the highest average, with northeast, northwest, and midtown close to a tie for second.","a0807e29":"WARNING! CLUSTER LABEL NUMBERS WILL CHANGE ALMOST EVERY TIME THIS NOTEBOOK IS RAN","154bd912":"So the majority of our data has a rating of over 3 with the exception of some outliers so lets drop those outliers to get a closer look at the data.","84718117":"Midtown and the northwest seem to have the 2 highest averages in that order, with the southeast being third. The southeast has an outlier of ~6000 reviews, having the highest amount oof reviews in all of Atlanta.","dc5e3891":"Out of all the data Northeast cluster 2 is where I would open a bar. It doesnt have the highest average rating, but when looking at the amount of user reviews and amount of bars in the cluster, it stands out above the others. You will get more foot traffic with less competition. The worst cluster would be northwest cluster 1. It has the most bars of anywhere in Atlanta and has a low average for user reviews, though it does have a higher rating average, the sparsity is immense.","b1b4c2c2":"### Northwest Analysis <a name='northwest'>","38206d1e":"### Metro-Atlanta (Overall Analysis) <a name='overall'>","bb80ea9e":"Price level 4 seems non-existant in this part of town. With price level 1 not being very prominent in this area either. Less of our data is not labeled than before, and price level 2 is still most popular. A good amount of price level 3's in midtown as well.","1230178b":"Cluster 1 and cluster 2 seem to have the least bars so there won't be much competiton in either of those areas. Cluster 3 has the most bars almost hitting 25. ","809747c2":"Same pattern here that we have seen before, but there are a few more bars that dont serve food in the southwest than we saw in the southeast.","760e2cd0":"We have roughly 47 restaurants that serve food and around 10 that do not.","331d4a71":"Ok so now we can see all ratings for each cluster in each zone next to each other. Southeast cluster 3 has little sparsity in ratings and a decent average I am going to keep an eye on that. I also like the look of Northwest cluster 4 based on rating average and consistency and southeast cluster 4 has pretty decent averages too. Southwest cluster 0 seems to be our worst, followed by southeast cluster 2. ","049a7df1":"The northwest side of Atlanta has less establishments that dont have a price listed. There are a lot more bars in price level 3 and 4 than other areas. This is probably because it contains the neighborhood Buckhead, which is known to be a very expensive part of town. The majority are still price level 2, however not many price level 1's are in this area. ","cb1be085":"## Data <a name='data'><\/a>\n","83232f80":"Price level 2 reigns supreme with 1 and 3 switching depending on the area we are looking in. A lot of establishment did not list their price level for some reason. Maybe this was a tactical marketing decision maybe they just didn't care to.","d26144b3":"My idea is to take larger areas of Atlanta, GA and cluster the data to create pseudo-neighborhoods. I am going to split the city (including Metro-Atlanta) into 6 areas labeled: 'NE,NW,SE,SW,Downtown,Midtown'. Midtown and Downtown are smaller area but have so many results close to each other it doesnt make sense to not give them their own section.\n\nThen I will compare the ratings and number of reviews for these larger areas to find which area is the best place to open up a bar. We will mainly be looking at averages and limits. This will be made easy using box plots. I also plan on comparing the number of bars in the area to see how much competition there is.\n\nI am going to make the correlation between user review count and traffic and say a higher average of reviews means more traffic through the area. We need to keep an eye out for outliers in the data, because that could mean a business is dominating an area. It could also mean it has been open a long or that it is a landmark location. We don't have easy access to the length an establishment has been open for the ~350 bars we are analyzing so we will not be taking that into account. We could take into account how many of the bars closed in each area by counting the number of dropped entries during our initial data transformation on 'Business Status' but with the corona-virus currently affecting our economy, I dont think that data would be relevant anymore in the near future. \n\nWe will also look at average user rating for each area. It might not be the strongest correlation, but I fully believe that location can play a large part in how an establishment is rated. I also go on the correlation that with higher average ratings in an area you will have increased traffic. It will also force your business to adapt and perform better if there is healthy competition in the area. ","63f463cd":"Seems that most zones have roughly the same amount of bars. I don't think that the data here has enough variance to assume anything from it yet. Lets break it doown into smaller bits and then come back and look at everything by cluster.","7ae6e4ca":"Cluster 1 has the most consitant ratings and the highest average but doesn't have an entry that breaks '4.6'. Every other cluster has a higher variance and a lower average, yet all clusters have an entry with a high rating. "}}