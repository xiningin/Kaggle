{"cell_type":{"14a24a16":"code","1216dd2c":"code","3d65e2ef":"code","50b45076":"code","4a2751d0":"code","3b9dcd14":"code","1717f32d":"code","a01e0a26":"code","fc12fbfe":"code","672faf60":"code","1c17ef3d":"code","4de89623":"code","07e9b7b4":"code","3c648642":"code","e72097a6":"code","3b9ce0c5":"code","0bd651bd":"code","911fd44d":"code","75982f3e":"markdown","3c51a7a6":"markdown","6095cdb3":"markdown","4045e916":"markdown","09298156":"markdown","3163b577":"markdown","c7f878a8":"markdown","b6b961c5":"markdown","a8295330":"markdown","fafc3ac6":"markdown","1c6acd5e":"markdown","07b5a5eb":"markdown"},"source":{"14a24a16":"# Paquetes y m\u00f3dulos b\u00e1sicos\nimport numpy as np # Algebra lineal\nimport pandas as pd # Procesamiento de datos estructurados, CSV\nimport matplotlib.pyplot as plt # Gr\u00e1ficas b\u00e1sicas","1216dd2c":"import rasterio as rio\nfrom rasterio.plot import show\n# Importa data raster  \nraster_path = '\/kaggle\/input\/geodata\/lwe_JAN.tif'\nwith rio.open(raster_path) as src:\n     # Imprime algunos atributos de la data\n     print(src.transform) # Reoluci\u00f3n espacial, \n     print(src.crs) # CRS  \n     print(src.bounds) # extensi\u00f3n espacial\n     print(rio.plot.plotting_extent(src)) # extensi\u00f3n espacial\n     print(src.shape) # dimensiones de la data","3d65e2ef":"# Extrae los datos o valores de la data raster\nwith rio.open(raster_path) as src:\n     data = src.read(1, masked = True) # convierte la data a un array\n     print(data) # imprime la data\n     print(np.nanmax(data)) # Imprime el maximo valor sin considerar datos nan\n     print(np.nanmin(data)) # Imprime el m\u00ednimo valor sin considerar datos nan\n     print(np.nanmean(data)) # Imprime la media de los datos\n     print(np.nansum(data)) # Imprime la suma","50b45076":"raster_path = '\/kaggle\/input\/geodata\/lwe_JAN.tif'\n# The grid of raster values can be accessed as a numpy array and plotted:\nwith rio.open(raster_path) as src:\n     thumbnail = src.read(1, masked = True)\n     fig, ax = plt.subplots(figsize = (8,8))\n     plt.imshow(thumbnail)\n     cbar = plt.colorbar(shrink=0.5)\n     plt.title(\"Promedio mes enero [2003-2016]\")\n     ax.set_axis_on()\n     cbar.set_label('Anomal\u00eda gravitacional (cm)')\nplt.show()","4a2751d0":"## Grafica usando las coordenadas y cambia la escala de la paleta\nfrom matplotlib import colors, cm \n\n# Ruta de la data\nraster_path = '\/kaggle\/input\/geodata\/lwe_JAN.tif'\n\n# atributos de la barra de colores\nvmin = 2 # Valor m\u00ednimo de la paleta\nvmax = 5 # Valor M\u00e1ximo de la paleta\ncmap = plt.cm.get_cmap('rainbow') # Selecciona la apleta rainbow\nnorm=colors.Normalize(vmin,vmax) # normaliza los datos de la paleta\n\n#Lectura y grafica de la data\nwith rio.open(raster_path) as src:\n   fig, ax = plt.subplots(figsize = (8,8))\n   show(src, cmap = cmap, ax = ax, vmin=vmin, vmax=vmax)\n   cbar = fig.colorbar(cm.ScalarMappable(norm=norm, cmap=cmap),ax=ax,shrink=0.8)\n   cbar.set_label('Anomal\u00eda gravitacional (cm)')\n   plt.title(\"Promedio mes enero [2003-2016]\")\n   ax.set_axis_on()\nplt.show()","3b9dcd14":"## Personaliza la paleta de color escalado al valor m\u00ednimo y m\u00e1ximo de los datos raster \nfrom matplotlib.colors import ListedColormap \n\n# Ruta de la data\nraster_path = '\/kaggle\/input\/geodata\/lwe_JAN.tif'\n\n# Define una barra de colores\ncmap = ListedColormap(['#f7fbff', '#edf6ff', '#deebf7','#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'])\n\n#Lectura y grafica de la data\nwith rio.open(raster_path) as src:\n     data = src.read(1, masked = True)\n     vmin = int(np.nanmin(data))\n     vmax = int(np.nanmax(data))\n     norm=colors.Normalize(vmin,vmax)\n     fig, ax = plt.subplots(figsize = (8,8))\n     show(src, cmap = cmap, ax = ax, vmin=vmin, vmax=vmax)\n     cbar = fig.colorbar(cm.ScalarMappable(norm=norm, cmap=cmap),ax=ax,shrink=0.8)\n     cbar.set_label('Anomal\u00eda gravitacional (cm)')\n     plt.title(\"Promedio mes enero [2003-2016]\")\n     ax.set_axis_on()\n \nplt.show()","1717f32d":"## Personaliza la paleta de color escalado un valor m\u00ednimo y m\u00e1ximo definido \nraster_path = '\/kaggle\/input\/geodata\/lwe_JAN.tif'\n\nvmin = -10 # Valor m\u00ednimo de la paleta\nvmax = 10 # Valor M\u00e1ximo de la paleta\ncmap = ListedColormap(['#f7fbff', '#edf6ff', '#deebf7','#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'])\nbounds = np.array([-10.0,-8.0,-6.0, -4.0, -2.0, 0, 2.0, 4.0 ,6.0, 8.0, 10.0])\nnorm = colors.BoundaryNorm(boundaries = bounds, ncolors = 10)\n\nwith rio.open(raster_path) as src:\n     fig, ax = plt.subplots(figsize = (8,8))\n     show(src, cmap = cmap, ax = ax, vmin=vmin, vmax=vmax)\n     cbar = fig.colorbar(cm.ScalarMappable(norm=norm, cmap=cmap),ax=ax,shrink=0.8)\n     cbar.set_label('Anomal\u00eda gravitacional (cm)')\n     plt.title(\"Promedio mes enero [2003-2016]\")\n     ax.set_axis_on()\n \nplt.show()","a01e0a26":"## Lectura de la data\nimport xarray as xr\nraster_path = '\/kaggle\/input\/geodata\/lwe_JAN.tif'\n# abre el archivo en una estructura xarray\nraster = xr.open_rasterio(raster_path)\nraster","fc12fbfe":"# Imprime los atributos del xarray\nraster.attrs","672faf60":"# imprime algunos otros atributos\nprint(raster.crs) # sistema de referencia geogr\u00e1fica\nprint(raster.res) # resoluci\u00f3n espacial","1c17ef3d":"# Imprime la data\ndata = raster.data\nprint(data[0])","4de89623":"# Imprime el array de la latitud y longitud\nlon= raster.x.data\nlat = raster.y.data\nprint(lon,lat)","07e9b7b4":"## Gr\u00e1fica simple de la data raster\nraster.plot(figsize = (8,8))\nplt.title(\"Promedio mes enero [2003-2016]\")\nplt.show()","3c648642":"## Gr\u00e1fica de la data raster con barra de color escalada\nfrom matplotlib import colors, cm\n\nvmin = 2 # Valor m\u00ednimo de la paleta\nvmax = 5 # Valor M\u00e1ximo de la paleta\ncmap = plt.cm.get_cmap('rainbow') # Selecciona la apleta rainbow\n#norm=colors.Normalize(vmin,vmax) # normaliza los datos de la paleta\n\nfig, ax = plt.subplots(figsize = (8,8))\nraster.plot(cmap= cmap, ax = ax, vmin=vmin, vmax=vmax,\n            cbar_kwargs={'label': 'Anomal\u00eda gravitacional (cm)'})\n\nax.set_xlabel('Longitud')\nax.set_ylabel('Latitud')\nplt.title(\"Promedio mes enero [2003-2016]\")\nplt.show()","e72097a6":"## Gr\u00e1fica de la data raster con barra de color definida\nvmin = -5 # Valor m\u00ednimo de la paleta\nvmax = 5 # Valor M\u00e1ximo de la paleta\ncmap = ListedColormap(['#f7fbff', '#edf6ff', '#deebf7','#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'])\nbounds = np.array([-5.0,-4.0,-3.0, -2.0, -1.0, 0, 1.0, 2.0, 3.0 ,4.0, 5.0])\n\nfig, ax = plt.subplots(figsize = (8,8))\nraster.plot(cmap= cmap, ax = ax, vmin=vmin, vmax=vmax,\n            cbar_kwargs={'label': 'Anomal\u00eda gravitacional (cm)'})\n\nax.set_xlabel('Longitud')\nax.set_ylabel('Latitud')\nplt.title(\"Promedio mes enero [2003-2016]\")\nplt.show()","3b9ce0c5":"!pip install --upgrade earthpy","0bd651bd":"# Lectura y gr\u00e1fica del data Raster\nimport earthpy as et\nimport earthpy.spatial as es\nimport earthpy.plot as ep\nraster_path = '\/kaggle\/input\/geodata\/lwe_JAN.tif'\n\n#fig, ax = plt.subplots(figsize = (8,8))\nfile_raster = rio.open(raster_path)\ndata= file_raster.read(1, masked = False)\nep.plot_bands(data,\n              cmap='Blues',\n              #extent=soap_ext,\n              title=\"Data Enero Promedio GRACE\",\n              scale=False, figsize = (8,8))\nplt.show()","911fd44d":"# Introduce la posici\u00f3n (nrow,ncol) y te da (lat, lon)\nwith rio.open(raster_path) as src:\n    # convierte\/lee la data en un array de numpy\n    extension = rio.plot.plotting_extent(src) # array [minlon, maxlon,minlat, maxlat]\n    minlon, maxlon,minlat, maxlat = extension\n    nrows,ncols = src.shape\n    xcellsize=  round((maxlon - minlon) \/ ncols,1)\n    ycellsize =  round((maxlat - minlat) \/ nrows,1)\n    nrow = 0\n    ncol = 0\n    lon = ncol*xcellsize + minlon \n    lat = -nrow*ycellsize + maxlat \n    print(lat, lon) # ","75982f3e":"### Grafica de la imagen raster usando `imshow`","3c51a7a6":"### Usando el paquete `rasterio`\nSe da lectura a la data y sus atributos","6095cdb3":"### Grafica de la imagen Raster usando una paleta definida\n\n- Se crea una paleta con un rango de colores definidos","4045e916":"### Referencias\n\nMas informaci\u00f3n :\n\n- https:\/\/xarray-contrib.github.io\/xarray-tutorial\/scipy-tutorial\/04_plotting_and_visualization.html\n\n- https:\/\/docs.dea.ga.gov.au\/notebooks\/Frequently_used_code\/Opening_GeoTIFFs_NetCDFs.html","09298156":"### Grafica de la Imagen Raster usando `show`\n\n- Se utiliza un colormap definido en este caso 'rainbow'","3163b577":"### Posici\u00f3n -> Coordenadas Geogr\u00e1ficas","c7f878a8":"## Uso del paquete `earthpy`","b6b961c5":"### Gr\u00e1ficas usando el Paquete xarray","a8295330":"## Miscelaneas","fafc3ac6":"### Grafica una Imagen Raster con barra de color escalada\n- Se crea una barra de colore y se escala en l\u00edmites definidos","1c6acd5e":"## Geodata Raster Plot\nSe presentan diferentes opciones para trazar o representar graficamente una data raster\n\n### Datos\nLos datos son el promedio de los datos GRACE de la regi\u00f3n Lima del promedio del mes de enero de 2003 -2013","07b5a5eb":"### Paquetes b\u00e1sicos"}}