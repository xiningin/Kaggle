{"cell_type":{"c01dbbc2":"code","003aacb6":"code","9e502317":"code","5f1df54f":"code","d23e4408":"code","45c9e8cd":"code","0d08c9b3":"markdown","e24793ed":"markdown","4f2e3a1e":"markdown","3d3405a6":"markdown","6c0dede5":"markdown","19333810":"markdown","a003627d":"markdown","6e536a88":"markdown"},"source":{"c01dbbc2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn import tree \nfrom IPython.display import Image\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\n\n\nX=np.zeros((800,10))\nY=np.zeros(800)\n\nmax_f = 0\nh2float={}\nfor i,l in enumerate(open('..\/input\/Pokemon.csv')):\n    if(i==0):\n        continue\n    t_l = l.rstrip('\\r\\n').split(',')\n    for j,c in enumerate(t_l[2:-1]):\n        if (j==0 or j==1):\n            if c not in h2float:\n                max_f += 1\n                h2float[c]=max_f\n            X[i-1,j]=h2float[c]\n        else: X[i-1,j]=float(c)\n    Y[i-1]= 0. if t_l[-1]=='False' else 1.\nX_train, X_test = X[:160], X[160:]\nY_train, Y_test = Y[:160], Y[160:]\n\n#clf = clf.fit(X_train, Y_train)\n#print(clf.score(X_test,Y_test))   \n","003aacb6":"clf = RandomForestClassifier(n_estimators=100)\nscores = cross_val_score(clf, X, Y, cv=10)\nprint(scores.mean())","9e502317":"#solver newton-cg score = 0.925\n#solver liblinear  score = 0.903\n\nclf1 = LogisticRegression(solver='newton-cg').fit(X_train,Y_train)\n\n\nscores = clf1.score(X_test,Y_test)\nprint(scores)","5f1df54f":"clf2 = LogisticRegression(solver='newton-cg')\nscores = cross_val_score(clf2, X, Y, cv=10)\nprint(scores.mean())","d23e4408":"clf3 = GaussianNB().fit(X_train,Y_train)\nscores = cross_val_score(clf3, X, Y, cv=10)\nprint(\"sans cross validation : \",clf3.score(X_test,Y_test),\"\\ncross validation :\",scores.mean())","45c9e8cd":"clf = tree.DecisionTreeClassifier(random_state=0).fit(X_train,Y_train)\nscores = clf.score(X_test,Y_test)\n\nprint(\"sans cross validation: \",scores)\nscores = cross_val_score(clf, X, Y, cv=10)\nprint(\"avec: \",scores.mean())\ntree.export_graphviz(clf, out_file='tree.dot')\n!dot -Tpng tree.dot -o tree_limited.png -Gdpi=600\nImage(filename = 'tree_limited.png')","0d08c9b3":"Le jeu de donn\u00e9es est un tableau de statistiques de pok\u00e9mons (Type, Attaque,...). Nous utiliserons 10 attributs (2 nominales, 8 num\u00e9riques) et 800 exemples. Le num\u00e9ro et nom du pok\u00e9mon ne vont pas \u00eatre des attributs pertinents d\u00fb faite qu'ils sont diff\u00e9rents pour chaque exemple. La classe \u00e0 d\u00e9terminer est un bool\u00e9en \"L\u00e9gendaire\". On s\u00e9pare les donn\u00e9es en jeux de test et de train avec pour proportion 80\/20.","e24793ed":"Une r\u00e9gression logistique donne \u00e9galement des r\u00e9sultats tr\u00e8s corrects. ","4f2e3a1e":"Nous obtenons des r\u00e9sultats assez bons, mais qui restent inf\u00e9rieurs \u00e0 ce que l'on peut obtenir avec un RandomForest.\nIl semble compliqu\u00e9 de pouvoir faire mieux au vu du 0.94 de la Random Forest.\nEn effet, les donn\u00e9es que nous avons choisies semblent trop simples, ce qui explique le fait que nous n'ayons pas de r\u00e9sultat en dessous des 0.9.\n\n**Explication des r\u00e9sultats et arbre de d\u00e9cision :**\n\nNous avons donc cherch\u00e9 ce qui pourrait cr\u00e9er cette facilit\u00e9 d'apprentissage dans nos donn\u00e9es.\nApr\u00e8s avoir observ\u00e9 les donn\u00e9es nous nous sommes rendus compte que les pok\u00e9mons l\u00e9gendaires \u00e9tant plus puissant que les pokemons classiques, le total de leurs statistiques \u00e9taient beaucoup plus \u00e9lev\u00e9s que celui des autres pokemons.\n\nPour tester cette hypoth\u00e8se nous avons donc utilis\u00e9 un arbre de d\u00e9cision sur nos donn\u00e9es : \n","3d3405a6":"Le nombre d'arbres lors du Random Forest (n_estimators) a \u00e9t\u00e9 fix\u00e9 \u00e0 100 afin d'am\u00e9liorer les r\u00e9sultats. Une valeur plus \u00e9lev\u00e9e n'am\u00e9liore pas les r\u00e9sultats et la diminuer les d\u00e9grade. \n\nCes r\u00e9sultats sont tr\u00e8s bons, cela est tr\u00e8s certainement d\u00fb aux statistiques tr\u00e8s diff\u00e9rentes entre les pok\u00e9mons l\u00e9gendaires et ceux qui ne le sont pas. Il sera donc s\u00fbrement difficile de battre un tel score. \n\nNous allons maintenant essayer d'autres classifieurs pour \u00e9valuer leur performance sur ce jeu de donn\u00e9es.  \n\n\n**R\u00e9gression logistique :**\n","6c0dede5":"**Resultat RandomForest avec cross-validation : **","19333810":"Une r\u00e9gression logistique avec cross-validation donne des r\u00e9sultats approchant ceux de la RandomForest. Plusieurs solvers ont \u00e9t\u00e9 utilis\u00e9s ( liblinear, lbfgs,... ) et newton-cg est celui qui offre la meilleure performance. \n\n**Classifieur Bayesien naif :**\n\nNous allons essayer un autre classifieur, toujours dans l'optique d'am\u00e9liorer des r\u00e9sultats d\u00e9j\u00e0 tr\u00e8s bons.","a003627d":"La colonne du total des statistiques est la deuxi\u00e8me colonne. Nous pouvons observer sur cet arbre que les classifications sont effectu\u00e9es uniquement \u00e0 partir de celle-ci. En effet, les pok\u00e9mons ayant plus de 585 en total des statistiques sont quasiment tous l\u00e9gendaires.\nOn remarque \u00e9galement que l'arbre de d\u00e9cision obtient des r\u00e9sultats meilleurs que la Random Forest. \n\n**Conclusion**\n\nNous avons pu apprendre \u00e0 manipuler une s\u00e9rie de donn\u00e9es et avons d\u00fb faire face \u00e0 ses particularit\u00e9s, comme la pr\u00e9sence d'attributs nominaux ou le fait que la classe pouvait \u00eatre pr\u00e9dite tr\u00e8s simplement \u00e0 partir d'un seul des attributs.\n","6e536a88":" TP n\u00b02 Acquisition de Connaissances - Calvin EONO et Vincent ETIEN"}}