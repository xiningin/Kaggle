{"cell_type":{"88dbe177":"code","8098ca18":"code","93ca9907":"code","35f6d765":"code","92926b4e":"code","2ebc14ff":"code","a155c302":"code","dd929f65":"code","2e5d0ee7":"code","523b4faf":"code","35da6217":"code","8824c138":"code","17627b34":"markdown","cdf67ad8":"markdown","09cfd4b7":"markdown","9ff7796e":"markdown","8660dbdb":"markdown","89cb21e9":"markdown","0664f73a":"markdown","f4a01e59":"markdown","4cd09eb5":"markdown","08657aeb":"markdown","0bda0148":"markdown","82696ab9":"markdown"},"source":{"88dbe177":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.gridspec import GridSpec\nimport seaborn as sns\nimport plotly.graph_objects as go","8098ca18":"data = pd.read_csv('..\/input\/police-deadly-force-usage-us\/fatal-police-shootings-data.csv')\ndata.head(5)","93ca9907":"fig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2, 2, figsize=(12, 8))\n\nsns.countplot(x='race', orient='v', ax=ax1, data=data)\nsns.countplot(x='gender', orient='v', ax=ax2, data=data)\nsns.countplot(x='signs_of_mental_illness', orient='v', ax=ax3, data=data)\nsns.countplot(x='age', orient='v', ax=ax4, data=data)\nax4.set_xticks(range(0, 90, 10))\nax4.set_xticklabels(range(0, 90, 10))\nfig.suptitle('Police Shooting Victim Data', fontsize=16, y=1.02)\nplt.tight_layout()\nplt.show()","35f6d765":"# Get data\nus_census_data = pd.read_csv('..\/input\/us-census-demographic-data\/acs2017_county_data.csv')\n\n# Get population proportions\ntotal_population = us_census_data['TotalPop'].sum()\nrace_proportions = pd.DataFrame(['White', 'Hispanic', 'Black', 'Asian', 'Native'], columns=['Race'])\nrace_proportions['Population'] = race_proportions['Race'].apply(lambda x: us_census_data.apply(lambda y: y['TotalPop'] * y[x] \/ total_population, axis=1).sum())\nrace_proportions['Killed In Police Shootings'] = race_proportions['Race'].apply(lambda x: data[data['race'] == x[0]].shape[0] * 100 \/ data.shape[0])\n\n# Plot proportions\nrace_proportions = race_proportions.melt(id_vars='Race')\nfig, ax = plt.subplots(1, 1, figsize=(10,6))\nsns.barplot(x='value', y='Race', hue='variable',data=race_proportions, ax=ax,\n            orient='h', palette=['#0390fc', '#ff3321'])\n\n# Annotate with values\nfor p in ax.patches:\n    width = p.get_width()\n    plt.text(3+p.get_width(), p.get_y()+0.55*p.get_height(),\n             '{:1.2f}%'.format(width),\n             ha='center', va='center')\n\n# Customise and show\nax.set_title('Percentage of deaths from police shootings\\ncompared to percentage of population by race', fontsize=16)\nax.tick_params(axis='both', labelsize=12)\nfor spine in ax.spines.values():\n    spine.set_visible(False)\nax.set_xlabel('')\nax.set_ylabel('')\nax.set_xticks([])\nplt.legend(frameon=False, fontsize=12, ncol=2)\nplt.tight_layout()\nplt.show()","92926b4e":"state_counts = data.groupby(by='state').agg({'id' : 'count'}).reset_index()\n\nfig = go.Figure(data=go.Choropleth(\n    locations=state_counts['state'],\n    z = state_counts['id'],\n    locationmode = 'USA-states',\n    colorscale = 'Reds',\n    colorbar_title = \"Deaths\"\n))\n\nfig.update_layout(\n    title_text = 'Police Shooting Deaths by US States',\n    geo_scope='usa'\n)\n\nfig.show()","2ebc14ff":"state_pops = pd.read_csv('..\/input\/us-state-populations-2018\/State Populations.csv')\nstate_codes = {'California' : 'CA', 'Texas' : 'TX', 'Florida' : 'FL', 'New York' : 'NY', 'Pennsylvania' : 'PA',\n       'Illinois' : 'IL', 'Ohio' : 'OH', 'Georgia' : 'GA', 'North Carolina' : 'NC', 'Michigan' : 'MI',\n       'New Jersey' : 'NJ', 'Virginia' : 'VA', 'Washington' : 'WA', 'Arizona' : 'AZ', 'Massachusetts' : 'MA',\n       'Tennessee' : 'TN', 'Indiana' : 'IN', 'Missouri' : 'MO', 'Maryland' : 'MD', 'Wisconsin' : 'WI',\n       'Colorado' : 'CO', 'Minnesota' : 'MN', 'South Carolina' : 'SC', 'Alabama' : 'AL', 'Louisiana' : 'LA',\n       'Kentucky' : 'KY', 'Oregon' : 'OR', 'Oklahoma' : 'OK', 'Connecticut' : 'CT', 'Iowa' : 'IA', 'Utah' : 'UT',\n       'Nevada' : 'NV', 'Arkansas' : 'AR', 'Mississippi' : 'MS', 'Kansas' : 'KS', 'New Mexico' : 'NM',\n       'Nebraska' : 'NE', 'West Virginia' : 'WV', 'Idaho' : 'ID', 'Hawaii' : 'HI', 'New Hampshire' : 'NH',\n       'Maine' : 'ME', 'Montana' : 'MT', 'Rhode Island' : 'RI', 'Delaware' : 'DE', 'South Dakota' : 'SD',\n       'North Dakota' : 'ND', 'Alaska' : 'AK', 'District of Columbia' : 'DC', 'Vermont' : 'VT',\n       'Wyoming' : 'WY'}\nstate_pops['State Codes'] = state_pops['State'].apply(lambda x: state_codes[x])\nstate_counts['Pop'] = state_counts['state'].apply(lambda x: state_pops[state_pops['State Codes'] == x].reset_index()['2018 Population'][0])\n\nfig = go.Figure(data=go.Choropleth(\n    locations=state_counts['state'],\n    z = state_counts['id'] \/ state_counts['Pop'] * 100000,\n    locationmode = 'USA-states',\n    colorscale = 'Reds',\n    colorbar_title = \"Deaths Per 100,000\"\n))\n\nfig.update_layout(\n    title_text = 'Police Shooting Deaths by US States per 100,000 People',\n    geo_scope='usa'\n)\n\nfig.show()","a155c302":"from datetime import date\n\n# Get date month data\ndata['date'] = pd.to_datetime(data['date'])\nnewd = data.groupby(pd.Grouper(key='date', freq='M')).count().reset_index()[['date', 'id']]\nnewd['date_ordinal'] = newd['date'].apply(lambda x: x.toordinal())\n\n# Plot\nfig, ax = plt.subplots(1, 1, figsize=(12, 4))\nsns.regplot(x='date_ordinal', y='id', ci=95, ax=ax, data=newd)\n\n# Customise\nyear_labels = [newd['date_ordinal'].min() + (x * 365) for x in range(6)]\nax.set_xticks(year_labels)\nax.set_xticklabels([2015, 2016, 2017, 2018, 2019, 2020])\nax.set_xlabel('Year')\nax.set_ylabel('Deaths')\n\nplt.title('US Police Shooting Deaths Over Time', fontsize=16)\nplt.show()","dd929f65":"unarmed_weapons = ['unarmed', 'toy weapon', np.nan, 'undetermined', 'flashlight']\n\ndata['is_armed'] = data['armed'].apply(lambda x: 'Armed' if x not in unarmed_weapons else 'Unarmed')\nunarmed_data = data[data['is_armed'] == 'Unarmed']\narmed_data = data[data['is_armed'] == 'Armed']","2e5d0ee7":"fig = plt.figure(figsize=(12, 12))\ngs=GridSpec(4,2)\nax0 = fig.add_subplot(gs[0,:])\nax1 = fig.add_subplot(gs[1,0])\nax2 = fig.add_subplot(gs[1,1])\nax3 = fig.add_subplot(gs[2,0])\nax4 = fig.add_subplot(gs[2,1])\nax5 = fig.add_subplot(gs[3,0])\nax6 = fig.add_subplot(gs[3,1])\n\nfig.suptitle('Unarmed vs Armed', y=1.03, fontsize=18)\n\n# Unarmed vs Armed\nsns.countplot('is_armed', ax=ax0, data=data, order=['Unarmed', 'Armed'])\nax0.set_xlabel('')\n\n# Race\nsns.barplot(x='race', y='race', orient='v', ax=ax1, data=unarmed_data,\n            estimator=lambda x: len(x) \/ len(unarmed_data) * 100, order=['W', 'B', 'H', 'A', 'N', 'O'])\nsns.barplot(x='race', y='race', orient='v', ax=ax2, data=armed_data,\n            estimator=lambda x: len(x) \/ len(armed_data) * 100, order=['W', 'B', 'H', 'A', 'N', 'O'])\nfor ax in [ax1, ax2]:\n    ax.set_ylabel('percent')\n\n# Gender\nsns.barplot(x='gender', y='gender', orient='v', ax=ax3, data=unarmed_data,\n            estimator=lambda x: len(x) \/ len(unarmed_data) * 100, order=['M', 'F'])\nsns.barplot(x='gender', y='gender', orient='v', ax=ax4, data=armed_data,\n            estimator=lambda x: len(x) \/ len(armed_data) * 100, order=['M', 'F'])\nfor ax in [ax3, ax4]:\n    ax.set_ylabel('percent')\n    ax.set_yticks(range(0, 100, 20))\n    ax.set_yticklabels(range(0, 100, 20))\n\n# Age\nsns.barplot(x='age', y='age', orient='v', ax=ax5, data=unarmed_data,\n            estimator=lambda x: len(x) \/ len(unarmed_data) * 100)\nsns.barplot(x='age', y='age', orient='v', ax=ax6, data=armed_data,\n            estimator=lambda x: len(x) \/ len(armed_data) * 100)\nfor ax in [ax5, ax6]:\n    ax.set_ylabel('percent')\n    ax.set_xticks(range(0, 90, 10))\n    ax.set_xticklabels(range(0, 90, 10))\n    ax.set_yticks(range(0, 5))\n    ax.set_yticklabels(range(0, 5))\n\nplt.tight_layout()\nplt.show()","523b4faf":"from scipy.stats import chi2_contingency\n\nunarmed_vals = unarmed_data.groupby('race').count()['id'].reset_index().sort_values('race')['id'].values\narmed_vals = armed_data.groupby('race').count()['id'].reset_index().sort_values('race')['id'].values\nchi_table = np.array([unarmed_vals, armed_vals])\nchi_test = chi2_contingency(chi_table)\nprint('Chi Squared Statistic:', chi_test[0])\nprint('Degrees of Freedom:   ', chi_test[2])\nprint('P Value:              ', chi_test[1])\nprint('SIGNIFICANCE' if chi_test[1] < 0.05 else 'NO SIGNIFICANCE')","35da6217":"unarmed_ages = unarmed_data.groupby('age').count()['id'].reset_index().sort_values('age')\narmed_ages = armed_data.groupby('age').count()['id'].reset_index().sort_values('age')\n\nunarmed_vals = []\narmed_vals = []\nfor age in range(100):\n    zeros = 0\n    try:\n        unarmed_vals.append(unarmed_ages[unarmed_ages['age'] == age]['id'].reset_index(drop=True)[0])\n    except:\n        unarmed_vals.append(0)\n        zeros += 1\n    try:\n        armed_vals.append(armed_ages[armed_ages['age'] == age]['id'].reset_index(drop=True)[0])\n    except:\n        armed_vals.append(0)\n        zeros += 1\n    if zeros > 1:\n        unarmed_vals.pop()\n        armed_vals.pop()\nchi_table = np.array([unarmed_vals, armed_vals])\nchi_test = chi2_contingency(chi_table)\nprint('Chi Squared Statistic:', chi_test[0])\nprint('Degrees of Freedom:   ', chi_test[2])\nprint('P Value:              ', chi_test[1])\nprint('SIGNIFICANCE' if chi_test[1] < 0.05 else 'NO SIGNIFICANCE')","8824c138":"from wordcloud import WordCloud\nimport requests\nfrom PIL import Image\nfrom io import BytesIO\n\n# Obtain image mask\nresponse = requests.get('https:\/\/www.kindpng.com\/picc\/m\/672-6720557_us-outline-usa-map-vector-png-transparent-png.png')\nusa_mask = np.array(Image.open(BytesIO(response.content)))[:,:,2]\nusa_mask = 255 * (usa_mask > 50)\n\n# Get a dict of unarmed names\nunarmed_names = data[data['armed'] == 'unarmed']['name'].values\nunarmed_names_dict = dict()\nfor name in unarmed_names:\n    unarmed_names_dict[name] = 1\n\n# Create wordcloud\nwc = WordCloud(background_color='white', mask=usa_mask, max_words=1000,\n               contour_width=10, max_font_size=20, colormap='plasma').generate_from_frequencies(unarmed_names_dict)\n\n# Display wordcloud\nplt.figure(figsize=(10, 10))\nplt.imshow(wc, interpolation='bilinear')\nplt.axis('off')\nplt.show()","17627b34":"# Are African-Americans Disproportionately Killed?\nOne socially important piece of information is whether certain races are being disproportionately killed by police shootings. We will investigate this by creating a bar plot with seaborn of the proportion of deaths and total population by race. We will then customise this plot further using matplotlib. We will also need to import another dataset where we can get the proportion of different races in the US population.","cdf67ad8":"We can see that when population is taken into account, the states with the most deaths via police shootings are New Mexico and Alaska. Many of the states which appeared high on the previous map appear lower on this map, however Oklahoma and Arizona still appear quite high.\n\n# Are Police Shooting Deaths Increasing?\nNow we will have a look at whether police shooting deaths are become more or less frequent. To do this, we will be using seaborn again, but this time we will be using a regplot. From regplot we will get a regression line through our data. We will need to group our data to do this, we will be grouping it into months in this example. From our final plot we can see that there is no major change in the number of shootings per month.","09cfd4b7":"In this notebook we explore a US Police Shootings dataset, which has data on fatal shootings by on-duty police officers in the US between January 2015 and May 2020. Using this dataset we will explore several important questions which can be found below. For each question we will attempt to create at least one visualisation which helps to understand the data behind the answers by using the packages seaborn and plotly.\n\n1. [Who Are The Police Killing?](#Who-Are-The-Police-Killing?)\n2. [Are African-Americans Disproportionately Killed?](#Are-African-Americans-Disproportionately-Killed?)\n3. [Where Do Shootings Happen?](#Where-Do-Shootings-Happen?)\n4. [Are Police Shooting Deaths Increasing?](#Are-Police-Shooting-Deaths-Increasing?)\n5. [Are Victims Armed or Unarmed?](#Are-Victims-Armed-or-Unarmed?)\n6. [Who Are The Unarmed Victims?](#Who-Are-The-Unarmed-Victims?)\n\nBut first, we will import a few Python packages.","9ff7796e":"# Are Victims Armed or Unarmed?\nNext, we will be looking at whether police shooting victims are armed or unarmed. The armed feature in our dataset contains a huge number of different weapons and non-weapons including guns, knives, chairs, and flashlights. We need to be able to determine which of these are weapons (and are therefore armed), and which are not weapons (and therefore unarmed). Although some of these are slightly controversial, we will have to make our own list of non-weapons. This list is made up of unarmed, toy weapon, NaN, undetermined, and flashlight. We can then split the whole dataset into armed and unarmed.","8660dbdb":"Our first choropleth map does not take into consideration the population of each state - we would expect states with a higher population to have a higher number of deaths via police shootings. Therefore we will be importing [a dataset of US state populations from 2018](https:\/\/www.kaggle.com\/lucasvictor\/us-state-populations-2018), and then factoring that into our choropleth. You will see that our new map looks quite different.","89cb21e9":"We also need to import our data. This can be seen below.","0664f73a":"We have found that there is a significance for age, meaning that there is a statistical difference in the age distributions of unarmed and armed victims. The only issue we have with this test is that for some of the ages we have a very small sample (less than 5 people for some ages), which chi squared is very sensitive to, meaning that using the test in this case may not be perfect.\n\n# Who Are The Unarmed Victims?\nThere are 318 victims listed in this dataset that are unarmed. To visually display the names of these victims we will create a wordcloud of their names. Firstly, we must obtain an image mask - in this case we will use a map of the USA (the mask must be binarised for this to work, we also perform that after obtaining the image). We then need to create a dictionary of the names, with the frequency that they appear (each name will appear once so we can set the frequencies to 1 each time). Finally, we use the wordcloud package to create a wordcloud. The results are below.","f4a01e59":"We can go even further into this and perform a statistic test to see whether some of these feature distributions are the same for unarmed and armed statistics. We will try this with race, to see whether there is a difference in the distribution of races for police shooting armed victims and unarmed victims. To do this, we will use the chi-squared test with a significance level of 5%. Therefore, if we get a p value below 0.05 then we can reject the null hypothesis and say that there is some difference between the distribution of races of armed and unarmed victims.","4cd09eb5":"# Who Are The Police Killing?\nFirstly, we will use seaborn to create a few bar plots about data relating to victims of police shootings. We can see that an overwhelming majority of victims are male. We can also see that many victims are white, but this does not take into account the demographics of USA (this data is not available in this dataset, we would need to import more data). We can also see that age is widely distributed across the population with that plot peaking at ages 15 to 25. Again, this does not take into account the demographics of USA.","08657aeb":"From this plot we can see that both black people and native people are disproportionately killed by the police. We can also see that for asians and white people, the percentages are far below that of their overall percentages of the population is the US.\n\n# Where Do Shootings Happen?\n\nWe will now use plotly to create a choropleth map of the number of shootings in each US state. From our map below we can see that the states with the most shootings are California, Texas, and Florida. States near to Texas (such as Oklahoma) and Florida (such as Georgia) also have a higher number of shootings than other US states.","0bda0148":"We can conclude that there is no significance for race.\n\nWe will not attempt this test with gender as we can see from the previous charts that they are very similar. However, there does appear to be some differences in age so we will also try this test with age.","82696ab9":"Now that we have split the data, we can create our plots. We will again be looking at the victim information of police shootings, but looking at unarmed and armed statistics separately."}}