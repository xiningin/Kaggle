{"cell_type":{"431aeb5a":"code","69e4ef32":"code","aa29ef7d":"code","12772648":"code","14995969":"code","7395812e":"code","8764ad06":"code","d551b1d2":"code","d9d8f9d2":"code","56d91697":"code","322918a4":"code","e7ee2d07":"code","15cedab9":"code","791a3131":"code","5ce6f60f":"code","92a8da6a":"code","77e05dd3":"code","e5d28d30":"code","1e4151c0":"code","ba75411e":"code","a54b0389":"code","8328b0be":"code","7f9c478d":"code","c77bd462":"code","73414506":"code","c736681c":"code","a1512085":"code","7b608be5":"code","fa4617fd":"code","55c2da3e":"code","4acf0caf":"code","d992b202":"code","abce31be":"code","eb907ae4":"code","6b5d240e":"code","f75777af":"code","ecbaeb49":"code","b4aa3339":"code","ab772892":"code","ad99dc6a":"code","437d927e":"code","4ce7e8db":"code","2f06ca18":"code","f6972919":"code","7469cca6":"code","adeca82b":"code","b503f5c7":"code","6ed45701":"markdown","49cfa87f":"markdown","760445ca":"markdown","55dc0688":"markdown","947c427f":"markdown","6766135e":"markdown","94ebf1db":"markdown","d774b398":"markdown","4bb8100e":"markdown","429fd864":"markdown","1f15cc2b":"markdown","5a9c06ce":"markdown","90daf442":"markdown","76acc502":"markdown","d154f818":"markdown","4c50d5e0":"markdown","d7a398ce":"markdown","6a4b4128":"markdown"},"source":{"431aeb5a":"#!pip install --upgrade dtale #downloading dtale","69e4ef32":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n#import dtale","aa29ef7d":"#import dtale.app as dtale_app\n\n#dtale_app.USE_COLAB = True\n#dtale.show(data, ignore_duplicate=True)","12772648":"data = pd.read_csv(r'..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')\nprint(data.head(10))","14995969":"print(data.columns)","7395812e":"print(data.shape)","8764ad06":"data.dtypes","d551b1d2":"data.isnull().sum()","d9d8f9d2":"data.fillna({'reviews_per_month':0}, inplace=True) #filling null values of 4 columns with respective values\ndata.fillna({'name':\"NoName\"}, inplace=True)\ndata.fillna({'host_name':\"NoName\"}, inplace=True)\ndata.fillna({'last_review':\"NotReviewed\"}, inplace=True)","56d91697":"data.isnull().sum()","322918a4":"data['price'].head(10)","e7ee2d07":"data['price'].describe()","15cedab9":"hist_price = data[\"price\"].hist()","791a3131":"hist_price = data[\"price\"][data['price'] <= 1000].hist()","5ce6f60f":"hist_price = data[\"price\"][data['price'] > 1000].hist()","92a8da6a":"price_greater_than_2000 = data[data['price'] > 1000].value_counts()\nprint(price_greater_than_2000)","77e05dd3":"data[\"price\"][data[\"price\"]<250].hist()","e5d28d30":"data[\"price\"][data[\"price\"]<250].describe()","1e4151c0":"data['neighbourhood'].value_counts()","ba75411e":"neigh =data.groupby(\"neighbourhood\").filter(lambda x: x['neighbourhood'].count() > 200)\nprint(len(neigh['neighbourhood']))","a54b0389":"neigh1 = data.groupby(\"neighbourhood\").filter(lambda x: x['neighbourhood'].count() == 1)\nprint(len(neigh1[\"neighbourhood\"]))","8328b0be":"data['neighbourhood_group'].value_counts()","7f9c478d":"ng_price = data.groupby(\"neighbourhood_group\")[\"price\"].mean()\nprint(ng_price)\ndata1 = data","c77bd462":"\n#sns.catplot(x = \"neighbourhood_group\", y = \"price\", hue = \"room_type\", kind = \"swarm\", data = data1)\n#https:\/\/www.machinelearningplus.com\/plots\/top-50-matplotlib-visualizations-the-master-plots-python\/#21.-Histogram-for-Categorical-Variable\n\n\nx_var = 'neighbourhood_group'\ngroupby_var = 'room_type'\n\ndf_agg = data.loc[:, [x_var, groupby_var]].groupby(groupby_var)\n#vals = [df[x_var].values.tolist() for i, df in df_agg]\nvals = [data['price'].values.tolist() for i in df_agg]\n\nplt.figure(figsize=(16,9), dpi= 80)\ncolors = [plt.cm.Spectral(i \/ float(len(vals) - 1 )) for i in range(len(vals))]\nn, bins, patches = plt.hist(vals, data[x_var].unique().__len__(), stacked = True, density = False, color = colors[:len(vals)])\n\nplt.legend({group:col for group, col in zip(np.unique(data[groupby_var]).tolist(), colors[:len(vals)])})\n#plt.title(f\"Stacked Histogram of ${x_var}$ colored by ${groupby_var}$\", fontsize=22)\nplt.xlabel(x_var)\nplt.ylabel(\"Price\")\nplt.ylim(0, 40)\nplt.xticks(ticks = bins, labels = np.unique(data[x_var]).tolist(), rotation = 90, horizontalalignment = 'left')\nplt.show()","73414506":"data = data.drop(columns = [\"id\",\"host_name\"])","c736681c":"data[\"name_length\"] = data['name'].map(str).apply(len)","a1512085":"# Max and Min name length\nprint(data[\"name_length\"].max())\nprint(data[\"name_length\"].min())\nprint(data[\"name_length\"].idxmax())\nprint(data[\"name_length\"].idxmin())","7b608be5":"data.at[25832, 'name']","fa4617fd":"data.at[4033, 'name']","55c2da3e":"data.plot.scatter(x = \"name_length\", y = \"number_of_reviews\" )","4acf0caf":"data[\"number_of_reviews\"].corr(data[\"name_length\"])","d992b202":"data[data[\"name_length\"] < 50].plot.scatter(x = \"price\", y = \"name_length\")","abce31be":"data[\"name_length\"].corr(data[\"price\"])","eb907ae4":"data.name_length.hist()","6b5d240e":"data['room_type'].value_counts()","f75777af":"rt_price = data.groupby(\"room_type\")[\"price\"].mean()\nprint(rt_price)","ecbaeb49":"data[\"minimum_nights\"].describe()","b4aa3339":"data[\"minimum_nights\"].hist()","ab772892":"data[\"minimum_nights\"][data[\"minimum_nights\"] < 10].hist()","ad99dc6a":"data['price'].corr(data['minimum_nights'])","437d927e":"data[\"minimum_nights\"][data[\"minimum_nights\"] > 30]","4ce7e8db":"data.loc[(data.minimum_nights > 30), \"minimum_nights\"] = 30","2f06ca18":"data['price'].corr(data['minimum_nights'])","f6972919":"data[\"availability_365\"].describe()","7469cca6":"data[\"availability_365\"].hist()","adeca82b":"data.drop([\"name\", 'last_review', \"latitude\", 'longitude', 'host_id'], axis = 1, inplace = True)","b503f5c7":"corr = data.corr(method = 'pearson')\nplt.figure(figsize = (15,8))\nsns.heatmap(corr, annot = True)\ndata.columns","6ed45701":"Here, review can be either positive or negative. Also, there is hardly any relationship here.","49cfa87f":"Observation:\n\nMost of prices are less than 1000.","760445ca":"Observation:\n\nSome columns contains text so maybe there would be need to use BoW, tfidf, w2vec, etc.","55dc0688":"id and host_name or host_id are not useful for prediction of rental_price, so dropping them.","947c427f":"Here we can note that Brooklyn and Manhattan tend to have more listings with price > 150. Also, most listings above price > 100 are entire home type followed by private room and shared room which is the cheapest.","6766135e":"Download data: https:\/\/www.kaggle.com\/dgomonov\/new-york-city-airbnb-open-data\n\nThe goal is: to predict Airbnb rental prices","94ebf1db":"Observation:\n\nThere are 16 columns and 49K data-points.","d774b398":"It's quite weird, range is between 1 night to 1250 nights.","4bb8100e":"Mostly, room type is either entire home or private room.","429fd864":"Observation:\n\nIt's a Regression problem. ","1f15cc2b":"Observation:\n\nAlmost 90% of the data is covered.","5a9c06ce":"Observation:\n\nThere are 4 columns that have null values, have to replace them as it might affect later while considering remaining values of the same column.","90daf442":"Observation:\n\n- In all, there are 239 data-points with rental price > 1000.\n- These are either super lavish listings or there can an error during input. Nonetheless, since this records are skewing our data, we can treat them as outliers and drop them.","76acc502":"Most of the number of nights are under 100.","d154f818":"Observation:\n\nThere are 5 groups & 85% is covered by Manhattan & Brooklyn. ","4c50d5e0":"After analysis, deciding to drop these columns as they will not be useful in prediction\n","d7a398ce":"Observation:\n\nThis is kind of Guassian distribution for rental values < 250.","6a4b4128":"Only 747 datapoints have number of minmumn_nights > 30, so replacing all of those with 30."}}