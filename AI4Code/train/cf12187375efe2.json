{"cell_type":{"dcebf4d7":"code","ea60dafb":"code","cf498f40":"code","2b4fe2c9":"code","383215c3":"code","e79a4069":"code","2b452324":"code","353eb5c1":"code","a2e106fc":"code","501a445c":"code","27a7d086":"code","bcba4841":"code","cb12dca8":"code","3c95fd4c":"code","ddb7f8b9":"code","3cc303f5":"code","aee66967":"code","49d1f60b":"markdown","9ffb48cf":"markdown","7098bb44":"markdown"},"source":{"dcebf4d7":"from __future__ import absolute_import, division, print_function, unicode_literals\n# %tensorflow_version 2.x\nimport tensorflow.compat.v2.feature_column as fc\nimport tensorflow as tf\nprint(tf.version)","ea60dafb":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","cf498f40":"from IPython.display import clear_output\nfrom six.moves import urllib","2b4fe2c9":"CSV_COLUMN_NAMES = ['SepalLength','SepalWidth','PetalLength','PetalWidth','Species']\nSPECIES = ['setosa','versicolor','virginica']\n\niris_training_csv = 'https:\/\/storage.googleapis.com\/download.tensorflow.org\/data\/iris_training.csv'\niris_test_csv = 'https:\/\/storage.googleapis.com\/download.tensorflow.org\/data\/iris_test.csv'\ntrain_path = tf.keras.utils.get_file('iris_training.csv', iris_training_csv)\ntest_path = tf.keras.utils.get_file('iris_test.csv', iris_test_csv)","383215c3":"train = pd.read_csv(train_path, names=CSV_COLUMN_NAMES, header=0)\ntest = pd.read_csv(test_path, names=CSV_COLUMN_NAMES, header=0)","e79a4069":"train.shape","2b452324":"test.shape","353eb5c1":"train.head()","a2e106fc":"test.head()","501a445c":"train_y = train.pop('Species')\ntest_y = test.pop('Species')","27a7d086":"train_y.head()","bcba4841":"test_y.head()","cb12dca8":"def input_fn(features, labels, training=True, batch_size=256):\n    # convert the inputs to a data set\n    dataset = tf.data.Dataset.from_tensor_slices((dict(features), labels))\n    # shuffle and repeat if you are in trainig mode\n    if training:\n        dataset = dataset.shuffle(1000).repeat()\n    return dataset.batch(batch_size)","3c95fd4c":"my_feature_columns = []\nfor key in train.keys():\n    my_feature_columns.append(tf.feature_column.numeric_column(key=key))\n    print(my_feature_columns)","ddb7f8b9":"# two hidden layers of 30 and 10 nodes respectively\nclassifier = tf.estimator.DNNClassifier(feature_columns = my_feature_columns, hidden_units = [30, 10], n_classes = 3)\nclassifier.train(\n    input_fn=lambda: input_fn(train, train_y, training=True),\n    steps=5000\n)","3cc303f5":"eval_result = classifier.evaluate(\n    input_fn=lambda: input_fn(test, test_y, training=False)\n)\nmessage = '\\nTest set accuracy: {accuracy:0.3f}\\n'.format(**eval_result)\nprint(message)","aee66967":"def input_fn(features, batch_size=256):\n    # Convert the inputs to a Dataset without labels.\n    return tf.data.Dataset.from_tensor_slices(dict(features)).batch(batch_size)\n\nfeatures = ['SepalLength', 'SepalWidth', 'PetalLength', 'PetalWidth']\npredict = {}\nprint(\"Please type numeric values as prompted.\")\nfor feature in features:\n    valid = True\n    while valid: \n        val = input(feature + \": \")\n        if not val.isdigit(): valid = False\n    predict[feature] = [float(val)]\npredictions = classifier.predict(input_fn=lambda: input_fn(predict))\nfor pred_dict in predictions:\n    print(pred_dict)\n    class_id = pred_dict['class_ids'][0]\n    probability = pred_dict['probabilities'][class_id]\n    print('Prediction is \"{}\" ({:.1f}%)'.format(\n        SPECIES[class_id], 100 * probability))","49d1f60b":"Conclusion: Prediction is \"virginica\".","9ffb48cf":"Example of input:\n\n- 2.4\n- 2.6\n- 6.5\n- 6.3","7098bb44":"> Iris flower data set: The data set consists of 50 samples from each of three species of Iris (Iris setosa, Iris virginica and Iris versicolor).\n\n> Four features were measured from each sample: the length and the width of the sepals and petals, in centimeters. Based on the combination of these four features, Fisher developed a linear discriminant model to distinguish the species from each other.\n\n> The Iris flower data set or Fisher's Iris data set is a multivariate data set introduced by the British statistician, eugenicist, and biologist Ronald Fisher in his 1936 paper The use of multiple measurements in taxonomic problems as an example of linear discriminant analysis.\n\n> It is sometimes called Anderson's Iris data set because Edgar Anderson collected the data to quantify the morphologic variation of Iris flowers of three related species."}}