{"cell_type":{"4ab59a18":"code","aa2e04b9":"code","b22cc21b":"code","1d12baed":"code","e606ca7a":"code","fd7424c4":"code","31556b44":"code","a34c535a":"code","b735ccf1":"code","2e422bc5":"code","165cc4b1":"code","8d9b9c9e":"code","4af6e6d5":"code","a63132f3":"code","47abae08":"code","01472cc4":"code","289b71ff":"code","079f33c8":"code","f4c883cd":"code","7b1d6f9f":"code","e2367e86":"code","2ea383b3":"code","4742eec8":"code","cc17a2dc":"code","eee00596":"code","01632388":"code","0bc81744":"code","94f24d03":"code","a198a953":"code","6105e0be":"code","5a4d2a1f":"code","7afbd7c3":"code","50d42da6":"code","03ef3908":"code","4e709dee":"code","4cdfa256":"code","c744d188":"code","265cf307":"code","c063ffab":"code","8efa63d5":"code","646f99fc":"code","08ae1dbf":"code","9ac9060a":"code","f41b2467":"code","c78bc6b2":"code","5bf4e0a7":"code","1d507866":"markdown","c53407c2":"markdown","3a5dd8c5":"markdown","a00d0ddf":"markdown","7cc81db6":"markdown","c8801b23":"markdown","25241549":"markdown","073b0e79":"markdown","71280072":"markdown","96da2ace":"markdown","fa7ce9e7":"markdown","4add02d3":"markdown","09023c26":"markdown","1dfe71c1":"markdown","6e03b018":"markdown","20317f06":"markdown","af3937b0":"markdown","2df4d5c0":"markdown","6f276fc3":"markdown","e654e79d":"markdown","0a0a08f5":"markdown","972640ab":"markdown","09c59350":"markdown","f306562e":"markdown","b053452f":"markdown","d4c3bd0d":"markdown","add62545":"markdown","5ad800e0":"markdown"},"source":{"4ab59a18":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n%matplotlib inline","aa2e04b9":"# Load your data and print out a few lines. Perform operations to inspect data\n#   types and look for instances of missing or possibly errant data.\n#read the data\ndf = pd.read_csv('..\/input\/tmdb-movies-dataset\/tmdb-movies.csv')\n#make a copy of the original data\noriginal_data = df.copy()\n#read the first rows\ndf.head()","b22cc21b":"#the shape of our data\ndf.shape","1d12baed":"#type of columns\ndf.dtypes","e606ca7a":"df[df.select_dtypes(exclude='object').columns].describe().\\\ndrop('id',axis=1).style.background_gradient(axis=1,cmap=sns.light_palette('green', as_cmap=True))","fd7424c4":"num_cols = ['popularity','budget','revenue','runtime','vote_count','vote_average','release_year','budget_adj','revenue_adj']\ntemp = df[num_cols]\nplt.figure();\nsns.pairplot(df);","31556b44":"df.skew()","a34c535a":"plt.figure(figsize = (20,8));\ncorr = df[num_cols].corr()\nsns.heatmap(corr,cmap='viridis',annot = True,square = True);","b735ccf1":"#visualizing the distribution of popularity and average_vote columns\nfig ,axs = plt.subplots(1,2,figsize=(20,6))\n\nsns.distplot(df['popularity'],ax=axs[0]);\naxs[0].set_title('Distribution of Popularity');\nsns.distplot(df['vote_average'],ax=axs[1]);\naxs[1].set_title('Distribution of Average Votes');","2e422bc5":"df.isnull().sum()","165cc4b1":"#show the percentage of null values in each column\npd.DataFrame(round(100*(df.isnull().sum()\/len(df.index)),4)).rename(columns={0:'null values precentage'})\\\n                                                            .sort_values('null values precentage',ascending = False)","8d9b9c9e":"#visualizing the null values\nplt.figure(figsize=(12,6))\nsns.heatmap(df.isnull());","4af6e6d5":"#lets drop imdb_id, homepage and release_date columns from our data\ndf.drop(['imdb_id','homepage'],axis =1,inplace =True)\n\n#all columns that have null values contains string, so its better to drop it\ndf.dropna(how = 'any',inplace = True)","a63132f3":"#lets look to the shape of our data \ndf.shape","47abae08":"#converting release_date column to a timestamp\ndf['release_date'] = pd.to_datetime(df['release_date'])\n\n#create a new month column \ndf['release_month'] = df['release_date'].dt.month\n\n#create a new day name \ndf['release_day'] = df['release_date'].dt.day_name","01472cc4":"def bar_plot(x, y, x_label='', y_label='', title=''):\n    #visualizing the results\n    plt.figure(figsize = (20,10)) #set a figure size\n    ax=sns.barplot(x =x , y = y)\n    # rotate xtick labels by 40 degrees\n    ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\",fontsize = 12)\n    plt.tight_layout()\n    #gives names to x-axis , y-axis & the title\n    plt.xlabel(x_label , fontsize = 20)\n    plt.ylabel(y_label , fontsize = 20)\n    plt.title(title,fontsize = 30)\n    plt.show()","289b71ff":"def pie_plot(x, labels, title='',explode=None):\n    fig, ax = plt.subplots(figsize=(20,10))\n    ax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n    ax.set_title(title,fontsize=25)\n    ax.pie(labels=labels,\n            x=x,\n            shadow=True, startangle=18,\n            autopct='%1.1f%%',\n            explode=explode);\n    plt.show()","079f33c8":"def line_plot(x, y, x_label='', y_label='', title=''):\n    #visualizing our results\n    plt.figure(figsize = (20,8)) #set a figure size\n    ax=sns.lineplot(x = x , y = y)\n    plt.tight_layout()\n    #gives names to x-axis , y-axis & the title\n    plt.xlabel(x_label , fontsize = 20)\n    plt.ylabel(y_label , fontsize = 20)\n    plt.title(title,fontsize = 30)\n    plt.show()","f4c883cd":"#lets show the ten highest revenue movies\ntemp = df.sort_values('revenue',ascending=False)[['original_title','revenue']].head(10)\ntemp","7b1d6f9f":"bar_plot(x=temp['original_title'], y=temp['revenue'], \n         x_label='Movie name', y_label='Revenue', title='Highest revenue movies')","e2367e86":"explode = (0.1,0,0,0,0,0,0,0,0,0)\npie_plot(labels=temp['original_title'],x=temp['revenue'],\n        title='Pie plot for highest revenues',explode=explode)","2ea383b3":"#lets show the top ten popular movies\ntemp = df.sort_values('popularity',ascending=False)[['original_title','popularity']].head(10)\ntemp","4742eec8":"bar_plot(x=temp['original_title'], y=temp['popularity'], \n         x_label='Movie name', y_label='popularity', title='Bar plot for the most popular movies')","cc17a2dc":"explode = (0.1,0,0,0,0,0,0,0,0,0)\npie_plot(labels=temp['original_title'],x=temp['popularity'],\n        title='Pie plot for the most popular movies',explode=explode)","eee00596":"#lets show the top ten voted movies\ntemp = df.sort_values('vote_average',ascending=False)[['original_title','vote_average']].head(10)\ntemp","01632388":"bar_plot(x=temp['original_title'], y=temp['vote_average'], \n         x_label='Movie name', y_label='Average Votes', \n         title='Bar plot for the highest voted movies')","0bc81744":"genre_labels = set()\n\nfor s in df['genres'].str.split('|').values:\n    genre_labels = genre_labels.union(set(s))\n    \nprint('We have {} types of movie :'.format(len(genre_labels)))\ngenre_labels","94f24d03":"#the genre column has its data seperated by '|' character\n#lets create a new columns for visualization\n#first we need to know all type of genre, then count the number of each genre in our rows\n\ninit = {}\nfor i in range(len(df)):\n    row_genres = df['genres'].iloc[i].split('|')\n    for g in row_genres:\n        if g in init:\n            init[g]+=1\n        if g not in init:\n            init[g]=1\n            \n#Create a new data frame\n\ngenre_df = pd.DataFrame(init.values()).T\ngenre_df.columns = init.keys()\ngenre_df = genre_df.T.rename(columns={0:'Genre Count'}).sort_values(by='Genre Count',ascending=False)\ngenre_df","a198a953":"data = genre_df.reset_index()\n\nbar_plot(x=data['index'], y=data['Genre Count'], \n         x_label='Genre', y_label='Count', \n         title='Genre total count')","6105e0be":"#lets create a new dataframe to count the value for each genre\ngenre = df.copy()\n\nfor g in genre_df.index:\n    genre[g] = np.zeros(len(genre))\n    \nfor i in range(len(df)):\n    row_genres = genre['genres'].iloc[i].split('|')\n    for g in row_genres:\n        genre[g].iloc[i]+=1","5a4d2a1f":"genre_for_year = genre.groupby('release_year').sum()[list(init.keys())]\ngenre_for_year","7afbd7c3":"year_df = pd.DataFrame(df['release_year'].value_counts())\nyear_df.columns = ['Movies Count']\nyear_df.head()","50d42da6":"data = year_df.reset_index()\n\nbar_plot(x=data['index'], y=data['Movies Count'], \n         x_label='Year', y_label='Count', \n         title='Total Movies For Each Year')","03ef3908":"line_plot(x = data['index'] , y = data['Movies Count'], \n          x_label='Year', y_label='Count', \n          title='Total Movies Over The Year')","4e709dee":"### lets see what's in this year (2014)\ntemp_2014 = genre_for_year.loc[2014].to_frame().rename(columns={2014:'genre count'})\\\n            .sort_values('genre count',ascending=False).reset_index()\ntemp_2014","4cdfa256":"data = temp_2014.reset_index()\n\nbar_plot(x=data['index'], y=data['genre count'], \n         x_label='Genre', y_label='Count', \n         title='Genre total count for the year 2014')","c744d188":"#creat a new dataframe has the total number of revenue for each genre\ntemp = pd.DataFrame(columns=init.keys())\nfor g in genre_df.index:\n    temp[g] = np.zeros(1)\n\nfor i in range(len(df)):\n    for col in genre[list(temp.columns)]:\n        if genre[col].iloc[i]>0:\n            temp[col]+=df['revenue'].iloc[i]","265cf307":"temp = temp.T.rename(columns={0:'revenue'})\ntemp","c063ffab":"data = temp.reset_index().sort_values('revenue',ascending=False)\n\nbar_plot(x=data['index'], y=data['revenue'], \n         x_label='Genre', y_label='Total Revenues', \n         title='Total Revenues For Each Genre')","8efa63d5":"#creat a new dataframe for the popularity fr each genre\ntemp = pd.DataFrame(columns=init.keys())\nfor g in genre_df.index:\n    temp[g] = np.zeros(1)\n\nfor i in range(len(df)):\n    for col in genre[list(temp.columns)]:\n        if genre[col].iloc[i]>0:\n            temp[col]+=df['popularity'].iloc[i]","646f99fc":"temp = temp.T.rename(columns={0:'popularity'}).sort_values('popularity',ascending=False)\ntemp","08ae1dbf":"data = temp.reset_index()\n\nbar_plot(x=data['index'], y=data['popularity'], \n         x_label='Genre', y_label='Total Popularity', \n         title='The most popular Movies')","9ac9060a":"#Top ten director\ntemp = df['director'].value_counts().to_frame().rename(columns={'director':'Director\\'s movies'}).head(10)\ntemp","f41b2467":"data = temp.reset_index()\n\nbar_plot(x=data['index'], y=data['Director\\'s movies'], \n         x_label='Directors', y_label='Total number of movies', \n         title='Total number of movies for the top ten directors')","c78bc6b2":"temp = df['production_companies'].value_counts().to_frame().rename(columns={'production_companies':'movies count'}).head(10)\ntemp","5bf4e0a7":"data = temp.reset_index()\n\nbar_plot(x=data['index'], y=data['movies count'], \n         x_label='Production Companies', y_label='Total number of movies', \n         title='Total number of movies for the top ten direction companies')","1d507866":"### Exploratory Data Analysis","c53407c2":"# Data Cleaning","3a5dd8c5":"<a id='q11'><\/a>\n> ### 11.Which production company has made movies the most?","a00d0ddf":"<a id='q8'><\/a>\n> ### 8.Which kind of movies get the highest revenue?","7cc81db6":"> <h3> Conclusion<\/h3><br>\n<b><li>Action movies have the highest revenues","c8801b23":"<a id='q7'><\/a>\n> ### 7.What kind of movies have made in 2014 ?","25241549":"<a id='q5'><\/a>\n> ### 5.What kind of genres most repeated for each year?","073b0e79":"### Dealing with the missing values","71280072":"<a id='q3'><\/a>\n> ### 3.Which movies have the highest avrerage votes? ","96da2ace":"> <h3> Conclusion<\/h3><br>\n<b>We can see clearly that darama genre has made the most","fa7ce9e7":"#### checkthe null values in our data","4add02d3":"<a id='q2'><\/a>\n> ### 2.Which movies are the most popular? ","09023c26":"<a id='q4'><\/a>\n> ### 4.What kind of  movie genres are made the most? ","1dfe71c1":"> <h3> Conclusion<\/h3><br>\n<b><li>Drama movies are the most popular movies","6e03b018":"<a id='q6'><\/a>\n> ### 6.In which year has the highest number of movies?","20317f06":"<h3>Main questions to answer:<\/h3>\n\n<ul>\n    \n<li><a href=\"#q1\">1.Which movies have the highest revenue<\/a><\/li>\n\n<li><a href=\"#q2\">2.Which genres are most popular from year to year?<\/a><\/li>\n\n<li><a href=\"#q3\">3.In which year most of the movies released?<\/a><\/li>\n\n<li><a href=\"#q4\">4.What kind of  movie genres are made the most?<\/a><\/li>\n\n<li><a href=\"#q5\">5.What kind of genres most repeated for each year?<\/a><\/li>\n\n<li><a href=\"#q6\">6.In which year has the highest number of movies?<\/a><\/li>\n\n<li><a href=\"#q7\">7.What kind of movies have made in 2014 ?<\/a><\/li>\n\n<li><a href=\"#q8\">8.Which movies have the highest revenue?<\/a><\/li>\n\n<li><a href=\"#q9\">9.Which movies have the highest popularity?<\/a><\/li>\n\n<li><a href=\"#q10\">10.Which directors have made movies the most?<\/a><\/li>\n\n<li><a href=\"#q11\">11.Which production company has made movies the most?<\/a><\/li>\n<\/ul>","af3937b0":"> <h3> Conclusion<\/h3><br>\n<b><li>Director Steven Spielberg has the highest number of movies with 28 movies","2df4d5c0":"<a id='introduction'><\/a>\n## Introduction\n\n<b><p>This data set contains information about 10,000 movies collected from The Movie Database (TMDb), including user ratings and revenue,cast,release year.<br>\nI am ging to do some cleaning and analysis for this data and then i will ask some quistions, answer them, visualize the reselts and write my conclusions<\/p><\/b>\n\n<h3>Here we have :<\/h3><br>\n<li><b>id : <\/b>Unique id's for each row\n<li><b>imdb_id : <\/b>System generated unique id\n<li><b>popularity : <\/b>popularity score \n<li><b>budget : <\/b>budget in dollars\n<li><b>revenue : <\/b>revenue in dollars\n<li><b>original_title : <\/b>Movie title\n<li><b>cast : <\/b>cast performed in movie\n<li><b>homepage : <\/b>website link of movie\n<li><b>director : <\/b>director name\n<li><b>tagline : <\/b>tagline of movie\n<li><b>keywords : <\/b>words used to give significant idea\n<li><b>overview : <\/b>general review of movie\n<li><b>runtime : <\/b>movie duration in seconds\n<li><b>genres : <\/b>categories of the movie\n<li><b>production_companies : <\/b>producing company name\n<li><b>release_date : <\/b>movie releasing date\n<li><b>vote_count : <\/b>votes for the movie\n<li><b>vote_average : <\/b>average votes given by viewers\n<li><b>release_year : <\/b>movie releasing year\n<li><b>budget_adj : <\/b>budget in 2010 dollars,accounting for inflation\n<li><b>revenue_adj : <\/b>revenue in 2010 dollars,accounting for inflation<\/li>","6f276fc3":".<h1>Conclusions:<\/h1>\n><h2>Results:<\/h2>\n><li>Drama genre is the most kind of movies has made.\n><li>Action movies are the most popular.\n><li>Avatar movie has the highest revenue.\n><li>Jurassic World movie is the most popular.\n><li>Highest average vote is 8.4 like The Shawshank Redemption movie.\n><li>Year 2014 is the year that has the highest number of movies.\n><li>Steven Spielberg director has the highest number of movies.\n><li>Paramount Pictures company produced the most of movies.<\/li>\n\n><h2>Limitations:<\/h2>\n><li>We have a lot of missing data in many columns such as production_companies, homepage and tagline columns.\n><li>Most of our data are not normally distributed, and also have high skeweness.","e654e79d":"> <h3> Conclusion<\/h3><br>\n<b>We can see clearly the effect of null values in our data and most of them in homepage column","0a0a08f5":"# <h1 style=\"text-align:center\">Thanks<\/h1>","972640ab":"<a id='wrangling'><\/a>\n## Data Wrangling\n\n### General Properties","09c59350":"> <h3> Conclusion<\/h3><br>\n<b><li>Year 2014 is the year that has the highest number of movies\n    <li>Number of movies increases by year","f306562e":"# <h1 style=\"text-align:center\">TMDB 5000 Movie Dataset<\/h1>\n<h1 style=\"color:blue;\">Upvote my work if you find it usefull<\/h1>\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>","b053452f":"<a id='q10'><\/a>\n> ### 10.Which directors have made movies the most?","d4c3bd0d":"<a id='q9'><\/a>\n> ### 9.Which kind of movies have the highest popularity?","add62545":"> <h3> Conclusion<\/h3><br>\n<li><b>Popularity has a high skewness number\n<li>Vote average is almost normaly distributes\n<li>Movie and revenue increases over the years\n<li>","5ad800e0":"<a id='q1'><\/a>\n> ### 1.Which movies have the highest revenue? "}}