{"cell_type":{"9799665d":"code","387dbb4e":"code","63ceeacf":"code","7d9f2946":"code","43903637":"code","e6b5db84":"code","aa658246":"code","d8992591":"code","5ee4788c":"markdown","bc0f8845":"markdown","5f9546bd":"markdown","d1d6c11c":"markdown","ee31045e":"markdown"},"source":{"9799665d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","387dbb4e":"dataframe = pd.read_csv(\"\/kaggle\/input\/the-human-freedom-index\/hfi_cc_2020.csv\")\ndataframe","63ceeacf":"dataframe.info()","7d9f2946":"#se puede separar los datos por los de tipo n\u00famero (int o float) y los que son objeto.\ncuantitativos_lista=list()\ncualitativos_lista=list()\nfor atributo in dataframe.columns:\n    if (np.dtype(dataframe[atributo])==np.int64) or (np.dtype(dataframe[atributo])==np.float64):\n        cuantitativos_lista.append(atributo)\n    else:\n        cualitativos_lista.append(atributo)\nprint(\"lista de atributos cuantitativos:\" ,cuantitativos_lista)\nprint(\"\\n\")\nprint(\"lista de atributos cualitativos:\" ,cualitativos_lista)","43903637":"rango=[]\nfor atributo in cuantitativos_lista:\n    rango.append((dataframe[atributo].min(),dataframe[atributo].max()))\nprint(rango)","e6b5db84":"import scipy\nfrom scipy import stats #se importa para calcular la moda.\n\nmoda_cualitativos=list()\nmedia_cuantitativos=list()\n\nfor atributo in cualitativos_lista:\n    moda_cualitativos.append(stats.mode(dataframe[atributo]))\nfor atributo in cuantitativos_lista:\n    media_cuantitativos.append(np.mean(dataframe[atributo]))\n\nprint(\"Moda cualitativos:\", moda_cualitativos)\nprint(\"\\n\")\nprint(\"Media cuantitativos:\",media_cuantitativos)","aa658246":"#El rango se calcul\u00f3 previamente.\nprint(rango)","d8992591":"varianza=list()\ndesviacion=list()\n\nfor atributo in cuantitativos_lista:\n    varianza.append(np.var(dataframe[atributo]))\n    desviacion.append(np.std(dataframe[atributo]))\nprint(\"Varianza cuantitativos\",varianza)\nprint(\"\\n\")\nprint(\"Desviaci\u00f3n estandar\",desviacion)","5ee4788c":"* Define el rango de cada uno de los atributos (cuantitativos).","bc0f8845":"* Obt\u00e9n el rango, varianza, desviaci\u00f3n estandar para los atributos cuantitativos.","5f9546bd":"* Obt\u00e9n una lista con los atributos cuantitativos y otra lista con los atributos cualitativos.","d1d6c11c":"* Obt\u00e9n la moda o promedio dependiendo el caso para cada atributo.","ee31045e":"**Ejercicio 6**\nUtiliza el dataset de que se trabajo en kaggle en los ejercicios de estad\u00edstica 1 para el siguiente ejercicio. Utiliza 10 atributos aleatorios del total.\n\n1. Gr\u00e1fica la distribuci\u00f3n de cada atributo\n2. En cada gr\u00e1fica agrega una recta que indique la media, y 2 rectas que indiquen 1 desviaci\u00f3n estandar hacia derecha y hacia la izquierda, 2 rectas que indiquen 2 desviaciones estandar hacia la derecha y hacia la izquierda.\n3. Indica si el skewness y la curtosis son positivas o negativas.\n4. Indica si cumplen con la regla del 68-95-99.7"}}