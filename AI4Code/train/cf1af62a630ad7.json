{"cell_type":{"2afa2d8f":"code","c1800262":"code","112bb51d":"code","6ec9c63b":"code","a3b07dc9":"code","805f6fda":"code","566ca2a8":"code","38b85549":"code","bf25a273":"code","feac1139":"code","aaba1380":"code","0e402d47":"code","ce2800d6":"code","70282459":"code","b99c4a6e":"code","7fb499d8":"code","b077affc":"code","83c8755f":"code","345a88da":"code","0f08547e":"code","d19202d9":"code","1f5f6b32":"code","6cf34b7d":"code","494bfd76":"code","7e85f55a":"markdown","c2b712f2":"markdown","54e55f5d":"markdown","2ddbc6a1":"markdown","92dbe7cc":"markdown","ee0c5129":"markdown","65620854":"markdown","0535546b":"markdown","4bf223b5":"markdown","672d2824":"markdown","5267da73":"markdown","d7e9bd20":"markdown","03ba26ee":"markdown","c8aa830e":"markdown","7313e76c":"markdown","6487d728":"markdown","b6ba2380":"markdown","6d81c766":"markdown","6b2b641a":"markdown","a5a3a1af":"markdown","41ad6833":"markdown"},"source":{"2afa2d8f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder","c1800262":"train=pd.read_csv('..\/input\/titanic\/train.csv')\ntest=pd.read_csv('..\/input\/titanic\/test.csv')\n\nfull=pd.concat([train,test],ignore_index=True)\ntest.head()","112bb51d":"full.describe()","6ec9c63b":"full.isnull().sum()","a3b07dc9":"full.drop(['Cabin'],axis=1,inplace=True)","805f6fda":"full.boxplot(column='Fare',by='Pclass',figsize=(16,8))","566ca2a8":"full[['Pclass','Fare']].groupby('Pclass').median()","38b85549":"full.loc[full.Fare.isnull(),:]","bf25a273":"full.Fare.fillna(8.05, inplace=True)\n\nfull.isnull().sum()","feac1139":"full.boxplot(column='Age',by='Sex',figsize=(16,8))","aaba1380":"full.boxplot(column='Age',by='Pclass',figsize=(16,8))","0e402d47":"Age_mean_median_by_Pclass=full[['Pclass','Age']].groupby('Pclass').aggregate(['mean','median'])\nAge_mean_median_by_Pclass","ce2800d6":"age_class1_fill=Age_mean_median_by_Pclass.iloc[0,0].round(2)\nage_class2_fill=Age_mean_median_by_Pclass.iloc[1,0].round(2)\nage_class3_fill=Age_mean_median_by_Pclass.iloc[2,1].round(2)\n\nfull.loc[full.Pclass==1,'Age']=full.loc[full.Pclass==1,'Age'].fillna(age_class1_fill)\nfull.loc[full.Pclass==2,'Age']=full.loc[full.Pclass==2,'Age'].fillna(age_class2_fill)\nfull.loc[full.Pclass==3,'Age']=full.loc[full.Pclass==3,'Age'].fillna(age_class3_fill)\n\nfull.isnull().sum()","70282459":"full['Embarked'].value_counts()","b99c4a6e":"full['Embarked'].fillna('S',inplace=True)\n\nfull.isnull().sum()","7fb499d8":"Ticket_num=full['Ticket'].str.split(' ').str[-1]\nle = LabelEncoder()\nTicket_num=le.fit_transform(Ticket_num)\nfull['Ticket']=Ticket_num\nfull['Ticket']","b077affc":"first_name=full['Name'].str.split(',').str[1]\nname_title=first_name.str.split(' ').str[1]\n\nname_title=name_title.replace([\"Ms.\", \"Mlle.\"], \"Miss.\")\nname_title=name_title.replace([\"Mme.\", \"the\", \"Lady.\", \"Dona.\"], \"Mrs.\")\nname_title=name_title.replace([\"Dr.\", \"Major.\", \"Col.\", \"Sir.\", \"Rev.\", \"Jonkheer.\", \"Capt.\", \"Don.\"], \"Mr.\")\nfull['Name_title']=name_title\n\nfull.drop('Name',axis=1,inplace=True)\nfull['Name_title']","83c8755f":"#Sex_map={'male':0,'female':1}\n#Embarked_map={'S':0,'C':1,'Q':2}\n#Name_title_map={'Mr.':0,'Mrs.':1,'Miss.':2,'Master.':3}\n#full['Sex']=full['Sex'].map(Sex_map)\n#full['Embarked']=full['Embarked'].map(Embarked_map)\n#full['Name_title']=full['Name_title'].map(Name_title_map)\nfull.head()","345a88da":"full['Family_size']=full['SibSp']+full['Parch']\n\nfull.drop(['SibSp','Parch'],axis=1,inplace=True)\n\nfull['Fare']=(full['Fare']-full['Fare'].mean())\/full['Fare'].std()\nfull['Fare']\n\nfull.head()","0f08547e":"train=full.loc[full['Survived'].notnull(),:]\ntest=full.loc[full['Survived'].isnull(),:].drop('Survived',axis=1)","d19202d9":"!pip install pycaret","1f5f6b32":"train.head()","6cf34b7d":"from pycaret.classification import *\n\nmodels=setup(data=train, target='Survived', train_size=0.8,\n               ignore_features=['PassengerId','Ticket'],\n               numeric_features=['Age','Fare','Family_size'],\n               categorical_features=['Embarked','Name_title','Sex'],\n               ordinal_features={'Pclass':['1','2','3']},\n               normalize=True,\n               silent=True)\n\nbest_model=compare_models(exclude=['xgboost'], sort='F1')\n\noutput=predict_model(best_model, data=test)","494bfd76":"submission=output[['PassengerId','Label']].set_index('PassengerId').rename({'Label':'Survived'},axis=1)\nsubmission['Survived']=submission['Survived'].astype(float).astype(int)\nsubmission.to_csv('submission.csv')","7e85f55a":"Add family size and normalize fare","c2b712f2":"I see difference of Age in each class, this might be useful information in which value should we fill in age column\nIn class 1 and class 2, it looklike normal distribution when I observe from green line\nIn class 3, it might be a little bit skew\n\nSo in conclude for people who in class 1 and class 2, I fill their age with mean\n\nIn class 3, I fill their age with median","54e55f5d":"Plot boxplot of Age by Pclass","2ddbc6a1":"This notebook folk from my previous [notebook](https:\/\/www.kaggle.com\/ccaitlum\/titanic-prediction-with-various-model).\n\nIn this notebook I will try to use pycaret to predict titanic survivor.\n\nIf you like my work, please consider upvote.","92dbe7cc":"Extract name title","ee0c5129":"# About this notebook","65620854":"# Using Pycaret","0535546b":"Maybe mode is best choice to fill missing values in embarked","4bf223b5":"Next I will fill in Fare value but I need to check Fare distribution first\nI think Fare might relate to Pclass, so I plot a boxplot","672d2824":"Split data","5267da73":"Explore embarked","d7e9bd20":"Extract ticket number and do a label encode","03ba26ee":"Install pycaret","c8aa830e":"There are so many null in Cabin, so I will drop it","7313e76c":"From boxplot Fare is very skew when I observed from green line, so median might be best choice to fill value","6487d728":"Plot boxplot of Age by sex","b6ba2380":"I use some technique from this [notebook](https:\/\/www.kaggle.com\/ihelon\/titanic-hyperparameter-tuning-with-gridsearchcv)","6d81c766":"Convert string data to numberic data","6b2b641a":"# Get the data ready","a5a3a1af":"He is in class 3 and he is the only one who have missing value in Fare, so I fill Fare with 8.05","41ad6833":"Submit"}}