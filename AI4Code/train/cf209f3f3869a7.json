{"cell_type":{"143131e1":"code","66452bce":"code","a5bdaeca":"code","ecb6eb02":"code","4b3dac1d":"code","dabc443f":"code","8ac0c86d":"code","c04d101b":"code","e6f18630":"code","90574bf6":"code","c1fa3770":"code","225f43c5":"code","92f31cb2":"code","d85b32a4":"code","189ba5c9":"code","448d1a77":"code","3e13771c":"code","0b43a810":"code","65218db3":"code","d9172672":"code","f216fd61":"code","bff3677a":"code","f891d0ad":"code","22cf7cc9":"markdown","2676cebe":"markdown"},"source":{"143131e1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","66452bce":"df = pd.read_csv('..\/input\/plantvillagedataset\/leaf_grouping\/leaf_maps\/Tomato_YLCV Virus.csv', encoding='ISO-8859-2')\ndf.head()","a5bdaeca":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px","ecb6eb02":"px.histogram(df, x='File Name', color='Leaf #')","4b3dac1d":"fig = px.bar(df, \n             x='Leaf #', y='File Name', color_discrete_sequence=['#D63230'],\n             title='Leaves', text='Leaf #')\nfig.show()","dabc443f":"from fastai.vision.all import *\nfrom fastai.imports import *\nfrom fastai.vision.data import *\nfrom fastai import *\nimport numpy as np\nimport fastai\nimport matplotlib.pyplot as plt","8ac0c86d":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","c04d101b":"path = Path(\"\/kaggle\/input\/plantvillagedataset\/repository\/spMohanty-PlantVillage-Dataset-442d23a\/data_distribution_for_SVM\/train\")\npath.ls()","e6f18630":"np.random.seed(42)\ndata = ImageDataLoaders.from_folder(path, train=\".\", valid_pct=0.2, item_tfms=RandomResizedCrop(512, min_scale=0.75),\n                                    bs=32,batch_tfms=[*aug_transforms(size=256, max_warp=0), Normalize.from_stats(*imagenet_stats)],num_workers=0)","90574bf6":"data.show_batch(nrows=3, figsize=(7,8))","c1fa3770":"data.show_batch(nrows=2, figsize=(7,8))","225f43c5":"data.show_batch(nrows=1, figsize=(7,8))","92f31cb2":"path2 = Path(\"\/kaggle\/input\/plantvillagedataset\/repository\/spMohanty-PlantVillage-Dataset-442d23a\/data_distribution_for_SVM\/test\")\npath2.ls()","d85b32a4":"np.random.seed(42)\ndata2 = ImageDataLoaders.from_folder(path2, train=\".\", valid_pct=0.2, item_tfms=RandomResizedCrop(512, min_scale=0.75),\n                                    bs=32,batch_tfms=[*aug_transforms(size=256, max_warp=0), Normalize.from_stats(*imagenet_stats)],num_workers=0)","189ba5c9":"data2.show_batch(nrows=3, figsize=(7,8))","448d1a77":"data2.show_batch(nrows=2, figsize=(7,8))","3e13771c":"data2.show_batch(nrows=1, figsize=(7,8))","0b43a810":"def _add1(x): return x+1\ndumb_tfm = RandTransform(enc=_add1, p=0.5)\nstart,d1,d2 = 2,False,False\nfor _ in range(40):\n    t = dumb_tfm(start, split_idx=0)\n    if dumb_tfm.do: test_eq(t, start+1); d1=True\n    else:           test_eq(t, start)  ; d2=True\nassert d1 and d2\ndumb_tfm","65218db3":"from PIL import Image\n\nimg = Image.open(\"..\/input\/plantvillagedataset\/repository\/spMohanty-PlantVillage-Dataset-442d23a\/data_distribution_for_SVM\/test\/7\/5f20d8a3-68ea-402c-a6b4-871fdf1d5432.JPG\")\nimg","d9172672":"_,axs = subplots(1,2)\nshow_image(img, ctx=axs[0], title='original')\nshow_image(img.flip_lr(), ctx=axs[1], title='flipped');","f216fd61":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax,sz in zip(axs.flatten(), [300, 500, 700]):\n    show_image(img.crop_pad(sz), ctx=ax, title=f'Size {sz}');","bff3677a":"_,axs = plt.subplots(1,3,figsize=(12,4))\nfor ax,mode in zip(axs.flatten(), [PadMode.Zeros, PadMode.Border, PadMode.Reflection]):\n    show_image(img.crop_pad((600,700), pad_mode=mode), ctx=ax, title=mode);","f891d0ad":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke Was here' )","22cf7cc9":"#<font color=\"#E74C3C\">Be prepared for 3 Gigas of Files<\/font>","2676cebe":"![](https:\/\/media1.giphy.com\/media\/FooCq874TGUfu\/200w.webp?cid=ecf05e47e3h82nl71adwx9qrnb38jot20e9orqkw6vop16sj&rid=200w.webp)"}}