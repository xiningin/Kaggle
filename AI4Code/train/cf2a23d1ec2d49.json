{"cell_type":{"2c99e83f":"code","c7168e3f":"code","44ef3675":"code","016a0909":"code","d7893847":"code","8fcaa160":"code","f5bd6f29":"code","4a269610":"code","b20dbcb7":"code","851cbf1d":"code","3d56be22":"code","f80e4ebc":"code","6e24d76d":"code","469c16fb":"code","56cddb63":"code","2b05c7f3":"code","1feaa8a9":"code","16b538ec":"code","c9e45b93":"code","5a9c00c5":"code","afb5f736":"code","406282cc":"code","351b4986":"code","cf0b9bf7":"code","19cc48a3":"code","30997501":"code","a92bb86c":"code","b0fa734f":"code","4217605e":"code","cbc9e8da":"code","1b29207a":"code","55477f91":"code","aabed443":"code","cebe07fb":"code","dc92ff05":"code","a1f4fcd9":"code","612a91d8":"code","efb6a657":"code","f5c92291":"code","2a88a7ea":"code","68c62100":"code","ab9cc76c":"code","d828eabe":"code","77463310":"code","82189afd":"code","24cab701":"markdown","8d0487d5":"markdown","a08cd5e7":"markdown","00e76161":"markdown","8d9cf8e9":"markdown","c38633d5":"markdown","9b86108f":"markdown","03e0f3de":"markdown","0c5bc935":"markdown","a68d4dbb":"markdown","ad9dbce1":"markdown","7e969ae6":"markdown","76ba8417":"markdown","3dd79a4c":"markdown","0b49d0bb":"markdown","e806e58a":"markdown","a06abf10":"markdown","4fb4d2af":"markdown","3b8b64da":"markdown","9b9b77d6":"markdown","88cc04e0":"markdown","1f2f7582":"markdown","a48a9604":"markdown","8f94eae6":"markdown","f5b4ffee":"markdown","6d1e978f":"markdown","e9c2732f":"markdown","21ed851f":"markdown","cbb723d5":"markdown","34d6b330":"markdown","dfdc75de":"markdown"},"source":{"2c99e83f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c7168e3f":"import matplotlib.pyplot as plt\nimport seaborn as sns\n#plt.rcParams['font.sans-serif'] = ['SimHei'] #\u7528\u6765\u6b63\u5e38\u663e\u793a\u4e2d\u6587\u6807\u7b7e\n#plt.rcParams['axes.unicode_minus'] = False #\u7528\u6765\u6b63\u5e38\u663e\u793a\u8d1f\u53f7\n%matplotlib inline","44ef3675":"df = pd.read_csv('..\/input\/BlackFriday.csv')","016a0909":"df.info()","d7893847":"df.head(4)","8fcaa160":"df.isnull().sum()","f5bd6f29":"user = df[['User_ID', 'Gender', 'Age', 'Occupation', 'City_Category',\n       'Stay_In_Current_City_Years', 'Marital_Status']].drop_duplicates()","4a269610":"tmp = df.groupby('User_ID')['Purchase'].agg({'count','sum'}).rename(columns={'count':'buycount','sum':'buysum'})","b20dbcb7":"user = pd.merge(user,tmp,on='User_ID')","851cbf1d":"product = df[['Product_ID','Product_Category_1','Product_Category_2','Product_Category_3']].drop_duplicates()","3d56be22":"tmp = df.groupby('Product_ID')['Purchase'].agg({'count','sum'}).rename(columns={'count':'productcount','sum':'productsum'})","f80e4ebc":"product = pd.merge(product,tmp,on='Product_ID')","6e24d76d":"product['price'] = product['productsum']\/product['productcount']","469c16fb":"buylist = df[['User_ID','Product_ID','Purchase']]","56cddb63":"df.groupby('Gender')['User_ID'].count().plot.bar(title='Gender')","2b05c7f3":"df.groupby('Gender')['User_ID'].count().plot.bar()","1feaa8a9":"user['Age'].value_counts().sort_index(ascending=False).plot.barh(title='Age')","16b538ec":"user.head(4)","c9e45b93":"user.pivot_table(index='Age',columns='Gender',values='buysum',aggfunc='mean').plot.bar(title='Age & Gender')","5a9c00c5":"user['Occupation'].value_counts().plot.bar(title='Occupation')","afb5f736":"user['City_Category'].value_counts().plot.bar(title='City_Category')","406282cc":"user['Stay_In_Current_City_Years'].value_counts().plot.bar(title='Stay_In_Current_City_Years')","351b4986":"user['Marital_Status'].value_counts().plot.bar(title='Marital_Status')","cf0b9bf7":"product.groupby('Product_Category_1')['productsum'].sum().sort_values(ascending=False).plot.bar(title='\u4ea7\u54c1\u9500\u552e\u989d')","19cc48a3":"product.groupby('Product_Category_1')['productcount'].sum().sort_values(ascending=False).plot.bar(title='\u4ea7\u54c1\u9500\u91cf')","30997501":"product.groupby('Product_Category_2')['productsum'].sum().sort_values(ascending=False).plot.bar(title='\u4ea7\u54c1\u9500\u552e\u989d')","a92bb86c":"product.groupby('Product_Category_2')['productcount'].sum().sort_values(ascending=False).plot.bar(title='\u4ea7\u54c1\u9500\u91cf')","b0fa734f":"product.groupby('Product_Category_3')['productsum'].sum().sort_values(ascending=False).plot.bar(title='\u4ea7\u54c1\u9500\u552e\u989d')","4217605e":"product.groupby('Product_Category_3')['productcount'].sum().sort_values(ascending=False).plot.bar(title='\u4ea7\u54c1\u9500\u91cf')","cbc9e8da":"df.groupby('Product_ID',as_index=False)['Purchase'].sum().sort_values('Purchase').reset_index()['Purchase'].cumsum().plot()\nplt.plot([3500*0.8,3500*0.8],[0,5017668378],c='r')\nplt.plot([0,3500],[5017668378*0.2,5017668378*0.2],c='g')\n","1b29207a":"top10=df.groupby('Product_ID')['Purchase'].sum().nlargest(10).index","55477f91":"df[df.Product_ID.isin(top10)].groupby('Age')['Purchase'].sum().plot.bar()","aabed443":"fig,(ax1,ax2) = plt.subplots(1,2,figsize=(10,4))\ndf.pivot_table(index='Age',columns='Gender',values='Purchase',aggfunc='sum').plot.bar(ax=ax1)\ndf.pivot_table(index='Age',columns='Gender',values='Purchase',aggfunc='mean').plot.bar(ax=ax2)\n#ax1.xticks(rotation=45)\nax1.set_title('\u4e0d\u540c\u5e74\u9f84\u4e0d\u540c\u6027\u522b\u7d2f\u8ba1\u6d88\u8d39\u60c5\u51b5')\nax2.set_title('\u4e0d\u540c\u5e74\u9f84\u4e0d\u540c\u6027\u522b\u4eba\u5747\u6d88\u8d39\u60c5\u51b5')","cebe07fb":"tmp = df.groupby(['Age','Product_ID'],as_index=False).sum().sort_values(['Age','Purchase'],ascending=[1,0])\ntmp2 = tmp.groupby('Age')[['Age','Product_ID','Purchase']].head(5)\ntmp3=tmp2.pivot_table(index='Age',columns='Product_ID',values='Purchase',aggfunc='sum')\n\nf,ax = plt.subplots(figsize=(10,4))\ncmap = sns.cubehelix_palette(start = 1, rot = 3, gamma=0.8, as_cmap = True)\nsns.heatmap(tmp3, cmap = cmap, linewidths = 5, ax = ax)\nax.set_yticklabels(tmp3.index,rotation=0)\nplt.show()","dc92ff05":"tmp = df.groupby(['Age','Product_Category_1'],as_index=False).sum().sort_values(['Age','Purchase'],ascending=[1,0])\ntmp2 = tmp.groupby('Age')[['Age','Product_Category_1','Purchase']].head(5)\ntmp3=tmp2.pivot_table(index='Age',columns='Product_Category_1',values='Purchase',aggfunc='sum')\n\nf,ax = plt.subplots(figsize=(10,4))\ncmap = sns.cubehelix_palette(start = 1, rot = 3, gamma=0.8, as_cmap = True)\nsns.heatmap(tmp3, cmap = cmap, linewidths = 5, ax = ax)\nax.set_yticklabels(tmp3.index,rotation=0)\nplt.show()","a1f4fcd9":"tmp = df.groupby(['City_Category','Product_ID'],as_index=False).sum().sort_values(['City_Category','Purchase'],ascending=[1,0])\ntmp2 = tmp.groupby('City_Category')[['City_Category','Product_ID','Purchase']].head(5)\ntmp3=tmp2.pivot_table(index='City_Category',columns='Product_ID',values='Purchase',aggfunc='sum')\n\nf,ax = plt.subplots(figsize=(10,4))\ncmap = sns.cubehelix_palette(start = 1, rot = 3, gamma=0.8, as_cmap = True)\nsns.heatmap(tmp3, cmap = cmap, linewidths = 5, ax = ax)\nax.set_yticklabels(tmp3.index,rotation=0)\nplt.show()","612a91d8":"tmp = df.groupby(['Stay_In_Current_City_Years','Product_ID'],as_index=False).sum().sort_values(['Stay_In_Current_City_Years','Purchase'],ascending=[1,0])\ntmp2 = tmp.groupby('Stay_In_Current_City_Years')[['Stay_In_Current_City_Years','Product_ID','Purchase']].head(5)\ntmp3=tmp2.pivot_table(index='Stay_In_Current_City_Years',columns='Product_ID',values='Purchase',aggfunc='sum')\n\nf,ax = plt.subplots(figsize=(10,4))\ncmap = sns.cubehelix_palette(start = 1, rot = 3, gamma=0.8, as_cmap = True)\nsns.heatmap(tmp3, cmap = cmap, linewidths = 5, ax = ax)\nax.set_yticklabels(tmp3.index,rotation=0)\nplt.show()","efb6a657":"tmp = df.groupby(['Marital_Status','Product_ID'],as_index=False).sum().sort_values(['Marital_Status','Purchase'],ascending=[1,0])\ntmp2 = tmp.groupby('Marital_Status')[['Marital_Status','Product_ID','Purchase']].head(5)\ntmp3=tmp2.pivot_table(index='Marital_Status',columns='Product_ID',values='Purchase',aggfunc='sum')\n\nf,ax = plt.subplots(figsize=(10,4))\ncmap = sns.cubehelix_palette(start = 1, rot = 3, gamma=0.8, as_cmap = True)\nsns.heatmap(tmp3, cmap = cmap, linewidths = 5, ax = ax)\nax.set_yticklabels(tmp3.index,rotation=0)\nplt.show()","f5c92291":"df.head(3)","2a88a7ea":"top20user = user[user.buysum>user['buysum'].quantile(q=0.8)]['User_ID']","68c62100":"user[user.User_ID.isin(top20user)].groupby('City_Category')['User_ID'].count().sort_values(ascending=False).head(10).plot.bar()","ab9cc76c":"df[df.User_ID.isin(top20user)].groupby('Product_ID')['Purchase'].sum().sort_values(ascending=False).head(10).plot.bar()","d828eabe":"user[user.User_ID.isin(top20user)].groupby('Age')['User_ID'].count().sort_values(ascending=False).head(10).plot.bar()","77463310":"user[user.User_ID.isin(top20user)].groupby('Occupation')['User_ID'].count().sort_values(ascending=False).head(10).plot.bar()","82189afd":"df.head(3)","24cab701":"### \u7c7b\u522b3\u9500\u552e\u989d\u5206\u5e03","8d0487d5":"#### \u571f\u8c6a\u559c\u6b22\u4e70\u90a3\u4e9b\u4ea7\u54c1\uff1f","a08cd5e7":"### top20%\u7684\u4f18\u8d28\u7528\u6237\u559c\u6b22\u90a3\u4e9b\u5546\u54c1","00e76161":"\u4e0d\u540c\u5e74\u9f84\u6bb5\u7684\u7537\u6027\u6d88\u8d39\u91d1\u989d\u90fd\u6bd4\u5973\u6027\u8981\u9ad8\uff0c\u7279\u522b\u662f26-35\u5c81\u7684\u3002\n\u867d\u7136\u7537\u6027\u7684\u6d88\u8d39\u6bd4\u5973\u6027\u7684\u9ad8\uff0c\u4f46\u662f\u4eba\u5747\u6d88\u8d39\u91d1\u989d\u5374\u5dee\u4e0d\u591a\u3002","8d9cf8e9":"### \u4e0d\u540c\u5e74\u9f84\u4e0d\u540c\u6027\u522b\u6d88\u8d39\u60c5\u51b5","c38633d5":"\u9500\u91cftop10\u7684\u4ea7\u54c1\u4e2d\uff0c\u5927\u591a\u6570\u88ab18-45\u5c81\u7684\u4eba\u4e70\u8d70","9b86108f":"### \u7c7b\u522b1\u9500\u552e\u989d\u5206\u5e03","03e0f3de":"### 2-8\u5206\u5272\u7ebf","0c5bc935":"\u5e74\u8f7b\u4eba\u591a\u559c\u6b22\u8d2d\u4e70\u53f3\u8fb9\u7684\u5546\u54c1\u3002\u4e2d\u8001\u5e74\u4eba\u559c\u6b22\u8d2d\u4e70\u5de6\u8fb9\u7684\u4ea7\u54c1\u3002","a68d4dbb":"### \u4e0d\u540c\u5b9a\u5c45\u65f6\u95f4\u7528\u6237\u6700\u7231top5\u4ea7\u54c1","ad9dbce1":"## \u7528\u6237\u4ea7\u54c1\u4ea4\u53c9\u5206\u6790","7e969ae6":"#### \u571f\u8c6a\u7684\u804c\u4e1a\u5206\u5e03","76ba8417":"\u4ea7\u54c1\u7684\u9500\u91cf\u5206\u5e03\u975e\u5e38\u63a5\u8fd128\u5206\u5e03\uff0c\u9500\u91cf\u597d\u768420%\u7684\u4ea7\u54c1\u5360\u636e\u7d2f\u8ba1\u9500\u552e\u989d\u768480%","3dd79a4c":"### \u4e0d\u540c\u5a5a\u59fb\u72b6\u6001\u6700\u7231top5\u4ea7\u54c1","0b49d0bb":"#### \u571f\u8c6a\u7684\u5e74\u9f84\u5206\u5e03\u600e\u6837","e806e58a":"### \u4e0d\u540c\u6027\u522b\u4e0d\u540c\u5e74\u9f84\u6700\u7231top5\u4ea7\u54c1","a06abf10":"\u8d2d\u4e70\u4ea7\u54c1\u6570\u5927\u4e8e\u5e73\u5747\u503c\u6216\u8005\u8d2d\u4e70\u91d1\u989d\u5927\u4e8e\u5e73\u5747\u503c\u7684\u7528\u6237\u4e3a\u4f18\u8d28\u7528\u6237","4fb4d2af":"## \u4ea7\u54c1\u5206\u6790","3b8b64da":"\u4efb\u4f55\u5e74\u9f84\u9636\u6bb5\u7684\u7537\u6027\u7684\u6d88\u8d39\u80fd\u529b\u90fd\u6bd4\u5973\u6027\u9ad8","9b9b77d6":" ### top20%\u4ea7\u54c1\uff08\u7d2f\u8ba1\u9500\u552e\u91d1\u989d\uff09","88cc04e0":"### \u4e0d\u540c\u57ce\u5e02\u7528\u6237\u6700\u7231\u7684top5\u4ea7\u54c1","1f2f7582":"## \u7528\u6237\u5206\u6790","a48a9604":"\u7537\u5973\u6bd4\u4f8b\u4e3a\uff1a3:1\u5de6\u53f3","8f94eae6":"# \u6574\u4f53\u5206\u6790","f5b4ffee":"### \u7c7b\u522b2\u9500\u552e\u989d\u5206\u5e03","6d1e978f":"### \u4e0d\u540c\u6027\u522b\u4e0d\u540c\u5e74\u9f84\u6700\u7231top5\u7c7b\u4ea7\u54c1","e9c2732f":"### \u6027\u522b\u5206\u5e03","21ed851f":"\u6d88\u8d39\u7684\u4e3b\u529b\u519b\u662f26-35\u5c81\u7684\u4eba\u7fa4","cbb723d5":"### \u5e74\u9f84\u5206\u5e03","34d6b330":"#### \u90a3\u4e2a\u57ce\u5e02\u7684\u571f\u8c6a\u591a\uff1f","dfdc75de":"top5\u7684\u804c\u4e1a\u662f4\uff0c0, 7, 1, 17"}}