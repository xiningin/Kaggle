{"cell_type":{"98593900":"code","b97d3774":"code","3b5174b4":"code","e402cf92":"code","4797baf1":"code","d94f4238":"code","c708ccfc":"code","852edd53":"code","a4705029":"code","c9e5f819":"code","fad74b30":"code","139c1dd7":"code","c49b5191":"code","7bd37526":"code","1eaceeb2":"markdown","ae15c620":"markdown","1cee3b61":"markdown","1ab4e5e9":"markdown","0a4fd53e":"markdown","8b980f6f":"markdown","17763b8d":"markdown","8b7f96e4":"markdown","c3bec185":"markdown","a1f2293b":"markdown"},"source":{"98593900":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom IPython.display import Image\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b97d3774":"Image(\"\/kaggle\/input\/images\/images\/kaggle nb1.jpg\")","3b5174b4":"Image(\"\/kaggle\/input\/images\/images\/add_data.jpg\")","e402cf92":"Image(\"\/kaggle\/input\/images\/images\/upload.jpg\")","4797baf1":"Image(\"\/kaggle\/input\/images\/images\/upload_and_create.jpg\")","d94f4238":"Image(\"\/kaggle\/input\/images\/images\/upload_and_create_2.jpg\")","c708ccfc":"Image(\"\/kaggle\/input\/images\/images\/success.jpg\")","852edd53":"Image(\"..\/input\/iploaded-data\/uploaded_data.jpg\")","a4705029":"!pip install anyascii --no-index --find-links=file:\/kaggle\/input\/anyascii\/anyascii-0.3.0-py3-none-any.whl","c9e5f819":"!pip install pyahocorasick --no-index --find-links=file:\/kaggle\/input\/pyahocorasick\/pyahocorasick-1.4.2.tar","fad74b30":"!pip install textsearch --no-index --find-links=file:\/kaggle\/input\/textsearch\/textsearch-0.0.21-py2.py3-none-any.whl    ","139c1dd7":"!pip install contractions --no-index --find-links=file:\/kaggle\/input\/contractions\/contractions-0.0.58-py2.py3-none-any.whl","c49b5191":"import contractions","7bd37526":"print(contractions.fix(\"you've\"))\nprint(contractions.fix(\"he's\"))","1eaceeb2":"5. Now add a name and click on create","ae15c620":"4. Now you can either brows or drag adn drop your files","1cee3b61":"## Installing the python packages from wheels\/tar files","1ab4e5e9":"3. It gives you multiple options to upload the data, as we are interested in no internet case, we upload the packages from a local machine, so click on upload button","0a4fd53e":"2. Then on the top right click on Add Data","8b980f6f":"6. That's it, the package\/file has been successfully uploaded to your datasets, you can access in any of your notebooks. If you make public others can also get a chance to use the. ","17763b8d":"Make sure you have all the dependent packages for successful installation \n\nHere for contractions, we need to install\n\n1. anyascii\n1. pyahocorasick\n1. textsearch\n\nas dependencies, then we can install contractions.","8b7f96e4":"1. You basically start here, then turn off the internet","c3bec185":"# Example to create a custom package in Kaggle notebook with no internet access","a1f2293b":"## Let's test the package we installed locally without internet"}}