{"cell_type":{"945d68dd":"code","1ea50083":"code","af14862b":"code","e86a6421":"code","d7bd8b40":"code","6dec28f1":"code","3f480b0e":"code","c6ea26e6":"code","639c9ece":"code","d0c1d54d":"code","2e00eed6":"code","a14174af":"code","81f2bc71":"code","ebf329d0":"code","abef3663":"markdown","66d7bccf":"markdown"},"source":{"945d68dd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1ea50083":"import numpy as np\nfrom matplotlib import pyplot as plt\nO0=10\nOv=45\nOg=60\nT1=3\nT2=5\nC10=O0\nC11=0\nC12=(3\/(T1*T1))*(Ov-O0)\nC13 = -(2\/(T1*T1*T1))*(Ov-O0)\nprint(C10)\nprint(C11)\nprint(C12)\nprint(C13)\nI = 0\nTn1 = []\nwhile I <= T1*10:\n  i =I\/10\n  TT= [[C10+(C11*i)+(C12*i*i)+(C13*i*i*i),C11+(C12*2*i)+(C13*3*i*i),(C12*2)+(C13*6*i)]]\n  print(i)\n  print(TT)\n  Tn1 = Tn1+TT \n  I +=1\n\n","af14862b":"C20=C10+(C12*i*i)+(C13*i*i*i)\nC21=(C12*2*i)+(C13*3*i*i)\nC22=(3\/(T2*T2))*(Og-C20)\nC23 = -(2\/(T2*T2*T2))*(Og-C20)\nprint(C20)\nprint(C21)\nprint(C22)\nprint(C23)\nTn1 = []\nI=0\nwhile I <= (T2)*10:\n  i =I\/10\n  TT= [[C20+(C21*i)+(C22*i*i)+(C23*i*i*i),C21+(C22*2*i)+(C23*3*i*i),(C22*2)+(C23*6*i)]]\n  print(i)\n  print(TT)\n  Tn1 = Tn1+TT \n  I +=1","e86a6421":"import numpy as np\nfrom matplotlib import pyplot as plt\nO0=10\nOv=45\nOg=60\nT1=3\nT2=5\nC10=O0\nC11=0\nC12=(3\/(4*T2*T2))*(4*Ov-Og-3*O0)\nC13 = (2\/(4*T2*T2*T2))*(-4*Ov+1.5*Og-2.5*O0)\nprint(C10)\nprint(C11)\nprint(C12)\nprint(C13)\nI = 0\nTn1 = []\nwhile I <= T1*10:\n  i =I\/10\n  TT= [[C10+(C12*i*i)+(C13*i*i*i),(C12*2*i)+(C13*3*i*i),(C12*2)+(C13*6*i)]]\n  print(i)\n  print(TT)\n  Tn1 = Tn1+TT \n  I +=1\nprint(\"------------------------------------\")\nC20=C10+(C12*i*i)+(C13*i*i*i)\nC21=(C12*2*i)+(C13*3*i*i)\nC22=(1\/(4*T2*T2))*(-12*Ov+6*Og+6*O0)\nC23= (1\/(4*T2*T2*T2))*(8*Ov-5*Og-3*O0)\nprint(C20)\nprint(C21)\nprint(C22)\nprint(C23)\nTn1 = []\nwhile I <= (T2+T1)*10:\n  i =I\/10\n  TT= [[C20+(C21*i)+(C22*i*i)+(C23*i*i*i),C21+(C22*2*i)+(C23*3*i*i),(C22*2)+(C23*6*i)]]\n  print(i)\n  print(TT)\n  Tn1 = Tn1+TT \n  I +=1","d7bd8b40":"# import numpy as np\nimport math\npx=200\npy=0\npz=20\nh=20\nL1=100\nL2=100\nO1=math.degrees(math.atan(py\/px))\nd1=(px*px)+((pz-h)*(pz-h))-((L1*L1)+(L2*L2))\nd3=(px*px)+(pz*pz)+(h*h)-((L1*L1)+(L2*L2))\nd2=(2*(L1*L2))\nprint(d1)\nO3=-math.degrees(math.acos(d1\/d2))\nO2=-math.degrees((math.asin((pz-h)\/(math.pow((px*px)+(py*py), 0.5)))))- math.degrees((math.atan((L2*math.sin(math.radians(O3))\/(L1+L2*math.cos(math.radians(O3)))))))\nprint(O1)\nprint(O2)\nprint(O3)","6dec28f1":"def rev(Px,Py,Pz):\n    px=Px*1.0\n    py=Py*1.0\n    pz=Pz*1.0\n    h=6\n    L1=10\n    L2=10\n    \n    O1=math.degrees(math.atan(py\/px))\n    d1=(px*px)+((pz-h)*(pz-h))-((L1*L1)+(L2*L2))\n    d3=(px*px)+(pz*pz)+(h*h)-((L1*L1)+(L2*L2))\n    d2=(2*(L1*L2))\n    #print(d1)\n    #print(d2)\n    #print(O1)\n    O3=-math.degrees(math.acos(d1\/d2))\n    #print(O3)\n    #print('dd')\n    d4 =(pz-h)\/(math.pow((px*px)+(py*py), 0.5))\n    #print(d4)\n    if d4 >1.00:\n        if d4<1.5:\n            d4=1\n    #print(d4)\n    d5=math.degrees((math.asin(d4)))\n    d6=math.degrees((math.atan((L2*math.sin(math.radians(O3))\/(L1+L2*math.cos(math.radians(O3)))))))\n    O2=(d5-d6)\n    #print(O2)\n    #print(O3)\n    s=[O1,O2,O3]\n    return s\n\n#print(rev(10,0,16))","3f480b0e":"Px0=10\nPxv=7.07\nPy0=0\nPyv=0\nPz0=16\nPzv=16\nT1=4\n\nC0 =[Px0,Py0,Pz0]\nC1 =[0,0,0]\nC2 =[(3\/(T1*T1))*(Pxv-Px0),(3\/(T1*T1))*(Pyv-Py0),(3\/(T1*T1))*(Pzv-Pz0)]\nC3 =[-(2\/(T1*T1*T1))*(Pxv-Px0),-(2\/(T1*T1*T1))*(Pyv-Py0),-(2\/(T1*T1*T1))*(Pzv-Pz0)]\n\nprint('+++++++++++++++++++++++++++++++++++++++++++++++++++++')\nI = 0\nTn2 = []\nwhile I <= T1*10:\n    i =I\/10\n    T=[]\n    j=0\n    while j <= 2:\n        T= T+[[C0[j]+(C1[j]*i)+(C2[j]*i*i)+(C3[j]*i*i*i),C1[j]+(C2[j]*2*i)+(C3[j]*3*i*i),(C2[j]*2)+(C3[j]*6*i)]]\n        j+=1 \n    s =rev(T[0][0],T[1][0],T[2][0])\n    print(i)\n    print(T)\n    print(s)\n    print('---------------------------------------------------------')\n    Tn1 = [T,i,s]\n    Tn2 = Tn2+ [Tn1]\n    I +=2\nprint('+++++++++++++++++++++++++++++++++++++++++++++++++++++')\nprint(Tn2[1])\n","c6ea26e6":"[[[200.0, 0.0, -150.0], [0.0, 0.0, 0.0], [20.0, 0.0, 0.0]], 0.0, [0.0, 0.0, -0.0], [[197.2, -27.0, -120.0], [0.0, 0.0, 0.0], [20.0, 0.0, 0.0]], 0.2, [0.0, 9.598638383439996, -19.19727676687999], [[189.6, -48.0, -90.0], [0.0, 0.0, 0.0], [20.0, 0.0, 0.0]], 0.4, [0.0, 18.55835369944376, -37.11670739888752], [[178.4, -63.0, -60.0], [0.0, 0.0, 0.0], [20.0, 0.0, 0.0]], 0.6, [0.0, 26.874348076680807, -53.748696153361614], [[164.8, -72.0, -30.0], [0.0, 0.0, 0.0], [20.0, 0.0, 0.0]], 0.8, [0.0, 34.51276275504377, -69.02552551008753], [[150.0, -75.0, 0.0], [0.0, 0.0, 0.0], [20.0, 0.0, 0.0]], 1.0, [0.0, 41.40962210927086, -82.81924421854173], [[135.2, -72.0, 30.0], [0.0, 0.0, 0.0], [20.0, 0.0, 0.0]], 1.2, [0.0, 47.468145830111546, -94.93629166022308], [[121.6, -63.0, 60.0], [0.0, 0.0, 0.0], [20.0, 0.0, 0.0]], 1.4, [0.0, 52.55496998684088, -105.10993997368175], [[110.4, -48.0, 90.0], [0.0, 0.0, 0.0], [20.0, 0.0, 0.0]], 1.6, [0.0, 56.4956701914441, -112.9913403828882], [[102.80000000000001, -27.0, 120.0], [0.0, 0.0, 0.0], [20.0, 0.0, 0.0]], 1.8, [0.0, 59.06936300686902, -118.13872601373804], [[100.0, 0.0, 150.0], [0.0, 0.0, 0.0], [20.0, 0.0, 0.0]], 2.0, [0.0, 60.00000000000001, -120.00000000000001]]","639c9ece":"import numpy as np\nfrom matplotlib import pyplot as plt\nimport math\ndef rev(Px,Py,Pz):\n    px=Px*1.0\n    py=Py*1.0\n    pz=Pz*1.0\n    h=6\n    L1=10\n    L2=10\n    \n    O1=math.degrees(math.atan(py\/px))\n    d1=(px*px)+((pz-h)*(pz-h))-((L1*L1)+(L2*L2))\n    d3=(px*px)+(pz*pz)+(h*h)-((L1*L1)+(L2*L2))\n    d2=(2*(L1*L2))\n    #print(d1)\n    #print(d2)\n    #print(O1)\n    O3=-math.degrees(math.acos(d1\/d2))\n    #print(O3)\n    #print('dd')\n    d4 =(pz-h)\/(math.pow((px*px)+(py*py), 0.5))\n    #print(d4)\n    if d4 >1.00:\n        if d4<1.5:\n            d4=1\n    #print(d4)\n    d5=math.degrees((math.asin(d4)))\n    d6=math.degrees((math.atan((L2*math.sin(math.radians(O3))\/(L1+L2*math.cos(math.radians(O3)))))))\n    O2=(d5-d6)\n    #print(O2)\n    #print(O3)\n    s=[O1,O2,O3]\n    return s\n\ndef scdv(Px0,Py0,Pz0,Pxv,Pyv,Pzv,t0,tv):\n    T1 =tv-t0 \n    C0 =[Px0,Py0,Pz0]\n    C1 =[0,0,0]\n    C2 =[(3\/(T1*T1))*(Pxv-Px0),(3\/(T1*T1))*(Pyv-Py0),(3\/(T1*T1))*(Pzv-Pz0)]\n    C3 =[-(2\/(T1*T1*T1))*(Pxv-Px0),-(2\/(T1*T1*T1))*(Pyv-Py0),-(2\/(T1*T1*T1))*(Pzv-Pz0)]\n\n    #print('+++++++++++++++++++++++++++++++++++++++++++++++++++++')\n    I = 0\n    Tn2 = []\n    while I <= T1*10:\n        i =I\/10\n        Tn1 = []\n        T=[]\n        j=0\n        while j <= 2:\n            T= T+[[C0[j]+(C1[j]*i)+(C2[j]*i*i)+(C3[j]*i*i*i),C1[j]+(C2[j]*2*i)+(C3[j]*3*i*i),(C2[j]*2)+(C3[j]*6*i)]]\n            j+=1 \n        s =rev(T[0][0],T[1][0],T[2][0])\n        #print('\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/')\n        #print(i)\n        #print(T)\n        #print(s)\n        #print('---------------------------------------------------------')\n        Tn1 = [T,i,s]\n        Tn2 = Tn2+ [Tn1]\n        I +=2\n    return Tn2","d0c1d54d":"PX=[20,10,10,7.07,7.07,10,7.07 ,7.07 ,10,10,20]\nPY=[0 ,0 ,0 ,7.07,7.07,0 ,-7.07,-7.07,0 ,0 ,0]\nPZ=[6 ,6 ,16,16  ,6   ,16,16   ,6    ,16,6 ,6]\nt =[0 ,4 ,6 ,10  ,16  ,20,24   ,28   ,32,36,40]\ni=1\nCS=[]\nwhile i <=10 :\n    print(i)\n    print('77777777777777777777777777777777777777777777777777')\n    CP=scdv(PX[i-1],PY[i-1],PZ[i-1],PX[i],PY[i],PZ[i],t[i-1],t[i])\n    CPS=[i,CP]\n    CS=CS+[CPS]\n    #print('7777777777777777777777777777777777777777777777777')\n    #print(CP)\n    i+=1\n","2e00eed6":"print(\"t\",CS[0][0])\nprint(\"CP\",CS[0][1][0])\nprint(\"T\" ,CS[0][1][0][0])\nprint(\"i\" ,CS[0][1][1][1])\nprint(\"s\" ,CS[0][1][0][2])","a14174af":"print(len(CS[0][1]))","81f2bc71":"\n\nprint(len(CS[0][1]))\n\ni=0\nn=[]\nm=0\nj=0\ns0=[]\ns1=[]\ns2=[]\nwhile i <=9 :\n    while j<len(CS[i][1]):\n        print(CS[i][1][j][2])\n        s0=s0+[CS[i][1][j][2][0]]\n        s1=s1+[CS[i][1][j][2][1]]\n        s2=s2+[CS[i][1][j][2][2]]\n        m+=1\n        j+=1\n        \n    i+=1\n    j=1\ni=0\nn=[]\nprint(m)\nwhile i <=400 :\n    n=n+[i\/10]\n    i+=2\nprint(len(s0))\n","ebf329d0":"from matplotlib import pyplot as plt\nplt.plot(n,s0)\nplt.plot(n,s1)\nplt.plot(n,s2)\n\nplt.show()","abef3663":"# import numpy as np\nimport math\npx=200\npy=0\npz=50\nh=20\nL1=110\nL2=110\n\nO1=math.degrees(math.atan(py\/px))\nd1=(px*px)+(pz*pz)+(h*h)-(L1*L1)-(L2*L2)\nd2=(2*(L1*L2))\n\nO3=math.degrees(math.acos(d1\/d2))\nO2=math.degrees((math.asin((pz-H)\/(math.pow((px*px)+(py*py), 0.5)))))- math.degrees((math.atan((L2*math.sin(math.radians(O3))\/(L1+L2*math.cos(math.radians(O3)))))))\nprint(O1)\nprint(O3)\nprint(O2)","66d7bccf":"HW"}}