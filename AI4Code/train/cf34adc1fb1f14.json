{"cell_type":{"93741009":"code","10a567c3":"code","1359892e":"code","aaf2880e":"code","05127af9":"code","855d0f83":"code","bd56626b":"code","3c49b7d6":"code","9602c2ff":"code","154d8516":"markdown","ee10c8e8":"markdown","f627bc8b":"markdown","1f70f691":"markdown","9e0fbb35":"markdown","92c776cc":"markdown","cd250b01":"markdown","5f7d8701":"markdown"},"source":{"93741009":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","10a567c3":"import pandas as pd\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nprint(\"Setup Complete\")","1359892e":"# Path of the file to read\nolympic2020_filepath = \"..\/input\/olympic-games-tokyo-2020-medals-per-country\/Olympic-Games-Tokyo-2020.csv\"\n\n# Read the file into a variable olympic2020_data\n# Set index column as \"Country\"\nolympic2020_data = pd.read_csv(olympic2020_filepath, index_col=\"Country\")\n\n# Getting first 10 rows from data frame\nolympic2020_data_10 = olympic2020_data.head(10)","aaf2880e":"# Print the first 10 rows of the data, with first 10 row variable\nolympic2020_data_10","05127af9":"# Set the width and height of the figure\nplt.figure(figsize=(16,6))\n\n# Line chart showing statics of medals per category\nsns.lineplot(data=olympic2020_data_10)\n\n# Setting Y axis value\nplt.ylabel(\"Medals\")","855d0f83":"# Set the width and height of the figure\nplt.figure(figsize=(10,6))\n\n# Add title\nplt.title(\"Total medal won by country\")\n\n# Preparing bar chart \nsns.barplot(x=olympic2020_data_10.index, y=olympic2020_data_10['Total'])\n\n# Add label for vertical axis\nplt.ylabel(\"Total medal won\")","bd56626b":"# Set the width and height of the figure\nplt.figure(figsize=(10,6))\n\n# Add title\nplt.title(\"Total 'Gold' medal won by country\")\n\n# Preparing bar chart \nsns.barplot(x=olympic2020_data_10.index, y=olympic2020_data_10['Gold'])\n\n# Add label for vertical axis\nplt.ylabel(\"Total medal won\")","3c49b7d6":"# Set the width and height of the figure\nplt.figure(figsize=(14,7))\n\n# Add title\nplt.title(\"Medal worn by country\")\n\n# Heatmap showing average arrival delay for each airline by month\nsns.heatmap(data=olympic2020_data_10, annot=True, fmt='g')\n\n# Add label for horizontal axis\nplt.xlabel(\"Country\")","9602c2ff":"# Set the width and height of the figure\nplt.figure(figsize=(14,7))\n\nsns.scatterplot(x=olympic2020_data_10.index, y=olympic2020_data_10['Total'])","154d8516":"# Bar chart","ee10c8e8":"# Heat map chart","f627bc8b":"![Lets start](https:\/\/i.ibb.co\/y4RRqQS\/lets-start.jpg)","1f70f691":"# Scatter plot","9e0fbb35":"# You can fork this note book and play with data to make EDA","92c776cc":"![Thank you](https:\/\/i.ibb.co\/7vRbVHd\/thank-you-ribbon-sticker-thank-you-sign-thank-you-banner.jpg)","cd250b01":"# Set up the notebook","5f7d8701":"# Line chart"}}