{"cell_type":{"091c4950":"code","38dd95f5":"code","fe50aed5":"code","8402b408":"code","9568abb2":"code","69fd595e":"code","a45f0198":"code","49dbdf03":"markdown"},"source":{"091c4950":"import numpy as np\nimport random\nfrom typing import List\nfrom pathlib import Path\nfrom PIL import Image\nfrom dataclasses import dataclass\nimport pylab\nimport matplotlib.pyplot as plt\n%matplotlib inline","38dd95f5":"@dataclass\nclass Project:\n\n    base_dir: Path = Path(\".\").absolute().parent\n    birdsong_imgs_dir = base_dir \/ \"input\/birdsong-log-mel-spectrograms\"\n    fold_0 = birdsong_imgs_dir \/ \"fold_0\/fold_0\"\n    get_n_images = 6\n    \nproj = Project()","fe50aed5":"# Number of images in each fold\nfor i in range(5):\n    print(\"fold: \", i, \"-->\", len(list(proj.birdsong_imgs_dir.glob(f\"fold_{i}\/fold_{i}\/*\/*.png\"))))","8402b408":"labels = np.unique([i.name for i in list(proj.fold_0.glob(\"*\"))])\nrandom_lables = random.choices(labels, k=proj.get_n_images)\n\n# selecting 6 different labels\nlabel_paths = [random.choice( list(proj.fold_0.glob(f\"{label}\/*.png\")) ) for label in random_lables]\nlabel_paths","9568abb2":"def plot_imgs(imgs_lst: List[Path]=label_paths) -> None:\n    plt.figure(figsize=[20,14])\n    ncols = 3\n    nrows = np.ceil( len(imgs_lst)\/ncols ).astype(int)\n    for i, im_path in enumerate(imgs_lst):\n        ax = plt.subplot(nrows, ncols, i + 1)\n        ax.set_title(im_path.parent.name, fontsize=12)\n        ax.imshow(Image.open(im_path))\n        ax.set_xlabel(\"time\")\n        ax.set_ylabel(\"Hz\")\n    \n    plt.suptitle('Mel Spectrograms [224x224 pixels]', y=1.05,  fontsize=16)   \n    plt.tight_layout()","69fd595e":"plot_imgs()","a45f0198":"%%html\n<marquee style='width: 50%; color: blue;'><b>THANKS FOR YOUR ATTENTION!<\/b><\/marquee>","49dbdf03":"[This dataset](https:\/\/www.kaggle.com\/pchlq82\/birdsong-log-mel-spectrograms) was created to speed up CV models training stages. The images are log-scale mel-spectrograms with size of 224. [Tawara](https:\/\/www.kaggle.com\/ttahara)'s [datasets](https:\/\/www.kaggle.com\/ttahara\/birdsong-resampled-train-audio-04) were used to generate the images. The folder splitting structure is identical. Python script is also available."}}