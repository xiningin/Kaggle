{"cell_type":{"5514964f":"code","d65481f8":"code","2ceff2f3":"code","581d8a19":"code","7a9c2788":"code","089527ae":"code","4e3dfa41":"code","d2aab1e6":"code","2d2f334a":"code","bc5b7456":"code","3646277a":"code","2ab4c80e":"code","369f6652":"code","0af4b057":"code","9b665b71":"code","dcf2e2a0":"code","f5de8adc":"code","81f3f593":"code","cb121d41":"code","94399a56":"code","b00d786b":"code","8bb95bf4":"code","1c841ba8":"code","ed78bca3":"code","adc40c87":"code","63765a69":"code","c248736c":"code","a4d19cac":"code","3a6e61d6":"code","8313e415":"code","734d2a49":"code","8ad276bd":"code","1c0da3fe":"code","395c7375":"markdown","ba33abee":"markdown","355946da":"markdown","38b8b946":"markdown","342acec5":"markdown","5c61fa83":"markdown","5640d5fa":"markdown","4c46c80f":"markdown","148ae8d4":"markdown","f0d15979":"markdown","fb77638b":"markdown","d447a4f2":"markdown","fb8c2755":"markdown","2da983cf":"markdown","5d574bcb":"markdown"},"source":{"5514964f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","d65481f8":"df_google= pd.read_csv('..\/input\/google-play-store-cleaned-data\/Goog_out1.csv')\ndf_google","2ceff2f3":"df_google.info()","581d8a19":"plt.figure(figsize=(20,10))\nsns.heatmap( df_google.isnull() , yticklabels=False ,cbar=False )","7a9c2788":"df_google=df_google.fillna(value=df_google['Size'].mean())\ndf_google=df_google.fillna(value=df_google['Installs'].mean())\n# Fill nan value with the mean of col","089527ae":"df_google=df_google.drop('Unnamed: 0', axis=1)","4e3dfa41":"plt.figure(figsize=(20,10))\nsns.heatmap( df_google.isnull() , yticklabels=False ,cbar=False )","d2aab1e6":"figure= plt.figure(figsize=(10,10))\nsns.heatmap(df_google.corr(), annot=True)\n#To show the correlation between variables","2d2f334a":"figure= plt.figure(figsize=(10,10))\n\nsns.distplot(df_google['Rating']) #My predicted col","bc5b7456":"sns.pairplot(df_google)","3646277a":"sns.lmplot(x='Rating',y='Size',data=df_google)","2ab4c80e":"x= df_google[['Reviews','Size','Installs']]\ny=df_google['Rating']","369f6652":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.4, random_state=108)","0af4b057":"from sklearn.linear_model import LinearRegression\nLR = LinearRegression()\n","9b665b71":"LR.fit(x_train,y_train)","dcf2e2a0":"# The coefficients\nprint('Coefficients: \\n', LR.coef_)","f5de8adc":"prediction = LR.predict(x_test)\nplt.scatter(y_test,prediction) #NOT CORRECT MODEL","81f3f593":"from sklearn import metrics\n","cb121d41":"metrics.mean_absolute_error(y_test,prediction)","94399a56":"metrics.mean_squared_error(y_test,prediction)","b00d786b":"np.sqrt(metrics.mean_squared_error(y_test,prediction))","8bb95bf4":"df_google_KNN= df_google.drop(['App','Category','Type','Price','Content Rating','Genres','Last Updated','Current Ver','Android Ver'], axis=1)\n#Select the numiric cols only","1c841ba8":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nData=df_google_KNN.drop('Rating',axis=1)\n","ed78bca3":"Data","adc40c87":"scaler.fit(Data)\nscaled_features= scaler.transform(df_google_KNN.drop('Rating',axis=1))","63765a69":"df_accepted_feat= pd.DataFrame(scaled_features,columns=df_google_KNN.columns[1:])\ndf_accepted_feat","c248736c":"from sklearn.model_selection import train_test_split\nx= df_accepted_feat\ny=df_google_KNN['Rating']\nx_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.4, random_state=109)","a4d19cac":"from sklearn.neighbors import KNeighborsRegressor\nknn= KNeighborsRegressor(n_neighbors=3)\nknn.fit(x_train,y_train)\npred= knn.predict(x_test)","3a6e61d6":"from sklearn import metrics\nmetrics.mean_absolute_error(y_test,pred)","8313e415":"metrics.mean_squared_error(y_test,pred)","734d2a49":"np.sqrt(metrics.mean_squared_error(y_test,pred))","8ad276bd":"error_rate= []\nfor i in range(1,50):\n    knn=KNeighborsRegressor(n_neighbors=i)\n    knn.fit(x_train,y_train)\n    pred_i= knn.predict(x_test)\n    error_rate.append(np.mean(pred_i!= y_test))","1c0da3fe":"plt.figure(figsize=(12,8))\nplt.plot(range(1,50), error_rate, color='blue', linestyle='dashed', marker='o', markerfacecolor='red',markersize=8)\nplt.title('Error rate vs K values')\nplt.xlabel('K Values')\nplt.ylabel('Error rate')","395c7375":"### - My cleaned google play store data \"from previous notebook\"\n#### LINK: https:\/\/www.kaggle.com\/taghredsalah199\/google-store-cleaning-data-before-modeling\n****","ba33abee":"## ((Choose the best K-Value))","355946da":"## The point from 0 to 6 has a low error rate!","38b8b946":"# 3- The Regression Model :\n### Here I will compare between Linear Regression model and KNN model and see what we get!","342acec5":"### Train_test_split :","5c61fa83":"## Very High error!!","5640d5fa":"## Low Error than Linear Reggression!\n","4c46c80f":"## - Linear Regression Evaluation\n","148ae8d4":"## 3-A) Linear Regression :","f0d15979":"## 2- Data visualization\n","fb77638b":"### Apply standard scaller for all numeric features::","d447a4f2":"## 1- Importing libraries and data","fb8c2755":"## No missing data at all !","2da983cf":"## Evaluation of KNN Regression Model:","5d574bcb":"## 3-B) KNN Regression:"}}