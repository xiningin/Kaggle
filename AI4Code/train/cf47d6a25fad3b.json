{"cell_type":{"6fb567ff":"code","83a0c650":"code","283bab1a":"code","08de99b3":"code","5106ae01":"code","ee07a8bf":"code","dff9083b":"code","cf5c1d57":"code","94579357":"code","04568561":"code","bd15704a":"code","dd0799ae":"code","2c98247c":"code","d3cc2765":"code","46b7a9a7":"code","e7df7c4d":"code","03c368e5":"code","915a5a00":"code","c8c3c2a6":"code","8cba042d":"code","89fb8fa4":"code","7cf3f26b":"code","f0748f46":"code","8a4dfdbd":"code","368a85e9":"code","f81b185a":"code","ef582c5b":"code","d3d2e48e":"code","95413acb":"code","1e8ffd58":"code","6a979ed8":"code","5f69d862":"code","847f3a72":"code","502b8b5f":"code","f572ccf6":"code","5c722e63":"code","cac80f42":"markdown","3155d1c3":"markdown","3489952b":"markdown","a6d87969":"markdown","f21f7548":"markdown","b3875b84":"markdown","593b2350":"markdown","fd1e37f0":"markdown","aa5213cd":"markdown","d246cbed":"markdown","859b3e8b":"markdown","f8af797e":"markdown","b7242c71":"markdown","dfbdec6c":"markdown","0194734d":"markdown","cb6d6ec2":"markdown","846a1202":"markdown","b0ca74c4":"markdown","6abd32de":"markdown","2a6b22ee":"markdown","e4e3cae9":"markdown"},"source":{"6fb567ff":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n%matplotlib inline","83a0c650":"lectures = pd.read_csv('..\/input\/riiid-test-answer-prediction\/lectures.csv')\nex_submission = pd.read_csv('..\/input\/riiid-test-answer-prediction\/example_sample_submission.csv')\nex_test = pd.read_csv('..\/input\/riiid-test-answer-prediction\/example_test.csv')\nquestions = pd.read_csv('..\/input\/riiid-test-answer-prediction\/questions.csv')\ntrain = pd.read_csv('..\/input\/riiid-test-answer-prediction\/train.csv', nrows = 99999)","283bab1a":"train.head()","08de99b3":"train = train.drop(train[train['content_type_id']==1].index)","5106ae01":"train","ee07a8bf":"train = train.rename(columns={'content_id':'question_id'})","dff9083b":"train","cf5c1d57":"train = train.merge(questions)","94579357":"train","04568561":"fig = px.histogram(train,\n                   x='user_id', \n                   histfunc='count',\n                  )\nfig.update_layout(showlegend =False,\n                 width=1000,\n                 height=600)\nfig.show()","bd15704a":"fig = px.histogram(train,\n                   x='user_id', \n                   y='timestamp',\n                   histfunc='max',\n                  )\nfig.update_layout(showlegend =False,\n                 width=1000,\n                 height=600)\nfig.show()","dd0799ae":"fig = px.histogram(train,\n                   x='user_id', \n                   y='answered_correctly',\n                   histfunc='avg',\n                  )\nfig.update_layout(showlegend =False,\n                 width=1000,\n                 height=600)\nfig.show()","2c98247c":"fig = px.histogram(train,\n                   x='question_id', \n                   y='answered_correctly',\n                   histfunc='avg',\n                  )\nfig.update_layout(showlegend =False,\n                 width=1000,\n                 height=600)\nfig.show()","d3cc2765":"fig = px.histogram(train,\n                   x='part', \n                   y='answered_correctly',\n                   histfunc='avg',\n                  )\nfig.update_layout(showlegend =False,\n                 width=1000,\n                 height=600)\nfig.show()","46b7a9a7":"plt.figure(figsize=(20,10))\nsns.barplot(x='index', y ='answered_correctly', data=train.corr().drop('answered_correctly').reset_index())","e7df7c4d":"train = train.drop(['row_id', 'content_type_id', 'user_answer', 'correct_answer'], axis=1)","03c368e5":"question_answered_correctly = train.groupby('question_id').mean()['answered_correctly'].reset_index()\nquestion_answered_correctly","915a5a00":"question_answered_correctly = question_answered_correctly.rename(columns={'answered_correctly':'PQAC'})\ntrain = train.merge(question_answered_correctly)","c8c3c2a6":"part_answered_correctly = train.groupby('part').mean()['answered_correctly'].reset_index()\npart_answered_correctly","8cba042d":"part_answered_correctly = part_answered_correctly.rename(columns={'answered_correctly':'PPQAC'})\ntrain = train.merge(part_answered_correctly)","89fb8fa4":"user_answered_correctly = train.groupby('user_id').mean()['answered_correctly'].reset_index()\nuser_answered_correctly","7cf3f26b":"user_answered_correctly = user_answered_correctly.rename(columns={'answered_correctly':'UAC'})\ntrain = train.merge(user_answered_correctly)","f0748f46":"avg_user_answered = (train.groupby('user_id').max()['timestamp']\/train.groupby('user_id').count()['timestamp']).reset_index()\navg_user_answered","8a4dfdbd":"avg_user_answered = avg_user_answered.rename(columns={'timestamp':'AUA'})\ntrain = train.merge(avg_user_answered)","368a85e9":"train['AUAC'] = train['UAC']*train['AUA']","f81b185a":"plt.figure(figsize=(20,10))\nsns.barplot(x='index', y ='answered_correctly', data=train.corr().drop('answered_correctly').reset_index())","ef582c5b":"from datetime import datetime","d3d2e48e":"train['datetime'] = pd.to_datetime(train['timestamp'], unit='ms')","95413acb":"train.index = train['datetime']","1e8ffd58":"z = train.groupby('user_id').resample('1D').count()[0:20]['answered_correctly'].reset_index()","6a979ed8":"z = z.rename(columns={'answered_correctly':'question\/day', 'datetime': 'date_id'})\nz","5f69d862":"train = train.reset_index(drop=True)","847f3a72":"train['date_id'] = train['datetime'].dt.date","502b8b5f":"train[20:40]","f572ccf6":"sns.scatterplot(x='timestamp', y='answered_correctly',data=train)","5c722e63":"fig = px.line(train,\n              x='timestamp', \n              y='answered_correctly',\n              color='user_id',\n              #text='content_id',\n                 #symbol='Outlet_Type',\n                 #text='Outlet_Identifier',\n             )#.update_yaxes(categoryorder='total ascending')\n\nfig.update_traces(marker=dict(size=12,),\n                  textposition='top center',\n                  textfont=dict(family='Arial',size=12),\n              \n                 )\nfig.update_layout(\n    height=600,\n)\n\nfig.show()","cac80f42":"For now I will drop row_id, content_type_id, user_answer, correct_answer.<br>\nI think those are no corr even in real life.<br>\nI mean we don't care correct answer, is it 1 or 2 or 3","3155d1c3":"how about average user to answer?","3489952b":"User_id with longest time stamp","a6d87969":"Average of answered_correctly each user","f21f7548":"avg of answered correctly each part","b3875b84":"all is bad, no one is more than 0.1","593b2350":"Change name content_id into question_id, so we can merge with questions dataframe","fd1e37f0":"Next, they already divided question into part. <br>\nLet's which question is hard by part.","aa5213cd":"How do you define user is smart or not? <br>\nMaybe they give many correct answer","d246cbed":"Check again the correlation","859b3e8b":"Merge train and questions dataframe","f8af797e":"Remove the content_type_id is 1","b7242c71":"We gonna merge them with train data frame and name it as PQAC (percentage of questions answered correctly)","dfbdec6c":"We merge with our train dataframe. As AUA (Average User Answer)","0194734d":"Again, We merge with our train dataframe. As UAC (percentage of user answered correctly)","cb6d6ec2":"User_id with most questions answered.","846a1202":"How do you define the question is hard or easy?<br>\nYap!, by count average of how many answered correctly in each question.<br>\nSo. we gonna groupby question_id and see the average of answered_correctly.","b0ca74c4":"Again, We merge with our train dataframe. As PPQAC (percentage of part questions answered correctly)","6abd32de":"Check the correlation with answered_correctly","2a6b22ee":"But quick to answer question is not enough for people to be called smart. <br>\nSo I multiple (percentage of user answered correctly and Average User Answer <br>\nAnd call it AUAC (Average User Answered Correctly)","e4e3cae9":"avg of answered correctly each question"}}