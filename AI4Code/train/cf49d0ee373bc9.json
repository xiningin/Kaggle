{"cell_type":{"df7d7daa":"code","6b7e4516":"code","3e236d42":"code","7bc5743c":"code","771df8ae":"code","3191b9e0":"code","5b701922":"code","aa599053":"code","18030a92":"code","90c3df17":"code","5f3263f4":"code","e9f93943":"code","e96b3373":"code","d245bf67":"code","b6849f1b":"code","23c05bbf":"code","b309da08":"code","9d7f3203":"code","0ded8fae":"code","f7a80a1e":"code","2f266d2a":"code","f64b5f5b":"code","4f9d7006":"code","878e01b2":"code","9bdc907f":"markdown","43235ea5":"markdown","a3b669bb":"markdown","0c93bd02":"markdown","7b25cc11":"markdown"},"source":{"df7d7daa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6b7e4516":"g_data = pd.read_csv(\"\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv\") #dataframe\ng_data.head() #getting first five rows ","3e236d42":"g_data.describe() # summary statistics","7bc5743c":"g_data.info()","771df8ae":"g_data.isnull().sum()","3191b9e0":"g_data[g_data.Rating>5]","5b701922":"g_data.drop([10472],inplace=True)","aa599053":"g_data[10470:10475]","18030a92":"g_data.boxplot()","90c3df17":"g_data.hist()","5f3263f4":"#define a func impute_median\ndef impute_median(series):\n    return series.fillna(series.median())","e9f93943":"g_data.Rating = g_data['Rating'].transform(impute_median)","e96b3373":"g_data.isnull().sum()","d245bf67":"print(g_data['Type'].mode())\nprint(g_data['Android Ver'].mode())\nprint(g_data['Current Ver'].mode())","b6849f1b":"g_data['Type'].fillna(str(g_data['Type'].mode().values[0]),inplace=True)\ng_data['Android Ver'].fillna(str(g_data['Android Ver'].mode().values[0]),inplace=True)\ng_data['Current Ver'].fillna(str(g_data['Current Ver'].mode().values[0]),inplace=True)","23c05bbf":"g_data.isnull().sum()","b309da08":"#Convert price, reviews and rating into numerical values\ng_data['Price'] = g_data['Price'].apply(lambda x: str(x).replace('$','') if '$' in str(x) else str(x))\ng_data['Price'] = g_data['Price'].apply(lambda x: float(x))\ng_data['Reviews'] = pd.to_numeric(g_data['Reviews'],errors='coerce')","9d7f3203":"g_data['Installs'] = g_data['Installs'].apply(lambda x: str(x).replace('+','') if '+' in str(x) else str(x))\ng_data['Installs'] = g_data['Installs'].apply(lambda x: str(x).replace(',','') if ',' in str(x) else str(x))\ng_data['Installs'] = g_data['Installs'].apply(lambda x: float(x))\n","0ded8fae":"g_data.head()","f7a80a1e":"g_data.describe()","2f266d2a":"grouping_categories = g_data.groupby('Category')\na = grouping_categories['Rating'].agg(np.mean)\nb = grouping_categories['Price'].agg(np.sum)\nc = grouping_categories['Reviews'].agg(np.mean)\nprint(a)\nprint(b)\nprint(c)\n","f64b5f5b":"plt.figure(figsize=(16,5))\nplt.plot(a,'ro',color='b')\nplt.xticks(rotation=90)\nplt.title('Category wise Rating')\nplt.xlabel('Categories--->')\nplt.ylabel('Rating-->')\nplt.show()","4f9d7006":"plt.figure(figsize=(16,5))\nplt.plot(b,'r--',color='r')\nplt.xticks(rotation=90)\nplt.title('Category wise Price')\nplt.xlabel('Categories--->')\nplt.ylabel('Price-->')\nplt.show()","878e01b2":"plt.figure(figsize=(16,5))\nplt.plot(c,'g^',color='b')\nplt.xticks(rotation=90)\nplt.title('Category wise Reviews')\nplt.xlabel('Categories--->')\nplt.ylabel('Reviews-->')\nplt.show()","9bdc907f":"# **DATA VISULIZATION**","43235ea5":"**Check how many ratings are more than 5 - Outliers**","a3b669bb":"# **DATA CLEANING**\n\ncount the number of missing values in the Dataframe","0c93bd02":"# Data Imputation and Manipulation","7b25cc11":"Fill the null values with appropriate values using aggregate function such as mean median or mode"}}