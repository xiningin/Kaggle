{"cell_type":{"6ba6da49":"code","4668fa87":"code","6595b976":"code","1f1e4299":"code","a7a351eb":"code","c7383f80":"code","a6fbca0d":"code","0f8a4ca0":"code","2c489b8b":"code","136e2807":"code","7318620b":"markdown"},"source":{"6ba6da49":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom scipy.optimize import curve_fit\nimport math\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4668fa87":"df = pd.read_csv('\/kaggle\/input\/petrolprices\/PetrolPrices.csv')\ndf.dataframeName = 'PetrolPrices.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","6595b976":"df.tail()","1f1e4299":"df.info()","a7a351eb":"plt.plot(df.Prices, df.DateNumeric, 'o')","c7383f80":"plt.plot(df.DateNumeric, df.Prices, 'o')","a6fbca0d":"idx = pd.date_range('30-09-2020', '29-05-2021')\n'''\ns = pd.Series([83.75, 86.47,89.21,94.22,93.59,93.43,94.3,94.57,94.85,\n95.11,95.41,95.66,95.94,96.14], dates)\n'''\ns = pd.Series({'30-09-2020': 83.75,\n                '30-12-2020': 86.47,\n               '01-02-2021': 89.21,   \n               '01-03-2021': 94.22,  \n               '01-04-2021': 93.59,  \n               '01-05-2021': 93.43,   \n               '07-05-2021': 94.3,  \n               '10-05-2021': 94.57,    \n               '11-05-2021': 94.85,     \n               '12-05-2021': 95.11,  \n               '14-05-2021': 95.41,  \n               '16-05-2021': 95.66, \n                '18-05-2021': 95.94,\n               '21-05-2021': 96.14,\n                '23-05-2021': 96.31,\n                '25-05-2021': 96.55,\n                '27-05-2021': 96.80,\n                '29-05-2021': 97.07\n               }\n               )\ns.index = pd.DatetimeIndex(s.index)\n\ns = s.reindex(idx, fill_value=0)\nprint(s)\n","0f8a4ca0":"#s1 = s.nonzero()\n#print(s1)","2c489b8b":"#s['Prices'].plot(linewidth = 1.0)\ns.plot(linewidth = 0.5)","136e2807":"#plt.plot(s.index, s.value)\n#'series' object has no attribute 'value'\ns.plot(grid=True)","7318620b":"Here, the dates are converted to DateNumeric field. But, we need to convert the above into a time series. So, we have the following approach.Some of the dates are missing. I am filling the missing date values with the zeroes (0).Please see the code below.\nReference: 1. https:\/\/stackoverflow.com\/questions\/19324453\/add-missing-dates-to-pandas-dataframe\n"}}