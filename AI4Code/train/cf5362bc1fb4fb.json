{"cell_type":{"6c755c5c":"code","4b9f08d8":"code","11ea17c8":"code","c0beb693":"code","91e969c1":"code","bdc9297f":"code","aeadf7f2":"code","b5255f5f":"code","4171a34c":"code","24d8653e":"code","103c49f0":"code","c9719c73":"code","3333d749":"code","06084f2c":"code","7453b4a0":"markdown","198f468c":"markdown","b9f8dd9b":"markdown","5e55923d":"markdown","80ad4a44":"markdown","95254213":"markdown","fed4d65c":"markdown","ed04be32":"markdown","625eb4cd":"markdown","248e0d3a":"markdown","07995bf5":"markdown","64dd88a0":"markdown","35d021c6":"markdown","2f4a3f15":"markdown","47d9a603":"markdown","044cc3cc":"markdown","eabdc44c":"markdown"},"source":{"6c755c5c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set_theme(style=\"darkgrid\")","4b9f08d8":"df_1 = pd.read_csv(\"..\/input\/netflix-subscription-price-in-different-countries\/Netflix subscription fee Dec-2021.csv\")\ndf_1","11ea17c8":"df_2 = pd.read_csv(\"..\/input\/netflix-subscription-price-in-different-countries\/netflix price in different countries.csv\")\ndf_2","c0beb693":"f, ax = plt.subplots(figsize=(4,14))\n\ncost_basic_sort = df_2.sort_values(\"Cost Per Month - Premium ($)\", ascending=False)\n\n# Plot the cost of 3 different plans in different countries in descending order\nsns.set_color_codes(\"pastel\")\nsns.barplot(x=\"Cost Per Month - Premium ($)\", y=\"Country\", data=cost_basic_sort,\n            label=\"Premium\", color=\"r\")\n    \n#sns.set_color_codes(\"pastel\")\nsns.barplot(x=\"Cost Per Month - Standard ($)\", y=\"Country\", data=cost_basic_sort,\n            label=\"Standard\", color=\"b\")\n\n#sns.set_color_codes(\"pastel\")\nsns.barplot(x=\"Cost Per Month - Basic ($)\", y=\"Country\", data=cost_basic_sort,\n            label=\"Basic\", color=\"g\")\n\n# Add a legend and informative axis label\nax.legend(bbox_to_anchor=(1.05, 0.3), loc='upper left', borderaxespad=0.) # (x, y) = (1.05, 0.3)\nax.set(title=\"Netflix Subscription Cost Per Month in Different Countries\",\n       xlabel=\"Dollars ($)\", xlim=(0,30))\nsns.despine(left=True, bottom=True)\n#despine(): remove the top and right spines from plot(s).","91e969c1":"f, ax = plt.subplots(figsize=(4,6))\n\n# no point to show all\ncost_basic_sort = df_2.sort_values(\"Cost Per Month - Premium ($)\", ascending=False).head(10)\n\n# Plot the cost of 3 different plans in different countries in descending order\nsns.set_color_codes(\"pastel\")\nsns.barplot(x=\"Cost Per Month - Premium ($)\", y=\"Country\", data=cost_basic_sort,\n            label=\"Premium\", color=\"r\")\n    \n#sns.set_color_codes(\"pastel\")\nsns.barplot(x=\"Cost Per Month - Standard ($)\", y=\"Country\", data=cost_basic_sort,\n            label=\"Standard\", color=\"b\")\n\n#sns.set_color_codes(\"pastel\")\nsns.barplot(x=\"Cost Per Month - Basic ($)\", y=\"Country\", data=cost_basic_sort,\n            label=\"Basic\", color=\"g\")\n\n# Add a legend and informative axis label\nax.legend(bbox_to_anchor=(1.05, 0.3), loc='upper left', borderaxespad=0.) # (x, y) = (1.05, 0.3)\nax.set(title=\"Netflix Subscription Cost Per Month \\n in Different Countries (Top 10)\",\n       xlabel=\"Dollars ($)\",)\nsns.despine(left=True, bottom=True)\n#despine(): remove the top and right spines from plot(s).","bdc9297f":"f, ax = plt.subplots(figsize=(4,6))\n\n# no point to show all\ncost_basic_sort  = df_2.sort_values(\"Cost Per Month - Premium ($)\", ascending=False).tail(10)\n\n# Plot the cost of 3 different plans in different countries in descending order\nsns.set_color_codes(\"pastel\")\nsns.barplot(x=\"Cost Per Month - Premium ($)\", y=\"Country\", data=cost_basic_sort,\n            label=\"Premium\", color=\"r\")\n    \n#sns.set_color_codes(\"pastel\")\nsns.barplot(x=\"Cost Per Month - Standard ($)\", y=\"Country\", data=cost_basic_sort,\n            label=\"Standard\", color=\"b\")\n\n#sns.set_color_codes(\"pastel\")\nsns.barplot(x=\"Cost Per Month - Basic ($)\", y=\"Country\", data=cost_basic_sort,\n            label=\"Basic\", color=\"g\")\n\n# Add a legend and informative axis label\nax.legend(bbox_to_anchor=(1.05, 0.3), loc='upper left', borderaxespad=0.) # (x, y) = (1.05, 0.3)\nax.set(title=\"Netflix Subscription Cost Per Month \\n in Different Countries (Bottom 10)\",\n       xlabel=\"Dollars ($)\")\nsns.despine(left=True, bottom=True)\n#despine(): remove the top and right spines from plot(s).","aeadf7f2":"cost_basic_sort = df_2.sort_values(\"Cost Per Month - Premium ($)\", ascending=False)\ndf = cost_basic_sort.copy()\ndf3 = df.head(10).append(df.tail(10)) # put the 2 dataframes together for easier comparison\ndf3.plot(x=\"Country\", y=[\"Cost Per Month - Basic ($)\",\"Cost Per Month - Standard ($)\",\"Cost Per Month - Premium ($)\"], kind=\"bar\", figsize=(16,6))\nplt.title(\"Suscription Fee in the Top 10 & Bottom 10 Countries\")\nplt.ylabel(\"Dollars ($)\")\nplt.ylim(0,30)\n\nfrom matplotlib.patches import Rectangle\n\n# add a rectanglar patch to separate the top 10 and bottom 10 countries\n# Rectangle(xy, width, height, angle=0.0, **kwargs)\nrect = Rectangle((-0.4,0.5), 9.8, 26.9, edgecolor ='red', fill=False, linewidth=2, label=\"Top 10\")\nrect2 = Rectangle((9.6,0.5), 9.8, 26.9, edgecolor ='darkviolet', fill=False, linewidth=2, label=\"Bottom 10\")\nplt.gca().add_patch(rect)\nplt.gca().add_patch(rect2)\n\nplt.legend(loc='upper center', ncol=5)","b5255f5f":"cost_basic_sort = df_2.sort_values(\"Cost Per Month - Premium ($)\", ascending=False)\ndf = cost_basic_sort.copy()\ndf3 = df.head(10).append(df.tail(10))\ndf3.plot(x=\"Country\", y=[\"Total Library Size\",\"No. of TV Shows\",\"No. of Movies\"], kind=\"bar\", figsize=(16,6))\nplt.title(\"Library Size in the Top 10 & Bottom 10 Countries\")\nplt.ylabel(\"Count\")\nplt.ylim(0,7200)\n\n# add a rectanglar patch to separate the top 10 and bottom 10 countries\n# Rectangle(xy, width, height, angle=0.0, **kwargs)\nrect = Rectangle((-0.4,100), 9.8, 6500, edgecolor ='red', fill=False, linewidth=2, label=\"Top 10\")\nrect2 = Rectangle((9.6,100), 9.8, 6500, edgecolor ='darkviolet', fill=False, linewidth=2, label=\"Bottom 10\")\nplt.gca().add_patch(rect)\nplt.gca().add_patch(rect2)\nplt.legend(loc='upper center', ncol=5)","4171a34c":"from sklearn import datasets\n\ndiabetes = datasets.load_diabetes()\nX = diabetes.data\ny = diabetes.target\n# target: quantitative measure of disease progression one year after baseline\nfeature_names = diabetes.feature_names\ntrain_X = pd.DataFrame(data=X, columns=feature_names)","24d8653e":"temp = pd.melt(train_X, value_vars=feature_names)\ngrid = sns.FacetGrid(temp, col=\"variable\", col_wrap=5 , height=3.0, \n                     aspect=1.0, sharex=False, sharey=False)\ngrid.map(sns.histplot, \"value\")\nplt.show()","103c49f0":"train = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\", index_col='Id')\n\nnum_columns = train.select_dtypes(include=np.number).columns\ncorr_features = train[num_columns].corr().sort_values('SalePrice', ascending=False).loc['SalePrice'].sort_values(ascending=False)\nimp_feature=corr_features[1:11] # top 10 correlated numerical variables\n\ntrain['GarageYrBlt'] = train['GarageYrBlt'].fillna(0) # fill in missing entries\n#train[list(imp_feature.index)].info() # check to ensure that there are no missing entries\n\ny=train[\"SalePrice\"] = np.log1p(train[\"SalePrice\"])\ntrain = train[list(imp_feature.index)]\nfeature_names = list(imp_feature.index)","c9719c73":"fig, ax = plt.subplots(2, 5, figsize=(15,5))\nfor i, ax in enumerate(ax.flatten()):\n    m, b = np.polyfit(x=train[feature_names[i]], y=y, deg=1)\n    ax.plot(train[feature_names[i]], m*train[feature_names[i]] + b, c='r')\n    ax.scatter(train[feature_names[i]], y)\n    ax.set_ylabel('SalePrice ($)')\n    ax.set_xlabel(feature_names[i])\n    plt.tight_layout()","3333d749":"train['SalePrice'] = y # put SalePrice back in the dataframe\nnum_columns = train.select_dtypes(include=np.number).columns\n\n# np.triu: upper triangle of an array.\nmatrix = np.triu(train[num_columns].corr())\n\n# can use np.tril() to see the difference\n# np.tril: lower triangle of an array.\n# matrix = np.triu(train[num_columns].corr())\n\nf, ax = plt.subplots(figsize=(10,8))\nax = sns.heatmap(train[num_columns].corr(), annot=True, mask=matrix, vmax=1, vmin=0)\nax.set(title=\"Correlation Matrix\")\n# use mask to hide the upper triangle","06084f2c":"import plotly.express as px\n\ntrain['SalePrice'] = np.expm1(train['SalePrice'])\n#np.log1p() for log transformation\n#np.expm1() to un-log\n\nfig = px.scatter(train, x=\"GrLivArea\", y=\"SalePrice\", color=\"SalePrice\",\n                title=\"Gross Living Area with respect to the Sale Price\",\n                width=800, height=600)\n\nfig.show()","7453b4a0":"**Example 1: Bar Chart**","198f468c":"*Application of Seaborn for multi-plot*","b9f8dd9b":"It's clear the top 10 countries are all in Europe, and the basic fee is at least 10 dollars.","5e55923d":"This figure shows that Turkey is obviously paying a lot less for the Basic plan, the fee is less than the half of that in any of the top 10 countries. Even for the Premium plan, users in these countries are paying a lot less.\n\nIn addition, most of the bottom 10 countries are either in Asia or South America, except for Ukraine.\n\nAs a Netflix user myself, I know that different shows are avilable in different countries, that's why some people use VPN to access shows that are not available in their geographical region.\n\nLet's check if fewer shows are available in the bottom 10 countries, especially Turkey.","80ad4a44":"*Application of Plotly*\n\nTry different interactive functions that can be selected at the upper right corner of the plot.\n\nLet's try looking at the \"GrLivArea\" where outliers are obvious in GrLivArea > 4000.","95254213":"# Demonstration of different data visualization techniques\n\nIn the python environment, seaborn and matplotlib are two popular libraries for data visualization.\n\n* Bar chart\n* Histogram\n* Scatter plot (with regression line)\n* Heatmap\n* More to come...\n\nAddtionally, Plotly is applied to produce interactive plots.","fed4d65c":"From the above multi-plot, some variables contain outliers, and a linear relationship can be observe in numerical variables. Also, it seems that the \"real\" numerical variables (GrLivArea: gross living area, Garage Area, TotalBsmtSF: total basement squared feet, etc.) have a considerable standard deviation.","ed04be32":"*Application of Pandas plot with Matplotlib*","625eb4cd":"If the full list is shown, the figure becomes too long and hard to interpret. Let's take out the top 10 and bottom 10.","248e0d3a":"A horizontally stacked bar chart is shown below.\n\nIn this example, there are 3 suscription plans for Netflix, the preimum plan costs the most, and the basic plan costs the least. Imagine you're drawing on a canvas, you draw the background first, and then you draw the details that appear in the front. So, plot the \"Cost Per Month - Premium\" first, and then the \"Standard\", lastly, the \"Basic\".","07995bf5":"A set of housing price data is used. Pre-processing steps are not explained here.","64dd88a0":"**Example 2: Histogram**","35d021c6":"*Application of matplotlib for multi-plot*","2f4a3f15":"The above bar charts show that the relationship between suscription fee and library size is not strong. Anyway, it is very strange that San Marino has a significantly small no. of movies. Also, the overall library size is small in San Marino and Liechtenstein. While Liechtenstein is paying the most for Netflix, it seems very unfair for the users of that region to have the smallest library size.","47d9a603":"**Example 4: Heatmap for displaying the correlation matrix**","044cc3cc":"**Example 3: Linear Regression Line**","eabdc44c":"**Example 5: Scatter Plot**"}}