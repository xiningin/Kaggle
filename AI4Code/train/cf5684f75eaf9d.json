{"cell_type":{"57592f55":"code","29c51c35":"code","aa1ce97e":"code","1ffa38b9":"code","21d0c8dc":"code","576ce866":"code","00411e86":"code","7f246c2e":"code","4624ac6f":"code","7dcb9bea":"code","b97b71c0":"code","e1ad6fe0":"code","6d00a0c4":"code","279ea05a":"code","5e633e21":"code","88f2f8a5":"code","66e78aa7":"code","a789959c":"code","e28f8b88":"code","d9e34578":"code","86836e73":"code","b7462e9f":"code","a328191d":"code","37ccd854":"code","1b7794a1":"code","230119ef":"code","9daa0bfe":"code","df03e6d5":"code","cc26d0e3":"code","9b0aa60c":"code","8846f56b":"code","f65069a4":"code","1d1ab117":"code","3e6ed7bb":"code","6df82f0e":"code","50fad213":"code","456426ec":"code","c52cb4d8":"code","454e6268":"code","8e30860b":"code","cc25e5b9":"code","f3329d78":"code","2df40030":"code","f7e45a4c":"code","2b534d86":"code","57cff0b9":"code","fedbe4b0":"code","3c20fcb4":"code","1797aaa3":"code","916776bc":"code","0c9597ed":"code","453101a1":"code","352db695":"code","d84d56ff":"code","bb5eb5b1":"code","fff5bb80":"code","eb13daaa":"code","6c62244f":"code","5cea0ae2":"code","7d7d61aa":"code","cc3f996b":"code","167babb4":"code","f27c8137":"code","c7edcd23":"code","30337486":"code","d8e57dec":"code","37dd2e1a":"code","c3b0b1be":"code","b078a098":"code","5b13abc4":"code","39e633f2":"code","56493055":"code","f7b4d451":"code","88a1baa8":"code","755869b8":"code","961cc35e":"code","0c908eea":"code","59f9af41":"code","80c5ba66":"code","e1e56ee6":"code","cf0ac431":"code","da61274b":"code","4a7918cb":"code","725ceb84":"code","0479652c":"code","8deac7f2":"code","1f0ca5e9":"code","4655c875":"code","2cf21d4f":"code","36f5c442":"code","5256523f":"code","07923e4c":"code","8ce000bc":"code","79dcac6c":"code","d9e07ca3":"code","9ba87b58":"code","96144eb4":"code","25cda8ef":"code","984de565":"code","524e2eff":"code","902b4da8":"markdown","b9667de2":"markdown","b659ab04":"markdown","3d075233":"markdown","226f5dc3":"markdown","20f2fa2c":"markdown","f6219154":"markdown","d4a100aa":"markdown","e914ebac":"markdown","c360a426":"markdown","def35e4a":"markdown","c45329a8":"markdown","56d9392d":"markdown","93720940":"markdown","091d20c3":"markdown","2f1a6354":"markdown","cdd7ff1d":"markdown","2247651a":"markdown","93f36ee2":"markdown","a35e6064":"markdown","5e3a4ed6":"markdown","f7dcdac7":"markdown","d703d391":"markdown","c70d2243":"markdown","5a92b2c9":"markdown"},"source":{"57592f55":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","29c51c35":"survey = pd.read_csv('\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv')\nsurvey.shape","aa1ce97e":"survey.head()","1ffa38b9":"survey.columns.T","21d0c8dc":"s = survey.copy()","576ce866":"with pd.option_context('display.max_colwidth', None):\n    display(survey.iloc[:1 ].T)","00411e86":"s = s.iloc[1: , :]\ns.head()","7f246c2e":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","4624ac6f":"## Age Distribution\ns.Q1.value_counts()","7dcb9bea":"s.Q2.value_counts()","b97b71c0":"### Clean data\ns['Q2'] = s['Q2'].replace({'Prefer not to say' : 'Other' , 'Nonbinary' : 'Other' , 'Prefer to self-describe' : 'Other'})\ns.Q2.value_counts()","e1ad6fe0":"fig = plt.figure(figsize=(15,5))\nax1 = fig.add_subplot(131)\nsns.countplot(x=\"Q2\", hue=\"Q1\", palette=\"pastel\", edgecolor=\".8\", data=s , ax=ax1 , dodge=True , order = s['Q2'].value_counts().index)","6d00a0c4":"def plotcount(feat1,feat2):\n    fig = plt.figure(20,20)\n    sns.countplot(y=feat1, hue=feat2, palette=\"pastel\", edgecolor=\".8\", data=s , ax=ax1 , dodge=True , order = df[f1].value_counts().index)","279ea05a":"fig = plt.figure(figsize=(20,20))\nax1 = fig.add_subplot(131)\nsns.countplot(y=\"Q3\", hue=\"Q2\", palette=\"pastel\", edgecolor=\".8\", data=s , ax=ax1 , dodge=True , order = s['Q3'].value_counts().index)","5e633e21":"chk = s[s['Q3'] == 'India']\nchk\n#fig = plt.figure(figsize=(20,20))\n#ax1 = fig.add_subplot(131)\n#sns.countplot(y='Q3', hue=\"Q1\", palette=\"pastel\", edgecolor=\".8\", data=chk , ax=ax1 , dodge=True , order = s['Q3'].value_counts().index)","88f2f8a5":"s.Q4.value_counts()","66e78aa7":"### Clean data\ns['Q4'] = s['Q4'].replace({'Some college\/university study without earning a bachelor\u2019s degree' : 'Other' , 'I prefer not to answer' : 'Other' , 'No formal education past high school' : 'Other' , \n                          'Professional doctorate' : 'Doctoral degree' })\ns.Q4.value_counts()","a789959c":"fig = plt.figure(figsize=(20,20))\nax1 = fig.add_subplot(131)\nsns.countplot(y=\"Q3\", hue=\"Q4\", palette=\"pastel\", edgecolor=\".8\", data=s , ax=ax1 , dodge=True , order = s['Q3'].value_counts().index)","e28f8b88":"s.Q5.value_counts()","d9e34578":"fig = plt.figure(figsize=(20,20))\nsns.catplot(y=\"Q2\", hue=\"Q5\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )","86836e73":"fig = plt.figure(figsize=(20,20))\nax1 = fig.add_subplot(131)\nsns.countplot(y=\"Q3\", hue=\"Q6\", palette=\"pastel\", edgecolor=\".8\", data=s , ax=ax1 , dodge=True , order = s['Q3'].value_counts().index)","b7462e9f":"s.head(1)","a328191d":"with pd.option_context('display.max_colwidth', None):\n  display(survey['Q7_Part_1'].head(1))\n  display(survey['Q7_Part_2'].head(1))\n  display(survey['Q7_Part_3'].head(1))\n  display(survey['Q7_Part_4'].head(1))\n","37ccd854":"cols = [cols for cols in s.columns if '_Part_' in cols]\n#cols","1b7794a1":"cols = [cols for cols in s.columns if 'Q7_Part_' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","230119ef":"fig = plt.figure(figsize=(20,20))\nsns.catplot(y=\"Q7_Part_1\", hue=\"Q5\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('Python Usages Amongst Population By Designation')","9daa0bfe":"fig = plt.figure(figsize=(20,20))\nsns.catplot(y=\"Q7_Part_3\", hue=\"Q5\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('SQL Usages Amongst Population By Designation')","df03e6d5":"fig = plt.figure(figsize=(20,20))\nsns.catplot(y=\"Q7_Part_2\", hue=\"Q5\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('R Usages Amongst Population By Designation')","cc26d0e3":"pt = pd.pivot_table(s, values=['Q7_Part_1', 'Q7_Part_2' , 'Q7_Part_3'], index=['Q3'],\n                    aggfunc={'Q7_Part_1': 'count',\n                             'Q7_Part_2': 'count',\n                            'Q7_Part_3' : 'count'})\npt","9b0aa60c":"fig = plt.figure(figsize=(20,8))\npt['Q7_Part_1'].plot(kind=\"bar\")\nplt.title('Python Usage Country Wise')","8846f56b":"fig = plt.figure(figsize=(20,8))\npt['Q7_Part_2'].plot(kind=\"bar\")\nplt.title('R Usage Country Wise')","f65069a4":"fig = plt.figure(figsize=(20,8))\npt['Q7_Part_3'].plot(kind=\"bar\")\nplt.title('SQL Usage Country Wise')","1d1ab117":"pt_age = pd.pivot_table(s, values=['Q7_Part_1', 'Q7_Part_2' , 'Q7_Part_3'], index=['Q6'],\n                    aggfunc={'Q7_Part_1': 'count',\n                             'Q7_Part_2': 'count',\n                            'Q7_Part_3' : 'count'})\npt_age","3e6ed7bb":"fig = plt.figure(figsize=(10,8))\npt_age['Q7_Part_1'].plot(kind=\"bar\")\nplt.title('Python Usage Age Wise')","6df82f0e":"fig = plt.figure(figsize=(10,8))\npt_age['Q7_Part_2'].plot(kind=\"bar\")\nplt.title('R Usage Age Wise')","50fad213":"fig = plt.figure(figsize=(10,8))\npt_age['Q7_Part_3'].plot(kind=\"bar\")\nplt.title('SQL Usage Age Wise')","456426ec":"fig = plt.figure(figsize=(10,8))\nN = 7\nind = np.arange(N)\n\norange_bar = pt_age['Q7_Part_1']\nblue_bar = pt_age['Q7_Part_3']\nwidth = 0.3\n\nplt.bar(ind, blue_bar , width, label='SQL')\nplt.bar(ind + width, orange_bar, width, label='Python')\nplt.xticks(ind + width \/ 2, ('1-3 years', '10-20 years', '20+ years' , '3-5 years' , '5-10 years' , '< 1 years' , 't'))\n\nplt.legend(loc='best')\n","c52cb4d8":"#cols = [cols for cols in s.columns if '_Part_' in cols]\n#cols","454e6268":"def display_full(feature):\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[feature].head(1))\n  ","8e30860b":"display_full('Q8')","cc25e5b9":"pd.pivot_table(s, values=['Q8'], index=['Q6'],aggfunc={'Q8': 'count'})","f3329d78":"s['Q8'].value_counts()","2df40030":"chk_age_skill = s.groupby(['Q8' , 'Q6'])['Q8'].count()\nchk_age_skill","f7e45a4c":"chk_age_skill.sort_values().tail(40)","2b534d86":"# = [cols for cols in s.columns if '_Part_' in cols ]\ncols = ['Q9_Part_1', 'Q9_Part_2', 'Q9_Part_3', 'Q9_Part_4', 'Q9_Part_5', 'Q9_Part_6', 'Q9_Part_7', 'Q9_Part_8',\n 'Q9_Part_9', 'Q9_Part_10', 'Q9_Part_11', 'Q9_Part_12']\nfor f in cols :\n    display_full(f)","57cff0b9":"cols = [cols for cols in s.columns if 'Q9_Part_' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","fedbe4b0":"fig = plt.figure(figsize=(20,20))\nsns.catplot(x=\"Q9_Part_11\", hue=\"Q5\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('Jupyter Usages Amongst Population By Designation')","3c20fcb4":"fig = plt.figure(figsize=(20,20))\nsns.catplot(x=\"Q9_Part_4\", hue=\"Q5\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('Visual Studio Usages Amongst Population By Designation')","1797aaa3":"fig = plt.figure(figsize=(20,20))\nsns.catplot(x=\"Q9_Part_5\", hue=\"Q5\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('Visual Studio Usages Amongst Population By Designation')","916776bc":"#c = [cols for cols in s.columns if '_Part_' in cols ]\ncols = [cols for cols in s.columns if 'Q10_Part_' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","0c9597ed":"#c = [cols for cols in s.columns if '_Part_' in cols ]\ncols = [cols for cols in s.columns if 'Q11' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","453101a1":"cols = [cols for cols in s.columns if 'Q12_Part' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","352db695":"cols = [cols for cols in s.columns if 'Q13' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","d84d56ff":"cols = [cols for cols in s.columns if 'Q14_Part' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","bb5eb5b1":"cols = [cols for cols in s.columns if 'Q15' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","fff5bb80":"pd.crosstab(index= s['Q15'] , columns=s['Q2']).plot(kind=\"bar\", \n                 figsize=(20,15),\n                 stacked=True)","eb13daaa":"pd.crosstab(index= s['Q15'] , columns=s['Q11']).plot(kind=\"bar\", \n                 figsize=(20,15),\n                 stacked=True)","6c62244f":"cols = [cols for cols in s.columns if 'Q16_Part' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","5cea0ae2":"cols = [cols for cols in s.columns if 'Q17_Part' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","7d7d61aa":"fig = plt.figure(figsize=(10,10))\nsns.catplot(x=\"Q17_Part_1\", hue=\"Q5\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('Logistic regression Usages Amongst Population By Designation')","cc3f996b":"fig = plt.figure(figsize=(10,10))\nsns.catplot(x=\"Q17_Part_2\", hue=\"Q5\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('Decision Trees or Random Forests Usages Amongst Population By Designation')","167babb4":"fig = plt.figure(figsize=(10,10))\nsns.catplot(x=\"Q17_Part_4\", hue=\"Q5\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('Bayesian Approaches Usages Amongst Population By Designation')","f27c8137":"cols = [cols for cols in s.columns if 'Q18_Part' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","c7edcd23":"cols = [cols for cols in s.columns if 'Q19_Part' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","30337486":"cols = [cols for cols in s.columns if 'Q20' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","d8e57dec":"fig = plt.figure(figsize=(10,10))\nsns.catplot(x=\"Q17_Part_4\", hue=\"Q20\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('Industry Usages Amongst Population By Designation')","37dd2e1a":"fig = plt.figure(figsize=(10,10))\nsns.catplot(x=\"Q17_Part_8\", hue=\"Q20\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('GAN Usages Amongst Population By Industry')","c3b0b1be":"fig = plt.figure(figsize=(10,10))\nsns.catplot(x=\"Q17_Part_10\", hue=\"Q20\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('Transformer Networks (BERT, gpt-3) Usages Amongst Population By Industry')","b078a098":"cols = [cols for cols in s.columns if 'Q21' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","5b13abc4":"fig = plt.figure(figsize=(10,10))\nsns.catplot(x=\"Q17_Part_10\", hue=\"Q21\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('Transformer Networks (BERT, gpt-3) Usages Amongst Population By Industry')","39e633f2":"fig = plt.figure(figsize=(10,10))\nsns.catplot(x=\"Q17_Part_8\", hue=\"Q21\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('GAN Usages Amongst Population By Industry')","56493055":"fig = plt.figure(figsize=(10,10))\nsns.catplot(x=\"Q17_Part_9\", hue=\"Q21\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('RNN Usages Amongst Population By Designation')","f7b4d451":"cols = [cols for cols in s.columns if 'Q22' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","88a1baa8":"fig = plt.figure(figsize=(10,10))\nsns.catplot(x=\"Q22\", hue=\"Q21\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('Individuals are responsible for data science Vs Company Size')","755869b8":"fig = plt.figure(figsize=(20,30))\nsns.catplot(y=\"Q21\", hue=\"Q5\", kind=\"count\", palette=\"pastel\", edgecolor=\".5\", data=s )\nplt.title('Designation Vs Company Size')","961cc35e":"cols = [cols for cols in s.columns if 'Q23' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","0c908eea":"fig = plt.figure(figsize=(10,10))\nsns.catplot(x=\"Q17_Part_9\", hue=\"Q23\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\nplt.title('RNN Usages Amongst Population By Designation')","59f9af41":"cols = [cols for cols in s.columns if 'Q17_Part' in cols]\nfor f in cols:\n    fig = plt.figure(figsize=(10,10))\n    sns.catplot(x=f, hue=\"Q23\", kind=\"count\",palette=\"pastel\", edgecolor=\".8\", data=s )\n    plt.title('incorporate ML INTO business Vs ML Algo usage')","80c5ba66":"pd.crosstab(index= s['Q5'] , columns=s['Q23']).plot(kind=\"bar\", figsize=(20,20),stacked=False)\nplt.title('incorporate ML INTO business Vs Designation')","e1e56ee6":"cols = [cols for cols in s.columns if 'Q24_Part' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","cf0ac431":"pd.crosstab(index= s['Q24_Part_6'] , columns=s['Q23']).plot(kind=\"bar\", figsize=(20,20),stacked=False)\nplt.title('incorporate ML INTO business Vs Designation')","da61274b":"cols = [cols for cols in s.columns if 'Q25' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_index())","4a7918cb":"list_of_values = ['$500,000-999,999' ,'>$1,000,000' , '250,000-299,999' , '300,000-499,999' , '200,000-249,999' , '150,000-199,999']\nchk = s[s['Q25'].isin (list_of_values)]\n\npd.crosstab(index= s['Q5'] , columns=chk['Q25']).plot(kind=\"bar\", figsize=(20,20),stacked=False)\nplt.title('incorporate ML INTO business Vs Designation')","725ceb84":"cols = [cols for cols in s.columns if 'Q26' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_index())","0479652c":"cols = [cols for cols in s.columns if 'Q27' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_index())","8deac7f2":"cols = [cols for cols in s.columns if 'Q28' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_index())","1f0ca5e9":"cols = [cols for cols in s.columns if 'Q29' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_index())","4655c875":"cols = [cols for cols in s.columns if 'Q30' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_index())","2cf21d4f":"cols = [cols for cols in s.columns if 'Q31' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_index())","36f5c442":"cols = [cols for cols in s.columns if 'Q32' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_index())","5256523f":"cols = [cols for cols in s.columns if 'Q33' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","07923e4c":"cols = [cols for cols in s.columns if 'Q34' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","8ce000bc":"cols = [cols for cols in s.columns if 'Q35' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","79dcac6c":"cols = [cols for cols in s.columns if 'Q36' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","d9e07ca3":"cols = [cols for cols in s.columns if 'Q37' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","9ba87b58":"cols = [cols for cols in s.columns if 'Q38' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","96144eb4":"cols = [cols for cols in s.columns if 'Q39' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","25cda8ef":"cols = [cols for cols in s.columns if 'Q40' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","984de565":"cols = [cols for cols in s.columns if 'Q41' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","524e2eff":"cols = [cols for cols in s.columns if 'Q42' in cols]\nfor c in cols:\n    with pd.option_context('display.max_colwidth', None):\n        display(survey[c].head(1))\n    print(s[c].value_counts().sort_values())","902b4da8":"### Observations\n1. Data Scientists are the ones with hieghest income bracket also software engineers are next\n2. maximum population is in 150 to 200K bracket \n3. DBA has max 150K to 200K bracket \n4. Data Engineers with 18K max bracket \n5. On an average Data Analyst are in higher salary bucket than data engineer (At least w.r.t kaggle users)\n","b9667de2":"### Observation - Computer Vision\n1. computer vision method : Image classification and other general purpose networks (VGG, Inception, ResNet, ResNeXt, NASNet, EfficientNet, etc) is more in use 4373 followed by \n2. Object detection methods (YOLOv3, RetinaNet, etc)  & Image segmentation methods (U-Net, Mask R-CNN, etc) & General purpose image\/video tools (PIL, cv2, skimage, etc) around 2.7K\n3. ","b659ab04":"### Observation : For top 3 skills\n1. Python is more popular amongst student (may be due to technical easness and learning content availability) . Next it is popular with Data Scientists\n2. SQL is more popular with Students & Data Scientists. Also it shows more popularity within Software engineers as they are mostly familier with syntax and tech details.\n3. R is is more popular with Students & Data Scientists & Data Analyst.\n\nWe can further drill down to check conuntry wise and age wise the popularity of technologies","3d075233":"Automated ML pipeline and Automated Model selection followed by automated hyperparamater tuning will be future of automation.","226f5dc3":"### Observations\nGood thing is , more Woman are entering into Machine learning . Less than one year & 1-2 year has most of the woman population.","20f2fa2c":"Google cloud compute engines seems to be more popular in next 2 years ","f6219154":"### Observation\nWord embeddings\/vectors (GLoVe, fastText, word2vec) is most popular followed by Transformer language models (GPT-3, BERT, XLnet, etc)","d4a100aa":"*** Most familier and with best developer experience is with AWS and GCP followed by Azure . This is inline with answers for Q27 ***","e914ebac":"TPU's are generally needed to run huge volume data in deep learnings. These are costly as well so heighest count is users not using it","c360a426":"### Observations \n1. Python is most popular language with 21K counts followed by SQL 10K and R 5K then comes C , C++ , JAVA etc.","def35e4a":"### Observation\n1. big data products (relational databases, data warehouses, data lakes, or similar) - > MySQl is more used followed by Postgrey sql .\n2. 2 years later as well MySQl will be leading \n3. In next 2 years it appears GCP will be more popular so it is possible that Postgrey will lead in big data as well . However GCP aslso support mysql which is also in line with outcome","c45329a8":"Cloud computing is more popular with population with 3 years or less experience than others","56d9392d":"Kaggle is most popular source for learning ML","93720940":"1. Tableau & Power BI are at top at current\n2. In next 2 years , Google data studio is surpassing both tablue and power BI . It is in line with popularity of GCP over other cloud platforms","091d20c3":"### Observation \n1. It is very surprising that 3K users are ot using any visualizations as it is fundamental part of data analysis.\n2. Matplotlib & Seaborn are most popular \n3.  Plotly \/ Plotly & ggplot are most popular from R . As the R users are less than python this count is also low","2f1a6354":"### Observations\n1. Most of the people 13K are not using any specilized hardware on regular basis . This links to fact that most of the population is from students.\n2. NVIDIA GPUs is next in line with around 8K users\n3.From cloud , GCP is leading where GCP TPU's are next with 3K users","cdd7ff1d":"***Users are spending goodf amound of money on machine learning services***","2247651a":"### Observations for top 3 IDEs\n1. Jupyter Notebook is most popular with 16K followed by isual Studio Code (VSCode) 10 k and PyCharm 7K","93f36ee2":"### Observations\n1. on machine learning products usage perspective , AWS and Azure are leading -  Amazon SageMaker & Azure ML engine\n2. in next 2 years , more users are focusing on Google Cloud Vertex AI leaving behind Azure and AWS products","a35e6064":"### Observation\n1. Linear or Logistic Regression is most popular ML Algo that is used by around 13K users\n2. Decision Trees or Random Forests is second with 11K\n3. Gradient Boosting Machines (xgboost, lightgbm, etc) &  Convolutional Neural Networks  are almost similarly used 7K\n4. There are entries for None as well . Further checks can be applied on who are those users\n5. Bayesian Approaches    4392 ,  Dense Neural Networks (MLPs, etc)    4468 , Recurrent Neural Networks    4228","5e3a4ed6":"###  Observations\n1. Kaggle notebook and Google colab are the most preffered notebook product with almost similar users of 9K","f7dcdac7":"As AWS and GCP are mpre popular cloud services so their data storage product are leading the market as well.\nmazon Simple Storage Service (S3) and Google Cloud Storage (GCS) are most popular\n","d703d391":"### Observation \n1. Most popular cloud platform is AWS with 3.7K followed by GCP 3.1K and then Azure 2.4K\n2. In next 2 years projection shows AWS and Google are equally competing with 7K ratings followed by Azure\n","c70d2243":"scikit-learn is most popular machine learning frameworks 14K followed by TensorFlow 9K and then Keras and Pytorch","5a92b2c9":"# fsdfsdf # \n[Home](http:\/\/)"}}