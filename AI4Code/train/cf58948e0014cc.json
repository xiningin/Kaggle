{"cell_type":{"d34f59fa":"code","188758f8":"code","1989ceec":"code","6ea08cbc":"code","e1191176":"code","c1902b30":"code","84d76341":"code","6379d75d":"code","d3ac8674":"code","3122a1ba":"code","3b242bf4":"code","0bcb603f":"markdown","81734340":"markdown","52a4dfba":"markdown","6e5d49ae":"markdown","ee7295d9":"markdown"},"source":{"d34f59fa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","188758f8":"df = pd.read_csv(\"\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv\")\ndf.head()","1989ceec":"df.columns","6ea08cbc":"df.info()","e1191176":"def bar_plot(variable):\n    '''\n    input: variable ex: genre, author\n    output: bar plot and value count\n    '''\n    var = df[variable]\n    varCount = var.value_counts()\n    \n    plt.figure(figsize=(9,3))\n    plt.bar(varCount.index, varCount)\n    plt.xticks(varCount.index, varCount.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(f\"{variable} \\n{varCount}\")","c1902b30":"category1 = [\"Genre\"]\nfor c in category1:\n    bar_plot(c)","84d76341":"authors = df[\"Author\"]\nauthors = authors[0:25]\nplt.figure(figsize=(20,10))\nplt.xticks(rotation=90)\nplt.ylabel(\"num of publish\")\nplt.xlabel(\"authors\")\nplt.title(\"Top 25 published authors\")\nsns.barplot(x=authors.index, y=authors.values)","6379d75d":"def plot_hist(variable, df):\n    plt.figure(figsize=(18,6))\n    plt.hist(df[variable], bins=50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(f\"{variable} distribution\")","d3ac8674":"numericVars = [\"Price\", \"User Rating\", \"Reviews\"]\nfor var in numericVars:\n    plot_hist(var, df)\n","3122a1ba":"y = df[\"Price\"]\nx = df[\"Reviews\"]\n\nplt.scatter(x,y)\nplt.show()","3b242bf4":"y = df[\"Price\"]\nx = df[\"User Rating\"]\n\nplt.scatter(x,y)\nplt.show()","0bcb603f":"# Categorical Variable Analysis","81734340":"# Load and check data","52a4dfba":"# Numerical Variable Analysis","6e5d49ae":"* **float64** - user ratings\n* **int64** - reviews, price, year\n* **object** - name, author, genre\n\n\n### Variable Categories \n\n* Categorical variables: genre, name, author\n* Numerical variables: price, user ratings, year","ee7295d9":"# Variables\n\n1. **Name**: Title of the book\n1. **Author**: Author of the book\n1. **User Rating**: Total ratings of a book\n1. **Reviews**: Reviews of a book written by users\n1. **Price**: Book price tag\n1. **Year**: Published year\n1. **Genre**: Genre of a book"}}