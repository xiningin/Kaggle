{"cell_type":{"b3d3eb6a":"code","babf07d6":"code","7e2e1f6d":"code","c4d37c37":"code","b53c435b":"code","4f2de994":"code","3374d252":"code","2fff8bf7":"code","74c65b47":"code","fa585256":"code","4fcd5845":"code","0ee56a9a":"code","05270da7":"code","cc0c0884":"code","cd4ad0d9":"code","5cae8dd3":"code","05f93695":"code","34945ec0":"code","cffb94be":"code","821e1845":"code","b8077ced":"code","223c3336":"code","ff8901d2":"code","6c673e0c":"code","e037ddad":"code","e73b6c8f":"code","6d94b5d3":"markdown","a856024d":"markdown","582202b5":"markdown"},"source":{"b3d3eb6a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","babf07d6":"from sklearn.tree import DecisionTreeClassifier, export_graphviz\nfrom graphviz import Source\n\n\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import Normalizer\nfrom sklearn.model_selection import train_test_split\n\n\nfrom scipy.stats import skew\nplt.style.use('ggplot')","7e2e1f6d":"df = pd.read_csv('..\/input\/book-covers-and-their-properties\/faces.csv', encoding='utf8')\npd.set_option('display.max_columns', None)\ndf.tail()","c4d37c37":"!pip install dataprep","b53c435b":"from dataprep.eda import plot, plot_correlation, create_report, plot_missing","4f2de994":"plot_missing(df)","3374d252":"plot(df)","2fff8bf7":"plot(df, \"blurred\")","74c65b47":"plot(df, \"face_confidence\")","fa585256":"plot_correlation(df)","4fcd5845":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.sorrow)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='GnBu', background_color=\"white\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","0ee56a9a":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.blurred)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='GnBu', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","05270da7":"from sklearn.preprocessing import LabelEncoder\n\n#fill in mean for floats\nfor c in df.columns:\n    if df[c].dtype=='float16' or  df[c].dtype=='float32' or  df[c].dtype=='float64':\n        df[c].fillna(df[c].mean())\n\n#fill in -999 for categoricals\ndf = df.fillna(-999)\n# Label Encoding\nfor f in df.columns:\n    if df[f].dtype=='object': \n        lbl = LabelEncoder()\n        lbl.fit(list(df[f].values))\n        df[f] = lbl.transform(list(df[f].values))\n        \nprint('Labelling done.')","cc0c0884":"df = pd.get_dummies(df)","cd4ad0d9":"x = df.drop(['_id', 'blurred'], axis=1)\nx.fillna(999999, inplace=True)\ny = df['blurred']","5cae8dd3":"dt = DecisionTreeClassifier(max_depth=3)","05f93695":"dt.fit(x, y)","34945ec0":"dt_feat = pd.DataFrame(dt.feature_importances_, index=x.columns, columns=['feat_importance'])\ndt_feat.sort_values('feat_importance').tail(8).plot.barh()\nplt.show()","cffb94be":"from IPython.display import SVG\nos.environ[\"PATH\"] += os.pathsep + 'C:\/Program Files (x86)\/Graphviz2.38\/bin\/'\n\ngraph = Source(export_graphviz(dt, out_file=None, feature_names=x.columns, filled = True))\ndisplay(SVG(graph.pipe(format='svg')))","821e1845":"x = df.drop(['_id', 'sorrow'], axis=1)\nx.fillna(999999, inplace=True)\ny = df['sorrow']","b8077ced":"dt = DecisionTreeClassifier(max_depth=3)","223c3336":"dt.fit(x, y)","ff8901d2":"dt_feat = pd.DataFrame(dt.feature_importances_, index=x.columns, columns=['feat_importance'])\ndt_feat.sort_values('feat_importance').tail(8).plot.barh(figsize=(14, 6), color='green')\nplt.show()","6c673e0c":"from IPython.display import SVG\nos.environ[\"PATH\"] += os.pathsep + 'C:\/Program Files (x86)\/Graphviz2.38\/bin\/'\n\ngraph = Source(export_graphviz(dt, out_file=None, feature_names=x.columns, filled = True))\ndisplay(SVG(graph.pipe(format='svg')))","e037ddad":"from dataprep.eda import create_report\n\ndf = pd.read_csv(\"\/kaggle\/input\/book-covers-and-their-properties\/faces.csv\")\ncreate_report(df)","e73b6c8f":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke was Here.' )","6d94b5d3":"#Oscar knows exactly what he intended to say with the quote above.","a856024d":"#Dataprep by SFU - Simon Fraser University","582202b5":"![](https:\/\/img.libquotes.com\/pic-quotes\/v1\/oscar-wilde-quote-lbd5h7e.jpg)libquotes.com"}}