{"cell_type":{"6ddbc52c":"code","57579b25":"code","73f82159":"code","bc003569":"code","25d7c309":"code","0b772a70":"code","fc1ef118":"code","a20fdf14":"code","0d06cbce":"code","4bf39c70":"code","ad245928":"code","b68a2dcf":"code","52a6beae":"code","98831746":"code","b529255a":"code","7ec9c255":"code","76efe0be":"code","c0c6422f":"code","8d9cb23b":"code","402d76d5":"code","591118c7":"code","67d69b65":"code","7d784cdc":"code","589e7aae":"code","7ce99b57":"code","9547f7ff":"code","55be5b27":"code","13dcf60d":"code","90c7ef01":"code","015a7391":"code","2bf89afc":"code","d35136fb":"code","24fc7ee1":"code","7eb8dfae":"code","2f96a75b":"code","6156f7fa":"code","a55b8ead":"code","1ea2371d":"code","65da6054":"code","f231b377":"code","dfea3038":"code","7d323ea6":"code","d9056e9a":"markdown","9e04e5ce":"markdown","22839948":"markdown"},"source":{"6ddbc52c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import preprocessing\nfrom sklearn.linear_model import Lasso, ElasticNet, Ridge, LinearRegression\nfrom sklearn.svm import SVR\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score, mean_squared_log_error\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom tensorflow import keras","57579b25":"train_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","73f82159":"train_df","bc003569":"train_df.info()","25d7c309":"plt.figure(figsize=(32,32))\nsns.heatmap(train_df.corr(),annot=True)","0b772a70":"train_df_drop = train_df.drop(['Id','MSSubClass','OverallCond','BsmtFinSF2','LowQualFinSF','BsmtHalfBath','3SsnPorch','MiscVal','MoSold','YrSold'],axis=1)\ntest_df_drop = test_df.drop(['Id','MSSubClass','OverallCond','BsmtFinSF2','LowQualFinSF','BsmtHalfBath','3SsnPorch','MiscVal','MoSold','YrSold'],axis=1)","fc1ef118":"train_df_drop.info()","a20fdf14":"train_df_drop = train_df_drop.drop(['Alley','FireplaceQu','PoolQC','Fence','MiscFeature'],axis=1)\ntest_df_drop = test_df_drop.drop(['Alley','FireplaceQu','PoolQC','Fence','MiscFeature'],axis=1)","0d06cbce":"test_df_drop.info()","4bf39c70":"for i in train_df_drop:\n    if train_df_drop[i].dtype =='object':\n        train_df_drop[i].fillna('nan',inplace=True)\n        test_df_drop[i].fillna('nan',inplace=True)\n    else:\n        if i=='SalePrice':\n            continue\n        med = np.nanmedian(train_df_drop[i])\n        train_df_drop[i].fillna(med,inplace=True)\n        med = np.nanmedian(test_df_drop[i])\n        test_df_drop[i].fillna(med,inplace=True)","ad245928":"test_df_drop.info()","b68a2dcf":"cats = []\nfor i in train_df_drop:\n    if train_df_drop[i].dtype =='object':\n        cats.append(i)","52a6beae":"cats","98831746":"concat = pd.concat([train_df_drop,test_df_drop])\nconcat.info()","b529255a":"concat_onehot = pd.get_dummies(concat,columns=cats)\nconcat_onehot","7ec9c255":"test_df_onehot = concat_onehot.iloc[-1459:]","76efe0be":"test_df_onehot.columns","c0c6422f":"train_df_onehot = concat_onehot.iloc[:-1459]","8d9cb23b":"train_df_onehot.columns","402d76d5":"test_df_onehot = test_df_onehot.drop('SalePrice',axis=1)","591118c7":"x_scaled = preprocessing.MinMaxScaler().fit_transform(train_df_onehot)\ntrain = pd.DataFrame(x_scaled,columns=train_df_onehot.columns)","67d69b65":"train['SalePrice'] = train_df_onehot['SalePrice']\ntrain","7d784cdc":"x_scaled = preprocessing.MinMaxScaler().fit_transform(test_df_onehot)\ntest = pd.DataFrame(x_scaled,columns=test_df_onehot.columns)","589e7aae":"X_train, X_test, y_train, y_test = train_test_split(train_df_onehot.loc[:, train_df_onehot.columns != 'SalePrice'], train_df_onehot['SalePrice'], test_size=0.1, random_state=42)","7ce99b57":"X_train","9547f7ff":"test_df_onehot.columns","55be5b27":"lasso = Lasso(alpha=1)\nlasso.fit(X_train,y_train)\nprint(lasso.score(X_test,y_test))\npred = lasso.predict(X_test)\nprint(mean_squared_log_error(pred,y_test))","13dcf60d":"en = ElasticNet(alpha=0.0001)\nen.fit(X_train,y_train)\nprint(en.score(X_test,y_test))\npred = en.predict(X_test)\nprint(mean_squared_log_error(pred,y_test))","90c7ef01":"ridge = Ridge(alpha=0.001)\nridge.fit(X_train,y_train)\nprint(ridge.score(X_test,y_test))\npred = ridge.predict(X_test)\nprint(mean_squared_log_error(pred,y_test))","015a7391":"for i in range(100,1000,100):\n    print('n = ',i)\n    gb = GradientBoostingRegressor(learning_rate=0.05, n_estimators=i)\n    gb.fit(X_train,y_train)\n    print(gb.score(X_test,y_test))\n    pred = gb.predict(X_test)\n    print(mean_squared_log_error(pred,y_test))","2bf89afc":"gb = GradientBoostingRegressor(learning_rate=0.05, n_estimators=800)\ngb.fit(X_train,y_train)\nprint(gb.score(X_test,y_test))\npred = gb.predict(X_test)\nprint(mean_squared_log_error(pred,y_test))","d35136fb":"preds = lasso.predict(test_df_onehot)\npreds","24fc7ee1":"lasso_submit_df = pd.DataFrame(data={'Id':test_df['Id'],'SalePrice':preds})\nlasso_submit_df","7eb8dfae":"lasso_submit_df.to_csv('lasso_submit.csv',index=False)","2f96a75b":"preds = en.predict(test)\nen_submit_df = pd.DataFrame(data={'Id':test_df['Id'],'SalePrice':preds})\nen_submit_df\nen_submit_df.to_csv('en_submit.csv',index=False)","6156f7fa":"preds = gb.predict(test_df_onehot)\ngb_submit_df = pd.DataFrame(data={'Id':test_df['Id'],'SalePrice':preds})\ngb_submit_df\ngb_submit_df.to_csv('gb_submit.csv',index=False)","a55b8ead":"inputs = keras.Input(shape=(279,))\nx = keras.layers.Dense(30)(inputs)\n# x = keras.layers.Dense(10)(inputs)\nx = keras.layers.Dropout(0.2)(x)\noutputs = keras.layers.Dense(1)(x)\nmodel = keras.Model(inputs,outputs)\nmodel.compile(optimizer=keras.optimizers.Adam(lr=0.01),loss='mse',metrics=[keras.losses.MeanSquaredLogarithmicError()])","1ea2371d":"model.fit(x=X_train, y=y_train,epochs=20)\nmodel.evaluate(x=X_test, y=y_test)","65da6054":"y_pred = model.predict(X_test)\nr2_score(y_pred, y_test)","f231b377":"preds = model.predict(test_df_onehot)","dfea3038":"a,_ = preds.shape\npreds = preds.reshape(a)\nnn_submit_df = pd.DataFrame(data={'Id':test_df['Id'],'SalePrice':preds})\nnn_submit_df\nnn_submit_df.to_csv('nn.csv',index=False)","7d323ea6":"nn_submit_df","d9056e9a":"# Deep Learning ","9e04e5ce":"# Preprocessing","22839948":"# Testing Algorithms"}}