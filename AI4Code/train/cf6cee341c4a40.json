{"cell_type":{"e9ca80e9":"code","96f7d25b":"code","c5ce51c8":"code","e2c04187":"code","62167373":"code","78bef5d7":"code","3db11ae4":"code","952bac9e":"code","65f2748c":"code","7e666641":"code","5b41bf52":"code","4b6756fe":"code","04cd2d32":"code","92330b1a":"code","120b5c31":"code","b5da9f85":"code","515b9fc9":"code","d338fca1":"code","9b1ca3c8":"code","742abaa1":"code","5d961537":"code","056b6734":"code","ea48ed64":"code","970489cd":"code","39529633":"code","7e78914c":"code","cf1a5b56":"code","325f7448":"code","fd8fca4b":"markdown","d343879a":"markdown","c6f2bd86":"markdown","9dedb64b":"markdown","3eace7fa":"markdown","ecfa7525":"markdown","fb35c434":"markdown","a6f777bc":"markdown","a30be593":"markdown","086442ea":"markdown","88baf5e5":"markdown"},"source":{"e9ca80e9":"import sklearn\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nimport pandas as pd\nfrom sklearn.metrics import confusion_matrix, classification_report\nimport seaborn as sns\nimport numpy as np\n%matplotlib inline\nfrom sklearn.ensemble import BaggingClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom bs4 import BeautifulSoup\nimport requests\nimport re\nfrom sklearn.utils import resample\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nimport pandas as pd\nimport plotly \nimport plotly.graph_objects as go \nfrom plotly.offline import iplot \nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport pandas_profiling\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.decomposition import PCA\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import linear_model\nimport statsmodels.api as sm\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.tree import export_graphviz\nimport seaborn as sns\nsns.set()\n%matplotlib inline\nfrom sklearn.model_selection import train_test_split\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.datasets import load_breast_cancer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier","96f7d25b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n\n","c5ce51c8":"extrusion = pd.read_csv(\"\/kaggle\/input\/find-a-defect-in-the-production-extrusion-line\/extrusion.csv\")\nstatistics = pd.read_csv(\"\/kaggle\/input\/find-a-defect-in-the-production-extrusion-line\/stat.csv\")","e2c04187":"extrusion\n","62167373":"extrusion.describe()\n","78bef5d7":"import matplotlib.pyplot as plt\nplt.spy(extrusion.isnull())","3db11ae4":"statistics","952bac9e":"extrusion['ST110_VAREx_0_SDickeIst'].hist(bins=60);","65f2748c":"extrusion['ST110_VAREx_1_SDickeIst'].hist(bins=60);","7e666641":"extrusion['ST110_VAREx_2_SDickeIst'].hist(bins=60);","5b41bf52":"extrusion['ST110_VAREx_3_SDickeIst'].hist(bins=60);","4b6756fe":"extrusion[extrusion['ST110_VAREx_0_SDickeIst'] < 100]['ST110_VAREx_0_SDickeIst'].hist(bins=60);","04cd2d32":"extrusion[extrusion['ST110_VAREx_1_SDickeIst'] < 100]['ST110_VAREx_1_SDickeIst'].hist(bins=60);","92330b1a":"extrusion[extrusion['ST110_VAREx_2_SDickeIst'] < 100]['ST110_VAREx_2_SDickeIst'].hist(bins=60);","120b5c31":"extrusion[extrusion['ST110_VAREx_3_SDickeIst'] < 100]['ST110_VAREx_3_SDickeIst'].hist(bins=60);","b5da9f85":"plt.figure(figsize=(8,6))\nplt.hist(extrusion[extrusion['ST110_VAREx_0_SDickeIst'] < 100]['ST110_VAREx_0_SDickeIst'], bins=100, alpha=0.5, label=\"extruder 0\")\nplt.hist(extrusion[extrusion['ST110_VAREx_1_SDickeIst'] < 100]['ST110_VAREx_1_SDickeIst'], bins=100, alpha=0.5, label=\"extruder A\")\nplt.hist(extrusion[extrusion['ST110_VAREx_2_SDickeIst'] < 100]['ST110_VAREx_2_SDickeIst'], bins=100, alpha=0.5, label=\"extruder B\")\nplt.hist(extrusion[extrusion['ST110_VAREx_3_SDickeIst'] < 100]['ST110_VAREx_3_SDickeIst'], bins=100, alpha=0.5, label=\"extruder C\")\nplt.xlabel(\"Data\", size=14)\nplt.ylabel(\"Count\", size=14)\nplt.title(\"Different extruders and actual layer thickness\")\nplt.legend(loc='upper right')\n\n","515b9fc9":"extrusion['EXT0'] = extrusion['ST110_VAREx_0_SDickeIst'].apply(lambda x: 1 if x == 0 else 0)","d338fca1":"extrusion['EXTA'] = extrusion['ST110_VAREx_1_SDickeIst'].apply(lambda x: 1 if x == 0 else 0)","9b1ca3c8":"extrusion['EXTB'] = extrusion['ST110_VAREx_2_SDickeIst'].apply(lambda x: 1 if x == 0 else 0)","742abaa1":"extrusion['EXTC'] = extrusion['ST110_VAREx_3_SDickeIst'].apply(lambda x: 1 if x == 0 else 0)","5d961537":"extrusion['EXTsum'] = extrusion['EXTC']+extrusion['EXTA']+extrusion['EXTB']+extrusion['EXT0']","056b6734":"extrusion['EXTtotal'] = extrusion['EXTsum'].apply(lambda x: 0 if x == 0 else 1)","ea48ed64":"extrusion.describe()","970489cd":"extrusion.drop(columns=['EXT0', 'EXTA', 'EXTB', 'EXTC', 'EXTsum'])","39529633":"plt.figure(figsize=(5, 5))\n            # 'ax' has references to all the four axes\nplt.suptitle(\"Malfunctions\", fontsize=20)\nsns.countplot(extrusion['EXTtotal']) ","7e78914c":"!pip install pandas-profiling","cf1a5b56":"from pandas_profiling import ProfileReport\n#profext = ProfileReport(extrusion)\nprofext = ProfileReport(extrusion.sample(n=3000)) ","325f7448":"profext.to_notebook_iframe() ","fd8fca4b":"Hello, this is six sigma project on extrusion malfunction. Our goal is to inspect and solve problems with this malfunction. The extruder consists of three separate plants that take the granular raw material, and then stretch it into a plastic film by heating and drawing in three layers. The most important type of defect is film breakage, and it is what the customer asks to minimize. Malfunctions occurs when -  a speck fall into the \u201chead\u201d of the extruder (or other mechanical), holes on the canvas are present, raw granules are non-melting.","d343879a":"Looks rather normal for malfunctions. Groups are unbalanced - not very surprising. 479 columns - there are too many for our analysis, we will trim this.","c6f2bd86":"print extrusion['ST110_VAREx_3_SDickeIst'].isnull()\n","9dedb64b":"The Idea behind this analysis is to find occurence in timeline, go some time earlier and mark it. Next step is to clean occurence data, to not fool the analysis. this way we will be able to find what is happening before occurence.\nbefore cleaning we need to check which features are the most correlated with extrusion problems. Very frustrating is not knowing the process itself (I can imagine why there is so few people looking at this dataset), however we will explore data and I hope it will help with analysis.\n","3eace7fa":"\"Plastics extrusion is a high-volume manufacturing process in which raw plastic is melted and formed into a continuous profile. Extrusion produces items such as pipe\/tubing, weatherstripping, fencing, deck railings, window frames, plastic films and sheeting, thermoplastic coatings, and wire insulation.\n\nThis process starts by feeding plastic material (pellets, granules, flakes or powders) from a hopper into the barrel of the extruder. The material is gradually melted by the mechanical energy generated by turning screws and by heaters arranged along the barrel. The molten polymer is then forced into a die, which shapes the polymer into a shape that hardens during cooling.\" https:\/\/en.wikipedia.org\/wiki\/Plastic_extrusion","ecfa7525":"![image.png](attachment:6507be81-636d-4167-973d-91e12e1c4178.png)","fb35c434":"phew! that's good :) Now we have something to work with, let see how the contribution is going","a6f777bc":"Let's assume that layer thickness 0 on either of those extruders means malfunction, we will generate binary classificator to distinguish those groups, at least I can assume that from author description. From our graph point of view, the \"0\" thickness ones seems to overlap. let us check that.","a30be593":"Video of plastic extrusion\n\n<iframe width=\"1536\" height=\"722\" src=\"https:\/\/www.youtube.com\/embed\/-8GR3pG1gsE\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>","086442ea":"![image.png](attachment:06995973-e337-4aa9-b8a7-b17938e55f36.png)","88baf5e5":"From the legend info we can see that actual layer thickness is calles SDickeIst - 'ST110_VAREx_0_SDickeIst' - for extruder 0 \n'ST110_VAREx_1_SDickeIst'- for extruder A \n'ST110_VAREx_2_SDickeIst'- for extruder B \n'ST110_VAREx_3_SDickeIst'- for extruder C\n"}}