{"cell_type":{"1d4e1469":"code","a9994d66":"code","ea10b6ee":"code","8ad9c58e":"code","fed75029":"code","24925ddb":"code","69d2d9cf":"code","f2a0e3dc":"code","5db14673":"code","84abe171":"code","fea7472d":"code","13a0f81a":"code","1d1fff29":"code","fbb30c41":"code","3a135e0b":"code","0f8a3a96":"code","3240db21":"code","fee8351f":"code","a8ec4bdd":"markdown","de8980b6":"markdown","c6fb208f":"markdown","529de525":"markdown","eb39f1f7":"markdown","a046d64d":"markdown","b5e98250":"markdown","ae3443b2":"markdown"},"source":{"1d4e1469":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a9994d66":"data=pd.read_csv(\"\/kaggle\/input\/ph-recognition\/ph-data.csv\")\ndata.head()","ea10b6ee":"def acidnotrbase(row):\n    if row['label'] < 7:\n        return 0 \n    elif row['label']>7: \n        return 1 \n    else :\n        return 2\ndata['type'] = data.apply(lambda row: acidnotrbase(row), axis=1)\ndata.head()","8ad9c58e":"%matplotlib inline\nimport seaborn as sns\nsns.countplot(x=data[\"type\"])","fed75029":"import matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nfig = plt.figure(figsize=(8, 6))\nax = fig.add_subplot(111, projection='3d')\n\nxs = data[\"blue\"]\nys = data['green']\nzs = data['red']\nimport matplotlib.cm as cm\nax.scatter(xs, ys, zs,label=data[\"type\"],cmap='viridis')\n\nax.set_xlabel('Blue')\nax.set_ylabel('Red')\nax.set_zlabel('Green')\nplt.show()","24925ddb":"sns.relplot(data=data,x=\"red\",y=\"green\",hue=\"type\")","69d2d9cf":"sns.relplot(data=data,x=\"red\",y=\"blue\",hue=\"type\")","f2a0e3dc":"from sklearn.manifold import TSNE\ntsne=TSNE(n_components=2)\nx=data.iloc[:,0:3]\nx_tsne=tsne.fit_transform(x)","5db14673":"xtes=pd.DataFrame(x_tsne)\nxtes.columns = ['b', 'i']\nxtes.head()","84abe171":"xtes[\"type\"]=data[\"type\"]","fea7472d":"xtes.head()","13a0f81a":"sns.relplot(data=xtes,x=\"b\",y=\"i\",hue=\"type\")","1d1fff29":"from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nlda = LinearDiscriminantAnalysis(n_components=2)\nrgb=data[[\"blue\",\"red\",\"green\"]]\nx_lda=lda.fit_transform(rgb,data[\"type\"])","fbb30c41":"xlda=pd.DataFrame(x_lda)\nxlda.columns = ['ld', 'a']\nxlda[\"type\"]=data[\"type\"]\nxlda.head()","3a135e0b":"sns.relplot(data=xlda,x=\"ld\",y=\"a\",hue=\"type\")","0f8a3a96":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier(n_neighbors=1)\nfrom sklearn.model_selection import train_test_split\nX=xlda[[\"ld\",\"a\"]]\ny=data[\"type\"]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)","3240db21":"knn.fit(X_train,y_train)\nypred=knn.predict(X_test)","fee8351f":"import sklearn.metrics as metrik\nprint(metrik.accuracy_score(y_true=y_test,y_pred=ypred))\nprint(metrik.confusion_matrix(y_true=y_test,y_pred=ypred))","a8ec4bdd":"## Use Tsne and make the data 2 dimensional","de8980b6":"0 is acid, 1 is base, 2 is notr.","c6fb208f":"Acid and Base Nearly Clearly Separable with red and green","529de525":"Acid and Base is Clearly Separable Still.","eb39f1f7":"## KNN is work just fine. Notr is problem %50 of the time is true Notr only but dataset is this.","a046d64d":"## I use KNN's 1NN because of Notrs.","b5e98250":"Notr is always problem but LDa is better than TSNE","ae3443b2":"## Notr can't separable easily. Maybe in this dataset 7 isn't notr."}}