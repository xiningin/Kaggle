{"cell_type":{"95718512":"code","05418cc6":"code","7cb6eaa6":"code","ea3bdb78":"code","8338cfb9":"code","cf2d01a9":"code","bf288499":"code","b3e38a63":"code","b5efc002":"code","b6f4bc6b":"code","a676e88a":"code","c5fbf172":"code","d01ebaff":"code","9d6cb34a":"code","c0223241":"code","90f5e634":"code","aa31caef":"code","f6e5f992":"code","c8b9a558":"code","37f51f42":"code","36653bb2":"code","e3bc0368":"code","b2b0e7d0":"code","3c2eacc1":"code","671c1958":"code","57a77d75":"code","e69dda3c":"code","9f0f410b":"code","43c18210":"code","9b7e41fc":"code","133ccf63":"code","1ce64aae":"code","2f20a746":"code","d4c9ad43":"code","1fb81367":"code","c2cf3e21":"code","8951bc54":"code","90cd2f65":"code","0a0651aa":"code","34d5ab34":"code","4660a1f1":"code","68bf793e":"code","161e8528":"code","6104c0ae":"code","b7f4369e":"code","17966b7f":"code","34ba746d":"code","cb4f0907":"markdown","75e563a4":"markdown","f304e1ea":"markdown","ade6df2d":"markdown","3dd9c90c":"markdown","e2156724":"markdown","b1e237c0":"markdown","08d3765e":"markdown","a04bb9fb":"markdown","fe386bf8":"markdown","cd7ed1af":"markdown","229345b9":"markdown","71bcfa33":"markdown","4b8fc763":"markdown","6ddd9372":"markdown","e708aabe":"markdown","d30fabfa":"markdown","af5ca7b1":"markdown","bff1f5d1":"markdown","619ade9f":"markdown","535f7523":"markdown","56d1874c":"markdown","9934d703":"markdown","4a98d0fa":"markdown","0e4b2680":"markdown","8e84ad8d":"markdown","4c7aff2f":"markdown","8c72eaf9":"markdown","bb2417f7":"markdown","5a887029":"markdown","957f6ab1":"markdown","997c5979":"markdown","050319f9":"markdown","906835aa":"markdown","5c2f2574":"markdown","82e8d70e":"markdown","34dd5651":"markdown"},"source":{"95718512":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\n\nfrom subprocess import check_output","05418cc6":"startups = pd.read_csv(\"..\/input\/50-startups\/50_Startups.csv\")\ndf = startups.copy()","7cb6eaa6":"df.head()","ea3bdb78":"df.info()","8338cfb9":"df.shape #Datasetimiz 50 g\u00f6zlem ve 5 \u00f6znitelikten olu\u015fuyor","cf2d01a9":"df.isna().sum() #Eksik verimiz bulunmuyor","bf288499":"df.corr() \n#Korelasyon katsay\u0131s\u0131 +1.00'a yaklast\u0131kca pozitif iliski olur.\n#En g\u00fc\u00e7l\u00fc pozitif ili\u015fki \"R&D Spend\" ile \"Profit\" aras\u0131ndad\u0131r.","b3e38a63":"sns.regplot(df[\"R&D Spend\"], df[\"Profit\"], ci = None); #lineer pozitif bir ili\u015fki oldu\u011funu g\u00f6r\u00fcyoruz","b5efc002":"corr = df.corr() \nsns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values);","b6f4bc6b":"#Is\u0131 haritas\u0131 grafi\u011finde Profit ile #R&D Spend aras\u0131ndaki pozitif y\u00f6nl\u00fc ili\u015fkinin \u015fiddetinin y\u00fcksek oldu\u011fu g\u00f6r\u00fclmektedir","a676e88a":"sns.scatterplot(x = \"R&D Spend\", y = \"Profit\", data = df);\n#Aralar\u0131ndaki pozitif ili\u015fkiyi daha iyi g\u00f6rebiliyoruz\n#Aralar\u0131nda ili\u015fkiye bak\u0131nca R&D Spend ve Profit do\u011fru orant\u0131l\u0131 olarak artmaktad\u0131r ","c5fbf172":"df.hist(figsize = (15,15))","d01ebaff":"df.describe().T\n#Marketing Spend en y\u00fcksek standart sapmaya sahiptir.\n#Administration en k\u00fc\u00e7\u00fck standart sapmaya sahiptir.\n#Bir\u00e7ok veri ortalamaya yak\u0131n ise standart sapma d\u00fc\u015f\u00fck olacakt\u0131r.\n#Bir\u00e7ok veri ortalamaya uzak ise standart sapma y\u00fcksek olacakt\u0131r.\n\n#Administration en d\u00fczenli, Marketing Spend en d\u00fczensiz da\u011f\u0131ld\u0131\u011f\u0131 g\u00f6r\u00fcl\u00fcr.\n\n#B\u00fct\u00fcn \u00f6zniteliklerin standart sapmas\u0131 ortalamaya g\u00f6re d\u00fc\u015f\u00fckt\u00fcr. Bu da verilerin ay\u0131rt edicili\u011fi d\u00fc\u015f\u00fckt\u00fcr ve grup homojendir","9d6cb34a":"df[\"State\"].unique()","c0223241":"df['State'] = pd.Categorical(df['State'])","90f5e634":"dfDummies = pd.get_dummies(df['State'], prefix = 'State')\n#State'a dair kategori isimlerinini \u00f6n\u00fcne State ekledim","aa31caef":"dfDummies","f6e5f992":"df.drop([\"State\"], axis = 1, inplace = True)\ndfDummies.drop([\"State_New York\"], axis = 1, inplace = True)","c8b9a558":"df = pd.concat([df, dfDummies], axis=1)\ndf","37f51f42":"X = df.drop(\"Profit\", axis = 1)\ny = df[\"Profit\"]","36653bb2":"X","e3bc0368":"y","b2b0e7d0":"from sklearn.model_selection import train_test_split\n#train test modellerini olu\u015ftumak i\u00e7in gerekli olacak.\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state = 42)\n#y de\u011fi\u015fkeni 0dan 49a b\u00fcy\u00fckten k\u00fc\u00e7\u00fc\u011fe s\u0131ral\u0131 gibi e\u011fer random_state kullanmazsak b\u00fcy\u00fck de\u011ferleri \u00f6\u011fretir k\u00fc\u00e7\u00fck de\u011ferleri test ederiz ama biz bunu kar\u0131\u015f\u0131k yapmas\u0131n\u0131 istiyoruz.\n","3c2eacc1":"X_train","671c1958":"X_test","57a77d75":"y_train","e69dda3c":"y_test","9f0f410b":"from sklearn.linear_model import LinearRegression\n\nlr= LinearRegression()","43c18210":"model = lr.fit(X_train, y_train)","9b7e41fc":"y_pred = model.predict(X_test)","133ccf63":"df_sonuc=pd.DataFrame({'Gercek': y_test,'Tahmin Edilen': y_pred})\ndf_sonuc","1ce64aae":"from sklearn.metrics import mean_absolute_error\n\nMAE = mean_absolute_error(df_sonuc[\"Gercek\"], df_sonuc[\"Tahmin Edilen\"])\nMAE\n#Art\u0131klar\u0131n mutlak de\u011ferleri al\u0131n\u0131r. \n#Ortalama hatay\u0131 temsil eder","2f20a746":"from sklearn.metrics import mean_squared_error\n\nMSE = mean_squared_error(df_sonuc[\"Gercek\"], df_sonuc[\"Tahmin Edilen\"])\nMSE\n#Art\u0131klar\u0131n kare toplam\u0131n\u0131n \u00f6rnek say\u0131s\u0131na b\u00f6l\u00fcnmesi ile elde edilir. Burada kal\u0131nt\u0131lar, g\u00f6zlem de\u011ferleri ile tahmin de\u011ferlerinin fark\u0131ndan olu\u015fur. \n#0 de\u011ferine yakla\u015ft\u0131k\u00e7a modelin tahmin yetene\u011fi daha iyidir.\n#G\u00f6zlem ba\u015f\u0131na hata pay\u0131n\u0131 \u00f6l\u00e7meye yarar","d4c9ad43":"import math\nRMSE = math.sqrt(MSE)\nRMSE\n#MSE'nin kare k\u00f6k\u00fcne g\u00f6re hata oran\u0131d\u0131r\n#0 de\u011ferine yakla\u015ft\u0131k\u00e7a modelin tahmin yetene\u011fi daha iyidir.","1fb81367":"model.score(X,y)\n# ba\u011f\u0131ms\u0131z ve ba\u011f\u0131ml\u0131 \u00f6znitelikleri parametre olarak al\u0131r ve RSquared de\u011ferini d\u00f6ner.\n# R squared de\u011feri 1'e ne kadar yak\u0131nsa modeldeki ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerin ba\u011f\u0131ml\u0131 de\u011fi\u015fkeni ifade edebilme oran\u0131 o kadar iyidir.","c2cf3e21":"import statsmodels.api as sm\n\nstmodel = sm.OLS(y, X).fit()\nstmodel.summary()","8951bc54":"X = df[['R&D Spend', 'Administration', 'Marketing Spend']]\ny = df[\"Profit\"]","90cd2f65":"X","0a0651aa":"y","34d5ab34":"from sklearn.model_selection import train_test_split\n#train test modellerini olu\u015ftumak i\u00e7in gerekli olacak.\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state = 42)\n#y de\u011fi\u015fkeni 0dan 49a b\u00fcy\u00fckten k\u00fc\u00e7\u00fc\u011fe s\u0131ral\u0131 gibi e\u011fer random_state kullanmazsak b\u00fcy\u00fck de\u011ferleri \u00f6\u011fretir k\u00fc\u00e7\u00fck de\u011ferleri test ederiz ama biz bunu kar\u0131\u015f\u0131k yapmas\u0131n\u0131 istiyoruz.\n","4660a1f1":"model_tekrar = lr.fit(X_train, y_train)","68bf793e":"y_pred = model_tekrar.predict(X_test)","161e8528":"df_sonucTekrar=pd.DataFrame({'Gercek': y_test,'Tahmin Edilen': y_pred})\ndf_sonucTekrar","6104c0ae":"from sklearn.metrics import mean_absolute_error\n\nMAE = mean_absolute_error(df_sonucTekrar[\"Gercek\"], df_sonucTekrar[\"Tahmin Edilen\"])\nMAE\n#Art\u0131klar\u0131n mutlak de\u011ferleri al\u0131n\u0131r. \n#Ortalama hatay\u0131 temsil eder","b7f4369e":"from sklearn.metrics import mean_squared_error\n\nMSE = mean_squared_error(df_sonucTekrar[\"Gercek\"], df_sonucTekrar[\"Tahmin Edilen\"])\nMSE\n#Art\u0131klar\u0131n kare toplam\u0131n\u0131n \u00f6rnek say\u0131s\u0131na b\u00f6l\u00fcnmesi ile elde edilir. Burada kal\u0131nt\u0131lar, g\u00f6zlem de\u011ferleri ile tahmin de\u011ferlerinin fark\u0131ndan olu\u015fur. \n#0 de\u011ferine yakla\u015ft\u0131k\u00e7a modelin tahmin yetene\u011fi daha iyidir.\n#G\u00f6zlem ba\u015f\u0131na hata pay\u0131n\u0131 \u00f6l\u00e7meye yarar","17966b7f":"import math\nRMSE = math.sqrt(MSE)\nRMSE\n#MSE'nin kare k\u00f6k\u00fcne g\u00f6re hata oran\u0131d\u0131r\n#0 de\u011ferine yakla\u015ft\u0131k\u00e7a modelin tahmin yetene\u011fi daha iyidir.","34ba746d":"model_tekrar.score(X,y)","cb4f0907":"Dileyenler statsmodel kullanarak hangi \u00f6zniteliklerin model i\u00e7in %95 g\u00fcvenilirlikle ne kadar anlaml\u0131 olup olmad\u0131\u011f\u0131na da bakabilir. Modelde baz\u0131 feature selection i\u015flemleri yaparak tekrardan e\u011fitip yeni sonu\u00e7lar mukayese edilebilir.","75e563a4":"Ka\u00e7 g\u00f6zlem ve \u00f6znitelikten olu\u015ftu\u011funu g\u00f6r\u00fcnt\u00fcleyelim.","f304e1ea":"#Bu yakla\u015f\u0131mda kategorik t\u00fcrde \u00f6zniteli\u011fe ait t\u00fcm de\u011ferler yeni birer \u00f6znitelik haline getirilir. Her \u00f6rnek as\u0131l olarak hangi yeni \u00f6zniteli\u011fe sahipse (kategorik de\u011fere) onun de\u011feri \u201c1\u201d, di\u011fer yeni \u00f6zniteliklerin de\u011ferleri ise \u201c0\u201d olur. Asl\u0131nda bir \u00e7e\u015fit \u201cikili kodlama\u201d (binary coding) olarak da d\u00fc\u015f\u00fcn\u00fclebilir.","ade6df2d":"Veri \u00e7er\u00e7evesinin bilgilerini g\u00f6r\u00fcnt\u00fcleyelim.","3dd9c90c":"#Profit \u00f6zniteli\u011fine bakt\u0131\u011f\u0131m\u0131zda 0dan 49. g\u00f6zleme ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerden kaynakl\u0131 s\u00fcrekli bir \u015fekilde azalma var. Bu \u00f6nce kar\u0131 art\u0131ran sonra azaltan de\u011ferleri \u00f6\u011frenmesine neden olur ama biz lineer regresyonda kar\u0131\u015f\u0131k \u015fekilde \u00f6\u011frenmesini sa\u011flayaca\u011f\u0131z.","e2156724":"Modeli e\u011fitmek i\u00e7in ba\u011f\u0131ml\u0131 ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerden olu\u015fturulan e\u011fitim verilerini verelim.","b1e237c0":"#Sonu\u00e7 olarak \u00f6zniteli\u011fin P>|t| de\u011feri 0.05 de\u011ferinden b\u00fcy\u00fck ise regresyondan \u00e7\u0131karsak regresyonu olumlu etkiler.  P>|t| de\u011feri 0.05 de\u011ferinden b\u00fcy\u00fck ise etkili bir \u00f6znitelik olmad\u0131\u011f\u0131n\u0131 g\u00f6r\u00fcyoruz. ","08d3765e":"Modelin R Squared de\u011ferini e\u011fitim verileri \u00fczerinden yazd\u0131ral\u0131m.","a04bb9fb":"Numpy, matplotlib.pyplot, pandas ve seaborn k\u00fct\u00fcphanelerini \u00e7ekirde\u011fe dahil edelim.","fe386bf8":"# Do\u011frusal Regresyon Egzersizleri","cd7ed1af":"LinearRegression'u \u00e7ekirde\u011fe dahil edip modeli in\u015fa edelim.","229345b9":"Dizinde bulunan veri \u00e7er\u00e7evemizi startups de\u011fi\u015fkenine atayal\u0131m. startups de\u011fi\u015fkenini df de\u011fi\u015fkenine kopyalayarak kullanmaya ba\u015flayal\u0131m.","71bcfa33":"4 par\u00e7a de\u011fi\u015fkeni kontrol edelim.","4b8fc763":"\u0130lk 5 g\u00f6zlemini yazd\u0131ral\u0131m.","6ddd9372":"Seaborn ile korelasyon matrisinin \u0131s\u0131 haritas\u0131n\u0131 \u00e7izdirelim.","e708aabe":"#ilk hesaplamadakine yak\u0131n bir de\u011fer \u00e7\u0131k\u0131yor","d30fabfa":"#ilk hesaplamadakine daha d\u00fc\u015f\u00fck bir de\u011fer \u00e7\u0131k\u0131yor","af5ca7b1":"Eksik verileri kontrol edelim.","bff1f5d1":"Veri \u00e7er\u00e7evemizi ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenler olmak \u00fczere b\u00f6l\u00fctleyelim.","619ade9f":"Bu ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerden train ve test olmak \u00fczere 4 par\u00e7a olu\u015ftural\u0131m. Bunu yapmak i\u00e7in train_test_split kullanal\u0131m.","535f7523":"Korelasyon matrisi \u00e7izdirelim.","56d1874c":"#Ekran \u00e7\u0131kt\u0131s\u0131ndan da g\u00f6r\u00fclece\u011fi \u00fczere \u00f6rne\u011fimizdeki data frame (yani df de\u011fi\u015fkeni) bellekte 2.1+ KB yer kaplamaktad\u0131r.","9934d703":"sklearn b\u00fcnyesinde bar\u0131nan metrics'i \u00e7ekirde\u011fe dahil edelim ve MAE, MSE, RMSE de\u011ferlerini g\u00f6r\u00fcnt\u00fcleyelim.","4a98d0fa":"#Bu kadar b\u00fcy\u00fck de\u011ferlere g\u00f6re yak\u0131n sonu\u00e7lar tahmin etti","0e4b2680":"Tahminleri ve ger\u00e7ek de\u011ferleri bir veri \u00e7er\u00e7evesinde toplay\u0131p \u00fczerinde g\u00f6z gezdirelim.","8e84ad8d":"#ilk hesaplamadakine daha d\u00fc\u015f\u00fck bir de\u011fer \u00e7\u0131k\u0131yor","4c7aff2f":"Modele daha \u00f6nce g\u00f6rmedi\u011fi ba\u011f\u0131ml\u0131 test de\u011fi\u015fkenini tahmin ettirelim. Bu tahmin de\u011ferlerimizi y_pred de\u011fi\u015fkenine atayal\u0131m.","8c72eaf9":"R&D Spend ve Profit aras\u0131ndaki korelasyonu daha iyi g\u00f6rebilmek i\u00e7in scatterplot \u00e7izdirelim.","bb2417f7":"State'a ait benzersiz de\u011ferleri g\u00f6r\u00fcnt\u00fcleyelim.","5a887029":"#ilk hesaplamadakine daha d\u00fc\u015f\u00fck bir de\u011fer \u00e7\u0131k\u0131yor","957f6ab1":"State \u00f6zniteli\u011fini silip dummy olarak yarat\u0131lan State'lardan da birisini hari\u00e7 tutarak veri \u00e7er\u00e7evemizi g\u00fcncelleyelim.","997c5979":"50 adet Startup'\u0131n ara\u015ft\u0131rma ve geli\u015ftirmeye y\u00f6nelik harcamas\u0131, y\u00f6netime y\u00f6nelik harcamas\u0131, pazarlama harcamas\u0131, kazand\u0131klar\u0131 kar miktar\u0131 ve kurulduklar\u0131 lokasyon bilgisi bulunmaktad\u0131r. Ama\u00e7 kar miktar\u0131n\u0131 tahmin etmektir. Bu bir say\u0131sal tahmin problemidir ve ba\u011f\u0131ml\u0131 de\u011fi\u015fkenimiz \"Profit\".","050319f9":"Ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenleri kontrol edelim.","906835aa":"get_dummies yard\u0131m\u0131yla State'a dair kategorik \u00f6znitelik \u00e7\u0131kar\u0131mlar\u0131nda bulunal\u0131m. \u00c7\u00fcnk\u00fc State'lar\u0131n birbirine \u00fcst\u00fcnl\u00fc\u011f\u00fc yok, nominaller. Ordinal de\u011fil.","5c2f2574":"Veri \u00e7er\u00e7evesinin temel istatistik de\u011ferlerini g\u00f6r\u00fcnt\u00fcleyelim.","82e8d70e":"Say\u0131sal de\u011fi\u015fkenlerin da\u011f\u0131l\u0131m\u0131n\u0131 g\u00f6rmek i\u00e7in df \u00fczerinden histogram \u00e7izdirelim.","34dd5651":"#Burda ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerin ba\u011f\u0131ml\u0131 de\u011fi\u015fkeni bulmamdaki anlaml\u0131l\u0131klar\u0131n\u0131 anl\u0131caz. P>|t| de\u011ferlerine bakarak R&D Spend, Administration, Marketing Spend 0.05 den k\u00fc\u00e7\u00fck olduklar\u0131 i\u00e7in \u00e7ok etkili ve anlaml\u0131 ama State_California ve State_Florida 0.05ten b\u00fcy\u00fck oldu\u011fu i\u00e7in \u00e7okta anlaml\u0131 de\u011fil bunlar\u0131 \u00e7\u0131kararak tekrar e\u011fitebiliriz."}}