{"cell_type":{"de5ab123":"code","00f3df25":"code","cdbe1aef":"code","5ba180b2":"code","38056709":"code","c4db10d7":"code","3564613b":"code","b6505906":"code","e3b2efe1":"code","40f4f82d":"code","681ab04e":"code","e1024013":"code","50c98dbc":"code","bf1416d7":"code","a206fbbc":"code","9cfb570b":"code","7656d644":"code","5b98169d":"code","a794ca28":"code","3bf14dcb":"code","7a510e85":"code","b09cbf52":"code","f7ff1e5b":"code","5346eba2":"code","bdf7b557":"code","85a28d85":"code","3047841c":"code","842a6c31":"code","bc4f3c74":"code","ef123ed5":"code","76717858":"code","ced823c2":"code","31726ab4":"code","f7b6868a":"code","7bb8039f":"code","6dbf8caa":"code","aea2825e":"code","a6388410":"code","24fa05d3":"code","22bf85ad":"code","428ec80b":"code","871bff9c":"code","9489ccec":"code","eaf56178":"code","fc4c7023":"code","63eb13c7":"code","17d58ca6":"code","65bbb920":"code","6195b2ff":"code","77fd44a3":"code","75721e2c":"code","629d796b":"code","df3c9584":"code","447aef25":"code","076f170d":"code","99dea14e":"code","4f65004c":"code","9feac6bc":"code","191aea77":"code","b61b11fa":"code","e07725b7":"code","a874bee7":"code","add6b231":"code","f3ddd1ec":"markdown","108c96e1":"markdown","cd13f58e":"markdown","7cc92a94":"markdown","4c10d8f5":"markdown","4a903d32":"markdown","f77d2368":"markdown","72039c9e":"markdown","5fa065da":"markdown","4179c9bf":"markdown","837f9199":"markdown","d53b6eee":"markdown","5ccba0d6":"markdown","85999e71":"markdown","c5f970bb":"markdown","71da3ca4":"markdown","850acedb":"markdown","31af43fe":"markdown","f2abea42":"markdown","fbce0fd1":"markdown","5137e378":"markdown","7f352b60":"markdown","89c45099":"markdown","fd39e834":"markdown","1b384a5c":"markdown","e858d176":"markdown","49c4f513":"markdown","3cabfe78":"markdown","7dc81ee1":"markdown","a330994a":"markdown","e7bb6326":"markdown","a29bb725":"markdown","ddc32fc0":"markdown","275d907c":"markdown","010fd16c":"markdown","c4f261b8":"markdown","bf4611ab":"markdown","5ec8df6b":"markdown","20e3ad73":"markdown","4497bd15":"markdown","47a94d20":"markdown","970b9878":"markdown"},"source":{"de5ab123":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt \n\nimport plotly \nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.offline as py\nfrom plotly.offline import iplot\nfrom plotly.subplots import make_subplots\nimport plotly.figure_factory as ff","00f3df25":"df = pd.read_csv(\"..\/input\/netflix-original-films-imdb-scores\/NetflixOriginals.csv\", encoding='latin-1')\ndf.head()","cdbe1aef":"df.shape","5ba180b2":"df.columns.value_counts()","38056709":"df.isnull().sum()","c4db10d7":"df.info()","3564613b":"df[\"Date\"] = pd.to_datetime(df.Premiere)\ndf[\"Date\"]","b6505906":"df.head()","e3b2efe1":"df[\"Year\"] = df[\"Date\"].dt.year\ndf[\"Month\"] = df[\"Date\"].dt.month\ndf[\"day_of_week\"] = df[\"Date\"].dt.dayofweek\ndf[\"Year_Month\"] = df[\"Date\"].dt.strftime(\"%Y-%m\")","40f4f82d":"df.head()","681ab04e":"df.info()","e1024013":"df.Genre.nunique()","50c98dbc":"df.Genre.unique()","bf1416d7":"a = df.Genre.unique()\nlen(a)","a206fbbc":"df.Genre.value_counts(normalize=True) * 100","9cfb570b":"genre = df.Genre.value_counts().nlargest(20)  # genre = df['Genre'].value_counts()[:20]\ngenre","7656d644":"genre.index","5b98169d":"genre.values","a794ca28":"fig = px.bar(data_frame=genre, x=genre.index, y=genre.values, labels={\"y\":\"Number of Movies from the Genre\", \"index\":\"Genres\"})\nfig.update_layout(xaxis={\"categoryorder\":\"total descending\"})\n\nfig.show()","3bf14dcb":"df.Language.unique()","7a510e85":"df.Language.value_counts()","b09cbf52":"df.Language.nunique()","f7ff1e5b":"df.Language.value_counts().nlargest(20)","5346eba2":"top_20_lang = df.Language.value_counts().nlargest(20)\ntop_20_lang","bdf7b557":"top_20_lang.index","85a28d85":"top_20_lang.values","3047841c":"fig = px.bar(data_frame=top_20_lang, x=top_20_lang.index, y=top_20_lang.values, labels={\"y\":\"Count\", \"index\":\"Language\"})\nfig.update_layout(xaxis={\"categoryorder\":\"total descending\"})\n\nfig.show()","842a6c31":"df.Runtime","bc4f3c74":"df.Runtime.describe()","ef123ed5":"fig = px.histogram(data_frame=df, x=\"Runtime\", title=\"Runtime of Programs\")\n\nfig.show()","76717858":"fig = px.box(data_frame=df, x=\"Runtime\", hover_data=df[[\"Title\", \"Genre\"]])\nfig.update_traces(quartilemethod=\"inclusive\")\n\nfig.show()","ced823c2":"df[df.Runtime == df.Runtime.max()][\"Title\"]","31726ab4":"df[df.Runtime == df.Runtime.min()][\"Title\"]","f7b6868a":"df[\"IMDB Score\"].describe()","7bb8039f":"fig = px.histogram(data_frame=df, x=df[\"IMDB Score\"], title=\"IMDB Scores of the Programs\")\n\nfig.show()","6dbf8caa":"fig = px.box(data_frame=df, x=df[\"IMDB Score\"], hover_data=df[[\"Title\", \"Genre\"]])\nfig.update_traces(quartilemethod=\"inclusive\")\n\nfig.show()","aea2825e":"df[df[\"IMDB Score\"] == df[\"IMDB Score\"].max()][[\"Title\", \"Genre\"]]","a6388410":"df[df[\"IMDB Score\"] == df[\"IMDB Score\"].min()][[\"Title\", \"Genre\"]]","24fa05d3":"df[\"Runtime\"].corr(df[\"IMDB Score\"])","22bf85ad":"df[[\"IMDB Score\", \"Runtime\"]].corr()","428ec80b":"df[[\"Runtime\", \"IMDB Score\"]].corr()","871bff9c":"fig = px.scatter(data_frame=df, x=\"IMDB Score\", y=\"Runtime\")\nfig.update_layout(autosize=False, width=800, height=600,)\n\nfig.show()","9489ccec":"year = df.Year.value_counts()\nyear","eaf56178":"year.index","fc4c7023":"year.values","63eb13c7":"fig = px.bar(data_frame=df, x=year.index, y=year.values, labels={\"y\":\"Count of Movies per each Year\", \"x\":\"Year\"})\nfig.update_layout(xaxis={'categoryorder':'total descending'})\n\nfig.show()","17d58ca6":"month = df.Month.value_counts(sort=False)\nmonth","65bbb920":"month.index","6195b2ff":"month.values","77fd44a3":"months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\n\nfig = px.bar(data_frame=df, x=months, y=month.values, labels={\"y\":\"Count of Movies per each Month\", \"x\":\"Month\"})\n\nfig.show()","75721e2c":"df.day_of_week.value_counts(sort=False)","629d796b":"day = df.day_of_week.value_counts(sort=False)\nday.values","df3c9584":"days = [\"Mon\", \"Tue\", \"Wen\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]\n\nfig = px.bar(data_frame=df, x=days, y=day.values, labels={\"y\":\"Count of Movies per each Day\", \"x\":\"Day\"})\n\nfig.show()","447aef25":"df.groupby(\"Genre\")[\"IMDB Score\"].nlargest(10)","076f170d":"top_15_ratings_by_genre = df.groupby(\"Genre\")[\"IMDB Score\"].mean().nlargest(15)\ntop_15_ratings_by_genre","99dea14e":"# top_10_ratings_by_genre = df.groupby('Genre')['IMDB Score'].mean().sort_values(ascending=False)[:10]\n# top_10_ratings_by_genre","4f65004c":"fig = px.bar(data_frame=top_15_ratings_by_genre, x=top_15_ratings_by_genre.index, y=top_15_ratings_by_genre.values, \n             labels={'y':'Average Rating Score', 'x':'Genre'})\n\nfig.show()","9feac6bc":"lowest_15_ratings_by_genre = df.groupby(\"Genre\")[\"IMDB Score\"].mean().nsmallest(15)\nlowest_15_ratings_by_genre","191aea77":"fig = px.bar(data_frame=lowest_15_ratings_by_genre, x=lowest_15_ratings_by_genre.index, y=lowest_15_ratings_by_genre.values, \n             labels={'y':'Average Rating Score', 'x':'Genre'})\n\nfig.show()","b61b11fa":"top_10_ratings = df[[\"IMDB Score\", \"Title\", \"Genre\", \"Year\", \"Language\"]].sort_values([\"IMDB Score\"], ascending=False)[:10]\ntop_10_ratings","e07725b7":"fig = px.scatter(top_10_ratings, y= 'Title', x='IMDB Score', hover_data = top_10_ratings[['Genre','Year','Language']], color='Genre', \n                 title = \"Top 10 High Rated Programs\")\n\nfig.show()","a874bee7":"lowest_10_ratings = df[[\"IMDB Score\", \"Title\", \"Genre\", \"Year\", \"Language\"]].sort_values([\"IMDB Score\"])[:10]\nlowest_10_ratings","add6b231":"fig = px.scatter(lowest_10_ratings, y= 'Title', x='IMDB Score', hover_data = lowest_10_ratings[['Genre','Year','Language']], color='Genre', \n                 title = \"Lowest 10 High Rated Programs\")\n\nfig.show()","f3ddd1ec":"### Top 10 Rating Movies","108c96e1":"It is obvious from the graph above that there is no significant relationship between runtime and IMDB score.\n","cd13f58e":"Let's read our csv dataset and have a look at basic information about it.","7cc92a94":"English is the most used language in the programs by landslide. Hindi and Spanish follows it.","4c10d8f5":"- Avergae rating is around 6.3 average. Max rating is 9 and minum one is 2.5.\n\n- Mean and median values are close to each other. Since median is bigger than mean score, we can expect left skewed distribution with several outliers on the sides.","4a903d32":"In total, we have 584 films with 6 attributes.","f77d2368":"- As we expected, we have left skewed distribution with multiple outliers are on the both side, but much more are on the left side-minimum side.\n- The longest movie is **Irishman** and the shorest movie is **Sol Levante**.","72039c9e":"With 27.22%. movies in Documentary genre are at the top followed by Drama genre.","5fa065da":"Top rating score is on the Animation-Christmas-Comedy-Adventure Genre followed by Musical\/short and Concert Film.","4179c9bf":"# INTRODUCTON","837f9199":"### Lowest 15 Ratings by Genre","d53b6eee":"- Each year number of programs in the Netflix increases.\n- Since the full data on the 2021 is not known, difference between 2020 and 2021 is normal.","5ccba0d6":"Lowest rating movies are from Heist film\/Thriller followed by Musical\/Wester\/Fantasy and Horror Anthology genres.","85999e71":"- Thanks for the dataset contibutor for this data.\n\n- It was a quite pleasure to share with you this detailed, beginner friendly EDA.\n\n- Have fun reading.","c5f970bb":"**Note:** If the **mean** is greater than the **median**, the distribution is **positively** skewed. If the **mean** is less than the **median**, the distribution is **negatively** skewed.","71da3ca4":" ### 2. Languages","850acedb":"### 6. Month","31af43fe":"In total, we have 115 different genre.","f2abea42":"Let's check the top 20 **Genre**.","fbce0fd1":"### 3. Runtime","5137e378":"It seems that we have black swan here (black swan is The black swan theory or theory of black swan events is a metaphor that describes an event that comes as a surprise, has a major effect). We have no missing value at all.","7f352b60":"Mor than half of the top rated movies come from Documentary genre.","89c45099":"Now, let see the **correlation between Runtime and IMDB Score**","fd39e834":"With the very above histogram, we confirmed that the distribution of **Runtime** is left (neatively) skewed.","1b384a5c":" ### 1. Genre","e858d176":"- We have at around 95 minutes runtime for the programs.\n- Based on the given descriptive info, we can expect outliers from both the maximum side and the minimum side.\n- Since mean score is lower than median score, we can expect left skewed distribution which means that we will see more runtime values on the minimum side.","49c4f513":"- First and foremost, let's import the required libraries.","3cabfe78":"Unlike the top 10 rated movies, lowest 10 rated movies come from every different genres.","7dc81ee1":"As we expected, we have left skewed distribution.","a330994a":"Although **Premiere** is tend to show date, it is object type. We need to convert it into datetime. Rest is fine.","e7bb6326":"- Friday has the maximum number of new releases.\n\n- Saturday and Sunday have the lowest number of releases.","a29bb725":"# ANALYSIS","ddc32fc0":"### 5. Year","275d907c":"In this study: \n- we are going to make Exploratory Data Analysis (EDA) with the Netflix original films dataset.\n- Study aims to be beginner friendly and give as much as possible explanation for each step on the way for beginners.\n- Study's dataset has top 584 Netflix original films on the different genre.\n- Each films has language, release time, runtime and IMDB Score.","010fd16c":"### Top 15 Ratings by Genre","c4f261b8":"### 7. Day","bf4611ab":"- October and April are the months which have the highest number of program releases.\n-During summer time the least number of movie is released.","5ec8df6b":"- **A Life on Our Planet** documentary got 9 maximum point in the list.\n\n- Minimum rating is **Enter the Anime**.\n\n- Interestingly both maximum and minimum rating programs are from documentary genre.","20e3ad73":"### 4. IMDB Score","4497bd15":"### Lowest 10 Rate Movies","47a94d20":"# OVERVIEW","970b9878":"It is better now. We can divide date into **year**, **month**, and **date** as well."}}