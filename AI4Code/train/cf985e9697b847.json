{"cell_type":{"b6799ea4":"code","0daa96e7":"code","5b005278":"code","0a44a250":"code","1bb91f73":"code","a268e9fd":"code","3f9a021d":"code","5f7fb24c":"code","7ab11fbc":"code","0e062e78":"code","923d9c99":"code","a98dfcc3":"code","b49afb4e":"code","8e4b93e9":"code","31db1d10":"code","7fdd34e7":"code","f33443a6":"code","27b26f94":"code","c1ef841a":"code","4f0eb091":"markdown","20820764":"markdown","e04fc771":"markdown","76a896b3":"markdown","0baeaea7":"markdown","8fd37872":"markdown","f1330111":"markdown","cb799274":"markdown","2766d9cb":"markdown","5a0d53fc":"markdown","5cfd6295":"markdown","b061a58b":"markdown","c2969c26":"markdown","cbdc6a4e":"markdown","c7f3b8db":"markdown","7f908673":"markdown","a05cdc28":"markdown","e632636f":"markdown","dea6402a":"markdown","27a3e6c4":"markdown"},"source":{"b6799ea4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nfrom sklearn.ensemble import RandomForestClassifier\nimport pandas as pd\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import accuracy_score\nfrom matplotlib import pyplot as plt\nfrom sklearn.metrics import confusion_matrix\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0daa96e7":"df = df = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ndf.head()","5b005278":"psgr_id = df[\"PassengerId\"]\npsgr_id.head()","0a44a250":"df = df.drop([\"PassengerId\",\"Name\",\"Ticket\",\"Cabin\",\"Embarked\",\"Fare\"], axis=\"columns\")\ndf.head()","1bb91f73":"df.isnull().sum()","a268e9fd":"df[\"Age\"] = df[\"Age\"].fillna(df[\"Age\"].mean())\ndf.isnull().sum()\n#Let's check again for null values","3f9a021d":"men = df.loc[df.Sex == 'male'][\"Survived\"]\nsurvive_rate_men = sum(men)\/len(men)\n\nprint(f\"{survive_rate_men} of men survived\")","5f7fb24c":"women = df.loc[df[\"Sex\"]==\"female\"][\"Survived\"]\nsurvive_rate_women = sum(women)\/len(women)\n\nprint(f\"{survive_rate_women} of women survived\")","7ab11fbc":"survive_list = [survive_rate_men,survive_rate_women]\nplt.pie(survive_list,labels=[\"rate_of_men_survived\",\"rate_of_women_survived\"], normalize=True,autopct=\"%.1f%%\",wedgeprops={\"edgecolor\":\"black\",\"linewidth\":2})\nplt.axis(\"equal\")\nplt.show()","0e062e78":"pclass3= df.loc[df.Pclass==3][\"Survived\"]\nsurvive_rate_by_pclass3 =  sum(pclass3)\/len(pclass3)\n\n\npclass2= df.loc[df.Pclass==2][\"Survived\"]\nsurvive_rate_by_pclass2 =  sum(pclass2)\/len(pclass2)\n\n\npclass1= df.loc[df.Pclass==1][\"Survived\"]\nsurvive_rate_by_pclass1 =  sum(pclass1)\/len(pclass1)\n\n\nsurvive_rate_by_pie = [survive_rate_by_pclass3,survive_rate_by_pclass2,survive_rate_by_pclass1]\n\nplt.figure(figsize=(8,8))\nplt.pie(survive_rate_by_pie,labels=[\"pclass=3\",\"pclass=2\",\"pclass=1\"],autopct=\"%.1f%%\")\nplt.title(\"Survival_rate\")\nplt.show()","923d9c99":"df[\"Sex\"] = pd.get_dummies(df[\"Sex\"])\ndf.head()","a98dfcc3":"x = df.drop([\"Survived\"],axis=\"columns\")\ny = df[\"Survived\"]","b49afb4e":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2)\nprint(\"x_train : \",x_train.shape)\nprint(\"x_test  : \",x_test.shape)\nprint(\"y_train : \",y_train.shape)\nprint(\"y_test  : \",y_test.shape)","8e4b93e9":"model = RandomForestClassifier(n_estimators=100)\nmodel.fit(x_train,y_train)\n#Print 5 score values of model\ncross_val_score(RandomForestClassifier(n_estimators=100),x_train,y_train)","31db1d10":"pred = model.predict(x_test)\naccuracy_score(y_test,pred) #above 81 percent #may be it will increase or decrease","7fdd34e7":"test = pd.read_csv(\"..\/input\/titanic\/test.csv\")\npsgr_id2 = test[\"PassengerId\"]\ntest = test.drop([\"PassengerId\",\"Name\",\"Ticket\",\"Fare\",\"Cabin\",\"Embarked\"], axis=\"columns\")\ntest[\"Age\"] = test[\"Age\"].fillna(df[\"Age\"].mean())\ntest[\"Sex\"] = pd.get_dummies(df[\"Sex\"])\ntest.head()","f33443a6":"print(model.predict(test[:20]))","27b26f94":"conf_matrix = confusion_matrix(y_test,pred)\nconf_matrix","c1ef841a":"submission = pd.DataFrame({\"PassengerId\":psgr_id2,\"Survived\":model.predict(test)})\nsubmission.to_csv('submission.csv',index=0)\nprint(\"completed\")","4f0eb091":"# Upvote if you like my work Thanks","20820764":"# Accuracy score of model","e04fc771":"# Let's relate pclass with survival_rate","76a896b3":"# Making submission file","0baeaea7":"# Building a model","8fd37872":"# Reading Train Data and name it as df","f1330111":"# Visualize the survive_rate of men and women in pie chart","cb799274":"# Let's make the input and target variables as x and y","2766d9cb":"# Splitting  x and y into training and testing data","5a0d53fc":"# Checking null values for all columns in dataframe","5cfd6295":"# Let's predict survival values from test data using model","b061a58b":"# Applying PassengerId to a variable","c2969c26":"# Dropping all unwanted columns from dataframe","cbdc6a4e":"# Importing all required libraries","c7f3b8db":"**So we have no null values**","7f908673":"# Let's see performance of our model using confusion matrix","a05cdc28":"# So we have 177 null values in Age column let's fill it with mean values","e632636f":"# Let's change string to integers in df[\"Sex\"]","dea6402a":"# Reading test_data to make new predictions","27a3e6c4":"# let us explore patterns for women and men survived"}}