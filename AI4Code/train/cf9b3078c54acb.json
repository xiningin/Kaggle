{"cell_type":{"51b246f1":"code","55e5b9c6":"code","87e291ae":"code","1e4caa8f":"code","eb94560f":"code","18197bf6":"code","a8d19d1e":"code","2433c529":"code","270bfc2f":"markdown","4c005c5e":"markdown","d557c58a":"markdown","9df1f010":"markdown","2d10494f":"markdown"},"source":{"51b246f1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objs as pltgo\nimport statistics\nfrom statistics import mean\n\nimport sklearn\nfrom sklearn.cluster import KMeans\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","55e5b9c6":"emission_data = pd.read_csv('\/kaggle\/input\/emission-data-cleaned\/emission_data_cleaned.csv')\nemission_data.info()\nemission_data.head(5)","87e291ae":"world_pollution_2017 = emission_data[['Country','2017']]\nworld_pollution_2017.head(5)","1e4caa8f":"iso_alpha_codes = pd.read_csv('\/kaggle\/input\/\/iso-codes\/iso_alpha.csv')\niso_alpha_codes.head(5)\nworld_pollution_2017_iso = pd.merge(left=world_pollution_2017,right=iso_alpha_codes,left_on='Country',right_on='Name',how='left')\nworld_pollution_2017_cleaned = world_pollution_2017_iso.dropna(subset=['Name'])\nworld_pollution_2017_cleaned.nlargest(7, '2017')","eb94560f":"fig_map_2018 = pltgo.Figure(data=pltgo.Choropleth(locations=world_pollution_2017_cleaned['Country'],z=world_pollution_2017_cleaned['2017'],locationmode='country names',colorscale='Rainbow',colorbar_title='Tonnes'))\nfig_map_2018.update_layout(title_text='Emission of Green House Gases 2017 (In Tonnes)')\nfig_map_2018.show()","18197bf6":"india_emission = emission_data[emission_data.Country=='India'].iloc[:,248:269].values.tolist()\nindia_emission_array = []\nfor col in india_emission:\n    for ele in col:\n        india_emission_array.append(ele)\n\n        \nus_emission = emission_data[emission_data.Country=='United States'].iloc[:,248:269].values.tolist()\nus_emission_array = []\nfor col in us_emission:\n    for ele in col:\n        us_emission_array.append(ele)\n\neu_emission = emission_data[emission_data.Country=='EU-28'].iloc[:,248:269].values.tolist()\neu_emission_array = []\nfor col in eu_emission:\n    for ele in col:\n        eu_emission_array.append(ele)\n\nrussia_emission = emission_data[emission_data.Country=='Russian Federation'].iloc[:,248:269].values.tolist()\nrussia_emission_array = []\nfor col in russia_emission:\n    for ele in col:\n        russia_emission_array.append(ele)\n        \njapan_emission = emission_data[emission_data.Country=='Japan'].iloc[:,248:269].values.tolist()\njapan_emission_array = []\nfor col in japan_emission:\n    for ele in col:\n        japan_emission_array.append(ele)\n\nchina_emission = emission_data[emission_data.Country=='China'].iloc[:,248:269].values.tolist()\nchina_emission_array = []\nfor col in china_emission:\n    for ele in col:\n        china_emission_array.append(ele)\n\nrow_emission = emission_data[~emission_data.Country.isin(['India','Japan','United States','EU-28','Russia'])].iloc[:,248:269].values.tolist()\nrow_emission_array = []\nfor col in row_emission:\n    for ele in col:\n        row_emission_array.append(ele)","a8d19d1e":"world_emission_time_series_1998_2017_data = {'Year':range(1998,2018), 'India_Emission':india_emission_array, 'US_Emission':us_emission_array, 'Russia_emission':russia_emission_array,\n                                            'Japan_Emission':japan_emission_array, 'EU_emission':eu_emission_array, 'China_emission':china_emission_array}\nprint(len(range(1998,2018)),len(us_emission_array),len(russia_emission_array),len(japan_emission_array),len(china_emission_array),len(eu_emission_array),len(india_emission_array))\nworld_emission_time_series_1998_2017 = pd.DataFrame(world_emission_time_series_1998_2017_data)","2433c529":"fig_time_series = pltgo.Figure([pltgo.Scatter(x=world_emission_time_series_1998_2017.Year,y=world_emission_time_series_1998_2017.India_Emission,name='India',mode='lines+markers')])\nfig_time_series.add_trace(pltgo.Scatter(x=world_emission_time_series_1998_2017.Year,y=world_emission_time_series_1998_2017.US_Emission,name='US',mode='lines+markers'))\nfig_time_series.add_trace(pltgo.Scatter(x=world_emission_time_series_1998_2017.Year,y=world_emission_time_series_1998_2017.Japan_Emission,name='Japan',mode='lines+markers'))\nfig_time_series.add_trace(pltgo.Scatter(x=world_emission_time_series_1998_2017.Year,y=world_emission_time_series_1998_2017.Russia_emission,name='Russia',mode='lines+markers'))\nfig_time_series.add_trace(pltgo.Scatter(x=world_emission_time_series_1998_2017.Year,y=world_emission_time_series_1998_2017.EU_emission,name='EU',mode='lines+markers'))\nfig_time_series.add_trace(pltgo.Scatter(x=world_emission_time_series_1998_2017.Year,y=world_emission_time_series_1998_2017.China_emission,name='China',mode='lines+markers'))\nfig_time_series.update_layout(title_text='Green House Gas Emission 1998-2017')\nfig_time_series.show()","270bfc2f":"ISO codes dataset had been obtained and merged with the emission data for representation in chloropleth maps. The top regions that had registered the highest emissions have been identified. We can identify that US, China, Russian Federation, UK, Japan and India - are the countries with the highest emissions.","4c005c5e":"Arrays for different countries with the emission data for the last 20 years (1998-2017) have been determined to build a dataframe with the corresponding data.","d557c58a":"The emission dataset had been cleaned up to standardise the country names to merge with ISO codes to represent the countries in Plotly chloropleth maps.","9df1f010":"The emission data for the year of 2017 has been represented in a Choloropleth map to visualise the emission data across countries. We can verify the above identified countries and their corresponding emission data in the below Choloropleth map.","2d10494f":"The line graphs for the countries identified has been constructed to find the growth of emission across years. We can see that China has shown an exponential growth in emissions in the last 20 years compared to the other top contributors."}}