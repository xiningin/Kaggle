{"cell_type":{"94a57043":"code","b18cae16":"code","f73c1dc4":"code","1f20e899":"code","1912cda4":"code","ac05feff":"code","61d92ee1":"code","8b99fcde":"code","196a6b7b":"code","75743c7c":"code","459a193a":"code","d4424709":"code","e3509894":"code","29eae317":"code","98151b91":"code","ade1213f":"code","b43ea504":"code","86b7183d":"code","c3447e0f":"code","482cb2e4":"code","feb080cd":"markdown","a7c90997":"markdown","5715b527":"markdown","63f0c0e0":"markdown"},"source":{"94a57043":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b18cae16":"from fastai.vision import *","f73c1dc4":"tfms = get_transforms(max_rotate=25)","1f20e899":"len(tfms)","1912cda4":"def get_ex(): return open_image('..\/input\/silhouettes-of-human-posture\/standing\/1080.jpg')","ac05feff":"def plots_f(rows, cols, width, height, **kwargs):\n    [get_ex().apply_tfms(tfms[0], **kwargs).show(ax=ax) for i,ax in enumerate(plt.subplots(\n        rows,cols,figsize=(width,height))[1].flatten())]","61d92ee1":"plots_f(2, 4, 12, 6, size=224)","8b99fcde":"tfms = zoom_crop(scale=(0.75,2), do_rand=True)","196a6b7b":"# random zoom and crop\nplots_f(2, 4, 12, 6, size=224)","75743c7c":"# random resize and crop\ntfms = [rand_resize_crop(224)]\nplots_f(2, 4, 12, 6, size=224)","459a193a":"# passing a probability to a function\ntfm = [rotate(degrees=30, p=0.5)]\nfig, axs = plt.subplots(1,5,figsize=(12,4))\nfor ax in axs:\n    img = get_ex().apply_tfms(tfm)\n    title = 'Done' if tfm[0].do_run else 'Not done'\n    img.show(ax=ax, title=title)","d4424709":"tfm = [rotate(degrees=(-30,30))]\nfig, axs = plt.subplots(1,5,figsize=(12,4))\nfor ax in axs:\n    img = get_ex().apply_tfms(tfm)\n    title = f\"deg={tfm[0].resolved['degrees']:.1f}\"\n    img.show(ax=ax, title=title)","e3509894":"# brightness\nfig, axs = plt.subplots(1,5,figsize=(14,8))\nfor change, ax in zip(np.linspace(0.1,0.9,5), axs):\n    brightness(get_ex(), change).show(ax=ax, title=f'change={change:.1f}')","29eae317":"# contrast\nfig, axs = plt.subplots(1,5,figsize=(12,4))\nfor scale, ax in zip(np.exp(np.linspace(log(0.5),log(2),5)), axs):\n    contrast(get_ex(), scale).show(ax=ax, title=f'scale={scale:.2f}')","98151b91":"# dihedral\nfig, axs = plt.subplots(2,2,figsize=(12,8))\nfor k, ax in enumerate(axs.flatten()):\n    dihedral(get_ex(), k).show(ax=ax, title=f'k={k}')\nplt.tight_layout()","ade1213f":"fig, axs = plt.subplots(1,2,figsize=(10,8))\nget_ex().show(ax=axs[0], title=f'no flip')\nflip_lr(get_ex()).show(ax=axs[1], title=f'flip')","b43ea504":"# jitter\nfig, axs = plt.subplots(1,5,figsize=(20,8))\nfor magnitude, ax in zip(np.linspace(-0.05,0.05,5), axs):\n    tfm = jitter(magnitude=magnitude)\n    get_ex().jitter(magnitude).show(ax=ax, title=f'magnitude={magnitude:.2f}')","86b7183d":"# squish\nfig, axs = plt.subplots(1,5,figsize=(12,4))\nfor scale, ax in zip(np.linspace(0.66,1.33,5), axs):\n    get_ex().squish(scale=scale).show(ax=ax, title=f'scale={scale:.2f}')","c3447e0f":"# tilt\nfig, axs = plt.subplots(2,4,figsize=(12,8))\nfor i in range(4):\n    get_ex().tilt(i, 0.4).show(ax=axs[0,i], title=f'direction={i}, fwd')\n    get_ex().tilt(i, -0.4).show(ax=axs[1,i], title=f'direction={i}, bwd')","482cb2e4":"# symm warp\ntfm = symmetric_warp(magnitude=(-0.2,0.2))\n_, axs = plt.subplots(2,4,figsize=(12,6))\nfor ax in axs.flatten():\n    img = get_ex().apply_tfms(tfm, padding_mode='zeros')\n    img.show(ax=ax)","feb080cd":"#Thanks to DipamVasani https:\/\/www.kaggle.com\/dipam7\/data-augmentation-in-fastai","a7c90997":"Das War's, Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke ","5715b527":"#Codes from DipamVasani https:\/\/www.kaggle.com\/dipam7\/data-augmentation-in-fastai","63f0c0e0":"![](http:\/\/www.trysordy.wales\/wp-content\/uploads\/2016\/08\/Rocky-2-2.jpg)http:\/\/www.trysordy.wales\/?product=rocky-balboa-quote"}}