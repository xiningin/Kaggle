{"cell_type":{"455561c3":"code","48e95a91":"code","b21fe87f":"code","57f9986d":"code","9e6adc4d":"code","95d75bbe":"code","1c6ed4f9":"code","42209833":"code","7a6cfdf7":"code","5521a021":"code","59c8f6ae":"code","e16e32d9":"code","98c2ff46":"code","0fa65f1f":"code","fd496ecc":"code","37f7b86f":"code","1c605a3b":"code","7741dde2":"code","8379076d":"markdown","4d46eb80":"markdown"},"source":{"455561c3":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","48e95a91":"df = pd.read_csv('..\/input\/customer-churn-prediction-with-notebook\/Churn History Dataset.csv')","b21fe87f":"df.head()","57f9986d":"df.info()","9e6adc4d":"df['Churn Indicator'].unique()","95d75bbe":"plt.figure(figsize = (10,10))\na = df[df['Churn Indicator'] == ' True.']\nb = df[df['Churn Indicator'] == ' False.']\n\nsns.barplot(x = b['international plan'].unique(),y = b['international plan'].value_counts(),\n                color=\"black\" ,label = 'churn->False')\nsns.barplot(x = a['international plan'].unique(),y = a['international plan'].value_counts(),\n                color=\"orange\",label = 'churn->True')\nplt.legend()\nplt.title('INTERNATIONAL PLAN')\nplt.show()","1c6ed4f9":"plt.figure(figsize = (10,10))\na = df[df['Churn Indicator'] == ' True.']\nb = df[df['Churn Indicator'] == ' False.']\n\nsns.barplot(x = b['voice mail plan'].unique(),y = b['voice mail plan'].value_counts(),\n                color=\"black\" ,label = 'churn->False')\nsns.barplot(x = a['voice mail plan'].unique(),y = a['voice mail plan'].value_counts(),\n                color=\"orange\",label = 'churn->True')\nplt.legend()\nplt.title('voice mail plan')\nplt.show()","42209833":"plt.figure(figsize = (20,20))\na = df[df['Churn Indicator'] == ' True.']\nb = df[df['Churn Indicator'] == ' False.']\nsns.countplot(b['state'],color = 'black',label = 'churn->True')\nsns.countplot(a['state'],color = 'blue',label = 'churn->False')\nplt.legend()\nplt.title('States')\nplt.show()\n","7a6cfdf7":"plt.figure(figsize = (20,20))\na = df[df['Churn Indicator'] == ' True.']\nb = df[df['Churn Indicator'] == ' False.']\nsns.countplot(b['area code'],color = 'black',label = 'churn->True')\nsns.countplot(a['area code'],color = 'blue',label = 'churn->False')\nplt.legend()\nplt.title('area code')\nplt.show()\n","5521a021":"plt.figure(figsize = (20,20))\na = df[df['Churn Indicator'] == ' True.']\nb = df[df['Churn Indicator'] == ' False.']\nplt.hist(b['number vmail messages'],bins = 10,color = 'black',edgecolor = 'red',label = 'churn->True')\nplt.hist(a['number vmail messages'],bins = 10,color = 'blue',edgecolor = 'red',label = 'churn->False')\nplt.legend()\nplt.title('number vmail messages')\nplt.show()","59c8f6ae":"df.drop(['voice mail plan','state','international plan','phone number'],axis = 1,inplace = True)","e16e32d9":"df_true = df[df['Churn Indicator'] == ' True.']\ndf_false = df[df['Churn Indicator'] == ' False.']\ndf_true.drop('Churn Indicator',axis = 1,inplace = True)\ndf_false.drop('Churn Indicator',axis = 1,inplace = True)","98c2ff46":"columns = df_true.columns","0fa65f1f":"'''from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\ndf_true = scaler.fit_transform(df_true)\ndf_false = scaler.fit_transform(df_false)\n'''","fd496ecc":"#df_true = pd.DataFrame(df_true,columns = columns)\n#df_false = pd.DataFrame(df_false,columns = columns)","37f7b86f":"plt.figure(figsize = (10,10))\nsns.kdeplot(df_true['total day calls'],shade =True,color = 'red',label = 'churn->True')\nsns.kdeplot(df_false['total day calls'],shade =True,color = 'blue',label = 'churn->False')\nplt.legend()\nplt.title('total day calls distribution')\nplt.show()","1c605a3b":"plt.figure(figsize = (15,10))\nsns.kdeplot(df_true['total night calls'],shade =True,color = 'red',label = 'churn->True')\nsns.kdeplot(df_false['total night calls'],shade =True,color = 'blue',label = 'churn->False')\nplt.legend()\nplt.title('total night calls distribution')\nplt.show()","7741dde2":"plt.figure(figsize = (15,10))\nsns.kdeplot(df_true['total intl calls'],shade =True,color = 'red',label = 'churn->True')\nsns.kdeplot(df_false['total intl calls'],shade =True,color = 'blue',label = 'churn->False')\nplt.legend()\nplt.title('total intl calls distribution')\nplt.show()\n","8379076d":"# Customer Churn Prediction\n* This notebook is just to give an idea how you can approach things when somewhere you want to do analysis stuff.\n* In second Customer_curn_modelling notebook their is starting approach for how to approach for these tabular problems in     terms of model building.\n* There is no much explanation in the notebook but if you some how found this notebook than you must not be new to kaggle     and datascience you will understand it through code only:)\n\n- Please put you notebook in notebook section It will benefit you as it will boost your confidence in uploading the stuffs.\n\n# All the best","4d46eb80":"conclusion\n1 if international plan is no than ratio of churn to not churn is more ie. prospect will be probably churn if he did not have international plan in compare to if international plan is yes\n2 states Id, Ar and Tn have high rates of customer churn\n3 area code 415 is the area with high churn rate point focus on this\n"}}