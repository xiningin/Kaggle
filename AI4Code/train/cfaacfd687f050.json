{"cell_type":{"d48d2f3a":"code","f100413c":"code","c1306c6c":"code","0d7e6ba9":"code","4cdd02b4":"code","ed1e8689":"code","fefe65b1":"code","683f1950":"code","3bbb35f4":"code","972c4a4a":"code","df2220d4":"code","83c0f845":"markdown","8312048b":"markdown","7bc74ca8":"markdown"},"source":{"d48d2f3a":"import numpy as np\nimport pandas as pd","f100413c":"comments = pd.read_csv(\n    '..\/input\/perspectiveapi-scores-for-severity-ranking\/perspectiveapi-scores.csv')","c1306c6c":"comments.head()","0d7e6ba9":"validation = pd.read_csv(\n    '..\/input\/jigsaw-toxic-severity-rating\/validation_data.csv')","4cdd02b4":"validation_annotations = validation.set_index('more_toxic').join(\n    comments[['comment_id', 'text']].set_index('text'), how='inner').set_index('less_toxic').join(\n    comments[['comment_id', 'text']].set_index('text'),\n    lsuffix='_more', rsuffix='_less', how='inner').reset_index(drop=True)","ed1e8689":"validation_annotations.head()","fefe65b1":"best_score = 0\nbest_w = 0\nfor _ in range(40):\n    w = np.random.rand(6)\n    w = w \/ np.linalg.norm(w)\n    scores =  { c[1].comment_id: sum(w * c[1][2:8]) for c in comments.iterrows() }\n    percent_correct = 100.0 * (\n        sum(validation_annotations['comment_id_more'].map(scores).gt(\n            validation_annotations['comment_id_less'].map(scores)))\n        \/ len(validation_annotations))\n    print(percent_correct)\n    if percent_correct > best_score:\n        best_score = percent_correct\n        best_w = w","683f1950":"best_w","3bbb35f4":"best_score","972c4a4a":"comments['score'] = [sum(w * c[1][2:8]) for c in comments.iterrows()]","df2220d4":"comments[['comment_id', 'score']].to_csv('submission.csv', index=False)","83c0f845":"Extract the subset of the validation data that overlaps with the comments to be scored.\nNote that there are many pairs of validation comments that are not part of the competition,\nbut they might be useful if we were training a model from scratch rather then just\nusing scores from an existing model.","8312048b":"Perform a random search to find the best weighting of perspective scores using the overlapping validation data.","7bc74ca8":"The comments_to_score file has been scored offline using the PerspectiveAPI service."}}