{"cell_type":{"3bbd790c":"code","9f898637":"code","229c38e0":"code","39e389e9":"code","7ee7f780":"code","6e1e6fd2":"code","8316bb3c":"code","8318068b":"code","d47f760b":"code","b00e4cab":"code","46d59617":"code","9550f1b6":"code","2f2179c2":"code","0ea70911":"code","6fc3f908":"code","a3ba07e6":"code","335b7fd6":"code","275f7267":"code","254ea18c":"code","7ebb1db0":"code","e210fa44":"code","643769c9":"code","9120c741":"code","d58d1ef9":"code","e670b4d8":"code","a0c15354":"code","0a932339":"code","980fbe2e":"code","f4b9ed97":"markdown","eab4926e":"markdown","1996176e":"markdown","9f6e77a7":"markdown","7a2ba999":"markdown","41c088f1":"markdown","514720c2":"markdown","c7adfb03":"markdown","4811e392":"markdown","ff0a41d3":"markdown","cfbd5e04":"markdown","0792668e":"markdown","223478f2":"markdown","893976dc":"markdown","da6f9d26":"markdown","29b79826":"markdown","94cd4113":"markdown","5fc1e4fe":"markdown","adcc7bd5":"markdown","ffb5e63d":"markdown","53ade241":"markdown","4d67f616":"markdown","be0a0832":"markdown","c37a7f5f":"markdown","6c1b1e24":"markdown","d27ae986":"markdown","50b88138":"markdown","e9e6c5a2":"markdown","2d7628f8":"markdown","a303ffe2":"markdown","f7d49ff7":"markdown","d5f2950a":"markdown","6ad2b2e7":"markdown","a9611bc4":"markdown","30773485":"markdown","16a117bc":"markdown","1c073420":"markdown","41281118":"markdown","f9d81ba3":"markdown","95cc7d10":"markdown","678cd5a7":"markdown","e2c4e322":"markdown","2b5bbc65":"markdown","56226ac9":"markdown","b8f91827":"markdown","a2c47dad":"markdown","aa4b0761":"markdown","58d71cf5":"markdown","3e5360ca":"markdown","5ddf1b3e":"markdown","9615e046":"markdown","9c53963c":"markdown","7037159e":"markdown","bbd954ad":"markdown","3324bbb3":"markdown","aa8ea0a4":"markdown","1502b938":"markdown","80504e7f":"markdown","c3a19548":"markdown","c72eaf55":"markdown"},"source":{"3bbd790c":"import os\nimport gc\nimport sys\nimport json\nimport glob\nimport random\nfrom pathlib import Path\n\nimport cv2\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nimport itertools\nfrom tqdm import tqdm\n\nfrom imgaug import augmenters as iaa\nfrom sklearn.model_selection import train_test_split\n\nimport warnings \nwarnings.filterwarnings(\"ignore\")","9f898637":"DATA_DIR = Path('\/kaggle\/input')\nROOT_DIR = Path('\/kaggle\/working')\n\nNUM_CATS = 46 # \u0e43\u0e19\u0e17\u0e35\u0e48\u0e19\u0e35\u0e49\u0e08\u0e30\u0e17\u0e33 classification \u0e40\u0e09\u0e1e\u0e32\u0e30\u0e2a\u0e48\u0e27\u0e19\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 category \u0e0b\u0e36\u0e48\u0e07\u0e21\u0e35\u0e08\u0e33\u0e19\u0e27\u0e19\u0e17\u0e31\u0e49\u0e07\u0e2a\u0e34\u0e49\u0e19 46\nIMAGE_SIZE = 512 # \u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 input \u0e40\u0e02\u0e49\u0e32 Mask R-CNN \u0e08\u0e30\u0e16\u0e39\u0e01\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e02\u0e19\u0e32\u0e14 512x512 \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a\u0e02\u0e19\u0e32\u0e14\u0e02\u0e2d\u0e07 mask \u0e17\u0e35\u0e48\u0e2a\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e33\u0e15\u0e2d\u0e1a","229c38e0":"!git clone https:\/\/www.github.com\/matterport\/Mask_RCNN.git\nos.chdir('Mask_RCNN')\n\n!rm -rf .git\n!rm -rf images assets","39e389e9":"sys.path.append(ROOT_DIR\/'Mask_RCNN')\nfrom mrcnn.config import Config\nfrom mrcnn import utils\nimport mrcnn.model as modellib\nfrom mrcnn import visualize\nfrom mrcnn.model import log","7ee7f780":"!wget --quiet https:\/\/github.com\/matterport\/Mask_RCNN\/releases\/download\/v2.0\/mask_rcnn_coco.h5\n!ls -lh mask_rcnn_coco.h5\n\nCOCO_WEIGHTS_PATH = 'mask_rcnn_coco.h5'","6e1e6fd2":"class FashionConfig(Config):\n    NAME = \"fashion\"\n    NUM_CLASSES = NUM_CATS + 1 # +1 \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e04\u0e25\u0e32\u0e2a background\n    \n    GPU_COUNT = 1\n    IMAGES_PER_GPU = 4\n    \n    BACKBONE = 'resnet50'\n    \n    IMAGE_MIN_DIM = IMAGE_SIZE\n    IMAGE_MAX_DIM = IMAGE_SIZE    \n    IMAGE_RESIZE_MODE = 'none'\n    \n    RPN_ANCHOR_SCALES = (16, 32, 64, 128, 256)\n    TRAIN_ROIS_PER_IMAGE = 100\n    \n    # \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01 Kaggle \u0e08\u0e33\u0e01\u0e31\u0e14\u0e40\u0e27\u0e25\u0e32\u0e43\u0e19\u0e01\u0e32\u0e23\u0e23\u0e31\u0e19 kernel \u0e44\u0e27\u0e49 9 \u0e0a\u0e31\u0e48\u0e27\u0e42\u0e21\u0e07 \n    # \u0e40\u0e23\u0e32\u0e08\u0e36\u0e07\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e04\u0e48\u0e32 STEPS_PER_EPOCH \u0e41\u0e25\u0e30 VALIDATION_STEPS \u0e43\u0e2b\u0e49\u0e23\u0e31\u0e19\u0e17\u0e31\u0e19\u0e43\u0e19\u0e40\u0e27\u0e25\u0e32\u0e19\u0e35\u0e49\u0e04\u0e23\u0e31\u0e1a\n    STEPS_PER_EPOCH = 5500\n    VALIDATION_STEPS = 100\n    \nconfig = FashionConfig()\nconfig.display()","8316bb3c":"with open(DATA_DIR\/\"label_descriptions.json\") as f:\n    label_descriptions = json.load(f)\n\nlabel_names = [x['name'] for x in label_descriptions['categories']]","8318068b":"segment_df = pd.read_csv(DATA_DIR\/\"train.csv\")\nsegment_df['CategoryId'] = segment_df['ClassId'].str.split('_').str[0]\n\nprint(\"Total segments: \", len(segment_df))\nsegment_df.head()","d47f760b":"image_df = segment_df.groupby('ImageId')['EncodedPixels', 'CategoryId'].agg(lambda x: list(x))\nsize_df = segment_df.groupby('ImageId')['Height', 'Width'].mean()\nimage_df = image_df.join(size_df, on='ImageId')\n\nprint(\"Total images: \", len(image_df))\nimage_df.head()","b00e4cab":"def resize_image(image_path):\n    img = cv2.imread(image_path)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    img = cv2.resize(img, (IMAGE_SIZE, IMAGE_SIZE), interpolation=cv2.INTER_AREA)  \n    return img","46d59617":"class FashionDataset(utils.Dataset):\n\n    def __init__(self, df):\n        super().__init__(self)\n        \n        # Add classes\n        for i, name in enumerate(label_names):\n            self.add_class(\"fashion\", i+1, name)\n        \n        # Add images \n        for i, row in df.iterrows():\n            self.add_image(\"fashion\", \n                           image_id=row.name, \n                           path=str(DATA_DIR\/'train'\/row.name), \n                           labels=row['CategoryId'],\n                           annotations=row['EncodedPixels'], \n                           height=row['Height'], width=row['Width'])\n\n    def image_reference(self, image_id):\n        info = self.image_info[image_id]\n        return info['path'], [label_names[int(x)] for x in info['labels']]\n    \n    def load_image(self, image_id):\n        return resize_image(self.image_info[image_id]['path'])\n\n    def load_mask(self, image_id):\n        info = self.image_info[image_id]\n                \n        mask = np.zeros((IMAGE_SIZE, IMAGE_SIZE, len(info['annotations'])), dtype=np.uint8)\n        labels = []\n        \n        for m, (annotation, label) in enumerate(zip(info['annotations'], info['labels'])):\n            sub_mask = np.full(info['height']*info['width'], 0, dtype=np.uint8)\n            annotation = [int(x) for x in annotation.split(' ')]\n            \n            for i, start_pixel in enumerate(annotation[::2]):\n                sub_mask[start_pixel: start_pixel+annotation[2*i+1]] = 1\n\n            sub_mask = sub_mask.reshape((info['height'], info['width']), order='F')\n            sub_mask = cv2.resize(sub_mask, (IMAGE_SIZE, IMAGE_SIZE), interpolation=cv2.INTER_NEAREST)\n            \n            mask[:, :, m] = sub_mask\n            labels.append(int(label)+1)\n            \n        return mask, np.array(labels)","9550f1b6":"dataset = FashionDataset(image_df)\ndataset.prepare()\n\nfor i in range(6):\n    image_id = random.choice(dataset.image_ids)\n    print(dataset.image_reference(image_id))\n    \n    image = dataset.load_image(image_id)\n    mask, class_ids = dataset.load_mask(image_id)\n    visualize.display_top_masks(image, mask, class_ids, dataset.class_names, limit=4)","2f2179c2":"train_df, valid_df = train_test_split(image_df, test_size=0.2, random_state=42)\n\ntrain_dataset = FashionDataset(train_df)\ntrain_dataset.prepare()\n\nvalid_dataset = FashionDataset(valid_df)\nvalid_dataset.prepare()","0ea70911":"train_segments = np.concatenate(train_df['CategoryId'].values).astype(int)\nprint(\"Total train images: \", len(train_df))\nprint(\"Total train segments: \", len(train_segments))\n\nplt.figure(figsize=(12, 3))\nvalues, counts = np.unique(train_segments, return_counts=True)\nplt.bar(values, counts)\nplt.xticks(values, label_names, rotation='vertical')\nplt.show()\n\nvalid_segments = np.concatenate(valid_df['CategoryId'].values).astype(int)\nprint(\"Total validation images: \", len(valid_df))\nprint(\"Total validation segments: \", len(valid_segments))\n\nplt.figure(figsize=(12, 3))\nvalues, counts = np.unique(valid_segments, return_counts=True)\nplt.bar(values, counts)\nplt.xticks(values, label_names, rotation='vertical')\nplt.show()","6fc3f908":"model = modellib.MaskRCNN(mode='training', config=config, model_dir=ROOT_DIR)\n\nmodel.load_weights(COCO_WEIGHTS_PATH, by_name=True, exclude=[\n    'mrcnn_class_logits', 'mrcnn_bbox_fc', 'mrcnn_bbox', 'mrcnn_mask'])","a3ba07e6":"augmentation = iaa.Sequential([\n    iaa.Fliplr(0.5)\n])","335b7fd6":"%%time\nmodel.train(train_dataset, valid_dataset,\n            learning_rate=2e-3,\n            epochs=1,\n            layers='heads',\n            augmentation=None)\n\nhistory = model.keras_model.history.history","275f7267":"%%time\nmodel.train(train_dataset, valid_dataset,\n            learning_rate=1e-3,\n            epochs=3,\n            layers='all',\n            augmentation=augmentation)\n\nnew_history = model.keras_model.history.history\nfor k in new_history: history[k] = history[k] + new_history[k]","254ea18c":"epochs = range(3)\n\nplt.figure(figsize=(18, 6))\n\nplt.subplot(131)\nplt.plot(epochs, history['loss'], label=\"train loss\")\nplt.plot(epochs, history['val_loss'], label=\"valid loss\")\nplt.legend()\nplt.subplot(132)\nplt.plot(epochs, history['mrcnn_class_loss'], label=\"train class loss\")\nplt.plot(epochs, history['val_mrcnn_class_loss'], label=\"valid class loss\")\nplt.legend()\nplt.subplot(133)\nplt.plot(epochs, history['mrcnn_mask_loss'], label=\"train mask loss\")\nplt.plot(epochs, history['val_mrcnn_mask_loss'], label=\"valid mask loss\")\nplt.legend()\n\nplt.show()","7ebb1db0":"best_epoch = np.argmin(history[\"val_loss\"]) + 1\nprint(\"Best epoch: \", best_epoch)\nprint(\"Valid loss: \", history[\"val_loss\"][best_epoch-1])","e210fa44":"class InferenceConfig(FashionConfig):\n    GPU_COUNT = 1\n    IMAGES_PER_GPU = 1\n\ninference_config = InferenceConfig()\n\nglob_list = glob.glob(f'\/kaggle\/working\/fashion*\/mask_rcnn_fashion_{best_epoch:04d}.h5')\nmodel_path = glob_list[0] if glob_list else ''\n\nmodel = modellib.MaskRCNN(mode='inference', \n                          config=inference_config,\n                          model_dir=ROOT_DIR)\n\nassert model_path != '', \"Provide path to trained weights\"\nprint(\"Loading weights from \", model_path)\nmodel.load_weights(model_path, by_name=True)","643769c9":"sample_df = pd.read_csv(DATA_DIR\/\"sample_submission.csv\")\nsample_df.head()","9120c741":"def to_rle(bits):\n    rle = []\n    pos = 1\n    for bit, group in itertools.groupby(bits):\n        group_list = list(group)\n        if bit:\n            rle.extend([pos, len(group_list)])\n        pos += len(group_list)\n    return rle","d58d1ef9":"def trim_masks(masks, rois, class_ids):\n    class_pos = np.argsort(class_ids)\n    class_rle = to_rle(np.sort(class_ids))\n    \n    pos = 0\n    for i, _ in enumerate(class_rle[::2]):\n        previous_pos = pos\n        pos += class_rle[2*i+1]\n        if pos-previous_pos == 1:\n            continue \n        mask_indices = class_pos[previous_pos:pos]\n        \n        union_mask = np.zeros(masks.shape[:-1], dtype=bool)\n        for m in mask_indices:\n            masks[:, :, m] = np.logical_and(masks[:, :, m], np.logical_not(union_mask))\n            union_mask = np.logical_or(masks[:, :, m], union_mask)\n        for m in mask_indices:\n            mask_pos = np.where(masks[:, :, m]==True)\n            if np.any(mask_pos):\n                y1, x1 = np.min(mask_pos, axis=1)\n                y2, x2 = np.max(mask_pos, axis=1)\n                rois[m, :] = [y1, x1, y2, x2]\n            \n    return masks, rois","e670b4d8":"%%time\nsub_list = []\nmissing_count = 0\nfor i, row in tqdm(sample_df.iterrows(), total=len(sample_df)):\n    image = resize_image(str(DATA_DIR\/'test'\/row['ImageId']))\n    result = model.detect([image])[0]\n    if result['masks'].size > 0:\n        masks, _ = trim_masks(result['masks'], result['rois'], result['class_ids'])\n        for m in range(masks.shape[-1]):\n            mask = masks[:, :, m].ravel(order='F')\n            rle = to_rle(mask)\n            label = result['class_ids'][m] - 1\n            sub_list.append([row['ImageId'], ' '.join(list(map(str, rle))), label])\n    else:\n        # The system does not allow missing ids, this is an easy way to fill them\n        sub_list.append([row['ImageId'], '1 1', 23])\n        missing_count += 1","a0c15354":"submission_df = pd.DataFrame(sub_list, columns=sample_df.columns.values)\nprint(\"Total image results: \", submission_df['ImageId'].nunique())\nprint(\"Missing images: \", missing_count)\nsubmission_df.head()","0a932339":"submission_df.to_csv(\"submission.csv\", index=False)","980fbe2e":"for i in range(9):\n    image_id = sample_df.sample()['ImageId'].values[0]\n    image_path = str(DATA_DIR\/'test'\/image_id)\n    \n    img = cv2.imread(image_path)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    \n    result = model.detect([resize_image(image_path)])\n    r = result[0]\n    \n    if r['masks'].size > 0:\n        masks = np.zeros((img.shape[0], img.shape[1], r['masks'].shape[-1]), dtype=np.uint8)\n        for m in range(r['masks'].shape[-1]):\n            masks[:, :, m] = cv2.resize(r['masks'][:, :, m].astype('uint8'), \n                                        (img.shape[1], img.shape[0]), interpolation=cv2.INTER_NEAREST)\n        \n        y_scale = img.shape[0]\/IMAGE_SIZE\n        x_scale = img.shape[1]\/IMAGE_SIZE\n        rois = (r['rois'] * [y_scale, x_scale, y_scale, x_scale]).astype(int)\n        \n        masks, rois = trim_masks(masks, rois, r['class_ids'])\n    else:\n        masks, rois = r['masks'], r['rois']\n        \n    visualize.display_instances(img, rois, masks, r['class_ids'], \n                                ['bg']+label_names, r['scores'],\n                                title=image_id, figsize=(12, 12))","f4b9ed97":"<img src=\"https:\/\/i.imgur.com\/zsla1eq.png\" style=\"height:300px\">\n<div style=\"text-align: right\"><font size=\"2\">(\u0e20\u0e32\u0e1e\u0e08\u0e32\u0e01[\u0e2a\u0e44\u0e25\u0e14\u0e4c\u0e04\u0e2d\u0e23\u0e4c\u0e2a CS231n](http:\/\/cs231n.stanford.edu\/slides\/2019\/cs231n_2019_lecture12.pdf))<\/font><\/div>","eab4926e":"* __\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07 (second stage)__ \u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e14\u0e49\u0e27\u0e22\u0e01\u0e23\u0e30\u0e1a\u0e27\u0e19\u0e01\u0e32\u0e23\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e14\u0e31\u0e07\u0e19\u0e35\u0e49\u0e04\u0e23\u0e31\u0e1a\n\n    * __RoI Pool__ \u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e17\u0e33 RoI \u0e02\u0e2d\u0e07 feature map \u0e17\u0e35\u0e48\u0e21\u0e35\u0e02\u0e19\u0e32\u0e14\u0e41\u0e15\u0e01\u0e15\u0e48\u0e32\u0e07\u0e01\u0e31\u0e19 \u0e43\u0e2b\u0e49\u0e21\u0e35\u0e02\u0e19\u0e32\u0e14\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e1b\u0e47\u0e19 input \u0e43\u0e2b\u0e49\u0e01\u0e31\u0e1a neural network \u0e43\u0e19\u0e0a\u0e31\u0e49\u0e19\u0e15\u0e48\u0e2d\u0e44\u0e1b \u0e42\u0e14\u0e22 RoI Pool \u0e08\u0e30\u0e43\u0e0a\u0e49 max pooling \u0e40\u0e25\u0e22 \u0e41\u0e15\u0e48 Mask R-CNN \u0e08\u0e30\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e19\u0e35\u0e49\u0e40\u0e1b\u0e47\u0e19 RoI Align \u0e0b\u0e36\u0e48\u0e07\u0e08\u0e30\u0e01\u0e25\u0e48\u0e32\u0e27\u0e16\u0e36\u0e07\u0e43\u0e19\u0e2b\u0e31\u0e27\u0e02\u0e49\u0e2d\u0e16\u0e31\u0e14\u0e44\u0e1b\u0e04\u0e23\u0e31\u0e1a\n    \n    * \u0e2a\u0e48\u0e27\u0e19\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e2b\u0e31\u0e27 classification \u0e17\u0e35\u0e48\u0e17\u0e33\u0e01\u0e32\u0e23\u0e08\u0e33\u0e41\u0e19\u0e01\u0e27\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19 object \u0e04\u0e25\u0e32\u0e2a\u0e2d\u0e30\u0e44\u0e23 (\u0e2b\u0e31\u0e27 class) \u0e41\u0e25\u0e30\u0e2b\u0e31\u0e27 regression \u0e17\u0e35\u0e48\u0e17\u0e33\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e31\u0e1a\u0e02\u0e2d\u0e1a\u0e40\u0e02\u0e15\u0e02\u0e2d\u0e07 RoI \u0e43\u0e2b\u0e49\u0e41\u0e21\u0e48\u0e19\u0e22\u0e33\u0e02\u0e36\u0e49\u0e19 (\u0e2b\u0e31\u0e27 box)\n    \n    ","1996176e":"<img src=\"https:\/\/i.imgur.com\/slKHttx.png\"  style=\"height:400px\">\n<div style=\"text-align: right\"><font size=\"2\">(\u0e20\u0e32\u0e1e\u0e08\u0e32\u0e01[\u0e2a\u0e44\u0e25\u0e14\u0e4c\u0e04\u0e2d\u0e23\u0e4c\u0e2a CS231n](http:\/\/cs231n.stanford.edu\/slides\/2019\/cs231n_2019_lecture12.pdf))<\/font><\/div>","9f6e77a7":"\u0e43\u0e19\u0e2a\u0e48\u0e27\u0e19\u0e19\u0e35\u0e49\u0e01\u0e47\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e23\u0e31\u0e19\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e17\u0e33\u0e19\u0e32\u0e22\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e04\u0e23\u0e31\u0e1a","7a2ba999":"\u0e01\u0e48\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e08\u0e30\u0e40\u0e17\u0e23\u0e19 \u0e01\u0e47\u0e08\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23\u0e41\u0e1a\u0e48\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e40\u0e1b\u0e47\u0e19 training set \u0e01\u0e31\u0e1a validation set","41c088f1":"\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e44\u0e14\u0e49\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e41\u0e25\u0e49\u0e27 \u0e01\u0e47\u0e08\u0e30\u0e19\u0e33\u0e21\u0e32\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e44\u0e1f\u0e25\u0e4c\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e2a\u0e48\u0e07\u0e15\u0e23\u0e27\u0e08","514720c2":"### 1.1.5 Mask Head\n\n\u0e19\u0e2d\u0e01\u0e08\u0e32\u0e01 RoI Align \u0e41\u0e25\u0e49\u0e27 \u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e17\u0e33\u0e43\u0e2b\u0e49 Mask R-CNN \u0e15\u0e48\u0e32\u0e07\u0e08\u0e32\u0e01 Faster R-CNN \u0e01\u0e47\u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e2b\u0e31\u0e27 mask \u0e40\u0e02\u0e49\u0e32\u0e21\u0e32 \u0e08\u0e32\u0e01\u0e2b\u0e31\u0e27 class \u0e41\u0e25\u0e30\u0e2b\u0e31\u0e27 box \u0e17\u0e35\u0e48\u0e21\u0e35\u0e2d\u0e22\u0e39\u0e48\u0e40\u0e14\u0e34\u0e21 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e17\u0e33\u0e2b\u0e19\u0e49\u0e32\u0e17\u0e35\u0e48\u0e17\u0e33\u0e19\u0e32\u0e22 mask \u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e20\u0e32\u0e22\u0e43\u0e19 RoI \u0e02\u0e2d\u0e07\u0e17\u0e38\u0e01\u0e04\u0e25\u0e32\u0e2a \u0e14\u0e31\u0e07\u0e23\u0e39\u0e1b\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07 \u0e42\u0e14\u0e22\u0e43\u0e19\u0e23\u0e39\u0e1b\u0e19\u0e35\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07\u0e2b\u0e31\u0e27 mask \u0e21\u0e35\u0e02\u0e19\u0e32\u0e14 28x28 \u0e41\u0e25\u0e30\u0e21\u0e35 80 \u0e04\u0e25\u0e32\u0e2a\n\n<img src=\"https:\/\/i.imgur.com\/LQvDjFk.png\" style=\"height:250px\">\n<div style=\"text-align: right\"><font size=\"2\">(\u0e20\u0e32\u0e1e\u0e08\u0e32\u0e01[\u0e2a\u0e44\u0e25\u0e14\u0e4c\u0e02\u0e2d\u0e07 Kaiming He](http:\/\/kaiminghe.com\/iccv17maskrcnn\/maskrcnn_iccv2017_oral_kaiminghe.pdf))<\/font><\/div>","c7adfb03":"\u0e43\u0e19\u0e17\u0e35\u0e48\u0e19\u0e35\u0e49 \u0e40\u0e23\u0e32\u0e44\u0e14\u0e49\u0e40\u0e25\u0e37\u0e2d\u0e01 Mask R-CNN \u0e02\u0e2d\u0e07\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 Matterport \u0e21\u0e32\u0e43\u0e0a\u0e49\u0e04\u0e23\u0e31\u0e1a \u0e01\u0e47\u0e08\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23\u0e14\u0e32\u0e27\u0e19\u0e4c\u0e42\u0e2b\u0e25\u0e14 library \u0e15\u0e31\u0e27\u0e19\u0e35\u0e49\u0e21\u0e32 \u0e23\u0e27\u0e21\u0e17\u0e31\u0e49\u0e07\u0e14\u0e32\u0e27\u0e19\u0e4c\u0e42\u0e2b\u0e25\u0e14 pretrained weight \u0e17\u0e35\u0e48\u0e21\u0e35\u0e43\u0e2b\u0e49\u0e14\u0e49\u0e27\u0e22","4811e392":"## 2.5 Train","ff0a41d3":"\u0e2a\u0e27\u0e31\u0e2a\u0e14\u0e35\u0e04\u0e23\u0e31\u0e1a \u0e02\u0e2d\u0e15\u0e49\u0e2d\u0e19\u0e23\u0e31\u0e1a\u0e17\u0e38\u0e01\u0e17\u0e48\u0e32\u0e19\u0e40\u0e02\u0e49\u0e32\u0e2a\u0e39\u0e48\u0e2d\u0e35\u0e01 workshop \u0e19\u0e36\u0e07 \u0e02\u0e2d\u0e07 [ThAIKeras](https:\/\/thaikeras.com\/) \u0e43\u0e19 workshop \u0e19\u0e35\u0e49 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e21\u0e32\u0e25\u0e2d\u0e07\u0e17\u0e33 image segmentation \u0e01\u0e31\u0e19 \u0e1a\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 [iMaterialist - Fashion 2019](https:\/\/github.com\/visipedia\/imat_comp) \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e43\u0e19[\u0e01\u0e32\u0e23\u0e41\u0e02\u0e48\u0e07\u0e02\u0e31\u0e19](https:\/\/www.kaggle.com\/c\/imaterialist-fashion-2019-FGVC6)\u0e02\u0e2d\u0e07 Kaggle \u0e17\u0e35\u0e48\u0e40\u0e1e\u0e34\u0e48\u0e07\u0e08\u0e30\u0e08\u0e1a\u0e44\u0e1b\u0e44\u0e21\u0e48\u0e19\u0e32\u0e19\u0e19\u0e35\u0e49\u0e40\u0e2d\u0e07\u0e04\u0e23\u0e31\u0e1a","cfbd5e04":"<img src=\"https:\/\/i.imgur.com\/2UA5zwG.png\" style=\"height:250px\">\n<div style=\"text-align: right\"><font size=\"2\">(\u0e20\u0e32\u0e1e\u0e08\u0e32\u0e01[\u0e2a\u0e44\u0e25\u0e14\u0e4c\u0e04\u0e2d\u0e23\u0e4c\u0e2a CS231n](http:\/\/cs231n.stanford.edu\/slides\/2019\/cs231n_2019_lecture12.pdf))<\/font><\/div>","0792668e":"<img src=\"https:\/\/i.imgur.com\/lrssrix.png\">\n<div style=\"text-align: right\"><font size=\"2\">(\u0e20\u0e32\u0e1e\u0e08\u0e32\u0e01[\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 iMaterialist - Fashion 2019](https:\/\/github.com\/visipedia\/imat_comp))<\/font><\/div>","223478f2":"\u0e44\u0e1f\u0e25\u0e4c\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2b\u0e25\u0e31\u0e01\u0e01\u0e47\u0e04\u0e37\u0e2d train.csv \u0e0b\u0e36\u0e48\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30\u0e41\u0e16\u0e27\u0e04\u0e37\u0e2d\u0e41\u0e15\u0e48\u0e25\u0e30 mask \u0e41\u0e25\u0e30\u0e21\u0e35\u0e04\u0e2d\u0e25\u0e31\u0e21\u0e19\u0e4c\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e14\u0e31\u0e07\u0e19\u0e35\u0e49\n- __ImageId__ \u0e1a\u0e2d\u0e01\u0e0a\u0e37\u0e48\u0e2d\u0e44\u0e1f\u0e25\u0e4c\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e\n- __EncodedPixels__ \u0e1a\u0e2d\u0e01\u0e27\u0e48\u0e32 mask \u0e19\u0e35\u0e49 \u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e14\u0e49\u0e27\u0e22 pixel \u0e43\u0e14\u0e1a\u0e49\u0e32\u0e07 \u0e42\u0e14\u0e22\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e19\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a run-length encoding\n- __Height__ \u0e1a\u0e2d\u0e01\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e39\u0e07\u0e02\u0e2d\u0e07\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e\n- __Width__ \u0e1a\u0e2d\u0e01\u0e04\u0e27\u0e32\u0e21\u0e01\u0e27\u0e49\u0e32\u0e07\u0e02\u0e2d\u0e07\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e\n- __ClassId__ \u0e1a\u0e2d\u0e01\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e07\u0e01\u0e32\u0e22\u0e02\u0e2d\u0e07 mask \u0e19\u0e35\u0e49\n\n\u0e08\u0e30\u0e02\u0e2d\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22 __EncodedPixels__ \u0e41\u0e25\u0e30 __ClassId__ \u0e40\u0e1e\u0e34\u0e48\u0e21\u0e40\u0e15\u0e34\u0e21\u0e2d\u0e35\u0e01\u0e2b\u0e19\u0e48\u0e2d\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a\n- __EncodedPixels__ \u0e40\u0e1b\u0e47\u0e19 run-length encoding \u0e04\u0e37\u0e2d\u0e08\u0e32\u0e01\u0e20\u0e32\u0e1e\u0e2a\u0e2d\u0e07\u0e21\u0e34\u0e15\u0e34 \u0e08\u0e30\u0e04\u0e25\u0e35\u0e48\u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e21\u0e34\u0e15\u0e34\u0e40\u0e14\u0e35\u0e22\u0e27 \u0e42\u0e14\u0e22\u0e44\u0e25\u0e48\u0e08\u0e32\u0e01\u0e1a\u0e19\u0e25\u0e07\u0e25\u0e48\u0e32\u0e07\u0e01\u0e48\u0e2d\u0e19 \u0e41\u0e25\u0e49\u0e27\u0e16\u0e49\u0e32 mask \u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e14\u0e49\u0e27\u0e22 pixel \u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48 10 \u0e16\u0e36\u0e07 14 (\u0e04\u0e37\u0e2d\u0e08\u0e32\u0e01\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48 10 \u0e21\u0e35 pixel \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 mask \u0e2d\u0e22\u0e39\u0e48\u0e15\u0e34\u0e14\u0e01\u0e31\u0e19 4) \u0e41\u0e25\u0e30 23 \u0e16\u0e36\u0e07 29 (\u0e04\u0e37\u0e2d\u0e08\u0e32\u0e01\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48 23 \u0e21\u0e35 pixel \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 mask \u0e2d\u0e22\u0e39\u0e48\u0e15\u0e34\u0e14\u0e01\u0e31\u0e19 7) \u0e01\u0e47\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e04\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19 10 4 23 7\n- __ClassId__ \u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e14\u0e49\u0e32\u0e19\u0e2b\u0e19\u0e49\u0e32\u0e2a\u0e38\u0e14\u0e04\u0e37\u0e2d\u0e2b\u0e21\u0e32\u0e22\u0e40\u0e25\u0e02 category \u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19\u0e08\u0e30\u0e04\u0e31\u0e48\u0e19\u0e14\u0e49\u0e27\u0e22\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e2b\u0e21\u0e32\u0e22 '\\_' \u0e41\u0e25\u0e49\u0e27\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e16\u0e31\u0e14\u0e46 \u0e44\u0e1b \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e2b\u0e21\u0e32\u0e22\u0e40\u0e25\u0e02 attribute \u0e42\u0e14\u0e22\u0e43\u0e19\u0e17\u0e35\u0e48\u0e19\u0e35\u0e49\u0e08\u0e30\u0e17\u0e33\u0e40\u0e09\u0e1e\u0e32\u0e30 category \u0e2d\u0e22\u0e48\u0e32\u0e07\u0e40\u0e14\u0e35\u0e22\u0e27\u0e04\u0e23\u0e31\u0e1a","893976dc":"\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e16\u0e31\u0e14\u0e21\u0e32\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e23\u0e27\u0e21\u0e41\u0e16\u0e27\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19\u0e40\u0e02\u0e49\u0e32\u0e14\u0e49\u0e27\u0e22\u0e01\u0e31\u0e19","da6f9d26":"***","29b79826":"\u0e19\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e19\u0e35\u0e49 \u0e23\u0e30\u0e1a\u0e1a\u0e15\u0e23\u0e27\u0e08\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e22\u0e31\u0e07\u0e44\u0e21\u0e48\u0e2d\u0e19\u0e38\u0e0d\u0e32\u0e15\u0e43\u0e2b\u0e49 pixel \u0e19\u0e36\u0e07 \u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19 mask \u0e2b\u0e25\u0e32\u0e22\u0e2d\u0e31\u0e19\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e25\u0e32\u0e2a\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19 \u0e08\u0e36\u0e07\u0e15\u0e49\u0e2d\u0e07\u0e21\u0e35\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19 trim_masks \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e43\u0e0a\u0e49\u0e41\u0e01\u0e49\u0e01\u0e23\u0e13\u0e35\u0e19\u0e35\u0e49","94cd4113":"\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\u0e19\u0e35\u0e49 \u0e25\u0e2d\u0e07\u0e21\u0e32\u0e14\u0e39\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e01\u0e31\u0e19\u0e0b\u0e31\u0e01\u0e2b\u0e19\u0e48\u0e2d\u0e22\u0e04\u0e23\u0e31\u0e1a \u0e08\u0e30\u0e40\u0e2b\u0e47\u0e19\u0e27\u0e48\u0e32\u0e44\u0e21\u0e48\u0e40\u0e25\u0e27\u0e40\u0e25\u0e22\u0e17\u0e35\u0e40\u0e14\u0e35\u0e22\u0e27 \u0e41\u0e21\u0e49\u0e08\u0e30\u0e22\u0e31\u0e07\u0e21\u0e35\u0e17\u0e35\u0e48\u0e1c\u0e34\u0e14\u0e2d\u0e22\u0e39\u0e48\u0e01\u0e47\u0e15\u0e32\u0e21","5fc1e4fe":"library \u0e19\u0e35\u0e49 \u0e23\u0e2d\u0e07\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e17\u0e33 augmentation \u0e08\u0e32\u0e01 [imgaug](https:\/\/github.com\/aleju\/imgaug) \u0e14\u0e49\u0e27\u0e22 \u0e43\u0e19\u0e17\u0e35\u0e48\u0e19\u0e35\u0e49\u0e44\u0e14\u0e49\u0e40\u0e1e\u0e34\u0e48\u0e21 augmentation \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 horizontal flip \u0e40\u0e02\u0e49\u0e32\u0e44\u0e1b","adcc7bd5":"<img src=\"https:\/\/i.imgur.com\/4Blooki.png\" style=\"height:250px\">\n<div style=\"text-align: right\"><font size=\"2\">(\u0e20\u0e32\u0e1e\u0e08\u0e32\u0e01[\u0e2a\u0e44\u0e25\u0e14\u0e4c\u0e04\u0e2d\u0e23\u0e4c\u0e2a CS231n](http:\/\/cs231n.stanford.edu\/slides\/2019\/cs231n_2019_lecture12.pdf))<\/font><\/div>","ffb5e63d":"## 2.3 Set Config","53ade241":"<img src=\"https:\/\/i.imgur.com\/Z24CDIV.png\" style=\"height:200px\">\n<div style=\"text-align: right\"><font size=\"2\">(\u0e20\u0e32\u0e1e\u0e08\u0e32\u0e01[\u0e2a\u0e44\u0e25\u0e14\u0e4c\u0e02\u0e2d\u0e07 Kaiming He](http:\/\/kaiminghe.com\/iccv17maskrcnn\/maskrcnn_iccv2017_oral_kaiminghe.pdf))<\/font><\/div>","4d67f616":"\u0e01\u0e32\u0e23\u0e17\u0e33 object detection \u0e02\u0e2d\u0e07\u0e15\u0e23\u0e30\u0e01\u0e39\u0e25 R-CNN \u0e08\u0e30\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 two-stage detection \u0e04\u0e37\u0e2d\u0e21\u0e35\u0e01\u0e32\u0e23\u0e41\u0e1a\u0e48\u0e07\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e21\u0e27\u0e25\u0e1c\u0e25\u0e40\u0e1b\u0e47\u0e19\u0e2a\u0e2d\u0e07\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19 \u0e14\u0e31\u0e07\u0e19\u0e35\u0e49\u0e04\u0e23\u0e31\u0e1a\n\n* __\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e41\u0e23\u0e01 (first stage)__ \u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e02\u0e2d\u0e1a\u0e40\u0e02\u0e15 (region \u0e2b\u0e23\u0e37\u0e2d bounding box) \u0e17\u0e35\u0e48\u0e19\u0e48\u0e32\u0e08\u0e30\u0e21\u0e35\u0e27\u0e31\u0e15\u0e16\u0e38\u0e2d\u0e22\u0e39\u0e48 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e08\u0e30\u0e2a\u0e48\u0e07\u0e40\u0e02\u0e49\u0e32\u0e2a\u0e39\u0e48\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07\u0e15\u0e48\u0e2d\u0e44\u0e1b \u0e43\u0e19\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e19\u0e35\u0e49\u0e08\u0e30\u0e21\u0e35\u0e2a\u0e48\u0e27\u0e19\u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e17\u0e35\u0e48\u0e2a\u0e33\u0e04\u0e31\u0e0d\u0e04\u0e37\u0e2d\n\n    * __backbone network__ \u0e40\u0e1b\u0e47\u0e19 neural network \u0e17\u0e35\u0e48\u0e23\u0e31\u0e1a\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e input \u0e41\u0e25\u0e30\u0e1b\u0e23\u0e30\u0e21\u0e27\u0e25\u0e1c\u0e25\u0e08\u0e19\u0e44\u0e14\u0e49\u0e40\u0e1b\u0e47\u0e19 feature map \u0e2d\u0e2d\u0e01\u0e21\u0e32 \u0e42\u0e14\u0e22 backbone network \u0e08\u0e30\u0e43\u0e0a\u0e49 architecture \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e07\u0e32\u0e19 computer vision \u0e41\u0e1a\u0e1a\u0e43\u0e14\u0e01\u0e47\u0e44\u0e14\u0e49 \u0e40\u0e0a\u0e48\u0e19 [ResNet](http:\/\/www.arxiv.org\/abs\/1512.03385) \u0e2b\u0e23\u0e37\u0e2d [ResNeXt](https:\/\/arxiv.org\/abs\/1611.05431) \u0e2b\u0e23\u0e37\u0e2d\u0e16\u0e49\u0e32\u0e43\u0e0a\u0e49 [Feature Pyramid](https:\/\/arxiv.org\/abs\/1612.03144) \u0e23\u0e48\u0e27\u0e21\u0e14\u0e49\u0e27\u0e22 \u0e01\u0e47\u0e08\u0e30\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e44\u0e14\u0e49\u0e04\u0e27\u0e32\u0e21\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e35\u0e48\u0e2a\u0e39\u0e07\u0e02\u0e36\u0e49\u0e19\n    \n    * __region proposal network__ \u0e40\u0e1b\u0e47\u0e19 neural network \u0e17\u0e35\u0e48\u0e17\u0e33 classification \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e08\u0e33\u0e41\u0e19\u0e01\u0e27\u0e48\u0e32\u0e02\u0e2d\u0e1a\u0e40\u0e02\u0e15\u0e44\u0e2b\u0e19\u0e17\u0e35\u0e48\u0e19\u0e48\u0e32\u0e08\u0e30\u0e21\u0e35\u0e27\u0e31\u0e15\u0e16\u0e38\u0e2d\u0e22\u0e39\u0e48 \u0e23\u0e27\u0e21\u0e17\u0e31\u0e49\u0e07\u0e21\u0e35\u0e01\u0e32\u0e23\u0e17\u0e33 regression \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e17\u0e35\u0e48\u0e08\u0e30\u0e44\u0e14\u0e49\u0e02\u0e2d\u0e1a\u0e40\u0e02\u0e15\u0e17\u0e35\u0e48\u0e41\u0e21\u0e48\u0e19\u0e22\u0e33\u0e02\u0e36\u0e49\u0e19 \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a region proposal network \u0e19\u0e35\u0e49\u0e40\u0e2d\u0e07 \u0e40\u0e1b\u0e47\u0e19\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e17\u0e33\u0e43\u0e2b\u0e49 Faster R-CNN \u0e41\u0e15\u0e01\u0e15\u0e48\u0e32\u0e07\u0e08\u0e32\u0e01 R-CNN \u0e17\u0e35\u0e48\u0e1c\u0e48\u0e32\u0e19\u0e21\u0e32 \u0e0b\u0e36\u0e48\u0e07\u0e43\u0e0a\u0e49 region proposal algorithm \u0e20\u0e32\u0e22\u0e19\u0e2d\u0e01 \u0e2d\u0e22\u0e48\u0e32\u0e07 [Selective Search](http:\/\/www.huppelen.nl\/publications\/selectiveSearchDraft.pdf) \u0e40\u0e02\u0e49\u0e32\u0e21\u0e32\u0e0a\u0e48\u0e27\u0e22\n    \n    \u0e02\u0e2d\u0e1a\u0e40\u0e02\u0e15\u0e17\u0e35\u0e48 region proposal network \u0e19\u0e33\u0e21\u0e32\u0e1e\u0e34\u0e08\u0e32\u0e23\u0e13\u0e32 (\u0e2d\u0e32\u0e08\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 anchor box) \u0e04\u0e37\u0e2d\u0e01\u0e25\u0e48\u0e2d\u0e07\u0e2a\u0e35\u0e48\u0e40\u0e2b\u0e25\u0e35\u0e48\u0e22\u0e21\u0e2b\u0e25\u0e32\u0e22\u0e46 \u0e02\u0e19\u0e32\u0e14 \u0e17\u0e35\u0e48\u0e04\u0e23\u0e2d\u0e1a\u0e04\u0e25\u0e38\u0e21 feature map \u0e43\u0e19\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e14\u0e31\u0e07\u0e40\u0e0a\u0e48\u0e19\u0e23\u0e39\u0e1b\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07\u0e19\u0e35\u0e49\u0e41\u0e2a\u0e14\u0e07\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19\u0e02\u0e2d\u0e07\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e41\u0e23\u0e01 \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e23\u0e39\u0e1b\u0e41\u0e21\u0e27\u0e40\u0e2b\u0e21\u0e35\u0e22\u0e27\u0e02\u0e19\u0e32\u0e14 640x480 \u0e1c\u0e48\u0e32\u0e19 CNN \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 backbone network \u0e40\u0e02\u0e49\u0e32\u0e21\u0e32 \u0e08\u0e30\u0e44\u0e14\u0e49 feature map \u0e02\u0e19\u0e32\u0e14 20x15 \u0e41\u0e25\u0e30\u0e21\u0e35\u0e08\u0e33\u0e19\u0e27\u0e19 channel \u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a 512 \n    \n    \u0e01\u0e33\u0e2b\u0e19\u0e14\u0e43\u0e2b\u0e49\u0e41\u0e15\u0e48\u0e25\u0e30\u0e08\u0e38\u0e14\u0e02\u0e2d\u0e07 feature map \u0e21\u0e35 anchor box \u0e08\u0e33\u0e19\u0e27\u0e19 K \u0e02\u0e19\u0e32\u0e14 \u0e08\u0e30\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32\u0e21\u0e35\u0e08\u0e33\u0e19\u0e27\u0e19 anchor box \u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e1e\u0e34\u0e08\u0e32\u0e23\u0e13\u0e32\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a Kx20x15 \u0e41\u0e25\u0e30\u0e43\u0e19\u0e08\u0e33\u0e19\u0e27\u0e19 anchor box \u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e19\u0e35\u0e49 \u0e43\u0e19\u0e2a\u0e48\u0e27\u0e19\u0e02\u0e2d\u0e07 region proposal network \u0e01\u0e47\u0e08\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e02\u0e2d\u0e1a\u0e40\u0e02\u0e15\u0e17\u0e35\u0e48\u0e19\u0e48\u0e32\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19 object \u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e21\u0e32\u0e08\u0e33\u0e19\u0e27\u0e19\u0e19\u0e36\u0e07 \u0e40\u0e0a\u0e48\u0e19 300 \u0e02\u0e2d\u0e1a\u0e40\u0e02\u0e15 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2a\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19 region proposal \u0e2b\u0e23\u0e37\u0e2d RoI (Region of Interest) \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e04\u0e23\u0e31\u0e1a\n    \n","be0a0832":"\u0e0b\u0e36\u0e48\u0e07\u0e01\u0e48\u0e2d\u0e19\u0e2b\u0e19\u0e49\u0e32\u0e17\u0e35\u0e48 Mask R-CNN \u0e08\u0e30\u0e16\u0e37\u0e2d\u0e01\u0e33\u0e40\u0e19\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e21\u0e32 \u0e07\u0e32\u0e19\u0e14\u0e49\u0e32\u0e19 object detection \u0e08\u0e30\u0e21\u0e35\u0e42\u0e21\u0e40\u0e14\u0e25 [Faster R-CNN](https:\/\/arxiv.org\/abs\/1506.01497) \u0e0b\u0e36\u0e48\u0e07\u0e43\u0e0a\u0e49\u0e17\u0e33\u0e07\u0e32\u0e19\u0e19\u0e35\u0e49\u0e44\u0e14\u0e49\u0e14\u0e35 \u0e2a\u0e48\u0e27\u0e19\u0e07\u0e32\u0e19\u0e14\u0e49\u0e32\u0e19 semantic segmentation \u0e01\u0e47\u0e08\u0e30\u0e21\u0e35\u0e42\u0e21\u0e40\u0e14\u0e25 [FCN](https:\/\/arxiv.org\/abs\/1411.4038) (Fully Convolutional Network) \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e17\u0e33\u0e07\u0e32\u0e19\u0e19\u0e35\u0e49\u0e44\u0e14\u0e49\u0e14\u0e35\u0e40\u0e0a\u0e48\u0e19\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19 \u0e42\u0e21\u0e40\u0e14\u0e25 Mask R-CNN \u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e23\u0e27\u0e21\u0e17\u0e31\u0e49\u0e07 Faster R-CNN \u0e41\u0e25\u0e30 FCN \u0e40\u0e02\u0e49\u0e32\u0e44\u0e27\u0e49\u0e14\u0e49\u0e27\u0e22\u0e01\u0e31\u0e19 \u0e2b\u0e23\u0e37\u0e2d\u0e2d\u0e32\u0e08\u0e08\u0e30\u0e21\u0e2d\u0e07\u0e27\u0e48\u0e32 Mask R-CNN \u0e43\u0e0a\u0e49 Faster R-CNN \u0e40\u0e1b\u0e47\u0e19\u0e1e\u0e37\u0e49\u0e19\u0e10\u0e32\u0e19 \u0e41\u0e25\u0e30\u0e19\u0e33 FCN \u0e21\u0e32\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e40\u0e15\u0e34\u0e21\u0e01\u0e47\u0e44\u0e14\u0e49 \u0e14\u0e31\u0e07\u0e23\u0e39\u0e1b\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07\u0e19\u0e35\u0e49\u0e04\u0e23\u0e31\u0e1a","c37a7f5f":"\u0e2d\u0e31\u0e19\u0e19\u0e35\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e1b\u0e23\u0e31\u0e1a\u0e02\u0e19\u0e32\u0e14\u0e20\u0e32\u0e1e","6c1b1e24":"***","d27ae986":"\u0e43\u0e19\u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19\u0e21\u0e35 library \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a Mask R-CNN \u0e43\u0e2b\u0e49\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e43\u0e0a\u0e49\u0e21\u0e32\u0e01\u0e21\u0e32\u0e22 \u0e40\u0e0a\u0e48\u0e19 \n* __[torchvision 0.3](https:\/\/pytorch.org\/blog\/torchvision03\/)__ \u0e0b\u0e36\u0e48\u0e07 torchvision \u0e40\u0e27\u0e2d\u0e23\u0e4c\u0e0a\u0e31\u0e19\u0e19\u0e35\u0e49 \u0e01\u0e47\u0e21\u0e35\u0e42\u0e21\u0e40\u0e14\u0e25 Mask R-CNN \u0e21\u0e32\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e44\u0e14\u0e49\n* __[maskrcnn-benchmark](https:\/\/github.com\/facebookresearch\/maskrcnn-benchmark)__ \u0e40\u0e1b\u0e47\u0e19 library \u0e17\u0e35\u0e48\u0e1e\u0e31\u0e12\u0e19\u0e32\u0e42\u0e14\u0e22\u0e17\u0e35\u0e21 Facebook Research\n* __[mmdetection](https:\/\/github.com\/open-mmlab\/mmdetection)__ \u0e40\u0e1b\u0e47\u0e19 library \u0e17\u0e35\u0e48\u0e1e\u0e31\u0e12\u0e19\u0e32\u0e42\u0e14\u0e22\u0e17\u0e35\u0e21\u0e17\u0e35\u0e48\u0e0a\u0e19\u0e30\u0e01\u0e32\u0e23\u0e41\u0e02\u0e48\u0e07\u0e02\u0e31\u0e19 [COCO Detection 2018 challenge](http:\/\/cocodataset.org\/#detection-leaderboard)\n* __[Mask R-CNN \u0e02\u0e2d\u0e07\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 Matterport](https:\/\/github.com\/matterport\/Mask_RCNN)__\n\n\u0e42\u0e14\u0e22\u0e2a\u0e32\u0e21 library \u0e41\u0e23\u0e01\u0e44\u0e14\u0e49\u0e43\u0e0a\u0e49 PyTorch \u0e43\u0e19\u0e01\u0e32\u0e23\u0e17\u0e33 \u0e2a\u0e48\u0e27\u0e19 library \u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19 Keras \u0e01\u0e31\u0e1a TensorFlow \u0e04\u0e23\u0e31\u0e1a","50b88138":"### 1.2.1 \u0e41\u0e19\u0e30\u0e19\u0e33\u0e01\u0e32\u0e23\u0e41\u0e02\u0e48\u0e07\u0e02\u0e31\u0e19","e9e6c5a2":"\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\u0e01\u0e47\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e19\u0e33\u0e42\u0e21\u0e40\u0e14\u0e25\u0e17\u0e35\u0e48\u0e40\u0e17\u0e23\u0e19\u0e44\u0e27\u0e49\u0e21\u0e32\u0e43\u0e0a\u0e49\u0e17\u0e33\u0e19\u0e32\u0e22 test data \u0e42\u0e14\u0e22\u0e40\u0e23\u0e34\u0e48\u0e21\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e40\u0e0b\u0e47\u0e15\u0e04\u0e48\u0e32 config \u0e41\u0e25\u0e49\u0e27\u0e42\u0e2b\u0e25\u0e14\u0e42\u0e21\u0e40\u0e14\u0e25\u0e17\u0e35\u0e48\u0e40\u0e17\u0e23\u0e19\u0e44\u0e27\u0e49\u0e02\u0e36\u0e49\u0e19\u0e21\u0e32","2d7628f8":"### 1.1.1 \u0e07\u0e32\u0e19\u0e14\u0e49\u0e32\u0e19\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e43\u0e19\u0e17\u0e32\u0e07 computer vision","a303ffe2":"\u0e42\u0e21\u0e40\u0e14\u0e25 Mask R-CNN \u0e08\u0e30\u0e21\u0e35 hyperparameter \u0e43\u0e2b\u0e49\u0e1b\u0e23\u0e31\u0e1a\u0e44\u0e14\u0e49\u0e21\u0e32\u0e01 \u0e43\u0e19\u0e17\u0e35\u0e48\u0e19\u0e35\u0e49\u0e44\u0e14\u0e49\u0e17\u0e33\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e31\u0e1a\u0e41\u0e04\u0e48\u0e1a\u0e32\u0e07\u0e15\u0e31\u0e27 \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a hyperparameter \u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14 \u0e17\u0e48\u0e32\u0e19\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e14\u0e39\u0e44\u0e14\u0e49[\u0e17\u0e35\u0e48\u0e19\u0e35\u0e48](https:\/\/github.com\/matterport\/Mask_RCNN\/blob\/master\/mrcnn\/config.py) \u0e27\u0e48\u0e32\u0e21\u0e35\u0e2d\u0e30\u0e44\u0e23\u0e1a\u0e49\u0e32\u0e07\u0e04\u0e23\u0e31\u0e1a","f7d49ff7":"\u0e2a\u0e48\u0e27\u0e19\u0e2a\u0e33\u0e04\u0e31\u0e0d\u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49\u0e42\u0e21\u0e40\u0e14\u0e25 Mask R-CNN \u0e02\u0e2d\u0e07 Matterport \u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e04\u0e25\u0e32\u0e2a\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 dataset \u0e02\u0e36\u0e49\u0e19\u0e21\u0e32 \u0e42\u0e14\u0e22\u0e02\u0e22\u0e32\u0e22\u0e08\u0e32\u0e01\u0e04\u0e25\u0e32\u0e2a utils.Dataset \u0e41\u0e25\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e2a\u0e48 implementation \u0e43\u0e19\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e14\u0e31\u0e07\u0e19\u0e35\u0e49\n* __\\_\\_init\\_\\___ \u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07 category \u0e41\u0e25\u0e30\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e44\u0e27\u0e49 \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19 add_class \u0e41\u0e25\u0e30 add_image \u0e15\u0e32\u0e21\u0e25\u0e33\u0e14\u0e31\u0e1a\n* __image_reference__ \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e14\u0e36\u0e07 reference information \u0e17\u0e35\u0e48\u0e08\u0e30\u0e19\u0e33\u0e44\u0e1b\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25\n* __load_image__ \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e2a\u0e48\u0e07\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e19\u0e33\u0e44\u0e1b\u0e40\u0e1b\u0e47\u0e19 input \u0e43\u0e2b\u0e49\u0e01\u0e31\u0e1a\u0e42\u0e21\u0e40\u0e14\u0e25\n* __load_mask__ \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e2a\u0e48\u0e07 mask \u0e41\u0e25\u0e30 label \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e19\u0e33\u0e44\u0e1b\u0e40\u0e1b\u0e47\u0e19 target \u0e43\u0e2b\u0e49\u0e01\u0e31\u0e1a\u0e42\u0e21\u0e40\u0e14\u0e25 \u0e0b\u0e36\u0e48\u0e07\u0e43\u0e19\u0e17\u0e35\u0e48\u0e19\u0e35\u0e49\u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e41\u0e1b\u0e25\u0e07\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e02\u0e2d\u0e07 mask \u0e40\u0e14\u0e34\u0e21 \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 run-length encoding \u0e43\u0e2b\u0e49\u0e40\u0e1b\u0e47\u0e19 array \u0e02\u0e19\u0e32\u0e14 (512, 512, M) \u0e40\u0e21\u0e37\u0e48\u0e2d M \u0e40\u0e1b\u0e47\u0e19\u0e08\u0e33\u0e19\u0e27\u0e19 mask \u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e17\u0e35\u0e48\u0e21\u0e35\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e \u0e2a\u0e48\u0e27\u0e19 label \u0e01\u0e47\u0e04\u0e37\u0e2d array \u0e02\u0e19\u0e32\u0e14 (M,) \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19 category \u0e02\u0e2d\u0e07 mask \u0e15\u0e48\u0e32\u0e07\u0e46 \u0e43\u0e19\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e","d5f2950a":"\u0e43\u0e19\u0e17\u0e35\u0e48\u0e19\u0e35\u0e49\u0e44\u0e14\u0e49\u0e40\u0e17\u0e23\u0e19\u0e44\u0e1b\u0e17\u0e31\u0e49\u0e07\u0e2a\u0e34\u0e49\u0e19\u0e08\u0e33\u0e19\u0e27\u0e19 3 \u0e23\u0e2d\u0e1a (epoch) \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e17\u0e23\u0e19\u0e40\u0e2a\u0e23\u0e47\u0e08\u0e41\u0e25\u0e49\u0e27\u0e01\u0e47\u0e08\u0e30\u0e1e\u0e25\u0e47\u0e2d\u0e15\u0e01\u0e23\u0e32\u0e1f\u0e02\u0e2d\u0e07 loss \u0e42\u0e14\u0e22\u0e23\u0e27\u0e21 \u0e41\u0e25\u0e30 loss \u0e02\u0e2d\u0e07\u0e2b\u0e31\u0e27 class \u0e01\u0e31\u0e1a\u0e2b\u0e31\u0e27 mask \u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e14\u0e39 \u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e01\u0e31\u0e1a\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e42\u0e21\u0e40\u0e14\u0e25\u0e43\u0e19\u0e23\u0e2d\u0e1a\u0e17\u0e35\u0e48\u0e14\u0e35\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e19\u0e33\u0e44\u0e1b\u0e43\u0e0a\u0e49\u0e01\u0e31\u0e1a test data \u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e04\u0e23\u0e31\u0e1a","6ad2b2e7":"### 1.1.3 FCN\n\n\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a FCN \u0e40\u0e1b\u0e47\u0e19 neural network \u0e17\u0e35\u0e48\u0e21\u0e35\u0e25\u0e31\u0e01\u0e29\u0e13\u0e30\u0e14\u0e31\u0e07\u0e23\u0e39\u0e1b\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07\u0e19\u0e35\u0e49 \u0e42\u0e14\u0e22\u0e08\u0e30\u0e23\u0e31\u0e1a input \u0e40\u0e02\u0e49\u0e32\u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e \u0e41\u0e25\u0e30\u0e43\u0e2b\u0e49 output \u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e08\u0e33\u0e41\u0e19\u0e01\u0e04\u0e25\u0e32\u0e2a\u0e02\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30 pixel \u0e43\u0e19\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e \u0e42\u0e14\u0e22 feature map \u0e02\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30 layer \u0e08\u0e30\u0e21\u0e35\u0e02\u0e19\u0e32\u0e14\u0e40\u0e25\u0e47\u0e01\u0e25\u0e07\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e22\u0e46 (downsampling) \u0e08\u0e19\u0e16\u0e36\u0e07\u0e15\u0e23\u0e07\u0e01\u0e25\u0e32\u0e07 \u0e41\u0e25\u0e49\u0e27\u0e04\u0e48\u0e2d\u0e22\u0e02\u0e22\u0e32\u0e22\u0e43\u0e2b\u0e49\u0e43\u0e2b\u0e0d\u0e48\u0e02\u0e36\u0e49\u0e19 (upsampling) \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e0a\u0e48\u0e19\u0e19\u0e35\u0e49\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e27\u0e48\u0e32 \u0e16\u0e49\u0e32\u0e17\u0e33 convolution \u0e02\u0e19\u0e32\u0e14\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19\u0e01\u0e31\u0e1a\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14 \u0e08\u0e30\u0e2a\u0e34\u0e49\u0e19\u0e40\u0e1b\u0e25\u0e37\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e04\u0e33\u0e19\u0e27\u0e13\u0e21\u0e32\u0e01 \u0e19\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e19\u0e35\u0e49\u0e22\u0e31\u0e07\u0e21\u0e35\u0e40\u0e2b\u0e15\u0e38\u0e1c\u0e25\u0e40\u0e0a\u0e48\u0e19\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e17\u0e33 [Autoencoder](https:\/\/en.wikipedia.org\/wiki\/Autoencoder) \u0e19\u0e31\u0e48\u0e19\u0e04\u0e37\u0e2d\u0e43\u0e19\u0e2a\u0e48\u0e27\u0e19\u0e02\u0e2d\u0e07 downsampling \u0e08\u0e30\u0e0a\u0e48\u0e27\u0e22\u0e04\u0e31\u0e14\u0e01\u0e23\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e2a\u0e33\u0e04\u0e31\u0e0d\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e04\u0e27\u0e32\u0e21\u0e2b\u0e21\u0e32\u0e22\u0e02\u0e2d\u0e07\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e\u0e2d\u0e2d\u0e01\u0e21\u0e32 (what part) \u0e01\u0e48\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e08\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23 upsampling \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e01\u0e47\u0e1a\u0e23\u0e32\u0e22\u0e25\u0e30\u0e40\u0e2d\u0e35\u0e22\u0e14\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e43\u0e2b\u0e49\u0e41\u0e21\u0e48\u0e19\u0e22\u0e33\u0e02\u0e36\u0e49\u0e19 (where part) \u0e19\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e19\u0e35\u0e49\u0e08\u0e30\u0e21\u0e35 skip connection \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e23\u0e31\u0e01\u0e29\u0e32\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e44\u0e21\u0e48\u0e43\u0e2b\u0e49\u0e2a\u0e39\u0e0d\u0e2b\u0e32\u0e22\u0e43\u0e19\u0e02\u0e31\u0e49\u0e19 downsampling \u0e14\u0e49\u0e27\u0e22","a9611bc4":"### 1.1.4 RoI Align\n\u0e43\u0e19\u0e01\u0e23\u0e13\u0e35\u0e17\u0e35\u0e48 RoI \u0e02\u0e2d\u0e07\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e input \u0e44\u0e21\u0e48\u0e15\u0e23\u0e07\u0e01\u0e31\u0e1a grid \u0e02\u0e2d\u0e07 feature map \u0e16\u0e49\u0e32\u0e43\u0e0a\u0e49 RoI Pool \u0e18\u0e23\u0e23\u0e21\u0e14\u0e32 \u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e48\u0e2d\u0e19\u0e43\u0e2b\u0e49 RoI \u0e21\u0e32\u0e2d\u0e22\u0e39\u0e48\u0e15\u0e23\u0e07\u0e01\u0e31\u0e1a grid \u0e0b\u0e36\u0e48\u0e07\u0e15\u0e23\u0e07\u0e19\u0e35\u0e49\u0e40\u0e2d\u0e07\u0e17\u0e35\u0e48\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e04\u0e25\u0e32\u0e14\u0e40\u0e04\u0e25\u0e37\u0e48\u0e2d\u0e19\u0e02\u0e2d\u0e07\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e44\u0e14\u0e49 \u0e14\u0e31\u0e07\u0e23\u0e39\u0e1b\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07\u0e19\u0e35\u0e49\n\n<img src=\"https:\/\/i.imgur.com\/6QJy11h.png\" style=\"height:250px\">\n<div style=\"text-align: right\"><font size=\"2\">(\u0e20\u0e32\u0e1e\u0e08\u0e32\u0e01[\u0e2a\u0e44\u0e25\u0e14\u0e4c\u0e02\u0e2d\u0e07 Kaiming He](http:\/\/kaiminghe.com\/iccv17maskrcnn\/maskrcnn_iccv2017_oral_kaiminghe.pdf))<\/font><\/div>","30773485":"\u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19\u0e08\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e31\u0e1a\u0e2a\u0e40\u0e01\u0e25\u0e02\u0e2d\u0e07 mask \u0e43\u0e2b\u0e49\u0e21\u0e35\u0e02\u0e19\u0e32\u0e14\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a RoI \u0e02\u0e2d\u0e07\u0e23\u0e39\u0e1b\u0e15\u0e49\u0e19\u0e09\u0e1a\u0e31\u0e1a \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e1b\u0e47\u0e19 output \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e2a\u0e48\u0e27\u0e19\u0e02\u0e2d\u0e07\u0e07\u0e32\u0e19 segmentation \u0e14\u0e31\u0e07\u0e23\u0e39\u0e1b\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07\u0e19\u0e35\u0e49\u0e04\u0e23\u0e31\u0e1a\n\n<img src=\"https:\/\/i.imgur.com\/eeC0SBh.png\" style=\"height:250px\">\n<div style=\"text-align: right\"><font size=\"2\">(\u0e20\u0e32\u0e1e\u0e08\u0e32\u0e01[\u0e2a\u0e44\u0e25\u0e14\u0e4c\u0e02\u0e2d\u0e07 Kaiming He](http:\/\/kaiminghe.com\/iccv17maskrcnn\/maskrcnn_iccv2017_oral_kaiminghe.pdf))<\/font><\/div>","16a117bc":"\u0e42\u0e14\u0e22\u0e17\u0e31\u0e48\u0e27\u0e44\u0e1b\u0e43\u0e19\u0e07\u0e32\u0e19 image segmentation \u0e08\u0e30\u0e43\u0e0a\u0e49\u0e04\u0e48\u0e32 IoU (Intersection over Union) \u0e43\u0e19\u0e01\u0e32\u0e23\u0e27\u0e31\u0e14\u0e1c\u0e25 \u0e42\u0e14\u0e22\u0e04\u0e48\u0e32 IoU \u0e01\u0e47\u0e04\u0e37\u0e2d\n\n$$IoU(G, P) = \\frac{\\left | G\\cap P \\right |}{\\left | G\\cup P \\right |}$$\n\n\u0e40\u0e21\u0e37\u0e48\u0e2d $G$ \u0e04\u0e37\u0e2d\u0e40\u0e0b\u0e47\u0e15\u0e02\u0e2d\u0e07 pixel \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 ground truth\n\u0e41\u0e25\u0e30 $P$ \u0e04\u0e37\u0e2d\u0e40\u0e0b\u0e47\u0e15\u0e02\u0e2d\u0e07 pixel \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 prediction \u0e02\u0e2d\u0e07\u0e40\u0e23\u0e32\n\n\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e04\u0e48\u0e32 IoU \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e02\u0e35\u0e22\u0e19\u0e43\u0e2b\u0e49\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e2d\u0e35\u0e01\u0e23\u0e39\u0e1b\u0e19\u0e36\u0e07\u0e44\u0e14\u0e49\u0e40\u0e1b\u0e47\u0e19\n\n$$IoU = \\frac{TP}{TP+FP+FN}$$\n\n\u0e40\u0e21\u0e37\u0e48\u0e2d TP, FP \u0e41\u0e25\u0e30 FN \u0e04\u0e37\u0e2d\u0e08\u0e33\u0e19\u0e27\u0e19 pixel \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 true positive, false positive \u0e41\u0e25\u0e30 false negative \u0e15\u0e32\u0e21\u0e25\u0e33\u0e14\u0e31\u0e1a\n\n\u0e42\u0e14\u0e22\u0e43\u0e19\u0e07\u0e32\u0e19\u0e19\u0e35\u0e49\u0e08\u0e30\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e04\u0e48\u0e32 threshold \u0e23\u0e30\u0e14\u0e31\u0e1a\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e40\u0e02\u0e49\u0e32\u0e21\u0e32\u0e14\u0e49\u0e27\u0e22 \u0e42\u0e14\u0e22\u0e21\u0e35 10 \u0e23\u0e30\u0e14\u0e31\u0e1a \u0e04\u0e37\u0e2d {0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95} \u0e41\u0e25\u0e49\u0e27\u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30\u0e23\u0e30\u0e14\u0e31\u0e1a \u0e16\u0e49\u0e32\u0e04\u0e48\u0e32 IoU \u0e44\u0e21\u0e48\u0e40\u0e01\u0e34\u0e19 threshold \u0e17\u0e35\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14 \u0e04\u0e48\u0e32 TP \u0e17\u0e35\u0e48 threshold \u0e19\u0e35\u0e49 ($TP(t)$) \u0e08\u0e30\u0e01\u0e25\u0e32\u0e22\u0e40\u0e1b\u0e47\u0e19 0 \u0e40\u0e25\u0e22 \u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e27\u0e31\u0e14\u0e1c\u0e25\u0e08\u0e23\u0e34\u0e07\u0e46 \u0e08\u0e30\u0e19\u0e33\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07\u0e17\u0e38\u0e01 threshold \u0e21\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\u0e01\u0e31\u0e19 \u0e14\u0e31\u0e07\u0e2a\u0e39\u0e15\u0e23\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07\u0e19\u0e35\u0e49\u0e04\u0e23\u0e31\u0e1a\n\n$$\\frac{1}{\\left | threshold \\right |}\\sum_{t}\\frac{TP(t)}{TP(t)+FP(t)+FN(t)}$$","1c073420":"\u0e41\u0e25\u0e49\u0e27\u0e15\u0e48\u0e2d\u0e21\u0e32\u0e08\u0e36\u0e07\u0e04\u0e48\u0e2d\u0e22\u0e40\u0e17\u0e23\u0e19\u0e42\u0e21\u0e40\u0e14\u0e25\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14","41281118":"<img src=\"https:\/\/i.imgur.com\/p8EuAP5.png\">\n<div style=\"text-align: right\"><font size=\"2\">(\u0e20\u0e32\u0e1e\u0e08\u0e32\u0e01[\u0e2a\u0e44\u0e25\u0e14\u0e4c\u0e02\u0e2d\u0e07 Kaiming He](http:\/\/kaiminghe.com\/iccv17maskrcnn\/maskrcnn_iccv2017_oral_kaiminghe.pdf))<\/font><\/div>","f9d81ba3":"# 2. \u0e20\u0e32\u0e04\u0e1b\u0e0f\u0e34\u0e1a\u0e31\u0e15\u0e34","95cc7d10":"### 1.2.2 \u0e01\u0e32\u0e23\u0e27\u0e31\u0e14\u0e1c\u0e25","678cd5a7":"\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19 to_rle \u0e40\u0e1b\u0e47\u0e19\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e17\u0e35\u0e48\u0e41\u0e1b\u0e25\u0e07 mask \u0e08\u0e32\u0e01\u0e42\u0e21\u0e40\u0e14\u0e25\u0e40\u0e1b\u0e47\u0e19 run-length encoding \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19 format \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e43\u0e19\u0e01\u0e32\u0e23\u0e2a\u0e48\u0e07\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e04\u0e23\u0e31\u0e1a","e2c4e322":"\u0e07\u0e32\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e46 \u0e43\u0e19\u0e17\u0e32\u0e07 computer vision \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e41\u0e1a\u0e48\u0e07\u0e2d\u0e2d\u0e01\u0e44\u0e14\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e2a\u0e35\u0e48\u0e2d\u0e22\u0e48\u0e32\u0e07 \u0e15\u0e32\u0e21\u0e23\u0e39\u0e1b\u0e14\u0e49\u0e32\u0e19\u0e1a\u0e19\u0e19\u0e35\u0e49 \u0e44\u0e14\u0e49\u0e41\u0e01\u0e48\n* __Classification__ \u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e1a\u0e2d\u0e01\u0e27\u0e48\u0e32\u0e23\u0e39\u0e1b\u0e17\u0e35\u0e48\u0e40\u0e2b\u0e47\u0e19\u0e2d\u0e22\u0e39\u0e48\u0e19\u0e35\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e23\u0e39\u0e1b\u0e2d\u0e30\u0e44\u0e23\n* __Semantic Segmentation__ \u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e08\u0e33\u0e41\u0e19\u0e01\u0e41\u0e15\u0e48\u0e25\u0e30 pixel \u0e43\u0e19\u0e23\u0e39\u0e1b \u0e27\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19 pixel \u0e02\u0e2d\u0e07\u0e27\u0e31\u0e15\u0e16\u0e38\u0e43\u0e14\n* __Object Detection__ \u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e02\u0e2d\u0e07\u0e27\u0e31\u0e15\u0e16\u0e38\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e20\u0e32\u0e22\u0e43\u0e19\u0e23\u0e39\u0e1b\n* __Instance Segmentation__ \u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e27\u0e48\u0e32\u0e27\u0e31\u0e15\u0e16\u0e38\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e20\u0e32\u0e22\u0e43\u0e19\u0e23\u0e39\u0e1b \u0e21\u0e35 pixel \u0e44\u0e2b\u0e19\u0e1a\u0e49\u0e32\u0e07 \u0e0b\u0e36\u0e48\u0e07 Mask R-CNN \u0e04\u0e37\u0e2d\u0e42\u0e21\u0e40\u0e14\u0e25\u0e17\u0e35\u0e48\u0e2d\u0e2d\u0e01\u0e41\u0e1a\u0e1a\u0e21\u0e32\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e43\u0e0a\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e07\u0e32\u0e19\u0e19\u0e35\u0e49\u0e42\u0e14\u0e22\u0e40\u0e09\u0e1e\u0e32\u0e30\n\n\u0e07\u0e32\u0e19 instance segmentation \u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e23\u0e27\u0e21 object detection \u0e41\u0e25\u0e30 semantic segmentation \u0e40\u0e02\u0e49\u0e32\u0e44\u0e27\u0e49\u0e14\u0e49\u0e27\u0e22\u0e01\u0e31\u0e19 \u0e14\u0e31\u0e07\u0e23\u0e39\u0e1b\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07\u0e19\u0e35\u0e49\u0e04\u0e23\u0e31\u0e1a","2b5bbc65":"\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a kernel \u0e19\u0e35\u0e49 \u0e08\u0e30\u0e41\u0e1a\u0e48\u0e07\u0e2d\u0e2d\u0e01\u0e40\u0e1b\u0e47\u0e19\u0e2a\u0e2d\u0e07\u0e2a\u0e48\u0e27\u0e19\u0e43\u0e2b\u0e0d\u0e48\u0e46 \u0e42\u0e14\u0e22\u0e43\u0e19\u0e2a\u0e48\u0e27\u0e19\u0e41\u0e23\u0e01 \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e40\u0e01\u0e23\u0e34\u0e48\u0e19\u0e19\u0e33\u0e16\u0e36\u0e07\u0e1b\u0e31\u0e0d\u0e2b\u0e32 image segmentation \u0e41\u0e25\u0e30\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a [Mask R-CNN](https:\/\/arxiv.org\/abs\/1703.06870) \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e42\u0e21\u0e40\u0e14\u0e25\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e08\u0e30\u0e43\u0e0a\u0e49\u0e43\u0e19\u0e07\u0e32\u0e19\u0e19\u0e35\u0e49 \u0e41\u0e25\u0e30\u0e43\u0e19\u0e2a\u0e48\u0e27\u0e19\u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e2a\u0e48\u0e27\u0e19\u0e02\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e04\u0e23\u0e31\u0e1a","56226ac9":"\u0e43\u0e19\u0e02\u0e31\u0e49\u0e19\u0e41\u0e23\u0e01 \u0e08\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23\u0e40\u0e17\u0e23\u0e19\u0e40\u0e09\u0e1e\u0e32\u0e30\u0e2a\u0e48\u0e27\u0e19\u0e2b\u0e31\u0e27\u0e02\u0e2d\u0e07\u0e42\u0e21\u0e40\u0e14\u0e25\u0e01\u0e48\u0e2d\u0e19\u0e04\u0e23\u0e31\u0e1a","b8f91827":"## 1.1 Mask R-CNN","a2c47dad":"## 2.2 Download Libraries and Pretrained Weights","aa4b0761":"\u0e41\u0e25\u0e49\u0e27\u0e2d\u0e48\u0e32\u0e19\u0e44\u0e1f\u0e25\u0e4c sample_submission.csv \u0e0b\u0e36\u0e48\u0e07\u0e21\u0e35\u0e0a\u0e37\u0e48\u0e2d\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e\u0e17\u0e35\u0e48\u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33\u0e01\u0e32\u0e23\u0e17\u0e14\u0e2a\u0e2d\u0e1a","58d71cf5":"## 1.2 iMaterialist - Fashion 2019","3e5360ca":"## 2.4 Prepare Datasets","5ddf1b3e":"\u0e43\u0e19\u0e02\u0e31\u0e49\u0e19\u0e41\u0e23\u0e01\u0e02\u0e2d\u0e07\u0e01\u0e23\u0e30\u0e1a\u0e27\u0e19\u0e01\u0e32\u0e23\u0e40\u0e17\u0e23\u0e19 \u0e01\u0e47\u0e08\u0e30\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e42\u0e21\u0e40\u0e14\u0e25 Mask R-CNN \u0e08\u0e32\u0e01 config \u0e17\u0e35\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e44\u0e27\u0e49 \u0e41\u0e25\u0e30\u0e42\u0e2b\u0e25\u0e14 pretrained weight \u0e21\u0e32\u0e43\u0e2a\u0e48\u0e04\u0e23\u0e31\u0e1a","9615e046":"RoI Align \u0e41\u0e01\u0e49\u0e1b\u0e31\u0e0d\u0e2b\u0e32\u0e02\u0e2d\u0e07 RoI Pool \u0e42\u0e14\u0e22\u0e27\u0e34\u0e18\u0e35\u0e01\u0e32\u0e23\u0e17\u0e35\u0e48\u0e41\u0e2a\u0e14\u0e07\u0e14\u0e31\u0e07\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e43\u0e19\u0e23\u0e39\u0e1b\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07 \u0e40\u0e0a\u0e48\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e21\u0e35 feature map \u0e02\u0e19\u0e32\u0e14 5x5 \u0e41\u0e25\u0e30 RoI \u0e04\u0e37\u0e2d\u0e2a\u0e35\u0e48\u0e40\u0e2b\u0e25\u0e35\u0e48\u0e22\u0e21\u0e43\u0e2b\u0e0d\u0e48\u0e2a\u0e35\u0e2a\u0e49\u0e21 \u0e16\u0e49\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e43\u0e2b\u0e49 feature map \u0e02\u0e2d\u0e07 RoI \u0e19\u0e35\u0e49\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e02\u0e19\u0e32\u0e14 2x2 \u0e01\u0e47\u0e08\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23\u0e41\u0e1a\u0e48\u0e07 RoI \u0e15\u0e31\u0e49\u0e07\u0e15\u0e49\u0e19\u0e40\u0e1b\u0e47\u0e19\u0e2a\u0e35\u0e48\u0e2a\u0e48\u0e27\u0e19\u0e40\u0e17\u0e48\u0e32\u0e46 \u0e01\u0e31\u0e19 \u0e41\u0e25\u0e49\u0e27\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e08\u0e38\u0e14\u0e20\u0e32\u0e22\u0e43\u0e19\u0e02\u0e36\u0e49\u0e19\u0e21\u0e32\u0e2a\u0e35\u0e48\u0e08\u0e38\u0e14\u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30\u0e2a\u0e48\u0e27\u0e19 \u0e41\u0e25\u0e30\u0e04\u0e33\u0e19\u0e27\u0e13\u0e04\u0e48\u0e32 feature \u0e02\u0e2d\u0e07\u0e08\u0e38\u0e14\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14 \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 bilinear interpolation \u0e08\u0e32\u0e01\u0e04\u0e48\u0e32 feature \u0e08\u0e23\u0e34\u0e07\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e01\u0e25\u0e49\u0e40\u0e04\u0e35\u0e22\u0e07 \u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19\u0e08\u0e36\u0e07\u0e17\u0e33 max pooling \u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30\u0e2a\u0e48\u0e27\u0e19 \u0e01\u0e47\u0e08\u0e30\u0e44\u0e14\u0e49 feature map \u0e02\u0e19\u0e32\u0e14 2x2 \u0e15\u0e32\u0e21\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e04\u0e23\u0e31\u0e1a\n\n<img src=\"https:\/\/i.imgur.com\/mIKiNwx.png\" style=\"height:250px\">\n<div style=\"text-align: right\"><font size=\"2\">(\u0e20\u0e32\u0e1e\u0e08\u0e32\u0e01[\u0e2a\u0e44\u0e25\u0e14\u0e4c\u0e02\u0e2d\u0e07 Kaiming He](http:\/\/kaiminghe.com\/iccv17maskrcnn\/maskrcnn_iccv2017_oral_kaiminghe.pdf))<\/font><\/div>","9c53963c":"\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e04\u0e25\u0e32\u0e2a dataset \u0e02\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e0a\u0e38\u0e14\u0e19\u0e35\u0e49 \u0e17\u0e35\u0e48\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 FashionDataset \u0e40\u0e2a\u0e23\u0e47\u0e08\u0e41\u0e25\u0e49\u0e27 \u0e01\u0e47\u0e08\u0e30\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e25\u0e2d\u0e07\u0e17\u0e33 visualization \u0e14\u0e39\u0e44\u0e14\u0e49 \u0e27\u0e48\u0e32\u0e21\u0e35\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e\u0e41\u0e25\u0e30 mask \u0e40\u0e1b\u0e47\u0e19\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23\u0e1a\u0e49\u0e32\u0e07","7037159e":"## 2.1 Import and Define\n\u0e43\u0e19\u0e02\u0e31\u0e49\u0e19\u0e41\u0e23\u0e01\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23 import \u0e15\u0e31\u0e27 library \u0e15\u0e48\u0e32\u0e07\u0e46 \u0e41\u0e25\u0e30\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e04\u0e48\u0e32\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e0a\u0e49","bbd954ad":"Faster R-CNN \u0e40\u0e1b\u0e47\u0e19\u0e42\u0e21\u0e40\u0e14\u0e25\u0e17\u0e35\u0e48\u0e1e\u0e31\u0e12\u0e19\u0e32\u0e15\u0e48\u0e2d\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e32\u0e08\u0e32\u0e01 R-CNN \u0e41\u0e25\u0e30 Fast R-CNN \u0e17\u0e48\u0e32\u0e19\u0e17\u0e35\u0e48\u0e2a\u0e19\u0e43\u0e08\u0e40\u0e23\u0e35\u0e22\u0e19\u0e23\u0e39\u0e49\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e19\u0e35\u0e49\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e40\u0e15\u0e34\u0e21 \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2d\u0e48\u0e32\u0e19\u0e44\u0e14\u0e49\u0e17\u0e35\u0e48[\u0e1a\u0e25\u0e47\u0e2d\u0e01\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13 Lilian Weng](https:\/\/lilianweng.github.io\/lil-log\/2017\/12\/31\/object-recognition-for-dummies-part-3.html) \u0e2b\u0e23\u0e37\u0e2d [lecture \u0e02\u0e2d\u0e07\u0e04\u0e2d\u0e23\u0e4c\u0e2a CS231n](https:\/\/www.youtube.com\/watch?v=nDPWywWRIRo) \u0e01\u0e47\u0e44\u0e14\u0e49\u0e04\u0e23\u0e31\u0e1a \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e43\u0e19\u0e17\u0e35\u0e48\u0e19\u0e35\u0e49\u0e08\u0e30\u0e02\u0e2d\u0e01\u0e25\u0e48\u0e32\u0e27\u0e16\u0e36\u0e07\u0e40\u0e1e\u0e35\u0e22\u0e07 Faster R-CNN \u0e0b\u0e36\u0e48\u0e48\u0e07\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2a\u0e23\u0e38\u0e1b\u0e44\u0e14\u0e49\u0e14\u0e31\u0e07\u0e23\u0e39\u0e1b\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07\u0e19\u0e35\u0e49","3324bbb3":"\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07 training set \u0e41\u0e25\u0e30 validation set \u0e40\u0e2a\u0e23\u0e47\u0e08\u0e41\u0e25\u0e49\u0e27 \u0e01\u0e47\u0e08\u0e30\u0e25\u0e2d\u0e07\u0e17\u0e33 visualization \u0e14\u0e39\u0e27\u0e48\u0e32 category \u0e15\u0e48\u0e32\u0e07\u0e46 \u0e21\u0e35\u0e01\u0e32\u0e23\u0e01\u0e23\u0e30\u0e08\u0e32\u0e22\u0e40\u0e1b\u0e47\u0e19\u0e22\u0e31\u0e07\u0e44\u0e07\u0e1a\u0e49\u0e32\u0e07\u0e04\u0e23\u0e31\u0e1a","aa8ea0a4":"\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e2d\u0e48\u0e32\u0e19 dataset \u0e42\u0e14\u0e22\u0e40\u0e23\u0e34\u0e48\u0e21\u0e08\u0e32\u0e01\u0e44\u0e1f\u0e25\u0e4c label_descriptions.json \u0e0b\u0e36\u0e48\u0e07\u0e1a\u0e2d\u0e01\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07 label \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e0a\u0e37\u0e48\u0e2d\u0e02\u0e2d\u0e07 category \u0e44\u0e27\u0e49\u0e43\u0e0a\u0e49\u0e2d\u0e49\u0e32\u0e07\u0e2d\u0e34\u0e07\u0e41\u0e25\u0e30\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25","1502b938":"## 2.6 Predict","80504e7f":"# 1. \u0e20\u0e32\u0e04\u0e17\u0e24\u0e29\u0e0e\u0e35","c3a19548":"### 1.1.2 Faster R-CNN","c72eaf55":"\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e41\u0e02\u0e48\u0e07\u0e02\u0e31\u0e19\u0e43\u0e19\u0e04\u0e23\u0e31\u0e49\u0e07\u0e19\u0e35\u0e49 \u0e08\u0e31\u0e14\u0e40\u0e1b\u0e47\u0e19\u0e07\u0e32\u0e19 instance segmentation \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e41\u0e22\u0e01\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17\u0e02\u0e2d\u0e07\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e07\u0e01\u0e32\u0e22\u0e17\u0e35\u0e48\u0e1b\u0e23\u0e32\u0e01\u0e0f\u0e2d\u0e22\u0e39\u0e48\u0e20\u0e32\u0e22\u0e43\u0e19\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e \u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e40\u0e0a\u0e48\u0e19\u0e43\u0e19\u0e23\u0e39\u0e1b\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07\u0e19\u0e35\u0e49 \u0e42\u0e14\u0e22\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e43\u0e2b\u0e49\u0e21\u0e32 \u0e08\u0e30\u0e21\u0e35 label \u0e2d\u0e22\u0e39\u0e48\u0e2a\u0e2d\u0e07\u0e2a\u0e48\u0e27\u0e19 \u0e44\u0e14\u0e49\u0e41\u0e01\u0e48\n* __\u0e2a\u0e48\u0e27\u0e19\u0e02\u0e2d\u0e07 class__ \u0e04\u0e25\u0e32\u0e2a\u0e43\u0e19\u0e17\u0e35\u0e48\u0e19\u0e35\u0e49\u0e08\u0e30\u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e44\u0e1b\u0e14\u0e49\u0e27\u0e22 category \u0e41\u0e25\u0e30 attribute \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a category \u0e04\u0e37\u0e2d\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17\u0e02\u0e2d\u0e07\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e07\u0e01\u0e32\u0e22 \u0e40\u0e0a\u0e48\u0e19 \u0e40\u0e2a\u0e37\u0e49\u0e2d \u0e01\u0e32\u0e07\u0e40\u0e01\u0e07 \u0e2a\u0e48\u0e27\u0e19 attribute \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e25\u0e31\u0e01\u0e29\u0e13\u0e30\u0e02\u0e2d\u0e07 category \u0e19\u0e31\u0e49\u0e19 \u0e40\u0e0a\u0e48\u0e19 (\u0e01\u0e32\u0e07\u0e40\u0e01\u0e07) \u0e1f\u0e34\u0e15 \u0e40\u0e2b\u0e19\u0e37\u0e2d\u0e40\u0e2d\u0e27 \u0e25\u0e32\u0e22\u0e40\u0e23\u0e35\u0e22\u0e1a \u0e40\u0e1b\u0e47\u0e19\u0e15\u0e49\u0e19\n* __\u0e2a\u0e48\u0e27\u0e19\u0e02\u0e2d\u0e07 mask__ \u0e08\u0e30\u0e1a\u0e2d\u0e01\u0e27\u0e48\u0e32\u0e27\u0e31\u0e15\u0e16\u0e38\u0e04\u0e25\u0e32\u0e2a\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e14\u0e49\u0e27\u0e22 pixel \u0e44\u0e2b\u0e19\u0e1a\u0e49\u0e32\u0e07\n\n\u0e01\u0e32\u0e23\u0e41\u0e02\u0e48\u0e07\u0e02\u0e31\u0e19\u0e04\u0e23\u0e31\u0e49\u0e07\u0e19\u0e35\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e2a\u0e48\u0e27\u0e19\u0e19\u0e36\u0e07\u0e02\u0e2d\u0e07 [FGVC6 workshop](https:\/\/sites.google.com\/view\/fgvc6\/) \u0e0b\u0e36\u0e48\u0e07\u0e08\u0e31\u0e14\u0e02\u0e36\u0e49\u0e19\u0e23\u0e27\u0e21\u0e01\u0e31\u0e1a [CVPR conference \u0e1b\u0e35\u0e19\u0e35\u0e49](http:\/\/cvpr2019.thecvf.com\/) \u0e14\u0e49\u0e27\u0e22\u0e04\u0e23\u0e31\u0e1a"}}