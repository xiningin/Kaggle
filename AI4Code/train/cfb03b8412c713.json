{"cell_type":{"2bca335a":"code","2cbc3054":"code","17667498":"code","7a70c085":"code","36ff6b9d":"code","205d50e3":"code","effcd1d3":"code","f1157b09":"code","8944f8d3":"code","89702e05":"code","1714c252":"code","dd2eec24":"code","47527dc7":"code","0ba552a0":"code","a2c3321a":"code","94a4b144":"code","89d65fed":"code","1838a2dc":"code","8150bd9a":"code","e6b5c6e9":"code","747bc45f":"code","9e83b5a9":"code","c9ab75b3":"code","e56ee69e":"code","4ba51142":"code","bde3a36a":"code","600029f2":"code","ab417cff":"code","2e3b3e2f":"code","3dcff943":"code","eec80511":"code","aaedccc5":"markdown","292691bd":"markdown","2ad7f247":"markdown","777665da":"markdown","b907e8d5":"markdown","f406d26f":"markdown","6fc7a87c":"markdown","c1b8f5d0":"markdown","3f799ef2":"markdown","7a406850":"markdown","44f7fd51":"markdown","f8e845cf":"markdown","245029a3":"markdown","6352939a":"markdown","f6acefd1":"markdown","67990a0e":"markdown","575f5f07":"markdown","e81099f2":"markdown"},"source":{"2bca335a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2cbc3054":"pd.set_option('display.max_columns', 400)","17667498":"survey = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv',low_memory = False)\nsurvey.head()","7a70c085":"survey.drop(labels = 0, axis = 0, inplace = True)","36ff6b9d":"def countplot(fig_x,fig_y,col,top_x,rotation,xlabel,title) :\n    plt.figure(figsize=(fig_x,fig_y))\n    total = float(len(survey))\n    ax = sns.countplot(x=col,  data=survey, order = survey[col].value_counts().iloc[:top_x].index) \n    for p in ax.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x() + p.get_width() \/ 2 - 0.05\n        y = p.get_y() + p.get_height()\n        ax.annotate(percentage, (x, y),xytext = (x+0.05,y+20),ha = 'center',weight = 'bold',size = 11)\n    plt.xticks(rotation = rotation,weight='bold',size = 10)\n    plt.yticks(weight='bold',size = 10)\n    plt.xlabel(xlabel,weight='bold',size = 12)\n    plt.ylabel('count',weight='bold',size = 12)\n    plt.title(title,weight='bold',size = 15)\n    plt.show()","205d50e3":"countplot(12,8,'Q1',15,45,'Age Group','Age Distribution of Respondents')","effcd1d3":"countplot(8,6,'Q2',15,45,'Gender','Gender Distribution of Respondents')","f1157b09":"survey.Q3 = survey.Q3.apply(lambda x : 'USA' if x == 'United States of America' else x)\nsurvey.Q3 = survey.Q3.apply(lambda x : 'UK' if x == 'United Kingdom of Great Britain and Northern Ireland' else x)","8944f8d3":"countplot(20,8,'Q3',15,45,'Countries','Countries of Respondents')","89702e05":"survey.Q4 = survey.Q4.apply(lambda x : 'w\/o Bachelor\\'s degree' if x == 'Some college\/university study without earning a bachelor\u2019s degree' else x)","1714c252":"countplot(20,10,'Q4',15,45,'Education','Educational Qualification of Respondents')","dd2eec24":"countplot(20,10,'Q5',15,45,'Job','Job of Respondents')","47527dc7":"countplot(12,10,'Q6',15,45,'Programming exp.','Programming exp. of Respondents')","0ba552a0":"countplot(20,10,'Q8',15,45,'Recommended Programming Language','Recommended Programming Language')","a2c3321a":"survey.Q11.value_counts()","94a4b144":"survey.Q11 = survey.Q11.apply(lambda x : 'Cloud Computing Platform' if x == 'A cloud computing platform (AWS, Azure, GCP, hosted notebooks, etc)' else x)\nsurvey.Q11 = survey.Q11.apply(lambda x : 'Deep learning workstation' if x == 'A deep learning workstation (NVIDIA GTX, LambdaLabs, etc)' else x)","89d65fed":"countplot(20,8,'Q11',15,15,'Computing Platform','Computing Platform')","1838a2dc":"countplot(10,8,'Q13',15,15,'Used TPU','TPU usage of Respondents')","8150bd9a":"survey.Q15 = survey.Q15.apply(lambda x : 'No experience' if x == 'I do not use machine learning methods' else x)","e6b5c6e9":"countplot(10,8,'Q15',15,15,'ML experience','ML Experience of Respondents')","747bc45f":"countplot(10,8,'Q20',15,15,'Company Size','Company Size')","9e83b5a9":"countplot(10,8,'Q21',15,15,'Data Scientists','No.of Data Scientists in the company')","c9ab75b3":"survey.Q22.value_counts()","e56ee69e":"survey.Q22 = survey.Q22.apply(lambda x : 'May use in future' if x == 'We are exploring ML methods (and may one day put a model into production)' else x)\nsurvey.Q22 = survey.Q22.apply(lambda x : 'Not in use' if x == 'No (we do not use ML methods)' else x)\nsurvey.Q22 = survey.Q22.apply(lambda x : '>2 years' if x == 'We have well established ML methods (i.e., models in production for more than 2 years)' else x)\nsurvey.Q22 = survey.Q22.apply(lambda x : '<2 years' if x == 'We recently started using ML methods (i.e., models in production for less than 2 years)' else x)\nsurvey.Q22 = survey.Q22.apply(lambda x : 'Not sure' if x == 'I do not know ' else x)\nsurvey.Q22 = survey.Q22.apply(lambda x : 'Only for gaining insights' if x == 'We use ML methods for generating insights (but do not put working models into production)' else x)","4ba51142":"countplot(10,8,'Q22',15,15,'ML incorporation','ML incorporation level')","bde3a36a":"countplot(20,8,'Q24',15,15,'Compensation(in $)','Compensation')","600029f2":"countplot(10,8,'Q25',15,15,'ML\/Cloud funds(USD)','ML\/Cloud funds(USD)')","ab417cff":"survey.Q30.value_counts()","2e3b3e2f":"survey.Q30 = survey.Q30.apply(lambda x : 'MS Azure Data Lake Storage' if x == 'Microsoft Azure Data Lake Storage ' else x)","3dcff943":"countplot(20,8,'Q30',15,55,'Bigdata Products','Bigdata Products')","eec80511":"countplot(20,10,'Q32',15,55,'BI Tools','BI Tools')","aaedccc5":"## Compensation","292691bd":"## ML Experience","2ad7f247":"## Recommended Programming language","777665da":"## Country","b907e8d5":"## TPU usage","f406d26f":"A major portion of data science enthusiats are people in their 20's.","6fc7a87c":"## No. of Data scientists","c1b8f5d0":"## Computing Platform","3f799ef2":"## ML incorporation level","7a406850":"## Education","44f7fd51":"## Company Size","f8e845cf":"## Bigdata Products","245029a3":"## Gender","6352939a":"## Programming Exp.","f6acefd1":"## Age Group","67990a0e":"## Business Intelligence Tools","575f5f07":"## ML\/Cloud funds(USD)","e81099f2":"## Job"}}