{"cell_type":{"f2d2c2c1":"code","46287ff1":"code","55c6274a":"code","40b6df96":"code","3dbc12fe":"code","296ba261":"code","8b569cf7":"code","b5677efd":"code","afbdd23f":"code","bc37f3cc":"code","0251adb9":"code","5edbe374":"code","0da3f74f":"code","7c7e8267":"code","60b481ba":"code","3cdf246c":"code","7aae4dc5":"code","35f8865e":"code","1a283fd1":"code","4bab2f85":"code","2c8cccec":"code","1e9b988b":"code","6e0d8a78":"code","25b82099":"code","a016a2d5":"markdown","b833fa4f":"markdown","3efa851c":"markdown","2b8697de":"markdown","aba0d405":"markdown","c8b7ad09":"markdown"},"source":{"f2d2c2c1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #visualization\n%matplotlib inline\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport plotly.express as px\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","46287ff1":"! pip install -q dabl country_converter","55c6274a":"import dabl\nimport warnings\n\nimport country_converter as coco\n\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\n\nwarnings.simplefilter('ignore')","40b6df96":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndata = pd.read_csv('..\/input\/covid19-data-from-ministry-of-health-in-brazil\/HIST_PAINEL_COVIDBR_16nov2020.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndata.dataframeName = 'HIST_PAINEL_COVIDBR_16nov2020.csv'\nnRow, nCol = data.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndata.head()","3dbc12fe":"data.isnull().sum()","296ba261":"cols_to_drop=['municipio','codmun', 'codRegiaoSaude', 'nomeRegiaoSaude', 'interior\/metropolitana']\ndata=data.drop(cols_to_drop,axis=1)\ndata.columns","8b569cf7":"# categorical features with missing values\ncategorical_nan = [feature for feature in data.columns if data[feature].isna().sum()>0 and data[feature].dtypes=='O']\nprint(categorical_nan)","b5677efd":"# replacing missing values in categorical features\nfor feature in categorical_nan:\n    data[feature] = data[feature].fillna('None')","afbdd23f":"data[categorical_nan].isna().sum()","bc37f3cc":"# Lets first handle numerical features with nan value\nnumerical_nan = [feature for feature in data.columns if data[feature].isna().sum()>1 and data[feature].dtypes!='O']\nnumerical_nan","0251adb9":"data[numerical_nan].isna().sum()","5edbe374":"data[numerical_nan].isna().sum()","0da3f74f":"## Replacing the numerical Missing Values\n\nfor feature in numerical_nan:\n    ## We will replace by using median since there are outliers\n    median_value=data[feature].median()\n    \n    data[feature].fillna(median_value,inplace=True)\n    \ndata[numerical_nan].isnull().sum()","7c7e8267":"#Code from Gabriel Preda\n#plt.style.use('dark_background')\ndef plot_count(feature, title, data, size=1):\n    f, ax = plt.subplots(1,1, figsize=(4*size,4))\n    total = float(len(data))\n    g = sns.countplot(data[feature], order = data[feature].value_counts().index[:20], palette= ('#32a852', '#a84e32', '#3242a8'))\n    g.set_title(\"Number and percentage of {}\".format(title))\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 3,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show()","60b481ba":"plot_count(\"obitosAcumulado\", \"\u00d3bitos Acumulados\", data,4)","3cdf246c":"#Code by Tanay Mehta https:\/\/www.kaggle.com\/heyytanay\/basketball-eda-plotly-dabl\/notebook\n\nvals = data['semanaEpi'].value_counts().tolist()\nnames = list(dict(data['semanaEpi'].value_counts()).keys())\n\nfig = go.Figure(data=[go.Bar(x=names, y=vals)])\nfig.update_traces(marker_color='rgb(158,202,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1, opacity=0.6)\nfig.update_layout(title_text='Covid-19 Brazil Semana EPI')\nfig.show()","7aae4dc5":"vals = data['emAcompanhamentoNovos'].value_counts().tolist()\nnames = list(dict(data['emAcompanhamentoNovos'].value_counts()).keys())\n\nfig = go.Figure(data=[go.Bar(x=names, y=vals)])\nfig.update_traces(marker_color='rgb(158,255,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=2.5, opacity=0.6)\nfig.update_layout(title_text='Covid-19 Brazil Acompanhamento Casos Novos')\nfig.show()","35f8865e":"vals = data['regiao'].value_counts().tolist()\nnames = list(dict(data['regiao'].value_counts()).keys())\n\nfig = go.Figure(data=[go.Pie(labels=names, values=vals)])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n                  marker=dict(colors=['cyan', 'royalblue', 'darkblue'], line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='Covid-19 Regi\u00f5es Brasileiras')\nfig.show()","1a283fd1":"vals = data['estado'].value_counts().tolist()\nnames = list(dict(data['estado'].value_counts()).keys())\n\nfig = go.Figure(data=[go.Pie(labels=names, values=vals)])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n                  marker=dict(colors=['cyan', 'royalblue', 'darkblue'], line=dict(color='#000000', width=2)))\nfig.update_layout(title_text='Covid-19 Estados Brasileiros')\nfig.show()","4bab2f85":"fig = ff.create_2d_density(x=data['obitosAcumulado'], y=data['populacaoTCU2019'])\nfig.update_layout(title_text='Covid-19 \u00d3bitos Acumulados')\nfig.show()","2c8cccec":"plt.style.use('classic')\nnew_df = data[['coduf', 'semanaEpi', 'populacaoTCU2019', 'casosAcumulado', 'casosNovos', 'obitosAcumulado', 'obitosNovos', 'Recuperadosnovos', 'emAcompanhamentoNovos']]\ndabl.plot(new_df, target_col='casosAcumulado')","1e9b988b":"plt.style.use('classic')\nnew_df = data[['regiao','coduf', 'semanaEpi', 'populacaoTCU2019', 'casosAcumulado', 'casosNovos', 'obitosAcumulado', 'obitosNovos', 'Recuperadosnovos', 'emAcompanhamentoNovos']]\ndabl.plot(new_df, target_col='regiao')","6e0d8a78":"new_df = data[['coduf', 'semanaEpi', 'populacaoTCU2019', 'casosAcumulado', 'casosNovos', 'obitosAcumulado', 'obitosNovos', 'Recuperadosnovos', 'emAcompanhamentoNovos']]\nsns.pairplot(new_df)","25b82099":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Mar\u00edlia Prata, @mpwolke was here' )","a016a2d5":"#Brazil is geopolitically divided into five regions: North,Northeast, Mid West, Southeast and South.\n\nThat pie is totally incorrect. I have no clue what I did wrong to plot such wrong pie. ","b833fa4f":"#Codes by Tanay Mehta https:\/\/www.kaggle.com\/heyytanay\/basketball-eda-plotly-dabl\/notebook","3efa851c":"#There are 26 States in Brazil plus the Federal District which holds the national capital, Bras\u00edlia.\n\nNot only Acre (AC), Roraima (RO) and Amazonas (AM). Another wrong pie.","2b8697de":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTWMdNt6Tex0aH74hulCCO4AsMO3KeTTScehw&usqp=CAU)oglobo","aba0d405":"#Scatter Plot Matrix","c8b7ad09":"#Handling Missing Values"}}