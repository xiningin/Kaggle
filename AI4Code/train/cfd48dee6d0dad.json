{"cell_type":{"6fd86f98":"code","6d5f4bba":"code","e3c2420a":"code","c8aa1456":"code","5e6c8379":"code","574bd176":"code","0f75c26a":"code","85ad7bb6":"code","90569d4b":"markdown","4b193cea":"markdown","d4118416":"markdown","84a05d26":"markdown","c34ea6d7":"markdown","1e269cdf":"markdown","0e31f104":"markdown"},"source":{"6fd86f98":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.preprocessing import Imputer, LabelEncoder, OneHotEncoder, StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","6d5f4bba":"df = pd.read_csv(\"..\/input\/MonthAndSales.csv\", sep=\",\")\ndf.info()","e3c2420a":"df.head()","c8aa1456":"df.describe()","5e6c8379":"sales = df[['Sales']]\nmonths = df[['Months']]\n\nx_train, x_test, y_train, y_test = train_test_split(months, sales, random_state=0, test_size=0.33)\nsc = StandardScaler()\nX_train = sc.fit_transform(x_train)\nX_test = sc.fit_transform(x_test)\nY_train = sc.fit_transform(y_train)\nY_test = sc.fit_transform(y_test)","574bd176":"model = LinearRegression()\nmodel.fit(X_train, Y_train)\npred = model.predict(X_test)\n\nprint(model.score(X_train,Y_train))","0f75c26a":"model = LinearRegression()\nmodel.fit(x_train, y_train)\npred = model.predict(x_test)\n\nprint(model.score(x_train,y_train))","85ad7bb6":"x_train = x_train.sort_index()\ny_train = y_train.sort_index()\nplt.title(\"Months vs Sales\")\nplt.plot(x_train,y_train)\nplt.plot(x_test, pred)\nplt.xlabel(\"Months\")\nplt.ylabel(\"Sales\")\nplt.legend()\nplt.show()","90569d4b":"Again we create model and fit, but this code using x_train and y_train. I mean it is non scaled datas.","4b193cea":"Let's start feature engineering. In order to \"train test split\", we can create sales and months variables. We can do standardization for data scaling.","d4118416":"We create model and fit, but this code using X_train and Y_train. I mean it is scaled datas.","84a05d26":"We have used sort_index(), thats because when we create model, we took shuffled data. Did you remember we have used \"random_state=0\". But in this graphic (like time series) Sales variable, should be ranked by time.","c34ea6d7":"As you see score doesn't change. Scaled or unscaled. It doesn't matter.","1e269cdf":"Let's import and look at the dataset.","0e31f104":"We imported our necessary libraries."}}