{"cell_type":{"88ef496d":"code","65d895c5":"code","07682818":"code","2d5a4519":"code","23721520":"code","fd96b83f":"code","b0f429ff":"code","825ff821":"code","48a40a3d":"code","177c545e":"code","5ead3831":"code","cda6feea":"code","35a1b14a":"code","5aec5a3a":"code","7bf7428e":"code","e68d5774":"code","5f057d9d":"code","0a0bf815":"code","26df6eb8":"code","2c1440ed":"code","776efd66":"code","4c3d813c":"code","eb8eda17":"code","67b9f654":"code","3b5e7623":"code","9ab9fcc2":"code","8410ca47":"code","f9a6c33d":"code","2ee376ed":"code","26956ae8":"code","4b8b7e6a":"code","8f29018f":"code","be69aa97":"code","7ef47818":"code","579ea1bd":"code","88d9ef69":"code","f5e27177":"code","d7b02f1b":"code","269f13b7":"code","6518d262":"code","fba12884":"code","eaf60e17":"code","55ef49de":"code","551fa02a":"code","362f10ec":"code","859192da":"code","bcfff6b0":"code","aae710db":"code","03aaaf7c":"code","ded312dd":"code","9a1fb1c2":"code","7fce693a":"code","a4264e6d":"code","bd09624c":"code","74fb4a5c":"code","aefb62d3":"code","1caade7c":"code","c92bcacd":"code","b5fb7391":"code","bb220167":"code","8e23721b":"code","4289ed80":"code","f7072475":"code","8910e6d6":"code","b9581369":"code","9e1e2907":"code","d3862018":"code","d746c6a8":"code","019035e0":"code","d8fb7d91":"markdown","3a2cd027":"markdown","c33a1e67":"markdown","bd462e09":"markdown","96975dd2":"markdown","553b034a":"markdown","d7c0e052":"markdown","0acc018a":"markdown","98452772":"markdown"},"source":{"88ef496d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","65d895c5":"train = pd.read_csv('..\/input\/train.csv')","07682818":"train.head()","2d5a4519":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","23721520":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=train,palette='RdBu_r')","fd96b83f":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Sex',data=train,palette='RdBu_r')","b0f429ff":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Pclass',data=train,palette='rainbow')","825ff821":"sns.distplot(train['Age'].dropna(),kde=False,color='darkred',bins=30)","48a40a3d":"train['Age'].hist(bins=30,color='darkred',alpha=0.7)","177c545e":"sns.countplot(x='SibSp',data=train)","5ead3831":"train['Fare'].hist(color='green',bins=40,figsize=(8,4))","cda6feea":"import cufflinks as cf\ncf.go_offline()","35a1b14a":"train['Fare'].iplot(kind='hist',bins=30,color='green')","5aec5a3a":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass',y='Age',data=train,palette='winter')","7bf7428e":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age","e68d5774":"train['Age'] = train[['Age','Pclass']].apply(impute_age,axis=1)","5f057d9d":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","0a0bf815":"train.drop('Cabin',axis=1,inplace=True)","26df6eb8":"train.head()","2c1440ed":"train.dropna(inplace=True)","776efd66":"train.info()","4c3d813c":"sex = pd.get_dummies(train['Sex'],drop_first=True)\nembark = pd.get_dummies(train['Embarked'],drop_first=True)","eb8eda17":"train.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","67b9f654":"train = pd.concat([train,sex,embark],axis=1)","3b5e7623":"train.head()","9ab9fcc2":"from sklearn.model_selection import train_test_split","8410ca47":"X_train, X_test, y_train, y_test = train_test_split(train.drop('Survived',axis=1), train['Survived'], test_size=0.30, random_state=101)","f9a6c33d":"from sklearn.linear_model import LogisticRegression","2ee376ed":"logmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)","26956ae8":"test = pd.read_csv('..\/input\/test.csv')","4b8b7e6a":"test.drop('Cabin',axis=1,inplace=True)","8f29018f":"test['Age'] = test[['Age','Pclass']].apply(impute_age,axis=1)","be69aa97":"test['Fare'].fillna((test['Fare'].mean()), inplace=True)","7ef47818":"sex = pd.get_dummies(test['Sex'],drop_first=True)\nembark = pd.get_dummies(test['Embarked'],drop_first=True)","579ea1bd":"test.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","88d9ef69":"test= pd.concat([test,sex,embark],axis=1)","f5e27177":"predictions = logmodel.predict(X_test)","d7b02f1b":"from sklearn.metrics import classification_report","269f13b7":"print(classification_report(y_test,predictions))","6518d262":"test_pred = logmodel.predict(test)","fba12884":"from sklearn.ensemble import RandomForestClassifier","eaf60e17":"rfmodel = RandomForestClassifier(n_estimators=300)","55ef49de":"rfmodel.fit(X_train, y_train)","551fa02a":"pred_rf = rfmodel.predict(X_test)","362f10ec":"print(classification_report(pred_rf, y_test))","859192da":"rfmodel.score(X_test, y_test)","bcfff6b0":"pred_results = rfmodel.predict(test)","aae710db":"test['Survived'] = pred_results","03aaaf7c":"submission = test[['PassengerId', 'Survived']]","ded312dd":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=5)","9a1fb1c2":"knn.fit(X_train, y_train)","7fce693a":"pred = knn.predict(X_test)\n","a4264e6d":"print(classification_report(y_test, pred))\n","bd09624c":"error_rate = []\n\nfor i in range(1,40):\n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train, y_train)\n    pred_i = knn.predict(X_test)\n    error_rate.append(np.mean(pred_i != y_test))","74fb4a5c":"plt.figure(figsize=[10,6])\nplt.plot(range(1,40),error_rate,color='blue', linestyle='dashed', marker='o',markerfacecolor='red', markersize=10)\nplt.title('Error Rate vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Error Rate')","aefb62d3":"\nknn = KNeighborsClassifier(n_neighbors=25)\nknn.fit(X_train, y_train)\npred = knn.predict(X_test)","1caade7c":"print(classification_report(y_test, pred))\n","c92bcacd":"#catboost\ntrain = pd.read_csv('..\/input\/train.csv')\ntest =  pd.read_csv('..\/input\/test.csv')","b5fb7391":"train.fillna(-999,inplace=True)\ntest.fillna(-999,inplace=True)","bb220167":"x = train.drop('Survived',axis=1)\ny = train.Survived","8e23721b":"x.dtypes","4289ed80":"cat_features_index = np.where(x.dtypes != float)[0]","f7072475":"import hyperopt\nfrom catboost import Pool, CatBoostClassifier, cv","8910e6d6":"model = CatBoostClassifier(eval_metric='Accuracy',use_best_model=True,random_seed=42)","b9581369":"X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.20, random_state=101)","9e1e2907":"model.fit(X_train,y_train,cat_features=cat_features_index,eval_set=(X_test,y_test))","d3862018":"from sklearn.metrics import accuracy_score\nprint('the test accuracy is :{:.6f}'.format(accuracy_score(y_test,model.predict(X_test))))","d746c6a8":"pred = model.predict(test)\npred = pred.astype(np.int)\nsubmission = pd.DataFrame({'PassengerId':test['PassengerId'],'Survived':pred})","019035e0":"submission.to_csv('catboost.csv',index=False)\n","d8fb7d91":"___\n# Data Cleaning\n","3a2cd027":"\n\n# Building a Logistic Regression model\n\n","c33a1e67":"Now let's check that heat map again!","bd462e09":"# Exploratory Data Analysis\n\n\n## Missing Data\n","96975dd2":"Let's move on to evaluate our model!","553b034a":"We can check precision,recall,f1-score using classification report!","d7c0e052":"## Evaluation","0acc018a":"## Converting Categorical Features \n","98452772":"## Training and Predicting"}}