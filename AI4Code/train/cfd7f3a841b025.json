{"cell_type":{"1f333a9c":"code","0f01ad6e":"code","58e65cec":"code","e78f60ae":"code","a00f9348":"code","bc330e02":"code","7bac79a8":"code","a8af7f22":"code","0e0d9b5c":"code","c5face3f":"code","0aac2f90":"code","73f76f25":"code","61746d00":"code","a2a93699":"code","cf044676":"code","74b3cf0b":"code","f21c209d":"code","f0b72e25":"code","20a71757":"code","d12c2578":"markdown","9e894f83":"markdown","3158b20e":"markdown"},"source":{"1f333a9c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0f01ad6e":"import glob, json\nroot_path = '\/kaggle\/input\/CORD-19-research-challenge\/2020-03-13'\nall_json = glob.glob(f'{root_path}\/**\/*.json', recursive=True)\nall_json","58e65cec":"data=pd.read_csv('\/kaggle\/input\/CORD-19-research-challenge\/2020-03-13\/all_sources_metadata_2020-03-13.csv')\nprint(data.shape)\ndata.head()","e78f60ae":"abstract=data['abstract'].dropna()\nabstract","a00f9348":"abstract=list(abstract)\nabstract","bc330e02":"publish=data['publish_time'].dropna()\npublish","7bac79a8":"journals=data['journal'].dropna()\njournals","a8af7f22":"#summary\ndata.describe()","0e0d9b5c":"# Nan values in all columns\ndata.isna().sum()","c5face3f":"#Titles\ntitle=data['title'].dropna()\ntitle","0aac2f90":"!git clone https:\/\/github.com\/amueller\/word_cloud.git","73f76f25":"import numpy as np\nimport pandas as pd\nfrom os import path\nfrom PIL import Image\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\nimport matplotlib.pyplot as plt","61746d00":"#c:\\intelpython3\\lib\\site-packages\\matplotlib\\__init__.py:\nimport warnings\nwarnings.filterwarnings(\"ignore\")","a2a93699":"# Create and generate a word cloud image:\nwordcloud = WordCloud().generate(abstract[0])\n\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","cf044676":"wordcloud = WordCloud(max_font_size=50, max_words=100, background_color=\"white\").generate(abstract[0])\nplt.figure()\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","74b3cf0b":"# Save the image in the img folder:\n#wordcloud.to_file(\"img\/first_review.png\")","f21c209d":"text = \" \".join(review for review in abstract)","f0b72e25":"print (\"There are {} words in the combination of all review.\".format(len(text)))","20a71757":"# Create stopword list:\nstopwords = set(STOPWORDS)\nstopwords.update([\"covid\", \"corona\", \"disease\", \"virus\", \"infection\"])\n\n# Generate a word cloud image\nwordcloud = WordCloud(stopwords=stopwords, background_color=\"white\").generate(text)\n\n# Display the generated image:\n# the matplotlib way:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","d12c2578":"**Import data**","9e894f83":"**For the first abstract**","3158b20e":"**JSON files**"}}