{"cell_type":{"646764de":"code","9e8b8f60":"code","1769de4c":"code","77d38ab7":"code","488694b8":"code","4c5c6b39":"code","cadbefa3":"code","dad70305":"code","3480c399":"code","063944e8":"code","6991b912":"code","26018f4d":"code","4b1167c6":"code","6174dba8":"code","4da94942":"code","978342b1":"markdown","2fb8d299":"markdown","cea0ce02":"markdown","7f645837":"markdown","9b2206a7":"markdown","9cc6441c":"markdown","c0236764":"markdown","cce37b0c":"markdown","d0a75d29":"markdown","2d244d66":"markdown","65689f12":"markdown"},"source":{"646764de":"! git clone https:\/\/gitlab.com\/smc\/msc\/","9e8b8f60":"import pandas as pd\nimport numpy as np\nimport os\nimport librosa\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n","1769de4c":"speech = pd.read_csv('msc\/speech.tsv', sep='\\t')\nsentences = pd.read_csv('msc\/sentences.tsv', sep='\\t')\nusers = pd.read_csv('msc\/users.tsv', sep='\\t')","77d38ab7":"speech.head()","488694b8":"sentences.head()","4c5c6b39":"users.head()","cadbefa3":"print(f\"{speech.shape[0]} sounds has been recorded by {users.shape[0]} users\")","dad70305":"speech.isnull().sum()","3480c399":"sentences.isnull().sum()","063944e8":"df = sentences.category.value_counts()\ncolors = [\"gold\", \"mediumturquoise\", \"darkorange\", \"lightgreen\"]\nfig = px.pie(df, df.index, df.values, labels={\"index\": \"Categories\"})\nfig.update_traces(\n    hoverinfo=\"label+percent\",\n    textinfo=\"value\",\n    textfont_size=20,\n    marker=dict(colors=colors, line=dict(color=\"#000000\", width=2)),\n)\nfig.update_layout(title=\"No of sentences belonging to each category in MSC dataset\")\n\nfig.show()","6991b912":"users_speech = pd.merge(speech, users, left_on='user', right_on='id')\nusers_speech.name.value_counts()[:15]","26018f4d":"sum = 0\nfilenames = os.listdir('audio\/')\nfor f in filenames:\n    y, sr = librosa.load(os.path.join('audio\/', f))\n    sum = sum + librosa.get_duration(y=y, sr=sr)","4b1167c6":"speech_sentences = pd.merge(speech, sentences, left_on='sentence', right_on='id')\ndf = speech_sentences.category.value_counts()\ncolors = [\"gold\", \"mediumturquoise\", \"darkorange\", \"lightgreen\"]\nfig = px.pie(df, df.index, df.values, labels={\"index\": \"Categories\"})\nfig.update_traces(\n    hoverinfo=\"label+percent\",\n    textinfo=\"value\",\n    textfont_size=20,\n    marker=dict(colors=colors, line=dict(color=\"#000000\", width=2)),\n)\nfig.update_layout(title=\"Categories of user utterances in MSC dataset\")\n\nfig.show()","6174dba8":"sound = speech[speech.vote != 'default']\nsound['vote'] = sound['vote'].astype(str).astype(float)\ngood_sound = sound[sound['vote']>=3]","4da94942":"good_sound = good_sound.reset_index()\nprint(\"No of good sound sampeles is\", good_sound.shape[0])\ngood_sound.head()","978342b1":"## Top 15 most contributed users to MSC","2fb8d299":"## Setup","cea0ce02":"## Peeking at the data","7f645837":"## Total time duration","9b2206a7":"# Exploratory Data Analysis","9cc6441c":"## fin.","c0236764":"## Checking for null values","cce37b0c":"- Fortunately there is no null values in our dataset","d0a75d29":"## Categories of Speech sentences","2d244d66":"## Sentences based on various categories","65689f12":"## Good quality speech \n\n- criteria: min 3 upvotes"}}