{"cell_type":{"c2d2d74d":"code","18917d47":"code","971d98b6":"code","86e18ec4":"code","d752aca7":"code","e021fac8":"code","570e0b36":"code","d66ada34":"code","0ab3c373":"code","3d7f0051":"code","5a163d20":"code","3fd156f6":"code","2418facc":"code","c8c50441":"code","4f563608":"code","3b0bc6aa":"code","0c98758d":"code","bdf21c59":"code","5aee3078":"code","b1030720":"code","ff6e7db7":"code","392e271e":"code","db53287f":"code","1ebd6186":"code","e7f19c36":"code","9cfac92a":"code","d67607c5":"code","a2abf5d6":"code","69469b71":"code","2ef4ec7d":"code","bfbcf83e":"code","a548e75b":"code","35ea72e2":"code","23cf9664":"code","2d12bdf9":"code","c0fd1a7d":"code","465ca6cc":"code","d89c86e7":"code","a85971a6":"code","bcf06559":"code","03838bf3":"code","cefdf0bc":"code","a30e6a16":"code","9bb77d8a":"code","203428b4":"code","d4326293":"code","cdc5690f":"code","3890abff":"code","08d771b2":"markdown","f90b057d":"markdown","fcc3838e":"markdown","99859ed1":"markdown","d0799384":"markdown","e3d0688d":"markdown","7552f303":"markdown","dc847f65":"markdown","70c0ea00":"markdown","43fafab0":"markdown","5adc653c":"markdown","b5b0225d":"markdown","dc30821f":"markdown","066925d1":"markdown","05320fc7":"markdown","d63f2986":"markdown"},"source":{"c2d2d74d":"import pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport re\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom scipy.stats import chi2_contingency\n","18917d47":"cd = pd.read_csv('\/kaggle\/input\/used-cars-dataset-from-cardekhocom\/Cardekho_Extract.csv')","971d98b6":"cd","86e18ec4":"cd.drop(['Source.Name', 'web-scraper-order', 'web-scraper-start-url','new-price' , 'owner_type'] , axis=1 , inplace=True)","d752aca7":"cd.isnull().sum()","e021fac8":"cd = cd.dropna(subset=['full_name'])","570e0b36":" cd.full_name = cd.full_name.apply(lambda x : x.split()[0])","d66ada34":"sp = []\nfor i in cd.selling_price:\n    if 'Lakh*' in i:\n        sp.append(eval(i.split()[0]))\n    elif 'Cr*' in i:\n        i=eval(i.split()[0])\n        i=i*10000000\/100000\n        sp.append(i)\n    else:\n        i = i.replace(\",\",'')\n        i=eval(i.split('*')[0])\n        i=i\/100000\n        sp.append(i)\n        \ncd.selling_price = sp","0ab3c373":"cd.km_driven = cd.km_driven.apply(lambda x : eval(x.replace(\",\",\"\").split()[0]))","3d7f0051":"cd.mileage = cd.mileage.apply(lambda x: x.replace('Mileage' , \"\").split()[0])\ncd.mileage = cd.mileage.apply(lambda x: eval(x))","5a163d20":"engine=[]\nfor i in cd.engine:\n    try:\n        result = eval(re.findall(r\"[-+]?\\d*\\.\\d+|\\d+\", i)[0])\n        engine.append(result)\n    except:\n        engine.append(None)\n        \ncd.engine = engine\n\n","3fd156f6":"power=[]\nfor i in cd.max_power:\n    try:\n        result = eval(re.findall(r\"[-+]?\\d*\\.\\d+|\\d+\", i)[0])\n        power.append(result)\n    except:\n        power.append(None)\n        \ncd.max_power = power","2418facc":"seats =[]\nfor i in cd.seats:\n    try:\n        result = eval(re.findall(r\"[-+]?\\d*\\.\\d+|\\d+\", i)[0])\n        seats.append(result)\n    except:\n        seats.append(None)\n        \ncd.seats = seats\n","c8c50441":"cd.engine.fillna(np.mean(cd.engine) , inplace=True)\ncd.seats.fillna(5 , inplace=True)\ncd.max_power.fillna(cd.max_power.min() , inplace=True)","4f563608":"import matplotlib.pyplot as plt\nimport seaborn as sns","3b0bc6aa":"plt.figure(figsize=(10,5))\nsns.heatmap(cd.corr() ,  cmap=\"YlGnBu\" , annot=True)","0c98758d":"plt.figure(figsize=(10,5))\nsns.boxplot(y='selling_price',x='fuel_type', data=cd)\nplt.title('Fuel Type vs Selling Price');","bdf21c59":"plt.figure(figsize=(10,5))\nsns.boxplot(y='engine',x='fuel_type', data=cd)\nplt.title('Fuel Type vs Engine');","5aee3078":"plt.figure(figsize=(10,5))\nsns.boxplot(y='engine',x='transmission_type', data=cd)\nplt.title(\"Transmission and Engine cc\")","b1030720":"plt.figure(figsize=(10,5))\nsns.boxplot(y='selling_price',x='transmission_type', data=cd)\nplt.title(\"Transmission and Engine cc\")","ff6e7db7":"plt.figure(figsize=(10,5))\nsns.boxplot(y='engine',x='seats', data=cd)\nplt.title(\"Transmission and Engine cc\")","392e271e":"plt.figure(figsize=(10,5))\nsns.boxplot(y='mileage',x='seats', data=cd)\nplt.title(\"Seats vs  Milage\")","db53287f":"plt.figure(figsize=(10,5))\nsns.boxplot(y='selling_price',x='seats', data=cd)\nplt.title(\"Seats vs  Selling Price\");","1ebd6186":"plt.figure(figsize=(10,5))\nsns.countplot(x='full_name' , data=cd, )\nplt.xticks(rotation=90);\nplt.title(\"Brands and no of items sold\");","e7f19c36":"numeric = cd[cd.select_dtypes(include=['number']).columns]","9cfac92a":"from statsmodels.stats.outliers_influence import variance_inflation_factor\nvif = pd.DataFrame()\nvif[\"vif_values\"] = [variance_inflation_factor(numeric.values , i ) for i in range (numeric.shape[1])]\nvif['Variables'] = numeric.columns","d67607c5":"vif","a2abf5d6":"from sklearn.preprocessing import LabelEncoder\nle =LabelEncoder()\ncd.full_name = le.fit_transform(cd.full_name)\ncd.seller_type = le.fit_transform(cd.seller_type)\ncd.fuel_type = le.fit_transform(cd.fuel_type)\ncd.transmission_type = le.fit_transform(cd.transmission_type)","69469b71":"cd","2ef4ec7d":"def remove_outliers(df , col , k):\n    mean= df[col].mean()\n    sd=df[col].std()\n    global df1\n    final_list = [x for x in df[col] if (x>mean-k*sd)]\n    final_list = [x for x in final_list if (x<mean+k*sd)]\n    df1 = df.loc[df[col].isin(final_list)];\n    return df1\n\ncd = remove_outliers(cd , 'selling_price' ,1)","bfbcf83e":"cd_linear_reg = cd.drop([ 'year','mileage', 'seats', 'engine'] , axis=1)","a548e75b":"from sklearn.model_selection import train_test_split","35ea72e2":"train , test = train_test_split(cd_linear_reg , test_size=0.2)\ntrain_x = train.drop(['selling_price'] , axis=1)\ntest_x = test.drop(['selling_price'] , axis=1)\ntrain_y = train.selling_price\ntest_y = test.selling_price","23cf9664":"from sklearn.linear_model import LinearRegression\nlin_reg = LinearRegression()\nlin_reg.fit(train_x , train_y)","2d12bdf9":"pred = lin_reg.predict(test_x)\nerror = pred- test_y\nmse = np.mean(np.square(error))\nmae = np.mean(np.abs(error*100\/test_y))","c0fd1a7d":"print(\"MSE :\" ,mse)\nprint(\"MAPE :\", mae)\nprint(\"Acuracy :\", 100 -mae)","465ca6cc":"np.mean(error)","d89c86e7":"plt.figure(figsize=(10,5))\nsns.histplot(error)\n","a85971a6":"print(\"Scatter Plot\")\nplt.figure(figsize=(5,5))\nplt.plot(error , \"*\")\nplt.axhline(y=np.mean(error) , color=\"red\")\n","bcf06559":"print(\"Regression Plot\")\nplt.figure(figsize=(5,5))\nsns.regplot(test_y , pred )","03838bf3":"from sklearn.linear_model import Lasso , Ridge , ElasticNet","cefdf0bc":"train , test = train_test_split(cd , test_size=0.2)\ntrain_x = train.drop(['selling_price'] , axis=1)\ntest_x = test.drop(['selling_price'] , axis=1)\ntrain_y = train.selling_price\ntest_y = test.selling_price","a30e6a16":"lasso = Lasso()\nlasso.fit(train_x , train_y)\npred = lasso.predict(test_x)\nerror = pred- test_y\nmse = np.mean(np.square(error))\nmae = np.mean(np.abs(error*100\/test_y))\nprint(\"MSE :\" ,mse)\nprint(\"MAPE :\", mae)\nprint(\"Acuracy :\", 100 -mae)","9bb77d8a":"np.mean(error)","203428b4":"print(\"Histogram\")\nplt.figure(figsize=(10,5))\nsns.histplot(error);","d4326293":"print(\"Scatter Plot\")\nplt.figure(figsize=(5,5))\nplt.plot(error , \"*\")\nplt.axhline(y=np.mean(error) , color=\"red\");","cdc5690f":"print(\"Regression Plot\")\nplt.figure(figsize=(5,5))\nsns.regplot(test_y , pred );","3890abff":"coeff_df = pd.DataFrame({\n    'Coeficient':lasso.coef_,\n    'Columns':train_x.columns\n})\ncoeff_df","08d771b2":"### Sampling for Lasso ","f90b057d":"#### Multicolinerity Check using VIF","fcc3838e":"# ---------------------------------------------------------------------------------------------------------------","99859ed1":"### Sampling for linear Regression ","d0799384":"\n<u> Here we can that the median price range of 2 seat cars are little high This might be becuase only high performance and 2 seater cars come in 2 seats section. Then median price increases from 4 seater to 7 seater cars and then it decreases from 8 to 10 <\/u>","e3d0688d":"# ---------------------------------------------------------------------------------------------------------------","7552f303":"## --------------------------------------------------------------------------------------------------------------------------------","dc847f65":"# Linear Regression","70c0ea00":"### Coverting Labeled Categorical to Nominal Values","43fafab0":"# Lasso","5adc653c":"### The data is in the row format and not usable now. We must remove unnessecary data and clean it so we can do EDA","b5b0225d":"### Linear Regression Model","dc30821f":"<u>Here we can see that most sold car brand is maruthi, followed by Hyundai, Honda, Mahindra, Tata and Ford<\/u>","066925d1":"# Data Cleaning","05320fc7":"# EDA","d63f2986":"### Features selected in Lasso are year, km_driven ,max_power, engine"}}