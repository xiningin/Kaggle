{"cell_type":{"9841538d":"code","7b9ac961":"code","97dd09b8":"code","6574ccc5":"code","27977f64":"code","39b420d2":"code","cd20f3e0":"code","6ce0e56f":"code","9471664d":"code","1b8d2fec":"code","042e2413":"code","3cf5f5f9":"code","a66b1211":"code","0875157c":"code","c502c265":"code","2a316f50":"markdown","ed7c240d":"markdown","cdbc2eac":"markdown","c99ad137":"markdown","bffc6492":"markdown","c2ad1b8f":"markdown","4902c206":"markdown","fcc51135":"markdown","63d618ce":"markdown","b1c2f7a5":"markdown","0b0f9827":"markdown","97194d9b":"markdown","929e0c76":"markdown"},"source":{"9841538d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","7b9ac961":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","97dd09b8":"train_data = pd.read_csv('..\/input\/train.csv')\ntest_data = pd.read_csv('..\/input\/test.csv')","6574ccc5":"train_data.info()","27977f64":"train_data.dropna(axis=0,how='any',inplace = True)","39b420d2":"train_data.describe()","cd20f3e0":"plt.scatter(x='x',y='y',data = train_data,color = 'green')\nplt.show()","6ce0e56f":"x = train_data.iloc[:,:1]\ny = train_data.iloc[:,:-1]","9471664d":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(x,y)","1b8d2fec":"test_data.info()","042e2413":"x_test = test_data.iloc[:,:1]\ny_test = test_data.iloc[:,:-1]","3cf5f5f9":"y_predict = lr.predict(x_test)","a66b1211":"from sklearn.metrics import mean_squared_error,r2_score\nmse = mean_squared_error(y_test, y_predict)\nr2 = r2_score(y_test, y_predict)","0875157c":"print(mse)\nprint(r2)","c502c265":"plt.figure(figsize=(10,7))\nplt.scatter(x = x_test, y = y_predict, color = 'green',label='Predicted')\nplt.scatter(x = x_test, y = y_test, color = 'red',label = 'Original')\nplt.legend()\nplt.show()","2a316f50":"And since, you can see the Original is just exact the Predicted and that is why, our model is correctly proven.","ed7c240d":"> **Upvote if you like it...**","cdbc2eac":"**Importing dataset**","c99ad137":"**Getting all information regarding train and test dataset**","bffc6492":"So, our model is ready and next thing is to predict the values...","c2ad1b8f":"Comapring with the help of Mean-Squared-Error and R2-score","4902c206":"Describing the data to get some insights on trained data...\nHere, you can see that count will now bw equal i.e. there is a value of y for an value of x.","fcc51135":"So, here can be a beautiful simple linear regression possible. Lets make the model then...","63d618ce":"And our model is unexpectedly undoubtable.\nplotting y_test and y_predict : ","b1c2f7a5":"For 700 values of x, one value is missing in y.\nSince that row is not needed to model our data, it is not needed at all. So, it is advisable to drop that.\nDropping that row first:","0b0f9827":"> Regarding Train dataset","97194d9b":"**Importing Libraries**","929e0c76":"Let's plot the columns to see any correlation"}}