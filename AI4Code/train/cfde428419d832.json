{"cell_type":{"87e9cfbc":"code","c73955da":"code","19ecf087":"code","03820ae3":"code","30491de7":"code","fbf24692":"code","7ec5cd7c":"code","13b63870":"code","89387643":"code","afd2ec7a":"code","3b8fa19e":"code","9e4fe64a":"code","e4525a9e":"code","bca168de":"code","377786f6":"code","2361397a":"code","bb6784bb":"code","4fb6f943":"code","cb108557":"code","743f807b":"code","34770208":"code","3bff4acd":"code","f63752ce":"code","bfbe5b7b":"code","f14e82e9":"code","98e4ddbe":"code","07d8efc2":"code","5d949f33":"code","cd91074a":"code","e7440cea":"code","a4492df9":"code","01d59262":"code","4fa87a1c":"code","be9bb001":"code","7cd33f33":"code","75027ec6":"markdown","2cb73185":"markdown","a3984788":"markdown","8a353266":"markdown","7fdc2850":"markdown","e7a31113":"markdown","840fd8e2":"markdown","39791b76":"markdown","b0269cb0":"markdown","3feeb181":"markdown","4f219435":"markdown","1a04a671":"markdown","4ebd9e39":"markdown","bc2fa000":"markdown","faec0829":"markdown","6cb5887b":"markdown","19bc6f77":"markdown","5ccd78c1":"markdown","442a2e85":"markdown","8a1e6bbe":"markdown","05e3ee69":"markdown","5953c259":"markdown","02e2a7a9":"markdown","f22305e8":"markdown","b87a0b1d":"markdown","2bdf62a6":"markdown","00127a7e":"markdown","3e42299a":"markdown","ea5cb070":"markdown","447ae320":"markdown","1903d007":"markdown","aa5aa3bc":"markdown","78bb3517":"markdown"},"source":{"87e9cfbc":"# Import Libraries for Analysis\nimport numpy as np\nimport pandas as pd\n\n# Import Libraries for visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Import libraries for train test split\nfrom sklearn.model_selection import train_test_split\n\n# import Ilbrary for Scaling\nfrom sklearn.preprocessing import StandardScaler\n\n# import Ilbrary for Model Building\nfrom sklearn.linear_model import LinearRegression\n\n# Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')","c73955da":"# Importing the dataset\ndf = pd.read_csv('\/kaggle\/input\/insurance-premium-prediction\/insurance.csv')\ndf.head(5)","19ecf087":"# Checking the info of data set\ndf.info()","03820ae3":"df.describe()","30491de7":"# creating a copy of the dataset\ndf_cpy = df.copy()","fbf24692":"# checking columns names\ndf_cpy.columns","7ec5cd7c":"# checking null values\ndf_cpy.isnull().sum()","13b63870":"plt.subplots(figsize=(15,7))  \n\nplt.subplot(1,2,1)         \ndf_cpy['expenses'].plot.box()\n\nplt.subplot(1,2,2)      \nplt.hist(df_cpy['expenses'], bins=20)\n\nplt.show()","89387643":"df_cpy.expenses.describe()","afd2ec7a":"df_cpy = df_cpy[df_cpy['expenses']< 50000]   \ndf_cpy.shape","3b8fa19e":"# checking the box plot again\nplt.subplots(figsize=(15,7))  \n\nplt.subplot(1,2,1)         \ndf_cpy['expenses'].plot.box()\n\nplt.subplot(1,2,2)      \nplt.hist(df_cpy['expenses'], bins=20)\n\nplt.show()","9e4fe64a":"# applying one-hot encoding on the categorical features \ndf_dummy= pd.get_dummies(df_cpy)","e4525a9e":"df_dummy","bca168de":"# We will first check the distribution of expenses by creating a distplot\n\nsns.distplot(df_dummy.expenses)\nplt.title(\"Expenses Distribution Plot\",fontsize=15)\nplt.show()","377786f6":"# Medical Expenses of male and female\nplt.figure(figsize=(10,5))\ndf_cpy.groupby(['sex'])['expenses'].mean().plot.bar()\nplt.ylabel('Average Medical Expense')\nplt.title(\"Average Expenses of Male and Female\",fontsize=18)\nplt.xticks(rotation = 0)\nplt.show()","2361397a":"# Medical Expenses of male and female\nplt.figure(figsize=(10,5))\ndf_cpy.groupby(['smoker'])['expenses'].mean().plot.bar()\nplt.ylabel('Average Medical Expense')\nplt.title(\"Average Expenses of a smoker and Non-smoker\",fontsize=18)\nplt.xticks(rotation = 0)\nplt.show()","bb6784bb":"# Medical Expenses of male and female\nplt.figure(figsize=(10,5))\ndf_cpy.groupby(['region'])['expenses'].mean().plot.bar()\nplt.ylabel('Average Medical Expense')\nplt.title(\"Average Expenses of people of different region\",fontsize=18)\nplt.xticks(rotation = 0)\nplt.show()","4fb6f943":"# Plot a pair plot\nplt.figure(figsize=(10,15))\nsns.pairplot(df_cpy)\nplt.show()","cb108557":"plt.figure(figsize=(10,5))\nsns.heatmap(df_dummy.corr(),annot=True) ","743f807b":"# at first let's create a copy of our data to use in model building\ndf_2 = df_dummy.copy()\ndf_2.head()","34770208":"# Seperating Dependent and Independent Variables\n\ny = df_2.pop('expenses')\nX = df_2","3bff4acd":"print(X.shape)\nprint(y.shape)","f63752ce":"# Spliting data into train and test sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 42)","bfbe5b7b":"# Shape of train set\nprint(X_train.shape)\n\n# Shape of test set\nprint(X_test.shape)","f14e82e9":"print(y_train.shape)\nprint(y_test.shape)","98e4ddbe":"X_train","07d8efc2":"y_train","5d949f33":"X_test","cd91074a":"y_test","e7440cea":"# using multiple linear regression\nreg = LinearRegression()\nreg.fit(X_train, y_train)","a4492df9":"# Age vs Expenses\nplt.subplots(figsize=(15,6))  \n\nplt.subplot(1,2,1)\nplt.scatter(df_cpy['age'], y, color = 'red')\nplt.scatter(df_cpy['age'], reg.predict(X), color = 'blue')\nplt.title('Actual Expenses and Predicted Expenses', fontsize = 16)\nplt.xlabel('Age', fontsize = 14)\nplt.ylabel('Expenses',fontsize = 14)\n\n# BMI vs Expenses\nplt.subplot(1,2,2)\nplt.scatter(df_cpy['bmi'], y, color = 'red')\nplt.scatter(df_cpy['bmi'], reg.predict(X), color = 'blue')\nplt.title('Actual Expenses and Predicted Expenses', fontsize = 16)\nplt.xlabel('BMI', fontsize = 14)\nplt.ylabel('Expenses',fontsize = 14)\nplt.show()","01d59262":"# checking the model\nreg.score(X_test,y_test)","4fa87a1c":"from sklearn.preprocessing import PolynomialFeatures\npoly_reg = PolynomialFeatures(degree = 3)\nX_poly = poly_reg.fit_transform(X_train)\nreg_2 = LinearRegression()\nreg_2.fit(X_poly, y_train)\nprint(X_poly)","be9bb001":"# Plotting a scatter plot to show the real values and the predicted values of Expenses using our Model\nplt.subplots(figsize=(15,6))  \n\n# Age vs Expenses\nplt.subplot(1,2,1)\nplt.scatter(df_cpy['age'], y, color = 'red')\nplt.scatter(df_cpy['age'], reg_2.predict(poly_reg.fit_transform(X)), color = 'blue')\nplt.title('Actual Expenses and Predicted Expenses', fontsize = 16)\nplt.xlabel('Age', fontsize = 14)\nplt.ylabel('Expenses', fontsize = 14)\n\n# BMI vs Expenses\nplt.subplot(1,2,2)\nplt.scatter(df_cpy['bmi'], y, color = 'red')\nplt.scatter(df_cpy['bmi'], reg_2.predict(poly_reg.fit_transform(X)), color = 'blue')\nplt.title('Actual Expenses and Predicted Expenses', fontsize = 16)\nplt.xlabel('BMI', fontsize = 14)\nplt.ylabel('Expenses', fontsize = 14)\nplt.show()","7cd33f33":"reg_2.score(poly_reg.fit_transform(X_test), y_test)","75027ec6":"#### Using\n#### y_pred = reg_2.predict(poly_reg.fit_transform(X_sample))\n#### we can predict the medical expenses of a person and hence can predict the Insurance Premium amount according to the predicted medical expenses.","2cb73185":"### Checking the relationship between different features","a3984788":"Checking sizes of data to know whether they are split correctly ","8a353266":"Average medical expense of male is greater than females","7fdc2850":"### Polynomial Regression model","e7a31113":"Therefore the multiple linear regression model we created is able to predict the results with an **accuracy of 76%**\n\n**Let's make another model for the given data using Polynomial Regression with better acccuracy**","840fd8e2":"Medical Expense of an smoker is much more than a person who doesn't smoke","39791b76":"There are no null values in our dataset","b0269cb0":"## Model Evaluation","3feeb181":"The last thing left in Data Preparation is Outlier Treatment. So lets create Box plot for Expenses and check for Outliers","4f219435":"## Data Cleaning and Preparation","1a04a671":"### Treating Categorical data\n\nHere we have 3 columns having categorical values and 4 columns have numerical values, Before proceeding further, we have to convert categorical values into numerical values.","4ebd9e39":"Since **the polynomial regression model is predicting result with accuracy 85%, it is better than the previous model**\n\n**The model generated can be used for predicting medical expenses, using which we can predict our Insurance Premium amount.**","bc2fa000":"Here the red points indicates actual expenses and the blue points indicate predicted Expenses.","faec0829":"Splitting the dataset into the Training set and Test set using train_test_split","6cb5887b":"There are few entries in which expenses are way far from other expenses. They might effect the prediction, so we have to eliminate them.","19bc6f77":"There are no probable correlation between the various feature of our data.\nOnly 'Smoker' feature has maximum correlation to the target","5ccd78c1":"## Model Building","442a2e85":"As we can see **most of the predicted values are very near to the actual value of Expenses**, and **It is predicting values better than the previos model** which shows that **it is better than the previous model**, Let's check it's accuracy too.","8a1e6bbe":"There are 1338 rows and 7 columns in the data set provided","05e3ee69":"Data is randomly distributed, mostly people have their medical expenses below 30000, Small number of people have their medical expenses between 30000 to 50000","5953c259":"## Outline: -\n1. Import Dataset\n2. Data Cleaning and Data Preparation\n3. Exploratory Data Analysis\n5. Train Test Split\n6. Model Building\n7. Model Evaluation","02e2a7a9":"As we can see **many predicted values are very different from the actual values**, therefore let's check it's accuracy.","f22305e8":"As can be seen the max value is way more than mean , median . Therefore according to the box plot, let's delete the rows that has expenses > 50000","b87a0b1d":"Lets visualize correlation coefficients using heatmap","2bdf62a6":"## Train Test Split","00127a7e":"All the columns names are in lowercase letters, and there are no extra spaces in column names","3e42299a":"<h1 align='center' style='color:black'><b>Insurance premium Prediction<\/b><\/h1>\n<h2 align='center' style='color:black'><b>by predicting Medical Expenses<\/b><\/h2>","ea5cb070":"### Visualising the Model","447ae320":"### Visualising the model\nLet's Plot a scatter plot to show the real values and the predicted values of Expenses using our Model\nSince we have two numerical values in our initial data, i.e BMI and Age, we will use that in visualising the predicted results","1903d007":"## General Description: -\nThe dataset is retrieved from Machine Learning Website by Professor Eric Suess at http:\/\/www.sci.csueastbay.edu\/~esuess\/stat6620\/#week-6. \nThe insurance.csv dataset contains 1338 observations (rows) and 7 features (columns). The dataset contains 4 numerical features (age, bmi, children and expenses) and 3 nominal features (sex, smoker and region) that were converted into factors with numerical value designated for each level.\n\n## Aim: -\nThe purposes of this exercise to look into different features to observe their relationship, and plot a regression model based on several features of individual such as age, physical\/family condition and location against their existing medical expense to be used for predicting future medical expenses of individuals that will help medical insurance company to make decision on charging the premium","aa5aa3bc":"All the data points above the 75% line are very close to each other so leaving it as is.","78bb3517":"##  Exploratory Data Analysis"}}