{"cell_type":{"e5501fb3":"code","d452e778":"code","14edafa7":"code","d4f27d52":"code","cd7ab42f":"code","24005e94":"code","db86251f":"code","9bdf120c":"code","67114ce5":"code","dedd94fc":"code","3a506ecf":"code","389b6c7a":"code","d6df3c7c":"code","7a4333ae":"code","fc18d4d4":"code","4bf080ca":"code","3b0cf2dd":"code","86ac01ac":"code","c98a5b78":"code","2dc315c3":"code","2b83dfb1":"code","d4577776":"code","6e6ff4e1":"code","abdb0534":"code","06350344":"code","8ef7f687":"code","ab5eeaef":"code","a61f247a":"code","02690bc9":"code","d71bbb9c":"code","6fc872b8":"code","379d025d":"code","0b251e2a":"code","7d98e8f7":"code","c9633d90":"code","3701124d":"markdown","0ddfd81d":"markdown","a1dd9409":"markdown","5fb282a5":"markdown","a3336e1c":"markdown","96f72310":"markdown","49ddb884":"markdown","a58ab8f4":"markdown","ad008b5e":"markdown","65105815":"markdown"},"source":{"e5501fb3":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)data\n\ndata=pd.df = pd.read_csv('\/kaggle\/input\/customer-personality-analysis\/marketing_campaign.csv', sep='\\t')\n","d452e778":"data.head()","14edafa7":"#determinate missing values\ndata.isnull().sum()\n","d4f27d52":"mean=data['Income'].mean(skipna=True)\nmean","cd7ab42f":"#missing values handling\ndata.loc[data['Income'].isnull(),['Income']]=mean\n#check\ndata.isnull().sum()","24005e94":"#birthday to age\ndata['Year_Birth']=2021-data['Year_Birth']","db86251f":"#Total campaign participation\ndata['Total_Camp']=data['AcceptedCmp1']+data['AcceptedCmp2']+data['AcceptedCmp3'] +data['AcceptedCmp4']+data['AcceptedCmp5'] +data['Response']\n","9bdf120c":"#total child\ndata['Total_child']=data['Kidhome'] +data['Teenhome']","67114ce5":"data['Education'].value_counts()","dedd94fc":"\ndata['Education']=data['Education'].str.replace('Graduation','Higher Education')\ndata['Education']=data['Education'].str.replace('PhD','Higher Education')\ndata['Education']=data['Education'].str.replace('Master','Higher Education')\ndata['Education']=data['Education'].str.replace('2n Cycle','Higher Education')\n","3a506ecf":"data['Education'].value_counts()","389b6c7a":"data['Marital_Status'].value_counts()","d6df3c7c":"data['Marital_Status']=data['Marital_Status'].str.replace('Married','In A Relationship')\ndata['Marital_Status']=data['Marital_Status'].str.replace('Together','In A Relationship')\ndata['Marital_Status']=data['Marital_Status'].str.replace('Divorced','Single')\ndata['Marital_Status']=data['Marital_Status'].str.replace('Widow','Single')\ndata['Marital_Status']=data['Marital_Status'].str.replace('Alone','Single')\ndata['Marital_Status']=data['Marital_Status'].str.replace('Absurd','Single')\ndata['Marital_Status']=data['Marital_Status'].str.replace('YOLO','Single')","7a4333ae":"data['Marital_Status'].value_counts()","fc18d4d4":"data['Total_Spending']=data['MntWines']+data['MntFruits']+data['MntMeatProducts'] + data['MntFishProducts']+ data['MntSweetProducts']+data['MntGoldProds'] ","4bf080ca":"data.head()","3b0cf2dd":"import numpy as np \nfrom scipy import stats\nprint(data.shape)\n\ndata=data.loc[np.abs(stats.zscore(data['Income']))<3]\ndata.reset_index(inplace=True)\ndata=data.drop(columns=['index'])  \ndata.shape","86ac01ac":"data.columns","c98a5b78":"choosen_col=['Year_Birth', 'Education', 'Marital_Status', 'Income','Recency'\n             , 'NumDealsPurchases', 'NumWebPurchases','NumCatalogPurchases', \n             'NumStorePurchases', 'NumWebVisitsMonth', 'Complain','Total_Camp', 'Total_child','Total_Spending']","2dc315c3":"data=data[choosen_col]\ndata.head()","2b83dfb1":"pd.set_option('mode.chained_assignment',None)\nfrom sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\ndata['Marital_Status']=data[['Marital_Status']].apply(le.fit_transform)\ndata['Education']=data[['Education']].apply(le.fit_transform)\ndata.head()\n\n","d4577776":"from sklearn.preprocessing import StandardScaler\nstandartSc=StandardScaler()\ndata_np=standartSc.fit_transform(data)\ndata_np","6e6ff4e1":"#k-means\nfrom sklearn.cluster import KMeans\n\nimport matplotlib.pyplot as plt\ncenters=[]\nfor i in range(1,11):\n    k_mean=KMeans(n_clusters=i,random_state=0,init=\"k-means++\")\n    k_mean.fit(data_np)\n    centers.append(k_mean.inertia_)  \n    # Sum of squared distances of samples to their closest cluster center. wss\n\n\nplt.plot(range(1,11),centers)\nplt.scatter(range(1,11),centers,color=\"orange\")","abdb0534":"\nkm=KMeans(n_clusters=4,random_state=0,init=\"k-means++\")","06350344":"km.fit(data_np)\nclusters=km.predict(data_np)\nclusters","8ef7f687":"data['cluster']=clusters\ndata.head()","ab5eeaef":"plt.hist(clusters,bins=4,edgecolor='black')","a61f247a":"data.loc[data['cluster']== 0,['Income']].mean()\n","02690bc9":"\ncols=['Income','Recency' , 'NumDealsPurchases', 'NumWebPurchases',\n             'NumCatalogPurchases', 'NumStorePurchases','Total_Camp' ,'Total_Spending']\nfor col in cols:\n    p0=data.loc[data['cluster']== 0 ,[col] ]\n    p1=data.loc[data['cluster']== 1 ,[col] ]\n    p2=data.loc[data['cluster']== 2,[col] ]\n    p3=data.loc[data['cluster']== 3 ,[col] ]\n\n    fig, axs = plt.subplots(1, 4, sharey=True, tight_layout=True)\n    fig.tight_layout(pad=3.0)\n    fig.suptitle(col)\n    \n    axs[0].hist(p0,bins=10,  alpha=.5,edgecolor='black')\n    axs[1].hist(p1,bins=10,alpha=.5,edgecolor='black',color='purple')\n    axs[2].hist(p2,bins=10,alpha=.5,edgecolor='black',color='green')\n    axs[3].hist(p3,bins=10,alpha=.5,edgecolor='black',color='pink')\n\n    axs[0].set_xlabel('Cluster 0')\n    axs[1].set_xlabel('Cluster 1')\n    axs[2].set_xlabel('Cluster 2')\n    axs[3].set_xlabel('Cluster 2')\n    \n    plt.show()\n\n","d71bbb9c":"print(\"Cluster 0 Total Spending: \", data.loc[data['cluster']== 0 ,['Total_Spending'] ].mean()['Total_Spending'])\nprint(\"Cluster 1 Total Spending: \",data.loc[data['cluster']== 1 ,['Total_Spending'] ].mean()['Total_Spending'])\nprint(\"Cluster 2 Total Spending: \",data.loc[data['cluster']== 2 ,['Total_Spending'] ].mean()['Total_Spending'])\nprint(\"Cluster 3 Total Spending: \",data.loc[data['cluster']== 3 ,['Total_Spending'] ].mean()['Total_Spending'])\n","6fc872b8":"print(\"Cluster 0 Income: \",data.loc[data['cluster']== 0 ,['Income'] ].mean()['Income'])\nprint(\"Cluster 1 Income: \",data.loc[data['cluster']== 1 ,['Income'] ].mean()['Income'])\nprint(\"Cluster 2 Income: \",data.loc[data['cluster']== 2 ,['Income'] ].mean()['Income'])\nprint(\"Cluster 3 Income: \",data.loc[data['cluster']== 3 ,['Income'] ].mean()['Income'])\n","379d025d":"plt.scatter(data['Income'],data['Total_Spending'],c=clusters, cmap='viridis')","0b251e2a":"data['cluster'].value_counts()\n","7d98e8f7":"#pd.DataFrame(columns=['Costumer Types', 'Num_C\u0131stumer'],data=data['cluster'].value_counts()[[2,0,1,3]])\ncustomers=pd.DataFrame({'Customer Types':[ 'Four Stars','Three Stars','Two Stars','One Stars'],\n              'Num_Customer':data['cluster'].value_counts()[[2,0,1,3]]},index=[0,1,2,3])\ncustomers","c9633d90":"p=plt.pie(customers['Num_Customer'], \n        labels = customers['Customer Types'],\n        autopct='%1.1f%%',\n        startangle=180)\n","3701124d":"# **CLEANING OUTL\u0130ERS**","0ddfd81d":"# **STANDARD SCALE**","a1dd9409":"# **MISSING VALUES**","5fb282a5":"# **DETERMINING THE SUITABLE NUMBER OF CLUSTER NUMBER**","a3336e1c":"# **K-MEANS**","96f72310":"# **CHOOSE COLUMNS**","49ddb884":"# **EVALUATION OF THE RESULT**","a58ab8f4":"\n**Four Stars Customers :** having high income and high spending habits costumers. Cluster 2 <br>\n**Three Stars Customers:** having good income and good spending habits costumers. Cluster 0<br>\n**Two Stars Customers  :** having middle income and middle spending habits costumers. Cluster 3<br>\n**One Stars Customers  :** having low income and low spending habits costumers.Cluster 1<br>\n\n","ad008b5e":"# **ORGANIZING DATA**","65105815":"# **CONVERTING TEXT DATA TO NUMERIC DATA**"}}