{"cell_type":{"c90bbb3f":"code","eed0af72":"code","570f2d56":"code","1ecc535a":"code","9db827e1":"code","f34e54e0":"code","3d8acde2":"code","7c81db75":"code","e3495922":"code","661216e9":"code","5c435a22":"code","8279fed1":"code","2e443856":"code","7000d0cd":"code","2e3cfc62":"code","397db76a":"code","1990ed55":"code","601e57bd":"code","51f0a473":"code","8d48e637":"code","fb27c478":"code","13a246ea":"code","2cc5916a":"code","d1201a37":"code","c3c0c3f1":"code","787c8b0a":"code","b63cce43":"code","5e887646":"code","5cba685e":"code","23227de8":"markdown","69925244":"markdown","63686414":"markdown","b2a4db5f":"markdown","bbefd2f0":"markdown","fdc895ee":"markdown"},"source":{"c90bbb3f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","eed0af72":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\nimport pandas as pd\nimport numpy as np\nimport plotly\nimport plotly.express as px\nimport plotly.graph_objs as go\nimport plotly.offline as py\nfrom plotly.offline import iplot\nfrom plotly.subplots import make_subplots\nimport plotly.figure_factory as ff","570f2d56":"df=pd.read_csv(\"..\/input\/udemy-courses\/udemy_courses.csv\")","1ecc535a":"df.sample(7)","9db827e1":"df.info()","f34e54e0":"df.shape","3d8acde2":"df.describe()","7c81db75":"df.describe(include=\"object\")","e3495922":"df[\"date\"]= df.published_timestamp.astype(\"datetime64\")","661216e9":"df=df.drop([\"course_id\",\"url\",\"published_timestamp\"],axis=1)","5c435a22":"sns.histplot(data=df,x=\"price\",kde=True);","8279fed1":"sns.histplot(data=df,x=\"num_subscribers\",bins=40);","2e443856":"np.round(df['subject'].value_counts(normalize=True),2)","7000d0cd":"df['year']= df['date'].dt.year\nsubject_by_year = df.groupby('year')['subject'].value_counts().reset_index(level=0).rename(columns={'subject': 'subject count'}, index={'index': 'Subject'})\nsubject_by_year","2e3cfc62":"df1 = df.groupby('year')[['num_subscribers','num_reviews','num_lectures']].sum().reset_index()\ndf1","397db76a":"plt.figure(figsize=(10,6))\nsns.histplot(data=df,x=\"content_duration\",bins=50)","1990ed55":"sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True);","601e57bd":"sns.heatmap(df.corr()[[\"price\"]], cmap=\"coolwarm\", annot=True);","51f0a473":"df[\"year\"]= df.date.dt.year","8d48e637":"subject_year = df.groupby(\"year\")[\"subject\"].count()\nsubject_year","fb27c478":"px.histogram(df,x=\"num_lectures\")","13a246ea":"px.box(df ,x=\"price\",y=\"subject\")","2cc5916a":"px.histogram(df,x=\"year\",y=\"num_subscribers\")","d1201a37":"top_15_paid_courses = df[df['price']!=0][['course_title','year','subject','num_subscribers']].sort_values(by= 'num_subscribers',ascending=False).head(15)\ntop_15_paid_courses","c3c0c3f1":"px.bar(data_frame=top_15_paid_courses,y=\"num_subscribers\",x=\"course_title\")","787c8b0a":"top_15_free_courses = df[df['price']==0][['course_title','year','subject','num_subscribers']].sort_values(by= 'num_subscribers',ascending=False).head(15)\ntop_15_free_courses","b63cce43":"px.histogram(data_frame=top_15_free_courses,x=\"subject\",y=\"num_subscribers\")","5e887646":"top_15_reviewed = df[['course_title','year','subject','is_paid','num_reviews']].sort_values(by='num_reviews', ascending=False).head(15)\ntop_15_reviewed","5cba685e":"top_15_price = df[['course_title','year','subject','num_subscribers', 'price']].sort_values(by=['price','num_subscribers'], ascending=False).head(15)\n\ntop_15_price","23227de8":"### Top 15 Reviewed Courses","69925244":"### Top 15 Expensive Courses","63686414":"### UDEMY Courses By Subject in Each Year","b2a4db5f":"### Price-Subject (with BoxPlot)","bbefd2f0":"### Top Free Courses","fdc895ee":"### Top Paid Courses"}}