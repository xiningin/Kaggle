{"cell_type":{"6478d92e":"code","1e5906c4":"code","1731fc5f":"code","c22abd6c":"code","e3f2c514":"code","cf80f222":"code","3af977a7":"code","ecd14a48":"code","f1853dd3":"code","640a9ac2":"code","e1226214":"code","c013221a":"code","35b268fa":"code","90c47768":"code","b33b5e81":"code","0d4fd6f1":"code","08d8bc44":"code","cec3be45":"code","4020b7c3":"markdown"},"source":{"6478d92e":"import tensorflow as tf","1e5906c4":"from tensorflow import keras","1731fc5f":"from tensorflow.keras.preprocessing import image_dataset_from_directory","c22abd6c":"train_data_url=(r\"..\/input\/covid19-image-dataset\/Covid19-dataset\/train\")\ntest_data_url=(r\"..\/input\/covid19-image-dataset\/Covid19-dataset\/test\")","e3f2c514":"train_data = image_dataset_from_directory(directory='..\/input\/covid19-image-dataset\/Covid19-dataset\/train',\n                                          batch_size=5,\n                                          image_size=(256, 256))","cf80f222":"test_data = image_dataset_from_directory(directory='..\/input\/covid19-image-dataset\/Covid19-dataset\/test',\n                                          batch_size=5,\n                                          image_size=(256, 256))","3af977a7":"class_names=train_data.class_names\nprint(class_names)","ecd14a48":"class_names=train_data.class_names\nprint(class_names)\nclass_names=test_data.class_names\nprint(class_names)","f1853dd3":"import matplotlib.pyplot as plt\nimport numpy as np","640a9ac2":"plt.figure(figsize=(10,10))\nfor images, labels in train_data.take(1):\n    for i in range(4):\n        ax=plt.subplot(2,2,i+1)\n        plt.imshow(images[i].numpy().astype(\"uint8\"))\n        plt.title(class_names[labels[i]])\n        plt.axis(\"off\")","e1226214":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras import layers\nfrom tensorflow import keras\nfrom tensorflow.keras.preprocessing import image","c013221a":"num_classes = 3\n\nmodel = Sequential([\n  layers.experimental.preprocessing.Rescaling(1.\/255,input_shape=(256, 256, 3)),\n  layers.Conv2D(16, 3, padding='same', activation='relu'),\n  layers.MaxPooling2D(),\n  layers.Conv2D(32, 3, padding='same', activation='relu'),\n  layers.MaxPooling2D(),\n  layers.Conv2D(64, 3, padding='same', activation='relu'),\n  layers.MaxPooling2D(),\n  layers.Conv2D(128, 3, padding='same', activation='relu'),\n  layers.MaxPooling2D(),\n  layers.Flatten(),\n  layers.Dense(128, activation='sigmoid'),\n  layers.Dense(num_classes)\n])","35b268fa":"model.compile(optimizer='adam',\n              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),\n              metrics=['accuracy'])","90c47768":"model.summary()","b33b5e81":"epochs=10\nhistory = model.fit(\n  train_data,\n  validation_data=test_data,\n  epochs=epochs\n)","0d4fd6f1":"test_img=r\"..\/input\/covid19-image-dataset\/Covid19-dataset\/test\/Covid\/COVID-00003b.jpg\"\nimg=keras.preprocessing.image.load_img(test_img, target_size=(256, 256))\nimg_array = keras.preprocessing.image.img_to_array(img)\nimg_array = tf.expand_dims(img_array, 0) \n\npredictions = model.predict(img_array)\nscore = tf.nn.softmax(predictions[0])","08d8bc44":"print(score)","cec3be45":"print(\n    \"Image looking {} at most {:.2f} %\"\n    .format(class_names[np.argmax(score)], 100 * np.max(score)))","4020b7c3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session"}}