{"cell_type":{"f0a2d1f5":"code","471842ea":"code","9deb09b6":"code","987e3d67":"code","96a9a107":"code","c3efe763":"code","4f94384e":"code","d935c39f":"code","fb25e000":"code","f376bda9":"code","40ca61ea":"code","6dbc9f3a":"code","7a10e243":"code","23e1bb85":"markdown","225a8f7d":"markdown","95bea380":"markdown","324c3622":"markdown","243d65f2":"markdown","de6170d7":"markdown","b8750db9":"markdown","9661221f":"markdown","117a7ba8":"markdown","01fa14bf":"markdown"},"source":{"f0a2d1f5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n%matplotlib inline\nimport random\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.colors import n_colors\nfrom plotly.subplots import make_subplots\ninit_notebook_mode(connected=True)\nimport cufflinks as cf\ncf.go_offline()\nfrom wordcloud import WordCloud , ImageColorGenerator\nfrom PIL import Image\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport matplotlib.pyplot as plt\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","471842ea":"df = pd.read_csv('..\/input\/indian-food-101\/indian_food.csv')\ndf=df.replace(-1,np.nan)\ndf=df.replace('-1',np.nan)\ndf.head()\n","9deb09b6":"df.columns","987e3d67":"df.shape","96a9a107":" pd.isnull(df).sum()","c3efe763":"reg_df = df.region.value_counts().reset_index()\nreg_df.columns = ['region','count']\nreg_df = reg_df.sample(frac=1)\nfig = px.bar(reg_df,x='region',y='count',title='Number of dishes based on regions',\n             color_discrete_sequence=['#316394'])\nfig.show()","4f94384e":"flavor_df = df.flavor_profile.value_counts().reset_index()\nflavor_df.columns = ['flavor_profile','count']\nflavor_df = flavor_df.sample(frac=1)\nfig = px.bar(flavor_df,x='flavor_profile',y='count',title='Number of dishes based on flavor',\n             color_discrete_sequence=['#316394'])\nfig.show()\n","d935c39f":"\npie_df = df.flavor_profile.value_counts().reset_index()\npie_df.columns = ['flavor','count']\nfig = px.pie(pie_df, values='count', names='flavor', title='Proportion of Flavor Profiles',\n             color_discrete_sequence=['#FF7F0E', '#00B5F7','#AB63FA','#00CC96'])\nfig.show()","fb25e000":"flavor_profile_list = ['sweet', 'spicy']\n\nimport geopandas as gpd\n\n\nfor flavor_profile in flavor_profile_list:\n    shp_gdf = gpd.read_file('..\/input\/india-gis-data\/India States\/Indian_states.shp')\n    profile = df[df['flavor_profile']==flavor_profile]\n    prof_df = profile.state.value_counts().reset_index()\n    prof_df.columns = ['state','count']\n    merged = shp_gdf.set_index('st_nm').join(prof_df.set_index('state'))\n    fig, ax = plt.subplots(1, figsize=(10, 10))\n    ax.axis('off')\n    ax.set_title('State-wise Distribution of flavor:'+ str(flavor_profile),\n                 fontdict={'fontsize': '15', 'fontweight' : '3'})\n    fig = merged.plot(column='count', cmap='Wistia', linewidth=0.5, ax=ax, edgecolor='0.2',legend=True)\n\n   ","f376bda9":"word_spicy_df  = df[(df['flavor_profile']=='spicy')].reset_index()\n\ningredients = []\nfor i in range(0,len(dessert_df)):\n    text = word_spicy_df['ingredients'][i].split(',')\n    text = ','.join(text)\n    ingredients.append(text)\n    text = ' '.join(ingredients)\n\nwordcloud = WordCloud(width = 400, height = 400, background_color ='white', \n                min_font_size = 10).generate(text)                  \nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off') \nplt.show()","40ca61ea":"mah_df = df[df['state']=='Maharashtra']\n\ntotal_dishes = mah_df.shape[0]\n\ncourse_df = mah_df['course'].value_counts().reset_index()\ncourse_df.columns = ['course','num']\n\ndiet_df = mah_df['diet'].value_counts().reset_index()\ndiet_df.columns = ['diet','num']\n\nfig = make_subplots(\n    rows=2, cols=2,subplot_titles=('Total Dishes','Dishes by Courses','', ''),\n    specs=[[{'type': 'indicator'},{'type': 'bar','rowspan': 2} ],\n          [ {'type': 'pie'} , {'type': 'pie'}]])\n\nfig.add_trace(go.Indicator(\n    mode = 'number',\n    value = int(total_dishes),\n    number={'font':{'color': 'blue','size':50}},\n),row=1, col=1)\n\n\nfig.add_trace(go.Bar(\n    x=course_df['course'],y=course_df['num'],\n    marker={'color': 'orange'},  \n    text=course_df['num'],\n    name='dishes by courses',\n    textposition ='auto'),row=1, col=2)\n\nfig.add_trace(go.Pie(labels=diet_df['diet'], \n                     values=diet_df['num'],textinfo='percent',\n                    marker= dict(colors=['green','red'])),row=2, col=1)\n\n\nfig.update_layout(\n    title_text='Maharashtra Food-Mini Infograph',template='plotly',\n    title_x=0.5)\n\nfig.show()","6dbc9f3a":"snack_df = df[df['course']=='snack']\n\nshort_sort_snack_df = snack_df.sort_values(['cook_time'],ascending=True).iloc[:10,:]\n\nfig = px.bar(short_sort_snack_df,y='name',x='cook_time',\n             orientation='h',color='cook_time',\n            labels={'name':'Name of snack','cook_time':'Cooking time (minutes)'})\nfig.show()","7a10e243":"long_sort_snack_df = snack_df.sort_values(['cook_time'],ascending=False).iloc[3:13,:]\n\nfig = px.bar(long_sort_snack_df,y='name',x='cook_time',\n             orientation='h',color='cook_time',\n            labels={'name':'Name of snack','cook_time':'Cooking time (minutes)'})\nfig.show()","23e1bb85":"# Let us visualize prominant cuisine and favor profile of each state  ","225a8f7d":"# For Maharashtra state mini - info ","95bea380":"so we have 255 rows and 9 coloumns.\nLet us check if any of the entries are null.\n","324c3622":"# Let us visualize word cloud of common ingredients in a spicy flavored dish  ","243d65f2":"Top 10 snacks with shortest cooking time","de6170d7":"Snacks with largest cooking time\n","b8750db9":"Let us get state wise distribution of spicy and sweet flavor profile","9661221f":"So we have a few null values in prep_time, cook_time, falvor_profile, state and region","117a7ba8":"# We can deduce that indians love spicy and sweet flavor profile","01fa14bf":"So we coloumns with Name of dish, ingredients, diet, prep time, cook time, flavor profile, course, origin state, region"}}