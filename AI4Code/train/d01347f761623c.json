{"cell_type":{"e5e989fc":"code","1138646d":"code","3cf246a0":"code","7995cefc":"code","f066d7b3":"code","07f198a5":"code","c401f268":"code","b46f38e2":"code","1b67ee5a":"code","bd098d61":"code","99bf1821":"code","6781ee76":"code","02107467":"code","7abab15b":"code","958f23d8":"code","127adb45":"code","3c3883e5":"code","8c28bbe5":"code","5e9c2230":"code","b109f752":"code","eafc2057":"code","422d44fc":"code","b38662d8":"code","a2059495":"code","de190c94":"code","c5d9c645":"code","fcb075c5":"code","ef1129e3":"code","1538f25d":"code","18a88b32":"code","7479e726":"code","9c2f20ea":"code","23ffcd0e":"code","71f74468":"code","53084a67":"code","dc901ca2":"code","f66d45f3":"code","56d864d9":"code","a4411bee":"code","53c2eb1c":"code","81ca9166":"code","0e9e8507":"code","5fda3756":"code","981fb847":"code","c8116414":"code","6ab5a2ec":"code","2032ba91":"code","8d9505e7":"code","0fbd700d":"code","67d1358c":"code","acf55078":"code","56307846":"markdown","4999a167":"markdown","74249384":"markdown","1679d58d":"markdown","d321ad7c":"markdown","de5a8a1f":"markdown","da233920":"markdown","1bc648eb":"markdown","358bf4e3":"markdown","f1b0c4b1":"markdown","e44b9a19":"markdown","30f4ae4e":"markdown","20fc085a":"markdown","efa0a61c":"markdown","ac2131f2":"markdown"},"source":{"e5e989fc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('..\/input\/women-business-and-the-law-wbl'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1138646d":"!pip install openpyxl # Important for reading excel files","3cf246a0":"data = pd.read_excel('..\/input\/women-business-and-the-law-wbl\/wbl_50yearpanel_web_27feb2020.xlsx', \n                     sheet_name = 'WBL1971-2020')","7995cefc":"data.head()","f066d7b3":"data.columns = data.iloc[0]\ndata = data.drop(0, axis = 0)","07f198a5":"data.head()","c401f268":"print(data.shape)\nprint(data.columns)","b46f38e2":"print(data.isnull().sum())","1b67ee5a":"from pandas_profiling import ProfileReport","bd098d61":"ProfileReport(data.reset_index().drop('index', axis =1))","99bf1821":"data_RegionCount = data.groupby('Economy').aggregate('count')['ID']","6781ee76":"data_RegionCount = pd.DataFrame(data_RegionCount).reset_index()","02107467":"data_RegionCount.head()","7abab15b":"print(data_RegionCount.min(), data_RegionCount.max())","958f23d8":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","127adb45":"sns.set_style('darkgrid')","3c3883e5":"fig = plt.figure(figsize = (18,18))\n\nsns.barplot(x = 'Economy', y = 'ID', data = data_RegionCount)\nsns.lineplot(x = np.arange(len(data_RegionCount['ID'].values)), y = data_RegionCount['ID'])\nplt.xticks([])\nplt.ylabel('Number of Women')\nplt.title('Number of women from each region')\nplt.show()","8c28bbe5":"data_IncomeByRegion = data[['Region', 'Income group', 'MOBILITY']]","5e9c2230":"data_IncomeByRegion.dtypes","b109f752":"data_IncomeByRegion = data_IncomeByRegion.astype({'MOBILITY':'int16'})","eafc2057":"data_IncomeByRegion.groupby(['Region', 'Income group']).aggregate({'MOBILITY':'mean'})","422d44fc":"data_IncomeByRegion['Region'] = [region[:3] for region in data_IncomeByRegion['Region']]","b38662d8":"fig = plt.figure(figsize = (18,18))\n\nsns.catplot(\n    data=data_IncomeByRegion, kind=\"bar\",\n    x=\"Region\", y=\"MOBILITY\", hue=\"Income group\",\n    palette=\"dark\", alpha=.6\n)\n\nplt.xlabel('Income Group by Region')\nplt.ylabel('Mobility')\nplt.title('Region, Income Group and Mobility')\nplt.show()","a2059495":"data_time = data[['Region', 'MOBILITY', 'WBL Report Year']]","de190c94":"data_time.head()","c5d9c645":"import pandasql as psql","fcb075c5":"data_time_2015_2020 = psql.sqldf('SELECT * FROM data_time WHERE `WBL Report Year` >= 2015 AND `WBL Report Year` <= 2020')\ndata_time_70s = psql.sqldf('SELECT * FROM data_time WHERE `WBL Report Year` >= 1975 AND `WBL Report Year` <= 1979')","ef1129e3":"data_time_2015_2020.head(2)","1538f25d":"data_time_70s.head(2)","18a88b32":"fig = plt.figure(figsize = (18,18))\n\nsns.barplot(\n    data=data_time_70s,\n    x=\"WBL Report Year\", y=\"MOBILITY\", hue=\"Region\"\n)\n\nplt.xlabel('Year')\nplt.ylabel('Mobility')\nplt.title('Mobility over time and region 1975 - 1980')\nplt.show()","7479e726":"fig = plt.figure(figsize = (18,18))\n\nsns.barplot(\n    data=data_time_2015_2020,\n    x=\"WBL Report Year\", y=\"MOBILITY\", hue=\"Region\"\n)\n\nplt.xlabel('Year')\nplt.ylabel('Mobility')\nplt.title('Mobility over time and region 2015 - 2020')\nplt.show()","9c2f20ea":"data_scores =  data[['Region','MOBILITY', 'WORKPLACE', 'PAY', 'MARRIAGE', 'PARENTHOOD', 'ENTREPRENEURSHIP', 'ASSETS', 'PENSION']]","23ffcd0e":"data_regions = data_scores['Region']","71f74468":"data_scores = data_scores.reset_index().drop('index', axis = 1)","53084a67":"data_scores.dtypes","dc901ca2":"data_scores = data_scores.astype({'Region':'str', 'MOBILITY':'int16', 'WORKPLACE':'int16','PAY':'int16',\n                                 'MARRIAGE':'int16', 'PARENTHOOD':'int16', 'ENTREPRENEURSHIP':'int16',\n                                 'ASSETS':'int16', 'PENSION':'int16'})","f66d45f3":"data_scores.dtypes","56d864d9":"data","a4411bee":"def valuesbyRegion(Region):\n    data = data_scores.where(data_scores['Region'] == f'{Region}').drop('Region', axis = 1).dropna().reset_index()\n    return data","53c2eb1c":"print(data_regions.unique())","81ca9166":"MENA_values = valuesbyRegion('Middle East & North Africa')\nSA_values = valuesbyRegion('South Asia')\nSSA_values = valuesbyRegion('Sub-Saharan Africa')\nEUCA_values = valuesbyRegion('Europe & Central Asia')\nLATAM_values = valuesbyRegion('Latin America & Caribbean')\nOECD_values = valuesbyRegion('High income: OECD')\nEAP_values = valuesbyRegion('East Asia & Pacific')","0e9e8507":"data_scores","5fda3756":"def plotValues(colName):\n    plt.figure(figsize = (18,18))\n    sns.displot(\n    data=data_scores,\n    x=f\"{colName}\",\n    hue=\"Region\",\n    kind=\"kde\",\n    multiple=\"fill\", clip=(0, None),\n    palette=\"ch:rot=-.25,hue=1,light=.75\",\n    )\n    plt.title(f'Comparison of {colName} values by different regions')\n    plt.show()","981fb847":"plotValues('MOBILITY')\nplotValues('WORKPLACE')","c8116414":"plotValues('PAY')\nplotValues('MARRIAGE')","6ab5a2ec":"plotValues('PARENTHOOD')\nplotValues('ENTREPRENEURSHIP')","2032ba91":"plotValues('ASSETS')\nplotValues('PENSION')","8d9505e7":"plt.figure(figsize = (24,24))\nsns.pairplot(data)\nplt.show()","0fbd700d":"!pip install git+git:\/\/github.com\/AutoViML\/AutoViz.git\n!pip install xlrd","67d1358c":"from autoviz.AutoViz_Class import AutoViz_Class\n\nAV = AutoViz_Class()","acf55078":"dft = AV.AutoViz(\n    filename='',\n    sep=\",\",\n    depVar=\"\",\n    dfte=data,\n    header=0,\n    verbose=0,\n    lowess=False,\n    chart_format=\"svg\",\n)","56307846":"## Pairplot","4999a167":"## Plotting values against time and regions\nSince the data is already ordered in time, we can forget about the time (year) column","74249384":"## Importing the Data\n### Importing and installing necessary libraries\nfor now, we only need the pandas, numpy, and openyxl libraries","1679d58d":"Now, let's explore it a bit further.","d321ad7c":"# Bonus: AutoVis\nWe can try and use AutoVis, which is an auto data-visualization library, maybe it'll give us good results :)","de5a8a1f":"# EDA | Women, Business and the Law (WBL) \n![image.png](attachment:image.png)\n##### WBL 2020 is the sixth in the series of biannual reports measuring gender differences in the law. <br \/> In 2019 a study was released which piloted a new index that aggregates 35 data points across 8 scored indicators.<br \/>  The WBL index scores are based on the average of each economy\u2019s scores for the 8 topics included in this year\u2019s aggregate score. A higher score indicates more gender equal laws.<br \/>  The dataset was expanded in 2020 to include historical information dating back to 1970. This file contains Women, Business and the Law (WBL) data for 190 economies for 1970 to 2019 (reporting years 1971 to 2020).<br \/>  The file from 2019 study has been removed as the current file contains the most current and accurate data. The scores for previous years have been recalculated to account for data revisions and methodology changes. For more information about the methodology for data collection, scoring and analysis, visit http:\/\/wbl.worldbank.org. <br \/> \n## What is EDA?\n#### Exploratory Data Analysis refers to the critical process of performing initial investigations on data so as to discover patterns,to spot anomalies,to test hypothesis and to check assumptions with the help of summary statistics and graphical representations.\n\n#### In this notebook we're going to do some EDA over the WBL data using libraries such as Pandas, Matplotlib, and Seaborn.\n\n## Table of Contents:\n1. Importing the Data\n    1. Importing and installing necessary libraries\n2. Preprocessing and cleaning the data\n    1. Exploring the Data\n    2. Cleaning the data\n3. EDA\n    1. Basic Visualization\n    \n# START","da233920":"## Mobility over time and region","1bc648eb":"#### Checking for any null values","358bf4e3":"## Preprocessing and Cleaning the Data\n### Exploring the Data\nWe start out by reading the file, and viewing it, and it's shape.","f1b0c4b1":"#### We can see that there are a total of 50 entries for each region, we'll back this up using visualization (optional) just for educational purposes","e44b9a19":"# END\nThanks for reading!","30f4ae4e":"## Region, Income Group and Mobility","20fc085a":"#### How many entries are available for each region?","efa0a61c":"## EDA\n### Basic Visualization\n#### I usually start with pandas profiling, it's a powerful easy-to-use tool that you shouldn't skip out on","ac2131f2":"### Cleaning the data\nWe can see that the data is a bit messy, starting with the column names, we can fix that easily."}}