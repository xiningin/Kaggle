{"cell_type":{"90712939":"code","59b34b63":"code","04b8d847":"code","e805687e":"code","17bddb74":"code","857a6865":"code","88f15c2c":"code","03c76d02":"code","6af28f16":"code","a699c20d":"code","eff9dbd9":"code","fce27134":"code","1eb2ee78":"markdown","72208961":"markdown","98a7cd3d":"markdown","4c14402e":"markdown","ea2ed340":"markdown","1cb17e99":"markdown","5bf4e1bb":"markdown","878f3478":"markdown","1e981d6c":"markdown","13fba109":"markdown"},"source":{"90712939":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","59b34b63":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.preprocessing import LabelEncoder,OrdinalEncoder\nfrom sklearn import metrics\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns","04b8d847":"def details(df):\n    print('Head:-\\n',df.head(3),'\\n--------------------------------------------\\n')\n    print('Columns :-\\n',df.columns,'\\n--------------------------------------------\\n')\n    print('Desccription:-\\n',df.describe,'\\n--------------------------------------------\\n')","e805687e":"df = pd.read_csv(r'\/kaggle\/input\/mushroom-classification\/mushrooms.csv')\ndetails(df)","17bddb74":"labelencoder=LabelEncoder()\nfor column in df.columns:\n    df[column] = labelencoder.fit_transform(df[column])\nprint(\"DataFrame after encoding :- \\n\\n\")\nprint(df.head(2))","857a6865":"df.isna().sum()","88f15c2c":"df.describe()\ndf['veil-type'][5]\n# removing veil type bcoz all are 0\ndf=df.drop([\"veil-type\"],axis=1)","03c76d02":"X = df.drop(['class'], axis=1) ; y = df[['class']]\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25,random_state=42)","6af28f16":"clf = DecisionTreeClassifier(criterion='entropy')\nclf.fit(X_train,y_train)\ny_pred = clf.predict(X_test)","a699c20d":"acc = metrics.accuracy_score(y_pred,y_test)\nprint('Accuracy score = ',acc*100,'%')","eff9dbd9":"cf_matrix = metrics.confusion_matrix(y_test,y_pred)\n_=sns.heatmap(cf_matrix, annot=True,fmt='d',cmap=\"Blues\")","fce27134":"print(metrics.classification_report(y_test,y_pred))","1eb2ee78":"# Categorical to numerical\n\nAs we see from the above ouput that the description of mushrooms are respective alphabets and obviously any ML algorithm does not work with alphabets and can understand only numbers. Hence we transform all the alphabets into numbers.\n\nFor this we use the label encoder from sklearn.","72208961":"**NOTE :- In this case there is no effect on the criterion on the accuracy score as both GINI and ENTROPY give out the same accuracy. You can also use criterion as GINI**","98a7cd3d":"# Building model with DecisionTree and Entropy as criterion","4c14402e":"# Tiny Pre-Processing that matters a lot","ea2ed340":"**We Removed the entire column of veil-type as all the values are 0**","1cb17e99":"#  Reading and Intro to the dataset \n\n","5bf4e1bb":"**Checking for missing or null values**","878f3478":"As we observe all the alphabetical descriptions have been changed into a corresponding number.\n","1e981d6c":"# Splitting and Feature selection","13fba109":"# CONFUSION MATRIX and CLASSIFICATION REPORT"}}