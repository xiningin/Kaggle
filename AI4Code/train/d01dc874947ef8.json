{"cell_type":{"2a092e70":"code","95cf8ee5":"code","db48cc4c":"code","873d8d5f":"code","038d641f":"code","89111ce5":"code","3a84aaec":"markdown","5b5396c6":"markdown","36ec2446":"markdown","2422434c":"markdown","28b933b2":"markdown"},"source":{"2a092e70":"!pip install dexplot\n!pip install chart_studio\n!pip install pandas-profiling","95cf8ee5":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport os\nimport dexplot as dxp\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.express as px\nimport chart_studio.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot\nimport cufflinks\ncufflinks.go_offline()\ncufflinks.set_config_file(world_readable=True, theme='pearl')\n\nimport seaborn as sns\nfrom pandas_profiling import ProfileReport\nimport pandas_profiling\nimport plotly.express as px","db48cc4c":"df = pd.read_csv('..\/input\/sales-modified\/summer-products-with-rating-and-performance_2020-08.csv')\ndf.describe()","873d8d5f":"pandas_profiling.ProfileReport(df)","038d641f":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\nimport math\nimport json\nimport time\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics.pairwise import cosine_similarity\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import NearestNeighbors\nimport scipy.sparse\nfrom scipy.sparse import csr_matrix\nfrom scipy.sparse.linalg import svds\nimport warnings; warnings.simplefilter('ignore')\n%matplotlib inline\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","89111ce5":"def get_recommendations(id):    \n    sales=pd.read_csv(\"..\/input\/sales-modified\/summer-products-with-rating-and-performance_2020-08.csv\")\n    sales.head(2)\n    \n    orders_for_product = sales[sales.product_id == 548 ].Order.unique()\n    \n    relevant_orders = sales[sales.Order.isin(orders_for_product)]\n    \n    accompanying_products_by_order = relevant_orders[relevant_orders.product_id != 548]\n    num_instance_by_accompanying_product = accompanying_products_by_order.groupby(548)[548].count().reset_index(name='instances')\n    \n    num_orders_for_product = orders_for_product.size\n    product_instances = pd.DataFrame(num_instance_by_accompanying_product)\n    product_instances['frequency'] = product_instances['instances']\/num_orders_for_product\n    \n    recommended_products = pd.DataFrame(product_instances.sort_values('frequency', ascending=False).head(3))\n    \n    products = pd.read_csv(\"..\/input\/sales-modified\/summer-products-with-rating-and-performance_2020-08.csv\")\n    recommended_products = pd.merge(recommended_products, products, on='product_id')","3a84aaec":"**In this Note book I have used Pandas profiling which provides analysis like type, unique values, missing values, quantile statistics, mean, mode, median, standard deviation, sum, skewness, frequent values, histograms, correlation between variables, count, heatmap visualization, etc. It is an approach whereby our EDA approach has been boosted with just a single line of code!!**\n\nAS we all know that to built a recommender system we should have customer as well as product ID with its rating. But in this dataset Customer ID is not given.\n\n**Problem statement is - How to build a Recommender system without audience data.**","5b5396c6":" # Please upvote if you like this kernel for further encouragement","36ec2446":"![wish.JPG](attachment:wish.JPG)","2422434c":"**Conclusion\nTo give some perspective on what this looks like, let\u2019s consider the output from passing the value 548 (as the product ID) to this function. Keep in mind that product ID 548 represents a product named t-shirt, so what we expect is the data to tell us which products have previously been bought in conjunction with a t-shirt.\n\n**So we can roughly conclude that (in this small sample set) cleats and a t-shirt jeans are the most popular purchases made along with a t-shirt.****\n","28b933b2":"I have made recommendation Engine by changing few things in dataset as we know, **A recommendation engine is only as \u201cintelligent\u201d as the data allows. **\nData Preparation - \n1) The product_id is in alpha numeric here I suggest to make it integer which willl help company to work on many aspects like how i suffered here to make it possible I changed my product_id to integer using excel functionalities like pivot.\n2) Added anpther column named as order.\nThe reason here is - we grab the unique order IDs where the product passed into the function was part of the order With the applicable order IDs, it becomes a straightforward process to get all rows in order excluding those for the product that was passed in. This represents all OrderProduct instances of items bought in conjunction with the product by product ID."}}