{"cell_type":{"1f6a1f8b":"code","f1903f5f":"code","cf5e6464":"code","d1c20757":"code","7ce3b4c9":"code","d3cd7ca6":"code","a439d043":"code","69b7d13a":"code","dbbd555d":"code","382e9f34":"code","de7d737c":"code","7a1dce0e":"code","7f98ed50":"code","cbdcb5d8":"code","c9404bae":"code","73f04672":"code","50eb48eb":"code","5e676520":"code","7e1a45fe":"code","47343927":"code","090155a5":"code","1e989bbb":"code","253917dc":"code","d1ece8cc":"code","ab2b3ea5":"code","3a2a729d":"code","02407d16":"code","61eb2f41":"code","90b4c1da":"code","82b6fc15":"code","b2efbd9a":"code","e6ab5e26":"code","ae5b1180":"code","ab8ced2d":"code","3ab1a78c":"code","031a3b2b":"markdown","22ba6658":"markdown","9dd816f0":"markdown","e2de23b5":"markdown","3632e59c":"markdown","93b30600":"markdown","fe6fe88c":"markdown","c94a53e4":"markdown","ecd459a0":"markdown","c251690c":"markdown","39d16386":"markdown","076e9c06":"markdown","9e3011c6":"markdown","2245608b":"markdown","ea53b061":"markdown","3444c9d6":"markdown","9953d297":"markdown","f3e5a15d":"markdown","fba6f934":"markdown"},"source":{"1f6a1f8b":"import os\nos.getcwd()\nos.chdir('\/kaggle')\nos.chdir('.\/input\/regionicsv')\n#print(os.listdir('.\/input\/regionicsv'))\nprint(os.listdir('.\/'))\nos.getcwd()","f1903f5f":"import gc\nfrom datetime import date\nfrom pathlib import Path\nimport random\n\nimport sys\nfrom tqdm.notebook import tqdm\nimport pandas as pd\nimport scipy as sp\nimport seaborn as sns\nfrom IPython.core.display import display, HTML\nimport pandas as pd\nimport folium\nimport warnings\nimport seaborn as sns\nimport matplotlib.dates as md\nimport datetime\nsns.set(style='darkgrid')\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nwarnings.filterwarnings('ignore')\nimport plotly\nimport pylab as pl\nimport numpy as np\nimport matplotlib.dates as mdates\nimport matplotlib.ticker as ticker\nimport ipywidgets as widgets\nfrom ipywidgets import interact, interact_manual\nimport plotly.graph_objects as go\nfrom scipy.optimize import curve_fit\nimport sqlite3\nfrom tabulate import tabulate \nfrom IPython.core.display import display, HTML\n# --- plotly ---\nfrom plotly import tools, subplots\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport plotly.io as pio\npio.templates.default = \"plotly_dark\"\n# --- models ---\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import KFold\nimport lightgbm as lgb\nimport xgboost as xgb\nimport catboost as cb\n\n","cf5e6464":"# --- setup ---\npd.set_option('max_columns', 50)\n#Carico i Dati\ncovid19provlast_url =\"https:\/\/github.com\/pcm-dpc\/COVID-19\/raw\/master\/dati-province\/dpc-covid19-ita-province-latest.csv\"\ncovid19provlast = pd.read_csv(covid19provlast_url)\n\ncovid19provtime_url =\"https:\/\/github.com\/pcm-dpc\/COVID-19\/raw\/master\/dati-province\/dpc-covid19-ita-province.csv\"\ncovid19provtime = pd.read_csv(covid19provtime_url)\n\ncovid19regionlast_url =\"https:\/\/github.com\/pcm-dpc\/COVID-19\/raw\/master\/dati-regioni\/dpc-covid19-ita-regioni-latest.csv\"\ncovid19regionlast = pd.read_csv(covid19regionlast_url)\n\ncovid19regiontime_url =\"https:\/\/github.com\/pcm-dpc\/COVID-19\/raw\/master\/dati-regioni\/dpc-covid19-ita-regioni.csv\"\ncovid19regiontime = pd.read_csv(covid19regiontime_url)\n\nds_it_url =\"https:\/\/github.com\/pcm-dpc\/COVID-19\/raw\/master\/dati-andamento-nazionale\/dpc-covid19-ita-andamento-nazionale.csv\"\nds_it = pd.read_csv(ds_it_url)\n\n#covid_age=pd.read_csv('.\/input\/italy-covid19\/covid-age.csv')\n#covid_disease= pd.read_csv('..\/input\/italy-covid19\/covid-disease.csv')\ncovid19provtime.rename(columns={'\u00ef\u00bb\u00bfdata': 'date'},inplace=True)\n\n#Download latest data from Johns Hopkins University github repository: https:\/\/github.com\/CSSEGISandData\/COVID-19\n\n","d1c20757":"dati_regioni=pd.read_csv('.\/Regioni.csv')\nds_it_data = ds_it[ds_it['data']>='2020-10-05T17:00:00']\ncovid19regiontime_data=covid19regiontime[covid19regiontime['data']>='2020-10-05T17:00:00']\ncovid19regiontime_data_campania=covid19regiontime_data[covid19regiontime_data['denominazione_regione']=='Campania']\n\ncovid19provtime_data=covid19provtime[covid19provtime['data']>='2020-10-05T17:00:00']\ncovid19provtime_data_campania=covid19provtime_data[covid19provtime_data['denominazione_regione']=='Campania']\n#Campania da Febbraio\nreg_camp=covid19regiontime[covid19regiontime['denominazione_regione']=='Campania']\n\n\nsw=covid19regiontime_data.groupby(by=['denominazione_regione','data'])['nuovi_positivi','tamponi'].agg('sum').reset_index()\nsw['tamponi_eseguiti_g']=sw['tamponi']- sw['tamponi'].shift(1)\nsw.drop('tamponi',1,inplace=True)\nsw['new_infection_per_day(%)']=round(sw['nuovi_positivi']\/sw['tamponi_eseguiti_g'],2)\n#print('data ultima di aggiornamento:'+ str(covid19regiontime['data'].tail(1)))\ndata_aggiornamento=covid19regiontime['data'].tail(1)\n#covid19regiontime_data_campania\n#df.iloc[:,0:2] \n","7ce3b4c9":"from datetime import datetime\n\ndef _convert_date_str(df):\n    try:\n        df.columns = list(df.columns[:4]) + [datetime.strptime(d, \"%m\/%d\/%y\").date().strftime(\"%Y-%m-%d\") for d in df.columns[4:]]\n    except:\n        print('_convert_date_str failed with %y, try %Y')\n        df.columns = list(df.columns[:4]) + [datetime.strptime(d, \"%m\/%d\/%Y\").date().strftime(\"%Y-%m-%d\") for d in df.columns[4:]]\n\n\n#confirmed_global_df = pd.read_csv('time_series_covid19_confirmed_global.csv')\n#_convert_date_str(confirmed_global_df)#\n\n#deaths_global_df = pd.read_csv('time_series_covid19_deaths_global.csv')\n#_convert_date_str(deaths_global_df)\n\n#recovered_global_df = pd.read_csv('time_series_covid19_recovered_global.csv')\n#_convert_date_str(recovered_global_df)\n","d3cd7ca6":"covid=covid19regionlast[['denominazione_regione','ricoverati_con_sintomi', 'terapia_intensiva', 'totale_ospedalizzati',\n       'isolamento_domiciliare', 'totale_positivi', 'nuovi_positivi',\n       'dimessi_guariti', 'deceduti', 'totale_casi', 'tamponi']]\ncovid.sort_values(by='totale_positivi',ascending=False,inplace=True)\ncovid.style.background_gradient(cmap='BuGn')\ntotale=covid.sum().reset_index()\ntotale.drop([0,3,5,10,6],inplace=True)\ntotale.rename(columns={'index':'Infetti_con_sintomi',0 :'Totale'},inplace=True)\nultimo_tot=int(totale['Totale'].tail(1))\nPop_infetta=int(ultimo_tot\/60137000*100)\ntotale.style.background_gradient(cmap='Blues')\n","a439d043":"totale.drop([9],inplace=True)\nlabels=totale['Infetti_con_sintomi'].values.tolist()\nsizes=totale['Totale'].values.tolist()\nexplode = (0.1, 0 , 0.1, 0, 0)  \nfig, ax = plt.subplots(figsize=(10,10))\nax.pie(sizes, explode=explode,labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=150)\nax.set_title('Il '+str(Pop_infetta)+'% della popolazione Italiana si \u00e8 contagiata sotto descritta la Suddivisione',fontsize=15)\nplt.tight_layout()\nplt.show()\n","69b7d13a":"sw=covid19regiontime_data_campania.groupby(['data'])['nuovi_positivi','tamponi'].agg('sum').reset_index()\nsw['tamponi_eseguiti_g']=sw['tamponi']- sw['tamponi'].shift(1)\nsw.drop('tamponi',1,inplace=True)\nsw['new_infection_per_day(%)']=round(sw['nuovi_positivi']\/sw['tamponi_eseguiti_g'],2)\n#sw['tamponi_eseguiti_g'].tail()","dbbd555d":"ds_it['new_total_cases']=ds_it['totale_casi']-ds_it['totale_casi'].shift(1)\npx.bar(ds_it,x='data',y='new_total_cases',title='Curva Epidemica in Italia Generalizzata',color_discrete_sequence=['cornflowerblue'])\nsw=covid19regiontime.groupby(['data'])['nuovi_positivi','tamponi'].agg('sum').reset_index()\nsw['swabs_per_day']=sw['tamponi']- sw['tamponi'].shift(1)\nsw.drop('tamponi',1,inplace=True)\nsw['new_infection_per_day(%)']=round(sw['nuovi_positivi']\/sw['swabs_per_day'],2)\n\nfig = go.Figure()\nfig.add_trace(go.Bar(x=sw['data'],\n                y=sw['swabs_per_day'],\n                name='Test Eseguiti Giornalmente',\n                marker_color='rgb(55, 83, 109)'\n                ))\nfig.add_trace(go.Bar(x=sw['data'],\n                y=sw['nuovi_positivi'],\n                name='nuovi_positivi',\n                marker_color='rgb(26, 118, 255)'\n                ))\n\nfig.update_layout(\n    title='Curva Epidemica e Campionamento',\n    xaxis_tickfont_size=14,\n    yaxis=dict(\n        title='Valori',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n    legend=dict(\n        x=0,\n        y=1.0,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)'\n    ),\n    barmode='group',\n    bargap=0.15, \n    bargroupgap=0.1 \n)\nfig.show()","382e9f34":"\nsw=covid19regiontime.groupby(['data'])['nuovi_positivi','tamponi'].agg('sum').reset_index()\nsw['tamponi_eseguiti_g']=sw['tamponi']- sw['tamponi'].shift(1)\nsw.drop('tamponi',1,inplace=True)\nsw['new_infection_per_day(%)']=round(sw['nuovi_positivi']\/sw['tamponi_eseguiti_g'],2)\n\nfig1 = go.Figure()\nfig1.add_trace(go.Bar(x=sw['data'],\n                y=sw['new_infection_per_day(%)'],\n                name='Incremento nuove infezioni rapportate al numero dei tamponi eseguiti giornalmente',\n                marker_color='rgb(255, 0, 0)'\n                ))\n\nfig1.update_layout(\n    title='Curva Epid. dei casi rispetto ai tamponi effettuati',\n    xaxis_tickfont_size=14,\n    yaxis=dict(\n        title='Number',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n    legend=dict(\n        x=0,\n        y=1.0,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)'\n    ),\n    barmode='group',\n    bargap=0.15, \n    bargroupgap=0.1 \n)\n    \ntemp = covid19regiontime.groupby('data')['ricoverati_con_sintomi', 'deceduti','totale_positivi' ].sum().reset_index()\ntemp = temp.melt(id_vars=\"data\", value_vars=['ricoverati_con_sintomi', 'deceduti', 'totale_positivi'],\n                 var_name='Case', value_name='Count')\n\ntemp.head()\n\nfig = px.area(temp, x=\"data\", y=\"Count\", color='Case',\n             title='Cases over time', color_discrete_sequence = ['orange','blue','red'])\nsw.head()\n#fig.show()\nfig1.show()","de7d737c":"tmp=covid19regiontime_data.groupby(by=['denominazione_regione','data','deceduti'])['tamponi'].agg('sum').reset_index()\ntmp['tamponi_eseguiti_g']=tmp['tamponi']- tmp['tamponi'].shift(1)\ntmp.drop('tamponi',1,inplace=True)\ndf2=tmp\ndf1=dati_regioni\ndf2['id'] = df2.denominazione_regione\ninner=df2.merge(df1, left_on='denominazione_regione', right_on='denominazione_regione')\n\ninner1=inner[inner['tamponi_eseguiti_g']>0]\ninner1['tamponi_pop%']=round(inner1['tamponi_eseguiti_g']\/inner1['Popolazione'],4)*100\n#inner1['tamponi_mol%']=round(inner1['tamponi_eseguiti_g']\/inner1['Popolazione'],4)*100\ninner1['deceduti%']=round(inner1['deceduti']\/inner1['Popolazione'],4)*100\ninner11=inner1[inner1['data'] > \"2020-11-05T17:00:00\"]\ninner12=inner11[['denominazione_regione','data','tamponi_eseguiti_g','Popolazione','deceduti','tamponi_pop%','deceduti%']]\n\ninner_camp=inner12[inner12['denominazione_regione']==\"Campania\"].tail(1)\ninner_camp1=inner12[inner12['denominazione_regione']==\"Campania\"].tail(2)\ninner_vene=inner12[inner12['denominazione_regione']==\"Veneto\"].tail(1)\ninner_lomb=inner12[inner12['denominazione_regione']==\"Lombardia\"].tail(1)\ninner_piem=inner12[inner12['denominazione_regione']==\"Piemonte\"].tail(1)\ninner_cala=inner12[inner12['denominazione_regione']==\"Calabria\"].tail(1)\ninner_pugh=inner12[inner12['denominazione_regione']==\"Puglia\"].tail(1)\ninner_pri=inner_camp.append(inner_vene)\ninner_pri=inner_pri.append(inner_lomb)\ninner_pri=inner_pri.append(inner_piem)\ninner_pri=inner_pri.append(inner_cala)\ninner_pri=inner_pri.append(inner_pugh)\n#inner_pri.style.format('${0:,.2f}')\ninner_pri.style.background_gradient().set_precision(2)\n#df.style.background_gradient()\n#st.dataframe(tabela.style.background_gradient(cmap=\u2018Greens\u2019).set_precision(2),height=500)\n#inner_pri\nult1=inner_camp['data'].iloc[0]\nult2=inner_camp1['data'].iloc[0]\ninner12_graph=inner12.query('(data == @ult1)')\nult1\n\n","7a1dce0e":"#inner1_last=inner1[inner1['data']==ult1]&inner1[inner1['Popolazione']>1000000]\n#inner1_last=inner1.query('(Popolazione>1000000) & (data == @ult1)')\n\ntot=px.bar(inner12_graph,x='denominazione_regione', y='deceduti%',\n           animation_group=\"denominazione_regione\", color=\"denominazione_regione\", hover_name=\"denominazione_regione\")\ntot.update_yaxes(range=[0,0.5])\ntot.update_layout(title='Tasso di Mortalit\u00e0: Decessi rispetto alla popolazione')\ntot.update_xaxes(categoryorder='total ascending')\n#inner1_last","7f98ed50":"#inner1_last=inner1[inner1['data']==ult1]&inner1[inner1['Popolazione']>1000000]\ninner1_last=inner1.query('(Popolazione>1000000) & (data == @ult1)')\n\ntot=px.bar(inner1_last,x='denominazione_regione', y='tamponi_pop%',\n           animation_group=\"denominazione_regione\", color=\"denominazione_regione\", hover_name=\"denominazione_regione\")\ntot.update_yaxes(range=[0,1.2])\ntot.update_layout(title='Screening Indicator: Tasso Regionale dei Tamponi Effettuati Rispetto alla Popolazione')\ntot.update_xaxes(categoryorder='total ascending')\n#inner1_last","cbdcb5d8":"inner3_last=inner1_last[['denominazione_regione','tamponi_pop%']]\n#df[['a','b']]\ncovid19regiontime_data","c9404bae":"covid19regiontime_last=covid19regiontime_data.query('(data == @ult1)')\ncovid19regiontime_last['tasso_moolecolari']=(covid19regiontime_last['tamponi_test_molecolare'] \\\n                                             \/covid19regiontime_last['tamponi'])\ntot=px.bar(covid19regiontime_last,x='denominazione_regione', y='tasso_moolecolari',\n           animation_group=\"denominazione_regione\", color=\"denominazione_regione\", hover_name=\"denominazione_regione\")\ntot.update_yaxes(range=[0,1])\ntot.update_layout(title='Screening Indicator: Tasso tamponi Molecolari rispetto al totale')\ntot.update_xaxes(categoryorder='total ascending')\n#inner1_last","73f04672":"covid19regiontime_last2=covid19regiontime_data[covid19regiontime_data['data']>=ult2]\nsw=covid19regiontime_last2.groupby(by=['denominazione_regione','data'])['nuovi_positivi','tamponi'].agg('sum').reset_index()\nsw['tamponi_eseguiti_g']=sw['tamponi']- sw['tamponi'].shift(1)\nsw.drop('tamponi',1,inplace=True)\nsw['new_infection_per_day(%)']=round(sw['nuovi_positivi']\/sw['tamponi_eseguiti_g'],2)*100\nsw_last=sw[sw['data']==ult1]\nnew_merge=pd.merge(covid19regiontime_last,sw_last, on='denominazione_regione')\n#inner3_last\nnew_merge.drop('codice_nuts_1',1,inplace=True)\nnew_merge.drop('codice_nuts_2',1,inplace=True)\nnew_merge.drop('data_y',1,inplace=True)\nnew_merge.drop('nuovi_positivi_y',1,inplace=True)\n#new_merge.drop('tamponi_eseguiti_g_x',1,inplace=True)\n#df_merge_col = pd.merge(df_row, df3, on='id') ,'codice_nuts_2','data_y','nuovi_positivi_y'\ntot=px.bar(sw_last,x='denominazione_regione', y='new_infection_per_day(%)',\n           animation_group=\"denominazione_regione\", color=\"denominazione_regione\", hover_name=\"denominazione_regione\")\ntot.update_yaxes(range=[0,20])\ntot.update_layout(title='Tasso Regionale dei positivi rispetto ai temaponi tamponi Effettuati')\ntot.update_xaxes(categoryorder='total ascending')\n\n","50eb48eb":"covid19regiontime_last=covid19regiontime_data[covid19regiontime_data['data']==ult1]\nsw=covid19regiontime_last.groupby(by=['denominazione_regione','data'])['totale_positivi','terapia_intensiva'].agg('sum').reset_index()\n\nsw['terapia_intensiva(%)']=round(sw['terapia_intensiva']\/sw['totale_positivi'],3)*100\nnew_merge['terapia_intensiva(%)']=round(sw['terapia_intensiva']\/sw['totale_positivi']*100,3)\ntot=px.bar(sw,x='denominazione_regione', y='terapia_intensiva(%)', animation_frame=\"data\",\n           animation_group=\"denominazione_regione\", color=\"denominazione_regione\", hover_name=\"denominazione_regione\")\ntot.update_yaxes(range=[0,2])\ntot.update_layout(title='T.I. rispetto al totale positivi')\ntot.update_xaxes(categoryorder='total ascending')\n","5e676520":"#covid19regiontime_data_nov=covid19regiontime_data[covid19regiontime_data['data']>\"2020-11-01\"]\ncovid19regiontime_last=covid19regiontime_data[covid19regiontime_data['data']==ult1]\nsw=covid19regiontime_last.groupby(by=['denominazione_regione','data'])['totale_positivi','totale_ospedalizzati'].agg('sum').reset_index()\nsw['totale_ospedalizzati(%)']=round(sw['totale_ospedalizzati']\/sw['totale_positivi'],3)*100\nnew_merge['totale_ospedalizzati(%)']=round(sw['totale_ospedalizzati']\/sw['totale_positivi']*100,3)\ntot=px.bar(sw,x='denominazione_regione', y='totale_ospedalizzati(%)',\n           animation_group=\"denominazione_regione\", color=\"denominazione_regione\", hover_name=\"denominazione_regione\")\ntot.update_yaxes(range=[0,20])\ntot.update_layout(title='#Ospedalizzati rispetto al totale positivi')\ntot.update_xaxes(categoryorder='total ascending')","7e1a45fe":"#today = date.today()\n#print(today)\n# dd\/mm\/YY\n#d1 = today.strftime(\"%Y-%M-%d\")\n#print(\"d1 =\", d1)\n\n#covid19regiontime_data_nov=covid19regiontime_data[covid19regiontime_data['data']>\"2020-11-01\"]\n#covid19regiontime_last=covid19regiontime_data[covid19regiontime_data['data']==data_aggiornamento]\ncovid19regiontime_last=covid19regiontime_data[covid19regiontime_data['data']==ult1]\nsw=covid19regiontime_last.groupby(by=['denominazione_regione','data'])['terapia_intensiva','totale_ospedalizzati'].agg('sum').reset_index()\n\nsw['terapia_intensiva(%)']=round(sw['terapia_intensiva']\/sw['totale_ospedalizzati'],3)*100\n\n#tot=px.bar(sw,x='denominazione_regione', y='terapia_intensiva(%)', animation_frame=\"data\",\ntot=px.bar(sw,x='denominazione_regione', y='terapia_intensiva(%)',\n           animation_group=\"denominazione_regione\", color=\"denominazione_regione\", hover_name=\"denominazione_regione\")\ntot.update_yaxes(range=[0,40])\ntot.update_layout(title='#T.I  rispetto al totale ospedalizzati')\ntot.update_xaxes(categoryorder='total ascending')","47343927":"covid19regiontime_last['letalita']=covid19regiontime_last['deceduti']\/covid19regiontime_last['totale_casi']*100\nnew_merge['letalita']=round(new_merge['deceduti']\/new_merge['totale_casi']*100,2)\ntot=px.bar(covid19regiontime_last,x='denominazione_regione', y='letalita',\n          animation_group=\"denominazione_regione\", color=\"denominazione_regione\", hover_name=\"denominazione_regione\")\ntot.update_yaxes(range=[0,10])\ntot.update_layout(title='Tasso di Letalit\u00e0 regionale')\ntot.update_xaxes(categoryorder='total ascending')","090155a5":"new_merge.head()","1e989bbb":"sw=covid19regiontime_data_campania.groupby(['data'])['nuovi_positivi','tamponi'].agg('sum').reset_index()\nsw['tamponi_eseguiti_g']=sw['tamponi']- sw['tamponi'].shift(1)\nsw.drop('tamponi',1,inplace=True)\nsw['new_infection_per_day(%)']=round(sw['nuovi_positivi']\/sw['tamponi_eseguiti_g'],2)\n\nfig1 = go.Figure()\nfig1.add_trace(go.Bar(x=sw['data'],\n                y=sw['new_infection_per_day(%)'],\n                name='Incremento nuove infezioni rapportate al numero dei tamponi eseguiti giornalmente',\n                marker_color='rgb(255, 0, 0)'\n                ))\n\nfig1.update_layout(\n    title='% di incremento (nuovi casi\/tamponi) Campania',\n    xaxis_tickfont_size=14,\n    yaxis=dict(\n        title='Number',\n        titlefont_size=16,\n        tickfont_size=14,\n    ),\n    legend=dict(\n        x=0,\n        y=1.0,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)'\n    ),\n    barmode='group',\n    bargap=0.15, \n    bargroupgap=0.1 \n)\n    \n\nfig1.show()","253917dc":"#import plotly.graph_objects as go\n#animals=['giraffes', 'orangutans', 'monkeys']\nnew_merge1=pd.merge(new_merge,inner3_last, on='denominazione_regione')\nnew_merge1.sort_values(by=['letalita'], inplace = True)\n#inner3_last\nfig = go.Figure(data=[\n    go.Bar(name='letalit\u00e0', x=new_merge1['denominazione_regione'], y=new_merge1['letalita']),\n    go.Bar(name='%Posit\/Tamponi', x=new_merge1['denominazione_regione'], y=new_merge1['new_infection_per_day(%)']),\n    go.Bar(name='%Tamp\/Popol', x=new_merge1['denominazione_regione'], y=new_merge1['tamponi_pop%']),\n    go.Bar(name='%TI\/Positivi', x=new_merge1['denominazione_regione'], y=new_merge1['terapia_intensiva(%)'])\n])\n# Change the bar mode\nfig.update_layout(barmode='group')\nfig.update_layout(title_text=\"Indicatori raggruppati per regione ordinati per tasso di Letalit\u00e0 aggiornamento del:\"+ult1)\nfig.show()\n         \n#           fig = go.Figure(data=[\n#    go.Bar(name='SF Zoo', x=animals, y=[20, 14, 23]),\n#    go.Bar(name='LA Zoo', x=animals, y=[12, 18, 29])\n#])","d1ece8cc":"\n#DATI CAMPANIA\n\nregion_time_series=covid19regiontime_data_campania.groupby('data')['terapia_intensiva','totale_casi'].sum().reset_index()\nregion_time_series['terapia_intensiva(%)']=round((region_time_series['terapia_intensiva']\/region_time_series['totale_casi']),4)\nregion_time_series_1=covid19regiontime_data_campania.groupby('data')['deceduti','totale_casi'].sum().reset_index()\nregion_time_series_1['mortality_rate(%)']=round((region_time_series_1['deceduti']\/region_time_series['totale_casi']),4)\n\nsw=covid19regiontime_data_campania.groupby(['data'])['nuovi_positivi','tamponi'].agg('sum').reset_index()\nsw['tamponi_eseguiti_g']=sw['tamponi']- sw['tamponi'].shift(1)\nsw.drop('tamponi',1,inplace=True)\nsw['datamia']=sw['data'[0:10]]\nsw['new_infection_per_day(%)']=round(sw['nuovi_positivi']\/sw['tamponi_eseguiti_g'],2)\nsw1=(sw[sw['new_infection_per_day(%)']>0])\n\n#DATI NAZIONALI\n\nnt=ds_it_data.groupby(['data'])['nuovi_positivi','tamponi'].agg('sum').reset_index()\nnt['tamponi_nazionali_g']=nt['tamponi']- nt['tamponi'].shift(1)\nnt.drop('tamponi',1,inplace=True)\nnt['nuovi_casi_nazionali(%)']=round(nt['nuovi_positivi']\/nt['tamponi_nazionali_g'],2)\nnt1=(nt[nt['nuovi_casi_nazionali(%)']>0])\n\nfig = go.Figure()\n#fig.add_trace(go.Scatter(x=region_time_series['data'[0:10]], y=region_time_series['terapia_intensiva(%)']*100,\n#                         mode='lines',name='Terapia Intensiva'))\n#fig.add_trace(go.Scatter(x=region_time_series1['data'[0:10]], y=region_time_series_1['mortality_rate(%)']*100,\n#                         mode='lines',name='Deceduti'))\nfig.add_trace(go.Scatter(x=sw['data'[0:10]], y=sw1['new_infection_per_day(%)']*100,\n                         mode='lines', name='% Infetti su Tamponi Effettuati Campania'))\n\nfig.add_trace(go.Scatter(x=nt['data'[0:10]], y=nt1['nuovi_casi_nazionali(%)']*100,\n                         mode='lines', name='% Infetti su Tamponi Effettuati Nazionali'))\n\nfig.update_layout(title='Valori in % relativi alla Regione Campania vs Valori Nazionali',\n                   xaxis_title='Day',\n                   yaxis_title='Valori relativi')\n\nfig.show()","ab2b3ea5":"region_time_series=covid19regiontime_data_campania.groupby('data')['terapia_intensiva'].sum().reset_index()\nregion_time_series['terapia_intensiva_number']=region_time_series['terapia_intensiva']\n#region_time_series=covid19regiontime_data_campania.groupby('data')['totale_ospedalizzati'].sum().reset_index()\n#region_time_series['totale_ospedalizzati_number']=region_time_series['totale_ospedalizzati']\n\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=region_time_series['data'], y=region_time_series['terapia_intensiva_number'], mode='lines',name='Persone in Terapia Intensiva'))\n\nfig.add_trace(go.Scatter(x=region_time_series['data'], y=covid19regiontime_data_campania['deceduti'], \n                         mode='lines',name='Persone decedute'))\n\nfig.add_trace(go.Scatter(x=covid19regiontime_data_campania['data'], y=covid19regiontime_data_campania['nuovi_positivi'],\n                         mode='lines',name='Nuovi Positivi',line_shape='spline'))\n\nfig.add_trace(go.Scatter(x=covid19regiontime_data_campania['data'], y=covid19regiontime_data_campania['totale_ospedalizzati'],\n                         mode='lines',name='totale ospedalizzati'))\n\nfig.add_trace(go.Scatter(x=covid19regiontime_data_campania['data'], y=sw['tamponi_eseguiti_g']\/10,\n                         mode='lines',name='10% dei tamponi eseguiti'))\n\nfig.update_layout(title='Andamento in Campania positivi al covid ricoverati in terapia intensiva, ospedalizzati',\n                   xaxis_title='Day',\n                   yaxis_title='Valori effettivi',\n                   hovermode='closest')\n\n\nfig.show()\n","3a2a729d":"#sw['tamponi_eseguiti_g']\nswc=(sw[sw['tamponi_eseguiti_g']>9000])\n#swc","02407d16":"import statistics\n\ntp=int(covid19regiontime_data_campania['terapia_intensiva'].tail(1))\nto=int(covid19regiontime_data_campania['totale_ospedalizzati'].tail(1))\nido=int(covid19regiontime_data_campania['isolamento_domiciliare'].tail(1))\nrs=int(covid19regiontime_data_campania['ricoverati_con_sintomi'].tail(1))\nposit=int(covid19regiontime_data_campania['totale_positivi'].tail(1))\ndeced=int(covid19regiontime_data_campania['deceduti'].tail(1))\ntamp=int(statistics.mean(swc['tamponi_eseguiti_g']))\n\nleg_ti=(\"Ter.Int=\"+str(tp))\nleg_to=(\"Ospedaliz.=\"+str(to))\nleg_ido=(\"Isol.Dom=\"+str(ido))\nleg_rs=(\"Ricoverati=\"+str(rs))\nleg_dc=(\"Deceduti=\"+str(deced))\ntitolo_torta=\"Campania: suddivisione dei casi Positivi Media Tamponi al giorno: \"+str(tamp)","61eb2f41":"region_time_series=covid19regiontime_data_campania.groupby('data')['terapia_intensiva','totale_positivi','deceduti','dimessi_guariti','totale_ospedalizzati'].sum().reset_index()\nregion_time_series['casi_netti_positivi']=region_time_series['totale_positivi']-(region_time_series['deceduti']+region_time_series['dimessi_guariti'])\nregion_time_series['terapia_intensiva(%)']=round((region_time_series['terapia_intensiva']\/region_time_series['totale_positivi'])*100,4)\n#px.line(region_time_series,x='data',y='terapia_intensiva(%)',title='Tasso di Terapie Intensive(%) rispetto ai casi positivi netti nel tempo in Campania',\n#        color_discrete_sequence=['purple'],line_shape='spline')\n#print(region_time_series['totale_positivi'].tail(),region_time_series['terapia_intensiva'].tail(),region_time_series['totale_ospedalizzati'].tail())\n#region_time_series","90b4c1da":"labels = leg_ti, leg_to, leg_ido,leg_rs\nsizes = [tp, to,ido,rs]\n \nexplode = (0.1, 0.1, 0, 0.1) \n  \nfig1, ax1 = plt.subplots(figsize=(10,10)) \nax1.pie(sizes, explode = explode, \n        labels = labels, autopct ='% 1.1f %%', \n        shadow = True, startangle = 150) \nax1.axis('equal') \n  \nax1.set_title(titolo_torta) \nplt.show() ","82b6fc15":"#tmp1=pos_pro.groupby(by=['denominazione_provincia','data'])['totale_casi'].agg('sum').reset_index()\n#tmp1['totale_casi_giornalieri']=tmp1['totale_casi']- tmp1['totale_casi'].shift(1)\n#tmp_last=tmp1.query('(data == @ult1)')\n#covid19provtime_data_campania","b2efbd9a":"pos_pro=covid19provtime_data_campania.sort_values(by=['denominazione_provincia','data'])\npos_pro1=pos_pro.groupby(by=['denominazione_provincia','data'])['totale_casi','denominazione_provincia'].sum().reset_index()\n#                                    'denominazione_provincia','denominazione_regione'].sum().reset_index()\n#pos_pro1=pos_pro[pos_pro['denominazione_provincia']!=\"Fuori Regione \/ Provincia Autonoma\"]\n#pos_pro2=pos_pro1[pos_pro1['denominazione_provincia']!=\"In fase di definizione\/aggiornamento\"]\n\npos_pro1\npospro_Salerno=pos_pro1[pos_pro1['denominazione_provincia']==\"Salerno\"]\npospro_Napoli=pos_pro1[pos_pro1['denominazione_provincia']==\"Napoli\"]\npospro_Caserta=pos_pro1[pos_pro1['denominazione_provincia']==\"Caserta\"]\npospro_Avellino=pos_pro1[pos_pro1['denominazione_provincia']==\"Avellino\"]\npospro_Benevento=pos_pro1[pos_pro1['denominazione_provincia']==\"Benevento\"]\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=pos_pro1['data'], y=pospro_Salerno['totale_casi'], mode='lines',name='Salerno',line_shape='spline'))\nfig.add_trace(go.Scatter(x=pos_pro1['data'], y=pospro_Napoli['totale_casi'], mode='lines',name='Napoli',line_shape='spline'))\nfig.add_trace(go.Scatter(x=pos_pro1['data'], y=pospro_Caserta['totale_casi'], mode='lines',name='Caserta',line_shape='spline'))\nfig.add_trace(go.Scatter(x=pos_pro1['data'], y=pospro_Avellino['totale_casi'], mode='lines',name='Avellino',line_shape='spline'))\nfig.add_trace(go.Scatter(x=pos_pro1['data'], y=pospro_Benevento['totale_casi'], mode='lines',name='Benevento',line_shape='spline'))\n\n\nfig.update_layout(title='Andamento Contagi Complessivi in Campania suddivisi per Provincia',\n                   xaxis_title='Day',\n                   yaxis_title='Valori effettivi',\n                   hovermode='closest')\n","e6ab5e26":"tmp1=pos_pro1.groupby(by=['denominazione_provincia','data'])['totale_casi'].agg('sum').reset_index()\ntmp1['totale_casi_giornalieri']=tmp1['totale_casi']- tmp1['totale_casi'].shift(1)\ntmp_last=tmp1.query('(data == @ult1)').sort_values(by=['totale_casi_giornalieri'])\ntmp_last.style.background_gradient(cmap='Reds').set_precision(1)","ae5b1180":"# Shifts\nds_it['total_cases-1'] = ds_it.shift(periods=1, fill_value=0)['totale_casi']\nds_it['total_cases-2'] = ds_it.shift(periods=2, fill_value=0)['totale_casi']\n\nds_it['tamponi-1'] = ds_it.shift(periods=1, fill_value=0)['tamponi']\nds_it['tamponi-2'] = ds_it.shift(periods=2, fill_value=0)['tamponi']\n\n\n\n# Deltas\nds_it['total_cases_DELTA1'] = (ds_it['totale_casi'] - ds_it['total_cases-1'])\/(ds_it['tamponi']-ds_it['tamponi-1'])\n# Shift of Deltas\nds_it['total_cases_DELTA1-1'] = (ds_it['total_cases-1'] - ds_it['total_cases-2'])\/(ds_it['tamponi-1']-ds_it['tamponi-2'])\n\ntry:\n    ds_it['growth_factor_cum_infected'] = (ds_it['total_cases_DELTA1'] - ds_it['total_cases_DELTA1-1'])\/ ds_it['total_cases_DELTA1-1']\nexcept ZeroDivisionError:\n    ds_it['growth_factor_cum_infected'] = 0\n    ds_it.head()\nds_it['date']=pd.to_datetime(ds_it['data'])\nds_it['date']=ds_it['date'].dt.date\nds_it.set_index('date',inplace=True)\n#print(ds_it['total_cases_DELTA1'],ds_it['total_cases_DELTA1-1'])\n#ds_it_data['total_cases-1']\nreg_camp['total_cases-1'] = reg_camp.shift(periods=1, fill_value=0)['totale_casi']\nreg_camp['total_cases-2'] = reg_camp.shift(periods=2, fill_value=0)['totale_casi']\n\nreg_camp['tamponi-1'] = reg_camp.shift(periods=1, fill_value=0)['tamponi']\nreg_camp['tamponi-2'] = reg_camp.shift(periods=2, fill_value=0)['tamponi']\n\n\n\n# Deltas\nreg_camp['total_cases_DELTA1'] = (reg_camp['totale_casi'] - reg_camp['total_cases-1'])\/(reg_camp['tamponi']-reg_camp['tamponi-1'])\n# Shift of Deltas\nreg_camp['total_cases_DELTA1-1'] = (reg_camp['total_cases-1'] - reg_camp['total_cases-2'])\/(reg_camp['tamponi-1']-reg_camp['tamponi-2'])\n\ntry:\n    reg_camp['growth_factor_cum_infected'] = (reg_camp['total_cases_DELTA1'] - reg_camp['total_cases_DELTA1-1'])\/ reg_camp['total_cases_DELTA1-1']\nexcept ZeroDivisionError:\n    reg_camp['growth_factor_cum_infected'] = 0\n    reg_camp.head()\nreg_camp['date']=pd.to_datetime(ds_it['data'])\nreg_camp['date']=reg_camp['date'].dt.date\nreg_camp.set_index('date',inplace=True)","ab8ced2d":"ds_it1=ds_it.query('(data >\"2020-12-20\")')\nds_it1['CMA_4']=ds_it1['growth_factor_cum_infected'].expanding(min_periods=4).mean()\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=ds_it1['data'], y=ds_it1['CMA_4'], mode='lines',name='Salerno',line_shape='spline'))\nfig.update_layout(title='Indicatore di Crescita Italia media mobile 4 giorni' ,\n                   xaxis_title='Day',\n                   yaxis_title='Valori effettivi',\n                   hovermode='closest')","3ab1a78c":"reg_camp1=reg_camp.query('(data >\"2020-12-20\")')\nreg_camp1['CMA_4']=reg_camp1['growth_factor_cum_infected'].expanding(min_periods=4).mean()\nfig = go.Figure()\n#fig.add_trace(go.Scatter(x=reg_camp1['data'], y=reg_camp1['growth_factor_cum_infected'], mode='lines',\\\n #                        name='Campania',line_shape='vhv'))\nfig.add_trace(go.Scatter(x=reg_camp1['data'], y=reg_camp1['CMA_4'], mode='lines',\\\n                         name='Campania',line_shape='spline'))\nfig.update_layout(title='Fattore di Crescita Campania calcolato con media mobile a 4 giorni' ,\n                   xaxis_title='Day',\n                   yaxis_title='Valori effettivi',\n                   hovermode='closest',)\nfig.update_yaxes(range=[-0.01,0.08])","031a3b2b":"## Fattore di Crescita\n","22ba6658":"## Efficienza Tracciamento Regioni: numero tamponi rispetto alla popolazione","9dd816f0":"## Severe symptoms on hospitalized: Posti T.I rispetto agli ospedalizzati","e2de23b5":"## Ambient Constrain Indicator: numero infetti rispetto ai tamponi","3632e59c":"## Andamento della percentuale di Incremento in Campania Confronto con dati Nazionaloi da Ottobre ad oggi","93b30600":"## Region lethality rate","fe6fe88c":"## Cumulative Results","c94a53e4":"## Severe symptoms on infected: T.I occupate rispetto al numero degli infetti","ecd459a0":"Si nota che il fattore di crescita, che presagiva l'incremento della curva, si \u00e8 avuto in valore assoluto maggiore nel mese di Luglio Agosto","c251690c":"## Severe symptoms Indicator : posti ospedalieri occupati rispetto al numero degli infetti","39d16386":"# Analisi dei dati relativi alla Pandemia in Campania\n![image.png](attachment:image.png)\n* In questo articolo si elaborano i dati, in modalit\u00e0 real time, depositati giornalmente dalla Protezione Civile Italiana. L'analisi \u00e8 di tipo statistico descrittivo per mettere in evidenza l'andamento della curva epidemica in Campania  ","076e9c06":"## Andamento della percentuale di Incremento in Campania da Ottobre ad oggi","9e3011c6":"Sappiamo che l'andamento dei casi confermati in un'epidemia segue una logica generalizzata. A tal proposito possiamo studiare il Fattore di Crescita, definito con \n\n$$G=\\frac{\u0394C(g)-\u0394C(g-1)}{\u0394C(g-1)}$$  \n\ndove \u0394C (g) \u00e8 l'aumento massimo di casi confermati al giorno (g) rispetto al giorno precedente (g-1), per tentare la previsione del punto di flesso logistico (G = 1).\n\nCome possiamo leggerlo? \n\nUn valore di G (Fattore di crescita) superiore a 1 potrebbe significare che sei ancora nella parte esponenziale della crescita. Come possiamo vedere di seguito:","2245608b":"## Screening Indicator","ea53b061":"### Fattore di Crescita in Italia","3444c9d6":"## Indicatore Privince Campania","9953d297":" ## Suddivisione per tipo di evoluzione sitomatica in Campania ","f3e5a15d":"### Distribuzione Percentuale Positivi Nazionale","fba6f934":"### Fattore di Crescita in Campania"}}