{"cell_type":{"2d0ddd65":"code","3cdb862b":"code","df259b44":"code","04e7aee2":"code","3702a4a7":"code","80f7632e":"code","e125ae5b":"code","c737d433":"code","1ffb3ade":"code","39d91976":"code","7beec8f2":"code","b628e4a5":"code","84cddf4e":"code","94e27091":"code","7eae672a":"code","12bb3d74":"code","49ac4653":"code","62f4d170":"code","06ef25d7":"code","b475948c":"code","fae8e9a5":"code","ff77d8b0":"code","eb3394f4":"code","38e00ab3":"code","63d6d12a":"code","85a6d0d0":"code","23885491":"code","32e98662":"code","8b7eac6e":"code","eb9feba2":"code","3e21d2e7":"code","58a68820":"code","73e3bba3":"code","eda4bb86":"code","5dbe41d1":"code","444bd9b0":"code","03836413":"code","aaa2b679":"code","3c9dd0e7":"code","12a3968b":"code","487deb4f":"code","d74a0a9e":"code","5e6f8aab":"code","511d057b":"code","dc2e5dba":"code","15a86c3a":"code","4fdb549c":"code","f0436606":"code","ac930f5f":"code","86e6b5ff":"code","901b938a":"code","11b75c44":"code","0a30bea8":"code","c8361ca8":"code","87bf01eb":"code","e5c8aa89":"code","506b18ac":"code","cda30179":"code","ae4a442f":"code","b23c4230":"code","f09e0fe2":"code","58436d6d":"code","4b9839e1":"code","56f500d4":"code","33f89100":"code","cdd962ab":"code","80603711":"code","df9e7e12":"code","a4263086":"code","61448a1c":"code","3c462f5b":"code","39ce2a25":"code","300f9048":"code","f2d5dc14":"code","802fae6e":"code","69f17a94":"code","af3667cf":"code","5a9cafea":"code","6ed1ed44":"code","6c6e6b5d":"code","35049b13":"code","eea50d5c":"code","e35f6fa6":"code","14dff81f":"code","39835f80":"code","5893416d":"code","c6fb652d":"code","0f726fdb":"code","68584f47":"code","6add540e":"code","2d39c247":"code","cbdb19d5":"code","18cba66c":"code","6252139d":"code","4223ead6":"code","83d4e32e":"code","4cd03838":"code","613373f6":"code","6ade0337":"code","530371a5":"code","67d3bc06":"code","b0c3f2d9":"code","e1fe5823":"code","8bbf00f3":"code","9ff73d50":"code","76d65b2d":"code","c52be3fa":"code","0c16df3f":"code","c48208c2":"code","da87f80b":"markdown","49a8447e":"markdown","f2a53b7e":"markdown","022f1da5":"markdown","0a36bd8e":"markdown","f36d7a3a":"markdown","586aaa85":"markdown","9c7503fe":"markdown","aee4089b":"markdown","5adfa388":"markdown","6f09c18e":"markdown","c6139d30":"markdown","2983e6c5":"markdown","4e0150d7":"markdown","13799f0f":"markdown","3e463764":"markdown","9e5ce601":"markdown","478840c9":"markdown","75dd9eb5":"markdown","a9a23f09":"markdown","1ba0e639":"markdown","8ea8e52f":"markdown","b9701046":"markdown","2a41c3ec":"markdown","29d2e8ee":"markdown","bdd2d839":"markdown","b4a7c34b":"markdown","b1456824":"markdown","6906d32a":"markdown","8d7dbe62":"markdown","90ef1f2e":"markdown","a57e1ee9":"markdown","9cc46e5f":"markdown","9c8c5b4c":"markdown","da6b2f81":"markdown","388d7ea5":"markdown","5e2f7b90":"markdown","13f5f581":"markdown","6d293ed9":"markdown","3900d276":"markdown","5b872f80":"markdown","d11f1c76":"markdown","5f8ef077":"markdown","1c299a75":"markdown","b0900022":"markdown","d4b6398d":"markdown"},"source":{"2d0ddd65":"# the important modules\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt  # data Viz\nimport seaborn as sns\n\nimport os","3cdb862b":"df = pd.read_csv(\"\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\")","df259b44":"df.info()","04e7aee2":"questions = df.iloc[0,:]","3702a4a7":"# the count of null values\ndf.isnull().sum().sum()","80f7632e":"nulls = df.isnull().sum()\nnull_columns = nulls[nulls > 0]\nnot_null_columns = nulls[nulls == 0]","e125ae5b":"# the null values of each column \/ the whole number of respones\nnull_percentages = null_columns \/ 25973","c737d433":"plt.figure(figsize=(10, 8))\nnull_percentages.hist(bins=20)\nplt.title(\"the freq of null percentages for each null-column\", fontsize=15)\nplt.show()","1ffb3ade":"df.fillna(\"Not_Specified\", inplace=True)","39d91976":"df.duplicated().sum()","7beec8f2":"# Remove the question row\ndf.drop(0, inplace=True)","b628e4a5":"# bar plot function\ndef bar_plot(column, title='', xlabel='',ylabel='',  bar_kind='bar', figure_size=(15,8), index=0, df=df):\n    colors = ['darkblue', 'darkred', 'darkorange', 'red', 'gold']\n    rand_color = colors[np.random.randint(0, 5)]\n    plt.figure(figsize = figure_size)\n    if index:\n        df[column].value_counts()[:index].plot(kind= bar_kind, color = rand_color)\n    else:\n        df[column].value_counts().plot(kind= bar_kind, color = rand_color)\n    plt.title(title, fontsize=15)\n    plt.xlabel(xlabel, fontsize=15)\n    plt.ylabel(ylabel, fontsize=15)\n    plt.show()","84cddf4e":"# pie plot function\ndef pie_plot(column, title='', xlabel='',ylabel='', figure_size=(15,10), index=0, df=df):\n    colors = ['yellowgreen', 'gold', 'lightskyblue', 'lightcoral', \"red\", \"lightblue\", \"yellow\"]\n    if index:\n        df[column].value_counts()[:index].plot(kind='pie', autopct='%1.1f%%', figsize=figure_size, shadow=True, colors=colors)\n    else:\n        df[column].value_counts().plot(kind='pie', autopct='%1.1f%%', figsize=figure_size, shadow=True, colors=colors)\n    plt.title(title, fontsize=15)\n    plt.xlabel(xlabel, fontsize=15)\n    plt.ylabel(ylabel, fontsize=15)\n    plt.show()","94e27091":"# Rename the Duration column\ndf.rename(columns = {\"Time from Start to Finish (seconds)\": \"Duration\"}, inplace=True)","7eae672a":"# convert from minutes to seconds\ndf.Duration = pd.to_numeric(df.Duration)\ndf.Duration = df.Duration \/ 60.0","12bb3d74":"df.Duration.describe()","49ac4653":"# Rename the age column\ndf.rename(columns = {\"Q1\": \"Age\"}, inplace=True)","62f4d170":"bar_plot(\"Age\", \"The Distributions Of The Age\", \"The Age\", \"The Count of the Age\", \"barh\")","06ef25d7":"# Rename the Gender column\ndf.rename(columns = {\"Q2\": \"Gender\"}, inplace=True)","b475948c":"bar_plot(\"Gender\", \"The Count Of Each Gendar\", bar_kind='barh')","fae8e9a5":"age_df = df[np.logical_or(df.Gender == 'Man', df.Gender == 'Woman')]","ff77d8b0":"plt.figure(figsize=(15, 8))\nsns.histplot(x = age_df.Age,zorder=4,linewidth=0.5, hue=age_df.Gender, multiple='dodge',)\nplt.title(\"The Age freq according to the gender\", fontsize=15)\nplt.show()","eb3394f4":"# Rename the Country column\ndf.rename(columns = {\"Q3\": \"Country\"}, inplace=True)","38e00ab3":"bar_plot(\"Country\",\"The Frequancy of Countries\", figure_size=(20,10))","63d6d12a":"countries = df.Country.value_counts()\ntop_countries = countries[:10]","85a6d0d0":"plt.figure(figsize=(15, 8))\ntop_countries.plot(kind='bar', color = 'darkorange')\nplt.title(\"the distributions of top 10 countries\", fontsize= 15)\nplt.show()","23885491":"# Rename the Education column\ndf.rename(columns = {\"Q4\": \"Education\"}, inplace=True)","32e98662":"pie_plot(\"Education\", \"The Percentage of each Educational level\", figure_size=(15, 10))","8b7eac6e":"bar_plot(\"Education\", \"The Frequancy of each Educational level\")","eb9feba2":"age_df = df[np.logical_or(df.Gender == 'Man', df.Gender == 'Woman')]","3e21d2e7":"age_df['Education'] = age_df['Education'].replace(['Professional doctorate'],'doctorate')\nage_df['Education'] = age_df['Education'].replace(['I prefer not to answer'],'not to answer')\nage_df['Education'] = age_df['Education'].replace(['No formal education past high school'],'No Formal')\nage_df['Education'] = age_df['Education'].replace(['Some college\/university study without earning a bachelor\u2019s degree'],'Some college')","58a68820":"plt.figure(figsize=(12, 8))\nsns.histplot(x = age_df.Education,zorder=4,linewidth=0.5, hue=age_df.Gender, multiple='dodge')\nplt.title(\"The EDU freq according to the gender\", fontsize=15)\nplt.show()","73e3bba3":"# Rename the Role column\ndf.rename(columns = {\"Q5\": \"Role\"}, inplace=True)","eda4bb86":"bar_plot(\"Role\", \"The Count Of the Roles\",\"The Role\", bar_kind=\"barh\")","5dbe41d1":"bar_plot(\"Role\", \"The Frequancy OF Top 5 Roles\", \"The Role\", \"The Count\", index=5)","444bd9b0":"bar_plot(\"Role\", \"The Frequancy OF Top 5 Roles\", \"The Role\", \"The Count\", index=10)","03836413":"# Rename the code_experience column\ndf.rename(columns = {\"Q6\": \"code_experience\"}, inplace=True)","aaa2b679":"pie_plot(\"code_experience\", \"The Percentage of each # of years coding experience\")","3c9dd0e7":"plt.figure(figsize=(15, 8))\nsns.histplot(x = age_df.Q6, zorder=4,linewidth=0.5, hue=age_df.Gender, multiple='dodge', palette='winter')\nplt.title(\"The Code Experience Freq according to the Gender\", fontsize=15)\nplt.show()","12a3968b":"def get_df(index1, index2, df=df):\n    # Create Dictionary which contains the key and value of seperated questions, which has different columns\n    temp_dic = {}\n    for column in df.iloc[:, index1:index2].columns:\n        try:\n            column = df[column][df[column] != \"Not_Specified\"].value_counts()\n            key = column.index[0]\n            value = column.values[0]\n            temp_dic[key] = value\n        except:\n            continue\n    temp_df = pd.DataFrame(temp_dic, index=temp_dic.keys())\n    return temp_df","487deb4f":"langs_df = get_df(7, 20)","d74a0a9e":"langs_df.iloc[0,:].sort_values(ascending=True).plot(kind='barh', figsize=(15, 8), color='darkorange')\nplt.title(\"The Freq of each Programming language\", fontsize=15)\nplt.xlabel(\"The language\", fontsize=15)\nplt.ylabel(\"The count\", fontsize=15)\nplt.show()","5e6f8aab":"colors = ['yellowgreen', 'gold', 'lightskyblue', 'lightcoral', \"red\"]\nlangs_df.iloc[0,:].sort_values(ascending=False)[:5].plot(kind='pie', autopct='%1.1f%%', figsize=(15, 10), shadow=True, colors=colors)\nplt.title(\"The Percentage of Top 5 regular basis programming languages\", fontsize=15)\nplt.show()","511d057b":"# Rename the recommend  programming language column\ndf.rename(columns = {\"Q8\": \"recommend_lang\"}, inplace=True)\nrecommend_lang = df.recommend_lang.value_counts()\nrecommend_lang.drop(\"Not_Specified\", inplace=True)","dc2e5dba":"colors = ['yellowgreen', 'gold', 'lightskyblue', 'lightcoral', \"red\"]\nrecommend_lang.sort_values(ascending=False)[:5].plot(kind='pie', autopct='%1.1f%%', figsize=(15, 10), shadow=True, colors=colors)\nplt.title(\"The Percentage of Top 5 recommended programming languages\", fontsize=15)\nplt.show()","15a86c3a":"ide_df = get_df(21,30)","4fdb549c":"ide_df.iloc[0,:].sort_values(ascending=False).plot(kind='bar', figsize=(15, 8), color='darkorange')\nplt.title(\"The Freq of regular IDEs\", fontsize=15)\nplt.xlabel(\"The IDE\", fontsize=15)\nplt.ylabel(\"The count\", fontsize=15)\nplt.show()","f0436606":"langs_df.iloc[0,:].sort_values(ascending=False)[:5].plot(kind='pie', autopct='%1.1f%%', figsize=(15, 10), shadow=True, colors=colors)\nplt.title(\"The Percentages of Top 5 regular IDEs\", fontsize=15)\nplt.show()","ac930f5f":"note_df = get_df(34, 51)","86e6b5ff":"note_df.iloc[0,:].sort_values(ascending=True).plot(kind='barh', figsize=(15, 10), color='darkorange')\nplt.title(\"The Freq of regular Hosted notebooks\", fontsize=15)\nplt.xlabel(\"The IDE\", fontsize=15)\nplt.ylabel(\"The count\", fontsize=15)\nplt.show()","901b938a":"langs_df.iloc[0,:].sort_values(ascending=False)[:5].plot(kind='pie', autopct='%1.1f%%', figsize=(15, 10), shadow=True, colors=colors)\nplt.title(\"The Percentages of Top 5 regular Hosted Notebooks\", fontsize=15)\nplt.ylabel(\"\")\nplt.show()","11b75c44":"pie_plot(\"Q11\", \"The Percentages of Top 3 computing platform\", index=3, figure_size=(15, 8))","0a30bea8":"hard_df = get_df(52, 58)","c8361ca8":"hard_df.iloc[0,:].sort_values(ascending=False)[:5].plot(kind='pie', autopct='%1.1f%%', figsize=(15, 10), shadow=True, colors=colors)\nplt.title(\"The Percentages of Top 5 regular specialized hardware\", fontsize=15)\nplt.ylabel(\"\")\nplt.show()","87bf01eb":"bar_plot(\"Q13\", \"the # of times which TPU used\", bar_kind='barh')","e5c8aa89":"viz_df = get_df(59, 71)","506b18ac":"viz_df.iloc[0,:].sort_values(ascending=False)[:5].plot(kind='pie', autopct='%1.1f%%', figsize=(15, 10), shadow=True, colors=colors)\nplt.title(\"The Percentages of Top 5 Data Viz libraries\", fontsize=15)\nplt.ylabel(\"\")\nplt.show()","cda30179":"frame_df = get_df(72, 90)","ae4a442f":"frame_df.iloc[0,:].sort_values(ascending=True).plot(kind='barh', figsize=(15, 10), color='darkblue')\nplt.title(\"The # of ML Frameworks\", fontsize=15)\nplt.show()","b23c4230":"langs_df.iloc[0,:].sort_values(ascending=False)[:5].plot(kind='pie', autopct='%1.1f%%', figsize=(15, 10), shadow=True, colors=colors)\nplt.title(\"The Percentages of Top 5 ML Frameworks\", fontsize=15)\nplt.ylabel(\"\")\nplt.show()","f09e0fe2":"algos_df = get_df(90, 102)","58436d6d":"algos_df.iloc[0,:].sort_values(ascending=True).plot(kind='barh', figsize=(15, 10), color='green')\nplt.title(\"The # of ML Algorithms\", fontsize=15)\nplt.show()","4b9839e1":"langs_df.iloc[0,:].sort_values(ascending=False)[:5].plot(kind='pie', autopct='%1.1f%%', figsize=(15, 10), shadow=True, colors=colors)\nplt.title(\"The Percentages of Top 5 ML Algos\", fontsize=15)\nplt.ylabel(\"\")\nplt.show()","56f500d4":"cv_df = get_df(102, 109)","33f89100":"cv_df.iloc[0,:].sort_values(ascending=True).plot(kind='barh', figsize=(15, 10), color='darkorange')\nplt.title(\"The # of CV methods\", fontsize=15)\nplt.show()","cdd962ab":"embd_df = get_df(109, 115)","80603711":"embd_df.iloc[0,:].sort_values(ascending=True).plot(kind='barh', figsize=(15, 10), color='darkorange')\nplt.title(\"The # of Word embeddings\", fontsize=15)\nplt.show()","df9e7e12":"q20 = df.Q20.value_counts().drop(\"Not_Specified\")","a4263086":"q20.sort_values(ascending=True).plot(kind='barh', figsize=(15, 10), color='darkorange')\nplt.title(\"The # of Manufacturing\", fontsize=15)\nplt.show()","61448a1c":"q20.sort_values(ascending=False)[:5].plot(kind='pie', autopct='%1.1f%%', figsize=(15, 10), shadow=True, colors=colors)\nplt.title(\"The Percentages of Top 5 Manufacturing\", fontsize=15)\nplt.ylabel(\"\")\nplt.show()","3c462f5b":"eg_df = df[df.Country == 'Egypt']\nprint(f\"the number of Egyption responses: {len(eg_df)}\")","39ce2a25":"print(\"the Rank of Egyption users in kaggl is 11\")","300f9048":"bar_plot(\"Age\", \"The Distributions Of The Egyption Ages\", \"The Age\", \"The Count of The Age\", df=eg_df)","f2d5dc14":"bar_plot(\"Gender\", \"The Freq of The Egyption Genders\", df=eg_df, figure_size=(12, 8))","802fae6e":"eg_age_df = age_df[age_df.Country == \"Egypt\"]","69f17a94":"plt.figure(figsize=(12, 8))\nsns.histplot(x = eg_age_df.Age,zorder=4,linewidth=0.5, hue=eg_age_df.Gender, multiple='dodge',)\nplt.title(\"The Egyption Ages Freq according to the Gender\", fontsize=15)\nplt.show()","af3667cf":"pie_plot(\"Education\",\"The Percentage of each Eg educational level\", df=eg_df)","5a9cafea":"plt.figure(figsize=(12, 8))\nsns.histplot(x = eg_age_df.Education,zorder=4,linewidth=0.5, hue=eg_age_df.Gender, multiple='dodge', palette='spring')\nplt.title(\"The Eg education Freq according to the gender\", fontsize=15)\nplt.show()","6ed1ed44":"bar_plot(\"Role\", \"The Count of Eg's Current Roles\", \"The Role\", \"The Count\", bar_kind='barh', df=eg_df, figure_size=(15, 10))","6c6e6b5d":"bar_plot(\"Role\", \"The Count of Top 5 Eg's Current Roles\", \"The Role\", \"The Count\", bar_kind='barh', df=eg_df, index=5)","35049b13":"pie_plot(\"code_experience\", \"The Percentage of each # coding experience years for Egyptions\", df=eg_df)","eea50d5c":"langs_df = get_df(7,20, eg_df)","e35f6fa6":"langs_df.iloc[0,:].sort_values(ascending=True).plot(kind='barh', figsize=(15, 8), color='darkorange')\nplt.title(\"The Freq of each EG's Programming languages\", fontsize=15)\nplt.xlabel(\"The language\", fontsize=15)\nplt.ylabel(\"The count\", fontsize=15)\nplt.show()","14dff81f":"colors = ['yellowgreen', 'gold', 'lightskyblue', 'lightcoral', \"red\"]\nlangs_df.iloc[0,:].sort_values(ascending=False)[:5].plot(kind='pie', autopct='%1.1f%%', figsize=(15, 10), shadow=True, colors=colors)\nplt.title(\"The Percentage of Top 5 EG's regular basis programming languages\", fontsize=15)\nplt.ylabel(\"\")\nplt.show()","39835f80":"recommend_lang = eg_df.recommend_lang.value_counts()\nrecommend_lang.drop(\"Not_Specified\", inplace=True)","5893416d":"colors = ['yellowgreen', 'gold', 'lightskyblue', 'lightcoral', \"red\"]\nrecommend_lang.sort_values(ascending=False)[:5].plot(kind='pie', autopct='%1.1f%%', figsize=(15, 10), shadow=True, colors=colors)\nplt.title(\"The Percentage of Top 5 EG's recommended programming languages\", fontsize=15)\nplt.ylabel(\"\")\nplt.show()","c6fb652d":"ide_df = get_df(21, 30, eg_df)","0f726fdb":"ide_df.iloc[0,:].sort_values(ascending=False).plot(kind='barh', figsize=(15, 8), color='green')\nplt.title(\"The Freq of EG's regular IDEs\", fontsize=15)\nplt.xlabel(\"The IDE\", fontsize=15)\nplt.ylabel(\"The count\", fontsize=15)\nplt.show()","68584f47":"langs_df.iloc[0,:].sort_values(ascending=False)[:5].plot(kind='pie', autopct='%1.1f%%', figsize=(15, 10), shadow=True, colors=colors)\nplt.title(\"The Percentages of Top 5 EG's regular IDEs\", fontsize=15)\nplt.show()","6add540e":"note_df = get_df(34, 51, eg_df)","2d39c247":"note_df.iloc[0,:].sort_values(ascending=True).plot(kind='barh', figsize=(15, 8), color='darkorange')\nplt.title(\"The Freq of EG's regular Hosted notebooks\", fontsize=15)\nplt.xlabel(\"The IDE\", fontsize=15)\nplt.ylabel(\"The count\", fontsize=15)\nplt.show()","cbdb19d5":"pie_plot(\"Q11\", \"The Percentages of Top 3 EG's computing platform\", df=eg_df, index=3)","18cba66c":"hard_df = get_df(52, 58, df=eg_df)","6252139d":"hard_df.iloc[0,:].sort_values(ascending=False)[:5].plot(kind='pie', autopct='%1.1f%%', figsize=(15, 10), shadow=True, colors=colors)\nplt.title(\"The Percentages of Top 5 EG's regular specialized hardware\", fontsize=15)\nplt.ylabel(\"\")\nplt.show()","4223ead6":"model_df = df.iloc[:, :7]","83d4e32e":"model_df.head(1)","4cd03838":"from sklearn.preprocessing import LabelEncoder ","613373f6":"dummies_columns = []\n\nfor column in model_df.columns:\n    if df[column].dtype == 'O':\n        dummies_columns.append(column)\ndummies_columns","6ade0337":"# fit the columns label\ndef label_encoding(columns,df):\n    for i in range(len(columns)):\n        le = LabelEncoder()\n        df[columns[i]] = le.fit_transform(df[columns[i]])\n\nlabel_encoding(dummies_columns, model_df)","530371a5":"model_df.head(1)","67d3bc06":"X = model_df.drop([\"code_experience\", \"Duration\"], axis=1).values\ny = model_df.code_experience.values","b0c3f2d9":"from sklearn.model_selection import train_test_split","e1fe5823":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=35)","8bbf00f3":"X_train.shape","9ff73d50":"y_train.shape","76d65b2d":"  import xgboost as xgb","c52be3fa":"model = xgb.XGBClassifier(n_estimators=100,max_depth=5, objective = \"multi:softmax\")","0c16df3f":"model.fit(X_train, y_train)","c48208c2":"model.score(X_test, y_test)","da87f80b":"> **The top 5 countries are: India, US, Others, Japan, and China**","49a8447e":"> __UP Vote <3__","f2a53b7e":"> **Education is really good index, isn't it?**","022f1da5":"> **the number of questions**","0a36bd8e":"> **The Years of writing code: code_experience**","f36d7a3a":"**Explore the percentage of the null values**","586aaa85":"> **Q11: computing platform**","9c7503fe":"**We are ready now to explore the data**","aee4089b":"> **Regular Basis hosted notebooks**","5adfa388":"> using sub_df for ML","6f09c18e":"> # Wrangle the data","c6139d30":"> **Which Programming language which you recommend**","2983e6c5":"> **data visualization libraries: Q14**","4e0150d7":"# Egypt Data: EDA","13799f0f":"# About:\n1. Welcome to Kaggle's annual Machine Learning and Data Science Survey competition!\n2. The survey was live from 09\/01\/2021 to 10\/04\/2021, and after cleaning the data we finished with 25,973 responses!\n3. The challenge objective: tell a data story about a subset of the data science community represented in this survey\n","3e463764":"> **Working is in progress ...**","9e5ce601":"> **Check the duplicated values**","478840c9":"> **The 13 Selected programming langs**","75dd9eb5":"> **The Main Functions**","a9a23f09":"> **Starting by the duration column**","1ba0e639":"> __ML Algos: Q17__","8ea8e52f":"> **Show the distributions of null values percentages**","b9701046":"> train_test split","2a41c3ec":"> **Q12: regular specialized hardware**","29d2e8ee":"> __Q13: TPU__","bdd2d839":"> __Word embeddings: Q19__","b4a7c34b":"> # EDA: Let's explore it","b1456824":"> **What about the Country**","6906d32a":"> __ML Frameworks: Q15__","8d7dbe62":"**Most of the responses age are between 25_29, 18_21, 22_24, and 30_34**","90ef1f2e":"> **CV methods: Q18**","a57e1ee9":"> **Dive into the gender**","9cc46e5f":"> **Removing null values will let us lost a lot of insights, so we'll fill it by: *Not_Specified***","9c8c5b4c":"> __Manufacturing: Q20__","da6b2f81":"> **The (Q1:Q6) have no null values** \\\n> **The (Q7 : Last Question) have null values**","388d7ea5":"> # PLUS: Modelling","5e2f7b90":"> **Predict *The Country* based on Model_df features**","13f5f581":"> **Current role: JOB JOB JOB ...**","6d293ed9":"> **Let's move on to the age: Q1**","3900d276":"> # Read the data","5b872f80":"> Edu according to Gender","d11f1c76":"> **regular basis integrated development environments (IDES)**","5f8ef077":"> **The summary statistics about the Duration column**","1c299a75":"> **UP Vote <3**","b0900022":"> **Label Encoding module**","d4b6398d":"> **We will go together step by step to explore the insights behind each question**"}}