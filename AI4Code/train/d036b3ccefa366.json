{"cell_type":{"76426e54":"code","609b3997":"code","03a02421":"code","c164791e":"code","b10576f9":"code","143211c5":"code","e4ca51ce":"code","c7cf6822":"code","a279e824":"code","9e333bea":"code","42745000":"code","1836e6d4":"code","7fd70397":"code","5f5ea668":"code","77e6d2f9":"code","7c51f5ad":"code","3af91cb3":"code","dfe281b9":"code","62c4b1b0":"code","268acc70":"code","21ba87ca":"markdown","8ea2903d":"markdown","10e797bf":"markdown","e5a2484a":"markdown","e67bb19a":"markdown","69570201":"markdown","d707523c":"markdown","f366f519":"markdown","b1679f3e":"markdown","f66e71d6":"markdown","4868b9ab":"markdown","99925741":"markdown","0793e13c":"markdown","acdc797f":"markdown","d8ea321d":"markdown","4181b20b":"markdown","2d7a4ac1":"markdown","1927ee43":"markdown","f16d2ad1":"markdown","bc925b72":"markdown","6b4fa96c":"markdown"},"source":{"76426e54":"import warnings\nwarnings.filterwarnings('ignore')\nimport numpy as np\nimport pandas as pd\nfrom sklearn.metrics.regression import mean_squared_error\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import cross_val_score, train_test_split\nfrom sklearn.linear_model import LinearRegression, LassoCV, Lasso\nfrom sklearn.ensemble import RandomForestRegressor","609b3997":"data = pd.read_csv('..\/input\/winequality-white.csv')","03a02421":"data.head()","c164791e":"data.info()","b10576f9":"# y = None # you code here\n\n# X_train, X_holdout, y_train, y_holdout = train_test_split # you code here\n# scaler = StandardScaler()\n# X_train_scaled = scaler.fit_transform # you code here\n# X_holdout_scaled = scaler.transform # you code here","143211c5":"# linreg = # you code here\n# linreg.fit # you code here","e4ca51ce":"# print(\"Mean squared error (train): %.3f\" % # you code here\n# print(\"Mean squared error (test): %.3f\" % # you code here","c7cf6822":"# linreg_coef = pd.DataFrame # you code here\n# linreg_coef.sort_values # you code here","a279e824":"# lasso1 = Lasso # you code here\n# lasso1.fit # you code here","9e333bea":"# lasso1_coef = pd.DataFrame # you code here\n# lasso1_coef.sort_values # you code here","42745000":"# alphas = np.logspace(-6, 2, 200)\n# lasso_cv = LassoCV # you code here\n# lasso_cv.fit # you code here","1836e6d4":"# lasso_cv.alpha_","7fd70397":"# lasso_cv_coef = pd.DataFrame # you code here\n# lasso_cv_coef.sort_values # you code here","5f5ea668":"# print(\"Mean squared error (train): %.3f\" % # you code here\n# print(\"Mean squared error (test): %.3f\" % # you code here","77e6d2f9":"# forest = RandomForestRegressor # you code here\n# forest.fit # you code here","7c51f5ad":"# print(\"Mean squared error (train): %.3f\" % # you code here\n# print(\"Mean squared error (cv): %.3f\" % # you code here\n# print(\"Mean squared error (test): %.3f\" % # you code here","3af91cb3":"# forest_params = {'max_depth': list(range(10, 25)), \n#                  'min_samples_leaf': list(range(1, 8)),\n#                  'max_features': list(range(6,12))}\n\n# locally_best_forest = GridSearchCV # you code here\n# locally_best_forest.fit # you code here","dfe281b9":"# locally_best_forest.best_params_, locally_best_forest.best_score_","62c4b1b0":"# print(\"Mean squared error (cv): %.3f\" % # you code here\n# print(\"Mean squared error (test): %.3f\" % # you code here","268acc70":"# rf_importance = pd.DataFrame # you code here\n# rf_importance.sort_values # you code here","21ba87ca":"## Lasso regression","8ea2903d":"**Train a LASSO model with $\\alpha = 0.01$ (weak regularization) and scaled data. Again, set random_state=17.**","10e797bf":"# <center> Assignment #6 (demo).\n## <center>  Exploring OLS, Lasso and Random Forest in a regression task\n    \n<img src=https:\/\/habrastorage.org\/webt\/-h\/ns\/aa\/-hnsaaifymavmmudwip9imcmk58.jpeg width=30%>\n\n**Fill in the missing code and choose answers in [this](https:\/\/docs.google.com\/forms\/d\/1aHyK58W6oQmNaqEfvpLTpo6Cb0-ntnvJ18rZcvclkvw\/edit) web form.**","e5a2484a":"**Tune the `max_features` and `max_depth` hyperparameters with GridSearchCV and again check mean cross-validation MSE and MSE on holdout set.**","e67bb19a":"**Output RF's feature importance. Again, it's nice to present it as a DataFrame.**<br>\n**<font color='red'>Question 7:<\/font> What is the most important feature, according to the Random Forest model?**","69570201":"**<font color='red'>Question 3:<\/font> Which feature is the least informative in predicting wine quality, according to the tuned LASSO model?**","d707523c":"**<font color='red'>Question 4:<\/font> What are mean squared errors of tuned LASSO predictions on train and holdout sets?**","f366f519":"**Make conclusions about the perdormance of the explored 3 models in this particular prediction task.**","b1679f3e":"## Linear regression","f66e71d6":"**Train a simple linear regression model (Ordinary Least Squares).**","4868b9ab":"**Sort features by their influence on the target feature (wine quality). Beware that both large positive and large negative coefficients mean large influence on target. It's handy to use `pandas.DataFrame` here.**\n\n**<font color='red'>Question 2:<\/font> Which feature this linear regression model treats as the most influential on wine quality?**","99925741":"## Random Forest","0793e13c":"**<font color='red'>Question 5:<\/font> What are mean squared errors of RF model on the training set, in cross-validation (cross_val_score with scoring='neg_mean_squared_error' and other arguments left with default values) and on holdout set?**","acdc797f":"**<font color='red'>Question 6:<\/font> What are mean squared errors of tuned RF model in cross-validation (cross_val_score with scoring='neg_mean_squared_error' and other arguments left with default values) and on holdout set?**","d8ea321d":"**<font color='red'>Question 1:<\/font> What are mean squared errors of model predictions on train and holdout sets?**","4181b20b":"**Separate the target feature, split data in 7:3 proportion (30% form a holdout set, use random_state=17), and preprocess data with `StandardScaler`.**","2d7a4ac1":"**Train LassoCV with random_state=17 to choose the best value of $\\alpha$ in 5-fold cross-validation.**","1927ee43":"**Train a Random Forest with out-of-the-box parameters, setting only random_state to be 17.**","f16d2ad1":"**We are working with UCI Wine quality dataset (no need to download it \u2013 it's already there, in course repo and in Kaggle Dataset).**","bc925b72":"<center>\n<img src=\"https:\/\/habrastorage.org\/files\/fd4\/502\/43d\/fd450243dd604b81b9713213a247aa20.jpg\">\n## Open Machine Learning Course\n<center>Author: [Yury Kashnitsky](https:\/\/www.linkedin.com\/in\/festline\/), Data Scientist at Mail.ru Group <br>\n    All content is distributed under the [Creative Commons CC BY-NC-SA 4.0](https:\/\/creativecommons.org\/licenses\/by-nc-sa\/4.0\/) license.\nYou may use this material for any purpose (you can edit, correct and use it as example) exept commercial use with mandatory citation of author.","6b4fa96c":"**Which feature is the least informative in predicting wine quality, according to this LASSO model?**"}}