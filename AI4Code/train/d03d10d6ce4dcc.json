{"cell_type":{"89a5dedb":"code","b7629b64":"code","411426fe":"code","ae4de687":"code","cfe040a3":"code","6f4dbe0f":"code","9f96a2cc":"code","c4fb417b":"code","f5430cbb":"code","a6929cda":"code","a8ad418b":"code","d0d77b93":"markdown","2dc64c3f":"markdown","19d94a6a":"markdown","8ad8fccb":"markdown","7150d0d3":"markdown","8eb14ddc":"markdown","6523dea7":"markdown","c0e84d8b":"markdown","f7b46521":"markdown","95aa71bc":"markdown","0f190789":"markdown","2286bbb0":"markdown","818f7682":"markdown","562fa530":"markdown"},"source":{"89a5dedb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b7629b64":"import pandas as pd\nimport matplotlib.pyplot as plt","411426fe":"filename = '\/kaggle\/input\/industrial-safety-and-health-analytics-database\/IHMStefanini_industrial_safety_and_health_database_with_accidents_description.csv'","ae4de687":"df = pd.read_csv(filename, index_col = 0)","cfe040a3":"# Fix column names\ndf = df.rename({'Data':'Date'}, axis=1)\n\n# Fix column datatype\ndf['Date'] = pd.to_datetime(df['Date'])","6f4dbe0f":"df_accidents_per_genre = df.groupby(['Industry Sector', 'Genre'])['Industry Sector'].count()\ndf_accidents_per_genre = df_accidents_per_genre.to_frame('Amount of accidents').reset_index()#.plot.bar(rot=0)\n\n# Prepare data to be plotted\ndf_plot = df_accidents_per_genre.pivot_table(index='Industry Sector', columns='Genre', values='Amount of accidents')\n\n# Plot\ndf_plot.plot(kind='bar', color=['pink', 'b'])\nplt.ylabel('# of accidents')\nplt.title('Accidents per Sector and Genre')\nplt.savefig('Accidents per Sector and Genre.png', bbox_inches = 'tight')","9f96a2cc":"# Calculate amount of accidents per country\ndf_accidents_per_country = pd.pivot_table(df, index=['Countries'], columns=['Industry Sector'], values='Date', aggfunc='count')\ndf_accidents_per_country","c4fb417b":"# Calculate amount of plants per country\ndf_plants_per_country = df[['Countries', 'Industry Sector', 'Local']].drop_duplicates()\ndf_plants_per_country = df_plants_per_country.groupby(['Countries', 'Industry Sector'])['Local'].count().to_frame('Amount of plants').reset_index()\n\n# Calculate amount of accidents per country\ndf_accidents_per_country = df.groupby(['Countries', 'Industry Sector'])['Local'].count().to_frame('Amount of accidents').reset_index()\n\n# Calculate the ratio amount of accidents per plants in a given country \ndff = df_accidents_per_country.merge(df_plants_per_country, how='left', on=['Countries', 'Industry Sector'])\ndff['Ratio accidents per plant'] = dff['Amount of accidents'] \/ dff['Amount of plants']\n\n# Show in pivot form\npd.pivot_table(dff, index='Countries', columns='Industry Sector', values='Ratio accidents per plant')","f5430cbb":"df_plot = []\nindustries = df['Industry Sector'].unique().tolist()\nfor industry in industries:\n    mask = df['Industry Sector'] == industry\n    df_plot.append(df[mask])\n\nfor i in range(len(df_plot)):\n    df_plot[i][['Date', 'Industry Sector']].groupby('Date')['Date'].count().plot()\n    industry = df_plot[i]['Industry Sector'].iloc[0]\n\nplt.legend(industries)\nplt.ylabel('# of accidents')\nplt.title('Accidents over time')\nplt.savefig('Accidents over time.png', bbox_inches = 'tight')","a6929cda":"# Calculate amount of accidents per severity and sector\ndf_accidents_per_country = pd.pivot_table(df, index=['Accident Level'], columns=['Industry Sector'], values='Date', aggfunc='count')\ndf_accidents_per_country","a8ad418b":"# Calculate amount of accidents per level\ndf_accidents_per_level = df.groupby(['Industry Sector', 'Accident Level'])['Industry Sector'].count().rename('Amount of accidents').reset_index()\n\n# Calculate amount of accidents per sector\ndf_accidents_per_sector = dff.groupby(['Industry Sector'])['Amount of accidents'].sum().to_frame('Total amount of accidents').reset_index()\n\n# Calculate the ratio amount of accidents per level per given sector\ndf_accidents_per_level = df_accidents_per_level.merge(df_accidents_per_sector, how='left', on='Industry Sector')\ndf_accidents_per_level['Ratio accidents per total per sector'] = df_accidents_per_level['Amount of accidents'] \/ df_accidents_per_level['Total amount of accidents']\n\n# Show in pivot form\npd.pivot_table(df_accidents_per_level, index='Accident Level', columns='Industry Sector', values='Ratio accidents per total per sector')","d0d77b93":"### Absolute values","2dc64c3f":"## Which genre had more accidents?","19d94a6a":"# Data preparation","8ad8fccb":"## Data cleaning","7150d0d3":"### Relative values","8eb14ddc":"## Which is the risk level distribution per industry?","6523dea7":"## Data loading","c0e84d8b":"### Absolute values","f7b46521":"# General settings","95aa71bc":"# Analytics","0f190789":"## Which country\/plant had more accidents?","2286bbb0":"# Environment setup","818f7682":"### Relative values","562fa530":"## Is there seasonality?"}}