{"cell_type":{"2c0fd9e8":"code","26923f76":"code","2b876073":"code","2f827f93":"code","d1f533c5":"code","33d3b810":"code","a3ab607e":"code","2bbdd2a7":"code","63d5be82":"code","ca0c47fa":"code","98e9b2ea":"code","f1146fd0":"code","798faada":"code","92e69d35":"code","6da1506d":"code","52125f9b":"code","418478f7":"code","586a4e8e":"code","48fec449":"code","ed6e1e44":"code","e8af7d48":"code","e495a93f":"code","9b858d23":"code","34a2d9ec":"code","1c08d38c":"code","11dca8d6":"code","91e5b96e":"markdown"},"source":{"2c0fd9e8":"import numpy as np\nimport pandas as pd\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns\nfrom sklearn.metrics import confusion_matrix\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","26923f76":"fpmath = '\/kaggle\/input\/student-alcohol-consumption\/student-mat.csv'\nfportugese = '\/kaggle\/input\/student-alcohol-consumption\/student-por.csv'","2b876073":"datamath = pd.read_csv(fpmath)\ndataport = pd.read_csv(fportugese)","2f827f93":"datamath.columns","d1f533c5":"binary_features = [\n    \n        'school', 'sex', 'address', 'famsize', 'Pstatus','schoolsup', 'famsup', 'paid', \n        'activities', 'nursery', 'higher', 'internet', 'romantic'\n    \n]\n\nnumeric_features = [\n    \n        'age', 'Medu', 'Fedu', 'traveltime', 'studytime','failures', 'famrel', \n        'freetime', 'goout', 'Dalc', 'Walc', 'health', 'absences'\n    \n]\n\nnominal_features = [\n    \n        'Mjob', 'Fjob', 'reason', 'guardian'\n    \n]\n\ny = ['G1', 'G2', 'G3']","33d3b810":"datamath[binary_features]","a3ab607e":"datamath[numeric_features]","2bbdd2a7":"datamath[nominal_features]","63d5be82":"datamath[y]","ca0c47fa":"datamath.info()","98e9b2ea":"#for col in datamath.columns:\n #   print(col+'    \\t', len(datamath[col].unique()), ' categories')","f1146fd0":"# creating initial dataframe\n#bridge_types = ('Arch','Beam','Truss','Cantilever','Tied Arch','Suspension','Cable')\n#bridge_df = pd.DataFrame(bridge_types, columns=['Bridge_Types'])\n# converting type of columns to 'category'\n#bridge_df['Bridge_Types'] = bridge_df['Bridge_Types'].astype('category')\n# Assigning numerical values and storing in another column\n#bridge_df['Bridge_Types_Cat'] = bridge_df['Bridge_Types'].cat.codes\n#bridge_df","798faada":"adata = pd.read_csv(fpmath)","92e69d35":"for col in adata[nominal_features]:\n    adata[col] = adata[col].astype('category')\n    # Assigning numerical values and storing in another column\n    #data[col+'_coded'] = data[col].cat.codes","6da1506d":"for col in adata[numeric_features]:\n    adata[col] = adata[col].astype('int')","52125f9b":"adata['age'] = adata['age'].astype('int')","418478f7":"adata.info()","586a4e8e":"datanew = pd.get_dummies(adata)","48fec449":"datanew","ed6e1e44":"datanew.shape","e8af7d48":"X = [\n    [\n        'age', 'Medu', 'Fedu', 'traveltime', 'studytime', 'failures', 'famrel',\n        'freetime', 'goout', 'Dalc', 'Walc', 'health', 'absences', 'school_GP', 'school_MS', 'sex_F', 'sex_M', 'address_R',\n        'address_U', 'famsize_GT3', 'famsize_LE3', 'Pstatus_A', 'Pstatus_T',\n        'Mjob_at_home', 'Mjob_health', 'Mjob_other', 'Mjob_services',\n        'Mjob_teacher', 'Fjob_at_home', 'Fjob_health', 'Fjob_other',\n        'Fjob_services', 'Fjob_teacher', 'reason_course', 'reason_home',\n        'reason_other', 'reason_reputation', 'guardian_father',\n        'guardian_mother', 'guardian_other', 'schoolsup_no', 'schoolsup_yes',\n        'famsup_no', 'famsup_yes', 'paid_no', 'paid_yes', 'activities_no',\n        'activities_yes', 'nursery_no', 'nursery_yes', 'higher_no',\n        'higher_yes', 'internet_no', 'internet_yes', 'romantic_no',\n        'romantic_yes'\n    ]\n]\ny = [['G1', 'G2', 'G3']]","e495a93f":"from sklearn.ensemble import RandomForestClassifier\nclf = RandomForestClassifier(n_estimators=10)\nclf = clf.fit(X, y)","9b858d23":"from sklearn.ensemble import RandomForestClassifier\n#X = [[0, 0], [1, 1]]\n#Y = [0, 1]\nclf = RandomForestClassifier(n_estimators=150, max_features=7)\nclf = clf.fit(X_train, y_train)","34a2d9ec":"pd.DataFrame(clf.predict(X_test), columns=['G1','G2','G3'], index=X_test.index)\n#help(pd.DataFrame)","1c08d38c":"corr = datanew.corr()\nplt.figure(figsize=(100,100))\nsns.heatmap(corr, xticklabels=corr.columns, yticklabels=corr.columns, annot= True)","11dca8d6":"datanew.columns","91e5b96e":"* *school - Student's school (binary: 'GP' - Gabriel Pereira or 'MS' - Mousinho da Silveira)\n* *sex - Student's sex (binary: 'F' - female or 'M' - male)\n* #age - Student's age (numeric: from 15 to 22)\n* *address - Student's home address type (binary: 'U' - urban or 'R' - rural)\n* *famsize - Family size (binary: 'LE3' - less or equal to 3 or 'GT3' - greater than 3)\n* *Pstatus - Parent's cohabitation status (binary: 'T' - living together or 'A' - living apart)\n* #Medu - Mother's education (numeric: 0 - none, 1 - primary education (4th grade), 2 - 5th to 9th grade, 3 - secondary education, or 4 - higher education)\n* #Fedu - Father's education (numeric: 0 - none, 1 - primary education (4th grade), 2 - 5th to 9th grade, 3 - secondary education, or 4 - higher education)\n* @Mjob - Mother's job (nominal: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), 'at_home' or 'other')\n* @Fjob - Father's job (nominal: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), 'at_home' or 'other')\n* @reason - Reason to choose this school (nominal: close to 'home', school 'reputation', 'course' preference or 'other')\n* @guardian - Student's guardian (nominal: 'mother', 'father' or 'other')\n* #traveltime - Home to school travel time (numeric: 1 - <15 min., 2 - 15 to 30 min., 3 - 30 min. to 1 hour, or 4 - >1 hour)\n* #studytime - Weekly study time (numeric: 1 - <2 hours, 2 - 2 to 5 hours, 3 - 5 to 10 hours, or 4 - >10 hours)\n* #failures - Number of past class failures (numeric: n if 1<=n<3, else 4)\n* *schoolsup - Extra educational support (binary: yes or no)\n* *famsup - Family educational support (binary: yes or no)\n* *paid - Extra paid classes within the course subject (Math or Portuguese) (binary: yes or no)\n* *activities - Extra-curricular activities (binary: yes or no)\n* *nursery - Attended nursery school (binary: yes or no)\n* *higher - Wants to take higher education (binary: yes or no)\n* *internet - Internet access at home (binary: yes or no)\n* *romantic - With a romantic relationship (binary: yes or no)\n* #famrel - Quality of family relationships (numeric: from 1 - very bad to 5 - excellent)\n* #freetime - Free time after school (numeric: from 1 - very low to 5 - very high)\n* #goout - Going out with friends (numeric: from 1 - very low to 5 - very high)\n* #Dalc - Workday alcohol consumption (numeric: from 1 - very low to 5 - very high)\n* #Walc - Weekend alcohol consumption (numeric: from 1 - very low to 5 - very high)\n* #health - Current health status (numeric: from 1 - very bad to 5 - very good)\n* #absences - Number of school absences (numeric: from 0 to 93)\n* G1 - First period grade (numeric: from 0 to 20)\n* G2 - Second period grade (numeric: from 0 to 20)\n* G3 - Final grade (numeric: from 0 to 20, output target)"}}