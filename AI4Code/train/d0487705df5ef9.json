{"cell_type":{"8e2f7d20":"code","ad5bb480":"code","24785aa6":"markdown"},"source":{"8e2f7d20":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ad5bb480":"f = open(\"res001.txt\", \"a\")\nfor j in range(0,1000):\n    array=np.random.randint(low=0, high=2, size=200, dtype=int)\n    max1=0\n    max2=0\n    for i in range(0,200):\n        if(array[i]==1):\n            max2+=1\n            if(max2>max1):\n                max1=max2\n        else: \n            max2=0\n    f.write(\"%d\" % max1)\n    f.write(\"\\n\")","24785aa6":"**Provedite simulaciju kojom cete provjeriti distribuciju najduljeg niza uspjeha; simulaciju provodite ovako: simulirajte - recimo - 1000 nizova 0 i 1, svaki duljine 200 znakova; u svakom nizu pronadjite najdulji niz uspjeha (recimo da je \"1\" uspjeh), i duljinu tog niza zapisete u datoteku; zatim rezultate prikazete pomocu histograma (histogram crtate u programskom paketu \"R\", recimo); nizove je najlakse simulirati iz polja [0,1], i to funkcijom random.choice, a rezultate (svaki u svoj red) zapisujete u datoteku pomocu funkcije f.write;**"}}