{"cell_type":{"66910182":"code","8ddc09b4":"code","c3c72ac8":"code","5f0760c2":"code","dfad13ee":"code","4efdce7d":"code","cdba1786":"code","0f641e32":"code","6e3d31f2":"code","d8d0098d":"code","bc7a4918":"code","c470073f":"code","0168705d":"code","906b1d28":"code","685942e0":"code","13635b9b":"code","5a91e551":"code","d586394b":"code","a9041fd9":"code","c43ae746":"code","5da1c2e8":"code","8098c46d":"code","80a0fbc0":"code","82cd5e6f":"code","3961b18b":"code","f9bd1101":"code","d09b3a67":"code","c8eb51db":"code","44985f30":"code","af56286f":"code","9e0df545":"code","f3957633":"code","1caa0389":"code","48272e39":"code","8089f1c8":"code","41e739d8":"code","07fdc662":"code","bf335526":"code","f24b2f15":"code","ec622c26":"markdown"},"source":{"66910182":"import pandas as pd\nimport numpy as np\nimport unidecode\ndf=pd.read_csv(r'..\/input\/complete-fifa-2017-player-dataset-global\/FullData.csv',usecols=['Name', 'Club', 'Club_Position', 'Rating'])","8ddc09b4":"df.columns","c3c72ac8":"#converting to lower case lmao\ndf.columns=list(map(str.lower, df.columns))\ndf.columns","5f0760c2":"df['name']","dfad13ee":"#removing spaces from between names by replacing with an underscore\nreformat_string=lambda x:str.lower(x).replace(' ', '_')","4efdce7d":"df['name']=df['name'].apply(reformat_string)\ndf['name']","cdba1786":"df['club']","0f641e32":"df['club']=df['club'].apply(reformat_string)\ndf['club']","6e3d31f2":"df['club_position']","d8d0098d":"#lower-casing club positions\ndf['club_position']=df['club_position'].str.lower()","bc7a4918":"df['club_position']","c470073f":"#ignoring subs and reserves\ndf = df[(df['club_position'] != 'sub') & (df['club_position'] != 'res')]","0168705d":"df['club_position']","906b1d28":"# Fix lcm rcm -> cm cm\nfix_positions = {'rcm' : 'cm', 'lcm': 'cm', 'rcb': 'cb', 'lcb': 'cb', 'ldm': 'cdm', 'rdm': 'cdm'}\ndf['club_position'] = df['club_position'].apply(lambda x: fix_positions.get(x, x))","685942e0":"df['club_position']","13635b9b":"# For example sake we will keep only 7 clubs\nclubs = {'real_madrid', 'manchester_utd', \n         'manchester_city', 'chelsea', 'juventus', \n         'fc_bayern', 'napoli'}\n","5a91e551":"#overwriting df with only the 7 aforementioned clubs\ndf=df[df['club'].isin(clubs)]\ndf","d586394b":"#Verifying all clubs have 11 players each\nassert all(n_players == 11 for n_players in df.groupby('club')['name'].nunique())\ndf","a9041fd9":"FORMATIONS = {'4-3-3_4': {'gk': ['cb_1', 'cb_2'],                           # Real madrid\n                          'lb': ['lw', 'cb_1', 'cm_1'],\n                          'cb_1': ['lb', 'cb_2', 'gk'],\n                          'cb_2': ['rb', 'cb_1', 'gk'],\n                          'rb': ['rw', 'cb_2', 'cm_2'],\n                          'cm_1': ['cam', 'lw', 'cb_1', 'lb'],\n                          'cm_2': ['cam', 'rw', 'cb_2', 'rb'],\n                          'cam': ['cm_1', 'cm_2', 'st'],\n                          'lw': ['cm_1', 'lb', 'st'],\n                          'rw': ['cm_2', 'rb', 'st'],\n                          'st': ['cam', 'lw', 'rw']},\n              '5-2-2-1': {'gk': ['cb_1', 'cb_2', 'cb_3'],                   # Chelsea\n                          'cb_1': ['gk', 'cb_2', 'lwb'],\n                          'cb_2': ['gk', 'cb_1', 'cb_3', 'cm_1', 'cb_2'],\n                          'cb_3': ['gk', 'cb_2', 'rwb'],\n                          'lwb': ['cb_1', 'cm_1', 'lw'],\n                          'cm_1': ['lwb', 'cb_2', 'cm_2', 'lw', 'st'],\n                          'cm_2': ['rwb', 'cb_2', 'cm_1', 'rw', 'st'],\n                          'rwb': ['cb_3', 'cm_2', 'rw'],\n                          'lw': ['lwb', 'cm_1', 'st'],\n                          'st': ['lw', 'cm_1', 'cm_2', 'rw'],\n                          'rw': ['st', 'rwb', 'cm_2']},'4-3-3_2': {'gk': ['cb_1', 'cb_2'],                           # Man UTD \/ CITY\n                          'lb': ['cb_1', 'cm_1'],\n                          'cb_1': ['lb', 'cb_2', 'gk', 'cdm'],\n                          'cb_2': ['rb', 'cb_1', 'gk', 'cdm'],\n                          'rb': ['cb_2', 'cm_2'],\n                          'cm_1': ['cdm', 'lw', 'lb', 'st'],\n                          'cm_2': ['cdm', 'rw', 'st', 'rb'],\n                          'cdm': ['cm_1', 'cm_2', 'cb_1', 'cb_2'],\n                          'lw': ['cm_1', 'st'],\n                          'rw': ['cm_2', 'st'],\n                          'st': ['cm_1', 'cm_2', 'lw', 'rw']},              # Juventus, Bayern\n              '4-2-3-1_2': {'gk': ['cb_1', 'cb_2'],\n                            'lb': ['lm', 'cdm_1', 'cb_1'],\n                            'cb_1': ['lb', 'cdm_1', 'gk', 'cb_2'],\n                            'cb_2': ['rb', 'cdm_2', 'gk', 'cb_1'],\n                            'rb': ['cb_2', 'rm', 'cdm_2'],\n                            'lm': ['lb', 'cdm_1', 'st', 'cam'],\n                            'rm': ['rb', 'cdm_2', 'st', 'cam'],\n                            'cdm_1': ['lm', 'cb_1', 'rb', 'cam'],\n                            'cdm_2': ['rm', 'cb_2', 'lb', 'cam'],\n                            'cam': ['cdm_1', 'cdm_2', 'rm', 'lm', 'st'],\n                            'st': ['lm', 'rm', 'cam']},\n              '4-3-3': {'gk': ['cb_1', 'cb_2'],                             # Napoli\n                        'lb': ['cb_1', 'cm_1'],\n                        'cb_1': ['lb', 'cb_2', 'gk', 'cm_2'],\n                        'cb_2': ['rb', 'cb_1', 'gk', 'cm_2'],\n                        'rb': ['cb_2', 'cm_3'],\n                        'cm_1': ['cm_2', 'lw', 'lb'],\n                        'cm_3': ['cm_2', 'rw', 'rb'],\n                        'cm_2': ['cm_1', 'cm_3', 'st', 'cb_1', 'cb_2'],\n                        'lw': ['cm_1', 'st'],\n                        'rw': ['cm_3', 'st'],\n                        'st': ['cm_2', 'lw', 'rw']}}","c43ae746":"FORMATIONS","5da1c2e8":"add_club_suffix = lambda x, c: x + '_{}'.format(c)","8098c46d":"import networkx as nx\nfrom collections import deque  \ngraph=nx.Graph()\nformatted_positions = set()","80a0fbc0":"\ndef club2graph(club_name, formation, graph):\n    club_data = df[df['club'] == club_name]\n    \n    club_formation = FORMATIONS[formation]\n    \n    club_positions = dict()\n    \n    # Assign positions to players\n    available_positions = deque(club_formation)\n    available_players = set(zip(club_data['name'], club_data['club_position']))\n    \n    roster = dict()  # Here we will store the assigned players and positions\n    \n    while available_positions:\n        position = available_positions.pop()\n        name, pos = [(name, position) for name, p in available_players if position.startswith(p)][0]        \n        \n        roster[name] = pos\n        \n        available_players.remove((name, pos.split('_')[0]))\n        \n    reverse_roster = {v: k for k, v in roster.items()}\n    # Build the graph\n    for name, position in roster.items():\n        # Connect to team name\n        graph.add_edge(name, club_name)\n        \n        # Inter team connections\n        for teammate_position in club_formation[position]:\n            # Connect positions\n            graph.add_edge(add_club_suffix(position, club_name),\n                           add_club_suffix(teammate_position, club_name))\n            \n            # Connect player to teammate positions\n            graph.add_edge(name,\n                           add_club_suffix(teammate_position, club_name))\n            \n            # Connect player to teammates\n            graph.add_edge(name, reverse_roster[teammate_position])\n            \n            # Save for later trimming\n            formatted_positions.add(add_club_suffix(position, club_name))\n            formatted_positions.add(add_club_suffix(teammate_position, club_name))\n            \n    return graph","82cd5e6f":"teams = [('real_madrid', '4-3-3_4'), \n         ('chelsea', '5-2-2-1'),\n         ('manchester_utd', '4-3-3_2'),\n         ('manchester_city', '4-3-3_2'),\n         ('juventus', '4-2-3-1_2'),\n         ('fc_bayern', '4-2-3-1_2'),\n         ('napoli', '4-3-3')]","3961b18b":"graph = club2graph('real_madrid', '4-3-3_4', graph)\n\nfor team, formation in teams:\n    graph = club2graph(team, formation, graph)","f9bd1101":"graph.edges","d09b3a67":"!pip install node2vec","c8eb51db":"from node2vec import Node2Vec\nnode2vec = Node2Vec(graph, dimensions=20, walk_length=16, num_walks=100, workers=2)\n","44985f30":"fix_formatted_positions = lambda x: x.split('_')[0] if x in formatted_positions else x\nreformatted_walks = [list(map(fix_formatted_positions, walk)) for walk in node2vec.walks]\nnode2vec.walks = reformatted_walks","af56286f":"model = node2vec.fit(window=10, min_count=1)","9e0df545":"for node, _ in model.most_similar('rw'):\n    # Show only players\n    if len(node) > 3:\n        print(node)","f3957633":"for node, _ in model.most_similar('gk'):\n    # Show only players\n    if len(node) > 3:\n        print(node)","1caa0389":"for node, _ in model.most_similar('real_madrid'):\n    print(node)","48272e39":"for node, _ in model.most_similar('paulo_dybala'):\n    print(node)","8089f1c8":"player_nodes = [x for x in model.wv.vocab if len(x) > 3 and x not in clubs]\nembeddings = np.array([model.wv[x] for x in player_nodes])","41e739d8":"from sklearn.manifold import TSNE","07fdc662":"tsne = TSNE(n_components=2, random_state=7, perplexity=15)\nembeddings_2d = tsne.fit_transform(embeddings)","bf335526":"# Assign colors to players\nteam_colors = {\n    'real_madrid': 'lightblue',\n    'chelsea': 'b',\n    'manchester_utd': 'r',\n    'manchester_city': 'teal',\n    'juventus': 'gainsboro',\n    'napoli': 'deepskyblue',\n    'fc_bayern': 'tomato' \n}\n\ndf['color'] = df['club'].apply(lambda x: team_colors[x])\nplayer_colors = dict(zip(df['name'], df['color']))\ncolors = [player_colors[x] for x in player_nodes]","f24b2f15":"import matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\n\nfigure = plt.figure(figsize=(11, 9))\n\nax = figure.add_subplot(111)\n\nax.scatter(embeddings_2d[:, 0], embeddings_2d[:, 1], c=colors)\n\n# Create team patches for legend\nteam_patches = [mpatches.Patch(color=color, label=team) for team, color in team_colors.items()]\nax.legend(handles=team_patches);","ec622c26":"Code Courtesy of : https:\/\/github.com\/eliorc\/Medium\/blob\/master\/Nod2Vec-FIFA17-Example.ipynb"}}