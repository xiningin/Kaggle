{"cell_type":{"fbe1a1ab":"code","4fe306f0":"code","3355432f":"code","4b8e7b97":"code","bf82ef05":"code","cc694876":"code","fbb49fed":"code","c01d351b":"code","351aa917":"code","c2fcd87b":"code","3990ae00":"code","ce059ffe":"code","61b23528":"code","7049b9a6":"code","f3e08ebe":"code","de4dccf1":"code","2ab041b4":"code","272d87da":"code","f5843437":"code","e1b19347":"code","81f01ddd":"markdown","4dbc4a51":"markdown","5e902365":"markdown","262ebcc2":"markdown","f58b3eea":"markdown","4d7a4a39":"markdown"},"source":{"fbe1a1ab":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","4fe306f0":"heart = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')","3355432f":"heart.info()","4b8e7b97":"heart","bf82ef05":"plt.figure(figsize=(8, 8))\nsns.heatmap(heart.corr(), annot=True, fmt='.2f')","cc694876":"x = heart.drop('target', axis='columns')\ny = heart['target']","fbb49fed":"from sklearn.feature_selection import chi2, SelectKBest","c01d351b":"best_feature = SelectKBest(chi2, k=3)\nfit_feature = best_feature.fit(x, y)\nscore = pd.DataFrame(fit_feature.scores_)\ncolumns = pd.DataFrame(x.columns)\nmost_festure = pd.concat([score, columns], axis=1)\nmost_festure.columns = ['score', 'columns']\n#most_festure.sort_values(by='score', ascending=False)\nmost_festure.nlargest(3, 'score')","351aa917":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nx_standard = StandardScaler().fit_transform(x)\npca = PCA(n_components=3)\nx_pca_standard = pca.fit_transform(x_standard)","c2fcd87b":"pca.explained_variance_ratio_","3990ae00":"principalDf = pd.DataFrame(data = x_pca_standard\n             , columns = ['principal component 1', 'principal component 2', 'principal component 3'])\nresult_pca_target = pd.concat([principalDf, y], axis=1)\nresult_pca_target","ce059ffe":"ax = plt.figure(figsize=(16,10)).gca(projection='3d')\nax.scatter(\n    xs=result_pca_target[\"principal component 1\"], \n    ys=result_pca_target[\"principal component 2\"], \n    zs=result_pca_target[\"principal component 3\"], \n    c=result_pca_target.loc[:,:][\"target\"], \n    cmap='tab10'\n)\nax.set_xlabel('pca-one')\nax.set_ylabel('pca-two')\nax.set_zlabel('pca-three')\nplt.show()","61b23528":"x.groupby(['age', 'cp']).size().sort_values(ascending=False)[:20]","7049b9a6":"x.groupby(['slope', 'cp']).size().sort_values(ascending=False)[:20].plot(kind='bar')","f3e08ebe":"from sklearn.model_selection import train_test_split, cross_val_score\nx_train, x_test, y_train, y_test = train_test_split(x_pca_standard, y, test_size=0.3)","de4dccf1":"from sklearn.svm import SVC\nsvm = SVC(kernel='poly', degree=3, C=200)\nsvm.fit(x_train, y_train)\ny_predict_svm = svm.predict(x_test)","2ab041b4":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test, y_predict_svm)","272d87da":"from sklearn.ensemble import RandomForestClassifier\nrandom_clf = RandomForestClassifier(max_depth=5, n_estimators=120, criterion='entropy', n_jobs=-1, verbose=True )\nrandom_clf.fit(x_train, y_train)\ny_predict_random = random_clf.predict(x_test)\naccuracy_score(y_test, y_predict_random)","f5843437":"from sklearn.tree import DecisionTreeClassifier\ntree_clf = DecisionTreeClassifier(max_depth=11, criterion='entropy')\ntree_clf.fit(x_train, y_train)\ny_predict_tree = tree_clf.predict(x_test)\naccuracy_score(y_test, y_predict_tree)","e1b19347":"from sklearn.linear_model import LogisticRegression\nlog_clf = LogisticRegression(penalty='l2', solver='lbfgs', multi_class='multinomial')\nlog_clf.fit(x_train, y_train)\ny_predict_log = log_clf.predict(x_test)\naccuracy_score(y_test, y_predict_log)","81f01ddd":"#### most age effect on cp : ","4dbc4a51":"#### slope 1 and cp 0 Most Effect on Each other","5e902365":"### No Null Value & No Categorical Columns","262ebcc2":"### Now Let's Look At Columns And Realize What's The Pourpose Of Values\n#### _Age_ & _Sex_ it's clear Let's Look At cp column it's Mean Chest Pain Type 0-3 (1 = male; 0 = female)\n#### _trestbps_ column resting blood pressure  \u0641\u0634\u0627\u0631 \u062e\u0648\u0646 \u062f\u0631 \u062d\u0627\u0644 \u0627\u0633\u062a\u0631\u0627\u062d\u062a  \n#### _chol_ cholestrol\n#### _fbs:_ \u0642\u0646\u062f \u062e\u0648\u0646 \u0646\u0627\u0634\u062a\u0627 That's Clear (1 = true; 0 = false)\n#### _restcg:_ result of radiographic\n#### _thalach:_ maximum heart rate achieved \n#### _exang:_    (1 = yes; 0 = no) \u0622\u0646\u0698\u06cc\u0646 \u0646\u0627\u0634\u06cc \u0627\u0632 \u0648\u0631\u0632\u0634\n#### _oldpeak:_ Clear\n#### _slope:_ \n#### _ca:_ \u062a\u0639\u062f\u0627\u062f \u0639\u0631\u0648\u0642 \u0627\u0635\u0644\u06cc (0-3) \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0622\u0644\u0648\u0626\u0648\u0633\u0648\u067e\u06cc\n#### _thal:_ Clear","f58b3eea":"### Our Columns:\n1. age\n2. sex\n3. chest pain type (4 values)\n4. resting blood pressure\n5. serum cholestoral in mg\/dl\n6. fasting blood sugar > 120 mg\/dl\n7. resting electrocardiographic results (values 0,1,2)\n8. maximum heart rate achieved\n9. exercise induced angina\n10. oldpeak = ST depression induced by exercise relative to rest\n11. the slope of the peak exercise ST segment\n12. number of major vessels (0-3) colored by flourosopy\n13. thal: 3 = normal; 6 = fixed defect; 7 = reversable defect","4d7a4a39":"### Let's Go:\n### We Want To See Which Columns Are More Effect On Target We Use corr()\n### It's kinda A Feature Selecting \n### Heart Rate & Slope & Resting blood pressure Most Effect On Target"}}