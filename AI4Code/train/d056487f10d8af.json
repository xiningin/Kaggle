{"cell_type":{"95be956a":"code","cf368e26":"code","acc9909e":"code","7e332d84":"code","44fc0dcf":"code","ae721018":"code","e4a46b36":"code","f13c898c":"code","38d53d60":"code","cf703a43":"code","c498a780":"code","6b150909":"code","028e766d":"code","b33ae05a":"code","14fe513f":"code","7b42d78b":"code","71eae462":"code","66992933":"code","ce5a37d2":"code","4cc9890c":"code","a044a18c":"code","caaefef2":"code","93f0c8a1":"code","ae67d67e":"code","24fb9a6a":"code","0a45243e":"code","281b97e6":"code","3c17095a":"code","0ff93c78":"code","1b996347":"code","731133bd":"code","00e9a264":"code","c5f081aa":"markdown","016b16dc":"markdown","703ed607":"markdown","10b03e27":"markdown","53057e98":"markdown","3b56ad86":"markdown","6b123720":"markdown","81ddacf1":"markdown","fa1250aa":"markdown","e2a2fd64":"markdown","a10e5dd7":"markdown","0e5a48a8":"markdown","7dfef709":"markdown","f1fce285":"markdown"},"source":{"95be956a":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcSlxW_H3CMwIcKZb48Hu8c9w3uG5VNx5cOhG3WZBzjtX1xN2rfq',width=400,height=400)","cf368e26":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","acc9909e":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRRffmJENxcC0fHkOcQwpSDHbJzRummirTVpbp3s3eu5cdsyu4C',width=400,height=400)","7e332d84":"df = pd.read_excel('\/kaggle\/input\/the-2019-ai-index-report\/AI INDEX 2019 PUBLIC DATA\/3. Technical Performance\/Vision\/Semantic Segmentation\/Pascal VOC 2012.xlsx')\ndf.head()","44fc0dcf":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQ4o6X4ArRuD0xKvGv_BcH5f0JjUGCbKrki6RY8TI_rGXrJZrE2',width=400,height=400)","ae721018":"df.shape","e4a46b36":"df.dtypes","f13c898c":"sns.distplot(df[\"Rank\"].apply(lambda x: x**4))\nplt.show()","38d53d60":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRL6MG_xa-oDBV0qkhvsiYObhATzVnWDAMYmLXzkJRepHbEHHB6',width=400,height=400)","cf703a43":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.Method)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200, background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.show()","c498a780":"df.groupby(['Rank']).size().plot.bar()","6b150909":"# Necessary Functions: \ndef pie_plot(labels, values, colors, title):\n    fig = {\n      \"data\": [\n        {\n          \"values\": values,\n          \"labels\": labels,\n          \"domain\": {\"x\": [0, .48]},\n          \"name\": \"Job Type\",\n          \"sort\": False,\n          \"marker\": {'colors': colors},\n          \"textinfo\":\"percent+label+value\",\n          \"textfont\": {'color': '#FFFFFF', 'size': 10},\n          \"hole\": .6,\n          \"type\": \"pie\"\n        } ],\n        \"layout\": {\n            \"title\":title,\n            \"annotations\": [\n                {\n                    \"font\": {\n                        \"size\": 25,\n\n                    },\n                    \"showarrow\": False,\n                    \"text\": \"\"\n\n                }\n            ]\n        }\n    }\n    return fig","028e766d":"import plotly.offline as py\nvalue_counts = df['Rank'].value_counts()\nlabels = value_counts.index.tolist()\npy.iplot(pie_plot(labels, value_counts,['#1B9E77', '#7570B3'], \"Rank\"))","b33ae05a":"df1 = pd.read_excel('\/kaggle\/input\/the-2019-ai-index-report\/AI INDEX 2019 PUBLIC DATA\/3. Technical Performance\/Vision\/Semantic Segmentation\/PASCAL Context.xlsx')\ndf1.head()","14fe513f":"corrs = df.corr()\ncorrs","7b42d78b":"plt.figure(figsize = (20, 8))\n\n# Heatmap of correlations\nsns.heatmap(corrs, cmap = plt.cm.RdYlBu_r, vmin = -0.25, annot = True, vmax = 0.6)\nplt.title('Rank');","71eae462":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRyoIYh0Dppmng9zFdht3bSnbhqm_QhsIhfpwI_WuNcqMxxE2Y6',width=400,height=400)","66992933":"sns.heatmap(corrs, annot=True, cmap=\"Greens\")\nplt.show()","ce5a37d2":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTZ34lHxrxnwtUYrs0vahh557PGs0p1w29MQKShHWoaHG5Hlu4i',width=400,height=400)","4cc9890c":"df1.shape","a044a18c":"df1.dtypes","caaefef2":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRp_dnEZMYDm9Cu1Hd_50XYu-U5krj3bIoOHm8md6kWSJekZUJH',width=400,height=400)","93f0c8a1":"sns.pairplot(df1, markers=\"+\", diag_kind=\"kde\")\nplt.show()","ae67d67e":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQyGx5LP4021dw6yLDfSFavtrqxmMunb6rEzTVGdR0SUsALI7iY',width=400,height=400)","24fb9a6a":"sns.heatmap(corrs, annot=True, cmap=\"Reds\")\nplt.show()","0a45243e":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcSfdUmiIYut4f-zGLoo8fkxMZbp_7Z9u9nkT9V5YwIg70WKXGzl',width=400,height=400)","281b97e6":"segmentation = df1[\"Method\"]\nprint(segmentation)","3c17095a":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQGsErxC94shrO-JYxcNvevFvg9vga1gVLP3nMcqiATY0kTu_5o',width=400,height=400)","0ff93c78":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df1.Method)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(width=480, height=480, margin=0, background_color=\"white\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.show()","1b996347":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcToSMV0NAjWMl6RtMlYEfXr7XYFo6b3JbKStTzsdE8EXTu7Tycg',width=400,height=400)","731133bd":"plt.figure(figsize=(8,6))\nsns.scatterplot(x='Rank',y='mean Iou',data=df)\nplt.xticks(rotation=90)\nplt.yticks(rotation=45)\nplt.show()","00e9a264":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRgjAwRIP-XEJj92m896UP9qemqzEvlltk9Ouwl4HwUz1KHmJck',width=400,height=400)","c5f081aa":"Image arxiv-vanity.com - Recurrent Segmentation for Variable Computational.","016b16dc":"Semantic segmentation refers to the process of linking each pixel in an image to a class label. These labels could include a person, car, flower, piece of furniture, etc., just to mention a few. We can think of semantic segmentation as image classification at a pixel level. https:\/\/heartbeat.fritz.ai\/a-2019-guide-to-semantic-segmentation-ca8242f5a7fc","703ed607":"Image liangchiehchen.com","10b03e27":"Image link.springer.com - Recent progress in semantic image segmentation - Liu, X., Deng, Z. & Yang, Y. Recent progress in semantic image segmentation. Artif Intell Rev 52, 1089\u20131106 (2019). https:\/\/doi.org\/10.1007\/s10462-018-9641-3","53057e98":"The Intersection-Over-Union (IoU), also known as the Jaccard Index, is one of the most commonly used metrics in semantic segmentation and for good reason. For binary (two classes) or multi-class segmentation, the mean IoU of the image is calculated by taking the IoU of each class and averaging them. https:\/\/towardsdatascience.com\/metrics-to-evaluate-your-semantic-segmentation-model-6bcb99639aa2","3b56ad86":"Image towardsdatascience.com","6b123720":"Image qiita.com - Pascal VOC\u3092TFRecord\u5f62\u5f0f\u3078\u5909\u63db\u3059\u308b(Python) - @Jixjia - https:\/\/qiita.com\/Jixjia\/items\/a465e9cdd94b8b8f555e","81ddacf1":"Image developpaper.com","fa1250aa":"Image jifengdai.org - ScribbleSup: Scribble-Supervised Convolutional Networks for Semantic Segmentation - Di Lin1*     Jifeng Dai2     \n\nJiaya Jia1     Kaiming He2     Jian Sun2    \n* 1The Chinese University of Hong Kong    2Microsoft Research (*This work was done when Di Lin was an intern at Microsoft Research)","e2a2fd64":"Image link.springer.com - Deep-recursive residual network for image semantic segmentation - Zhang, Y., Li, X., Lin, M. et al. Deep-recursive residual network for image semantic segmentation. Neural Comput & Applic (2020). https:\/\/doi.org\/10.1007\/s00521-020-04738-5","a10e5dd7":"Image paperswithcode.com - RefineNet: Multi-Path Refinement Networks for High-Resolution Semantic Segmentation - CVPR 2017 \u2022 Guosheng Lin \u2022 Anton Milan \u2022 Chunhua Shen \u2022 Ian Reid - https:\/\/paperswithcode.com\/paper\/refinenet-multi-path-refinement-networks-for","0e5a48a8":"Image paperwithcode.com - Semantic Segmentation on PASCAL VOC 2012 val ","7dfef709":"Image cvlab.postech.ac.kr - Weakly Supervised Semantic Segmentation using Web-Crawled Videos - \n* Seunghoon Hong1,3\tDonghun Yeo1\tSuha Kwak2\tHonglak Lee3\tBohyung Han1\n* 1Dept. of Computer Science and Engineering, POSTECH, Korea\n* 2Dept. of Information and Communication Engineering, DGIST, Korea\n* 3Dept. of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, USA - http:\/\/cvlab.postech.ac.kr\/research\/weaksup_video\/","f1fce285":"Image d2I.ai - Semantic Segmentation and the Dataset - https:\/\/d2l.ai\/chapter_computer-vision\/semantic-segmentation-and-dataset.html"}}