{"cell_type":{"8c50ad1f":"code","50c66e11":"code","c44ded14":"code","c381f228":"code","bdd7d0b5":"code","0a1915d6":"markdown","8ea053df":"markdown","910de845":"markdown","78166a3c":"markdown","ebc613b7":"markdown","b6682ed9":"markdown","4fe2a5e4":"markdown","7da07269":"markdown"},"source":{"8c50ad1f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nsns.set(style=\"whitegrid\")\n\nimport os\ndeaths_df = pd.read_csv('..\/input\/deaths.csv')\npopulation_df = pd.read_csv('..\/input\/population.csv')\nlife_expentency_df = pd.read_csv('..\/input\/life_expectancy.csv')\n# Any results you write to the current directory are saved as output.","50c66e11":"data = population_df.groupby(['District.Name']).sum().sort_values(by=['Number'],ascending=False)\n\nf, ax = plt.subplots(1, 1, figsize=(16, 4))\nsns.barplot(x=data.index, y=data.Number, palette=\"rocket\", ax=ax)","c44ded14":"data = population_df.groupby(['District.Name']).sum().apply(lambda g: round(g \/ g.sum() * 100, 2))\\\n.sort_values(by=['Number'],ascending=False)\nf, ax = plt.subplots(1, 1, figsize=(16, 6))\nsns.barplot(x=data.Number, y=data.index, palette=\"deep\", ax=ax)\nax.set(ylabel='District', xlabel='Population percentage %')","c381f228":"data = life_expentency_df[life_expentency_df['Gender']  == 'Male'][['2009-2013', 'Neighborhood']].\\\n    sort_values(by='2009-2013', ascending=False)[:25]\nf, ax = plt.subplots(1, 1, figsize=(8, 10))\nax = sns.stripplot(x='2009-2013', y=\"Neighborhood\", data=data, jitter=True, ax=ax, color='green', size=7)","bdd7d0b5":"f, ax = plt.subplots(1, 1, figsize=(8, 10))\nsns.barplot(x='2009-2013', y=\"Neighborhood\", data=data, ax=ax, color='green')","0a1915d6":"#### Take away notes:\n* **Color as a tool to distinguish:**\n Sometimes we use color to distingish between objects. In this case remember two things:\n    * Choose list colors that don't create order impression.\n    * Choose colors that make objects non-relative to each others. \nthis site helps [ColorBrewer](http:\/\/colorbrewer2.org\/#type=sequential&scheme=BuGn&n=3) ","8ea053df":"# I love Barcelona EDA\nI worked on one of the competitions and I didn't know how EDA is crucial and could help in feature engineering. I decided to craft my skill in making the data visual and where better to start other than a dataset about one of the most beautiful city in the world: Barcelona <3.\n\nData visualization libraries are full of charts, but which one to use? and how one could help more than the others? I hope this kernel will teach some techniques that helps in this area.\n","910de845":"This dataset is not suitable for being visualized with bars. The bars are too long\nand they draw attention away from the key feature of the data, the differences in life\nexpectancy among the different districts.","78166a3c":"### Life expentency by age and district for males:\n\nBars are not the only option for visualizing amounts. One important limitation of bars is that they need to start at zero, so that the bar length is proportional to the amount shown. For some datasets, this can be impractical or may obscure key features.\nIn this case, we can indicate amounts by placing dots at the appropriate locations\nalong the x or y axis.\n","ebc613b7":"There are some issues with this chart and some enhancments can be made:\n* **Replace large numbers with percentages:** percentages are better when no exact numbers are requested. \n* **Choose qualitative color palette:** the rocket color palette is sequential which gives oreder impression to the reader. But here each district has its own existence so let's change it to \"deep\". \n* **Make the columns horizontal**: The plot above uses so much space because labels are too long. We could solve it by rotating labels, but they become hard to read. The best solution is horizontal bars. ","b6682ed9":"* Visualizing Amounts\n    * Population by district (Bar plots)\n    * Dot plots (Life expentency by age and district for males)","4fe2a5e4":"## Visualize Amounts\n","7da07269":"### Population by district:\nWhich district has **higher** population? Let's plot a bar chart showing population by district:"}}