{"cell_type":{"57493689":"code","d237649e":"code","19a43c80":"code","906c6dba":"code","cd5506ba":"code","6a6eb5f1":"code","f0b40bc9":"code","54fc68b2":"code","b27ff343":"code","73d9a4bd":"code","75a5147a":"code","a524fb5f":"code","5e5a508a":"code","8c13e1e1":"code","e455c80b":"code","9a8d3b00":"code","d9256637":"code","1f8e80fd":"code","392a6606":"code","2232822a":"code","d30a2954":"code","8667b323":"code","2530df53":"code","84dbc242":"code","4a7ef898":"code","0ac77f3d":"code","56ff3f29":"code","fde97714":"markdown","1bd151a1":"markdown","3760f71d":"markdown","4c91487a":"markdown","88a0333b":"markdown","98250574":"markdown","ade1ab21":"markdown","ff1d5393":"markdown","c73b536b":"markdown","c06ba9bb":"markdown","5bcbfb94":"markdown","12340e6b":"markdown","75a733e5":"markdown","a3990be8":"markdown","1a477a84":"markdown","52954e99":"markdown","856b3fec":"markdown"},"source":{"57493689":"#Import libraries\nfrom IPython.display import display\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt ","d237649e":"#Import dataset\ndata = pd.read_csv(\"..\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv\")\ndata.columns = [\"Id\", \"GRE\", \"TOEFL\", \"University_rating\", \"SOP\", \"LOR\", \"CGPA\", \"Research\", \"Chance\"]\ndisplay(data.head())","19a43c80":"data.describe()","906c6dba":"plt.figure(figsize=(25,10))\nsns.set_style(\"darkgrid\")\n\nplt.subplot(1,2,1)\nplt.title(\"GRE Score Distribution (A)\", fontsize = 20)\na = sns.distplot(data[\"GRE\"], color = \"blue\")\na.set_xlabel(\"GRE Score\",fontsize=15)\na.set_ylabel(\"Percentage (%)\",fontsize=15)\nplt.plot()\n\nplt.subplot(1,2,2)\nplt.title(\"GRE Score Distribution (B)\", fontsize = 20)\na = sns.countplot(data[\"GRE\"], color = \"blue\")\na.set_xlabel(\"GRE Score\",fontsize=15)\na.set_ylabel(\"Count\",fontsize=15)\nplt.xticks(rotation = 90)\nplt.plot()\n\nplt.show()","cd5506ba":"plt.figure(figsize=(15,7))\nplt.title(\"Chance of admit vs GRE Score\", fontsize = 20)\na = sns.scatterplot(data[\"GRE\"], data[\"Chance\"], color = \"blue\")\na.set_xlabel(\"GRE Score\",fontsize=15)\na.set_ylabel(\"Chance of admit (%)\",fontsize=15)\nplt.show()","6a6eb5f1":"plt.figure(figsize=(25,10))\n\nplt.subplot(1,2,1)\nplt.title(\"TOEFL Score Distribution (A)\", fontsize = 20)\na = sns.distplot(data[\"TOEFL\"], color = \"0.25\")\na.set_xlabel(\"TOEFL Score\",fontsize=15)\na.set_ylabel(\"Percentage (%)\",fontsize=15)\nplt.plot()\n\nplt.subplot(1,2,2)\nplt.title(\"TOEFL Score Distribution (B)\", fontsize = 20)\na = sns.countplot(data[\"TOEFL\"], color = \"0.6\")\na.set_xlabel(\"TOEFL Score\",fontsize=15)\na.set_ylabel(\"Count\",fontsize=15)\nplt.plot()\n\nplt.show()","f0b40bc9":"sns.set_style(\"darkgrid\")\nplt.figure(figsize=(15,7))\nplt.title(\"Chance of admit vs TOEFL Score\", fontsize = 20)\na = sns.scatterplot(data[\"TOEFL\"], data[\"Chance\"], color = \"0.6\")\na.set_xlabel(\"TOEFL Score\",fontsize=15)\na.set_ylabel(\"Chance of admit (%)\",fontsize=15)\nplt.show()","54fc68b2":"data.University_rating.astype('category')\n\nplt.figure(figsize=(25,10))\n\nplt.subplot(1,2,1)\nplt.title(\"University Rating Distribution\", fontsize = 20)\na = sns.countplot(data[\"University_rating\"], color = \"green\")\na.set_xlabel(\"University Rating\",fontsize=15)\na.set_ylabel(\"Count\",fontsize=15)\nplt.plot()\n\nplt.subplot(1,2,2)\nplt.title(\"Chance of admit vs University Rating\", fontsize = 20)\na = sns.swarmplot(data[\"University_rating\"],data[\"Chance\"], hue = data[\"University_rating\"])\na.set_xlabel(\"University Rating\",fontsize=15)\na.set_ylabel(\"Chance of admit (%)\",fontsize=15)\nplt.plot()\n\nplt.show()","b27ff343":"plt.figure(figsize=(25,10))\n\nplt.subplot(1,2,1)\nplt.title(\"Statement of Purpose Distribution\", fontsize = 20)\na = sns.countplot(data[\"SOP\"], color = \"purple\")\na.set_xlabel(\"Statement of Purpose score\",fontsize=15)\na.set_ylabel(\"Count\",fontsize=15)\nplt.plot()\n\nplt.subplot(1,2,2)\nplt.title(\"Chance of admit vs Statement of Purpose Score\", fontsize = 20)\na = sns.swarmplot(data[\"SOP\"],data[\"Chance\"], hue = data[\"SOP\"])\na.set_xlabel(\"Statement of Purpose score\",fontsize=15)\na.set_ylabel(\"Chance of admit (%)\",fontsize=15)\nplt.plot()\n\nplt.show()","73d9a4bd":"plt.figure(figsize=(25,10))\n\nplt.subplot(1,2,1)\nplt.title(\"Letter of Recommendation Strength Distribution\", fontsize = 20)\na = sns.countplot(data[\"LOR\"], color = \"red\")\na.set_xlabel(\"Letter of Recommendation Strength score\",fontsize=15)\na.set_ylabel(\"Count\",fontsize=15)\nplt.plot()\n\nplt.subplot(1,2,2)\nplt.title(\"Chance of admit vs Letter of Recommendation Strength Score\", fontsize = 20)\na = sns.swarmplot(data[\"LOR\"],data[\"Chance\"], hue = data[\"LOR\"])\na.set_xlabel(\"Recommendation Strength score\",fontsize=15)\na.set_ylabel(\"Chance of admit (%)\",fontsize=15)\nplt.plot()\n\nplt.show()","75a5147a":"plt.figure(figsize=(25,10))\n\nplt.subplot(1,2,1)\nplt.title(\"Cumulative Grade Points Average (CGPA) Distribution\", fontsize = 20)\na = sns.distplot(data[\"CGPA\"], color = \"magenta\")\na.set_xlabel(\"Cumulative Grade Points Average (CGPA) score\",fontsize=15)\na.set_ylabel(\"Count\",fontsize=15)\nplt.plot()\n\nplt.subplot(1,2,2)\nplt.title(\"Chance of admit vs Cumulative Grade Points Average (CGPA) Score\", fontsize = 20)\na = sns.scatterplot(data[\"CGPA\"],data[\"Chance\"], color = \"magenta\")\na.set_xlabel(\"Cumulative Grade Points Average (CGPA) score\",fontsize=15)\na.set_ylabel(\"Chance of admit (%)\",fontsize=15)\nplt.plot()\n\nplt.show()","a524fb5f":"research_yes = data.Research[data.Research == 1].count()\nresearch_no = data.Research[data.Research == 0].count()\n\nplt.figure(figsize=(25,10))\nsns.set_style(\"whitegrid\")\n\nplt.subplot(1,2,1)\nexplode = (0.05,0.05)\nsizes = [research_yes\/len(data)*100, research_no\/len(data)*100]\nplt.pie(sizes, labels=[\"YES\", \"NO\"],colors = [\"lightgreen\", \"lightblue\"], shadow=True, startangle=90,explode = explode, autopct='%1.1f%%', textprops={'fontsize': 20})\nmy_circle=plt.Circle( (0,0), 0.4, color='white')\nplt.title(\"Research Experience Distribution\", fontsize= 20)\nplt.gca().add_artist(my_circle)\nplt.plot()\n\nplt.subplot(1,2,2)\nplt.title(\"Chance of admit vs Research Experience\", fontsize = 20)\na = sns.swarmplot(data[\"Research\"],data[\"Chance\"], hue = data[\"Research\"])\na.set_xlabel(\"Research Experience score\",fontsize=15)\na.set_ylabel(\"Chance of admit (%)\",fontsize=15)\nplt.plot()\n\nplt.show()","5e5a508a":"plt.figure(figsize=(25,8))\nsns.set_style(\"darkgrid\")\nplt.title(\"Chance of Admit Distribution\", fontsize = 20)\na = sns.distplot(data[\"Chance\"], color = \"darkgreen\")\na.set_xlabel(\"Chance of Admit score\",fontsize=15)\na.set_ylabel(\"Count\",fontsize=15)\nplt.plot()\nplt.show()","8c13e1e1":"data.drop('Id', axis=1, inplace=True)","e455c80b":"plt.figure(figsize=(25,10))\nsns.heatmap(data.corr(), linewidths=.02, cmap=\"YlGnBu\", annot=True)\nplt.plot()\nplt.show()","9a8d3b00":"features = [\"GRE\", \"TOEFL\", \"University_rating\", \"SOP\", \"LOR\", \"CGPA\", \"Research\"]\ny = data.Chance\nX = data[features]","d9256637":"from sklearn.model_selection import train_test_split\n\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 1)","1f8e80fd":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import r2_score\n\nmodel = LinearRegression()\nmodel.fit(train_X, train_y)\npreds_lin = model.predict(val_X)\n\nprint(\"MAE (Decision Tree regression): \", mean_absolute_error(val_y, preds_lin))\nprint(\"R^2 score (Decision Tree regression): \", r2_score(val_y, preds_lin))","392a6606":"plt.figure(figsize=(25,10))\nplt.title(\"Observed vs Predicted values\", fontsize = 25)\na = sns.regplot(val_y, preds_lin)\nplt.xlabel(\"Observed Value\", fontsize = 15)\nplt.ylabel(\"Predicted Value\", fontsize = 15)\nplt.plot()\nplt.show()","2232822a":"import statistics\nfrom scipy import stats\n\nplt.figure(figsize=(25,10))\nplt.title(\"Std Error vs Fitted Value\", fontsize = 25)\na = sns.scatterplot(preds_lin, (val_y - preds_lin) \/ statistics.variance(val_y - preds_lin))\nplt.xlabel(\"Predicted Value \", fontsize = 15)\nplt.ylabel(\"Residual standardized\", fontsize = 15)\nplt.plot()\nplt.show()\n\nprint(\"Shapiro test: \",stats.shapiro(val_y - preds_lin))\n","d30a2954":"from sklearn.tree import DecisionTreeRegressor\n\ndef get_mae(max_leaf_nodes, train_X, val_X, train_y, val_y):\n    model = DecisionTreeRegressor(max_leaf_nodes = max_leaf_nodes, random_state=0)\n    model.fit(train_X, train_y)\n    preds_val = model.predict(val_X)\n    mae = mean_absolute_error(val_y, preds_val)\n    return(mae)\n\nvalidation_nodes = list()\nvalidation_mae = list()\n\nprint(\"VALIDATION SET\" )\nfor max_leaf_nodes in [5, 25, 50, 100, 500, 1000, 5000]:\n    my_mae = get_mae(max_leaf_nodes, train_X, val_X, train_y, val_y)\n    print(\"\\t Max leaf nodes: %d  \\t\\t Mean Absolute Error:  %f\" %(max_leaf_nodes, my_mae))\n    validation_nodes.append(max_leaf_nodes)\n    validation_mae.append(my_mae)\n\ntraining_nodes = list()\ntraining_mae = list()    \n\nprint(\"TRAINING SET\" )\nfor max_leaf_nodes in [5, 25, 50, 100, 500, 1000, 5000]:\n    my_mae = get_mae(max_leaf_nodes, train_X, train_X, train_y, train_y)\n    print(\"\\t Max leaf nodes: %d  \\t\\t Mean Absolute Error:  %f\" %(max_leaf_nodes, my_mae))\n    training_nodes.append(max_leaf_nodes)\n    training_mae.append(my_mae)\n","8667b323":"my_xticks = [\"5\", \"25\", \"50\", \"100\", \"500\", \"1000\", \"5000\"]\n\nplt.figure(figsize=(25,10))\nplt.title(\"MAE (Training and Validation set) vs Number of Nodes \", fontsize = 25)\nplt.plot(my_xticks, training_mae, label='Training Set')\nplt.plot(my_xticks, validation_mae, label='Validation Set')\nplt.xlabel(\"Number of Max Leaf Nodes\",fontsize=15)\nplt.ylabel(\"MAE\",fontsize=15)\nplt.legend(fontsize = 10)\nplt.plot()\nplt.show()","2530df53":"model = DecisionTreeRegressor(max_leaf_nodes = 5, random_state=0)\nmodel.fit(train_X, train_y)\npreds_val = model.predict(val_X)\nprint(\"MAE (Decision Tree regression): \", mean_absolute_error(val_y, preds_val))\nprint(\"R^2 score (Decision Tree regression): \", r2_score(val_y, preds_val))","84dbc242":"display(pd.DataFrame({\"Observed\": val_y, \"Predicted\": preds_val}))","4a7ef898":"from sklearn.ensemble import RandomForestRegressor\n\nforest_model = RandomForestRegressor(random_state=1)\nforest_model.fit(train_X, train_y)\nmelb_preds = forest_model.predict(val_X)\nprint(\"MAE (Random Forest): \", mean_absolute_error(val_y, melb_preds))\nprint(\"R^2 score (Random Forest): \", r2_score(val_y, melb_preds))","0ac77f3d":"display(pd.DataFrame({\"Observed\": val_y, \"Predicted\": melb_preds}))","56ff3f29":"plt.figure(figsize=(25,10))\n\nplt.subplot(1,2,1)\ny = np.array([r2_score(val_y, preds_lin), r2_score(val_y, preds_val), r2_score(val_y, melb_preds)])\nx = [\"Linear Regression\",\"Decision Tree Regression\", \"Random Forest Regression\"]\nsns.barplot(x,y)\nplt.title(\"Comparison of Regression Algorithms (R^2)\", fontsize=20)\nplt.xlabel(\"Regression Type\", fontsize=15)\nplt.ylabel(\"R^2 score\", fontsize=15)\nplt.plot()\n\nplt.subplot(1,2,2)\ny = np.array([mean_absolute_error(val_y, preds_lin), mean_absolute_error(val_y, preds_val), mean_absolute_error(val_y, melb_preds)])\nx = [\"Linear Regression\",\"Decision Tree Regression\", \"Random Forest Regression\"]\nsns.barplot(x,y)\nplt.title(\"Comparison of Regression Algorithms (MAE)\", fontsize=20)\nplt.xlabel(\"Regression Type\", fontsize=15)\nplt.ylabel(\"MAE score\", fontsize=15)\nplt.plot()\n\nplt.show()","fde97714":"<font size=\"4\"><b>Which is the best one?<\/b><\/font><br>\n<br>\nLooking at the graph below, which summarizes the previuos results, we can conclude that **the best model to predict the chance of being admitted is the Linear regression**. In fact, it has the highest R^2 score (0.813) and the lowest MAE (0.042) compared to the Decision Tree Regression and the Random Forest Regression.","1bd151a1":"<center><font size=\"4\"><b>Validation and Training Set<\/b><\/font><br><\/center>\n<br>","3760f71d":"<font size=\"4\"><b>2) Decision Tree Regressor<\/b><\/font><br>\n<br>","4c91487a":"<center><font size=\"4\"><b>Chance of Admit<\/b><\/font><br><\/center>\n<br>\nThe Chance of Admit is a percentage which represents the probability of being admitted. So, it ranges from 0% to 100% (in our sample from 34% to 97%)","88a0333b":"<center><font size=\"4\"><b>TOEFL test<\/b><\/font><br><\/center>\n<br>\nThe **Test of English as a Foreign Language**, or TOEFL, is a test which measures people\u2019s English language skills to see if they are good enough to take a course at university or graduate school in English-speaking countries. It measures how well a person uses listening, reading, speaking and writing skills to perform academic tasks.\nThe TOEFL iBT test is scored on a **scale of 0 to 120 points**. Each of the four sections (Reading, Listening, Speaking, and Writing) receives a scaled score from 0 to 30. The scaled scores from the four sections are added together to determine the total score.","98250574":"<center><font size=\"4\"><b>Research Experience<\/b><\/font><br><\/center>\n<br>\nStudent research is self-directed work in which students from all areas of study work individually or as part of a team to explore issues of interest to them. It is an optional activity so students can decide if do it or not.","ade1ab21":"<center><font size=\"4\"><b> Undergraduate CGPA<\/b><\/font><br><\/center>\n<br>\nCGPA is a grade pointing system used in the educational sector. **Cumulative Grade Points** is the average of grade points obtained in all the subjects (Note:- excluding the sixth additional subject). In our dataset, it ranges between 6.80 and 9.92.","ff1d5393":"<center><font size=\"4\"><b>GRE test<\/b><\/font><br><\/center>\n<br>\nThe **Graduate Record Examinations** (GRE) is a standardized test that is an admissions requirement for many graduate schools in the United States and Canada. It aims to measure **verbal reasoning**, **quantitative reasoning**, **analytical writing**, and **critical thinking** skills. \n<br>\nThe GRE score is reported in the following way:\n<br>\n**Verbal Reasoning** --> 130\u2013170, in 1 point increments\n<br>\n**Quantitative Reasoning** --> 130\u2013170, in 1 point increments\n<br>\n**Analytical Writing** --> 0\u20136, in half point increments\n","c73b536b":"A **Letter of Recommendation** (LOR) or recommendation letter, also known as a letter of reference, reference letter or simply reference, is a document in which the writer assesses the qualities, characteristics, and capabilities of the person being recommended in terms of that individual's ability to perform a particular task or function.","c06ba9bb":"<center><font size=\"5.5\"><b>Graduate Admission: Visualization and Chance Prediction <\/b><\/font><\/center><br>\n<center><b>Every comment is welcome!<\/b><\/center><br>\n\n<center><img src=\"http:\/\/www.thetshepotrust.co.za\/wp-content\/uploads\/2019\/03\/header-graduation.jpg\" width=\"700px\"\/><\/center>","5bcbfb94":"<center><font size=\"4\"><b>Correlation Map<\/b><\/font><br><\/center>\n<br>\nLooking at the correlation matrix, we can see that the chance of being admitted is correlated positively with all variables (GRE, TOEFL, University rating, SOP, LOR, CGPA and Research Experience). To avoid the problem of multicollinearity in our analysis, we have to see also at the correlation between items. In fact, there is a strong positive relationship between GRE and TOEFL score (0.83) and GRE and CGPA score (0.83) and TOEFL and CGPA score (0.81).","12340e6b":"As we can see from the graph below, residuals seem to **respect the homoscedasticity hypothesis**. \n<br>\nTo test this, we have to introduce the Shapiro test: the null-hypothesis of this test is that the population is normally distributed. Thus, if the p value is less than the chosen alpha level, then the null hypothesis is rejected and there is evidence that the data tested are not normally distributed. On the other hand, if the p value is greater than the chosen alpha level, then the null hypothesis that the data came from a normally distributed population can not be rejected\n<br>\nRunning the **Shapiro test** and using an **\u03b1 = 0.5**, the p-value is equal to 0.856.\n<br>\n<center> **p value = 0.856 > 0.5 = \u03b1 level** <\/center>\n<br>\nSo, we have to accept the null hypothesis (H0) which provides that the population is normally distributed. **It means that we can use the linear model to make prediction.**","75a733e5":"<font size=\"4\"><b>Columns in the dataset:<\/b><\/font><br>\n\n1. **Id** = unique number from 1 to 499\n\n2. **GRE** = GRE Scores (from 290 to 340)\n\n3. **TOEFL**= TOEFL Scores (92 to 120)\n\n4. **University_rating** = University Rating (1 to 5)\n\n5. **SOP** = Statement of Purpose (1 to 5)\n\n6. **LOR** = Letter of Recommendation Strength (1 to 5)\n\n7. **CGPA** = Undergraduate CGPA (6.8 to 9.92)\n\n8. **Research** = Research Experience (0 or 1)\n\n9. **Chance** = Chance of Admit (0.34 to 0.97)","a3990be8":"<font size=\"4\"><b>1) Linear Model<\/b><\/font><br>\n<br>","1a477a84":"<center><font size=\"4\"><b>Statement of Purpose and Letter of Recommendation Strength<\/b><\/font><br><\/center>\n<br>\nThey are two different metrics which measure the quality of the **Statement of Purpose** and of the **Letter of Recommendation Strength**. Both range beween 1 and 5.\n<br>\nThe **Statement of Purpose** (SOP) is an essay or other written statement written by an applicant, often a prospective student applying to some college, university, or graduate school.","52954e99":"<center><font size=\"4\"><b>University Rating<\/b><\/font><br><\/center>\n<br>\nIt's a value between 1 and 5 which represents the prestigious of the universities (1 min - 5 max).","856b3fec":"<font size=\"4\"><b>3) RANDOM FOREST<\/b><\/font><br>\n<br>"}}