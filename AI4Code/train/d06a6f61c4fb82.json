{"cell_type":{"9e6c2a46":"code","6c334958":"code","4dc211ba":"code","facb955c":"code","78a8e2e1":"code","302d3138":"markdown","26691488":"markdown","9158ebf5":"markdown"},"source":{"9e6c2a46":"import pandas as pd\nimport numpy as np\n\nfrom nltk.tokenize import word_tokenize\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, precision_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.utils import shuffle","6c334958":"DATASET_COLUMNS = [\"sentiment\", \"ids\", \"date\", \"flag\", \"user\", \"text\"]\ndf = pd.read_csv('..\/input\/sentiment140\/training.1600000.processed.noemoticon.csv', \\\n                 encoding='ISO-8859-1', names=DATASET_COLUMNS)\ndf = pd.concat([df.query(\"sentiment==0\"), df.query(\"sentiment==4\")])\ndf.sentiment = df.sentiment.map({0:0, 4:1})\ndf =  shuffle(df).reset_index(drop=True)","4dc211ba":"df_train, df_test = train_test_split(df, test_size=0.1)","facb955c":"cv = CountVectorizer(tokenizer=word_tokenize, token_pattern=None)\ncv.fit(df_train.text)\n\nxtrain = cv.transform(df_train.text)\nxtest = cv.transform(df_test.text)\n\nmodel = LogisticRegression(max_iter=500)\nmodel.fit(xtrain, df_train.sentiment)","78a8e2e1":"preds = model.predict(xtest)\n\naccuracy = accuracy_score(df_test.sentiment.values, preds)\n\nprint(f\"Accuracy = {accuracy}\")","302d3138":"## Calculate accuracy","26691488":"## Modelling","9158ebf5":"## Train\/test split"}}