{"cell_type":{"32033d68":"code","7c1aa279":"code","7e3a6b20":"code","ef5cda08":"code","33fbf839":"code","4c2c3e5c":"code","c7ee68c5":"code","5735c60d":"code","289a8c9a":"code","47e65f44":"code","59394b0d":"code","d6e89298":"code","f59e765e":"code","d61163b6":"code","81dfe5ca":"code","ea50dff4":"code","e5fcb7fe":"code","4e4e637a":"code","7506206d":"code","9fe60714":"code","3b8f5bc3":"code","26bc45e0":"code","bca2bf6e":"code","6c1ec71b":"code","74e96b1f":"code","8d78bb35":"code","92840f40":"code","000f3e75":"code","320bfff8":"code","ce233844":"code","502ba90c":"code","63c5f368":"code","54c1b82d":"code","d9e69f48":"code","62d653e0":"code","b6dab9bc":"code","e9d2e1d5":"code","4f4bc9e7":"code","945f5d91":"code","037db100":"code","89fad278":"code","574d6ef2":"code","a2bdfd02":"code","54f2a20a":"code","f7ef0189":"code","63e64dcc":"code","a1fe44ce":"code","9fd79899":"code","91e0b5ba":"code","1eb6c22d":"code","4fe1686c":"code","c5e644fc":"code","fe974de1":"code","c6c5e759":"code","9ac136d8":"code","3bbfaa0d":"code","41328363":"code","19b923b2":"code","02935864":"code","4a5e4f1f":"code","344659c5":"code","2054f0c1":"code","0e9ea208":"code","b7216289":"code","01d2f122":"code","5a684194":"code","6eff08ba":"code","56e19daa":"code","120b09ca":"code","f4d14913":"code","72a3b70b":"code","1f76ce6f":"code","880a8168":"code","796743f5":"code","d7465d03":"code","e4ac75c5":"code","875196a7":"markdown"},"source":{"32033d68":"import pandas as pd\nimport numpy as np\nimport os, re, sys\nfrom IPython.core.display import HTML, Image\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls","7c1aa279":"IN_DIR = os.path.join(\"..\", \"input\", \"kernel-hotness-20200222\")","7e3a6b20":"def row_text(r):\n    m = mmap.get(r.medal, \"\")\n    return (\n        f\"{m}{r.title}\"\n        f\"<br>\"\n        f\"{r.author_displayName}\"\n        f\"<br>\"\n        f\"Version: {r.versionNumber}\"\n        f\"<br>\"\n        f\"Views: {r.totalViews}\"\n        f\" Votes: {r.totalVotes}\"\n        f\" Ratio: {r.voteRatio:.3f}\"\n    )\n\nmmap = dict(zip([ \"gold\", \"silver\", \"bronze\" ], \"\ud83e\udd47\ud83e\udd48\ud83e\udd49\"))\n\ndef show(slug):\n    title = (' ' + slug).replace('-', ' ')\n    title = re.sub(' (\\w)', lambda m: f' {m.group(1).upper()}', title).strip()\n    df = pd.read_csv(f\"{IN_DIR}\/{slug}.csv\")\n    df = df.assign(voteRatio=df.eval(\"totalViews\/(totalVotes+1)\"))\n    text = df.apply(row_text, 1)\n    dates = pd.to_datetime(df.lastRunTime)\n    \n    display(HTML(\n        f\"<h1 id='{slug}'>{title}<\/h1>\"\n        \"<br\/>\"\n        f\"{df.shape[0]} Kernels [ <a href='https:\/\/www.kaggle.com\/c\/{slug}\/kernels'>Live listing<\/a> ]\"\n        \"<br\/>\"\n        f\"Earliest run: {dates.min().strftime('%c')}\"\n        \"<br\/>\"\n        f\"Latest run: {dates.max().strftime('%c')}\"\n    ))\n    \n    trace1 = go.Scatter(\n        x=df.hotness,\n        y=df.totalViews,\n        name=\"Views\",\n        text=text\n    )\n    trace2 = go.Scatter(\n        x=df.hotness,\n        y=df.totalVotes,\n        name=\"Votes\",\n        text=text,\n        yaxis=\"y2\"\n    )\n    colors = [\"#f33\", \"#33f\"]\n    data = [trace1, trace2]\n    layout = go.Layout(\n        title=f\"{title} Kernel Votes and Views\",\n        colorway=colors,\n        height=700,\n        xaxis=dict(\n            title=\"Hotness\"\n        ),\n        yaxis=dict(\n            title=\"Views\",\n            titlefont=dict(\n                color=colors[0],\n            ),\n            tickfont=dict(\n                color=colors[0],\n            ),\n        ),\n        yaxis2=dict(\n            title=\"Votes\",\n            type=\"log\",\n            titlefont=dict(\n                color=colors[1],\n            ),\n            tickfont=dict(\n                color=colors[1],\n            ),\n            overlaying=\"y\",\n            side=\"right\"\n        )\n    )\n    fig = go.Figure(data=data, layout=layout)\n    py.iplot(fig, filename=slug)","ef5cda08":"show(\"ultrasound-nerve-segmentation\")","33fbf839":"show(\"shelter-animal-outcomes\")","4c2c3e5c":"show(\"noaa-fisheries-steller-sea-lion-population-count\")","c7ee68c5":"show(\"new-york-city-taxi-fare-prediction\")","5735c60d":"show(\"kobe-bryant-shot-selection\")","289a8c9a":"show(\"severstal-steel-defect-detection\")","47e65f44":"show(\"instant-gratification\")","59394b0d":"show(\"santander-value-prediction-challenge\")","d6e89298":"show(\"springleaf-marketing-response\")","f59e765e":"show(\"santas-uncertain-bags\")","d61163b6":"show(\"otto-group-product-classification-challenge\")","81dfe5ca":"show(\"nfl-big-data-bowl-2020\")","ea50dff4":"show(\"elo-merchant-category-recommendation\")","e5fcb7fe":"show(\"transfer-learning-on-stack-exchange-tags\")","4e4e637a":"show(\"introducing-kaggle-scripts\")","7506206d":"show(\"bnp-paribas-cardif-claims-management\")","9fe60714":"show(\"predict-west-nile-virus\")","3b8f5bc3":"show(\"champs-scalar-coupling\")","26bc45e0":"show(\"home-depot-product-search-relevance\")","bca2bf6e":"show(\"aerial-cactus-identification\")","6c1ec71b":"show(\"ghouls-goblins-and-ghosts-boo\")","74e96b1f":"show(\"petfinder-adoption-prediction\")","8d78bb35":"show(\"youtube8m\")","92840f40":"show(\"costa-rican-household-poverty-prediction\")","000f3e75":"show(\"prudential-life-insurance-assessment\")","320bfff8":"show(\"Kannada-MNIST\")","ce233844":"show(\"LANL-Earthquake-Prediction\")","502ba90c":"show(\"melbourne-university-seizure-prediction\")","63c5f368":"show(\"planet-understanding-the-amazon-from-space\")","54c1b82d":"show(\"airbnb-recruiting-new-user-bookings\")","d9e69f48":"show(\"dog-breed-identification\")","62d653e0":"show(\"ashrae-energy-prediction\")","b6dab9bc":"show(\"liberty-mutual-group-property-inspection-prediction\")","e9d2e1d5":"show(\"intel-mobileodt-cervical-cancer-screening\")","4f4bc9e7":"show(\"talkingdata-adtracking-fraud-detection\")","945f5d91":"show(\"two-sigma-financial-news\")","037db100":"show(\"nyc-taxi-trip-duration\")","89fad278":"show(\"data-science-bowl-2019\")","574d6ef2":"show(\"jigsaw-unintended-bias-in-toxicity-classification\")","a2bdfd02":"show(\"bike-sharing-demand\")","54f2a20a":"show(\"ga-customer-revenue-prediction\")","f7ef0189":"show(\"porto-seguro-safe-driver-prediction\")","63e64dcc":"show(\"dstl-satellite-imagery-feature-detection\")","a1fe44ce":"show(\"aptos2019-blindness-detection\")","9fd79899":"show(\"facebook-v-predicting-check-ins\")","91e0b5ba":"show(\"mercari-price-suggestion-challenge\")","1eb6c22d":"show(\"expedia-hotel-recommendations\")","4fe1686c":"show(\"mercedes-benz-greener-manufacturing\")","c5e644fc":"show(\"sf-crime\")","fe974de1":"show(\"grupo-bimbo-inventory-demand\")","c6c5e759":"show(\"ieee-fraud-detection\")","9ac136d8":"show(\"pubg-finish-placement-prediction\")","3bbfaa0d":"show(\"rossmann-store-sales\")","41328363":"show(\"home-credit-default-risk\")","19b923b2":"show(\"jigsaw-toxic-comment-classification-challenge\")","02935864":"show(\"instacart-market-basket-analysis\")","4a5e4f1f":"show(\"zillow-prize-1\")","344659c5":"show(\"outbrain-click-prediction\")","2054f0c1":"show(\"santander-customer-transaction-prediction\")","0e9ea208":"show(\"bosch-production-line-performance\")","b7216289":"show(\"predicting-red-hat-business-value\")","01d2f122":"show(\"allstate-claims-severity\")","5a684194":"show(\"sberbank-russian-housing-market\")","6eff08ba":"show(\"leaf-classification\")","56e19daa":"show(\"santander-customer-satisfaction\")","120b09ca":"show(\"quora-insincere-questions-classification\")","f4d14913":"show(\"the-nature-conservancy-fisheries-monitoring\")","72a3b70b":"show(\"talkingdata-mobile-user-demographics\")","1f76ce6f":"show(\"santander-product-recommendation\")","880a8168":"show(\"dogs-vs-cats-redux-kernels-edition\")","796743f5":"show(\"two-sigma-connect-rental-listing-inquiries\")","d7465d03":"show(\"quora-question-pairs\")","e4ac75c5":"show(\"data-science-bowl-2017\")","875196a7":"# Kernel Hotness Plots\n\n\n## Background\n\nHotness is the default ranking order for the site and quite clearly uses vote counts as the main factor, with a twist: some work is pushed hundreds of places down, despite high vote counts (and medals).\n\n## Notebook\n\nThe Notebook shows plots of kernel listings captured on 22nd Feb 2022.\n\nThe x-axis is the Hotness order; left-most entries are the *top* of the listing.\n\nView counts are in red and are unprocessed - note how the top few Kernels get 10's of thousands of views.\n\nVote counts are in blue and are log scaled.\n\nPlots can be zoomed in on, and details of each point are shown when you hover over the lines.\n\nThere is always a cluster of Kernels that received many votes and *by rights* should be mixed in with those at the top, but they are not.\n\nIt is **obvious** that Kaggle are heavily reliant on users vote counts for the Hotness display order. But with the exception that some are massively penalised. Effectively banished from view.\n\n## Effect\n\nAs you scroll down a listing sorted by Hotness vote counts trail off to zero and make it look as if the interesting content has ended.\n\nAt the top end: the rich get richer! Capturing view\/vote counts day by day in [another dataset][8], essentially only the top few Kernels in each listing are viewed.\n\nAs the joke goes: *The Best Place to Hide a Dead Body is Page Two of Google*.\n\n## Cause\n\nLooking through the CSV files, it seems the Kernels with votes but low Hotness generally have lower version numbers - i.e. have not been run much.\n\nBut. I think it is a bug. Perhaps a faulty punishment mechanism.\n\nAs stated by [Ben Hamner][2] [here on 22 June 2018][6]:\n\n    On the original issue - we've identified a small number of users that have been systematically abusing the discovery mechanisms on Kaggle, with the behavior that you mentioned \"7 of the 10 hottest kernels are old kernels from the same user that are just rerun\".\n\n    Behavior like this hurts our community - it decreases the utility of the listings, and prevents newer kernels from being surfaced. We've added a flag to penalize users we observe engaging in behavior like this. Temporarily, content they create will be heavily down-weighted through our discovery mechanisms like hotness. If users stop the behavior and do not restart it, the penalty will be lifted.\n\nWell, my work has been punished and I did not try to cheat in any way. I **did** have to re-run [the Kernel in question][7] because of a bug in Kaggle's editor :X\n\n## Forum Discussions\n\nI reported it [here][1].\n\nIt's happened to [Erik Bruin][9]'s work (and others), [he reported it here][3].\n\nIt's happened to [Chris Deotte][5]'s work too, [he reported it here][4].\n\n## Conclusion\n\nKaggle: if you are going to gamify content publishing, at least make it a fair playing field. Don't arbitrarily punish some people's work.\n\nGeneral tip: instead of Kaggle's Kernel listings I recommend a [Google images search][10] to find tech content with the best illustrations. Although bizarrely, Kaggle content is showing up far less often than it used to in those results.\n\n\n [1]: https:\/\/www.kaggle.com\/product-feedback\/74009\n [2]: https:\/\/www.kaggle.com\/benhamner\n [3]: https:\/\/www.kaggle.com\/product-feedback\/71991 \"Has something random been added to the kernel hotness?\"\n [4]: https:\/\/www.kaggle.com\/product-feedback\/116259 \"Notebook Hottest Bug\"\n [5]: https:\/\/www.kaggle.com\/cdeotte\n [6]: https:\/\/www.kaggle.com\/general\/58271 \"Hottest kernels are now almost all old kernels.......\"\n [7]: https:\/\/www.kaggle.com\/jtrotman\/eda-talkingdata-temporal-click-count-plots\n [8]: https:\/\/www.kaggle.com\/jtrotman\/kaggle-view-counts-2019-11\n [9]: https:\/\/www.kaggle.com\/erikbruin\n [10]: https:\/\/www.google.com\/search?q=svd+decomposition&tbm=isch\n"}}