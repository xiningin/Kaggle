{"cell_type":{"072fe0b9":"code","dca08fd7":"code","5cab867b":"code","c626d532":"code","ce079106":"code","6bc298a4":"code","c49dbd87":"code","1a741639":"code","92a3ce44":"code","f3127616":"code","7fdf0a7f":"code","a576e5f1":"code","ccdc26e7":"code","495df693":"code","022fc2ac":"code","aa31233d":"code","184d36a5":"code","4df65ae9":"code","a0eea8c7":"code","c3e54bca":"code","3cccff45":"code","aa33b873":"code","f0f3ed64":"code","15310299":"code","8469bc93":"code","1cb51e53":"code","e9272cf7":"code","969f0868":"code","d2c2ab4e":"code","088eb772":"code","fd458b82":"code","fc856440":"code","ec7305e1":"code","e9699830":"code","a7040484":"code","b1fa8aab":"code","3c127a1d":"code","632874bd":"code","b0cc202b":"code","b5a1751a":"code","8c46ddf4":"code","6b7e6763":"code","1fb326c2":"code","6fbc9cb6":"code","ec76d997":"code","901208a5":"code","88a17db7":"markdown","ede2b94c":"markdown","2b889c8e":"markdown","edfee375":"markdown","281e0db7":"markdown","26575f40":"markdown"},"source":{"072fe0b9":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom palettable.wesanderson import Moonrise7_5,IsleOfDogs1_5,Zissou_5","dca08fd7":"df = pd.read_csv('..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv')","5cab867b":"df.head()","c626d532":"discription_of_each = df.iloc[0]","ce079106":"df.drop(0,inplace = True)","6bc298a4":"len(df.columns)","c49dbd87":"df['Q5'].unique()","1a741639":"positions = {}\nfor i in range(len(df.Q5.unique())):\n    positions[str(df.Q5.unique()[i])] = i  ","92a3ce44":"positions","f3127616":"df['Q5'] = df['Q5'].map(positions)","7fdf0a7f":"df.head()","a576e5f1":"plt.figure(figsize=(8,7))\nsns.histplot(df.Q5)","ccdc26e7":"df.Q4.isnull().sum()","495df693":"df.Q4.unique()","022fc2ac":"studentDegree = {}\nfor i in range(len(df.Q4.unique())):\n    studentDegree[str(df.Q4.unique()[i])] = i  ","aa31233d":"studentDegree","184d36a5":"df['Q4'] = df['Q4'].map(studentDegree)","4df65ae9":"plt.figure(figsize=(8,7))\nsns.histplot(df.Q4)","a0eea8c7":"df.head()","c3e54bca":"gender = {}\nfor i in range(len(df.Q2.unique())):\n    gender[str(df.Q2.unique()[i])] = i  \n\ndf['Q2'] = df['Q2'].map(gender)\nplt.figure(figsize=(8,7))\nsns.histplot(df.Q2)","3cccff45":"x = 0\ny = 0\nfor i in df.Q2:\n    if i == 0:\n        x += 1\n    elif i == 1:\n        y += 1","aa33b873":"x\/y","f0f3ed64":"country = {}\nfor i in range(len(df.Q3.unique())):\n    country[str(df.Q3.unique()[i])] = i  \n\ndf['Q3'] = df['Q3'].map(country)\nplt.figure(figsize=(8,7))\nsns.histplot(df.Q3, kde=True, color = 'g')","15310299":"country","8469bc93":"def get_count(question_num, parts):\n    questions = []\n    questions = ['Q'+ str(question_num) +'_Part_'+ str(j) for j in range(1, parts)]\n    questions.append('Q'+ str(question_num) + '_OTHER')\n    \n    categories = []\n    values = []\n    for i in questions:\n        category = df[i].value_counts().index[0]\n        val = df[i].value_counts()[0]\n        \n        categories.append(category)\n        values.append(val)\n       \n    combined_df = pd.DataFrame()\n    combined_df['Category'] = categories\n    combined_df['Value'] = values\n    \n    combined_df = combined_df.sort_values(['Value'],ascending=False)\n    \n    return combined_df\n\ndef plot_donut(data, title, colors):\n    plt.figure(figsize=(20,15))\n    \n    circle = plt.Circle((0,0), 0.7, color='grey')\n    plt.rcParams['text.color'] = 'black'\n    \n    plt.pie(data['Value'], labels=data['Category'], colors=colors)\n    \n    p = plt.gcf()\n    p.gca().add_artist(circle)\n    \n    plt.title(title, size=25)\n    plt.show()\n\nprogramming_lang = get_count(7,12)\nplot_donut(programming_lang, 'Programming Languages widely used',Moonrise7_5.hex_colors)","1cb51e53":"ide = get_count(9,12)\nplot_donut(ide, 'Development environments widely used',Zissou_5.hex_colors)","e9272cf7":"language  ={'Q7_Part_1': 'Python',\n                'Q7_Part_2': 'R',\n                'Q7_Part_3': 'SQL',\n                'Q7_Part_4': 'C',\n                'Q7_Part_5': 'C++',\n                'Q7_Part_6': 'Java',\n                'Q7_Part_7': 'Javascript',\n                'Q7_Part_8': 'Julia',\n                'Q7_Part_9': 'Swift',\n                'Q7_Part_10': 'Bash',\n                'Q7_Part_11': 'MATLAB',\n                'Q7_Part_12': 'None',\n                'Q7_OTHER': 'Other'\n                }","969f0868":"df","d2c2ab4e":"x = df.iloc[:,7:20].iloc[0:].rename(columns=language).fillna(0).replace('[a-zA-Z]+',1, regex=True)","088eb772":"x","fd458b82":"y = df.iloc[:,1:7]\ny.columns = ['age','gender','country','education','currentRole','yearsofwritingcode']","fc856440":"len(x),len(y)","ec7305e1":"bigdata = pd.concat([y, x], axis=1)\nbigdata = bigdata.reset_index(drop=True)","e9699830":"bigdata.head()","a7040484":"def compute_age(x):\n    if x.split('+')[-1] == '':\n        x = x.split('+')\n        x = x[0]\n    else:\n        x = x.split('-')\n        x = (float(x[0]) + float(x[1]))\/2\n    return x\n    \nbigdata.age = bigdata.age.apply(lambda x : compute_age(x))","b1fa8aab":"bigdata.yearsofwritingcode.unique()","3c127a1d":"def yr_of_code(x):\n    if x == 'I have never written code':\n        x = 0\n    else:\n        x = x.split('years')\n        x = x[0]\n        if x.split('+')[-1] == ' ':\n            x = x.split('+')\n            x = x[0]\n        elif x.split('<')[0] == '':\n            x = x.split('<')\n            x = float(x[1])\n        else:\n            x = x.split('-')\n            x = (float(x[0]) + float(x[1]))\/2\n    return x","632874bd":"bigdata.yearsofwritingcode=bigdata.yearsofwritingcode.apply(yr_of_code)","b0cc202b":"bigdata","b5a1751a":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()","8c46ddf4":"X = sc.fit_transform(bigdata.values)","6b7e6763":"from sklearn.cluster import KMeans    ","1fb326c2":"wss = []\nfor i in range(1,12):\n    cluster = KMeans(n_clusters=i)\n    cluster.fit_transform(X)\n    wss.append(cluster.inertia_)\nplt.plot(range(1,12),wss,marker = 'o')","6fbc9cb6":"cluster = KMeans(n_clusters=6)\npredict = cluster.fit_predict(X)","ec76d997":"bigdata['predict'] = predict","901208a5":"bigdata.head()","88a17db7":"Lets Map Each Type of Postion to a Number","ede2b94c":"# Survey tells most active are Mens\nMen\/Female ratio = 4.212269938650307","2b889c8e":"# Thus We Can See That there are most student in this survey.","edfee375":"# Thanks For reading this notebook , Enjoy Machine Learning \ud83d\ude00","281e0db7":"# Most Users are From India \u2764\ufe0f","26575f40":"Number Of Unique types of postion"}}