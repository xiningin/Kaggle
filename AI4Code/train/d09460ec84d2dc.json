{"cell_type":{"195d4463":"code","d4467ec9":"code","e9e309d1":"code","0d31d53c":"code","c74d3413":"code","408b2464":"code","eb6c8ca6":"code","73adc99c":"code","e67fb232":"code","e1303415":"code","3cbd0d3a":"code","0936fe54":"code","2d734cb9":"code","779ec680":"code","8dcfa435":"code","ce8b6e45":"code","6a2dd03d":"code","8f45b88d":"code","b003341a":"code","8bbb6a89":"code","6592df47":"code","f80b15bc":"code","f3947613":"code","e3ea6a42":"code","53067f4c":"code","74f00d1b":"code","295820ff":"code","f3ae333c":"code","d2c07e8c":"code","96951e4a":"code","6df7207c":"code","e0758ebd":"code","5c49c793":"code","edcc979c":"code","767c0434":"code","8e797efc":"code","697b95b5":"code","25682a5b":"code","53378ff1":"code","aeee135d":"code","9f2a20fd":"code","8e9d9b9b":"code","1afa85ff":"code","28d7124c":"code","6d7a7815":"code","b661294e":"code","fba97187":"code","d929048b":"code","af9ed1b5":"code","ecb1e88c":"code","46514d1f":"markdown","18b918ea":"markdown","0320eacd":"markdown","35dc90da":"markdown","2f4fc5a7":"markdown","1105dab1":"markdown","170c065e":"markdown","67cef420":"markdown","01d52590":"markdown","a6212633":"markdown","e249b628":"markdown","d69b5b65":"markdown","9b577786":"markdown","53b9e869":"markdown","cd2db7e3":"markdown","01fa75e2":"markdown","7d351544":"markdown","2589ac62":"markdown","777d9310":"markdown","7c4f4931":"markdown","4533bdab":"markdown","e5bec875":"markdown","18a1699c":"markdown","39303734":"markdown","b4317b13":"markdown","524ebb7f":"markdown","67813119":"markdown","6a353643":"markdown","00c52b94":"markdown","8cdf7391":"markdown","84566615":"markdown","1a8f7dc1":"markdown","b0161289":"markdown","16e899bb":"markdown","2c472aed":"markdown","4a848f17":"markdown","b18b26a1":"markdown","a7b19776":"markdown","360383d7":"markdown","15817f61":"markdown","a16eacf9":"markdown"},"source":{"195d4463":"from mpl_toolkits.mplot3d import Axes3D\nfrom math import pi\nfrom sklearn.preprocessing import StandardScaler\nimport numpy as np\nimport os\n%matplotlib inline\nimport pandas as pd\nimport calendar\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","d4467ec9":"print(os.listdir('..\/input'))","e9e309d1":"df = pd.read_csv('..\/input\/flights.csv', delimiter=',')\n\ndf.dataframeName = 'flights.csv'\n\nnRow, nCol = df.shape\n\nprint(f'Temos um total de {nRow} linhas e {nCol} colunas')","0d31d53c":"df.columns.tolist()","c74d3413":"df.head()","408b2464":"df.dtypes","eb6c8ca6":"df.describe().transpose()","73adc99c":"df.corr()","e67fb232":"corr_matrix=df.corr()\nsns.heatmap(corr_matrix, cmap='PuOr')","e1303415":"num_col = [var for var in df.columns if df[var].dtype == 'O']\ndf.loc[:,num_col].head()","3cbd0d3a":"num_col = [var for var in df.columns if df[var].dtype != 'O']\ndf.loc[:,num_col].head()","0936fe54":"df['month'] = df['month'].apply(lambda x: calendar.month_abbr[x])\n\ndf.head(2)","2d734cb9":"df.isnull().sum()","779ec680":"df.dropna(inplace=True)","8dcfa435":"df.isnull().sum()","ce8b6e45":"plt.figure(figsize=(22,6))\n\nplt.subplot(1,4,1)\nfig = sns.boxplot(x='dep_time', data=df,orient='v',color='b')\nfig.set_title('Departure time')\nfig.set_ylabel('')\n\nplt.subplot(1,4,2)\nfig = sns.boxplot(x='sched_dep_time', data=df,orient='v',color='b')\nfig.set_title('Schedule departure time')\nfig.set_ylabel('')\n\nplt.subplot(1,4,3)\nfig = sns.boxplot(x='sched_arr_time', data=df,orient='v',color='b')\nfig.set_title('Schedule arrival time')\nfig.set_ylabel('')\n\nplt.subplot(1,4,4)\nfig = sns.boxplot(x='arr_time', data=df,orient='v',color='b')\nfig.set_title('Arrival time')\nfig.set_ylabel('')","6a2dd03d":"plt.figure(figsize=(26,6))\n\nplt.subplot(1,5,1)\nfig = sns.boxplot(x='air_time', data=df,orient='v',color='r')\nfig.set_title('Air time')\nfig.set_ylabel('')\n\nplt.subplot(1,5,2)\nfig = sns.boxplot(x='dep_delay', data=df,orient='v',color='r')\nfig.set_title('Delay on departure')\nfig.set_ylabel('')\n\nplt.subplot(1,5,3)\nfig = sns.boxplot(x='arr_delay', data=df,orient='v',color='r')\nfig.set_title('Arrival delay')\nfig.set_ylabel('')\n\nplt.subplot(1,5,4)\nfig = sns.boxplot(x='flight', data=df,orient='v',color='r')\nfig.set_title('Flight')\nfig.set_ylabel('')\n\nplt.subplot(1,5,5)\nfig = sns.boxplot(x='distance', data=df,orient='v',color='r')\nfig.set_title('Distance airports')\nfig.set_ylabel('')","8f45b88d":"df['arr_delay'].head()","b003341a":"df['dep_delay'].head()","8bbb6a89":"cols_to_change = ['arr_delay', 'dep_delay']\n\ndf.loc[:, cols_to_change] = np.where(df[cols_to_change]<0, 0, df[cols_to_change])","6592df47":"df['arr_delay'].head()","f80b15bc":"df['dep_delay'].head()","f3947613":"plt.figure(figsize=(20,6))\n\nplt.subplot(1,2,1)\nfig = sns.boxplot(x='dep_delay', data=df,orient='v',color='r')\nfig.set_title('Delay on departure')\nfig.set_ylabel('')\n\nplt.subplot(1,2,2)\nfig = sns.boxplot(x='arr_delay', data=df,orient='v',color='r')\nfig.set_title('Arrival delay')\nfig.set_ylabel('')","e3ea6a42":"plt.figure(figsize=(26,6))\n\nplt.subplot(1,5,1)\nfig = df.air_time.hist(bins=25)\nfig.set_title('Air time')\nfig.set_ylabel('')\n\nplt.subplot(1,5,2)\nfig = df.dep_delay.hist(bins=25)\nfig.set_title('Delay on departure')\nfig.set_ylabel('')\n\nplt.subplot(1,5,3)\nfig = df.arr_delay.hist(bins=25)\nfig.set_title('Arrival delay')\nfig.set_ylabel('')\n\nplt.subplot(1,5,4)\nfig = df.flight.hist(bins=25)\nfig.set_title('Flight')\nfig.set_ylabel('')\n\nplt.subplot(1,5,5)\nfig = df.distance.hist(bins=25)\nfig.set_title('Distance')\nfig.set_ylabel('')","53067f4c":"![1_pnUns0cCd89cuAL7fvXVgQ.png](attachment:1_pnUns0cCd89cuAL7fvXVgQ.png)","74f00d1b":"IQR = df.air_time.describe()[6] - df.air_time.describe()[4]\n\nquartil_sup_airtime = df.air_time.quantile(0.75) + (IQR * 3)\nquartil_inf_airtime = df.air_time.quantile(0.25) - (IQR * 3)\n\nprint('Valores dos Outliers referente a vari\u00e1vel Air Time est\u00e3o entre {a} e {b}'\n      .format(a = quartil_sup_airtime, b = quartil_inf_airtime))\nprint('Quantidade de registros que ser\u00e3o alterados para o Quartil superior {}'\n      .format(df[df['air_time']>350].count()[0]))","295820ff":"IQR = df.dep_delay.describe()[6] - df.dep_delay.describe()[4]\n\nquartil_sup_depdelay = df.dep_delay.quantile(0.75) + (IQR * 3)\nquartil_inf_depdelay = df.dep_delay.quantile(0.25) - (IQR * 3)\n\nprint('Valores dos Outliers referente a feature Delay on departure est\u00e3o entre {a} e {b}'\n      .format(a = quartil_sup_depdelay, b = quartil_inf_depdelay))\nprint('Quantidade de registros que ser\u00e3o alterados para o Quartil superior {}'\n      .format(df[df['dep_delay']>50].count()[0]))","f3ae333c":"IQR = df.arr_delay.describe()[6] - df.arr_delay.describe()[4]\n\nquartil_sup_arrdelay = df.arr_delay.quantile(0.75) + (IQR * 3)\nquartil_inf_arrdelay = df.arr_delay.quantile(0.25) - (IQR * 3)\n\nprint('Valores dos Outliers referente a feature Arrival Delay est\u00e3o entre {a} e {b}'\n      .format(a = quartil_sup_arrdelay, b = quartil_inf_arrdelay))\nprint('Quantidade de registros que ser\u00e3o alterados para o Quartil superior {}'\n      .format(df[df['arr_delay']>80].count()[0]))","d2c07e8c":"IQR = df.flight.describe()[6] - df.flight.describe()[4]\n\nquartil_sup_flight = df.flight.quantile(0.75) + (IQR * 3)\nquartil_inf_flight = df.flight.quantile(0.25) - (IQR * 3)\n\nprint('Valores dos Outliers referente a feature Flight est\u00e3o entre {a} e {b}'\n      .format(a = quartil_sup_flight, b = quartil_inf_flight))\nprint('Quantidade de registros que ser\u00e3o alterados para o Quartil superior {}'\n      .format(df[df['flight']>6100].count()[0]))","96951e4a":"IQR = df.distance.describe()[6] - df.distance.describe()[4]\n\nquartil_sup_distance = df.distance.quantile(0.75) + (IQR * 3)\nquartil_inf_distance = df.distance.quantile(0.25) - (IQR * 3)\n\nprint('Valores dos Outliers referente a feature Distance est\u00e3o entre {a} e {b}'\n      .format(a = quartil_sup_distance, b = quartil_inf_distance))\nprint('Quantidade de registros que ser\u00e3o alterados para o Quartil superior {}'\n      .format(df[df['distance']>2600].count()[0]))","6df7207c":"df[df['dep_delay']>50]['year'].value_counts()","e0758ebd":"df[(df['year']) & (df['dep_delay']<50)]['dep_delay'].mean()","5c49c793":"def depdelay_outlier(df):\n    df['dep_delay'] = np.where(df['dep_delay']>50, \n                               np.random.randint(3.96, 5.96,1)[0], df['dep_delay'])\n    \ndepdelay_outlier(df)","edcc979c":"df[df['air_time']>350]['year'].value_counts()","767c0434":"df[(df['year']) & (df['air_time']<350)]['air_time'].mean()","8e797efc":"def airtime_outlier(df):\n    df['air_time'] = np.where(df['air_time']>350, \n                              np.random.randint(133, 153,1)[0], df['air_time'])\n\nairtime_outlier(df)","697b95b5":"df[df['arr_delay']>80]['year'].value_counts()","25682a5b":"df[(df['year']) & (df['arr_delay']<80)]['arr_delay'].mean()","53378ff1":"def arrdelay_outlier(df):\n    df['arr_delay'] = np.where(df['arr_delay']>80, \n                               np.random.randint(7.27, 9.27,1)[0], df['arr_delay'])\n\narrdelay_outlier(df)","aeee135d":"plt.figure(figsize=(20,6))\n\nplt.subplot(1,3,1)\nfig = sns.boxplot(x='air_time', data=df,orient='v',color='r')\nfig.set_title('Air time')\nfig.set_ylabel('')\n\nplt.subplot(1,3,2)\nfig = sns.boxplot(x='dep_delay', data=df,orient='v',color='r')\nfig.set_title('Delay on departure')\nfig.set_ylabel('')\n\nplt.subplot(1,3,3)\nfig = sns.boxplot(x='arr_delay', data=df,orient='v',color='r')\nfig.set_title('Arrival delay')\nfig.set_ylabel('')","9f2a20fd":"df['carrier'] = df['carrier'].map({'UA':'United Airlines','B6':'Jetblue',\n                                   'EV':'Atlantic Southeast Air ','DL':'Delta Airlines','AA':'American Airlines',\n                                   'MQ':'American Eagle', 'US': 'US Airways','9E':'Pinnacle Airlines','VX':'Virgin America',\n                                   'WN':'Southwest Airlines','AS':'Alaska Airlines','FL':'AirTran Airways','F9':'Frontier',\n                                   'YV':'Mesa Airlines','HA':'Hawaiian Airlines', 'OO':'SkyWest Airlines'})","8e9d9b9b":"plt.figure(figsize=(15, 5))\n\ndf['carrier'].value_counts().plot.bar()\nplt.xlabel('Empresa A\u00e9rea')\nplt.ylabel('V\u00f4os')\nplt.title('Quantidade de v\u00f4os por empresa a\u00e9rea')","1afa85ff":"df.groupby(['month']).size()","28d7124c":"plt.figure(figsize=(15, 5))\n\ndf.groupby(['month']).size().sort_values(ascending=False).plot.bar(width=0.3)\nplt.xlabel('M\u00eas')\nplt.ylabel('V\u00f4os')\nplt.title('Quantidade de V\u00f4os por m\u00eas')","6d7a7815":"airtime = df.groupby('carrier')[['distance']].sum().sort_values(by='distance', ascending=False).head(10)\nairtime.reset_index(inplace=True)\nairtime","b661294e":"plt.figure(figsize=(15,5))\nsns.pointplot(x='carrier', y='distance', data=airtime)\nplt.xticks(rotation=45)\nplt.title('Dist\u00e2ncia percorrida por Empresa A\u00e9rea');\n\nplt.xlabel('Empresa')\nplt.ylabel('Dist\u00e2ncia')","fba97187":"lst = []\n\ntop10 = df.groupby('dest').size().sort_values(ascending=False).head(10).index.tolist() \n\nfor i in range(len(top10)):\n    lst.append(df[df['dest'] == top10[i]])\n\ndf2 = pd.concat(lst)\n\ndf2['dest'] = df2['dest'].map({'ORD':'Chicago','ATL':'Atlanta',\n                               'LAX':'Los Angeles','BOS':'Boston',\n                               'MCO':'Orlando','CLT':'Charlotte',\n                               'SFO':'San Francisco','FLL':'Ft Lauderdale',\n                               'MIA':'Miami','DCA':'Washington'})\n\nplt.figure(figsize=(7, 4))\n\ndf2.groupby(['dest']).size().sort_values(ascending=False).plot.bar(width=0.3)\n\nplt.xlabel('Destino')\nplt.ylabel('V\u00f4os')\nplt.title(\"Top 10 destinos\")","d929048b":"height = df2.groupby(['dest']).size().sort_values(ascending=False).tolist()\nbars = df2.groupby(['dest']).size().sort_values(ascending=False).index.tolist()\ny_pos = np.arange(len(bars))\n\nplt.figure(figsize=(10, 6))\n\nplt.barh(y_pos, height)\nplt.yticks(y_pos, bars)\nplt.title('TOP 10 Destinos')\nplt.gca().invert_yaxis()\nplt.show()","af9ed1b5":"df3 = pd.DataFrame({\n'group': ['MS_0'],\n'Atlanta': [16837],\n'Chicago': [16566],\n'Los Angeles': [16026],\n'Boston': [15022],\n'Orlando': [13967],\n'Charlotte': [13674],\n'San Francisco': [13173],\n'Ft Lauderdale': [11897],\n'Miami': [11593],\n'Washington': [9111],\n}) \n \n# Criando background\n \n# n\u00fameros de vari\u00e1veis\ncategories=list(df3)[1:]\nN = len(categories)\n \n# dividindo o gr\u00e1fico por n\u00famero de variavel para visualiza\u00e7\u00e3o do \u00e2ngulo de cada eixo\nangles = [n \/ float(N) * 2 * pi for n in range(N)]\nangles += angles[:1]\n \n# Inicializando o spider plot\nax = plt.subplot(111, polar=True)\n \n#  Plotando o primeiro eixo no topo\nax.set_theta_offset(pi \/ 2)\nax.set_theta_direction(-1)\n \n# Desenhando os eixos por vari\u00e1vel + add labels tamb\u00e9m\nplt.xticks(angles[:-1], categories)\n \n# Desenhando ylabels\nax.set_rlabel_position(0)\nplt.yticks([10000,20000], [\"10000\",\"20000\"], color=\"grey\", size=7)\nplt.ylim(0,30000)\n\nplt.figure(figsize=(10, 6))\n\n# Ind1 .sort_values(ascending=False)\nvalues=df3.loc[0].drop('group').values.flatten().tolist()\nvalues += values[:1]\nax.plot(angles, values, linewidth=1, linestyle='solid', label=\"Status 0\")\nax.fill(angles, values, 'b', alpha=0.1)","ecb1e88c":"um = df[df['arr_delay'] > 0]['arr_delay'].value_counts().sum()\ndois = df[df['arr_delay'] <= 0]['arr_delay'].value_counts().sum()\n\nnames = [um, dois]\nsize = [um, dois]\n\nsubgroup_names = df2.groupby('carrier').size().sort_values(ascending=False).head(10).index.tolist()\nsubgroup_size = df2.groupby('carrier').size().sort_values(ascending=False).head(10).tolist()\n\n# Create a circle for the center of the plot\nmy_circle=plt.Circle( (0,0), 0.7, color='white')\n\na, b, c=[plt.cm.Blues, plt.cm.Oranges, plt.cm.Greens]\n\n# First Ring (outside)\nfig, ax = plt.subplots()\nax.axis('equal')\nmypie, _ = ax.pie(size, radius=1.3, labels=names, colors=[a(0.6), b(0.6), c(0.6)] )\nplt.setp( mypie, width=0.3, edgecolor='white')\n \n# Second Ring (Inside)\nmypie2, _ = ax.pie(subgroup_size, radius=1.3-0.3, labels=subgroup_names, labeldistance=0.7, \n                   colors=[a(0.5), a(0.4), a(0.3), b(0.5), b(0.4), c(0.6), c(0.5), c(0.4), c(0.3), c(0.2)])\nplt.setp( mypie2, width=0.4, edgecolor='white')\nplt.margins(0,0)\n\nplt.legend(['Atrasados','Pontuais'], bbox_to_anchor=(0.02,1), title='V\u00f4os por Empresa')\nfig.set_size_inches(10, 8)\nplt.show()","46514d1f":"Conforme o plot das dispers\u00e3o podemos notar que a dispers\u00e3o dos outliers est\u00e3o para assim\u00e9trica a direita (positiva), ent\u00e3o o m\u00e9todo a ser aplicado ser\u00e1 o Interquartil.","18b918ea":"Nessa exibi\u00e7\u00e3o temos a quantidade total de voos atrasados e voos pontuais  juntamente com as 10 maiores empresas que operaram esses voos.","0320eacd":"**Exibindo o conte\u00fado do DataFrame**","35dc90da":"Total de v\u00f4os por m\u00eas","2f4fc5a7":"**Vari\u00e1veis num\u00e9ricas **","1105dab1":"\nUnnamed: 0 = ID\n\nyear = Year of the Flight Trip\n\nmonth = Month of the Flight Trip\n\nday = Day of the Flight Trip\n\ndep_time = Departure time\n\nsched_dep_time = Planned Departure Time\n\ndep_delay = Total Delay on Departure\n\narr_time = Arrival time\n\nsched_arr_time = Planned arrival time\n\narr_delay = Delay arrival time\n\ncarrier = Transportation company\n\nflight = Flight Identifier\n\ntailnum = Aircraft Identifier\n\norigin = Starting Airport\n\ndest = Destination Airport\n\nair_time = The time duration between wheels_off and wheels_on time\n\ndistance = Distance between two airports\n\nhour = Hour of the Flight Trip\n\nminute = Minutes from hour of the Flight Trip\n\ntime_hour = Date and hour of the Flight Trip\n","170c065e":"Substituindo os valores negativos para zero","67cef420":"Plotamos a quantidade de v\u00f4os por m\u00eas, n\u00e3o h\u00e1 discrepancias na sumariza\u00e7\u00e3o dos dados ao longo do ano, por\u00e9m em Julho \u00e9 o m\u00eas com mais v\u00f4os realizados, muito se explica o fato de ser a temporada de Ver\u00e3o e muito a tipico para viagens.","01d52590":"**Conhecendo o conte\u00fado do diret\u00f3rio**","a6212633":"**Para as colunas Flight e Distance iremos deixar os outliers para manter o dataset robusto e generalista**","e249b628":"Como s\u00e3o 31789 observa\u00e7\u00f5es, se inserirmos em um \u00fanico valor, formaremos um pico na distribui\u00e7\u00e3o de forma err\u00f4nea. Assim, deixamos a vari\u00e2ncia entre 3.96 e 5.96","d69b5b65":"Com esta visualiza\u00e7\u00e3o \u00e9 possivel notar a United Airlines , Jetblue e Atlantic Southeast Air entre as 3 primeiras com maior volume de v\u00f4os. \n\nA United Airlines, Inc. \u00e9 a terceira maior linha a\u00e9rea dos Estados Unidos e do mundo, com uma frota de 708 avi\u00f5es em 373 destinos e emprega 61 mil trabalhadores. Seu principal hub \u00e9 o Aeroporto Internacional O'Hare em Chicago.\n\nJetBlue Airways \u00e9 uma companhia a\u00e9rea de baixo custo estadunidense com sede no bairro de Queens, Nova Iorque. Sua principal base de opera\u00e7\u00f5es \u00e9 o Aeroporto Internacional John F. Kennedy. A JetBlue Airways foi fundada em 1999 pelo brasileiro radicado nos Estados Unidos da Am\u00e9rica, David Neeleman\n\nA Atlantic Southeast Airlines era uma companhia a\u00e9rea americana baseada no A-Tech Center em College Park, na Ge\u00f3rgia, voando para 144 destinos como operadora da Delta Connection e, em fevereiro de 2010, come\u00e7ou a operar como transportadora da United Express. Era uma subsidi\u00e1ria integral da SkyWest, Inc.","9b577786":"Conforme plot dos Top's 10 de destinos mais frequente, podemos notar Chicago e Atlanta como os mais frequentados, seguidamente de Los Angeles e Boston. Certamente por Atlanta \u00e9 a capital do estado da Ge\u00f3rgia, nos EUA. A cidade desempenhou um papel importante na Guerra Civil e no movimento dos direitos civis dos negros nos Estados Unidos na d\u00e9cada de 1960. O Atlanta History Center registra o passado da cidade, e o Martin Luther King Jr. National Historic Site \u00e9 dedicado \u00e0 vida do l\u00edder afro-americano Martin Luther King Jr. No centro da cidade, o Centennial Olympic Park, constru\u00eddo para os Jogos Ol\u00edmpicos de 1996, abriga o enorme aqu\u00e1rio Georgia Aquarium.","53b9e869":"**Verificando os tipos de dados presentes no DataFrame**","cd2db7e3":"**Visualia\u00e7\u00f5es do dataset**","01fa75e2":"**Apresentando dados estasticos do dataset**","7d351544":"Primeiramente iremos plotar as distribui\u00e7\u00f5es para descobrir se elas s\u00e3o gaussianas (normais) ou distorcidas (assim\u00e9tricas).\nDependendo da distribui\u00e7\u00e3o, vamos usar o pressuposto normal ou o interquantil\n\n\n   ","2589ac62":"**Vari\u00e1veis categ\u00f3ricas**","777d9310":"Cen\u00e1rio das vari\u00e1veis num\u00e9ricas\n* Vari\u00e1vel Discreta : year, month\n* Vari\u00e1vel Cont\u00ednua : dep_time, sched_dep_time, dep_delay, arr_time, sched_arr_time, arr_delay, flight, air_time, distance\n \nConsideramos que Year e Month \u00e9 variv\u00e1vel discreta, pois n\u00e3o h\u00e1 perda de informa\u00e7\u00e3o ao discretizar a vari\u00e1vel, e o detalhamento n\u00e3o \u00e9 fundamental para o entendimento da vari\u00e1vel.","7c4f4931":"renomeando o conte\u00fado da coluna ano","4533bdab":"Voos atrasados","e5bec875":"**Verificando a correla\u00e7\u00e3o entre as variaveis presente no dataset**\n* A correla\u00e7\u00e3o \u00e9 uma medida que indica o quanto duas vari\u00e1veis est\u00e3o relacionadas. Seu valor fica sempre entre -1, que indica uma anti-correla\u00e7\u00e3o perfeita, e 1, que indica uma correla\u00e7\u00e3o perfeita.","18a1699c":"Checando os valores, coer\u00eancia e tamb\u00e9m encontrando a m\u00e9dia para ser substituida nos outliers","39303734":"Fazendo o mesmo processo anterior, para os outros outliers","b4317b13":"Plotando os outliers ap\u00f3s substitui\u00e7\u00e3o dos valores negativos","524ebb7f":"**Algumas informa\u00e7\u00f5es sobre os dados**","67813119":"**Classificando as colunas do DataSet**","6a353643":"Notamos valores negativos para as colunas Delay on departure e Arrival delay, como estamos tratando de atraso, esses valores caracterizam voos antecipados, por tanto iremos substituir os valores negativos para zero, desta forma mantemos em evid\u00eancia o conceito de atraso e mantemos os resultados das outras colunas.","00c52b94":"**Importando o arquivo de v\u00f4os e criando DataFrame informando n\u00fameros de linhas e colunas**","8cdf7391":"**Importando as bibliotecas**","84566615":"As vari\u00e1veis categ\u00f3rias selecionadas s\u00e3o: Empresa A\u00e9rea(Carrier) , Origem e Destino determinada como Nominal. \n\nPara time_hour n\u00e3o iremos utilizar, devido conter as mesmas informa\u00e7\u00f5es nas colunas hour, minute, month, day e year. ","1a8f7dc1":"**Verificando a distribui\u00e7\u00e3o dos outliers para variavel cont\u00ednua**\n    ","b0161289":"Plotando os outliers ap\u00f3s tratamento","16e899bb":"> **Verificando os outliers para as vari\u00e1veis**","2c472aed":"Top 10 destinos","4a848f17":"**Removendo os dados nulos**","b18b26a1":"**Exibi\u00e7\u00e3o da correla\u00e7\u00e3o em Gr\u00e1fico**","a7b19776":"Nesta visualiza\u00e7\u00e3o encontramos a United Airlines como lider de dist\u00e2ncia percorrida, o que nos mostra ser a companhia \u00e1rea mais solicitada pelos viajantes. A United Airlines, Inc. \u00e9 a terceira maior linha a\u00e9rea dos Estados Unidos e do mundo, com uma frota de 708 avi\u00f5es em 373 destinos e emprega 61 mil trabalhadores. Seu principal hub \u00e9 o Aeroporto Internacional O'Hare em Chicago","360383d7":"**Total de dados faltantes no dataset**","15817f61":"Quantidade de v\u00f4os por empresa a\u00e9rea","a16eacf9":"Ao gerar alguns dados estat\u00edsticos com a fun\u00e7\u00e3o describe(), podemos notar:\n* Dados faltantes em algumas colunas;\n* Dados negativos nas colunas de Atraso;\n* M\u00e9dia alta para as colunas de Tempo Chegada e Planejamento de Chegada.\n\n"}}