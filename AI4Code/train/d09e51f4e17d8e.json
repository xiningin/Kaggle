{"cell_type":{"81925059":"code","aea83c6d":"code","09247267":"code","25278816":"code","691c2f35":"code","6eb97771":"code","a75652c5":"code","4b34284b":"code","b44a95a9":"code","18fc52b1":"code","aa4df6dc":"code","11a3d41e":"code","081cca52":"code","7eb6fc28":"code","601fdbc4":"code","9811d398":"code","b67bc4fb":"code","b57afef6":"code","b086c6eb":"code","c42e6e3c":"code","fcd72ae9":"code","ea671c56":"code","23ce7faf":"code","a1a46e6a":"code","a9e5f664":"code","97ed0e66":"code","3fa2005a":"code","2d390eec":"markdown","96e3c431":"markdown","64537c30":"markdown","29b3c649":"markdown","82f8af9b":"markdown","cebdf083":"markdown","ca606eeb":"markdown","2f1cced2":"markdown","9226b34d":"markdown"},"source":{"81925059":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport fuzzywuzzy\nfrom fuzzywuzzy import process\nimport sys\n#np.set_printoptions(threshold=sys.maxsize)\nimport warnings\nwarnings.filterwarnings(\"ignore\")","aea83c6d":"df = pd.read_csv('..\/input\/gufhtugu-publications-dataset-challenge\/GP Orders - 4.csv')\ndf.head()","09247267":"df.describe()","25278816":"df.dtypes","691c2f35":"df.shape","6eb97771":"df.columns","a75652c5":"df = df.rename(columns={'Order Number': 'order_number',\"Order Status\":\"order_status\", \"Book Name\":\"book_name\",\"Order Date\":\"order_date\",\"City (Billing)\":\"billing_city\"})\ndf.head()","4b34284b":"df['order_date'] = pd.to_datetime(df['order_date'])\ndf.head()","b44a95a9":"df.dtypes","18fc52b1":"df.order_number.nunique()","aa4df6dc":"df[df['book_name'].isna()]","11a3d41e":"df[df['billing_city'].isna()]","081cca52":"df.dropna(inplace=True)","7eb6fc28":"df.shape","601fdbc4":"df.order_status.value_counts()","9811d398":"df.order_status.hist()","b67bc4fb":"# Preprocess Billing_City\ndf['billing_city'] = df['billing_city'].str.lower()\ndf['billing_city'] = df['billing_city'].str.strip()\n# Preprocess Book_Name\ndf['book_name'] = df['book_name'].str.lower()\ndf['book_name'] = df['book_name'].str.strip()\ndf.head()","b57afef6":"df.billing_city.nunique()","b086c6eb":"df = df.assign(order_books_name=df.book_name.str.split('\/')).explode('book_name')","c42e6e3c":"#Thanks to @hussainsaddam12 & @mnavaidd for this codeblock idea\ndf['date'] = df['order_date'].dt.date\ndf['time'] = df['order_date'].dt.time\ndf[\"day_name\"] = df[\"order_date\"].dt.day_name()\ndf[\"month_name\"] = df[\"order_date\"].dt.month_name()\ndf['year'] = df[\"order_date\"].dt.year\ndf","fcd72ae9":"df.order_books_name.explode().value_counts()[0:10]","ea671c56":"top_10 = df.order_books_name.explode().value_counts()[0:10]\nax = sns.barplot(x=top_10.index,y=top_10.values)\nax.set_xlabel('Book Names')\nax.set_ylabel('Sold')\nax.set_xticklabels(top_10.index, rotation='vertical', fontsize=10)\nplt.show()","23ce7faf":"df_city = df['billing_city'].unique()\ndf_city","a1a46e6a":"matches = fuzzywuzzy.process.extract(\"karachi\", df_city, limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio)\nmatches","a9e5f664":"# Thanks to Sir ZeeshanUsmani for this function\ndef replace_matches_in_column(df, column, string_to_match, min_ratio = 85):\n    # get a list of unique strings\n    strings = df[column].unique()\n    \n    # get the top 10 closest matches to our input string\n    matches = fuzzywuzzy.process.extract(string_to_match, strings, \n                                         limit=10, scorer=fuzzywuzzy.fuzz.token_sort_ratio)\n    # only get matches with a ratio > 85\n    close_matches = [matches[0] for matches in matches if matches[1] >= min_ratio]\n\n    # get the rows of all the close matches in our dataframe\n    rows_with_matches = df[column].isin(close_matches)\n\n    # replace all rows with close matches with the input matches \n    df.loc[rows_with_matches, column] = string_to_match","97ed0e66":"replace_matches_in_column(df=df, column='billing_city', string_to_match='karachi')\n#df_city.sort()\nlen(df_city)","3fa2005a":"replace_matches_in_column(df=df, column='billing_city', string_to_match=\"khi\")\nreplace_matches_in_column(df=df, column='billing_city', string_to_match=\"rawalpindi\")\nreplace_matches_in_column(df=df, column='billing_city', string_to_match=\"islamabad\")\nreplace_matches_in_column(df=df, column='billing_city', string_to_match=\"lahore\")\nreplace_matches_in_column(df=df, column='billing_city', string_to_match=\"jauharabad\")\nreplace_matches_in_column(df=df, column='billing_city', string_to_match=\"taxila\")","2d390eec":"#### Top 10 Best Selling Books","96e3c431":"# Reading Data","64537c30":"# EDA","29b3c649":"# Preprocessing Data","82f8af9b":"#### Changing data type","cebdf083":"#### Using fuzzy matching to correct inconsistent Data Entry","ca606eeb":"#### Dropping NaN values","2f1cced2":"# Importing Libraries","9226b34d":"### Next step\n* Removing inconsistencies in billing_city coloumn\n* And to predict future sales\n"}}