{"cell_type":{"33a6cb3a":"code","adb9cf95":"code","ca83fa2f":"code","147aab3d":"code","0c2a237d":"code","81ff8311":"code","14180ac4":"code","9b3b6977":"code","9fbe8df6":"code","6e12d250":"code","de0cd9bd":"code","0c7a79a6":"code","1d18d0fa":"code","0d432584":"code","f33263df":"code","ebbeac7c":"code","f2d042d8":"code","8b591c67":"code","9a2c4cff":"code","10372fda":"code","57d0d04b":"code","b7ab973b":"code","9ede0979":"code","02794a7d":"code","2b2cf7fe":"code","ef3b1e73":"code","18d9abdb":"code","f9d0c8c9":"code","138e227b":"code","136bb28d":"code","00178e72":"code","75b92f97":"code","5c1a13bb":"code","705565be":"markdown","0aca0552":"markdown","c2c140ed":"markdown","11dcf3f1":"markdown","85c4d8ca":"markdown","73196d05":"markdown","0f052378":"markdown","5964fabf":"markdown","378cd5ba":"markdown","fc35f34f":"markdown","acdb03ba":"markdown","b7fa9d34":"markdown","e8722fa4":"markdown","d89aaeff":"markdown","c32f9acf":"markdown","db525551":"markdown","d58a853b":"markdown","779b57a3":"markdown","10a5343c":"markdown","4d5004c5":"markdown"},"source":{"33a6cb3a":"# packages\n\n# standard\nimport numpy as np\nimport pandas as pd\nimport time\n\n# plots\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# stats\nfrom statsmodels.graphics.mosaicplot import mosaic","adb9cf95":"# load and preview\ndf = pd.read_csv('..\/input\/women-in-movies\/movies.csv')# lo\ndf.head()","ca83fa2f":"# distribution over years\nplt.figure(figsize=(12,4))\ndf.year.value_counts().plot(kind='bar')\nplt.title('Movies by year')\nplt.grid()\nplt.show()","147aab3d":"# test outcome (clean)\nplt.figure(figsize=(12,4))\ndf.clean_test.value_counts().plot(kind='bar')\nplt.title('clean_test')\nplt.grid()\nplt.show()","0c2a237d":"# show also test categories before cleaning\ndf.test.value_counts()","81ff8311":"# test passed \/ failed [binary]\nplt.figure(figsize=(12,4))\ndf.binary.value_counts().plot(kind='bar')\nplt.title('Test Pass \/ Fail [binary]')\nplt.grid()\nplt.show()","14180ac4":"col_budget = 'budget_2013$'\ncol_domgross = 'domgross_2013$'\ncol_intgross = 'intgross_2013$'\n\n# for a non-indexed perspective simply use the following deactivated code instead:\n# col_budget = 'budget'\n# col_domgross = 'domgross'\n# col_intgross = 'intgross'\n\nfeatures_num = [col_budget, col_domgross, col_intgross]\nfeatures_num","9b3b6977":"# pairwise scatter plots + distributions\nsns.pairplot(df[features_num + ['binary']], hue='binary',\n             plot_kws={'alpha': 0.5})\nplt.show()","9fbe8df6":"# log plots\nfor f in features_num:\n    np.log10(1+df[f]).plot(kind='hist', bins=25)\n    plt.title('log_10(1+' + f + ')')\n    plt.xlim(0,10) # same range for all plots\n    plt.grid()\n    plt.show()","6e12d250":"plt.figure(figsize=(14,6))\nsns.violinplot(data=df, y='binary', x=col_budget)\nplt.title('Budget by test passed\/failed')\nplt.grid()\nplt.show()","de0cd9bd":"plt.figure(figsize=(14,6))\nsns.violinplot(data=df, y='binary', x=col_domgross)\nplt.title('Domestic gross by test passed\/failed')\nplt.grid()\nplt.show()","0c7a79a6":"plt.figure(figsize=(14,6))\nsns.violinplot(data=df, y='binary', x=col_intgross)\nplt.title('International gross by test passed\/failed')\nplt.grid()\nplt.show()","1d18d0fa":"# basic stats - budget\nprint('BUDGET')\nprint('======')\nprint('FAIL:')\nprint(df[col_budget][df.binary=='FAIL'].describe())\nprint('PASS:')\nprint(df[col_budget][df.binary=='PASS'].describe())","0d432584":"# basic stats - international gross\nprint('INT.GROSS')\nprint('=========')\nprint('FAIL:')\nprint(df[col_intgross][df.binary=='FAIL'].describe())\nprint('PASS:')\nprint(df[col_intgross][df.binary=='PASS'].describe())","f33263df":"# basic stats - domestic gross\nprint('DOM.GROSS')\nprint('=========')\nprint('FAIL:')\nprint(df[col_domgross][df.binary=='FAIL'].describe())\nprint('PASS:')\nprint(df[col_domgross][df.binary=='PASS'].describe())","ebbeac7c":"# show mean ratios\nprint('All Years:\\n')\nfor f in features_num:\n    ratio_temp = df[f][df.binary=='FAIL'].mean() \/ df[f][df.binary=='PASS'].mean()\n    print('Perspective', f, ': mean ratio =', np.round(ratio_temp,4))","f2d042d8":"df_recent = df[df.year>=2004]","8b591c67":"\n# show mean ratios\nprint('2004 - 2013:\\n')\nfor f in features_num:\n    ratio_temp = df_recent[f][df.binary=='FAIL'].mean() \/ df_recent[f][df.binary=='PASS'].mean()\n    print('Perspective', f, ': mean ratio =', np.round(ratio_temp,4))","9a2c4cff":"for f in features_num:\n    plt.figure(figsize=(14,6))\n    sns.boxplot(data=df_recent, x='year', y=f, hue='binary')\n    plt.xticks(rotation=90)\n    plt.title(f + 'by year')\n    plt.grid()\n    plt.show()","10372fda":"# plot development of passed\/failed over time using mosaic plot\nplt_para_save = plt.rcParams['figure.figsize'] # remember plot settings\n\nplt.rcParams['figure.figsize'] = (16,6) # increase plot size for mosaics\nmosaic(data=df.sort_values('year'), \n       index=['year', 'binary'],\n       title='Test passed\/failed by year',\n       label_rotation=90)\nplt.show()\n    \n# reset plot size again\nplt.rcParams['figure.figsize'] = plt_para_save","57d0d04b":"# plot development of passed\/failed over time using mosaic plot - zoom\nplt_para_save = plt.rcParams['figure.figsize'] # remember plot settings\n\nplt.rcParams['figure.figsize'] = (16,6) # increase plot size for mosaics\nmosaic(data=df[df.year<=1980].sort_values('year'),\n       index=['year', 'binary'], \n       title='Test passed\/failed by year [1970-1980]',\n       label_rotation=90)\nplt.show()\n    \n# reset plot size again\nplt.rcParams['figure.figsize'] = plt_para_save","b7ab973b":"# plot development of passed\/failed over time using mosaic plot - zoom\nplt_para_save = plt.rcParams['figure.figsize'] # remember plot settings\n\nplt.rcParams[\"figure.figsize\"] = (16,6) # increase plot size for mosaics\nmosaic(data=df[(df.year>=1981) & (df.year<=1995)].sort_values('year'), index=['year', 'binary'],\n       title='Test passed\/failed by year [1981-1995]',\n       label_rotation=90)\nplt.show()\n    \n# reset plot size again\nplt.rcParams['figure.figsize'] = plt_para_save","9ede0979":"# show corresponding table\ndf_pass_dev = pd.crosstab(df.year, df.binary)\ndf_pass_dev['n'] = df_pass_dev.FAIL + df_pass_dev.PASS\ndf_pass_dev['FAIL_perc'] = 100*np.round(df_pass_dev.FAIL \/ df_pass_dev.n,4)\ndf_pass_dev['PASS_perc'] = 100*np.round(df_pass_dev.PASS \/ df_pass_dev.n,4)\ndf_pass_dev","02794a7d":"# plot development of \"passed\" percentage\nplt.figure(figsize=(14,5))\nplt.scatter(df_pass_dev.index, df_pass_dev.PASS_perc)\nplt.title('Percentage \"passed\" per year')\nplt.grid()\nplt.show()","2b2cf7fe":"# plot development of \"passed\" percentage; year >= 1984\ndf_pass_dev_temp = df_pass_dev[df_pass_dev.index>=1984]\nplt.figure(figsize=(14,5))\nplt.scatter(df_pass_dev_temp.index, df_pass_dev_temp.PASS_perc)\n# add regression line\nm, b = np.polyfit(df_pass_dev_temp.index, df_pass_dev_temp.PASS_perc, 1)\nplt.plot(df_pass_dev_temp.index, m*df_pass_dev_temp.index + b, c='darkred')\nplt.title('Percentage \"passed\" per year [starting 1984 => at least 10 observations for each year]')\nplt.grid()\nplt.show()","ef3b1e73":"n_top = 20\nshow_cols = ['year', 'title' , 'binary'] + features_num","18d9abdb":"df_top_b = df.nlargest(columns=[col_budget], n=n_top)\ndf_top_b[show_cols]","f9d0c8c9":"# plot fail\/pass distribution\ndf_top_b.binary.value_counts().plot(kind='bar')\nplt.title('Top Movies by budget')\nplt.grid()\nplt.show()","138e227b":"df_top_i = df.nlargest(columns=[col_intgross], n=n_top)\ndf_top_i[show_cols]","136bb28d":"# plot fail\/pass distribution\ndf_top_i.binary.value_counts().plot(kind='bar')\nplt.title('Top Movies by international gross')\nplt.grid()\nplt.show()","00178e72":"df_top_d = df.nlargest(columns=[col_domgross], n=n_top)\ndf_top_d[show_cols]","75b92f97":"# plot fail\/pass distribution\ndf_top_d.binary.value_counts().plot(kind='bar')\nplt.title('Top Movies by domestic gross')\nplt.grid()\nplt.show()","5c1a13bb":"for f in features_num:\n    plt.figure(figsize=(14,6))\n    sns.boxplot(data=df, x='year', y=f)\n    plt.xticks(rotation=90)\n    plt.title(f + 'by year')\n    plt.grid()\n    plt.show()","705565be":"<a id='1'><\/a>\n# Explore distributions","0aca0552":"#### In order to achieve a fair comparison of new and old movies, we will work with the indexed figures (2013 Dollars) instead of the original values in the following.","c2c140ed":"#### Maybe the effect is driven by older years => Let's look only at the most recent 10 years:","11dcf3f1":"#### We see an improvement of the \"pass\" percentage over time.","85c4d8ca":"<a id='3'><\/a>\n# Top Movies","73196d05":"### By international gross","0f052378":"### Evaluate financial features","5964fabf":"## Do movies with strong female roles make as much money as those with male leads?\n\n### Links\n* https:\/\/fivethirtyeight.com\/features\/the-dollar-and-cents-case-against-hollywoods-exclusion-of-women\/\n* http:\/\/bechdeltest.com\/\n\n### Table of Contents\n* [Explore distributions](#1)\n* [Analytics by test passed\/failed](#2)\n* [Top Movies](#3)\n* [Other Explorations](#4)","378cd5ba":"#### Remark: The 2009 outlier is the movie \"Avatar\".","fc35f34f":"#### Still a big difference... Let's now evaluate the distributions by year (again only for the most recent years):","acdb03ba":"### Development of pass\/fail over time","b7fa9d34":"<a id='2'><\/a>\n# Analytics by test passed\/failed","e8722fa4":"#### We observe that (no matter which financial perspective we choose) in the top movies segment there are significantly more movies that fail the Bechdel-Test than that pass it. Situation gets better when using the non-indexed figures (as older movies have much less impact then). ","d89aaeff":"### By domestic gross","c32f9acf":"#### Zoom in older years:","db525551":"#### For all three financial perspectives the \"FAIL\" group shows considerably higher means and medians.","d58a853b":"### Financial figures by year","779b57a3":"#### For 1970 we have only one movie => better ignore leftmost point...\n#### Let's make another plot starting 1984, then we have at least 10 observations for each year:","10a5343c":"<a id='4'><\/a>\n# Other Explorations","4d5004c5":"### By Budget"}}