{"cell_type":{"8d14b907":"code","892bf750":"code","f19fe0e5":"code","b359c3fa":"code","c7c39f33":"code","5448d1b6":"code","deb69b50":"code","10b470e2":"code","01eb9f67":"code","06dc572e":"code","59d7713d":"code","234cc914":"code","c3c05a30":"code","617cf544":"code","66c7838d":"code","6eb4de3f":"code","afff4aa8":"code","8d08c211":"code","6a8358e1":"code","49473d2d":"code","32bd37c4":"code","32287dd9":"code","d6f41347":"code","96ce08a2":"markdown","0dc37375":"markdown","7ff8d24b":"markdown","a48acacc":"markdown","81e7a60c":"markdown","1d55f522":"markdown","a0abedb4":"markdown","f75ed5b0":"markdown","7c32ce2f":"markdown","a0f5d9ab":"markdown","ed9cbbff":"markdown","659e97ba":"markdown","9dcc0518":"markdown","b4749a33":"markdown"},"source":{"8d14b907":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib_venn import venn2,venn2_circles\nimport seaborn as sns\n\n\ndf=pd.read_csv('\/kaggle\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')\n\n#Spliting DataFrame\nIran=df[df['Q3']=='Iran, Islamic Republic of...']\nIran['Q3']='Iran'\nIsrael=df[df['Q3']=='Israel']\nSaudi=df[df['Q3']=='Saudi Arabia']\n\n#Merging\nCountries=[Iran,Israel,Saudi]\nCountry_Names=['Iran','Israel','Saudi Arabia']\nn_participants={Country_Names[i]:len(Countries[i]) for i in range(3)}\nmydf=pd.concat(Countries)\n\n#Styling\ncolors=[['#ffb1ab','#ff7d7d','#fa2616','#850000'],['#c4d3ff','#60c6fc','#3666ff','#000485'],['#bdffbf','#8cff93', '#00ff0f','#008507']]\npalette=[c[2] for c in colors]","892bf750":"plt.figure(figsize=(10,6))\nserie=pd.Series(n_participants)\nmybar=plt.bar(serie.index,serie.values,color=palette)\nsns.despine(top=True, right=True, left=False, bottom=False)\n_=plt.title('Number of Participants')","f19fe0e5":"gender=mydf.groupby(['Q3','Q2']).count()['Q1'].unstack()\ngen_pen=np.round(100*gender['Female']\/gender.sum(axis=1),2)\ngen_pen=pd.DataFrame(gen_pen).reset_index().reindex([2,1,0])\ngen_pen.columns=['country','percentage']\n\n\n# \u00a9 https:\/\/towardsdatascience.com\/donut-plot-with-matplotlib-python-be3451f22704\nr=.7\nrd=.3\nstartingRadius = r + (rd* (len(gen_pen)-1))\nplt.figure(figsize=(15,8))\n\n\nfor index, row in gen_pen.iterrows():\n    country = row[\"country\"]\n    percentage = row[\"percentage\"]\n    textLabel = country + ' ' + str(percentage)+'%'\n    remainingPie = 100 - percentage\n\n    donut_sizes = [remainingPie, percentage]\n\n    plt.text(0.01, startingRadius - 0.18, textLabel, horizontalalignment='center', verticalalignment='center')\n    plt.pie(donut_sizes, radius=startingRadius, startangle=90, colors=colors[index][::2],\n            wedgeprops={\"edgecolor\": \"white\", 'linewidth': 1})\n\n    startingRadius-=rd\n    \n\nplt.axis('equal')\nplt.title('Women\\'s Paritipation Rate')\n\ncircle = plt.Circle(xy=(0, 0), radius=0.40, facecolor='white')\n_=plt.gca().add_artist(circle)","b359c3fa":"def pie_plotter(data,title,col_dir=1):\n\n    plt.figure(figsize=(16,5))\n    plt.suptitle(title)\n    for i,country_name in enumerate(Country_Names):\n        plt.subplot(1,3,i+1)\n        plt.pie(data.loc[country_name],labels=data.columns,colors=colors[i][col_dir-1::col_dir],\n            wedgeprops={\"edgecolor\": \"white\", 'linewidth': 1},shadow=True)\n         #,autopct='%1.0f%%', pctdistance=.8, labeldistance=1.1)\n        # Uncomment the styles abovefor getting percentages\n        \n        circle = plt.Circle(xy=(0, 0), radius=0.60, facecolor='white')\n        plt.xlabel(country_name)\n        _=plt.gca().add_artist(circle)","c7c39f33":"def age_categorizer(age):\n    if age<3: \n        return '0-29'\n    elif age>3:\n        return '30-39'\n    else:\n        return '40+'\n\nmydf['Age_Cat']=mydf['Q1'].apply(lambda x:age_categorizer (int(x[0])))\nage_df=mydf.groupby(['Q3','Age_Cat']).count()['Q4'].unstack()","5448d1b6":"pie_plotter(age_df,'Age Decomposition',-1)","deb69b50":"temp=mydf.groupby(['Q3','Q4']).count()['Q1'].unstack()\ntemp['Other']=temp.drop(['Doctoral degree','Master\u2019s degree'],axis=1).fillna(0).sum(axis=1)\ndegree_df=temp[['Other','Master\u2019s degree','Doctoral degree']]\ndegree_df.columns=['B.Sc.\/Other','M.Sc.','PhD']","10b470e2":"pie_plotter(degree_df,'Education Decomposition')","01eb9f67":"temp=mydf.groupby(['Q3','Q6']).count()['Q1'].unstack()\n\ntemp['50-999']=temp['50-249 employees']+temp['250-999 employees']\nemp_df=temp[['0-49 employees','50-999','1000-9,999 employees','> 10,000 employees']]\nemp_df.columns=['0-49','50-1k','1k-10k','10k+']","06dc572e":"pie_plotter(emp_df,'Number of Employees Decomposition')","59d7713d":"s1=['$0-999']\ns2=['1,000-1,999','2,000-2,999','3,000-3,999','4,000-4,999','5,000-7,499','7,500-9,999','10,000-14,999','15,000-19,999','20,000-24,999','25,000-29,999']\ns3=['30,000-39,999','40,000-49,999','50,000-59,999','60,000-69,999','70,000-79,999','80,000-89,999', '90,000-99,999']\ns4=['100,000-124,999','125,000-149,999','150,000-199,999','200,000-249,999','> $500,000']\n\nS=[s1,s2,s3,s4]\nS_n=['s1','s2','s3','s4']\n\ntemp=mydf.groupby(['Q3','Q10']).count()['Q1'].unstack()\n\nfor i,s in enumerate(S):\n    temp[S_n[i]]=temp[s].sum(axis=1)\n    \nsal_df=temp[S_n]\nsal_df.columns=['1k-','1k-30k','30k-100k','100k+']","234cc914":"pie_plotter(sal_df,'Salary Decomposition')","c3c05a30":"def preprocess(question):\n    cols=[col for col in mydf.columns if ('{}_Part'.format(question) in col)]\n    temp=mydf[cols]\n    lables=temp.describe().loc['top']\n    notnull=temp.notnull()\n    notnull.columns=lables\n    notnull['Country']=mydf['Q3']\n    return notnull\n    \n\ndef multi_handler(question):\n    notnull=preprocess(question)\n    return notnull.groupby('Country').sum().transpose()\n\n#  If you don't mind about styling, you may summerize the code section below in just one line!\n# _=multi_handler('Q13').plot(kind='barh',colors=palette)","617cf544":"def percent_handler(table):\n    for c in Country_Names:\n        table[c]=100*table[c]\/n_participants[c]\n    return table\n        \n\n\ndef bar_handler(table,is_percentage=0):\n    table['sum']=table.sum(axis=1)\n    table=table.reset_index().sort_values('sum',ascending=False)\n    n=len(table)\n\n    cats=list(table['top'])*3\n    hue=['Iran']*n+['Israel']*n+['Saudi Arabia']*n\n    vals=list(table['Iran'])+list(table['Israel'])+list(table['Saudi Arabia'])\n    \n    last_label='Percentage of Participants' if is_percentage else 'Number of Participants'\n    bardata=pd.DataFrame(zip(cats,hue,vals),columns=['Categories','hue',last_label])\n    bardata['Categories']=bardata['Categories'].apply(lambda x: x.split('(')[0])\n\n    return bardata\n\ndef bar_plotter(ax,data):\n    sns.barplot(ax=ax,data=data,y='Categories',x=data.columns[-1],hue='hue',palette=palette)\n    \ndef multi_plotter(question,title,rotation=False):\n    multi_output=multi_handler(question)\n    \n    _,ax=plt.subplots(1,2,figsize = (16, 5), dpi=300)\n    \n    data=bar_handler(multi_output)\n    bar_plotter(ax[0],data)\n    \n    data=bar_handler(percent_handler(multi_output),1)\n    bar_plotter(ax[1],data)\n    ax[0].set_ylabel('')\n    ax[1].set_ylabel('')\n    ax[0].legend().set_visible(False)\n    if rotation:\n        \n        ax[0].set_yticklabels(ax[0].get_yticklabels(),rotation=15)\n        ax[1].set_yticklabels(ax[1].get_yticklabels(),rotation=15)\n    \n    plt.suptitle(title)\n    #plt.subplots_adjust(wspace=wspace)\n    sns.despine(top=True, right=True, left=False, bottom=False)\n    \n    \ndef single_plotter(question,title):\n    data=bar_handler(multi_handler(question))\n    plt.figure(figsize=(14,8))\n    bar_plotter(None,data)\n    plt.title(title)\n    plt.ylabel('')\n    sns.despine(top=True, right=True, left=False, bottom=False)","66c7838d":"multi_plotter('Q13','Source of Learning')","6eb4de3f":"multi_plotter('Q18','Favorite Programming Language')","afff4aa8":"single_plotter('Q24','Favorite Machine Learning Algorithm')","8d08c211":"single_plotter('Q34','Favorite Database Product')","6a8358e1":"def num_of_chioce(question,title):\n\n    notnull= preprocess(question)\n    plt.figure(figsize=(16,4))\n    for i,country_name in enumerate(Country_Names):\n        plt.suptitle(title)\n        plt.subplot(1,3,i+1)\n        data=notnull[notnull['Country']==country_name].drop('Country',axis=1).sum(axis=1)\n        ax=sns.countplot(data,color=palette[i])    \n        ax.set_xlabel(country_name)\n        ax.set_ylabel('')\n        sns.despine(top=True, right=True, left=False, bottom=False)","49473d2d":"num_of_chioce('Q34','Number of DB, Selected by each Participants')","32bd37c4":"plt.figure(figsize=(15,6))\nfor i,country in enumerate([Iran,Israel,Saudi]):\n\n    time=country['Time from Start to Finish (seconds)'].apply(int)\n    time=time[time<3600]\n    sns.distplot(time,hist=False,color=colors[i][2])\n\n_=plt.legend(Country_Names)","32287dd9":"def venn_data_creator(question,cat1,cat2):\n\n    notnull=preprocess(question)\n    notnull['Both']=notnull[cat1]+notnull[cat2]\n    return notnull[['Country',cat1,cat2,'Both']]\n    \ndef venn_plotter(question,cat1,cat2):\n    plt.figure(figsize=(16,8))\n    venn_data=venn_data_creator(question,cat1,cat2)\n    for i,country_name in enumerate(Country_Names):\n        data=venn_data[venn_data['Country']==country_name][[cat1,cat2,'Both']].sum(axis=0)\n        values=tuple(data.values)\n        ax=plt.subplot(1,3,i+1)\n        ax.set_title(country_name)\n        venn2(subsets = values,set_labels=data.index,set_colors=['#ff6f00','#e417ff'])\n        venn2_circles(subsets = values, linewidth=1,color=palette[i])\n","d6f41347":"venn_plotter(question='Q34',cat1='MySQL',cat2='Microsoft SQL Server')","96ce08a2":"<br\/><br\/>\n\n## Multi-choice Questions\n----------------\n\nLet's also take a look at multiple-choice questions, including two general questions 'source of learning' and 'favorite programming languages' followed by two more technical questions 'favorite ML algorithm' and 'favorite database product'.\n\nNote that for general questions, I used two bar plots, one to compare the number of participants, and the other one to compare the percentage. I mainly did this because Saudi Arabia had almost half the participants as others, so I just normalized them to compare the decomposition. Also note that since the participants were allowed to choose multiple options, these percentages don't sum up to 100. For technical questions, I omitted percentages, to avoid the crowd. You may easily return it back by calling the function 'multi_plotter'. You may also use the last arg of this function to rotate the labels if there is some overlap between the plots.\n\nIn the end, I would like to mention that there is a clever way to preprocess this data as they were distributed in different columns. You may find the labels by grabbing the unique value in each column, and then just using not-null function on the whole table and then summing up each column grouped by each country. If you don't mind about styling, called build-in pandas plotting, gives you a fairly good visualization of the data... But to be more delightful, I used another trick to be able to use Seaborn's barplot.\n<br\/><br\/>\n### Source of Learning\n\nI have sorted the columns based on the sum of the participants in these countries. As you can see, Coursera is the most popular one, in particular, it dominates other sources in Israel. While in Saudi Arabia for example, Udemy and Udacity seem more popular.","0dc37375":"### Age\n\nI preferred to categorize ages into three different categories: under 30 , 30-39 , and 40+. As concentric plots can be confusing with more than two categories, I have separated them this time. I will do the same for 'Educational Degree', 'Number of employees', and 'Salaries'.\n\nAs you can see the plots depict that Iran has a younger data scientist generation. Almost *two-third* of them are under 30. This will be more surprising if you notice that this number is almost *one-sixth* for Israel and *one-third* for Saudi Arabia. Of course, Iran and Saudi Arabia have a younger population than Israel, but one reason for this significant difference might be the rising popularity of data science in these countries. Another reason as I mentioned before, could be **brain-drain**. The older generation might have left the country after reaching 30. It would be nice to have the origin of participants to examine this hypothesis.\n\n-------------\n*(You may uncomment one line of code to have the percentages also, I preferred to avoid the crowd on plots.)*\n\n","7ff8d24b":"Mmmm,\n\nIran and Israel have almost 100 participants, while Saudi Arabia has exactly 50. And we are lucky since the countries with less than 50 participants are merged into the group 'Others'. So, As the data is not balanced we sometimes normalize it to examine the percentage of members with some specific feature. But also raw numbers have information. Hence we plot both the number and percentages for some quantities.\n\n<br\/><br\/>\n\n### Gender\n\nLet's take a look at the gender decomposition. As you have probably seen already in other notebooks, women's participation rate is still way too less than men. Indeed something nearby 16%. For the sake of brevity, I omitted the other gender types and used concentric doughnut plots to compare the percentage.\n\nAs you can see in the graph below, Iran has the highest rate with almost twice than the world average. Saudi Arabia's surpass of the world wise average is meaningful. One reason of this popularity in these countries could be some limits for women to have some other kinds of jobs. Anyway, *cultural differences* propbably play an important role here.","a48acacc":"Another notable fact in the plot below is the peak of 'None' for Israel. It seems that they were more careful filling the form, while Iranians and Arabs were skipping the question. Inspired by this observation, let's do some fun plotting before finishing this notebook.\n\n<br><\/br>\n\n### Number of Selected Databases \n\nEach participant had a few options to choose, he even could skip the question without choosing any. So, let's see how many choices everyone made!\nAs you can see, almost 80% of Iranians just skipped the question without choosing 'None'. This number is 60% for Saudi Arabia and 50% for Israel.\n\n","81e7a60c":"### Time Spent\n\nNoting that Iranian had skipped question 34, let's plot the time each participant has spent on the survey. As there were some outliers, I only kept the ones who finished the survey in 1 hour. Plotting their distribution, you may see that the red curve has an earlier peak and a shorter tail, while the green one, has a longer tail with the latest peak.\n\nAs you can see most of the participants have been done in less than half an hour, and almost half of them took at most 10 min on the survey.","1d55f522":"### Educational degrees\n\nI did the same thing for educational degrees. I combined the other categories into Bachelors. Two notable facts about these graphs are the percentage of Master's in Iran and Bachelors in Saudi Arabia. It seems that it is *easier to find a job* in Saudi Arabia even with your Bachelor's diploma compared to Iran and Israel.","a0abedb4":"## Summary\n\nLet's be as brief as possible and sum up everything in a table\n\n|\ud83c\uddee\ud83c\uddf7|\ud83c\uddee\ud83c\uddf1|\ud83c\uddf8\ud83c\udde6|\n|:----:|:-----:|:-----:|\n| Lowest Salaries |Highest Salaries| |\n|Highest Masters|Highest PhDs|Highest Bachelors|\n| Youngest + Highest women rate| Oldest + Lowest women rate| |\n|Smallest Companies||Biggest Companies|\n||Coursera|Udemy\/Udacity|\n|Neural Networks|Random Forest\/Boosting||\n||Open Source DB|Closed Source DB|\n\n\n\n--------------------------\n\n## DIY\n\nAt the end, I would like to mention that I tried to encapsulate the functions for multichoice questions that you will be able to easily use them defined to draw the same plots for other columns. Here is a list of functions and questions.\n\n\n|Function|Arguments|\n|:--------:|:--------:|\n|multi_plotter|(Question,Title)|\n|single_plotter|(Question,Title)|\n|num_of_chioce|(Question,Title)|\n|venn_plotter|(Question,Category1,Category2)|\n\nAnd here are some question examples:\n\n|Label|Question|\n|:--------:|:--------:|\n|Q14|Favorite Primary Tool?|\n|Q16|Favorite IDE?|\n|Q17|Hosted Notebook Products?|\n|Q20|Data Visualization Libraries?|\n|Q27|NLP methods?|\n|Q28|Machine Learning Frameworks?|\n|Q29|Cloud Computing Platform?|\n|Q31|Big Data Product?|\n\n<br><\/br>\n\n*Hope you enjoyed the notebook. Feel free to share your comments and insights with me.*\n\n<b> Stay Curious! :)<\/b>\n","f75ed5b0":"### Venn Diagram\n\nVenn diagram is always fun when you are dealing with muliple choice questions. So, why not? :)\n\nEventhough, it is possible to continue the idea and for example define somekind of correlation between different products in each country, I just skipped it as it wasn't that much essential.","7c32ce2f":"### Programming Language\n\nPython heavily dominates other languages, as it might be expected. SQL, R, and MATLAB are in the next places, respectively. It worth noticing that R, MATLAB, C++, and especially Java are more popular in Iran and Saudi Arabia, compared to Israel. One reason might be the number of data scientists with other backgrounds, such as statistics, engineering, and software developing,  in these countries. \n\nAlso note that Bash is meaningfully less popular in Iran compared to Israel and Saudi Arabia, and it makes sense due to our previous observation about the size of companies that participants were working in.","a0f5d9ab":"### Relational Database\n\nAs you can see, softwares like Oracle, and Microsoft SQL Server are more popular in Saudi Arabia, while open-source softwares are more common in Israel. Also notice that Iran has no participant using Azure or AWS. Besides the fact that Iranian data scientists were working in smaller companies, another reason can be is that they cannot bank sanctions against them which makes it hard to use these systems.","ed9cbbff":"### Salaries\n\nThis section is, I believe, the most significant difference between these countries. Almost half of Israeli data scientist earns more than 100,000\\$ per year, the same is true for only 11 percent of Saudis and there is no even a single Iranian making more than 100,000\\$ per year! More surprisingly, more than half of Iranian, earn less than 1,000\\$ per year. Since most of them were young, it might be the case that they are passing internship... But something really important here is the recent currency devaluation in Iran. Indeed, converting to dollar, people's salary has been divided by 3 in a short period. But even multiplying back by 3, it might be similar to Saudi Arabia but still way too far from salaries in Israel.","659e97ba":"### Machine Learining\n\nAs you can see, simple algorithms like Linear\/Logistic Regression are the most popular. But again, take into account that this question was multiple-choice and probably most of the companies are using simple algorithms somewhere somehow.\n\nThe plot below also depicts a different taste of ML in these countries. Neural Networks, including CNN, DNN, and RNN are more popular in Iran, while boosting algorithms and random forests are more favorable in Israel.","9dcc0518":"### Companies Size\n\nLooking at the doughnut plots below, you can see that more than half of Iranian data scientists are working in small companies with less than 50 employees while for Saudi Arabia it is the other way around. More than half of them are working in companies with more than 1000 employees.\n\nBy the way, working with this quantity needs to be more careful about deriving insights. For example, by knowing the percentage of people working in big companies, it is not easy to have an estimation of the number of big companies. Because for each big company, you might have several data scientists participating in the same survey. It is not surprising as there is a heavy positive correlation between the participation of two colleagues. *(It somehow reminds me of **[Impossible Bet](https:\/\/www.youtube.com\/watch?v=eivGlBKlK6M)**; the expectation of the size of the cycle of a random person is more than the expectation of a random cycle since bigger cycles contain more persons!)*\n\nAnother thing that might worth noticing is that there might be some kind of standards\/thresholds for a company to hire a data scientist. It might be the case that only big companies are hiring data scientists in Saudi Arabia. This hypothesis resonates with the fact that the number of participants from Saudi Arabia was much less than Iran and Israel, but at the same time, it slightly contradicts our previous insight about the easiness of finding a job there.","b4749a33":"# [2019 Kaggle ML & DS Survey](https:\/\/www.kaggle.com\/c\/kaggle-survey-2019)\n## Iran & Israel & Saudi Arabia\n## \u0627\u06cc\u0631\u0627\u0646 \/ \u05d9\u05e9\u05e8\u05d0\u05dc \/ \u0627\u0644\u0639\u0631\u0628\u06cc\u0629 \u0627\u0644\u0633\u0639\u0648\u062f\u06cc\u0629\n\n| | | |\n|----:|:----------:|:--------|\n|![Iran](http:\/\/s7.picofile.com\/file\/8378252834\/iran_flag_3d_round_icon_256_1_.png)|![Israel](http:\/\/s7.picofile.com\/file\/8378252842\/israel_flag_3d_round_icon_256_1_.png)|![Saudi Arabi](http:\/\/s7.picofile.com\/file\/8378252868\/saudi_arabia_flag_3d_round_icon_256_1_.png)|\n\n\n<br\/><br\/>\n<br\/><br\/>\n\nIn recent years Iran, Israel, and Saudi Arabia (in alphabetical order!) have been somehow rivals. The politicians of each vertex of this triangle accuse others of terrorism and genocide. \n\n<br\/><br\/>\n\n\n![Good, Bad, Ugly](https:\/\/i.giphy.com\/media\/b3mSVYbDLvow8\/giphy.webp)\n\n<br\/><br\/>\n\n\nBut besides the political and military power, let's this time dig into the data acquired by this competition and compare them in the sense of data science. But bear in mind that we only have the country of residence of participants, not the country of origin... and of course, lots of them have been migrated to other countries. Also, take into account that residents of Iran (together with\u00a0Crimea, Cuba, Syria, North Korea, Sudan) are banned from the competition subject to U.S. export controls or sanctions. So, the data from it might be a bit underrated.\n\nSo, let's jump in.\n\n<br\/><br\/>\n<br\/><br\/>\n\n### Number of Participants\nFirst thing first, let's see how many participants we have from each country.\n\n"}}