{"cell_type":{"7e1b3250":"code","cc8fe67d":"code","b8da06dd":"code","ffd33068":"code","db58ca5e":"code","c31dce44":"code","ddde7d1b":"code","9467c468":"code","19d8547f":"code","49fe201a":"code","46325d16":"code","ea44c272":"code","eab3b93c":"code","954cf941":"markdown","b1d69f7a":"markdown","f640322b":"markdown","d773f98f":"markdown","84018360":"markdown","7173836f":"markdown","0664ebca":"markdown","e1c47daf":"markdown","2e9e76d3":"markdown"},"source":{"7e1b3250":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\nimport seaborn as sns; sns.set()\nimport csv\n\n","cc8fe67d":"path =pd.read_csv ('\/kaggle\/input\/condon-usage-dataset\/codon_usage.csv')\n","b8da06dd":"path.head(10)","ffd33068":"path.tail(10)","db58ca5e":"path.dropna(axis=0,how='any',subset=['CGG','AGA'],inplace=True)","c31dce44":"# Variable with the Longitude and Latitude\nX=path.loc[:,['SpeciesID','CGG','AGA']]\nX.head(10)","ddde7d1b":"X.tail(10)","9467c468":"K_clusters = range(1,10)\nkmeans = [KMeans(n_clusters=i) for i in K_clusters]\nY_axis = path[['CGG']]\nX_axis = path[['AGA']]\nscore = [kmeans[i].fit(Y_axis).score(Y_axis) for i in range(len(kmeans))]\n# Visualize\nplt.plot(K_clusters, score)\nplt.xlabel('Number of Clusters')\nplt.ylabel('Score')\nplt.title('Elbow Curve')\nplt.show()","19d8547f":"from sklearn.cluster import KMeans\n\nfrom yellowbrick.cluster import silhouette_visualizer\nfrom yellowbrick.cluster import SilhouetteVisualizer","49fe201a":"# Load a clustering dataset\n\n# Specify rows to cluster: under 40 y\/o and have either graduate or university education\nX = X[(X['CGG'] <= 0.02658)]\n\n# Use the quick method and immediately show the figure\nsilhouette_visualizer(KMeans(5, random_state=42), X, colors='yellowbrick')","46325d16":"kmeans = KMeans(n_clusters = 4, init ='k-means++')\nkmeans.fit(X[X.columns[1:3]]) # Compute k-means clustering.\nX['cluster_label'] = kmeans.fit_predict(X[X.columns[1:3]])\ncenters = kmeans.cluster_centers_ # Coordinates of cluster centers.\nlabels = kmeans.predict(X[X.columns[1:3]]) # Labels of each point\n","ea44c272":"X.plot.scatter(x = 'CGG', y = 'AGA', c=labels, s=50, cmap='viridis')\nplt.scatter(centers[:, 0], centers[:, 1], c='black', s=100, alpha=0.5)","eab3b93c":"X[0:60]","954cf941":"**7. Display the result**","b1d69f7a":"In the plot, we see that the graph levels off slowly after 4 clusters. \nThis implies that addition of more clusters will not help us that much.","f640322b":"**4. Create data with related variables\/features**","d773f98f":"**5. Check optimal number of clusters using Elbow Curve analysis**","84018360":"**3. Remove rows where the Longitude and\/or Latitude are null values (if any)**","7173836f":"**6. Clustering using K-means algorithm**\n\nIn this case, we will try to run 4 number of clusters","0664ebca":"**2. Import Dataset**","e1c47daf":"**1. Add Required Libraries**","2e9e76d3":"**5. Check optimal number of clusters using Silhouette analysis**"}}