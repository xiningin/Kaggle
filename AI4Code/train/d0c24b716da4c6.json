{"cell_type":{"f3b3eb7c":"code","7a232490":"code","46b358f9":"code","56967662":"code","4bfa5f75":"code","b1be645d":"code","0a9226e1":"code","0f1f045f":"code","0c26b5c5":"code","b81193a5":"code","e4e9efd3":"code","770806d5":"code","03678544":"code","c18f5e67":"code","1e9bdfde":"code","4cc4ddf5":"code","3af121f5":"code","33bdc9d9":"code","14773a7e":"code","507e9716":"code","df78ee07":"code","49f31880":"code","38c3b854":"code","ade9b97c":"code","e6b1ca00":"code","ccba39e5":"code","510d08c7":"code","84cde18e":"code","e82d9ceb":"markdown","1a75ec42":"markdown","b553e3bc":"markdown","5d5ffc6b":"markdown","a6ca56dd":"markdown","fd588775":"markdown","f517b05c":"markdown","91f4159f":"markdown","0e6f254a":"markdown","c6f4b09b":"markdown","91ba1fad":"markdown","25dc9afc":"markdown","192d988b":"markdown","0b41dd39":"markdown","be9eaa6f":"markdown","c1274d19":"markdown","a5a9252e":"markdown","6ccf9ae2":"markdown","827e1604":"markdown","e948676a":"markdown","c9142fbd":"markdown","e8a700e8":"markdown","bfec024e":"markdown","174fc1cb":"markdown","5bc76bad":"markdown","9e0897ce":"markdown"},"source":{"f3b3eb7c":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","7a232490":"# Lendo dataFrame credito.csv\ndf = pd.read_csv(\"..\/input\/analise-credito\/credito_analise.csv\", na_values = 'na')","46b358f9":"# Informa\u00e7\u00f5es sobre colunas e linhas\nprint(f\"Arquivo com {len(df.columns)} colunas e {len(df)} linhas\")","56967662":"# Leitura inicial de dados para comprees\u00e3o de suas colunas\ndf.head(5)","4bfa5f75":"# Definindo variaveis 0 e 1\nqtd_total, _ = df.shape\nqtd_adimplentes, _ = df[df['default'] == 0].shape\nqtd_inadimplentes, _ = df[df['default'] == 1].shape","b1be645d":"# Informa\u00e7\u00f5es iniciais sobre quantidade de adimplentes e inadimplentes\nprint(f\"A propor\u00e7\u00e3o clientes adimplentes \u00e9 de {round(100 * qtd_adimplentes \/ qtd_total, 2)}%\")\nprint(f\"A propor\u00e7\u00e3o clientes inadimplentes \u00e9 de {round(100 * qtd_inadimplentes \/ qtd_total, 2)}%\")","0a9226e1":"# Tipos de dados\ndf.dtypes","0f1f045f":"# valores faltantes \ndf.isna().any()","0c26b5c5":"# Colunas com atributos categoricos\ndf.select_dtypes('object').describe().transpose()","b81193a5":"# Colunas com atributos num\u00e9ricos\ndf.drop('id', axis=1).select_dtypes('number').describe().transpose()","e4e9efd3":"# Fun\u00e7\u00e3o para extrair dados faltantes\ndef stats_dados_faltantes(df: pd.DataFrame) -> None:\n\n  stats_dados_faltantes = []\n  for col in df.columns:\n    if df[col].isna().any():\n      qtd, _ = df[df[col].isna()].shape\n      total, _ = df.shape\n      dict_dados_faltantes = {col: {'quantidade': qtd, \"porcentagem\": round(100 * qtd\/total, 2)}}\n      stats_dados_faltantes.append(dict_dados_faltantes)\n\n  for stat in stats_dados_faltantes:\n    print(stat)","770806d5":"# Informa\u00e7\u00f5es sobre dados faltantes\nstats_dados_faltantes(df=df)","03678544":"# Informa\u00e7\u00f5es sobre dados faltantes com referencia em Adimplentes\nstats_dados_faltantes(df=df[df['default']==0])","c18f5e67":"# Informa\u00e7\u00f5es sobre dados faltantes com referencia em Inadimplentes\nstats_dados_faltantes(df=df[df['default'] == 1])","1e9bdfde":"# Tipo do dado\ndf[['limite_credito', 'valor_transacoes_12m']].dtypes","4cc4ddf5":"# Amostra das colunas\ndf[['limite_credito', 'valor_transacoes_12m']].head(n=5)","3af121f5":"# Fun\u00e7\u00e3o de corre\u00e7\u00e3o dados faltantes\nfn = lambda valor: float(valor.replace(\".\", \"\").replace(\",\", \".\"))","33bdc9d9":"# Aplicando as corre\u00e7\u00f5es nas colunas de interesse\ndf['valor_transacoes_12m'] = df['valor_transacoes_12m'].apply(fn)\ndf['limite_credito'] = df['limite_credito'].apply(fn)","14773a7e":"df.drop(['id'], axis=1).select_dtypes('number').describe().transpose()","507e9716":"# Remo\u00e7\u00e3o de dados faltantes\ndf.dropna(inplace=True)\nremovidos,_ = df.shape\nprint(f\"Remo\u00e7\u00e3o total de linhas: {qtd_total-removidos}.\")","df78ee07":"# Separa\u00e7\u00e3o das variaveis clientes adimplentes e inadimplentes\ndf_adimplente = df[df['default'] == 0]\ndf_inadimplente = df[df['default'] == 1]","49f31880":"# Amostra por tipo categ\u00f3rico\ndf.select_dtypes('object').head(n=5)","38c3b854":"# Visualiza\u00e7\u00e3o de graficos de escolaridade\nsns.set_style(\"whitegrid\")\n\ncoluna = 'escolaridade'\ntitulos = ['Escolaridade dos Clientes', 'Escolaridade dos Clientes Adimplentes', 'Escolaridade dos Clientes Inadimplentes']\n\neixo = 0\nmax_y = 0\nmax = df.select_dtypes('object').describe()[coluna]['freq'] * 1.1\nfigura, eixos = plt.subplots(1,3, figsize=(20, 5), sharex=True)\n\nfor dataframe in [df, df_adimplente, df_inadimplente]:\n\n  df_to_plot = dataframe[coluna].value_counts().to_frame()\n  df_to_plot.rename(columns={coluna: 'frequencia_absoluta'}, inplace=True)\n  df_to_plot[coluna] = df_to_plot.index\n  df_to_plot.sort_values(by=[coluna], inplace=True)\n  df_to_plot.sort_values(by=[coluna])\n\n  f = sns.pointplot(x=df_to_plot[coluna], y=df_to_plot['frequencia_absoluta'], ax=eixos[eixo])\n  f.set(title=titulos[eixo], xlabel=coluna.capitalize(), ylabel='Frequ\u00eancia Absoluta')\n  f.set_xticklabels(labels=f.get_xticklabels(), rotation=90)\n  _, max_y_f = f.get_ylim()\n  max_y = max_y_f if max_y_f > max_y else max_y\n  f.set(ylim=(0, max_y))\n  eixo += 1\n \n\nfigura.show()","ade9b97c":"# Visualiza\u00e7\u00e3o de graficos por salario anual\ncoluna = 'salario_anual'\ntitulos = ['Sal\u00e1rio Anual dos Clientes', 'Sal\u00e1rio Anual dos Clientes Adimplentes', 'Sal\u00e1rio Anual dos Clientes Inadimplentes']\n\neixo = 0\nmax_y = 0\nfigura, eixos = plt.subplots(1,3, figsize=(20, 5), sharex=True)\n\nfor dataframe in [df, df_adimplente, df_inadimplente]:\n\n  df_to_plot = dataframe[coluna].value_counts().to_frame()\n  df_to_plot.rename(columns={coluna: 'frequencia_absoluta'}, inplace=True)\n  df_to_plot[coluna] = df_to_plot.index\n  df_to_plot.reset_index(inplace=True, drop=True)\n  df_to_plot.sort_values(by=[coluna], inplace=True)\n\n  f = sns.pointplot(x=df_to_plot[coluna], y=df_to_plot['frequencia_absoluta'], ax=eixos[eixo])\n  f.set(title=titulos[eixo], xlabel=coluna.capitalize(), ylabel='Frequ\u00eancia Absoluta')\n  f.set_xticklabels(labels=f.get_xticklabels(), rotation=90)\n  _, max_y_f = f.get_ylim()\n  max_y = max_y_f if max_y_f > max_y else max_y\n  f.set(ylim=(0, max_y))\n  eixo += 1\n\nfigura.show()","e6b1ca00":"# Amostra por tipo num\u00e9rico\ndf.drop(['id', 'default'], axis=1).select_dtypes('number').head(n=5)","ccba39e5":"# Visualiza\u00e7\u00e3o de graficos por quantidade de transa\u00e7\u00f5es nos \u00faltimos 12 meses\ncoluna = 'qtd_transacoes_12m'\ntitulos = ['Qtd. de Transa\u00e7\u00f5es no \u00daltimo Ano', 'Qtd. de Transa\u00e7\u00f5es no \u00daltimo Ano de Adimplentes', 'Qtd. de Transa\u00e7\u00f5es no \u00daltimo Ano de Inadimplentes']\n\neixo = 0\nmax_y = 0\nfigura, eixos = plt.subplots(1,3, figsize=(20, 5), sharex=True)\n\nfor dataframe in [df, df_adimplente, df_inadimplente]:\n\n  f = sns.histplot(x=coluna, data=dataframe, stat='count', ax=eixos[eixo], multiple=\"dodge\", shrink=.8)\n  f.set(title=titulos[eixo], xlabel=coluna.capitalize(), ylabel='Frequ\u00eancia Absoluta')\n\n  _, max_y_f = f.get_ylim()\n  max_y = max_y_f if max_y_f > max_y else max_y\n  f.set(ylim=(0, max_y))\n\n  eixo += 1\n\nfigura.show()","510d08c7":"# Visualiza\u00e7\u00e3o de graficos por valor transa\u00e7\u00f5es nos \u00faltimos 12 meses\ncoluna = 'valor_transacoes_12m'\ntitulos = ['Valor das Transa\u00e7\u00f5es no \u00daltimo Ano', 'Valor das Transa\u00e7\u00f5es no \u00daltimo Ano de Adimplentes', 'Valor das Transa\u00e7\u00f5es no \u00daltimo Ano de Inadimplentes']\n\neixo = 0\nmax_y = 0\nfigura, eixos = plt.subplots(1,3, figsize=(20, 5), sharex=True)\n\nfor dataframe in [df, df_adimplente, df_inadimplente]:\n\n  f = sns.histplot(x=coluna, data=dataframe, stat='count', ax=eixos[eixo], multiple=\"dodge\", shrink=.8)\n  f.set(title=titulos[eixo], xlabel=coluna.capitalize(), ylabel='Frequ\u00eancia Absoluta')\n\n  _, max_y_f = f.get_ylim()\n  max_y = max_y_f if max_y_f > max_y else max_y\n  f.set(ylim=(0, max_y))\n\n  eixo += 1\n\nfigura.show()","84cde18e":"# Visualiza\u00e7\u00e3o de graficos por compara\u00e7\u00e3o valor_meses x qtd_meses\nf = sns.relplot(x='valor_transacoes_12m', y='qtd_transacoes_12m', data=df, hue='default')\n_ = f.set(\n    title='Rela\u00e7\u00e3o entre Valor e Quantidade de Transa\u00e7\u00f5es no \u00daltimo Ano', \n    xlabel='Valor das Transa\u00e7\u00f5es no \u00daltimo Ano', \n    ylabel='Quantidade das Transa\u00e7\u00f5es no \u00daltimo Ano'\n  )","e82d9ceb":"* **Escolaridade de nossos Clientes**","1a75ec42":"> #### **3.2 Fun\u00e7\u00e3o Corrigir Dados Faltantes**\nCom est\u00e1 fun\u00e7\u00e3o, iremos limpar todos os dados faltantes evitando confundir dados num\u00e9ricos em categoricos.","b553e3bc":"> #### **2.1 Explora\u00e7\u00e3o de Dados**\nPreparando dataFrame para primeiras an\u00e1lises.","5d5ffc6b":"Os gr\u00e1ficos nos mostram que, boa parte de nossos clientes Adimplentes, possuem os mais variados graus de escolaridade.\nNeste caso, n\u00e3o determinando o fator chave para a Inadimpl\u00eancia. \nMas o volume da base de dados, ainda sim \u00e9 mais relevante quando se tem mestrado.","a6ca56dd":"> # **Explora\u00e7\u00e3o de dados e poss\u00edveis causas para Inadimpl\u00eancia**\n\n\n> #### **1. Objetivo da An\u00e1lise**\nPara melhor performance da nossa institui\u00e7\u00e3o \"**EbaRodes Financeira**\", estamos estruturando uma an\u00e1lise explorat\u00f3ria com base em dados de clientes Inadimplentes e Adimplentes.\nNosso foco principal \u00e9, encontrar pontos de interesses em nossos clientes para, mapear poss\u00edveis gaps de comportamento, baseando em seu hist\u00f3rico, rotinas e dados pessoais.\nO m\u00e9todo que iremos utilizar \u00e9 o divisor \"**Default**\", onde nossa vari\u00e1vel *resposta* ter\u00e1 uma coluna recebendo como dado [0] para *adimplentes* e, [1] *inadimplentes*.","fd588775":"* Obs: Ambos os casos possuem dados faltantes.","f517b05c":"> #### **2. Importa\u00e7\u00e3o de Pacotes**\nM\u00f3dulos necess\u00e1rios para compor os dados, assim como gr\u00e1ficos para melhor visualiza\u00e7\u00e3o destes dados.","91f4159f":"> #### **2.3 Fun\u00e7\u00e3o Dados Faltantes**\nInciaremos uma an\u00e1lise com esta fun\u00e7\u00e3o para extrair algumas estat\u00edsticas de dados faltantes.","0e6f254a":"> #### **4.2 Visualiza\u00e7\u00e3o de N\u00fameros**\nCorrela\u00e7\u00e3o entre vari\u00e1vel resposta default e num\u00e9ricos.","c6f4b09b":"> #### **2.2 Estrutura de Dados**\nDefinindo a estrutura e organizando dados.","91ba1fad":"> #### **4.1 Visualiza\u00e7\u00e3o de Categorias**\nCorrela\u00e7\u00e3o entre vari\u00e1vel resposta default e categ\u00f3ricos.","25dc9afc":"Quando se trata de salario anual, a faixa de Adimplentes se mostrou superior em quantidade.\nNotamos que, n\u00e3o h\u00e1 fator resposta que, define quem ser\u00e1 Inadimplentes com base no salario anual. Todas as faixas se enquadram nesta resposta.","192d988b":"* Tr\u00eas colunas possuem dados faltantes em algumas linhas: escolaridade, estado_civil e salario_anual.  ","0b41dd39":"O valor das transa\u00e7\u00f5es do \u00faltimo ano, mant\u00eam os Adimplentes com maior indicativo de movimenta\u00e7\u00e3o.\nO grupo de Inadimplentes se mostra com menor movimenta\u00e7\u00e3o e baixo valores.","be9eaa6f":"> ### **5. Conclus\u00f5es e Insights**","c1274d19":"Embora n\u00e3o foi encontrado um fator determinante que, defina com mais precis\u00e3o quem apresenta mais indicativo para Inadimpl\u00eancia, alguns pontos podem ser levados em considera\u00e7\u00e3o:\n* Podemos oferecer mais servi\u00e7os a clientes com movimenta\u00e7\u00f5es acima de 90 e valores superiores a 12500.\n* Devido as festas de fim de ano e ferias de inicio de ano, o volume de movimenta\u00e7\u00f5es tendem a diminuir no grupo de Inadimplentes.\n* A uma faixa de clientes que movimentam 60 \u00e0 80 transa\u00e7\u00f5es ano e com ganhos entre 7000 e 10000 onde h\u00e1 os dois grupos concentrados.","a5a9252e":"* Agora iremos analisar se as colunas **valor_transacoes_12m** e **limite_credito** foram transformadas em atributos num\u00e9ricos e verificar algumas estatisticas.","6ccf9ae2":"> #### **3.1 Corrigindo schema**\nQuando realizamos a explora\u00e7\u00e3o dos dados, notamos que as colunas limite_credito e valor_transacoes_12m eram interpretadas como colunas categ\u00f3ricas (dtype = object).","827e1604":"Os Adimplentes representam um grande volume de transa\u00e7\u00f5es por ano.\nNotamos que o grupo de Inadimplentes tendem a fazer menos transa\u00e7\u00f5es. \nUm ponto de interesse nos gr\u00e1ficos, indicam que no per\u00edodo de fim de ano e inicio de ano, os Inadimplentes quase zeram suas opera\u00e7\u00f5es de movimenta\u00e7\u00e3o.","e948676a":"H\u00e1 um gap na faixa dos 12500k acima e 80 transa\u00e7\u00f5es ano. Esta parte n\u00e3o representou problemas com Inadimpl\u00eancia. Um fator a se pesquisar \u00e9 o grupo entre 60 e 80 transa\u00e7\u00f5es com ganhos entre 7k \u00e0 10k. A uma margem que concentram Adimplente e Inadimplentes nesta faixa.","c9142fbd":"* Muitos dados s\u00e3o do tipo object e precisaremos converter os mesmos a frente.","e8a700e8":"> #### **3.3 Removendo Dados Faltantes**\nAp\u00f3s todos os dados atribu\u00eddos corretamente a seus tipos, iremos remover os dados faltantes. ","bfec024e":"> ### **3. Transforma\u00e7\u00e3o e Limpeza dos dados**\nNeste momento j\u00e1 temos uma boa base do nosso conjunto de dados. Nosso objetivo a partir de agora \u00e9, corrigir o **schema** das colunas e remover os dados faltantes.","174fc1cb":"* Valor de Transa\u00e7\u00f5es nos \u00daltimos 12 Meses x Quantidade de Transa\u00e7\u00f5es nos \u00daltimos 12 Meses","5bc76bad":"* **Sal\u00e1rio anual de nossos Clientes**","9e0897ce":"> ### **4. An\u00e1lise e Visualiza\u00e7\u00e3o dos Dados**\nCom os dados prontos, criaremos visualiza\u00e7\u00f5es para nos ajudar a correlacionar vari\u00e1veis explicativas com a vari\u00e1vel resposta. Assim procuramos entender qual rela\u00e7\u00e3o que leva o cliente a inadimpl\u00eancia. Compararemos a base com todos clientes a base de adimplentes e inadimplentes.\n"}}