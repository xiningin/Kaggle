{"cell_type":{"fa70047c":"code","936d7c42":"code","de89cf6a":"code","beff2248":"code","14c73730":"code","bc7aad41":"code","985e9d9c":"code","d5d945b7":"code","ffb3e0a7":"code","e000231a":"code","66aa9ac1":"code","6ab6b8b9":"code","9ea08c67":"code","49db9f9d":"code","58b234f1":"code","b1c1ad2d":"code","779d95c5":"code","9dc9e379":"code","b4e1e2a5":"code","9f443194":"code","7e4c8911":"code","e20f4fc4":"code","00bc8566":"markdown"},"source":{"fa70047c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","936d7c42":"farbe = \"gr\u00fcn\"\nprint(farbe)","de89cf6a":"farbe = \"blau\"","beff2248":"print(farbe)","14c73730":"ramen = pd.read_csv(\"..\/input\/ramen-ratings\/ramen-ratings.csv\")\nramen.head()","bc7aad41":"ramen[\"Stars\"]","985e9d9c":"ramen[[\"Stars\"]]","d5d945b7":"ramen[ramen[\"Country\"]==\"Japan\"]","ffb3e0a7":"ramen[\"Style\"].unique()","e000231a":"ramen.info()","66aa9ac1":"import seaborn as sns\n\nsns.countplot(x=\"Style\", data=ramen)","6ab6b8b9":"ramen[\"Stars\"].value_counts()","9ea08c67":"ramen_drop_unrated = ramen.copy()\nramen_convert_unrated = ramen.copy()","49db9f9d":"# Drop Unrated Ramen\nramen_drop_unrated = ramen_drop_unrated[ramen_drop_unrated[\"Stars\"] != \"Unrated\"]\n# ramen_drop_unrated.drop(ramen_drop_unrated[ramen_drop_unrated[\"Stars\"] == \"Unrated\"].index, inplace=True)","58b234f1":"# Convert Unrated Ramen to 0\n# ramen_convert_unrated.loc[ramen_drop_unrated[\"Stars\"] == \"Unrated\", \"Stars\"] = 0\nramen_convert_unrated[\"rating\"] = ramen_convert_unrated[\"Stars\"].str.replace(\"Unrated\", \"0\")","b1c1ad2d":"ramen_drop_unrated[\"rating\"] = ramen_drop_unrated[\"Stars\"].astype(str).astype(float)\nramen_convert_unrated[\"rating\"] = ramen_convert_unrated[\"rating\"].astype(str).astype(float)","779d95c5":"ramen_drop_unrated[\"rating\"].max()","9dc9e379":"ramen_drop_unrated.groupby(\"Style\")[\"rating\"].mean()","b4e1e2a5":"ramen_convert_unrated.groupby(\"Style\")[\"rating\"].mean()","9f443194":"ramen_drop_unrated.groupby(\"Country\")[\"rating\"].mean().sort_values()","7e4c8911":"ramen_drop_unrated.groupby(\"Brand\")[\"rating\"].count().sort_values(ascending=False)[:25]","e20f4fc4":"ramen_drop_unrated.groupby(\"Brand\").agg({\"rating\": [\"mean\", \"count\"]}).sort_values([(\"rating\", \"mean\")], ascending=False)[:25]","00bc8566":"Die Farbe ist gr\u00fcn"}}