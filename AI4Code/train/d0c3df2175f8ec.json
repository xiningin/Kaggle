{"cell_type":{"18028b93":"code","35f77b71":"code","53436bd9":"code","4f4083b5":"code","499cb74a":"code","58f7a320":"code","499eafc6":"code","e76b34a8":"code","d0b9262d":"code","ae74a92c":"code","bfc90777":"code","d538e1bd":"code","7d2aa670":"code","056c48e5":"code","61ddf5dc":"code","d1669c04":"code","ae254647":"code","f83f65f7":"code","3dd8ca3c":"code","5af7c283":"code","1d8ce73e":"code","cbf03b79":"code","9c764cef":"code","f6b08353":"code","1e83cfa8":"code","ad49d49f":"code","9c1fa5ff":"code","fc3d5dc4":"code","32f1fc85":"code","1eda336f":"code","99f4c91d":"code","ef49c268":"code","22aeca31":"code","821621db":"code","d654c356":"code","b2a70b5d":"code","105b8093":"code","9794d342":"markdown","6750f40b":"markdown","541092ca":"markdown","2f189d74":"markdown","630a6e81":"markdown","a458a15e":"markdown","0ab1d3ef":"markdown","56a269f8":"markdown","4415ee5c":"markdown","ade55093":"markdown","45743bdd":"markdown"},"source":{"18028b93":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","35f77b71":"# ! pip install scikit-learn  -U\n\n# execute and restart","53436bd9":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n\nsns.set_style('darkgrid')\n\nfrom sklearn.preprocessing import OneHotEncoder,MinMaxScaler,StandardScaler\nfrom sklearn.model_selection import train_test_split,GridSearchCV\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import LogisticRegression,LogisticRegressionCV,SGDClassifier\nfrom sklearn.ensemble import RandomForestClassifier\n\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\n\nfrom sklearn.metrics import classification_report\n\nfrom pandas_profiling import ProfileReport","4f4083b5":"df = pd.read_csv('..\/input\/adult-census-income\/adult.csv',na_values=['?'])","499cb74a":"df","58f7a320":"df.head()","499eafc6":"df.columns","e76b34a8":"df.info()","d0b9262d":"df.describe(include='all')","ae74a92c":"plt.figure(figsize=(10,10))\nsns.heatmap(df.isna())","bfc90777":"df.isna().sum()","d538e1bd":"df=df.dropna()","7d2aa670":"plt.figure(figsize=(10,10))\nsns.heatmap(df.isna())","056c48e5":"def report(df):\n    design_report = ProfileReport(df)\n    return design_report.to_widgets()\n\nreport(df)","61ddf5dc":"X=df.drop(['income'],axis=1)\ny=df[['income']]","d1669c04":"x_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.15,random_state=42)\nx_train,x_val,y_train,y_val=train_test_split(x_train,y_train,test_size=0.15,random_state=42)","ae254647":"(x_train.shape,x_val.shape,x_test.shape)","f83f65f7":"df.info()","3dd8ca3c":"for i in df.columns[df.dtypes=='object']:\n    print(df.value_counts(i))\n    print('-'*100)\ndf[['workclass', 'education', 'marital.status', 'occupation',\n       'relationship', 'race', 'sex', 'native.country']].nunique(axis=0).sum()","5af7c283":"df.columns[df.dtypes=='object']","1d8ce73e":"oh=ColumnTransformer([\n    ('encoder',OneHotEncoder(drop='first',sparse=False),\n     ['workclass', 'education', 'marital.status', 'occupation',\n       'relationship', 'race', 'sex', 'native.country'])\n],remainder='passthrough')\n\npipeline=Pipeline([\n    ('encoder',oh),\n    ('scaler',StandardScaler())\n])","cbf03b79":"x_train.iloc[0,:]","9c764cef":"x_train=pipeline.fit_transform(x_train)\nx_test=pipeline.transform(x_test)\nx_val=pipeline.transform(x_val)","f6b08353":"(x_train.shape,x_val.shape,x_test.shape)","1e83cfa8":"pipeline[0].transformers_[0][1].categories_","ad49d49f":"x_train[0]","9c1fa5ff":"o1=OneHotEncoder(sparse=False)\ny_train=o1.fit_transform(y_train)\ny_val=o1.transform(y_val)\ny_test=o1.transform(y_test)","fc3d5dc4":"o1.categories_","32f1fc85":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Dropout,BatchNormalization,Input\nfrom tensorflow.keras.callbacks import EarlyStopping\n\ne=EarlyStopping(patience=5,restore_best_weights=True)\nnum_layers_mult=2\n\nn=num_layers_mult","1eda336f":"model=Sequential()\n\nmodel.add(Input(shape=(x_train.shape[1],)))\n\nmodel.add(Dense(x_train.shape[1],activation='relu'))#,input_shape=(x_train.shape[1],)))\nmodel.add(Dropout(0.25))\nmodel.add(Dense(n*x_train.shape[1],activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(n*x_train.shape[1],activation='relu'))\n\nmodel.add(Dense(2,activation='softmax'))\n\n\nmodel.compile(loss='categorical_crossentropy',metrics=['accuracy'],optimizer='adam')","99f4c91d":"model.summary()","ef49c268":"results=model.fit(x_train,y_train,validation_data=(x_val,y_val),callbacks=[e],epochs=100)","22aeca31":"model.evaluate(x_test,y_test)","821621db":"pred1=np.argmax(model.predict(x_test), axis=-1)\npred1","d654c356":"print(classification_report(y_test[:,1],pred1))","b2a70b5d":"d1=pd.DataFrame(results.history)\n\nd1.iloc[:,[1,3]].plot(figsize=(10,10))","105b8093":"plt.figure(figsize=(15,15))\nd1.iloc[:,[0,2]].plot(figsize=(10,10))","9794d342":"# Package Import","6750f40b":"# Null Removal","541092ca":"# Data preprocessing","2f189d74":"# Test analysis","630a6e81":"# Model eval","a458a15e":"# Train Test Split","0ab1d3ef":"# Data Input","56a269f8":"## Pandas Profiling","4415ee5c":"# Model building","ade55093":"# Null Check","45743bdd":"# Data Analysis"}}