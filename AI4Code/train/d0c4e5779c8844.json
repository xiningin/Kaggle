{"cell_type":{"480ab2cd":"code","1cff5ef4":"code","f0f73c6f":"code","3c0076ef":"code","49fc2b50":"code","e88f11dd":"code","01d63e1b":"code","8afbd58e":"code","793121c0":"code","4445e73f":"code","45fd3780":"code","4a93e33e":"code","da516b37":"code","847fe5f6":"code","b62517c8":"code","971398e8":"code","2bd7468f":"markdown","560ac12c":"markdown"},"source":{"480ab2cd":"import pandas as pd\nimport numpy as np\nimport seaborn as sns","1cff5ef4":"df1 = pd.read_csv(\"..\/input\/elo-blending\/BlendingRLSR.csv\")\ndf1.head()","f0f73c6f":"df2 = pd.read_csv(\"..\/input\/elo-blending\/combining_submission (1).csv\")\ndf2.head()\n\ndf3 = pd.read_csv(\"..\/input\/simple-lightgbm-without-blending\/submission.csv\")\ndf3.head()\n\ndf2['target'] = df2['target'] * 0.35 + df1['target'] * 0.65\ndf2['target'] = df2['target'] * 0.57 + df3['target'] * 0.43\ndf2.to_csv(\"blend.csv\",index = False)","3c0076ef":"import numpy as np # NUMPY\nimport pandas as p # PANDAS\n\n# DATA VIZUALIZATION LIBRARIES\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\n# METRICS TO MEASURE RMSE\nfrom math import sqrt\nfrom sklearn import metrics","49fc2b50":"#ALL PUBLIC SOLUTION RMSE < 0.2269 (WITHOUT REPETITIONS)\ndf_base0 = p.read_csv('..\/input\/elo-blending\/3.695.csv',names=[\"card_id\",\"target0\"], skiprows=[0],header=None)\ndf_base1 = p.read_csv('..\/input\/elo-blending\/3.696.csv',names=[\"card_id\",\"target1\"], skiprows=[0],header=None)\ndf_base2 = p.read_csv('..\/input\/elo-blending\/3.6999.csv',names=[\"card_id\",\"targe2\"], skiprows=[0],header=None)\ndf_base3 = p.read_csv('..\/input\/elo-blending\/3.69991.csv',names=[\"card_id\",\"target3\"], skiprows=[0],header=None)\ndf_base4 = p.read_csv('..\/input\/elo-blending\/3.699992.csv',names=[\"card_id\",\"target4\"], skiprows=[0],header=None)\ndf_base5 = p.read_csv('..\/input\/elo-blending\/3.70.csv',names=[\"card_id\",\"target5\"], skiprows=[0],header=None)\ndf_base6 = p.read_csv('..\/input\/elo-blending\/3.701.csv',names=[\"card_id\",\"target6\"], skiprows=[0],header=None)\ndf_base7 = p.read_csv('..\/input\/elo-blending\/3.702.csv',names=[\"card_id\",\"target7\"], skiprows=[0],header=None)\ndf_base8 = p.read_csv('..\/input\/elo-blending\/3.703.csv',names=[\"card_id\",\"target8\"], skiprows=[0],header=None)\ndf_base9 = p.read_csv('..\/input\/elo-blending\/3.704.csv',names=[\"card_id\",\"target9\"], skiprows=[0],header=None)\ndf_base10 = p.read_csv('..\/input\/elo-blending\/Blending.csv',names=[\"card_id\",\"target10\"], skiprows=[0],header=None)\ndf_base11 = p.read_csv('..\/input\/elo-blending\/BlendingRLS.csv',names=[\"card_id\",\"target11\"], skiprows=[0],header=None)\ndf_base12 = p.read_csv('..\/input\/elo-blending\/combining_submission (1).csv',names=[\"card_id\",\"target12\"], skiprows=[0],header=None)\ndf_base13 = p.read_csv('..\/input\/elo-blending\/BlendingRLSR.csv',names=[\"card_id\",\"target13\"], skiprows=[0],header=None)\ndf_base14 = p.read_csv('..\/input\/simple-lightgbm-without-blending\/submission.csv',names=[\"card_id\",\"target14\"], skiprows=[0],header=None)","e88f11dd":"df_base = p.merge(df_base12,df_base0,how='inner',on='card_id')\ndf_base = p.merge(df_base,df_base1,how='inner',on='card_id')\ndf_base = p.merge(df_base,df_base2,how='inner',on='card_id')\ndf_base = p.merge(df_base,df_base3,how='inner',on='card_id')\ndf_base = p.merge(df_base,df_base4,how='inner',on='card_id')\ndf_base = p.merge(df_base,df_base5,how='inner',on='card_id')\ndf_base = p.merge(df_base,df_base6,how='inner',on='card_id')\ndf_base = p.merge(df_base,df_base7,how='inner',on='card_id')\ndf_base = p.merge(df_base,df_base8,how='inner',on='card_id')\ndf_base = p.merge(df_base,df_base9,how='inner',on='card_id')\ndf_base = p.merge(df_base,df_base10,how='inner',on='card_id')\ndf_base = p.merge(df_base,df_base11,how='inner',on='card_id')\ndf_base = p.merge(df_base,df_base12,how='inner',on='card_id')\ndf_base = p.merge(df_base,df_base13,how='inner',on='card_id')\ndf_base = p.merge(df_base,df_base14,how='inner',on='card_id')","01d63e1b":"#CORRELATION MATRIX (Pearson Correlation to measure how similar are 2 solutions)\nplt.figure(figsize=(16,12))\nsns.heatmap(df_base.iloc[:,1:].corr(),annot=True,fmt=\".2f\")","8afbd58e":"# ALTERNATIVE WAY - RMSE MATRIX (RMSE to measure how similar are 2 solutions)\nM = np.zeros([df_base.iloc[:,1:].shape[1],df_base.iloc[:,1:].shape[1]])\nfor i in np.arange(M.shape[1]):\n    for j in np.arange(M.shape[1]):\n        M[i,j] = sqrt(metrics.mean_squared_error(df_base.iloc[:,i+1], df_base.iloc[:,j+1]))","793121c0":"#SOLUTION = MEAN OF COLUMNS\ndf_base['target'] = df_base.iloc[:,1:].mean(axis=1)\ndf_base[['card_id','target']].to_csv(\"Bestoutput.csv\",index=False)","4445e73f":"df_base14 = p.read_csv('..\/input\/simple-lightgbm-without-blending\/submission.csv',names=[\"card_id\",\"target14\"], skiprows=[0],header=None)\n# df_base5 = p.read_csv('..\/input\/elo-blending\/3.70.csv',names=[\"card_id\",\"target5\"], skiprows=[0],header=None)\ndf_base6 = p.read_csv('..\/input\/elo-blending\/3.701.csv',names=[\"card_id\",\"target6\"], skiprows=[0],header=None)\ndf_base7 = p.read_csv('..\/input\/elo-blending\/3.702.csv',names=[\"card_id\",\"target7\"], skiprows=[0],header=None)\n# df_base8 = p.read_csv('..\/input\/elo-blending\/3.703.csv',names=[\"card_id\",\"target8\"], skiprows=[0],header=None)\n\ndf_base = p.merge(df_base12,df_base6,how='inner',on='card_id')\n# df_base = p.merge(df_base,df_base5,how='inner',on='card_id')\ndf_base = p.merge(df_base,df_base7,how='inner',on='card_id')\n# df_base = p.merge(df_base,df_base7,how='inner',on='card_id')\n# df_base = p.merge(df_base,df_base8,how='inner',on='card_id')\n#CORRELATION MATRIX (Pearson Correlation to measure how similar are 2 solutions)\nplt.figure(figsize=(16,12))\nsns.heatmap(df_base.iloc[:,1:].corr(),annot=True,fmt=\".2f\")","45fd3780":"# ALTERNATIVE WAY - RMSE MATRIX (RMSE to measure how similar are 2 solutions)\nM = np.zeros([df_base.iloc[:,1:].shape[1],df_base.iloc[:,1:].shape[1]])\nfor i in np.arange(M.shape[1]):\n    for j in np.arange(M.shape[1]):\n        M[i,j] = sqrt(metrics.mean_squared_error(df_base.iloc[:,i+1], df_base.iloc[:,j+1]))","4a93e33e":"#SOLUTION = MEAN OF COLUMNS\ndf_base['target'] = df_base.iloc[:,1:].mean(axis=1)\ndf_base[['card_id','target']].to_csv(\"blend2.csv\",index=False)","da516b37":"df_base['target'] = df2['target']* 0.3 + df_base['target'] * 0.7\n\nplt.figure(figsize=(8,8))\nplt.subplot(1, 2, 1)\nsns.boxplot(df2['target'],orient='v')\n\nplt.subplot(1, 2, 2)\nsns.boxplot(df_base['target'], orient='v')\nplt.show()\n# df_base[['card_id','target']].to_csv(\"blend3.csv\",index=False)","847fe5f6":"from scipy.stats import truncnorm","b62517c8":"df_base['target'] = truncnorm.mean(df2['target'],df_base['target'])\ndf_base[['card_id','target']].to_csv(\"blend3.csv\",index=False)","971398e8":"display(df_base['target'].head())\nplt.figure(figsize=(15,8))\nsns.boxplot(df_base['target'], orient='h')\nplt.show()","2bd7468f":"#### Biggest Blending","560ac12c":"# We have take less correlation columns to blend data"}}