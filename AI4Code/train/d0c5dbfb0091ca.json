{"cell_type":{"3a5e0ed3":"code","30460146":"code","12589535":"code","f38a296f":"code","8db10392":"code","c81b8ca5":"code","6c732c5a":"code","49d0a8a5":"code","d40685e6":"code","43650bf3":"code","a022ff14":"code","2f30a085":"code","1f143e0a":"code","a015994f":"code","101f27c6":"code","0e6ee9f3":"code","5e10fa80":"code","d829ca7c":"code","edabc3df":"code","8e8be44b":"code","d1d42f67":"code","cce2b2ef":"code","e877af19":"code","afaf9277":"code","aab84508":"code","ee5bafbc":"code","1b334e92":"code","f6e64c81":"code","38d95464":"code","d173354b":"code","a58fd7b8":"code","7ab22df6":"code","b272fcdc":"code","fae2a071":"code","bb5a5020":"code","76335f92":"code","084eef9b":"code","7f3e34a9":"code","35a65d32":"code","14705257":"code","77d5fae3":"code","95a8f2cf":"code","99ddd39d":"code","2ce40a53":"code","3a6532fb":"code","b149d78f":"code","ab56290b":"code","f1a1d251":"code","ece052c5":"code","dc6687ca":"code","bdd94248":"code","4c1ef1a2":"code","351a14bd":"code","0c9551b8":"code","b52377e4":"code","11c13857":"code","33c64e0b":"code","03d3b444":"code","03d82c7a":"code","268bf265":"code","486127b8":"code","dd874b31":"code","0d076f23":"code","bc0c6674":"markdown","d06d65bf":"markdown"},"source":{"3a5e0ed3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","30460146":"## \u7f3a\u5c11\u8868\u5934\u7684CSV\nimport numpy as np\nimport pandas as pd\ndf1=pd.read_csv(\"..\/input\/csv-ex-1\/CSV_EX_1.csv\")\ndf1\n","12589535":"df2=pd.read_csv(\"..\/input\/csv-ex-2\/CSV_EX_2.csv\")\ndf2","f38a296f":"## \u5c06\u8868\u5934\u5b9a\u4e49\u4e3aNone\ndf2=pd.read_csv(\"..\/input\/csv-ex-2\/CSV_EX_2.csv\",header=None)\ndf2","8db10392":"df2=pd.read_csv(\"..\/input\/csv-ex-2\/CSV_EX_2.csv\",header=None,names=[\"Bedroom\",\"sq.ft\",\"LOcality\",\"prices\"])","c81b8ca5":"df2","6c732c5a":" ## \u8bfb\u53d6\u4e0d\u4ee5\u9017\u53f7\u5206\u9694\u7684CSV\ndf3=pd.read_csv(\"..\/input\/csv-ex-3\/CSV_EX_3.csv\")\ndf3","49d0a8a5":"## \u52a0\u5206\u5272\u53f7\ndf3=pd.read_csv(\"..\/input\/csv-ex-3\/CSV_EX_3.csv\",sep=\";\")\ndf3","d40685e6":"###\u91cd\u7f6ecsv \u8868\u5934\n## \u5bf9\u6709\u8868\u5934\u7684\u6dfb\u52a0\u81ea\u5df1\u7684\u8868\u5934\ndf4=pd.read_csv(\"..\/input\/csv-ex-1\/CSV_EX_1.csv\",names=[\"A\",\"B\",\"C\",\"D\"])## \u5e76\u6ca1\u6709\u53bb\u6389\u539f\u6765\u7684\ndf4","43650bf3":"df4=pd.read_csv(\"..\/input\/csv-ex-1\/CSV_EX_1.csv\",header=0,names=[\"A\",\"B\",\"C\",\"D\"])\ndf4","a022ff14":"## \u8bfb\u53d6\u8df3\u8fc7\u8868\u5934\ndf5=pd.read_csv(\"..\/input\/skiprows\/CSV_EX_skiprows.csv\")\ndf5","2f30a085":"## \u8df3\u8fc7\u4e24\u884c\ndf5=pd.read_csv(\"..\/input\/skiprows\/CSV_EX_skiprows.csv\",skiprows=2)\ndf5","1f143e0a":"## \u8df3\u8fc7\u9875\u811a\ndf6=pd.read_csv(\"..\/input\/skiprows\/CSV_EX_skiprows.csv\",skiprows=2,skipfooter=1,engine=\"python\")\ndf6","a015994f":"## \u8bfb\u53d6\u524d\u51e0\u884c\ndf7=pd.read_csv(\"..\/input\/csv-ex-1\/CSV_EX_1.csv\",nrows=3)\ndf7","101f27c6":"## \u8bfb\u53d6\u4e00\u4e2a\u5927\u6570\u636e\u7684\u5b50\u96c6\nlist_of_dataframe=[]\nrows_in_a_chunk=10\nnum_chunks=5\ndf_dummy=pd.read_csv(\"..\/input\/housing\/Boston_housing.csv\",nrows=2)\ncolnames=df_dummy.columns\n\nfor i in range(0,num_chunks*rows_in_a_chunk,rows_in_a_chunk):\n    df=pd.read_csv(\"..\/input\/housing\/Boston_housing.csv\",header=0,skiprows=i,nrows=rows_in_a_chunk,names=colnames)\n    list_of_dataframe.append(df)","0e6ee9f3":"## \u8bbe\u7f6e\u7a7a\u767d\u884c\ndf9=pd.read_csv(\"..\/input\/blankline\/CSV_EX_blankline.csv\",skip_blank_lines=False)\ndf9","5e10fa80":"## \u4ece\u975e\u6587\u672c\u5143\u4e2d\u8bfb\u53d6\uff0cURL\u4e2d\u8bfb\u53d6HTML\u8868\nurl=\"http:\/\/quotes.money.163.com\/trade\/lsjysj_300750.html?year=2021&season=4\"\nlist_of_df=pd.read_html(url)\ndf10=pd.DataFrame(list_of_df)\ndf10.head(10)","d829ca7c":"##\u4eceJSon \u8bfb\u53d6\ndf16=pd.read_json(\"..\/input\/movies\/movies.json\")\ndf16.head()","edabc3df":"cast_of_avengers=df16[(df16[\"title\"]==\"The Avengers\")&(df16[\"year\"]==2012)][\"cast\"]\nprint(list(cast_of_avengers))","8e8be44b":"##\u8bfb\u53d6Stata\ndf17=pd.read_stata(\"..\/input\/wu-data\/wu-data.dta\")\ndf17","d1d42f67":"## PDF \n!pip install urllib3\n!pip install pytest\n!piip install flake8\n!pip install distro\n!pip install pathlib","cce2b2ef":"!pip install tabula-py\nfrom tabula import wrapper\ndf18_1=tabula.read_pdf(\"..\/input\/wu-data\/wu-data.dta\",pages=[1],pandas_options={\"header\":None})\ndf18_1","e877af19":"## beautifulSoup4\u548c\u7f51\u9875\nfrom bs4 import BeautifulSoup\nwith open(\"..\/input\/test-html\/test.html\",\"r\") as fd:\n    soup=BeautifulSoup(fd)\n    print(type(soup))","afaf9277":"print(soup.prettify())","aab84508":"## \nwith open(\"..\/input\/test-html\/test.html\",\"r\") as fd:\n    soup=BeautifulSoup(fd)\n    print(soup.p)","ee5bafbc":"## p\u6807\u7b7e\nwith open(\"..\/input\/test-html\/test.html\",\"r\") as fd:\n    soup=BeautifulSoup(fd)\n    all_ps=soup.find_all(\"p\")\n    print(\"Total number of <p>---{}\".format(len(all_ps)))","1b334e92":"## \u83b7\u53d6\u6807\u7b7e\u4e0b\u7684\u5185\u5bb9\nwith open(\"..\/input\/test-html\/test.html\",\"r\") as fd:\n    soup=BeautifulSoup(fd)\n    table=soup.table\n    print(soup.contents)","f6e64c81":"## \u904d\u5386\u8282\u70b9\nwith open(\"..\/input\/test-html\/test.html\",\"r\") as fd:\n    soup=BeautifulSoup(fd)\n    table=soup.table\n    for child in table.children:\n        print(child)\n        print(\"....\")","38d95464":"with open(\"..\/input\/test-html\/test.html\",\"r\") as fd:\n    soup=BeautifulSoup(fd)\n    table=soup.table\n    \n    children=table.children\n    des=table.descendants\n    print(len(list(children)),len(list(des)))","d173354b":"import pandas as pd\nfd=open(\"..\/input\/test-html\/test.html\",\"r\")\nsoup=BeautifulSoup(fd)\ndata=soup.findAll(\"tr\")\nprint(\"data is a {} and {} iterms long\".format(type(data),len(data)))","a58fd7b8":"data_without_header=data[1:]\nheaders=data[0]\nheaders","7ab22df6":"col_header=[th.getText() for th in headers.findAll(\"th\")]\ncol_header","b272fcdc":"df_data=[[td.getText()  for td in tr.findAll(\"td\")] for tr in data_without_header]\ndf_data","fae2a071":"df=pd.DataFrame(df_data,columns=col_header)\ndf.head()","bb5a5020":"##bs4 \u6808\u6587\u6863\u4e2d\u7684URL\nd=open(\"..\/input\/test-html\/test.html\",\"r\")\nsoup=BeautifulSoup(fd)\nlis=soup.find(\"ul\").findAll(\"li\")\nstack=[]\nfor li in lis:\n    a=li.find(\"a\",href=True)","76335f92":"##\u751f\u6210\u5668\u8868\u8fbe\u5f0f\nodd_numbrs=[x for x in range(100000) if x %2 !=0]","084eef9b":"from sys import getsizeof\ngetsizeof(odd_numbrs)","7f3e34a9":"odd_numbrs=(x for x in range(100000) if x %2 !=0)","35a65d32":"for i,number in enumerate(odd_numbrs):\n    print(number)\n    if i>10:\n        break","14705257":"words=[\"Hello\\n\",\"My name\",\"is\\n\",\"Bob\",\"How are you\",\"doing\\n\"]\nmodified_words=(word.strip().lower() for word in words)","77d5fae3":"final_list_of_word=[word for word in modified_words]\nfinal_list_of_word","95a8f2cf":"## \u63d0\u53d6\u5355\u4e2a\u5355\u8bcd\u7684\u5217\u8868\nwords=[\"hello\\n\",\"My name\",\"is\\n\",\"bob\",\"how are you\"]\nmodified_words=(w.strip().lower() for word in words for w in word.split(\"\"))\nfinal_list_of_word=[word for word in modified_words]\nfinal_list_of_word","99ddd39d":"modified_words3=[]\nwords=[\"hello\\n\",\"My name\",\"is\\n\",\"bob\",\"how are you\"]\n\nfor word in words:\n    for w in word.split(\"\"):\n        modified_words3.append(w.strip().lower())\nmodified_words3","2ce40a53":"marbles=[\"red\",\"blue\",\"green\"]\ncounts=[1,5,3]\nmarble_with_count=((m,c) for m in marbles for c in counts)","3a6532fb":"marble_with_counts2=[]\nfor m in marbles:\n    for c in counts:\n        marble_with_counts2.append((m,c))\nmarble_with_counts2","b149d78f":"## zip \u51fd\u6570\ncountries=[\"India\",\"Usa\",\"France\",\"UK\"]\ncapitals=[\"Delhi\",\"Washington\",\"Paris\",\"London\"]\ncountries_capitals=[t for t in zip(countries,capitals)]\ncountries_capitals","ab56290b":"countries_capital_dict=dict(zip(countries,capitals))\ncountries_capital_dict","f1a1d251":"## \u5904\u7406\u6742\u4e71\u7684\u6570\u636e\n## \u5904\u7406\u4e0d\u7b49\u957f\u5217\u8868\ncountries=[\"India\",\"USA\",\"France\",\"UK\",\"Brasil\",\"Japan\"]\ncapitals=[\"Deli\",\"Washington\",\"Paris\",\"London\"]","ece052c5":"from itertools import zip_longest\ncountries_and_capital_dict2=dict(zip_longest(countries,capitals))\ncountries_and_capital_dict2","dc6687ca":"## \u6570\u636e\u683c\u5f0f\u5316 %\nfrom csv import DictReader\nraw_data=[]\nwith open(\"..\/input\/combinded-data\/combinded_data.csv\",\"rt\") as fd:\n    data_rows=DictReader(fd)\n    for data in data_rows:\n        raw_data.append(dict(data))\nraw_data","bdd94248":"## \u751f\u6210\u62a5\u544a,%s \u5b57\u7b26\u4e32\nfor data in raw_data:\n    report_str=\"\"\"%s is %s years old and is %s meter tall weighting about %s kg\\n\n    Has a history of family illness:%s.\\n\n    Presently suffering from a heart disease:%s\n    \"\"\" %(data[\"Name\"],data[\"Age\"],data[\"Height\"],data[\"Weight\"],data[\"Disease_history\"],data[\"Heart_problem\"])\n    print(report_str)","4c1ef1a2":"## format\nfor data in raw_data:\n    report_str=\"\"\"{} is {} years old and is {} metre tall weighting about {} kg.\\n\n    Has a history of family illness: {}\\n\n    \"\"\".format(data[\"Name\"],data[\"Age\"],data[\"Height\"],data[\"Weight\"],data[\"Disease_history\"],data[\"Heart_problem\"])\n    print(report_str)","351a14bd":"for data in raw_data:\n    report_str=\"\"\"{Name} is {Age} years old and is {Height} metre tall weighting about {Weight} kg\\n\n    Has a history of family illness:{Disease_history} \\n\n    Presently suffering from a heart disease:{Heart_problem}\n    \"\"\".format(**data)\n    print(report_str)","0c9551b8":"### {}\u8868\u793a\u6570\u636e \u5341\u8fdb\u5236\u53d8\u4e3a\u4e8c\u8fdb\u5236\noriginal_number=42\nprint(\"The binary representation of 42 is\\n{0:b}\".format(original_number))","b52377e4":"## \u5c45\u4e2d\u8f93\u51fa\nprint(\"{:=^42}\".format(\"I am at the center\"))","11c13857":"from datetime import datetime\nprint(\"The present datetime is\\n{:%Y-%m-%d %H:%M:%S}\".format(datetime.utcnow()))","33c64e0b":"## \u8bc6\u522b\u3001\u6e05\u6d17\u5f02\u5e38\u503c\nfrom math import cos,pi\nys=[cos(i*(pi\/4)) for i in range(50)]\nimport matplotlib.pyplot as plt\nplt.plot(ys)","03d3b444":"ys[4]=ys[4]+5\nys[20]=ys[20]+20\nplt.plot(ys)","03d82c7a":"plt.boxplot(ys)","268bf265":"## z-score(\u6807\u51c6\u5206\u6570) \u4e3a\u6bcf\u4e2a\u6570\u636e\u63d0\u4f9b\u4e00\u4e2a\u503c\uff0c\u8bf4\u660e\u8be5\u6570\u636e\u96c6\u7684\u6807\u51c6\u5dee\u504f\u5dee\u548c\u5e73\u5747\u503c\u7684\u5206\u5e03\u60c5\u51b5\uff0c\nfrom scipy import stats\ncos_arr_zero=stats.zscore(ys)\ncos_arr_zero","486127b8":"## \u4f7f\u7528z-score \u53bb\u9664\u5f02\u5e38\u503c\ndf_original=pd.DataFrame(ys)\ncos_arr_outliers=df_original[(cos_arr_zero<1)]\nprint(cos_arr_outliers.shape)\nprint(df_original.shape)","dd874b31":"plt.plot(cos_arr_outliers)","0d076f23":"## \u5b57\u7b26\u4e32 \u7684\u6a21\u7cca\u5339\u914d","bc0c6674":"## \u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u6e90","d06d65bf":"## \u6570\u636e\u6574\u7406\u9690\u85cf\u7684\u79d8\u5bc6"}}