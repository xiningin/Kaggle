{"cell_type":{"0b90d973":"code","a3d81702":"code","e61f2902":"code","c27d95b0":"code","f42a9fbf":"code","ab8844d3":"code","d4d75903":"code","093cd386":"code","b25d65e7":"code","edcbf794":"code","a6b30d2c":"code","dda689ed":"code","67fc9677":"code","c8b60432":"code","49c12475":"code","4fc14bd0":"code","508717a7":"code","dcf9a31d":"code","78247b6c":"code","966ebe57":"code","aeb75730":"code","858a5900":"code","e2c4321f":"code","86dfe472":"code","ab637be3":"code","f58af445":"code","46d7944d":"markdown","1c6adc71":"markdown","4d9a92f9":"markdown","7e4a8a06":"markdown","37b8e5cc":"markdown","64478460":"markdown","486e9d94":"markdown","4966eed4":"markdown","37f99aa3":"markdown","a652814b":"markdown","5d6fceb9":"markdown","ea8dfc5b":"markdown","19155695":"markdown","b36e1d17":"markdown","f004440e":"markdown","276e75ad":"markdown","ad410fc5":"markdown","7f04663b":"markdown","1560f25f":"markdown","29461971":"markdown","9240069b":"markdown","1617a6c2":"markdown","23b4cfcf":"markdown","7973112a":"markdown","0af42ff2":"markdown","10381a98":"markdown","7d3ed49b":"markdown","099f196f":"markdown"},"source":{"0b90d973":"#importing the required libraries\nimport pandas as pd\nimport numpy as np\nimport datetime\n\n#viz Libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight') # setting style for the plots\n\n#warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator","a3d81702":"df = pd.read_csv('\/kaggle\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv',index_col='id')","e61f2902":"df.shape # shape of data","c27d95b0":"df.head() # first 5 rows of data - 5 by default","f42a9fbf":"df.info()","ab8844d3":"df.describe()","d4d75903":"df.isna().sum()","093cd386":"#dropping the rows with price = 0 or availability_365 = 0\nindexNames = df[ (df['price'] == 0) | (df['availability_365'] == 0) ].index\ndf.drop(indexNames , inplace=True)","b25d65e7":"#dropping the duplicates\ndf = df.drop_duplicates()","edcbf794":"#dropping the columns which may not add extra value to the analysis\ndf = df.drop(['host_id','latitude','longitude'],axis=1)","a6b30d2c":"df.dtypes","dda689ed":"#converting \"last_review\" to \"date_time\" data type\ndf['last_review'] = pd.to_datetime(df['last_review'])\n\n#converting categorical variables into \"categorical\" data type\ncat_var = ['neighbourhood_group','neighbourhood','room_type']\ndf[cat_var] = df[cat_var].astype('category')\n\ndf.info()","67fc9677":"#popular neighborhood groups\nax = sns.countplot(x=\"neighbourhood_group\", data=df)\n#df['neighbourhood_group'].value_counts().plot(kind=\"bar\")\nplt.title('Popular neighborhood groups')\nplt.xlabel('Neighborhood Group')\nplt.ylabel('Count')\nplt.show()","c8b60432":"ax = sns.countplot(y=\"neighbourhood\", hue=\"neighbourhood_group\", data=df,\n              order=df['neighbourhood'].value_counts().iloc[:5].index)\nplt.title('Popular Neighborhoods')\nplt.ylabel('Neighborhood')\nplt.xlabel('Count')\nplt.show()","49c12475":"ax = sns.countplot(x=\"room_type\", data=df)\nplt.title('Room Type distribution')\nplt.xlabel('Room Type')\nplt.ylabel('Frequency')\nplt.show()","4fc14bd0":"plt.figure(figsize=(10,10))\nax = sns.countplot(x=\"room_type\", data=df,hue=\"neighbourhood_group\")","508717a7":"df['price'].describe()","dcf9a31d":"sns.boxplot(x='neighbourhood_group',y='price',data = df)\nplt.title(\"Price distribution among the neighborhood groups\")\nplt.show()","78247b6c":"df3 = df[df['price'] <= 200]\ndf3.price.plot(kind='hist')\nplt.xlabel(\"Price\")\nplt.title(\"Price distribution for chosen listings(Price <= 200)\")\nplt.show()","966ebe57":"sns.boxplot(x='neighbourhood_group',y='price',data = df3)\nplt.show()","aeb75730":"sns.boxplot(x='room_type',y='price',data = df3)\nplt.show()","858a5900":"df['number_of_reviews'].plot(kind='hist')\nplt.xlabel(\"Price\")\nplt.show()","e2c4321f":"plt.figure(figsize=(9, 6))\nplt.subplot(1,2,1)\ndf3.groupby(['room_type']).count()['number_of_reviews'].plot(kind='bar',alpha = 0.6,color = 'orange')\nplt.title('Room Type Vs Number of Reviews',fontsize=15)\n\nplt.subplot(1,2,2)\ndf3.groupby(['neighbourhood_group']).count()['number_of_reviews'].plot(kind='bar',color='green',alpha=0.5)\nplt.title('Neighborhood Vs Number of Reviews',fontsize=15)\nplt.tight_layout()\nplt.show()","86dfe472":"plt.figure(figsize=(10, 6))\nplt.subplot(1,2,1)\ndf3.groupby(['room_type']).count()['minimum_nights'].plot(kind='bar',alpha = 0.6,color = 'orange')\nplt.title('Room Type Vs Minimum Nights',fontsize=15)\n\nplt.subplot(1,2,2)\ndf3.groupby(['neighbourhood_group']).count()['minimum_nights'].plot(kind='bar',alpha = 0.6,color = 'green')\nplt.title('Neighborhood Group Vs Minimum Nights',fontsize=15)\nplt.tight_layout()\nplt.show()","ab637be3":"text = \" \".join(str(each) for each in df.name)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=100, background_color=\"white\").generate(text)\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","f58af445":"columns =['price','minimum_nights','number_of_reviews','reviews_per_month','availability_365']\n#sns.heatmap(df[columns])\ncorr = df[columns].corr()\ncorr.style.background_gradient(cmap='coolwarm')","46d7944d":"Most of the listings are between the price range of 25 to 110. ","1c6adc71":"From the descriptive stats above, we can see that 75% of the prices are below \"189\".\nWe cannot declare that the values above $189 are outliers because pricing depends on the amenities offered and the locations they are present.\n\nAs majority of the data is below the price range of $189, a new data set is created and its price distribution is observed below.","4d9a92f9":"Clearly, Manhattan and Brooklyn are the costliest. Manhattan listings have an average price range of 120 dollars, while Brooklyn has 90 dollars. All the other three neighborhoods have almost similar average price range of 70-75 dollars.","7e4a8a06":"# Checking for inconsistent data types","37b8e5cc":"# Cleaning the data - Lets make it better","64478460":"**Distribution of reviews among available room types and neighborhood groups**","486e9d94":"**Price range distribution among the neighborhoods**","4966eed4":"**** Which are the most popular neighborhood groups among the listings?****","37f99aa3":"**Zero price** -- Free Rooms?<br>\n**Zero Availability** -- Looks like those listings are not available any more and the data is not updated.","a652814b":"** Which are the most popular neighborhoods among the listings?**","5d6fceb9":"**Price range distribution among the room types**","ea8dfc5b":"# Dropping the duplicate data if any","19155695":"# **About the data set**\nThis public dataset is part of Airbnb and it includes information to find out more about hosts, geographical availability, neighborhood and reviews. Since 2008, guests and hosts have used Airbnb to expand on traveling possibilities and present more unique, personalized way of experiencing the world. This dataset describes the listing activity and metrics in NYC, NY for 2019.\n\n**The inspiration for my analysis are the questions below**\n* Which are the famous neighborhoods and neighborhood groups among the listings?\n* What is the price range of the listings?\n* What are the mst common words used in the description?\n* Which room types are usually busy ? Is the trend different in different neighborhoods?\n* How are the reviews distributed?\n\n\n","b36e1d17":"# Importing the required libraries","f004440e":"# Reading the data - Bringing it in","276e75ad":"**Exploring the \"price\" **","ad410fc5":"**Room type distribution in the neighborhood groups**","7f04663b":"# Exploring the data - Lets know it better","1560f25f":"**Correlation among numeric variables**","29461971":"**Manhattan** and **Brooklyn** clearly win the race for popular neighborhoods. Manhattan is the **smallest** of all boroughs in size but the most densly populated and Brooklyn is the city's most populated borough which collectively makes them the most popular neighborhood groups. ","9240069b":"Notice that converting the categorical variables into \"category\" data type significantly reduced the memory from 6.0+ MB to 2.5+ MB","1617a6c2":"**Distribution of minimum nights among available room types and neighborhood groups**","23b4cfcf":"# **Insights developed :**\n* **Manhattan** is the costlies and popular neighborhood groups among the listings followed by **Brooklyn**.\n* The top 5 popular neighborhood groups are from Manhattan and Brooklyn.\n* Entire Homes are the highly occupied room types followed by Private and Shared rooms.\n* Manhattan has high number of Entire Home and Shared room listings. Brooklyn has high private room bookings.\n* 75% of the listing's prices are below **189 dollars**.\n* **Manhattan** listings have an average price range of **120 dollars**, while **Brooklyn** has **90 dollars**. All the other three neighborhoods have almost similar average price range of **70-75 dollars**.\n* Most number of reviews are collected from **Private** room type and the neighborhood of **Brooklyn**.\n* There is no strong correlation among the numeric variables.\n","7973112a":"** Which are the most occupied room types among the listings?**","0af42ff2":"# Checking for missing data","10381a98":"**Commonly used words in the description**","7d3ed49b":"Missing data is one of the most common problem in data cleaning\/exploring. There is no standard method of replacing the missing values and the method of imputating them highly depends on the type of problem and the data we are dealing with.\n\nSometimes, counting the missing data using \"*isna()*\" function can be misleading because missing data does not always mean NaN values. For example, lets consider the variables 'price' and 'availability_365'. The values for these variables cannot be zeroes practically. But we have such values in this  data.","099f196f":"**Distribution of Reviews**"}}