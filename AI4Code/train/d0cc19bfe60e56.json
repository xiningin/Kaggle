{"cell_type":{"1f9a4871":"code","9ad62d52":"code","4ad06aa6":"code","a0646f69":"code","575b48ea":"code","73c7707a":"code","e6013f60":"code","5d0dda13":"code","f63f348d":"code","6ad6d417":"code","3f9c05e4":"code","fd2a394b":"code","6a4d0a8f":"code","c77f56b5":"code","432b6973":"code","28ccdf10":"code","34a97c0b":"markdown","68c7386a":"markdown","b920876a":"markdown","a9d39cbe":"markdown","45f02de3":"markdown","db83ae3c":"markdown"},"source":{"1f9a4871":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(style=\"white\")\n\nfrom sklearn.preprocessing import LabelEncoder","9ad62d52":"df = pd.read_csv('..\/input\/gun-deaths-in-the-united-states-20122014\/guns-data.csv', index_col='Unnamed: 0')\ndf","4ad06aa6":"df.isna().apply(pd.value_counts)  ","a0646f69":"print(df.sex.value_counts())\n\nsns.barplot(x=df.sex.value_counts().keys(),\n            y=df.sex.value_counts().values)\nplt.show()","575b48ea":"def visualize_age(target_name):\n    def plot_age():\n        plt.plot([i for i in range(df.age.min(), df.age.max() + 1)],\n             [val_count[i] if i in val_count else 0 for i in range(df.age.min(), df.age.max() + 1)],\n            linewidth = 3)\n\n    df.age = df.age.fillna(0)\n    df.age = df.age.astype(int)\n    legend = ['Total']\n    val_count = df.age.value_counts()\n    plot_age()\n    for place in df[target_name].value_counts().keys():\n        legend += [place]\n        val_count = df[df[target_name] == place].age.value_counts()\n        plot_age()\n\n    plt.legend(legend, bbox_to_anchor=(1., 0., 0., 1))\n    plt.minorticks_on()\n    plt.grid(which='major',\n            color = 'k', \n            linewidth = 1)\n    plt.grid(which='minor', \n            color = 'k', \n            linestyle = ':')\n    plt.xlabel('age')\n    plt.ylabel('amount')\n    plt.show()\n\nvisualize_age('place')\nvisualize_age('race')\nvisualize_age('sex')\nvisualize_age('education')","73c7707a":"sns.boxenplot(x='age', data=df)","e6013f60":"for race in np.unique(df.race.value_counts().keys()):\n    plt.title(race)\n    ax = sns.barplot(x=df[df.race == race].education.value_counts().keys(),\n                     y=df[df.race == race].education.value_counts().values)\n    ax.set_xticklabels(ax.get_xticklabels(), rotation=45)\n    plt.show()","5d0dda13":"print(df.intent.value_counts())\n\nax = sns.barplot(x=df['intent'].value_counts().keys(),\n                 y=df['intent'].value_counts().values)\nax.set_xticklabels(ax.get_xticklabels(), rotation=45)\nplt.show()","f63f348d":"sex = 'M'\nsns.set_color_codes(\"pastel\")\nsns.barplot(x=df[df.sex == sex].intent.value_counts().keys(),\n            y=df[df.sex == sex].intent.value_counts().values, color=\"b\")\nsex = 'F'\nsns.set_color_codes(\"muted\")\nsns.barplot(x=df[df.sex == sex].intent.value_counts().keys(),\n            y=df[df.sex == sex].intent.value_counts().values, color=\"b\")","6ad6d417":"for police in np.unique(df.police.value_counts().keys()):\n    plt.title(f'Police: {police}')\n    ax = sns.barplot(x=df[df.police == police].intent.value_counts().keys(),\n                     y=df[df.police == police].intent.value_counts().values)\n    ax.set_xticklabels(ax.get_xticklabels(), rotation=45)\n    plt.show()","3f9c05e4":"for race in np.unique(df.race.value_counts().keys()):\n    plt.title(race)\n    ax = sns.barplot(x=df[df.race == race].intent.value_counts().keys(),\n                     y=df[df.race == race].intent.value_counts().values)\n    ax.set_xticklabels(ax.get_xticklabels(), rotation=45)\n    plt.show()","fd2a394b":"sns.boxplot(x='intent', y='age', data=df)","6a4d0a8f":"print(df.year.value_counts())\n\nax = sns.barplot(x=df.year.value_counts().keys(),\n            y=df.year.value_counts().values)\nax.set_xticklabels(ax.get_xticklabels(), rotation=45)\nplt.show()","c77f56b5":"for type_ in np.unique(df.intent.value_counts().keys()):\n    plt.title(type_)\n    ax = sns.barplot(x=df[df.intent == type_].year.value_counts().keys(),\n                     y=df[df.intent == type_].year.value_counts().values)\n    ax.set_xticklabels(ax.get_xticklabels(), rotation=45)\n    plt.show()","432b6973":"legend = []\nfor type_ in np.unique(df.intent.value_counts().keys()):\n    legend += [type_]\n    plt.plot([month for month in range(1, 12+1)],\n             [df[df.intent == type_].month.value_counts()[i] for i in range(1, 12+1)], linewidth=3)\nplt.title('Total deaths in each month')\nplt.minorticks_on()\nplt.grid(which='major',\n        color = 'k', \n        linewidth = 1)\nplt.grid(which='minor', \n        color = 'k', \n        linestyle = ':')\nplt.legend(legend, bbox_to_anchor=(1., 0., 0., 1))\nplt.show()","28ccdf10":"df = df.fillna(0)\ndf.isna().apply(pd.value_counts)","34a97c0b":"## Age visualization","68c7386a":"## Relationship between the types of death and other parameters","b920876a":"## Education\/race","a9d39cbe":"## Sex visualization","45f02de3":"## Drop NaN values","db83ae3c":"## Deaths in each year and month"}}