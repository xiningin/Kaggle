{"cell_type":{"fb7ff7e4":"code","5e829e09":"code","39adef97":"code","0c9fcb90":"code","edfbced3":"code","02b1e959":"code","0fa85c1e":"code","9dd20617":"code","ad9dd795":"code","40ac08a9":"code","6c7aff62":"code","4998ebdd":"code","65f1643d":"code","511147b4":"code","e70dc22f":"code","942f0a13":"code","372db48e":"code","ed0a758c":"code","b74d6334":"code","09e5b522":"code","85567fd2":"code","49b81472":"code","9fc6c03f":"code","43f5704b":"code","3599cba1":"code","38c175d6":"code","8db63a49":"code","0b987374":"code","ee7b99a6":"code","50f0ff0a":"code","2e2ddffa":"code","b6ffb6ef":"code","3d8c6b0a":"code","3474f85f":"code","970d0b00":"code","ad631752":"code","141fe028":"code","11c4c311":"code","4a296843":"code","20701f43":"code","8400cb01":"code","308f5ac1":"code","29dfad8c":"code","02ae2fad":"markdown","017646a5":"markdown","d99f9112":"markdown","34831c9b":"markdown","bb9d96a9":"markdown","f5939b50":"markdown","2c7ac89a":"markdown","523262d8":"markdown","8899588d":"markdown","7f5ad3a6":"markdown","b3d0022c":"markdown","1462e5bb":"markdown","6f07fb46":"markdown","88b04d3c":"markdown","089a387f":"markdown","3603d4ee":"markdown","62bff231":"markdown","ef321ecf":"markdown","f3d0a3a2":"markdown","e6a15758":"markdown","cf05a103":"markdown","af729e18":"markdown","6530043c":"markdown","69eef10d":"markdown","d0970015":"markdown","e30bc6d3":"markdown","8e035717":"markdown","5a2d21c3":"markdown","1ee59f57":"markdown","1f7c5773":"markdown","1479514a":"markdown","10f3e896":"markdown","849df01e":"markdown","01f23cfc":"markdown","15f3ea75":"markdown","b3cd7bd0":"markdown","654fc4a4":"markdown","a47d9f53":"markdown"},"source":{"fb7ff7e4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5e829e09":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nfrom scipy.stats import norm, boxcox\nfrom scipy import stats\nfrom imblearn.over_sampling import SMOTE\n","39adef97":"df = pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')\ndf.head()","0c9fcb90":"print('Shape of the dataset')\nprint(df.shape)\n","edfbced3":"print('Checking for the null values')\nprint(df.isnull().sum())","02b1e959":"df.info()","0fa85c1e":"df.describe()","9dd20617":"sns.countplot(x ='quality', data = df)","ad9dd795":"from collections import Counter\nCounter(df['quality'])","40ac08a9":"sns.boxplot(x=\"quality\",y=\"alcohol\", data=df)","6c7aff62":"plot = plt.figure(figsize=(15,7))\nsns.boxplot(x=\"quality\",y=\"residual sugar\", data=df)","4998ebdd":"sns.boxplot(x=\"quality\",y=\"volatile acidity\", data=df)","65f1643d":"plot = plt.figure(figsize=(15,7))\nsns.boxplot(x=\"quality\",y=\"pH\", data=df)","511147b4":"plot = plt.figure(figsize=(15,7))\nsns.barplot(x=\"quality\",y=\"pH\", data=df)","e70dc22f":"correlation = df.corr()\nplt.figure(figsize=(14,14))\nsns.heatmap(correlation, cbar=True, square=True, fmt = '.2f', annot = True, annot_kws={'size':15}, cmap = 'coolwarm')","942f0a13":"cols = ['fixed acidity', 'volatile acidity', 'citric acid','residual sugar', 'chlorides', 'free sulfur dioxide', 'density', 'pH', 'sulphates', 'alcohol']\n\nQ1 = df[cols].quantile(0.25)\nQ3 = df[cols].quantile(0.75)\nIQR = Q3 - Q1\n\ndf = df[~((df[cols] < (Q1 - 1.5 * IQR)) |(df[cols] > (Q3 + 1.5 * IQR))).any(axis=1)]","372db48e":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"fixed acidity\"], fit=norm, color=\"orange\")\nplt.title(\"fixed acidity Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"fixed acidity\"], plot = plt)\nplt.show()","ed0a758c":"df[\"fixed acidity\"], lam = boxcox(df[\"fixed acidity\"])","b74d6334":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"fixed acidity\"], fit=norm, color=\"orange\")\nplt.title(\"fixed acidity Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"fixed acidity\"], plot = plt)\nplt.show()","09e5b522":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"residual sugar\"], fit=norm, color=\"orange\")\nplt.title(\"residual sugar Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"residual sugar\"], plot = plt)\nplt.show()","85567fd2":"df[\"residual sugar\"], lam_fixed_acidity = boxcox(df[\"residual sugar\"])","49b81472":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"residual sugar\"], fit=norm, color=\"orange\")\nplt.title(\"residual sugar Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"residual sugar\"], plot = plt)\nplt.show()","9fc6c03f":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"free sulfur dioxide\"], fit=norm, color=\"orange\")\nplt.title(\"free sulfur dioxide Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"free sulfur dioxide\"], plot = plt)\nplt.show()","43f5704b":"#Fixing skewness using boxcox\ndf[\"free sulfur dioxide\"], lam_fixed_acidity = boxcox(df[\"free sulfur dioxide\"])","3599cba1":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"free sulfur dioxide\"], fit=norm, color=\"orange\")\nplt.title(\"free sulfur dioxide Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"free sulfur dioxide\"], plot = plt)\nplt.show()","38c175d6":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"total sulfur dioxide\"], fit=norm, color=\"orange\")\nplt.title(\"total sulfur dioxide Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"total sulfur dioxide\"], plot = plt)\nplt.show()","8db63a49":"#Fixing skewness using boxcox\ndf[\"total sulfur dioxide\"], lam_fixed_acidity = boxcox(df[\"total sulfur dioxide\"])","0b987374":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"total sulfur dioxide\"], fit=norm, color=\"orange\")\nplt.title(\"total sulfur dioxide Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"total sulfur dioxide\"], plot = plt)\nplt.show()","ee7b99a6":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"alcohol\"], fit=norm, color=\"orange\")\nplt.title(\"alcohol Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"alcohol\"], plot = plt)\nplt.show()","50f0ff0a":"#Fixing skewness using boxcox\ndf[\"alcohol\"], lam_fixed_acidity = boxcox(df[\"alcohol\"])","2e2ddffa":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(df[\"alcohol\"], fit=norm, color=\"orange\")\nplt.title(\"alcohol Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(df[\"alcohol\"], plot = plt)\nplt.show()","b6ffb6ef":"X = df.drop('quality',axis=1)","3d8c6b0a":"# dividing the target variable (quality) into 3 class.\n# class1: bad (qulaity 3,4), Class2: Avergae (qulaity 5,6,7), Class3: Good (qulaity 8)\nreviews = []\nfor i in df['quality']:\n    if i >= 3 and i <= 4:\n        reviews.append('1')\n    elif i >= 5 and i <= 7:\n        reviews.append('2')\n    elif i == 8:\n        reviews.append('3')\ndf['Reviews'] = reviews","3474f85f":"Counter(df['Reviews'])","970d0b00":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX = sc.fit_transform(X)\n","ad631752":"from sklearn.decomposition import PCA\npca = PCA()\nX_pca = pca.fit_transform(X)\n","141fe028":"#plot the graph to find the principal components\nplt.figure(figsize=(10,10))\nplt.plot(np.cumsum(pca.explained_variance_ratio_), 'ro-')\nplt.grid()","11c4c311":"#AS per the graph, we can see that 8 principal components attribute for 90% of variation in the data. \n#we shall pick the first 8 components for our prediction.\npca_new = PCA(n_components=8)\nX_new = pca_new.fit_transform(X)\n","4a296843":"X_train, X_test, Y_train, Y_test = train_test_split(X_new, reviews, test_size = 0.25)","20701f43":"sm = SMOTE(random_state=14)\nX_train, Y_train = sm.fit_resample(X_train, Y_train)","8400cb01":"import collections\nprint(\"change is value of count after using smote:\", collections.Counter(Y_train))","308f5ac1":"model = RandomForestClassifier()\nmodel.fit(X_train, Y_train)","29dfad8c":"X_test_prediction = model.predict(X_test)\ntest_data_accuracy = accuracy_score(X_test_prediction, Y_test)\nprint('Accuracy : ', test_data_accuracy)","02ae2fad":"# **SMOTE**\n\n**fixing the imbalance dataset**\n\nwe need to fix imbaalnce dataset becuase imbalamce dataset gives biased result","017646a5":"# Training the data","d99f9112":"**Fixing skewness using boxcox**","34831c9b":"**Loading the red wine quality dataset**","bb9d96a9":"3. **Checking the data types of each feautes and nows of rows and null count**","f5939b50":"2. **Checking for null values**","2c7ac89a":"**Random forest classifier**","523262d8":"**4. total sulfur dioxide**","8899588d":"# **PCA for dimension reduction**\n\npca removes features which has less contribiuton in ","7f5ad3a6":"we can see that as we are increasing the alcholo the quality of wine is improving.","b3d0022c":"# Multiclassification","1462e5bb":"**Quality count**","6f07fb46":"**5. alcohol**","88b04d3c":"# **Treating outliers**","089a387f":"**Residual sugar VS Quality**","3603d4ee":"we can see that there is no correlation between the residual sugar and quality.\nSo, we will drop this column as it has not contribution in determining the qulaity.","62bff231":"# **Standarisation**","ef321ecf":"# EDA","f3d0a3a2":"# Heatmap for correlation between all features","e6a15758":"**Importing Required Libraries**","cf05a103":"I am going to use IQR method remove the outlier. The value which is above the Q3+ 1.5IQR and below Q1-1.5IQR are considers as Outliers.\nSo we are removeing all those value from selected columns.","af729e18":"**volatile acidity VS Quality**","6530043c":"**Fixing skewness using boxcox**","69eef10d":"**1. fixed acidity**","d0970015":"**Spliting the data in train and test**","e30bc6d3":"**Instead of checking one by one we can use correlation matrix and heat map to analyse the correlation between each feature at once**","8e035717":"4. **Cheking the no. of rows, mean value of each rows, std and five number summary**","5a2d21c3":"# **Preprocessing the data**","1ee59f57":"**3. free sulfur dioxide**","1f7c5773":"# **Checking for skewness**","1479514a":"**PH VS Quality**","10f3e896":"**Why we need standarisation?**\nData standardization is about making sure that data is internally consistent; that is, each data type has the same content and format.\n\nFor example, suppose you and your friend went to different universities. One day, you both got your midterm grades for your Physics 101 classes. Your professor sticks to the normal grading scale (out of 100), so you got a grade of 84; the test has a mean of 77 and a standard deviation of 6. Your friend\u2019s professor, though, uses his own grading scale, so she got a grade of 452. Her test has a scale of 750, mean of 400, and standard deviation of 100.\n\nBoth of you scored above average, but who did better? While the main data points might not be immediately comparable, there is a way to standardize and compare the data points. Converting them to percentages shows that you came out ahead, with an 84% compared to your friend\u2019s 60%.","849df01e":"Skewd diustribution gives bias result on training. So it need to be fixed before training it.\n\nWe will first check the data for each features is following normal distribution or not using distplot.\n\nif it is not following then we will use the boxcox to treat the skewness.\nboxcox transofrm the skewed data into normal distribution.","01f23cfc":"**Checking the accuracy**","15f3ea75":"1. **Checking No. of rows and columns**","b3cd7bd0":"**Alcohol VS Quality**","654fc4a4":"# **Exploring the dataset**","a47d9f53":"**2. residual sugar**"}}