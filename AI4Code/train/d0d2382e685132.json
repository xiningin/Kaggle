{"cell_type":{"a36f2cdd":"code","bcc23260":"code","86a3102a":"code","9382cb5c":"code","93a37908":"code","710294a4":"code","7db8d296":"code","023a620e":"code","ce918395":"code","a707b945":"code","8d55c52a":"code","e876a2f6":"code","5ed12046":"code","a2817753":"code","1625f78e":"code","178f9e2d":"code","5145ad6d":"code","cfd22277":"code","11d9846a":"code","42f085ac":"code","e6aa0543":"code","809aa3d8":"code","d4a7a1a2":"code","63adedd6":"code","13302393":"code","37482af7":"markdown","369bcb03":"markdown","5f03d8be":"markdown","eba9449b":"markdown","d95096e9":"markdown","0ae89864":"markdown"},"source":{"a36f2cdd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bcc23260":"# Import libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","86a3102a":"USAhousing = pd.read_csv('\/kaggle\/input\/usa-housing\/USA_Housing.csv')","9382cb5c":"USAhousing.head()","93a37908":"USAhousing.info()","710294a4":"USAhousing.describe()","7db8d296":"USAhousing.columns","023a620e":"sns.set(style = 'darkgrid')\nsns.pairplot(USAhousing)","ce918395":"sns.distplot(USAhousing['Price'])","a707b945":"sns.heatmap(USAhousing.corr(),cmap='YlGnBu',annot=True)","8d55c52a":"X = USAhousing[['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms',\n               'Avg. Area Number of Bedrooms', 'Area Population']]\ny = USAhousing['Price']","e876a2f6":"#Train Test split\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.4, random_state=101)","5ed12046":"#Creating Training model through Linear Regression\nfrom sklearn.linear_model import LinearRegression","a2817753":"lm = LinearRegression()","1625f78e":"lm.fit(X_train,y_train)","178f9e2d":"#Model Evaluation\nprint(lm.intercept_)","5145ad6d":"coeff_df = pd.DataFrame(lm.coef_,X.columns,columns=['Coefficient'])\ncoeff_df","cfd22277":"predictions = lm.predict(X_test)","11d9846a":"plt.scatter(y_test,predictions, color ='blue',edgecolors='black')","42f085ac":"sns.distplot((y_test-predictions),bins=50);","e6aa0543":"from sklearn import metrics","809aa3d8":"print('MAE:', metrics.mean_absolute_error(y_test, predictions))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))","d4a7a1a2":"X_test.head(1)","63adedd6":"y_test.head(1)","13302393":"lm.predict(X_test.head(1))","37482af7":"# Training a Linear Regression Model","369bcb03":"# Regression Evaluation Metrics","5f03d8be":"# Prediction from our Model","eba9449b":"# EDA","d95096e9":"Interpreting the coefficients:\n\n1. Holding all other features fixed, a 1 unit increase in ****Avg. Area Income**** is associated with an increase of $21.52 \n\n2. Holding all other features fixed, a 1 unit increase in **Avg. Area House Age** is associated with an increase of $164883.28 .\n\n3. Holding all other features fixed, a 1 unit increase in **Avg. Area Number of Rooms** is associated with an increase of $122368.67.\n\n4. Holding all other features fixed, a 1 unit increase in **Avg. Area Number of Bedrooms** is associated with an increase of $2233.80.\n\n5. Holding all other features fixed, a 1 unit increase in **Area Population** is associated with an increase of $15.15.","0ae89864":"Comparing these metrics:\n\n* MAE is the easiest to understand, because it's the average error.\n* MSE is more popular than MAE, because MSE \"punishes\" larger errors, which tends to be useful in the real world.\n* RMSE is even more popular than MSE, because RMSE is interpretable in the \"y\" units.\n\nAll of these are loss functions, because we want to minimize them."}}