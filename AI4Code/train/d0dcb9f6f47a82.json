{"cell_type":{"dcfdb02f":"code","5140ece6":"code","23fecd95":"code","9b0b3752":"code","bd09cdf0":"code","5e7acbc3":"code","22244f3a":"code","df559dc1":"code","631a06f3":"code","08ae6244":"code","3a2afddd":"code","0e6bba11":"code","38cafab1":"code","4f1c1c6c":"code","c0e780b6":"code","9a72dabb":"code","df1646ae":"code","4dbca7a6":"code","57ee7431":"code","7cd600af":"code","dbcc1a3d":"code","bb29985f":"code","4b8ce60b":"markdown","f1554465":"markdown"},"source":{"dcfdb02f":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","5140ece6":"\n#Download the data from Google Mobility Site\n#https:\/\/www.google.com\/covid19\/mobility\/\nimport pandas as pd\nvalidata=pd.read_csv('\/kaggle\/input\/temp-data-set-mobility\/Global_Mobility_Report.csv')\n","23fecd95":"validata.head(10)","9b0b3752":"def display_all(df):\n    with pd.option_context(\"display.max_rows\", 1000, \"display.max_columns\", 1000): \n        display(df)","bd09cdf0":"validata.columns.tolist()","5e7acbc3":"validata_aus=validata[validata.country_region == 'Australia']","22244f3a":"display_all(validata_aus.head().transpose())","df559dc1":"validata_aus.head(10)","631a06f3":"import numpy as np\ntestdata = validata_aus.groupby(['date']).agg(\n    {\n    \"retail_and_recreation_percent_change_from_baseline\": [np.median],\n    \"grocery_and_pharmacy_percent_change_from_baseline\": [np.median],\n    \"parks_percent_change_from_baseline\": [np.median],\n    \"transit_stations_percent_change_from_baseline\": [np.median],\n    \"workplaces_percent_change_from_baseline\": [np.median],\n    \"residential_percent_change_from_baseline\": [np.median]\n        \n}).reset_index()\ntestdata.columns = [\"_\".join(x) for x in testdata.columns.ravel()]\nd = pd.to_datetime({'year':[2020], 'month':[3], 'day':[22]})\ntestdata.loc[:,'countofdays'] = (pd.to_datetime(testdata['date_']) - d[0]).dt.days","08ae6244":"testdata.dtypes","3a2afddd":"testdata_1 = testdata.copy()","0e6bba11":"testdata_1.rename(columns={\n       'retail_and_recreation_percent_change_from_baseline_median' :'Retail and Recreation Median Change',\n 'grocery_and_pharmacy_percent_change_from_baseline_median':'Grocery and Pharmacy Median Change',\n 'parks_percent_change_from_baseline_median':'Parks Median Change',\n 'transit_stations_percent_change_from_baseline_median':'Transit Station Median Change',\n 'workplaces_percent_change_from_baseline_median':'Workplaces Median Change',\n 'residential_percent_change_from_baseline_median':'Residential Median Change',\n 'date_': 'date'\n}, inplace=True)","38cafab1":"import plotly.express as px\n\nimport pandas as pd\n\n\n# fig = px.line(testdata, x='date', y='vals')\n# fig.show()\n\ndf_long=pd.melt(testdata_1, id_vars=['date'], value_vars=['Retail and Recreation Median Change',\n                                                       'Grocery and Pharmacy Median Change',\n                                                       'Parks Median Change',\n                                                        'Transit Station Median Change',\n                                                        'Workplaces Median Change',\n                                                        'Residential Median Change'\n                                                        \n                                                        \n                                                       ])","4f1c1c6c":"df_long.rename(columns={\n    'value':'Median % Change',\n    'variable':'areas',\n    'date':'Date'\n}, inplace=True)\nfig = px.line(df_long, x='Date', y='Median % Change', color='areas')\nfig.update_layout(shapes=[\n    dict(\n      type= 'line',\n      yref= 'paper', y0= 0, y1= 1,\n      xref= 'x', x0= '2020-03-22', x1= '2020-03-22',\n      name ='test'\n    )\n])\n# Show plot \nfig.show()","c0e780b6":"area_map_dict={\n    'retail_and_recreation_percent_change_from_baseline_median' :'Retail and Recreation',\n 'grocery_and_pharmacy_percent_change_from_baseline_median':'Grocery and Pharmacy',\n 'parks_percent_change_from_baseline_median':'Parks',\n 'transit_stations_percent_change_from_baseline_median':'Transit Station',\n 'workplaces_percent_change_from_baseline_median':'Workplaces',\n 'residential_percent_change_from_baseline_median':'Residential',\n    \n}","9a72dabb":"%matplotlib inline","df1646ae":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation","4dbca7a6":"%matplotlib notebook\nWriter = animation.writers['ffmpeg']\nwriter = Writer(fps=5, metadata=dict(artist='Me'), bitrate=1800)","57ee7431":"required_cols = [cols for cols in testdata.columns.tolist() if 'median' in cols]","7cd600af":"def create_plot(sample_data,title):\n    fig = plt.figure(figsize=(30,6))\n    plt.ylim(np.min(sample_data['columnvalue']), np.max(sample_data['columnvalue']))\n    plt.xlabel('Year',fontsize=20)\n    plt.ylabel('Percentage Change Compared to Median for a Pervious Period',fontsize=10)\n    title = '{title} From Google Mobility Analysis report'.format(title=title)\n    plt.title(title,fontsize=20)\n    ax = plt.axes()\n    txt = ax.text(0.1,0.9,'Day to\/from lockdown =0', transform=ax.transAxes)\n    return plt,txt,fig,ax","dbcc1a3d":"\ndef animate(i,dataframe,plt,txt,ax):\n    data = dataframe.iloc[:int(i+1)]\n    p=sns.lineplot(x=data['date_'], y=data['columnvalue'], data=data, color='red')\n    p.tick_params(labelsize=17)\n    test=data['countofdays'][i]\n    txt.set_text('Day to\/from lockdown={:d}'.format(int(test)))\n    plt.setp(ax.get_xticklabels(), rotation=80, horizontalalignment='right')\n    plt.tight_layout()\n    plt.xlabel('Date of Year',fontsize=10)\n    plt.ylabel('Median % Changes',fontsize=10)\n    return txt","bb29985f":"for cols in required_cols:\n    try:\n        dataframe='{data}_cols'.format(data=cols)\n        dataframe = testdata[['date_','countofdays',cols]]\n        title = area_map_dict.get(cols)\n        dataframe.rename(columns={cols:'columnvalue'}, inplace=True)\n        plt,txt,fig,ax=create_plot(dataframe,title)\n        ani=matplotlib.animation.FuncAnimation(fig, animate,fargs=[dataframe, plt,txt,ax],interval=100000, repeat=False)\n        plt.show(block=True)\n        filname ='{cols}_mobility1.mp4'.format(cols=cols)\n        #anim.save(filname, writer='imagemagick', fps=5)\n        ani.save(filname, writer=writer)\n    except KeyError:\n        pass","4b8ce60b":"References\n Google LLC \u201cGoogle COVID-19 Community Mobility Reports\u201d.https:\/\/www.google.com\/covid19\/mobility\/\n Accessed: 2020\u201305\u201312.\n","f1554465":"This is a sample analysis for COVID Mobility Data.You can download the region data in google: https:\/\/www.google.com\/covid19\/mobility\/"}}