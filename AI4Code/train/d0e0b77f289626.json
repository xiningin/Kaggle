{"cell_type":{"609723aa":"code","5111928e":"code","248696f6":"code","3ae0cb61":"code","986dd1be":"code","bef71eb6":"code","328e06a3":"code","94f31f1d":"code","0500e710":"code","e4270730":"code","66afafca":"code","2db89ec6":"code","4fdc67c9":"code","837e3f15":"code","19b8139a":"code","0bbc182e":"code","ce1b6f37":"code","0522ee8c":"code","6d6b08d7":"code","ddd29c7b":"code","6c5fea1f":"code","b80175b0":"code","c685f73b":"markdown","c8dd98fb":"markdown","ee12d5ce":"markdown","b36af9a0":"markdown","8815d480":"markdown","bcf2e884":"markdown","96139689":"markdown","4c0756b2":"markdown","a58afaae":"markdown","efb0070d":"markdown","249b6449":"markdown","7e5bce66":"markdown","a25d07e3":"markdown","e6edff4e":"markdown","f2d7dbfc":"markdown","a37b6f6e":"markdown","0bcfc7b0":"markdown","745c69ca":"markdown","d271555f":"markdown","d527bdca":"markdown"},"source":{"609723aa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n","5111928e":"\nPlayers=pd.read_csv('\/kaggle\/input\/fifa-20-complete-player-dataset\/players_20.csv')\nPlayers['main_position']=Players['player_positions'].str.split(pat=',', n=-1, expand=True)[0]\nPlayers.head(5)","248696f6":"\nPlayers_grouped=Players.groupby('main_position')['value_eur'].mean()\/1e6\nPlayers_grouped=Players_grouped.sort_values()\nPlayers_grouped.plot(kind='barh',figsize=(12,8))\nplt.xlabel(\"Average value, M euro\")","3ae0cb61":"Players_grouped_age=Players.groupby('age')['value_eur'].mean()\/1e6\nPlayers_grouped_age.plot(grid=True,figsize=(12,8))\nplt.ylabel('Average value, M euro')\nplt.xlabel('Age')","986dd1be":"Players_country=Players.groupby('nationality')['value_eur'].nlargest(25).reset_index(level=1, drop=True)\nPlayers_country=Players_country.groupby('nationality').mean()\nPlayers_country_top10=(Players_country.sort_values()\/1e6).tail(10)\nPlayers_country_top10.plot(kind='barh',figsize=(12,8))\nplt.xlabel(\"Average value of TOP25 players, M euro\")","bef71eb6":"Players=Players[Players.main_position!='GK']\nSkill_cols=['age', 'height_cm', 'weight_kg','potential',\n       'international_reputation', 'weak_foot', 'skill_moves', 'pace',\n       'shooting', 'passing', 'dribbling', 'defending', 'physic',\n       'attacking_crossing', 'attacking_finishing',\n       'attacking_heading_accuracy', 'attacking_short_passing',\n       'attacking_volleys', 'skill_dribbling', 'skill_curve',\n       'skill_fk_accuracy', 'skill_long_passing', 'skill_ball_control',\n       'movement_acceleration', 'movement_sprint_speed', 'movement_agility',\n       'movement_reactions', 'movement_balance', 'power_shot_power',\n       'power_jumping', 'power_stamina', 'power_strength', 'power_long_shots',\n       'mentality_aggression', 'mentality_interceptions',\n       'mentality_positioning', 'mentality_vision', 'mentality_penalties',\n       'mentality_composure', 'defending_marking', 'defending_standing_tackle',\n       'defending_sliding_tackle']\nprint(len(Skill_cols))","328e06a3":"from sklearn.base import BaseEstimator, TransformerMixin\n\nclass CustomTransformer(BaseEstimator, TransformerMixin):\n    def __init__(self, Columns):\n        self.Columns=Columns\n        \n    def fit(self,X,y=None):\n        return self\n    \n    def transform(self,X):\n        New_X=X.copy()\n        New_X=New_X[self.Columns].copy()\n        return New_X","94f31f1d":"from sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.impute import SimpleImputer\n\npipeline=Pipeline([\n    ('custom_tr', CustomTransformer(Skill_cols)),\n    ('imputer',SimpleImputer(strategy='median')),\n    ('std_scaler',StandardScaler())\n])","0500e710":"X=pipeline.fit_transform(Players)\ny=Players['value_eur'].copy()\ny=y.values\/1000000","e4270730":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=2)","66afafca":"from sklearn.linear_model import LinearRegression\n\nlin_reg=LinearRegression()\nlin_reg.fit(X_train,y_train)","2db89ec6":"from sklearn.metrics import mean_squared_error\n\npredictions=lin_reg.predict(X_test)\nmse=mean_squared_error(y_test, predictions)\nrmse=np.sqrt(mse)\nrmse","4fdc67c9":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import GridSearchCV\n\nparam_grid=[\n    {'n_estimators':[3,10,30], 'max_features':[2,4,6,8,10]},\n    {'bootstrap':[False],'n_estimators':[3,10],'max_features':[2,3,4,6]}\n]\nforest_reg=RandomForestRegressor()\n\ngrid_search=GridSearchCV(forest_reg, param_grid, cv=5,\n                        scoring='neg_mean_squared_error',\n                        return_train_score=True)\n\ngrid_search.fit(X_train,y_train)","837e3f15":"print(grid_search.best_params_, np.sqrt(-grid_search.best_score_))","19b8139a":"feature_importances=grid_search.best_estimator_.feature_importances_\nfeatures=sorted(zip(feature_importances, Skill_cols),reverse=True)\nfeatures_sorted=np.array(features)\nfeatures_sorted","0bbc182e":"plt.pie(features_sorted[:,0], labels=features_sorted[:,1],radius=5,autopct='%1.1f%%')\nplt.show()","ce1b6f37":"final_model=grid_search.best_estimator_","0522ee8c":"def NationalTeamEstimator(nation,N=10):\n    Players_National=Players[Players['nationality']==nation].copy()\n    Players_National_prepared=pipeline.transform(Players_National)\n    National_prediction=final_model.predict(Players_National_prepared)\n    Players_National[\"value_predict\"]=National_prediction\n    Players_National=Players_National.sort_values(by='value_predict', ascending=False)\n    Players_National[\"Model prediction\"]=Players_National[\"value_predict\"].round(2).astype(str)+\" M Euro\"\n    Players_National[\"actual_value\"]=(Players_National[\"value_eur\"]\/1e6).round(2).astype(str)+\" M Euro\"\n    return (Players_National[['long_name','nationality','age','club','actual_value','Model prediction']].head(N))","6d6b08d7":"NationalTeamEstimator('France',N=20)","ddd29c7b":"NationalTeamEstimator('Germany',N=20)","6c5fea1f":"NationalTeamEstimator('Russia',N=20)","b80175b0":"Y_test_prediction=final_model.predict(X_test)\ntest_mse = mean_squared_error(y_test, Y_test_prediction)\ntest_rmse = np.sqrt(test_mse)\ntest_rmse","c685f73b":"Custom transformer to keep features","c8dd98fb":"# Machine Learning","ee12d5ce":"Function for prediction of top players of national teams","b36af9a0":"Remove goalkeepers and defenition of columns for model features","8815d480":"Age dependence","bcf2e884":"Linear Regression","96139689":"data preparation","4c0756b2":"# Import Data","a58afaae":"Which position is the most valuable","efb0070d":"# Prediction","249b6449":"Grid Search with Random Forest Regressor","7e5bce66":"Set final model","a25d07e3":"Making pipeline with cusstom transformer,SimpleImputer and StandardScaller","e6edff4e":"The most important fearures and skills","f2d7dbfc":"RMSE calculation","a37b6f6e":"Data split","0bcfc7b0":"Calculation RMSE of the test set","745c69ca":"TOP 10 the most expensive national teams (grouped by mean of TOP 25 players)","d271555f":"# Exploring the Dataset","d527bdca":"Best parameters and score"}}