{"cell_type":{"c7bb477e":"code","eb079e8e":"code","4fd82560":"code","02cf26af":"code","b7408ad8":"code","b3313a9c":"code","58c75de4":"code","55fdb46e":"code","ab88a062":"code","56d351d3":"code","7e98a94f":"code","18b8f127":"code","38f1b684":"markdown","e63b7079":"markdown","2982d169":"markdown","044f2b33":"markdown","b9bab0f3":"markdown","a29d6355":"markdown","db4f8d52":"markdown","fd9f431b":"markdown","f0d25734":"markdown"},"source":{"c7bb477e":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","eb079e8e":"from csv import reader\nfile='\/kaggle\/input\/sample-hacker-news\/hacker_news.csv'\nhn=list(reader(open(file)))[1:]\nheaders=list(reader(open(file)))[0]\n#hn[:5]","4fd82560":"# Headers column\nheaders","02cf26af":"ask_posts=[]\nshow_posts=[]\nother_posts=[]\n\nfor i in hn:\n    title=i[1].lower()\n    if title.startswith('ask hn'):\n        ask_posts.append(i)\n    elif title.startswith('show hn'):\n        show_posts.append(i)\n    else:\n        other_posts.append(i)\n","b7408ad8":"print ('Ask HN posts count: \\t',len(ask_posts))\nprint ('Show HN posts count: \\t',len(show_posts))\nprint ('Other posts count: \\t',len(other_posts))\nprint(\"_\"*30)\nprint ('Total posts count: \\t',len(hn))","b3313a9c":"total_number_of_comments=0\nfor i in hn:\n    comments_for_a_post =int(i[4])\n    total_number_of_comments+=comments_for_a_post\n    \n\ndef comments_counter(list):\n    comments_total_for_category=0\n    for i in list:\n        comments_for_a_post =int(i[4])\n        comments_total_for_category+=comments_for_a_post\n    comments_percentage=round(comments_total_for_category\/total_number_of_comments*100)\n    avg_for_a_post=round(comments_total_for_category\/len(list))\n    return comments_total_for_category,comments_percentage,avg_for_a_post\n\nask_cnt=comments_counter(ask_posts)\nshow_cnt=comments_counter(show_posts)\nother_cnt=comments_counter(other_posts)","58c75de4":"print('Comments for Ask posts: {total}({percent}%), with average {post} for a post.'.format(post=ask_cnt[2],total=ask_cnt[0],percent=ask_cnt[1]))\nprint('Comments for Show posts: {total}({percent}%), with average {post} for a post.'.format(post=show_cnt[2],total=show_cnt[0],percent=show_cnt[1]))\nprint('Comments for Other posts: {total}({percent}%), with average {post} for a post.'.format(post=other_cnt[2],total=other_cnt[0],percent=other_cnt[1]))\n","55fdb46e":"import datetime as dt\nz=ask_posts[5][6]\ndt_template=\"%m\/%d\/%Y %H:%M\"","ab88a062":"dt.datetime.strptime(z,dt_template)","56d351d3":"dt_template=\"%m\/%d\/%Y %H:%M\"\n\nn_comments_by_hour=[]\n\nfor i in ask_posts:\n    date_row=i[6]\n    date_conv=dt.datetime.strptime(date_row,dt_template)\n    hour=date_conv.hour\n    n_comments=int(i[4])\n    n_comments_by_hour.append((hour,n_comments))\n    \n    \nn_comments_by_hour[:7]","7e98a94f":"comments_by_hour={}\ncounts_by_hour={}\n\nfor i in n_comments_by_hour:\n    hour=i[0]\n    comments=i[1]\n    if hour not in counts_by_hour:\n        counts_by_hour[hour]=1\n        comments_by_hour[hour]=comments\n    else:\n        counts_by_hour[hour]+=1\n        comments_by_hour[hour]+=comments\n","18b8f127":"avg_by_hour={}\n\nfor i in range(24):\n    avg_by_hour[i]=comments_by_hour[i]\/counts_by_hour[i]\n\nimport operator\nsorted_avg_by_hour = sorted(avg_by_hour.items(), key=operator.itemgetter(1),reverse=True)\n\n\nprint (\"Hours to publish a post with most number of comments (top five):\")\nfor i in sorted_avg_by_hour[:5]:\n    print (\"Hour: {hour}:00, number of comments on average: {comments:.2f}\".format(hour=i[0],comments=i[1]))\n","38f1b684":"As we see from the cell above, Ask posts are significantly more popular than Show posts, but indeed Other posts are the most commented (2 times more popular than Ask). Let's dive deeper for Ask comments analysis.","e63b7079":"Goals:\n\n* Do Ask HN or Show HN receive more comments on average?\n* Do posts created at a certain time receive more comments on average?\n","2982d169":"Dataset columns:\n\n* `id`: The unique identifier from Hacker News for the post\n* `title`: The title of the post\n* `url`: The URL that the posts links to, if it the post has a URL\n* `num_points`: The number of points the post acquired, calculated as the total number of upvotes minus the total number of downvotes\n* `num_comments`: The number of comments that were made on the post\n* `author`: The username of the person who submitted the post\n* `created_at`: The date and time at which the post was submitted\n","044f2b33":"Dataset:\n* Target: Hacker News https:\/\/news.ycombinator.com\/\n* Dataset source: https:\/\/www.kaggle.com\/hacker-news\/hacker-news-posts","b9bab0f3":"## Number of comments by time posted","a29d6355":"## Slicing the dataset into categories","db4f8d52":"# Exploring posts from a website","fd9f431b":"## Comments by category\nCounting number of comments for each category","f0d25734":"Calculating average number of comments by hour of post publication"}}