{"cell_type":{"f880c188":"code","1e93059f":"code","a72a4b18":"code","e40ef718":"code","4e205e4b":"code","1c5dbed1":"code","8ab79d06":"code","c822857b":"code","37a2818e":"code","3a8acf18":"code","64c0fee7":"code","f26d8d67":"code","7a5f9a2d":"code","96461e55":"code","2107ada5":"code","6f5e62aa":"code","781f9cbb":"code","9d20a69e":"code","6a66ba2c":"code","652e91e2":"code","e0acd58b":"code","f5d095ce":"code","46c3bcdb":"code","bd525e63":"code","bdd475a7":"markdown","fda553bc":"markdown","871655ea":"markdown","34cd4a5f":"markdown","021463b1":"markdown","0470e670":"markdown","0a663e44":"markdown","766e13c1":"markdown"},"source":{"f880c188":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns # for data-visualizarion\nimport matplotlib.pyplot as plt # this is also used for data visualization\nsns.set(style = \"whitegrid\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1e93059f":"df = pd.read_csv(\"\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv\") # using this for data processing\ndf_old = pd.read_csv(\"\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv\") # using this data for data-visualization","a72a4b18":"df.head() ","e40ef718":"df.info()","4e205e4b":"# Creating the function to print the column name with the unique value it holds\ndef getUnique(df):\n    for col in df.columns:\n        print(col + \" : \" + str(df[col].nunique()))","1c5dbed1":"getUnique(df) # as the data in df_old is same as df, so they will both print the same data","8ab79d06":"df['salary'].fillna(value = 0.0 , inplace = True) # as the unplaced students dont have a salary and so it is null. Changing the value to zero","c822857b":"df.head()","37a2818e":"# Here we have multiple categorical values. These categorical value needs to be changed to dummy variables so that we can use \n# some modelling for it. Although here we are not looking to create a predictive model, given the data size.\n# the practice is regarding preprocessing data, hence creating a function to help me get the dummy variables\n\ndef dummyVariable(data_column , dataframe , s) :\n        just_dummies = pd.get_dummies(data_column ,prefix = s )\n        dataframe = pd.concat([dataframe , just_dummies] , axis = 1)\n        print(dataframe.shape)\n        return dataframe","3a8acf18":"df = dummyVariable(df['status'], df , 'status')\ndf = dummyVariable(df['workex'], df , 'workex')\ndf = dummyVariable(df['specialisation'] , df , 'specialisation')\ndf = dummyVariable(df['degree_t'] , df , 'degree_t')\ndf = dummyVariable(df['hsc_s'] , df , 'hsc_s')\ndf = dummyVariable(df['hsc_b'] , df , 'hsc_b')\ndf = dummyVariable(df['ssc_b'] , df , 'ssc_b')\ndf = dummyVariable(df['gender'] , df , 'gender')","64c0fee7":"for col in df.columns :\n    print(col)","f26d8d67":"\ndf.drop(['gender' , 'gender_F' , 'ssc_b_Others' , 'ssc_b' , 'hsc_b_Others' , 'hsc_b' , 'hsc_s_Arts' , 'hsc_s' , 'degree_t_Others' , 'degree_t' , 'specialisation_Mkt&Fin' , 'specialisation' , 'workex_No' , 'workex' , 'status_Not Placed' , 'status'] ,axis =1 , inplace =True)","7a5f9a2d":"df.head()","96461e55":"df.shape # this shape is not similar to the old df, we have 2 extra columns. ","2107ada5":"getUnique(df)","6f5e62aa":"df.info() # here we can see that the object columns have been removed(categorical columns)","781f9cbb":"getUnique(df_old) # df_old still holds the original data with categorical columns","9d20a69e":"df_old.shape","6a66ba2c":"df.describe()","652e91e2":"f, axes = plt.subplots(2, 2, figsize=(15, 10) )\nsns.despine(left=True)\nax_1 = sns.boxplot(x = \"specialisation\" , y = \"mba_p\" ,hue = \"status\" , data = df_old , ax = axes[1,1])\nax_2 = sns.boxplot(x = \"ssc_b\" , y = \"ssc_p\" , hue = \"status\"  , data = df_old  , ax = axes[0,0])\nax_3 = sns.boxplot(x = \"hsc_s\" , y = \"hsc_p\" , hue = \"status\"  , data = df_old , ax = axes[0,1])\nax_4 = sns.boxplot(x = \"degree_t\" , y = \"degree_p\" , hue = \"status\"  , data = df_old , ax = axes[1,0])\nplt.tight_layout()","e0acd58b":"f, axes = plt.subplots(2, 2, figsize=(13, 7) )\nsns.despine(left=True)\nax_1 = sns.countplot(x = \"specialisation\"  ,hue = \"status\" , data = df_old[df_old['workex']==\"Yes\"] , ax = axes[1,1])\nax_2 = sns.countplot(x = \"ssc_b\"  ,hue = \"status\" , data = df_old[df_old['workex']==\"Yes\"] , ax = axes[0,0])\nax_3 = sns.countplot(x = \"hsc_s\"  ,hue = \"status\" , data = df_old[df_old['workex']==\"Yes\"] , ax = axes[0,1])\nax_4 = sns.countplot(x = \"degree_t\"  ,hue = \"status\" , data = df_old[df_old['workex']==\"Yes\"] , ax = axes[1,0])\nplt.tight_layout()","f5d095ce":"f, axes = plt.subplots(2, figsize=(13, 7) )\nsns.despine(left=True)\nax_5 = sns.countplot(x = \"gender\"  ,hue = \"status\" , data = df_old , ax = axes[0])\nax_6 = sns.countplot(x = \"workex\"  ,hue = \"status\" , data = df_old , ax = axes[1])\nplt.tight_layout()","46c3bcdb":"f, axes = plt.subplots(2, 2, figsize=(15, 10) )\nsns.despine(left=True)\nax_1 = sns.boxplot(x = \"specialisation\" , y = \"mba_p\" ,hue = \"gender\" , data = df_old , ax = axes[1,1] , palette = \"Set1\")\nax_2 = sns.boxplot(x = \"ssc_b\" , y = \"ssc_p\" , hue = \"gender\"  , data = df_old  , ax = axes[0,0] , palette = \"Set1\")\nax_3 = sns.boxplot(x = \"hsc_s\" , y = \"hsc_p\" , hue = \"gender\"  , data = df_old , ax = axes[0,1] , palette = \"Set1\")\nax_4 = sns.boxplot(x = \"degree_t\" , y = \"degree_p\" , hue = \"gender\"  , data = df_old , ax = axes[1,0] , palette = \"Set1\")\nplt.tight_layout()","bd525e63":"f, axes = plt.subplots(2, 2, figsize=(15, 10) )\nsns.despine(left=True)\nax_1 = sns.boxplot(x = \"specialisation\" , y = \"mba_p\" ,hue = \"workex\" , data = df_old , ax = axes[1,1] , palette = \"Set2\")\nax_2 = sns.boxplot(x = \"ssc_b\" , y = \"ssc_p\" , hue = \"workex\"  , data = df_old  , ax = axes[0,0] , palette = \"Set2\")\nax_3 = sns.boxplot(x = \"hsc_s\" , y = \"hsc_p\" , hue = \"workex\"  , data = df_old , ax = axes[0,1] , palette = \"Set2\")\nax_4 = sns.boxplot(x = \"degree_t\" , y = \"degree_p\" , hue = \"workex\"  , data = df_old , ax = axes[1,0] , palette = \"Set2\")\nplt.tight_layout()","bdd475a7":"*ITs just a simple graph telling us the distribution of percentage between male and female. It simply justifies the assumption that girls usually score more than boys.*","fda553bc":"*We are just playing around the graphs so that we can understand from the graphs. From these bar graphs, we can understand that the regardless of the degree, people with workexperience are getting hired more compared to no experience.*","871655ea":"We are here, dealing with the data which tells us what are the probable characteristics a person has that makes it suitable for getting placed.","34cd4a5f":"**Here we can see, that apart from one case, people with higher percentages are the people getting placed **","021463b1":"# **Lets Start Plotting Graphs.**\nWe will start with boxplot","0470e670":"**This is the end for now. I will update it with all the help and advices I get. Thank You**","0a663e44":"*Now we have created various new columns, which are co-related. So now we need to remove this co-relation, and hence we drop one dummy variable column and the categorical columns*","766e13c1":"# Hey People, this is my first notebook including graphs.Please do check\n\n****So we can make more graphs here. This is my first notebook with graphs. This is a practice notebook. Anyone who wants to know how to start making notebooks and EDA, this is a start. Like majority of the people, I am also not much aware of the exact process. Here, this, is my second try. Please do look into it. If you think I can improve, any advice\/sugeestion and help would be really appreciable. ****"}}