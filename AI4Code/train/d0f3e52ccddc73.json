{"cell_type":{"96df24d8":"code","f07d7327":"code","01756964":"code","23f01abb":"code","b90803b2":"code","1ae357a0":"code","e93eeef7":"code","ac1559b2":"code","dafcab3d":"code","8b6d23e7":"code","729d07e4":"code","4e1e6939":"code","59708936":"code","ee786cee":"code","49f19718":"code","a0059bd0":"code","d7e7d897":"code","ff565117":"code","4c65ad93":"code","cdb217a3":"code","b23f3b33":"code","21648667":"code","ab57496d":"code","05607f04":"code","d49060ec":"code","9a05ba90":"code","44983ea9":"code","6ff6be92":"code","79d69ce5":"code","7a465bd6":"code","be20db63":"code","9d0bfa26":"code","e1d1b1e7":"code","0d47b645":"code","72f2012b":"code","c4074535":"code","33c844e9":"code","cb5d6317":"code","093b7e4d":"code","c4b4057c":"code","5b51a5d7":"code","c0396517":"code","5a0a660b":"code","708a23bd":"code","34146a5a":"code","c8f9329e":"code","f38280ea":"code","e6c2b062":"code","3c6eb6b8":"code","ce55b408":"code","25332fd7":"code","f3b7d2d8":"code","957dc323":"code","8d187f8c":"code","22dac681":"code","de5da1d8":"code","fa69e469":"code","21c9f97a":"code","5b9133d3":"code","1d1a7c75":"code","78b58513":"code","a323457a":"code","05d7c459":"code","a8bd9f12":"code","0ffcc9c5":"code","ec820ba8":"code","b256a03f":"code","0927ac79":"code","73b7d506":"code","4692928f":"code","9676e4b7":"code","800bd583":"code","26f54dd0":"code","2eb24044":"code","4c8e0847":"code","1f062d51":"code","fb5218bd":"code","d3c27516":"code","4f9fd14f":"code","b5c89a01":"code","0f64a0d7":"code","67902a37":"code","37a6969a":"code","fadb2e30":"code","6e489bba":"code","123b1c9b":"code","bf95bf60":"code","a7e5e926":"code","5d6dac69":"code","6c028d2e":"code","35b5577d":"code","a2851901":"code","c2ad6cfd":"code","f7ba6a1d":"code","cbd6d786":"code","31e10a58":"code","311687c6":"code","64296da1":"code","9d3ffe90":"code","610ad199":"code","1fde9d9c":"code","d0b4bdd3":"code","15d23ae6":"code","37208e3f":"code","91603b3c":"code","e4eac510":"code","a3e9e191":"code","a202ec84":"code","8ff7607d":"code","716ee249":"code","d28c651d":"code","a87d1916":"code","e16c8dd3":"code","749942b3":"code","7f91f6c8":"code","3fa05088":"code","ef6a40b1":"code","6f2c13d8":"code","e3344836":"code","e568fafe":"code","8d8a6d26":"code","de97ed38":"code","e2c89968":"code","111e171c":"code","de53d8e4":"code","7126191e":"code","59881cd5":"code","60ffa773":"code","e2d821d1":"code","c830d91e":"code","8774e905":"code","06d59de5":"code","9f0a3aa1":"code","29cc0931":"code","43afc444":"code","e5e2a05b":"code","f6a424a6":"code","88132cbd":"code","40ae9565":"code","b104298a":"code","92be778c":"code","df5124ca":"code","77af9dc5":"code","1f8006b3":"code","f051b856":"code","87a757a6":"code","9faf7cc6":"code","df0b3fd4":"code","350e9cc7":"code","e8ab9826":"code","5ef8a077":"code","f7127217":"code","60b705a7":"code","e12e7fa9":"code","56fb6fd9":"code","1fe55a4a":"code","f4838565":"code","e2134b03":"code","531f8b2b":"code","67d09d5a":"code","7ada8fdf":"code","aa3b4b59":"code","e708fc93":"code","bed493f1":"code","26f7e1a5":"code","cc01c106":"code","04f40b47":"code","bc8fe154":"code","597ef7c4":"code","213fd1a4":"code","bb8932a3":"code","d7fbe880":"code","834d4b32":"code","7b58af0e":"code","c324d886":"code","098ff335":"code","9ad944fe":"code","0cea7e8c":"code","eae882ff":"code","a829c42b":"code","51605b9a":"code","a6a2bed3":"code","bba584fd":"code","8ba9c28c":"code","fe9e2bc2":"code","ceb84761":"code","4724826d":"code","2e25feff":"code","445d3e8f":"code","6f7030d6":"code","af03ec3c":"code","b8c3b87f":"code","58bcfaa4":"code","b894dfc0":"code","9c53e1c6":"code","e95298bc":"code","edb6b0c7":"code","ce711b0e":"code","7b546591":"code","4e1bca3c":"code","18a4c843":"markdown","31579b74":"markdown","4e491760":"markdown","389b82bf":"markdown","693656c6":"markdown","f00dab55":"markdown","77f8a5a2":"markdown","a586d371":"markdown"},"source":{"96df24d8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport math\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f07d7327":"data_train=pd.read_csv(\"..\/input\/train.csv\")\ndata_test=pd.read_csv(\"..\/input\/test.csv\")\n","01756964":"data_train.sample(7)\n","23f01abb":"data_train.dtypes\ndata_test.dtypes","b90803b2":"data_train.info()","1ae357a0":"data_train.isna().sum()","e93eeef7":"def DF_initial_observations(data_train):\n    '''Gives basic details of columns in a dataframe : Data types, distinct values, NAs and sample'''\n    if isinstance(data_train, pd.DataFrame):\n        total_na=0\n        for i in range(len(data_train.columns)):        \n            total_na+= data_train.isna().sum()[i]\n        print('Dimensions : %d rows, %d columns' % (data_train.shape[0],data_train.shape[1]))\n        print(\"Total NA values : %d\" % (total_na))\n        print('%38s %10s     %10s %10s %15s' % ('Column name', ' Data Type', '# Distinct', ' NA values', ' Sample value'))\n        for i in range(len(data_train.columns)):\n            col_name = data_train.columns[i]\n            sampl = data_train[col_name].sample(1)\n            sampl.apply(pd.Categorical)\n            sampl_p = str(sampl.iloc[0,])\n            print('%38s %10s :   %10d  %10d %15s' % (data_train.columns[i],data_train.dtypes[i],data_train.nunique()[i],data_train.isna().sum()[i], sampl_p))\n    else:\n        print('Expected a DataFrame but got a %15s ' % (type(data)))","ac1559b2":"DF_initial_observations(data_train)","dafcab3d":"data_train.corr().style.format(\"{:.3}\").background_gradient(cmap=plt.get_cmap('coolwarm'), axis=1)","8b6d23e7":"data_train.corr()[2:8] [[\"GarageCars\",\"SalePrice\",\"GarageYrBlt\"]]     #correlation value for corresponding columns with the indexed columns","729d07e4":"data_train[\"GarageCars\"].corr(data_train[\"SalePrice\"])  #correlation between 2 columns","4e1e6939":"#data_train.corr()\ndata_train[data_train.columns].corr()[\"GarageCars\"][:]    #correlation of GarageCars with all other columns\n#here garage cars and garage area are highly correlated","59708936":"#heatmap for the generating correlated values\n\nsns.set(style=\"white\")\n\n# Compute the correlation matrix\ncorreln = data_train.corr()\n\n# Generate a mask for the upper triangle\n#mask = np.zeros_like(correln, dtype=np.bool)\n#mask[np.triu_indices_from(mask)] = True\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(11, 9))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(correln,  cmap=cmap, vmax=.3, #mask=mask,\n            linewidths=.5, cbar_kws={\"shrink\": .7})","ee786cee":"data_train.corr()[[\"TotalBsmtSF\",\"1stFlrSF\"]]      #correaltion of TotalBsmtSF and 1stFlrSF with all other columns","49f19718":"plt.boxplot(data_train[\"MiscVal\"])","a0059bd0":"plt.boxplot(data_train[\"GrLivArea\"])","d7e7d897":"plt.boxplot(data_train[\"LotArea\"])","ff565117":"data_train.describe()","4c65ad93":"plt.boxplot(data_train[\"3SsnPorch\"])","cdb217a3":"plt.boxplot(data_train[\"GrLivArea\"])","b23f3b33":"data_train[\"MasVnrType\"].isna().sum()","21648667":"data_train[\"MasVnrType\"].value_counts()","ab57496d":"DF_initial_observations(data_train)","05607f04":"data_train[\"MasVnrType\"].unique()","d49060ec":"data_train.loc[data_train[\"MasVnrType\"]==\"None\"]","9a05ba90":"data_train.columns","44983ea9":"data1=data_train[(data_train[\"Foundation\"]==\"PConc\") & (data_train[\"Exterior1st\"]==\"VinylSd\") & (data_train[\"Exterior2nd\"]==\"VinylSd\")]","6ff6be92":"max_value=data_train[\"MasVnrArea\"].value_counts().index.tolist()\n","79d69ce5":"max_value[0]","7a465bd6":"data_train[\"MasVnrArea\"]=data_train[\"MasVnrArea\"].replace(np.nan,max_value[0])","be20db63":"data_train[\"MasVnrArea\"].unique()","9d0bfa26":"data1[\"MasVnrArea\"].value_counts()","e1d1b1e7":"data_train[\"Foundation\"].value_counts()","0d47b645":"data_train[\"Foundation\"]== \"PConc\"\n","72f2012b":"data=data_train[\"MasVnrType\"].value_counts().index.tolist()","c4074535":"data_train[\"MasVnrType\"]=data_train[\"MasVnrType\"].replace(np.nan,data[0])\n","33c844e9":"data_train[\"MasVnrType\"].isna().sum()","cb5d6317":"data_train[\"LotFrontage\"].value_counts()","093b7e4d":"data_train.loc[data_train[\"LotFrontage\"]==60]","c4b4057c":"data_train=data_train.drop([\"Alley\",\"PoolQC\",\"MiscFeature\"],axis=1)","5b51a5d7":"data_train.shape","c0396517":"DF_initial_observations(data_train)","5a0a660b":"data_train[\"BsmtQual\"].unique()","708a23bd":"data_train[\"BsmtQual\"].isna().sum()","34146a5a":"data_train[\"BsmtExposure\"].value_counts()","c8f9329e":"data_count1=data_train[\"BsmtExposure\"].value_counts().index.tolist()\n","f38280ea":"data_count1[1]","e6c2b062":"data_train[\"BsmtExposure\"]=data_train[\"BsmtExposure\"].replace(np.nan,data_count1[0])","3c6eb6b8":"data_train[\"BsmtExposure\"].unique()","ce55b408":"data_count1=data_train[\"BsmtFinType2\"].value_counts().index.tolist()","25332fd7":"data_train[\"BsmtFinType2\"]=data_train[\"BsmtFinType2\"].replace(np.nan,data_count1[0])","f3b7d2d8":"data_train[\"BsmtFinType2\"].isna().sum()","957dc323":"data_train[\"FireplaceQu\"].value_counts()","8d187f8c":"data_train[data_train[\"FireplaceQu\"]==\"Gd\"]","22dac681":"data_train.corr()","de5da1d8":"data_train[\"FireplaceQu\"].isnull().sum()","fa69e469":"data_train[data_train[\"LotShape\"]== \"IR1\"]","21c9f97a":"data_train[data_train[\"LotFrontage\"].isnull()]","5b9133d3":"data_train.columns","1d1a7c75":"data_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(), np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"NWAmes\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])","78b58513":"data_train[\"LotFrontage\"].unique","a323457a":"data_train[\"Neighborhood\"].unique()","05d7c459":"data_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"Veenker\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])","a8bd9f12":"data_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"NoRidge\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])","0ffcc9c5":"data_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"CollgCr\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])","ec820ba8":"data_train[\"Neighborhood\"].unique()","b256a03f":"data_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"Mitchel\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])\ndata_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"Somerst\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])\ndata_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"OldTown\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])\ndata_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"BrkSide\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])\ndata_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"Sawyer\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])\ndata_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"NridgHt\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])\ndata_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"NAmes\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])\ndata_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"SawyerW\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])\ndata_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"IDOTRR\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])\ndata_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"MeadowV\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])\ndata_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"Edwards\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])\ndata_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"Gilbert\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])\ndata_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"Timber\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])\ndata_train[\"LotFrontage\"]=np.where(data_train[\"LotFrontage\"].isna(),np.nanmedian(data_train[data_train[\"Neighborhood\"]==\"StoneBr\"][\"LotFrontage\"]),data_train[\"LotFrontage\"])","0927ac79":"data_train[\"LotFrontage\"].isnull().sum()","73b7d506":"data_train.columns","4692928f":"data_train[['GarageType', 'GarageYrBlt',\n       'GarageFinish', 'GarageCars', 'GarageArea', 'GarageQual', 'GarageCond']].info()","9676e4b7":"data_train.GarageArea.unique()","800bd583":"data_train.shape","26f54dd0":"data_train1=data_train[[\"GarageType\",\"GarageYrBlt\",\"GarageFinish\",\"GarageQual\",\"GarageCond\",\"Fence\",\"BsmtQual\",\"FireplaceQu\"]]","2eb24044":"data_train.dropna(how=\"all\",thresh=6,subset=[\"GarageType\",\"GarageYrBlt\",\"GarageFinish\",\"GarageQual\",\"GarageCond\",\"Fence\",\"BsmtQual\",\"FireplaceQu\"], inplace=True)","4c8e0847":"data_train.isna().sum()","1f062d51":"y=data_train[['GarageType', 'GarageYrBlt',\n       'GarageFinish', 'GarageCars', 'GarageArea', 'GarageQual', 'GarageCond']]\nz=y[y.isnull().any(axis=1)]\nz\n","fb5218bd":"data_train.info()","d3c27516":"data_train[data_train.isna().any(axis = 1)]","4f9fd14f":"data_train.columns.isnull()","b5c89a01":"data_train.columns","0f64a0d7":"data_train.drop([\"Fence\"],axis=1,inplace=True)","67902a37":"DF_initial_observations(data_train)","37a6969a":"data_train[\"Electrical\"].isna().sum()","fadb2e30":"data_train[\"Electrical\"].value_counts()","6e489bba":"data_train[\"Electrical\"]=data_train[\"Electrical\"].replace(np.nan,\"SBrkr\")","123b1c9b":"data_train[\"Electrical\"].isna().sum()","bf95bf60":"data_train[\"MasVnrType\"].value_counts()","a7e5e926":"data_train[\"MasVnrType\"]=data_train[\"MasVnrType\"].replace(np.nan,\"None\")","5d6dac69":"data_train[\"BsmtQual\"].value_counts()","6c028d2e":"data_train[\"BsmtFinType1\"].value_counts()","35b5577d":"data_train[\"BsmtCond\"].value_counts()","a2851901":"data_train[\"BsmtCond\"]=data_train[\"BsmtCond\"].replace(np.nan,\"TA\")","c2ad6cfd":"data_train[\"BsmtFinType1\"].fillna(method=\"ffill\",inplace=True)","f7ba6a1d":"data_train[\"BsmtQual\"].fillna(method=\"ffill\",inplace=True)","cbd6d786":"data_train[\"BsmtQual\"].isna().sum()","31e10a58":"data_train[\"BsmtQual\"].value_counts()","311687c6":"data_train.sample(7)","64296da1":"data_train[\"FireplaceQu\"].value_counts()              ","9d3ffe90":"data_train[\"FireplaceQu\"]=data_train[\"FireplaceQu\"].replace(np.nan,\"unknown\")","610ad199":"data_train[\"FireplaceQu\"].isna().sum()","1fde9d9c":"data_train[(data_train['MiscVal'] == 15500.000000) | (data_train['GrLivArea'] == 5642.000000) | (data_train['LotFrontage'] == 313.000000) |(data_train['LotArea'] == 215245.000000) | (data_train['MasVnrArea'] == 1600.000000) |(data_train['BsmtFinSF1'] == 5644.000000)\n| (data_train['BsmtFinSF2'] == 1474.000000) | (data_train['TotalBsmtSF'] == 6110.000000) | (data_train['1stFlrSF'] == 4692.000000)\n    | (data_train['LowQualFinSF'] == 572.000000) | (data_train['WoodDeckSF'] == 857.000000)\n    | (data_train['EnclosedPorch'] == 552.000000) | (data_train['PoolArea'] == 738.000000) | (data_train['3SsnPorch'] == 508.000000)]","d0b4bdd3":"final_data= data_train[(data_train['MiscVal'] != 15500.000000) & (data_train['GrLivArea'] != 5642.000000) & (data_train['LotFrontage'] != 313.000000) & (data_train['LotArea'] != 215245.000000) & (data_train['MasVnrArea'] != 1600.000000) & (data_train['BsmtFinSF1'] != 5644.000000)\n& (data_train['BsmtFinSF2'] != 1474.000000) & (data_train['TotalBsmtSF'] != 6110.000000) & (data_train['1stFlrSF'] != 4692.000000)\n    &(data_train['LowQualFinSF'] != 572.000000) & (data_train['WoodDeckSF'] != 857.000000)\n    & (data_train['EnclosedPorch'] != 552.000000) & (data_train['PoolArea'] != 738.000000) & (data_train['3SsnPorch'] != 508.000000)]","15d23ae6":"final_data.shape","37208e3f":"sns.set()\ncols = ['SalePrice', 'OverallQual', 'GrLivArea', 'GarageCars', 'TotalBsmtSF', 'FullBath', 'YearBuilt']\nsns.pairplot(final_data[cols],palette=\"colorblind\", height = 3,diag_kind=\"kde\")\nplt.show()","91603b3c":"var_name= \"MSZoning\"\ncol_order = np.sort(final_data[var_name].unique()).tolist()\ncol_order\nplt.figure(figsize=(15,8))\nsns.boxplot(x=var_name, y=\"SalePrice\", data=final_data, order=col_order,width=.9,whis=.5)\nplt.xlabel(\"MSZoning\", fontsize=12)\nplt.ylabel(\"SalePrice\", fontsize=12)\nplt.title(\"Distribution of Saleprice variable with \"+var_name, fontsize=15)\nplt.show()","e4eac510":"col_name=\"Neighborhood\"\ncol_value=np.sort(final_data[col_name].unique()).tolist()\nplt.figure(figsize=(16,8))\nsns.stripplot(x=col_name,y=\"SalePrice\", data=final_data,order=col_value,linewidth=.6)\nplt.xticks(rotation=45)\nplt.xlabel(\"Neighborhood\")\nplt.ylabel(\"SalePrice\")\nplt.title(\"the plot between neighborhood with salesprice\")\nplt.show()\n","a3e9e191":"final_data","a202ec84":"sns.lmplot(x=\"YearBuilt\", y='SalePrice', hue='Foundation', \n           data=final_data,height=10,\n           fit_reg=False)","8ff7607d":"DF_initial_observations(final_data)","716ee249":"final_data.shape","d28c651d":"final_data=pd.get_dummies(final_data, columns=[\"Neighborhood\",],prefix=\"neighbor\",drop_first=True,dtype=int)\nfinal_data.shape","a87d1916":"final_data[\"MSZoning\"].unique()","e16c8dd3":"final_data['MSZoning'] = final_data['MSZoning'].map({'C (all)':0,'RH':3,'RM':4,'FV':6, 'RL':5, 'RP':7}).astype(int)","749942b3":"final_data[\"Street\"].unique()","7f91f6c8":"final_data['Street'] = final_data[\"Street\"].map({'Grvl':0, 'Pave':1}).astype(int)","3fa05088":"final_data['LotShape'] = final_data[\"LotShape\"].map({'IR3':0, 'IR2':1, 'IR1':2,'Reg':3}).astype(int)","ef6a40b1":"final_data[\"Utilities\"].unique()","6f2c13d8":"final_data['LandContour'] = final_data['LandContour'].map({'Low':0, 'Lvl':1, 'Bnk':2, 'HLS':3}).astype(int)","e3344836":"final_data['Utilities'] = final_data[\"Utilities\"].map({\"NoSeWa\":2,\"NoSewr\":1,\"AllPub\":3,\"ELO\":0}).astype(int)\n","e568fafe":"DF_initial_observations(final_data)","8d8a6d26":"final_data=pd.get_dummies(final_data, columns=[\"LotConfig\",\"Condition1\",\"Condition2\",\"BldgType\",\"HouseStyle\",\"RoofStyle\",\"RoofMatl\",\"Exterior1st\", \"Exterior2nd\",\"MasVnrType\",\"Foundation\",\"Heating\",\"Electrical\",\"Functional\",\"GarageType\",\"SaleType\",\"SaleCondition\"],drop_first=True,dtype=int)","de97ed38":"final_data.shape","e2c89968":"final_data[\"LandSlope\"].unique()","111e171c":"final_data[\"LandSlope\"]=final_data[\"LandSlope\"].map({\"Gtl\":2,\"Mod\":1,\"Sev\":0}).astype(int)","de53d8e4":"final_data[\"ExterQual\"].unique()","7126191e":"final_data[\"ExterQual\"]=final_data[\"ExterQual\"].map({\"Ex\":4,\"Gd\":3,\"TA\":2,\"Fa\":1,\"Po\":0}).astype(int)","59881cd5":"final_data[\"ExterCond\"]=final_data[\"ExterCond\"].map({\"Ex\":4,\"Gd\":3,\"TA\":2,\"Fa\":1,\"Po\":0}).astype(int)","60ffa773":"final_data[\"BsmtQual\"]=final_data[\"BsmtQual\"].map({\"Ex\":5,\"Gd\":4,\"TA\":3,\"Fa\":1,\"Po\":0,\"NA\":2}).astype(int)\nfinal_data[\"BsmtCond\"]=final_data[\"BsmtCond\"].map({\"Ex\":5,\"Gd\":4,\"TA\":3,\"Fa\":1,\"Po\":0,\"NA\":2}).astype(int)","e2d821d1":"final_data[\"BsmtExposure\"]=final_data[\"BsmtExposure\"].map({\"Gd\":4,\"Av\":3,\"Mn\":1,\"No\":0,\"NA\":2}).astype(int)","c830d91e":"final_data[\"BsmtExposure\"].unique()","8774e905":"final_data[\"BsmtFinType1\"]=final_data[\"BsmtFinType1\"].map({\"GLQ\":6,\"ALQ\":5,\"BLQ\":4,\"Rec\":3,\"LwQ\":2,\"NA\":1,\"Unf\":0}).astype(int)","06d59de5":"final_data[\"HeatingQC\"]=final_data[\"HeatingQC\"].map({\"Ex\":4,\"Gd\":3,\"TA\":2,\"Fa\":1,\"Po\":0}).astype(int)","9f0a3aa1":"final_data[\"KitchenQual\"]=final_data[\"KitchenQual\"].map({\"Ex\":4,\"Gd\":3,\"TA\":2,\"Fa\":1,\"Po\":0}).astype(int)","29cc0931":"final_data[\"FireplaceQu\"].unique()","43afc444":"final_data[\"FireplaceQu\"].isna().sum()","e5e2a05b":"final_data[\"FireplaceQu\"].unique()","f6a424a6":"final_data[\"FireplaceQu\"]=final_data[\"FireplaceQu\"].map({\"Ex\":5,\"Gd\":4,\"TA\":3,\"Fa\":2,\"Po\":1,\"unknown\":0}).astype(int)","88132cbd":"final_data[\"GarageFinish\"].value_counts()","40ae9565":"final_data[\"GarageFinish\"]=final_data[\"GarageFinish\"].map({\"Fin\":3,\"RFn\":2, \"Unf\":1,\"NA\":0}).astype(int)","b104298a":"final_data[\"GarageQual\"]=final_data[\"GarageQual\"].map({\"Ex\":5,\"Gd\":4,\"TA\":3,\"Fa\":1,\"Po\":0,\"NA\":2}).astype(int)\nfinal_data[\"GarageCond\"]=final_data[\"GarageCond\"].map({\"Ex\":5,\"Gd\":4,\"TA\":3,\"Fa\":1,\"Po\":0,\"NA\":2}).astype(int)\n","92be778c":"final_data.shape","df5124ca":"DF_initial_observations(final_data)","77af9dc5":"final_data[\"BsmtFinType2\"]=final_data[\"BsmtFinType2\"].map({\"GLQ\":6,\"ALQ\":5,\"BLQ\":4,\"Rec\":3,\"LwQ\":2,\"NA\":1,\"Unf\":0}).astype(int)","1f8006b3":"final_data[\"PavedDrive\"]=final_data[\"PavedDrive\"].map({\"Y\":2,\"P\":1,\"N\":0}).astype(int)","f051b856":"final_data[\"CentralAir\"]=final_data[\"CentralAir\"].map({\"Y\":1,\"N\":0}).astype(int)","87a757a6":"DF_initial_observations(data_test)","9faf7cc6":"data_test.dropna(how=\"all\",subset=[\"GarageType\",\"GarageYrBlt\",\"GarageFinish\",\"GarageQual\",\"GarageCond\"], inplace=True)","df0b3fd4":"data_test[\"FireplaceQu\"]=data_test[\"FireplaceQu\"].replace(np.nan,\"unknown\")","350e9cc7":"data_test=data_test.drop([\"Alley\"],axis=1)","e8ab9826":"data_test=data_test.drop([\"PoolQC\",\"Fence\",\"MiscFeature\"],axis=1)","5ef8a077":"sale_null_table=data_test[[\"SaleType\",\"Neighborhood\",\"SaleCondition\"]]\ny=sale_null_table[sale_null_table.isnull().any(axis=1)]\ny","f7127217":"x=sale_null_table[(sale_null_table[\"Neighborhood\"]==\"Sawyer\")&(sale_null_table[\"SaleCondition\"]==\"Normal\")]\nz=x[\"SaleType\"].value_counts().index.tolist()\nz[0]\n","60b705a7":"data_test[\"SaleType\"].unique()","e12e7fa9":"data_test[\"SaleType\"]=data_test[\"SaleType\"].replace(np.nan,z[0])","56fb6fd9":"data_test[\"GarageArea\"].corr(data_test[\"GarageCars\"])","1fe55a4a":"data_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"Veenker\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\ndata_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"CollgCr\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\ndata_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"NoRidge\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\ndata_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"Mitchel\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\ndata_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"Somerst\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\ndata_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"OldTown\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\ndata_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"BrkSide\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\ndata_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"Sawyer\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\n","f4838565":"data_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"NridgHt\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\ndata_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"NAmes\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\ndata_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"SawyerW\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\ndata_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"IDOTRR\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\ndata_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"MeadowV\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\ndata_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"Edwards\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\ndata_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"Gilbert\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\ndata_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"Timber\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])\ndata_test[\"LotFrontage\"]=np.where(data_test[\"LotFrontage\"].isna(),np.nanmedian(data_test[data_test[\"Neighborhood\"]==\"StoneBr\"][\"LotFrontage\"]),data_test[\"LotFrontage\"])","e2134b03":"bsmt_null=data_test[\"BsmtCond\"].value_counts().index.tolist()\ndata_test[\"BsmtCond\"]=data_test[\"BsmtCond\"].replace(np.nan,bsmt_null[0])\ndata_test[\"BsmtCond\"].unique()","531f8b2b":"mszone_null=data_test[\"MSZoning\"].value_counts().index.tolist()\ndata_test[\"MSZoning\"]=data_test[\"MSZoning\"].replace(np.nan,mszone_null[0])\ndata_test[\"MSZoning\"].unique()","67d09d5a":"bsmth_null=data_test[\"BsmtHalfBath\"].value_counts().index.tolist()\ndata_test[\"BsmtHalfBath\"]=data_test[\"BsmtHalfBath\"].replace(np.nan,bsmth_null[0])\ndata_test[\"BsmtHalfBath\"].unique()","7ada8fdf":"func_null=data_test[\"Functional\"].value_counts().index.tolist()\ndata_test[\"Functional\"]=data_test[\"Functional\"].replace(np.nan,func_null[0])\ndata_test[\"Functional\"].unique()","aa3b4b59":"util_null=data_test[\"Utilities\"].value_counts().index.tolist()\ndata_test[\"Utilities\"]=data_test[\"Utilities\"].replace(np.nan,util_null[0])\ndata_test[\"Utilities\"].unique()","e708fc93":"data_test[data_test[\"GarageYrBlt\"].isna()]","bed493f1":"data_test[\"GarageCars\"].unique()","26f7e1a5":"data_test.dropna(how=\"all\",subset=[\"GarageYrBlt\",\"GarageFinish\",\"GarageQual\",\"GarageCond\",\"GarageCars\",\"GarageArea\"],inplace=True)","cc01c106":"data_test.dropna(how=\"any\",subset=[\"BsmtQual\",\"BsmtExposure\",\"BsmtFinType1\",\"BsmtFinType2\",\"BsmtHalfBath\"],inplace=True)","04f40b47":"data_test[data_test[\"MasVnrType\"].isna()]","bc8fe154":"masty_null=data_test[\"MasVnrType\"].value_counts().index.tolist()\ndata_test[\"MasVnrType\"]=data_test[\"MasVnrType\"].replace(np.nan,masty_null[0])\ndata_test[\"MasVnrType\"].unique()","597ef7c4":"data_test[\"MasVnrArea\"]=data_test[\"MasVnrArea\"].replace(np.nan,data_test[\"MasVnrArea\"].mean())","213fd1a4":"DF_initial_observations(data_test)","bb8932a3":"data_test[\"GarageFinish\"].value_counts()","d7fbe880":"GarF_null=data_test[\"GarageFinish\"].value_counts().index.tolist()\ndata_test[\"GarageFinish\"]=data_test[\"GarageFinish\"].replace(np.nan,GarF_null[0])\ndata_test[\"GarageFinish\"].unique()","834d4b32":"data_test.dropna(how=\"any\",subset=[\"GarageYrBlt\",\"GarageQual\",\"GarageCond\"],inplace=True)","7b58af0e":"data_test['MSZoning'] = data_test['MSZoning'].map({'C (all)':0,'RH':3,'RM':4,'FV':6, 'RL':5, 'RP':7}).astype(int)\ndata_test['LotShape'] = data_test[\"LotShape\"].map({'IR3':0, 'IR2':1, 'IR1':2,'Reg':3}).astype(int)\ndata_test['Street'] = data_test[\"Street\"].map({'Grvl':0, 'Pave':1}).astype(int)\ndata_test['LandContour'] = data_test['LandContour'].map({'Low':0, 'Lvl':1, 'Bnk':2, 'HLS':3}).astype(int)\ndata_test['Utilities'] = data_test[\"Utilities\"].map({\"NoSeWa\":2,\"NoSewr\":1,\"AllPub\":3,\"ELO\":0}).astype(int)\ndata_test[\"LandSlope\"]=data_test[\"LandSlope\"].map({\"Gtl\":2,\"Mod\":1,\"Sev\":0}).astype(int)\ndata_test[\"ExterQual\"]=data_test[\"ExterQual\"].map({\"Ex\":4,\"Gd\":3,\"TA\":2,\"Fa\":1,\"Po\":0}).astype(int)\ndata_test[\"BsmtQual\"]=data_test[\"BsmtQual\"].map({\"Ex\":5,\"Gd\":4,\"TA\":3,\"Fa\":1,\"Po\":0,\"NA\":2}).astype(int)\ndata_test[\"BsmtCond\"]=data_test[\"BsmtCond\"].map({\"Ex\":5,\"Gd\":4,\"TA\":3,\"Fa\":1,\"Po\":0,\"NA\":2}).astype(int)\ndata_test[\"ExterCond\"]=data_test[\"ExterCond\"].map({\"Ex\":4,\"Gd\":3,\"TA\":2,\"Fa\":1,\"Po\":0}).astype(int)\ndata_test[\"BsmtExposure\"]=data_test[\"BsmtExposure\"].map({\"Gd\":4,\"Av\":3,\"Mn\":1,\"No\":0,\"NA\":2}).astype(int)\n","c324d886":"kit_null=data_test[\"KitchenQual\"].value_counts().index.tolist()\ndata_test[\"KitchenQual\"]=data_test[\"KitchenQual\"].replace(np.nan,kit_null[0])","098ff335":"bsmt1_null=data_test[\"BsmtFinType1\"].value_counts().index.tolist()\ndata_test[\"BsmtFinType1\"]=data_test[\"BsmtFinType1\"].replace(np.nan,bsmt1_null[0])","9ad944fe":"heaq_null=data_test[\"HeatingQC\"].value_counts().index.tolist()\ndata_test[\"HeatingQC\"]=data_test[\"HeatingQC\"].replace(np.nan,heaq_null[0])","0cea7e8c":"data_test[\"KitchenQual\"]=data_test[\"KitchenQual\"].map({\"Ex\":4,\"Gd\":3,\"TA\":2,\"Fa\":1}).astype(int)","eae882ff":"data_test[\"HeatingQC\"]=data_test[\"HeatingQC\"].map({\"Ex\":4,\"Gd\":3,\"TA\":2,\"Fa\":1,\"Po\":0}).astype(int)","a829c42b":"data_test[\"BsmtFinType1\"]=data_test[\"BsmtFinType1\"].map({\"GLQ\":6,\"ALQ\":5,\"BLQ\":4,\"Rec\":3,\"LwQ\":2,\"NA\":1,\"Unf\":0}).astype(int)\n","51605b9a":"data_test[\"FireplaceQu\"]=data_test[\"FireplaceQu\"].map({\"Ex\":5,\"Gd\":4,\"TA\":3,\"Fa\":2,\"Po\":1,\"unknown\":0}).astype(int)\ndata_test[\"GarageFinish\"]=data_test[\"GarageFinish\"].map({\"Fin\":3,\"RFn\":2, \"Unf\":1,\"NA\":0}).astype(int)\ndata_test[\"PavedDrive\"]=data_test[\"PavedDrive\"].map({\"Y\":2,\"P\":1,\"N\":0}).astype(int)\ndata_test[\"BsmtFinType2\"]=data_test[\"BsmtFinType2\"].map({\"GLQ\":6,\"ALQ\":5,\"BLQ\":4,\"Rec\":3,\"LwQ\":2,\"NA\":1,\"Unf\":0}).astype(int)","a6a2bed3":"data_test[\"GarageQual\"]=data_test[\"GarageQual\"].map({\"Ex\":5,\"Gd\":4,\"TA\":3,\"Fa\":1,\"Po\":0,\"NA\":2}).astype(int)\ndata_test[\"GarageCond\"]=data_test[\"GarageCond\"].map({\"Ex\":5,\"Gd\":4,\"TA\":3,\"Fa\":1,\"Po\":0,\"NA\":2}).astype(int)","bba584fd":"data_test[\"GarageCond\"].unique()","8ba9c28c":"data_test=pd.get_dummies(data_test, columns=[\"LotConfig\",\"Condition1\",\"Condition2\",\"BldgType\",\"HouseStyle\",\"RoofStyle\",\"RoofMatl\",\"Exterior1st\", \"Exterior2nd\",\"MasVnrType\",\"Foundation\",\"Heating\",\"Electrical\",\"Functional\",\"GarageType\",\"SaleType\",\"SaleCondition\"],drop_first=True,dtype=int)","fe9e2bc2":"data_test=pd.get_dummies(data_test, columns=[\"Neighborhood\",],prefix=\"neighbor\",drop_first=True,dtype=int)\ndata_test.shape","ceb84761":"data_test[\"CentralAir\"]=data_test[\"CentralAir\"].map({\"Y\":1,\"N\":0}).astype(int)","4724826d":"final_data.shape","2e25feff":"data_test.shape","445d3e8f":"x_final_data=final_data.drop([\"SalePrice\"],axis=1)\ny_final_data=final_data[\"SalePrice\"]\nmissing_cols = set(x_final_data.columns)-set(data_test.columns)\nfor c in missing_cols:\n    data_test[c]=0\n    \n    \ndata_test.shape    \n","6f7030d6":"x_stand_train_data=x_final_data.copy()\nx_stand_test_data=data_test.copy()\nnumcol=x_stand_train_data.columns","af03ec3c":"from sklearn.preprocessing import MinMaxScaler,StandardScaler\nsc=StandardScaler()\nstandard_x=sc.fit_transform(x_stand_train_data[numcol])\nstandard_test_x=sc.transform(x_stand_test_data[numcol])\nmm=MinMaxScaler()\nnormal_x=mm.fit_transform(x_stand_train_data[numcol])\nnormal_test_y=mm.transform(x_stand_test_data[numcol])\n","b8c3b87f":"from sklearn.model_selection import train_test_split\nx_train,x_val,y_train,y_val=train_test_split(standard_x,y_final_data,test_size=.20)\n","58bcfaa4":"from sklearn.svm import SVR\nsvr=SVR(kernel='linear',C=100,epsilon=0.6)\nsvr.fit(x_train,y_train)\nprint(\"train score{:.4f}\".format(svr.score(x_train,y_train)))\nprint(\"validation score{:.4f} \".format(svr.score(x_val,y_val)))\n","b894dfc0":"from sklearn import metrics\nsvr_tr_pred = svr.predict(x_train)\nsvr_val_pred =svr.predict(x_val)\nsvr_tr_mse = metrics.mean_squared_error(y_train,svr_tr_pred)\nsvr_tr_rmse = np.sqrt(svr_tr_mse)\nsvr_val_mse = metrics.mean_squared_error(y_val, svr_val_pred)\nsvr_val_rmse = np.sqrt(svr_val_mse)\n\nprint('train mse: ', svr_tr_mse)\nprint('train rmse: ', svr_tr_rmse)\n\nprint('val mse: ', svr_val_mse)\nprint('val rmse: ', svr_val_rmse)","9c53e1c6":"svr_test_pred=svr.predict(standard_test_x)\nsvr_test_pred","e95298bc":"from sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import mean_squared_error\n\nestimator = [5,7,8,9,10,15,20,25]\nmax_depth_val= [1,5,6,7,9,10]\nlearning_rate_val = [0.01,0.1,1,10,100]\nmax_features_val=[10,60,30,70,100,130]\n\nparam_grid_val = dict(n_estimators=estimator, max_depth=max_depth_val, learning_rate=learning_rate_val, max_features=max_features_val)\n\n","edb6b0c7":"gbr=GradientBoostingRegressor()\ngr_gbr=GridSearchCV(estimator=gbr,param_grid=param_grid_val,scoring= \"r2\",cv=10)\ngr_gbr.fit(standard_x,y_final_data)\n","ce711b0e":"gbr=GradientBoostingRegressor(learning_rate=0.1,max_depth=7,max_features=100,n_estimators=25, random_state=42)\ngbr.fit(x_train,y_train)\nprint(\"train score{:.4f}\".format(gbr.score(x_train,y_train)))\nprint(\"validation score{:.4f} \".format(gbr.score(x_val,y_val)))\n","7b546591":"gbr_tr_pred = gbr.predict(x_train)\ngbr_val_pred =gbr.predict(x_val)\ngbr_tr_mse = metrics.mean_squared_error(y_train,gbr_tr_pred)\ngbr_tr_rmse = np.sqrt(gbr_tr_mse)\ngbr_val_mse = metrics.mean_squared_error(y_val, gbr_val_pred)\ngbr_val_rmse = np.sqrt(gbr_val_mse)\n\nprint('train mse: ', gbr_tr_mse)\nprint('train rmse: ', gbr_tr_rmse)\n\nprint('val mse: ', gbr_val_mse)\nprint('val rmse: ', gbr_val_rmse)","4e1bca3c":"gbr_pred=gbr.predict(standard_test_x)\ngbr_pred","18a4c843":"Gradient Boosting Regressor","31579b74":"Here we can say the following:\n* we can say that upto 1980 we rarely had the prices above $300,000.\n* 1. Now a days the foundation is laid mostly by using PConc.\n* Brktil foundation was widely used back in 1920.\n* cblock foundation was widely used in 1960's.\n\n","4e491760":"DATA VISUALIZATION\n","389b82bf":"Finally I got the shape of my train data as 1348 rows and 191 columns.","693656c6":"Different Ways of defining Correlation Syntax","f00dab55":"**Imbalance in Test and Train Columns**\nWe can clearly see that there is an imbalance in the number of columns. We need to balance it.","77f8a5a2":"Support Vector Machine is computationally expensive to get the right hyperparameters with GridsearchCV.\n","a586d371":"Firstly I woud like to fill the null values\n* for SaleType Null Value. I considered SaleCondition and Neighborhood.\n* secondly I choosed the Sawyer Neighborhood and SaleCondition to Normal then I took the majority of cases, the saletype andfilled the null.\nhere is the code"}}