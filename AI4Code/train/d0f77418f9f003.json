{"cell_type":{"e3e59b23":"code","cdd6d107":"code","aefae948":"code","59958f04":"code","b0456433":"code","ee1641b5":"code","15cbcb46":"code","a797ba2b":"code","ff608e7b":"code","1aa22844":"code","ec8dc1b5":"code","4f8e55ab":"code","c194b903":"code","ea1e82cc":"code","cb47ca06":"code","8dc527ed":"code","e859c0f7":"code","77c420f3":"code","4166867e":"code","a01516ed":"markdown","3cc63a47":"markdown"},"source":{"e3e59b23":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cdd6d107":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nsns.set_style(\"whitegrid\")\nimport plotly\nimport datetime","aefae948":"data = pd.read_csv(\"\/kaggle\/input\/covid19-tweets\/covid19_tweets.csv\")","59958f04":"data.info()","b0456433":"data.describe().transpose()","ee1641b5":"data.head(2)","15cbcb46":"Per_Null_hashtags = (data[\"hashtags\"].isna().sum()\/data[\"hashtags\"].count()) * 100","a797ba2b":"print(\"{} percent hastags are Null \".format(Per_Null_hashtags))","ff608e7b":"data[\"hashtags\"].isna().value_counts()\nsns.countplot(data[\"hashtags\"].isna())\nplt.title(\"visualising tweet with and without hashtags\")\nplt.legend()","1aa22844":"data[\"user_verified\"].value_counts()","ec8dc1b5":"sns.countplot(data[\"user_verified\"])","4f8e55ab":"data[\"source\"].nunique()\ndata[\"source\"].isna().value_counts()\nApple_user = data[data[\"source\"] == \"Twitter for iPhone\"][\"source\"].count()\nAndroid_user = data[data[\"source\"] == \"Twitter for Android\"][\"source\"].count()\nWeb_user = data[data[\"source\"] == \"Twitter Web App\"][\"source\"].count()\nothers = data[(data[\"source\"] != \"Twitter Web App\") & \n              (data[\"source\"] != \"Twitter for Android\") &\n              (data[\"source\"] != \"Twitter for iPhone\")][\"source\"].count()\n\nplt.figure(figsize=(7,7))\nlabels = ['Apple_user', 'Android_user', 'Web_app_user', 'others']\nplt.pie([Apple_user,Android_user,Web_user,others],labels=labels,autopct='%1.2f%%')\nplt.show()","c194b903":"user_name = data.groupby(\"user_name\")[\"user_location\"].count().reset_index()\nuser_name.columns = ['user_name', 'count']\n#user_name.set_index(\"user_name\",inplace = True)\nuser_name.sort_values(['count'],inplace=True)","ea1e82cc":"plt.figure(figsize=(7,7))\nsns.barplot(x = \"count\",y = \"user_name\",data = user_name.tail(20),orient = \"h\")\nplt.tight_layout()\nplt.title(\"20 Users of Max tweets\")\nplt.legend()","cb47ca06":"user_location = data.groupby(\"user_location\")[\"user_name\"].count().reset_index()\nuser_location.columns = ['user_location', 'count']\n#user_name.set_index(\"user_name\",inplace = True)\nuser_location.sort_values(['count'],inplace=True)","8dc527ed":"plt.figure(figsize=(7,7))\nsns.barplot(x = \"count\",y = \"user_location\",data = user_location.tail(20),orient = \"h\")\nplt.tight_layout()\nplt.title(\"20 Locations of Max tweets\")\nplt.legend()","e859c0f7":"data[\"date\"] = pd.to_datetime(data[\"date\"])\ntime = data['date'].iloc[0]\ntime.hour","77c420f3":"data[\"Month\"] = data[\"date\"].apply(lambda x : x.month)\ndata[\"day\"] = data[\"date\"].apply(lambda x : x.dayofweek)\ndmap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}\ndata[\"day\"] = data[\"day\"].map(dmap)\n\nsns.countplot(data[\"Month\"])","4166867e":"sns.countplot(data[\"day\"])","a01516ed":"visualising tweet with and without hashtags","3cc63a47":"**Getting General and statistical info about data**"}}