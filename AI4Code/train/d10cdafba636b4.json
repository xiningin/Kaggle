{"cell_type":{"61ca1ddd":"code","0b48bf74":"code","5239ede8":"code","188c76fb":"code","e35673a6":"code","4461a681":"code","276b4093":"code","9995e12e":"code","b47ea0b1":"code","9291b9e6":"code","0c80d5aa":"code","c0d7064c":"code","0e10c7cf":"code","7d99aeab":"code","d46feca5":"code","303d13d9":"code","29b15b0e":"code","8641d3d6":"code","b819352a":"code","e92309aa":"code","16a60e23":"code","45a08a39":"code","139a2077":"code","6a6bb0c7":"code","96df02d9":"code","2a4155d3":"code","329e4a86":"code","5d0ae7b5":"code","3cae5987":"code","30627693":"code","be67a5f4":"code","4f0ade17":"code","6f1f9cbf":"code","3e4c95a4":"code","034cd9e9":"code","e2939819":"code","99669204":"markdown","9958882e":"markdown","800006f9":"markdown","8d48f76a":"markdown","848cbfe3":"markdown","88297588":"markdown","64bc9e26":"markdown","0aa7fd60":"markdown","b24f5009":"markdown","4b6affb7":"markdown","0de538d9":"markdown","4ef252c5":"markdown","3c5d64ea":"markdown","7001dd55":"markdown","0cb9702e":"markdown","8f20332e":"markdown","3811c025":"markdown","791db796":"markdown","22591a92":"markdown","f579ff9f":"markdown","5611a61c":"markdown","593f7d86":"markdown","d6b9f0ec":"markdown","2f27f624":"markdown","e1ab878c":"markdown","3a64b14c":"markdown","e224666d":"markdown","d0973270":"markdown","6c44a55d":"markdown","f315b001":"markdown","64253461":"markdown","cffa0737":"markdown","387ce395":"markdown","9a10f693":"markdown"},"source":{"61ca1ddd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","0b48bf74":"import bq_helper\nfrom bq_helper import BigQueryHelper\n\nlondon = bq_helper.BigQueryHelper(active_project = 'bigquery-public-data', dataset_name = 'london_crime')","5239ede8":"london.list_tables()","188c76fb":"london.head('crime_by_lsoa', num_rows = 20)","e35673a6":"london.table_schema('crime_by_lsoa')","4461a681":"query1 = \"\"\"\nSELECT DISTINCT borough\nFROM `bigquery-public-data.london_crime.crime_by_lsoa`\n\"\"\"\n\nboroughs = london.query_to_pandas_safe(query1)\nboroughs\n","276b4093":"query2 = \"\"\"\nSELECT borough, COUNT(DISTINCT lsoa_code) AS codes\nFROM `bigquery-public-data.london_crime.crime_by_lsoa`\nGROUP BY borough\n\"\"\"\ncodes_per_borough = london.query_to_pandas_safe(query2)\ncodes_per_borough","9995e12e":"codes_sorted = codes_per_borough.sort_values('codes', ascending = False )\ncodes_sorted","b47ea0b1":"codes_sorted.set_index('borough', inplace = True)\ncodes_sorted.head(10).plot(kind = 'bar', color = 'r', figsize = (12,6))\nplt.ylabel('No. of codes')","9291b9e6":"query3 = \"\"\"\nSELECT DISTINCT major_category\nFROM `bigquery-public-data.london_crime.crime_by_lsoa`\n\"\"\"\nmajor_category = london.query_to_pandas_safe(query3)\nmajor_category","0c80d5aa":"query4 = \"\"\"\nSELECT major_category, SUM(value) AS instances\nFROM `bigquery-public-data.london_crime.crime_by_lsoa`\nGROUP BY major_category\nORDER BY instances DESC\n\"\"\"\n\nmajor_category_crime = london. query_to_pandas_safe(query4)\nmajor_category_crime","c0d7064c":"major_category_crime.set_index('major_category', inplace = True)","0e10c7cf":"major_category_crime. plot(kind = 'barh', figsize = (12,6), color = 'm', title = 'Crime by major categories')\nplt.xlabel('No. of instances')","7d99aeab":"query4 = \"\"\"\nSELECT DISTINCT minor_category, SUM(value) AS instances\nFROM `bigquery-public-data.london_crime.crime_by_lsoa`\nGROUP BY minor_category\n\"\"\"\nminor_category = london.query_to_pandas_safe(query4)\nminor_category","d46feca5":"query5 = \"\"\"\nSELECT DISTINCT borough,SUM(value) AS instances,year, month\nFROM `bigquery-public-data.london_crime.crime_by_lsoa`\nGROUP BY borough, year, month\nORDER BY borough DESC\n\"\"\"\ncrime_by_borough = london.query_to_pandas_safe(query5)\ncrime_by_borough","303d13d9":"crime_by_borough.groupby(['borough'])['instances'].sum().sort_values(ascending = False).head()","29b15b0e":"# Query adapted from previous to also group by major_category of crime\nquery6 = \"\"\"\nSELECT year, month, major_category, sum(value) AS `crime`\nFROM `bigquery-public-data.london_crime.crime_by_lsoa`\nWHERE borough = 'Westminster'\nGROUP BY year, month, major_category\nORDER BY year, month, crime DESC;\n\"\"\"\n# Perform and store the query results\nwes_major_crime = london.query_to_pandas_safe(query6)\nwes_major_crime","8641d3d6":"#crime by major category 2008\nwes_major_crime_2008 = wes_major_crime.loc[wes_major_crime.year == 2008,['major_category',\n                                                                         'crime']].groupby(['major_category'])['crime'].sum()\nwes_major_crime_2008","b819352a":"wes_major_crime_2009 = wes_major_crime.loc[wes_major_crime.year == 2009,['major_category',\n                                                                         'crime']].groupby(['major_category'])['crime'].sum()\nwes_major_crime_2010 = wes_major_crime.loc[wes_major_crime.year == 2010,['major_category',\n                                                                         'crime']].groupby(['major_category'])['crime'].sum()\nwes_major_crime_2011 = wes_major_crime.loc[wes_major_crime.year == 2011,['major_category',\n                                                                         'crime']].groupby(['major_category'])['crime'].sum()\nwes_major_crime_2012 = wes_major_crime.loc[wes_major_crime.year == 2012,['major_category',\n                                                                         'crime']].groupby(['major_category'])['crime'].sum()\nwes_major_crime_2013 = wes_major_crime.loc[wes_major_crime.year == 2013,['major_category',\n                                                                         'crime']].groupby(['major_category'])['crime'].sum()\nwes_major_crime_2014 = wes_major_crime.loc[wes_major_crime.year == 2014,['major_category',\n                                                                         'crime']].groupby(['major_category'])['crime'].sum()\nwes_major_crime_2015 = wes_major_crime.loc[wes_major_crime.year == 2015,['major_category',\n                                                                         'crime']].groupby(['major_category'])['crime'].sum()\nwes_major_crime_2016 = wes_major_crime.loc[wes_major_crime.year == 2016,['major_category',\n                                                                         'crime']].groupby(['major_category'])['crime'].sum()\n","e92309aa":"pd.DataFrame({'crime_maj_2008': wes_major_crime_2008,\n             'crime_maj_2009': wes_major_crime_2009,\n             'crime_maj_2010': wes_major_crime_2010,\n             'crime_maj_2011': wes_major_crime_2011,\n             'crime_maj_2012': wes_major_crime_2012,\n             'crime_maj_2013': wes_major_crime_2013,\n             'crime_maj_2014': wes_major_crime_2014,\n             'crime_maj_2015': wes_major_crime_2015,\n             'crime_maj_2016': wes_major_crime_2016}).plot(kind = 'bar',\n                                                           figsize = (20,12),\n                                                           title = 'Crime by major category through (2008-2016)')\n","16a60e23":"wes_major_crime.loc[wes_major_crime.year == 2008,\n                    ['month','crime']].groupby(['month'])['crime'].sum().plot(figsize = (12,6), \n                                                                              title = 'Criminal activities throughout the year(2008)')\nplt.ylabel('Total no. of criminal activities')","45a08a39":"wes_major_crime.loc[wes_major_crime.year == 2009,\n                    ['month','crime']].groupby(['month'])['crime'].sum().plot(figsize = (12,6),\n                                                                              color = 'r',\n                                                                              title = 'Criminal activities throughout the year(2009)')\nplt.ylabel('Total no. of criminal activities')","139a2077":"wes_major_crime.loc[wes_major_crime.year == 2016,\n                    ['month','crime']].groupby(['month'])['crime'].sum().plot(figsize = (12,6),\n                                                                              color = 'm',\n                                                                              title = 'Criminal activities throughout the year(2016)')\nplt.ylabel('Total no. of criminal activities')","6a6bb0c7":"wes_major_crime.groupby(['year'])['crime'].sum().plot(figsize = (12,6),\n                                                      title = 'Crime trajectory(2008-2016) in Westminster')\nplt.ylabel('Total crimes in a year')","96df02d9":"# Query adapted from previous to also group by major_category of crime\nquery7 = \"\"\"\nSELECT year, month, minor_category, sum(value) AS `crime`\nFROM `bigquery-public-data.london_crime.crime_by_lsoa`\nWHERE borough = 'Camden'\nGROUP BY year, month, minor_category\nORDER BY year, month, crime DESC;\n\"\"\"\n# Perform and store the query results\ncam_minor_crime = london.query_to_pandas_safe(query7)\ncam_minor_crime","2a4155d3":"cam_minor_crime['minor_category'].describe()","329e4a86":"cam_min_10 = cam_minor_crime.groupby(['minor_category'])['crime'].sum().sort_values(ascending = False).head(10)\ncam_min_10","5d0ae7b5":"cam_min_10.plot(kind = 'bar',\n                figsize = (12,6),\n                title = '10 minor crime categories with the most crimes in Camden borough')","3cae5987":"cam_minor_crime_2008 = cam_minor_crime.loc[cam_minor_crime.year == 2008,:]\ncam_minor_crime_2008","30627693":"cam_minor_crime_2008.groupby(['month'])['crime'].sum().sort_values(ascending = False)","be67a5f4":"cam_minor_crime_2008.groupby(['month'])['crime'].sum().plot(figsize = (12,6),\n                                                            title = 'Crime level by months(2008)', color = 'g')","4f0ade17":"A = cam_minor_crime_2008.groupby(['minor_category'])['crime'].sum().sort_values(ascending = False).head(10)\nA","6f1f9cbf":"cam_minor_crime_2008.groupby(['minor_category'])['crime'].sum().sort_values(ascending = False).head(10).plot(kind = 'bar',\n                                                                                                             figsize = (12,6),\n                                                                                                             title = 'Categories with most no. of crimes (2008)'),","3e4c95a4":"cam_minor_crime_2009 = cam_minor_crime.loc[cam_minor_crime.year == 2009,:]\ncam_minor_crime_2010 = cam_minor_crime.loc[cam_minor_crime.year == 2010,:]\ncam_minor_crime_2011 = cam_minor_crime.loc[cam_minor_crime.year == 2011,:]","034cd9e9":"B = cam_minor_crime_2009.groupby(['minor_category'])['crime'].sum().sort_values(ascending = False).head(10)\nC = cam_minor_crime_2010.groupby(['minor_category'])['crime'].sum().sort_values(ascending = False).head(10)\nD = cam_minor_crime_2011.groupby(['minor_category'])['crime'].sum().sort_values(ascending = False).head(10)","e2939819":"pd.DataFrame({'2008':A,\n             '2009':B,\n             '2010':C,\n             '2011':D}).plot(kind = 'bar',\n                             figsize = (20,10),\n                             title = 'Categories with most crimes in Camden(2008-2011)')","99669204":"Five months with the most number of criminal activities in 2008","9958882e":"Crimes like Burglary and Possession of drugs reduced from 2008 to 2010 but surged back in 2011.\nWhereas, crimes like Harrasment consistently decreased through the four years.","800006f9":"Major categories of crime","8d48f76a":"Number of instances per borough","848cbfe3":"table_schema","88297588":"This can be done for other years and crime levels in these categories in consecutive years can be compared to keep a check on whether criminal activities that are most frequent have increased over time or decreased.","64bc9e26":"Crime level throughout the year 2016","0aa7fd60":"Let's look at the no. of instances of all these major categories of crime. This time sorting values in the query itself using ORDER BY.","b24f5009":"Let's do that for four consceutive years starting from 2008","4b6affb7":"Categories with the most number of crimes in 2008","0de538d9":"Plotting the results","4ef252c5":"We can plot the above result in form of a bar chart using the matplotlib library's plot function","3c5d64ea":"Five of the most crime prone areas","7001dd55":"From the resultant dataframe, let's find out five areas with the most number of criminal activities during the time period","0cb9702e":"Now, let's analyze crime in **Camden** borough","8f20332e":"Number of distinct boroughs","3811c025":"Crime level throughout the year 2009","791db796":"As we can see from the bar chart Theft from shops wasn't among the top 10 categories of crime in 2008,09,10 but made it to that list in 2011. Whereas, Pedal cycle thefts decreased in the year 2011 and went off the list of top 10 categories of crime.","22591a92":"Sorting the dataframe in descending order of instances i.e. (most to least) using pandas sort_values method","f579ff9f":"We have 32 minor categories of crime","5611a61c":"Plotting the results","593f7d86":"Let's begin by analyzing crime in **Westminster** borough","d6b9f0ec":"**CONCLUSION:\nI hope this kernel helped in gaining basic insights on how to query data using BigQuery and diving deep into it leveraging the power of pandas library and gaining deeper and clearer insights using the power of visualization by means of the matplotlib library.\nAny suggestions regarding the code or method of analysis employed in this kernel are welcome. Happy Learning!**","2f27f624":"Let's look at the most crime prone boroughs in London and access crime in these areas in a little bit more depth.","e1ab878c":"Now, let's analyze the dataframe in a little more depth using functions and methods from the pandas library ","3a64b14c":"Crime by major category 2009 - 2016","e224666d":"Visualizing top 20 rows of the table in form of a pandas dataframe","d0973270":"Name of tables in the london crime dataset","6c44a55d":"Let's figure out the categories with the most number of criminal activities under them","f315b001":"Total crime trajectory 2008-2016","64253461":"Analyzing crime in  year 2008","cffa0737":"No. of criminal instances by minor_category","387ce395":"Crime level throughout the year 2008 ","9a10f693":"We have five boroughs with most number of criminal activities. Let's analyse them a little bit in depth."}}