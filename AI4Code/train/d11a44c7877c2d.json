{"cell_type":{"58e33304":"code","b913fe65":"code","9efe9b85":"code","c8c28d1b":"code","807208a7":"code","569dc447":"code","e02a7cf7":"code","966929a8":"code","7e349ae7":"code","1e74a9c4":"code","164bbb3c":"code","bb3e600e":"code","be3bc843":"code","82b163fd":"code","9d44d9ef":"code","fc2fafb0":"code","3c92878b":"markdown","15bcd460":"markdown","64226f69":"markdown","bfc2642a":"markdown","b7f80cf9":"markdown","810961ad":"markdown","840ff4aa":"markdown","74ad0498":"markdown","32c8970f":"markdown","6d056cda":"markdown","834f2d25":"markdown","b8a1a0e6":"markdown","3bbe8f3d":"markdown"},"source":{"58e33304":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\n","b913fe65":"file_path = '..\/input\/melbourne-housing-snapshot\/melb_data.csv'\n\ndata = pd.read_csv(file_path)","9efe9b85":"data.info()","c8c28d1b":"co= data.corr()\nf, ax = plt.subplots(figsize=(10, 8))\nsns.heatmap(co, vmax=.8, square=True);\n","807208a7":"cor=data.corr()\nhighest_corr_features=cor.index[(cor[\"Price\"])>0.1]\nplt.figure(figsize=(10,10))\na=sns.heatmap(data[highest_corr_features].corr(),annot=True)","569dc447":"missing_value_count_by_column=data.isnull().sum()\nprint('missing value count by column : ')\nprint(missing_value_count_by_column[missing_value_count_by_column>0])","e02a7cf7":"y=data.Price\na=data.drop(['Price'],axis=1)\nx=a.select_dtypes(exclude=['object'])\nx_train,x_valid,y_train,y_valid=train_test_split(x,y,train_size=0.8,test_size=0.2)","966929a8":"missing_all_col=[col for col in x_train.columns if x_train[col].isnull().any()]\nreduced_x_train=x_train.drop(missing_all_col,axis=1)\nreduced_x_valid=x_valid.drop(missing_all_col,axis=1)","7e349ae7":"from sklearn.impute import SimpleImputer\nmy_imputer=SimpleImputer()\nimpute_x_train=pd.DataFrame(my_imputer.fit_transform(x_train))\nimpute_x_valid=pd.DataFrame(my_imputer.transform(x_valid))\nimpute_x_train.columns=x_train.columns\nimpute_x_valid.columns=x_valid.columns","1e74a9c4":"def get_mae(max_leaf_nodes, train_X, val_X, train_y, val_y):\n    model = RandomForestRegressor(max_leaf_nodes=max_leaf_nodes, random_state=0)\n    model.fit(train_X, train_y)\n    preds_val = model.predict(val_X)\n    mae = mean_absolute_error(val_y, preds_val)\n    return(mae)","164bbb3c":"max_leaf_nodes = [ 25, 100, 250, 500,700,1100]\nresult=1e18\nfor max_leaf_nodes in [25,100,250, 500,700,1100]:\n    my_mae = get_mae(max_leaf_nodes,reduced_x_train,reduced_x_valid,y_train,y_valid)\n    if my_mae < result:\n        best_tree_size=max_leaf_nodes\n        result=my_mae\n    print(\"Max leaf nodes: %d  \\t\\t Mean absulate Error:  %d\" %(max_leaf_nodes, my_mae))\nprint( best_tree_size)","bb3e600e":"max_leaf_nodes = [5, 25, 50, 100, 250, 500,700,120,1100]\nresult=1e18\nfor max_leaf_nodes in [5,25, 50,100,250, 500,700,120,1100]:\n    my_mae = get_mae(max_leaf_nodes,impute_x_train,impute_x_valid,y_train,y_valid)\n    if my_mae < result:\n        impute_best_tree_size=max_leaf_nodes\n        result=my_mae\n    print(\"Max leaf nodes: %d  \\t\\t Mean absulate Error:  %d\" %(max_leaf_nodes, my_mae))\nprint( impute_best_tree_size)","be3bc843":"def score_dataset(x_train, x_valid, y_train, y_valid):\n    model = RandomForestRegressor(n_estimators=best_tree_size,random_state=0)\n    model.fit(x_train, y_train)\n    pre=model.predict(x_valid)\n    return mean_absolute_error(y_valid, pre)\n","82b163fd":"print(score_dataset(reduced_x_train,reduced_x_valid,y_train,y_valid))","9d44d9ef":"def score_datasets(x_train, x_valid, y_train, y_valid):\n    model = RandomForestRegressor(n_estimators=impute_best_tree_size,random_state=0)\n    model.fit(x_train, y_train)\n    pre=model.predict(x_valid)\n    return mean_absolute_error(y_valid, pre)","fc2fafb0":"print(score_dataset(impute_x_train,impute_x_valid,y_train,y_valid))","3c92878b":"# Import necessary tools","15bcd460":"# Drop all missing value","64226f69":"# Mean absulate error for simpleimputer  part","bfc2642a":"# Find best tree size for control overfitting and underfitting ","b7f80cf9":"# Find best tree size for control overfitting and underfitting this part use for simpleimputer method","810961ad":"# Input","840ff4aa":"# Happy coding","74ad0498":"# Declare get function for calculate mean absulate error","32c8970f":"# Separate target and select only object column ","6d056cda":"# Mean absulate error for drop missing value part","834f2d25":"# Find corelation between columns based on price","b8a1a0e6":"# Apply simpleimputer method for handle missing numerical value","3bbe8f3d":"# Find missing value"}}