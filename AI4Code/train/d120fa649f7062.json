{"cell_type":{"4d2302c4":"code","47e775da":"code","dc56e577":"code","119f5efd":"code","08595db3":"code","43bc9c9d":"code","11ca60e6":"code","dd673e1f":"code","991c1b1a":"code","3a7ea485":"code","ec75d21f":"code","a0888022":"code","72fb00c8":"code","9a6af239":"code","126dc5df":"code","e25381ee":"code","570e7c7c":"code","af9b3c6c":"code","4304f6c5":"code","109a4784":"code","c19c4f75":"code","b7686451":"code","921a746a":"code","60008cec":"code","4ccd23be":"code","0380e4a8":"code","25899e6d":"code","32a6be21":"code","74665e2b":"code","f606529d":"code","ed0598eb":"code","f7aedfa3":"code","928c300b":"code","0cb90266":"code","a5f26799":"code","2bcfcf47":"code","947ac138":"code","1efcc4f8":"markdown","784fe053":"markdown","482b506a":"markdown","312c19ae":"markdown","fb930af9":"markdown"},"source":{"4d2302c4":"import pandas as pd\nimport numpy as np\nimport os","47e775da":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","dc56e577":"df =  pd.read_csv('\/kaggle\/input\/bank-marketing-campaigns-dataset\/bank-additional-full.csv', sep=';')\ndf.describe()","119f5efd":"df.columns","08595db3":"df.isnull().sum()","43bc9c9d":"dummy1 = pd.get_dummies(df['job'])","11ca60e6":"dfjob = dummy1.drop(['unknown'],axis=1)\ndfjob.head()","dd673e1f":"dummy2 = pd.get_dummies(df['marital'])\nmaritaldf = dummy2.drop(['unknown'],axis=1)\nmaritaldf.head()","991c1b1a":"dummy3 = pd.get_dummies(df['education'])\neducationdf = dummy3.drop(['unknown'],axis=1)\neducationdf.head()","3a7ea485":"dummy3.isnull().sum()","ec75d21f":"dummy4 = pd.get_dummies(df['default'])\ndefaultdf = dummy4.drop(['yes'], axis=1)\ndefaultdf.head()","a0888022":"dummy5 = pd.get_dummies(df['housing'])\nhousingdf = dummy5.drop(['yes'], axis=1)\nhousingdf.head()","72fb00c8":"dummy6 = pd.get_dummies(df['loan'])\nloandf = dummy6.drop(['yes'], axis=1)\nloandf.head()","9a6af239":"df['duration']","126dc5df":"dummy8 = pd.get_dummies(df['poutcome'])\npoutcomedf = dummy8.drop(['success'], axis=1)\npoutcomedf.head()","e25381ee":"df['y'] = df['y'].map({'yes':1,'no':0})","570e7c7c":"df","af9b3c6c":"merged = pd.concat([df, dfjob, educationdf, defaultdf, loandf, poutcomedf, housingdf, maritaldf],join='outer', axis=1)","4304f6c5":"merged.head()","109a4784":"data = merged.drop(['marital','job', 'education', 'default', 'loan', 'housing', 'contact', 'month', 'day_of_week', 'poutcome'], axis=1)","c19c4f75":"data.head()","b7686451":"data.isnull().sum()","921a746a":"from sklearn.model_selection import train_test_split","60008cec":"x = data.drop(['y'],axis=1)\ny = data.y","4ccd23be":"xtrain, xtest, ytrain, ytest = train_test_split(x,y,test_size=0.20,random_state=5)","0380e4a8":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression","25899e6d":"model = LogisticRegression()\nmodel.fit(xtrain, ytrain)","32a6be21":"model.score(xtest, ytest)","74665e2b":"model.intercept_","f606529d":"model.coef_","ed0598eb":"from sklearn.tree import DecisionTreeClassifier","f7aedfa3":"clf = DecisionTreeClassifier(random_state=0)\nclf.fit(xtrain,ytrain, sample_weight=None, check_input=True, X_idx_sorted=None)\nclf.get_params(deep=True)\nclf.predict(xtest, check_input=True)\nclf.predict_log_proba(xtest)\nclf.predict(xtest,check_input=True)\nprint(clf.score(xtest,ytest, sample_weight=None))","928c300b":"modelNew=RandomForestClassifier(n_estimators=100)\nmodelNew.fit(xtrain, ytrain)","0cb90266":"prediction = model.predict(xtest)","a5f26799":"from sklearn import metrics","2bcfcf47":"df=pd.DataFrame(prediction,ytest)\nprint(df)","947ac138":"metrics.accuracy_score(prediction,ytest)","1efcc4f8":"# Feature description\nBank client data:\n\n1. - age (numeric)\n2. - job : type of job (categorical: 'admin.','blue-collar','entrepreneur','housemaid','management','retired','self-employed','services','student','technician','unemployed','unknown')\n3. - marital : marital status (categorical: 'divorced','married','single','unknown'; note: 'divorced' means divorced or widowed)\n4. - education (categorical: basic.4y','basic.6y','basic.9y','high.school','illiterate','professional.course','university.degree','unknown')\n5. - default: has credit in default? (categorical: 'no','yes','unknown')\n6. - housing: has housing loan? (categorical: 'no','yes','unknown')\n7. - loan: has personal loan? (categorical: 'no','yes','unknown')","784fe053":"# related with the last contact of the current campaign:\n11 - duration: last contact duration, in seconds (numeric). Important note: this attribute highly affects the output target (e.g., if duration=0 then y=\"no\"). Yet, the duration is not known before a call is performed. Also, after the end of the call y is obviously known. Thus, this input should only be included for benchmark purposes and should be discarded if the intention is to have a realistic predictive model.","482b506a":"# social and economic context attributes\n16. - emp.var.rate: employment variation rate - quarterly indicator (numeric)\n\n17. - cons.price.idx: consumer price index - monthly indicator (numeric)\n\n18. - cons.conf.idx: consumer confidence index - monthly indicator (numeric)\n\n19. - euribor3m: euribor 3 month rate - daily indicator (numeric)\n\n20. - nr.employed: number of employees - quarterly indicator (numeric)","312c19ae":"# Output\n21. y - has the client subscribed a term deposit? (binary: \"yes\",\"no\")","fb930af9":"# other attributes:\n12. - campaign: number of contacts performed during this campaign and for this client (numeric, includes last contact)\n\n13. - pdays: number of days that passed by after the client was last contacted from a previous campaign (numeric; 999 means client was not previously contacted)\n\n14. - previous: number of contacts performed before this campaign and for this client (numeric)\n\n15. - poutcome: outcome of the previous marketing campaign (categorical: \"failure\",\"nonexistent\",\"success\")"}}