{"cell_type":{"ab42ebeb":"code","e3114b3c":"code","62e936ae":"code","6c4ac533":"code","e6336f2e":"markdown","a409e64a":"markdown","2de96bfb":"markdown","1783fb20":"markdown"},"source":{"ab42ebeb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\/chest_xray\/chest_xray\"))\n\n# Any results you write to the current directory are saved as output.","e3114b3c":"from keras.models import Sequential\nfrom keras.layers import Conv2D\nfrom keras.layers import MaxPooling2D\nfrom keras.layers import Flatten\nfrom keras.layers import Dense\n\n#instantiate Sequential\nmy_cnn=Sequential()\n\n#add convolution layer\nmy_cnn.add(Conv2D(32,(3,3),input_shape=(128,128,3),activation='relu'))\n\n#Add max pooling layer\nmy_cnn.add(MaxPooling2D(pool_size=(2,2)))\n\n#add another convolution layer\nmy_cnn.add(Conv2D(32,(3,3),activation='relu'))\n\n#Add max pooling layer\nmy_cnn.add(MaxPooling2D(pool_size=(2,2)))\n\n#add flatten \nmy_cnn.add(Flatten())\n\n#add hidde layer\nmy_cnn.add(Dense(units=128,activation='relu'))\n\n#add output layer\nmy_cnn.add(Dense(units=1,activation='sigmoid'))\n\n#compile the model\nmy_cnn.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])\n\n#import this package to do preprocessing of data\nfrom keras.preprocessing.image import ImageDataGenerator\n\n#Before doing test train split create a train model\ntrain_model=ImageDataGenerator(rescale=1.\/255,shear_range=0.2,zoom_range=0.2,horizontal_flip=True)\n\n#image we need to do flip and do other things while training not testing soo only rescale is enough for test\ntest_model=ImageDataGenerator(rescale=1.\/255)\n\n#assign data to train model\ntrain_set=train_model.flow_from_directory('..\/input\/chest_xray\/chest_xray\/train\/',target_size=(128,128),batch_size=32,class_mode='binary')\n\n#assign data to test model\ntest_set=test_model.flow_from_directory('..\/input\/chest_xray\/chest_xray\/test\/',target_size=(128,128),batch_size=32,class_mode='binary')\n\n#fit the model\nmy_cnn.fit_generator(train_set,steps_per_epoch=5216\/32,epochs=5,validation_data=test_set,validation_steps=624\/32)\n","62e936ae":"from keras.models import load_model\nfrom keras.preprocessing.image import ImageDataGenerator\n\nimport numpy as np\nfrom keras.preprocessing import image\ntest_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/PNEUMONIA\/person1950_bacteria_4881.jpeg',target_size=(128,128))\n#test_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/PNEUMONIA\/person1951_bacteria_4882.jpeg',target_size=(128,128))\n#test_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/PNEUMONIA\/person1952_bacteria_4883.jpeg',target_size=(128,128))\n#test_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/PNEUMONIA\/person1946_bacteria_4874.jpeg',target_size=(128,128))\n#test_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/PNEUMONIA\/person1947_bacteria_4876.jpeg',target_size=(128,128))\n#test_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/PNEUMONIA\/person1946_bacteria_4875.jpeg',target_size=(128,128))\n#test_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/PNEUMONIA\/person1949_bacteria_4880.jpeg',target_size=(128,128))\n#test_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/PNEUMONIA\/person1954_bacteria_4886.jpeg',target_size=(128,128))\n\n#NORMAL\n#test_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/NORMAL\/NORMAL2-IM-1440-0001.jpeg',target_size=(128,128))\n#test_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/NORMAL\/NORMAL2-IM-1437-0001.jpeg',target_size=(128,128))\n#test_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/NORMAL\/NORMAL2-IM-1431-0001.jpeg',target_size=(128,128))\n#test_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/NORMAL\/NORMAL2-IM-1436-0001.jpeg',target_size=(128,128))\n#test_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/NORMAL\/NORMAL2-IM-1430-0001.jpeg',target_size=(128,128))\n#test_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/NORMAL\/NORMAL2-IM-1438-0001.jpeg',target_size=(128,128))\n#test_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/NORMAL\/NORMAL2-IM-1442-0001.jpeg',target_size=(128,128))\n#test_image=image.load_img('..\/input\/chest_xray\/chest_xray\/val\/NORMAL\/NORMAL2-IM-1427-0001.jpeg',target_size=(128,128))\n\ntest_image=image.img_to_array(test_image)\ntest_image=np.expand_dims(test_image,axis=0)\nresult=my_cnn.predict(test_image)\ntrain_set.class_indices\n","6c4ac533":"if result[0][0] == 1.0:\n    prediction = 'PNEMONIA'\n    print(\" The Patient's Lung is affected with \")\n    print(prediction)\nelif result[0][0] == 0:\n    prediction = 'NORMAL'\n    print(\" The Patient's Lung is \")\n    print(prediction)","e6336f2e":"**PREDICTION RESULT**","a409e64a":"**PNEUMONIA DETECTION**","2de96bfb":"**APPLY MODEL AND TEST THE PREDICTION**","1783fb20":"**TRAIN THE MODEL**"}}