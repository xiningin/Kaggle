{"cell_type":{"46609ad7":"code","2a0f6aa0":"code","fcaf3b7e":"code","69402314":"code","50dac6d5":"code","a2cd4e2b":"code","a65167bf":"code","ad82a88d":"code","3a2063ff":"code","2c9a63d4":"code","2d6a48a4":"code","316a7131":"code","fc401047":"code","b4d6cd8f":"code","25449bca":"code","4403ee85":"code","d71c50a2":"code","8f7d19a0":"code","e9ccc76b":"code","af130014":"code","6b573c8e":"code","39855862":"code","c9a2df1f":"code","877aea75":"code","dd9dc1af":"code","0cf60ce8":"code","5860fb9c":"markdown","af6af172":"markdown","ed193146":"markdown","63c23549":"markdown","430d2813":"markdown","62e916b8":"markdown","ae91c37d":"markdown","4ddbc5ce":"markdown","03400f28":"markdown","e0690e79":"markdown"},"source":{"46609ad7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2a0f6aa0":"#ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')","fcaf3b7e":"FILEPATH = '\/kaggle\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv'","69402314":"df = pd.read_csv(FILEPATH)","50dac6d5":"df.sample(5)","a2cd4e2b":"import missingno as miss","a65167bf":"miss.bar(df)","ad82a88d":"df = df.drop(['Serial No.'], axis = 1)","3a2063ff":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.figure(figsize=(12,8))\nsns.heatmap(df.corr(), annot=True)\nplt.show()","2c9a63d4":"import plotly.express as px","2d6a48a4":"df_visual = df","316a7131":"fig = px.histogram(df_visual, x = 'TOEFL Score', color = 'Research')\nfig.show()","fc401047":"fig = px.histogram(df_visual, x = 'GRE Score', color = 'Research')\nfig.show()","b4d6cd8f":"df_visual['LOR_level'] = df_visual['LOR '].apply(lambda x:1 if x > 3.0 else 0)","25449bca":"df_visual.head()","4403ee85":"fig = px.histogram(df, x = 'SOP', color = 'LOR_level')\nfig.show()","d71c50a2":"X = df.drop(columns = ['Chance of Admit '])\ny = df['Chance of Admit '] #Target Variable","8f7d19a0":"# # Or use this\n# X = df.iloc[:, :-1]\n# y = df.iloc[:, -1]","e9ccc76b":"X.columns","af130014":"#Converting x & y into NumPy Arrays\n\nX = np.array(X)\ny = np.array(y)","6b573c8e":"y = y.reshape(-1,1)\ny.shape","39855862":"#Scaling the Data\n\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\n\nscaler = StandardScaler()\nminmax = MinMaxScaler()\n\nX = scaler.fit_transform(X)\ny = scaler.fit_transform(y)","c9a2df1f":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.23)\n\n\nprint(X_train.shape, X_test.shape, y_train.shape, y_test.shape)","877aea75":"from sklearn.linear_model import LinearRegression\nfrom sklearn import linear_model\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.linear_model import HuberRegressor","dd9dc1af":"best_model_accuracy = 0\nbest_model = None\n\nmodels = [\n    LinearRegression(),\n    RandomForestRegressor(n_estimators= 100, max_depth=25), #Instantiate an object\n    linear_model.BayesianRidge(),\n    AdaBoostRegressor(),\n    GradientBoostingRegressor(),\n    HuberRegressor()\n]\n\nfor model in models:\n    \n    model_name = model.__class__.__name__\n    \n    # fit \n    model.fit(X_train, y_train)\n    \n    y_pred = model.predict(X_test)\n    accuracy = model.score(X_test, y_test)\n    \n    print(\"-\" * 30)\n    print(model_name + \": \" )\n    \n    if(accuracy > best_model_accuracy):\n        best_model_accuracy = accuracy\n        best_model = model_name\n    \n    print(\"Accuracy: {:.2%}\".format(accuracy))","0cf60ce8":"print(\"Best Model : {}\".format(best_model))\nprint(\"Best Model Accuracy : {:.2%}\".format(best_model_accuracy))","5860fb9c":"## Read Data","af6af172":"<table style=\"font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif;border-collapse: collapse;width: 100%;\">\n  <tr>\n    <th style=\"border: 1px solid #ddd;padding: 8px; padding-top: 12px;padding-bottom: 12px;text-align: left;background-color: #2987E7;color: white;\">Notebook<\/th>\n    <th style=\"border: 1px solid #ddd;padding: 8px; padding-top: 12px;padding-bottom: 12px;text-align: left;background-color: #2987E7;color: white;\">Tags<\/th>\n  <\/tr>\n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/sof-questions-eda-and-visual\">SOF Questions - EDA and Visual<\/a> <\/td>\n    <td style=\"text-align: left\">Data Visual, Plotly<\/td>\n  <\/tr>\n  <tr>\n    <td style=\"background-color: #f2f2f2;text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/netflix-visualization-plotly-plots-treemap\">Netflix - Visualization, Plotly, Plots, and Treemap<\/a> <\/td>\n    <td style=\"background-color: #f2f2f2;text-align: left\">Data Visual, Data Cleaning, Plotly<\/td>\n  <\/tr>\n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/prediction-with-various-algorithms\">Prediction with various Algorithms<\/a> <\/td>\n    <td style=\"text-align: left\">Random Forest, Logistic Regression<\/td>\n  <\/tr>\n  <tr>\n    <td style=\"background-color: #f2f2f2;text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/eda-and-visualization\">EDA and Visualization<\/a> <\/td>\n    <td style=\"background-color: #f2f2f2;text-align: left\">Data Cleaning, Data Visual<\/td>\n  <\/tr>\n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/job-analysis-eda-visual\">Job Analysis - EDA and Visual<\/a> <\/td>\n    <td style=\"text-align: left\">Data Visual, EDA, Plotly<\/td>\n  <\/tr>   \n  <tr>\n    <td style=\"background-color: #f2f2f2;text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/estonia-disaster-visualization\">Estonia Disaster - Visualization<\/a> <\/td>\n    <td style=\"background-color: #f2f2f2;text-align: left\">Data Visual, EDA, Data Cleaning<\/td>\n  <\/tr>\n    \n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/pandas-dundas-challenge-100\" >Pandas 100+ exercises collection<\/a><\/td>\n    <td style=\"text-align: left\">Pandas, Data Manipulation<\/td>\n  <\/tr>   \n  <tr>\n    <td style=\"background-color: #f2f2f2;text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/prediction-with-various-algorithms\">Credit Card Fraud - Prediction with various algorithms<\/a><\/td>\n    <td style=\"background-color: #f2f2f2;text-align: left\">Various ML Algorithms<\/td>\n  <\/tr>  \n  <tr>\n    <td style=\"text-align: left\"><a href=\"https:\/\/www.kaggle.com\/rajacsp\/linear-equations-real-time\">Linear Equations - Real Time<\/a> <\/td>\n    <td style=\"text-align: left\">Linear Equation<\/td>\n  <\/tr>  \n<\/table>","ed193146":"## Prediction Time","63c23549":"**Final Notes:**\n\nWhat a great journey of learning! I loved analyzing the data and bring more visualization on this dataset. However, there is always a room to improve and learn more. If you think of any improvement, please feel free to share with me. \n\nAlso, if you **like my notebook**, <font style=\"color:blue;size:14px;\">please upvote it<\/font> as it will motivate me to come up with better approach in the upcoming notebooks.\n","430d2813":"**Observation:**\n\n* Similar to TOEFL and Research, GRE score related to Research. Whoever got higher score, they tend to focus more on Research. It's a good sign students focus on Research and GRE score as well.\n* Some of the student are very well focused on getting an admission though it's really hard to do research and preparing for GRE as well.","62e916b8":"**Observation:**\n\n* It seems whoever got the higher TOEFL score, they focused on Researh as well. It's clearly shows that students are aware of both TOEFL score and Research are the better chances of getting into admission. So, they didn't give a chance on both of them.\n\n* Half of the students didn't focus on Research. ","ae91c37d":"**To Do:**\n\n* More plots and visualization\n* Add more ML models to get more accuracy","4ddbc5ce":"## Null Visualization","03400f28":"**Observation:**\n\n* LOR and high SOP students are very less from the plot.\n* However, there are some students who got more LOR score and SOP score. \n* I am not sure how the data collector validated the LOR and SOP score. Need more details about it.","e0690e79":"Let's see the distribution diagram of students with TOEFL score and research done. "}}