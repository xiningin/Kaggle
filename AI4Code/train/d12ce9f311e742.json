{"cell_type":{"6a8d4472":"code","607ee2a2":"code","fff9a2bd":"code","ee5eb622":"code","39f5cd30":"code","d9a4ede6":"code","5599cefd":"code","59f01f4e":"code","7d6cef2f":"code","9f32994a":"code","944ea762":"code","f28a2491":"code","af2b86fa":"code","3ad12641":"code","d6332292":"code","5d5a4024":"code","13a36339":"code","e883c702":"code","5f4697d1":"code","e047275a":"code","0ab44a1c":"code","57b512fa":"code","d10587ee":"code","d9906b3c":"code","3e3002fe":"code","59aff3bb":"code","b3025001":"code","2837c241":"code","24914023":"code","3bc12c39":"code","c8309487":"code","dc3c2b07":"code","eef55cd9":"code","047d3a3c":"code","97c5dc3c":"code","b818d30c":"code","013a7dd6":"code","69ae50d1":"code","b1c447f0":"code","98816739":"code","6a79e53d":"code","42ee17fb":"code","54cf4010":"code","e0fa6da6":"markdown","35fb042b":"markdown","a21462bd":"markdown","cb07ab38":"markdown","9fe04c75":"markdown","3ed231c9":"markdown","10346dc5":"markdown","b7ad469f":"markdown","9f36b019":"markdown","f0c9e717":"markdown","25b01b9f":"markdown","95e077d1":"markdown","12754f13":"markdown","06d41234":"markdown","e8c55edd":"markdown","13a7b024":"markdown","5397dbe3":"markdown","9d869a5d":"markdown","23ce92b7":"markdown","6a59508a":"markdown","fbc29397":"markdown","8de0a098":"markdown","2a8d3cb8":"markdown","b2f7043e":"markdown","a3221a88":"markdown"},"source":{"6a8d4472":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","607ee2a2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import precision_score,recall_score,accuracy_score,confusion_matrix\nfrom sklearn.base import TransformerMixin,BaseEstimator\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import StratifiedShuffleSplit\nfrom sklearn.metrics import classification_report","fff9a2bd":"data=pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")\ndata.head(3)","ee5eb622":"data.isnull().sum()","39f5cd30":"data.describe()","d9a4ede6":"class quality_mark(BaseEstimator,TransformerMixin):\n    def fit(self,X,y=None):\n        return self\n    def transform(self,X):\n        X[\"quality_mark\"]=pd.cut(X[\"quality\"],bins=[2, 6.5, 8. ],labels=[0,1])\n        X.drop(\"quality\",axis=1,inplace=True)\n        return X","5599cefd":"qm=quality_mark()\nqm.fit_transform(data)\n","59f01f4e":"sns.countplot(data[\"quality_mark\"])","7d6cef2f":"data[\"quality_mark\"]=data[\"quality_mark\"].astype(int)\ncore=data.corr()\ntrimat=core.where(np.triu(np.ones(core.shape),k=1).astype(bool))\nsns.heatmap(trimat,cmap=\"Reds\")","9f32994a":"pear_col=[column for column in trimat.columns if any(trimat[column] > 0.75)]\npear_col","944ea762":"plt.figure(figsize=(2,2))\nsns.distplot(data[\"chlorides\"])\nplt.figure(figsize=(2,2))\nsns.distplot(data[\"sulphates\"])\nplt.figure(figsize=(2,2))\nsns.distplot(data[\"density\"])\n","f28a2491":"data.skew()","af2b86fa":"from scipy.stats import boxcox","3ad12641":"non_skew,_=boxcox(data[\"chlorides\"])\npd.Series(non_skew).skew()\n","d6332292":"data[\"chlorides\"],_=boxcox(data[\"chlorides\"])\ndata[\"sulphates\"]=np.log(data[\"sulphates\"])\ndata[\"free sulfur dioxide\"]=np.log(data[\"free sulfur dioxide\"])\ndata[\"total sulfur dioxide\"],_=boxcox(data[\"total sulfur dioxide\"])\ndata[\"residual sugar\"],_=boxcox(data[\"residual sugar\"])","5d5a4024":"from sklearn.neighbors import LocalOutlierFactor","13a36339":"class outlir(BaseEstimator,TransformerMixin):\n    def __init__(self,k):\n        self.k=k\n    def fit(self,X,y=None):\n        return self\n    def transform(self,X):\n        lof=LocalOutlierFactor(self.k)\n        return X.iloc[lof.fit_predict(X)!=-1,:]","e883c702":"ol=outlir(20)\ndata=ol.fit_transform(data)\ndata","5f4697d1":"from sklearn.model_selection import StratifiedShuffleSplit","e047275a":"split = StratifiedShuffleSplit( test_size=0.2, random_state=42)","0ab44a1c":"for train_index,test_index in split.split(data,data[\"quality_mark\"]):\n    strat_train_set = data.iloc[train_index,:]\n    strat_test_set = data.iloc[test_index,:]","57b512fa":"X_train=strat_train_set.iloc[:,:-1]\ny_train=strat_train_set.iloc[:,-1]\nX_test=strat_test_set.iloc[:,:-1]\ny_test=strat_test_set.iloc[:,-1]","d10587ee":"y_train.value_counts()","d9906b3c":"y_test.value_counts()","3e3002fe":"sc=StandardScaler()\n","59aff3bb":"X_t=sc.fit_transform(X_train)","b3025001":"X_test_scaled=sc.transform(X_test)","2837c241":"rfc=RandomForestClassifier()","24914023":"rfc.fit(X_t,y_train)","3bc12c39":"cross_val_score(rfc,X_train,y_train,cv=10,scoring=\"accuracy\").mean()","c8309487":"accuracy_score(y_test,rfc.predict(X_test_scaled))\n","dc3c2b07":"print(classification_report(y_test,rfc.predict(X_test_scaled)))","eef55cd9":"from sklearn.linear_model import LogisticRegression","047d3a3c":"lr=LogisticRegression()\n","97c5dc3c":"lr.fit(X_t,y_train)","b818d30c":"cross_val_score(lr,X_t,y_train,cv=100,scoring=\"accuracy\").mean()","013a7dd6":"accuracy_score(lr.predict(X_test_scaled),y_test)","69ae50d1":"print(classification_report(y_test,lr.predict(X_test_scaled)))","b1c447f0":"from sklearn.svm import SVC","98816739":"supc=SVC()\nsupc.fit(X_t,y_train)","6a79e53d":"cross_val_score(supc,X_t,y_train,cv=10,scoring=\"accuracy\").mean()","42ee17fb":"accuracy_score(supc.predict(X_test_scaled),y_test)","54cf4010":"print(classification_report(y_test,supc.predict(X_test_scaled)))","e0fa6da6":"**Thankyou for going through this notebook!if there are any errors please do correct me,im a beginner!**   **:D**","35fb042b":"# Data_preprocessing","a21462bd":"Almost all models expect data to be normally distributed,hence for a better accuracy skewness needs to be handled!","cb07ab38":"search the columns which have pearsons correlation more than 0.75.there are none!!:) ","9fe04c75":"***90% accuracy***","3ed231c9":"\n#  Handling skewed data","10346dc5":"***Random Forest:95% accuracy!!:))*****","b7ad469f":"# Reading the file and checking the missing values","9f36b019":"***Logistic Regression:90% accuracy***","f0c9e717":"***Support vector classfier***","25b01b9f":"# Random forests works good!moreover, on using GridsearchCV, and tuning the hyperparameters, 96~97% of accuracy can be achieved","95e077d1":"Since the o\/p is skewed(unequal no of zeros and ones)splitting must me stratified!","12754f13":"# splitting the set!\n","06d41234":"A custom transfomer to handle outliers! returns the dataset with outliers removed!","e8c55edd":"****THE DATA IS SKEWED! All the variables are not normally distributed","13a7b024":"Handling skewed data!(log transfomations,sqrt,cbrt,boxcox reduce the skewness)\nwhichever transformation gives better accuracy can be used!","5397dbe3":"# EDA ","9d869a5d":"# Handling outliers! ","23ce92b7":"**RFC**","6a59508a":"covert \"quality\" into classes(0=bad,1=good) by writing a custom transformer!","fbc29397":"**LOGISTIC REGRESSION**","8de0a098":"# scaling of data","2a8d3cb8":"There arent any missing values! :)","b2f7043e":"# MODELS\n","a3221a88":"Chlorides,residual sugar ,free sulfur dioxide,total sulfur dioxide,sulphates are skewed!\n"}}