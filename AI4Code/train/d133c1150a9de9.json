{"cell_type":{"3ef28adb":"code","45e6a87d":"code","a2419d1e":"code","deda5ed2":"code","543b344a":"code","7570627f":"code","f5b087f0":"code","15d07a46":"code","0e4b418f":"code","775c009d":"code","9855dea4":"code","472889eb":"code","85d17076":"code","4bbdf803":"code","07659612":"code","402737eb":"code","3a307e16":"code","e1cde806":"markdown","3a420710":"markdown","7ba9facf":"markdown","deeb20d4":"markdown","175ce388":"markdown","3fc4bd12":"markdown","5a505b56":"markdown","b5bee9ce":"markdown","da6c595e":"markdown","a1963f70":"markdown","e03b006f":"markdown","50bcabe1":"markdown","74020578":"markdown","c5373c68":"markdown","383576d5":"markdown","56ccb303":"markdown","1103aaaf":"markdown"},"source":{"3ef28adb":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport cv2\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport albumentations as alb\n\norg_img = cv2.cvtColor(cv2.imread('..\/input\/cat-and-dog\/test_set\/test_set\/cats\/cat.4027.jpg'), cv2.COLOR_BGR2RGB)\n\n# for Albumentations\ndef Alb_Augmentations(org_img = None, label = None, suptitle = 'Albumentation', albs = None):\n    img_list = [org_img]\n    label_list = ['orginal']\n    for _ in range(3):\n        aug_img = albs(image = org_img)['image']\n        img_list.append(aug_img)\n        label_list.append(label)\n    fig, ax = plt.subplots(figsize = (22, 5), nrows = 1, ncols = 4)\n    for i in range(4):\n        ax[i].imshow(img_list[i])\n        ax[i].set_title(label_list[i])\n    \n    plt.suptitle(f'{suptitle}')\n    \n# ImageDataGenerator\ndef Idg_Augmentations(image, data_generator, label = None, suptitle = 'ImageDataGenerator'):\n    img = np.expand_dims(image, axis = 0)\n    data_generator.fit(img)\n    img_gen = data_generator.flow(img)\n    \n    fig, ax = plt.subplots(figsize = (22, 5), nrows = 1, ncols = 4)\n    for i in range(4):\n        if i == 0:\n            ax[i].imshow(image)\n            ax[i].set_title('Orginal')\n        else:\n            img_batch = next(img_gen)\n            img_batch = np.squeeze(img_batch).astype('int')\n            ax[i].imshow(img_batch)\n            ax[i].set_title(label)\n\n    plt.suptitle(f'{suptitle}')\n        ","45e6a87d":"# Albumentation\nalbs = alb.HorizontalFlip(p = 0.5)\nAlb_Augmentations(org_img=org_img, label = 'Horizontal', albs = albs)\n\n# ImageDataGenerator\ndata_generator = ImageDataGenerator(horizontal_flip=True)\nIdg_Augmentations(image=org_img, data_generator=data_generator, label = 'Horizontal')","a2419d1e":"# Albumentation\nalbs = alb.VerticalFlip(p = 0.5)\nAlb_Augmentations(org_img=org_img, label = 'Vertical', albs = albs)\n\n# ImageDataGenerator\ndata_generator = ImageDataGenerator(vertical_flip=True)\nIdg_Augmentations(image=org_img, data_generator=data_generator, label = 'Vertical')","deda5ed2":"# Albumentation\nalbs = alb.Rotate(limit= 150, p = 0.8, border_mode = cv2.BORDER_CONSTANT)\nAlb_Augmentations(org_img=org_img, label = 'Rotation', albs = albs)\n\n# ImageDataGenerator\ndata_generator = ImageDataGenerator(rotation_range=150 ,fill_mode = 'constant')\nIdg_Augmentations(image=org_img, data_generator=data_generator, label = 'Rotation')","543b344a":"# Albumentation\nalbs = alb.ShiftScaleRotate(shift_limit=(0.4, 0.6), scale_limit= (0.4, 0.9), p = 0.8, rotate_limit = 0)\nAlb_Augmentations(org_img=org_img, label = 'Shift and Scale', albs = albs)\n\n# ImageDataGenerator\ndata_generator = ImageDataGenerator(width_shift_range=0.4, height_shift_range=0.4, zoom_range= [0.4, 1.5])\nIdg_Augmentations(image=org_img, data_generator=data_generator, label = 'Shift and Scale')","7570627f":"# Albumentation\nalbs = alb.Crop(x_min = 100, y_min = 100, x_max = 300, y_max = 300, p = 0.8)\nAlb_Augmentations(org_img=org_img, label = 'Crop', albs = albs)\n\nalbs = alb.Compose([\n    alb.Crop(x_min = 100, y_min = 100, x_max = 300, y_max = 300, p = 0.8),\n    alb.Resize(621, 934)\n])\nAlb_Augmentations(org_img=org_img, label = 'Crop', albs = albs)","f5b087f0":"# Albumentation\nalbs = alb.Compose([\n    alb.CenterCrop(height = 100, width = 300, p = 0.8),\n    alb.Resize(621, 934)\n])\nAlb_Augmentations(org_img=org_img, label = 'CenterCrop', albs = albs)\n# Albumentation\nalbs = alb.Compose([\n    alb.RandomCrop(height = 100, width = 300, p = 0.8),\n    alb.Resize(621, 934)\n])\nAlb_Augmentations(org_img=org_img, label = 'RandomCrop', albs = albs)","15d07a46":"# Albumentation\nalbs = alb.RandomBrightnessContrast(brightness_limit=(-0.4, 0.4), contrast_limit=(-0.4, 0.4), p=0.8)\nAlb_Augmentations(org_img=org_img, label = 'RandomBrightnessContrast', albs = albs)\n\n# ImageDataGenerator\ndata_generator = ImageDataGenerator(brightness_range=(0.1, 0.8))\nIdg_Augmentations(image=org_img, data_generator=data_generator, label = 'Bright')","0e4b418f":"# Albumentation\nalbs = alb.ChannelShuffle(p=0.8)\nAlb_Augmentations(org_img=org_img, label = 'ChannelShuffle', albs = albs)\n\n# ImageDataGenerator\ndata_generator = ImageDataGenerator(channel_shift_range = 60 )\nIdg_Augmentations(image=org_img, data_generator=data_generator, label = 'channel_shift_range')","775c009d":"# Albumentation\nalbs = alb.HueSaturationValue(p=0.8)\nAlb_Augmentations(org_img=org_img, label = 'HueSaturationValue', albs = albs)","9855dea4":"# Albumentation\nalbs = alb.RGBShift(p=0.8)\nAlb_Augmentations(org_img=org_img, label = 'RGBShift', albs = albs)","472889eb":"# Albumentation\nalbs = alb.ColorJitter(p=0.8)\nAlb_Augmentations(org_img=org_img, label = 'ColorJitter', albs = albs)","85d17076":"# Albumentation\nalbs = alb.GaussNoise(p=0.8, var_limit= (500, 1000))\nAlb_Augmentations(org_img=org_img, label = 'GaussNoise', albs = albs)","4bbdf803":"# Albumentation\nalbs = alb.CoarseDropout(p=0.8, max_holes = 50)\nAlb_Augmentations(org_img=org_img, label = 'CoarseDropout', albs = albs)","07659612":"# Albumentation\nalbs = alb.CLAHE(p=0.8)\nAlb_Augmentations(org_img=org_img, label = 'CLAHE', albs = albs)","402737eb":"# Albumentation\nalbs = alb.OneOf([\n    alb.Rotate(limit=(50, 150), p = 1, border_mode= cv2.BORDER_CONSTANT),\n    alb.HorizontalFlip(p = 1),\n    alb.ChannelShuffle(p = 1),\n    alb.RGBShift(p = 1)\n])\nAlb_Augmentations(org_img=org_img, label = 'Oneof', albs = albs)","3a307e16":"# Albumentation\nalbs = alb.Compose([\n    alb.Rotate(limit=(50, 150), p = 1, border_mode= cv2.BORDER_CONSTANT),\n    alb.HorizontalFlip(p = 1),\n    alb.ChannelShuffle(p = 1),\n    alb.RGBShift(p = 1),\n    alb.CLAHE(p = 1),\n    alb.GaussNoise(p = 1, var_limit = (50, 100)),\n    alb.CoarseDropout(p = 1, max_holes = 50)\n])\nAlb_Augmentations(org_img=org_img, label = 'Compose', albs = albs)\n\n# ImageDataGenerator\ndata_generator = ImageDataGenerator(vertical_flip=True,\n                                    horizontal_flip=True,\n                                    shear_range=True,\n                                    rotation_range= 150,\n                                    zoom_range = 0.7\n                                   )\nIdg_Augmentations(image=org_img, data_generator=data_generator, label = 'ImageDataGenerator')","e1cde806":"# HueSaturationValue\n- Albumentation\n    - HueSaturationValue\n        - hue_shift_limit : Set a Scope(shift range) in tuple. (\ud29c\ud50c \ub0b4\uc5d0 \ubcc0\ud658\ud560 \ubc94\uc704\ub97c \uc815\ud574\uc57c \ud569\ub2c8\ub2e4.)\n        - sat_shift_limit : Set a Scope(shift range) in tuple. (\ud29c\ud50c \ub0b4\uc5d0 \ubcc0\ud658\ud560 \ubc94\uc704\ub97c \uc815\ud574\uc57c \ud569\ub2c8\ub2e4.)\n        - val_shift_limit : Set a Scope(shift range) in tuple. (\ud29c\ud50c \ub0b4\uc5d0 \ubcc0\ud658\ud560 \ubc94\uc704\ub97c \uc815\ud574\uc57c \ud569\ub2c8\ub2e4.)         ","3a420710":"# Horizontal Flip, Vertical Flip\n- Albumentation\n    - P : Probabilty (default = 0.5)\n        - P : \ud655\ub960(\uae30\ubcf8 = 0.5)","7ba9facf":"# Coarse Dropout\n- Albumentations\n    - addtion Noise Color (\uba87\uba87 \ubd80\ubd84\uc758 \uc0c9\uc0c1\uc744 \uac80\uc815\uc73c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.)","deeb20d4":"# Oneof\n- adaptive one contents in Oneof (Oneof \ub0b4\uc758 \ud55c\uac00\uc9c0\ub97c \uc801\uc6a9\ud569\ub2c8\ub2e4.) ","175ce388":" # Gaussian Noise\n - Albumentations\n     - Addtion Guassian Noise (Gaussion \ub178\uc774\uc988 \ucd94\uac00)     ","3fc4bd12":"# ColorJitter\n- Albumentations\n    - Change value Bright, Hue, Saturation and Contest (\ubc1d\uae30, \uc0c9\uc0c1, \ucc44\ub3c4, \ub300\ube44\uc758 \uac12\uc744 \ubcc0\ud658\ud569\ub2c8\ub2e4.)","5a505b56":"# Compose\n- Albumentations\n    - it's similar ImageDataGenerator (ImageDataGenerator \uc640 \ube44\uc2b7\ud558\ub2e4\uace0 \ubcf4\uba74 \ub429\ub2c8\ub2e4.)","b5bee9ce":"# (ENG KOR)Compare Albmentations and ImageDataGenerator\n<br>\nToday I'm Studying about Albumentations and ImageDataGenerator.<br>\nWe will compare what is the difference between Albumentations and ImageDataGenerator and\nhow to use that.\n\nThank you for watching!!<br>\nIf you question. please comment.\n<hr>\n<table style = 'text-align: center'>\n    <tr align = center>\n        <td><img src = 'https:\/\/repository-images.githubusercontent.com\/136265021\/094cf680-b83f-11e9-9512-e4b538ed8e4d' width = 500 height = 500><\/src><\/td>\n        <td><img src ='https:\/\/t1.daumcdn.net\/cfile\/tistory\/9922C2395C6D698211' width = 500 height = 500><\/src><\/td>\n    <\/tr>\n    <tr>\n        <td>Albumentations<\/td>\n        <td>ImageDataGenerator<\/td>\n    <\/tr>\n<\/table>        \n\n# Contents\n- Retrieve Image Data (Image \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30)\n- Horizontal_flip, Vertical_flip (\uc88c\uc6b0, \uc0c1\ud558 \ubc18\uc804)\n- Random Rotation (\ubb34\uc791\uc704 \ud68c\uc804)\n- Shift and Scale (\uc0c1\ud558, \uc88c\uc6b0 \uc774\ub3d9)\n- Crop (\uc790\ub974\uae30)\n- RandomBrightnessContrast (\ubc1d\uae30,\ub300\ube44)\n- ChannelShuffle (\ucc44\ub110 \uc21c\uc11c \ubcc0\ud658)\n- HueSaturationValue (\uc0c9\uc0c1,\ucc44\ub3c4,\uba85\ub3c4 \ubcc0\ud658)\n- RGBShift (\uc0c9\uc0c1 \ubcc0\ud658)\n- ColorJitter (\ubc1d\uae30, \ub300\ube44, \ucc44\ub3c4, \uc0c9\uc0c1 \ubcc0\ud658)\n- Gaussian Noise (\ub178\uc774\uc988 \ucd94\uac00)\n- CoarseDropout (\ub178\uc774\uc988 \uad6c\uba4d \ucd94\uac00)\n- CLAHE (\uc774\ubbf8\uc9c0 \uc120\uba85\ub3c4)\n- One of (\ud55c\uac00\uc9c0 \uc801\uc6a9)\n- Compose (\uad6c\uc131)","da6c595e":"# Crop\n- Only albumentations has Crop (Albumentations \ub9cc Crop \uae30\ub2a5\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4.)\n    - Crop doesn't resize orginal image. (\uc6d0\ubcf8 \uc774\ubbf8\uc9c0\ub85c \uc774\uc9c0\ubbf8 \ud06c\uae30\ub97c \ubcc0\ud658\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.)\n    - if you want resize orginal image, use Albumentations.Composer\n        - (\ub9cc\uc57d \uc6d0\ubcf8 \uc774\ubbf8\uc9c0\ub85c \ubcc0\ud658\ud558\uace0 \uc2f6\ub2e4\uba74, Albumentations.Composer\uc744 \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4.)\n        \n<br>\n\n- Crop Kinds\n    - CenterCrop : Crop image center (not resize orgin image)\n        - \uc774\ubbf8\uc9c0\uc758 \uc911\uc2ec\ubd80\ub97c \uc790\ub985\ub2c8\ub2e4. (\uc6d0\ubcf8\uc774\ubbf8\uc9c0\uc758 \ud06c\uae30\ub85c \ubcc0\ud658\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.)\n    - RandomCrop : Crop image random (not resize orgin image)\n        - \uc774\ubbf8\uc9c0\ub97c \ubb34\uc791\uc704\ub85c \uc790\ub985\ub2c8\ub2e4. (\uc6d0\ubcf8\uc774\ubbf8\uc9c0\uc758 \ud06c\uae30\ub85c \ubcc0\ud658\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.)\n        \n<br>\n\n* if you want resize orginal image, use Albumentations.Composer\n    - (\ub9cc\uc57d \uc6d0\ubcf8 \uc774\ubbf8\uc9c0\ub85c \ubcc0\ud658\ud558\uace0 \uc2f6\ub2e4\uba74, Albumentations.Composer\uc744 \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4.)","a1963f70":"# Retrieve Image Data and Make Function\n   - \uc774\ubbf8\uc9c0 \ubd88\ub7ec\uc624\uae30 \ubc0f \ud568\uc218 \uc81c\uc791\ud558\uae30","e03b006f":"# CLAHE\n- Albumentations\n    - Make contrast sharper. (\uba85\uc554\ub300\ube44\uac00 \uc120\uba85\ud574\uc9d1\ub2c8\ub2e4.)\n    ","50bcabe1":"# Shift and Scale\n- Albumentation\n    - shift_limit : Image Move (Image\uac00 \uc774\ub3d9\ud569\ub2c8\ub2e4.)\n        - if you adapt 0 for shift_limit, Image doesn't move (0\uc744 \uc801\uc6a9\ud558\uba74 \uc774\ubbf8\uc9c0\uac00 \uc6c0\uc9c1\uc774\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.)\n    - scale_limit : Image enlargement or reduction(Image \ud655\ub300 \ubc0f \ucd95\uc18c)\n        - if you adapt 0 for scale_limit, Image doesn't move (0\uc744 \uc801\uc6a9\ud558\uba74 \uc774\ubbf8\uc9c0\uac00 \ud655\ub300\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.)\n        - if you adapt more 1 scale_limit, Image reduction (1\uc774\uc0c1 \uc801\uc6a9\uc2dc \uc774\ubbf8\uc9c0\uac00 \ucd95\uc18c\ub429\ub2c8\ub2e4.)\n    - rotate_limit : Image Rotation (Image \ud68c\uc804)\n    \n<br> \n\n\n- ImageDataGenerator\n    - width_shift_range : Image moves left or right (\uc67c\ucabd \ub610\ub294 \uc624\ub978\ucabd\uc73c\ub85c \uc6c0\uc9c1\uc785\ub2c8\ub2e4.)\n    - height_shift_range :Image moves up or down (\uc704, \uc544\ub798\ub85c \uc6c0\uc9c1\uc785\ub2c8\ub2e4.)\n    - zoom_range : equal scale_limit (\uc704\uc758 scale_limit\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4.)\n    \n    - if you wan't move, delete width_shift_range, height_shift_range \n        - (\ub9cc\uc57d \uc774\ub3d9\uc744 \uc6d0\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74, width_shift_range, height_shift_range \uc81c\uac70 \ud574\uc8fc\uc2dc\uba74 \ub429\ub2c8\ub2e4.)","74020578":"# Random Rotation\n- Albumentation\n    - border_mode : Define the Boundaries (\uacbd\uacc4\ub97c \uc815\uc758\ud569\ub2c8\ub2e4.)\n        - cv2.BORDER_CONSTANT  : add a border of a certain color (\uc77c\uc815\ud55c \uc0c9\uc0c1\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4.)\n        - cv2.BORDER_REPLICATE : Dulipcate the last element (\uc77c\uc815\ud55c \uc0c9\uc0c1\uc744 \ubcf5\uc81c\ud569\ub2c8\ub2e4.)\n        - cv2.BORDER_REFLECT : add a border like mirrow (\uac70\uc6b8\uacfc \uac19\uc774 \ubc18\uc0ac\ub41c \ud615\ud0dc\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4.)\n        - cv2.BORDER_WRAP : add the orginal image to the margin (\uc5ec\ubc31\uc5d0 \uc6d0\ub798 \uc774\ubbf8\uc9c0\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4.)\n        - cv2.BORDER_REFLECT_101 : There is sligt difference with BORDER_REFLECT \n            - (BORDER_REFLECT \uc640 \ubbf8\uc138\ud55c \ucc28\uc774\uac00 \uc788\uc2b5\ub2c8\ub2e4.)\n- ImageDataGenerator\n    - fill_mode : same border_mode (\uc704\uc640 \ub3d9\uc77c\ud569\ub2c8\ub2e4.)\n        - constant == cv2.BORDER_CONSTANT\n        - nearest == cv2.BORDER_REPLICATE\n        - reflect == cv2.BORDER_REFLECT\n        - wrap == cv2.BORDER_WRAP","c5373c68":"# RGBShift\n- Albumentation\n    - RGBShift\n        - r_shift_limit : Set a Scope(red shift range) in tuple. (\ud29c\ud50c \ub0b4\uc5d0 \ubcc0\ud658\ud560 \ubc94\uc704\ub97c \uc815\ud574\uc57c \ud569\ub2c8\ub2e4.)\n        - g_shift_limit : Set a Scope(green shift range) in tuple. (\ud29c\ud50c \ub0b4\uc5d0 \ubcc0\ud658\ud560 \ubc94\uc704\ub97c \uc815\ud574\uc57c \ud569\ub2c8\ub2e4.)\n        - b_shift_limit : Set a Scope(blue shift range) in tuple. (\ud29c\ud50c \ub0b4\uc5d0 \ubcc0\ud658\ud560 \ubc94\uc704\ub97c \uc815\ud574\uc57c \ud569\ub2c8\ub2e4.)   ","383576d5":"# ChannelShuffle\n- Albumentation\n    - Change RGB -> RBG\/BGR\/GRB\/BRG\/GBR\/RGB Shuffle   (3! \uc911 \ud55c\uac00\uc9c0\ub85c \uc0c9\uc0c1\uc758 \uc21c\uc11c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.) \n\n<br>\n\n- ImageDataGenerator\n    - channel_shfit_range : RGB +- value in range (\uc6d0\ubcf8 RGB \uac12\uc5d0\uc11c \ubc94\uc704 \ub0b4\uc758 \uac12\uc744 +- \ud569\ub2c8\ub2e4)","56ccb303":"# RandomBrightnessContest\n- Albumentation\n    - brightness_limit : Set a Scope(range) in tuple. (\ud29c\ud50c \ub0b4\uc5d0 \ubc94\uc704\ub97c \uc815\ud574\uc57c \ud569\ub2c8\ub2e4.)\n    - contrast_limit : Set a Scope(range) in tuple. (\ud29c\ud50c \ub0b4\uc5d0 \ubc94\uc704\ub97c \uc815\ud574\uc57c \ud569\ub2c8\ub2e4.)\n\n<br>\n\n- ImageDataGenerator\n    - brightness_range : Set a Scope(brightness_range) in tuple. (\ud29c\ud50c \ub0b4\uc5d0 \ubc1d\uae30 \ubc94\uc704\ub97c \uc815\ud574\uc57c \ud569\ub2c8\ub2e4.)","1103aaaf":"# If helpful or useful, Upvote!"}}