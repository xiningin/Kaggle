{"cell_type":{"4451129a":"code","04752939":"code","4ae7e141":"code","f0b74242":"code","4ac069a5":"code","a7a64c6d":"code","7c649cdc":"code","888cbc3f":"code","3e12f2b4":"code","f24329e9":"code","ed8b8549":"code","9feb1ddf":"code","6d12570b":"code","e14a5814":"code","993df3bb":"code","b4a0bbf7":"code","f21f13aa":"code","386aaa17":"code","2a8d7812":"code","db3cc00e":"code","53cecadd":"code","02faed2b":"code","83d36046":"code","e878018d":"code","2df60e6c":"code","9536f012":"code","f44ea6f6":"code","e302e68d":"markdown","14ef81fc":"markdown","5a7d2d33":"markdown","1ce16528":"markdown","e58aaf52":"markdown","598918db":"markdown","2f0dfe6d":"markdown","4ef61eb3":"markdown","e23eb19d":"markdown"},"source":{"4451129a":"import tensorflow as tf\nfrom tensorflow import keras\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport numpy as np","04752939":"(X_train, y_train) , (X_test, y_test) = keras.datasets.mnist.load_data()","4ae7e141":"len(X_train)","f0b74242":"len(X_test)","4ac069a5":"X_train[0].shape","a7a64c6d":"X_train[0]","7c649cdc":"plt.matshow(X_train[0])","888cbc3f":"y_train[0]","3e12f2b4":"X_train = X_train \/ 255\nX_test = X_test \/ 255","f24329e9":"X_train[0]","ed8b8549":"X_train_flattened = X_train.reshape(len(X_train), 28*28)\nX_test_flattened = X_test.reshape(len(X_test), 28*28)","9feb1ddf":"X_train_flattened.shape","6d12570b":"X_train_flattened[0]","e14a5814":"model = keras.Sequential([\n    keras.layers.Dense(10, input_shape=(784,), activation='sigmoid')\n])\n\nmodel.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])\n\nmodel.fit(X_train_flattened, y_train, epochs=5)","993df3bb":"model.evaluate(X_test_flattened, y_test)","b4a0bbf7":"y_predicted = model.predict(X_test_flattened)\ny_predicted[0]","f21f13aa":"plt.matshow(X_test[0])","386aaa17":"np.argmax(y_predicted[0])","2a8d7812":"y_predicted_labels = [np.argmax(i) for i in y_predicted]","db3cc00e":"y_predicted_labels[:5]","53cecadd":"cm = tf.math.confusion_matrix(labels=y_test,predictions=y_predicted_labels)\ncm","02faed2b":"import seaborn as sn\nplt.figure(figsize = (10,7))\nsn.heatmap(cm, annot=True, fmt='d')\nplt.xlabel('Predicted')\nplt.ylabel('Truth')","83d36046":"model = keras.Sequential([\n    keras.layers.Dense(100, input_shape=(784,), activation='relu'),\n    keras.layers.Dense(10, activation='sigmoid')\n])\n\nmodel.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])\n\nmodel.fit(X_train_flattened, y_train, epochs=5)","e878018d":"model.evaluate(X_test_flattened,y_test)","2df60e6c":"y_predicted = model.predict(X_test_flattened)\ny_predicted_labels = [np.argmax(i) for i in y_predicted]\ncm = tf.math.confusion_matrix(labels=y_test,predictions=y_predicted_labels)\n\nplt.figure(figsize = (10,7))\nsn.heatmap(cm, annot=True, fmt='d')\nplt.xlabel('Predicted')\nplt.ylabel('Truth')","9536f012":"model = keras.Sequential([\n    keras.layers.Flatten(input_shape=(28, 28)),\n    keras.layers.Dense(100, activation='relu'),\n    keras.layers.Dense(10, activation='sigmoid')\n])\n\nmodel.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])\n\nmodel.fit(X_train, y_train, epochs=10)","f44ea6f6":"model.evaluate(X_test,y_test)","e302e68d":"In this notebook we will classify handwritten digits using a simple neural network which has only input and output layers. We will than add a hidden layer and see how the performance of the model improves","14ef81fc":"<h1 style=\"color:black;font-family:georgia;font-size:23px;\"  align=center ><b>Do Upvote<\/b> this if you liked the notebook, follow for more<\/h1>\n<h1 style=\"color:black;font-family:georgia;font-size:20px;\"   align=center ><i>PS. I will try to add more to it <\/i><\/h1>","5a7d2d33":"<h3 style='color:purple'>Using Flatten layer so that we don't have to call .reshape on input dataset<\/h3>","1ce16528":"<h3 style='color:purple'>Very simple neural network with no hidden layers<\/h3>","e58aaf52":"<h3 style='color:purple'>Using hidden layer<\/h3>","598918db":"![image.png](attachment:image.png)","2f0dfe6d":"### <h1 style=\"color:teal ;font-family:georgia;font-size:43px;\"   align=center >Handwritten Digits Classification Using Neural Network<\/h1>","4ef61eb3":"Although I am using the data stored\/provided by Tensorflow 2.0 I have attached the dataset from kaggle into this notebook  ","e23eb19d":"**np.argmax finds a maximum element  from an array and returns the index of it**"}}