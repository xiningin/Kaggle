{"cell_type":{"581633b4":"code","0cd4d3c9":"code","361207ce":"code","ba13e73c":"code","02cce6f2":"code","3c1f5035":"code","f791b49c":"code","7baf0d86":"code","96cc8137":"code","52c583c4":"code","7faaefa6":"code","b87e5f08":"code","1eb0097f":"code","6a9a1a4a":"code","374aef70":"code","0d973f13":"code","31bda27d":"code","cd2773d1":"code","70b475ce":"code","0fe370fa":"code","686c2b8b":"code","1efc8adc":"code","77d909b5":"code","76c29d0b":"code","35760c33":"code","45f823a4":"code","cd7552a9":"code","9ed7bf62":"code","472728ac":"code","c7e2f6f8":"code","cc5e8968":"code","b72a19a0":"code","f6c5cf49":"code","5432c1ed":"code","47ccb6bb":"code","5bb6e0e2":"code","3bb38dde":"code","e5304117":"code","7e3760de":"code","66a5e08c":"code","eaba7e8a":"code","3260fcd4":"code","2db02082":"code","8f8a01af":"code","b78a8e9a":"code","adca3c19":"code","06743935":"code","7959b4df":"code","49533a11":"code","9e56b91a":"markdown","f0d758ce":"markdown","d18fa2c9":"markdown","a312466a":"markdown","9dde375c":"markdown","9a3be9a2":"markdown","723a3297":"markdown","026a23a6":"markdown","322b4549":"markdown","b47eb537":"markdown","fbb4fc88":"markdown","605973d1":"markdown","7332d43a":"markdown","c5e84d78":"markdown","af2d2e6a":"markdown","1a7a38f6":"markdown","f0884ae3":"markdown","9c5af9f9":"markdown","f910da53":"markdown","f30b41a4":"markdown","7cd579cb":"markdown","20dfeee9":"markdown","dbeb0ba4":"markdown","9d6284f7":"markdown","87fc9474":"markdown","16b6c67a":"markdown","cf289789":"markdown","99ade8f1":"markdown","40a873d7":"markdown","45261cdf":"markdown","184fc2e5":"markdown"},"source":{"581633b4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.express as px ","0cd4d3c9":"train_df=pd.read_csv('..\/input\/titanicdataset-traincsv\/train.csv')\ntrain_df","361207ce":"train_df.head()","ba13e73c":"train_df.info()","02cce6f2":"train_df.describe()","3c1f5035":"train_df.isnull().sum()","f791b49c":"train_df.isnull()","7baf0d86":"sns.heatmap(train_df.isnull())","96cc8137":"print(\"no. of males in the titanic:\",train_df['Sex'].value_counts()['male'])\nprint(\"no. of females in the titanic:\",train_df['Sex'].value_counts()['female'])\ntrain_df['Survived'].value_counts()[train_df['Sex']=='male']\ntrain_df['Survived'].value_counts()[train_df['Sex']=='female']","52c583c4":"plt.subplot(1,2,1)\nsns.countplot(x='Sex',data=train_df)\nplt.subplot(1,2,2)\nsns.countplot(data=train_df,x='Survived')","7faaefa6":"sns.countplot(x='Survived',data=train_df,palette='rainbow',hue='Sex')","b87e5f08":"sns.countplot(x='Survived',data=train_df,palette='rainbow',hue='Pclass')","1eb0097f":"train_df['Fare']\/\/=100","6a9a1a4a":"sns.countplot(data=train_df,x='Survived',hue=train_df['Fare'],palette='rainbow')","374aef70":"sns.set_style('whitegrid')\nsns.distplot(train_df['Age'],kde=False,bins=20,color='g')","0d973f13":"train_df['Survived'].value_counts()[1]","31bda27d":"train_df[['SibSp','Survived']].groupby(['SibSp'],as_index=False).mean().sort_values(ascending=False,by='SibSp')","cd2773d1":"sns.countplot(data=train_df,x='Survived',hue='SibSp',palette='rainbow')\nplt.legend()","70b475ce":"x=train_df['SibSp']\ny=train_df['Survived']\nfig,Axes=plt.subplots()\nplt.suptitle('SibSp vs Survived')\nplt.subplot(1,3,1)\nplt.scatter(x,y,marker='*',color='r',linewidth=5,s=25,edgecolor='g')\nAxes.set_title('using scatterplot')\nplt.subplot(1,3,2)\nplt.xlabel('SibSp')\nplt.ylabel('Survived')\nAxes.set_title('using plot ')\nplt.plot(x,y,'g*',linestyle='dashdot',linewidth=2,markersize=10)\nplt.subplot(1,3,3)\nplt.bar(x,y,align='center',color='black')\nAxes.set_title('using bar')\nplt.xlabel('SibSp')\nplt.ylabel('Survived')\n","0fe370fa":"train_df[['Sex','Survived']].groupby(['Sex'],as_index=False).mean().sort_values(by='Sex',ascending=False)","686c2b8b":"sns.boxplot(x='SibSp',y='Age',data=train_df)","1efc8adc":"def fill_age(cols):\n    SibSp = cols[0]\n    Age =cols[1]\n    if pd.isnull(Age):\n        if SibSp==0:\n            return 29\n        elif SibSp==1:\n            return 30\n        elif SibSp==2:\n            return 23\n        elif SibSp==3:\n            return 10\n        elif SibSp==4:\n            return 7\n        elif SibSp==5:\n            return 11\n        else:\n            return train_df.fillna('ffill')\n    else:\n        return Age\n    ","77d909b5":"train_df['Age']=train_df[[\"Age\",\"SibSp\"]].apply(fill_age,axis=1)","76c29d0b":"sns.heatmap(train_df.isnull())","35760c33":"train_df.isnull().sum()","45f823a4":"train_df['Embarked'].fillna('bfill',inplace=True)","cd7552a9":"train_df.isnull().sum()","9ed7bf62":"train_df.info()","472728ac":"# we can represent the given values except Name,Sex,Embarked ,Ticket\n# so we will convert object datatype into categorical values if possible or we will drop the unnecessary columns\npd.get_dummies(train_df)","c7e2f6f8":"# so we will create a copy of train_df and proceed accordingly\ntrain_copy=train_df.copy()\ntrain_copy","cc5e8968":"# now we will drop name and ticket columns because they can't be converted into valid categorical columns\ntrain_copy.drop(['Name','Ticket'],inplace=True,axis=1)","b72a19a0":"train_copy","f6c5cf49":"# so we will convert the Embarked and Sex to categorical values using get_dummies()\nSex_category=pd.get_dummies(train_copy['Sex'],drop_first=True)\nEmbarked_category=pd.get_dummies(train_copy['Embarked'],drop_first=True)","5432c1ed":"# drop Sex and Embarked\ntrain_copy.drop(['Sex','Embarked'],axis=1,inplace=True)","47ccb6bb":"# now we will add Sex_category and Embarked_category into the train_copy DataFrame\ntrain=pd.concat([train_copy,Sex_category,Embarked_category],axis=1)","5bb6e0e2":"train.head()","3bb38dde":"train.drop(['bfill'],axis=1,inplace=True)","e5304117":"train.info()","7e3760de":"sns.rugplot(train['Age'].isnull())","66a5e08c":"sns.jointplot(data=train,x=train['Survived'],y=train['Pclass'],kind='kde')","eaba7e8a":"sns.pairplot(train)","3260fcd4":"sns.distplot(train[['Survived','Pclass']],kde=True,bins=10)","2db02082":"sns.jointplot(x=train['male'],y=train['Pclass'],kind='kde')","8f8a01af":"sns.heatmap(train.corr())","b78a8e9a":"sns.boxplot(x='male',y='Pclass',data=train,color='k')\nsns.boxenplot(x='male',y='Pclass',data=train,color='g')","adca3c19":"sns.swarmplot(x='male',y='Pclass',data=train,color='k')\nsns.violinplot(x='male',y='Pclass',data=train,color='g')\nsns.stripplot(x='male',y='Pclass',data=train,color='r')","06743935":"sns.stripplot(x='Survived',y='SibSp',data=train,color='b')\nsns.swarmplot(x='Survived',y='SibSp',data=train,color='k')\nsns.violinplot(x='Survived',y='SibSp',data=train,palette='rainbow')\nsns.boxenplot(data=train,x='Survived',y='SibSp',color='m')\nsns.barplot(data=train,y='SibSp',x='Survived',color='y')\nsns.boxplot(x='Survived',y='SibSp',data=train,palette='dark')\nsns.countplot(data=train,y='SibSp',color='red')","7959b4df":"sns.factorplot(x='Pclass',y='SibSp',data=train)","49533a11":"train.head(10)","9e56b91a":"# Exploratory Data Analysis\n### let's find out the missing values and fill them with appropriate values","f0d758ce":"## Finding missing values","d18fa2c9":"# we can use the data provided efficiently only if the data is categorical format","a312466a":"### but if we look at this graph in this case majority of males killed during the disaster survival rate of females is more while the death rate of males is more as compared to females","9dde375c":"# cleansing of the data","9a3be9a2":"## looking at the heatmap we can conclude that majority of the cabin values are missing and some values of age are missing","723a3297":"## From the above plot we can also conclude that people who paid higher fares managed to survive ","026a23a6":"# From the above heatmap we can see all the missing values are resolved but if we see the missing values using isnull().sum() there are still some missing values in Embarked columns\n## so we will fill missing Embarked values with backward or forward fill","322b4549":"# Number of survivors of the titanic accident","b47eb537":"# Survived people vs Siblings\/Spouses aboard the Titanic","fbb4fc88":"### From the above observation we can map an estimated age to the null values in comparision with SibSp","605973d1":"# representing null\/NaN values using seaborn plotting techniques\n### representing using heatmap()","7332d43a":"## the above figure depicts that there are no missing values present in Age column","c5e84d78":"## if we look at the above countplot() then the total number of people survived to the total number of people travelled are comparable\n## we can predict that equal proportion of people were killed","af2d2e6a":"## visualize through categorical plottings","1a7a38f6":"## people who were living in better passenger classes survived people living in lower class were remained dead","f0884ae3":"## from above missing observations we learnt that around 20% of age values were missing.from the distribution large groups of passengers are of 15 to 35 years","9c5af9f9":"# No. of males and males travelled","f910da53":"## after data analysis we got the data that can be used for machine learning algorithms","f30b41a4":"# Reading the data\n### let's start by taking titanic dataset as .csv file","7cd579cb":"# description of data","20dfeee9":"# correlation of the train data","dbeb0ba4":"## we can also visualise the survival rate in gender category using count plot","9d6284f7":"# Using all the categorical plotting in a single figure","87fc9474":"### only 3 columns have null\/NaN values in the dataset of which 70% of cabin entries are missing and around 20% data entriees of age are missing \n","16b6c67a":"# importing modules\n### let's import some modules to get started!","cf289789":"# now let's plot the distribution plots for age and cabin as they contribute much of the missing values using distplot()","99ade8f1":"### From the above observation people with 1 Sibling\/Spouses survival and also death percentile is more","40a873d7":"# Visualise using some seaborn plotting techniques","45261cdf":"# so we now resolved all the missing values in the dataset","184fc2e5":"**Survived based on their gender**"}}