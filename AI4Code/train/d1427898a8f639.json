{"cell_type":{"c3291834":"code","d4cdacfa":"code","6647c6b0":"code","a6fe8cbd":"code","48760a68":"code","b9724a1b":"code","3cf34046":"code","6fe2f4e4":"code","c5043cae":"code","ffda6fc1":"code","d4733415":"code","687233db":"code","d030b189":"code","eaf75988":"code","f57ee03b":"code","2867ba69":"code","22e228b0":"code","fec53d42":"code","1c371c72":"markdown","a521f448":"markdown","63e223d3":"markdown","100239a0":"markdown","c88fdd31":"markdown","179c0902":"markdown","df5979f2":"markdown"},"source":{"c3291834":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib as ml\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score, roc_auc_score\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d4cdacfa":"iris = pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')\niris.head()","6647c6b0":"iris.drop(columns=['Id'],inplace=True)\niris = iris.rename(columns = {'SepalLengthCm':'SL','SepalWidthCm':'SW','PetalLengthCm':'PL','PetalWidthCm':'PW'})\niris['Species'].replace('Iris-setosa','0',inplace=True)\niris['Species'].replace('Iris-versicolor','1',inplace=True)\niris['Species'].replace('Iris-virginica','2',inplace=True)\niris","a6fe8cbd":"data = iris[['SL','PL','Species']]\ndata","48760a68":"X = data.iloc[:,:2].values\nY = data.iloc[:,-1].values\nscaler = StandardScaler()\n\nx_train,x_test,y_train,y_test = train_test_split(X,Y,test_size=0.2,random_state=9)\n\nx_train=scaler.fit_transform(x_train)\nx_test=scaler.fit_transform(x_test)","b9724a1b":"# 1\ndt = DecisionTreeClassifier(criterion='entropy',splitter='best')\ndt.fit(x_train,y_train)","3cf34046":"# 2\nknn = KNeighborsClassifier(n_neighbors = 13, algorithm = 'auto')\nknn.fit(x_train,y_train)","6fe2f4e4":"xc = np.arange(start = x_train[:,0].min()-1, stop = x_train[:,0].max()+1, step = 0.01)\nyc = np.arange(start = x_train[:,1].min()-1, stop = x_train[:,1].max()+1, step = 0.01)\nprint(xc.shape,yc.shape)","c5043cae":"XX,YY = np.meshgrid(xc,yc)\nprint(\"XX : \", XX.shape,\", YY : \",YY.shape)","ffda6fc1":"528 * 644","d4733415":"data_test = np.array([XX.ravel(),YY.ravel()]).T\ndata_test.shape","687233db":"# 1\ny_pred1 = dt.predict(data_test)\nprint(y_pred1.shape)\ny_pred1","d030b189":"# 2\ny_pred2 = knn.predict(data_test)\nprint(y_pred2.shape)\ny_pred2","eaf75988":"# 1\nplt.figure(figsize=(20,10),dpi=85)\nZ1 = y_pred1.reshape(XX.shape)\nplt.contourf(XX,YY,Z1)\nplt.show()","f57ee03b":"# 2\nplt.figure(figsize=(20,10),dpi=85)\nZ2 = y_pred2.reshape(XX.shape)\nplt.contourf(XX,YY,Z2)\nplt.show()","2867ba69":"# Assign colors to labels trained on\ncolors_dict = {'0':'white','1':'pink','2':'red'}\ny_train = [colors_dict[i] for i in y_train]\ny_train","22e228b0":"# Plotting\n# 1\nplt.figure(figsize=(20,10),dpi=85)\nplt.contourf(XX,YY,y_pred1.reshape(XX.shape),alpha=0.65)\nplt.scatter(x=x_train[:,0],y=x_train[:,1],c=y_train,marker='o')\nplt.xlabel(\"Sepal Length (Cm)\")\nplt.ylabel(\"Petal Length (Cm)\")\nplt.title('VISUALIZING DECISION BOUNDARY FOR DECISION TREE CLASSIFIER(CRITERION = ENTROPY)')\nplt.show()","fec53d42":"# 2\nplt.figure(figsize=(20,10),dpi=85)\nplt.contourf(XX,YY,y_pred2.reshape(XX.shape),alpha=0.65)\nplt.scatter(x=x_train[:,0],y=x_train[:,1],c=y_train,marker='o')\nplt.xlabel(\"Sepal Length (Cm)\")\nplt.ylabel(\"Petal Length (Cm)\")\nplt.title('VISUALIZING DECISION BOUNDARY FOR KNN CLASSIFIER')\nplt.show()","1c371c72":"##### 0 is Iris-setosa.\n##### 1 is Iris-versicolor.\n##### 2 is Iris-virginica.","a521f448":"## Visualizing the decision boundaries","63e223d3":"## Plotting the training data","100239a0":"##### Renaming columns and encoding the Species column","c88fdd31":"\n## Creating the input test data and Z(predicted labels)","179c0902":"## Creating and training the classifiers (Decision Tree & KNN)","df5979f2":"## Creating the meshgrid"}}