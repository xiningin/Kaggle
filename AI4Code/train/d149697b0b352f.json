{"cell_type":{"9afa6266":"code","684d68f4":"code","0d758fec":"code","490c86f7":"code","69679253":"code","7305b19c":"code","46c4afaa":"code","59bcd1ac":"code","a5324c6f":"code","4a20249d":"code","5f5cc140":"code","f758eb29":"code","818daab6":"code","4a05c928":"code","8f69048c":"code","548b492f":"markdown"},"source":{"9afa6266":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","684d68f4":"df = pd.read_csv('..\/input\/indian_liver_patient.csv')\ndf.head()","0d758fec":"df.describe().T","490c86f7":"#It is clear from the above described data that, Albumin_and_Globulin_Ratio columns has some missing rows.**\n#As Albumin_and_Globulin_Ratio count is 579, where as other columns rows are 583.\nprint( \"Albumin_and_Globulin_Ratio: \", df['Albumin_and_Globulin_Ratio'].isna().sum() )\nprint(\"-----------------------------------------------------\")\nprint( \"From entire dataset: \", df.isna().sum() )","69679253":"sns.countplot(data=df, x='Dataset')","7305b19c":"sns.countplot(data=df, x='Gender')","46c4afaa":"#As there are only four rows which are null in Albumin_and_Globulin_Ratio.\n#We can remove those four rows from dataset, It impact on information loss is least\ndf.dropna(inplace=True)\n#all the null valued rows are dropped now.\ndf.isna().sum()\n","59bcd1ac":"#Get dummy integer values for the String Values\ndf['Gender'] = pd.get_dummies(df['Gender'])['Female']\n#Female=1 and Male = 0\ndf.head()","a5324c6f":"# draw correlation heatmap\nfig, ax = plt.subplots(figsize=(15,10)) # Sample figsize in inches\nsns.heatmap(df.corr(), annot=True, linewidths=.5, ax=ax)\n","4a20249d":"# draw scatter matrix of all features\npd.plotting.scatter_matrix(df, figsize=(15,10))\ndf = df","5f5cc140":"#Take all features in features variable\nfeatures = df.drop('Dataset',axis=1)\nlabels = df['Dataset']\nfeatures.head()","f758eb29":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split","818daab6":"def pipeline(clfs, X_train, y_train, X_test, y_test):\n    accuracys = []\n    for i,clf in enumerate(clfs):\n        clf.fit(X_train, y_train)\n        preds = clf.predict(X_test)\n        accuracys.append(accuracy_score(y_test, preds))\n    return accuracys","4a05c928":"#Create test train set\nX_train, X_test, y_train, y_test = train_test_split(features,labels,test_size=0.25, random_state=45)\n","8f69048c":"clfs = [DecisionTreeClassifier(), RandomForestClassifier(), MLPClassifier(), LogisticRegression()]\nfor i in range(3):\n    print(pipeline(clfs, X_train, y_train, X_test, y_test))\n","548b492f":"**We can observe the scores of each classifier respectively for 3 iterations.**"}}