{"cell_type":{"9238be28":"code","c8d0fc0e":"code","476a1f24":"code","5254ec90":"code","fab01796":"code","b5c63445":"code","69184fbc":"code","e023c218":"code","5c968b07":"code","f6aefb2a":"code","88b3470d":"code","5d85f72c":"code","065370d7":"code","4e45ae00":"code","387c6cf2":"code","6856e6c7":"code","adc72dfc":"code","02831b76":"code","6af1e676":"code","d15f4544":"code","84361754":"code","4ba0efb0":"code","6ede6640":"code","190089c6":"code","fa8ee789":"code","e721c503":"code","bc6c92bd":"code","77f68622":"code","bdfd1972":"code","71be0281":"code","3235c1cf":"code","2f56ad7b":"code","b8e52e8c":"code","989f7802":"code","f14147a8":"code","35769fd4":"code","667985c5":"code","3fe6e6d1":"code","b761f117":"code","df339847":"code","fa4c685f":"code","cde409a5":"code","6c100b4d":"code","13518e5e":"code","601af5a8":"code","8a1e178c":"code","e597a12a":"code","97a4a92f":"code","d9383a4b":"code","863201d5":"code","86d01238":"code","a2f59d5e":"code","c5305cf9":"code","8de03dd7":"code","258df39f":"code","097d703e":"code","32387a4a":"code","c2aa8608":"code","0f39c827":"code","d526d9d6":"code","07f4c310":"code","6359e799":"code","06b705c1":"code","a91f3685":"code","c05cc094":"code","23458eed":"code","3b039e9d":"code","ecab7053":"code","ecde4db6":"code","630e4116":"code","158239a5":"code","667dc131":"code","077b447b":"code","49a52d26":"code","68c46bb9":"code","e3570c0a":"code","bb317af2":"code","7b7a8f09":"code","75a9bf93":"markdown","3f92d647":"markdown","f37c2962":"markdown","65adbe63":"markdown","b3dfea62":"markdown","f8c86a0c":"markdown","a1a197a6":"markdown","3ff6cae2":"markdown","d7a0116b":"markdown","cd973060":"markdown","4f624802":"markdown","cbe8447e":"markdown","3104d816":"markdown","a63ace12":"markdown","53129e80":"markdown","7d10cbd6":"markdown","bbc5d584":"markdown","ce79ea00":"markdown","cf8d0d14":"markdown","5cfd3923":"markdown","c107e937":"markdown","62f38ec3":"markdown"},"source":{"9238be28":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime\nfrom sklearn import preprocessing\nimport os\n%matplotlib inline","c8d0fc0e":"\n\n# train_date\u3092\u53d6\u5f97\nitems = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/items.csv')\nitem_categories = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nshops = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/shops.csv')\nsales_train = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv',parse_dates=[\"date\"])\ntest = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/test.csv')","476a1f24":"test.head()","5254ec90":"sales_train.head()","fab01796":"shops.head()","b5c63445":"items.head()","69184fbc":"item_categories.head()","e023c218":"# ' - '\u3067\u6587\u5b57\u5217\u5206\u5272\nitem_categories['big_category_name'] = item_categories['item_category_name'].map(lambda x: x.split(' - ')[0])\nitem_categories['big_category_name'].value_counts()","5c968b07":"# \u0427\u0438\u0441\u0442\u044b\u0435 \u043d\u043e\u0441\u0438\u0442\u0435\u043b\u0438 (\u0448\u0442\u0443\u0447\u043d\u044b\u0435)\u3068\u0427\u0438\u0441\u0442\u044b\u0435 \u043d\u043e\u0441\u0438\u0442\u0435\u043b\u0438 (\u0448\u043f\u0438\u043b\u044c)\u3092\u0427\u0438\u0441\u0442\u044b\u0435 \u043d\u043e\u0441\u0438\u0442\u0435\u043b\u0438\u3067\u307e\u3068\u3081\u3066\u3057\u307e\u3046\nitem_categories.loc[\n    item_categories['big_category_name']=='\u0427\u0438\u0441\u0442\u044b\u0435 \u043d\u043e\u0441\u0438\u0442\u0435\u043b\u0438 (\u0448\u0442\u0443\u0447\u043d\u044b\u0435)','big_category_name'\n] = '\u0427\u0438\u0441\u0442\u044b\u0435 \u043d\u043e\u0441\u0438\u0442\u0435\u043b\u0438'\n\n\nitem_categories.loc[\n    item_categories['big_category_name']=='\u0427\u0438\u0441\u0442\u044b\u0435 \u043d\u043e\u0441\u0438\u0442\u0435\u043b\u0438 (\u0448\u043f\u0438\u043b\u044c)','big_category_name'\n] = '\u0427\u0438\u0441\u0442\u044b\u0435 \u043d\u043e\u0441\u0438\u0442\u0435\u043b\u0438'\n\nitem_categories['big_category_name'].value_counts()","f6aefb2a":"item_categories","88b3470d":"\n# item_category_name\u306e\u30ab\u30e9\u30e0\u3092\u6d88\u3059\nitem_categories=item_categories.drop('item_category_name',axis=1)","5d85f72c":"item_categories","065370d7":"items","4e45ae00":"# item\u306eDF\u3068\u30de\u30fc\u30b8\u3057\u3066\u3084\u308b\nitems=items.merge(item_categories)","387c6cf2":"items","6856e6c7":"items=items.drop(['item_name','item_category_id'],axis=1)\n","adc72dfc":"items","02831b76":"\nshops['city_name'] = shops['shop_name'].map(lambda x: x.split(' ')[0])\n\nshops['city_name'].value_counts()","6af1e676":"# !\u042f\u043a\u0443\u0442\u0441\u043a\u3068\u042f\u043a\u0443\u0442\u0441\u043a\u3092\u4e00\u7dd2\u306b\u3059\u308b\nshops.loc[shops['city_name']=='!\u042f\u043a\u0443\u0442\u0441\u043a','city_name'] = '\u042f\u043a\u0443\u0442\u0441\u043a'\n\nshops['city_name'].value_counts()","d15f4544":"shops","84361754":"shops=shops.drop('shop_name',axis=1)\nshops","4ba0efb0":"# \u65e5\u6b21\u58f2\u308a\u4e0a\u3052\u984d\nsales_train['date_sales'] = sales_train['item_cnt_day'] * sales_train['item_price']\nsales_train","6ede6640":"sales_train[sales_train['item_cnt_day']<0].count()","190089c6":"sales_train[sales_train['item_cnt_day']<0]","fa8ee789":"sales_train.index[sales_train['item_cnt_day']<0]","e721c503":"sales_train=sales_train.drop(sales_train.index[sales_train['item_cnt_day']<0])\nsales_train","bc6c92bd":"# \u6708\u6b21shop_id*item_id\u5225\u58f2\u4e0a\u70b9\u6570\u306e\u30ab\u30e9\u30e0\u3092\u4f5c\u308b\nmon_shop_item_cnt = sales_train[\n    ['date_block_num','shop_id','item_id','item_cnt_day']\n].groupby(\n    ['date_block_num','shop_id','item_id'],\n    as_index=False\n).sum().rename(columns={'item_cnt_day':'mon_shop_item_cnt'})\nmon_shop_item_cnt","77f68622":"# shop_id\u3001item_id\u306e\u304f\u304f\u308a\u95a2\u4fc2\u306a\u304f\u6708\u306e\u5408\u8a08\u58f2\u4e0a\u70b9\u6570\u3092\u30b0\u30e9\u30d5\u5316\u3057\u3066\u50be\u5411\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306e\u30b0\u30e9\u30d5\u3092\u4f5c\u308b\nfor_graph1=mon_shop_item_cnt[['date_block_num','mon_shop_item_cnt']].groupby('date_block_num').sum()\nfor_graph1","bdfd1972":"# \u6708\u6b21shop_id*item_id\u5225\u58f2\u4e0a\u91d1\u984d\nmon_shop_item_sales = sales_train[\n    ['date_block_num','shop_id','item_id','date_sales']\n].groupby(\n    ['date_block_num','shop_id','item_id'],\n    as_index=False\n).sum().rename(columns={'date_sales':'mon_shop_item_sales'})\nmon_shop_item_sales","71be0281":"# shop_id\u3001item_id\u306e\u304f\u304f\u308a\u95a2\u4fc2\u306a\u304f\u3001\u6708\u306e\u5408\u8a08\u58f2\u4e0a\u984d\u3092\u8868\u3059\u30b0\u30e9\u30d5\u3092\u4f5c\u308b\nfor_graph2=mon_shop_item_sales[['date_block_num','mon_shop_item_sales']].groupby('date_block_num').sum()\nfor_graph2","3235c1cf":"# \u6708\u3054\u3068\u306e\u5e97\u3001\u5546\u54c1\u306e\u304f\u304f\u308a\u3092\u9664\u3044\u305f\u5546\u54c1\u306e\u5408\u8a08\u58f2\u4e0a\u984d\nplt.title('graph2')\nplt.xlabel('date_block_num')\nplt.ylabel('month_sales')\nplt.plot('mon_shop_item_sales',data=for_graph2)","2f56ad7b":"# \u6708\u3054\u3068\u306e\u5e97\u3001\u5546\u54c1\u306e\u304f\u304f\u308a\u3092\u9664\u3044\u305f\u8ca9\u58f2\u6570\u306e\u5408\u8a08\nplt.title('graph1')\nplt.xlabel('date_block_num')\nplt.ylabel('month_num')\nplt.plot('mon_shop_item_cnt',data=for_graph1)","b8e52e8c":"data_matome=mon_shop_item_cnt.merge(mon_shop_item_sales)\ndata_matome","989f7802":"items","f14147a8":"shops.head()","35769fd4":"data_matome=data_matome.merge(shops)","667985c5":"data_matome","3fe6e6d1":"data_matome=data_matome.merge(items)","b761f117":"data_matome","df339847":"for_graph3= data_matome.groupby(\n    ['date_block_num','big_category_name'],\n    as_index=False\n).sum()\nplt.figure(figsize=(20, 10))\nsns.lineplot(x='date_block_num',y='mon_shop_item_cnt',data=for_graph3,hue='big_category_name')\nplt.title('Montly item counts by big category')","fa4c685f":"for_graph4= data_matome.groupby(\n    ['date_block_num','city_name'],\n    as_index=False\n).sum()\nplt.figure(figsize=(20, 10))\nsns.lineplot(x='date_block_num',y='mon_shop_item_cnt',data=for_graph4,hue='city_name')\nplt.title('Montly item counts by city')","cde409a5":"# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u542b\u307e\u308c\u308b\u5e97\u8217ID\u00d7\u5546\u54c1ID\u3001\u304b\u3064\u3001\u6708\u306e\u30b7\u30fc\u30b1\u30f3\u30b9(date_block_num)\u304c0~34\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u751f\u6210\u3059\u308b\n\n\ntrain_full_comb = pd.DataFrame()\nfor i in range(35):\n    mid = test[['shop_id','item_id']]\n    mid['date_block_num'] = i\n    train_full_comb = pd.concat([train_full_comb,mid],axis=0)","6c100b4d":"train_full_comb","13518e5e":"# \u6708\u6b21\u58f2\u4e0a\u5546\u54c1\u6570\u3092\u30de\u30fc\u30b8\ntrain_test = pd.merge(\n    train_full_comb,\n    mon_shop_item_cnt,\n    on=['date_block_num','shop_id','item_id'],\n    how='left'\n)\n\n","601af5a8":"train_test","8a1e178c":"# \u6708\u6b21\u58f2\u4e0a\u91d1\u984d\u3092\u30de\u30fc\u30b8\ntrain_test = pd.merge(\n    train_test,\n    mon_shop_item_sales,\n    on=['date_block_num','shop_id','item_id'],\n    how='left'\n)","e597a12a":"train_test","97a4a92f":"\n# \u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u30de\u30b9\u30bf\u3092\u30de\u30fc\u30b8\n# item_id\u306ejoin\ntrain_test = pd.merge(\n    train_test,\n    items[['item_id','big_category_name']],\n    on='item_id',\n    how='left'\n)","d9383a4b":"train_test","863201d5":"items","86d01238":"shops","a2f59d5e":"# shop_id\u306ejoin\ntrain_test = pd.merge(\n    train_test,\n    shops[['shop_id','city_name']],\n    on='shop_id',\n    how='left'\n)","c5305cf9":"train_test","8de03dd7":"train_test['mon_shop_item_cnt'] = train_test['mon_shop_item_cnt'].clip(0,20)","258df39f":"# \u30e9\u30b0\u751f\u6210\u5bfe\u8c61\u306e\u30ab\u30e9\u30e0\nlag_col_list = ['mon_shop_item_cnt','mon_shop_item_sales']\n# \u30e9\u30b0\u30ea\u30b9\u30c8(1,2,3,11,12\u304b\u6708\u524d)\nlag_num_list = [1,2,3,11,12]\n\n# shop_id*item_id*date_block_num\u3067\u30bd\u30fc\u30c8\ntrain_test = train_test.sort_values(\n    ['shop_id', 'item_id','date_block_num'],\n    ascending=[True, True,True]\n).reset_index(drop=True)\n\n","097d703e":"train_test","32387a4a":"# \u30e9\u30b0\u7279\u5fb4\u91cf\u306e\u751f\u6210\nfor lag_col in lag_col_list:\n    for lag in lag_num_list:\n        set_col_name =  lag_col + '_' +  str(lag)\n        df_lag = train_test[['shop_id', 'item_id','date_block_num',lag_col]].sort_values(\n            ['shop_id', 'item_id','date_block_num'],\n            ascending=[True, True,True]\n        ).reset_index(drop=True).shift(lag).rename(columns={lag_col: set_col_name})\n        train_test = pd.concat([train_test, df_lag[set_col_name]], axis=1)","c2aa8608":"train_test","0f39c827":"# NaN\u3092\uff10\u3067\u57cb\u3081\u3066\u3084\u308b\u3001\n\n# \u7591\u554f\u70b9\u3001\u76ee\u7684\u5909\u6570\u3082\u304a\u304d\u304b\u3048\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308b\u3051\u3069\u672c\u5f53\u306b\u305d\u308c\u3067\u3044\u3044\u306e\u304b\ntrain_test=train_test.fillna(0)","d526d9d6":"train_test","07f4c310":"train_=train_test[(train_test['date_block_num']<=33)&(train_test['date_block_num']>=12)].reset_index(drop=True)\n","6359e799":"train_","06b705c1":"test_ = train_test[train_test['date_block_num']==34].reset_index(drop=True)\n ","a91f3685":"test_","c05cc094":"from sklearn.preprocessing import LabelEncoder\nobj_col_list = ['big_category_name','city_name']\nfor obj_col in obj_col_list:\n    le = LabelEncoder()\n    train_[obj_col] = pd.DataFrame({obj_col:le.fit_transform(train_[obj_col])})\n    test_[obj_col] = pd.DataFrame({obj_col:le.fit_transform(test_[obj_col])})","23458eed":"train_y = train_['mon_shop_item_cnt']\ntrain_X = train_.drop(columns=['mon_shop_item_cnt','mon_shop_item_sales','date_block_num'])\ntest_X = test_.drop(columns=['mon_shop_item_cnt','mon_shop_item_sales','date_block_num'])","3b039e9d":"train_y","ecab7053":"train_X","ecde4db6":"list(le.classes_)","630e4116":"import xgboost as xgb\ndm_train = xgb.DMatrix(train_X, label=train_y)","158239a5":"param = {\n    'max_depth': 8, \n    'eta': 0.1, \n    'objective': 'reg:squarederror',\n    'colsample_bytree':1.0,\n    'colsample_bylevel':0.3,\n    'subsample':0.9,\n    'gamma':0,\n    'lambda':1,\n    'alpha':0,\n    'min_child_weight':1\n    \n}","667dc131":"num_round=100,\nmodel = xgb.train(param, dm_train)","077b447b":"xgb.plot_importance(model)","49a52d26":"# \u6728\u306e\u8868\u793a\nxgb.to_graphviz(model)","68c46bb9":"# \u30c6\u30b9\u30c8\u7528\u306e\u30c7\u30fc\u30bf\u3092\u751f\u6210\ndm_test = xgb.DMatrix(test_X)\n\n# \u4e88\u6e2c\ny_pred = model.predict(dm_test)","e3570c0a":"y_pred","bb317af2":"np.sqrt(\n    np.mean(\n        np.square(\n            np.array(\n                np.array(train_y) - model.predict(dm_train)\n            )\n        )\n    )\n)","7b7a8f09":"test_y = model.predict(dm_test)\ntest_X['item_cnt_month'] = test_y\nsubmission = pd.merge(\n    test,\n    test_X[['shop_id','item_id','item_cnt_month']],\n    on=['shop_id','item_id'],\n    how='left'\n)\n# \u63d0\u51fa\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\nsubmission[['ID','item_cnt_month']].to_csv('submission1.csv', index=False)","75a9bf93":"**\u5f8c\u3005big_category_name\u3092label_encoding\u3059\u308b\u3053\u3068\u3092\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b**\n","3f92d647":"item_cnt_day\u304c\u8ca0\u306e\u3084\u3064\u306fNaN\u3068\u307f\u306a\u3057\u3066\u6d88\u53bb\u3059\u308b","f37c2962":"\u6708\u8ca9\u58f2\u6570\u306f\u30b8\u30e7\u30b8\u30e7\u306b\u6e1b\u5c11\u3057\u3066\u3044\u3063\u3066\u308b\n\u306a\u3093\u3067\uff1f\n\n\u8ca9\u58f2\u984d\u306e\u9ad8\u3044\u5546\u54c1\u3070\u304b\u308a\u304c\u58f2\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\uff1f\n","65adbe63":"# \uff14.\u6708\u6b21shop_id*item_id\u5225\u58f2\u4e0a\u70b9\u6570, \u6708\u6b21shop_id*item_id\u5225\u58f2\u4e0a\u91d1\u984d\u306e\u30ab\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u3084\u308b","b3dfea62":"# \uff11\uff0e\u5168\u30c7\u30fc\u30bf\u306e\u6982\u8981\u78ba\u8a8d\n\n","f8c86a0c":"# 11.model\u69cb\u7bc9","a1a197a6":"# \uff17.\u30e9\u30b0\u7279\u5fb4\u91cf\u4f5c\u6210\n","3ff6cae2":"shop_name\u306f\u3001\u5e02\u540d\u2192\u5e97\u540d\u307f\u305f\u3044\u306a\u69cb\u6210\u3089\u3057\u3044\n\u306e\u3067\u3001\u4e00\u756a\u5927\u304d\u3044\u5206\u985e\u3067\u3042\u308b\u5e02\u306e\u60c5\u5831\u3092\u4f7f\u3063\u3066\u3084\u308b\n\nshop\u306e\u540d\u524d\u81ea\u4f53\u306f\u95a2\u4fc2\u306a\u3044\u3060\u308d\u3046\u3001\u3088\u307b\u3069\u306e\u30d6\u30e9\u30f3\u30c9\u3068\u304b\u3067\u306a\u3044\u9650\u308a","d7a0116b":"# \uff15.\u4eca\u307e\u3067\u4f5c\u3063\u305f\u30c7\u30fc\u30bf\u3092\u307e\u3068\u3081\u3066\u53ef\u8996\u5316","cd973060":"\u30e9\u30b0\u306f\u76f4\u8fd1\u306e1\uff0c2\uff0c3\u30f6\u6708\u524d\u3068\u4e00\u5e74\u3054\u3068\u306b\u5468\u671f\u6027\u304c\u3042\u3063\u305f\u306e\u3067\u300111\uff0c12\u304b\u6708\u307e\u3048\u306e\u3082\u306e\u3082\u53d6\u3063\u3066\u3084\u308b","4f624802":"# \uff12.big_category\u306e\u30ab\u30e9\u30e0\u3092\u4f5c\u6210\nitem_cagory_name\u306fPC - \u0413\u0430\u0440\u043d\u0438\u0442\u0443\u0440\u044b\/\u041d\u0430\u0443\u0448\u043d\u0438\u043a\u0438\t\u306e\u3088\u3046\u306b\n\u5927\u5206\u985e-\u5c0f\u5206\u985e\u3068\u3044\u3046\u8a18\u6cd5\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u5927\u5206\u985e\u3060\u3051\u3067\u518d\u5ea6\u307e\u3068\u3081\u308b","cbe8447e":"### \u7591\u554f\u70b9\u3001\u76ee\u7684\u5909\u6570\u3082\u304a\u304d\u304b\u3048\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308b\u3051\u3069\u672c\u5f53\u306b\u305d\u308c\u3067\u3044\u3044\u306e\u304b","3104d816":"item_name\u306f\u3042\u307e\u308a\u95a2\u4fc2\u306a\u3055\u305d\u3046\u306a\u306e\u3067drop\u3059\u308b\nitem_category_id\u306f\u5f8c\u3005big_category\u3067label_encoding\u3059\u308b\u306e\u3067\u6d88\u3059","a63ace12":"# 8.train\u30c7\u30fc\u30bf\u3068test\u30c7\u30fc\u30bf\u3092\u5206\u3051\u3066\u3084\u308b","53129e80":"True target values are clipped into [0,20] range.\n\n\u3068\u3044\u3046\u8a18\u8ff0\u304cKaggle\u5074\u306b\u3042\u3063\u305f\u306e\u3067\u3001mon_shop_item_cnt\u306e\u7bc4\u56f2\u30920\u304b\u308920\u306b\u6307\u5b9a","7d10cbd6":"\u30fbID - an Id that represents a (Shop, Item) tuple within the test set\n\n\u30fbshop_id - unique identifier of a shop\n\n\u30fbitem_id - unique identifier of a product\n\n\u30fbitem_category_id - unique identifier of item category\n\n\u30fbitem_cnt_day - number of products sold. You are predicting a \nmonthly amount of this measure\n\n\u30fbitem_price - current price of an item\n\n\u30fbdate - date in format dd\/mm\/yyyy\n\n\u30fbdate_block_num - a consecutive month number, used for convenience. January 2013 is 0, February 2013 is 1,..., October 2015 is 33\n\n\u30fbitem_name - name of item\n\n\u30fbshop_name - name of shop\n\nitem_category_name - name of item category","bbc5d584":"# 10.\u7279\u5fb4\u91cf\u3068\u76ee\u7684\u5909\u6570\u306e\u5206\u96e2","ce79ea00":"\u5e74\u8ca9\u58f2\u984d\u306f\u5468\u671f\u7684\u306b\u5909\u5316\u3057\u3066\u3044\u3066\u6bce\u5e74\u540c\u3058\u3088\u3046\u306a\u5024\n\n12\u6708\u304c\u4e00\u756a\u9ad8\u304f\u306a\u308b\u50be\u5411\n\u6d88\u8cbb\u8005\u306e\u8cfc\u8cb7\u610f\u6b32\u304c\u6700\u3082\u9ad8\u304f\u306a\u308b\u4ed8\u304d\u3060\u3068\u3044\u3048\u308b\n\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f11\u6708\u306a\u306e\u3067\u307b\u304b\u306e\u6708\u3088\u308a\u5927\u304d\u304f\u306a\u308b\u306f\u305a","cf8d0d14":"# \uff13.city_name\u306e\u30ab\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u3084\u308b","5cfd3923":"# 9.big_category_name,city_name\u3092label_encording\u3059\u308b","c107e937":"#### \u3053\u3053\u3067\u6700\u592712\u304b\u6708\u524d\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u3044\u308b\u306e\u3067\u3001data_block_num\u304c12\u4ee5\u4e0a\u306e\u3082\u306e\u3092\u4f7f\u3063\u3066\u3084\u308b","62f38ec3":"# \uff16.train\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u3066\u3044\u304f"}}