{"cell_type":{"426115a0":"code","2e4fbff3":"code","730291c2":"code","827c803e":"code","3b787df6":"code","5d0251a2":"code","42e900fd":"code","c06a75ef":"code","7b92f6bb":"code","398dc758":"code","a163573a":"code","618d6022":"code","68e073dc":"code","8586a2d1":"code","88c71d04":"code","58b3e054":"code","78e47779":"code","ebf8553d":"code","302e92c9":"code","68805332":"code","9bf4699c":"code","ae07e892":"code","8b8e85d5":"code","3a6e0034":"code","a750a8db":"code","bdaa77f6":"code","7d59170d":"code","be17e983":"code","50c764d6":"code","b1fbaf3d":"code","cc820d97":"code","9fd2e9a8":"code","73a2c3fb":"code","7f8f0b4f":"code","9dfb0437":"code","ed91c238":"code","04f18e64":"code","4d3a1811":"code","4b001107":"code","fb3a12cd":"code","2d105fa9":"code","05b4d4ea":"code","6e7c3403":"code","b334d292":"code","221daa1d":"code","4a6628eb":"code","da264901":"code","b7d139dd":"code","29a5427a":"code","09078fe3":"code","91bb1085":"code","acd566f2":"markdown","55a585fa":"markdown","749fed0f":"markdown","8fc6c0d3":"markdown","b649d0e5":"markdown","8da3c7f9":"markdown","45849190":"markdown","e0fea1a1":"markdown","d5a9504c":"markdown","930cafb7":"markdown","d52352da":"markdown","f2e27546":"markdown","50233014":"markdown","c3c7e55c":"markdown","eb585ea6":"markdown","140e2dde":"markdown","86ca2184":"markdown","c2dc4baa":"markdown","b672ff4a":"markdown","145ea082":"markdown","16cdbe24":"markdown","f74fbb7d":"markdown","4b6af087":"markdown","9b3f8502":"markdown","76c7e9a5":"markdown","8a88ebab":"markdown","267701de":"markdown","e1336de5":"markdown","104d2b1f":"markdown","89ed8b3f":"markdown","92bcda13":"markdown","cafdad90":"markdown","a4fb1037":"markdown","1fae8b1b":"markdown"},"source":{"426115a0":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nplt.style.use('seaborn-darkgrid')\nimport seaborn as sns\n\n\nfrom collections import Counter\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","2e4fbff3":"train_df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest_PassengerId = test_df[\"PassengerId\"]","730291c2":"train_df.columns","827c803e":"train_df.head()","3b787df6":"train_df.describe()","5d0251a2":"train_df.info()","42e900fd":"def bar_plot(variable):\n    \"\"\"\n        input: variable ex: \"Sex\"\n        output: bar plot & value count\n    \"\"\"\n    # get feature\n    var = train_df[variable]\n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))\n    ","c06a75ef":"cat1 = [\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"]\nfor i in cat1:\n    bar_plot(i)","7b92f6bb":"cat2 = [\"Cabin\", \"Name\", \"Ticket\"]\nfor i in cat2:\n    print(\"{} \\n\".format(train_df[i].value_counts()))","398dc758":"def plot_hist(variable):\n    var = train_df[variable]\n    varValue = var.value_counts()\n    plt.figure(figsize = (9,3))\n    plt.hist(train_df[variable], bins = 100)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))","a163573a":"numVar = [\"Fare\", \"Age\",\"PassengerId\",\"SibSp\"]\nfor i in numVar:\n    plot_hist(i)","618d6022":"# Plcass vs Survived\ntrain_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","68e073dc":"# Sex vs Survived\ntrain_df[[\"Sex\",\"Survived\"]].groupby([\"Sex\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","8586a2d1":"# Sibsp vs Survived\ntrain_df[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","88c71d04":"# Parch vs Survived\ntrain_df[[\"Parch\",\"Survived\"]].groupby([\"Parch\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","58b3e054":"# Embarked vs Survived\ntrain_df[[\"Embarked\",\"Survived\"]].groupby([\"Embarked\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","78e47779":"# Sex - Pclass - Survived\ntrain_df[[\"Sex\",\"Pclass\",\"Survived\"]].groupby([\"Sex\",\"Pclass\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","ebf8553d":"# Age - Survived\ntrain_df[[\"Age\",\"Survived\"]].groupby([\"Age\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","302e92c9":"dfAgeSurvived = train_df[[\"Age\",\"Survived\"]].groupby([\"Age\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)\n\n\nplt.scatter(dfAgeSurvived[\"Age\"],dfAgeSurvived[\"Survived\"])\nplt.show()","68805332":"train_df_survived = train_df[train_df[\"Survived\"]==1]\n\nplt.figure(figsize = (9,3))\nplt.hist(train_df_survived[\"Age\"], bins = 30)\nplt.xlabel(\"Age\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Age distribution for survived with hist\")\nplt.show()","9bf4699c":"train_df_notsurvived = train_df[train_df[\"Survived\"]==0]\n\nplt.figure(figsize = (9,3))\nplt.hist(train_df_notsurvived[\"Age\"], bins = 30)\nplt.xlabel(\"Age\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Age distribution for not survived with hist\")\nplt.show()","ae07e892":"def detect_outliers(df,features):\n    outlier_indices = []\n\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25) \n        # 3rd quartile\n        Q3 = np.percentile(df[c],75) \n        # IQR\n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n\n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n    \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 1)\n    \n    return multiple_outliers","8b8e85d5":"train_df.describe()","3a6e0034":"train_df.loc[detect_outliers(train_df,[\"Fare\",\"SibSp\"])]","a750a8db":"# drop outliers\ntrain_df = train_df.drop(detect_outliers(train_df,[\"SibSp\",\"Fare\"]),axis = 0).reset_index(drop = True)","bdaa77f6":"train_df_len = len(train_df)\ntrain_df = pd.concat([train_df,test_df],axis = 0).reset_index(drop = True)","7d59170d":"train_df.head()","be17e983":"train_df.columns[train_df.isnull().any()]","50c764d6":"train_df.isnull().sum()","b1fbaf3d":"train_df[train_df[\"Embarked\"].isnull()]","cc820d97":"train_df.boxplot(column=\"Fare\",by = \"Embarked\")\nplt.show()","9fd2e9a8":"train_df[\"Embarked\"] = train_df[\"Embarked\"].fillna(\"C\")\ntrain_df[train_df[\"Embarked\"].isnull()]","73a2c3fb":"train_df[train_df[\"Fare\"].isnull()]","7f8f0b4f":"train_df[\"Fare\"] = train_df[\"Fare\"].fillna(np.mean(train_df[train_df[\"Pclass\"] == 3][\"Fare\"]))","9dfb0437":"train_df[train_df[\"Fare\"].isnull()]","ed91c238":"list1 = [\"SibSp\", \"Parch\", \"Age\", \"Fare\", \"Survived\"]\nsns.heatmap(train_df[list1].corr(), annot = True, fmt = \".2f\")\nplt.show()","04f18e64":"factor = sns.factorplot(x = \"SibSp\", y = \"Survived\", data = train_df, kind = \"bar\", size = 5)\nfactor.set_ylabels(\"Survived Probability\")\nplt.show()","4d3a1811":"factor = sns.factorplot(x = \"Parch\", y = \"Survived\", kind = \"bar\", data = train_df, size = 6)\nfactor.set_ylabels(\"Survived Probability\")\nplt.show()","4b001107":"factor = sns.factorplot(x = \"Pclass\", y = \"Survived\", data = train_df, kind = \"bar\", size = 6)\nfactor.set_ylabels(\"Survived Probability\")\nplt.show()","fb3a12cd":"faced = sns.FacetGrid(train_df, col = \"Survived\")\nfaced.map(sns.distplot, \"Age\", bins = 25)\nplt.show()","2d105fa9":"factor = sns.factorplot(x = \"Sex\", y = \"Survived\", data = train_df, kind = \"bar\", size = 6)\nfactor.set_ylabels(\"Survived Probability\")\nplt.show()","05b4d4ea":"facegrid = sns.FacetGrid(train_df, col = \"Survived\", row = \"Pclass\", size = 3)\nfacegrid.map(plt.hist, \"Age\", bins = 25)\nfacegrid.add_legend()\nplt.show()","6e7c3403":"facegrid = sns.FacetGrid(train_df, row = \"Embarked\", size = 3)\nfacegrid.map(sns.pointplot, \"Pclass\",\"Survived\",\"Sex\")\nfacegrid.add_legend()\nplt.show()","b334d292":"facegrid = sns.FacetGrid(train_df, row = \"Embarked\", col = \"Survived\", size = 3)\nfacegrid.map(sns.barplot, \"Sex\", \"Fare\")\nfacegrid.add_legend()\nplt.show()","221daa1d":"train_df[train_df[\"Age\"].isnull()]","4a6628eb":"sns.factorplot(x = \"Sex\", y = \"Age\", data = train_df, kind = \"box\")\nplt.show()","da264901":"sns.factorplot(x = \"Sex\", y = \"Age\", hue = \"Pclass\",data = train_df, kind = \"box\")\nplt.show()","b7d139dd":"sns.factorplot(x = \"Parch\", y = \"Age\", data = train_df, kind = \"box\")\nsns.factorplot(x = \"SibSp\", y = \"Age\", data = train_df, kind = \"box\")\nplt.show()","29a5427a":"sns.heatmap(train_df[[\"Age\",\"Sex\",\"SibSp\",\"Parch\",\"Pclass\"]].corr(), annot = True)\nplt.show()","09078fe3":"index_nan_age = list(train_df[\"Age\"][train_df[\"Age\"].isnull()].index)\nfor i in index_nan_age:\n    age_pred = train_df[\"Age\"][((train_df[\"SibSp\"] == train_df.iloc[i][\"SibSp\"]) &(train_df[\"Parch\"] == train_df.iloc[i][\"Parch\"])& (train_df[\"Pclass\"] == train_df.iloc[i][\"Pclass\"]))].median()\n    age_med = train_df[\"Age\"].median()\n    if not np.isnan(age_pred):\n        train_df[\"Age\"].iloc[i] = age_pred\n    else:\n        train_df[\"Age\"].iloc[i] = age_med","91bb1085":"train_df[train_df[\"Age\"].isnull()]","acd566f2":"<a id = \"7\"><\/a><br>\n# Outlier Detection","55a585fa":"<a id = \"4\"><\/a><br>\n## Categorical Variable","749fed0f":"<a id = \"8\"><\/a><br>\n# Missing Value\n* Find Missing Value\n* Fill Missing Value","8fc6c0d3":"<a id = \"14\"><\/a><br>\n## Parch -- Survived","b649d0e5":"* pclass is important feature for model training.","8da3c7f9":"<a id = \"19\"><\/a><br>\n## Embarked -- Sex -- Pclass -- Survived","45849190":"<a id = \"16\"><\/a><br>\n## Age -- Survived","e0fea1a1":"<a id=\"1\"><\/a><\/br>\n## Load and Check Data","d5a9504c":"<a id = \"15\"><\/a><br>\n## Pclass -- Survived","930cafb7":"<a id = \"6\"><\/a><br>\n# Basic Data Analysis\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived\n* Embarked - Survived\n* Sex - Pclass - Survived","d52352da":"* Female passengers have much better survival rate than males.\n* males have better survival rate in pclass 3 in C.\n* embarked and sex will be used in training.","f2e27546":"Sex is not informative for age prediction, age distribution seems to be same.","50233014":"* float64(2): Fare and Age\n* int64(5): Pclass, sibsp, parch, passengerId and survived\n* object(5): Cabin, embarked, ticket, name and sex","c3c7e55c":"Age is not correlated with sex but it is correlated with parch, sibsp and pclass.","eb585ea6":"It looks like most correlation between Parch and SibSp","140e2dde":"<a id = \"11\"><\/a><br>\n# Visualization\n\n<a id = \"12\"><\/a><br>\n### Correlation Between Sibsp -- Parch -- Age -- Fare -- Survived","86ca2184":"<a id = \"20\"><\/a><br>\n## Embarked -- Sex -- Fare -- Survived","c2dc4baa":"<a id = \"17\"><\/a><br>\n## Sex -- Survived","b672ff4a":"*     Having a lot of SibSp have less chance to survive.\n*     if sibsp == 0 or 1 or 2, passenger has more chance to survive\n*     we can consider a new feature describing these categories.\n\n","145ea082":"# Introduction\n![Titanic](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/f\/fd\/RMS_Titanic_3.jpg\/300px-RMS_Titanic_3.jpg)\n\nTitanic was a British passenger liner operated by the White Star Line that sank in the North Atlantic Ocean on 15 April 1912, after striking an iceberg during her maiden voyage from Southampton to New York City. Of the estimated 2,224 passengers and crew aboard, more than 1,500 died, making the sinking at the time one of the deadliest of a single ship and the deadliest peacetime sinking of a superliner or cruise ship to date. With much public attention in the aftermath, the disaster has since been the material of many artistic works and a founding material of the disaster film genre.\n\n<font color= 'blue'>\nContent:\n    \n1. [Load and Check Data](#1)\n1. [Variable Description](#2)\n     * [Univariate Variable Analysis](#3)\n        * [Categorical Variable](#4)\n        * [Numerical Variable](#5)\n1. [Basic Data Analysis](#6)\n1. [Outlier Detection](#7)\n1. [Missing Value](#8)\n    * [Find Missing Value](#9)\n    * [Fill Missing Value](#10)    \n1. [Visualization](#11)\n    * [Correlation Between Sibsp -- Parch -- Age -- Fare -- Survived](#12)\n    * [SibSp -- Survived](#13)\n    * [Parch -- Survived](#14)\n    * [Pclass -- Survived](#15)\n    * [Age -- Survived](#16)\n    * [Sex -- Survived](#16)\n    * [Pclass -- Survived -- Age](#18)\n    * [Embarked -- Sex -- Pclass -- Survived](#19)\n    * [Embarked -- Sex -- Fare -- Survived](#20)\n    * [Fill Missing: Age Feature](#21)\n","16cdbe24":"* age <= 10 has a high survival rate,\n* oldest passengers (80) survived,\n* large number of 20 years old did not survive,\n* most passengers are in 15-35 age range,\n* use age feature in training\n* use age distribution for missing value of age","f74fbb7d":"<a id = \"13\"><\/a><br>\n## SibSp -- Survived","4b6af087":"* Passsengers who pay higher fare have better survival. Fare can be used as categorical for training.","9b3f8502":"1st class passengers are older than 2nd, and 2nd is older than 3rd class. ","76c7e9a5":"<a id = \"9\"><\/a><br>\n## Find Missing Value","8a88ebab":"* Sibsp and parch can be used for new feature extraction with threshold = 3\n* small familes have more chance to survive.\n* there is a std in survival of passenger with parch = 3","267701de":"<a id = \"3\"><\/a><br>\n# Univariate Variable Analysis\n* Categorical Variable: Survived, Sex, Pclass, Embarked, Cabin, Name, Ticket, Sibsp and Parch\n* Numerical Variable: Fare, age and passengerId","e1336de5":"<a id = \"18\"><\/a><br>\n## Pclass -- Survived -- Age","104d2b1f":"<a id = \"21\"><\/a><br>\n## Fill Missing: Age Feature","89ed8b3f":"* Pclass 1 has most survived probability value","92bcda13":"<a id = \"5\"><\/a><br>\n## Numerical Variable","cafdad90":"* Female persons are more survived probabilty than male persons 3.5 times","a4fb1037":"<a id=\"2\"><\/a><\/br>\n## Variable Description\n\n1. PassengerId: unique id number to each passenger\n1. Survived: passenger survive(1) or died(0)\n1. Pclass: passenger class\n1. Name: name\n1. Sex: gender of passenger \n1. Age: age of passenger \n1. SibSp: number of siblings\/spouses\n1. Parch: number of parents\/children \n1. Ticket: ticket number \n1. Fare: amount of money spent on ticket\n1. Cabin: cabin category\n1. Embarked: port where passenger embarked (C = Cherbourg, Q = Queenstown, S = Southampton)","1fae8b1b":"<a id = \"10\"><\/a><br>\n## Fill Missing Value\n* Embarked has 2 missing value\n* Fare has only 1"}}