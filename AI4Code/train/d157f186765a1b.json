{"cell_type":{"ab9826f7":"code","2896ea10":"code","d10a62a7":"code","9a17caad":"code","cae8ef4d":"code","6fe228aa":"code","3d0a7e69":"code","5681d743":"code","42023293":"code","cc35d524":"code","371eb525":"code","5ccf20c2":"code","03221355":"code","5f28311c":"code","40ff32f1":"code","63010bfa":"code","c0059f4c":"code","5219ea87":"code","405a217a":"code","f41e64c4":"code","1dcc3aac":"code","cc33a341":"code","a15efa0a":"code","bc936094":"code","706a5171":"code","21f27df7":"code","503c7a46":"code","e20ee7ce":"code","04fb2df6":"code","d58b8d19":"code","a7587c41":"code","50c8ccef":"code","e820ebc3":"code","63a87bd7":"code","cad23946":"code","bfb776fc":"code","b78661cb":"code","81aded15":"code","50365558":"code","04a3a97f":"markdown"},"source":{"ab9826f7":"import math \nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","2896ea10":"def euclideanDistance(p1,p2):\n    dist=0\n    for i in range(0,len(p1)):\n        dist += (p2[i] - p1[i])**2\n    x = math.sqrt(dist)\n    return x\n\ndef manhattanDistance(p1,p2):\n    dist=0\n    for i in range(0,len(p1)):\n        dist += p2[i] - p1[i]\n#     x = (p2[0] - p1[0]) + (p2[1] - p1[1])\n    return dist","d10a62a7":"ed = euclideanDistance([1,1], [5,4])\ned","9a17caad":"md = manhattanDistance([1,1], [5,4])\nmd","cae8ef4d":"from sklearn import datasets\niris = datasets.load_iris()","6fe228aa":"iris","3d0a7e69":"df = pd.DataFrame(iris.data)","5681d743":"df.columns = ['sepalL', 'sepalW', 'petalL', 'petalW']","42023293":"df.describe()","cc35d524":"df.info()","371eb525":"df.isnull().sum().sum()","5ccf20c2":"df['target'] = iris.target","03221355":"df.head()","5f28311c":"tnames = iris.target_names.tolist()","40ff32f1":"df['targetName'] = df.target.apply(lambda x: tnames[x])","63010bfa":"df.sample(5)","c0059f4c":"import matplotlib.pyplot as plt\nimport seaborn as sns","5219ea87":"view = df.groupby('targetName').count()['target']\n\nlabels = view.index\nsizes = view.values\n\nfig1, ax1 = plt.subplots(figsize=(10,7))\nax1.pie(sizes, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.","405a217a":"from sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import NearestNeighbors, KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score, confusion_matrix","f41e64c4":"X = df.iloc[:, :4]\ny = df.target\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)","1dcc3aac":"model = KNeighborsClassifier(n_neighbors=3)\nmodel.fit(X_train, y_train)\npredict = model.predict(X_test)","cc33a341":"predict","a15efa0a":"acc = accuracy_score(y_test, predict)\nacc","bc936094":"cm = confusion_matrix(y_test, predict)\ncm","706a5171":"pd.DataFrame(data=cm, index=iris.target_names, columns=iris.target_names)","21f27df7":"len(y_test), len(predict)","503c7a46":"pSpec = []\nfor i in predict:\n    pSpec.append(tnames[i])","e20ee7ce":"compare = pd.DataFrame()\ncompare['ySpecie'] = y_test.apply(lambda x: tnames[x]) \ncompare['pSpecie'] = pSpec\ncompare","04fb2df6":"compare.value_counts()","d58b8d19":"compare.ySpecie.value_counts()","a7587c41":"compare.pSpecie.value_counts()","50c8ccef":"k = 30\nmyKs = np.zeros(k-1)","e820ebc3":"myKs","63a87bd7":"for n in range(1,k):\n    neigh = KNeighborsClassifier(n_neighbors=n).fit(X_train, y_train)\n    predN = neigh.predict(X_test)\n    myKs[n-1]=accuracy_score(y_test, predN)","cad23946":"myKs","bfb776fc":"print(f'Best Acc: {myKs.max():.5f} e K={myKs.argmax()}')","b78661cb":"sns.lineplot(x=range(1,k), y=myKs)","81aded15":"model = KNeighborsClassifier(n_neighbors=1)\nmodel.fit(X_train, y_train)\npredict = model.predict(X_test)","50365558":"confusion_matrix(y_test, predict)","04a3a97f":"# What\u00b4s the **K** number?"}}