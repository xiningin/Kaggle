{"cell_type":{"3f34e12b":"code","d713b984":"code","7099c103":"code","0e0b1a0f":"code","9dfc83e1":"code","0082572d":"code","8731c61d":"code","480942ea":"code","fca8b0ac":"code","4c68723c":"code","0c4f798b":"code","7ed23a24":"code","70463208":"code","4c18acb3":"code","e61c4366":"code","b41beda2":"code","8712d03e":"code","06191e13":"code","08ea1089":"code","3e3fbe8d":"code","51be5a28":"code","c0b05efd":"code","2689bad9":"code","7d894111":"code","382b2b40":"code","2ea86cc9":"code","4c4e3485":"code","a8b6cb03":"markdown","4056589a":"markdown","b52a2cce":"markdown","6798979e":"markdown","4ab74cb4":"markdown","8b731f1c":"markdown","abed23ab":"markdown","8cbed256":"markdown","2ad69b57":"markdown","febc45ae":"markdown","0beed2d0":"markdown","e44339c5":"markdown","6a3c3c97":"markdown","5cd568dc":"markdown"},"source":{"3f34e12b":"# packages\n\n# standard\nimport numpy as np\nimport pandas as pd\n\n# plot\nimport matplotlib.pyplot as plt\n\n# wordcloud\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator","d713b984":"# load data\ndf = pd.read_csv('..\/input\/towards-data-science-articles-dataset-20102021\/tds_data.csv')\ndf.head(10)","7099c103":"n_rows = df.shape[0]\nprint('Number of rows:', n_rows)","0e0b1a0f":"df.info()","9dfc83e1":"# date handling\ndf['publish_date']= pd.to_datetime(df['publish_date'])\n# extract month and year and add to data frame\ndf['Year'] = df.publish_date.dt.year\ndf['Month'] = df.publish_date.dt.month\n# combined year\/month\ndf['Year_Month'] = df['Year'].astype(str) + '_' + df['Month'].astype(str)","0082572d":"# authors\nplt.figure(figsize=(12,6))\ndf.author.value_counts()[0:25].plot(kind='bar')\nplt.title('Authors - Top 25')\nplt.grid()\nplt.show()","8731c61d":"# paid\nplt.figure(figsize=(8,6))\ndf.paid.value_counts().plot(kind='bar')\nplt.title('Paid')\nplt.grid()\nplt.show()","480942ea":"# define numerical features\nfeatures_num = ['claps', 'responses', 'reading_time']","fca8b0ac":"# basic stats of numerical features\ndf[features_num].describe()","4c68723c":"# plot numerical features\nfor f in features_num:\n    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12,5))\n    \n    ax1.hist(df[f], bins=50)\n    ax1.grid()\n    ax1.set_title(f)\n    \n    ax2.boxplot(df[f], vert=False)\n    ax2.grid()   \n    ax2.set_title(f)\n    \n    plt.show()","0c4f798b":"# responses - log plot for non-zeroes\ntmp_vals = df.responses[df.responses>0]\nperc_0 = ((df.responses[df.responses==0]).shape[0]) \/ n_rows \nperc_0 = np.round(100*perc_0, 2)\nplt.figure(figsize=(8,6))\nplt.hist(np.log10(tmp_vals), bins=100)\nplt.title('log10(Responses|Responses>0),  %(Response=0): ' + str(perc_0) + '%')\nplt.grid()\nplt.show()","7ed23a24":"# claps - log plot for non-zeroes\ntmp_vals = df.claps[df.claps>0]\nperc_0 = ((df.claps[df.claps==0]).shape[0]) \/ n_rows \nperc_0 = np.round(100*perc_0, 2)\nplt.figure(figsize=(8,6))\nplt.hist(np.log10(tmp_vals), bins=100)\nplt.title('log10(Claps|Claps>0),  %(Claps=0): ' + str(perc_0) + '%')\nplt.grid()\nplt.show()","70463208":"# scatter plot\nplt.figure(figsize=(8,6))\nplt.scatter(df.responses, df.claps, alpha=0.25)\nplt.title('Claps vs Responses')\nplt.xlabel('Responses')\nplt.ylabel('Claps')\nplt.grid()\nplt.show()","4c18acb3":"# year\ndf.Year.value_counts().sort_index().plot(kind='bar')\nplt.grid()\nplt.title('Articles by year')\nplt.show()","e61c4366":"# month\ndf.Month.value_counts().sort_index().plot(kind='bar')\nplt.grid()\nplt.title('Articles by month')\nplt.show()","b41beda2":"# combined year+month\nplt.figure(figsize=(14,5))\ndf.Year_Month.value_counts().sort_index().plot(kind='bar')\nplt.grid()\nplt.title('Articles by year\/month')\nplt.show()","8712d03e":"text = \" \".join(txt for txt in df.title)\nstopwords = set(STOPWORDS)","06191e13":"# show wordcloud\nwordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text)\nplt.figure(figsize=(14,10))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","08ea1089":"df_tmp = df.nlargest(10, 'claps')\ndf_tmp[['title','author','claps']]","3e3fbe8d":"df_tmp = df.nlargest(10, 'responses')\ndf_tmp[['title','author','responses']]","51be5a28":"# the longest articles\ndf_tmp = df.nlargest(10, 'reading_time')\ndf_tmp[['title','author','reading_time']]","c0b05efd":"# define keyword for filter\nkeyword = 'quantum'","2689bad9":"df_filter = df[df.title.str.contains(keyword, case=False)]\nprint('Number of hits:', df_filter.shape[0])","7d894111":"# preview\ndf_filter","382b2b40":"# show all titles\nresult_list = df_filter.title.tolist()\n\n# clean up a little bit before printing\nresult_list = [element.replace('\\xa0', ' ') for element in result_list]\nresult_list = [element.replace('\\u200a', ' ') for element in result_list]\nresult_list","2ea86cc9":"# wordcloud for filtered articles\ntext = \" \".join(txt for txt in result_list)\nstopwords = set(STOPWORDS)\n\nwordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=200,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text)\nplt.figure(figsize=(8,6))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","4c4e3485":"# export to file for further processing\ndf_filter.to_csv('df_filter.csv')","a8b6cb03":"### Highest Reading Time","4056589a":"### Distributions:","b52a2cce":"<a id='2'><\/a>\n# Explore Categorical Features","6798979e":"### Scatter Plots:","4ab74cb4":"### Most Responses","8b731f1c":"### Most Claps","abed23ab":"<a id='5'><\/a>\n# Wordcloud of Titles","8cbed256":"<a id='3'><\/a>\n# Explore Numerical Features","2ad69b57":"# Table of Contents\n* [Import, Overview and Data Preparations](#1)\n* [Explore Categorical Features](#2)\n* [Explore Numerical Features](#3)\n* [Explore Time Features](#4)\n* [Wordcloud of Titles](#5)\n* [Top 10](#6)\n* [Filter Articles by Keyword](#7)","febc45ae":"<a id='6'><\/a>\n# Top 10","0beed2d0":"### Logarithmic Plots:","e44339c5":"<a id='1'><\/a>\n# Import, Overview and Data Preparations","6a3c3c97":"<a id='7'><\/a>\n# Filter Articles by Keyword","5cd568dc":"<a id='4'><\/a>\n# Explore Time Features"}}