{"cell_type":{"35741e22":"code","4cefbb2a":"code","fc895d63":"code","aa9c109d":"code","36752487":"code","213fc622":"code","447b4cbb":"code","3c8dc04e":"code","95133727":"code","4d845097":"code","e51b58ab":"code","af005af8":"code","459314b3":"code","6fbd052b":"markdown","bf449e6f":"markdown","2597c66b":"markdown","6856610d":"markdown","5acc331b":"markdown","46f9e49e":"markdown","f9b57435":"markdown","89446780":"markdown","912ecaf9":"markdown","b5f04542":"markdown","e945d00a":"markdown","2ff0db22":"markdown","15a4fb8d":"markdown","f4a40e44":"markdown","dcb891b8":"markdown"},"source":{"35741e22":"# Import libraries\n\nimport numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","4cefbb2a":"# Read data from csv file\nsurvey = pd.read_csv(\"\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv\")\n\n# Rename column for ease of reading and referencing\nsurvey.rename({'Q3':'COUNTRY'}, axis = 1, inplace = True) # Rename Q3 as COUNTRY\nsurvey.rename({'Q6':'YR_EXPERIENCE'}, axis = 1, inplace = True) # Rename Q6 as YR_EXPERIENCE\nsurvey.rename({'Q1':'AGE'}, axis = 1, inplace = True) # Rename Q1 as AGE\nsurvey.rename({'Q2':'GENDER'}, axis = 1, inplace = True) # Rename Q2 as GENDER\nsurvey.rename({'Q8':'LANG_RECOMMENDED'}, axis = 1, inplace = True) # Rename Q8 as LANGUAGE_RECOMMENDED\nsurvey.rename({'Q7_Part_1':'USE_PYTHON', \n               'Q7_Part_2':'USE_R',\n               'Q7_Part_3':'USE_SQL',\n               'Q7_Part_4':'USE_C',\n               'Q7_Part_5':'USE_C++',\n               'Q7_Part_6':'USE_JAVA',\n               'Q7_Part_7':'USE_JAVASCRIPT',\n               'Q7_Part_8':'USE_JULIA',\n               'Q7_Part_9':'USE_SWIFT',\n               'Q7_Part_10':'USE_BASH',\n               'Q7_Part_11':'USE_MATLAB',\n               'Q7_Part_12':'USE_NONE',\n               'Q7_OTHER':'USE_OTHER'}, \n              axis = 1, inplace = True) # rename columns on LANGUAGE_USED\n\n# Get question short form and the corresponding question text\nquestion = survey.iloc[0,:]","fc895d63":"# Subset ASEAN countries data\nASEAN = [\"Singapore\", \"Viet Nam\", \"Thailand\", \"Malaysia\", \"Indonesia\", \"Brunei\", \"Cambodia\", \"Laos\", \"Myanmar\", \"Philippines\"]\nASEAN_df = survey[survey[\"COUNTRY\"].isin(ASEAN)]\nASEAN_df[\"COUNTRY\"].unique() # Only 6 countries are in subset data","aa9c109d":"# Group country data by year of experience. Value calculated is number of responses \n# for that particular year of experience bucket over total responses, for a particular country.\n# For every country, percentage responses for all applicable year of experience bucket should \n# sum up to 100%.\nASEAN_df_experience = pd.DataFrame(ASEAN_df.groupby(\"COUNTRY\")[\"YR_EXPERIENCE\"].value_counts(dropna = False, normalize = True))\n# Renaming column and copying index as columns\nASEAN_df_experience.rename({'YR_EXPERIENCE':'CTRY_RESPONSE_PCT'}, axis = 1, inplace = True)\nASEAN_df_experience[\"CTRY_RESPONSE_PCT\"] = ASEAN_df_experience[\"CTRY_RESPONSE_PCT\"]*100\nASEAN_df_experience[\"COUNTRY\"] = ASEAN_df_experience.index.get_level_values(\"COUNTRY\")\nASEAN_df_experience[\"YR_EXPERIENCE\"] = ASEAN_df_experience.index.get_level_values(\"YR_EXPERIENCE\")\n\n# Plot categorical plot\nexperience_order = ['I have never written code', '< 1 years', '1-2 years', '3-5 years', \n                    '5-10 years', '10-20 years', '20+ years']\n\nsns.set()\nplt.clf() \nsns.catplot(x=\"YR_EXPERIENCE\", y=\"CTRY_RESPONSE_PCT\", hue=\"COUNTRY\",\n            kind=\"point\", height=5, aspect=2, order = experience_order, data = ASEAN_df_experience)\nplt.xlabel('YR_EXPERIENCE', fontsize=10)\nplt.ylabel('CTRY_RESPONSE_PCT', fontsize=10)\nplt.show()","36752487":"# Group country data by gender. Value calculated is number of responses \n# for a particular gender over total responses, for a particular country.\n# For every country, percentage responses for all applicable gender bucket should \n# sum up to 100%. \nASEAN_df_gender = pd.DataFrame(ASEAN_df.groupby(\"COUNTRY\")[\"GENDER\"].value_counts(dropna = False, normalize = True))\nASEAN_df_gender.rename({'GENDER':'CTRY_RESPONSE_PCT'}, axis = 1, inplace = True)\nASEAN_df_gender[\"CTRY_RESPONSE_PCT\"] = ASEAN_df_gender[\"CTRY_RESPONSE_PCT\"]*100\nASEAN_df_gender[\"COUNTRY\"] = ASEAN_df_gender.index.get_level_values(\"COUNTRY\")\nASEAN_df_gender[\"GENDER\"] = ASEAN_df_gender.index.get_level_values(\"GENDER\")\n\n# Plot categorical plot\ngender_order = ['Man', 'Woman', 'Prefer not to say', 'Nonbinary','Prefer to self-describe']\nsns.set()\nplt.clf() \nsns.catplot(x=\"GENDER\", y=\"CTRY_RESPONSE_PCT\", hue=\"COUNTRY\", aspect=2,\n            kind=\"bar\", order = gender_order , data = ASEAN_df_gender)\nplt.xlabel('GENDER', fontsize=10)\nplt.ylabel('CTRY_RESPONSE_PCT', fontsize=10)\nplt.show()","213fc622":"# Subset gender data\nwoman = ASEAN_df_gender[ASEAN_df_gender[\"GENDER\"] == \"Woman\"]\nman = ASEAN_df_gender[ASEAN_df_gender[\"GENDER\"] == \"Man\"]\nwoman.index.names = [\"COUNTRY1\", \"GENDER1\"]\nman.index.names = [\"COUNTRY1\", \"GENDER1\"]\ngender_comb = pd.merge(woman, man, how=\"outer\", on = \"COUNTRY\")\ngender_comb[\"GENDER_GAP_PCT\"] = gender_comb[\"CTRY_RESPONSE_PCT_y\"] - gender_comb[\"CTRY_RESPONSE_PCT_x\"]\n\n# Plot categorical graph\nplt.clf() \nsns.catplot(x=\"COUNTRY\", y=\"GENDER_GAP_PCT\", aspect=2,\n            kind=\"bar\", data = gender_comb)\nplt.xlabel('COUNTRY', fontsize=10)\nplt.ylabel('GENDER_GAP_PCT', fontsize=10)\nplt.show()","447b4cbb":"# Replace all cells with value with 1 and no value with 0 \nlang_used_1= ASEAN_df.iloc[:,7:20].notnull().astype('int')\n\n# Merge above with corresponding country, gender and year of experience data\nlang_used = pd.merge(ASEAN_df.loc[:, [\"COUNTRY\", \"GENDER\", \"YR_EXPERIENCE\"]], lang_used_1, \n                     left_index = True, right_index= True, how = \"left\")\n\nlang_list = [\"USE_PYTHON\", \"USE_R\", \"USE_SQL\", \"USE_C\", \"USE_C++\", \n         \"USE_JAVA\", \"USE_JAVASCRIPT\",\"USE_JULIA\",\"USE_SWIFT\",\"USE_BASH\", \n         \"USE_MATLAB\", \"USE_NONE\", \"USE_OTHER\"]\n\n# Pivot number of responses with country as index, language as column.\n# Then create column CTRY_TOT_COUNT, as sum of responses in a country.\nlang_pivot = lang_used.pivot_table(index=[\"COUNTRY\"], values=lang_list, aggfunc='sum')\nlang_pivot[\"CTRY_TOT_COUNT\"]=lang_pivot.sum(axis=1)\n\n# Copy lang_pivot and calculate percentage usage for each language\nlang_summary = lang_pivot.copy(deep=True)\nlang_summary[\"USE_PYTHON_PCT\"]=round(lang_summary[\"USE_PYTHON\"]\/lang_summary[\"CTRY_TOT_COUNT\"]*100,5)\nlang_summary[\"USE_R_PCT\"]=round(lang_summary[\"USE_R\"]\/lang_summary[\"CTRY_TOT_COUNT\"]*100,5)\nlang_summary[\"USE_SQL_PCT\"]=round(lang_summary[\"USE_SQL\"]\/lang_summary[\"CTRY_TOT_COUNT\"]*100,5)\nlang_summary[\"USE_C_PCT\"]=round(lang_summary[\"USE_C\"]\/lang_summary[\"CTRY_TOT_COUNT\"]*100,5)\nlang_summary[\"USE_C++_PCT\"]=round(lang_summary[\"USE_C++\"]\/lang_summary[\"CTRY_TOT_COUNT\"]*100,5)\nlang_summary[\"USE_JAVA_PCT\"]=round(lang_summary[\"USE_JAVA\"]\/lang_summary[\"CTRY_TOT_COUNT\"]*100,5)\nlang_summary[\"USE_JAVASCRIPT_PCT\"]=round(lang_summary[\"USE_JAVASCRIPT\"]\/lang_summary[\"CTRY_TOT_COUNT\"]*100,5)\nlang_summary[\"USE_JULIA_PCT\"]=round(lang_summary[\"USE_JULIA\"]\/lang_summary[\"CTRY_TOT_COUNT\"]*100,5)\nlang_summary[\"USE_SWIFT_PCT\"]=round(lang_summary[\"USE_SWIFT\"]\/lang_summary[\"CTRY_TOT_COUNT\"]*100,5)\nlang_summary[\"USE_BASH_PCT\"]=round(lang_summary[\"USE_BASH\"]\/lang_summary[\"CTRY_TOT_COUNT\"]*100,5)\nlang_summary[\"USE_MATHLAB_PCT\"]=round(lang_summary[\"USE_MATLAB\"]\/lang_summary[\"CTRY_TOT_COUNT\"]*100,5)\nlang_summary[\"USE_NONE_PCT\"]=round(lang_summary[\"USE_NONE\"]\/lang_summary[\"CTRY_TOT_COUNT\"]*100,5)\nlang_summary[\"USE_OTHER_PCT\"]=round(lang_summary[\"USE_OTHER\"]\/lang_summary[\"CTRY_TOT_COUNT\"]*100,5)\n\n# Subset data for final summary. \n# Final summary of language usage percentage is averaged across ASEAN and ordered from highest to lowest\nlang_plot = lang_summary.iloc[:,14:27]\nlang_rank_ASEAN = lang_plot.mean(axis=0).sort_values(ascending = False)\nprint(lang_rank_ASEAN)","3c8dc04e":"# Rank most widely used programming language\nlang_plot.loc[\"ASEAN\"] = lang_rank_ASEAN\nlang_compare_pct =lang_plot.transpose()\nlang_compare_rank =lang_plot.transpose().rank(ascending = False, method = \"min\")\nprint(lang_compare_rank)","95133727":"# Group recommended language and calculate percentage of response over total response\nlang_recommended= ASEAN_df.loc[:,[\"LANG_RECOMMENDED\"]][\"LANG_RECOMMENDED\"].value_counts(normalize = True)*100\nlang_recommended_df = pd.DataFrame(lang_recommended)\nlang_recommended_df[\"LANGUAGE\"]= lang_recommended_df.index\n\n# Plot categorical plot\nplt.clf() \nsns.catplot(x=\"LANGUAGE\", y=\"LANG_RECOMMENDED\", aspect=2,\n            kind=\"bar\", data = lang_recommended_df)\nplt.xlabel('LANGUAGE', fontsize=10)\nplt.ylabel('RECOMMENDED_PERCENTAGE', fontsize=10)\nplt.show()\n\n# Malaysia view recommended language\nlang_recommended_MYS= ASEAN_df[ASEAN_df[\"COUNTRY\"]==\"Malaysia\"].loc[:,[\"LANG_RECOMMENDED\"]][\"LANG_RECOMMENDED\"].value_counts(normalize = True)*100\nprint(lang_recommended_MYS)","4d845097":"# Data preprocessing to combine all machine learning responses column\nml_usage = pd.DataFrame()\n\nfor i in range(82,94):\n    a = pd.DataFrame(ASEAN_df.iloc[:,[3,i]])\n    a.columns.values[1] = \"MACHINE_LEARNING\"\n    # print(i, \" - \", set(a))\n    ml_usage = pd.concat([ml_usage, a])\n","e51b58ab":"# Data preprocessing to rename columns and copy index as columns\nml_summary = ml_usage.groupby(\"COUNTRY\")[\"MACHINE_LEARNING\"].value_counts(normalize = True).to_frame()*100\nml_summary.rename({\"MACHINE_LEARNING\":\"CTRY_RESPONSE_PCT\"}, axis = 1, inplace = True)\nml_summary[\"COUNTRY\"] = ml_summary.index.get_level_values(\"COUNTRY\")\nml_summary[\"MACHINE_LEARNING\"] = ml_summary.index.get_level_values(\"MACHINE_LEARNING\")\n#ml_summary.rename_axis([\"CTRY\", \"ML\"])","af005af8":"# Plot graph to compare preferred machine learning method across countries\nsns.set()\nplt.clf()\nplt.figure(figsize=(15,12))\ngraph = sns.barplot(x=\"MACHINE_LEARNING\", y=\"CTRY_RESPONSE_PCT\", hue=\"COUNTRY\", data = ml_summary)\ngraph.set_xticklabels(graph.get_xticklabels(), rotation = 30, ha = \"right\", fontsize = 10)\nplt.show()","459314b3":"# Save result to pickle\n\nASEAN_df_experience.to_pickle(\"ASEAN_df_experience.pkl\")\nASEAN_df_gender.to_pickle(\"ASEAN_df_gender.pkl\")\nlang_compare_rank.to_pickle(\"lang_compare_rank.pkl\")\nlang_recommended_df.to_pickle(\"lang_recommended_df.pkl\")\n\n# Save ASEAN data into csv\nASEAN_df.to_csv(\"ASEAN_df.csv\", index=False)","6fbd052b":"**Observation 3b:**\n\nIn Malaysia, Python is the most used language in line with ASEAN. However, the second\/ third most used language is C++\/ SQL as compared to ASEAN which are SQL\/R. ASEAN and individual countries ranking shows that R is at the third\/ fourth position.","bf449e6f":"**Observation 2b:**\n\nAnalysis shows that Malaysia has the smallest gender (male vs female) gap. Something to be proud of as a fellow Malaysian.","2597c66b":"**Observation 3a:**\n\nIn ASEAN, Python is the most used language followed by SQL, R, Javascript, C and Java. Python is the clear winner of most widely used language as the gap with other languages are significant.","6856610d":"# 1. Data Preparation","5acc331b":"# Summary\nThis is an analysis on Kaggle ML and Data Science surveys in the context of ASEAN region. ASEAN consists of 10 countries (Singapore, Viet Nam, Thailand, Malaysia, Indonesia, Brunei, Cambodia, Laos, Myanmar and the Philippines).  Specific observations on Malaysia vs ASEAN are called out to understand how much Malaysia is aligned or not in line compared to its regional ASEAN neighbors. \n\n**Analysis Limitation**\n\nThe survey response is from Kaggle user community, hence the usage of ML\/ Data Science observations in this analysis is only limited to the representation\/ view of Kaggle community. How well this represents the full population of ML\/ Data Science is unknown.\n\n**Data Availability**\n\nIn the survey dataset, only 6 countries have data explicitly labelled with the country name. These are Indonesia, Singapore, Viet Nam, Thailand, Philippines and Malaysia.\n\n**Findings**\n\n1. There are more beginner\/ intermediate Kaggle programmers compared to experienced programmers. Observation is consistent across ASEAN countries. Malaysia exhibits similar observation.\n2. ASEAN male Kaggle users are much more than female. Analysis shows that Malaysia has the smallest gender (male vs female) gap. Something to be proud of as a fellow Malaysian.\n3. Python is the clear winner of most widely used language in ASEAN as the usage gap compared to other languages is significant. In Malaysia, Python is the most used programming language in line with ASEAN. However, the second\/ third most used language is C++\/ SQL as compared to ASEAN which are SQL\/R. \n4. Python is recommended as the to-learn language at 75.4%, much higher than the current usage of Python which is hovering around 30 to 35%. Malaysia follows the same trend where 72.7% of the recommended language to learn is Python followed by R.\n5. Linear or logistic regression, decision tree or random forests followed by convolutional neural networks are the top 3 machine learning algorithm preferred across ASEAN where Malaysia follows the same trend.\n\n**Conclusion**\n\nMalaysia is pretty much in line with its ASEAN neighbours in as per findings 1 to 5 (above).\n\nWhile R and Python are equally promoted in Malaysia when I started with Python in 2016, this survey clearly showed that Python is the contender of current trend and future recommended programming language for ML\/ Data Science.","46f9e49e":"**Observation 4:**\n\nPython is recommended as the to-learn language at 75.4%, much higher than the current usage of Python which is hovering around 30 to 35%. Malaysia follows the same trend where 72.7% of the recommended language to learn is Python followed by R.","f9b57435":"**Observation 5:**\n\nLinear or logistic regression, decision tree or random forests followed by convolutional neural networks are the top 3 machine learning methods preferred across ASEAN where Malaysia follows the same trend. In Singapore, Gradient Boosting Machines method is the third preferred machine learning method (ranked higher than convolutional neural networks).","89446780":"**Observation 2a:**\n\nConsistent across ASEAN countries, male Kaggle users are higher than female. \n\nKnowing that there are more male users compared to female users, we want to find out how big is the male vs female gap at the country level. ","912ecaf9":"# 2. Analysis","b5f04542":"**Analysis II: Gender Disparity**","e945d00a":"**Analysis V: Preferred Machine Learning Algorithm**","2ff0db22":"**Analysis IV: Recommended Programming Language**","15a4fb8d":"**Analysis III: Programming Language Used**","f4a40e44":"**Observation 1:**\n\nKaggle user community in terms of year of experience can be separated into two groups.\n* Beginner to Intermediate: Less than 5 years of programming experience \n* Experienced: More than 5 years of programming experience\n\nThere are more beginner\/ intermediate Kaggle programmers compared to experienced programmers as visually portrayed by concentration in the upper left quadrant (Beginner\/ Intermediate) vs. lower right (Experienced). Observation is consistent across ASEAN countries. Malaysia exhibits similar observation.","dcb891b8":"**Analysis I: Year of Experience**"}}