{"cell_type":{"37fe4924":"code","db7d71fc":"code","72f4a078":"code","690d8522":"code","3ff4cca6":"code","6a4ea818":"code","ff79f756":"code","53541156":"code","bffde2ac":"code","b2fa7cec":"code","bebd185b":"code","0fd829ef":"code","32b3e57d":"code","35f34011":"code","734bd496":"code","d19cbc93":"code","a85b4d38":"code","7dd1ce20":"code","f14be87a":"code","f25d1756":"code","de6a7a0f":"code","daa49a73":"code","3bdb1e17":"code","bdd47d68":"code","4ce84eaa":"code","ed3149c4":"code","bad816b9":"code","5ea9f8b9":"code","17308c9d":"code","33709ae7":"code","0129732c":"code","c924b93e":"code","b68be1f2":"code","e701d866":"code","01c3e7f8":"code","fd8530f7":"code","724727d6":"code","af8f7132":"code","a0735b92":"code","918197c5":"code","730054ce":"code","369bd41b":"code","647d76dc":"code","44ed0c0b":"code","77d7725e":"code","e4283082":"code","f082e736":"code","1f51e990":"code","8346dfd3":"code","4a253b6b":"code","f9b57509":"code","338f1df4":"code","91550884":"code","813c04f9":"code","d74b2d0f":"code","28a2af4a":"code","97f89bc0":"code","64c905e2":"code","75b2888e":"code","c2135bf1":"code","e616fae9":"code","b9e38689":"code","aac0c37e":"code","332d7e4f":"code","e44a06ed":"code","b89aad2e":"code","2e790492":"code","be0b73f8":"code","698e74a3":"code","cac817d0":"code","eb78dd18":"code","239b9b91":"code","88d71e26":"code","a2d72d41":"code","2ff9129b":"code","56bb71f3":"code","1e16c45b":"code","e2560af3":"code","ff9df3f4":"code","3263a545":"code","7af92917":"code","141b1183":"code","65a4b23f":"code","ba40d22a":"code","6e7a72f8":"code","62d4823e":"code","efd72fa7":"code","841778f7":"code","bd64570e":"code","1f0f4184":"code","a370cb24":"code","b411c050":"code","af984072":"code","e362e3d6":"code","00d6fae7":"code","ccb94fc5":"code","98eab474":"markdown","dac67997":"markdown","3c665b69":"markdown","5b0b1b1d":"markdown","d8d84ec6":"markdown","2fb403bb":"markdown","e849ebcb":"markdown","3ae1a771":"markdown","f48e95ab":"markdown","de2d5e9e":"markdown","63687142":"markdown","c29af8e8":"markdown","c6af1064":"markdown","4eaa195b":"markdown","3ba30535":"markdown","0824a886":"markdown","52ce321e":"markdown","86e131c9":"markdown","8a9e395f":"markdown","0af1f585":"markdown","6b38ed40":"markdown","8f0a3578":"markdown","924ccd40":"markdown","de243e31":"markdown","d88d7870":"markdown","c126587c":"markdown","17e5067a":"markdown","6414bef5":"markdown","a406de9e":"markdown","a70bf63b":"markdown","8596eac1":"markdown","b4dec1fc":"markdown","679bb407":"markdown","85e395e5":"markdown","80987410":"markdown","153e888b":"markdown","a56fb8a4":"markdown","9f4800b9":"markdown"},"source":{"37fe4924":"!pip install astropy\n\n#GENERAL\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nfrom mpl_toolkits.mplot3d import Axes3D\nimport random\nimport time\n#PATH PROCESS\nimport os\nimport os.path\nfrom pathlib import Path\nimport glob\nfrom scipy.io import loadmat\nimport nibabel as nib\nimport csv\nfrom astropy.visualization import astropy_mpl_style\nfrom astropy.utils.data import get_pkg_data_filename\nfrom astropy.io import fits\nimport astropy\n#IMAGE PROCESS\nfrom PIL import Image\nfrom keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport cv2\nfrom keras.applications.vgg16 import preprocess_input, decode_predictions\nfrom keras.preprocessing import image\nfrom skimage.feature import hessian_matrix, hessian_matrix_eigvals\nfrom scipy.ndimage.filters import convolve\nfrom skimage import data, io, filters\nimport skimage\nfrom skimage.morphology import convex_hull_image, erosion\nfrom IPython import display\nfrom scipy.ndimage import gaussian_filter\nfrom mpl_toolkits.mplot3d.art3d import Poly3DCollection\nimport matplotlib.patches as patches\n#SCALER & TRANSFORMATION\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom keras.utils.np_utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom keras import regularizers\nfrom sklearn.preprocessing import LabelEncoder\n#MUSIC PROCESS\nimport pydub\nfrom scipy.io.wavfile import read, write\nimport librosa\nimport librosa.display\nimport IPython\nfrom IPython.display import Audio\nimport scipy\nfrom scipy import signal\nfrom scipy.fft import fftshift\n#ACCURACY CONTROL\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.metrics import mean_squared_error, r2_score\n#OPTIMIZER\nfrom keras.optimizers import RMSprop,Adam,Optimizer,Optimizer, SGD\n#MODEL LAYERS\nfrom tensorflow.keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D, BatchNormalization,MaxPooling2D,BatchNormalization,\\\n                        Permute, TimeDistributed, Bidirectional,GRU, SimpleRNN,\\\nLSTM, GlobalAveragePooling2D, SeparableConv2D, ZeroPadding2D, Convolution2D, ZeroPadding2D,Reshape, Conv2DTranspose,\\\nLeakyReLU, GaussianNoise, GlobalMaxPooling2D, ReLU, Input, Concatenate\nfrom keras import models\nfrom keras import layers\nimport tensorflow as tf\nfrom keras.applications import VGG16,VGG19,inception_v3\nfrom keras import backend as K\nfrom keras.utils import plot_model\nfrom keras.datasets import mnist\nimport keras\nfrom keras.models import Model\n#IGNORING WARNINGS\nfrom warnings import filterwarnings\nfilterwarnings(\"ignore\",category=DeprecationWarning)\nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)","db7d71fc":"M87_All_Path = Path(\"..\/input\/m87-galaxycenter-objectsblack-holeesa\/M87Galaxy\/HST-UV\")\nFits_Path = list(M87_All_Path.glob(r\"**\/*.fits\"))\nPath_Series = pd.Series(Fits_Path,name=\"ALL_PATH\").astype(str)","72f4a078":"Complex_Type = []\n\nfor x_path in Path_Series:\n    All_Splitting_List = x_path.split(\"\/\")\n    All_Splitting_Subdirections = All_Splitting_List[-1].split(\"_\")\n    \n    if All_Splitting_Subdirections[0] != \"hst\":\n        Complex_Type.append(x_path)\n    else:\n        pass","690d8522":"print(\"LEN COMPLEX LIST: \", len(Complex_Type))","3ff4cca6":"print(\"EXAMPLE PATH: \",Complex_Type[0])\nprint(\"---\"*10)\nprint(\"EXAMPLE PATH: \",Complex_Type[10])\nprint(\"---\"*10)\nprint(\"EXAMPLE PATH: \",Complex_Type[50])\nprint(\"---\"*10)\nprint(\"EXAMPLE PATH: \",Complex_Type[87])\nprint(\"---\"*10)\nprint(\"EXAMPLE PATH: \",Complex_Type[100])\nprint(\"---\"*10)\nprint(\"EXAMPLE PATH: \",Complex_Type[201])\nprint(\"---\"*10)","6a4ea818":"Complex_Series = pd.Series(Complex_Type,name=\"COMPLEX\").astype(str)","ff79f756":"Complex_Series","53541156":"Document_List = []\nReading_List = []\nImage_Reading_List = []\nImage_Primary_Keys = []\nImage_SCI_Keys = []\nImage_Primary_Comment = []\nImage_SCI_Comment = []\nIMG_List = []\nFLATTEN_List = []\nTABLEHDU_List = []\n\nfor i_steps in range(len(Complex_Series)):\n    \n    locals()[\"DOCUMENT_\" + str(i_steps)] = random.choice(list(Complex_Series.values))\n    locals()[\"READING_\" + str(i_steps)] = fits.open(locals()[\"DOCUMENT_\" + str(i_steps)])\n    \n    locals()[\"PRIMARY_KEYS_\" + str(i_steps)] = list(locals()[\"READING_\" + str(i_steps)][0].header.keys())\n    locals()[\"SCI_KEYS_\" + str(i_steps)] = list(locals()[\"READING_\" + str(i_steps)][1].header.keys())\n    \n    locals()[\"PRIMARY_KEYS_\" + str(i_steps)] = list(filter(None,locals()[\"PRIMARY_KEYS_\" + str(i_steps)]))\n    locals()[\"SCI_KEYS_\" + str(i_steps)] = list(filter(None,locals()[\"SCI_KEYS_\" + str(i_steps)]))\n    \n    locals()[\"PRIMARY_COMMENT_\" + str(i_steps)] = locals()[\"READING_\" + str(i_steps)][0].header\n    locals()[\"SCI_COMMENT_\" + str(i_steps)] = locals()[\"READING_\" + str(i_steps)][1].header\n    \n    if (locals()[\"READING_\" + str(i_steps)][1].data).size < 10:\n        \n    \n        locals()['TABLEHDU_' + str(i_steps)] = locals()['READING_' + str(i_steps)][1].data\n        TABLEHDU_List.append(locals()['TABLEHDU_' + str(i_steps)])\n        \n    else:\n        \n        locals()['IMG_' + str(i_steps)] = locals()['READING_' + str(i_steps)][1].data\n        locals()['FLATTEN_' + str(i_steps)] = locals()['IMG_' + str(i_steps)].flatten()\n        \n        IMG_List.append(locals()['IMG_' + str(i_steps)])\n        FLATTEN_List.append(locals()['FLATTEN_' + str(i_steps)])\n        Image_Reading_List.append(locals()[\"READING_\" + str(i_steps)])\n        Image_Primary_Keys.append(locals()[\"PRIMARY_KEYS_\" + str(i_steps)])\n        Image_SCI_Keys.append(locals()[\"SCI_KEYS_\" + str(i_steps)])\n        Image_Primary_Comment.append(locals()[\"PRIMARY_COMMENT_\" + str(i_steps)])\n        Image_SCI_Comment.append(locals()[\"SCI_COMMENT_\" + str(i_steps)])\n    \n    Columns_Name = []\n    Values_Output = []\n    \n    for comment_params in locals()['PRIMARY_KEYS_' + str(i_steps)]:\n\n        comments_out = locals()['PRIMARY_COMMENT_' + str(i_steps)].comments[comment_params]\n        values_out = locals()['READING_' + str(i_steps)][0].header[comment_params]\n\n        values_out = str(values_out)\n        Columns_Name.append(comments_out)\n        Values_Output.append(values_out)\n        \n    locals()['DATA_' + str(i_steps)] = pd.DataFrame(Values_Output,Columns_Name,columns=[\"VALUES\"])\n    locals()['DATA_' + str(i_steps)] = locals()['DATA_' + str(i_steps)].reset_index(drop=True)\n    locals()['DATA_' + str(i_steps)][\"COMMENTS\"] = Columns_Name\n    locals()['DATA_' + str(i_steps)] = locals()['DATA_' + str(i_steps)][locals()['DATA_' + str(i_steps)][\"COMMENTS\"] != \"\"]\n    locals()['DATA_' + str(i_steps)] = locals()['DATA_' + str(i_steps)].reset_index(drop=True)\n    \n    for values_X , columns_X in zip(locals()['DATA_' + str(i_steps)].VALUES,locals()['DATA_' + str(i_steps)].COMMENTS):\n        \n        locals()['DATA_' + str(i_steps)][columns_X] = values_X\n    \n    locals()['DATA_' + str(i_steps)].drop([\"COMMENTS\",\"VALUES\"],inplace=True,axis=1)\n    locals()['DATA_' + str(i_steps)] = locals()['DATA_' + str(i_steps)][0:1]\n\n    locals()['DATA_' + str(i_steps)].to_csv(f\"DATA_COMPLEX_{random.choice(range(len(Complex_Series)))}.csv\")\n    \n    Document_List.append(locals()['DOCUMENT_' + str(i_steps)])\n    Reading_List.append(locals()['READING_' + str(i_steps)])","bffde2ac":"print(\"DOCUMENT LEN: \", len(Document_List))\nprint(\"READING LEN: \", len(Reading_List))\nprint(\"TABLE LIST LEN: \", len(TABLEHDU_List))","b2fa7cec":"print(\"IMAGE LIST LEN: \", len(IMG_List))\nprint(\"FLATTEN LIST LEN: \", len(FLATTEN_List))\nprint(\"IMAGE READING LIST LEN: \", len(Image_Reading_List))\nprint(\"IMAGE PRIMARY KEYS LIST LEN: \", len(Image_Primary_Keys))\nprint(\"IMAGE SCI KEYS LIST LEN: \", len(Image_SCI_Keys))\nprint(\"IMAGE PRIMARY COMMENT LIST LEN: \", len(Image_Primary_Comment))\nprint(\"IMAGE SCI COMMENT LIST LEN: \", len(Image_SCI_Comment))","bebd185b":"print(\"EXAMPLE DOCUMENT: \", Document_List[1])\nprint(\"---\"*15)\nprint(\"EXAMPLE READING: \", Reading_List[1])\nprint(\"---\"*15)\nprint(\"EXAMPLE IMAGE SHAPE: \", IMG_List[1].shape)\nprint(\"---\"*15)\nprint(\"EXAMPLE FLATTEN SHAPE: : \", FLATTEN_List[1].shape)\nprint(\"---\"*15)\nprint(\"EXAMPLE TABLE SHAPE: : \", TABLEHDU_List[1].shape)\nprint(\"---\"*15)","0fd829ef":"print((READING_77[1].data).size)\nprint((READING_18[1].data).size)","32b3e57d":"print(\"INFORMATION EXAMPLE\\n\")\nprint(READING_2.info())\nprint(\"---\"*10,\"\\n\")\nprint(\"INFORMATION EXAMPLE\\n\")\nprint(READING_10.info())\nprint(\"---\"*10,\"\\n\")\nprint(\"INFORMATION EXAMPLE\\n\")\nprint(READING_100.info())\nprint(\"---\"*10,\"\\n\")\nprint(\"INFORMATION EXAMPLE\\n\")\nprint(READING_200.info())\nprint(\"---\"*10,\"\\n\")","35f34011":"print(\"EXAMPLE IMAGE SHAPE: \", IMG_List[1].shape)\nprint(\"---\"*15)\nprint(\"EXAMPLE IMAGE SHAPE: \", IMG_List[45].shape)\nprint(\"---\"*15)\nprint(\"EXAMPLE IMAGE SHAPE: \", IMG_List[78].shape)\nprint(\"---\"*15)\nprint(\"EXAMPLE IMAGE SHAPE: : \", IMG_List[96].shape)\nprint(\"---\"*15)","734bd496":"print(\"EXAMPLE TABLE SHAPE: \", TABLEHDU_List[1].shape)\nprint(\"---\"*15)\nprint(\"EXAMPLE TABLE SHAPE: \", TABLEHDU_List[45].shape)\nprint(\"---\"*15)\nprint(\"EXAMPLE TABLE SHAPE: \", TABLEHDU_List[78].shape)\nprint(\"---\"*15)\nprint(\"EXAMPLE TABLE SHAPE: : \", TABLEHDU_List[90].shape)\nprint(\"---\"*15)","d19cbc93":"print(\"EXAMPLE IMAGE READING: \", Image_Reading_List[1])\nprint(\"---\"*15)\nprint(\"EXAMPLE IMAGE READING: \", Image_Reading_List[45])\nprint(\"---\"*15)\nprint(\"EXAMPLE IMAGE READING: \", Image_Reading_List[78])\nprint(\"---\"*15)\nprint(\"EXAMPLE IMAGE READING: : \", Image_Reading_List[90])\nprint(\"---\"*15)","a85b4d38":"print(\"EXAMPLE PRIMARY KEYS: \",Image_Primary_Keys[1][0:3])\nprint(\"EXAMPLE PRIMARY KEYS: \",Image_Primary_Keys[45][0:3])\nprint(\"EXAMPLE PRIMARY KEYS: \",Image_Primary_Keys[78][0:3])\nprint(\"EXAMPLE PRIMARY KEYS: \",Image_Primary_Keys[90][0:3])","7dd1ce20":"print(\"EXAMPLE SCI KEYS: \",Image_SCI_Keys[1][0:3])\nprint(\"EXAMPLE SCI KEYS: \",Image_SCI_Keys[45][0:3])\nprint(\"EXAMPLE SCI KEYS: \",Image_SCI_Keys[78][0:3])\nprint(\"EXAMPLE SCI KEYS: \",Image_SCI_Keys[90][0:3])","f14be87a":"Image_SCI_Keys[1]","f25d1756":"Image_Primary_Keys[1]","de6a7a0f":"print(Image_SCI_Comment[1].comments[\"XTENSION\"])\nprint(Image_SCI_Comment[1].comments[\"HISTWIDE\"])\nprint(Image_SCI_Comment[1].comments[\"SKEWNESS\"])\nprint(Image_SCI_Comment[1].comments[\"MEDIAN\"])\nprint(Image_SCI_Comment[1].comments[\"MEDSHADO\"])\n\nprint(\"---\"*20)\nprint(\"\\n\")\nprint(\"OUTPUTS:\\n\")\n\nprint(Image_Reading_List[1][1].header[\"XTENSION\"])\nprint(Image_Reading_List[1][1].header[\"HISTWIDE\"])\nprint(Image_Reading_List[1][1].header[\"SKEWNESS\"])\nprint(Image_Reading_List[1][1].header[\"MEDIAN\"])\nprint(Image_Reading_List[1][1].header[\"MEDSHADO\"])","daa49a73":"print(Image_Primary_Comment[1].comments[\"TARGNAME\"])\nprint(Image_Primary_Comment[1].comments[\"RA_TARG\"])\nprint(Image_Primary_Comment[1].comments[\"DEC_TARG\"])\nprint(Image_Primary_Comment[1].comments[\"ECL_LAT\"])\nprint(Image_Primary_Comment[1].comments[\"ECL_LONG\"])\nprint(Image_Primary_Comment[1].comments[\"GAL_LAT\"])\nprint(Image_Primary_Comment[1].comments[\"GAL_LONG\"])\n\nprint(\"---\"*20)\nprint(\"\\n\")\nprint(\"OUTPUTS:\\n\")\n\nprint(Image_Reading_List[1][0].header[\"TARGNAME\"])\nprint(Image_Reading_List[1][0].header[\"RA_TARG\"])\nprint(Image_Reading_List[1][0].header[\"DEC_TARG\"])\nprint(Image_Reading_List[1][0].header[\"ECL_LAT\"])\nprint(Image_Reading_List[1][0].header[\"ECL_LONG\"])\nprint(Image_Reading_List[1][0].header[\"GAL_LAT\"])\nprint(Image_Reading_List[1][0].header[\"GAL_LONG\"])","3bdb1e17":"plt.style.use(\"dark_background\")","bdd47d68":"Coordinates_1 = [Image_Reading_List[1][0].header[\"GAL_LAT\"],Image_Reading_List[1][0].header[\"GAL_LONG\"]]\n\nCoordinates_2 = [Image_Reading_List[3][0].header[\"GAL_LAT\"],Image_Reading_List[3][0].header[\"GAL_LONG\"]]\n\nCoordinates_3 = [Image_Reading_List[9][0].header[\"GAL_LAT\"],Image_Reading_List[9][0].header[\"GAL_LONG\"]]\n\nCoordinates_4 = [Image_Reading_List[10][0].header[\"GAL_LAT\"],Image_Reading_List[10][0].header[\"GAL_LONG\"]]\n\nCoordinates_5 = [Image_Reading_List[11][0].header[\"GAL_LAT\"],Image_Reading_List[11][0].header[\"GAL_LONG\"]]\n\nCoordinates_6 = [Image_Reading_List[14][0].header[\"GAL_LAT\"],Image_Reading_List[14][0].header[\"GAL_LONG\"]]","4ce84eaa":"print(Coordinates_1[0],Coordinates_1[1])\nprint(Coordinates_2[0],Coordinates_2[1])\nprint(Coordinates_3[0],Coordinates_3[1])\nprint(Coordinates_4[0],Coordinates_4[1])\nprint(Coordinates_5[0],Coordinates_5[1])\nprint(Coordinates_6[0],Coordinates_6[1])","ed3149c4":"plt.figure(figsize=(10,10))\n\nplt.subplot(projection=\"lambert\")\nplt.grid(True)\n\nplt.plot(Coordinates_1[0],Coordinates_1[1],color=\"red\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[1][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_2[0],Coordinates_2[1],color=\"white\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[3][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_3[0],Coordinates_3[1],color=\"blue\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[9][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_4[0],Coordinates_4[1],color=\"green\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[10][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_5[0],Coordinates_5[1],color=\"yellow\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[11][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_6[0],Coordinates_6[1],color=\"cyan\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[14][0].header[\"TARGNAME\"])\n\n\nplt.tight_layout()\nplt.xlabel(\"galactic latitude of the target (deg) (J2000)\")\nplt.ylabel(\"galactic longitude of the target (deg) (J2000)\")\nplt.legend(prop=dict(size=10))\nplt.title(\"POSITION\")\nplt.show()","bad816b9":"plt.figure(figsize=(10,10))\n\nplt.grid(True)\n\nplt.plot(Coordinates_1[0],Coordinates_1[1],color=\"red\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[1][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_2[0],Coordinates_2[1],color=\"white\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[3][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_3[0],Coordinates_3[1],color=\"blue\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[9][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_4[0],Coordinates_4[1],color=\"green\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[10][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_5[0],Coordinates_5[1],color=\"yellow\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[11][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_6[0],Coordinates_6[1],color=\"cyan\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[14][0].header[\"TARGNAME\"])\n\n\nplt.tight_layout()\nplt.xlabel(\"galactic latitude of the target (deg) (J2000)\")\nplt.ylabel(\"galactic longitude of the target (deg) (J2000)\")\nplt.legend(prop=dict(size=10))\nplt.title(\"POSITION\")\nplt.show()","5ea9f8b9":"x1, y1 = [Coordinates_4[1], Coordinates_1[1]],[Coordinates_4[0], Coordinates_1[0]]\nx2, y2 = [Coordinates_4[1], Coordinates_2[1]],[Coordinates_4[0], Coordinates_2[0]]\nx3, y3 = [Coordinates_4[1], Coordinates_3[1]],[Coordinates_4[0], Coordinates_3[0]]\nx4, y4 = [Coordinates_4[1], Coordinates_4[1]],[Coordinates_4[0], Coordinates_4[0]]\nx5, y5 = [Coordinates_4[1], Coordinates_5[1]],[Coordinates_4[0], Coordinates_5[0]]\nx6, y6 = [Coordinates_4[1], Coordinates_6[1]],[Coordinates_4[0], Coordinates_6[0]]\n\nplt.figure(figsize=(20, 8))\nplt.plot(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6, marker = 'o',markersize=12,label=\"CONNECTION\")\nplt.title(\"POSITIONS TO EACH OTHER\")\nplt.legend(prop=dict(size=10))\nplt.show()","17308c9d":"print(\"1 LINE DISTANCE: \",(x1[0] + x1[1]) - (y1[0] + y1[1]))\nprint(\"2 LINE DISTANCE: \",(x2[0] + x2[1]) - (y2[0] + y2[1]))\nprint(\"3 LINE DISTANCE: \",(x3[0] + x3[1]) - (y3[0] + y3[1]))\nprint(\"4 LINE DISTANCE: \",(x4[0] + x4[1]) - (y4[0] + y4[1]))\nprint(\"5 LINE DISTANCE: \",(x5[0] + x5[1]) - (y5[0] + y5[1]))\nprint(\"6 LINE DISTANCE: \",(x6[0] + x6[1]) - (y6[0] + y6[1]))","33709ae7":"LINE_1 = (x1[0] + x1[1]) - (y1[0] + y1[1])\nLINE_2 = (x2[0] + x2[1]) - (y2[0] + y2[1])\nLINE_3 = (x3[0] + x3[1]) - (y3[0] + y3[1])\nLINE_4 = (x4[0] + x4[1]) - (y4[0] + y4[1])\nLINE_5 = (x5[0] + x5[1]) - (y5[0] + y5[1])\nLINE_6 = (x6[0] + x6[1]) - (y6[0] + y6[1])\n\nDISTANCE_4_1 = LINE_4 - LINE_1\nDISTANCE_4_2 = LINE_4 - LINE_2\nDISTANCE_4_3 = LINE_4 - LINE_3\nDISTANCE_4_5 = LINE_4 - LINE_5\nDISTANCE_4_6 = LINE_4 - LINE_6\n\n\nprint(\"DISTANCE 4 TO 1: \",DISTANCE_4_1)\nprint(\"DISTANCE 4 TO 2: \",DISTANCE_4_2)\nprint(\"DISTANCE 4 TO 3: \",DISTANCE_4_3)\nprint(\"DISTANCE 4 TO 5: \",DISTANCE_4_5)","0129732c":"Coordinates_1_E = [Image_Reading_List[1][0].header[\"ECL_LAT\"],Image_Reading_List[1][0].header[\"ECL_LONG\"]]\n\nCoordinates_2_E = [Image_Reading_List[3][0].header[\"ECL_LAT\"],Image_Reading_List[3][0].header[\"ECL_LONG\"]]\n\nCoordinates_3_E = [Image_Reading_List[9][0].header[\"ECL_LAT\"],Image_Reading_List[9][0].header[\"ECL_LONG\"]]\n\nCoordinates_4_E = [Image_Reading_List[10][0].header[\"ECL_LAT\"],Image_Reading_List[10][0].header[\"ECL_LONG\"]]\n\nCoordinates_5_E = [Image_Reading_List[11][0].header[\"ECL_LAT\"],Image_Reading_List[11][0].header[\"ECL_LONG\"]]\n\nCoordinates_6_E = [Image_Reading_List[14][0].header[\"ECL_LAT\"],Image_Reading_List[14][0].header[\"ECL_LONG\"]]","c924b93e":"plt.figure(figsize=(10,10))\n\nplt.subplot(projection=\"lambert\")\nplt.grid(True)\n\nplt.plot(Coordinates_1_E[0],Coordinates_1_E[1],color=\"red\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[1][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_2_E[0],Coordinates_2_E[1],color=\"white\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[3][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_3_E[0],Coordinates_3_E[1],color=\"blue\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[9][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_4_E[0],Coordinates_4_E[1],color=\"green\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[10][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_5_E[0],Coordinates_5_E[1],color=\"yellow\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[11][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_6_E[0],Coordinates_6_E[1],color=\"cyan\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[14][0].header[\"TARGNAME\"])\n\n\nplt.tight_layout()\nplt.xlabel(\"ecliptic latitude of the target (deg) (J2000)\")\nplt.ylabel(\"ecliptic longitude of the target (deg) (J2000)\")\nplt.legend(prop=dict(size=10))\nplt.title(\"POSITION\")\nplt.show()","b68be1f2":"plt.figure(figsize=(10,10))\n\nplt.grid(True)\n\nplt.plot(Coordinates_1_E[0],Coordinates_1_E[1],color=\"red\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[1][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_2_E[0],Coordinates_2_E[1],color=\"white\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[3][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_3_E[0],Coordinates_3_E[1],color=\"blue\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[9][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_4_E[0],Coordinates_4_E[1],color=\"green\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[10][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_5_E[0],Coordinates_5_E[1],color=\"yellow\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[11][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_6_E[0],Coordinates_6_E[1],color=\"cyan\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[14][0].header[\"TARGNAME\"])\n\n\nplt.tight_layout()\nplt.xlabel(\"ecliptic latitude of the target (deg) (J2000)\")\nplt.ylabel(\"ecliptic longitude of the target (deg) (J2000)\")\nplt.legend(prop=dict(size=10))\nplt.title(\"POSITION\")\nplt.show()","e701d866":"x1, y1 = [Coordinates_4_E[1], Coordinates_1_E[1]],[Coordinates_4_E[0], Coordinates_1_E[0]]\nx2, y2 = [Coordinates_4_E[1], Coordinates_2_E[1]],[Coordinates_4_E[0], Coordinates_2_E[0]]\nx3, y3 = [Coordinates_4_E[1], Coordinates_3_E[1]],[Coordinates_4_E[0], Coordinates_3_E[0]]\nx4, y4 = [Coordinates_4_E[1], Coordinates_4_E[1]],[Coordinates_4_E[0], Coordinates_4_E[0]]\nx5, y5 = [Coordinates_4_E[1], Coordinates_5_E[1]],[Coordinates_4_E[0], Coordinates_5_E[0]]\nx6, y6 = [Coordinates_4_E[1], Coordinates_6_E[1]],[Coordinates_4_E[0], Coordinates_6_E[0]]\n\nplt.figure(figsize=(20, 8))\nplt.plot(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6, marker = 'o',markersize=12,label=\"CONNECTION\")\nplt.title(\"POSITIONS TO EACH OTHER\")\nplt.legend(prop=dict(size=10))\nplt.show()","01c3e7f8":"print(\"1 LINE DISTANCE: \",(x1[0] + x1[1]) - (y1[0] + y1[1]))\nprint(\"2 LINE DISTANCE: \",(x2[0] + x2[1]) - (y2[0] + y2[1]))\nprint(\"3 LINE DISTANCE: \",(x3[0] + x3[1]) - (y3[0] + y3[1]))\nprint(\"4 LINE DISTANCE: \",(x4[0] + x4[1]) - (y4[0] + y4[1]))\nprint(\"5 LINE DISTANCE: \",(x5[0] + x5[1]) - (y5[0] + y5[1]))\nprint(\"6 LINE DISTANCE: \",(x6[0] + x6[1]) - (y6[0] + y6[1]))","fd8530f7":"LINE_1 = (x1[0] + x1[1]) - (y1[0] + y1[1])\nLINE_2 = (x2[0] + x2[1]) - (y2[0] + y2[1])\nLINE_3 = (x3[0] + x3[1]) - (y3[0] + y3[1])\nLINE_4 = (x4[0] + x4[1]) - (y4[0] + y4[1])\nLINE_5 = (x5[0] + x5[1]) - (y5[0] + y5[1])\nLINE_6 = (x6[0] + x6[1]) - (y6[0] + y6[1])\n\nDISTANCE_4_1 = LINE_4 - LINE_1\nDISTANCE_4_2 = LINE_4 - LINE_2\nDISTANCE_4_3 = LINE_4 - LINE_3\nDISTANCE_4_5 = LINE_4 - LINE_5\nDISTANCE_4_6 = LINE_4 - LINE_6\n\n\nprint(\"DISTANCE 4 TO 1: \",DISTANCE_4_1)\nprint(\"DISTANCE 4 TO 2: \",DISTANCE_4_2)\nprint(\"DISTANCE 4 TO 3: \",DISTANCE_4_3)\nprint(\"DISTANCE 4 TO 5: \",DISTANCE_4_5)\nprint(\"DISTANCE 4 TO 6: \",DISTANCE_4_6)","724727d6":"Coordinates_1_RD = [Image_Reading_List[1][0].header[\"RA_TARG\"],Image_Reading_List[1][0].header[\"DEC_TARG\"]]\n\nCoordinates_2_RD = [Image_Reading_List[3][0].header[\"RA_TARG\"],Image_Reading_List[3][0].header[\"DEC_TARG\"]]\n\nCoordinates_3_RD = [Image_Reading_List[6][0].header[\"RA_TARG\"],Image_Reading_List[9][0].header[\"DEC_TARG\"]]\n\nCoordinates_4_RD = [Image_Reading_List[8][0].header[\"RA_TARG\"],Image_Reading_List[10][0].header[\"DEC_TARG\"]]\n\nCoordinates_5_RD = [Image_Reading_List[11][0].header[\"RA_TARG\"],Image_Reading_List[11][0].header[\"DEC_TARG\"]]\n\nCoordinates_6_RD = [Image_Reading_List[14][0].header[\"RA_TARG\"],Image_Reading_List[14][0].header[\"DEC_TARG\"]]","af8f7132":"print(Coordinates_1_RD[0],Coordinates_1_RD[1])\nprint(Coordinates_2_RD[0],Coordinates_2_RD[1])\nprint(Coordinates_3_RD[0],Coordinates_3_RD[1])\nprint(Coordinates_4_RD[0],Coordinates_4_RD[1])\nprint(Coordinates_5_RD[0],Coordinates_5_RD[1])\nprint(Coordinates_6_RD[0],Coordinates_6_RD[1])","a0735b92":"plt.figure(figsize=(10,10))\n\nplt.subplot(projection=\"lambert\")\nplt.grid(True)\n\nplt.plot(Coordinates_1_RD[0],Coordinates_1_RD[1],color=\"red\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[1][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_2_RD[0],Coordinates_2_RD[1],color=\"white\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[3][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_3_RD[0],Coordinates_3_RD[1],color=\"blue\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[9][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_4_RD[0],Coordinates_4_RD[1],color=\"green\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[10][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_5_RD[0],Coordinates_5_RD[1],color=\"yellow\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[11][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_6_RD[0],Coordinates_6_RD[1],color=\"cyan\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[14][0].header[\"TARGNAME\"])\n\n\nplt.tight_layout()\nplt.xlabel(\"RA of the target (deg) (J2000)\")\nplt.ylabel(\"DEC of the target (deg) (J2000)\")\nplt.legend(prop=dict(size=10))\nplt.title(\"POSITION\")\nplt.show()","918197c5":"plt.figure(figsize=(10,10))\n\nplt.grid(True)\n\nplt.plot(Coordinates_1_RD[0],Coordinates_1_RD[1],color=\"red\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[1][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_2_RD[0],Coordinates_2_RD[1],color=\"white\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[3][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_3_RD[0],Coordinates_3_RD[1],color=\"blue\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[9][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_4_RD[0],Coordinates_4_RD[1],color=\"green\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[10][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_5_RD[0],Coordinates_5_RD[1],color=\"yellow\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[11][0].header[\"TARGNAME\"])\nplt.plot(Coordinates_6_RD[0],Coordinates_6_RD[1],color=\"cyan\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[14][0].header[\"TARGNAME\"])\n\n\nplt.tight_layout()\nplt.xlabel(\"RA of the target (deg) (J2000)\")\nplt.ylabel(\"DEC of the target (deg) (J2000)\")\nplt.legend(prop=dict(size=10))\nplt.title(\"POSITION\")\nplt.show()","730054ce":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\n\naxis[0].plot(Coordinates_1[0],Coordinates_1[1],color=\"red\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[1][0].header[\"TARGNAME\"])\naxis[0].plot(Coordinates_2[0],Coordinates_2[1],color=\"white\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[3][0].header[\"TARGNAME\"])\naxis[0].plot(Coordinates_3[0],Coordinates_3[1],color=\"blue\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[9][0].header[\"TARGNAME\"])\naxis[0].plot(Coordinates_4[0],Coordinates_4[1],color=\"green\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[10][0].header[\"TARGNAME\"])\naxis[0].plot(Coordinates_5[0],Coordinates_5[1],color=\"yellow\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[11][0].header[\"TARGNAME\"])\naxis[0].plot(Coordinates_6[0],Coordinates_6[1],color=\"cyan\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[14][0].header[\"TARGNAME\"])\naxis[0].set_title(\"GALACTIC\")\naxis[0].grid(True)\n\naxis[1].plot(Coordinates_1_E[0],Coordinates_1_E[1],color=\"red\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[1][0].header[\"TARGNAME\"])\naxis[1].plot(Coordinates_2_E[0],Coordinates_2_E[1],color=\"white\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[3][0].header[\"TARGNAME\"])\naxis[1].plot(Coordinates_3_E[0],Coordinates_3_E[1],color=\"blue\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[9][0].header[\"TARGNAME\"])\naxis[1].plot(Coordinates_4_E[0],Coordinates_4_E[1],color=\"green\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[10][0].header[\"TARGNAME\"])\naxis[1].plot(Coordinates_5_E[0],Coordinates_5_E[1],color=\"yellow\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[11][0].header[\"TARGNAME\"])\naxis[1].plot(Coordinates_6_E[0],Coordinates_6_E[1],color=\"cyan\",marker=\"o\",linestyle=\"None\",markersize=10,label=Image_Reading_List[14][0].header[\"TARGNAME\"])\naxis[1].set_title(\"ECLIPTIC\")\naxis[1].grid(True)\n\nplt.tight_layout()\nplt.legend(prop=dict(size=10))\nplt.show()","369bd41b":"x1, y1 = [Coordinates_4[1], Coordinates_1[1]],[Coordinates_4[0], Coordinates_1[0]]\nx2, y2 = [Coordinates_4[1], Coordinates_2[1]],[Coordinates_4[0], Coordinates_2[0]]\nx3, y3 = [Coordinates_4[1], Coordinates_3[1]],[Coordinates_4[0], Coordinates_3[0]]\nx4, y4 = [Coordinates_4[1], Coordinates_4[1]],[Coordinates_4[0], Coordinates_4[0]]\nx5, y5 = [Coordinates_4[1], Coordinates_5[1]],[Coordinates_4[0], Coordinates_5[0]]\nx6, y6 = [Coordinates_4[1], Coordinates_6[1]],[Coordinates_4[0], Coordinates_6[0]]\n\nx1_E, y1_E = [Coordinates_4_E[1], Coordinates_1_E[1]],[Coordinates_4_E[0], Coordinates_1_E[0]]\nx2_E, y2_E = [Coordinates_4_E[1], Coordinates_2_E[1]],[Coordinates_4_E[0], Coordinates_2_E[0]]\nx3_E, y3_E = [Coordinates_4_E[1], Coordinates_3_E[1]],[Coordinates_4_E[0], Coordinates_3_E[0]]\nx4_E, y4_E = [Coordinates_4_E[1], Coordinates_4_E[1]],[Coordinates_4_E[0], Coordinates_4_E[0]]\nx5_E, y5_E = [Coordinates_4_E[1], Coordinates_5_E[1]],[Coordinates_4_E[0], Coordinates_5_E[0]]\nx6_E, y6_E = [Coordinates_4_E[1], Coordinates_6_E[1]],[Coordinates_4_E[0], Coordinates_6_E[0]]\n\n\nfigure,axis = plt.subplots(1,2,figsize=(15,7))\n\naxis[0].plot(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6, marker = 'o',markersize=12)\naxis[0].set_title(\"GALACTIC\")\naxis[0].grid(True)\n\naxis[1].plot(x1_E, y1_E, x2_E, y2_E, x3_E, y3_E, x4_E, y4_E, x5_E, y5_E, x6_E, y6_E, marker = 'o',markersize=12)\naxis[1].set_title(\"ECLIPTIC\")\naxis[1].grid(True)\n\nplt.legend(prop=dict(size=10))\nplt.show()","647d76dc":"figure,axis = plt.subplots(12,8,figsize=(25,20))\n\n\nfor indexing,operations in enumerate(axis.flat):\n    \n\n    TARGET_IMG = IMG_List[indexing]\n\n    GAUSSIAN_IMG = gaussian_filter(TARGET_IMG,sigma=5)\n\n    operations.imshow(GAUSSIAN_IMG,cmap=\"hot\")\n    operations.set_title(indexing)\n    \nplt.tight_layout()\nplt.show()","44ed0c0b":"figure,axis = plt.subplots(12,8,figsize=(25,20))\n\n\nfor indexing,operations in enumerate(axis.flat):\n    \n\n    TARGET_IMG = IMG_List[indexing]\n\n    GAUSSIAN_IMG = gaussian_filter(TARGET_IMG,sigma=5)\n\n    operations.imshow(GAUSSIAN_IMG,cmap=\"jet\")\n    operations.set_title(indexing)\n    \nplt.tight_layout()\nplt.show()","77d7725e":"figure,axis = plt.subplots(12,8,figsize=(25,20))\n\n\nfor indexing,operations in enumerate(axis.flat):\n    \n\n    TARGET_IMG = IMG_List[indexing]\n\n    GAUSSIAN_IMG = gaussian_filter(TARGET_IMG,sigma=5)\n\n    operations.imshow(GAUSSIAN_IMG,cmap=\"Spectral\")\n    operations.set_title(indexing)\n    \nplt.tight_layout()\nplt.show()","e4283082":"figure,axis = plt.subplots(12,8,figsize=(25,20))\n\n\nfor indexing,operations in enumerate(axis.flat):\n    \n\n    TARGET_IMG = IMG_List[indexing]\n\n    GAUSSIAN_IMG = gaussian_filter(TARGET_IMG,sigma=5)\n\n    operations.imshow(GAUSSIAN_IMG,cmap=\"prism\")\n    operations.set_title(indexing)\n    \nplt.tight_layout()\nplt.show()","f082e736":"Sample_1 = IMG_List[6]\nSample_2 = IMG_List[23]\nSample_3 = IMG_List[28]\nSample_4 = IMG_List[30]\nSample_5 = IMG_List[41]\nSample_6 = IMG_List[42]\nSample_7 = IMG_List[47]\nSample_8 = IMG_List[50]\nSample_9 = IMG_List[77]\nSample_10 = IMG_List[86]","1f51e990":"S_F_1 = FLATTEN_List[6]\nS_F_2 = FLATTEN_List[23]\nS_F_3 = FLATTEN_List[28]\nS_F_4 = FLATTEN_List[30]\nS_F_5 = FLATTEN_List[41]\nS_F_6 = FLATTEN_List[42]\nS_F_7 = FLATTEN_List[47]\nS_F_8 = FLATTEN_List[50]\nS_F_9 = FLATTEN_List[77]\nS_F_10 = FLATTEN_List[86]","8346dfd3":"Image_Primary_Keys[23]","4a253b6b":"Sample_Coor_1 = Image_Reading_List[6][0].header[\"RA_TARG\"],Image_Reading_List[6][0].header[\"DEC_TARG\"]\nSample_Coor_2 = Image_Reading_List[23][0].header[\"RA_TARG\"],Image_Reading_List[23][0].header[\"DEC_TARG\"]\nSample_Coor_3 = Image_Reading_List[28][0].header[\"RA_TARG\"],Image_Reading_List[28][0].header[\"DEC_TARG\"]\nSample_Coor_4 = Image_Reading_List[30][0].header[\"RA_TARG\"],Image_Reading_List[30][0].header[\"DEC_TARG\"]\nSample_Coor_5 = Image_Reading_List[41][0].header[\"RA_TARG\"],Image_Reading_List[41][0].header[\"DEC_TARG\"]\nSample_Coor_6 = Image_Reading_List[42][0].header[\"RA_TARG\"],Image_Reading_List[42][0].header[\"DEC_TARG\"]\nSample_Coor_7 = Image_Reading_List[47][0].header[\"RA_TARG\"],Image_Reading_List[47][0].header[\"DEC_TARG\"]\nSample_Coor_8 = Image_Reading_List[50][0].header[\"RA_TARG\"],Image_Reading_List[50][0].header[\"DEC_TARG\"]\nSample_Coor_9 = Image_Reading_List[77][0].header[\"RA_TARG\"],Image_Reading_List[77][0].header[\"DEC_TARG\"]\nSample_Coor_10 = Image_Reading_List[86][0].header[\"RA_TARG\"],Image_Reading_List[86][0].header[\"DEC_TARG\"]","f9b57509":"print(Sample_Coor_1)\nprint(Sample_Coor_2)\nprint(Sample_Coor_3)\nprint(Sample_Coor_4)\nprint(Sample_Coor_5)\nprint(Sample_Coor_6)\nprint(Sample_Coor_7)\nprint(Sample_Coor_8)\nprint(Sample_Coor_9)\nprint(Sample_Coor_10)","338f1df4":"figure = plt.figure(figsize=(10,10))\n\nTARGET_IMAGE = Sample_1\nMIN_TARGET = Image_Reading_List[6][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[6][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[6][0].header[\"DATE\"]\n\nplt.xlabel(str(f\"{Sample_Coor_1[0]} \/ {Sample_Coor_1[1]}\"))\nplt.ylabel(str(f\"{MIN_TARGET} \/ {MAX_TARGET}\"))\nplt.title(str(DATE_TARGET))\nplt.imshow(TARGET_IMAGE,cmap=\"prism\")","91550884":"figure = plt.figure(figsize=(10,10))\n\nTARGET_IMAGE = Sample_2\nMIN_TARGET = Image_Reading_List[23][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[23][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[23][0].header[\"DATE\"]\n\nplt.xlabel(str(f\"{Sample_Coor_2[0]} \/ {Sample_Coor_2[1]}\"))\nplt.ylabel(str(f\"{MIN_TARGET} \/ {MAX_TARGET}\"))\nplt.title(str(DATE_TARGET))\nplt.imshow(TARGET_IMAGE,cmap=\"prism\")","813c04f9":"figure = plt.figure(figsize=(10,10))\n\nTARGET_IMAGE = Sample_3\nMIN_TARGET = Image_Reading_List[28][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[28][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[28][0].header[\"DATE\"]\n\nplt.xlabel(str(f\"{Sample_Coor_3[0]} \/ {Sample_Coor_3[1]}\"))\nplt.ylabel(str(f\"{MIN_TARGET} \/ {MAX_TARGET}\"))\nplt.title(str(DATE_TARGET))\nplt.imshow(TARGET_IMAGE,cmap=\"prism\")","d74b2d0f":"figure = plt.figure(figsize=(10,10))\n\nTARGET_IMAGE = Sample_4\nMIN_TARGET = Image_Reading_List[30][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[30][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[30][0].header[\"DATE\"]\n\nplt.xlabel(str(f\"{Sample_Coor_4[0]} \/ {Sample_Coor_4[1]}\"))\nplt.ylabel(str(f\"{MIN_TARGET} \/ {MAX_TARGET}\"))\nplt.title(str(DATE_TARGET))\nplt.imshow(TARGET_IMAGE,cmap=\"prism\")","28a2af4a":"figure = plt.figure(figsize=(10,10))\n\nTARGET_IMAGE = Sample_5\nMIN_TARGET = Image_Reading_List[41][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[41][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[41][0].header[\"DATE\"]\n\nplt.xlabel(str(f\"{Sample_Coor_5[0]} \/ {Sample_Coor_5[1]}\"))\nplt.ylabel(str(f\"{MIN_TARGET} \/ {MAX_TARGET}\"))\nplt.title(str(DATE_TARGET))\nplt.imshow(TARGET_IMAGE,cmap=\"prism\")","97f89bc0":"figure = plt.figure(figsize=(10,10))\n\nTARGET_IMAGE = Sample_6\nMIN_TARGET = Image_Reading_List[42][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[42][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[42][0].header[\"DATE\"]\n\nplt.xlabel(str(f\"{Sample_Coor_6[0]} \/ {Sample_Coor_6[1]}\"))\nplt.ylabel(str(f\"{MIN_TARGET} \/ {MAX_TARGET}\"))\nplt.title(str(DATE_TARGET))\nplt.imshow(TARGET_IMAGE,cmap=\"prism\")","64c905e2":"figure = plt.figure(figsize=(10,10))\n\nTARGET_IMAGE = Sample_7\nMIN_TARGET = Image_Reading_List[47][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[47][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[47][0].header[\"DATE\"]\n\nplt.xlabel(str(f\"{Sample_Coor_7[0]} \/ {Sample_Coor_7[1]}\"))\nplt.ylabel(str(f\"{MIN_TARGET} \/ {MAX_TARGET}\"))\nplt.title(str(DATE_TARGET))\nplt.imshow(TARGET_IMAGE,cmap=\"prism\")","75b2888e":"figure = plt.figure(figsize=(10,10))\n\nTARGET_IMAGE = Sample_8\nMIN_TARGET = Image_Reading_List[50][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[50][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[50][0].header[\"DATE\"]\n\nplt.xlabel(str(f\"{Sample_Coor_8[0]} \/ {Sample_Coor_8[1]}\"))\nplt.ylabel(str(f\"{MIN_TARGET} \/ {MAX_TARGET}\"))\nplt.title(str(DATE_TARGET))\nplt.imshow(TARGET_IMAGE,cmap=\"prism\")","c2135bf1":"figure = plt.figure(figsize=(10,10))\n\nTARGET_IMAGE = Sample_9\nMIN_TARGET = Image_Reading_List[77][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[77][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[77][0].header[\"DATE\"]\n\nplt.xlabel(str(f\"{Sample_Coor_9[0]} \/ {Sample_Coor_9[1]}\"))\nplt.ylabel(str(f\"{MIN_TARGET} \/ {MAX_TARGET}\"))\nplt.title(str(DATE_TARGET))\nplt.imshow(TARGET_IMAGE,cmap=\"prism\")","e616fae9":"figure = plt.figure(figsize=(10,10))\n\nTARGET_IMAGE = Sample_10\nMIN_TARGET = Image_Reading_List[86][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[86][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[86][0].header[\"DATE\"]\n\nplt.xlabel(str(f\"{Sample_Coor_10[0]} \/ {Sample_Coor_10[1]}\"))\nplt.ylabel(str(f\"{MIN_TARGET} \/ {MAX_TARGET}\"))\nplt.title(str(DATE_TARGET))\nplt.imshow(TARGET_IMAGE,cmap=\"prism\")","b9e38689":"print(\"MIN WAVE:\\n\")\n\nprint(Image_Reading_List[6][0].header[\"MINWAVE\"])\nprint(Image_Reading_List[23][0].header[\"MINWAVE\"])\nprint(Image_Reading_List[28][0].header[\"MINWAVE\"])\nprint(Image_Reading_List[30][0].header[\"MINWAVE\"])\nprint(Image_Reading_List[41][0].header[\"MINWAVE\"])\nprint(Image_Reading_List[42][0].header[\"MINWAVE\"])\nprint(Image_Reading_List[47][0].header[\"MINWAVE\"])\nprint(Image_Reading_List[50][0].header[\"MINWAVE\"])\nprint(Image_Reading_List[77][0].header[\"MINWAVE\"])\nprint(Image_Reading_List[86][0].header[\"MINWAVE\"])\nprint(\"\\n\")\n\nprint(\"MAX WAVE:\\n\")\n\nprint(Image_Reading_List[6][0].header[\"MAXWAVE\"])\nprint(Image_Reading_List[23][0].header[\"MAXWAVE\"])\nprint(Image_Reading_List[28][0].header[\"MAXWAVE\"])\nprint(Image_Reading_List[30][0].header[\"MAXWAVE\"])\nprint(Image_Reading_List[41][0].header[\"MAXWAVE\"])\nprint(Image_Reading_List[42][0].header[\"MAXWAVE\"])\nprint(Image_Reading_List[47][0].header[\"MAXWAVE\"])\nprint(Image_Reading_List[50][0].header[\"MAXWAVE\"])\nprint(Image_Reading_List[77][0].header[\"MAXWAVE\"])\nprint(Image_Reading_List[86][0].header[\"MAXWAVE\"])\nprint(\"\\n\")","aac0c37e":"print(\"DATE:\\n\")\n\nprint(Image_Reading_List[6][0].header[\"DATE\"])\nprint(Image_Reading_List[23][0].header[\"DATE\"])\nprint(Image_Reading_List[28][0].header[\"DATE\"])\nprint(Image_Reading_List[30][0].header[\"DATE\"])\nprint(Image_Reading_List[41][0].header[\"DATE\"])\nprint(Image_Reading_List[42][0].header[\"DATE\"])\nprint(Image_Reading_List[47][0].header[\"DATE\"])\nprint(Image_Reading_List[50][0].header[\"DATE\"])\nprint(Image_Reading_List[77][0].header[\"DATE\"])\nprint(Image_Reading_List[86][0].header[\"DATE\"])","332d7e4f":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nTARGET_IMAGE = Sample_1\nGAUSS_IMAGE = gaussian_filter(TARGET_IMAGE,sigma=5)\nMIN_TARGET = Image_Reading_List[6][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[6][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[6][0].header[\"DATE\"]\n\naxis[0].set_title(DATE_TARGET)\naxis[0].plot(TARGET_IMAGE)\n\naxis[1].set_title(f\"{MIN_TARGET} \/ {MAX_TARGET}\")\naxis[1].imshow(GAUSS_IMAGE,cmap=\"hot\")","e44a06ed":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nTARGET_IMAGE = Sample_2\nGAUSS_IMAGE = gaussian_filter(TARGET_IMAGE,sigma=5)\nMIN_TARGET = Image_Reading_List[23][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[23][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[23][0].header[\"DATE\"]\n\naxis[0].set_title(DATE_TARGET)\naxis[0].plot(TARGET_IMAGE)\n\naxis[1].set_title(f\"{MIN_TARGET} \/ {MAX_TARGET}\")\naxis[1].imshow(GAUSS_IMAGE,cmap=\"hot\")","b89aad2e":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nTARGET_IMAGE = Sample_5\nGAUSS_IMAGE = gaussian_filter(TARGET_IMAGE,sigma=5)\nMIN_TARGET = Image_Reading_List[41][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[41][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[41][0].header[\"DATE\"]\n\naxis[0].set_title(DATE_TARGET)\naxis[0].plot(TARGET_IMAGE)\n\naxis[1].set_title(f\"{MIN_TARGET} \/ {MAX_TARGET}\")\naxis[1].imshow(GAUSS_IMAGE,cmap=\"hot\")","2e790492":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nTARGET_IMAGE = Sample_3\nGAUSS_IMAGE = gaussian_filter(TARGET_IMAGE,sigma=5)\nMIN_TARGET = Image_Reading_List[28][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[28][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[28][0].header[\"DATE\"]\n\naxis[0].set_title(DATE_TARGET)\naxis[0].plot(TARGET_IMAGE)\n\naxis[1].set_title(f\"{MIN_TARGET} \/ {MAX_TARGET}\")\naxis[1].imshow(GAUSS_IMAGE,cmap=\"hot\")","be0b73f8":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nTARGET_IMAGE = Sample_4\nGAUSS_IMAGE = gaussian_filter(TARGET_IMAGE,sigma=5)\nMIN_TARGET = Image_Reading_List[30][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[30][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[30][0].header[\"DATE\"]\n\naxis[0].set_title(DATE_TARGET)\naxis[0].plot(TARGET_IMAGE)\n\naxis[1].set_title(f\"{MIN_TARGET} \/ {MAX_TARGET}\")\naxis[1].imshow(GAUSS_IMAGE,cmap=\"hot\")","698e74a3":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nTARGET_IMAGE = Sample_6\nGAUSS_IMAGE = gaussian_filter(TARGET_IMAGE,sigma=5)\nMIN_TARGET = Image_Reading_List[42][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[42][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[42][0].header[\"DATE\"]\n\naxis[0].set_title(DATE_TARGET)\naxis[0].plot(TARGET_IMAGE)\n\naxis[1].set_title(f\"{MIN_TARGET} \/ {MAX_TARGET}\")\naxis[1].imshow(GAUSS_IMAGE,cmap=\"hot\")","cac817d0":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nTARGET_IMAGE = Sample_7\nGAUSS_IMAGE = gaussian_filter(TARGET_IMAGE,sigma=5)\nMIN_TARGET = Image_Reading_List[47][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[47][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[47][0].header[\"DATE\"]\n\naxis[0].set_title(DATE_TARGET)\naxis[0].plot(TARGET_IMAGE)\n\naxis[1].set_title(f\"{MIN_TARGET} \/ {MAX_TARGET}\")\naxis[1].imshow(GAUSS_IMAGE,cmap=\"hot\")","eb78dd18":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nTARGET_IMAGE = Sample_8\nGAUSS_IMAGE = gaussian_filter(TARGET_IMAGE,sigma=5)\nMIN_TARGET = Image_Reading_List[50][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[50][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[50][0].header[\"DATE\"]\n\naxis[0].set_title(DATE_TARGET)\naxis[0].plot(TARGET_IMAGE)\n\naxis[1].set_title(f\"{MIN_TARGET} \/ {MAX_TARGET}\")\naxis[1].imshow(GAUSS_IMAGE,cmap=\"hot\")","239b9b91":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nTARGET_IMAGE = Sample_9\nGAUSS_IMAGE = gaussian_filter(TARGET_IMAGE,sigma=5)\nMIN_TARGET = Image_Reading_List[77][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[77][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[77][0].header[\"DATE\"]\n\naxis[0].set_title(DATE_TARGET)\naxis[0].plot(TARGET_IMAGE)\n\naxis[1].set_title(f\"{MIN_TARGET} \/ {MAX_TARGET}\")\naxis[1].imshow(GAUSS_IMAGE,cmap=\"hot\")","88d71e26":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nTARGET_IMAGE = Sample_10\nGAUSS_IMAGE = gaussian_filter(TARGET_IMAGE,sigma=5)\nMIN_TARGET = Image_Reading_List[86][0].header[\"MINWAVE\"]\nMAX_TARGET = Image_Reading_List[86][0].header[\"MAXWAVE\"]\nDATE_TARGET = Image_Reading_List[86][0].header[\"DATE\"]\n\naxis[0].set_title(DATE_TARGET)\naxis[0].plot(TARGET_IMAGE)\n\naxis[1].set_title(f\"{MIN_TARGET} \/ {MAX_TARGET}\")\naxis[1].imshow(GAUSS_IMAGE,cmap=\"hot\")","a2d72d41":"SAMPLES_F_LIST = [S_F_1,S_F_2,S_F_3,S_F_4,S_F_5,\n               S_F_6,S_F_7,S_F_8,S_F_9,S_F_10]","2ff9129b":"figure,axis = plt.subplots(2,5,figsize=(15,15))\n\nfor indexing,operations in enumerate(axis.flat):\n    \n    TARGET_SAMPLE = SAMPLES_F_LIST[indexing]\n    operations.magnitude_spectrum(TARGET_SAMPLE)\n    \nplt.tight_layout()\nplt.show()","56bb71f3":"SAMPLES_LIST = [Sample_1,Sample_2,Sample_3,Sample_4,Sample_5,\n               Sample_6,Sample_7,Sample_8,Sample_9,Sample_10]","1e16c45b":"figure,axis = plt.subplots(2,5,figsize=(15,15))\n\nfor indexing,operations in enumerate(axis.flat):\n    \n    TARGET_SAMPLE = SAMPLES_LIST[indexing]\n    operations.hist2d(TARGET_SAMPLE[0],TARGET_SAMPLE[1],cmap=\"hot\")\n    operations.set_title(indexing)\n    \nplt.tight_layout()\nplt.show()","e2560af3":"figure,axis = plt.subplots(2,5,figsize=(15,15))\n\nfor indexing,operations in enumerate(axis.flat):\n    \n    TARGET_SAMPLE = SAMPLES_LIST[indexing]\n    operations.hexbin(TARGET_SAMPLE[0],TARGET_SAMPLE[1],cmap=\"hot\")\n    operations.set_title(indexing)\n    \nplt.tight_layout()\nplt.show()","ff9df3f4":"figure,axis = plt.subplots(2,5,figsize=(15,15))\n\nClahe_Func = cv2.createCLAHE(clipLimit=5.0,tileGridSize=(19,19))\n\nfor indexing,operations in enumerate(axis.flat):\n    \n    TARGET_SAMPLE = SAMPLES_LIST[indexing]\n    CLAHE_IMG = Clahe_Func.apply(TARGET_SAMPLE.astype(np.uint8))\n    operations.imshow(CLAHE_IMG,cmap=\"hot\")\n    operations.set_title(indexing)\n    \nplt.tight_layout()\nplt.show()","3263a545":"figure,axis = plt.subplots(2,5,figsize=(15,15))\n\nClahe_Func = cv2.createCLAHE(clipLimit=5.0,tileGridSize=(19,19))\n\nfor indexing,operations in enumerate(axis.flat):\n    \n    TARGET_SAMPLE = SAMPLES_LIST[indexing]\n    CLAHE_IMG = Clahe_Func.apply(TARGET_SAMPLE.astype(np.uint8))\n    operations.imshow(CLAHE_IMG,cmap=\"prism\")\n    operations.set_title(indexing)\n    \nplt.tight_layout()\nplt.show()","7af92917":"figure,axis = plt.subplots(2,5,figsize=(15,15))\n\n\nfor indexing,operations in enumerate(axis.flat):\n    \n    TARGET_SAMPLE = SAMPLES_LIST[indexing]\n    GAUSS_IMAGE = gaussian_filter(TARGET_SAMPLE,sigma=5)\n    HESSIAN_SPEC = hessian_matrix(GAUSS_IMAGE,sigma=0.8,order=\"rc\")\n    HESSIAN_MAX,HESSIAN_MIN = hessian_matrix_eigvals(HESSIAN_SPEC)\n    \n    operations.imshow(HESSIAN_MAX,cmap=\"prism\")\n    operations.set_title(\"MAX\")\n    \n    \n\nplt.tight_layout()\nplt.show()","141b1183":"figure,axis = plt.subplots(2,5,figsize=(15,15))\n\nfor indexing,operations in enumerate(axis.flat):\n    \n    TARGET_SAMPLE = SAMPLES_LIST[indexing]\n    GAUSS_IMAGE = gaussian_filter(TARGET_SAMPLE,sigma=5)\n    HESSIAN_SPEC = hessian_matrix(GAUSS_IMAGE,sigma=0.8,order=\"rc\")\n    HESSIAN_MAX,HESSIAN_MIN = hessian_matrix_eigvals(HESSIAN_SPEC)\n    \n    operations.imshow(HESSIAN_MIN,cmap=\"prism\")\n    operations.set_title(\"MIN\")\n    \nplt.tight_layout()\nplt.show()","65a4b23f":"figure,axis = plt.subplots(2,5,figsize=(15,15))\n\nClahe_Func = cv2.createCLAHE(clipLimit=5.0,tileGridSize=(19,19))\nkernel = np.array([[-1,-1,-1], [-1,9,-1], [-1,-1,-1]])\n\nfor indexing,operations in enumerate(axis.flat):\n    \n    TARGET_SAMPLE = SAMPLES_LIST[indexing]\n    CLAHE_IMG = Clahe_Func.apply(TARGET_SAMPLE.astype(np.uint8))\n    SHARP_IMG = cv2.filter2D(CLAHE_IMG, -1, kernel)\n    operations.imshow(SHARP_IMG,cmap=\"hot\")\n    operations.set_title(indexing)\n    \nplt.tight_layout()\nplt.show()","ba40d22a":"figure = plt.figure(figsize=(12,12))\nTARGET_SAMPLE = SAMPLES_LIST[5]\nGAUSS_IMAGE = gaussian_filter(TARGET_SAMPLE,sigma=5)\n_,Threshold_TOZERO = cv2.threshold(GAUSS_IMAGE,80,255,cv2.THRESH_TOZERO)\n\nplt.imshow(Threshold_TOZERO,cmap=\"gray\")","6e7a72f8":"figure,axis = plt.subplots(1,5,figsize=(20,20))\n\nClahe_Func = cv2.createCLAHE(clipLimit=5.0,tileGridSize=(19,19))\nkernel = np.array([[-1,-1,-1], [-1,9,-1], [-1,-1,-1]])\n\nTARGET_SAMPLE = SAMPLES_LIST[5]\nGAUSS_IMAGE = gaussian_filter(TARGET_SAMPLE,sigma=5)\nCLAHE_IMG = Clahe_Func.apply(TARGET_SAMPLE.astype(np.uint8))\nSHARP_IMG = cv2.filter2D(CLAHE_IMG, -1, kernel)\n\n_,Threshold_TOZERO = cv2.threshold(GAUSS_IMAGE,80,255,cv2.THRESH_TOZERO)\nContours,_ = cv2.findContours(Threshold_TOZERO.astype(np.uint8),cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)\n\nMain_Copy = GAUSS_IMAGE.copy()\nLine_Copy = GAUSS_IMAGE.copy()\nTransformed_Copy = GAUSS_IMAGE.copy()\n\nIMG_H = Main_Copy.shape[0]\nIMG_W = Main_Copy.shape[1]\n\nfor cnt in Contours:\n    \n    approx = cv2.approxPolyDP(cnt, 0.09 * cv2.arcLength(cnt,True),True)\n    \n    Draw_Func = cv2.drawContours(Main_Copy.astype(np.uint8),[approx],0,(255,0,0),50)\n    \n    Counting_Approx = approx.ravel()\n    \n    for x_cor in approx:\n        coor_x = int(x_cor[0][0])\n        coor_y = int(x_cor[0][1])\n        Marker_IMG = cv2.drawMarker(Transformed_Copy,(coor_x,coor_y),(255,255,255),thickness=50,markerType=cv2.MARKER_CROSS)\n        Line_IMG = cv2.line(Line_Copy,(IMG_H,IMG_W),(coor_x,coor_y),(255,255,255),5)\n        \naxis[0].set_title(\"CLAHE\")\naxis[0].imshow(SHARP_IMG,cmap=\"prism\")\naxis[0].axis(\"off\")\n\naxis[1].set_title(\"MARKER\")\naxis[1].imshow(Marker_IMG,cmap=\"prism\")\naxis[1].axis(\"off\")\n\naxis[2].set_title(\"BRIGHT\")\naxis[2].imshow(Draw_Func,cmap=\"prism\")\naxis[2].axis(\"off\")\n\naxis[3].set_title(\"LINE\")\naxis[3].imshow(Line_IMG,cmap=\"prism\")\naxis[3].axis(\"off\")\n\naxis[4].set_title(\"TOZERO\")\naxis[4].imshow(Threshold_TOZERO,cmap=\"prism\")\naxis[4].axis(\"off\")","62d4823e":"figure,axis = plt.subplots(1,5,figsize=(20,20))\n\nClahe_Func = cv2.createCLAHE(clipLimit=5.0,tileGridSize=(19,19))\nkernel = np.array([[-1,-1,-1], [-1,9,-1], [-1,-1,-1]])\n\nTARGET_SAMPLE = SAMPLES_LIST[5]\nGAUSS_IMAGE = gaussian_filter(TARGET_SAMPLE,sigma=5)\nCLAHE_IMG = Clahe_Func.apply(TARGET_SAMPLE.astype(np.uint8))\nSHARP_IMG = cv2.filter2D(CLAHE_IMG, -1, kernel)\n\n_,Threshold_TOZERO = cv2.threshold(GAUSS_IMAGE,80,255,cv2.THRESH_TOZERO)\nContours,_ = cv2.findContours(Threshold_TOZERO.astype(np.uint8),cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)\n\nMain_Copy = GAUSS_IMAGE.copy()\nLine_Copy = GAUSS_IMAGE.copy()\nTransformed_Copy = GAUSS_IMAGE.copy()\n\nIMG_H = Main_Copy.shape[0]\nIMG_W = Main_Copy.shape[1]\n\nfor cnt in Contours:\n    \n    approx = cv2.approxPolyDP(cnt, 0.09 * cv2.arcLength(cnt,True),True)\n    \n    Draw_Func = cv2.drawContours(Main_Copy.astype(np.uint8),[approx],0,(255,0,0),80)\n    \n    Counting_Approx = approx.ravel()\n    \n    for x_cor in approx:\n        coor_x = int(x_cor[0][0])\n        coor_y = int(x_cor[0][1])\n        Marker_IMG = cv2.drawMarker(Transformed_Copy,(coor_x,coor_y),(255,255,255),thickness=50,markerType=cv2.MARKER_CROSS)\n        Line_IMG = cv2.line(Line_Copy,(int(Marker_IMG.shape[0] \/ 2),int(Marker_IMG.shape[1] \/ 2)),(coor_x,coor_y),(255,255,255),5)\n        \naxis[0].set_title(\"CLAHE\")\naxis[0].imshow(SHARP_IMG,cmap=\"hot\")\naxis[0].axis(\"off\")\n\naxis[1].set_title(\"MARKER\")\naxis[1].imshow(Marker_IMG,cmap=\"hot\")\naxis[1].axis(\"off\")\n\naxis[2].set_title(\"BRIGHT\")\naxis[2].imshow(Draw_Func,cmap=\"hot\")\naxis[2].axis(\"off\")\n\naxis[3].set_title(\"LINE\")\naxis[3].imshow(Line_IMG,cmap=\"hot\")\naxis[3].axis(\"off\")\n\naxis[4].set_title(\"TOZERO\")\naxis[4].imshow(Threshold_TOZERO,cmap=\"hot\")\naxis[4].axis(\"off\")","efd72fa7":"figure,axis = plt.subplots(1,3,figsize=(20,20))\n\nClahe_Func = cv2.createCLAHE(clipLimit=5.0,tileGridSize=(19,19))\nkernel = np.array([[-1,-1,-1], [-1,9,-1], [-1,-1,-1]])\n\nTARGET_SAMPLE = SAMPLES_LIST[5]\nGAUSS_IMAGE = gaussian_filter(TARGET_SAMPLE,sigma=5)\nCLAHE_IMG = Clahe_Func.apply(TARGET_SAMPLE.astype(np.uint8))\nSHARP_IMG = cv2.filter2D(CLAHE_IMG, -1, kernel)\n\n_,Threshold_TOZERO = cv2.threshold(GAUSS_IMAGE,80,255,cv2.THRESH_TOZERO)\nContours,_ = cv2.findContours(Threshold_TOZERO.astype(np.uint8),cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)\n\n(minVal, maxVal, minLoc, maxLoc) = cv2.minMaxLoc(GAUSS_IMAGE)\n\nMain_Copy = GAUSS_IMAGE.copy()\nLine_Copy = GAUSS_IMAGE.copy()\nTransformed_Copy = GAUSS_IMAGE.copy()\n\n\nfor (i, c) in enumerate(Contours):\n    points = []\n    (x, y, w, h) = cv2.boundingRect(c)\n    ((cX, cY), radius) = cv2.minEnclosingCircle(c)\n    Light_Circle = cv2.circle(Main_Copy, (int(cX), int(cY)), int(radius),(255, 255, 255), 50)\n    points.append([[int(cX), int(cY)]])\n\n\naxis[0].set_title(\"CLAHE\")\naxis[0].imshow(SHARP_IMG,cmap=\"hot\")\naxis[0].axis(\"off\")\n\naxis[1].set_title(\"TOZERO\")\naxis[1].imshow(Threshold_TOZERO,cmap=\"hot\")\naxis[1].axis(\"off\")\n\naxis[2].set_title(\"LIGHT\")\naxis[2].imshow(Light_Circle,cmap=\"hot\")\naxis[2].axis(\"off\")","841778f7":"print(cX)\nprint(cY)\nprint(radius)","bd64570e":"figure,axis = plt.subplots(1,3,figsize=(20,20))\n\nClahe_Func = cv2.createCLAHE(clipLimit=5.0,tileGridSize=(19,19))\nkernel = np.array([[-1,-1,-1], [-1,9,-1], [-1,-1,-1]])\n\nTARGET_SAMPLE = SAMPLES_LIST[0]\nGAUSS_IMAGE = gaussian_filter(TARGET_SAMPLE,sigma=5)\nCLAHE_IMG = Clahe_Func.apply(TARGET_SAMPLE.astype(np.uint8))\nSHARP_IMG = cv2.filter2D(CLAHE_IMG, -1, kernel)\n\n_,Threshold_TOZERO = cv2.threshold(GAUSS_IMAGE,80,255,cv2.THRESH_TOZERO)\nContours,_ = cv2.findContours(Threshold_TOZERO.astype(np.uint8),cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)\n\n(minVal, maxVal, minLoc, maxLoc) = cv2.minMaxLoc(GAUSS_IMAGE)\n\nMain_Copy = GAUSS_IMAGE.copy()\nLine_Copy = GAUSS_IMAGE.copy()\nTransformed_Copy = GAUSS_IMAGE.copy()\n\n\nfor (i, c) in enumerate(Contours):\n    points = []\n    (x, y, w, h) = cv2.boundingRect(c)\n    ((cX, cY), radius) = cv2.minEnclosingCircle(c)\n    Light_Circle = cv2.circle(Main_Copy, (int(cX), int(cY)), int(radius),(255, 255, 255), 50)\n    points.append([[int(cX), int(cY)]])\n\n\naxis[0].set_title(\"CLAHE\")\naxis[0].imshow(SHARP_IMG,cmap=\"hot\")\naxis[0].axis(\"off\")\n\naxis[1].set_title(\"TOZERO\")\naxis[1].imshow(Threshold_TOZERO,cmap=\"hot\")\naxis[1].axis(\"off\")\n\naxis[2].set_title(\"LIGHT\")\naxis[2].imshow(Light_Circle,cmap=\"hot\")\naxis[2].axis(\"off\")","1f0f4184":"figure = plt.figure(figsize=(20,20))\n\nTARGET_SAMPLE = SAMPLES_LIST[5]\nGAUSS_IMAGE = gaussian_filter(TARGET_SAMPLE,sigma=5)\nCLAHE_IMG = Clahe_Func.apply(TARGET_SAMPLE.astype(np.uint8))\nSHARP_IMG = cv2.filter2D(CLAHE_IMG, -1, kernel)\n\nplt.imshow(SHARP_IMG,cmap=\"hot\")\nplt.axis(\"off\")\n\nplt.tight_layout()\nplt.show()\nplt.savefig(\"BLACK_HOLE_CLAHE_1\")","a370cb24":"figure = plt.figure(figsize=(20,20))\n\nTARGET_SAMPLE = SAMPLES_LIST[0]\nGAUSS_IMAGE = gaussian_filter(TARGET_SAMPLE,sigma=5)\nCLAHE_IMG = Clahe_Func.apply(TARGET_SAMPLE.astype(np.uint8))\nSHARP_IMG = cv2.filter2D(CLAHE_IMG, -1, kernel)\n\nplt.imshow(SHARP_IMG,cmap=\"hot\")\nplt.axis(\"off\")\n\nplt.tight_layout()\nplt.show()","b411c050":"figure = plt.figure(figsize=(20,20))\n\nTARGET_SAMPLE = SAMPLES_LIST[3]\nGAUSS_IMAGE = gaussian_filter(TARGET_SAMPLE,sigma=5)\nCLAHE_IMG = Clahe_Func.apply(TARGET_SAMPLE.astype(np.uint8))\nSHARP_IMG = cv2.filter2D(CLAHE_IMG, -1, kernel)\n\nplt.imshow(SHARP_IMG,cmap=\"hot\")\nplt.axis(\"off\")\n\nplt.tight_layout()\nplt.show()","af984072":"figure = plt.figure(figsize=(20,20))\n\nTARGET_SAMPLE = SAMPLES_LIST[4]\nGAUSS_IMAGE = gaussian_filter(TARGET_SAMPLE,sigma=5)\nCLAHE_IMG = Clahe_Func.apply(TARGET_SAMPLE.astype(np.uint8))\nSHARP_IMG = cv2.filter2D(CLAHE_IMG, -1, kernel)\n\nplt.imshow(SHARP_IMG,cmap=\"hot\")\nplt.axis(\"off\")\n\nplt.tight_layout()\nplt.show()","e362e3d6":"figure = plt.figure(figsize=(20,20))\n\nTARGET_SAMPLE = Light_Circle\n\nplt.imshow(TARGET_SAMPLE,cmap=\"hot\")\nplt.axis(\"off\")\n\nplt.tight_layout()\nplt.show()","00d6fae7":"figure = plt.figure(figsize=(20,20))\n\nTARGET_SAMPLE = SAMPLES_LIST[0]\nGAUSS_IMAGE = gaussian_filter(TARGET_SAMPLE,sigma=5)\n\n\nplt.imshow(GAUSS_IMAGE,cmap=\"hot\")\nplt.axis(\"off\")\n\nplt.tight_layout()\nplt.show()\nplt.savefig(\"BLACK_HOLE_OBSER_1\")","ccb94fc5":"figure = plt.figure(figsize=(20,20))\n\nTARGET_SAMPLE = SAMPLES_LIST[5]\nGAUSS_IMAGE = gaussian_filter(TARGET_SAMPLE,sigma=5)\n\n\nplt.imshow(GAUSS_IMAGE,cmap=\"hot\")\nplt.axis(\"off\")\n\nplt.tight_layout()\nplt.show()\nplt.savefig(\"BLACK_HOLE_OBSER_2\")","98eab474":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/c\/c3\/Heliocentric_rectangular_ecliptic.png\/220px-Heliocentric_rectangular_ecliptic.png)","dac67997":"#### TOGETHER","3c665b69":"#### MAGNITUDE SPECTRUM","5b0b1b1d":"# COORDINATES","d8d84ec6":"#### PICKING SAMPLES","2fb403bb":"* The galactic coordinate system is a celestial coordinate system in spherical coordinates, with the Sun as its center, the primary direction aligned with the approximate center of the Milky Way Galaxy, and the fundamental plane parallel to an approximation of the galactic plane but offset to its north. It uses the right-handed convention, meaning that coordinates are positive toward the north and toward the east in the fundamental plane","e849ebcb":"![](https:\/\/public.nrao.edu\/wp-content\/uploads\/2021\/04\/M87_MultiwavelengthV8a-768x577.jpg)","3ae1a771":" * In image processing, a Gaussian blur (also known as Gaussian smoothing) is the result of blurring an image by a Gaussian function (named after mathematician and scientist Carl Friedrich Gauss). It is a widely used effect in graphics software, typically to reduce image noise and reduce detail.","f48e95ab":"#### HEX BIN HISTOGRAM","de2d5e9e":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/2\/2a\/Galactic_coordinates.JPG\/220px-Galactic_coordinates.JPG)","63687142":"#### PATH PROCESS AND RE-BUILT","c29af8e8":"# INTERESTING ? ","c6af1064":"#### CLAHE","4eaa195b":"* Contrast Limited AHE (CLAHE) is a variant of adaptive histogram equalization in which the contrast amplification is limited, so as to reduce this problem of noise amplification. In CLAHE, the contrast amplification in the vicinity of a given pixel value is given by the slope of the transformation function.","3ba30535":"* The equatorial coordinate system is a celestial coordinate system widely used to specify the positions of celestial objects. It may be implemented in spherical or rectangular coordinates, both defined by an origin at the centre of Earth, a fundamental plane consisting of the projection of Earth's equator onto the celestial sphere (forming the celestial equator), a primary direction towards the vernal equinox, and a right-handed convention","0824a886":"#### ECLIPTIC","52ce321e":"* A star's spherical coordinates are often expressed as a pair, right ascension and declination, without a distance coordinate. The direction of sufficiently distant objects is the same for all observers, and it is convenient to specify this direction with the same coordinates for all. In contrast, in the horizontal coordinate system, a star's position differs from observer to observer based on their positions on the Earth's surface, and is continuously changing with the Earth's rotation.\n\n* Telescopes equipped with equatorial mounts and setting circles employ the equatorial coordinate system to find objects. Setting circles in conjunction with a star chart or ephemeris allow the telescope to be easily pointed at known objects on the celestial sphere.","86e131c9":"#### HESSIAN","8a9e395f":"##### 2018\/07\/03","0af1f585":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcSE8B3-dtSdbcGCskxy9oF2kAMkP99zwXOQKA&usqp=CAU)","6b38ed40":"#### RA - DEC","8f0a3578":"# PACKAGES AND LIBRARIES","924ccd40":"##### 2018\/07\/04","de243e31":"#### SINGLE OVERVIEW","d88d7870":"#### GALACTIC","c126587c":"# OVERVIEW AND ANALYSIS PROCESS","17e5067a":"## END OF THE PROJECT\n\n### Please check previous research chapters.\n\nCHAPTER I: https:\/\/www.kaggle.com\/brsdincer\/space-objects-around-black-holes-fits-analysis-i\n\nCHAPTER II: https:\/\/www.kaggle.com\/brsdincer\/space-objects-around-black-holes-vision-data-ii\n\nCHAPTER III: https:\/\/www.kaggle.com\/brsdincer\/space-objects-around-black-holes-math-view-iii\n\nCHAPTER IV: https:\/\/www.kaggle.com\/brsdincer\/space-objects-around-black-holes-c-vision-iv\n\nCHAPTER V: https:\/\/www.kaggle.com\/brsdincer\/m87-galaxy-center-objects-analysis-hst-type-i","6414bef5":"# HISTORY\n\n### M87 Galaxy-Center Objects Analysis\n\n#### OVERVIEW\n\n* In this section, we will observe files with the COMPLEX extension and look for meaning. We will try various visual editing and mathematical approaches. We will see what happens in the center of the galaxy. We will examine the effect of the black hole.\n\n#### Context\n\n* Messier 87 (also known as Virgo A or NGC 4486, generally abbreviated to M87) is a supergiant elliptical galaxy with several trillion stars in the constellation Virgo. One of the most massive galaxies in the local universe, it has a large population of globular clusters\u2014about 15,000 compared with the 150\u2013200 orbiting the Milky Way\u2014and a jet of energetic plasma that originates at the core and extends at least 1,500 parsecs (4,900 light-years), traveling at a relativistic speed. It is one of the brightest radio sources in the sky and a popular target for both amateur and professional astronomers.\n\n* The French astronomer Charles Messier discovered M87 in 1781, and cataloged it as a nebula. M87 is about 16.4 million parsecs (53 million light-years) from Earth and is the second-brightest galaxy within the northern Virgo Cluster, having many satellite galaxies. Unlike a disk-shaped spiral galaxy, M87 has no distinctive dust lanes. Instead, it has an almost featureless, ellipsoidal shape typical of most giant elliptical galaxies, diminishing in luminosity with distance from the center. Forming around one-sixth of its mass, M87's stars have a nearly spherically symmetric distribution. Their population density decreases with increasing distance from the core. It has an active supermassive black hole at its core, which forms the primary component of an active galactic nucleus. The black hole was imaged using data collected in 2017 by the Event Horizon Telescope (EHT), with a final, processed image released on 10 April 2019. In March 2021, the EHT Collaboration presented, for the first time, a polarized-based image of the black hole which may help better reveal the forces giving rise to quasars.\n\n* The galaxy is a strong source of multiwavelength radiation, particularly radio waves. Its galactic envelope extends to a radius of about 150 kiloparsecs (490,000 light-years), where it is truncated\u2014possibly by an encounter with another galaxy. Its interstellar medium consists of diffuse gas enriched by elements emitted from evolved stars. The first photographed black hole in history is at the center of this galaxy.\n\n* The data is all composed of FITS files.\n\n* Along with the images taken with the Hubble Space Telescope, there is astronomical information about these objects.","a406de9e":"#### LIGHT MARKER","a70bf63b":"#### HISTOGRAM 2D","8596eac1":"#### PLOT","b4dec1fc":"* Galactic longitude\n\nThe galactic coordinates use the Sun as the origin. Galactic longitude (l) is measured with primary direction from the Sun to the center of the galaxy in the galactic plane, while the galactic latitude (b) measures the angle of the object above the galactic plane.\nLongitude measures the angular distance of an object eastward along the galactic equator from the galactic center. Analogous to terrestrial longitude, galactic longitude is usually measured in degrees (\u00b0).\n\n* Galactic latitude\n\nLatitude measures the angle of an object northward of the galactic equator (or midplane) as viewed from Earth. Analogous to terrestrial latitude, galactic latitude is usually measured in degrees (\u00b0).","679bb407":"* Hessian matrix describes the 2nd order local image intensity variations around the selected voxel. For the obtained Hessian matrix, eigenvector decomposition extracts an orthonormal coordinate system that is aligned with the second order structure of the image.","85e395e5":"![](https:\/\/research.reading.ac.uk\/marine-ecosystem\/wp-content\/uploads\/sites\/68\/logos\/42_digital_logo_dark_blue_sign_A.png)","80987410":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/5\/50\/Ecliptic_grid_globe.png\/220px-Ecliptic_grid_globe.png)","153e888b":"#### SHARPEN","a56fb8a4":"# VISION","9f4800b9":"#### ALL"}}