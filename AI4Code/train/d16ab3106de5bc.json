{"cell_type":{"62063b17":"code","768074f8":"code","26e01546":"code","da9a2f17":"code","073c5609":"code","67fdbd6d":"code","9d074f3d":"code","c9513124":"code","6b30eb11":"code","f937490f":"markdown","8de3e130":"markdown"},"source":{"62063b17":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport requests\nimport json\nimport matplotlib.pyplot as plt\nfrom datetime import date\nimport plotly_express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport plotly.io as pio\npio.templates\nplt.style.use('ggplot')","768074f8":"# Getting Total Employment and Leisure & Hospitality Employment Data\nheaders = {'Content-type': 'application\/json'}\ndata = json.dumps({\"seriesid\": ['CES0000000001','CES7000000001'],\"startyear\":\"2015\", \"endyear\":\"2021\"})\np = requests.post('https:\/\/api.bls.gov\/publicAPI\/v2\/timeseries\/data\/', data=data, headers=headers)\njson_data = json.loads(p.text)","26e01546":"# Converting to tables, dropping duplicate names\nCES0000000001 = pd.json_normalize(json_data['Results']['series'][0]['data'])\nCES7000000001 = pd.json_normalize(json_data['Results']['series'][1]['data'])\nhospitality = CES7000000001.drop(columns=['year', 'period', 'periodName', 'latest', 'footnotes'])\nhospitality = hospitality.rename(columns={'value': 'hospEmp'})\nCES0000000001 = CES0000000001.rename(columns={'value':'totalEmp'})\nCES0000000001","da9a2f17":"# Concat the two tables\nframes = [CES0000000001, hospitality]\nresult =pd.concat(frames, axis=1)\nresult = result.drop(columns={'footnotes', 'latest'})","073c5609":"# I created a date from year and period, there is no day so I used 5th day for all. They are usually announced in the first Friday of following month. \n# You also need to convert to int, otherwise assumes str. \n\nfor index, m in result.iterrows():\n    m['hospEmp'] = int(m['hospEmp'])\n    m['totalEmp'] = int(m['totalEmp'])\n    result.loc[index, 'date'] = date(int(m['year']),int(m['period'][-2:]),5)\n    result.loc[index, 'percent'] = (m['hospEmp'] \/ m['totalEmp'])*100\n\n# Order the table for reasons...\nresult = result[['date', 'year', 'period', 'periodName', 'totalEmp', 'hospEmp', 'percent']]","67fdbd6d":"# Result looks like this: \nresult","9d074f3d":"fig, ax1 = plt.subplots(figsize=(15,10))\nax2 = ax1.twinx()\nax1.plot(result['date'], result['totalEmp'], 'b', linewidth=3)\nax2.plot(result['date'], result['hospEmp'], 'r', linewidth=3)\nax1.set_ylabel('Total Employment', color='b')\nax2.set_ylabel('Leisure & Hospitality Employment', color='r')\nax1.set_title('Total Employment vs Hospitality Industry')\n\nplt.show()","c9513124":"# fig = go.Figure()\n\nfig = make_subplots(specs=[[{\"secondary_y\": True}]])\n\nfig.add_trace(go.Scatter(\n    x=result['date'],\n    y=result['totalEmp'],\n    name='Total Emp',\n    line=dict(color='firebrick', width=4),\n),\n    secondary_y=False,\n)\n\nfig.add_trace(go.Scatter(\n    x=result['date'],\n    y=result['hospEmp'],\n    name='Hospitality Emp',\n    line=dict(color='royalblue', width=4),\n), \n    secondary_y=True,\n)\nfig.update_layout(template='ggplot2')\nfig.show()","6b30eb11":"fig, ax = plt.subplots(figsize=(15,10))\nax.plot(result['date'], result['percent'], 'b', linewidth=3)\nax.set_title('Hosp. Employment as a percentage of Total Emp')\nplt.show()","f937490f":"# Employment Statistics from The Bureau of Labor Statistics (bls.gov)\n\n","8de3e130":"- Total Employment dropped significantly during the COVID-19 pandemic.\n- Hospitality industry was one of the hardest hit because of mandated closures and border closures. \n- As the general economy recovers, hospitality industry is recovering as well."}}