{"cell_type":{"642f5eae":"code","74599a21":"code","292d2050":"code","9c97300f":"code","e6b52efa":"code","c14e9e60":"code","e03b4f53":"code","e82e9bda":"code","b095fba0":"code","e85062de":"code","4a1497d8":"code","638f4ee3":"code","8ee9342a":"code","f212a9c6":"code","b3cf2a82":"code","8b97d7c2":"code","4770ce95":"code","78ca772d":"markdown","b2e87c26":"markdown","64372dbd":"markdown","ddf349de":"markdown","4db3a2de":"markdown","b1bee456":"markdown","d62e2ae1":"markdown","c9be401a":"markdown","8166093f":"markdown","97beb460":"markdown","2b56695c":"markdown","bc3488b4":"markdown","3b84a08d":"markdown","9a3e0366":"markdown","c6423508":"markdown","ee82a8b3":"markdown","973046ef":"markdown","b70087df":"markdown","c48f9497":"markdown","d4bd80b8":"markdown","db73930b":"markdown","3e4fbb2a":"markdown","4a48a7cd":"markdown","1e035128":"markdown","351a30f4":"markdown","26bc7fd2":"markdown"},"source":{"642f5eae":"import pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.rcParams['figure.figsize'] = (16, 8)\nplt.style.use('fivethirtyeight')\n\nimport warnings\nwarnings.filterwarnings('ignore')","74599a21":"df = pd.read_csv('..\/input\/cardataset\/data.csv')\ndisplay(df.head())\nprint('Shape of the Data: ', (df.shape))","292d2050":"df.describe()","9c97300f":"df.columns = df.columns.str.lower().str.replace(\" \", \"_\")\ndf.head()","e6b52efa":"\"\"\"\nMaking List of Categorical Columns\n\"\"\"\ncategorical = list(df.dtypes[df.dtypes == 'object'].index)\n# Other methods \n# list(df.select_dtypes(include = 'O').columns)\n# [col for col in df.columns if df[col].dtype == 'object']","c14e9e60":"\"\"\"\nCleaning Categorical Data in our data set\n\"\"\"\nfor col in categorical:\n    df[col] = df[col].str.lower().str.replace(\" \", \"_\")\n    \ndf.head()","e03b4f53":"\"\"\"Printing out First 5 Unique Values.\"\"\"\nfor col in df.columns:\n    print(col)\n    print(df[col].unique()[:5])\n    print(df[col].nunique())\n    print('\\n')","e82e9bda":"print(\"Number of Missing Values in our data set\\n\")\nmissing_df = df.isnull().sum().to_frame().reset_index().rename({\"index\" : 'Variable', 0: 'Missing Values'}, axis =1)\ndisplay(missing_df.style.background_gradient('gnuplot2_r'))\nprint(\"\\n Percentage of Missing Values in our data set\")\ndisplay((df.isnull().sum() \/ (len(df.index)) * 100).head(20).to_frame().rename({0:'Count'}, axis = 1).style.background_gradient('gnuplot2_r'))\nround((df.isnull().sum() \/ (len(df.index)) * 100) , 2).plot(kind = 'barh',color ='#bf0606')\n\nplt.title(\"Percentage of Missing values\");","b095fba0":"\"\"\"We will use Mode to fill up missing values in Categorical columns\"\"\"\ndf['market_category'].fillna(df['market_category'].mode()[0], inplace = True)\ndf['engine_fuel_type'].fillna(df['engine_fuel_type'].mode()[0], inplace = True)\n   \n\n\"\"\"We will use mean to fill up missing values in Numerical columns\"\"\"\ndf['engine_hp'].fillna(df['engine_hp'].mean(), inplace = True)\n\n\"\"\"We will use median to fill up missing values in Ordinal Numerical columns\"\"\"\ndf['engine_cylinders'].fillna(df['engine_cylinders'].median(), inplace = True)\ndf['number_of_doors'].fillna(df['number_of_doors'].median(), inplace = True)\n\n\"\"\"Checking Missing Values after imputing \"\"\"\ndisplay(df.isnull().sum().to_frame().reset_index().rename({'index' : 'Variables', 0: 'Missing Values'}, axis =1).style.background_gradient('copper_r'))","e85062de":"\"\"\"\nCreating for duplicates\n\"\"\"\ndisplay(\"Total number of of Duplicates present in data: %s\" %df.duplicated().sum())","4a1497d8":"\"\"\"Dropping the Duplicates\"\"\"\ndf.drop_duplicates(inplace = True)\n\n\"\"\"Checking the Duplicates again\"\"\"\nprint(\"Total number of of Duplicates present in data: %s\" %df.duplicated().sum())","638f4ee3":"\"\"\"Correlation Matrix of Data\"\"\"\ndf.corr().style.background_gradient('copper_r')","8ee9342a":"sns.heatmap(df.corr(), cmap = 'copper_r', annot = True, lw = 0.1);","f212a9c6":"numerical = [col for col in df.columns if col not in categorical]\nfor i in numerical:\n    ax = sns.distplot(df[i], color = '#bf0606')\n    plt.title(\"Distribution of %s\" %i, fontsize = 20)\n    plt.xlabel(\" \")\n    plt.ylabel(\" \")\n    plt.xticks(fontsize = 15)\n    plt.show();\n    print('\\n')","b3cf2a82":"nrows = 2\nncols = 4\ni = 0\nfig, ax = plt.subplots(nrows, ncols, figsize = (16,8),)\nfor row in range(nrows):\n    for col in range(ncols):\n        sns.scatterplot(df[numerical].iloc[:, i],df['msrp'],ax = ax[row, col],color = '#bf0606' ).set(ylabel = '')\n        plt.tight_layout()\n        i += 1      ","8b97d7c2":"\"\"\"Creating a function for ordering the groups in a column as per their frequency\"\"\"\ndef sort_order(column):\n    orders = (df.groupby([column]).mean().sort_values(by ='msrp', ascending = False)).index\n    return orders","4770ce95":"\"\"\"Looping over categorical variables to check the Price over different Groups\"\"\"\nfor i in categorical:\n    if df[i].nunique() < 72:\n        sns.barplot(df[i],df['msrp'], order = sort_order(i), palette='copper')\n        plt.title(\"Bar Plot of %s\" %i, fontsize = 20)\n        plt.xticks(fontsize = 12)\n        plt.xlabel(\"%s\"%i)\n        plt.ylabel(\"Car Price\")\n        plt.xticks(fontsize = 15, rotation = 90)\n        plt.show();\n        print('\\n')","78ca772d":"[back to top](#table-of-contents)\n<a id=\"1\"><\/a>\n\n<div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px;color:white\">1. Introduction\n   \n<p style=\"font-family:cursive;font-size:17px;color:white\">Cars dataset with features including make, model, year, engine, and other properties of the car used to predict its price.<\/p>\n<p style=\"font-family:cursive;font-size:17px;color:white\">Scraped from Edmunds and Twitter.<\/p>\n<p style=\"font-family:cursive;font-size:17px;color:white\"> Effects of features on the price<\/p>\n<ul style=\"font-family:cursive;font-size:17px;color:white\">\n<li> Predict the price of Cars using different Variables <\/li>\n    <\/ul>\n<\/div>\n\n","b2e87c26":"[back to top](#table-of-contents)\n<a id=\"4\"><\/a>\n<div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px;color:white\">4. Data Description and initial cleaning<\/div>","64372dbd":"<a id=\"table-of-contents\"><\/a>","ddf349de":"<div style=\"background:#efddc2;color:#c1531f; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px\">Observarion\n<ul style=\"font-family:cursive;font-size:20px;color:c1531f\"> \n<li> There are outliers in: msrp, highway_mpg, year. Outliers can be treated using capping and flooring methods.<\/li>\n<li> Also variable transformation certain variables can help improving the linearity in relationship with dependent variable<\/li> \n<\/ul>\n<\/div> \n\n","4db3a2de":"[back to top](#table-of-contents)\n<a id=\"5.1\"><\/a>\n<div style=\"background:#59a1c6;color:black; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px\">5.1 Treating Missing Values<\/div>","b1bee456":"[back to top](#table-of-contents)\n<a id=\"5\"><\/a>\n<a id=\"5\"><\/a><div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px;color:white\">5. Missing Values<\/div>","d62e2ae1":"![image.png](attachment:33d18b32-6a57-4046-be89-94ee778026ce.png)","c9be401a":"[back to top](#table-of-contents)\n<a id=\"8\"><\/a>\n<div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px;color:white\">8. Checking Relation between all variables<\/div>","8166093f":"[back to top](#table-of-contents)\n<a id=\"8.2\"><\/a>\n<div style=\"background:#59a1c6;color:black; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px\">8.2. Checking Relation between all categorical variables and dependent variables (msrp)<\/div>","97beb460":"[back to top](#table-of-contents)\n<a id=\"2\"><\/a>\n<div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px;color:white\">2. Importing Libraries<\/div>","2b56695c":"[back to top](#table-of-contents)\n<a id=\"4.1\"><\/a>\n<div style=\"background:#59a1c6;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px;color:black\">4.1 Cleaning Strings in Column and Values<\/div>","bc3488b4":"[back to top](#table-of-contents)\n<a id=\"3\"><\/a>\n<div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px;color:white\">3. Loading and Reading Data <\/div>\n\n","3b84a08d":"[back to top](#table-of-contents)\n<a id=\"6\"><\/a>\n<div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px;color:white\">6. Checking duplicates in our data set.<\/div>\n","9a3e0366":"[back to top](#table-of-contents)\n<a id=\"4.2\"><\/a>\n<div style=\"background:#59a1c6;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px;color:black\">4.2 Making List of Categorical Columns <\/div>","c6423508":"<a id=\"6.1\"><\/a>\n<div style=\"background:#59a1c6;color:black; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px\">6.1 Dropping the duplicates<\/div>","ee82a8b3":"<div style=\"background:#efddc2;color:#c1531f; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px\">Observarion\n<ul style=\"font-family:cursive;font-size:20px;color:c1531f\"> \n<li> These bar graphs represents individual categorical variable relation with dependent variable.<\/li>\n<li> Many groups in every variable have leads to high price in car. <\/li> \n    <ul>Some of them are:\n        <li>convertible and coupe in vehicle_style<\/li>  \n        <li>large in vehicle_size<\/li>    \n        <li>exotic, luxury, performance in market_category<\/li> \n        <li>all wheel drive and rear wheel drive in driven_wheels<\/li> \n        <li>automated-manual in transmission type<\/li> \n        <li>bugatti, maybach in vehicle_size<\/li> \n    <\/ul><\/ul>\n<\/div>","973046ef":"[back to top](#table-of-contents)\n<a id=\"8.1.1\"><\/a>\n<div style=\"background:#59a1c6;color:black; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px\">8.1.1 Distribution and relationship of Numerical Variables with dependent variable<\/div>","b70087df":"[back to top](#table-of-contents)\n<a id=\"7\"><\/a>\n<div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px;color:white\">7. Checking Correlation<\/div>","c48f9497":"<div style=\"background:#efddc2;color:#c1531f; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px\">Observarion\n<ul style=\"font-family:cursive;font-size:20px;color:c1531f\"> \n<li> Numerical column distribution shows that some variables has skewed data: msrp, highway_mpg, year. Log transformation of data may be useful before using the data for prediction.<\/li>\n<li> There are certain numerical variables which are ordinal in nature e.g. number_of_doors and engine_cylinders. They can be converted into categorical columns and then transformed for the prediction by using One Hot Encoding etc.<\/li>    \n<li> Variable popularity shows multimodal distribution.<\/li>\n<\/ul>\n<\/div> \n\n","d4bd80b8":"<div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:35px;color:white\"><u>Content in this Notebook<\/u>\n\n<p style=\"font-family:cursive;font-size:23px; color:white\" >Assignment 4: Exploratory Data Analysis<\/p>\n\n<p><a style=\"font-family:cursive;font-size:25px; color: yellow\" href=\"https:\/\/www.linkedin.com\/company\/regexsoftware\/\" target=\"_blank\"> <u>REGex Software Services<\/u><\/a><\/p>\n    \n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#1\"> 1. Introduction <\/a><\/li>     \n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#2\"> 2. Impoting Libraries <\/a><\/li> \n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15;\" href = \"#3\"> 3. Loading and Reading Data <\/a><\/li> \n<li  style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#4\"> 4. Data Description and initial cleaning <\/a><\/li> <ul> \n<li style = \"line-height: 0.7\" ><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#4.1\">4.1 Cleaning Strings in Column and Values<\/a><\/li>\n<li style = \"line-height: 0.7\" ><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#4.2\">4.2 Making List of Categorical Columns<\/a><\/li>\n<li style = \"line-height: 0.7\" ><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#4.3\">4.3 Cleaning Categorical Data in our data set<\/a><\/li><\/ul>  \n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#5\"> 5. Missing Values <\/a><\/li>\n<ul>\n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#5.1\"> 5.1 Treating Missing Values <\/a><\/li>\n<\/ul>\n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#6\"> 6. Checking duplicates in our data set.<\/a><\/li>\n<ul>\n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#6.1\"> 6.1 Dropping the duplicates<\/a><\/li>\n<\/ul>\n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#7\"> 7. Checking Correlation<\/a><\/li>    \n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#8\"> 8. Checking Relation between all variables<\/a><\/li> \n<ul>\n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#8.1\"> 8.1 Distribution and relationship of Numerical Variables with dependent variable<\/a><\/li>\n<ul>\n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#8.1.1\"> 8.1.1 Distribution and relationship of Numerical Variables with dependent variable<\/a><\/li>\n<\/ul> <\/ul>\n<ul>\n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#8.2\"> 8.1 Distribution and relationship of Numerical Variables with dependent variable<\/a><\/li>\n  \n    \n    \n\n\n\n<\/div>\n","db73930b":"[back to top](#table-of-contents)\n<a id=\"4.3\"><\/a>\n<div style=\"background:#59a1c6;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px;color:black\">4.3 Cleaning Categorical Data in our data set <\/div>","3e4fbb2a":"<div style=\"background:#59a1c6;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px;color:black\">Unique values and numbers<\/div>","4a48a7cd":"<div style=\"background:#efddc2;color:#c1531f; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px\">Observarion\n<ul style=\"font-family:cursive;font-size:20px;color:c1531f\"> \n<li> Above tables and plot shows frequency and percentage of missing values in our data set.<\/li>\n<li> Variable market_category has the highest missing values and engine_fuel_type has the least missing values count.<\/li>    \n<li> I will use mode to compute missing values in categorical columns and mean to compute missing values in numerical columns.<\/li>\n<\/ul>\n<\/div> \n\n","1e035128":"<a id=\"8.1\"><\/a>\n<div style=\"background:#59a1c6;color:black; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px\">8.1 Distribution and relationship of Numerical Variables with dependent variable<\/div>","351a30f4":"<div style=\"background:#efddc2;color:#c1531f; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px\">Observarion\n<ul style=\"font-family:cursive;font-size:20px;color:c1531f\"> \n<li> $ \\large msrp$ is the dependent variable. <\/li>\n<li> Variables engine_hp and engine_cylinders has the highest correlation with dependent variable.<\/li>    \n<li> Multicollinearity exits in our data set. Observe the correlation between engine_hp & engine_cylinders and  highway_mpg & city_mpg<\/li>\n<\/ul>\n<\/div> \n\n","26bc7fd2":"<div style=\"background:#efddc2;color:#c1531f; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px\">Observarion\n<ul style=\"font-family:cursive;font-size:20px;color:c1531f\"> \n<li>We had total 715 duplicated values. Hence we dropped the duplicates.<\/li>\n<\/ul>\n<\/div> "}}