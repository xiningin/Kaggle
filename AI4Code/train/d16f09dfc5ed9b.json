{"cell_type":{"00e158eb":"code","c14f6716":"code","dfe5d17a":"code","580fb30d":"code","703907de":"code","0bcfb021":"code","e0a8961a":"code","e581fc38":"code","91f8be65":"code","5d9cff6c":"code","c10e31da":"code","4b22fe5e":"code","c5dcb554":"code","ea0abd42":"code","3ffb601d":"code","93088a2e":"code","a222a31a":"code","8d7af0e4":"code","a31606f3":"code","540a69f4":"code","7c107d54":"markdown"},"source":{"00e158eb":"import pandas as pd\nnetflix=pd.read_csv('..\/input\/tcs-share\/TCS.NS (1).csv')\nnetflix.head()","c14f6716":"netflix=netflix[['Date','Close']]\nnetflix.head()","dfe5d17a":"netflix.info()","580fb30d":"!pip install pycaret-ts-alpha","703907de":"from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\nfrom sktime.utils.plotting import plot_series","0bcfb021":"netflix.index = pd.DatetimeIndex(netflix[\"Date\"])\nnetflix.drop([\"Date\"],axis=1,inplace=True)\nnetflix.head()","e0a8961a":"netflix = netflix.asfreq('d')\nnetflix.index","e581fc38":"netflix.head()","91f8be65":"netflix=netflix.fillna(method='ffill')\nnetflix.head()","5d9cff6c":"data=netflix.Close\ndata","c10e31da":"import matplotlib.pyplot as plt\n_ =plot_series(data)\nplt.xticks(rotation=90)\nplt.grid()","4b22fe5e":"exp = TimeSeriesExperiment()\nexp.setup(data=data,session_id=42,fh=365)","c5dcb554":"## Create a model manually\nmodel = exp.create_model(\"exp_smooth\")\nmodel","ea0abd42":"y_train = exp.get_config(\"y_train\")\ny_train[:5]","3ffb601d":"y_predict = exp.predict_model(model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","93088a2e":"tuned_model = exp.tune_model(model,optimize = 'SMAPE')\ntuned_model","a222a31a":"exp.predict_model(tuned_model)","8d7af0e4":"y_predict = exp.predict_model(tuned_model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","a31606f3":"# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n_=plot_series(data, y_pred_future, labels=['All', 'Future Pred (Unknown)'])\nplt.grid()","540a69f4":"# Test Set Predictions\ny_pred = exp.predict_model(tuned_model)\n\n# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n\n# Plot Results\ny_train = exp.get_config(\"y_train\")\n_ = plot_series(data, y_train, y_pred, y_pred_future, labels=['All', 'Train', 'Test Predictions', 'Future Pred (Unknown)'])\nplt.grid()","7c107d54":"# "}}