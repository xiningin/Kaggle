{"cell_type":{"c57ec1c3":"code","96b2c3b8":"code","99851411":"code","da9ad845":"code","0843a2dc":"code","291f5a27":"code","1d313b85":"code","86261f19":"code","3a1dff3a":"code","35ab7978":"code","d5fedd67":"code","2e3cb2c2":"code","9387e65b":"code","4065c70f":"code","88c1ecd8":"code","e754dd74":"code","a09077e9":"code","fec937b9":"code","ff0a1df1":"code","90bdf946":"code","8292d158":"code","86cddce6":"code","54c00b28":"code","4dd8f38d":"code","77cfacff":"code","aff2ed11":"code","2d118c88":"code","09145f4f":"code","1911263e":"code","43065f00":"code","107b4a71":"code","34abe76b":"code","636132de":"code","e367a5e3":"code","9241b8fc":"code","ee3ae0ae":"code","e1737f1e":"code","fc066362":"code","917793df":"code","0ae448f6":"code","db0258b0":"code","32c75c38":"code","ff89d8a0":"code","88782fef":"code","ddce7526":"code","663054bb":"code","236b73ab":"code","d2b98b99":"code","883e21bf":"code","540e1881":"code","d8926907":"code","0a2d1e87":"code","9afdaf95":"code","14acf423":"code","261e1068":"code","772b7378":"code","9e706931":"code","719437d1":"code","967e20e3":"code","159af6b2":"code","971529d1":"code","c9579895":"code","500023bf":"code","b6ccc936":"code","7fcd13c3":"code","34399d11":"code","620277ae":"code","c3c51ade":"code","03c93c4e":"code","0217a681":"code","eff0a6b0":"code","8658bbe1":"code","62d61991":"code","84663afe":"code","cebf4a2b":"code","bcb5b41b":"code","8e882f6b":"code","dc3ed8e0":"code","b1efce2a":"code","d910f767":"code","b469c67c":"code","5b72a735":"code","6c2c8769":"code","12b573e3":"code","aabde869":"code","1fbfaf9d":"code","6b49979f":"code","81359061":"code","671e6162":"markdown","b2e86c23":"markdown","5adaa99e":"markdown","e7df7bfa":"markdown","af843dd5":"markdown","15a705b9":"markdown","0de2548f":"markdown","8da0d0a2":"markdown","82bec8ad":"markdown","afbf5bfe":"markdown","0df3da4e":"markdown","3452bd68":"markdown","edae0764":"markdown","36a50e8a":"markdown","53c6820f":"markdown","5d4d7c1b":"markdown","2ca89db0":"markdown","3c466ccf":"markdown","ce05a93a":"markdown","90b2105c":"markdown","6e242710":"markdown","42acbb41":"markdown","262823e0":"markdown","80fcd280":"markdown","36ef12e6":"markdown"},"source":{"c57ec1c3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","96b2c3b8":"#!\/usr\/bin\/python\n# -*- coding: UTF-8 -*-\n\nimport warnings\nwarnings.filterwarnings(action='ignore')\n\npd.set_option('display.max_column',100)\npd.set_option('display.max_row',500)\nfrom pandas import DataFrame\nfrom pandas import concat\n\n%matplotlib inline\nimport matplotlib\nimport matplotlib.pyplot as plt\n\nplt.rcParams['axes.unicode_minus'] = False\nimport seaborn as sns\nfrom operator import itemgetter\n\nfrom matplotlib import font_manager, rc #\uadf8\ub798\ud504 \ud3f0\ud2b8 \uae68\uc9c8\uacbd\uc6b0 \ubc29\uc9c0 \ubd80\ubd84\n#\ud3f0\ud2b8 \uae68\uc9c0\ub294\uac70 \uc218\uc815 \ubd80\ubd84\nimport os\nprint(os.listdir(\"..\/input\"))\n\nplt.rcParams['axes.unicode_minus']=False\nfontpath= \"..\/input\/fontttf\/NanumSquareB.ttf\"\nfp=font_manager.FontProperties(fname=fontpath)\n\nimport re\nimport requests\nfrom bs4 import BeautifulSoup\nimport time\n\nimport math\nfrom tqdm import tqdm\nfrom collections import Counter\nfrom sklearn.preprocessing import MinMaxScaler\n\n\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import GridSearchCV\nfrom math import sqrt\nfrom sklearn.metrics import mean_absolute_error\nfrom xgboost import XGBRegressor\nfrom sklearn.linear_model import LinearRegression","99851411":"#\ud604\uc7ac \ub370\uc774\ud130\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 type error\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud55c \ud568\uc218 \uc0dd\uc131\ud574\ub460\n\ndef coerce_df_columns_to_numeric(df, column_list):\n    df[column_list] = df[column_list].apply(pd.to_numeric, errors='coerce')","da9ad845":"regular_y=pd.read_csv('\/kaggle\/input\/kbo-baseball-for-kaggle\/2019_kbo_for_kaggle_v2.csv')\nregular_y.head()","0843a2dc":"Counter(regular_y['cp'])","291f5a27":"# fkd1= list(Counter(regular_y['hand2']).keys())\n# fkd2= list(Counter(regular_y['hand2']).values())\n\nplt.figure(figsize=(20,9))\n\n# \uc124\uce58\ub41c \ud3f0\ud2b8 \ucd9c\ub825 \uac00\ub2a5\nsns.boxplot(x='hand2',y=\"YOPS\", data=regular_y,palette=\"Spectral\")\nplt.title('\ud0c0\uc11d\uc704\uce58 \ubcc4 YOPS Boxplot',fontproperties=fp,size=30)\nplt.xticks(fontproperties=fp,fontsize=20)\nplt.yticks(fontsize=20)\nplt.xlabel('hand',size=25)\nplt.ylabel('\ub2e4\uc74c \uc2dc\uc98c OPS',fontproperties=fp,size=25);","1d313b85":"plt.figure(figsize=(20,9))\n\nsns.boxplot(x='tp',y=\"YOPS\", data=regular_y,palette=\"Spectral\")\nplt.title('\ud3ec\uc9c0\uc158 \ubcc4 YOPS Boxplot',fontproperties=fp,size=30)\nplt.xticks(fontproperties=fp,fontsize=20)\nplt.yticks(fontsize=20)\nplt.xlabel('position',size=25)\nplt.ylabel('\ub2e4\uc74c \uc2dc\uc98c OPS',fontproperties=fp,size=25);","86261f19":"#\uc2a4\ud0ef\ud2f0\uc988\uc5d0\uc11c \uac00\uc838\uc628 \ud0c0\uc11d \uc704\uce58\uc5d0 \ub300\ud55c \ud1b5\uc77c \uc791\uc5c5 \uc2e4\uc2dc (\uc88c\ud0c0,\uc6b0\ud0c0,\uc591\ud0c0\ub9cc \ud655\uc778\ud558\uace0 \ubc14\uafb8\ub294 \ubc29\uc2dd\uc73c\ub85c \uc9c4\ud589\ud588\ub2e4)\nregular_y['hand2']=regular_y['hand2'].replace('\uc6b0\ud22c\uc6b0\ud0c0','\uc6b0\ud0c0')\nregular_y['hand2']=regular_y['hand2'].replace('\uc6b0\ud0c0\uc6b0\ud22c','\uc6b0\ud0c0')\nregular_y['hand2']=regular_y['hand2'].replace('\uc6b0\ud22c\uc591\ud0c0','\uc591\ud0c0')\nregular_y['hand2']=regular_y['hand2'].replace('\uc6b0\ud22c\uc88c\ud0c0','\uc88c\ud0c0')\n\nregular_y['hand2']=regular_y['hand2'].replace('\uc88c\ud22c\uc88c\ud0c0','\uc88c\ud0c0')\nregular_y['hand2']=regular_y['hand2'].replace('\uc88c\ud0c0\uc88c\ud22c','\uc88c\ud0c0')\nregular_y['hand2']=regular_y['hand2'].replace('\uc88c\ud0c0\uc6b0\ud22c','\uc88c\ud0c0')\n\nregular_y['hand2'].unique()","3a1dff3a":"plt.figure(figsize=(20,9))\n\nplt.subplot(121)\nsns.boxplot(x='hand2',y=\"YOPS\", data=regular_y,palette=\"Spectral\")\nplt.title('\ud0c0\uc11d\uc704\uce58 \ubcc4 YOPS Boxplot',fontproperties=fp,size=30)\nplt.xticks(fontproperties=fp,fontsize=20)\nplt.yticks(fontsize=20)\nplt.xlabel('hand',size=25)\nplt.ylabel('\ub2e4\uc74c \uc2dc\uc98c OPS',fontproperties=fp,size=25)\n\nfkd1= list(Counter(regular_y['hand2']).keys())\nfkd2= list(Counter(regular_y['hand2']).values())\n\nplt.subplot(122)\nsns.barplot(x=fkd1,y=fkd2)\nplt.title('\ud0c0\uc11d \uc704\uce58 \ubcc4 \uc778\uc6d0\uc218(\uc911\ubcf5\ud3ec\ud568)',fontproperties=fp,size=30)\nplt.xticks(fontproperties=fp,fontsize=20)\nplt.yticks(fontsize=20)\nplt.xlabel('\ud0c0\uc11d \uc704\uce58',fontproperties=fp,size=25)\nplt.ylabel('\uc778\uc6d0\uc218',fontproperties=fp,size=25)\nfor x,y in zip(range(0,len(fkd1)),fkd2):\n    if len(str(y))==2:\n        plt.text(x-0.05,y,fkd2[x],size=25)\n    else:\n        plt.text(x-0.175,y,fkd2[x],size=25)","35ab7978":"#\uc2a4\ud0ef\ud2f0\uc988\ub97c \ud1b5\ud574\uc11c \ub300\uccb4\ub41c \ud3ec\uc9c0\uc158\uc758 \uacbd\uc6b0\uc5d0 \ub300\ud55c \ud3ec\uc9c0\uc158 \ud1b5\ud569 \uc791\uc5c5\n#\uc9c0\uba85\ud0c0\uc790\uc758 \uacbd\uc6b0 \uc678\uc57c\uc218 \ucd9c\uc2e0\uc778 \uc774\ubc94\ud638\ub97c \uc81c\uc678\ud558\uace0\ub294 \uc804\ubd80 \uc9c0\uba85\ud0c0\uc790 \ucd9c\uc2e0\uc774\uc5b4\uc11c \ub0b4\uc57c\uc218\ub85c \ud560\ub2f9\ud558\uc600\ub2e4.\nregular_y['tp']=regular_y['tp'].replace('2\ub8e8\uc218','\ub0b4\uc57c\uc218')\nregular_y['tp']=regular_y['tp'].replace('\uc9c0\uba85\ud0c0\uc790','\ub0b4\uc57c\uc218')\nregular_y['tp']=regular_y['tp'].replace('\uc720\uaca9\uc218','\ub0b4\uc57c\uc218')\nregular_y['tp']=regular_y['tp'].replace('3\ub8e8\uc218','\ub0b4\uc57c\uc218')\nregular_y['tp']=regular_y['tp'].replace('1\ub8e8\uc218','\ub0b4\uc57c\uc218')\n\nregular_y['tp']=regular_y['tp'].replace('\uc6b0\uc775\uc218','\uc678\uc57c\uc218')\nregular_y['tp']=regular_y['tp'].replace('\uc911\uacac\uc218','\uc678\uc57c\uc218')\nregular_y['tp']=regular_y['tp'].replace('\uc88c\uc775\uc218','\uc678\uc57c\uc218')\n\nregular_y['tp'].unique()","d5fedd67":"plt.figure(figsize=(20,9))\n\nplt.subplot(121)\nsns.boxplot(x='tp',y=\"YOPS\", data=regular_y,palette=\"Spectral\")\nplt.title('\ud3ec\uc9c0\uc158 \ubcc4 YOPS Boxplot',fontproperties=fp,size=30)\nplt.xticks(fontproperties=fp,fontsize=20)\nplt.yticks(fontsize=20)\nplt.xlabel('position',size=25)\nplt.ylabel('\ub2e4\uc74c \uc2dc\uc98c OPS',fontproperties=fp,size=25)\n\nfkd1= list(Counter(regular_y['tp']).keys())\nfkd2= list(Counter(regular_y['tp']).values())\nplt.subplot(122)\nsns.barplot(x=fkd1,y=fkd2)\nplt.title('\ud3ec\uc9c0\uc158 \ubcc4 \uc778\uc6d0\uc218(\uc911\ubcf5\ud3ec\ud568)',fontproperties=fp,size=30)\nplt.xticks(fontproperties=fp,fontsize=20)\nplt.yticks(fontsize=20)\nplt.xlabel('position',size=25)\nplt.ylabel('\uc778\uc6d0\uc218',fontproperties=fp,size=25)\nfor x,y in zip(range(0,len(fkd1)),fkd2):\n    if len(str(y))==2:\n        plt.text(x-0.05,y,fkd2[x],size=25)\n    else:\n        plt.text(x-0.15,y,fkd2[x],size=25)","2e3cb2c2":"del regular_y['cp']\ndel regular_y['year_born']\ndel regular_y['p_year']","9387e65b":"regular_y[regular_y.isnull()['YOPS']]","4065c70f":"regular_y[regular_y['batter_name']=='\ucd5c\uc724\uc11d']","88c1ecd8":"regular_y[regular_y['batter_name']=='\uc591\uc885\ubbfc']","e754dd74":"regular_y['YOPS']=regular_y['YOPS'].fillna(0.00000)","a09077e9":"cor=regular_y.corr()\n\nregular_y2=regular_y.copy()\ndel regular_y2['BB']\ndel regular_y2['HBP']\ndel regular_y2['year']\ndel regular_y2['1B']\ndel regular_y2['YAB']\ndel regular_y2['PA']\ndel regular_y2['batter_name']\ndel regular_y2['hand2']\ndel regular_y2['tp']","fec937b9":"# sns.set(style=\"white\")\n\n# cor=regular_y2.corr()\n\n# mask=np.zeros_like(cor,dtype=np.bool)\n# mask[np.triu_indices_from(mask)]=True\n\n# f,ax=plt.subplots(figsize=(20,20))\n# cmap=sns.diverging_palette(200,10,as_cmap=True)\n# sns.heatmap(cor,mask=mask,cmap=cmap,center=0,square=True,linewidths=0.5,cbar_kws={\"shrink\":0.75},annot=True)\n# plt.title('baseball data correlation',size=30)\n# ax.set_xticklabels(list(regular_y2.columns),size=15)\n# ax.set_yticklabels(list(regular_y2.columns),size=15,rotation=0);\n\n#\uc624\ub958 \ubc1c\uc0dd\uc73c\ub85c \ud574\uacb0 \uc911","ff0a1df1":"cor=regular_y2.corr()\n\nf,ax=plt.subplots(figsize=(20,12))\nax=sns.barplot(x=cor['YOPS'].sort_values(ascending=False)[1:].keys(), y=cor['YOPS'].sort_values(ascending=False)[1:].values,\n            palette=['lightblue' if _y >0.3  else 'lightgrey' if (_y > (-0.1) and ( _y <= 0.3)) else 'lightcoral' for _y in list(cor['YOPS'].sort_values(ascending=False)[1:].values) ])\nplt.xticks(fontsize=25,rotation=45)\nplt.yticks(fontsize=25)\nplt.xlabel('variable name',size=30)\nplt.ylabel('YOPS correlation',size=30)\nplt.title('YOPS\uc640 \uc218\uce58\ud615 \ubcc0\uc218\uac04\uc758 \uc0c1\uad00\uad00\uacc4',fontproperties=fp,size=40)\n\ntk=[round(i,2) for i in cor['YOPS'].sort_values(ascending=False)[1:].values]\nfor x,y in zip(range(0,len(tk)),tk):\n        plt.text(x-0.375,y+0.0025,tk[x],size=20);","90bdf946":"fig = plt.figure(figsize=(20,15))\n\nplt.subplot(2,2,1)\nplt.hist(regular_y2['age'])\nplt.title('\ub098\uc774 \ubcc4 \ubd84\ud3ec',fontproperties=fp,size=25)\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=20)\nplt.ylabel('\ud06c\uae30',fontproperties=fp,size=25)\n\nplt.subplot(2,2,2)\nplt.hist(regular_y2['AB'])\nplt.title('\ud0c0\uc218 \ubcc4 \ubd84\ud3ec',fontproperties=fp,size=25)\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=20)\nplt.ylabel('\ud06c\uae30',fontproperties=fp,size=25)\n\nplt.subplot(2,2,3)\nplt.hist(regular_y2['HR'])\nplt.title('\ud648\ub7f0 \uc218 \ubcc4 \ubd84\ud3ec',fontproperties=fp,size=25)\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=20)\nplt.ylabel('\ud06c\uae30',fontproperties=fp,size=25)\n\nplt.subplot(2,2,4)\nplt.hist(regular_y2['war'])\nplt.title('war \ubcc4 \ubd84\ud3ec',fontproperties=fp,size=25)\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=20)\nplt.ylabel('\ud06c\uae30',fontproperties=fp,size=25);","8292d158":"fig = plt.figure(figsize=(20,15))\n\nplt.subplot(2,2,1)\nplt.scatter(regular_y2['age'], regular_y2['YOPS'])\nplt.title('\ub098\uc774 \ubcc4 YOPS \ubd84\ud3ec',fontproperties=fp,size=25)\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=20)\nplt.ylabel('YOPS',size=25)\nplt.text(30,1.75,'correlation : 0.25',size=25)\n\nplt.subplot(2,2,2)\nplt.scatter(regular_y2['AB'], regular_y2['YOPS'])\nplt.title('\ud0c0\uc218 \ubcc4 YOPS \ubd84\ud3ec',fontproperties=fp,size=25)\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=20)\nplt.ylabel('YOPS',size=25)\nplt.text(350,1.75,'correlation : 0.49',size=25)\n\nplt.subplot(2,2,3)\nplt.scatter(regular_y2['HR'], regular_y2['YOPS'])\nplt.title('\ud648\ub7f0 \uc218 \ubcc4 YOPS \ubd84\ud3ec',fontproperties=fp,size=25)\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=20)\nplt.ylabel('YOPS',size=25)\nplt.text(30,1.75,'correlation : 0.47',size=25)\n\nplt.subplot(2,2,4)\nplt.scatter(regular_y2['war'], regular_y2['YOPS'])\nplt.title('war \ubcc4 YOPS \ubd84\ud3ec',fontproperties=fp,size=25)\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=20)\nplt.ylabel('YOPS',size=25)\nplt.text(6,1.75,'correlation : 0.47',size=25);","86cddce6":"#\ub3c4\ub8e8 \ud69f\uc218 \uad00\ub828 \ubcc0\uc218 \ub9cc\ub4e4\uae30\nregular_y['run']=regular_y['SB']+regular_y['CS']\n\n# eqa \uad6c\ud558\uae30\neqa_high=regular_y['H']+regular_y['TB']+1.5*(regular_y['FBP'])+regular_y['run']  #eqa \ubd84\uc790 \uacf5\uc2dd\neqa_low=regular_y['AB']+regular_y['FBP']+regular_y['CS']+(regular_y['run']\/3) #eqa \ubd84\ubaa8 \uacf5\uc2dd\nregular_y['eqa']=round(eqa_high\/eqa_low,3) #\ubd84\uc790\/\ubd84\ubaa8\nregular_y['eqa']=regular_y['eqa'].fillna(0) # NaN\uc744 0\uc73c\ub85c \ucc98\ub9ac\n\n# isop \uad6c\ud558\uae30\nregular_y['avg']=regular_y['avg'].replace('-',0.0) #\ud604\uc7ac avg\uc911\uc5d0\uc11c -\ucc98\ub9ac\uac00 \ub41c \uac83\uc774 \uc788\uc5b4 0\uc73c\ub85c \ub300\uccb4\ud568\nregular_y['SLG']=regular_y['SLG'].fillna(0) # NaN\uc744 0\uc73c\ub85c \ucc98\ub9ac\n    \ncoerce_df_columns_to_numeric(regular_y,'avg') #\ubb38\uc790\ub85c \uc778\uc2dd\uc774 \ub418\ub294 \ubb38\uc81c\uac00 \uc788\uc5b4 \uc22b\uc790\ub85c \ubcc0\uacbd\n\nregular_y['isop']=regular_y['SLG']-regular_y['avg'] #\uacf5\uc2dd \uc0ac\uc6a9\nregular_y['isop']=round(regular_y['isop'],3) #\ubcf4\uae30 \ud3b8\ud558\uae30 \uc704\ud574 \uc18c\uc2183\uc790\ub9ac\ub85c \ubc18\uc62c\ub9bc\n\n# \uc6b4 \ubcc0\uc218 \ud22c\uc785\ud558\uae30\n#\ub370\uc774\ucf58 \uce21\uc5d0\uc11c \uc0ac\uc6a9\ud55c \ud589\uc6b4 \ubcc0\uc218 \ucd94\uac00\ud574\ubcf4\uae30\nregular_y['1b_luck']=regular_y['1B']\/(regular_y['AB']-regular_y['HR']-regular_y['SO'])\nregular_y['2b_luck']=regular_y['2B']\/(regular_y['AB']-regular_y['HR']-regular_y['SO'])\nregular_y['3b_luck']=regular_y['3B']\/(regular_y['AB']-regular_y['HR']-regular_y['SO'])\n\n#\uc2ec\ud654\uc801\uc778 \ubcc0\uc218\ub4e4\uc911 BB%,SO%\uac00 \uc4f0\uc774\ub294 \uacbd\uc6b0\uac00 \uc788\ub2e4.\n\nregular_y['BB%']=regular_y['BB']\/regular_y['PA']\nregular_y['BB%']=regular_y['BB%'].fillna(0.0)\nregular_y['BB%']=round(regular_y['BB%'],3)\n\nregular_y['SO%']=regular_y['SO']\/regular_y['PA']\n\n#BABIP\uad6c\ud558\uae30\nregular_y['babip']= round( (regular_y['H']-regular_y['HR']) \/ (regular_y['AB']-regular_y['SO']-regular_y['HR']+regular_y['fly']) ,3)\nregular_y['babip']=regular_y['babip'].fillna(0) # NaN\uc744 0\uc73c\ub85c \ucc98\ub9ac","54c00b28":"agg={}\nfor i in range(2006,2019,1):\n\n    regular3=regular_y[ (regular_y['year']==i) & (regular_y['AB']>=100) ]\n    regular3=regular3.reset_index(drop=True)\n\n    #\uc778\uc6d0\uc218\ub97c \ub3d9\uc77c\ud558\uac8c \ub9de\ucdb0\uc918\uc57c \ub418\uae30 \ub54c\ubb38\uc5d0 f1 ~f5\ub97c \ub2e4\uc2dc \uc0dd\uc131\ud558\uc600\uc74c\n\n    f1= DataFrame( [( ((regular3['SB'][i]+3) \/ (regular3['SB'][i]+regular3['CS'][i]+7)) -0.4) * 20 for i in range(len(regular3)) ] ,columns=['f1'])\n    f2=DataFrame( [ (math.sqrt( (regular3['SB'][i]+regular3['CS'][i])\/ ( (regular3['H'][i]-regular3['2B'][i]-regular3['3B'][i]-regular3['HR'][i]) +regular3['BB'][i]+regular3['HBP'][i]) )) \/0.07 for i in range(len(regular3)) ] ,columns=['f2'])\n    f3= DataFrame( [ (regular3['3B'][i]\/(regular3['AB'][i]-regular3['HR'][i]-regular3['SO'][i]))*625 for i in range(len(regular3)) ] ,columns=['f3'])\n    f4= DataFrame( [ (((regular3['R'][i]-regular3['HR'][i])\/(regular3['H'][i]+regular3['BB'][i]-regular3['HR'][i]+regular3['HBP'][i]))-0.1)*25 for i in range(len(regular3)) ] ,columns=['f4'])\n    f5= DataFrame( [ (0.063-(regular3['GDP'][i]\/(regular3['AB'][i]-regular3['HR'][i]-regular3['SO'][i])))\/0.007 for i in range(len(regular3)) ] ,columns=['f5'])\n\n    f_total=pd.concat([f1,f2,f3,f4,f5],axis=1)\n\n    scaler = MinMaxScaler()\n    scaler.fit(f_total)\n\n    f_total2=DataFrame(scaler.transform(f_total)*10)\n\n    f_total3=pd.concat([regular3[['batter_name','year']],f_total2 ],axis=1)\n    f_total3=f_total3.fillna(0) #\ube44\uc5b4\uc788\ub294 \ubd80\ubd84\uc744 0\uc73c\ub85c \ucc44\uc6c0\n\n    f_total3['spd'] = (f_total3[0]+f_total3[1]+f_total3[2]+f_total3[3]+f_total3[4])\/5\n    agg[i-2006]=f_total3[['batter_name','year','spd']]","4dd8f38d":"regular3=regular_y[ (regular_y['year']<=2005) & (regular_y['AB']>=100) ]\nregular3=regular3.reset_index(drop=True)\n\n#\uc778\uc6d0\uc218\ub97c \ub3d9\uc77c\ud558\uac8c \ub9de\ucdb0\uc918\uc57c \ub418\uae30 \ub54c\ubb38\uc5d0 f1 ~f5\ub97c \ub2e4\uc2dc \uc0dd\uc131\ud558\uc600\uc74c\n\nf1= DataFrame( [( ((regular3['SB'][i]+3) \/ (regular3['SB'][i]+regular3['CS'][i]+7)) -0.4) * 20 for i in range(len(regular3)) ] ,columns=['f1'])\nf2=DataFrame( [ (math.sqrt( (regular3['SB'][i]+regular3['CS'][i])\/ ( (regular3['H'][i]-regular3['2B'][i]-regular3['3B'][i]-regular3['HR'][i]) +regular3['BB'][i]+regular3['HBP'][i]) )) \/0.07 for i in range(len(regular3)) ] ,columns=['f2'])\nf3= DataFrame( [ (regular3['3B'][i]\/(regular3['AB'][i]-regular3['HR'][i]-regular3['SO'][i]))*625 for i in range(len(regular3)) ] ,columns=['f3'])\nf4= DataFrame( [ (((regular3['R'][i]-regular3['HR'][i])\/(regular3['H'][i]+regular3['BB'][i]-regular3['HR'][i]+regular3['HBP'][i]))-0.1)*25 for i in range(len(regular3)) ] ,columns=['f4'])\nf5= DataFrame( [ (0.063-(regular3['GDP'][i]\/(regular3['AB'][i]-regular3['HR'][i]-regular3['SO'][i])))\/0.007 for i in range(len(regular3)) ] ,columns=['f5'])\n\nf_total=pd.concat([f1,f2,f3,f4,f5],axis=1)\n\nscaler = MinMaxScaler()\nscaler.fit(f_total)\n\nf_total2=DataFrame(scaler.transform(f_total)*10)\n\nf_total3=pd.concat([regular3[['batter_name','year']],f_total2 ],axis=1)\nf_total3=f_total3.fillna(0) #\ube44\uc5b4\uc788\ub294 \ubd80\ubd84\uc744 0\uc73c\ub85c \ucc44\uc6c0\n\nf_total3['spd'] = (f_total3[0]+f_total3[1]+f_total3[2]+f_total3[3]+f_total3[4])\/5\nagg[13]=f_total3[['batter_name','year','spd']]","77cfacff":"f_real=pd.concat(agg,ignore_index=True)\nf_real=f_real.drop_duplicates(keep='first')\n\nregular_y3=pd.merge(regular_y,f_real,how='left',on=['batter_name','year'])\n\n# regular_y3.to_csv(\"regular3.csv\",index=False)","aff2ed11":"#\ubcc0\ud654\ub418\ub294 \uacf5\uc2dd\uc774 \uc544\ub2cc \uc77c\ubc18\uc801\uc778 \uacf5\uc2dd\uc744 \uc0ac\uc6a9\ud558\uc600\uc74c\nregular_y3['spd'].hist(bins=20,figsize=(20,10)) #\ud655\uc778 \ud544\uc694\nplt.grid(False)\nplt.xticks(size=25)\nplt.yticks(size=25)\nplt.xlabel('spd value',size=25)\nplt.ylabel('\uc778\uc6d0\uc218(\uc911\ubcf5) ',fontproperties=fp,size=25)\nplt.title('spd \uc778\uc6d0 \ubd84\ud3ec',fontproperties=fp,size=30);","2d118c88":"regular_y3['spd']=regular_y3['spd'].fillna(regular_y3['spd'].mean())","09145f4f":"#\ubcc0\ud654\ub418\ub294 \uacf5\uc2dd\uc774 \uc544\ub2cc \uc77c\ubc18\uc801\uc778 \uacf5\uc2dd\uc744 \uc0ac\uc6a9\ud558\uc600\uc74c\nregular_y3['wOBA']=(0.72*regular_y3['BB'] + 0.75*regular_y3['HBP'] + 0.9*regular_y3['1B'] + 1.24*regular_y3['2B'] + 1.56*regular_y3['3B'] + 1.95*regular_y3['HR'] ) \/ ( regular_y3['AB'] +regular_y3['FBP'] + regular_y3['fly'] )\nregular_y3['wOBA']=regular_y3['wOBA'].fillna(0.0) \n\nregular_y3['wOBA']=round(regular_y3['wOBA'],3)\n\nregular_y3['wOBA'].hist(bins=20,figsize=(20,10)) #\ud655\uc778 \ud544\uc694\nplt.grid(False)\nplt.xticks(size=25)\nplt.yticks(size=25)\nplt.xlabel('wOBA value',size=25)\nplt.ylabel('\uc778\uc6d0\uc218(\uc911\ubcf5) ',fontproperties=fp,size=25)\nplt.title('wOBA \uac12 \ubcc0\uacbd \uc804 \uc778\uc6d0 \ubd84\ud3ec',fontproperties=fp,size=30);","1911263e":"#\ubcc0\ud654\ub418\ub294 \uacf5\uc2dd\uc774 \uc544\ub2cc \uc77c\ubc18\uc801\uc778 \uacf5\uc2dd\uc744 \uc0ac\uc6a9\ud558\uc600\uc74c\nregular_y3['wOBA']=(0.72*regular_y3['BB'] + 0.75*regular_y3['HBP'] + 0.9*regular_y3['1B'] + 1.24*regular_y3['2B'] + 1.56*regular_y3['3B'] + 1.95*regular_y3['HR'] ) \/ ( regular_y3['AB'] +regular_y3['FBP'] + regular_y3['fly'] )\nregular_y3['wOBA']=regular_y3['wOBA'].fillna(0.0) \n\nregular_y3['wOBA']=round(regular_y3['wOBA'],3)\nregular_y33=regular_y3.loc[regular_y3['wOBA']<0.6]\n\nregular_y33['wOBA'].hist(bins=20,figsize=(20,10)) #\ud655\uc778 \ud544\uc694\nplt.grid(False)\nplt.xticks(size=25)\nplt.yticks(size=25)\nplt.xlabel('wOBA value',size=25)\nplt.ylabel('\uc778\uc6d0\uc218(\uc911\ubcf5) ',fontproperties=fp,size=25)\nplt.title('wOBA \uac12 \ubcc0\uacbd \ud6c4 \uc778\uc6d0 \ubd84\ud3ec',fontproperties=fp,size=30);","43065f00":"regular_y33['OBP'].hist(bins=20,figsize=(20,10)) #\ud655\uc778 \ud544\uc694\nplt.grid(False)\nplt.xticks(size=25)\nplt.yticks(size=25)\nplt.xlabel('OBP',size=25)\nplt.ylabel('\uc778\uc6d0\uc218(\uc911\ubcf5) ',fontproperties=fp,size=25)\nplt.title('OBP \uac12 \uc778\uc6d0 \ubd84\ud3ec',fontproperties=fp,size=30);","107b4a71":"#\uac01 \uc2dc\uc98c\ubcc4 \ud3c9\uade0 \uac12\uc774 \ud544\uc694\ud558\uae30 \ub54c\ubb38\uc5d0 \ud574\ub2f9 \uacfc\uc815\uc744 \uc2e4\uc2dc\nmra=regular_y3.groupby(['year'])['wOBA', 'R','H','FBP', 'AB', 'fly', 'TB'].sum()\nmra2=regular_y3.groupby(['year'])['wOBA', 'R','H','FBP', 'AB', 'fly', 'TB'].size()\nmra['size']=mra2\n\nmra.to_csv(\"mra.csv\")\nmra=pd.read_csv(\"mra.csv\")","34abe76b":"# mra #\ud604\uc7ac 2000\ub144\ub300 \uc5f0\ub3c4\ub4e4\uc740 \uc0ac\uc774\uc988\uac00 \ub108\ubb34 \uc791\uc544\uc11c \ud3c9\uade0\uc744 \uad6c\ud558\ub294\uac8c \ud798\ub4e4\uc5b4 \ubcf4\uc784\n# #\uadf8\ub798\uc11c \uba87\uac1c \uc5f0\ub3c4\ub97c \ud569\uccd0\uc11c \uadf8 \ud3c9\uade0\uac12\uc744 \uc0ac\uc6a9\ud558\uae30\ub85c \uacb0\uc815\ud568(2004\ub144\uc774\uc804, 2005~2006 \ud1b5\ud569)","636132de":"#2003\ub144 \uc774\uc804 \ud569\uce58\uae30\nmra.loc[mra['year']<=2003,'wOBA']=(mra.loc[mra['year']<=2003,'wOBA'].sum()) \nmra.loc[mra['year']<=2003,'R']=(mra.loc[mra['year']<=2003,'R'].sum()) \nmra.loc[mra['year']<=2003,'H']=(mra.loc[mra['year']<=2003,'H'].sum()) \nmra.loc[mra['year']<=2003,'FBP']=(mra.loc[mra['year']<=2003,'FBP'].sum()) \nmra.loc[mra['year']<=2003,'AB']=(mra.loc[mra['year']<=2003,'AB'].sum()) \nmra.loc[mra['year']<=2003,'fly']=(mra.loc[mra['year']<=2003,'fly'].sum()) \nmra.loc[mra['year']<=2003,'TB']=(mra.loc[mra['year']<=2003,'TB'].sum()) \nmra.loc[mra['year']<=2003,'size']=(mra.loc[mra['year']<=2003,'size'].sum()) \n\n#2004\ub144\uacfc 2005\ub144 \ud569\uce58\uae30\n\nmra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'wOBA']= (mra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'wOBA'].sum()) \nmra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'R']=(mra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'R'].sum()) \nmra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'H']=(mra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'H'].sum()) \nmra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'FBP']=(mra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'FBP'].sum()) \nmra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'AB']=(mra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'AB'].sum()) \nmra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'fly']=(mra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'fly'].sum())\nmra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'TB']=(mra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'TB'].sum()) \nmra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'size']=(mra.loc[(mra['year']<=2005) & (mra['year']>=2004) ,'size'].sum()) \n\n#2006 2007\nmra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'wOBA']= (mra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'wOBA'].sum()) \nmra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'R']=(mra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'R'].sum()) \nmra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'H']=(mra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'H'].sum()) \nmra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'FBP']=(mra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'FBP'].sum()) \nmra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'AB']=(mra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'AB'].sum()) \nmra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'fly']=(mra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'fly'].sum())\nmra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'TB']=(mra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'TB'].sum()) \nmra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'size']=(mra.loc[(mra['year']<=2007) & (mra['year']>=2006) ,'size'].sum()) \n\n#2008 2009\nmra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'wOBA']= (mra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'wOBA'].sum()) \nmra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'R']=(mra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'R'].sum()) \nmra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'H']=(mra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'H'].sum()) \nmra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'FBP']=(mra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'FBP'].sum()) \nmra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'AB']=(mra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'AB'].sum()) \nmra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'fly']=(mra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'fly'].sum())\nmra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'TB']=(mra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'TB'].sum()) \nmra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'size']=(mra.loc[(mra['year']<=2009) & (mra['year']>=2008) ,'size'].sum()) ","e367a5e3":"mra['aOBP']=(mra['H']+mra['FBP'])\/(mra['AB']+mra['FBP']+mra['fly']) #\uac01 \uc5f0\ub3c4\uc758 \ud3c9\uade0 OBP\uc0dd\uc131\n\nmra['aSLG']=mra['TB']\/mra['AB'] #\uac01 \uc5f0\ub3c4\uc758 \ud3c9\uade0 SLG\uc0dd\uc131\n\nmra_total=mra[['year','aOBP','aSLG']] #\uac01 \uc5f0\ub3c4\ubcc4 \ud3c9\uade0 OBP,SLG\ub9cc \ucd94\ucd9c\n\nregular4=pd.merge(regular_y3,mra_total,how='left') #\uac01 \uc120\uc218\ubcc4 OPS+\ub97c \uc801\uc6a9\uc2dc\ud0a4\uae30 \uc704\ud574\uc11c \ud1b5\ud569 \uc2e4\uc2dc\n\n#OPS + \ub97c \uad6c\ud558\ub294 \uacf5\uc2dd\uc744 \uc0ac\uc6a9\ud558\uace0 OPS+\ub294 \uc790\uc5f0\uc218 \uac12\uc774\uae30 \ub54c\ubb38\uc5d0 \ubc18\uc62c\ub9bc\ub85c \uc815\uc218 \ucc98\ub9ac\ud558\uc600\uc74c\nregular4['OPS+']= ( (regular4['OBP']\/regular4['aOBP']) + (regular4['SLG']\/regular4['aSLG']) -1 ) * 100\nregular4['OPS+']=round(regular4['OPS+'],0)\n\nregular4['OPS+'].hist(bins=20,figsize=(20,10)) #\ud604\uc7ac 0\uc774\ud558\uc758 \uac12\uacfc 200\uc774\uc0c1\uc758 \uc774\uc0c1\uce58\ub4e4\uc774 \ubcf4\uc774\ub294 \ubaa8\uc2b5\uc774 \uc788\uc74c\nplt.grid(False)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.xlabel('OPS+ value',size=25)\nplt.ylabel('\uc778\uc6d0\uc218 (\uc911\ubcf5)',fontproperties=fp,size=25)\nplt.title('OPS+ \uc218\uc815 \uc804 value \uc778\uc6d0 \ubd84\ud3ec',fontproperties=fp,size=30);","9241b8fc":"regular4.loc[regular4['OPS+']>=220,['OPS+']]=0 #200\uc774\uc0c1\uc758 \uc774\uc0c1\uce58\ub294 0\uc73c\ub85c \ucc98\ub9ac\nregular4.loc[regular4['OPS+']<=0,['OPS+']]=0 #0\uc774\ud558\uc758 \uac12\uc740 0\uc73c\ub85c \ucc98\ub9ac\n\n#\ub2e4 \uc0ac\uc6a9\uc774 \ub41c \ud3c9\uade0 OBP,SLG\ub294 \uc0ad\uc81c\ud568\ndel regular4['aOBP']\ndel regular4['aSLG']\n\nregular4['OPS+'].hist(bins=20,figsize=(20,10)) #\uc774\uc0c1\uce58 \uc81c\uac70 \uc774\ud6c4 OPS+\ud655\uc778 \uc791\uc5c5\nplt.grid(False)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.xlabel('OPS+ value',size=25)\nplt.ylabel('\uc778\uc6d0\uc218 (\uc911\ubcf5)',fontproperties=fp,size=25)\nplt.title('OPS+ value \uc218\uc815 \ud6c4 \uc778\uc6d0 \ubd84\ud3ec',fontproperties=fp,size=30);","ee3ae0ae":"regular555=regular4[regular4['OPS']<=1.5]\nregular555['OPS'].hist(bins=20,figsize=(20,10)) #\uc774\uc0c1\uce58 \uc81c\uac70 \uc774\ud6c4 OPS+\ud655\uc778 \uc791\uc5c5\nplt.grid(False)\nplt.xticks(size=20)\nplt.yticks(size=20)\nplt.xlabel('OPS',size=25)\nplt.ylabel('\uc778\uc6d0\uc218 (\uc911\ubcf5)',fontproperties=fp,size=25)\nplt.title('OPS \uc218\uc815 \ud6c4 \uc778\uc6d0 \ubd84\ud3ec',fontproperties=fp,size=30);","e1737f1e":"regular46=regular4.copy()\nregular46=regular46.sort_values(by=['batter_name', 'year']) #\uc774\ub984\uacfc \uc5f0\ub3c4 \ubcc4\ub85c sort\n\ntk=[i for i in regular46['batter_name'][1:]] #\uac01 \uad00\uce21\uce58\ub9c8\ub2e4 \uc5f0\ucc28\ub97c \ubd80\uc5ec\ud558\uae30 \uc704\ud574\uc11c \uc0dd\uc131\ntk2=[i for i in regular46['batter_name'][0:]]\n\nco=list() #\ud574\ub2f9 \uad00\uce21\uce58\uc640 \ub2e4\uc74c \uad00\uce21\uce58\uc758 \uc774\ub984\uc774 \uac19\uc73c\uba74 1\ub144\ucc28 -> 2\ub144\ucc28\uc758 \ubc29\uc2dd\uc744 \ube60\ub974\uac8c \uc218\ud589\ud558\uae30 \uc704\ud574\uc11c \uc2dc\ud589\nco.append(1)\nfor i in range(len(tk)):\n    if tk[i]==tk2[i]:\n        co.append(co[i]+1)\n    else:\n        co.append(1)\nregular46['work_year']=co\n\nregular46=regular46.sort_index()","fc066362":"regular6=regular46[['batter_name','work_year']]\n\nregular6=regular6.drop_duplicates(keep='first')\n\nc=Counter(Counter(regular6['batter_name']).values()) #\uc774\ub984 \uac2f\uc218\ub85c \ub204\uc801 \uc2dc\uc98c \ud69f\uc218 \ud68d\ub4dd\nx3=[]\ny3=[]\nfor i in range(len(c)):\n    x3.append(sorted(c.items(), key=itemgetter(0))[i][0]) # 1~ 17\n    y3.append(sorted(c.items(), key=itemgetter(0))[i][1]) # \ud574\ub2f9 \uc2dc\uc98c \ubcf4\ub0b8 \uc0ac\ub78c \uc778\uc6d0\uc218\n\nf,ax=plt.subplots(figsize=(20,9))\n\nplt.bar(x3,y3,color='grey')\nplt.xticks(x3, (list(range(1,20))))\nplt.yticks(range(5,80,10))\nplt.xlabel('\ub204\uc801 \uc5f0\ucc28',fontproperties=fp,size=25)\nplt.ylabel('\uc778\uc6d0\uc218',fontproperties=fp,size=25)\nax.spines['left'].set_position(('axes', 0.025))\nplt.title('\ub204\uc801 \uc5f0\ucc28 \uc778\uc6d0 \ubd84\ud3ec',fontproperties=fp,size=30)\n\n#ax.spines\ub97c \ud55c \uc774\ud6c4 \ucd95 \uae00\uc790 \ud06c\uae30 \ubcc0\uacbd\uc2dc \uc0ac\uc6a9\ud55c \ubd80\ubd84\nfor label in ax.get_xticklabels() + ax.get_yticklabels(): \n    label.set_fontsize(20)\n    label.set_bbox(dict(facecolor='white', edgecolor='None', alpha=0.65 ))\n    \nfor x,y in zip(range(1,20),y3):\n    if y>=10:\n        plt.text(x-0.2,y,y3[x-1],size=20)\n    else:\n        plt.text(x-0.075,y,y3[x-1],size=20)\n        \nregular46.to_csv(\"regular_total.csv\",index=False)","917793df":"total=pd.read_csv(\"regular_total.csv\")\n# total=regular46.copy()\ntotal['ball_score']=0.45032\n\ntotal['ball_score'] = [np.where( total['year'][i]==2009, np.random.normal(0.4297, 0.005, 1)[0],total['ball_score'][i] ) for i in range(len(total))  ]\ntotal['ball_score'] = [np.where( total['year'][i]==2010, np.random.normal(0.4187, 0.005, 1)[0],total['ball_score'][i] ) for i in range(len(total))  ]\ntotal['ball_score'] = [np.where( total['year'][i]==2011, np.random.normal(0.4228, 0.005, 1)[0],total['ball_score'][i] ) for i in range(len(total))  ]\ntotal['ball_score'] = [np.where( total['year'][i]==2012, np.random.normal(0.4172, 0.005, 1)[0],total['ball_score'][i] ) for i in range(len(total))  ]\ntotal['ball_score'] = [np.where( total['year'][i]==2013, np.random.normal(0.4236, 0.005, 1)[0],total['ball_score'][i] ) for i in range(len(total))  ]\ntotal['ball_score'] = [np.where( total['year'][i]==2014, np.random.normal(0.4316, 0.005, 1)[0],total['ball_score'][i] ) for i in range(len(total))  ]\ntotal['ball_score'] = [np.where( total['year'][i]==2015, np.random.normal(0.4244, 0.005, 1)[0],total['ball_score'][i] ) for i in range(len(total))  ]\ntotal['ball_score'] = [np.where( total['year'][i]==2016, np.random.normal(0.4216, 0.005, 1)[0],total['ball_score'][i] ) for i in range(len(total))  ]\ntotal['ball_score'] = [np.where( total['year'][i]==2017, np.random.normal(0.4224, 0.005, 1)[0],total['ball_score'][i] ) for i in range(len(total))  ]\ntotal['ball_score'] = [np.where( total['year'][i]==2018, np.random.normal(0.4187, 0.005, 1)[0],total['ball_score'][i] ) for i in range(len(total))  ]\n\ntotal['ball_score'] = [np.where( (total['year'][i]<2009) | (total['year'][i]>2018) , np.random.normal(0.42307, 0.005, 1)[0],total['ball_score'][i] ) for i in range(len(total))  ]","0ae448f6":"total['p_year']=total['year']+1\ntotal['next_ball_score']=0.45032\n\ntotal['next_ball_score'] = [np.where( total['p_year'][i]<2009, np.random.normal(0.42307, 0.005, 1)[0],total['next_ball_score'][i] ) for i in range(len(total))  ]\ntotal['next_ball_score'] = [np.where( total['p_year'][i]==2009, np.random.normal(0.4297, 0.005, 1)[0],total['next_ball_score'][i] ) for i in range(len(total))  ]\ntotal['next_ball_score'] = [np.where( total['p_year'][i]==2010, np.random.normal(0.4187, 0.005, 1)[0],total['next_ball_score'][i] ) for i in range(len(total))  ]\ntotal['next_ball_score'] = [np.where( total['p_year'][i]==2011, np.random.normal(0.4228, 0.005, 1)[0],total['next_ball_score'][i] ) for i in range(len(total))  ]\ntotal['next_ball_score'] = [np.where( total['p_year'][i]==2012, np.random.normal(0.4172, 0.005, 1)[0],total['next_ball_score'][i] ) for i in range(len(total))  ]\ntotal['next_ball_score'] = [np.where( total['p_year'][i]==2013, np.random.normal(0.4236, 0.005, 1)[0],total['next_ball_score'][i] ) for i in range(len(total))  ]\ntotal['next_ball_score'] = [np.where( total['p_year'][i]==2014, np.random.normal(0.4316, 0.005, 1)[0],total['next_ball_score'][i] ) for i in range(len(total))  ]\ntotal['next_ball_score'] = [np.where( total['p_year'][i]==2015, np.random.normal(0.4244, 0.005, 1)[0],total['next_ball_score'][i] ) for i in range(len(total))  ]\ntotal['next_ball_score'] = [np.where( total['p_year'][i]==2016, np.random.normal(0.4216, 0.005, 1)[0],total['next_ball_score'][i] ) for i in range(len(total))  ]\ntotal['next_ball_score'] = [np.where( total['p_year'][i]==2017, np.random.normal(0.4224, 0.005, 1)[0],total['next_ball_score'][i] ) for i in range(len(total))  ]\ntotal['next_ball_score'] = [np.where( total['p_year'][i]==2018, np.random.normal(0.4187, 0.005, 1)[0],total['next_ball_score'][i] ) for i in range(len(total))  ]\ntotal['next_ball_score'] = [np.where( total['p_year'][i]==2019, np.random.normal(0.41, 0.005, 1)[0],total['next_ball_score'][i] ) for i in range(len(total))  ]","db0258b0":"coerce_df_columns_to_numeric(total,'ball_score') #\ubb38\uc790\ub85c \uc785\ub825\ub41c \uac83\uc744 \uc22b\uc790\ub85c \ubcc0\uacbd\n\ncoerce_df_columns_to_numeric(total,'next_ball_score') #\ubb38\uc790\ub85c \uc785\ub825\ub41c \uac83\uc744 \uc22b\uc790\ub85c \ubcc0\uacbd\n\ncor1=total[['ball_score','next_ball_score','YOPS']].corr()\n\ncor1","32c75c38":"cor1['ball_score']['YOPS']","ff89d8a0":"fig = plt.figure(figsize=(20,12))\n\nplt.subplot(1,3,1)\nplt.scatter(total['ball_score'], total['YOPS'])\nplt.title('\ubc18\ubc1c\uacc4\uc218\uc640 YOPS \ubd84\ud3ec',fontproperties=fp,size=25)\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=15)\nplt.xlabel('\ud604\uc2dc\uc98c \ubc18\ubc1c\uacc4\uc218',fontproperties=fp,size=20)\nplt.ylabel('YOPS',size=25)\nplt.text(0.40,1.85, 'correlation :  ' + str(round(cor1['ball_score']['YOPS'],4)) ,size=25)\n\nplt.subplot(1,3,2)\nplt.scatter(total['next_ball_score'], total['YOPS'])\nplt.title('\ub2e4\uc74c \uc2dc\uc98c \ubc18\ubc1c\uacc4\uc218\uc640 YOPS \ubd84\ud3ec',fontproperties=fp,size=25)\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=15)\nplt.xlabel('\ub2e4\uc74c \uc2dc\uc98c \ubc18\ubc1c\uacc4\uc218',fontproperties=fp,size=20)\nplt.ylabel('YOPS',size=25)\nplt.text(0.395,1.85,'correlation :  ' + str(round(cor1['next_ball_score']['YOPS'],4)),size=25)\n\nplt.subplot(1,3,3)\nplt.scatter(total['ball_score'], total['next_ball_score'])\nplt.title('\ubc18\ubc1c\uacc4\uc218 \uac04 \ubd84\ud3ec',fontproperties=fp,size=25)\nplt.xticks(fontsize=20)\nplt.yticks(fontsize=15)\nplt.xlabel('\ud604 \uc2dc\uc98c \ubc18\ubc1c\uacc4\uc218',fontproperties=fp,size=25)\nplt.ylabel('\ub2e4\uc74c \uc2dc\uc98c \ubc18\ubc1c\uacc4\uc218',fontproperties=fp,size=20)\nplt.text(0.40,0.445, 'correlation :  ' + str(round(cor1['ball_score']['next_ball_score'],4)) ,size=25);\n\ntotal.to_csv(\"real_total.csv\",index=False)","88782fef":"# total=pd.read_csv(\"real_total.csv\")\n\ndel total['BB']\ndel total['HBP']\n\ndel total['PA']\n\ndel total['SB']\ndel total['CS']\n\ndel total['OBP']\ndel total['SLG']\n\ndel total['1B']\ndel total['2B']\ndel total['3B']\n\ndel total['SO']","ddce7526":"train=total.copy()\ndel train['p_year']\n\ntrain_y2=train[['year','YAB','YOPS']]\n\ny_train=train_y2[train_y2['year']<=2017].reset_index(drop=True)\ny_test=train_y2[train_y2['year']==2018].reset_index(drop=True)\n\ndel y_train['year']\ndel y_test['year']\n\ndel train['batter_name']\ndel train['YAB']\ndel train['YOPS']\n\ntrain = pd.get_dummies(train,columns=['hand2'])\ntrain = pd.get_dummies(train,columns=['tp'])\n\nX_train=train[train['year']<=2017].reset_index(drop=True)\n\nX_test=train[train['year']==2018].reset_index(drop=True)\n\ndel X_train['year']\ndel X_test['year']","663054bb":"X_train=X_train.fillna(0.0000)\n\nX_test=X_test.fillna(0.0000)\n\ny_train=y_train.fillna(0.0000)\n\ny_test=y_test.fillna(0.0000)\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","236b73ab":"list1=list(X_train[X_train['OPS']>=1.25].index)\nX_train=X_train.drop(list1,axis=0).reset_index(drop=True)\ny_train=y_train.drop(list1,axis=0).reset_index(drop=True)\n\nlist2=list(X_train[X_train['OPS+']<=25].index)\nX_train=X_train.drop(list2,axis=0).reset_index(drop=True)\ny_train=y_train.drop(list2,axis=0).reset_index(drop=True)\n\n# list3=list(X_train[ (X_train['AB']<=10) & (X_train['OPS']>=1) ].index)\n# X_train=X_train.drop(list3,axis=0).reset_index(drop=True)\n# y_train=y_train.drop(list3,axis=0).reset_index(drop=True)\n\n# list4=list(X_train[ (X_train['AB']<=10) & (X_train['OPS']<=0.00001) ].index)\n# X_train=X_train.drop(list4,axis=0).reset_index(drop=True)\n# y_train=y_train.drop(list4,axis=0).reset_index(drop=True)\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","d2b98b99":"# Create the parameter grid based on the results of random search \nparam_grid = {\n    'max_features': [2, 3],\n    'min_samples_leaf': [7,9,11],\n    'min_samples_split': [2,3],\n    'n_estimators': [200,300,500]\n}\n# Create a based model\nrf = RandomForestRegressor(criterion='mae',random_state=1234)\n# Instantiate the grid search model\ngrid_search = GridSearchCV(estimator = rf, param_grid = param_grid)\n\ngrid_search.fit(X_train, y_train['YOPS'])","883e21bf":"grid_search.best_params_","540e1881":"best_grid = grid_search.best_estimator_","d8926907":"best_grid = RandomForestRegressor(criterion='mae',max_features=3,min_samples_leaf=7, min_samples_split=2, n_estimators=200,random_state=1234)\n\nbest_grid.fit(X_train,y_train['YOPS'])","0a2d1e87":"y_pred_train = best_grid.predict(X_train)\n\nprint( 'train randomforest regressor mae :' , round(mean_absolute_error(y_train['YOPS'], y_pred_train),4) )","9afdaf95":"y_pred = best_grid.predict(X_test)\n\nprint( 'test randomforest regressor mae :' , round(mean_absolute_error(y_test['YOPS'], y_pred),4) )","14acf423":"print( 'test randomforest regressor \uac00\uc911\uce58 rmse :' , round( sqrt( (( (((y_test['YOPS']-y_pred)**2)*y_test['YAB']).sum() )  \/  y_test['YAB'].sum()) ),4) )","261e1068":"df1 = DataFrame( list(zip(y_test['YOPS'],y_pred,y_test['YAB'])), columns=['YOPS','predict','YAB']  )\n\ndf1 = df1[df1['YAB']>=50]\n\nprint( '50\ud0c0\uc218 \uc774\uc0c1 test randomforest regressor mae :' , round( mean_absolute_error(df1['YOPS'], df1['predict']),4) )","772b7378":"print( '50\ud0c0\uc218 \uc774\uc0c1 test randomforest regressor \uac00\uc911\uce58 rmse :' , round( sqrt( (( (((df1['YOPS']-df1['predict'])**2)*df1['YAB']).sum() )  \/  df1['YAB'].sum()) ),4) )","9e706931":"n_feature = X_train.shape[1] #\uc8fc\uc5b4\uc9c4 \ubcc0\uc218\ub4e4\uc758 \uac2f\uc218\ub97c \uad6c\ud568\nindex = np.arange(n_feature)\ninput_var=X_train.columns","719437d1":"score2=DataFrame( list(zip(input_var,best_grid.feature_importances_  )), columns=['name','importance'])\nscore2=score2.sort_values('importance')\nscore3=score2.sort_values('importance',ascending=False)","967e20e3":"score3.head(6)","159af6b2":"score3.tail(6)","971529d1":"plt.rcParams[\"figure.figsize\"] = (20,15)\n\nplt.barh(index, score2['importance'], align='center') #\nplt.xticks(size=20)\nplt.yticks(index, score2['name'],fontproperties=fp,size=20)\nplt.ylim(-1, n_feature)\nplt.xlabel('feature importance', size=25)\nplt.ylabel('feature', size=25)\nplt.title('RandomForest Regressor feature importance', size=30)\nplt.show();","c9579895":"est=XGBRegressor(max_depth=3, learning_rate=0.005, n_estimators=100,\n                     objective='reg:linear', booster='gblinear', reg_lambda=1,\n                     scale_pos_weight=190, base_score=0.4, random_state=0,\n                     seed=None, missing=None)\n\nresult=est.fit(X_train, y_train['YOPS'], sample_weight=None, eval_set=None, eval_metric=None,\n                  early_stopping_rounds=None, verbose=True, xgb_model=None)\n\n","500023bf":"y_pred_train = result.predict(X_train)\n\nprint( 'train randomforest regressor mae :' , round(mean_absolute_error(y_train['YOPS'], y_pred_train),4) )","b6ccc936":"y_pred = result.predict(X_test)\n\nprint( 'test randomforest regressor mae :' , round(mean_absolute_error(y_test['YOPS'], y_pred),4) )","7fcd13c3":"print( 'test randomforest regressor \uac00\uc911\uce58 rmse :' ,round( sqrt( (( (((y_test['YOPS']-y_pred)**2)*y_test['YAB']).sum() )  \/  y_test['YAB'].sum()) ),4) )","34399d11":"df1 = DataFrame( list(zip(y_test['YOPS'],y_pred,y_test['YAB'])), columns=['YOPS','predict','YAB']  )\n\ndf1 = df1[df1['YAB']>=50]\n\nprint( '50\ud0c0\uc218 \uc774\uc0c1 test randomforest regressor mae :' , round(mean_absolute_error(df1['YOPS'], df1['predict']),4) )","620277ae":"model2 = LinearRegression().fit(X_train, y_train['YOPS'])\n\ny_pred_train = model2.predict(X_train)\n\nprint( 'train randomforest regressor mae :' , round(mean_absolute_error(y_train['YOPS'], y_pred_train),4) )","c3c51ade":"y_pred = model2.predict(X_test)\n\nprint( 'test randomforest regressor mae :' , round(mean_absolute_error(y_test['YOPS'], y_pred),4) )","03c93c4e":"print( 'test randomforest regressor \uac00\uc911\uce58 rmse :' ,round( sqrt( (( (((y_test['YOPS']-y_pred)**2)*y_test['YAB']).sum() )  \/  y_test['YAB'].sum()) ),4) )","0217a681":"df1 = DataFrame( list(zip(y_test['YOPS'],y_pred,y_test['YAB'])), columns=['YOPS','predict','YAB']  )\n\ndf1 = df1[df1['YAB']>=50]\n\nprint( '50\ud0c0\uc218 \uc774\uc0c1 test randomforest regressor mae :' , round(mean_absolute_error(df1['YOPS'], df1['predict']),4) )","eff0a6b0":"train=total.copy()\ndel train['p_year']\n\ntrain_y2=train[['year','YAB','YOPS']]\n\ny_train=train_y2[train_y2['year']<=2015].reset_index(drop=True)\ny_test=train_y2[train_y2['year']==2016].reset_index(drop=True)\n\ndel y_train['year']\ndel y_test['year']\n\ndel train['batter_name']\ndel train['YAB']\ndel train['YOPS']\n\ntrain = pd.get_dummies(train,columns=['hand2'])\ntrain = pd.get_dummies(train,columns=['tp'])\n\nX_train=train[train['year']<=2015].reset_index(drop=True)\n\nX_test=train[train['year']==2016].reset_index(drop=True)\n\ndel X_train['year']\ndel X_test['year']","8658bbe1":"X_train=X_train.fillna(0.0000)\n\nX_test=X_test.fillna(0.0000)\n\ny_train=y_train.fillna(0.0000)\n\ny_test=y_test.fillna(0.0000)\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","62d61991":"list1=list(X_train[X_train['OPS']>=1.25].index)\nX_train=X_train.drop(list1,axis=0).reset_index(drop=True)\ny_train=y_train.drop(list1,axis=0).reset_index(drop=True)\n\nlist2=list(X_train[X_train['OPS+']<=25].index)\nX_train=X_train.drop(list2,axis=0).reset_index(drop=True)\ny_train=y_train.drop(list2,axis=0).reset_index(drop=True)\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","84663afe":"rf = RandomForestRegressor(criterion='mae',max_features=3,min_samples_leaf=7, min_samples_split=2, n_estimators=200,random_state=1234)\n\nrf.fit(X_train,y_train['YOPS'])","cebf4a2b":"y_pred_train = rf.predict(X_train)\n\nprint( 'train randomforest regressor mae :' , round(mean_absolute_error(y_train['YOPS'], y_pred_train),4) )","bcb5b41b":"y_pred = best_grid.predict(X_test)\n\nprint( 'test randomforest regressor mae :' , round(mean_absolute_error(y_test['YOPS'], y_pred),4) )","8e882f6b":"print( 'test randomforest regressor \uac00\uc911\uce58 rmse :' , round( sqrt( (( (((y_test['YOPS']-y_pred)**2)*y_test['YAB']).sum() )  \/  y_test['YAB'].sum()) ),4) )","dc3ed8e0":"df1 = DataFrame( list(zip(y_test['YOPS'],y_pred,y_test['YAB'])), columns=['YOPS','predict','YAB']  )\n\ndf1 = df1[df1['YAB']>=50]\n\nprint( '50\ud0c0\uc218 \uc774\uc0c1 test randomforest regressor mae :' , round( mean_absolute_error(df1['YOPS'], df1['predict']),4) )","b1efce2a":"print( '50\ud0c0\uc218 \uc774\uc0c1 test randomforest regressor \uac00\uc911\uce58 rmse :' , round( sqrt( (( (((df1['YOPS']-df1['predict'])**2)*df1['YAB']).sum() )  \/  df1['YAB'].sum()) ),4) )","d910f767":"train=total.copy()\ndel train['p_year']\n\ntrain_y2=train[['year','YAB','YOPS']]\n\ny_train=train_y2[train_y2['year']<=2016].reset_index(drop=True)\ny_test=train_y2[train_y2['year']==2017].reset_index(drop=True)\n\ndel y_train['year']\ndel y_test['year']\n\ndel train['batter_name']\ndel train['YAB']\ndel train['YOPS']\n\ntrain = pd.get_dummies(train,columns=['hand2'])\ntrain = pd.get_dummies(train,columns=['tp'])\n\nX_train=train[train['year']<=2016].reset_index(drop=True)\n\nX_test=train[train['year']==2017].reset_index(drop=True)\n\ndel X_train['year']\ndel X_test['year']","b469c67c":"X_train=X_train.fillna(0.0000)\n\nX_test=X_test.fillna(0.0000)\n\ny_train=y_train.fillna(0.0000)\n\ny_test=y_test.fillna(0.0000)\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","5b72a735":"list1=list(X_train[X_train['OPS']>=1.25].index)\nX_train=X_train.drop(list1,axis=0).reset_index(drop=True)\ny_train=y_train.drop(list1,axis=0).reset_index(drop=True)\n\nlist2=list(X_train[X_train['OPS+']<=25].index)\nX_train=X_train.drop(list2,axis=0).reset_index(drop=True)\ny_train=y_train.drop(list2,axis=0).reset_index(drop=True)\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","6c2c8769":"rf = RandomForestRegressor(criterion='mae',max_features=3,min_samples_leaf=7, min_samples_split=2, n_estimators=200,random_state=1234)\n\nrf.fit(X_train,y_train['YOPS'])","12b573e3":"y_pred_train = rf.predict(X_train)\n\nprint( 'train randomforest regressor mae :' , round(mean_absolute_error(y_train['YOPS'], y_pred_train),4) )","aabde869":"y_pred = best_grid.predict(X_test)\n\nprint( 'test randomforest regressor mae :' , round(mean_absolute_error(y_test['YOPS'], y_pred),4) )","1fbfaf9d":"print( 'test randomforest regressor \uac00\uc911\uce58 rmse :' , round( sqrt( (( (((y_test['YOPS']-y_pred)**2)*y_test['YAB']).sum() )  \/  y_test['YAB'].sum()) ),4) )","6b49979f":"df1 = DataFrame( list(zip(y_test['YOPS'],y_pred,y_test['YAB'])), columns=['YOPS','predict','YAB']  )\n\ndf1 = df1[df1['YAB']>=50]\n\nprint( '50\ud0c0\uc218 \uc774\uc0c1 test randomforest regressor mae :' , round( mean_absolute_error(df1['YOPS'], df1['predict']),4) )","81359061":"print( '50\ud0c0\uc218 \uc774\uc0c1 test randomforest regressor \uac00\uc911\uce58 rmse :' , round( sqrt( (( (((df1['YOPS']-df1['predict'])**2)*df1['YAB']).sum() )  \/  df1['YAB'].sum()) ),4) )","671e6162":"\ud559\uc2b5\ub41c rf\uc5d0\uc11c feature_importance_\ub97c \uc785\ub825\ud558\uba74, \ud574\ub2f9 \ubcc0\uc218\uc5d0 \ub300\ud55c \ubcc0\uc218 \uc911\uc694\ub3c4\uac00 \uc218\uce58\uc801\uc73c\ub85c \ub098\ud0c0\ub09c\ub2e4.\n\n\uc774\ub97c \uc218\ud3c9 \ub9c9\ub300 \uadf8\ub798\ud504\ub97c \ud65c\uc6a9\ud558\uc5ec \uadf8\ub9ac\ub294 \uacfc\uc815\uc740 \ub2e4\uc74c\uacfc \uac19\ub2e4.","b2e86c23":"## 3-1. \uc804\uccb4 \ubcc0\uc218\uac04 \uc0c1\uad00\uad00\uacc4 \ubc0f \ubaa9\uc801\ubcc0\uc218\uc640\uc758 \uc0c1\uad00\uad00\uacc4","5adaa99e":"# 3. \ud575\uc2ec\ubcc0\uc218 \ud30c\uc545","e7df7bfa":"### \uacf5 \ubc18\ubc1c\uacc4\uc218 \ucd94\uac00\ud558\uae30","af843dd5":"### OPS+\uad6c\ud558\uae30","15a705b9":"# 2. \ub370\uc774\ud130 \uc815\uc81c \ubc0f \ucc98\ub9ac","0de2548f":"### wOBA\uad6c\ud558\uae30","8da0d0a2":"train \uacb0\uce21\uce58 \uc81c\uac70 \ucd94\uac00\uc801\uc778 eda\ub3c4 \ud55c \uacbd\uc6b0","82bec8ad":"## 2-2. \ud0c0\uc11d\uc704\uce58, \ud1b5\ud569 \ud3ec\uc9c0\uc158 \ub9cc\ub4e4\uae30","afbf5bfe":"## 3-2. \ud575\uc2ec \ubcc0\uc218\ub4e4 \ubd84\ud3ec \ubc0f \uc0c1\uad00\uad00\uacc4","0df3da4e":"## 2-3. \uacb0\uce21\uce58 \ucc98\ub9ac","3452bd68":"linear regression","edae0764":"# 5. \ubaa8\ub378\ub9c1","36a50e8a":"## 2-1. \ubc94\uc8fc\ud615 \ubcc0\uc218 \ud1b5\ud569","53c6820f":"eda \uc81c\uac70","5d4d7c1b":"## 4-3. \uc2ec\ud654 \ubcc0\uc218\ub4e4 \uc0dd\uc131\n\n### SPD \uad6c\ud558\uae30 \n\n\ud0c0\uc790\uc758 \uc18d\ub3c4\uc640 \uad00\ub828\ub41c \ubcc0\uc218\ub85c spd\ub294 5\uac1c\uc758 \ucc99\ub3c4\ub4e4\uc758 \ud3c9\uade0\uc744 \uc774\uc6a9\ud55c \uac12\uc73c\ub85c \n\nf1\uc740 \ub3c4\ub8e8\uc131\uacf5 \uad00\ub828, f2\ub294 \ub3c4\ub8e8\uad00\ub828 f3\uc740 \ud648\ub7f0\uc81c\uc678 \ud0c0\uad6c\ube44\uc728\nf4\ub294 3\ub8e8\ud0c0 \ube44\uc728 f5\ub294 \ubcd1\uc0b4\uad00\ub828 \ubd80\ubd84\uc774\ub2e4.","2ca89db0":"# 6. \ucd5c\uc885 \uacb0\ub860","3c466ccf":"## 4-2. \uc120\uc218\ub2f9 \uc2dc\uc98c \ubcf4\ub0b8 \ud69f\uc218","ce05a93a":"## 5-2. randomforestregressor","90b2105c":"## 5-4. 2016, 2017, 2018 \uc2dc\uc98c \uacb0\uacfc \ube44\uad50","6e242710":"2017 \uc2dc\uc98c","42acbb41":"## 5-1. train, test \ub098\ub204\uae30 \ubc0f \ubcc0\uc218 \uc120\ud0dd","262823e0":"2016 \uc2dc\uc98c","80fcd280":"## 5-3. xgbregressor, lin_reg \ube44\uad50","36ef12e6":"# 4. \ubcc0\uc218 \ucd94\uac00\n\n## 4-1. \ucd94\uac00 \ub3c4\ub8e8\ud69f\uc218, eqa~babip \ub9cc\ub4e4\uae30"}}