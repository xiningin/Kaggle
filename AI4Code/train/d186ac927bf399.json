{"cell_type":{"63b92e8c":"code","91918d15":"code","1a8b21cb":"code","27846687":"code","b0ad99e7":"code","8631c1ac":"code","f2d9cab7":"code","0fd6b98a":"code","4beb7458":"code","d842431e":"code","a51d2de4":"code","04883d36":"code","7b563431":"code","fb620a11":"code","65f87c39":"code","d8cc7015":"code","e8fd19dd":"code","249656b9":"code","16d3b948":"code","a95c5ecd":"code","56ac9c16":"code","614d97dc":"code","f2affc69":"code","1996182e":"code","038f04c8":"code","065b6e39":"code","e8a61798":"code","3d2fc989":"code","b5a01e83":"code","8f9fe5b2":"code","ea0b1529":"code","e5cf33c9":"code","0e3f49cf":"code","97736e1c":"code","17f4b9a4":"code","1f0af5c9":"code","20bb998a":"code","0715a4f4":"markdown","9f794e39":"markdown","f4621b94":"markdown","81856aef":"markdown","12445bef":"markdown","0d1732f9":"markdown","7f1fd98c":"markdown","503c9b0a":"markdown","8d49b91e":"markdown","b1f425fb":"markdown","ff5e6fe7":"markdown","1f3e32d8":"markdown","41bf2fa6":"markdown","0b26a85e":"markdown","55466a18":"markdown","e9c53972":"markdown","cd9d6b51":"markdown","4730873f":"markdown","efb56d2f":"markdown","a1160b33":"markdown","d9cb45ba":"markdown","dbc89ab4":"markdown"},"source":{"63b92e8c":"import pandas as pd\nclassificacao = [['aeronave_operador_categoria', 'Qualitativa Nominal'],\n    ['aeronave_tipo_veiculo', 'Qualitativa Nominal'],\n    ['aeronave_fabricante', 'Qualitativa Nominal'],\n    ['aeronave_modelo', 'Qualitativa Nominal'],\n    ['aeronave_motor_tipo', 'Qualitativa Nominal'],\n    ['aeronave_motor_quantidade', 'Quantitativa Discreta'],\n    ['aeronave_pmd', 'Quantitativa Continua'],\n    ['aeronave_ano_fabricacao', 'Quantitativa Discreta'],#discretiza\u00e7\u00e3o\n    ['aeronave_fase_operacao', 'Qualitativa Ordinal'],\n    ['aeronave_tipo_operacao', 'Qualitativa Nominal'],\n    ['aeronave_nivel_dano', 'Qualitativa Ordinal']]\nclassificacao = pd.DataFrame(classificacao, columns=[\"Variavel\", \"Classifica\u00e7\u00e3o\"])\nclassificacao","91918d15":"df = pd.read_csv('..\/input\/anv.csv')","1a8b21cb":"dfaux = classificacao.where(classificacao['Classifica\u00e7\u00e3o'].apply(lambda x : 'Qualitativa' in x)).dropna()\nfor var in dfaux['Variavel']:\n    dfvar = pd.DataFrame(df[var].value_counts())\n    dfvar.rename(columns={ var: 'Frequencia Absoluta'}, inplace=True)\n    dfvar['Frequencia Relativa'] = dfvar['Frequencia Absoluta']\/dfvar['Frequencia Absoluta'].sum()\n    dfvar['Frequencia Relativa %'] = dfvar['Frequencia Relativa'].apply((lambda x : '{:.2%}'.format(x)))\n    a = pd.DataFrame([[dfvar['Frequencia Absoluta'].sum(),dfvar['Frequencia Relativa'].sum(),\n                       '{:.2%}'.format(dfvar['Frequencia Relativa'].sum())]], \n                     columns=['Frequencia Absoluta', 'Frequencia Relativa', 'Frequencia Relativa %'], index=['Total'])\n    print(dfvar.append(a)) #Print fica feio no kaggle","27846687":"dfvar = pd.DataFrame(df['aeronave_operador_categoria'].value_counts())\ndfvar.rename(columns={ 'aeronave_operador_categoria': 'Frequencia Absoluta'}, inplace=True)\ndfvar['Frequencia Relativa'] = dfvar['Frequencia Absoluta']\/dfvar['Frequencia Absoluta'].sum()\ndfvar['Frequencia Relativa %'] = dfvar['Frequencia Relativa'].apply((lambda x : '{:.2%}'.format(x)))\na = pd.DataFrame([[dfvar['Frequencia Absoluta'].sum(),dfvar['Frequencia Relativa'].sum(),\n                   '{:.2%}'.format(dfvar['Frequencia Relativa'].sum())]], \n                 columns=['Frequencia Absoluta', 'Frequencia Relativa', 'Frequencia Relativa %'], index=['Total'])\ndfvar.append(a)","b0ad99e7":"dfvar = pd.DataFrame(df['aeronave_tipo_veiculo'].value_counts())\ndfvar.rename(columns={ 'aeronave_tipo_veiculo': 'Frequencia Absoluta'}, inplace=True)\ndfvar['Frequencia Relativa'] = dfvar['Frequencia Absoluta']\/dfvar['Frequencia Absoluta'].sum()\ndfvar['Frequencia Relativa %'] = dfvar['Frequencia Relativa'].apply((lambda x : '{:.2%}'.format(x)))\na = pd.DataFrame([[dfvar['Frequencia Absoluta'].sum(),dfvar['Frequencia Relativa'].sum(),\n                   '{:.2%}'.format(dfvar['Frequencia Relativa'].sum())]], \n                 columns=['Frequencia Absoluta', 'Frequencia Relativa', 'Frequencia Relativa %'], index=['Total'])\ndfvar.append(a)","8631c1ac":"dfvar = pd.DataFrame(df['aeronave_fabricante'].value_counts())\ndfvar.rename(columns={ 'aeronave_fabricante': 'Frequencia Absoluta'}, inplace=True)\ndfvar['Frequencia Relativa'] = dfvar['Frequencia Absoluta']\/dfvar['Frequencia Absoluta'].sum()\ndfvar['Frequencia Relativa %'] = dfvar['Frequencia Relativa'].apply((lambda x : '{:.2%}'.format(x)))\na = pd.DataFrame([[dfvar['Frequencia Absoluta'].sum(),dfvar['Frequencia Relativa'].sum(),\n                   '{:.2%}'.format(dfvar['Frequencia Relativa'].sum())]], \n                 columns=['Frequencia Absoluta', 'Frequencia Relativa', 'Frequencia Relativa %'], index=['Total'])\ndfvar.append(a)","f2d9cab7":"dfvar = pd.DataFrame(df['aeronave_modelo'].value_counts())\ndfvar.rename(columns={ 'aeronave_modelo': 'Frequencia Absoluta'}, inplace=True)\ndfvar['Frequencia Relativa'] = dfvar['Frequencia Absoluta']\/dfvar['Frequencia Absoluta'].sum()\ndfvar['Frequencia Relativa %'] = dfvar['Frequencia Relativa'].apply((lambda x : '{:.2%}'.format(x)))\na = pd.DataFrame([[dfvar['Frequencia Absoluta'].sum(),dfvar['Frequencia Relativa'].sum(),\n                   '{:.2%}'.format(dfvar['Frequencia Relativa'].sum())]], \n                 columns=['Frequencia Absoluta', 'Frequencia Relativa', 'Frequencia Relativa %'], index=['Total'])\ndfvar.append(a)","0fd6b98a":"dfvar = pd.DataFrame(df['aeronave_motor_tipo'].value_counts())\ndfvar.rename(columns={ 'aeronave_motor_tipo': 'Frequencia Absoluta'}, inplace=True)\ndfvar['Frequencia Relativa'] = dfvar['Frequencia Absoluta']\/dfvar['Frequencia Absoluta'].sum()\ndfvar['Frequencia Relativa %'] = dfvar['Frequencia Relativa'].apply((lambda x : '{:.2%}'.format(x)))\na = pd.DataFrame([[dfvar['Frequencia Absoluta'].sum(),dfvar['Frequencia Relativa'].sum(),\n                   '{:.2%}'.format(dfvar['Frequencia Relativa'].sum())]], \n                 columns=['Frequencia Absoluta', 'Frequencia Relativa', 'Frequencia Relativa %'], index=['Total'])\ndfvar.append(a)","4beb7458":"dfvar = pd.DataFrame(df['aeronave_fase_operacao'].value_counts())\ndfvar.rename(columns={ 'aeronave_fase_operacao': 'Frequencia Absoluta'}, inplace=True)\ndfvar['Frequencia Relativa'] = dfvar['Frequencia Absoluta']\/dfvar['Frequencia Absoluta'].sum()\ndfvar['Frequencia Relativa %'] = dfvar['Frequencia Relativa'].apply((lambda x : '{:.2%}'.format(x)))\na = pd.DataFrame([[dfvar['Frequencia Absoluta'].sum(),dfvar['Frequencia Relativa'].sum(),\n                   '{:.2%}'.format(dfvar['Frequencia Relativa'].sum())]], \n                 columns=['Frequencia Absoluta', 'Frequencia Relativa', 'Frequencia Relativa %'], index=['Total'])\ndfvar.append(a)","d842431e":"dfvar = pd.DataFrame(df['aeronave_tipo_operacao'].value_counts())\ndfvar.rename(columns={ 'aeronave_tipo_operacao': 'Frequencia Absoluta'}, inplace=True)\ndfvar['Frequencia Relativa'] = dfvar['Frequencia Absoluta']\/dfvar['Frequencia Absoluta'].sum()\ndfvar['Frequencia Relativa %'] = dfvar['Frequencia Relativa'].apply((lambda x : '{:.2%}'.format(x)))\na = pd.DataFrame([[dfvar['Frequencia Absoluta'].sum(),dfvar['Frequencia Relativa'].sum(),\n                   '{:.2%}'.format(dfvar['Frequencia Relativa'].sum())]], \n                 columns=['Frequencia Absoluta', 'Frequencia Relativa', 'Frequencia Relativa %'], index=['Total'])\ndfvar.append(a)","a51d2de4":"dfvar = pd.DataFrame(df['aeronave_nivel_dano'].value_counts())\ndfvar.rename(columns={ 'aeronave_nivel_dano': 'Frequencia Absoluta'}, inplace=True)\ndfvar['Frequencia Relativa'] = dfvar['Frequencia Absoluta']\/dfvar['Frequencia Absoluta'].sum()\ndfvar['Frequencia Relativa %'] = dfvar['Frequencia Relativa'].apply((lambda x : '{:.2%}'.format(x)))\na = pd.DataFrame([[dfvar['Frequencia Absoluta'].sum(),dfvar['Frequencia Relativa'].sum(),\n                   '{:.2%}'.format(dfvar['Frequencia Relativa'].sum())]], \n                 columns=['Frequencia Absoluta', 'Frequencia Relativa', 'Frequencia Relativa %'], index=['Total'])\ndfvar.append(a)","04883d36":"df['aeronave_operador_categoria'].value_counts()\ndf['aeronave_tipo_veiculo'].value_counts()\ndf['aeronave_fabricante'].value_counts()\ndf['aeronave_modelo'].value_counts()\ndf['aeronave_motor_tipo'].value_counts()\ndf['aeronave_fase_operacao'].value_counts()\ndf['aeronave_tipo_operacao'].value_counts()\ndf1 = pd.DataFrame(df['aeronave_nivel_dano'].value_counts())\ndf1.rename(columns={\"aeronave_nivel_dano\": \"Frequencia Absoluta\"}, inplace=True)\ndf1['Frequencia Relativa'] = df1['Frequencia Absoluta']\/df1['Frequencia Absoluta'].sum()\ndf1['Frequencia Relativa %'] = df1['Frequencia Relativa'].apply((lambda x : '{:.2%}'.format(x)))\ndf1\na = pd.DataFrame([[df1['Frequencia Absoluta'].sum(),df1['Frequencia Relativa'].sum(),\n                   '{:.2%}'.format(df1['Frequencia Relativa'].sum())]], \n                 columns=['Frequencia Absoluta', 'Frequencia Relativa', 'Frequencia Relativa %'], index=['Total'])\ndf1.append(a)","7b563431":"import matplotlib.pyplot as plt\n%matplotlib inline  ","fb620a11":"vc = df['aeronave_operador_categoria'].value_counts()\nplt.bar(vc.index, vc)\nplt.xticks(rotation='vertical')\nplt.show()","65f87c39":"dfaux = df.groupby(['aeronave_nivel_dano', 'aeronave_operador_categoria']).size()","d8cc7015":"gridsize = (3, 2) # 4 rows, 2 columns\nfig = plt.figure(figsize=(10, 15)) # this creates a figure without axes\nax = []\nfor i in range(len(dfaux.index.levels[0])):\n    #import pdb; pdb.set_trace()\n    ax.append(plt.subplot2grid(gridsize, (i\/\/2, i%2)))\n    x = dfaux[dfaux.index.levels[0][i]].index\n    y = dfaux[dfaux.index.levels[0][i]]\n    ax[i].bar(x, y.values)\n    ax[i].set_title(dfaux.index.levels[0][i])\n    plt.xticks(rotation='vertical')\n    #plt.xticks([])\n#plt.xticks(dfaux.index.levels[1])\n","e8fd19dd":"gridsize = (3, 2) # 3 rows, 2 columns\nfig = plt.figure(figsize=(10, 15)) # this creates a figure without axes\nax = []\nfor i in range(len(dfaux.index.levels[0])):\n    if(i<4):\n        plt.xticks([])\n    dano = dfaux.index.levels[0][i]\n    \n    dic = {cat:dfaux[dano][cat] for cat in dfaux[dano].index}\n    for cat in dfaux.index.levels[1]:\n        if(cat not in dic):\n            dic[cat] = 0\n    #import pdb; pdb.set_trace()\n    sorted_keys = sorted(dic)\n    x = []\n    y = []\n    for key in sorted_keys:\n        x += [key]\n        y += [dic[key]]\n    #print(dano)\n    #print(x)\n    #print(y)\n    ax.append(plt.subplot2grid(gridsize, (i\/\/2, i%2)))\n    ax[i].bar(x, y)\n    ax[i].set_title(dfaux.index.levels[0][i])\n    plt.xticks(rotation='vertical')","249656b9":"vc = df['aeronave_tipo_veiculo'].value_counts()\nplt.bar(vc.index, vc)\nplt.xticks(rotation='vertical')\nplt.show()","16d3b948":"dfaux = df.groupby(['aeronave_nivel_dano', 'aeronave_tipo_veiculo']).size()","a95c5ecd":"gridsize = (2, 3) # 3 rows, 2 columns\nfig = plt.figure(figsize=(20, 10)) # this creates a figure without axes\nax = []\nfor i in range(len(dfaux.index.levels[0])):\n    if(i<3):\n        plt.xticks([])\n    dano = dfaux.index.levels[0][i]\n    \n    dic = {tipo:dfaux[dano][tipo] for tipo in dfaux[dano].index}\n    for tipo in dfaux.index.levels[1]:\n        if(tipo not in dic):\n            dic[tipo] = 0\n    #import pdb; pdb.set_trace()\n    sorted_keys = sorted(dic)\n    x = []\n    y = []\n    for key in sorted_keys:\n        x += [key]\n        y += [dic[key]]\n    #print(dano)\n    #print(x)\n    #print(y)\n    ax.append(plt.subplot2grid(gridsize, (i\/\/3, i%3)))\n    ax[i].bar(x, y)\n    ax[i].set_title(dfaux.index.levels[0][i])\n    plt.xticks(rotation='vertical')","56ac9c16":"vc = df['aeronave_fabricante'].value_counts().head(40)\nplt.figure(figsize=(20, 10))\nplt.bar(vc.index, vc)\nplt.xticks(rotation='vertical')\nplt.show()","614d97dc":"vc = df['aeronave_modelo'].value_counts().head(40)\nplt.figure(figsize=(20, 10))\nplt.bar(vc.index, vc)\nplt.xticks(rotation='vertical')\nplt.show()","f2affc69":"vc = df['aeronave_motor_tipo'].value_counts()\nplt.bar(vc.index, vc)\nplt.xticks(rotation='vertical')\nplt.show()","1996182e":"dfaux = df.groupby(['aeronave_nivel_dano', 'aeronave_motor_tipo']).size()","038f04c8":"gridsize = (2, 3) # 3 rows, 2 columns\nfig = plt.figure(figsize=(20, 10)) # this creates a figure without axes\nax = []\nfor i in range(len(dfaux.index.levels[0])):\n    if(i<3):\n        plt.xticks([])\n    dano = dfaux.index.levels[0][i]\n    \n    dic = {qtd:dfaux[dano][qtd] for qtd in dfaux[dano].index}\n    for qtd in dfaux.index.levels[1]:\n        if(qtd not in dic):\n            dic[qtd] = 0\n    #import pdb; pdb.set_trace()\n    sorted_keys = sorted(dic)\n    x = []\n    y = []\n    for key in sorted_keys:\n        x += [key]\n        y += [dic[key]]\n    #print(dano)\n    #print(x)\n    #print(y)\n    ax.append(plt.subplot2grid(gridsize, (i\/\/3, i%3)))\n    ax[i].bar(x, y)\n    ax[i].set_title(dfaux.index.levels[0][i])\n    plt.xticks(rotation='vertical')","065b6e39":"vc = df['aeronave_motor_quantidade'].value_counts()\nplt.bar(vc.index, vc)\nplt.xticks(rotation='vertical')\nplt.show()","e8a61798":"dfaux = df.groupby(['aeronave_nivel_dano', 'aeronave_motor_quantidade']).size()","3d2fc989":"gridsize = (2, 3) # 3 rows, 2 columns\nfig = plt.figure(figsize=(20, 10)) # this creates a figure without axes\nax = []\nfor i in range(len(dfaux.index.levels[0])):\n    if(i<3):\n        plt.xticks([])\n    dano = dfaux.index.levels[0][i]\n    \n    dic = {tipo:dfaux[dano][tipo] for tipo in dfaux[dano].index}\n    for tipo in dfaux.index.levels[1]:\n        if(tipo not in dic):\n            dic[tipo] = 0\n    #import pdb; pdb.set_trace()\n    sorted_keys = sorted(dic)\n    x = []\n    y = []\n    for key in sorted_keys:\n        x += [key]\n        y += [dic[key]]\n    #print(dano)\n    #print(x)\n    #print(y)\n    ax.append(plt.subplot2grid(gridsize, (i\/\/3, i%3)))\n    ax[i].bar(x, y)\n    ax[i].set_title(dfaux.index.levels[0][i])\n    plt.xticks(rotation='vertical')","b5a01e83":"import numpy as np","8f9fe5b2":"vc = df.groupby(pd.cut(df['aeronave_pmd'], np.arange(0, 100000, 2000), right=False)).size()\nplt.plot(np.arange(0, 100000-2000, 2000), vc.values)\nplt.xlabel('Peso')\nplt.ylabel('Frequencia')\nplt.show()","ea0b1529":"vc = df['aeronave_fase_operacao'].value_counts()\nplt.figure(figsize=(20, 7))\nplt.bar(vc.index, vc)\nplt.xticks(rotation='vertical')\nplt.show()","e5cf33c9":"dfaux = df.groupby(['aeronave_nivel_dano', 'aeronave_fase_operacao']).size()","0e3f49cf":"gridsize = (2, 3) # 3 rows, 2 columns\nfig = plt.figure(figsize=(25, 10)) # this creates a figure without axes\nax = []\nfor i in range(len(dfaux.index.levels[0])):\n    if(i<3):\n        plt.xticks([])\n    dano = dfaux.index.levels[0][i]\n    \n    dic = {fase:dfaux[dano][fase] for fase in dfaux[dano].index}\n    for fase in dfaux.index.levels[1]:\n        if(fase not in dic):\n            dic[fase] = 0\n    #import pdb; pdb.set_trace()\n    sorted_keys = sorted(dic)\n    x = []\n    y = []\n    for key in sorted_keys:\n        x += [key]\n        y += [dic[key]]\n    #print(dano)\n    #print(x)\n    #print(y)\n    ax.append(plt.subplot2grid(gridsize, (i\/\/3, i%3)))\n    ax[i].bar(x, y)\n    ax[i].set_title(dfaux.index.levels[0][i])\n    plt.xticks(rotation='vertical')","97736e1c":"vc = df['aeronave_tipo_operacao'].value_counts()\nplt.bar(vc.index, vc)\nplt.xticks(rotation='vertical')\nplt.show()","17f4b9a4":"dfaux = df.groupby(['aeronave_nivel_dano', 'aeronave_tipo_operacao']).size()","1f0af5c9":"gridsize = (2, 3) # 3 rows, 2 columns\nfig = plt.figure(figsize=(25, 10)) # this creates a figure without axes\nax = []\nfor i in range(len(dfaux.index.levels[0])):\n    if(i<3):\n        plt.xticks([])\n    dano = dfaux.index.levels[0][i]\n    \n    dic = {tipo:dfaux[dano][tipo] for tipo in dfaux[dano].index}\n    for tipo in dfaux.index.levels[1]:\n        if(tipo not in dic):\n            dic[tipo] = 0\n    #import pdb; pdb.set_trace()\n    sorted_keys = sorted(dic)\n    x = []\n    y = []\n    for key in sorted_keys:\n        x += [key]\n        y += [dic[key]]\n    #print(dano)\n    #print(x)\n    #print(y)\n    ax.append(plt.subplot2grid(gridsize, (i\/\/3, i%3)))\n    ax[i].bar(x, y)\n    ax[i].set_title(dfaux.index.levels[0][i])\n    plt.xticks(rotation='vertical')","20bb998a":"vc = df['aeronave_nivel_dano'].value_counts()\nplt.bar(vc.index, vc)\nplt.xticks(rotation='vertical')\nplt.show()","0715a4f4":"#### aeronave_operador_categoria","9f794e39":"### aeronave_modelo","f4621b94":"### Quest\u00e3o 1 - Item C - Representa\u00e7\u00e3o Gr\u00e1fica\nPara cada uma das vari\u00e1veis, produza um ou mais gr\u00e1ficos, usando matplotlib, que descreva seu comportamento \/ caracteristica. Lembre-se que estes gr\u00e1ficos precisam ser compat\u00edveis com a classifica\u00e7\u00e3o da vari\u00e1vel. ","81856aef":"#### aeronave_modelo","12445bef":"### Quest\u00e3o 1 - Item B - Tabela de frequ\u00eancia\n\nConstrua uma tabela de frequ\u00eancia para cada uma das **vari\u00e1veis qualitativas** que voc\u00ea escolheu (caso n\u00e3o tenha escolhido nenhuma, deixe esta quest\u00e3o em branco). Uma dica: a fun\u00e7\u00e3o *value_counts()* do Pandas pode ser muito \u00fatil. =)\n","0d1732f9":"### aeronave_nivel_dano","7f1fd98c":"# Especializa\u00e7\u00e3o em Ci\u00eancia de Dados - Turma 2018.1 - Facens\n## Aula1 | Exerc\u00edcio 1 (valendo nota)\n\n* **Data de entrega:** 06\/nov\/2018 07:59\n* **Professor:**  Matheus Mota\n* **Aluno:** Felipe da Silva Pereira\n* **RA:** 132168","503c9b0a":"### aeronave_motor_tipo","8d49b91e":"#### aeronave_fabricante","b1f425fb":"## Quest\u00e3o 1\n**Enunciado:**  Este notebook est\u00e1 associado ao *Kaggle Dataset* chamado \"Aula1 | Exerc\u00edcio1\". Este *Kaggle Dataset* possui dois arquivos em formato CSV (anv.csv e BR_eleitorado_2016_municipio ). Escolha um dos datasets dispon\u00edveis e j\u00e1 conhecidos, a seu crit\u00e9rio. Uma vez definido o csv, escolha no m\u00ednimo 7 e no m\u00e1ximo 12 vari\u00e1veis (colunas) que voc\u00ea avalia como sendo relevantes. Para cada uma das suas vari\u00e1veis escolhidas, forne\u00e7a:\n\n\n### Quest\u00e3o 1 - Item A - Classifica\u00e7\u00e3o das vari\u00e1veis\n\nClassifique todas as vari\u00e1veis escolhidas, e construa um dataframe com sua resposta.\nExemplo:","ff5e6fe7":"### aeronave_fase_operacao","1f3e32d8":"### aeronave_tipo_operacao","41bf2fa6":"#### aeronave_tipo_veiculo","0b26a85e":"### aeronave_tipo_veiculo","55466a18":"#### aeronave_nivel_dano","e9c53972":"#### aeronave_fase_operacao","cd9d6b51":"### aeronave_fabricante","4730873f":"### aeronave_pmd","efb56d2f":"#### aeronave_motor_tipo","a1160b33":"#### aeronave_tipo_operacao","d9cb45ba":"### Aeronave_operador_categoria","dbc89ab4":"### aeronave_motor_quantidade"}}