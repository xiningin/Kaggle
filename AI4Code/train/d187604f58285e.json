{"cell_type":{"3f11682e":"code","6ad4586b":"code","9c32826d":"code","a3500ce0":"code","bf804cdc":"code","42e892f6":"code","a3dea5a8":"code","153b68bc":"code","258d720b":"code","899126e7":"code","fea3fb6e":"code","851408fa":"code","ff4607c4":"code","0d74c777":"markdown","4bce1300":"markdown","9f212f25":"markdown","61d359e2":"markdown","9db4d40f":"markdown","ff3c6329":"markdown","dcf5ce26":"markdown","3511b909":"markdown","7ccb739b":"markdown","09d03672":"markdown"},"source":{"3f11682e":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('seaborn-bright')\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import f1_score, classification_report, confusion_matrix, roc_curve, auc\n\nimport warnings \nwarnings.filterwarnings('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6ad4586b":"data = pd.read_csv('\/kaggle\/input\/beginners-classification-dataset\/classification.csv')\n\ndata.info()\ndata.head()","9c32826d":"plt.figure(figsize=(6, 4))\nsns.countplot(x=data.success, data=data)\nplt.xlabel('Success', fontsize=12)\nplt.ylabel('Count', fontsize=12)","a3500ce0":"na_data = (data.isnull().sum() \/ len(data))*100\nna_data = na_data.drop(na_data[na_data==0].index).sort_index(ascending=False)[:10]\n\nmissing_data = pd.DataFrame({'Missing Ratio': na_data})\nmissing_data['Num. of missing values'] = data.isnull().sum()\n\nmissing_data","bf804cdc":"scaler = StandardScaler()\ndata[['age', 'interest']] = scaler.fit_transform(data[['age', 'interest']])\n\ndata.head()","42e892f6":"X = data.drop('success', axis=1)\ny = data.success\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.33, random_state=42)\nX_train.shape, y_train.shape, X_test.shape, y_test.shape","a3dea5a8":"params = {\n    'n_estimators': range(50, 250, 50),\n    'max_depth': range(1, 7, 2), \n    'n_jobs': [-2], \n    'min_samples_split': range(1, 10, 2)\n}","153b68bc":"RF = RandomForestClassifier()\ngrid_clf = GridSearchCV(RF, param_grid=params, cv=5)\n\ngrid_clf.fit(X_train, y_train)\nclf = grid_clf.best_estimator_\n\nclf","258d720b":"clf.fit(X_train, y_train)","899126e7":"pred = clf.predict(X_test)\npred_proba = clf.predict_proba(X_test)","fea3fb6e":"print(classification_report(y_test, pred))","851408fa":"plt.figure(figsize=(6, 5))\nsns.heatmap(confusion_matrix(y_test, pred), annot=True)","ff4607c4":"fpr, tpr, thresholds = roc_curve(y_test, pred_proba[:,1])\nroc_auc = auc(fpr, tpr)\nplt.figure()\nplt.plot(fpr, tpr, label='ROC curve (area = %0.2f)' % roc_auc)\nplt.plot([0, 1], [0, 1], 'k--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('ROC')\nplt.legend(loc=\"lower right\")\nplt.show()","0d74c777":"### Splitting Data","4bce1300":"# Data Overview","9f212f25":"### Scalling Data","61d359e2":"### Hope you enjoyed this notebook!","9db4d40f":"#### As we can see there are no missing values at all","ff3c6329":" #### As we can see the model perform really nice. Only one object was detected incorrect","dcf5ce26":"# Preprocessing","3511b909":"### Checking Missing Values","7ccb739b":"### Target Value Distribution","09d03672":"# Modeling"}}