{"cell_type":{"d81ff4e8":"code","d1bdea70":"code","7137236d":"code","1a9278c7":"code","af87aaab":"code","ab8101d4":"code","810d6944":"code","6950bac3":"code","1ebcc904":"code","8fb4225d":"code","1bd398e7":"code","b285aa2e":"code","b849ad6b":"code","8361fc31":"code","381825f0":"code","d05c6d4c":"code","3c9b5066":"code","b0484d02":"code","9843eff6":"code","c439b371":"code","741a7a38":"code","4567d1ee":"code","dcd648c5":"code","72609d92":"code","d87f7202":"code","1379046f":"code","27ff6cc3":"code","02aad92c":"code","bcb2ca73":"code","1fe41eb3":"code","bd9ccf57":"code","9d59bbce":"code","42023b47":"code","5301afa0":"code","c7e63967":"code","1a29275b":"code","fd4313f1":"code","51c6a3c7":"code","62832492":"code","face4194":"code","291f34eb":"code","d170c6da":"code","11950f6d":"code","3b3c5541":"code","59804cf5":"code","01f22fb7":"code","6a25cf39":"code","07692e28":"code","f68945eb":"code","77f82152":"markdown","23baa0b2":"markdown","3d3dba94":"markdown","343f4870":"markdown","11901f0f":"markdown","35cd83cc":"markdown","cf1dc9ff":"markdown","6467fc66":"markdown","45ab96ad":"markdown","2e0eca1a":"markdown","94609735":"markdown","59cb747c":"markdown","d51e1a97":"markdown","5bf90728":"markdown","76bf0101":"markdown","2a483b54":"markdown","f54493fe":"markdown","600e2d11":"markdown","1b94aa6b":"markdown","c158b09c":"markdown","21acba31":"markdown","ae883990":"markdown","4b915e39":"markdown","f2e23898":"markdown","dc2fdd74":"markdown","bc1f0b14":"markdown","cd569784":"markdown","aeb04106":"markdown","2a4ead0a":"markdown","0776a1d6":"markdown"},"source":{"d81ff4e8":"import numpy as np\nimport pandas as pd\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom sklearn.preprocessing import MinMaxScaler, StandardScaler\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\n\ndf = pd.read_csv(\"..\/input\/automobile-dataset\/Automobile_data.csv\")\ndf.head()","d1bdea70":"df.dtypes","7137236d":"df.describe() #\u53ea\u5bf9\u6570\u503c\u578b\u8fdb\u884c\u7edf\u8ba1","1a9278c7":"df.describe(include=\"all\") #\u4f20\u5165'all'\u8868\u793a\u5bf9\u6240\u6709\u7279\u5f81\u8fdb\u884c\u6c47\u603b\u7edf\u8ba1","af87aaab":"df[['price']].head(10)","ab8101d4":"#\u67e5\u770b\u6bcf\u5217\u6709\u591a\u5c11\u7a7a\u7684\u6570\u636e\ndf_data = df.replace(\"?\", np.nan)\ndf_data.isnull().sum()","810d6944":"df_temp = df[df['normalized-losses']!='?']\nnormalised_mean = df_temp['normalized-losses'].astype(int).mean()\ndf['normalized-losses'] = df['normalized-losses'].replace('?',normalised_mean).astype(int)\n\ndf_temp = df[df['bore'] != '?']\nnormalised_mean = df_temp['bore'].astype(float).mean()\ndf['bore'] = df['bore'].replace('?',normalised_mean).astype(float)\n\ndf_temp = df[df['stroke'] != '?']\nnormalised_mean = df_temp['stroke'].astype(float).mean()\ndf['stroke'] = df['stroke'].replace('?', normalised_mean).astype(float)\n\ndf_temp = df[df['horsepower'] != '?']\nnormalised_mean = df_temp['horsepower'].astype(int).mean()\ndf['horsepower'] = df['horsepower'].replace('?', normalised_mean).astype(int)\n\ndf_temp = df[df['peak-rpm'] != '?']\nnormalised_mean = df_temp['peak-rpm'].astype(int).mean()\ndf['peak-rpm'] = df['peak-rpm'].replace('?', normalised_mean).astype(int)\n\ndf_temp = df[df['price'] != '?']\nnormalised_mean = df_temp['price'].astype(int).mean()\ndf['price'] = df['price'].replace('?', normalised_mean).astype(int)\n\ndf['num-of-doors'] = df['num-of-doors'].replace('?','four')\n\ndf['num-of-doors'] = df['num-of-doors'].map({'two':2,'four':4}).astype(int)\ndf.head()","6950bac3":"import matplotlib.pyplot as plt\ndf[['engine-size', 'peak-rpm', 'horsepower', 'curb-weight', 'price']].hist(figsize=(10,8),bins = 6, color='b')\nplt.tight_layout()\nplt.show()","1ebcc904":"plt.figure(1)\nplt.subplot(221)\ndf['engine-type'].value_counts(normalize=True).plot(figsize=(10,8), kind='bar', color='red')\nplt.xlabel('\u53d1\u52a8\u673a\u7c7b\u578b');plt.ylabel('\u53d1\u52a8\u673a\u7c7b\u578b\u7684\u6570\u91cf')\nplt.title('\u53d1\u52a8\u673a\u7c7b\u578b\u9891\u6570\u56fe')\n\nplt.subplot(222)\ndf['num-of-doors'].value_counts(normalize=True).plot(figsize=(10,8), kind='bar', color='blue')\nplt.xlabel('\u95e8\u7684\u6570\u91cf'); plt.ylabel('\u95e8\u7684\u6570\u91cf')\nplt.title('\u95e8\u7684\u6570\u91cf\u9891\u6570\u56fe')\n\nplt.subplot(223)\ndf['fuel-type'].value_counts(normalize=True).plot(figsize=(10,8), kind='bar', color='green')\nplt.xlabel('\u71c3\u6cb9\u7c7b\u578b');plt.ylabel('\u71c3\u6cb9\u7c7b\u578b\u7684\u6570\u91cf')\nplt.title('\u71c3\u6cb9\u7c7b\u578b\u7684\u9891\u6570\u56fe')\n\nplt.subplot(224)\ndf['body-style'].value_counts(normalize=True).plot(figsize=(10,8), kind='bar', color='purple')\nplt.xlabel('\u8f66\u8eab\u7c7b\u578b');plt.ylabel('\u8f66\u8eab\u7c7b\u578b\u7684\u6570\u91cf')\nplt.title('\u8f66\u8eab\u7c7b\u578b\u7684\u9891\u6570\u56fe')\nplt.tight_layout()\nplt.show()","8fb4225d":"corr = df.corr()\nplt.figure(figsize=(20,9))\nsns.heatmap(corr, annot=True, fmt='.2f')\nplt.show()","1bd398e7":"df[['city-mpg']] = 235\/df[['city-mpg']]\ndf.rename(columns={'city-mpg':'city-L\/100km'}, inplace = True)","b285aa2e":"df[['city-L\/100km']].head()","b849ad6b":"#\u5904\u7406\u9519\u8bef\u7684\u6570\u636e\u7c7b\u578b\ndf[['price']].dtypes\ndf[['price']] = df[['price']].astype(\"float64\")\ndf[['price']].dtypes","8361fc31":"df[[\"price\"]].min()","381825f0":"df[[\"price\"]].max()","d05c6d4c":"len(df[\"price\"].value_counts()) ","3c9b5066":"binwidth = int((max(df['price'])-min(df['price']))\/3) #\u4ef7\u683c\u5e73\u5747\u5206\u6210\u4e09\u7ec4\nbins = range(int(min(df['price'])), int(max(df['price'])), binwidth)#\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0crange(min,max,\u6b65\u957f)\ndf['price-binned'] = pd.cut(df['price'], bins, labels=['Low', 'Medium', 'High'])#\u5206\u7bb1cut()\ndf.loc[15:20,['price-binned']]","b0484d02":"df['price-binned'].dtypes","9843eff6":"dummy_variable = pd.get_dummies(df['fuel-type']) #\u7c7b\u522b\u53d8\u91cf\u8f6c\u6362\u6210\u6570\u503c\u53d8\u91cf\ndummy_variable.rename(columns={'fuel-type':'gas', 'fuel-type':'diesel'}, inplace=True) #\u4fee\u6539\u5217\u540d\ndf=pd.concat([df, dummy_variable], axis=1) #\u6dfb\u52a0\u5230\u539f\u6570\u636e\ndf.drop(\"fuel-type\", axis=1, inplace=True) #\u4e22\u5f03\u539f\u6765\u7684fuel-type\u5217\ndf.head()","c439b371":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.boxplot(x='drive-wheels', y='price', data=df)\nplt.show()\n#rwd\u540e\u8f6e\u9a71\u52a8\u7684\u4ef7\u683c\u4f1a\u66f4\u8d35","741a7a38":"plt.rcParams['figure.figsize']=(23,10)\nsns.boxplot(x='make', y='price', data=df)\nplt.show()\n#\u4ece\u5236\u9020\u5382\u5546\u6765\u770b\uff0cbmw,jaguar,mercedes-benz,porsche\u6c7d\u8f66\u4ef7\u683c\u8d85\u8fc725000\n#chevrolet,dodge, honda, mitsubishi,nissan,plymouth,subaru,toyata\u7684\u4ef7\u683c\u6bd4\u8f83\u4f4e\n#\u5927\u591a\u6570\u5382\u5546\u751f\u4ea7\u8f66\u7684\u4ef7\u683c\u90fd\u4f4e\u4e8e25000","4567d1ee":"plt.rcParams['figure.figsize']=(19,7)\nsns.boxplot(x='body-style', y='price', data=df)\nplt.show()\n#\u8f66\u578b\u4e3ahardtop\u7684\u8f66\u4ef7\u683c\u4f1a\u66f4\u8d35\uff0c\u63a5\u4e0b\u6765\u662fconvertible\u548csadan\u7684\u8f66\u578b","dcd648c5":"sns.catplot(data=df, x='body-style', y='price',hue='aspiration', kind='point')\nplt.show()\n#convertible\u655e\u7bf7\u8f66\u53ea\u6709\u6807\u51c6\u7248\u6c7d\u8f66\n#hatchback\u548csedan\u7684\u8f66\u4ef7\u683c\u4e00\u822c\u4f4e\u4e8e20000","72609d92":"x = df['engine-size']\ny = df['price']\nplt.scatter(x,y)\nplt.title(\"Scatter of Engine Size VS Price\")\nplt.xlabel(\"Engine-Size\")\nplt.ylabel(\"Price\")\nplt.show()","d87f7202":"#\u67e5\u770b body-style\uff08\u6a2a\uff09\u548c fuel-type\uff08\u5217\uff09\u4e0b\uff0cengine-type \u548c engine-size\uff08\u56e0\uff09 \u4e4b\u95f4\u7684\u5173\u7cfb\nsns.factorplot(data=df, x='engine-type', y='engine-size', col='body-style', row='fuel-type')\nplt.show()","1379046f":"- \u53ef\u4ee5\u770b\u51fa\uff0c\u5bf9\u4e8e\u71c3\u6cb9\u7c7b\u578b(gas\u548cdiesel)\uff0cohc\u662f\u6700\u591a\u7684\u53d1\u52a8\u673a\u7c7b\u578b\n- diesel\u7684\u6c7d\u8f66\uff0cohc\u548cI\u7684\u53d1\u52a8\u673a\u5927\u5c0f\u4e3a100\u5230200","27ff6cc3":"\nsns.catplot(data=df, x='num-of-cylinders',y='horsepower',kind='violin')\nplt.show()","02aad92c":"# \u53ef\u4ee5\u770b\u51fa\uff0c\u8d85\u8fc7200\u9a6c\u529b\u7684\u8f66\u7684\u76f4\u5f84\u4e00\u822c\u4e3a8\/12\/6","bcb2ca73":"df['drive-wheels'].unique()","1fe41eb3":"df_group=df[['drive-wheels', 'body-style', 'price']]\ndrive_wheel_avg = df_group.groupby(['drive-wheels'], as_index=False).mean()\ndrive_wheel_avg","bd9ccf57":"#\u53ef\u4ee5\u770b\u51fa\uff0c4wd\u548crwd\u7684\u4ef7\u683c\u4f1a\u66f4\u8d35\ngrouped_avg = df_group.groupby(['drive-wheels','body-style'], as_index=False).mean()\ngrouped_avg","9d59bbce":"sns.pairplot(df[['city-mpg', 'horsepower', 'engine-size', 'curb-weight','price','fuel-type']],hue=\"fuel-type\",diag_kind=\"hist\")\nplt.show() \n#\u53ef\u4ee5\u770b\u51fa\uff0c\u968f\u7740\u9a6c\u529bhorsepower\u589e\u5927\uff0c\u5f15\u64ce\u5927\u5c0fengine-size\u4e5f\u4f1a\u589e\u5927\n#\u968f\u7740\u5f15\u64ce\u5927\u5c0f\u7684\u589e\u5927\uff0c\u6c7d\u8f66\u7684\u7a7a\u5907\u8d28\u91cfcurb-weight\u4e5f\u589e\u5927\n#\u5f15\u64ce\u5927\u5c0f\u3001\u7a7a\u5907\u8d28\u91cf\u548c\u4ef7\u683c\u6210\u6b63\u76f8\u5173\uff0ccity-mpg\u548c\u4ef7\u683c\u6210\u8d1f\u76f8\u5173","42023b47":"#\u770b\u4e0d\u51fa\u4ec0\u4e48\u4e1c\u897f\u6765\uff0c\u8f6c\u6362\u6210\u6570\u636e\u900f\u89c6\u8868\u770b\u770b\uff0c\u7279\u522b\u9002\u7528\u4e8e\u4e24\u4e2a\u56e0\u7d20\npivot_table = grouped_avg.pivot(index='drive-wheels', columns='body-style')\npivot_table","5301afa0":"pivot_table=pivot_table.fillna(0)\npivot_table","c7e63967":"sns.heatmap(pivot_table)\nplt.show()","1a29275b":"group = df[['make','price']] \ngroup_anova = group.groupby(['make'], as_index=False) #\u6839\u636e\u4e0d\u540c\u7684\u54c1\u724c\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7ec4\nfrom scipy import stats\n#\u67e5\u770b\u65af\u5df4\u9c81\u548c\u672c\u7530\u5728\u4ef7\u683c\u7684\u5dee\u5f02\nanova_result = stats.f_oneway(group_anova.get_group('honda')['price'], group_anova.get_group('subaru')['price'])\nanova_result","fd4313f1":"#\u7ed3\u679c\u663e\u793aF\u4e3a0.19\uff0cP\u503c\u4e3a0.66\uff0c\u8bf4\u660e\u65af\u5df4\u9c81\u548c\u672c\u7530\u5728\u4ef7\u683c\u4e0a\u6ca1\u6709\u663e\u8457\u5dee\u5f02\n#\u67e5\u770b\u672c\u7530\u548c\u6377\u8c79\u5728\u4ef7\u683c\u4e0a\u7684\u5dee\u5f02\nanova_result = stats.f_oneway(group_anova.get_group('honda')['price'], group_anova.get_group('jaguar')['price'])\nanova_result","51c6a3c7":"#\u7ed3\u679c\u663e\u793aF\u503c\u4e3a401,P\u503c\u4e3a1.05\uff0c\u8bf4\u660e\u672c\u7530\u548c\u6377\u8c79\u5728\u4ef7\u683c\u5dee\u522b\u5f88\u5927","62832492":"sns.regplot(x='engine-size', y='price', data=df)\nplt.ylim(0,)\nplt.show()","face4194":"df.corr()","291f34eb":"#\u67e5\u770b\u4e00\u4e0b\u8f6e\u8ddd\u548c\u4ef7\u683c\u4e4b\u95f4\u7684\u5173\u7cfb\npearson_coef, p_value = stats.pearsonr(df['wheel-base'],df['price'])\nprint(\"\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u4e3a\", pearson_coef, \" P\u503c\u4e3a\", p_value)","d170c6da":"# \u7531\u4e8ep\u503c<0.001\uff0c\u8f6e\u8ddd\u4e0e\u4ef7\u683c\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u5177\u6709\u7edf\u8ba1\u663e\u7740\u6027\uff0c\u5c3d\u7ba1\u7ebf\u6027\u5173\u7cfb\u4e0d\u662f\u975e\u5e38\u5f3a\uff080.585\uff09\n\n#\u67e5\u770b\u4e00\u4e0b\u5bbd\u5ea6\u548c\u4ef7\u683c\u4e4b\u95f4\u7684\u5173\u7cfb\npearson_coef, p_value = stats.pearsonr(df['width'],df['price'])\nprint(\"\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u4e3a\", pearson_coef, \" P\u503c\u4e3a\", p_value)","11950f6d":"corr = df.corr()\nfig, ax = plt.subplots(figsize=(10,10)) #\u8bbe\u7f6e\u56fe\u5927\u5c0f\n#diverging_palette() \u521b\u5efa\u5206\u6563\u989c\u8272\uff0c\u8d77\u59cb\u989c\u8272220,\u7ec8\u6b62\u989c\u827210,as_cmap\u5982\u679c\u4e3a true\uff0c\u8fd4\u56de\u4e00\u4e2amatplotlib colormap\u800c\u4e0d\u662f\u4e00\u4e2a\u989c\u8272\u5217\u8868\ncolormap = sns.diverging_palette(220, 10, as_cmap=True) #\u751f\u6210\u989c\u8272\u5730\u56fe\uff0c\u7ea2\u548c\u84dd\n#\u751f\u6210\u70ed\u56fe\uff0ccmap\u4ece\u6570\u5b57\u5230\u8272\u5f69\u7a7a\u95f4\u7684\u6620\u5c04\uff0cannot:True\uff0c\u5728\u6bcf\u4e2a\u65b9\u683c\u5199\u5165\u6570\u636e,fmt\u5b57\u7b26\u4e32\u683c\u5f0f\u4ee3\u7801\uff0c\u77e9\u9635\u4e0a\u6807\u8bc6\u6570\u5b57\u7684\u6570\u636e\u683c\u5f0f,2\u4f4d\u5c0f\u6570\uff0c\u6d6e\u70b9\u6570\nsns.heatmap(corr, cmap = colormap, annot = True, fmt = \".2f\")\nplt.xticks(range(len(corr.columns)), corr.columns) #\u663e\u793ax\u8f74\u7684\u523b\u6807\u4ee5\u53ca\u5bf9\u5e94\u7684\u6807\u7b7e\nplt.yticks(range(len(corr.columns)), corr.columns)\nplt.show()","3b3c5541":"df_train = df[['curb-weight', 'width','engine-size', 'city-L\/100km', 'highway-mpg','price']]\ndf_train.head()","59804cf5":"#\u6570\u503c\u5dee\u522b\u5f88\u5927\uff0c\u8fdb\u884cStandard Scalar\nsc = StandardScaler()\n\nfor i in df_train.ix[:,:5]:\n    df_train[i] = df_train[i].astype(float)\n    df_train[i] =sc.fit_transform(df[i].values.reshape(-1,1))\n\ndf_train.head(10)","01f22fb7":"from sklearn.model_selection import train_test_split\n\nX = df_train.drop('price', axis=1)\ny = df_train['price']\n\nX_train, X_test,y_train, y_test = train_test_split(X,y, test_size = 0.33,random_state=42)","6a25cf39":"from sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\n\nmodel = LinearRegression()\nmodel.fit(X_train,y_train)\n\npred = model.predict(X_test)\n\nprint(mean_absolute_error(y_test, pred))\nprint(mean_squared_error(y_test,pred))\nprint(r2_score(y_test, pred))\n\nfig, ax = plt.subplots(1, 3, figsize=(24,5))\n\nsns.scatterplot(x=pred, y=y_test, ax=ax[0])\nplt.xlabel(\"Predict Value\")\nplt.ylabel(\"Real Value\")\nplt.plot()\n\nsns.distplot(pred-y_test, ax=ax[1])\nplt.xlabel(\"Differnence\")\nplt.ylabel(\"Count\")\nplt.plot()\n\nsns.scatterplot(x=pred, y=y_test-pred, ax=ax[2])\nplt.xlabel(\"Predict Value\")\nplt.ylabel(\"Difference\")\nplt.plot()","07692e28":"## \u51b3\u7b56\u6811\nmodel = DecisionTreeRegressor()\nmodel.fit(X_train, y_train)\n\npred = model.predict(X_test)\n\nprint(mean_absolute_error(y_test, pred))\nprint(mean_squared_error(y_test, pred))\nprint(r2_score(y_test, pred))\n\nfig, ax = plt.subplots(1, 3, figsize=(24,5))\n\nsns.scatterplot(x=pred, y=y_test, ax=ax[0])\nplt.xlabel(\"Predict Value\")\nplt.ylabel(\"Real Value\")\nplt.plot()\n\nsns.distplot(pred - y_test, ax=ax[1])\nplt.xlabel(\"Differnence\")\nplt.ylabel(\"Count\")\nplt.plot()\n\nsns.scatterplot(x=pred, y=y_test - pred, ax=ax[2])\nplt.xlabel(\"Predict Value\")\nplt.ylabel(\"Difference\")\nplt.plot()","f68945eb":"from sklearn.ensemble import RandomForestRegressor\n\nmodel = RandomForestRegressor()\nmodel.fit(X_train, y_train)\n\npred = model.predict(X_test)\n\nprint(mean_absolute_error(y_test, pred))\nprint(mean_squared_error(y_test, pred))\nprint(r2_score(y_test, pred))\n\nfig, ax = plt.subplots(1, 3, figsize=(24,5))\n\nsns.scatterplot(x=pred, y=y_test, ax=ax[0])\nplt.xlabel(\"Predict Value\")\nplt.ylabel(\"Real Value\")\nplt.plot()\n\nsns.distplot(pred - y_test, ax=ax[1])\nplt.xlabel(\"Differnence\")\nplt.ylabel(\"Count\")\nplt.plot()\n\nsns.scatterplot(x=pred, y=y_test - pred, ax=ax[2])\nplt.xlabel(\"Predict Value\")\nplt.ylabel(\"Difference\")\nplt.plot()","77f82152":"## DecisionTreeRegressor\u51b3\u7b56\u6811\u9884\u6d4b\u4ef7\u683c","23baa0b2":"#### Heatmap \u9002\u7528\u4e8e\u67e5\u770b\u591a\u4e2a\u56e0\u7d20\u548c\u7ed3\u679c\u7684\u5173\u7cfb\n\u70ed\u56fe\u91c7\u7528\u77e9\u5f62\u6570\u636e\u7f51\u683c\uff0c\u5e76\u6839\u636e\u7f51\u683c\u70b9\u5904\u7684\u6570\u636e\u503c\u5206\u914d\u989c\u8272\u5f3a\u5ea6","3d3dba94":"\u53ef\u4ee5\u770b\u51fa\uff1a\n- curb-weight\u5927\u591a\u6570\u8f66\u7684\u6574\u5907\u8d28\u91cf\u57281900-3200\n- \u53d1\u52a8\u673a\u5927\u5c0f\u572860-190\u4e4b\u95f4\n- \u9a6c\u529b\u572840-125\u4e4b\u95f4\n- \u6700\u5927\u529f\u7387\u8f6c\u901f\u57284600-5700\u4e4b\u95f4\n- \u4ef7\u683c\u57285000-18000\u4e4b\u95f4","343f4870":"## EDA\u63a2\u7d22\u6570\u636e\u5206\u6790\n- \u603b\u7ed3\u6570\u636e\u7684\u4e3b\u8981\u7279\u5f81\n- \u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u96c6\uff0c\n- \u63ed\u793a\u4e0d\u540c\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u548c\n- \u4e3a\u6211\u4eec\u8bd5\u56fe\u89e3\u51b3\u7684\u95ee\u9898\u63d0\u53d6\u91cd\u8981\u53d8\u91cf\n\nTarget\uff1a\u8f66\u8f86\u4ef7\u683c\u7684\u6700\u91cd\u8981\u56e0\u7d20\u662f\u4ec0\u4e48\uff1f\n\n### \u53cc\u53d8\u91cf\u5206\u6790\ndescribe()\nvalue_counts()\n\u53ef\u89c6\u5316\u6570\u503c\u6570\u636e\n- \u7bb1\u7ebf\u56feboxplot:\u67f1\u72b6\u56fe\uff0c\u53ef\u4ee5\u770b\u70b9\u4f30\u8ba1\u548c\u7f6e\u4fe1\u533a\u95f4\n- \u5c0f\u63d0\u7434\u56feviolinplot\n- \u6563\u70b9\u56festriplot\n- \u5e26\u5206\u5e03\u7684\u6563\u70b9\u56feswarmplot\n- \u76f4\u65b9\u56febarplot\n- \u8ba1\u6570\u7684\u76f4\u65b9\u56fecountplot:\u53ef\u4ee5\u5bf9\u53d8\u91cf\u8fdb\u884c\u8ba1\u6570\n- \u4e24\u53d8\u91cf\u5173\u7cfb\u56fefactorplot\n\n#### Boxplot \u7bb1\u578b\u56fe\nboxplot\u7684\u4e3b\u8981\u7279\u5f81\u663e\u793a\u6570\u636e\u7684\u201c\u4e2d\u4f4d\u6570\u201d\uff0c\u8868\u793a\u4e2d\u95f4\u6570\u636e\u70b9\u7684\u4f4d\u7f6e\u3002\u4e0a\u56db\u5206\u4f4d\u6570\u663e\u793a\u201c\u7b2c75\u767e\u5206\u4f4d\u6570\u201d\u7684\u4f4d\u7f6e\uff0c\u4e0b\u56db\u5206\u4f4d\u6570\u663e\u793a\u201c\u7b2c25\u767e\u5206\u4f4d\u6570\u201d\u6240\u5728\u7684\u4f4d\u7f6e\u3002 \u4e0a\u56db\u5206\u4f4d\u6570\u548c\u4e0b\u56db\u5206\u4f4d\u6570\u4e4b\u95f4\u7684\u6570\u636e\u4ee3\u8868\u56db\u5206\u4f4d\u6570\u8303\u56f4\uff08IQR\uff09\u3002 \u63a5\u4e0b\u6765\uff0c\u4f60\u6709\u4e0b\u6781\u548c\u4e0a\u6781\u3002 \u8fd9\u4e9b\u8ba1\u7b97\u4e3a\u9ad8\u4e8e\u7b2c75\u767e\u5206\u4f4d\u6570\u7684\u56db\u5206\u4f4d\u6570\u8303\u56f4\u76841.5\u500d\uff0c\u4ee5\u53ca\u4f4e\u4e8e\u7b2c25\u767e\u5206\u4f4d\u6570\u7684IQR\uff08Interquartile Range\uff09\u76841.5\u500d\u3002\n\u7bb1\u7ebf\u56fe\u8fd8\u663e\u793a\u201c\u5f02\u5e38\u503c\u201d\u4f5c\u4e3a\u5728\u4e0a\u4e0b\u6781\u7aef\u4e4b\u5916\u51fa\u73b0\u7684\u5355\u4e2a\u70b9\u3002\u4f7f\u7528\u7bb1\u5f62\u56fe\uff0c\u53ef\u4ee5\u53d1\u73b0\u5f02\u5e38\u503c\uff0c\u8fd8\u53ef\u4ee5\u770b\u5230\u6570\u636e\u7684\u5206\u5e03\u548c\u504f\u659c","11901f0f":"\u53ef\u4ee5\u770b\u51faprice\u8fd9\u4e00\u5217\u4e00\u5171\u6709187\u4e2a\u552f\u4e00\u503c\uff0c\u8303\u56f4\u57285118--45400\u4e4b\u95f4\n\n## Binning \u5206\u7bb1\n\u5206\u7bb1\u53ef\u4ee5\u662f\u6570\u5b57\/\u975e\u6570\u5b57\uff0c\u5b83\u4eec\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\u7684\u5206\u7c7b\u503c\uff0c\u5982\u201c\u72d7\u201d\uff0c\u201c\u732b\u201d\uff0c\u201c\u4ed3\u9f20\u201d\u7b49\u3002\n\u6709\u65f6\uff0cBinning\u53ef\u4ee5\u63d0\u9ad8\u9884\u6d4b\u6a21\u578b\u7684\u51c6\u786e\u6027\uff0c\u5c06\u4e00\u7ec4\u6570\u503c\u5206\u5230\u8f83\u5c0f\u6570\u91cf\u7684\u7bb1\u4e2d\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u5206\u5e03\u3002\n\u6211\u4eec\u53ef\u4ee5\u5c06\u4ef7\u683c\u5206\u4e3a3\u4e2a\u7ec4\uff1a\u4f4e\u4ef7\uff0c\u4e2d\u4ef7\u548c\u9ad8\u4ef7\u3002","35cd83cc":"\u4e00\u517126\u5217\uff0c\u5217\u540d:\nsymboling:\u6c7d\u8f66\u7684\u4fdd\u9669\u98ce\u9669\u7b49\u7ea7\u3002\u6700\u521d\u4e3a\u6c7d\u8f66\u5206\u914d\u4e0e\u5176\u4ef7\u683c\u76f8\u5173\u7684\u98ce\u9669\u56e0\u7d20\u7b26\u53f7\u3002\u503c\u4e3a+3\u8868\u793a\u81ea\u52a8\u6709\u98ce\u9669\uff0c-3\u8868\u793a\u5b83\u53ef\u80fd\u975e\u5e38\u5b89\u5168\u3002\nnormalized-losses:\u201c\u6807\u51c6\u5316\u635f\u5931\u201d\u662f\u6bcf\u4e2a\u4fdd\u9669\u8f66\u8f86\u5e74\u5ea6\u7684\u76f8\u5bf9\u5e73\u5747\u635f\u5931\u652f\u4ed8\u3002\u8be5\u503c\u9488\u5bf9\u7279\u5b9a\u5c3a\u5bf8\u5206\u7c7b\uff08\u53cc\u95e8\uff0c\u5c0f\u578b\uff0c\u65c5\u884c\u8f66\uff0c\u8fd0\u52a8\/\u4e13\u4e1a\u7b49\uff09\u4e2d\u7684\u6240\u6709\u6c7d\u8f66\u8fdb\u884c\u6807\u51c6\u5316\uff0c\u5e76\u8868\u793a\u6bcf\u8f86\u8f66\u6bcf\u5e74\u7684\u5e73\u5747\u635f\u5931\u3002\n- make:\u6c7d\u8f66\u54c1\u724c\uff0c alfa-romero\uff1a\u963f\u5c14\u6cd5-\u7f57\u5bc6\u6b27 audi:\u5965\u8fea\n- fuel-type\uff1a\u71c3\u6cb9\u7c7b\u578b\n- aspiration:\u6da1\u8f6e\n- num-of-doors:\u6c7d\u8f66\u95e8\u7684\u6570\u91cf\n- body-style:\u8eab\u4f53\u7c7b\u578b\uff0cconvertible\uff1a\u655e\u7bf7\uff0chatchback\uff1a\u4e24\u53a2\u6380\u80cc\uff0cSedan\u6bd4Hatchback\u591a\u4e86\u7b2c\u4e09\u8282\u7684\u8f66\u5c3e\u53a2\t\n- drive-wheels:\u9a71\u52a8\u8f66\u8f6e\uff0crwd\uff1a\u540e\u8f6e\u9a71\u52a8,fwd\uff1a\u524d\u8f6e\u9a71\u52a8,4wd\uff1a\u56db\u8f6e\u9a71\u52a8\n- engine-location:\u53d1\u52a8\u673a\u4f4d\u7f6e\uff0c\u524d\u8fd8\u662f\u540e\n- wheel-base:\u6c7d\u8f66\u7684\u6574\u5907\u8d28\u91cf\uff0c\n- length\uff1a           \n- width              \n- height            \n- curb-weight:\u6c7d\u8f66\u5728\u6b63\u5e38\u6761\u4ef6\u4e0b\u51c6\u5907\u884c\u9a76\u65f6\uff0c\u5c1a\u672a\u8f7d\u4eba\uff08\u5305\u62ec\u9a7e\u9a76\u5458\uff09\u3001\u8f7d\u7269\u65f6\u7684\u7a7a\u8f66\u8d28\u91cf\uff0c\u4e00\u822c\u6574\u5907\u8d28\u91cf\u8d8a\u5927\u7684\u6c7d\u8f66\u8d8a\u8017\u6cb9         \n- engine-type:\u53d1\u52a8\u673a\u7c7b\u578b           \n- num-of-cylinders\uff1a      \n- engine-size:\u53d1\u52a8\u673a\u5927\u5c0f          \n- fuel-system:\u6c7d\u8f66\u71c3\u6cb9\u7cfb\u7edf\uff0cmpfi:\u591a\u70b9\u71c3\u6cb9\u55b7\u5c04\u7cfb\u7edf\uff0cspfi:\u5355\u70b9\u71c3\u6cb9\u55b7\u5c04\u7cfb\u7edf          \n- bore:\u6c7d\u8f66\u7f38\u5f84\uff0c\u6c7d\u7f38\u672c\u4f53\u4e0a\u7528\u6765\u8ba9\u6d3b\u585e\u505a\u8fd0\u52a8\u7684\u5706\u7b52\u7a7a\u95f4\u7684\u76f4\u5f84                 \n- stroke:\u5236\u52a8             \n- compression-ratio:\u538b\u7f29\u6bd4\uff0c\u6c7d\u7f38\u538b\u7f29\u524d\u7684\u4f53\u79ef\u4e0e\u538b\u7f29\u4e4b\u540e\u7684\u6cb9\u6c14\u6df7\u5408\u6c14\u4f53\u4f53\u79ef\u7684\u6bd4\u503c\uff0c\u5728\u6c7d\u7f38\u4f53\u79ef\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u538b\u7f29\u6bd4\u9ad8\u5219\u610f\u5473\u7740\u66f4\u5927\u7684\u52a8\u529b\u8f93\u51fa    horsepower:\u9a6c\u529bHP\uff0c\u53d1\u52a8\u673a\u529f\u7387\u5355\u4f4d\uff0c1hp=746W\uff08\u82f1\u5236\u7684\u9a6c\u529b\uff0c\u7528hp\u8868\u793a\uff09\uff0c1ps=735W\uff08\u516c\u5236\u7684\u9a6c\u529b\uff0c\u7528ps\u8868\u793a\uff09        \n- peak-rpm:\u6700\u5927\u529f\u7387\u8f6c\u901f         \n- city-mpg:\u5e02\u533a\u6bcf\u52a0\u4ed1\u6c7d\u6cb9\u884c\u9a76\u8def\u7a0b              \n- highway-mpg:\u9ad8\u901f\u516c\u8def\u6bcf\u52a0\u4ed1\u6c7d\u6cb9\u884c\u9a76\u8def\u7a0b            \n- price\uff1a\u4ef7\u683c                ","cf1dc9ff":"\u53ef\u4ee5\u770b\u51fa\uff1a\n- 70%\u7684\u6c7d\u8f66\u9009\u62e9ohc\u7c7b\u578b\u7684\u53d1\u52a8\u673a\n- \u8d85\u8fc7\u4e00\u534a\u7684\u8f66\u6709\u56db\u95e8\n- \u767e\u5206\u4e4b\u516b\u5341\u51e0\u7684\u8f66\u7528gas\n- \u8f66\u8eab\u591a\u6570\u4e3aSedan\uff0c\u5176\u6b21\u4e3ahatchback","6467fc66":"## \u6570\u636e\u6e05\u6d17\n### \u66ff\u6362\u7f3a\u5931\u6570\u636e\n- \u5904\u7406\u7f3a\u5931\u503c \u4e00\u822c \u201c?\u201d, \u201cNaN\u201d, 0 or \" \"\n- \u9996\u5148\u662f\u68c0\u67e5\u6536\u96c6\u6570\u636e\u7684\u4eba\u6216\u7ec4\u662f\u5426\u53ef\u4ee5\u8fd4\u56de\u5e76\u627e\u51fa\u5b9e\u9645\u503c\u5e94\u8be5\u662f\u4ec0\u4e48\u3002 \u53e6\u4e00\u79cd\u53ef\u80fd\u6027\u662f\u5220\u9664\u627e\u5230\u7f3a\u5931\u503c\u7684\u6570\u636e\u3002\u5f53\u5220\u9664\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u5220\u9664\u6574\u4e2a\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u53ea\u5220\u9664\u7f3a\u5c11\u503c\u7684\u5355\u4e2a\u6570\u636e\u6761\u76ee\u3002\u5982\u679c\u6ca1\u6709\u5927\u91cf\u7f3a\u5931\u6570\u636e\u7684\u89c2\u5bdf\u7ed3\u679c\uff0c\u901a\u5e38\u5220\u9664\u7279\u5b9a\u6761\u76ee\u662f\u6700\u597d\u7684\u3002\n\n- I\uff09\u5728\u6570\u503c\u6570\u636e\u4e2d\uff0c\u7f3a\u5931\u503c\u53ef\u4ee5\u7528\u5217\u6240\u5177\u6709\u7684\u503c\u7684\u201c\u5e73\u5747\u503c\u201d\u66ff\u6362\u3002\n- II\uff09\u5728\u5206\u7c7b\u6570\u636e\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u201c\u6a21\u5f0f\u201d\uff08\u7ecf\u5e38\u51fa\u73b0\u7684\uff09\u503c\u6765\u5904\u7406\u7f3a\u5931\u503c\u3002","45ab96ad":"#### \u591a\u53d8\u91cf\u56fePairplot","2e0eca1a":"#### Pearson Correlation\u76ae\u5c14\u900a\u76f8\u5173\nPearson Correlation\u6d4b\u91cf\u4e24\u4e2a\u53d8\u91cfX\u548cY\u4e4b\u95f4\u7684\u7ebf\u6027\u76f8\u5173\u6027\u3002\u5f97\u5230\u7684\u7cfb\u6570\u662f\u4ecb\u4e8e-1\u548c1\u4e4b\u95f4\u7684\u503c\uff0c\u5176\u4e2d\uff1a\n1\uff1a\u603b\u6b63\u7ebf\u6027\u76f8\u5173\uff0c\n0\uff1a\u6ca1\u6709\u7ebf\u6027\u76f8\u5173\uff0c\u8fd9\u4e24\u4e2a\u53d8\u91cf\u6700\u6709\u53ef\u80fd\u4e92\u4e0d\u5f71\u54cd\n-1\uff1a\u603b\u8d1f\u7ebf\u6027\u76f8\u5173\u3002\nP\u503c\u662f\u8fd9\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u5177\u6709\u7edf\u8ba1\u663e\u7740\u6027\u7684\u6982\u7387\u503c\u3002\u901a\u5e38\uff0c\u6211\u4eec\u9009\u62e90.05\u7684\u663e\u7740\u6027\u6c34\u5e73\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec95\uff05\u786e\u4fe1\u53d8\u91cf\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u662f\u663e\u7740\u7684\u3002\n\u6309\u60ef\u4f8b\uff0c\u5f53\n- p\u503c<0.001,\u76f8\u5173\u6027\u5f88\u5f3a\n- p\u503c<0.05,\u76f8\u5173\u6027\u4e2d\u7b49\n- p\u503c<0.1,\u76f8\u5173\u6027\u5f31\n- p\u503c> 0.1\uff0c\u6ca1\u6709\u8bc1\u636e\u8868\u660e\u76f8\u5173\u6027\u662f\u663e\u7740\u7684\u3002\nPearson Correlation\u662f\u51fd\u6570\u201ccorr\u201d\u7684\u9ed8\u8ba4\u65b9\u6cd5","94609735":"## \u65b9\u5dee\u5206\u6790\uff08ANOVA,Analysis of Variance\uff09\/F\u68c0\u9a8c\n\n\u5206\u6790x\u7684\u53d8\u5316\u5bf9y\u7684\u5f71\u54cd\u7684\u663e\u8457\u6027\n\u603b\u53d8\u5f02\u5206\u4e3a\u7ec4\u95f4\u53d8\u5f02\u548c\u7ec4\u5185\u53d8\u5f02\n\u662f\u7528\u4e8e\u6d4b\u8bd5\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u7ec4\u7684\u5e73\u5747\u503c\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u663e\u7740\u5dee\u5f02\u7684\u7edf\u8ba1\u65b9\u6cd5\u3002 \nANOVA\u8fd4\u56de\u4e24\u4e2a\u53c2\u6570\uff1a\nF\u68c0\u9a8c\u5206\u6570\uff1aANOVA\uff0cH0\uff1a\u6240\u6709\u7ec4\u7684\u5747\u503c\u76f8\u540c\uff0c\u8ba1\u7b97\u5b9e\u9645\u5747\u503c\u504f\u79bb\u5047\u8bbe\u7684\u7a0b\u5ea6\uff0c\u5e76\u5c06\u5176\u62a5\u544a\u4e3aF\u68c0\u9a8c\u5206\u6570\u3002\u5206\u6570\u8d8a\u5927\u610f\u5473\u7740\u5747\u503c\u4e4b\u95f4\u5b58\u5728\u66f4\u5927\u7684\u5dee\u5f02\u3002\nP\u503c\uff1aP\u503c\u8868\u793a\u6211\u4eec\u8ba1\u7b97\u5f97\u5206\u503c\u7684\u7edf\u8ba1\u663e\u7740\u6027\u3002\u82e5P< 0.05\uff0c\u62d2\u7eddH0\u3002P> 0.05,\u5219\u4e0d\u62d2\u7eddH0\u3002\n\u5982\u679cANOVA\u68c0\u9a8c\u7ed9\u6211\u4eec\u4e00\u4e2a\u5927\u7684F\u68c0\u9a8c\u503c\u548c\u4e00\u4e2a\u5c0f\u7684p\u503c\uff0c\u90a3\u4e48\u5206\u7c7b\u53d8\u91cf\u548c\u5176\u4ed6\u53d8\u91cf\u4e4b\u95f4\u5b58\u5728\u5f88\u5f3a\u7684\u76f8\u5173\u6027\u3002\n\n\u67e5\u770b\u4e00\u4e0b\u54c1\u724c\u548c\u4ef7\u683c\u4e4b\u95f4\u7684\u5173\u7cfb","59cb747c":"\u53ef\u4ee5\u770b\u51fa\uff0c\u53d1\u52a8\u673a\u8d8a\u5927\uff0c\u4ef7\u683c\u8d8a\u8d35\n#### factorplot\u4e24\u53d8\u91cf\u5173\u7cfb\u56fe","d51e1a97":"## \u5c06\u6570\u636e\u5206\u6210\u6d4b\u8bd5\u96c6\u548c\u8bad\u7ec3\u96c6\ntrain_test_split\n- train_data\uff1a\u6240\u8981\u5212\u5206\u7684\u6837\u672c\u7279\u5f81\u96c6 \n- train_target\uff1a\u6240\u8981\u5212\u5206\u7684\u6837\u672c\u7ed3\u679c \n- test_size\uff1a\u6837\u672c\u5360\u6bd4\uff0c\u5982\u679c\u662f\u6574\u6570\u7684\u8bdd\u5c31\u662f\u6837\u672c\u7684\u6570\u91cf \n- random_state\uff1a\u662f\u968f\u673a\u6570\u7684\u79cd\u5b50","5bf90728":"### \u5355\u53d8\u91cf\u5206\u6790","76bf0101":"## Random Forest Regressor\u968f\u673a\u68ee\u6797\u9884\u6d4b\u4ef7\u683c","2a483b54":"#### Groupby\n\u201cgroupby\u201d\u65b9\u6cd5\u6309\u4e0d\u540c\u7c7b\u522b\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7ec4\u3002 \u57fa\u4e8e\u4e00\u4e2a\u6216\u591a\u4e2a\u53d8\u91cf\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7ec4\uff0c\u5e76\u5bf9\u5404\u4e2a\u7ec4\u8fdb\u884c\u5206\u6790\u3002","f54493fe":"## Linear Regression\n\nsklearn\u56de\u5f52\u5668\u6027\u80fd\u8bc4\u4f30\u65b9\u6cd5\n- explained_variance_score()\n- mean_absolute_error()\n- mean_squared_error()\n- r2_score() ","600e2d11":"# Target:\u4ec0\u4e48\u7279\u5f81\u53ef\u4ee5\u5f71\u54cd\u8f66\u7684\u4ef7\u683c\n","1b94aa6b":"## \u6570\u636e\u683c\u5f0f\u5316\ncity-mpg\uff1a\u6bcf\u52a0\u4ed1\u4f7f\u7528\u7684\u71c3\u6cb9\uff0c\u8f6c\u6362\u5355\u4f4dL\/100KM\uff0c1L\/100KM=235.21\/x mpg","c158b09c":"# \u9884\u6d4b\u6c7d\u8f66\u4ef7\u683c\n- \u91cd\u70b9\u5173\u5fc3\u548c\u4ef7\u683c\u76f8\u5173\u7684\u56e0\u7d20\n- Standard Scalar\u6570\u636e\u5f52\u4e00\u5316\n- \u5c06\u6570\u636e\u5206\u6210\u6d4b\u8bd5\u96c6\u548c\u8bad\u7ec3\u96c6\n- Linear Regerssion\n- \u663e\u793a\u7ed3\u679c\n\n## \u91cd\u70b9\u5173\u6ce8\u548c\u4ef7\u683c\u76f8\u5173\u7684\u56e0\u7d20\ncurb-weight, engine-size, city-L\/100km\uff0chighway-mpg\uff0cwidth","21acba31":"#### catplot\u5206\u7c7b\u6563\u70b9\u56fe\n\u901a\u8fc7kind\u751f\u6210\u4e0d\u540c\u7c7b\u522b\u7684\u56fe, kind\u7684\u53d6\u503c\u6709: strip, swarm, box, violin,boxen,point, bar, count. strip\u4e3a\u9ed8\u8ba4\u503c","ae883990":"## \u5c06\u5206\u7c7b\u53d8\u91cf\u8f6c\u6362\u4e3a\u5b9a\u91cf\u53d8\u91cf\n\n\u5982fuel-type:gas\/diesel\u53ea\u6709\u4e24\u79cd\u7c7b\u578b\uff0cstring\n\u7528dummy\u865a\u62df\u53d8\u91cf\u8fdb\u884c\u6807\u8bb0\u7c7b\u522b\u7684\u6570\u5b57\u53d8\u91cf  pd.get_dummies()","4b915e39":"#### Pivot Table\u6570\u636e\u900f\u89c6\u8868\uff0c\u7279\u522b\u9002\u7528\u4e8e\u89c2\u5bdf\u4e24\u4e2a\u56e0\u7d20\u548c\u7ed3\u679c\u7684\u5173\u7cfb","f2e23898":"\u53ef\u4ee5\u770b\u51fa\uff0ccurb-weight, engine-size, city-L\/100km\u4e0e\u4ef7\u683c\u6b63\u76f8\u5173\uff0c0.83,0.87,0.79\nhighway-mpg\u4e0e\u4ef7\u683c\u8d1f\u76f8\u5173\uff0c-0.7","dc2fdd74":"### Correlation\u5173\u8054\u6027\n\n\u67e5\u770b\u53d1\u52a8\u673a\u5927\u5c0f\u548c\u4ef7\u683c\u4e4b\u95f4\u7684\u5173\u7cfb","bc1f0b14":"#### Scatterplot \u6563\u70b9\u56fe\n\u67e5\u770b\u53d1\u52a8\u673a\u5927\u5c0f\u548c\u4ef7\u683c\u7684\u5173\u7cfb","cd569784":"\u7531\u4e8ep\u503c<0.001\uff0c\u5bbd\u5ea6\u548c\u4ef7\u683c\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u5177\u6709\u7edf\u8ba1\u663e\u7740\u6027\uff0c\u4e14\u7ebf\u6027\u5173\u7cfb\u975e\u5e38\u5f3a\uff08~0.751\uff09\n### \u70ed\u56fe\u53ef\u4ee5\u89e3\u91ca\u53d8\u91cf\u4e0e\u989c\u8272\u5f3a\u5ea6\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u3002","aeb04106":"\u6563\u70b9\u56fe\u548c\u6dfb\u52a0\u7684\u56de\u5f52\u7ebfregression line\u67e5\u770b\u53d1\u52a8\u673a\u5927\u5c0f\u548c\u4ef7\u683c\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\n\u901a\u8fc7\u6570\u636e\u70b9\u7684\u76f4\u7ebf\u975e\u5e38\u9661\u5ced\uff0c\u8fd9\u8868\u660e\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u5b58\u5728\u6b63\u7ebf\u6027\u5173\u7cfb\u3002\n\u968f\u7740\u53d1\u52a8\u673a\u5c3a\u5bf8\u503c\u7684\u589e\u52a0\uff0c\u4ef7\u683c\u503c\u4e5f\u4e0a\u5347\uff0c\u7ebf\u7684\u659c\u7387\u4e3a\u6b63\uff0c\u56e0\u6b64\u201c\u53d1\u52a8\u673a\u5c3a\u5bf8\u201d\u548c\u201c\u4ef7\u683c\u201d\u4e4b\u95f4\u5b58\u5728\u6b63\u76f8\u5173\u5173\u7cfb\u3002","2a4ead0a":"### \u7c7b\u578b\u8f6c\u6362\uff0c\u5c06object\u8f6c\u6362\u6210int\u6216\u8005float\n- normalised-losses, bore, stroke\uff0chorsepower, peak-rpm,price\u7528\u5747\u503c\u4ee3\u66ff\n- Number of doors \u7f3a\u5931\u503c\u7528four\u6765\u4ee3\u66ff","0776a1d6":"\u201cunique\u201d\u662f\u5217\u4e2d\u4e0d\u540c\u5bf9\u8c61\u7684\u6570\u91cf\uff0c\u201ctop\u201d\u662f\u6700\u5e38\u51fa\u73b0\u7684\u5bf9\u8c61\uff0c\u201cfreq\u201d\u662f\u9876\u7ea7\u5bf9\u8c61\u5728\u5217\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\u8868\u4e2d\u7684\u67d0\u4e9b\u503c\u4e3a\u201cNaN\u201d\uff0c\u8868\u793a\u201c\u975e\u6570\u5b57\u201d\u3002 \u8fd9\u662f\u56e0\u4e3a\u65e0\u6cd5\u9488\u5bf9\u8be5\u7279\u5b9a\u5217\u6570\u636e\u7c7b\u578b\u8ba1\u7b97\u8be5\u7279\u5b9a\u7edf\u8ba1\u5ea6\u91cf\u3002"}}