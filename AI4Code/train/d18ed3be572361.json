{"cell_type":{"9ada0d69":"code","935a1b07":"code","9ad17fd5":"code","a7edc5cd":"code","898c7d2d":"code","61dbb0a0":"code","a4dfc924":"code","6f1fa0a4":"code","e50c872a":"code","b89ae97d":"code","b4205c58":"code","9a1001ea":"code","391c1cce":"code","9e7b83d3":"code","c9ebdbc8":"code","e6a029c4":"code","6dc4e52f":"code","e61b68cd":"code","4599c4c5":"code","ae4fa95f":"code","fea61b39":"code","fe04237b":"code","6e07a4ce":"code","7e9323ae":"code","7351af5d":"code","85145c6d":"code","189eba18":"code","37d26f6a":"code","b120e2e4":"code","dbc8b355":"code","9db780b1":"code","aa5d4a8a":"code","0b5cc26d":"code","2e524058":"code","123c0867":"code","0d8b61b4":"code","131faa81":"code","3bc30311":"code","f0b0aae5":"code","6f24329c":"code","7926d3b4":"code","39c4757e":"code","81c36b19":"code","2342736e":"code","dbb83efe":"code","667dd9df":"code","a05459f7":"code","87dc73af":"code","345898b5":"code","7125fbe9":"code","5685e8c8":"code","fb54e92a":"code","5c88bb0c":"code","d9f0dcc3":"code","3d72ae8f":"code","5c4a9d8d":"code","3c118a91":"code","3b419a3c":"code","63047fee":"markdown","2c7e6969":"markdown","48cdd383":"markdown","93cb0134":"markdown","466e2967":"markdown","613bbb22":"markdown","b9effa27":"markdown","5b8ad3eb":"markdown","67cd2326":"markdown","f081d592":"markdown","2f416016":"markdown","fb8797d5":"markdown","e573af31":"markdown","214ff7af":"markdown","353b7775":"markdown","47987310":"markdown","0c87f893":"markdown"},"source":{"9ada0d69":"import numpy as np\n\nimport pandas as pd\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import KFold, train_test_split\n\nfrom xgboost import XGBRegressor\nfrom xgboost import plot_importance\n\nfrom sklearn.metrics import mean_absolute_error, r2_score, mean_squared_error\n\nplt.rcParams['figure.figsize'] = 20,20","935a1b07":"!pip install openpyxl","9ad17fd5":"train_df = pd.read_excel('..\/input\/flight-fare-prediction-mh\/Data_Train.xlsx')\ntrain_df.head()","a7edc5cd":"test_df = pd.read_excel('..\/input\/flight-fare-prediction-mh\/Test_set.xlsx')\ntest_df.head()","898c7d2d":"df = pd.concat([train_df, test_df], axis=0)\ndf.head()","61dbb0a0":"df.info()","a4dfc924":"sns.histplot(df['Price'])","6f1fa0a4":"df['Price_Log'] = np.log10(df['Price'])","e50c872a":"sns.histplot(df['Price_Log'])","b89ae97d":"df['Date_of_Journey'].unique()","b4205c58":"df['Date_of_Journey_Month'] = df['Date_of_Journey'].astype('datetime64').dt.month","9a1001ea":"sns.histplot(x=df['Price_Log'], hue=df['Date_of_Journey_Month'], multiple='layer', palette='tab10')","391c1cce":"df['Date_of_Journey_Day'] = df['Date_of_Journey'].astype('datetime64').dt.dayofweek","9e7b83d3":"sns.histplot(x=df['Price_Log'], hue=df['Date_of_Journey_Day'], multiple='layer', palette='tab10')","c9ebdbc8":"df['Dep_Hour'] = df['Dep_Time'].astype('datetime64').dt.hour\ndf['Arr_Hour'] = df['Arrival_Time'].astype('datetime64').dt.hour","e6a029c4":"sns.histplot(df['Dep_Hour'])","6dc4e52f":"sns.histplot(x=df['Price_Log'], hue=df['Dep_Hour'], multiple='layer', palette='tab10')","e61b68cd":"sns.histplot(df['Arr_Hour'])","4599c4c5":"sns.histplot(x=df['Price_Log'], hue=df['Arr_Hour'], multiple='layer', palette='tab10')","ae4fa95f":"duration = df['Duration'].str.replace('m','').str.replace('h', '').str.split(' ')\nduration = [int(dur[0]) for dur in duration]","fea61b39":"df['Duration_Hours'] = duration","fe04237b":"sns.histplot(df['Duration_Hours'])","6e07a4ce":"sns.histplot(x=df['Price_Log'], hue=df['Duration_Hours'], multiple='layer', palette='tab10')","7e9323ae":"df[df['Total_Stops'].isna()]","7351af5d":"df.dropna(subset=['Total_Stops'], inplace=True)","85145c6d":"df[df['Total_Stops'].isna()]","189eba18":"df['Total_Stops'].unique()","37d26f6a":"df['Total_Stops'] = df['Total_Stops'].str.replace('non-stop', '0 stops').str.strip(' stop').astype('int')","b120e2e4":"sns.histplot(x=df['Price_Log'], hue=df['Total_Stops'], multiple='layer', palette='tab10')","dbc8b355":"df['Source'].unique()","9db780b1":"sns.histplot(x=df['Price_Log'], hue=df['Source'], multiple='layer', palette='tab10')","aa5d4a8a":"df['Destination'].unique()","0b5cc26d":"sns.histplot(x=df['Price_Log'], hue=df['Destination'], multiple='layer', palette='tab10')","2e524058":"dummy_source = pd.get_dummies(df['Source'], prefix='Source')","123c0867":"dummy_dest = pd.get_dummies(df['Destination'], prefix='Destination')","0d8b61b4":"df = pd.concat([df, dummy_dest, dummy_source], axis=1)","131faa81":"sns.histplot(x=df['Price_Log'], hue=df['Airline'], multiple='layer', palette='tab10')","3bc30311":"dummy_airline = pd.get_dummies(df['Airline'], prefix='Airline')","f0b0aae5":"df = pd.concat([df, dummy_airline], axis=1)","6f24329c":"routes = df['Route'].str.replace(' \u2192 ', ',').str.split(',')","7926d3b4":"stops = [route[1:-1] if len(route) > 2 else None for route in routes]","39c4757e":"# TODO","81c36b19":"df['Additional_Info'].unique()","2342736e":"df['Additional_Info'].value_counts()","dbb83efe":"sns.histplot(x=df['Price_Log'], hue=df['Additional_Info'], multiple='layer', palette='tab10')","667dd9df":"df['Meal_NotIncluded'] = (df['Additional_Info'] == 'In-flight meal not included').astype('int')","a05459f7":"sns.histplot(x=df['Price_Log'], hue=df['Meal_NotIncluded'], multiple='layer', palette='tab10')","87dc73af":"cols_to_drop = ['Additional_Info', 'Route', 'Source',\n                'Destination', 'Airline', 'Date_of_Journey',\n                'Dep_Time', 'Arrival_Time', 'Duration', 'Price'\n               ]","345898b5":"sns.heatmap(abs(df.drop(cols_to_drop, axis=1).corr()))","7125fbe9":"test = df.loc[df['Price_Log'].isna(), :]\ntrain = df.loc[~df['Price_Log'].isna(), :]","5685e8c8":"X = train.drop(cols_to_drop, axis=1).drop('Price_Log', axis=1)\ny = train['Price_Log']","fb54e92a":"xgb = XGBRegressor(random_state=42,\n                   max_depth = 6,\n                   learning_rate = 0.01,\n                   n_estimators = 1000,\n                   gamma = 0,\n                   \n                  )","5c88bb0c":"kf = KFold(n_splits=5)\n\nfor train_index, test_index in kf.split(X):\n    X_train, X_test = X.iloc[train_index, :], X.iloc[test_index, :]\n    y_train, y_test = y.iloc[train_index], y.iloc[test_index]\n    \n    xgb.fit(X_train, y_train)\n    \n    y_train_pred = xgb.predict(X_train)\n    y_test_pred = xgb.predict(X_test)\n    \n    \n    print('Train')    \n    print('MAE:', mean_absolute_error(y_train, y_train_pred))\n    print('R2:', r2_score(y_train, y_train_pred))\n    print('MSE:', mean_squared_error(y_train, y_train_pred))\n    print('RMSE:', mean_squared_error(y_train, y_train_pred, squared=False))\n    \n    print('Test')    \n    print('MAE:', mean_absolute_error(y_test, y_test_pred))\n    print('R2:', r2_score(y_test, y_test_pred))\n    print('MSE:', mean_squared_error(y_test, y_test_pred))\n    print('RMSE:', mean_squared_error(y_test, y_test_pred, squared=False))\n    print()\n    ","d9f0dcc3":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42, shuffle=True)\n","3d72ae8f":"xgb.fit(X_train, y_train)\n\ny_train_pred = xgb.predict(X_train)\ny_test_pred = xgb.predict(X_test)\n\nprint('Train')    \nprint('MAE:', mean_absolute_error(y_train, y_train_pred))\nprint('R2:', r2_score(y_train, y_train_pred))\nprint('MSE:', mean_squared_error(y_train, y_train_pred))\nprint('RMSE:', mean_squared_error(y_train, y_train_pred, squared=False))\n\nprint('Test')    \nprint('MAE:', mean_absolute_error(y_test, y_test_pred))\nprint('R2:', r2_score(y_test, y_test_pred))\nprint('MSE:', mean_squared_error(y_test, y_test_pred))\nprint('RMSE:', mean_squared_error(y_test, y_test_pred, squared=False))","5c4a9d8d":"sns.regplot(x=y_test_pred, y=y_test)","3c118a91":"sns.regplot(x=10**y_test_pred, y=10**y_test)","3b419a3c":"print('Test')    \nprint('MAE:', mean_absolute_error(10**y_test, 10**y_test_pred))\nprint('R2:', r2_score(10**y_test, 10**y_test_pred))\nprint('MSE:', mean_squared_error(10**y_test, 10**y_test_pred))\nprint('RMSE:', mean_squared_error(10**y_test, 10**y_test_pred, squared=False))","63047fee":"now it looks better","2c7e6969":"# Airline","48cdd383":"## Dep_Time and Arrival_Time","93cb0134":"## Duration","466e2967":"missing values at Route, Total_Stops","613bbb22":"# Route","b9effa27":"# Total_Stops","5b8ad3eb":"let's transform day to day of the week ","67cd2326":"# Modeling","f081d592":"# Source \tDestination","2f416016":"# Time features","fb8797d5":"# Target value","e573af31":"## Date_of_Journey","214ff7af":"# Additional info","353b7775":"# import ","47987310":"there is obviously high skew. We need to think about log transformation.","0c87f893":"year is constant. so, it's unsignificant. let's get some information from day and month"}}