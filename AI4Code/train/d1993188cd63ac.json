{"cell_type":{"4e1569a7":"code","fe7469f3":"code","546f418c":"code","c08da402":"code","4cb64aa5":"code","b27c11c1":"code","e7527358":"code","a0d1fe0a":"code","97ddc98d":"code","2637d6b8":"code","0fc43565":"code","902baf15":"code","5d1f6941":"code","e5de7239":"code","2da2b096":"code","18382fcb":"code","c966f22e":"markdown","c6a15eda":"markdown","be16ff7a":"markdown","0b151820":"markdown","41f033fd":"markdown","b4e13ad0":"markdown","458b5e8d":"markdown","3fb3f37c":"markdown","cb5290dd":"markdown","46d0b23c":"markdown","50678776":"markdown","ee3bb6fc":"markdown","d769d2a8":"markdown","4aaf521e":"markdown","cb5766ca":"markdown","74583780":"markdown","c7b94399":"markdown","97bbbfa5":"markdown","2e89aaff":"markdown","2f4521b6":"markdown","11db7bba":"markdown","c640f89a":"markdown"},"source":{"4e1569a7":"from IPython.display import Image\nImage(\"..\/input\/headercovid\/header.png\")","fe7469f3":"import numpy as np \nimport pandas as pd \nimport os\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport pydicom as dicom\nimport cv2\nimport ast\nimport warnings\nfrom collections import Counter\nimport seaborn as sns\nwarnings.filterwarnings('ignore')","546f418c":"path = '\/kaggle\/input\/siim-covid19-detection\/'\nos.listdir(path)","c08da402":"idf = pd.read_csv(path + 'train_image_level.csv')\nsdf = pd.read_csv(path + 'train_study_level.csv')","4cb64aa5":"idf.head(3)","b27c11c1":"sdf.head(3)","e7527358":"print(\"Nb of rows in study level file :\", sdf.shape[0])\nprint(\"Nb of rows in image level file :\", idf.shape[0])\n\nprint(\"Nb of StudyInstanceUID in image level file :\", \n        len(idf['StudyInstanceUID'].unique()))\n\nprint(\"Nb of null StudyInstanceUID in image level file :\",\n        len(idf[idf['StudyInstanceUID'].isna()]))\n\nprint(\"Nb of StudyInstanceUID in study level file :\", \n        len(sdf['id'].unique()))","a0d1fe0a":"mdf = pd.merge(idf, sdf, \n               left_on=idf['StudyInstanceUID'], \n               right_on=sdf['id'].map(lambda x: x[:-6]))\nmdf.head(3)","97ddc98d":"print(\"Study id without image correspondence : \", mdf[mdf['id_y'].isna()].shape[0])","2637d6b8":"mdf = mdf.drop(['key_0', 'id_y'], axis = 1)\nmdf = mdf.rename(columns={'id_x': 'imageID',\n                          'Negative for Pneumonia': 'negative',\n                          'Typical Appearance': 'typical',\n                          'Indeterminate Appearance': 'indeterminate',\n                          'Atypical Appearance': 'atypical'})\nmdf.head(3)","0fc43565":"cnt = Counter(mdf.groupby('StudyInstanceUID')['imageID'].nunique())\nutotal = 0\nbtotal = 0\nfor key in cnt:\n    print('Nb of studies associated to {} images : {}'.format(key, cnt[key]))\n    utotal += cnt[key]\n    btotal += key * cnt[key]\nprint(\"\\nTotal of uniques studies : \", utotal)\nprint(\"Total of studies : \", btotal)\n","902baf15":"print(\"LABEL : \", mdf[mdf['imageID']=='000a312787f2_image'].label[0])\nprint(\"\\nBOXES : \",mdf[mdf['imageID']=='000a312787f2_image'].boxes[0])","5d1f6941":"print('Nb of images with more than one diagnostic : ', \n        len(mdf[mdf['negative']+mdf['typical']+mdf['indeterminate']+mdf['atypical']>1]))","e5de7239":"mdf['nbSpot'] = mdf['label'].apply(lambda lab: lab.count('opacity'))\nmdf['diagnosis'] = mdf[['negative','typical','indeterminate','atypical']].idxmax(axis=1)","2da2b096":"diagnosisColors = ['b','r','g','y']\n\nplt.figure(figsize = (14, 6))\n\nplt.suptitle('Diagnosis repartition')\nplt.subplot(1, 2, 1)\n\nsns.set();\nax=sns.countplot(x = mdf['diagnosis'].sort_values(), palette = diagnosisColors)\n\nfor p in ax.patches:\n        ax.annotate('{}'.format(p.get_height()), \n                    (p.get_x()+0.2, p.get_height()+50))\n\nplt.subplot(1, 2, 2)\n\nmdf['diagnosis'].value_counts(normalize=True).sort_index().plot(kind='pie', \n                                                 colors = diagnosisColors, \n                                                 explode = [0.025, 0.025, 0.025, 0.2],\n                                                 autopct = lambda x : str(round(x, 2)) + '%')\n\nplt.show()\n\n","18382fcb":"def plotDiagnosis(ax, text, color):\n    ax=sns.countplot(x = mdf[mdf[text]==1].nbSpot, color=color)\n\n    for p in ax.patches:\n        ax.annotate('{}'.format(p.get_height()), \n                    (p.get_x()+0.2, p.get_height()+3))\n    plt.ylabel('')\n    plt.xlabel('nb ' + text + ' spots per image')\n    \nfig = plt.figure(figsize=(15,4))\n\nplt.subplot(1, 3, 1)\nplotDiagnosis(ax, 'atypical', diagnosisColors[0])\n\nplt.subplot(1, 3, 2)\nplotDiagnosis(ax, 'indeterminate', diagnosisColors[1])\n\nplt.subplot(1, 3, 3)\nplotDiagnosis(ax, 'typical', diagnosisColors[3])\n\nplt.show()","c966f22e":"### *1. DATA PROCESSING*","c6a15eda":"And finally we calculate the number of studyID assigned to one image, then two, etc ...","be16ff7a":"To understand what we are talking about let's take an image and then compare the values of label and boxes fields.","0b151820":"Most studies are associated with a single image, but there are a few cases where the same study can be associated with 2 or more images. We will see this in more detail in the exploratory analysis.","41f033fd":"### *2. EXPLORATORY DATA ANALYSIS*","b4e13ad0":"We can already see that the \"typical\" diagnosis represents almost half of the dataset. Conversely, the \"atypical\" diagnosis represents only 7.63%.","458b5e8d":"Let's display some stats :","3fb3f37c":"**Graphs serie 1 : Diagnosis repartition**","cb5290dd":"# **SIIM-COVID19 : DATA EXPLORATION**","46d0b23c":"It's time to import data in two differents dataframes :","50678776":"There are less studyId than imageId, but the number of studies Id is the same in both files. Is that mean there are several imagesId for one study ? \nLet's check this out !","ee3bb6fc":"We can see several things :\n- more than one box can be associated to an image, \n- boxes's coordinates are listed into label,except that in place of (x y w h) format, coordinates indicated in label are formated as (x1 y1 x2 y2).\n- finally, diagnostic is not present in label, so we have to consider that opacity term means for us to search for the corresponding class.","d769d2a8":"Let's import some libraries we will use in this notebook ...","4aaf521e":"It seems that we have all we need to begin to plot some graphics.\n<br>Let's add some informations : the diagnosis as categorical variable and the number of spot (understand boxes).","cb5766ca":"First of all, we define the path variable and check files and folders :","74583780":"\"atypical\" and \"indeterminate\" diagnosis follow more or less the same pattern: a majority of images have 1 single identified spot, then come the images with 2 spots.\nFor the \"typical\" diagnosis, on the other hand, the vast majority of images have 2 spots.","c7b94399":"Everything seems to be ok, we do some cleaning in the dataframe resulting from the join.","97bbbfa5":"<a href='https:\/\/fr.freepik.com\/photos\/fond'>Fond photo cr\u00e9\u00e9 par kjpargeter - fr.freepik.com<\/a>","2e89aaff":"Then, in order to check the result of the join that we just realised, we verify the presence of null values in right part of merged dataframe :","2f4521b6":"It's always better to check first few lines of each dataframes ...\nWe can already guess that there is a join between the 2 dataframes on \"StudyInstanceUID\" from image and \"id\" from study. We also note the suffix \"_study\" on the latter.","11db7bba":"We first merge the two dataframes :","c640f89a":"Last check to perform is to verify if it can be more than one diagnostic per image :"}}