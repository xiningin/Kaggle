{"cell_type":{"8b460b69":"code","810348c8":"code","ef66faa4":"code","7c9d3dd0":"code","447046b6":"code","ddb971aa":"code","2449a30a":"code","4774e95a":"code","7b87c345":"code","2f5bb2f2":"code","adf5fb89":"code","7b9162aa":"code","db3007eb":"code","138a73c0":"code","a334a9e5":"code","884fa81d":"code","eea9782d":"code","a1c34e8b":"code","f232f684":"code","8153399d":"code","5080fb34":"code","393753d1":"code","736ce737":"code","acbe084b":"code","b9a5a068":"code","58b752e2":"code","4de85d9b":"code","d7d003a2":"code","30af3d16":"code","75edca7f":"code","805e9d87":"code","2b47c6a6":"code","658233d7":"code","a11e1c6a":"code","cc56397a":"code","10142eab":"code","5e7951e1":"code","85a11947":"code","65ee3801":"code","6ac81dfe":"code","60e9348d":"code","4c5474a4":"code","18ff0db0":"code","ca10d9a3":"code","063b6b85":"code","987d8f02":"code","3a4ee219":"code","f85cf0f3":"code","f2f7d714":"code","d05afb9c":"code","d170035a":"code","16a130cf":"code","2cb5b333":"code","4756fe59":"code","5aa6ee5c":"code","33282b2e":"code","feb89f46":"code","412ee021":"code","3483ff5d":"code","366d2d0a":"code","6b726eca":"code","b1834e0d":"code","356997ca":"code","32296f91":"code","cdd4cd2f":"code","27cf851f":"code","babbf61e":"code","fc558bc1":"code","026dc93b":"code","19dfb521":"code","1fefb54a":"code","4989755d":"code","c37cb7d4":"code","952d1569":"code","5a75295e":"code","e813be6a":"code","e449d4f9":"code","7c6a699b":"code","2b735db9":"code","f44a85f6":"code","e9d61572":"code","bcc4ada0":"code","b9b87406":"code","fa47c687":"code","8970ec21":"code","b82022d3":"code","c32d4943":"code","4e064494":"code","dfe42a1b":"code","083f4867":"code","2ac8a2ff":"code","4c3c8d0c":"code","997f6686":"code","237c7dec":"code","221ebf29":"code","8e5a3f74":"code","d9aa2b57":"code","fd3bd8af":"code","01e58640":"code","593cf853":"code","9cc02c00":"code","3255c559":"code","2351411d":"code","da030026":"code","40a16ef7":"code","0f2c687b":"code","85e4c693":"code","3686e61b":"code","84a056b1":"markdown","4e1be149":"markdown","54f2a6b0":"markdown","5fa54fc2":"markdown","06e6098b":"markdown","abef3fb8":"markdown","91619fee":"markdown","b54ee22e":"markdown","72e28d0a":"markdown","7cbb7925":"markdown","184bbf16":"markdown","f92732c3":"markdown","a9d9ae5b":"markdown","92bd330c":"markdown","67df067d":"markdown","4dbd8815":"markdown","39523e86":"markdown"},"source":{"8b460b69":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\nimport seaborn as sns","810348c8":"df = pd.read_csv(\"..\/input\/demand-forecasting-kernels-only\/train.csv\")","ef66faa4":"#df = pd.read_csv(r'C:\/Users\/alexd\/Alex Folder 1\/Capstone - Store Forecast\/train.csv')  \ndf.head()","7c9d3dd0":"df.shape","447046b6":"df.shape","ddb971aa":"df.nunique()","2449a30a":"df['sales'].sum()","4774e95a":"df.max()","7b87c345":"df['date'] =  pd.to_datetime(df['date'])","2f5bb2f2":"df = df.set_index('date')","adf5fb89":"df.head()","7b9162aa":"df_sales_only = df.drop(['store','item'], axis = 1)","db3007eb":"df['day'] = df.index.day\ndf['month'] = df.index.month\ndf['year'] = df.index.year\ndf['dayofweek'] = df.index.dayofweek\n","138a73c0":"print(df)","a334a9e5":"sns.boxplot(x=\"dayofweek\", y=\"sales\", data=df)","884fa81d":"df.groupby(['store','item']).size()","eea9782d":"df[(df.store==1) & (df.item==1)]","a1c34e8b":"df[(df.store==1) & (df.item==1)]['sales'].plot()","f232f684":"df[(df.store==1) & (df.item==1)]['sales']","8153399d":"df_1_1 = df[(df.store==1) & (df.item==1)]['sales']\nsplit = \"2017-01-01\"","5080fb34":"df_i1_s1 = df[(df.store==1) & (df.item==1)]['sales']\ndf_i1_s2 = df[(df.store==2) & (df.item==1)]['sales']\ndf_i2_s1 = df[(df.store==1) & (df.item==2)]['sales']\ndf_i2_s2 = df[(df.store==2) & (df.item==2)]['sales']","393753d1":"df['sales'].resample('W').sum().plot()","736ce737":"df['sales'].resample('M').sum().plot()","acbe084b":"df_i1_s1.to_frame()\ndf_i1_s2.to_frame()\ndf_i2_s1.to_frame()\ndf_i2_s1.to_frame()","b9a5a068":"split1 = \"2013-12-31\"","58b752e2":"df_i1_s1_a = df_i1_s1[:split1] \ndf_i1_s2_a = df_i1_s2[:split1] \ndf_i2_s1_a = df_i2_s1[:split1] \ndf_i2_s2_a = df_i2_s2[:split1] \n","4de85d9b":"df_i1_s1_a.resample('W').sum().plot()","d7d003a2":"df_i1_s2_a.head(10)","30af3d16":"df_i1_s2_a.resample('D').sum().plot()","75edca7f":"df_i2_s1_a.head()","805e9d87":"df_i2_s2_a.resample('W').sum().plot()","2b47c6a6":"df_i2_s1_a.resample('W').sum().plot()","658233d7":"df_1_1.to_frame()","a11e1c6a":"df_1_1 = df_1_1.to_frame()","cc56397a":"df_xg_1_1= df_1_1.copy()  # it was here","10142eab":"df_1_1.head()","5e7951e1":"df_1_1['sales-1'] = df_1_1['sales'].shift(1)","85a11947":"df_1_1['sales+2'] = df_1_1['sales'].shift(-2)","65ee3801":"df_1_1.head()","6ac81dfe":"df_1_1['sales-2'] = df_1_1['sales'].shift(2)","60e9348d":"df_1_1.head()","4c5474a4":"df_1_1 = df_1_1.dropna()","18ff0db0":"df_1_1.head()","ca10d9a3":"df_1_1.tail()","063b6b85":"df_1_1['sales+1'] = df_1_1['sales'].shift(-1)","987d8f02":"df_1_1.head()","3a4ee219":"df_1_1.tail()","f85cf0f3":"agg_month_item = pd.pivot_table(df, index='month', columns='item', values='sales', aggfunc=np.sum).values","f2f7d714":"print(agg_month_item)","d05afb9c":"df[\"2017-01-03\" : \"2017-01-20\"].sales.sum()","d170035a":"df.dtypes","16a130cf":"df[\"2017-01\"]","2cb5b333":"df.sales.resample('M').sum().plot()","4756fe59":"df[\"2017-01-01\" : \"2017-12-31\"].sales.resample('W').sum().plot()","5aa6ee5c":"df[\"2016-01-01\" : \"2016-12-31\"].sales.resample('W').sum().plot()","33282b2e":"df[\"2017-01-03\" : \"2017-12-31\"].sales.resample('W').sum().plot(kind=\"hist\")","feb89f46":"df.sales.resample('B').sum().plot()","412ee021":"df[\"2017-01-01\" : \"2017-01-31\"].sales.resample('d').sum().plot()  ","3483ff5d":"from statsmodels.graphics.tsaplots import plot_acf","366d2d0a":"Jan2017 = df[\"2017-01-01\" : \"2017-01-31\"].sales.resample('d').sum()  ","6b726eca":"plot_acf(Jan2017)","b1834e0d":"plt.plot(Jan2017)","356997ca":"T2017 = df[\"2017-01-01\" : \"2017-12-31\"].sales.resample('m').sum() ","32296f91":"#plot_acf(T2017)","cdd4cd2f":"df_1_1_Jan_17 = df_1_1[\"2017-01-01\" : \"2017-01-31\"]","27cf851f":"df_1_1_Jan_17 = df_1_1_Jan_17['sales']","babbf61e":"Byyear = df[\"2013-01-01\" : \"2017-12-31\"].sales.resample('y').sum() ","fc558bc1":"plot_acf(Byyear)","026dc93b":"sns.pointplot(x=df['year'], y=df['sales'])","19dfb521":"df['Year'] = df.index.year\ndf['Month'] = df.index.month\n#df['Weekday Name'] = df.weekday_name\ndf.sample(5, random_state=0)\n\nax = df.loc['2017', 'sales'].plot()","1fefb54a":"sns.boxplot(data=df, x='Year', y='sales');","4989755d":"sns.boxplot(data=df, x='Month', y='sales');","c37cb7d4":"sns.boxplot(data=df, x='store', y='sales');","952d1569":"sns.boxplot(data=df, x='item', y='sales');","5a75295e":"daybyweek = df.groupby(['dayofweek']).agg({'sales':'sum'})\nprint(daybyweek)","e813be6a":"day = df.groupby(['day']).agg({'sales':'sum'})\nprint(day)","e449d4f9":"day = df.groupby(['item','store' ]).agg({'sales':'sum'})\nprint(day)","7c6a699b":"SalesByDay = df.groupby(['date']).agg({'sales':'sum'})","2b735db9":"print (SalesByDay)","f44a85f6":"SalesByDay.plot()","e9d61572":"salesstore = df.groupby(['date','store']).agg({'sales' : 'sum'})","bcc4ada0":"sales_by_year = pd.pivot_table(df, index='year', values='sales', aggfunc=np.sum)\nprint(sales_by_year)","b9b87406":"df[df.item == 1]['sales'].plot()","fa47c687":"df[df.item == 2]['sales'].plot()","8970ec21":"df[df.item == 20]['sales'].plot()","b82022d3":"storetotal = df.groupby(['store']).agg({'sales':'sum'})","c32d4943":"print(sum(storetotal['sales']))","4e064494":"print(storetotal)","dfe42a1b":"itemtotal = df.groupby(['item']).agg({'sales':'sum'})","083f4867":"print(sum(itemtotal['sales']))","2ac8a2ff":"store1 = df[df.store == 1]['sales']\nstore1.plot()","4c3c8d0c":"store5 = df[df.store == 5]['sales']\nstore5.plot(color='green')","997f6686":"df['sales'].plot(linewidth=0.5);","237c7dec":"grand_avg = df.sales.mean()","221ebf29":"store_item_table = pd.pivot_table(df, index='store', columns='item', values='sales', aggfunc=np.mean)\ndisplay(store_item_table)","8e5a3f74":"month_table = pd.pivot_table(df, index='month', values='sales', aggfunc=np.mean)\nmonth_table.sales \/= grand_avg","d9aa2b57":"print(month_table)","fd3bd8af":"dow_table = pd.pivot_table(df, index='dayofweek', values='sales', aggfunc=np.mean)\ndow_table.sales \/= grand_avg\nprint(dow_table)","01e58640":"year_table = pd.pivot_table(df, index='year', values='sales', aggfunc=np.mean)\nyear_table \/= grand_avg","593cf853":"print(year_table)","9cc02c00":"year_table.info()","3255c559":"#year_table.drop([2017])","2351411d":"years = np.arange(2013, 2019)\nannual_sales_avg = year_table.values.squeeze()","da030026":"print(annual_sales_avg)","40a16ef7":"print(year_table)","0f2c687b":"p1 = np.poly1d(np.polyfit(years[:-1], annual_sales_avg, 1))\np2 = np.poly1d(np.polyfit(years[:-1], annual_sales_avg, 2))\np3 = np.poly1d(np.polyfit(years[:-1], annual_sales_avg, 3))","85e4c693":"plt.figure(figsize=(8,6))\nplt.plot(years[:-1], annual_sales_avg, 'ko')\nplt.plot(years, p1(years), 'C0-', color ='red')\nplt.plot(years, p2(years), 'C1-',color ='blue')\nplt.plot(years, p3(years), 'C2-',color ='green')\nplt.xlim(2012.5, 2018.5)\nplt.title(\"Relative Sales by Year\")\nplt.ylabel(\"Relative Sales\")\nplt.xlabel(\"Year\")\nplt.show()\n","3686e61b":"print(f\"2017 Relative Sales by Degree-1 (Linear) Fit = {p1(2017):.4f}\")\nprint(f\"2017 Relative Sales by Degree-2 (Quadratic) Fit = {p2(2017):.4f}\")\nprint(f\"2017 Relative Sales by Degree-3 (3 degrees) Fit = {p3(2017):.4f}\")","84a056b1":"# Time Series \/ Forecasts: From the basic solution to the complex \u2013 daily and monthly- by store and by product\n\n","4e1be149":"# More Working With Data","54f2a6b0":"# ACF FROM HERE","5fa54fc2":"# Working with data","06e6098b":"# EDA","abef3fb8":"# Manipulation","91619fee":"# Looking at the Data","b54ee22e":"# By ITEM","72e28d0a":"# Graph 2","7cbb7925":"# Working with Totals and Averages\n","184bbf16":"# By Alex Dance \n* https:\/\/www.linkedin.com\/in\/alex-dance\/\n* This notebook is one of several notebooks for a project to improve store forecasts\n1.\tEDA \u2013 Exploratory Data Analysis \u2013 includes working with annual forecasts\n2.\tMain Modelling\n3.\tXG Boost modelling by Month\n4.\tWeighted average\n5.\tARIMA \u2013 Month and Other Modelling\n6.\tDeep Learning\n\n\n* Data is from the Kaggle Dataset https:\/\/www.kaggle.com\/c\/demand-forecasting-kernels-only\/overview\n","f92732c3":"# Capstone EDA","a9d9ae5b":"# Working with year","92bd330c":"# Working With individual products and individual stores","67df067d":"# Other Data Files - That were not used","4dbd8815":"# Exploring Shifting","39523e86":"# Plotting 1"}}