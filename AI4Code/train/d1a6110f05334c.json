{"cell_type":{"052974c8":"code","49660c71":"code","e8b370f5":"code","f0f82f10":"code","0de3d62d":"code","1561c7cc":"code","93299e2e":"code","349b7758":"code","e80af5bd":"code","21984995":"code","35e2cccc":"code","a8dbf943":"code","5e8deaa7":"code","8eccbe13":"code","5f5c384e":"code","afa61feb":"code","9033c57b":"code","b40a4335":"code","68fe7629":"code","bad8c80c":"code","6eb2ea60":"code","0b1219e9":"code","66825675":"code","e5e3114e":"code","de706699":"code","a3387ad9":"code","b4b22060":"code","a92b10ae":"code","90a1d768":"code","b73f3757":"markdown","16a8cf4b":"markdown","293d4bce":"markdown","269e5c0b":"markdown","c7a9e304":"markdown"},"source":{"052974c8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","49660c71":"df = pd.read_csv(r'\/kaggle\/input\/retail-analysis-with-walmart-sales-data\/WALMART_SALES_DATA.csv')","e8b370f5":"df","f0f82f10":"import matplotlib.pyplot as plt\nimport seaborn as sns","0de3d62d":"sns.heatmap(df.isnull(), yticklabels = False, cbar= False)","1561c7cc":"df.columns","93299e2e":"df.describe()","349b7758":"sns.heatmap(df.corr(),annot=True)","e80af5bd":"sns.scatterplot(x=\"Weekly_Sales\", y=\"CPI\",\n\n                palette=\"ch:r=-.2,d=.3_r\",\n                hue='Holiday_Flag',\n                sizes=(1, 8), linewidth=0,\n                data=df)","21984995":"df['Date']","35e2cccc":"def ss(d):\n    k = []\n    k = d.split('-')\n    return int(k[0])\n\ndf[\"Day\"] = df['Date'].apply(ss)\ndf['Year'] = pd.DatetimeIndex(df['Date']).year\ndf['Month'] = pd.DatetimeIndex(df['Date']).month","a8dbf943":"df.drop(['year','month'],inplace=True, axis = 1)","5e8deaa7":"df","8eccbe13":"plt.figure(figsize=(10, 10))\nsns.heatmap(df.corr(),annot=True)","5f5c384e":"df.drop('Day',axis=1,inplace=True)","afa61feb":"plt.figure(figsize=(20, 20))\ndf[['Temperature','Weekly_Sales']].hist()\n","9033c57b":"sns.relplot(x=df['Store'],y=df['Weekly_Sales'],kind='line')","b40a4335":"df1 = pd.DataFrame()","68fe7629":"df1['Store'] = df['Store'].unique()","bad8c80c":"df[df['Store'] == 1]['Weekly_Sales'].sum()","6eb2ea60":"def tot_sales(d):\n    k = df[df['Store'] == d]['Weekly_Sales'].sum()\n    ","0b1219e9":"df1['Total_Sale'] = df1['Store'].apply(lambda x : df[df['Store'] == x]['Weekly_Sales'].sum())","66825675":"df1[df1['Total_Sale'] == df1['Total_Sale'].max()]","e5e3114e":"plt.figure(figsize=(12,6))\nsns.barplot(x=df1['Store'],y=df1['Total_Sale'])\nplt.tight_layout()","de706699":"sns.relplot(x=df1['Store'],y=df1['Total_Sale'],kind='line')","a3387ad9":"df1['STD'] = df1['Store'].apply(lambda x : df[df['Store'] == x]['Weekly_Sales'].std())","b4b22060":"plt.figure(figsize=(12,6))\nsns.barplot(x=df1['Store'],y=df1['STD'])\nplt.tight_layout()","a92b10ae":"def goodQ312(d):\n    f = df[(df['Store'] == d) & (df['Year'] == 2012) & (df['Month']>6) & (df['Month']<10)]['Weekly_Sales'].sum()\n    p = df[(df['Store'] == d) & (df['Year'] == 2012) & (df['Month']>3) & (df['Month']<7)]['Weekly_Sales'].sum()\n    return ((f-p)\/p)\ndf1['GrowthR'] = df1['Store'].apply(goodQ312)","90a1d768":"plt.figure(figsize=(12,6))\nsns.barplot(x=df1['Store'],y=df1['GrowthR'])\nplt.tight_layout()","b73f3757":"Growth rate w.r.t past quarter","16a8cf4b":"# **EDA**","293d4bce":"Store 20 max sales","269e5c0b":"Store #14 has max std","c7a9e304":"Store #16 best growth rate"}}