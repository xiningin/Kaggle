{"cell_type":{"d43012e5":"code","717cf4ba":"code","117371f6":"code","ffddb92b":"code","1724611d":"code","b7afa35e":"code","dc5d6968":"code","b0a851d8":"code","b5acac07":"code","5cd76c6d":"code","ceec0d28":"code","a727e4f0":"code","87030622":"code","c9059431":"code","a5563a7a":"code","f167b3d8":"code","f477151a":"code","31e48150":"code","f1cc8da2":"code","478fb821":"code","4275acc3":"code","06832990":"code","e25b714a":"code","ea33495d":"code","fbbb25ad":"code","3554261f":"code","e7855af8":"code","76c9bf08":"code","d418dd81":"code","c4ef31eb":"code","f97d7a5c":"code","c2af023d":"markdown","7f8b5e59":"markdown","913d43f0":"markdown","9f3568ca":"markdown","156632e7":"markdown","f8b0c423":"markdown","bba697c6":"markdown","91c43bca":"markdown","a187ecc9":"markdown","90965d1c":"markdown","db96133b":"markdown","feb4fe93":"markdown","421a6ef9":"markdown","410b56e8":"markdown","93b1d837":"markdown","bb8d4516":"markdown","b1ff5c11":"markdown","6b98a2fc":"markdown","d94375c7":"markdown","bc89a384":"markdown","a15f722e":"markdown","772610dc":"markdown"},"source":{"d43012e5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra|\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom tqdm.notebook import tqdm\ntqdm.pandas()\n\nimport plotly.express as px\nimport plotly.graph_objects as go\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","717cf4ba":"# 2020 US Presidential Election Vote By County\npres_2020 = pd.read_csv('\/kaggle\/input\/us-election-2020\/president_county_candidate.csv')\n\n# 2016 US Presidential Election Vote By County\npres_2016 = pd.read_csv('\/kaggle\/input\/2016uspresidentialvotebycounty\/pres16results.csv')\n\n# State\nstate_info = pd.read_csv('\/kaggle\/input\/us-state-county-name-codes\/states.csv')\nstate_info = state_info.rename(columns={'State': 'state', 'Abbreviation': 'abv'})\n\n# Electoral college\nelectoral_college = pd.read_csv('\/kaggle\/input\/us-electoral-college-votes-per-state-17882020\/Electoral_College.csv')","117371f6":"michigan_pop = pd.read_csv('..\/input\/us-population\/cc-michigan-2019.csv')\narizona_pop = pd.read_csv('..\/input\/us-population\/cc_arizona_2019.csv')\npenn_pop = pd.read_csv('..\/input\/us-population\/cc_pennsylvania_2019.csv')\nwis_pop = pd.read_csv('..\/input\/us-population\/cc_wisconsin_2019.csv')","ffddb92b":"print(\"2020\")\nprint(pres_2020.shape)\ndisplay(pres_2020.head())\nprint(\"2016\")\nprint(pres_2016.shape)\ndisplay(pres_2016.head())","1724611d":"print(\"2020\")\nprint(pres_2020.info())\nprint(\"============================================\")\nprint(\"2016\")\nprint(pres_2016.info())","b7afa35e":"# Drop columns (consistency)\npres_2016.drop(['fips', 'pct_report', 'total_votes', 'pct', 'lead'], axis=1, inplace=True)\npres_2020.drop(['party', 'won'], axis=1, inplace=True)\n\n# Rename columns (consistent with 2020)\npres_2016 = pres_2016.rename(columns={'cand': 'candidate', 'st': 'state', 'votes': 'total_votes'})\n\n# Drop Missing state, county\npres_2016.dropna(inplace=True)\n\nstate_map = state_info.reset_index(drop=True).set_index('abv').to_dict()['state']\npres_2016['state'] = pres_2016['state'].map(state_map)","dc5d6968":"print(\"2020\")\nprint(pres_2020.shape)\ndisplay(pres_2020.head())\nprint(\"2016\")\nprint(pres_2016.shape)\ndisplay(pres_2016.head())\n","b0a851d8":"# create new df for only DEM and REP\ndem_rep_pres_2020 = pres_2020[(pres_2020.candidate == 'Donald Trump') | (pres_2020.candidate == 'Joe Biden')]\ndem_rep_pres_2016 = pres_2016[(pres_2016.candidate == 'Donald Trump') | (pres_2016.candidate == 'Hillary Clinton')]","b5acac07":"# Counties \ncounties_2020 = dem_rep_pres_2020.county.unique()\ncounties_2016 = dem_rep_pres_2016.county.unique()\n\nintersect_counties = list(set(counties_2020) & set(counties_2016))\nprint(\"Intersect County: \", len(intersect_counties))\n\n# PRES 2020: drop results that not in the intersect counties\nto_drop_idx = []\nfor idx in tqdm(dem_rep_pres_2020.index):\n    county = dem_rep_pres_2020.loc[idx, ['county']].values\n    if county not in intersect_counties:\n        to_drop_idx.append(idx)\n        \ndem_rep_pres_2020.drop(to_drop_idx, axis=0, inplace=True)\n\n# PRES 2016: drop results that not in the intersect counties\nto_drop_idx = []\nfor idx in tqdm(dem_rep_pres_2016.index):\n    county = dem_rep_pres_2016.loc[idx, ['county']].values\n    if county not in intersect_counties:\n        to_drop_idx.append(idx)\n        \ndem_rep_pres_2016.drop(to_drop_idx, axis=0, inplace=True)\n\nprint(\"2020's counties , 2016's counties: \", (dem_rep_pres_2020.county.nunique(), dem_rep_pres_2016.county.nunique()))","5cd76c6d":"# States\nstates_2020 = dem_rep_pres_2020.state.unique()\nstates_2016 = dem_rep_pres_2016.state.unique()\n\nintersect_states = list(set(states_2020) & set(states_2016))\nprint(\"Intersect State: \", len(intersect_states))\n\n# PRES 2020: drop results that not in the intersect states\nto_drop_idx = []\nfor idx in tqdm(dem_rep_pres_2020.index):\n    state = dem_rep_pres_2020.loc[idx, ['state']].values\n    if state not in intersect_states:\n        to_drop_idx.append(idx)\n        \ndem_rep_pres_2020.drop(to_drop_idx, axis=0, inplace=True)\n\n# PRES 2016: drop results that not in the intersect states\nto_drop_idx = []\nfor idx in tqdm(dem_rep_pres_2016.index):\n    state = dem_rep_pres_2016.loc[idx, ['state']].values\n    if state not in intersect_states:\n        to_drop_idx.append(idx)\n        \ndem_rep_pres_2016.drop(to_drop_idx, axis=0, inplace=True)\n        \nprint(\"2020's states , 2016's states: \", (dem_rep_pres_2020.state.nunique(), dem_rep_pres_2016.state.nunique()))","ceec0d28":"print(\"Original\")\nprint(\"2020 : {}, 2016: {}\".format(pres_2020.shape, pres_2016.shape))\nprint(\"Filtered states and counties\")\nprint(\"2020 : {}, 2016: {}\".format(dem_rep_pres_2020.shape, dem_rep_pres_2016.shape))","a727e4f0":"print(\"44 states: \")\nprint(dem_rep_pres_2020.state.unique())\nprint()\nprint(\"except states: \")\nexcept_states = list(set(pres_2020.state.unique()) - set(dem_rep_pres_2020.state.unique())) + list(set(pres_2016.state.unique()) - set(dem_rep_pres_2020.state.unique()))\nprint(except_states)","87030622":"winner_2020_county = pd.DataFrame()\nwinner_2016_county = pd.DataFrame()\n\ndef get_winner_county(x):\n    diff = abs(x.total_votes.diff().sum())\n    summ = x.total_votes.sum()\n    win_percent = diff \/ summ * 100\n    result = x.loc[x['total_votes'].idxmax()][['candidate', 'total_votes']]\n    result['win_percent'] = win_percent\n    \n    return result\n\nwinner_2020_county = dem_rep_pres_2020.groupby(['state', 'county']).progress_apply(get_winner_county).reset_index()\nwinner_2016_county = dem_rep_pres_2016.groupby(['state', 'county']).progress_apply(get_winner_county).reset_index()\n","c9059431":"# Counties count\nprint(\"== #counties winner count: ===\")\nprint(\"2020\")\nprint(winner_2020_county.candidate.value_counts())\nprint()\nprint(\"2016\")\nprint(winner_2016_county.candidate.value_counts())","a5563a7a":"# Counties count\nprint(\"== #counties total votes winner count: ===\")\nprint(\"2020\")\nprint(winner_2020_county.groupby('candidate').total_votes.sum().sort_values(ascending=False))\nprint()\nprint(\"2016\")\nprint(winner_2016_county.groupby('candidate').total_votes.sum().sort_values(ascending=False))","f167b3d8":"winner_2020_state = dem_rep_pres_2020.groupby(['state', 'candidate']).total_votes.sum().sort_values(ascending=False).groupby(level=0).head(1).reset_index()[['state','candidate']]\n\nwinner_2016_state = dem_rep_pres_2016.groupby(['state', 'candidate']).total_votes.sum().sort_values(ascending=False).groupby(level=0).head(1).reset_index()[['state','candidate']]\n","f477151a":"# Counties count\nprint(\"== #states winner count: ===\")\nprint(\"2020\")\nprint(winner_2020_state.candidate.value_counts())\nprint()\nprint(\"2016\")\nprint(winner_2016_state.candidate.value_counts())","31e48150":"# Get 2020 and 2016 info\nec_2020 = electoral_college.query('Year == 2020').drop('Year', axis=1)\nec_2016 = electoral_college.query('Year == 2016').drop('Year', axis=1)\n\n# Unify state name\nec_2020.loc[ec_2020[ec_2020.State == 'D.C.'].index, 'State'] = 'District of Columbia'\nec_2016.loc[ec_2016[ec_2016.State == 'D.C.'].index, 'State'] = 'District of Columbia'\n\n# Create map\nec_2020_map = ec_2020.reset_index(drop=True).set_index('State').to_dict()['Votes']\nec_2016_map = ec_2016.reset_index(drop=True).set_index('State').to_dict()['Votes']","f1cc8da2":"winner_2020_state['votes'] = winner_2020_state.state.map(ec_2020_map)\nwinner_2016_state['votes'] = winner_2016_state.state.map(ec_2016_map)","478fb821":"# Counties count\nprint(\"== #electrical votes winner: ===\")\nprint(\"2020\")\nprint(winner_2020_state.groupby('candidate').votes.sum().sort_values(ascending=False))\nprint()\nprint(\"2016\")\nprint(winner_2016_state.groupby('candidate').votes.sum().sort_values(ascending=False))\n","4275acc3":"ec_2020[ec_2020.State.isin(except_states)]","06832990":"print(\"From REP to DEM\")\nchanged_state_list = list(set(winner_2016_state[winner_2016_state.candidate == 'Donald Trump'].state.unique()).difference(set(winner_2020_state[winner_2020_state.candidate == 'Donald Trump'].state.unique())))\nprint(\"EC votes : \", ec_2020.set_index('State').loc[changed_state_list].Votes.sum())\nec_2020.set_index('State').loc[changed_state_list]","e25b714a":"data = ec_2020.sort_values(by='Votes', ascending=False)\nfig = go.Figure(data=[\n    go.Bar(name='Total Male 2016', x=data['State'], y=data['Votes'])\n])\n\nfig.show()","ea33495d":"print(\"Compare number of winning counties in these states\")\nprint(\"2020\")\nprint(winner_2020_county[winner_2020_county.state.isin(changed_state_list)].groupby('candidate').county.count().sort_values(ascending=False))\nprint()\nprint(\"2016\")\nprint(winner_2016_county[winner_2016_county.state.isin(changed_state_list)].groupby('candidate').county.count().sort_values(ascending=False))","fbbb25ad":"print(\"Compare votes counties in these states\")\nprint(\"2020\")\nprint(winner_2020_county[winner_2020_county.state.isin(changed_state_list)].groupby('candidate').total_votes.sum().sort_values(ascending=False))\nprint()\nprint(\"2016\")\nprint(winner_2016_county[winner_2016_county.state.isin(changed_state_list)].groupby('candidate').total_votes.sum().sort_values(ascending=False))","3554261f":"REP_county_2020 = winner_2020_county[(winner_2020_county.state.isin(changed_state_list)) & (winner_2020_county.candidate == 'Donald Trump')]\nDEM_county_2020 = winner_2020_county[(winner_2020_county.state.isin(changed_state_list)) & (winner_2020_county.candidate == 'Joe Biden')]\n\nREP_county_2016 = winner_2016_county[(winner_2016_county.state.isin(changed_state_list)) & (winner_2016_county.candidate == 'Donald Trump')]\nDEM_county_2016 = winner_2016_county[(winner_2016_county.state.isin(changed_state_list)) & (winner_2016_county.candidate == 'Hillary Clinton')]","e7855af8":"changed_county_list = list(set(REP_county_2016.county.values) - set(REP_county_2020.county.values))\n\nprint(\"2016\")\ndisplay(REP_county_2016[REP_county_2016.county.isin(changed_county_list)])\nprint(\"2020\")\ndisplay(DEM_county_2020[DEM_county_2020.county.isin(changed_county_list)])","76c9bf08":"state_pop = {\n    'Arizona': arizona_pop,\n    'Michigan': michigan_pop,\n    'Pennsylvania': penn_pop,\n    'Wisconsin': wis_pop,\n}","d418dd81":"OTHER_MALE_COLS = ['BA_MALE', 'IA_MALE', 'AA_MALE', 'NA_MALE', 'TOM_MALE']\nOTHER_FEMALE_COLS = ['BA_FEMALE', 'IA_FEMALE', 'AA_FEMALE', 'NA_FEMALE', 'TOM_FEMALE']\n\nstates = DEM_county_2020[DEM_county_2020.county.isin(changed_county_list)][['state', 'county']]","c4ef31eb":"def plot_gender(year_2016, year_2020, state_name, county_name):\n    age_2016 = year_2016[['AGEGRP', 'TOT_MALE', 'TOT_FEMALE']]\n    age_2020 = year_2020[['AGEGRP', 'TOT_MALE', 'TOT_FEMALE']]\n    \n    pct_fem_2016 = age_2016.apply(lambda x: x[-1]\/sum(x[-2:])*100, axis=1)\n    pct_fem_2020 = age_2020.apply(lambda x: x[-1]\/sum(x[-2:])*100, axis=1)\n    \n    df_2016 = age_2016.query(\"AGEGRP > 4\").reset_index(drop=True).set_index('AGEGRP')\n    df_2016.columns = df_2016.columns.map('{}_2016'.format)\n    \n    df_2020 = age_2020.query(\"AGEGRP > 4\").reset_index(drop=True).set_index('AGEGRP')\n    df_2020.columns = df_2020.columns.map('{}_2020'.format)\n    \n    df = pd.concat([df_2016, df_2020], axis=1)\n    \n    fig = go.Figure(data=[\n        go.Bar(name='FEMALE 2016', y=df.index, x=df['TOT_FEMALE_2016'], orientation='h', offsetgroup=0, marker_color='rgb(179,205,227)'),\n        go.Bar(name='MALE 2016', y=df.index, x=df['TOT_MALE_2016'], orientation='h', offsetgroup=0, marker_color='rgb(55,126,184)'),\n        go.Bar(name='FEMALE 2020', y=df.index, x=df['TOT_FEMALE_2020'], orientation='h', offsetgroup=1, marker_color='rgb(251,180,174)'),\n        go.Bar(name='MALE 2020', y=df.index, x=df['TOT_MALE_2020'], orientation='h', offsetgroup=1, marker_color='rgb(228,26,28)'),\n    ])\n    fig.update_layout(xaxis_title=\"Population\",\n                      yaxis_title=\"Age Group\",\n                      title_text='(GENDER) State: {} --- County: {}'.format(state_name, county_name))\n    fig.show();\n    \n    \ndef plot_races(year_2016, year_2020, gender, state_name, county_name):\n    \n    gender_cols = ['WA_MALE'] + OTHER_MALE_COLS\n    if gender == 'female':\n        gender_cols = ['WA_FEMALE'] + OTHER_FEMALE_COLS\n    \n    race_2016 = year_2016.reset_index(drop=True).set_index('AGEGRP')[gender_cols]\n    race_2016['OTHER'] = year_2016[gender_cols[1:]].sum(axis=1).values\n    \n    race_2020 = year_2020.reset_index(drop=True).set_index('AGEGRP')[gender_cols]\n    race_2020['OTHER'] = year_2020[gender_cols[1:]].sum(axis=1).values\n    \n    df_2016 = race_2016.loc[5:]\n    df_2016.columns = df_2016.columns.map('{}_2016'.format)\n\n    df_2020 = race_2020.loc[5:]\n    df_2020.columns = df_2020.columns.map('{}_2020'.format)\n\n    df = pd.concat([df_2016, df_2020], axis=1)\n\n    fig = go.Figure(data=[\n        go.Bar(name='WHITE 2016', y=df.index, x=df['WA_{}_2016'.format(gender.upper())],  orientation='h', offsetgroup=0, marker_color='rgb(179,205,227)'),\n        go.Bar(name='OTHER 2016', y=df.index, x=df['OTHER_2016'],  orientation='h', offsetgroup=0, marker_color='rgb(55,126,184)'),\n        go.Bar(name='WHITE 2020', y=df.index, x=df['WA_{}_2020'.format(gender.upper())],  orientation='h', offsetgroup=1, marker_color='rgb(251,180,174)'),\n        go.Bar(name='OTHER 2020', y=df.index, x=df['OTHER_2020'],  orientation='h', offsetgroup=1, marker_color='rgb(228,26,28)'),\n    ])\n    fig.update_layout(xaxis_title='Population',\n                      yaxis_title=\"Age Group\",\n                      title_text='(HUMAN RACE) State: {} --- County: {}'.format(state_name, county_name))\n    fig.show()","f97d7a5c":"for row in states.iterrows():\n    state_name = row[1].state\n    county_name = row[1].county\n    cur_pop = state_pop[state_name]\n    \n    # 9 = 7\/1\/2016 population estimate \n    # 12 = 7\/1\/2019 population estimate\n    year_2016 = cur_pop[(cur_pop['CTYNAME'] == county_name) & (cur_pop['YEAR'] == 9)]\n    year_2020 = cur_pop[(cur_pop['CTYNAME'] == county_name) & (cur_pop['YEAR'] == 12)]\n\n    plot_gender(year_2016, year_2020, state_name, county_name);\n    plot_races(year_2016, year_2020, 'male', state_name, county_name);\n    plot_races(year_2016, year_2020, 'female', state_name, county_name);","c2af023d":"# 5. \u0e40\u0e01\u0e34\u0e14\u0e04\u0e33\u0e16\u0e32\u0e21\u0e43\u0e2b\u0e21\u0e48\n\n-","7f8b5e59":"# EDA","913d43f0":"# Find who win each State","9f3568ca":"> REP lose 5 states with high electrical votes to DEM","156632e7":"# Population of each county","f8b0c423":"> REP lost votes in 2020","bba697c6":"# 4. \u0e01\u0e32\u0e23\u0e2b\u0e32\u0e04\u0e33\u0e15\u0e2d\u0e1a\u0e08\u0e32\u0e01\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\n\n> \u0e04\u0e33\u0e16\u0e32\u0e21 : \u0e17\u0e33\u0e44\u0e21 Donald Trump \u0e16\u0e36\u0e07\u0e41\u0e1e\u0e49\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07\u0e1b\u0e35 2020\n<br>\n> \u0e2a\u0e21\u0e21\u0e15\u0e34\u0e10\u0e32\u0e19 : \n    - 1. Trump \u0e40\u0e2a\u0e35\u0e22 State \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e04\u0e22\u0e40\u0e1b\u0e47\u0e19\u0e10\u0e32\u0e19\u0e40\u0e2a\u0e35\u0e22\u0e07\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07\u0e1b\u0e35 2016\n      A: Trump \u0e40\u0e2a\u0e35\u0e22 5 \u0e23\u0e31\u0e10\u0e43\u0e2b\u0e0d\u0e48 (Electoral Votes \u0e2a\u0e39\u0e07) ['Michigan', 'Georgia', 'Wisconsin', 'Pennsylvania', 'Arizona'] \u0e43\u0e2b\u0e49\u0e01\u0e31\u0e1a DEM \u0e43\u0e19\u0e1b\u0e35 2020\n    \n> \u0e04\u0e33\u0e16\u0e32\u0e21 : \u0e2d\u0e30\u0e44\u0e23\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e04\u0e30\u0e41\u0e19\u0e19 Vote \u0e20\u0e32\u0e22\u0e43\u0e19 State \u0e17\u0e35\u0e48\u0e40\u0e04\u0e22\u0e40\u0e1b\u0e47\u0e19\u0e10\u0e32\u0e19\u0e40\u0e2a\u0e35\u0e22\u0e07\u0e02\u0e2d\u0e07 Trump \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07\u0e1b\u0e35 2016 \u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\n<br>\n> \u0e2a\u0e21\u0e21\u0e15\u0e34\u0e10\u0e32\u0e19 : \n    - 1. \u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e01\u0e23\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e44\u0e1b \n        - 1.1. New Voters\n          A: \u0e08\u0e33\u0e19\u0e27\u0e19 New Voters \u0e20\u0e32\u0e22\u0e43\u0e19 5 \u0e23\u0e31\u0e10\u0e19\u0e31\u0e49\u0e19\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e02\u0e36\u0e49\u0e19\n        - 1.2. Gender Ratio\n          A: Gender Ratio \u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e21\u0e32\u0e01\u0e08\u0e32\u0e01\u0e1b\u0e35 2016 \u0e44\u0e21\u0e48\u0e19\u0e48\u0e32\u0e08\u0e30\u0e2a\u0e48\u0e07\u0e1c\u0e25\u0e01\u0e31\u0e1a\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07\n        - 1.3. Races\n          A: \u0e08\u0e33\u0e19\u0e27\u0e19 NON-WHITE \u0e20\u0e32\u0e22\u0e43\u0e19 5 \u0e23\u0e31\u0e10\u0e19\u0e31\u0e49\u0e19\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e02\u0e36\u0e49\u0e19\u0e08\u0e32\u0e01\u0e1b\u0e35 2016 \n    - 2. \u0e40\u0e1e\u0e28\u0e02\u0e2d\u0e07 Candidate \u0e08\u0e32\u0e01\u0e1d\u0e31\u0e48\u0e07 DEM\n        - 2.1. Voters \u0e2b\u0e31\u0e19\u0e21\u0e32\u0e40\u0e25\u0e37\u0e2d\u0e01 DEM \u0e40\u0e1e\u0e23\u0e32\u0e30 Candidate \u0e40\u0e1b\u0e47\u0e19\u0e1c\u0e39\u0e49\u0e0a\u0e32\u0e22 \u0e04\u0e32\u0e14\u0e27\u0e48\u0e32 Voters \u0e1c\u0e39\u0e49\u0e0a\u0e32\u0e22\u0e08\u0e30\u0e42\u0e2b\u0e27\u0e15\u0e43\u0e2b\u0e49\u0e01\u0e31\u0e1a Candidate \u0e1c\u0e39\u0e49\u0e0a\u0e32\u0e22\n          A: \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01 Gender Ratio \u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e21\u0e32\u0e01\u0e08\u0e32\u0e01\u0e1b\u0e35 2016 \u0e40\u0e1e\u0e28\u0e02\u0e2d\u0e07 Candidate \u0e44\u0e21\u0e48\u0e19\u0e48\u0e32\u0e08\u0e30\u0e2a\u0e48\u0e07\u0e1c\u0e25\u0e15\u0e48\u0e2d\u0e01\u0e32\u0e23\u0e15\u0e31\u0e14\u0e2a\u0e34\u0e19\u0e43\u0e08\n","91c43bca":"Missing Stats Info (doesn't effect the 2020 result)\n\n1. Alaska: (2016, REP) , (2020, REP) \n2. Connecticut : (2016, DEM) , (2020, DEM)\n3. Maine: (2016, DEM) , (2020, DEM)\n4. Massachusetts: (2016, DEM) , (2020, DEM)\n5. New Hampshire: (2016, DEM) , (2020, DEM)\n6. Rhode Island: (2016, DEM) , (2020, DEM)\n7. Vermonth: (2016, DEM) , (2020, DEM)","a187ecc9":"> REP win more states both 2016 and 2020","90965d1c":"# 2. \u0e01\u0e32\u0e23\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\/\u0e23\u0e27\u0e1a\u0e23\u0e27\u0e21\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e14\u0e34\u0e1a\n\n- 2.1. \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07\u0e1b\u0e35 2020\n    - 2.1.1. \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07\u0e1b\u0e35 2020\n    - 2.1.2. \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 Electrical Votes \u0e1b\u0e35 2020\n<br>\n- 2.2. \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07\u0e1b\u0e35 2016\n    - 2.2.1. \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07\u0e1b\u0e35 2016\n    - 2.2.2. \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 Electrical Votes \u0e1b\u0e35 2016\n<br>    \n- 2.3. \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e01\u0e23\u0e23\u0e30\u0e14\u0e31\u0e1a County","db96133b":"# 3. \u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e10\u0e32\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e01\u0e32\u0e23\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c (Data Mart)\n- 3.1. \u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\n        \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07\u0e1b\u0e35 2020 \u0e41\u0e25\u0e30\u0e1b\u0e35 2016 \u0e21\u0e35\u0e44\u0e21\u0e48\u0e04\u0e23\u0e1a\u0e16\u0e49\u0e27\u0e19\u0e17\u0e31\u0e49\u0e07 County \u0e41\u0e25\u0e30 State\n        \u0e08\u0e36\u0e07\u0e17\u0e33\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e21\u0e32\u0e40\u0e09\u0e1e\u0e32\u0e30\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01 County \u0e41\u0e25\u0e30 State \u0e17\u0e35\u0e48\u0e21\u0e35\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e01\u0e31\u0e19\n        > 1808 Counites & 44 States\n        \n- 3.2. \u0e01\u0e32\u0e23\u0e08\u0e31\u0e14\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\n        \n        \n- 3.3. \u0e01\u0e32\u0e23 clean \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\n        - 3.3.1. Drop column \u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e43\u0e0a\u0e49\n        - 3.3.2. \u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e0a\u0e37\u0e48\u0e2d column \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e43\u0e2b\u0e49\u0e0a\u0e37\u0e48\u0e2d column consistent \u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e49\u0e31\u0e07\u0e1b\u0e35 2020 \u0e41\u0e25\u0e30 2016\n        - 3.3.3. Drop sample \u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 state \u0e2b\u0e23\u0e37\u0e2d county\n        - 3.3.4. \u0e43\u0e0a\u0e49\u0e0a\u0e37\u0e48\u0e2d\u0e40\u0e15\u0e47\u0e21\u0e02\u0e2d\u0e07 state \u0e41\u0e17\u0e19 abbreviation\n        ","feb4fe93":"Ref:\n1. Population dataset\npopulation dataset: https:\/\/www.census.gov\/data\/tables\/time-series\/demo\/popest\/2010s-counties-detail.html\n<br>\nfile layout: https:\/\/www2.census.gov\/programs-surveys\/popest\/technical-documentation\/file-layouts\/2010-2019\/cc-est2019-alldata.pdf","421a6ef9":"# 1. \u0e01\u0e32\u0e23\u0e15\u0e49\u0e31\u0e07\u0e04\u0e33\u0e16\u0e32\u0e21 \/ \u0e01\u0e32\u0e23\u0e15\u0e31\u0e49\u0e07\u0e2a\u0e21\u0e21\u0e15\u0e34\u0e10\u0e32\u0e19\n\n> \u0e04\u0e33\u0e16\u0e32\u0e21 : \u0e17\u0e33\u0e44\u0e21 Donald Trump \u0e16\u0e36\u0e07\u0e41\u0e1e\u0e49\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07\u0e1b\u0e35 2020\n<br>\n> \u0e2a\u0e21\u0e21\u0e15\u0e34\u0e10\u0e32\u0e19 : \n    - 1. Trump \u0e40\u0e2a\u0e35\u0e22 State \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e04\u0e22\u0e40\u0e1b\u0e47\u0e19\u0e10\u0e32\u0e19\u0e40\u0e2a\u0e35\u0e22\u0e07\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07\u0e1b\u0e35 2016\n    \n> \u0e04\u0e33\u0e16\u0e32\u0e21 : \u0e2d\u0e30\u0e44\u0e23\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e04\u0e30\u0e41\u0e19\u0e19 Vote \u0e20\u0e32\u0e22\u0e43\u0e19 State \u0e17\u0e35\u0e48\u0e40\u0e04\u0e22\u0e40\u0e1b\u0e47\u0e19\u0e10\u0e32\u0e19\u0e40\u0e2a\u0e35\u0e22\u0e07\u0e02\u0e2d\u0e07 Trump \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07\u0e1b\u0e35 2016 \u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\n<br>\n> \u0e2a\u0e21\u0e21\u0e15\u0e34\u0e10\u0e32\u0e19 : \n    - 1. \u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e01\u0e23\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e44\u0e1b \n        - 1.1. New Voters\n        - 1.2. Gender Ratio\n        - 1.3. Races\n    - 2. \u0e40\u0e1e\u0e28\u0e02\u0e2d\u0e07 Candidate \u0e08\u0e32\u0e01\u0e1d\u0e31\u0e48\u0e07 DEM\n        - 2.1. Voters \u0e2b\u0e31\u0e19\u0e21\u0e32\u0e40\u0e25\u0e37\u0e2d\u0e01 DEM \u0e40\u0e1e\u0e23\u0e32\u0e30 Candidate \u0e40\u0e1b\u0e47\u0e19\u0e1c\u0e39\u0e49\u0e0a\u0e32\u0e22 \u0e04\u0e32\u0e14\u0e27\u0e48\u0e32 Voters \u0e1c\u0e39\u0e49\u0e0a\u0e32\u0e22\u0e08\u0e30\u0e42\u0e2b\u0e27\u0e15\u0e43\u0e2b\u0e49\u0e01\u0e31\u0e1a Candidate \u0e1c\u0e39\u0e49\u0e0a\u0e32\u0e22\n","410b56e8":"# Count the Electoral College","93b1d837":"# Get intersect counties and states","bb8d4516":"# 6. \u0e01\u0e32\u0e23\u0e2a\u0e23\u0e38\u0e1b\u0e1c\u0e25\n\n- 6.1. \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 States \u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e19\u0e33\u0e21\u0e32\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e14\u0e49\u0e27\u0e22\n\n    1. Alaska:        (2016, REP) , (2020, REP) \n    2. Connecticut :  (2016, DEM) , (2020, DEM)\n    3. Maine:         (2016, DEM) , (2020, DEM)\n    4. Massachusetts: (2016, DEM) , (2020, DEM)\n    5. New Hampshire: (2016, DEM) , (2020, DEM)\n    6. Rhode Island:  (2016, DEM) , (2020, DEM)\n    7. Vermonth:      (2016, DEM) , (2020, DEM)\n    \n\u0e41\u0e15\u0e48\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01 \u0e1c\u0e25\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07\u0e1b\u0e35 2016 \u0e41\u0e25\u0e30 2020 \u0e02\u0e2d\u0e07 states \u0e40\u0e2b\u0e25\u0e48\u0e32\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e08\u0e36\u0e07\u0e44\u0e21\u0e48\u0e2a\u0e48\u0e07\u0e1c\u0e25\u0e15\u0e48\u0e2d\u0e01\u0e32\u0e23\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\n<br>\nref: https:\/\/thestandard.co\/us-election-2020\/\n\n- 6.2. \u0e01\u0e32\u0e23\u0e17\u0e35\u0e48\u0e08\u0e30\u0e0a\u0e19\u0e30 State \u0e15\u0e49\u0e2d\u0e07\u0e0a\u0e19\u0e30\u0e14\u0e49\u0e27\u0e22\u0e04\u0e30\u0e41\u0e19\u0e19 Votes\n        \n        **Compare number of winning counties in these states**\n        2020\n        candidate\n        Donald Trump    323\n        Joe Biden        73\n        Name: county, dtype: int64\n\n        2016\n        candidate\n        Donald Trump       329\n        Hillary Clinton     67\n        \n        > \u0e16\u0e36\u0e07\u0e41\u0e21\u0e49\u0e27\u0e48\u0e32 Donald Trump \u0e08\u0e30\u0e0a\u0e19\u0e30\u0e43\u0e19\u0e2b\u0e25\u0e32\u0e22 counties         \n        \n        **Counties total votes winner count**\n        2020\n        candidate\n        Joe Biden       52661615\n        Donald Trump    40297889\n        Name: total_votes, dtype: int64\n\n        2016\n        candidate\n        Donald Trump       37284542.0\n        Hillary Clinton    36854558.0\n        Name: total_votes, dtype: float64\n        \n        > \u0e41\u0e15\u0e48\u0e08\u0e33\u0e19\u0e27\u0e19\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e01\u0e23\u0e20\u0e32\u0e22\u0e43\u0e19 counites \u0e40\u0e2b\u0e25\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19\u0e21\u0e35\u0e19\u0e49\u0e2d\u0e22\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e04\u0e30\u0e41\u0e19\u0e19 Votes \u0e19\u0e49\u0e2d\u0e22\u0e41\u0e25\u0e30\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16 \u0e0a\u0e19\u0e30 State \u0e44\u0e14\u0e49\n        \n        \n- 6.3. \u0e01\u0e32\u0e23\u0e0a\u0e19\u0e30\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07 \u0e15\u0e49\u0e2d\u0e07\u0e0a\u0e19\u0e30\u0e14\u0e49\u0e27\u0e22 Electoral Votes\n        **#states winner count**\n        2020\n        Donald Trump    24\n        Joe Biden       20\n        Name: candidate, dtype: int64\n\n        2016\n        Donald Trump       29\n        Hillary Clinton    15\n        Name: candidate, dtype: int64\n        \n        > \u0e16\u0e36\u0e07\u0e41\u0e21\u0e49\u0e27\u0e48\u0e32 Donald Trump \u0e08\u0e30\u0e0a\u0e19\u0e30\u0e43\u0e19\u0e2b\u0e25\u0e32\u0e22 states\n        \n        **Compare votes counties in these states**\n        2020\n        candidate\n        Joe Biden       8206029\n        Donald Trump    6665976\n        Name: total_votes, dtype: int64\n\n        2016\n        candidate\n        Donald Trump       6467614.0\n        Hillary Clinton    5458081.0\n        Name: total_votes, dtype: float64\n        \n        > \u0e41\u0e15\u0e48\u0e08\u0e33\u0e19\u0e27\u0e19 Electoral Votes \u0e20\u0e32\u0e22\u0e43\u0e19 state \u0e40\u0e2b\u0e25\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19\u0e21\u0e35\u0e19\u0e49\u0e2d\u0e22\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e04\u0e30\u0e41\u0e19\u0e19 Votes \u0e19\u0e49\u0e2d\u0e22\u0e41\u0e25\u0e30\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16 \u0e0a\u0e19\u0e30\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07\u0e44\u0e14\u0e49 \u0e44\u0e14\u0e49\n        \n- 6.4. Trump \u0e40\u0e2a\u0e35\u0e22 5 \u0e23\u0e31\u0e10\u0e43\u0e2b\u0e0d\u0e48 (Electoral Votes \u0e2a\u0e39\u0e07) [Michigan, Georgia, Wisconsin, Pennsylvania, Arizona] \u0e43\u0e2b\u0e49\u0e01\u0e31\u0e1a DEM \u0e43\u0e19\u0e1b\u0e35 2020\n<br>Biden \u0e0a\u0e19\u0e30 14 \u0e23\u0e31\u0e10\u0e43\u0e2b\u0e0d\u0e48\u0e08\u0e32\u0e01 20\n                      State\t       Votes\n       (Biden)  0\t California      55.0\n       (Trump)  1\t Texas           38.0\n       (Trump)  2\t Florida\t     29.0\n       (Biden)  3\t New York\t     29.0\n       (Biden)  4\t Illinois\t     20.0\n        >>>     5\t Pennsylvania\t 20.0 \n       (Trump)  6\t Ohio\t         18.0\n        >>>     7\t Georgia\t     16.0\n        >>>     8\t Michigan\t     16.0\n       (Trump)  9\t North Carolina\t 15.0\n       (Biden)  10\tNew Jersey\t     14.0\n       (Biden)  11\tVirginia\t     13.0\n       (Biden)  12\tWashington\t     12.0\n       (Trump)  13\tTennessee\t     11.0\n       (Trump)  14\tIndiana\t         11.0\n        >>>     15\tArizona\t         11.0\n       (Biden)  16\tMassachusetts\t 11.0\n       (Biden)  17\tMinnesota\t     10.0\n       (Biden)  18\tMaryland\t     10.0\n       (Trump)  19\tMissouri\t     10.0\n        >>>     20\tWisconsin\t     10.0\n        \n\n\n\n- 6.5. \u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e04\u0e30\u0e41\u0e19\u0e19 Vote \u0e20\u0e32\u0e22\u0e43\u0e19 State \u0e17\u0e35\u0e48\u0e40\u0e04\u0e22\u0e40\u0e1b\u0e47\u0e19\u0e10\u0e32\u0e19\u0e40\u0e2a\u0e35\u0e22\u0e07\u0e02\u0e2d\u0e07 Trump \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07\u0e1b\u0e35 2016 \u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\n        \u0e02\u0e49\u0e2d\u0e2a\u0e21\u0e21\u0e15\u0e34\u0e10\u0e32\u0e19 (\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e44\u0e21\u0e48\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e21\u0e32\u0e22\u0e37\u0e19\u0e22\u0e31\u0e19)\n        1. New Voter\n            > \u0e08\u0e33\u0e19\u0e27\u0e19 New Voter \u0e40\u0e1e\u0e34\u0e48\u0e21\u0e21\u0e32\u0e01\u0e02\u0e36\u0e49\u0e19 \u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e40\u0e1b\u0e47\u0e19\u0e44\u0e1b\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32\u0e1e\u0e27\u0e01\u0e40\u0e04\u0e49\u0e32\u0e42\u0e2b\u0e27\u0e15\u0e40\u0e25\u0e37\u0e2d\u0e01 DEM\n        2. Human Race\n            > \u0e08\u0e33\u0e19\u0e27\u0e19 NON-WHITE \u0e40\u0e1e\u0e34\u0e48\u0e21\u0e21\u0e32\u0e01\u0e02\u0e36\u0e49\u0e19 \u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e40\u0e1b\u0e47\u0e19\u0e44\u0e1b\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32\u0e1e\u0e27\u0e01\u0e40\u0e04\u0e49\u0e32\u0e42\u0e2b\u0e27\u0e15\u0e40\u0e25\u0e37\u0e2d\u0e01 DEM \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e19\u0e42\u0e22\u0e1a\u0e32\u0e22\u0e02\u0e2d\u0e07 DEM \u0e04\u0e48\u0e2d\u0e19\u0e02\u0e49\u0e32\u0e07\u0e08\u0e30\u0e22\u0e37\u0e14\u0e2b\u0e22\u0e38\u0e48\u0e19\u0e43\u0e2b\u0e49\u0e01\u0e31\u0e1a\u0e04\u0e19\u0e40\u0e2b\u0e25\u0e48\u0e32\u0e19\u0e35\u0e49\n        3. \u0e2d\u0e32\u0e08\u0e21\u0e35 Voter \u0e1a\u0e32\u0e07\u0e2a\u0e48\u0e27\u0e19\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e0a\u0e2d\u0e1a\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19\u0e02\u0e2d\u0e07 Trump \u0e41\u0e25\u0e30\u0e2b\u0e31\u0e19\u0e44\u0e1b\u0e40\u0e25\u0e37\u0e2d\u0e01 DEM","b1ff5c11":"# Preprocess","6b98a2fc":"# Which county that made the different","d94375c7":"# Find who win each county","bc89a384":"> REP win more counites both 2016 and 2020","a15f722e":"# 0. \u0e08\u0e38\u0e14\u0e1b\u0e23\u0e30\u0e2a\u0e07\u0e04\u0e4c\u0e02\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e17\u0e33 Data Analytics\n> \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2b\u0e32\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e17\u0e33\u0e43\u0e2b\u0e49 Donald Trump \u0e41\u0e1e\u0e49\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e15\u0e31\u0e49\u0e07 \u0e42\u0e14\u0e22\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01 2 main parties (DEM, REP)","772610dc":"# 1808 Counties, 44 States"}}