{"cell_type":{"883020dd":"code","674d1014":"code","4bc8c507":"code","e6da1799":"code","daf67104":"code","9daa578d":"code","d2720308":"code","60f50f5b":"code","5cbd1c10":"code","c9a61a0f":"code","d7e425a8":"code","c11e10ff":"code","7031eb17":"code","c62c048c":"code","ebff6af6":"code","28e7f1ad":"code","35677c4d":"code","2d0b7a4f":"code","b0e98c98":"code","f6f54ade":"code","2229f0b7":"code","ba9a21d7":"code","4c38974c":"code","b5fcca7a":"code","acd65f0d":"code","3a0ecb4b":"code","7375fd44":"code","f597021a":"code","45d3a326":"code","95942323":"code","95a4cc81":"code","9dcb2ba1":"code","98202d46":"code","02048ee5":"code","e836aec9":"code","e6611bd7":"code","daab66bf":"code","cd7d9eb1":"code","dd788ffc":"code","b51657a2":"code","4f7454b2":"code","e97dafc8":"code","9a178d2f":"code","fc5aced3":"code","2a1005a1":"code","42670b38":"code","7f6e2319":"code","7d5a4824":"code","db13d90c":"code","72b0ddc9":"code","92402203":"code","e6e243b0":"code","728cfb49":"code","f3fc9db4":"code","39968775":"code","a9089153":"code","35ae4fc6":"code","84147209":"code","deae0573":"code","025e9ed9":"code","34573ea1":"code","c29616bf":"code","9c9c0a7c":"code","bfb8f21a":"code","dfec8ef7":"code","99d6d1a0":"code","1d383626":"markdown","6a86ca02":"markdown","5ebb4890":"markdown","96c7c5e4":"markdown","c8474fd0":"markdown","2d3e24d8":"markdown","8cbc6c3c":"markdown","1321d6f2":"markdown","00938280":"markdown","fbb860d0":"markdown","df9555fb":"markdown","46c3c274":"markdown","e6867e5a":"markdown","73d9c501":"markdown","4b91eb03":"markdown","0db82e58":"markdown","a4ac5152":"markdown","819066a4":"markdown","0cb783d4":"markdown","0ecf10f2":"markdown","c16b5bbd":"markdown"},"source":{"883020dd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","674d1014":"train=pd.read_csv('..\/input\/home-data-for-ml-course\/train.csv')","4bc8c507":"train","e6da1799":"train.shape","daf67104":"import seaborn as sns\nfrom matplotlib import pyplot as plt","9daa578d":"train.head()","d2720308":"missing_values = train.isnull().sum()\nmissing_values = missing_values[missing_values > 0]\nmissing_values.sort_values(inplace=True)\nmissing_values\n","60f50f5b":"missing_values = missing_values.to_frame()\nmissing_values.columns = ['count']\nmissing_values['Name'] = missing_values.index\n","5cbd1c10":"\nsns.set(style=\"whitegrid\", color_codes=True)\nsns.barplot(x = 'Name', y = 'count', data=missing_values)\nplt.xticks(rotation = 90)\nplt.style.use(\"fivethirtyeight\")\nplt.gcf().set_size_inches(12,6)\nplt.show()\n","c9a61a0f":"missing_values_per = train.isnull().sum()\/len(train)\nmissing_values_per = missing_values_per[missing_values_per > 0]\nmissing_values_per.sort_values(inplace=True)\nmissing_values_per","d7e425a8":"missing_values_per = missing_values_per.to_frame()\nmissing_values_per.columns = ['count']\nmissing_values_per['Name'] = missing_values_per.index","c11e10ff":"sns.set(style=\"whitegrid\", color_codes=True)\nplots=sns.barplot(x = 'Name', y = 'count', data=missing_values_per)\nplt.xticks(rotation = 90)\nplt.style.use(\"fivethirtyeight\")\nplt.ylabel(\"% percentage of null values\")\nplt.gcf().set_size_inches(12,6)\nfor bar in plots.patches:\n    plots.annotate(format(bar.get_height(),'.2f'),\n                  (bar.get_x()+bar.get_width()\/2,\n                  bar.get_height()),ha='center',va='center',\n                  size=15,xytext=(0,5),\n                  textcoords='offset points')\n    \nplt.show()\n","7031eb17":"train['MasVnrType'].value_counts()","c62c048c":"# train['Electrical'].replace({'SBrkr':1,'FuseA':2,'FuseF':3,'FuseP':4,'Mix':4},inplace=True)","ebff6af6":"train.drop([\"FireplaceQu\",\"Fence\",\"Alley\",\"MiscFeature\",\"PoolQC\"],axis=1,inplace=True)\n","28e7f1ad":"train.shape","35677c4d":"train","2d0b7a4f":"train.drop(\"Id\",axis=1,inplace=True)","b0e98c98":"# Heatmap used to represent the correlation of variables\nimport matplotlib.pyplot as plt\ntrain_corr = train.corr()\nplt.figure(figsize=(18,18))\nsns.heatmap(train_corr, vmin=-1, vmax=1, cmap=\"viridis\", annot=True, linewidth=0.1)","f6f54ade":"# I pick the features with correlation above 50% with target variable\nk = 11 #number of variables for heatmap\ncols = train_corr.nlargest(k, 'SalePrice')['SalePrice'].index\ncm = np.corrcoef(train[cols].values.T)\nsns.set(font_scale=1.25)\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2g', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values,linewidths=1)\nplt.show()\n","2229f0b7":"main_features=['OverallQual','GrLivArea','GarageCars','GarageArea','TotalBsmtSF','1stFlrSF','FullBath','TotRmsAbvGrd','YearBuilt','YearRemodAdd']","ba9a21d7":"train['OverallQual'].isnull().sum()","4c38974c":"train['OverallQual'].value_counts()","b5fcca7a":"import seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nsns.distplot(train['OverallQual'],color=\"#52b788\");\n#kurtosis and Skewness\nprint(\"Skewness: %f\" % train['OverallQual'].skew())\nprint(\"Kurtosis: %f\" % train['OverallQual'].kurt())\nplt.gcf().set_size_inches(12,6)\n","acd65f0d":"train['GrLivArea'].isnull().sum()","3a0ecb4b":"train['GrLivArea'].value_counts()","7375fd44":"# warnings.filterwarnings('ignore')\nsns.distplot(train['GrLivArea']);\n#kurtosis and Skewness\nprint(\"Skewness: %f\" % train['GrLivArea'].skew())\nprint(\"Kurtosis: %f\" % train['GrLivArea'].kurt())\nplt.gcf().set_size_inches(12,6)\n","f597021a":"\ntrain['GarageCars'].isnull().sum()\n","45d3a326":"\ntrain['GarageCars'].value_counts()","95942323":"# warnings.filterwarnings('ignore')\nsns.distplot(train['GarageCars'],color=\"#c9184a\");\n#kurtosis and Skewness\nprint(\"Skewness: %f\" % train['GarageCars'].skew())\nprint(\"Kurtosis: %f\" % train['GarageCars'].kurt())\nplt.gcf().set_size_inches(12,6)","95a4cc81":"# x=train['GarageCars'].value_counts().index\n# y=train['GarageCars'].value_counts()\n# color=['#590d22', '#800f2f', '#a4133c', '#c9184a', '#ff4d6d']\n# sns.barplot(x = x,\n#             y = y,\n#             data = train,\n#             palette=color)\n# plt.gcf().set_size_inches(12,6)","9dcb2ba1":"train['GarageArea'].isnull().sum()","98202d46":"train['GarageArea'].value_counts()","02048ee5":"sns.distplot(train['GarageArea'],color=\"#774936\");\n#kurtosis and Skewness\nprint(\"Skewness: %f\" % train['GarageArea'].skew())\nprint(\"Kurtosis: %f\" % train['GarageArea'].kurt())\nplt.gcf().set_size_inches(12,6)","e836aec9":"train['TotalBsmtSF'].isnull().sum()","e6611bd7":"train['TotalBsmtSF'].value_counts()","daab66bf":"sns.distplot(train['TotalBsmtSF'],color=\"#ee9b00\");\n#kurtosis and Skewness\nprint(\"Skewness: %f\" % train['TotalBsmtSF'].skew())\nprint(\"Kurtosis: %f\" % train['TotalBsmtSF'].kurt())\nplt.gcf().set_size_inches(12,6)","cd7d9eb1":"train['1stFlrSF'].isnull().sum()","dd788ffc":"train['1stFlrSF'].value_counts()","b51657a2":"sns.distplot(train['1stFlrSF'],color=\"#00afb9\");\n#kurtosis and Skewness\nprint(\"Skewness: %f\" % train['1stFlrSF'].skew())\nprint(\"Kurtosis: %f\" % train['1stFlrSF'].kurt())\nplt.gcf().set_size_inches(12,6)","4f7454b2":"train['FullBath'].isnull().sum()","e97dafc8":"train['FullBath'].value_counts()","9a178d2f":"sns.distplot(train['FullBath'],color=\"#293241\");\n#kurtosis and Skewness\nprint(\"Skewness: %f\" % train['FullBath'].skew())\nprint(\"Kurtosis: %f\" % train['FullBath'].kurt())\nplt.gcf().set_size_inches(12,6)","fc5aced3":"train['TotRmsAbvGrd'].isnull().sum()","2a1005a1":"train['TotRmsAbvGrd'].value_counts()","42670b38":"sns.distplot(train['TotRmsAbvGrd'],color=\"#d90429\");\n#kurtosis and Skewness\nprint(\"Skewness: %f\" % train['TotRmsAbvGrd'].skew())\nprint(\"Kurtosis: %f\" % train['TotRmsAbvGrd'].kurt())\nplt.gcf().set_size_inches(12,6)","7f6e2319":"train['YearBuilt'].isnull().sum()","7d5a4824":"train['YearBuilt'].value_counts()","db13d90c":"sns.distplot(train['YearBuilt'],color=\"#ff006e\");\n#kurtosis and Skewness\nprint(\"Skewness: %f\" % train['YearBuilt'].skew())\nprint(\"Kurtosis: %f\" % train['YearBuilt'].kurt())\nplt.gcf().set_size_inches(12,6)","72b0ddc9":"train['YearRemodAdd'].isnull().sum()","92402203":"train['YearRemodAdd'].value_counts()","e6e243b0":"sns.distplot(train['YearRemodAdd'],color=\"#f3722c\");\n#kurtosis and Skewness\nprint(\"Skewness: %f\" % train['YearRemodAdd'].skew())\nprint(\"Kurtosis: %f\" % train['YearRemodAdd'].kurt())\nplt.gcf().set_size_inches(12,6)","728cfb49":"main_features","f3fc9db4":"X=train[main_features].copy()\nY=train['SalePrice']\n","39968775":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n","a9089153":"X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.25)\nregr = LinearRegression()\nregr.fit(X_train, y_train)\npred=regr.predict(X_test)\nprint(regr.score(X_test, y_test))\n  ","35ae4fc6":"from sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators = 150, random_state = 0)\nregressor.fit(X_train, y_train)  \npred=regressor.predict(X_test)\nprint(regressor.score(X_test, y_test))","84147209":"from sklearn.tree import DecisionTreeRegressor\nregressorTree = DecisionTreeRegressor(random_state = 0)\nregressorTree.fit(X_train, y_train)  \npred=regressorTree.predict(X_test)\nprint(regressorTree.score(X_test, y_test))","deae0573":"submission=pd.read_csv('..\/input\/home-data-for-ml-course\/sample_submission.csv')","025e9ed9":"test=pd.read_csv('..\/input\/home-data-for-ml-course\/test.csv')","34573ea1":"test_new=test[main_features].copy()","c29616bf":"test_new=test_new.fillna(0)","9c9c0a7c":"test_new","bfb8f21a":"regressor.fit(X,Y)\npred_test=regressor.predict(test_new)\n","dfec8ef7":"my_submission = pd.DataFrame({'Id':test.Id, 'SalePrice': pred_test})\nmy_submission.to_csv('submission.csv', index=False)","99d6d1a0":"my_submission","1d383626":"# Model Selection","6a86ca02":"# 1. OverallQual (Rates the overall material and finish of the house)\n","5ebb4890":"# Bar chart represent the null values present in dataset","96c7c5e4":"# 8. TotalRmsAbvGrd (total rooms above grade (does not include bathrooms)","c8474fd0":"# Using RandomForestRegression Model","2d3e24d8":"# Percentage of null values","8cbc6c3c":"# Drop the columns with 50% or more than 50% null values","1321d6f2":"# 3. DecisionTreeRegression","00938280":"# Data Processing","fbb860d0":"# 1. Linear Regression","df9555fb":"# 7. FullBath(Full bathrooms above grade)","46c3c274":"# Correlation of independent variables with target variable(SalePrice)","e6867e5a":"# 4. GarageArea(Size of garage in square feet)","73d9c501":"# 5. TotalBsmtSF","4b91eb03":"# Graphical Representation of main features","0db82e58":"# 9. YearBuilt","a4ac5152":"# 3. GarageCars(Size of garage in car capacity)","819066a4":"# 6. 1stFlrSf( First Floor square feet)","0cb783d4":"# 2. GrLivArea (Above grade (ground) living area square feet)","0ecf10f2":"# 10. YearRemodAdd","c16b5bbd":"# 2. RandomForestRegression"}}