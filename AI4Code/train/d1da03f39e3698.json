{"cell_type":{"821f659c":"code","72c64fbd":"code","d5c30453":"code","33a0e362":"code","b82f5304":"code","ddee3401":"code","7ccae16b":"code","edb8dfb5":"code","96798fe6":"code","3d7e5a86":"code","bbec06a2":"code","2dbd319e":"code","ceaccf88":"code","26f395bb":"code","56456a4b":"code","c0c16066":"code","e35a39d6":"code","fd325f6f":"code","519ff1e7":"code","e477c38e":"code","93be6578":"code","1d56b930":"code","14ae2370":"code","16760e8e":"code","ffbec377":"code","c6d7345e":"code","ee2e4f49":"code","ac9f324a":"code","fa6db34d":"code","7f102c15":"code","b7988e26":"code","0095ccdd":"code","87f677e5":"code","412c36cc":"code","344080d6":"code","2ca132bd":"code","a4389052":"code","3b0e7f2f":"code","359b9dfd":"code","69169bdb":"code","cba76234":"code","97db29b2":"code","62e80781":"code","de189f55":"code","d0d3ba7d":"code","9d0dc5f2":"code","29048d39":"code","8e81bdfc":"code","d413d89f":"code","9925c0ac":"code","5b86a3fc":"code","bdeac26e":"code","6837c9ba":"code","4217e0fe":"code","ff6e2c43":"code","293a6e7a":"code","104f09b8":"code","3e2747ea":"code","096ffc2d":"code","942b5d1f":"code","89e53aa9":"code","76427277":"code","27bf4eb5":"code","980a7cd1":"code","664125f5":"code","926c7d7e":"code","d18ffd7f":"code","aaa323c8":"code","008bfd30":"code","49ea29c6":"code","51985f66":"code","54165661":"code","2275fa38":"code","951e0607":"code","7c0c8663":"code","a2e40db7":"code","a02d8e53":"code","57f0762e":"code","d257d10d":"code","801bb6f1":"code","be3ed764":"code","ce2df218":"code","d0d343a2":"code","e96ddac8":"code","39582c7c":"code","04f2151c":"code","d1a0719e":"code","c30548c5":"code","44645a58":"code","6cfea89e":"markdown","354f2593":"markdown","f40b8bb7":"markdown","13a5fad0":"markdown","d2f28826":"markdown","a3734002":"markdown","c0ecadff":"markdown","642ac6a7":"markdown","015bbdf8":"markdown","4e2fcc7f":"markdown","e34955d7":"markdown","ca20d39d":"markdown","412861aa":"markdown","2fb64bbc":"markdown","7ff33056":"markdown","954cc18d":"markdown"},"source":{"821f659c":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\n\n# to display all columns and rows:\npd.set_option('display.max_columns', None); pd.set_option('display.max_rows', None);\n\n#virgulden sonra g\u00f6sterilecek olan say\u0131 say\u0131s\u0131\npd.set_option('display.float_format', lambda x: '%.0f' % x)\nimport matplotlib.pyplot as plt","72c64fbd":"#Veriyi okuma\ndf_2010_2011 = pd.read_excel(\"..\/input\/uci-online-retail-ii-data-set\/online_retail_II.xlsx\", sheet_name = \"Year 2010-2011\")","d5c30453":"#Verinin kopyas\u0131n\u0131 alma\ndf = df_2010_2011.copy()","33a0e362":"df.head()","b82f5304":"#essiz urun sayisi, kac musteri var, vs...\ndf.nunique()","ddee3401":"#hangi urunden kacar tane var?\ndf[\"Description\"].value_counts().head()","7ccae16b":"#en cok siparis edilen urun hangisi, s\u0131ralama ile birlite?\ndf.groupby(\"Description\").agg({\"Quantity\":\"sum\"}).sort_values(\"Quantity\", ascending = False).head()","edb8dfb5":"#TotalPrice de\u011fi\u015fkeni olu\u015fturduk.Toplam harcamalar i\u00e7in.\ndf[\"TotalPrice\"] = df[\"Quantity\"]*df[\"Price\"]","96798fe6":"df.groupby(\"Invoice\").agg({\"TotalPrice\":\"sum\"}).head()","3d7e5a86":"#hangi ulkeden kac siparis geldi?\ndf[\"Country\"].value_counts().head()","bbec06a2":"#hangi ulke ne kadar kazand\u0131rd\u0131?\ndf.groupby(\"Country\").agg({\"TotalPrice\":\"sum\"}).sort_values(\"TotalPrice\", ascending = False).head()","2dbd319e":"#Ka\u00e7 tane eksik de\u011ferimiz var?\ndf.isnull().sum()","ceaccf88":"#Yukar\u0131daki \u00e7\u0131kt\u0131ya g\u00f6re StockCode u belli olan 1454 \u00fcr\u00fcn\u00fcn Description \u0131 eksik.\n#Bunlar\u0131 d\u00fczeltebilir miyiz diye merak ediyorum ve bulmaya \u00e7al\u0131\u015f\u0131yorum.","26f395bb":"#\u00d6ncelikle eksik olan de\u011ferlerin Stockcode unu bulmam gerekiyor.\ndf_eksik_desc = df[df[\"Description\"].isnull()][[\"StockCode\"]]\ndf_eksik_desc.head()","56456a4b":"df_eksik_desc.size","c0c16066":"#\u015eimdi buldu\u011fumuz bu StockCode lar\u0131n ka\u00e7\u0131 e\u015fsiz ona bakal\u0131m.\ndf_eksik_desc.nunique()","e35a39d6":"#Burda tekrarlayan kay\u0131tlar\u0131 siliyorum.\ndf_eksik_desc.drop_duplicates(inplace=True) ","fd325f6f":"df_eksik_desc.size","519ff1e7":"df_eksik_desc.head()","e477c38e":"#Yukar\u0131da buldu\u011fumuz sonu\u00e7 Description \u0131 eksik StockCode u belli 633 de\u011fer oldu\u011funu g\u00f6steriyor.\n#Bu de\u011ferlerden birisini ele alal\u0131m.\ndf[df[\"StockCode\"]==22139].head(20)","93be6578":"#Yukar\u0131daki tablodan \u00e7\u0131kard\u0131\u011f\u0131m  baz\u0131 sonu\u00e7lar.\n#1-Descriptionu bir g\u00f6zlemde olupta ba\u015fka bir g\u00f6zlemde olmayan de\u011ferler var.Burada eksik de\u011ferler doldurulabilir.\n#2-StockCode u ayn\u0131 olup, descriptionu tamamen farkl\u0131 olan bir de\u011fer var.(3. sat\u0131rdaki amazon de\u011feri)\n#3-Ayn\u0131 tarihlerde farkl\u0131 fiyata sat\u0131lan ayn\u0131 \u00fcr\u00fcn.\u0130ndirim ve ya kampanya olarak de\u011ferlendiremeyiz.Ayn\u0131 \u00fclkelere.\n#4-Baz\u0131 g\u00f6zlemlerde price 0.\u0130adelerde bile price yaz\u0131yor.\n#5-Invoice u C ile ba\u015flamayan buna ra\u011fmen eksi de\u011ferde Quantity var.\n#Burada \u00e7o\u011funlu\u011fa g\u00f6re hareket edip eksik olan de\u011ferleri Descriptiona g\u00f6re dolduraca\u011f\u0131z. ","1d56b930":"#Uzun s\u00fcreli bir i\u015flem.\n#RFM i\u00e7in gereksiz ama \u00fcr\u00fcnler baz\u0131nda yap\u0131lmas\u0131 gereken bir i\u015flem\ndongu_uzunlugu = len(df_eksik_desc[\"StockCode\"])\nsayac = 0\nfor i in df_eksik_desc[\"StockCode\"]:\n    if(len(df[df[\"StockCode\"]==i][\"Description\"].value_counts())>0): #E\u011fer StockCode u ile Descriptionu e\u015fle\u015fiyorsa\n        a = df[df[\"StockCode\"]==i][\"Description\"].value_counts().index[0]  #En \u00e7ok olan de\u011feri al\u0131yoruz.\n        df.loc[(df[\"StockCode\"]==i) & (df[\"Description\"]!=a),\"Description\"] = a  #eksik verilere at\u0131yoruz.\n    print(str(dongu_uzunlugu - sayac - 1 )+\" deger kaldi\")\n    sayac += 1   ","14ae2370":"#Baslama saati 11.52\n#Yar\u0131s\u0131        13.22\n#Bitis saati   15.04\n#Geriye bulamayaca\u011f\u0131m\u0131z ka\u00e7 eksik de\u011fer oldugunu g\u00f6r\u00fcyoruz.112 de\u011fer bulunamayacak \u015fekilde g\u00f6z\u00fck\u00fcyor","16760e8e":"#Geriye bulamayaca\u011f\u0131m\u0131z ka\u00e7 eksik de\u011fer oldugunu g\u00f6r\u00fcyoruz.112 de\u011feri en son silicez.\ndf.isnull().sum()","ffbec377":"#\u015eimdi ise CustomerId leri eksik olan Invoice lerini (Fatura no) bulup buna g\u00f6re belirlemeye \u00e7al\u0131\u015fag\u0131z.\ndf_eksik_cust = df[df[\"Customer ID\"].isnull()][[\"Invoice\"]]\ndf_eksik_cust.head()","c6d7345e":"df_eksik_cust.size","ee2e4f49":"df_eksik_cust.nunique()","ac9f324a":"#Burda tekrarlayan kay\u0131tlar\u0131 siliyorum.\ndf_eksik_cust.drop_duplicates(inplace=True) ","fa6db34d":"df_eksik_cust.size","7f102c15":"df_eksik_cust.head()","b7988e26":"#Uzun s\u00fcreli\n#Burada Customer ID si bo\u015f olan Invoice lerde yap\u0131sal bozukluk olabilir mi diye kontrol ettim.\ntoplam = 0\nfor i in df_eksik_cust[\"Invoice\"]:\n    if(len(df[df[\"Invoice\"]==i][\"Customer ID\"].value_counts())>0): #E\u011fer Invoice u ile Customer ID ile e\u015fle\u015fiyorsa\n        toplam += 1 \nprint(toplam)","0095ccdd":"df.shape","87f677e5":"#\u015eimdi eksik olan de\u011ferleri Customer ID \u00f6zelinde siliyoruz.\n#Description eksik olmas\u0131 RFM i\u00e7in bir anlam ifade etmiyor.\ndf.dropna(subset= [\"Customer ID\"],inplace= True)","412c36cc":"#Zaten Description daki eksik de\u011ferler de bunun i\u00e7inde.\ndf.isnull().sum()","344080d6":"df.shape","2ca132bd":"#Invoice de\u011feri C ile ba\u015flayan iade anlam\u0131na gelen de\u011ferleri siliyoruz.\nsil =  df[df[\"Invoice\"].str.contains(\"C\", na=False)].index\ndf = df.drop(sil, axis=0)","a4389052":"df.shape","3b0e7f2f":"#Son olarak iade olmad\u0131\u011f\u0131 halde Quantity de\u011feri eksi olan de\u011ferleri siliyoruz.\nsil_q = df[~df['Quantity'] > 0].index\ndf = df.drop(sil_q, axis=0)","359b9dfd":"#Burada de\u011fi\u015fim olmamas\u0131n\u0131n nedeni bu de\u011ferlerin demek ki eksik de\u011ferlerle birlikte silinmesidir.\ndf.shape","69169bdb":"df.describe([0.01,0.05,0.10,0.25,0.50,0.75,0.90,0.95, 0.99]).T","cba76234":"#Ka\u00e7 ayk\u0131r\u0131 de\u011fer oldu\u011funu g\u00f6steriyor.\nfor feature in [\"Quantity\",\"Price\",\"TotalPrice\"]:\n\n    Q1 = df[feature].quantile(0.01)\n    Q3 = df[feature].quantile(0.99)\n    IQR = Q3-Q1\n    upper = Q3 + 1.5*IQR\n    lower = Q1 - 1.5*IQR\n\n    if df[(df[feature] > upper) | (df[feature] < lower)].any(axis=None):\n        print(feature,\"yes\")\n        print(df[(df[feature] > upper) | (df[feature] < lower)].shape[0])\n    else:\n        print(feature, \"no\")","97db29b2":"#Verileri d\u00fczenledikten sonra olu\u015fan son tablonun \u00f6zet bilgileri\ndf.info()","62e80781":"#Yap\u0131lan ilk al\u0131\u015fveri\u015f tarihi\ndf[\"InvoiceDate\"].min()","de189f55":"#Yap\u0131lan son al\u0131\u015fveri\u015f tarihi\ndf[\"InvoiceDate\"].max()","d0d3ba7d":"#Recency de\u011feri belirlemek i\u00e7in bugunun tarihini al\u0131yoruz.\nimport datetime as dt\ntoday_date = dt.datetime(2011,12,10)","9d0dc5f2":"df.groupby(\"Customer ID\").agg({\"InvoiceDate\":\"max\"}).head()","29048d39":"#Su an her bir m\u00fc\u015fterinin son al\u0131\u015fveri\u015f tarihleri elimizde.\ndf[\"Customer ID\"] = df[\"Customer ID\"].astype(int)","8e81bdfc":"#Recency de\u011feri i\u00e7in bugunun tarihi ile verimizdeki tarihleri \u00e7\u0131kard\u0131k.\ntemp_df = (today_date - df.groupby(\"Customer ID\").agg({\"InvoiceDate\":\"max\"}))","d413d89f":"temp_df.rename(columns={\"InvoiceDate\": \"Recency\"}, inplace = True)","9925c0ac":"temp_df.head()","5b86a3fc":"#Sadece g\u00fcnler ile i\u015flem yapaca\u011f\u0131m\u0131z i\u00e7in sadece g\u00fcnleri tutuyoruz.\nrecency_df = temp_df[\"Recency\"].apply(lambda x: x.days)","bdeac26e":"recency_df.head()","6837c9ba":"#Bir kullan\u0131c\u0131n\u0131n her bir faturas\u0131n\u0131n i\u00e7inde ka\u00e7 \u00fcr\u00fcn oldu\u011fu\ntemp_df = df.groupby([\"Customer ID\",\"Invoice\"]).agg({\"Invoice\":\"count\"})","4217e0fe":"temp_df.head()","ff6e2c43":"#Burda ise kullan\u0131c\u0131n\u0131n ka\u00e7 faturas\u0131 oldu\u011fu\ntemp_df.groupby(\"Customer ID\").agg({\"Invoice\":\"count\"}).head()","293a6e7a":"freq_df = temp_df.groupby(\"Customer ID\").agg({\"Invoice\":\"count\"})\nfreq_df.rename(columns={\"Invoice\": \"Frequency\"}, inplace = True)\nfreq_df.head()","104f09b8":"#Ki\u015finin ne kadar harcama yapt\u0131\u011f\u0131\nmonetary_df = df.groupby(\"Customer ID\").agg({\"TotalPrice\":\"sum\"})","3e2747ea":"monetary_df.head()","096ffc2d":"monetary_df.rename(columns={\"TotalPrice\": \"Monetary\"}, inplace = True)","942b5d1f":"print(recency_df.shape,freq_df.shape,monetary_df.shape)","89e53aa9":"rfm = pd.concat([recency_df, freq_df, monetary_df],  axis=1)","76427277":"rfm.head()","27bf4eb5":"from sklearn.preprocessing import MinMaxScaler\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning) \nwarnings.filterwarnings(\"ignore\", category=FutureWarning)","980a7cd1":"sc = MinMaxScaler((0,1))","664125f5":"df = sc.fit_transform(rfm)","926c7d7e":"df","d18ffd7f":"kmeans = KMeans(n_clusters = 8)","aaa323c8":"k_fit = kmeans.fit(df)","008bfd30":"k_fit.n_clusters","49ea29c6":"k_fit.cluster_centers_","51985f66":"k_fit.labels_","54165661":"kmeans = KMeans(n_clusters = 8)\nk_fit = kmeans.fit(df)","2275fa38":"ssd = []\n\nK = range(1,30)\n\nfor k in K:\n    kmeans = KMeans(n_clusters = k).fit(df)\n    ssd.append(kmeans.inertia_)","951e0607":"ssd","7c0c8663":"plt.plot(K, ssd, \"bx-\")\nplt.xlabel(\"Farkl\u0131 K De\u011ferlerine Kar\u015f\u0131l\u0131k Uzakl\u0131k Art\u0131k Toplamlar\u0131\")\nplt.title(\"Optimum K\u00fcme say\u0131s\u0131 i\u00e7in Elbow Y\u00f6ntemi\")","a2e40db7":"from yellowbrick.cluster import KElbowVisualizer","a02d8e53":"kmeans = KMeans()\nvisu = KElbowVisualizer(kmeans, k = (2,20))\nvisu.fit(df)\nvisu.poof();","57f0762e":"kmeans = KMeans(n_clusters = 6).fit(df)\nkmeans\nkumeler = kmeans.labels_","d257d10d":"kumeler","801bb6f1":"rfm = pd.concat([recency_df, freq_df, monetary_df],  axis=1)","be3ed764":"pd.DataFrame({\"Musteri\": rfm.index, \"Kumeler\": kumeler})","ce2df218":"rfm[\"RecencyScore\"] = pd.qcut(rfm['Recency'], 5, labels = [5, 4, 3, 2, 1])\nrfm[\"FrequencyScore\"] = pd.qcut(rfm['Frequency'].rank(method=\"first\"), 5, labels = [1, 2, 3, 4, 5])\nrfm[\"MonetaryScore\"] = pd.qcut(rfm['Monetary'], 5, labels = [1, 2, 3, 4, 5])","d0d343a2":"rfm[\"RFM_SCORE\"] = rfm['RecencyScore'].astype(str) + rfm['FrequencyScore'].astype(str) + rfm['MonetaryScore'].astype(str)","e96ddac8":"#S\u0131n\u0131fland\u0131rmaya yarayan regex de\u011fi\u015fkeni\nseg_map = {\n    r'[1-2][1-2]': 'Hibernating',\n    r'[1-2][3-4]': 'At Risk',\n    r'[1-2]5': 'Can\\'t Loose',\n    r'3[1-2]': 'About to Sleep',\n    r'33': 'Need Attention',\n    r'[3-4][4-5]': 'Loyal Customers',\n    r'41': 'Promising',\n    r'51': 'New Customers',\n    r'[4-5][2-3]': 'Potential Loyalists',\n    r'5[4-5]': 'Champions'\n}","39582c7c":"rfm['Segment'] = rfm['RecencyScore'].astype(str) + rfm['FrequencyScore'].astype(str)\nrfm['Segment'] = rfm['Segment'].replace(seg_map, regex=True)\nrfm.head()","04f2151c":"# Df miz zaten scale edilmi\u015f durumda\ndf","d1a0719e":"kmeans = KMeans(n_clusters = 10)","c30548c5":"k_fit = kmeans.fit(df)","44645a58":"kumeler = k_fit.labels_","6cfea89e":"![download.png](attachment:download.png)","354f2593":"kumeler = pd.DataFrame({\"Kumeler\": kumeler})","f40b8bb7":"RFM de 10 ayr\u0131 s\u0131n\u0131fa ay\u0131rm\u0131\u015ft\u0131k m\u00fc\u015fterileri ve bunlar\u0131 sadece Recency ve Frequency de\u011ferlerine g\u00f6re yapm\u0131\u015ft\u0131k.\u015eimdi KNN ile ayn\u0131s\u0131n\u0131 yap\u0131p kar\u015f\u0131la\u015ft\u0131raca\u011f\u0131z.","13a5fad0":"## Yukar\u0131daki tablo bizim RF skoruna g\u00f6re ay\u0131rd\u0131\u011f\u0131m\u0131z segmentleri g\u00f6stiyor","d2f28826":"# Check Missing Values","a3734002":"# Recency","c0ecadff":"# KNN ile S\u0131n\u0131fland\u0131rma","642ac6a7":"# Data Preparation","015bbdf8":"# RFM ve KNN Kar\u015f\u0131la\u015ft\u0131rmas\u0131","4e2fcc7f":"# RFM Skorlar\u0131 ile M\u00fc\u015fteri Segmentasyonu\n\nRecency, Frequency, Monetary ifadelerinin ba\u015f harflerinden olu\u015fur.\n\nM\u00fc\u015fterilerin sat\u0131n alma al\u0131\u015fkanl\u0131klar\u0131 \u00fczerinden pazarlama ve sat\u0131\u015f stratejileri belirlemeye yard\u0131mc\u0131 olan bir tekniktir.\n\n- Recency (yenilik): M\u00fc\u015fterinin son sat\u0131n almas\u0131ndan bug\u00fcne kadar ge\u00e7en s\u00fcre\n\n    -- Di\u011fer bir ifadesiyle \u201cM\u00fc\u015fterinin son temas\u0131ndan bug\u00fcne kadar ge\u00e7en s\u00fcre\u201d dir.\n\n    -- Bug\u00fcn\u00fcn tarihi - Son sat\u0131n alma\n\n    -- \u00d6rnek verecek olursak bug\u00fcn bu analizi yap\u0131yorsak bug\u00fcn\u00fcn tarihi - son \t\u00fcr\u00fcn sat\u0131n alma tarihi.\n\n    -- Bu \u00f6rne\u011fin 20 olabilir 100 olabilir. Biliriz ki 20 olan m\u00fc\u015fteri daha s\u0131cakt\u0131r. Daha son zamanlarda bizimle temas\u0131 olmu\u015ftur.\n\n- Frequency (S\u0131kl\u0131k): Toplam sat\u0131n alma say\u0131s\u0131.\n\n- Monetary (Parasal De\u011fer): M\u00fc\u015fterinin yapt\u0131\u011f\u0131 toplam harcama.","e34955d7":"# Optimum K\u00fcme Say\u0131s\u0131n\u0131n Belirlenmesi","ca20d39d":"# Business Problem \n\n\nBir e-ticaret \u015firketi m\u00fc\u015fterilerini segmentlere ay\u0131r\u0131p bu segmentlere g\u00f6re pazarlama stratejileri belirlemek istiyor.\n\nBuna y\u00f6nelik olarak m\u00fc\u015fterilerin davran\u0131\u015flar\u0131n\u0131 tan\u0131mlayaca\u011f\u0131z ve bu davran\u0131\u015flarda \u00f6beklenmelere g\u00f6re gruplar olu\u015fturaca\u011f\u0131z.\n\nYani ortak davran\u0131\u015flar sergileyenleri ayn\u0131 gruplara alaca\u011f\u0131z ve bu gruplara \u00f6zel sat\u0131\u015f ve pazarlama teknikleri geli\u015ftirmeye \u00e7al\u0131\u015faca\u011f\u0131z.\n\n**Veri Seti Hikayesi**\n\nhttps:\/\/archive.ics.uci.edu\/ml\/datasets\/Online+Retail+II\n\nOnline Retail II isimli veri seti \u0130ngiltere merkezli online bir sat\u0131\u015f ma\u011fazas\u0131n\u0131n 01\/12\/2009 - 09\/12\/2011 tarihleri aras\u0131ndaki sat\u0131\u015flar\u0131n\u0131 i\u00e7eriyor.Biz 2010-2011 y\u0131llar\u0131 aras\u0131nda \u00e7al\u0131\u015faca\u011f\u0131z.\n\nBu \u015firket hediyelik e\u015fya sat\u0131yor. Promosyon \u00fcr\u00fcnleri gibi d\u00fc\u015f\u00fcnebilir.\n\nM\u00fc\u015fterilerinin \u00e7o\u011fu da toptanc\u0131.\n\n**De\u011fi\u015fkenler**\n\n- InvoiceNo: Fatura numaras\u0131. Her i\u015fleme yani faturaya ait e\u015fsiz numara. E\u011fer bu kod C ile ba\u015fl\u0131yorsa i\u015flemin iptal edildi\u011fini ifade eder.\n- StockCode: \u00dcr\u00fcn kodu. Her bir \u00fcr\u00fcn i\u00e7in e\u015fsiz numara.\n- Description: \u00dcr\u00fcn ismi\n- Quantity: \u00dcr\u00fcn adedi. Faturalardaki \u00fcr\u00fcnlerden ka\u00e7ar tane sat\u0131ld\u0131\u011f\u0131n\u0131 ifade etmektedir.\n- InvoiceDate: Fatura tarihi ve zaman\u0131. \n- UnitPrice: \u00dcr\u00fcn fiyat\u0131 (Sterlin cinsinden)\n- CustomerID: E\u015fsiz m\u00fc\u015fteri numaras\u0131\n- Country: \u00dclke ismi. M\u00fc\u015fterinin ya\u015fad\u0131\u011f\u0131 \u00fclke.","412861aa":"- Yukar\u0131da g\u00f6r\u00fclen tablo 2 bouytlu sadece R ve F de\u011ferlerini g\u00f6stersede burda yap\u0131lacak olan i\u015flem R, F ve M de\u011ferlerini 5 e b\u00f6lmek ve ona g\u00f6re m\u00fc\u015fterileri s\u0131n\u0131fland\u0131rmak.\n\n-- Recency de\u011feri 1 olan daha uzak tarihte, 5 olan daha yak\u0131n tarihte al\u0131\u015fveri\u015f yapan m\u00fc\u015fteri say\u0131labilir.\n\n-- Frequency de\u011feri 1 olan az s\u0131kl\u0131kta, 5 olan \u00e7ok s\u0131kl\u0131kta al\u0131\u015fveri\u015f yapan m\u00fc\u015fteri say\u0131labilir.\n\n-- Monetary de\u011feri 1 olan toplamda daha az harcama yapan, 5 olan ise daha \u00e7ok harcama yapan m\u00fc\u015fteri say\u0131labilir.","2fb64bbc":"# Frequency","7ff33056":"# Data Understanding","954cc18d":"# Monetary"}}