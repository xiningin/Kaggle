{"cell_type":{"e218c1a1":"code","dde952ba":"code","ed27e70b":"code","82fb6c05":"code","780df058":"code","df4b877a":"code","23be522e":"code","8ecedee5":"code","997793d3":"code","28ad5088":"code","5892cff3":"code","3901a817":"code","c33b0c5c":"markdown","3625dca6":"markdown","b187a7de":"markdown","eb075375":"markdown","219bc7d1":"markdown","1df20bb3":"markdown","337b1822":"markdown"},"source":{"e218c1a1":"import tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator","dde952ba":"tf.__version__","ed27e70b":"! pip install split-folders","82fb6c05":"import os, shutil\ndef copytree(src, dst, symlinks=False, ignore=None):\n    for item in os.listdir(src):\n        s = os.path.join(src, item)\n        d = os.path.join(dst, item)\n        if os.path.isdir(s):\n            shutil.copytree(s, d, symlinks, ignore)\n        else:\n            shutil.copy2(s, d)\n\ncopytree('..\/input\/forest-fire','.\/data')","780df058":"import os\nimport sys\nimport shutil\n\ntry:\n    shutil.rmtree('.\/data\/test_big\/')\nexcept OSError as e:\n    print(\"Error: %s - %s.\" % (e.filename, e.strerror))\n\n\ntry:\n    shutil.rmtree('.\/data\/test_small\/')\nexcept OSError as e:\n    print(\"Error: %s - %s.\" % (e.filename, e.strerror))","df4b877a":"import splitfolders\n\n# train, test split\nsplitfolders.ratio('.\/data\/', output=\".\/splitted_data\", ratio=(0.7, 0.3))","23be522e":"train_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)\ntraining_set = train_datagen.flow_from_directory('.\/splitted_data\/train\/',\n                                                 target_size = (64,64),\n                                                 batch_size = 32,\n                                                 class_mode = 'binary')","8ecedee5":"training_set.class_indices","997793d3":"test_datagen = ImageDataGenerator(rescale = 1.\/255)\ntest_set = test_datagen.flow_from_directory('.\/splitted_data\/val\/',\n                                            target_size = (64, 64),\n                                            batch_size = 32,\n                                            class_mode = 'binary')","28ad5088":"# cnn\n\ncnn = tf.keras.models.Sequential()\ncnn.add(tf.keras.layers.Conv2D(filters=32, kernel_size=7, activation='relu', input_shape=[64,64,3]))\ncnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))\ncnn.add(tf.keras.layers.Conv2D(filters=32, kernel_size=3, activation='relu'))\ncnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))\ncnn.add(tf.keras.layers.Flatten())\ncnn.add(tf.keras.layers.Dense(units=256, activation='relu'))\ncnn.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))\ncnn.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\n","5892cff3":"cnn.summary()","3901a817":"cnn.fit(x = training_set, epochs = 7 ,validation_data=test_set)","c33b0c5c":"## Step 2: Remove test_big and test_small from the copy folder","3625dca6":"## Step 1: Create a copy of main directory from input to output\n\nThis is done because input directory is just read only.","b187a7de":"## Step 4: Pre-processing and Training set creation","eb075375":"## Step 7: Train the model\n\n\nEach epoch takes around ~ 4 minutes 50 seconds\n\nTest Accuracy= 0.99\n\nTrain Accuracy=0.99","219bc7d1":"## Step 3: Now since we have only train data in .\/data, we can use splitfolders \n\nThat's why i made a copy of the main directory so as to create only train data in one folder.","1df20bb3":"## Step 5: Pre-processing and Test set creation","337b1822":"## Step 6: Convonutional Neural Network Model Creation\n\n\n1. input shape is (64,64,3)\n2. strides=2, pool size=2\n3. There are 2 convolutional layers where in first one i have used kernel size as 7 and in second one i have taken as 3.\n4. optimizer is basic adam optimizer and loss function is cross entropy\n5. there's 1 Dense layer with 256 neurons"}}