{"cell_type":{"97f95873":"code","728af421":"code","50edc9e2":"code","2f639ea8":"code","fff50cd2":"code","9b3c1996":"code","a73bf618":"code","0c8a5a94":"code","96a7a69c":"code","84bd6c97":"code","74cf862e":"code","488e123b":"code","7af2cbee":"code","17e48471":"code","48e55c1b":"markdown","cd22e437":"markdown","912e8493":"markdown","71dcfa7a":"markdown","49adae9d":"markdown","679d495f":"markdown","f04d06f3":"markdown","5b0f45f5":"markdown","67050951":"markdown","887828a0":"markdown","5e5727d6":"markdown","5dee7019":"markdown","5f2dc8d8":"markdown","3ecf8412":"markdown"},"source":{"97f95873":"# --- CSS STYLE ---\nfrom IPython.core.display import HTML\ndef css_styling():\n    styles = open(\"..\/input\/2020-cost-of-living\/alerts.css\", \"r\").read()\n    return HTML(\"<style>\"+styles+\"<\/style>\")\ncss_styling()","728af421":"# ~~~~~~~~~~~~~~~~~~~~~~~\n# LIBRARIES & ENVIRONMENT\n# ~~~~~~~~~~~~~~~~~~~~~~~\nimport os\nimport glob\nimport wandb\nimport json\nimport warnings\nimport imageio\nimport datetime\nimport calendar\nimport pandas as pd\nimport numpy as np\nfrom PIL import Image\nfrom tqdm import tqdm\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom IPython.core.display import display, HTML, Javascript\nimport IPython.display as py_display\n\n# Environment check\nwarnings.filterwarnings(\"ignore\")\nos.environ[\"WANDB_SILENT\"] = \"true\"\nCONFIG = {'competition': 'C19-learn', '_wandb_kernel': 'aot'}\n\n# Secrets\nfrom kaggle_secrets import UserSecretsClient\nuser_secrets = UserSecretsClient()\nsecret_value_0 = user_secrets.get_secret(\"wandb\")\n\n# Log in W&B personal API\n! wandb login $secret_value_0\n\n\n# ~~~~~~~~~~~~~~~~~~~~~~~\n# ~~ HELPER FUNCTIONS ~~\n# ~~~~~~~~~~~~~~~~~~~~~~~\ndef save_dataset_artifact(run_name, artifact_name, path):\n    '''Saves dataset to W&B Artifactory.\n    run_name: name of the experiment\n    artifact_name: under what name should the dataset be stored\n    path: path to the dataset'''\n    \n    run = wandb.init(project='C19-learn', \n                     name=run_name, \n                     config=CONFIG, anonymous=\"allow\")\n    artifact = wandb.Artifact(name=artifact_name, \n                              type='dataset')\n    artifact.add_file(path)\n\n    wandb.log_artifact(artifact)\n    wandb.finish()\n    \n    \ndef create_wandb_plot(x_data=None, y_data=None, x_name=None, y_name=None, \n                      title=None, log=None, plot=\"line\"):\n    '''Create and save lineplot\/barplot in W&B Environment.\n    x_data & y_data: Pandas Series containing x & y data\n    x_name & y_name: strings containing axis names\n    title: title of the graph\n    log: string containing name of log'''\n    \n    data = [[label, val] for (label, val) in zip(x_data, y_data)]\n    table = wandb.Table(data=data, columns = [x_name, y_name])\n    \n    if plot == \"line\":\n        wandb.log({log : wandb.plot.line(table, x_name, y_name, title=title)})\n    elif plot == \"bar\":\n        wandb.log({log : wandb.plot.bar(table, x_name, y_name, title=title)})\n    elif plot == \"scatter\":\n        wandb.log({log : wandb.plot.scatter(table, x_name, y_name, title=title)})\n        \n        \ndef create_wandb_hist(x_data=None, x_name=None, title=None, log=None):\n    '''Create and save histogram in W&B Environment.\n    x_data: Pandas Series containing x values\n    x_name: strings containing axis name\n    title: title of the graph\n    log: string containing name of log'''\n    \n    data = [[x] for x in x_data]\n    table = wandb.Table(data=data, columns=[x_name])\n    wandb.log({log : wandb.plot.histogram(table, x_name, title=title)})\n    \n    \ndef append_engagement_data():\n    '''Appends all engagement data into 1 big dataframe.\n    district_id feature: to separate between districts\n    return: full_df (~ 22mil rows)'''\n    \n    path = \"..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\"\n    all_paths = glob.glob(f\"{path}\/*\")\n    all_dfs = []\n\n    for path in all_paths:\n        df = pd.read_csv(path)\n        df[\"district_id\"] = path.split(\"\/\")[-1].split(\".\")[0]\n        all_dfs.append(df)\n        \n    full_df = pd.concat(all_dfs, axis=0)\n    \n    # Add time features\n\n    # Holidays\n    full_df[\"holiday\"] = np.where(full_df[\"time\"].isin([\"2020-01-30\", \"2020-01-31\"]), 1,\n            np.where((full_df[\"time\"]>=\"2020-04-05\") & (full_df[\"time\"]<=\"2020-04-09\"), 1,\n            np.where((full_df[\"time\"]>=\"2020-06-12\") & (full_df[\"time\"]<=\"2020-09-10\"), 1,\n            np.where((full_df[\"time\"]>=\"2020-11-25\") & (full_df[\"time\"]<=\"2020-11-29\"), 1,\n            np.where((full_df[\"time\"]>=\"2020-12-21\") & (full_df[\"time\"]<=\"2020-12-31\"), 1, 0)))))\n\n    # Before\/After Outbreak\n    full_df[\"outbreak\"] = np.where(full_df[\"time\"]<=\"2020-03-24\", 0, 1)\n    \n    return full_df\n\n\ndef clean_interval(x):\n    '''Cleans features with intervals in districts.csv'''\n    if pd.isnull(x):\n        low, high = pd.np.nan, pd.np.nan\n    else:\n        x = x.replace(\"[\", \"\").replace(\"]\", \"\")\n        x = x.split(\",\")\n\n        low = float(x[0])\n        high = float(x[1])\n    return low, high\n\n\ndef clean_districts():\n    '''Cleans districts.csv dataset and returns it'''\n    \n    df = districts = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")\n    mapping = pd.read_csv(\"..\/input\/usa-states-to-region\/states.csv\")\n    mapping = mapping[[\"State\", \"State Code\", \"Region\"]]\n    mapping.columns = [\"State\", \"Abbreviation\", \"Region\"]\n\n    # Districts: Remove rows with all missing values\n    cols = ['state', 'locale', 'pct_black\/hispanic',\n            'pct_free\/reduced', 'county_connections_ratio', 'pp_total_raw']\n    df.dropna(subset=cols, how=\"all\", inplace=True)\n    df = df.reset_index(drop=True)\n\n    # Add state abbreviation & region\n    df = pd.merge(left=df, right=mapping, \n                  left_on=\"state\", right_on=\"State\", \n                  how=\"left\").drop(\"State\", axis=1)\n\n    # Preprocess features with intervals\n    cols = ['pct_black\/hispanic', 'pct_free\/reduced', \n            'county_connections_ratio', 'pp_total_raw']\n    for col in cols:\n        df[col] = df[col].apply(lambda x: clean_interval(x))\n        \n    return df","50edc9e2":"# Import data\ndf = append_engagement_data()\ndistricts = clean_districts()\nprods = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\")","2f639ea8":"run = wandb.init(project='C19-learn', name='basics', \n                 config=CONFIG, anonymous=\"allow\")\n\n# Save basics information\nnas = df[\"engagement_index\"].isna().sum()\n\nbasics = {\"prods\": prods[\"LP ID\"].nunique(),\n          \"districts\": df[\"district_id\"].nunique(),\n          \"country\": \"USA\",\n          \"time\": [df[\"time\"].min(), df[\"time\"].max()],\n          \"datapoints\": len(df),\n          \"missing\": nas\/len(df),\n          \"student_load\": df[\"pct_access\"].mean(),\n          \"page_load\": df[\"engagement_index\"].mean()}\n# Save into a .json file\nwith open('basics.json', 'w') as j: json.dump(basics, j)\n    \n# Save usa.png img as well\nim = imageio.imread('..\/input\/covid19-education-data\/usa.png')\nImage.fromarray(im).save(\"usa.png\")\n\n# Log in into W&B\nwandb.log({\"prods\": int(prods[\"LP ID\"].nunique()),\n           \"districts\": int(basics[\"districts\"]),\n           \"country\": str(\"USA\"),\n           \"time\": str(basics[\"time\"]),\n           \"datapoints\": int(basics[\"datapoints\"]),\n           \"missing\": float(basics[\"missing\"]),\n           \"student_load\": float(basics[\"student_load\"]),\n           \"page_load\": float(basics[\"page_load\"])})\nwandb.finish()\n\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n# ~~~~~~~~~~~~~~~~~~~~~   CODE   ~~~~~~~~~~~~~~~~~~~~~\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nhtmlt1 = '''\n<!-- Bootstrap -->\n<link rel=\"stylesheet\" href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.4.1\/css\/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T\/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<!-- Style -->\n<style>\n\t.andradutza {\n\t\tfont-family: \"Times New Roman\", Times, serif;\n\t\toverflow-x: hidden;\n\t}\n\t.svg-container-small {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\tpadding-bottom: 70%;\n\t\tvertical-align: top;\n\t\toverflow: hidden;\n\t}\n\t.svg-content {\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\n\t.axisColor path{\n\tstroke: #ffffff;\n\t}\n\n\t.axisColor text{\n\tstroke: #ffffff;\n\t}\n\n\t.axisColor line{\n\tstroke: #ffffff;\n\t}\n<\/style>\n\n<div class=\"andradutza\" style=\"background-color:#474747;\">\n\t<center><h1 style=\"color:white;\">What are we looking at?<\/h1><\/center>\n\t<img id=\"baseimg\" src=\"usa.png\" style=\"display:none\" \/>\n    <div class=\"row\">\n\t\t<div id=\"map\" class=\"svg-container-small\"><\/div>\n\t<\/div>\n<\/div>\n'''\n\njs_t1 = '''\nrequire.config({\n    paths: {\n        d3: \"https:\/\/d3js.org\/d3.v5.min\"\n     }\n     });\n\nrequire([\"d3\"], function(d3) {\nconst baseAssetsUrl = document.getElementById('baseimg').src.replace(\/usa.png.*$\/, '');\n\n\/\/ Set the SVG area\nconst MARGIN = { LEFT: 100, RIGHT: 10, TOP: 10, BOTTOM: 100 }\nconst WIDTH = 950 - MARGIN.LEFT - MARGIN.RIGHT\nconst HEIGHT = 700 - MARGIN.TOP - MARGIN.BOTTOM\n\nconst svg = d3.select(\"#map\").append(\"svg\")\n  .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n  .attr(\"viewBox\", \"0 0 950 700\")\n  .classed(\"svg-content\", true);\n\nconst g = svg.append(\"g\")\n  .attr(\"transform\", `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`)\n\n\/\/ USA Map\ng.append(\"image\")\n .attr(\"xlink:href\", baseAssetsUrl+\"usa.png\")\n     .attr(\"x\", \"3%\")\n     .attr(\"y\", \"5%\")\n     .attr(\"width\", 320)\n     .attr(\"height\", 200)\n     .style(\"stroke\", \"#6E99FF\")\n     .style(\"stroke-width\", \"1px\")\n     .style(\"opacity\", 0.6)\n\n\/\/ === Data ===\nd3.json(baseAssetsUrl+\"basics.json\").then(function(data){ \n\n  \/\/ ~~~ USA Area ~~~\n  \/\/ No. districts\n  g.append(\"text\")\n  .attr(\"y\", \"21%\")\n\t.attr(\"x\", \"18%\")\n\t.attr(\"font-size\", \"45px\")\n\t.attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 1000)\n  .attr(\"fill\", \"white\")\n  .text(data.districts)\n  \/\/ Title\n  g.append(\"text\")\n  .attr(\"y\", \"4%\")\n\t.attr(\"x\", \"18%\")\n\t.attr(\"font-size\", \"20px\")\n\t.attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 400)\n  .attr(\"fill\", \"white\")\n  .text(\"Number of School Districts\")\n\n  \/\/ ~~~ Products ~~~\n  g.append(\"text\")\n\t.attr(\"y\", \"16%\")\n\t.attr(\"x\", \"60%\")\n\t.attr(\"font-size\", \"35px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 900)\n  .attr(\"fill\", \"white\")\n  .text(d3.format(\".4n\")(data.prods))\n  g.append(\"text\")\n    .attr(\"y\", \"16%\")\n    .attr(\"x\", \"60%\")\n    .attr(\"font-size\", \"20px\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"font-weight\", 400)\n    .attr(\"fill\", \"white\")\n    .attr(\"dy\", \"1.5em\")\n    .text(\"Educational Tech Products\")\n\n\n  \/\/ ~~~ Time scale ~~~\n  \/\/ Scale\n  var xScale = d3.scaleTime()\n    .domain([new Date(data.time[0]), new Date(data.time[1])])\n    .range([-1, 600])\n  var xAxis = d3.axisBottom(xScale)\n    .tickFormat(d3.timeFormat(\"%d %b\"))\n  g.append(\"g\")\n    .attr(\"class\", \"axisColor\")\n    .attr('transform', 'translate('+(WIDTH\/12) +','+(HEIGHT\/2.1)+')')\n    .call(xAxis)\n    .selectAll(\"text\")\n    .attr(\"font-size\", \"12px\")\n    .attr(\"font-weight\", 0)\n\n  \/\/ Text\n  g.append(\"text\")\n\t.attr(\"y\", \"39%\")\n\t.attr(\"x\", \"68%\")\n\t.attr(\"font-size\", \"25px\")\n\t.attr(\"opacity\", \"0.6\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"fill\", \"white\")\n  .attr(\"font-weight\", 900)\n  .text(\"2020\")\n  g.append(\"text\")\n\t.attr(\"y\", \"39%\")\n\t.attr(\"x\", \"17%\")\n\t.attr(\"font-size\", \"14px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 800)\n  .attr(\"fill\", \"white\")\n  .text(\"From \" + data.time[0] + \" to \" + data.time[1])\n\n  \/\/ ~~~ About dataset ~~~\n  g.append(\"text\")\n\t.attr(\"y\", \"55%\")\n\t.attr(\"x\", \"20%\")\n\t.attr(\"font-size\", \"35px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 900)\n  .attr(\"fill\", \"white\")\n  .text(d3.format(\",.3s\")(data.datapoints))\n  g.append(\"text\")\n\t.attr(\"y\", \"55%\")\n\t.attr(\"x\", \"20%\")\n\t.attr(\"font-size\", \"20px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 500)\n  .attr(\"fill\", \"white\")\n  .attr(\"dy\", \"1.5em\")\n  .text(\"Engagement Datapoints\")\n\n  \/\/ ~~~ Missing data ~~~\n  var dt = {\"Not Missing\": 1-data.missing,\n            \"Missing\": data.missing}\n  var color = d3.scaleOrdinal(['#45caff', '#ff1b6b']);\n  var pie = d3.pie()\n    .value(function(d) {return d.value; })\n  var data_ready = pie(d3.entries(dt))\n\n  var arcGraph = g.selectAll('whatever')\n        .data(data_ready)\n        .enter()\n        .append('path')\n        .attr('d', d3.arc()\n          .innerRadius(38)\n          .outerRadius(55))\n        .attr('transform', \n          'translate('+(WIDTH\/1.5) +','+(HEIGHT\/1.45)+')')\n        .attr('fill', function(d, i) {return color(i);})\n        .style(\"opacity\", 0.7)      \n            \n  \/\/ Title\n  g.append(\"text\")\n\t.attr(\"y\", \"45%\")\n\t.attr(\"x\", \"58%\")\n\t.attr(\"font-size\", \"20px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 500)\n  .attr(\"fill\", \"white\")\n  .attr(\"dy\", \"1.5em\")\n  .text(\"Missing Data\")\n  g.append(\"text\")\n\t.attr(\"y\", \"38.5%\")\n\t.attr(\"x\", \"59%\")\n\t.attr(\"font-size\", \"22px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 900)\n  .attr(\"fill\", \"white\")\n  .attr(\"dy\", \"6.5em\")\n  .text(d3.format(\",.1%\")\t(data.missing))\n\n\n  \/\/ ~~~ Progress Bar ~~~\n  \/\/ Create bar\n  const segmentWidth = 230\n  g.append('rect')\n  .attr(\"x\", \"8%\")\n  .attr(\"y\", \"75%\")\n  .attr('class', 'bg-rect')\n  .attr('rx', 6)\n  .attr('ry', 10)\n  .attr('fill', '#45caff')\n  .attr('height', 20)\n  .attr('width', segmentWidth)\n  .attr(\"stroke\", \"#45caff\")\n  .style(\"stroke-width\", \"1.5px\")\n  .style(\"opacity\", 0.3)\n\n  var progress = g.append('rect')\n  .attr('class', 'progress-rect')\n  .attr('fill', '#45caff')\n  .attr('height', 20)\n  .attr('width', 0)\n  .attr('rx', 6)\n  .attr('ry', 10)\n  .attr(\"x\", \"8%\")\n  .attr(\"y\", \"75%\")\n  repeat()\n\n  \/\/ Repeat\n  function repeat() {\n    progress.attr('width', 0)\n    .transition()\n    .duration(4000)\n    .ease(d3.easeExpInOut)\n    .attr('width', function(){\n      var perc = data.student_load*100;\n      return (perc*segmentWidth)\/100;\n    })\n    .on(\"end\", repeat);\n  }\n  \/\/ Text Bar\n  g.append(\"text\")\n\t.attr(\"y\", \"74%\")\n\t.attr(\"x\", \"12%\")\n\t.attr(\"font-size\", \"15px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 700)\n  .attr(\"fill\", \"white\")\n  .text(\"LOADING...\")\n  g.append(\"text\")\n\t.attr(\"y\", \"74%\")\n\t.attr(\"x\", \"30%\")\n\t.attr(\"font-size\", \"15px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 700)\n  .attr(\"fill\", \"white\")\n  .text(d3.format(\",.1%\")(data.student_load))\n  \/\/ Explanation\n  g.append(\"text\")\n\t.attr(\"y\", \"83%\")\n\t.attr(\"x\", \"20%\")\n\t.attr(\"font-size\", \"15px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 400)\n  .attr(\"fill\", \"white\")\n  .text(\"Mean % of students in all districts that have\")\n  g.append(\"text\")\n\t.attr(\"y\", \"83%\")\n\t.attr(\"x\", \"20%\")\n\t.attr(\"font-size\", \"15px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 400)\n  .attr(\"fill\", \"white\")\n  .attr(\"dy\", \"1.5em\")\n  .text(\"at least one page load of a given products in a given day\")\n  \n\n  \/\/ ~~~ Loading Page ~~~\n  g.append(\"text\")\n\t.attr(\"y\", \"79%\")\n\t.attr(\"x\", \"60%\")\n\t.attr(\"font-size\", \"35px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 900)\n  .attr(\"fill\", \"white\")\n  .text(d3.format(\".4r\")(data.page_load))\n  g.append(\"text\")\n\t.attr(\"y\", \"79%\")\n\t.attr(\"x\", \"60%\")\n\t.attr(\"font-size\", \"15px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"dy\", \"1.5em\")\n  .attr(\"font-weight\", 500)\n  .attr(\"fill\", \"white\")\n  .text(\"Mean Page Loads\")\n  g.append(\"text\")\n\t.attr(\"y\", \"79%\")\n\t.attr(\"x\", \"60%\")\n\t.attr(\"font-size\", \"15px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 500)\n  .attr(\"fill\", \"white\")\n  .attr(\"dy\", \"3em\")\n  .text(\"per 1k Students in all districts\")\n  g.append(\"text\")\n\t.attr(\"y\", \"79%\")\n\t.attr(\"x\", \"60%\")\n\t.attr(\"font-size\", \"15px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 500)\n  .attr(\"fill\", \"white\")\n  .attr(\"dy\", \"4.5em\")\n  .text(\"on a given day\")\n});\n});'''\n\n\nh = display(HTML(htmlt1))\nj = py_display.Javascript(js_t1)\npy_display.display_javascript(j)","fff50cd2":"# Get district frequency per state data\nstates = districts[\"state\"].value_counts().reset_index()\nstates.columns = [\"State\", \"NoDistricts\"]\n\n# Get district frequency per locale data\nlocale = districts[\"locale\"].value_counts().reset_index()\nlocale.columns = [\"Locale\", \"NoDistricts\"]\n\n# Get state characteristics in terms of districts\ncharacteristics = districts.copy()\ncols = ['pct_black\/hispanic', 'pct_free\/reduced',\n        'county_connections_ratio', 'pp_total_raw']\nthresh = [0.5, 0.5, 0.5, 10000]\n\nfor col in cols:\n    characteristics[col] = characteristics[col].apply(lambda x: (x[0]+x[1])\/2)\n    \ncharacteristics = characteristics\\\n                .groupby([\"state\", \"Abbreviation\", \"Region\"])[cols]\\\n                .mean()\\\n                .reset_index()\n\nfor col, t in zip(cols, thresh):\n    characteristics[col] = np.where(pd.isnull(characteristics[col]) == True,\n                                    'Unclear', np.where(characteristics[col] >= t, \n                                    'Maximum', 'Partial'))\n    \ncharacteristics.columns = [\"State\", \"Abbreviation\", \"Region\",\n                           \"BlackHispanic\", \"FreeReducedLunch\",\n                           \"ConnectionRatio\", \"PerPupilExpenditure\"]\n\n# Save data\nstates.to_csv(\"states.csv\", index=False)\nlocale.to_csv(\"locale.csv\", index=False)\ncharacteristics.to_csv(\"characteristics.csv\", index=False)\n\n# W&B run + save info\nrun = wandb.init(project='C19-learn', name='dist_basics', \n                 config=CONFIG, anonymous=\"allow\")\n\ncreate_wandb_plot(x_data=states[\"State\"], y_data=states[\"NoDistricts\"], \n                  x_name=\"State\", y_name=\"NoDistricts\", \n                  title=\"District Frequency per States\",\n                  log=\"dist_state\", plot=\"bar\")\n\ncreate_wandb_plot(x_data=locale[\"Locale\"], y_data=locale[\"NoDistricts\"], \n                  x_name=\"Locale\", y_name=\"NoDistricts\", \n                  title=\"District Frequency per Locales\", \n                  log=\"dist_locale\", plot=\"bar\")\nwandb.finish()\n\nhtmlt2 = '''\n<!-- Bootstrap -->\n<link rel=\"stylesheet\" href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.4.1\/css\/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T\/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<!-- Style -->\n<style>\n\t.andradutza {\n\t\tfont-family: \"Times New Roman\", Times, serif;\n\t}\n\t.svg-container {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\tpadding-bottom: 100%;\n\t\tvertical-align: top;\n\t\toverflow: hidden;\n\t}\n\t.svg-content {\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\n\tline#limit {\n\tstroke: #B4C95A;\n\tstroke-width: 3;\n\tstroke-dasharray: 8 5;\n\t}\n\n\ttext.divergence {\n\tfont-size: 14px;\n\tfill: #000000;\n\t}\n\n\ttext.value {\n\tfont-size: 20px;\n\tfill: #000000;\n\t}\n\n\t.slider {\n\t-webkit-appearance: none; \n\tappearance: none;\n\twidth: 10%; \n\theight: 15px; \n\tbackground: #e7e7e7; \n\toutline: none;\n\topacity: 0.7; \n\tborder-radius: 6px;\n\t-webkit-transition: .2s; \n\ttransition: opacity .2s;\n\t}\n\n\t\/* Mouse-over effects *\/\n\t.slider:hover {\n\topacity: 1;\n\t}\n\n\t.slider::-webkit-slider-thumb {\n\t-webkit-appearance: none; \/* Override default look *\/\n\tappearance: none;\n\twidth: 15px; \/* Set a specific slider handle width *\/\n\theight: 15px; \/* Slider handle height *\/\n\tbackground: #1ACEE6; \/* Green background *\/\n\tcursor: round; \/* Cursor on hover *\/\n\tborder-radius: 6px;\n\t}\n\n\tdiv.tooltip-donut {\n\t\tposition: absolute;\n\t\ttext-align: center;\n\t\tpadding: .3rem;\n\t\tbackground: #FFFFFF;\n\t\tcolor: #000000;\n\t\tborder: 1px solid #000000;\n\t\tborder-radius: 8px;\n\t\tpointer-events: none;\n\t\tfont-size: 0.8rem;\n        z-index: 99999;\n\t}\n\n<\/style>\n\n<img id=\"baseimg\" src=\"usa.png\" style=\"display:none\" \/>\n<div class=\"andradutza\">\n\t<center><h1>Districts Overview<\/h1><\/center>\n    <div class=\"row\">\n\t\t<div class=\"rangeslider\">\n\t\t<\/div>\n\t\t<div id=\"map2\" class=\"svg-container\"><\/div>\n\t<\/div>\n\t<div class=\"row\">\n\t\t<input type=\"range\" min=\"1\" max=\"22\" \n\t\tvalue=\"10\" class=\"slider\" id=\"myRange\"\n\t\tonchange=\"updateTextInput(this.value);\">\n\t<\/div>\n<\/div>\n'''\n\n\n\n\njs_t2 = '''\nrequire.config({\n  paths: {\n    d3: \"https:\/\/d3js.org\/d3.v5.min\",\n    d3Array: \"https:\/\/d3js.org\/d3-array.v2.min\",\n  },\n});\n\nrequire([\"d3\", \"d3Array\"], function(d3, d3Array) {\n\n\/\/ Inject d3array methods to d3\nfor (var key in d3Array) {\n  d3[key] = d3Array[key];\n}\n\n\/\/ Get Assets URL set by Kaggle\nconst baseAssetsUrl = document.getElementById('baseimg').src.replace(\/usa.png.*$\/, '');\n\n\/\/ Set the SVG area\nconst MARGIN = { LEFT: 100, RIGHT: 10, TOP: 10, BOTTOM: 100 }\nconst WIDTH = 950 - MARGIN.LEFT - MARGIN.RIGHT\nconst HEIGHT = 900 - MARGIN.TOP - MARGIN.BOTTOM\n\nconst svg = d3.select(\"#map2\").append(\"svg\")\n  \/\/.attr(\"style\", \"outline: thin solid red;\")\n  .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n  .attr(\"viewBox\", \"0 0 950 900\")\n  .classed(\"svg-content\", true);\n\nconst g = svg.append(\"g\")\n  .attr(\"transform\", `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`)\n\n\n\/\/ === Bar ===\nd3.csv(baseAssetsUrl + \"states.csv\").then(function(data){ \n  \n  data.forEach(d => {\n    d.NoDistricts = Number(d.NoDistricts)\n  })\n\n  \/\/ Gradient\n  const defs = svg.append('defs');\n\n  const bgGradient = defs\n    .append('linearGradient')\n    .attr('id', 'bg-gradient')\n    .attr('gradientTransform', 'rotate(90)');\n  bgGradient\n    .append('stop')\n    .attr('stop-color', '#f7b227')\n    .attr('offset', '0%');\n  bgGradient\n    .append('stop')\n    .attr('stop-color', '#1be9df')\n    .attr('offset', '100%');\n\n  \/\/ Title\n  var title = g.append(\"text\")\n\t.attr(\"y\", \"3%\")\n\t.attr(\"x\", \"27%\")\n\t.attr(\"font-size\", \"18px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 600)\n  .text(\"Number of Districts per State\")\n\n  \/\/ Y label\n  const yLabel = g.append(\"text\")\n  .attr(\"class\", \"y axis-label\")\n  .attr(\"x\", -(HEIGHT\/7))\n  .attr(\"y\", -(30))\n  .attr(\"font-size\", \"15px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 600)\n  .attr(\"transform\", \"rotate(-90)\")\n  .text(\"Frequency\")\n\n  \/\/ Scales\n  const x = d3.scaleBand()\n    .range([0, WIDTH\/1.7])\n    .domain(data.map(d => d.State))\n    .paddingInner(0.3)\n    .paddingOuter(0.2)\n\n  const y = d3.scaleLinear()\n    .range([HEIGHT\/5, 0])\n    .domain([0, d3.max(data, d => d.NoDistricts)])\n\n  const xAxisGroup = g.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", `translate(0, ${HEIGHT\/4})`)\n\n  const yAxisGroup = g.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .attr(\"transform\", `translate(0, ${WIDTH\/22})`)\n\n  \/\/ Axis\n  const xAxisCall = d3.axisBottom(x)\n  xAxisGroup.call(xAxisCall)\n    .selectAll(\"text\")\n      .attr(\"y\", \"0\")\n      .attr(\"x\", \"-10\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", \"rotate(-50)\")\n\n  const yAxisCall = d3.axisLeft(y)\n    .ticks(7)\n    .tickFormat(d => d)\n  yAxisGroup.call(yAxisCall)\n\n  \/\/ Bar Chart\n  const rects = g.selectAll()\n    .data(data)\n    .enter().append('g')\n    .append(\"rect\")\n    .attr(\"transform\", `translate(0, ${WIDTH\/22})`)\n    .attr(\"y\", d => y(d.NoDistricts))\n    .attr(\"x\", d => x(d.State))\n    .attr('rx', 5)\n    .attr('ry', 4)\n    .attr(\"width\", x.bandwidth)\n    .attr(\"height\", d => HEIGHT\/5 - y(d.NoDistricts))\n    .style(\"fill\", \"url(#bg-gradient)\")\n    .style(\"fill\", \"url(#bg-gradient)\")\n    .style(\"stroke-width\", \"1px\")\n\n\n  \/\/ Interactive\n  var div = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip-donut\")\n    .style(\"opacity\", 0);\n\n  rects\n    .on('mouseenter', function (actual, i) {\n    \/\/ MOUSE ON\n    d3.selectAll('.value')\n          .attr('opacity', 0)\n\n    d3.select(this)\n        .transition()\n        .duration(100)\n        .attr('opacity', 0.3)\n        .attr('x', (a) => x(a.State) - 2.5)\n        .attr('width', x.bandwidth() + 5)\n\n    \/\/ Add line\n    const y_new = y(actual.NoDistricts)\n    var line = g.append('line')\n          .attr('id', 'limit')\n          .attr('x1', 0)\n          .attr('y1', y_new + 35)\n          .attr('x2', 500)\n          .attr('y2', y_new + 35)\n          .attr('stroke', '#B4C95A')\n\n    \/\/ Makes the new div appear\n    div.transition()\n        .duration(50)\n        .style(\"opacity\", 1);\n    let num = data[i].NoDistricts;\n    div.html(num)\n        .style(\"left\", (d3.event.pageX) + \"px\")\n        .style(\"top\", (d3.event.pageY-30) + \"px\");\n\n\n  })\n    \/\/ MOUSE LEAVE\n    .on('mouseleave', function () {\n      d3.selectAll('.value')\n          .attr('opacity', 1)\n\n      d3.select(this)\n      .transition()\n      .duration(100)\n      .attr('opacity', 1)\n      .attr('x', (a) => x(a.State))\n      .attr('width', x.bandwidth())\n\n      \/\/ New div dissapears\n      div.transition()\n          .duration('50')\n          .style(\"opacity\", 0);\n\n      g.selectAll('#limit').remove()\n      g.selectAll('.divergence').remove()\n    })\n\n});\n\n\/\/ === Pie ===\nd3.csv(baseAssetsUrl + \"locale.csv\").then(function(data){ \n\n  data.forEach(d => {\n    d.NoDistricts = Number(d.NoDistricts)\n  })\n\n  \/\/ Title\n  var title = g.append(\"text\")\n    .attr(\"y\", \"3%\")\n    .attr(\"x\", \"70%\")\n    .attr(\"font-size\", \"18px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 600)\n  .text(\"Locales Frequency\")\n\n  var color = d3.scaleOrdinal(['#1BE9DF', '#B4C95A',\n                                 '#F7B227', '#E16853'])\n\n  var dt = {\"Suburb\":104, \"Rural\":33,\n            \"City\":29, \"Town\":10}\n\n  var arc = d3.arc()\n    .innerRadius(55)\n    .outerRadius(89);\n\n  var pie = d3.pie()\n    .value(function (d) {\n        return d.value;\n    })\n\n  var div = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip-donut\")\n    .style(\"opacity\", 0);\n\n  \/\/ Pie\n  var path = g.selectAll('smth')\n  .data(pie(d3.entries(dt)))\n  .enter()\n  .append('path')\n  .attr('d', arc)\n  .attr('fill', function(d, i) {return color(i);})\n  .attr(\"stroke\", \"white\")\n    .style(\"stroke-width\", \"1px\")\n  .attr('transform', \n   'translate('+(WIDTH\/1.25) +','+(HEIGHT\/6.5)+')')\n   \/\/ INTERACTIVE\n  .on('mouseover', function (d, i) {\n      d3.select(this).transition()\n          .duration('50')\n          .attr('opacity', '.5');\n      \/\/ Makes the new div appear\n      div.transition()\n          .duration(50)\n          .style(\"opacity\", 1);\n      let num = data[i].NoDistricts;\n      div.html(num)\n          .style(\"left\", (d3.event.pageX + 10) + \"px\")\n          .style(\"top\", (d3.event.pageY - 15) + \"px\");\n\n  })\n  .on('mouseout', function (d, i) {\n      d3.select(this).transition()\n          .duration('50')\n          .attr('opacity', '1');\n      \/\/ New div dissapears\n      div.transition()\n          .duration('50')\n          .style(\"opacity\", 0);\n  });\n  \n\n  \/\/ Legend\n  var legendG = g.selectAll(\".legend\")\n    .data(pie(data))\n    .enter().append(\"g\")\n    .attr(\"transform\", function(d,i){\n      return 'translate(' + (WIDTH - 190) + \",\" + (i * 15+95) + ')'\n    })\n    .attr(\"class\", \"legend\");   \n\n  legendG.append(\"rect\")\n    .attr(\"width\", 12)\n    .attr(\"height\", 12)\n    .attr(\"fill\", function(d, i) {\n      return color(i);\n    })\n    .attr(\"stroke\", \"#white\")\n    .style(\"stroke-width\", \"1px\");\n\n  legendG.append(\"text\")\n    .text(function(d) {return d.data.Locale;})\n    .style(\"font-size\", 12)\n    .attr(\"y\", 10)\n    .attr(\"x\", 13);\n\n  \n});\n\n\/\/ === Wheel ===\nd3.csv(baseAssetsUrl + \"characteristics.csv\").then(function(data){\n\n  \/\/ Wheel Rotation\n  var rotate = document.getElementById(\"myRange\").value;\n\n  \/\/ Base Data\n  const regionOrder = [\"Northeast\", \"Midwest\", \"West\", \"South\"]\n  var wideData = data.sort(\n    (a, b) =>\n      d3.ascending(\n        regionOrder.indexOf(a.Region),\n        regionOrder.indexOf(b.Region)\n      ) || d3.ascending(a.Abbreviation, b.Abbreviation)\n  )\n\n  \/\/ === Constants ===\n  var rotation = (rotate \/ wideData.length) * Math.PI * 2\n  var categories = wideData.columns.slice(3)\n  var categoryOrder = categories.slice().reverse()\n  const innerRadius = 135\n  const outerRadius = WIDTH \/ 3\n  const colors = [\"#1acee6\", \"#5d6dba\", \"#af6eac\", \"#c1385c\"]\n\n  var grouped = d3.groups(wideData, d => d.Region)\n  var color = d3\n    .scaleOrdinal()\n    .domain(categories)\n    .range(colors)\n    .unknown(\"rgb(234,234,234)\")\n\n  \/\/ Scales\n  const x = d3\n    .scaleBand()\n    .domain(wideData.map(d => d.State))\n    .range([rotation, 2 * Math.PI + rotation])\n\n  const y = d3.scaleLinear()\n    .domain([0, categories.length])\n    .range([innerRadius, outerRadius])\n\n  \/\/ Regions Data\n  var regions = d3\n    .groups(wideData, d => d.Region)\n    .map(([region, states]) => {\n      const startAngle = x(states[0].State);\n      const endAngle = \n          x(states[states.length - 1].State) + x.bandwidth();\n      const labelAngle =\n        ((startAngle + endAngle) \/ 2 - Math.PI \/ 2) % (Math.PI * 2);\n      return {\n        region,\n        startAngle,\n        endAngle,\n        labelAngle\n      };\n    })\n\n  \/\/ Long Data (for main chart)\n  var longData = wideData.flatMap(row =>\n    categories.map(category => ({\n      state: row.State,\n      abbreviation: row.Abbreviation,\n      region: row.Region,\n      category,\n      status: row[category]\n    }))\n  )\n\n  \/\/ ARC\n  var arc = d3\n  .arc()\n  .innerRadius(d => y(categoryOrder.indexOf(d.category)))\n  .outerRadius(d => y(categoryOrder.indexOf(d.category) + 1))\n  .startAngle(d => x(d.state))\n  .endAngle(d => x(d.state) + x.bandwidth())\n  .padRadius(innerRadius)\n\n  \/\/ Label X and Y\n  var labelX = (angle, radius) => Math.cos(angle) * radius\n  var labelY = (angle, radius) => Math.sin(angle) * radius\n\n  \/\/ Banned X and Y\n  var bannedX = d =>\n    labelX(\n      x(d.state) + x.bandwidth() \/ 2 - Math.PI \/ 2,\n      y(categoryOrder.indexOf(d.category) + 0.5)\n    )\n  var bannedY = d =>\n    labelY(\n      x(d.state) + x.bandwidth() \/ 2 - Math.PI \/ 2,\n      y(categoryOrder.indexOf(d.category) + 0.5)\n    )\n\n\n  \/\/ ====================================\n  \/\/ =============== CHART ==============\n  \/\/ ====================================\n  const wheel = g.selectAll()\n  .data(longData)\n  .join(\"g\");\n\n  wheel.append(\"path\")\n    .attr(\"d\", arc)\n    .attr(\"stroke\", \"white\")\n    .attr(\"fill\", d =>\n      color([\"Maximum\", \"Partial\"]\n      .includes(d.status) ? d.category : null))\n    .attr(\"fill-opacity\", \n      d => (d.status === \"Partial\" ? 0.4 : 1))\n    .attr('transform', \n    'translate('+(WIDTH\/2.2) +','+(HEIGHT\/1.35)+')');\n\n  wheel\n    .append(\"title\")\n    .text(d => `${d.state}: ${d.category}, ${d.status}`);\n\n  \/\/ Region Labels\n  var labelArc = d3\n  .arc()\n  .innerRadius(innerRadius - 20)\n  .outerRadius(innerRadius - 20)\n  .startAngle(d => d.startAngle)\n  .endAngle(d => d.endAngle)\n\n  \/\/ State Labels\n  wheel\n    .append(\"g\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"fill\", \"#888\")\n    .selectAll(\"text\")\n    .data(wideData)\n    .join(\"text\")\n    .attr(\"x\", d =>\n      labelX(x(d.State) + x.bandwidth() \/ 2 - Math.PI \/ 2, outerRadius + 16)\n    )\n    .attr(\"y\", d =>\n      labelY(x(d.State) + x.bandwidth() \/ 2 - Math.PI \/ 2, outerRadius + 16)\n    )\n    .attr(\"dy\", \"0.31em\")\n    .text(d => d.Abbreviation)\n    .attr('transform', \n    'translate('+(WIDTH\/2.2) +','+(HEIGHT\/1.35)+')');\n\n  \/\/ LEGEND\n  const legend = g\n    .selectAll(\"wheel\")\n    .data(categories.concat([\"Unclear\"]))\n    .join(\"g\")\n    .attr(\n      \"transform\",\n      (d, i) => `translate(325,\n          ${(i - ((categories.length + 1)\/5)+28) * 20})`\n    );\n\n  legend\n    .filter(d => categories.includes(d))\n    .append(\"rect\")\n    .attr(\"x\", -50)\n    .attr(\"width\", 36)\n    .attr(\"height\", 18)\n    .style(\"opacity\", 0.4)\n    .attr(\"fill\", color);\n\n  legend\n    .append(\"rect\")\n    .attr(\"x\", 0)\n    .attr(\"width\", 30)\n    .attr(\"height\", 18)\n    .attr(\"fill\", color);\n\n  legend\n    .append(\"text\")\n    .attr(\"x\", 42)\n    .attr(\"y\", 9)\n    .attr(\"dy\", \"0.35em\")\n    .attr(\"font-size\", \"12px\")\n    .text(d => d);\n\n  g.append(\"text\")\n    .attr(\"y\", \"59.4%\")\n    .attr(\"x\", \"31%\")\n    .attr(\"font-size\", \"12px\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"font-weight\", 100)\n    .text(\"<50%\")\n\n  g.append(\"text\")\n    .attr(\"y\", \"59.4%\")\n    .attr(\"x\", \"36%\")\n    .attr(\"font-size\", \"12px\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"font-weight\", 100)\n    .text(\">50%\")\n\n  \/\/ Title\n  g.append(\"text\")\n    .attr(\"y\", \"37%\")\n    .attr(\"x\", \"75%\")\n    .attr(\"font-size\", \"20px\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"font-weight\", 600)\n    .text(\"State\")\n  g.append(\"text\")\n    .attr(\"y\", \"37%\")\n    .attr(\"x\", \"75%\")\n    .attr(\"dy\", \"1.5em\")\n    .attr(\"font-size\", \"20px\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"font-weight\", 600)\n    .text(\"Characteristics\")\n});\n\n});'''\n\n\nh = display(HTML(htmlt2))\nj = py_display.Javascript(js_t2)\npy_display.display_javascript(j)","9b3c1996":"timeline = df[[\"time\", \"pct_access\", \"district_id\"]]\n\n# Make district_id string\ndistricts[\"district_id\"] = districts[\"district_id\"].astype(str)\n\n# *Some rows are missing\nstate_filter = [\"CT\", \"UT\", \"MA\", \"IL\", \"CA\", \"OH\", \"NY\", \"IN\", \"WA\", \"MO\"]\ntimeline = pd.merge(left=timeline, right=districts,\n                    on=\"district_id\", how=\"inner\")\ntimeline = timeline.groupby([\"time\", \"Abbreviation\"])[\"pct_access\"]\\\n                    .median().reset_index()\ntimeline[\"pct_access\"] = timeline[\"pct_access\"] * 100\n\n# Filter top 10 states\ntimeline = timeline[timeline[\"Abbreviation\"].isin(state_filter)]\n\n# Pivot states on columns\ntimeline = pd.pivot(timeline, index=\"time\",\n                    columns=\"Abbreviation\", values=\"pct_access\")\\\n                    .reset_index()\ntimeline = timeline.fillna(0)\n\n# Convert from string to number\nstring_date = timeline[\"time\"]\ntimeline.insert(0, 'time2', string_date)\ntimeline[\"time\"] = pd.to_datetime(timeline[\"time\"]).apply(lambda x: x.value)\nfor col in timeline.columns[1:]: \n    timeline[col] = timeline[col].astype(\"int64\")\n\n# Save to .csv\ntimeline.to_csv(\"timeline.csv\", index=False)\n\n# Save usa.png img as well\nim = imageio.imread('..\/input\/covid19-education-data\/schoolbreak.png')\nImage.fromarray(im).save(\"schoolbreak.png\")\n\n\nhtmlt3 = '''\n<!-- Bootstrap -->\n<link rel=\"stylesheet\" href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.4.1\/css\/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T\/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<!-- Style -->\n<style>\n\t.andradutza {\n\t\tfont-family: \"Times New Roman\", Times, serif;\n\t}\n\t.svg-container {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\tpadding-bottom: 100%;\n\t\tvertical-align: top;\n\t\toverflow: hidden;\n\t}\n\t.svg-content {\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\t.area-label {\n        font-family: sans-serif;\n        fill-opacity: 1;\n        fill: white;\n      }\n\n<\/style>\n\n<img id=\"baseimg\" src=\"usa.png\" style=\"display:none\" \/>\n<div class=\"andradutza\">\n\t<center><h1>School Timeline 2020<\/h1><\/center>\n\t<center><h4>-Median Daily Student Activity per Product-<\/h4><\/center>\n    <div class=\"row\">\n\t\t<div id=\"map3\" class=\"svg-container\"><\/div>\n\t<\/div>\n<\/div>\n'''\n\n\njs_t3 = '''\nrequire.config({\n  paths: {\n    d3v6: \"https:\/\/d3js.org\/d3.v6.min\",\n    moment: \"https:\/\/unpkg.com\/moment@2.29.1\/moment\",\n  }\n});\n\nrequire([\"d3v6\", \"moment\"], function(d3, moment) {\n\n\/\/ Get Assets URL set by Kaggle\nconst baseAssetsUrl = document.getElementById('baseimg').src.replace(\/usa.png.*$\/, '');\n\n\/\/ Set the SVG area\nconst margin = { LEFT: 100, RIGHT: 10, TOP: 10, BOTTOM: 100 }\nconst width = 950 - margin.LEFT - margin.RIGHT\nconst height = 900 - margin.TOP - margin.BOTTOM\nconst chart_size = 35\n\nconst svg = d3.select(\"#map3\").append(\"svg\")\n  \/\/ .attr(\"style\", \"outline: thin solid red;\")\n  .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n  .attr(\"viewBox\", \"0 0 950 900\")\n  .classed(\"svg-content\", true)\n  .attr(\"transform\",\n   `translate(${margin.LEFT}, ${margin.TOP})`)\n\n\nsvg.append(\"image\")\n.attr(\"xlink:href\", baseAssetsUrl + \"schoolbreak.png\")\n    .attr(\"x\", \"-1%\")\n    .attr(\"y\", \"41%\")\n    .attr(\"width\", 280)\n    .attr(\"height\", 200)\n    .style(\"opacity\", 1);\n\n\nd3.csv(baseAssetsUrl + \"timeline.csv\").then((data) => {\n  \n  \/\/ List of groups = header of the csv files\n  var keys = data.columns.slice(2)\n  var days = [\"Mar 16\",\"Mar 24\",\"Jun 12\",\"Sep 10\"];\n  var formatDay = (d, i) => {\n      return days[i];      \n  }\n\n  \/\/ Stacking\n  var series = d3.stack()\n    .keys(keys)\n    .offset(d3.stackOffsetSilhouette)\n    (data)\n\n  \/\/ Area Chart\n  var area = d3.area()\n  .y(d => y(d.data.time))\n  .x0(d => x(d[0]))\n  .x1(d => x(d[1]))\n\n  \/\/ X and Y axis\n  var y = d3.scaleLinear()\n    .domain(d3.extent(data, d => d.time))\n    .range([0, width])\n\n  var x = d3.scaleLinear()\n  .domain([-chart_size, chart_size])\n  .range([height, 0])\n\n  \/\/ Color\n  const color = d3.scaleOrdinal()\n    .domain(keys)\n    .range([\"#db222a\", \"#e16853\", \"#f7b227\", \"#b4c95a\", \n              \"#1be9df\", \"#1acee6\", \"#5d6dba\", \n              \"#5c4d86\", \"#af6eac\", \"#c1385c\"])\n\n  \/\/ X axis placement\n  var yAxis = g => g\n    .attr(\"transform\", \"translate(0,\" + (height\/2-1) + \")\")\n    .call(d3.axisLeft(y)\n            .tickSize(-height+100)\n            .tickValues([1584316800000000000,1585008000000000000,\n              1591920000000000000, 1599696000000000000])\n            .tickFormat(formatDay)\n            )\n    .call(g => g.select(\".domain\").remove())\n    .call(g => g.selectAll(\".tick line\")\n                .attr(\"stroke\", \"#989898\")\n                .attr('stroke-dasharray', '5 5'))\n    .call(g => g.selectAll(\".tick\")\n                .select('text')\n                .attr('fill', \"#989898\")\n                .style(\"font-size\", 13))\n                .attr(\"transform\", \"translate(50,0)\")\n\n  \/\/ Show\n  const path = svg.append(\"g\")\n    .selectAll(\"path\")\n    .data(series)\n    .join(\"path\")\n      .attr(\"data-genre\", d => d.key)\n      .attr(\"fill\", ({key}) => color(key))\n      .attr(\"d\", area)\n      .attr(\"opacity\", 0.8)\n\n  svg.append(\"g\")\n      .call(yAxis)\n\n  \/\/ ======================================\n  const hover = (svg, path) => {\n  \n    const line = svg.append(\"g\")\n         .attr(\"display\", \"none\");\n  \n    line.append(\"g\")\n        .selectAll(\"line\")\n        .data(series)\n        .join(\"line\")\n        .attr(\"class\", \"cursor-line\")\n        .attr(\"fill\", \"#fff\")\n        .attr(\"stroke-width\", 0.8)\n        .attr(\"y1\", 10)\n        .attr(\"x1\", width-50)\n        .attr(\"y2\", 10)\n        .attr(\"x2\", 10);\n  \n    line.append(\"text\")\n        .attr(\"class\", \"text-year\")\n        .attr(\"font-size\", 13)\n        .attr(\"x\", 0)\n        .attr(\"y\", 26)\n        .attr(\"transform\", \n        \"rotate(0 0 0) translate(10, -20)\");\n    \n    line.append(\"g\")\n        .selectAll(\"text\")\n        .data(series)\n        .join(\"text\")\n        .attr(\"class\", \"text-genre\")\n        .attr(\"font-weight\", \"bold\")\n        .attr(\"font-size\", 13)\n        .attr(\"x\", width\/2+350)\n        .attr(\"y\", 26)\n        .attr(\"transform\", \n        \"rotate(0 0 10)\");\n\n    line.append(\"g\")\n        .selectAll(\"text\")\n        .data(data)\n        .join(\"text\")\n        .attr(\"class\", \"text-rating\")\n        .attr(\"font-size\", 13)\n        .attr(\"x\", width\/2+335)\n        .attr(\"y\", 1);\n\n    const mousemove = (event) => {\n  \n      event?.preventDefault();\n      \/\/ pointer = [posX, posY]\n      const pointer = d3.pointer(event);\n          \n      const xm = x.invert(pointer[0]);\n      const ym = y.invert(pointer[1]);\n      const genre = d3.select(event.target).attr(\"data-genre\");\n  \n      line.attr(\"transform\", `translate(0 ${pointer[1]})`)\n          .style(\"visibility\", \"inherit\");\n      \n      const dateFormatted = moment.unix(parseInt(ym)\/1e9).format(\"MMM Do\");\n      line.select(\".text-year\")\n        .text(dateFormatted);\n      \n      line.selectAll(\".text-rating\")\n        .text(d => {\n          return Math.floor(parseInt(d.time)\/(24*60*60*1e9)) === Math.floor(parseInt(ym)\/(24*60*60*1e9)) ? (d[genre]\/100)+\"%\" : \"\";\n        });\n\n      line.selectAll(\".text-genre\")\n        .style(\"visibility\", \"hidden\")\n        .filter(d => d.key === genre)\n        .style(\"visibility\", \"inherit\")\n        .attr(\"fill\", d => d.key === genre ? color(d.key) : \"#000\")\n        .text(genre);\n      \n      line.selectAll(\".cursor-line\")\n        .attr(\"stroke\", \"fff0\")\n        .filter(d => d.key === genre)\n        .attr(\"stroke\", d => d.key === genre ? color(d.key) : \"#fff0\")\n      \n      path.attr(\"opacity\", d => d.key === genre ? 0.8 : 0.3);\n      \n      if (genre === null) {\n        path.attr(\"opacity\", 0.8);\n        line.style(\"visibility\", \"hidden\");\n      }\n    }\n\n    const mouseenter = () => {\n      line.attr(\"display\", null);\n    }\n  \n    const mouseleave = () => {\n      line.attr(\"display\", \"none\");\n    }\n\n    svg\n        .on(\"mousemove\", mousemove)\n        .on(\"mouseenter\", mouseenter)\n        .on(\"mouseleave\", mouseleave)\n\n  }\n\n  svg.call(hover, path);\n\n  \/\/ Pandemic Start\n  svg.append(\"text\")\n  .attr(\"x\", \"42%\")\n  .attr(\"y\", \"21%\")\n  .attr(\"font-size\", \"20px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 900)\n  .style(\"pointer-events\", \"none\")\n  .text(\"Pandemic Start\");\n\n  \/\/ Increase\n  svg.append(\"text\")\n  .attr(\"x\", \"10%\")\n  .attr(\"y\", \"30%\")\n  .attr(\"font-size\", \"13px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 900)\n  .text(\"Increase for all states\");\n\n  svg.append(\"text\")\n  .attr(\"x\", \"10%\")\n  .attr(\"y\", \"30%\")\n  .attr(\"dy\", \"1.5em\")\n  .attr(\"font-size\", \"10px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 100)\n  .text(\"There can be seen an increase\");\n  svg.append(\"text\")\n  .attr(\"x\", \"10%\")\n  .attr(\"y\", \"30%\")\n  .attr(\"dy\", \"2.5em\")\n  .attr(\"font-size\", \"10px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 100)\n  .text(\"in activity for all states\");\n  svg.append(\"text\")\n  .attr(\"x\", \"10%\")\n  .attr(\"y\", \"30%\")\n  .attr(\"dy\", \"3.5em\")\n  .attr(\"font-size\", \"10px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 100)\n  .text(\"after the official start of the pandemic.\");\n\n  \/\/ Arrow\n  svg.append(\"svg:defs\").append(\"svg:marker\")\n  .attr(\"id\", \"triangle\")\n  .attr(\"refX\", 6)\n  .attr(\"refY\", 6)\n  .attr(\"markerWidth\", 30)\n  .attr(\"markerHeight\", 30)\n  .attr(\"markerUnits\",\"userSpaceOnUse\")\n  .attr(\"orient\", \"auto\")\n  .append(\"path\")\n  .attr(\"d\", \"M 0 0 12 6 0 12 3 6\")\n  .style(\"fill\", \"#989898\");\n\n  svg.append(\"path\")\n    .attr('d', d3.line()([[40, 250], [150, 250]]))\n    .attr(\"stroke-width\", 2)\n    .attr(\"stroke\", \"#989898\")\n    .attr(\"marker-end\", \"url(#triangle)\");\n\n  \/\/ Decrease\n  svg.append(\"text\")\n  .attr(\"x\", \"74%\")\n  .attr(\"y\", \"76%\")\n  .attr(\"font-size\", \"13px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 900)\n  .text(\"Decrease in activity\");\n\n  svg.append(\"text\")\n  .attr(\"x\", \"74%\")\n  .attr(\"y\", \"76%\")\n  .attr(\"dy\", \"1.5em\")\n  .attr(\"font-size\", \"10px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 100)\n  .text(\"There can be seen a decrease in activity\");\n  svg.append(\"text\")\n  .attr(\"x\", \"74%\")\n  .attr(\"y\", \"76%\")\n  .attr(\"dy\", \"2.5em\")\n  .attr(\"font-size\", \"10px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 100)\n  .text(\"for the new academic year 2020-2021.\");\n\n  svg.append(\"path\")\n    .attr('d', d3.line()([[790, 720], [620, 720]]))\n    .attr(\"stroke-width\", 2)\n    .attr(\"stroke\", \"#989898\")\n    .attr(\"marker-end\", \"url(#triangle)\");\n\n});\n\n});\n'''\n\nh = display(HTML(htmlt3))\nj = py_display.Javascript(js_t3)\npy_display.display_javascript(j)","a73bf618":"timeline2 = df[[\"time\", \"engagement_index\", \"district_id\"]]\n\n# *Some rows are missing\nstate_filter = [\"CT\", \"UT\", \"MA\", \"IL\", \"CA\", \"OH\", \"NY\", \"IN\", \"WA\", \"MO\"]\ntimeline2 = pd.merge(left=timeline2, right=districts,\n                    on=\"district_id\", how=\"inner\")\ntimeline2 = timeline2.groupby([\"time\", \"Abbreviation\"])[\"engagement_index\"]\\\n                    .median().reset_index()\n\n# Filter top 10 states\ntimeline2 = timeline2[timeline2[\"Abbreviation\"].isin(state_filter)]\n\n# Pivot states on columns\ntimeline2 = pd.pivot(timeline2, index=\"time\",\n                    columns=\"Abbreviation\", values=\"engagement_index\")\\\n                    .reset_index()\ntimeline2 = timeline2.fillna(0)\n\n# Convert from string to number\nstring_date = timeline2[\"time\"]\ntimeline2.insert(0, 'time2', string_date)\ntimeline2[\"time\"] = pd.to_datetime(timeline2[\"time\"]).apply(lambda x: x.value)\nfor col in timeline2.columns[1:]: \n    timeline2[col] = timeline2[col].astype(\"int64\")\n\n# Save to .csv\ntimeline2.to_csv(\"timeline2.csv\", index=False)\n\n\nhtmlt4 = '''\n<!-- Bootstrap -->\n<link rel=\"stylesheet\" href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.4.1\/css\/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T\/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<!-- Style -->\n<style>\n\t.andradutza {\n\t\tfont-family: \"Times New Roman\", Times, serif;\n\t}\n\t.svg-container {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\tpadding-bottom: 100%;\n\t\tvertical-align: top;\n\t\toverflow: hidden;\n\t}\n\t.svg-content {\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\t.area-label {\n        font-family: sans-serif;\n        fill-opacity: 1;\n        fill: white;\n      }\n<\/style>\n\n<img id=\"baseimg\" src=\"usa.png\" style=\"display:none\" \/>\n<div class=\"andradutza\">\n\t<center><h1>School Timeline 2020<\/h1><\/center>\n\t<center><h4>-Median Daily Student Engagement per Product-<\/h4><\/center>\n    <div class=\"row\">\n\t\t<div id=\"map31\" class=\"svg-container\"><\/div>\n\t<\/div>\n<\/div>\n'''\n\n\njs_t4 = '''\nrequire.config({\n  paths: {\n    d3v6: \"https:\/\/d3js.org\/d3.v6.min\",\n    moment: \"https:\/\/unpkg.com\/moment@2.29.1\/moment\",\n  }\n});\n\nrequire([\"d3v6\", \"moment\"], function(d3, moment) {\n\n\/\/ Get Assets URL set by Kaggle\nconst baseAssetsUrl = document.getElementById('baseimg').src.replace(\/usa.png.*$\/, '');\n\n\/\/ Set the SVG area\nconst margin = { LEFT: 100, RIGHT: 10, TOP: 10, BOTTOM: 100 }\nconst width = 950 - margin.LEFT - margin.RIGHT\nconst height = 900 - margin.TOP - margin.BOTTOM\nconst chart_size = 35\n\nconst svg = d3.select(\"#map31\").append(\"svg\")\n  \/\/ .attr(\"style\", \"outline: thin solid red;\")\n  .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n  .attr(\"viewBox\", \"0 0 950 900\")\n  .classed(\"svg-content\", true)\n  .attr(\"transform\",\n   `translate(${margin.LEFT}, ${margin.TOP})`)\n\n\nsvg.append(\"image\")\n.attr(\"xlink:href\", baseAssetsUrl + \"schoolbreak.png\")\n    .attr(\"x\", \"-1%\")\n    .attr(\"y\", \"41%\")\n    .attr(\"width\", 280)\n    .attr(\"height\", 200)\n    .style(\"opacity\", 1);\n\n\nd3.csv(baseAssetsUrl + \"timeline2.csv\").then((data) => {\n  \n  \/\/ List of groups = header of the csv files\n  var keys = data.columns.slice(2)\n  var days = [\"Mar 16\",\"Mar 24\",\"Jun 12\",\"Sep 10\"];\n  var formatDay = (d, i) => {\n      return days[i];      \n  }\n\n  \/\/ Stacking\n  var series = d3.stack()\n    .keys(keys)\n    .offset(d3.stackOffsetSilhouette)\n    (data)\n\n  \/\/ Area Chart\n  var area = d3.area()\n  .y(d => y(d.data.time))\n  .x0(d => x(d[0]))\n  .x1(d => x(d[1]))\n\n  \/\/ X and Y axis\n  var y = d3.scaleLinear()\n    .domain(d3.extent(data, d => d.time))\n    .range([0, width])\n\n  var x = d3.scaleLinear()\n  .domain([-chart_size, chart_size])\n  .range([height, 0])\n\n  \/\/ Color\n  const color = d3.scaleOrdinal()\n    .domain(keys)\n    .range([\"#db222a\", \"#e16853\", \"#f7b227\", \"#b4c95a\", \n              \"#1be9df\", \"#1acee6\", \"#5d6dba\", \n              \"#5c4d86\", \"#af6eac\", \"#c1385c\"])\n\n  \/\/ X axis placement\n  var yAxis = g => g\n    .attr(\"transform\", \"translate(0,\" + (height\/2-1) + \")\")\n    .call(d3.axisLeft(y)\n            .tickSize(-height+100)\n            .tickValues([1584316800000000000,1585008000000000000,\n              1591920000000000000, 1599696000000000000])\n            .tickFormat(formatDay)\n            )\n    .call(g => g.select(\".domain\").remove())\n    .call(g => g.selectAll(\".tick line\")\n                .attr(\"stroke\", \"#989898\")\n                .attr('stroke-dasharray', '5 5'))\n    .call(g => g.selectAll(\".tick\")\n                .select('text')\n                .attr('fill', \"#989898\")\n                .style(\"font-size\", 13))\n                .attr(\"transform\", \"translate(50,0)\")\n\n  \/\/ Show\n  const path = svg.append(\"g\")\n    .selectAll(\"path\")\n    .data(series)\n    .join(\"path\")\n      .attr(\"data-genre\", d => d.key)\n      .attr(\"fill\", ({key}) => color(key))\n      .attr(\"d\", area)\n      .attr(\"opacity\", 0.8)\n\n  svg.append(\"g\")\n      .call(yAxis)\n\n  \/\/ ======================================\n  const hover = (svg, path) => {\n  \n    const line = svg.append(\"g\")\n         .attr(\"display\", \"none\");\n  \n    line.append(\"g\")\n        .selectAll(\"line\")\n        .data(series)\n        .join(\"line\")\n        .attr(\"class\", \"cursor-line\")\n        .attr(\"fill\", \"#fff\")\n        .attr(\"stroke-width\", 0.8)\n        .attr(\"y1\", 10)\n        .attr(\"x1\", width-50)\n        .attr(\"y2\", 10)\n        .attr(\"x2\", 10);\n  \n    line.append(\"text\")\n        .attr(\"class\", \"text-year\")\n        .attr(\"font-size\", 13)\n        .attr(\"x\", 0)\n        .attr(\"y\", 26)\n        .attr(\"transform\", \n        \"rotate(0 0 0) translate(10, -20)\");\n    \n    line.append(\"g\")\n        .selectAll(\"text\")\n        .data(series)\n        .join(\"text\")\n        .attr(\"class\", \"text-genre\")\n        .attr(\"font-weight\", \"bold\")\n        .attr(\"font-size\", 13)\n        .attr(\"x\", width\/2+350)\n        .attr(\"y\", 26)\n        .attr(\"transform\", \n        \"rotate(0 0 10)\");\n\n    line.append(\"g\")\n        .selectAll(\"text\")\n        .data(data)\n        .join(\"text\")\n        .attr(\"class\", \"text-rating\")\n        .attr(\"font-size\", 13)\n        .attr(\"x\", width\/2+237)\n        .attr(\"y\", 1);\n\n    const mousemove = (event) => {\n  \n      event?.preventDefault();\n      \/\/ pointer = [posX, posY]\n      const pointer = d3.pointer(event);\n          \n      const xm = x.invert(pointer[0]);\n      const ym = y.invert(pointer[1]);\n      const genre = d3.select(event.target).attr(\"data-genre\");\n  \n      line.attr(\"transform\", `translate(0 ${pointer[1]})`)\n          .style(\"visibility\", \"inherit\");\n      \n      const dateFormatted = moment.unix(parseInt(ym)\/1e9).format(\"MMM Do\");\n      line.select(\".text-year\")\n        .text(dateFormatted);\n      \n      line.selectAll(\".text-rating\")\n        .text(d => {\n          return Math.floor(parseInt(d.time)\/(24*60*60*1e9)) === Math.floor(parseInt(ym)\/(24*60*60*1e9)) ? d[genre]+\" page loads\/ 1k students\" : \"\";\n        });\n\n      line.selectAll(\".text-genre\")\n        .style(\"visibility\", \"hidden\")\n        .filter(d => d.key === genre)\n        .style(\"visibility\", \"inherit\")\n        .attr(\"fill\", d => d.key === genre ? color(d.key) : \"#000\")\n        .text(genre);\n      \n      line.selectAll(\".cursor-line\")\n        .attr(\"stroke\", \"fff0\")\n        .filter(d => d.key === genre)\n        .attr(\"stroke\", d => d.key === genre ? color(d.key) : \"#fff0\")\n      \n      path.attr(\"opacity\", d => d.key === genre ? 0.8 : 0.3);\n      \n      if (genre === null) {\n        path.attr(\"opacity\", 0.8);\n        line.style(\"visibility\", \"hidden\");\n      }\n    }\n\n    const mouseenter = () => {\n      line.attr(\"display\", null);\n    }\n  \n    const mouseleave = () => {\n      line.attr(\"display\", \"none\");\n    }\n\n    svg\n        .on(\"mousemove\", mousemove)\n        .on(\"mouseenter\", mouseenter)\n        .on(\"mouseleave\", mouseleave)\n\n  }\n\n  svg.call(hover, path);\n\n  \/\/ Pandemic Start\n  svg.append(\"text\")\n  .attr(\"x\", \"42%\")\n  .attr(\"y\", \"21%\")\n  .attr(\"font-size\", \"20px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 900)\n  .style(\"pointer-events\", \"none\")\n  .text(\"Pandemic Start\");\n\n  \/\/ Annomaly 11 April NY\n  svg.append(\"text\")\n  .attr(\"x\", \"10%\")\n  .attr(\"y\", \"32%\")\n  .attr(\"font-size\", \"13px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 900)\n  .text(\"New York Spike in Ed. Products\");\n  svg.append(\"text\")\n  .attr(\"x\", \"10%\")\n  .attr(\"y\", \"32%\")\n  .attr(\"dy\", \"1em\")\n  .attr(\"font-size\", \"12px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 900)\n  .text(\"11th April\");\n\n  svg.append(\"text\")\n  .attr(\"x\", \"10%\")\n  .attr(\"y\", \"32%\")\n  .attr(\"dy\", \"2.5em\")\n  .attr(\"font-size\", \"10px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 100)\n  .text(\"Most proeminent products were\");\n  svg.append(\"text\")\n  .attr(\"x\", \"10%\")\n  .attr(\"y\", \"32%\")\n  .attr(\"dy\", \"3.5em\")\n  .attr(\"font-size\", \"10px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 100)\n  .text(\"Google Docs\/Drive\/Forms\/Sheets\/Classroom\");\n  svg.append(\"text\")\n  .attr(\"x\", \"10%\")\n  .attr(\"y\", \"32%\")\n  .attr(\"dy\", \"4.5em\")\n  .attr(\"font-size\", \"10px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 100)\n  .text(\"Duolingo, CoolMath Games & SoundCloud\");\n\n  \/\/ Arrow\n  svg.append(\"svg:defs\").append(\"svg:marker\")\n  .attr(\"id\", \"triangle\")\n  .attr(\"refX\", 6)\n  .attr(\"refY\", 6)\n  .attr(\"markerWidth\", 30)\n  .attr(\"markerHeight\", 30)\n  .attr(\"markerUnits\",\"userSpaceOnUse\")\n  .attr(\"orient\", \"auto\")\n  .append(\"path\")\n  .attr(\"d\", \"M 0 0 12 6 0 12 3 6\")\n  .style(\"fill\", \"#989898\");\n\n  svg.append(\"path\")\n    .attr('d', d3.line()([[100, 275], [100, 240]]))\n    .attr(\"stroke-width\", 2)\n    .attr(\"stroke\", \"#989898\")\n    .attr(\"marker-end\", \"url(#triangle)\");\n\n\n  \/\/ Annomaly 11 April NY\n  svg.append(\"text\")\n  .attr(\"x\", \"74%\")\n  .attr(\"y\", \"76%\")\n  .attr(\"font-size\", \"13px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 900)\n  .text(\"Slight overall decrease\");\n\n  svg.append(\"text\")\n  .attr(\"x\", \"74%\")\n  .attr(\"y\", \"76%\")\n  .attr(\"dy\", \"1.5em\")\n  .attr(\"font-size\", \"10px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 100)\n  .text(\"There is a decrease in activity for all states\");\n  svg.append(\"text\")\n  .attr(\"x\", \"74%\")\n  .attr(\"y\", \"76%\")\n  .attr(\"dy\", \"2.5em\")\n  .attr(\"font-size\", \"10px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 100)\n  .text(\"in the new Academic Year 2020-2021.\");\n\n  svg.append(\"path\")\n    .attr('d', d3.line()([[635, 680], [570, 680]]))\n    .attr(\"stroke-width\", 2)\n    .attr(\"stroke\", \"#989898\")\n    .attr(\"marker-end\", \"url(#triangle)\");\n});\n\n});\n'''\n\nh = display(HTML(htmlt4))\nj = py_display.Javascript(js_t4)\npy_display.display_javascript(j)","0c8a5a94":"# Prepare the data\nus = pd.merge(df, districts, on=\"district_id\", how=\"inner\")\n\nus = us[us[\"holiday\"] == 0]\\\n    .groupby([\"time\", \"lp_id\", \"state\", \"Abbreviation\"])[\"engagement_index\"]\\\n    .median().reset_index()\\\n    .groupby([\"state\", \"Abbreviation\"])[\"engagement_index\"]\\\n    .median().reset_index()\n\n# Map the rest of the states\nmapping = pd.read_csv(\"..\/input\/usa-states-to-region\/states.csv\")\nus = pd.merge(mapping, us, left_on=\"State\", \n         right_on=\"state\", how=\"left\").\\\n        drop(columns=[\"Region\", \"Division\", \"state\", \"Abbreviation\"]).\\\n        fillna(0)\nus.columns = [\"state\",\"Abbreviation\",\"engagement_index\"]\n\nus.to_csv(\"us.csv\", index=False)\n\n# W&B run + save info\nrun = wandb.init(project='C19-learn', name='state_engagement', \n                 config=CONFIG, anonymous=\"allow\")\n\ncreate_wandb_plot(x_data=us[\"Abbreviation\"], \n                  y_data=us[\"engagement_index\"], \n                  x_name=\"State\", y_name=\"Engagement\", \n                  title=\"2020 States Engagement\",\n                  log=\"eng_state\", plot=\"bar\")\n\nwandb.finish()\n\nhtmlt5 = '''\n<!-- Bootstrap -->\n<link rel=\"stylesheet\" href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.4.1\/css\/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T\/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<!-- Style -->\n<style>\n\t.andradutza {\n\t\tfont-family: \"Times New Roman\", Times, serif;\n\t}\n\t.svg-container {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\tpadding-bottom: 100%;\n\t\tvertical-align: top;\n\t\toverflow: hidden;\n\t}\n\t.svg-content {\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\n\tline#limit {\n\tstroke: #b4c95a;\n\tstroke-width: 3;\n\tstroke-dasharray: 8 5;\n\t}\n\n\ttext.divergence {\n\tfont-size: 14px;\n\tfill: #000000;\n\t}\n\n\ttext.value {\n\tfont-size: 20px;\n\tfill: #000000;\n\t}\n\n\t.slider {\n\t-webkit-appearance: none; \n\tappearance: none;\n\twidth: 10%; \n\theight: 15px; \n\tbackground: #e7e7e7; \n\toutline: none;\n\topacity: 0.7; \n\tborder-radius: 6px;\n\t-webkit-transition: .2s; \n\ttransition: opacity .2s;\n\t}\n\n\t\/* Mouse-over effects *\/\n\t.slider:hover {\n\topacity: 1;\n\t}\n\n\t.slider::-webkit-slider-thumb {\n\t-webkit-appearance: none; \/* Override default look *\/\n\tappearance: none;\n\twidth: 15px; \/* Set a specific slider handle width *\/\n\theight: 15px; \/* Slider handle height *\/\n\tbackground: #1ACEE6; \/* Green background *\/\n\tcursor: round; \/* Cursor on hover *\/\n\tborder-radius: 6px;\n\t}\n\n\tdiv.tooltip-donut {\n\t\tposition: absolute;\n\t\ttext-align: center;\n\t\tpadding: .3rem;\n\t\tbackground: #FFFFFF;\n\t\tcolor: #000000;\n\t\tborder: 1px solid #000000;\n\t\tborder-radius: 8px;\n\t\tpointer-events: none;\n\t\tfont-size: 0.8rem;\n        z-index: 99999;\n\t}\n\n<\/style>\n\n<img id=\"baseimg\" src=\"usa.png\" style=\"display:none\" \/>\n<div class=\"andradutza\" style=\"background-color:#474747;\">\n\t<center><h1 style=\"color:white;\">2020 States Engagement<\/h1><\/center>\n\t<center><h4 style=\"color:white;\">-Median Product Engagement in a Year-<\/h4><\/center>\n\t<center><h6 style=\"color:white;\">(excluding legal holidays)<\/h6><\/center>\n    <div class=\"row\">\n\t\t<div id=\"map4\" class=\"svg-container\"><\/div>\n\t<\/div>\n<\/div>\n'''\n\n\njs_t5 = '''\nrequire.config({\n  paths: {\n    d3v6: \"https:\/\/d3js.org\/d3.v6.min\",\n    moment: \"https:\/\/unpkg.com\/moment@2.29.1\/moment\",\n  }\n});\n\nrequire([\"d3v6\", \"moment\"], function(d3, moment) {\n\n\/\/ Get Assets URL set by Kaggle\nconst baseAssetsUrl = document.getElementById('baseimg').src.replace(\/usa.png.*$\/, '');\n\n\/\/ Set the SVG area\nconst margin = { LEFT: 30, RIGHT: 30, TOP: 10, BOTTOM: 30 }\nconst width = 950 - margin.LEFT - margin.RIGHT\nconst height = 900 - margin.TOP - margin.BOTTOM\n\nconst svg = d3.select(\"#map4\").append(\"svg\")\n  \/\/.attr(\"style\", \"outline: thin solid red;\")\n  .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n  .attr(\"viewBox\", \"0 0 950 900\")\n  .classed(\"svg-content\", true)\n  .attr(\"transform\",\n   `translate(${margin.LEFT}, ${margin.TOP})`)\n\n\n\n\/\/ Map and projection\nconst projection = d3.geoMercator()\n    .scale(730) \/\/ This is the zoom\n    .translate([width+870, height]); \/\/ You have to play with these values to center your map\n\n\/\/ Path generator\nconst path = d3.geoPath().projection(projection)\n\n\/\/ Data and color scale\nconst data = new Map();\nconst colorScale = d3.scaleSequential()\n      .domain([0, 5])\n      .interpolator(d3.interpolate(\"#b2ef91\", \"#fa9372\"));\n\n\/\/ === Map ===\nPromise.all([\n  d3.json(\"https:\/\/raw.githubusercontent.com\/holtzy\/D3-graph-gallery\/master\/DATA\/us_states_hexgrid.geojson.json\"),\n  d3.csv(baseAssetsUrl + \"us.csv\", function(d) {\n      data.set(d.Abbreviation, +d.engagement_index)\n  })]).then(function(loadData){\n\n  let topo = loadData[0]\n\n  \/\/ Interactive\n  var div = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip-donut\")\n    .style(\"opacity\", 0);\n\n  let mouseOver = function(event, d) {\n    d3.selectAll(\".Country\")\n      .transition()\n      .duration(100)\n      .style(\"opacity\", .5)\n    d3.select(this)\n      .transition()\n      .duration(100)\n      .style(\"opacity\", 1)\n\n    div.transition()\n    .duration(100)\n    .style(\"opacity\", 1);\n    let num = data.get(d.properties.iso3166_2);\n    div.html(num)\n        .style(\"left\", (event.pageX) + \"px\")\n        .style(\"top\", (event.pageY-30) + \"px\");\n  }\n\n  let mouseLeave = function(d) {\n    d3.selectAll(\".Country\")\n      .transition()\n      .duration(100)\n      .style(\"opacity\", 1)\n    d3.select(this)\n      .transition()\n      .duration(100)\n\n    \/\/ New div dissapears\n    div.transition()\n      .duration(100)\n      .style(\"opacity\", 0);\n  }\n\n  \/\/ Draw the map\n  svg.append(\"g\")\n      .selectAll(\"path\")\n      .data(topo.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .attr(\"fill\", function (d) {\n        d.total = data.get(d.properties.iso3166_2);\n        return colorScale(d.total);\n      })\n      .style(\"stroke\", \"#474747\")\n      .attr(\"stroke-width\", 4)\n      .attr(\"class\", function(d){ return \"Country\" } )\n      .style(\"opacity\", 1)\n      .on(\"mouseover\", mouseOver )\n      .on(\"mouseleave\", mouseLeave )\n\n  \/\/ Add the labels\n  svg.append(\"g\")\n      .selectAll(\"labels\")\n      .data(topo.features)\n      .join(\"text\")\n        .attr(\"x\", function(d){return path.centroid(d)[0]})\n        .attr(\"y\", function(d){return path.centroid(d)[1]})\n        .text(function(d){ return d.properties.iso3166_2})\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"alignment-baseline\", \"central\")\n        .style(\"font-size\", 16)\n        .style(\"fill\", \"474747\")\n        .style(\"pointer-events\", \"none\")\n        .attr(\"font-weight\", 600)\n})\n\n\n\/\/ === Bar ===\nd3.csv(baseAssetsUrl + \"states.csv\").then(function(data){ \n  \n  data.forEach(d => {\n    d.NoDistricts = Number(d.NoDistricts)\n  })\n\n  \/\/ Gradient\n  const defs = svg.append('defs');\n\n  const bgGradient = defs\n    .append('linearGradient')\n    .attr('id', 'bg-gradient2')\n    .attr('gradientTransform', 'rotate(90)');\n  bgGradient\n    .append('stop')\n    .attr('stop-color', '#b4c95a') \n    .attr('offset', '0%');\n  bgGradient\n    .append('stop')\n    .attr('stop-color', '#1acee6')\n    .attr('offset', '100%');\n\n  \/\/ Title\n  var title = svg.append(\"text\")\n\t.attr(\"y\", \"64%\")\n\t.attr(\"x\", \"47%\")\n\t.attr(\"font-size\", \"18px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 600)\n  .attr(\"fill\", \"white\")\n  .text(\"Frequency of Districts per State\")\n\n  \/\/ Scales\n  const x = d3.scaleBand()\n    .range([0, width\/1.1])\n    .domain(data.map(d => d.State))\n    .paddingInner(0.3)\n    .paddingOuter(0.2)\n\n  const y = d3.scaleLinear()\n    .range([height\/5, 0])\n    .domain([0, d3.max(data, d => d.NoDistricts)])\n\n  const xAxisGroup = svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", `translate(60, ${width\/1.14})`)\n\n  const yAxisGroup = svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .attr(\"transform\", `translate(50, ${width\/1.48})`)\n\n  \/\/ Axis\n  const xAxisCall = d3.axisBottom(x)\n  xAxisGroup.call(xAxisCall)\n    .selectAll(\"text\")\n      .attr(\"y\", \"0\")\n      .attr(\"x\", \"-10\")\n      .attr(\"fill\", \"white\")\n      .attr(\"font-size\", \"13px\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", \"rotate(-50)\")\n\n  const yAxisCall = d3.axisLeft(y)\n    .ticks(7)\n    .tickFormat(d => d)\n  yAxisGroup.call(yAxisCall)\n    .selectAll(\"text\")\n    .attr(\"fill\", \"white\")\n\n  \/\/ Bar Chart\n  const rects = svg.selectAll()\n    .data(data)\n    .enter().append('g')\n    .append(\"rect\")\n    .attr(\"transform\", `translate(60, ${width\/1.48})`)\n    .attr(\"y\", d => y(d.NoDistricts))\n    .attr(\"x\", d => x(d.State))\n    .attr('rx', 5)\n    .attr('ry', 4)\n    .attr(\"width\", x.bandwidth)\n    .attr(\"height\", d => height\/5 - y(d.NoDistricts))\n    .style(\"fill\", \"url(#bg-gradient2)\")\n    .style(\"stroke-width\", \"1px\")\n\n\n  \/\/ Interactive\n  var div = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip-donut\")\n    .style(\"opacity\", 0);\n\n  rects\n    .on('mouseenter', function (event, dt) {\n    \/\/ MOUSE ON\n    d3.selectAll('.value')\n          .attr('opacity', 0)\n\n    d3.select(this)\n        .transition()\n        .duration(100)\n        .attr('opacity', 0.3)\n        .attr('x', (a) => x(a.State) - 2.5)\n        .attr('width', x.bandwidth() + 5)\n\n    \/\/ Add line\n    const y_new = y(dt.NoDistricts)\n    var line = svg.append('line')\n          .attr('id', 'limit')\n          .attr('x1', 50)\n          .attr('y1', y_new + 600)\n          .attr('x2', 865)\n          .attr('y2', y_new + 600)\n          .attr('stroke', '#b4c95a')\n\n    \/\/ Makes the new div appear\n    div.transition()\n        .duration(50)\n        .style(\"opacity\", 1);\n    let num = dt.NoDistricts;\n    div.html(num)\n        .style(\"left\", (event.pageX) + \"px\")\n        .style(\"top\", (event.pageY-30) + \"px\");\n\n\n  })\n    \/\/ MOUSE LEAVE\n    .on('mouseleave', function () {\n      d3.selectAll('.value')\n          .attr('opacity', 1)\n\n      d3.select(this)\n      .transition()\n      .duration(100)\n      .attr('opacity', 1)\n      .attr('x', (a) => x(a.State))\n      .attr('width', x.bandwidth())\n\n      \/\/ New div dissapears\n      div.transition()\n          .duration('50')\n          .style(\"opacity\", 0);\n\n      svg.selectAll('#limit').remove()\n      svg.selectAll('.divergence').remove()\n    })\n\n});\n\n});\n'''\n\nh = display(HTML(htmlt5))\nj = py_display.Javascript(js_t5)\npy_display.display_javascript(j)","96a7a69c":"# Compute the Median\ngap = df.groupby([\"time\", \"district_id\"])[\"engagement_index\"]\\\n            .median().reset_index()\n\n# Add States\ngap = pd.merge(gap, districts, on=\"district_id\").iloc[:, :4]\n\n# Add Characteristics\nto_keep = ['State', 'BlackHispanic', 'FreeReducedLunch', 'PerPupilExpenditure']\ngap = pd.merge(gap, characteristics[to_keep], \n               left_on=\"state\", right_on=\"State\").drop(columns=\"state\")\n\n# Get month\ngap[\"month\"] = gap[\"time\"].apply(lambda x: calendar.month_abbr[int(x.split(\"-\")[1])])\nmonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \n          \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\ngap['month'] = pd.Categorical(gap['month'], categories=months, ordered=True)\n\n\n# Compute the 3 dataframes for each characteristic\ncol_chars = ['BlackHispanic', 'FreeReducedLunch', 'PerPupilExpenditure']\nall_gaps = []\n\nfor c in col_chars:\n    g = gap.groupby([\"month\", c])[\"engagement_index\"].median().reset_index()\n    g = g.pivot(index=\"month\", columns=c, \n                values=\"engagement_index\").reset_index()\n    all_gaps.append(g)\n\ngap0 = all_gaps[0]\ngap1 = all_gaps[1].drop(columns=\"Unclear\")\ngap2 = all_gaps[2].drop(columns=\"Unclear\")\n\n# Save\ngap0.to_csv(\"gap0.csv\", index=False)\ngap1.to_csv(\"gap1.csv\", index=False)\ngap2.to_csv(\"gap2.csv\", index=False)\n\n\nhtmlt9 = '''\n<!-- Bootstrap -->\n<link rel=\"stylesheet\" href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.4.1\/css\/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T\/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<!-- Style -->\n<style>\n\t.andradutza {\n\t\tfont-family: \"Times New Roman\", Times, serif;\n\t\toverflow-x: hidden;\n\t\twidth: 98%;\n\t}\n\t.svg-container {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\tpadding-bottom: 100%;\n\t\tvertical-align: top;\n\t\toverflow: hidden;\n\t}\n\t.svg-content {\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\n\t.axisWhite path{\n\tstroke: #ffffff;\n\t}\n\n\t.axisWhite line{\n\tstroke: #ffffff;\n\t}\n\n\t.axisHidden path{\n\tstroke: #474747;\n\t}\n\n\t.axisHidden line{\n\tstroke: #474747;\n\t}\n\n\t.annotation.green text {\n\t\tfill: #a9ff68;\n\t}\n\t.annotation.red text {\n\t\tfill: #ff8989;\n\t}\n\n<\/style>\n\n<img id=\"baseimg\" src=\"usa.png\" style=\"display:none\" \/>\n<div class=\"andradutza\" style=\"background-color:#474747;\">\n\t<center><h1 style=\"color:white;\">\ud83d\udeb8 Is there an Engagement Gap?<\/h1><\/center>\n\t<center><h4 style=\"color:white;\">-Median Engagement on District Characteristics-<\/h4><\/center>\n\t<div class=\"row\">\n\t\t<div id=\"map9\" class=\"svg-container\"><\/div>\n\t<\/div>\n<\/div>\n'''\n\n\njs_t9 = '''\nrequire.config({\n  paths: {\n    d3src: \"https:\/\/d3js.org\/\",\n  },\n  map: {\n    '*': {\n      'd3v6': 'd3src\/d3.v6.min',\n      'd3-selection': 'd3src\/d3-selection.v1.min',\n      'd3-drag': 'd3src\/d3-drag.v1.min',\n      'd3-shape': 'd3src\/d3-shape.v1.min',\n      'd3-path': 'd3src\/d3-path.v1.min',\n      'd3-dispatch': 'd3src\/d3-dispatch.v1.min',\n      'd3-annotation': 'https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/d3-annotation\/2.5.1\/d3-annotation.min.js',\n    }\n  }\n});\n\nrequire([\"d3v6\", \"d3-annotation\"], function(d3, d3Annotation) {\n\n\/\/ Inject d3Annotation methods to d3\nfor (var key in d3Annotation) {\n  d3[key] = d3Annotation[key];\n}\n\n\/\/ Get Assets URL set by Kaggle\nconst baseAssetsUrl = document.getElementById('baseimg').src.replace(\/usa.png.*$\/, '');\n\n\/\/ Set the SVG area\nconst margin = { LEFT: 30, RIGHT: 30, TOP: 10, BOTTOM: 30 }\nconst width = 950 - margin.LEFT - margin.RIGHT\nconst height = 900 - margin.TOP - margin.BOTTOM\n\nconst svg = d3.select(\"#map9\").append(\"svg\")\n  \/\/ .attr(\"style\", \"outline: thin solid red;\")\n  .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n  .attr(\"viewBox\", \"0 0 950 900\")\n  .classed(\"svg-content\", true)\n  .attr(\"transform\",\n   `translate(${margin.LEFT}, ${margin.TOP})`)\n\n\nconst color1 = \"#ff8989\";\nconst color2 = \"#a9ff68\";\n\n\n\/\/ === Chart 0 ===\nd3.csv(baseAssetsUrl + \"gap0.csv\").then(function(data){ \n\n  \/\/ Title\n  svg.append(\"text\")\n  .attr(\"y\", \"9%\")\n\t.attr(\"x\", \"18%\")\n\t.attr(\"font-size\", \"20px\")\n\t.attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 900)\n  .attr(\"fill\", \"white\")\n  .text(\"Black\/Hispanic\")\n\n  const defs = svg.append('defs');\n\n  const bgGradient = defs\n    .append('linearGradient')\n    .attr('id', 'bg-gradient4')\n    .attr('gradientTransform', 'rotate(90)');\n  bgGradient\n    .append('stop')\n    .attr('stop-color', color1)\n    .attr('offset', '0%');\n  bgGradient\n    .append('stop')\n    .attr('stop-color', color2)\n    .attr('offset', '100%');\n\n  \/\/ Add X axis\n  const x = d3.scaleLinear()\n    .domain([0, 4.5])\n    .range([ 0, width\/3.5]);\n  svg.append(\"g\")\n    .attr(\"class\", \"axisWhite\")\n    .attr(\"transform\", `translate(50, ${height\/1})`)\n    .call(d3.axisBottom(x))\n    .selectAll(\"text\")\n    .attr(\"font-size\", \"11px\")\n    .attr(\"fill\", \"white\")\n    .attr(\"font-weight\", 600)\n\n  \/\/ Y axis\n  const y = d3.scaleBand()\n    .range([ 0, height\/1.09])\n    .domain(data.map(function(d) { return d.month; }))\n    .padding(1);\n  svg.append(\"g\")\n  .attr(\"class\", \"axisWhite\")\n  .attr(\"transform\", `translate(30, ${width\/3-227})`)\n    .call(d3.axisLeft(y))\n    .selectAll(\"text\")\n    .attr(\"font-size\", \"11px\")\n    .attr(\"fill\", \"white\")\n    .attr(\"font-weight\", 600)\n\n\n  \/\/ Lines\n  svg.selectAll(\"myline\")\n    .data(data)\n    .join(\"line\")\n    .attr(\"transform\", `translate(50, ${width\/3-227})`)\n      .attr(\"x1\", function(d) { return x(d.Maximum); })\n      .attr(\"x2\", function(d) { return x(d.Partial); })\n      .attr(\"y1\", function(d) { return y(d.month); })\n      .attr(\"y2\", function(d) { return y(d.month); })\n      \/\/ .style(\"stroke\", \"url(#bg-gradient4)\")\n      .style(\"stroke\", \"grey\")\n      .attr(\"stroke-width\", \"3px\")\n\n  \/\/ Circles of variable 1\n  svg.selectAll(\"mycircle\")\n    .data(data)\n    .join(\"circle\")\n    .attr(\"transform\", `translate(50, ${width\/3-227})`)\n      .attr(\"cx\", function(d) { return x(d.Maximum); })\n      .attr(\"cy\", function(d) { return y(d.month); })\n      .attr(\"r\", \"7\")\n      .style(\"fill\", color1)\n      \n\n  \/\/ Circles of variable 2\n  svg.selectAll(\"mycircle\")\n    .data(data)\n    .join(\"circle\")\n    .attr(\"transform\", `translate(50, ${width\/3-227})`)\n      .attr(\"cx\", function(d) { return x(d.Partial); })\n      .attr(\"cy\", function(d) { return y(d.month); })\n      .attr(\"r\", \"7\")\n      .style(\"fill\", color2)\n  \n});\n\n\n\/\/ === Chart 1 ===\nd3.csv(baseAssetsUrl + \"gap1.csv\").then(function(data){ \n\n  \/\/ Title\n  svg.append(\"text\")\n  .attr(\"y\", \"9%\")\n\t.attr(\"x\", \"49%\")\n\t.attr(\"font-size\", \"20px\")\n\t.attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 900)\n  .attr(\"fill\", \"white\")\n  .text(\"Free\/Reduced Lunch\")\n\n  const defs = svg.append('defs');\n\n  const bgGradient = defs\n    .append('linearGradient')\n    .attr('id', 'bg-gradient4')\n    .attr('gradientTransform', 'rotate(90)');\n  bgGradient\n    .append('stop')\n    .attr('stop-color', color1)\n    .attr('offset', '0%');\n  bgGradient\n    .append('stop')\n    .attr('stop-color', color2)\n    .attr('offset', '100%');\n\n  \/\/ Add X axis\n  const x = d3.scaleLinear()\n    .domain([0, 4.5])\n    .range([ 0, width\/3.5]);\n  svg.append(\"g\")\n    .attr(\"class\", \"axisWhite\")\n    .attr(\"transform\", `translate(340, ${height\/1})`)\n    .call(d3.axisBottom(x))\n    .selectAll(\"text\")\n    .attr(\"font-size\", \"11px\")\n    .attr(\"fill\", \"white\")\n    .attr(\"font-weight\", 600)\n\n  \/\/ Y axis\n  const y = d3.scaleBand()\n    .range([ 0, height\/1.09])\n    .domain(data.map(function(d) { return d.month; }))\n    .padding(1);\n  svg.append(\"g\")\n  .attr(\"class\", \"axisHidden\")\n  .attr(\"transform\", `translate(340, ${width\/3-227})`)\n    .call(d3.axisLeft(y))\n    .selectAll(\"text\")\n    .attr(\"font-size\", \"11px\")\n    .attr(\"fill\", \"#474747\")\n    .attr(\"font-weight\", 600)\n\n\n  \/\/ Lines\n  svg.selectAll(\"myline\")\n    .data(data)\n    .join(\"line\")\n    .attr(\"transform\", `translate(340, ${width\/3-227})`)\n      .attr(\"x1\", function(d) { return x(d.Maximum); })\n      .attr(\"x2\", function(d) { return x(d.Partial); })\n      .attr(\"y1\", function(d) { return y(d.month); })\n      .attr(\"y2\", function(d) { return y(d.month); })\n      \/\/ .style(\"stroke\", \"url(#bg-gradient4)\")\n      .style(\"stroke\", \"grey\")\n      .attr(\"stroke-width\", \"3px\")\n\n  \/\/ Circles of variable 1\n  svg.selectAll(\"mycircle\")\n    .data(data)\n    .join(\"circle\")\n    .attr(\"transform\", `translate(340, ${width\/3-227})`)\n      .attr(\"cx\", function(d) { return x(d.Maximum); })\n      .attr(\"cy\", function(d) { return y(d.month); })\n      .attr(\"r\", \"7\")\n      .style(\"fill\", color1)\n      \n\n  \/\/ Circles of variable 2\n  svg.selectAll(\"mycircle\")\n    .data(data)\n    .join(\"circle\")\n    .attr(\"transform\", `translate(340, ${width\/3-227})`)\n      .attr(\"cx\", function(d) { return x(d.Partial); })\n      .attr(\"cy\", function(d) { return y(d.month); })\n      .attr(\"r\", \"7\")\n      .style(\"fill\", color2)\n  \n});\n\n\n\/\/ === Chart 2 ===\nd3.csv(baseAssetsUrl + \"gap2.csv\").then(function(data){ \n\n  \/\/ Title\n  svg.append(\"text\")\n  .attr(\"y\", \"9%\")\n\t.attr(\"x\", \"80%\")\n\t.attr(\"font-size\", \"20px\")\n\t.attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 900)\n  .attr(\"fill\", \"white\")\n  .text(\"Per Pupil Expenditure\")\n\n  const defs = svg.append('defs');\n\n  const bgGradient = defs\n    .append('linearGradient')\n    .attr('id', 'bg-gradient4')\n    .attr('gradientTransform', 'rotate(90)');\n  bgGradient\n    .append('stop')\n    .attr('stop-color', color1)\n    .attr('offset', '0%');\n  bgGradient\n    .append('stop')\n    .attr('stop-color', color2)\n    .attr('offset', '100%');\n\n  \/\/ Add X axis\n  const x = d3.scaleLinear()\n    .domain([0, 4.5])\n    .range([ 0, width\/3.5]);\n  svg.append(\"g\")\n    .attr(\"class\", \"axisWhite\")\n    .attr(\"transform\", `translate(630, ${height\/1})`)\n    .call(d3.axisBottom(x))\n    .selectAll(\"text\")\n    .attr(\"font-size\", \"11px\")\n    .attr(\"fill\", \"white\")\n    .attr(\"font-weight\", 600)\n\n  \/\/ Y axis\n  const y = d3.scaleBand()\n    .range([ 0, height\/1.09])\n    .domain(data.map(function(d) { return d.month; }))\n    .padding(1);\n  svg.append(\"g\")\n  .attr(\"class\", \"axisHidden\")\n  .attr(\"transform\", `translate(630, ${width\/3-227})`)\n    .call(d3.axisLeft(y))\n    .selectAll(\"text\")\n    .attr(\"font-size\", \"11px\")\n    .attr(\"fill\", \"#474747\")\n    .attr(\"font-weight\", 600)\n\n\n  \/\/ Lines\n  svg.selectAll(\"myline\")\n    .data(data)\n    .join(\"line\")\n    .attr(\"transform\", `translate(630, ${width\/3-227})`)\n      .attr(\"x1\", function(d) { return x(d.Maximum); })\n      .attr(\"x2\", function(d) { return x(d.Partial); })\n      .attr(\"y1\", function(d) { return y(d.month); })\n      .attr(\"y2\", function(d) { return y(d.month); })\n      \/\/ .style(\"stroke\", \"url(#bg-gradient4)\")\n      .style(\"stroke\", \"grey\")\n      .attr(\"stroke-width\", \"3px\")\n\n  \/\/ Circles of variable 1\n  svg.selectAll(\"mycircle\")\n    .data(data)\n    .join(\"circle\")\n    .attr(\"transform\", `translate(630, ${width\/3-227})`)\n      .attr(\"cx\", function(d) { return x(d.Maximum); })\n      .attr(\"cy\", function(d) { return y(d.month); })\n      .attr(\"r\", \"7\")\n      .style(\"fill\", color1)\n      \n\n  \/\/ Circles of variable 2\n  svg.selectAll(\"mycircle\")\n    .data(data)\n    .join(\"circle\")\n    .attr(\"transform\", `translate(630, ${width\/3-227})`)\n      .attr(\"cx\", function(d) { return x(d.Partial); })\n      .attr(\"cy\", function(d) { return y(d.month); })\n      .attr(\"r\", \"7\")\n      .style(\"fill\", color2)\n  \n});\n\n\n\/\/ Legend\nconst annot1 = [\n  {\n  note: { \n    label: \"(< 50%)\",\n    title: \"Partial\",\n    wrap: 230,  \/\/ smaller text splits in multiple lines\n    padding: 0,   \/\/ More = text lower\n  },\n  className: \"green\",\n  type: d3.annotationCalloutCircle,\n  subject: { radius: 12 },\n  color: [\"#ffffff\"],\n  x: 198,\n  y: 130,\n  dy: -20,\n  dx: 50\n},\n{\n  note: { \n    label: \"(> 50%)\",\n    title: \"Majority\",\n    wrap: 230,  \/\/ smaller text splits in multiple lines\n    padding: 0,   \/\/ More = text lower\n  },\n  className: \"red\",\n  type: d3.annotationCalloutCircle,\n  subject: { radius: 12 },\n  color: [\"#ffffff\"],\n  x: 160.5,\n  y: 251.5,\n  dy: -20,\n  dx: -35\n},\n{\n  note: { \n    label: \"(< 50%)\",\n    title: \"Partial\",\n    wrap: 230,  \/\/ smaller text splits in multiple lines\n    padding: 0,   \/\/ More = text lower\n  },\n  className: \"green\",\n  type: d3.annotationCalloutCircle,\n  subject: { radius: 12 },\n  color: [\"#ffffff\"],\n  x: 553,\n  y: 312,\n  dy: -20,\n  dx: 40\n},\n{\n  note: { \n    label: \"(> 50%)\",\n    title: \"Majority\",\n    wrap: 230,  \/\/ smaller text splits in multiple lines\n    padding: 0,   \/\/ More = text lower\n  },\n  className: \"red\",\n  type: d3.annotationCalloutCircle,\n  subject: { radius: 12 },\n  color: [\"#ffffff\"],\n  x: 419,\n  y: 373,\n  dy: -20,\n  dx: -20\n},\n{\n  note: { \n    label: \"(< $1,000\/pupil)\",\n    title: \"Small Expenditure\",\n    wrap: 230,  \/\/ smaller text splits in multiple lines\n    padding: 0,   \/\/ More = text lower\n  },\n  className: \"green\",\n  type: d3.annotationCalloutCircle,\n  subject: { radius: 12 },\n  color: [\"#ffffff\"],\n  x: 755,\n  y: 676,\n  dy: -20,\n  dx: -20\n},\n{\n  note: { \n    label: \"(> $1,000\/pupil)\",\n    title: \"Big Expenditure\",\n    wrap: 230,  \/\/ smaller text splits in multiple lines\n    padding: 0,   \/\/ More = text lower\n  },\n  className: \"red\",\n  type: d3.annotationCalloutCircle,\n  subject: { radius: 12 },\n  color: [\"#ffffff\"],\n  x: 757,\n  y: 494,\n  dy: -15,\n  dx: 20\n}]\n\nsvg.append(\"g\")\n  .style('font-size', 14)\n  .call(d3.annotation()\n          .annotations(annot1))\n\n});\n'''\n\nh = display(HTML(htmlt9))\nj = py_display.Javascript(js_t9)\npy_display.display_javascript(j)","84bd6c97":"# Get product ids\nn = 25\ntop_n = df.groupby([\"lp_id\"])[\"engagement_index\"].mean().reset_index().\\\n            sort_values(\"engagement_index\", ascending=False).\\\n            head(n)[\"lp_id\"].values\n\n# Transform the data\nproverview = df[df[\"holiday\"] == 0].\\\n                groupby([\"lp_id\"])[\"engagement_index\"].median().\\\n                reset_index()\nproverview = pd.merge(proverview, prods[[\"LP ID\", \"Product Name\"]], \n                     left_on=\"lp_id\", right_on=\"LP ID\")\nproverview = proverview[proverview[\"lp_id\"].isin(top_n)]\n\nproverview = proverview.drop(columns=[\"lp_id\", \"LP ID\"])\n\n# Beautify\nproverview.columns = [\"engagement_index\", \"name\"]\nproverview = proverview.sort_values(\"engagement_index\", ascending=False).\\\n                        reset_index(drop=True)\nproverview[\"engagement_index\"] = proverview[\"engagement_index\"].astype(\"int64\")\n\n# Save to .csv\nproverview.to_csv(\"proverview.csv\", index=False)\n\n# Save images as well\nim = imageio.imread('..\/input\/covid19-education-data\/googledocs.png')\nImage.fromarray(im).save(\"googledocs.png\")\nim = imageio.imread('..\/input\/covid19-education-data\/youtube.png')\nImage.fromarray(im).save(\"youtube.png\")\nim = imageio.imread('..\/input\/covid19-education-data\/googleclassroom.png')\nImage.fromarray(im).save(\"googleclassroom.png\")\nim = imageio.imread('..\/input\/covid19-education-data\/googledrive.png')\nImage.fromarray(im).save(\"googledrive.png\")\nim = imageio.imread('..\/input\/covid19-education-data\/kahoot.png')\nImage.fromarray(im).save(\"kahoot.png\")\n\n# W&B run + save info\nrun = wandb.init(project='C19-learn', name='top_prods', \n                 config=CONFIG, anonymous=\"allow\")\n\ncreate_wandb_plot(x_data=proverview[\"name\"], y_data=proverview[\"engagement_index\"], \n                  x_name=\"Product Name\", y_name=\"Median Engagement\", \n                  title=\"Educational Products Overview\",\n                  log=\"top_prods\", plot=\"bar\")\nwandb.finish()\n\n\nhtmlt7 = '''\n<!-- Bootstrap -->\n<link rel=\"stylesheet\" href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.4.1\/css\/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T\/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<!-- Style -->\n<style>\n\t.andradutza {\n\t\tfont-family: \"Times New Roman\", Times, serif;\n\t}\n\t.svg-container {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\tpadding-bottom: 100%;\n\t\tvertical-align: top;\n\t\toverflow: hidden;\n\t}\n\t.svg-content {\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\n\tline#limit {\n\tstroke: #f7b227;\n\tstroke-width: 2;\n\tstroke-dasharray: 8 5;\n\t}\n\n\ttext.divergence {\n\tfont-size: 14px;\n\tfill: #000000;\n\t}\n\n\ttext.value {\n\tfont-size: 20px;\n\tfill: #000000;\n\t}\n\n\t.slider {\n\t-webkit-appearance: none; \n\tappearance: none;\n\twidth: 10%; \n\theight: 15px; \n\tbackground: #e7e7e7; \n\toutline: none;\n\topacity: 0.7; \n\tborder-radius: 6px;\n\t-webkit-transition: .2s; \n\ttransition: opacity .2s;\n\t}\n\n\t\/* Mouse-over effects *\/\n\t.slider:hover {\n\topacity: 1;\n\t}\n\n\t.slider::-webkit-slider-thumb {\n\t-webkit-appearance: none; \/* Override default look *\/\n\tappearance: none;\n\twidth: 15px; \/* Set a specific slider handle width *\/\n\theight: 15px; \/* Slider handle height *\/\n\tbackground: #1ACEE6; \/* Green background *\/\n\tcursor: round; \/* Cursor on hover *\/\n\tborder-radius: 6px;\n\t}\n\n\tdiv.tooltip-donut {\n\t\tposition: absolute;\n\t\ttext-align: center;\n\t\tpadding: .3rem;\n\t\tbackground: #FFFFFF;\n\t\tcolor: #000000;\n\t\tborder: 1px solid #000000;\n\t\tborder-radius: 8px;\n\t\tpointer-events: none;\n\t\tfont-size: 0.8rem;\n\t}\n\n<\/style>\n\n<img id=\"baseimg\" src=\"usa.png\" style=\"display:none\" \/>\n<div class=\"andradutza\">\n\t<center><h1>Educational Products Overview<\/h1><\/center>\n\t<center><h4>-Median Product Engagement in a Year-<\/h4><\/center>\n\t<center><h6>(excluding legal holidays)<\/h6><\/center>\n    <div class=\"row\">\n\t\t<div id=\"map7\" class=\"svg-container\"><\/div>\n\t<\/div>\n<\/div>\n'''\n\n\njs_t7 = '''\nrequire.config({\n  paths: {\n    d3src: \"https:\/\/d3js.org\/\",\n  },\n  map: {\n    '*': {\n      'd3v6': 'd3src\/d3.v6.min',\n      'd3-selection': 'd3src\/d3-selection.v1.min',\n      'd3-drag': 'd3src\/d3-drag.v1.min',\n      'd3-shape': 'd3src\/d3-shape.v1.min',\n      'd3-path': 'd3src\/d3-path.v1.min',\n      'd3-dispatch': 'd3src\/d3-dispatch.v1.min',\n      'd3-annotation': 'https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/d3-annotation\/2.5.1\/d3-annotation.min.js',\n    }\n  }\n});\n\nrequire([\"d3v6\", \"d3-annotation\"], function(d3, d3Annotation) {\n\n\/\/ Inject d3Annotation methods to d3\nfor (var key in d3Annotation) {\n  d3[key] = d3Annotation[key];\n}\n\n\/\/ Get Assets URL set by Kaggle\nconst baseAssetsUrl = document.getElementById('baseimg').src.replace(\/usa.png.*$\/, '');\n\n\/\/ Set the SVG area\nconst margin = { LEFT: 30, RIGHT: 30, TOP: 10, BOTTOM: 30 }\nconst width = 950 - margin.LEFT - margin.RIGHT\nconst height = 900 - margin.TOP - margin.BOTTOM\n\nconst svg = d3.select(\"#map7\").append(\"svg\")\n  \/\/ .attr(\"style\", \"outline: thin solid red;\")\n  .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n  .attr(\"viewBox\", \"0 0 950 900\")\n  .classed(\"svg-content\", true)\n  .attr(\"transform\",\n   `translate(${margin.LEFT}, ${margin.TOP})`)\n\n\n\/\/ === Bar ===\nd3.csv(baseAssetsUrl + \"proverview.csv\").then(function(data){ \n\n  data.forEach(d => {\n    d.engagement_index = Number(d.engagement_index)\n  })\n\n  const defs = svg.append('defs');\n\n  const bgGradient = defs\n    .append('linearGradient')\n    .attr('id', 'bg-gradient3')\n    .attr('gradientTransform', 'rotate(90)');\n  bgGradient\n    .append('stop')\n    .attr('stop-color', '#9bf8f4')\n    .attr('offset', '0%');\n  bgGradient\n    .append('stop')\n    .attr('stop-color', '#6f7bf7')\n    .attr('offset', '100%');\n\n  \/\/ Scales\n  const x = d3.scaleBand()\n    .range([0, width\/1.1])\n    .domain(data.map(d => d.name))\n    .paddingInner(0.3)\n    .paddingOuter(0.2)\n\n  const y = d3.scaleLinear()\n    .range([height\/4, 0])\n    .domain([0, d3.max(data, d => d.engagement_index)])\n\n  const xAxisGroup = svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", `translate(60, ${width\/1.86})`)\n\n  const yAxisGroup = svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .attr(\"transform\", `translate(50, ${width\/3.5})`)\n\n  \/\/ Axis\n  const xAxisCall = d3.axisBottom(x)\n  xAxisGroup.call(xAxisCall)\n    .selectAll(\"text\")\n      .attr(\"y\", \"0\")\n      .attr(\"x\", \"-10\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"font-size\", \"12px\")\n      .attr(\"transform\", \"rotate(-50)\")\n\n  const yAxisCall = d3.axisLeft(y)\n    .ticks(7)\n    .tickFormat(d => d)\n  yAxisGroup.call(yAxisCall)\n    .selectAll(\"text\")\n\n  \/\/ Bar Chart\n  const rects = svg.selectAll()\n    .data(data)\n    .enter().append('g')\n    .append(\"rect\")\n    .attr(\"transform\", `translate(50, ${width\/3.5})`)\n    .attr(\"y\", d => y(d.engagement_index))\n    .attr(\"x\", d => x(d.name))\n    .attr('rx', 5)\n    .attr('ry', 4)\n    .attr(\"width\", x.bandwidth)\n    .attr(\"height\", d => height\/4 - y(d.engagement_index))\n    .style(\"fill\", \"url(#bg-gradient3)\")\n    .style(\"stroke-width\", \"1px\")\n\n\n  \/\/ Interactive\n  var div = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip-donut\")\n    .style(\"opacity\", 0);\n\n  rects\n    .on('mouseenter', function (event, dt) {\n    \/\/ MOUSE ON\n    d3.selectAll('.value')\n          .attr('opacity', 0)\n\n    d3.select(this)\n        .transition()\n        .duration(100)\n        .attr('opacity', 0.3)\n        .attr('x', (a) => x(a.name) - 2.5)\n        .attr('width', x.bandwidth() + 5)\n\n    \/\/ Add line\n    const y_new = y(dt.engagement_index)\n    var line = svg.append('line')\n          .attr('id', 'limit')\n          .attr('x1', 50)\n          .attr('y1', y_new + 250)\n          .attr('x2', 850)\n          .attr('y2', y_new + 250)\n          .attr('stroke', '#f7b227')\n\n    \/\/ Makes the new div appear\n    div.transition()\n        .duration(50)\n        .style(\"opacity\", 1);\n    let num = dt.engagement_index;\n    div.html(num)\n        .style(\"left\", (event.pageX) + \"px\")\n        .style(\"top\", (event.pageY-30) + \"px\");\n\n\n  })\n    \/\/ MOUSE LEAVE\n    .on('mouseleave', function () {\n      d3.selectAll('.value')\n          .attr('opacity', 1)\n\n      d3.select(this)\n      .transition()\n      .duration(100)\n      .attr('opacity', 1)\n      .attr('x', (a) => x(a.name))\n      .attr('width', x.bandwidth())\n\n      \/\/ New div dissapears\n      div.transition()\n          .duration('50')\n          .style(\"opacity\", 0);\n\n      svg.selectAll('#limit').remove()\n      svg.selectAll('.divergence').remove()\n    })\n\n\n  \/\/ Google Docs\n  svg.append(\"image\")\n  .attr(\"xlink:href\", baseAssetsUrl + \"googledocs.png\")\n  .attr(\"x\", \"5%\")\n  .attr(\"y\", \"1%\")\n  .attr(\"width\", 50)\n  .attr(\"height\", 50)\n  .style(\"opacity\", 1);\n\n  svg.append(\"text\")\n      .attr(\"x\", \"7.5%\")\n      .attr(\"y\", \"8.5%\")\n      .attr(\"font-size\", \"14px\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-weight\", 600)\n      .text(\"Google Docs\")\n  svg.append(\"text\")\n      .attr(\"x\", \"8.5%\")\n      .attr(\"y\", \"8.5%\")\n      .attr(\"dy\", \"1.5em\")\n      .attr(\"font-size\", \"11.5px\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-weight\", 100)\n      .text(\"Create and edit text docs\")\n  svg.append(\"text\")\n      .attr(\"x\", \"8.5%\")\n      .attr(\"y\", \"8.5%\")\n      .attr(\"dy\", \"2.5em\")\n      .attr(\"font-size\", \"11.5px\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-weight\", 100)\n      .text(\"right in your web browser.\")\n\n   svg.append(\"svg:defs\").append(\"svg:marker\")\n   .attr(\"id\", \"triangle\")\n   .attr(\"refX\", 6)\n   .attr(\"refY\", 6)\n   .attr(\"markerWidth\", 30)\n   .attr(\"markerHeight\", 30)\n   .attr(\"markerUnits\",\"userSpaceOnUse\")\n   .attr(\"orient\", \"auto\")\n   .append(\"path\")\n   .attr(\"d\", \"M 0 0 12 6 0 12 3 6\")\n   .style(\"fill\", \"#4E4E4E\");\n   svg.append(\"path\")\n   \/\/ bottom, top\n     .attr('d', d3.line()([[75, 120], [75, 240]]))\n     .attr(\"stroke-width\", 2)\n     .attr(\"stroke\", \"#4E4E4E\")\n     .attr(\"marker-end\", \"url(#triangle)\");\n\n\n  \/\/ Youtube\n  svg.append(\"image\")\n  .attr(\"xlink:href\", baseAssetsUrl + \"youtube.png\")\n  .attr(\"x\", \"5%\")\n  .attr(\"y\", \"82%\")\n  .attr(\"width\", 150)\n  .attr(\"height\", 150)\n  .style(\"opacity\", 1);\n      \n  svg.append(\"text\")\n  .attr(\"x\", \"13%\")\n  .attr(\"y\", \"94.5%\")\n  .attr(\"font-size\", \"14px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 600)\n  .text(\"Youtube\")\nsvg.append(\"text\")\n  .attr(\"x\", \"13.5%\")\n  .attr(\"y\", \"94.5%\")\n  .attr(\"dy\", \"1.5em\")\n  .attr(\"font-size\", \"11.5px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 100)\n  .text(\"Provides various teaching videos\")\nsvg.append(\"text\")\n  .attr(\"x\", \"13.5%\")\n  .attr(\"y\", \"94.5%\")\n  .attr(\"dy\", \"2.5em\")\n  .attr(\"font-size\", \"11.5px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 100)\n  .text(\"and helps the students learn.\")\n\nsvg.append(\"path\")\n\/\/ bottom, top\n  .attr('d', d3.line()([[120, 780], [120, 600]]))\n  .attr(\"stroke-width\", 2)\n  .attr(\"stroke\", \"#4E4E4E\")\n  .attr(\"marker-end\", \"url(#triangle)\");\n\n\n\/\/ Classroom\nsvg.append(\"image\")\n.attr(\"xlink:href\", baseAssetsUrl + \"googleclassroom.png\")\n.attr(\"x\", \"15.5%\")\n.attr(\"y\", \"13%\")\n.attr(\"width\", 60)\n.attr(\"height\", 60)\n.style(\"opacity\", 1);\n\nsvg.append(\"text\")\n  .attr(\"x\", \"18.5%\")\n  .attr(\"y\", \"21%\")\n  .attr(\"font-size\", \"14px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 600)\n  .text(\"Google Classroom\")\nsvg.append(\"text\")\n  .attr(\"x\", \"18.5%\")\n  .attr(\"y\", \"21%\")\n  .attr(\"dy\", \"1.5em\")\n  .attr(\"font-size\", \"11.5px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 100)\n  .text(\"Your central place where\")\nsvg.append(\"text\")\n.attr(\"x\", \"18.5%\")\n.attr(\"y\", \"21%\")\n.attr(\"dy\", \"2.5em\")\n.attr(\"font-size\", \"11.5px\")\n.attr(\"text-anchor\", \"middle\")\n.attr(\"font-weight\", 100)\n.text(\"teaching and learning\")\nsvg.append(\"text\")\n  .attr(\"x\", \"18.5%\")\n  .attr(\"y\", \"21%\")\n  .attr(\"dy\", \"3.5em\")\n  .attr(\"font-size\", \"11.5px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 100)\n  .text(\"come together.\")\n\nsvg.append(\"path\")\n\/\/ bottom, top\n  .attr('d', d3.line()([[170, 240], [170, 380]]))\n  .attr(\"stroke-width\", 2)\n  .attr(\"stroke\", \"#4E4E4E\")\n  .attr(\"marker-end\", \"url(#triangle)\");\n\n\n\/\/ Drive\nsvg.append(\"image\")\n.attr(\"xlink:href\", baseAssetsUrl + \"googledrive.png\")\n.attr(\"x\", \"20%\")\n.attr(\"y\", \"73%\")\n.attr(\"width\", 50)\n.attr(\"height\", 50)\n.style(\"opacity\", 1);\n\nsvg.append(\"text\")\n  .attr(\"x\", \"22%\")\n  .attr(\"y\", \"80%\")\n  .attr(\"font-size\", \"14px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 600)\n  .text(\"Google Drive\")\nsvg.append(\"text\")\n  .attr(\"x\", \"22%\")\n  .attr(\"y\", \"80%\")\n  .attr(\"dy\", \"1.5em\")\n  .attr(\"font-size\", \"11.5px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 100)\n  .text(\"Save files online\")\nsvg.append(\"text\")\n.attr(\"x\", \"22%\")\n.attr(\"y\", \"80%\")\n.attr(\"dy\", \"2.5em\")\n.attr(\"font-size\", \"11.5px\")\n.attr(\"text-anchor\", \"middle\")\n.attr(\"font-weight\", 100)\n.text(\"and access them\")\nsvg.append(\"text\")\n  .attr(\"x\", \"22%\")\n  .attr(\"y\", \"80%\")\n  .attr(\"dy\", \"3.5em\")\n  .attr(\"font-size\", \"11.5px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 100)\n  .text(\"anywhere on any device.\")\n\nsvg.append(\"path\")\n\/\/ bottom, top\n  .attr('d', d3.line()([[215, 650], [215, 550]]))\n  .attr(\"stroke-width\", 2)\n  .attr(\"stroke\", \"#4E4E4E\")\n  .attr(\"marker-end\", \"url(#triangle)\");\n\n\/\/ Kahoot\nsvg.append(\"image\")\n.attr(\"xlink:href\", baseAssetsUrl + \"kahoot.png\")\n.attr(\"x\", \"25%\")\n.attr(\"y\", \"28%\")\n.attr(\"width\", 50)\n.attr(\"height\", 50)\n.style(\"opacity\", 1);\n\nsvg.append(\"text\")\n  .attr(\"x\", \"27.7%\")\n  .attr(\"y\", \"35.5%\")\n  .attr(\"font-size\", \"14px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 600)\n  .text(\"Kahoot!\")\nsvg.append(\"text\")\n  .attr(\"x\", \"27.7%\")\n  .attr(\"y\", \"35.5%\")\n  .attr(\"dy\", \"1.5em\")\n  .attr(\"font-size\", \"11.5\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr(\"font-weight\", 100)\n  .text(\"Game-based learning platform.\")\n\n  svg.append(\"path\")\n\/\/ bottom, top\n  .attr('d', d3.line()([[265, 350], [265, 440]]))\n  .attr(\"stroke-width\", 2)\n  .attr(\"stroke\", \"#4E4E4E\")\n  .attr(\"marker-end\", \"url(#triangle)\");\n});\n\n\/\/ Note\nconst annotations = [\n  {\n  note: { \n    label: \"Google products (like Google Docs, Classroom, Drive, Forms, Sheets and Meet), Youtube and Kahoot! are the most frequently used products in one year. \\t Worth mentioning is that all the other products have very small median engagement compared to the mentioned ones.\",\n    title: \"\ud83d\udccc Note\",\n    wrap: 250,  \/\/ smaller text splits in multiple lines\n    padding: 10,   \/\/ More = text lower\n    \n  },\n  color: [\"#000000\"],\n  x: 630,\n  y: 30,\n  dy: 0,\n  dx: 0\n}]\n\nconst makeAnnotations = d3.annotation()\n  .annotations(annotations)\n\nsvg.append(\"g\")\n.call(makeAnnotations)\n\n});\n'''\n\nh = display(HTML(htmlt7))\nj = py_display.Javascript(js_t7)\npy_display.display_javascript(j)","74cf862e":"n = 400\ntop_all = df.groupby([\"lp_id\"])[\"engagement_index\"].mean().reset_index().\\\n            sort_values(\"engagement_index\", ascending=False).\\\n            head(n)[\"lp_id\"].values\n\n# Transform the data\nwordcloud = df[df[\"holiday\"] == 0].\\\n                groupby([\"lp_id\"])[\"engagement_index\"].median().\\\n                reset_index()\nwordcloud = pd.merge(wordcloud, prods[[\"LP ID\", \"Product Name\"]], \n                     left_on=\"lp_id\", right_on=\"LP ID\")\nwordcloud = wordcloud[wordcloud[\"lp_id\"].isin(top_all)]\n\nwordcloud = wordcloud.drop(columns=[\"lp_id\", \"LP ID\"])\n\n# Beautify\nwordcloud.columns = [\"engagement_index\", \"name\"]\nwordcloud = wordcloud.sort_values(\"engagement_index\", ascending=False).\\\n                        reset_index(drop=True)\nwordcloud[\"engagement_index\"] = wordcloud[\"engagement_index\"].astype(\"int64\")\n\n# Log scale for better visual\nwordcloud[\"engagement_index\"] = np.log10(wordcloud[\"engagement_index\"]).\\\n                                replace([np.inf, -np.inf], 0)*10\nwordcloud[\"engagement_index\"] = wordcloud[\"engagement_index\"].apply(lambda x: int(x))\nwordcloud.columns = [\"size\", \"word\"]\n\nwordcloud.to_csv(\"wordcloud.csv\", index=False)\n\n\nhtmlt10 = '''\n<!-- Bootstrap -->\n<link rel=\"stylesheet\" href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.4.1\/css\/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T\/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<!-- Style -->\n<style>\n\t.andradutza {\n\t\tfont-family: \"Times New Roman\", Times, serif;\n\t\toverflow-x: hidden;\n\t\twidth: 98%;\n\t}\n\t.svg-container {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\tpadding-bottom: 100%;\n\t\tvertical-align: top;\n\t\toverflow: hidden;\n\t}\n\t.svg-content {\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\n<\/style>\n\n<img id=\"baseimg\" src=\"usa.png\" style=\"display:none\" \/>\n<div class=\"andradutza\" style=\"background-color:#474747;\">\n\t<center><h1 style=\"color:white;\">\ud83d\udd8d\ufe0f All e-learning products<\/h1><\/center>\n\t<center><h4 style=\"color:white;\">-wordcloud based on engagement <i>(log10 scale)<\/i>-<\/h4><\/center>\n\t<div class=\"row\">\n\t\t<div id=\"map10\" class=\"svg-container\"><\/div>\n\t<\/div>\n<\/div>\n'''\n\n\njs_t10 = '''\nrequire.config({\n  paths: {\n    d3src: \"https:\/\/d3js.org\/\",\n  },\n  map: {\n    '*': {\n      'd3v4': 'd3src\/d3.v4.min',\n      'd3-selection': 'd3src\/d3-selection.v1.min',\n      'd3-drag': 'd3src\/d3-drag.v1.min',\n      'd3-shape': 'd3src\/d3-shape.v1.min',\n      'd3-path': 'd3src\/d3-path.v1.min',\n      'd3-dispatch': 'd3src\/d3-dispatch.v1.min',\n      'd3-annotation': 'https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/d3-annotation\/2.5.1\/d3-annotation.min.js',\n      'd3-cloud': 'https:\/\/cdn.jsdelivr.net\/gh\/holtzy\/D3-graph-gallery@master\/LIB\/d3.layout.cloud.js',\n    }\n  }\n});\n\nrequire([\"d3v4\", \"d3-annotation\", \"d3-cloud\"], function(d3, d3Annotation, d3Cloud) {\n\n\/\/ Inject d3Annotation methods to d3\nfor (var key in d3Annotation) {\n  d3[key] = d3Annotation[key];\n}\n\n\/\/ Get Assets URL set by Kaggle\nconst baseAssetsUrl = document.getElementById('baseimg').src.replace(\/usa.png.*$\/, '');\n\n\/\/ Set the SVG area\nconst margin = { LEFT: 30, RIGHT: 30, TOP: 10, BOTTOM: 30 }\nconst width = 950 - margin.LEFT - margin.RIGHT\nconst height = 900 - margin.TOP - margin.BOTTOM\n\nconst svg = d3.select(\"#map10\").append(\"svg\")\n  \/\/ .attr(\"style\", \"outline: thin solid red;\")\n  .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n  .attr(\"viewBox\", \"0 0 950 900\")\n  .classed(\"svg-content\", true)\n  .attr(\"transform\",\n   `translate(${margin.LEFT}, ${margin.TOP})`)\n\n\n\/\/ === Wordcloud ===\nd3.csv(baseAssetsUrl + \"wordcloud.csv\", function(data){ \n  \n  var myColor = d3.scaleOrdinal([\"#fc5a62\",\"#fc8f7c\",\"#fecd6c\",\"#e1fa73\",\"#5cfdf5\",\"#59e9fc\",\"#6e85f8\",\"#7243f4\",\"#f773f0\",\"#fa5884\"]);\n\n  function draw(words) {\n    svg\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + layout.size()[0] \/ 2 + \",\" + layout.size()[1] \/ 2 + \")\")\n        .selectAll(\"text\")\n          .data(words)\n        .enter().append(\"text\")\n          .style(\"font-size\", function(d) { return d.size; })\n          .attr(\"font-weight\", 900)\n          .style(\"fill\", (d, i) => myColor(i))\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"transform\", function(d) {\n            return \"translate(\" + [d.x, d.y] + \") rotate(\" + d.rotate + \")\";\n          })\n          .text(function(d) { return d.text; });\n        }\n\n  var layout = d3Cloud()\n  .size([width, height])\n  .words(data.map(function(d) { return {text: d.word, size:d.size}; }))\n  .padding(5)        \/\/space between words\n  .rotate(function() { return ~~(Math.random() * 2) * 90; })\n  .fontSize(function(d) { return d.size*1.3; })      \/\/ font size of words\n  .on(\"end\", draw);\nlayout.start();\n  \n});\n\n});\n'''\n\nh = display(HTML(htmlt10))\nj = py_display.Javascript(js_t10)\npy_display.display_javascript(j)","488e123b":"# Get product ids\nn = 17\ntop_n = df.groupby([\"lp_id\"])[\"engagement_index\"].mean().reset_index().\\\n            sort_values(\"engagement_index\", ascending=False).\\\n            head(n)[\"lp_id\"].values\n\n# Transform the data\ntimeprod = df.groupby([\"time\", \"lp_id\"])[\"engagement_index\"].median().\\\n                reset_index()\ntimeprod = pd.merge(timeprod, prods[[\"LP ID\", \"Product Name\"]], \n                     left_on=\"lp_id\", right_on=\"LP ID\")\ntimeprod = timeprod[timeprod[\"lp_id\"].isin(top_n)]\n\ntimeprod = pd.pivot(timeprod.drop(columns=[\"lp_id\", \"LP ID\"]), index=\"time\",\n                     columns=\"Product Name\", values=\"engagement_index\").\\\n                    reset_index().fillna(0)\n\n# Log scale for better visual\nfor c in timeprod.columns[1:]:\n    timeprod[c] = np.log10(timeprod[c]).\\\n                    replace([np.inf, -np.inf], 0)\n    timeprod[c] = timeprod[c]*100\n    \n# Convert from string to number\nstring_date = timeprod[\"time\"]\ntimeprod.insert(0, 'time2', string_date)\ntimeprod[\"time\"] = pd.to_datetime(timeprod[\"time\"]).apply(lambda x: x.value)\nfor col in timeprod.columns[1:]: \n    timeprod[col] = timeprod[col].astype(\"int64\")\n    \n# Save to .csv\ntimeprod.to_csv(\"timeprod.csv\", index=False)\n\n\n\nhtmlt7 = '''\n<!-- Bootstrap -->\n<link rel=\"stylesheet\" href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.4.1\/css\/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T\/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<!-- Style -->\n<style>\n\t.andradutza {\n\t\tfont-family: \"Times New Roman\", Times, serif;\n\t}\n\t.svg-container {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\tpadding-bottom: 100%;\n\t\tvertical-align: top;\n\t\toverflow: hidden;\n\t}\n\t.svg-content {\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\t.area-label {\n        font-family: sans-serif;\n        fill-opacity: 1;\n        fill: white;\n      }\n\n<\/style>\n\n<img id=\"baseimg\" src=\"usa.png\" style=\"display:none\" \/>\n<div class=\"andradutza\">\n\t<center><h1>Top 10 Educational Products<\/h1><\/center>\n\t<center><h4>-Median Daily Student Engagement <i>(log10 scale)<\/i>-<\/h4><\/center>\n    <div class=\"row\">\n\t\t<div id=\"map6\" class=\"svg-container\"><\/div>\n\t<\/div>\n<\/div>\n'''\n\n\njs_t7 = '''\nrequire.config({\n  paths: {\n    d3v6: \"https:\/\/d3js.org\/d3.v6.min\",\n    moment: \"https:\/\/unpkg.com\/moment@2.29.1\/moment\",\n  }\n});\n\nrequire([\"d3v6\", \"moment\"], function(d3, moment) {\n\n\/\/ Get Assets URL set by Kaggle\nconst baseAssetsUrl = document.getElementById('baseimg').src.replace(\/usa.png.*$\/, '');\n\n\/\/ Set the SVG area\nconst margin = { LEFT: 100, RIGHT: 10, TOP: 10, BOTTOM: 100 }\nconst width = 950 - margin.LEFT - margin.RIGHT\nconst height = 900 - margin.TOP - margin.BOTTOM\nconst chart_size = 1650\n\nconst svg = d3.select(\"#map6\").append(\"svg\")\n  \/\/ .attr(\"style\", \"outline: thin solid red;\")\n  .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n  .attr(\"viewBox\", \"0 0 950 900\")\n  .classed(\"svg-content\", true)\n  .attr(\"transform\",\n   `translate(${margin.LEFT}, ${margin.TOP})`)\n\n\nsvg.append(\"image\")\n.attr(\"xlink:href\", baseAssetsUrl + \"schoolbreak.png\")\n    .attr(\"x\", \"-3%\")\n    .attr(\"y\", \"41%\")\n    .attr(\"width\", 240)\n    .attr(\"height\", 200)\n    .style(\"opacity\", 1);\n\n\nd3.csv(baseAssetsUrl + \"timeprod.csv\").then((data) => {\n  \n  \/\/ List of groups = header of the csv files\n  var keys = data.columns.slice(2)\n  var days = [\"Mar 16\",\"Mar 24\",\"Jun 12\",\"Sep 10\"];\n  var formatDay = (d, i) => {\n      return days[i];      \n  }\n\n  \/\/ Stacking\n  var series = d3.stack()\n    .keys(keys)\n    .offset(d3.stackOffsetSilhouette)\n    (data)\n\n  \/\/ Area Chart\n  var area = d3.area()\n  .y(d => y(d.data.time))\n  .x0(d => x(d[0]))\n  .x1(d => x(d[1]))\n\n  \/\/ X and Y axis\n  var y = d3.scaleLinear()\n    .domain(d3.extent(data, d => d.time))\n    .range([0, width])\n\n  var x = d3.scaleLinear()\n  .domain([-chart_size, chart_size])\n  .range([height, 0])\n\n  \/\/ Color\n  const color = d3.scaleOrdinal()\n    .domain(keys)\n    .range([\"#db222a\", \"#e16853\", \"#f7b227\", \"#b4c95a\",\n            \"#1be9df\", \"#1acee6\", \"#5d6dba\", \"#5c4d86\",\n            \"#af6eac\", \"#c1385c\"])\n\n  \/\/ X axis placement\n  var yAxis = g => g\n    .attr(\"transform\", \"translate(0,\" + (height\/2-1) + \")\")\n    .call(d3.axisLeft(y)\n            .tickSize(-height+100)\n            .tickValues([1584316800000000000,1585008000000000000,\n              1591920000000000000, 1599696000000000000])\n            .tickFormat(formatDay)\n            )\n    .call(g => g.select(\".domain\").remove())\n    .call(g => g.selectAll(\".tick line\")\n                .attr(\"stroke\", \"#989898\")\n                .attr('stroke-dasharray', '5 5'))\n    .call(g => g.selectAll(\".tick\")\n                .select('text')\n                .attr('fill', \"#989898\")\n                .style(\"font-size\", 13))\n                .attr(\"transform\", \"translate(50,0)\")\n\n  \/\/ Show\n  const path = svg.append(\"g\")\n    .selectAll(\"path\")\n    .data(series)\n    .join(\"path\")\n      .attr(\"data-genre\", d => d.key)\n      .attr(\"fill\", ({key}) => color(key))\n      .attr(\"d\", area)\n      .attr(\"opacity\", 0.8)\n\n  svg.append(\"g\")\n      .call(yAxis)\n\n  \/\/ ======================================\n  const hover = (svg, path) => {\n  \n    const line = svg.append(\"g\")\n         .attr(\"display\", \"none\");\n  \n    line.append(\"g\")\n        .selectAll(\"line\")\n        .data(series)\n        .join(\"line\")\n        .attr(\"class\", \"cursor-line\")\n        .attr(\"fill\", \"#fff\")\n        .attr(\"stroke-width\", 0.8)\n        .attr(\"y1\", 10)\n        .attr(\"x1\", width-50)\n        .attr(\"y2\", 10)\n        .attr(\"x2\", 10);\n  \n    line.append(\"text\")\n        .attr(\"class\", \"text-year\")\n        .attr(\"font-size\", 13)\n        .attr(\"x\", 0)\n        .attr(\"y\", 26)\n        .attr(\"transform\", \n        \"rotate(0 0 0) translate(10, -20)\");\n    \n    line.append(\"g\")\n        .selectAll(\"text\")\n        .data(series)\n        .join(\"text\")\n        .attr(\"class\", \"text-genre\")\n        .attr(\"font-weight\", \"bold\")\n        .attr(\"font-size\", 13)\n        .attr(\"x\", width\/2+300)\n        .attr(\"y\", 26)\n        .attr(\"transform\", \n        \"rotate(0 0 10)\");\n\n    line.append(\"g\")\n        .selectAll(\"text\")\n        .data(data)\n        .join(\"text\")\n        .attr(\"class\", \"text-rating\")\n        .attr(\"font-size\", 13)\n        .attr(\"x\", width\/2+190)\n        .attr(\"y\", -5);\n\n    const mousemove = (event) => {\n  \n      event?.preventDefault();\n      \/\/ pointer = [posX, posY]\n      const pointer = d3.pointer(event);\n          \n      const xm = x.invert(pointer[0]);\n      const ym = y.invert(pointer[1]);\n      const genre = d3.select(event.target).attr(\"data-genre\");\n  \n      line.attr(\"transform\", `translate(0 ${pointer[1]})`)\n          .style(\"visibility\", \"inherit\");\n      \n      const dateFormatted = moment.unix(parseInt(ym)\/1e9).format(\"MMM Do\");\n      line.select(\".text-year\")\n        .text(dateFormatted);\n      \n      line.selectAll(\".text-rating\")\n        .text(d => {\n          return Math.floor(parseInt(d.time)\/(24*60*60*1e9)) === Math.floor(parseInt(ym)\/(24*60*60*1e9)) ? (d[genre])+\" page loads\/ 1k students (log10)\" : \"\";\n        });\n\n      line.selectAll(\".text-genre\")\n        .style(\"visibility\", \"hidden\")\n        .filter(d => d.key === genre)\n        .style(\"visibility\", \"inherit\")\n        .attr(\"fill\", d => d.key === genre ? color(d.key) : \"#000\")\n        .text(genre);\n      \n      line.selectAll(\".cursor-line\")\n        .attr(\"stroke\", \"fff0\")\n        .filter(d => d.key === genre)\n        .attr(\"stroke\", d => d.key === genre ? color(d.key) : \"#fff0\")\n      \n      path.attr(\"opacity\", d => d.key === genre ? 0.8 : 0.3);\n      \n      if (genre === null) {\n        path.attr(\"opacity\", 0.8);\n        line.style(\"visibility\", \"hidden\");\n      }\n    }\n\n    const mouseenter = () => {\n      line.attr(\"display\", null);\n    }\n  \n    const mouseleave = () => {\n      line.attr(\"display\", \"none\");\n    }\n\n    svg\n        .on(\"mousemove\", mousemove)\n        .on(\"mouseenter\", mouseenter)\n        .on(\"mouseleave\", mouseleave)\n\n  }\n\n  svg.call(hover, path);\n\n  \/\/ Pandemic Start\n  svg.append(\"text\")\n  .attr(\"x\", \"42%\")\n  .attr(\"y\", \"21%\")\n  .attr(\"font-size\", \"20px\")\n  .attr(\"text-anchor\", \"middle\")\n  .attr('fill', \"black\")\n  .attr(\"font-weight\", 900)\n  .style(\"pointer-events\", \"none\")\n  .text(\"Pandemic Start\");\n\n});\n\n});\n'''\n\nh = display(HTML(htmlt7))\nj = py_display.Javascript(js_t7)\npy_display.display_javascript(j)","7af2cbee":"# Get mean info on product id and district\nprodwheel = df.groupby([\"lp_id\", \"district_id\"])[\"engagement_index\"].mean().\\\n                reset_index()\nprodwheel = pd.merge(prodwheel, prods[[\"LP ID\", \"Product Name\"]], \n                     left_on=\"lp_id\", right_on=\"LP ID\")\nprodwheel = prodwheel[prodwheel[\"lp_id\"].isin(top_n)]\n\n# Add state info\nprodwheel = pd.pivot(data=prodwheel, index=\"district_id\", \n                     columns=\"Product Name\", values=\"engagement_index\").\\\n                    reset_index()\nprod_names = list(prodwheel.columns[1:])\nprodwheel = pd.merge(prodwheel, districts[[\"district_id\", \"state\", \n                                           \"Abbreviation\", \"Region\"]],\n                     on=\"district_id\")\nprodwheel = prodwheel.groupby([\"state\",\"Abbreviation\", \"Region\"])[prod_names].\\\n                mean().reset_index()\nprodwheel.rename(columns={'state': 'State'}, inplace=True)\n\n# Convert the data to Maximum\/Partial\/Unclear\nfor col in prod_names:\n    thresh = prodwheel[col].median()\n    prodwheel[col] = np.where(pd.isnull(prodwheel[col]) == True,\n                         'Unclear', np.where(prodwheel[col] >= thresh, \n                                             'Maximum', 'Partial'))\n    \nprodwheel.to_csv(\"prodwheel.csv\", index=False)\n\n\nhtmlt6 = '''\n<!-- Bootstrap -->\n<link rel=\"stylesheet\" href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.4.1\/css\/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T\/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<!-- Style -->\n<style>\n\t.andradutza {\n\t\tfont-family: \"Times New Roman\", Times, serif;\n\t}\n\t.svg-container {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\tpadding-bottom: 100%;\n\t\tvertical-align: top;\n\t\toverflow: hidden;\n\t}\n\t.svg-content {\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\n\t.slider {\n\t-webkit-appearance: none; \n\tappearance: none;\n\twidth: 10%; \n\theight: 15px; \n\tbackground: #e7e7e7; \n\toutline: none;\n\topacity: 0.7; \n\tborder-radius: 6px;\n\t-webkit-transition: .2s; \n\ttransition: opacity .2s;\n\t}\n\n\t\/* Mouse-over effects *\/\n\t.slider:hover {\n\topacity: 1;\n\t}\n\n\t.slider::-webkit-slider-thumb {\n\t-webkit-appearance: none; \/* Override default look *\/\n\tappearance: none;\n\twidth: 15px; \/* Set a specific slider handle width *\/\n\theight: 15px; \/* Slider handle height *\/\n\tbackground: #1ACEE6; \/* Green background *\/\n\tcursor: round; \/* Cursor on hover *\/\n\tborder-radius: 6px;\n\t}\n\n\tdiv.tooltip-donut {\n\t\tposition: absolute;\n\t\ttext-align: center;\n\t\tpadding: .3rem;\n\t\tbackground: #FFFFFF;\n\t\tcolor: #000000;\n\t\tborder: 1px solid #000000;\n\t\tborder-radius: 8px;\n\t\tpointer-events: none;\n\t\tfont-size: 0.8rem;\n\t}\n\n<\/style>\n\n<img id=\"baseimg\" src=\"usa.png\" style=\"display:none\" \/>\n<div class=\"andradutza\">\n\t<center><h1>Yearly Mean Engagement<\/h1><\/center>\n\t<center><h1>on top 10 Learning Products<\/h1><\/center>\n    <div class=\"row\">\n\t\t<div class=\"rangeslider\">\n\t\t<\/div>\n\t\t<div id=\"map5\" class=\"svg-container\"><\/div>\n\t<\/div>\n\t<div class=\"row\">\n\t\t<input type=\"range\" min=\"1\" max=\"22\" \n\t\tvalue=\"10\" class=\"slider\" id=\"myRange\"\n\t\tonchange=\"updateTextInput(this.value);\">\n\t<\/div>\n<\/div>\n'''\n\n\njs_t6 = '''\nrequire.config({\n  paths: {\n    d3: \"https:\/\/d3js.org\/d3.v5.min\",\n    d3Array: \"https:\/\/d3js.org\/d3-array.v2.min\",\n  },\n});\n\nrequire([\"d3\", \"d3Array\"], function(d3, d3Array) {\n\n\/\/ Inject d3array methods to d3\nfor (var key in d3Array) {\n  d3[key] = d3Array[key];\n}\n\n\/\/ Get Assets URL set by Kaggle\nconst baseAssetsUrl = document.getElementById('baseimg').src.replace(\/usa.png.*$\/, '');\n\n\/\/ Set the SVG area\nconst MARGIN = { LEFT: 100, RIGHT: 10, TOP: 10, BOTTOM: 100 }\nconst WIDTH = 950 - MARGIN.LEFT - MARGIN.RIGHT\nconst HEIGHT = 900 - MARGIN.TOP - MARGIN.BOTTOM\n\nconst svg = d3.select(\"#map5\").append(\"svg\")\n  \/\/.attr(\"style\", \"outline: thin solid red;\")\n  .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n  .attr(\"viewBox\", \"0 0 950 900\")\n  .classed(\"svg-content\", true);\n\nconst g = svg.append(\"g\")\n  .attr(\"transform\", `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`)\n\n\n\/\/ === Wheel ===\nd3.csv(baseAssetsUrl + \"prodwheel.csv\").then(function(data){\n\n  \/\/ Wheel Rotation\n  var rotate = document.getElementById(\"myRange\").value;\n\n  \/\/ Base Data\n  const regionOrder = [\"Northeast\", \"Midwest\", \"West\", \"South\"]\n  var wideData = data.sort(\n    (a, b) =>\n      d3.ascending(\n        regionOrder.indexOf(a.Region),\n        regionOrder.indexOf(b.Region)\n      ) || d3.ascending(a.Abbreviation, b.Abbreviation)\n  )\n\n  \/\/ === Constants ===\n  var rotation = (rotate \/ wideData.length) * Math.PI * 2\n  var categories = wideData.columns.slice(3)\n  var categoryOrder = categories.slice().reverse()\n  const innerRadius = 155\n  const outerRadius = WIDTH \/ 2\n  const colors = [\"#db222a\", \"#e16853\", \"#f7b227\", \"#b4c95a\",\n                \"#1be9df\", \"#1acee6\", \"#5d6dba\", \"#5c4d86\",\n                \"#af6eac\", \"#c1385c\"]\n\n  var grouped = d3.groups(wideData, d => d.Region)\n  var color = d3\n    .scaleOrdinal()\n    .domain(categories)\n    .range(colors)\n    .unknown(\"#505050\")\n\n  \/\/ Scales\n  const x = d3\n    .scaleBand()\n    .domain(wideData.map(d => d.State))\n    .range([rotation, 2 * Math.PI + rotation])\n\n  const y = d3.scaleLinear()\n    .domain([0, categories.length])\n    .range([innerRadius, outerRadius])\n\n  \/\/ Regions Data\n  var regions = d3\n    .groups(wideData, d => d.Region)\n    .map(([region, states]) => {\n      const startAngle = x(states[0].State);\n      const endAngle = \n          x(states[states.length - 1].State) + x.bandwidth();\n      const labelAngle =\n        ((startAngle + endAngle) \/ 2 - Math.PI \/ 2) % (Math.PI * 2);\n      return {\n        region,\n        startAngle,\n        endAngle,\n        labelAngle\n      };\n    })\n\n  \/\/ Long Data (for main chart)\n  var longData = wideData.flatMap(row =>\n    categories.map(category => ({\n      state: row.State,\n      abbreviation: row.Abbreviation,\n      region: row.Region,\n      category,\n      status: row[category]\n    }))\n  )\n\n  \/\/ ARC\n  var arc = d3\n  .arc()\n  .innerRadius(d => y(categoryOrder.indexOf(d.category)))\n  .outerRadius(d => y(categoryOrder.indexOf(d.category) + 1))\n  .startAngle(d => x(d.state))\n  .endAngle(d => x(d.state) + x.bandwidth())\n  .padRadius(innerRadius)\n\n  \/\/ Label X and Y\n  var labelX = (angle, radius) => Math.cos(angle) * radius\n  var labelY = (angle, radius) => Math.sin(angle) * radius\n\n  \/\/ Banned X and Y\n  var bannedX = d =>\n    labelX(\n      x(d.state) + x.bandwidth() \/ 2 - Math.PI \/ 2,\n      y(categoryOrder.indexOf(d.category) + 0.5)\n    )\n  var bannedY = d =>\n    labelY(\n      x(d.state) + x.bandwidth() \/ 2 - Math.PI \/ 2,\n      y(categoryOrder.indexOf(d.category) + 0.5)\n    )\n\n\n  \/\/ ====================================\n  \/\/ =============== CHART ==============\n  \/\/ ====================================\n  const wheel = g.selectAll()\n  .data(longData)\n  .join(\"g\");\n\n  wheel.append(\"path\")\n    .attr(\"d\", arc)\n    .attr(\"stroke\", \"white\")\n    .attr(\"fill\", d =>\n      color([\"Maximum\", \"Partial\"]\n      .includes(d.status) ? d.category : null))\n    .attr(\"fill-opacity\", \n      d => (d.status === \"Partial\" ? 0.4 : 1))\n    .attr('transform', \n    'translate('+(WIDTH\/2.2) +','+(HEIGHT\/1.75)+')');\n\n  wheel\n    .append(\"title\")\n    .text(d => `${d.state}: ${d.category}, ${d.status}`);\n\n  \/\/ Region Labels\n  var labelArc = d3\n  .arc()\n  .innerRadius(innerRadius - 20)\n  .outerRadius(innerRadius - 20)\n  .startAngle(d => d.startAngle)\n  .endAngle(d => d.endAngle)\n\n  \/\/ State Labels\n  wheel\n    .append(\"g\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"fill\", \"#888\")\n    .selectAll(\"text\")\n    .data(wideData)\n    .join(\"text\")\n    .attr(\"x\", d =>\n      labelX(x(d.State) + x.bandwidth() \/ 2 - Math.PI \/ 2, outerRadius + 16)\n    )\n    .attr(\"y\", d =>\n      labelY(x(d.State) + x.bandwidth() \/ 2 - Math.PI \/ 2, outerRadius + 16)\n    )\n    .attr(\"dy\", \"0.31em\")\n    .text(d => d.Abbreviation)\n    .attr('transform', \n    'translate('+(WIDTH\/2.2) +','+(HEIGHT\/1.75)+')');\n\n  \/\/ LEGEND\n  const legend = g\n    .selectAll(\"wheel\")\n    .data(categories.concat([\"Unclear\"]))\n    .join(\"g\")\n    .attr(\n      \"transform\",\n      (d, i) => `translate(325,\n          ${(i - ((categories.length + 1)\/5)+28) * 20})`\n    );\n\n  legend\n    .filter(d => categories.includes(d))\n    .append(\"rect\")\n    .attr(\"x\", -20)\n    .attr(\"y\", -160)\n    .attr(\"width\", 36)\n    .attr(\"height\", 18)\n    .style(\"opacity\", 0.4)\n    .attr(\"fill\", color);\n\n  legend\n    .append(\"rect\")\n    .attr(\"x\", 30)\n    .attr(\"y\", -160)\n    .attr(\"width\", 30)\n    .attr(\"height\", 18)\n    .attr(\"fill\", color);\n\n  legend\n    .append(\"text\")\n    .attr(\"x\", 65)\n    .attr(\"y\", -150)\n    .attr(\"dy\", \"0.35em\")\n    .attr(\"font-size\", \"12px\")\n    .text(d => d);\n\n  g.append(\"text\")\n    .attr(\"y\", \"38.5%\")\n    .attr(\"x\", \"33.5%\")\n    .attr(\"font-size\", \"12px\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"font-weight\", 900)\n    .text(\"<Median\")\n\n  g.append(\"text\")\n    .attr(\"y\", \"38.5%\")\n    .attr(\"x\", \"40%\")\n    .attr(\"font-size\", \"12px\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"font-weight\", 900)\n    .text(\">Median\")\n});\n\n});\n'''\n\nh = display(HTML(htmlt6))\nj = py_display.Javascript(js_t6)\npy_display.display_javascript(j)","17e48471":"# Import and save dataset\nteachers = pd.read_csv(\"..\/input\/covid19-education-data\/Teacher Survey 2020.csv\")\n\n# # Save into W&B\nsave_dataset_artifact(run_name=\"teachers_survey\", artifact_name=\"teachers_survey\",\n                      path=\"..\/input\/covid19-education-data\/Teacher Survey 2020.csv\")\n# Drop same questions\nteachers = teachers.drop([2, 7, 8, 13, 18]).reset_index(drop=True)\n# Unicize for D3 the Answer column\ntag = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, \"a\",\n       \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]\nteachers[\"Answer\"] = teachers[\"Answer\"] + tag\n\nteachers.to_csv(\"teachers_survey.csv\", index=False)\n\n\nhtmlt8 = '''\n<!-- Bootstrap -->\n<link rel=\"stylesheet\" href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.4.1\/css\/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T\/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n<!-- Style -->\n<style>\n\t.andradutza {\n\t\tfont-family: \"Times New Roman\", Times, serif;\n\t}\n\t.svg-container {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\tpadding-bottom: 100%;\n\t\tvertical-align: top;\n\t\toverflow: hidden;\n\t}\n\t.svg-content {\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n\n\t.axisRed path{\n\tstroke: #474747;\n\t}\n\n\t#map8 .annotation text {\n\t\tfill: #FF0F7B;\n\t}\n\n<\/style>\n\n<img id=\"baseimg\" src=\"usa.png\" style=\"display:none\" \/>\n<div class=\"andradutza\" style=\"background-color:#474747;\">\n\t<center><h1 style=\"color:white;\">\ud83e\udde0 The State of Mental Health<\/h1><\/center>\n\t<center><h4 style=\"color:white;\">-Key Highlights & Takeaways-<\/h4><\/center>\n\t<div class=\"row\">\n\t\t<div id=\"map8\" class=\"svg-container\"><\/div>\n\t<\/div>\n<\/div>\n'''\n\n\njs_t8 = '''\nrequire.config({\n  paths: {\n    d3src: \"https:\/\/d3js.org\/\",\n  },\n  map: {\n    '*': {\n      'd3v6': 'd3src\/d3.v6.min',\n      'd3-selection': 'd3src\/d3-selection.v1.min',\n      'd3-drag': 'd3src\/d3-drag.v1.min',\n      'd3-shape': 'd3src\/d3-shape.v1.min',\n      'd3-path': 'd3src\/d3-path.v1.min',\n      'd3-dispatch': 'd3src\/d3-dispatch.v1.min',\n      'd3-annotation': 'https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/d3-annotation\/2.5.1\/d3-annotation.min.js',\n    }\n  }\n});\n\nrequire([\"d3v6\", \"d3-annotation\"], function(d3, d3Annotation) {\n\n  function wrap(text, width) {\n    text.each(function() {\n      var text = d3.select(this),\n          words = text.text().split(\/\\s+\/).reverse(),\n          word,\n          line = [],\n          lineNumber = 0,\n          lineHeight = 1.1, \/\/ ems\n          y = text.attr(\"y\"),\n          dy = parseFloat(text.attr(\"dy\")),\n          tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\")\n      while (word = words.pop()) {\n        line.push(word)\n        tspan.text(line.join(\" \"))\n        if (tspan.node().getComputedTextLength() > width) {\n          line.pop()\n          tspan.text(line.join(\" \"))\n          line = [word]\n          tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", `${++lineNumber * lineHeight + dy}em`).text(word)\n        }\n      }\n    })\n  } \n\n\/\/ Inject d3Annotation methods to d3\nfor (var key in d3Annotation) {\n  d3[key] = d3Annotation[key];\n}\n\n\/\/ Get Assets URL set by Kaggle\nconst baseAssetsUrl = document.getElementById('baseimg').src.replace(\/usa.png.*$\/, '');\n\n\/\/ Set the SVG area\nconst margin = { LEFT: 30, RIGHT: 30, TOP: 10, BOTTOM: 30 }\nconst width = 950 - margin.LEFT - margin.RIGHT\nconst height = 900 - margin.TOP - margin.BOTTOM\n\nconst svg = d3.select(\"#map8\").append(\"svg\")\n  \/\/ .attr(\"style\", \"outline: thin solid red;\")\n  .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n  .attr(\"viewBox\", \"0 0 950 900\")\n  .classed(\"svg-content\", true)\n  .attr(\"transform\",\n   `translate(${margin.LEFT}, ${margin.TOP})`)\n\n\n\/\/ === Bubble Chart ===\nd3.csv(baseAssetsUrl + \"teachers_survey.csv\").then(function(data){ \n\n  data.forEach(d => {\n    d.Percentage = Number(d.Percentage)\n  })\n\n  \/\/ Scales\n  const x = d3.scaleLinear()\n    .range([0, height\/5])\n    .domain([0, d3.max(data, d => d.Percentage)])\n\n  const y = d3.scalePoint()\n    .range([0, width\/1.02])\n    .domain(data.map(d => d.Question))\n    .padding(0.4)\n\n  const y_2 = d3.scalePoint()\n  .range([0, width\/1.02])\n  .domain(data.map(d => d.Answer))\n  .padding(0.4)\n\n  \/\/ Scale positions\n  const xAxisGroup = svg.append(\"g\")\n  .attr(\"class\", \"axisRed\")\n    .attr(\"transform\", `translate(400, ${width\/1})`)\n\n  const yAxisGroup = svg.append(\"g\")\n  .attr(\"class\", \"axisRed\")\n    .attr(\"transform\", `translate(400, ${width\/5-160})`)\n\n  const yAxisGroup_2 = svg.append(\"g\")\n  .attr(\"class\", \"axisRed\")\n  .attr(\"transform\", `translate(500, ${width\/5-160})`)\n  \n  \n  \/\/ Axis Creation\n  xAxisGroup.call(d3.axisBottom(x)\n                    .tickSize(0)\n                    .tickValues([]))\n    .selectAll(\"text\")\n\n  yAxisGroup.call(d3.axisLeft(y)\n                    .tickSize(0))\n    .selectAll(\"text\")\n    .call(wrap, y.bandwidth()+360)\n    .attr(\"fill\", \"black\")\n    .attr(\"font-size\", \"11px\")\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"fill\", \"white\")\n    \/\/ .attr(\"font-weight\", 600)\n\n  yAxisGroup_2.call(d3.axisRight(y_2)\n                      .tickFormat(d => d.slice(0, -1))\n                      .tickSize(0))\n  .selectAll(\"text\")\n  .attr(\"fill\", \"black\")\n  .attr(\"font-size\", \"11px\")\n  .attr(\"text-anchor\", \"start\")\n  .attr(\"fill\", \"white\")\n  .attr(\"font-weight\", 600)\n\n  \/\/ Circles\n  const circles = svg.selectAll()\n    .data(data)\n    .enter().append('g')\n    .append(\"ellipse\")\n    .attr(\"class\", \"bar\")\n    .attr(\"transform\", `translate(200, ${width\/5-160})`)\n    .attr(\"cx\", 250)\n    .attr(\"cy\", d => y(d.Question))\n    .attr(\"rx\", d => x(d.Percentage)\/6.6+15)\n    .attr(\"ry\", d => x(d.Percentage)\/6.6)\n    .style(\"fill\", \"#f89b29\")\n\n\n  svg.append('g')\n  .selectAll('text')\n  .data(data)\n  .enter().append('text')\n  .text(d => d.Percentage*100+\"%\")\n  .attr('font-size', 11)\n  .attr(\"font-weight\", 600)\n  .attr('dx', 442)\n  .attr('dy', d => y(d.Question)+21)\n  .style(\"fill\", \"#474747\")\n  .style(\"pointer-events\", \"none\")\n\n\/\/ Interactive\nvar div = d3.select(\"body\").append(\"div\")\n.attr(\"class\", \"tooltip-donut\")\n.style(\"opacity\", 0);\n\ncircles\n.on('mouseenter', function (event, dt) {\n\/\/ MOUSE ON\nd3.selectAll('.value')\n      .attr('opacity', 0)\n\nd3.select(this)\n    .transition()\n    .duration(100)\n    .attr('opacity', 0.7)\n    .style(\"fill\", \"#FF0F7B\")\n    .style(\"stroke-width\", \"1px\")\n    .style(\"stroke\", \"#f89b29\")\n\nd3.select(this) \n  .append(\"text\")\n  .transition().duration(100)\n  .attr(\"class\", \"text\")\n  .text(\"Hello\")\n  .attr(\"x\", \"50%\")\n  .attr(\"y\", \"50%\")\n  .attr(\"font-size\", \"25px\")\n  .attr(\"fill\",  \"white\");\n\n\/\/ Makes the new div appear\ndiv.transition()\n    .duration(50)\n    .style(\"opacity\", 1);\n\n})\n\/\/ MOUSE LEAVE\n.on('mouseleave', function () {\n  d3.selectAll('.value')\n      .attr('opacity', 1)\n\n  d3.select(this)\n  .transition()\n  .duration(100)\n  .attr('opacity', 1)\n  .style(\"fill\", \"#f89b29\")\n})\n  \n});\n\n\/\/ Note\nconst annot1 = [\n  {\n  note: { \n    label: \"The teachers are split in half: 53% with lots of experience with e-learning, while 43% had no encounter with it.\",\n    title: \"A Great Deal of Experience: 53%\",\n    wrap: 230,  \/\/ smaller text splits in multiple lines\n    padding: 10,   \/\/ More = text lower\n  },\n  connector: {\n    end: \"dot\"},\n  color: [\"#ffffff\"],\n  x: 643,\n  y: 132,\n  dy: -20,\n  dx: 20\n},\n{\n  note: { \n    label: \"The responses are split evenly; this shows that children were affected differently according to their age and grade.\",\n    title: \"Same: 33% | Less: 31%\",\n    wrap: 230,  \/\/ smaller text splits in multiple lines\n    padding: 10,   \/\/ More = text lower\n  },\n  connector: {\n    end: \"dot\"},\n  color: [\"#ffffff\"],\n  x: 605,\n  y: 280,\n  dy: -20,\n  dx: 30\n},\n{\n  note: { \n    label: \"The majority are spending more on emotional support, however 31% are spending less time than before - showing an estrangement in communication from some of the children.\",\n    title: \"Less than Before: 31%\",\n    wrap: 230,  \/\/ smaller text splits in multiple lines\n    padding: 10,   \/\/ More = text lower\n  },\n  connector: {\n    end: \"dot\"},\n  color: [\"#ffffff\"],\n  x: 603,\n  y: 475,\n  dy: -20,\n  dx: 30\n},\n{\n  note: { \n    label: \"Higher grades are more skilled with technology, while little ones tend to struggle more with it (an need supervision).\",\n    title: \"Most: 46%\",\n    wrap: 230,  \/\/ smaller text splits in multiple lines\n    padding: 10,   \/\/ More = text lower\n  },\n  connector: {\n    end: \"dot\"},\n  color: [\"#ffffff\"],\n  x: 598,\n  y: 722,\n  dy: -25,\n  dx: 60\n}]\n\nsvg.append(\"g\")\n  .style('font-size', 14)\n  .call(d3.annotation()\n          .annotations(annot1))\n});\n'''\n\nh = display(HTML(htmlt8))\nj = py_display.Javascript(js_t8)\npy_display.display_javascript(j)","48e55c1b":"<h1 style=\"font-family: times-new-roman\">1.2 School Districts Benchmark<\/h1>\n\n<p style=\"font-family: times-new-roman\">As said before, we need to get a feel of how the districts are looking BEFORE jumping into the analysis, to avoid any biases in our interpretation as we go further.<p>\n    \n<p style=\"font-family: times-new-roman\">As general observations, most data was registered in states like <b>Connecticut, Utah, Massachusetts, Illinois or California<\/b>. More than 50% of the districts are located in the <b>suburbs<\/b>.<p>\n    \n<p style=\"font-family: times-new-roman\">Looking at the <quote>wheel<\/quote> we can see the top 4 characteristics of each state - and whether or not the majority of the schools in the state:<\/p> \n\n<ul style=\"font-family: times-new-roman\">\n    <li>have more than 50% of students identified as Black\/Hispanic;<\/li>\n    <li>have more than 50% of students eligible for free or reduced price lunch;<\/li>\n    <li>have good connection to internet or not (almost all observations had the same interval, so we won't look at this characteristic going further);<\/li>\n    <li>have more than <span>&#36;<\/span>1,000 per pupil expenditure (marked with deeper red, less than <span>&#36;<\/span>1,000 marked with lighter red).<\/li>\n<\/ul>\n\n<div class=\"alert simple-alert\" style=\"font-family: times-new-roman\">\n  <p style=\"font-family: times-new-roman\"><b>\ud83d\udccc Note<\/b>: We can observe that these characteristics correlate: the states where the percentage of Black\/Hispanic kids is grater than 50% are also the states where children get some sort of free or reduced lunch.<\/p>\n<\/div>","cd22e437":"<div class=\"alert simple-alert\" style=\"font-family: times-new-roman\">\n  <p style=\"font-family: times-new-roman\"><b>\ud83d\udccc Note<\/b>: So, the fact that the engagement didn't change as much between before and after the start of the pandemic for the top most used products shows that there are pupils that either don't have access or don't want to engage as much with the e-tools and the new scheduled school life in general. We could also ask the teachers whether or not this statement is true, because it depends on the fact that they weren't using much of the e-learning tools before the pandemic, but made use on more traditional learning products like books, manuals, movies and in-class games and activities.<\/p>\n<\/div>\n\n<h3 style=\"font-family: times-new-roman\"> \ud83c\udfeb Learning Product Engagement on States <\/h3>\n\n<ul style=\"font-family: times-new-roman\">\n  <li>Illinois, Indiana, New York, Connecticut and Ohio are the states with the biggest engagement in almost all 10 learning products.<\/li>\n  <li>Utah, California, Florida, Tennessee, Texas, Michigan, Minnesota and Virginia are the states with the lowest engagement in almost all 10 learning products.<\/li>\n<\/ul>","912e8493":"<h1 style=\"font-family: times-new-roman\">2. The State of Digital Learning<\/h1>\n\n<h2 style=\"font-family: times-new-roman\">2.1 Timeline for School Year 2020<\/h2>\n\n<div class=\"row\">\n  <div class=\"col-sm-8\">\n    <center><img src=\"https:\/\/i.imgur.com\/qebeciu.png\" width=500><\/center>\n  <\/div>\n    \n  <div class=\"col-sm-4\">\n    <p style=\"font-family: times-new-roman\">After <a href=\"https:\/\/www.ajmc.com\/view\/what-were-reading-roots-of-chinese-illness-discovered-birth-costs-soar-public-health-emergency-in-puerto-rico\">WHO Announced Mysterious Coronavirus Pneumonia in Wuhan in January 2020<\/a>, the apparition of the <a href=\"https:\/\/www.cdc.gov\/media\/releases\/2020\/p0121-novel-coronavirus-travel-case.html\">first COVID-19 case<\/a> on 21st January and the USA declaring the new coronavirus a Health Emergency (and then a Pandemic), schools started to cieze all on site activity <a href=\"https:\/\/www.edweek.org\/leadership\/map-coronavirus-and-school-closures-in-2019-2020\/2020\/03\">between 16th and 24th of March<\/a> 2020.<p>\n    <p style=\"font-family: times-new-roman\">Depending on the state and district, they <a href=\"https:\/\/www.thecut.com\/2020\/09\/will-schools-open-in-the-fall-reopening-statuses-explained.html\">resumed activity<\/a> at the beginning of the next school year (2020-2021) either full time, hybrid\/part-time or still fully remote. Connecticut decided to open more than 50% of it's schools, but <a href=\"https:\/\/gothamist.com\/news\/coronavirus-updates-trump-violates-public-health-guidelines-hold-indoor-rally-nevada?mc_cid=f37a7512a3&mc_eid=1b2da7088e\">shut down 12 of them<\/a> in the first weeks due to positive COVID-19 testing of both staff and pupils.<p>\n  <\/div>\n<\/div>\n\n<h3 style=\"font-family: times-new-roman\">\ud83d\udcc5 Student Activity Through Time<\/h3>\n\n<p style=\"font-family: times-new-roman\">A big graph with lots of information; Ok, so what are the key takeaways?<p>\n    \n<ul style=\"font-family: times-new-roman\">\n  <li>For the purpose of readability, this graph was created using only top <b>10 states<\/b> with most frequent districts (hence available data).<\/li>\n  <li>The median percentage of active users on a given day for a product varies widely, from <b>New York having on average ~0.14% activity<\/b> to states like <b>California or Washington with only 0.1% active users per product<\/b> on a given day.<\/li>\n  <li>The Activity Trend is general for almost all states - with <b>increased activity during the school year<\/b> and <b>dormant activity during holidays<\/b>, like the Summer Break or towards the end of the year (Winter Recess).<\/li>\n<\/ul>\n\n<div class=\"alert simple-alert\" style=\"font-family: times-new-roman\">\n  <p style=\"font-family: times-new-roman\"><b>\ud83d\udccc Note<\/b>: Observe that, although the total <b>mean<\/b> percentage of students in the district that have registered activity for 1 product is <b>~ 50%<\/b>, the <b>median falls at only 0.2%<\/b>. This means that the data is extremely squewed for some of the products (we'll discover more in the next chapters).<\/p>\n<\/div>","71dcfa7a":"<h3 style=\"font-family: times-new-roman\">\ud83d\udeb8 Is there an Engagement Gap?<\/h3>\n\n<ul style=\"font-family: times-new-roman\">\n  <li>On average, there is <b>lower engagement in the states that have a majority of black or hispanic students<\/b> vs the ones that have only a partial number (less than 50%). This trend is mantained ~equal throughout the entire year.<\/li>\n  <li>There is a <b>lower engagement in the states where the majority of students receive free or reduced lunch<\/b> vs the states were less than 50% of them do. However, we can observe that this difference narrows in the second part of the year.<\/li>\n  <li>A very interesting finding is that, although <b>children in states with big expenditure<\/b> per pupil have registered bigger engagement, there is <b>no significantly big difference<\/b> between them and <b>states where the expenditure per pupil is much lower<\/b>. Moreover, the difference narrows even more in the second half of the year.<\/li>\n<\/ul>","49adae9d":"<center><img src=\"https:\/\/i.imgur.com\/kqXDGNG.png\"><\/center>\n\n<center><h1 style=\"font-family: times-new-roman\">\ud83d\udcdd COVID-19 Impact on Digital Learning \ud83d\udcdd<\/h1><\/center>\n\n<h1 style=\"font-family: times-new-roman\">Foreword<\/h1>\n<h2 style=\"font-family: times-new-roman\">A personal Note<\/h2>\n<p style=\"font-family: times-new-roman\">The image above is a picture taken in my mother's classroom. It is empty, but not only because the children are on their Summer Holiday ... it has been empty, ON and OFF, for a while now. Almost two years to be exact.<\/p>\n\n<p style=\"font-family: times-new-roman\">Covid-19 striked during March 2020 - as for many other countries did. The rest of the school year was spent at home, in some disorganise. My mom started to come to me with all sort of questions she never had before. How do I create an account on this eLearning platform? Can I borrow your laptop? Andrada - the broadband is dead, I cannot join the class. Can I get a graphic design tablet for my birthday to use it as a blackboard?<\/p>\n\n<p style=\"font-family: times-new-roman\">I heard stories from the school where a math teacher became SUPER creative, building a desk with a bunch of books as standing for the laptop, a desk lamp and his phone suspended (somehow) so he could explain the equation, see the kids, AND send them materials ... all in the same time.<\/p>\n\n<p style=\"font-family: times-new-roman\">Then the second school year came. It took 5 weeks for the school to completely shut down for another 5 months. Children were getting tired of starring at a screen for 4 hours and then do homework for another 2 ... on the same screens. When the school reopened in April 2021, they came barring all sorts of new behaviors: <i>timidity, pasivity, lack of self confidence, panicks during tests, emotional fragility, and anger issues<\/i> we saw only in adults until now.<\/p>\n\n<div class=\"row\">\n    <div class=\"col-sm-8\">\n      <center><img src=\"https:\/\/i.imgur.com\/jbdxyS7.jpg\" width=450><\/center>\n  <\/div>\n  <div class=\"col-sm-4\">\n    <center><p style=\"font-family: times-new-roman\">They started trading being outside with staying inside. Stopped interracting. And, inevitably, more and more affirmed <q>it was better at home<\/q>. How can you blame them? To the left is a picture of what the pupil in the last row sees at the table. Exactly. Nothing.<\/p><\/center>\n  <\/div>\n<\/div>\n\n<p><\/p>\n\n<p style=\"font-family: times-new-roman\">This is only my mother's class. She has 28 kids in total, all aged ~8 years old. This is only one school's story. A school like many others in Romania. But how is it the rest of the picture? How did in fact Covid-19 impact the education, from both pupil and teacher perspective? And, most importantly - how big are the damages and what does it take to <b>go back to normal<\/b>?<\/p>\n\n<p style=\"font-family: times-new-roman\">Let's find out.<\/p>\n\n<h4 style=\"font-family: times-new-roman\">Libraries & Helper Functions Below \u2b07\ufe0f<\/h4>","679d495f":"<div class=\"alert success-alert\" style=\"font-family: times-new-roman\">\n  <h4 style=\"font-family: times-new-roman\"><center>\ud83d\uddb1\ufe0f Don't forget to <b>hover<\/b> your mouse over the charts and <b>interact<\/b> with them! \ud83d\uddb1\ufe0f<\/center><\/h4>\n<\/div>\n\n\n<h1 style=\"font-family: times-new-roman\">1. General Feeling of the Data<\/h1>\n\n<p style=\"font-family: times-new-roman\">Before going any further, we need to get some clarity of the data and some banchmarks, so our analysis going further will be as non-biased as possible.<p>\n\n\n<h1 style=\"font-family: times-new-roman\">1.1 The Basics<\/h1>\n\n<ul style=\"font-family: times-new-roman\">\n  <li>There are a total of <b>233 School Districts<\/b> available within the data, all around <b>USA<\/b>. A <a href=\"https:\/\/en.wikipedia.org\/wiki\/School_district\">school district<\/a> is a special-purpose district that operates local public primary and secondary schools in various nations.<\/li>\n  <li>There are a total of <b>372 distinct Educational Technology Products<\/b>, such as tools like Canva, educational apps like Duolingo, reading sites like Goodreads, or social pages like Facebook.<\/li>\n  <li>The data was collected between 01.01.2020 (a few months before the pandemic hit) until 31.12.2020. This will give a full year overview of a <quote>before and after<\/quote> usage.<\/li>\n  <li>Summing up all data collected for all the districts we end up with <b>~ 22.3M datapoints<\/b>, which in the Data Science World would be called Big Data.<\/li>\n  <li>From the 22M datapoints, around <b>24% have missing values<\/b> in the <code>engagement_index<\/code> feature. Nevertheless, the <code>pct_access<\/code> feature is fully available.<\/li>\n  <li><b>Around half of the pupils have at least one page load<\/b> on a product and on a given day on average. We will see that this average doesn't actually reflect the reality due to unrealistic spikes within the data.<\/li>\n  <li><b>There are almost 168 page loads per 1k students<\/b> on average on a given product and on a given day. This means <i>close to no page loads<\/i> for some of the pupils.<\/li>\n<\/ul>","f04d06f3":"<h4 style=\"font-family: times-new-roman\">Import Data & Preprocess \u2b07\ufe0f<\/h4>","5b0f45f5":"<h3 style=\"font-family: times-new-roman\">\ud83d\udcda Student Engagement Through Time<\/h3>\n\n<p style=\"font-family: times-new-roman\">The engagement's pattern looks very similar with the activity one:<p>\n    \n<ul style=\"font-family: times-new-roman\">\n  <li>Again, as a diclaimer, this graph was created using only top <b>10 states<\/b> with most frequent districts (hence available data).<\/li>\n  <li>After the start of the pandemic and the official closing of schools for the remainer of the year, the <b>median page loads per product has increased visibly<\/b> for most of the states.<\/li>\n   <li>Compared to the activity analyzed above, the <b>engagement doesn't decrease so drastically during the summer holiday<\/b>. This is because lots of Educational Products are used in the free time too.<\/li>\n  <li>Although the second part of the year (when the School Year 2020-2021 started) most of the states opted for hybrid or from home study, there is a <b>slight decrease in the median engagement<\/b> per product per 1k students.<\/li>\n<\/ul>\n\n<div class=\"alert simple-alert\" style=\"font-family: times-new-roman\">\n  <p style=\"font-family: times-new-roman\"><b>\ud83d\udccc Note<\/b>: The two streamgraphs show the same possibly alarming pattern. <i>Are they getting bored<\/i>? Why is there a decrease in the new school year in activity and engagement on these products?<\/p>\n<\/div>","67050951":"<h2 style=\"font-family: times-new-roman\">2.2 Learning Products<\/h2>\n\n<h3 style=\"font-family: times-new-roman\"> \ud83c\udf4e Top Products Overview<\/h3>\n\n<ul style=\"font-family: times-new-roman\">\n  <li>Most used educational products in 2020 were <b>Google products<\/b> (like Google Docs, Google Classroom, Google Drive, Google Forms, Google Sheets, Google Meet), <b>Youtube<\/b> and <b>Kahoot!<\/b>.<\/li>\n  <li>Compared to these few products, all the others had extremely little to no median engagement throughout the year. Hence, Google and Kahoot! have <i>monopol<\/i> so far over the online educational instruments.<\/li>\n<\/ul>\n\n<div class=\"alert simple-alert\" style=\"font-family: times-new-roman\">\n  <p style=\"font-family: times-new-roman\"><b>\ud83d\udccc Note<\/b>: This could be seen as an opportunity for the other e-learning products to increase their reach and marketing. The reason that these products aren't used is not that they aren't \"good enough\" - is because teachers do not have the time and sometimes the ability to research these products, so they stick with what they know already. I know for a fact from my mother that teachers talk a lot between them and share tips, but if most don't get outside the bubble often enough they can lose thack of new or already available products that might help and improve their way of teaching online.<\/p>\n<\/div>","887828a0":"<h1 style=\"font-family: times-new-roman\">3. \ud83e\udde0 State of Mental Health<\/h1>\n\n<p style=\"font-family: times-new-roman\">So far we have analyzed the data and took some personal conclusions to link certain patterns within the data with \"feelings\" or \"beliefs\" that we might have.<p>\n    \n<p style=\"font-family: times-new-roman\">However, these beliefs are biased and reflect my own take on these results. Hence, I believe it's best to ask the teachers, the people that have been in the front line during all this time how to interpret the data and maybe what actions could we further take to make it all better in the future.<p>\n    \n<p style=\"font-family: times-new-roman\">The analysis below is taken from <a href=\"https:\/\/e4e.org\/voices-virtual-classroom\">Voices from the Virtual Classroom<\/a> and it shows the key highlights and responses from teachers, what they have struggled with and what they've seen change in the behavior of their students.<p>\n    \n\n<h1 style=\"font-family: times-new-roman\"> Getting deeper: <\/h1>\n\n<ul style=\"font-family: times-new-roman\">\n  <li>All teachers agree that the apparition of <b>Covid-19 caused a big disruption in the academic life<\/b>. All use e-learning tools, but only ~half said that they were acquainted with it before. Looking in the original report we can observe that the <b>Primary teachers had the most \"learning\" to do in getting used to the educational e-learning tools<\/b>.<\/li>\n  <li>Most teachers agree that <b>Homework\/Assignments completion is worse than before<\/b>. Regarding <b>time spent on grading<\/b>, <b>Primary and Middle teachers say they spend less time<\/b> on it (because the children are very young and is very hard to correctly asses them), while the <b>High School teachers say they spend more time<\/b> (due to the fact that is much harder to evaluate online papers vs physical ones).<\/li>\n  <li>A good outcome has been that teachers started to <b>develop more proffesionally<\/b>, as well as <b>reach out to parents and children more often<\/b> than in the past, in an effort to keep up their engagement and support as much as possible.<\/li>\n  <li><b>Only ~50% of teachers state that their students have age appropriate skills<\/b> to handle the tech part of studying from home - the other half are mainly Primary and Middle class teachers, with children too young to fully understand how to navigate between the apps and acquire new information in the same time.<\/li>\n<\/ul>\n\n\n<div class=\"alert simple-alert\" style=\"font-family: times-new-roman\">\n  <p style=\"font-family: times-new-roman\"><b>\ud83d\udccc Serious issues<\/b>: Most teachers agree that the highest issues are the <b>little to no access to technological tools or skills<\/b>. Most parents can't afford buying a laptop for every child in the house, or help them whenever they enquire a technical issue. There is also an issue with the <b>lack of space<\/b>, as the children and parents usually study\/work in the same room. <b>Broadband is another problem<\/b>, as online classes happen in the same time in different regions, so the members of the call may get disconnected at any time. Lastly, the main concern for teaches is the <b>capacity to \"get back on track\" with the curriculum<\/b>, while students are more anxious about the <b>Social and Emotional implications<\/b> Covid-19 might have on their academic life.<\/p>\n<\/div>","5e5727d6":"<h3 style=\"font-family: times-new-roman\"> \ud83d\udd8d\ufe0f Other Products<\/h3>\n\n<p style=\"font-family: times-new-roman\"> There are many more e-learning products that seem yet to be discovered by the teachers\/ pupils. Here are 164 products with the biggest one having the biggest median engagement to much smaller ones, with less median engagement:<\/p>","5dee7019":"<h3 style=\"font-family: times-new-roman\">\ud83c\uddfa\ud83c\uddf8 States Engagement<\/h3>\n\n<ul style=\"font-family: times-new-roman\">\n  <li>The <b>biggest engagement<\/b> registered in 2020 is in <b>North Dakota and Arizona<\/b> (however, we need to keep in mind that these states had data available from only one district).<\/li>\n  <li><b>Connecticut and Massachusetts<\/b> are the states with the <b>biggest true engagement<\/b>, based on the fact that there was data collected from more than 20 districts for each of these states.<\/li>\n  <li>We <i>can't say that a region in US is more active than another<\/i>, as the available states are quite dispersed throughout the country.<\/li>\n<\/ul>","5f2dc8d8":"<h3 style=\"font-family: times-new-roman\">\ud83c\udf92 Learning Product Engagement Timeline <\/h3>\n\n<ul style=\"font-family: times-new-roman\">\n  <li>Based on the most engaging 10 products, we can see that there is an increase in the new school year 2020-2021 vs the engagement before the big summer break. This means that <b>students started not only getting used to these products, but also realised that they're here to stay and they need to start using them more often<\/b>.<\/li>\n  <li>Youtube started increasing in engagement during summer 2020 and sustained it's activity in the new school year.<\/li>\n  <li>Although after the start of the pandemic there has been considerable increase in usage for these e-learning tools, the <b>difference after vs the little time we have available before the pandemic isn't that substantial<\/b>. This could happen because most of the kids that were active after the pandemic started were also active using these tools before. However, there is a <b>big pool of students that seem to not use these products at all<\/b> (and this can be seen in the activity percentage).<\/li>\n<\/ul>","3ecf8412":"<h1 style=\"font-family: times-new-roman\">\ud83d\udcd1 4. Taking all to action<\/h1>\n\n<h2 style=\"font-family: times-new-roman\">\ud83d\udcd1 What do we now know?<\/h2>\n\n<center><img src=\"https:\/\/i.imgur.com\/PpENQpl.png\" width=800><\/center>\n\n<ul style=\"font-family: times-new-roman\">\n  <li>Activity and Engagement increased a bit after the start of the pandemic and then slightly decreased in the beginning of the academic year 2020-2021 (however, this trend isn't shown in top 10 products). This means that both <b>teachers and students started using more diligently a few products that quickly monopolized the others<\/b>, however the overall average engagement is low and alarming, at least compared to what I would have expected to see.<\/li>\n  <li>We learned that the states where there are bigger percentages of <b>black\/hispanic students<\/b> or more <b>pupils that benefit of free\/reduced lunch need better care<\/b> and attention. <b>North Dakota, Arizona, New York, New Hempshire and Connecticut<\/b> are the states that stand out in terms of the biggest engagement in comparison to the others. However, the overall low engagement may be caused by:<\/li>\n <ul style=\"font-family: times-new-roman\">\n    <li><b>Lack of age appropiate skills<\/b>: children in Primary and Middle school don't know yet how to properly use the technology and might get stuck and frustrated on the way. If the parent or tutor doesn't know, can't or isn't able to be there for them when they need it, they might fall short and stop using the educational products alltogether.<\/li>\n    <li><b>Lack of technology resources<\/b>: families that have 2 or more children would need to use a distinct laptop\/tablet in the same time during the online courses AND have a proper sepparate (quiet) space to learn. Unfortunately, many families lack these kind of resources.<\/li>\n    <li><b>Low Emotional Stability<\/b>: truth is some children started getting tired of the \"new norm\". Despite the emotional support they have from their teacher, lack of interaction might have accumulated, leading to them not wanting to engage and participate during the online classes and\/or during homework.<\/li>\n    <li><b>Low energy<\/b>: Staying in from of a computer 6 hours a day and then doing the homework (also digitaly) for another 2 to 3 hours can take a toll on children's overall wellbeing. This accumulates to 8+ hours of staying in a chair, 5 times a week, equivalent to a full time job.<\/li>\n  <\/ul>\n  <li>There have been active efforts from teachers to <b>improve their technological skills as well as overall curriculum<\/b>, in an effort to adapt it as much as possible for the \"online\" classrooms. Moreover, they are active in keeping in touch and <b>reaching out more to parents and children<\/b>. These acts are extremely benefficial, narrowing the communication gap that has been inevitably formed while staying at home.<\/li>\n<\/ul>\n\n<h2 style=\"font-family: times-new-roman\">\ud83d\udcd1 What to do better?<\/h2>\n\n<center><img src=\"https:\/\/i.imgur.com\/JqGi3AG.png\" width=800><\/center>\n\n<ol style=\"font-family: times-new-roman\">\n  <li><b>Keeping schools open as much as possible should be a priority<\/b>, as this solves many problems that the pandemic brought to begin with. To keep the safety, I would move into online format for 2 weeks only classes that have a confirmed case, ~10 days if no new case has been found between the other students.<\/li>\n  <li>For online classes, <b>teachers should try and brainstorm as many new, fun, out of the ordinary lectures to keep the students engaged<\/b>. This way, they will join every day with a curiosity in mind: \"What will we do today?\". New games, movies or fun interactive ways to teach might encourage them to pay attention, despite being alone at home and not in a classroom full of people.<\/li>\n  <li><b>Better marketing for e-learning products<\/b>. As we saw, there are only 6-7 products that ar highly used. This is because teachers do not know about other apps and do not have the necessary time to research. Hence, I would <b>designate a new job<\/b> (part time or full time), where the requirements would be to <b>always be up to date with e-learning tools and to recommend and explain to teachers what and how to use them<\/b>. Moreover, I would make this <b>customized<\/b> on a grade and lecture basis: a 1st grade teacher will need different e-learning tools vs. what a math teacher in 8th grade might need. Teachers already have their hands full, so a designated person that will share customized tools for everybody will help grow both the engagement of the students (bringing something new and exciting to the table) and the engagement of the product.<\/li>\n  <li>The <b>e-learning tools should always be <i>FREE<\/i><\/b> for the end-user: either free by default or paid by the educational institute. Assuming that the teacher or parent can afford any additional subscription for e e-learning tool would be faulty and unrealistic.<\/li>\n  <li>We should not underestimate the power of these e-learning tools. Even after the pandemic is over, teachers could still use these amazing well thought apps to show young future adults how to navigate through technology and to learn in an interactive different way. Helping the low engagement products gain visibility will benefit the pupils, teachers and overall market tremendously.<\/li>\n  <li>Teachers should take part in <b>IT courses<\/b>, so they could get better acquinted with the digital world.<\/li>\n  <li><b>Online classes should be shorter<\/b> and have different curriculum (and engaging, as stated at 2.). Teachers should also coordinate their assignments every week, so pupils would not have an overload of work at once. <b>Parents should be involved<\/b> as well, to be sure that not only children take part in all their online classes, but that they also have some time appart from the devices. <i>It would be a shame to shorten the time spent at the computer for online classes, but the child to immediately start a game or browse social media afterwards for hours on end<\/i>. <b>Encouraging them to get outside<\/b> in a safe manner will <b>benefit their Social and Emotional anxiety<\/b>.<\/li>\n  <li>Introduce <b>more psychologists<\/b> in schools. I would also implement a mandatory 1to1 for each student and psychologist at least every few weeks. This way we can check in as adults and catch early any metal health issue or distress that the child might develop.<\/li>\n  <li>A big issue I struggle to find a fix to is for smaller children. School's main purpose for Primary pupils is to involve and integrate them into the society, hence any online classes will struggle to meet this goal. Furthermore, little children will need mandatory help and guidance from their parents\/tutors using the technology. Hence, I would encourage smaller sizes of classes and a lighter policy whenever any Covid-19 case is found, as their tolerance to the virus is very good.<\/li>\n<\/ol>\n\n<h2 style=\"font-family: times-new-roman\">\ud83c\udf10 Just a thought ...<\/h2>\n\n<center><img src=\"https:\/\/i.imgur.com\/kPSYX20.jpg\" width=800><\/center>\n\n<p style=\"font-family: times-new-roman\">What better time than this to start developing and implementing true <b>VR<\/b> in schools?<\/p>\n\n<p style=\"font-family: times-new-roman\">Although expensive and ... hey, listen! I am just daring to think of what it could be (thinking that pupils in US and all over the world lack at the moment the \"simple\" resources like a good reliable device, connection to internet or space to study), VR could take teaching to the next level.<\/p>\n\n<p style=\"font-family: times-new-roman\">I am inevitably thinking of these SUPER COOL holograms in Star Wars and their \"online\" meetings: all standing in their chair, but being able to communicate and see eachother in a real space and time, no matter their location in the Universe - Augmented Reality.<\/p>\n\n<p style=\"font-family: times-new-roman\">Taking this a step further and we could learn in a classroom in the Amazonian Jungle, in Space or on top of a building, being able to interact virtualy with the teacher and the classmates, all from our home - Virtual Reality.<\/p>\n\n<p style=\"font-family: times-new-roman\">And it has everything: the interactivity, the engagement, the social connection and the safety of the home.<\/p>\n\n<p style=\"font-family: times-new-roman\">I know it's a long shot. I know all the barriers. But ... wouldn't it be awesome? \ud83e\udd2f<\/p>\n\n<center><img src=\"https:\/\/i.imgur.com\/nF12w9Z.png\" width=800><\/center>\n\n<h1 style=\"font-family: times-new-roman\">\ud83d\ude4f Giving thanks<\/h1>\n\n<p style=\"font-family: times-new-roman\">This analysis couldn't have been possible without the guidance and contribution of some amazing people and articles:<\/p>\n\n<ul style=\"font-family: times-new-roman\">\n  <li><b>Schubert<\/b>: He and <a href=\"https:\/\/www.kaggle.com\/spitfire2nd\/enthusiast-to-data-professional-what-changes\/\">his second place winning notebook for the DS Kaggle Survey Challenge<\/a> showed me for the first time ever the beauty and wonders of D3. He also guided me onto how to start learning, and for his kindness I am forever grateful. <\/li>\n  <li><b>D3 help<\/b>: How to create a mouse-over pie chart: <a href=\"https:\/\/medium.com\/@kj_schmidt\/show-data-on-mouse-over-with-d3-js-3bf598ff8fc2\">by KJ Schmidt<\/a> and beautiful bar chart <a href=\"https:\/\/jsfiddle.net\/matehu\/w7h81xz2\/\">by matehu<\/a>.<\/li>\n  <li><b>The beautiful wheel<\/b>: The wheel is customed after this amazing article here: <a href=\"https:\/\/observablehq.com\/@kerryrodden\/equal-area-radial-matrix-of-lgbt-rights\">Equal-Area Radial Matrix of LGBT Rights<\/a>.<\/li>\n  <li><b>Loris Mat<\/b>: For this beautiful <a href=\"https:\/\/observablehq.com\/@git1984\/streamgraph-pitchfork-reviews\">streamgraph<\/a>.<\/li>\n<\/ul>\n\n<hr size=\"4\" width=\"100%\" color=\"#5d6dba\">\n\n> <p style=\"font-family: times-new-roman\">My <b><a href=\"https:\/\/wandb.ai\/andrada\/C19-learn?workspace=user-andrada\">W&B Dashboard<\/a><\/b> is growing:<p>\n\n<center><img src=\"https:\/\/i.imgur.com\/RFKeYrv.png\" width=1000><\/center>\n<br>\n<img src=\"https:\/\/i.imgur.com\/cUQXtS7.png\">\n<h1 style=\"font-family: times-new-roman\">My Specs<\/h1>\n\n<ul style=\"font-family: times-new-roman\">\n  <li><b>\ud83d\udda5 Z8 G4<\/b>: Workstation<\/li>\n  <li>\ud83d\udcbe 2 CPUs & 96GB Memory<\/li>\n  <li><b>\ud83c\udfae NVIDIA<\/b> Quadro RTX 8000<\/li>\n  <li><b>\ud83d\udcbb Zbook<\/b> Studio G7 on the go<\/li>\n<\/ul>"}}