{"cell_type":{"b7724814":"code","df03f8e8":"code","365f66be":"code","cb6dac26":"code","186dfa47":"code","d95c82fd":"code","c6a99db3":"code","2d3d15a6":"code","5eef97cb":"code","5f27d866":"code","abf1f76f":"code","9a4b64e2":"code","1295a01e":"code","0270f28c":"code","c211c514":"code","cb5fad8c":"code","8397193b":"code","55c2fa15":"code","77094ca7":"code","d453bed7":"markdown","e038c92d":"markdown","e4b7c48e":"markdown","bc6e1f5e":"markdown","c8892d0b":"markdown","338fdb62":"markdown","86ffbd7e":"markdown","28acdbaa":"markdown","4be7bd5e":"markdown","68fcff4c":"markdown","29f76472":"markdown"},"source":{"b7724814":"import numpy as np\nimport pandas as pd\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use('seaborn')\nsns.set(font_scale=2.5) \nimport missingno as msno\n\n#ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n%matplotlib inline","df03f8e8":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")","365f66be":"drop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin', 'SibSp','Parch']\ntrain = train.drop(drop_elements, axis = 1)\ntest = test.drop(drop_elements, axis = 1)","cb6dac26":"def checkNull_fillData(df):\n    for col in df.columns:\n        if len(df.loc[df[col].isnull() == True]) != 0:\n            if df[col].dtype == \"float64\" or df[col].dtype == \"int64\":\n                df.loc[df[col].isnull() == True,col] = df[col].mean()\n            else:\n                df.loc[df[col].isnull() == True,col] = df[col].mode()[0]\n                \ncheckNull_fillData(train)\ncheckNull_fillData(test)","186dfa47":"str_list = [] \nnum_list = []\nfor colname, colvalue in train.iteritems():\n    if type(colvalue[1]) == str:\n        str_list.append(colname)\n    else:\n        num_list.append(colname)","d95c82fd":"train = pd.get_dummies(train, columns=str_list)\ntest = pd.get_dummies(test, columns=str_list)","c6a99db3":"train.columns","2d3d15a6":"test.columns","5eef97cb":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split","5f27d866":"X_train = train.drop('Survived', axis=1).values\ntarget_label = train['Survived'].values\nX_test = test.values","abf1f76f":"X_train, X_valid, y_train, y_valid = train_test_split(X_train, target_label, test_size=0.25, random_state=2021)","9a4b64e2":"model = RandomForestClassifier()\nmodel.fit(X_train, y_train)","1295a01e":"prediction = model.predict(X_valid)","0270f28c":"print('Total validatation data set count: {}   {:.2f}%  Auccuracy'.format(y_valid.shape[0], 100 * metrics.accuracy_score(prediction, y_valid)))","c211c514":"model.feature_importances_","cb5fad8c":"feature_importance = model.feature_importances_\nSeries_feat_imp = pd.Series(feature_importance, index=test.columns)","8397193b":"Series_feat_imp.sort_values","55c2fa15":"plt.figure(figsize=(8, 8))\nSeries_feat_imp.sort_values(ascending=True).plot.barh()\nplt.xlabel('Feature importance')\nplt.ylabel('Feature')\nplt.show()","77094ca7":"submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nprediction = model.predict(X_test)\nsubmission['Survived'] = prediction\nsubmission.to_csv('.\/titanic_submission.csv', index=False)","d453bed7":"# Check missing data and fill new data","e038c92d":"# Onehot encoding as get_dummies","e4b7c48e":"## 1.set training data and traing label  \/ set test data","bc6e1f5e":"# Load Data","c8892d0b":"## 4.show feature importance ","338fdb62":"# Devide column type","86ffbd7e":"# Predict test data and submisstion","28acdbaa":"## 2.model fitting","4be7bd5e":"# Modeling","68fcff4c":"# Drop columns","29f76472":"## 3.predict validata data and show score "}}