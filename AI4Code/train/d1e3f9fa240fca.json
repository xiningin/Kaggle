{"cell_type":{"ef0e2c31":"code","0e1c8ab9":"code","1a89f286":"code","9f656b5c":"code","55f56962":"code","abdb702f":"code","16a041ae":"code","b4278458":"code","9b733546":"code","502e219c":"code","810a267f":"code","fe30e6ab":"code","676c8e50":"code","caca2219":"code","ae1240a8":"code","ef083617":"code","4d9757ad":"markdown","345b54b2":"markdown","99e557c1":"markdown","cdaaef03":"markdown","76336c73":"markdown"},"source":{"ef0e2c31":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0e1c8ab9":"import pandas as pd\nimport matplotlib as plt\nimport numpy as np\n%matplotlib inline","1a89f286":"df = pd.read_csv('..\/input\/suv-data\/suv_data.csv')\ndf","9f656b5c":"df.head(10)","55f56962":"X=df.iloc[:,[2,3]].values\nY=df.iloc[:,4].values\n","abdb702f":"X","16a041ae":"Y\n","b4278458":"from  sklearn.model_selection import train_test_split","9b733546":"train_test_split","502e219c":"X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.20,random_state=0)","810a267f":"from sklearn.preprocessing import StandardScaler","fe30e6ab":"from sklearn.linear_model import LogisticRegression","676c8e50":"classifier=LogisticRegression(random_state=0)\nclassifier.fit(X_train,Y_train)","caca2219":"Y_prediction=classifier.predict(X_test)","ae1240a8":"from sklearn.metrics import accuracy_score\n","ef083617":"accuracy_score(Y_test,Y_prediction)*100","4d9757ad":"using 2nd and 3rd column to predict the dependent variable i.e purchase\nLet's use X to represent independent quantities\nand Y to represent dependent variable ","345b54b2":"# SUV DATA PREDICTIONS","99e557c1":"0 stands for didn't purchase\n1 stands for purchase","cdaaef03":"Now we will divide data into training and testing subsets","76336c73":"sc=StandardScaler()\nX_train=sc.fit_transform(X_train)\nX_test=sc.transform(X_test)"}}