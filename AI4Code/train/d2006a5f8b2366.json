{"cell_type":{"75870529":"code","92e2e735":"code","b8775907":"code","0efcd353":"code","167cb181":"code","2aa66831":"code","1c0fa72e":"code","e74850cc":"code","053d2cda":"code","8971f662":"code","e6a0256b":"code","4b24b0e6":"code","5dec8e56":"code","a7610663":"code","b06298ba":"code","51b3e850":"code","007956de":"code","3ed107ff":"code","1f336d73":"code","2a1838da":"code","ed898f38":"code","bf0b7dd4":"code","3290b314":"code","a50c5628":"code","690e75de":"code","ec4969e7":"code","2c6d962d":"code","970efaa6":"code","65b20ec5":"code","e4c2e59d":"code","18574ab9":"markdown","8cd79eea":"markdown","4330e348":"markdown","c91a28f4":"markdown","9dbf95ee":"markdown","f85ea3c1":"markdown","e0cacb68":"markdown","fa7a2322":"markdown","ae078550":"markdown","985483f1":"markdown","c4cad66e":"markdown","07def2e6":"markdown","8e980323":"markdown","c67aead1":"markdown","4029c51f":"markdown","2da04ae8":"markdown","75cd718a":"markdown","2531f895":"markdown","ece062f1":"markdown","b6ea037a":"markdown","a43980f5":"markdown","ceff2ff1":"markdown","2358770e":"markdown","39afad48":"markdown","ef397bb8":"markdown","b94d2d14":"markdown","3682db69":"markdown","18d8cd93":"markdown","483759d0":"markdown","2c530f0d":"markdown","5b8e0677":"markdown","a2a8dd18":"markdown","7c51e753":"markdown","436766ca":"markdown","c805723f":"markdown"},"source":{"75870529":"import numpy as np # importa a biblioteca para fazer opera\u00e7\u00f5es em matrizes\nimport pandas as pd # importa a biblioteca para facilitar a manipula\u00e7\u00e3o e an\u00e1lise dos dados\n\n# importa o arquivo e guarda em um dataframe do Pandas\ndf_dataset = pd.read_csv('..\/input\/iriscsv\/iris.csv', sep=',', index_col=None) ","92e2e735":"display(df_dataset.shape)","b8775907":"display(df_dataset.head(n=5))","0efcd353":"# apresenta as principais estat\u00edsticas sobre a base de dados\ndf_detalhes = df_dataset.describe()\n\ndisplay(df_detalhes)","167cb181":"df_classe = df_dataset[\"classe\"]\ndisplay(df_classe.shape)","2aa66831":"display(df_classe.describe())","1c0fa72e":"display(df_classe.unique())","e74850cc":"df_amostrasSetosa = df_dataset[ df_dataset[\"classe\"] == \"Iris-setosa\"]\ndisplay(df_amostrasSetosa.shape)","053d2cda":"df_detalhesClasses = df_dataset['classe'].describe()\n\ndisplay(df_detalhesClasses)\n\n# encontra as classes do problema\nclasses = df_dataset['classe'].unique()\nprint('\\nClasses do problema: ', classes)\n\n# conta a quantidade de dados em cada classe\nfor classe in classes:\n    df_classe = df_dataset[ df_dataset['classe']==classe]\n    \n    print('Qtd. de dados da classe %s: %d' %(classe, df_classe.count().values[0]))","8971f662":"# apresenta as principais estat\u00edsticas sobre a base de dados\ndisplay(df_dataset.boxplot(figsize=(15,7)))","e6a0256b":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\n# matriz de gr\u00e1ficos scatter \nsns.pairplot(df_dataset, hue='classe', size=3.5);\n\n# mostra o gr\u00e1fico usando a fun\u00e7\u00e3o show() da matplotlib\nplt.show()","4b24b0e6":"#scatter plot\nsns.lmplot(x='comprimento_sepala', y='largura_petala', data=df_dataset, \n           fit_reg=False, # No regression line\n           hue='classe')   # Color by evolution stage\n\n# cria um t\u00edtulo para o gr\u00e1fico\nplt.title('Comprimento vs largura da s\u00e9pala.')\n\n# mostra o gr\u00e1fico\nplt.show()","5dec8e56":"# define a dimens\u00e3o do gr\u00e1fico\nplt.figure(figsize=(10,7))\n\n# cria o boxplot\nsns.boxplot(x=\"classe\", y=\"comprimento_sepala\", data=df_dataset, whis=1.5)\n\n#mostra o gr\u00e1fico\nplt.show()","a7610663":"# cria um gr\u00e1fico de barras com a frequ\u00eancia de cada classe\nsns.countplot(x=\"classe\", data=df_dataset)\n\n#mostra o gr\u00e1fico\nplt.show()","b06298ba":"mean = df_dataset.mean()\n\nstd = df_dataset.std()\n\n# criando um gr\u00e1fico de barras vertical\nplt.figure(figsize=(10,5))\nmean.plot(kind=\"bar\", rot=0, color=\"red\", fontsize=13, yerr=std);\nplt.show()\n\n# criando um gr\u00e1fico de barras horizontal\nplt.figure(figsize=(10,5))\nmean.plot(kind=\"barh\", rot=0, color=\"red\", fontsize=13, xerr=std);\nplt.show()\n","51b3e850":"# cria o histograma\nn, bins, patches = plt.hist(df_dataset['comprimento_petala'].values,bins=10, color='red', edgecolor='black', linewidth=0.9)\n\n#mostra o gr\u00e1fico\nplt.show()\n\n# imprime as cestas de valores\nprint(bins)","007956de":"# criando o gr\u00e1fico de densidade \ndensityplot = df_dataset.plot(kind='density')\n\n# mostra o gr\u00e1fico\nplt.show()\n\n# criando o gr\u00e1fico de densidade apenas do atributo comprimento_petala\ndensityplot = df_dataset['comprimento_petala'].plot(kind='density')\n\n# mostra o gr\u00e1fico\nplt.show()","3ed107ff":"# criando uma matriz X com os valores do data frame\nX = df_dataset.iloc[:,:-1].values # exceto a coluna da classe (a \u00faltima = -1)\n\n# matriz de covariancia\ncovariance = np.cov(X, rowvar=False)\n\n# matriz de correla\u00e7\u00e3o\ncorrelation = np.corrcoef(X, rowvar=False)\n\nprint('Matriz de covari\u00e2ncia: ')\ndisplay(covariance)\n\nprint('\\n\\nMatriz de correla\u00e7\u00e3o: ')\ndisplay(correlation)","1f336d73":"# matriz de covariancia\ndf_covariance = df_dataset.cov()\n\n# matriz de correla\u00e7\u00e3o\ndf_correlation = df_dataset.corr()\n\nprint('Matriz de covari\u00e2ncia: ')\ndisplay(df_covariance)\n\nprint('\\n\\nMatriz de correla\u00e7\u00e3o: ')\ndisplay(df_correlation)","2a1838da":"# cria um mapa de cores dos valoes da covariancia\nsns.heatmap(df_covariance, \n        xticklabels=df_correlation.columns,\n        yticklabels=df_correlation.columns)\n\nplt.title('Covari\u00e2ncia')\nplt.show()\n\n# cria um mapa de cores dos valoes da correla\u00e7\u00e3o\nsns.heatmap(df_correlation, \n        xticklabels=df_correlation.columns,\n        yticklabels=df_correlation.columns)\n\nplt.title('Correla\u00e7\u00e3o')\nplt.show()","ed898f38":"# importa o arquivo e guarda em um dataframe do Pandas\ndf_dataset2 = pd.read_csv( '..\/input\/data2csv\/data2.csv', sep=',', index_col=None) ","bf0b7dd4":"display(df_dataset2.head(n=5))","3290b314":"display(df_dataset2.describe())","a50c5628":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nn, bins, patches = plt.hist(df_dataset2['atributo_d'].values,bins=10 , color ='orange', edgecolor = 'black', linewidth = 0.9)\n\nplt.show()\n\ndisplay(bins, n)","690e75de":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\n#sns.pairplot(df_dataset2,hue = 'classe',size = 3.5)\n\n#plt.show()\n\nsns.lmplot(x='atributo_a',y='atributo_d',data=df_dataset2,            \n           fit_reg = False,\n           hue = 'classe')\n\nplt.title('Atributo_d vs Atributo_a')\n\nplt.show()","ec4969e7":"sns.countplot(x= \"classe\", data = df_dataset2)\n\nplt.show()","2c6d962d":"#plt.figure(figsize=(10,7))\n#sns.boxplot(x=\"classe\", y=\"atributo_d\",data = df_dataset2,whis=1.5)\n#plt.show()\n\ndisplay(df_dataset2.boxplot(figsize=(15,7)))","970efaa6":"df_covarancia = df_dataset2.cov()\ndisplay(\"Covarancia\", df_covarancia)\n\ndf_correlation = df_dataset2.corr()\ndisplay(\"Correla\u00e7\u00e3o:\", df_correlation)","65b20ec5":"def covariancia(atributo1, atributo2):\n    \"\"\"\n    Fun\u00e7\u00e3o usada para calcular a covari\u00e2ncia entre dois vetores de atributos\n    \"\"\"    \n    \n    #inicializando a covariancia. Essa \u00e9 a vari\u00e1vel que deve ser retornada pela fun\u00e7\u00e3o\n    cov = 0 \n    \n    # n\u00famero de objetos\n    n = len(atributo1)\n    \n    ################# COMPLETE O C\u00d3DIGO AQUI  #################\n\n    \n    \n    \n    ##########################################################\n    \n    return cov\n\natributo1 = df_dataset2['atributo_a'].values\natributo2 = df_dataset2['atributo_b'].values\n\nprint('Valor esperado: 4.405083')\n\ncov = covariancia(atributo1, atributo2)\nprint('Valor retornado pela fun\u00e7\u00e3o: %1.6f' %cov)","e4c2e59d":"def correlacao(atributo1, atributo2):\n    \"\"\"\n    Fun\u00e7\u00e3o usada para calcular a corre\u00e7\u00e3o entre dois vetores de atributos\n    \"\"\"\n    \n    #inicializando a covariancia. Essa \u00e9 a vari\u00e1vel que deve ser retornada pela fun\u00e7\u00e3o\n    corr = 0 \n    \n    # n\u00famero de objetos\n    n = len(atributo1)\n    \n    ################# COMPLETE O C\u00d3DIGO AQUI  #################\n    # Se voc\u00ea for usar a fun\u00e7\u00e3o do Numpy para calcular o desvio padr\u00e3o,\n    # n\u00e3o se esque\u00e7a de usar o par\u00e2metro ddof=1 para fazer a corre\u00e7\u00e3o de Bessel\n    #\n    # Use a fun\u00e7\u00e3o que voc\u00ea criou no exerc\u00edcio anterior para calcular \n    # o valor da covari\u00e2ncia que ser\u00e1 usado para calcular a correla\u00e7\u00e3o\n\n    \n    ##########################################################\n    \n    return corr\n\natributo1 = df_dataset2['atributo_a'].values\natributo2 = df_dataset2['atributo_b'].values\n\nprint('Valor esperado: 0.264026')\n\ncorr = correlacao(atributo1, atributo2)\nprint('Valor retornado pela fun\u00e7\u00e3o: %1.6f' %corr)","18574ab9":"**Ex. 1.** Imprima as 7 primeiras amostras da nova base de dados (*df_dataset2*).","8cd79eea":"**Ex. 6**. Crie um box plot com os dados do atributo.","4330e348":"**Ex. 9**. Conforme foi mostrado em sala de aula, a correla\u00e7\u00e3o entre dois atributos pode ser calculada pela seguinte equa\u00e7\u00e3o: $$\\text{correla\u00e7\u00e3o}(x^i, x^j) = \\frac{\\text{covari\u00e2ncia}(x^i, x^j)}{\\text{desvio_padr\u00e3o}(x^i) * \\text{desvio_padr\u00e3o}(x^j)}$$\n\nCrie uma fun\u00e7\u00e3o que calcule a correla\u00e7\u00e3o de dois atributos baseado na equa\u00e7\u00e3o mostrada acima. \n\n**Obs.**: n\u00e3o \u00e9 permitido usar a fun\u00e7\u00e3o de covari\u00e2ncia da biblioteca NumPy ou da Pandas.","c91a28f4":"**Ex. 3**. Crie um histograma a partir dos valores do atributo **atributo_d**.","9dbf95ee":"Podemos tamb\u00e9m criar uma gr\u00e1fico de barra indicando quantos dados de cada classe h\u00e1 na base de dados.","f85ea3c1":"Vamos criar gr\u00e1ficos de barra vertical e horizontal mostrando a m\u00e9dia e o desvio padr\u00e3o dos dados.","e0cacb68":"Vamos plotar a matriz de covari\u00e2ncia e a de correla\u00e7\u00e3o usando mapas de cores.","fa7a2322":"**Ex. 4**. Crie um gr\u00e1fico de dispers\u00e3o que plote o atributo **atributo_a** no eixo x e o atributo **atributo_d** no eixo y. Crie o gr\u00e1fico de dispers\u00e3o usando a biblioteca Searborn para colorir os dados de acordo com a classe a que eles pertencem.","ae078550":"Para observar as primeiras amostras do dataframe, a fun\u00e7\u00e3o _head()_ pode ser utilizada com a quantidade de amostras a serem exibidas:","985483f1":"**Ex. 7.** Calcule e imprima a matriz de correla\u00e7\u00e3o entre os atributos da base de dados. \n\nObs: voc\u00ea pode usar a fun\u00e7\u00e3o da biblioteca Pandas ou a fun\u00e7\u00e3o da biblioteca Numpy para fazer isso.","c4cad66e":"**Ex. 2.** Use a fun\u00e7\u00e3o *describe()* da biblioteca Pandas para visualizar a m\u00e9dia, desvio padr\u00e3o, valor m\u00e1ximo, valor m\u00ednimo e os percentis de cada atributo da base de dados.","07def2e6":"\u00c9 importante notar que a alta correla\u00e7\u00e3o entre dois atributos n\u00e3o significa que um deles influencia no valor do outro. Veja alguns exemplos que mostram isso: http:\/\/www.tylervigen.com\/spurious-correlations\n\n<img src=\"http:\/\/tylervigen.com\/correlation_project\/correlation_images\/number-of-people-who-tripped-over-their-own-two-feet-and-died_number-of-lawyers-in-nevada.png\" width=\"800\" align=\"center\"\/>\n\n<img src=\"http:\/\/tylervigen.com\/correlation_project\/correlation_images\/works-of-visual-art-copyrighted-us_females-in-new-york-who-slipped-or-tripped-to-their-death.png\" width=\"800\" align=\"center\"\/>\n","8e980323":"**Ex. 8**. Conforme foi mostrado em sala de aula, a covari\u00e2ncia entre dois atributos pode ser calculada pela seguinte equa\u00e7\u00e3o: \n\n$$\\text{covari\u00e2ncia}(x^i, x^j) = \\frac{1}{n-1}  \\sum_{k=1}^n (x_{k}^{i} - \\bar{x}^i)(x_{k}^{j} - \\bar{x}^j).$$\n\nCrie uma fun\u00e7\u00e3o que calcule a covari\u00e2ncia de dois atributos baseado na equa\u00e7\u00e3o mostrada acima. \n\n**Obs.**: n\u00e3o \u00e9 permitido usar a fun\u00e7\u00e3o de covari\u00e2ncia da biblioteca NumPy ou da Pandas.","c67aead1":"Vamos ver agora como criar histrogramas usando a biblioteca matplotlib.","4029c51f":"Vamos calcular as matrizes de correla\u00e7\u00e3o e covari\u00e2ncia.\n\nPodemos fazer isso usando a biblioteca Numpy ou a Pandas.\n\nPrimeiro vamos fazer usando a Numpy.","2da04ae8":"Os exerc\u00edcios dever\u00e3o ser feitos com rela\u00e7\u00e3o \u00e0 base de dados importada abaixo.","75cd718a":"Desse modo, \u00e9 poss\u00edvel perceber que as quatro primeiro colunas s\u00e3o preenchidas com valores cont\u00ednuos.\n\nA \u00faltima coluna referencia a classe da amostra em quest\u00e3o.\n\n\n\nEm seguida, algumas estat\u00edsticas podem ser exibidas acerca da base de dados. A fun\u00e7\u00e3o _describe()_ do Pandas sumariza as principais estat\u00edsticas de cada coluna com valores num\u00e9ricos, como a m\u00e9dia, o desvio padr\u00e3o, valor m\u00e1ximo, valor m\u00ednimo e alguns percentis.","2531f895":"Outra forma de plotar gr\u00e1ficos a partir dos data frames \u00e9 usando a biblioteca Seaborn. Juntamente com essa biblioteca, tamb\u00e9m \u00e9 recomend\u00e1vel importar a biblioteca Matplotlib. Dessa forma, podemos personalizar o gr\u00e1fico criados pela biblioteca usando fun\u00e7\u00f5es da biblioteca Matplotlib. ","ece062f1":"Ou seja, quando se filtra o conjunto de dados todo pela coluna Classe, nas linhas cuja classe seja Iris-setosa, o resultado \u00e9 um conjunto com total de 50 linhas.","b6ea037a":"Muitas vezes a visualiza\u00e7\u00e3o dos dados auxilia na interpreta\u00e7\u00e3o deles e na an\u00e1lise de como eles est\u00e3o distribu\u00eddos.\n\nO Python possui algumas bibliotecas que facilitam o processo de visualiza\u00e7\u00e3o dos dados, tais como: Pandas, Matplotlib e Seaborn.","a43980f5":"Agora vamos calcular as matrizes de correla\u00e7\u00e3o e covari\u00e2ncia usando a Pandas.","ceff2ff1":"Para criar um box plot sobre a base de dados, podemos usar a fun\u00e7\u00e3o _boxplot_ da Pandas.","2358770e":"A partir dessa sele\u00e7\u00e3o (que cont\u00e9m dados categ\u00f3ricos), \u00e9 poss\u00edvel usar a fun\u00e7\u00e3o _describe()_ tamb\u00e9m. No entanto, a fun\u00e7\u00e3o trar\u00e1 outros tipos de informa\u00e7\u00f5es, tais como contagem de linhas, quantos valores diferentes t\u00eam na coluna, qual \u00e9 o valor que mais ocorre e quantas vezes esse valor ocorreu.","39afad48":"**Ex. 5**. Apresente um gr\u00e1fico de barras com o n\u00famero de exemplos de cada classe da base de dados.","ef397bb8":"A biblioteca Pandas tamb\u00e9m facilita selecionar partes dos dados. Por exemplo, se fosse necess\u00e1rio selecionar somente a coluna Classe:","b94d2d14":"\u00c9 poss\u00edvel verificar o formato da tabela, utilizando a propriedade shape:\n\n*(m,n)* onde *m* \u00e9 a quantidade de linhas e *n* \u00e9 a quantidade colunas.","3682db69":"## Exerc\u00edcios ","18d8cd93":"Se fosse necess\u00e1rio selecionar somente as amostras de uma determinada classe, o Pandas tamb\u00e9m permite fazer essa filtragem de forma simplificada:","483759d0":"O gr\u00e1fico de densidade pode ser utilizado para substituir o histograma.","2c530f0d":"A fun\u00e7\u00e3o _unique()_ pode ser utilizada para retornar um vetor com os valores que acontecem numa coluna:","5b8e0677":"Se voc\u00ea preferir visualizar o gr\u00e1fico de dispers\u00e3o de apenas uma combina\u00e7\u00e3o de atributos, voc\u00ea pode usar a fun\u00e7\u00e3o lmplot da biblioteca Searborn.","a2a8dd18":"As fun\u00e7\u00f5es e os conceitos vistos at\u00e9 aqui podem ser utilizados de forma combinada para ver quantas amostras h\u00e1 em cada classe.\n1. Inicialmente, procura-se quais s\u00e3o os valores que apresentam na coluna Classe.\n2. Para cada valor de classe descoberto, faz o filtro no conjunto completo.\n3. Em seguida, mede-se quantas linhas o conjunto selecionado tem (df_classe.count().values[0]).","7c51e753":"Primeiro vamos carregar os dados do arquivo.","436766ca":"# Visualiza\u00e7\u00e3o de dados","c805723f":"A bilioteca Seaborn permite criar gr\u00e1ficos boxplot agrupados por um determinado atributo, o que facilita a an\u00e1lise dos dados. No exemplo abaixo, estamos criando gr\u00e1ficos boxplot sobre o atributo comprimento da s\u00e9pala agrupado pela classe."}}