{"cell_type":{"680ad218":"code","e16bdac7":"code","a3fcdda0":"code","1cca8f03":"code","77713026":"code","f3e3b249":"code","29c21b40":"code","ec96fbb7":"code","e5587e03":"code","8b57159a":"code","867a3eb3":"code","709d5f9b":"code","82234509":"code","6575928c":"code","688176dc":"code","753194f8":"code","bad4c1a9":"code","1d45c075":"code","94bb7513":"code","7b977f4e":"code","3f06f6a5":"code","57f0ab6b":"markdown","c68f75ab":"markdown","f362289d":"markdown","f8adf1c9":"markdown","a37e40cb":"markdown","4998da6a":"markdown","30ccece3":"markdown","25a67cdc":"markdown","a1442220":"markdown","eaef85d8":"markdown","3672240c":"markdown","85ba350c":"markdown"},"source":{"680ad218":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nanime = pd.read_csv('\/kaggle\/input\/anime-recommendations-database\/anime.csv')\nrating = pd.read_csv('\/kaggle\/input\/anime-recommendations-database\/rating.csv')","e16bdac7":"anime.head()","a3fcdda0":"rating.head()","1cca8f03":"anime.describe()","77713026":"rating.describe()","f3e3b249":"# Lets have a look the distribution of ratings, because those \"-1\" are suspicious\nrating.rating.value_counts()","29c21b40":"# I'm not sure what the \"-1\" mean because the ratings goes from 1 up to 10. \n# Maybe it means, that no rating are available. \n# Therefore we will delete the rows with \"-1\" in rating\nrating = rating[rating[\"rating\"] != -1]","ec96fbb7":"print(f\"anime.csv - rows: {anime.shape[0]}, columns: {anime.shape[1]}\")\nprint(f\"rating.csv - rows: {rating.shape[0]}, columns: {rating.shape[1]}\")","e5587e03":"plt.figure(figsize=(8,6))\nsns.heatmap(anime.isnull())\nplt.title(\"Missing values in anime?\", fontsize = 15)\nplt.show()","8b57159a":"plt.figure(figsize=(8,6))\nsns.heatmap(rating.isnull())\nplt.title(\"Missing values in rating?\", fontsize = 15)\nplt.show()","867a3eb3":"# Merge anime and rating using \"anime_id\" as reference\n# Keep only the columns we will use\ndf = pd.merge(rating,anime[[\"anime_id\",\"name\"]], left_on = \"anime_id\", right_on = \"anime_id\").drop(\"anime_id\", axis = 1)\ndf.head()","709d5f9b":"# Count the number of ratings for each anime\ncount_rating = df.groupby(\"name\")[\"rating\"].count().sort_values(ascending = False)\ncount_rating","82234509":"# Some animes have only 1 rating, therefore it is better for the recommender system to ignore them\n# We will keep only the animes with at least r ratings\nr = 5000\nmore_than_r_ratings = count_rating[count_rating.apply(lambda x: x >= r)].index\n\n# Keep only the animes with at least r ratings in the DataFrame\ndf_r = df[df['name'].apply(lambda x: x in more_than_r_ratings)]","6575928c":"before = len(df.name.unique())\nafter = len(df_r.name.unique())\nrows_before = df.shape[0]\nrows_after = df_r.shape[0]\nprint(f'''There are {before} animes in the dataset before filtering and {after} animes after the filtering.\n\n{before} animes => {after} animes\n{rows_before} rows before filtering => {rows_after} rows after filtering''')","688176dc":"# Create a matrix with userId as rows and the titles of the movies as column.\n# Each cell will have the rating given by the user to the animes.\n# There will be a lot of NaN values, because each user hasn't watched most of the animes\ndf_recom = df_r.pivot_table(index='user_id',columns='name',values='rating')\ndf_recom.iloc[:5,:5]","753194f8":"df_r.name.value_counts().head(10)","bad4c1a9":"def find_corr(df, name):\n    '''\n    Get the correlation of one anime with the others\n    \n    Args\n        df (DataFrame):  with user_id as rows and movie titles as column and ratings as values\n        name (str): Name of the anime\n    \n    Return\n        DataFrame with the correlation of the anime with all others\n    '''\n    \n    similar_to_movie = df.corrwith(df[name])\n    similar_to_movie = pd.DataFrame(similar_to_movie,columns=['Correlation'])\n    similar_to_movie = similar_to_movie.sort_values(by = 'Correlation', ascending = False)\n    return similar_to_movie","1d45c075":"# Let's choose an anime\nanime1 = 'Naruto'\n\n# Let's try with \"Naruto\"\n\n# Recommendations\nfind_corr(df_recom, anime1).head(40)","94bb7513":"# Not recommended\nfind_corr(df_recom, anime1).tail(40)","7b977f4e":"# Let's choose an anime\nanime2 = 'Death Note'\n\n# Recommendations\nfind_corr(df_recom, anime2).head(40)","3f06f6a5":"# Not recommended\nfind_corr(df_recom, anime2).tail(40)","57f0ab6b":"# 1. Exploratory data analysis and data cleaning<a class=\"anchor\" id=\"1\"><\/a>\n\nBefore we start with the recommender system, let's have a closer look at the datasets.","c68f75ab":"In the notebook we will build a basic anime collaborative recommendation system. First of all let's have a look at the dataset.\n\nThis data set contains information on user preference data from 73,516 users on 12,294 anime. Each user is able to add anime to their completed list and give it a rating and this data set is a compilation of those ratings. Its composition in numbers: \n* 20.000.000 ratings\n* 460.000 tags\n* 27.000 movies\n\n<h2> Content:<\/h2>\n\n**Anime.csv that contains ratings of movies by users:**\n* **anime_id** - myanimelist.net's unique id identifying an anime.\n* **name** - full name of anime.\n* **genre** - comma separated list of genres for this anime.\n* **type** - movie, TV, OVA, etc.\n* **episodes** - how many episodes in this show. (1 if movie).\n* **rating** - average rating out of 10 for this anime.\n* **members** - number of community members that are in this anime's\n\"group\".\n\n**Rating.csv that contains movie information:**\n* **user_id** - non identifiable randomly generated user id.\n* **anime_id** - the anime that this user has rated.\n* **rating** - rating out of 10 this user has assigned (-1 if the user watched it but didn't assign a rating).\n\n\n\n","f362289d":"I'm not sure what the \"-1\" mean because the ratings goes from 1 up to 10. Maybe it means, that no rating are available. Therefore we will delete the row with \"-1\" in rating","f8adf1c9":"The anime dataset has some missing values in rating and genre, but we can ignore them, because we won't use those columns later.","a37e40cb":"## 1.1. Prepare the data","4998da6a":"# Anime Recommendation System\n ","30ccece3":"<img src=\"https:\/\/i.imgur.com\/kBZ55l7.png\" style=\"width: 100%; height: 100%\" align = \"left\">\n","25a67cdc":"# Table of contents\n\n[<h3>1. Exploratory data analysis and data cleaning<\/h3>](#1)\n\n[<h3>2. Collaborative Recommendation System<\/h3>](#2)\n\n[<h3>3. Recommendations<\/h3>](#3)\n\n   [<h4>3.1. Naruto<\/h4>](#4)\n\n   [<h4>3.2. Deathbook<\/h4>](#5)","a1442220":"## 3.2. [Death Note](https:\/\/en.wikipedia.org\/wiki\/Death_Note)<a class=\"anchor\" id=\"5\"><\/a>\n<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/en\/6\/6f\/Death_Note_Vol_1.jpg\" style=\"width: 20%; height: 20%\" align = \"left\">","eaef85d8":"# 2. Collaborative Recommendation System<a class=\"anchor\" id=\"2\"><\/a>","3672240c":"## 3.1. [Naruto](https:\/\/en.wikipedia.org\/wiki\/Naruto)<a class=\"anchor\" id=\"4\"><\/a>\n<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/en\/9\/94\/NarutoCoverTankobon1.jpg\" style=\"width: 20%; height: 20%\" align = \"left\">\n","85ba350c":"# 3. Recommendations <a class=\"anchor\" id=\"3\"><\/a>\n\nLet's try the recommendation system on three animes.\n\n* The higher the correlation, the higher the possibility that the viewer of the selected anime will like the recommended anime\n* Negative correlation means that the viewer is likely to dislikes the anime"}}