{"cell_type":{"637c927b":"code","b3a8ca41":"code","b84349ca":"code","289e05e1":"code","d0fd6e28":"code","2e9af426":"code","8b3b5b70":"code","30010e74":"code","f8fbf6a1":"code","93471a59":"code","7f0070f6":"code","683a82b1":"code","fb67a06a":"code","fb0e598f":"code","c45f3a0e":"code","20c56354":"code","10f7fcb4":"code","4147f462":"code","37cbf144":"code","425fa685":"code","0d8b9a22":"code","94f5ff5e":"code","eab59bef":"code","65bc9ecf":"code","8ba58050":"code","91ef6263":"code","e1e9d108":"code","b6471354":"code","58562515":"code","a4d02c20":"code","517c5348":"code","34536608":"code","5cfc70ef":"code","f8f8608d":"code","dc6a673d":"code","d911c670":"code","7c9366bd":"code","d1caa748":"code","38c462e9":"code","16a82dbd":"code","b7abc170":"code","dc540e13":"code","3fbd0d48":"code","5344ce1e":"code","207799f9":"code","6448929c":"code","55c7a5fd":"code","06da2c18":"code","b7863bea":"markdown","eedec8fa":"markdown","37b6cc37":"markdown","fa7505ad":"markdown","864eea11":"markdown","3144bdd8":"markdown","05e6881b":"markdown","be910952":"markdown","25beff7b":"markdown","1c601a34":"markdown","2400ffbe":"markdown","ab5f273c":"markdown"},"source":{"637c927b":"import pandas as pd\nimport numpy as np\nimport math\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport os","b3a8ca41":"dataset = '..\/input\/us-accidents\/US_Accidents_Dec20_updated.csv'","b84349ca":"us_accidents = pd.read_csv(dataset)","289e05e1":"us_accidents.head()","d0fd6e28":"us_accidents.shape","2e9af426":"us_accidents.columns","8b3b5b70":"# let's view summary statistics for columns with numeric data\nus_accidents.describe()","30010e74":"us_accidents.isna().sum()","f8fbf6a1":"missing_data = us_accidents.isna().sum(axis=0).sort_values(ascending=True)\nmissing_data = missing_data.to_frame()\nmissing_data.columns = ['missing_count']\nmissing_data = missing_data.loc[missing_data['missing_count']>0]\n\nmissing_data","93471a59":"cities = us_accidents['City'].unique()\nlen(cities)","7f0070f6":"# All cities by number of accidents\n\naccidents_by_cities = us_accidents['City'].value_counts()\naccidents_by_cities","683a82b1":"#Top 10 cities by number of accidents\n\naccidents_by_cities[:10]","fb67a06a":"#Bar Chart to Visualize Top 10 cities by number of accidents\n\nfig, ax = plt.subplots(figsize=(8,5))\naccidents_by_cities[:10].plot(kind='bar')\nax.set(title = 'Top 10 cities By Number of Accidents',\n       xlabel = 'Cities',\n       ylabel = 'Accidents Count')\nplt.show()","fb0e598f":"'New York' in us_accidents['City']","c45f3a0e":"# Let's see how the accidents by cities is distributed\n\nfig, axs = plt.subplots(1, 1,\n                        figsize =(8, 5),\n                        tight_layout = True)\naccidents_by_cities.hist(bins=100)\n\nplt.xlabel(\"X-axis\")\nplt.ylabel(\"y-axis\")\nplt.title('Accidents Count Distribution')\n\nplt.show()","20c56354":"# Let's group the data by high and low\n\nhigh_accident_cities = accidents_by_cities = accidents_by_cities[accidents_by_cities>=1000]\nlow_accident_cities = accidents_by_cities = accidents_by_cities[accidents_by_cities<1000]","10f7fcb4":"# Let's find percentages\n\nlen(high_accident_cities)\/len(cities)","4147f462":"# Zoom in on the data distribution for cities with high accidents\n\nfig, axs = plt.subplots(1, 1,figsize =(8, 5), tight_layout = True)\n\nhigh_accident_cities.hist(bins = 50)\n\nplt.xlabel(\"X-axis\")\nplt.ylabel(\"y-axis\")\nplt.title('Accidents Count By Cities > 1000')\n\nplt.show()","37cbf144":"# Accidents by order of severity (1 being lowest, and 4 being highest)\n\nus_accidents.groupby('Severity').count()['ID']","425fa685":"# Accidents severity\n\naccidents_severity = us_accidents.groupby('Severity').count()['ID']\naccidents_severity","0d8b9a22":"# Let's visualize that\n\nfig, ax = plt.subplots(figsize=(8, 6), subplot_kw=dict(aspect=\"equal\"))\nlabel = [1,2,3,4]\nplt.pie(accidents_severity, labels=label,\n        autopct='%1.1f%%', pctdistance=0.85)\ncircle = plt.Circle( (0,0), 0.7, color='white')\np=plt.gcf()\np.gca().add_artist(circle)\nax.set_title(\"Accident by Severity\",fontdict={'fontsize': 16})\nplt.tight_layout()\nplt.show()","94f5ff5e":"# Let's work with the dates \n# (we find it's in wrong format, let's change that)\n\nus_accidents['Start_Time'].dtypes","eab59bef":"us_accidents['End_Time'].dtypes","65bc9ecf":"us_accidents = us_accidents.astype({'Start_Time': 'datetime64[ns]', 'End_Time': 'datetime64[ns]'})\nus_accidents['Start_Time'].dtypes\n","8ba58050":"us_accidents['Start_Time'][0]","91ef6263":"us_accidents['End_Time'][0]","e1e9d108":"# Plot the distribution of occurence by time of the day.\n# We can see the time of the day mof accidents happen, 4pm-6pm\n\nfig, ax = plt.subplots(figsize=(8,5))\nsns.histplot(us_accidents['Start_Time'].dt.hour, bins = 24)\n\nplt.xlabel(\"Start Time\")\nplt.ylabel(\"Number of Occurence\")\nplt.title('Accidents Count By Time of Day')\n\nplt.show()","b6471354":"# Let's plot by day of the week \n\nfig, ax = plt.subplots(figsize=(8,5))\nsns.histplot(us_accidents['Start_Time'].dt.dayofweek, bins = 7)\n\nplt.xlabel(\"Day of Week\")\nplt.ylabel(\"Occurence\")\nplt.title('Accidents Occurence by Day of the Week')\n\nplt.show()","58562515":"# Create a variable of the weekend days (Saturday & Sunday) for the next analysis\n\nsaturday = us_accidents[us_accidents['Start_Time'].dt.dayofweek == 5]\nsunday = us_accidents[us_accidents['Start_Time'].dt.dayofweek == 6]","a4d02c20":"# The accident occurence pattern on Saturday is quite interesting. I have an idea why it is like this.\n\nfig, ax = plt.subplots(figsize=(8,5))\nsns.histplot(saturday['Start_Time'].dt.hour, bins = 24)\n\nplt.xlabel(\"Hour of the Day\")\nplt.ylabel(\"Accident Occurence\")\nplt.title('Accidents Occurence on Saturdays')\n\nplt.show()","517c5348":"# this is even more interesting.\n\nfig, ax = plt.subplots(figsize=(8,5))\nsns.histplot(sunday['Start_Time'].dt.hour, bins = 24)\n\nplt.xlabel(\"Hour of the Day\")\nplt.ylabel(\"Accident Occurence\")\nplt.title('Accidents Occurence on Sundays')\n\nplt.show()","34536608":"# Let's pick a random day of the week and check the distribution\n\nimport random\n","5cfc70ef":"# Let's get a random week day, and it gives us 1\nweekdays_in_numbers = [0,1,2,3,4]\nrandom_num = random.choice(weekdays_in_numbers)\nrandom_num","f8f8608d":"# Let's plot day 1, which is Tuesday (Note that python indexing starts at 0)\n\ntuesday = us_accidents[us_accidents['Start_Time'].dt.dayofweek == 1]\n","dc6a673d":"# Graph is similar to the general (all week days) accidents occurence graph\nfig, ax = plt.subplots(figsize=(8,5))\nsns.histplot(tuesday['Start_Time'].dt.hour, bins = 24)\n\nplt.xlabel(\"Hour of the Day\")\nplt.ylabel(\"Accident Occurence\")\nplt.title('Accidents Occurence on Tuesdays')\n\nplt.show()","d911c670":"# Moving on, we can plot by month of the year\n\nfig, ax = plt.subplots(figsize=(8,5))\nsns.histplot(us_accidents['Start_Time'].dt.month, bins = 12)\n\nplt.xlabel(\"Month of Year\")\nplt.ylabel(\"Accidents Occurence\")\nplt.title('Accidents Occurence by Month of the Year')\n\nplt.show()","7c9366bd":"# Let's drill down by individual years, then check the month trend\n\nfig, ax = plt.subplots(figsize=(8,5))\ndt_2016 = us_accidents[us_accidents['Start_Time'].dt.year==2016]\nsns.histplot(dt_2016['Start_Time'].dt.month, bins = 12)\n\nplt.xlabel(\"Year 2016\")\nplt.ylabel(\"Accidents Occurence\")\nplt.title('Accidents Occurence by Month in 2016')\n\nplt.show()","d1caa748":"# Let's drill down by individual years, then check the month trend\n\nfig, ax = plt.subplots(figsize=(8,5))\ndt_2017 = us_accidents[us_accidents['Start_Time'].dt.year==2017]\nsns.histplot(dt_2017['Start_Time'].dt.month, bins = 12)\n\nplt.xlabel(\"Year 2017\")\nplt.ylabel(\"Accidents Occurence\")\nplt.title('Accidents Occurence by Month in 2017')\n\nplt.show()","38c462e9":"# Let's drill down by individual years, then check the month trend\n\nfig, ax = plt.subplots(figsize=(8,5))\ndt_2018 = us_accidents[us_accidents['Start_Time'].dt.year==2018]\nsns.histplot(dt_2018['Start_Time'].dt.month, bins = 12)\n\nplt.xlabel(\"Year 2018\")\nplt.ylabel(\"Accidents Occurence\")\nplt.title('Accidents Occurence by Month in 2018')\n\nplt.show()","16a82dbd":"# Let's drill down by individual years, then check the month trend\n\nfig, ax = plt.subplots(figsize=(8,5))\ndt_2019 = us_accidents[us_accidents['Start_Time'].dt.year==2019]\nsns.histplot(dt_2019['Start_Time'].dt.month, bins = 12)\n\nplt.xlabel(\"Year 2019\")\nplt.ylabel(\"Accidents Occurence\")\nplt.title('Accidents Occurence by Month in 2019')\n\nplt.show()","b7abc170":"# Let's drill down by individual years, then check the month trend\n\nfig, ax = plt.subplots(figsize=(8,5))\ndt_2020 = us_accidents[us_accidents['Start_Time'].dt.year==2020]\nsns.histplot(dt_2020['Start_Time'].dt.month, bins = 12)\n\nplt.xlabel(\"Year 2020\")\nplt.ylabel(\"Accidents Occurence\")\nplt.title('Accidents Occurence by Month in 2020')\n\nplt.show()","dc540e13":"# For the above, the data sources should be probed further.","3fbd0d48":"# Moving on, what side of the road are accidents happening?\n\nside_of_road =  us_accidents.groupby(['Side']).count()['ID']\nside_of_road","5344ce1e":"# Let's visualize that\n\nfig, ax = plt.subplots(figsize=(8, 6), subplot_kw=dict(aspect=\"equal\"))\nlabel = ['Left', 'Right']\nplt.pie(side_of_road, labels=label,\n        autopct='%1.1f%%', pctdistance=0.85)\ncircle = plt.Circle( (0,0), 0.7, color='white')\np=plt.gcf()\np.gca().add_artist(circle)\nax.set_title(\"Accident Occurence by Side of Road\",fontdict={'fontsize': 16})\nplt.tight_layout()\nplt.show()","207799f9":"# What are the weather conditions at the time of accicent occurence\n\nweather_conditions = us_accidents.groupby(['Weather_Condition']).count()['ID']\nweather_conditions","6448929c":"# Weather conditions at time of occurence sorted\n\nweather_conditions.sort_values(ascending=False)","55c7a5fd":"# Time of accident occurence sorted and filtered to top 20\n\nweather_conditions.sort_values(ascending=False)[:20]\n","06da2c18":"# Let's visualize top 20 weather conditions at the time of accident occurence\n\nfig, ax = plt.subplots(figsize=(8,5))\nweather_conditions.sort_values(ascending=False)[:20].plot(kind='bar')\nax.set(title = 'Weather Conditions at Time of Accident Occurence',\n       xlabel = 'Weather',\n       ylabel = 'Accidents Count')\nplt.show()","b7863bea":"# Exploratory Data Analysis of the US Accidents Dataset\n\n---\n\n","eedec8fa":"Accidents occurence tend to drop during summer months & pick up by Winter. Interesting trend. Also note that data collection started February 2016. So, not data in January 2016 might have affected the spread somewhat.","37b6cc37":"# **Findings**\n\nAccidents more likely to happen in peak hours (Morning & evening). This could be explained by having more people on the road heading to work or business activities.\n\nAccidents happened more frequently on the right side of the road.\n\nWeek days (work days) recorded more accidents than weekends.\n\nAccidents happened less frequently in summer months, than winter months. However, looking at the data, much data was not collected in some summer months - so, this could skew the analysis.\n\nA further probe of the data sources is recommended in other to ascertain the irregularities of the histograms for 2016, and 2020. Was enough data captured in these years? Could reveal more insights.\n\nSurprisingly, most accidents happened when the weather was 'fair'. Perhaps weather (bad weather) was not a big contributing factor to accidents.\n\nLos Angeles was the city with the highest number of accidents but take note that there was no data from New York (the most populated city in the US). So, I would imagine NY would have had the highest?\n\n","fa7505ad":"More accidents happened between 7am-8am, and 4pm-5pm. These are the times people usually go to and return from work, could this be the cause? We'll investigate further by looking at occurences by day of the week.","864eea11":"7.5% of the accidents recorded were found to be very severe.","3144bdd8":"An observation - Data for 2017 & 2018 seems more balanced, while there were missing data in 2016 and 2020 (2016 start of data collection so system might not have been fully in place).\n\nFor 2020 I can't offer an explanation for missing\/inadequate data.\n\nI would have expected 2019 graph to look similar to 2017 & 2018.For some reasons, it's not. I would appreciate someone more experienced to explain this or drill down further.","05e6881b":"We can see that majority of the cities have less than 5000 accidents, most cities accidents count is closer to 1000","be910952":"Accidents occurence are high on weekdays & low on weekends, both evenly distributed. Interesting. This could be down to having more people on the road on week days due to work. We will drill down by weekend days.","25beff7b":"## Data Cleaning & Preparation","1c601a34":"More accidents are happening on the right side of the roads!","2400ffbe":"I have done this using Google colab. However, I need to clarify something.\n\nReading data into Google Colab is a bit different. You should first pip install opendatasets module, then import it.\n\nOnce done. Get the URL link of the dataset from Kaggle itself & pass into a variable. Then use opendatasets to open the data. It will request your Kaggle credentials, type in your username & click enter, then it will ask you for a key, at this stage, you should have the key (in a JSON file) on your kaggle page. Open the file, copy the key & click enter, done.","ab5f273c":"\n#  We start by importing the relevant modules.\n\n\n\n---\n\n\n\n\n\n\n"}}