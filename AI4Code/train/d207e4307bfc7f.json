{"cell_type":{"3a37ce20":"code","2f3e020b":"code","ed0e6e19":"code","648127ef":"code","ef543b93":"code","3778ba55":"code","16501dca":"code","6637a660":"code","68807ee9":"code","efe658a8":"code","087c8dc9":"code","41e0368e":"code","cd5b528a":"code","6e26a92a":"code","10c00ee0":"code","a902fb64":"code","3c10136a":"code","683eff99":"code","d7f007a8":"code","a4304242":"code","3917934b":"code","5979b555":"code","823c9fa8":"code","e6828c90":"code","c2f2c68e":"code","a24cdea8":"code","ef1e21d1":"code","40e38eb7":"code","1c90c316":"code","0219766c":"code","a21b9200":"code","b4379021":"code","ac5e9081":"code","eeaf8721":"code","333639aa":"code","ff804c1b":"code","3caa5245":"code","0e0d154b":"code","47e9a019":"markdown","fc187c66":"markdown","55a9fed3":"markdown","a6577427":"markdown","59ddd2b2":"markdown","0536e8d6":"markdown","d64ece78":"markdown","e99ddb9e":"markdown","0911cceb":"markdown","d2953037":"markdown","de275d0a":"markdown","1c0eb7a9":"markdown","ab386a20":"markdown","93db16c9":"markdown","55b3ceb8":"markdown","7bb45425":"markdown","9b3f83ac":"markdown","e625d8eb":"markdown","6b1ed218":"markdown","0f5d4c61":"markdown","dbaeadde":"markdown"},"source":{"3a37ce20":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2f3e020b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\npd.pandas.set_option(\"display.max_columns\",None)\nprint(\"all necessary libraries are imported\")","ed0e6e19":"delv=pd.read_csv(\"..\/input\/tsf-datasets\/deliveries.csv\")\nmat=pd.read_csv(\"..\/input\/tsf-datasets\/matches.csv\")","648127ef":"delv.head()","ef543b93":"mat.head()","3778ba55":"delv.shape,mat.shape","16501dca":"delv.isnull().sum()","6637a660":"mat.isnull().sum()","68807ee9":"delv.nunique()","efe658a8":"mat.nunique()","087c8dc9":"obj_col_delv=list(delv.select_dtypes(include=\"object\").columns)\nobj_col_delv","41e0368e":"num_col_delv=list(delv.select_dtypes(exclude=\"object\").columns)\nnum_col_delv","cd5b528a":"obj_col_mat=list(mat.select_dtypes(include=\"object\").columns)\nobj_col_mat","6e26a92a":"num_col_mat=list(mat.select_dtypes(exclude=\"object\").columns)\nnum_col_mat","10c00ee0":"sns.countplot(delv['inning'])","a902fb64":"plt.figure(figsize=(16,10))\nplt.subplot(221)\nsns.countplot(delv['batting_team'])\nplt.xticks(rotation=90)\nplt.subplot(222)\nsns.countplot(delv['bowling_team'])\nplt.xticks(rotation=90)","3c10136a":"plt.figure(figsize=(16,10))\nplt.subplot(223)\nsns.countplot(delv['ball'])\nplt.subplot(224)\nsns.countplot(delv['over'])","683eff99":"plt.figure(figsize=(10,7))\nplt.subplot(221)\nsns.countplot(delv['is_super_over'])\nplt.subplot(222)\nsns.countplot(delv['wide_runs'])\nplt.subplot(223)\nsns.countplot(delv['bye_runs'])\nplt.subplot(224)\nsns.countplot(delv['legbye_runs'])","d7f007a8":"plt.figure(figsize=(10,7))\nplt.subplot(221)\nsns.countplot(delv['noball_runs'])\nplt.subplot(222)\nsns.countplot(delv['penalty_runs'])\nplt.subplot(223)\nsns.countplot(delv['batsman_runs'])\nplt.subplot(224)\nsns.countplot(delv['extra_runs'])","a4304242":"plt.figure(figsize=(16,10))\nplt.subplot(221)\nsns.countplot(delv['total_runs'])\nplt.subplot(222)\nsns.countplot(delv['dismissal_kind'])\nplt.xticks(rotation=90)","3917934b":"plt.figure(figsize=(10,7))\nplt.subplot(221)\nsns.countplot(mat['season'])\nplt.xticks(rotation=90)\nplt.subplot(223)\nsns.countplot(mat['team1'])\nplt.xticks(rotation=90)\nplt.subplot(224)\nsns.countplot(mat['team2'])\nplt.xticks(rotation=90)","5979b555":"plt.figure(figsize=(16,7))\nsns.countplot(mat['toss_winner'])\nplt.xticks(rotation=90)","823c9fa8":"plt.figure(figsize=(16,10))\nplt.subplot(221)\nsns.countplot(mat['toss_decision'])\nplt.xticks(rotation=90)\nplt.subplot(222)\nsns.countplot(mat['result'])\nplt.xticks(rotation=90)\nplt.subplot(223)\nsns.countplot(mat['dl_applied'])\nplt.xticks(rotation=90)","e6828c90":"plt.figure(figsize=(16,7))\nsns.countplot(mat['winner'])\nplt.xticks(rotation=90)","c2f2c68e":"plt.figure(figsize=(16,7))\nsns.countplot(mat['win_by_wickets'])\nplt.xticks(rotation=90)","a24cdea8":"import plotly.express as pe\nfig = pe.treemap(delv, path=['batting_team'], values='over',title=\"batting teams vs overs\")\nfig.show()","ef1e21d1":"fig = pe.treemap(delv, path=['bowling_team'], values='ball',title=\"bowling teams vs balls\")\nfig.show()","40e38eb7":"fig = pe.treemap(delv, path=['batting_team'], values='inning',title=\"batting teams vs innings\")\nfig.show()","1c90c316":"fig = pe.treemap(delv, path=['batting_team'], values='wide_runs',title=\"batting teams vs wide_runs\")\nfig.show()","0219766c":"fig = pe.treemap(delv, path=['batting_team'], values='legbye_runs',title=\"batting teams vs legbye_runs\")\nfig.show()","a21b9200":"fig = pe.treemap(delv, path=['batting_team'], values='noball_runs',title=\"batting teams vs noball_runs\")\nfig.show()","b4379021":"fig = pe.treemap(delv, path=['batting_team'], values='penalty_runs',title=\"batting teams vs penalty_runs\")\nfig.show()","ac5e9081":"fig = pe.treemap(delv, path=['batting_team'], values='batsman_runs',title=\"batting teams vs batsman runs\")\nfig.show()","eeaf8721":"plt.figure(figsize=(16,4))\nsns.scatterplot(x='team1',y='team2',hue='toss_winner',data=mat)\nplt.title(\"Toss winner team between team1 and team 2 for matches\")\nplt.xticks(rotation=90)","333639aa":"plt.figure(figsize=(16,4))\nplt.title(\"Toss decision for Team1\")\nsns.countplot(data=mat,x='team1',hue='toss_decision')\nplt.xticks(rotation=90)","ff804c1b":"plt.figure(figsize=(16,4))\nplt.title(\"Toss decision for Team2\")\nsns.countplot(data=mat,x='team2',hue='toss_decision')\nplt.xticks(rotation=90)","3caa5245":"plt.figure(figsize=(16,4))\nplt.title(\"Result of Team1\")\nsns.countplot(data=mat,x='team1',hue='result')\nplt.xticks(rotation=90)","0e0d154b":"plt.figure(figsize=(16,4))\nplt.title(\"Result of team2\")\nsns.countplot(data=mat,x='team2',hue='result')\nplt.xticks(rotation=90)","47e9a019":"1. More than any other team, matches played by Rajasthan Royals having more tie matches.\n2. Only matches played by \"ROYAL CHALLENGERS BANGLORE\"and \"DELHI DAREDEVILS\" teams lead to no result condition.","fc187c66":"# **checking for unique features**","55a9fed3":"> 1. This shows that only one and two innings present in the dataset","a6577427":"In team to only \"PUNE WARRIORS\" decided to bat first after winning the toss whereas rest teams decided to field first.","59ddd2b2":"In team 1 after winning the toss only \"CHENNAI SUPER KINGS\" and \"RISING PUNE SUPERGIANTS\" and \"DECCAN CHARGERS\" decided to bat first, Rest teams after winning the toss decided to field.","0536e8d6":"1. Most of the players were dismissed from the match due to caught.\n2. very few player were dismiised due to retired hurt or hit wicket or by obstructing the field.","d64ece78":"1. Mumbai Indians is the team who has won the match most of the times henced ranked one as winne.\n2. The second most winning team is Chennai Super kings.\n3. Kolkata Knight Riders is the third most winning team.","e99ddb9e":"1. Most of the teams who had won the toss decided to field.\n2. Most of the matches result is normal that is one of the team has one and other loss.\n3. very few matches records are their whose result is no result or tie.\n4. In very few matches approx 40-50 , dl rule was applied but more than 700 matches were normal.","0911cceb":"1. First figure shows that no over is a super over.\n2. Second figure shows that very few runs are wide runs, most are not.\n3. Third figure shows that no runs are bye-runs.\n4. Fourth figure shows that legbye runs are negligble but still very few as comapre to no legbye runs.","d2953037":"# univariate analysis on matches","de275d0a":"<!-- Bivariate Analysis on the Matches -->","1c0eb7a9":"# **Bivariate analysis on matches**","ab386a20":"1. Mumbai indians had won the toss most of the times\n2. The second most toss winning team is Kolkata Knight Riders\n3. Rising pune supergiant is the team with leat toss winning record.","93db16c9":"# **checking for the null values**","55b3ceb8":"<br>\n<br>\n<h2 style = \"font-family: garamond; font-size: 50px; font-style: normal; letter-spcaing: 3px; background-color:#FFCE30 ; color : #36609A; border-radius: 5px 5px; padding:10px;text-align:center; font-weight: bold\" >IPL SPORTS ANALYSIS<\/h2> \n<br> \n<br>\n<div class = 'image'> <img style=\"float:center; border:10px solid #fed049; width:90%\" align=center src =\nhttps:\/\/res.cloudinary.com\/dofgyxd4y\/image\/upload\/v1626834195\/247-2478006_ipl-trophy-png-team_rgxiro.png> \n<\/div>\n<br>\n<br>\n<a href =\"https:\/\/res.cloudinary.com\/dofgyxd4y\/image\/upload\/v1626834195\/247-2478006_ipl-trophy-png-team_rgxiro.png\" style = \"font-size:20px,color: dimgrey, text-align:left,font-family:serif\"><\/a>\n<br>","7bb45425":"# Importing necessary libraries","9b3f83ac":"1. More than any other team, matches played by \"KOLKATA KNIGHT RIDERS\" and \"SUNRISERS HYDERABAD\" having more tie matches.\n2. Only matches played by \"ROYAL CHALLENGERS BANGLORE\"and \"RAJASTHAN ROYALS\" and \"PUNE WARRIORS\" teams lead to no result condition.","e625d8eb":"# **Bivariate Analysis on deliveries set**","6b1ed218":"# **univariate analysis on deliveries**","0f5d4c61":"1. Most of the teams are win by no wickets.\n2. Some teams has won by 6 wickets that is the second most wickets by a team has win after 0.\n3. very few teams has won by 1 wicket.","dbaeadde":"1. Mumbai Indians had performed batting and bowling most of the times.\n2. Royal challengers banglore is the sec team to performed most batting and bowling\n3. Kochi tuskers kerala had performed leat batting and bowling"}}