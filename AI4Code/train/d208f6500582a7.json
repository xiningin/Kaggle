{"cell_type":{"2fce43c0":"code","7ccad94c":"code","a87f7e5c":"code","d8f511b4":"code","07d20219":"code","de865d86":"code","d7fb00a6":"code","afd8e478":"code","48893013":"code","a7fd3a3f":"code","c4e316bd":"code","6d6afdab":"code","95c7699a":"code","ab5f0ff4":"code","5b1e2b06":"code","70e3aa5a":"code","e7c4f9e1":"code","2b2c086e":"code","07bea019":"code","02ecc37f":"code","df2e7d24":"code","2db4005e":"markdown","225aaa53":"markdown","1528489b":"markdown","91dee653":"markdown","96cf8305":"markdown","f3f15d98":"markdown","c61bb6c0":"markdown","27dc85a1":"markdown","1d59aa3b":"markdown","d1f9092c":"markdown","f05c3c40":"markdown","466006b0":"markdown","d2e68739":"markdown","f980a64e":"markdown","dee8923b":"markdown","684fd3a2":"markdown","be38f61b":"markdown","1dd49f5b":"markdown","0bc89ad4":"markdown","f95542e9":"markdown","b2ad48b8":"markdown","dce8681e":"markdown","4d379815":"markdown","dfac360a":"markdown"},"source":{"2fce43c0":"import pandas as pd # Veri Manip\u00fclasyonu\nimport numpy as np # Matris \u0130\u015flemleri\nimport datetime as dt # Tarih Saat \u0130\u015flemleri\nimport plotly.express as px\nimport warnings # Uyar\u0131lar\n\n\nwarnings.filterwarnings(\"ignore\") # Uyar\u0131lar\u0131 g\u00f6rmezden geldik.\npd.set_option('display.expand_frame_repr', False)","7ccad94c":"online_retail_2010_2011_df = pd.read_csv(\"..\/input\/online-retail-ii-uci-two-peroid\/online_retail_II_2010_2011.csv\", sep=\";\")","a87f7e5c":"df = online_retail_2010_2011_df.copy()","d8f511b4":"df.head()","07d20219":"df.shape","de865d86":"df.isnull().sum()","d7fb00a6":"df.dropna(inplace=True)\ndf.isnull().sum()","afd8e478":"df = df[~(df[\"Invoice\"].str.contains(\"C\"))]\ndf.shape","48893013":"df[\"Customer ID\"] = df[\"Customer ID\"].astype(int).astype(str)\ndf[\"InvoiceDate\"] = pd.to_datetime(df[\"InvoiceDate\"])\ndf.dtypes","a7fd3a3f":"df.describe([0.01, 0.05, 0.10, 0.25, 0.50, 0.75, 0.80, 0.90, 0.95, 0.99]).T","c4e316bd":"for stockcode in list(df[\"StockCode\"].value_counts().index[:10]):\n    print(stockcode, \"\\n\", df.loc[df[\"StockCode\"] == stockcode, \"Description\"].value_counts(), end=\"\\n\\n\")","6d6afdab":"df.groupby(\"Country\").agg({\"Invoice\": \"nunique\",\n                           \"Quantity\": \"sum\",\n                           \"Price\": \"sum\"}).sort_values(\"Invoice\", ascending=False).round(2).head()","95c7699a":"df[\"TotalPrice\"] = df[\"Quantity\"] * df[\"Price\"]\ndf.groupby(\"Invoice\").agg({\"TotalPrice\": \"sum\"}).sort_values(\"TotalPrice\", ascending=False).round(2).head()","ab5f0ff4":"def create_rfm_table(dataframe:pd.DataFrame, dataframe_id:str, rfm_grid:dict, segment_list=False):\n    \"\"\"\n    RFM Analizi i\u00e7in tablonun olu\u015fturulmas\u0131n\u0131 sa\u011flayan fonksiyon.\n    Bu fonksiyon i\u015flemleri 4 ad\u0131mda tamamlamaktad\u0131r.\n        1. Ad\u0131m: RFM metriklerinin olu\u015fturulmas\u0131\n            RFM metriklerini olu\u015ftururken gruplanacak id de\u011ferini ve R-F-M de\u011ferlerini kullan\u0131c\u0131 kendi belirler.\n        2. Ad\u0131m: RFM skorlar\u0131n\u0131n olu\u015fturulmas\u0131.\n            RFM skorlar\u0131 olu\u015fturulurken metrik tablosundan yararlan\u0131l\u0131r. De\u011ferler 0-20, 21-40, 41-60, 61-80 ve 81-100 y\u00fczdeliklerine g\u00f6re 5 par\u00e7aya b\u00f6l\u00fcnm\u00fc\u015ft\u00fcr. \n            Frequency'de iki y\u00fczdelik aral\u0131\u011f\u0131 aras\u0131nda kalan de\u011ferlerin ilkine etiket atalamak ad\u0131na rank() metodu kullan\u0131lm\u0131\u015ft\u0131r.\n        3. Ad\u0131m: Segmentlerin olu\u015fturulmas\u0131.\n            R ve F skorlar\u0131na g\u00f6re RegEx yap\u0131s\u0131 kullan\u0131larak segmentler olu\u015fturulmu\u015ftur.\n            Referans al\u0131nan kaynak: https:\/\/guillaume-martin.github.io\/rfm-segmentation-with-python.html\n    \n    Parameters\n    -----------\n    dataframe pd.DataFrame\n        RFM tablosunun olu\u015fmas\u0131 i\u00e7in gereken veri yap\u0131s\u0131\n    dataframe_id str\n        Probleme ba\u011fl\u0131 olarak ele al\u0131nacak id s\u00fctunu\n    rfm_grid dict\n        Probleme ba\u011fl\u0131 olara kullan\u0131lacak toplula\u015ft\u0131rma s\u00f6zl\u00fc\u011f\u00fc\n    \n    Returns\n    -----------\n    rfm_table pd.DataFrame\n        Olu\u015fturulan RFM tablosu.\n    seg_map.values() list\n        Segment listesi. \n    \n    Examples\n    -----------\n    >>> ...\n    >>> analyse_date = dt.datetime(2011, 12, 11)\n    >>> agg_dict = {\"InvoiceDate\": lambda date: (today_date - date.max()).days,\n                    \"Invoice\": \"nunique\",\n                    \"TotalPrice\": \"sum\"}\n    >>> rfm = create_rfm_table(df, \"Customer ID\", agg_dict)\n    >>> rfm.head()\n         Customer ID  Recency  Frequency  Monetary recency_score frequency_score monetary_score RFM_SCORE       segment\n    0       12346      326          1  77183.60             1               1              5        11      hibernating\n    1       12347       40          7   4310.00             4               5              5        45  loyal_customers\n    2       12348       76          4   1797.24             3               4              4        34  loyal_customers\n    3       12349       19          1   1757.55             4               1              4        41        promising\n    4       12350      311          1    334.40             1               1              2        11      hibernating\n    \"\"\"\n    # Ad\u0131m 1: RFM Metriklerinin olu\u015fturulmas\u0131\n    rfm_table = dataframe.groupby(dataframe_id).agg(rfm_grid)\n    rfm_table.columns = [\"Recency\", \"Frequency\", \"Monetary\"]\n    rfm_table = rfm_table[rfm_table[\"Monetary\"] > 0]\n    rfm_table.reset_index(inplace=True)\n    \n    # Ad\u0131m 2: RFM Skorlar\u0131n\u0131n olu\u015fturulmas\u0131\n    rfm_table[\"recency_score\"] = pd.qcut(rfm_table['Recency'], 5, labels=[5, 4, 3, 2, 1])\n    rfm_table[\"frequency_score\"] = pd.qcut(rfm_table['Frequency'].rank(method=\"first\"), 5, labels=[1, 2, 3, 4, 5])\n    rfm_table[\"monetary_score\"] = pd.qcut(rfm_table['Monetary'], 5, labels=[1, 2, 3, 4, 5])\n    \n    # Ad\u0131m 3: Segmentlerin olu\u015fturulmas\u0131\n    rfm_table[\"RFM_SCORE\"] = (rfm_table['recency_score'].astype(str) + rfm_table['frequency_score'].astype(str))\n    seg_map = {\n    r'[1-2][1-2]': 'hibernating',\n    r'[1-2][3-4]': 'at_risk',\n    r'[1-2]5': 'cant_loose',\n    r'3[1-2]': 'about_to_sleep',\n    r'33': 'need_attention',\n    r'[3-4][4-5]': 'loyal_customers',\n    r'41': 'promising',\n    r'51': 'new_customers',\n    r'[4-5][2-3]': 'potential_loyalists',\n    r'5[4-5]': 'champions'\n    }\n    rfm_table['segment'] = rfm_table['RFM_SCORE'].replace(seg_map, regex=True)\n    \n    \n    # Ad\u0131m 4: RFM tablosunun d\u00f6nd\u00fcr\u00fclmesi\n    if segment_list:        \n        return rfm_table, seg_map.values() \n    return rfm_table","5b1e2b06":"analyse_date = dt.datetime(2011, 12, 11)\nagg_dict = {\"InvoiceDate\": lambda date: (analyse_date - date.max()).days,\n            \"Invoice\": \"nunique\",\n            \"TotalPrice\": \"sum\"}\nrfm, list_segment = create_rfm_table(df, \"Customer ID\", agg_dict, segment_list=True)\nrfm.head()","70e3aa5a":"def create_segment_statistic(rfm_table):\n    \"\"\"\n    RFM tablosu sonucunda elde etti\u011fimiz segmentlerin R-F-M metriklerine g\u00f6re ortalama de\u011ferlerinin al\u0131nd\u0131\u011f\u0131 ve segment say\u0131lar\u0131n\u0131n tablola\u015ft\u0131r\u0131ld\u0131\u011f\u0131 fonksiyondur.\n    \n    Parameters\n    -----------\n    rfm_table pd.DataFrame\n        create_rfm_table() fonksiyonu ile olu\u015fturulan RFM tablosu\n    \n    Returns\n    -----------\n    segment_statistics pd.DataFrame\n        RFM metriklerinin ortalamas\u0131n\u0131n, segment say\u0131lar\u0131n ve k\u00fcm\u00fclatif oranlar\u0131n olu\u015fturuldu\u011fu tablo.\n    \n    Examples\n    -----------\n    >>> ...\n    >>> analyse_date = dt.datetime(2011, 12, 11)\n    >>> agg_dict = {\"InvoiceDate\": lambda date: (today_date - date.max()).days,\n                    \"Invoice\": \"nunique\",\n                    \"TotalPrice\": \"sum\"}\n    >>> rfm = create_rfm_table(df, \"Customer ID\", agg_dict)\n    >>> seg_stat = create_segment_statistic(rfm)\n    >>> seg_stat\n                   segment  Recency  Frequency  Monetary  seg_count  ratio  cum_ratio\n    0          hibernating   244.01       1.10    468.18       1069  24.64      24.64\n    1      loyal_customers    42.17       6.82   3104.73        787  18.14      42.78\n    2            champions     9.30      11.72   6288.26        665  15.33      58.11\n    3              at_risk   171.67       2.83   1201.91        588  13.55      71.67\n    4  potential_loyalists    20.34       2.03    846.57        478  11.02      82.69\n    5       about_to_sleep    64.07       1.15    503.07        339   7.81      90.50\n    6       need_attention    63.88       2.39   1087.42        196   4.52      95.02\n    7            promising    28.71       1.00    327.78         96   2.21      97.23\n    8           cant_loose   134.21       8.24   3551.16         68   1.57      98.80\n    9        new_customers    11.15       1.00    342.55         52   1.20     100.00\n    \"\"\"\n    # Ad\u0131m 1: Segmentlere g\u00f6re RFM metriklerinin ortalama de\u011ferlerinin al\u0131nmas\u0131.\n    segment_table = rfm_table[[\"Recency\", \"Frequency\", \"Monetary\", \"segment\"]].groupby(\"segment\").agg([\"mean\"]).reset_index()\n    segment_table.columns = segment_table.columns.droplevel(1)\n    \n    # Ad\u0131m 2: Segmentlerin say\u0131lar\u0131n\u0131n olu\u015fturulmas\u0131.\n    count_table = rfm_table[\"segment\"].value_counts()\n    count_table = pd.DataFrame({\"segment\": count_table.index, \"seg_count\": count_table.values})\n    \n    # Ad\u0131m 3: Ad\u0131m 1'de ve Ad\u0131m 2'de olu\u015fan tablolar\u0131 birle\u015ftir ve d\u00f6nd\u00fcr.\n    segment_statistics = pd.merge(segment_table, count_table, on=\"segment\").sort_values(\"seg_count\", ascending=False).round(2).reset_index(drop=True)\n    return segment_statistics","e7c4f9e1":"seg_stat = create_segment_statistic(rfm)\nseg_stat","2b2c086e":"def abc_analysis_for_rfm(segment_statistics, abc_metrics=\"seg_count\"):\n    \"\"\"\n    RFM Analizi i\u00e7in ABC analizinin yap\u0131lmas\u0131n\u0131 ve belirtilen metri\u011fe g\u00f6re segmentlerin A, B, C olarak grupland\u0131r\u0131lmas\u0131n\u0131 sa\u011flayan fonksiyondur.\n    \n    Parameters\n    -----------\n    segment_statistics pd.DataFrame\n        create_segment_statistic() fonksiyonundan olu\u015fan segment istatistikleri tablosu.\n    abc_metrics str, optional\n        Varsay\u0131lan de\u011feri \"seg_count\" olsa da ABC analizi metri\u011fi i\u00e7in \"Recency\", \"Frequency\" ve \"Monetary\" de\u011fi\u015fkenleri de belirlenebilir.\n    \n    Returns\n    -----------\n    segment_statistics pd.DataFrame\n        segment_statistics tablosuna \"ratio\", \"cum_ratio\" ve \"ABC Analysis\" de\u011fi\u015fkenlerinin eklenmi\u015f ve b\u00fct\u00fcn ondal\u0131k say\u0131lar\u0131n 2 basama\u011fa yuvarland\u0131\u011f\u0131 tablodur.\n    \n    Examples\n    -----------\n    >>> ...\n    >>> analyse_date = dt.datetime(2011, 12, 11)\n    >>> agg_dict = {\"InvoiceDate\": lambda date: (today_date - date.max()).days,\n                    \"Invoice\": \"nunique\",\n                    \"TotalPrice\": \"sum\"}\n    >>> rfm = create_rfm_table(df, \"Customer ID\", agg_dict)\n    >>> seg_stat = create_segment_statistic(rfm)\n    >>> seg_stat\n                       segment  Recency  Frequency  Monetary  seg_count\n    0          hibernating   244.01       1.10    468.18       1069\n    1      loyal_customers    42.17       6.82   3104.73        787\n    2            champions     9.30      11.72   6288.26        665\n    3              at_risk   171.67       2.83   1201.91        588\n    4  potential_loyalists    20.34       2.03    846.57        478\n    5       about_to_sleep    64.07       1.15    503.07        339\n    6       need_attention    63.88       2.39   1087.42        196\n    7            promising    28.71       1.00    327.78         96\n    8           cant_loose   134.21       8.24   3551.16         68\n    9        new_customers    11.15       1.00    342.55         52\n    \"\"\"\n    col_list = list(segment_statistics.columns)\n    col_list.remove(abc_metrics)\n    col_list.append(abc_metrics)\n    segment_statistics = segment_statistics[col_list].sort_values(abc_metrics, ascending=False)\n    segment_statistics[\"ratio\"] = segment_statistics[abc_metrics] \/ sum(segment_statistics[abc_metrics]) * 100\n    segment_statistics[\"cum_ratio\"] = np.cumsum(segment_statistics[\"ratio\"])\n    segment_statistics[\"ABC Analysis\"] = segment_statistics[\"cum_ratio\"].apply(lambda x: \"A\" if x < 81 else (\"B\" if x < 96 else \"C\"))\n    return segment_statistics.round(2)","07bea019":"abc_analysis_for_rfm(seg_stat, \"Monetary\")","02ecc37f":"def create_segment_graph(rfm_table, abc_col, segment_labels=\"segment\", graph_title=\"Online Retail II 2010-2011 RFM Segments\"):\n    \"\"\"\n    RFM analizi ve ABC analizinin bir arada bulundu\u011fu Treemap grafi\u011fini olu\u015fturan fonksiyondur.\n    Graifi\u011fi olu\u015fturmak i\u00e7in plotly.express k\u00fct\u00fcphanesi kullan\u0131lm\u0131\u015ft\u0131r.\n    \n    Parameters\n    -----------\n    rfm_table pd.DataFrame\n        create_rfm_table() fonksiyonu kullan\u0131larak olu\u015fturulan RFM tablosu\n    abc_col str, optional\n        A, B, C gruplar\u0131n\u0131 referans alacak de\u011fi\u015fkenin ismi\n    segment_labels str, optional\n        Segmentlerin bulundu\u011fu de\u011fi\u015fkenin ismi\n    graph_title str, optional\n        Grafik ismi\n    Returns\n    -----------\n    None\n        Bu fonksiyon grafik g\u00f6sterimi sa\u011flar. Herhangi bir de\u011fer d\u00f6nd\u00fcrmez.\n    \n    \"\"\"\n    rfm_table.sort_values(abc_col, ascending=False, inplace=True)\n    rfm_table[\"ratio\"] = rfm_table[abc_col] \/ sum(rfm_table[abc_col]) * 100\n    rfm_table[\"cum_ratio\"] = np.cumsum(rfm_table[\"ratio\"])\n    rfm_table[\"ABC Analysis\"] = rfm_table[\"cum_ratio\"].apply(lambda x: \"A\" if x < 81 else (\"B\" if x < 96 else \"C\"))\n    rfm_table\n    fig = px.treemap(rfm_table, path=[\"ABC Analysis\", segment_labels], title=graph_title)\n    fig.show()","df2e7d24":"create_segment_graph(rfm, abc_col=\"Monetary\")","2db4005e":"## Veri Setinin Y\u00fcklenmesi","225aaa53":"Tablo incelendi\u011finde `Description` ve `Customer ID` de\u011fi\u015fkenlerinde eksik de\u011fer g\u00f6r\u00fclmektedir. Analiz m\u00fc\u015fteri hareketlerini kapsad\u0131\u011f\u0131ndan dolay\u0131 eksik de\u011fer sahip g\u00f6zlemleri silindi.","1528489b":"Analiz s\u0131ras\u0131nda sat\u0131n almalarla ilgilendi\u011fimizden i\u00e7erisinde iade i\u015flemi bar\u0131ndran g\u00f6zlemleri \u00e7\u0131kard\u0131k. Eksik de\u011fere ba\u011fl\u0131 g\u00f6zlemleri ve iade i\u015flemleri bar\u0131nd\u0131ran g\u00f6zlemleri \u00e7\u0131kartt\u0131\u011f\u0131m\u0131zda analiz edilecek **397.925** g\u00f6zlemimiz bulunmaktad\u0131r.","91dee653":"## RFM Analizi","96cf8305":"Segmentler incelendi\u011finde 2010-2011 y\u0131llar\u0131 aras\u0131nda en fazla say\u0131ya sahip segment `hibernating`, en az say\u0131ya sahip segment ise `new_customer` segmenti oldu\u011fu g\u00f6r\u00fclmektedir.\n\n`champions` segmentinde **665** m\u00fc\u015fterimiz bulunmaktad\u0131r. Bu segmente ait olan bir m\u00fc\u015fteri; en son ortalama **9,3 g\u00fcn \u00f6nce** al\u0131\u015fveri\u015f yapm\u0131\u015f, analiz g\u00fcn\u00fcne kadar ortalama **11,72 al\u0131\u015fveri\u015f yapm\u0131\u015f** ve analiz g\u00fcn\u00fcne kadar yapt\u0131\u011f\u0131 al\u0131\u015fveri\u015flerin toplam\u0131nda bize ortalama **6288.26** sterlin para kazand\u0131rm\u0131\u015f.\n\nDi\u011fer segmentler de bu \u015fekilde yorumlanabilir.","f3f15d98":"Tablo incelendi\u011finde en \u00e7ok al\u0131\u015fveri\u015f `United Kingdom` \u00fclkesinde yap\u0131lm\u0131\u015f olup **16.649** al\u0131\u015fveri\u015f yap\u0131lm\u0131\u015ft\u0131r. S\u00f6z konusu \u00fclkeye toplamda **4.269.472** \u00fcr\u00fcn sat\u0131lm\u0131\u015f ve toplamda **1.050.205,16** sterlin de\u011ferinde \u00fcr\u00fcnler sat\u0131lm\u0131\u015ft\u0131r.","c61bb6c0":"Tablo incelendi\u011finde eksik g\u00f6zlemlerin silindi\u011fi g\u00f6r\u00fclmektedir.","27dc85a1":"Tablo incelendi\u011finde ayk\u0131r\u0131 de\u011ferler g\u00f6r\u00fclmektedir. Analiz m\u00fc\u015fteri hareketlerini kapsad\u0131\u011f\u0131ndan dolay\u0131 ayk\u0131r\u0131 de\u011fer analizi yapmay\u0131 tercih edlimedi.","1d59aa3b":"\u00c7\u0131kt\u0131 incelendi\u011finde 2010-2011 y\u0131l\u0131na ait **541.910** i\u015flem kayd\u0131 g\u00f6r\u00fclmektedir.","d1f9092c":"### RFM Tablosunun Olu\u015fturulmas\u0131","f05c3c40":"Tablo incelendi\u011finde bize en \u00e7ok para kazand\u0131ran i\u015flem **168.469,60** sterlin de\u011ferinde `581483` numaral\u0131 fatura oldu\u011fu g\u00f6r\u00fclmektedir.","466006b0":"## Kaynak\u00e7a","d2e68739":"Analiz esnas\u0131nda \u00e7e\u015fitli yap\u0131sal problemler ya\u015famamak ad\u0131na m\u00fc\u015fteri numaralar\u0131 kategorik de\u011fi\u015fkene, fatura tarihleri ise tarih-saat de\u011fi\u015fkenine d\u00f6n\u00fc\u015ft\u00fcr\u00fcld\u00fc. ","f980a64e":"Grafik incelendi\u011finde RFM tablosundaki `Monetary` de\u011ferleri ABC analizi i\u00e7in referans al\u0131narak haz\u0131rlanan A, B, C s\u0131n\u0131flar\u0131na g\u00f6re segment bilgileri verilmi\u015ftir.\n\n**Her bir m\u00fc\u015fterinin `Monetary` de\u011ferine g\u00f6re:**\n\n* B grubuna ait **1609** m\u00fc\u015fteri,\n* C grubuna ait **1539** m\u00fc\u015fteri,\n* A grubuna ait **1190** m\u00fc\u015fteri bulunmaktad\u0131r.\n\nHer bir grubun alt gruplar\u0131nda da segment say\u0131lar\u0131 g\u00f6r\u00fclmektedir. A grubuna odaklan\u0131ld\u0131\u011f\u0131nda beklenildi\u011fi gibi grubun neredeyse yar\u0131s\u0131n\u0131 `champions` ve `loyal_customers` segmentleri olu\u015fturmaktad\u0131r. Di\u011fer gruplar ve segmentler bu \u015fekilde yorumlanabilir.","dee8923b":"## Ke\u015fif\u00e7i Veri Analizi","684fd3a2":"S\u00f6z konusu problem i\u00e7in RFM tablosunu olu\u015fturulurken a\u015fa\u011f\u0131daki hususlar dikkate al\u0131nm\u0131\u015ft\u0131r:\n\n* Analiz g\u00fcn\u00fc 11\/12-2011 olarak belirlenmi\u015ftir.\n* Recency de\u011feri i\u00e7in m\u00fc\u015fterinin son al\u0131\u015fveri\u015f g\u00fcn\u00fcn\u00fcn\u00fc hesaplad\u0131k.\n* Frequency de\u011feri i\u00e7in m\u00fc\u015fterinin e\u015fsiz fatura say\u0131s\u0131n\u0131 hesaplad\u0131k.\n* Monetary de\u011feri i\u00e7in m\u00fc\u015fterinin toplam b\u0131rakt\u0131\u011f\u0131 paray\u0131 hesaplad\u0131k.\n\n`12346` m\u00fc\u015fterisi incelendi\u011finde, ki\u015fi en son **326** g\u00fcn al\u0131\u015fveri\u015f yapm\u0131\u015f, analiz g\u00fcn\u00fcne kadar **1** kez al\u0131\u015fveri\u015f yapm\u0131\u015f ve analiz g\u00fcn\u00fcne kadar toplamda bize **77.183,60** sterlin para kazand\u0131rarak **hibernating** segmentinde s\u0131n\u0131fland\u0131r\u0131lm\u0131\u015ft\u0131r. ","be38f61b":"## Gerekli K\u00fct\u00fcphanelerin Y\u00fcklenmesi","1dd49f5b":"\u00c7\u0131kt\u0131 incelendi\u011finde \u00fcr\u00fcn kodlar\u0131na kar\u015f\u0131l\u0131k gelen a\u00e7\u0131klamalar de\u011fi\u015fmektedir. Baz\u0131 \u00fcr\u00fcn kodlar\u0131 birden fazla a\u00e7\u0131klamaya denk gelirken baz\u0131 \u00fcr\u00fcn kodlar\u0131 birden fazla \u00fcr\u00fcne denk gelmektedir. Uzun vadede bu k\u0131sm\u0131n incelenebilir.","0bc89ad4":"## RFM Analizi ile M\u00fc\u015fteri Segmentasyonu - Online Retail II (2010-2011)\n\n[Veri Bilimci Yeti\u015ftirme Program\u0131](bootcamp.veribilimiokulu.com\/egitim\/veri-bilimci-yetistirme-programi\/)'nda ele al\u0131nan RFM Analizi konusuna ili\u015fkin m\u00fc\u015fteri segmentasyon \u00f6rne\u011fi. \u0130\u015f problemine, verinin hikayesine ve de\u011fi\u015fken bilgilerine a\u015fa\u011f\u0131daki sunumdan ula\u015fabilirsiniz.\n\n<iframe src=\"\/\/www.slideshare.net\/slideshow\/embed_code\/key\/tqRmlGIqyAkL6u\" width=\"595\" height=\"485\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen> <\/iframe> <div style=\"margin-bottom:5px\"> <strong> <a href=\"\/\/www.slideshare.net\/CemalCici\/dsmlbc-rfm-analizi-ile-mteri-segmentasyonu\" title=\"DSMLBC RFM ANAL\u0130Z\u0130 \u0130LE M\u00dc\u015eTER\u0130 SEGMENTASYONU\" target=\"_blank\">DSMLBC RFM ANAL\u0130Z\u0130 \u0130LE M\u00dc\u015eTER\u0130 SEGMENTASYONU<\/a> <\/strong> from <strong><a href=\"\/\/www.slideshare.net\/CemalCici\" target=\"_blank\">Cemal Cici<\/a><\/strong> <\/div>","f95542e9":"### Segment \u0130statistikleri","b2ad48b8":"Bu \u00e7al\u0131\u015fmada \"Hangi segmente nas\u0131l odaklanmak gerekir?\" sorusuna segment odakl\u0131 de\u011fil, m\u00fc\u015fterilerin toplam kazand\u0131rd\u0131klar\u0131 \u00fccretlere g\u00f6re ABC Analizi yap\u0131larak cevap aranmaya \u00e7al\u0131\u015f\u0131lm\u0131\u015ft\u0131r. \n\nBir m\u00fc\u015fterinin toplam \u00f6dedi\u011fi \u00fccrete bak\u0131larak m\u00fc\u015fterilerimizin %80'ini `champions`, `cant_loose`, `loyal_customer`, `at_risk`; %15'ini `need_attention`, `potential_loyalists`, `about_to_sleep`; %5'ini ise `hibernating`, `new_customers` ve `promising` segmentlerinin olu\u015fturuldu\u011fu g\u00f6r\u00fclmektedir. Bizim i\u00e7in \u00f6nemli olan grup A grubu oldu\u011fundan A grubuna ait segmentler i\u00e7in aksiyon kararlar\u0131 verilebilir.\n\n","dce8681e":"### Segmentlerin G\u00f6rselle\u015ftirilmesi","4d379815":"## Verinin Yap\u0131sal Olarak Haz\u0131rlanmas\u0131","dfac360a":"* https:\/\/bootcamp.veribilimiokulu.com\/egitim\/veri-bilimci-yetistirme-programi\/\n* https:\/\/www.veribilimiokulu.com\/rfm-analizi-ile-musteri-segmentasyonu\/\n* https:\/\/suleakcaycs.medium.com\/rfm-anali%CC%87zi%CC%87-i%CC%87le-m%C3%BC%C5%9Fteri%CC%87-segmantasyonu-ve-veri%CC%87-seti%CC%87ni%CC%87-anlama-d809479caece\n* https:\/\/barskavus.medium.com\/rfm-ile-m%C3%BC%C5%9Fteri-segmentasyonu-2387669a8c86\n* https:\/\/medium.com\/analytics-vidhya\/what-is-rfm-why-should-we-do-how-should-we-do-d0f09d7de5b5\n* https:\/\/www.donusumdanismanlik.com\/pareto-analizi-nedir\/\n* https:\/\/guillaume-martin.github.io\/rfm-segmentation-with-python.html\n* https:\/\/plotly.com\/python\/treemaps\/"}}