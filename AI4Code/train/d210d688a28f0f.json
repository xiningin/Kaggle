{"cell_type":{"e2f878e8":"code","2333ebd2":"code","523507c2":"code","f5ae9107":"code","67259860":"code","a58246e1":"code","b1dd7876":"code","2e68eaf9":"code","e44ff84b":"code","0ee18465":"code","9169e56f":"code","0756caa3":"code","27ca0726":"code","fa189116":"code","0a03a0b6":"code","40e83da8":"code","9d7ed7a7":"code","04b86fbf":"code","63c3ba02":"code","45f43474":"code","cc841728":"code","9a79e7bd":"code","695dfc48":"code","aa22f37c":"code","2acb708f":"code","e7ae51e9":"code","7c3969d6":"code","55dcd2d7":"code","222a2098":"code","7fd6b290":"code","4f38d8cc":"code","885f819d":"code","41ace673":"code","80ca3cea":"code","9754ef95":"code","ea6f12e1":"code","00f196a2":"code","fbc89a3d":"code","c71200cf":"code","cd38b1d7":"code","4a5f4406":"code","193978ea":"code","93fe5e90":"code","4f22f3e1":"code","20da33de":"code","369821d5":"code","9264e272":"code","10bf3055":"code","cb742795":"code","2d101dec":"code","a414c374":"code","4bb65ff1":"code","8723ba4c":"code","fcf21c7e":"code","3a6f2a00":"code","3ac30f49":"code","17cec759":"code","f47ea3fa":"code","6ef65236":"code","19cd0a13":"code","f3bd3140":"code","0994cd13":"code","85b3581f":"code","ae45de3f":"code","92be902d":"code","d91e9ba2":"code","e9c01345":"markdown"},"source":{"e2f878e8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2333ebd2":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nfrom warnings import filterwarnings\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy.stats import norm\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.model_selection import cross_val_score,KFold\nimport plotly.express as px\nfrom sklearn.svm import SVC\nfrom plotly.offline import plot, iplot, init_notebook_mode\ninit_notebook_mode(connected=True)","523507c2":"train_df=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","f5ae9107":"train_df.head()","67259860":"train_df.isnull().sum()","a58246e1":"#cabin has more null values. So let's drop cabin column\ntrain_df=train_df.drop(columns=[\"Cabin\"],axis=1)\ntrain_df","b1dd7876":"#Also let's drop few more columns which doesn't have any impact in our prediction\ntrain_df=train_df.drop(columns=[\"PassengerId\",\"Name\",\"Ticket\"],axis=1)\ntrain_df","2e68eaf9":"#missing values\ntrain_df.isnull().sum()","e44ff84b":"train_df.groupby(\"Pclass\")[\"Age\"].mean()","0ee18465":"#Now, Let's fill all the missing values to proceed for our analysis\ndef Age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    if pd.isnull(Age):\n        if Pclass==1:\n            return 38.23\n        elif Pclass==2:\n            return 29.87\n        elif Pclass==3:\n            return 25.14\n    else:\n        return Age\n    ","9169e56f":"train_df[\"Age\"]=train_df[[\"Age\",\"Pclass\"]].apply(Age,axis=1)","0756caa3":"train_df.isnull().sum()","27ca0726":"#let's see the rows with missing values\ntrain_df[train_df.isnull().any(axis=1)]","fa189116":"train_df.groupby(\"Pclass\")[\"Embarked\"].value_counts()","0a03a0b6":"impute=SimpleImputer(strategy=\"most_frequent\")\ntrain_df[[\"Embarked\"]]=impute.fit_transform(train_df[[\"Embarked\"]])","40e83da8":"x=[\"Pclass-1\",\"Pclass-2\",\"Pclass-3\"]\ny=[38.23,29.87,25.14]\nplt.bar(x,y)\nplt.xlabel(\"PCLASS\")\nplt.ylabel(\"AGE\")\nplt.title(\"Age in different classes\")\nplt.show()","9d7ed7a7":"plt.style.use(\"seaborn\")\ncolor=plt.cm.ocean(np.linspace(0,2,5))\ntrain_df[\"Survived\"].value_counts().plot.bar(color=color,figsize=(12,8))\nplt.show()","04b86fbf":"train_df.groupby(\"Sex\")[\"Survived\"].value_counts()","63c3ba02":"plt.style.use(\"seaborn\")\ncolor=plt.cm.ocean(np.linspace(0,2,5))\ntrain_df[\"Sex\"].value_counts().plot.bar(color=color,figsize=(12,8))\nplt.title(\"number of Male and Female\")\nplt.xlabel('SEX')\nplt.ylabel(\"total count\")\nplt.show()","45f43474":"train_df[\"Embarked\"].value_counts().plot.pie(figsize=(12,8),explode=(0.1,0.1,0.1),autopct=\"%1.2f%%\")\nplt.title(\"Embarked\",fontsize=15)\nplt.show()","cc841728":"train_df[\"Pclass\"].value_counts().plot.pie(figsize=(12,8),explode=(0.1,0.1,0.1),autopct=\"%1.2f%%\")\nplt.title(\"Percentage of People in different class\",fontsize=15)\nplt.show()","9a79e7bd":"s=train_df.groupby(\"Sex\")[\"Survived\"].value_counts()\ncolor=plt.cm.ocean(np.linspace(0,2,5))\nx=[\"Female\",\"male\"]\ny=[s[0],s[3]]\nplt.bar(x,y,color=color)\nplt.xlabel('SEX')\nplt.ylabel(\"Survived\")\nplt.show()","695dfc48":"sns.heatmap(train_df.corr(),annot=True)\nplt.show()","aa22f37c":"#To see how age is distributed\ntrain_df[\"Age\"].hist(figsize=(12,8),bins=15)\nplt.show()","2acb708f":"#To see how Fare is distributed\ntrain_df[\"Fare\"].hist(figsize=(12,8),bins=25)\nplt.show()","e7ae51e9":"e=train_df.groupby(\"Embarked\")[\"Fare\"].mean()\ncolor=plt.cm.ocean(np.linspace(0,2,7))\nx=[\"C_Embark\",\"Q_Embark\",\"S_Embark\"]\ny=[e[0],e[1],e[2]]\nplt.bar(x,y,color=color)\nplt.xlabel(\"Embarked\",fontsize=(15))\nplt.ylabel(\"Fare\",fontsize=(15))\nplt.show()","7c3969d6":"fig=px.sunburst(train_df.groupby([\"Pclass\",\"Sex\",\"Survived\"]).size().reset_index(name=\"count\"),path=[\"Pclass\",\"Sex\",\"Survived\"],values=\"count\",title=\"Count of Survived Based on Pclass and Sex\")\nfig.show()","55dcd2d7":"sex=pd.get_dummies(train_df[\"Sex\"],drop_first=True)\nEmbark=pd.get_dummies(train_df[\"Embarked\"],drop_first=True)","222a2098":"train_df=train_df.drop(columns=[\"Sex\",\"Embarked\"],axis=1)","7fd6b290":"train_df=pd.concat([train_df,sex,Embark],axis=1)","4f38d8cc":"X=train_df.iloc[:,1:].values\ny=train_df.iloc[:,0].values","885f819d":"sc=StandardScaler()\nX=sc.fit_transform(X)","41ace673":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=100)","80ca3cea":"rfc=RandomForestClassifier(max_depth=10,random_state=1)","9754ef95":"rfc.fit(X_train,y_train)\npred=rfc.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","ea6f12e1":"cm=confusion_matrix(y_test,pred)\ncm","00f196a2":"report=classification_report(y_test,pred)\nprint(\"RandomForestClassifier report \\n\",report)","fbc89a3d":"ada=AdaBoostClassifier()\nada.fit(X_train,y_train)\npred=ada.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","c71200cf":"cm=confusion_matrix(y_test,pred)\ncm","cd38b1d7":"report=classification_report(y_test,pred)\nprint(\"AdaBoostClassifier report \\n\",report)","4a5f4406":"classifier = KNeighborsClassifier()\nclassifier.fit(X_train, y_train)\npredict=classifier.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","193978ea":"cm=confusion_matrix(y_test,pred)\ncm","93fe5e90":"report=classification_report(y_test,pred)\nprint(\"KNeighborsClassifier report \\n\",report)","4f22f3e1":"classifier = SVC()\nclassifier.fit(X_train, y_train)\npredict=classifier.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","20da33de":"cm=confusion_matrix(y_test,pred)\ncm","369821d5":"report=classification_report(y_test,pred)\nprint(\"SVC report \\n\",report)","9264e272":"classifier = LogisticRegression()\nclassifier.fit(X_train, y_train)\npredict=classifier.predict(X_test)\npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","10bf3055":"cm=confusion_matrix(y_test,pred)\ncm","cb742795":"report=classification_report(y_test,pred)\nprint(\"Logistic Regression \\n\",report)","2d101dec":"model = GaussianNB()\nmodel.fit(X_train, y_train)\ny_model = model.predict(X_test) \npred_df=pd.DataFrame({\"Actual\":y_test,\"pred\":pred})\nprint(pred_df)","a414c374":"cm=confusion_matrix(y_test,pred)\ncm","4bb65ff1":"report=classification_report(y_test,pred)\nprint(\"GaussianNB \\n\",report)","8723ba4c":"test=test_df.drop(columns=[\"PassengerId\",\"Name\",\"Ticket\",\"Cabin\"],axis=1)","fcf21c7e":"test","3a6f2a00":"def Age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    if pd.isnull(Age):\n        if Pclass==1:\n            return 38.23\n        elif Pclass==2:\n            return 29.87\n        elif Pclass==3:\n            return 25.14\n    else:\n        return Age","3ac30f49":"test[\"Age\"]=test[[\"Age\",\"Pclass\"]].apply(Age,axis=1)","17cec759":"sex=pd.get_dummies(test[\"Sex\"],drop_first=True)\nEmbark=pd.get_dummies(test[\"Embarked\"],drop_first=True)","f47ea3fa":"test=test.drop(columns=[\"Sex\",\"Embarked\"],axis=1)","6ef65236":"test=pd.concat([test,sex,Embark],axis=1)","19cd0a13":"test.isnull().sum()","f3bd3140":"test[\"Fare\"]=test[\"Fare\"].fillna(test[\"Fare\"].mean())","0994cd13":"test=sc.fit_transform(test)","85b3581f":"y_pred=rfc.predict(test)","ae45de3f":"y_pred","92be902d":"output = pd.DataFrame({'PassengerId': test_df.PassengerId, 'Survived': y_pred})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved.\")","d91e9ba2":"print(output.head())","e9c01345":"# **If you like my notebook. Don't forget to upvote it.**"}}