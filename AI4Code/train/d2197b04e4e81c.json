{"cell_type":{"d4a89749":"code","f9a2f84a":"code","7728654e":"code","0d31bfdb":"code","f279601c":"code","98fe38d5":"code","d616e8fa":"code","5494b38f":"code","a661859c":"code","03ac2a91":"code","92d2ec79":"code","78e5728d":"code","c86d3f49":"code","22fa6ec1":"code","996ed5d5":"code","97ccd793":"code","070da09c":"code","6f18acf2":"code","58a094ed":"code","5b079507":"code","889d2cd0":"code","ceb0c2db":"code","afbe9f8c":"code","e32e0e5a":"code","654690b6":"code","385bdef4":"code","d5ad23d5":"code","2dff6877":"code","65d79206":"markdown","2e65bda0":"markdown","5bc69529":"markdown","40a51c4d":"markdown","274c3c61":"markdown","c5ed454a":"markdown","73f8aab2":"markdown","13d905be":"markdown","075ceaa9":"markdown","e893fa58":"markdown","39d4ec85":"markdown","f153b432":"markdown","89e85815":"markdown","cca00849":"markdown","5076a5bd":"markdown","7b4f7299":"markdown","93be0937":"markdown","7a4df845":"markdown","3d2b5bcc":"markdown","85c30f7b":"markdown","733bc699":"markdown"},"source":{"d4a89749":"# installlation required\n# pip install openpyxl # for excel file\n\n# libraries\nimport datetime as dt\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport squarify  # treemap visualization\nimport warnings \nwarnings.filterwarnings(\"ignore\")\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","f9a2f84a":"# # df_2010_2011 = pd.read_csv(\"..\/input\/online-retail-ii-data-set-from-ml-repository\/Year 2010-2011.csv\", encoding='utf-8')\n# \n# online_retail = pd.read_csv(\"\/kaggle\/input\/online-retail-ii-data-set-from-ml-repository\/Year 2010-2011.csv\",  encoding='utf-8')\n# df = df_2010_2011.copy()\n# df.head()","7728654e":"# excel file didn't work, for this problem I use this method\nfile = \"..\/input\/online-retail-ii-data-set-from-ml-repository\/Year 2010-2011.csv\"","0d31bfdb":"#  this the library I use for data  importing process \nimport chardet\nwith open(file, 'rb') as rawdata:\n    result = chardet.detect(rawdata.read(100000))\nresult","f279601c":"df = pd.read_csv(file,encoding='ISO-8859-1')\ndf.head()","98fe38d5":"def check_df(dataframe):\n    print(\"################ Shape ####################\")\n    print(dataframe.shape)\n    print(\"############### Columns ###################\")\n    print(dataframe.columns)\n    print(\"############### Types #####################\")\n    print(dataframe.dtypes)\n    print(\"############### Head ######################\")\n    print(dataframe.head())\n    print(\"############### Tail ######################\")\n    print(dataframe.tail())\n    print(\"############### Describe ###################\")\n    print(dataframe.describe().T)\n\ncheck_df(df)","d616e8fa":"def outlier_thresholds(dataframe, variable):\n    quartile1 = dataframe[variable].quantile(0.01)\n    quartile3 = dataframe[variable].quantile(0.99)\n    interquantile_range = quartile3 - quartile1\n    up_limit = quartile3 + 1.5 * interquantile_range\n    low_limit = quartile1 - 1.5 * interquantile_range\n    return low_limit, up_limit\n\ndef replace_with_thresholds(dataframe, variable):\n    low_limit, up_limit = outlier_thresholds(dataframe, variable)\n    dataframe.loc[(dataframe[variable] < low_limit), variable] = low_limit\n    dataframe.loc[(dataframe[variable] > up_limit), variable] = up_limit\n\nreplace_with_thresholds(df, \"Quantity\")\nreplace_with_thresholds(df, \"Price\")","5494b38f":"# NA values\ndf.isnull().sum()","a661859c":"df.dropna(inplace=True)\ndf.isnull().sum()","03ac2a91":"# We exclude canceled and returned orders from the data set.\ndf = df[~df[\"Invoice\"].str.contains(\"C\", na=False)]\ndf.shape","92d2ec79":"cat_cols = [col for col in df.columns if df[col].dtypes ==\"O\"]\ncat_but_car = [col for col in df.columns if df[col].nunique() > 100 and df[col].dtypes == \"O\"]\ncat_cols = [col for col in cat_cols if col not in cat_but_car]\ncat_cols","78e5728d":"def cat_summary(dataframe, col_name, plot=False):\n    print(pd.DataFrame({col_name: dataframe[col_name].value_counts(),\n                        \"Ratio\": 100 * dataframe[col_name].value_counts() \/ len(dataframe)}))\n    print(\"##########################################\")\n    if plot:\n        fig_dims = (15, 5)\n        fig, ax = plt.subplots(figsize=fig_dims)\n        sns.countplot(x=dataframe[col_name], data=dataframe)\n        plt.xticks(rotation = 45, ha = 'right')\n        plt.show()\n\ncat_summary(df, \"Country\", plot=True)","c86d3f49":"num_cols = [col for col in df.columns if df[col].dtypes != 'O' and col not in \"Customer ID\"]\nnum_cols","22fa6ec1":"def num_summary(dataframe, numerical_col, plot=False):\n    quantiles = [0.05, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 0.95, 0.99]\n    print(dataframe[numerical_col].describe(quantiles).T)\n\n    if plot:\n        dataframe[numerical_col].hist(bins=20)\n        plt.xlabel(numerical_col)\n        plt.title(numerical_col)\n        plt.show()\n\nfor col in num_cols:\n    num_summary(df, col, plot=True)","996ed5d5":"# number of unique products\ndf[\"StockCode\"].nunique()","97ccd793":"df_product = df.groupby(\"Description\").agg({\"Quantity\":\"count\"})\ndf_product.reset_index(inplace=True)\ndf_product","070da09c":"# top 10 selling products\ntop_pr= df_product.sort_values(by=\"Quantity\",ascending=False).head(10)\n\nsns.barplot(x=\"Description\", y=\"Quantity\",data=top_pr)\nplt.xticks(rotation=90)\nplt.show()","6f18acf2":"# total price per invoice\ndf[\"TotalPrice\"] = df[\"Price\"] * df[\"Quantity\"]","58a094ed":"# Determining the analysis date for the recency account\ndf[\"InvoiceDate\"] = pd.to_datetime(df[\"InvoiceDate\"])\ndf[\"InvoiceDate\"].max()\ntoday_date = dt.datetime(2011, 12, 11)","5b079507":"# generating rfm metrics\nrfm = df.groupby(\"Customer ID\").agg({\"InvoiceDate\": lambda Inv\u0131iceDate: (today_date- Inv\u0131iceDate.max()).days,\n                                    \"Invoice\": lambda Invoice: Invoice.nunique(),\n                                    \"TotalPrice\": lambda TotalPrice: TotalPrice.sum()})\n\nrfm.columns = [\"recency\",\"frequency\",\"monetary\"]\nrfm.describe().T","889d2cd0":"# total money can't be 0. So, if there is any, we remove them.\n\nrfm = rfm[rfm[\"monetary\"] > 0]\nrfm.describe().T","ceb0c2db":"# recency_score\nrfm[\"recency_score\"] = pd.qcut(rfm['recency'], 5, labels=[5, 4, 3, 2, 1])\n# frequency_score\nrfm[\"frequency_score\"] = pd.qcut(rfm[\"frequency\"].rank(method=\"first\"), 5, labels=[1, 2, 3, 4, 5])\n# monetary_score\nrfm[\"monetary_score\"] = pd.qcut(rfm[\"monetary\"], 5, labels=[1, 2, 3, 4, 5])\n\n# RFM Score\nrfm[\"RFM_SCORE\"] = (rfm[\"recency_score\"].astype(str) + rfm[\"frequency_score\"].astype(str))\nrfm.head(10)","afbe9f8c":"seg_map = {\n    r'[1-2][1-2]': 'hibernating',\n    r'[1-2][3-4]': 'at_Risk',\n    r'[1-2]5': 'cant_loose',\n    r'3[1-2]': 'about_to_sleep',\n    r'33': 'need_attention',\n    r'[3-4][4-5]': 'loyal_customers',\n    r'41': 'promising',\n    r'51': 'new_customers',\n    r'[4-5][2-3]': 'potential_loyalists',\n    r'5[4-5]': 'champions'\n}\nrfm['segment'] = rfm['RFM_SCORE'].replace(seg_map, regex=True)\nrfm.sort_values(by = \"RFM_SCORE\", ascending = False)","e32e0e5a":"rfm[[\"segment\", \"recency\", \"frequency\", \"monetary\"]].groupby(\"segment\").agg([\"mean\", \"count\"])","654690b6":"sgm= rfm[\"segment\"].value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=sgm.index,y=sgm.values)\nplt.xticks(rotation=45)\nplt.title('Customer Segments',color = 'blue',fontsize=15)\nplt.show()","385bdef4":"df_treemap = rfm.groupby('segment').agg('count').reset_index()","d5ad23d5":"df_treemap.head()","2dff6877":"fig, ax = plt.subplots(1, figsize = (10,10))\n\nsquarify.plot(sizes=df_treemap['RFM_SCORE'], \n              label=df_treemap['segment'], \n              alpha=.8,\n              color=['tab:red', 'tab:purple', 'tab:brown', 'tab:pink', 'tab:gray']\n             )\nplt.axis('off')\n#plt.savefig('treemap_deneme.png')\nplt.show()","65d79206":"#  Exploratory Data Analysis ","2e65bda0":"# Numerical Variable Analysis","5bc69529":"# Data Prep Processing ","40a51c4d":"## Preparation of RFM Metrics","274c3c61":"# Libraries","c5ed454a":"\n# Dataset Story\n\n* The dataset includes sales between 01\/12\/2009 - 09\/12\/2011.\n* The product catalog of this company includes souvenirs.\n* The vast majority of the company's customers are corporate customers.","73f8aab2":"# Load and Check Data Processing ","13d905be":"\n# References\u00b6\n* https:\/\/github.com\/mvahit\n* https:\/\/www.veribilimiokulu.com\/\n* https:\/\/www.linkedin.com\/in\/vahitkeskin\/\n* https:\/\/www.kaggle.com\/kemalgunay\/rfm-analysis\n* https:\/\/github.com\/hebraralici\n* https:\/\/en.wikipedia.org\/wiki\/Customer_lifetime_value\n* https:\/\/en.wikipedia.org\/wiki\/RFM_(market_research)","075ceaa9":"\n# Variables\n\n* InvoiceNo: Invoice number. The unique number of each transaction, namely the invoice. Aborted operation if it starts with C.\n* StockCode: Product code. Unique number for each product.\n* Description: Product name\n* Quantity: Number of products. It expresses how many of the products on the invoices have been sold.\n* InvoiceDate: Invoice date and time.\n* UnitPrice: Product price (in GBP)\n* CustomerID: Unique customer number\n* Country: The country where the customer lives.","e893fa58":"# Introduction\n\nHow often do you use the RFM analysis in your marketing? The RFM analysis is a great tool for marketers to figure out which customers are most valuable and how they should be marketed to. It's also a great way to find new prospects that might not have been found otherwise. Here we'll explain into each of the four groups: Retention, Frequency, Monetary Value and Referral and explain what they mean and why you want them as customers!\n\n","39d4ec85":"## Visualization of RFM Segments","f153b432":"# Outliers Observation ","89e85815":"\n# Generating RFM Scores","cca00849":"\n# Segmenting Customers Based on RFM Scores","5076a5bd":"#### Let's group RFM mean and frequency values according to segments","7b4f7299":"#*recency: the difference between today and the customer's last purchase date, in days.\n#*frequency: customer's shopping frequency.\n#*monetary: total money paid by the customer.","93be0937":"# Customer Segmentation With RFM","7a4df845":"\n# Problem\n\n* An e-commerce company wants to segment its customers and determine marketing strategies according to these segments.\n* For example, it is desired to organize different campaigns for new customers and different campaigns in order to \nretain customers that are very profitable for the company.","3d2b5bcc":"### Given labels to RFM scores","85c30f7b":" # RFM?\n\n* The RFM method is a tool for assessing consumer value. It's frequently utilized in database marketing and direct marketing, as well as retail and professional services.\n\n* RFM stands for the three dimensions:\n* Recency: How recently did the customer purchase?\n* Frequency: How often do they purchase?\n* Monetary Value: How much do they spend?","733bc699":"## Categorical Variable Analysis"}}