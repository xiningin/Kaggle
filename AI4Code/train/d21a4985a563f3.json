{"cell_type":{"4bc8ee33":"code","1da03c28":"code","3bad78c0":"code","dfa7a804":"code","4d5c5d0a":"code","9b32f2d6":"code","c9251dc4":"code","c359bcfb":"code","8e9917e7":"code","e5417c0c":"code","53a9de5f":"code","e2b51616":"code","8d976495":"code","1520ee8f":"code","fd3f4074":"code","cf50c591":"code","de0681fa":"code","4787a04f":"code","284becb1":"code","0b3f1b8c":"code","61a8060d":"code","fade395a":"code","93794e04":"code","0be0ffd4":"code","eddbb6a7":"code","65b272f6":"code","60f7300e":"code","7c962a86":"code","fbaeeeac":"code","bf7d0cd5":"code","4d95c41b":"code","3d641934":"code","fdc6f746":"code","a86661a7":"code","5b8b854f":"code","b5cfeadf":"code","f95895f3":"code","c4369178":"code","f9ca3513":"code","2660cc91":"code","35b0a145":"code","9c29a5b4":"code","ff19f205":"code","55fc1258":"code","41ce9794":"code","00255227":"code","9ac7c882":"code","2b146d1c":"code","32e35bb7":"code","29311ca4":"code","a5668f7a":"code","f0328223":"code","7906268b":"code","21022ce7":"code","f2737f5b":"code","dcece213":"code","82d37ad4":"code","35683e97":"code","d17ed7f0":"code","15c8551a":"code","ac32f6fa":"code","62b4644e":"code","dd343670":"code","eb724b4b":"code","79eaa1a5":"code","fc748ea9":"code","85934114":"code","71ee70b2":"code","29ae7dd5":"code","4c0aad1c":"code","a2d730f9":"markdown","d5c68a9b":"markdown","68785f68":"markdown","847d1545":"markdown"},"source":{"4bc8ee33":"import pandas as pd","1da03c28":"\"\"\"\"\nfrom stravalib.client import Client\n\nclient = Client(access_token='155f536e6e18aa2a28ca0bca765485261e164290') #updating every 6 hours\n\nactivities = client.get_activities()\nsample = list(activities)[0]\nsample.to_dict()\n\nmy_cols =['average_speed',\n          'max_speed',\n          'average_heartrate',\n          'max_heartrate',\n          'distance',\n          'elapsed_time',\n          'moving_time',\n          'total_elevation_gain',\n          'elev_high',\n          'type', \n          'start_date_local',\n          'kudos_count']\ndata = []\nfor activity in activities:\n    my_dict = activity.to_dict()\n    data.append([my_dict.get(x) for x in my_cols])\n    \ndf = pd.DataFrame(data, columns=my_cols)\ndf.to_csv('strava_full_data.csv')\n\"\"\"","3bad78c0":"df = pd.read_csv(\"..\/input\/strava-data\/strava_full_data.csv\")","dfa7a804":"df['type'].value_counts()","4d5c5d0a":"df.head()","9b32f2d6":"df.shape","c9251dc4":"df = df[df['type'].isin(['Run','Ride'])]","c359bcfb":"df.info()","8e9917e7":"df.drop(['average_heartrate','max_heartrate','Unnamed: 0'], axis=1, inplace=True)","e5417c0c":"df.info()","53a9de5f":"df['elev_high'] = df['elev_high'].fillna(value=0)","e2b51616":"df.dropna(inplace=True)","8d976495":"df.info()","1520ee8f":"df['distance'] = df['distance']\/1000\ndf['distance'] = df['distance'].round(2)\n\ndf['average_speed'] = 1\/(df['average_speed']\/100*6)\ndf['average_speed'] = df['average_speed'].round(2)\n\ndf['max_speed'] = 1\/(df['max_speed']\/100*6)\ndf['max_speed'] = df['max_speed'].round(2)","fd3f4074":"df['elapsed_time'].str.len().value_counts()","cf50c591":"df[df['elapsed_time'].str.len() == 14]","de0681fa":"df.set_value(215,'elapsed_time', df.loc[215,'moving_time'])","4787a04f":"df.set_value(559,'elapsed_time', df.loc[559,'moving_time'])","284becb1":"df[df['elapsed_time'].str.len() == 15]","0b3f1b8c":"df.set_value(208,'elapsed_time', df.loc[208,'moving_time'])\ndf.set_value(444,'elapsed_time', df.loc[444,'moving_time'])","61a8060d":"def to_minutes(str):\n    return sum(i*j for i, j in zip(map(float, str.split(':')), [60, 1, 1\/60]))\n\ndf['time_min_elapsed'] = df['elapsed_time'].apply(to_minutes)\ndf['time_min_moving'] = df['moving_time'].apply(to_minutes)\n\ndf['time_min_elapsed'] = df['time_min_elapsed'].round(2)\ndf['time_min_moving'] = df['time_min_moving'].round(2)","fade395a":"df['start_date_local'] = pd.to_datetime(df['start_date_local'])","93794e04":"df","0be0ffd4":"df.groupby('type')['distance'].nlargest(3)","eddbb6a7":"df.groupby('type')['time_min_elapsed'].nlargest(3)","65b272f6":"df.loc[1061,:]","60f7300e":"data = df[df['type'] == 'Run']","7c962a86":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()","fbaeeeac":"%config InlineBackend.figure_format = 'retina'\nsns.distplot(data['total_elevation_gain']);","bf7d0cd5":"import numpy as np","4d95c41b":"data.apply(np.max)","3d641934":"features = ['distance', 'total_elevation_gain']\ndata[features].plot(kind='density', subplots=True, layout=(1, 2), \n                  sharex=False, figsize=(10, 4));","fdc6f746":"data","a86661a7":"data = data.drop(['elapsed_time', 'moving_time','type','kudos_count'], axis=1)","5b8b854f":"data","b5cfeadf":"data.set_index('start_date_local', inplace=True)\ndata.head()","f95895f3":"data.index","c4369178":"data.isnull().sum()","f9ca3513":"data.max()","2660cc91":"data[data['max_speed'] == data['max_speed'].max()]","35b0a145":"data = data.drop(['max_speed'], axis=1)","9c29a5b4":"sns.pairplot(data)","ff19f205":"corr = data.corr()\nplt.figure(figsize = (12,8))\nsns.heatmap(corr, annot=True, fmt=\".2f\");","55fc1258":"trends = data.copy()","41ce9794":"trends.set_index(pd.to_datetime(trends.index), drop=True, inplace=True)","00255227":"trends['weekday'] = trends.index.map(lambda x: x.weekday)","9ac7c882":"trends","2b146d1c":"trends.groupby('weekday').mean()","32e35bb7":"trends.groupby('weekday').mean()['time_min_elapsed'].plot.bar()","29311ca4":"import calendar\nlist(calendar.day_name)\n\nplt.style.use('ggplot')\n\ntrends.groupby('weekday').mean()['time_min_elapsed'].plot(kind='bar', figsize=(12,5))\nplt.xticks(list(range(7)), list(calendar.day_name), rotation='horizontal')\nplt.xlabel('')\nplt.ylabel('Time in minutes')\nplt.title('Average training time by day of the week')","a5668f7a":"trends['year'] = trends.index.map(lambda x: x.year)","f0328223":"trends['year'].value_counts()","7906268b":"trends.groupby('year').mean()","21022ce7":"trends.groupby('year').mean()['time_min_elapsed'].plot(kind='bar')","f2737f5b":"data.head()","dcece213":"cols = ['average_speed','distance','total_elevation_gain','time_min_elapsed']\nsns.pairplot(x_vars=cols, y_vars=cols, data=data, size=5)","82d37ad4":"import sklearn\nfrom sklearn.preprocessing import StandardScaler\nX = StandardScaler().fit_transform(data)","35683e97":"data_scaled = pd.DataFrame(X, columns=['average_speed', 'distance', 'total_elevation_gain', 'elev_high', 'time_min_elapsed', 'time_min_moving'])","d17ed7f0":"fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(9,8))\n\nax1.set_title('Before Scaling')\nsns.kdeplot(data['average_speed'], ax=ax1)\nsns.kdeplot(data['distance'], ax=ax1)\nsns.kdeplot(data['total_elevation_gain'], ax=ax1)\nsns.kdeplot(data['elev_high'], ax=ax1)\nsns.kdeplot(data['time_min_elapsed'], ax=ax1)\nsns.kdeplot(data['time_min_moving'], ax=ax1)\n\nax2.set_title('After Standard Scaler')\nsns.kdeplot(data_scaled['average_speed'], ax=ax2)\nsns.kdeplot(data_scaled['distance'], ax=ax2)\nsns.kdeplot(data_scaled['total_elevation_gain'], ax=ax2)\nsns.kdeplot(data_scaled['elev_high'], ax=ax2)\nsns.kdeplot(data_scaled['time_min_elapsed'], ax=ax2)\nsns.kdeplot(data_scaled['time_min_moving'], ax=ax2)\n\nplt.show()\n","15c8551a":"from sklearn.cluster import KMeans\nmodel = KMeans(n_clusters=5)\nmodel.fit(X)\ndata['Cluster'] = model.labels_","ac32f6fa":"data['Cluster'].value_counts()","62b4644e":"data.groupby('Cluster').mean()","dd343670":"data.groupby('Cluster').std()","eb724b4b":"Sum_of_squared_distances = []\nK = range(1,15)\nfor k in K:\n    km = KMeans(n_clusters=k)\n    km = km.fit(X)\n    Sum_of_squared_distances.append(km.inertia_)","79eaa1a5":"plt.plot(K, Sum_of_squared_distances, 'bx-')\nplt.xlabel('k')\nplt.ylabel('Sum_of_squared_distances')\nplt.title('Elbow Method For Optimal k')\nplt.show()","fc748ea9":"data.groupby('Cluster').mean()","85934114":"data['Cluster'].value_counts()","71ee70b2":"data[data['Cluster'] == 2]","29ae7dd5":"data[data['Cluster'] == 1]","4c0aad1c":"data[data['Cluster'] == 4]","a2d730f9":"First I exported my activities from Strava using Strava API and Python","d5c68a9b":"Strava is a athlete's social network. I use Strava from 2016 year and there are a plenty information about my activities. I decided to analyse it and find some patterns Cluster analysis.\n\nI want to find answers:\nDo I run longer distances on the weekend than during the week?<br>\nDo I run faster on the weekend than during the week?<br>\nHow many days do I rest compared to days I run?<br>\nWhich month of the year do I run the fastest?<br>\nWhich month of the year do I run the longest distance?<br>\nWhich quarter of the year do I run the fastest?<br>\nWhich quarter of the year do I run the longest distance?<br>\nHow has the average distance per run changed over the years?<br>\nHow has the average time per run changed over the years?<br>\nHow has my average speed per run changed over the years?<br>\nHow much distance did I run in races and how much during training?<br>","68785f68":"**Exploratory data analysis and Cluster analysis**","847d1545":"**Data cleaning and preprocessing**"}}