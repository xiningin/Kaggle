{"cell_type":{"fd7c57be":"code","9e185b5a":"code","9b6d7494":"code","57d3f560":"code","2e7156bc":"code","57f7a963":"code","58bbc080":"code","982c340c":"markdown"},"source":{"fd7c57be":"# dependencies\nimport os\nimport numpy as np\nimport pandas as pd\nimport glob\nimport random\nimport base64\n\nfrom PIL import Image\nfrom io import BytesIO\nfrom IPython.display import HTML","9e185b5a":"pd.set_option('display.max_colwidth', -1)\n\ndef get_thumbnail(path):\n    if path and os.path.exists(path):\n        i = Image.open(path)\n        i.thumbnail((150, 150), Image.LANCZOS)\n        return i\n\ndef image_base64(im):\n    if isinstance(im, str):\n        im = get_thumbnail(im)\n    with BytesIO() as buffer:\n        im.save(buffer, 'jpeg')\n        return base64.b64encode(buffer.getvalue()).decode()\n\ndef image_formatter(im):\n    return f'<img src=\"data:image\/jpeg;base64,{image_base64(im)}\">'\n\ndef add_image_path(x):\n    image_path = '..\/input\/train\/' + x\n    if os.path.exists(image_path):\n        path = os.path.join(image_path, os.listdir(image_path)[0])\n        return path","9b6d7494":"kin_df = pd.read_csv('..\/input\/train_relationships.csv')\nkin_df = kin_df.sample(50)\nkin_df.head()","57d3f560":"kin_df['p1_path'] = kin_df.p1.apply(lambda x: add_image_path(x))\nkin_df['p2_path'] = kin_df.p2.apply(lambda x: add_image_path(x))\nkin_df['p1_thumb'] = kin_df.p1_path.map(lambda f: get_thumbnail(f))\nkin_df['p2_thumb'] = kin_df.p2_path.map(lambda f: get_thumbnail(f))\nkin_df.head()","2e7156bc":"kin_df.dropna(inplace=True)","57f7a963":"# displaying PIL.Image objects embedded in dataframe\nHTML(kin_df[['p1', 'p2', 'p1_thumb', 'p2_thumb']].to_html(formatters={'p1_thumb': image_formatter, 'p2_thumb': image_formatter}, escape=False))","58bbc080":"# display images specified by path\n# HTML(kin_df[['p1', 'p2', 'p1_path', 'p2_path']].to_html(formatters={'p1_path': image_formatter, 'p2_path': image_formatter}, escape=False))","982c340c":"## Data Exploration and try-outs!"}}