{"cell_type":{"04f7b00d":"code","78117219":"code","a15f933e":"code","8c7b95a8":"code","09445293":"code","b34b264a":"code","d62baf8b":"code","3e62288e":"code","9184f8c3":"code","6d1b3e08":"code","f8e38f1b":"code","e45b323d":"code","c80841e1":"code","983c3dba":"code","a780cb2e":"code","fc05517f":"code","d24d40ea":"code","f1366207":"code","ccf942a8":"code","cb474e9d":"code","7babb6a1":"code","b2b9eaa1":"markdown"},"source":{"04f7b00d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","78117219":"nRowsRead = 1000 # specify 'None' if want to read whole file\n# airport_passengers.csv may have more rows in reality, but we are only loading\/previewing the first 1000 rows\ndf = pd.read_csv('\/kaggle\/input\/number-of-taiwan-airport-passengers-per-month\/airport_passengers.csv', delimiter=',', nrows = nRowsRead)\ndf.dataframeName = 'airport_passengers.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","a15f933e":"df.head()","8c7b95a8":"df[\"\u7e3d\u8a08\"].plot.hist()\nplt.show()","09445293":"df[\"\u81fa\u5317\u677e\u5c71\u6a5f\u5834\"].plot.hist()\nplt.show()","b34b264a":"df[\"\u81fa\u6771\u6a5f\u5834\"].plot.box()\nplt.show()","d62baf8b":"sns.pairplot(df, x_vars=['\u6843\u5712\u570b\u969b\u6a5f\u5834'], y_vars='\u6f8e\u6e56\u6a5f\u5834', markers=\"+\", size=4)\nplt.show()","3e62288e":"dfcorr=df.corr()\ndfcorr","9184f8c3":"sns.heatmap(dfcorr,annot=True,cmap='pink')\nplt.show()","6d1b3e08":"fig, axes = plt.subplots(1, 1, figsize=(12, 4))\nsns.boxplot(x='\u9ad8\u96c4\u570b\u969b\u6a5f\u5834', y='\u81fa\u4e2d\u6a5f\u5834', data=df, showfliers=False);","f8e38f1b":"g = sns.jointplot(x=\"\u81fa\u5317\u677e\u5c71\u6a5f\u5834\", y=\"\u4e03\u7f8e\u6a5f\u5834\", data=df, kind=\"kde\", color=\"m\")\ng.plot_joint(plt.scatter, c=\"w\", s=30, linewidth=1, marker=\"+\")\ng.ax_joint.collections[0].set_alpha(0)\ng.set_axis_labels(\"$\u81fa\u5317\u677e\u5c71\u6a5f\u5834$\", \"$\u4e03\u7f8e\u6a5f\u5834$\");","e45b323d":"import matplotlib.style\n\nimport matplotlib as mpl\n\nmpl.style.use('classic')","c80841e1":"sns.jointplot(df['\u5317\u7aff\u6a5f\u5834'],df['\u91d1\u9580\u6a5f\u5834'],data=df,kind='scatter')","983c3dba":"sns.jointplot(df['\u5357\u7aff\u6a5f\u5834'],df['\u862d\u5dbc\u6a5f\u5834'],data=df,kind='kde',space=0,color='g')","a780cb2e":"fig=sns.jointplot(x='\u6046\u6625\u6a5f\u5834',y='\u4e03\u7f8e\u6a5f\u5834',kind='hex',color= 'orange', data=df)","fc05517f":"g = (sns.jointplot(\"\u81fa\u4e2d\u6a5f\u5834\", \"\u81fa\u6771\u6a5f\u5834\",data=df, color=\"r\").plot_joint(sns.kdeplot, zorder=0, n_levels=6))","d24d40ea":"ax= sns.boxplot(x=\"\u9ad8\u96c4\u570b\u969b\u6a5f\u5834\", y=\"\u81fa\u4e2d\u6a5f\u5834\", data=df)\nax= sns.stripplot(x=\"\u9ad8\u96c4\u570b\u969b\u6a5f\u5834\", y=\"\u81fa\u4e2d\u6a5f\u5834\", data=df, jitter=True, edgecolor=\"gray\")\n\nboxtwo = ax.artists[2]\nboxtwo.set_facecolor('yellow')\nboxtwo.set_edgecolor('black')\nboxthree=ax.artists[1]\nboxthree.set_facecolor('red')\nboxthree.set_edgecolor('black')\nboxthree=ax.artists[0]\nboxthree.set_facecolor('green')\nboxthree.set_edgecolor('black')\n\nplt.show()","f1366207":"sns.set(style=\"darkgrid\")\nfig=plt.gcf()\nfig.set_size_inches(10,7)\nfig = sns.swarmplot(x=\"\u81fa\u5317\u677e\u5c71\u6a5f\u5834\", y=\"\u7da0\u5cf6\u6a5f\u5834\", data=df)","ccf942a8":"fig=sns.lmplot(x=\"\u82b1\u84ee\u6a5f\u5834\", y=\"\u81fa\u5357\u6a5f\u5834\",data=df)","cb474e9d":"# venn2\nfrom matplotlib_venn import venn2\n\u82b1\u84ee\u6a5f\u5834 = df.iloc[:,0]\n\u81fa\u6771\u6a5f\u5834 = df.iloc[:,1]\n\u6f8e\u6e56\u6a5f\u5834 = df.iloc[:,2]\n\u81fa\u5357\u6a5f\u5834 = df.iloc[:,3]\n# First way to call the 2 group Venn diagram\nvenn2(subsets = (len(\u82b1\u84ee\u6a5f\u5834)-15, len(\u81fa\u6771\u6a5f\u5834)-15, 15), set_labels = ('\u82b1\u84ee\u6a5f\u5834', '\u81fa\u6771\u6a5f\u5834'))\nplt.show()","7babb6a1":"df.plot.area(y=['\u7e3d\u8a08','\u6843\u5712\u570b\u969b\u6a5f\u5834','\u81fa\u5317\u677e\u5c71\u6a5f\u5834','\u5609\u7fa9\u6a5f\u5834'],alpha=0.4,figsize=(12, 6));","b2b9eaa1":"Kaggle Notebook Runner: Mar\u00edlia Prata @mpwolke"}}