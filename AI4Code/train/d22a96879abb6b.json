{"cell_type":{"1da82f3a":"code","6795cf12":"code","81e5312d":"code","474bc910":"code","f9f91ec9":"code","765ccdb9":"code","c2222455":"code","9f4b0766":"code","27d62bca":"code","ac35d6e6":"markdown","1fc21994":"markdown","b898d2f2":"markdown","d7805b64":"markdown","a4a2094a":"markdown","e8381880":"markdown"},"source":{"1da82f3a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","6795cf12":"df = pd.read_csv('..\/input\/spamraw.csv')\ndf.head()","81e5312d":"sns.countplot(data = df, x= df[\"type\"]).set_title(\"Amount of spam and no-spam messages\", fontweight = \"bold\")\nplt.show()","474bc910":"from sklearn.model_selection import train_test_split\n\n# train_test_split (X, Y, test_size=0.2, random_state=0)\ndata_train, data_test, labels_train, labels_test = train_test_split(\n    df.text,df.type,test_size=0.2,random_state=0) \n","f9f91ec9":"from sklearn.feature_extraction.text import CountVectorizer\n\nvectorizer = CountVectorizer()\n\n#fit & transform\n# fit: build dict (i.e. word->wordID)  \n# transform: convert document (i.e. each line in the file) to word vector \ndata_train_count = vectorizer.fit_transform(data_train)\ndata_test_count  = vectorizer.transform(data_test)","765ccdb9":"from sklearn.naive_bayes import MultinomialNB\n\nclf = MultinomialNB()\nclf.fit(data_train_count, labels_train)\npredictions = clf.predict(data_test_count)\nprint(predictions)","c2222455":"from sklearn.metrics import accuracy_score\n\nprint (accuracy_score(labels_test, predictions))","9f4b0766":"from sklearn.metrics import classification_report,confusion_matrix\nprint (confusion_matrix(labels_test, predictions))","27d62bca":"print (classification_report(labels_test, predictions))","ac35d6e6":"# Modeing & trainning","1fc21994":"# Brief\n- use sklearn to practice Navie Bayes to tackle a Spam Classification problem\n- this dataset is familiar to [SMS Spam Collection Dataset](https:\/\/www.kaggle.com\/uciml\/sms-spam-collection-dataset)","b898d2f2":"# train test split","d7805b64":"# Extraction & CountVectorize","a4a2094a":"# import lib and get to konw the data","e8381880":"# Results and Accuracy"}}