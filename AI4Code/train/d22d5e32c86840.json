{"cell_type":{"8e6fb965":"code","6aee1d4b":"code","8f956229":"code","34e7a447":"code","9f624fa9":"code","809a5d68":"code","7e64fae3":"code","e51483d8":"code","40a83a12":"code","d723a3fe":"code","1dd879aa":"code","c67106a4":"code","d46be0a6":"code","3003e7fd":"code","6c644036":"code","802ad3ef":"markdown"},"source":{"8e6fb965":"# Import necessary libraries\nimport numpy as np\nimport pandas as pd\nnp.random.seed(2020)\nimport spacy\n\nfrom sklearn.model_selection import train_test_split\n\n# Import elements for multilayer percepton \nfrom keras import Sequential\nfrom keras.layers import Dense, Dropout\nfrom keras.callbacks import EarlyStopping, ReduceLROnPlateau","6aee1d4b":"df = pd.read_csv('..\/input\/nlp-getting-started\/train.csv')\ndf.head()","8f956229":"df.info()","34e7a447":"df['target'].value_counts()","9f624fa9":"# Fill empties (anyway now I will use only text column)\ndf[['keyword', 'location']] = df[['keyword', 'location']].astype('str')\n\ndf.info()","809a5d68":"# Load core model\nnlp = spacy.load('en_core_web_lg')","7e64fae3":"# Convert tweets into vectors \nwith nlp.disable_pipes():\n    text_vectors = np.array([nlp(text).vector for text in df['text']])  ","e51483d8":"labels = df['target']","40a83a12":"# Split data and labels on train and valid set\nX_train, X_valid, y_train, y_valid = train_test_split(text_vectors, labels, test_size=0.2, random_state=3)","d723a3fe":"# Input shape for model\ninput_shape = text_vectors.shape[1]\n\n# Set callbacks to avoid overfitting\ncallbacks = [EarlyStopping(patience=3), ReduceLROnPlateau(patience=2)]","1dd879aa":"# Construct multilayer net\n\nmlp_model = Sequential([\n    Dense(64, input_dim=input_shape, activation='relu'),\n    Dropout(0.2),\n    Dense(32, activation='relu'),\n    Dense(1, activation='sigmoid'),   \n])\n\nmlp_model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","c67106a4":"# Train model\nmlp_model.fit(X_train, y_train,\n             batch_size=32,\n             epochs=30, \n             verbose=2,\n             callbacks=callbacks,\n             validation_data=(X_valid, y_valid))","d46be0a6":"# Check model on test validation_set\ntest_score = mlp_model.evaluate(X_valid, y_valid)\nprint(test_score)","3003e7fd":"# Factorize tweets from test part\ntest = pd.read_csv('..\/input\/nlp-getting-started\/test.csv')\n\nwith nlp.disable_pipes():\n    test_text_vectors = np.array([nlp(text).vector for text in test['text']])","6c644036":"# Predict targets for test data \ntest_labels = mlp_model.predict_classes(test_text_vectors)\n\n# ...and write result to csv\nsubmit_data = pd.DataFrame(test['id'])\nsubmit_data['target'] = test_labels\nsubmit_data.to_csv('nlp_submit.csv', index=False)","802ad3ef":"Below is easy way to achieve 81% accuracy for start in few steps: vectorise text of tweets and feed it to simple neural network. Just know **very basics** of NLP and neural networks"}}