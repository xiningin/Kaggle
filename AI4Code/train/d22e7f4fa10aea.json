{"cell_type":{"8acf5826":"code","3fa278be":"code","c7585335":"code","d6ef2c33":"code","77792c9c":"code","5ffda197":"code","c8662123":"code","dcd0cca0":"code","e34d8852":"code","0073e11b":"code","f312e760":"code","10498a4e":"code","809b3f5b":"code","d705ef63":"code","70f3ee2c":"code","17584e0d":"code","67e83bf2":"code","cfad008c":"code","89117587":"code","322c5909":"code","2673298c":"markdown","b361889a":"markdown","f4bbe5c9":"markdown","19f998bc":"markdown","68202e9e":"markdown","4c844ffe":"markdown","59ef8bad":"markdown"},"source":{"8acf5826":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport geopandas as gpd\nfrom shapely import wkt\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.offline as offline\noffline.init_notebook_mode()\nfrom plotly import tools\n\n\nimport matplotlib.cm\n\nfrom mpl_toolkits.basemap import Basemap\nfrom matplotlib.collections import PatchCollection\nfrom matplotlib.colors import Normalize\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3fa278be":"#Read and load the file to df and set the date column to date type\ndf=pd.read_csv('\/kaggle\/input\/gun-violence-data\/gun-violence-data_01-2013_03-2018.csv',parse_dates =['date'],index_col=['date']\n               )","c7585335":"df.info()","d6ef2c33":"df.head()","77792c9c":"#double check there are no duplicate indexes\nsum(df.index.duplicated())","5ffda197":"# Check number of rows\nlen(df)","c8662123":"# Check for null values\nprint('Null values in gun dataset: \\n')\nprint(df.isnull().sum())","dcd0cca0":"fig, ax = plt.subplots(figsize=(10,10))\nm = Basemap(width=6000000,height=4500000,resolution='c',projection='aea',lat_1=35.,lat_2=45,lon_0=-100,lat_0=40)\nm.drawcoastlines()\nm.fillcontinents(color='tan',lake_color='lightblue', zorder=0)\nplt.title(\"Geography of guns\")\nm.drawstates(linewidth=0.5, linestyle='solid', color='k')\nm.drawcountries(linewidth=2, linestyle='solid', color='k' )\nx, y = m(df['longitude'].tolist(), df['latitude'].tolist()) \ng=sns.scatterplot(x, y, hue='state',s=4, data=df, palette=\"bright\", zorder=10,alpha=0.3)\ng.legend_.remove()\n#plt.scatter(x,y,marker='o', color='Red',alpha =0.1,s=2)\nplt.show()","e34d8852":"male_count=df['participant_gender'].str.count('Male')\nfemale_count=df['participant_gender'].str.count('Female')\n#Make the data to dataframe for ease of use\nfemale_count = female_count.rename(0).to_frame()\nmale_count = male_count.rename(0).to_frame()\n#Check that the subsets are pandas dataframes","0073e11b":"#remove decimal place and print as a string\nmale_sum=int(male_count[0].sum())\nfemale_sum=int(female_count[0].sum())\nprint('number of males: ' + str(male_sum))\nprint('number of females: ' + str(female_sum))","f312e760":"#Make a simple pie chart of the proportion of crimes\nx=[male_sum,female_sum]\nplt.pie(x)\nplt.legend(['Total number of males involved', 'Total number of females involved'],loc ='best')\nplt.show()\n","10498a4e":"df['gender_parsed']=df[\"participant_gender\"].fillna('0:Unkown')\ndf['age_parsed']=df[\"participant_age\"].fillna('0:Unkown')\ngen=df['gender_parsed'].iloc[0:5]\nage=df['age_parsed'].iloc[0:5]\nprint(gen)\nprint(type(gen))","809b3f5b":"month=df.groupby(by=[df.index.year,df.index.month]).agg('count')['incident_id']\nmonth.plot(x=month.index,y=month)\nplt.ylabel('number of incidents')\nplt.xlabel('year\/month')","d705ef63":"month=df['2013']\nmonth2013=month.groupby(by=month.index.month).agg('count')['incident_id']\nmonth2013.plot(x=month2013.index,y=month2013)\nplt.ylabel('number of incidents')\nplt.xlabel('year\/month')","70f3ee2c":"#drop 2013\ndf=df[df.index.year!=2013]\ndf.index.year.unique()\nno2013=df.groupby(by=[df.index.year,df.index.month]).agg('count')['incident_id']\nno2013.plot(x=no2013.index,y=no2013)\nplt.ylim(bottom=0) \nplt.ylabel('Incidents')\nplt.xlabel('Year,Month')\nplt.show()\n","17584e0d":"sumkilled=df.groupby(by=[df.index.year,df.index.month,'state']).agg(['sum'])['n_killed']\nprint(sumkilled)","67e83bf2":"m=df.groupby(df.index.year).agg('count')\nx_val=m.index\ny_val=m.incident_id\nplt.bar(x=m.index,height=m.incident_id)\nplt.title('Incidents by year')\n#only part of 2018 is shown","cfad008c":"def separate(df):\n    df=df.split(\"||\")\n    df=[(x.split(\"::\")) for x in df]\n    y = []\n    for  i in range (0, len(df)):\n        y.append(df[i][-1])\n    return(y)\n\ndf['participant_gender'] = df['participant_gender'].fillna(\"0::Zero\")\ndf['gender'] = df['participant_gender'].apply(lambda x: separate(x))\ndf['Males'] = df['gender'].apply(lambda x: x.count('Male'))\ndf['Females'] = df['gender'].apply(lambda x: x.count('Female'))\n\n\ndx=df[['state', 'Males', 'Females']].groupby('state').sum()\n\ndx","89117587":"\ntrace1 = go.Bar(\n    x=dx.index,\n    y=dx['Males'],\n    name='Males'\n)\ntrace2 = go.Bar(\n    x=dx.index,\n    y=dx['Females'],\n    name='Females'\n)\n\ndata = [trace1, trace2]\nlayout = go.Layout(\n    barmode='group',\n    title=\"Gender Ratio of Shooters\"\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='grouped-bar')","322c5909":"df['gun_type_parsed'] = df['gun_type'].fillna('0:Unknown')\ngt = df.groupby(by=['gun_type_parsed']).agg({'n_killed': 'sum', 'n_injured' : 'sum', 'state' : 'count'}).reset_index().rename(columns={'state':'count'})\ngt.head()\n\nresults = {}\nfor i, each in gt.iterrows():\n    wrds = each['gun_type_parsed'].split(\"||\")\n    for wrd in wrds:\n        if \"Unknown\" in wrd:\n            continue\n        wrd = wrd.replace(\"::\",\":\").replace(\"|1\",\"\")\n        gtype = wrd.split(\":\")[1]\n        if gtype not in results: \n            results[gtype] = {'killed' : 0, 'injured' : 0, 'used' : 0}\n        results[gtype]['killed'] += each['n_killed']\n        results[gtype]['injured'] +=  each['n_injured']\n        results[gtype]['used'] +=  each['count']\n\ngun_names = list(results.keys())\nused = [each['used'] for each in list(results.values())]\nkilled = [each['killed'] for each in list(results.values())]\ninjured = [each['injured'] for each in list(results.values())]\ndanger = []\nfor i, x in enumerate(used):\n    danger.append((killed[i] + injured[i]) \/ x)\n\ntrace1 = go.Bar(x=gun_names, y=used, name='SF Zoo', orientation = 'v',\n    marker = dict(color = '#EEE8AA', \n        line = dict(color = '#EEE8AA', width = 1) ))\ndata = [trace1]\nlayout = dict(height=400, title='Which guns have been used?', legend=dict(orientation=\"h\"));\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='marker-h-bar')","2673298c":"Unsupprisingly men are involved the most in gun crime\n\nHow about when we look at the age distribustions for crimes?\n","b361889a":"Using functions,number of incidents a year","f4bbe5c9":"This data seems wrong for dates before 2014, lets take a deeper look ","19f998bc":"# Incidents by time ","68202e9e":" # <a id=\"2\">2. Looking at the distributions<\/a>","4c844ffe":"# Lets work together!\n\n## Exploratory Data Analysis of Gun Violence in the USA \n\n![Gun_image](http:\/\/images.pexels.com\/photos\/3602946\/pexels-photo-3602946.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260)\n\n\n\n## Motivation for EDA\n* Opportunity to work on complete ready dataset (~240,000 entries)\n* Find interesting trends - incl. finding the age\\gender distribustions of people involved\n* Aim to compare current policy that gun control advocates suggest to what the data suggests\n\n## Opportunity to work using different libaries \n* Pandas\n* seaborn\n* Ploty\n\n\n## Contents:\n &nbsp;&nbsp;&nbsp;&nbsp;[1.Dataset checks](#1)\n &nbsp;&nbsp;&nbsp;&nbsp;[2.Looking at the distributions](#2)","59ef8bad":" <a id=\"1\">1. Dataset Checks<\/a>\n\n##### This is undertaken in order to check types, missing values, indexes, duplicates, and ensure the quality of the analysis. "}}