{"cell_type":{"2dcd06b8":"code","c9574028":"code","fd469466":"code","201d7d51":"code","625133df":"code","38ecb281":"code","03b73df6":"code","8f15a05b":"markdown","0178c8d6":"markdown"},"source":{"2dcd06b8":"# Task 1: Load the car_crashes dataset.\n\n# Capitalize the names of the numeric variables in the car_crashes data and add NUM to the beginning. #############################################\n\n# Try to get the following output by reading the data set from the beginning.\n\n# before: #['total', 'speeding', 'alcohol', 'not_distracted', 'no_previous', 'ins_premium', 'ins_losses', 'abbrev']\n\n# after:\n\n# ['NUM_TOTAL', #'NUM_SPEEDING', #'NUM_ALCOHOL', #'NUM_NOT_DISTRACTED', #'NUM_NO_PREVIOUS', #'NUM_INS_PREMIUM', #'NUM_INS_LOSSES', #'ABBREV']\n\n# Hints: #Non-numeric names should also capitalize. \n#Must be done with a single list comprehension structure.\n\nimport seaborn as sns\n\ndf=sns.load_dataset(\"car_crashes\") df.head() df.columns\n\nnew_cols= [ \"NUM_\"+col.upper() if df[col].dtype in [int,float] else col.upper() for col in df.columns] new_cols","c9574028":"#############################################\n# Task 2: Type \"FLAG\" AFTER the names of variables that DOES NOT contain \"no\" in their name.\n# #############################################\n#\n# # All variable names must be uppercase.\n# # A single list should be made with comp.\n#\n# # Expected output:\n#\n# # ['TOTAL_FLAG',\n# # 'SPEEDING_FLAG',\n# # 'ALCOHOL_FLAG',\n# # 'NOT_DISTRACTED',\n# # 'NO_PREVIOUS',\n# # 'INS_PREMIUM_FLAG',\n# # 'INS_LOSSES_FLAG',\n# # 'ABBREV_FLAG']\n\nimport seaborn as sns\n\ndf=sns.load_dataset(\"car_crashes\")\ndf.head()\ndf.columns\n\nnew_columns = [cols.upper()+\"_FLAG\" if \"no\" not in cols else cols.upper() for cols in df.columns ]\nnew_columns","fd469466":"#############################################\n# Task 3: Create a new df by selecting the names of the variables that are DIFFERENT from the variable names given below.\n#############################################\n\n# og_list = [\"abbrev\", \"no_previous\"]\n\n\n# First, create a new list named new_cols using list comprehension according to the list above.\n# Then create a new df by selecting these variables with df[\"new_cols\"] and name it as new_df.\n\n# Expected output:\n# new_df.head()\n#\n#    total  speeding  alcohol  not_distracted  ins_premium  ins_losses\n# 0 18.800     7.332    5.640          18.048      784.550     145.080\n# 1 18.100     7.421    4.525          16.290     1053.480     133.930\n# 2 18.600     6.510    5.208          15.624      899.470     110.350\n# 3 22.400     4.032    5.824          21.056      827.340     142.390\n# 4 12.000     4.200    3.360          10.920      878.410     165.630\n\nimport seaborn as sns\n\ndf=sns.load_dataset(\"car_crashes\")\ndf.head()\ndf.columns\nog_list = [\"abbrev\", \"no_previous\"]\nnew_cols = [col for col in df.columns if col not in og_list]\ndf=df[new_cols]\ndf","201d7d51":"# BONUS PART (DICTIONARY COMPREHENSION) #\n#############################################\n# Task 4: : Create a dictionary as follows. Take only numeratical columns\n#############################################\n#Hint : Create a dynamically special Dictionary which have got a key as string and value as a List\n\n# Expected output:\n\n# {'total': ['mean', 'min', 'max', 'var'],\n# 'speeding': ['mean', 'min', 'max', 'var'],\n# 'alcohol': ['mean', 'min', 'max', 'var'],\n# 'not_distracted': ['mean', 'min', 'max', 'var'],\n# 'no_previous': ['mean', 'min', 'max', 'var'],\n# 'ins_premium': ['mean', 'min', 'max', 'var'],\n# 'ins_losses': ['mean', 'min', 'max', 'var']}\n\nimport seaborn as sns\ndf = sns.load_dataset(\"car_crashes\")\ndf.columns\n\nagg_list = ['mean', 'min', 'max', 'sum']\nnum_cols = [col for col in df.columns if df[col].dtype in [int,float]]\nnew_dict = {col:agg_list  for col in num_cols }\ndf.groupby(\"abbrev\").agg(new_dict)","625133df":"#############################################################\n# Task 4.1 : For task 4 Use aggregation function            #\n# with a new_dict and group dataframe df by \"abbrev\" column #\n#############################################################\n\ndf.groupby(\"abbrev\").agg(new_dict)","38ecb281":"##################################################\n# Task 5 Create a dictionary as follows: #\n##################################################\n#Hint : Create a dynamically special Dictionary which has got a key as string and value as a List\n\n# before:\n\n# {'total': ['mean', 'min', 'max', 'var'],\n#  'speeding': ['mean', 'min', 'max', 'var'],\n#  'alcohol': ['mean', 'min', 'max', 'var'],\n\n# after:\n\n# {'total': ['total_mean', 'total_min', 'total_max', 'total_var'],\n# 'speeding': ['speeding_mean', 'speeding_min', 'speeding_max', 'speeding_var'],\n# 'alcohol': ['alcohol_mean', 'alcohol_min', 'alcohol_max', 'alcohol_var']\n\nimport seaborn as sns\ndf = sns.load_dataset(\"car_crashes\")\ndf.columns\n\nagg_list = ['mean', 'min', 'max', 'sum']\nnum_cols = [col for col in df.columns if df[col].dtype in [int,float]]\nnew_dict = {col:agg_list  for col in num_cols }\n\nnew_dict2 = {col:[str(col)+\"_\"+i for i in agg_list ] for col in new_dict}\nnew_dict2","03b73df6":"######################################################\n# TASK 6 :  We want to create a dictionary as follows:\n######################################################\n\n# PURPOSE: Let's want to assign the first element of a list as key and the other set of elements as value.\n\n# before\n# total speeding alcohol not_distracted no_previous\n# 0 18.8 7.332 5.640 18.048 15.040\n# 1 18.1 7.421 4,525 16,290 17.014\n# 2 18.6 6,510 5,208 15,624 17,856\n# 3 22.4 4.032 5.824 21.056 21.280\n# 4 12.0 4.200 3.360 10.920 10.680\n\n\n# after:\n# {18.8: [7, 5, 18, 15],\n# 18.1: [7, 4, 16, 17],\n# 18.6: [6, 5, 15, 17],\n# 22.4: [4, 5, 21, 21],\n# 12.0: [4, 3, 10, 10]}\n\nimport seaborn as sns\n\ndf = sns.load_dataset(\"car_crashes\")\nnum_cols = [col for col in df.columns if df[col].dtype in [int,float]]\n\nnew_df=df[num_cols]\n\nnew_dict3 = {new_df.values[s,:][0]:[ int(i) for i in new_df.values[s,:][1:]] for s in range(len(new_df))}\nnew_dict3","8f15a05b":"\n# W1.1 -  List Comprehension && Bonus ( Dictionary Comprehension ) Exercises FOR DATA SCIENCE","0178c8d6":"SOURCES :\n\nVBO- DSMLBC www.veribilimiokulu.com - Mustafa Vahit Keskin - 2021"}}