{"cell_type":{"81c98c40":"code","2c6109d1":"code","8bdf99ae":"code","dc91e779":"code","ed9712d8":"markdown","2464b398":"markdown","424f95a8":"markdown","3665f5ff":"markdown","f724a289":"markdown"},"source":{"81c98c40":"import json\nimport pandas as pd\nimport hvplot.pandas","2c6109d1":"train = pd.read_csv('..\/input\/train.csv', dtype={'fullVisitorId': str, 'date': str}, parse_dates=['date'],\n        index_col=('fullVisitorId', 'sessionId'))\ntrain.head()","8bdf99ae":"json_cols = ['device', 'geoNetwork', 'totals', 'trafficSource']\ntrain_jsons = train[json_cols]\ntrain_nonjsons = train.drop(json_cols, axis=1)\n\ndef profile(df):\n    numerics = df.select_dtypes(exclude=['bool', 'object']).columns.tolist()\n    try:\n        display(df.hvplot.hist(numerics, height=300, width=350, subplots=True, shared_axes=False).cols(2))\n    except: print(\"no numerics\")\n    for n in df.select_dtypes(['bool', 'object']).columns:\n        dcounts = df[n].value_counts(normalize=True)\n        dcounts_df = pd.DataFrame({'label': dcounts.index.tolist(), 'percent of total': dcounts})\n        dcounts_df.reset_index(drop=True, inplace=True)\n        display(dcounts_df[0:50].hvplot.bar(x='label', y='percent of total', invert=True, flip_yaxis=True, \n               height=450, width=450, ylim=(0,1), title=n))\nprofile(train_nonjsons)","dc91e779":"for jc in json_cols: \n    print(jc)\n    flat_df = pd.io.json.json_normalize(train_jsons[jc].apply(json.loads)) \n    flat_df = flat_df.apply(pd.to_numeric, errors='ignore')\n    profile(flat_df)\n","ed9712d8":"Here's our train data - notice the lovely JSON!","2464b398":"Now we can do the json columns. You'll see the target to predict, transactionRevenue, as part of the 'totals' display.","424f95a8":"We'll start with the non-json columns first. Note that the bar plots only include the top 50 categories.","3665f5ff":"This is a profile of the training data - i.e., an overview of variables with counts, distributions and so on. It's a good start to a more thorough EDA. It includes unpacking the JSON columns and looking at the contents.","f724a289":"All for now, good luck!"}}