{"cell_type":{"2058298e":"code","3d82b975":"code","25165b30":"code","fefa41cd":"code","edac27b0":"code","a6cd6e19":"code","ba938e79":"code","1d68c2d9":"code","1fc794b3":"code","c4149008":"code","bbdef44b":"code","0a137a89":"code","ec3eb5e6":"code","bb1415c9":"code","061cb643":"code","28274bfd":"code","72b6e437":"markdown","e348c271":"markdown","4e0968e7":"markdown","f8b96828":"markdown","d6c2773f":"markdown","d4062403":"markdown","e79f7603":"markdown","74075511":"markdown"},"source":{"2058298e":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\nimport utils, pickle\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\npd.set_option('display.max_columns', 50)","3d82b975":"dataframes = []\nfilename = '..\/input\/Fuel Consumption Ratings'\nindexes = ['MODEL YEAR', 'MAKE', 'MODEL', 'VEHICLE CLASS', 'ENGINE SIZE', 'CYLINDERS','TRANSMISSION','FUEL TYPE','FUEL CONSUMPTION CITY(L\/100 km)','HWY(L\/100 km)','COMB(L\/100 km)','COMB(mpg)','CO2 EMISSIONS(g\/km)']\n\nfor i in range(20):\n    to_add = pd.read_csv(filename+str(i)+'.csv', names=indexes)\n    dataframes.append(to_add)\ndf = pd.concat(dataframes)\ndf.T","25165b30":"print(df.shape)\n#checking if there is NaN values\ndf.isna().sum()","fefa41cd":"#checking for innecesary data; i.e. just 1 value for feature.\ndf.nunique()","edac27b0":"df.drop_duplicates(keep='first', inplace=True)","a6cd6e19":"df.drop(['MODEL YEAR'], axis=1, inplace=True)\ndf.T","ba938e79":"num_vars = [c for c in df if pd.api.types.is_numeric_dtype(df[c])]\nnum_vars","1d68c2d9":"cat_vars = [c for c in df if not c in num_vars]\ncat_vars","1fc794b3":"cat_dict = {}\n\nfor n, col in df.items():\n    if n in cat_vars:\n        df[n] = df[n].astype('category')\n        cat_dict[n] = {i+1:e for i,e in enumerate(df[n].cat.categories)}\ncat_dict","c4149008":"for n,col in df.items():\n    if n in cat_vars:\n        df[n] = df[n].cat.codes + 1\ndf.T","bbdef44b":"df.dtypes","0a137a89":"#splitting independent variables from the label\nx = df.drop(['CO2 EMISSIONS(g\/km)'], axis=1)\ny = df['CO2 EMISSIONS(g\/km)']\n\n#splitting the data for testing and training:\nx_train, x_val, y_train, y_val = train_test_split(x, y, test_size=0.2, random_state=1507)","ec3eb5e6":"m = RandomForestRegressor(1000, n_jobs=-1, oob_score=True)\nm.fit(x_train, y_train)","bb1415c9":"def score():\n    print(f'Scores:')\n    print(f'Train      = {m.score(x_train, y_train):.4}')\n    print(f'Validation = {m.score(x_val, y_val):.4}')\n    if hasattr(m, 'oob_score_'): print(f'OOB        = {m.oob_score_:.4}')","061cb643":"score()","28274bfd":"imp = pd.DataFrame({'cols':x_train.columns, 'imp':m.feature_importances_}).sort_values('imp', ascending=False)\nimp.style.bar(color='lightblue')","72b6e437":"# Converting object variables into categoric ones and storing the relation in cat_dict","e348c271":"# Dropping the MODEL YEAR atribute, since its value is already represented in other features and has no relevance anymore.","4e0968e7":"# Now that we have every variable as numeric, we can start with the training","f8b96828":"# Feature Importance","d6c2773f":"# Replacing categoric variables by their codes:","d4062403":"# All the data is splitted in 20 csv files and the headings have been erased.","e79f7603":"# Separating categoric from numeric variables:","74075511":"# Training the data and seeing its test and Out-Of-Bag score"}}