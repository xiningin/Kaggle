{"cell_type":{"14344cda":"code","e2fe0af5":"code","e68821b8":"code","9601e556":"code","3a91c45c":"code","17ca78df":"code","67fdd3e7":"code","fe1176b5":"code","5f262b98":"code","783b67ba":"code","db827ba0":"code","8b3b1795":"code","4abeeca5":"code","f6093094":"code","6f0c19dc":"code","f60a85e1":"code","abd5bff4":"code","b35522d1":"code","0b1b3a52":"code","d4d0fb3f":"code","76a2c6ab":"code","5043bf67":"code","f5839ba0":"code","74a49038":"code","e6f2734a":"markdown","c1be68e1":"markdown","a3f3a6c1":"markdown","3c3a346d":"markdown","066600b7":"markdown","335b3071":"markdown"},"source":{"14344cda":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e2fe0af5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline","e68821b8":"df = pd.read_csv(\"\/kaggle\/input\/brasilian-houses-to-rent\/houses_to_rent_v2.csv\")\ndf.info()","9601e556":"df.head(3)","3a91c45c":"df['floor'] = pd.to_numeric(df['floor'], errors='coerce')\ndf['floor'] = df['floor'].fillna(df['floor'].median()).astype(int)","17ca78df":"import seaborn\nplt.figure(figsize=(5, 3))\nplt.tight_layout()\nseaborn.distplot(df['total (R$)'])","67fdd3e7":"plt.figure(figsize=(5, 3))\ndf['total (R$)'].plot.box(grid=True)","fe1176b5":"rows = df[df['total (R$)']>50000].index\ndf.drop(rows, inplace=True)","5f262b98":"plt.figure(figsize=(5, 3))\nplt.tight_layout()\nseaborn.distplot(df['total (R$)'])","783b67ba":"plt.figure(figsize=(5, 3))\ndf['total (R$)'].plot.box(grid=True)","db827ba0":"df.head(3)","8b3b1795":"X = df.iloc[:, :-1].values\ny = df.iloc[:, -1].values","4abeeca5":"from sklearn.preprocessing import LabelEncoder, OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nle = LabelEncoder()\nX[:, 6] =le.fit_transform(X[:, 6])\nle = LabelEncoder()\nX[:, 7] =le.fit_transform(X[:, 7])\nLabelEncoder_X = LabelEncoder()\nX[:, 0] = LabelEncoder_X.fit_transform(X[:, 0])\ntransformer = ColumnTransformer([('city', OneHotEncoder(drop=[0]), [0])], remainder='passthrough')\nX = transformer.fit_transform(X)","f6093094":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","6f0c19dc":"from sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train, y_train)","f60a85e1":"y_pred = regressor.predict(X_test)","abd5bff4":"act_vs_pred = pd.DataFrame({'Actual': y_test.flatten(), 'Predicted': y_pred.flatten()})","b35522d1":"df1 = act_vs_pred[:20]\ndf1.plot(kind='bar')\nplt.show()","0b1b3a52":"from sklearn.metrics import r2_score, mean_squared_error\nprint('Mean Squared Error:', mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(mean_squared_error(y_test, y_pred)))\nprint('R2:', r2_score(y_test, y_pred))","d4d0fb3f":"residuals = y_test - y_pred","76a2c6ab":"seaborn.distplot(residuals)","5043bf67":"import scipy as sp\nfig, ax = plt.subplots()\n_, (_, _, r) = sp.stats.probplot(residuals, plot=ax, fit=True)","f5839ba0":"np.mean(residuals) # mean of the residuals is near to 0","74a49038":"import statsmodels.api as sm\nacf = sm.graphics.tsa.plot_acf(residuals)\nacf.show()\n# No auto correlation of residuals","e6f2734a":"**Read data**","c1be68e1":"**Linear model**","a3f3a6c1":"**Pre processing**","3c3a346d":"Importing library","066600b7":"**Removal of outliers**","335b3071":"**Train test data split**"}}