{"cell_type":{"5ac01a37":"code","f9506d53":"code","819ab508":"code","31b757a6":"code","1ed3ac09":"code","51b2a28f":"code","d84a2d5a":"code","52a1dd70":"code","beb6f27f":"code","c749f620":"code","ef4c91d8":"code","efa5584d":"code","c6bf45dd":"code","366a88b3":"code","124ceb10":"code","214368da":"code","8aefce73":"code","60fada9b":"code","30399a09":"code","53f5a2b9":"markdown","100369c1":"markdown","0e9920da":"markdown","0b7ac07b":"markdown","b8734f0b":"markdown","4400fbf9":"markdown","841a4bb9":"markdown","e01c4e5d":"markdown","38bef37f":"markdown","d5a7982f":"markdown","fd563f76":"markdown","da862da9":"markdown","ab4923b7":"markdown","286f5c18":"markdown","6780d00a":"markdown"},"source":{"5ac01a37":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f9506d53":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\npd.set_option('display.max_colwidth', 100)","819ab508":"table1 = pd.read_csv('\/kaggle\/input\/italian-cultural-heritage-sample-data-20152018\/table1.csv',index_col=False)\ntable2 = pd.read_csv('\/kaggle\/input\/italian-cultural-heritage-sample-data-20152018\/table2.csv',index_col=False)\ntable4 = pd.read_csv('\/kaggle\/input\/italian-cultural-heritage-sample-data-20152018\/table4.csv',index_col=False)\ntable5 = pd.read_csv('\/kaggle\/input\/italian-cultural-heritage-sample-data-20152018\/table5.csv',index_col=False)","31b757a6":"print(table1.info())\ntable1.head()","1ed3ac09":"# considering all the visitors\n# , paying and not paying\n# , what is the average price?\ntable1['Average_price_paid']= np.around(table1['Euro'] \/ table1['Visitors_total'], decimals=2)\ntable1.to_csv('table1.csv')","51b2a28f":"# show the two charts: visitors trend by type\n# , and average price by type \nsns.set(style=\"darkgrid\")\nsns.relplot(x=\"Year\", y=\"Visitors_total\",\n            hue=\"Type\", \n            kind=\"line\", legend=\"full\", data=table1)\nsns.relplot(x=\"Year\", y=\"Average_price_paid\",\n            hue=\"Type\", \n            kind=\"line\", legend=\"full\", data=table1)","d84a2d5a":"print(table2.info())\ntable2.head()","52a1dd70":"# compute the number of visitors by year- but store in separate dataframe for further uses\ntable2_Visitors_Year = table2[['Year','Visitors_total']].groupby('Year').sum().reset_index()\n# remove potential ambiguity in column names\ntable2_Visitors_Year.columns = ['Year', 'Visitors_total_year']\n# get from the original table only the columns needed for the chart\ntablex = table2[['Year','Region','Visitors_total','Euro']].merge(table2_Visitors_Year,how='outer')\n# add within the table the information about the average revenue by region by year\ntablex['Average_price_paid']= np.around(tablex['Euro'] \/ tablex['Visitors_total'], decimals=1)\n# add the weight for the bubble chart\ntablex['Percentage_visitors'] = np.around((tablex['Visitors_total'] \/ tablex['Visitors_total_year']), decimals=2)*100","beb6f27f":"tablex.to_csv('tablex.csv')\ntablex","c749f620":"cmap = sns.cubehelix_palette(dark=.3, light=.8, as_cmap=True)\nsns.set(style=\"darkgrid\")\nax = sns.scatterplot(x=\"Average_price_paid\", y=\"Region\",\n\n                     hue=\"Percentage_visitors\", size=\"Percentage_visitors\",\n\n                     sizes=(40, 400), palette=cmap,\n\n                     legend=\"brief\", data=tablex[tablex['Year']==2018])\nax.legend(loc='center left', bbox_to_anchor=(1.25, 0.5), ncol=1)","ef4c91d8":"cmap = sns.cubehelix_palette(dark=.3, light=.8, as_cmap=True)\nsns.set(style=\"darkgrid\")\nax = sns.scatterplot(x=\"Percentage_visitors\", y=\"Region\",\n\n                     hue=\"Average_price_paid\", size=\"Average_price_paid\",\n\n                     sizes=(40, 400), palette=cmap,\n\n                     legend=\"brief\", data=tablex[tablex['Year']==2018])\nax.legend(loc='center left', bbox_to_anchor=(1.25, 0.5), ncol=1)\nax.set_title(\"Percentage visitors in 2018 by Region, vs Average price paid\")","efa5584d":"cmap = sns.cubehelix_palette(dark=.3, light=.8, as_cmap=True)\nsns.set(style=\"darkgrid\")\nax = sns.scatterplot(x=\"Average_price_paid\", y=\"Region\",\n\n                     hue=\"Percentage_visitors\", size=\"Percentage_visitors\",\n\n                     sizes=(40, 400), palette=cmap,\n\n                     legend=\"brief\", data=tablex[tablex['Year']==2018])\nax.legend(loc='center left', bbox_to_anchor=(1.25, 0.5), ncol=1)\nax.set_title(\"Average price paid in 2018 by Region, vs Percentage visitors\")","c6bf45dd":"print(table4.info())\ntable4.head()","366a88b3":"# create copy of the table, to remove the \"TOTALS\" rows from the Type column\ntable4_net = table4.copy()\ntable4_net = table4_net.set_index('Type').drop('TOTALS').reset_index()","124ceb10":"# compute the number of visitors by year- but store in separate dataframe for further uses\ntable4_net_Visitors_Year = table4_net[['Year','Visitors_total']].groupby('Year').sum().reset_index()\n# remove potential ambiguity in column names\ntable4_net_Visitors_Year.columns = ['Year', 'Visitors_total_year']\n# get from the original table only the columns needed for the char\ntabley = table4_net[['Year','Month','Type','Visitors_total','Euro']].groupby(['Year','Type']).sum().reset_index().merge(table4_net_Visitors_Year,how='outer')\n# set year to string\ntabley['Year'] = tabley['Year'].apply(str)\n# add within the table the information about the average revenue by region by year\ntabley['Average_price_paid']= np.around(tabley['Euro'] \/ tabley['Visitors_total'], decimals=1)\n# add the weight for the bubble chart\ntabley['Percentage_visitors'] = np.around((tabley['Visitors_total'] \/ tabley['Visitors_total_year']), decimals=2)*100","214368da":"tabley.to_csv('tabley.csv')\ntabley","8aefce73":"sns.set(style=\"darkgrid\")\nax = sns.scatterplot(x=\"Year\", y=\"Type\",\n\n                     hue=\"Average_price_paid\", size=\"Percentage_visitors\",\n\n                     sizes=(40, 400),\n\n                     legend=\"brief\", data=tabley)\nax.legend(loc='center left', bbox_to_anchor=(1.25, 0.5), ncol=1)\nax.set_title(\"Price impact on number of visitors 2015-2018\")","60fada9b":"# show the two charts: visitors trend by type\n# , and average price by type \nsns.set(style=\"darkgrid\")\nsns.relplot(x=\"Year\", y=\"Percentage_visitors\",\n            hue=\"Type\", \n            kind=\"line\", legend=\"full\", data=tabley)\nsns.relplot(x=\"Year\", y=\"Average_price_paid\",\n            hue=\"Type\", \n            kind=\"line\", legend=\"full\", data=tabley)","30399a09":"print(table5.info())\ntable5[(table5.Dimension=='Customers')&(table5.Year==2018)]","53f5a2b9":"# Tabella 4: Monthly data by type 2015-2018","100369c1":"## Environment setup","0e9920da":"# Tabella 2: Data by region 2015-2018","0b7ac07b":"## Data scoping","b8734f0b":"## Business context","4400fbf9":"# Tabella 5: Monthly data by region 2015-2018","841a4bb9":"**table5.csv: Monthly data by region**\n\n| Column name | Data type | Value range | Description on Kaggle |\n| --- | --- | --- | --- |\n| Dimension | object | Visitors Euro | Visitors: row about visitors, Euro: row about revenue |\n| Year | int64 | 2015-2018 | int64 1996...2018 |\n| Region | object | Italian region name | object name of the Italian Region |\n| Jan | float64 | | float64 amount |\n| ... | | *one column for each month* |\n| Dec | float64 | | float64 amount |\n| TotalYer | float64 | | float64 sum(Jan...Dec) |","e01c4e5d":"# Table 1: Historical data by type 1996-2018","38bef37f":"The data used within this sample dataset is about the number and visitors and revenue to Italian Cultural Heritage sites.\n\nSpecifically, the dataset contains the above about:\n* **MU** museums, \n* **MOAA** monuments and archeological parks,\n* **CIMU** museum networks\n\nThe data contained in this dataset have been extracted from the Open Data section of the Italian Government Ministry \"Ministero per i beni e le attivit\u00e0 culturali e per il turismo\"\n\nThe original data (along with others) can be accessed [here](https:\/\/www.beniculturali.it\/mibac\/export\/MiBAC\/sito-MiBAC\/MenuPrincipale\/Trasparenza\/Open-Data\/index.html)\n\nThe data have been extracted on 2020-05-02.\n\nThe purpose of this dataset is to be used one of many for forthcoming publishing activities, as the other datasets published on [my Kaggle profile](https:\/\/kaggle.com\/robertolofaro)\n\nHence, the data are selected for demonstration purposes, and subject only to the following transformations:\n* select only the level of detail needed\n* no aggregation has been done on data before being posted here\n* if the data about a domain were e.g. split across multiple files by yes, have been collated into a single file \n* the columns names have been replaced by a descriptive label in English\n* all the files have been converted from Excel to CSV\n\nThe information contained in this dataset is partitioned in the following files (the originals were Excel files by year):\n\n| Filename| Original | Title | 2015 | 2016 | 2017 | 2018 |\n| --- | --- | --- | --- | --- | --- | --- |\n| table1.csv | Tavola 1 Dati storici per tipologia | Historical data by type | _ | _ | _ | A |\n| table2.csv | Tavola 2 Dati per provincia e regione | Data by region | B | B | B | B |\n| table4.csv | Tavola 4 Dati mensili per tipologia | Monthly data by type | x | x | x | x |\n| table5.csv | Tavola 5 Dati regionali\/mese (visitatori ed Euro) | Monthly data by region | C | C | C | C |\n\n* A *Tavola 1: contains the data from 1996 to the year selected*\n* B *Tavola 2: extracted only data by region, ignoring provinces*\n* C *Tavola 5: each Excel file contained separate spreadsheets for visitors and revenue*\n\n**PLEASE NOTE: I have no affiliation whatsoever with the Italian Government- I selected these data (along with others from other sources, e.g. Eurostat, OECD, World Bank, UN) just to support my publishing purposes on the use of *Open Data* for business and social projects and initiatives**\n\nMore information on the concept, and associated past and future datasets or publications, please visit [Data Democracy](https:\/\/robertolofaro.com\/data-democracy)","d5a7982f":"## Data dimensions","fd563f76":"input_data = pd.read_csv('..\/input\/selected-indicators-from-world-bank-20002019\/facttable.csv').drop('Unnamed: 0',axis=1)\ncategory_country = pd.read_csv('..\/input\/selected-indicators-from-world-bank-20002019\/dimension_country.csv')\ncategory_indicator = pd.read_csv('..\/input\/selected-indicators-from-world-bank-20002019\/dimension_indicator.csv')","da862da9":"**table2.csv: Data by region**\n\n| Column name | Data type | Value range | Description on Kaggle |\n| --- | --- | --- | --- |\n| Year | int64 | 1996-2018 | int64 1996...2018 |\n| Region | object | Italian region name | object name of the Italian Region |\n| Venues_paying | int64 |  |  int64 Venues usually requiring the payment of a ticket |\n| Venues_free | int64 |  | int64 Venues not requiring the payment of a ticket |\n| Venues_total | int64 |  | int64 Venues_paying + Venues_free |\n| Visitors_paying_paid | int64 |  | int64 Visitors to Venues_paying who paid a ticket |\n| Visitors_paying_notpaying | int64 |  | int64 Visitors to Venues_paying who did not pay a ticket |\n| Visitors_paying_total | int64 |  | int64 Visitors_paying_paid + Visitors_paying_notpaying |\n| Visitors_free | int64 |  | int64 Visitors to Venues_free |\n| Visitors_total | int64 |  | int64 Visitors_paying_total + Visitors_free |\n| Euro | float64 |  | float64 amount |","ab4923b7":"**table4.csv: Monthly data by type**\n\n| Column name | Data type | Value range | Description on Kaggle |\n| --- | --- | --- | --- |\n| Type | object | MU MOAA CIMU TOTALS | object MU museums, MOAA monuments and archeological parks, CIMU museum networks |\n| Year | int64 | 2015-2018 | int64 1996...2018 |\n| Month | object | Jan-Dec | object Jan...Dec |\n| Visitors_paying | int64 |  | int64 Visitors who paid admission |\n| Visitors_notpaying | int64 |  | int64 Visitors who did not pay admission |\n| Visitors_total | int64 |  | int64 Visitors_paying + Visitors_notpaying |\n| Euro | float64 |  | float64 amount |","286f5c18":"**table1.csv: Historical data by type**\n\n| Column name | Data type | Value range | Description on Kaggle |\n| --- | --- | --- | --- |\n| Type | int64 | MU, MOAA, CIMU | object MU museums, MOAA monuments and archeological parks, CIMU museum networks  | \n| Year | int64 | 1996-2018 | int64 1996...2018 |\n| Venues_paying | int64 |  |  int64 Venues usually requiring the payment of a ticket |\n| Venues_free | int64 |  | int64 Venues not requiring the payment of a ticket |\n| Venues_total | int64 |  | int64 Venues_paying + Venues_free |\n| Visitors_paying_paid | int64 |  | int64 Visitors to Venues_paying who paid a ticket |\n| Visitors_paying_notpaying | int64 |  | int64 Visitors to Venues_paying who did not pay a ticket |\n| Visitors_paying_total | int64 |  | int64 Visitors_paying_paid + Visitors_paying_notpaying |\n| Visitors_free | int64 |  | int64 Visitors to Venues_free |\n| Visitors_total | int64 |  | int64 Visitors_paying_total + Visitors_free |\n| Euro | float64 |  | float64 amount |","6780d00a":"# Italian Cultural Heritage Sample Data 2015-2018"}}