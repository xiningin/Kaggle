{"cell_type":{"53852587":"code","26996872":"code","e5122423":"code","e44811f9":"code","b55b26e3":"markdown"},"source":{"53852587":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n# Any results you write to the current directory are saved as output.","26996872":"from numpy import mat\n# \u7531\u4e8ekaggle\u65e0\u9884\u88c5gexf\uff0c\u56e0\u6b64\u6d89\u53cagexf\u64cd\u4f5c\u7684\u90fd\u8fdb\u884c\u4e86\u6ce8\u91ca\n# from gexf import Gexf\nimport networkx as nx","e5122423":"# \u8bfb\u53d6\u9493\u9c7c\u8282\u70b9\u7684\u4e00\u9636\u548c\u4e8c\u9636\u4ea4\u6613\u6570\u636e\uff0c\u6784\u6210gexf\u4e8c\u9636\u7f51\u7edc\u6f14\u793a\n\n# \u83b7\u53d6path\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5e26\u540e\u7f00\u7684\u6587\u4ef6\u540d\uff0c\u4fdd\u5b58\u5230list_name\u4e2d\ndef listDir(path, list_name):\n    # os.listdir\u80fd\u83b7\u53d6\u8def\u5f84\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u540d\u5b57\u4ee5\u53ca\u6240\u6709\u6587\u4ef6\u5939\u540d\u5b57\n    for oneFile in os.listdir(path):\n        list_name.append(oneFile)\n\n\n# \u83b7\u53d6path\u76ee\u5f55\u4e0b\u7684\u6307\u5b9a\u6587\u4ef6\u7684\u4e0d\u5e26\u540e\u7f00\u7684\u6587\u4ef6\u540d\uff0c\u4fdd\u5b58\u5230list_name\u4e2d\ndef listDoc(path, list_name):\n    # os.listdir\u80fd\u83b7\u53d6\u8def\u5f84\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u540d\u5b57\u4ee5\u53ca\u6240\u6709\u6587\u4ef6\u5939\u540d\u5b57\n    for file in os.listdir(path):\n        # \u8fd9\u91cc\u7b5b\u9009\u51fa\u6240\u6709.csv\u683c\u5f0f\u7684\u6587\u4ef6\n        # \u4f8b\u5982os.path.splitext(\"E:\\\\lena.jpg\")\u5c06\u5f97\u5230\"E:\\lena\"+\".jpg\"\u3002\n        if os.path.splitext(file)[1] == '.csv':\n            # \u53ea\u8981.csv\u524d\u9762\u7684\u90e8\u5206\n            list_name.append(os.path.splitext(file)[0])\n\n\ndef read():\n    listAddress = []\n    listDir('..\/input\/secondorder-transaction-network-of-phishing-nodes\/Phishing second-order nodes\/', listAddress)\n\n    # \u83b7\u53d6\u521d\u59cb\u9493\u9c7c\u8282\u70b9\u603b\u6570\u91cf\n    number = len(listAddress)\n    print(number)\n    nowNumber = 0\n\n    # \u53d6\u51fa\u6240\u6709\u5df2\u77e5\u7684\u521d\u59cb\u9493\u9c7c\u8282\u70b9\n    for address in listAddress:\n        # address = '0xfdA941855Fb2E89b1b6d806d8a105C8a17947281'\n        print('\u5f53\u524d\u5904\u7406\u7684\u539f\u59cb\u8282\u70b9\u4e3a: ' + address)\n\n        # \u83b7\u53d6\u6240\u6709\u4e00\u9636\u8282\u70b9\uff0c\u6253\u5f00\u6587\u4ef6\u5939\u5373\u53ef\n        listFirstOrderAddress = []\n        listDoc('..\/input\/secondorder-transaction-network-of-phishing-nodes\/Phishing second-order nodes\/' + address, listFirstOrderAddress)\n        # print('listFirstOrderAddress: ', listFirstOrderAddress)\n\n        # \u58f0\u660egexf\uff0c\u547d\u540d\u4e3a\u5f53\u524d\u7684address\uff0c\u56e0\u4e3agexf\u5b58\u50a8\u7684\u662f\u5f53\u524daddress\u7684\u4ea4\u6613\u7f51\u7edc\n        gexf = Gexf(address, \"A transaction network\")\n        # \u4e3agexf\u6dfb\u52a0\u56fe\n        graph = gexf.addGraph(\"directed\", \"static\", \"A transaction network\")\n        # \u4e3a\u56fe\u6dfb\u52a0\u8282\u70b9\u5c5e\u6027\n        atr1 = graph.addNodeAttribute('address', type='string', defaultValue=\"\")\n\n        # \u8be5\u53d8\u91cf\u8bb0\u5f55\u5f53\u524d\u7d22\u5f15\n        nowIndex = 0\n\n        oneList = [address.upper()]\n        # \u8be5\u53d8\u91cf\u4fdd\u5b58\u7f51\u683c\u4e2d\u6240\u6709\u7684\u8282\u70b9\uff0c\u7528\u4e8e\u67e5\u91cd\uff0c\u6240\u4ee5\u5168\u90e8\u8282\u70b9\u5927\u5199\u8868\u793a\n        allNodes = set(oneList)\n        # \u8be5\u53d8\u91cf\u4fdd\u5b58\u8282\u70b9\u53ca\u5728\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u5bf9\u5e94\u7684\u5e8f\u53f7\uff0c\u5e8f\u53f7\u4e5f\u662fgexf\u8282\u70b9\u7684\u5e8f\u53f7\n        oneDict = {address.upper(): nowIndex}\n        # \u6dfb\u52a0gexf\u7684\u8282\u70b9\n        tmp = graph.addNode(str(nowIndex), address)\n        tmp.addAttribute(atr1, address)\n        # \u5904\u7406\u5b8c\u7d22\u5f15\u52a0\u4e00\n        nowIndex += 1\n\n        # \u628a\u4e00\u9636\u8282\u70b9\u6dfb\u52a0\u8fdb\u6765\n        for firstOrderAddress in listFirstOrderAddress:\n            # \u4fdd\u5b58\u5728\u6587\u4ef6\u5939\u91cc\u7684\u80af\u5b9a\u662f\u53bb\u91cd\u8fc7\u7684\uff0c\u76f4\u63a5\u6dfb\u52a0\u5230set\u4e2d\n            allNodes.add(firstOrderAddress.upper())\n            # \u66f4\u65b0\u8282\u70b9\u5e8f\u53f7\n            oneDict.update({firstOrderAddress.upper(): nowIndex})\n            # \u6dfb\u52a0gexf\u7684\u8282\u70b9\n            tmp = graph.addNode(str(nowIndex), firstOrderAddress)\n            tmp.addAttribute(atr1, firstOrderAddress)\n            # \u5904\u7406\u5b8c\u7d22\u5f15\u52a0\u4e00\n            nowIndex += 1\n\n        print('\u4e00\u9636\u8282\u70b9\u6dfb\u52a0\u5b8c\u6bd5\uff01')\n\n        # \u6dfb\u52a0\u8282\u70b9\uff0c\u8282\u70b9\u5373\u4e3a\u5f53\u524daddress\u548c\u5176\u4ea4\u6613\u8282\u70b9\n        # \u628a\u4e00\u9636\u8282\u70b9\u7684\u4e00\u9636\u8282\u70b9\u4e5f\u5c31\u662f\u4e8c\u9636\u8282\u70b9\u6dfb\u52a0\u8fdb\u6765\n        for firstOrderAddress in listFirstOrderAddress:\n            # print('\u6dfb\u52a0' + firstOrderAddress + '\u7684\u4e8c\u9636\u8282\u70b9')\n            # \u83b7\u5f97\u8be5\u4e00\u9636\u8282\u70b9\u7684csv\u6587\u4ef6\u76ee\u5f55\n            tmpFile = '..\/input\/secondorder-transaction-network-of-phishing-nodes\/Phishing second-order nodes\/' + address + '\/' + firstOrderAddress + '.csv'\n            tmpF = open(tmpFile)\n\n            # \u5c06\u8be5csv\u6587\u4ef6\u6253\u5f00\uff0c\u4fdd\u5b58\u4e3adataframe\u683c\u5f0f\n            df = pd.read_csv(tmpF, index_col=0)\n            tmpF.close()\n\n            # \u83b7\u5f97\u5176\u6240\u6709\u4ea4\u6613\u4e2d\u7684\u8282\u70b9\u96c6\u5408\n            # \u6ce8\u610f\u8fd9\u91cc\u4e0d\u80fd\u7528\u52a0\u53f7\u5408\u5e76\uff0c\u56e0\u4e3a\u4f1a\u628aa\u548cb\u5408\u5e76\u6210ab\uff0c\u800c\u6211\u8981\u7684\u662fa,b\u2026\u2026\n            secondOrderNodes = df['From'].append(df['To'])\n\n            # \u7b5b\u9009\u6389\u91cd\u590d\u9879\uff0c\u56e0\u4e3a\u53ef\u80fd\u8ddf\u540c\u4e00\u4e2a\u4e00\u9636\u8282\u70b9\u6709\u591a\u6b21\u4ea4\u6613,first\u8868\u793a\u4fdd\u7559\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u91cd\u590d\u9879\n            secondOrderNodes = secondOrderNodes.drop_duplicates(keep='first')\n\n            # \u628a\u6240\u6709NAN\u53bb\u6389\uff0c\u6ce8\u610f\u8282\u70b9\u4e2d\u8fd8\u6709\u81ea\u8eab\u7684\u8282\u70b9\u6ca1\u53bb\u6389\uff0c\u7b49\u4e0b\u4f1a\u8fdb\u884c\u4e00\u6b21\u6700\u7ec8\u8fc7\u6ee4\n            secondOrderNodes = secondOrderNodes.dropna(axis=0, how='any')\n\n            # \u8f6c\u5316\u4e3alist\u5f62\u5f0f\uff0c\u83b7\u5f97\u4e8c\u9636\u8282\u70b9\u7684list\n            listSecondOrderAddress = secondOrderNodes.tolist()\n\n            # \u5bf9\u6bcf\u4e2a\u4e8c\u9636\u8282\u70b9\u8fdb\u884c\u5904\u7406\n            for secondOrderAddress in listSecondOrderAddress:\n                # \u5224\u65ad\u6dfb\u52a0\u540e\u7684\u957f\u5ea6\uff0c\u9632\u6b62\u8282\u70b9\u91cd\u590d\n                prevLen = len(allNodes)\n                allNodes.add(secondOrderAddress.upper())\n                nowLen = len(allNodes)\n\n                # allNodes\u4e3aset\uff0c\u5143\u7d20\u4e0d\u80fd\u91cd\u590d\uff0c\u5982\u679c\u63d2\u5165\u540e\u957f\u5ea6\u53d8\u957f\uff0c\u8868\u793a\u6210\u529f\u63d2\u5165\uff0c\u4e0d\u4e0e\u5df2\u6709\u8282\u70b9\u91cd\u590d\n                if nowLen > prevLen:\n                    # \u66f4\u65b0\u8282\u70b9\u5e8f\u53f7\n                    oneDict.update({secondOrderAddress.upper(): nowIndex})\n                    # \u6dfb\u52a0gexf\u7684\u8282\u70b9\n                    tmp = graph.addNode(str(nowIndex), secondOrderAddress)\n                    tmp.addAttribute(atr1, secondOrderAddress)\n                    # \u5904\u7406\u5b8c\u7d22\u5f15\u52a0\u4e00\n                    nowIndex += 1\n\n        print('\u4e8c\u9636\u8282\u70b9\u6dfb\u52a0\u5b8c\u6bd5\uff01')\n        # print('oneDict:', oneDict)\n        # print('allNodes:', allNodes)\n        # print('nowIndex:', nowIndex)\n        # print('listFirstOrderAddress:', listFirstOrderAddress)\n\n        # \u81f3\u6b64\uff0cgexf\u6587\u4ef6\u91cc\u603b\u5171\u8981\u6dfb\u52a0\u591a\u5c11\u8282\u70b9\u5df2\u7ecf\u7b97\u660e\u767d\u4e86\uff0c\u5c31\u662fnowIndex\u4e2a\uff0c\u5efa\u4e00\u4e2anowIndex\u00d7nowIndex\u7684\u77e9\u9635\uff0c\u7528\u4e8e\u4fdd\u5b58\u8fb9\u7684\u6743\u503c\u4fe1\u606f\n        oneMatrix = mat(np.zeros((nowIndex, nowIndex)))\n\n        # \u7740\u624b\u6536\u96c6\u8fb9\u7684\u6743\u503c\u4fe1\u606f\n        for firstOrderAddress in listFirstOrderAddress:\n            # print('\u6536\u96c6' + firstOrderAddress + '\u7684\u4e8c\u9636\u8282\u70b9\u4ea4\u6613\u6570\u636e')\n            tmpFile = '..\/input\/secondorder-transaction-network-of-phishing-nodes\/Phishing second-order nodes\/' + address + '\/' + firstOrderAddress + '.csv'\n            tmpF = open(tmpFile)\n            # \u5c06\u8be5csv\u6587\u4ef6\u6253\u5f00\uff0c\u4fdd\u5b58\u4e3adataframe\u683c\u5f0f\n            df = pd.read_csv(tmpF, index_col=0)\n            tmpF.close()\n\n            # \u9010\u884c\u8bfb\u53d6\u8bb0\u5f55\u4fdd\u5b58\u5230\u77e9\u9635\u4e2d\n            for oneIndex in df.index:\n                # \u53ea\u9700\u8981\u8bb0\u5f55\u4e09\u5217\u6570\u636e\uff0c\u4eceXX\u5230XX\u4ea4\u6613\u4e86XX\n                oneFrom = str(df.loc[oneIndex]['From']).upper()\n                oneTo = str(df.loc[oneIndex]['To']).upper()\n                oneValue = float(df.loc[oneIndex]['Value'])\n\n                # \u9700\u8981\u5224\u65ad\u662f\u5426\u5b58\u5728\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u8fd9\u4e2a\u8282\u70b9\u4e4b\u524d\u5728\u722c\u866b\u7684\u65f6\u5019\u88ab\u8fc7\u6ee4\u4e86\uff0c\u6240\u4ee5\u538b\u6839\u6ca1\u5bf9\u5e94\u7684csv\u6587\u4ef6\n                if oneFrom in oneDict and oneTo in oneDict:\n                    # \u627e\u5230\u8282\u70b9\u5e8f\u53f7\n                    oneFromIndex = oneDict[oneFrom]\n                    oneToIndex = oneDict[oneTo]\n                    oneMatrix[oneFromIndex, oneToIndex] += oneValue\n\n        print('\u4e8c\u9636\u8282\u70b9\u8fb9\u6743\u503c\u6536\u96c6\u5b8c\u6bd5')\n\n        # \u7ec8\u4e8e\u53ef\u4ee5\u5c06\u77e9\u9635\u91cc\u7684\u6570\u636e\u8f6c\u5316\u6210gexf\u7684\u8fb9\u6765\u6dfb\u52a0\u8fdb\u7f51\u7edc\u4e86\n        edgeIndex = 0\n        for i in range(nowIndex):\n            for j in range(nowIndex):\n                if oneMatrix[i, j] != 0.0:\n                    graph.addEdge(str(edgeIndex), str(i), str(j), weight=str(oneMatrix[i, j]))\n                    edgeIndex += 1\n\n        print('\u8fb9\u8f6c\u6362\u5b8c\u6bd5\uff0c\u6784\u5efa\u8282\u70b9\u7f51\u7edc\u5b8c\u6bd5\uff01')\n\n        # \u5199\u4e3agexf\u6587\u4ef6\n        output_file = open(\"..\/input\/secondorder-transaction-network-of-phishing-nodes\/phiGexfData\/\" + address + \".gexf\", \"wb\")\n        gexf.write(output_file)\n\n        # \u8ba1\u7b97\u8fd8\u5269\u4f59\u591a\u5c11\u8282\u70b9\u7f51\u7edc\u672a\u751f\u6210\n        nowNumber += 1\n        rest = number - nowNumber\n        print('\u4fdd\u5b58\u4e3agexf\u6587\u4ef6\u5b8c\u6bd5\uff0c\u5df2\u5b8c\u6210: ' + str(nowNumber) + '\u4e2a\uff0c\u8fd8\u5269' + str(rest) + '\u4e2a')\n        print('\u5df2\u5b8c\u6210\u8282\u70b9: ' + address)\n\n    # \u6bcf\u4e00\u4e2a\u8282\u70b9\u6240\u5bf9\u5e94\u7684\u7f51\u7edc\u5c06\u4ee5gexf\u7684\u5f62\u5f0f\u5b58\u653e\u5728\u5bf9\u5e94\u6587\u4ef6\u5939\u4e2d\n    # \u975e\u9493\u9c7c\u8282\u70b9\u90e8\u5206\u7684\u8bfb\u53d6\u8fc7\u7a0b\u4e00\u81f4\uff0c\u53ea\u9700\u628a\u5bf9\u5e94\u8def\u5f84\u4fee\u6539\u4e3a\u975e\u9493\u9c7c\u524d\u7f00\u6587\u4ef6\u5939\u5373\u53ef\n    # \u5982\u679c\u751f\u6210\u7684gexf\u6587\u4ef6\u65e0\u6cd5\u6b63\u5e38\u8bfb\u53d6\uff0c\u53ef\u80fd\u662fgexf\u7248\u672c\u6240\u9020\u6210\u7684gexf\u6807\u7b7e\u5185\u5bb9\u4e0d\u4e00\u81f4\u95ee\u9898","e44811f9":"# read()\naddress = '0xfdA941855Fb2E89b1b6d806d8a105C8a17947281'\n# graph = nx.read_gexf(filrdir + address + '.gexf')","b55b26e3":"Example"}}