{"cell_type":{"fd2dcef0":"code","68e728ae":"code","a99b31de":"code","796e7da9":"code","c80d2a42":"code","c0d5fece":"code","3a3b9513":"code","e2f078d6":"code","148f5d92":"code","f1146245":"code","5ba81ef2":"code","ff74c474":"code","8c48812e":"code","6b8b14f7":"code","29d070fa":"code","4affbb87":"code","b484e4ec":"markdown","dab24969":"markdown","e375ad57":"markdown","861c36c6":"markdown","3b0d131c":"markdown","4e5f008c":"markdown","46cb096e":"markdown","f11d9aa6":"markdown","67d1d586":"markdown","58c64238":"markdown","6145969d":"markdown","3de6b9e4":"markdown","b248acc2":"markdown","674f73de":"markdown","f38f5c33":"markdown"},"source":{"fd2dcef0":"import sklearn\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","68e728ae":"ROOT = \"..\/input\/\"\nTRAINFILE_PATH = ROOT + \"train.csv\"\nTESTFILE_PATH = ROOT + \"test.csv\"\nVALIDATION_PART = 0.1","a99b31de":"train = pd.read_csv(TRAINFILE_PATH)\ntest = pd.read_csv(TESTFILE_PATH)","796e7da9":"train.head(30)","c80d2a42":"def vis(dataframe):\n    for col in dataframe.drop([\"Price\"], axis=1):\n        fig, ax = plt.subplots()\n        ax.scatter(x = dataframe[col], y = dataframe['Price'])\n        plt.ylabel('Price', fontsize=13)\n        plt.xlabel(col, fontsize=13)\n        plt.show()","c0d5fece":"vis(train)","3a3b9513":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split","e2f078d6":"X = np.array(train.drop([\"Price\"], axis=1))\ny = np.array(train[\"Price\"])\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=VALIDATION_PART)","148f5d92":"model = LinearRegression()\nmodel.fit(X_train, y_train)","f1146245":"y_pred = model.predict(X_test)\ny_true = y_test","5ba81ef2":"rmse = ((((y_pred) - (y_true))**2).mean()) ** 0.5","ff74c474":"print(\"rmsle =\", rmse)","8c48812e":"def data_prepare(data):\n    data[\"RoomCount\"] = data[\"RoomCount\"].apply(lambda x: x \/ 2)\n    #<...> add smth more\n\ndata_prepare(train)\ndata_prepare(test)","6b8b14f7":"new_model = LinearRegression()\nX = np.array(train.drop([\"Price\"], axis=1))\ny = np.array(train[\"Price\"])\nnew_model.fit(X, y)","29d070fa":"commit = new_model.predict(np.array(test))","4affbb87":"f = open(\"res.csv\", \"wt\")\nf.write(\"Id,Price\\n\")\nid = 0\nfor price in commit:\n    f.write(str(id + 2018) + \",\" + str(price) + \"\\n\")\n    id += 1\nf.close()","b484e4ec":"Here we're going to import a populary lib - sklearn. In addition to it we're going to import such libs as numpy (to word with arrays) and pandas (to work with data)\n\nUse Ctrl+Enter to run current cell and Shift+Enter to run current cell and jump to next one.\\","dab24969":"Try one more time","e375ad57":"Now we're setting some constants","861c36c6":"Let's visualize correlation between each column and Price","3b0d131c":"Let's work out error of the model","4e5f008c":"We see, that the error is too big.","46cb096e":"$$\ny = f(x) = w_{1}x_{1} + w_{2}x_{2} + ... + w_{n}\n$$\nLet's try to fit LinearRegression","f11d9aa6":"The next step to do is to prepare data\n### Data Preparing","67d1d586":"Fit the model","58c64238":"# Predicting house prices with LinearRegression","6145969d":"Let's visualize it!","3de6b9e4":"Now, commit res.csv","b248acc2":"### Fitting LinearRegression","674f73de":"Predict it","f38f5c33":"Import X and y from train"}}