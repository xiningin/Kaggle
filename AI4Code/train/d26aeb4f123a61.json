{"cell_type":{"3f321869":"code","2623abb8":"code","d398f0bd":"code","3fa08d98":"code","00751fc3":"code","ddd2863c":"code","81ed0f00":"code","4d9225ea":"code","952d88ae":"code","fc889533":"code","1811107f":"code","319ed3dd":"code","4d02c9a5":"code","0122e116":"code","210d0e4c":"code","835daa44":"code","65b25edb":"code","e2c1e01d":"code","7989d2b5":"markdown","2c572e52":"markdown","a3155d48":"markdown","11111f94":"markdown","e8ea4aea":"markdown","1315bff5":"markdown","ee4e3bd8":"markdown","056ee0b0":"markdown","ef8971fc":"markdown","b9bc2754":"markdown","f0905672":"markdown","514e8ec4":"markdown","4d106f1d":"markdown"},"source":{"3f321869":"# Importa\u00e7\u00e3o das bibliotecas\nfrom plotnine import * # Biblioteca de visualiza\u00e7\u00e3o de dados\nfrom plotnine.data import diamonds # Conjunto de dados","2623abb8":"# Tipo dos dados\ntype(diamonds)","d398f0bd":"diamonds","3fa08d98":"# TODO: Veja os atributos que est\u00e3o dispon\u00edveis nos dados\n# Dica: Atributos, em Data Frames s\u00e3o equivalentes as colunas\n# pd.DataFrame.columns","00751fc3":"# TODO: Visualize as primeiras linhas do conjunto de dados\n# pd.DataFrame.head()","ddd2863c":"# TODO: Visualize a \u00faltima linha do conjunto de dados\n# pd.DataFrame.tail(n = ...)","81ed0f00":"# TODO: Fa\u00e7a as estat\u00edsticas b\u00e1sica dos dados\n# pd.DataFrame.describe()","4d9225ea":"# TODO: Selecione somente as colunas `price` e `carat`\n# diamonds[['...', '...']]","952d88ae":"# TODO: Selecione todos os atributo exceto `x`, `y` e `z`\n# diamonds[diamonds.columns.difference(['...', '...', '...'])]","fc889533":"# TODO: Filtre somente os diamantes que tenham valor maior que 1000 dolares\n# diamonds[diamonds['...'] > ...]","1811107f":"# TODO: Filtre somente os diamantes que tenham valor menor que a m\u00e9dia dos valores\n# diamonds[diamonds['...'] < diamonds['...'].mean()]","319ed3dd":"# TODO: Filtro somente os diamantes que tenham valor maior que a mediana e que tenham \n# corte igual a `Premium`\n# diamonds[(diamonds['...'] > diamonds['...'].median()) & (diamonds['...'] == '...')]","4d02c9a5":"# TODO: Crie um grupo com base no atributo `cut`.\n# grupo_1 = diamonds.groupby('...')","0122e116":"# TODO: Utilizando o grupo criado acima, fa\u00e7a a soma dos valores de cada grupo\n# grupo_1_soma = grupo_1.`FUNCAO_DE_AGREGACAO`()\n# grupo_1_soma['...']","210d0e4c":"# TODO: Crie um grupo com base no atributo `color`\n# grupo_2 = diamonds.groupby('...')","835daa44":"# TODO: No grupo criado acima, calcule a quantidade de elementos em cada grupo\n# grupo_2_count = grupo_2.count()","65b25edb":"# TODO: Visualize a rela\u00e7\u00e3o do peso (carat) com o valor (price). Para isto use a geometria de ponto\n# ggplot(diamonds, aes(x = '...', y = '...')) + geom_`NOME_DA_GEOMETRIA`()","e2c1e01d":"# TODO: Inserir cores no plot gerado acima, para facilitar a interpreta\u00e7\u00e3o dos dados\n# Os par\u00e2metros `cut` e `clarity` podem ser inseridos como `factor` no par\u00e2metro color, assim, \n# as cores s\u00e3o alteradas\n\n# ggplot(diamonds, aes(x = '...', y = '...', color='factor(...)')) + geom_`NOME_DA_GEOMETRIA`()","7989d2b5":"## 6. Visualiza\u00e7\u00e3o","2c572e52":"## 1. Importa\u00e7\u00e3o e visualiza\u00e7\u00e3o do conjunto de dados","a3155d48":"#### Qual grupo possui o maior valor agregado ?\nR: \n\n","11111f94":"## 3. Estat\u00edsticas b\u00e1sicas","e8ea4aea":"<br>\n### Perguntas\n\n#### 1. Qual o maior pre\u00e7o de diamante presente nos dados ?\nR: \n\n- **Dica**: Observe os resultados do m\u00e9todo `describe()`\n\n#### 2. Por que as colunas `color`, `cut` e `clarity` n\u00e3o apareceram na tabela do `describe` ?\nR: \n\n<br>","1315bff5":"## 4. Sele\u00e7\u00e3o e filtro","ee4e3bd8":"### Descri\u00e7\u00e3o dos dados\nDados descritivos de quase 54 mil diamantes.\n\n##### Atributos\n\n- **price**: Pre\u00e7o (USD);\n- **carat**: Peso do diamante;\n- **cut**: Qualidade do corte (Fair, Good, Very Good, Premium, Ideal);\n- **color**: Cor do diamante;\n- **clarity**: Qu\u00e3o claro \u00e9 o diamante (I1 (Pior), SI1, SI2, VS1, VS2, VVS1, VVS2, IF (Melhor))\n- **x**: Comprimento em `mm`;\n- **y**: Largura em `mm`\n- **z**: Profundidade em `mm`\n- **depth**: porcentagem total de profundidade (z \/ mean(x, y) = 2 * z \/ (x + y))\n- **table**: largura do topo do diamante em rela\u00e7\u00e3o ao ponto mais largo\n\n`OBS`: Para esta an\u00e1lise, nem todos os atributos ser\u00e3o utilizados.","056ee0b0":"## 2. Entendendo os dados","ef8971fc":"#### Qual grupo possui a maior quantidade de elementos ?\nR: \n\n- **Dica**: Utilize a fun\u00e7\u00e3o pd.DataFrame.max() para saber a coluna que possui o valor mais alto e facilitar a busca da resposta","b9bc2754":"<img src=\"https:\/\/suspicious-wescoff-e06084.netlify.app\/banner_notebook.png\"\/>\n\n# Lista de exerc\u00edcios de an\u00e1lise de dados com Python\n> *Uma grande jornada come\u00e7a com um pequeno passo*\n\n* Sum\u00e1rio:\n    * [Livro **Introdu\u00e7\u00e3o \u00e0 An\u00e1lise de Dados**](https:\/\/dataat.github.io\/introducao-analise-de-dados\/)\n    * [Lista de exerc\u00edcios de An\u00e1lise de Dados em R](https:\/\/www.kaggle.com\/phelpsmemo\/lista-atividades-ds-r-worcap2020)\n\nEste documento apresenta uma lista de exerc\u00edcios para a fixa\u00e7\u00e3o dos conceitos introdut\u00f3rios vistos no minicurso de introdu\u00e7\u00e3o \u00e0 Data Science utilizando R e Python. A ideia \u00e9 que voc\u00ea veja como essas ferramentas podem ser utilizadas com conjuntos de dados reais.\n\n**Nota sobre a forma de solu\u00e7\u00e3o dos exerc\u00edcios**: Os exerc\u00edcios apresentados abaixo seguem uma estrutura de `ToDo List`, nessa voc\u00ea tem algumas tarefas que precisa ir cumprindo para ver o resultado completo da an\u00e1lise e ir interpretando seus resultados. Em cada exerc\u00edcio j\u00e1 fica dispon\u00edvel um trecho do c\u00f3digo que voc\u00ea precisa para solucionar o problema, sendo necess\u00e1rio voc\u00ea completar os comandos. Por exemplo\n\nQuando houver `dados_queimadas[ ... ].sum()`, \u00e9 tido que os `...` precisam ser substituidos pelo valor correto, que faz o comando funcionar corretamente. Esse padr\u00e3o pode estar nas fun\u00e7\u00f5es, onde o mesmo padr\u00e3o \u00e9 seguido. `dados_queimadas[\"year\"].[...]`.\n","f0905672":"## 5. Agrupamento e agrega\u00e7\u00e3o","514e8ec4":"Ao importar o conjunto de dados `diamonds`, todos os m\u00e9todos necess\u00e1rios para a manipula\u00e7\u00e3o b\u00e1sica j\u00e1 estar\u00e3o dispon\u00edveis, uma vez que, como apresentado no curso, no pandas os m\u00e9todos ficam dispon\u00edveis dentro de seus tipos `pd.Series` e `pd.DataFrame`. No caso do `diamonds`, os dados s\u00e3o representados com um `pd.DataFrame`.","4d106f1d":"**Desafio**:  Fa\u00e7a os mesmos filtros utilizando o m\u00e9todo `pd.DataFrame.query`\n\n**Dica**: ```diamonds.query('price < price.mean()') ```"}}