{"cell_type":{"aee58079":"code","ef6eaaad":"code","1a01448d":"code","8ffbf8ad":"code","798c0708":"code","08232896":"code","21be2dff":"code","63be4d31":"code","fd3be7ce":"code","2197157e":"code","b4360a56":"code","5e29beb5":"code","879d6eb6":"markdown","6e543e90":"markdown","657ba8f2":"markdown","7a8cd1e3":"markdown","fb18f1c4":"markdown","c01407da":"markdown"},"source":{"aee58079":"!pip install -U fedot","ef6eaaad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1a01448d":"import warnings\nwarnings.filterwarnings(\"ignore\")","8ffbf8ad":"import matplotlib.pyplot as plt","798c0708":"from fedot.core.data.data import InputData\nfrom fedot.core.data.data_split import train_test_data_setup\nfrom fedot.core.repository.dataset_types import DataTypesEnum\nfrom fedot.core.repository.tasks import Task, TaskTypesEnum, TsForecastingParams\nfrom fedot.api.main import Fedot","08232896":"forecast_length = 1\ntask_parameters = TsForecastingParams(forecast_length=forecast_length)\n\ntask = Task(TaskTypesEnum.ts_forecasting,\n            task_parameters)\n\nfile_path = \"..\/input\/tr-src-accii-53\/d_close.csv\"\n\ninput_data = InputData.from_csv_time_series(task, file_path, target_column='AFLT.ME')\n\n# train_input, predict_input = train_test_data_setup(input_data)","21be2dff":"model = Fedot(problem='ts_forecasting', task_params=task_parameters, timeout=60.0)\npipeline = model.fit(features=input_data)","63be4d31":"pipeline.show()","fd3be7ce":"plt.plot(model.history.all_historical_quality)","2197157e":"input_data","b4360a56":"# model.plot_prediction()","5e29beb5":"model.forecast(input_data)","879d6eb6":"# \u0418\u043d\u0441\u0442\u0430\u043b\u043b\u044f\u0446\u0438\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a","6e543e90":"# \u041f\u0440\u043e\u0433\u043d\u043e\u0437 \u043d\u0430 \u0437\u0430\u0432\u0442\u0440\u0430","657ba8f2":"# \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a","7a8cd1e3":"# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438","fb18f1c4":"# \u041a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u043e\u0434\u0435\u043b\u0438","c01407da":"# \u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438"}}