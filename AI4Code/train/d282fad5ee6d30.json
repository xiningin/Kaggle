{"cell_type":{"59dac6b0":"code","f48090d9":"code","5dba0554":"code","003f05f4":"code","39dd8e41":"code","eb87d7ec":"markdown","aa8a3438":"markdown","9cca3f2c":"markdown","ff0d1f04":"markdown","a8c00950":"markdown"},"source":{"59dac6b0":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.simplefilter(\"ignore\")\nimport os\nimport keras\nfrom numpy.random import seed\nseed(1)\nfrom tensorflow import set_random_seed\nset_random_seed(2)\n#print(os.listdir(\"..\/input\"))\n\ntrain=pd.read_csv(\"..\/input\/train.csv\")\ntest=pd.read_csv(\"..\/input\/test.csv\")\n","f48090d9":"fig,ax=plt.subplots(figsize = [7, 5])\nplt.hist(train['age'], color = 'b');","5dba0554":"sns.pairplot(train,hue='target',vars=['age','trestbps', 'cp', 'thalach','chol'], kind=\"scatter\",\n             palette = {0:\"red\",1:\"green\"}, size=2.5);","003f05f4":"from keras import Sequential\nfrom keras.utils import plot_model\nfrom keras.layers import *\nfrom keras.activations import *\nfrom keras.losses import binary_crossentropy,categorical_hinge\n\nmodel=Sequential()\n\n\nfeatures=[\"age\",\"thalach\",\"trestbps\"] #features die f\u00fcr das neuronale Netz verwendet werden\nk=len(features) #Anzahl der verwendeten Features -> wird f\u00fcr die erste Schicht des Netzes gebraucht \n\nmodel.add(Dense(units = 6, activation=\"relu\", input_shape=(k,))) \n\nmodel.add(Dense(units = 1,  kernel_initializer = 'uniform', activation = 'sigmoid')) \n# die letzte Schicht des Netzes muss einen Outputknoten haben, damit das Netz die Target-Werte vorhersagt\n\nmodel.compile(\"adam\",loss=binary_crossentropy,metrics=[\"accuracy\"])\nhist=model.fit(x=train[features],y=train[\"target\"],batch_size=32,epochs=40, verbose=0);\n\nplt.plot(hist.history[\"acc\"]);\nplt.xlabel(\"Anzahl der Optimierungen\");\nplt.ylabel(\"Accuracy\");","39dd8e41":"prediction_test = model.predict_classes(test[features])\nsubmission = pd.DataFrame(prediction_test,columns=[\"target\"])\nsubmission[\"ID\"]=range(1,54)\nsubmission.set_index(\"ID\").to_csv(\"submission.csv\")","eb87d7ec":"**Grundger\u00fcst f\u00fcr euer neuronales Netzwerk**\n\nIn Kernels k\u00f6nnen Blocks von Code sukzessiv ausgef\u00fchrt und der Output direkt angezeigt werden. Au\u00dferdem k\u00f6nnt ihr eure Vorhersagen direkt zur Challenge hochladen und sehen, wie gut euer Model auf den Testdaten funktioniert.\nIn diesem Kernel haben wir ein Grundger\u00fcst f\u00fcr ein neuronales Netz vorbereitet, das ihr gleich tunen und verbessern k\u00f6nnt. Zun\u00e4chst werden wir uns aber die vorliegenden Daten genauer anschauen, um eine \u00dcbersicht zu bekommen und zu erkennen, welche Features der Patienten einen hohen Einfluss auf das Vorliegen einer Herzkrankheit haben.","aa8a3438":"Zun\u00e4chst schauen wir uns die Altersverteilung der Patienten an:","9cca3f2c":"**Euer Einsatz!**\n\nIm Code unten haben wir das Grundger\u00fcst f\u00fcr ein neuronales Netz angelegt. Eure Aufgabe ist es, die Parameter des Netzes so anzupassen, dass es eine gute Vorhersage f\u00fcr das Vorliegen einer Herzkrankheit liefert. \nDie folgenden Parameter k\u00f6nnten dabei interessant sein:\n* die verwendeten **Features**: welche Eigenschaften im Datensatz k\u00f6nnten eine besonders hohe Diagnosekraft haben? Achtung: Mehr Features hinzuzuf\u00fcgen bedeutet nicht automatisch bessere Vorhersagen!\n* die **Anzahl der Knotenpunkten** (units) pro Schicht: je mehr Knoten eine Schicht hat, umso breiter wird es. Mehr Knoten f\u00fchren aber auch zu einer h\u00f6hren Komplexit\u00e4t im Netz, denn jeder Knoten wird an die Trainingsdaten angepasst!\n* die **Anzahl und Art der verwendeten Schichten**: Neue hidden layer k\u00f6nnt ihr zwischen dem Input- und Outputlayer hinzuf\u00fcgen. \n* die verwendeten **Aktivierungsfunktionen**\n* die **Initialisierung der Gewichte**: der Parameter kernel_initializer legt die Startgewichte f\u00fcr das Netz fest. \"uniform\" f\u00fchrt zum Beispiel zu einer Gleichverteilung\n* die **Anzahl der Optimierungen** (epochs): je \u00f6fter die Gewichte des Netzes optmiert werden, umso genauer werden sie auf die Trainingsdaten angepasst.","ff0d1f04":"Wenn ihr mit eurem Modell zufrieden seid, k\u00f6nnt ihr es mit diesen letzten Zeilen auf die Testdaten anwenden und eure Ergebnisse auf das Leaderboard bringen!","a8c00950":"Offensichtlich werden vor allem \u00e4ltere Menschen mit Herzproblemen ins Krankenhaus eingeliefert. Aber l\u00e4sst sich das Alter auch gut nutzen, um eine Herzkrankheit zu identfizieren? Daf\u00fcr betrachten wir im folgenden Plot die Auspr\u00e4gungen mehrerer Eigenschaften der Patienten und f\u00e4rben bei einer diagnostizierten Krankheit die Punkte gr\u00fcn, die anderen rot."}}