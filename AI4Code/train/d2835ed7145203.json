{"cell_type":{"8d33b0a8":"code","4be7ccd3":"code","e67ba08d":"code","f49c90f9":"code","b127ec23":"code","f67c37b2":"code","ddca8efd":"code","16c5d028":"code","a481e274":"code","d0886c82":"code","c4bff35c":"code","0522651a":"code","a776dbfc":"code","6f30f093":"code","4e8863ba":"code","b3f0775c":"code","bab8779b":"code","49c5f836":"code","462f332f":"code","074fe40a":"code","6bf49c52":"code","868b802b":"code","73610980":"code","15f3e87b":"code","1e0921cd":"code","4e9ff397":"code","93512156":"code","8a1be4d8":"code","3c447c5f":"code","72fe0bd3":"code","533f42d0":"code","751fcd78":"code","8e62c7e8":"code","58dfd608":"code","840ee640":"code","c6ece5fb":"code","b926ff2b":"code","7f030b72":"code","5a7c260d":"code","d3387fc1":"code","372c1803":"code","d9bb6f84":"code","4f98d12a":"code","ce78bbed":"code","fc6b0981":"code","aebe4810":"code","72d77a84":"code","036aabcd":"code","3a2aa4c0":"code","b487fd92":"code","f6896488":"code","b0129bab":"code","dcf9bc4e":"markdown","f6bd1792":"markdown","ad26845b":"markdown","e94d09b7":"markdown","06c99d2f":"markdown","59dcabb5":"markdown","bf7ccb6e":"markdown","e8bf67fc":"markdown","177378bb":"markdown","5008fdbe":"markdown","7dac369e":"markdown","26808dde":"markdown","229b6d31":"markdown","7fb7afc8":"markdown","99ed8105":"markdown","bc3cd031":"markdown","872e36f5":"markdown","2fc76fa2":"markdown","c1378db9":"markdown","27d83054":"markdown","e530430b":"markdown","3c5062d3":"markdown"},"source":{"8d33b0a8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4be7ccd3":"pd.set_option('display.max_columns', 500)\npd.set_option(\"display.max_rows\", 10000)\nnp.warnings.filterwarnings('ignore')","e67ba08d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.utils import resample\nfrom sklearn.linear_model import RidgeCV, LassoCV, Ridge, Lasso\nfrom sklearn import preprocessing\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nfrom sklearn.metrics import roc_auc_score, roc_curve, classification_report,\\\n                            accuracy_score, confusion_matrix, auc\nfrom sklearn.tree import DecisionTreeClassifier,export_graphviz","f49c90f9":"def plot_roc_curve(y_true, y_score, figsize=(10,6)):\n    fpr, tpr, _ = roc_curve(y_true, y_score)\n    plt.figure(figsize=figsize)\n    auc_value = roc_auc_score(y_true, y_score)\n    plt.plot(fpr, tpr, color='orange', label='ROC curve (area = %0.2f)' % auc_value)\n    plt.plot([0, 1], [0, 1], color='darkblue', linestyle='--')\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title('Receiver Operating Characteristic (ROC) Curve')\n    plt.legend()\n    plt.show()","b127ec23":"student_mat = pd.read_csv('..\/input\/student-alcohol-consumption\/student-mat.csv') \nstudent_por = pd.read_csv('..\/input\/student-alcohol-consumption\/student-por.csv') \n","f67c37b2":"student_por['count'] = 1","ddca8efd":"len(student_por)","16c5d028":"student_por.head()","a481e274":"student_por.columns","d0886c82":"student_por['n_consumo_medio'] = round((student_por['Dalc'] + student_por['Walc'])\/2)\nstudent_por['tag_consumo_medio'] = np.where(student_por['n_consumo_medio'] >= 3, 1, 0)","c4bff35c":"print(student_por['tag_consumo_medio'].value_counts(normalize=True))\nprint(student_por['tag_consumo_medio'].value_counts())","0522651a":"tab = pd.pivot_table(student_por, values='count', columns='tag_consumo_medio', aggfunc='sum').T\nplt.bar(tab.index, 'count', width=0.8, bottom=None, align='center', data=tab)\nplt.title('Consumo m\u00e9dio')\nplt.xticks(tab.index)","a776dbfc":"student_por.columns","6f30f093":"i = 'school'\ntab = pd.pivot_table(student_por, values='count', columns=i, aggfunc='count').T\nplt.bar(tab.index, 'count', width=0.8, bottom=None, align='center', data=tab)\nplt.title(i)","4e8863ba":"le = preprocessing.LabelEncoder()\nle.fit(student_por['school'])\nstudent_por['school_dum'] = le.transform(student_por['school'])\n\ndummies_canal = pd.get_dummies(student_por['school_dum']).rename(columns=lambda x: 'school_' + str(x))\nstudent_por = pd.concat([student_por, dummies_canal], axis=1)\nstudent_por.head()","b3f0775c":"i = 'famrel'\ntab = pd.pivot_table(student_por, values='count', columns=i, aggfunc='count').T\n\nplt.figure(figsize=(7,5))\nplt.bar(tab.index, 'count', width=0.8, bottom=None, align='center', data=tab)\nplt.title(i)\n\nle = preprocessing.LabelEncoder()\nle.fit(student_por['famrel'])\nstudent_por['famrel_dum'] = le.transform(student_por['famrel'])\n\ndummies_canal = pd.get_dummies(student_por['famrel_dum']).rename(columns=lambda x: 'famrel_' + str(x))\nstudent_por = pd.concat([student_por, dummies_canal], axis=1)","bab8779b":"i = 'freetime'\ntab = pd.pivot_table(student_por, values='count', columns=i, aggfunc='count').T\n\nplt.figure(figsize=(7,5))\nplt.bar(tab.index, 'count', width=0.8, bottom=None, align='center', data=tab)\nplt.title(i)\n\nle = preprocessing.LabelEncoder()\nle.fit(student_por['freetime'])\nstudent_por['freetime_dum'] = le.transform(student_por['freetime'])\n\ndummies_canal = pd.get_dummies(student_por['freetime_dum']).rename(columns=lambda x: 'freetime_' + str(x))\nprint(dummies_canal.columns)\nstudent_por = pd.concat([student_por, dummies_canal], axis=1)","49c5f836":"i = 'goout'\ntab = pd.pivot_table(student_por, values='count', columns=i, aggfunc='count').T\n\nplt.figure(figsize=(7,5))\nplt.bar(tab.index, 'count', width=0.8, bottom=None, align='center', data=tab)\nplt.title(i)\n\nle = preprocessing.LabelEncoder()\nle.fit(student_por['goout'])\nstudent_por['goout_dum'] = le.transform(student_por['goout'])\n\ndummies_canal = pd.get_dummies(student_por['goout_dum']).rename(columns=lambda x: 'goout_' + str(x))\nprint(dummies_canal.columns)\nstudent_por = pd.concat([student_por, dummies_canal], axis=1)","462f332f":"i = 'higher'\ntab = pd.pivot_table(student_por, values='count', columns=i, aggfunc='count').T\n\nplt.figure(figsize=(7,5))\nplt.bar(tab.index, 'count', width=0.8, bottom=None, align='center', data=tab)\nplt.title(i)\n\nle = preprocessing.LabelEncoder()\nle.fit(student_por['higher'])\nstudent_por['higher_dum'] = le.transform(student_por['higher'])\n\ndummies_canal = pd.get_dummies(student_por['higher_dum']).rename(columns=lambda x: 'higher_' + str(x))\nprint(dummies_canal.columns)\nstudent_por = pd.concat([student_por, dummies_canal], axis=1)","074fe40a":"i = 'paid'\ntab = pd.pivot_table(student_por, values='count', columns=i, aggfunc='count').T\n\nplt.figure(figsize=(7,5))\nplt.bar(tab.index, 'count', width=0.8, bottom=None, align='center', data=tab)\nplt.title(i)\n\nle = preprocessing.LabelEncoder()\nle.fit(student_por['paid'])\nstudent_por['paid_dum'] = le.transform(student_por['paid'])\n\ndummies_canal = pd.get_dummies(student_por['paid_dum']).rename(columns=lambda x: 'paid_' + str(x))\nprint(dummies_canal.columns)\nstudent_por = pd.concat([student_por, dummies_canal], axis=1)","6bf49c52":"i = 'internet'\ntab = pd.pivot_table(student_por, values='count', columns=i, aggfunc='count').T\n\nplt.figure(figsize=(7,5))\nplt.bar(tab.index, 'count', width=0.8, bottom=None, align='center', data=tab)\nplt.title(i)\n\nle = preprocessing.LabelEncoder()\nle.fit(student_por['internet'])\nstudent_por['internet_dum'] = le.transform(student_por['internet'])\n\ndummies_canal = pd.get_dummies(student_por['internet_dum']).rename(columns=lambda x: 'internet_' + str(x))\nprint(dummies_canal.columns)\nstudent_por = pd.concat([student_por, dummies_canal], axis=1)","868b802b":"y = student_por['tag_consumo_medio']\nx_var = student_por[['school_0','school_1','famrel_0','famrel_1','famrel_2','famrel_3','famrel_4',\n                    'goout_0', 'goout_1', 'goout_2', 'goout_3', 'goout_4','internet_0', 'internet_1']]","73610980":"X_train, X_test, y_train, y_test = train_test_split(x_var, y, test_size=0.30, random_state=27)","15f3e87b":"print(y_train.value_counts())\nprint(y_test.value_counts())","1e0921cd":"df_train = pd.concat([X_train, y_train], axis=1)\n\ndf_majority_train_group = df_train[df_train['tag_consumo_medio']==0]\ndf_minority_train_group = df_train[df_train['tag_consumo_medio']==1]\n \ndf_majority_downsampled_train_group = resample(df_majority_train_group, replace=False, n_samples=len(df_minority_train_group),random_state=1234) \n\ndf_downsampled_train_group = pd.concat([df_majority_downsampled_train_group, df_minority_train_group])\n \ndf_downsampled_train_group['tag_consumo_medio'].value_counts()","4e9ff397":"df_test = pd.concat([X_test, y_test], axis=1)\n\ndf_majority_test_nogroup = df_test[df_test['tag_consumo_medio']==0]\ndf_minority_test_nogroup = df_test[df_test['tag_consumo_medio']==1]\n \ndf_majority_downsampled_test_nogroup = resample(df_majority_test_nogroup, replace=False, n_samples=len(df_minority_test_nogroup),random_state=1234) \n\ndf_downsampled_test_nogroup = pd.concat([df_majority_downsampled_test_nogroup, df_minority_test_nogroup])\n \ndf_downsampled_test_nogroup['tag_consumo_medio'].value_counts()","93512156":"df_downsampled_train_group.columns","8a1be4d8":"x_treino = df_downsampled_train_group[['school_0','school_1','famrel_0','famrel_1','famrel_2','famrel_3','famrel_4',\n                    'goout_0', 'goout_1', 'goout_2', 'goout_3', 'goout_4','internet_0', 'internet_1']]\ny_treino = df_downsampled_train_group['tag_consumo_medio']","3c447c5f":"x_teste = df_downsampled_test_nogroup[['school_0','school_1','famrel_0','famrel_1','famrel_2','famrel_3','famrel_4',\n                    'goout_0', 'goout_1', 'goout_2', 'goout_3', 'goout_4','internet_0', 'internet_1']]\ny_teste = df_downsampled_test_nogroup['tag_consumo_medio']","72fe0bd3":"reg = LassoCV()\nreg.fit(x_var, y)\nprint(\"Best alpha using built-in LassoCV: %f\" % reg.alpha_)\nprint(\"Best score using built-in LassoCV: %f\" %reg.score(x_var,y))\ncoef = pd.Series(reg.coef_, index = x_var.columns)","533f42d0":"print(\"Lasso picked \" + str(sum(coef != 0)) + \" variables and eliminated the other \" +  str(sum(coef == 0)) + \" variables\")","751fcd78":"imp_coef = coef.sort_values()\nimport matplotlib\nmatplotlib.rcParams['figure.figsize'] = (8.0, 10.0)\nimp_coef.plot(kind = \"barh\")\nplt.title(\"Sele\u00e7\u00e3o de vari\u00e1veis usando Regress\u00e3o LASSO - Vari\u00e1veis dummies\")","8e62c7e8":"var_retirar = ['internet_0', 'internet_1']\nx_treino.drop(columns=var_retirar,inplace=True)\nx_teste.drop(columns=var_retirar,inplace=True)","58dfd608":"len(x_treino.columns)","840ee640":"modelo_logistic = LogisticRegression(penalty='none', solver='newton-cg')\nmodelo_logistic.fit(x_treino, y_treino)\ny_treino_pred = modelo_logistic.predict(x_treino)","c6ece5fb":"confusion_matrix(y_treino, y_treino_pred)","b926ff2b":"acuracia_logistica_train = accuracy_score(y_treino, y_treino_pred)\nprint('O modelo obteve %0.4f de acur\u00e1cia.' % acuracia_logistica_train)","7f030b72":"roc_logistic_train = roc_auc_score(y_treino, y_treino_pred)\nprint('AUC: %0.2f' % roc_auc_score(y_treino, y_treino_pred))\nplot_roc_curve(y_treino, y_treino_pred)","5a7c260d":"modelo_logistic = LogisticRegression(penalty='none', solver='newton-cg')\nmodelo_logistic.fit(x_teste, y_teste)\ny_teste_pred = modelo_logistic.predict(x_teste)","d3387fc1":"confusion_matrix(y_teste, y_teste_pred)","372c1803":"acuracia_logistica_train = accuracy_score(y_teste, y_teste_pred)\nprint('O modelo obteve %0.4f de acur\u00e1cia.' % acuracia_logistica_train)","d9bb6f84":"roc_logistic_train = roc_auc_score(y_teste, y_teste_pred)\nprint('AUC: %0.2f' % roc_auc_score(y_teste, y_teste_pred))\nplot_roc_curve(y_teste, y_teste_pred)","4f98d12a":"len(y_teste)","ce78bbed":"modelo_tree = DecisionTreeClassifier()\nmodelo_tree = modelo_tree.fit(x_treino,y_treino)\ny_treino_pred = modelo_tree.predict(x_treino)","fc6b0981":"confusion_matrix(y_treino, y_treino_pred)","aebe4810":"acuracia_logistica_train = accuracy_score(y_treino, y_treino_pred)\nprint('O modelo obteve %0.4f de acur\u00e1cia.' % acuracia_logistica_train)","72d77a84":"roc_logistic_train = roc_auc_score(y_treino, y_treino_pred)\nprint('AUC: %0.2f' % roc_auc_score(y_treino, y_treino_pred))\nplot_roc_curve(y_treino, y_treino_pred)","036aabcd":"modelo_tree.feature_importances_","3a2aa4c0":"for feature,importancia in zip(x_treino.columns,modelo_tree.feature_importances_):\n    print(\"{}:{}\".format(feature, importancia))","b487fd92":"clf = DecisionTreeClassifier()\nclf = clf.fit(x_teste,y_teste)\ny_teste_pred = clf.predict(x_teste)\n\nconfusion_matrix(y_teste, y_teste_pred)","f6896488":"acuracia_logistica_train = accuracy_score(y_teste, y_teste_pred)\nprint('O modelo obteve %0.4f de acur\u00e1cia.' % acuracia_logistica_train)","b0129bab":"roc_logistic_train = roc_auc_score(y_teste, y_teste_pred)\nprint('AUC: %0.2f' % roc_auc_score(y_teste, y_teste_pred))\nplot_roc_curve(y_teste, y_teste_pred)","dcf9bc4e":"### \u00c1rvore de Decis\u00e3o","f6bd1792":"internet","ad26845b":"* #### famrel","e94d09b7":"### Pacotes necess\u00e1rios:","06c99d2f":"# EDA","59dcabb5":"# **1. AMOSTRA E BALANCEAMENTO**","bf7ccb6e":"# Importar a base","e8bf67fc":"freetime","177378bb":"Vari\u00e1veis selecionadas","5008fdbe":"Treino","7dac369e":"Teste","26808dde":"goout","229b6d31":"Teste","7fb7afc8":"Treino","99ed8105":"* #### school","bc3cd031":"* **Vari\u00e1vel target**\n\nAs vari\u00e1veis Dalc mede de 1 a 5 o consumo de alcool durante a semana e a vari\u00e1vel Walc mede o consumo de alcool no fim de semana. Foi feito a m\u00e9dia das duas vari\u00e1veis resumindo na vari\u00e1vel n_consumo_medio, depois foi considerado como \"alto consumo\" quando esse consumo m\u00e9dio tivesse o valor de 4 ou mais.","872e36f5":"higher","2fc76fa2":"# **MODELAGEM**","c1378db9":"# Configura\u00e7\u00f5es iniciais","27d83054":"### Regress\u00e3o Log\u00edstica","e530430b":"paid","3c5062d3":"**1. SELE\u00c7\u00c3O DE VARI\u00c1VEIS**"}}