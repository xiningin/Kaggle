{"cell_type":{"0bbd4519":"code","314b1189":"code","b34c6917":"code","6e8db047":"code","525e5611":"code","78003b6c":"code","27620c83":"code","aca33ff8":"markdown","7b14dc78":"markdown","16c08c12":"markdown","8ec8494f":"markdown","e7a5aaf1":"markdown","d352449a":"markdown","e67fdd78":"markdown","32f38fde":"markdown","f94e206b":"markdown","ac4523b5":"markdown"},"source":{"0bbd4519":"import pandas as pd\nimport seaborn as sns\nfrom learntools.advanced_pandas.data_types_missing_data import *\n\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option('max_rows', 5)","314b1189":"check_q1(pd.DataFrame())","b34c6917":"check_q1(reviews['points'].dtype)","6e8db047":"check_q2(reviews.price.astype('str'))","525e5611":"check_q3(reviews.price.isnull())","78003b6c":"check_q4(reviews.region_1.fillna('Unknown').value_counts())","27620c83":"columns = reviews.columns\nsums = []\nfor col in columns:\n    sums.append(reviews[col].isnull().sum())\nser = pd.Series(sums, index=columns)\ncheck_q5(ser)","aca33ff8":"Here are a few visual exercises on missing data.\n\n**Exercise 3**: Some wines do not list a price. How often does this occur? Generate a `Series`that, for each review in the dataset, states whether the wine reviewed has a null `price`.","7b14dc78":"# Data types and missing data workbook\n\n## Introduction\n\nThis is the workbook component of the \"Data types and missing data\" section of the tutorial.\n\n# Relevant Resources\n- [Data Types and Missing Data Reference](https:\/\/www.kaggle.com\/residentmario\/data-types-and-missing-data-reference)\n\n# Set Up\n\nRun the following cell to load your data and some utility functions","16c08c12":"**Exercise 1**: What is the data type of the `points` column in the dataset?","8ec8494f":"# Checking Answers\n\n**Check your answers in each exercise using the  `check_qN` function** (replacing `N` with the number of the exercise). For example here's how you would check an incorrect answer to exercise 1:","e7a5aaf1":"If you get stuck, **use the `answer_qN` function to see the code with the correct answer.**\n\nFor the first set of questions, running the `check_qN` on the correct answer returns `True`.\n\nFor the second set of questions, using this function to check a correct answer will present an informative graph!","d352449a":"# Exercises","e67fdd78":"**Exercise 2**: Create a `Series` from entries in the `price` column, but convert the entries to strings. Hint: strings are `str` in native Python.","32f38fde":"**Exercise 4**: What are the most common wine-producing regions? Create a `Series` counting the number of times each value occurs in the `region_1` field. This field is often missing data, so replace missing values with `Unknown`. Sort in descending order.  Your output should look something like this:\n\n```\nUnknown                    21247\nNapa Valley                 4480\n                           ...  \nBardolino Superiore            1\nPrimitivo del Tarantino        1\nName: region_1, Length: 1230, dtype: int64\n```","f94e206b":"**Exercise 5**: A neat property of boolean data types, like the ones created by the `isnull()` method, is that `False` gets treated as 0 and `True` as 1 when performing math on the values. Thus, the `sum()` of a list of boolean values will return how many times `True` appears in that list.\nCreate a `pandas` `Series` showing how many times each of the columns in the dataset contains null values. Your result should look something like this:\n\n```\ncountry        63\ndescription     0\n               ..\nvariety         1\nwinery          0\nLength: 13, dtype: int64\n```\n\nHint: write a map that will extract the vintage of each wine in the dataset. The vintages reviewed range from 2000 to 2017, no earlier or later. Use `fillna` to impute the missing values.","ac4523b5":"# Keep going\nMove on to the [**Renaming and combining workbook**](https:\/\/www.kaggle.com\/kernels\/fork\/598826)"}}