{"cell_type":{"b00c1efc":"code","98fb3760":"code","60d90fce":"code","52eb1808":"code","f1509c7b":"code","f0c3967c":"code","1f1146a6":"code","04c1159d":"code","2d0bb8e6":"code","b6dcd387":"code","bd1b07de":"code","7dcfa29c":"code","ead47873":"code","1ec8bfa9":"code","14a2fadb":"code","b1de386d":"code","6dd199ea":"code","030aa1bc":"code","b1cb5aa2":"code","fbe249ac":"code","f28f15c6":"code","e5c0c72b":"code","5858e555":"code","88b678ed":"code","d40aa3d3":"code","de000ec7":"code","bff81300":"code","8733cbc0":"code","9d56a407":"code","1df730f0":"code","433aa1ed":"code","29820e41":"code","9de56b89":"code","723ab301":"code","b1cda11a":"markdown","ea50c1e0":"markdown","b46a69bf":"markdown","0274225b":"markdown","a700cde8":"markdown","69214fe3":"markdown","758797ea":"markdown","b57e6b81":"markdown","32ff06ef":"markdown","468d2511":"markdown","eabd9113":"markdown","ce767f78":"markdown","448ccda0":"markdown","cdb50919":"markdown","c742a9bf":"markdown","6bd7a885":"markdown","0d22c334":"markdown","eb8834a7":"markdown","ea9ebad4":"markdown","0d4dbb20":"markdown"},"source":{"b00c1efc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","98fb3760":"train = pd.read_json('\/kaggle\/input\/two-sigma-connect-rental-listing-inquiries\/train.json.zip')\ntrain.head()","60d90fce":"test = pd.read_json('\/kaggle\/input\/two-sigma-connect-rental-listing-inquiries\/test.json.zip')\ntest.head()","52eb1808":"train.shape","f1509c7b":"train.columns","f0c3967c":"train.describe()","1f1146a6":"train.dtypes","04c1159d":"train['interest_level'].unique()","2d0bb8e6":"train.dtypes","b6dcd387":"train.drop(['features','photos'],1).nunique()","bd1b07de":"import matplotlib.pyplot as plt \nimport seaborn as sns\n\nplt.figure(figsize=(10,8))\nsns.boxplot(train['interest_level'],train['bedrooms'])","7dcfa29c":"train['bedrooms'].nunique()","ead47873":"train['bathrooms'].nunique()","1ec8bfa9":"figure, (a,b) = plt.subplots(nrows= 2)\nfigure.set_size_inches(10,15)\nsns.countplot(train['bedrooms'],ax=a)\nsns.countplot(train['bathrooms'],ax=b)","14a2fadb":"plt.figure(figsize=(10,8))\nsns.countplot(train['bedrooms'],hue=train['interest_level'])","b1de386d":"train.groupby('interest_level')['building_id'].count() \n# Since 'low' has the most values, it is natural that low has the highest shape\n","6dd199ea":"plt.figure(figsize=(10,8))\nsns.countplot(train['bathrooms'],hue=train['interest_level'])","030aa1bc":"train['created'] = train['created'].astype('datetime64')\ntrain['day'] = train['created'].dt.day\ntrain['month'] = train['created'].dt.month\ntrain['year'] = train['created'].dt.year","b1cb5aa2":"train['month'].unique()","fbe249ac":"train['year'].unique()","f28f15c6":"plt.figure(figsize=(20,10))\nsns.boxplot(train['interest_level'],train['day'])","e5c0c72b":"plt.figure(figsize=(20,10))\nsns.countplot(train['day'],hue=train['interest_level'])","5858e555":"plt.figure(figsize=(10,8))\nsns.countplot(train['month'],hue=train['interest_level'])","88b678ed":"train.groupby('month')['interest_level'].value_counts()","d40aa3d3":"train = pd.read_json('\/kaggle\/input\/two-sigma-connect-rental-listing-inquiries\/train.json.zip')\nalldata = pd.concat([train,test])","de000ec7":"alldata.isnull().any() ","bff81300":"alldata2 = alldata.drop(['features','interest_level','photos'],axis=1)","8733cbc0":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\n\nfor i in alldata2.columns[alldata2.dtypes == object] :\n    alldata2[i] = le.fit_transform(alldata2[i])","9d56a407":"train2 = alldata2[:len(train)]\ntest2 = alldata2[len(train):]","1df730f0":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(random_state=0, n_jobs=-1)\nrf.fit(train2, train['interest_level'])\nresult = rf.predict_proba(test2)","433aa1ed":"result","29820e41":"sub = pd.read_csv('\/kaggle\/input\/two-sigma-connect-rental-listing-inquiries\/sample_submission.csv.zip')\nsub.head()","9de56b89":"sub['high'] = result[:,0]\nsub['medium'] = result[:,2]\nsub['low'] = result[:,1]\n\nsub.head()","723ab301":"sub.to_csv('rental.csv',index=False)","b1cda11a":"* Drop features, photos column (just for my convenience)","ea50c1e0":"* Can't find the difference with boxplot.","b46a69bf":"* There is no difference in this boxplot. \n* So, should we drop 'bedrooms' column?\n* If no, then how can we visualize in other way?","0274225b":"#### day","a700cde8":"#### month","69214fe3":"### 'created'","758797ea":"# Data Visualization","b57e6b81":"* Check NA","32ff06ef":"### 'bedrooms', 'bathrooms' (Category - Category Values)","468d2511":"* Types of variables","eabd9113":"# Load Data","ce767f78":"* Does this column help predicting target variable?\n* day 2->3, 5->6, 20->21..","448ccda0":"* Target Variable","cdb50919":"# Data Exploration","c742a9bf":"* bedrooms from 1 -> 2, interest level increases since number of 'low' decreases while number of 'medium' and 'high' increase.","6bd7a885":"* Make 'day', 'month', 'year' column to analysis whether there is meaningful difference between each interest_level values.","0d22c334":"# Prediction","eb8834a7":"* Summary of numeric variables","ea9ebad4":"* After dropping list columns('features','photos'), check the number of unique values of each column","0d4dbb20":"* 'bedrooms' is categorical column.\n* Also, our target variable(interest_level) has categorical attribute."}}