{"cell_type":{"abfab649":"code","af49418b":"code","22bc6861":"code","96ab2ce8":"code","4020d40d":"code","998186c6":"code","4c9ff01a":"code","abedfa5e":"code","aac6ab3f":"code","1971147d":"code","a05bf37b":"code","3cfc990a":"code","73f0ddb5":"code","25a632df":"code","1313260e":"code","aa9f508d":"code","2f58b0dc":"code","6fb5e356":"code","800cd6e7":"code","7ef6ac28":"code","f6f00ca7":"code","644c50ec":"code","bfa77dd9":"code","a5e1d5a8":"code","85ac071d":"code","03078db0":"code","4c81e16d":"code","c3207b3d":"code","b328e66a":"code","654a469c":"code","8dab926e":"code","80ca47ec":"code","1c707fd2":"code","6915e7af":"code","9baef9f4":"code","df47aaa7":"code","9e7cdda7":"code","38df0356":"code","c6fa5ea9":"code","5ffcd8d5":"code","ecf2515a":"code","81ae35cf":"code","30d6625a":"code","be041f90":"code","d8172d70":"code","ade75101":"code","3bb0bb8d":"code","bea13ea0":"code","32d3cb8e":"code","59f2ce43":"code","0351d4c4":"code","46153f32":"code","c9324e1e":"code","a7030d54":"code","fd1314fa":"code","2e7767f3":"code","efcd2956":"code","28cc940b":"code","510d48cb":"code","9dbae696":"code","7334451a":"code","7a804958":"code","397aa520":"code","a50d635e":"code","ecbca32c":"code","99511118":"code","b77fb766":"code","b3d9d6b2":"code","c85e3c16":"code","30a12422":"code","e5c89774":"code","1876e2c6":"code","1ab3f2b8":"code","4f5dfee8":"code","41ed0044":"markdown","df21c06c":"markdown","df8fb8ce":"markdown","d2629320":"markdown","d79509d1":"markdown","7eee2e62":"markdown","dc81ad3e":"markdown","f6d6b7e8":"markdown","0e477415":"markdown","768a0206":"markdown","b91a03d3":"markdown","2a06581b":"markdown","046590e5":"markdown","de8e8142":"markdown","a123cec0":"markdown","6e913f4a":"markdown","cdb4f035":"markdown","efd138b8":"markdown","909572d0":"markdown","98fb3c56":"markdown","4f4d50e2":"markdown","2c097cca":"markdown","096b926e":"markdown","a30d9192":"markdown","a0e1983c":"markdown","d6758d43":"markdown","daf8e3aa":"markdown","36127210":"markdown","a92ca8b1":"markdown","95448e78":"markdown","9b6a4f78":"markdown","d1bb892b":"markdown","31d716d0":"markdown","ec87b710":"markdown","240d050e":"markdown","ee5ba7c2":"markdown","0584c6c4":"markdown","e3cb507d":"markdown","4294f4c1":"markdown","3e2a30ad":"markdown","bd1dc84f":"markdown","95cf5858":"markdown","05a97380":"markdown","444c264a":"markdown","2a4ce312":"markdown","804b87cd":"markdown","235d607e":"markdown","38c433f6":"markdown","5e0ecd1b":"markdown","026b0338":"markdown","b4dfe220":"markdown","f122b664":"markdown","2f95ef86":"markdown","bfe62dac":"markdown","4178e493":"markdown","8cb766f3":"markdown","02f2f373":"markdown","10b44e9d":"markdown","855a527d":"markdown","1c59f1fa":"markdown","8356378e":"markdown","0a8ca72b":"markdown","841393b7":"markdown","24a635e2":"markdown","5c4efa7d":"markdown","e60ccf00":"markdown","6ad93641":"markdown","cbf62311":"markdown","4877ae8f":"markdown","7e99749a":"markdown","9b854234":"markdown"},"source":{"abfab649":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\n","af49418b":"sample = pd.read_csv(\"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/sample_submission.csv\")\nsample","22bc6861":"train = pd.read_csv(\"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train_labels.csv\")\ntrain","96ab2ce8":"import pydicom\nimport matplotlib.pyplot as plt\n\ndataset = pydicom.filereader.dcmread('..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train\/00000\/FLAIR\/Image-109.dcm')\nimg = dataset.pixel_array\n\nfig, ax = plt.subplots()\nax.imshow(img, cmap='gray')\nax.set_axis_off()\nplt.show()","4020d40d":"def makeimg(path):\n    dataset = pydicom.filereader.dcmread(path)\n    img = dataset.pixel_array\n    return img","998186c6":"train[\"imfolder\"] = ['{0:05d}'.format(s) for s in train[\"BraTS21ID\"]]\ntrain","4c9ff01a":"train_path = \"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train\"\n\ntrain[\"path\"] = [os.path.join(train_path,s) for s in train[\"imfolder\"]  ]\ntrain","abedfa5e":"Scans = [\"FLAIR\",\"T1w\",\"T1wCE\",\"T2w\"]","aac6ab3f":"from tqdm import tqdm","1971147d":"train.head(3)","a05bf37b":"os.path.join(train[\"path\"].iloc[0],\"FLAIR\")","3cfc990a":"os.listdir(os.path.join(train[\"path\"].iloc[0],\"FLAIR\"))[:3]","73f0ddb5":"len(os.listdir(os.path.join(train[\"path\"].iloc[0],\"FLAIR\")))","25a632df":"for scan in Scans:\n    train[scan +\"_count\"] = [ len(os.listdir(os.path.join(train[\"path\"].iloc[s],scan))) for s in tqdm(range(len(train))) ]\n\n","1313260e":"train","aa9f508d":"allsame = [train[\"FLAIR_count\"].iloc[s] ==   train[\"T1w_count\"].iloc[s] ==train[\"T1wCE_count\"].iloc[s] ==train[\"T2w_count\"].iloc[s] \n          for s in range(len(train))]","2f58b0dc":"train[\"allsame\"] = allsame\ntrain","6fb5e356":"train[\"allsame\"].sum()","800cd6e7":"train[\"allsame\"].sum()\/len(train) * 100","7ef6ac28":"train[train[\"allsame\"]]","f6f00ca7":"row_ID = 64","644c50ec":"train[\"BraTS21ID\"].iloc[row_ID]","bfa77dd9":"temp_folder = train[\"path\"].iloc[row_ID]\ntemp_folder","a5e1d5a8":"temp_folder2 = os.path.join(temp_folder,\"FLAIR\")\ntemp_files = os.listdir(temp_folder2)\ntemp_files[:3]","85ac071d":"imagenum = [s.split(\"-\")[1] for s in temp_files]\nimagenum = [s.split(\".\")[0] for s in imagenum]\nimagenum[:3]","03078db0":"temp_path = [os.path.join(temp_folder2,s) for s in temp_files]\ntemp_path[:3]","4c81e16d":"tempdf = pd.DataFrame()\ntempdf[\"image_num\"] = imagenum\ntempdf[\"image_num\"] = tempdf[\"image_num\"].astype(\"int\")\n\ntempdf[\"temp_path\"] = temp_path","c3207b3d":"tempdf.head(3)","b328e66a":"tempdf = tempdf.sort_values(\"image_num\").reset_index(drop=True)\ntempdf.head(3)","654a469c":"finpath = tempdf[\"temp_path\"]","8dab926e":"def makepath(row_ID,scan):\n    \n    temp_folder = train[\"path\"].iloc[row_ID]\n    temp_folder2 = os.path.join(temp_folder,scan)\n    temp_files = os.listdir(temp_folder2)\n    imagenum = [s.split(\"-\")[1] for s in temp_files]\n    imagenum = [s.split(\".\")[0] for s in imagenum]\n    temp_path = [os.path.join(temp_folder2,s) for s in temp_files]\n    tempdf = pd.DataFrame()\n    tempdf[\"image_num\"] = imagenum\n    tempdf[\"image_num\"] = tempdf[\"image_num\"].astype(\"int\")\n    tempdf[\"temp_path\"] = temp_path\n    tempdf = tempdf.sort_values(\"image_num\").reset_index(drop=True)\n    finpath = tempdf[\"temp_path\"]\n    return finpath","80ca47ec":"Scans","1c707fd2":"row_id=64\n\nsampledf = pd.DataFrame()\nfor scan in Scans:\n    sampledf[scan + \"_path\"] = makepath(row_id,scan)","6915e7af":"sampledf.head(3)","9baef9f4":"print(\"MGMT_value = \" + str(train[\"MGMT_value\"].iloc[row_id]))\n\n\nfor row in range(len(sampledf)):\n    plt.figure(figsize=(80,10))\n    for num,scan in enumerate(Scans):\n        img = makeimg(sampledf[scan + \"_path\"].iloc[row])\n        plt.subplot(4,25,num+1)\n        #plt.axis(\"off\")\n        plt.imshow(img)\n        \n        if row==0:\n            plt.title(scan,fontsize=18)\n        if num==0:\n            plt.ylabel(\"row=\" + str(row),fontsize=18)\n\n        ","df47aaa7":"row_id = 65\n\nsampledf = pd.DataFrame()\nfor scan in Scans:\n    sampledf[scan + \"_path\"] = makepath(row_id,scan)\n\nprint(\"MGMT_value = \" + str(train[\"MGMT_value\"].iloc[row_id]))\n\nfor row in range(len(sampledf)):\n    plt.figure(figsize=(80,10))\n    for num,scan in enumerate(Scans):\n        img = makeimg(sampledf[scan + \"_path\"].iloc[row])\n        plt.subplot(4,25,num+1)\n        #plt.axis(\"off\")\n        plt.imshow(img)\n        \n        if row==0:\n            plt.title(scan,fontsize=18)\n        if num==0:\n            plt.ylabel(\"row=\" + str(row),fontsize=18)\n\n        ","9e7cdda7":"train","38df0356":"row_id = 0\n\nsampledf = pd.DataFrame()\nfor scan in Scans:\n    sampledf[scan + \"_path\"] = makepath(row_id,scan)","c6fa5ea9":"sampledf","5ffcd8d5":"sampledf[\"T1w_path\"].iloc[32]","ecf2515a":"print(\"MGMT_value = \" + str(train[\"MGMT_value\"].iloc[row_id]))\n\nfor row in range(33):\n    plt.figure(figsize=(80,5))\n    for num,scan in enumerate(Scans):\n        img = makeimg(sampledf[scan + \"_path\"].iloc[row])\n        plt.subplot(4,33,num+1)\n        #plt.axis(\"off\")\n        plt.imshow(img)\n        \n        if row==0:\n            plt.title(scan,fontsize=18)\n        if num==0:\n            plt.ylabel(\"row=\" + str(row),fontsize=18)\n\n        ","81ae35cf":"def get_observation_data(path):\n    \"\"\"Get information from the .dcm files.\n    path: complete path to the .dcm file\"\"\"\n\n    image_data = pydicom.read_file(path)\n    \n    # Dictionary to store the information from the image\n    observation_data = {\n        \"FileNumber\" : path.split(\"\/\")[5],\n        \"Rows\" : image_data.get(\"Rows\"),\n        \"Columns\" : image_data.get(\"Columns\"),\n        \"PatientID\" : image_data.get(\"PatientID\"),\n        \"BodyPartExamined\" : image_data.get(\"BodyPartExamined\"),\n        \"RotationDirection\" : image_data.get(\"RotationDirection\"),\n        \"ConvolutionKernel\" : image_data.get(\"ConvolutionKernel\"),\n        \"PatientPosition\" : image_data.get(\"PatientPosition\"),\n        \"PhotometricInterpretation\" : image_data.get(\"PhotometricInterpretation\"),\n        \"Modality\" : image_data.get(\"Modality\"),\n        \"StudyInstanceUID\" : image_data.get(\"StudyInstanceUID\"),\n        \"PixelPaddingValue\" : image_data.get(\"PixelPaddingValue\"),\n        \"SamplesPerPixel\" : image_data.get(\"SamplesPerPixel\"),\n        \"BitsAllocated\" : image_data.get(\"BitsAllocated\"),\n        \"BitsStored\" : image_data.get(\"BitsStored\"),\n        \"HighBit\" : image_data.get(\"HighBit\"),\n        \"PixelRepresentation\" : image_data.get(\"PixelRepresentation\"),\n        \"RescaleType\" : image_data.get(\"RescaleType\"),\n    }\n\n    # Integer columns\n    int_columns = [\"SliceThickness\", \"KVP\", \"DistanceSourceToDetector\", \n        \"DistanceSourceToPatient\", \"GantryDetectorTilt\", \"TableHeight\", \n        \"XRayTubeCurrent\", \"GeneratorPower\", \"WindowCenter\", \"WindowWidth\", \n        \"SliceLocation\", \"RescaleIntercept\", \"RescaleSlope\"]\n    for k in int_columns:\n        observation_data[k] = int(image_data.get(k)) if k in image_data else None\n\n    # String columns\n    str_columns = [\"ImagePositionPatient\", \"ImageOrientationPatient\", \"ImageType\", \"PixelSpacing\"]\n    for k in str_columns:\n        observation_data[k] = str(image_data.get(k)) if k in image_data else None\n\n    \n    return observation_data","30d6625a":"get_observation_data('..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train\/00000\/FLAIR\/Image-20.dcm')","be041f90":"Scans","d8172d70":"Scancount = [s + \"_count\" for s in Scans]\nScancount","ade75101":"master = train[Scancount].iloc[0].idxmax()\nmasterpath = makepath(0,master.split(\"_\")[0])\nmasterloc = [get_observation_data(masterpath[b])[\"SliceLocation\"] for b in range(len(masterpath))]\nmasterloc[:10]","3bb0bb8d":"sdict = []\nfor a in Scans:\n    path = makepath(0,a)\n    scanloc = [get_observation_data(path[b])[\"SliceLocation\"] for b in range(len(path))]\n    scandict = dict(zip(scanloc,path))\n    sdict.append(scandict)","bea13ea0":"sdict[0][-88]","32d3cb8e":"masterdf = pd.DataFrame(masterloc,columns=[\"masterloc\"])\nmasterdf.head(5)","59f2ce43":"masterdf = masterdf.drop_duplicates().reset_index(drop=True)\nmasterdf","0351d4c4":"for num,scan in enumerate(Scans):\n    masterdf[scan] = masterdf[\"masterloc\"].map(sdict[num])","46153f32":"masterdf","c9324e1e":"masterdf=masterdf.dropna(how=\"any\")\nmasterdf = masterdf.reset_index(drop=True)","a7030d54":"masterdf","fd1314fa":"masterdf[\"BraTS21ID\"]=train[\"BraTS21ID\"].iloc[0]\nmasterdf[\"MGMT_value\"]=train[\"MGMT_value\"].iloc[0]\n","2e7767f3":"masterdf","efcd2956":"def making_loc_path(row):\n    \n\n    master = train[Scancount].iloc[row].idxmax()\n    masterpath = makepath(row,master.split(\"_\")[0])\n    masterloc = [get_observation_data(masterpath[b])[\"SliceLocation\"] for b in range(len(masterpath))]\n\n    sdict = []\n    for a in Scans:\n        path = makepath(row,a)\n        scanloc = [get_observation_data(path[b])[\"SliceLocation\"] for b in range(len(path))]\n        scandict = dict(zip(scanloc,path))\n        sdict.append(scandict)\n\n    masterdf = pd.DataFrame(masterloc,columns=[\"masterloc\"])\n\n    for num,scan in enumerate(Scans):\n        masterdf[scan] = masterdf[\"masterloc\"].map(sdict[num])\n\n\n    masterdf =masterdf.dropna(how=\"any\")\n\n    masterdf = masterdf.drop_duplicates()\n    masterdf = masterdf.reset_index(drop=True)\n    \n        \n    masterdf[\"BraTS21ID\"]=int(train[\"BraTS21ID\"].iloc[row])\n    masterdf[\"MGMT_value\"]=int(train[\"MGMT_value\"].iloc[row])\n\n    \n    return masterdf\n","28cc940b":"train[train.index==0]","510d48cb":"vi = making_loc_path(0)\nvi","9dbae696":"\nfor row in range(len(vi)):\n    plt.figure(figsize=(80,5))\n    for num,scan in enumerate(Scans):\n        img = makeimg(vi[scan].iloc[row])\n        plt.subplot(4,len(vi),num+1)\n        #plt.axis(\"off\")\n        plt.imshow(img)\n        \n        if row==0:\n            plt.title(scan,fontsize=18)\n        if num==0:\n            plt.ylabel(\"loc=\" + str(vi[\"masterloc\"].iloc[row]),fontsize=18)\n\n        ","7334451a":"train[train.index==560]","7a804958":"vi = making_loc_path(560)\nvi","397aa520":"for row in range(len(vi)):\n    plt.figure(figsize=(80,5))\n    for num,scan in enumerate(Scans):\n        img = makeimg(vi[scan].iloc[row])\n        plt.subplot(4,len(vi),num+1)\n        #plt.axis(\"off\")\n        plt.imshow(img)\n        \n        if row==0:\n            plt.title(scan,fontsize=18)\n        if num==0:\n            plt.ylabel(\"loc=\" + str(vi[\"masterloc\"].iloc[row]),fontsize=18)\n\n        ","a50d635e":"sample[\"imfolder\"] = ['{0:05d}'.format(s) for s in sample[\"BraTS21ID\"]]\n\ntest_path = \"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/test\"\n\nsample[\"path\"] = [os.path.join(test_path,s) for s in sample[\"imfolder\"]  ]\n\n\nallres = []\n\nfor scan in Scans:\n    sample[scan +\"_count\"] = [ len(os.listdir(os.path.join(sample[\"path\"].iloc[s],scan))) for s in tqdm(range(len(sample))) ]","ecbca32c":"sample","99511118":"allsame = [sample[\"FLAIR_count\"].iloc[s] ==   sample[\"T1w_count\"].iloc[s] ==sample[\"T1wCE_count\"].iloc[s] ==sample[\"T2w_count\"].iloc[s] \n          for s in range(len(sample))]\n\nsample[\"allsame\"] = allsame\n\nsample","b77fb766":"sample[\"allsame\"].sum()","b3d9d6b2":"sample[\"allsame\"].sum()\/len(sample) * 100","c85e3c16":"train.groupby(\"allsame\")[\"MGMT_value\"].mean().reset_index()","30a12422":"sample[\"MGMT_value\"] = np.where(sample[\"allsame\"],0.460317,0.532567)","e5c89774":"sample","1876e2c6":"sample= sample[[\"BraTS21ID\",\"MGMT_value\"]]","1ab3f2b8":"sample.to_csv(\"submission.csv\",index=False)","4f5dfee8":"sample","41ed0044":"Scans\u3068\u3057\u3066\u3001\u30ea\u30b9\u30c8\u5316\u3059\u308b\u3068\u3042\u3068\u3042\u3068for\u6587\u3067\u56de\u3057\u3084\u3059\u3044\u3067\u3059\u3002","df21c06c":"image_num\u3092\u4f7f\u3063\u3066\u304d\u308c\u3044\u306b\u3001\u4e26\u3073\u66ff\u3048\u307e\u3059\u3002\u2191\u3067int\u578b\u306b\u3057\u3066\u6570\u5b57\u306b\u3059\u308b\u3053\u3068\u304c\u91cd\u8981\u3002\u4e0b\u306e\u7d75\u306e\u3088\u3046\u306b\u3001\u3088\u304f\u3042\u308b1.dcm\u3000\u2192\u300010.dcm\u307f\u305f\u3044\u306b\u4e26\u3076\u3068\u6642\u7cfb\u5217\u304c\u5d29\u308c\u308b\u305f\u3081\n\n![image.png](attachment:1fdae302-8cb5-4ac9-8f3d-4305cfcdf9ff.png)","df8fb8ce":"## 2.3 FLAIR, T1w, T1wCE, T2w\u306e\u30a4\u30e1\u30fc\u30b8\u306e\u4ee3\u8868\u4f8b\u3092\u898b\u3066\u3044\u304f\u3002","d2629320":"\u3071\u3063\u3068\u898b\u306e\u611f\u899a\u3067\u3059\u304c\u3001\u6700\u521d\u306e\u65b9\u3068\u6700\u5f8c\u306e\u65b9\u306f\u771f\u3063\u6697\u3060\u3063\u305f\u308a\u3059\u308b\u304b\u3089\u3001\u4f55\u679a\u304b\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308b\u306a\u3089\u771f\u3093\u4e2d\u304f\u3089\u3044\u306e\u65b9\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002","d79509d1":"\u307e\u305a\u3001dcm image\u306e\u30d1\u30b9\u3092\u51fa\u3057\u3066\u3044\u304f\u3053\u3068\u3092\u8003\u3048\u307e\u3059","7eee2e62":"\u30c7\u30fc\u30bf\u306e\u6570\u304c\uff14\u7a2e\u985e\u3067\u305d\u308d\u3063\u3066\u3044\u306a\u3044\u3068\u304d\u3001\u6642\u7cfb\u5217\u7684\u306b\u6570\u5b57\u306f\u540c\u3058\u306a\u306e\u304b ? \u305d\u308c\u3068\u3082\u5358\u306a\u308b\u9023\u756a\u306a\u306e\u304b ?\nid = 0\u756a\u306e\u4eba\u3092\u898b\u3066\u307f\u307e\u3059","dc81ad3e":"1. \u6700\u3082\u753b\u50cf\u304c\u305f\u304f\u3055\u3093\u3042\u308bscan\u306eSliceLocation\u3092\u7b97\u51fa","f6d6b7e8":"\u8a66\u3057\u306b\u5148\u307b\u3069\u306e0\u884c\u76ee\u306e\u753b\u50cf\u3092\u898b\u3066\u307f\u308b","0e477415":"path\u3092\u30ea\u30b9\u30c8\u5316\u3057\u3061\u3083\u3044\u307e\u3059.\u307e\u305a\u306fFLAIR\u3067\u3002","768a0206":"T1W\u3060\u305133\u679a\u3057\u304b\u306a\u3044\u304c\u3001\u660e\u3089\u304b\u306b\u30bf\u30a4\u30df\u30f3\u30b0\u304c\u305a\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u3068\u6642\u9593\u5dee\u304c\u3042\u308a\u305d\u3046\u3002\ndcm\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u4f55\u304b\u4ed6\u306b\u60c5\u5831\u51fa\u305b\u308b\u306e\u304b\u3082(v13~ 2.6\u306b\u8ffd\u8a18\u3057\u307e\u3057\u305f)\u3002","b91a03d3":"\u5408\u3063\u3066\u3044\u305d\u3046\u306a\u3053\u3068\u3092\u78ba\u8a8d\u3002T2w\u306e\u30b9\u30ad\u30e3\u30f3\u65b9\u5411\u306f\u3053\u308c\u306f\u4ed6\u3068\u305d\u308d\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u7a2e\u985e\u304c\u3042\u308b\u306e\u306f\u6c17\u306b\u306a\u308a\u307e\u3059\u3002","2a06581b":"64\u884c\u76ee\u306eID100\u756a\u306e\u4eba(\u8133\u816b\u760d\u3067\u3042\u308b\u4eba)\u3068\u3001\n65\u884c\u76ee\u306eID102\u756a\u306e\u4eba(\u305d\u3046\u3067\u306a\u3044\u4eba)\u306e\u753b\u50cf\u3092\u5168\u90e8\u898b\u3066\u307f\u307e\u3059\u3002\n\n\u307e\u305a\u306f64\u884c\u76ee\u306e\u4eba\u3092\u3084\u3063\u3066\u3001\u95a2\u6570\u5316\u3057\u306665\u884c\u76ee\u306e\u4eba\u3092\u898b\u307e\u3059\u3002","046590e5":"## 2.5 \u5404\u30b9\u30ad\u30e3\u30f3\u306e\u30d5\u30a1\u30a4\u30eb\u6570\u304c\u305d\u308d\u3063\u3066\u3044\u306a\u3044\u6642 (\u3053\u308c\u304c\u7d0490%)","de8e8142":"\u4e0b\u306e\u65b9\u304cNan\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u78ba\u8a8d. \u756a\u53f7\u304c\u82e5\u3044\u9806\u306b\u4e26\u3073\u5909\u3048\u3066\u3044\u3066\u300132\u884c\u76ee\u304c33\u306a\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u9023\u756a","a123cec0":"\u5168\u90e8\u540c\u3058\u304b\u306e\u78ba\u8a8d","6e913f4a":"# 4. Submit\n\n\u30c6\u30b9\u30c8\u7684\u306b\u4f55\u304b\u5909\u3048\u3066\u51fa\u3057\u305f\u3044\u3002\u4f8b\u3048\u3070\u3001\u753b\u50cf\u679a\u6570\u304c\u540c\u3058\u5834\u5408\u306e\u50be\u5411\u3092\u898b\u3066\u307f\u308b\u3002","cdb4f035":"6. nan\u30c7\u30fc\u30bf\u306e\u884c\u524a\u9664","efd138b8":"ID 0\u756a\u306e\u4eba33\u679a\u898b\u3066\u307f\u308b (T1w\u306e\u500b\u6570\u304c33\u679a\u3067\u4e00\u756a\u5c11\u306a\u3044\u305f\u3081)","909572d0":"1. \u307e\u305a\u306ftrain\u306e0\u884c\u76ee\u306eFLAIR\u306e\u30d1\u30b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u305b\u307e\u3059\u3002","98fb3c56":"test\u30c7\u30fc\u30bf\u3082\u7d0412%\u306f\u6570\u304c\u305d\u308d\u3063\u3066\u3044\u308b\u3002","4f4d50e2":"\u82e5\u5e72\u306e\u5dee\u7570\u304c\u3042\u308a\u305d\u3046\u306a\u306e\u3067\u3001\u3053\u308c\u3067\u51fa\u3057\u3066\u307f\u307e\u3059\u3002","2c097cca":"# 2. \u4f55\u304b\u3089\u4e88\u6e2c\u3059\u308b\u304b ? train.csv\u3092\u898b\u3066\u3044\u304f","096b926e":"### test.csv\u306f\u306a\u3044\u306e\u3067\u3001train.csv\u3092\u898b\u3066\u307f\u307e\u3059\u3002","a30d9192":"1-7\u3092\u95a2\u6570\u5316(\u30b3\u30d4\u30fc\u3057\u3066\u30010\u3092\u30a4\u30e1\u30fc\u30b8\u756a\u53f7\u306b\u5909\u3048\u305f\u3060\u3051)","a0e1983c":"dcm\u306e\u30d1\u30b9\u3092\u51fa\u3057\u307e\u3059","d6758d43":"\u305d\u3082\u305d\u3082\u3053\u308c\u3089Scans\u306edcm\u306e\u6570\u304c\u3001\u60a3\u8005\u3054\u3068\u306b\u540c\u3058\u306a\u306e\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002","daf8e3aa":"## 2.4 \u753b\u50cf\u6570\u304c\u305d\u308d\u3063\u3066\u3044\u308b\u4eba\u306e\u753b\u50cf\u3092\u898b\u3066\u7406\u89e3\u3092\u6df1\u3081\u308b\n\n\u308f\u304b\u308a\u3084\u3059\u304f\u30a4\u30e1\u30fc\u30b8\u3059\u308b\u305f\u3081\u306b\u3001\u5168\u90e8\u753b\u50cf\u304c\u305d\u308d\u3063\u3066\u3044\u308b\u4eba\u3092\n\n\u8a66\u3057\u306b\u3001\u30e1\u30c1\u30eb\u5316\u304c\u3042\u308b\u4eba 1\u3000\u3068\u3000\u306a\u3044\u4eba 0\u306e\u753b\u50cf\u3092\u4e26\u3079\u3066\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n","36127210":"## 2.6 dcm\u30d5\u30a1\u30a4\u30eb\u306elocation\u60c5\u5831\u304b\u3089\u753b\u50cf\u3092\u305d\u308d\u3048\u3066\u307f\u308b(v13\uff5e)","a92ca8b1":"# 3. \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\n\n## 3.1 Scan\u3054\u3068\u306e\u753b\u50cf\u6570\u304c\u3069\u308c\u304f\u3089\u3044\u540c\u3058\u306a\u306e\u304b\u78ba\u8a8d\u3002","95448e78":"## BraTS21ID\u306f\u60a3\u8005\u306eId\u3001\n\n\n* MGMT_value\u306f\u30af\u30e9\u30b90\u306f\u3001\u521d\u3081\u8133\u816b\u760d\u304c\u306a\u3044\u4eba\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001MGMT\u30d7\u30ed\u30e2\u30fc\u30bf\u30fc\u3068\u3044\u3046\u3082\u306e\u306e\u30e1\u30c1\u30eb\u5316\u304c\u306a\u3044\u4eba\u307f\u305f\u3044\u3067\u3059\u3002\n\n* 1\u306f\u3042\u308b\u4eba\uff08\u816b\u760d\u5185\u306e\u907a\u4f1d\u5b50\u914d\u5217\u304c\u3042\u308b\u3068\u3001\u5316\u5b66\u7642\u6cd5\u306b\u5bfe\u3059\u308b\u53cd\u5fdc\u6027\u306e\u597d\u307e\u3057\u3044\u4e88\u5f8c\u56e0\u5b50\u304a\u3088\u3073\u5f37\u529b\u306a\u4e88\u6e2c\u56e0\u5b50\u3002)\u3053\u308c\u3092\u4e88\u6e2c\u3057\u307e\u3059\u3002","9b6a4f78":"dataframe\u306b\u3057\u3066\u4e26\u3073\u66ff\u3048\u307e\u3059\u3002","d1bb892b":"3. \u30d5\u30a1\u30a4\u30eb\u306e\u6570\u306f\u3053\u308c\u306blen\u3092\u3064\u3051\u308c\u3070OK\u3067\u3059\u3002","31d716d0":"## **MGMT_value=1\u306e\u4eba**\n\n(\u907a\u4f1d\u5b50\u306b\u30e1\u30c1\u30eb\u5316\u304c\u3042\u308b\u4eba = \u5316\u5b66\u7642\u6cd5\u306b\u5bfe\u3059\u308b\u53cd\u5fdc\u6027\u306e\u597d\u307e\u3057\u3044\u4e88\u5f8c\u56e0\u5b50\u304a\u3088\u3073\u5f37\u529b\u306a\u4e88\u6e2c\u56e0\u5b50\u304c\u3042\u308b\u4eba)\u306e\u753b\u50cf\u8868\u793a","ec87b710":"2. \u3053\u306e\u4e2d\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306fos.listdir\u3092\u2191\u306b\u304f\u3063\u3051\u308c\u3070\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002(\u8868\u793a\u304c\u9577\u3044\u306e\u3067\u3001\u308f\u3056\u30683\u500b\u306b\u3057\u3066\u3044\u307e\u3059)","240d050e":"submission\u3068\u307b\u307c\u540c\u3058\u60c5\u5831\u3002BraTS21ID\u306f\u60a3\u8005\u306eId\u3001MGMT_value\u306fMGMT promoter\u306b\u30e1\u30c1\u30eb\u5316\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u306e\u60c5\u5831\u304c\u8f09\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\u3053\u306etrain\u30c7\u30fc\u30bf\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\n\n\n\u305d\u308c\u305e\u308c\u3001FLAIR,T1w,T1wCE,T2w\u304c\u3042\u3063\u3066\u3001\u305d\u306e\u4e2d\u306bdcm\u30d5\u30a1\u30a4\u30eb\u304c\u3076\u3089\u4e0b\u304c\u3063\u3066\u3044\u307e\u3059\u3002","ee5ba7c2":"3. \u753b\u50cf\u304c\u4e00\u756a\u591a\u304b\u3063\u305fscan\u306elocation\u3092masterloc\u3068\u3057\u3066dataFrame\u4f5c\u6210","0584c6c4":"https:\/\/www.kaggle.com\/andradaolteanu\/siim-covid-19-box-detect-dcm-metadata\n\n\u3092\u53c2\u7167\u306bdcm\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u308b","e3cb507d":"585\u306e\u60a3\u8005id\u3067\u300163\u60a3\u8005Id\u304c\u540c\u3058\u679a\u6570\u3042\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3055\u308c\u305f\uff08\u7d0410%)\u3002\n\n","4294f4c1":"FLAIR\u306a\u3069\u306f\u540c\u3058\u4f4d\u7f6e\u3092\u53d6\u3063\u3066\u3044\u308b\u304c\u3001\u898b\u3048\u65b9\u304c\u9055\u3046\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\n![image.png](attachment:a1b7915a-e4e5-49b4-a4dd-8ef16de718bb.png)\n\n\u3053\u308c\u306e\u53f3\u4e0a\u3042\u305f\u308a\u304c\u3001\u7279\u5fb4\u7684\u306a\u306e\u3067\u3001\u30e1\u30c1\u30eb\u5316\u3057\u3066\u3044\u308b\u306e\u304b\u306a\u3068\u63a8\u6e2c\u3057\u307e\u3059\u3002","3e2a30ad":"## 2.3.2 dcm\u30d5\u30a1\u30a4\u30eb\u306e\u6570\u306e\u78ba\u8a8d","bd1dc84f":"5. \u5404scan\u3054\u3068\u306b\u5bfe\u5fdc\u7b87\u6240\u306e\u30d1\u30b9\u3092\u5c55\u958b","95cf5858":"path\u3092\u51fa\u3057\u305f\u5f8c\u3053\u306e\u95a2\u6570\u3092\u4f7f\u3063\u3066\u3001FLAIR, T1w, T1wCE, T2w\u306e\u30a4\u30e1\u30fc\u30b8\u306e\u4ee3\u8868\u4f8b\u3092\u898b\u3066\u307f\u307e\u3059.\n\n\n\u305d\u306e\u524d\u306b\u3001\u305d\u308c\u305e\u308c\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u306bdcm\u30d5\u30a1\u30a4\u30eb\u304c\u540c\u3058\u6570\u3042\u308b\u306e\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002","05a97380":"### 2.3.1 dcm\u30d5\u30a9\u30eb\u30c0\u30d1\u30b9\u306e\u4f5c\u6210","444c264a":"## **MGMT_value=0\u306e\u4eba\n\n(\u907a\u4f1d\u5b50\u306b\u30e1\u30c1\u30eb\u5316\u304c\u306a\u3044\u4eba = \u5316\u5b66\u7642\u6cd5\u306b\u5bfe\u3059\u308b\u53cd\u5fdc\u6027\u306e\u597d\u307e\u3057\u3044\u4e88\u5f8c\u56e0\u5b50\u304a\u3088\u3073\u5f37\u529b\u306a\u4e88\u6e2c\u56e0\u5b50\u304c\u306a\u3044\u4eba)**\u306e\u753b\u50cf\u8868\u793a","2a4ce312":"example : Scans[0]\u3000\u306elocation -88","804b87cd":"# \u6700\u5f8c\u307e\u3067\u898b\u3066\u3044\u305f\u3060\u3044\u3066\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\n\n\u203b\u4ee5\u524d\u3082\u79c1\u306enotebook\u306bupvote\u3057\u3066\u304f\u308c\u305f\u65b9\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\n\n# \u304a\u5f79\u306b\u7acb\u3066\u3070\u3001**upvote**\u3044\u305f\u3060\u3051\u305f\u3089\u5b09\u3057\u3044\u3067\u3059\uff01\n\n* \u6700\u521d\u306e\u65b9\u306f\u3053\u306e\u30b3\u30f3\u30da\u30c6\u30a3\u30b7\u30e7\u30f3\u306f\u8133\u816b\u760d\u3042\u308b\u30fb\u306a\u3057\u3068\u9593\u9055\u3063\u3066\u89e3\u91c8\u3057\u3066\u3044\u307e\u3057\u305f\u3002English\u7248\u3067\u8a02\u6b63\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u521d\u3081\u306e\u65b9\u7533\u3057\u8a33\u3054\u3056\u3044\u307e\u305b\u3093\u3002","235d607e":"row Id \u306e\u4e00\u89a7\u3092\u4f5c\u6210(\u540c\u3058\u6570\u3068\u308f\u304b\u3063\u3066\u3044\u308b\u304b\u3089dataframe\u5316\u3067\u304d\u308b\u3002\u4ed6\u306f\u3067\u304d\u306a\u3044)","38c433f6":"## 2.7 Visualization","5e0ecd1b":"\u5225\u306e\u4f8b\u3067\u3001T2w\u306e\u30b9\u30ad\u30e3\u30f3\u65b9\u5411\u304c\u305d\u308d\u3063\u3066\u3044\u305f\u3082\u306e\u3002560\u884c\u76ee","026b0338":"7. \u60a3\u8005\u60c5\u5831\u3001MGMT_value\u3092\u8ffd\u8a18","b4dfe220":"## 2.1 train.csv\u3068\u30d5\u30a1\u30a4\u30eb\u69cb\u6210","f122b664":"True\u306f1\u3068\u6271\u308f\u308c\u307e\u3059\u306e\u3067\u3001\u8db3\u3059\u3068\u4f55\u500bTrue\u304c\u3042\u308b\u304b\u308f\u304b\u308a\u307e\u3059","2f95ef86":"\u540c\u3058\u679a\u6570\u306eID\u3082\u3042\u308c\u3070\u3001\u9055\u3046\u306e\u3082\u3042\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002","bfe62dac":"![image.png](attachment:f62278ec-cdeb-40d3-bf9c-3031fd13c359.png)\n\n\u305d\u308c\u305e\u308c\u306eID\u306b FLAIR, T1w, T1wCE, T2w\u3068\u3044\u3046\u306e\u304c\u3001\u7d10\u3065\u3044\u3066\u3044\u307e\u3059\u3002","4178e493":"\u30b3\u30fc\u30c9\u306f\u57fa\u672ctrain\u3068\u540c\u3058\u306a\u306e\u3067\u3001\u307e\u3068\u3081\u3066\u3057\u307e\u3044\u307e\u3059\u3002","8cb766f3":"\u3053\u306e\u8fba\u2193\u306f\u602a\u3057\u3044\u3051\u3069\u3001\u3053\u306e\u4eba\u306f0\u306a\u306e\u3067\u3001\u30e1\u30c1\u30eb\u5316\u306f\u898b\u3064\u304b\u3089\u306a\u3044\u3002\u5168\u4f53\u7684\u306b\u3082\u602a\u3057\u3044\u3068\u3053\u308d\u306f\u5c11\u306a\u3044\u3002\u3053\u308c\u3089\u306e\u60c5\u5831\u304b\u3089\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3082\u898b\u3066\u3044\u304f\u306e\u3060\u3068\u63a8\u6e2c\u3002\n\n![image.png](attachment:d030383d-4fe2-43fd-81d2-80ae6e083bf2.png)","02f2f373":"\u3053\u306e\u4e2d\u306eSliceLocation\u3092train\u306e0\u884c\u76ee\u306e\u60a3\u8005\u3067\u3001\u5404\u30b9\u30ad\u30e3\u30f3\u3067\u305d\u308d\u3048\u3066\u307f\u307e\u3059\u3002","10b44e9d":"2. \u5404path\u3068location\u306e\u95a2\u4fc2\u3092\u53d6\u5f97","855a527d":"example","1c59f1fa":"T2w\u306e\u30b9\u30ad\u30e3\u30f3\u5411\u304d\u304c\u9055\u3046\u6c17\u3082\u3059\u308b\u304c\u3001\u5834\u6240\u3068\u3057\u3066\u306f\u5408\u3063\u3066\u3044\u305d\u3046\u306a\u6c17\u304c\u3059\u308b\u3002","8356378e":"![image.png](attachment:43a5e528-5750-4b79-876b-0eed0745bf27.png)\n\n\u305d\u308c\u305e\u308c\u306b\u305f\u304f\u3055\u3093\u306edcm\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3002","0a8ca72b":"## 2.2 dcm\u30d5\u30a1\u30a4\u30eb\u30921\u679a\u898b\u3066\u307f\u308b\u3002","841393b7":"img\u306b\u3059\u308b\u3068\u3053\u308d\u3060\u3051\u95a2\u6570\u5316\u3057\u307e\u3059\u3002\uff08\u5f8c\u7a0b\u4f7f\u3044\u307e\u3059)","24a635e2":"4. \u2191\u306e\u30b3\u30fc\u30c9\u306e\"FLAIR\"\u306e\u3068\u3053\u308d\u306f\u3001Scans[0]\u306a\u306e\u3067\u3001\u7f6e\u304d\u63db\u3048\u3066\u3001for\u6587\u3067\u56de\u3057\u307e\u3059\u3002\u307e\u305f\u30010\u884c\u76ee\u306e\u3068\u3053\u308d\u306f\u30ea\u30b9\u30c8\u5185\u5305\u3092\u4f7f\u3063\u3066\u632f\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u4e00\u6587\u3067\u5168\u90e8DataFrame\u306b\u53ce\u7d0d\u3067\u304d\u307e\u3059\u3002","5c4efa7d":"# **RSNA-MICCAI Brain Tumor Radiogenomic Classification**&#x1f600;\n\u8133\u816b\u760d\u6cbb\u7642\u306b\u91cd\u8981\u306a\u907a\u4f1d\u5b50\u30d0\u30a4\u30aa\u30de\u30fc\u30ab\u30fc\u306e\u72b6\u614b\u3092\u4e88\u6e2c\u3059\u308b\n\n\u203b English version is here.\nhttps:\/\/www.kaggle.com\/chumajin\/brain-tumor-eda-for-starter-english-version\n\n## \u3053\u306e\u30b3\u30f3\u30da\u306f\u3001MRI\u306e\u753b\u50cf\u304b\u3089**\u8133\u816b\u760d\u6cbb\u7642\u306b\u91cd\u8981\u306a\u907a\u4f1d\u5b50\u30d0\u30a4\u30aa\u30de\u30fc\u30ab\u30fc\u3067\u3042\u308bMGMT\u30d7\u30ed\u30e2\u30fc\u30bf\u30fc\u306e\u30e1\u30c1\u30eb\u5316**\u3092\u4e88\u6e2c\u3059\u308b\u30b3\u30f3\u30da\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u79c1\u307f\u305f\u3044\u306b\u5c02\u9580\u5916\u306e\u4eba\u306b\u306f\u3001\u3061\u3087\u3063\u3068\u4f55\u8a00\u3063\u3066\u3044\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nMGMT\u3068\u3044\u3046\u907a\u4f1d\u5b50\u306e\u30d7\u30ed\u30e2\u30fc\u30bf\u30fc\u9818\u57df\u306e\u30e1\u30c1\u30eb\u5316\u306e\u72b6\u614b\u306b\u3088\u3063\u3066\u3001\u5316\u5b66\u7642\u6cd5\u306b\u5bfe\u3059\u308b\u53cd\u5fdc\u3084\u4e88\u5f8c\u304c\u7570\u306a\u308b\u3053\u3068\u304c\u5831\u544a\u3055\u308c\u3066\u3044\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\n\u6700\u8fd1\u3067\u306f\u3001\u3053\u306e\u30e1\u30c1\u30eb\u5316\u306e\u691c\u67fb\u3092\u53c2\u8003\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u624b\u8853\u5f8c\u306e\u6cbb\u7642\u3068\u3057\u3066\u3001\u653e\u5c04\u7dda\u6cbb\u7642\u304b\u3001\u5316\u5b66\u7642\u6cd5\u304b\u3092\u9069\u5207\u306b\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\n\n\u3053\u308c\u304c\u60a3\u8005\u3055\u3093\u306e\u72b6\u614b\u3092\u3088\u304f\u4fdd\u3061\u306a\u304c\u3089\u751f\u5b58\u671f\u9593\u3092\u5ef6\u3070\u3059\u3053\u3068\u306b\u5f79\u7acb\u3064\u3053\u3068\u304c\u308f\u304b\u3063\u3066\u304d\u305f\u307f\u305f\u3044\u3067\u3059\u3002\n\u203b https:\/\/www.h.u-tokyo.ac.jp\/neurosurg\/rinsho\/noushu.htm \u3092\u53c2\u8003\u3002\n\n\n\u521d\u3081\u8133\u816b\u760d\u304b\u3069\u3046\u304b\u3092\u5f53\u3066\u308b\u30b3\u30f3\u30da\u3060\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u305d\u3046\u3067\u306f\u306a\u304f(English\u7248\u3067\u30b3\u30e1\u30f3\u30c8\u3082\u3089\u3044\u307e\u3057\u305f)\u3001\n\n\u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u542b\u307e\u308c\u308b\u3059\u3079\u3066\u306e\u88ab\u9a13\u8005\u306f\u8133\u816b\u760d\uff08\u81a0\u82bd\u816b\uff09\u3092\u6301\u3063\u3066\u3044\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\n\u30af\u30e9\u30b90\u306f\u3001\u816b\u760d\u304c\u306a\u3044\u4eba\u3067\u306f\u306a\u304f\u3001MGMT\u30d7\u30ed\u30e2\u30fc\u30bf\u30fc\u3068\u3044\u3046\u3082\u306e\u306e\u30e1\u30c1\u30eb\u5316\u304c\u306a\u3044\u4eba\u3092\u6307\u3057\u307e\u3059\u30021\u306f\u3042\u308b\u4eba\u307f\u305f\u3044\u3067\u3059\u3002\u305d\u308c\u306e\u78ba\u7387\u3092\u51fa\u3059\u30b3\u30f3\u30da\u3067\u3059\u3002\n\n\n## \u5c11\u3057\u3067\u3082\u304a\u5f79\u306b\u7acb\u3066\u3070\u3001upvote\u3057\u3066\u9802\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\n\u3000\u203b\u3000\u4ee5\u524d\u3082\u79c1\u306enotebook\u306bupvote\u3057\u3066\u304f\u308c\u305f\u65b9\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\n  \u203b ver3\u4ee5\u524d\u306f\u52d8\u9055\u3044\u3092\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u3054\u6307\u6458\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f(English version)\n  \n  \u203b ver13\uff5e dcm\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u898b\u3066\u3001SliceLocation\u304b\u3089\u3001Scan\u3054\u3068\u306e\u4f4d\u7f6e\u5408\u308f\u305b\u3092\u5b9f\u884c (2.6\uff5e)","e60ccf00":"dcm\u30d5\u30a1\u30a4\u30eb\u304c\u3069\u3093\u306a\u3082\u306e\u304b\u898b\u308b\u305f\u3081\u306b\u3001\u307e\u305a\uff11\u679adcm\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f","6ad93641":"\u3042\u3068\u3067\u4e26\u3073\u66ff\u3048\u304c\u304d\u3061\u3093\u3068\u3067\u304d\u308b\u3088\u3046\u306b\u3053\u3053\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u6570\u5b57\u3092\u53d6\u3063\u3066\u304a\u304d\u307e\u3059\u3002","cbf62311":"\u3053\u308c\u3089\u3092\u95a2\u6570\u5316(\u95a2\u6570\u306f\u9577\u304f\u898b\u3048\u307e\u3059\u304c\u3001\u2191\u306e64\u884c\u76ee\u306e\u4eba\u306e\u30b3\u30fc\u30c9\u3092\u3053\u3053\u307e\u3067\u30b3\u30d4\u30fc\u3057\u3066\u3001FLAIR\u3092scan\u3068\u3044\u3046\u8868\u73fe\u306b\u3057\u305f\u3060\u3051)\u3057\u307e\u3059\u3002\nScans\u306e\u30ea\u30b9\u30c8\u3092for\u6587\u3067\u56de\u3057\u3066\u3001\u3053\u308c\u3067FLAIR\u4ee5\u5916\u3082\u4e00\u6c17\u306b\u51fa\u3057\u307e\u3059","4877ae8f":"4. \u91cd\u8907\u524a\u9664 ( \u540c\u3058location\u306e\u753b\u50cf\u304c\u3042\u308b\u307f\u305f\u3044 )","7e99749a":"finpath\u306b\u53ce\u7d0d\u3002","9b854234":"# 1. \u4f55\u3092\u4e88\u6e2c\u3059\u308b\u304b(submission.csv\u304b\u3089\u898b\u307e\u3059)"}}