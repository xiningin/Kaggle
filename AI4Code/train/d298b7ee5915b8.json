{"cell_type":{"4893d637":"code","94b51a2e":"code","b544bdae":"code","f0691004":"code","22b78a16":"code","5ed8b101":"code","92d91472":"code","944d4fb7":"code","855f66d7":"code","0f5fd888":"code","448e238a":"code","f6095617":"code","de109342":"code","c1ecb017":"code","25b6a7f1":"code","2d3f1d7d":"code","648ad6c5":"markdown","fcbaf104":"markdown","7837ab3a":"markdown"},"source":{"4893d637":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","94b51a2e":"missing_values = [\"n\/a\", \"na\", \"--\",\"-\"] \nimport warnings\nwarnings.filterwarnings('ignore')\nimport numpy             as np\nimport pandas            as pd\npd.set_option('display.max_columns', 100)\nimport matplotlib.pyplot as plt\nimport seaborn as sns","b544bdae":"players = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/players.csv')\nPFFScoutingData= pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/PFFScoutingData.csv')\ntracking2019=pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking2019.csv')\ntracking2020= pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking2020.csv')\ngames= pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/games.csv')\ntracking2018= pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking2018.csv')\nplays= pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/plays.csv')\n","f0691004":"players.head()\n#PFFScoutingData.head()\n#tracking2019.head()\n#tracking2020.head()\n#tracking2018.head()\n#games.head()\n#plays.head()\n","22b78a16":"#We will Try to find the collrelation within the respective dataset \n#so that we can find the feature that holds the key importance for further processing. \n#players.corr()\n#PFFScoutingData.corr()\ntracking2019.corr()\n#tracking2020.corr()\n#tracking2018.corr()\n#games.corr()\n#plays.corr()","5ed8b101":"players.head()","92d91472":"players.drop(['birthDate'], axis='columns', inplace=True) ","944d4fb7":"#since birthdate does not play any keyfactor we will drop the  Bithdate from the dataframe\nplayers.head()","855f66d7":"sns.set_style(\"darkgrid\")\nsns.displot(data=players, x=\"weight\")","0f5fd888":"sns.set_style(\"darkgrid\")\nsns.lineplot(\n    data=players, x=\"height\", y=\"weight\", err_style=\"band\")","448e238a":"players['Position'].value_counts().plot.bar(figsize=(10,8))\n\nplt.xlabel('position')\nplt.ylabel('total count')\nplt.show()","f6095617":"tracking2019.head()","de109342":"tracking2019.isnull().sum()","c1ecb017":"tracking2019.dropna(inplace=True) ","25b6a7f1":"sns.displot(data=tracking2019, x=\"position\")","2d3f1d7d":"fig, axs = plt.subplots(2, 2, figsize=(7, 7))\n\nsns.histplot(data=tracking2019, x=\"x\", kde=True, color=\"skyblue\", ax=axs[0, 0])\nsns.histplot(data=tracking2019, x=\"o\", kde=True, color=\"olive\", ax=axs[0, 1])\nsns.histplot(data=tracking2019, x=\"dir\", kde=True, color=\"gold\", ax=axs[1, 0])\nsns.histplot(data=tracking2019, x=\"y\", kde=True, color=\"teal\", ax=axs[1, 1])\n\nplt.show()","648ad6c5":"# Importing Data in respective dataframe","fcbaf104":"###  **Uncomment the dataframes to check the head() and the corr respectively.**","7837ab3a":"<font color = teal> <b> File descriptions <\/font> <\/b>\n\n- Game data: The games.csv contains the teams playing in each game. The key variable is gameId.\n\n- Play data: The plays.csv file contains play-level information from each game. The key variables    are gameId and playId.\n\n- Player data: The players.csv file contains player-level information from players that participated in any of the tracking data files. The key variable is nflId.\n\n- Tracking data: Files tracking[season].csv contain player tracking data from season [season]. The key variables are gameId, playId, and nflId.\n\n- PFF Scouting data: The PFFScoutingData.csv file contains play-level scouting information for each game. The key variables are gameId and playId*"}}