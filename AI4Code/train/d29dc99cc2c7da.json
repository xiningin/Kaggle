{"cell_type":{"edfbfe06":"code","9b53131f":"code","c72f2982":"code","5b26b98f":"code","e8342808":"code","ef82e765":"code","4aee278e":"markdown","38865875":"markdown","b015ae18":"markdown"},"source":{"edfbfe06":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9b53131f":"import numpy as np\nimport cv2\nimport pytesseract\nimport matplotlib.pyplot as plt","c72f2982":"image = cv2.imread(\"..\/input\/pothole\/pothole.jpeg\")\nimg = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\nf = plt.figure(figsize=(10,10))\nplt.imshow(img)\nplt.show()","5b26b98f":"h,w = img.shape\nclh = cv2.createCLAHE(clipLimit=5.0, tileGridSize=(100,1))\ngClh = clh.apply(img)\nf = plt.figure()\nf = plt.figure(figsize=(10,10))\nplt.gray()\nplt.imshow(gClh)\nplt.show(block=True)","e8342808":"edged = cv2.Canny(gClh,50,255)\nf = plt.figure()\nf = plt.figure(figsize=(10,10))\nplt.imshow(edged,cmap = 'gray')\nplt.show()","ef82e765":"contours, new  = cv2.findContours(edged.copy(), cv2.RETR_LIST, cv2.CHAIN_APPROX_NONE)\nimCont = image.copy()\ncv2.drawContours(imCont, contours, -1, (255,255,255), 4)\nf = plt.figure()\nf = plt.figure(figsize=(10,10))\nplt.imshow(imCont)","4aee278e":"Menemukan contours berdasarkan edge (tepi)","38865875":"Menentukan tepi dari dari image yang telah diubah ke graysclae","b015ae18":"Import libraries yang dibutuhkan"}}