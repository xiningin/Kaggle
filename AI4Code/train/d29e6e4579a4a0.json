{"cell_type":{"7c05f39f":"code","b65624a5":"code","7f33ea38":"code","1aa727ff":"code","b5ef05a2":"code","d77905a4":"code","371ca479":"code","19a94bc7":"code","f2aacdea":"code","2fa21b20":"code","37f1ff99":"code","beef6c2f":"markdown","f9e2bc63":"markdown","0061cf55":"markdown","398d86fd":"markdown","9b42dff4":"markdown","b11b1447":"markdown","7ff9e854":"markdown","47d57957":"markdown","979c4da1":"markdown"},"source":{"7c05f39f":"# determining the most occured categorical values\ndf['value'].value_counts().sort_values(ascending=False).head(20)","b65624a5":"# using them to form a list for the encoding purpose\ntop = [x for x in df['Model'].value_counts().sort_values(ascending=False).head(20).index]\ntop","7f33ea38":"# the columns are created with use of labels and frequent categories are filled as 1 whereas non frequent as 0\n\nfor label in top:\n    df[label] = np.where(df['Model']==label,1,0)\n    \ndf[['Model'] + top].head(20)","1aa727ff":"# this is by subtracting the numeric columns from all the columns present\ncols = df.columns\nnum_cols = df._get_numeric_data().columns\nnum_cols\ncol_list = list(set(cols) - set(num_cols))\ncol_list\n# col_list has the list of columns with categorical values","b5ef05a2":"# get_dummies is used for encoding \ndfnew = pd.get_dummies(df, columns = ['list of columns'] )","d77905a4":"df['column'] = df['column'].str.replace('Yes', '1').astype(str)\ndf['column'] = df['column'].str.replace('No', '0').astype(str)","371ca479":"df['column'].astype(int)","19a94bc7":"df['Mileage'] = df['Mileage'].str.replace('km', '').astype(int)","f2aacdea":"# Making a new column to determine whether this is from training or test set of the dataframe\ndf1['train'] = 1\ndf2['train'] = 0","2fa21b20":"# next step is to concading the two dataframes\ndf = pd.concat([df1,df2])","37f1ff99":"# this step is used finally after all encoding to seperate the test and train dataframes\ntrain_df = dfnew[dfnew['train'] == 1]\ntest_df = dfnew[dfnew['train'] == 0]\ntrain_df.drop([\"train\"],axis=1,inplace=True)\ntest_df.drop([\"train\"],axis=1,inplace=True)","beef6c2f":"#### example in this case the mileage is followed by 'km' and it is not necessary for the program only numeric values is required. so, replacing 'km'.","f9e2bc63":"## Replacing str and making the column as int type","0061cf55":"## Determining the columns that contain the categorical values","398d86fd":"## changing boolean values to one's and zero's","9b42dff4":"### Taking most frequent categories from the categorical variables","b11b1447":"## To get equal number of columns before and after encoding in both test and train dataframe","7ff9e854":"## changing the yes or no to one's and zero's","47d57957":"## How to Perform One Hot Encoding for Multi Categorical Variables","979c4da1":"## one hot encoding"}}