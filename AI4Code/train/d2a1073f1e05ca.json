{"cell_type":{"b7a3e211":"code","12881b73":"code","27307111":"code","55b713c9":"code","7da89b93":"code","bc956302":"code","2ed15ea3":"code","dab29380":"code","238c5792":"code","cc054378":"code","c09f4552":"code","a6fe69e1":"code","2bf987ea":"code","67b4756e":"code","a82ffb06":"code","653111ac":"code","18f1557c":"code","b3b3991f":"code","df67ba50":"code","42641d01":"code","3fd2f936":"code","cc662ca6":"code","7c007efb":"markdown","127c1b50":"markdown","b80fd3ce":"markdown","2e551edf":"markdown","a5f69584":"markdown","6027c13e":"markdown","71589d99":"markdown","2270c69f":"markdown","0b7c5fcf":"markdown","adbcaccb":"markdown","14ab9235":"markdown","65c588d6":"markdown","8bef24ef":"markdown"},"source":{"b7a3e211":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\n%matplotlib inline","12881b73":"# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\ndf = pd.read_csv('..\/input\/pokemon-data-swordshield\/pokemon-swordshield.csv')\n\nprint(df.shape)\ndf.head()","27307111":"# poke_counts\npoke_counts = len(df)\npoke_counts","55b713c9":"# Basic statistics\ndf.describe()","7da89b93":"df.plot.box()","bc956302":"df.head(25).style.bar(subset=['sum', 'HP', 'Attack', 'Defense', 'Sp_Atk', 'Sp_Def', 'Speed'])","2ed15ea3":"sns.distplot(df[\"sum\"])\nplt.show()","dab29380":"# type1\npoke_type01 = df['type1'].value_counts()\npoke_type01 = pd.DataFrame(poke_type01).T\n\n# type2\npoke_type02 = df['type2'].value_counts()\npoke_type02 = pd.DataFrame(poke_type02).T\n\npoke_type_join = pd.concat([poke_type01, poke_type02])\npoke_type_join","238c5792":"vals1 = [df['type1'].value_counts()[key] for key in df['type1'].value_counts().index]\nvals2 = [df['type2'].value_counts()[key] for key in df['type1'].value_counts().index]\ninds = np.arange(len(df['type1'].value_counts().index))\nwidth = .45\ncolor1 = np.random.rand(3)\ncolor2 = np.random.rand(3)\nhandles = [patches.Patch(color=color1, label='type1'), patches.Patch(color=color2, label='type2')]\nplt.bar(inds, vals1, width, color=color1)\nplt.bar(inds+width, vals2, width, color=color2)\nplt.gca().set_xticklabels(df['type1'].value_counts().index)\nplt.gca().set_xticks(inds+width)\nplt.grid()\nplt.xticks(rotation=90)\nplt.legend(handles=handles)","cc054378":"poke_type_total = poke_type_join.sum()\npoke_type_total\n\nfig, ax = plt.subplots(figsize=(12,6))\ndata_points = np.arange(len(poke_type_join.columns))\n\nax.bar(data_points, poke_type_join.iloc[0])\n\nax.bar(data_points, poke_type_join.iloc[1], bottom=poke_type_join.iloc[0])\nax.set_xticks(data_points)\nax.set_xticklabels(poke_type_join.columns);","c09f4552":"percent = poke_type_join.sum()\/ poke_counts\n\nmissing_data = pd.concat([poke_type_total, percent], axis=1, keys=['Total', 'Percent']).sort_values(by='Total', ascending=False)\nmissing_data.head(18)","a6fe69e1":"poke_tribe = df[(df['sum'] > 480)]\npoke_tribe_list =len(poke_tribe)\n\nprint(poke_tribe_list)\nprint(poke_tribe.shape)","2bf987ea":"# type1\npoke_type480_01 = poke_tribe['type1'].value_counts()\npoke_type480_01 = pd.DataFrame(poke_type480_01).T\npoke_type480_01\n\n# type2\npoke_type480_02 = poke_tribe['type2'].value_counts()\npoke_type480_02 = pd.DataFrame(poke_type480_02).T\npoke_type480_02\n\npoke_type_480_join = poke_type480_01.append(poke_type480_02)\npoke_type_480_join","67b4756e":"percent = poke_type_480_join.sum()\/ poke_tribe_list\n\nmissing_data = pd.concat([poke_type_480_join.sum(), percent], axis=1, keys=['Total', 'Percent']).sort_values(by='Total', ascending=False)\nmissing_data.head(18)","a82ffb06":"fig, ax = plt.subplots(figsize=(12,6))\ndata_points = np.arange(len(poke_type_480_join.columns))\n\nax.bar(data_points, poke_type_480_join.iloc[0])\n\nax.bar(data_points, poke_type_480_join.iloc[1], bottom=poke_type_480_join.iloc[0])\nax.set_xticks(data_points)\nax.set_xticklabels(poke_type_480_join.columns);","653111ac":"poke_tribe.sort_values(by='sum', ascending=False) ","18f1557c":"poke_tribe.plot.box()","b3b3991f":"from pandas import plotting\nplotting.scatter_matrix(poke_tribe.iloc[:, 2:9], figsize=(8, 8)) \nplt.show()","df67ba50":"type1s = list(set(list(df['type1'])))\nprint(len(type1s), type1s)","42641d01":"poke_tribe_corr = poke_tribe.corr()\ncorr_math = (poke_tribe_corr.loc[:,['HP','Attack','Defense','Sp_Atk','Sp_Def','Speed']]).corr()\nsns.heatmap(corr_math,annot = True)","3fd2f936":"fig = plt.figure()\nax = fig.add_subplot(111)\nax.violinplot(poke_tribe.iloc[:, 2:8].values.T.tolist())\nax.set_xticks([1, 2, 3, 4, 5, 6, 7]) \nax.set_xticklabels(poke_tribe.columns[2:8], rotation=90)\nplt.grid()\nplt.show()","cc662ca6":"for index, type1 in enumerate(type1s):\n    poke_tribe2 = poke_tribe[poke_tribe['type1'] == type1]\n    fig = plt.figure(figsize=(8, 4))\n    ax = fig.add_subplot(1, 1, 1)\n    plt.title(type1)\n    ax.set_ylim([0, 280])\n    ax.violinplot(poke_tribe2.iloc[:, 2:8].values.T.tolist())\n    ax.set_xticks([1, 2, 3, 4, 5, 6]) #\u30c7\u30fc\u30bf\u7bc4\u56f2\u306e\u3069\u3053\u306b\u76ee\u76db\u308a\u304c\u5165\u308b\u304b\u3092\u6307\u5b9a\u3059\u308b\n    ax.set_xticklabels(poke_tribe2.columns[2:8], rotation=90)\n    plt.grid()\n    plt.show()","7c007efb":"Pok\u00e9mon with many registrations are Water 14%, Psychic 11%, Grass 10%, Ghost 9.5%, and Ground 9.5%.","127c1b50":"Data is concentrated around 300 and 500.The seed Pok\u00e9mon's Grookey is 310, and the evolutionary Pok\u00e9mon of Sarnori is considered to be around 500, considering Rillaboom 510.","b80fd3ce":"Special defense has an outlier (excellent value)","2e551edf":"One item that is receiving attention is **the race value**.  \n**The racial value** is the sum of values \u200b\u200bsuch as HP, attack power, and defense power.","a5f69584":"### violin plot by type","6027c13e":"## Correlation matrix","71589d99":"There are many Water Pokemon in type1 and Flying Pokemon in type2.","2270c69f":"## Scatter plot","0b7c5fcf":"The part where you are concerned about racial values, attributes, weak points, and effective hits.Even if the race value is high, it can be considered that the attribute loses, the rate and probability of being hit by a weak point increase, and the possibility of losing as a result increases.And there are four stages of excellent effect, not good, normal, no effect (no damage), and compatibility with the opponent becomes important.If you can find a Pokemon with a good balance, your chances of winning will increase.","adbcaccb":"Get a list of Pok\u00e9mon with a high level of at least 480 races.","14ab9235":"## violin plot","65c588d6":"Dragon, Psychic, and Water are the most common types of Pok\u00e9mon with a racial value over 480.","8bef24ef":"Water is the most, and Rock is the least."}}