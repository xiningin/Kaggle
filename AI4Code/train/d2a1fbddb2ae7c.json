{"cell_type":{"dcb46c5b":"code","0c6da4a7":"code","a1ba420f":"code","2359180d":"code","802a11c6":"code","d993d3ad":"code","51bc2e23":"code","bf15a8e7":"code","f1e631c5":"code","48e18270":"code","ca27e7bc":"code","8a670fec":"code","af3483af":"code","4f9df9b9":"code","740a1d40":"code","6efa608b":"code","04d6ecf0":"code","651f6a8d":"code","9df91459":"code","96f4681e":"code","10e5ef93":"code","dbc267d2":"code","213994cd":"code","4392d3d3":"code","9da51142":"code","52118765":"code","d26c34e9":"code","f2121320":"code","252fa771":"code","7ca56afe":"code","9809847e":"code","9c168a31":"code","107ac4c2":"code","8ce6574a":"markdown","45e47173":"markdown","0151aa11":"markdown","851e99a0":"markdown","a0fed2ef":"markdown","d91523a3":"markdown","42462507":"markdown","4458a9e4":"markdown","cbbde8b4":"markdown","5ee6c7fa":"markdown","77736527":"markdown"},"source":{"dcb46c5b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0c6da4a7":"df_train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ndf_test = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ndf_gender_submission = pd.read_csv(\"\/kaggle\/input\/titanic\/gender_submission.csv\")","a1ba420f":"df_train.head()","2359180d":"df_train.info()","802a11c6":"df_train.describe()","d993d3ad":"mean_age = df_train.Age.mean()","51bc2e23":"df_train.Age.fillna(mean_age,inplace=True)","bf15a8e7":"df_train.info()","f1e631c5":"df_train['Cabin'].value_counts()","48e18270":"X_dummies = pd.get_dummies(df_train['Embarked'])\nX_dummies.head()","ca27e7bc":"df_train = df_train.join(X_dummies)","8a670fec":"df_train.drop(columns=['Name','Embarked','Ticket','Cabin'],inplace=True)","af3483af":"df_train.info()","4f9df9b9":"total_peoples_train = df_train.shape[0]\nsurvived_people = df_train.Survived.value_counts()[1]\nnot_survived_people = df_train.Survived.value_counts()[0]\nprint(\"The number of people who survived is %.d peoples, this represent %.2f of total\" % (survived_people,100*survived_people\/(survived_people+not_survived_people)))","740a1d40":"males = df_train.Sex.value_counts()[0]\nfemales = df_train.Sex.value_counts()[1]\nprint(\"The number of males on Titanic is %.d peoples, this represent %.2f of total\" % (males,100*males\/(males+females)))\nprint(\"The number of females on Titanic is %.d peoples, this represent %.2f of total\" % (females,100*females\/(males+females)))","6efa608b":"import matplotlib.pyplot as plt\n\nplt.hist(df_train.Age,bins=8)","04d6ecf0":"plt.hist(df_train.Fare)","651f6a8d":"df_train.Fare.describe()","9df91459":"embarked_Cherbourg = df_train.C.sum()\nembarked_Queenstown = df_train.Q.sum()\nembarked_Southampton = df_train.S.sum()\nx_plot = [\"Cherbourg\",\"Queenstown\",\"Southampton\"]\ny_plot = [embarked_Cherbourg,embarked_Queenstown,embarked_Southampton]","96f4681e":"plt.bar(np.arange(len(x_plot)),y_plot,align='center',alpha=0.5)\nplt.xticks(np.arange(len(x_plot)), x_plot)\nplt.ylabel('N\u00ba of Passengers')\nplt.xlabel('Embarkation Place')","10e5ef93":"sex_dict = {\n    'male' : 0,\n    'female' : 1\n}","dbc267d2":"df_train.Sex = df_train.Sex.map(sex_dict)","213994cd":"df_train.head()","4392d3d3":"y_train = df_train.Survived\nx_train = df_train.drop(columns=['PassengerId','Survived'])","9da51142":"y_train.head()","52118765":"x_train.head()","d26c34e9":"x_train.info()","f2121320":"from sklearn.tree import DecisionTreeClassifier\n\n# Putting seed to reduce the effect of randomness\nSEED = 123\nnp.random.seed(SEED)\n\nmodel = DecisionTreeClassifier()\nmodel.fit(x_train,y_train)","252fa771":"df_test","7ca56afe":"X_dummies = pd.get_dummies(df_test['Embarked'])\nx_test = df_test.join(X_dummies)\nx_test.drop(columns=['Name','PassengerId','Embarked','Ticket','Cabin'],inplace=True)\nx_test.Sex = df_test.Sex.map(sex_dict)\nx_test.Age.fillna(mean_age,inplace=True)\nx_test.Fare.fillna(df_test.Fare.mean(),inplace=True)","9809847e":"x_test.isna().sum()","9c168a31":"y_predict = model.predict(x_test)","107ac4c2":"output = pd.DataFrame({'PassengerId': df_test.PassengerId, 'Survived': y_predict})\noutput.to_csv('output.csv', index=False)","8ce6574a":"Most people in Titanic were between 20 and 30 years old.","45e47173":"To get_dummies for Embarked.","0151aa11":"# Classifying ","851e99a0":"Our dataset is complete. Now, we will visualize the data better than when we started.","a0fed2ef":"Name, Ticket and Cabin are features that we will exclude (They are categorical features).","d91523a3":"The fares on Titanic costs about between 0 and 512 dollars. The mean fare costs 32 dollars. In another opportunity, we can explore the correlation between fares and cabins.","42462507":"It's important to join X_dummies in original dataset and drop the columns Embarked.","4458a9e4":"# Importing Datasets and Visualizing EDA ","cbbde8b4":"The shape of dataset is [891,7], but, in classes Age, Cabin and Embarked they aren't complete. In Age, we will complete with mean of the ages. In Embarked class we will using Dummies to transform categorical datas in boolean (True or False)","5ee6c7fa":"Loading test data and set output","77736527":"Let's go transform Sex feature in numerical variable and divide dataset to train. I'll use the begginer classifier on SKLearn, named DecisionTreeClassifier. "}}