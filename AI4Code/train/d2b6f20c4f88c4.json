{"cell_type":{"61095f93":"code","3183c966":"code","1c0d5675":"code","c7c2eb5d":"code","7ec408cf":"code","fbca20b5":"code","22a40830":"code","8dda9f50":"code","d6c54465":"code","096c5e6b":"code","6953d8c7":"code","20148852":"code","ae449950":"code","17a297d1":"code","1efc2e49":"code","69befe2b":"code","dbd4eb39":"code","5dd2b0b4":"code","a65b75b3":"markdown","8069a337":"markdown","de7da46b":"markdown","e8ec9ba8":"markdown","1013966f":"markdown","1518031e":"markdown","9d15e238":"markdown","677fc04b":"markdown","d212d6bf":"markdown","1502a13e":"markdown","e88b0244":"markdown"},"source":{"61095f93":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3183c966":"dataset = pd.read_csv(\"\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv\")","1c0d5675":"dataset.head()","c7c2eb5d":"dataset.info()","7ec408cf":"dataset = dataset.drop([\"id\"], axis = 1)","fbca20b5":"dataset = dataset.drop([\"Unnamed: 32\"], axis = 1)","22a40830":"dataset.head(3)","8dda9f50":"M = dataset[dataset.diagnosis == \"M\"]","d6c54465":"M.head(5)","096c5e6b":"B = dataset[dataset.diagnosis == \"B\"]","6953d8c7":"B.head(5)","20148852":"plt.title(\"Malignant vs Benign Tumor\")\nplt.xlabel(\"Radius Mean\")\nplt.ylabel(\"Texture Mean\")\nplt.scatter(M.radius_mean, M.texture_mean, color = \"red\", label = \"Malignant\", alpha = 0.3)\nplt.scatter(B.radius_mean, B.texture_mean, color = \"lime\", label = \"Benign\", alpha = 0.3)\nplt.legend()\nplt.show()","ae449950":"dataset.diagnosis = [1 if i == \"M\" else 0 for i in dataset.diagnosis]","17a297d1":"x = dataset.drop([\"diagnosis\"], axis = 1)\ny = dataset.diagnosis.values","1efc2e49":"# Normalization:\nx = (x - np.min(x)) \/ (np.max(x) - np.min(x))","69befe2b":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state = 42)","dbd4eb39":"from sklearn.naive_bayes import GaussianNB\nnb = GaussianNB()\nnb.fit(x_train, y_train)","5dd2b0b4":"print(\"Naive Bayes score: \",nb.score(x_test, y_test))","a65b75b3":"## Content:\n\n1. [Importing Dataset](#1)\n1. [Getting Info About Dataset](#2)\n1. [Dataset Visualization](#3)\n1. [Meaning Of Naive Bayes Algorithm](#4)\n1. [Naive Bayes with Sklearn](#5)","8069a337":"<a id = \"1\"><\/a>\n\n## 1. Importing Dataset:","de7da46b":"Now, let's get rid of \"id\" and \"Unnamed: 32\" features because we don't need to use them while diagnosing whether the patient has a cancer or not. ","e8ec9ba8":"<a id = \"5\"><\/a>\n# 5. KNN with Sklearn","1013966f":"![](https:\/\/www.intelkit.com\/wp-content\/uploads\/2020\/04\/Naive-bayes-1.png)","1518031e":"<a id = \"3\"><\/a>\n# 3. Dataset Visualization ","9d15e238":"> <a id = \"2\"><\/a>\n# 2. Getting Info About Dataset","677fc04b":"Column names and meanings:\n* id: ID number\n* diagnosis: The diagnosis of breast tissues (M = malignant, B = benign)\n* radius_mean: mean of distances from center to points on the perimeter\n* texture_mean: standard deviation of gray-scale values\n* perimeter_mean: mean size of the core tumor\n* area_mean: area of the tumor\n* smoothness_mean: mean of local variation in radius lengths\n* compactness_mean: mean of perimeter^2 \/ area - 1.0\n* concavity_mean: mean of severity of concave portions of the contour\n* concave_points_mean: mean for number of concave portions of the contour\n* symmetry_mean\n* fractal_dimension_mean: mean for \"coastline approximation\" - 1\n* radius_se: standard error for the mean of distances from center to points on the perimeter\n* texture_se: standard error for standard deviation of gray-scale values\n* perimeter_se\n* area_se\n* smoothness_se: standard error for local variation in radius lengths\n* compactness_se: standard error for perimeter^2 \/ area - 1.0\n* concavity_se: standard error for severity of concave portions of the contour\n* concave_points_se: standard error for number of concave portions of the contour\n* symmetry_se\n* fractal_dimension_se: standard error for \"coastline approximation\" - 1\n* radius_worst: \"worst\" or largest mean value for mean of distances from center to points on the perimeter\n* texture_worst: \"worst\" or largest mean value for standard deviation of gray-scale values\n* perimeter_worst\n* area_worst\n* smoothness_worst: \"worst\" or largest mean value for local variation in radius lengths\n* compactness_worst: \"worst\" or largest mean value for perimeter^2 \/ area - 1.0\n* concavity_worst: \"worst\" or largest mean value for severity of concave portions of the contour\n* concave_points_worst: \"worst\" or largest mean value for number of concave portions of the contour\n* symmetry_worst\n* fractal_dimension_worst: \"worst\" or largest mean value for \"coastline approximation\" - 1","d212d6bf":"Dataset information:\n\n* Dataset Characteristics: Multivariate\n* Attribute Characteristics: Real\n* Attribute Characteristics: Classification\n* Number of Instances: 569\n* Number of Attributes: 32\n* Missing Values: No","1502a13e":"<a id = \"4\"><\/a>\n# 4. Meaning Of Naive Bayes Algorithm","e88b0244":"# Naive Bayes Algorithm Implementation on Cancer Dataset"}}