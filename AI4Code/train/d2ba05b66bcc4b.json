{"cell_type":{"7a7645d0":"code","cc8c3f2d":"code","35b77ccd":"code","9971dd1a":"code","a375126a":"code","dc4a4be5":"code","3145c82e":"code","be9fa05f":"code","8d74486e":"code","e2d5f1b1":"code","b37f6a22":"code","24bc5829":"code","f4626e94":"code","6cab5c5e":"code","0170a8a4":"code","456d024d":"code","7a2c6438":"code","4a048883":"markdown","10f67526":"markdown","8ed8a1fa":"markdown","5a94e0a3":"markdown","ed6e7671":"markdown","baecb6dd":"markdown","afdf4c7d":"markdown","e17d2ffa":"markdown","01078fff":"markdown","1dcaec29":"markdown","cfd978c9":"markdown","2e8afb30":"markdown","581e6a71":"markdown","d07382e2":"markdown","66dc24e8":"markdown"},"source":{"7a7645d0":"import numpy as np\nimport pandas as pd\nfrom pandas_profiling import ProfileReport","cc8c3f2d":"from sklearn.datasets import load_diabetes","35b77ccd":"diab_data=load_diabetes()","9971dd1a":"\ndf=pd.DataFrame(data=diab_data.data,columns=diab_data.feature_names)","a375126a":"profile = ProfileReport(df, title='Pandas Profiling Report', explorative=True)","dc4a4be5":"\nprofile.to_file(\"output.html\")","3145c82e":"profile","be9fa05f":"# INSTALLATION:\n\n!pip install autoviz","8d74486e":"!pip install xlrd","e2d5f1b1":"#importing Autoviz class\nfrom autoviz.AutoViz_Class import AutoViz_Class\n#Instantiate the AutoViz class\nAV = AutoViz_Class()","b37f6a22":"\nfilename = \"..\/input\/pima-indians-diabetes-database\/diabetes.csv\"\nsep = \",\"\ndft = AV.AutoViz(\n    filename,\n    sep=\",\",\n    depVar=\"\",\n    dfte=None,\n    header=0,\n    verbose=0,\n    lowess=False,\n    chart_format=\"svg\",\n    max_rows_analyzed=150000,\n    max_cols_analyzed=30,\n)","24bc5829":"!pip install dtale","f4626e94":"import dtale","6cab5c5e":"df = pd.read_csv('..\/input\/pima-indians-diabetes-database\/diabetes.csv')","0170a8a4":"dtale.show(df)","456d024d":"!pip install sweetviz","7a2c6438":"import sweetviz as sv\nreport = sv.analyze(df) \nreport.show_html('output_sweetviz.html')","4a048883":"### THE OUTPUT WILL NOT BE DISPLAYED HERE. YOU CAN DOWNLOAD THE FILE FROM OUTPUT SECTION AND OPEN IT IN CHROME OR SOME OTHER HTML VIEWER.","10f67526":"#### CODE USING DIABETES DATASET:","8ed8a1fa":"\n![image.png](attachment:3d1c8fa7-ca8d-4557-85e6-6939d198f8f3.png)\n\n\nGenerates profile reports from a pandas DataFrame. The pandas df.describe() function is great but a little basic for serious exploratory data analysis. pandas_profiling extends the pandas DataFrame with df.profile_report() for quick data analysis.\n\nIn short, what pandas profiling does is save us all the work of visualizing and understanding the distribution of each variable. It generates a report with all the information easily available.\n\n**For each column the following statistics - if relevant for the column type - are presented in an interactive HTML report:**\n\n* Type inference: detect the types of columns in a dataframe.\n\n* Essentials: type, unique values, missing values\n\n* Quantile statistics like minimum value, Q1, median, Q3, maximum, range, interquartile range\n\n* Descriptive statistics like mean, mode, standard deviation, sum, median absolute deviation, coefficient of variation, kurtosis, skewness\n\n* Most frequent values\n\n* Histograms\n\n* Correlations highlighting of highly correlated variables, Spearman, Pearson and Kendall matrices\n\n* Missing values matrix, count, heatmap and dendrogram of missing values\n\n* Duplicate rows\n\n* Text analysis learn about categories (Uppercase, Space), scripts (Latin, Cyrillic) and blocks (ASCII) of text data.\n\n","5a94e0a3":"![](https:\/\/warehouse-camo.ingress.cmh1.psfhosted.org\/742ca2c2ae99cf9ab865549efabfaafb753e5483\/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f617363686f6e66656c642f6474616c652d6d656469612f6d61737465722f696d616765732f5469746c652e706e67)\n\n## HERE THE NAME ITSELF TELLS \"D-TALE\" : MEANS **DETAIL** ANALYSIS OF DATA\n\nD-Tale is the combination of a Flask back-end and a React front-end to bring you an easy way to view & analyze Pandas data structures. It integrates seamlessly with ipython notebooks & python\/ipython terminals. Currently this tool supports such Pandas objects as DataFrame, Series, MultiIndex, DatetimeIndex & RangeIndex.\n","ed6e7671":"### THE OUTPUT HAS NOT BEEN DISPLAYED HERE. YOU CAN RUN THIS CODE IN YOUR SYSTEM AND CAN SEE THE REPORT.","baecb6dd":"#### CODE:","afdf4c7d":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcRMqwP3APfSq3B3hFCs9BhwPQ-jvW3cjFnO0A&usqp=CAU)","e17d2ffa":"------------------------","01078fff":"Visualization is a technique that is used to visualize the data using different graphs and plots. In data science, we generally use data visualization techniques to understand the dataset and find the relation between the data. Visualization can also help in finding the pattern in the dataset which is used for further analysis.\n\nAutoViz performs automatic visualization of any dataset with one line. Give any input file (CSV, txt or json) and AutoViz will visualize it.","1dcaec29":"## HERE WE CAN SEE HOW BEAUTIFULLY THE PANDAS_PROFILING HAVE DONE THIS WORK. THIS SHOWS US EVERYTHING AS MENTIONED ABOVE.","cfd978c9":"### YOU CAN SEE THE TIME IT TOOK TO DISPLAY ALL THE VISUALS IS JUST 8.188 SECONDS. THIS LIBRARY HELPS US AND SOLVES OUR 20% OF THE WORK.","2e8afb30":"## CONCLUSION:\n\n**In this Notebook we have learned the flow of all the Automated Libraries for Both Exploratory Data Analysis and Visualization.**\n\n\n## IF THIS NOTEBOOK HELPS YOU, PLEASE GIVE AN UPVOTE","581e6a71":"## IN THIS NOTEBOOK - WE'LL BE IMPLEMENTING SOME AUTOMATED LIBRARIES WHICH MAKES THE MACHINE LEARNING TASK EASIER.\n\n--------------\n\n### LIBRARIES WE'LL BE WORKING ON ARE:\n\n--------------------\n\n#### 1. Pandas_Profiling\n#### 2. AutoViz\n#### 3. D-Tale\n#### 4. SweetViz","d07382e2":"![](https:\/\/autoviz.io\/static\/core\/img\/logo.png)","66dc24e8":"### CODE:"}}