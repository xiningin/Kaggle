{"cell_type":{"3aee80d5":"code","c9d498f3":"code","57ebd9b8":"code","12b7d69c":"code","6e667223":"code","732a8683":"code","f10a9a0e":"code","7d94f8b5":"code","64ee7e57":"code","0bee4786":"markdown","5fb08d7f":"markdown","e6b41982":"markdown","c4f01e0a":"markdown","834d1a11":"markdown","88c48664":"markdown","05608f74":"markdown","858ae0f1":"markdown","97960c4a":"markdown","5b30930a":"markdown"},"source":{"3aee80d5":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c9d498f3":"import numpy as np\nimport pandas as pd\nimport xgboost as xgb","57ebd9b8":"data = pd.read_csv(\"\/kaggle\/input\/iris\/Iris.csv\", index_col=0)\ndata.head()","12b7d69c":"from pandas.api.types import CategoricalDtype\nspecies = CategoricalDtype(data[\"Species\"].unique(), ordered=False)\nspecies","6e667223":"X = data[data.columns[0:4]].values\ny = data[\"Species\"].astype(species).cat.codes.values\ny = np.reshape(y, (-1,1))","732a8683":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","f10a9a0e":"dtrain = xgb.DMatrix(X_train, label=y_train)\ndtest = xgb.DMatrix(X_test, label=y_test)","7d94f8b5":"param = {\n    'max_depth': 2,\n    'eta': 0.1,\n    'objective': 'multi:softmax',\n    'num_class': 3\n}\n\nnum_round = 10\n\nbst = xgb.train(param, dtrain, num_round)","64ee7e57":"from sklearn.metrics import accuracy_score\n\npred = bst.predict(dtest)\naccuracy_score(y_test, pred)","0bee4786":"Checking how well we're doing on the test set, in terms of accuracy:","5fb08d7f":"First, checking the data directory for files.","e6b41982":"Imports:","c4f01e0a":"Let's take last column and create a categorical type from it:","834d1a11":"We're ready to split the data into train and test subsets:","88c48664":"Loading the data using Pandas, using the first column as Id column.","05608f74":"Train\/test sets in the XGBoost format:","858ae0f1":"We can take the first 4 columns and create features matrix from it (X), and convert the 'Species' column into a label variable (y) using the categorical type created before:","97960c4a":"That's it!","5b30930a":"Training the model for multi-class classification, 3 classes, with some basic settings:"}}