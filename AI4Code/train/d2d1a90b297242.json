{"cell_type":{"3802bcb4":"code","2551f9e4":"code","6dc2e4b5":"code","24417973":"code","4b89ea62":"code","0dedb11d":"code","8d0b10c9":"code","41740706":"code","c29a2e03":"code","c9f4e698":"code","62b21fe3":"code","ffa0f53f":"code","45bc1319":"code","029c6711":"code","a42c61a4":"code","dd6c6408":"code","216bc893":"code","c5811fe9":"code","712f0c49":"code","9d96f6d8":"code","f8de0dc0":"code","734fdc49":"code","18fb447e":"code","61800996":"markdown"},"source":{"3802bcb4":"import pandas as pd\nimport numpy as np\nimport matplotlib as plt\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\n\nfrom sklearn.ensemble import RandomForestClassifier\n\nfrom sklearn.experimental import enable_iterative_imputer\nfrom sklearn.impute import IterativeImputer\n\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.model_selection import GridSearchCV","2551f9e4":"df_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('..\/input\/titanic\/test.csv')\n\nX_a = df_train.drop(columns='Survived')\ny_a = df_train['Survived']\n\nX_b = df_test","6dc2e4b5":"X_a.head()","24417973":"X_a = X_a.drop(columns=['Ticket','Cabin','Name','PassengerId'])","4b89ea62":"X_a['Embarked']","0dedb11d":"X_a[['C','Q','S']] = pd.get_dummies(X_a['Embarked'])\nX_a[['M','F']] = pd.get_dummies(X_a['Sex'])","8d0b10c9":"X_a.head()","41740706":"X_a = X_a.drop(columns=['Sex','Embarked'])","c29a2e03":"pd.isnull(X_a).any()","c9f4e698":"ii = IterativeImputer(max_iter=20,n_nearest_features=5)\nX_a['Age'] = ii.fit_transform(X_a[['Age']])","62b21fe3":"X_train, X_test, y_train, y_test = train_test_split(X_a,y_a,test_size=.2)","ffa0f53f":"params ={\n    'n_estimators':[75,100,200,500,750,1000],\n    'random_state':[0,42,95,115,250],\n    'ccp_alpha':[.001,.002,.003,.004,.005],\n    'max_depth':[1,2,4]\n    \n}","45bc1319":"rand_forest = RandomForestClassifier()\ngrid = RandomizedSearchCV(rand_forest,params,verbose=True,n_iter=20)\ngrid.fit(X_train,y_train)\nrf_2 = grid.best_estimator_","029c6711":"print(rf_2)","a42c61a4":"from sklearn.ensemble import AdaBoostClassifier","dd6c6408":"params_ada={\n    'n_estimators':[200],\n    'learning_rate':[.05]\n}","216bc893":"ada = AdaBoostClassifier(base_estimator=rf_2)\ngrid_ada = GridSearchCV(ada,params_ada,verbose=True)\ngrid_ada.fit(X_train,y_train)\nbest_ada = grid_ada.best_params_\npredict_tr = grid_ada.predict(X_test)","c5811fe9":"print(best_ada)","712f0c49":"print(classification_report(predict_tr,y_test))","9d96f6d8":"X_b = X_b.drop(columns=['Ticket','Cabin','Name','PassengerId'])\n\nX_b[['C','Q','S']] = pd.get_dummies(X_b['Embarked'])\nX_b[['M','F']] = pd.get_dummies(X_b['Sex'])\n\nX_b = X_b.drop(columns=['Sex','Embarked'])\n\nii = IterativeImputer(max_iter=20,n_nearest_features=7)\nX_b['Age'] = ii.fit_transform(X_b[['Age']])\n\nii = IterativeImputer(max_iter=20,n_nearest_features=7)\nX_b['Fare'] = ii.fit_transform(X_b[['Fare']])","f8de0dc0":"rand_forest = RandomForestClassifier()\ngrid = RandomizedSearchCV(rand_forest,params,verbose=True,n_iter=20)\ngrid.fit(X_a,y_a)\nrf_te = grid.best_estimator_","734fdc49":"ada = AdaBoostClassifier(base_estimator=rf_te)\ngrid_ada = GridSearchCV(ada,params_ada,verbose=True)\ngrid_ada.fit(X_a,y_a)\npredict_te = grid_ada.predict(X_b)","18fb447e":"sub_ten = df_test[['PassengerId']].copy()\nsub_ten['Survived'] = predict_te\nsub_ten.to_csv('titanic_sub_ten', index=False)","61800996":"Running this grid search on cpu can take hours depending on the amount of options you feed it, so for the sake of time I just input two values that I know work well enough."}}