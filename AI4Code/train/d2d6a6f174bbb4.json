{"cell_type":{"155d51be":"code","3e752a7e":"code","8c7cfa54":"code","6542523e":"code","0700151b":"code","6d3b1a49":"code","5b7c08e1":"code","3a8b3492":"code","7a88389e":"code","a216f8e9":"code","b9da87ce":"code","d464611e":"code","418b4e50":"code","233b3330":"code","df350857":"code","22d00738":"code","9b7a1332":"code","5bb5519a":"code","33fbb4be":"markdown","796f289f":"markdown","65a19e1d":"markdown","93081846":"markdown","7e9306b3":"markdown","9ca509b9":"markdown","b9de4ebb":"markdown","75cc0800":"markdown","24470d3e":"markdown","2cb193ee":"markdown","a77794b4":"markdown","3e300620":"markdown","7efb0acf":"markdown","99380fc0":"markdown","0b209c7e":"markdown","38fc3047":"markdown","0b7b9ef8":"markdown"},"source":{"155d51be":"import numpy as np \nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3e752a7e":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntrain.head()","8c7cfa54":"test.head()","6542523e":"print(train.isnull().sum())\nprint(test.isnull().sum())","0700151b":"train[\"Age\"]=train[\"Age\"].fillna(train[\"Age\"].median())\ntest[\"Age\"]=test[\"Age\"].fillna(test[\"Age\"].median())\ntest[\"Fare\"]=test[\"Fare\"].fillna(test[\"Fare\"].median())\ntrain[\"Embarked\"]=train[\"Embarked\"].fillna(\"S\")\nprint(train.isnull().sum())\nprint(test.isnull().sum())","6d3b1a49":"train[\"Sex\"][train[\"Sex\"] == \"male\"] = 0\ntrain[\"Sex\"][train[\"Sex\"] == \"female\"] = 1\ntest[\"Sex\"][test[\"Sex\"] == \"male\"] = 0\ntest[\"Sex\"][test[\"Sex\"] == \"female\"] = 1","5b7c08e1":"train[\"Embarked\"][train[\"Embarked\"]== \"S\"] = 0\ntrain[\"Embarked\"][train[\"Embarked\"]== \"C\"] =1\ntrain[\"Embarked\"][train[\"Embarked\"]== \"Q\"] =2\ntest[\"Embarked\"][test[\"Embarked\"]== \"S\"] = 0\ntest[\"Embarked\"][test[\"Embarked\"]== \"C\"] =1\ntest[\"Embarked\"][test[\"Embarked\"]== \"Q\"] =2","3a8b3492":"y = train.loc[:,[\"Survived\"]]\nx = train.loc[:,[\"Sex\",\"Age\",\"Pclass\",\"SibSp\",\"Fare\",\"Embarked\"]]\nprint(x,y)","7a88389e":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.1,shuffle=True,random_state=0)\nprint(x_train,x_test,y_train,y_test)","a216f8e9":"from sklearn import tree\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.ensemble import RandomForestClassifier","b9da87ce":"param1 = {\"n_estimators\":[10,20,30],\n         \"max_depth\":[1,2,3,4,5],\n         \"min_samples_leaf\":[1,2,3,4,5],\n         \"min_samples_split\":[2,3,4,5],\n        }","d464611e":"clf = GridSearchCV(RandomForestClassifier(random_state=0),param1,cv=5)\nclf = clf.fit(x_train,y_train.values.ravel())","418b4e50":"best_clf=clf.best_estimator_\nprint(\"\u6700\u826f\u6761\u4ef6:\\n\",best_clf)\nprint(\"\u8a13\u7df4\u30b9\u30b3\u30a2:\\n\",best_clf.score(x_train,y_train))\nprint(\"\u30c6\u30b9\u30c8\u30b9\u30b3\u30a2\\n\",best_clf.score(x_test,y_test))","233b3330":"clf = RandomForestClassifier(max_depth=5,min_samples_leaf=3,n_estimators=20,random_state=0)\nclf = clf.fit(x_train,y_train.values.ravel())","df350857":"import matplotlib.pyplot as plt\ndef plot_feature_importances(model):\n    n_features = x.shape[1]\n    plt.barh(range(n_features),model.feature_importances_,align=\"center\")\n    plt.yticks(np.arange(n_features),x)\n    plt.xlabel(\"importance\")\n    plt.ylabel(\"features\")\n    plt.show\nplot_feature_importances(clf)\nplt.savefig(\"Features Importances\")","22d00738":"X= test.loc[:,[\"Sex\",\"Age\",\"Pclass\",\"SibSp\",\"Fare\",\"Embarked\"]]\nY=clf.predict(X)\nprint(Y)","9b7a1332":"PassengerId = np.array(test[\"PassengerId\"]).astype(int)\nresult = pd.DataFrame(Y,PassengerId,columns = [\"Survived\"])\nprint(result)","5bb5519a":"result.to_csv(\"my_submission.csv\",index_label = [\"PassengerId\"])\nprint(\"Your submission was successfully saved!\")","33fbb4be":"\u30c1\u30e5\u30fc\u30ea\u30f3\u30b0\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf","796f289f":"1. **\u30c7\u30fc\u30bf\u5165\u529b**","65a19e1d":"11.**\u7d50\u679c\u306e\u51fa\u529b**","93081846":"male\u30920 female\u30921\u306b\u3059\u308b","7e9306b3":"**\u30bf\u30a4\u30bf\u30cb\u30c3\u30af\u53f7\u306e\u5206\u6790**","9ca509b9":"8.**\u7d50\u679c\u306e\u78ba\u8a8d**","b9de4ebb":"4.**\u30ab\u30c6\u30b4\u30ea\u30ab\u30eb\u30c7\u30fc\u30bf\u306e\u6570\u5024\u5316**","75cc0800":"6.**\u30c7\u30fc\u30bf\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3068\u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u306b\u5206\u3051\u308b(\u5206\u5272\u6bd4\u73879:1)**","24470d3e":"2. **\u6b20\u640d\u306e\u78ba\u8a8d**","2cb193ee":"3.**\u6b20\u640d\u306e\u5bfe\u51e6**","a77794b4":"10.**\u4e88\u6e2c**","3e300620":"\u5bfe\u8c61\u30b3\u30f3\u30da : https:\/\/www.kaggle.com\/c\/titanic","7efb0acf":"Age\u3068Fare\u3092\u4e2d\u592e\u5024\u3001Embarked\u3092\u6700\u983b\u5024\u3067\u88dc\u5b8c","99380fc0":"7.**\u30e2\u30c7\u30eb\u69cb\u7bc9**","0b209c7e":"5.**\u30c7\u30fc\u30bf\u306e\u6574\u7406**","38fc3047":"9.**\u5404\u7279\u5fb4\u91cf\u306e\u91cd\u8981\u5ea6\u306e\u53ef\u8996\u5316**","0b7b9ef8":"S\u30920 C\u30921 Q\u30922\u306b\u3059\u308b"}}