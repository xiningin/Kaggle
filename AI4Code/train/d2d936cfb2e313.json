{"cell_type":{"659aa5e7":"code","10862654":"code","5fef5d3b":"code","59da4011":"code","9d993203":"code","0c13ceaa":"code","8f24dc07":"code","527a26be":"code","5a439f85":"code","c51b48de":"code","2252dcc6":"code","95bbcc6a":"markdown","a8bed5b3":"markdown","a57709c7":"markdown","bf87f0ab":"markdown","0506f189":"markdown"},"source":{"659aa5e7":"import numpy as np\nimport pandas as pd \nimport os\nimport time \nimport albumentations as A\nfrom albumentations.pytorch import ToTensorV2\nfrom collections import defaultdict\nfrom tqdm import tqdm\nfrom sklearn import model_selection, preprocessing \nimport cv2\nfrom matplotlib import pyplot as plt\nfrom PIL import Image\nimport copy\n","10862654":"ROOT_DIR = \"..\/input\/hpa-single-cell-image-classification\"\ntrain_dir = \"..\/input\/hpa-single-cell-image-classification\/train\"","5fef5d3b":"os.listdir(ROOT_DIR)","59da4011":"df = pd.read_csv(os.path.join(ROOT_DIR, \"train.csv\"))\ndf.head()","9d993203":"df.ID.unique","0c13ceaa":"import random \nimg_list = sorted(os.listdir(os.path.join(ROOT_DIR, \"train\/\")))\nfig, ax = plt.subplots(3, 3, figsize = (12, 12))\n\nfor row in range(3):\n    for col in range(3):\n        rand_idx = np.random.randint(len(img_list))\n        img = Image.open(os.path.join(ROOT_DIR, \"train\/\"+img_list[rand_idx]))\n        ax[row, col].imshow(img)\n        \n                    \nfig.show()","8f24dc07":"sample_submission_data = pd.read_csv(os.path.join(ROOT_DIR, \"sample_submission.csv\"))\nsample_submission_data.head(5)","527a26be":"sorted(os.listdir(\"..\/input\/hpa-single-cell-image-classification\/train\"))[:10]","5a439f85":"df.Label[:5].value_counts().plot.bar(figsize=(12, 8))\nplt.show()","c51b48de":"labels = df.Label.unique().tolist()\nlabels = (\"|\").join(labels)\nlabels = labels.split(\"|\")\nn = len(list(set(labels)))\nlabels = sorted(list(set(labels)),  key = int)\nlabels = \" \".join(labels)\nprint(\"{} Number of unique labels: {} \".format(n, labels))","2252dcc6":"import random \nimg_list = sorted(os.listdir(os.path.join(ROOT_DIR, \"train\/\")))\nfig, ax = plt.subplots(1, 4, figsize = (20, 20))\nb = Image.open(os.path.join(ROOT_DIR, \"train\/\"+img_list[0]))\ng = Image.open(os.path.join(ROOT_DIR, \"train\/\"+img_list[1]))\nr = Image.open(os.path.join(ROOT_DIR, \"train\/\"+img_list[2]))\ny = Image.open(os.path.join(ROOT_DIR, \"train\/\"+img_list[3]))\n\nimages = [np.dstack((b,g,r)),\n       np.dstack((b,r,y)), \n       np.dstack((b,g,y)), \n       np.dstack((g,r,y))]\n\nfor i, img in enumerate(images):\n    ax[i].imshow(img)\n    ax[i].set_title(f\"image{i+1}\")\n    ax[i].axis(\"off\")\nplt.show()","95bbcc6a":"**So every image has 4 channel blue, green, red and yellow**","a8bed5b3":"**Let's see unique labels**","a57709c7":"# **Lets's Combine channels and visualize images**","bf87f0ab":"# Continue ... ","0506f189":"# Let's plot few dataset "}}