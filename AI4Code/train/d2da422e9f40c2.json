{"cell_type":{"df150fe2":"code","55969943":"code","c1046254":"code","7a7ec323":"code","72833ef4":"code","7802a837":"code","2d752226":"code","b61c7340":"code","b3630c5c":"code","109973d7":"code","1ee08539":"code","3d9571ce":"code","3d69bf4a":"markdown","5c86c2cb":"markdown","8acd48c8":"markdown","eedf23bb":"markdown","39161150":"markdown","10c883ab":"markdown","f610cd97":"markdown"},"source":{"df150fe2":"import numpy as np\nimport pandas as pd\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nimport matplotlib.pyplot as plt\nimport os\nimport tqdm","55969943":"SEED = 123\nNROWS = None #500\nIMAGE_SIZE = (128, 128)\n\nif 'KAGGLE_URL_BASE' in os.environ:\n    TRAIN_IMAGES_DIR = \"..\/input\/petfinder-pawpularity-score\/train\"\n    TRAIN_DS = \"..\/input\/petfinder-pawpularity-score\/train.csv\"\n    TEST_IMAGES_DIR = \"..\/input\/petfinder-pawpularity-score\/test\"\n    TEST_DS = \"..\/input\/petfinder-pawpularity-score\/test.csv\"\n    SUBMISSION_IMAGES_DIR = \"..\/input\/petfinder-pawpularity-score\/test\"\n    SUBMISSION_DS = \"..\/input\/petfinder-pawpularity-score\/test.csv\"\nelse:\n    TRAIN_IMAGES_DIR = \"data\/sub\/train\"\n    TRAIN_DS = \"data\/sub\/train.csv\"\n    TEST_IMAGES_DIR = \"data\/sub\/test\"\n    TEST_DS = \"data\/sub\/test.csv\"\n    SUBMISSION_IMAGES_DIR = \"data\/test\"\n    SUBMISSION_DS = \"data\/test.csv\"\n\nINPUT_SHAPE = (*IMAGE_SIZE, 3)\nBATCH_SIZE = 32\nVALIDATION_SPLIT = 0.1\nEPOCHS = 15","c1046254":"!nvidia-smi","7a7ec323":"def read_images(img_dir, dataset):\n    images = [None] * len(dataset)\n    for index, img_id in enumerate(tqdm.tqdm(list(dataset.Id))):\n        img = keras.preprocessing.image.load_img(f\"{img_dir}\/{img_id}.jpg\", \n                                                 target_size=IMAGE_SIZE,\n                                                 interpolation=\"bilinear\")\n        #img = keras.preprocessing.image.load_img(f\"{img_dir}\/{img_id}.jpg\")\n        #img = keras.preprocessing.image.smart_resize(img, IMAGE_SIZE)\n        img = keras.preprocessing.image.img_to_array(img) \/ 255.\n        images[index] = img\n    return np.array(images)","72833ef4":"train_ds = pd.read_csv(TRAIN_DS, nrows=NROWS)\ntrain_img = read_images(TRAIN_IMAGES_DIR, train_ds)\ntrain_img.shape","7802a837":"plt.imshow(train_img[99])","2d752226":"model = keras.Sequential(\n    [\n        keras.Input(shape=INPUT_SHAPE),\n#        layers.Conv2D(32, kernel_size=(3, 3), activation=\"relu\"),\n#        layers.MaxPooling2D(pool_size=(2, 2)),\n#        layers.Conv2D(32, kernel_size=(3, 3), activation=\"relu\"),\n#        layers.MaxPooling2D(pool_size=(2, 2)),\n#        layers.Conv2D(64, kernel_size=(5, 5), activation=\"relu\"),\n#        layers.MaxPooling2D(pool_size=(2, 2)),\n        layers.Conv2D(256, kernel_size=(3, 3), activation=\"relu\"),\n        layers.MaxPooling2D(pool_size=(2, 2)),\n        layers.Conv2D(128, kernel_size=(3, 3), activation=\"relu\"),\n        layers.MaxPooling2D(pool_size=(2, 2)),\n        layers.Conv2D(64, kernel_size=(5, 5), activation=\"relu\"),\n        layers.MaxPooling2D(pool_size=(2, 2)),\n        layers.Flatten(),\n        layers.Dropout(0.5),\n        layers.Dense(512, activation=\"relu\"),\n        layers.Dropout(0.5),\n        layers.Dense(1, activation=\"linear\"),\n    ]\n)\n\nmodel.summary()","b61c7340":"x_train = train_img\ny_train = train_ds.Pawpularity.values\noptimizer = keras.optimizers.Adam()\nreduce_lr = keras.callbacks.ReduceLROnPlateau(\n    monitor=\"val_root_mean_squared_error\",\n    patience=2,\n    factor=0.1,\n    verbose=1\n)\n\nmodel.compile(loss=\"mse\", \n              optimizer=\"adam\",\n              metrics=[keras.metrics.RootMeanSquaredError()])","b3630c5c":"model.fit(x_train, y_train, \n          batch_size=BATCH_SIZE, \n          epochs=EPOCHS, \n          callbacks=[reduce_lr],\n          validation_split=VALIDATION_SPLIT)","109973d7":"test_ds = pd.read_csv(TEST_DS)\nif \"Pawpularity\" in test_ds.columns:\n    #Si no existe es que no es DS de evaluacion sino el de submission\n    test_images = read_images(TEST_IMAGES_DIR, test_ds)\n    model.evaluate(test_images, test_ds.Pawpularity.values)","1ee08539":"subms_ds = pd.read_csv(SUBMISSION_DS)\nsubms_img = read_images(SUBMISSION_IMAGES_DIR, subms_ds)\npredictions = model.predict(subms_img)\npredictions[:5]","3d9571ce":"subms_ds[\"Pawpularity\"] = predictions\nsubms_ds[[\"Id\", \"Pawpularity\"]].to_csv(\"submission.csv\", index=False)","3d69bf4a":"## Prepare the data","5c86c2cb":"## Setup","8acd48c8":"## Evaluate the trained model","eedf23bb":"# Simple PAWPULARITY convnet\n\nBased on https:\/\/keras.io\/examples\/vision\/mnist_convnet\/ by [fchollet](https:\/\/twitter.com\/fchollet)\n","39161150":"## Train the model","10c883ab":"# Submission","f610cd97":"## Build the model"}}