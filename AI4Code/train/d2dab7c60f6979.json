{"cell_type":{"7febac02":"code","906ee21b":"code","a1643ecd":"code","ba15ed3f":"code","ae82c658":"code","84b770cb":"code","cc0bdbc4":"code","0c9d9f42":"code","0e2d9f8d":"code","a649827d":"code","6aed3626":"code","d7c74819":"code","b45174c2":"code","159a970a":"code","f7c4bccb":"code","5b4439ee":"code","2d010e17":"code","fd1261e2":"code","cd1f9604":"code","d32f6900":"code","039fac97":"code","bacdc61d":"code","89c05a7a":"code","137d4496":"code","aceaab8b":"code","4ee217af":"code","d1c4e1c9":"code","e28c6bb5":"code","2c7683a2":"code","f19f382b":"code","bc9a7a67":"code","2991db92":"code","066d3dd5":"code","fe19fdb4":"code","b3cbd1c3":"code","f0270c8d":"code","ee9a4ace":"code","aa9fadec":"code","6b9fdd60":"code","487ad26c":"code","8460aff2":"code","80456fc9":"code","e8ea5660":"code","c951abfc":"code","4cf81950":"code","f0a8a8df":"code","3aab22fd":"code","599ebd77":"code","c2bf8436":"markdown","c0df4617":"markdown"},"source":{"7febac02":"import pandas as pd\npd.set_option('display.max_columns', 20)","906ee21b":"movie = pd.read_csv('..\/input\/movielense20m\/movie.csv')\nmovie.shape\nrating = pd.read_csv('..\/input\/movielense20m\/rating.csv')\nrating.shape\ndf = movie.merge(rating, how=\"left\", on=\"movieId\")\ndf.head()","a1643ecd":"df.shape","ba15ed3f":"df[\"title\"].nunique()","ae82c658":"df[\"title\"].value_counts().head()","84b770cb":"comment_counts = pd.DataFrame(df[\"title\"].value_counts())\nrare_movies = comment_counts[comment_counts[\"title\"] <= 1000].index\ncommon_movies = df[~df[\"title\"].isin(rare_movies)]","cc0bdbc4":"common_movies.shape","0c9d9f42":"common_movies[\"title\"].nunique()","0e2d9f8d":"user_movie_df = common_movies.pivot_table(index=[\"userId\"], columns=[\"title\"], values=\"rating\")","a649827d":"user_movie_df.shape","6aed3626":"user_movie_df.head()","d7c74819":"user_movie_df.columns","b45174c2":"len(user_movie_df.columns)","159a970a":"common_movies[\"title\"].nunique()","f7c4bccb":"random_user = int(pd.Series(user_movie_df.index).sample(1, random_state=45).values)","5b4439ee":"random_user_df = user_movie_df[user_movie_df.index == random_user]","2d010e17":"movies_watched = random_user_df.columns[random_user_df.notna().any()].tolist() #kullan\u0131c\u0131n\u0131n izledi\u011fi filmler","fd1261e2":"user_movie_df.loc[user_movie_df.index == random_user, user_movie_df.columns == \"Jurassic Park (1993)\"]","cd1f9604":"# 33 movies watched\nlen(movies_watched) ","d32f6900":"pd.set_option('display.max_columns', 5)\nmovies_watched_df = user_movie_df[movies_watched]","039fac97":"movies_watched_df.head()","bacdc61d":"# Including those who watched at least one of the 33 movies.\nmovies_watched_df.shape ","89c05a7a":"user_movie_count = movies_watched_df.T.notnull().sum() #her bir kullan\u0131c\u0131 i\u00e7in kullan\u0131c\u0131 ka\u00e7 tane film izlemi\u015f onu yakalad\u0131k.","137d4496":"user_movie_count = user_movie_count.reset_index()","aceaab8b":"user_movie_count.columns = [\"userId\", \"movie_count\"]","4ee217af":"user_movie_count[user_movie_count[\"movie_count\"] > 20].sort_values(\"movie_count\", ascending=False)","d1c4e1c9":"user_movie_count[user_movie_count[\"movie_count\"] == 33].count()","e28c6bb5":"perc = len(movies_watched) * 60 \/ 100 ","2c7683a2":"# IDs of people who watched 60% of the same movie as the user\nusers_same_movies = user_movie_count[user_movie_count[\"movie_count\"] > perc][\"userId\"] ","f19f382b":"users_same_movies.count()","bc9a7a67":"final_df = pd.concat([movies_watched_df[movies_watched_df.index.isin(users_same_movies.index)],\n                      random_user_df[movies_watched]])","2991db92":"final_df.shape","066d3dd5":"final_df.T.corr()","fe19fdb4":"corr_df = final_df.T.corr().unstack().sort_values().drop_duplicates()","b3cbd1c3":"corr_df = pd.DataFrame(corr_df, columns=[\"corr\"])","f0270c8d":"corr_df.index.names = ['user_id_1', 'user_id_2']","ee9a4ace":"corr_df = corr_df.reset_index() #user 1 kullan\u0131c\u0131 user 2 di\u011fer kullan\u0131c\u0131lar.","aa9fadec":"top_users = corr_df[(corr_df[\"user_id_1\"] == random_user) & (corr_df[\"corr\"] >= 0.65)][\n    [\"user_id_2\", \"corr\"]].reset_index(drop=True) #kullan\u0131c\u0131 ile 65 korelasyona sahip olanlar","6b9fdd60":"top_users = top_users.sort_values(by='corr', ascending=False) # kullan\u0131c\u0131 ile en fazla corelasyona sahip olanlar","487ad26c":"top_users.rename(columns={\"user_id_2\": \"userId\"}, inplace=True)","8460aff2":"rating = pd.read_csv('..\/input\/movielense20m\/rating.csv')\ntop_users_ratings = top_users.merge(rating[[\"userId\", \"movieId\", \"rating\"]], how='inner')","80456fc9":"# We can anayze with correlation and rating factors\ntop_users_ratings['weighted_rating'] = top_users_ratings['corr'] * top_users_ratings['rating']","e8ea5660":"# singularize by movies\ntop_users_ratings.groupby('movieId').agg({\"weighted_rating\": \"mean\"}) #filmlere g\u00f6re tekille\u015ftirildi","c951abfc":"recommendation_df = top_users_ratings.groupby('movieId').agg({\"weighted_rating\": \"mean\"})\nrecommendation_df = recommendation_df.reset_index()","4cf81950":"movies_to_be_recommend = recommendation_df[recommendation_df[\"weighted_rating\"] > 4].sort_values(\"weighted_rating\", ascending=False)\n","f0a8a8df":"#user based\nmovie = pd.read_csv('..\/input\/movielense20m\/movie.csv')\nmovies_to_be_recommend.merge(movie[[\"movieId\", \"title\"]])[\"title\"].head()","3aab22fd":"user = 28941\nmovie = pd.read_csv('..\/input\/movielense20m\/movie.csv')\nrating = pd.read_csv('..\/input\/movielense20m\/rating.csv')\nmovie_id = rating[(rating[\"userId\"] == user) & (rating[\"rating\"] == 5.0)].sort_values(by=\"timestamp\", ascending = False)[\"movieId\"][0:1].values[0]\n                 ","599ebd77":"# item based\nmovie_name = movie[movie['movieId'] == movie_id]['title'].values[0]\nmovie_name = user_movie_df[movie_name]\nmovies_from_item_based = user_movie_df.corrwith(movie_name).sort_values(ascending=False)\nmovies_from_item_based[1:6].index","c2bf8436":"**Hybrid Recommender Sytem**","c0df4617":"Recommender system is an information filtering system that aims to predict the amount of evaluation or preference a user will give to an item.\n\n4 type of recommender system are very popular, these are:\n* Simple Recommender System\n* Association Rule Learning\n* Content Based Filtering\n* Collaborative Filtering\n   *  User-based\n   *  Item-based\n   *  Model-based\n   \nIn this study, I am going to analyze that Collaborative Filtering with item based and user based model.\n\n**Item-based :** Suggestions are made based on the similarity of the films, items, etc.\n\n**User-based :** is a technique used to predict the items that a user might like on the basis of ratings given to that item by the other users who have similar taste with that of the target user."}}