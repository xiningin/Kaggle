{"cell_type":{"d3fd9246":"code","5bbd52d5":"code","c789da58":"code","63947af6":"code","bb4f3807":"code","871982b4":"code","53a78bf1":"code","7819f0da":"code","b09ce599":"code","62df526b":"code","a63b9194":"markdown","d58ae788":"markdown","91c78472":"markdown","3b612d04":"markdown","9ec8c4f7":"markdown","c1ca3d7b":"markdown"},"source":{"d3fd9246":"import numpy as np, pandas as pd \nimport gc, os\nfrom datetime import datetime\n\n","5bbd52d5":"TrainRawPath = \"..\/input\/train.csv\"\nTestRawPath = \"..\/input\/test.csv\"\n","c789da58":"def LoadTrainRaw(inputPath=TrainRawPath, verbose=False):    \n    \n    if (verbose==True):\n        starttime = datetime.now()\n        print(starttime)\n    \n    # save memory\n    TrainRawColumnNames = ['MachineIdentifier', 'ProductName', 'EngineVersion', 'AppVersion', 'AvSigVersion', 'IsBeta', 'RtpStateBitfield', 'IsSxsPassiveMode', 'DefaultBrowsersIdentifier', 'AVProductStatesIdentifier', 'AVProductsInstalled', 'AVProductsEnabled', 'HasTpm', 'CountryIdentifier', 'CityIdentifier', 'OrganizationIdentifier', 'GeoNameIdentifier', 'LocaleEnglishNameIdentifier', 'Platform', 'Processor', 'OsVer', 'OsBuild', 'OsSuite', 'OsPlatformSubRelease', 'OsBuildLab', 'SkuEdition', 'IsProtected', 'AutoSampleOptIn', 'PuaMode', 'SMode', 'IeVerIdentifier', 'SmartScreen', 'Firewall', 'UacLuaenable', 'Census_MDC2FormFactor', 'Census_DeviceFamily', 'Census_OEMNameIdentifier', 'Census_OEMModelIdentifier', 'Census_ProcessorCoreCount', 'Census_ProcessorManufacturerIdentifier', 'Census_ProcessorModelIdentifier', 'Census_ProcessorClass', 'Census_PrimaryDiskTotalCapacity', 'Census_PrimaryDiskTypeName', 'Census_SystemVolumeTotalCapacity', 'Census_HasOpticalDiskDrive', 'Census_TotalPhysicalRAM', 'Census_ChassisTypeName', 'Census_InternalPrimaryDiagonalDisplaySizeInInches', 'Census_InternalPrimaryDisplayResolutionHorizontal', 'Census_InternalPrimaryDisplayResolutionVertical', 'Census_PowerPlatformRoleName', 'Census_InternalBatteryType', 'Census_InternalBatteryNumberOfCharges', 'Census_OSVersion', 'Census_OSArchitecture', 'Census_OSBranch', 'Census_OSBuildNumber', 'Census_OSBuildRevision', 'Census_OSEdition', 'Census_OSSkuName', 'Census_OSInstallTypeName', 'Census_OSInstallLanguageIdentifier', 'Census_OSUILocaleIdentifier', 'Census_OSWUAutoUpdateOptionsName', 'Census_IsPortableOperatingSystem', 'Census_GenuineStateName', 'Census_ActivationChannel', 'Census_IsFlightingInternal', 'Census_IsFlightsDisabled', 'Census_FlightRing', 'Census_ThresholdOptIn', 'Census_FirmwareManufacturerIdentifier', 'Census_FirmwareVersionIdentifier', 'Census_IsSecureBootEnabled', 'Census_IsWIMBootEnabled', 'Census_IsVirtualDevice', 'Census_IsTouchEnabled', 'Census_IsPenCapable', 'Census_IsAlwaysOnAlwaysConnectedCapable', 'Wdft_IsGamer', 'Wdft_RegionIdentifier', 'HasDetections']\n    TrainRawColumnTypes = ['U', 'category', 'category', 'category', 'category', 'int8','float16','float32','float16','float16','float16','float16','int8','int16','float32','float16','float16','int16','category','category','category','int16','int16','category','category','category','float16','int8','category','float16','float16','category','float16','float32','category','category','float16','float32','float16','float16','float16','category','float32','category','float32','int8','float32','category','float16','float16','float16','category','category','float32','category','category','category','int16','int32','category','category','category','float16','int16','category','int8','category','category','float16','float16','category','float16','float16','float32','int8','float16','float16','int8','int8','float16','float16','float16','int8']\n\n    \n    output = pd.read_csv(inputPath, header=0, dtype=dict(zip(TrainRawColumnNames, TrainRawColumnTypes)))\n    \n    if (verbose==True):\n        endtime = datetime.now()\n        print(starttime)\n        print(endtime-starttime)\n\n    return output\n\n","63947af6":"def LoadTestRaw(inputPath=TestRawPath, verbose=False):    \n    \n    if (verbose==True):\n        starttime = datetime.now()\n        print(starttime)\n    \n    # save memory\n    TestRawColumnNames = ['MachineIdentifier', 'ProductName', 'EngineVersion', 'AppVersion', 'AvSigVersion', 'IsBeta', 'RtpStateBitfield', 'IsSxsPassiveMode', 'DefaultBrowsersIdentifier', 'AVProductStatesIdentifier', 'AVProductsInstalled', 'AVProductsEnabled', 'HasTpm', 'CountryIdentifier', 'CityIdentifier', 'OrganizationIdentifier', 'GeoNameIdentifier', 'LocaleEnglishNameIdentifier', 'Platform', 'Processor', 'OsVer', 'OsBuild', 'OsSuite', 'OsPlatformSubRelease', 'OsBuildLab', 'SkuEdition', 'IsProtected', 'AutoSampleOptIn', 'PuaMode', 'SMode', 'IeVerIdentifier', 'SmartScreen', 'Firewall', 'UacLuaenable', 'Census_MDC2FormFactor', 'Census_DeviceFamily', 'Census_OEMNameIdentifier', 'Census_OEMModelIdentifier', 'Census_ProcessorCoreCount', 'Census_ProcessorManufacturerIdentifier', 'Census_ProcessorModelIdentifier', 'Census_ProcessorClass', 'Census_PrimaryDiskTotalCapacity', 'Census_PrimaryDiskTypeName', 'Census_SystemVolumeTotalCapacity', 'Census_HasOpticalDiskDrive', 'Census_TotalPhysicalRAM', 'Census_ChassisTypeName', 'Census_InternalPrimaryDiagonalDisplaySizeInInches', 'Census_InternalPrimaryDisplayResolutionHorizontal', 'Census_InternalPrimaryDisplayResolutionVertical', 'Census_PowerPlatformRoleName', 'Census_InternalBatteryType', 'Census_InternalBatteryNumberOfCharges', 'Census_OSVersion', 'Census_OSArchitecture', 'Census_OSBranch', 'Census_OSBuildNumber', 'Census_OSBuildRevision', 'Census_OSEdition', 'Census_OSSkuName', 'Census_OSInstallTypeName', 'Census_OSInstallLanguageIdentifier', 'Census_OSUILocaleIdentifier', 'Census_OSWUAutoUpdateOptionsName', 'Census_IsPortableOperatingSystem', 'Census_GenuineStateName', 'Census_ActivationChannel', 'Census_IsFlightingInternal', 'Census_IsFlightsDisabled', 'Census_FlightRing', 'Census_ThresholdOptIn', 'Census_FirmwareManufacturerIdentifier', 'Census_FirmwareVersionIdentifier', 'Census_IsSecureBootEnabled', 'Census_IsWIMBootEnabled', 'Census_IsVirtualDevice', 'Census_IsTouchEnabled', 'Census_IsPenCapable', 'Census_IsAlwaysOnAlwaysConnectedCapable', 'Wdft_IsGamer', 'Wdft_RegionIdentifier']\n    TestRawColumnTypes = ['U', 'U', 'U', 'U', 'U', 'int8','float16','float32','float16','float16','float16','float16','int8','int16','float32','float16','float16','int16','O','O','O','int16','int16','O','O','O','float16','int8','O','float16','float16','O','float16','float32','O','O','float16','float32','float16','float16','float16','U','float32','O','float32','int8','float32','O','float16','float16','float16','O','O','float32','O','O','O','int16','int32','O','O','O','float16','int16','O','int8','O','O','float16','float16','O','float16','float16','float32','int8','float16','float16','int8','int8','float16','float16','float16']\n    \n    output = pd.read_csv(inputPath, header=0, dtype=dict(zip(TestRawColumnNames, TestRawColumnTypes)))\n    \n    if (verbose==True):\n        endtime = datetime.now()\n        print(starttime)\n        print(endtime-starttime)\n\n    return output","bb4f3807":"trainRaw  = LoadTrainRaw(verbose=True)\n\n\n","871982b4":"trainRaw.info()","53a78bf1":"#dispose when no longer needed\ndel trainRaw\ngc.collect()","7819f0da":"%time\ntestRaw = LoadTestRaw(verbose=True)\n","b09ce599":"testRaw.info()\n#testRaw.head().iloc[:, [1, -1]]","62df526b":"#dispose when no longer needed\ndel testRaw\ngc.collect()","a63b9194":"# Fast Load Functions for Full Training and Test Set\n1.  **LoadTrainRaw() **loads full trainingset memoryoptimised in < 3 min\n2. **LoadTestRaw() **loads full testset memoryoptimised in < 2 min\n        ","d58ae788":"# Load Full Training Set\nnote: MachineIdentifier string, not categorical - cast redundant","91c78472":"# Vars\nset paths here if you wish to run on local machine\nnote: Python 3.7 64bit does the job even better if low_memory=False","3b612d04":"# Load Full Test Set\nnote: no categorical conversions here - cast redundant, loads 30% faster","9ec8c4f7":"# Execution\ncompare execution time and memory consumption","c1ca3d7b":"## Please dont forget to vote if you find these functions useful! Many Thanks!\n"}}