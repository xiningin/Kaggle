{"cell_type":{"3d1f45ca":"code","94792ac1":"code","e14bd5b2":"code","8d754d7b":"code","7970b327":"code","e0509bd9":"code","a5f0079a":"code","15413ce6":"code","de89b0d9":"code","9256cb04":"code","724f638d":"code","c6848454":"code","e25f260e":"code","fb7edfa2":"code","6ef5d146":"code","b203aa30":"code","d3820647":"code","ccc6039c":"code","cae3c79c":"code","7a253eab":"code","34995c43":"code","257e29a4":"code","7b59ae21":"code","98c64607":"code","043724e3":"markdown","f0443c95":"markdown","5bed5574":"markdown","ca981ca7":"markdown","57b02b50":"markdown","fd96fcf7":"markdown","8da962c4":"markdown","7cdf2313":"markdown","a6d163a5":"markdown","88f38796":"markdown","c4973ece":"markdown","b9e645ac":"markdown","dd74440c":"markdown","e4354686":"markdown","c70ae125":"markdown","c24f8db0":"markdown","4d1f7c76":"markdown"},"source":{"3d1f45ca":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","94792ac1":"df = pd.read_csv('\/kaggle\/input\/habermans-survival-data-set\/haberman.csv',header=None)\ndf.head()","e14bd5b2":"df.columns = ['Age', 'Year_of_treatment', 'Num_of_pos_axillary_nodes','Survival_status']\ndf.head()","8d754d7b":"df.describe()","7970b327":"df.info()","e0509bd9":"df.shape","a5f0079a":"df.Survival_status.value_counts()","15413ce6":"total = 306\nperc_of_survived = round(df.Survival_status.value_counts().iloc[0]\/total *100, 2)\nperc_of_survived_less5 = round(df.Survival_status.value_counts().iloc[1]\/total *100, 2)\nprint(f'People Survived more than 5 years: {perc_of_survived}% \\nPeople survived Less than 5 years: {perc_of_survived_less5}%')\n","de89b0d9":"df.plot(kind='scatter', y='Age', x='Year_of_treatment')","9256cb04":"df.plot(kind='scatter', y='Age', x='Num_of_pos_axillary_nodes')","724f638d":"import seaborn as sns\nimport matplotlib.pyplot as plt\n","c6848454":"sns.FacetGrid( df, hue = \"Survival_status\", height=4) \\\n    .map(plt.scatter, \"Age\", \"Num_of_pos_axillary_nodes\") \\\n    .add_legend();","e25f260e":"sns.pairplot(df, hue='Survival_status',height=3);","fb7edfa2":"sns.FacetGrid(df, hue='Survival_status').map(sns.distplot, 'Num_of_pos_axillary_nodes').add_legend();","6ef5d146":"sns.FacetGrid(df, hue='Survival_status').map(sns.distplot, 'Age').add_legend();","b203aa30":"label = [\"pdf of Survival st = 1\", \"cdf of Survival st = 1\", \"pdf of Survival st = 2\", \"cdf of Survival st = 2\"]\ncounts, bin_edges = np.histogram(df[df.Survival_status == 1]['Age'], bins=10, density=True)\npdf = counts \/ sum(counts)\n#print(pdf)\n#print(bin_edges)\ncdf = np.cumsum(pdf)\n\nplt.plot(bin_edges[1:], pdf)\nplt.plot(bin_edges[1:], cdf);\n\ncounts, bin_edges = np.histogram(df[df.Survival_status == 2]['Age'], bins=10, density=True)\npdf = counts \/ sum(counts)\n#print(pdf)\n#print(bin_edges)\ncdf = np.cumsum(pdf)\n\nplt.plot(bin_edges[1:], pdf)\nplt.plot(bin_edges[1:], cdf);\nplt.legend(label);","d3820647":"label = [\"pdf of Survival st = 1\", \"cdf of Survival st = 1\", \"pdf of Survival st = 2\", \"cdf of Survival st = 2\"]\ncounts, bin_edges = np.histogram(df[df.Survival_status == 1]['Num_of_pos_axillary_nodes'], bins=10, density=True)\npdf = counts \/ sum(counts)\n#print(pdf)\n#print(bin_edges)\ncdf = np.cumsum(pdf)\n\nplt.plot(bin_edges[1:], pdf)\nplt.plot(bin_edges[1:], cdf);\n\ncounts, bin_edges = np.histogram(df[df.Survival_status == 2]['Num_of_pos_axillary_nodes'], bins=10, density=True)\npdf = counts \/ sum(counts)\n#print(pdf)\n#print(bin_edges)\ncdf = np.cumsum(pdf)\n\nplt.plot(bin_edges[1:], pdf)\nplt.plot(bin_edges[1:], cdf);\nplt.legend(label);","ccc6039c":"label = [\"pdf of Survival st = 1\", \"cdf of Survival st = 1\", \"pdf of Survival st = 2\", \"cdf of Survival st = 2\"]\ncounts, bin_edges = np.histogram(df[df.Survival_status == 1]['Year_of_treatment'], bins=10, density=True)\npdf = counts \/ sum(counts)\n#print(pdf)\n#print(bin_edges)\ncdf = np.cumsum(pdf)\n\nplt.plot(bin_edges[1:], pdf)\nplt.plot(bin_edges[1:], cdf);\n\ncounts, bin_edges = np.histogram(df[df.Survival_status == 2]['Year_of_treatment'], bins=10, density=True)\npdf = counts \/ sum(counts)\n#print(pdf)\n#print(bin_edges)\ncdf = np.cumsum(pdf)\n\nplt.plot(bin_edges[1:], pdf)\nplt.plot(bin_edges[1:], cdf);\nplt.legend(label);","cae3c79c":"sns.boxplot( x='Survival_status', y='Age', data=df);","7a253eab":"sns.boxplot( x='Survival_status', y='Num_of_pos_axillary_nodes', data=df);","34995c43":"sns.boxplot( x='Survival_status', y='Year_of_treatment', data=df);","257e29a4":"sns.violinplot( x='Survival_status', y='Age', data=df);","7b59ae21":"sns.violinplot( x='Survival_status', y='Num_of_pos_axillary_nodes', data=df);","98c64607":"sns.violinplot( x='Survival_status', y='Year_of_treatment', data=df);","043724e3":"# Understanding our data","f0443c95":"# Histograms","5bed5574":"### Observations :\n1. we have total of 306 records in this dataset\n2. We have no null values\n3. We have 3 independan variables and 1 dependant variable, which make 4 collumns in total\n4. Average age of people is 52\n5. This data is taken between years 1958 to 1969.\n6. our target variable has two values, \n    1 : patient survived for 5 years or more\n    2 : patient died withing 5 years","ca981ca7":"### Obsevations:\n1. more than 50% people are between age 40-60\n2. Age is not the factor to determine if person is going to survive or not","57b02b50":"As shown in the plots, both PDF and CDF tends to overlap.","fd96fcf7":"doesn't makes any sense right? let's try with different collumn","8da962c4":"# Violin Plots","7cdf2313":"# CDF","a6d163a5":"### Observations:\nThese histograms shows that PDF of both Age and Num of nodes collumn are overlapping, lets try cummulative density functions then","88f38796":"Year doesn't give any information","c4973ece":"# Conclusion:\nYear column isn't much useful to derive inference here.\nmost of the people are between age 40 to 60 (almost 50%).\nAll the pdf and cdf tends to overlap each other so it is hard to separate the target data based on these features.","b9e645ac":"# Loading Our Data","dd74440c":"# Box Plots","e4354686":"# 2-D Scatter Plots","c70ae125":"### Observations: \n1. People with realy low num of axillary nodes are seen to be surviving","c24f8db0":"Even pair plots doesn't give much of a info here. Let's move on further.","4d1f7c76":"There's no way we can draw line or a plane and separate this. we may need to use other types of plots to do so."}}