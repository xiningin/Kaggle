{"cell_type":{"b476e79f":"code","7d6d74dc":"code","24c36459":"code","3ebec022":"code","68901b49":"code","67ba3aa3":"code","0d77b994":"code","d714e76a":"code","d1b84e97":"code","582b31c9":"code","b59f0af2":"code","c579129e":"code","1595d0af":"code","33cf4687":"code","ac917cac":"code","6f71f922":"code","6482d4fa":"code","15441f7d":"code","d8a1c69e":"code","77cf7461":"code","48a5e219":"code","9dd29683":"code","f9f67ac5":"code","4a36fe87":"code","c0d1cdda":"code","530e5db0":"code","38991bed":"markdown","d30226ed":"markdown"},"source":{"b476e79f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7d6d74dc":"import numpy as np                                        #TO WORK WITH NUMPY ARRAYS\nimport matplotlib.pyplot as plt\nfrom sklearn.neighbors import KNeighborsClassifier       #KNN\nfrom sklearn.metrics import confusion_matrix\nimport pandas as pd                                      #DATA PROCESSING\nfrom sklearn.model_selection import train_test_split     #SPLITTING DATASET INTO TRAIN AND TEST\nimport scipy.spatial\nfrom collections import Counter\nfrom sklearn.metrics.pairwise import euclidean_distances","24c36459":"d1=pd.read_csv(\"\/kaggle\/input\/classify-fruits\/fruits_train.csv\")\nd2=pd.read_csv(\"\/kaggle\/input\/classify-fruits\/fruits_test.csv\")","3ebec022":"d1.shape","68901b49":"d2.shape","67ba3aa3":"d1.columns","0d77b994":"d2.columns","d714e76a":"d1.head(10)","d1b84e97":"d2.head(10)","582b31c9":"pd.isnull(d1).sum()","b59f0af2":"pd.isnull(d2).sum()","c579129e":"d1.describe","1595d0af":"d2.describe","33cf4687":"look_up_fruit=dict(zip(d1.label.unique(),d1.Id.unique()))\nlook_up_fruit","ac917cac":"X_train = d1.iloc[:,1:-1].values\nY_train = d1.iloc[:,-1].values","6f71f922":"X_train","6482d4fa":"Y_train","15441f7d":"X_test = d2.iloc[:,1:].values\nY_test = d2.iloc[:,-1].values","d8a1c69e":"X_test","77cf7461":"Y_test","48a5e219":"from sklearn.preprocessing import Normalizer\nsc = Normalizer()\nX_test = sc.fit_transform(X_test)\n\nX_train= sc.fit_transform(X_train)","9dd29683":"class KNN:\n    def __init__(self, k):\n        self.k = k\n        \n    def fit(self, X, Y):\n        self.X_train = X\n        self.Y_train = Y\n        \n    def distance(self, X1, X2):\n        distance = scipy.spatial.distance.euclidean(X1, X2)\n    \n    def predict(self, X_test):\n        final_output = []\n        for i in range(len(X_test)):\n            d = []\n            votes = []\n            for j in range(len(X_train)):\n                dist = scipy.spatial.distance.euclidean(X_train[j] , X_test[i])\n                d.append([dist, j])\n            d.sort()\n            d = d[0:self.k]\n            for d, j in d:\n                votes.append(Y_train[j])\n            ans = Counter(votes).most_common(1)[0][0]\n            final_output.append(ans)\n            \n        return final_output\n    \n    def score(self, X_test, Y_test):\n        predictions = self.predict(X_test)\n        return (predictions == Y_test).sum() \/ len(Y_test)","f9f67ac5":"clf = KNN(3)\nclf.fit(X_train, Y_train)\nprediction = clf.predict(X_test)\nfor i in prediction:\n    print(i, end= ' ')","4a36fe87":"prediction","c0d1cdda":"data = pd.DataFrame(prediction,columns=[\"Category\"])\ndata.reset_index(inplace=True)\ndata=data.rename(columns={'index':'ID'})\ndata.ID=data.ID+1\n\n\ndata.head(14)\n","530e5db0":"data.to_csv('19mia1028.csv',index=False)","38991bed":"**#EXPLORATORY DATA ANALYSIS**","d30226ed":"**Preparing the data**"}}