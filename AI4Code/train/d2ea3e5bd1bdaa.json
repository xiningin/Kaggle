{"cell_type":{"d23748bc":"code","28e1afe8":"code","39054a47":"code","9b360b4e":"code","0b20a5bd":"code","de21409d":"code","1dd19419":"code","f394a17c":"code","442ee976":"code","fab6f6d0":"code","e532bfd9":"code","e7464847":"code","16fa75c7":"code","5adcf865":"code","c5488d59":"code","9d4e7cf8":"code","92bf3c46":"code","a704f336":"code","ea6b0cd7":"code","70f3f298":"code","346c8088":"code","d8a4c4b3":"code","7717d9e9":"code","285ce894":"code","1efdcd41":"code","ea9687c7":"code","d2bbe0ba":"code","be5f0194":"code","3b989b6a":"code","ba6c5305":"code","d078cb2d":"code","8df45bbe":"code","ac7f7210":"code","4193ddc8":"code","7a21a3aa":"code","f7257369":"code","9ce746a5":"code","7202d503":"code","429bab1e":"code","36c88fbe":"code","b8aa3c6f":"code","7e99b125":"code","01f8b608":"code","b08cd136":"code","56b4a5f4":"code","52af7a9d":"code","d0deffab":"code","1c21efa9":"code","504b4f5c":"code","47210b79":"code","e1b99707":"code","666787f4":"code","f3f153e1":"code","7157d7c0":"code","02980e8f":"code","0cbbafc9":"code","ba5409d3":"code","d4e4f7fe":"code","4ac894a8":"code","0d8cb278":"code","39dfb0e6":"code","3b36c95a":"code","361820f5":"code","13e8bfc3":"code","e5f11d7c":"code","53f982bc":"code","b11422fa":"code","f180bfc8":"code","d678af72":"code","616af2ca":"code","874b27e6":"code","352f7c03":"code","bed981e1":"code","fc1f3867":"code","de619a46":"code","ac69095a":"code","6a7f9066":"code","92357add":"code","4281bac3":"code","7c50f485":"code","5e9fc417":"code","690b3b08":"code","99783682":"code","31243f31":"code","2b79fa35":"code","ad7657dc":"code","671af2b5":"code","551f8f89":"code","b73d2f7e":"code","25a80991":"markdown","a02ab06b":"markdown","f88531de":"markdown","3467fdac":"markdown","fa5bd251":"markdown","4c4a37b7":"markdown","b5251526":"markdown","edfbd157":"markdown","59dc5371":"markdown","eb8232ee":"markdown","244e9611":"markdown","34acb0c6":"markdown","0d0f5c82":"markdown","bc006b7e":"markdown","95f6b579":"markdown","026df3f5":"markdown","51d84cdf":"markdown","3db56ee8":"markdown","37594437":"markdown","667c3fe9":"markdown","bb9a6980":"markdown","9760a450":"markdown","50dd2d56":"markdown","e21027d4":"markdown","a742a0b2":"markdown","7cf85848":"markdown","518ba768":"markdown","50c48f08":"markdown","a2010697":"markdown","317f6c42":"markdown","d5ad092c":"markdown","b7c99cef":"markdown","899d863b":"markdown","76aea2e2":"markdown","09804616":"markdown","5792bfea":"markdown","8dc1437c":"markdown","5282c473":"markdown","c2442a25":"markdown","b88839f1":"markdown","8f3687b7":"markdown","d831e1c4":"markdown","82edf3bf":"markdown","986a6e4c":"markdown","696b4051":"markdown"},"source":{"d23748bc":"import warnings \nwarnings.filterwarnings('ignore')","28e1afe8":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nimport sklearn\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\n\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree","39054a47":"cntry_df = pd.read_csv(r'https:\/\/cdn.upgrad.com\/UpGrad\/temp\/2f181ade-814a-430a-b721-769d6a9bf814\/Country-data.csv')\ncntry_df.head()","9b360b4e":"cntry_df.dtypes","0b20a5bd":"cntry_df.shape","de21409d":"cntry_df.country.nunique()","1dd19419":"cntry_df.info()","f394a17c":"cntry_df.isnull().sum()","442ee976":"cntry_df.describe()","fab6f6d0":"for i in ['imports','exports','health']:\n    cntry_df[i] = (cntry_df[i] * cntry_df['gdpp'])\/100\ncntry_df.head()","e532bfd9":"# checking the outliers\n\nplt.figure(figsize = (20,10))\n\nfor i in enumerate(cntry_df.columns[1:]): # first column is 'country'. So, dropped it.\n    plt.subplot(3,3,i[0]+1)\n    sns.boxplot(cntry_df[i[1]])","e7464847":"num_df = cntry_df[['child_mort', 'exports', 'health', 'imports', 'income', 'inflation','life_expec', 'total_fer', 'gdpp']\n]\npair = sns.PairGrid(num_df)\npair.map_upper(sns.regplot,color ='green', fit_reg = False)\npair.map_lower(sns.regplot, color ='red', fit_reg = False)\npair.map_diag(plt.hist)\nplt.show()","16fa75c7":"plt.figure(figsize=(21, 18))\nfeatures = ['child_mort', 'exports', 'health', 'imports', 'income','inflation', 'life_expec', 'total_fer', 'gdpp']\nfor i in enumerate(features):\n    ax = plt.subplot(3, 3, i[0]+1)\n    sns.distplot(num_df[i[1]])\n    plt.xticks(rotation=20)","5adcf865":"new_cntry_df = cntry_df[cntry_df.columns[cntry_df.dtypes != 'object']]\nnew_cntry_df.info()","c5488d59":"new_cntry_df.describe()","9d4e7cf8":"# instantiate \nscaler = StandardScaler()\n\n# fit_transform\nscaled_data = pd.DataFrame(scaler.fit_transform(new_cntry_df))\n\nscaled_data.columns = cntry_df.columns[cntry_df.dtypes != 'object']\n\nscaled_data.head()","92bf3c46":"from sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nimport numpy as np\nfrom math import isnan\n \ndef hopkins_test(X):\n    d = X.shape[1]\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","a704f336":"#Using the Hopkins Statistic function by passing the above dataframe as a parameter\nhopkins_test(scaled_data)","ea6b0cd7":"plt.figure(figsize=(20, 10))\nplt.title('Hierarchical Clustering Dendrogram (Single)')\nplt.xlabel('index')\nplt.ylabel('distance')\nmerging_s = linkage(scaled_data, method=\"single\", metric='euclidean')\ndendrogram(merging_s)\nplt.show()","70f3f298":"plt.figure(figsize=(18, 8))\nplt.title('Hierarchical Clustering Dendrogram (Complete)')\nplt.xlabel('index')\nplt.ylabel('distance')\nmerging_c = linkage(scaled_data, method=\"complete\", metric='euclidean')\ndendrogram(merging_c)\nplt.show()","346c8088":"cluster_label_3 = cut_tree(merging_c, n_clusters = 3).reshape(-1,)\ncluster_label_3","d8a4c4b3":"# creating a dataframe with cluster labels on it\n\ncntry_data_h = cntry_df.copy()\ncntry_data_h['cluster_label_3'] = cluster_label_3\ncntry_data_h.head()","7717d9e9":"# Box plot on various features against the CLUSTER_ID to visualize the spread of the data\n\nplt.figure(figsize=(20, 5))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='cluster_label_3', y='child_mort', data=cntry_data_h, palette=\"bright\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='cluster_label_3', y='gdpp', data=cntry_data_h, palette=\"bright\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='cluster_label_3', y='income', data=cntry_data_h, palette=\"bright\")\n\nplt.show()","285ce894":"# plotting scatter plot on various features to visualize the clusters based on them\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_label_3',\n                data=cntry_data_h, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='cluster_label_3',\n                data=cntry_data_h, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='cluster_label_3',\n                data=cntry_data_h, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.show()","1efdcd41":"# checking cluster count\n\ncntry_data_h.cluster_label_3.value_counts()","ea9687c7":"# checking countries in cluster 2 \n\ncntry_data_h[cntry_data_h['cluster_label_3'] == 2]","d2bbe0ba":"# checking countries in cluster 1\n\ncntry_data_h[cntry_data_h['cluster_label_3'] == 1]","be5f0194":"# 4 Clusters\ncluster_label_4 = cut_tree(merging_c, n_clusters = 4).reshape(-1,)\ncluster_label_4","3b989b6a":"cntry_data_h['cluster_label_4'] = cluster_label_4\n\ncntry_data_h.head()","ba6c5305":"# Box plot on various variable against the CLUSTER_ID to visualize the spread of the data\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='cluster_label_4', y='child_mort', data=cntry_data_h, palette=\"bright\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='cluster_label_4', y='gdpp', data=cntry_data_h, palette=\"bright\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='cluster_label_4', y='income', data=cntry_data_h, palette=\"bright\")\n\nplt.show()","d078cb2d":"# Scatter plot on various variables to visualize the clusters based on them\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_label_4',\n                data=cntry_data_h, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='cluster_label_4',\n                data=cntry_data_h, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='cluster_label_4',\n                data=cntry_data_h, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.show()","8df45bbe":"cntry_data_h.cluster_label_4.value_counts()","ac7f7210":"# Checking the countries in Cluster 2 to see which are the countries in that segment.\n\ncntry_data_h[cntry_data_h['cluster_label_4'] == 2]","4193ddc8":"# Checking the countries in Cluster 3 to see which are the countries in that segment.\n\ncntry_data_h[cntry_data_h['cluster_label_4'] == 3]","7a21a3aa":"# Checking the countries in Cluster 1 to see which are the countries in that segment.\n\ncntry_data_h[cntry_data_h['cluster_label_4'] == 1]","f7257369":"cntry_data_h_analysis = cntry_data_h.groupby(['cluster_label_3']).mean()\ncntry_data_h_analysis","9ce746a5":"# Creating a new field for count of observations in each cluster\ncntry_data_h_analysis['Observations']=cntry_data_h[['cluster_label_3','child_mort']].groupby(['cluster_label_3']).count()\ncntry_data_h_analysis","7202d503":"# Creating a new field for proportion of observations in each cluster\ncntry_data_h_analysis['Proportion']=round(cntry_data_h_analysis['Observations']\/cntry_data_h_analysis['Observations'].sum(),2)\ncntry_data_h_analysis","429bab1e":"plt.figure(figsize=(10, 5))\ncntry_data_h_plot1=cntry_data_h[['cluster_label_3','gdpp','income']].copy()\ncntry_data_h_plot1=cntry_data_h_plot1.groupby('cluster_label_3').mean()\ncntry_data_h_plot1.plot.bar()\n\ncntry_data_h_plot2=cntry_data_h[['cluster_label_3','child_mort']].copy()\ncntry_data_h_plot2=cntry_data_h_plot2.groupby('cluster_label_3').mean()\ncntry_data_h_plot2.plot.bar()\nplt.show()","36c88fbe":"# elbow-curve\/SSD\nssd = []\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\nfor num_clusters in range_n_clusters:\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(scaled_data)\n    \n    ssd.append(kmeans.inertia_)\n    \n# plot the SSDs for each n_clusters\n# ssd\nplt.plot(ssd)","b8aa3c6f":"# silhouette analysis\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\n\nfor num_clusters in range_n_clusters:\n    \n    # intialise kmeans\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(scaled_data)\n    \n    cluster_labels = kmeans.labels_\n    \n    # silhouette score\n    silhouette_avg = silhouette_score(scaled_data, cluster_labels)\n    print(\"For n_clusters={0}, the silhouette score is {1}\".format(num_clusters, silhouette_avg))","7e99b125":"# K Means with with k=3\nkmeans_3 = KMeans(n_clusters=3, max_iter=500, init='k-means++', n_init=10, random_state= 335)\nkmeans_3.fit(scaled_data)\nkmeans_3.labels_","01f8b608":"# Create a new datafame with scaled data and adding country name to it.\ncntry_data_k = cntry_data_h.copy()\ncntry_data_k.head()","b08cd136":"# assigning the label\ncntry_data_k['cluster_id_3'] = kmeans_3.labels_\ncntry_data_k.head()","56b4a5f4":"# Checking the number of countries in each cluster\ncntry_data_k.cluster_id_3.value_counts()","52af7a9d":"# Box plot on various variable against the CLUSTER_ID to visualize the spread of the data\n\nplt.figure(figsize=(20, 5))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='cluster_id_3', y='child_mort',\n            data=cntry_data_k, palette=\"bright\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='cluster_id_3', y='gdpp',\n            data=cntry_data_k, palette=\"bright\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='cluster_id_3', y='income',\n            data=cntry_data_k, palette=\"bright\")\n\nplt.show()","d0deffab":"# Scatter plot on various variables to visualize the clusters based on them\n\nplt.figure(figsize=(20, 5))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_id_3',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='cluster_id_3',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='cluster_id_3',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.show()","1c21efa9":"# Checking the CLuster means:\ncntry_data_k.groupby(['cluster_id_3']).mean().sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","504b4f5c":"# Checking the countries in Cluster 2 to see which are the countries in that segment.\n\ncntry_data_k[['country','child_mort','income','gdpp']][cntry_data_k['cluster_id_3'] == 2].sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","47210b79":"# Checking the countries in Cluster 0 to see which are the countries in that segment.\n\ncntry_data_k[['country','child_mort','income','gdpp']][cntry_data_k['cluster_id_3'] == 0].sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","e1b99707":"# K Means with with k=4\nkmeans_4 = KMeans(n_clusters=4, max_iter=500, init='k-means++', n_init=10, random_state= 335)\nkmeans_4.fit(scaled_data)\nkmeans_4.labels_","666787f4":"# assigning the label\ncntry_data_k['cluster_id_4'] = kmeans_4.labels_\ncntry_data_k.head()","f3f153e1":"# Checking the number of countries in each cluster\n\ncntry_data_k.cluster_id_4.value_counts()","7157d7c0":"# Box plot on various variable against the CLUSTER_ID to visualize the spread of the data\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='cluster_id_4', y='child_mort',\n            data=cntry_data_k, palette=\"bright\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='cluster_id_4', y='gdpp',\n            data=cntry_data_k, palette=\"bright\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='cluster_id_4', y='income',\n            data=cntry_data_k, palette=\"bright\")\n\nplt.show()","02980e8f":"# Scatter plot on various variables to visualize the clusters based on them\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_id_4',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='cluster_id_4',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='cluster_id_4',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.show()","0cbbafc9":"# Checking the CLuster means:\ncntry_data_k.groupby(['cluster_id_4']).mean().sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","ba5409d3":"# Checking the countries in Cluster 3 to see which are the countries in that segment.\n\ncntry_data_k[['country','child_mort','income','gdpp']][cntry_data_k['cluster_id_4'] == 3].sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","d4e4f7fe":"# Checking the countries in Cluster 1 to see which are the countries in that segment.\n\ncntry_data_k[['country','child_mort','income','gdpp']][cntry_data_k['cluster_id_4'] == 1].sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","4ac894a8":"# K Means with with k=5\nkmeans_5 = KMeans(n_clusters=5, max_iter=500, init='k-means++', n_init=10, random_state= 335)\nkmeans_5.fit(scaled_data)\nkmeans_5.labels_","0d8cb278":"# assigning the label\ncntry_data_k['cluster_id_5'] = kmeans_5.labels_\ncntry_data_k.head()","39dfb0e6":"# Checking the number of countries in each cluster\n\ncntry_data_k.cluster_id_5.value_counts()","3b36c95a":"## Visualizing the Clustered Data","361820f5":"# Box plot on various variable against the CLUSTER_ID to visualize the spread of the data\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.boxplot(x='cluster_id_5', y='child_mort',\n            data=cntry_data_k, palette=\"bright\")\nplt.subplot(1, 3, 2)\nsns.boxplot(x='cluster_id_5', y='gdpp',\n            data=cntry_data_k, palette=\"bright\")\nplt.subplot(1, 3, 3)\nsns.boxplot(x='cluster_id_5', y='income',\n            data=cntry_data_k, palette=\"bright\")\n\nplt.show()","13e8bfc3":"# Scatter plot on various variables to visualize the clusters based on them\n\nplt.figure(figsize=(18, 5))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='cluster_id_5',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='income', y='child_mort', hue='cluster_id_5',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='gdpp', y='income', hue='cluster_id_5',\n                data=cntry_data_k, legend='full', palette=\"bright\", s=100, c='lightblue', alpha=.4)\nplt.show()","e5f11d7c":"# Checking the CLuster means:\ncntry_data_k.groupby(['cluster_id_5']).mean().sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","53f982bc":"# Checking the countries in Cluster 3 to see which are the countries in that segment.\n\ncntry_data_k[['country','child_mort','income','gdpp']][cntry_data_k['cluster_id_5'] == 4].sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","b11422fa":"# Checking the countries in Cluster 1 to see which are the countries in that segment.\n\ncntry_data_k[['country','child_mort','income','gdpp']][cntry_data_k['cluster_id_5'] == 0].sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])","f180bfc8":"#New dataframe for group by & analysis\n\ncntry_data_k_analysis =  cntry_data_k.groupby(['cluster_id_3']).mean().sort_values(['child_mort','income','gdpp'],ascending = [False,True,True])\ncntry_data_k_analysis","d678af72":"# Creating a new field for count of observations in each cluster\n\ncntry_data_k_analysis['Observations']=cntry_data_k[['cluster_id_3','child_mort']].groupby(['cluster_id_3']).count()\ncntry_data_k_analysis","616af2ca":"# Creating a new field for proportion of observations in each cluster\n\ncntry_data_k_analysis['Proportion']=round(cntry_data_k_analysis['Observations']\/cntry_data_k_analysis['Observations'].sum(),2)\n\n\n#Summary View\ncntry_data_k_analysis[['child_mort','income','gdpp','Observations','Proportion']]","874b27e6":"plt.figure(figsize=(8, 5))\ncntry_data_k_plot1=cntry_data_k[['cluster_id_3','gdpp','income']].copy()\ncntry_data_k_plot1=cntry_data_k_plot1.groupby('cluster_id_3').mean()\ncntry_data_k_plot1.plot.bar()\n\ncntry_data_k_plot2=cntry_data_k[['cluster_id_3','child_mort']].copy()\ncntry_data_k_plot2=cntry_data_k_plot2.groupby('cluster_id_3').mean()\ncntry_data_k_plot2.plot.bar()","352f7c03":"cntry_data_k_analysis = cntry_data_k_analysis.rename({\n    2: 'Under_Developed Countries',\n    1: 'Developed Countries',\n    0: 'Developing Countries'}).reset_index()","bed981e1":"cntry_data_k_analysis[['cluster_id_3','child_mort','income','gdpp','Observations','Proportion']]","fc1f3867":"cntry_data_k_analysis[['cluster_id_4','child_mort','income','gdpp','Observations','Proportion']]","de619a46":"# Countries in Cluster_id = 0, save to a new dataframe, this will form our final cluster data\n\nfinal_cluster = cntry_data_k[cntry_data_k['cluster_id_3'] == 2].copy()\nfinal_cluster = final_cluster[['country', 'child_mort', 'income', 'gdpp']]\n","ac69095a":"final_cluster.sort_values([ 'gdpp', 'income','child_mort'], ascending=[True, True, False])","6a7f9066":"final_cluster.describe()","92357add":"Under_Developed_Countries = cntry_df[cntry_df['gdpp'] <= 932].copy()\n# Under_Developed_Countries = Under_Developed_Countries[Under_Developed_Countries['gdpp'] <= 932]\nUnder_Developed_Countries=Under_Developed_Countries.sort_values([ 'gdpp', 'income','child_mort'], ascending=[True, True, False])","4281bac3":"Under_Developed_Countries[['country', 'child_mort', 'gdpp', 'income']]","7c50f485":"Under_Developed_Countries = Under_Developed_Countries[Under_Developed_Countries['income'] <= 1860]\nUnder_Developed_Countries=Under_Developed_Countries.sort_values([ 'gdpp', 'income','child_mort'], ascending=[True, True, False])","5e9fc417":"Under_Developed_Countries[['country', 'child_mort', 'gdpp', 'income']]","690b3b08":"# We create a new dataframe to store the countries satisfying the cluster median from original dataframe\n\nUnder_Developed_Countries = Under_Developed_Countries[Under_Developed_Countries['child_mort'] >= 90]\nUnder_Developed_Countries=Under_Developed_Countries.sort_values([ 'gdpp', 'income','child_mort'], ascending=[True, True, False])","99783682":"Under_Developed_Countries[['country', 'child_mort', 'gdpp', 'income']]","31243f31":"# top 10 underdeveloped countries list to a new df\n\nUDC_top_10=Under_Developed_Countries[['country', 'gdpp', 'income', 'child_mort']].head(10).copy()","2b79fa35":"#Final countries list\n\nUDC_top_10","ad7657dc":"UDC_top_10.describe()","671af2b5":"plt.figure(figsize=(21, 18))\nfeatures = ['gdpp','income','child_mort']\nfor i in enumerate(features):\n    ax = plt.subplot(3, 3, i[0]+1)\n    sns.distplot(UDC_top_10[i[1]])\n    plt.xticks(rotation=20)","551f8f89":"# Scatter plot on various variables to visualize the clusters based on them\n\nplt.figure(figsize=(18, 10))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='country',\n                data=UDC_top_10, legend='full', palette=\"bright\", s=300, c='lightblue')\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='gdpp', y='income', hue='country',\n                data=UDC_top_10, legend='full', palette=\"bright\", s=300, c='lightblue')\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='income', y='child_mort', hue='country',\n                data=UDC_top_10, legend='full', palette=\"bright\", s=300, c='lightblue')\nplt.show()","b73d2f7e":"#TOP 10 COUNTRIES recommended for Financial Aid\n\nUDC_top_10","25a80991":"### Descriptive Statistics of Cluster 'Under_Developed_Countries'","a02ab06b":"### Bivariate Analysis of Cluster 'Under_Developed_Countries' (Top 10)","f88531de":"- No null values in the dataframe","3467fdac":"#### INSIGHT: \n- Cluster 3 & Cluster 1 seems to have highest Child Mortality and lowest Income & GDPP. Lets check the countries in these clusters to see there outcome.","fa5bd251":"### Silhouette Analysis\n`                                   silhouette score = p\u2212q\/max(p,q)`\n \n- p  is the mean distance to the points in the nearest cluster that the data point is not a part of\n- q  is the mean intra-cluster distance to all the points in its own cluster.\n- The value of the silhouette score range lies between -1 to 1.\n- A score closer to 1 indicates that the data point is very similar to other data points in the cluster,\n- A score closer to -1 indicates that the data point is not similar to the data points in its cluster.","4c4a37b7":"`Rescaling the data`","b5251526":"#### Third Iteration - 5 clusters","edfbd157":"### 4.2 K-MEANS CLUSTERING \n\n#### First iteration - 3 Clusters","59dc5371":"## 2.1 Outlier Treatment","eb8232ee":"### INSIGHT: \n- `cluster 2` and `cluster 0` seems to have highest child mortality rate and lowest income and lowest GDPP. Checking the countries in both clusters.","244e9611":"### Visualizing the clustered data","34acb0c6":"#### First iteration - Using 3 clusters","0d0f5c82":"### Renaming the Clusters","bc006b7e":"### complete linkage :\n- Here, the distance between 2 clusters is defined as the maximum distance between any 2 points in the clusters.\n","95f6b579":"#### INSIGHT:\n   - From the above validations (Elbow curve and Silhouette analysis), we can notice that 3,4 & 5 are the optimal number of clusters. We will do 3 iterations for 3,4 & 5 clusters.","026df3f5":"### SCALING THE DATA (STANDARDIZATION) \n    - We will use standardization method for scaling the data.","51d84cdf":"- No of unique entries in country column and number of rows in dataframe are equal. Which means that there are no multiple entries","3db56ee8":"## 3. Exploratory Data Analysis\n- `Visualizing Distribution`\n\nPlotting a pairplot","37594437":"- We use Hierarchial clusterign approach to identify appropriate cluster size with a good split in data\n    - Max Intra-cluster distance and Min Inter-cluster distance","667c3fe9":"### INSIGHT\n   - Dataframe describes various socio-economic factors of 167 different countries.\n   - Dataframe has no multiple entries and no null values\n   - All features except 'country' are numerical as expected. So, no need of any type casting\n   - Descriptive statistics indicates that there is some variability in the data and requires scaling while model building.","bb9a6980":"# 1. Importing the dataset and data inspection","9760a450":"## 2. Data Transformation","50dd2d56":"### Analysing the 'Under Developed Countries' Cluster","e21027d4":"#### Second iteration - Using 4 clusters","a742a0b2":"- Clusters 1 and 2 are developed and developing countries. So, our segmentation is good in terms of all our under developed countries are segmented under cluster 0. We will further tune this cluster","7cf85848":"### Interpreting Clusters from the Hierarchial Clustering model","518ba768":"### INSIGHT:\n   - Majority of the data points are `not normally distributed`. \n   - Variance is not uniform and range is not same for all features.\n   - We need to standardize data to overcome all this. Since we need to calculate the Euclidean distance between the data points for clustering, it is important to ensure that the values with high range do not outweigh the values with smaller range. Thus, scaling down all the attributes to a uniform scale is important.","50c48f08":"### Single linkage\n   - Here, the distance between 2 clusters is defined as the shortest distance between points in the two clusters.","a2010697":"#### Second Iteration - 4 clusters","317f6c42":"### INSIGHT\n- In the dataframe(cntry_df) provided, `imports`,`exports` and `health` features have the percentage of money spent or gained from these sectors from the total gdpp which is not clear. So, to avoid this, values in `imports`, `exports` and `health` are converted to absolute values","d5ad092c":"####  `NOTE`\n- From the above two dendrograms, it is clear that `Complete Linkage` has a batter cluster formation.\n- So, we will use `Complete linkage` output for further analysis. We will build two iterations of clustering\n    - one with 3 clusters and another one with 4 clusters (based on the output from Complete Linkage Dendrogram) and analyze the output\n    ","b7c99cef":"# 4. Model building\n## 4.1 Hierarchial Clustering","899d863b":"#### INSIGHT:\n   - `Cluster 3` & `Cluster 1` seems to have highest child mortality rate and lowest income and lowest gdpp. Checking the countries in these clusters","76aea2e2":"### INSIGHT\n   - If the value is between {0.01, ...,0.3}, the data is regularly spaced (normally distributed).\n   - If the value is around 0.5, it is random.\n   - If the value is between {0.7, ..., 0.99}, it has a high tendency to cluster. ","09804616":"### HOPKINS STATISTICS\n   - Before applying clustering on a dataframe, first we need to check whether has some meaningful(not occuring at random) clusters.\n   - The process of evaluating data whether clustering can be applied or not is called `Clustering Tendency`.\n   - For `clustering tendency`, we use `Hopkins Test` which examines whether the data points differ significantly from uniformly distributed data in the multidimensional space.","5792bfea":"## Finding the Optimal Number of Clusters\n### SSD (Elbow curve)","8dc1437c":"# Importing modules","5282c473":"#### INSIGHT\n   - From the 2 iterations above, we can conclude that `3 clusters` is ideal for number of clusters.\n   - This is because for `4 clusters`, `nigeria` was added as a separate cluster. Since Nigeria could be a backward country which may need the aid in terms of it's child mortality rate. \n   - So, the ideal number of clusters is `3 clusters`. We will further validate this.","c2442a25":"### Choosing the model\n\nFrom the above 3 Iterations of K-Means, we could see that using 3 Clusters provided a better output in terms of a balanced cluster size. So we will consider the 'K-Means with 3 Clusters' as our FINAL MODEL\n\n### Interpreting the Clusters from K-Means model","b88839f1":"- All features except country are numerical as expected","8f3687b7":"### Decision Making on the final approach","d831e1c4":"## Univariate Analysis of Cluster 'Under_Developed_Countries' (Top 10)","82edf3bf":"## Conclusion & Recommendation\n- We performed CLUSTERING on the socio-economic data provided for various countries to identify countries most eligible for Financial Aid from the NGO. \n- Based on Clustering Analysis, below are the top 10 countries under our 'Under Developed Countries' cluster which are in dire need of the Financial Aid. This output is purely based on the dataset provided and various analytical methodologies performed.","986a6e4c":"### Interpretation of Clusters: \n   - `Cluster 0` has the highest average child mortality rate of ~42 when compared to other 2 clusters and `lowest gdpp` and `lowest income` of ~7551 & 12641 respectively.\n   - All the above reasons make the `cluster 0` ideal for the requirement. We can also observe that cluster 0 comprises of ~89% of overall countries and has ~148 countries out of 167 total countries. This is a problem.\n   - Clustering model is not giving us a good result because ~89% of data is under one cluster and increasing the number of clusters doesn't solve this problem. We will check K-Means clustering.","696b4051":"`OBSERVATIONS:`\n   - There are outliers in all features. \n   - We cannot cap the outliers in all features because is leads to deletion of some countries which are actually in dire need of aidand should be in prime focus.\n   - So, I've decided to go with the model which suites the Business Problem better. That is, not to treat the Outlier, and check the model with different K values to see which one gives a better business outcome."}}