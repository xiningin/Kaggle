{"cell_type":{"bad82959":"code","abf9cace":"code","240be4bc":"code","fb77b26f":"code","a539caab":"code","9d15887d":"code","8a2374fa":"code","f5775877":"code","46338fad":"code","9f5588cf":"code","d10dc980":"code","916e07a3":"code","df1c3720":"markdown","7f235f11":"markdown","31ab5059":"markdown","0db67119":"markdown","b897c677":"markdown"},"source":{"bad82959":"!pip install keras_ocr","abf9cace":"!pip freeze > requirements.txt","240be4bc":"import matplotlib.pyplot as plt\nimport keras_ocr\n\nimport numpy as np\nimport pandas as pd\n\nfrom time import time\nimport re\nimport itertools\nimport multiprocessing\nimport gc","fb77b26f":"print('Numpy version:', np.__version__)\nprint('Pandas version:', pd.__version__)","a539caab":"!ls \/kaggle\/input","9d15887d":"# df = pd.read_csv('\/kaggle\/input\/shopee-product-detection-student\/train.csv', dtype='object')\ndf = pd.read_csv('\/kaggle\/input\/shopee-product-detection-student\/test.csv', dtype='object')\n\ndf['category'] = df['category'].apply(lambda c: str(c).zfill(2))\ndf.head()","8a2374fa":"paths = []\nfor i in df.index:\n#     paths.append(f'\/kaggle\/input\/shopee-product-detection-student\/train\/train\/train\/{df.loc[i, \"category\"]}\/{df.loc[i, \"filename\"]}')\n    paths.append(f'\/kaggle\/input\/shopee-product-detection-student\/test\/test\/test\/{df.loc[i, \"filename\"]}')","f5775877":"pipeline = keras_ocr.pipeline.Pipeline()","46338fad":"# part 1 - 4 : train image\n# part 1 = 0:26347\n# part 2 = 26347:52695\n# part 3 = 52695:79042\n# part 4 = 79042:TOTAL_IMAGES\n# part 5 : test image\n# part 5 = 0:TOTAL_IMAGES (CURRENT)\nTOTAL_IMAGES = len(paths)\nBATCH_PREDICT = 5\n\nSTART_INDEX = 0\nEND_INDEX = TOTAL_IMAGES\n\nlist_texts = []","9f5588cf":"for i in range(START_INDEX, END_INDEX, BATCH_PREDICT):\n    try:\n        if i + BATCH_PREDICT < END_INDEX:\n            images = [keras_ocr.tools.read(p) for p in paths[i:i + BATCH_PREDICT]]\n        else:\n            images = [keras_ocr.tools.read(p) for p in paths[i:END_INDEX]]\n\n        prediction_groups = pipeline.recognize(images)\n\n        for x in range(len(prediction_groups)):\n            texts = []\n\n            for y in range(len(prediction_groups[x])):\n                texts.append(prediction_groups[x][y][0])\n\n            list_texts.append(texts)\n        gc.collect()\n    except:\n        if i + BATCH_PREDICT < END_INDEX:\n            for j in range(BATCH_PREDICT):\n                list_texts.append([])\n        else:\n            for j in range(END_INDEX - i):\n                list_texts.append([])","d10dc980":"sr_text = pd.Series(list_texts)\nsr_text","916e07a3":"sr_text.to_csv('test2.csv', index=False, header=False)","df1c3720":"## Note\n\n* Process train images (part 1 of 4) : https:\/\/www.kaggle.com\/ilosvigil\/shopee-competition-2-ocr?scriptVersionId=37547674\n* Process train images (part 2 of 4) : https:\/\/www.kaggle.com\/ilosvigil\/shopee-competition-2-ocr?scriptVersionId=37573844\n* Process train images (part 3 of 4) : https:\/\/www.kaggle.com\/ilosvigil\/shopee-competition-2-ocr?scriptVersionId=37601445\n* Process train images (part 4 of 4) : https:\/\/www.kaggle.com\/williammulianto\/shopee-2-ocr-train-41b3f4?scriptVersionId=37614455\n* Process test images : https:\/\/www.kaggle.com\/ilosvigil\/shopee-competition-2-ocr?scriptVersionId=37631409","7f235f11":"# Config OCR","31ab5059":"# Dataset","0db67119":"# Predict","b897c677":"# Library"}}