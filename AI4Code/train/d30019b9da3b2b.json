{"cell_type":{"6233c324":"code","50727425":"code","d4f42929":"code","4a929cf2":"code","73562a7a":"code","8956a016":"code","7b254d13":"code","9918e6cd":"code","e6c7d569":"code","15bd6660":"code","54f518ca":"code","b66c13ea":"code","f28896d9":"code","b958f496":"code","4062bb2c":"code","40e12b65":"code","4450a060":"code","81e8c153":"markdown","68cebce1":"markdown","78a635a3":"markdown","d6c74f3a":"markdown","1098bc62":"markdown","f930ef05":"markdown","94dd2a30":"markdown","fee3a5da":"markdown","f7dfe3be":"markdown","e7f583f2":"markdown","50b696fe":"markdown","9bca42f7":"markdown","46294995":"markdown","de984c12":"markdown","cf7a0686":"markdown"},"source":{"6233c324":"import os\nimport glob\nimport base64\nimport folium\nimport imageio\n\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom scipy import stats\nimport geopandas as gpd\nfrom IPython import display\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\n\nsns.set_theme()\n\n# Configuration\nELECTRICITY_PATH = '\/kaggle\/input\/dutch-energy\/Electricity\/'\nPOSTCODE2_PATH = '\/kaggle\/input\/postalcodes2\/postcodes2_2020.csv'\n\n%matplotlib inline","50727425":"dataframes = []\nfor year in range(2009,2021): # 2009 -> 2020\n    dfs = [pd.read_csv(x) for x in glob.glob(f'{ELECTRICITY_PATH}*{year}.csv')]\n    dataframe = pd.concat(dfs)\n    \n    # Add a year column to the dataset\n    dataframe['year'] = year\n    dataframes.append(dataframe)\n    \nfull_dataframe = pd.concat(dataframes)\ndel dataframes # Free memory\nfull_dataframe.head()","d4f42929":"# Group by year\nannual_agg = full_dataframe.groupby('year').aggregate({'annual_consume': 'sum', 'num_connections': 'sum', 'delivery_perc' : 'mean', 'perc_of_active_connections' : 'mean'})\nannual_agg.reset_index(inplace=True)\n\n# Create charts\nfig, axs = plt.subplots(1, 3, figsize=(20, 5))\nannual_agg.plot(x='year', y='annual_consume', label='Electricity consumption', ylabel='Electricity (kWh)', xlabel='Year', ax=axs[0],title='Annual consumption of electricity', style='.-')\nannual_agg.plot(x='year', y='num_connections', label='Connection count', ax=axs[1], title=\"Number of connections\", style='.-')\nannual_agg.plot(x='year', y='delivery_perc', label='Electricity delivery percentage', ylabel='Percentage (%)', ax=axs[2], title='Electricity bought percentage', style='.-');\n","4a929cf2":"# Remove corrupted columns\nfull_dataframe.drop(full_dataframe[['STANDAARDDEVIATIE', '\u00ef\u00bb\u00bfNETBEHEERDER','%Defintieve aansl (NRM)']], axis=1, inplace=True)\n\n# Remove incomplete year\nfull_dataframe = full_dataframe[full_dataframe.year != 2009]\nannual_agg =  annual_agg[annual_agg['year'] != 2009];","73562a7a":"# I used a function since variables created in this scope get garbage collected.\ndef create_animation(animation_file):\n    frames = []\n    os.makedirs('\/kaggle\/working\/EDA1\/', exist_ok=True)\n    \n    for year in range(2010,2021):\n        fig, axs = plt.subplots(1, 2, figsize=(10, 5))\n        selected_year = full_dataframe[full_dataframe['year'] == year]\n\n        # Annual consumption\n        working_dataframe = selected_year['annual_consume'].to_numpy()\n        working_dataframe.sort()\n        working_dataframe = working_dataframe[(np.abs(stats.zscore(working_dataframe)) < 2)]\n        axs[0].hist(working_dataframe, bins=20, alpha=1)\n        axs[0].set_title(f'Annual consumption of electricity {year}')\n        axs[0].set_xlabel('Electricity usage (kWh)')\n\n        # Electricity delivery percentage\n        working_dataframe = selected_year['delivery_perc'].to_numpy()\n        working_dataframe.sort()\n        axs[1].hist(working_dataframe, bins=20, alpha=1)\n        axs[1].set_title(f'Annual electricity delivery percentage {year}')\n        axs[1].set_xlabel('Percentage delivered (%)')        \n        \n        # Store plot as image\n        path = f'\/kaggle\/working\/EDA1\/{year}.png'\n        plt.savefig(path);\n        frames.append(imageio.imread(path))\n        plt.close()\n    \n\n    imageio.mimsave(animation_file, frames, fps=1)\n    \n    with open(animation_file, 'rb') as fd: # Hacky way to display the gif\n        b64 = base64.b64encode(fd.read()).decode('ascii')\n    return display.HTML(f'<img src=\"data:image\/gif;base64,{b64}\"\/>')\ncreate_animation('\/kaggle\/working\/EDA1\/animation.gif')","8956a016":"ax = full_dataframe.boxplot('annual_consume', by='year', showfliers=False, figsize=(10,10))\nax.set_title('Annual consumption boxplot');","7b254d13":"fig, axs = plt.subplots(1, 2, figsize=(15, 5))\nconnections = pd.DataFrame({'Year' : annual_agg['year'], 'Gross connection': annual_agg['num_connections'], 'Net connection' : annual_agg['num_connections'] * (annual_agg['perc_of_active_connections'] \/ 100)})\nconnections.plot(x='Year' ,ylabel='Connection count', title='Difference when inactive connections are removed', style='.-', ax=axs[0])\n\n# Compute Electricity usage per connection\nconnections['Electricity Consumption \/ Net connection'] = annual_agg['annual_consume'] \/ connections['Net connection']\nconnections['Electricity Consumption \/ Gross connection'] = annual_agg['annual_consume'] \/ connections['Gross connection']\n\n# Plot processed connection data\nconnections.plot(x='Year', y=['Electricity Consumption \/ Net connection','Electricity Consumption \/ Gross connection'], style='.-', ylabel='Electricity consumption (kWh)', title='Average Electricity consumption per connection', ax=axs[1]);\ndel connections;","9918e6cd":"full_dataframe['annual_consume'] = full_dataframe['annual_consume'] * (full_dataframe['num_connections'] * (full_dataframe['perc_of_active_connections'] \/ 100))\n\n# Store cleaned data which can be used for further research\nfull_dataframe.to_csv(\"\/kaggle\/working\/cleaned.csv\", index=False);","e6c7d569":"# Displaying change in energy usage\nannual_agg = full_dataframe.groupby('year').aggregate({'annual_consume': 'sum', 'num_connections': 'sum', 'delivery_perc' : 'mean', 'perc_of_active_connections' : 'mean'})\nannual_agg.reset_index(inplace=True)\n\n# Create charts\nfig, axs = plt.subplots(1, 3, figsize=(20, 5))\nannual_agg.plot(x='year', y='annual_consume', label='Electricity consumption', ylabel='Electricity (kWh)', xlabel='Year', ax=axs[0],title='Annual consumption of electricity', style='.-')\nannual_agg.plot(x='year', y='num_connections', label='Connection count', ax=axs[1], title=\"Number of connections\", style='.-')\nannual_agg.plot(x='year', y='delivery_perc', label='Electricity delivery percentage', ylabel='Percentage (%)', ax=axs[2], title='Electricity bought percentage', style='.-');\n","15bd6660":"# Testing if the charting works correctly\npostal_codes = gpd.read_file(POSTCODE2_PATH, GEOM_POSSIBLE_NAMES=\"geometry\", KEEP_GEOM_COLUMNS=\"NO\")\n\n# Extracted important information & zipcode datatype which is converted to int64\npostal_codes = gpd.GeoDataFrame({ 'postcode' : postal_codes.postcode.astype(int),  'geometry':postal_codes.geometry})\nax = postal_codes.plot(linewidth=1, cmap=\"prism\", figsize=(10,10));\nax.axis('off');","54f518ca":"post2_agg = full_dataframe\n\n# Convert Zipcode6 to Zipcode2.\npost2_agg['zipcode'] = post2_agg['zipcode_from'].apply(lambda x: int(str(x)[:2]))\n\n# Aggregate zipcode & year this will help with aggregation with geometry data.\npost2_agg = post2_agg.groupby(['zipcode', 'year']).aggregate({'annual_consume': 'sum', 'num_connections': 'sum', 'delivery_perc' : 'mean'})\npost2_agg.reset_index(inplace=True)\n\npost2_agg = postal_codes.merge(post2_agg, left_on=\"postcode\", right_on=\"zipcode\")\n\ndef create_animation_chart():\n    frames = []\n    \n    # Create directory for the frames\n    os.makedirs('\/kaggle\/working\/GEO1\/', exist_ok=True)\n    \n    for year in range(2010,2021):\n        fig, axs = plt.subplots(1, 2, figsize=(20, 10))\n        selected_year = post2_agg[post2_agg['year'] == year]\n\n        postal_codes.plot(color='black', ax=axs[0])\n        selected_year.plot('annual_consume', ax=axs[0], linewidth=1, legend=True, cmap='coolwarm')\n        axs[0].set_title(f'Annual consumption of electricity {year}')\n        axs[0].axis('off')\n        \n        postal_codes.plot(color='black', ax=axs[1])\n        selected_year.plot('delivery_perc', ax=axs[1], linewidth=1, legend=True, cmap='coolwarm')\n        axs[1].set_title(f'Annual electricity delivery percentage {year}')\n        axs[1].axis('off')\n\n        path = f'\/kaggle\/working\/GEO1\/{year}.png'\n        plt.savefig(path);\n        frames.append(imageio.imread(path))\n        plt.close()\n    \n\n    imageio.mimsave('\/kaggle\/working\/GEO1\/animation.gif', frames, fps=1)\n    \n    with open('\/kaggle\/working\/GEO1\/animation.gif', 'rb') as fd: # Hacky way to display the gif\n        b64 = base64.b64encode(fd.read()).decode('ascii')\n    return display.HTML(f'<img src=\"data:image\/gif;base64,{b64}\"\/>')\n\npost2_agg.to_csv(\"\/kaggle\/working\/post2_agg.csv\", index=False)\ncreate_animation_chart()","b66c13ea":"# Create an aggregation based on year and city name\ncity_agg = full_dataframe.groupby(['city', 'year']).aggregate({'annual_consume': 'sum', 'num_connections': 'sum', 'delivery_perc' : 'mean', 'perc_of_active_connections' : 'mean'})\ncity_agg.reset_index(inplace=True)\n\n# Configure plot\nfig, ax = plt.subplots(2, 1, figsize=(20,15))\nax[0].set_ylabel('Electricity consumption (kWh)')\nax[0].set_ylabel('Gross connection count')\n\n# Find 10 biggest electricity users based on statistics from 2020\nbiggest_consumers = city_agg[city_agg['year'] == 2020].sort_values('annual_consume', ascending=False).head(10)\n\n# Plot biggest electricity consumers\nfor city in biggest_consumers['city']:\n    target_city = city_agg[city_agg['city']==city]\n    target_city.plot(y='annual_consume', x='year', ax=ax[0], label=city, style='.-', title='Electricity consumption')\n    target_city.plot(y='num_connections', x='year', ax=ax[1], label=city, style='.-', title='Number of connections')","f28896d9":"# Configure plot\nfig, ax = plt.subplots(1, 1, figsize=(15,5))\nax.legend()\nax.set_title('Measurement count most electricity hungry cities')\n\n# Plot measurement count to see if it shows a similar trend as the plot shown above\nfor city in biggest_consumers['city']:\n    target_city = full_dataframe[full_dataframe['city']==city]\n    measurement_count = []\n    for year in range(2010, 2021):\n        count = target_city[target_city['year']==year].count()[0]\n        measurement_count.append(count)\n    ax.plot(range(2010, 2021), measurement_count, marker='.', label=city)  \n\ndel biggest_consumers;","b958f496":"smallest_consumers = city_agg[city_agg['year'] == 2020].sort_values('annual_consume', ascending=True).head(7)\nfig, ax = plt.subplots(2, 1, figsize=(20,15))\n\nfor city in smallest_consumers['city']:\n    target_city = city_agg[city_agg['city']==city]\n    target_city.plot(y='annual_consume', x='year', ax=ax[0], label=city, style='.-', title='Electricity consumption')\n    target_city.plot(y='num_connections', x='year', ax=ax[1], label=city, style='.-', title='Number of connections')\n\ndel smallest_consumers","4062bb2c":"fig, axs = plt.subplots(1, 3, figsize=(20, 5))\nannual_renewable_electricity = pd.DataFrame({\n    'Year' : annual_agg['year'],\n    'Net electricity': annual_agg['annual_consume'] \/ (annual_agg['delivery_perc'] \/ 100),\n    'Gross electricity': annual_agg['annual_consume'],\n    'Renewable electricity': annual_agg['annual_consume'] \/ (annual_agg['delivery_perc'] \/ 100) - annual_agg['annual_consume']\n})\nannual_renewable_electricity['Percentage renewable'] = annual_renewable_electricity['Renewable electricity'] \/ annual_renewable_electricity['Net electricity'] * 100\nannual_renewable_electricity.plot(ax=axs[0],x='Year', y=['Net electricity', 'Gross electricity'], style='.-', ylabel='Electricity (kWh)', title='Total electricity consumption')\nannual_renewable_electricity.plot(ax=axs[1],x='Year', y='Renewable electricity', ylabel='Electricity (kWh)', style='.-', title='Renewable electricity production')\nannual_renewable_electricity.plot(ax=axs[2],x='Year', y='Percentage renewable', ylabel='Precentage (%)', style='.-', title='Renewable electricity production')\nplt.show()\n\nannual_renewable_electricity.to_csv(\"\/kaggle\/working\/annual_renewable_electricity.csv\", index=False)","40e12b65":"city_agg['renewable_electricity'] = city_agg['annual_consume'] \/ (city_agg['delivery_perc'] \/ 100) - city_agg['annual_consume']\ncity_agg['renewable_electricity_perc'] = city_agg['renewable_electricity'] \/ city_agg['annual_consume'] * 100\n\n# Plot preperation\nfig, axs = plt.subplots(2, 1, figsize=(20, 15))\naxs[0].set_ylabel('Electricity (kWh)')\naxs[1].set_ylabel('Percentage (kWh)')\n\nlargest_producers = city_agg[city_agg['year'] == 2020].sort_values('renewable_electricity', ascending=False).head(10)\n\nfor city in largest_producers['city']:\n    target_city = city_agg[city_agg['city'] == city]\n    target_city.plot( x='year',y='renewable_electricity', ax=axs[0], label=city, style='.-', title='Renewable electricity production')\n    target_city.plot(y='renewable_electricity_perc', x='year', ax=axs[1], label=city, style='.-', title='Renewable electricity production')\n","4450a060":"fig, axs = plt.subplots(1, 3, figsize=(25, 5))\n\n# Aggregate net electricity consumption\nx = annual_renewable_electricity[['Year']]\ny = annual_renewable_electricity[['Net electricity']]\n\n# Create polynomial features & labels\npoly = PolynomialFeatures(degree=2)\nx_poly = poly.fit_transform(x)\nfuture = np.array(range(2021,2023)).reshape(-1,1)\nfuture_x = poly.transform(future)\n\n# Polynomial regression for net electricity usage \/ year\nline = LinearRegression()\nline.fit(x_poly,  y)\naxs[0].scatter(x, y, label='Net electricity')\naxs[0].plot(x, line.predict(x_poly), label='Net electricity trend')\naxs[0].scatter(future, line.predict(future_x), marker=\"x\", c='b', label='Predicted net electricity')\n\n# Polynomial regression Gross electricity usage \/ year\nx = annual_renewable_electricity[['Year']]\ny = annual_renewable_electricity[['Gross electricity']]\nline = LinearRegression()\nline.fit(x_poly,  y)\naxs[0].scatter(x, y,c='r')\naxs[0].plot(x, line.predict(x_poly), label='Gross electricity trend', c='r')\naxs[0].scatter(future, line.predict(future_x), marker = \"x\", c='r', label='Predicted gross electricity')\naxs[0].legend()\naxs[0].set_title('Prediction electricity consumption')\naxs[0].set_ylabel('Electricity (kWh)')\n\n\n# Polynomial regression renewable electricity production (kWh) \/ year\nx = annual_renewable_electricity[['Year']]\ny = annual_renewable_electricity[['Renewable electricity']]\nline = LinearRegression()\nline.fit(x_poly,  y)\naxs[1].scatter(x, y)\naxs[1].plot(x, line.predict(x_poly), label='Renewable electricity trend')\naxs[1].scatter(future, line.predict(future_x), marker = \"x\", c='b', label='Renewable electricity production')\naxs[1].legend()\naxs[1].set_title('Prediction renewable electricity production')\naxs[1].set_ylabel('Electricity (kWh)')\n\n# Polynomial regression renewable electricity production vs net electricity production percentage \/ year\nx = annual_renewable_electricity[['Year']]\ny = annual_renewable_electricity[['Percentage renewable']]\nline = LinearRegression()\nline.fit(x_poly,  y)\naxs[2].scatter(x, y)\naxs[2].plot(x, line.predict(x_poly) , label='Renewable electricity trend')\naxs[2].scatter(future, line.predict(future_x), marker = \"x\", c='b', label='Renewable electricity prediction')\naxs[2].set_title('Percentage Renewable electricity production')\naxs[2].set_ylabel('Percentage (%)');\naxs[2].legend()\n\ndel annual_renewable_electricity;","81e8c153":"<a id=\"DC\"><\/a>\n## 2.2 Data cleaning\nLooking at the chart above we can conclude that 2009 is incomplete since it doesn't follow the same trend. Therefore we delete all data points of 2009. In `load & process` We also noticed corrupted \/ empty columns. These columns will also be deleted","68cebce1":"When we dive deeper into the measurement count of Eindhoven, we can see that there are no measurements of 2010. We also lost a large number of measurements from 2013 to 2014.","78a635a3":"<a id=\"RET\"><\/a>\n## 4.3 Renewable electricity trends\nBased on the small amount of data in this dataset, we predicted two years in the future. This prediction is very promising for a future where more renewable electricity gets produced","d6c74f3a":"<a id=\"M\"><\/a>\n# **4. Modelling**\nEven though there are inconsistencies, we should still answer the hypothesis questions from the beginning of this research\n\n<a id=\"GREP\"><\/a>\n## 4.1 General renewable electricity production\nAccording to our dataset, the percentage of renewable electricity seem to be increasing in an exponential matter. According to [this source](https:\/\/www.trade.gov\/knowledge-product\/netherlands-electricity), the actual renewable electricity production seems to be higher; this confirms the hypothesis about the percentage of renewable electricity production.","1098bc62":"<a id=\"GBEDA\"><\/a>\n## 3.2 Geospacial based exploritory data analysis\nWhen we plot electricity over time & space, we can see that Zeeland is missing;  this could partially explain why the annual electricity usage is lower than it should be. \n\nEven in a perfect world where every province used 1\/12th of the total electricity, this isn't enough to explain the lack of used consumed electricity; this confirms our assumption of regional data missing is correct.","f930ef05":"<a id=\"DD\"><\/a>\n## 2.3 Data distribution\nCreating a distribution of the dataset will help us see if the data is skewed, and what kind of preprocessing steps we should apply in the future if we want to use machine learning algorithms. Here we created an animation to show the change in the distribution over time.\n\nBased on the graphs shown below, we can estimate the mode and median. It appears like a substantial quantity of measurements in the range of the 2000-4000 bin, which can explain the low total electricity consumption per year. According to the [Dutch environmental centre](https:\/\/www.milieucentraal.nl\/energie-besparen\/inzicht-in-je-energierekening\/gemiddeld-energieverbruik\/#Welke%20cijfers%20gebruikt%20Milieu%20Centraal?), the average household should consume 2547 kWh. But the median and mode below show the electricity consumption lies only a notch above this, while each row in the dataset contains multiple connections.\nI assume that each row is the average of the manifold of connections.","94dd2a30":"<a id=\"TMEHC\"><\/a>\n## 3.3 The most electricity-hungry cities\nThis c this chart to show if strange things are happening in the biggest cities.\n\nThis chart has been made to create more in-depth information about larger cities and the data trends. We can use this to assume the shortcomings of the dataset and account for these in our computations.  From the chart shown below Eindhoven looks inconsistent since their electricity consumption doesn't follow the trend of the other datapoints. Especially the drop in 2010. ","fee3a5da":"<a id=\"CEUPC\"><\/a>\n## 2.3 Correcting electricity usage per connection\nAssuming the lower electricity consumption is caused by creating an average over different connections is partially correct. We now achieve an electricity usage of 36tWh, which is still very low compared (1\/3) of the actual electricity usage. I compiled the following list of assumptions on what is happening with our data.\n- Missing regional data\n- Information missing caused by computational errors. I.E. averaging error, rounding error & projectional error.","f7dfe3be":"<a id=\"LEHC\"><\/a>\n## 3.4 The least electricity-hungry cities\nSorting the time-based datasets ascending show us strange patterns. The smallest electricity consumers show us a substantial list of inconsistencies such as:\n- City casing is not consistent.\n- The `o` in Amsterdam zuidoost is replaced with zeros.\n- Amsterdam Zuid-Oost is not a city but part a part of Amsterdam\n- Amsterdam Zuid-Oost existed before 2016\n- Cities which got newly created at different intervals\n- Cities which disappeared from the dataset (Not visible on this chart)\n\nThese inconsistencies support our assumption of incomplete data.","e7f583f2":"<a id=\"LREP\"><\/a>\n## 4.2 Largest renewable electricity producers\nThe charts below contradict my initial hypothesis. Large cities in urban areas produce more renewable electricity than smaller rural places.","50b696fe":"## 2.2 Electricity statistics per connection\n<a id=\"ESPC\"><\/a>\nIt seems like our previous assumptions are correct. The electricity consumption per row is the average over multiple connections. Therefore we should correct it.","9bca42f7":"## 1.3 Load & Process\n<a id=\"loadnprocess\"><\/a>\nThe data set supplied is divided into files that are categorized by supplier and year. We group these files based on the year of measurement. After this, we get a quick look at the data to look at the column names. It seems like the last three columns got corrupted.","46294995":"<a id=\"EPA\"><\/a>\n# **2. Exploratory data analysis**\nAs for any dataset before we begin analysing the data we don't know how complete the dataset is. Therefore the first step of the analysis is validating the growth of the data points over time.\n\n<a id=\"AAS\"><\/a>\n## 2.1 Aggregation annual statistics\nThe first aggregation is done to confirm if the trend is consistent. Here we sum annual statistics and plot them against the date of measurement. According to this graph the netherlands only uses 1.6 tWh, which seems to be invalid compared to the information given on this [source](https:\/\/www.cbs.nl\/nl-nl\/publicatie\/2015\/07\/elektriciteit-in-nederland) (~100tWh \/ year). Solving this is the crux of the exploratory data analysis & the geospacial based analysis.","de984c12":"# **Netherlands electricity regional time series**\n\n[1. Introduction](#introduction)<br>\n&emsp;[1.1 Hypotosis](#Hypotosis)<br>\n&emsp;[1.2 Setting up libraries](#setup)<br>\n&emsp;[1.3 Load and Process](#loadnprocess)<br>\n[2. Exploratory data analysis](#EPA)<br>\n&emsp;[2.1 Aggregation annual statistics](#AAS)<br>\n&emsp;[2.2 Data cleaning](#DC)<br>\n&emsp;[2.3 Correcting electricity usage per connection](#CEUPC)<br>\n[3. Geospacial based analysis](#GBA)<br>\n&emsp;[3.1 Explaining the enviroment](#ETE)<br>\n&emsp;[3.2 Geospacial based exploritory data analysis](#GBEDA)<br>\n&emsp;[3.3 The most electricity-hungry cities](#TMEHC)<br>\n&emsp;[3.4 The least electricity-hungry cities](#TLEHC)<br>\n[4. Modelling](#M)<br>\n&emsp;[4.1 General renewable electricity production](#GREP)<br>\n&emsp;[4.2 Largest renewable electricity producers](#LREP)<br>\n&emsp;[4.3 Renewable electricity trends](#RET)<br>\n\n<a id=\"introduction\"><\/a>   \n# **1. Introduction**\nBy 2023 at least 27% of the electricity produced has to be renewable. We aim to research if these goals are realistic & research the current electricity in different places of The Netherlands. We aim to answer questions such as:\n\n\n**(a)** How much per cent of all consumed electricity is renewable?<br>\n**(b)** Where is the most renewable electricity produced & how does this grow over time?<br>\n**(c)** Will the renewable electricity trend keep up with the electricity usage trend?<br>\n\n<a id=\"Hypotosis\"><\/a>\n## 1.1 Hypotosis\n\nBefore researching I try to predict the outcome of this research. With my research, I try to confirm or deny my assumptions.\n\n**(a)** How many per cent of all consumed electricity is renewable?<br>\nI expect renewable electricity production to be very little compared to the non-renewable electricity usage.<br>\n**(b)** Where is the most renewable electricity produced & how does this grow over time?<br>\nI expect the most renewable electricity\/connection to be produced outside of major cities. Since it looks like people in rural areas have bigger houses and thus more space for PVs.<br>\n**(c)** Will the renewable electricity trend keep up with the electricity usage trend?<br>\nI suspect that renewable electricity grows harder compared to net electricity consumptions since electronics get more efficient & generating renewable electricity gets more affordable.<br>\n\n<a id=\"setup\"><\/a>\n## 1.2 Setting up libraries","cf7a0686":"<a id=\"GBA\"><\/a>\n# **3. Geospacial based analysis**\nThe dataset is associated with spatial data. Thus we should verify if this is also correct and if we are not missing information.\n\n<a id=\"ETE\"><\/a>\n## 3.1 Explaining the enviroment\nIn the image shown below, you can see the cluster size we use for plotting geospacial information. These clusters are based on postal 2 codes."}}