{"cell_type":{"7ed3af3d":"code","4ce414e2":"code","b4d76aff":"code","b2c69e05":"code","1312e2b2":"code","aa1cac2b":"code","d9a94ca9":"code","0d13dde9":"code","9919e228":"code","573e127f":"code","d4afa090":"code","6176e6b0":"code","acc69d58":"code","6b3e4a2b":"code","3fe4cfe4":"markdown","61e9b95f":"markdown","891fa5e9":"markdown","326bd9b0":"markdown","dbf6aa18":"markdown","b7dd385d":"markdown","9be9b520":"markdown"},"source":{"7ed3af3d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4ce414e2":"import seaborn as sns","b4d76aff":"data=pd.read_csv('\/kaggle\/input\/graduate-admissions\/Admission_Predict.csv')","b2c69e05":"data.head()","1312e2b2":"data.isna().sum()","aa1cac2b":"data.drop(['Serial No.'],axis=1,inplace=True)","d9a94ca9":"sns.lineplot(data['GRE Score'],data['Chance of Admit '])","0d13dde9":"sns.countplot(data['Research'])","9919e228":"data['University Rating']=data['University Rating'].astype(str)\nrating=pd.get_dummies(data['University Rating'],prefix='rating_',drop_first=True)\ndata.drop(['University Rating'],axis=1,inplace=True)","573e127f":"new_data=data.iloc[:,:2].copy()\nnew_data=pd.concat([new_data,rating],axis=1)\nnew_data=pd.concat([new_data,data.iloc[:,2:].copy()],axis=1)","d4afa090":"new_data.head()","6176e6b0":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.ensemble import GradientBoostingRegressor","acc69d58":"train_label=new_data['Chance of Admit '][0:300]\ntrain_features=new_data.drop('Chance of Admit ',axis=1)[0:300]\n\ntest_label=new_data['Chance of Admit '][300:]\ntest_features=new_data.drop('Chance of Admit ',axis=1)[300:]","6b3e4a2b":"gbr=GradientBoostingRegressor(loss='huber',learning_rate=0.1,max_depth=3,alpha=0.82,random_state=0,n_estimators=70)\ngbr.fit(train_features,train_label)\ny_pred=gbr.predict(test_features)\nprint('MSE : ',mean_squared_error(test_label,y_pred))\nprint('RMSE : ',np.sqrt(mean_squared_error(test_label,y_pred)))","3fe4cfe4":"# Arranging dataset in order after getting dummies---","61e9b95f":"# RMSE and MSE on last 100 Observations---","891fa5e9":"# Model Building---","326bd9b0":"# Checking for Class Imbalance---","dbf6aa18":"# Checking existence of Nan Values---","b7dd385d":"# Relation b\/w GRE Score and Chance of Admit---","9be9b520":"# Getting dummies of \"Rating\"---"}}