{"cell_type":{"f6880c8e":"code","e2cecf84":"code","9c164b5d":"code","64a55e69":"code","e3a75bbd":"code","2e573fa4":"code","38088cb4":"code","6093e1df":"code","4a1a9116":"code","6e4499ea":"code","c8b435f1":"code","a2ee336b":"code","9492daf1":"code","856e1f0e":"code","1a7decd4":"code","5a6bcb43":"markdown"},"source":{"f6880c8e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('..\/input\/creditcardfraud\/creditcard.csv'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e2cecf84":"FILEPATH = '\/kaggle\/input\/creditcardfraud\/creditcard.csv'","9c164b5d":"df = pd.read_csv(FILEPATH, engine='python')\n\ndf.head(10)","64a55e69":"df.shape","e3a75bbd":"#Description of DataFrame\ndf.describe()","2e573fa4":"#See if missing values are present\ndf.isnull().values.any()","38088cb4":"#How many types of values are present\nprint(pd.value_counts(df['Class']))","6093e1df":"import matplotlib.pyplot as plt","4a1a9116":"LABELS = [\"Normal\", \"Fraud\"]","6e4499ea":"#Display plot of value counts\n\nclass_counts = pd.value_counts(df['Class'], sort = True)\nclass_counts.plot(kind = 'bar', rot=0)\nplt.title('Counts of Fraud\/Normal')\nplt.xticks(range(2), LABELS)\nplt.xlabel(\"Class\")\nplt.ylabel(\"Count\")","c8b435f1":"fraud = df[df[\"Class\"]==1]\n\nnormal = df[df[\"Class\"]==0]","a2ee336b":"print(fraud.shape, normal.shape)","9492daf1":"#Use describe to look at how much the range of values are in the entire DataFrames\n#fraud.describe()\n#For specific column add column name like so\nfraud.Amount.describe()","856e1f0e":"normal.Amount.describe()","1a7decd4":"#Subplots can be used to add multiple plots in the same window\nfig, (ax1, ax2) = plt.subplots(2, 1, sharex=True)\nfig.suptitle(\"Amount per class\", fontsize='large')\nbins = 50\n#Specify which axis where you are goin to plot\nax1.hist(fraud.Amount, bins = bins)\nax1.set_title('Fraudulent amount')\nax2.hist(normal.Amount, bins = bins)\nax2.set_title('Normal amount')\nplt.xlabel('Amount ($)')\nplt.ylabel('Number of Transactions')\n#plt.xlim((0, 20000))\nplt.yscale('log') # Used to better view the second plot\nplt.show()","5a6bcb43":"# Sources:\n\nhttps:\/\/www.kaggle.com\/pavansanagapati\/anomaly-detection-credit-card-fraud-analysis\n\nhttps:\/\/matplotlib.org\/3.3.0\/api\/_as_gen\/matplotlib.pyplot.xticks.html\n\nhttps:\/\/matplotlib.org\/3.3.0\/api\/_as_gen\/matplotlib.pyplot.subplots.html\n\nhttps:\/\/matplotlib.org\/3.1.1\/api\/_as_gen\/matplotlib.pyplot.suptitle.html\n\nhttps:\/\/www.geeksforgeeks.org\/matplotlib-pyplot-xlim-in-python\/#:~:text=The%20xlim()%20function%20in,limits%20of%20the%20current%20axes.\n\nhttps:\/\/matplotlib.org\/3.3.0\/api\/_as_gen\/matplotlib.pyplot.yscale.html"}}