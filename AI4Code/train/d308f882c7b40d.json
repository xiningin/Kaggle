{"cell_type":{"68cce905":"code","1aa2e4f3":"code","9d48fd7c":"code","2b3e8e58":"code","df7e9cc2":"code","454ff936":"code","9ca25610":"code","75ab74d4":"code","121d8bca":"code","e861edb8":"code","d7bec921":"code","2028a683":"code","7bed719a":"code","173857b7":"code","1fe5c9fb":"code","4c7993e2":"code","1f177d56":"code","e23c8976":"code","5fe4b091":"code","232416f9":"markdown","b3b0c285":"markdown","320f567f":"markdown","8fbe751b":"markdown","e053b6a6":"markdown","fe8c1771":"markdown","7c5deaf3":"markdown","11748208":"markdown"},"source":{"68cce905":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1aa2e4f3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","9d48fd7c":"coffee = pd.read_csv(\"\/kaggle\/input\/coffee-and-code\/CoffeeAndCodeLT2018.csv\")","2b3e8e58":"coffee.head()","df7e9cc2":"coffee = coffee.drop('Country', axis =1)","454ff936":"coffee.isnull().sum()","9ca25610":"plt.figure(figsize=(12,12))\nplt.title('Histogram of Ages')\ncoffee_hist = sns.countplot(data=coffee, x='AgeRange', hue='Gender')\nplt.show()","75ab74d4":"coffee.AgeRange.fillna(\"18 to 29\", inplace=True)","121d8bca":"coffee.isnull().sum()","e861edb8":"plt.figure(figsize=(12,12))\nplt.title('Coffee Type Count')\nplt.xticks(rotation=30)\ncoffee_type = sns.countplot(data=coffee, x='CoffeeType', hue='AgeRange')\nplt.show()","d7bec921":"coffee.CoffeeType.fillna(\"Nescafe\", inplace=True)","2028a683":"coffee.isnull().sum()","7bed719a":"sns.scatterplot(x=coffee['CodingHours'], y = coffee['CoffeeCupsPerDay'])","173857b7":"sns.regplot(x=coffee['CodingHours'], y=coffee['CoffeeCupsPerDay'])","1fe5c9fb":"sns.lmplot(x='CodingHours', y='CoffeeCupsPerDay', hue='Gender', data=coffee)","4c7993e2":"sns.lmplot(x='CodingHours', y='CoffeeCupsPerDay', hue='CoffeeSolveBugs', data=coffee)","1f177d56":"plt.xticks(rotation=30)\nsns.countplot(data=coffee, x='CoffeeTime', hue='Gender')","e23c8976":"plt.figure(figsize=(12,12))\nplt.xticks(rotation=30)\nsns.countplot(data=coffee, x='CoffeeTime', hue='CoffeeType')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","5fe4b091":"sns.countplot(data=coffee, x='CodingWithoutCoffee', hue='Gender')","232416f9":"As all the country entries are from the same place, it is safe to drop the column. Let's check for for NA's!","b3b0c285":"There is a favorite but not by the same margin as the Age Range before. Still we can assign the Coffee Type to Nescafe.","320f567f":"There is a lot to break down in all the different visualizations. Across both genders, as coding hours per day increases, there is an increase in the amount of coffee drank. The data also suggests that there is some evidence that coffee helps kill bugs in the code. There is also some evidence to suggest that people either drink before coding or during but not both. And the types of coffee that is drank varies greatly, though Nescafe has the greatest percentage of drinkers.","8fbe751b":"Checking for NA's one more time!","e053b6a6":"Now that there are no any more NA's, we can get to some additional visualizations.","fe8c1771":"There is still one missing value in coffee type. Let's see the distribution for coffee types.","7c5deaf3":"Fortunately, there are only a few null values.","11748208":"As we can see, most of the Age Range is centered around 18-29. So we can assign the missing values to there."}}