{"cell_type":{"ae4c7f69":"code","02c2aa9c":"code","b8491595":"code","87b0f267":"code","6120af92":"code","256cc716":"code","f862065e":"code","2f0fe370":"code","d1ac69f7":"code","81fffaf8":"code","df6d0d50":"code","cc5e5dce":"code","ffea0d8a":"code","5c83d991":"code","1a8f445b":"code","1fb3478e":"code","a3ab8863":"code","bcdc4ae4":"code","d991eae1":"code","d7bff4fb":"code","87070ec8":"code","51667af6":"code","a7d2f7d0":"code","74a262a5":"code","d5d9d8fd":"code","f7be9ae2":"code","36fc2052":"code","a4b8f7e1":"code","3149678e":"code","d73a9eb6":"code","58d95e4c":"code","981797c1":"code","4c9fe933":"code","eb4247c6":"code","c699723b":"code","1764b40e":"code","f3d28a4a":"code","b7019d45":"code","5b61c71f":"code","2472d744":"code","dd90eab8":"code","7441fb6b":"code","84e8e06b":"code","250bc49f":"code","0b62d0df":"code","412946db":"code","0170c942":"code","e891223e":"code","6bd3b5f2":"code","e80e7554":"code","7ccb3a1e":"code","f1c8f10a":"code","b7f0351b":"code","93396b96":"code","59369864":"code","83449c65":"markdown","05e4acc3":"markdown","5b37bc3e":"markdown","a5246354":"markdown","077586f0":"markdown","ecaf83c9":"markdown","1ae7e33f":"markdown","de217c54":"markdown","cc19c6bf":"markdown","896a5216":"markdown","f3090506":"markdown","d43c10f3":"markdown","5bda486d":"markdown","53fe9022":"markdown","4e508b1d":"markdown","520773a9":"markdown","12ac04d0":"markdown"},"source":{"ae4c7f69":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","02c2aa9c":"Data_15 = pd.read_csv('\/kaggle\/input\/world-happiness\/2015.csv')\nData_16 = pd.read_csv('\/kaggle\/input\/world-happiness\/2016.csv')\nData_17 = pd.read_csv('\/kaggle\/input\/world-happiness\/2017.csv')\nData_18 = pd.read_csv('\/kaggle\/input\/world-happiness\/2018.csv')\nData_19 = pd.read_csv('\/kaggle\/input\/world-happiness\/2019.csv')","b8491595":"Data_15 #Fetching all general data of 2015","87b0f267":"Data_15.info() #checking values and the types","6120af92":"Data_15.columns # To see the titles of our data set","256cc716":"Data_15['Year'] = '2015' #Adding \"Year\" to our data after Drop some unnecessary columns\nData_15 = Data_15 [['Year','Country', 'Region', 'Happiness Rank', 'Happiness Score',\n       'Standard Error', 'Economy (GDP per Capita)', 'Family',\n       'Health (Life Expectancy)', 'Freedom', 'Trust (Government Corruption)',\n       'Generosity', 'Dystopia Residual' ]]\nData_15","f862065e":"Data_15.drop(['Happiness Rank','Standard Error','Economy (GDP per Capita)','Family','Dystopia Residual'], axis=1, inplace=True)\nData_15","2f0fe370":"Data_15.columns = ['Year','Country','Region','Happiness','Health','Freedom','Corruption','Generosity']\nData_15","d1ac69f7":"Data_16","81fffaf8":"Data_16.columns # To see the titles of our data set","df6d0d50":"Data_16['Year'] = '2016'\nData_16 = Data_16 [['Year','Country', 'Region', 'Happiness Rank', 'Happiness Score',\n       'Lower Confidence Interval', 'Upper Confidence Interval',\n       'Economy (GDP per Capita)', 'Family', 'Health (Life Expectancy)',\n       'Freedom', 'Trust (Government Corruption)', 'Generosity',\n       'Dystopia Residual']]\nData_16","cc5e5dce":"Data_16.drop(['Happiness Rank','Lower Confidence Interval','Upper Confidence Interval','Economy (GDP per Capita)',\n              'Family','Dystopia Residual'], axis=1, inplace=True)\nData_16","ffea0d8a":"Data_16.columns = ['Year','Country','Region','Happiness','Health','Freedom','Corruption','Generosity']\nData_16","5c83d991":"Data_17.columns # To see the titles of our data set","1a8f445b":"Data_17['Year'] = '2017'\nData_17 = Data_17 [['Year','Country', 'Happiness.Rank', 'Happiness.Score', 'Whisker.high',\n       'Whisker.low', 'Economy..GDP.per.Capita.', 'Family',\n       'Health..Life.Expectancy.', 'Freedom', 'Generosity',\n       'Trust..Government.Corruption.', 'Dystopia.Residual']]\nData_17","1fb3478e":"Data_17.drop(['Happiness.Rank','Whisker.high','Whisker.low','Economy..GDP.per.Capita.',\n              'Family','Dystopia.Residual'], axis=1, inplace=True)\nData_17","a3ab8863":"Data_17.columns = ['Year','Country','Happiness','Health','Freedom','Corruption','Generosity']\nData_17","bcdc4ae4":"Data_18.columns # To see the titles of our data set","d991eae1":"Data_18['Year'] = '2018'\nData_18 = Data_18 [['Year','Overall rank', 'Country or region', 'Score', 'GDP per capita',\n       'Social support', 'Healthy life expectancy',\n       'Freedom to make life choices', 'Generosity',\n       'Perceptions of corruption']]\nData_18","d7bff4fb":"Data_18.drop(['Overall rank','GDP per capita','Social support'\n              ], axis=1, inplace=True)\nData_18","87070ec8":"Data_18.columns = ['Year','Country','Happiness','Health','Freedom','Corruption','Generosity']\nData_18","51667af6":"Data_19.columns","a7d2f7d0":"Data_19['Year'] = '2019'\nData_19 = Data_19 [['Year','Overall rank', 'Country or region', 'Score', 'GDP per capita',\n       'Social support', 'Healthy life expectancy',\n       'Freedom to make life choices', 'Generosity',\n       'Perceptions of corruption']]\nData_19","74a262a5":"Data_19.drop (['Overall rank','GDP per capita','Social support'],axis=1, inplace=True)\nData_19","d5d9d8fd":"Data_19.columns = ['Year','Country','Happiness','Health','Freedom','Corruption','Generosity']\nData_19","f7be9ae2":"# To concat our datas of 5 years\nAll_Data = pd.concat([Data_15,Data_16,Data_17,Data_18,Data_19], ignore_index=True, sort=False)\nAll_Data\n","36fc2052":"sorted(list(All_Data.Country.unique()))","a4b8f7e1":"All_Data.columns # Showing All general columns","3149678e":"data1 = Data_15.iloc[:,1:3] \nAll_Data = pd.merge(All_Data,data1, on = 'Country', how = 'left') ","d73a9eb6":"All_Data","58d95e4c":"#Drop \"Region_x\" and rename \"Region_y to Region\" to all data\nAll_Data.drop([\"Region_x\"],axis=1,inplace=True)\nAll_Data.rename(columns={\"Region_y\":\"Region\"},inplace=True) \nAll_Data =All_Data[['Year','Country','Region','Happiness','Health','Freedom','Corruption','Generosity']]","981797c1":"All_Data","4c9fe933":"# finding Nan values in each topic\nAll_Data.isna().sum()","eb4247c6":"\nAll_Data[All_Data.Region.isna()].Country","c699723b":"#Completing regions which were NaN values\n\nAll_Data.loc[689,'Region'] = 'Mediterranean Sea'\nAll_Data.loc[527,'Region'] = 'Mediterranean Sea'\nAll_Data.loc[709,'Region'] = 'North Macedonia'\nAll_Data.loc[209,'Region'] = 'Central America'\nAll_Data.loc[518,'Region'] = 'Central America'\nAll_Data.loc[364,'Region'] = 'Central America'\nAll_Data.loc[172,'Region'] = 'Northern-South America'\nAll_Data.loc[385,'Region'] = 'Eastern Pearl River Delta'\nAll_Data.loc[233,'Region'] = 'Sub-Saharan Africa'\nAll_Data.loc[254,'Region'] = 'Sub-Saharan Africa'\nAll_Data.loc[270,'Region'] = 'Sub-Saharan Africa'\nAll_Data.loc[300,'Region'] = 'Sub-Saharan Africa'\nAll_Data.loc[347,'Region'] = 'Sub-Saharan Africa'\nAll_Data.loc[407,'Region'] = 'Sub-Saharan Africa'\nAll_Data.loc[425,'Region'] = 'Sub-Saharan Africa'\nAll_Data.loc[461,'Region'] = 'Sub-Saharan Africa'\nAll_Data.loc[507,'Region'] = 'Sub-Saharan Africa'\nAll_Data.loc[567,'Region'] = 'Sub-Saharan Africa'\nAll_Data.loc[588,'Region'] = 'Sub-Saharan Africa'\nAll_Data.loc[623,'Region'] = 'Sub-Saharan Africa'\nAll_Data.loc[664,'Region'] = 'Sub-Saharan Africa'\nAll_Data.loc[737,'Region'] = 'Sub-Saharan Africa'  \nAll_Data.loc[738,'Region'] = 'Sub-Saharan Africa'\nAll_Data.loc[745,'Region'] = 'Sub-Saharan Africa'\nAll_Data.loc[781,'Region'] = 'Sub-Saharan Africa'","1764b40e":"All_Data[All_Data.Region.isna()].Country","f3d28a4a":"All_Data.isna().sum()","b7019d45":"# Filling avarage of NaN values of Generosity\nAll_Data[\"Generosity\"].fillna(All_Data[\"Generosity\"].mean(),inplace=True)\nAll_Data.isna().sum()","5b61c71f":"All_Data.describe().T","2472d744":"All_Data.info()","dd90eab8":"#calculating sort of region\nAll_Data.groupby(\"Region\").mean()\n\nlen(All_Data.groupby(\"Region\"))-1","7441fb6b":"#finding variables which affect happiness most.\ncorrelation=All_Data.corr() \ncorrelation","84e8e06b":"correlation[(correlation.abs()>0.5)&(correlation.abs()<2)]","250bc49f":"\nhappy_score = All_Data.groupby(\"Country\")[\"Happiness\"].mean()\nhappy_score","0b62d0df":"happy_score.sort_values(ascending=False).head(3) #First 3 Happiest countries.","412946db":"happy_score.sort_values(ascending=False).tail(3) #First 3 unhappiest countries.","0170c942":"corruption_rank = All_Data.groupby(\"Country\")[\"Corruption\"].mean()\ncorruption_rank","e891223e":"corruption_rank.sort_values(ascending=False).head() #Rank of most corruptions by countries ","6bd3b5f2":"corruption_rank.sort_values(ascending=False).tail() #Rank of less corruptions by countries ","e80e7554":"freedom_rank = All_Data.groupby(\"Region\")[\"Freedom\"].mean()\nfreedom_rank","7ccb3a1e":"freedom_rank.sort_values(ascending=False).head(1)  #top two regions of freedom \n","f1c8f10a":"freedom_rank.sort_values(ascending=True).head(1)   # worsest region of freedom","b7f0351b":"unhealthy = All_Data.groupby(\"Region\")[\"Health\"].mean()\nunhealthy","93396b96":"unhealthy.sort_values(ascending=True).head(1) #Unhealthiest region of countries","59369864":"All_Data.groupby(\"Region\").aggregate({'Happiness':'mean','Freedom':'mean', 'Corruption':'mean'})\n","83449c65":"# Ulkeleri bolgelerine gore gruplayarak, Mutluluk, Ozgurluk ve Yolsuzluk degiskenlerinin ortalamalini aliniz.","05e4acc3":"# 5 yila bakarak, ozgurluk ortalamasi en yuksek ve en dusuk BOLGEYI\/REGION bulunuz.","5b37bc3e":"# 2016 Data Report","a5246354":"# Mutlulugu en fazla etkileyen degisken hangisidir. Yillara gore farklilik olup olmadigina bakiniz.","077586f0":"# 2017 Data Report","ecaf83c9":"# Data uzerinde info ve describe bilgilerini aliniz.","1ae7e33f":"# Bazi data setlerde ulkelerin region bilgileri yok, bu ulkeleri arastirarak, region sutununda eksik yerlere ekleyiniz.","de217c54":"# 2018 Data Report","cc19c6bf":"# 5 yilin YOLSUZLUK ortalamasini alarak en iyi ve en kotu ulkeleri bulunuz.","896a5216":"# En sagliksiz bolge hangisidir bulunuz.","f3090506":"# 5 yilin MUTLULUK ortalamasini alarak en mutlu ve en mutsuz 3 ulkeyi bulunuz.","d43c10f3":"# 2019 Data Report","5bda486d":"# * Bu 5 dataseti, ulkeleri baz alarak \" Country, Region, (happiness.score = score), Health, Freedom, Corruption, Generosity\" sutunlari olacak sekilde tekbir df'te birlestiriniz. Diger degiskenleri atabilirsiniz. (Not: Birlestirme islemleri yaparken, gerekirse ek sutunlar olusturabilirsiniz.)","53fe9022":"# NaN degerleri o degiskenin ortalamasi ile doldurunuz.","4e508b1d":"# 2015 Data Report","520773a9":"# NaN degerleri saydiriniz.","12ac04d0":"# Kac cesit bolge var hesaplayiniz."}}