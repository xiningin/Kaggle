{"cell_type":{"bbecbd02":"code","775e59ca":"code","0de9cd75":"code","9b3bf09d":"code","eb8ad4ac":"code","4004f871":"code","1b6653de":"code","3026be7a":"code","ff6567c4":"code","24ce0563":"code","7bb7c10f":"code","c8ab1306":"code","6904a00d":"code","478e2e44":"code","359ff05b":"code","0baf9522":"code","c30c8490":"markdown"},"source":{"bbecbd02":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# plotly\nimport plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport seaborn as sns\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\n\n# Any results you write to the current directory are saved as output.\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","775e59ca":"crime = pd.read_csv('..\/input\/crime.csv',encoding = 'latin-1')","0de9cd75":"crime.head()","9b3bf09d":"crime.info()","eb8ad4ac":"crime.shape","4004f871":"crime.describe()","1b6653de":"crime.shape","3026be7a":"crime.drop(columns = {'INCIDENT_NUMBER','INCIDENT_NUMBER','Long','Location','Lat'},axis = 1)","ff6567c4":"plt.subplots(figsize = (15,9))\nsns.barplot(crime.OFFENSE_DESCRIPTION.value_counts()[:20].index,crime.OFFENSE_DESCRIPTION.value_counts()[:20])\nplt.xticks(rotation = 90)\nplt.show()","24ce0563":"crime2018 = crime[crime.YEAR == 2018]\ncrime2017 = crime[crime.YEAR == 2017]\ncrime2016 = crime[crime.YEAR == 2016]\ncrime2015 = crime[crime.YEAR == 2015]\ntrace1 = go.Bar(\n        x = crime2018.YEAR.iloc[:20],\n        y = crime2018.REPORTING_AREA.value_counts()[:20],\n        marker = dict(color = 'red'),\n        name = '2018')\ntrace2 = go.Bar(\n        x = crime2017.YEAR.iloc[:20],\n        y = crime2017.REPORTING_AREA.value_counts()[:20],\n        marker = dict(color = 'blue'),\n        name = '2017')\ntrace3 = go.Bar(\n        x = crime2016.YEAR[:20],\n        y = crime2016.REPORTING_AREA.value_counts()[:20],\n        marker = dict(color = 'yellow'),\n        name = '2016')\ntrace4 = go.Bar(\n            x = crime2015.YEAR,\n            y = crime2015.REPORTING_AREA.value_counts()[:20],\n            marker = dict(color = 'brown'),\n            name = '2015')\n\nlayout = go.Layout(barmode = 'group')\ndata = [trace1,trace2,trace3,trace4]\nfig = go.Figure(data,layout)\niplot(fig)","7bb7c10f":"plt.subplots(figsize = (12,12))\ncrime.OFFENSE_CODE_GROUP.value_counts()[:20].sort_values().plot(kind = 'barh')\nplt.show()","c8ab1306":"trace1 = go.Bar(\n        x = crime2018.OFFENSE_CODE_GROUP.value_counts().index[:20],\n        y = crime2018.OFFENSE_CODE_GROUP.value_counts().values[:20],\n        \n        marker = dict(color = 'red'),\n        name = '2018')\ntrace2 = go.Bar(\n        x = crime2017.OFFENSE_CODE_GROUP.value_counts().index[:20],\n        y = crime2017.OFFENSE_CODE_GROUP.value_counts().values[:20],\n        \n        marker = dict(color = 'blue'),\n        name = '2017')\ntrace3 = go.Bar(\n        x = crime2016.OFFENSE_CODE_GROUP.value_counts().index[:20],\n        y = crime2016.OFFENSE_CODE_GROUP.value_counts().values[:20],\n        \n        marker = dict(color = 'yellow'),\n        name = '2016')\ntrace4 = go.Bar(\n         x = crime2015.OFFENSE_CODE_GROUP.value_counts().index[:20],\n         y = crime2015.OFFENSE_CODE_GROUP.value_counts().values[:20],\n            \n         marker = dict(color = 'brown'),\n         name = '2015')\n\nlayout = go.Layout(barmode = \"relative\",title =\" \")\ndata = [trace1,trace2,trace3,trace4]\nfig = go.Figure(data,layout)\niplot(fig)","6904a00d":"plt.subplots(figsize = (15,6))\ncrime.DAY_OF_WEEK.value_counts().sort_values().plot(kind = 'bar')\nplt.show()","478e2e44":"plt.subplots(figsize = (15,6))\ncrime.HOUR.value_counts().sort_values().plot(kind = 'bar')\nplt.show()","359ff05b":"plt.subplots(figsize = (15,6))\ncrime.MONTH.value_counts().sort_values().plot(kind = 'bar')\nplt.show()","0baf9522":"trace1 = go.Bar(\n        x = crime2015.MONTH.value_counts().index[:20],\n        y = crime2015.MONTH.value_counts().values[:20],\n        \n        marker = dict(color = 'red'),\n        name = '2018')\ntrace2 = go.Bar(\n        x = crime2016.MONTH.value_counts().index[:20],\n        y = crime2016.MONTH.value_counts().values[:20],\n        \n        marker = dict(color = 'blue'),\n        name = '2017')\ntrace3 = go.Bar(\n        x = crime2017.MONTH.value_counts().index[:20],\n        y = crime2017.MONTH.value_counts().values[:20],\n        \n        marker = dict(color = 'yellow'),\n        name = '2016')\ntrace4 = go.Bar(\n         x = crime2018.MONTH.value_counts().index[:20],\n         y = crime2018.MONTH.value_counts().values[:20],\n            \n         marker = dict(color = 'brown'),\n         name = '2015')\n\nlayout = go.Layout(barmode = \"relative\",title =\" \")\ndata = [trace1,trace2,trace3,trace4]\nfig = go.Figure(data,layout)\niplot(fig)","c30c8490":"How much value have in the data"}}