{"cell_type":{"ee3fc1d1":"code","4e77f9f3":"code","6fc4434f":"code","7c02544e":"code","b3499e20":"code","204de64d":"code","46dc7264":"code","1021305f":"code","acb9e255":"code","af476257":"code","da627feb":"code","346e61a5":"code","e125cb4a":"code","848f046b":"code","77300f44":"code","8d52a8c5":"code","fd05c95e":"markdown","417340a8":"markdown","35e9f10f":"markdown","4964cc09":"markdown","bacf7116":"markdown","c443b5ed":"markdown","332bf255":"markdown","8978401b":"markdown","d9a45d45":"markdown","235a12aa":"markdown","44552735":"markdown","bc8eab7c":"markdown","ddc3143e":"markdown","da64f304":"markdown","4b2f702a":"markdown","8d503233":"markdown","a99efa58":"markdown","85d82830":"markdown"},"source":{"ee3fc1d1":"# Upgrading pandas to 1.0\n\n!pip install --upgrade pandas==1.0.0rc0","4e77f9f3":"!pip show pandas","6fc4434f":"import pandas as pd\ndf = pd.DataFrame({\"int_col\": [1, 2, 3],\n                    \"text_col\": [\"a\", \"b\", \"c\"],\n                    \"float_col\": [0.0, 0.1, 0.2]})\n\ndf\n   ","7c02544e":"df.info()","b3499e20":"df = pd.DataFrame(data={\"Name\": [\"Annie\", \"Cassie\", 'Tom'], \"Country\": [\"Japan\", \"Paris\", \"Canada\"]})\ndf","204de64d":"print(df.to_markdown())","46dc7264":"# dataset consisting of disaster tweets\ndisaster_tweets = pd.read_csv(\"..\/input\/nlp-getting-started\/train.csv\")\ndisaster_tweets.head()","1021305f":"disaster_tweets['text'] = disaster_tweets['text'].astype('string')\ndisaster_tweets.dtypes","acb9e255":"disaster_tweets.select_dtypes('string')[:4]","af476257":"disaster_tweets.text.str.upper()[:5]","da627feb":"disaster_tweets.text.str.lower()[:5]","346e61a5":"disaster_tweets.text.str.split()[:5]","e125cb4a":"disaster_tweets['target'] = disaster_tweets['target'].astype('boolean')\ndisaster_tweets.info()","848f046b":"# pandas 1.0\npd.Series([True, False, None], dtype='boolean')","77300f44":"s = pd.Series([1, 2, None], dtype=\"Int64\")\ns","8d52a8c5":"s[2]","fd05c95e":"These are some of the changes in pandas 1.0.0 which are really useful. However it is advised to go through the full changelog to see other [important enhancements](https:\/\/dev.pandas.io\/docs\/whatsnew\/v1.0.0.html#other-enhancements) to the pandas library.","417340a8":"It is recommended  to explicitly use the string data type when working with strings. There are a lot of advantages in doing the same:\n\n#### 1. Easily select the string columns using the `select_dtypes()`. Previously a column could only be selected by using its name explicitly.","35e9f10f":"### *pandas 1.0.0*","4964cc09":"## [4. Dedicated datatypes for booleans with missing value support](https:\/\/dev.pandas.io\/docs\/whatsnew\/v1.0.0.html#boolean-data-type-with-missing-values-support)\n\npandas 1.0 has added an extension type dedicated to boolean data that can also hold missing values. The target column of the above dataset contains values either `1` or `0`.Let's convert it into a boolean datatype.","bacf7116":"## [2. Converting to Markdown](https:\/\/dev.pandas.io\/docs\/reference\/api\/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown)\n\nDataframes can now be exported to markdown tables with `to_markdown()` method. This is pretty neat.","c443b5ed":" Update: There has been new releases in Pandas and the current is 1.0.3 (March 17, 2020).See [Release Notes](https:\/\/pandas.pydata.org\/docs\/whatsnew\/index.html#release) for a full changelog including other versions of pandas.\n\n","332bf255":"```\n# pandas 0.25.x\npd.Series([True, False, None], dtype='bool')\n```\n![](https:\/\/imgur.com\/wdwBeCA.png)","8978401b":"## [5. Experimental NA scalar to denote missing values](https:\/\/dev.pandas.io\/docs\/whatsnew\/v1.0.0.html#experimental-na-scalar-to-denote-missing-values)\n\npandas uses several values to represent missing data, for instance :\n\n* `np.nan` for float data\n* `np.nan` or `None` for object-dtype data\n* `pd.NaT` for datetime-like data\n\npandas 1.0 does away with all of this and uses a new`pd.NA`(singleton) to represent scalar missing values. This has been done to introduce consistency across all datatypes (instead of `np.nan`, `None` or `pd.NaT` depending on the data type). However, this too comes with a warning:\n\n<div class=\"alert alert-block alert-warning\">\n<h3 class=\"admonition-title\">Warning<\/h3>\n Experimental: the behaviour of pd.NA can still change without warning.\n<\/div>\n","d9a45d45":"## [1. Extended verbose info output for DataFrame](https:\/\/dev.pandas.io\/docs\/reference\/api\/pandas.DataFrame.info.html#pandas.DataFrame.info)\n\nAny data analysis typically begings by exploring a dataframe. `pd.DataFrame.info` Print a concise summary of a DataFrame by printing information about the index dtype and column dtypes, non-null values and memory usage. \n\nIn 1.0, DataFrame.info() also shows line numbers for the columns summary along with other details.","235a12aa":"# Enhancements","44552735":"## [3. Dedicated datatypes for strings](https:\/\/dev.pandas.io\/docs\/reference\/api\/pandas.StringDtype.html#pandas.StringDtype)\n\nThe latest version of pandas introduced experimental data types for strings. Earlier,there was only one otion to store text data and that was using the `object` stype. This sometimes created problems since one could accidently store a mixture of strings and non-strings in an object dtype array.\n\nNow, with version 1.0, we have a `StringDtype`, we have a dedicated dtype for string data.\n\nHowever, this implementation comes with the following warning which needs to be kept in mind.\n\n<div class=\"alert alert-block alert-warning\">\n<h3 class=\"admonition-title\">Warning<\/h3>\n StringDtype is currently considered experimental. The implementation and parts of the API may change without warning.\n<\/div>\n\n","bc8eab7c":"# What\u2019s new in Pandas 1.0.0\n\n\n![](https:\/\/pbs.twimg.com\/profile_banners\/1015706109255053317\/1572020335\/1500x500)\n\n[pandas](https:\/\/dev.pandas.io\/docs\/index.html) is an open source, BSD-licensed library providing high-performance, easy-to-use data structures and data analysis tools for the Python programming language.\nThe first release candidate for pandas 1.0.0 has arrived and here is a brief summary of some of the interesting enhancements that will come along with the release. \n\nFor a detailed verison please refer to the [Pandas 1.0 Release notes](https:\/\/dev.pandas.io\/docs\/whatsnew\/v1.0.0.html)\n\n<div class=\"alert alert-block alert-info\">\n<h3>Note:<\/h3> Pandas 1.0 has dropped the support for Python 2 and requires atleast Python 3.6\n<\/div>","ddc3143e":"### *pandas 1.0.0*","da64f304":"#### 2. The usual string accessor methods now work can be used for data manipulation","4b2f702a":"### *pandas 0.25.x*\n\nThe previous verison of pandas throws error when using string datatype\n\n```\ndisaster_tweets['text'] = disaster_tweets['text'].astype('string')\ndisaster_tweets.dtypes\n```\n\n![](https:\/\/imgur.com\/1tra5c2.png)","8d503233":"### *pandas 0.25.x*\n\n![](https:\/\/imgur.com\/kTd0AJk.png)","a99efa58":"The `Dtype` column now reflects two new datatypes i.e `string` and `boolean`.\n\n### Support for missing values\nAlso, another important thing to note is that, the **default bool** data type based on a bool-dtype NumPy array, the column can only hold True or False, and not missing values. This new **BooleanArray** can store missing values as well by keeping track of this in a separate mask.","85d82830":"### *pandas 1.0.0*"}}