{"cell_type":{"12e80f0c":"code","9c578531":"code","304bb3ab":"code","67eba925":"code","b987258d":"code","b292be28":"code","a33d2f2d":"code","7b9db26a":"code","21f6e644":"markdown","becdc251":"markdown","437db7a0":"markdown"},"source":{"12e80f0c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9c578531":"import plotly as py\nimport plotly.graph_objs as go\nimport pandas as pd\nfrom plotly.offline import download_plotlyjs, init_notebook_mode,plot,iplot","304bb3ab":"init_notebook_mode(connected=True) # here we initialize notebook mode","67eba925":"df=pd.read_csv(\"..\/input\/World_Power_Consumption.txt\")\ndf.head()","b987258d":"init_notebook_mode(connected=True)\ndata = dict(type = 'choropleth',\n            locations = df[\"Country\"],\n            locationmode=\"country names\",\n            colorscale= \"Viridis\",\n            reversescale=True,\n            text= df[\"Text\"],\n            z=df[\"Power Consumption KWH\"],\n            colorbar = {'title':'KWH'})\nlayout=dict(title = 'Power Consumption in KWH by State',\n              geo = dict(\n                         showlakes = True,\n                         lakecolor = 'rgb(85,173,240)')\n             )","b292be28":"choromap=go.Figure(data,layout)\niplot(choromap)","a33d2f2d":"init_notebook_mode(connected=True)\ndata = dict(type = 'choropleth',\n            locations = df[\"Country\"],\n            locationmode=\"country names\",\n            colorscale= \"Viridis\",\n            reversescale=True,\n            text= df[\"Text\"],\n            z=df[\"Power Consumption KWH\"],\n            colorbar = {'title':'KWH'})\n\nlayout = dict(title = '2014 Power Consumption KWH',\n                geo = dict(showframe = False,projection = {'type':'stereographic'})\n             )","7b9db26a":"choromap=go.Figure(data,layout)\niplot(choromap)","21f6e644":"we can create different map styles by changing projection style which can be found in plotly documentation","becdc251":"choromap=go.Figure(data,layout)\niplot(choromap)","437db7a0":"We need to create a data object and layout object before geographical plotting with plotly"}}