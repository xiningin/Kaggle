{"cell_type":{"b3205c22":"code","f6adb6ec":"code","7ead02b5":"code","340ed8b3":"code","efa9b490":"code","538e7cc9":"code","cdec0dd2":"code","bd4358d5":"code","cba35171":"markdown","144f0d54":"markdown","72a5ffb8":"markdown","d1cbc14f":"markdown","21c778ef":"markdown","13f9e825":"markdown","21bc052c":"markdown","a1bd1493":"markdown","047da9c7":"markdown"},"source":{"b3205c22":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f6adb6ec":"admission_df = pd.read_csv('\/kaggle\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv')\nadmission_df.head()","7ead02b5":"admission_df.columns","340ed8b3":"admission_df = admission_df.rename(columns = {'LOR ': 'LOR', 'Chance of Admit ': 'Chance of Admit'}).drop(['Serial No.'], axis = 1)\nadmission_df.columns","efa9b490":"admission_df.isna().any()","538e7cc9":"import statsmodels.api as sm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score\n\nX = admission_df.drop(['Chance of Admit'], axis = 1)\ny = admission_df[['Chance of Admit']]\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)\n\nlinear_regression = sm.OLS(y_train, sm.add_constant(X_train)).fit()\n\ny_predict = linear_regression.predict(sm.add_constant(X_test))\n\nprint('R2: ', r2_score(y_test, y_predict))","cdec0dd2":"linear_regression.params","bd4358d5":"def calculate_prediction(gre, toefl, uni_rating, sop, lor, cgpa, research):\n    X_test = [gre, toefl, uni_rating, sop, lor, cgpa, research]\n    \n    result = linear_regression.params[0]\n    \n    for i, x in enumerate(X_test):\n        result += linear_regression.params[i+1] * x\n    \n    return result\n\n\nprediction = calculate_prediction(280, 100, 3, 3, 5, 9, 0)\n\nprint(f'This candidate\\'s chance of being admitted is of {prediction*100:.2f} %')","cba35171":"# Chances of Admission\n\n![](https:\/\/images.pexels.com\/photos\/2566121\/pexels-photo-2566121.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940)\n\nThis is a simple notebook that intends to implement a multiple linear regression model on the features described by the [graduate-admissions dataset](https:\/\/www.kaggle.com\/mohansacharya\/graduate-admissions), in order to predict the probability of admission for the student with said features. The features are GRE Score, TOEFL Score, University Rating, Statement of Purpose and Letter of Recommendation Strength, Undergraduate GPA, Research Experience, and Chance of Admit (all of them quantitative).","144f0d54":"Choosing the most recent version (1.1)","72a5ffb8":"Cleaning column names and dropping the unnecessary \"Serial No.\" column","d1cbc14f":"Checking for null values","21c778ef":"## Linear regression\n\nMultiple linear regression is implemented for all features","13f9e825":"The correlation coefficient seems good enough for this model. Proceeding with an example regression prediction","21bc052c":"No null values found. Operating normally","a1bd1493":"## Exctacting and checking the data","047da9c7":"Predicting an entry with the following feature values:\n\nGRE Score: 280  \nTOEFL Score: 100  \nUniversity Rating: 3  \nStatement of Purpose: 3  \nLetter of Recommendation Strength: 5  \nUndergraduate GPA: 9  \nResearch Experience: None (0)  "}}