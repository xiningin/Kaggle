{"cell_type":{"866c4a89":"code","a3dc3e92":"code","7d5114d5":"code","1b84ca37":"code","4de56d38":"code","ed39ac11":"code","a8dccb74":"code","c641932b":"code","a70ff9b4":"code","3409eee5":"code","e047c16f":"code","f17fb476":"code","9d557fc3":"markdown","b512806f":"markdown","73a35fe0":"markdown","e6273570":"markdown","8d1566df":"markdown","0269f665":"markdown","ec7d95c8":"markdown","74556ff7":"markdown","0cc688ea":"markdown","47a97008":"markdown","5ce560c5":"markdown","c10ff847":"markdown"},"source":{"866c4a89":"import pandas as pd\nimport numpy as np\nfrom collections import Counter\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport cv2","a3dc3e92":"df = pd.read_csv('\/kaggle\/input\/landmark-recognition-2020\/train.csv')\ndf.head()","7d5114d5":"print(\"Number of training images:\", len(df))","1b84ca37":"print(\"Number of landmarks:\" ,df['landmark_id'].nunique())","4de56d38":"landmark_counts = dict(Counter(df['landmark_id']))\nlandmark_dict = {'landmark_id': list(landmark_counts.keys()), 'count': list(landmark_counts.values())}\n\nlandmark_count_df = pd.DataFrame.from_dict(landmark_dict)\nlandmark_count_sorted = landmark_count_df.sort_values('count', ascending = False)\nlandmark_count_sorted.head(30)","ed39ac11":"fig_count = px.histogram(landmark_count_df, x = 'landmark_id', y = 'count')\nfig_count.update_layout(\n    title_text='Distribution of Landmarks',\n    xaxis_title_text='Landmark ID',\n    yaxis_title_text='Count'\n)\n\nfig_count.show()","a8dccb74":"BASE_DIR = '..\/input\/landmark-recognition-2020'\nTRAIN_DIR = BASE_DIR + '\/train'\n\nimport os\n\nfilelist = []\nfor root, dirs, files in os.walk(TRAIN_DIR):\n    for file in files:\n        filelist.append(os.path.join(root,file))\nlen(filelist)","c641932b":"img_sizes = []\n\nfor img_path in filelist[:1000]:\n    img = cv2.imread(img_path)\n    img_sizes.append(\"{}x{}\".format(img.shape[0], img.shape[1]))","a70ff9b4":"size_counts = dict(Counter(img_sizes))\nsize_dict = {'size': list(size_counts.keys()), 'count': list(size_counts.values())}\n\nsize_df = pd.DataFrame.from_dict(size_dict)\nsize_sorted = size_df.sort_values('count', ascending = False)\nsize_sorted = size_sorted[:10]\n\nfig_image_sizes = px.bar(size_sorted, x = 'size', y = 'count')\nfig_image_sizes.update_layout(title = 'Image Sizes')\nfig_image_sizes.show()","3409eee5":"def retrieve_image(image_id):\n    img = cv2.imread(os.path.join(os.path.join(BASE_DIR, 'train'), image_id[0], image_id[1], image_id[2], image_id + '.jpg'))\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    return img\n\ndef get_image_id(image_id):\n    return df[df['landmark_id'] == image_id]['id'][:1].values[0]","e047c16f":"fig, ax = plt.subplots(5, 2, figsize = (30, 30), dpi = 250)\nax = ax.flatten()\n\ntop_10_landmarks = landmark_count_sorted['landmark_id'][:10].values\n\nfor i in range(10):    \n    ax[i].set_title(get_image_id(top_10_landmarks[i]))\n    ax[i].set_xticks([])\n    ax[i].set_yticks([])\n    ax[i].imshow(retrieve_image(get_image_id(top_10_landmarks[i])))\nfig.tight_layout()    \n# plt.show()","f17fb476":"fig, ax = plt.subplots(5, 2, figsize = (30, 30), dpi = 250)\nax = ax.flatten()\nbottom_10_landmarks = landmark_count_sorted['landmark_id'][-10:].values\n\nfor i in range(10):\n    ax[i].set_xticks([])\n    ax[i].set_yticks([])    \n    ax[i].imshow(retrieve_image(get_image_id(bottom_10_landmarks[i])))\n    ax[i].set_title(get_image_id(bottom_10_landmarks[i]))\nfig.tight_layout()\n# plt.show()","9d557fc3":"<div align = \"center\">\n    <h1>Google Landmark Recognition Challenge<\/h1>\n    <img src = \"https:\/\/miro.medium.com\/max\/1280\/1*OVP48VCImepxkHl7AVzkug.png\">\n<\/div>","b512806f":"Let's start by importing the required libraries:","73a35fe0":"The `train.csv` contains two columns, `id` and `landmark_id`:","e6273570":"But we got only ~81k landmarks:","8d1566df":"# Bottom 10 landmarks:","0269f665":"## About the dataset:","ec7d95c8":"# Let's see the top 10 landmarks!","74556ff7":"## Common Image Sizes:\n\nLet's see which image sizes are common in the dataset:\n\n> NOTE: I'm using the first 1000 images, since I'm reading the image to calculate image sizes.","0cc688ea":"Woah! The training dataset has ~1.5 million images!","47a97008":"<div align = \"center\">\n    <h3>What is this challenge all about?<\/h3>\n    <br>\n<\/div>\n    \n<div align = \"center\">Did you ever think about a place you visited earlier and forgot its name or location? Landmark recognition can help! <b>Google<\/b> aims to predict landmark labels directly from image pixels, to help people better understand and organize their photo collections.<\/div>\n  \n","5ce560c5":"## Distribution of Landmarks with their counts:","c10ff847":"## Most occuring landmarks:\n\nLet's see the most occuring landmarks:"}}