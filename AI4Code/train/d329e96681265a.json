{"cell_type":{"cde9374e":"code","673f1fde":"code","d6562fab":"code","79229bdc":"code","e6f42310":"code","3f51a2f8":"code","813b80ff":"code","1900c0d5":"code","3db6f912":"code","ed3e39c8":"code","4aaf10f9":"code","b59b83b0":"code","9e459557":"code","0ad0a1c0":"code","390d4bf7":"code","42f2a00e":"code","ff71cfe3":"code","db687bf9":"code","8f0f73ea":"code","7f84b57a":"code","4b8c01ff":"code","608eb5f9":"code","9e9e42b8":"code","ecf06c35":"code","c599c2b8":"code","e092d8e8":"code","ae9c31ac":"code","46830fee":"code","5c4089a6":"code","27020fc3":"code","b2bc1d27":"code","62848b8c":"code","dfecb574":"code","311ade2e":"code","92e9051e":"markdown","ec4b2b78":"markdown","5a5fe459":"markdown","edfbf333":"markdown","41360e0f":"markdown","09c725d4":"markdown","a3542761":"markdown","fd0c0b01":"markdown","251feca0":"markdown","ebce3007":"markdown","cf646b20":"markdown","5f57cab7":"markdown","098e130e":"markdown","76330f6c":"markdown","28a8cd0d":"markdown","c6c4ee1b":"markdown","2b81814c":"markdown","99671e11":"markdown","6790238b":"markdown","c018d4ad":"markdown","4ea7528e":"markdown","79c44bbe":"markdown","2a507635":"markdown","963c3bf9":"markdown","0ddaf4cb":"markdown","ba7af6d9":"markdown","6497d41e":"markdown","74cdc02f":"markdown","b414de53":"markdown","656034e7":"markdown","39b0674c":"markdown","12a9357c":"markdown","93db77dd":"markdown","ac65b890":"markdown","07ad9eea":"markdown","6899ca71":"markdown","9aedffaf":"markdown","6f1785e6":"markdown","57b3136f":"markdown","d41511fd":"markdown","9c6a408a":"markdown"},"source":{"cde9374e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","673f1fde":"raw = pd.read_csv('\/kaggle\/input\/epitope-prediction\/input_bcell.csv')\n\nraw.head()","d6562fab":"raw.columns","79229bdc":"raw.isnull().sum()","e6f42310":"for col in raw.columns:\n    x = raw[col].unique()\n    if len(x) < 20:\n        print(f\"{col}: {x}\")","3f51a2f8":"!pip install pycaret","813b80ff":"from sklearn.model_selection import train_test_split\ntrain, test = train_test_split(raw, test_size=0.05)","1900c0d5":"from pycaret.classification import *\n\nexperiment = setup(\n    data = train \n    ,target = 'target'\n    ,ignore_features = ['parent_protein_id', 'protein_seq', 'peptide_seq']\n    ,normalize = True\n)","3db6f912":"best = compare_models()","ed3e39c8":"save_model(best, 'model')","4aaf10f9":"plot_model(best)","b59b83b0":"plot_model(best, 'confusion_matrix')","9e459557":"plot_model(best, 'threshold')","0ad0a1c0":"plot_model(best, 'pr')","390d4bf7":"plot_model(best, 'error')","42f2a00e":"plot_model(best, 'class_report')","ff71cfe3":"plot_model(best, 'learning')","db687bf9":"plot_model(best, 'manifold')","8f0f73ea":"plot_model(best, 'calibration')","7f84b57a":"plot_model(best, 'vc')","4b8c01ff":"plot_model(best, 'feature')","608eb5f9":"test_prediction = predict_model(best, test)\ntest_prediction = test_prediction.dropna()\ntest_prediction.to_csv('test_prediction.csv', index=False)\ntest_prediction","9e9e42b8":"test_prediction['Label'] = test_prediction['Label'].apply(pd.to_numeric)\ntest_prediction['comp'] = np.where(test_prediction['target'] == test_prediction['Label'], 'Correct', 'Incorrect')\ntest_prediction.groupby('comp').count()['Label']","ecf06c35":"from sklearn.metrics import confusion_matrix\n\ny_actu = test_prediction['target']\ny_pred = test_prediction['Label']\n\ncm = confusion_matrix(y_actu, y_pred)\ncm","c599c2b8":"import seaborn as sn\nsn.heatmap(cm, cmap=\"Blues\", annot=True,annot_kws={\"size\": 16})","e092d8e8":"from sklearn.metrics import accuracy_score\n\nprint('VALIDATION ACCURACY', accuracy_score(y_actu, y_pred))","ae9c31ac":"sars = pd.read_csv('\/kaggle\/input\/epitope-prediction\/input_sars.csv')\n\nsars.head()","46830fee":"sars.columns","5c4089a6":"sars.isnull().sum()","27020fc3":"sars_prediction = predict_model(best, sars)\nsars_prediction = sars_prediction.dropna()\nsars_prediction.to_csv('sars_prediction.csv', index=False)\nsars_prediction","b2bc1d27":"sars_prediction['Label'] = sars_prediction['Label'].apply(pd.to_numeric)\nsars_prediction['comp'] = np.where(sars_prediction['target'] == sars_prediction['Label'], 'Correct', 'Incorrect')\nsars_prediction.groupby('comp').count()['Label']","62848b8c":"y_sars_actu = sars_prediction['target']\ny_sars_pred = sars_prediction['Label']\n\ncm_sars = confusion_matrix(y_sars_actu, y_sars_pred)\ncm_sars","dfecb574":"import seaborn as sn\nsn.heatmap(cm_sars, cmap=\"Blues\", annot=True)","311ade2e":"print('VALIDATION SARS ACCURACY', accuracy_score(y_sars_actu, y_sars_pred))","92e9051e":"### Validation Curve","ec4b2b78":"### Learning Curve","5a5fe459":"### Class Prediction Error","edfbf333":"### Correct and incorrect predictions","41360e0f":"### Get data","09c725d4":"## Standard in Kaggle to get data paths","a3542761":"### Check the columns in the dataset","fd0c0b01":"### Generate a output with current, prediction and score values","251feca0":"### Confusion matrix","ebce3007":"### Manifold Learning","cf646b20":"Using pycaret Machine learning tool to analyse classification models and get the best model to predict the dataset.","5f57cab7":"## Model analysis and selection","098e130e":"# Classification with PYCARET","76330f6c":"There are no categorical columns. We are good to go with this dataset.","28a8cd0d":"There is no missing values in the dataset","c6c4ee1b":"### Save the best model as output","2b81814c":"### Precision Recall Curve","99671e11":"### Train several models and select the best in accuracy","6790238b":"## Data preprocessing","c018d4ad":"### AUC","4ea7528e":"## Use model to predict over validation data","79c44bbe":"### Feature importance","2a507635":"### Correct and incorrect predictions","963c3bf9":"## Use model to predict SARS","0ddaf4cb":"### Check if there is some categorical column","ba7af6d9":"## Install PYCARET","6497d41e":"* Use train data\n* Remove columns parent_protein_id, protein_seq, peptide_seq because they are not relevant (this analysis is empirical)\n* Apply standard normalization","74cdc02f":"### Prediction","b414de53":"### Get data and do preprocessing","656034e7":"Train models using the whole dataset, with 10 K-Fold cross validations (standard pycaret) and choose the best one.","39b0674c":"### Classification Report","12a9357c":"## Validation accuracy","93db77dd":"### Split dataset to make model validation","ac65b890":"### Setup experiment","07ad9eea":"### Search for null values","6899ca71":"## Confusion matrix","9aedffaf":"## Validation accuracy","6f1785e6":"### Calibration Curve","57b3136f":"## Confusion matrix","d41511fd":"## Best model Analysis","9c6a408a":"### Discrimination Threshold"}}