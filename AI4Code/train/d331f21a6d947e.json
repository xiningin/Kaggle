{"cell_type":{"e84085fd":"code","963a2f48":"code","08a36284":"code","b2c9b733":"code","e35a12c4":"code","1ae1c72a":"code","fc2e1dda":"code","694e5ef6":"code","7eeb1a18":"code","2935c9a8":"code","f84da72d":"code","02de07fa":"code","9961ce51":"code","41ca5edc":"code","d4aecc52":"code","dd5c3311":"code","d20b9723":"code","0d4e978a":"code","cd35b93b":"code","91241458":"markdown","02b6f695":"markdown","b82969b4":"markdown","ad650135":"markdown","a8a1e6d4":"markdown","5240e5e1":"markdown","c1ea6a8e":"markdown","107f7f16":"markdown","32379c4c":"markdown","eb1f9b8a":"markdown","c6674c10":"markdown","0a2150f0":"markdown","b00c4f1e":"markdown","9d544c58":"markdown"},"source":{"e84085fd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns \nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestClassifier ,RandomForestRegressor\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.tree import export_graphviz\nfrom sklearn.metrics import roc_curve ,auc\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.model_selection import train_test_split\nimport eli5\nfrom eli5.sklearn import PermutationImportance\nimport shap\nfrom pdpbox import pdp, info_plots\nnp.random.seed(123)\npd.options.mode.chained_assignment = None \n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","963a2f48":"data = pd.read_csv('..\/input\/heart.csv')\ndata.head()\n#Change column names to better ones\ndata.columns = ['age' , 'sex' , 'chest_pain_type', 'resting_bp' , 'cholestrol' , 'fasting_sugar', 'rest_ecg' , 'max_heartrate', 'angina' , 'depression', 'st_slope' , 'num_major_vessels' , 'thalassemia' , 'target']","08a36284":"data['sex'][data['sex'] == 0] = 'female'\ndata['sex'][data['sex'] == 1] = 'male'\n\ndata['chest_pain_type'][data['chest_pain_type'] == 1] = 'typical angina'\ndata['chest_pain_type'][data['chest_pain_type'] == 2] = 'atypical angina'\ndata['chest_pain_type'][data['chest_pain_type'] == 3] = 'non-anginal pain'\ndata['chest_pain_type'][data['chest_pain_type'] == 4] = 'asymptomatic'\n\ndata['fasting_sugar'][data['fasting_sugar'] == 0] = 'lower than 120mg\/ml'\ndata['fasting_sugar'][data['fasting_sugar'] == 1] = 'greater than 120mg\/ml'\n\ndata['rest_ecg'][data['rest_ecg'] == 0] = 'normal'\ndata['rest_ecg'][data['rest_ecg'] == 1] = 'ST-T wave abnormality'\ndata['rest_ecg'][data['rest_ecg'] == 2] = 'left ventricular hypertrophy'\n\ndata['angina'][data['angina'] == 0] = 'no'\ndata['angina'][data['angina'] == 1] = 'yes'\n\ndata['st_slope'][data['st_slope'] == 1] = 'upsloping'\ndata['st_slope'][data['st_slope'] == 2] = 'flat'\ndata['st_slope'][data['st_slope'] == 3] = 'downsloping'\n\ndata['thalassemia'][data['thalassemia'] == 1] = 'normal'\ndata['thalassemia'][data['thalassemia'] == 2] = 'fixed defect'\ndata['thalassemia'][data['thalassemia'] == 3] = 'reversable defect'\n\ndata.dtypes","b2c9b733":"data['sex'] = data['sex'].astype('object')\ndata['chest_pain_type'] = data['chest_pain_type'].astype('object')\ndata['fasting_sugar'] = data['fasting_sugar'].astype('object')\ndata['rest_ecg'] = data['rest_ecg'].astype('object')\ndata['angina'] = data['angina'].astype('object')\ndata['st_slope'] = data['st_slope'].astype('object')\ndata['thalassemia'] = data['thalassemia'].astype('object')\ndata.dtypes\n","e35a12c4":"data = pd.get_dummies(data , drop_first = True)\ndata.head()\n","1ae1c72a":"x_train , x_test , y_train , y_test = train_test_split (data.drop('target', 1) , data['target'] ,test_size = .2 , random_state = 10)\n","fc2e1dda":"model = RandomForestClassifier(max_depth =5)\nmodel.fit(x_train , y_train)","694e5ef6":"y_predict = model.predict(x_test)\n#y_predict\ny_pred_quant = model.predict_proba(x_test)[:,1]\n#y_pred_quant\ny_pred_bin  = model.predict(x_test)","7eeb1a18":"cm = confusion_matrix(y_test , y_pred_bin)\ncm","2935c9a8":"sensi = cm[0,0]\/(cm[0,0]+cm[1,0])\nspeci = cm[1,1]\/(cm[1,1]+cm[0,1])\nprint(\"Sensitivity = \" ,sensi)\nprint(\"Specificity =\" , speci)\n","f84da72d":"fpr, tpr,  thresholds = roc_curve(y_test , y_pred_quant)\n\nfig , ax = plt.subplots()\nax.plot(fpr,tpr)\nax.plot([0,1] , [0,1] , transform= ax.transAxes , ls=\"--\" , c=\".3\")\nplt.xlim([0.0 , 1.0])\nplt.ylim([0.0 , 1.0])\nplt.xlabel('False Positivity Rate')\nplt.ylabel('True Positivity Rate')\nplt.grid(True)\nplt.title('ROC Curve for Classifier')","02de07fa":"auc(fpr,tpr)","9961ce51":"perm = PermutationImportance(model , random_state =1).fit(x_test ,y_test)\neli5.show_weights(perm ,feature_names = x_test.columns.tolist())","41ca5edc":"base_features = data.columns.values.tolist()\nbase_features.remove('target')\n\nfname = 'num_major_vessels'\npdp_dist = pdp.pdp_isolate(model=model ,dataset = x_test , model_features = base_features , feature = fname)\npdp.pdp_plot(pdp_dist , fname)\nplt.show()\n","d4aecc52":"fname = 'age'\npdp_age = pdp.pdp_isolate(model = model ,dataset = x_test,model_features = base_features , feature = fname)\npdp.pdp_plot(pdp_age,fname)\nplt.show()","dd5c3311":"fname = 'depression'\npdp_dep = pdp.pdp_isolate(model = model , dataset = x_train , model_features = base_features , feature =  fname)\npdp.pdp_plot(pdp_dep , fname)\nplt.show()","d20b9723":"def riskfactors( model , patient):\n    explainer = shap.TreeExplainer(model)\n    values = explainer.shap_values(patient)\n    shap.initjs\n    return shap.force_plot(explainer.expected_value[1] , values[1] , patient)","0d4e978a":"shap.initjs()","cd35b93b":"pred_patient = x_test.iloc[1,:].astype(float)\nriskfactors(model , pred_patient)","91241458":"Visualizations :","02b6f695":"AUC ( Area Under the Curve ) is another metric , with a value of >0.80 indicating a good model fit.","b82969b4":"Assess the model fit using confusion matrix :","ad650135":"The plot is quite weird , with no sensible possible interpretation as it indicates higher age , and low chance of heart disease. Thought the confidence region indicates this might not be true.","a8a1e6d4":"Changing data types for categorical variables to objeect :","5240e5e1":"The Model :","c1ea6a8e":"Let's check for ST depression :","107f7f16":"Importing necessary packages ","32379c4c":"Let's see for age:","eb1f9b8a":"We can see as the number of major blood vessels increase , the probability of heart disease reduces. ","c6674c10":"Changing values fo categorical variables :","0a2150f0":"Calculate sensitivity and specificity as metrics :","b00c4f1e":"Feature Engineering : \n","9d544c58":"SHAP Values:"}}