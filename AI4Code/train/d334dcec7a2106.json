{"cell_type":{"d4ab2673":"code","f6126bb0":"code","48bd7b64":"code","9b57064c":"code","1efc8543":"code","9f7868b3":"code","9ad61ee2":"code","37103aa4":"code","129d00a3":"code","7d58102a":"code","84085e2e":"code","8bd34816":"code","00087dc1":"code","537ae8c9":"code","a77603a0":"code","691d355e":"code","d61dd485":"markdown","859770c6":"markdown","c8fe6e79":"markdown","43edd8b4":"markdown","8b9dcdb1":"markdown","3769d769":"markdown","ef8ff379":"markdown","6d88e531":"markdown","cdd57f20":"markdown","39070791":"markdown","51b39f23":"markdown","d07442fe":"markdown","ab6e8aea":"markdown","f69570ec":"markdown","d29e57f3":"markdown","3f5e7304":"markdown","2ba63c7e":"markdown","b7feca6e":"markdown"},"source":{"d4ab2673":"# Laden des Packages\nimport pandas as pd\n\n# Daten importieren\nsales = pd.read_csv(\"\/kaggle\/input\/dataakademie-zeitreihen\/train.csv\", parse_dates = [\"Date\"],  low_memory=False).drop(columns=[\"Store\",\"StateHoliday\"], axis = 1)\nvalidation = pd.read_csv(\"\/kaggle\/input\/dataakademie-zeitreihen\/test.csv\", parse_dates = [\"Date\"], low_memory=False).drop(columns=[\"Store\",\"StateHoliday\"], axis = 1)","f6126bb0":"# Sichten der Daten\nprint(sales.info())\nprint(\"\\n\")\nprint(sales.head())","48bd7b64":"print(validation.info())\nprint(\"\\n\")\nprint(validation.head())","9b57064c":"# Erstellen der Variablen in den Trainingsdaten\n# sales['Year'] = sales.Date.dt.year\n# sales['Month'] = sales.Date.dt.month\n# sales['WeekOfYear'] = sales.Date.dt.isocalendar().week\n# sales[\"Week\"]= sales.Date.dt.isocalendar().week%4\n\n# Erstellen der Variablen in den Validierungsdaten\n# validation['Year'] = validation.Date.dt.year\n# validation['Month'] = validation.Date.dt.month\n# validation['WeekOfYear'] = validation.Date.dt.isocalendar().week\n# validation[\"Week\"]= validation.Date.dt.isocalendar().week%4","1efc8543":"# Anzeigen der Informationen\nprint(sales.info())\nprint(\"\\n\")\nprint(validation.info())","9f7868b3":"# Importieren von Packages\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n#Find Correlation between the data columns\nplt.figure(figsize=(15,15))\nsns.heatmap(sales.corr())","9ad61ee2":"# Entfernen von Variablen in den Trainingsdaten\n# sales.drop(columns=[\"DayOfWeek\",\"SchoolHoliday\"],inplace = True, axis = 1)\n\n# Entfernen von Variablen in den Validierungsdaten\n# validation.drop(columns=[\"DayOfWeek\",\"SchoolHoliday\"],inplace = True, axis = 1)","37103aa4":"# Hinzuf\u00fcgen eines Index \nsales_index = sales.set_index(\"Date\")\n\n# Aufteilen in Erkl\u00e4rende und Ziel Variable\nX = sales_index.drop([\"Sales\"], axis = 1)\ny = sales_index[\"Sales\"]\n\n# Aufteilen in Trainings- und Testdaten\nX_train = X.sort_index().loc[\"2013\"].values\nX_test = X.sort_index().loc[\"2014\"].values\ny_train = y.sort_index().loc[\"2013\"].values\ny_test = y.sort_index().loc[\"2014\"].values","129d00a3":"# Zuerst importieren wir die Funktion\nfrom sklearn.linear_model import Lasso \n\n# Dann definieren wir das Modell\nlss = Lasso()\n\n# Trainieren des Modells auf den Trainingsdaten\nmodel = lss.fit(X_train,y_train)","7d58102a":"# Zuerst importieren wir die Funktion\n# from sklearn.svm import SVR\n\n# Dann definieren wir das Modell\n# svr = SVR()\n\n# Trainieren des Modells auf den Trainingsdaten\n# model = lss.fit(X_train,y_train)","84085e2e":"# Zuerst importieren wir die Funktion\n# from sklearn.tree import DecisionTreeRegressor\n\n# Dann definieren wir das Modell\n# clf = DecisionTreeRegressor()\n\n# Trainieren des Modells auf den Trainingsdaten\n# model = clf.fit(X_train,y_train)","8bd34816":"# Importieren der Funktion aus dem Package\nfrom sklearn.metrics import mean_squared_error\n\n# Berechnen der Vorhersage f\u00fcr die Testdaten\ny_pred_train = model.predict(X_train)\n\n# Berechnen des MSE f\u00fcr Lasso\nmean_squared_error(y_train,y_pred_train)","00087dc1":"# Importieren der Funktion aus dem Package\nfrom sklearn.metrics import mean_squared_error\n\n# Berechnen der Vorhersage f\u00fcr die Testdaten\ny_pred_test = model.predict(X_test)\n\n# Berechnen des MSE f\u00fcr Lasso\nmean_squared_error(y_test,y_pred_test)","537ae8c9":"# Zuerst importieren wir die Funktion\nfrom sklearn.linear_model import Lasso \n\n# Dann definieren wir das Modell\nlss = Lasso()\n\n# Trainieren des Modells\nmodel_final = lss.fit(X.values,y.values)","a77603a0":"# Vorbereitung des Validationdatensatz\nvalidation_model = validation.drop([\"Date\",\"Id\"],axis = 1).values","691d355e":"# Modell exportieren\nvalidation[\"Sales\"] = model_final.predict(validation_model)\nsubmission = validation[[\"Id\",\"Sales\"]]\nsubmission.to_csv(\"submission.csv\", index = False)","d61dd485":"An dieser Stelle wird ein Modell trainiert. Der Teilnehmer ist dazu angehalten andere Modelle auszuprobieren, die wir im Kurs kennengelernt haben oder sich auf der Seite von [sci-kit learn](https:\/\/scikit-learn.org\/stable\/supervised_learning.html#supervised-learning) befinden. An dieser Stelle sind drei beispielhafte Modelle.","859770c6":"Berechnen des MSE des Models auf den Trainingsdaten.","c8fe6e79":"# Code f\u00fcr den Rossmann Hackathon","43edd8b4":"Der Code ist ein grundlegendes Ger\u00fcst, dass von den Teilnehmern beliebig ver\u00e4ndert werden kann. Wir empfehlen jedoch nur die markierten Bereiche zu bearbeiten, um so zu verhindern, dass das Notebook nicht mehr funktioniert. Die Stelle an denen Sachen ver\u00e4ndert werden sollen sind klar gekennzeichnet und m\u00f6gliche \u00c4nderungen werden beschrieben.","8b9dcdb1":"# HIER BEARBEITEN","3769d769":"### 3.6 Modell auswerten","ef8ff379":"### 3.7 Modell exportieren","6d88e531":"An dieser Stelle wird die Generalisierungsf\u00e4higkeit des Modells \u00fcberpr\u00fcft. Wir erinnern uns, dass ein Modell nicht auf die Trainingsdaten overfitted werden sollte.","cdd57f20":"Hier findet der Prozess der Feature Selektion statt. Daf\u00fcr liegt ein Korrelationsplot vor. Der Teilnehmer ist dazu angehalten Variablen zu entfernen und zu \u00fcberpr\u00fcfen ob das seine Modellierung verbessert.","39070791":"### 3.3 Feature Selektion","51b39f23":"## 1. Laden der Daten","d07442fe":"### 3.5 Modell trainieren","ab6e8aea":"### 3.4 Train Test Split","f69570ec":"# HIER BEARBEITEN","d29e57f3":"Damit wird das Modell exportiert werden kann, passen wir es nun an die gesamten Daten an und nutzen das Modell danach um eine Vorhersage auf die ungesehen Daten zu t\u00e4tigen.","3f5e7304":"## 2. Aufbereitung der Daten","2ba63c7e":"An dieser Stelle k\u00f6nnen neue Variablen erstellet werden, um das Modell zu verbessern. Ein paar beispielhafte Variablen sind hier dargestellt. Teilnehmer sind explizit dazu angehalten sich neue Variablen auszudenken.","b7feca6e":"# HIER BEARBEITEN"}}