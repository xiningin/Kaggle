{"cell_type":{"44dc643d":"code","eab4a2a6":"code","4ed70960":"code","7f24d8ed":"code","ee98af66":"code","c9b81f78":"code","727eb80d":"code","a579d5f5":"code","e344300d":"code","0d0895fe":"code","bd034409":"code","c40f9bf9":"code","4533ae98":"code","a681c76e":"code","7fdf53e6":"code","1c7c7cc4":"code","c6adcef3":"code","6b42a2fd":"code","de4ee9c8":"code","83dfbcfc":"code","fbecbd8d":"code","a65cc59f":"code","d7791873":"code","ddf0251e":"code","f8021446":"code","f1022414":"code","339a1a5f":"code","db00ae7c":"code","c20b8078":"code","66cfcdf1":"code","6aff26f4":"markdown","5a5194a0":"markdown","60d18faa":"markdown","f78666aa":"markdown","a9e9b26c":"markdown"},"source":{"44dc643d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","eab4a2a6":"data=pd.read_json('\/\/kaggle\/\/input\/\/news-headlines-dataset-for-sarcasm-detection\/\/Sarcasm_Headlines_Dataset_v2.json',lines=True)\ndata.head()","4ed70960":"df=pd.read_json('\/\/kaggle\/\/input\/\/news-headlines-dataset-for-sarcasm-detection\/\/Sarcasm_Headlines_Dataset.json',lines=True)\ndf.head()","7f24d8ed":"import nltk\nimport re","ee98af66":"from nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\nfrom nltk.stem import WordNetLemmatizer\nps = PorterStemmer()\nlemmatizer=WordNetLemmatizer()","c9b81f78":"corpus = []\nfor i in range(0, len(df)):\n    review = re.sub('[^a-zA-Z]', ' ', df['headline'][i])\n    review = review.lower()\n    #review = review.split()\n    \n    #review = [lemmatizer.lemmatize(word) for word in review if not word in stopwords.words('english')]\n    #review = ' '.join(review)\n    corpus.append(review)","727eb80d":"from sklearn.feature_extraction.text import CountVectorizer\ncv = CountVectorizer(max_features=5000,ngram_range=(1,3))\nX = cv.fit_transform(corpus).toarray()","a579d5f5":"y=df['is_sarcastic']\ny.head()","e344300d":"\nfrom sklearn.linear_model import PassiveAggressiveClassifier\nlinear_clf = PassiveAggressiveClassifier()","0d0895fe":"linear_clf.fit(X, y)","bd034409":"from sklearn.model_selection import cross_val_score\nscore_PAC = cross_val_score(linear_clf,X,y,cv=10)","c40f9bf9":"score_PAC","4533ae98":"score_PAC.mean()","a681c76e":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(X,y,random_state=0,test_size=0.2)","7fdf53e6":"from sklearn.naive_bayes import MultinomialNB\nmodel=MultinomialNB().fit(x_train,y_train)","1c7c7cc4":"y_pred=model.predict(x_test)","c6adcef3":"from sklearn import metrics","6b42a2fd":"score=metrics.accuracy_score(y_test,y_pred)","de4ee9c8":"score","83dfbcfc":"model1=MultinomialNB().fit(X,y)","fbecbd8d":"score_naive = cross_val_score(model1,X,y,cv=10)","a65cc59f":"score_naive","d7791873":"score_naive.mean()","ddf0251e":"model2=PassiveAggressiveClassifier()","f8021446":"model2.fit(x_train,y_train)","f1022414":"pred=model2.predict(x_test)","339a1a5f":"score_=metrics.accuracy_score(y_test,pred)","db00ae7c":"score_","c20b8078":"s=1\nfor i in range(1,10001):\n    s=i*s\nprint(s)","66cfcdf1":"len(str(s))","6aff26f4":"# so, here we can observe that on this data naive_bayes with k-fold cross validation works for NLP, as it is getting higher accuracy.","5a5194a0":"# using PAC with train_test_split ","60d18faa":"# #using PAC with k-fold cross validation ","f78666aa":"# using naive_bayes with train_test_split","a9e9b26c":"# using naive_bayes with k-fold cross validation"}}