{"cell_type":{"bbb5f1cc":"code","e5c51cde":"code","01084026":"code","9d56f49f":"code","4f37fb19":"code","f0f0e2ff":"code","f93945d3":"code","e8115a97":"code","0c66a342":"code","bc2f5dae":"code","f76e3cb3":"code","bb1f4201":"code","b9177f50":"code","a7b6ad20":"code","cf1f5f1c":"code","59eae9bc":"code","b6198cdd":"markdown"},"source":{"bbb5f1cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e5c51cde":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport cv2","01084026":"train = pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')","9d56f49f":"train.head()","4f37fb19":"train['label'].value_counts()","f0f0e2ff":"from sklearn.model_selection import train_test_split","f93945d3":"X.shape","e8115a97":"from keras.layers import Dense, Dropout\nfrom keras.models import Sequential\nfrom keras.utils import to_categorical","0c66a342":"X = train.drop('label', axis=1).values\ny = to_categorical(train['label'])","bc2f5dae":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","f76e3cb3":"model = Sequential()","bb1f4201":"model.add(Dense(130, activation='relu', input_shape=(784, )))\nmodel.add(Dense(100, activation='relu'))\nmodel.add(Dense(10, activation='softmax'))","b9177f50":"model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])","a7b6ad20":"model.fit(X_train, y_train, epochs=20, batch_size=30)","cf1f5f1c":"model.evaluate(X_test, y_test)","59eae9bc":"model.predict_classes(X[3:4])","b6198cdd":"train.head()"}}