{"cell_type":{"f462b1df":"code","7c04fac2":"code","57c04e03":"code","84fa87bd":"code","bc5a6a1f":"code","fdaef63b":"code","7cdab62f":"code","dd5aae7d":"code","3eb373a1":"code","10245965":"code","0d47ba62":"code","fb515e0b":"code","639c359f":"code","2c88b113":"code","a0713e15":"code","2016e845":"code","c5c1aec1":"markdown","66a26324":"markdown","6d56f5ad":"markdown","0ca9c0f2":"markdown","de00fe3b":"markdown","757a5d67":"markdown"},"source":{"f462b1df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7c04fac2":"fish_df = pd.read_csv('\/kaggle\/input\/fish-market\/Fish.csv')\nfish_df.head()","57c04e03":"fish_columns = fish_df.columns\nfish_columns","84fa87bd":"fish_count_row = fish_df.shape\nfish_count_row","bc5a6a1f":"fish_df.describe()","fdaef63b":"fish_df.info()","7cdab62f":"import seaborn as sns\nimport matplotlib.pyplot as plt\n# joint plot","dd5aae7d":"sns.pairplot(fish_df, hue='Species')","3eb373a1":"sns.heatmap(fish_df.corr(), annot=True, cmap='Blues')","10245965":"fish_species = fish_df[['Species']]\nprint(fish_species)\nfrom sklearn.preprocessing import OneHotEncoder\none_hot_encoder = OneHotEncoder()\nfish_species_1hot = one_hot_encoder.fit_transform(fish_species)\nfish_species_1hot","0d47ba62":"fish_species_1hot.toarray()","fb515e0b":"one_hot_encoder.categories_","639c359f":"fish_df['Species_encode'] = fish_species_1hot\nfish_df","2c88b113":"# from sklearn.model_selection import train_test_split\n# train_fish, test_fish = train_test_split(fish_df, test_size=0.2, random_state = 42)\n# train_fish.shape","a0713e15":"# test_fish.shape","2016e845":".\/","c5c1aec1":"handling text, categorical values - here text is only species\nwe have to set categorical on that column","66a26324":"as we can see above plots every attribute is depending on another attribute except equal attributes\n","6d56f5ad":"Splitting dataset into train_set and test_set, here train_fish, test_fish respectively","0ca9c0f2":"its perfectly clean data we have , no NAN, ","de00fe3b":"let's visualize data","757a5d67":"159 rows and 7 columns data we have"}}