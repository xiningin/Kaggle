{"cell_type":{"f26d57d6":"code","6fc02222":"code","b2bdd962":"code","21ad16be":"code","c1f38545":"code","2780a1f1":"code","8560769f":"code","b07bf663":"code","6e1eb241":"code","9147d21d":"code","cf8e48e6":"code","b7cc3ff4":"code","3579fcdb":"code","54bcf339":"code","d1110982":"code","95385261":"code","9b97075f":"code","cc20b59b":"code","bfd5eeb9":"code","59ac8d77":"code","16f204a3":"code","93e3ce04":"code","8130d126":"code","d7d809bb":"code","e7de4fd2":"code","8b26927f":"code","2f9eaa7e":"code","fbaeb7e1":"code","748bc7f6":"code","dd17c35a":"code","cb030c47":"code","69101269":"code","37fc6977":"code","4c449ab4":"code","d53b6a2c":"code","8af61307":"code","a589d630":"code","fec348f6":"code","9c239a76":"code","d213d63e":"code","3b5985d2":"code","fdac99b4":"code","7a9a32b4":"code","e11505ed":"code","16e824d6":"code","3d7d8255":"markdown","720e4704":"markdown","12fea976":"markdown","c48eef90":"markdown","a359d296":"markdown","404c63f8":"markdown","a2950c14":"markdown","3bfadfdc":"markdown","be6f61a0":"markdown","4dc5c1ea":"markdown","1e49c0c8":"markdown","f14c87fb":"markdown","c029a0f4":"markdown","c4422de5":"markdown","e301b74b":"markdown","4d56e684":"markdown","873fee16":"markdown","cf642970":"markdown","7defafc8":"markdown","9dcf008e":"markdown","1fe0c693":"markdown","3d57fdf7":"markdown","5e7d5ddc":"markdown","56454bf3":"markdown","06038341":"markdown","32f40b00":"markdown","0276a5f9":"markdown","9bc3741a":"markdown","11a285c2":"markdown","66ad7e02":"markdown","33c34591":"markdown","7da4315c":"markdown","56bfec53":"markdown","b43208bd":"markdown","3c773a6d":"markdown","2fb8deb4":"markdown","fd330121":"markdown"},"source":{"f26d57d6":"![Engineers](https:\/\/propakistani.pk\/wp-content\/uploads\/2020\/05\/Cambridge.jpg)","6fc02222":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport missingno as msno\nfrom wordcloud import WordCloud\n\nsns.set_style(\"darkgrid\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b2bdd962":"engineer_data = pd.read_csv(\"\/kaggle\/input\/pakistan-engineers-data\/PITC_Engineering.csv\")","21ad16be":"engineer_data.head()","c1f38545":"engineer_data.drop([\"Unnamed: 0\", \"ID\",'PEC_No','License_no'], axis = 1, inplace = True)","2780a1f1":"engineer_data.head()","8560769f":"print(f\"Shape of dataframe is: {engineer_data.shape}\")","b07bf663":"engineer_data.dtypes","6e1eb241":"engineer_data.info()","9147d21d":"engineer_data.rename({\"Employment_period\" : \"Employment_period(days)\"},\n                     axis = 1,\n                     inplace = True)","cf8e48e6":"engineer_data['Employment_Start_Date'] = pd.to_datetime(engineer_data['Employment_Start_Date'])\nengineer_data['Employment_End_Date'] = pd.to_datetime(engineer_data['Employment_End_Date'])","b7cc3ff4":"engineer_data['Employment_period(days)'] = engineer_data['Employment_period(days)'].str.replace('days','').astype(np.float).astype(\"Int64\")","3579fcdb":"plt.title(\"Numbers of missing values in Each Column\\n\\n\", size = 30)\nmsno.bar(engineer_data, fontsize = 20, color=\"dodgerblue\", sort=\"descending\");","54bcf339":"plt.figure(figsize = (10,5))\nplt.title(\"Missing Values in Dataframe\\n\", size = 15)\n\nsns.heatmap(engineer_data.isnull(), yticklabels=False, cbar = False);","d1110982":"for col in engineer_data.columns:\n    missing_percent = np.round((engineer_data[col].isnull().sum() * 100) \/ engineer_data.shape[0], 3)\n    print(f'{missing_percent} % data is missing in `{col}` column')","95385261":"def msno_table(dataframe):\n        # Total missing values\n        mis_val = dataframe.isnull().sum()\n        \n        # Percentage of missing values\n        missing_percent = (dataframe.isnull().sum() * 100) \/ len(dataframe)\n        \n        # Make a table with the results\n        mis_val_df = pd.concat([mis_val, missing_percent], axis = 1)\n        \n        # Rename the columns\n        mis_val_table_ren_columns = mis_val_df.rename(\n            columns = {0 : 'Missing Values',\n                       1 : '% of Total Values'})\n        \n        # Sort the table by percentage of missing descending\n        mis_val_table_ren_columns = mis_val_table_ren_columns[\n            mis_val_table_ren_columns.iloc[:,1] != 0].sort_values(\n        '% of Total Values', ascending = False).round(3)\n        \n        # Print some summary information        \n        print(f'Selected dataframe has total {dataframe.shape[1]} columns \\n There are {mis_val_table_ren_columns.shape[0]} columns that contain missing values\\n')\n        \n        # Return the dataframe with missing information        \n        return mis_val_table_ren_columns","9b97075f":"msno_table(engineer_data)","cc20b59b":"engineer_data['Employment_period(days)'].max()","bfd5eeb9":"engineer_data['Employment_period(days)'].min()","59ac8d77":"negative_Employment_period = engineer_data[engineer_data['Employment_period(days)'] < 0]\n\nnegative_Employment_period","16f204a3":"negative_Employment_period['Employment_End_Date'] - negative_Employment_period['Employment_Start_Date']","93e3ce04":"plt.figure(figsize = (10,7))\nplt.plot(negative_Employment_period['Employment_Start_Date'], label = \"Start Date\", marker = 'o', color = 'b')\nplt.plot(negative_Employment_period['Employment_End_Date'], label = \"End Date\", color = 'r', marker = 'o')\n\nplt.legend();\n","8130d126":"engineer_data = engineer_data.drop(negative_Employment_period.index).reset_index().drop('index', axis = 1)","d7d809bb":"engineer_data[engineer_data['Employment_period(days)'] < 0]","e7de4fd2":"engineer_data['Engineer_Name'].fillna(\"Unknown\",\n                                      inplace = True)\n\nengineer_data['Father_Name'].fillna(\"Unknown\",\n                                    inplace = True)\n\nengineer_data['Company_Name'].fillna(engineer_data['Company_Name'].mode()[0],\n                                     inplace = True)\n\nengineer_data['Engineering_Degree'].fillna(engineer_data['Engineering_Degree'].mode()[0],\n                                           inplace = True)\n\nengineer_data['Employment_period(days)'].fillna(engineer_data['Employment_period(days)'].median(),\n                                                inplace = True)\n\nengineer_data['Firm_Category'].fillna(engineer_data['Firm_Category'].mode()[0],\n                                      inplace = True)\n\nengineer_data['Firms_City'].fillna(engineer_data['Firms_City'].mode()[0],\n                                      inplace = True)\n\nengineer_data['Province'].fillna(engineer_data['Province'].mode()[0],\n                                      inplace = True)\n\nengineer_data[\"Latitude\"].interpolate(method='linear', inplace=True)\n\nengineer_data[\"Longitude\"].interpolate(method='linear', inplace=True)","8b26927f":"engineer_data[(engineer_data['Employment_Start_Date'].isnull()) | (engineer_data['Employment_End_Date'].isnull())][['Employment_Start_Date','Employment_End_Date','Employment_period(days)','Engineering_Degree']].head(20)","2f9eaa7e":"engineer_data[engineer_data['Employment_period(days)'] == 330]","fbaeb7e1":"engineer_data['Employment_Start_Date'].fillna('2019-08-05', inplace = True)\n\nengineer_data['Employment_End_Date'].fillna('2020-06-30', inplace = True)","748bc7f6":"plt.figure(figsize = (10,5))\n\nsns.heatmap(engineer_data.isnull(), yticklabels=False, cbar = False);","dd17c35a":"engineer_data['Employment_Start_Date'] = pd.to_datetime(engineer_data['Employment_Start_Date'])\nengineer_data['Employment_End_Date'] = pd.to_datetime(engineer_data['Employment_End_Date'])","cb030c47":"engineer_data.dtypes","69101269":"engineer_data.head()","37fc6977":"px.histogram(data_frame = engineer_data,\n             x = 'Engineering_Degree',             \n             title = \"<b>Counts of Engineering Degree<\/b>\",\n             color = \"Engineering_Degree\")","4c449ab4":"fig = px.pie(engineer_data,\n             names='Engineering_Degree',\n             width=800, height=600,\n             hole=0.5)\n\nfig.update_traces(textposition='inside', textinfo='percent+label')\n\nfig.show()","d53b6a2c":"px.histogram(engineer_data, x = 'Firm_Category',\n            color = \"Firms_City\")","8af61307":"desending = engineer_data.sort_values('Employment_period(days)', ascending = False).head(10)\ndesending.head()","a589d630":"ascending = engineer_data.sort_values('Employment_period(days)', ascending = True).head(10)\nascending.head()","fec348f6":"px.scatter(data_frame=desending,\n           x = 'Engineer_Name',\n           y = 'Employment_period(days)',\n           color='Company_Name',\n          hover_data=['Firms_City','Engineering_Degree'])","9c239a76":"px.scatter(data_frame=ascending,\n           x = 'Engineer_Name',\n           y = 'Employment_period(days)',\n           color='Company_Name',\n          hover_data=['Firms_City','Engineering_Degree'])","d213d63e":"fig = px.treemap(engineer_data, path=['Engineering_Degree', 'Firms_City'],\n                  color='Province',\n                  hover_data=['Province'])\nfig.show()","3b5985d2":"fig = px.sunburst(engineer_data, path=['Province', 'Firms_City'],   \n                  hover_data = ['Province'],)\n\n\nfig.show()","fdac99b4":"fig = px.treemap(engineer_data, path=[px.Constant(\"Pakistan\"), 'Firms_City'],\n                  color='Firms_City',)\nfig.show()","7a9a32b4":"## **6.7- Top Words in Engineering Degree**","e11505ed":"text = ' '.join(engineer_data['Engineering_Degree'].str.lower())\n\nwordcloud = WordCloud(width = 2000, height = 900, \n                      background_color ='black',\n                      collocations=False,\n                      max_words=5000,\n                      min_font_size = 21).generate(text)\n    \nplt.figure(figsize=(12, 8), facecolor = 'k', edgecolor = 'k' )\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.tight_layout(pad = 0) \nplt.show()","16e824d6":"text = ' '.join(engineer_data['Company_Name'].str.lower())\n\nwordcloud = WordCloud(width = 2000, height = 1000, \n                      background_color ='red',\n                      collocations=False,\n                      max_words=5000,\n                      min_font_size = 20).generate(text)\n    \nplt.figure(figsize=(12, 8), facecolor = 'k', edgecolor = 'k' )\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.tight_layout(pad = 0) \nplt.show()","3d7d8255":"## **6.1- Analyzing Engineering_Degree**","720e4704":"# **3. Dropping Unnecessary columns**\n","12fea976":"<h2 style=\"text-align:center;background-color:#6cdcf5\">I Hope you like this kernel. If so, don't forget to upvote and leave your valuable comment. Thank you :)<\/h2>\n","c48eef90":"**All the missing values has imputed**","a359d296":"### **6.3.2- Analyzing Companies where Employee doesn't stay for long period**","404c63f8":"# **5.7- Imputing missing values**","a2950c14":"* 1. Importing Libraries\n    \n    \n* 2. Reading Data\n    \n    \n* 3. Dropping unnecessary Columns\n    \n    \n* 4. Meta Information of Dataframe\n    \n    * 4.1- Shape of Dataframe\n    \n    * 4.2- Datatype of Each feature\n    \n    \n* 5. Data Cleaning\n    * 5.1- Re-naming Employment_period\n            \n    * 5.2- Converting dataype of `Employment_Start_Date` & `Employment_End_Date` into datetime\n    \n    * 5.3- Converting datatype of Employment_period(days) feature\n    \n    * 5.4- Checking for NaN values\n    \n    * 5.5- Checking minimum and maximum Employment_period(days)\n    \n    * 5.6- Checking for total records that contain negative value in Employment_period(days)\n    \n    * 5.7- Imputing missing values\n    \n* 6- Visualization\n    \n    * 6.1- Analyzing Engineering_Degree\n    \n    * 6.2- Analyzing Engineering_Degree\n    \n    * 6.3- Analyzing Firm_Category\n        \n        * 6.3.1- Analyzing Companies where Employee stay for long period\n    \n        * 6.3.2- Analyzing Companies where Employee doesn't stay for long period\n    \n    * 6.4- Analyzing Companies where Employee doesn't stay for long period\n    \n    * 6.5- Analyzing Engineering_Degree and Firm City\n    \n    * 6.6- Province where most firms are located\n    \n    * 6.7- Cities of Pakistan where most Firms are located     \n    \n    * 6.7- Cities of Pakistan where most Firms are located\n    \n    * 6.8- Top Words in `Engineering Degree`\n    \n    * 6.9- Top Words in Company Name\n        ","3bfadfdc":"**Minimum days in Employment_period is *-51*, which does not make any sense, So fixing this issue**","be6f61a0":"**Removing these 4 records from data**","4dc5c1ea":"## **4.2- Datatype of features**","1e49c0c8":"## **6.2- Analyzing Firm_Category**","f14c87fb":"## **6.6- Cities of Pakistan where most Firms are located**","c029a0f4":"**We can see that the Employment_Start_Date of every records is `2019-08-05` where  Employment_period(days) is 330, And Employment_Start_Date of each record is `2020-06-30`. So filling missing values with these dates**","c4422de5":"**CiVIL Engineering has most counts and Islamabad is a City where most of the Firms are located**","e301b74b":"# **2. Reading Data**","4d56e684":"## **5.5- Checking minimum and maximum Employment_period(days)**","873fee16":"**CIVIL Engineering has most count with value 5987**","cf642970":"**Total 4 records are present in dataset that has Employment_period(days) value in negative. Also if we look at Employment_Start_Date and Employment_End_Date, then Employment_End_Date is before the Employment_Start_Date which is the root cause of negative value in Employment_period(days)**","7defafc8":"## **5.1- Re-naming *Employment_period***","9dcf008e":"# **4. Meta information of dataframe**","1fe0c693":"## **5.6- Checking for total records that contain negative value in Employment_period(days)**","3d57fdf7":"# **1. Importing required libraries**","5e7d5ddc":"## **4.1- Shape of dataframe**","56454bf3":"## **6.8- Top Words in Company Name**","06038341":"## **5.3- Converting datatype of Employment_period(days) feature**","32f40b00":"## **5.4- Checking for NaN values**","0276a5f9":"### **6.3.1- Analyzing Companies where Employee stay for long period**","9bc3741a":"### **All records where Employment_Start_Date or Employment_End_Date is NaT**","11a285c2":"## **5.2- Converting dataype of *Employment_Start_Date* & *Employment_End_Date* into datetime**","66ad7e02":"**Filling NaT values in Employment_Start_Date and Employment_End_Date according to Employment_period(days) and with existing dates whose Employment_period(days) is 330**","33c34591":"# **6- Visualization**","7da4315c":"**From above graph, most of the firms are located in Islamabad, then lahore, then karachi and so on...**","56bfec53":"## **6.4- Analyzing Engineering_Degree and Firm City**","b43208bd":"## **6.3- Analyzing Employment period**","3c773a6d":"# **5. Data Cleaning**","2fb8deb4":"**All records that has negative value in `Employment_period(days)` and `Employment_Start_Date` is after the `Employment_End_Date` has been removed**","fd330121":"## **6.5- Province where most firms are located**"}}