{"cell_type":{"242f3443":"code","1a924df2":"code","2a764e8c":"code","33041baf":"code","e392a003":"code","aa2c8f69":"code","2ede8194":"code","49afc777":"code","fec0f8cd":"code","9020a496":"code","c470c0bb":"code","d2cba46a":"code","2014caca":"code","7a4d5de3":"code","6d8a5f83":"code","a1966ea8":"code","f478f0bb":"code","8bdbf674":"code","1d8088da":"code","231d46ab":"code","4d847721":"code","938c8090":"code","257cb8fc":"code","e26f36fa":"code","07320ca3":"code","807c64f7":"code","48ef6a93":"code","8b94faba":"code","13153dc8":"code","523f64c5":"markdown","715f1892":"markdown","acdf03e8":"markdown","4cd86db4":"markdown","df9152b1":"markdown","7cf6bba8":"markdown","1e2c2cf5":"markdown","dc9aeb5a":"markdown","46926f7e":"markdown","790fddf7":"markdown","63307c9f":"markdown","a84db84a":"markdown","7eff50de":"markdown","a8c0bfae":"markdown","69dadd9e":"markdown","172fa753":"markdown","5a00ba74":"markdown","33921deb":"markdown","bc1cad11":"markdown","febf2f44":"markdown","bb99a9b4":"markdown","3efdf89a":"markdown","c48ce657":"markdown","23df97c0":"markdown","6912a16e":"markdown","1f9366e7":"markdown","83a3499e":"markdown","5e6949a1":"markdown","7acf756e":"markdown","5ac7c897":"markdown","8ca641ad":"markdown","b31be695":"markdown","1a23e92d":"markdown"},"source":{"242f3443":"# Import librairies\n%matplotlib inline \nimport matplotlib.pylab\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn')\nplt.rcParams['figure.figsize'] = [20, 9]\nplt.rcParams['lines.linewidth'] = 1","1a924df2":"# Load the data\ndf = pd.read_csv(\"..\/input\/tesla-stock-data-from-2010-to-2020\/TSLA.csv\")\ndf['Date'] = pd.to_datetime(df['Date'])\ndf.index = df['Date']\ndf.tail(10)","2a764e8c":"def plot_with_rolling(data,short_rolling,long_rolling,lbl='Close Price'):\n    # Plot \n    fig, ax = plt.subplots(figsize=(20,9))\n\n    ax.plot(data.index, data, label=lbl)\n    ax.plot(short_rolling.index, short_rolling, label='20 days rolling')\n    ax.plot(long_rolling.index, long_rolling, label='100 days rolling')\n    ax.axvline(x='2019-12-19',linewidth=0.8, color='r')\n    ax.axvline(x='2019-06-01',linewidth=0.8, color='g')\n    ax.set_xlabel('Date')\n    ax.set_ylabel(lbl)\n    ax.legend()\n\n    plt.show()\n\nshort = df.Close.rolling(window=20).mean()\nlong = df.Close.rolling(window=100).mean() \nplot_with_rolling(data=df.Close,short_rolling=short,long_rolling=long,lbl='Close Price')    \n    \nshort = df.Close[df.index>'2018-12-21'].rolling(window=20).mean()\nlong = df.Close[df.index>'2018-12-21'].rolling(window=100).mean() \nplot_with_rolling(data=df.Close[df.index>'2018-12-21'],short_rolling=short,long_rolling=long,lbl='Close Price')","33041baf":"short = df.Volume.rolling(window=20).mean()\nlong = df.Volume.rolling(window=100).mean()\nplot_with_rolling(data=df.Volume,short_rolling=short,long_rolling=long,lbl='Volume')    \n    \nshort = df.Volume[df.index>'2018-12-21'].rolling(window=20).mean()\nlong = df.Volume[df.index>'2018-12-21'].rolling(window=100).mean() \nplot_with_rolling(data=df.Volume[df.index>'2018-12-21'],short_rolling=short,long_rolling=long,lbl='Volume')\n","e392a003":"# Calculate the daily return and the daily log return\ndaily_rtn = df.Close\/df.Close.shift(1) - 1\ndaily_log_rtn = np.log(df.Close).diff()\n# Calculate the daily return (another way)\n# daily_rtn = close.pct_change(1)\n\ndaily_rtn.plot()\nplt.show()\n# log return\n","aa2c8f69":"daily_rtn.rolling(30).var().plot()\nplt.show()","2ede8194":"df['Volume'].rolling(50).var().plot()\nplt.show()","49afc777":"# Calculate diff\ndiff=df.Close.diff().dropna()\n# Ups\nplus=diff.map(lambda x: x if x>0 else 0).rename('Plus')\n# Downs\nminus=diff.map(lambda x: -1*x if x<0 else 0).rename('Minus')\n\nrsi14=pd.concat([diff,plus,minus],axis=1)\n# init average up\nrsi14['AvgUP'] = rsi14.Plus[:14].sum()\/14\n# init average down\nrsi14['AvgDOWN'] = rsi14.Minus[:14].sum()\/14\n\n# calculate AvgUP and AvgDown with the recurrent formula\nfor i in range(14,rsi14.Close.size):\n    rsi14['AvgUP'].iloc[i]=(rsi14['Plus'].iloc[i] + 13*rsi14['AvgUP'].iloc[i-1])\/14\n    rsi14['AvgDOWN'].iloc[i]=(rsi14['Minus'].iloc[i] + 13*rsi14['AvgDOWN'].iloc[i-1])\/14\n\nrsi14['RSI']=100 - 100 \/ (1+rsi14['AvgUP']\/rsi14['AvgDOWN'])\nrsi14.tail(10)","fec0f8cd":"short = rsi14['RSI'].rolling(window=20).mean()\nlong = rsi14['RSI'].rolling(window=100).mean()\nplot_with_rolling(data=rsi14['RSI'],short_rolling=short,long_rolling=long,lbl='Close Price')    ","9020a496":"ema_short = df.Close.ewm(span=12, adjust=False).mean()\nema_long = df.Close.ewm(span=26, adjust=False).mean()\nmacd_line = ema_short - ema_long\nmacd_signal = macd_line.ewm(span=9, adjust=False).mean()\n","c470c0bb":"# Plot \nfig, ax = plt.subplots(figsize=(20,9))\n\nax.plot(macd_line.index, macd_line, label='MACD Line')\nax.plot(macd_signal.index, macd_signal, label='MACD Signal')\nax.axvline(x='2019-12-19',linewidth=0.8, color='r')\nax.set_xlabel('Date')\nax.set_ylabel('MACD')\nax.legend()\n\nplt.show()\n","d2cba46a":"momentum = df.Close.diff(20)\nmomentum.plot()\nplt.show()","2014caca":"\ndef plot_all(close=df.Close,rsi=rsi14['RSI'],macd=macd_line,momentum=momentum):\n    fig = plt.figure(constrained_layout=True,figsize=(20,16))\n    gs = fig.add_gridspec(10, 1)\n    ax1 = fig.add_subplot(gs[:4, 0])\n    ax1.set_title('Close')\n    ax1.plot(close.index, close, label='Close')\n    ax1.axvline(x='2019-12-19',linewidth=0.8, color='r')\n    ax2 = fig.add_subplot(gs[4:6,0])\n    ax2.set_title('RSI14')\n    ax2.plot(rsi.index, rsi)\n    ax2.axhline(y=30,linewidth=0.5, color='blue')\n    ax2.axhline(y=70,linewidth=0.5, color='red')\n    ax2.axvline(x='2019-12-19',linewidth=0.8, color='r')\n    ax3 = fig.add_subplot(gs[6:8,0])\n    ax3.set_title('MACD')    \n    ax3.plot(macd.index, macd)\n    ax3.axhline(y=0,linewidth=0.5, color='black')\n    ax3.axvline(x='2019-12-19',linewidth=0.8, color='r')\n    ax4 = fig.add_subplot(gs[8:,0])\n    ax4.set_title('Momentum')\n    ax4.plot(momentum.index, momentum)\n    ax4.axhline(y=0,linewidth=0.5, color='black')\n    ax4.axvline(x='2019-12-19',linewidth=0.8, color='r')\n    plt.show()\nplot_all()\n","7a4d5de3":"startd = '2018-12-31'\nplot_all(close=df.Close[df.index>startd],rsi=rsi14['RSI'][rsi14.index>startd],macd=macd_line[macd_line.index>startd],momentum=momentum[momentum.index>startd])","6d8a5f83":"# Calculate the daily return\ndaily_rtn_all = df.loc[df.index>'2018-12-31','Close']\/df.loc[df.index>'2018-12-31','Close'].shift(1) - 1\ndaily_rtn_all.dropna(inplace=True)\ndaily_rtn = daily_rtn_all[daily_rtn_all.index<'2019-12-19']\n# plot the distribution\nimport seaborn as sns\nsns.distplot(daily_rtn)\nplt.show()\n","a1966ea8":"print( 'Skewness (before)  =', daily_rtn.skew())\nprint( 'Skewness (overall) =', daily_rtn_all.skew())","f478f0bb":"print( 'Kurtosis (before)  =', daily_rtn.kurt())\nprint( 'Kurtosis (overall) =', daily_rtn_all.kurt())","8bdbf674":"print( 'Before 2019-12-19')\nprint( 'Historical VaR at 1 days at 95%  =', daily_rtn.sort_values().quantile(0.05))\nprint( 'Historical Mirror VaR at 1 days at 5%  =', daily_rtn.sort_values().quantile(0.95))\nprint( 'Overall')\nprint( 'Historical VaR at 1 days at 95%  =', daily_rtn_all.sort_values().quantile(0.05))\nprint( 'Historical Mirror VaR at 1 days at 5%  =', daily_rtn_all.sort_values().quantile(0.95))","1d8088da":"horizon = 20\nnbr_simulation = 10000\n\nstd = np.std(daily_rtn)\nmean = np.mean(daily_rtn)\n\ngen=1 + mean + std * np.random.randn(nbr_simulation,horizon) \ngen = np.prod(gen,axis=1)-1\ngen.sort()","231d46ab":"print('Mean of daily return = {}'.format(mean))\nprint('Standard deviation of daily return = {}'.format(std))\nprint( 'VaR at {} days at 95%  = {}'.format(horizon,np.quantile(gen, 0.05)))\nprint( 'Mirror VaR at {} days at 95%  = {}'.format(horizon,np.quantile(gen, 0.95)))","4d847721":"from sklearn.preprocessing import MinMaxScaler\nfrom tensorflow.keras.layers import Bidirectional, Dropout, Activation, Dense, LSTM\nfrom tensorflow.python.keras.layers import CuDNNLSTM\nfrom tensorflow.keras.models import Sequential\nimport tensorflow as tf\nfrom tensorflow import keras\nimport math\n\n# Window size = number of previous values to predict the next value\nWINDOW_SIZE = 10","938c8090":"close_price = df.Close[(df.index>'2017-12-31')]\nclose_price['2019-12-19']\n","257cb8fc":"train_close = df.Close[(df.index>'2017-12-31') & (df.index<'2019-12-23')].values.reshape(-1, 1)\nall_close = df.Close[df.index>'2017-12-31'].values.reshape(-1, 1)\n#  MinMaxScaler\nscaler = MinMaxScaler()\nscaled_all_close = scaler.fit_transform(all_close)\nscaled_train_close = scaler.transform(train_close)                     \n#scaled_close = scaled_close[~np.isnan(scaled_close)]\n#scaled_close = scaled_close.reshape(-1, 1)\nprint(\"Train shape = {}\".format(scaled_train_close.shape))\nprint(\"All shape = {}\".format(scaled_all_close.shape))\nprint(\"nan values ? {}\".format(np.isnan(scaled_train_close).any()))","e26f36fa":"# Generate sequences of lenght = WINDOW_SIZE\n\ndef generateSequence(sequence,backward):\n    X, y = list(), list()\n    for i in range(sequence.shape[0]-backward):\n        seq_x, seq_y = sequence[i:i+backward], sequence[i+backward]\n        X.append(seq_x)\n        y.append(seq_y)\n    X=np.array(X)\n    y=np.array(y)\n    X = X.reshape((X.shape[0], X.shape[1], 1))\n    return X,y\n    \nX,y = generateSequence(scaled_train_close,WINDOW_SIZE)\nprint(\"X shape = {}\".format(X.shape))\nprint(\"y shape = {}\".format(y.shape))","07320ca3":"model = Sequential()\nmodel.add(LSTM(12, activation='relu', input_shape=(WINDOW_SIZE, 1)))\nmodel.add(Dense(8, activation='relu'))\nmodel.add(Dense(1))","807c64f7":"#  Compile\nmodel.compile(\n    loss='mse', \n    optimizer='adam'\n)\n\nBATCH_SIZE = 64\n\n#  Compile\nhistory = model.fit(\n    X, \n    y, \n    epochs=50, \n    batch_size=BATCH_SIZE, \n    shuffle=False,\n    validation_split=0.1\n)\n","48ef6a93":"trainScore = model.evaluate(X, y)\nprint('Train Score: %.6f MSE (%.6f RMSE)' % (trainScore, math.sqrt(trainScore)))\n\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()","8b94faba":"y_train_predicted = model.predict(X)\ny_inverse = scaler.inverse_transform(y)\ny_train_predicted_inverse = scaler.inverse_transform(y_train_predicted)\n\n\nplt.plot(y_inverse.ravel(), label=\"Price\", color='black')\nplt.plot(y_train_predicted_inverse.ravel(), label=\"Predicted Price\", color='blue')\nplt.legend(loc='upper left')\nplt.title(\"Train data - Prediction at 1 day based on the previous {} days\".format(WINDOW_SIZE))\nplt.show()","13153dc8":"X,y = generateSequence(scaled_all_close,WINDOW_SIZE)\n\ny_predicted = model.predict(X)\ny_inverse = scaler.inverse_transform(y)\ny_predicted_inverse = scaler.inverse_transform(y_predicted)\n\n\nplt.plot(y_inverse.ravel(), label=\"Price\", color='black')\nplt.plot(pd.Series(y_predicted_inverse[:487].ravel(),index=range(0,487)), label=\"Train Predicted Price\", color='blue')\nplt.plot(pd.Series(y_predicted_inverse[487:].ravel(),index=range(487,515)), label=\"Test Predicted Price\", color='red')\n\nplt.legend(loc='upper left')\nplt.title(\"All data - Prediction at 1 day based on the previous {} days\".format(WINDOW_SIZE))\nplt.show()","523f64c5":"# First look at the shape and at the trend of the data (close & volume)\n\n> Build a rolling windows of 20\/100 days and plot the mean on this windows","715f1892":"# Let's gather all this\n","acdf03e8":"> <span>&#171;<\/span>There is no spike of variance of the daily returns before the rise<span>&#187;<\/span>","4cd86db4":"> <span>&#171;<\/span>My comments ...<span>&#187;<\/span>\n\n![tesla.png](attachment:tesla.png)","df9152b1":"# The variance of the close and of the volume\n","7cf6bba8":"# For fun... Let's simulated the stock prices with a RNN\n<span>&#171;<\/span>I don't know why, LTSM only entertains me around me<span>&#187;<\/span>\n\nThe train interval is [01\/01\/2018 - 12\/19\/2019[\n\nThe test interval is [12\/19\/2019 - End]\n","1e2c2cf5":"> <span>&#171;<\/span>Nothing to say ... <span>&#187;<\/span>","dc9aeb5a":"> <span>&#171;<\/span>At 1 days, there  is 5% of probability that the return exceeds 4.46 % before 2019-12-19<span>&#187;<\/span>","46926f7e":"**Skewness** is an indicator of the symmetry. A distribution with a long left tail (resp. right tail) has a high probality of observing large negative ( resp. positive) values.\n","790fddf7":"# Zoom on the last year","63307c9f":"> <span>&#171;<\/span>Volume are not exceptionally high before our end point (2019-12-19),<br\/> but volumes are constantly very high over the year 2019<span>&#187;<\/span>","a84db84a":"###  Training","7eff50de":"# A risk point of view - Simulating the daily return\n\n> <span>&#171;<\/span>We can generate trajectories of daily return with a geometric brownian motion.<br>\nFrom these trajectories (sorted), we can extract quantiles (5%,95%) that correspond to the VAR and its mirror value. \n<span>&#187;<\/span>\n\nGeometric Brownian Motion is $ P_{t+1} = P_{t} \\times (1 + \\mu \\Delta_t + \\sigma \\sqrt{ \\Delta_t } \\epsilon) $ with\n* $P_{t}$ is Price at time t\n* $\\mu$ is mean of daily returns\n* $\\sigma$ is standard deviation of daily returns\n* $\\Delta_t$ is 1 (1 day)\n* $\\epsilon$ follows N(0,1)\n\nby the way $ P_{n} = P_{0} \\times \\prod_{k=1}^n{(1 + \\mu \\Delta_t + \\sigma \\sqrt{ \\Delta_t } \\epsilon_i)}  $\n\nif we speak about return \n\n$ R_{n} = \\frac{P_{n} - P_{0}}{P_{0}}$\n\n$ R_{n} = \\prod_{k=1}^n{(1 - \\mu \\Delta_t + \\sigma \\sqrt{ \\Delta_t } \\epsilon_i)} -1 $\n\n\n## <span>&#171;<\/span>Let's try this<span>&#187;<\/span> Simulating VaR with a horizon of h days \n","a8c0bfae":"**Value at risk** summarizes the worst loss over a target horizon that will not be exceeded with a given level of confidence\n\nA first estimation of the value at risk can done by looking at the historical values.\n\nWe can look at the mirror value of the value at risk in order to evaluate the \"risk\" of high return","69dadd9e":"# A risk point of view - distribution of the daily return\n> <span>&#171;<\/span>let's look at risk indicators between 2019-01-01 and the pivotal date  (2019-12-19) <span>&#187;<\/span>\n\n**A distribution can be descrided by these moments , mean (order=1) , variance (order=2), skewness(order=3) and kurtosis(order=4)**\n","172fa753":"> <span>&#171;<\/span>The skewness of daily return before (2019-12-19) is closed to zero, so there is no sign that of high probability to see large positive values <br> After the skewness is positive and > 0.5 so we can just see the rise<span>&#187;<\/span>","5a00ba74":"## Prediction for all the data (including > 19-12-2019)\n","33921deb":"###  Normalization","bc1cad11":"# The question is whether we could see signs of the sudden rise in share prices ?\n# or is it a kind of black swan ?\n![blackSwanSmall.jpg](attachment:blackSwanSmall.jpg)\n\n> The price exceeds 400 dollars on 12\/19\/2019, and goes up to around 800 afterwards.\n\n> So, can we see signs of this rise before the 12\/19\/2019 ?","febf2f44":"<div style=\"color: #004085;background-color: #cce5ff;border-color: #b8daff;\">\n  I'm not a trader, but if you like my try, please upvote\n<\/div>","bb99a9b4":"# The momentum\n\nhttps:\/\/www.macroption.com\/momentum\/\n\n\nMomentum shows how much the closing price has changed, it indicates how much a trend is strong.\n\nMomentum is the difference between current closing price and the closing price n days before\n\n`Momentum = Close(Today) \u2013 Close(Today - n days)`","3efdf89a":"# MACD (Moving Average Convergence-Divergence)\nhttps:\/\/www.macroption.com\/macd\/\n\nhttps:\/\/www.investopedia.com\/terms\/m\/macd.asp\n\n*EMA stands for \"exponential moving average\"*\n\n* **MACD line = (shorter EMA of close prices) \u2013 (longer EMA of close prices)**\n* **MACD Signal = EMA of MACD line**\n\nWith \n\n* s = period of the shorter EMA\n* l = period of the longer EMA\n* p = period of the EMA of MACD\n\nThese periods can be equal to (s=12, l=26, p=9) or (s=8, l=22, p=11), for instance\n\n\n**How to interprete it ?**\n\n| MACD line   | Description |\n| ----------- | ----------- |\n| positive and rising   | Market\u2019s bullish momentum is accelerating        |\n| negative and falling   | Market\u2019s bearish momentum is accelerating        |\n| positive but falling   | The bullish momentum in the market is fading        |\n| negative but increasing   | The bearish momentum in the market is fading        |\n| zero      | Balanced       |","c48ce657":"# Importing the data","23df97c0":"**Kurtosis** describes the degree of flatness, with fat tails (high risk) or thin tail (low risk) : threshold is 3 ( < 3 => thin , > 3 => fat)","6912a16e":"> <span>&#9757;<\/span> <span>&#171;<\/span>even if the input values \u200b\u200bare increasing, the model struggles to follow the rising trend<span>&#187;<\/span>\n\nMy next step could be improving the model ....","1f9366e7":"# Calculate the daily returns","83a3499e":"* > <span>&#9757;<\/span> <span>&#171;<\/span>The VaR is very large, indicating a higher probality of extreme movement<span>&#187;<\/span>","5e6949a1":"### Build the model","7acf756e":"### Generate sequences","5ac7c897":"> <span>&#171;<\/span>There is no spike of variance of the volumes before the rise<span>&#187;<\/span>","8ca641ad":"> <span>&#9757;<\/span> <span>&#171;<\/span>The kurtosis is very large, the distribution is called leptokurtic, indicating a higher probality of extreme movement<span>&#187;<\/span>","b31be695":"# Let's check classical indicator\n# RSI14 - a trend oscillator\n\n$$ RSI_{14} = 100 - (\\frac{100}{1 + RS}) $$ \n\n\n$$ RS = Relative Strength = \\frac{\\text{average of all up moves in the last 14 days}}{\\text{average of all down moves in the last 14 days}} = \\frac{\\text{AvgUP}}{\\text{AvgDOWN}} $$\n\nThis leading indicator is limited from 0 to 100, when its value is below 30 it is said that it is overbought and when its value is above 70 it is said that it is overbought.\n\n### How to calcul it ?\nhttps:\/\/www.macroption.com\/rsi-calculation\/\n\nhttps:\/\/www.investopedia.com\/terms\/r\/rsi.asp\n\n* Evaluate average_gain and average_loss for the first 14 days\n* Caculate average_up and average_down with a recurrent formula\n\n$$AvgUP(t) = \\frac{UP(t) + 13 \\times AvgUP(t-1)}{14}$$\n$$AvgDOWN(t) = \\frac{DOWN(t) + 13 \\times AvgDOWN(t-1)}{14}$$","1a23e92d":"> <span>&#171;<\/span>The trend was really bullish since June, which is remarkable is perhaps the slope of the moving average 20 during the last months before our end point (2019-12-19)<span>&#187;<\/span>\n\n> <span>&#171;<\/span>On the zoom, we see that the rise is very powerful after the beginning of september, the MA100 has absorded the decrease of the past and follow the MA20 <span>&#187;<\/span>"}}