{"cell_type":{"c79f79d0":"code","f502ade8":"code","4699d7d9":"code","243866b9":"code","913246b4":"code","a513c99a":"code","be1339f1":"code","b41c6565":"code","826ad5d9":"code","6ae79f63":"code","24b25ba7":"code","87dbdb6d":"code","51a52a40":"code","85aee674":"code","d7a526b7":"code","967ec68b":"code","8713bce9":"code","aea9ea64":"code","25d136d2":"code","67b652aa":"code","fe84d41e":"code","a4ebbdd2":"code","6efaeaa3":"code","38018eda":"code","9c87ec6e":"code","222b8b1f":"code","a726f0e9":"code","dfc8198c":"code","79a9c53b":"code","917e1a2f":"code","f037d80d":"code","f43c1c6e":"code","b92ed48e":"code","cc9dd45f":"code","7358c4c5":"code","c35ff20f":"code","5b33c2f3":"code","bfa527eb":"code","b0fa19c7":"code","c5ba71e4":"code","59c37536":"code","7a2d44fc":"code","1b96f4ab":"code","354b3666":"code","f069b076":"code","7f493755":"code","b50635b2":"code","834d534a":"code","6ff2abfe":"markdown","0a7835ff":"markdown","9374c68d":"markdown","a3f12cfb":"markdown","43d80977":"markdown","98a935e2":"markdown","4b6a4367":"markdown"},"source":{"c79f79d0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport pandas as pd # Import Pandas for data manipulation using dataframes, data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np # Import Numpy for data statistical analysis \nimport matplotlib.pyplot as plt # Import matplotlib for data visualisation\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\n\n\n# Any results you write to the current directory are saved as output.","f502ade8":"# Import Cancer data drom the Sklearn library\nfrom sklearn.datasets import load_breast_cancer\ncancer = load_breast_cancer()","4699d7d9":"cancer","243866b9":"cancer.keys()","913246b4":"print(cancer['DESCR'])","a513c99a":"print(cancer['target_names'])","be1339f1":"print(cancer['target'])","b41c6565":"print(cancer['feature_names'])","826ad5d9":"print(cancer['data'])","6ae79f63":"cancer['data'].shape","24b25ba7":"# pandas dataframe\ndf_cancer = pd.DataFrame(np.c_[cancer['data'], cancer['target']], columns = np.append(cancer['feature_names'], ['target']))","87dbdb6d":"# let's take a look at our data\ndf_cancer.head()","51a52a40":"df_cancer.tail()","85aee674":"# now visualization time\nsns.pairplot(df_cancer, hue = 'target', vars = ['mean radius', 'mean texture', 'mean area', 'mean perimeter', 'mean smoothness'] )","d7a526b7":"sns.countplot(df_cancer['target'], label = \"Count\") ","967ec68b":"sns.scatterplot(x = 'mean area', y = 'mean smoothness', hue = 'target', data = df_cancer)","8713bce9":"# Let's check the correlation between the variables \n# Strong correlation between the mean radius and mean perimeter, mean area and mean primeter\nplt.figure(figsize=(20,10)) \nsns.heatmap(df_cancer.corr(), annot=True) ","aea9ea64":"# Let's drop the target label column\nX = df_cancer.drop(['target'],axis=1)","25d136d2":"X","67b652aa":"y = df_cancer['target']\ny","fe84d41e":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state=5)","a4ebbdd2":"X_train.shape","6efaeaa3":"X_test.shape","38018eda":"y_train.shape","9c87ec6e":"y_test.shape","222b8b1f":"from sklearn.svm import SVC \nfrom sklearn.metrics import classification_report, confusion_matrix\n\nsvc_model = SVC()\nsvc_model.fit(X_train, y_train)","a726f0e9":"y_predict = svc_model.predict(X_test)\ncm = confusion_matrix(y_test, y_predict)","dfc8198c":"sns.heatmap(cm, annot=True)","79a9c53b":"print(classification_report(y_test, y_predict))","917e1a2f":"min_train = X_train.min()\nmin_train","f037d80d":"range_train = (X_train - min_train).max()\nrange_train","f43c1c6e":"X_train_scaled = (X_train - min_train)\/range_train\nX_train_scaled","b92ed48e":"sns.scatterplot(x = X_train['mean area'], y = X_train['mean smoothness'], hue = y_train)","cc9dd45f":"sns.scatterplot(x = X_train_scaled['mean area'], y = X_train_scaled['mean smoothness'], hue = y_train)","7358c4c5":"min_test = X_test.min()\nrange_test = (X_test - min_test).max()\nX_test_scaled = (X_test - min_test)\/range_test","c35ff20f":"from sklearn.svm import SVC \nfrom sklearn.metrics import classification_report, confusion_matrix\n\nsvc_model = SVC()\nsvc_model.fit(X_train_scaled, y_train)","5b33c2f3":"y_predict = svc_model.predict(X_test_scaled)\ncm = confusion_matrix(y_test, y_predict)\n\nsns.heatmap(cm,annot=True,fmt=\"d\")","bfa527eb":"print(classification_report(y_test,y_predict))","b0fa19c7":"param_grid = {'C': [0.1, 1, 10, 100], 'gamma': [1, 0.1, 0.01, 0.001], 'kernel': ['rbf']} ","c5ba71e4":"from sklearn.model_selection import GridSearchCV","59c37536":"grid = GridSearchCV(SVC(),param_grid,refit=True,verbose=4)","7a2d44fc":"grid.fit(X_train_scaled,y_train)","1b96f4ab":"grid.best_params_","354b3666":"grid.best_estimator_","f069b076":"grid_predictions = grid.predict(X_test_scaled)","7f493755":"cm = confusion_matrix(y_test, grid_predictions)","b50635b2":"sns.heatmap(cm, annot=True)","834d534a":"print(classification_report(y_test,grid_predictions))","6ff2abfe":"# **STEP #1: PROBLEM STATEMENT**\n\n*Predicting if the cancer diagnosis is benign or malignant based on several observations\/features\n*30 features are used, examples:\n\n  - radius (mean of distances from center to points on the perimeter)\n  - texture (standard deviation of gray-scale values)\n  - perimeter\n  - area\n  - smoothness (local variation in radius lengths)\n  - compactness (perimeter^2 \/ area - 1.0)\n  - concavity (severity of concave portions of the contour)\n  - concave points (number of concave portions of the contour)\n  - symmetry \n  - fractal dimension (\"coastline approximation\" - 1)\nDatasets are linearly separable using all 30 input features\n\nNumber of Instances: 569\nClass Distribution: 212 Malignant, 357 Benign\nTarget class:\n   - Malignant\n   - Benign","0a7835ff":"# **STEP #4: MODEL TRAINING (FINDING A PROBLEM SOLUTION)**","9374c68d":"# **STEP #2: IMPORTING DATA**","a3f12cfb":"# **STEP #5: EVALUATING THE MODEL**","43d80977":"# **IMPROVING THE MODEL - PART 2**","98a935e2":"# ** Conclusion**\n\nMachine learning techniques (SVM) was able to classify tumors into Malignant\/Benign with %97 accuracy\n\nIf you liked this kernel please up vote :)","4b6a4367":"# **STEP #6: IMPROVING THE MODEL**"}}