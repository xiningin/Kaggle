{"cell_type":{"32509a5e":"code","82bbf4ab":"code","72df3b77":"code","150432f9":"code","a0590df5":"code","9ef9cb2e":"code","baef4553":"code","9f47fc67":"code","4a825b19":"code","15bda5f6":"code","c9f61694":"code","b169de62":"code","62055274":"code","8b68df95":"code","215084d6":"code","79f74584":"code","071c4f90":"code","30bde421":"code","26df1c7f":"code","49ef9ac9":"code","d41decba":"code","8782ca94":"code","09231a7f":"code","75af176f":"code","cebe88bc":"code","4536d719":"code","7f2a81a5":"code","21f9aab9":"code","1adf8c10":"code","8b82fbcc":"markdown","45a1ed5f":"markdown","106d0183":"markdown","76b91972":"markdown","0a1b97ea":"markdown","565195c5":"markdown","053dee11":"markdown","995dbc98":"markdown","dff74b90":"markdown","a59ae95a":"markdown","466adba7":"markdown"},"source":{"32509a5e":"#Importing pyplot\n'''\nfrom matplotlib import pyplot as plt\nor\nimport matplotlib.pyplot as plt \n'''\n\nimport matplotlib.pyplot as plt\na=[1,9,3,5]\n\n#Plotting to our canvas\nplt.plot(a)\n#Showing what we plotted\nplt.show()","82bbf4ab":"import matplotlib.pyplot as plt\na=[1,2,3]\nb=[4,5,1]\nplt.plot(a,b)\nplt.show()","72df3b77":"import matplotlib.pyplot as plt\na=[1,9,3,5]\nb=[2,45,33,6]\nplt.title('Info',fontsize=25,fontname='Times New Roman',color='blue',weight='bold')\nplt.ylabel('Y axis',fontsize=25,fontname='Times New Roman',color='blue',weight='bold')\nplt.xlabel('X axis',fontsize=25,fontname='Times New Roman',color='blue',weight='bold')\nplt.plot(a,b)\nplt.show()","150432f9":"import matplotlib.pyplot as plt\na=[1,9,3,5]\nb=[2,45,33,6]\nplt.xlabel('Time')\nplt.ylabel('Sensor')\nplt.title(\"Title - Itronix Solutions\")\n# Limit the range of the plot to only where the data is.    \n# Avoid unnecessary whitespace.    \nplt.ylim(0, 90)    \nplt.xlim(0, 10)  \nplt.text(3,60, \"Text : Itronix Solutions\", fontsize=17)    \nplt.plot(a,b,\"#34A300\",linewidth=5)\nplt.show()\n","a0590df5":"import matplotlib.pyplot as plt\na=[1,9,3,5]\nb=[2,45,33,6]\nplt.xlabel('Time')\nplt.ylabel('Sensor')\nplt.title(\"Itronix Solutions\")\nplt.axis([0, 20, 0, 50])\nplt.plot(a,b,'k^')\nplt.show()\n","9ef9cb2e":"import matplotlib.pyplot as plt\na=[1,9,3,5]\nb=[2,45,33,6]\nplt.xlabel('Time')\nplt.ylabel('Sensor')\nplt.title(\"Itronix Solutions\")\nplt.axis([0, 20, 0, 50])\n#plt.plot(a,b,color='k',linewidth=5)\nplt.plot(a, b, color='green', linestyle='dashed', linewidth = 3, marker='o', markerfacecolor='blue', markersize=12) \nplt.show()\n","baef4553":"import numpy as np\nx = np.arange(1,15) \nprint(x)\ny = 3 * x + 7 # y=mx+c\nprint(y)\n#plt.plot(x,y)\nplt.plot(x,y,\"ob\")\nplt.plot(y,x,\"^y\")\n\nplt.show()","9f47fc67":"import numpy as np\nx = np.arange(1,15) \nprint(x)\ny = 3 * x + 7 # y=mx+c\nprint(y)\nplt.bar(x,y)\nplt.show()","4a825b19":"\nimport matplotlib.pyplot as plt \n  \n# x-coordinates of left sides of bars  \nleft = [1, 2, 3, 4, 5] \n  \n# heights of bars \nheight = [10, 24, 36, 40, 5] \n  \n# labels for bars \ntick_label = ['one', 'two', 'three', 'four', 'five'] \n  \n# plotting a bar chart \nplt.bar(left, height, tick_label = tick_label, \n        width = 0.8, color = ['red', 'green']) \n  \n# naming the x-axis \nplt.xlabel('x - axis') \n# naming the y-axis \nplt.ylabel('y - axis') \n# plot title \nplt.title('My bar chart!') \n  \n# function to show the plot \nplt.show() \n","15bda5f6":"import numpy as np\nx1=[2,3,6]\ny1=[6,3,4]\n\nx2=[3,5,7]\ny2=[7,3,6]\nplt.bar(x1,y1,width=0.5)\nplt.bar(x2,y2,width=0.5,alpha=.4) # alpha -> float (0.0 transparent through 1.0 opaque)\nplt.show()","c9f61694":"import numpy as np\n\nN = 5\nmen = (20, 35, 30, 35, 27)\nwomen = (25, 32, 34, 20, 25)\n\nindex = np.arange(N) \nwidth = 0.35       \nplt.bar(index, men, width, label='Men')\nplt.bar(index + width, women, width,label='Women')\n\nplt.ylabel('Scores')\nplt.title('Scores by group and gender')\n\nplt.xticks(index + width \/ 2, ('G1', 'G2', 'G3', 'G4', 'G5'))\nplt.legend(loc='best')\nplt.show()","b169de62":"import matplotlib.pyplot as plt\nimport numpy as np\nx=[1,2,3,4,5]\ny=[10,45,33,35,68]\na=plt.bar(x,y)\nfor rect in a:\n    height = rect.get_height()\n    plt.text(rect.get_x() + rect.get_width()\/2., 1.04*height,'%.2f' % float(height),ha='center', va='bottom')\nplt.title('title')\nplt.xlabel('x')\nplt.ylabel('y')      \nplt.show()","62055274":"from matplotlib import style\nprint(plt.style.available)\nstyle.use('ggplot')\n\nx1=[2,3,6]\ny1=[6,3,4]\n\nx2=[3,5,7]\ny2=[7,3,3]\nplt.title(\"Suicide case study\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Total Suicide\")\nplt.bar(x1,y1,width=0.5,align='center',label='Punjab')\nplt.bar(np.array(x2)+.5,y2,width=0.5,alpha=.4,align='center',label='Haryana')\nplt.legend(loc='best') #by default\nplt.grid(True,color='k')\n#plt.savefig(\"Itronix.pdf\")\n#plt.savefig('foo.png', transparent=True)\nplt.show()\n","8b68df95":"import numpy as np\n# evenly sampled time at 200ms intervals\nt = np.arange(0., 5., 0.2)\n\n# red dashes, blue squares and green triangles\nplt.plot(t, t, 'r--', t, t**2, 'bs', t, t**3, 'g^')\nplt.show()","215084d6":"x1=[2,3,6]\ny1=[6,3,4]\n\nx2=[3,5,7]\ny2=[7,3,6]\nplt.title(\"Suicide case study\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Total Suicide\")\nplt.scatter(x1,y1,label='Punjab')\nplt.scatter(x2,y2,label='Haryana')\nplt.legend(loc='best') #by default\nplt.grid(True,color='k')\nplt.show()\n","79f74584":"import requests\nimport json\nimport matplotlib.pyplot as plt\na=requests.get('https:\/\/www.quandl.com\/api\/v3\/datasets\/NSE\/SBIN.json?api_key=x8VdDXzBty3iGsaRLTVs')\nb=json.loads(a.text)\nmy_data=b['dataset']['data']\nuseful_data=[i[1] for i in reversed(my_data)]\nplt.title('SBI Stock Prices')\nplt.xlabel('Time')\nplt.ylabel('Stock Price')\nplt.plot(useful_data)\nplt.savefig('figure.png')\nplt.show()\n\n#Below you can see that X axis are not correct","071c4f90":"import requests\nimport json\nimport matplotlib.pyplot as plt\nimport pandas as pd\na=requests.get('https:\/\/www.quandl.com\/api\/v3\/datasets\/NSE\/SBIN.json?api_key=x8VdDXzBty3iGsaRLTVs')\nb=json.loads(a.text)\ndata=b['dataset']['data']\ndf=pd.DataFrame(data)\ndf[0] = pd.to_datetime(df[0])\ndf=df.set_index(df.columns[0])\nmy_data=df[1]\nplt.plot(my_data)\nplt.title('SBI Stock Prices')\nplt.xlabel('Time')\nplt.ylabel('Stock Price')\nplt.savefig('SBI.pdf')\nplt.show()","30bde421":"#!pip install quandl\nimport quandl\nimport matplotlib.pyplot as plt\ndataset1=quandl.get(\"NSE\/SBIN\", authtoken=\"x8VdDXzBty3iGsaRLTVs\")\nmy_data=dataset1['Open']\nprint(my_data.index)\nplt.plot(my_data)\nplt.title('SBI Stock Prices')\nplt.xlabel('Time')\nplt.ylabel('Stock Price')\nplt.savefig('SBI.pdf')\nplt.show()","26df1c7f":"import numpy as np\nimport matplotlib.pyplot as plt\n\nx = [0,5,9,10,15]\ny = [0,1,2,3,4]\nplt.plot(x,y)\nplt.xticks(np.arange(min(x), max(x)+1, 1.0))\nplt.yticks(np.arange(min(y), max(y)+1, 1.0))\n\n#plt.xticks(np.arange(0, 19, step=1.5))\n#plt.xticks(np.arange(5), ('A', 'B', 'C', 'D', 'E'))\nplt.show()","49ef9ac9":"x = [0,1,2,3,4,5]\ny = [10,20,15,18,7,19]\nxlabels = ['jan','feb','mar','apr','may','jun']\nplt.plot(x,y)\n\nplt.xticks(range(0,len(x)),xlabels,rotation=45)\nplt.show()","d41decba":"plt.title(\"Itronix Solutions : Pie Chart\")\nslices=[40,10,10,10,30]\nchannels=['9X','Sony','Star Plus','Colors','Cartoon Network']\ncols=['red','green','b','cyan','y']\nplt.pie(slices,labels=channels,colors=cols,explode=(0.1,0,0,0,0),autopct='%.2f%%')\nplt.legend(loc=\"upper right\",fontsize=12,bbox_to_anchor=(1.65,1.1))\nplt.show()","8782ca94":"from pylab import *\nt = arange(0.0, 20.0, 1)\ns = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n \nsubplot(1,2,1)\ntitle('subplot(2,1,1)')\nplot(t,s)\n \nsubplot(1,2,2)\ntitle('subplot(2,1,2)')\nplot(t,s,'r-')\nshow()","09231a7f":"import matplotlib.pyplot as plt\nimport numpy as np\nt = np.arange(0.0, 20.0, 1)\ns = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n \nplt.subplot(2,2,1)\nplt.title('Subplot 1')\nplt.plot(t,s)\n \nplt.subplot(2,2,2)\nplt.title('Subplot 2')\nplt.plot(t,s,'r-')\n\nplt.subplot(2,2,3)\nplt.title('Subplot 3')\nplt.plot(t,s)\n \nplt.subplot(2,2,4)\nplt.title('Subplot 4')\nplt.plot(t,s,'r-')\nplt.subplots_adjust(top=0.92, bottom=0.08, left=0.10, right=0.95, hspace=0.45,wspace=0.35)\nplt.show()","75af176f":"grid = plt.GridSpec(2, 3, wspace=0.4, hspace=0.3)\n\nplt.subplot(grid[0, 0])\nplt.subplot(grid[0, 1:])\nplt.subplot(grid[1, :2])\nplt.subplot(grid[1, 2])\n\nplt.show()","cebe88bc":"import matplotlib.pyplot as plt\nfrom matplotlib import gridspec\n\nfig = plt.figure()\ngs = gridspec.GridSpec(3, 3)\n\nax1 = fig.add_subplot(gs[0,:])\nax1.plot([1,2,3,4,5], [10,5,10,5,10], 'r-')\n\nax2 = fig.add_subplot(gs[1,:-1])\nax2.plot([1,2,3,4], [1,4,9,16], 'k-')\n\nax3 = fig.add_subplot(gs[1:, 2])\nax3.plot([1,2,3,4], [1,10,100,1000], 'b-')\n\nax4 = fig.add_subplot(gs[2,0])\nax4.plot([1,2,3,4], [0,0,1,1], 'g-')\n\nax5 = fig.add_subplot(gs[2,1])\nax5.plot([1,2,3,4], [1,0,0,1], 'c-')\n\ngs.update(wspace=0.5, hspace=0.5)\n","4536d719":"import matplotlib.pyplot as plt\nfig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2, 2, sharex=True, sharey=True)\nax1.plot(range(10), 'r')\nax2.plot(range(10), 'b')\nax3.plot(range(10), 'g')\nax4.plot(range(10), 'k')\nplt.show()","7f2a81a5":"m = [\n[1,0,2,0,0],\n[1,1,1,2,0],\n[0,4,1,0,0],\n[0,4,4,1,2],\n[1,3,0,0,1],\n    \n]\n \nplt.matshow(m)","21f9aab9":"# importing matplotlib module  \nfrom matplotlib import pyplot as plt \n# Y-axis values \ny = [10, 5, 8, 4, 2] \n# Function to plot histogram \nplt.hist(y) \n# Function to show the plot \nplt.show() \n","1adf8c10":"\n# importing required modules \nfrom mpl_toolkits.mplot3d import axes3d \nimport matplotlib.pyplot as plt \nfrom matplotlib import style \nimport numpy as np \n  \n# setting a custom style to use \nstyle.use('ggplot') \n  \n# create a new figure for plotting \nfig = plt.figure() \n  \n# create a new subplot on our figure \nax1 = fig.add_subplot(111, projection='3d') \n  \n# defining x, y, z co-ordinates for bar position \nx = [1,2,3,4,5,6,7,8,9,10] \ny = [4,3,1,6,5,3,7,5,3,7] \nz = np.zeros(10) \n  \n# size of bars \ndx = np.ones(10)              # length along x-axis \ndy = np.ones(10)              # length along y-axs \ndz = [1,3,4,2,6,7,5,5,10,9]   # height of bar \n  \n# setting color scheme \ncolor = [] \nfor h in dz: \n    if h > 5: \n        color.append('r') \n    else: \n        color.append('b') \n  \n# plotting the bars \nax1.bar3d(x, y, z, dx, dy, dz, color = color) \n  \n# setting axes labels \nax1.set_xlabel('x-axis') \nax1.set_ylabel('y-axis') \nax1.set_zlabel('z-axis') \n  \nplt.show()\n\n\n'''\nx, y, z, dx, dy, dz are lists. They represent the x and y , z positions\nof each bar and dx, dy, dz represent the depth, \nwidth and height (dimensions in x, y and z) of the bars.\n'''","8b82fbcc":"#### `What Is Python Matplotlib?`\n**matplotlib.pyplot is a plotting library used for 2D graphics in python programming language. It can be used in python scripts, shell, web application servers and other graphical user interface toolkits.**\n\n#### `Python Matplotlib : Types of Plots`\n**There are various plots which can be created using python matplotlib. **\n<br>Some of them are listed below:\n\n<img src=\"https:\/\/i.imgur.com\/UARJJhF.jpg\" alt=\"Itronix Solutions Matplotlib Tutorials\"> \n","45a1ed5f":"You may be wondering why the x-axis ranges from 0-3 and the y-axis from 1-4. If you provide a single list or array to the plot() command, matplotlib assumes it is a sequence of y values, and automatically generates the x values for you. Since python ranges start with 0, the default x vector has the same length as y but starts with 0. Hence the x data are [0,1,2,3].","106d0183":"#### Change axis using : plt.axis([Xstart,Xend,Ystart,Yend])","76b91972":"**`There are three ways to use Matplotlib:`**\n\n- pyplot: The module used so far in this article\n- pylab:  A module to merge Matplotlib and NumPy together in an environment closer to MATLAB\n- Object-oriented way: The Pythonic way to interface with Matplotlib\n\n\n#### Documentation : \nhttps:\/\/matplotlib.org\/api\/_as_gen\/matplotlib.pyplot.plot.html\n\n**matplotlib.pyplot** is a collection of command style functions that make matplotlib work like MATLAB. Each pyplot function makes some change to a figure: e.g., creates a figure, creates a plotting area in a figure, plots some lines in a plotting area, decorates the plot with labels, etc. In ","0a1b97ea":"**There are several toolkits which are available that extend python matplotlib functionality. Some of them are separate downloads, others can be shipped with the matplotlib source code but have external dependencies.**\n\n- **`Basemap:`** It is a map plotting toolkit with various map projections, coastlines and political boundaries.\n- **`Cartopy:`** It is a mapping library featuring object-oriented map projection definitions, and arbitrary point, line, - polygon and image transformation capabilities.\n- **`Excel tools:`** Matplotlib provides utilities for exchanging data with Microsoft Excel.\n- **`Mplot3d:`** It is used for 3-D plots.\n- **`Natgrid:`** It is an interface to the natgrid library for irregular gridding of the spaced data.","565195c5":"\n<img src=\"https:\/\/i.imgur.com\/dA9axeU.png\" alt=\"Itronix Solutions Matplotlib Tutorials\"> \n\n","053dee11":"**The Matplotlib subplot() function can be called to plot two or more plots in one figure. Matplotlib supports all kind of subplots including 2\u00d71 vertical, 2\u00d71 horizontal or a 2\u00d72 grid.**\nplt.subplot(numrows=2, numcols=2, fignum=1)","995dbc98":"### Colors\n**The following color abbreviations are supported:**\n<br>\n`character \tcolor`\n- 'b' \tblue\n- 'g' \tgreen\n- 'r' \tred\n- 'c' \tcyan\n- 'm' \tmagenta\n- 'y' \tyellow\n- 'k' \tblack\n- 'w' \twhite","dff74b90":"\n<img src=\"https:\/\/i.imgur.com\/1DAyLeN.jpg\" alt=\"Itronix Solutions Matplotlib Tutorials\"> \n","a59ae95a":"A histogram represents the frequency distribution of continuous variables. Conversely, a bar graph is a diagrammatic comparison of discrete variables. Histogram presents numerical data whereas bar graph shows categorical data. The histogram is drawn in such a way that there is no gap between the bars","466adba7":"### BAR Graph"}}