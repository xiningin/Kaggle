{"cell_type":{"f5fb0c01":"code","79ea1211":"code","7e456d6e":"code","6093f9a9":"code","287c2b37":"code","64174c9d":"code","a156a1e6":"code","74f01c81":"code","2268b375":"code","f5dd09f4":"code","b9158ea9":"code","2b6400e0":"code","d92d5301":"code","efecf139":"code","66c3088c":"code","076fd93e":"code","4c2e1924":"code","ccabf9c4":"code","d6b953a2":"code","bc98d262":"code","5783d5f5":"code","98d29599":"code","07752e0e":"code","68350d67":"code","35dd5e6d":"code","3c31330c":"code","bbd52ec1":"code","9a426046":"code","47859428":"code","330f8e49":"code","296e320e":"code","a6444d95":"code","b0032404":"code","66268716":"code","beb65ac6":"code","9d25b7a1":"code","c9b96417":"code","7ff8f954":"code","db77ab64":"code","db66aead":"code","141fb3b9":"code","dd5a3cc8":"code","d465993b":"code","c6b710dd":"code","a34986a2":"code","31737cab":"code","2f6bd8b6":"code","9d6cbd66":"code","422e101c":"code","cb081217":"code","390abc56":"code","580a457b":"code","e5f06591":"code","a0d64df8":"code","85f0d0d2":"code","e8cf4d55":"code","9d668255":"code","f4b02ebe":"code","38b1e8cb":"code","9d56b8dc":"code","9942ba8f":"code","3f7781c5":"code","95812220":"code","073d3390":"code","225bca08":"markdown","3d3819eb":"markdown","6214cef6":"markdown","e22f98bb":"markdown","888e5efd":"markdown","d697f4e2":"markdown","c4fa2d93":"markdown","7da02ffd":"markdown","1ad838c0":"markdown","2377eeb4":"markdown","80882a26":"markdown","ff7cd483":"markdown","9d9ab3d5":"markdown","793691ee":"markdown","568e2aeb":"markdown","1344bb05":"markdown","96c4e838":"markdown","ff4c9767":"markdown","4f48fbe2":"markdown","a913e284":"markdown","5f09741d":"markdown","95f3e894":"markdown"},"source":{"f5fb0c01":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","79ea1211":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","7e456d6e":"df = pd.read_csv(\"\/kaggle\/input\/fifa19\/data.csv\")\ndf.head()","6093f9a9":"df.shape","287c2b37":"df.info()","64174c9d":"df.describe()","a156a1e6":"df2 = df.drop([\"Loaned From\", \"Photo\", \"Flag\"], axis=1)","74f01c81":"df.info()","2268b375":"df2 = df2.dropna(axis=0, subset=['Club', \"Preferred Foot\", \"International Reputation\", \"Weak Foot\", \"Skill Moves\", \"Work Rate\", \"Body Type\", \"Real Face\",\n                         \"Position\", \"Jersey Number\", \"Height\", \"Weight\"])","f5dd09f4":"df2.info()","b9158ea9":"columns_to_fill = df.columns[25:50]","2b6400e0":"type(df[df.LS.isna()].LS.iloc[0])","d92d5301":"# # removing the part (+...)\n# for c in columns_to_fill:\n#     df[c] = df[c].apply(lambda x: (str(x)).split(\"+\")[0])","efecf139":"df.convert_dtypes().info()","66c3088c":"df2.info()","076fd93e":"df.Joined.head()","4c2e1924":"df[\"Release Clause\"].head()","ccabf9c4":"df2.dropna(subset=[\"Joined\"], inplace=True)","d6b953a2":"df2.info()","bc98d262":"df2.dropna(subset=['Release Clause'], inplace=True)","5783d5f5":"df2.info()","98d29599":"df2.ID.duplicated().sum()\n# good to go","07752e0e":"# checking outliers\ndf2.describe()","68350d67":"rating_cols = ['LS', 'ST', 'RS', 'LW', 'LF', 'CF', 'RF', 'RW', 'LAM', 'CAM', 'RAM',\n               'LM', 'LCM', 'CM', 'RCM', 'RM', 'LWB', 'LDM', 'CDM', 'RDM', 'RWB',\n               'LB','LCB', 'CB', 'RCB', 'RB']","35dd5e6d":"df2[rating_cols].isnull()","3c31330c":"# Counting ratings with nulls\ndf2[rating_cols].isna().sum() \/ df2.shape[0] * 100","bbd52ec1":"df2[df2.LS.isna()].Position.value_counts()","9a426046":"df2[df2.LS.isna()].Position.unique()","47859428":"df2[df2.Position == \"GK\"][rating_cols] = [0] * len(rating_cols)","330f8e49":"df2.loc[df2.Position == \"GK\", rating_cols] = 0","296e320e":"df2.loc[df2.Position == \"GK\", rating_cols].head()","a6444d95":"pd.isnull(df2[df2.LS.isna()].LS.iloc[0])","b0032404":"for c in columns_to_fill:\n    df[c] = df[c].apply(lambda x: (str(x)).split(\"+\")[0])","66268716":"def clean_ratings(v):\n    if pd.isnull(v):\n        return v\n    num_list = str(v).split(\"+\")\n    num_list = list(map(int, num_list))\n    return sum(num_list)","beb65ac6":"df2[rating_cols]","9d25b7a1":"for c in rating_cols:\n    df2[c] = df2[c].apply(clean_ratings)","c9b96417":"df2.drop(labels=[\"Club Logo\"], axis=1, inplace=True)","7ff8f954":"df2.Wage.isna().sum()","db77ab64":"def clean_wage(x):\n    # x = \"$34K\"\n    unit = x[-1]\n    return int(x[1:-1]) * 1000","db66aead":"base_color = sns.color_palette()[0]","141fb3b9":"plt.figure(figsize=(10, 8))\nplt.xticks(rotation=90)\nsns.countplot(data=df2, x=\"Nationality\", order=df2['Nationality'].value_counts().iloc[:20].index, color=base_color)\nplt.title(\"Top 20 nationalities by count of players\");","dd5a3cc8":"df2.Wage = df2.Wage.apply(clean_wage)","d465993b":"plt.figure(figsize=(10, 8))\nplt.xticks(rotation=90)\nsns.countplot(data=df2, x=\"Position\", order=df2['Position'].value_counts().index, color=base_color)\nplt.title(\"Number of players in each position\");","c6b710dd":"df2['wage_in_k'] = df2.Wage \/ 1000","a34986a2":"plt.figure(figsize=(10, 8))\nplt.xticks(rotation=90)\nsns.barplot(data=df2, x=\"Position\", y=\"wage_in_k\", color=base_color)\nplt.ylabel(\"Wage in thousands\")\nplt.title(\"Wage of players by position\");","31737cab":"df2.columns","2f6bd8b6":"plt.figure(figsize=(15, 8))\nplt.xticks(rotation=90)\nsns.barplot(data=df2, y=\"Nationality\", x=\"wage_in_k\", color=base_color)\nplt.title(\"Positions by nationality of players\");","9d6cbd66":"df2.sort_values('wage_in_k', ascending=False)['Nationality'].head(100)","422e101c":"# Since there are too many countries, we will take a subset with the highest paid players\n# The countries of the top paid 100 players\ncountries = df2.sort_values('wage_in_k', ascending=False)['Nationality'].iloc[0:500].unique()\ncountries","cb081217":"plt.figure(figsize=(15, 8))\nplt.xticks(rotation=90)\ncountries_order = df2.sort_values('wage_in_k', ascending=False).iloc[0:500]['Nationality'].unique()\nsns.barplot(data=df2_sub, x=\"Nationality\", y=\"wage_in_k\", color=base_color)\nplt.title(\"Average wage of players by nationality\");\nplt.ylabel(\"Average Wage in Thousands\")","390abc56":"df2_sub[df2_sub.Nationality == \"Dominican Republic\"]","580a457b":"df2['wage_in_k'].describe()","e5f06591":"clubs = ['FC Barcelona', 'Paris Saint-Germain', 'Real Madrid']\ndf2_clubs = df2[df2['Club'].isin(clubs)]\n","a0d64df8":"# plt.scatter(data=df2_clubs, x='Age', y='wage_in_k', ='Club');\ng = sns.FacetGrid(data=df2_clubs, hue='Club', height=5, aspect=1.5)\ng.map(plt.scatter, 'Age', 'wage_in_k', s=50)\nplt.ylabel(\"Wage in thousands\");\ng.add_legend()\nplt.title(\"Player age vs monthly wage\")","85f0d0d2":"df2.columns\n","e8cf4d55":"df2[['Weight', 'Height']]","9d668255":"def feet_to_cm(height):\n    feet, inch = height.split(\"'\")\n    inches = int(feet)*12 + int(inch)\n    return (inches * 2.54)","f4b02ebe":"df2['Height'] = df2['Height'].apply(feet_to_cm).astype(float)","38b1e8cb":"df2['Weight'] = df2['Weight'].apply(lambda x: int(x[:-3])*0.45)\n# df2['Weight'] = df2['Weight'].apply(lambda x: x*0.45)","9d56b8dc":"df2.SprintSpeed.describe()","9942ba8f":"counts[0]","3f7781c5":"df['SprintSpeed'].reshape()","95812220":"xbin_edges = np.arange(45, 120, 5)\nybin_edges = np.arange(150, 230, 5)\n# count number of points in each bin\nxbin_idxs = pd.cut(df2['Weight'], xbin_edges, right = False,\n                    include_lowest = True, labels = False).astype(int)\nybin_idxs = pd.cut(df2['Height'], ybin_edges, right = False,\n                    include_lowest = True, labels = False).astype(int)\npts_per_bin = df2.groupby([xbin_idxs, ybin_idxs]).size()\npts_per_bin = pts_per_bin.reset_index()\npts_per_bin = pts_per_bin.pivot(index = 'Weight', columns = 'Height').values\n\nz_wts = df2['SprintSpeed'] \/ pts_per_bin[xbin_idxs, ybin_idxs]\n\nplt.figure(figsize=(12, 10))\nweights = df['SprintSpeed']\ncounts, xedges, yedges, im = plt.hist2d(data=df2, x='Weight', y='Height', weights=z_wts, cmin=1,\n                                       bins=[xbin_edges, ybin_edges])\nplt.xlabel(\"Weight (in kg)\")\nplt.ylabel(\"Height (in cm)\");\nplt.colorbar(im)\nplt.title(\"Player Sprint Speed change based on height and weight\");","073d3390":"plt.figure(figsize=(12, 10))\nplt.scatter(data=df2, x='Weight', y='Height', c='SprintSpeed', s=40)\nplt.xlabel(\"Weight (in kg)\")\nplt.ylabel(\"Height (in cm)\");\nplt.colorbar()\nplt.title(\"Player Sprint Speed change based on height and weight\");","225bca08":"## For the rating columns, we will fill the null valeus with the mean value, but first we need to convert them to integer type","3d3819eb":"# Questions","6214cef6":"1. How many players come from each country\n2. Which position has the highest wage?\n3. Which countries has the highest paid players\n4. How are age and wage of players related in Barcelona, Real Madrid, and PSG clubs?\n5. How do player height and weight affect their sprint speed?","e22f98bb":"### So, it seems all players with Null in their skills are Goal Keepers, which makes sense!","888e5efd":"# Data Cleaning","d697f4e2":"## Q4: How are age and wage of players related in x, y clubs?","c4fa2d93":"### So, it can be safe to just set their skills to 0 in all these skills, perhaps? (or maybe median or mean or just 50)","7da02ffd":"##Dropping rows with null \"Club\"","1ad838c0":"## About 11% of the players has null values in these fields! We cannot drop such a large percentage","2377eeb4":"## Q5: How do player height and weight affect their sprint speed?","80882a26":"## Cleaning the position rating columns","ff7cd483":"### First, checking the null values","9d9ab3d5":"## Checking for duplicate player IDs","793691ee":"**Conclusion**: England and Germany has the most players","568e2aeb":"**Conclusion**: Higher sprint speed is correlated with low weights and heights","1344bb05":"Dropping useless columns and ones with many nulls","96c4e838":"### Let's check the position of these players","ff4c9767":"**Conclusion**: RF and LF positions have the heighest wages","4f48fbe2":"## Question 2: Which player position has the highest wage?","a913e284":"## Q3: Which countries has the highest paid players?","5f09741d":"### Okay, number of columns is too big for this to be useful","95f3e894":"## Q1: How many players come from each country\n"}}