{"cell_type":{"d41423e0":"code","bfb1d369":"code","33ed21d9":"code","fc3b2422":"code","2de98b61":"code","4a7d2037":"code","fd6507ea":"code","f0cd10a3":"code","bea1aea6":"code","a590d2cc":"code","627a2254":"code","f538993f":"code","e1769078":"code","428f1895":"code","578f7923":"code","ad94f002":"code","f3615846":"code","8bc2e5ff":"code","bbd116fa":"code","cdab9857":"markdown","675a11d4":"markdown","207b5764":"markdown","e30cda38":"markdown","49690fa5":"markdown","39b4aac5":"markdown"},"source":{"d41423e0":"from IPython.display import YouTubeVideo\nYouTubeVideo('hHkSn0r5mdM',width=640, height=480)   ","bfb1d369":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport networkx as nx\nimport warnings\nwarnings.filterwarnings('ignore')\nimport folium \nfrom folium import plugins\nimport gc\nimport os\nprint(os.listdir(\"..\/input\"))\nfrom sklearn import preprocessing","33ed21d9":"colormap = plt.cm.terrain","fc3b2422":"df_2017=pd.read_csv('..\/input\/kaggle-survey-2017\/multipleChoiceResponses.csv',encoding='ISO-8859-1')\ndf_2018=pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv')\n\ndf_2017_raw = df_2017.copy()\ndf_2018_raw = df_2018.copy()","2de98b61":"for column in df_2017:\n    df_2017[column] = df_2017[column].astype('category')\n    df_2017[column] = df_2017[column].cat.codes\nfor column in df_2018:\n    df_2018[column] = df_2018[column].astype('category')\n    df_2018[column] = df_2018[column].cat.codes\nprint(df_2017.shape)\nprint(df_2018.shape)\ndf_2017_mov = df_2017.copy()\ndf_2018_mov = df_2018.copy()\n","4a7d2037":"f, ax = plt.subplots(figsize=(12,12)) \nax.xaxis.label.set_color('black')\ng = sns.heatmap(df_2017.corr(),  cmap=colormap,  annot=False)\nax.set_title('Kaggle ML & DS Survey Challenge 2017 Pearson')\nplt.show()","fd6507ea":"f, ax = plt.subplots(figsize=(12,12)) \nax.xaxis.label.set_color('black')\ng = sns.heatmap(df_2018.corr(), cmap=colormap, annot=False)\nax.set_title('Kaggle ML & DS Survey Challenge 2018 Pearson')\nplt.show()","f0cd10a3":"df_2017_mov=df_2017.apply(pd.to_numeric)\ndf_2017_mov = df_2017_mov.dropna()\nx = df_2017_mov.values \nmin_max_scaler = preprocessing.MinMaxScaler()\nx_scaled = min_max_scaler.fit_transform(x)\ndf_2017_mov = pd.DataFrame(x_scaled)\n\ndf_2018_mov=df_2018.apply(pd.to_numeric)\ndf_2018_mov = df_2018_mov.dropna()\nx = df_2018_mov.values \nmin_max_scaler = preprocessing.MinMaxScaler()\nx_scaled = min_max_scaler.fit_transform(x)\ndf_2018_mov = pd.DataFrame(x_scaled)","bea1aea6":"f, ax = plt.subplots(figsize=(12,12)) \nax.xaxis.label.set_color('black')\ng = sns.heatmap(df_2017_mov.T,vmax=1,  cmap=colormap,  annot=False)\nax.set_xlabel('Responses')\nax.set_ylabel('Question nr.')\nax.set_title('Kaggle ML & DS Survey Challenge 2017 Heatmap')\nplt.show()","a590d2cc":"f, ax = plt.subplots(figsize=(12,12)) \nax.xaxis.label.set_color('black')\ng = sns.heatmap(df_2018_mov.T,vmax=1,  cmap=colormap,  annot=False)\nax.set_xlabel('Responses')\nax.set_ylabel('Question nr.')\nax.set_title('Kaggle ML & DS Survey Challenge 2018 Heatmap')\nplt.show()","627a2254":"df_2018 = df_2018.sort_values(by=['Time from Start to Finish (seconds)'])","f538993f":"df_2018_mov=df_2018.apply(pd.to_numeric)\ndf_2018_mov = df_2018_mov.dropna()\nx = df_2018_mov.values \nmin_max_scaler = preprocessing.MinMaxScaler()\nx_scaled = min_max_scaler.fit_transform(x)\ndf_2018_mov = pd.DataFrame(x_scaled)","e1769078":"f, ax = plt.subplots(figsize=(12,12)) \nax.xaxis.label.set_color('black')\ng = sns.heatmap(df_2018_mov.T,vmax=1,  cmap=colormap,  annot=False)\nax.set_xlabel('Responses')\nax.set_ylabel('Question nr.')\nax.set_title('Kaggle ML & DS Survey Challenge 2018 Heatmap')\nplt.show()","428f1895":"print(df_2018_raw.Q37.unique())","578f7923":"df_2018_DataCamp = df_2018_raw.loc[df_2018_raw['Q37'] == 'DataCamp']\nprint('DataCamp : ' + str(df_2018_DataCamp.shape))\ndf_2018_KaggleLearn = df_2018_raw.loc[df_2018_raw['Q37'] == 'Kaggle Learn']\nprint('Kaggle Learn : ' + str(df_2018_KaggleLearn.shape))\nprint('Sum: ' + str(df_2018_raw.shape))","ad94f002":"for column in df_2018_DataCamp:\n    df_2018_DataCamp[column] = df_2018_DataCamp[column].astype('category')\n    df_2018_DataCamp[column] = df_2018_DataCamp[column].cat.codes\nfor column in df_2018_KaggleLearn:\n    df_2018_KaggleLearn[column] = df_2018_KaggleLearn[column].astype('category')\n    df_2018_KaggleLearn[column] = df_2018_KaggleLearn[column].cat.codes\n    \ndf_2018_DataCamp = df_2018_DataCamp.apply(pd.to_numeric)\ndf_2018_DataCamp = df_2018_DataCamp.dropna()\nx = df_2018_DataCamp.values \nmin_max_scaler_D = preprocessing.MinMaxScaler()\nx_scaled_D = min_max_scaler_D.fit_transform(x)\ndf_2018_DataCamp = pd.DataFrame(x_scaled_D)\n\ndf_2018_KaggleLearn = df_2018_KaggleLearn.apply(pd.to_numeric)\ndf_2018_KaggleLearn = df_2018_KaggleLearn.dropna()\nx = df_2018_KaggleLearn.values \nmin_max_scaler_K = preprocessing.MinMaxScaler()\nx_scaled_K = min_max_scaler_K.fit_transform(x)\ndf_2018_KaggleLearn = pd.DataFrame(x_scaled_K)","f3615846":"f, ax = plt.subplots(figsize=(24, 12))\n\nplt.subplot(1, 2, 1)\nsns.heatmap(df_2018_DataCamp.T,annot=False,cmap=colormap) \nplt.title('DATACAMP', fontsize=18)\n\nplt.subplot(1, 2, 2)\nsns.heatmap(df_2018_KaggleLearn.T,annot=False,cmap=colormap) \nplt.title('KAGGLE LEARN', fontsize=18)\n\nplt.show()","8bc2e5ff":"df_lang = df_2018_raw[['Time from Start to Finish (seconds)', 'Q1', 'Q3',\n                       'Q16_Part_1', 'Q16_Part_2', 'Q16_Part_3', \n                       'Q16_Part_4', 'Q16_Part_5', 'Q16_Part_6', \n                       'Q16_Part_7', 'Q16_Part_8', 'Q16_Part_9',\n                       'Q16_Part_10', 'Q16_Part_11', 'Q16_Part_12',\n                       'Q16_Part_13', 'Q16_Part_15']].copy()\ndf_lang.rename(columns={'Q1': 'Gender', 'Q3': 'Country',\n                        'Q16_Part_1': 'Python', 'Q16_Part_2': 'R',\n                        'Q16_Part_3': 'SQL', 'Q16_Part_4': 'Bash',\n                        'Q16_Part_5': 'Java', 'Q16_Part_6': 'Javascript\/Typescript',\n                        'Q16_Part_7': 'Visual Basic\/VBA', 'Q16_Part_8': 'C\/C++',\n                        'Q16_Part_9': 'MATLAB', 'Q16_Part_10': 'Scala',\n                        'Q16_Part_11': 'Julia', 'Q16_Part_12': 'Go',\n                        'Q16_Part_13': 'C#\/.NET', 'Q16_Part_14': 'PHP',\n                        'Q16_Part_15': 'Ruby', 'Q16_Part_16': 'SAS\/STATA',\n                                              \n                       }, inplace=True)\ndf_lang.drop(df_lang.head(1).index, inplace=True)\ndf_lang.fillna(0, inplace=True)\ndf_lang['Time from Start to Finish (seconds)'] = pd.to_numeric(df_lang['Time from Start to Finish (seconds)'] )\ntrain_df = df_lang\ntrain_df['y'] = df_lang['Time from Start to Finish (seconds)']\nfor f in ['Gender','Country', 'Python', 'R', 'SQL', 'Bash','Java', 'Javascript\/Typescript', 'Visual Basic\/VBA', 'C\/C++', 'MATLAB', 'Scala', 'Julia', 'Go','C#\/.NET', 'Ruby']:\n        lbl = preprocessing.LabelEncoder()\n        lbl.fit(list(train_df[f].values)) \n        train_df[f] = lbl.transform(list(train_df[f].values))\ntrain_df = train_df.drop(['Time from Start to Finish (seconds)'], axis=1)\n\n","bbd116fa":"f, ax = plt.subplots(figsize=(12,12)) \nax.xaxis.label.set_color('black')\ng = sns.heatmap(train_df.corr(), cmap=colormap, annot=False)\nax.set_title('What programming languages do you use on a regular basis?')\nplt.show()","cdab9857":"**How India can lead the world into the Fourth Industrial Revolution?**","675a11d4":"**Sort by Time from Start to Finish (seconds)**","207b5764":"**Karl Pearson** FRS[1] HFRSE LLD (\/\u02c8p\u026a\u0259rs\u0259n\/; originally named Carl; 27 March 1857 \u2013 27 April 1936[2]) was an English mathematician and biostatistician. He has been credited with establishing the discipline of mathematical statistics.[3][4] He founded the world's first university statistics department at University College London in 1911, and contributed significantly to the field of biometrics and meteorology. Pearson was also a proponent of social Darwinism and eugenics.[5] Pearson was a prot\u00e9g\u00e9 and biographer of Sir Francis Galton.\n\nIn statistics, the **Pearson correlation** coefficient (PCC, pronounced \/\u02c8p\u026a\u0259rs\u0259n\/), also referred to as Pearson's r, the Pearson product-moment correlation coefficient (PPMCC) or the bivariate correlation,[1] is a measure of the linear correlation between two variables X and Y. Owing to the Cauchy\u2013Schwarz inequality it has a value between +1 and \u22121, where 1 is total positive linear correlation, 0 is no linear correlation, and \u22121 is total negative linear correlation. It is widely used in the sciences. It was developed by Karl Pearson from a related idea introduced by Francis Galton in the 1880s.[2][3][4]\n\nSource: https:\/\/en.wikipedia.org\/wiki\/Karl_Pearson","e30cda38":"**To Be Continued ...**","49690fa5":"**Under the Hood**","39b4aac5":"![](https:\/\/assets.weforum.org\/editor\/_GQTTE4ZUgYvyFUnFvqr6fCtV4PhJF6K2_21-PEN5Is.png)\n\nSource: https:\/\/www.weforum.org\/agenda\/2018\/11\/india-can-be-the-laboratory-that-leads-the-world-into-the-fourth-industrial-revolution\/)\n"}}