{"cell_type":{"acfdb9bd":"code","89b2ba8e":"code","9210f690":"code","9e185a04":"code","80dc1b89":"code","7f0ecd2c":"code","710b8e1f":"code","fce76db8":"code","8f9b72b5":"markdown","51c0d049":"markdown","948a670d":"markdown","520f1068":"markdown","ee234511":"markdown","3ba2be42":"markdown","e677e917":"markdown","41b29d2b":"markdown","99a536d2":"markdown"},"source":{"acfdb9bd":"# Set up code checking\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.deep_learning.exercise_4 import *\nprint(\"Setup Complete\")","89b2ba8e":"from tensorflow.keras.applications import ResNet50\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Flatten, GlobalAveragePooling2D\n\nnum_classes = 2\nresnet_weights_path = '..\/input\/resnet50\/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5'\n\nmy_new_model = Sequential()\nmy_new_model.add(ResNet50(include_top=False, pooling='avg', weights=resnet_weights_path))\nmy_new_model.add(Dense(num_classes, activation='softmax'))\n\n# Indicate whether the first layer should be trained\/changed or not.\nmy_new_model.layers[0].trainable = False\n\n# Check your answer\nstep_1.check()","9210f690":"#step_1.hint()\n# step_1.solution()","9e185a04":"my_new_model.compile(optimizer='sgd', \n                     loss='categorical_crossentropy', \n                     metrics=['accuracy'])","80dc1b89":"# Check your answer (Run this code cell to receive credit!)\nstep_2.solution()","7f0ecd2c":"# Check your answer (Run this code cell to receive credit!)\nstep_3.solution()","710b8e1f":"from tensorflow.keras.applications.resnet50 import preprocess_input\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\nimage_size = 224\ndata_generator = ImageDataGenerator(preprocess_input)\n\ntrain_generator = data_generator.flow_from_directory(\n                                        directory='..\/input\/dogs-gone-sideways\/images\/train',\n                                        target_size=(image_size, image_size),\n                                        batch_size=10,\n                                        class_mode='categorical')\n\nvalidation_generator = data_generator.flow_from_directory(\n                                        directory='..\/input\/dogs-gone-sideways\/images\/val',\n                                        target_size=(image_size, image_size),\n                                        class_mode='categorical')\n\n# fit_stats below saves some statistics describing how model fitting went\n# the key role of the following line is how it changes my_new_model by fitting to data\nfit_stats = my_new_model.fit_generator(train_generator,\n                                       steps_per_epoch=22,\n                                       validation_data=validation_generator,\n                                       validation_steps=1)\n\n# Check your answer\nstep_4.check()","fce76db8":"step_4.solution()","8f9b72b5":"# 2) Compile the Model\n\nYou now compile the model with the following line.  Run this cell.","51c0d049":"**[Deep Learning Home Page](https:\/\/www.kaggle.com\/learn\/deep-learning)**\n\n---\n","948a670d":"# Exercise Introduction\n\nThe cameraman who shot our deep learning videos mentioned a problem that we can solve with deep learning.  \n\nHe offers a service that scans photographs to store them digitally.  He uses a machine that quickly scans many photos. But depending on the orientation of the original photo, many images are digitized sideways.  He fixes these manually, looking at each photo to determine which ones to rotate.\n\nIn this exercise, you will build a model that distinguishes which photos are sideways and which are upright, so an app could automatically rotate each image if necessary.\n\nIf you were going to sell this service commercially, you might use a large dataset to train the model. But you'll have great success with even a small dataset.  You'll work with a small dataset of dog pictures, half of which are rotated sideways.\n\nSpecifying and compiling the model look the same as in the example you've seen. But you'll need to make some changes to fit the model.\n\n**Run the following cell to set up automatic feedback.**","520f1068":"# 1) Specify the Model\n\nSince this is your first time, we'll provide some starter code for you to modify. You will probably copy and modify code the first few times you work on your own projects.\n\nThere are some important parts left blank in the following code.\n\nFill in the blanks (marked with `____`) and run the cell\n","ee234511":"---\n**[Deep Learning Home Page](https:\/\/www.kaggle.com\/learn\/deep-learning)**\n\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum) to chat with other Learners.*","3ba2be42":"That ran nearly instantaneously.  Deep learning models have a reputation for being computationally demanding.  Why did that run so quickly?\n\nAfter thinking about this, check your answer by uncommenting the cell below.","e677e917":"# 3) Review the Compile Step\nYou provided three arguments in the compile step.  \n- optimizer\n- loss\n- metrics\n\nWhich arguments could affect the accuracy of the predictions that come out of the model?  After you have your answer, run the cell below to see the solution.","41b29d2b":"\nCan you tell from the results what fraction of the time your model was correct in the validation data? \n\nIn the next step, we'll see if we can improve on that.\n\n# Keep Going\nMove on to learn about **[data augmentation](https:\/\/www.kaggle.com\/dansbecker\/data-augmentation\/)**.  It is a clever and easy way to improve your models. Then you'll apply data augmentation to this automatic image rotation problem.\n","99a536d2":"# 4) Fit Model\n\n**Your training data is in the directory `..\/input\/dogs-gone-sideways\/images\/train`. The validation data is in `..\/input\/dogs-gone-sideways\/images\/val`**. Use that information when setting up `train_generator` and `validation_generator`.\n\nYou have 220 images of training data and 217 of validation data.  For the training generator, we set a batch size of 10. Figure out the appropriate value of `steps_per_epoch` in your `fit_generator` call.\n\nFill in all the blanks (again marked as `____`).  Then run the cell of code.  Watch as your model trains the weights and the accuracy improves."}}