{"cell_type":{"69fc51b3":"code","83e6b942":"code","e2f8f1dd":"code","6c9bf685":"code","31368361":"code","24327835":"code","f65df4de":"code","0cc85b8e":"code","27819432":"code","a1fca4c2":"code","3e0c6bf1":"code","da8aaea7":"code","59dd36a1":"code","ac2fb613":"code","3e7f4e4d":"code","1f8cc390":"code","3d930b13":"code","70ccdf44":"code","d6d88eef":"code","0b31778f":"code","8f8601b4":"code","2f3c5489":"code","336c2250":"code","c79bc14c":"code","4458548a":"code","395966bc":"code","04f3bf34":"code","53b5cf42":"code","f19b5238":"code","8b76cc2e":"code","259a1ce9":"code","0a2f7892":"code","a2c0db68":"markdown","18188fbd":"markdown","5321e956":"markdown","91f53399":"markdown","ae853e15":"markdown","42d92f17":"markdown","adf37d0e":"markdown","ce584445":"markdown","99bef24f":"markdown","a21be0d6":"markdown","648c716e":"markdown","e280e534":"markdown","277b2f01":"markdown","7b7ebb66":"markdown","e3808885":"markdown","0b7439d7":"markdown","b9d6dd87":"markdown","baeb5d9d":"markdown","4706d565":"markdown","0ad4a22e":"markdown","01a48d70":"markdown","ddc4050e":"markdown","0ffa2cd4":"markdown","7544008c":"markdown","81cf3631":"markdown"},"source":{"69fc51b3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nsns.set_style('whitegrid')","83e6b942":"cartier = pd.read_csv('..\/input\/cartier-jewelry-catalog\/cartier_catalog.csv')\ncartier.head()","e2f8f1dd":"cartier.info()","6c9bf685":"# There is no sence in reference number from analysis point of view, so I'm removing this column\ncartier.drop('ref', axis = 1, inplace = True)\n\n# Also I won't analyse image in this notebook\ncartier.drop('image', axis = 1, inplace = True)","31368361":"# Checking uniques values in categories\ncartier['categorie'].unique()","24327835":"cartier.rename(columns = {'categorie': 'category'}, inplace = True)\ncartier['category'] = cartier['category'].astype('category')","f65df4de":"# Checking title column\ncartier['title'].unique()","0cc85b8e":"cartier.drop('title', axis = 1, inplace = True)","27819432":"# Checking price distribution\ncartier['price'].describe()","a1fca4c2":"# Checking the most expensive items\ncartier[cartier['price'] > 300000]","3e0c6bf1":"# Checking uniques tags values\nset([tag for tags in cartier['tags'].str.replace('.','').str.split(', ') for tag in tags])","da8aaea7":"# Creating list with metals, coatings and crystals based on set of unique tags\nmetals = ['yellow gold', 'platinum', 'pink gold', 'white gold', 'non-rhodiumized white gold']\ncoatings = ['black lacquer', 'lacquer', 'black ceramic', 'ceramic']\ncrystals = ['amazonite', 'amethyst', 'amethysts', 'aquamarines', 'aventurine', 'brown diamonds', 'carnelian', 'carnelians', 'chrysoprase', 'chrysoprases', 'citrine', 'coral', 'diamond', 'diamonds', 'emeralds', 'garnets', 'gray mother-of-pearl', 'lapis lazuli', 'malachite', 'mother-of-pearl', 'obsidians', 'onyx', 'orange diamonds', 'pearl', 'peridots', 'pink sapphire', 'pink sapphires', 'rubies', 'sapphire', 'sapphires', 'spessartite garnet', 'spinels', 'tsavorite garnet', 'tsavorite garnets', 'white mother-of-pearl', 'yellow diamonds']\n\n# Initialising functions to divide tags in different categories. \ndef check_tags(group, tags):\n    value = ''\n    for tag in tags:\n        if tag in group:\n            value += tag.rstrip('s') + ', '\n    if value == '':\n        return 'No'\n    return value.rstrip(\", \")\n    \ndef metal(tags):\n    return check_tags(metals, tags)\ndef crystal(tags):\n    return check_tags(crystals, tags)\ndef coating(tags):\n    return check_tags(coatings, tags)","59dd36a1":"# Creating new columns with metals, crystals and coatings instead of tags \ncartier['metals'] = cartier['tags'].str.replace('non-rhodiumized white gold','white gold').str.replace('.','').str.split(', ').apply(metal)\ncartier['crystals'] = cartier['tags'].str.replace('rubies','ruby').str.replace('.','').str.split(', ').apply(crystal)\ncartier['coatings'] = cartier['tags'].str.replace('.','').str.split(', ').apply(coating)","ac2fb613":"# Removing tags in a separate column\ntags = cartier.pop('tags')","3e7f4e4d":"# Checking descriptions' lenth\ncartier['description'].str.len().sort_values(ascending = False)","1f8cc390":"cartier.iloc[258,2]","3d930b13":"cartier.iloc[691,2]","70ccdf44":"cartier.iloc[258,2] = 'Clash de Cartier ring, XL model, 18K yellow gold, coral. Width: 17.7mm.'\ncartier.iloc[691,2] = 'Clash de Cartier earrings, XL model, 18K yellow gold, coral. Width: 17.7mm.'","d6d88eef":"cartier['title'] = cartier['description'].apply(lambda x: x.split(', ')[0].split(' - ')[0])","0b31778f":"cartier['width'] = cartier['description'].apply(lambda x: x.split('Width: ')[1].split('mm')[0] if len(x.split('Width: ')) > 1 else np.nan).astype('float')","8f8601b4":"# Removing old column\ndescription = cartier.pop('description')","2f3c5489":"cartier.info()","336c2250":"plt.figure(figsize = (10, 6))\nprice = sns.distplot(cartier['price'], kde = False, color=\"r\", bins = 50)\nprice.set_xlabel('Price')","c79bc14c":"cartier['price'].describe()","4458548a":"plt.figure(figsize = (10, 6))\nprice_category = sns.swarmplot(y = 'category', x = 'price', data = cartier, palette = 'magma')\nprice_category.set_xlabel('Price')\nprice_category.set_ylabel('Category')","395966bc":"plt.figure(figsize = (10, 8))\nprice_metal = sns.swarmplot(y = 'metals', x = 'price', data = cartier, palette = 'magma_r')\nprice_metal.set_xlabel('Price')\nprice_metal.set_ylabel('Metal')","04f3bf34":"plt.figure(figsize = (10, 6))\nall_metals = [metal for rows in cartier['metals'].str.split(', ') for metal in rows]\nmetals = sns.countplot(all_metals, palette = 'magma_r')\nmetals.set_xlabel('Metal')\nmetals.set_ylabel('Jewelry count')","53b5cf42":"all_coatings = [metal for rows in cartier[cartier['coatings'] != 'No']['coatings'].str.split(', ') for metal in rows]\ncoatings = sns.countplot(all_coatings, palette = 'magma_r')\ncoatings.set_xticklabels(coatings.get_xticklabels(), rotation=90)\ncoatings.set_xlabel('Coating')\ncoatings.set_ylabel('Jewelry count')","f19b5238":"plt.figure(figsize = (10, 8))\nprice_metal = sns.swarmplot(y = 'coatings', x = 'price', data = cartier, palette = 'magma_r')\nprice_metal.set_xlabel('Price')\nprice_metal.set_ylabel('Coating')","8b76cc2e":"plt.figure(figsize = (12, 8))\nall_crystals = [metal for rows in cartier[cartier['crystals'] != 'No']['crystals'].str.split(', ') for metal in rows]\ncrystals = sns.countplot(y = all_crystals, palette = 'Blues_r', order = pd.Series(all_crystals).value_counts().index, )\ncrystals.set_xticklabels(crystals.get_xticklabels(), rotation=90)\ncrystals.set_xlabel('Jewelry count')\ncrystals.set_ylabel('Crystals')","259a1ce9":"from wordcloud import WordCloud, STOPWORDS\n\n# Setting stopwords\nstopwords_names = set(STOPWORDS)\nstopwords_names.update(['ring', 'Ring', 'bracelet', 'Bracelet', 'necklace', 'Necklace', 'earrings', 'Earrings', 'de', 'Cartier'])\n\n# Creating words list for names\nwords_in_title = [word for rows in cartier['title'].str.split() for word in rows if word not in stopwords_names]\nwords = \" \".join(word for word in words_in_title)","0a2f7892":"# Creating a cloud with words from names:\nplt.figure(figsize = (10,6))\nwordcloud = WordCloud(max_words=30, background_color=\"white\", colormap = 'tab20b').generate(words)\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","a2c0db68":"Price distribution depending on metal used:","18188fbd":"### End","5321e956":"We can see that all the expensive items are with diamonds.\n\nHere are some of those jewelleries:\n- [Juste un Clou cuff bracelet](https:\/\/www.cartier.co.uk\/en-gb\/collections\/jewelry\/collections\/juste-un-clou\/bracelets\/h6004717-juste-un-clou-bracelet.html)\n- [Reflection de Cartier necklace](https:\/\/www.cartier.co.uk\/en-gb\/collections\/jewelry\/collections\/diamond-collection\/necklaces\/h7000130-reflection-de-cartier-necklace.html)\n- [Cactus de Cartier necklace](https:\/\/www.cartier.co.uk\/en-gb\/collections\/jewelry\/collections\/cactus-de-cartier\/necklaces\/h7000156-cactus-de-cartier-necklace.html)","91f53399":"There are only 4 possible values and no gaps in Category column, so it is perfect to use 'category' as data type. Also I'll rename column to eliminate a misspelling.","ae853e15":"Information is quite chaotic. There are ring names, sizes, materials, number of crystals presented without any order. As I can see, description column has quite similar information, but with better structure, so I'll use descriptions for additional information. Title column I'm going to remove.  ","42d92f17":"The most popular crystals (or minerals):","adf37d0e":"The most popular metals:","ce584445":"So mostly (70%) Cartier jewelry costs below 20k! ","99bef24f":"Cartier uses coatings very rare, so there are only few items with coatings. Prices for jewelry with coating are mostly below 50k.","a21be0d6":"Price distribution:","648c716e":"In description we can find:\n- title\n- material\n- category\n- size (small, medium, large)\n- width.\n\nWe already have material and category of jewelry in separate columns, so this information is not useful. I also don't think that size is an important variable. Let's retrieve only title and width.","e280e534":"Replacing them with first part of the text - till '\\n\\n'.","277b2f01":"Price distribution per jewellery category:","7b7ebb66":"Some of popular words in Cartier collections and jewelry titles:","e3808885":"# Data preprocessing","0b7439d7":"There are two long descriptions:","b9d6dd87":"From each description I'll get jewelry title - this is text up to first comma or dash.\n\nNote: There are plain descriptions like *'18K yellow gold necklace set with ceramic ring'* without any punctuation mark. For such rows I'll take their description as a name","baeb5d9d":"White gold is used more often than other metals. Also price distribution for white gold jewelry is higher. From the other hand platinum is not so popular in Cartier boutique, but there are both cheap and expensive platinum jewelry.","4706d565":"Thank you for reviewing!","0ad4a22e":"Cartier boutique definitely prefers diamonds!","01a48d70":"Cheapest ring costs 500 dollars and the most expensive is 370,000. Distribution is negatively skewed.","ddc4050e":"# Objectives\n\nIn this notebook I'd like to review Cartier Dataset. There are a lot of rumors that Cartier jewellery is expensive, from white gold or platinum, full of diamonds... Only rich people can afford such a treasure. I'd like to investigate that and find out, which prices does Cartier set? What kind of metal they use? Is there only jewelry with diamonds? Let's check!","0ffa2cd4":"The most popular coatings:","7544008c":"# Analysis","81cf3631":"Let's create separate column for width - this is information from word 'Width' till 'mm' notation. If there is no width, then I'll put 'nan'. "}}