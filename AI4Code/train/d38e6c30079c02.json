{"cell_type":{"aed0971b":"code","e39913af":"code","0b5568d8":"code","824a27bb":"code","bac15110":"code","4de6d9ee":"code","950f3f59":"code","48bc5060":"code","282edf36":"code","047c295e":"code","beb89108":"code","413565b0":"code","ff4ac93a":"code","aeb114d8":"code","27679c1b":"code","f3626ca3":"code","2aa4fab8":"code","6d9390db":"code","565a0fba":"code","4ad835c1":"code","e7e30b5b":"code","fa38d21a":"code","0ae9bd35":"code","4e8ef4f8":"code","209d06a0":"code","c7113e82":"code","2db4db67":"code","3ec1d78c":"code","687a20b5":"code","b2e5a14a":"code","188b8fb4":"code","3239234d":"code","b0c2d0d7":"code","25165e75":"code","eacebd3f":"code","00394d46":"markdown","718a9516":"markdown","38b37898":"markdown","0d6f458b":"markdown","6b641755":"markdown","190b3851":"markdown","7d72c351":"markdown","006b37fb":"markdown","aded1437":"markdown","f7954485":"markdown","72a2c0e9":"markdown","9c14d9af":"markdown","72693e1d":"markdown","4a87b208":"markdown","46663bda":"markdown","15ed1f5b":"markdown","a8ae5730":"markdown","d9b3579e":"markdown","f6a13829":"markdown","17743ec1":"markdown","0d389d1e":"markdown","a11dcb2c":"markdown","d0750cea":"markdown","5845c8c4":"markdown","51b70295":"markdown","a7a96e14":"markdown","907b4e86":"markdown","815faecc":"markdown","dd63920f":"markdown","293d5d29":"markdown","a839d857":"markdown","0072d6d6":"markdown","ea104614":"markdown","2eecf624":"markdown","36e97512":"markdown","468e1d93":"markdown","a9a8ada9":"markdown","5c444bd3":"markdown","155cd855":"markdown","b08d9768":"markdown","5897ccaa":"markdown","3191225a":"markdown","5df3428d":"markdown","8d6f9347":"markdown","4a4a5b53":"markdown","2c4f7c36":"markdown","ffa6209e":"markdown","19937f64":"markdown","7e14061d":"markdown","a86a6d75":"markdown","76edb21b":"markdown","77ffd3b4":"markdown","7f8cc58c":"markdown"},"source":{"aed0971b":"import pandas as pd\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","e39913af":"dataset = pd.read_csv('..\/input\/diabetes-dataset\/diabetes2.csv')","0b5568d8":"dataset","824a27bb":"fig = px.histogram(dataset['Pregnancies'], title='Pregnancies Distribution', marginal='box', color=dataset['Outcome'], color_discrete_sequence=['red','blue'])\nfig.update_layout(bargap=0.1)\nfig.show()","bac15110":"fig = px.histogram(dataset['Glucose'], title='Glucose Distribution', marginal='box', color=dataset['Outcome'], color_discrete_sequence=['red','blue'])\nfig.update_layout(bargap=0.1)\nfig.show()","4de6d9ee":"fig = px.histogram(dataset['BloodPressure'], title='BloodPressure Distribution', marginal='box', color=dataset['Outcome'], color_discrete_sequence=['red','blue'])\nfig.update_layout(bargap=0.1)\nfig.show()","950f3f59":"fig = px.histogram(dataset['SkinThickness'], title='SkinThickness Distribution', marginal='box', color=dataset['Outcome'], color_discrete_sequence=['red','blue'])\nfig.update_layout(bargap=0.1)\nfig.show()","48bc5060":"fig = px.histogram(dataset['Insulin'], title='Insulin Distribution', marginal='box', color=dataset['Outcome'], color_discrete_sequence=['red','blue'])\nfig.update_layout(bargap=0.1)\nfig.show()","282edf36":"fig = px.histogram(dataset['BMI'], title='BMI Distribution', marginal='box', color=dataset['Outcome'], color_discrete_sequence=['red','blue'])\nfig.update_layout(bargap=0.1)\nfig.show()","047c295e":"fig = px.histogram(dataset['DiabetesPedigreeFunction'], title='DiabetesPedigreeFunction Distribution', marginal='box', color=dataset['Outcome'], color_discrete_sequence=['red','blue'])\nfig.update_layout(bargap=0.1)\nfig.show()","beb89108":"fig = px.histogram(dataset['Age'], title='Age Distribution', marginal='box', color=dataset['Outcome'], color_discrete_sequence=['red','blue'])\nfig.update_layout(bargap=0.1)\nfig.show()","413565b0":"dataset.corr()","ff4ac93a":"X = dataset['Pregnancies']\nX = np.array(X).reshape(-1,1)\nY = dataset['Outcome']\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, Y)\nprint('Accuracy is :', accuracy_score(Y, model.predict(X)))\nprint('Correlation is',dataset['Outcome'].corr(dataset['Pregnancies']))","aeb114d8":"X = dataset['Glucose']\nX = np.array(X).reshape(-1,1)\nY = dataset['Outcome']\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, Y)\nprint('Accuracy is :', accuracy_score(Y, model.predict(X)))\nprint('Correlation is',dataset['Outcome'].corr(dataset['Glucose']))","27679c1b":"X = dataset['BloodPressure']\nX = np.array(X).reshape(-1,1)\nY = dataset['Outcome']\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, Y)\nprint('Accuracy is :', accuracy_score(Y, model.predict(X)))\nprint('Correlation is',dataset['Outcome'].corr(dataset['BloodPressure']))","f3626ca3":"X = dataset['SkinThickness']\nX = np.array(X).reshape(-1,1)\nY = dataset['Outcome']\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, Y)\nprint('Accuracy is :', accuracy_score(Y, model.predict(X)))\nprint('Correlation is',dataset['Outcome'].corr(dataset['SkinThickness']))","2aa4fab8":"X = dataset['Insulin']\nX = np.array(X).reshape(-1,1)\nY = dataset['Outcome']\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, Y)\nprint('Accuracy is :', accuracy_score(Y, model.predict(X)))\nprint('Correlation is',dataset['Outcome'].corr(dataset['Insulin']))","6d9390db":"X = dataset['BMI']\nX = np.array(X).reshape(-1,1)\nY = dataset['Outcome']\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, Y)\nprint('Accuracy is :', accuracy_score(Y, model.predict(X)))\nprint('Correlation is',dataset['Outcome'].corr(dataset['BMI']))","565a0fba":"X = dataset['DiabetesPedigreeFunction']\nX = np.array(X).reshape(-1,1)\nY = dataset['Outcome']\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, Y)\nprint('Accuracy is :', accuracy_score(Y, model.predict(X)))\nprint('Correlation is',dataset['Outcome'].corr(dataset['DiabetesPedigreeFunction']))","4ad835c1":"X = dataset['Age']\nX = np.array(X).reshape(-1,1)\nY = dataset['Outcome']\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, Y)\nprint('Accuracy is :', accuracy_score(Y, model.predict(X)))\nprint('Correlation is',dataset['Outcome'].corr(dataset['Age']))","e7e30b5b":"X = dataset[['Glucose', 'BMI']]\nY = dataset['Outcome']\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, Y)\nprint('Accuracy is :', accuracy_score(Y, model.predict(X)))","fa38d21a":"X = dataset[['Glucose', 'BMI', 'Pregnancies']]\nY = dataset['Outcome']\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, Y)\nprint('Accuracy is :', accuracy_score(Y, model.predict(X)))","0ae9bd35":"X = dataset[['Glucose', 'BMI', 'Pregnancies', 'DiabetesPedigreeFunction']]\nY = dataset['Outcome']\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, Y)\nprint('Accuracy is :', accuracy_score(Y, model.predict(X)))","4e8ef4f8":"X = dataset[['Glucose', 'BMI', 'Pregnancies', 'DiabetesPedigreeFunction', 'Insulin']]\nY = dataset['Outcome']\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, Y)\nprint('Accuracy is :', accuracy_score(Y, model.predict(X)))","209d06a0":"X = dataset[['Glucose', 'BMI', 'Pregnancies', 'DiabetesPedigreeFunction', 'Insulin', 'SkinThickness']]\nY = dataset['Outcome']\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, Y)\nprint('Accuracy is :', accuracy_score(Y, model.predict(X)))","c7113e82":"X = dataset[['Glucose', 'BMI', 'Pregnancies', 'DiabetesPedigreeFunction', 'Insulin', 'SkinThickness', 'BloodPressure']]\nY = dataset['Outcome']\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, Y)\nprint('Accuracy is :', accuracy_score(Y, model.predict(X)))","2db4db67":"X = dataset[['Glucose', 'BMI', 'Pregnancies', 'DiabetesPedigreeFunction', 'Insulin', 'SkinThickness', 'Age']]\nY = dataset['Outcome']\nmodel = LogisticRegression(solver='liblinear')\nmodel.fit(X, Y)\nprint('Accuracy is :', accuracy_score(Y, model.predict(X)))","3ec1d78c":"train_df, test_df = train_test_split(dataset, random_state=42, test_size=0.2)","687a20b5":"target_cols = ['Outcome']\ninput_cols = ['Glucose', 'BMI', 'Pregnancies', 'DiabetesPedigreeFunction', 'Insulin', 'SkinThickness']","b2e5a14a":"X_train = train_df[input_cols]\nX_test = test_df[input_cols]\nY_train = train_df[target_cols]\nY_test = test_df[target_cols]","188b8fb4":"dataset.info()","3239234d":"scaler = StandardScaler()\nscaler.fit(dataset[input_cols])","b0c2d0d7":"X_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)","25165e75":"model = LogisticRegression(solver='liblinear')\nY_train = pd.Series.ravel(Y_train)\nmodel.fit(X_train, Y_train)\nY_train_pred = model.predict(X_train)\nprint('Accuracy in Training Data Set :',accuracy_score(Y_train, Y_train_pred)*100)","eacebd3f":"model = LogisticRegression(solver='liblinear')\nY_test = pd.Series.ravel(Y_test)\nmodel.fit(X_test, Y_test)\nY_test_pred = model.predict(X_test)\nprint('Accuracy in Testing Data Set :',accuracy_score(Y_test, Y_test_pred)*100)","00394d46":"Accuracy of Glucose, BMI, Pregnancies, DiabetesPedigreeFunction, Insulin & SkinThickness Vs Outcome : 0.7760416666666666<br>\nAccuracy of Glucose, BMI, Pregnancies, DiabetesPedigreeFunction, Insulin, SkinThickness & Age Vs Outcome : 0.7760416666666666<br>\nSince both are same it means age doesn't contribute anything for prediction, so it can be neglected.<br>\n\n<b>Note :<\/b> <br>\nAccuracy of Glucose Vs Outcome - 0.7473958333333334<br>\nAccuracy of Glucose, BMI, Pregnancies, DiabetesPedigreeFunction, Insulin & SkinThickness Vs Outcome - 0.7760416666666666<br>\n\nOnly 0.0286458333333332 rise in accuracy, which is not promising.So we can just use Glucose alone<br>\n***But*** still feature scaling isn't done, so we continue considering.","718a9516":"## BMI Distribution","38b37898":"# Logistic Regression","0d6f458b":"## Glucose, BMI, Pregnancies & DiabetesPedigreeFunction Vs Outcome","6b641755":"Lesser the value, more the number of women (both cases)<br>\nWith increase in DiabetesPedigreeFunction value non-diabetic women count decreases<br>","190b3851":"## Glucose & BMI Vs Outcome","7d72c351":"# Impute Nan Values (if any)","006b37fb":"# Import Dataset","aded1437":"## Pregnancies Distribution","f7954485":"## SkinThickness Distribution","72a2c0e9":"# Testing","9c14d9af":"## BloodPressure Distribution","72693e1d":"## Insulin Vs Outcome","4a87b208":"Accuracy is increase slightly so continue considering Glucose","46663bda":"## Glucose, BMI, Pregnancies, DiabetesPedigreeFunction, Insulin, SkinThickness & Age Vs Outcome","15ed1f5b":"There are no Nan Values in the dataset","a8ae5730":"## Age Distribution","d9b3579e":"# Import Libraries","f6a13829":"Accuracy is increase slightly so continue considering Glucose","17743ec1":"## Glucose, BMI & Pregnancies Vs Outcome","0d389d1e":"Accuracy is increase slightly so continue considering Glucose","a11dcb2c":"## Glucose, BMI, Pregnancies, DiabetesPedigreeFunction & Insulin Vs Outcome","d0750cea":"Accuracy is decreased when 'BloodPressure' is included so it should not be considered.","5845c8c4":"## Insulin Distribution","51b70295":"## Glucose, BMI, Pregnancies, DiabetesPedigreeFunction, Insulin, SkinThickness & BloodPressure Vs Outcome","a7a96e14":"# Data Visualization & Analysis","907b4e86":"## Age Vs Outcome","815faecc":"For insulin level 0 - 19, there are more diabetic and non-diabetic women compared to other level","dd63920f":"## Glucose Distribution","293d5d29":"Accuracy of Glucose Vs Outcome - 0.7473958333333334\n\nBefore Feature Scaling,<br>\nAccuracy is 77.60416666666666<br>\nAfter Feature Scaling,<br>\nAccuracy is 77.68729641693811<br>\n\nOnly very little improvement.","a839d857":"## Pregnancies Vs Outcome","0072d6d6":"## SkinThickness Vs Outcome","ea104614":"# Training","2eecf624":"## BloodPressure Vs Outcome","36e97512":"***1- Diabetic; 0 - Non-Diabetic***<br>\nNormal Distribution<br>\nNormal blood glucose levels for adults, without diabetes, is ***90 to 110*** mg\/dL<br>\nMost of the non-diabetic women have normal glucose level.(Also it is obvious medically)<br>\nMost of the diabetic women have glucose level in the range 100 - 200.<br>\nCompared to lack of glucose level(< 90), more women have excessive glucose level(>110).\n\nFor higher glucose levels, there is a high probability for a women to be diabetic.\n\n***Note :*** Even women having normal glucose level are diabetic.","468e1d93":"The data was collected and made available by \u201cNational Institute of Diabetes and Digestive and Kidney Diseases\u201d as part of the Pima Indians Diabetes Database. Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here belong to the Pima Indian heritage (subgroup of Native Americans), and are females of ages 21 and above.<br>\n\nPredict, for given feature values, a woman is diabetic or not.","a9a8ada9":"# Scaling Numeric Columns\n\n***Try minmax scaler also***","5c444bd3":"# Train Test Split","155cd855":"## DiabetesPedigreeFunction Distribution","b08d9768":"Normal Distribution<br>\nMost of the women have BMI in the range 23 - 41<br>\nThere are more diabetic women for the BMI > 41","5897ccaa":"***1- Diabetic; 0 - Non-Diabetic***<br>\nExponentially Decaying Distribution<br>\nThere are more womans with less number of pregnancies (both diabetic and non-diabetic)","3191225a":"### Accuracy in Decreasing Order\n***Glucose Vs Outcome*** - 0.7473958333333334<br>\n***BMI Vs Outcome*** - 0.6692708333333334<br>\n***Pregnancies Vs Outcome*** - 0.6640625<br>\n***DiabetesPedigreeFunction Vs Outcome*** - 0.6614583333333334<br>\n***Insulin Vs Outcome*** - 0.6575520833333334<br>\n***SkinThickness Vs Outcome*** - 0.65234375<br>\n***BloodPressure Vs Outcome*** - 0.6510416666666666<br>\n***Age Vs Outcome*** - 0.6471354166666666<br>\n\n***Note :*** Eventhough correlation between Age and Outcome is higher than DiabetesPedigreeFunction, Insulin, SkinThickness, SkinThickness it is less dependent on Outcome.<br>\nThis is because ***'Correlation doesn't imply Causation'***","5df3428d":"## BMI Vs Outcome","8d6f9347":"Exponentially Decaying Curve<br>\nMore number of non-diabetic women are in the age range 20 - 31<br>\nMore number of diabetic women are in the range 22 - 53<br>","4a4a5b53":"## Glucose Vs Outcome","2c4f7c36":"Accuracy is increase slightly so continue considering Glucose","ffa6209e":"## DiabetesPedigreeFunction Vs Outcome","19937f64":"***1- Diabetic; 0 - Non-Diabetic***<br>\nNormal Distribution<br>\nA normal blood pressure level is ***less than 120\/80 mmHg***<br>\n\nMost of the non-diabetic women have pressure level in the range 60-84.<br>\nMost of the diabetic women have glucose level in the range 60 - 84.<br>\n\n***Note :*** Even women having normal pressure level are diabetic.","7e14061d":"## Glucose, BMI, Pregnancies, DiabetesPedigreeFunction, Insulin & SkinThickness Vs Outcome","a86a6d75":"# Identify Inputs & Targets\nTarget Column(s) - Outcome<br>\nNumeric Columns - Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age<br>\nNo categorical input columns<br>","76edb21b":"***1- Diabetic; 0 - Non-Diabetic***<br>\nFor skinthickness = 0 - 4, there are more diabetic and non-diabetic women<br>\nFor skinthickness in the range 0 - 34, there is more probability for a women to be non-diabetic.<br>\nFor skinthickness in the > 34, there is equal probability for a women to be diabetic and non-diabetic.<br>\n","77ffd3b4":"Accuracy is increase slightly so continue considering BMI","7f8cc58c":"# Encoding Categorical Columns\nSince there are no categorical columns other than target column, no encoding is needed."}}