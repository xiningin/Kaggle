{"cell_type":{"65f97431":"code","d4033f4a":"code","5e8f69f0":"code","30be45b4":"code","48123f86":"code","a31df789":"code","ac3c4d90":"code","8dff8651":"code","2a1e02ea":"code","7ef70174":"code","84774814":"code","9fed344d":"markdown","92059426":"markdown","5da6be5f":"markdown","171d9012":"markdown","08df50d1":"markdown"},"source":{"65f97431":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n#Step1: Necessery imports\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport scipy as scipy\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n#Step2: Loading the data \n#Change the csv file for another brand\n#Added Data types for memory optimization and faster loading\ndata = pd.read_csv('\/kaggle\/input\/ibm-hr-analytics-attrition-dataset\/WA_Fn-UseC_-HR-Employee-Attrition.csv', error_bad_lines=False)\ndata.shape","d4033f4a":"data.info()","5e8f69f0":"std = np.std(data)\nprint(std)\n\n\n","30be45b4":"cv = np.std(data) \/ np.mean(data)\nprint(cv)","48123f86":"var_full = np.var(data)\nprint(var_full)","a31df789":"#Step3:Describing the data\ndata.describe()","ac3c4d90":"#Step3:Describing the data - finding the mode [most frequent]\ndata.mode()","8dff8651":"import pandas_profiling\nreport = pandas_profiling.ProfileReport(data)\nfrom IPython.display import display\ndisplay(report)","2a1e02ea":"#Finding correlations\n\ncorr = data.corr()\n\nmask = np.triu(np.ones_like(corr, dtype=np.bool))\ncorr = corr.mask(mask)\nfig = ff.create_annotated_heatmap(\n    z=corr.to_numpy().round(2),\n    x=list(corr.index.values),\n    y=list(corr.columns.values),       \n    xgap=3, ygap=3,\n    zmin=-1, zmax=1,\ncolorscale='icefire',\n    colorbar_thickness=30,\n    colorbar_ticklen=3,\n)\nfig.update_layout(title_text='Correlation Matrix (impact relationship with numbers)',\n                  title_x=0.5,\n                  titlefont={'size': 20},\n                  width=800, height=800,\n                  xaxis_showgrid=False,\n                  xaxis={'side': 'bottom'},\n                  yaxis_showgrid=False,\n                  yaxis_autorange='reversed',                   \n                  paper_bgcolor=None,\n                  template=\"simple_white\"\n                  )\nfig.show()","7ef70174":"sns.pairplot(data,palette='bright')\n%time","84774814":"sns.set(style=\"ticks\", color_codes=True)\ng = sns.pairplot(data, kind=\"reg\", plot_kws={'line_kws':{'color':'red'}})\nplt.show()\n%time","9fed344d":"***Variance***","92059426":"***Coefficient of Variation***","5da6be5f":"# Describing the data ","171d9012":"***Standard deviation***","08df50d1":"# Pairplots and Linear Predictions"}}