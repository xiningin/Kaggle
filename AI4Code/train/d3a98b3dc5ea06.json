{"cell_type":{"d34c2ab9":"code","a4b9ec29":"code","0aef0cc0":"code","234c0101":"code","279b9643":"code","53b2a410":"code","3d86e8e0":"code","11a05a63":"code","1facafc2":"code","274a30f9":"code","5ea7d0ad":"code","2a499e8d":"code","210e57bf":"code","54799914":"code","5c06c2e7":"code","8657ce26":"code","c9d81b4c":"code","ae031eaf":"code","8f7c2c18":"code","f570b87a":"code","2d1a273c":"code","8b7ab744":"code","23d20deb":"code","29a30b39":"code","89694db5":"code","42b94ecf":"code","2612b930":"code","1570e657":"markdown","37fde79f":"markdown"},"source":{"d34c2ab9":"# Basic Libraries\nimport numpy as np\nimport pandas as pd\n\n# Visualizations Libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport plotly.express as px\nfrom plotly.offline import iplot\nfrom plotly.subplots import make_subplots\nimport plotly.offline as py\nimport plotly.figure_factory as ff\n\n\n# Data Pre-processing Libraries\nfrom sklearn.preprocessing import StandardScaler,MinMaxScaler,OneHotEncoder,PowerTransformer\nfrom sklearn.model_selection import train_test_split,cross_validate, cross_val_score,GridSearchCV\nfrom sklearn.model_selection import KFold, cross_val_predict\nfrom sklearn.pipeline import Pipeline,make_pipeline\n\nfrom sklearn.compose import make_column_transformer,ColumnTransformer\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.dummy import DummyClassifier\nfrom imblearn.over_sampling import SMOTE\n\n# Modelling Libraries\nfrom sklearn.linear_model import LogisticRegression,LogisticRegressionCV\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.svm import SVC,LinearSVC,NuSVC,SVR\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier,AdaBoostClassifier,GradientBoostingClassifier\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\nfrom lightgbm import LGBMClassifier\n\n\n# Evaluation & CV Libraries\nfrom sklearn.metrics import precision_score,accuracy_score,mean_absolute_error,mean_squared_error,r2_score,confusion_matrix\nfrom sklearn.metrics import classification_report, plot_confusion_matrix,plot_roc_curve,roc_auc_score,f1_score,recall_score\n\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nplt.rcParams[\"figure.figsize\"] = (10,6)\npd.set_option(\"max_columns\",100)\npd.set_option(\"max_rows\",900)\npd.set_option(\"max_colwidth\",200)","a4b9ec29":"dataset_test = pd.read_csv(\"..\/input\/mobile-price-classification\/test.csv\")\ndataset_train = pd.read_csv(\"..\/input\/mobile-price-classification\/train.csv\")","0aef0cc0":"dataset_test.drop(columns=\"id\",inplace=True)","234c0101":"dataset_train.info()","279b9643":"dataset_train.duplicated().sum()","53b2a410":"dataset_train.describe()","3d86e8e0":"dataset_train.skew()","11a05a63":"px.scatter(dataset_train,x=\"ram\",color=\"price_range\",facet_col=\"three_g\")","1facafc2":"px.box(dataset_train,color=\"price_range\")","274a30f9":"px.box(dataset_train,x =\"ram\" ,color=\"price_range\")","5ea7d0ad":"px.box(dataset_train,x =\"battery_power\" ,color=\"price_range\")","2a499e8d":"matrix =np.triu(dataset_train.corr())\nfig,ax =plt.subplots(figsize=(12,6),dpi=150)\nsns.heatmap(dataset_train.corr(),vmax=1,vmin=-1,center=0,annot=True,fmt=\".2f\",mask=matrix,ax=ax,cmap=\"rainbow\");","210e57bf":"dataset_train.price_range.value_counts()","54799914":"X = dataset_train.drop(\"price_range\",axis=1)\ny = dataset_train.price_range","5c06c2e7":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)","8657ce26":"scaler = MinMaxScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","c9d81b4c":"cat_model =CatBoostClassifier(random_state=42,verbose=False).fit(X_train,y_train)\ny_pred = cat_model.predict(X_test)","ae031eaf":"print(\"-------Test Scores-------\")\nprint()\ny_pred = cat_model.predict(X_test)\nprint(confusion_matrix(y_test, y_pred))\nprint()\nprint(classification_report(y_test,y_pred))\n\nprint(\"-------Train Scores-------\")\nprint()\ny_pred_train = cat_model.predict(X_train)\nprint(confusion_matrix(y_train, y_pred_train))\nprint()\nprint(classification_report(y_train, y_pred_train))","8f7c2c18":"params = {\"iterations\":[100,300],\n        \"max_depth\":[6,8,10],\n        \"learning_rate\":[0.15,0.3,0.5],\n        \"colsample_bylevel\":[0.5,0.8,1]}\n\ncat_model_grid = GridSearchCV(cat_model,param_grid=params,scoring=\"accuracy\",cv=10,verbose=False,n_jobs=-1)","f570b87a":"cat_model_grid.fit(X_train,y_train)\ny_pred =cat_model_grid.predict(X_test)\nprint(confusion_matrix(y_test,y_pred))\nprint(classification_report(y_test,y_pred))","2d1a273c":"cat_model_grid = CatBoostClassifier(random_state=42,colsample_bylevel= 1,iterations = 300,\n                                    learning_rate= 0.15, max_depth = 6,verbose=False).fit(X_train,y_train)","8b7ab744":"print(\"-------Test Scores-------\")\ny_pred = cat_model_grid.predict(X_test)\nprint(confusion_matrix(y_test, y_pred))\nprint(classification_report(y_test,y_pred))\n\nprint(\"-------Train Scores-------\")\ny_pred_train = cat_model_grid.predict(X_train)\nprint(confusion_matrix(y_train, y_pred_train))\nprint(classification_report(y_train, y_pred_train))","23d20deb":"feats = pd.DataFrame(index=X.columns,data=cat_model_grid.feature_importances_,columns=['Importance'])\nimp_feats = feats.sort_values(\"Importance\")\nplt.figure(figsize=(12,6))\nsns.barplot(data=imp_feats.sort_values('Importance'), x=imp_feats.sort_values('Importance').index, y='Importance')\n\nplt.xticks(rotation=90);","29a30b39":"df = dataset_train.loc[:,[\"ram\",\"battery_power\",\"px_height\",\"px_width\",\"price_range\"]]\ndf","89694db5":"X = df.drop(\"price_range\",axis=1)\ny = df.price_range\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)\nscaler = MinMaxScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","42b94ecf":"cat_model_feature = CatBoostClassifier(random_state=42,colsample_bylevel= 1,iterations = 300,\n                                    learning_rate= 0.15, max_depth = 6,verbose=False).fit(X_train,y_train)\ny_pred = cat_model_feature.predict(X_test)\ny_pred_proba = cat_model_feature.predict_proba(X_test)","2612b930":"print(\"-------Test Scores-------\")\ny_pred = cat_model_feature.predict(X_test)\nprint()\nprint(confusion_matrix(y_test, y_pred))\nprint()\nprint(classification_report(y_test,y_pred))\n\nprint(\"-------Train Scores-------\")\ny_pred_train = cat_model_feature.predict(X_train)\nprint()\nprint(confusion_matrix(y_train, y_pred_train))\nprint()\nprint(classification_report(y_train, y_pred_train))\n\nprint(f'Roc Auc Score:{roc_auc_score(y_test,y_pred_proba,multi_class=\"ovr\",average=\"macro\")}')","1570e657":"# Feature Selection ","37fde79f":"# GridsearchCV"}}