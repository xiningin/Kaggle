{"cell_type":{"275268ab":"code","7ee879b5":"code","54e9fe7a":"code","11159cfc":"code","1c320163":"code","812783d3":"code","7083adad":"code","7e2458e4":"code","e483115d":"code","c506d166":"code","860238c7":"markdown","e7fabe98":"markdown","0db23e0c":"markdown","35f2ca13":"markdown","56b5b2e6":"markdown","03f22676":"markdown","bedec5a7":"markdown","b5a17721":"markdown","62eaea0e":"markdown","a972cc80":"markdown","f11a864d":"markdown"},"source":{"275268ab":"!wget https:\/\/covid.ourworldindata.org\/data\/ecdc\/total_deaths.csv","7ee879b5":"import pandas as pd\n\ndf = pd.read_csv('total_deaths.csv', parse_dates=True, index_col=0)\ndf = df.fillna(0)\n\ncountries = ['World', 'China', 'Italy', 'United States']\ndf[countries].tail()\n","54e9fe7a":"import matplotlib.pyplot as plt\nfrom pandas.plotting import register_matplotlib_converters\nregister_matplotlib_converters()\n\nfig, axs = plt.subplots(2,2, figsize=(40,40))\n    \nfor i in range(2):\n    for j in range(2):\n        country = countries[i*2+j]\n        axs[i, j].plot(df.index, df[country])\n        axs[i, j].set_title(country, fontsize=90)","11159cfc":"df_each_day = df.diff()\nfig, axs = plt.subplots(2,2, figsize=(40,40))\n    \nfor i in range(2):\n    for j in range(2):\n        country = countries[i*2+j]\n        axs[i, j].plot(df_each_day.index, df_each_day[country])\n        axs[i, j].set_title(country, fontsize=90)","1c320163":"plt.plot(df_each_day.index, df_each_day.China)","812783d3":"from datetime import datetime\n\ndate_feb_13 = datetime.strptime('2020-02-13','%Y-%m-%d')\ndate_feb_14 = datetime.strptime('2020-02-14','%Y-%m-%d')\n\ndf_each_day_days = df_each_day.reset_index()\ndf_each_day_days = df_each_day_days.fillna(0)\ndf_each_day_days = df_each_day_days[df_each_day_days.date!=date_feb_13]\ndf_each_day_days = df_each_day_days[df_each_day_days.date!=date_feb_14]\n\nplt.plot(df_each_day_days.index, df_each_day_days['China'])","7083adad":"import pylab as plb\nimport matplotlib.pyplot as plt\nfrom scipy.optimize import curve_fit\nfrom scipy import asarray as ar,exp\nimport numpy as np\n\nx = df_each_day_days.index\ny = df_each_day_days['China']\n\nmean = sum(x * y) \/ sum(y)\nsigma = np.sqrt(sum(y * (x - mean)**2) \/ sum(y))\n\ndef Gauss(x, a, x0, sigma):\n    return a * np.exp(-(x - x0)**2 \/ (2 * sigma**2))\n\npopt,pcov = curve_fit(Gauss, x, y, p0=[max(y), mean, sigma])\nplt.plot(x, y, 'b+:', label='data')\nplt.plot(x, Gauss(x, *popt), 'r-', label='fit')\nplt.legend()\nplt.title(\"Fig. 3 - Fit for China's COVID-19 deaths\")\nplt.xlabel('Days')\nplt.ylabel('Deaths')\nplt.plot(x[int(popt[1])], Gauss(int(popt[1]), *popt), 'ro')\nplt.plot(x[11], Gauss(x, *popt)[11], 'bo')\nplt.show()\nprint(df_each_day_days['date'][int(popt[1])])\nprint(popt)\nprint(pcov)\n","7e2458e4":"countries = ['China', 'United States', 'Italy',\n             'Spain', 'France', 'Iran',\n             'South Korea', 'Japan', 'Germany']\nn = len(countries)\ndf_each_day_days = df_each_day.reset_index()\ndf_each_day_days = df_each_day_days.fillna(0)\n\nfig, axs = plt.subplots(3, 3, figsize=(90, 90))\n\nfrom datetime import timedelta\n\ndef get_date(n):\n    return datetime.strftime(datetime.strptime('2019-12-31','%Y-%m-%d') + timedelta(days=n), '%Y-%m-%d')\n\nresult = []\nfor i in range(3):\n    for j in range(3):\n        if i * 3 + j < n:\n            country = countries[i * 3 + j]\n            x = df_each_day_days.index\n            y = df_each_day_days[country]\n            last = y.tail(1).values[0]\n            axs[i,j].plot(x, y, 'b+:', label='data')\n            axs[i,j].set_title(country, fontsize=90)\n            try:\n                mean = sum(x * y) \/ sum(y)\n                sigma = np.sqrt(sum(y * (x - mean)**2) \/ sum(y))\n\n                popt,pcov = curve_fit(Gauss, x, y, p0=[max(y), mean, sigma])\n                axs[i,j].plot(x, Gauss(x, *popt), 'r-', label='fit')\n                axs[i,j].text(0,0,'Peak Deaths: %s\\nPeak Date: %s' %(popt[0], get_date(int(popt[1]))), fontsize=40)\n                axs[i,j].tick_params(axis='x', labelsize=20)\n                axs[i,j].tick_params(axis='y', labelsize=20)\n                result.append([country, last, popt[0], popt[2], get_date(int(popt[1]))])\n            except:\n                pass","e483115d":"df_table = pd.DataFrame(result, columns=['country','per day deaths(latest)', 'per day deaths at Gaussian peak', 'Gaussian standard deviation', 'Gaussian peak date' ])\ndf_table","c506d166":"try:\n    country = input()\nexcept:\n    country = \"United States\"\ndf_each_day_days = df_each_day.reset_index()\ndf_each_day_days = df_each_day_days.fillna(0)\n\nresult = []\nx = df_each_day_days.index\ny = df_each_day_days[country]\nlast = y.tail(1).values[0]\nplt.plot(x, y, 'b+:', label='data')\nplt.title(country, fontsize=90)\ntry:\n    mean = sum(x * y) \/ sum(y)\n    sigma = np.sqrt(sum(y * (x - mean)**2) \/ sum(y))\n\n    popt,pcov = curve_fit(Gauss, x, y, p0=[max(y), mean, sigma])\n    plt.plot(x, Gauss(x, *popt), 'r-', label='fit')\n    result.append([country, last, popt[0], popt[2], get_date(int(popt[1]))])\nexcept:\n    pass\ndf_country = pd.DataFrame(result, columns=['country','per day deaths(latest)', 'per day deaths at Gaussian peak', 'Gaussian standard deviation', 'Gaussian peak date' ])\ndf_country\n            ","860238c7":"### While United States and Italy are on the growth path, China seems to have achieved a descent making the curve look like normal distribution. That's curious, let's look at it again.","e7fabe98":"### It shows first case on January 11th and peak on February 16th.  \n1. Max Death: 121\n2. Peak Date: February  16\n3. Standard Deviation: 10 days","0db23e0c":"## Analysis ##\n\n### Let's look at World, China, Italy and United States. ###","35f2ca13":"# It is not about where we are heading. It is about how we are heading. Find your country here:","56b5b2e6":"### Here are some charts of total deaths at different dates:","03f22676":"## How do other countries look with their gaussian fit?","bedec5a7":"\n### Here is news about COVID-19 in China on February 13th. It seems like a reporting discrepancy. Removing that point and the next.\n\nhttps:\/\/www.scmp.com\/news\/china\/society\/article\/3050354\/coronavirus-hubei-province-reports-sharp-spike-new-confirmed","b5a17721":"## Data ##\n\nhttps:\/\/ourworldindata.org\/coronavirus-source-data","62eaea0e":"### Now a gaussian fit:","a972cc80":"### Now, let's look at deaths per day:","f11a864d":"## Summary: ##\n\nWe look at the data of COVID-19 deaths on different countries at various times. Then, we fit a normal distribution on the curves of China and other countries, who might still be on the growth curve. The fitting of the curves might have following problems:\n1. No diagnosis\n2. Misdiagnosis\n3. Badly reported data \n4. Not enough data to fit curve accurately\n\nThe resultant peaks and standard deviations should be taken with a grain of salt. However, it provides some metric, however inaccurate, to the growth and decline of deaths per day. \n\n![](http:\/\/)"}}