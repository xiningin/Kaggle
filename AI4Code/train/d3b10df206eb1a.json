{"cell_type":{"6a237d50":"code","28ebd958":"code","c7d051e7":"code","29952fd5":"code","29275b75":"code","33aaf7fc":"code","1b35e312":"code","5e587cda":"code","4ee57bdf":"code","651f1ec6":"code","16966ef5":"code","9f667ec9":"code","7a4773c1":"code","60f156bf":"code","46e8ab40":"code","75610388":"code","7e5d89b6":"code","fed5c14d":"code","2ea51ee4":"code","d1529ad0":"code","665fc4a9":"code","d7bf62d7":"code","cc745f59":"code","2bd6a70c":"code","71f962c6":"code","1a1c3d67":"code","ac864759":"markdown","ee22c590":"markdown","5e41840d":"markdown","5281cced":"markdown","fa016c65":"markdown","d9f035e5":"markdown","4fd864ed":"markdown","a4730c1a":"markdown","fd964d6b":"markdown","10358e75":"markdown","766e440e":"markdown"},"source":{"6a237d50":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","28ebd958":"import matplotlib.pyplot as plt\nimport seaborn as sns","c7d051e7":"df = pd.read_csv(\"\/kaggle\/input\/housesalesprediction\/kc_house_data.csv\")\n\ndf.head()","29952fd5":"df.isnull().sum()","29275b75":"corr = df.corr()\n\ncorr['price'].sort_values(ascending=False)","33aaf7fc":"df.drop(['id','zipcode','date'],axis=1,inplace=True)","1b35e312":"df.head()","5e587cda":"plt.figure(figsize=(19,14))\n\nsns.heatmap(df.corr(),annot=True)","4ee57bdf":"plt.figure(figsize=(10,5))\nplt.subplot(2,1,1)\nsns.barplot(data=df,x='bedrooms',y='price')\nplt.figure(figsize=(10,5))\nplt.subplot(2,1,2)\nsns.barplot(data=df,x='grade',y='price',palette='rocket')","651f1ec6":"plt.figure(figsize=(10,5))\nplt.subplot(2,1,1)\nsns.barplot(data=df,x='floors',y='price')\nplt.figure(figsize=(10,5))\nplt.subplot(2,1,2)\nsns.barplot(data=df,x='condition',y='price',palette='rainbow')","16966ef5":"plt.figure(figsize=(10,5))\nplt.subplot(2,1,1)\nsns.barplot(data=df,x='waterfront',y='price')\nplt.figure(figsize=(10,5))\nplt.subplot(2,1,2)\nsns.barplot(data=df,x='view',y='price',palette='vlag')","9f667ec9":"sns.countplot(data=df,x='waterfront')","7a4773c1":"plt.figure(figsize=(10,5))\nplt.subplot(2,1,1)\nsns.barplot(data=df,x='sqft_living',y='price')\nplt.figure(figsize=(10,5))\nplt.subplot(2,1,2)\nsns.barplot(data=df,x='sqft_above',y='price')","60f156bf":"\nplt.figure(figsize=(10,5))\nsns.distplot(df['price'],kde=False,color='red')","46e8ab40":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import Lasso\nfrom sklearn.preprocessing import StandardScaler\nfrom xgboost import XGBRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import r2_score\n","75610388":"df.columns","7e5d89b6":"X = df[['bedrooms', 'bathrooms', 'sqft_living', 'sqft_lot', 'floors',\n       'waterfront', 'view', 'condition', 'grade', 'sqft_above',\n       'sqft_basement', 'yr_built', 'yr_renovated', 'lat', 'long',\n       'sqft_living15', 'sqft_lot15']]\ny = df['price']","fed5c14d":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=2)","2ea51ee4":"scaler = StandardScaler()\n\nX_train = scaler.fit_transform(X_train)\n\nX_test = scaler.fit_transform(X_test)","d1529ad0":"model = []\n\nscore = []","665fc4a9":"lf = Lasso()\nlf.fit(X_train,y_train)\nlf_pred = lf.predict(X_test)\nprint(\"Score: \",r2_score(lf_pred,y_test))\nmodel.append(\"Lasso Regression\")\nscore.append(r2_score(lf_pred,y_test))","d7bf62d7":"rf = RandomForestRegressor(n_estimators=100, random_state = 0)\nrf.fit(X_train,y_train)\nrf_predict = rf.predict(X_test)\nprint(\"Score: \",r2_score(rf_predict,y_test))\nmodel.append(\"Random Forest Regression\")\nscore.append(r2_score(rf_predict,y_test))","cc745f59":"xg = XGBRegressor()\nxg.fit(X_train,y_train)\nxg_predict = xg.predict(X_test)\nprint(\"Score: \",r2_score(xg_predict,y_test))\nmodel.append(\"Xgboost Regression\")\nscore.append(r2_score(xg_predict,y_test))","2bd6a70c":"plt.subplots(figsize=(10, 15))\nsns.barplot(y=score,x=model,palette = sns.cubehelix_palette(len(score)))\nplt.xlabel(\"Score\")\nplt.ylabel(\"Regression\")\nplt.title('Regression Score')\nplt.show()","71f962c6":"plt.figure(figsize=(10,5))\nplt.subplot(1,2,1)\nsns.distplot(y_test-xg_predict)\nplt.title(\"Xgboost\")\n#plt.figure(figsize=(5,5))\nplt.subplot(1,2,2)\nsns.distplot(y_test-lf_pred,color='red')\nplt.title(\"Lasso\")","1a1c3d67":"plt.figure(figsize=(10,10))\nplt.subplot(2,2,1)\nsns.scatterplot(y_test,xg_predict)\nplt.title(\"Xgboost\")\nplt.subplot(2,2,2)\nsns.scatterplot(y_test,lf_pred)\nplt.title(\"Lasso\")","ac864759":"**No Null Values are present in the given dataset....Good!**","ee22c590":"**Scaling down the data to -1to1 we can also use minmax scaler**","5e41840d":"**From the above graph it is clear that Bedrooms and Grade affects the price.\nEspecially the grade as there is an exponential increase **","5281cced":"**Importing Data Visualizing Libraries**","fa016c65":"**Creating empty list for our model and their respective scores which we will visualize later**","d9f035e5":"**From above we can say that there are less number of waterfront houses**","4fd864ed":"**The Houses having Waterfront has higher price **","a4730c1a":"**Checking The Correlation of Price with every other column**","fd964d6b":"**As You can see from the above graph that Lasso has very large Standard deviation i.e. The Difference between Predicted and actual values is very large**","10358e75":"**These Columns DOes not have much impact on the prices of the houses...hence,Dropping them**","766e440e":"**Visualizing The Correlation OF all the columns**"}}