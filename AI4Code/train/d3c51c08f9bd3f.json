{"cell_type":{"e8aeac79":"code","401a1be1":"code","627b785f":"code","a39a5f8b":"code","1f05cf8f":"code","0343889e":"code","4a651149":"code","dcf275d6":"code","fb0225bd":"code","7181f551":"code","c2401e32":"code","aacba23c":"code","eae936d7":"code","4b7dceed":"code","8becd0e2":"code","4fe8ec35":"code","a3a24c8b":"code","efd01045":"code","fad071ae":"code","d3884e4c":"code","ec7dc4e2":"code","590a9836":"code","f427116f":"code","9c15a32f":"code","f5897022":"code","9732d7e9":"code","60abee28":"code","14bff44d":"code","ff70e0ac":"code","511b83fd":"markdown","177483ab":"markdown","f32aac15":"markdown","c2b607e6":"markdown","afd3a3bf":"markdown","15f7cecc":"markdown","a6758902":"markdown","58cf3f5d":"markdown","a0e6fdb8":"markdown"},"source":{"e8aeac79":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport os\n\nfrom sklearn.model_selection import train_test_split\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","401a1be1":"heart = pd.read_csv(\"..\/input\/heart-failure\/heart_failure.csv\")\nheart.head()","627b785f":"heart.info()","a39a5f8b":"heart.describe()","1f05cf8f":"heart.isnull()","0343889e":"heart.isnull().sum()","4a651149":"heart=heart.dropna(axis=0)\n\nheart.drop_duplicates(inplace=True)\n\nsns.heatmap(heart.isnull(),cbar=False,yticklabels=False)","dcf275d6":"heart.columns","fb0225bd":"plt.figure(figsize=(50,50))\nsns.pairplot(data=heart,x_vars=['ejection_fraction','platelets','age','anaemia','creatinine_phosphokinase','diabetes'],y_vars=\"DEATH_EVENT\")","7181f551":"sns.pairplot(data=heart,x_vars=['high_blood_pressure','platelets','serum_creatinine','serum_sodium','sex','smoking','time'],y_vars=\"DEATH_EVENT\")","c2401e32":"c={\"Aggregate_of_all\":(heart[\"age\"]+heart[\"anaemia\"]+heart[\"creatinine_phosphokinase\"]+heart[\"diabetes\"]+heart[\"ejection_fraction\"]+heart[\"high_blood_pressure\"]+\n                heart[\"platelets\"]+heart[\"serum_creatinine\"]+heart[\"serum_sodium\"]+heart[\"sex\"]+heart[\"smoking\"]+heart[\"time\"]),\"Diagnosis (Death_Event)\":heart[\"DEATH_EVENT\"]}\ndata_1 = pd.DataFrame(data=c)\ndata_1.head()","aacba23c":"data_1[\"Aggregate_of_all\"]=(data_1[\"Aggregate_of_all\"]-data_1[\"Aggregate_of_all\"].min())\/(data_1[\"Aggregate_of_all\"].max()-data_1[\"Aggregate_of_all\"].min())\n\nsns.scatterplot(data = data_1, x=\"Aggregate_of_all\",y=\"Diagnosis (Death_Event)\",legend='auto')","eae936d7":"#Plotting Histogram with subplots\nplt.figure(figsize=(100,100))\nsns.set(style=\"darkgrid\")\nplotnumber=1\nfor column in heart:\n    if plotnumber<=13 :\n        ax=plt.subplot(5,6,plotnumber)\n        sns.histplot(heart[column],kde=True)\n        plt.xlabel(column)\n    plotnumber+=1\nplt.show()","4b7dceed":"#Plotting Boxplots with subplots\nplt.figure(figsize=(100,100))\nplotnumber=1\nfor column in heart:\n    if plotnumber<=30:\n        ax=plt.subplot(5,6,plotnumber)\n        sns.boxplot(x=heart[column])\n        plt.xlabel(column)\n    plotnumber+=1\nplt.title(\"Distribution\")\nplt.show()","8becd0e2":"#Plotting the Heatmap for the given data\nplt.figure(figsize=(20,20))\nsns.heatmap(heart.corr(),annot=True)","4fe8ec35":"x = heart[['time','ejection_fraction','serum_creatinine']]\ny = heart[\"DEATH_EVENT\"]\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=2)\n\nx_train.shape","a3a24c8b":"y_train.shape","efd01045":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report","fad071ae":"log_reg=LogisticRegression()\n\nlog_reg.fit(x_train,y_train)\nlog_reg_prediction=log_reg.predict(x_test)\n\nConfMatr_1 = confusion_matrix(y_test, log_reg_prediction)\nsns.heatmap(ConfMatr_1,annot=True)","d3884e4c":"print(\"{}%\".format(accuracy_score(y_test, log_reg_prediction)*100))","ec7dc4e2":"print(classification_report(y_test,log_reg_prediction))","590a9836":"from sklearn.neighbors import KNeighborsClassifier","f427116f":"knn = KNeighborsClassifier(n_neighbors=15)\nknn.fit(x_train,y_train)","9c15a32f":"knn_pred = knn.predict(x_test)","f5897022":"print(\"{}%\".format(accuracy_score(y_test,knn_pred)*100))","9732d7e9":"CM_k=confusion_matrix(y_test,knn_pred)\nsns.heatmap(CM_k,annot=True)","60abee28":"print(classification_report(y_test,knn_pred))","14bff44d":"list_1 = list([\"KNN\",\"LogisticRegression\"])\nlist_2 = list([93.3,90])\nsns.barplot(x=list_2,y=list_1,palette=\"Blues_d\")","ff70e0ac":"a={\"KNN\":[\"93.3\"],\"LogisticRegression\":[\"90\"]}\nscore=pd.DataFrame(data=a)\n\nscore","511b83fd":"# K-Nearest Neighbors","177483ab":"# Data Training","f32aac15":"# Importing Dataset and Understanding the Data","c2b607e6":"# Results","afd3a3bf":"# Data Cleaning","15f7cecc":"# Logistic Regression","a6758902":"# Distribution of data","58cf3f5d":"# Data Normalizing","a0e6fdb8":"## Plotting the fields with Death event to observe it's relationship"}}