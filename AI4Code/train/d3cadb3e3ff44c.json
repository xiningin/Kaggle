{"cell_type":{"ca6ddd73":"code","59ecaa54":"code","c448fa16":"code","327ae9b1":"code","54f7e615":"code","605e8e99":"code","4f729ac6":"code","4cf93535":"code","17022b32":"code","9b3862d9":"code","958263c9":"code","7cab6ed8":"code","7bc1613b":"code","19eb7f3d":"code","2b626e30":"code","7915fef5":"code","30203b5f":"code","829dbec1":"code","acbd8eb6":"code","70cbdc67":"code","90a71a09":"code","4a8eae74":"code","a8659e94":"code","4d6b8a98":"code","e8c4b3ca":"code","491950c2":"code","12599f64":"code","d0ede2c3":"code","633457d4":"code","0b209ef0":"code","4fd96d70":"code","a7005d57":"code","99ed3439":"code","5c58082b":"code","e039261f":"code","6b76a2bc":"code","afed42a5":"code","22323b77":"code","6fc8d807":"code","fb761a9b":"code","b1890ca5":"code","8783fc13":"code","eeb28601":"code","263721ac":"code","89443e50":"code","a868bfea":"code","1142f447":"markdown","de1d3029":"markdown","6b4dfbc3":"markdown","26ca2982":"markdown","9f729187":"markdown","2d1522a8":"markdown","73a3979f":"markdown","b3078303":"markdown","47e6aa2a":"markdown","a8fcad4f":"markdown","fc4049a7":"markdown","d55f3ab2":"markdown","c3959c67":"markdown","4a70b8a5":"markdown","5984e2d3":"markdown","0a8da9bd":"markdown","747c0f46":"markdown"},"source":{"ca6ddd73":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","59ecaa54":"#reading the dataset for task 1\nb=pd.read_csv('\/kaggle\/input\/epitope-prediction\/input_bcell.csv')\nb.head()","c448fa16":"b.columns","327ae9b1":"b.isnull().sum()","54f7e615":"b['target'].value_counts()\/len(b)*100.0","605e8e99":"b.info()","4f729ac6":"#for statiscal analysis of continuous variables\nb.describe()","4cf93535":"#for statistical analysis of object variables\nb.describe(include='all')","17022b32":"#to calculate peptide length\nb['peptide_length']=b['end_position'] - b['start_position'] + 1","9b3862d9":"b.head()","958263c9":"#function to convert characters into their lengths\ndef length(col):\n    for i in col:\n        return len(i)","7cab6ed8":"#converting all the three object type features\nb['parent_protein_id']=length(b['parent_protein_id'])","7bc1613b":"b['protein_seq']=length(b['protein_seq'])","19eb7f3d":"b['peptide_seq']=length(b['peptide_seq'])","2b626e30":"x=b.drop(columns='target')\ny=b['target']","7915fef5":"#feature importance\nfrom sklearn.ensemble import ExtraTreesClassifier\nr = ExtraTreesClassifier(random_state=0)\nr.fit(x,y)\nfeature_importance = r.feature_importances_\nfeature_importance_normalized = np.std([tree.feature_importances_ for tree in \n                                        r.estimators_], \n                                        axis = 0) ","30203b5f":"#importing libraries for visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px#dropping unnecessary columns\nb.drop(columns=['parent_protein_id','protein_seq','peptide_seq'],inplace=True)\nplt.figure(figsize=(10,10))\nsns.barplot(feature_importance_normalized,x.columns) \nplt.xlabel('Feature Labels') \nplt.ylabel('Feature Importances') \nplt.title('Comparison of different Feature Importances') \nplt.show() ","829dbec1":"b.head()","acbd8eb6":"b['peptide_length'].value_counts()\/len(b)*100","70cbdc67":"features=[\"chou_fasman\",\"emini\",\"kolaskar_tongaonkar\",\"parker\",\"peptide_length\",\"isoelectric_point\",\"aromaticity\",\n            \"hydrophobicity\",\"stability\"]\nplt.figure(figsize=(20,20))\nplt.subplots_adjust(hspace=2.0)\nj=1\nfor i in features:\n    plt.subplot(4,5,j)\n    sns.distplot(b[i])\n    j+=1","90a71a09":"sns.set_style('whitegrid')\nplt.figure(figsize=(30,30))\nsns.catplot(y='isoelectric_point',x='peptide_length',data=b,ci=None,col='target',sharey=False)","4a8eae74":"plt.figure(figsize=(30,30))\nsns.catplot(y='aromaticity',x='peptide_length',data=b,ci=None,col='target',sharey=False)","a8659e94":"plt.figure(figsize=(30,30))\nsns.catplot(y='hydrophobicity',x='peptide_length',data=b,ci=None,col='target',sharey=False)","4d6b8a98":"plt.figure(figsize=(30,30))\nsns.catplot(y='stability',x='peptide_length',data=b,ci=None,col='target',sharey=False)","e8c4b3ca":"x.head()","491950c2":"X=b.drop(columns='target')\nY=b['target']","12599f64":"#train and test\nfrom sklearn.model_selection import train_test_split, RandomizedSearchCV\nX_train,X_valid,Y_train,Y_valid=train_test_split(X,Y,stratify=Y,test_size=0.2,random_state=0)","d0ede2c3":"from sklearn.preprocessing import MinMaxScaler\nd=MinMaxScaler()\nd.fit_transform(X_train,Y_train)","633457d4":"d.transform(X_valid)","0b209ef0":"#fitting the lightbgm model \nfrom lightgbm import LGBMClassifier\nfrom sklearn.metrics import roc_auc_score","4fd96d70":"l=LGBMClassifier(random_state=10)\nl.fit(X_train,Y_train)","a7005d57":"lg_train=l.predict(X_train)","99ed3439":"roc_auc_score(lg_train,Y_train)","5c58082b":"lg_pred=l.predict(X_valid)\nlg_pred","e039261f":"roc_auc_score(lg_pred,Y_valid)","6b76a2bc":"#predictions of validation dataset\npredictions=pd.DataFrame(lg_pred,columns=['validation_pred'])\npredictions.head()","afed42a5":"#predicting on covid dataset\nc=pd.read_csv('\/kaggle\/input\/epitope-prediction\/input_covid.csv')\nc.head()","22323b77":"c.info()","6fc8d807":"c.drop(columns=['parent_protein_id','protein_seq','peptide_seq'],inplace=True)","fb761a9b":"c.head()","b1890ca5":"c.isnull().sum()","8783fc13":"c['length']=c['end_position']-c['start_position'] + 1","eeb28601":"d.transform(c)","263721ac":"y_pred=l.predict(c)\ny_pred","89443e50":"y_pred=pd.DataFrame(y_pred,columns=['test_pred'])\ny_pred.head()","a868bfea":"y_pred.value_counts()\/len(c)*100","1142f447":"**INSIGHTS-**\n* 'parent_protein_id','protein_seq',and 'peptide_seq' are of object type as they contain characters not numbers.\n*  Rest of the features are of float type.\n*  No categorical feature is present in the dataset.\n*  Target feature is binary i.e. containing only 0 and 1.\n","de1d3029":"**If you like this notebook do upvote it.**\n\nDo provide your valuable feedback.\n\nDo checkout my other notebooks at https:\/\/www.kaggle.com\/tmchls","6b4dfbc3":"The test predicitons shows us that the antibody valence will be negative around 55.6% and positive around 44.3% which means that majority of antibodies will resist binding of virus like SARS-Cov which will reduce number of cases.","26ca2982":"**INSIGHTS-**\n* By looking at the huge difference between 75% quartile value and maximum value of 'start_position','emini' and 'end_position' features there can be a possibility of outliers in these features.\n* Minimum values in 'parker' and 'hydrophobicity' features are negative.\n* Negative mean,25th,50th and 75th quartiles in 'hydrophobicity' feature.","9f729187":"Most of the peptides are of length 15(32%),10(26%) and 8(15%) respectively.\n","2d1522a8":"72.8% target values i.e. Anitbody valence of this dataset is negative and 27.1% of values are positive.It means that most of the antibodies can resist binding of SARS-COV virus with themselves.","73a3979f":"The model was trained at training ROC score of 0.9022 whereas testing score is 0.8420,which means model has fitted pretty well and had made good predictions on validation set.","b3078303":"There are no missing values in the dataset.","47e6aa2a":"**INSIGHTS-**\n* 'parent_protein_id' contains 760 unique values with 560 frequency.\n* 'protein_seq' contains 757 unique values with same frequency as of 'parent_protein_id'.\n* 'peptide_seq' contains the most number of unique values.\n*  We can say that 'parent_protein_id' and 'protein_seq' contains mostly same number of characteristics. ","a8fcad4f":"**INSIGHTS-**\n* The number of peptides of length 8,10 and 15 have certainly strong values of isoelectric point at range above 7 at negative target.\n* In another figure,most of the values of peptide_length have greater range of values below 7 having low isoelectric point at positive target.","fc4049a7":"According to the ExtraTreesClassifier,protein features **'stability','hydorphobicity','aromaticity'** and **'isoelectric_point'** conveys most info about the target feature determining their importance in the dataset.","d55f3ab2":"Here most of the peptides showing strong hydrophobicity property are at positive target than negative target.","c3959c67":"**INSIGHTS-**\n* Most of the peptides show stability within range 20 to 60 at positive target.\n* Most of the peptides show stability within range 20 to 80 at negative target","4a70b8a5":"## MODEL BUILDING","5984e2d3":"## EXPLORATORY DATA ANALYSIS","0a8da9bd":"**INSIGHTS-**\n* Most of the peptides have range of aromaticity within range of 0.05 to 0.10 at negative target.\n* Most of the peptides have range of aromaticity within range of 0.04 to 0.12 at positive target.","747c0f46":"**INSIGHTS**-\n* 'Emini' feature shows right skewed distribution.\n* 'peptide_length','isoelectric_point','aromaticity','hydrophobicity','stability' are not perfectly normal and contains outliers.\n* 'chou_fasman','kolaskar_tongaonkar','parker' shows near-to-perfect normal distribution."}}