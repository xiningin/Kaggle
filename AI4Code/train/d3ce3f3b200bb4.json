{"cell_type":{"8909ae07":"code","67855c32":"code","51492acb":"code","19ce6aff":"code","f10efd64":"code","93b05370":"code","61ea3ed1":"code","7000c2b2":"code","00a7b668":"code","c1f4e703":"code","ef4e80ab":"code","8f2feb98":"code","3188a918":"code","37e9b1d0":"code","8421de63":"code","c3f9d5aa":"markdown","9fa8a552":"markdown","2297d6f2":"markdown","06b2e5a9":"markdown","00a64964":"markdown","2fd43e7e":"markdown","685a2d94":"markdown"},"source":{"8909ae07":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","67855c32":"iris_dataframe = pd.read_csv(\"\/kaggle\/input\/iris\/Iris.csv\")\niris_dataframe.head()","51492acb":"print(iris_dataframe.columns)\n","19ce6aff":"print(iris_dataframe.Species.unique())","f10efd64":"print(iris_dataframe.info())","93b05370":"print(iris_dataframe.describe())","61ea3ed1":"Iris_setosa = iris_dataframe[iris_dataframe.Species == \"Iris-setosa\"]\nIris_versicolor = iris_dataframe[iris_dataframe.Species == \"Iris-versicolor\"]\nIris_virginica = iris_dataframe[iris_dataframe.Species == \"Iris-virginica\"]\n\nprint(Iris_setosa.describe())","7000c2b2":"print(Iris_versicolor.describe())","00a7b668":"print(Iris_virginica.describe())","c1f4e703":"iris_dataframe_notId = iris_dataframe.drop([\"Id\"], axis = 1)","ef4e80ab":"plt.figure(1) # for plotting graphs in different pages.\nplt.plot(Iris_setosa[\"Id\"], Iris_setosa[\"PetalLengthCm\"], color = \"red\", label =\"Setosa\")\nplt.plot(Iris_versicolor[\"Id\"], Iris_versicolor[\"PetalLengthCm\"], color = \"green\", label =\"Versicolor\")\nplt.plot(Iris_virginica[\"Id\"], Iris_virginica[\"PetalLengthCm\"], color = \"blue\", label =\"Virginica\")\nplt.xlabel(\"Id\")\nplt.ylabel(\"PetalLengthCm\")\nplt.legend() # put label to the nice coordination on the graph.\nplt.show()","8f2feb98":"plt.figure(2)\nplt.scatter(Iris_setosa[\"Id\"], Iris_setosa[\"PetalLengthCm\"], color = \"red\", label =\"Setosa\")\nplt.scatter(Iris_versicolor[\"Id\"], Iris_versicolor[\"PetalLengthCm\"], color = \"green\", label =\"Versicolor\")\nplt.scatter(Iris_virginica[\"Id\"], Iris_virginica[\"PetalLengthCm\"], color = \"blue\", label =\"Virginica\")\nplt.xlabel(\"Id\")\nplt.ylabel(\"PetalLengthCm\")\nplt.legend() # put label to the nice coordination on the graph.\nplt.show()","3188a918":"plt.figure(3)\nplt.hist(Iris_setosa[\"PetalLengthCm\"], color = \"red\", label =\"Setosa\", bins = 25)\nplt.hist(Iris_versicolor[\"PetalLengthCm\"], color = \"green\", label =\"Versicolor\", bins = 25)\nplt.hist(Iris_virginica[\"PetalLengthCm\"], color = \"blue\", label =\"Virginica\", bins = 25)\nplt.xlabel(\"PatellengthCm Values\")\nplt.title(\"Histogram Graph\")\nplt.ylabel(\"Frequency\")\nplt.legend() # put label to the nice coordination on the graph.\nplt.show()","37e9b1d0":"x = np.array([1,2,3,4,5,6,7,8])\ny = np.array([2,4,6,8,10,12,14,20])\nplt.figure(4)\nplt.title(\"Bar Plot\")\nplt.xlabel(\"x\")\nplt.ylabel(\"y\")\nplt.bar(x,y)\nplt.show()","8421de63":"# For plotting different plots in the same figure\nplt.figure(5) # for plotting graphs in different pages.\nplt.title(\"Sub Plots\")\nplt.subplot(3,1,1)\nplt.plot(Iris_setosa[\"Id\"], Iris_setosa[\"PetalLengthCm\"], color = \"red\", label =\"Setosa\")\nplt.xlabel(\"Id\")\nplt.ylabel(\"PetalLengthCm\")\nplt.legend()\nplt.subplot(3,1,2)\nplt.plot(Iris_versicolor[\"Id\"], Iris_versicolor[\"PetalLengthCm\"], color = \"green\", label =\"Versicolor\")\nplt.xlabel(\"Id\")\nplt.ylabel(\"PetalLengthCm\")\nplt.legend()\nplt.subplot(3,1,3)\nplt.plot(Iris_virginica[\"Id\"], Iris_virginica[\"PetalLengthCm\"], color = \"blue\", label =\"Virginica\")\nplt.xlabel(\"Id\")\nplt.ylabel(\"PetalLengthCm\")\nplt.legend() # put label to the nice coordination on the graph.\nplt.show()","c3f9d5aa":"LINE PLOT:","9fa8a552":"SUB PLOTS","2297d6f2":"SCATTER PLOT","06b2e5a9":"To see which columns we have:","00a64964":"HISTOGRAM PLOT","2fd43e7e":"BAR PLOT","685a2d94":"\"head()\" method shows us the first 5 rows of the data."}}