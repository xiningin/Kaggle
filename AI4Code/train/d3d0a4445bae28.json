{"cell_type":{"a218291a":"code","f9e1479b":"code","80dc3db8":"code","d88d2cf8":"code","041ad1b3":"code","5269379b":"code","397621a5":"code","a0271571":"code","af8f22aa":"code","12f177c6":"code","71f1efca":"code","a44fb070":"code","0c21a19f":"code","dcea62ca":"code","99ad05de":"code","f2ff3e66":"code","e9a0cf30":"code","e9f96665":"code","ab6409b0":"code","d3493e68":"code","457cd539":"code","b0d84341":"code","9756ca7b":"code","a10250ca":"code","a3861a04":"code","fdc3963b":"code","11598c7f":"code","8170331f":"code","113fe9bf":"code","bfcdab35":"code","0ed3472a":"code","917eaeb1":"code","d975c72b":"code","ad5b299b":"code","48fecb65":"code","9d2e28d0":"code","16e5d710":"code","2192c5d1":"code","b5f35def":"code","8bcf6631":"code","1823700a":"code","df2cd6d2":"code","bbdbf8ef":"code","800a8bfa":"code","6314b45b":"code","513faa41":"code","22fcb283":"code","71ba5410":"code","e3e10dd4":"code","a1cfcc89":"code","285abfec":"code","31c805f0":"code","8ab7ebd5":"code","937730d2":"code","b3f75138":"markdown","281213f3":"markdown","200a28a6":"markdown","c8d3e82c":"markdown","6c852282":"markdown","d6b278ae":"markdown","e99fa036":"markdown","6b8e2140":"markdown","ede4ee5a":"markdown","a5f6b9fa":"markdown","d9bb7a59":"markdown","bc6941ee":"markdown","0ebf73f6":"markdown","4e9d4c84":"markdown","00fa46f5":"markdown","cb8a9fd6":"markdown","985775f8":"markdown","37f4f576":"markdown","70e0eacc":"markdown","fc498ae6":"markdown","92501e1d":"markdown","4bf6e491":"markdown","5d0ef646":"markdown","0332f826":"markdown","95f66cf8":"markdown","fad08905":"markdown","4a16cb9e":"markdown","cf358e9d":"markdown","af78e236":"markdown","63aa43d5":"markdown","2e9e85a9":"markdown","7113161b":"markdown","491e2be7":"markdown","821b3894":"markdown","74d807f3":"markdown","f43bacb1":"markdown","413a5fd5":"markdown","d5b9f47e":"markdown","5356b68c":"markdown","07ecdc4a":"markdown","f6042f3c":"markdown","71b44c98":"markdown","69012451":"markdown","767c3549":"markdown","b0cdb1f0":"markdown","1d153451":"markdown","7ca4216a":"markdown","ed2fcdb3":"markdown","79699ac1":"markdown","2132b460":"markdown","1b3d4a84":"markdown","bcc14e9f":"markdown","843a323a":"markdown"},"source":{"a218291a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f9e1479b":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split\nimport datetime\nimport warnings\nwarnings.filterwarnings(\"ignore\")","80dc3db8":"dataset  = pd.read_excel(\"\/kaggle\/input\/shop-sales\/SHOP-SALES.xlsx\")","d88d2cf8":"dataset.head()","041ad1b3":"dataset.info()","5269379b":"categorical_list = [\"GENDER\",\"PRODUCT\",\"COLOR\",\"SIZE\",\"SALE CONSULTANT\"]\n\nfor col in categorical_list:\n    dataset[col] = pd.Categorical(dataset[col])","397621a5":"dataset.info()","a0271571":"dataset.isnull().sum()","af8f22aa":"#I get a copy so I can fix it when I make a mistake.\ndf = dataset.copy()","12f177c6":"dataset.describe().T","71f1efca":"fig, axes = plt.subplots(1,3,figsize = (10,3))\naxes[0].hist(dataset[\"PRICE\"],bins = 50);\naxes[1].hist(dataset[\"TOTAL\"],bins = 50);\naxes[2].hist(dataset[\"VAT\"],bins = 50);","a44fb070":"#Selecting categorical variables\ncategorical_df = dataset.select_dtypes(include = [\"category\"])","0c21a19f":"categorical_df","dcea62ca":"#Looking at how many different class does each column include.\nfor col in categorical_df.columns:\n    print(col + \" include {} different class\".format(categorical_df[col].value_counts().count()))\n    ","99ad05de":"#creating the numerical dataset \ndf_numerical = dataset.select_dtypes(include = [\"float64\",\"int64\",\"datetime64[ns]\",\"object\"])\ndf_numerical.head()","f2ff3e66":"df_numerical['weekday'] = df_numerical[['Date']].apply(lambda x: datetime.datetime.strftime(x['Date'], '%A'), axis=1)","e9a0cf30":"df_numerical","e9f96665":"#Creating numerical class\nfrom scipy.stats import kurtosis, skew\nclass numerical:\n    def __init__(self,data=df_numerical):\n        self.data = data\n        \n    def skewnessANDkurtosis(self,column):\n        print(column + \" - Skewness : \", self.data[column].skew(),\" | \",\n              column + \" - Kurtosis : \", self.data[column].kurtosis() )\n        \n    def correlation(self,cls):\n        return self.data[cls].corr()\n    \n    def outlier(self,column):\n        Q1 = np.percentile(self.data[column],25)\n        Q3 = np.percentile(self.data[column],75)\n        IQR = Q3 - Q1\n        outlier_step = 1.5 * IQR\n        return self.data[(self.data[column] > outlier_step + Q3) | (self.data[column] < Q1 - outlier_step)]\n    \n    def particular_outlier(self,column, dec_column, val):\n        data = self.data[self.data[dec_column] == val]\n        Q1 = np.percentile(data[column],25)\n        Q3 = np.percentile(data[column],75)\n        IQR = Q3 - Q1\n        outlier_step = 1.5 * IQR\n        return data[(data[column] > outlier_step + Q3) | (data[column] < Q1 - outlier_step)]\n    \n    def desc(self,column):\n        return self.data[column].describe()\n    \n    def outlier_graph(self,column):\n        return sns.boxplot(x=column, data=self.data, color=\"blue\")\n    \n    def particular_dist_graph(self,column,h ):\n        \n        return (sns\n                    .FacetGrid(self.data, hue=h)\n                    .map(sns.kdeplot, column, shade = True)\n                    .add_legend());\n    \n    def dist_graph(self,column):\n        return sns.kdeplot(self.data[column], shade = True)\n    \n    \n","ab6409b0":"for col in df_numerical.columns[3:-1].tolist():\n    numerical(data=df_numerical).skewnessANDkurtosis(column=col)\n    print(\" \")","d3493e68":"MEN = dataset[dataset[\"GENDER\"] == \"MEN\"]\nWOMEN = dataset[dataset[\"GENDER\"] == \"WOMEN\"]\nGIRLS = dataset[dataset[\"GENDER\"] == \"GIRLS\"]\nBOYS = dataset[dataset[\"GENDER\"] == \"BOYS\"]","457cd539":"print(\"MEN\") \nnumerical(data=MEN).skewnessANDkurtosis(\"PRICE\")\nprint(\"WOMEN\")\nnumerical(data=WOMEN).skewnessANDkurtosis(\"PRICE\")\nprint(\"GIRLS\")\nnumerical(data=GIRLS).skewnessANDkurtosis(\"PRICE\")\nprint(\"BOYS\")\nnumerical(data=BOYS).skewnessANDkurtosis(\"PRICE\")","b0d84341":"numerical(data=dataset).particular_dist_graph(column=\"PRICE\",h=\"GENDER\");","9756ca7b":"dataset.drop(dataset[dataset[\"GENDER\"] == \"Erkek\"].index,inplace=True)\ng = sns.FacetGrid(dataset, col=\"GENDER\",xlim=(0,100))\ng.map(sns.kdeplot, \"PRICE\")","a10250ca":"dataset.drop(dataset[dataset[\"GENDER\"] == \"Erkek\"].index,inplace=True)\ndataset[\"weekday\"] = df_numerical[\"weekday\"]\ng = sns.FacetGrid(dataset, col=\"weekday\")\ng.map(sns.kdeplot, \"PRICE\")","a3861a04":"numerical(data=df_numerical).correlation(cls=[\"PRICE\", \"VAT\",\"TOTAL\"])","fdc3963b":"X1 = [12,13,14,15,16,17,18,19]\nX2 = [1,2,3,8,18,2,3,78]\nX3 = [185,163,120,100,65,50,10,1]\nY = [10,11,15,12,18,19,15,16]\n\nexm = pd.DataFrame({\"X1\":X1,\"X2\":X2,\"X3\":X3,\"Y\":Y})\nexm","11598c7f":"numerical(data=exm).correlation(cls = exm.columns)","8170331f":"exm1 = exm.copy()","113fe9bf":"def ML(data,dependent,independent,tst_size,rnd_state):\n    data_train = data.copy()\n    y = data_train[dependent]\n    X = data_train.drop(dependent, axis=1, inplace = True)\n    X = StandardScaler().fit_transform(data_train[independent])\n    train_X, test_X, train_y, test_y = train_test_split(X,y, test_size = tst_size, random_state = rnd_state)\n    reg = LinearRegression().fit(train_X,train_y)\n    score = mean_squared_error(test_y, reg.predict(test_X))**(1\/2)\n    return score\n    \n    ","bfcdab35":"print(\"Error of Full Dataset : \",ML(data=exm,dependent=\"Y\",independent=[\"X1\",\"X2\",\"X3\"],tst_size=0.3,rnd_state=0))\nexm1 = exm1.drop(\"X1\",axis=1)\nprint(\"After the Droping X1 : \",ML(data=exm1,dependent=\"Y\",independent=[\"X2\",\"X3\"],tst_size=0.3,rnd_state=0))\n      ","0ed3472a":"sns.scatterplot(x = \"X1\", y = \"Y\", data=exm);","917eaeb1":"exm[\"GENDER\"] = [\"F\",\"F\",\"M\",\"F\",\"M\",\"M\",\"F\",\"M\"]","d975c72b":"#According to categorical column\nsns.scatterplot(x = \"X1\", y = \"Y\", hue = \"GENDER\", data=exm);","ad5b299b":"#According to Numerical column.\nsns.scatterplot(x = \"X1\", y = \"Y\",size = \"X2\", hue = \"GENDER\", data=exm);","48fecb65":"exm","9d2e28d0":"sns.heatmap(exm.drop(\"GENDER\",axis=1), annot = True, fmt=\"d\", linewidths=.5);","16e5d710":"numerical(data=MEN).outlier(\"PRICE\").shape[0]","2192c5d1":"print(\"MEN   : \" + str(round(numerical(data=MEN).outlier(\"PRICE\").shape[0]\/MEN.shape[0],3)))\nprint(\"WOMEN : \" + str(round(numerical(data=WOMEN).outlier(\"PRICE\").shape[0]\/WOMEN.shape[0],3))) \nprint(\"GIRLS : \" + str(round(numerical(data=GIRLS).outlier(\"PRICE\").shape[0]\/GIRLS.shape[0],3)))\nprint(\"BOYS  : \" + str(round(numerical(data=BOYS).outlier(\"PRICE\").shape[0]\/BOYS.shape[0],3)))\n","b5f35def":"fig = plt.subplots(figsize = (15,6))\nsns.boxplot(x = \"weekday\", y = \"PRICE\", data = df_numerical)\n","8bcf6631":"df_numerical[[\"weekday\",\"PRICE\"]].groupby([\"weekday\"],as_index=False).mean()","1823700a":"fig = plt.subplots(figsize = (15,6))\nsns.boxplot(x = \"weekday\",y = \"PRICE\", hue = \"GENDER\", data = dataset);","df2cd6d2":"sns.catplot(x = \"weekday\",y = \"PRICE\",hue = \"GENDER\",data = dataset)","bbdbf8ef":"time_series = dataset[[\"Date\",\"PRICE\"]].groupby(\"Date\").sum()","800a8bfa":"time_series.PRICE.plot(figsize=(20,7), linewidth=2, fontsize=20);\nplt.xlabel('DAY', fontsize=20);\nplt.ylabel(\"TOTAL PRICE\", fontsize = 20);","6314b45b":"dataset.head()","513faa41":"categorical_df[\"weekday\"] = dataset[\"weekday\"]\ncategorical_df.head()","22fcb283":"for col in categorical_df.columns:\n    print(col + \" has {} different class...\".format(categorical_df[col].nunique()))","71ba5410":"categorical_df.GENDER.value_counts()","e3e10dd4":"def change(variable):\n    if variable ==\"Erkek\":\n        return \"MEN\"   \n    else:\n        return variable\n    \ncategorical_df[\"GENDER\"] = categorical_df[\"GENDER\"].apply(change)\n\ncategorical_df.GENDER.value_counts()","a1cfcc89":"categorical_df.GENDER.value_counts().sort_values().plot.barh(figsize = (10,4));\nplt.xlabel('QUANTITY', fontsize=20);\nplt.ylabel(\"GENDER\", fontsize = 20);","285abfec":"dataset[[\"GENDER\",\"TOTAL\"]] \\\n        .groupby([\"GENDER\"], as_index = False ) \\\n        .sum() \\\n        .sort_values(by = \"TOTAL\",ascending=False)","31c805f0":"categorical_df[\"SALE CONSULTANT\"].value_counts()","8ab7ebd5":"categorical_df[\"SALE CONSULTANT\"].value_counts().plot.barh()","937730d2":"dataset[\"GENDER\"] = dataset[\"GENDER\"].apply(change)\nsc = dataset[[\"SALE CONSULTANT\",\"GENDER\",\"TOTAL\"]] \\\n        .groupby([\"SALE CONSULTANT\",\"GENDER\"], as_index = False ) \\\n        .sum() \\\n        .sort_values(by = \"TOTAL\",ascending=False)\nsc","b3f75138":"If we force the borders, we can get in more.","281213f3":"There is a high correlation between X1 and X3  and also high correlation of both with the Y column. If you want to use ML algorithms, especially regression algorithms. You must use only one column among X1 and X3 because ML algorithms try to find differences effect on the dependent column by using optimal coefficients. So I can drop X1 and use the rest of the data to apply ML.","200a28a6":"## 1.2 Categorical ","c8d3e82c":"Now I want to demonstrate what I tried to talk about by applying on a simple dataset.","6c852282":"Normally nobody demonstrates anything by using a stupid dataset as I used. :) **Ignore this one time.** \n\nAt least you can see what happened when I dropped the X1 and how results changed...","d6b278ae":"### Categorical Variables","e99fa036":"We can use catplot graph instead of boxplot.","6b8e2140":"I will look again at how much total sale price for each gender of sales.","ede4ee5a":"Like the skewness and kurtosis, looking correlation is nonsense  beacause of every column already represent each other. Like the skewness and kurtosis, looking correlation is nonsense because every column already represents each other. But I will give you an example to understand better.","a5f6b9fa":"### Numerical Variables","d9bb7a59":"I haven't investigated before that all of the categorical columns have true values or all values in categorical columns are able to represent a column in which it is located but there are fairly various variables in SIZE and COLOR therefore I should dive into both of them deeply after the others are done.","bc6941ee":"![](https:\/\/www.researchgate.net\/publication\/337714548\/figure\/fig4\/AS:832032317898754@1575383371643\/Skewness-a-negative-skewed-distribution-b-normally-distribution-and-c-positive.png)","0ebf73f6":"This dataset was generated by me. There are 11 columns that represent the feature of each sale and each row represents the one product. There are no bill columns therefore I think that we must predict which product was sold together in the same basket by using \"Sale Consultant\", \"Date\" and \"Hour\" columns. The biggest part is that this dataset not affiliated with any brand or any local shop so it may include some meanless values or rows :-) Because of real-life consist of random patterns as well, as well as the dataset is fake, I think that it is a good chance to improve our ability.","4e9d4c84":"### 1.1.1. Skewness and Kurtosis","00fa46f5":"I was knowing what I would encounter because I generated the data myself and I didn't specify any coefficient or constraint so generally same values were dispersed. But my main goal is that see which day has outliers. It's clearly is being shown by the boxplot graph.","cb8a9fd6":"One of the vital point is that we have to look at which columns among that have a high correlation with the dependent column and with an independent column at the same time.","985775f8":"# To be continued .. . .. . ","37f4f576":"The other way is looking at according to the GENDER class separately. I think that It would be better if I focus on the area where there is the most stack so I should focus on between 0 and 100. ","70e0eacc":"![](https:\/\/www.ft.com\/__origami\/service\/image\/v2\/images\/raw\/http%3A%2F%2Fcom.ft.imagepublish.prod.s3.amazonaws.com%2F8b349314-3b8d-11e7-ac89-b01cc67cfeec?fit=scale-down&source=next&width=700)","fc498ae6":"#### 1.1.2.1. Scatterplot and Heat Map for Correlation.","92501e1d":"Now We will see that they were be changed.","4bf6e491":"![](https:\/\/miro.medium.com\/max\/932\/1*Qz_gwy4ZaSZuOpl3IyO2HA.png)","5d0ef646":"If the object data type represents the categorical value, I will change it to categorical like Gender, Product, S\u0131ze, Sale Consultant. Color column includes numbers but each different numbers represent each different color so I will change its data type.","0332f826":"All of the numeric columns have high skewness and high kurtosis. I generated a total price whereby PRICE + VAT so these outcomes are very normal. PRICE column already has high skewness and kurtosis so no matter what column generated by the PRICE column probably will have high skewness and kurtosis.","95f66cf8":"#### Libraries","fad08905":"## 1.1. Numerical","4a16cb9e":"### 1.1.3. Outliers","cf358e9d":"**Which kurtosis does appear in which situation?**\n\n\n* It is actually the measure of outliers present in the distribution.\n* **High Kurtosis** : It in a data set is an indicator that data has heavy tails or outliers.\n* **Low Kurtosis**  : It in a data set is an indicator that data has light tails or lack of outliers.\n\n  \n![](https:\/\/miro.medium.com\/max\/371\/1*Nqu07THa7APRTOF7kaVr5Q.jpeg)  ","af78e236":"### 1.2.2. Sale Consultant","63aa43d5":"Additional information, if you want to see the mean value of each column without a graph, I think group by is the best way in pandas and SQL.","2e9e85a9":"### 1.2.1. GENDER","7113161b":"* **Mesocurtic** : This definition is used so that the standard normal distribution has a kurtosis of three.\n* **Leptokurtic(Kurtosis > 3)** : Distribution is longer, tails are fatter. The peak is higher and sharper than Mesokurtic, which means that data are heavy-tailed or profusion of outliers.\n* **Platykurtic(Kurtosis < 3)** :  Distribution is shorter, tails are thinner than the normal distribution. The peak is lower and broader than Mesokurtic, which means that data are light-tailed or lack of outliers.","491e2be7":"According to the above rules, all of our numerical columns have a positive skew.","821b3894":"* If the mean is greater than the mode, the distribution is positively skewed.\n* If the mean is less than the mode, the distribution is negatively skewed.\n* If the mean is greater than the median, the distribution is positively skewed.\n* If the mean is less than the median, the distribution is negatively skewed.","74d807f3":"Erkek means MEN in the Turkish language so I change it to MEN.","f43bacb1":"# Preview of the dataset.","413a5fd5":"There are some same points to look for every column such as correlation, outliers, skewness or kurtosis, etc. \nTherefore I can create a new class that includes all of these processes in this way I don't have to do the same thing every time.","d5b9f47e":"#### 1.1.3.1. Which days do we win more? Exploring with a boxplot...","5356b68c":" **What are the rules of Skewness?**\n *  A symmetrical distribution will have a skewness of 0.\n * If the skewness is between -0.5 and 0.5, the data are fairly symmetrical.\n * If the skewness is between -1 and -0.5(negatively skewed) or between 0.5 and 1(positively skewed), the data are moderately skewed.\n * If the skewness is less than -1(negatively skewed) or greater than 1(positively skewed), the data are highly skewed.","07ecdc4a":"Generally, I start by looking at how many class do each column have.","f6042f3c":"For the last one, I want to generate a column include name of the days.","71b44c98":"**But this approach is not correct. I have to divide the dataset according to at least one class.**","69012451":"The last one I will look at according to the weekday separately.","767c3549":"![](https:\/\/static01.nyt.com\/images\/2015\/08\/04\/sports\/05DIVER-hp\/05DIVER-hp-articleLarge-v3.jpg?quality=90&auto=webp)","b0cdb1f0":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/c\/cc\/Relationship_between_mean_and_median_under_different_skewness.png\/434px-Relationship_between_mean_and_median_under_different_skewness.png)","1d153451":"### 1.1.4. TIME SERIES ","7ca4216a":"#### Dataset","ed2fcdb3":"Again, Random assignment killed us :)","79699ac1":"![](https:\/\/quotefancy.com\/media\/wallpaper\/3840x2160\/2969735-John-Tukey-Quote-It-s-better-to-solve-the-right-problem.jpg)","2132b460":"### 1.1.2. Correlation Analysis","1b3d4a84":"# 1. Statistically and Exploratory Data Analysis.","bcc14e9f":"Date and HOUR aren't numerical ones but I will search for insight for every column by the date and hour.","843a323a":"### What is the story of the dataset?"}}