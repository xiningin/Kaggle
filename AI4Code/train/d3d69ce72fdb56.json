{"cell_type":{"54504fbe":"code","e8b49584":"code","5f54978b":"code","400a23a5":"code","cdc46a7f":"code","b4797e21":"code","0f04fa6a":"code","02ac716a":"code","6db5d243":"code","76a6b460":"code","7e533eed":"code","b9d7333b":"code","ce0662ec":"code","de87ab8a":"code","c9d0b1c0":"code","099961f4":"code","f7bea7fc":"code","e48403a2":"code","e5930765":"code","18f8fddb":"code","22f71c45":"code","7cff0953":"markdown","095e579f":"markdown","128b690f":"markdown","09b80674":"markdown","eee9758a":"markdown","d5cf9173":"markdown"},"source":{"54504fbe":"# Importing the libraries\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set(color_codes=True)\nimport pandas as pd\n%matplotlib inline","e8b49584":"# Importing the dataset\ndataset = pd.read_csv('..\/input\/Iris.csv')\ndataset.head()","5f54978b":"#drop Id column\ndataset = dataset.drop('Id',axis=1)\ndataset.head()","400a23a5":"# shape\nprint(dataset.shape)","cdc46a7f":"# more info on the data\nprint(dataset.info())","b4797e21":"# descriptions\nprint(dataset.describe())","0f04fa6a":"# class distribution\nprint(dataset.groupby('Species').size())","02ac716a":"# box and whisker plots\ndataset.plot(kind='box', sharex=False, sharey=False)","6db5d243":"# histograms\ndataset.hist(edgecolor='black', linewidth=1.2)","76a6b460":"# boxplot on each feature split out by species\ndataset.boxplot(by=\"Species\",figsize=(10,10))","7e533eed":"# violinplots on petal-length for each species\nsns.violinplot(data=dataset,x=\"Species\", y=\"PetalLengthCm\")","b9d7333b":"from pandas.plotting import scatter_matrix\n# scatter plot matrix\nscatter_matrix(dataset,figsize=(10,10))\nplt.show()","ce0662ec":"# Using seaborn pairplot to see the bivariate relation between each pair of features\nsns.pairplot(dataset, hue=\"Species\")","de87ab8a":"# updating the diagonal elements in a pairplot to show a kde\nsns.pairplot(dataset, hue=\"Species\",diag_kind=\"kde\")","c9d0b1c0":"# Importing metrics for evaluation\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report","099961f4":"# Seperating the data into dependent and independent variables\nX = dataset.iloc[:, :-1].values\ny = dataset.iloc[:, -1].values\n\n# Splitting the dataset into the Training set and Test set\nfrom sklearn.cross_validation import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","f7bea7fc":"# LogisticRegression\nfrom sklearn.linear_model import LogisticRegression\nclassifier = LogisticRegression()\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\n# Summary of the predictions made by the classifier\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\n# Accuracy score\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_pred,y_test))","e48403a2":"# Naive Bayes\nfrom sklearn.naive_bayes import GaussianNB\nclassifier = GaussianNB()\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\n# Summary of the predictions made by the classifier\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\n# Accuracy score\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_pred,y_test))","e5930765":"# Support Vector Machine's \nfrom sklearn.svm import SVC\n\nclassifier = SVC()\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\n# Summary of the predictions made by the classifier\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\n# Accuracy score\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_pred,y_test))","18f8fddb":"# K-Nearest Neighbours\nfrom sklearn.neighbors import KNeighborsClassifier\n\nclassifier = KNeighborsClassifier(n_neighbors=8)\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\n# Summary of the predictions made by the classifier\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\n# Accuracy score\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_pred,y_test))","22f71c45":"# Decision Tree's\nfrom sklearn.tree import DecisionTreeClassifier\n\nclassifier = DecisionTreeClassifier()\n\nclassifier.fit(X_train, y_train)\n\ny_pred = classifier.predict(X_test)\n\n# Summary of the predictions made by the classifier\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\n# Accuracy score\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y_pred,y_test))","7cff0953":"# Visualizations:","095e579f":"From the plot, we can see that the species setosa is separataed from the other two across all feature combinations","128b690f":"We can also replace the histograms shown in the diagonal of the pairplot by kde.","09b80674":"# Applying different Classification models:","eee9758a":"# Summary Of the Dataset","d5cf9173":"# Getting Data:"}}