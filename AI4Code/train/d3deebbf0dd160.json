{"cell_type":{"d25da759":"code","c9720da5":"code","0d29eeb8":"code","5fbe0fad":"code","1765df57":"code","61250530":"code","e0447794":"code","0735d633":"code","d947943b":"code","2f181b8b":"code","8f74ae3f":"code","4f54e73d":"code","4d94ad40":"code","75c49fb8":"code","f5abb711":"code","3189219d":"code","c425fb44":"markdown","3f30d1db":"markdown","546e61f9":"markdown","809509fd":"markdown"},"source":{"d25da759":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom sklearn.metrics import f1_score, roc_auc_score, log_loss\n","c9720da5":"## laoding datasets\ntrain_df = pd.read_csv('..\/input\/mnist-60000-hand-written-number-images\/mnist_train.csv',header=None)\ntest_df = pd.read_csv('..\/input\/mnist-60000-hand-written-number-images\/mnist_test.csv',header=None)","0d29eeb8":"print(\"traing data shape:\",train_df.shape)\nprint(\"test  data  shape:\",test_df.shape)","5fbe0fad":"train_df.head()","1765df57":"test_df.head()","61250530":"x = train_df.isnull().sum()>0\nprint(x.sum())","e0447794":"x = test_df.isnull().sum()>0\nprint(x.sum())","0735d633":"train_df[0].value_counts(ascending=True).plot.bar(color='crimson');\n","d947943b":"x_train = train_df.drop(0,axis=1).values\n# since x_train contains pixel values ranging between 0 to 255 to it would be helpful \n#scale it between 0 to 1 inclusive\nx_train = x_train\/255\ny_train = train_df[0].values\n\nx_test = test_df.drop(0,axis=1).values\n# since x_train contains pixel values ranging between 0 to 255 to it would be helpful \n#scale it between 0 to 1 inclusive\nx_test = x_test\/255\ny_test = test_df[0].values","2f181b8b":"#let's see how pixcel values can represent an image\nprint(y_train[2220])\nplt.imshow(x_train[2220].reshape(28,28));\n","8f74ae3f":"model =keras.Sequential([\n    keras.layers.Dense(128,input_shape=(784,),activation='relu'),\n    \n    keras.layers.Dense(10,activation='sigmoid')\n\n])\n\nmodel.compile(optimizer='adam',\n             loss = 'sparse_categorical_crossentropy',\n             metrics=['accuracy']\n             )\nmodel.fit(x_train,y_train,epochs=15)","4f54e73d":"## accuracy score of 99.76% shows model's preformance on traing data\n#evaluate the model for testing dataset\nmodel.evaluate(x_test,y_test)\n","4d94ad40":"y_pred = model.predict(x_test)","75c49fb8":"cf =tf.math.confusion_matrix(labels=y_test,predictions=[np.argmax(i) for i in y_pred])\nplt.figure(figsize=(15,10))\nsns.heatmap(cf,annot=True,fmt='d',cmap='BuPu');","f5abb711":"#let's make a few sample prediction\ndef sample(i):\n    print(\"actual label \", y_test[i])\n    print(\"predicted label \", np.argmax(y_pred[i]))\n    print(\"The corrosponding image\")\n    plt.imshow(x_test[i].reshape(28,28))\n","3189219d":"sample(5)","c425fb44":"## Know your data \n\nTill now we have loaded our train and test datasets.\nWe have 60000 2d (28x28) images in our training dataset and 10000 in test dataset.\n\ncolumns of training data from 1 to 784 represents the pixel values and column 0 represents the corrosponding label, same goes for test data.\n\n## Data Exploration","3f30d1db":"## Recap <br>\nstep 1 we loaded both of our datasets.<br>\nstep 2 we perform some data wrangling like dimesility correction and handling missing values.<br>\nstep 3 we explored data and tried to look for any biasness or trend. <br> \nstep 4 processed data for modeling ,converted it into x_train,x_test,y_train,y_test.<br>\nstep 5 Thought of model structure.<br> \nstep 6 Tested the performance of model on given test data and **congrats we got accracy of 97%**.<br>\n\nThank you\n","546e61f9":"## Neural network structure\n\nThe neural network we want to build will have one hidden layes , input layer and output layer(with 10 neurons)\n<br>\n![image.png](attachment:dbfea70a-cee2-423c-873c-34e0894a25bf.png)\n<br>\n\ndont worry about no of neurons in hidden layers , it's just kind of trail and error , you gotta select appropriate value for this hyperparameter<br>","809509fd":"Now we can obsearve that our data set is free of missing values and its not bias too.\n**Building neural network**<br>\n    we will build an artificial neural network to perform this multiclass classification\n    using **keras and tensorflow** \n    <br>\n    relax it's going to be real fun.\n\nBefore that let's arrange our data correctly into x(features) and y(output)"}}