{"cell_type":{"17fd80ff":"code","fa846e55":"code","5c468a50":"code","f627854e":"code","7ff0a94c":"code","5fb363d3":"code","3993bae0":"code","469ccdb2":"code","641d0920":"code","898268ca":"code","e1bd6072":"code","06952c64":"code","7b6726c1":"code","ef3fa357":"code","064eba0b":"code","454f8423":"code","dee45501":"code","43c38ceb":"code","94cf2caa":"code","04da2867":"code","145bfbff":"code","bca2a909":"code","9c6e0517":"code","b4450a30":"code","171df14e":"code","252b1027":"code","beda4420":"code","d73e7d20":"code","73410f5e":"code","6a258f05":"code","2706ce19":"code","3abe576b":"code","1236a1dd":"code","6e43dae7":"code","ac98aef8":"code","7b7f1829":"code","913af3a3":"code","ca00c92a":"code","c822a616":"code","1c73019a":"code","d4761c43":"code","65a98d7c":"code","b8800882":"code","d726ec60":"code","8f559906":"code","270a30ba":"code","6f71d9d2":"code","95495733":"code","97ae4707":"code","f35a939f":"code","a99067d8":"code","128e1a86":"markdown","ead0cad4":"markdown","5f64d031":"markdown","d89932b2":"markdown","f30dc7af":"markdown","109d9eeb":"markdown","0e3c7b3a":"markdown","dd66ef1a":"markdown","0bf83155":"markdown","c4afffd8":"markdown","81213a84":"markdown","a23e2948":"markdown","f41ca418":"markdown","de98dcb7":"markdown","4991c67c":"markdown","025135d4":"markdown","17fc6bbb":"markdown","82e95b72":"markdown","236079e3":"markdown","39e38ad4":"markdown","fe8e8b6e":"markdown","5e890e8c":"markdown","dfbe929a":"markdown","01c7eac5":"markdown","c593b82b":"markdown","29ec5099":"markdown","ab79185d":"markdown","bf8c2658":"markdown","85ba26fa":"markdown","4dd0a92c":"markdown","e8c59373":"markdown","09e703a3":"markdown","cf5a3e0d":"markdown","77171600":"markdown","6fcf709c":"markdown","cde5cd1e":"markdown"},"source":{"17fd80ff":"import pandas as pd\nbase = pd.read_csv('..\/input\/autos.csv', encoding= 'ISO-8859-1')","fa846e55":"base.head()","5c468a50":"base.drop(['dateCrawled','dateCreated','postalCode','lastSeen','nrOfPictures'], axis = 1, inplace=True)","f627854e":"len(base.columns)","7ff0a94c":"base.describe(include=['O'])","5fb363d3":"base.drop('name', axis=1, inplace=True)","3993bae0":"base['seller'].value_counts()","469ccdb2":"base.drop('seller',axis=1, inplace=True)","641d0920":"base['offerType'].value_counts()","898268ca":"base.drop(['offerType'], axis=1, inplace=True)","e1bd6072":"base['abtest'].value_counts()","06952c64":"import seaborn as sns\nax = sns.countplot(base['abtest'],label=\"Count\")","7b6726c1":"base['vehicleType'].value_counts()","ef3fa357":"ax = sns.countplot(base['vehicleType'],label=\"Count\")","064eba0b":"base['gearbox'].value_counts()","454f8423":"ax = sns.countplot(base['gearbox'],label=\"Count\")","dee45501":"base['model'].value_counts()","43c38ceb":"ax = sns.countplot(base['model'], label=\"count\")","94cf2caa":"base['fuelType'].value_counts()","04da2867":"ax = sns.countplot(base['fuelType'],label=\"Count\")","145bfbff":"base['brand'].value_counts()","bca2a909":"base['notRepairedDamage'].value_counts()","9c6e0517":"i1 = base.loc[base.price <= 10]\nlen(i1)","b4450a30":"base.price.mean()","171df14e":"base = base[ base.price > 10]","252b1027":"i1 = base.loc[base.price > 500000]\ni1.head()","beda4420":"base = base[ base.price < 500000]","d73e7d20":"base.isnull().sum().sort_values(ascending=False)","73410f5e":"base['notRepairedDamage'].value_counts()","6a258f05":"base['notRepairedDamage'].fillna('nein', inplace=True)","2706ce19":"base['vehicleType'].value_counts()","3abe576b":"base['vehicleType'].fillna('limousine', inplace=True)","1236a1dd":"base['fuelType'].value_counts()","6e43dae7":"base['fuelType'].fillna('benzin', inplace=True)","ac98aef8":"base['model'].value_counts()","7b7f1829":"base['model'].fillna('golf', inplace=True)","913af3a3":"base['gearbox'].value_counts()","ca00c92a":"base['gearbox'].fillna('manuell',inplace=True)","c822a616":"base.isnull().sum().sort_values(ascending=False)","1c73019a":"X = base.drop('price',axis=1)\ny = base['price']","d4761c43":"X.head()","65a98d7c":"y.head()","b8800882":"X.describe(include=['O'])","d726ec60":"X = pd.get_dummies(X)\nlen(X.columns)","8f559906":"X.head()","270a30ba":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.25)","6f71d9d2":"from keras.models import Sequential\nfrom keras.layers import Dense\n\nregressor = Sequential()\n#(316 + 1)\/2 = 158\nregressor.add(Dense(units=158, activation='relu', input_dim = 316))\nregressor.add(Dense(units=158, activation='relu'))\n#activation='linear' n\u00e3o faz nenhum calculo adicional\nregressor.add(Dense(units=1, activation='linear'))\n#mean_absolute_error = considera a m\u00e9dia dos erros com valores absolutos.\nregressor.compile(loss='mean_absolute_error', optimizer='adam', metrics=['mean_absolute_error','acc'])\n#batch_size = numero de execu\u00e7\u00f5es antes de atualizar os erros.\nmodel = regressor.fit(X_train, y_train,batch_size=300, epochs = 10)","95495733":"print(model.history.keys())","97ae4707":"print(model.history.keys())\n# summarize history for accuracy\nplt.plot(model.history['acc'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()\n# summarize history for loss\nplt.plot(model.history['loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()","f35a939f":"#Fazer a predi\u00e7\u00e3o dos valores da base X_test\npredict = regressor.predict(X_test)\n\nerror = (sum(abs(a - b) for a, b in zip(predict, y_test))\/ len(predict))[0]\nprint(\"O erro m\u00e9dio na predi\u00e7\u00e3o \u00e9: {}\".format(error))","a99067d8":"import matplotlib.pyplot as plt\nplt.figure(figsize=(20,7))\nplt.plot(predict[0:300])\nplt.plot(y_test[0:300].values)\nplt.title('Predicted vs Real')\nplt.ylabel('Price')\nplt.xlabel('Id')\nplt.legend(['Predicted', 'Real'], loc='upper left')\n\nplt.show()","128e1a86":"<h3>3.1 Cabe\u00e7alho dos dados<\/h3>","ead0cad4":"Os valores nulos identificados precisam ser substituidos. Atributos categ\u00f3ricos ser\u00e3o substituidos pelos valores de maior frequ\u00eancia e atributos num\u00e9ricos pela m\u00e9dia da coluna.","5f64d031":"<a id=\"ref\"><\/a> <br> \n# **8. Refer\u00eancias:**\n\nEste kernel utilizou como refer\u00eancia as an\u00e1lises do kernel abaixo <br>\nhttps:\/\/www.kaggle.com\/adrianoavelar\/titanic-problem\n\n<h2 style=\"color: red\">Se este Kernel ajudou voc\u00ea, por favor, VOTEUP :)<\/h2>","d89932b2":"<h3>3.1 Dicion\u00e1rio de Atributos<\/h3>\n* dateCrawled : Dia onde o registro foi capturado pelo BOT.\n* name : Nome do Carro\n* seller : Vendedor foi uma pessoa ou um representando(empresa)\n* offerType : Se foi feito algum tipo de oferta ( idioma Alem\u00e3o)\n* price : Pre\u00e7o que est\u00e1 no an\u00fancio do carro\n* abtest : Se foi feito algum tipo de teste no veiculo\n* vehicleType : Tipo do veiculo\n* yearOfRegistration : Ano de registro\n* gearbox : Tipo de marcha (manual ou autom\u00e1tico)\n* powerPS : Pot\u00eancia do carro\n* model : Modelo do Carro\n* kilometer : Quantos kilometros o carro tem no momento do an\u00fancio\n* monthOfRegistration : M\u00eas de regristro do carro.\n* fuelType : Tipo de combust\u00edvel (benzin (gasolina), diesel etc..)\n* brand : Marca do Ve\u00edculo\n* notRepairedDamage : Se o carro tiver um dano que ainda n\u00e3o foi reparado\n* dateCreated : A data em que o an\u00fancio no ebay foi criado\n* nrOfPictures : n\u00famero de fotos no an\u00fancio (infelizmente este campo cont\u00e9m em todos os lugares um 0 e \u00e9, portanto, in\u00fatil (bug no rastreador!))\n* postalCode\n* lastSeenOnline : quando o rastreador viu este an\u00fancio pela \u00faltima vez on-line\n","f30dc7af":"# Tabela de Conte\u00fado:\n\n**1. [Defini\u00e7\u00e3o do Problema](#id1)** <br>\n**2. [Coleta e Obten\u00e7\u00e3o dos Dados](#id2)** <br>\n**3. [Carregando e Verificando os dados](#id3)** <br>\n**4. [Pr\u00e9-Processamento dos Dados](#id4)** <br>\n**5. [Cria\u00e7\u00e3o do Modelo](#id5)** <br>\n**6. [Visualiza\u00e7\u00e3o e An\u00e1lise dos Resultados](#id6)** <br>\n**7. [Conclus\u00e3o](#id7)** <br>\n**8. [Refer\u00eancias](#ref)** <br>","109d9eeb":"Verifica-se que o atributo **name** possuim uma variabilidade muito grande, causando pouca ou nenhuma import\u00e2ncia para o atributo **price**. Portanto, ele tamb\u00e9m ser\u00e1 deletado. Esse atributo n\u00e3o far\u00e1 falta, pois os atributos **model** e **brand** j\u00e1 possuem informa\u00e7\u00f5es sobre o tipo de carro vendido.","0e3c7b3a":"Tudo certo com \"abtest\". Vamos verificar o scatterplot dele em rela\u00e7\u00e3o ao ","dd66ef1a":"<a id=\"id5\"><\/a> \n# **5. Cria\u00e7\u00e3o do Modelo:**","0bf83155":"vehicleType est\u00e1 ok tamb\u00e9m. ","c4afffd8":"Um dos gr\u00e1ficos interessantes para plotagem dos resultados \u00e9 o gr\u00e1ficos das previs\u00f5es versus valores reais. Primeiramente vamos submeter os dados de teste ao modelo.","81213a84":"Portanto, os atributos categ\u00f3ricos que precisam ser transformados em atributos num\u00e9ricos s\u00e3o: **abtest**, **vehicleType**, **gearbox**, **model**, **fuelType**, **brand** e **notRepairedDamage**","a23e2948":"Aplicando o One Hot Encoder para valores","f41ca418":"<h3>4.4 Verificando Valores Nulos.<\/h3>\n\nModelos matem\u00e1ticos n\u00e3o funcionam bem com valores nulos ou faltosos, por este motivo, todo valor desse tipo precisa ser preenchido.","de98dcb7":"# Regress\u00e3o usando Redes Neurais com Keras","4991c67c":"<a id=\"id6\"><\/a>\n# **6. Visualiza\u00e7\u00e3o e An\u00e1lise dos Resultados:**","025135d4":"<a id=\"id7\"><\/a>\n# **7. Conclus\u00e3o:**\n\nNeste kernel, foi apresentado o desenvolvimento de um modelo de rede neural para um problema de regress\u00e3o. A diferen\u00e7a b\u00e1sico entre o problema de regress\u00e3o e classifica\u00e7\u00e3o usando rede neural est\u00e1 basicamente na fun\u00e7\u00e3o de ativa\u00e7\u00e3o. Em classifica\u00e7\u00e3o usa-se uma fun\u00e7\u00e3o sigmoid que apresenta probabilidades de um saida ser 0 ou 1, j\u00e1 na regress\u00e3o, a sa\u00edda \u00e9 um valor num\u00e9rico e portanto n\u00e3o precisa de tratamento, por isso, \u00e9 usado a fun\u00e7\u00e3o de ativa\u00e7\u00e3o linear.","17fc6bbb":"Tudo Ok com o fuelType","82e95b72":"Este Kernel explica como fazer a predi\u00e7\u00e3o do valor de um carro usando Regress\u00e3o com Redes Neurais.","236079e3":"Existem 12118 entradas da base com valores manores que 10 e a m\u00e9dia de pre\u00e7o \u00e9 de EU 17295,00. Por esste motivo, vamos remover esses valores incosist\u00eantes.","39e38ad4":"Em princ\u00edpio vamos manter o atributo Model, apesar da variabilidade alta. ","fe8e8b6e":"<a id=\"id2\"><\/a> <br> \n# **2. Coleta e Obten\u00e7\u00e3o dos Dados:** \n\nOs dados j\u00e1 foram coletados utilizando um BOT que varreu v\u00e1rios sites de vendas de carro para pegar as informa\u00e7\u00f5es. A base est\u00e1 codifica com a ISO-88590-1. Por esse motivo, ao carregar os dados ser\u00e1 necess\u00e1rio passar essa codifica\u00e7\u00e3o.\n\n> ISO\/IEC 8859-1 (informalmente, Latin1) \u00e9 uma codifica\u00e7\u00e3o de caracteres do alfabeto latino, a primeira parte da ISO 8859.<br>\nref.: https:\/\/pt.wikipedia.org\/wiki\/ISO\/IEC_8859-1","5e890e8c":"Note que agora possuem 317 atributos.\nIsso porque o pandas cria novos atributos com os dados categ\u00f3ricos, por exemplo, o atributo \"vehicle\" virou v\u00e1rios outros como \"vehicleType_bus\", \"vehicleType_cabrio\", \"vehicleType_coupe\"\tetc. \n","dfbe929a":"<a id=\"id3\"><\/a> <br> \n# **3. Carregando e Verificando os dados:** ","01c7eac5":"Para o offertype \u00e9 a mesma coisa. 12 entradas apenas s\u00e3o \"Gesuch\" e isso n\u00e3o representa nem 1% da base.","c593b82b":"<h3>4.5 Transformar os dados categ\u00f3ricos em dados num\u00e9ricos<\/h3>\n\nAp\u00f3s todos as an\u00e1lises e corre\u00e7\u00f5es feitas anteriormente nos dados \u00e9 necess\u00e1rio transformar os dados categ\u00f3ricos em dados num\u00e9ricos.<br>\nMas antes de codificar vamos separar a base de dados em **atributos (X)** e **valor de predi\u00e7\u00e3o (y)**.","29ec5099":"o atributo **gearbox** parece est\u00e1 ok tamb\u00e9m. ","ab79185d":"<a id=\"id4\"><\/a>\n# **4. Pr\u00e9-Processamento dos Dados:** \n\nO primeiro passo para qualquer solu\u00e7\u00e3o de problemas que envolva bases de dados \u00e9 tratar os dados para utiliza\u00e7\u00e3o dos modelos. Olhando para os atributos dessa classe, alguns podem ser deixados de lado por n\u00e3o representar informa\u00e7\u00f5es relevantes ao nosso problema. \n\n<h3>4.1 Remo\u00e7\u00e3o iniciais de atributos<\/h3>\nO primeiro atributo que parece n\u00e3o ter relev\u00e2ncia \u00e9 o **dateCrawled** (Dia onde o registro foi capturado pelo BOT). Essa informa\u00e7\u00e3o pode ser interessante para analisar o tempo que demorou para um carro ser vendido, o valor pode at\u00e9 estar relacionado ao tempo de registro do carro, mas, por hora, vamos delet\u00e1-lo.\n\nOutros atributos que ser\u00e3o deletados s\u00e3o: **DateCreated**, **nrOfPictures**, **postalCode** e **lastSeen**.","bf8c2658":"<img src=\"https:\/\/storage.googleapis.com\/kaggle-datasets-images\/402\/822\/ee1e035c95f5bb86648314d0feda242b\/dataset-cover.jpg\" \/>","85ba26fa":"<h3>4.3 Verificando Valores Inconsist\u00eantes.<\/h3>\n\nAgora, vamos verificar valores incosist\u00eantes, como pre\u00e7os de produtos muito baixo ou muito altos. Ex. Carro sendo vendido a 10 Euros. ","4dd0a92c":"Para o atributo \"seller\" (Tipo de vendedor: privado ou comercial) percebe-se que apenas 3 s\u00e3o comerciais, ou seja, 99,99% da base \u00e9 \"privat\" ent\u00e3o esse atributo n\u00e3o vai impactar em nada o valor do ve\u00edculo. ","e8c59373":"Quantos dados sobraram?","09e703a3":"<a id=\"id1\"><\/a> <br> \n# **1. Defini\u00e7\u00e3o do Problema:** \n\nA base de dados possui 20 atributos. O objetivo \u00e9 prever o valor do atributo Price. Percebe-se que nesse caso, n\u00e3o \u00e9 uma classifica\u00e7\u00e3o e sim uma predi\u00e7\u00e3o de um valor num\u00e9rico. Por isso, ser\u00e1 utilizado regress\u00e3o.","cf5a3e0d":"Perceba que valores com pre\u00e7os muito altos n\u00e3o contribuem para o resultado e pode gerar outlier.","77171600":"<a id=\"id42\"><\/a>\n<h3>4.2 Verificando os dados categ\u00f3ricos.<\/h3>","6fcf709c":"Vamos verificar a precis\u00e3o e a evolu\u00e7\u00e3o do erro durante as \u00e9pocas.","cde5cd1e":"<h3>4.6 Separar os dados de treinamento e teste<\/h3>\nA \u00faltima parte do preprocessamento \u00e9 separar os dados de **treinamento** e **teste**. Se a modelagem foi feita utilizando valida\u00e7\u00e3o cruzada essa separa\u00e7\u00e3o n\u00e3o precisa ser feita."}}