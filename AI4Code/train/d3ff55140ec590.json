{"cell_type":{"bc5a822d":"code","64d9afa9":"code","9aa16d09":"code","030c0055":"code","80ae5945":"code","3e316f2c":"code","e9a3b67f":"code","5f6070ba":"code","e00d52e2":"code","e1da0b3d":"code","5cb6e796":"code","3ba31923":"code","5e160c66":"code","d76a4b34":"code","383f1857":"code","8225cdef":"code","daa73a9f":"code","a2ead61c":"code","3fd97be8":"code","632f100a":"code","fe70591a":"code","4cfe8812":"code","ff56794e":"code","4977aece":"code","8f50d161":"code","f1bd7f9c":"markdown","d9dae43f":"markdown","89cc7bbe":"markdown","b428e010":"markdown","7449291d":"markdown","bf031c58":"markdown","621e97de":"markdown","796883eb":"markdown","f34ca198":"markdown"},"source":{"bc5a822d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nprint(\"Necessary packages included successfully!\")","64d9afa9":"url = 'https:\/\/raw.githubusercontent.com\/MainakRepositor\/Datasets-\/master\/AB_NYC_2019.csv'\nairbnb = pd.read_csv(url)\nairbnb.head()","9aa16d09":"r,c = airbnb.shape\nprint(\"Number of rows in dataset    = \",r)\nprint(\"Number of columns in dataset = \",c)","030c0055":"airbnb.info()","80ae5945":"airbnb.duplicated().sum()\nairbnb.drop_duplicates(inplace=True)\nairbnb.isnull().sum()","3e316f2c":"airbnb = airbnb.drop(['id','host_name','last_review'], axis=1)\nairbnb.head()","e9a3b67f":"airbnb.fillna({'reviews_per_month':0}, inplace=True)\n#examing changes\nairbnb.reviews_per_month.isnull().sum()","5f6070ba":"airbnb.isnull().sum()\nairbnb.dropna(how='any',inplace=True)\nairbnb.info() #.info() function is used to get a concise summary of the dataframe","e00d52e2":"airbnb.describe().T","e1da0b3d":"corr = airbnb.corr()\nplt.figure(figsize=(15,8))\nsns.heatmap(corr, annot=True,cmap= \"icefire\")\nplt.title(\"Correlation of the parameters\\n\",size=22\n)","5cb6e796":"airbnb['neighbourhood_group'].unique()","3ba31923":"#creating a sub-dataframe with no extreme values \/ less than 500\nsub_6=airbnb[airbnb.price < 500]\n#using violinplot to showcase density and distribtuion of prices \nplt.figure(figsize=(18,8))\nviz_2=sns.violinplot(data=sub_6, x='neighbourhood_group', y='price')\nviz_2.set_title('Density and distribution of prices for each neighbourhood_group\\n',size=21)","5e160c66":"top_host=airbnb.host_id.value_counts().head(10)\ntop_host","d76a4b34":"top_host_df=pd.DataFrame(top_host)\ntop_host_df.reset_index(inplace=True)\ntop_host_df.rename(columns={'index':'Host_ID', 'host_id':'P_Count'}, inplace=True)\ntop_host_df","383f1857":"plt.figure(figsize=(18,8))\nviz_1=sns.barplot(x=\"Host_ID\", y=\"P_Count\", data=top_host_df,\n                 palette='Blues_d')\nviz_1.set_title('Hosts with the most listings in NYC\\n',size=22)\nviz_1.set_ylabel('Count of listings',size=16)\nviz_1.set_xlabel('Host IDs',size=16)\nviz_1.set_xticklabels(viz_1.get_xticklabels(), rotation=45)","8225cdef":"sns.countplot(airbnb['neighbourhood_group'], palette=\"plasma\")\nfig = plt.gcf()\nfig.set_size_inches(16,5)\nplt.xlabel('Neighbourhood groups',size=18)\nplt.ylabel('Counts',size=18)\nplt.title('Neighbourhood Group\\n',size=22)","daa73a9f":"plt.figure(figsize=(16,6))\nax = sns.boxplot(data=airbnb, x='neighbourhood_group',y='availability_365',palette='rainbow')\nplt.title(\"Room availability with respect to neighbourhood groups\\n\",size=22)","a2ead61c":"plt.figure(figsize=(18,7))\nsns.distplot(airbnb[(airbnb['minimum_nights'] <= 30) & (airbnb['minimum_nights'] > 0)]['minimum_nights'], bins=31)\nplt.ioff()\nplt.title(\"Mininmum night stays in AirBNB hotels\")","3fd97be8":"plt.figure(figsize=(14,7))\nsns.scatterplot(airbnb.longitude,airbnb.latitude,hue=airbnb.neighbourhood_group)\nplt.ioff()\nplt.xlabel('Longitudes',size=16)\nplt.ylabel('Latitudes',size=16)\nplt.title(\"Map of neighbourhood groups\\n\",size=21)","632f100a":"plt.style.use('fivethirtyeight')\nfig,ax=plt.subplots(1,2,figsize=(15,8))\nclr = (\"blue\", \"forestgreen\", \"gold\", \"red\", \"purple\",'cadetblue','hotpink','orange','darksalmon','brown')\nairbnb.neighbourhood.value_counts().sort_values(ascending=False)[:10].sort_values().plot(kind='barh',color=clr,ax=ax[0])\nax[0].set_title(\"Top 10 neighbourhood by the number of rooms\",size=20)\nax[0].set_xlabel('rooms',size=18)\n\n\ncount=airbnb['neighbourhood'].value_counts()\ngroups=list(airbnb['neighbourhood'].value_counts().index)[:10]\ncounts=list(count[:10])\ncounts.append(count.agg(sum)-count[:10].agg('sum'))\ngroups.append('Other')\ntype_dict=pd.DataFrame({\"group\":groups,\"counts\":counts})\nclr1=('brown','darksalmon','orange','hotpink','cadetblue','purple','red','gold','forestgreen','blue','plum')\nqx = type_dict.plot(kind='pie', y='counts', labels=groups,colors=clr1,autopct='%1.1f%%', pctdistance=0.9, radius=1.2,ax=ax[1])\nplt.legend(loc=0, bbox_to_anchor=(1.15,0.4)) \nplt.subplots_adjust(wspace =0.5, hspace =0)\nplt.ioff()\nplt.ylabel('')\npass","fe70591a":"df = airbnb\nsns.countplot(df.iloc[:100,2], palette=\"hsv\")\nfig = plt.gcf()\nfig.set_size_inches(20,6)\nplt.xticks(rotation=90)\nplt.xlabel('Neighbourhoods',size=18)\nplt.ylabel('Neighbourhoods',size=18)\nplt.title('Unique Neighbourhood Counts\\n',size=22)","4cfe8812":"#Restaurants delivering Online or not\nsns.countplot(airbnb['room_type'], palette=\"Set1\")\nfig = plt.gcf()\nfig.set_size_inches(16,8)\nplt.xlabel('Room types',size=18)\nplt.ylabel('Counts',size=18)\nplt.title('Online booking stats of rooms\\n',size=22)","ff56794e":"plt.figure(figsize=(14,7))\nsns.scatterplot(airbnb.longitude,airbnb.latitude,hue=airbnb.room_type)\nplt.ioff()\nplt.xlabel('Longitudes',size=16)\nplt.ylabel('Latitudes',size=16)\nplt.title(\"Map of room types\\n\",size=21)","4977aece":"plt.figure(figsize=(14,7))\nsns.scatterplot(airbnb.longitude,airbnb.latitude,hue=airbnb.availability_365)\nplt.ioff()\nplt.xlabel('Longitudes',size=16)\nplt.ylabel('Latitudes',size=16)\nplt.title(\"Map of room availability\\n\",size=21)","8f50d161":"from wordcloud import WordCloud\nplt.subplots(figsize=(25,10))\nwordcloud = WordCloud(\n                          background_color='black',\n                          width=1500,\n                          height=1080\n                         ).generate(\" \".join(airbnb.neighbourhood))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('neighbourhood.png')\nplt.show()","f1bd7f9c":"## **2. Importing the dataset**","d9dae43f":"## **8. Conclusion**\n\n***i. Maximum tourists prefer entire room \/ apartment***\n\n***ii. Maximum bookings are in Williamsburg and Minimum booking is Midtown***\n\n***iii. Queens properties are costlier and hence booked the least***\n\n***iv. Staten Islands have the most economic bookings and a large number of tourists ply there***\n\n***v. Bedfort, Stuyvesant, East Side, West Side and Kitchen are top 5 buzzwords in the reviews***\n\n","89cc7bbe":"### Author's Note:\n\n**Please feel free to upvote if you appreciate my works. This will motivate me to share many more such works and develop myself. All forms of critisims are openly accepted and recommended. Thank you! \ud83d\ude0a**","b428e010":"## **3. Data Exploration**","7449291d":"## **4. Remove Duplicate and Null values**","bf031c58":"## **1. Importing Necessary Libraries**","621e97de":"## **6. Statistical Inferencing**","796883eb":"## **5. Filter necessary data items**","f34ca198":"## **7. Data Visualization**"}}