{"cell_type":{"6f63cf4b":"code","5e82b21e":"code","1aa303c2":"code","f9804360":"code","5779f059":"code","dc1ba115":"code","1d31df4f":"code","a432447c":"code","7ea16bac":"code","b1898016":"code","d152bd8e":"code","51c174c8":"code","ae49ed8a":"code","0c5edc49":"code","4c07397d":"code","b0cf80ca":"code","37b41487":"code","688c54d5":"code","9bdd1875":"code","f4d5bc73":"code","4090bb5a":"code","7d1f7047":"code","687e58ee":"code","15590774":"code","d5ef0de0":"code","74be65d0":"code","0e17b004":"code","6793ffb6":"code","4ee3fe63":"code","b21490fe":"code","df1d41a2":"code","b8e56126":"code","27538a34":"code","13582428":"code","c13b9458":"code","943e5b52":"code","68bbbde2":"markdown","9d061152":"markdown","921aabe5":"markdown","029729c1":"markdown","46776f8d":"markdown","6d1c499e":"markdown","ed639310":"markdown","5ec94563":"markdown","0428d3da":"markdown","78abc9e2":"markdown","8d715a8b":"markdown","4a8ff6d5":"markdown","cabb8f93":"markdown","2919653b":"markdown","36aa9d98":"markdown","8e04bde7":"markdown"},"source":{"6f63cf4b":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\n%matplotlib inline ","5e82b21e":"train = pd.read_csv('..\/input\/bigmart-sales-data\/Train.csv')\ntest = pd.read_csv('..\/input\/bigmart-sales-data\/Test.csv')","1aa303c2":"train['source'] = 'train'\ntest['source'] = 'test'\ntest['Item_Outlet_Sales'] = 0\ndata = pd.concat([train,test],sort=False)","f9804360":"data.shape","5779f059":"data.info()","dc1ba115":"data['Item_Outlet_Sales'].describe()","1d31df4f":"import seaborn as sns\nsns.distplot(data['Item_Outlet_Sales'])\nplt.show()","a432447c":"data.info()","7ea16bac":"cat_var = data.select_dtypes(include =[np.object])\ncat_var.shape","b1898016":"num_var = data.select_dtypes(include=[np.float64])\nnum_var.shape","d152bd8e":"cat_var.isnull().sum()","51c174c8":"num_var.isnull().sum()","ae49ed8a":"data.apply(lambda x : len(x.unique()))","0c5edc49":"data.boxplot(column='Item_Outlet_Sales',by='Item_Fat_Content')","4c07397d":"for var in cat_var:\n    data[var].fillna(method='ffill',inplace=True)","b0cf80ca":"for var in num_var:\n    mean = np.around(np.mean(data[var]))\n    data[var].fillna(mean,inplace = True)","37b41487":"data.isnull().sum()","688c54d5":"plt.figure(figsize =(10,9))\nplt.subplot(311)\n\nax = sns.boxplot(x = 'Outlet_Size',y = 'Item_Outlet_Sales',data=data ,palette=\"Set1\")\nax.set_title(\"Outlet_size vs Item_Outlet_Sales\")\nplt.subplots_adjust(wspace = 0.2, hspace = 0.4,top = 1.5)","9bdd1875":"plt.figure(figsize=(10,9))\nplt.subplot(212)\n\nax = sns.boxplot(x ='Outlet_Type' ,y='Item_Outlet_Sales',data=data,palette=\"Set1\" )","f4d5bc73":"#Determine average visibility of a product\nvisibility_avg = data.pivot_table(values='Item_Visibility', index='Item_Identifier')\n\n#Impute 0 values with mean visibility of that product:\nmissing_values = (data['Item_Visibility'] == 0)\n\ndata.loc[missing_values,'Item_Visibility'] = data.loc[missing_values,'Item_Identifier'].apply(lambda x: visibility_avg.at[x, 'Item_Visibility'])\n","4090bb5a":"data['Item_Type_Combined'] = data['Item_Identifier'].apply(lambda x:x[0:2])\ndata['Item_Type_Combined'] = data['Item_Type_Combined'].map({'FD':'food','NC':'Non_consum','DR':'Drink'})\ndata['Item_Type_Combined'].value_counts()","7d1f7047":"data.info()","687e58ee":"plt.figure(figsize=(10,9))\nplt.subplot(212)\n\nax = sns.boxplot(x ='Item_Type_Combined' ,y='Item_Outlet_Sales',data=data,palette=\"Set1\" )","15590774":"data['Item_Fat_Content'] = data['Item_Fat_Content'].replace({'LF':'Low Fat','reg':'Regular','low fat':'Low Fat'})","d5ef0de0":"data['Item_Fat_Content'].value_counts()","74be65d0":"plt.figure(figsize=(10,9))\nplt.subplot(212)\n\nax = sns.boxplot(x ='Item_Fat_Content' ,y='Item_Outlet_Sales',data=data,palette=\"Set1\" )","0e17b004":"data.groupby('Outlet_Establishment_Year')['Item_Outlet_Sales'].mean().plot.bar()","6793ffb6":"data['Outlet_Establishment_Year'].describe()","4ee3fe63":"data['Outlet_Year'] = 2019 - data['Outlet_Establishment_Year']\ndata['Outlet_Year'].describe()","b21490fe":"from sklearn.preprocessing import LabelEncoder\n\nencode = LabelEncoder()\n\ndata['Outlet'] = encode.fit_transform(data['Outlet_Identifier'])\n\nvar_mod = ['Item_Fat_Content','Outlet_Location_Type','Outlet_Size','Item_Type_Combined','Outlet_Type','Outlet']\nfor i in var_mod:\n    data[i] = encode.fit_transform(data[i])","df1d41a2":"data.dtypes","b8e56126":"data = pd.get_dummies(data,columns = var_mod)","27538a34":"data.dtypes","13582428":"plt.figure(figsize=(10,9))\nplt.subplot(212)\n\nax = sns.boxplot(x ='Outlet_Year' ,y='Item_Outlet_Sales',data=data,palette=\"Set1\" )","c13b9458":"train = data.loc[data['source']==\"train\"]\ntest = data.loc[data['source']==\"test\"]","943e5b52":"train.shape , test.shape","68bbbde2":"we placed all the missing values with mean so by that there is no missing values in data now ","9d061152":"we are with both object type and numerical lets saparate thous ","921aabe5":"according to product :\n\n1 . Brand,packaging,Advertising,Visibility in Store,offers will show very good affect on product sales ","029729c1":"concate both perform feature engineering and then divide them later again.","46776f8d":"by this we can say that Some of \u2018Low Fat\u2019 values mis-coded as \u2018low fat\u2019 and \u2018LF\u2019. Also, some of \u2018Regular\u2019 are mentioned as \u2018regular\u2019.","6d1c499e":"and in our data set one attribute Item_visibility which mean The % of total display area of all products in a store allocated to the particular product but does not make sense with 0 so lets consider it as missing values and impute wirh mean visibility","ed639310":"Deviate from the normal distribution and \nHaving appreciable positive skewness.","5ec94563":"in categorical var we have 4016 missing values of Outlet_size and lets check in numerical var","0428d3da":"it will make more sense if we have noe many years did the Outlet is being woring for so lets use Outlet_Establishment_Year and make a new attribute Outlet_years this can be done by ","78abc9e2":"we have 2439 missing values in Item_Weight \n\nlets see Unique values of each attribute ","8d715a8b":"if we observer in Item_Identifier there unique key have 'FD' if product is related to food and 'DR' if the product is Drink \nand 'NC' if it is Non_consumable so lets make a new variable by combining them ","4a8ff6d5":"by this we can say that there are totally 1559 products and 10 Outlets and there are totally 16 types of Item ","cabb8f93":"conclusion ---------\n\n1 . Stores located in urban or Tier 1 cities should have higher sales because of the higher income levels of people there.\n2 . Stores with higher population will have more sales \n3 . Stores located within popular marketplaces should have higher sales because of better access to customers.\n4 . Stores with large space . Stores which are very big in size should have higher sales as they act like one-stop-shops and people would prefer getting everything from one place","2919653b":"as sklearn only accepts only numerical variables, we  converted all categories into numeric types ","36aa9d98":"Now our data is ready for model building","8e04bde7":"as Item_Outlet_Sales is the main prediction factor lets see how i"}}