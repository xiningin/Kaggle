{"cell_type":{"0c0b74ac":"code","437320b1":"code","f019de2a":"code","0965d2f4":"code","78a7bea3":"code","55ee9e7c":"code","399c6463":"code","c52df747":"code","94642584":"code","a5e11b86":"code","8293d0a0":"code","7adb1f29":"code","5903868c":"code","fa92f15c":"code","fab449d4":"code","1b375eb8":"code","b57677a2":"code","931b4e76":"code","ae1caeb8":"code","31652e85":"code","ba0d6ea2":"code","8c62e4d3":"code","05578b68":"code","41e81697":"code","e2184571":"code","282abad8":"code","8f746d4e":"code","b0cb9dab":"code","b8fed117":"code","3cf8939e":"code","7a275b6b":"code","d83bc8ec":"code","ca7037be":"code","99c1b161":"code","c253e187":"code","463201e8":"code","2c66749f":"markdown","0dcdeb07":"markdown","2dc4c061":"markdown","289efac8":"markdown","e1b074c0":"markdown","89defd51":"markdown","edcebda4":"markdown","09002838":"markdown","42dc7c76":"markdown","b8b8918a":"markdown","98a21367":"markdown","5d6f5a11":"markdown","a4618f3f":"markdown","4d3be376":"markdown","299f26fd":"markdown","1386396c":"markdown","46ef2f0e":"markdown","c7fbf8b8":"markdown","60bc5b16":"markdown","066f0a51":"markdown","cea83aba":"markdown","41596434":"markdown","11ece74e":"markdown","22d35545":"markdown"},"source":{"0c0b74ac":"import json\nimport pandas as pd\n\nwith open('..\/input\/train.json', 'r') as iodata:\n    data = json.load(iodata)\n    dataset = pd.DataFrame(data)\n    \ndataset.head()","437320b1":"from functools import reduce\nimport numpy as np\n\n# Gi\u1ea3 s\u1eed m\u1ed9t texts c\u00f3 3 c\u00e2u v\u0103n l\u00e0 c\u00e1c ph\u1ea7n t\u1eed trong list nh\u01b0 b\u00ean d\u01b0\u1edbi\ntexts = [['i', 'have', 'a', 'cat'], \n        ['he', 'have', 'a', 'dog'], \n        ['he', 'and', 'i', 'have', 'a', 'cat', 'and', 'a', 'dog']]\n\ndictionary = list(enumerate(set(reduce(lambda x, y: x + y, texts))))\n# Dictionary s\u1ebd ch\u1ee9a to\u00e0n b\u1ed9 c\u00e1c t\u1eeb c\u1ee7a texts.\n\ndef bag_of_word(sentence):\n    # Kh\u1edfi t\u1ea1o m\u1ed9t vector c\u00f3 \u0111\u1ed9 d\u00e0i b\u1eb1ng v\u1edbi t\u1eeb \u0111i\u1ec3n.\n    vector = np.zeros(len(dictionary))\n    # \u0110\u1ebfm c\u00e1c t\u1eeb trong m\u1ed9t c\u00e2u xu\u1ea5t hi\u1ec7n trong t\u1eeb \u0111i\u1ec3n.\n    for i, word in dictionary:\n        count = 0\n        # \u0110\u1ebfm s\u1ed1 t\u1eeb xu\u1ea5t hi\u1ec7n trong m\u1ed9t c\u00e2u.\n        for w in sentence:\n            if w == word:\n                count += 1\n        vector[i] = count\n    return vector\n            \nfor i in texts:\n    print(bag_of_word(i))","f019de2a":"from sklearn.feature_extraction.text import CountVectorizer\n\nvect = CountVectorizer(ngram_range = (1, 1))\nvect.fit_transform(['you have no dog', 'no, you have dog']).toarray()","0965d2f4":"vect.vocabulary_","78a7bea3":"vect = CountVectorizer(ngram_range = (1, 2))\nvect.fit_transform(['you have no dog', 'no, you have dog']).toarray()","55ee9e7c":"vect.vocabulary_","399c6463":"from sklearn.feature_extraction.text import CountVectorizer\nfrom scipy.spatial.distance import euclidean\n\nvect = CountVectorizer(ngram_range = (3, 3), analyzer = 'char_wb')\nn1, n2, n3, n4 = vect.fit_transform(['andersen', 'peterson', 'petrov', 'smith']).toarray()\neuclidean(n1, n2), euclidean(n2, n3), euclidean(n3, n4)","c52df747":"# C\u00e0i \u0111\u1eb7t package pytesseract\nimport sys\n!{sys.executable} -m pip install pytesseract","94642584":"# C\u00e0i \u0111\u1eb7t terract\n!{sys.executable} -m pip install tesseract","a5e11b86":"from pytesseract import image_to_string\nfrom PIL import Image\nimport requests\nfrom io import BytesIO\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n%matplotlib inline\n\n##### Just a random picture from search\nimg = 'http:\/\/ohscurrent.org\/wp-content\/uploads\/2015\/09\/domus-01-google.jpg'\nimg = requests.get(img)\n\nimg = Image.open(BytesIO(img.content))\n\n# show image\nimg_arr = np.array(img)\nplt.imshow(img_arr)\n\n# img = Image.open(BytesIO(img.content))\n# text = image_to_string(img)\n# text","8293d0a0":"img2 = requests.get('https:\/\/photos.renthop.com\/2\/8393298_6acaf11f030217d05f3a5604b9a2f70f.jpg')\nimg2 = Image.open(BytesIO(img2.content))\nimg2 = np.array(img2)\nplt.imshow(img2)","7adb1f29":"import sys\n# install package reverse_geocoder\n!{sys.executable} -m pip install reverse_geocoder","5903868c":"import reverse_geocoder as revgc\nrevgc.search((dataset.latitude[1], dataset.longitude[1]))","fa92f15c":"# dataset['created'].apply(lambda x: x.date().weekday())\nfrom datetime import datetime\n\ndef parser(x):\n    # \u0110\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c \u0111\u1ecbnh d\u1ea1ng strftime c\u1ee7a m\u1ed9t chu\u1ed7i k\u00ed t\u1ef1 ta ph\u1ea3i tra trong b\u00e0ng string format time\n    return datetime.strptime(x, '%Y-%m-%d %H:%M:%S')\n\n\ndataset['created'] = dataset['created'].map(lambda x: parser(x))\n#Ki\u1ec3m tra \u0111\u1ecbnh d\u1ea1ng time\nfor i, k in zip(dataset.columns, dataset.dtypes):\n    print('{}: {}'.format(i, k))","fab449d4":"dataset['weekday'] = dataset['created'].apply(lambda x: x.date().weekday())\nprint(dataset['weekday'].head())","1b375eb8":"dataset['is_weekend'] = dataset['created'].apply(lambda x: 1 if x.date().weekday() in [5, 6] else 0)\nprint(dataset['is_weekend'][:5])","b57677a2":"# Download package user_agents\n!{sys.executable} -m pip install user_agents","931b4e76":"import user_agents\n# Gi\u1ea3 \u0111\u1ecbnh c\u00f3 m\u1ed9t user agent nh\u01b0 b\u00ean d\u01b0\u1edbi\nua = 'Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/537.36 (KHTML, like Gecko) Ubuntu Chromium\/56.0.2924.76 Chrome\/56.0.2924.76 Safari\/537.36'\n# Parser th\u00f4ng tin user agent\nua = user_agents.parse(ua)\n# Khai th\u00e1c c\u00e1c thu\u1ed9c t\u00ednh c\u1ee7a user\nprint('Is a bot? ', ua.is_bot)\nprint('Is mobile? ', ua.is_mobile)\nprint('Is PC? ',ua.is_pc)\nprint('OS Family: ',ua.os.family)\nprint('OS Version: ',ua.os.version)\nprint('Browser Family: ',ua.browser.family)\nprint('Browser Version: ',ua.browser.version)","ae1caeb8":"from sklearn.preprocessing import StandardScaler\nfrom scipy.stats import beta\nfrom scipy.stats import shapiro\nimport statsmodels.api as sm \nimport numpy as np\n\n# T\u1ea1o ra m\u1ed9t chu\u1ed7i ph\u00e2n ph\u1ed1i beta\ndata = beta(1, 10).rvs(1000).reshape(-1, 1)\nprint('data shape:%s'%str(data.shape))\n# S\u1eed d\u1ee5ng ki\u1ec3m \u0111\u1ecbnh shapiro \u0111\u1ec3 ki\u1ec3m tra t\u00ednh ph\u00e2n ph\u1ed1i chu\u1ea9n.\nshapiro(data)","31652e85":"# Gi\u00e1 tr\u1ecb t\u1edbi h\u1ea1n v\u00e0 p-value\nshapiro(StandardScaler().fit_transform(data))\n\n# Gi\u00e1 tr\u1ecb t\u1edbi h\u1ea1n > p-value ch\u00fang ta s\u1ebd b\u00e1c b\u1ecf gi\u1ea3 thuy\u1ebft v\u1ec1 ph\u00e2n ph\u1ed1i chu\u1ea9n.","ba0d6ea2":"# bi\u1ebfn \u0111\u1ed5i d\u1eef li\u1ec7u theo ph\u00e2n ph\u1ed1i chu\u1ea9n:\nprice = np.float64(dataset.price.values)\nprint('Head 5 of original prices:', price[:5])\nprice_std = StandardScaler().fit_transform(price.reshape(-1, 1))\nprint('Head 5 of standard scaling prices:\\n', price_std[:5])","8c62e4d3":"# Bi\u1ebfn \u0111\u1ed5i tr\u00ean t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi c\u00f4ng th\u1ee9c sau:\nprice_std = (price - price.mean()) \/ price.std()\nprint('Head 5 of standard scaling prices:\\n', price_std[:5])","05578b68":"from sklearn.preprocessing import MinMaxScaler\nprice_mm = MinMaxScaler().fit_transform(price.reshape(-1, 1))\nprint('Head of min max scaling price:\\n', price_mm[:5])","41e81697":"# Ho\u1eb7c \u0111\u01a1n gi\u1ea3n h\u01a1n l\u00e0\nprice_mm = (price - price.min())\/(price.max() - price.min())\nprint('Head of min max scaling price:\\n', price_mm[:5])","e2184571":"# T\u1ea1o bi\u1ebfn log price\nprice_log = np.log(price)\n# Ki\u1ec3m tra t\u00ednh ph\u00e2n ph\u1ed1i c\u1ee7a c\u00e1c bi\u1ebfn price, price_std, price_mm, price_log d\u1ef1a tr\u00ean bi\u1ec3u \u0111\u1ed3 Q-Q plot\nsm.qqplot(price, loc = price.mean(), scale = price.std())","282abad8":"sm.qqplot(price_mm, loc = price_mm.mean(), scale = price_mm.std())","8f746d4e":"sm.qqplot(price_std, loc = price_std.mean(), scale = price_std.std())","b0cb9dab":"sm.qqplot(price_log, loc = price_log.mean(), scale = price_log.std())","b8fed117":"price_rm_outlier = price_log[(price_log < 12) & (price_log > 6)]\nsm.qqplot(price_rm_outlier, loc = price_rm_outlier.mean(), scale = price_rm_outlier.std())","3cf8939e":"from sklearn.feature_selection import VarianceThreshold\nfrom sklearn.datasets import make_classification\n\n# L\u1ea5y d\u1eef li\u1ec7u example t\u1eeb package sklearn\nX, y = make_classification()\n\nprint('X: \\n', X[:5, :5])\nprint('y: \\n', y)\nprint('X shape:', X.shape)\nprint('y shape:', y.shape)","7a275b6b":"VarianceThreshold(.5).fit_transform(X).shape","d83bc8ec":"VarianceThreshold(0.9).fit_transform(X).shape","ca7037be":"from sklearn.feature_selection import SelectKBest, f_classif\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import cross_val_score\n\nX_kbest = SelectKBest(f_classif, k = 5).fit_transform(X, y)\nX_kvar = VarianceThreshold(0.9).fit_transform(X)\nprint('X shape after applying statistical selection: ',X_kbest.shape)\nprint('X shape after apply variance selection: ',X_kvar.shape)","99c1b161":"# H\u1ed3i qui logistic\nlogit = LogisticRegression(solver='lbfgs', random_state=1)\n\n# Cross validation cho:\n# 1.d\u1eef li\u1ec7u g\u1ed1c\nacc_org = cross_val_score(logit, X, y, scoring = 'accuracy', cv = 5).mean()\n# 2. \u00c1p d\u1ee5ng ph\u01b0\u01a1ng sai\nacc_var = cross_val_score(logit, X_kvar, y, scoring = 'accuracy', cv = 5).mean()\n# 3. \u00c1p d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p th\u1ed1ng k\u00ea\nacc_stat = cross_val_score(logit, X_kbest, y, scoring = 'accuracy', cv = 5).mean()\n\nprint('Accuracy tr\u00ean d\u1eef li\u1ec7u g\u1ed1c:', acc_org)\nprint('Accuracy \u00e1p d\u1ee5ng ph\u01b0\u1edbng sai:', acc_var)\nprint('Accuracy d\u1ee5ng pp th\u1ed1ng k\u00ea:', acc_stat)","c253e187":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import LinearSVC\nfrom sklearn.feature_selection import SelectFromModel\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.pipeline import make_pipeline\n\n# H\u1ed3i qui theo RandomForest\nrdFrt = RandomForestClassifier(n_estimators = 10, random_state = 1)\n# H\u1ed3i qui theo LinearSVC\nlnSVC = LinearSVC(C=0.01, penalty=\"l1\", dual=False)\n# T\u1ea1o m\u1ed9t pipeline th\u1ef1c hi\u1ec7n l\u1ef1a ch\u1ecdn bi\u1ebfn t\u1eeb RandomForest model v\u00e0 h\u1ed3i qui theo logit\npipe1 = make_pipeline(StandardScaler(), SelectFromModel(estimator = rdFrt), logit)\n# T\u1ea1o m\u1ed9t pipeline th\u1ef1c hi\u1ec7n l\u1ef1a ch\u1ecdn bi\u1ebfn t\u1eeb Linear SVC model v\u00e0 h\u1ed3i qui theo logit\npipe2 = make_pipeline(StandardScaler(), SelectFromModel(estimator = lnSVC), logit)\n# Cross validate \u0111\u1ed1i v\u1edbi \n# 1. M\u00f4 h\u00ecnh logit\nacc_log = cross_val_score(logit, X, y, scoring = 'accuracy', cv = 5).mean()\n# 2. M\u00f4 h\u00ecnh RandomForest\nacc_rdf = cross_val_score(rdFrt, X, y, scoring = 'accuracy', cv = 5).mean()\n# 3. M\u00f4 h\u00ecnh pipe1\nacc_pip1 = cross_val_score(pipe1, X, y, scoring = 'accuracy', cv = 5).mean()\n# 3. M\u00f4 h\u00ecnh pipe2\nacc_pip2 = cross_val_score(pipe2, X, y, scoring = 'accuracy', cv = 5).mean()\n\nprint('Accuracy theo logit:', acc_log)\nprint('Accuracy theo random forest:', acc_rdf)\nprint('Accuracy theo pipeline 1:', acc_pip1)\nprint('Accuracy theo pipeline 2:', acc_pip2)","463201e8":"!{sys.executable} -m pip install mlxtend\nfrom mlxtend.feature_selection import SequentialFeatureSelector\n\nselector = SequentialFeatureSelector(logit, scoring = 'accuracy', \n                                     verbose = 2, \n                                     k_features = 3,\n                                     forward = False,\n                                     n_jobs = -1)\n\nselector.fit(X, y)","2c66749f":"T\u1eadp d\u1eef li\u1ec7u v\u1eabn c\u00f2n nguy\u00ean c\u00e1c bi\u1ebfn do to\u00e0n b\u1ed9 c\u00e1c ph\u01b0\u01a1ng sai \u0111\u1ec1u > 0.5. N\u1ebfu ta n\u00e2ng ng\u01b0\u1ee1ng n\u00e0y l\u00ean 0.9.","0dcdeb07":"Qu\u00e1 tr\u00ecnh n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 b\u1edfi bi\u1ec3u \u0111\u1ed3 b\u00ean d\u01b0\u1edbi:\n\n![Qu\u00e1 tr\u00ecnh b\u1ecf t\u00fai](https:\/\/i.imgur.com\/jjlkeTI.png)\n\n\n\nC\u00e1c bi\u1ec3u di\u1ec5n theo t\u00fai t\u1eeb c\u00f3 h\u1ea1n ch\u1ebf \u0111\u00f3 l\u00e0 ch\u00fang ta kh\u00f4ng ph\u00e2n bi\u1ec7t \u0111\u01b0\u1ee3c 2 c\u00e2u v\u0103n c\u00f3 c\u00f9ng c\u00e1c t\u1eeb b\u1edfi t\u00fai t\u1eeb kh\u00f4ng ph\u00e2n bi\u1ec7t th\u1ee9 t\u1ef1 tr\u01b0\u1edbc sau c\u1ee7a c\u00e1c t\u1eeb trong m\u1ed9t c\u00e2u. Ch\u1eb7ng nh\u01b0 'you have no dog' v\u00e0 'no, you have dog' l\u00e0 2 c\u00e2u v\u0103n c\u00f3 bi\u1ec3u di\u1ec5n gi\u1ed1ng nhau m\u1eb7c d\u00f9 c\u00f3 \u00fd ngh\u0129a tr\u00e1i ng\u01b0\u1ee3c nhau. Ch\u00ednh v\u00ec th\u1ebf ph\u01b0\u01a1ng ph\u00e1p N-gram s\u1ebd \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng thay th\u1ebf.","2dc4c061":"**Theo range minmax**\n\nCh\u00fang ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng MinMaxScaler \u0111\u1ec3 bi\u1ebfn \u0111\u1ed5i d\u1eef li\u1ec7u.","289efac8":"Ta c\u00f3 th\u1ec3 t\u1ea1o ra m\u1ed9t bi\u1ebfn tr\u1ea3 v\u1ec1 tr\u1ea1ng th\u00e1i ng\u00e0y c\u00f3 ph\u1ea3i l\u00e0 cu\u1ed1i tu\u1ea7n b\u1eb1ng ki\u1ec3m tra weekday() c\u00f3 r\u01a1i v\u00e0o [5, 6] hay kh\u00f4ng.","e1b074c0":"Ta c\u00f3 th\u1ec3 th\u1ea5y m\u00f4 h\u00ecnh xu\u1ea5t ph\u00e1t t\u1eeb 20 bi\u1ebfn ban \u0111\u1ea7u v\u00e0 sau m\u1ed7i m\u1ed9t qu\u00e1 tr\u00ecnh s\u1ebd lo\u1ea1i d\u1ea7n c\u00e1c bi\u1ebfn cho \u0111\u1ebfn khi s\u1ed1 l\u01b0\u1ee3ng bi\u1ebfn t\u1ed1i thi\u1ec3u \u0111\u1ea1t \u0111\u01b0\u1ee3c l\u00e0 3 \u0111\u01b0\u1ee3c khai b\u00e1o trong h\u00e0m SequentialFeatureSelector. Sau m\u1ed7i qu\u00e1 tr\u00ecnh m\u1ee9c \u0111\u1ed9 accuracy s\u1ebd t\u0103ng d\u1ea7n.\n\n# 5. Nh\u1eadn x\u00e9t.\n\nNh\u01b0 v\u1eady sau b\u00e0i n\u00e0y c\u00e1c b\u1ea1n \u0111\u00e3 nh\u1eadn ra \u0111\u01b0\u1ee3c Feature Engineering quan tr\u1ecdng nh\u01b0 th\u1ebf n\u00e0o trong vi\u1ec7c t\u1ea1o ra m\u1ed9t m\u00f4 h\u00ecnh d\u1ef1 b\u00e1o c\u00f3 s\u1ee9c m\u1ea1nh. T\u1ed5ng h\u1ee3p l\u1ea1i c\u00e1c ph\u01b0\u01a1ng ph\u00e1p feature engineering:\n\n1. Tr\u00edch l\u1ecdc feature: \u1ee8ng d\u1ee5ng trong deep learning nh\u01b0 x\u1eed l\u00fd \u1ea3nh v\u00e0 x\u1eed l\u00fd ng\u00f4n ng\u1eef t\u1ef1 nhi\u00ean, ph\u00e2n r\u00e3 th\u1eddi gian, l\u00e0m vi\u1ec7c v\u1edbi d\u1eef li\u1ec7u \u0111\u1ecba l\u00fd, d\u1eef li\u1ec7u ng\u01b0\u1eddi d\u00f9ng tracking t\u1eeb c\u00e1c h\u1ec7 th\u1ed1ng web, app.\n2. Bi\u1ebfn \u0111\u1ed5i feature: Minmax scaling, Unit length scaling, Standardization.\n3. L\u1ef1a ch\u1ecdn feature: S\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p th\u1ed1ng k\u00ea, m\u00f4 h\u00ecnh ho\u1eb7c grid search.\n\nC\u00e2u h\u1ecfi \u0111\u1eb7t ra:\n\n> B\u00ean c\u1ea1nh nh\u1eefng thu\u1eadt to\u00e1n, modeler c\u00f3 c\u1ea7n ki\u1ebfn th\u1ee9c v\u1ec1 l\u0129nh v\u1ef1c nghi\u00ean c\u1ee9u (knowledge domain) kh\u00f4ng?\n\n\u0110\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t m\u00f4 h\u00ecnh t\u1ed1t kh\u00f4ng ch\u1ec9 c\u1ea7n c\u00f3 Ki\u1ebfn th\u1ee9c v\u1ec1 m\u00f4 h\u00ecnh m\u00e0 c\u00e1c hi\u1ec3u bi\u1ebft v\u1ec1 l\u0129nh v\u1ef1c c\u0169ng r\u1ea5t quan tr\u1ecdng. Khi hi\u1ec3u r\u00f5 l\u0129nh v\u1ef1c, modeler n\u1eafm r\u00f5 b\u1ea3n ch\u1ea5t m\u1ed1i quan h\u1ec7 c\u1ee7a c\u00e1c bi\u1ebfn kh\u00f4ng ch\u1ec9 qua c\u00e1c con s\u1ed1 m\u00e0 c\u00f2n tr\u00ean th\u1ef1c ti\u1ec5n. \u0110\u00f3 c\u0169ng l\u00e0 l\u00fd do trong m\u1ed9t d\u1ef1 \u00e1n ph\u00e2n t\u00edch d\u1eef li\u1ec7u lu\u00f4n c\u1ea7n nh\u1eefng BA t\u01b0 v\u1ea5n nghi\u1ec7p v\u1ee5 \u0111\u1ec3 gi\u00fap modeler hi\u1ec3u s\u00e2u h\u01a1n v\u1ec1 m\u1ed7i quan h\u1ec7 tr\u00ean th\u1ef1c ti\u1ec5n.\n\n> Trong m\u1ecdi m\u00f4 h\u00ecnh c\u00f3 n\u00ean th\u1ef1c hi\u1ec7n Feature Engineering?\n\nH\u1ea7u h\u1ebft c\u00e1c m\u00f4 h\u00ecnh hi\u1ec7n \u0111\u1ea1i \u0111\u1ec1u th\u1ef1c hi\u1ec7n feature engineering tr\u01b0\u1edbc khi training m\u00f4 h\u00ecnh b\u1edfi sau khi th\u1ef1c hi\u1ec7n feature engineering ch\u00fang ta s\u1ebd c\u00f3 c\u01a1 h\u1ed9i t\u1ea1o ra m\u1ed9t m\u00f4 h\u00ecnh m\u1ea1nh h\u01a1n. C\u1ea7n so s\u00e1nh nhi\u1ec1u m\u00f4 h\u00ecnh kh\u00e1c nhau \u0111\u1ec3 l\u1ef1a ch\u1ecdn ra \u0111\u00e2u l\u00e0 m\u00f4 h\u00ecnh ph\u00f9 h\u1ee3p nh\u1ea5t, trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng k\u1ebft h\u1ee3p c\u00e1c m\u00f4 h\u00ecnh.\n\n> \u00dd t\u01b0\u1edfng v\u1ec1 Feature Engineering r\u1ea5t nhi\u1ec1u? L\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 t\u00ecm ra m\u1ed9t Feature Engineering t\u1ed1i \u01b0u?\n\nKh\u00f4ng c\u00f3 c\u00e2u tr\u1ea3 l\u1eddi c\u1ee5 th\u1ec3 cho m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p Feature Engineering n\u00e0o l\u00e0 t\u1ed1i \u01b0u. Ch\u1ec9 c\u00f3 qu\u00e1 tr\u00ecnh th\u1eed nghi\u1ec7m m\u1edbi r\u00fat ra \u0111\u01b0\u1ee3c ph\u01b0\u01a1ng ph\u00e1p Feature Engineering n\u00e0o s\u1ebd ph\u00f9 h\u1ee3p v\u1edbi b\u00e0i to\u00e1n c\u1ee5 th\u1ec3 n\u00e0o.\n\n\n# 6. T\u00e0i li\u1ec7u tham kh\u1ea3o.\n\n1. [Gi\u1edbi thi\u1ec7u v\u1ec1 feature engineering - mlcourse.ai](https:\/\/mlcourse.ai\/notebooks\/blob\/master\/jupyter_english\/topic06_features_regression\/topic6_feature_engineering_feature_selection.ipynb?flush_cache=true)\n\n2. [feature engineering - blog machinelearningcoban - Vu Huu Tiep](https:\/\/machinelearningcoban.com\/general\/2017\/02\/06\/featureengineering\/)\n\n3. [tfidf - Information retrieval - wiki](https:\/\/en.wikipedia.org\/wiki\/Tf%E2%80%93idf)\n\n4. [package pytessaract - \u1ee9ng d\u1ee5ng trong OCR - blog pyimagesearch](https:\/\/www.pyimagesearch.com\/2017\/07\/10\/using-tesseract-ocr-python\/)\n\n5. [extract time in python - blog hamelg](http:\/\/hamelg.blogspot.com\/2015\/11\/python-for-data-analysis-part-17.html)\n\n6. [feature scaling - rpub phamdinhkhanh](http:\/\/rpubs.com\/phamdinhkhanh\/398690)\n\n7. [feature scaling - arsenyinfo](https:\/\/www.kaggle.com\/arsenyinfo\/easy-feature-selection-pipeline-0-55-at-lb)","89defd51":"Scale theo ph\u00e2n ph\u1ed1i chu\u1ea9n \u0111\u1ed1i v\u1edbi bi\u1ebfn prices trong b\u1ed9 d\u1eef li\u1ec7u dataset.","edcebda4":"\u0110\u1ecdc m\u1ed9t h\u00ecnh \u1ea3nh thi\u1ebft k\u1ebf c\u0103n h\u1ed9 th\u00f4ng qua link.","09002838":"Nh\u1eefng t\u1eeb hi\u1ebfm khi \u0111\u01b0\u1ee3c t\u00ecm th\u1ea5y trong t\u1eadp v\u0103n b\u1ea3n (corpus) nh\u01b0ng c\u00f3 m\u1eb7t trong m\u1ed9t v\u0103n b\u1ea3n c\u1ee5 th\u1ec3 c\u00f3 th\u1ec3 quan tr\u1ecdng h\u01a1n. Do \u0111\u00f3 c\u1ea7n t\u0103ng tr\u1ecdng s\u1ed1 c\u1ee7a c\u00e1c nh\u00f3m t\u1eeb ng\u1eef \u0111\u1ec3 t\u00e1ch ch\u00fang ra kh\u1ecfi c\u00e1c t\u1eeb ph\u1ed5 bi\u1ebfn. C\u00e1ch ti\u1ebfp c\u1eadn n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 TF-IDF (Term Frequency - Inverse Document Frequency), ch\u00fang ta c\u00f3 th\u1ec3 tham kh\u1ea3o [tf-idf - wiki](https:\/\/en.wikipedia.org\/wiki\/Tf%E2%80%93idf). C\u00e1c ch\u1ec9 s\u1ed1 ch\u00ednh \u0111\u00e1nh gi\u00e1 t\u1ea7n xu\u1ea5t xu\u1ea5t hi\u1ec7n c\u1ee7a m\u1ed9t t\u1eeb trong to\u00e0n b\u1ed9 t\u1eadp v\u0103n b\u1ea3n l\u00e0 idf v\u00e0 tfidf \u0111\u01b0\u1ee3c t\u00ednh nh\u01b0 b\u00ean d\u01b0\u1edbi:\n\n$$\\large idf(t,D) = \\log\\frac{\\mid D\\mid}{df(d,t)+1}$$\n$$\\large tfidf(t,d,D) = tf(t,d) \\times idf(t,D)$$\n\n\u1ede \u0111\u00e2y\n\n* $\\mid D \\mid$ l\u00e0 s\u1ed1 l\u01b0\u1ee3ng c\u00e1c v\u0103n b\u1ea3n trong corpus.\n* $df(d, t)$ l\u00e0 s\u1ed1 l\u01b0\u1ee3ng c\u00e1c v\u0103n b\u1ea3n m\u00e0 t\u1eeb t xu\u1ea5t hi\u1ec7n.\n* $tf(t, d)$ l\u00e0 t\u1ea7n su\u1ea5t c\u00e1c t\u1eeb xu\u1ea5t hi\u1ec7n trong m\u1ed9t v\u0103n b\u1ea3n.\n\nNh\u01b0 v\u1eady m\u1ed9t t\u1eeb c\u00e0ng ph\u1ed5 bi\u1ebfn khi idf c\u00e0ng nh\u1ecf v\u00e0 tfidf c\u00e0ng l\u1edbn.\n\nC\u00e1c ph\u01b0\u01a1ng ph\u00e1p b\u1ecf t\u00fai c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c \u1edf c\u00e1c link nh\u01b0 [Catch me if you can competition](https:\/\/www.kaggle.com\/c\/catch-me-if-you-can-intruder-detection-through-webpage-session-tracking), [bag of app](https:\/\/www.kaggle.com\/xiaoml\/bag-of-app-id-python-2-27392), [bag of event](http:\/\/www.interdigital.com\/download\/58540a46e3b9659c9f000372):\n\nWord2Vec l\u00e0 m\u1ed9t tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t c\u1ee7a thu\u1eadt to\u00e1n nh\u00fang t\u1eeb. S\u1eed d\u1ee5ng Word2Vec v\u00e0 c\u00e1c m\u00f4 h\u00ecnh t\u01b0\u01a1ng t\u1ef1, ch\u00fang ta kh\u00f4ng ch\u1ec9 c\u00f3 th\u1ec3 vector h\u00f3a c\u00e1c t\u1eeb trong m\u1ed9t kh\u00f4ng gian \u0111a chi\u1ec1u (th\u01b0\u1eddng l\u00e0 v\u00e0i tr\u0103m chi\u1ec1u) m\u00e0 c\u00f2n so s\u00e1nh s\u1ef1 t\u01b0\u01a1ng t\u1ef1 v\u1ec1 m\u1eb7t ng\u1eef ngh\u0129a c\u1ee7a ch\u00fang. \u0110\u00e2y l\u00e0 m\u1ed9t v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh v\u1ec1 c\u00e1c khai tri\u1ec3n c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n tr\u00ean c\u00e1c kh\u00e1i ni\u1ec7m vectorized: king - man + woman = queen\n\n![King - man + woman = queen](https:\/\/cdn-images-1.medium.com\/max\/800\/1*K5X4N-MJKt8FGFtrTHwidg.gif)\n\nL\u01b0u \u00fd r\u1eb1ng m\u00f4 h\u00ecnh n\u00e0y kh\u00f4ng hi\u1ec3u \u00fd ngh\u0129a c\u1ee7a c\u00e1c t\u1eeb m\u00e0 ch\u1ec9 c\u1ed1 g\u1eafng \u0111\u1ecbnh v\u1ecb c\u00e1c vect\u01a1 sao cho c\u00e1c t\u1eeb \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong ng\u1eef c\u1ea3nh chung g\u1ea7n nhau. \n\nC\u00e1c m\u00f4 h\u00ecnh nh\u01b0 v\u1eady c\u1ea7n ph\u1ea3i \u0111\u01b0\u1ee3c \u0111\u00e0o t\u1ea1o tr\u00ean c\u00e1c t\u1eadp d\u1eef li\u1ec7u r\u1ea5t l\u1edbn \u0111\u1ec3 c\u00e1c t\u1ecda \u0111\u1ed9 vect\u01a1 n\u1eafm b\u1eaft \u0111\u01b0\u1ee3c c\u00e1c ng\u1eef ngh\u0129a. C\u00e1c m\u00f4 h\u00ecnh pretrained cho x\u1eed l\u00fd ng\u00f4n ng\u1eef t\u1ef1 nhi\u00ean c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u1ea3i v\u1ec1 t\u1ea1i [word2vec - api](https:\/\/github.com\/3Top\/word2vec-api#where-to-get-a-pretrained-models).\n\nC\u00e1c ph\u01b0\u01a1ng ph\u00e1p t\u01b0\u01a1ng t\u1ef1 \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng trong c\u00e1c l\u0129nh v\u1ef1c kh\u00e1c nh\u01b0 trong tin sinh. M\u1ed9t \u1ee9ng d\u1ee5ng kh\u00e1c n\u1eefa l\u00e0 [food2vec](https:\/\/jaan.io\/food2vec-augmented-cooking-machine-intelligence\/). \n\n## 2.2. Tr\u00edch l\u1ecdc \u0111\u1eb7c tr\u01b0ng trong x\u1eed l\u00fd \u1ea3nh\n\nX\u1eed l\u00fd \u1ea3nh l\u00e0 m\u1ed9t l\u0129nh v\u1ef1c v\u1eeba d\u1ec5 v\u00e0 v\u1eeba kh\u00f3. N\u00f3 d\u1ec5 b\u1edfi ch\u00fang ta c\u00f3 th\u1ec3 \u1ee9ng d\u1ee5ng c\u00e1c m\u00f4 h\u00ecnh pretrained m\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i suy nhi\u1ec1u, nh\u01b0ng n\u00f3 c\u0169ng kh\u00f3 h\u01a1n b\u1edfi n\u1ebfu b\u1ea1n mu\u1ed1n x\u00e2y d\u1ef1ng m\u1ed9t m\u00f4 h\u00ecnh cho ri\u00eang m\u00ecnh \u0111\u00f2i h\u1ecfi b\u1ea1n ph\u1ea3i th\u1ef1c s\u1ef1 \u0111\u00e0o s\u00e2u v\u00e0o n\u00f3.\n\nTrong qu\u00e3ng th\u1eddi gian tr\u01b0\u1edbc \u0111\u00e2y khi GPU y\u1ebfu h\u01a1n v\u00e0 \"th\u1eddi k\u00ec ph\u1ee5c h\u01b0ng c\u1ee7a m\u1ea1ng th\u1ea7n kinh\" v\u1eabn ch\u01b0a th\u1ef1c s\u1ef1 x\u1ea3y ra, c\u00e1c \u0111\u1eb7c tr\u01b0ng \u0111\u01b0\u1ee3c t\u1ea1o ra t\u1eeb h\u00ecnh \u1ea3nh l\u00e0 m\u1ed9t l\u0129nh v\u1ef1c ph\u1ee9c t\u1ea1p. Ng\u01b0\u1eddi ta ph\u1ea3i l\u00e0m vi\u1ec7c \u1edf c\u00e1c low-level nh\u01b0 x\u00e1c \u0111\u1ecbnh g\u00f3c, bi\u00ean gi\u1edbi c\u1ee7a c\u00e1c khu v\u1ef1c, th\u1ed1ng k\u00ea ph\u00e2n ph\u1ed1i m\u00e0u s\u1eafc, v.v. C\u00e1c chuy\u00ean gia c\u00f3 kinh nghi\u1ec7m v\u1ec1 th\u1ecb gi\u00e1c m\u00e1y t\u00ednh c\u00f3 th\u1ec3 \u0111\u01b0a ra r\u1ea5t nhi\u1ec1u \u0111i\u1ec3m t\u01b0\u01a1ng \u0111\u1ed3ng gi\u1eefa c\u00e1c ph\u01b0\u01a1ng ph\u00e1p c\u0169 v\u00e0 m\u1ea1ng n\u01a1ron; \u0111\u1eb7c bi\u1ec7t l\u00e0 c\u00e1c m\u1ea1ng n\u01a1 ron t\u00edch ch\u1eadp hi\u1ec7n \u0111\u1ea1i nh\u01b0 [Haar cascades](https:\/\/en.wikipedia.org\/wiki\/Haar-like_feature). N\u1ebfu b\u1ea1n mu\u1ed1n \u0111\u1ecdc th\u00eam, d\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u1ed9t v\u00e0i li\u00ean k\u1ebft \u0111\u1ebfn m\u1ed9t s\u1ed1 th\u01b0 vi\u1ec7n th\u00fa v\u1ecb: [skimage](https:\/\/en.wikipedia.org\/wiki\/Haar-like_feature) v\u00e0 [SimpleCV](http:\/\/simplecv.readthedocs.io\/en\/latest\/SimpleCV.Features.html).\n\nTh\u00f4ng th\u01b0\u1eddng trong l\u0129nh v\u1ef1c computer vision ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng m\u1ea1ng n\u01a1-ron t\u00edch ch\u1eadp. B\u1ea1n kh\u00f4ng c\u1ea7n ph\u1ea3i t\u00ecm ra ki\u1ebfn tr\u00fac v\u00e0 hu\u1ea5n luy\u1ec7n m\u1ea1ng t\u1eeb \u0111\u1ea7u. Thay v\u00e0o \u0111\u00f3, c\u00f3 th\u1ec3 t\u1ea3i xu\u1ed1ng m\u1ed9t m\u1ea1ng hi\u1ec7n \u0111\u1ea1i \u0111\u00e3 \u0111\u01b0\u1ee3c pretrained v\u1edbi tr\u1ecdng s\u1ed1 t\u1eeb c\u00e1c ngu\u1ed3n \u0111\u00e3 \u0111\u01b0\u1ee3c c\u00f4ng b\u1ed1. C\u00e1c nh\u00e0 khoa h\u1ecdc d\u1eef li\u1ec7u th\u01b0\u1eddng th\u1ef1c hi\u1ec7n \u0111i\u1ec1u ch\u1ec9nh \u0111\u1ec3 th\u00edch \u1ee9ng v\u1edbi c\u00e1c m\u1ea1ng n\u00e0y theo nhu c\u1ea7u c\u1ee7a h\u1ecd b\u1eb1ng c\u00e1ch \"t\u00e1ch\" c\u00e1c l\u1edbp k\u1ebft n\u1ed1i \u0111\u1ea7y \u0111\u1ee7 (fully connected layers) cu\u1ed1i c\u00f9ng c\u1ee7a m\u1ea1ng, th\u00eam c\u00e1c l\u1edbp m\u1edbi \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf cho m\u1ed9t nhi\u1ec7m v\u1ee5 c\u1ee5 th\u1ec3, v\u00e0 sau \u0111\u00f3 \u0111\u00e0o t\u1ea1o m\u1ea1ng tr\u00ean d\u1eef li\u1ec7u m\u1edbi. N\u1ebfu nhi\u1ec7m v\u1ee5 c\u1ee7a b\u1ea1n ch\u1ec9 l\u00e0 vector h\u00f3a h\u00ecnh \u1ea3nh, b\u1ea1n ch\u1ec9 c\u1ea7n lo\u1ea1i b\u1ecf c\u00e1c l\u1edbp cu\u1ed1i c\u00f9ng v\u00e0 s\u1eed d\u1ee5ng k\u1ebft qu\u1ea3 \u0111\u1ea7u ra t\u1eeb c\u00e1c l\u1edbp tr\u01b0\u1edbc \u0111\u00f3:\n\n![](https:\/\/cdn-images-1.medium.com\/max\/800\/1*Iw_cKFwLkTVO2SPrOZU2rQ.png)\n\n> \u0110\u00e2y l\u00e0 m\u1ed9t m\u00f4 h\u00ecnh ph\u00e2n l\u1edbp \u0111\u01b0\u1ee3c hu\u1ea5n luy\u1ec7n tr\u00ean m\u1ed9t b\u1ed9 d\u1eef li\u1ec7u t\u1eeb tr\u01b0\u1edbc hay c\u00f2n g\u1ecdi l\u00e0 m\u00f4 h\u00ecnh pretrained. L\u1edbp cu\u1ed1i c\u00f9ng c\u1ee7a m\u1ea1ng \u0111\u01b0\u1ee3c t\u00e1ch ra v\u00e0 s\u1eed d\u1ee5ng \u0111\u1ec3 hu\u1ea5n luy\u1ec7n l\u1ea1i tr\u00ean t\u1eadp d\u1eef li\u1ec7u m\u1edbi nh\u1eb1m \u0111i\u1ec1u ch\u1ec9nh \u0111\u1ec3 d\u1ef1 b\u00e1o cho b\u1ed9 d\u1eef li\u1ec7u m\u1edbi \u0111\u00f3.\n\nTuy nhi\u00ean, ch\u00fang ta s\u1ebd kh\u00f4ng t\u1eadp trung qu\u00e1 nhi\u1ec1u v\u00e0o k\u1ef9 thu\u1eadt m\u1ea1ng n\u01a1 ron. Thay v\u00e0o \u0111\u00f3 c\u00e1c feature \u0111\u01b0\u1ee3c t\u1ea1o th\u1ee7 c\u00f4ng v\u1eabn r\u1ea5t h\u1eefu \u00edch: v\u00ed d\u1ee5 \u0111\u1ed1i v\u1edbi b\u00e0i to\u00e1n trong cu\u1ed9c thi Rental Listing Inquiries Kaggle Competition, \u0111\u1ec3 d\u1ef1 \u0111o\u00e1n m\u1ee9c \u0111\u1ed9 ph\u1ed5 bi\u1ebfn c\u1ee7a danh s\u00e1ch cho thu\u00ea, ta c\u00f3 th\u1ec3 gi\u1ea3 \u0111\u1ecbnh r\u1eb1ng c\u00e1c c\u0103n h\u1ed9 c\u00f3 \u00e1nh s\u00e1ng s\u1ebd thu h\u00fat nhi\u1ec1u s\u1ef1 ch\u00fa \u00fd h\u01a1n v\u00e0 t\u1ea1o m\u1ed9t feature m\u1edbi nh\u01b0 \"gi\u00e1 tr\u1ecb trung b\u00ecnh c\u1ee7a pixel\". B\u1ea1n c\u00f3 th\u1ec3 t\u00ecm th\u1ea5y m\u1ed9t s\u1ed1 v\u00ed d\u1ee5 th\u00fa v\u1ecb trong t\u00e0i li\u1ec7u v\u1ec1 [PIL](http:\/\/pillow.readthedocs.io\/en\/3.1.x\/reference\/ImageStat.html).\n\nN\u1ebfu c\u00f3 v\u0103n b\u1ea3n tr\u00ean h\u00ecnh \u1ea3nh, b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc n\u00f3 \u0111\u1ec3 khai th\u00e1c m\u1ed9t s\u1ed1 th\u00f4ng tin th\u00f4ng qua g\u00f3i ph\u00e1t hi\u1ec7n v\u0103n b\u1ea3n trong h\u00ecnh \u1ea3nh [pytesseract](https:\/\/github.com\/madmaze\/pytesseract).\n","42dc7c76":"N\u1ebfu coi 0.5 l\u00e0 ng\u01b0\u1ee1ng threshold c\u1ee7a ph\u01b0\u01a1ng sai.","b8b8918a":"# 4. L\u1ef1a ch\u1ecdn feature (feature selection)\n\n\u0110\u1ec3 x\u00e2y d\u1ef1ng m\u00f4 h\u00ecnh ch\u00fang ta s\u1ebd r\u1ea5t c\u1ea7n \u0111\u1ebfn th\u00f4ng tin. Tuy nhi\u00ean s\u1ed1 l\u01b0\u1ee3ng th\u00f4ng tin bao nhi\u00eau l\u00e0 \u0111\u1ee7 \u0111\u1ec3 c\u00f3 \u0111\u01b0\u1ee3c m\u1ed9t m\u00f4 h\u00ecnh m\u1ea1nh? Ng\u00e0y nay v\u1edbi s\u1ef1 b\u00f9ng n\u1ed5 c\u1ee7a bigdata, d\u1eef li\u1ec7u d\u01b0\u1eddng nh\u01b0 tr\u1edf n\u00ean qu\u00e1 t\u1ea3i khi\u1ebfn ch\u00fang ta kh\u00f4ng th\u1ec3 \u0111\u01b0a to\u00e0n b\u1ed9 d\u1eef li\u1ec7u v\u00e0o m\u00f4 h\u00ecnh. V\u00ec v\u1eady modeler c\u1ea7n ph\u1ea3i l\u1ef1a ch\u1ecdn c\u00e1c c\u00e1c bi\u1ebfn quan tr\u1ecdng \u0111\u1ec3 h\u1ed3i qui thay v\u00ec l\u1ef1a ch\u1ecdn nhi\u1ec1u bi\u1ebfn nh\u1ea5t c\u00f3 th\u1ec3. B\u1edfi nh\u1eefng h\u1ea1n ch\u1ebf c\u1ee7a vi\u1ec7c c\u00f3 qu\u00e1 nhi\u1ec1u features \u0111\u00f3 l\u00e0:\n\n1. T\u0103ng chi ph\u00ed t\u00ednh to\u00e1n.\n2. Qu\u00e1 nhi\u1ec1u bi\u1ebfn gi\u1ea3i th\u00edch c\u00f3 th\u1ec3 d\u1eabn t\u1edbi overfiting. T\u1ee9c hi\u1ec7n t\u01b0\u1ee3ng m\u00f4 h\u00ecnh ho\u1ea1t \u0111\u1ed9ng r\u1ea5t t\u1ed1i tr\u00ean t\u1eadp train nh\u01b0ng k\u00e9m tr\u00ean t\u1eadp test.\n3. Trong s\u1ed1 c\u00e1c bi\u1ebfn s\u1ebd c\u00f3 nh\u1eefng bi\u1ebfn g\u00e2y nhi\u1ec5u v\u00e0 l\u00e0m gi\u1ea3m ch\u1ea5t l\u01b0\u1ee3ng m\u00f4 h\u00ecnh.\n4. R\u1ed1i lo\u1ea1n th\u00f4ng tin do kh\u00f4ng th\u1ec3 ki\u1ec3m so\u00e1t v\u00e0 hi\u1ec3u h\u1ebft c\u00e1c bi\u1ebfn.\n\n\u0110\u1ec3 kh\u1eafc ph\u1ee5c nh\u1eefng h\u1ea1n ch\u1ebf \u0111\u00f3 ch\u00fang ta s\u1ebd c\u1ea7n \u0111\u1ebfn nh\u1eefng thu\u1eadt to\u00e1n quan tr\u1ecdng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u1ef1a ch\u1ecdn c\u00e1c bi\u1ebfn nh\u01b0 b\u00ean d\u01b0\u1edbi.\n\n## 4.1. Ph\u01b0\u01a1ng ph\u00e1p th\u1ed1ng k\u00ea.\n\nM\u1ed9t trong nh\u1eefng ph\u01b0\u01a1ng ph\u00e1p quan tr\u1ecdng trong c\u00e1c ph\u01b0\u01a1ng ph\u00e1p th\u1ed1ng k\u00ea nh\u1eb1m gi\u1ea3m s\u1ed1 l\u01b0\u1ee3ng bi\u1ebfn l\u00e0 l\u1ef1a ch\u1ecdn d\u1ef1a tr\u00ean ph\u01b0\u01a1ng sai. C\u00e1c bi\u1ebfn kh\u00f4ng bi\u1ebfn \u0111\u1ed9ng s\u1ebd c\u00f3 kh\u1ea3 n\u0103ng gi\u1ea3i th\u00edch k\u00e9m h\u01a1n. Do \u0111\u00f3 \u00fd t\u01b0\u1edfng ch\u00ednh c\u1ee7a ph\u01b0\u01a1ng ph\u00e1p n\u00e0y l\u00e0 t\u00ednh ph\u01b0\u01a1ng sai c\u1ee7a to\u00e0n b\u1ed9 c\u00e1c bi\u1ebfn numeric v\u00e0 lo\u1ea1i b\u1ecf bi\u1ebfn n\u1ebfu n\u00f3 nh\u1ecf h\u01a1n m\u1ed9t ng\u01b0\u1ee1i threshold. ","98a21367":"Ch\u00fang ta s\u1ebd c\u00f9ng \u0111\u00e1nh gi\u00e1 hi\u1ec7u qu\u1ea3 m\u00f4 h\u00ecnh b\u1eb1ng cross validation tr\u01b0\u1edbc v\u00e0 sau l\u1ef1a ch\u1ecdn bi\u1ebfn v\u1edbi KFold = 5. L\u01b0u \u00fd quan tr\u1ecdng l\u00e0 khi so s\u00e1nh hi\u1ec7u qu\u1ea3 c\u00e1c m\u00f4 h\u00ecnh kh\u00e1c nhau tr\u00ean m\u1ed9t t\u1eadp d\u1eef li\u1ec7u ch\u00fang ta lu\u00f4n ph\u1ea3i s\u1eed d\u1ee5ng cross validation thay v\u00ec chia d\u1eef li\u1ec7u ng\u1eabu nhi\u00ean v\u00e0 ch\u1ec9 so s\u00e1nh k\u1ebft qu\u1ea3 d\u1ef1a tr\u00ean m\u1ed9t l\u1ea7n chia m\u1eabu. B\u1edfi cross validation s\u1ebd cover h\u1ebft to\u00e0n b\u1ed9 t\u1eadp d\u1eef li\u1ec7u v\u00e0 m\u00f4 h\u00ecnh h\u1ed3i qui \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng tr\u00ean m\u1ed9t t\u1eadp s\u1ed1 l\u1edbn d\u1eef li\u1ec7u (n-1 folds tr\u00ean t\u1ed5ng s\u1ed1 n folds) n\u00ean s\u1ebd s\u00e1t v\u1edbi m\u00f4 h\u00ecnh h\u1ed3i qui t\u1eeb to\u00e0n b\u1ed9 d\u1eef li\u1ec7u. ","5d6f5a11":"## 2.3. Th\u00f4ng tin \u0111\u1ecba l\u00fd\n\nTrong python ch\u00fang ta c\u00f3 m\u1ed9t package kh\u00e1 ph\u1ed5 bi\u1ebfn trong vi\u1ec7c khai th\u00e1c c\u00e1c th\u00f4ng tin \u0111\u1ecba l\u00fd \u0111\u00f3 l\u00e0 `reverse_geocoder`. C\u00f3 2 d\u1ea1ng b\u00e0i to\u00e1n ch\u00ednh  v\u1edbi th\u00f4ng tin \u0111\u1ecba l\u00fd g\u1ed3m geocoding: m\u00e3 h\u00f3a m\u1ed9t t\u1ecda \u0111\u1ed9 \u0111\u1ecba l\u00fd t\u1eeb m\u1ed9t \u0111\u1ecba ch\u1ec9 v\u00e0 revert geocoding: t\u1eeb th\u00f4ng tin cung c\u1ea5p v\u1ec1 kinh \u0111\u1ed9 v\u00e0 v\u0129 \u0111\u1ed9 tr\u1ea3 v\u1ec1 \u0111\u1ecba ch\u1ec9 c\u1ee7a \u0111\u1ecba \u0111i\u1ec3m v\u00e0 c\u00e1c th\u00f4ng tin c\u00f3 li\u00ean quan. C\u1ea3 hai b\u00e0i to\u00e1n \u0111\u1ec1u c\u00f3 th\u1ec3 gi\u1ea3i quy\u1ebft th\u00f4ng qua API c\u1ee7a google map ho\u1eb7c OpenStreetMap. Sau \u0111\u00e2y l\u00e0 v\u00ed d\u1ee5 tr\u00edch xu\u1ea5t th\u00f4ng tin \u0111\u1ecba l\u00fd t\u1eeb t\u1eadp dataset c\u1ee7a cu\u1ed9c thi Rental Listing Inquiries Kaggle Competition.","a4618f3f":"Nh\u01b0 v\u1eady select d\u1ef1a tr\u00ean m\u00f4 h\u00ecnh Random Forest v\u00e0 Linear SVC \u0111\u00e3 c\u00f3 hi\u1ec7u qu\u1ea3 trong vi\u1ec7c c\u1ea3i thi\u1ec7n \u0111\u1ed9 ch\u00ednh x\u00e1c c\u1ee7a m\u00f4 h\u00ecnh.  B\u00ean c\u1ea1nh vi\u1ec7c th\u1ef1c hi\u1ec7n l\u1ef1a ch\u1ecdn bi\u1ebfn d\u1ef1a tr\u00ean model, ch\u00fang ta c\u00f2n c\u00f3 th\u1ec3 l\u1ef1a ch\u1ecdn bi\u1ebfn theo grid search.\n\n## 4.3. S\u1eed d\u1ee5ng grid search\n\n\u0110\u00e2y l\u00e0 ph\u01b0\u01a1ng ph\u00e1p c\u00f3 th\u1ec3 coi l\u00e0 \u0111\u00e1ng tin c\u1eady nh\u1ea5t trong vi\u1ec7c l\u1ef1a ch\u1ecdn bi\u1ebfn quan tr\u1ecdng. \u00dd t\u01b0\u1edfng ch\u00ednh c\u1ee7a ph\u01b0\u01a1ng ph\u00e1p n\u00e0y \u0111\u00f3 l\u00e0 hu\u1ea5n luy\u00ean m\u00f4 h\u00ecnh tr\u00ean m\u1ed9t t\u1eadp d\u1eef li\u1ec7u con, l\u01b0u l\u1ea1i k\u1ebft q\u1ee7a sau train, l\u1eadp l\u1ea1i qu\u00e1 tr\u00ecnh hu\u1ea5n luy\u1ec7n tr\u00ean nh\u1eefng m\u1eabu con kh\u00e1c, so s\u00e1nh ch\u1ea5t l\u01b0\u1ee3ng c\u00e1c m\u00f4 h\u00ecnh d\u1ef1 b\u00e1o \u0111\u1ec3 t\u00ecm ra m\u1ed9t t\u1eadp c\u00e1c bi\u1ebfn t\u1ed1t nh\u1ea5t. Ph\u01b0\u01a1ng ph\u00e1p n\u00e0y c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0  [Exhaustive Feature Selection](http:\/\/rasbt.github.io\/mlxtend\/user_guide\/feature_selection\/ExhaustiveFeatureSelector\/).\n\nN\u1ebfu nh\u01b0 ch\u00fang ta t\u00ecm ki\u1ebfm tr\u00ean to\u00e0n b\u1ed9 c\u00e1c b\u1ed9 k\u1ebft h\u1ee3p tham s\u1ed1 c\u1ee7a m\u00f4 h\u00ecnh s\u1ebd r\u1ea5t l\u00e2u. Do \u0111\u00f3 vi\u1ec7c \u0111\u1ea7u ti\u00ean ta c\u1ea7n th\u1ef1c hi\u1ec7n l\u00e0 gi\u1edbi h\u1ea1n kh\u00f4ng gian search space. Ban \u0111\u1ea7u ta c\u1ed1 \u0111\u1ecbnh tr\u01b0\u1edbc m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng bi\u1ebfn N, \u0111i qua l\u1ea7n l\u01b0\u1ee3t c\u00e1c k\u1ebft h\u1ee3p c\u1ee7a to\u00e0n b\u1ed9 N bi\u1ebfn \u0111\u00f3 v\u00e0 l\u1ef1a ch\u1ecdn ra b\u1ed9 k\u1ebft h\u1ee3p t\u1ed1t nh\u1ea5t. Khi x\u00e9t v\u1edbi N+1 bi\u1ebfn th\u00ec ta s\u1ebd c\u1ed1 \u0111\u1ecbnh b\u1ed9 k\u1ebft h\u1ee3p t\u1ed1t nh\u1ea5t c\u1ee7a N bi\u1ebfn tr\u01b0\u1edbc \u0111\u00f3 v\u00e0 ch\u1ec9 th\u00eam 1 bi\u1ebfn m\u1edbi v\u00e0o b\u1ed9 k\u1ebft h\u1ee3p n\u00e0y. Qu\u00e1 tr\u00ecnh n\u00e0y ti\u1ebfp t\u1ee5c cho \u0111\u1ebfn khi s\u1ed1 l\u01b0\u1ee3ng c\u00e1c bi\u1ebfn \u0111\u1ea1t m\u1ee9c t\u1ed1i \u0111a ho\u1eb7c t\u1edbi khi h\u00e0m loss fuction m\u00f4 h\u00ecnh kh\u00f4ng gi\u1ea3m n\u1eefa. Ph\u01b0\u01a1ng ph\u00e1p n\u00e0y g\u1ecdi l\u00e0 [Sequential Feature Selection](http:\/\/rasbt.github.io\/mlxtend\/user_guide\/feature_selection\/SequentialFeatureSelector\/)\n\n\u00dd t\u01b0\u1edfng c\u1ee7a Sequential Feature Selection c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n ng\u01b0\u1ee3c l\u1ea1i theo c\u00e1ch c\u1ed1 \u0111\u1ecbnh m\u1ed9t t\u1eadp h\u1ee3p l\u1edbn nh\u1ea5t c\u00e1c bi\u1ebfn, sau \u0111\u00f3 lo\u1ea1i l\u1ea7n l\u01b0\u1ee3t c\u00e1c bi\u1ebfn cho \u0111\u1ebfn khi c\u00e1c ph\u1ea9m ch\u1ea5t c\u1ee7a m\u00f4 h\u00ecnh kh\u00f4ng c\u00f2n \u0111\u01b0\u1ee3c c\u1ea3i thi\u1ec7n. Khi \u0111\u00f3 b\u1ed9 k\u1ebft h\u1ee3p c\u00e1c bi\u1ebfn t\u1ed1i \u01b0u s\u1ebd \u0111\u01b0\u1ee3c l\u1ef1a ch\u1ecdn. B\u00ean d\u01b0\u1edbi ta s\u1ebd ti\u1ebfn h\u00e0nh s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p l\u1ef1a ch\u1ecdn grid search \u0111\u1ed1i v\u1edbi Sequential Feature Selection.","4d3be376":"Khi \u0111\u00f3 d\u1eef li\u1ec7u ch\u1ec9 c\u00f2n 16 bi\u1ebfn c\u00f3 m\u1ee9c bi\u1ebfn \u0111\u1ed9ng l\u1edbn. Ngo\u00e0i ph\u01b0\u01a1ng ph\u00e1p ph\u01b0\u01a1ng sai, ch\u00fang ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p th\u1ed1ng k\u00ea d\u1ef1a tr\u00ean c\u00e1c ch\u1ec9 s\u1ed1  nh\u01b0 $\\chi^2$, $F$ c\u1ee7a ph\u00e2n ph\u1ed1i chi b\u00ecnh ph\u01b0\u01a1ng v\u00e0 Fisher. C\u00e1c ph\u01b0\u01a1ng ph\u00e1p n\u00e0y s\u1ebd \u0111o l\u01b0\u1eddng s\u1ee9c m\u1ea1nh c\u1ee7a m\u00f4 h\u00ecnh khi lo\u1ea1i b\u1ecf l\u1ea7n l\u01b0\u1ee3t c\u00e1c bi\u1ebfn v\u00e0 t\u00ecm ra $k$ bi\u1ebfn t\u1ed1t nh\u1ea5t. Chi ti\u1ebft v\u1ec1 [ph\u01b0\u01a1ng ph\u00e1p th\u1ed1ng k\u00ea](https:\/\/scikit-learn.org\/stable\/modules\/feature_selection.html#univariate-feature-selection) cho b\u1ea1n \u0111\u1ecdc quan t\u00e2m. Ch\u00fang ta s\u1ebd \u00e1p d\u1ee5ng c\u1ea3 2 ph\u01b0\u01a1ng ph\u00e1p \u0111o l\u01b0\u1eddng ph\u01b0\u01a1ng sai v\u00e0 ph\u01b0\u01a1ng ph\u00e1p th\u1ed1ng k\u00ea \u0111\u1ec3 \u0111\u00e1nh gi\u00e1 hi\u1ec7u qu\u1ea3 m\u00f4 h\u00ecnh tr\u01b0\u1edbc v\u00e0 sau l\u1ef1a ch\u1ecdn bi\u1ebfn.","299f26fd":"Nh\u01b0 v\u1eady bi\u1ebfn created \u0111\u00e3 \u0111\u01b0\u1ee3c chuy\u1ec3n v\u1ec1 d\u1ea1ng datetime. Ch\u00fang ta c\u00f3 th\u1ec3 t\u1ea1o ra m\u1ed9t one-hot coding d\u1ef1a v\u00e0o h\u00e0m weekday().","1386396c":"M\u1ed9t th\u00f4ng tin quan tr\u1ecdng n\u1eefa l\u00e0 \u0111\u00f3 l\u00e0 IP ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 d\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 ph\u00e1t hi\u1ec7n th\u00f4ng tin qu\u1ed1c gia, t\u1ec9nh, huy\u1ec7n, x\u00e3,.... N\u1ebfu b\u1ea1n l\u00e0 bi\u1ebft tr\u01b0\u1edbc \u0111i\u1ec1u n\u00e0y b\u1ea1n s\u1ebd c\u00f3 m\u1ed9t c\u00e1ch kh\u00f4n ngoan h\u01a1n \u0111\u1ec3 b\u00e0n lu\u1eadn chuy\u1ec7n ch\u00ednh tr\u1ecb tr\u00ean m\u1ea1ng b\u1edfi m\u1ecdi comments c\u1ee7a b\u1ea1n \u0111\u1ec1u b\u1ecb nh\u00e0 n\u01b0\u1edbc ph\u00e1t hi\u1ec7n \u0111\u1ecba \u0111i\u1ec3m th\u00f4ng qua IP.\n\n# 3. Bi\u1ebfn \u0111\u1ed5i d\u1eef li\u1ec7u (feature transformation)\n\nC\u00e1c chi\u1ec1u d\u1eef li\u1ec7u th\u01b0\u1eddng c\u00f3 s\u1ef1 kh\u00e1c bi\u1ec7t v\u1ec1 \u0111\u01a1n v\u1ecb (scale), ph\u00e2n ph\u1ed1i (distribution) v\u00e0 \u0111i\u1ec1u \u0111\u00f3 t\u00e1c \u0111\u1ed9ng kh\u00f4ng nh\u1ecf l\u00ean hi\u1ec7u qu\u1ea3 ph\u00e2n lo\u1ea1i c\u1ee7a m\u00f4 h\u00ecnh v\u00e0 kh\u1ea3 n\u0103ng h\u1ed9i t\u1ee5 c\u1ee7a c\u00e1c thu\u1eadt to\u00e1n tr\u01b0\u1ee3t gradient. M\u1ed9t t\u1eadp h\u1ee3p d\u1eef li\u1ec7u c\u00f3 \u0111\u01a1n v\u1ecb qu\u00e1 kh\u00e1c bi\u1ec7t gi\u1eefa c\u00e1c bi\u1ebfn th\u01b0\u1eddng khi\u1ebfn gradient kh\u00f4ng h\u1ed9i t\u1ee5 t\u1edbi c\u1ef1c tr\u1ecb to\u00e0n c\u1ee5c. C\u00e1c kh\u00e1c bi\u1ec7t v\u1ec1 \u0111\u01a1n v\u1ecb c\u0169ng khi\u1ebfn vi\u1ec7c \u0111\u00e1nh gi\u00e1 \u1ea3nh h\u01b0\u1edfng c\u1ee7a c\u00e1c bi\u1ebfn b\u1ecb sai l\u1ec7ch nhi\u1ec1u h\u01a1n. M\u1ed9t bi\u1ebfn c\u00f3 \u1ea3nh h\u01b0\u1edfng l\u1edbn (th\u1ec3 hi\u1ec7n qua \u0111\u1ed9 l\u1edbn c\u1ee7a h\u1ec7 s\u1ed1 \u01b0\u1edbc l\u01b0\u1ee3ng) nh\u01b0ng c\u00f3 \u0111\u1ed9 r\u1ed9ng mi\u1ec1n gi\u00e1 tr\u1ecb nh\u1ecf s\u1ebd r\u1ea5t nh\u1ea1y t\u1edbi bi\u1ebfn m\u1ee5c ti\u00eau b\u1edfi ch\u1ec9 m\u1ed9t thay \u0111\u1ed5i r\u1ea5t nh\u1ecf trong gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 c\u0169ng l\u00e0m bi\u1ebfn m\u1ee5c ti\u00eau thay \u0111\u1ed5i l\u1edbn. Nh\u1eefng bi\u1ebfn c\u00f3 \u0111\u1ed9 r\u1ed9ng mi\u1ec1n gi\u00e1 tr\u1ecb l\u1edbn th\u01b0\u1eddng c\u00f3 tham s\u1ed1 nh\u1ecf, v\u00ec v\u1eady ch\u1ec9 m\u1ed9t thay \u0111\u1ed5i nh\u1ecf trong tham s\u1ed1 c\u0169ng l\u00e0m h\u00e0m m\u1ea5t m\u00e1t thay \u0111\u1ed5i l\u1edbn. \u0110i\u1ec1u n\u00e0y d\u1eabn \u0111\u1ebfn thu\u1eadt to\u00e1n tr\u01b0\u1ee3t ng\u1eabu nhi\u00ean c\u1ea7n \u0111i\u1ec1u ch\u1ec9nh t\u1ed1c \u0111\u1ed9 h\u1ecdc (learning rate) ph\u00f9 h\u1ee3p theo \u0111\u1ed9 l\u1edbn \u0111\u01a1n v\u1ecb c\u1ee7a t\u1eebng bi\u1ebfn. Thi\u1ebft k\u1ebf m\u1ed9t thu\u1eadt to\u00e1n gradient nh\u01b0 v\u1eady r\u1ea5t ph\u1ee9c t\u1ea1p. M\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n h\u01a1n \u0111\u00f3 l\u00e0 ch\u00fang ta s\u1ebd \u0111\u1ed3ng h\u00f3a s\u1ef1 kh\u00e1c bi\u1ec7t v\u1ec1 m\u1eb7t \u0111\u01a1n v\u1ecb b\u1eb1ng c\u00e1c k\u0129 thu\u1eadt bi\u1ebfn \u0111\u1ed5i d\u1eef li\u1ec7u. M\u1ed9t s\u1ed1 k\u0129 thu\u1eadt ch\u00ednh bao g\u1ed3m:\n\n1. Bi\u1ebfn \u0111\u1ed5i Standardization. Bi\u1ebfn \u0111\u01b0\u1ee3c rescaling theo k\u00ec v\u1ecdng v\u00e0 \u0111\u1ed9 l\u1ec7ch chu\u1ea9n nh\u01b0 sau:\n\n$$\\mathbf{x} = \\frac{\\mathbf{x}-\\overline{\\mathbf{x}}}{\\sigma(\\mathbf{x})}$$\n\n2. Rescaling theo range. Bi\u1ebfn \u0111\u01b0\u1ee3c \u0111\u01b0a v\u1ec1 c\u00e1c range [0,1] ho\u1eb7c [-1,1] m\u00e0 v\u1eabn gi\u1eefa nguy\u00ean t\u1ef7 l\u1ec7 kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c bi\u1ebfn. Ch\u1eb3ng h\u1ea1n khi c\u00e1c \u0111\u1eb7c tr\u01b0ng n\u1eb1m trong kho\u1ea3ng [0,1]:\n\n$$\\mathbf{x'} = \\frac{\\mathbf{x}-\\min({\\mathbf{x})}}{\\max({\\mathbf{x}}) - \\min({\\mathbf{x}})}$$\n\nKhi \u0111\u1eb7c tr\u01b0ng n\u1eb1m kho\u1ea3ng [-1, 1] c\u00f4ng th\u1ee9c s\u1ebd nh\u01b0 sau:\n\n$$\\mathbf{x'} = \\frac{2(\\mathbf{x}-{\\overline{\\mathbf{x}}})}{\\max({\\mathbf{x}}) - \\min({\\mathbf{x}})}$$\n\n3. Rescaling v\u1ec1 unit length. Khi \u0111\u00f3 \u0111\u1ed9 d\u00e0i kho\u1ea3ng c\u00e1ch norm2 b\u1eb1ng 1 (t\u1ee9c trong kh\u00f4ng gian Euclid vecor s\u1ebd c\u00f3 \u0111\u1ed9 l\u1edbn b\u1eb1ng 1).\n$$\\mathbf{x'} = \\frac{\\mathbf{x}}{||\\mathbf{x}||_2}$$\n\nD\u1eef li\u1ec7u \u0111\u01b0\u1ee3c bi\u1ebfn \u0111\u1ed5i theo ph\u01b0\u01a1ng ph\u00e1p 1 s\u1ebd c\u00f3 ph\u00e2n ph\u1ed1i chu\u1ea9n h\u00f3a v\u1edbi k\u00ec v\u1ecdng b\u1eb1ng 0 v\u00e0 ph\u01b0\u01a1ng sai b\u1eb1ng 1. Ch\u00ednh v\u00ec th\u1ebf n\u00ean c\u00e1ch 1 c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 bi\u1ebfn \u0111\u1ed5i d\u1eef li\u1ec7u theo ph\u00e2n ph\u1ed1i chu\u1ea9n (Z-score distribution ho\u1eb7c normal distribution). D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c bi\u1ebfn \u0111\u1ed5i theo c\u00e1ch 2 s\u1ebd gi\u1edbi h\u1ea1n \u0111\u1ed9 l\u1edbn c\u1ee7a c\u00e1c bi\u1ebfn trong mi\u1ec1n gi\u00e1 tr\u1ecb [0, 1] ho\u1eb7c [-1, 1]. Tuy nhi\u00ean h\u1ea1n ch\u1ebf c\u1ee7a vi\u1ec7c bi\u1ebfn \u0111\u1ed5i v\u1ec1 m\u1ed9t mi\u1ec1n gi\u00e1 tr\u1ecb n\u1eb1m v\u1ec1 m\u1ed9t ph\u00eda c\u1ee7a 0 (trong tr\u01b0\u1eddng h\u1ee3p [0, 1]) \u0111\u00f3 l\u00e0 bi\u1ebfn d\u1ef1 b\u00e1o ch\u1ec9 c\u00f3 th\u1ec3 l\u00e0m t\u0103ng ho\u1eb7c gi\u1ea3m bi\u1ebfn m\u1ee5c ti\u00eau t\u00f9y thu\u1ed9c v\u00e0o d\u1ea5u c\u1ee7a tham s\u1ed1. \u0110i\u1ec1u n\u00e0y l\u00e0m gi\u1ea3m m\u1ee9c \u0111\u1ed9 linh ho\u1ea1t c\u1ee7a m\u00f4 h\u00ecnh. Ch\u00ednh v\u00ec v\u1eady mi\u1ec1n bi\u1ebfn thi\u00ean \u0111\u01b0\u1ee3c khuy\u1ebfn ngh\u1ecb th\u01b0\u1eddng l\u00e0 [-1, 1]. Theo ph\u01b0\u01a1ng ph\u00e1p 3 c\u00e1c bi\u1ebfn s\u1ebd c\u00f3 t\u1ed5ng b\u00ecnh ph\u01b0\u01a1ng c\u00e1c gi\u00e1 tr\u1ecb b\u1eb1ng 1. So v\u1edbi c\u00e1c c\u00e1ch bi\u1ebfn \u0111\u1ed5i 1 v\u00e0 2 th\u00ec gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn \u1edf ph\u01b0\u01a1ng ph\u00e1p 3 s\u1ebd nh\u1ecf h\u01a1n r\u1ea5t nhi\u1ec1u. Ch\u00ednh v\u00ec v\u1eady khi l\u1ef1a ch\u1ecdn bi\u1ebfn \u0111\u1ed5i theo ph\u01b0\u01a1ng ph\u00e1p 3 ch\u00fang ta n\u00ean \u0111i\u1ec1u ch\u1ec9nh t\u1ed1c \u0111\u1ed9 h\u1ecdc nh\u1ecf h\u01a1n m\u1ed9t s\u1ed1 l\u1ea7n so v\u1edbi ph\u01b0\u01a1ng ph\u00e1p 1 v\u00e0 2.\n\n\nT\u1ea5t c\u1ea3 c\u00e1c bi\u1ebfn \u0111\u1ed5i d\u1eef li\u1ec7u \u0111\u1ec1u \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n th\u00f4ng qua sklearn.preprocessing.  \u0110\u00e2y l\u00e0 m\u1ed9t package r\u1ea5t c\u01a1 b\u1ea3n v\u00e0 \u0111\u1ea7y \u0111\u1ee7 v\u1ec1 c\u00e1c m\u00f4 h\u00ecnh machine learning truy\u1ec1n th\u1ed1ng. Bao g\u1ed3m c\u00e1c ch\u1ee9c n\u0103ng: x\u00e2y d\u1ef1ng m\u00f4 h\u00ecnh h\u1ed3i qui, ti\u1ec1n x\u1eed l\u00fd d\u1eef li\u1ec7u,....\n\nB\u00ean d\u01b0\u1edbi s\u1ebd l\u00e0 th\u1ef1c h\u00e0nh bi\u1ebfn \u0111\u1ed5i d\u1eef li\u1ec7u theo:\n\n**Ph\u00e2n ph\u1ed1i chu\u1ea9n:**\n\nScale theo ph\u00e2n ph\u1ed1i chu\u1ea9n \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n th\u00f4ng qua h\u00e0m StandardScaler.","46ef2f0e":"# 2. Tr\u00edch l\u1ecdc \u0111\u1eb7c tr\u01b0ng (feature extraction).\n\nTrong th\u1ef1c t\u1ebf d\u1eef li\u1ec7u th\u01b0\u1eddng \u1edf d\u1ea1ng th\u00f4, \u0111\u1ebfn t\u1eeb nhi\u1ec1u ngu\u1ed3n kh\u00e1c nhau nh\u01b0 v\u0103n b\u1ea3n, c\u00e1c phi\u1ebfu \u0111i\u1ec1u tra, c\u00e1c h\u1ec7 th\u1ed1ng l\u01b0u tr\u1eef, website, app, ,... N\u00ean \u0111\u00f2i h\u1ecfi ng\u01b0\u1eddi x\u00e2y d\u1ef1ng m\u00f4 h\u00ecnh ph\u1ea3i thu th\u1eadp v\u00e0 t\u1ed5ng h\u1ee3p l\u1ea1i c\u00e1c ngu\u1ed3n d\u1eef li\u1ec7u c\u00f3 li\u00ean quan \u0111\u1ebfn \u0111\u1ec1 t\u00e0i nghi\u00ean c\u1ee9u. D\u1eef li\u1ec7u sau \u0111\u00f3 ph\u1ea3i \u0111\u01b0\u1ee3c l\u00e0m s\u1ea1ch v\u00e0 chuy\u1ec3n th\u00e0nh d\u1ea1ng c\u00f3 c\u1ea5u tr\u00fac (structure data) \u0111\u1ec3 ti\u1ebfn h\u00e0nh x\u00e2y d\u1ef1ng m\u00f4 h\u00ecnh. Do \u0111\u00f3 ch\u00fang ta s\u1ebd c\u1ea7n \u0111\u1ebfn c\u00e1c k\u0129 thu\u1eadt tr\u00edch l\u1ecdc \u0111\u1eb7c tr\u01b0ng \u0111\u1ec3 bi\u1ebfn d\u1eef li\u1ec7u t\u1eeb d\u1ea1ng th\u00f4 s\u01a1 nh\u01b0 text, word, c\u00e1c nh\u00e3n sang c\u00e1c bi\u1ebfn s\u1ed1 h\u1ecdc c\u00f3 kh\u1ea3 n\u0103ng \u0111\u1ecbnh l\u01b0\u1ee3ng. M\u1ed9t trong nh\u1eefng ki\u1ec3u d\u1eef li\u1ec7u ph\u1ed5 bi\u1ebfn \u00e1p d\u1ee5ng k\u0129 thu\u1eadt tr\u00edch l\u1ecdc n\u00e0y l\u00e0 d\u1eef li\u1ec7u d\u1ea1ng v\u0103n b\u1ea3n s\u1ebd \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y b\u00ean d\u01b0\u1edbi.\n\n## 2.1. Tr\u00edch l\u1ecdc \u0111\u1eb7c tr\u01b0ng cho v\u0103n b\u1ea3n.\n\nD\u1eef li\u1ec7u v\u0103n b\u1ea3n c\u00f3 th\u1ec3 \u0111\u1ebfn t\u1eeb nhi\u1ec1u ngu\u1ed3n v\u00e0 nhi\u1ec1u \u0111\u1ecbnh d\u1ea1ng kh\u00e1c nhau (k\u00ed t\u1ef1 th\u01b0\u1eddng, k\u00ed t\u1ef1 hoa, k\u00ed t\u1ef1 \u0111\u1eb7c bi\u1ec7t,...). C\u00f3 nhi\u1ec1u ph\u01b0\u01a1ng ph\u00e1p x\u1eed l\u00fd d\u1eef li\u1ec7u ph\u00f9 h\u1ee3p v\u1edbi t\u1eebng \u0111\u1ec1 t\u00e0i c\u1ee5 th\u1ec3. Tuy nhi\u00ean ch\u00fang ta s\u1ebd \u0111i v\u00e0o ph\u01b0\u01a1ng ph\u00e1p ph\u1ed5 bi\u1ebfn nh\u1ea5t.\n\nDo v\u0103n b\u1ea3n l\u00e0 c\u00e1c k\u00ed t\u1ef1 n\u00ean l\u00e0m th\u1ec3 n\u00e0o \u0111\u1ec3 l\u01b0\u1ee3ng h\u00f3a \u0111\u01b0\u1ee3c k\u00ed t\u1ef1? K\u0129 thu\u1eadt m\u00e3 h\u00f3a (tokenization) s\u1ebd gi\u00fap ta th\u1ef1c hi\u1ec7n \u0111i\u1ec1u n\u00e0y.  M\u00e3 h\u00f3a \u0111\u01a1n gi\u1ea3n l\u00e0 vi\u1ec7c ch\u00fang ta chia \u0111o\u1ea1n v\u0103n th\u00e0nh c\u00e1c c\u00e2u v\u0103n, c\u00e1c c\u00e2u v\u0103n th\u00e0nh c\u00e1c t\u1eeb. Trong m\u00e3 h\u00f3a th\u00ec t\u1eeb l\u00e0 \u0111\u01a1n v\u1ecb c\u01a1 s\u1edf. Ch\u00fang ta c\u1ea7n m\u1ed9t b\u1ed9 tokenizer c\u00f3 k\u00edch th\u01b0\u1edbc b\u1eb1ng to\u00e0n b\u1ed9 c\u00e1c t\u1eeb xu\u1ea5t hi\u1ec7n trong v\u0103n b\u1ea3n ho\u1eb7c b\u1eb1ng to\u00e0n b\u1ed9 c\u00e1c t\u1eeb c\u00f3 trong t\u1eeb \u0111i\u1ec3n.  M\u1ed9t c\u00e2u v\u0103n s\u1ebd \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1eb1ng m\u1ed9t sparse vector m\u00e0 m\u1ed7i m\u1ed9t ph\u1ea7n t\u1eed \u0111\u1ea1i di\u1ec7n cho m\u1ed9t t\u1eeb, gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 b\u1eb1ng 0 ho\u1eb7c 1 t\u01b0\u01a1ng \u1ee9ng v\u1edbi t\u1eeb kh\u00f4ng xu\u1ea5t hi\u1ec7n ho\u1eb7c c\u00f3 xu\u1ea5t hi\u1ec7n.  C\u00e1c b\u1ed9 tokernizer s\u1ebd kh\u00e1c nhau cho m\u1ed7i m\u1ed9t ng\u00f4n ng\u1eef kh\u00e1c nhau. Trong ti\u1ebfng vi\u1ec7t c\u00f3 m\u1ed9t b\u1ed9 [tokenizer](https:\/\/github.com\/vncorenlp\/VnCoreNLP) kh\u00e1 n\u1ed5i ti\u1ebfng  c\u1ee7a nh\u00f3m VnCoreNLP nh\u01b0ng \u0111\u01b0\u1ee3c vi\u1ebft tr\u00ean ng\u00f4n ng\u1eef java. T\u1ed1c \u0111\u1ed9 x\u1eed l\u00fd c\u1ee7a java s\u1ebd nhanh h\u01a1n tr\u00ean python \u0111\u00e1ng k\u1ec3 nh\u01b0ng m\u1eb7t h\u1ea1n ch\u1ebf l\u00e0 ph\u1ea7n l\u1edbn c\u00e1c data scientist th\u01b0\u1eddng kh\u00f4ng x\u00e2y d\u1ef1ng model tr\u00ean java.\n\nCh\u00fang ta s\u1eed d\u1ee5ng c\u00e1c t\u00fai t\u1eeb (bags of words) \u0111\u1ec3 t\u1ea1o ra m\u1ed9t vector c\u00f3 \u0111\u1ed9 d\u00e0i b\u1eb1ng \u0111\u1ed9 d\u00e0i c\u1ee7a tokenizer v\u00e0 m\u1ed7i ph\u1ea7n t\u1eed c\u1ee7a t\u00fai t\u1eeb s\u1ebd \u0111\u1ebfm s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a m\u1ed9t t\u1eeb trong c\u00e2u v\u00e0 s\u1eafp x\u1ebfp ch\u00fang theo m\u1ed9t v\u1ecb tr\u00ed ph\u00f9 h\u1ee3p trong vector. B\u00ean d\u01b0\u1edbi l\u00e0 code minh h\u1ecda cho qu\u00e1 tr\u00ecnh n\u00e0y.","c7fbf8b8":"Nh\u01b0 ch\u00fang ta th\u1ea5y, t\u1eeb t\u1ecda \u0111\u1ed9 c\u00f3 th\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c c\u0103n h\u1ed9 n\u00e0y n\u1eb1m \u1edf th\u00e0nh ph\u1ed1 New York l\u00e0 m\u1ed9t n\u01a1i ph\u00e1t tri\u1ec3n v\u00e0 c\u00f3 m\u1ee9c s\u1ed1ng cao.  Nh\u01b0 v\u1eady m\u1ee9c gi\u00e1 c\u1ee7a n\u00f3 kh\u1ea3 n\u0103ng s\u1ebd cao h\u01a1n. T\u1eeb qu\u1eadn v\u00e0 huy\u1ec7n ta x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c c\u0103n h\u1ed9 c\u00f3 n\u1eb1m \u1edf trung t\u00e2m hay kh\u00f4ng, c\u00e1c ti\u1ec7n nghi xung quan n\u00f3. Nh\u1eefng th\u00f4ng tin tr\u00ean r\u1ea5t quan tr\u1ecdng trong vi\u1ec7c \u0111\u00e1nh gi\u00e1 kh\u1ea3 n\u0103ng b\u00e1n \u0111\u01b0\u1ee3c c\u1ee7a c\u0103n h\u1ed9. M\u1eb7c d\u00f9 trong b\u1ed9 d\u1eef li\u1ec7u g\u1ed1c kh\u00f4ng h\u1ec1 xu\u1ea5t hi\u1ec7n nh\u01b0ng ch\u00fang \u0111\u01b0\u1ee3c tr\u00edch xu\u1ea5t t\u1eeb t\u1ecda \u0111\u1ed9 \u0111\u1ecba l\u00fd.","60bc5b16":"Trong c\u00e1c gi\u00e1 tr\u1ecb n\u00e0y ta c\u00f3 th\u1ec3 nh\u1eadn th\u1ea5y bi\u1ebfn c\u00f3 kh\u1ea3 n\u0103ng ph\u00e2n ph\u1ed1i chu\u1ea9n cao nh\u1ea5t ch\u00ednh l\u00e0 bi\u1ebfn price_log. Trong bi\u1ec3u \u0111\u1ed3 qqplot ta nh\u1eadn th\u1ea5y c\u00e1c \u0111i\u1ec3m n\u1eb1m r\u1eddi r\u1ea1c \u1edf ph\u1ea7n \u0111\u1ea7u v\u00e0 \u0111u\u00f4i c\u1ee7a \u0111\u1ed3 th\u1ecb l\u00e0 nh\u1eefng d\u1eef li\u1ec7u outlier. N\u1ebfu ta lo\u1ea1i b\u1ecf nh\u1eefng d\u1eef li\u1ec7u n\u00e0y s\u1ebd t\u1ea1o ra m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 t\u00ednh ph\u00e2n ph\u1ed1i chu\u1ea9n cao h\u01a1n. Th\u1eadt v\u1eady:","066f0a51":"# 1. Gi\u1edbi thi\u1ec7u v\u1ec1 feature engineering\n\nHi\u1ec7n nay c\u00e1c ph\u01b0\u01a1ng ph\u00e1p h\u1ecdc m\u00e1y xu\u1ea5t hi\u1ec7n ng\u00e0y c\u00e0ng nhi\u1ec1u v\u00e0 tr\u1edf n\u00ean m\u1ea1nh m\u1ebd h\u01a1n. C\u00e1c m\u00f4 h\u00ecnh h\u1ecdc m\u00e1y nh\u01b0 m\u1ea1ng neural network, Random Forest, Decision Tree, SVM, kNN,... \u0111\u1ec1u l\u00e0 nh\u1eefng m\u00f4 h\u00ecnh c\u00f3 t\u00ednh t\u01b0\u1eddng minh th\u1ea5p, \u0111\u1ed9 ch\u00ednh x\u00e1c cao, \u0111\u1ed9 ph\u1ee9c t\u1ea1p v\u00e0 t\u00ednh linh ho\u1ea1t cao. C\u00e1c m\u00f4 h\u00ecnh h\u1ecdc m\u00e1y \u0111a d\u1ea1ng s\u1ebd l\u00e0m phong ph\u00fa th\u00eam s\u1ef1 l\u1ef1a ch\u1ecdn c\u1ee7a c\u00e1c modeler. Tuy nhi\u00ean b\u00ean c\u1ea1nh vi\u1ec7c \u00e1p d\u1ee5ng c\u00e1c ph\u01b0\u01a1ng ph\u00e1p m\u1ea1nh, modeler c\u1ea7n ph\u1ea3i chu\u1ea9n h\u00f3a d\u1eef li\u1ec7u t\u1ed1t, b\u1edfi d\u1eef li\u1ec7u l\u00e0 nguy\u00ean li\u1ec7u \u0111\u1ec3 m\u00f4 h\u00ecnh d\u1ef1a tr\u00ean \u0111\u00f3 x\u00e2y d\u1ef1ng m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p h\u1ecdc. N\u1ebfu m\u00f4 h\u00ecnh h\u1ecdc tr\u00ean m\u1ed9t b\u1ed9 d\u1eef li\u1ec7u kh\u00f4ng t\u1ed1t, k\u1ebft qu\u1ea3 d\u1ef1 b\u00e1o s\u1ebd kh\u00f4ng t\u1ed1t. N\u1ebfu m\u00f4 h\u00ecnh h\u1ecdc tr\u00ean m\u1ed9t b\u1ed9 d\u1eef li\u1ec7u tr\u00fang t\u1ee7, k\u1ebft qu\u1ea3 m\u00f4 h\u00ecnh s\u1ebd \u0111\u01b0\u1ee3c c\u1ea3i thi\u1ec7n. Ch\u00ednh v\u00ec th\u1ebf vai tr\u00f2 c\u1ee7a chu\u1ea9n h\u00f3a d\u1eef li\u1ec7u quan tr\u1ecdng \u0111\u1ebfn m\u1ee9c Andrew Nguyen \u0111\u00e3 t\u1eebng n\u00f3i 'x\u00e2y d\u1ef1ng m\u00f4 h\u00ecnh machine learning kh\u00f4ng g\u00ec kh\u00e1c l\u00e0 th\u1ef1c hi\u1ec7n feature engineering'. V\u00e0 th\u1ef1c t\u1ebf c\u0169ng cho th\u1ea5y trong c\u00e1c cu\u1ed9c thi ph\u00e2n t\u00edch d\u1eef li\u1ec7u, c\u00e1c leader board \u0111\u1ec1u \u00e1p d\u1ee5ng t\u1ed1t c\u00e1c k\u0129 thu\u1eadt t\u1ea1o \u0111\u1eb7c tr\u01b0ng b\u00ean c\u1ea1nh vi\u1ec7c \u00e1p d\u1ee5ng nh\u1eefng ph\u01b0\u01a1ng ph\u00e1p m\u1ea1nh. Nh\u1eefng m\u00f4 h\u00ecnh \u0111\u01a1n gi\u1ea3n nh\u01b0ng \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng tr\u00ean bi\u1ebfn ch\u1ea5t l\u01b0\u1ee3ng th\u01b0\u1eddng mang l\u1ea1i hi\u1ec7u qu\u1ea3 h\u01a1n nh\u1eefng m\u00f4 h\u00ecnh ph\u1ee9c t\u1ea1p nh\u01b0 m\u1ea1ng n\u01a1 ron ho\u1eb7c c\u00e1c m\u00f4 h\u00ecnh k\u1ebft h\u1ee3p nh\u01b0ng \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng tr\u00ean bi\u1ebfn ch\u01b0a \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng c\u00e1c k\u0129 thu\u1eadt t\u1ea1o \u0111\u1eb7c tr\u01b0ng. \n\nV\u1ec1 k\u0129 thu\u1eadt t\u1ea1o \u0111\u1eb7c tr\u01b0ng ch\u00fang ta c\u00f3 3 ph\u01b0\u01a1ng ph\u00e1p ch\u00ednh:\n\n* **Tr\u00edch l\u1ecdc feature**: Kh\u00f4ng ph\u1ea3i to\u00e0n b\u1ed9 th\u00f4ng tin \u0111\u01b0\u1ee3c cung c\u1ea5p t\u1eeb m\u1ed9t bi\u1ebfn d\u1ef1 b\u00e1o ho\u00e0n to\u00e0n mang l\u1ea1i gi\u00e1 tr\u1ecb trong vi\u1ec7c ph\u00e2n lo\u1ea1i. Do \u0111\u00f3 ch\u00fang ta c\u1ea7n ph\u1ea3i tr\u00edch l\u1ecdc nh\u1eefng th\u00f4ng tin ch\u00ednh t\u1eeb bi\u1ebfn \u0111\u00f3. Ch\u1eb3ng h\u1ea1n nh\u01b0 trong c\u00e1c m\u00f4 h\u00ecnh chu\u1ed7i th\u1eddi gian ch\u00fang ta th\u01b0\u1eddng s\u1eed d\u1ee5ng k\u0129 thu\u1eadt ph\u00e2n r\u00e3 th\u1eddi gian \u0111\u1ec3 tr\u00edch l\u1ecdc ra c\u00e1c \u0111\u1eb7c tr\u01b0ng nh\u01b0 Ng\u00e0y th\u00e0nh N\u0103m, Th\u00e1ng, Qu\u00ed,.... C\u00e1c \u0111\u1eb7c tr\u01b0ng m\u1edbi s\u1ebd gi\u00fap ph\u00e1t hi\u1ec7n c\u00e1c \u0111\u1eb7c t\u00ednh chu k\u00ec v\u00e0 m\u00f9a v\u1ee5, nh\u1eefng \u0111\u1eb7c t\u00ednh m\u00e0 th\u01b0\u1eddng xu\u1ea5t hi\u1ec7n trong c\u00e1c chu\u1ed7i th\u1eddi gian.\nK\u0129 thu\u1eadt tr\u00edch l\u1ecdc \u0111\u1eb7c tr\u01b0ng th\u00f4ng th\u01b0\u1eddng \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng tr\u00ean m\u1ed9t s\u1ed1 d\u1ea1ng bi\u1ebfn nh\u01b0:\n     1.  Tr\u00edch l\u1ecdc \u0111\u1eb7c tr\u01b0ng trong x\u1eed l\u00fd \u1ea3nh v\u00e0 x\u1eed l\u00fd ng\u00f4n ng\u1eef t\u1ef1 nhi\u00ean: C\u00e1c m\u1ea1ng n\u01a1 ron s\u1ebd tr\u00edch l\u1ecdc ra nh\u1eefng \u0111\u1eb7c tr\u01b0ng ch\u00ednh v\u00e0 h\u1ecdc t\u1eeb nh\u1eefng \u0111\u1eb7c tr\u01b0ng n\u00e0y \u0111\u1ec3 th\u1ef1c hi\u1ec7n t\u00e1c v\u1ee5 ph\u00e2n lo\u1ea1i.\n     2. D\u1eef li\u1ec7u v\u1ec1 v\u1ecb tr\u00ed \u0111\u1ecba l\u00fd: T\u1eeb v\u1ecb tr\u00ed \u0111\u1ecba l\u00fd c\u00f3 th\u1ec3 suy ra v\u00f9ng mi\u1ec1n, th\u00e0nh th\u1ecb, n\u00f4ng th\u00f4n, m\u1ee9c thu nh\u1eadp trung b\u00ecnh, c\u00e1c y\u1ebfu t\u1ed1 v\u1ec1 nh\u00e2n kh\u1ea9u,....\n     3. D\u1eef li\u1ec7u th\u1eddi gian: Ph\u00e2n r\u00e3 th\u1eddi gian th\u00e0nh c\u00e1c th\u00e0nh ph\u1ea7n th\u1eddi gian\n* **Bi\u1ebfn \u0111\u1ed5i feature**: Bi\u1ebfn \u0111\u1ed5i d\u1eef li\u1ec7u g\u1ed1c th\u00e0nh nh\u1eefng d\u1eef li\u1ec7u ph\u00f9 h\u1ee3p v\u1edbi m\u00f4 h\u00ecnh nghi\u00ean c\u1ee9u. Nh\u1eefng bi\u1ebfn n\u00e0y th\u01b0\u1eddng c\u00f3 t\u01b0\u01a1ng quan cao h\u01a1n \u0111\u1ed1i v\u1edbi bi\u1ebfn m\u1ee5c ti\u00eau v\u00e0 do \u0111\u00f3 gi\u00fap c\u1ea3i thi\u1ec7n \u0111\u1ed9 ch\u00ednh x\u00e1c c\u1ee7a m\u00f4 h\u00ecnh. C\u00e1c ph\u01b0\u01a1ng ph\u00e1p n\u00e0y bao g\u1ed3m:\n    1. Chu\u1ea9n h\u00f3a v\u00e0 thay \u0111\u1ed5i ph\u00e2n ph\u1ed1i c\u1ee7a d\u1eef li\u1ec7u th\u00f4ng qua c\u00e1c k\u0129 thu\u1eadt feature scaling nh\u01b0 Minmax scaling, Mean normalization, Unit length scaling, Standardization.\n    2. T\u1ea1o bi\u1ebfn t\u01b0\u01a1ng t\u00e1c: Trong th\u1ed1ng k\u00ea c\u00e1c b\u1ea1n h\u1eb3n c\u00f2n nh\u1edb ki\u1ec3m \u0111\u1ecbnh ramsey reset test v\u1ec1 m\u00f4 h\u00ecnh c\u00f3 b\u1ecf s\u00f3t bi\u1ebfn quan tr\u1ecdng? Th\u00f4ng qua vi\u1ec7c th\u00eam v\u00e0o m\u00f4 h\u00ecnh c\u00e1c bi\u1ebfn b\u1eadc cao v\u00e0 bi\u1ebfn t\u01b0\u01a1ng t\u00e1c \u0111\u1ec3 t\u1ea1o ra m\u1ed9t m\u00f4 h\u00ecnh m\u1edbi v\u00e0 ki\u1ec3m tra h\u1ec7 s\u1ed1 c\u00e1c bi\u1ebfn m\u1edbi c\u00f3 \u00fd ngh\u0129a th\u1ed1ng k\u00ea hay kh\u00f4ng. \u00dd t\u01b0\u1edfng c\u1ee7a t\u1ea1o bi\u1ebfn t\u01b0\u01a1ng t\u00e1c c\u0169ng g\u1ea7n nh\u01b0 th\u1ebf. T\u1ee9c l\u00e0 ch\u00fang ta s\u1ebd t\u1ea1o ra nh\u1eefng bi\u1ebfn m\u1edbi l\u00e0 c\u00e1c bi\u1ebfn b\u1eadc cao v\u00e0 bi\u1ebfn t\u01b0\u01a1ng t\u00e1c.\n    3. X\u1eed l\u00fd d\u1eef li\u1ec7u missing: C\u00f3 nhi\u1ec1u l\u00fd do khi\u1ebfn ta ph\u1ea3i x\u1eed l\u00fd missing data. M\u1ed9t trong nh\u1eefng l\u00fd do \u0111\u00f3 l\u00e0 d\u1eef li\u1ec7u missing c\u0169ng mang nh\u1eefng th\u00f4ng tin gi\u00e1 tr\u1ecb, do \u0111\u00f3 n\u1ebfu thay th\u1ebf \u0111\u01b0\u1ee3c c\u00e1c missing b\u1eb1ng nh\u1eefng gi\u00e1 tr\u1ecb g\u1ea7n \u0111\u00fang s\u1ebd mang l\u1ea1i nhi\u1ec1u th\u00f4ng tin h\u01a1n cho m\u00f4 h\u00ecnh. B\u00ean c\u1ea1nh \u0111\u00f3 nhi\u1ec1u m\u00f4 h\u00ecnh kh\u00f4ng l\u00e0m vi\u1ec7c \u0111\u01b0\u1ee3c v\u1edbi d\u1eef li\u1ec7u missing d\u1eabn t\u1edbi l\u1ed7i training. Do \u0111\u00f3 ta c\u1ea7n gi\u1ea3i quy\u1ebft c\u00e1c bi\u1ebfn missing. \u0110\u1ed1i v\u1edbi bi\u1ebfn numeric, c\u00e1c ph\u01b0\u01a1ng ph\u00e1p \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 thay th\u1ebf b\u1eb1ng mean, median,.... M\u1ed9t s\u1ed1 k\u0129 thu\u1eadt cao c\u1ea5p h\u01a1n s\u1eed d\u1ee5ng ph\u00e2n ph\u1ed1i ng\u1eabu nhi\u00ean \u0111\u1ec3 fill c\u00e1c gi\u00e1 tr\u1ecb missing d\u1ef1a tr\u00ean ph\u00e2n ph\u1ed1i c\u1ee7a c\u00e1c gi\u00e1 tr\u1ecb \u0111\u00e3 bi\u1ebft ho\u1eb7c s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p simulate missing value d\u1ef1a tr\u00ean trung b\u00ecnh c\u1ee7a c\u00e1c quan s\u00e1t l\u00e1ng gi\u1ec1ng. \u0110\u1ed1i v\u1edbi d\u1eef li\u1ec7u category, missing value c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c gi\u1eef nguy\u00ean nh\u01b0 m\u1ed9t class \u0111\u1ed9c l\u1eadp ho\u1eb7c gom v\u00e0o c\u00e1c nh\u00f3m kh\u00e1c c\u00f3 \u0111\u1eb7c t\u00ednh ph\u00e2n ph\u1ed1i tr\u00ean bi\u1ebfn m\u1ee5c ti\u00eau g\u1ea7n gi\u1ed1ng.\n* **L\u1ef1a ch\u1ecdn feature**: Ph\u01b0\u01a1ng ph\u00e1p n\u00e0y \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng trong nh\u1eefng tr\u01b0\u1eddng h\u1ee3p c\u00f3 r\u1ea5t nhi\u1ec1u d\u1eef li\u1ec7u m\u00e0 ch\u00fang ta c\u1ea7n l\u1ef1a ch\u1ecdn ra d\u1eef li\u1ec7u c\u00f3 \u1ea3nh h\u01b0\u1edfng l\u1edbn nh\u1ea5t \u0111\u1ebfn s\u1ee9c m\u1ea1nh ph\u00e2n lo\u1ea1i c\u1ee7a m\u00f4 h\u00ecnh. C\u00e1c ph\u01b0\u01a1ng ph\u00e1p c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng \u0111\u00f3 l\u00e0 ranking c\u00e1c bi\u1ebfn theo m\u1ee9c \u0111\u1ed9 quan tr\u1ecdng b\u1eb1ng c\u00e1c m\u00f4 h\u00ecnh nh\u01b0 Random Forest, Linear Regression, Neural Network, SVD,...; S\u1eed d\u1ee5ng ch\u1ec9 s\u1ed1 IV trong scorecard; S\u1eed d\u1ee5ng c\u00e1c ch\u1ec9 s\u1ed1 kh\u00e1c nh\u01b0 AIC ho\u1eb7c Pearson Correlation, ph\u01b0\u01a1ng sai. Ch\u00fang ta c\u00f3 th\u1ec3 ph\u00e2n chia c\u00e1c ph\u01b0\u01a1ng ph\u00e1p tr\u00ean th\u00e0nh 3 nh\u00f3m:\n    1. C\u00e1ch ti\u1ebfp c\u1eadn theo ph\u01b0\u01a1ng ph\u00e1p th\u1ed1ng k\u00ea: S\u1eed d\u1ee5ng t\u01b0\u01a1ng quan Pearson Correlation, AIC, ph\u01b0\u01a1ng sai, IV.\n    2. L\u1ef1a ch\u1ecdn \u0111\u1eb7c tr\u01b0ng b\u1eb1ng s\u1eed d\u1ee5ng m\u00f4 h\u00ecnh: Random Forest, Linear Regression, Neural Network, SVD.\n    3. L\u1ef1a ch\u1ecdn th\u00f4ng qua l\u01b0\u1edbi (grid search): Coi s\u1ed1 l\u01b0\u1ee3ng bi\u1ebfn nh\u01b0 m\u1ed9t th\u00f4ng s\u1ed1 c\u1ee7a m\u00f4 h\u00ecnh. Th\u1eed nghi\u1ec7m c\u00e1c k\u1ecbch b\u1ea3n v\u1edbi nh\u1eefng s\u1ed1 l\u01b0\u1ee3ng bi\u1ebfn kh\u00e1c nhau. C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 xem c\u00e1ch th\u1ef1c hi\u1ec7n [grid search](https:\/\/miguelmalvarez.com\/2015\/02\/23\/python-and-kaggle-feature-selection-multiple-models-and-grid-search\/).\n\n\u0110\u1ec3 m\u00f4 ph\u1ecfng c\u00e1c k\u0129 thu\u1eadt n\u00e0y, ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng d\u1eef li\u1ec7u trong cu\u1ed9c thi c\u1ee7a thi Two Sigma Connect: Rental Listing Inquiries Kaggle competition.  File train.json l\u00e0 d\u1eef li\u1ec7u training. B\u00e0i to\u00e1n c\u1ee7a ch\u00fang ta l\u00e0 c\u1ea7n d\u1ef1 b\u00e1o m\u1ee9c \u0111\u1ed9 t\u00edn nhi\u1ec7m c\u1ee7a m\u1ed9t danh s\u00e1ch nh\u1eefng ng\u01b0\u1eddi thu\u00ea m\u1edbi. Ch\u00fang ta ph\u00e2n lo\u1ea1i danh s\u00e1ch th\u00e0nh 3 c\u1ea5p \u0111\u1ed9 ['low', 'medium', 'high']. \u0110\u1ec3 \u0111\u00e1nh gi\u00e1 k\u1ebft qu\u1ea3 ch\u00fang ta s\u1eed d\u1ee5ng h\u00e0m trung b\u00ecnh sai s\u1ed1 rmse. ","cea83aba":"## 2.4. D\u1eef li\u1ec7u th\u1eddi gian\n\nTrong d\u1ef1 b\u00e1o, c\u00e1c d\u1eef li\u1ec7u th\u01b0\u1eddng c\u00f3 tr\u1ea1ng th\u00e1i thay \u0111\u1ed5i. Tr\u1ea1ng th\u00e1i c\u1ee7a ng\u00e0y h\u00f4m qua c\u00f3 th\u1ec3 kh\u00e1c bi\u1ec7t so v\u1edbi ng\u00e0y h\u00f4m nay. Ch\u1eb3ng h\u1ea1n nh\u01b0 chi\u1ec1u cao, c\u00e2n n\u1eb7ng c\u1ee7a m\u1ed9t ng\u01b0\u1eddi hay gi\u00e1 th\u1ecb tr\u01b0\u1eddng c\u1ee7a c\u00e1c c\u1ed5 phi\u1ebfu. Ch\u00ednh v\u00ec th\u1ebf th\u1eddi gian l\u00e0 m\u1ed9t \u0111\u1ea1i l\u01b0\u1ee3ng c\u00f3 \u1ea3nh h\u01b0\u1edfng l\u1edbn t\u1edbi bi\u1ebfn m\u1ee5c ti\u00eau. T\u1eeb m\u1ed9t m\u1ed1c th\u1eddi gian bi\u1ebft tr\u01b0\u1edbc ch\u00fang ta c\u00f3 th\u1ec3 ph\u00e2n r\u00e3 n\u00f3 th\u00e0nh gi\u1edd trong ng\u00e0y, ng\u00e0y trong th\u00e1ng, th\u00e1ng, qu\u00ed, n\u0103m,.... S\u1ebd c\u00f3 r\u1ea5t nhi\u1ec1u \u0111i\u1ec1u th\u00fa v\u1ecb \u0111\u01b0\u1ee3c kh\u00e1m ph\u00e1 t\u1eeb c\u00e1c th\u00f4ng tin n\u00e0y. Ch\u1eb3ng h\u1ea1n nh\u01b0 qui lu\u1eadt thay \u0111\u1ed5i theo m\u00f9a v\u1ee5 (nhi\u1ec7t \u0111\u1ed9 c\u00e1c th\u00e1ng thay \u0111\u1ed5i theo m\u00f9a, GDP thay \u0111\u1ed5i theo qui lu\u1eadt qu\u00ed, ...). Y\u1ebfu t\u1ed1 th\u1eddi gian c\u00f2n gi\u00fap x\u00e1c \u0111\u1ecbnh xu h\u01b0\u1edbng bi\u1ebfn \u0111\u1ed5i c\u1ee7a m\u1ed9t \u0111\u1ea1i l\u01b0\u1ee3ng nh\u01b0 th\u00f4ng qua vi\u1ec7c theo d\u00f5i nhi\u1ec7t \u0111\u1ed9 c\u1ee7a tr\u00e1i \u0111\u1ea5t qua c\u00e1c n\u0103m ch\u00fang ta bi\u1ebft \u0111\u01b0\u1ee3c tr\u00e1i \u0111\u1ea5t \u0111ang n\u00f3ng l\u00ean hay l\u01b0\u1ee3ng b\u0103ng tan ph\u1ea3n \u00e1nh m\u1ef1c n\u01b0\u1edbc bi\u1ec3n \u0111ang d\u00e2ng l\u00ean qua t\u1eebng n\u0103m. T\u1ed1c \u0111\u1ed9 thay \u0111\u1ed5i c\u1ee7a m\u1ed9t \u0111\u1ea1i l\u01b0\u1ee3ng k\u1ebft h\u1ee3p v\u1edbi t\u00ednh m\u00f9a v\u1ee5 l\u00e0 m\u1ed9t ch\u1ec9 s\u1ed1 quan tr\u1ecdng \u0111\u1ec3 \u01b0\u1edbc l\u01b0\u1ee3ng chu\u1ed7i th\u1eddi gian. \n\nBi\u1ebfn \u0111\u1ed5i one-hot coding l\u00e0 m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p quan tr\u1ecdng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 m\u00e3 h\u00f3a c\u00e1c bi\u1ebfn chu k\u00ec th\u1eddi gian. One-hot coding s\u1ebd bi\u1ebfn \u0111\u1ed5i m\u1ed9t bi\u1ebfn th\u00e0nh c\u00e1c vector c\u00f3 ph\u1ea7n t\u1eed l\u00e0 0 ho\u1eb7c 1, trong \u0111\u00f3 1 \u0111\u1ea1i di\u1ec7n cho s\u1ef1 xu\u1ea5t hi\u1ec7n c\u1ee7a \u0111\u1eb7c tr\u01b0ng v\u00e0 0 \u0111\u1ea1i di\u1ec7n cho c\u00e1c \u0111\u1eb7c tr\u01b0ng m\u00e0 bi\u1ebfn kh\u00f4ng c\u00f3. V\u00ed d\u1ee5 c\u1ee5 th\u1ec3: Ch\u00fang ta c\u00f3 1 ng\u00e0y trong tu\u1ea7n c\u00f3 th\u1ec3 r\u01a1i v\u00e0o c\u00e1c th\u1ee9 t\u1eeb 2 \u0111\u1ebfn ch\u1ee7 nh\u1eadt. Nh\u01b0 v\u1eady m\u1ed9t bi\u1ec3u di\u1ec5n one-hot coding c\u1ee7a m\u1ed9t ng\u00e0y theo th\u1ee9 t\u1ef1 ng\u00e0y trong tu\u1ea7n s\u1ebd l\u00e0 m\u1ed9t vector m\u00e0 ph\u1ea7n t\u1eed t\u01b0\u01a1ng \u1ee9ng v\u1edbi th\u1ee9 t\u1ef1 trong tu\u1ea7n c\u1ee7a ng\u00e0y \u0111\u00f3 s\u1ebd b\u1eb1ng 1 v\u00e0 c\u00e1c ph\u1ea7n t\u1eed c\u00f2n l\u1ea1i b\u1eb1ng 0. C\u00e1c bi\u1ec3u di\u1ec5n n\u00e0y t\u01b0\u01a1ng t\u1ef1 v\u1edbi m\u00e3 h\u00f3a d\u1eef li\u1ec7u v\u0103n b\u1ea3n th\u00e0nh c\u00e1c sparse vector. Trong python ch\u00fang ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng h\u00e0m weekday() \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh th\u1ee9 t\u1ef1 c\u1ee7a m\u1ed9t ng\u00e0y trong tu\u1ea7n. Thu\u1ed9c t\u00ednh weekday() ch\u1ec9 t\u1ed3n t\u1ea1i \u0111\u1ed1i v\u1edbi d\u1eef li\u1ec7u d\u1ea1ng datetime. Do \u0111\u00f3 ta c\u1ea7n chuy\u1ec3n \u0111\u1ed5i c\u00e1c bi\u1ebfn ng\u00e0y \u0111ang \u1edf d\u1ea1ng string v\u1ec1 d\u1ea1ng datetime th\u00f4ng qua strftime (string format time). B\u1ea3ng string format time c\u00f3 th\u1ec3 xem [t\u1ea1i \u0111\u00e2y](http:\/\/strftime.org\/).","41596434":"Ch\u00fang ta c\u00f3 th\u1ec3 ki\u1ec3m tra t\u00ednh ph\u00e2n ph\u1ed1i chu\u1ea9n c\u1ee7a c\u00e1c bi\u1ebfn sau scale d\u1ef1a tr\u00ean bi\u1ec3u \u0111\u1ed3 Q-Q plot bi\u1ec3u di\u1ec5n gi\u00e1 tr\u1ecb ph\u00e2n ph\u1ed1i th\u1ef1c t\u1ebf d\u1ef1a tr\u00ean gi\u00e1 tr\u1ecb ph\u00e2n ph\u1ed1i l\u00fd thuy\u1ebft (c\u00e1c gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c t\u00ednh ra t\u1eeb ph\u00e2n ph\u1ed1i l\u00fd thuy\u1ebft, \u1edf \u0111\u00e2y l\u00e0 ph\u00e2n ph\u1ed1i chu\u1ea9n). N\u1ebfu \u0111\u01b0\u1eddng bi\u1ec3u di\u1ec5n n\u1eb1m s\u00e1t \u0111\u01b0\u1eddng ch\u00e9o ch\u00ednh th\u00ec bi\u1ebfn c\u00f3 kh\u1ea3 n\u0103ng cao \u0111\u1ea1t t\u00ednh ph\u00e2n ph\u1ed1i chu\u1ea9n.","11ece74e":"Nh\u01b0 v\u1eady ta th\u1ea5y sau khi \u00e1p d\u1ee5ng feature selection \u0111\u00e3 c\u1ea3i thi\u1ec7n \u0111\u01b0\u1ee3c \u0111\u1ed9 ch\u00ednh x\u00e1c c\u1ee7a m\u00f4 h\u00ecnh d\u1ef1 b\u00e1o.\n\n## 4.2. S\u1eed d\u1ee5ng m\u00f4 h\u00ecnh\n\n\u0110\u00e2y l\u00e0 ph\u01b0\u01a1ng ph\u00e1p r\u1ea5t th\u01b0\u1eddng xuy\u00ean \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng trong c\u00e1c cu\u1ed9c thi ph\u00e2n t\u00edch d\u1eef li\u1ec7u. Ch\u00fang ta s\u1ebd d\u1ef1a tr\u00ean m\u1ed9t s\u1ed1 m\u00f4 h\u00ecnh c\u01a1 s\u1edf \u0111\u1ec3 \u0111\u00e1nh gi\u00e1 m\u1ee9c \u0111\u1ed9 quan tr\u1ecdng c\u1ee7a c\u00e1c bi\u1ebfn. C\u00f3 2 l\u1edbp m\u00f4 h\u00ecnh th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 \u0111\u00e1nh bi\u1ebfn \u0111\u00f3 l\u00e0 Random Forest ho\u1eb7c Linear Regression.  \u01afu \u0111i\u1ec3m c\u1ee7a c\u00e1c ph\u01b0\u01a1ng ph\u00e1p n\u00e0y l\u00e0 k\u1ebft qu\u1ea3 \u0111\u00e1nh gi\u00e1 r\u1ea5t chu\u1ea9n x\u00e1c, tuy nhi\u00ean nh\u01b0\u1ee3c \u0111i\u1ec3m c\u1ee7a ch\u00fang l\u00e0 ph\u1ea3i x\u00e2y d\u1ef1ng m\u00f4 h\u00ecnh h\u1ed3i qui r\u1ed3i m\u1edbi x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c bi\u1ebfn quan tr\u1ecdng. \u0110i\u1ec1u n\u00e0y d\u01b0\u1eddng nh\u01b0 \u0111i tr\u00e1i l\u1ea1i v\u1edbi th\u1ef1c t\u1ebf ph\u1ea3i l\u1ef1a ch\u1ecdn bi\u1ebfn tr\u01b0\u1edbc khi training m\u00f4 h\u00ecnh. \u0110\u1ec3 \u00e1p d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p n\u00e0y ch\u00fang ta th\u1ef1c hi\u1ec7n nh\u01b0 sau:","22d35545":"Trong b\u00e0i to\u00e1n n\u00e0y, m\u1ed9t s\u1ed1 giao d\u1ecbch c\u00f3 th\u1ec3 ph\u1ee5 thu\u1ed9c v\u00e0o th\u1eddi gian. Ch\u1eb3ng h\u1ea1n nh\u01b0 l\u1ecbch tr\u1ea3 n\u1ee3 c\u1ee7a th\u1ebb t\u00edn d\u1ee5ng s\u1ebd r\u01a1i v\u00e0o k\u00ec sao k\u00ea l\u00e0 m\u1ed9t ng\u00e0y c\u1ee5 th\u1ec3 trong th\u00e1ng. Khi l\u00e0m vi\u1ec7c v\u1edbi d\u1eef li\u1ec7u chu\u1ed7i th\u1eddi gian ch\u00fang ta n\u00ean l\u01b0u \u00fd t\u1edbi danh s\u00e1ch c\u00e1c ng\u00e0y \u0111\u1eb7c bi\u1ec7t trong n\u0103m nh\u01b0 ngh\u1ec9 t\u1ebft \u00e2m l\u1ecbch, qu\u1ed1c kh\u00e1nh, qu\u1ed1c t\u1ebf lao \u0111\u1ed9ng,.... B\u1edfi nh\u1eefng ng\u00e0y n\u00e0y th\u01b0\u1eddng s\u1ebd g\u00e2y ra b\u1ea5t th\u01b0\u1eddng v\u1ec1 d\u1eef li\u1ec7u kinh doanh. \n\n**H\u1ecfi \u0111\u00e1p?**\n> H: Li\u1ec7u c\u00e1c ng\u00e0y ngh\u1ec9 t\u1ebft nguy\u00ean \u0111\u00e1n, qu\u1ed1c t\u1ebf lao \u0111\u1ed9ng, qu\u1ed1c kh\u00e1nh,... c\u00f3 \u0111\u1eb7c \u0111i\u1ec3m g\u00ec chung kh\u00f4ng?\n\n> T: Ch\u00fang ta n\u00ean \u0111\u01b0a nh\u1eefng ng\u00e0y n\u00e0y v\u00e0o danh s\u00e1ch c\u00e1c ng\u00e0y ti\u1ec1m n\u0103ng c\u00f3 b\u1ea5t th\u01b0\u1eddng d\u1eef li\u1ec7u.\n\n**Chu\u1ed7i th\u1eddi gian t\u1eeb website, log,...**\n\nC\u00e1c h\u1ec7 th\u1ed1ng website l\u1edbn s\u1ebd tracking l\u1ea1i c\u00e1c session c\u1ee7a ng\u01b0\u1eddi d\u00f9ng. Nh\u1eefng th\u00f4ng tin \u0111\u01b0\u1ee3c tracking bao g\u1ed3m th\u00f4ng tin thi\u1ebft b\u1ecb, lo\u1ea1i event, customer ID, ... T\u1eeb customer ID ch\u00fang c\u00f3 th\u1ec3 link t\u1edbi database ng\u01b0\u1eddi d\u00f9ng \u0111\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c c\u00e1c th\u00f4ng tin v\u1ec1 gi\u1edbi t\u00ednh, \u0111\u1ed9 tu\u1ed5i, t\u00e0i kho\u1ea3n, h\u00e0nh vi giao d\u1ecbch,.... Trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p m\u1ed9t kh\u00e1ch h\u00e0ng c\u00f3 th\u1ec3 thay \u0111\u1ed5i thi\u1ebft b\u1ecb truy c\u1eadp, do \u0111\u00f3 kh\u00f4ng ph\u1ea3i h\u1ea7u h\u1ebft c\u00e1c tr\u01b0\u1eddng h\u1ee3p ch\u00fang ta \u0111\u1ec1u map \u0111\u01b0\u1ee3c session v\u1edbi Customer ID tr\u00ean d\u1eef li\u1ec7u local. Tuy nhi\u00ean t\u1eeb c\u00e1c th\u00f4ng tin \u0111\u01b0\u1ee3c l\u01b0u trong Cookie v\u1ec1 ng\u01b0\u1eddi d\u00f9ng (c\u00f2n g\u1ecdi l\u00e0 user agent) c\u0169ng cung c\u1ea5p cho ch\u00fang ta kh\u00e1 nhi\u1ec1u \u0111i\u1ec1u. Ch\u1eb3ng h\u1ea1n nh\u01b0: Thi\u1ebft b\u1ecb truy c\u1eadp, tr\u00ecnh duy\u1ec7t, h\u1ec7 \u0111i\u1ec1u h\u00e0nh,... T\u1eeb thi\u1ebft b\u1ecb di \u0111\u1ed9ng ch\u00fang ta c\u0169ng \u01b0\u1edbc \u0111o\u00e1n \u0111\u01b0\u1ee3c ng\u01b0\u1eddi d\u00f9ng c\u00f3 m\u1ee9c thu nh\u1eadp nh\u01b0 th\u1ebf n\u00e0o: S\u1eed d\u1ee5ng Iphone X th\u00ec kh\u1ea3 n\u0103ng cao l\u00e0 ng\u01b0\u1eddi c\u00f3 thu nh\u1eadp cao, s\u1eed d\u1ee5ng \u0111i\u1ec7n tho\u1ea1i xiaomi kh\u1ea3 n\u0103ng l\u00e0 ng\u01b0\u1eddi thu nh\u1eadp trung b\u00ecnh v\u00e0 th\u1ea5p,.... \u0110\u1ec3 ph\u00e2n lo\u1ea1i c\u00e1c th\u00f4ng tin v\u1ec1 ng\u01b0\u1eddi d\u00f9ng ch\u00fang ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng package user_agents trong python."}}