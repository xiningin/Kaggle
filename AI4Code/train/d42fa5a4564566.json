{"cell_type":{"39a49927":"code","3696981a":"code","013ce2e0":"code","3eef1a0d":"code","4fbeb9e2":"code","685dc886":"code","34443215":"code","3d9fefd1":"code","4cc4f2b5":"code","608c4ab6":"code","3cf1df3b":"code","c99140fe":"code","f9540f01":"code","118578e9":"code","a9e90283":"code","f8430c93":"code","463800ad":"code","e8100f1e":"code","9a2e7dc3":"code","3633f610":"code","ef226aaf":"code","bb01ae57":"code","3d327f7a":"code","3cef7598":"markdown","db923578":"markdown","6ca00a25":"markdown","7dc1b06e":"markdown","63a14ff8":"markdown","7fa43b06":"markdown","8d191afc":"markdown","fb7fb29d":"markdown","cb28ee22":"markdown","8271a3aa":"markdown","bd5e5d61":"markdown","568ec39d":"markdown","5b927e6f":"markdown","e1be2617":"markdown","28f11936":"markdown","2a5eca98":"markdown","a379cc55":"markdown","f4166757":"markdown","121c0209":"markdown","521ada6c":"markdown","892e9bae":"markdown","667c81a1":"markdown","eae5e7c1":"markdown","e1f6c420":"markdown","105117c7":"markdown","47dee84b":"markdown","3b95df4e":"markdown","21bd9ccb":"markdown","23d6e8e6":"markdown","3bd11cd1":"markdown","c76f3399":"markdown","bf04f41b":"markdown","39778128":"markdown","481d007f":"markdown","67d73e00":"markdown","8777e1b3":"markdown","d597191e":"markdown"},"source":{"39a49927":"# this is for Airbnb boston data analysis and this work would be one of the outcome of the Udicity data scientist nanodegree project \n\nimport numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\n# The lib below are used for WordCloud visualization\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nimport nltk\nfrom nltk.corpus import stopwords\nfrom nltk.tokenize import word_tokenize\nimport string\nimport re\nimport collections\nimport matplotlib.cm as cm\n","3696981a":"listingsdf = pd.read_csv('..\/input\/boston\/listings.csv')\ncalendardf = pd.read_csv('..\/input\/boston\/calendar.csv')\nreviewsdf  = pd.read_csv('..\/input\/boston\/reviews.csv')","013ce2e0":"# descriptive analysis\nlistingsdf.head()","3eef1a0d":"listingsdf.describe()","4fbeb9e2":"calendardf.head()","685dc886":"reviewsdf.head()","34443215":"listingsdf['review_scores_rating'].hist()\n#np.exp(listingsdf['review_scores_rating']\/100).hist()","3d9fefd1":"nbhoods = listingsdf['neighbourhood_cleansed'].unique()    # find the neighborhoods\n\nlistingsdf = listingsdf.rename(columns={\"id\": \"listing_id\"})    # make the id consistent to other two data sets\n\ncalendardf_copy=calendardf.copy()\ncalendardf_copy['available'] = (calendardf_copy['available']=='t')    # convert string type into boolean data type\n\nlistingsdf_copy = listingsdf.copy()\nlistingsdf_copy['price'] = listingsdf_copy['price'].replace('[\\$,]', '', regex=True).astype(float)      # convert string type into number type for price and remove $ sign\nlistingsdf_copy['price_per_accommodates'] = listingsdf_copy['price']\/listingsdf_copy['accommodates']    # create the price per accommodates column which seems better to indicate the price of the rental property","4cc4f2b5":"# vibe of each neighborhood\n\n# wordcloud is a good way to vasualize this\n\n\n# break list of lists into a signle list\ndef flatten(t):\n    '''\n    convert the list of lists into a single list\n    \n    PARAMETER:\n    \n    INPUT:\n    t: the original list of lists\n    \n    OUTPUT:\n    a single list\n    \n    '''\n    \n    return [item for sublist in t for item in sublist]\n\ndef nhood_wordcloud(listingsdf,nbhoods):\n    '''\n    This function is to plot WordCloud and top 10 words for given neighborhoods; this function currently only uses 'neighborhood_overview' to visualize data which could be extended in future\n    \n    PARAMETER:\n    \n    INPUT:\n    listingsdf: listing data (pandas dataframe type)\n    nbhoods: The unique neighborhood list (pandas dataframe type)\n    \n    OUTPUT:\n    WordCloud plot and top 10 words plots\n    \n    '''\n    \n    # remove missing value\n    listingsdf = listingsdf.dropna(subset=['neighborhood_overview'])     # Dropping missing value is because the number of the data is large enough and 'neighborhood_overview' is text data which cannot be imputed\n\n    # set up stopwords and puctuation\n\n    nbhoods_split = [re.findall('[A-Z][^A-Z]*', nbhoods.tolist()[i]) for i in range(len(nbhoods))]  # People sometimes preffer to break the name into couple of single words\n\n    all_stopwords = stopwords.words('english')\n    all_stopwords.extend(nbhoods.tolist() + flatten(nbhoods_split) + [\"'s\",'--','neighborhood','boston','jp','']) # remove meaningless words and the community name\n    stop_words = set(all_stopwords + list(string.punctuation))\n    stop_words = [x.lower().strip() for x in stop_words]\n\n    tokenizer = nltk.RegexpTokenizer(r\"\\w+\")\n\n\n    # Group by different neighborhood\n    for nbhood in nbhoods:\n        word_tokens = tokenizer.tokenize(listingsdf[listingsdf['neighbourhood_cleansed']==nbhood]['neighborhood_overview'].str.cat(sep=' '))\n        filtered_sentence = [re.sub(r'\\d+', '', word_tokens[i]) for i in range(len(word_tokens))]\n        filtered_sentence = [w for w in filtered_sentence if not w.lower() in stop_words]\n        \n        # Create and generate a word cloud image:\n        wordcloud = WordCloud().generate(','.join(filtered_sentence))\n\n        # find the top 10 words in each neighborbood\n        counted_words = collections.Counter(filtered_sentence)\n        top10words = []\n        top10counts = []\n        for letter, count in counted_words.most_common(10):\n            top10words.append(letter)\n            top10counts.append(count)\n\n        print('This is ' + nbhood + ':')\n\n        # Display the generated image:\n        f1 = plt.figure()\n        plt.imshow(wordcloud, interpolation='bilinear')\n        plt.axis(\"off\")\n        plt.show()\n\n        print('the top 10 hot topic is about:'+ ','.join(top10words))\n        colors = cm.rainbow(np.linspace(0, 1, 10))\n        f2 = plt.figure()\n        plt.title('Top 10 words  vs their count')\n        plt.xlabel('Count')\n        plt.ylabel('Words')\n        plt.barh(top10words, top10counts, color=colors)\n        plt.show()\n\n\n        print('_____________________________________________________________________________________________________')","608c4ab6":"nhood_wordcloud(listingsdf,nbhoods)","3cf1df3b":"listings_filtered = listingsdf_copy[listingsdf_copy['price'] < listingsdf_copy['price'].quantile(.95)]\nlistings_filtered.groupby(['neighbourhood_cleansed']).boxplot(column='price',subplots=False,rot=60,figsize=(20,10))","c99140fe":"nhood_price_avg = listingsdf_copy.groupby(['neighbourhood_cleansed'])['price_per_accommodates'].mean()\nnhood_ratescore_avg = listingsdf_copy.groupby(['neighbourhood_cleansed'])['review_scores_rating'].mean()","f9540f01":"# This code could visualize the scatter points of each rental properties, but this blog would use choropleth to visualize the price of each neiborhood\n#fig = px.scatter_mapbox(listingsdf_copy[listingsdf_copy['price'] < listingsdf_copy['price'].quantile(.95)], lat=\"latitude\", lon=\"longitude\", color='price', zoom=10, mapbox_style='open-street-map',width=1000)\n#fig.show()\n\nimport json\nboston = json.load(open('..\/input\/boston-geojson\/map.geojson'))\nfig = px.choropleth_mapbox(nhood_price_avg.reset_index(), geojson=boston, featureidkey='properties.name', locations='neighbourhood_cleansed', color='price_per_accommodates',center={\"lat\": 42.3601, \"lon\": -71.0589},\n                           mapbox_style=\"carto-positron\",\n                           zoom=10\n                          )\nfig.show()","118578e9":"#fig = px.scatter_mapbox(listingsdf_copy, lat=\"latitude\", lon=\"longitude\", color='review_scores_rating', zoom=10, mapbox_style='open-street-map',width=1000)\n#fig.show()\n\nfig = px.choropleth_mapbox(nhood_ratescore_avg.reset_index(), geojson=boston, featureidkey='properties.name', locations='neighbourhood_cleansed', color='review_scores_rating',center={\"lat\": 42.3601, \"lon\": -71.0589},\n                           mapbox_style=\"carto-positron\",\n                           zoom=10\n                          )\nfig.show()","a9e90283":"nhood_price_avg.corr(nhood_ratescore_avg)","f8430c93":"listingsdf_copy['price_per_accommodates'].corr(listingsdf_copy['review_scores_rating'])","463800ad":"# try the following code which will show you common feature of high price neighborhood \n\n#nbhoods = nhood_price_avg.reset_index()[nhood_price_avg.reset_index()['price_per_accommodates']>70]['neighbourhood_cleansed'].unique()\n#nhood_wordcloud(listingsdf,nbhoods)\n\n## try to look at the average price over 200 neighborhood, they all related to the 'center','walk','mins','shop' which suggest the higher price more corrlate to the convenient location\n## only one exception which is South Boston Waterfront, but this neiborhood has seaport and customer might normally be willing to pay more for the sea view \n###########################################################################\n\nnbhoods = nhood_ratescore_avg.reset_index()[nhood_ratescore_avg.reset_index()['review_scores_rating']>95]['neighbourhood_cleansed'].unique()\nnhood_wordcloud(listingsdf,nbhoods)\n","e8100f1e":"calendardf_copy['month'] = pd.DatetimeIndex(calendardf_copy['date']).month\nax1 = calendardf_copy.groupby('month')['available'].mean().plot(title='Boston Airbnb availability rate over months')\nax1.set_ylabel(\"availability rate\")","9a2e7dc3":"calendardf_dropna = calendardf.dropna(subset=['price'])   ","3633f610":"calendardf_dropna['price'] = calendardf_dropna['price'].replace('[\\$,]', '', regex=True).astype(float)\ncalendardf_dropna['month'] = pd.DatetimeIndex(calendardf_dropna['date']).month\nax2 = calendardf_dropna.groupby('month')['price'].mean().plot(title='Boston Airbnb price over months')\nax2.set_ylabel(\"price\")","ef226aaf":"merged_pd = pd.merge(calendardf_copy, listingsdf_copy, on=\"listing_id\")\navailability_avg = merged_pd.groupby(['neighbourhood_cleansed'])['available'].mean().sort_values()\navailability_avg","bb01ae57":"fig = px.choropleth_mapbox(availability_avg.reset_index(), geojson=boston, featureidkey='properties.name', locations='neighbourhood_cleansed', color='available',center={\"lat\": 42.3601, \"lon\": -71.0589},\n                           mapbox_style=\"carto-positron\",\n                           zoom=10\n                          )\nfig.show()","3d327f7a":"merged_pd.groupby(['month','neighbourhood_cleansed'])['available'].mean().unstack().plot(figsize=(10,20),subplots=True)","3cef7598":"# Boston Airbnb data analysis","db923578":"# Business Understanding, Data Understanding, Prepare Data\n\nAirbnb is a community-based online platform for listing and renting local homes which currently have millions of users. It connects hosts and travelers and facilitates the process of renting without owning any rooms itself. The income of Airbnb are mainly from commission fee of every booking. Therefore, how to increase the volume of transactions and how to increase the customer retention are important for Airbnb. This blog will focus on one of the useful metrics 'review_scores_rating' to measure customer satisfaction, and find out what kind of neighborhoods can increase customer retention and which month are good to encourage hosts in the neighborhoods to release more rentals and availabilities. \n\n## Data Exploring and Data Understanding","6ca00a25":"### ","7dc1b06e":"This plot omited the top 5% data to make boxplot easier observe","63a14ff8":"it won't process the missing value here because different questions require different way to process missing values. However, all the missing data in this blog are directly removed according to desired column. This is because the volume of the data is large enough and a lot of the columns with missing value are text data which are difficult to do imputation.","7fa43b06":"Generally, high review score areas are the city center and West Roxbury areas. In opposite, Mission Hill, Roxbury, Dorchester, Fenway seems having lowest review rates. \n\nLeather district have an incredibly high average review rate","8d191afc":"A lot of columns have missing values especially for optional options to be filled in by the hosts or customers","fb7fb29d":"**Sep** and **Otc** have the lowest availability rate which suggests these are the busiest time of the year to visit Boston ","cb28ee22":"## Data Describe\n\n* price: price for one night; **numeric data**\n* weekly_price: price for one week; **numeric data**\n* monthly_price: price for one month; **numeric data**\n* cleaning_fee: cost of cleaning; **numeric data**\n* guest_included: maximal guest number; **numeric data**\n* minimum_nights: minimum nights; **numeric data**\n* latitude and longitude: The geographical information; **numeric data**\n* neighbourhood_cleansed: The name of neighbourhood; **text data**\n* room_type: Type of room (Entire home\/apt, Private room and Shared room); **categorical data**\n* accommodates: Numbers of accommodates; **numeric data**\n* bathrooms: Numbers of bathrooms; **numeric data**\n* bedrooms: Numbers of bedrooms; **numeric data**\n* beds: Numbers of beds; **numeric data**\n* bed_type: types of beds; **categorical data**\n* number_of_reviews: the number of previous reviews; **numeric data**\n* cancellation_policy: Policy of cancellation(flexible, moderate, strict and super strict); **categorical data**\n* review_scores_rating: Customer scores; **numeric data(from 0 to 100)**\n* amentities: What amentites they provide; **text data**","8271a3aa":"Some neighborhoods with high review scores and high price per accommodates have low availability, such as Leather District and South Boston Waterfront. It might be worthwhile in future to promote more hosts in these areas to gain more profit.    \n\nAdditionally, some of the areas, such as Beacon Hill and Fenway, have high price per accommodates and low availability but it has low review score. Therefore, it might be valuable to do somethings for these areas to improve customer experience and have more hosts.\n\nSome high availability area such as Roslindale and Mattapan might need further price reduction or more ad to attract more customers.\n\nHowever, the availability does not equivalent to the bookings - some hosts might only want to limited days to rent out. Therefore, the final decision making might need more evidence and statistic experiment supports.","bd5e5d61":"Let's look at the top 10 words for high rating areas. The high rating areas could be closed to the city center but it also could be far away. Generally 'quiet' and 'walk' could be frequent words for high rating areas. This might suggests customer perfer to give high score for quiet and convenient neighborhoods. This is not an end of the conclusion - more data and investigation are required to confirm this.","568ec39d":"The busiest time for neighborhoods are generally Sep and Oct. However, some of neighborhoods have different busy time such as Longwood Medical Area (Feb - April), West End (March - August), Chinatown (April - Aug) and Fenway (April - Aug). Therefore, the ad time for these three can be different to others.","5b927e6f":"## Introduction\nAirbnb becomes one of most popular ways for people to select rental properties and it is important for airbnb to keep large number of people on the platform. This blog is aimed to explore what kind of neighborhoods would be more valuable for airbnb to investigate through respective analysis and which month is better for airbnb to encourage hosts to release more rentals and availabilities. Due to the time availability, this blog would only uses the Boston Airbnb data to do analysis. This work would use review scores rating as the metric (This blog assumes high review scores rating would result in high customer retention). Price per accommodates and availability are other two useful metric to figure out how to improve the situation\n\nThis work follows CRISP-DM Process:\n1. Business Understanding\n2. Data Understanding\n3. Prepare Data\n4. Model Data\n5. Results\n6. Deploy\n\nThis blog only focuses on the data analysis, so there won't be modelling and deployment parts inside. \n\n## Questions to answer \n\nTo evaluate this, the blog will answer the following questions:\n\n* Can you describe the vibe of each Boston neighborhood using listing descriptions?\n* What features of neighborhoods are important for customer book a property?\n* What are the busiest times of the year to visit Boston? By how much do prices spike?\n* What strategy Airbnb might make to further increase the profit?\n\n\n## ","e1be2617":"This dataset include date, and the listing_id could be used to be linked with *listingsdf*.\n\nOnly *price* has missing value and it is not the numeric type (need to be converted)\n\nThis dataset provide the availability of the property which could be used as an indicator about how popular property is ","28f11936":"# Summary\n\nThis blog has done following things which can support airbnb business:\n* the general vibe of Boston airbnb is good resterant, university, quiet and convenient \n* the key attractive features of neighborhoods are also quiet and convenient\n* The busiest time and price spikes for Boston airbnb are around Sep and Oct\n* The good strategy depends on the availability, price per accommodate and customer review scores of each neighborhood. Generally, it should be worthwhile to promote more hosts in low availability areas and improve customer satisction in lower review scores area. The price of neighborhood could be info to determine whether it is good to improve the customer satisfaction and availability through adjusting price.\n\n\nDue to the limited time availability, this blog only shows couple of the initial analysis for Boston data. The result still needs to be confirmed with more data and stastic methods (such as ABtest). The specific business solution needs to consider more business insights and info. The future work could be:\n* Further investigate how other factors would influence the customer reviews rating, price per accommodates and availability, such as cancellation policy, room types, amentities, cleaning fee, the number of guest etc.\n* Do more WordCloud visualization for other comments, such as customer comments, summary, space description, shown name, description, notes, transit, access, interaction, house rules etc. to dig out more info about what are important to increase booking numbers\n* List out some potential response actions to improve the booking numbers based on business operation experience and do A\/B test to test the most promising actions\n\n\n","2a5eca98":"Neighborhood correlation ( correlation for average price of each neighborhood):","a379cc55":"### the following work would investigate what kind of neighboorhoods are more more likely to gain higher customer review scores","f4166757":"## Import Library","121c0209":"Here we need to drop price missing rows - we want to see how real data distributed across the months so we don't want to do imputation. Additionally, calendar data is large enough (~1,300,000 rows) and dropping missing value won't cause significant bias. \n","521ada6c":"## Question 4: What strategy Airbnb might make to further increase the profit? ","892e9bae":"There are the reviewer comments which could be used to explore how guest like the property\n\nThis also have *listing_id* which can be used to link other two data set","667c81a1":"## Question 1: describe the vibe of neighborhood using listing description","eae5e7c1":"According to the wordcloud and histogram of top 10 words in neighborhood description, the neighborhoods in Boston is generally **quiet** and **convenient to location**. Additionally, **resterant** and **university** are popular for most of the neighborhood descriptions. \n\nIn some neighborhood, such as **Allston, brighton and Fenway**, mentioned 'university' or 'harvard' in their top 10 list. These areas highly likely have **more students** than other areas.  \n\nThe area such as **Bay Village and Back Bay**  have key word 'center' and 'walk' which suggests they are **more closer to the city center**\n\n**Mission Hill and Fenway** mentions 'museum' and 'art' which might be more **attractive to the artitest or people intersted in arts**\n\n...\n\n","e1f6c420":"This question would use WordCloud to visualize the vibe of neighborhood with neiborhood description","105117c7":"## Question 3: What are the busiest times of the year to visit Boston? By how much do prices spike?","47dee84b":"### This section would explore more about the review score and price for different neighborhood. ","3b95df4e":"review_scores_rating would be the most important metric in this blog\n\nthe review scores rating concentrate at the range [90-100], exponential could improve this but it also might lose the track on the scale","21bd9ccb":"*listingsdf* include a lot columns and different types of data, such as numeric, categorical, text, url, boolean etc","23d6e8e6":"The high price per accommodates area concentrate around the city center","3bd11cd1":"## Data Load","c76f3399":"### Price and Review Score Visualization by geographic","bf04f41b":"The mean value of each neiborhood is given below:","39778128":"## Data Preprocessing and Preparing","481d007f":"price per accommodates and rating score have a weakly positive correlation. This suggests that price could affect the rating score, but it normally is not the key factor","67d73e00":"In general, the price spike happens from **Sep** to **Oct** for Boston (above 230 dollar per night).  ","8777e1b3":"## Question 2: What features of neighborhoods are important for customer book a property?","d597191e":"point-wise correlation:"}}