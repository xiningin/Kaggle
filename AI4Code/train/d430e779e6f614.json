{"cell_type":{"1c4d4a74":"code","0ca3cb24":"code","9e6c4808":"code","8692921c":"code","74b20c6d":"code","847bbe72":"code","667d0e6f":"code","2057571a":"code","8b7a9955":"code","b37b183a":"code","39e72638":"code","db95d34a":"code","3ac573c9":"code","49ec084b":"code","70a17734":"code","8a6e6449":"code","f2276415":"code","ff572589":"code","f832c681":"code","7ac719c1":"code","999653e0":"code","be49132e":"code","cfb041fe":"code","e9cf8afd":"code","e53c248c":"markdown","e84cee4b":"markdown","638773b3":"markdown","2d0edbd3":"markdown","31ed8965":"markdown","cbbfaeb3":"markdown","4d90a72e":"markdown","654a4af6":"markdown"},"source":{"1c4d4a74":"import pandas as pd\nimport numpy as np\n\n#from sklearn.model_selection import StratifiedKFold,KFold,GroupKFold\n#from sklearn.metrics import accuracy_score\n\n#Pipeline\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.compose import make_column_transformer\n\n#For Missing Value and Feature Engineering\nfrom sklearn.feature_selection import SelectKBest, chi2, f_classif, VarianceThreshold\nfrom sklearn.impute import SimpleImputer, KNNImputer, MissingIndicator\nfrom sklearn.preprocessing import KBinsDiscretizer, OneHotEncoder, MinMaxScaler\nfrom sklearn.decomposition import PCA\n\nfrom sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier, VotingClassifier\nfrom xgboost import XGBClassifier\n#from catboost import CatBoostClassifier\n\nimport time\n","0ca3cb24":"train = pd.read_csv(\"..\/input\/santander-customer-satisfaction\/train.csv\")\ntest = pd.read_csv(\"..\/input\/santander-customer-satisfaction\/test.csv\")","9e6c4808":"train.head()","8692921c":"#create X and y datasets for splitting \nX = train.drop(['ID', 'TARGET'], axis=1)\ny = train['TARGET']","74b20c6d":"all_features = X.columns","847bbe72":"all_features = all_features.tolist()","667d0e6f":"numerical_features = [c for c, dtype in zip(X.columns, X.dtypes)\n                     if dtype.kind in ['i','f'] and c !='PassengerId']\ncategorical_features = [c for c, dtype in zip(X.columns, X.dtypes)\n                     if dtype.kind not in ['i','f']]","2057571a":"numerical_features","8b7a9955":"categorical_features","b37b183a":"#import train_test_split library\nfrom sklearn.model_selection import train_test_split\n\n# create train test split\nX_train, X_test, y_train, y_test = train_test_split( X,  y, test_size=0.3, random_state=0)  ","39e72638":"preprocessor = make_column_transformer(\n    \n    (make_pipeline(\n    #SimpleImputer(strategy = 'median'),\n    KNNImputer(n_neighbors=2, weights=\"uniform\"),\n    MinMaxScaler()), numerical_features),\n    \n    (make_pipeline(\n    SimpleImputer(strategy = 'constant', fill_value = 'missing'),\n    OneHotEncoder(categories = 'auto', handle_unknown = 'ignore')), categorical_features),\n    \n)","db95d34a":"preprocessor_best = make_pipeline(preprocessor, \n                                  VarianceThreshold(), \n                                  SelectKBest(f_classif, k = 15), \n                                  PCA(n_components = 4))","3ac573c9":"p1 = make_pipeline(preprocessor_best, XGBClassifier())\np2 = make_pipeline(preprocessor_best, RandomForestClassifier())\np3 = make_pipeline(preprocessor_best, ExtraTreesClassifier())\np4 = make_pipeline(VotingClassifier(estimators=[(\"xgbclassifier\",p1), (\"randomforestclassifier\",p2), ('extratreesclassifier',p3)], voting = 'soft'))","49ec084b":"# Create the param grid - xgbclassifier\n#param_grid = {\n# \"xgbclassifier__learning_rate\"    : [0.05, 0.10, 0.15, 0.20, 0.25, 0.30 ] ,\n# \"xgbclassifier__max_depth\"        : [ 3, 4, 5, 6, 8, 10, 12, 15],\n# \"xgbclassifier__min_child_weight\" : [ 1, 3, 5, 7 ],\n# \"xgbclassifier__gamma\"            : [ 0.0, 0.1, 0.2 , 0.3, 0.4 ],\n# \"xgbclassifier__colsample_bytree\" : [ 0.3, 0.4, 0.5 , 0.7 ]   \n#}\n","70a17734":"#from sklearn.model_selection import RandomizedSearchCV\n#voting_classfier = RandomizedSearchCV(estimator = p4, \n #                                   param_distributions = param_grid,\n #                                   cv = 5, verbose=3, n_jobs = -1, scoring = 'roc_auc', n_iter = 5)","8a6e6449":"p4.fit(X_train, y_train)","f2276415":"#p4.best_estimator_","ff572589":"print(f'Train : {p4.score(X_train, y_train):.3f}')\nprint(f'Test : {p4.score(X_test, y_test):.3f}')","f832c681":"from sklearn.metrics import roc_auc_score","7ac719c1":"print(f'Train AUC : {roc_auc_score(y_train, p4.predict_proba(X_train)[:,1]):.3f}')\nprint(f'Train AUC : {roc_auc_score(y_test, p4.predict_proba(X_test)[:,1]):.3f}')","999653e0":"test_pred = p4.predict_proba(test[X.columns])[:,1]\n#test_pred = rf_RandomGrid.predict(test[X.columns])","be49132e":"AllSub = pd.DataFrame({ 'ID': test['ID'],\n                       'TARGET' : test_pred\n    \n})","cfb041fe":"#AllSub['TARGET'] = AllSub['TARGET'].apply(lambda x: 1 if x > 0.5 else 0)","e9cf8afd":"AllSub.to_csv('Santander_Voting.csv', index = False)","e53c248c":"## Accuracy","e84cee4b":"- https:\/\/stackoverflow.com\/questions\/46793110\/using-votingclassifier-in-sklearn-pipeline\/46793305","638773b3":"## Import Data","2d0edbd3":"## Setup Pipeline ","31ed8965":"## Grid Search","cbbfaeb3":"## Divide Dataset into X and Y","4d90a72e":"## Import Libraries","654a4af6":"## Submission "}}