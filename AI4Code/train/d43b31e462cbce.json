{"cell_type":{"f0339223":"code","672c29a8":"code","4bc86043":"code","4928b71c":"code","f61ff7f4":"code","87aba43e":"code","ed50060a":"code","728047b9":"code","70ed3a3a":"code","d259bda8":"code","d70dd7c8":"code","fa826cf5":"markdown","6af16b35":"markdown","39222a1e":"markdown","c1177c2e":"markdown"},"source":{"f0339223":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport matplotlib.pyplot as plt\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","672c29a8":"data=pd.read_csv('..\/input\/linear-regression-dataset.csv')\ndata.columns","4bc86043":"data.info()","4928b71c":"data.head(13)","f61ff7f4":"plt.scatter(data.deneyim,data.maas)\nplt.xlabel('deneyim')\nplt.ylabel('maas')\nplt.title('Deneyim Maas Cizelgesi')\nplt.show()","87aba43e":"from sklearn.linear_model import LinearRegression","ed50060a":"linear_reg=LinearRegression()\nx=data.deneyim.values.reshape(-1,1)\ny=data.maas.values.reshape(-1,1)\nprint(type(x))\nprint(x.shape)\nprint(y.shape)\n\n#numpy a d\u00f6n\u00fc\u015f\u00fcm yapaca\u011f\u0131z . values onu yapar\n\nlinear_reg.fit(x,y)\n# prediction\n#b0=linear_reg.predict(0)\nb0 = linear_reg.intercept_\nprint(\"b0:\",b0)\n\n","728047b9":"b1=linear_reg.coef_ #e\u011fim\nprint(\"b1:\",b1)","70ed3a3a":"deneyim=11\nmaas=1663.89519747 + 1138.34819698*deneyim\nprint(\"11 y\u0131ll\u0131k deneyime g\u00f6re maa\u015f\u0131n\u0131z :\",maas)\n#print(\"11 y\u0131ll\u0131k deneyime g\u00f6re maa\u015f\u0131n\u0131z :\",linear_reg.predict(11))\n","d259bda8":"array=np.array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]).reshape(-1,1)\nplt.scatter(x,y)\ny_head=linear_reg.predict(array)\nplt.plot(array,y_head,color='red')","d70dd7c8":"#R-Square\nfrom sklearn.metrics import r2_score\nx=data.deneyim.values.reshape(-1,1)\ny=data.maas.values.reshape(-1,1)\nlinear_reg.fit(x,y)\ny_head=linear_reg.predict(x)\nplt.scatter(x,y,color='green')\nplt.plot(x,y_head,color='red')\nprint('r_square score :',r2_score(y,y_head))","fa826cf5":"LINEAR REGRESSION","6af16b35":"we found b0 and b1 values\n\ny=1663.89519747 + 1138.34819698.x\n\nmaas=1663.89519747 + 1138.34819698.deneyim","39222a1e":"formula=> y=b0+b1*x\n\nb0=constant (bias) y eksenini kesti\u011fi nokta\n\nb1=coeff (\u00e7izginin e\u011fimi)\n\nmaas= b0+b1*deneyim\n\npredict=tahmin\n\nresidual=y-y_head\nMSE=sum(residual^2)\/n  n=sample say\u0131s\u0131\n\nMSE=Mean Squared Error\n\n","c1177c2e":"lets see our data with a  graph"}}