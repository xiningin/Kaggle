{"cell_type":{"86e9f3bf":"code","c1d6a524":"code","1b73b932":"code","91b71b84":"code","635959d2":"code","1a234eba":"code","26045651":"code","90c13319":"code","b179dddd":"code","b6b0cf25":"markdown","b4d28792":"markdown","1a26fc77":"markdown","90ee6bb7":"markdown","d1e21e24":"markdown","e585836c":"markdown","ba3b0ee2":"markdown","e702acf7":"markdown","28531de3":"markdown","f661bd2d":"markdown","7e076ba9":"markdown","0482d195":"markdown","6a2c7905":"markdown","d67d6650":"markdown"},"source":{"86e9f3bf":"%matplotlib inline\n\nimport sys\nimport statsmodels as ss\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt","c1d6a524":"versions = ( (\"matplotlib\", matplotlib.__version__),\n            (\"numpy\", np.__version__),\n            (\"statsmodels\", ss.__version__) )\n\nprint(sys.version, \"\\n\")\nprint(\"library\" + \" \" * 4 + \"version\")\nprint(\"-\" * 18)\n\nfor tup1, tup2 in versions:\n    print(\"{:11} {}\".format(tup1, tup2))","1b73b932":"# let's create a time interval of minutes\n\n# arange will list down values in array form\n# range will give value in list form\n\ntime = np.arange(1, 51)\ntime","91b71b84":"trend = time * 2.75","635959d2":"# x-axis : time, y-axis - electricity units, b: line in blue color, .: dotted line\nplt.plot(time, trend, 'b.')\n\n# title of plot\nplt.title(\"Trend vs Time\")\n\n# x-axis label\nplt.xlabel(\"minutes\")\n\n# y-axis label\nplt.ylabel(\"electricity demand\");","1a234eba":"# sin is a trigonometric function which repeates after every 2*pie (360 degree)\n\nseasonal = 10 + np.sin(time) * 10\nseasonal","26045651":"# please refer cell 5 to understand each line of codes\n\nplt.plot(time, seasonal, 'g-.')\nplt.title(\"Seasonality vs Time\")\nplt.xlabel(\"minutes\")\nplt.ylabel(\"electricity demand\");","90c13319":"np.random.seed(10)  # reproducible results\n\n# loc : mean\n# scale : standard deviation\n# size : number of points\/samples etc\n# reference : https:\/\/numpy.org\/doc\/stable\/reference\/random\/generated\/numpy.random.normal.html\n\nresidual = np.random.normal(loc=0.0, scale=1, size=len(time))\nresidual","b179dddd":"# please refer cell 5 to understand each line of codes\n\nplt.plot(time, residual, 'r-.')\nplt.title(\"Residuals vs Time\")\nplt.xlabel(\"minutes\")\nplt.ylabel(\"electricity demand\");","b6b0cf25":"<b>Relating above plot with Trend Definition:<\/b> Linearly Increasing without repeatation","b4d28792":"What folllows is a plot showing trend as a function of time.","1a26fc77":"### Python & Library Versions","90ee6bb7":"<b>Quick recap:<\/b> We created data for the fictional demand of electricity as measured by a fictional sensor. We did this by creating the three necessary components of time series data, which include trend, seasonality, and residuals. ","d1e21e24":"Naturally, we'll want to plot our seasonality.","e585836c":"# Summary\n\nIn this lesson we have learnt: \n1. Intro to Time Series & application areas.\n2. A Theoretical & practical understanding of the three components of time series data.","ba3b0ee2":"# Section 2: Constructing Seasonality:-","e702acf7":"# Section 1: Constructing Trend:-","28531de3":"A quick plot of residuals...","f661bd2d":"Now we need to create a trend. Let's pretend we have a sensor measuring demand for electricity. We'll ignore units to keep things simple.","7e076ba9":"# Section 3: Constructing Residual:-","0482d195":"### Define time series:\n1. A sequence of data points organized in time order (month wise, year wise etc).\n2. The sequence captures data at equally spaced points in time. Thus, it is a sequence of discrete-time data.\n3. Data collected irregularly is not considered a time series.\n\n### Applications of Time Series:\nStock Prices, Economic Forcasting (by WTO), Demand Planning and Forcasting (by Amazon etc)","6a2c7905":"# Three components of Time-Series: \n<b>1. Trend : long-term direction :-<\/b>\nTrend can be increasing, decreasing, or constant but doesn't repeat. It can increase or decrease in different ways (linearly, exponentially, or in other ways).\nFor example, increasing job growth year over year despite seasonal fluctuations.<br\/><br\/>\n<b>2. Seasonality : periodic behavior :-<\/b>\nSeasonality captures effects that occur with specific frequency. It can be driven by many factors. It can be increasing, decreasing, or constant but does repeat. For example, 1. Naturally occurring events, such as weather fluctuations caused by time of year. 2. Social or cultural behavior, such as holidays or religious observances.<br\/><br\/>\n<b>3. Residual\/Noise : irregular fluctuations :-<\/b>\nResiduals are the random fluctuations left over after trend and seasonality are removed. We can't see a trend or seasonal pattern in the residual. They\u2019re either random or a portion of the trend or seasonality components was missed in the decomposition.\n\n\n\n# Constructing each time series component:\n\n\n### Imports","d67d6650":"# Introduction:"}}