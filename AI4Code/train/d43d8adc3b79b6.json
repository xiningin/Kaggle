{"cell_type":{"0eb48333":"code","7b1e2de0":"code","3356e82d":"code","174942d4":"code","1a1d6615":"code","7fd5382a":"code","1ce7a7ee":"code","e6077610":"code","f06a9046":"code","9cf4bf63":"code","481d7f26":"code","35b65c39":"code","7abcd6ea":"code","a4620408":"code","b8f31ba5":"code","91f683d5":"code","f273ccd3":"markdown","1adf0fa0":"markdown","a7f0db4e":"markdown","cee61233":"markdown","969db942":"markdown","4ba0dd63":"markdown","ba6bace2":"markdown"},"source":{"0eb48333":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","7b1e2de0":"train=pd.read_csv('..\/input\/Website Phishing.csv')\ntrain.head()","3356e82d":"a=len(train[train.Result==0])\nb=len(train[train.Result==-1])\nc=len(train[train.Result==1])\nprint(a,\"times 0 repeated in Result\")\nprint(b,\"times -1 repeated in Result\")\nprint(c,\"times 1 repeated in Result\")\nsns.countplot(train['Result'])","174942d4":"sns.heatmap(train.corr(),annot=True)\n","1a1d6615":"sns.pairplot(train)\ntrain.describe()","7fd5382a":"train.info()","1ce7a7ee":"sns.heatmap(train.isnull(),cmap='Blues')\n","e6077610":"X = train.drop('Result',axis=1).values \ny = train['Result'].values","f06a9046":"y","9cf4bf63":"X","481d7f26":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.40,random_state=10)\n\n# Show the results of the split\nprint(\"Training set has {} samples.\".format(X_train.shape[0]))\nprint(\"Testing set has {} samples.\".format(X_test.shape[0]))\n","35b65c39":"from sklearn.linear_model import LogisticRegression\n\n#create logistic regression object\nClassifier=LogisticRegression(random_state= 0, multi_class='multinomial' , solver='newton-cg')\n \n#Train the model using training data \nClassifier.fit(X_train,y_train)","7abcd6ea":"#import Evaluation metrics \nfrom sklearn.metrics import matthews_corrcoef\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import f1_score\n \n#Test the model using testing data\npredictions = Classifier.predict(X_test)\n","a4620408":"from sklearn.metrics import confusion_matrix,classification_report\ncm=confusion_matrix(y_test,predictions)\nsns.heatmap(cm,annot=True)","b8f31ba5":"print(\"f1 score is \",f1_score(y_test,predictions,average='weighted'))\nprint(\"matthews correlation coefficient is \",matthews_corrcoef(y_test,predictions))\n\n#secondary metric,we should not consider accuracy score because the classes are imbalanced.\n\nprint('****************************************************************************************')\nprint(\"The accuracy of your Logistic Regression on testing data is: \",100.0 *accuracy_score(y_test,predictions))\nprint('****************************************************************************************')","91f683d5":"for i in (0,len(predictions)-1):\n    if(y_test[i] == predictions[i]):\n        print('index = {} , y test = {} ,y predict ={}\\n'.format(i,y_test[i],predictions[i]))","f273ccd3":"# STEP #1: IMPORT DATASET","1adf0fa0":"# STEP #5: Model Testing","a7f0db4e":"# STEP #4: Model Training","cee61233":"# Introduction\nWebsite phishing dataset problem.\nFitting logistic regression and creating confusion matrix of predicted values and real values I was able to get 87.91% accuracy.\n","969db942":"# STEP #3: Prepare the Data for Training \/ Data Cleaning","4ba0dd63":"# STEP #0: Import Libraries","ba6bace2":"# STEP #2: Explore \/Visualze Data set"}}