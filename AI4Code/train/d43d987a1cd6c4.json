{"cell_type":{"3a614f47":"code","544900ff":"code","481f0ec9":"code","3936fb19":"code","e36d12c2":"code","6b835467":"code","6d8ca28b":"code","4b39a4d6":"code","61cf70f1":"code","281bd8b8":"code","0f5f20fd":"code","45fd7935":"code","1c19d0da":"code","4fa5c12c":"code","af82c1bc":"code","1e742395":"code","3bd1402a":"code","f106ced6":"markdown","7fed5228":"markdown","c56f2e29":"markdown","146e1b0d":"markdown","a0c21748":"markdown","66017ff2":"markdown","61c2c5a2":"markdown","eba0a932":"markdown","3088b201":"markdown","64b28e7a":"markdown","f1a217d6":"markdown","95b70e81":"markdown","68fa04d4":"markdown"},"source":{"3a614f47":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy import stats\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","544900ff":"fifa_train = pd.read_csv('..\/input\/fifa19\/data.csv')\n#fifa_train = fifa_train[['Name','Nationality','Overall']]\nfifa_train.head()","481f0ec9":"fifa_train['Overall'].describe()","3936fb19":"sns.distplot(fifa_train['Overall']);","e36d12c2":"print(\"Skewness: %f\" % fifa_train['Overall'].skew())\nprint(\"Kurtosis: %f\" % fifa_train['Overall'].kurt())","6b835467":"var = 'Age'\ndata = pd.concat([ fifa_train['Overall'], fifa_train[var] ], axis=1)\ndata.plot.scatter(x=var, y='Overall', ylim=(0,100));","6d8ca28b":"var = 'Position'\ndata = pd.concat([fifa_train['Overall'], fifa_train[var]], axis=1)\nf, ax = plt.subplots(figsize=(16,8))\nfig = sns.boxplot(x=var, y=\"Overall\", data=data)\nfig.axis(ymin=30, ymax=100);\nplt.xticks(rotation=90);","4b39a4d6":"corrmat = fifa_train.corr()\n#print (corrmat)\nf, ax = plt.subplots(figsize=(24, 18))\nsns.heatmap(corrmat, vmax=0.8, square=True);","61cf70f1":"k = 10\ncols = corrmat.nlargest(k, 'Overall')['Overall'].index\nprint (cols)\ncm = np.corrcoef(fifa_train[cols].values.T)\n#print (fifa_train[cols].values.T)\n#print (cm)\nsns.set(font_scale=1.25)\nhm = sns.heatmap(data=cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","281bd8b8":"sns.set()\ncols = ['Overall', 'Reactions', 'Composure', 'Potential', 'Special',\n       'ShortPassing', 'International Reputation', 'Vision', 'LongPassing',\n       'BallControl']\nsns.pairplot(fifa_train[cols],height=2.5)\nplt.show();","0f5f20fd":"total = fifa_train.isnull().sum().sort_values(ascending=False)\npercent = (fifa_train.isnull().sum()\/fifa_train.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(60)","45fd7935":"saleprice_scaled = StandardScaler().fit_transform(fifa_train['Overall'][:,np.newaxis]);\nlow_range = saleprice_scaled[saleprice_scaled[:,0].argsort()][:10]\nhigh_range= saleprice_scaled[saleprice_scaled[:,0].argsort()][-10:]\nprint('outer range (low) of the distribution:')\nprint(low_range)\nprint('\\nouter range (high) of the distribution:')\nprint(high_range)","1c19d0da":"var = 'Reactions'\ndata = pd.concat([fifa_train['Overall'], fifa_train[var]], axis=1)\ndata.plot.scatter(x=var, y='Overall', ylim=(0,100));","4fa5c12c":"var = 'Composure'\ndata = pd.concat([fifa_train['Overall'], fifa_train[var]], axis=1)\ndata.plot.scatter(x=var, y='Overall', ylim=(0,100));","af82c1bc":"sns.distplot(fifa_train['Overall'], fit=norm);\nfig = plt.figure()\nres = stats.probplot(fifa_train['Overall'], plot=plt)","1e742395":"sns.distplot(fifa_train['Composure'], fit=norm);\nfig = plt.figure()\nres = stats.probplot(fifa_train['Composure'], plot=plt)","3bd1402a":"sns.distplot(fifa_train['Reactions'], fit=norm);\nfig = plt.figure()\nres = stats.probplot(fifa_train['Reactions'], plot=plt)","f106ced6":"Through the above heatmap, we can see the different correlations. We can see the sections of the heatmap corresponding to forwards, midfielders, defenders and goalkeepers.","7fed5228":"Let us see the relationship between the age and the overall rating","c56f2e29":"Let us normalize the \"Composure\" attribute","146e1b0d":"Let us look at the relationship between position and overall rating.","a0c21748":"Let us find out the skew and kurtosis","66017ff2":"I have started by loading the datafile","61c2c5a2":"Let us proceed to dealing with missing values","eba0a932":"Seems like my code isn't being displayed properly(possibly due to a version error). Let me do my further analysis based on my knowledge of the subject.","3088b201":"seems like our 10 features ar not missing too many values.","64b28e7a":"Analyzing the overall ratings","f1a217d6":"let us move on to a bivariate analysis","95b70e81":"let us normalize the 'Overall' column","68fa04d4":"Let us look at the \"Reactions\" attribute"}}