{"cell_type":{"aef7d1ba":"code","88725c9f":"code","74cd4e0c":"code","e5582abf":"code","b51c158d":"code","207a453e":"code","7d9e7996":"code","86dd82c1":"code","18c8015a":"code","e00618f8":"code","63e29865":"code","1a2d9345":"code","2ec7f62f":"code","25d54b4b":"code","4d07a653":"code","60e37cf7":"code","a9716af1":"code","74898bd4":"code","db30c1e2":"code","8133e214":"code","71518a42":"code","7556751e":"code","9360b939":"code","a1a80ba8":"code","0d23f5f8":"markdown","56153eee":"markdown","4f4b126d":"markdown","cd759697":"markdown"},"source":{"aef7d1ba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","88725c9f":"#Import required libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n%matplotlib inline","74cd4e0c":"#Import a 311 NYC service request\ndf = pd.read_csv('..\/input\/311_Service_Requests_from_2010_to_Present.csv')","e5582abf":"#Shape dataset before dropping nan values\ndf.shape","b51c158d":"#Display column names\ndf.columns","207a453e":"#Status of tickets\ndf['Status'].value_counts().plot(kind='bar',alpha=0.6,figsize=(5,5))\nplt.show()","7d9e7996":"#To get nan values in the entire dataset\ndf.isnull().sum()","86dd82c1":"#fix blank values in City column\ndf['City'].dropna(inplace=True)","18c8015a":"#fix blank values in Complaint Type column\ndf['Complaint Type'].dropna(inplace=True)","e00618f8":"#To get nan values in the entire dataset\ndf.isnull().sum()","63e29865":"#Group dataset by complaint type to display\ngroupedby_complainttype = df.groupby('Complaint Type')","1a2d9345":"#Find the top complaint type \ngroupedby_complainttype['Complaint Type'].value_counts().nlargest(1)","2ec7f62f":"#Group dataset by major complaint type to display\ngrp_data = groupedby_complainttype.get_group('Blocked Driveway')\ngrp_data.shape","25d54b4b":"#count of null values in grouped city column data\ngrp_data['City'].isnull().sum()","4d07a653":"#count of null values in grouped Location Type column data\ngrp_data['Location Type'].isnull().sum()","60e37cf7":"#count of null values in grouped Complaint Type column data\ngrp_data['Complaint Type'].isnull().sum()","a9716af1":"#fix those NAN with \"unknown city\" value instead\ngrp_data['City'].fillna('Unknown City', inplace =True)","74898bd4":"#fix those NAN with \"Location Type\" value instead\ngrp_data['Location Type'].fillna('Unknown Location', inplace =True)","db30c1e2":"#Scatter plot displaying all the cities that raised complaint of type 'Blocked Driveway'\nplt.figure(figsize=(20, 15))\nplt.scatter(grp_data['Complaint Type'],grp_data['City'])\nplt.title('Plot showing list of cities that raised complaint of type Blocked Driveway')\nplt.show()","8133e214":"#Display array of Location Types\ndf['Location Type'].values","71518a42":"#Display complaint type and city together\ndf[['Complaint Type','City']]","7556751e":"#Find the top 10 complaint types \ngroupedby_complainttype['Complaint Type'].value_counts().nlargest(10)","9360b939":"#Plot a bar graph of count vs. complaint types\ndf['Complaint Type'].value_counts().plot(kind='barh',alpha=0.6,figsize=(5,5))\nplt.show()","a1a80ba8":"#Display the major complaint types and their count\ngroupedby_complainttype['Complaint Type'].value_counts().nlargest(50)","0d23f5f8":"**3.  Find major complaint types**","56153eee":"**4.  Visualize the complaint types**","4f4b126d":"**1.  Import a 311 NYC service request**","cd759697":"**2.  Basic data exploratory analysis **"}}