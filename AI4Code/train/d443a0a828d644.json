{"cell_type":{"d674c980":"code","56761acc":"code","3bbf1927":"code","4509ef6d":"code","b4368285":"code","44908431":"code","b26ead16":"code","f2ca4127":"code","a4a78aa8":"code","3b2f09d1":"code","97a06042":"code","ad983bb4":"code","04e03426":"code","0c74274f":"code","3d150a86":"code","e066bc1a":"code","36d401ac":"code","d7af83bd":"code","5bded8f4":"code","e5cc9910":"code","dbdfe149":"code","d5ddefd1":"code","7c6b1239":"code","75bc61a4":"code","af24cd13":"code","01e87edb":"code","25fbcf38":"code","54456d78":"code","6a1eb996":"code","09ca8d1e":"code","91613ca8":"code","71404a6b":"code","6737ed33":"code","4bef5f5a":"code","77423e10":"code","b7997db7":"code","9c2303a2":"code","62328fba":"code","fa5fe82a":"code","1190bf85":"code","e2d2aab9":"code","45ef5e78":"code","d89de043":"code","59bc4787":"markdown","865c94b7":"markdown","e730d542":"markdown","5e9830c8":"markdown","eb03b3c3":"markdown"},"source":{"d674c980":"import pandas as pd\nimport numpy as np\nfrom plotly import express as px\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn import metrics","56761acc":"#Link: https:\/\/www.kaggle.com\/fedesoriano\/heart-failure-prediction\ndata = \"..\/input\/heart-failure-prediction\/heart.csv\"","3bbf1927":"df = pd.read_csv(data)","4509ef6d":"display(df)","b4368285":"print(df.info())","44908431":"columns = [\"ChestPainType\", \"RestingECG\", \"ExerciseAngina\", \"ST_Slope\"]\n\nfor column in columns:\n    print(df[f\"{column}\"].unique())","b26ead16":"sex_list = list(df[\"Sex\"]) #2\ncpt_list = list(df[\"ChestPainType\"]) #4\nrecg_list = list(df[\"RestingECG\"]) #3\nea_list = list(df[\"ExerciseAngina\"]) #2\nsts_list = list(df[\"ST_Slope\"]) #3","f2ca4127":"def aux(x):\n    return 1 if x == \"M\" else 0\n\nnew_sex_list = [aux(sex) for sex in sex_list]\ndf[\"Sex\"] = new_sex_list","a4a78aa8":"def aux(x):\n    if x == \"ATA\":\n        return 0\n    elif x == \"NAP\":\n        return 1\n    elif x == \"ASY\":\n        return 2\n    elif x == \"TA\":\n        return 3\n    \nnew_cpt_list = [aux(t) for t in cpt_list]\ndf[\"ChestPainType\"] = new_cpt_list","3b2f09d1":"def aux(x):\n    if x == \"Normal\":\n        return 0\n    if x == \"ST\":\n        return 1\n    if x == \"LVH\":\n        return 2\n    \nnew_recg_list = [aux(ecg) for ecg in recg_list]\ndf[\"RestingECG\"] = new_recg_list","97a06042":"def aux(x):\n    return 0 if x == \"N\" else 1\n\nnew_ea_list = [aux(ea) for ea in ea_list]\ndf[\"ExerciseAngina\"] = new_ea_list","ad983bb4":"def aux(x):\n    if x == \"Down\":\n        return 0\n    if x == \"Flat\":\n        return 1\n    if x == \"Up\":\n        return 2\n    \nnew_sts_list = [aux(sts) for sts in sts_list]\ndf[\"ST_Slope\"] = new_sts_list","04e03426":"df.head()","0c74274f":"df.info()","3d150a86":"plt.subplots(figsize = (15, 5))\nsns.heatmap(df.corr(), cmap = \"Wistia\", annot = True, lw = 0.5)\nplt.show()","e066bc1a":"#Excluding the columns that do not have a significative correlation whit the heart disease\n\ndrop_list = [\"Sex\", \"RestingECG\"]\n\nfor item in drop_list:\n    df = df.drop(item, axis = 1)","36d401ac":"df.info()","d7af83bd":"x = df.drop(\"HeartDisease\", axis = 1)\ny = df[\"HeartDisease\"]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2)","5bded8f4":"linear = LinearRegression()\nlinear.fit(x_train, y_train)\n\nrandomforest  = RandomForestRegressor()\nrandomforest.fit(x_train, y_train)","e5cc9910":"linear_test = linear.predict(x_test)\nrandomforest_test = randomforest.predict(x_test)","dbdfe149":"r2_linear = metrics.r2_score(y_test, linear_test)\nerror_linear = metrics.mean_squared_error(y_test, linear_test)\n\nr2_randomforest = metrics.r2_score(y_test, randomforest_test)\nerror_randomforest = metrics.mean_squared_error(y_test, randomforest_test)\n\nprint(r2_linear, r2_randomforest)\nprint(error_linear, error_randomforest)","d5ddefd1":"comparison_df = pd.DataFrame()\ncomparison_df[\"Heart Disease - Real\"] = y_test\ncomparison_df[\"Heart Disease - Predicted\"] = randomforest_test\ncomparison_df = comparison_df.reset_index(drop = True)\ndisplay(comparison_df)","7c6b1239":"real = sns.countplot(data = comparison_df, y = \"Heart Disease - Real\")\nplt.show()","75bc61a4":"predicted = sns.histplot(data = comparison_df, y = \"Heart Disease - Predicted\")\nplt.show()","af24cd13":"df = pd.read_csv(data)","01e87edb":"analysis_df = pd.DataFrame()","25fbcf38":"heartdisease_list = list(df[\"HeartDisease\"])\nnone_list = [None]","54456d78":"_list = list(df[\"Age\"].values)\n\ndef aux(x):\n    return _list[x] if heartdisease_list[x] == 1 else None\n\naffected_list = [aux(a) for a in range(len(_list))]\naffected_list = [word for word in affected_list if not word in none_list]\n\nanalysis_df[\"Dimension\"] = affected_list","6a1eb996":"plt.figure(figsize = (15, 5))\nsns.countplot(data = analysis_df, x = 'Dimension')\nplt.show()","09ca8d1e":"_list = list(df[\"ChestPainType\"].values)\n\ndef aux(x):\n    return _list[x] if heartdisease_list[x] == 1 else None\n\naffected_list = [aux(a) for a in range(len(_list))]\naffected_list = [word for word in affected_list if not word in none_list]\n\nanalysis_df[\"Dimension\"] = affected_list","91613ca8":"sns.countplot(data = analysis_df, x = 'Dimension')\nplt.show()","71404a6b":"_list = list(df[\"RestingBP\"].values)\n\ndef aux(x):\n    return _list[x] if heartdisease_list[x] == 1 else None\n\naffected_list = [aux(a) for a in range(len(_list))]\naffected_list = [word for word in affected_list if not word in none_list]\n\nanalysis_df[\"Dimension\"] = affected_list","6737ed33":"plt.figure(figsize = (30, 10))\nsns.countplot(data = analysis_df, x = 'Dimension')\nplt.show()","4bef5f5a":"_list = list(df[\"MaxHR\"].values)\n\ndef aux(x):\n    return _list[x] if heartdisease_list[x] == 1 else None\n\naffected_list = [aux(a) for a in range(len(_list))]\naffected_list = [word for word in affected_list if not word in none_list]\n\nanalysis_df[\"Dimension\"] = affected_list","77423e10":"affected_list.sort()","b7997db7":"array = np.array(affected_list)\nmatrix = np.split(array, 4)","9c2303a2":"for array in matrix:\n    array = list(array)\n    \n    sub_analysis_df = pd.DataFrame()\n    sub_analysis_df[\"Dimension\"] = array\n    \n    plt.figure(figsize = (20, 5))\n    sns.countplot(data = sub_analysis_df, x = 'Dimension')\n    plt.show()","62328fba":"_list = list(df[\"ExerciseAngina\"].values)\n\ndef aux(x):\n    return _list[x] if heartdisease_list[x] == 1 else None\n\naffected_list = [aux(a) for a in range(len(_list))]\naffected_list = [word for word in affected_list if not word in none_list]\n\nanalysis_df[\"Dimension\"] = affected_list","fa5fe82a":"sns.countplot(data = analysis_df, x = 'Dimension')\nplt.show()","1190bf85":"_list = list(df[\"Oldpeak\"].values)\n\ndef aux(x):\n    return _list[x] if heartdisease_list[x] == 1 else None\n\naffected_list = [aux(a) for a in range(len(_list))]\naffected_list = [word for word in affected_list if not word in none_list]\n\nanalysis_df[\"Dimension\"] = affected_list","e2d2aab9":"plt.figure(figsize = (20, 5))\nsns.countplot(data = analysis_df, x = 'Dimension')\nplt.show()","45ef5e78":"_list = list(df[\"ST_Slope\"].values)\n\ndef aux(x):\n    return _list[x] if heartdisease_list[x] == 1 else None\n\naffected_list = [aux(a) for a in range(len(_list))]\naffected_list = [word for word in affected_list if not word in none_list]\n\nanalysis_df[\"Dimension\"] = affected_list","d89de043":"sns.countplot(data = analysis_df, x = 'Dimension')\nplt.show()","59bc4787":"# **Conclusions:**\n- **Predictive Model:**\n- You can predict the 0 to 100% chance of a heart attack with this model with an average accuracy. Then it can be used and its results can be taken into account for a visit to the doctor.\n\n- **Data Analysis (with the most relevant data):**\n- Heart attack is much more common in the age group between 46 and 65 years. But there are also good occurrences in people over 38 and over 67 years.\n- Heart attack is also very common when the chest pain type is os the type ASY (Asymptomatic).\n- There is no peak range in this data, but the data show that the heart attack is more frequent when the Resting Blood Pressure is at 110, 120, 130 and 140.\n- There is also no peak range, but when the Maximum Heart Rate someone achieves is 120, 130, 140 or 150 it can mean that they may have a tendency to have a heart attack.\n- Angina after an exercise is also worrying. Most cases of heart attack had angina as a symptom.\n- As expected, many heart attack cases fall within the Oldpeak risk range (1.5 - 4.2).\n- Finally, most cases of heart attack happened to people who showed the slope of the peak exercise ST segment as flat.","865c94b7":"# **Data's Treatment:**","e730d542":"# **AI's Construction:**","5e9830c8":"# **New values to compare:**\n- **Sex:** M = 1, F = 0\n- **Chest Pain Type:** ATA = 0, NAP = 1, ASY = 2, TA = 3\n- **Resting ECG:** Normal = 0, ST = 1, LVH = 2\n- **Exercise Angina:** N = 0, Y = 1\n- **ST Slope:** Up = 2, Flat = 1, Down = 0","eb03b3c3":"# **Data Analysis:**"}}