{"cell_type":{"492653b1":"code","5806da6d":"code","8dfb7512":"code","182356f3":"code","2b946c19":"code","0ce52d4e":"code","4313d0a9":"code","8fe1482e":"code","b3117d32":"code","d8c656d4":"code","83412414":"code","79962ed9":"code","67378835":"code","66663b03":"code","8ea6b76a":"code","ebf92b95":"code","eb2a2314":"code","3c360edd":"code","a85b09bb":"code","407a7db0":"code","cb7e6190":"code","fb023128":"code","fbf0b5c7":"code","c87cc111":"code","ca52f72a":"code","fd258d53":"code","d29316a0":"code","2d94e78f":"code","95d699e6":"code","165f360c":"code","5dfac995":"code","87d9b511":"code","f67dd465":"code","e6805aef":"code","1c7852f7":"code","d9b0758c":"code","fb0d3c66":"code","15915162":"code","c5e847db":"code","4278cd8e":"code","00609f51":"code","02113189":"code","f9b1e2fb":"code","076931a3":"code","71006bef":"code","18fe5e14":"code","c951941c":"code","8d1097c6":"code","3a1307c8":"code","57c9b5ed":"code","9625bc2d":"code","c2390ef0":"code","6a3b76b9":"code","b792f8b3":"code","af34dd9f":"code","b9dccfc4":"code","cb0bfacf":"code","d35b73df":"markdown","e6a6d671":"markdown","31dabd7e":"markdown","5a6035b5":"markdown","e421f6f8":"markdown","ad889d4f":"markdown","6bda69da":"markdown","1b2aff46":"markdown","eb737692":"markdown","a7c5c104":"markdown","5f60d9c3":"markdown","2a8e4fdb":"markdown","d0bc20f3":"markdown","66ce80b7":"markdown","ca9038c7":"markdown","65f6d680":"markdown","bc4dba03":"markdown","2999dcad":"markdown","6ac2b6b9":"markdown","73809676":"markdown","80eb0c2a":"markdown","b0371256":"markdown","2195a8a5":"markdown"},"source":{"492653b1":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt # data visualization\nimport seaborn as sns # data visualization\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nplt.style.use('ggplot')","5806da6d":"train= pd.read_csv('..\/input\/titanic\/train.csv')\ntest= pd.read_csv('..\/input\/titanic\/test.csv')","8dfb7512":"train.describe()","182356f3":"test.describe()","2b946c19":"train.head()","0ce52d4e":"train.shape","4313d0a9":"train.dtypes","8fe1482e":"test.head()","b3117d32":"test.shape","d8c656d4":"test.dtypes","83412414":"train.isnull().sum()","79962ed9":"test.isnull().sum()","67378835":"train['Age'].median()","66663b03":"train['Embarked'].mode()[0]","8ea6b76a":"train['Age'].fillna(train['Age'].median(), inplace=True)\ntrain['Embarked'].fillna(train['Embarked'].mode()[0], inplace=True)","ebf92b95":"train.isnull().sum()","eb2a2314":"train.drop(columns=['PassengerId', 'Name', 'Ticket', 'Cabin'], axis=1, inplace=True)","3c360edd":"train.head()","a85b09bb":"test.drop(columns=['PassengerId', 'Name', 'Ticket', 'Cabin'], axis=1, inplace=True)","407a7db0":"test.head()","cb7e6190":"test.isnull().sum()","fb023128":"test['Age'].median()","fbf0b5c7":"test['Embarked'].mode()[0]","c87cc111":"test['Age'].fillna(test['Age'].median(), inplace=True)\ntest['Fare'].fillna(test['Fare'].median(), inplace=True)","ca52f72a":"test.isnull().sum()","fd258d53":"train['Survived'].value_counts()","d29316a0":"train['Pclass'].value_counts()","2d94e78f":"train['Sex'].value_counts()","95d699e6":"train['SibSp'].value_counts()","165f360c":"train['Parch'].value_counts()","5dfac995":"train['Embarked'].value_counts()","87d9b511":"test['Pclass'].value_counts()","f67dd465":"test['Sex'].value_counts()","e6805aef":"test['SibSp'].value_counts()","1c7852f7":"test['Parch'].value_counts()","d9b0758c":"test['Embarked'].value_counts()","fb0d3c66":"train.plot(kind='box', figsize=(10,8))","15915162":"column_name= ['Age', 'SibSp', 'Parch', 'Fare']\n\ntrain[column_name]= train[column_name].clip(lower= train[column_name].quantile(0.15), upper= train[column_name].quantile(0.85), axis=1)","c5e847db":"train.drop(columns=['Parch'], axis=1, inplace=True)","4278cd8e":"train.plot(kind='box', figsize= (10,8)) ","00609f51":"test.plot(kind='box', figsize= (10,8))","02113189":"test[column_name]= test[column_name].clip(lower= test[column_name].quantile(0.15), upper= test[column_name].quantile(0.85), axis=1)\n\ntest.drop(columns=['Parch'], axis=1, inplace=True)","f9b1e2fb":"test.plot(kind='box', figsize= (10,8))","076931a3":"sns.barplot(x=\"Sex\", y=\"Survived\", data=train)","71006bef":"sns.barplot(x=\"Pclass\", y=\"Survived\", data=train)","18fe5e14":"sns.barplot(x=\"SibSp\",y=\"Survived\", data=train)","c951941c":"sns.countplot(x=\"Survived\", data=train, palette='RdBu')","8d1097c6":"train= pd.get_dummies(train, columns=['Pclass', 'Sex', 'Embarked' ], drop_first= True)\n\ntest= pd.get_dummies(test, columns=['Pclass', 'Sex', 'Embarked' ], drop_first= True)","3a1307c8":"train.head()","57c9b5ed":"test.head()","9625bc2d":"X_train = train.drop('Survived',axis=1)\nY_train = train['Survived']\nX_test = test","c2390ef0":"from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nrf.fit(X_train, Y_train)","6a3b76b9":"predictions = rf.predict(X_test)","b792f8b3":"test_df = pd.read_csv('..\/input\/titanic\/test.csv')","af34dd9f":"output = pd.DataFrame({'PassengerId': test_df.PassengerId, 'Survived': predictions})\noutput.to_csv('submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","b9dccfc4":"output.head()","cb0bfacf":"output.tail()","d35b73df":"**Now let's find out Null values**","e6a6d671":"**Let us remove unwanted columns from test data set**","31dabd7e":"**Let us remove unwanted columns from train data set**","5a6035b5":"**Data Descriptons**\n\nSurvival: 0 = No, 1 = Yes\n\nPclass (Ticket class): 1 = 1st, 2 = 2nd, 3 = 3rd\n\nSex: Sex\n\nAge: Age in years\n\nSibSp: number of siblings\/spouses aboard the Titanic\n\nParch: number of parents\/children aboard the Titanic\n\nTicket: Ticket number\n\nFare: Passenger fare\n\nCabin: Cabin number\n\nEmbarked: Port of Embarkation, C = Cherbourg, Q = Queenstown, S = Southampton","e421f6f8":"**Feature Encoding**","ad889d4f":"**As it states, people from class 1 have higher chances of survival**","6bda69da":"**Let us do some Data Visualization**","1b2aff46":"**Import Libraries and Modules**","eb737692":"**Let us build Machine Learning Model**","a7c5c104":"**Let us fill the null values with mean, median or mode according to the requirements.**","5f60d9c3":"**There are no null values in both train and test datasets********","2a8e4fdb":"**Let us find outliers in train and test data**","d0bc20f3":"**Let us analyze train and test data**","66ce80b7":"**There are outliers in Age, SibSp, Parch and Fare variables. Let us use clip() function to remove outliers**","ca9038c7":"**There are no outliers in train dataset. Let's do the same process of test data set.**","65f6d680":"**People with more siblings have less chance of survival**","bc4dba03":"**Split data into train and tests set**","2999dcad":"**Import train and test Data**","6ac2b6b9":"**There are null values in train datasets**. **Let us fill the null values with mean, median or mode according to the requirements.**\n","73809676":"**As it clearly visible Females have the highest chances for survival**","80eb0c2a":"**Dropping Parch column because almost 60-70% values are 0**","b0371256":"**Now, there are no outliers in the test dataset.**","2195a8a5":"**Now, let us find unique values in train and test data sets**"}}