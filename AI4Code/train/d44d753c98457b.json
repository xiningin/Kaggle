{"cell_type":{"e5d30a74":"code","51a0a92b":"code","fc998a53":"code","1a97e300":"code","959e57e2":"code","1251812e":"code","7ebc0c4c":"code","6e479df5":"code","af5e0482":"code","a48fae19":"code","e3f53f8d":"code","61586ae1":"code","920f0390":"code","1d8a4a04":"code","179bcece":"markdown","ff4dea49":"markdown","74ef34f4":"markdown","7b813693":"markdown","f00c6cd2":"markdown","822baac0":"markdown","30cc34bd":"markdown","686b7a56":"markdown"},"source":{"e5d30a74":"import matplotlib.pyplot as plt\nimport pandas as pd\ndf=pd.read_csv('..\/input\/g-research-crypto-forecasting\/train.csv')\ndf.head()","51a0a92b":"details=pd.read_csv('..\/input\/g-research-crypto-forecasting\/asset_details.csv')\ndetails.head()","fc998a53":"import numpy as np\n\nfor i in range(14):\n \n    dfcrop=df[df['Asset_ID']==i]\n    print('Percentage of values not nan',(1-(np.sum((dfcrop['Target'].isnull()).astype(int))\/dfcrop.shape[0]))*100)\n  \n    \n","1a97e300":"from tqdm import tqdm\ndef compute(df):\n    \n    R=list()\n    c=list(df['Close'])\n    for i in range(df.shape[0]):\n        future=c[min([i+16,df.shape[0]-1])]\n        past=c[min([i+1,df.shape[0]-1])]\n        R.append(future\/past)\n    R=np.array(R)\n\n    df['pred']=R-1\n    return df\ncrops=list()\nfor a in tqdm(list(range(14))):\n    \n    crops.append(compute(df[df['Asset_ID']==a]))\n","959e57e2":"\nconc=pd.concat(crops)","1251812e":"conc.head()","7ebc0c4c":"conc=conc.reset_index()","6e479df5":"j=np.array(list(conc['Target'].isnull()))\nnew_targets=np.where(j,conc['pred'],conc['Target'])","af5e0482":"conc['Target']=new_targets\nconc=conc.drop(columns=['pred'],axis=1)\nconc.head()","a48fae19":"import numpy as np\n\nfor i in range(14):\n    dfcrop=conc[conc['Asset_ID']==i]\n    print('Percentage of values not nan',(1-(np.sum((dfcrop['Target'].isnull()).astype(int))\/dfcrop.shape[0]))*100)\n  \n    \n","e3f53f8d":"conc.to_hdf('train.h5',key='conc', mode='w',index=False)","61586ae1":"del conc,crops","920f0390":"df=pd.read_hdf('train.h5')\ndf=df.drop(columns=['index'])\ndf.head()","1d8a4a04":"df.shape","179bcece":"# Import","ff4dea49":"# Load your saved h5 file","74ef34f4":"# Objective :-\nHere we will replace the Nan values in the 'Target' column of 'train.csv' with the recreated targets present here https:\/\/www.kaggle.com\/swaralipibose\/target-recreation-but-its-99-percent-accurate so that we can gather up more data it has also been discussed here https:\/\/www.kaggle.com\/c\/g-research-crypto-forecasting\/discussion\/293654 which has proposed this method","7b813693":"# Percentage of Nan values","f00c6cd2":"# No more nan values ","822baac0":"# Thank you","30cc34bd":"# Save new train.h5 file h5 is way faster","686b7a56":"# Recreate Targets\nnote \nif you are confused ehy R-1 is being used for creating targets , if you have seen the recreation notebook [linked above]then you might no that target=np.exp(R)-1\nR=np.log(Price after 16 min\/Price after 1 min) \nso np.exp is just undoing np.log so it can be written as\n\n\n(Price after 16min\/Price after 1min)- 1"}}