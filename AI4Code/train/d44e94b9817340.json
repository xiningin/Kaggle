{"cell_type":{"d8d0e602":"code","530cbf71":"code","8983068d":"code","5b24d561":"code","ad2747f6":"code","afc0a7c7":"code","0bdfe5f2":"code","93e9d0ef":"code","2b873cab":"code","3ad0755a":"code","5dfffeec":"code","45c2b5b0":"code","618d69f3":"code","853bd178":"code","9e0c078f":"code","30364046":"code","988f0ad6":"code","5bba064f":"code","25e27419":"code","176f045d":"code","1cfb27be":"code","3d475a40":"code","92dc28a0":"code","eab8975a":"code","84964a7f":"code","21ce51a4":"code","2e5d6543":"code","b9f6521e":"code","c054db0c":"code","cb578180":"code","87782144":"code","2433153c":"code","42063934":"code","d2380ae7":"code","ccb6e155":"code","fb450e97":"code","f7abc36b":"code","7be57309":"code","1bef836c":"code","1af1aee3":"code","b5e7b72d":"code","907f5c87":"code","13f737be":"code","44c5a1f0":"code","3ad3fded":"code","f7e7a96e":"code","19d5ba9d":"code","0c1c5bd3":"code","849f6671":"code","a76469db":"code","263a8a7b":"code","dcebd5e5":"code","27f07d00":"code","27aba4d3":"code","6a2cf6d0":"code","d8711ae9":"code","9a8526bd":"code","e0b42c5e":"code","cfa30412":"code","f01c238b":"code","f82256ae":"code","169cc662":"code","940c1cec":"code","795f6894":"code","99e02abd":"code","f4d106b2":"code","530f4e5a":"code","489ce985":"code","b276cc97":"code","d8eb471d":"code","315b579f":"code","83a2b8f3":"code","2b1cfa09":"code","6310124a":"code","d13cb086":"code","8d0cae7b":"code","1201f14c":"code","96f08d2f":"markdown","46e5373f":"markdown","08d64dab":"markdown","db1d32dc":"markdown","a8a2c566":"markdown","5f24e80d":"markdown","10c7fa3e":"markdown","bd972af7":"markdown","4d70d985":"markdown","951b89d9":"markdown","8c277024":"markdown","3ac3586b":"markdown","95809e7e":"markdown","8637a05c":"markdown","dfc1eb05":"markdown","b0da42df":"markdown","00521baf":"markdown","0a7372b8":"markdown","05e63b7f":"markdown","8fa638c5":"markdown","3e7a0446":"markdown","17aedd92":"markdown","b4aea1c1":"markdown","a1aae6cb":"markdown","dbf2bb9c":"markdown","11d4247a":"markdown","06d5fd60":"markdown","bd854043":"markdown","954ce3b6":"markdown","672827dd":"markdown","fa8ff6ec":"markdown","a19efc18":"markdown","9765b8b0":"markdown","5d3d9938":"markdown","cb26b06f":"markdown","80c666d6":"markdown","5a6c976e":"markdown","e4414db3":"markdown","35fff18b":"markdown","e38549e7":"markdown","34d243a6":"markdown","f1430715":"markdown","faadc97d":"markdown","271fbf54":"markdown","1125bd59":"markdown","516c5211":"markdown","840a8860":"markdown","515ab966":"markdown","d87b72cb":"markdown","fdc7fb57":"markdown"},"source":{"d8d0e602":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport re\npd.set_option('display.max_rows', 150)\npd.set_option('display.max_columns', 150)\nfrom sklearn.cluster import KMeans\nfrom sklearn.mixture import GaussianMixture\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.preprocessing import StandardScaler\n\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"","530cbf71":"securities = pd.read_csv('..\/input\/nyse-stock-exchange-data\/securities.csv')\ndf = pd.read_csv('..\/input\/nyse-stock-exchange-data\/fundamentals.csv')\ndf.head(2)","8983068d":"cols = []\nfor col in df.columns:\n    cols.append(col.strip().replace(' ', '_'))\ncols[:5]","5b24d561":"new_cols = []\nfor col in cols:\n    name = ''\n    new_cols.append(name.join(re.findall('[\\w\\s]', col)))\nnew_cols[:5]","ad2747f6":"df = df.rename(columns = dict(zip(df.columns, new_cols)))\ndf.head(2)","afc0a7c7":"df.shape","0bdfe5f2":"df = df.dropna(axis=1)\ndf.isnull().sum().sum()\ndf.shape","93e9d0ef":"df.to_csv('fundamentals_cleaned.csv', index=False)\n# df = pd.read_csv('fundamentals_cleaned.csv')","2b873cab":"df.dtypes.value_counts()","3ad0755a":"dfc = df.copy()","5dfffeec":"g = pd.DataFrame(dfc.groupby('Ticker_Symbol').mean())\nscaler = StandardScaler()\ng = scaler.fit_transform(g)\ng = pd.DataFrame(g, columns = df.groupby('Ticker_Symbol').mean().columns,\n                 index = dfc.groupby('Ticker_Symbol').mean().index)\ng.head(3)","45c2b5b0":"# g.to_csv('fundamentals_grouped_scaled.csv')\n# g = pd.read_csv('fundamentals_grouped_scaled.csv', index_col = 'Ticker_Symbol')\n# g.shape","618d69f3":"gc = g.copy()\norig_cols = g.columns","853bd178":"def get_km_clusters(df, nc):\n# function to fit KMeans on the dataset and calculate the inertia    \n    \n    dff = df.copy()\n    km = KMeans(n_clusters = nc, random_state=21)\n    clusters = km.fit_predict(dff.select_dtypes('float64'))\n    dff['cluster'] = clusters\n    return km.inertia_, silhouette_score(dff.select_dtypes('float64'), clusters), dff","9e0c078f":"# plotting the scree-plot\ninertia = []\nsilhouette = []\nn_clusters=[]\ninertia_change = [0]\nfor n in range(2,16):\n    i, s, _ = get_km_clusters(g, n)\n    inertia.append(i)\n    silhouette.append(s)\n    n_clusters.append(n)\n    inertia_change.append(abs(inertia_change[-1] - i))","30364046":"plt.figure(figsize=(7,6));\nplt.plot(n_clusters, inertia, marker = 'o')\nplt.xlabel('Number of Clusters');\nplt.ylabel('Inertia');\nplt.title('INERTIA');\n\nplt.figure(figsize=(7,6));\nplt.plot(n_clusters, silhouette, marker = 'o')\nplt.xlabel('Number of Clusters');\nplt.ylabel('Silhouette score');\nplt.title('SILHOUETTE SCORE');","988f0ad6":"# plot to see the decrease in inertia upon adding 1 additional cluster\ninertia_change = inertia_change[1:]\ninertia_change[0] = 0\nplt.plot(n_clusters, inertia_change, marker = 'o')\nplt.plot(n_clusters, inertia_change, marker = 'o')\nplt.xlabel('Number of Clusters')\nplt.ylabel('Decrease in inertia');","5bba064f":"km = KMeans(n_clusters=5, random_state=21)\nclusters = km.fit_predict(g.select_dtypes('float64'))\ng['cluster'] = clusters\ng.head(2)","25e27419":"g['cluster'].value_counts()","176f045d":"# PROFIT MARGIN\n\ng.groupby('cluster')['Profit_Margin'].mean().plot(kind='barh')\nplt.xlabel('Profit Margin');","1cfb27be":"# REVENUE\ng.groupby('cluster')['Total_Revenue'].mean().plot(kind='barh')\nplt.xlabel('Total Revenue');","3d475a40":"# g.index = dfc.groupby('Ticker_Symbol').mean().index","92dc28a0":"securities = pd.read_csv('..\/input\/nyse-stock-exchange-data\/securities.csv')\nsecurities = securities[['Ticker symbol', 'Security','GICS Sector','GICS Sub Industry']]\nsecurities.head(2)","eab8975a":"final = g.merge(securities, right_on = 'Ticker symbol', left_index=True)\nfinal.index = g.index\nfinal.head()","84964a7f":"final['GICS Sector'].nunique()\nfinal['GICS Sub Industry'].nunique()","21ce51a4":"final.groupby('cluster')['GICS Sector'].unique()","2e5d6543":"final.groupby('cluster').agg(\n    {'Ticker symbol':'count', \n     'GICS Sub Industry': 'nunique',\n     'GICS Sector': 'nunique'})","b9f6521e":"final.loc[final['cluster'] == 4]","c054db0c":"final.loc[final['cluster'] == 1]['Security']","cb578180":"final.loc[final['cluster'] == 3]['Security']","87782144":"g7 = g.drop('cluster', axis=1)\ng7.head()","2433153c":"km = KMeans(n_clusters=7, random_state=21)\ng7['cluster'] = km.fit_predict(g7.select_dtypes('float64'))\ng7['cluster'].value_counts()","42063934":"g7.groupby('cluster')['Profit_Margin'].mean().plot(kind='barh')\nplt.xlabel('Profit Margin');\nplt.title('Profit Margin')\nplt.show()\n\ng7.groupby('cluster')['Total_Revenue'].mean().plot(kind='barh')\nplt.xlabel('Total Revenue');\nplt.title('Total Revenue');","d2380ae7":"f7 = g7.merge(securities, right_on = 'Ticker symbol', left_index=True)\nf7.index = g7.index\nf7.head(2)","ccb6e155":"f7.groupby('cluster')['GICS Sector'].unique()\nf7.groupby('cluster').agg(\n    {'Ticker symbol':'count', \n     'GICS Sub Industry': 'nunique',\n     'GICS Sector': 'nunique'})  \n","fb450e97":"f7.loc[f7['cluster'].isin([2,4,5,6])]","f7abc36b":"gm5 = GaussianMixture(n_components=5)","7be57309":"dfgm = g[orig_cols]","1bef836c":"def get_gm_clusters(df, nc):\n# function to fit KMeans on the dataset and calculate the inertia    \n    \n    dff = df.copy()\n    gm = GaussianMixture(n_components = nc, random_state=21)\n    clusters = gm.fit_predict(dff.select_dtypes('float64'))\n    return clusters","1af1aee3":"clus = get_gm_clusters(dfgm, 5)\ndfgm['cluster'] = clus","b5e7b72d":"dfgm.groupby('cluster')['Profit_Margin'].mean().plot(kind='barh')\nplt.xlabel('Profit Margin');\nplt.title('Profit Margin')\nplt.show()\n\ndfgm.groupby('cluster')['Total_Revenue'].mean().plot(kind='barh')\nplt.xlabel('Total Revenue');\nplt.title('Total Revenue');","907f5c87":"dfgm['cluster'].value_counts()","13f737be":"final = dfgm.merge(securities, right_on = 'Ticker symbol', left_index=True)\nfinal.index = dfgm.index\nfinal.head(2)","44c5a1f0":"final.groupby('cluster')['GICS Sector'].unique()\n\nfinal.groupby('cluster').agg(\n    {'Ticker symbol':'count', \n     'GICS Sub Industry': 'nunique',\n     'GICS Sector': 'nunique'})","3ad3fded":"final.loc[final['cluster'].isin([2])]","f7e7a96e":"final.loc[final['cluster'].isin([3])]","19d5ba9d":"final.loc[final['cluster'].isin([4])]","0c1c5bd3":"final.loc[final['cluster'].isin([0])]['GICS Sub Industry'].value_counts()[:5]","849f6671":"final.loc[final['cluster'].isin([1])]['GICS Sub Industry'].value_counts()[:5]","a76469db":"dfgm = g[orig_cols]\nclus = get_gm_clusters(dfgm, 7)\ndfgm['cluster'] = clus\n\ndfgm.groupby('cluster')['Profit_Margin'].mean().plot(kind='barh')\nplt.xlabel('Profit Margin');\nplt.title('Profit Margin')\nplt.show()\n\ndfgm.groupby('cluster')['Total_Revenue'].mean().plot(kind='barh')\nplt.xlabel('Total Revenue');\nplt.title('Total Revenue');","263a8a7b":"final = dfgm.merge(securities, right_on = 'Ticker symbol', left_index=True)\nfinal.index = dfgm.index\n\nfinal.groupby('cluster')['GICS Sector'].unique()\n\nfinal.groupby('cluster').agg(\n    {'Ticker symbol':'count', \n     'GICS Sub Industry': 'nunique',\n     'GICS Sector': 'nunique'})","dcebd5e5":"final.loc[final['cluster'].isin([3,4,5])]","27f07d00":"final.loc[final['cluster'].isin([2,6])]","27aba4d3":"bank_tickers = ['BAC','C', 'WFC', 'JPM']","6a2cf6d0":"sns.displot(g['Goodwill'])","d8711ae9":"g['Goodwill'].mean(), g.loc[bank_tickers, 'Goodwill'].mean()","9a8526bd":"col_subset = ['Net_Borrowings', 'Net_Cash_Flow','Total_Assets', 'Total_Current_Assets',\n              'Total_Current_Liabilities', 'Total_Equity', 'Total_Liabilities',\n              'Total_Liabilities__Equity', 'Total_Revenue']","e0b42c5e":"g.loc[bank_tickers, col_subset].mean().plot(kind='barh')\nplt.xlabel('Mean value for global bank tickers (outliers)');\nplt.title('Financial performance');","cfa30412":"g.drop(bank_tickers).loc[:, col_subset].mean().plot(kind='barh')\nplt.xlabel('Mean value for tickers other than the 4 global banks')\nplt.title('Financial performance');","f01c238b":"prices = pd.read_csv('..\/input\/nyse-stock-exchange-data\/prices-split-adjusted.csv')\nprices.head(2)","f82256ae":"prices['range'] = prices['high'] - prices['low']\nprices['return']= prices['close']- prices['open']","169cc662":"prices = prices.merge(securities, left_on = 'symbol', right_on = 'Ticker symbol', how='inner')","940c1cec":"for symbol in prices['symbol'].sample(5):\n    print(symbol)\n    sns.displot(prices.loc[prices['symbol'] == symbol]['return'])","795f6894":"for sector in securities['GICS Sector'].unique():\n    sns.displot(prices.loc[prices['GICS Sector'] == sector, 'return']);","99e02abd":"prices.groupby('GICS Sector')['return'].std().plot(kind='barh')","f4d106b2":"securities = pd.read_csv('..\/input\/nyse-stock-exchange-data\/securities.csv')\nsecurities.head(2)","530f4e5a":"prices = pd.read_csv('..\/input\/nyse-stock-exchange-data\/prices-split-adjusted.csv')\nprices.head(2)","489ce985":"df = prices.merge(securities, right_on='Ticker symbol', left_on = 'symbol', how='inner')\ndf.set_index('symbol', inplace=True)\ndf.head(2)","b276cc97":"df['return'] = df['close'] - df['open']\ndf['range'] = df['high'] - df['low']\ndf.head(2)","d8eb471d":"plt.figure(figsize=(8,6))\ndf.groupby('GICS Sector')['return'].mean().plot(kind='barh');","315b579f":"df['date'] = pd.to_datetime(df['date'])","83a2b8f3":"def add_date_part(df, date_col = 'date', drop_date_col=False):\n    \n    dff = df.copy()\n    dff['DAY_NAME'] = df[date_col].dt.day_name()\n    dff['DAY_OF_MONTH'] = df[date_col].dt.day\n    dff['DAY_OF_YEAR'] = df[date_col].dt.dayofyear\n    dff['IS_MONTH_START'] = df[date_col].dt.is_month_start\n    dff['IS_MONTH_END'] = df[date_col].dt.is_month_end\n    dff['IS_QUARTER_START'] = df[date_col].dt.is_quarter_start\n    dff['IS_QUARTER_END'] = df[date_col].dt.is_quarter_end\n    dff['MONTH_NAME'] = df[date_col].dt.month_name()\n    dff['WEEK'] = df[date_col].dt.isocalendar().week\n    dff['IS_YEAR_START'] = df[date_col].dt.is_year_start\n    dff['IS_YEAR_END'] = df[date_col].dt.is_year_end\n    if drop_date_col == True:\n        dff= df.drop(date_col, axis=1)\n    return dff","2b1cfa09":"df = add_date_part(df, 'date')\ndf.head(2)","6310124a":"df.groupby('DAY_NAME')['return'].mean().plot(kind='barh')","d13cb086":"m = df.groupby('MONTH_NAME')['return'].mean()\nm.reindex(['January','February','March','April','May','June',\n           'July','August', 'September',\n           'October', 'November','December']).plot(kind='barh')","8d0cae7b":"df.groupby('IS_QUARTER_START')['return'].mean().plot(kind='barh')","1201f14c":"plt.figure(figsize=(8,6))\nsns.barplot(x='return',y='GICS Sector',hue='IS_YEAR_END', data=df, ci=None)\nplt.title('Year end returns trend');","96f08d2f":"#### There 11 distinct sectors and 121 sub industries total.","46e5373f":"#### As we can see, the values for total assets, liabilities, revenue, net cash flow, etc are many orders of magnitude higher for global banks, compared to the group trend.","08d64dab":"#### Monday gives negative returns on average ! This may point towards a trend in the trading habits of people.\n#### Interestingly, Tuesday has the highest daily returns. Perhaps this is because people trade more carefully after suffering losses on Monday !","db1d32dc":"### END","a8a2c566":"#### Let us take a look at the top 5 sub-industries in the 2 large clusters.","5f24e80d":"#### Let us see the trend in the financial data of the global banks. Let us compare the mean values for some of the columns in the complete dataset to those for the global bank tickers.","10c7fa3e":"#### Industrials, Real Estate and Consumer Staples have given the best returns.\n#### Telecommunication is the only sector with negative returns.","bd972af7":"#### Let us see if returns follow normal distribution.","4d70d985":"#### Almost all sectors seem to give very negative average returns on the last day of the year, probably because of the emotionally charged trading. Only the Energy sector seems to be giving positive returns.","951b89d9":"#### Let us see the values for some other columns.","8c277024":"### Trying with Gaussian Mixture models","3ac3586b":"#### Clusters 3 and 4 have just FINANCIALS.","95809e7e":"### Let us take 7 clusters for more granular clustering.","8637a05c":"####  WFC is Wells Fargo, which is a US based financial services giant. It seems to be an outlier.","dfc1eb05":"#### Let us see which sectors have given the best average daily returns.","b0da42df":"### Trends in daily returns by week days, months, etc.","00521baf":"#### Wells Fargo separates out as earlier seen.","0a7372b8":"#### Financial firms in one cluster, presence of Ford Motors seems to be odd.","05e63b7f":"### Trends in stock prices and returns.","8fa638c5":"#### Highest average daily returns are obtained in February and March. January and December have the lowest returns.","3e7a0446":"#### Take a look at clusters having 1 or 2 companies..","17aedd92":"#### The global financial services and energy giants are always separated out into sparsely populated clusters.","b4aea1c1":"### Plotting characteristics in each cluster. ","a1aae6cb":"#### Again, we see that finance giants have separated out.","dbf2bb9c":"### Based on the trend of inertia and silhoutte score, we can take either 5 clusters or 7 clusters. ","11d4247a":"####  Interestingly, companies in the tiny clusters are only Energy and Financial companies. Global energy giant EXXON MOBIL is in its own cluster.\n\n#### Some global finance giants have again fallen into same cluster or clusters of their own (WFC, BAC, JPM, C) (These can be outliers, as they are always appearing in their own clusters).","06d5fd60":"#### For Motors, a highly successful auto manufacturer, is its own cluster.","bd854043":"### KMeans clustering after grouping by Ticker_Symbol","954ce3b6":"#### Companies in clusters 0 and 2 have made loss on average, in the observation period. (The cluster numbers may change on running the clustering again).","672827dd":"### Understanding the type of undustries in each cluster, with 5 clusters.","fa8ff6ec":"### Dropping null columns","a19efc18":"#### Quarter start days give more daily returns on average. This may be due to the bullish trend in anticipation of quarterly performance results.","9765b8b0":"#### 5 clusters","5d3d9938":"#### Consumer discretionary, Healthcare and IT have the largest deviations in returns. Telecommunication and Utilities have the lowest deviation.","cb26b06f":"#### Average returns by month","80c666d6":"### Trends in returns over time periods.","5a6c976e":"#### Cluster-2 companies have a very high revenue compared to others.","e4414db3":"#### Let us see if we have the same outlier clusters as with kmeans.","35fff18b":"#### The 4 global banks very high values of \"Goodwill\" compared to the general trend in the dataset.","e38549e7":"#### Trying with 7 clusters.","34d243a6":"#### The daily returns do seem to follow a normal distribution with mean 0.","f1430715":"####  Cluster 1 has some notable names like Apple, Chevron, Walmart, AT&T, Coca-Cola, IBM, Ford, etc. All of these are very successful firms in theit respective fields. But the firms are from many different types of sectors.","faadc97d":"#### No particular trend seems to be visible as the industries within each cluster are quite varied.","271fbf54":"### Let us take 5 clusters initially.","1125bd59":"#### Cluster 1 and 6 companies have large revenue but have made loss on average.","516c5211":"#### Interestingly, the biggest cluster ALWAYS has more than 400 elements even if we take 7 clusters. Let us take a look at the smaller clusters and see if the outliers are same as earlier.","840a8860":"### Renaming columns","515ab966":"#### Global finance giants have separated out into a cluster.","d87b72cb":"#### Cluster 1, 2 and 3 have very less number of tickers.","fdc7fb57":"#### What is the change in inertia and silhouette score upon adding 1 more cluster ?"}}