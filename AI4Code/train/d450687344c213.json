{"cell_type":{"85c18487":"code","3899d589":"code","f2c1eb4a":"code","23b6c75b":"code","b02aa80f":"code","98359271":"code","f126c25c":"code","4c0b5e1d":"code","8cc4c861":"code","5aeb9bf7":"code","bfb1cbed":"code","e1c123b1":"code","075a9ff0":"code","391d61d2":"code","8c306875":"code","0dedfde3":"code","e03cba9f":"markdown","58c74a4d":"markdown","872b8e06":"markdown","1fcaa27c":"markdown","e6207c84":"markdown","64e39eb8":"markdown","2454cc30":"markdown","eea598ea":"markdown","4a26fd63":"markdown","d0005345":"markdown","a26bc310":"markdown"},"source":{"85c18487":"import os\nimport pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nfrom sklearn.cluster import KMeans\nfrom sklearn import metrics","3899d589":"df = pd.read_csv(\"\/kaggle\/input\/surviving-mars-maps\/MapData-Evans-GP-Flatten.csv\")\ndf.head()","f2c1eb4a":"df.replace(True,1,inplace=True)\ndf.replace(False,0, inplace=True)\ndf.rename(columns={'Latitude \u00b0':'Latitude_d',\n                  'Longitude \u00b0':'Longitude_d'},inplace=True)","23b6c75b":"df.info()","b02aa80f":"df['Goodness']=np.sum(df.iloc[:,18:],axis=1)\ndf['Goodness'].unique()","98359271":"df.replace({'Topography':{'Relatively Flat':1,\n                          'Steep':2,\n                          'Rough':3,\n                          'Mountainous':4},\n           'Difficulty Challenge':{100:0,\n                                  140:1,\n                                  180:2,\n                                  200:3,\n                                  220:4,\n                                  240:5}},\n           inplace=True)\n\nfor i in range(df.shape[0]):\n    if df.at[i,'Altitude'] <= 0:\n        df.at[i,'Altitude'] = 0\n    elif df.at[i,'Altitude'] > 0 and df.at[i,'Altitude']<=5e3:\n        df.at[i,'Altitude'] = 1\n    elif df.at[i,'Altitude'] > 5e3 and df.at[i,'Altitude'] <= 10e3:\n        df.at[i,'Altitude'] = 2\n    elif df.at[i,'Altitude'] > 10e3 and df.at[i,'Altitude'] <= 15e3:\n        df.at[i,'Altitude'] = 3\n    else:\n        df.at[i,'Altitude'] = 4\n        \n    if df.at[i,'Temperature'] >= -20:\n        df.at[i,'Temperature'] = 0\n    elif df.at[i,'Temperature'] > -20 and df.at[i,'Temperature'] <= -40:\n        df.at[i,'Temperature'] = 1\n    elif df.at[i,'Temperature'] > -40 and df.at[i,'Temperature'] <= -60:\n        df.at[i,'Temperature'] = 2\n    elif df.at[i,'Temperature'] > -60 and df.at[i,'Temperature'] <= -80:\n        df.at[i,'Temperature'] = 3\n    else:\n        df.at[i,'Temperature'] = 4","f126c25c":"df['Danger']= np.sum(df.iloc[:,5:16],axis=1)","4c0b5e1d":"fig = px.scatter_geo(df,lat='Latitude_d', lon='Longitude_d', color='Danger',\n                        hover_name= 'Map Name', hover_data=['Danger','Altitude','Temperature'],\n                        fitbounds = 'locations', basemap_visible=False,\n                        projection='orthographic')\nfig.update_layout(title = 'Danger Scatter')\nfig.show()","8cc4c861":"df_c = df[['Danger']]","5aeb9bf7":"clust_esp = KMeans(20, random_state=42).fit_predict(df_c)\n(unique, counts)=np.unique(clust_esp, return_counts=True)\nprint(\" Cluster label along its number of elements in it:\\n\",\n      list(zip(unique,counts)))","bfb1cbed":"df['Clust']=clust_esp.tolist()\ndf.sort_values('Danger')","e1c123b1":"df1 = df[df['Clust'].isin([13])]\ndf2 = df[df['Clust'] != 13]","075a9ff0":"fig = px.scatter_geo(df1,lat='Latitude_d', lon='Longitude_d', color='Danger',\n                        hover_name= 'Map Name', hover_data=['Danger','Altitude','Temperature'],\n                        fitbounds = 'locations', basemap_visible=False,opacity=0.5,\n                        color_continuous_scale='solar', projection='orthographic',\n                    title = 'Best locations to start a colony')\nfig.add_trace(go.Scattergeo(lat=df2['Latitude_d'],lon=df2['Longitude_d'],\n                            marker=go.scattergeo.Marker(color='gray'),line=None,name='',\n                            showlegend= False, hoverinfo= 'skip',\n                            opacity=0.1))\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nprint('Best locations to start a colony')\nfig.show()","391d61d2":"def configuration(params):\n    df_non_d = df[df['Clust']==13]\n    for param in params:\n        df_non_d = df_non_d[df_non_d[param]==1.0]\n    \n    df_other = df.drop(index=df_non_d.index)\n    \n    fig = px.scatter_geo(df_non_d,lat='Latitude_d', lon='Longitude_d', color='Danger',\n                        hover_name= 'Map Name', hover_data=['Danger','Altitude','Temperature'],\n                        fitbounds = 'locations', basemap_visible=False,opacity=0.5,\n                        color_continuous_scale='solar', projection='orthographic'\n                        )\n    fig.add_trace(go.Scattergeo(lat=df_other['Latitude_d'],lon=df_other['Longitude_d'],\n                                marker=go.scattergeo.Marker(color='gray'),line=None,name='',\n                                showlegend= False, hoverinfo= 'skip',\n                                opacity=0.1))\n    fig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\n    print('Best locations to start a colony with specific configuration\\nConfiguration: {}'.\n          format(params))\n    fig.show()\n    return df_non_d","8c306875":"print('List of parameters: ')\nprint(df.iloc[:,18:-3].columns.values.tolist())\nprint('-------------------------------------------------------------------')\nprint('Copy and Paste parameters of configuration and make a list of them')","0dedfde3":"# Example\nparams=['Alien Imprints','Neo-Concrete','Plasma Rocket','Wireless Power']\nconfiguration(params)","e03cba9f":"Renaming and discretizing columns.\n\nLet's assume that every boolean column is good if it's True and bad if not. *Looking at the column names is an assumible assert*","58c74a4d":"## Clustering","872b8e06":"## Visualization","1fcaa27c":"Let's assume now that every column with values in range [0,1,2,3,4,5] are categorized from not dangerous (0) to extremely dangerous.","e6207c84":"The sum of all the boolean variables is 17 so these columns are not giving any information of which is better than other.","64e39eb8":"### Data Wrangling","2454cc30":"These are the less dangerous zones overall. I would start there. \n\nIf a specific configuration is required, like \"I want Alien imprints, Neo-concrete, Plasma Rocket and Wireless Power\" you should be able to find one non-dangerous point among all points in the 'Less dangerous cluster'.","eea598ea":"## Data","4a26fd63":"# Surviving on Mars\n\n\nGoal : Determine the best location for a human colony on Mars","d0005345":"### Specific configuration","a26bc310":"## Best locations"}}