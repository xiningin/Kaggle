{"cell_type":{"9c566a9d":"code","8291bc3b":"code","d5f3fb72":"code","e84fbaff":"code","12e591a3":"code","4c6220a5":"code","d1f3eb6d":"code","40494eb9":"code","e2e934fc":"code","51c7f40a":"code","f4113f37":"code","fd1e7ffb":"code","3abe99be":"code","3b8ebc1b":"markdown","11dadc8e":"markdown","89796136":"markdown","4ab689bc":"markdown","c8dd1649":"markdown","c5960a92":"markdown","5c2e91a0":"markdown","3202b36b":"markdown"},"source":{"9c566a9d":"from keras.models import Sequential #used for creating model\nfrom keras.layers import Dense #used for creating layers\nimport numpy as np \nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split #used for split the data in to train and test\nfrom sklearn.preprocessing import StandardScaler #used for the scal the data","8291bc3b":"data = pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv') #load data from csv in to variable using pandas read_csv funcion","d5f3fb72":"data.head() #take brief look in to fetched data","e84fbaff":"#differentiate input data and result data from dataset\n\n##for input data take all the columns excluding ['ID', 'Diagnosis' , 'UNNAMED:32'] Columns \ninput_Data = data.drop(columns=['id','diagnosis','Unnamed: 32']) \n\n##for result data take diagnosis column values as \"0 for M('Malignant')\" and \"1 for B('Benign')\"\nresult_Data = data['diagnosis'].map({'M':0,'B':1})","12e591a3":"# here we does not have any Test-Set data & Training-Set data\n# So we will differentiate teat & traing data from input and result data which we prepared\n# that can be done by using sklearn library's model_selection module's function train_test_split()\n\ntrain_data, test_data, train_label, test_label = train_test_split(input_Data, result_Data, test_size=0.30)","4c6220a5":"# Now scal the data in between 0 to 1 for prosessing\n# using StandardScaler() module of sklearn.preprocessing\n\nscaler = StandardScaler()\nN_train_data = scaler.fit_transform(train_data) # this is normalized training data\nN_test_data = scaler.fit_transform(test_data) # this is normalized testing data","d1f3eb6d":"# let find the input dim for creating Sequential models first layer \ninput_dim = len(train_data.axes[1])","40494eb9":"# create model Sequential using Dense layers\nmodel = Sequential([\n    Dense(8, activation='relu', input_shape=(input_dim,)),\n    Dense(32, activation='relu'),\n    Dense(32, activation='relu'),\n    Dense(32, activation='relu'),\n    Dense(8, activation='relu'),\n    Dense(1, activation='sigmoid'),\n])","e2e934fc":"# Compile created model\n# using optimizer as adam\n# loss function as binary_crossentropy (because our output or prediction have only two values 0 & 1)\n\nmodel.compile(\n  optimizer='adam',\n  loss='binary_crossentropy',\n  metrics=['accuracy'],\n)","51c7f40a":"# Now fit the Training data set into over model\n# define epochs 11\n# and batch_size pro processing 32\n\nmodel.fit(\n  N_train_data,\n  train_label,\n  epochs=20,\n  batch_size=32,\n)","f4113f37":"# Now evaluate over model using test data\nmodel.evaluate(\n  N_test_data,\n  test_label\n)","fd1e7ffb":"# save this model weights for further predictions\n# you can use this saved weights of this model in other model using\n# model.load_weights('Breast_Cancer_Possibilities')\nmodel.save_weights('Breast_Cancer_Possibilities')","3abe99be":"model.summary()","3b8ebc1b":"In this notebook you will find out breasy cancer prediction using python keras ML (backend TenserFlow) library.","11dadc8e":"# Step 3: Data Pre-processing(Prepare data for processing)","89796136":"# Step 6: Now save the current model weights","4ab689bc":"# Step 5: Now Train & Test Model","c8dd1649":"# Step 2: Load data set","c5960a92":"# Step 4: Now Design Neural Network","5c2e91a0":"# ***Step 1: All libraries needed for this model***","3202b36b":"# ** Breast cancer Prediction: Using Python - Keras ML**"}}