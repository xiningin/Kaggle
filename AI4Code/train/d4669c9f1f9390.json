{"cell_type":{"eaa57f64":"code","86580d11":"code","dd0e48fd":"code","582a1990":"code","730af927":"code","5d06e763":"code","216e6a47":"code","c0ea47cb":"code","52523ba7":"code","a906287d":"code","4c357d44":"code","65c721ab":"code","5bda704e":"code","41f231f5":"code","08fef5b9":"code","c99c041d":"code","ff291fc2":"code","e5ed793c":"code","b9d107c6":"code","adb492fb":"code","9005cd00":"code","831cddf5":"code","cfe693e5":"code","bc5986e0":"code","e0f74854":"code","99e8a022":"code","c66fa35f":"code","679ca951":"code","c7ebe1be":"code","75dc7983":"markdown","b4a3491a":"markdown","0f520d02":"markdown"},"source":{"eaa57f64":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","86580d11":"df = pd.read_csv('\/kaggle\/input\/tabular-playground-series-apr-2021\/train.csv')","dd0e48fd":"df.head()","582a1990":"df.shape","730af927":"import seaborn as sns\nsns.heatmap(df.isnull())","5d06e763":"sns.countplot(df['Survived'],hue=df['Sex'])","216e6a47":"sns.boxplot(df['Survived'],df['Age'],hue=df['Sex'])","c0ea47cb":"import matplotlib.pyplot as plt","52523ba7":"test = pd.read_csv('\/kaggle\/input\/tabular-playground-series-apr-2021\/test.csv')","a906287d":"test.head()","4c357d44":"df1 = df.copy()\ntest1 = test.copy()","65c721ab":"df1 = df1.drop('Cabin',axis=1)","5bda704e":"df1 = df1.dropna()","41f231f5":"test1 = test1.drop('Cabin',axis=1)\ntest1 = test1.dropna()","08fef5b9":"sns.heatmap(df1.isnull())","c99c041d":"df1.head(2)","ff291fc2":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndf1['Sex'] = le.fit_transform(df1['Sex']) \ntest1[['Sex']] = le.fit_transform(test1['Sex']) ","e5ed793c":"df1['Embarked'] = le.fit_transform(df1['Embarked'])\ntest1['Embarked'] = le.fit_transform(test1['Embarked'])","b9d107c6":"df1.head(1)","adb492fb":"test1.head()","9005cd00":"df1","831cddf5":"x = df1[['Pclass','Sex','Age','SibSp','Parch','Fare','Embarked']]\ny = df1['Survived']\n#test1 = test1.drop('PassengerId',axis=1)\n#test1 = test1.drop('Name',axis=1)","cfe693e5":"test1 = test1.drop('Ticket',axis=1)\ntest1.head(5)","bc5986e0":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.1,stratify=y)","e0f74854":"from sklearn.linear_model import LogisticRegression\nlog = LogisticRegression()\nlog.fit(x_train,y_train)\nlog.score(x_test,y_test)","99e8a022":"sub = pd.read_csv('\/kaggle\/input\/tabular-playground-series-apr-2021\/sample_submission.csv')","c66fa35f":"sub.head()","679ca951":"predictions = log.predict(test1)","c7ebe1be":"predictions","75dc7983":"initially i am droping cabing and clearing all empty values , later on we will replace it with different values that best fits","b4a3491a":"# DATA EXPLORATION","0f520d02":"First Model For Submission"}}