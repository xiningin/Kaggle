{"cell_type":{"91064893":"code","3ef1006a":"code","5bb23aff":"code","cac0a254":"code","1ca9173d":"code","e6921e49":"code","12dda345":"code","b3e24ef0":"code","900ae243":"code","ade6819c":"code","0b436bf1":"code","2a1e90e1":"code","9fde717e":"code","c5c1e0fa":"code","09fc232e":"code","6743ea39":"code","dbe036bf":"code","eb17c6ae":"code","aff79d6f":"code","00a9a07c":"code","03d05e6c":"code","30cfec9b":"code","50abffcd":"code","35c9e178":"code","c9775240":"code","64b8d3da":"code","16a99702":"code","6847d94f":"code","de258e24":"code","d206d0ef":"code","5a1d8bcf":"code","bc3101c7":"code","bc78e9bf":"code","26ce1ebe":"code","03b9b885":"code","07ed8860":"code","7e852f13":"code","ffd248f8":"code","ce245c3f":"code","7fedfc4f":"code","628a4eb5":"code","f816e049":"code","5d6f01af":"code","7191de74":"code","9955fd4c":"code","76efc9a8":"code","dc56bcd9":"code","089992a0":"code","8b134ca9":"code","c4da7745":"code","1a7bfd2b":"code","6853791a":"code","8f06f59b":"code","d515dce3":"code","7e02a59a":"code","654e4aa1":"code","cad77a36":"code","b7838e2f":"code","e5f75776":"code","85f4719a":"code","7174ae47":"code","649ee1c7":"code","3531a718":"code","0b9fbafc":"code","dabcec99":"code","b6864ee4":"code","68871655":"code","5721a941":"code","83a1116a":"code","fc56e742":"code","37ba5380":"code","0e71fc2b":"code","f7bf1d6b":"code","78548335":"code","781bba91":"markdown","c5d62fb2":"markdown","8b58d7c1":"markdown","a3318a54":"markdown","aeedf7b0":"markdown","8417da6f":"markdown","ac79d6c0":"markdown","e788930e":"markdown","82aa6307":"markdown","a7000988":"markdown","e8faa44a":"markdown","bf738c87":"markdown","3a0a48d9":"markdown","0e07c8ff":"markdown","ae4416ca":"markdown","5dd9c562":"markdown","60701620":"markdown","1806f2d2":"markdown","03dfbd92":"markdown","6f3428c1":"markdown","415b2c44":"markdown","6f7e4930":"markdown","deb17015":"markdown","07a27b72":"markdown","389ce56c":"markdown","e37e42e8":"markdown"},"source":{"91064893":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os","3ef1006a":"questions = pd.read_csv('..\/input\/kaggle-survey-2019\/questions_only.csv')","5bb23aff":"questions.columns","cac0a254":"questions.head()","1ca9173d":"questions.shape","e6921e49":"for column  in questions.columns:\n    print(f'{column}:{questions[column].values}')","12dda345":"response = pd.read_csv('..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')","b3e24ef0":"for column in response.columns:\n    print(column)","900ae243":"response.describe()","ade6819c":"response.head()","0b436bf1":"work_title = response['Q5'].value_counts()[:-1]","2a1e90e1":"work_title","9fde717e":"gender = response['Q2'].value_counts()[:-1]","c5c1e0fa":"gender","09fc232e":"g = gender\/sum(gender)*100","6743ea39":"g=g.tolist()","dbe036bf":"print(f'The percentages are: {g}'+'%')","eb17c6ae":"gender.plot.bar()","aff79d6f":"choices = ['Q9_Part_1',\n'Q9_Part_2',\n'Q9_Part_3',\n'Q9_Part_4',\n'Q9_Part_5',\n'Q9_Part_6',\n'Q9_Part_7',\n'Q9_Part_8']","00a9a07c":"values = []\ncounts = []\nfor choice in choices:\n    value = response[choice][1:].value_counts().keys().tolist()[0]\n    count = response[choice][1:].value_counts().tolist()[0]\n    values.append(value)\n    counts.append(count)\n\ndf = pd.DataFrame({'activity counts': counts}, index=values)\ndf = df.sort_values(by='activity counts')\ndf ","03d05e6c":"ax = df.plot.barh()","30cfec9b":"income = response['Q10'].value_counts()","50abffcd":"income[:-1].plot.bar()","35c9e178":"gender = response['Q2'].tolist()[1:]","c9775240":"salary = response['Q10'].tolist()[1:]","64b8d3da":"title = response['Q5'].tolist()[1:]","16a99702":"a = {'gender':gender,'salary':salary,'title':title}","6847d94f":"income = pd.DataFrame.from_dict(a)","de258e24":"income.describe()","d206d0ef":"income_t_s = income.groupby(by=['title','salary'])","5a1d8bcf":"income_t_s.describe()","bc3101c7":"income.groupby(by=['title','salary']).get_group","bc78e9bf":"income.dropna()","26ce1ebe":"femal_income = income.loc[income['gender'] == 'Female']\nmale_income = income.loc[income['gender'] == 'Male']","03b9b885":"f_i = femal_income['salary'].value_counts()","07ed8860":"m_i = male_income['salary'].value_counts()","7e852f13":"f_i.plot.bar()","ffd248f8":"m_i.plot.bar()","ce245c3f":"choices = ['Q13_Part_1',\n'Q13_Part_2',\n'Q13_Part_3',\n'Q13_Part_4',\n'Q13_Part_5',\n'Q13_Part_6',\n'Q13_Part_7',\n'Q13_Part_8',\n'Q13_Part_9',\n'Q13_Part_10',\n'Q13_Part_11',\n'Q13_Part_12']","7fedfc4f":"values = []\ncounts = []\nfor choice in choices:\n    value = response[choice][1:].value_counts().keys().tolist()[0]\n    count = response[choice][1:].value_counts().tolist()[0]\n    values.append(value)\n    counts.append(count)\n\ndf = pd.DataFrame({'course platform counts': counts}, index=values)\ndf = df.sort_values(by='course platform counts',ascending = False)\ndf ","628a4eb5":"tools = response['Q14'].value_counts()\nprint(tools[:-1])\ntools[:-1].plot.barh()","f816e049":"choices = ['Q16_Part_1',\n'Q16_Part_2',\n'Q16_Part_3',\n'Q16_Part_4',\n'Q16_Part_5',\n'Q16_Part_6',\n'Q16_Part_7',\n'Q16_Part_8',\n'Q16_Part_9',\n'Q16_Part_10',\n'Q16_Part_11',\n'Q16_Part_12']","5d6f01af":"values = []\ncounts = []\nfor choice in choices:\n    value = response[choice][1:].value_counts().keys().tolist()[0]\n    count = response[choice][1:].value_counts().tolist()[0]\n    values.append(value)\n    counts.append(count)\n\ndf = pd.DataFrame({'IDE counts': counts}, index=values)\ndf = df.sort_values(by='IDE counts',ascending = False)\ndf ","7191de74":"choices = ['Q18_Part_1',\n'Q18_Part_2',\n'Q18_Part_3',\n'Q18_Part_4',\n'Q18_Part_5',\n'Q18_Part_6',\n'Q18_Part_7',\n'Q18_Part_8',\n'Q18_Part_9',\n'Q18_Part_10',\n'Q18_Part_11',\n'Q18_Part_12']","9955fd4c":"values = []\ncounts = []\nfor choice in choices:\n    value = response[choice][1:].value_counts().keys().tolist()[0]\n    count = response[choice][1:].value_counts().tolist()[0]\n    values.append(value)\n    counts.append(count)\n\ndf = pd.DataFrame({'coding language': counts}, index=values)\ndf = df.sort_values(by='coding language',ascending = False)\ndf ","76efc9a8":"choices = ['Q20_Part_1',\n'Q20_Part_2',\n'Q20_Part_3',\n'Q20_Part_4',\n'Q20_Part_5',\n'Q20_Part_6',\n'Q20_Part_7',\n'Q20_Part_8',\n'Q20_Part_9',\n'Q20_Part_10',\n'Q20_Part_11',\n'Q20_Part_12']","dc56bcd9":"values = []\ncounts = []\nfor choice in choices:\n    value = response[choice][1:].value_counts().keys().tolist()[0]\n    count = response[choice][1:].value_counts().tolist()[0]\n    values.append(value)\n    counts.append(count)\n\ndf = pd.DataFrame({'libary counts': counts}, index=values)\ndf = df.sort_values(by='libary counts',ascending = False)\ndf ","089992a0":"years = response['Q23'].value_counts()\nprint(years[:-1])\nyears[:-1].plot.barh()","8b134ca9":"choices = ['Q24_Part_1',\n'Q24_Part_2',\n'Q24_Part_3',\n'Q24_Part_4',\n'Q24_Part_5',\n'Q24_Part_6',\n'Q24_Part_7',\n'Q24_Part_8',\n'Q24_Part_9',\n'Q24_Part_10',\n'Q24_Part_11',\n'Q24_Part_12']","c4da7745":"values = []\ncounts = []\nfor choice in choices:\n    value = response[choice][1:].value_counts().keys().tolist()[0]\n    count = response[choice][1:].value_counts().tolist()[0]\n    values.append(value)\n    counts.append(count)\n\ndf = pd.DataFrame({'ML algorithm counts': counts}, index=values)\ndf = df.sort_values(by='ML algorithm counts',ascending = False)\ndf ","1a7bfd2b":"choices=['Q25_Part_1',\n'Q25_Part_2',\n'Q25_Part_3',\n'Q25_Part_4',\n'Q25_Part_5',\n'Q25_Part_6',\n'Q25_Part_7',\n'Q25_Part_8']","6853791a":"values = []\ncounts = []\nfor choice in choices:\n    value = response[choice][1:].value_counts().keys().tolist()[0]\n    count = response[choice][1:].value_counts().tolist()[0]\n    values.append(value)\n    counts.append(count)\n\ndf = pd.DataFrame({'ML tools counts': counts}, index=values)\ndf = df.sort_values(by='ML tools counts',ascending = False)\ndf","8f06f59b":"choices=['Q28_Part_1',\n'Q28_Part_2',\n'Q28_Part_3',\n'Q28_Part_4',\n'Q28_Part_5',\n'Q28_Part_6',\n'Q28_Part_7',\n'Q28_Part_8',\n'Q28_Part_9',\n'Q28_Part_10',\n'Q28_Part_11',\n'Q28_Part_12']","d515dce3":"values = []\ncounts = []\nfor choice in choices:\n    value = response[choice][1:].value_counts().keys().tolist()[0]\n    count = response[choice][1:].value_counts().tolist()[0]\n    values.append(value)\n    counts.append(count)\n\ndf = pd.DataFrame({'ML frameworks counts': counts}, index=values)\ndf = df.sort_values(by='ML frameworks counts',ascending = False)\ndf","7e02a59a":"choices=['Q29_Part_1',\n'Q29_Part_2',\n'Q29_Part_3',\n'Q29_Part_4',\n'Q29_Part_5',\n'Q29_Part_6',\n'Q29_Part_7',\n'Q29_Part_8',\n'Q29_Part_9',\n'Q29_Part_10',\n'Q29_Part_11',\n'Q29_Part_12']","654e4aa1":"values = []\ncounts = []\nfor choice in choices:\n    value = response[choice][1:].value_counts().keys().tolist()[0]\n    count = response[choice][1:].value_counts().tolist()[0]\n    values.append(value)\n    counts.append(count)\n\ndf = pd.DataFrame({'cloud computing platforms counts': counts}, index=values)\ndf = df.sort_values(by='cloud computing platforms counts',ascending = False)\ndf","cad77a36":"choices=['Q31_Part_1',\n'Q31_Part_2',\n'Q31_Part_3',\n'Q31_Part_4',\n'Q31_Part_5',\n'Q31_Part_6',\n'Q31_Part_7',\n'Q31_Part_8',\n'Q31_Part_9',\n'Q31_Part_10',\n'Q31_Part_11',\n'Q31_Part_12']","b7838e2f":"values = []\ncounts = []\nfor choice in choices:\n    value = response[choice][1:].value_counts().keys().tolist()[0]\n    count = response[choice][1:].value_counts().tolist()[0]\n    values.append(value)\n    counts.append(count)\n\ndf = pd.DataFrame({'bigdata products counts': counts}, index=values)\ndf = df.sort_values(by='bigdata products counts',ascending = False)\ndf","e5f75776":"choices=['Q32_Part_1',\n'Q32_Part_2',\n'Q32_Part_3',\n'Q32_Part_4',\n'Q32_Part_5',\n'Q32_Part_6',\n'Q32_Part_7',\n'Q32_Part_8',\n'Q32_Part_9',\n'Q32_Part_10',\n'Q32_Part_11',\n'Q32_Part_12']","85f4719a":"values = []\ncounts = []\nfor choice in choices:\n    value = response[choice][1:].value_counts().keys().tolist()[0]\n    count = response[choice][1:].value_counts().tolist()[0]\n    values.append(value)\n    counts.append(count)\n\ndf = pd.DataFrame({'ML products counts': counts}, index=values)\ndf = df.sort_values(by='ML products counts',ascending = False)\ndf","7174ae47":"choices=['Q33_Part_1',\n'Q33_Part_2',\n'Q33_Part_3',\n'Q33_Part_4',\n'Q33_Part_5',\n'Q33_Part_6',\n'Q33_Part_7',\n'Q33_Part_8',\n'Q33_Part_9',\n'Q33_Part_10',\n'Q33_Part_11',\n'Q33_Part_12']","649ee1c7":"values = []\ncounts = []\nfor choice in choices:\n    value = response[choice][1:].value_counts().keys().tolist()[0]\n    count = response[choice][1:].value_counts().tolist()[0]\n    values.append(value)\n    counts.append(count)\n\ndf = pd.DataFrame({'automated machine learning tools counts': counts}, index=values)\ndf = df.sort_values(by='automated machine learning tools counts',ascending = False)\ndf","3531a718":"choices=['Q34_Part_1',\n'Q34_Part_2',\n'Q34_Part_3',\n'Q34_Part_4',\n'Q34_Part_5',\n'Q34_Part_6',\n'Q34_Part_7',\n'Q34_Part_8',\n'Q34_Part_9',\n'Q34_Part_10',\n'Q34_Part_11',\n'Q34_Part_12']","0b9fbafc":"values = []\ncounts = []\nfor choice in choices:\n    value = response[choice][1:].value_counts().keys().tolist()[0]\n    count = response[choice][1:].value_counts().tolist()[0]\n    values.append(value)\n    counts.append(count)\n\ndf = pd.DataFrame({'relational database products counts': counts}, index=values)\ndf = df.sort_values(by='relational database products counts',ascending = False)\ndf","dabcec99":"texts = pd.read_csv('..\/input\/kaggle-survey-2019\/other_text_responses.csv')","b6864ee4":"texts.columns","68871655":"texts.describe()","5721a941":"texts.shape","83a1116a":"texts.tail()","fc56e742":"for column  in questions.columns:\n    print(f'{column}:{questions[column].values}')","37ba5380":"for column in texts.columns:\n    tools = texts[column].value_counts()\n    print(f'{column}:{tools[:5]}')\n#     tools[:-1].plot.barh()","0e71fc2b":"schemas = pd.read_csv('..\/input\/kaggle-survey-2019\/survey_schema.csv')","f7bf1d6b":"schemas.describe()","78548335":"schemas.shape","781bba91":"#### Q32: Which of the following machine learning products do you use on a regular basis? ","c5d62fb2":"#### Q23: For how many years have you used machine learning methods?","8b58d7c1":"#### Explore Q9: Activities that make up an important role at work","a3318a54":"#### Q18:What programming languages do you use on a regular basis?","aeedf7b0":"#### Explore Q10: Current yearly compensation ","8417da6f":"#### Get the multiple choices response columns","ac79d6c0":"#### Q16: Which of the following integrated development environments (IDE's) do you use on a regular basis?","e788930e":"#### Q25: Category of ML tools","82aa6307":"#### Q20: What data visualization libraries or tools do you use on a regular basis?","a7000988":"#### Q34:Which of the following relational database products do you use on a regular basis?","e8faa44a":"Still working on the analysis","bf738c87":"#### Q13: On which platforms have you begun or completed data science courses?","3a0a48d9":"#### Q14: Primary tools used in work","0e07c8ff":"### 1.4 Explore schema file","ae4416ca":"#### Explore Q5: the title of current position","5dd9c562":"#### Get the question lists","60701620":"## 1. Load the data and do exploration","1806f2d2":"#### Q29: Which of the following cloud computing platforms do you use on a regular basis?","03dfbd92":"#### Explore Q2: Gender distribution","6f3428c1":"#### Q28: ML frames used in daily basis","415b2c44":"### 1.2 Explore the responses","6f7e4930":"#### Q33: Which automated machine learning tools (or partial AutoML tools) do you use on a regular basis? ","deb17015":"#### Q24:Which of the following ML algorithms do you use on a regular basis?","07a27b72":"#### Q31: Which specific big data \/ analytics products do you use on a regular basis? (Select all that apply) - Selected Choice","389ce56c":"### 1.3 Explore text files","e37e42e8":"**1.1 Explore the data**"}}