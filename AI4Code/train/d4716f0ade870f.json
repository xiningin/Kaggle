{"cell_type":{"1feec04d":"code","fa2fb5b5":"code","7d429599":"code","be828bb4":"code","d99b4f64":"code","54bdb221":"code","70881dfc":"code","152dd1d7":"code","d664ac64":"code","4e809369":"code","187e32a7":"code","018f13a5":"code","e244da9d":"code","707a766e":"code","ac36700c":"code","0db00f00":"code","1fc32c8b":"code","cf9337da":"code","9e75034b":"markdown","d5f24c51":"markdown","470d427e":"markdown","620c48de":"markdown","86ca09ce":"markdown","75262be4":"markdown","be06d023":"markdown","a12b92f2":"markdown","dd1274dd":"markdown","8da72a66":"markdown","c37eaf9b":"markdown","7f50ecfe":"markdown","3d36c71c":"markdown","d86b6476":"markdown","38764b32":"markdown","37e43de8":"markdown","a37b256c":"markdown","24d3d929":"markdown","a64f4a02":"markdown","22dde048":"markdown","40963b28":"markdown"},"source":{"1feec04d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split, cross_val_score","fa2fb5b5":"def importing_dataset(train_path, test_path):\n    train_dataset = pd.read_csv(train_path)\n    test_dataset = pd.read_csv(test_path).drop('PassengerId', axis = 1)\n    test_id = pd.read_csv(test_path)['PassengerId']\n\n    \n    return train_dataset, test_dataset, test_id\n\ntrain_dataset_path = 'E:\/Specialize\/python\/My Projects\/ML\/titanic\/train.csv' \ntest_dataset_path = 'E:\/Specialize\/python\/My Projects\/ML\/titanic\/test.csv'\n\n\ntitanic_train, titanic_test, titanic_test_id = importing_dataset(train_dataset_path, test_dataset_path)","7d429599":"def  drop_survived(dataset):\n    evaluate_data = dataset['Survived']\n    dataset.drop(columns = 'Survived', inplace = True)\n    return dataset, evaluate_data\n\ntitanic_train, evaluate_data = drop_survived(titanic_train)","be828bb4":"def dropping_train_id(train_dataset, id_column):\n    new_train = train_dataset.drop(id_column, axis = 1)\n    \n    return new_train\n\ntitanic_train = dropping_train_id(titanic_train, 'PassengerId')","d99b4f64":"titanic_train.head()","54bdb221":"def create_family_column(dataset, column1, column2):\n    dataset['Family_count'] = dataset[column1] + dataset[column2] + 1\n    dataset.drop([column1, column2], axis = 1, inplace = True)\n    return dataset\n\ntitanic_train = create_family_column(titanic_train, 'SibSp', 'Parch')\ntitanic_test = create_family_column(titanic_test, 'SibSp', 'Parch')","70881dfc":"def drop_columns_with_low_value(dataset, column1, column2):\n    dataset.drop([column1, column2], axis = 1, inplace = True)\n    return dataset\n\n\ntitanic_train = drop_columns_with_low_value(titanic_train, 'Name', 'Ticket')\ntitanic_test = drop_columns_with_low_value(titanic_test, 'Name', 'Ticket')","152dd1d7":"def detect_missing_values(dataset):\n    print(f'in {dataset} Dataset:')\n    print(dataset.isnull().sum(), '\\n')\n    \ndetect_missing_values(titanic_train)\ndetect_missing_values(titanic_test)","d664ac64":"def drop_cabin(dataset):\n    dataset.drop(columns = 'Cabin', inplace = True)\n    return dataset\n\ntitanic_train = drop_cabin(titanic_train)\ntitanic_test = drop_cabin(titanic_test)","4e809369":"def fill_age_column(dataset):\n    mean_age = dataset['Age'].mean()\n    dataset['Age'].fillna(mean_age, inplace = True)\n    return dataset\n\ntitanic_train = fill_age_column(titanic_train)\ntitanic_test = fill_age_column(titanic_test)","187e32a7":"titanic_train['Embarked'].fillna(method = 'ffill', inplace = True)\nmean_fare = titanic_test['Fare'].mean()\ntitanic_test['Fare'].fillna(mean_fare, inplace = True)","018f13a5":"def cat_to_num(dataset):\n    dataset = pd.get_dummies(dataset)\n    return dataset\n\ntitanic_train = cat_to_num(titanic_train)\ntitanic_test = cat_to_num(titanic_test)","e244da9d":"from sklearn.linear_model import PassiveAggressiveClassifier\nfrom sklearn.linear_model import RidgeClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier","707a766e":"models = []\nmodels.append(('Passive', PassiveAggressiveClassifier()))\nmodels.append(('Ridge', RidgeClassifier()))\nmodels.append(('Tree', DecisionTreeClassifier()))\nmodels.append(('KNN', KNeighborsClassifier()))","ac36700c":"for name, model in models:\n    model.fit(titanic_train, evaluate_data)\n    result = cross_val_score(model, titanic_train, evaluate_data, cv = 10)\n    print(f'{name}:'.ljust(8),f'{result.mean()}')","0db00f00":"Ridge = RidgeClassifier()\nRidge.fit(titanic_train, evaluate_data)","1fc32c8b":"y_pred = Ridge.predict(titanic_test)","cf9337da":"result_predict = pd.DataFrame(y_pred, columns = ['Survived'], index = titanic_test_id)","9e75034b":"### Save results into new dataset","d5f24c51":"**Fit models and Evaluate them**","470d427e":"#### reTrain choosed Model","620c48de":"#### from above results, we decide to drop Cabin column that has many missing values.","86ca09ce":"#### drop the 'Survived' label in Train Dataset","75262be4":"### Make a Predict for test dataset.","be06d023":"### import functions","a12b92f2":"#### Convert the Categorical values with Numerics","dd1274dd":"\n\n\n**for this goal we have to follow the bellow steps:**\n\n* import necessary libraries and functions\n* import Datasets and make a overview\n* feature Engineering - Hold good features that are necessary for predict and delete others.\n* manage the missing values and null datas\n* change the type of str datas into numeric features\n* load ML models and train them.\n* choose the best model and retrain that.\n* have a test for fitting issue for that.\n* at the end, have predict for test datas.\n","8da72a66":"#### Take an overview of our dataset","c37eaf9b":"### Import ML models","7f50ecfe":"#### and for Age column, we change the Null values with Average value of that column.","3d36c71c":"### import Datasets","d86b6476":"#### Drop unusefull columns","38764b32":"According to the above results, best model for our Project is the 'RidgeClassifier' which has a result of %79.","37e43de8":"In this project, we want to have a predict for the chance of survive for a group of titanic passengers.  ","a37b256c":"# PREDICTION ON TITANIC DATASET \ud83d\uddff","24d3d929":"#### manage other nulls","a64f4a02":"#### Merge the 'Parch'  and 'SibSp' columns and create 'Family_count' column.","22dde048":"##### droping the 'PassengerId' column from train dataset","40963b28":"### Handle the Missing Values\n##### at first we have to detect them in columns"}}