{"cell_type":{"bff7ffd7":"code","90ad125d":"code","dd18e2ef":"code","2a7f1fb6":"code","147d32f6":"code","d7f36b41":"code","73af5b31":"code","d2163900":"code","807ae767":"code","5268b4af":"code","5d76c01c":"code","3ec2a420":"code","1f68d0a7":"code","7cb81d7b":"code","60fd0bca":"code","e6542023":"code","1e78af94":"code","61cfb1bd":"code","3d5c47e0":"code","02ab08e4":"code","499185e5":"code","16dfe9dd":"code","a183b91d":"code","c43bc2dc":"code","bb474259":"code","b5d2d9a8":"code","c67eb114":"code","438785b1":"code","b2145e16":"code","c05cfb79":"markdown","de4e9f92":"markdown","e0db672c":"markdown","99f8bac3":"markdown","1c0f6d9b":"markdown","1701c2dc":"markdown","da6c5630":"markdown","bcc63b6e":"markdown"},"source":{"bff7ffd7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","90ad125d":"players = pd.read_csv(\"\/kaggle\/input\/nba-games\/players.csv\")\nteams = pd.read_csv(\"\/kaggle\/input\/nba-games\/teams.csv\")\ngames = pd.read_csv(\"\/kaggle\/input\/nba-games\/games.csv\")\ndetails = pd.read_csv(\"\/kaggle\/input\/nba-games\/games_details.csv\")\nranking = pd.read_csv(\"\/kaggle\/input\/nba-games\/ranking.csv\")","dd18e2ef":"players.head()","2a7f1fb6":"games.head()","147d32f6":"teams.head()","d7f36b41":"ranking.head()","73af5b31":"details = details.drop_duplicates(subset=[\"GAME_ID\", \"PLAYER_NAME\"])\ndetails.head()","d2163900":"bron = details[details[\"PLAYER_NAME\"] == \"LeBron James\"]\nbron.drop([\"TEAM_ID\", \"TEAM_CITY\", \"PLAYER_ID\", \"PLAYER_NAME\", \"COMMENT\"], axis=1, inplace=True)\nbron.head()","807ae767":"games_date = games[[\"GAME_DATE_EST\", \"GAME_ID\", \"SEASON\"]]\ngames_date.head()","5268b4af":"stats = bron.merge(games_date, on=\"GAME_ID\", how=\"left\")","5d76c01c":"seasonal_stats = stats.groupby(\"SEASON\").sum()\/stats.groupby(\"SEASON\").count()","3ec2a420":"fig, axes = plt.subplots(1,2, figsize=(15,5))\nfig.suptitle(\"Bron's PPG Each Season\", fontsize=20)\nsns.barplot(x=seasonal_stats[\"PTS\"], y = seasonal_stats.index.map(str), ax=axes[0])\nsns.lineplot(y=seasonal_stats[\"PTS\"], x = seasonal_stats.index.map(str), ax=axes[1])\naxes[1].tick_params(axis='x', labelrotation=45)","1f68d0a7":"fig, axes = plt.subplots(1,2, figsize=(15,5))\nfig.suptitle(\"Bron's APG Each Season\", fontsize=20)\nsns.barplot(x=seasonal_stats[\"AST\"], y = seasonal_stats.index.map(str), ax=axes[0])\nsns.lineplot(y=seasonal_stats[\"AST\"], x = seasonal_stats.index.map(str), ax=axes[1])\naxes[1].tick_params(axis='x', labelrotation=45)","7cb81d7b":"fig, axes = plt.subplots(1,2, figsize=(15,5))\nfig.suptitle(\"Bron's RPG Each Season\", fontsize=20)\nsns.barplot(x=seasonal_stats[\"REB\"], y = seasonal_stats.index.map(str), ax=axes[0])\nsns.lineplot(y=seasonal_stats[\"REB\"], x = seasonal_stats.index.map(str), ax=axes[1])\naxes[1].tick_params(axis='x', labelrotation=45)","60fd0bca":"fig, axes = plt.subplots(1,2, figsize=(15,5))\nfig.suptitle(\"Bron's BPG Each Season\", fontsize=20)\nsns.barplot(x=seasonal_stats[\"BLK\"], y = seasonal_stats.index.map(str), ax=axes[0])\nsns.lineplot(y=seasonal_stats[\"BLK\"], x = seasonal_stats.index.map(str), ax=axes[1])\naxes[1].tick_params(axis='x', labelrotation=45)","e6542023":"fig, axes = plt.subplots(1,2, figsize=(15,5))\nfig.suptitle(\"Bron's SPG Each Season\", fontsize=20)\nsns.barplot(x=seasonal_stats[\"STL\"], y = seasonal_stats.index.map(str), ax=axes[0])\nsns.lineplot(y=seasonal_stats[\"STL\"], x = seasonal_stats.index.map(str), ax=axes[1])\naxes[1].tick_params(axis='x', labelrotation=45)","1e78af94":"fig, axes = plt.subplots(1,2, figsize=(15,5))\nfig.suptitle(\"Bron's Field Goal Percentage Each Season\", fontsize=20)\nsns.barplot(x=seasonal_stats[\"FG_PCT\"], y = seasonal_stats.index.map(str), ax=axes[0])\nsns.lineplot(y=seasonal_stats[\"FG_PCT\"], x = seasonal_stats.index.map(str), ax=axes[1])\naxes[1].tick_params(axis='x', labelrotation=45)","61cfb1bd":"fig, axes = plt.subplots(1,2, figsize=(15,5))\nfig.suptitle(\"Bron's Field Goal Percentage Each Season\", fontsize=20)\nsns.barplot(x=seasonal_stats[\"FG_PCT\"], y = seasonal_stats.index.map(str), ax=axes[0])\nsns.lineplot(y=seasonal_stats[\"FG_PCT\"], x = seasonal_stats.index.map(str), ax=axes[1])\naxes[1].tick_params(axis='x', labelrotation=45)","3d5c47e0":"fig, axes = plt.subplots(1,2, figsize=(15,5))\nfig.suptitle(\"Bron's +- Each Season\", fontsize=20)\nsns.barplot(x=seasonal_stats[\"PLUS_MINUS\"], y = seasonal_stats.index.map(str), ax=axes[0])\nsns.lineplot(y=seasonal_stats[\"PLUS_MINUS\"], x = seasonal_stats.index.map(str), ax=axes[1])\naxes[1].tick_params(axis='x', labelrotation=45)","02ab08e4":"all_players = details[[\"PLAYER_NAME\", \"PTS\", \"AST\", \"REB\", \"BLK\", \"STL\", \"PF\", \"MIN\", \"FGM\", \"FGA\", \"FG3M\", \"FG3A\", \"FTM\", \"FTA\"]]\nall_players = all_players.groupby(\"PLAYER_NAME\").sum()\nall_players","499185e5":"fig, axes = plt.subplots(2,3, figsize=(15,10))\nfig.suptitle(\"Lebron's Stats vs Other Players Since 2003\", fontsize=20)\n\nsns.scatterplot(all_players[\"FGM\"], all_players[\"PTS\"], ax = axes[0][0])\nsns.scatterplot(x=\"FGM\", y=\"PTS\", data=all_players[all_players.index == \"LeBron James\"], ax = axes[0][0])\naxes[0][0].title.set_text('Field Goals Made and Points')\n\nsns.scatterplot(all_players[\"FGM\"], all_players[\"FGA\"], ax = axes[0][1])\nsns.scatterplot(x=\"FGM\", y=\"FGA\", data=all_players[all_players.index == \"LeBron James\"], ax = axes[0][1])\naxes[0][1].title.set_text('Field Goals Made and Attempts')\n\nsns.scatterplot(all_players[\"FG3M\"], all_players[\"FG3A\"], ax = axes[0][2])\nsns.scatterplot(x=\"FG3M\", y=\"FG3A\", data=all_players[all_players.index == \"LeBron James\"], ax = axes[0][2])\naxes[0][2].title.set_text('Three Point Made and Attempts')\n\nsns.scatterplot(all_players[\"FTM\"], all_players[\"FTA\"], ax = axes[1][0])\nsns.scatterplot(x=\"FTM\", y=\"FTA\", data=all_players[all_players.index == \"LeBron James\"], ax = axes[1][0])\naxes[1][0].title.set_text('Free Throw Made and Attempts')\n\nsns.scatterplot(all_players[\"AST\"], all_players[\"REB\"], ax = axes[1][1])\nsns.scatterplot(x=\"AST\", y=\"REB\", data=all_players[all_players.index == \"LeBron James\"], ax = axes[1][1] )\naxes[1][1].title.set_text('Rebounds and Assists')\n\nsns.scatterplot(all_players[\"STL\"], all_players[\"BLK\"], ax = axes[1][2])\nsns.scatterplot(x=\"STL\", y=\"BLK\", data=all_players[all_players.index == \"LeBron James\"], ax = axes[1][2])\naxes[1][2].title.set_text('Steals and Blocks')\n\nfig.tight_layout()","16dfe9dd":"bron_details = pd.merge(games, details[details.PLAYER_NAME == \"LeBron James\"], on = \"GAME_ID\")\nbron_details[\"home\"] = bron_details[\"TEAM_ID\"] == bron_details[\"TEAM_ID_home\"]\nbron_details[(bron_details[\"home\"] & (bron_details[\"PTS_home\"] > bron_details[\"PTS_away\"]))]\nbron_details[\"WIN\"] = (bron_details[\"home\"] & (bron_details[\"PTS_home\"] > bron_details[\"PTS_away\"])) | ((bron_details[\"home\"] == False) & (bron_details[\"PTS_home\"] < bron_details[\"PTS_away\"]))","a183b91d":"plt.rcParams.update({'text.color' : \"black\"})\nfig, ax = plt.subplots(figsize=(10,10))\nfig.suptitle(\"LeBron Team\", fontsize=20, color = \"black\")\n\nax.pie(x = bron_details.groupby([\"TEAM_ABBREVIATION\"]).count().home, labels = [\"CLE\", \"LAL\", \"MIA\"], autopct=\"%.1f%%\", pctdistance=0.5, wedgeprops=dict(edgecolor='w'))","c43bc2dc":"plt.figure(figsize=(10,10))\n\nplt.pie(x=bron_details.groupby(\"WIN\").count().home, labels = [\"LOSE\", \"WIN\"], autopct=\"%.1f%%\", pctdistance=0.5, wedgeprops=dict(edgecolor='w'))\nplt.title(\"LeBron Win Percentage\", fontsize=20, color = \"black\")\n","bb474259":"# plt.rcParams.update({'text.color' : \"white\"})\n\nfig, ax = plt.subplots(figsize=(10,10))\n\nax.pie(bron_details.groupby([\"TEAM_ABBREVIATION\"]).count().home, labels = [\"CLE\", \"LAL\", \"MIA\"], radius=1,\n       wedgeprops=dict(edgecolor='w'))\n\nax.pie(bron_details.groupby([\"TEAM_ABBREVIATION\", \"WIN\"]).count().home, labels = [\"LOSE\", \"WIN\", \"LOSE\", \"WIN\", \"LOSE\", \"WIN\"], autopct=\"%.1f%%\", radius=0.70,\n       wedgeprops=dict(edgecolor='w'))\n\nfig.suptitle(\"Lebron's W\/L Percentage on Each Team\", fontsize=20)\nplt.show()\n","b5d2d9a8":"temp = teams[[\"TEAM_ID\", \"ABBREVIATION\"]]","c67eb114":"games[\"VISITOR_TEAM_WINS\"] = (games[\"HOME_TEAM_WINS\"]+1) % 2\ngames","438785b1":"temp = pd.merge(temp, games.groupby(\"HOME_TEAM_ID\").sum()[\"HOME_TEAM_WINS\"], left_on=\"TEAM_ID\", right_index=True)\ntemp = pd.merge(temp, games.groupby(\"VISITOR_TEAM_ID\").sum()[\"VISITOR_TEAM_WINS\"], left_on=\"TEAM_ID\", right_index=True)\ntemp[\"TOTAL_WINS\"] = temp[\"HOME_TEAM_WINS\"] + temp[\"VISITOR_TEAM_WINS\"]\n\nteam_wins = temp\nteam_wins = team_wins.append({\"ABBREVIATION\": \"Bron\", \"TOTAL_WINS\":bron_details.groupby(\"WIN\").count().loc[True].max()}, ignore_index=True)\nteam_wins\n\n","b2145e16":"fig, ax = plt.subplots(figsize=(15,5))\nfig.suptitle(\"TOTAL TEAM WINS SINCE 2003 vs LeBron\", color=\"black\", fontsize=18)\nsns.barplot(ax=ax, x=\"ABBREVIATION\", y=\"TOTAL_WINS\", data=team_wins.sort_values(\"TOTAL_WINS\", ascending = False))","c05cfb79":"# LeBron Stats Growth\nNow, let's see LeBron stats growth over years","de4e9f92":"The only team that have more wins than LeBron since 2003 is Spurs, **Go Spurs Go!**\n\n\n**That's it!**, please give me suggestion to improve my notebook :)","e0db672c":"![](https:\/\/cdn1.thecomeback.com\/wp-content\/uploads\/sites\/94\/2018\/02\/Fox-Sports-Indiana-Graphic-832x447.jpg)\n\nThis might look dumb and absurd for the NBA fans, but the way the analyst draw that conclusion is actually amazing, they dive deeply into a \"black box\" until they found this conclusion.\n\nNow, I'm also trying to analyze the NBA dataset and find some LeBron amazing stats. You can see the dataset [here](https:\/\/www.kaggle.com\/nathanlauga\/nba-games).\n\nThis dataset contains game records since 2003, that's why I choose LeBron's stats who drafted in 2003.","99f8bac3":"# Extra: Winningest Team Since 2003","1c0f6d9b":"# Preparing The Dataframes","1701c2dc":"# LeBron Win Percentage","da6c5630":"# LeBron Stats VS Others\n\nNow, let's see LeBron's cummulative stats since 2003 compared to others","bcc63b6e":"These stats are ridiculous!"}}