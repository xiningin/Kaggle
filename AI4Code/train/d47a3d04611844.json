{"cell_type":{"e6e6afc3":"code","7a416655":"code","90e5d26a":"code","9331654d":"code","9a795319":"code","f06eec2f":"code","fd5b5a3f":"code","685b2bbf":"code","ea1ddd62":"code","43829da8":"code","afad262e":"code","f141666e":"code","9eb5929d":"code","23f8d535":"code","98076ca1":"code","a62a1ee3":"code","e7dcc837":"code","7d66bc67":"code","5fa9ad79":"code","3452e5cd":"code","acaa0759":"code","bc656ce3":"code","89be6755":"code","74868684":"code","5ff9e3a2":"code","ac5a37a0":"code","edb729db":"code","7f014eca":"code","6e684fc7":"code","d80a9603":"code","f0a018ef":"code","02328326":"code","73ce299a":"code","0ec4994a":"code","a81e7bd5":"code","43d3783b":"code","96c8f89d":"code","ef25afe2":"code","18be6fb6":"code","01514fb6":"code","b259cfc6":"code","64072d7b":"code","e39bc859":"code","4a5a4bbb":"code","c06f04c1":"code","62982e95":"code","c3ec4ffd":"code","4c0fd5dd":"code","b681753a":"code","5a33d756":"code","bae622c7":"code","e159847f":"code","88d95415":"code","af2a98b4":"code","bcb5ca0c":"code","b8a73a9c":"code","3b8bf894":"code","7a1b4632":"code","127dd334":"code","ed4371ef":"code","834d3c1b":"code","4123f633":"code","5db5b1e9":"code","97f133ca":"code","ef05f06c":"code","3c869584":"code","809ffbfe":"code","8afaaff1":"code","c4db3d63":"code","49abcacf":"code","ca8dbd3d":"code","d95982bf":"code","38480dd5":"code","8707c544":"code","f53cd8ec":"code","3999d760":"code","82030039":"code","d6fdbc84":"code","cab01a11":"code","246e3003":"code","c11a3328":"code","74fb6dbb":"code","cdb933c6":"code","2b29a259":"code","0b81bf6d":"code","bd0bf896":"code","e4903e7b":"code","a7c35daa":"code","c0b52db8":"code","4b29046c":"code","9856fef0":"code","a8a0fd5f":"code","c753ca39":"code","6c3fc79c":"code","03c5c3e4":"code","e8a1e0be":"code","3caed4be":"code","6cbc374d":"code","72033fd6":"markdown","93549491":"markdown","ea0cd2d9":"markdown","cb3e71eb":"markdown","14b1ff82":"markdown","fc290784":"markdown","6cb696cc":"markdown","b7ac462f":"markdown","23d1bc23":"markdown","efd9fe84":"markdown","ac161298":"markdown","4c670457":"markdown","c131d969":"markdown","abdd1f8c":"markdown","819d5f1d":"markdown","8d5c3e62":"markdown","05349aaf":"markdown","7ec79e48":"markdown","62073504":"markdown","4367c3da":"markdown","55a8779f":"markdown","ac594af2":"markdown","54b3bc60":"markdown","87ab0f5e":"markdown","e04a60e0":"markdown","f266e11c":"markdown","5b2e5061":"markdown","94a106b2":"markdown","0b8ffba8":"markdown","6cf05510":"markdown","30d010fa":"markdown","3225a9cb":"markdown","611ddcce":"markdown","7ac74c21":"markdown","b54092dd":"markdown","2922b7c8":"markdown","b73c1ef9":"markdown","19a6ae72":"markdown","81b30a32":"markdown","f30b1e1c":"markdown","e0db40a4":"markdown","c79ea06a":"markdown","b6a9a49b":"markdown"},"source":{"e6e6afc3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom scipy import stats\nfrom scipy.stats import norm, skew","7a416655":"df_train=pd.read_csv('..\/input\/big-mart-sales-prediction\/Train.csv')\ndf_test=pd.read_csv('..\/input\/big-mart-sales-prediction\/Test.csv')","90e5d26a":"df_train.head()","9331654d":"df_train.dtypes","9a795319":"df_train.isna().any()","f06eec2f":"plt.figure(figsize=(10,8))\nsns.heatmap(df_train.isna(),cmap='gnuplot')","fd5b5a3f":"df_train['Item_Weight'].describe()","685b2bbf":"plt.figure(figsize=(10,8))\nsns.distplot(df_train['Item_Weight'].dropna(),color='green')\nplt.title('Weight distribution of the items \\n Median weight: {0:.2f}'.format(df_train['Item_Weight'].dropna().median()),size=25)\nplt.axvline(df_train['Item_Weight'].dropna().median(),color='red',label='Median weight')\nplt.legend()","ea1ddd62":"fig1=plt.figure(figsize=(10,8))\nax1=fig1.add_subplot(121)\nsns.boxplot(df_train['Item_Weight'],ax=ax1,orient='v',color='indianred')\nax1.set_title('Boxplot of weights',size=15)\n\nax2=fig1.add_subplot(122)\nsns.violinplot(df_train['Item_Weight'],ax=ax2,orient='v',color='green')\nax2.set_title('Violinplot of weights',size=15)","43829da8":"df_train['Item_Fat_Content'].unique()","afad262e":"df_train['Item_Fat_Content']=df_train['Item_Fat_Content'].replace('low fat','Low Fat')\ndf_train['Item_Fat_Content']=df_train['Item_Fat_Content'].replace('LF','Low Fat')\ndf_train['Item_Fat_Content']=df_train['Item_Fat_Content'].replace('reg','Regular')\ndf_train['Item_Fat_Content'].unique()\n","f141666e":"df_train['Count']=1\ndf_fat=df_train.groupby('Item_Fat_Content')['Count'].sum().reset_index()\n\nfig2=px.pie(df_fat,values='Count',names='Item_Fat_Content',hole=0.4)\n\nfig2.update_layout(title='Fat content',title_x=0.48,\n                  annotations=[dict(text='Fat',font_size=15, showarrow=False,height=800,width=900)])\nfig2.update_traces(textfont_size=15,textinfo='percent+label')\nfig2.show()","9eb5929d":"df_train['Item_Visibility'].describe()","23f8d535":"plt.figure(figsize=(10,8))\nsns.distplot(df_train['Item_Visibility'])\nplt.title('Item visibility distribution \\n Median:{0:.2f}'.format(df_train['Item_Visibility'].median()),size=25)\nplt.axvline(df_train['Item_Visibility'].median(),color='black',label='Median')\nplt.legend()","98076ca1":"sns.set()\nfig3=plt.figure(figsize=(10,5))\nax1=fig3.add_subplot(121)\nsns.boxplot(df_train['Item_Visibility'],orient='v',ax=ax1,color='green')\nax2=fig3.add_subplot(122)\nstats.probplot(df_train['Item_Visibility'],plot=ax2)","a62a1ee3":"df_train[df_train['Item_Visibility']>0.2].shape[0]","e7dcc837":"df_train=df_train[df_train['Item_Visibility']<0.2]\nstats.probplot(df_train['Item_Visibility'],plot=plt)","7d66bc67":"plt.figure(figsize=(10,8))\nsns.distplot(df_train['Item_Visibility'],fit=norm,color='red')\nplt.title('Distribution deviation from normal distribution',size=25)\nplt.ylabel('Frequency',size=15)\nplt.xlabel('Item visbility',size=15)\nmu=df_train['Item_Visibility'].mean()\nsigma=df_train['Item_Visibility'].std()\nplt.legend(['Normal dist. ($\\mu=$ {0:.2f} and $\\sigma=$ {1:.2f} )'.format(mu, sigma)])","5fa9ad79":"\ndf_type=df_train.groupby('Item_Type')['Count'].sum().reset_index()\nfig4=px.sunburst(df_train,path=['Item_Type','Item_Fat_Content'],names='Item_Type',color_continuous_scale='RdBu')\nfig4.update_layout(title='Item types',title_x=0.2,title_y=0.8,\n                  annotations=[dict(showarrow=True,height=1000,width=900)],margin=dict(l=20, r=20, t=20, b=20))\nfig4.show()\n\nfig5=px.pie(df_type,values='Count',names='Item_Type')\nfig5.update_layout(title='Item distribution',title_x=0.1,title_y=0.8)\nfig5.update_traces(textfont_size=15,textinfo='percent')\nfig5.show()","3452e5cd":"plt.figure(figsize=(15,10))\nsns.distplot(df_train['Item_MRP'],color='orange')\nplt.title('Item MRP distribution \\n Median:{0:.2f} Rs'.format(df_train['Item_MRP'].median()),size=25)\nplt.axvline(df_train['Item_MRP'].median(),color='black',label='Median')\nplt.legend()","acaa0759":"labels=df_train['Item_Type'].unique()\nfig6=plt.figure(figsize=(10,10))\nax1=fig6.add_subplot(211)\nsns.boxplot(x='Item_Type',y='Item_MRP',data=df_train,ax=ax1)\nax1.set_xticklabels(labels, rotation=75,size=9)\n\nax2=fig6.add_subplot(212)\nsns.boxplot(x='Item_Fat_Content',y='Item_MRP',data=df_train,ax=ax2)\n\nfig6.tight_layout(pad=3) #For spacing between subplots","bc656ce3":"df_outlets=df_train.groupby('Outlet_Identifier')['Count'].sum().reset_index().sort_values(by='Count',ascending=False)","89be6755":"sns.catplot('Outlet_Identifier','Count',data=df_outlets,aspect=2,height=8,kind='bar',palette='gnuplot')\nplt.xticks(size=15)\nplt.ylabel('Number of items sold',size=15)\nplt.xlabel('Outlet number',size=20)\nplt.title('Outlet performance',size=25)\nplt.yticks(np.arange(0,1100,100))","74868684":"plt.figure(figsize=(10,8))\nsns.boxplot('Outlet_Establishment_Year','Item_MRP',data=df_train)","5ff9e3a2":"plt.figure(figsize=(10,8))\nsns.boxplot('Outlet_Establishment_Year','Item_Outlet_Sales',data=df_train)\nplt.title('Outlet sales',size=25)","ac5a37a0":"df_train['Outlet_Size'].isna().value_counts()","edb729db":"df_size=df_train.groupby('Outlet_Size')['Count'].sum().reset_index()\nfig7=px.pie(df_size,values='Count',names='Outlet_Size',hole=0.4)\nfig7.update_layout(title='Store sizes',title_x=0.5,annotations=[dict(text='Fat',font_size=15, showarrow=False,height=800,width=900)])\nfig7.update_traces(textfont_size=15,textinfo='percent+label')\nfig7.show()","7f014eca":"df_size_sales=df_train.groupby('Outlet_Size')[['Item_MRP','Item_Outlet_Sales']].mean().reset_index()","6e684fc7":"df_size_sales","d80a9603":"fig8=plt.figure(figsize=(15,10))\nax1=fig8.add_subplot(121)\nsns.barplot('Outlet_Size','Item_MRP',data=df_size_sales,ax=ax1)\n\nax2=fig8.add_subplot(122)\nsns.barplot('Outlet_Size','Item_Outlet_Sales',data=df_size_sales,ax=ax2,palette='rocket')\n\nax1.set_title('Average price of items sold',size=20)\nax2.set_title('Average sales of store',size=20)\n\n","f0a018ef":"df_train.head()","02328326":"fig9=px.sunburst(df_train,path=['Outlet_Type','Outlet_Location_Type'],color_continuous_scale='RdBu')\nfig9.update_layout(title='Store type with location type',title_x=0.5)\nfig9.show()","73ce299a":"plt.figure(figsize=(10,8))\nsns.boxplot(y='Item_Outlet_Sales',hue='Outlet_Type',x='Outlet_Location_Type',data=df_train,palette='terrain')","0ec4994a":"df_train.drop('Count',axis=1,inplace=True)","a81e7bd5":"corrs=df_train.dropna().corr()\nplt.figure(figsize=(10,8))\nsns.heatmap(corrs,annot=True,fmt='.2%')","43d3783b":"unn_cols=['Item_Weight','Outlet_Size','Item_Identifier','Outlet_Identifier']\n\nfor cols in unn_cols:\n    df_train.drop(cols,axis=1,inplace=True)","96c8f89d":"df_train['Item_Fat_Content'].replace('Low Fat',1,inplace=True)\ndf_train['Item_Fat_Content'].replace('Regular',0,inplace=True)","ef25afe2":"df_dummies_type=pd.get_dummies(df_train['Item_Type'])","18be6fb6":"df_train=df_train.merge(df_dummies_type,on=df_train.index)","01514fb6":"df_train.drop('key_0',axis=1,inplace=True)\ndf_train.drop('Item_Type',axis=1,inplace=True)\n","b259cfc6":"df_train['Outlet_Location_Type'].replace('Tier 1',1,inplace=True)\ndf_train['Outlet_Location_Type'].replace('Tier 2',2,inplace=True)\ndf_train['Outlet_Location_Type'].replace('Tier 3',3,inplace=True)","64072d7b":"df_dummies_outlet=pd.get_dummies(df_train['Outlet_Type'])\ndf_train=df_train.merge(df_dummies_outlet,on=df_train.index)","e39bc859":"df_train.drop('key_0',axis=1,inplace=True)\ndf_train.drop('Outlet_Type',axis=1,inplace=True)","4a5a4bbb":"targets=df_train['Item_Outlet_Sales']\ndf_train.drop('Item_Outlet_Sales',axis=1,inplace=True)\ndf_train.head()","c06f04c1":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error","62982e95":"X_train,X_test,y_train,y_test=train_test_split(df_train,targets,shuffle=True,test_size=0.2,random_state=0)","c3ec4ffd":"from sklearn.linear_model import LinearRegression","4c0fd5dd":"reg_lin=LinearRegression()\nreg_lin.fit(X_train,y_train)","b681753a":"reg_lin.score(X_train,y_train)","5a33d756":"y_preds_lin=reg_lin.predict(X_test)","bae622c7":"rmse_lin=np.sqrt(mean_squared_error(y_preds_lin,y_test))\nprint('RMSE for Linear Regression:{0:.2f}'.format(rmse_lin))","e159847f":"reg_lin_df=pd.DataFrame()\nreg_lin_df['Target']=y_test\nreg_lin_df['Predictions']=y_preds_lin\n\nsns.lmplot('Target','Predictions',data=reg_lin_df,height=6,aspect=2,line_kws={'color':'black'},scatter_kws={'alpha':0.4})\nplt.title('Linear Regression \\n RMSE: {0:.2f}'.format(rmse_lin),size=25)","88d95415":"from sklearn.linear_model import RidgeCV","af2a98b4":"reg_rid=RidgeCV(cv=10)\nreg_rid.fit(X_train,y_train)","bcb5ca0c":"reg_rid.score(X_train,y_train)","b8a73a9c":"y_preds_rid=reg_rid.predict(X_test)\nrmse_rid=np.sqrt(mean_squared_error(y_preds_rid,y_test))\nprint('RMSE for Ridge Regression:{0:.2f}'.format(rmse_rid))","3b8bf894":"reg_rid_df=pd.DataFrame()\nreg_rid_df['Target']=y_test\nreg_rid_df['Predictions']=y_preds_rid\n\nsns.lmplot('Target','Predictions',data=reg_rid_df,height=6,aspect=2,line_kws={'color':'orange'},scatter_kws={'alpha':0.4,'color':'green'})\nplt.title('Ridge Regression \\n RMSE: {0:.2f}'.format(rmse_rid),size=25)","7a1b4632":"from sklearn.linear_model import Lasso","127dd334":"reg_las=Lasso()\nreg_las.fit(X_train,y_train)","ed4371ef":"reg_las.score(X_train,y_train)","834d3c1b":"y_preds_las=reg_las.predict(X_test)\nrmse_las=np.sqrt(mean_squared_error(y_preds_las,y_test))\nprint('RMSE for Lasso Regression:{0:.2f}'.format(rmse_las))","4123f633":"reg_las_df=pd.DataFrame()\nreg_las_df['Target']=y_test\nreg_las_df['Predictions']=y_preds_las\n\nsns.lmplot('Target','Predictions',data=reg_las_df,height=6,aspect=2,line_kws={'color':'blue'},scatter_kws={'alpha':0.4,'color':'red'})\nplt.title('Lasso Regression \\n RMSE: {0:.2f}'.format(rmse_las),size=25)","5db5b1e9":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import GridSearchCV","97f133ca":"rfr=RandomForestRegressor(random_state=0)\nparam_grid={'n_estimators':[3,4,5,7,9,10,12], 'max_depth':[5,7,9,10,12]}\ngrid=GridSearchCV(rfr,param_grid,scoring='r2',cv=10)","ef05f06c":"grid_result=grid.fit(X_train,y_train)\ngrid_result.best_params_","3c869584":"grid_result.score(X_train,y_train)","809ffbfe":"y_preds_rfr=grid_result.predict(X_test)\nrmse_rfr=np.sqrt(mean_squared_error(y_preds_rfr,y_test))\nprint('RMSE for Random Forest Regression:{0:.2f}'.format(rmse_rfr))","8afaaff1":"rfr_df=pd.DataFrame()\nrfr_df['Target']=y_test\nrfr_df['Predictions']=y_preds_rfr\n\nsns.lmplot('Target','Predictions',data=rfr_df,height=6,aspect=2,line_kws={'color':'green'},scatter_kws={'alpha':0.4,'color':'blue'})\nplt.title('Random Forest Regression \\n RMSE: {0:.2f}'.format(rmse_rfr),size=25)","c4db3d63":"from sklearn.ensemble import GradientBoostingRegressor","49abcacf":"gbdt=GradientBoostingRegressor(random_state=0)\ngbdt.fit(X_train,y_train)\ngbdt.score(X_train,y_train)","ca8dbd3d":"y_preds_gbdt=gbdt.predict(X_test)\nrmse_gbdt=np.sqrt(mean_squared_error(y_preds_gbdt,y_test))\nprint('RMSE for Random Forest Regression:{0:.2f}'.format(rmse_gbdt))","d95982bf":"gbdt_df=pd.DataFrame()\ngbdt_df['Target']=y_test\ngbdt_df['Predictions']=y_preds_gbdt\n\nsns.lmplot('Target','Predictions',data=gbdt_df,height=6,aspect=2,line_kws={'color':'red'},scatter_kws={'alpha':0.4,'color':'black'})\nplt.title('GBDT Regression \\n RMSE: {0:.2f}'.format(rmse_gbdt),size=25)","38480dd5":"from sklearn.ensemble import AdaBoostRegressor","8707c544":"ada=AdaBoostRegressor(random_state=0)\nada.fit(X_train,y_train)","f53cd8ec":"y_preds_ada=ada.predict(X_test)\nrmse_ada=np.sqrt(mean_squared_error(y_preds_ada,y_test))\nprint('RMSE for AdaBoost Regression:{0:.2f}'.format(rmse_ada))","3999d760":"ada_df=pd.DataFrame()\nada_df['Target']=y_test\nada_df['Predictions']=y_preds_ada\n\nsns.lmplot('Target','Predictions',data=ada_df,height=6,aspect=2,line_kws={'color':'blue'},scatter_kws={'alpha':0.4,'color':'black'})\nplt.title('AdaBoost Regression \\n RMSE: {0:.2f}'.format(rmse_ada),size=25)","82030039":"import xgboost as xgb","d6fdbc84":"xgb_reg=xgb.XGBRegressor(colsample_bytree=0.4603, gamma=0.0468, \n                             learning_rate=0.05, max_depth=3, \n                             min_child_weight=1.7817, n_estimators=2200,\n                             reg_alpha=0.4640, reg_lambda=0.8571,\n                             subsample=0.5213, silent=1,\n                             random_state =7, nthread = -1)","cab01a11":"xgb_reg.fit(X_train,y_train)\nxgb_reg.score(X_train,y_train)","246e3003":"y_preds_xgb=xgb_reg.predict(X_test)\nrmse_xgb=np.sqrt(mean_squared_error(y_preds_xgb,y_test))\nprint('RMSE for XGBoost Regression:{0:.2f}'.format(rmse_xgb))","c11a3328":"ada_df=pd.DataFrame()\nada_df['Target']=y_test\nada_df['Predictions']=y_preds_xgb\n\nsns.lmplot('Target','Predictions',data=ada_df,height=6,aspect=2,line_kws={'color':'green'},scatter_kws={'alpha':0.4,'color':'black'})\nplt.title('XGBoost Regression \\n RMSE: {0:.2f}'.format(rmse_xgb),size=25)","74fb6dbb":"from lightgbm import LGBMRegressor","cdb933c6":"lgb=LGBMRegressor(random_state=0)\nlgb.fit(X_train,y_train)\nlgb.score(X_train,y_train)","2b29a259":"y_preds_lgb=lgb.predict(X_test)\nrmse_lgb=np.sqrt(mean_squared_error(y_preds_lgb,y_test))\nprint('RMSE for LGBM Regression:{0:.2f}'.format(rmse_lgb))","0b81bf6d":"lgb_df=pd.DataFrame()\nlgb_df['Target']=y_test\nlgb_df['Predictions']=y_preds_lgb\n\nsns.lmplot('Target','Predictions',data=ada_df,height=6,aspect=2,line_kws={'color':'green'},scatter_kws={'alpha':0.4,'color':'red'})\nplt.title('LGBM Regression \\n RMSE: {0:.2f}'.format(rmse_lgb),size=25)","bd0bf896":"df_identifiers=pd.DataFrame(df_test['Item_Identifier'])\ndf_identifiers['Outlet_Identifier']=df_test['Outlet_Identifier']","e4903e7b":"\nunn_cols=['Item_Weight','Outlet_Size','Item_Identifier','Outlet_Identifier']\n\nfor cols in unn_cols:\n    df_test.drop(cols,axis=1,inplace=True)","a7c35daa":"df_test.head()","c0b52db8":"df_train.head()","4b29046c":"df_test['Item_Fat_Content']=df_test['Item_Fat_Content'].replace('low fat','Low Fat')\ndf_test['Item_Fat_Content']=df_test['Item_Fat_Content'].replace('LF','Low Fat')\ndf_test['Item_Fat_Content']=df_test['Item_Fat_Content'].replace('reg','Regular')\n\n","9856fef0":"df_test['Item_Fat_Content'].replace('Low Fat',1,inplace=True)\ndf_test['Item_Fat_Content'].replace('Regular',0,inplace=True)","a8a0fd5f":"df_dummies_type=pd.get_dummies(df_test['Item_Type'])\ndf_test=df_test.merge(df_dummies_type,on=df_test.index)\n","c753ca39":"df_test.drop('key_0',axis=1,inplace=True)\ndf_test.drop('Item_Type',axis=1,inplace=True)                   \n                    ","6c3fc79c":"df_test['Outlet_Location_Type'].replace('Tier 1',1,inplace=True)\ndf_test['Outlet_Location_Type'].replace('Tier 2',2,inplace=True)\ndf_test['Outlet_Location_Type'].replace('Tier 3',3,inplace=True)","03c5c3e4":"df_dummies_outlet=pd.get_dummies(df_test['Outlet_Type'])\ndf_test=df_test.merge(df_dummies_outlet,on=df_test.index)","e8a1e0be":"df_test.drop('key_0',axis=1,inplace=True)\ndf_test.drop('Outlet_Type',axis=1,inplace=True)","3caed4be":"y_preds_rfr=grid_result.predict(df_test)\ndf_rfr_submission=df_identifiers\ndf_rfr_submission['Item_Outlet_Sales']=y_preds_rfr\ndf_rfr_submission.head()","6cbc374d":"df_rfr_submission.to_csv('RFR_submission.csv',index=False)","72033fd6":"We see that about 64.7 % items are of low fat. This assumes that majority of customers are health conscious and prefer food with lower fat rating.\n\n## Item_Visibility\n\nLet us see how the item visibility of our products is distributed.","93549491":"This is as close to a normal distribution I could get for our model.\n\n## c) Item_Type\n\nLet us check how the item types are distributed through a pie plot.","ea0cd2d9":"From the above, we have realised that all the regression techniques with and without regularisations have yielded similar results.\n\n\n## Ensemble methods\n\n### Random Forest regression\n\nLet us apply Random Forest regression using a hyperparameter tuning method called GridSearchCV where we shall change n_estimators and max_depth. We also apply a cross validation of 10.","cb3e71eb":"From the above plot, we see that fruits and vegetables were the highest sold item followed closely by Snack foods.\n\n\n## d) Item_MRP\n\nMRP is the max retail prices of the products. Let us check how the values are distributed in total.","14b1ff82":"As we see from the curve, the item visibility has a right skew. Hence, a median would give us better indication than a mean value. Let us check for outliers if any.","fc290784":"Hence, out of the approximately 8300 entries, we have only 134 entries which are outliers. It would serve us well to simply remove these entries.","6cb696cc":"XGboost could not perform as well as Random Forest or GBDT.\n\n### LightGBM","b7ac462f":"# 2. Data Visualisation and Cleaning\n\nIn this section, we will try to check the cleanliness of the data to understand how easily we can feed it to our ML algorithms\n\nWe shall also check the various descriptions of the columns to understand what they actually mean.\n\n![Screenshot%202020-08-24%20at%209.26.50%20PM.png](attachment:Screenshot%202020-08-24%20at%209.26.50%20PM.png)","23d1bc23":"### Linear Regression","efd9fe84":"As we can see from the above violin and distplot, the curve platueus over a large range of weights. Hence, it is simply not possible for us to assume a weight for the null values. We shall leave them as it is or drop them if it is later deemed to not be too important in our analysis.\n\n## b) Item_Fat_Content\n\nLet us check the fat content column.","ac161298":"As we can see, we don't have any clear distribution of the prices here. The distribution is multi modal in nature with mulitple peaks.\n\nThe graph basically: \n* we have fair number of products whose prices range from 25-75 Rs.\n* we have fair number of products in the 80-120 Rs range. Infact, it is the highest.\n* the products increase again from 150-200 Rs range.\n* There are fair number of products from 220-240 Rs range aswell.\n\n\nLet us try to check the boxplots of how MRPs change with item products.","4c670457":"Seems like we have solved the issue. Let us now visualise the number of items of each fat content.","c131d969":"### Outlet_Location_Type\n\nLet us encode the Tiers 1,2,3 as simple numericals 1,2 and 3.","abdd1f8c":"Both Random Forest and Gradient boosted decision tree have performed quite similar when compared on basis of RMSE.\n\n### AdaBoostRegressor\n","819d5f1d":"As we can see, maximum stores fall into the medium category followed by small. Only 15% stores are high sized stores.","8d5c3e62":"From the above RMSE, it is observed that Random Forest regression technique has done better than Linear regression techniques.\n\n### Gradient Boosted Decision Tree Regressor","05349aaf":"The average price of items sold in each outlet store size is nearly the same which is Rs 140. However, The medium stores seem to sell better followed by high sized and then small sized stores.\n\n## h) Outlet_Location_Type and Outlet_Type\n\nLet us try to analyse if the outlet location type and outlet_type has any correlation with MRP of items sold and outlet sales.","7ec79e48":"## g) Outlet_Size\n\nThis feature deals with how big is the size of the outlet store. This field also contains empty values. Let us see if we can deal with these null values in any manner or simply discard it.","62073504":"As we can see, AdaBoosted regression performed worse than all other models we have used so far.\n\n### XGBoost regressor","4367c3da":"As we can see, both linear and ridge regression have performed quite similarly with nearly identical RMSE scores.\n\n### Lasso Regression\n\nThis is another regression technique that utlises the L1 regularisation. Let us see how it performs.","55a8779f":"### Outlet_Type\n\nWe will use one-hot-encoding once more here.","ac594af2":"From the above, we see that only two columns have null values associated with them which are Item_Weight and Outlet_Size. Let us visualise it with a heatmap.","54b3bc60":"### Item_Type\n\nHere, we have multiple number of item types and it'll be quite difficult for us to label the items individually. Instead, what we could do is we can use one-hot-encoding.","87ab0f5e":"About 2348 instances have null values which is quite a sizeable amount.","e04a60e0":"The yellow marks show presence of null values. We have quite a few null values in these two columns that will need to be sorted out. We shall look into that a little later.\n\nLet us first visualise the various data starting from Item_Weight.\n\n## a) Item Weight","f266e11c":"### Item_Outlet_Sales\n\nThis is the target section for us which we will try to predict. Hence, we shall separate it out from the rest of the dataframe.","5b2e5061":"As we can see, most of the outlets have performed similarly with approximately 950 items sold. Outlet 10 and 19 are however lagging behind in sales.\n\n## f) Outlet_Establishment_Year\n\nLet us see if establishment year of the stores have any correlation with mean prices of items sold.","94a106b2":"As we can see, majoirty of the stores are of type 1 supermarket distributed over various location tiers.\n\nSupermarket type 2 and 3 are confined to only tier 3 locations. Very small section of the stores are actually grocery stores.\n\nLet us check how do these stores sell based on location tier using a boxplot.","0b8ffba8":"As we can see, no matter how old the shops are, the median prices of items sold is nearly the same. Hence, customers have no bias to buy more expensive products from older or newer markets.\n\n\nLet us now check if the establishment year has anything to do with number of output sales.","6cf05510":"As we know, all ML models only understand input data in the form of numbers. Hence, we will be required to convert the values into numbers through the process of label encoding or one hot encoding technique. This is something we will deal with in the later stage of our analysis.\n\nLet us check the number of null values we have at the moment.","30d010fa":"From the above plot, we see which item types have high MRPs. Dairy product and Starchy foods have a higher median price than the rest.\n\nBoth low and regular food have almost identical median price.\n\n\n## e) Outlet_Identifier\n\nLet us see which outlets are selling well.","3225a9cb":"Upon eyeballing into the data, we see that we have various datatypes for each feature here. We will try to check each of them out one by one to understand how we should treat the bad values. First of all, let us check the various datatypes.","611ddcce":"As we can see, the linear regression couldn't do a great job. The values are too scattered away from the black line which is the ideal region of the scatters. The RMSE is quite high too. Hence, it will definitely be a good option to check for regression techniques utilising a regularisation parameter such as Lasso and Ridge regression.\n\n### Ridge Regression\n\nWe shall apply Ridge regression using a cross validation technique to prevent overfitting. We shall perform a 10 fold cross validation.","7ac74c21":"From the above, we can see that correlation of Item_Weight is extremely low. Hence, we can simply drop this column and get done with the issues of null values. We shall similarly remove the order_size as there is no way to deal with the null values here aswell. We would also get rid of the item_identifier and outlet_indetifier since it is of no consequence to us.","b54092dd":"As it can be seen, the sales reported by the older stores is higher than the relatively newer stores (except for the 1998 established store)","2922b7c8":"As we can see, tier 3 locations seem to be selling better than both tier 2 and tier 1. It is also to be noted that tier 3 has more number of stores in it. Hence, the sales are better too.\n\n\n## i) Correlation heatmap\n\nNow that we have inspected each of the features individually, we will try to check the correlations of each term with the other.","b73c1ef9":"## B) Testing Phase\n\nNow that we have trained a few models, it is time for us to apply them to the test dataframe. For this, we need to align the dataframe exactly as the train dataframe. \n\nFirst, let us separate out the item and outlet identifiers as they are important to our final submission.\n\nWe will use the top 3 regressors for our solution submission which are **LGBM regressor, Random Forest regressor and GBDT regressor.**","19a6ae72":"We see bit of an issue in this column. Technically, we have only two unique values which are either low fat or regular. However, since the data entry has been done in separate ways, it is showing up as 5 unique values. Let us take care of it right now.","81b30a32":"# 1. Importing relevant libraries and datasets\n\nLet us start off with the usual work of importing all the required datasets and the libraries which will help us visualise the data and work on it.","f30b1e1c":"# 4. Data Wrangling\n\nLet us wrangle the data so that we can help make the dataframe into something that the ML algo can understand.\n\nThe main issue with the data given to us is the presence of categorical data. Let us handle these categorical data by using either label or one-hot encoding.\n\n### Item_Fat_Content\n\nLet us label the fat contents as \n\n* Low Fat: 1\n* Regular: 0","e0db40a4":"As we can see, the above dataframe is now completely numerical in nature and can be used for ML algorithm.\n\n# 5. Machine Learning\n\n## A) Training phase","c79ea06a":"Now, we see that the values above 0 are following a normal distribution to some extent. Let us check the deviation once more.","b6a9a49b":"As we can see, values above 0.2 visibility are outliers. Presence of outliers don't bode well with machine learning algos. Hence, we need to remove the outliers and try to form a normal distribution.\n\nThe probplot also seems to suggest that the values are deviating from the normal values after 0.2\n\nLet us check the number entries with item visibility above 0.2 as outliers."}}