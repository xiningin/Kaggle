{"cell_type":{"6a50a627":"code","9657099d":"code","5a08c7b6":"code","0d2552ca":"code","0252a05c":"code","ae55be43":"code","51d8c99c":"code","978d6ec2":"code","fa9d1e3f":"code","869c4eb0":"code","efcd8174":"code","669bf40c":"code","2a709d02":"code","2b2d427e":"code","2a5075f4":"code","eb9967a2":"code","1f702f37":"code","8ebc3ec7":"code","49694a71":"code","9b752eac":"code","0136693d":"markdown","e0efc175":"markdown","5ce29ad6":"markdown","91c697b4":"markdown","50d5aaeb":"markdown","57b99f9f":"markdown","7f62c05b":"markdown","778b71f1":"markdown","0b786fe8":"markdown","8fc83092":"markdown","aead4678":"markdown","6bab6382":"markdown"},"source":{"6a50a627":"# supress warnings\nimport warnings\nwarnings.filterwarnings('ignore')","9657099d":"#importing libraries\nimport numpy as np\nimport pandas as pd\n\n# Data Visualizatiom\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","5a08c7b6":"elec_cons = pd.read_csv(\"..\/input\/total-electricity-consumption-us.csv\",  sep = ',', header= 0 )\nelec_cons.head()","0d2552ca":"#checking duplicates\nsum(elec_cons.duplicated(subset = 'Year')) == 0\n# No duplicate values","0252a05c":"elec_cons.shape","ae55be43":"# number of observations: 51","51d8c99c":"elec_cons.info()","978d6ec2":"elec_cons.describe()","fa9d1e3f":"# Checking Null values\nelec_cons.isnull().sum()*100\/elec_cons.shape[0]\n# There are no NULL values in the dataset, hence it is clean.","869c4eb0":"# Data is clean and we are good to go.","efcd8174":"sns.scatterplot(x = 'Year', y = 'Consumption', data = elec_cons)","669bf40c":"# As we can see from the scatterplot there is a non linear relationship between the two variables.","2a709d02":"# Let's find out which model suit best to this Data.","2b2d427e":"# Importing Libraries\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.pipeline import Pipeline\nfrom sklearn import metrics","2a5075f4":"# We will manually choose the test-train by picking the data uniformly.","eb9967a2":"size = len(elec_cons.index)\nindex = range(0, size, 5)\n\ntrain = elec_cons[~elec_cons.index.isin(index)]\ntest = elec_cons[elec_cons.index.isin(index)]\n","1f702f37":"print(len(train))\nprint(len(test))","8ebc3ec7":"# converting X to a two dimensional array, as required by the learning algorithm\nX_train = train.Year.values.reshape(-1,1) #Making X two dimensional\ny_train = train.Consumption\n\nX_test = test.Year.values.reshape(-1,1) #Making X two dimensional\ny_test = test.Consumption","49694a71":"# Pipeline helps you associate two models or objects to be built sequentially with each other, \n# in this case, the objects are PolynomialFeatures() and LinearRegression()\n\nr2_train = []\nr2_test = []\ndegrees = [1, 2, 3]\n\nfor degree in degrees:\n    pipeline = Pipeline([('poly_features', PolynomialFeatures(degree=degree)),\n                     ('model', LinearRegression())])\n    pipeline.fit(X_train, y_train)\n    y_pred = pipeline.predict(X_test)\n    r2_test.append(metrics.r2_score(y_test, y_pred))\n    \n    # training performance\n    y_pred_train = pipeline.predict(X_train)\n    r2_train.append(metrics.r2_score(y_train, y_pred_train))\n    \n# plot predictions and actual values against year\n    fig, ax = plt.subplots()\n    ax.set_xlabel(\"Year\")                                \n    ax.set_ylabel(\"Power consumption\")\n    ax.set_title(\"Degree= \" + str(degree))\n    \n    # train data in blue\n    ax.scatter(X_train, y_train)\n    ax.plot(X_train, y_pred_train)\n    \n    # test data\n    ax.scatter(X_train, y_train)\n    ax.plot(X_test, y_pred)\n    \n    plt.show()","9b752eac":"# respective test r-squared scores of predictions\nprint(degrees)\nprint(r2_train)\nprint(r2_test)","0136693d":"#### Data Preparation","e0efc175":"## US Yearly Electricity Comsumption","5ce29ad6":"### Model Building","91c697b4":"### Data Cleaning","50d5aaeb":"__Doing a polynomial regression: Comparing linear, quadratic and cubic fits__","57b99f9f":"We can see from the above plot that Polynomial with degree 3 fits the best on the data.<br>\nAlso, from R2 score on train and test data we can say that we have not overfitted the model.","7f62c05b":"### Reading and Understanding Data","778b71f1":"### Data Inspection","0b786fe8":"## Conclusions","8fc83092":"### EDA","aead4678":"### Problem Statement\nBuild a generalised regression model on the **electricity consumption** dataset.\n### Data\nThe dataset contains two variables - year and electricity consumption.","6bab6382":"# Generalised Regression"}}