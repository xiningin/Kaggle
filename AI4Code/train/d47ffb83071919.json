{"cell_type":{"325fec99":"code","181e19c3":"code","6261da20":"code","f5ec25db":"code","06464c34":"code","c3877620":"code","9f8fa146":"code","68a25c89":"code","a262c0f1":"code","341b8f1f":"code","e2204e4b":"code","34c023a3":"code","231068ae":"code","4a725d5f":"code","005cd025":"code","910c0409":"code","73786f7b":"code","014d45a5":"code","4b20b094":"code","b03159a8":"markdown","2a4cc563":"markdown","871d5956":"markdown","935687f7":"markdown","cbbf5ea1":"markdown","bb7788f7":"markdown","6d5a1333":"markdown","659bf1f8":"markdown"},"source":{"325fec99":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pathlib\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nimport gc\nprint(os.listdir(\"..\/input\"))\n\nfrom sklearn.metrics import confusion_matrix\nfrom fastai import *\nfrom fastai.vision import *\n\n# Any results you write to the current directory are saved as output.","181e19c3":"DATA_DIR='..\/input\/find-a-car-park\/data\/data'","6261da20":"os.listdir(f'{DATA_DIR}')","f5ec25db":"torch.cuda.is_available()","06464c34":"data = ImageDataBunch.from_folder(DATA_DIR, train=\".\", \n                                  valid_pct=0.2,\n                                  ds_tfms=get_transforms(flip_vert=True, max_warp=0),\n                                  size=224,bs=64, \n                                  num_workers=0).normalize(imagenet_stats)","c3877620":"print(f'Classes: \\n {data.classes}')","9f8fa146":"data.show_batch(rows=3, figsize=(7,6))","68a25c89":"learn = create_cnn(data, models.resnet34, metrics=accuracy, model_dir=\"\/tmp\/model\/\")","a262c0f1":"learn.lr_find()\nlearn.recorder.plot()","341b8f1f":"learn.fit_one_cycle(6,1e-2)","e2204e4b":"learn.save('stage-1')","34c023a3":"learn.unfreeze()","231068ae":"learn.lr_find()\nlearn.recorder.plot()","4a725d5f":"learn.fit_one_cycle(4, max_lr=slice(1e-6,1e-4 ))","005cd025":"learn.save('stage-2')","910c0409":"learn.recorder.plot_losses()","73786f7b":"interp = ClassificationInterpretation.from_learner(learn)","014d45a5":"interp.plot_top_losses(9, figsize=(15,11))","4b20b094":"interp.plot_confusion_matrix(figsize=(8,8), dpi=60)","b03159a8":"# Model Build","2a4cc563":"# Make Data","871d5956":"# Train2","935687f7":"## Please upvote if you like it ;)","cbbf5ea1":"# Import Modules","bb7788f7":"# Check Result","6d5a1333":"# Train1","659bf1f8":"## Please upvote if you like it ;)"}}