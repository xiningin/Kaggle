{"cell_type":{"f9ac552d":"code","005f9b19":"code","0e8e8ee5":"code","ca44075c":"code","84a80455":"code","3b6172cb":"markdown","a10145a1":"markdown","6a21d6fe":"markdown","8f7aeda5":"markdown"},"source":{"f9ac552d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np # linear algebra\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport squarify\n%matplotlib inline\nfrom matplotlib import cm\nsns.set_style('ticks')\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\nimport warnings\nfrom wordcloud import WordCloud\nimport os\nprint(os.listdir(\"..\/input\/drc-conflicts-19972020\/\"))\ndf = pd.read_csv('..\/input\/drc-conflicts-19972020\/conflict_data_cod.csv',encoding=\"latin1\",low_memory=False)\n# Any results you write to the current directory are saved as output.","005f9b19":"1.1 Reduce the dataset","0e8e8ee5":"# Lowercase all the columns name\ndf.rename(str.lower, axis = 'columns', inplace = True)\n# I will reduce the dataset to the columns I will used the most\ndf = df[['actor1', 'actor2','location', 'event_date', 'event_type', 'fatalities','latitude',\n       'longitude', 'notes', 'source', 'year']]\ndf.head()\n# checking for null Values in percent\nround((df.isnull().sum()\/df.shape[0])*100,2)","ca44075c":"#change a long country name to an alias\ndf.loc[df['location'] == 'Democratic Republic of Congo','location'] = 'DR congo'\ndf.location.value_counts().head()\ndata_1 = df.location.value_counts().sort_values(ascending=False).head(10)\nx=data_1.index\ny= data_1.values\n\ntrace1 = go.Bar(\n    x=x,\n    y=y,\n    text = y,\n    textposition = 'auto',\n    textfont = {'size':12,'color':'black'},\n    marker=dict(\n    color='SlateGray'),\n    opacity=0.8,\n    orientation ='v',\n)\n\ndata = [trace1]\n\nlayout = go.Layout (\n    yaxis = dict (\n    title = 'Numbers of Conflitc'),\n    \n    xaxis = dict (\n    title = 'Region'),\n    \n    title = 'Top 10 Regions with Highest Conflicts'\n)\nfig = go.Figure (data=data, layout = layout)\npy.iplot(fig)","84a80455":"data_2 = df.groupby('location')['fatalities'].sum().sort_values(ascending=False).head(10)\nx=data_2.index\ny= data_2.values\n\ntrace1 = go.Bar(\n    x=x,\n    y=y,\n    text = y,\n    textposition = 'auto',\n    textfont = {'size':12,'color':'white'},\n    marker=dict(\n    color='darkred'),\n    opacity=0.8,\n    orientation ='v',\n)\n\ndata = [trace1]\n\nlayout = go.Layout (\n    \n    xaxis = dict (\n    title = 'Regions Name'),\n    \n    title = 'Regions with Highest Fatalities'\n)\nfig = go.Figure (data=data, layout = layout)\npy.iplot(fig)","3b6172cb":"1. Import Libraries","a10145a1":"## 2. Regions with the Highest number of Conflicts","6a21d6fe":"## 3. Regions with the highest Number of Fatalities","8f7aeda5":"1.\tImport Libraries\n2.\tRegions with Highest Number of Conflicts"}}