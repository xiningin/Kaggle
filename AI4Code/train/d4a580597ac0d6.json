{"cell_type":{"16cf6994":"code","b504684d":"code","8790afe4":"code","a12ab4a5":"code","8c16477a":"code","2dfd458b":"code","6c9442e7":"code","dbcb7d12":"code","f3421793":"code","761d9182":"code","ee6cf8c5":"code","b196304c":"code","ae7a8eb9":"code","9c577e74":"code","e43c7d35":"code","fdf8a070":"code","1b584c66":"code","d2012fb5":"code","5ef3c846":"code","9d7d11fd":"code","ed153c90":"code","8bba5fc5":"code","f2cb527e":"code","7ffb8342":"code","bc5b5cdb":"code","57242b77":"code","4bc6c014":"code","63431105":"code","e1f09203":"code","9395e4c1":"code","260a6812":"code","31fcd279":"code","1deb90c1":"code","e538f339":"code","059fa51b":"code","e2c3d6fb":"code","948793dc":"code","2fcc566c":"code","2d7074b2":"code","aa60ba5f":"code","bce3a05c":"code","823c4d46":"code","c7f16b90":"code","08c24c55":"markdown","e4bfae53":"markdown","1678f109":"markdown","46721067":"markdown","91597e25":"markdown","1d6378f4":"markdown","8695d409":"markdown","ba2d0961":"markdown","9bc89857":"markdown","1fc7c398":"markdown","c6077659":"markdown","87a871a8":"markdown","a0b29ab4":"markdown","4bc9ef9b":"markdown"},"source":{"16cf6994":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b504684d":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import RandomizedSearchCV\nimport xgboost as xgb\nimport lightgbm as lgb","8790afe4":"df = pd.read_csv(\"..\/input\/graduate-admissions\/Admission_Predict.csv\")\ntest = pd.read_csv(\"..\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv\")\ndf.head()","a12ab4a5":"df.shape","8c16477a":"df.info()","2dfd458b":"#Dropping the irrelevant columns\ndf = df.drop(['Serial No.'],axis = 1)\ndf.head()","6c9442e7":"#Lets see the correlations of variables\nsns.set(style=\"white\")\ncorr = df.corr()\nf , ax = plt.subplots(figsize=(11,9))\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\ncolormap = sns.diverging_palette(220,20,as_cmap=True)\nsns.heatmap(corr, cmap=colormap, linewidths=.5, annot=True, fmt=\".2f\", mask=mask)\nplt.show()","dbcb7d12":"#visualising distributions of variables\nfig = sns.distplot(df['GRE Score'])\nplt.title(\"Distribution of GRE Scores\")\nplt.show()","f3421793":"#Distribution of TOEFL score\nfig = sns.distplot(df['TOEFL Score'])\nplt.title(\"Distribution of TOEFL Scores \")\nplt.show()\n\n#Distribution of University Ranking\nfig = sns.distplot(df['University Rating'])\nplt.title(\"Distribution of University Rankings\")\nplt.show()\n\n#Distribution of SOP \nfig = sns.distplot(df['SOP'])\nplt.title(\"Distribution of SOP \")\nplt.show()\n\n#Distribution of CGPA\nfig = sns.distplot(df['CGPA'])\nplt.title(\"Distribution of CGPA\")\nplt.show()\n\n#Distribution of Research\nfig = sns.distplot(df['Research'])\nplt.title(\"Distribution of Research\")\nplt.show()\n","761d9182":"sns.regplot(x='GRE Score',y='TOEFL Score',data = df)\nplt.title(\"GRE vs TOEFL Scores\")\nplt.show()","ee6cf8c5":"sns.regplot(x='CGPA',y = 'GRE Score',data = df)\nplt.title(\"CGPA vs GRE Score\")\nplt.show()\n\nsns.regplot(x='CGPA',y='TOEFL Score',data = df)\nplt.title(\"CGPA vs TOEFL Score\")\nplt.show()","b196304c":"sns.catplot(x='University Rating',y = 'GRE Score',data = df,kind=\"boxen\")\nplt.title(\"University Rating vs GRE Scores\")\nplt.show()","ae7a8eb9":"sns.catplot(x=\"University Rating\",y=\"TOEFL Score\",data = df)\nplt.title(\"University Rating vs TOEFL Score\")\nplt.show()","9c577e74":"x = df.iloc[:,:-1].values","e43c7d35":"y = df.iloc[:,-1].values","fdf8a070":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.20,random_state=0,shuffle=False)","1b584c66":"clf1 = xgb.XGBRFRegressor()","d2012fb5":"n_estimators = [100,150,200,500,900,1000]\nbooster = ['gblinear','gbtree']\nmax_depth = [4,5,6,8,9]\nlearning_rate = [0.001,0.005,0.01,0.2,0.3]\nbase_score = [0.20,0.25,0.50,0.75,1.0]","5ef3c846":"hyperparameter_grid = {\n    'n_estimators':n_estimators,\n    'booster':booster,\n    'max_depth':max_depth,\n    'learning_rate':learning_rate,\n    'base_score':base_score\n}\n\nxgb_clf = RandomizedSearchCV(estimator=clf1,\n                            param_distributions=hyperparameter_grid,\n                            cv = 5,\n                             n_iter = 25,\n                            random_state=0,\n                            n_jobs = -1,\n                            scoring = 'neg_mean_absolute_error',\n                             return_train_score=True\n                             \n                            )\n","9d7d11fd":" xgb_clf.fit(x_train,y_train)","ed153c90":"xgb_clf.best_estimator_","8bba5fc5":"regressor_1 = xgb.XGBRFRegressor(base_score=0.25, booster='gblinear', colsample_bylevel=None,\n               colsample_bytree=None, gamma=None, gpu_id=-1,\n               importance_type='gain', interaction_constraints=None,\n               learning_rate=0.3, max_delta_step=None, max_depth=6,\n               min_child_weight=None, missing=None, monotone_constraints=None,\n               n_estimators=900, n_jobs=0, num_parallel_tree=None,\n               objective='reg:squarederror', random_state=0, reg_alpha=0,\n               scale_pos_weight=1, tree_method=None, validate_parameters=1,\n               verbosity=None)","f2cb527e":"regressor_1.fit(x_train,y_train)","7ffb8342":"y_pred = regressor_1.predict(x_test)\ny_pred_r = np.round(y_pred,2)\ny_pred_r","bc5b5cdb":"from sklearn.metrics import mean_squared_error\nprint(\"Error: \",np.sqrt(mean_squared_error(y_test,y_pred_r)))","57242b77":"clf_2 = lgb.LGBMRegressor()","4bc6c014":"num_leaves = [50,100,150,200,250,300,500]\nmin_child_weight = [0.01,0.02,0.05,0.09,0.10,0.15,0.20,0.3,0.5]\nfeature_fraction = [0.10,0.15,0.20,0.25,0.30,0.40]\nboosting_type = ['gbdt'],\nlearning_rate = [0.01,0.05,0.09,0.10,0.15]\nn_estimators = [100,200,300,350,450,500,700]\nparameters = {\n    'n_estimators':n_estimators,\n    'min_child_weight': min_child_weight,\n    'feature_fraction':feature_fraction,\n    'learning_rate': learning_rate,\n    'num_leaves':num_leaves\n}","63431105":"clf_lgb = RandomizedSearchCV(estimator=clf_2,\n                            param_distributions=parameters,\n                             random_state=0,\n                            cv = 5,\n                            n_iter = 25,\n                            n_jobs = -1,\n                            scoring='neg_mean_absolute_error')","e1f09203":"clf_lgb.fit(x_train,y_train)","9395e4c1":"clf_lgb.best_estimator_","260a6812":"regressor_2 = lgb.LGBMRegressor(feature_fraction=0.15, learning_rate=0.05, min_child_weight=0.15,\n              num_leaves=500)","31fcd279":"regressor_2.fit(x_train,y_train)","1deb90c1":"y_pred2 = regressor_2.predict(x_test)\ny_pred2_r = np.round(y_pred2,2)\ny_pred2_r","e538f339":"y_test","059fa51b":"print(\"Error: \",np.sqrt(mean_squared_error(y_test,y_pred2_r)))","e2c3d6fb":"Imp_Factors = pd.DataFrame()\nfactors = df.columns[:-1]\nImp_Factors['Factors'] = factors\nImp_Factors['Importance'] = regressor_2.feature_importances_\nImp_Factors = Imp_Factors.sort_values(by=['Importance'],ascending=True)","948793dc":"plt.figure(figsize=(11,9))\nsns.barplot(x='Importance',y='Factors',data = Imp_Factors)\nplt.show()","2fcc566c":"test.head()","2d7074b2":"test.shape","aa60ba5f":"test.info()","bce3a05c":"X = test.iloc[:,1:-1]\ny = test.iloc[:,-1]","823c4d46":"y_pred_test = regressor_2.predict(X)","c7f16b90":"print(\"Error: \",np.sqrt(mean_squared_error(y,y_pred_test)))","08c24c55":"**XGBOOST**","e4bfae53":"Hence Finding relation between CGPA, TOEFL,GRE and University Ranking","1678f109":"By Above plot we conclude that students which belong to University with Rating 4,5 score more in GRE test.Also Students from University with Rating 2,3 score in average region.","46721067":"Importing Libraries","91597e25":"By Above Distributions it can be known that students with different number of ,CGPA,GRE ,TOEFL scores apply for admission. Also Students belonging to tier 2 University tend to apply more for Admission.","1d6378f4":"**Algorithm Selection**","8695d409":"By Above plot we conclude that students which belong to University with Rating 4,5 score more in TOEFL","ba2d0961":"Hence we are getting better accuracy with LightGBM","9bc89857":"Hence we conclude that CGPA is the most important factor or determining the Admission into Graduate Schools ","1fc7c398":"### **Testing Dataset**","c6077659":"By Above Plot we conclude that people with more GRE Scores are more likely to have high TOEFL Scores.","87a871a8":"People with High CGPA are more likely to have High GRE and TOEFL Scores ","a0b29ab4":"Hence we can see a common trend here that a person with good CGPA  and from Universities whose rank are 4 or 5 are more likely to score high score in GRE and TOEFL.","4bc9ef9b":"LIGHTGBM"}}