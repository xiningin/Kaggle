{"cell_type":{"9e2a2ef3":"code","00623e58":"code","74fef268":"code","c6675226":"code","423763c8":"code","9a451de7":"code","9053ae6a":"code","46a13196":"code","42a63398":"code","92d4673c":"code","b7800e5f":"code","ec579d56":"code","4169ab05":"code","ed919993":"code","790108fb":"code","00f9e3e3":"code","85d33af0":"code","6eede571":"code","43044f81":"code","dc88bf97":"code","4312a19c":"code","2b565dd3":"code","6452af88":"code","a4326c65":"code","74df9084":"code","0ca11305":"code","ba18104f":"code","aefe2fda":"code","e4b41636":"code","1bcd5fc9":"code","88e48041":"code","1d0bbb13":"code","fcbe3daf":"code","eef250a1":"code","487e2841":"code","b258eccf":"markdown","123e7439":"markdown","80b78251":"markdown","7200668c":"markdown","a0f400e1":"markdown","bb5f87de":"markdown","11ef4a6c":"markdown","ae02b33c":"markdown","949659de":"markdown","9eb3de1d":"markdown","460bf8af":"markdown","e5edbbe1":"markdown","2c671cba":"markdown","85a83565":"markdown","8a759f85":"markdown","f6ce050d":"markdown","dc7bd7f7":"markdown","8b509d2b":"markdown","2c91d22d":"markdown","5ef24568":"markdown","e10a5127":"markdown","78a56979":"markdown","e2c54ce6":"markdown"},"source":{"9e2a2ef3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","00623e58":"df=pd.read_csv(r\"\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv\")","74fef268":"df.head()","c6675226":"df=df.fillna(0)","423763c8":"df.dtypes","9a451de7":"df['gender'].unique()","9053ae6a":"df['ssc_b'].unique()","46a13196":"df['hsc_b'].unique()","42a63398":"df['hsc_s'].unique()","92d4673c":"df['degree_t'].unique()","b7800e5f":"df['workex'].unique()","ec579d56":"df['specialisation'].unique()","4169ab05":"df['status'].unique()","ed919993":"df=df.drop(['sl_no'],axis=1)","790108fb":"X=df.values","00f9e3e3":"from sklearn import preprocessing","85d33af0":"sex=preprocessing.LabelEncoder()\nsex.fit(['M', 'F'])\nX[:,0]=sex.transform(X[:,0])\n\nSSLC=preprocessing.LabelEncoder()\nSSLC.fit(['Others', 'Central'])\nX[:,2]=SSLC.transform(X[:,2])\n\nPUboard=preprocessing.LabelEncoder()\nPUboard.fit(['Others', 'Central'])\nX[:,4]=PUboard.transform(X[:,4])\n\nPUsyl=preprocessing.LabelEncoder()\nPUsyl.fit(['Commerce', 'Science', 'Arts'])\nX[:,5]=PUsyl.transform(X[:,5])\n\nDeg=preprocessing.LabelEncoder()\nDeg.fit(['Sci&Tech', 'Comm&Mgmt', 'Others'])\nX[:,7]=Deg.transform(X[:,7])\n\nWorkEx=preprocessing.LabelEncoder()\nWorkEx.fit(['No', 'Yes'])\nX[:,8]=WorkEx.transform(X[:,8])\n\nMBASpec=preprocessing.LabelEncoder()\nMBASpec.fit(['Mkt&HR', 'Mkt&Fin'])\nX[:,10]=MBASpec.transform(X[:,10])\n\nStatus=preprocessing.LabelEncoder()\nStatus.fit(['Placed', 'Not Placed'])\nX[:,12]=Status.transform(X[:,12])","6eede571":"X=np.array(X, dtype=[('O', np.float)]).astype(np.float)\nX.dtype","43044f81":"xmlr=X[:,0:13]\nymlr=X[:,13]\n","dc88bf97":"from sklearn import linear_model\nfrom sklearn.metrics import r2_score\nfrom sklearn.model_selection import train_test_split","4312a19c":"xlrtrain,xlrtest,ylrtrain,ylrtest=train_test_split(xmlr,ymlr,test_size=0.1,random_state=3)\nprint(xlrtrain.shape,ylrtrain.shape,xlrtest.shape,ylrtest.shape)","2b565dd3":"MLR=linear_model.LinearRegression()\nMLR.fit(xlrtrain,ylrtrain)","6452af88":"print(\"Theta 0 :\",MLR.intercept_)\nprint(\"Thetas :\",MLR.coef_)","a4326c65":"importance = MLR.coef_\nfor i,v in enumerate(importance):\n    print('Feature: %0d, Score: %.5f' % (i,v))\n","74df9084":"from matplotlib import pyplot\npyplot.bar([x for x in range(len(importance))], importance)\npyplot.show()","0ca11305":"yhatlr=MLR.predict(xlrtest)\nprint(\"R2 score %.2f\" %r2_score(yhatlr,ylrtest))","ba18104f":"xmlr2=X[:,0:12]\nxmlr2[0:1]\n\nymlr2=X[:,13]\nymlr2[0:3]\nxlrtrain2,xlrtest2,ylrtrain2,ylrtest2=train_test_split(xmlr2,ymlr2,test_size=0.1,random_state=3)\n\nprint(xlrtrain2.shape,ylrtrain2.shape,xlrtest2.shape,ylrtest2.shape)\n\nMLR2=linear_model.LinearRegression()\nMLR2.fit(xlrtrain2,ylrtrain2)\n\nprint(\"Theta 0 :\",MLR2.intercept_)\nprint(\"Thetas :\",MLR2.coef_)\n\nimportance2 = MLR2.coef_\nprint(importance2.shape)\nfor i,v in enumerate(importance2):\n    print('Feature: %0d, Score: %.5f' % (i,v))\n\n\nfrom matplotlib import pyplot\npyplot.bar([x for x in range(len(importance2))], importance2)\npyplot.show()\n\n","aefe2fda":"from sklearn import svm","e4b41636":"xsvm=X[:,0:12]\nysvm=X[:,12]","1bcd5fc9":"xsvmtrain,xsvmtest,ysvmtrain,ysvmtest=train_test_split(xsvm,ysvm,test_size=0.1,random_state=3)\n","88e48041":"svmM=svm.SVC(kernel='linear')\nsvmM.fit(xsvmtrain,ysvmtrain)","1d0bbb13":"from sklearn.metrics import jaccard_score\nyhatsvm=svmM.predict(xsvmtest)\nprint(jaccard_score(ysvmtest,yhatsvm))","fcbe3daf":"print(svmM.coef_,svmM.coef_.shape)\n\nimportancesvm = svmM.coef_.transpose()\nfor i,v in enumerate(importancesvm):\n    print('Feature: %0d, Score: %.5f' % (i,v))\n\nimportancesvm2=[0.87030,0.14679,-0.16534, 0.04070, 0.20813,-0.07558, 0.11830, -0.56383, 1.23753, -0.01899, -0.02371, -0.13834]\nfrom matplotlib import pyplot\npyplot.bar([x for x in range(len(importancesvm2))], importancesvm2)\npyplot.show()","eef250a1":"X2=X\nprint(X2[0:1])\nX2=np.delete(X2, [1,3,6,11], axis=1)\nprint(X2[0:1])\n","487e2841":"xsvm2=X2[:,0:8]\nysvm2=X2[:,8]\n\n\nxsvmtrain2,xsvmtest2,ysvmtrain2,ysvmtest2=train_test_split(xsvm2,ysvm2,test_size=0.1,random_state=3)\n\nsvmM2=svm.SVC(kernel='linear')\nsvmM2.fit(xsvmtrain2,ysvmtrain2)\nyhatsvm2=svmM2.predict(xsvmtest2)\n\n\nimportancesvm2 = svmM2.coef_.transpose()\nfor i,v in enumerate(importancesvm2):\n    print('Feature: %0d, Score: %.5f' % (i,v))\n\n\nprint(\"Jaccard similarity without taking any percentages\" ,jaccard_score(ysvmtest2,yhatsvm2))\nprint(\"Jaccard similarity with percentages\" ,jaccard_score(ysvmtest,yhatsvm))","b258eccf":"Creating a numpy array with the dataframe's values","123e7439":"Excluding 'status' feature and training the model :-","80b78251":"Now, removing all the percentage features to see how it affects the model:-","7200668c":"Taking a look at the data","a0f400e1":"Converting all non-numerical data into numerical values","bb5f87de":"Fitting our model:-","11ef4a6c":"Hence, the score worsens without taking the percentages. The percentages do matter.\nThanks, hope my solution to the questions asked is helpful","ae02b33c":"Multiple Linear Regression to find which factors influence a candidate in getting placed.(we take 'status' feature to train the model)\nSolution to the first question asked :-","949659de":"Making sure all values are of Float","9eb3de1d":"Finding accuracy of the model :-","460bf8af":"Checking the datatypes of each feature in the dataframe","e5edbbe1":"Splitting the data into train and test set(90% train, 10% test)","2c671cba":"Finding factors that influence if a candidate will get placed:-","85a83565":"Finding unique values of each feature with Object datatype :","8a759f85":"We can see the main factors are Workex, specialization, degree course, gender etc","f6ce050d":"Splitting the data into train and test set:-","dc7bd7f7":"Printing all the coefficients and intercept:-","8b509d2b":"Finding importance of each feature\nNote: Negative value doesnt indicate lower importance, the magnitude signifies the importance","2c91d22d":"Plotting the feature and its coefficients to signify the importance","5ef24568":"Fitting the SVM Model","e10a5127":"We can see that the factors\/features that influence a candidate getting placed are mainly : Workex, Specialization, Gender, Degree course etc.","78a56979":"Filling Nan values with 0","e2c54ce6":"Applying SVM to classify students as to whether getting placed and also to find if percentage matters(Answer to question 2):-"}}