{"cell_type":{"7c29f113":"code","ed467663":"code","7ed41de0":"code","5d664f93":"code","65c13ebc":"code","6a3a5d87":"code","54a25e0b":"code","d7501dc8":"code","7ef8a19e":"code","d91a8024":"markdown","92ae3f24":"markdown","49d188f1":"markdown","d4c87215":"markdown","133c6264":"markdown","fba1e9c6":"markdown","3890b858":"markdown","72e538dc":"markdown","2ea2f2bf":"markdown"},"source":{"7c29f113":"import pandas as pd\n\nfrom learntools.advanced_pandas.renaming_and_combining import *\n\npd.set_option('max_rows', 5)\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)","ed467663":"check_q1(pd.DataFrame())","7ed41de0":"reviews.head()","5d664f93":"check_q1(reviews.rename(columns={ \"region_1\": \"region\", \"region_2\": \"locale\"}))","65c13ebc":"check_q2(reviews.rename_axis(\"wines\", axis=\"rows\"))","6a3a5d87":"gaming_products = pd.read_csv(\"..\/input\/things-on-reddit\/top-things\/top-things\/reddits\/g\/gaming.csv\")\ngaming_products['subreddit'] = \"r\/gaming\"\nmovie_products = pd.read_csv(\"..\/input\/things-on-reddit\/top-things\/top-things\/reddits\/m\/movies.csv\")\nmovie_products['subreddit'] = \"r\/movies\"","54a25e0b":"check_q3(pd.concat([gaming_products , movie_products]))","d7501dc8":"powerlifting_meets = pd.read_csv(\"..\/input\/powerlifting-database\/meets.csv\")\npowerlifting_competitors = pd.read_csv(\"..\/input\/powerlifting-database\/openpowerlifting.csv\")","7ef8a19e":"check_q4(powerlifting_meets.merge(powerlifting_competitors, how='left', on='MeetID').set_index('MeetID'))","d91a8024":"**Exercise 3**: The [Things on Reddit](https:\/\/www.kaggle.com\/residentmario\/things-on-reddit\/data) dataset includes product links from a selection of top-ranked forums (\"subreddits\") on Reddit.com. Create a `DataFrame` of products mentioned on *either* subreddit. Use the following data:","92ae3f24":"**Exercise 4**: The [Powerlifting Database](https:\/\/www.kaggle.com\/open-powerlifting\/powerlifting-database) dataset on Kaggle includes one CSV table for powerlifting meets and a separate one for powerlifting competitors. Both tables include references to a `MeetID`, a unique key for each meet (competition) included in the database. Using this, generate a dataset combining the two tables into one. Use the following data:","49d188f1":"# Keep going\n[**Continue to the method chaining workbook**](https:\/\/www.kaggle.com\/kernels\/fork\/605139).","d4c87215":"**Exercise 1**: `region_1` and `region_2` are pretty uninformative names for locale columns in the dataset. Rename these columns to `region` and `locale`.","133c6264":"**Exercise 2**: Set the index name in the dataset to `wines`.","fba1e9c6":"# Checking Answers\n\n**Check your answers in each exercise using the  `check_qN` function** (replacing `N` with the number of the exercise). For example here's how you would check an incorrect answer to exercise 1:","3890b858":"# Renaming and combining workbook\n\n## Introduction\n\nThis is the worbook part of the \"Renaming and combining\" section of the Advanced Pandas tutorial. For the reference section, click [here](https:\/\/www.kaggle.com\/residentmario\/renaming-and-combining-reference).\n\nRenaming is covered in its own section in the [\"Essential Basic Functionality\"](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/basics.html#renaming-mapping-labels) section of the extensive official documentation. Combining is covered by the [\"Merge, join, concatenate\"](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/merging.html) section there.","72e538dc":"# Exercises\n\nLook at your data by running the cell below:","2ea2f2bf":"If you get stuck, **use the `answer_qN` function to see the code with the correct answer.**\n\nFor the first set of questions, running the `check_qN` on the correct answer returns `True`.\n\nFor the second set of questions, using this function to check a correct answer will present an informative graph!"}}