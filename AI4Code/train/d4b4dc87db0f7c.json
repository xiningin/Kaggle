{"cell_type":{"343591e7":"code","b4653691":"code","1f08071d":"code","7ccf1c79":"code","07a7cc54":"code","4a5a4821":"code","7788529f":"code","fe74a67e":"code","ef6f49ab":"code","1cdd0207":"code","e8057f14":"code","74a1f094":"markdown","6b55c922":"markdown","f68df955":"markdown","2d97f71d":"markdown","55c60efc":"markdown","10baf202":"markdown","c7ae9bfc":"markdown","febb5b02":"markdown","4992d80f":"markdown","23c58cbd":"markdown","f5307eaf":"markdown","b0ca639f":"markdown","5173e7c5":"markdown","854e81b5":"markdown","7e2fe9fe":"markdown","a58cffc3":"markdown","ff826524":"markdown","5eca04f5":"markdown","3ef8e035":"markdown","6ff77fa0":"markdown","ec25d60d":"markdown","b0b5a3d7":"markdown","170d8398":"markdown","f0a3451a":"markdown","71fd4f24":"markdown","bbbad714":"markdown","b9e3b34f":"markdown","db0736f0":"markdown","63747874":"markdown","fb868f75":"markdown","2e2b5463":"markdown","47694039":"markdown","79a67c0d":"markdown","993ffc18":"markdown","f7d5f769":"markdown","d4b75c48":"markdown","73c416c9":"markdown"},"source":{"343591e7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b4653691":"import seaborn as sns\nimport matplotlib.pyplot as plt\ndata=sns.load_dataset(\"tips\")\nplt.figure(figsize=(15,7))\nplt.style.use(plt.style.available[2])\nmarkers = {\"Lunch\": \"s\", \"Dinner\": \"X\"}\nax = sns.scatterplot(x =\"total_bill\",\n                     y =\"tip\",\n                     style =\"time\",hue=\"time\",\n                     markers = markers,\n                     data = data)\nplt.title(\"Tips according to Time\",fontdict={\"fontsize\":30})\nplt.xlabel(\"Total_bill\",fontdict={\"fontsize\":20})\nplt.ylabel(\"Tip\",fontdict={\"fontsize\":20})\nplt.grid(axis=\"y\",color=\"lightgrey\",alpha=1)\nplt.show()","1f08071d":"sns.set(style = 'dark')\ndots = sns.load_dataset(\"dots\").query(\"align == 'dots'\")\nplt.figure(figsize=(15,7))\nsns.lineplot(x =\"time\",\n        y =\"firing_rate\",\n        hue =\"coherence\",\n        style =\"choice\",\n        data = dots)\nplt.grid(color=\"lightgrey\")\nplt.xlabel(\"Time\",fontdict={\"fontsize\":20})\nplt.ylabel(\"Firing_rate\",fontdict={\"fontsize\":20})\nplt.title(\"FIRE VS TIME\",fontdict={\"fontsize\":30})","7ccf1c79":"plt.figure(figsize=(110,6))\ntips = sns.load_dataset(\"tips\")\nsns.jointplot(data=tips, x=\"total_bill\", y=\"tip\", kind=\"reg\", marker=\"*\")\nplt.xlabel(\"Total_bill\")\nplt.ylabel(\"Tip\")\nplt.show()","07a7cc54":"df = sns.load_dataset('titanic')\nsns.set(style=\"darkgrid\")\nplt.figure(figsize=(20,9))\nm=sns.barplot(x = 'who',\n        y = 'fare',\n        hue = 'class',\n        data = df)\nfor i in m.patches:\n    m.annotate(round(i.get_height(),2),(i.get_x(),i.get_height()+10))\nplt.xlabel(\"WHO\",fontdict={\"fontsize\":20})\nplt.ylabel(\"Fare\",fontdict={\"fontsize\":20})\nplt.title(\"Different Gender\",fontdict={\"fontsize\":30})\nplt.grid(True)\nplt.show()","4a5a4821":"df = sns.load_dataset('tips')\nsns.countplot(y ='sex', hue = \"smoker\", data = df)\nplt.show()","7788529f":"data = sns.load_dataset(\"iris\")\nsns.boxplot(x='species', y='sepal_width', data=data)\nplt.show()","fe74a67e":"datasets = sns.load_dataset('iris')\nsns.violinplot(x='species', y='sepal_width', data=datasets,\n                inner=\"quart\", linewidth=1)","ef6f49ab":"data = sns.load_dataset(\"iris\")\nsns.distplot(data['sepal_width'])\nplt.show()","1cdd0207":"data = sns.load_dataset(\"iris\")\nsns.pairplot(data=data, hue='species')\nplt.show()","e8057f14":"data = sns.load_dataset(\"tips\")\ntc = data.corr()\nsns.heatmap(tc)\nplt.show()","74a1f094":"<a id=\"HEATMAP\"><\/a>","6b55c922":"Scatter Plot with Marginal Histograms is basically a joint distribution plot with the marginal distributions of the two variables. In data visualization, we often plot the joint behavior of two random variables (bi-variate distribution) or any number of random variables. But if data is too large, overlapping can be an issue. Hence, to distinguish between variables it is useful to have the probability distribution of each variable on the side along with the joint plot. This individual probability distribution of a random variable is referred to as its marginal probability distribution.","f68df955":"A countplot basically counts the categories and returns a count of their occurrences. It is one of the most simple plots provided by the seaborn library. It can be created using the countplot() method","2d97f71d":"The scatter plot is a mainstay of statistical visualization. It depicts the joint distribution of two variables using a cloud of points, where each point represents an observation in the dataset. This depiction allows the eye to infer a substantial amount of information about whether there is any meaningful relationship between them.","55c60efc":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nBoxPlot\n    <\/h1>\n<\/div>\n","10baf202":"<a id=\"PAIRPLOT\"><\/a>","c7ae9bfc":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nTABLE OF CONTENTS<\/h1>\n<\/div>\n","febb5b02":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nMATPLOTLIB VS SEABORN\n<\/h1>\n<\/div>","4992d80f":"Data Visualization is the graphic representation of data. It converts a huge dataset into small graphs, thus aids in data analysis and predictions. It is an indispensable element of data science which makes complex data more understandable and accessible. Matplotlib and Seaborn act as the backbone of data visualization through Python<br>\n\nMatplotlib: It is a Python library used for plotting graphs with the help of other libraries like Numpy and Pandas. It is a powerful tool for visualizing data in Python. It is used for creating statical interferences and plotting 2D graphs of arrays. It was first introduced by John D. Hunter in 2002. It uses Pyplot for providing MATLAB like interface free and open-source. It is capable of dealing with various operating systems and their graphical backends.<br>\n\nSeaborn: It is also a Python library used for plotting graphs with the help of Matplotlib, Pandas, and Numpy. It is built on the roof of Matplotlib and is considered as a superset of the Matplotlib library. It helps in visualizing univariate and bivariate data. It uses beautiful themes for decorating Matplotlib graphics. It acts as an important tool in picturing Linear Regression Models. It serves in making graphs of statical Time-Series data. It eliminates the overlapping of graphs and also aids in their beautification","23c58cbd":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nSCATTERPLOT\n<\/h1>\n<\/div>\n","f5307eaf":"Distplot is used basically for univariant set of observations and visualizes it through a histogram i.e. only one observation and hence we choose one particular column of the dataset. It is potted using the distplot() method","b0ca639f":"A barplot is basically used to aggregate the categorical data according to some methods and by default its the mean. It can also be understood as a visualization of the group by action. To use this plot we choose a categorical column for the x axis and a numerical column for the y axis and we see that it creates a plot taking a mean per categorical column. It can be created using the barplot() method.","5173e7c5":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nViolinplot<\/h1>\n<\/div>\n","854e81b5":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nJOINTPLOT<\/h1>\n<\/div>\n","7e2fe9fe":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nHeatmap<\/h1>\n<\/div>\n","a58cffc3":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nLINEPLOT<\/h1>\n<\/div>\n","ff826524":"<a id=\"BOXPLOT\"><\/a>","5eca04f5":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nPairplot<\/h1>\n<\/div>\n","3ef8e035":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nDistplot\n    <\/h1>\n<\/div>\n","6ff77fa0":"<a id=\"BARPLOT\"><\/a>","ec25d60d":"<a id=\"DISTPLOT\"><\/a>","b0b5a3d7":"<a id=\"JOINTPLOT\"><\/a>","170d8398":"It is similar to the boxplot except that it provides a higher, more advanced visualization and uses the kernel density estimation to give a better description about the data distribution. It is created using the violinplot() method.","f0a3451a":"### [1.SCATTER PLOT](#SCATTERPLOT)\n### [2.LINE PLOT](#LINEPLOT)\n### [3.JOINTPLOT](#JOINTPLOT)\n### [4.BARPLOT](#BARPLOT)\n### [5.COUNTPLOT](#COUNTPLOT)\n### [6.BOXPLOT](#BOXPLOT)\n### [7.VIOLINPLOT](#VIOLINPLOT)\n### [8.DISTPLOT](#DISTPLOT)\n### [9.PAIRPLOT](#PAIRPLOT)\n### [10.HEATMAP](#HEATMAP)","71fd4f24":"Pairplot represents pairwise relation across the entire dataframe and supports an additional argument called hue for categorical separation. What it does basically is create a jointplot between every possible numerical column and takes a while if the dataframe is really huge. It is plotted using the pairplot() method","bbbad714":"![best-python-data-visualization-tutorial-seaborn.jpg](attachment:cf0c1cb9-f4ae-4584-97c4-275f8e6128bd.jpg)","b9e3b34f":"Heatmap is defined as a graphical representation of data using colors to visualize the value of the matrix. In this, to represent more common values or higher activities brighter colors basically reddish colors are used and to represent less common or activity values, darker colors are preferred. it can be plotted using the heatmap() function.","db0736f0":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nCountPlot\n    <\/h1>\n<\/div>\n","63747874":"Scatter plots are highly effective, but there is no universally optimal type of visualization. For certain datasets, you may want to consider changes as a function of time in one variable, or as a similarly continuous variable","fb868f75":"Seaborn is a library for making statistical graphics in Python. It builds on top of matplotlib and integrates closely with pandas data structures.Seaborn helps you explore and understand your data. Its plotting functions operate on dataframes and arrays containing whole datasets and internally perform the necessary semantic mapping and statistical aggregation to produce informative plots. Its dataset-oriented, declarative API lets you focus on what the different elements of your plots mean, rather than on the details of how to draw them","2e2b5463":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nABOUT SEABORN\n<\/h1>\n<\/div>","47694039":"A boxplot is sometimes known as the box and whisker plot.It shows the distribution of the quantitative data that represents the comparisons between variables. boxplot shows the quartiles of the dataset while the whiskers extend to show the rest of the distribution i.e. the dots indicating the presence of outliers. It is created using the boxplot() method.","79a67c0d":"<a id=\"SCATTERPLOT\"><\/a>","993ffc18":"<a id=\"LINEPLOT\"><\/a>","f7d5f769":"<a id=\"VIOLINPLOT\"><\/a>","d4b75c48":"<a id=\"COUNTPLOT\"><\/a>","73c416c9":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:blue;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nBarPlot<\/h1>\n<\/div>"}}