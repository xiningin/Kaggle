{"cell_type":{"c394c85f":"code","c04c91d8":"code","12b8e9e1":"code","572ede4a":"code","fd37d384":"code","5fd33620":"code","2918dc32":"code","dcea8de4":"code","0e921d75":"code","906bac10":"code","f34f929c":"code","44127b6d":"code","4fab9922":"code","d1f0083c":"code","303e33f9":"markdown","c3524a2e":"markdown","1cfd9ad8":"markdown","c4a41fef":"markdown","11116d8a":"markdown","391a6b8f":"markdown","6c375f29":"markdown","0fb994ee":"markdown","ddd7640a":"markdown","610a0547":"markdown"},"source":{"c394c85f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\ndef import_xwords():\n  return pd.read_csv('..\/input\/new-york-times-crossword-clues-answers-19932021\/nytcrosswords.csv', encoding='cp1252')\n\nxwords = import_xwords()\n\ndef initial_cleanup():\n    xwords.rename(columns={'Date':'puzzle_date','Word':'answer','Clue':'clue'},inplace=True)\n    xwords.puzzle_date = pd.to_datetime(xwords.puzzle_date)\n    xwords['answer_len'] = xwords.answer.apply(lambda x:len(str(x)))\n    for row in xwords[xwords.answer_len <= 1].index:\n        xwords.drop(row, inplace=True)\n    \ninitial_cleanup()\nxwords[['puzzle_date','clue','answer','answer_len']].head()","c04c91d8":"print(f'NaN values: {xwords.isnull().sum().sum()}')\nxwords[xwords.answer.isnull()][['clue','answer']].head()","12b8e9e1":"xwords.fillna('NULL', inplace=True)","572ede4a":"def common_answer(clue=None, format='hrf'):\n    if clue == None:\n        if format == 'str':\n            return str(xwords.answer.value_counts().index[0]) \n        if format == 'hrf': \n            return xwords.answer.value_counts() \n    \n    if xwords[xwords.clue == clue].clue.sum() == 0:\n        return str(f'No answers found for clue \"{clue}\"')\n    if format == 'str':\n        return str(xwords[xwords.clue == clue].answer.value_counts().index[0])\n    if format == 'hrf': \n        return xwords[xwords.clue == clue].answer.value_counts()\n\ndef common_clue(answer=None, format='hrf'):\n    if answer == None:\n        if format == 'str':\n            return str(xwords.clue.value_counts().index[0])\n        if format == 'hrf': \n            return xwords.clue.value_counts()\n    \n    answer = answer.upper()\n    if xwords[xwords.answer == answer].answer.sum() == 0:\n        return str(f'No clues found for answer \"{answer}\"')\n    if format == 'str':\n        return str(xwords[xwords.answer == answer].clue.value_counts().index[0])\n    if format == 'hrf': \n        return xwords[xwords.answer == answer].clue.value_counts()\n\ndef set_label(x, type=''):\n    if type == 'answer':\n        count = common_clue(answer=x).shape[0]\n        most_common = common_clue(answer=x, format='str')\n        return f'Clue: \\\"{most_common}\\\" and {count - 1} others{chr(10)}{x}'\n    elif type == 'clue':\n        count = common_answer(clue=x).shape[0]\n        most_common = common_answer(clue=x, format='str')\n        if (count - 1) == 0:\n            and_others = ' '\n        elif (count - 1) == 1:\n            and_others = ' and 1 other'\n        else:\n            and_others = f' and {count - 1} others'\n        return f'{x}{chr(10)}Answer: \\\"{most_common}\\\"{and_others}'\n\ndef format_barh(x, title='', xlim=100):\n    func = f'common_{x}'\n    col_label = f'{x}_label'\n    \n    df = pd.DataFrame((common_answer().head(10)) if (x == 'answer') else (common_clue().head(10)))\n    df.rename({x:'count'}, axis=1, inplace=True)\n    df[col_label] = df.index\n    df[col_label] = df[col_label].apply(set_label,type=x)\n    df.set_index(col_label,inplace=True)\n    df_sort = df['count'].sort_values(ascending=True)\n    colors = ['lightgray' if (x < max(df_sort)) else 'tab:blue' for x in df_sort ]\n    chart = df_sort.plot(kind='barh', figsize=(10,10), legend=None, color=colors)\n    chart.set_title(f'Most Common NY Times Crossword {title}, 1993-2021')\n    chart.set_xlabel('Occurences')\n    chart.set_ylabel('Clue and Answer')\n    chart.set_xlim(0,xlim)\n    chart.spines[['top', 'right']].set_visible(False)\n    chart.yaxis.set_ticks_position('none')\n    bars = chart.patches\n    for bar in bars:\n        x = bar.get_width()\n        y = bar.get_y() + bar.get_height() \/ 2\n        plt.annotate(x, (x,y), xytext=(5,0), textcoords='offset points', va='center', ha='left');","fd37d384":"format_barh('answer', title='Answers', xlim=660)","5fd33620":"format_barh('clue', title='Clues', xlim=130)","2918dc32":"dayofweek = {\n    0:'Monday',\n    1:'Tuesday',\n    2:'Wednesday',\n    3:'Thursday',\n    4:'Friday',\n    5:'Saturday',\n    6:'Sunday'\n}\npuzzle_difficulty = {\n    'Monday':1,\n    'Tuesday':2,\n    'Wednesday':3,\n    'Thursday':4,\n    'Friday':5,\n    'Saturday':6,\n    'Sunday':4\n}\ndef set_difficulty():\n    xwords['puzzle_day'] = xwords.puzzle_date.dt.dayofweek\n    xwords['puzzle_day_as_str'] = xwords.puzzle_day.map(dayofweek)\n    xwords['puzzle_difficulty'] = xwords.puzzle_day_as_str.map(puzzle_difficulty)\nset_difficulty()","dcea8de4":"def search(clue, qs=[]):\n    is_found = False\n    for q in qs:  \n        if clue.find(q) != -1:\n            is_found = True\n    return is_found\ndef set_is_short(answer_len):\n    if 3 <= answer_len <= 5:\n        return True\n    return False\ndef set_is_long(answer_len):\n    if answer_len >= 7:\n        return True\n    return False\ndef count_conventions():\n    xwords['is_short'] = xwords.answer_len.apply(set_is_short)\n    xwords['is_long'] = xwords.answer_len.apply(set_is_long)\n    xwords['is_fitb'] = xwords.clue.apply(search,qs=['__'])\n    xwords['is_question'] = xwords.clue.apply(search,qs=['?'])\n    xwords['is_ref'] = xwords.clue.apply(search,qs=['-Across', '-Down']) \n\ncount_conventions()\n\nreq_col = ['puzzle_date','puzzle_difficulty','is_short','is_long','is_fitb','is_question','is_ref']\ncon_col = ['is_short','is_long','is_fitb','is_question','is_ref']\ngrp_puzzle = xwords[req_col].groupby('puzzle_date')\ndf = pd.DataFrame(grp_puzzle.agg({'puzzle_date':'size','puzzle_difficulty':'mean'}))\ndf.rename(columns={'puzzle_date':'puzzle_size'}, inplace=True)\n\nfor column in con_col:\n    new_df = pd.DataFrame(grp_puzzle[column].apply(lambda x: (x==True).sum()))\n    df = df.join(new_df)\n    df[column] = (df[column] \/ df['puzzle_size'] * 100)\n\ndf\n","0e921d75":"def get_coeff(convention):\n    coeff = df.corr(method='spearman').puzzle_difficulty.loc[convention]\n    return coeff \ndef format_scatter(column, title=None, label=None, xlim=100):\n    chart = df.plot(kind='scatter', x=column, y='puzzle_difficulty', figsize=[8,4], s=5, color='tab:blue')\n    chart.set_title(f'Puzzle Difficulty vs. {title} [Strength: {get_coeff(column).round(4)}]')\n    chart.set_xlabel(str(label))\n    chart.set_ylabel('Puzzle Difficulty')\n    chart.set_ylim(.5,6.5)\n    chart.set_yticks(range(1,7))\n    chart.set_yticklabels(['Easy','','','','','Hard'])\n    xpad = xlim \/ 50\n    xstep = 10 if (xlim >= 50) else 5\n    chart.set_xlim(0-xpad,xlim+xpad)\n    chart.set_xticks(range(0,xlim+xstep,xstep))\n    chart.imshow(X=[[1,1],[0,0]], extent=[0-xpad,xlim+xpad,-0.5,6.3], aspect='auto', interpolation=\"bicubic\", alpha=.08, cmap=plt.cm.Greys)\n    chart.grid(axis='x', color='white', linewidth=1.5)\n    chart.set_axisbelow(True) \n    chart.spines[['top', 'right','bottom', 'left']].set_visible(False)\n    chart.yaxis.set_ticks_position('none')\n    chart.xaxis.set_ticks_position('none')\n\nformat_scatter('is_short', title='Short Answers', label='Percentage of 3-, 4- & 5-letter Answers')","906bac10":"format_scatter('is_long', title='Long Answers', label='Percentage of 7-letter or more Answers')","f34f929c":"format_scatter('is_fitb', title='Fill-In-The-Blank Clues', label='Percentage of Fill-In-The-Blank Clues', xlim=30)","44127b6d":"format_scatter('is_question', title='Question Clues', label='Percentage of Clues containing a \"?\"', xlim=40)","4fab9922":"format_scatter('is_ref', title='Referential Clues', label='Percentage of Clues that reference other Clues', xlim=30)","d1f0083c":"pd.DataFrame(df.corr(method='spearman').puzzle_difficulty.sort_values()).drop(['puzzle_size','puzzle_difficulty']).round(4)","303e33f9":"### Analyzing the most common clues\n\n* **Variety in clues:** Generally, a lot less recurrences in clues than we saw in the answers list. The most common clue \"Jai ___\" occured 122 times, compared to 634 \"ERA\"s.\n* **Clear clue formats for challenging answers**: The top three clues are all Fill-In-The-Blank... for answers that aren't English words! For a predominately American audience, the NY Times sticks to easy-to-guess clue formats when it comes to languages besides English.\n    * Jai Alai is Spanish sport\n    * Mauna Loa is a Hawaiian volcano\n    * Pro rata is a Latin term meaning \"in proportion\"\n* **Common clues give common answers:** The answers to each of the most common clues are still following the rules of common answers we noticed above\u2014short words with frequently used letters.\n    * The clue \"Put away\": ATE actually repeated from the most common answers list.\n* **Clever clues:** This is certainly subjective, but I consider many of these clues\/answer pairs to employ intriguing wordplay, using more unusual definitions or turns-of-phrase. You could surmise from this data that the NY Times has more willingness to publish re-used clues if the clue is particularly clever.\n    * \"Up\" is not obviously about baseball, \"ATBAT\"\n    * \"Put away\" is not obviously about eating, \"ATE\"\n    * \"Over\" is more commonly used as \"above\" or \"across\" than \"again\" or \"ANEW\"\n    \n# 3. In what order should a solver approach crossword clues?\n\nA crossword puzzle is its most intimidating at the very beginning, before any answers have been entered into the grid. Every correctly-entered answer provides a 1-letter hint to the answers that cross with it, such that even the trickiest clues can be figured out once you have enough letters. \n\n> A 6-letter word for \"Ones who treats people poorly?\" is difficult to answer without knowing some crossed letters. But later in the puzzle when you might have `Q_A_K_`, the answer `QUACKS` becomes more obvious.\n\nSo, **a viable strategy for solving is to tackle the easy clues first**, and use those letters to help you get the hard clues later. We will aim to identify conventions that mark clues as \"easier\" and \"harder\", and from that suggest an order than is most advantageous to the solver.\n\n### Determining difficulty\n\nThe New York Times Crossword publishes a daily puzzle and the difficulty of the puzzles increase throughout the week, from Monday to Saturday. Thus, we can use the `puzzle_date` field to derive the puzzle's overall difficulty.\n\nThe Sunday puzzle, which is published in the New York Times Magazine, is usually larger than the other days and is typically intended to be about as difficult as Thursday. This complicates the analysis in two ways:\n1. We must calculate Sunday puzzles' difficulty slightly differently, and\n2. We will have to control for puzzles being different sizes.\n\n#### Code Approach\n\nI wrote some mapping dictionaries to convert the `puzzle_date` field into numbers, then human-readable strings, and ultimately to a 1-6 difficulty scale. The scale increases from Monday to Saturday and sets Sunday puzzles as equally difficult as Thursday puzzles. This approach assumes the difficulty increases evenly every day throughout the week.","c3524a2e":"Calling the **format_barh** function with a few arguments returns a chart showing the most common answers.","1cfd9ad8":"### Identifying Clue and Answer Conventions\n\nNext we need to make a list of conventions that might indicate an easy or hard clue. The conventions must be identifiable to a solver at the very start of the puzzle, limiting us to mostly information about the clue and the length of the answer. The conventions we will test are:\n* 3-, 4-, and 5-letter answers (expected to be **EASY**)\n* 7- or more-letter answers (expected to be **HARD**)\n* Fill-in-the-blank clues (expected to be **EASY**)\n* Clues with a question mark (expected to be **HARD**)\n    * The question mark usually indicate a pun or wordplay, requiring indirect thinking from the solver\n* Clues referencing other clues or answers (expected to be **HARD**)\n\n#### Code Approach\nI wrote some functions to convert the dataset (intially structured as 1 record = 1 clue:answer) to something I could assign a difficulty. Since the difficulty can only be reasonably determined per puzzle (not per clue:answer), the dataset must be aggregated as 1 record = 1 puzzle. \n\nA series of functions determine if a clue:answer matches the conventions:\n* **search** returns `True` if a clue contains any of a provided list of strings.\n    * Used to test for Fill-in-the-blank clues, Question clues, and Referential clues.\n* **set_is_short** returns `True` if an answer is 3-5 letters long.\n* **set_is_long** returns `True` if an answer is 7+ letters long.\n\nAfter each of the conventions are tested, the dataset is grouped per puzzle and the convention counts are converted to percentages. (E.g. What percentage of clues in a puzzle are Fill-in-the-blank?) From there, we can start testing if each convention is correlated with puzzle difficulty. (E.g. Do easy puzzle include higher percentages of Fill-in-the-blank clues?)","c4a41fef":"With each scatter plot, we would expect to see an overall shape emerge as we plot 10,207 individual puzzles on the grid.\n\n* Slopes **UP TO THE RIGHT** would indicate that the charted convention is **HARD TO SOLVE**.\n* Slopes **DOWN TO THE RIGHT** would indicate that the charted convention is **EASY TO SOLVE**.\n* Charts with no discernable slope would indicate that the charted convention is not meaningfully correlated with difficulty.\n\nI'll pull the correlation coefficients into a table as a summary.","11116d8a":"Filling this empty rows with the string `NULL` solves the problem and leave us with a robust dataset to analyze.\n\n# Reporting and Visualization\n\n# 1. What are the most common crossword answers?\n\nCrossword puzzle answers must be carefully considered by their nature, where the words or phrases in the puzzle must intersect in such a way to create answers both horizontally and vertically. To start my analysis, I was most curious to see what crossword answers occurred most frequently from 1993 to 2021.\n\nI would guess that the most common answers are not necessarily common English words and phrases, but answers that are \"most valuable\" to the crossword creator. I would expect an absence of rare letters such as Q, Z, J and X, which are hard enough to fit in a single direction, let alone a crossed-word!\n\n### Code Approach\n\nI wrote a few functions in order to generate the desired charts. \n* **common_answer** returns the most common answers for a single clue or all clues, as a series. Can also return the #1 most common answer as a string.\n* **common_clue** returns the most common clues for a single answer or all answers, as a series. Can also return the #1 most common clue as a string.\n* **set_label** returns a formatted string providing context for y-axis labels.\n    * If provided a series of answers, it returns the answer with its most common clue and a count of all related clues.\n    * If provided a series of clues, it returns the clue with its most common answer and a count of all related answers.\n* **format_barh** returns a styled chart, compiling the above data.","391a6b8f":"### Analyzing the most common answers\n\n* **Answers are short:** 9 of 10 answers are 3-letter answers, with only one 4-letter answer making the top ten.\n* **Answers use common letters:** We see a high recurrence of frequently-used vowels (E, A, O, I) and the consonants are similarly common (R, N, L, T).\n* **Answers have less variation than clues:** Crossword creaters use huge numbers of unique clues to get to these common answers, from 181 (ERE) to 388 (ERA).\n* **Outlier:** \"ERA\" is in a league of its own as the top answer with 100 occurences more than the next answer.\n\n# 2. What are the most common crossword clues?\n\nCrossword creators have a lot more flexibility while writing clues than writing answers. Since clues exist outside the puzzle grid, they have no requirement to cross with other clues or answers. Addtionally, crosswords are intended to be \"puzzling!\" Clues can be cryptic and full of wordplay, requiring indirect thinking to solve.\n\n> **Crossword Tip**: Try using a crossword clue in a sentence if you're stuck! The clue and answer must maintain the same part of speech. \n\nI have fewer assumptions about what would make a crossword clue appear frequently. I expect lower recurrences of clues than we saw in answers due to the flexibility of the format, and perhaps we will see some of the clues that result in the most common answers.","6c375f29":"### Analyzing the the correlation between conventions and puzzle difficulty\n\n* We see some pretty strong correlations in our list! \n    * The strongest correlation is that a high percentage of long answers makes for a difficult puzzle.\n    * The second strongest correlation is that a high percentage of short answers makes for an easy puzzle.\n    * There is a correlation that a higher percentage of Question Clues makes for a difficult puzzle.\n    * There is a weaker correlation, though not insignificant, that a high percentage of Fill-in-the-blank Clues makes for an easy puzzle. \n* Clues containing references to other clues ended up being essentially unrelated to the difficulty of the puzzle. The correlation strength only reaches 0.0264, so solve these clues whenever you like.\n\n\n## An analysis-informed strategy for solving crosswords:\n1. First identify 3-, 4-, and 5- letter answers. These should be easiest to solve!\n2. Look for any fill-in-the-blanks clues. These are often easy to solve.\n3. Don't spend too much time on clues containing question marks at the beginning, these are difficult to solve.\n4. Save long clues for later, when you have more crossed letters to help. These tend to be the most difficult.","0fb994ee":"Two more functions were required to chart each correlation.\n* **get_coeff** returns a coefficient for a given convention against puzzle difficulty. \n    * A coefficient ranges from -1 (inversely correlated) to 0 (no correlation) to 1 (positively correlated).\n    * In this example, a negative coefficient means a convention is **EASY** and a positive coefficient means a convention is **HARD**.\n* **format_scatter** returns a formatted chart, compiling the above data.","ddd7640a":"## What's a 4-letter word for \"Missing value\"?\n\nThere are only 34 missing values in the dataset. Filtering the dataset to these empty answers revealed an amusing source to the problem: the answers were not missing, they were the word `NULL`!","610a0547":"# New York Times Crossword Analysis \nAn in-depth look at crossword clues and answers for the New York Times Crossword from 1993-2021. We'll find the most common clues, the most common answers, and attempt to develop a strategy for solving puzzles.\n\n<br>\n\n| Field | Description |\n| :-- | :-- |\n| **Date** | The publishing date of the puzzle\n| **Word** | The word(s) or phrase(s) entered into the puzzle grid, capitalized without spaces. \"The answer.\"\n| **Clue** | The published hint that prompts the solver's answer. \"The clue.\"\n\n# Setup\nThe initial cleanup is minor for this data set.\n* I renamed fields to be easier to reference.\n* I converted the Date field to datetime values.\n* I dropped records where the recorded answer was only 1-letter, violating a crossword rule."}}