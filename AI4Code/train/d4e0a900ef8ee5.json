{"cell_type":{"6a096c00":"code","ff432b8b":"code","4acf279d":"code","96687219":"code","485e9aa3":"code","707302ed":"code","7c41b45f":"code","4cd4e99b":"code","51918007":"code","39eb72eb":"code","d8aa2844":"code","f2ae34da":"code","cf4e3213":"code","440f5cfb":"code","40a6116f":"code","a54b82b6":"code","640dd029":"code","38261041":"code","54a7a5f4":"markdown","61f8b194":"markdown"},"source":{"6a096c00":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport zipfile\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ff432b8b":"with zipfile.ZipFile('\/kaggle\/input\/dogs-vs-cats\/train.zip',mode='r') as z:\n    z.extractall(\".\")\nwith zipfile.ZipFile('\/kaggle\/input\/dogs-vs-cats\/test1.zip',mode='r') as z:\n    z.extractall(\".\")","4acf279d":"import cv2\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential \nfrom tensorflow.keras.layers import Dense,Conv2D,MaxPooling2D,Activation,Flatten,Dropout","96687219":"file_store='\/kaggle\/working\/train'","485e9aa3":"from matplotlib.image import imread\nfor i in range(9):\n    plt.subplot(330+1+i)\n    filename=file_store+'\/dog.'+str(i)+'.jpg'\n    image=imread(filename)\n    plt.imshow(image)\nplt.show()    ","707302ed":"from matplotlib.image import imread\nfor i in range(9):\n    plt.subplot(330+1+i)\n    filename=file_store+'\/cat.'+str(i)+'.jpg'\n    image=imread(filename)\n    plt.imshow(image)\nplt.show()   ","7c41b45f":"for p in os.listdir(file_store):\n    category=p.split('.')[0]\n    img_array=cv2.imread(os.path.join(file_store,p),cv2.IMREAD_GRAYSCALE)\n    new_img_array=cv2.resize(img_array,dsize=(120,120))\n    plt.imshow(new_img_array,cmap='gray')\n    break","4cd4e99b":"X=[]\nY=[]\nconvert=lambda category : int(category=='dog')\ndef create_test_data(file_store):\n    for p in os.listdir(file_store):\n        category=p.split('.')[0]\n        category=convert(category)\n        img_array=cv2.imread(os.path.join(file_store,p),cv2.IMREAD_GRAYSCALE)\n        new_img_array=cv2.resize(img_array,dsize=(120,120))\n        X.append(new_img_array)\n        Y.append(category)","51918007":"file_store_test='\/kaggle\/working\/test1\/'\nX_test=[]\nid_line=[]\ndef create_test1_data(file_store_test):\n    for p in os.listdir(file_store_test):\n        id_line.append(p.split('.')[0])\n        img_array=cv2.imread(os.path.join(file_store_test,p),cv2.IMREAD_GRAYSCALE)\n        new_img_array=cv2.resize(img_array,dsize=(120,120))\n        X_test.append(new_img_array)\n","39eb72eb":"create_test_data(file_store)\nX=np.array(X).reshape(-1,120,120,1)\nY=np.array(Y)\nX=X\/255.0\nX.shape[1:]","d8aa2844":"create_test1_data(file_store_test)\nX_test = np.array(X_test).reshape(-1,120,120,1)\nX_test = X_test\/255","f2ae34da":"model=Sequential()\nmodel.add(Conv2D(64,(3,3),activation='relu',input_shape=X.shape[1:]))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n\nmodel.add(Conv2D(64,(3,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n\nmodel.add(Conv2D(64,(3,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(64,activation='relu'))\nmodel.add(Dense(1,activation='sigmoid'))\n\nmodel.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])","cf4e3213":"model.summary()","440f5cfb":"model.fit(X,Y,batch_size=32,epochs=10,validation_split=0.2)","40a6116f":"predictinos=model.predict(X_test)","a54b82b6":"predicted_val = [int(round(p[0])) for p in predictinos]","640dd029":"submission_df = pd.DataFrame({'id':id_line, 'label':predicted_val})","38261041":"submission_df.to_csv(\"submission.csv\", index=False)","54a7a5f4":"Testing Data","61f8b194":"Training Data"}}