{"cell_type":{"2fd6f079":"code","94d0e61f":"code","38fa921b":"code","78ff6c31":"code","8fe4fb6f":"code","a133b194":"code","8cb86af7":"code","dfb1d1fb":"code","1ba80271":"code","bdba179f":"code","e94f8402":"code","b74cc132":"code","a1c82241":"markdown","b222e4e3":"markdown"},"source":{"2fd6f079":"import pandas as pd\ntrain=pd.read_csv('..\/input\/train.csv')","94d0e61f":"test=pd.read_csv('..\/input\/test.csv')","38fa921b":"train.shape","78ff6c31":"test.shape","8fe4fb6f":"subtrain=train.iloc[:,1:]\nsubresponse=train.iloc[:,:1]","a133b194":"from sklearn.model_selection import train_test_split\nx_train,x_vaild,y_train,y_vaild=train_test_split(subtrain,subresponse,test_size=.2,stratify=subresponse,random_state=42)","8cb86af7":"import matplotlib.pyplot as plt\nimport matplotlib.image as mpi\ndef imageplots(k):\n    viewed_image=x_train.iloc[k,:].as_matrix()\n    #28*28= 784 which is the number of pixels used per image\n    # So like the previous kernal it really is pushing 1D to 2D\n    # Although im not sure if thats usually how its done\n    im=viewed_image.reshape((28,28))\n    plt.title(y_train.iloc[k])\n    \n    return plt.imshow(im,cmap='binary')","dfb1d1fb":"imageplots(0)","1ba80271":"imageplots(1)","bdba179f":"imageplots(5)","e94f8402":"from sklearn.preprocessing import MinMaxScaler\nscal=MinMaxScaler()\ndtr=scal.fit_transform(x_train)\nx_train_s=pd.DataFrame(dtr,columns=x_train.columns)\ndvr=scal.transform(x_vaild)\nx_vaild_s=pd.DataFrame(dvr,columns=x_vaild.columns)\ndtt=scal.transform(test)\ntest_s=pd.DataFrame(dtt,columns=test.columns)","b74cc132":"#from sklearn import svm\n\n#from sklearn.model_selection import GridSearchCV\n\n#parmer_grid={'C':range(1,10),'gamma':[0.01,0.0001,1\/785,0.00001]}\n\n#sv=svm.SVC()\n\n#vt=GridSearchCV(sv,parmer_grid,cv=10)\n\n#vt.fit(x_train_s,y_train.values.ravel())\n\n#vt.score(x_vaild_s,y_vaild)","a1c82241":"$\\text{A review of Charlie H. intro for image classification in python from his\/her kaggle kernal.}$\n\n$\\text{https:\/\/www.kaggle.com\/archaeocharlie\/a-beginner-s-approach-to-classification}$\n\n$\\text{Rewritten\/ modfied  by EG Timerise (aka Dr.E for those on kaggle )}$\n\n$\\text{From the data we are given a list of pixals and labels.}$","b222e4e3":"$\\text{I read some of the comments about his kernal and thought it would be quick and easy to apply some of the comments.}$\n\n$\\text{ Its a simple example of the use of grid search for finding better model parameters.}$"}}