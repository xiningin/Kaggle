{"cell_type":{"c2d71762":"code","9408db7b":"code","0fd96ed4":"code","f0b539b6":"code","b2974848":"code","5e351ceb":"code","f78b3018":"code","e3cef72c":"code","47999fba":"code","5c9271bb":"code","47446b00":"code","eeafb733":"code","4904ee24":"code","2510bdf1":"code","b7d86f6d":"code","f72f4b4f":"code","2777d45a":"code","3b1114ff":"code","a3db132a":"code","dc81934f":"code","ca7683e0":"code","cd012fe9":"code","5124dc5c":"code","1b3d230a":"code","c0e42937":"code","bfa5ec79":"code","551d2c71":"code","f6c3f172":"code","9e3cf2d3":"code","f4218cf9":"code","e61c183c":"code","3d5d9a0b":"code","88812f7e":"code","bd029606":"code","d748d93d":"markdown","031a817b":"markdown","984fb770":"markdown","5e347ef5":"markdown","d2cd3934":"markdown","25163bcf":"markdown","b7fea0b0":"markdown","57be5822":"markdown","10ea4410":"markdown","fd1579d2":"markdown","78e6e038":"markdown","9b1c9548":"markdown","38d0c0a7":"markdown","8f656874":"markdown","34a6b764":"markdown","15444e2a":"markdown","2011da9a":"markdown","9612905e":"markdown","ff7ecffd":"markdown","c9fa06b9":"markdown","387de002":"markdown","edab3139":"markdown","6bf1e9b2":"markdown","a167a1f4":"markdown","d76b3bed":"markdown","05388f54":"markdown"},"source":{"c2d71762":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9408db7b":"import matplotlib.pyplot as plt # plotting\nimport seaborn as sns # seaborn\n# rendering plots\n%matplotlib inline","0fd96ed4":"df = pd.read_csv('\/kaggle\/input\/covid19-weekly-trends-in-europe-latest-data\/covid_europe_weekly_trend.csv')\ndf.head()","f0b539b6":"df.shape","b2974848":"# columns of dataset\ndf.columns","5e351ceb":"df.isnull().sum()","f78b3018":"# Information\ndf.info()","e3cef72c":"# describe\ndf.describe()","47999fba":"sns.heatmap(df.corr(),xticklabels=df.corr().columns,yticklabels=df.corr().columns)","5c9271bb":"sns.pairplot(data=df)","47446b00":"# Starting from the country column\ntotal_countries = df[\"Country\/Other\"]\nprint(total_countries)","eeafb733":"plt.figure(figsize=(10,10))\nplt.plot(total_countries)","4904ee24":"Cases_in_the_last_7_days = df.groupby('Country\/Other')['Cases in the last 7 days'].sum()\nprint(f'The number of maximum cases in last 7 days is {Cases_in_the_last_7_days.max()} and the country is {Cases_in_the_last_7_days.idxmax()}')","2510bdf1":"# minimum cases in Cases_in_the_last_7_days\nprint(f'The number of minimum cases in last 7 days is {Cases_in_the_last_7_days.min()} and the country is {Cases_in_the_last_7_days.idxmin()}')","b7d86f6d":"# plot\nplt.figure(figsize=(10,15))\nsns.set_style('darkgrid')\nsns.barplot(data=df, x='Cases in the last 7 days', y='Country\/Other');","f72f4b4f":"Cases_in_the_preceding_7_days = df.groupby('Country\/Other')['Cases in the preceding 7 days'].sum()\nprint(f'The number of maximum cases in last 7 days is {Cases_in_the_preceding_7_days.max()} and the country is {Cases_in_the_preceding_7_days.idxmax()}')\nprint(f'The number of minimum cases in last 7 days is {Cases_in_the_preceding_7_days.min()} and the country is {Cases_in_the_preceding_7_days.idxmin()}')","2777d45a":"# plot\nplt.figure(figsize=(10,15))\nsns.set_style('darkgrid')\nsns.barplot(data=df, x='Cases in the preceding 7 days', y='Country\/Other');","3b1114ff":"df['Weekly Case % Change']","a3db132a":"# maximum no Weekly Case % Change\nmaximum = df.groupby('Country\/Other')['Weekly Case % Change'].sum()\nprint(f\"The number of maximum cases in Weekly Case % change is {maximum.max()} and the country is {maximum.idxmax()}\")\nprint(f\"The number of minimum cases in Weekly Case % change is {maximum.min()} and the country is {maximum.idxmin()}\")","dc81934f":"# figure\nplt.figure(figsize=(10,15))\nsns.set_style('darkgrid')\nsns.barplot( x='Weekly Case % Change', y='Country\/Other', data=df);","ca7683e0":"df[['Cases in the last 7 days\/1M pop', 'Country\/Other']]","cd012fe9":"s = df.groupby('Country\/Other')['Cases in the last 7 days\/1M pop'].sum()\nprint(f\"The maximum no of Cases in last 7 days\/1M pop is {s.max()} and the country is {s.idxmax()}\")\nprint(f\"The minimum no of Cases in last 7 days\/1M pop is {s.min()} and the country is {s.idxmin()}\")","5124dc5c":"# figure\nplt.figure(figsize=(10,15))\nsns.set_style('darkgrid')\nsns.barplot( x='Cases in the last 7 days\/1M pop', y='Country\/Other', data=df);","1b3d230a":"# Max an Min Deaths in the last 7 days\nmaximum_death = df.groupby('Country\/Other')['Deaths in the last 7 days'].sum()\nprint(f\"The number of maximum death {maximum_death.max()} and the country is {maximum_death.idxmax()}\")\nprint(f\"The number of minimum death {maximum_death.min()} and the country is {maximum_death.idxmin()}\")","c0e42937":"plt.figure(figsize=(10,15))\nsns.set_style('darkgrid')\nsns.barplot(data=df, x='Deaths in the last 7 days', y='Country\/Other');","bfa5ec79":"df[['Deaths in the preceding 7 days', 'Country\/Other']]","551d2c71":"death = df.groupby('Country\/Other')['Deaths in the preceding 7 days'].sum()\n# Max an Min Deaths in the last 7 days\nprint(f\"The number of maximum death in preceding 7 days {death.max()} and the country is {death.idxmax()}\")\nprint(f\"The number of minimum death in preceding 7 days {death.min()} and the country is {death.idxmin()}\")","f6c3f172":"plt.figure(figsize=(10,15))\nsns.set_style('darkgrid')\nsns.barplot(data=df, x='Deaths in the preceding 7 days', y='Country\/Other');","9e3cf2d3":"death1 = df.groupby('Country\/Other')['Weekly Death % Change'].sum()\nprint(f\"The maximum no of Weekly Death % Change is {death1.max()} and the country is {death1.idxmax()}\")\nprint(f\"The minimum no of Weekly Death % Change is {death1.min()} and the country is {death1.idxmin()}\")","f4218cf9":"plt.figure(figsize=(10,15))\nsns.set_style('darkgrid')\nsns.barplot(data=df, x='Weekly Death % Change', y='Country\/Other');","e61c183c":"death2 = df.groupby('Country\/Other')['Deaths in the last 7 days\/1M pop'].sum()\nprint(f\"The maximum no of Deaths in the last 7 days\/1M pop is {death2.max()} and the country is {death2.idxmax()}\")\nprint(f\"The minimum no of Deaths in the last 7 days\/1M pop is {death2.min()} and the country is {death2.idxmin()}\")","3d5d9a0b":"plt.figure(figsize=(10,15))\nsns.set_style('darkgrid')\nsns.barplot(data=df, x='Deaths in the last 7 days\/1M pop', y='Country\/Other');","88812f7e":"pop = df.groupby('Country\/Other')['Population'].sum()\nprint(f\"The highest population {pop.max()} and the country {pop.idxmax()}\")\nprint(f\"The lowest population {pop.min()} and the country {pop.idxmin()}\")","bd029606":"plt.figure(figsize=(10,15))\nsns.set_style('darkgrid')\nsns.barplot(data=df, x='Population', y='Country\/Other');","d748d93d":"Russia has the highest number of Covid deaths","031a817b":"figure clearly shows that UK has the highest number of cases in last preceding 7 days","984fb770":"# Correlation plot","5e347ef5":"# Cases in the preceding 7 days","d2cd3934":"1. Russia has the highest number of cases and population","25163bcf":"# Deaths in the last 7 days\/1M pop","b7fea0b0":"# Deaths in the preceding 7 days","57be5822":"# shape of dataset how many rows and columns","10ea4410":"All the columns having the data type of int64 except country column has the datatype of object","fd1579d2":"# Population","78e6e038":"# Weekly Death % Change","9b1c9548":"# PAIRPLOT OF COLUMNS","38d0c0a7":"There are total 47 rows and 10 columns in the dataset","8f656874":"# Cases in the last 7 days\/1M pop","34a6b764":"# Analysis of Every Column","15444e2a":"France has the highest number of cases","2011da9a":"# Checking For Null Values","9612905e":"# Cases in the last 7 days column analysis","ff7ecffd":"There is no null value in the dataset","c9fa06b9":"There are total 47 countries","387de002":"# Reading the DataSet","edab3139":"# Deaths in the last 7 days","6bf1e9b2":"# importing other libraries","a167a1f4":"Romania has the highest number of weekly case change percentage","d76b3bed":"# Weekly Case % Change","05388f54":"Russia has the highest number of deaths in the last 7 preceding days"}}