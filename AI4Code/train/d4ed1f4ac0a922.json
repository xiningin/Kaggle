{"cell_type":{"9d6a91ba":"code","710577c8":"code","8d42fc4f":"code","ea77d6aa":"code","e028b601":"code","8ea9e03f":"code","5d5ea553":"code","577a8748":"code","b8296663":"code","09f93da3":"code","5a62081f":"code","7f81acf5":"code","f64fe2cb":"code","9c6b5fa7":"code","da6efada":"code","64d6a872":"code","653d9d78":"code","2539ae6b":"code","6699b049":"code","41ddc7ff":"code","9e374e2b":"code","de3a5846":"code","18fcfca3":"code","420d4f3d":"code","00e1187b":"code","f49e1600":"code","104c1cb3":"code","251a9591":"code","87a50de2":"code","322dc80d":"code","27cb5c54":"code","8e1fc9ed":"code","1c83edd8":"code","92a1eaa3":"code","dfde4cbf":"code","9c9ddb0b":"code","c67e59ac":"markdown","83c73e1e":"markdown","5372cede":"markdown","616f26ed":"markdown","7790c009":"markdown","1a994c60":"markdown","cb131060":"markdown","57c1a386":"markdown","3c31c1a6":"markdown","389544e9":"markdown","c9088d15":"markdown","24aeb855":"markdown","678f6db2":"markdown","beb34b5a":"markdown","ca49c2b8":"markdown","9e9708d9":"markdown","1fb6e680":"markdown","379fbe6b":"markdown"},"source":{"9d6a91ba":"import pandas as pd","710577c8":"# Importing advertising.csv\nadvertising_multi = pd.read_csv('..\/input\/advertising-mul\/advertising.csv')","8d42fc4f":"# Looking at the first five rows\nadvertising_multi.head()","ea77d6aa":"# Looking at the last five rows\nadvertising_multi.tail()","e028b601":"# What type of values are stored in the columns?\nadvertising_multi.info()","8ea9e03f":"# Let's look at some statistical information about our dataframe.\nadvertising_multi.describe()","5d5ea553":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","577a8748":"# Let's plot a pair plot of all variables in our dataframe\nsns.pairplot(advertising_multi)","b8296663":"# Visualise the relationship between the features and the response using scatterplots\nsns.pairplot(advertising_multi, x_vars=['TV','Radio','Newspaper'], y_vars='Sales',size=7, aspect=0.7, kind='scatter')","09f93da3":"# Putting feature variable to X\nX = advertising_multi[['TV','Radio','Newspaper']]\n\n# Putting response variable to y\ny = advertising_multi['Sales']","5a62081f":"#random_state is the seed used by the random number generator. It can be any integer.\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7 , random_state=100)","7f81acf5":"from sklearn.linear_model import LinearRegression","f64fe2cb":"# Representing LinearRegression as lr(Creating LinearRegression Object)\nlm = LinearRegression()","9c6b5fa7":"# fit the model to the training data\nlm.fit(X_train,y_train)","da6efada":"# print the intercept\nprint(lm.intercept_)","64d6a872":"# Let's see the coefficient\ncoeff_df = pd.DataFrame(lm.coef_,X_test.columns,columns=['Coefficient'])\ncoeff_df","653d9d78":"# Making predictions using the model\ny_pred = lm.predict(X_test)","2539ae6b":"from sklearn.metrics import mean_squared_error, r2_score\nmse = mean_squared_error(y_test, y_pred)\nr_squared = r2_score(y_test, y_pred)","6699b049":"print('Mean_Squared_Error :' ,mse)\nprint('r_square_value :',r_squared)","41ddc7ff":"import statsmodels.api as sm\nX_train_sm = X_train\n#Unlike SKLearn, statsmodels don't automatically fit a constant, \n#so you need to use the method sm.add_constant(X) in order to add a constant. \nX_train_sm = sm.add_constant(X_train_sm)\n# create a fitted model in one line\nlm_1 = sm.OLS(y_train,X_train_sm).fit()\n\n# print the coefficients\nlm_1.params","9e374e2b":"print(lm_1.summary())","de3a5846":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","18fcfca3":"plt.figure(figsize = (5,5))\nsns.heatmap(advertising_multi.corr(),annot = True)","420d4f3d":"# Removing Newspaper from our dataset\nX_train_new = X_train[['TV','Radio']]\nX_test_new = X_test[['TV','Radio']]","00e1187b":"# Model building\nlm.fit(X_train_new,y_train)","f49e1600":"# Making predictions\ny_pred_new = lm.predict(X_test_new)","104c1cb3":"#Actual vs Predicted\nc = [i for i in range(1,61,1)]\nfig = plt.figure()\nplt.plot(c,y_test, color=\"blue\", linewidth=2.5, linestyle=\"-\")\nplt.plot(c,y_pred, color=\"red\",  linewidth=2.5, linestyle=\"-\")\nfig.suptitle('Actual and Predicted', fontsize=20)              # Plot heading \nplt.xlabel('Index', fontsize=18)                               # X-label\nplt.ylabel('Sales', fontsize=16)                               # Y-label","251a9591":"# Error terms\nc = [i for i in range(1,61,1)]\nfig = plt.figure()\nplt.plot(c,y_test-y_pred, color=\"blue\", linewidth=2.5, linestyle=\"-\")\nfig.suptitle('Error Terms', fontsize=20)              # Plot heading \nplt.xlabel('Index', fontsize=18)                      # X-label\nplt.ylabel('ytest-ypred', fontsize=16)                # Y-label","87a50de2":"from sklearn.metrics import mean_squared_error, r2_score\nmse = mean_squared_error(y_test, y_pred_new)\nr_squared = r2_score(y_test, y_pred_new)","322dc80d":"print('Mean_Squared_Error :' ,mse)\nprint('r_square_value :',r_squared)","27cb5c54":"X_train_final = X_train_new\n#Unlike SKLearn, statsmodels don't automatically fit a constant, \n#so you need to use the method sm.add_constant(X) in order to add a constant. \nX_train_final = sm.add_constant(X_train_final)\n# create a fitted model in one line\nlm_final = sm.OLS(y_train,X_train_final).fit()\n\nprint(lm_final.summary())","8e1fc9ed":"from sklearn.feature_selection import RFE","1c83edd8":"rfe = RFE(lm, 2)","92a1eaa3":"rfe = rfe.fit(X_train, y_train)","dfde4cbf":"print(rfe.support_)\nprint(rfe.ranking_)","9c9ddb0b":"import pandas as pd\nimport numpy as np\n# Importing dataset\nadvertising_multi = pd.read_csv('..\/input\/advertising-mul\/advertising.csv')\n\nx_news = advertising_multi['Newspaper']\n\ny_news = advertising_multi['Sales']\n\n# Data Split\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x_news, y_news, \n                                                    train_size=0.7 , \n                                                    random_state=110)\n\n# Required only in the case of simple linear regression\nX_train = X_train[:,np.newaxis]\nX_test = X_test[:,np.newaxis]\n\n# Linear regression from sklearn\nfrom sklearn.linear_model import LinearRegression\nlm = LinearRegression()\n\n# Fitting the model\nlm.fit(X_train,y_train)\n\n# Making predictions\ny_pred = lm.predict(X_test)\n\n# Importing mean square error and r square from sklearn library.\nfrom sklearn.metrics import mean_squared_error, r2_score\n\n# Computing mean square error and R square value\nmse = mean_squared_error(y_test, y_pred)\nr_squared = r2_score(y_test, y_pred)\n\n# Printing mean square error and R square value\nprint('Mean_Squared_Error :' ,mse)\nprint('r_square_value :',r_squared)","c67e59ac":"### Step_6 : Predictions","83c73e1e":"From the data above, you can conclude that Newspaper is insignificant.","5372cede":"### Step_7: Calculating Error Terms","616f26ed":"### Simple Linear Regression: Newspaper(X) and Sales(y)","7790c009":"### Step_5 : Model Evaluation","1a994c60":"Lets now solve a basic Linear Regression problem.<br\/>\n**Problem Statement** <br\/>\nLet's say there is a Company want to increase it's sales. They are investing lot of money on marketing in Newspaper, TV and Radio.\nThey want to know which marketing(Newspaper or TV or Radio) is impacting more on Sales. ","cb131060":"The goal of recursive feature elimination (RFE) is to select features by recursively considering smaller and smaller sets of features. First, the estimator is trained on the initial set of features and the importance of each feature is obtained either through a coef_ attribute or through a feature_importances_ attribute. Then, the less important features are pruned from the the current set of features. This procedure is recursively repeated on the pruned dataset until the desired number of features to select is reached.","57c1a386":"### Checking for P-value Using STATSMODELS","3c31c1a6":"### Model Refinement Using RFE","389544e9":"### Step_3: Splitting the Data for Training and Testing","c9088d15":"From the above result we may infern that if TV price increses by 1 unit it will affect sales by 0.045 units.","24aeb855":"From the above we can see that Newspaper(p value is very high) is insignificant.","678f6db2":"### Step_8 : Implementing the results and running the model again","beb34b5a":"### Step_4 : Performing Linear Regression","ca49c2b8":"## Multiple Linear Regression\n\nI will explain regression in the simplest possible way. Lets assume that you are using a cab to go from place A to B. You notice that there's a fixed fare, let's say, $3 or 50 rupees (for example).  You owe this fixed amount to the driver the moment you step into the cab, irrespective of the distance you travel with him.\nAs the cab starts moving, for every 100 meters or 1 kilometer, the fare increases by a certain amount. If you're not moving, and you're stuck in traffic, for every additional minute, you have to pay more. As the distance increases, your fare increases. As the waiting period increases, your fare increases. Therefore, your fare is calculated based on the distance and wait  period. There is a relation with respect to distance, wait time and fare. This is what regression is.<br\/> \nLet's  form an equation based on the above scenario, <font size='4'>fare = fixed amount + (distance)*(X) + (wait time)*(Y)<\/font>.<br\/>\nFrom the above equation, if you know the  fare, distance and wait time, using regression you can find the constant and the relationship among the variables. So, regression is used to find a formula that fits the relationship between the variables(like fare, distance..etc) and we can use that formula to predict fare value.","9e9708d9":"### Step_1 : Importing and Understanding Data","1fb6e680":"### Step_2: Visualising Data","379fbe6b":"**Observe that R_square_value is very low, which indicates that it is insignificant to the model**"}}