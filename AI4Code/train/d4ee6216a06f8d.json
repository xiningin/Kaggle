{"cell_type":{"134d22c2":"code","ec63d909":"code","af92642f":"code","906b7716":"code","e73cb5a4":"code","eb18f039":"code","506e4226":"code","ab96363f":"code","f420d0a6":"code","e5e22b00":"code","5c5f938b":"code","e2f1ad9c":"code","1e5e665a":"code","047e34d2":"code","904aec95":"code","45a06fcd":"code","8a167501":"code","af137f12":"code","0719c79e":"code","e4dab085":"code","6bcc14d9":"code","5595aaea":"markdown","c71779b6":"markdown","f443fed2":"markdown","47a41367":"markdown"},"source":{"134d22c2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir('..\/input'))\n\n# Any results you write to the current directory are saved as output.","ec63d909":"#We create Pandas dataframe.\ndata = pd.read_csv('..\/input\/2015.csv')","af92642f":"#We will see the information about datasets.\ndata.info()","906b7716":"#default value is 5. We will see first 5 dataset.\ndata.head()","e73cb5a4":"data.corr()","eb18f039":"#correlation map\nf,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot = True, linewidth =.5, fmt = '.1f', ax=ax)\nplt.show()","506e4226":"data.head(10)","ab96363f":"data.columns","f420d0a6":"#Line Plot\n#color=color, label=label,linewidth=width of line, alpha=opacity, grid=grid, linestyle=style of line\n\ndata.Generosity.plot(kind = 'line', color = 'g',label = 'Generosity',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.Freedom.plot(color = 'r',label = 'Freedom',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","e5e22b00":"#Scatter Plot\n#x=Generosity y=Freedom\ndata.plot(kind = 'scatter', x = 'Generosity', y = 'Freedom', alpha = 0.5, color = \"blue\")\nplt.xlabel('Generosity')\nplt.ylabel('Freedom')\nplt.title('Generosity-Freedom Scatter Plot')\nplt.show()","5c5f938b":"#Histogram\n#bins = number of bar figure\ndata.Freedom.plot(kind = 'hist', bins = 50, figsize = (12,12))\nplt.show()","e2f1ad9c":"#create dictionary and look its keys and values\ndictionary = {'Elon': 'S\u00f6nmez', 'Beyza':'Aytar'}\nprint(dictionary.keys())\nprint(dictionary.values())","1e5e665a":"dictionary['\u015eule']= \"Solmaz\"\nprint(dictionary)\ndictionary['Eren'] = \"\u015eahin\"\ndictionary['Arda'] = \"D\u00fczg\u00fcn\"\nprint(dictionary)\ndel dictionary['\u015eule']\nprint(dictionary)\nprint('Beyza' in dictionary)\nprint(dictionary)\ndictionary.clear()\nprint(dictionary)","047e34d2":"data = pd.read_csv('..\/input\/2015.csv')","904aec95":"series = data['Generosity']\nprint(type(series))\ndata_frame = data[['Generosity']]\nprint(type(data_frame))","45a06fcd":"#1-Filtering Pandas data frame\nx = data['Generosity'] > 0.5\ndata[x]","8a167501":"#2-Filtering pandas with logical_and\ndata[np.logical_and(data['Generosity'] > 0.5, data['Freedom'] > 0.4)]","af137f12":"data[(data['Generosity'] > 0.5) & (data['Freedom'] > 0.4)]","0719c79e":"i = 0\nwhile i!=3:\n    print('i is:', i)\n    i+=3\nprint(i, 'is equal to 3')","e4dab085":"lis=[1, 2, 3, 4 ,5]\n\nfor index, value in enumerate(lis):\n    print(index, \":\", value)\n","6bcc14d9":"#For dictionary\ndictionary = {'Spain':'Madrid', 'France':'Paris', 'Turkey':'Ankara', 'Germany': 'Berlin' }\nfor key, value in dictionary.items():\n    print(key, \",\" , value)\nprint('')\n","5595aaea":"********While and For Loop****","c71779b6":"**PANDAS**","f443fed2":"**MATPLOTLIB**","47a41367":"**DICTIONARY**"}}