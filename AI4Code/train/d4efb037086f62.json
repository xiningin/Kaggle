{"cell_type":{"b5adc3af":"code","d05e3687":"code","ac3c0ff8":"code","262e6516":"code","2dbd1531":"code","bb55ab3d":"code","12f8f4bd":"code","3f607964":"code","4bb15fc6":"code","44c9a5fc":"code","4e5cefc0":"code","1e20496b":"markdown","ddf5900c":"markdown","731fcec1":"markdown","bfee3012":"markdown"},"source":{"b5adc3af":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os, sys, glob\n\n# Any results you write to the current directory are saved as output.","d05e3687":"tickdata = dict()\nfor root, dirs, filenames in os.walk('\/kaggle\/input'):\n    for dirname in dirs:\n        files_csv_zg = glob.glob(os.path.join(root, dirname,'*.csv.zg'))\n        tickdata[str(dirname)] = files_csv_zg","ac3c0ff8":"import tensorflow as tf","262e6516":"datasets = dict()\nfor ccy, files in tickdata.items():\n    datasets[ccy]=tf.data.experimental.CsvDataset(files, [tf.string,tf.float32,tf.float32],header=True, compression_type=\"GZIP\",select_cols=[0,1,2])","2dbd1531":"input_ds = next(iter(datasets.values()))\ninput_ds.element_spec","bb55ab3d":"for f in input_ds.take(5):\n    print(f)","12f8f4bd":"from datetime import datetime, timedelta","3f607964":"def conv_func(dt, bid, ask):\n    txt = lambda t : t.numpy().decode('ascii')\n    conv = lambda z : pd.Timestamp(datetime.strptime(z.numpy().decode('ascii'), '%Y-%m-%d %H:%M:%S.%f')).to_datetime64()\n    return tf.py_function(txt,[dt], tf.string), tf.py_function(conv, [dt], tf.float64), bid, ask,(bid+ask)\/2, ask-bid","4bb15fc6":"ts_data = dict()\nfor key, ds in datasets.items():\n    ts_data[key] = ds.map(conv_func)\n    ts_data[key].cache(key)","44c9a5fc":"test_ds = next(iter(ts_data.values()))\ntest_ds.element_spec","4e5cefc0":"for f in test_ds.take(5):\n    print(f)","1e20496b":"### Load the gzipped csv, extension set to .csv.zg to disable decompression in kaggle","ddf5900c":"### Conversion function\n\n```(datetime: string, bid: float32, ask: float32) -> (dateime: string, timestamp: float64,  bid: float32, ask: float32, mid: float32, spread:float32)```","731fcec1":"### Listing of tick data files","bfee3012":"### Created tensorflow CsvDataset for time series data"}}