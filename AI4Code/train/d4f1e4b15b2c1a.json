{"cell_type":{"70753851":"code","4509c8dc":"code","8f6e41f4":"code","119dfaae":"code","e747e335":"code","18e0bc12":"code","7032b5e4":"code","f6b70dc2":"code","9c265b68":"code","77248610":"code","ba6253ae":"code","2b5865a8":"markdown","5b18ca63":"markdown","9c297302":"markdown","4a4d177a":"markdown","0a01f609":"markdown","0efb2570":"markdown","5b31be39":"markdown","8699c7ba":"markdown","090e2c80":"markdown"},"source":{"70753851":"import numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom datetime import datetime\n\nimport sklearn.preprocessing\nimport sklearn.model_selection\n\nimport sklearn.cluster\nimport umap\nimport sklearn.neural_network\nfrom sklearn.metrics import plot_confusion_matrix","4509c8dc":"#Importa y adec\u00faa los datos\n\ndataCases = pd.read_csv('..\/input\/uncover\/UNCOVER\/our_world_in_data\/coronavirus-disease-covid-19-statistics-and-research.csv')\ndataMobility = pd.read_csv('..\/input\/uncover\/UNCOVER\/google_mobility\/regional-mobility.csv')\n\ndataMobility = dataMobility.sort_values(by=['country','date'])\nparciales = dataMobility[dataMobility['region']!='Total'].index\ndataMobility = dataMobility.drop(parciales,axis=0).drop(['region'],axis=1)\ndataMobility = dataMobility.fillna(0)\n\ndataCases = dataCases.rename(columns = {'location':'country'})\nfechasSinCasos = dataCases[dataCases['total_cases']==0].index\ndataCases = dataCases.drop(fechasSinCasos,axis=0) # S\u00f3lo considera fechas despu\u00e9s del primer caso\ndataCases = dataCases.sort_values(by=['country','date'])\ndataCases = dataCases.drop(['iso_code','total_tests','new_tests','total_tests_per_thousand', 'new_tests_per_thousand', 'tests_units'],axis=1)\ndataCases['date'] = pd.to_datetime(dataCases['date'])","8f6e41f4":"# Omite los pa\u00edses que no se encuentren en ambos datasets\n\npaisesC = dataCases['country'].unique()\npaisesM = dataMobility['country'].unique()\npaises = []\n\nfor pais in paisesM:\n    a = dataMobility[dataMobility['country']==pais]\n    b = a.shape\n    if b[0] < 63: # Remuevo los pa\u00edses que no han reportado alguna fecha\n        dataMobility = dataMobility.drop(a.index,axis=0)\n        #print('*'+pais)\n    elif pais not in paisesC: #Remuevo los pa\u00edses que no reportaron casos\n        dataMobility = dataMobility.drop(a.index,axis=0)\n        #print('.'+pais)\n    else:\n        paises.append(pais)\n\nfor pais in paisesC:\n    a = dataCases[dataCases['country']==pais]\n    if pais not in paises: #Remuevo los paises que no reportaron movilidad\n        dataCases = dataCases.drop(a.index,axis=0)\n        #print(pais)","119dfaae":"# Toma los datos que se usar\u00e1n\n\nmovPaises = []\nfor pais in paises:\n    a = dataMobility[dataMobility['country']==pais]\n    datosPais = np.array(a.drop(['country','date'],axis=1))\n    movPaises.append(datosPais)\n\ntasaCasos = [] # Tasa promedio (diaria) de casos, por cada mill\u00f3n de habitantes\nfor pais in paises:\n    a = dataCases[dataCases['country']==pais]\n    fechas = np.array(a['date'],dtype='datetime64[D]')\n    propCasos = np.array(a['total_cases_per_million'])[-1]\n    dias = (fechas[-1]-fechas[0]).astype(int)\n    tasaCasos.append(propCasos\/dias)","e747e335":"# Reescala y reformatea los datos\n\nmovPaises = np.array(movPaises)\nX = movPaises.reshape(len(movPaises),-1)\nY = np.array(tasaCasos)\n\nscaler = sklearn.preprocessing.StandardScaler()\nX_train = scaler.fit_transform(X)","18e0bc12":"plt.figure(figsize=(35,10))\nplt.plot(paises,Y)\nplt.xticks(paises,rotation=90)\nplt.ylabel('Tasa de casos')\nplt.grid()\nplt.title('Casos nuevos, por d\u00eda, por mill\u00f3n de habitantes de cada pa\u00eds')\nplt.show()","7032b5e4":"# Visualizaci\u00f3n reducida por UMAP con clusters por k-means\n\nreducer = umap.UMAP(n_neighbors=15)\nreducer.fit(X_train)\nembedding = reducer.transform(X_train)\n\nn_clusters = 3\nk_means = sklearn.cluster.KMeans(n_clusters=n_clusters)\nk_means.fit(embedding)\ncluster = k_means.predict(embedding)\ndistance = k_means.transform(embedding)","f6b70dc2":"plt.figure(figsize=(15,15))\nplt.scatter(embedding[:,0], embedding[:,1], cmap='Paired', s=20.0,c=cluster)\nplt.title('Reducci\u00f3n por UMAP de los comportamientos de movilidad')\n\nsuramerica = ['Argentina','Bolivia','Brazil','Chile','Colombia','Ecuador','Panama','Paraguay','Peru','Uruguay','Venezuela']\nfor i in range(len(paises)):   \n    x = embedding[:,0][i]\n    y = embedding[:,1][i]\n    color = 'steelblue'\n    size = 'x-small'\n    if paises[i] in suramerica:\n        color = 'red'\n        size = 'small'\n    plt.text(x+0.01,y+0.01,paises[i],color=color,fontsize=size)","9c265b68":"# Clasificaci\u00f3n seg\u00fan regi\u00f3n\n\nrestoLatam = ['Puerto Rico','Mexico','Nicaragua','Guatemala','Honduras','Costa Rica','El Salvador','Dominican Republic','Haiti','Aruba']\nLatam = suramerica + restoLatam\n\nY2 = [1 if i in Latam else 0 for i in paises]\nX_train, X_test, Y_train, Y_test = sklearn.model_selection.train_test_split(X, Y2, test_size=0.5)\nscaler = sklearn.preprocessing.StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\n\nmlp = sklearn.neural_network.MLPClassifier(activation='relu',hidden_layer_sizes=(63,6),max_iter=10000)\nmlp.fit(X_train, Y_train)\n\nLoss = mlp.loss_\nF1 =  sklearn.metrics.f1_score(Y_test, mlp.predict(X_test),average='macro')\nm = sklearn.metrics.confusion_matrix(Y_test, mlp.predict(X_test))\n\nplot_confusion_matrix(mlp, X_test, Y_test)\nplt.title('F1 = {:.2f} ; Loss = {:.2f}'.format(F1,Loss))\nplt.xticks([0,1],['Mundo','Latam'])\nplt.yticks([1,0],['Latam','Mundo'])\nplt.show()","77248610":"Y3 = 1*(Y>np.sort(Y)[int(len(Y)\/2)])\n\nX_train, X_test, Y_train, Y_test = sklearn.model_selection.train_test_split(X, Y3, test_size=0.7)\nscaler = sklearn.preprocessing.StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\n\nmlp = sklearn.neural_network.MLPClassifier(activation='logistic',hidden_layer_sizes=(7,9,6),max_iter=10000)\nmlp.fit(X_train, Y_train)\n\nLoss = mlp.loss_\nF1 =  sklearn.metrics.f1_score(Y_test, mlp.predict(X_test),average='macro')\nm = sklearn.metrics.confusion_matrix(Y_test, mlp.predict(X_test))\n\nplot_confusion_matrix(mlp, X_test, Y_test)\nplt.title('F1 = {:.2f} ; Loss = {:.2f}'.format(F1,Loss))\nplt.xticks([0,1],['Bajo','Alto'])\nplt.yticks([1,0],['Alto','Bajo'])\nplt.show()","ba6253ae":"Y_lat = [Y[i] for i in range(len(paises)) if paises[i] in Latam ]\nY_lat = 1*(Y_lat>np.sort(Y)[int(len(Y)\/2)])\nX_lat = [X[i] for i in range(len(paises)) if paises[i] in Latam ]\n\nLoss = mlp.loss_\nF1 =  sklearn.metrics.f1_score(Y_lat, mlp.predict(X_lat),average='macro')\nm = sklearn.metrics.confusion_matrix(Y_lat, mlp.predict(X_lat))\n\nplot_confusion_matrix(mlp, X_lat, Y_lat)\nplt.title('F1 = {:.2f} ; Loss = {:.2f}'.format(F1,Loss))\nplt.xticks([0,1],['Bajo','Alto'])\nplt.yticks([1,0],['Alto','Bajo'])\nplt.show()","2b5865a8":"### Aplicaci\u00f3n del modelo sobre paises latinoamericanos\n\nUna vez se tuvo el modelo entrenado con los datos globales. Se procedi\u00f3 a probarlo sobre los datos de los paises de latinoamerica. ","5b18ca63":"Como se observa del puntaje F1, esta relaci\u00f3n entre comportamientos en movilizaci\u00f3n y tasa de infectados parece ser mucho m\u00e1s debil - o incluso inexistente - en el caso de los pa\u00edses suramericanos. Cabe resaltar que el modelo ha predicho que todos los paises de latinoamerica deber\u00edan estar en la mitad 'alta' de tasa de coronavirus, a pesar de que s\u00f3lo la mitad pertenece a esa categor\u00eda. Esto da lugar a dos posibilidades: 1) los comportamientos que en otros paises implicar\u00edan un alto n\u00famero de casos de coronavirus no tienen la misma correlaci\u00f3n para latinoam\u00e9rica, \u00f3 2) los datos de latinoam\u00e9rica no son tan confiables como los del resto del mundo","9c297302":"Se puede ver que el modelo obtenido es bastante confiable, con un valor de F1 de 0.76.","4a4d177a":"Como se observa en la gr\u00e1fica superior, al hacerse una reducci\u00f3n de dimensionalidad sobre los datos de comportamiento en movilidad (usando UMAP) tienden a agruparse muy claramente los paises de Sur\u00e1merica, lo que se ve reflejado adem\u00e1s en la categorizaci\u00f3n por clusters realizada. En dicho grupo se ubican tambi\u00e9n pa\u00edses de Centroam\u00e9rica y el Caribe, adem\u00e1s de Espa\u00f1a y Portugal - entre estos paises conforman una mayor\u00eda significativa en este cluster. Asimismo, son pocos los pa\u00edses que resultan en otras ubicaciones de este plano. No parece ser mera coincidencia este comportamiento, puesto que se observa c\u00f3mo pa\u00edses de otras regiones tambi\u00e9n se agrupan, como los pa\u00edses b\u00e1lticos, los paises escandinavos, los paises del golfo \u00e1rabe, paises del sur de \u00c1frica, etc.\n\nEstos patrones pueden estar reflejando c\u00f3mo comportamientos culturales comunes entre estos pa\u00edses iberoamericanos (y de cada otra regi\u00f3n) definen la reacci\u00f3n de las poblaciones a la pandemia, o pueden ser tambi\u00e9n producto de la cercan\u00eda geogr\u00e1fica y c\u00f3mo esta influy\u00f3 en el cronograma de llegada del COVID a dichos pa\u00edses.","0a01f609":"# Clasificaci\u00f3n seg\u00fan regi\u00f3n geogr\u00e1fica usando una red neuronal\n\nDado el comportamiento observado en la proyecci\u00f3n, se busc\u00f3 generar un algoritmo que pudiera clasificar los pa\u00edses entre latinoamericanos y no-latinoamericanos, basado en estos datos de movilizaci\u00f3n durante la pandemia. Para esto se utiliz\u00f3 una red neuronal de dos capas, como se observa a continuaci\u00f3n, al igual que en el caso anterior, los par\u00e1metros se escogieron basado en el mejor comportamiento despu\u00e9s de varios intentos variando n\u00famero de capas, tama\u00f1o de capas y funci\u00f3n de activaci\u00f3n.","0efb2570":"# Predicci\u00f3n de la tasa de infectados a partir del comportamiento en movilizaci\u00f3n\n\nPara finalizar, se utiliz\u00f3 otra vez una red neuronal, esta vez para identificar relaciones entre los patrones de movilizaci\u00f3n y la tasa de infecciones que se da en cada pa\u00eds. Para hacer de este un problema de clasificaci\u00f3n, se dividieron los paises en dos grupos: los de alta tasa de infectados y los de baja tasa, asignando a cada categor\u00eda la mitad de los datos. Se eligi\u00f3 esta manera de dividir con base en lo observado en la gr\u00e1fica de tasas de infecci\u00f3n que se encuentra arriba: hay muchos pa\u00edses (aproximadamente la mitad) cuyas tasas de infecci\u00f3n apenas alcanzan valores de 10, mientras que el resto tiene tasas que oscilan entre 20 y 100 infecciones diarias por mill\u00f3n de habitantes.","5b31be39":"El valor de F1 obtenido y la matriz de confusi\u00f3n correspondiente indican claramente lo que se observ\u00f3 en la representaci\u00f3n de UMAP: es completamente posible hacer un modelo que prediga si un pa\u00eds pertenece a Latinoam\u00e9rica a partir de los comportamientos de movilidad que se dan en la poblaci\u00f3n durante la pandemia.","8699c7ba":"# Visualizaci\u00f3n de los comportamientos de movilidad de cada pa\u00eds usando UMAP\n\nSe utiliz\u00f3 el algoritmo de UMAP para visualizar los datos de comportamiento en movilizaci\u00f3n de cada pa\u00eds - que tienen 378 dimensiones - mediante una proyecci\u00f3n en 2D, con el fin de identificar si hay comportamientos comunes en latinoam\u00e9rica. Se realizaron distintas iteraciones para esta proyecci\u00f3n, usando distintos valores de 'n_neighbors'. Todas las iteraciones resultaban en agrupaciones parecidas, pero se escogi\u00f3 la que daba una separaci\u00f3n m\u00e1s clara entre datos; esa iteraci\u00f3n es la que se ilustra a continuaci\u00f3n.","090e2c80":"# Introducci\u00f3n\n\nSe hizo un an\u00e1lisis de comportamiento poblacional en medio de la pandemia de COVID-19, usando los datos provenientes de 'our_world_in_data' y de 'google_mobility'. En particular, como variaba la movilizaci\u00f3n de las personas hacia distintos tipos de ubicaciones: locales de ventas, farmacias y luegares de mercado, parques, estaciones de transporte, lugares de trabajo y residencias. Usando esta informaci\u00f3n se buscaba: 1) identificar si los pa\u00edses de Suram\u00e9rica presentaban patrones discernibles que los diferencien de otras regiones; 2) establecer si hay una relaci\u00f3n fuerte entre los patrones de movilizaci\u00f3n y la tasa de casos en cada pa\u00eds, particularmente en lationam\u00e9rica.\n\nSe consider\u00f3 c\u00f3mo fluctuaban los patrones de movilizaci\u00f3n diariamente en cada pa\u00eds - en un periodo de dos meses, comprendido entre febrero 14 y abril 17 - y la tasa de casos confirmados - medida como casos nuevos diarios promedio por cada mill\u00f3n de habitantes. M\u00e1s adelante se muestra el valor de esta tasa para cada pa\u00eds."}}