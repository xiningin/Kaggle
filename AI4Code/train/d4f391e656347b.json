{"cell_type":{"e39ebf1a":"code","f3a8ada4":"code","494db38b":"code","ef9c2af7":"code","01050fa1":"code","6f20b66c":"code","d82d201a":"code","9355bd57":"code","473c077f":"code","7fea45cc":"code","8c344e69":"code","782ceace":"code","57dee126":"code","8f44cdc1":"code","1cf3d797":"code","9627ea8b":"code","3fb38437":"code","a776dc26":"code","cac36a8b":"code","fe1e87bc":"code","d4cae949":"code","22d623dc":"code","c8a5635f":"code","bc536a21":"code","e129dc04":"code","10aae506":"code","c9796536":"code","390fdc27":"code","27e0e3b8":"code","65b19cbc":"code","63abedc1":"code","37c34d79":"code","ab359a00":"code","47b6f4af":"code","3d10ef73":"markdown"},"source":{"e39ebf1a":"import pandas as pd\nimport numpy as np\nimport cufflinks as cf\ncf.go_offline()","f3a8ada4":"tnc = pd.read_csv(\"..\/input\/titanicdataset-traincsv\/train.csv\")","494db38b":"tnc.shape","ef9c2af7":"tnc.head()","01050fa1":"tnc.info()","6f20b66c":"tnc.describe()","d82d201a":"tnc.corr()","9355bd57":"tnc = tnc.drop([\"Name\",\"Ticket\",'PassengerId'],axis=1)","473c077f":"tnc","7fea45cc":"tnc.iplot(kind=\"scatter\",mode=' markers+text')","8c344e69":"tnc.iplot(x='Pclass',y='Age',kind=\"box\",boxpoints=\"suspectedoutliers\")\ntnc.iplot(x='Pclass',y='Age',kind=\"bar\",barmode=\"overlay\")","782ceace":"tnc.isnull().sum()","57dee126":"tnc.isnull().sum().iplot(kind=\"line\",mode=\"lines+markers\")","8f44cdc1":"tnc[\"Survived\"].value_counts()","1cf3d797":"tnc['Survived'][tnc['Sex']== 'male'].value_counts()","9627ea8b":"tnc['Survived'][tnc['Sex']== 'male'].value_counts().iplot(kind=\"bar\",xTitle='survied',yTitle='male count')","3fb38437":"tnc['Survived'][tnc['Sex']==\"female\"].value_counts(normalize=True)","a776dc26":"tnc['Survived'][tnc['Sex']==\"female\"].value_counts(normalize=True).iplot(kind=\"bar\",xTitle='survied',yTitle='female percent')","cac36a8b":"survived_sex = tnc[tnc['Survived']==1]['Sex'].value_counts()\ndead_sex = tnc[tnc['Survived']==0]['Sex'].value_counts()\ntnc1 = pd.DataFrame([survived_sex,dead_sex])\ntnc1.index = ['Survived','Dead']\ntnc1.iplot(kind='bar',barmode='stack', title='Survival by the Sex')","fe1e87bc":"tnc.pivot(columns='Pclass',values='Age').iplot(kind='box')","d4cae949":"def impute_age(cols):\n    Age=cols[0]\n    Pclass=cols[1]\n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 37\n        elif Pclass == 2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age","22d623dc":"tnc['Age']=tnc[[\"Age\",'Pclass']].apply(impute_age,axis=1)\n    ","c8a5635f":"tnc[\"Age\"].isnull().sum()","bc536a21":"Sex=pd.get_dummies(data=tnc['Sex'],drop_first=True)","e129dc04":"Sex","10aae506":"tnc=tnc.drop('Sex',axis=1)","c9796536":"tnc\n","390fdc27":"tnc=pd.concat([tnc,Sex],axis=1)","27e0e3b8":"tnc","65b19cbc":"tnc = tnc.dropna(subset=['Embarked'])\ncode = pd.get_dummies(tnc['Embarked'], prefix='Embarked')\ntnc = pd.concat([tnc, code], axis=1)\ntnc.head()","63abedc1":"tnc['Cabin'] = tnc['Cabin'].fillna('U')\ntnc['Cabin'] = tnc['Cabin'].apply(lambda x: x[0])\ncode = pd.get_dummies(tnc['Cabin'], prefix='Cabin')\ntnc = pd.concat([tnc, code], axis=1)\ntnc.head()","37c34d79":"tnc = tnc.drop(['Cabin'],axis=1)","ab359a00":"tnc = tnc.drop(['Embarked'],axis=1)","47b6f4af":"tnc.head()","3d10ef73":"pandas.pivot(index, columns, values) function produces pivot table based on 3 columns of the DataFrame. Uses unique values from index \/ columns and fills with values.\n\nParameters:\nindex[ndarray] : Labels to use to make new frame\u2019s index\ncolumns[ndarray] : Labels to use to make new frame\u2019s columns\nvalues[ndarray] : Values to use for populating new frame\u2019s values\n\nReturns: Reshaped DataFrame\nException: ValueError raised if there are any duplicates."}}