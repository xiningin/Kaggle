{"cell_type":{"88675dc4":"code","b84f1dfa":"code","7149a170":"code","28456a1c":"code","a5c2f0e1":"code","b7f85ced":"code","fffb4e71":"code","6217b20f":"code","7c715dc4":"code","7c744f76":"code","1f39327b":"code","bba6a5e0":"code","faafbc0d":"code","d10bb76b":"code","0f9d7c1e":"code","23f02c56":"code","7f9e3e73":"code","5268b257":"code","6e8703e4":"code","379c73a9":"code","a6be7416":"code","c5ced3c1":"markdown","9248e17f":"markdown","7ec1d9ca":"markdown","b8368496":"markdown","78972c4a":"markdown","6fe126a8":"markdown","7cdb6b8e":"markdown","84c7b6bd":"markdown","6ba0dcda":"markdown"},"source":{"88675dc4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b84f1dfa":"data_train = pd.read_csv('\/kaggle\/input\/sekolahdatambc2021\/train.csv')","7149a170":"print('Usia tertua responden:', data_train['usia'].max())\nprint('Usia termuda responden:', data_train['usia'].min())\nprint('Rata-rata usia responden:', data_train['usia'].mean())\nprint('Nilai tengah usia responden:', data_train['usia'].median())\nprint('Modus usia responden:', data_train['usia'].mode()[0])","28456a1c":"train_jkt = data_train.groupby('asal_daerah').get_group('jakarta')\ntrain_jkt['pendidikan_terakhir'].value_counts().plot(kind='bar')","a5c2f0e1":"train_penghasilan = data_train.groupby('Category').get_group(1)['pekerjaan'].value_counts().sort_index(ascending=True).to_frame().rename(columns={'pekerjaan' : 'penghasilan tinggi'})\ntrain_penghasilan['penghasilan rendah'] = data_train.groupby('Category').get_group(0)['pekerjaan'].value_counts().sort_index(ascending=True)","b7f85ced":"train_penghasilan.plot(kind='bar')","fffb4e71":"train_pendidikan = data_train.groupby(['lama_pendidikan', 'pendidikan_terakhir']).pendidikan_terakhir.value_counts()\ntrain_pendidikan.unstack().plot.box()","6217b20f":"train_pendidikan","7c715dc4":"from pandas_profiling import ProfileReport\nProfileReport(data_train)","7c744f76":"data_train=data_train.drop(['invest_rugi', 'invest_untung'], axis=1)\n","1f39327b":"data_train.tipe_pekerjaan.value_counts()","bba6a5e0":"data_train.loc[(data_train['tipe_pekerjaan']=='Belum bekerja')]","faafbc0d":"data_train.pekerjaan.value_counts()","d10bb76b":"data_train.groupby(['pekerjaan', 'tipe_pekerjaan']).tipe_pekerjaan.value_counts()","0f9d7c1e":"data_train = pd.read_csv('\/kaggle\/input\/sekolahdatambc2021\/train.csv')\ndata_test = pd.read_csv('\/kaggle\/input\/sekolahdatambc2021\/test.csv')","23f02c56":"data_train.info()","7f9e3e73":"data_test.info()","5268b257":"# Drop Missing Columns\ndata_train = data_train.drop(['invest_rugi', 'invest_untung'], axis=1)\ndata_test = data_test.drop(['invest_rugi', 'invest_untung'], axis=1)\n\n# Impute with Most Frequence\ndata_train = data_train.fillna(data_train[['tipe_pekerjaan', 'status_dalam_keluarga']].mode(), inplace=True)\ndata_test = data_test.fillna(data_test[['tipe_pekerjaan', 'status_dalam_keluarga']].mode(), inplace=True)\n\n# Impute with new categorical\ndata_train = data_train['pekerjaan'].fillna('Others')\ndata_test = data_test['pekerjaan'].fillna('Others')\n\n","6e8703e4":"# Label Encoding\nfrom sklearn.preprocessing import LabelEncoder\nlabelencoder = LabelEncoder()\n\n# Label Encoding Data Train\ndata_train[\"tipe_pekerjaan\"] = labelencoder.fit_transform(data_train[\"tipe_pekerjaan\"])\ndata_train[\"pendidikan_terakhir\"] = labelencoder.fit_transform(data_train[\"pendidikan_terakhir\"])\ndata_train[\"pekerjaan\"] = labelencoder.fit_transform(data_train[\"pekerjaan\"])\ndata_train[\"status_perkawinan\"] = labelencoder.fit_transform(data_train[\"status_perkawinan\"])\ndata_train[\"status_dalam_keluarga\"] = labelencoder.fit_transform(data_train[\"status_dalam_keluarga\"])\ndata_train[\"jenis_kelamin\"] = labelencoder.fit_transform(data_train[\"jenis_kelamin\"])\ndata_train[\"asal_daerah\"] = labelencoder.fit_transform(data_train[\"asal_daerah\"])\n\n# Label Encoding Data Test\ndata_test[\"tipe_pekerjaan\"] = labelencoder.fit_transform(data_test[\"tipe_pekerjaan\"])\ndata_test[\"pendidikan_terakhir\"] = labelencoder.fit_transform(data_test[\"pendidikan_terakhir\"])\ndata_test[\"pekerjaan\"] = labelencoder.fit_transform(data_test[\"pekerjaan\"])\ndata_test[\"status_perkawinan\"] = labelencoder.fit_transform(data_test[\"status_perkawinan\"])\ndata_test[\"status_dalam_keluarga\"] = labelencoder.fit_transform(data_test[\"status_dalam_keluarga\"])\ndata_test[\"jenis_kelamin\"] = labelencoder.fit_transform(data_test[\"jenis_kelamin\"])\ndata_test[\"asal_daerah\"] = labelencoder.fit_transform(data_test[\"asal_daerah\"])\n","379c73a9":"data_train.head(5)","a6be7416":"data_test.head(5)","c5ced3c1":"## Untuk soal di bawah ini, gunakan data train.\n\npath : '\/kaggle\/input\/sekolahdatambc2021\/train.csv'","9248e17f":"Lakukanlah data preparation pada dataset yang diberikan sedemikian sehingga dapat dilakukan feature engineering serta pemodelan machine learning (Tugas feature engineering diberikan pada day berikutnya).\n\nnote : untuk mempermudah pemodelan machine learning, jika anda melakukan pembersihan data train, anda juga perlu melakuakn pembersihan data test.\n\nPath :\n- \/kaggle\/input\/sekolahdatambc2021\/train.csv\n- \/kaggle\/input\/sekolahdatambc2021\/test.csv","7ec1d9ca":"## Analisis Tambahan\nAnalisislah data berikut, carilah insight menarik atau informasi yang dapat dibagikan kepada kami :)\n\npath 1 : '\/kaggle\/input\/sekolahdatambc2021\/titanic_data.csv'\n\npath 2 : '\/kaggle\/input\/sekolahdatambc2021\/data_mix.csv'","b8368496":"Lakukanlah visualisasi dari data:\n- Jumlah responden berdomisili jakarta berdasarkan pendidikan terakhir (gunakan bar plot).\n\n- Perbandingan responden berpenghasilan tinggi dan rendah dari masing-masing profesi (gunakan kolom \"kategori\" dan \"pekerjaan\". Gunakan bar plot.\n\n- Perbandingan responden berpenghasilan tinggi dan rendah dari setiap kelompok umur per 10 tahun (gunakan kolom \"kategori\" dan \"pekerjaan\". Gunakan bar plot.\n- Distribusi lama pendidikan responden dari setiap pendidikan terakhir yang dilalui (gunakan boxplot untuk mempermudah terlihatnya outliers).","78972c4a":"Apa yang bisa kamu simpulkan dari visualisasi berbagai chart pada bagian sebelumnya? Jelaskan juga apabila terdapat outliers dari visualisasi tersebut.\n\nhint : jawab dengan menambahkan markdown","6fe126a8":"## Milestone 2 : Feature Engineering dan Modelling\n\nTugas dapat dikerjakan dengan menggunakan dataset yang diberikan. Tugas baru dapat dikerjakan setelah 24 Juli 2021.\n\nPre-requisites : Materi day 3.","7cdb6b8e":"Carilah:\n- Usia tertua responden.\n- Usia termuda responden.\n- Rata-rata usia responden.\n- Nilai tengah usia responden.\n- Modus usia responden. Jika terdapat dua atau lebih nilai modus, ambil angka pertama.\n\nGunakan dataset untuk mencari nilai-nilai tersebut.\n\nHint : Gunakan .mean(), .mode()[0] (elemen pertama dari modus), .median(), .max(), dan .min().","84c7b6bd":"## Milestone 1 : Basic Data Science\n\nTugas dapat dikerjakan dengan menggunakan dataset yang diberikan. Gunakan pd.read_csv() untuk membaca data lalu cari solusi dari pertanyaan yang diberikan. Idealnya, tugas baru bisa dikerjakan setelah day 2 tanggal 17 juli. Namun, anda dapat mencuri start jika merasa bisa mengerjakan tugas ini.\n\nPre-requisites : Materi day 1 dan 2.","6ba0dcda":"Tunjukkan data outliers menggunakan 2 cara : plotting boxplot serta pendekatan rumus IQR (Inter-Quartile Range) dari kolom yang anda tentukan. Tulis juga analisis dari apa yang kamu dapat dalam bentuk paragraf.\n\nHint : https:\/\/www.analyticsvidhya.com\/blog\/2021\/05\/feature-engineering-how-to-detect-and-remove-outliers-with-python-code\/"}}