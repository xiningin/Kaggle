{"cell_type":{"c63ec067":"code","805d2dbe":"code","d84bf4d8":"code","21365d25":"code","7921f87f":"code","4df3d560":"code","9a910842":"code","4dbb4a10":"code","a5cf70ff":"code","9030dc2d":"code","1987d248":"code","19eee6b5":"code","ad522059":"code","2d06d1aa":"code","8d78b859":"code","7540d561":"code","1815776e":"code","2f7b8c47":"code","629ab39b":"code","b945fa8f":"code","1a1036b0":"code","41e8620b":"code","c73bb8ab":"code","9ffa5b00":"markdown","4de5d2fe":"markdown","63e9a9df":"markdown","dca215c2":"markdown","b1164d8d":"markdown","4b732d41":"markdown","eb413a01":"markdown","e20aa9f0":"markdown","e05cbd7f":"markdown","d7b34ded":"markdown","bb22291b":"markdown"},"source":{"c63ec067":"# This is the Feature Engineering and Hypothesis Testing on Top 100 anime dataset \nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt \nfrom scipy.stats import chi2_contingency\nimport seaborn as sns","805d2dbe":"df=pd.read_csv(r'..\/input\/top-100-anime-dataset-ratings\/anime_dataset.csv')","d84bf4d8":"df.head()","21365d25":"\ndf[\"TV show\"] = np.where(df[\"No. of episodes\"]==1, 0, 1)\ndf.head()","7921f87f":"df['test'] = df['Genre and Theme'].str.split(',').str[0]\ndf['test'].value_counts()\n","4df3d560":"df['test1'] = df['Genre and Theme'].str.split(',').str[1]\ndf['test2'] = df['Genre and Theme'].str.split(',').str[2]\ndf['test3'] = df['Genre and Theme'].str.split(',').str[3]","9a910842":"top=list(df['test'].unique()[:3])\ntop+=list(df['test1'].unique()[:3])\ntop+=list(df['test2'].unique()[:3])\ntop+=list(df['test3'].unique()[:3])","4dbb4a10":"top=list(set(top))\ntop","a5cf70ff":"for i in top: \n    df['Genre: '+i] = np.where(df[\"Genre and Theme\"].str.contains(i), 1, 0)","9030dc2d":"df.columns","1987d248":"df.head()","19eee6b5":"df=df.drop(['test','test1','test2','test3'],axis=1)","ad522059":"df.head()","2d06d1aa":"df=df[['Serial No.', 'Name', 'Links', 'Genre and Theme', 'No. of episodes','TV show','Genre: magic',\n       'Genre: adventure', 'Genre: psychological', 'Genre: comedy',\n       'Genre: drama', 'Genre: romance', 'Genre: mystery', 'Genre: action',\n       'Genre: fantasy','Rating']]","8d78b859":"df.head()","7540d561":"for i in df[df.columns[6:15]]:\n  for j in df[df.columns[7:15]]:\n        cont=pd.crosstab(df[i],df[j])\n        c, p, dof, expected = chi2_contingency(cont)\n        if p<0.05 and i!=j:\n          print(p,end=\" \")\n          print(i+\" \"+j)","1815776e":"cont=pd.crosstab(df['Genre: adventure'],df['Genre: action'])\nc, p, dof, expected = chi2_contingency(cont)\nplt.figure(figsize=(12,8))\nsns.heatmap(cont, annot=True, cmap=\"YlGnBu\")","2f7b8c47":"cont=pd.crosstab(df['Genre: romance'],df['Genre: action'])\nc, p, dof, expected = chi2_contingency(cont)\nplt.figure(figsize=(12,8))\nsns.heatmap(cont, annot=True, cmap=\"YlGnBu\")","629ab39b":"cont=pd.crosstab(df['Genre: psychological'],df['Genre: mystery'])\nc, p, dof, expected = chi2_contingency(cont)\nplt.figure(figsize=(12,8))\nsns.heatmap(cont, annot=True, cmap=\"YlGnBu\")","b945fa8f":"cont=pd.crosstab(df['Genre: psychological'],df['Genre: magic'])\nc, p, dof, expected = chi2_contingency(cont)\nplt.figure(figsize=(12,8))\nsns.heatmap(cont, annot=True, cmap=\"YlGnBu\")","1a1036b0":"cont=pd.crosstab(df['Genre: adventure'],df['Genre: fantasy'])\nc, p, dof, expected = chi2_contingency(cont)\nplt.figure(figsize=(12,8))\nsns.heatmap(cont, annot=True, cmap=\"YlGnBu\")","41e8620b":"from scipy.stats import f_oneway\nfor i in df[df.columns[6:15]]:\n    CategoryGroupLists=df.groupby(i)['Rating'].apply(list)\n    AnovaResults = f_oneway(*CategoryGroupLists)\n    if(AnovaResults[1]<0.05):\n        print(i,end=\" \")\n        print('P-Value: ', AnovaResults[1])","c73bb8ab":"df['Genre: psychological'].value_counts()","9ffa5b00":"### - Now I've used ```categorical encoding``` on the Top 9 genres\n### - For that, I've extracted the Top 9 genres from the **'Genre and Theme'** column","4de5d2fe":"### Since the absence of Psychological genre is more than 75% it proves that it this genre is not as much popular among the audience","63e9a9df":"# _Hypothesis Testing_ \n## 1. Chi Squared Test of independency\n### - Here we assume that all the genres are independent from each other. If our p value comes less than 0.05 (p<0.05) we will reject the hypothesis, showing that the genres are **not independent** from each other. ","dca215c2":"### Here, we get a very apparent conclusion: \n### - For all of the above graphs the majority of the anime lies the **dark blue** section. \n###   This shows that the absence of these genres together give a high probability of the anime coming under **Top 100**","b1164d8d":"### - Since the dataset contains **tv shows** as well as **movies**, we can use ```categorical encoding``` for the same. \n### - For this I made a new column **TV Shows** that is 1 for the rows having tv shows and 0 for movies. \n###   **How will this help?** \n### - Adding the new column will help us analyse the ratings of every anime accurately as it may depend on whether it's a tv show or a movie. ","4b732d41":"### This is the original dataset","eb413a01":"### - Here are the Top 9 genres","e20aa9f0":"## 2. Anova Test (Using F-Test on One-Way Anova)\n### - Here we assume that the features **Genre** and **Rating** are independent from each other. \n### - In this above cell you can see that the p value is less than 0.05 only for the genre Psychological, which concludes that the assumption is **true** for every other genre except **Psychological**.","e05cbd7f":"### The above output shows all of the genres that are dependent on each other. It includes: \n### - Magic and Psychological \n### - Adventure and Action \n### - Adventure and Fantasy \n### - Psychological and Mystery \n### - Romance and Action \n### Hence we plot a graph for analysis","d7b34ded":"# _Feature Engineering_","bb22291b":"### This is our final dataset"}}