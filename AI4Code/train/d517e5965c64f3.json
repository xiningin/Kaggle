{"cell_type":{"fde0acdf":"code","1055da24":"code","f3bc1bfd":"code","e116c81f":"code","325a91bf":"code","843128c1":"code","bcc9e80f":"code","1f9580fc":"markdown","563ece74":"markdown","68a2020f":"markdown","6b95a185":"markdown","603e4ac7":"markdown","5d1dff0a":"markdown","8318572f":"markdown","09c33a6e":"markdown","8eb65bec":"markdown","2107b3a4":"markdown"},"source":{"fde0acdf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1055da24":"# load data\nx_l = np.load('..\/input\/Sign-language-digits-dataset\/X.npy')\nY_l = np.load('..\/input\/Sign-language-digits-dataset\/Y.npy')\nimg_size = 64\n#print(x_l)\n#print(Y_l)","f3bc1bfd":"# sample data representation\nplt.subplot(1, 2, 1)\nplt.imshow(x_l[260].reshape(img_size, img_size))\nplt.axis('off')\nplt.subplot(1, 2, 2)\nplt.imshow(x_l[900].reshape(img_size, img_size))\nplt.axis('off')\nplt.show()","e116c81f":"X = np.concatenate((x_l[204:409], x_l[822:1027] ), axis=0) \nz = np.zeros(205)\no = np.ones(205)\nY = np.concatenate((z, o), axis=0).reshape(X.shape[0],1)\nprint(\"X shape: \" , X.shape)\nprint(\"Y shape: \" , Y.shape)","325a91bf":"# data division train and test\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.20, random_state=42)\nprint('X_train: ',X_train.shape)\nprint('X_test: ',X_test.shape)\nprint('Y_train: ',Y_train.shape)\nprint('Y_test: ',Y_test.shape)","843128c1":"# Converting the 3D matrix to 2D matrix\nprint('X_train: ',X_train.shape)\nprint('X_test: ',X_test.shape)\n\nnumber_of_train = X_train.shape[0]\nnumber_of_test = X_test.shape[0]\n\nX_train_flatten = X_train.reshape(number_of_train,X_train.shape[1]*X_train.shape[2])\nX_test_flatten = X_test .reshape(number_of_test,X_test.shape[1]*X_test.shape[2])\n\nprint(\"X train flatten\",X_train_flatten.shape)\nprint(\"X test flatten\",X_test_flatten.shape)\n\nx_train = X_train_flatten\nx_test = X_test_flatten\ny_train = Y_train\ny_test = Y_test\n\nprint(\"x train: \",x_train.shape)\nprint(\"x test: \",x_test.shape)\nprint(\"y train: \",y_train.shape)\nprint(\"y test: \",y_test.shape)","bcc9e80f":"# logistic regression create model and train test accuracy print\nlogreg = LogisticRegression(random_state = 42,max_iter= 150, penalty='l2')\nlogreg.fit(x_train, y_train.ravel())\nprint(\"test accuracy: {} \".format(logreg.score(x_test, y_test)))","1f9580fc":"# Introduction\n* This is my second logistic regression work\n* This time I worked with data from the images data.\n* This data is composed of sign language images.","563ece74":"# Data split train and test\n* With the train_test_split method we import from sklearn library, we divide the data into two as train and test.\n* We will train our model with the train part of the data we have divided and we will test our model with the test part.\n* We split the data to 80% train and 20% test.","68a2020f":"# Content\n* Introduction\n* Import library\n* Load data\n* Sample data representation\n* Data split train and test\n* Converting the 3D matrix to 2D matrix\n* Logistic regression create model and test accuracy score print\n* Conclusion","6b95a185":"# Converting the 3D matrix to 2D matrix\n* We have 3 dimensional input array (X) so we need to make it flatten (2D) in order to use as input for our first.\n* Our label array (Y) is already flatten(2D) so we leave it like that.","603e4ac7":"* In order to create image array, we concatenate zero sign and one sign arrays\n* Then we create label array 0 for zero sign images and 1 for one sign images.","5d1dff0a":"# Sample data representation\n* We are plotting our sample data.","8318572f":"# Logistic regression create model and  test accuracy score print\n* We create our logistic regression model.\n* We train our model with x_train and y_train data.\n* We test our model with x_test and y_test data and print the accuracy value.","09c33a6e":"# Load data\n* In this data there are 2062 sign language digits images.\n* At the beginning of tutorial we will use only sign 0 and 1 for simplicity. \n* In data, sign zero is between indexes 204 and 408. Number of zero sign is 205.\n* Also sign one is between indexes 822 and 1027. Number of one sign is 206. Therefore, we will use 205 samples from each classes(labels).\n* Lets prepare our X and Y arrays. X is image array (zero and one signs) and Y is label array (0 and 1).","8eb65bec":"# Conclusion\n* Our test accuracy value is 97%. We can conclude from this value that we have created a correct model.\n* I'm new to programming. I'm even more new in data science, machine learning, deep learning and artificial intelligence. But I am working. And I'il be an artificial intelligence developer. Your comments are very important to me.\n* Thank you for reading my notebook. Waiting for your criticism.","2107b3a4":"# Import library\n* We import libraries that we will use.\n* matplotlib.pyplot\n* train_test_split in sklearn.model_selection \n* LogisticRegression in sklearn.linear_model"}}