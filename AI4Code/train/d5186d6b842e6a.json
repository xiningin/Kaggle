{"cell_type":{"775cfae1":"code","b90b87a6":"code","dd3089da":"code","ceacf5c7":"code","1bf1dbb6":"code","77e06fab":"code","3013a0a6":"code","35781d65":"code","9ef1051b":"code","4999a74a":"code","47efe487":"code","7a2ccc8a":"code","e9c4255b":"code","dfe072f3":"code","ef80d136":"code","2cc43b50":"code","f88d65d7":"code","e75f1eb3":"code","1ec886f2":"code","945dde28":"code","b3087f9b":"code","5abbc2ea":"code","d2fa23b9":"code","868767d2":"code","e502f5ae":"code","dd59b839":"code","c914782a":"code","cc930ac9":"code","174ce952":"code","11d8f531":"code","c00bd850":"code","e160ef67":"code","3c74bdcf":"code","90e58ca5":"code","667e4a6b":"code","4c4655c6":"code","d566a992":"code","a846d60d":"code","bfe34b5d":"markdown"},"source":{"775cfae1":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline\n","b90b87a6":"from fastai.vision import *\nfrom fastai.metrics import error_rate\nfrom fastai import *\nfrom fastai.vision import *\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\nfrom pathlib import Path\nimport random\nimport os","dd3089da":"bs = 64","ceacf5c7":"path = Path(\"..\/input\/utkface-new\/utkface_aligned_cropped\")\npath_test=('..\/input\/utkface-new\/UTKface_Aligned_cropped\/crop_part1')\npath","1bf1dbb6":"path.ls()","77e06fab":"im =PIL.Image.open(path\/'UTKFace\/26_1_1_20170117201805678.jpg.chip.jpg')","3013a0a6":"im","35781d65":"path_labels = path\npath_img = path\/'UTKFace'","9ef1051b":"fnames = get_image_files(path_img)\nfnames[:5]","4999a74a":"def extract_age(filename):\n    return float(filename.stem.split('_')[0])","47efe487":"extract_age(path_img\/'28_0_0_20170117202521375.jpg.chip.jpg')","7a2ccc8a":"np.random.seed(2)\nds=get_transforms(do_flip=False,max_rotate=0,max_zoom=1, max_lighting=0, max_warp=0, p_affine=0, p_lighting=0 )","e9c4255b":"fn_paths = path_img.ls(); fn_paths[:2]","dfe072f3":"def extract_age(filename):\n    return float(filename.stem.split('_')[0])","ef80d136":"def load_face_data(img_size, batch_size,path):\n    tfms = get_transforms(max_warp=0.)\n    return (ImageList.from_folder(path)\n            .random_split_by_pct(0.2, seed=666)\n            .label_from_func(extract_age)\n            .transform(tfms, size=img_size)\n            .databunch(bs=batch_size))","2cc43b50":"data = load_face_data(224, 256,path)","f88d65d7":"data.show_batch(rows=3, figsize=(7,7))","e75f1eb3":"age=[extract_age(i) for i in path_img.ls()]\nplt.figure(figsize=(10, 5))\nplt.plot(*zip(*sorted(Counter(age).items())), '.:')\nplt.title('Number of Images by Age')\nplt.ylabel('count')\nplt.xlabel('age')\nplt.grid()","1ec886f2":"class AgeModel(nn.Module):\n    def __init__(self):\n        super().__init__()\n        layers = list(models.resnet34(pretrained=True).children())[:-2]\n        layers += [AdaptiveConcatPool2d(),Flatten()]\n        layers += [nn.Linear(1024, 16), nn.ReLU(), nn.Linear(16,1)]\n        self.agemodel = nn.Sequential(*layers)\n    def forward(self, x):\n        return self.agemodel(x).squeeze() # could add 116*torch.sigmoid","945dde28":"model = AgeModel()","b3087f9b":"learn = Learner(data, model, loss_func = F.l1_loss, model_dir=\"\/tmp\/model\/\")\nlearn=learn.load(\"\/kaggle\/input\/training\/ageTraining\")\n","5abbc2ea":"learn.split([model.agemodel[2],model.agemodel[-3]])","d2fa23b9":"learn.layer_groups[-1]\n","868767d2":"learn.freeze_to(-1)","e502f5ae":"learn.fit_one_cycle(1)\n","dd59b839":"learn.lr_find()\nlearn.recorder.plot()","c914782a":"learn.fit_one_cycle(6,max_lr =1e-3)","cc930ac9":"learn.unfreeze()\n\nlearn.lr_find(); learn.recorder.plot()","174ce952":"learn.fit_one_cycle(12, max_lr = slice(1e-6,1e-5))","11d8f531":"learn.save('\/kaggle\/working\/ageTraining')","c00bd850":"Path('\/kaggle\/working').ls()","e160ef67":"os.chdir(r'\/kaggle\/working')\nfrom IPython.display import FileLink\nFileLink(r'ageTraining.pth')","3c74bdcf":"learn.show_results(rows=4)","90e58ca5":"img = data.train_ds[0][0]\nimg","667e4a6b":"\nlearn.model.eval()","4c4655c6":"data1 = learn.data.train_ds[0][0]\n","d566a992":"data1","a846d60d":"pred = learn.predict(data)\n","bfe34b5d":"**This is gonna be my 1st attempt to Age estimation, any improvement or advice would be most  welcome**"}}