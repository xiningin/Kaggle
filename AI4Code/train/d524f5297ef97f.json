{"cell_type":{"6cbe0743":"code","5acc9666":"code","2cddfed6":"code","3c6c9515":"code","222b362a":"code","ae81a3c2":"code","4bb848eb":"code","074281c2":"code","188f027a":"code","29297993":"code","1ef07377":"code","d54735d5":"code","cb44c41f":"code","551ca15a":"code","cbd246d5":"code","bea1ebe7":"code","963da388":"code","9c577a04":"code","ffd12d5a":"code","e3e5549e":"code","848b3db0":"code","4c072053":"markdown","095a2857":"markdown","cfe14895":"markdown"},"source":{"6cbe0743":"# install pycaret\n!pip install pycaret","5acc9666":"# import libraries\nimport pandas as pd\nimport numpy as np","2cddfed6":"# read csv data\ndata = pd.read_csv('..\/input\/telco-customer-churn\/WA_Fn-UseC_-Telco-Customer-Churn.csv')\ndata.head()","3c6c9515":"# check data types\ndata.dtypes","222b362a":"# replace blanks with np.nan\ndata['TotalCharges'] = data['TotalCharges'].replace(' ', np.nan)\ndata.isnull().sum()","ae81a3c2":"# convert to float64\ndata['TotalCharges'] = data['TotalCharges'].astype('float64')\ndata.info()","4bb848eb":"!pip install pandas-profiling","074281c2":"from pandas_profiling import ProfileReport\nprofile = ProfileReport(data, title=\"EDA Report\")\nprofile","188f027a":"# check missing values\ndata.isnull().sum()","29297993":"round(data.Churn.value_counts()*100 \/ len(data),2)","1ef07377":"categorical = []\nfor i in data.columns:\n    if (data[i].dtype=='object'):\n        categorical.append(i)\nprint(\"Categorical Attribute : {}\\n \".format(len(categorical)))\nfor x in range(len(categorical)): \n    print(categorical[x])","d54735d5":"data[categorical].nunique()","cb44c41f":"for i in categorical[1:]:\n    print(i)\n    print(data[i].unique())\n    print(\"\\n\")","551ca15a":"# init setup\nfrom pycaret.classification import *\ntelecom = setup(data, target = 'Churn', ignore_features = ['customerID'],\n                ordinal_features = {'Contract' : ['Month-to-month' ,'One year', 'Two year']},\n                fix_imbalance = True,\n               transformation = True,#Transformation changes the shape of the distribution such that the transformed data can be represented by normal distribution\n                  normalize = True, #rescale the values of numeric columns\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,# all levels in categorical features below the threshold defined in rare_level_threshold param are combined together as a single level\n                numeric_imputation='median',\n                categorical_imputation='mode',)","cbd246d5":"catboost= create_model('catboost')","bea1ebe7":"print(catboost)","963da388":"tuned_catboost = tune_model(catboost,optimize = 'Accuracy') #tuned on Accuracy","9c577a04":"evaluate_model(tuned_catboost) #Graphical plot ","ffd12d5a":"predict_model(tuned_catboost)# Test data evaluation ","e3e5549e":"final_catboost = finalize_model(tuned_catboost) # Final model \nfinal_catboost","848b3db0":"predict_model(final_catboost)#final test model evaluation ","4c072053":"# Exploratory Data Analysis","095a2857":"# Missing Values","cfe14895":"# Data Preparation"}}