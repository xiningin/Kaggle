{"cell_type":{"024bc0b3":"code","033366d8":"code","aad2cf76":"code","c98d25b4":"code","e16208fa":"code","7f821a9b":"code","07434829":"code","33683e24":"code","673e08fb":"code","80a8f54b":"code","0768b752":"code","288334f2":"code","7d197d87":"code","9ce05148":"code","223a4d3c":"code","0f579d27":"code","97fa29cc":"code","3e98ed75":"code","a8164956":"code","4fed3f4d":"code","a288de4c":"code","d34da3ba":"code","49e1f310":"code","6d990ffb":"markdown","5a5b772a":"markdown","fec8962b":"markdown","fdf9ecfe":"markdown","f927ecb4":"markdown","8c7ffc5d":"markdown","30bc811f":"markdown","50a78ada":"markdown","585c8c90":"markdown","e295e6dd":"markdown","3389ad95":"markdown","7a8981a7":"markdown","3da0fa4a":"markdown","c2d1f221":"markdown","af6249ce":"markdown","b0af7fa5":"markdown","6a23a800":"markdown","7730016d":"markdown","d358bd27":"markdown","552586b4":"markdown","4a7afbb5":"markdown","75d30c54":"markdown","0305e308":"markdown","97ab6888":"markdown","faafb494":"markdown","af61dec2":"markdown","a735d5b7":"markdown","bb908739":"markdown"},"source":{"024bc0b3":"import numpy as np \nimport pandas as pd\nimport os\nimport glob\nimport warnings\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport re\nimport calendar\nimport plotly as py\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom datetime import datetime\nfrom datetime import date\nimport matplotlib.pyplot as plt\nwarnings.filterwarnings(\"ignore\")\npd.set_option('display.max_columns', None)\n%matplotlib inline\n\n# District Data\ndistdf = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")\n\n# Products Data\nproddf = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\")\n\n# # External Datasets\n# # U.S. Policy Data (with date of announcement)\npolicy_df = pd.read_csv('..\/input\/digitallearninghelperdatasets\/policydata.csv')\n\n# # Internet speed available in each state\nspeed_df = pd.read_csv('..\/input\/digitallearninghelperdatasets\/speedbystate.csv')\n\n# # Expenditure per student in each state\nexpenditure = pd.read_csv('..\/input\/digitallearninghelperdatasets\/ExpendPerStudent_Statewise.csv')\n\n# # Demography Data (Gender,Ethnic Origin,Race,Age,Population)\nstate_wise_demography = pd.read_csv('..\/input\/digitallearninghelperdatasets\/StatewiseDemography.csv')\n\n# # Schools data \nschools_df = pd.read_csv('..\/input\/schools-per-state-usa\/state_schools.csv')\n\nprint(\"Data loaded successfully!\")","033366d8":"# Normalizing the column names (To allow us to make joins)\ndistdf.columns  = ['district_id', 'State', 'locale', 'pct_black\/hispanic',\n       'pct_free\/reduced', 'county_connections_ratio', 'pp_total_raw']\n\n# Dropping obselete NaN values \ndistdf.dropna(subset=['State'],inplace = True)\nassert distdf['State'].isna().sum() == 0","aad2cf76":"# Dropping the districts that do not have engagement index data for all the days of the year\n\nPATH = '..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data' \ntemp = []\n\nfor district in distdf.district_id.unique():\n    df = pd.read_csv(f'{PATH}\/{district}.csv', index_col=None, header=0)\n    df[\"district_id\"] = district\n    if df.time.nunique() == 366:\n        temp.append(df)\n    \nengagement = pd.concat(temp)\nengagement = engagement.reset_index(drop=True)\n\n# Only consider districts with full 2020 engagement data\ndistdf = distdf[distdf['district_id'].isin(engagement.district_id.unique())].reset_index(drop=True)\ndistdf.fillna(0, inplace = True)\nproddf = proddf[proddf['LP ID'].isin(engagement.lp_id.unique())].reset_index(drop=True)\nengagement = engagement[engagement.lp_id.isin(proddf['LP ID'].unique())]\n\n# Handling invalid datatypes\nengagement['time'] = pd.to_datetime(engagement['time'])\n\n# Deriving Weekday and Month from the date column \nengagement['weekday'] = engagement['time'].dt.weekday\nengagement['month'] = engagement['time'].dt.month","c98d25b4":"# More clearning!\n\n# Splitting the Primary Essential Function and one hot encode the sector values\nproddf['primary_function_main'] = proddf['Primary Essential Function'].apply(lambda x: x.split(' - ')[0] if x == x else x) #if condition handles Null values which could throw an attribute error\nproddf['primary_function_sub'] = proddf['Primary Essential Function'].apply(lambda x: x.split(' - ')[1] if x == x else x)\n\nproddf.drop(columns = ['Primary Essential Function'], axis =1);\n\nproddf['primary_function_sub'] = proddf['primary_function_sub'].replace({'Sites, Resources & References' : 'Sites, Resources & Reference'})\n\ntemp_sectors = proddf['Sector(s)'].str.get_dummies(sep=\"; \")\ntemp_sectors.columns = [f\"sector_{re.sub(' ', '', c)}\" for c in temp_sectors.columns]\nproddf = proddf.join(temp_sectors)\nproddf.drop(\"Sector(s)\", axis=1, inplace=True)\n\n# Normalizing the column names (To allow us to make joins)\nproddf.columns = ['lp_id', 'URL', 'Product Name', 'Provider\/Company Name',\n       'Primary Essential Function', 'primary_function_main',\n       'primary_function_sub', 'sector_Corporate', 'sector_HigherEd',\n       'sector_PreK-12']\n\nproddf.drop(proddf.loc[proddf['primary_function_main']=='LC\/CM\/SDO'].index, inplace=True)","e16208fa":"schools_df['No.of public schools'] = schools_df['No.of public schools'].apply(lambda x: re.sub('[^A-Za-z0-9]+', '', str(x)))\nschools_df['No.of public schools'] = schools_df['No.of public schools'].astype(int)\n\nschools_df.columns = ['State', 'Code', 'No.of public schools']\n\nexpenditure.columns = ['State', 'K12 Spending', 'Postsecondary Spending']\n\nexpenditure['K12 Spending']=  expenditure['K12 Spending'].str[1:]\nexpenditure['K12 Spending'] = expenditure['K12 Spending'].apply(lambda x: re.sub('[^A-Za-z0-9]+', '', str(x)))\nexpenditure['K12 Spending']=  expenditure['K12 Spending'].astype(int)\n\nexpenditure['Postsecondary Spending']=  expenditure['Postsecondary Spending'].str[1:]\nexpenditure['Postsecondary Spending'] = expenditure['Postsecondary Spending'].apply(lambda x: re.sub('[^A-Za-z0-9]+', '', str(x)))\nexpenditure['Postsecondary Spending']=  expenditure['Postsecondary Spending'].astype(int)\n","7f821a9b":"# Function to convert 'range' like values to their average values (Ex. [0.3,0.5] --> 0.4)\ndef range_to_mean(val):\n        if val != 0:\n                val = re.sub('[^.,A-Za-z0-9]+', '', str(val))\n                val  = val.split(',')\n                vals = (float(val[0]) +float(val[1]))\/2\n                vals = round(vals, 2)\n                return vals \n        else:\n                return np.nan\n            \n\n# List of all the columns with range values\nrange_list = ['pct_black\/hispanic','pct_free\/reduced','county_connections_ratio','pp_total_raw']\n\n\nfor ele in range_list:\n    col_name = 'mean_'+ele\n    distdf[col_name] = distdf[ele].apply(lambda x: range_to_mean(x))\n    distdf.drop( columns = ele , inplace = True)","07434829":"state_wise_demography.columns =  ['State', 'SEX_Val', 'Origin_Val', 'Race_val', \n                                  'age_bins','CENSUS2010POP', 'POPESTIMATE2019']\nstate_wise_demography.drop(state_wise_demography.loc[state_wise_demography['SEX_Val']=='Total'].index, inplace=True)\nstate_wise_demography.drop(state_wise_demography.loc[state_wise_demography['Origin_Val']=='Total'].index, inplace=True)\nstate_wise_demography = state_wise_demography[ (state_wise_demography['age_bins']=='[0, 10)') | (state_wise_demography['age_bins']=='[10, 20)')]","33683e24":"demo_df = state_wise_demography.groupby(['State'])['POPESTIMATE2019'].sum().reset_index()\ndemo_df = demo_df.sort_values(by=['POPESTIMATE2019'],ascending=False)\npop = pd.merge(demo_df,schools_df, on='State', how ='inner')\n\nfig = go.Figure()\nlayout = dict(\n    title_text = \"<b> Number of Public Schools Per State in 2020 <\/b>\",\n    font=dict(size=18),\n    title_x = 0.5,\n    geo_scope='usa',\n)\n\nfig.add_trace(\n    go.Choropleth(\n        locations=pop[\"Code\"],\n        z = pop['No.of public schools'],\n        locationmode = 'USA-states', \n        marker_line_color='black',\n        colorscale=px.colors.sequential.Plasma_r\n    )\n)\n            \nfig.update_layout(layout,template = 'plotly_dark')   \nfig.show()","673e08fb":"demo_df = state_wise_demography.groupby(['State', 'Race_val'])['POPESTIMATE2019'].sum().reset_index()\ndemo_df = demo_df.sort_values(by=['POPESTIMATE2019'],ascending=False)\neng_dist = engagement.merge(distdf, on='district_id', how = 'inner')\n\nlayout = dict(\n    title_text = \"<b> Avergage Engagement Index By State <\/b>\",\n    xaxis_title=\"State\",\n    yaxis_title=\"Mean Engagement Index\",\n    title_x = 0.5)\n\ntemp = eng_dist.groupby(['State'])['engagement_index'].mean().reset_index()\ntemp = temp.sort_values(by = 'engagement_index', ascending = False)\n\nfig = px.bar(x=temp['State'],y= temp['engagement_index'],\n             color = temp['engagement_index'],\n             color_continuous_scale=px.colors.sequential.RdBu)\n\nfig.update_layout(layout, template = 'plotly_dark')   \nfig.show()","80a8f54b":"temp1 = demo_df[demo_df.State.isin(eng_dist.State.unique())]\ntemp2 = eng_dist[eng_dist.State.isin(demo_df.State.unique())].groupby(['State'])['engagement_index'].mean().reset_index()\ntemp = temp1.merge(temp2, on= 'State', how= 'inner')\n\nx = temp['State'].unique()[:10]\n\ny1 = temp[temp['Race_val']=='American Indian or Alaska Native']['POPESTIMATE2019'].values[:10]\ny2 = temp[temp['Race_val']=='Asian ']['POPESTIMATE2019'].values[:10]\ny3 = temp[temp['Race_val']=='Black']['POPESTIMATE2019'].values[:10]\ny4 = temp[temp['Race_val']=='Native Hawaiian and Other Pacific Islander ']['POPESTIMATE2019'].values[:10]\ny5 = temp[temp['Race_val']=='Two or more races']['POPESTIMATE2019'].values[:10]\n\ntemp = temp.groupby(['State', 'engagement_index'])['POPESTIMATE2019'].sum().reset_index()\ntemp = temp.sort_values(by ='POPESTIMATE2019' , ascending = False)\n\ny_line = temp['engagement_index'].values[:10]\n\nfig = go.Figure(go.Bar(x=x, y=y1, name='American Indian or Alaska Native'))\nfig.add_trace(go.Bar(x=x, y=y2,  name='Asian'))\nfig.add_trace(go.Bar(x=x, y=y5, name='Two or more races'))\nfig.add_trace(go.Bar(x=x, y=y4, name='Native Hawaiian and Other Pacific Islander'))\nfig.add_trace(go.Bar(x=x, y=y3, name='Black'))\nfig.add_trace(go.Scatter(x=x, name=\"Engagement Index\",  line=dict(color=\"yellow\") ,y=y_line*(10**3.5)))\n\nfig.update_layout(barmode='stack', \n                  title_x = 0.5,\n                  title_text = \"<b> Avergage Engagement Index By State <\/b>\",\n                  xaxis_title=\"State\",\n                  yaxis_title=\"Population and Engagement Index\",\n                  template=\"plotly_dark\", \n                  colorway=px.colors.qualitative.Pastel)\n \nfig.show()","0768b752":"exp_eng_df = pd.merge(expenditure,\n                      eng_dist.groupby(['State'])['engagement_index'].mean().reset_index(),\n                      on='State', how ='inner')\n\nx = exp_eng_df['State']\ny1 = exp_eng_df['K12 Spending']\ny2 = exp_eng_df['Postsecondary Spending']\ny3 = exp_eng_df['engagement_index']*(10**1.7)\n\n\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(x=x, y=y1,\n                    mode='lines+markers',\n                    name='K12 Spending'))\nfig.add_trace(go.Scatter(x=x, y=y2,\n                    mode='lines+markers',\n                    name='Postsecondary Spending'))\nfig.add_trace(go.Bar(x=x, y=y3,\n                    name='Engagement Index'))\n\nfig.update_layout(title_text = \"<b> Expenditure and Engagement Index By State <\/b>\",\n                  title_x = 0.5,\n                  xaxis_title=\"State\",\n                  yaxis_title=\"Expenditure and Engagement Index\", \n                  colorway= ['#fc4503','#3afa05','#4257f5'],\n                  template=\"plotly_dark\")\nfig.show()","288334f2":"fig = go.Figure()\nlayout = dict(\n    title_text = \"<b> Speed By State in 2020 <\/b>\",\n    font=dict(size=18),\n    title_x = 0.5,\n    geo_scope='usa',\n)\n\nfig.add_trace(\n    go.Choropleth(zmin = 50, zmax = 200,\n        locations=speed_df[\"stateabbr\"],\n        hovertext=speed_df[\"State\"],\n        z = speed_df[\"avg_maxaddown\"],\n        locationmode = 'USA-states', \n        marker_line_color='black',\n        colorscale=px.colors.sequential.Turbo\n    )\n)\n            \nfig.update_layout(layout,template = 'plotly_dark')   \nfig.show()\n","7d197d87":"speed_df.drop(speed_df.loc[speed_df['Year']==2019].index, inplace=True)\nspeed_df = speed_df.replace(['District of Columbia'],'District Of Columbia')\nplot_data = speed_df.merge(eng_dist, how = 'inner', on = 'State')\ntop5 = plot_data.groupby(['State','avg_maxaddown'])['engagement_index'].mean().reset_index().sort_values(by = 'avg_maxaddown', ascending = False)[:5]\nlast5 = plot_data.groupby(['State','avg_maxaddown'])['engagement_index'].mean().reset_index().sort_values(by = 'avg_maxaddown', ascending = False)[-5:]\n\nfig = make_subplots(\n    rows=1, cols=2,\n    subplot_titles=(\"Top 5 states with high speed internet connections\",\"Top 5 states with low speed internet connections\",'cc'))\n\n\nfig.add_trace(go.Bar(x=top5['State'], \n                         y=top5['avg_maxaddown'],\n                         name='Internet Speed'),row=1, col=1)\n\nfig.add_trace(go.Scatter(x=top5['State'], \n                            y=top5['engagement_index']*(10**-.55),mode='markers+lines',\n                             name=\"Engagement Index\", \n                             marker=dict(size=10),line=dict(width=6)),row=1, col=1)\n\nfig.add_trace(go.Bar(x=last5['State'], \n                         y=last5['avg_maxaddown'], \n                         name='Internet Speed', showlegend=False),row=1, col=2)\n\nfig.add_trace(go.Scatter(x=last5['State'], \n                             y=last5['engagement_index']*(10**-.6),\n                             name=\"Engagement Index\",\n                             mode='markers+lines',\n        marker=dict(size=10),line=dict(width=6), showlegend=False),row=1, col=2)\n\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide', \n                  title_x = 0.45,\n                  xaxis_title=\"State\",\n                  yaxis_title=\"Population and Engagement Index\",\n                  template=\"plotly_dark\",\n                  colorway=['#f3cec9', '#479f77'])\n\nfig['layout']['xaxis']['title']='State'\nfig['layout']['xaxis2']['title']='State'\nfig['layout']['yaxis']['title']='Population and Engagement Index'\nfig.show()","9ce05148":"temp = eng_dist.groupby(['locale'])['engagement_index'].mean().reset_index()\nlabels = temp['locale']\nvalues = temp['engagement_index']\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.5, pull=[0.1, 0, 0, 0])])\n\nfig.update_layout(\n                  title_text = \"<b> Locale and Engagement Index <\/b>\",\n                  title_x = 0.5, \n                  colorway=px.colors.cyclical.Edge_r\n                  )\nfig.show()","223a4d3c":"px.imshow(engagement.corr())","0f579d27":"df_ = eng_dist.groupby(['locale']).agg({'pct_access':'mean', 'engagement_index':'mean'}).reset_index()\ndf_ = df_.sort_values(by=['pct_access'], ascending=False)\nfig = go.Figure()\n\nfig.add_trace(go.Scatterpolar(\n      r=df_['engagement_index']\/100,\n      theta=df_['locale'],\n      fill='toself',\n      name='Engagement Index'\n))\nfig.add_trace(go.Scatterpolar(\n      r=df_['pct_access'],\n      theta=df_['locale'],\n      fill='toself',\n      name='PCT Access'\n))\nfig.update_layout(\n  polar=dict(\n    radialaxis=dict(\n      visible=True,\n      range=[0, 5]\n    )),template=\"plotly_dark\",\n  showlegend=True,\ntitle=\" <b> Correlation between Engagement Index and Locales <\/b>\",\ntitle_x = 0.5\n)\n\nfig.show()","97fa29cc":"labels = proddf['primary_function_main'].value_counts().index\nvalues = proddf['primary_function_main'].value_counts().tolist()\n\nfig = go.Figure(data=[(go.Pie(labels=labels, values=values, hole=.5))])\n\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide', \n                  title_text=\" <b> Main - Primary Function Distribution <\/b>\",\n                  title_x = 0.5, \n                  colorway=px.colors.cyclical.Edge_r\n                  )\nfig.show()","3e98ed75":"fig = px.bar(x=proddf['primary_function_sub'].value_counts().index,\n             y=  proddf['primary_function_sub'].value_counts().tolist(),\n             color = proddf['primary_function_sub'].value_counts().tolist(),\n             color_continuous_scale=px.colors.sequential.Agsunset_r,\n             )\n\nfig.update_layout(template = 'plotly_dark', font_size = 10,\n                  title_x = 0.5, \n                  yaxis_title = \"Count of Products\",\n                  xaxis_title = \"Sub Function Category\",\n                  title_text=\" <b> Sub Function Distribution <\/b>\")","a8164956":"trend_eng = pd.merge(engagement, proddf, how=\"inner\" , on= ['lp_id'])\ntrend_eng = trend_eng.groupby(['time','primary_function_main'])['engagement_index'].mean()\ntrend_eng = trend_eng.reset_index()\ntrend_eng['time'] = pd.to_datetime(trend_eng['time'])\npolicy_df['STEMERG'] = pd.to_datetime(policy_df['STEMERG'])\npolicy_df['CLSCHOOL'] = pd.to_datetime(policy_df['CLSCHOOL'])\n\nfig = px.scatter(trend_eng, x=\"time\", y='engagement_index',\n                 color='primary_function_main',trendline=\"ols\",template=\"plotly_dark\",\n                 color_discrete_sequence=px.colors.qualitative.Plotly_r, height =350, width = 950)\n\nfig.add_vrect(x0= policy_df['STEMERG'].mode()[0],\n              x1 = policy_df['CLSCHOOL'].mode()[0],\n              annotation_text=\"State of emergency issued and K12 schools closed\",\n              annotation_position=\"top left\",\n              annotation=dict(font_size=10),\n              fillcolor=\"red\", opacity=0.7, line_width=1)\n\nfig.update_traces(mode = 'lines')\nfig.show()","4fed3f4d":"df_eng = engagement.groupby(['weekday','month'])[\"engagement_index\"].mean().reset_index()\ndf_eng = df_eng.pivot(\"month\", \"weekday\", \"engagement_index\")\nfig = px.imshow(df_eng,color_continuous_scale='Reds')\nfig.update_layout(template = 'plotly_dark')\nfig.show()","a288de4c":"bins = [np.datetime64(date(2020,1,1)),\n         np.datetime64(date(2020,3,1)), \n         np.datetime64(date(2020,6,19)),\n         np.datetime64(date(2020,8,16)),\n         np.datetime64(date(2020,12,31))]\n        \ngroup_names = ['Jan-Mar', 'Apr-Jun19','Jun20-Aug16','Aug17-Dec31']\nengagement['time'] = pd.to_datetime(engagement['time'])\nengdf = engagement.copy()\nengdf.set_index('time', inplace=True)\n\nengdf['datecategory'] = pd.cut(engdf.index, bins, labels=group_names)\n#print(engdf)\n\nengdf = engdf.groupby(['lp_id','datecategory'])['engagement_index'].mean()\nengdf = pd.DataFrame(engdf).reset_index()\nengdf['lp_id'] = engdf['lp_id'].astype('category')\ntdf = engdf.pivot_table( values = 'engagement_index' ,\n                            index= ['lp_id'],\n                             columns =['datecategory'])\n\ntdf.rename_axis(None,axis=1).reset_index(drop= True)\ntdf = tdf.rename_axis(None,axis=1).reset_index()\ntdf = tdf.replace(np.nan, 0)\nleft = tdf[(tdf['Jan-Mar'] + tdf['Apr-Jun19'])  <  tdf['Aug17-Dec31']]\nresult = pd.merge(left, proddf, how=\"inner\" , on= ['lp_id'])\n\n#calculating products with significant percentage change in trend\nresult['pct_chg'] = ((result['Aug17-Dec31'] - (tdf['Jan-Mar'] + tdf['Apr-Jun19'])))\/ ((tdf['Jan-Mar'] + tdf['Apr-Jun19'])+0.1)\nresult = result[result['pct_chg'] > 0]\nresult = result.sort_values(['pct_chg'],ascending=False)[:10]\nresult = result.merge(engagement.groupby(['lp_id','time'])['engagement_index'].mean().reset_index(),\n            how = 'left',\n            on = 'lp_id')\n\nfig = px.scatter(result, x=result['time'], trendline=\"ols\", template=\"plotly_dark\",\n                 y=result['engagement_index'],color_discrete_sequence= px.colors.sequential.Rainbow,\n                 color='Product Name', height =400, width = 1000)\n\nfig.add_vrect(x0= policy_df['STEMERG'].mode()[0],\n              x1 = policy_df['CLSCHOOL'].mode()[0],\n             annotation_text=\"State of emergency issued and K12 schools closed\",\n              annotation_position=\"top left\",\n              annotation=dict(font_size=10),\n              fillcolor=\"red\", opacity=0.5, line_width=0.2)\n\nfig.update_traces(mode = 'lines' )\nfig.show()","d34da3ba":"\nloc_pd = eng_dist.groupby(['locale','lp_id'])['engagement_index'].mean().reset_index().sort_values('engagement_index',ascending = False).groupby('locale').head().sort_values(by='locale')\nres = pd.merge(loc_pd, proddf, how=\"inner\" , on= ['lp_id'])\nres = res[['locale','Product Name','engagement_index']]\nres = res.sort_values(by=['locale','engagement_index'],ascending = False)\n\nfig = go.Figure()\nfig = make_subplots(2, 2, horizontal_spacing=0.1, vertical_spacing=0.3, \n                    y_title='Mean Engagement Index',\n                   subplot_titles=(\"Town\",\"City\",'Rural','Suburb'))\nfig.add_trace(go.Bar(x= res[res['locale'] == 'Town']['Product Name'], \n                     y=res[res['locale'] == 'Town']['engagement_index']),1,1)\n\n\nfig.add_trace(go.Bar(x= res[res['locale'] == 'City']['Product Name'], \n                     y=res[res['locale'] == 'City']['engagement_index']),1,2)\nfig.add_trace(go.Bar(x= res[res['locale'] == 'Rural']['Product Name'], \n                     y=res[res['locale'] == 'Rural']['engagement_index']),2,1)\nfig.add_trace(go.Bar(x= res[res['locale'] == 'Suburb']['Product Name'], \n                     y=res[res['locale'] == 'Suburb']['engagement_index']),2,2)\n\nfig.update_layout(title = '<b> Popular products in each locale <\/b>' ,\n                  showlegend = False, title_x = 0.5, template = 'plotly_dark')\nfig.show()","49e1f310":"bins = [np.datetime64(date(2020,1,1)),\n         np.datetime64(date(2020,3,1)), \n         np.datetime64(date(2020,6,19)),\n         np.datetime64(date(2020,8,16)),\n         np.datetime64(date(2020,12,31))]\n        \ngroup_names = ['Jan-Mar', 'Apr-Jun19','Jun20-Aug16','Aug17-Dec31']\n\nengdf = eng_dist.copy()\n\nengdf['datecategory'] = pd.cut(engdf.time, bins, labels=group_names,include_lowest=True)\n\nengdf = engdf.groupby(['lp_id','datecategory','locale','district_id'])['engagement_index'].mean().reset_index()\nengdf['lp_id'] = engdf['lp_id'].astype('category')\nengdf = engdf.replace(np.nan, 0)\nproduct_wise = engdf.pivot_table(values = 'engagement_index',\n                                       index= ['lp_id','locale'],\n                                       columns =['datecategory'])\nproduct_wise.rename_axis(None,axis=1).reset_index(drop= True)\n\nproduct_wise = product_wise.rename_axis(None,axis=1).reset_index()\nleft = product_wise[(product_wise['Jan-Mar'] + product_wise['Apr-Jun19'])  <  product_wise['Aug17-Dec31']]\nresult = pd.merge(left, proddf, how=\"inner\" , on= ['lp_id'])\n\n#calculating products with significant percentage change in trend\nresult['pct_chg'] = ((result['Aug17-Dec31'] - (result['Jan-Mar'] + result['Apr-Jun19'])))\/ ((result['Jan-Mar'] + result['Apr-Jun19']) +0.1)\nresult  = result[['lp_id','Product Name','locale','pct_chg']]\n\n# locale wise products\nloc_pd = result.groupby(['locale','lp_id','Product Name'])['pct_chg'].mean().reset_index()\n\nloc_pd  = loc_pd.sort_values(['pct_chg'],ascending=False).groupby(['locale']).head(5)\n\nfig = go.Figure()\nfig = make_subplots(2, 2,y_title='Mean Engagement Index',\n                   subplot_titles=('Suburb','Rural','City',\"Town\"))\n\nfig.add_trace(go.Bar(x= loc_pd[loc_pd['locale'] == 'City']['Product Name'], \n                     y=loc_pd[loc_pd['locale'] == 'City']['pct_chg']),2,1)\nfig.add_trace(go.Bar(x= loc_pd[loc_pd['locale'] == 'Rural']['Product Name'], \n                     y=loc_pd[loc_pd['locale'] == 'Rural']['pct_chg']),1,2)\nfig.add_trace(go.Bar(x= loc_pd[loc_pd['locale'] == 'Suburb']['Product Name'], \n                     y=loc_pd[loc_pd['locale'] == 'Suburb']['pct_chg']),1,1)\nfig.add_trace(go.Bar(x= loc_pd[loc_pd['locale'] == 'Town']['Product Name'], \n                     y=loc_pd[loc_pd['locale'] == 'Town']['pct_chg']),2,2)\n\nfig.update_layout(title = ' <b> Products that gained popularity in each locale after summer holidays <\/b>', title_x = 0.5,\n    template ='plotly_dark', showlegend = False)\nfig.show()","6d990ffb":"### Is Internet speed a relevant factor for Engagement index?\nSo it seems intutuive that internet speed would play a major role in enabling Digital Learning\/Classroom. But, here's the catch let's see how the engagement index are for the states.\n\n* Utah with the highest internet speed of 296.63 Mb\/s has an engagment index of 52. \n* However Arizon with an internet speed of 94.49 Mb\/s has an engagment index of 214.\n\nFrom these two examples we can safely say that higher internet speed may not necessarily lead to better enagagement of students.","5a5b772a":"## Impact of Internet speed in Digital Learning\/Classroom\nHigh speed Internet enhances every level of education from kindergarten through high school to college to graduate school. Advances in information and communications technology means that education is no longer confined to the classroom. New broadband-enabled educational tools allow for remote collaboration among fellow students on projects, videoconferences with teachers and real-time video exploration of faraway areas. The educational advantage possible with high speed Internet has become indispensable to students preparing to enter the 21st Century workforce.\n\nSource: https:\/\/speedmatters.org\/speedmatters-2\/k-12-education\n\n* Utah has the highest internet speed statewise with 296.63 Mb\/s.\n","fec8962b":"\n# Let's have a look at our datasets and the available attributes\n","fdf9ecfe":"# Happy Learning!","f927ecb4":"## Import libraries \ud83d\udcda","8c7ffc5d":"# **Impact of Covid19 on Digital Learning in the United States**","30bc811f":"# Products ","50a78ada":"#### From the plot below, we can observe that pct_access is positively correlated with engagement index. ","585c8c90":"### The top 10 products that show a positive trend in engagement index in the second half of the year","e295e6dd":"# Acknowledgements\n\nThanks to [Leonie's](https:\/\/www.kaggle.com\/iamleonie) -  [How To Approach Analytics Challenges](https:\/\/www.kaggle.com\/iamleonie\/how-to-approach-analytics-challenges)  which helped us to efficiently preprocess the data \n\n* [U.S Statewise Demography Data](https:\/\/www.kaggle.com\/derinrobert\/us-statewisedemography-info-20102019) wrangled from [United States Census Bureau](https:\/\/www.census.gov\/data\/tables\/time-series\/demo\/popest\/2010s-national-detail.html)\n\n* [COVID-19 US State Policy Database](https:\/\/www.kaggle.com\/cavfiumella\/covid19-us-state-policy-database) by [Andrea Serpolla](https:\/\/www.kaggle.com\/cavfiumella)\n\n* [U.S. Public Education Spending Statistics](https:\/\/educationdata.org\/public-education-spending-statistics) by [EDUCATIONDATA.ORG](https:\/\/educationdata.org\/public-education-spending-statistics)\n\n\n* [Number of Schools in the United States](https:\/\/www.statista.com\/statistics\/304974\/us-public-elementary-and-secondary-schools-by-state\/) from [statista.com](https:\/\/www.statista.com)\n\n\n* [COVID-19 US State Policy Database](https:\/\/opendata.fcc.gov\/resource\/4kuc-phrr.json) from [FCC Open Data](https:\/\/opendata.fcc.gov\/Wireline\/Fixed-Broadband-Deployment-Data-June-2020-V1\/4kuc-phrr)\n\n##### *Code to efficiently extract the average upload and download speed from FCC Open Data*\n```\nimport requests\nimport pandas as pd\nresponse =  requests.get('https:\/\/opendata.fcc.gov\/resource\/4kuc-phrr.json?$select= stateabbr,avg(maxaddown),avg(maxadup)&$group= stateabbr')\nprint(response.status_code)  # 200 if the API Call was successful\ndata = response.json()\nspeed2020df = pd.DataFrame(data)  \n```","3389ad95":"**We are here to take a look at the impact of the pandemic on students and digital learning tools. The 2020-2021 posed a great challenge for teachers as well as students, but, has it given us a new direction that we could embrace?**\n\n**If yes, what are the factors contributing to it?**","7a8981a7":"\n![](http:\/\/static01.nyt.com\/images\/2020\/03\/18\/business\/18Techfix-illo\/18Techfix-illo-articleLarge.gif?quality=75&auto=webp&disable=upscale)","3da0fa4a":"#### Is this correlation affected by the locale?\n\n* Yes, from the below plot we can observe that the correlation stays more or less the same for all the locales except 'city'","c2d1f221":"## Data Definition\n### Engagement data\n![newplot (2)](https:\/\/user-images.githubusercontent.com\/69154768\/134678776-b7dc6e16-5fe1-4686-bf25-1808b3ac75a9.png)\n![image](https:\/\/user-images.githubusercontent.com\/69154768\/134679097-28b9734d-8437-43b3-898a-3e7d2961ad4d.png)\n### District information data\n![newplot](https:\/\/user-images.githubusercontent.com\/69154768\/134678803-c46f0aff-53cb-48fd-96fe-dae4cb0bd000.png)\n![image](https:\/\/user-images.githubusercontent.com\/69154768\/134679186-979ffee4-956a-4b81-9528-c79b9017a15b.png)\n### Product information data\n![newplot (1)](https:\/\/user-images.githubusercontent.com\/69154768\/134678785-21bd5ee8-d840-43bd-9a14-5bec09a76a54.png)\n![image](https:\/\/user-images.githubusercontent.com\/69154768\/134679282-5811f31b-46f0-489d-8dbc-4559679624bc.png)","af6249ce":"##### Let's start by looking at the average download speed of data available in each state","b0af7fa5":"## Internet Speed","6a23a800":"# Exploratory Data Analysis \ud83c\udf1f\n![](http:\/\/healthcarecmi.files.wordpress.com\/2020\/12\/growth-analysis.gif)","7730016d":"# Time to get our hands dirty by cleaning the dataset \ud83e\uddf9\n![](https:\/\/user-images.githubusercontent.com\/69154768\/134681086-f58aed7d-b7f4-4ffb-afab-19f20ca6dfdf.gif)","d358bd27":"# Demography & Engagement Index","552586b4":"### **Engagement Index is not correlated with the student population of the State**\n> * **California** with a population over *2.5 Million* (0-20 years) has a engagment index more or less **same** to **Indiana** where the population is less than *0.5 Million*\n> * **New York** the busiest state which has a population just over *1.5 Million* has the ***Highest Engagement Index***\n","4a7afbb5":"### **Impact of the primary education is more on Engagement Index**\n> * **New York is the state that spends more on K-12 as well as Postsecondary education.** \n> * **Focussing on K12 education plays a key role in the average Engagement Index of the State.**","75d30c54":"### How does Engagement Index vary with locale ?\n\nFrom the given dataset, we can observe that the engagement index from the locale 'city' is the least. Perhaps more relevant data could alter this observation.","0305e308":"This step is crucial to any data analysis process that gives us a bird view of the details we have to find the right answers to our question of how the digital learning trends have been during the pandemic.\n\nHowever, this could also be worked the other way around by asking, \"**What kind of questions can I answer from this dataset?\" \ud83e\udd14**","97ab6888":"### How has the mean engagement index varied over time for the different product categories\n\n> We can see an upward trend in the engagement index across all the primary categories over time with maximum increase in trend for the Classroom Management (CM) tools which must have become a necessity for virtual schooling. \n\n> This increase is followed by Learning & Curriculum (LC) tools which also gained momentum, albeit slowly.\n\n> Therefore, digital learnint picked pace during the second half of the year 2020.","faafb494":"### Distribution of the products by their primary and sub functions\n\n> A huge chunk of the products are primarily used for 'Learning & Curriculum(LC)\" followed by \"Classroom Management(CM)\" and \"School & District Operations (SDO)\"","af61dec2":"### Popular products in each locale\n\n> Google docs, Google classroom, Youtube, Canvas remain popular amongst all the locales, products are Kahoot and schoology have a good base in Town and Rural areas. ","a735d5b7":"**The plot below helps us explain the dips in given line chart**\n\n> We can conclude that the minor dips are caused by the weekends\n> Summer holiday can help us explain the relatively smaller engagement index between the period June 20 - August 16.","bb908739":"# Locale"}}