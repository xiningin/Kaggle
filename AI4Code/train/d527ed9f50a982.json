{"cell_type":{"ef3d00a0":"code","59931cf8":"code","d3c2f333":"code","f94cbe06":"code","26d00e35":"code","eafb0fae":"code","1917c7e8":"code","f7b18584":"code","48246414":"code","035ddc2b":"code","cdc07425":"code","6e06074f":"code","822f770f":"code","e9e5acef":"code","010ba272":"code","bce19d0a":"code","5e76388b":"code","cb5c72fd":"code","326bfd87":"code","101a2a31":"code","14e90eb8":"code","8ab4ce0a":"code","76e64d81":"code","b8bfe13f":"code","25f401ca":"code","59cff2a9":"code","cc3f86df":"code","2f1b7e9e":"markdown","ff2d6493":"markdown","1f32af4f":"markdown","78ac537e":"markdown","ea5481b2":"markdown","7ce370e7":"markdown","40115f1e":"markdown","6227146b":"markdown","6a36b014":"markdown","0f2bcd52":"markdown","b55715bd":"markdown","43039202":"markdown","4c5aed02":"markdown","7b13160b":"markdown","b71df168":"markdown","8b86893f":"markdown","20effe6d":"markdown","6335b91d":"markdown","01ad9f3f":"markdown","0ec4b55e":"markdown","155af091":"markdown","f25e3523":"markdown","7fa370c7":"markdown","0ed629a7":"markdown","0de734f5":"markdown","5b3f444e":"markdown","e96c61d1":"markdown"},"source":{"ef3d00a0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\nimport operator\nimport re\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import RandomizedSearchCV","59931cf8":"players_df = pd.read_csv(\"..\/input\/data.csv\")\nplayers_df.head()","d3c2f333":"players_df = players_df.drop(columns=['ID','Photo','Club Logo','Work Rate','Body Type','Real Face','Loaned From',\n                                     'LS','ST','RS','LW','LF','CF','RF','RW','LAM','CAM','RAM','LM','LCM','CM',\n                                     'RCM','RM','LWB','LDM','CDM','RDM','RWB','LB','LCB','CB','RCB','RB'])\nplayers_df = players_df.drop(players_df.columns[0], axis=1)\nplayers_df.info()","f94cbe06":"players_df = players_df.dropna(axis = 0, how = 'any')\nplayers_df.info()","26d00e35":"def findValue(value):\n    splitted = re.split('(\\d+\\.\\d+|\\d+)([A-Z])',value)\n    try:\n        if splitted[2] is 'M':\n            return pd.to_numeric(splitted[1])\n        else:\n            return pd.to_numeric(splitted[1])\/1000\n    except IndexError:\n        return 0\n\ndef findWages(value):\n    return re.findall('\\d+\\.\\d+|\\d+',value)[0]\n\ndef findAttribute(value):\n    return re.findall('\\d+',value)\n            \nplayers_df['Value'] = players_df['Value'].apply(findValue)\nplayers_df['Wage'] = players_df['Wage'].apply(findWages)\nplayers_df['Value'] = pd.to_numeric(players_df['Value'])\nplayers_df['Wage'] = pd.to_numeric(players_df['Wage'])\nplayers_df","eafb0fae":"countries = list(players_df.groupby(['Nationality']).groups.keys())\ntemp = players_df.groupby(['Nationality']).count()\ntemp = list(temp.loc[:,\"Name\"])\ncountries_dict = dict(zip(countries,temp))\nsorted_countries = sorted(countries_dict.items(), key=operator.itemgetter(1),reverse=True)\ncountries_dict = dict(sorted_countries)\ncountries_dict = {k: countries_dict[k] for k in list(countries_dict)[:5]}\nfigure(num=None, figsize=(8, 6), dpi=80, facecolor='w', edgecolor='k')\nwith plt.style.context(('ggplot')):\n    plt.bar(countries_dict.keys(), countries_dict.values(),color=\"grey\")\n    plt.xlabel('Countries ------>')\n    plt.ylabel('Number of players -------->')\n    plt.title('Player-Nationality Distribution')\n    plt.show()","1917c7e8":"overall = list(players_df.loc[:,\"Overall\"])\nfigure(num=None, figsize=(8, 6), dpi=80, facecolor='w', edgecolor='k')\nwith plt.style.context(('ggplot')):\n    plt.hist(overall, bins=12, ec='black', alpha=0.8, color='blue')\n    plt.xlabel(\"Overall ------->\")\n    plt.ylabel(\"Number of players --------->\")\n    plt.xticks([50,55,60,65,70,75,80,85,90,95,100])\n    plt.title(\"Overall Distribution in FIFA 19\")\n    plt.show()","f7b18584":"gk_defenders = players_df.loc[players_df['Position'].isin(['GK','RWB','RB','RCB','CB','LCB','LB','LWB'])]\nfigure(num=None, figsize=(10, 6), dpi=80, facecolor='w', edgecolor='k')\nsns.boxplot(x= gk_defenders['Position'], y=gk_defenders['Overall']).set_title('Range of Goalkeeper and Defender Overalls')\nmidfielders = players_df.loc[players_df['Position'].isin(['RM','CM','LM','CDM','RDM','LDM','RAM','CAM','LAM'])]\nfigure(num=None, figsize=(10,6), dpi=80, facecolor='w', edgecolor='k')\nsns.boxplot(x=midfielders['Position'],y=midfielders['Overall']).set_title('Range of Midfielder Overalls')\nforwards = players_df.loc[players_df['Position'].isin(['RW','CF','LW','ST','RS','LS'])]\nfigure(num=None, figsize=(10,6), dpi=80, facecolor='w', edgecolor='k')\nsns.boxplot(x=forwards['Position'], y=forwards['Overall']).set_title('Range of Forward Overalls')","48246414":"heatmap_df = players_df.filter(['Position','Crossing','Finishing','HeadingAccuracy','ShortPassing','Volleys','Dribbling',\n                               'Curve','FKAccuracy','LongPassing','BallControl','Acceleration','SprintSpeed','Agility',\n                                'Reactions','Balance','ShotPower','Jumping','Stamina','Strength','LongShots','Aggression',\n                               'Interceptions','Positioning','Vision','Penalties','Composure','Marking','StandingTackle',\n                               'SlidingTackle']).groupby('Position').mean()\nheatmap_df_defenders = heatmap_df.loc[['RWB','RB','RCB','CB','LCB','LB','LWB']]\nheatmap_df_defenders = heatmap_df_defenders.round().astype(int)\nfigure(num=None, figsize=(15, 6), dpi=80, facecolor='w', edgecolor='k')\nsns.heatmap(heatmap_df_defenders,annot=heatmap_df_defenders,fmt=\"\",cmap=\"RdYlGn\",linewidths=0.3)\nplt.title('Relation between Abilities and Defending Positions')\nplt.show()","035ddc2b":"heatmap_df_midfielders = heatmap_df.loc[['RM','CM','LM','CDM','RDM','LDM','RAM','CAM','LAM']]\nheatmap_df_midfielders = heatmap_df_midfielders.round().astype(int)\nfigure(num=None, figsize=(15, 6), dpi=80, facecolor='w', edgecolor='k')\nsns.heatmap(heatmap_df_midfielders,annot=heatmap_df_midfielders,fmt=\"\",cmap=\"RdYlGn\",linewidths=0.3)\nplt.title('Relation between Abilities and Midfield Positions')\nplt.show()","cdc07425":"heatmap_df_attackers = heatmap_df.loc[['RW','CF','LW','ST','RS','LS']]\nheatmap_df_attackers = heatmap_df_attackers.round().astype(int)\nfigure(num=None, figsize=(15, 6), dpi=80, facecolor='w', edgecolor='k')\nsns.heatmap(heatmap_df_attackers,annot=heatmap_df_attackers,fmt=\"\",cmap=\"RdYlGn\",linewidths=0.3)\nplt.title('Relation between Abilities and Attacking Positions')\nplt.show()","6e06074f":"overall = players_df.groupby(['Age']).mean()\noverall_list = list(overall.loc[:,\"Overall\"])\npotential_list = list(overall.loc[:,\"Potential\"])\nage = list(players_df.loc[:,\"Age\"].unique())\nage = sorted(age)\nfigure(num=None, figsize=(8, 6), dpi=80, facecolor='w', edgecolor='k')\nwith plt.style.context(('ggplot')):\n    plt.xticks([17,22,27,32,37,42])\n    plt.plot(age,overall_list,color='orange', linewidth=4, alpha=0.7, label='Overall')\n    plt.plot(age,potential_list, color='grey', linewidth=1, alpha=0.4, label='Potential')\n    plt.legend(loc='upper right')\n    plt.xlabel(\"Age -------->\")\n    plt.ylabel(\"Overall\/Potential ---------->\")\n    plt.title(\"Overall and Potential Distribution in FIFA 19 with respect to Age\")\n    plt.grid(b=None, which='major', axis='both', color='w')\n    plt.show()","822f770f":"valuation = players_df.groupby(['Age']).mean()\nvaluation_list = list(valuation.loc[:,'Value'])\nage = list(players_df.loc[:,'Age'].unique())\nage = sorted(age)\nfigure(num=None, figsize=(8, 6), dpi=80, facecolor='w', edgecolor='k')\nwith plt.style.context('ggplot'):\n    plt.plot(age,valuation_list)\n    plt.title(\"Variation of Player Value with Age\")\n    plt.xlabel(\"Age --------->\")\n    plt.ylabel(\"Valuation in millions --------->\")\n    plt.show()","e9e5acef":"wages = players_df.groupby(['Age']).mean()\nwages_list = list(valuation.loc[:,'Wage'])\nage = list(players_df.loc[:,'Age'].unique())\nage = sorted(age)\nfigure(num=None, figsize=(8, 6), dpi=80, facecolor='w', edgecolor='k')\nwith plt.style.context('ggplot'):\n    plt.plot(age,wages_list)\n    plt.title(\"Variation of Player Wages with Age\")\n    plt.xlabel(\"Age --------->\")\n    plt.ylabel(\"Wages in thousands --------->\")\n    plt.show()","010ba272":"value_list = list(players_df.loc[:,'Value'])\noverall = list(players_df.loc[:,'Overall'])\nfigure(num=None, figsize=(10, 6), dpi=80, facecolor='w', edgecolor='k')\nwith plt.style.context('ggplot'):\n    plt.scatter(overall,value_list,s=15,alpha=0.8,c='grey')\n    plt.xlabel('Overall -------->')\n    plt.ylabel('Valuation in millions -------->')\n    plt.title('Variation of Valuation with Overall')\n    plt.show()","bce19d0a":"clubs_df = players_df.groupby('Club').mean()\nclubs_df_youngest = clubs_df.sort_values(['Age'],ascending=True)\nclubs_df_youngest = clubs_df_youngest['Age']\nclubs_df_youngest = clubs_df_youngest[0:10]\nclubs_df_eldest = clubs_df.sort_values(['Age'],ascending=False)\nclubs_df_eldest = clubs_df_eldest['Age']\nclubs_df_eldest = clubs_df_eldest[0:10]\nclubs_youngest_eldest = pd.concat([clubs_df_youngest, clubs_df_eldest])\nclubs_youngest_plot = list(clubs_df_youngest)\nclubs_youngest_plot[:] = [age - 15 for age in clubs_youngest_plot]\nclubs_eldest_plot = list(clubs_df_eldest)\nclubs_eldest_plot[:] = [age - 25 for age in clubs_eldest_plot]\nclubs_eldest_plot[:] = [-age for age in clubs_eldest_plot]\nclubs_plot = clubs_youngest_plot + clubs_eldest_plot\nyoungest_eldest_clubs = list(clubs_youngest_eldest.index.values)\nwith plt.style.context('ggplot'):\n    figure(num=None, figsize=(15, 8), dpi=80, edgecolor='k')\n    plt.barh(youngest_eldest_clubs, clubs_plot)\n    plt.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=False)\n    clubs_youngest_eldest = list(clubs_youngest_eldest)\n    plt.show()","5e76388b":"talents_df = players_df.filter([\"Name\", \"Club\", \"Overall\"])\ntalents_df = talents_df[talents_df.Overall >= 85]\ntalents_df = talents_df.groupby(\"Club\").count()\ntalents_df = talents_df.sort_values(by=['Name'],ascending=False)\ntalents_df = talents_df[:10]\ntalents_clubs = list(talents_df.index.values)\ntalents_count = list(talents_df.iloc[:, 1])\nwith plt.style.context('ggplot'):\n    figure(num=None, figsize=(15, 8), dpi=80, edgecolor='k')\n    plt.barh(talents_clubs, talents_count)\n    plt.title('Top 10 talented clubs in FIFA 19')\n    plt.xlabel('Count ---------->')\n    plt.show()","cb5c72fd":"talented_df = players_df.filter(['Name', 'Club', 'Overall'])\ntalented_df = talented_df.groupby('Club').mean()\ntalented_df = talented_df.sort_values(by=['Overall'], ascending=False)\ntalented_df = talented_df[:10]\ntalented_clubs = talented_df.index.values\nplayers_talented_clubs = players_df.filter(['Name','Club','Overall'])\nplayers_talented_clubs = players_talented_clubs.loc[players_talented_clubs['Club'].isin(talented_clubs)]\nplayers_talented_clubs\nwith plt.style.context('ggplot'):\n    figure(num=None, figsize=(14, 6), dpi=80, facecolor='w', edgecolor='k')\n    sns.violinplot(x= players_talented_clubs['Club'], y=players_talented_clubs['Overall']).set_title('Overall distribution of the top 10 talented clubs in FIFA 19')","326bfd87":"potential_df = players_df.filter(['Name','Age','Overall','Potential'])\npotential_df['Growth'] = potential_df['Potential'] - potential_df['Overall']\npotential_df = potential_df.sort_values(by=['Growth'],ascending=False)\npotential_df = potential_df.iloc[:10]\nplayers_list = list(potential_df.iloc[:, 0])\noverall_list = list(potential_df.iloc[:,2])\ngrowth_list = list(potential_df.iloc[:,4])\nwith plt.style.context('ggplot'):\n    figure(num=None, figsize=(15, 8), dpi=80, edgecolor='k')\n    plt.barh(players_list, overall_list, color='green', label='Overall')\n    plt.barh(players_list, growth_list, left=overall_list, color='green', label='Growth', alpha=0.3)\n    plt.legend()\n    plt.title('Top 10 Players with the best growth potential')\n    plt.xlabel('Overall -------------->')\n    plt.show()","101a2a31":"valuation_df = players_df.filter(['Name','Club','Value','Wage'])\nvaluation_df = valuation_df.groupby('Club').sum()\nvaluation_df = valuation_df.sort_values(by=['Value'], ascending=False)\nvaluation_df = valuation_df[:10]\nclubs_list = list(valuation_df.index.values)\nvalue_list = list(valuation_df.iloc[:, 0])\nwage_list = list(valuation_df.iloc[:, 1])\nalpha_list = wage_list\nwage_list[:] = [wages \/ 5 for wages in wage_list]\n#alpha_list[:] = [alpha\/1004 for alpha in alpha_list]\nrgba_colors = np.zeros((10,4))\nrgba_colors[:,0] = 1.0\nrgba_colors[:, 3] = alpha_list\nwith plt.style.context('ggplot'):\n    figure(num=None, figsize=(15, 8), dpi=80, edgecolor='k')\n    plt.scatter(value_list, clubs_list, s = wage_list )\n    plt.show()","14e90eb8":"pot = list(players_df.iloc[:,5])\nval = list(players_df.iloc[:,7])\nfigure(num=None, figsize=(10, 6), dpi=80, facecolor='w', edgecolor='k')\nwith plt.style.context('ggplot'):\n    plt.scatter(pot,val,s=15,alpha=0.8,c='grey')\n    plt.xlabel('Potential -------->')\n    plt.ylabel('Valuation in millions -------->')\n    plt.title('Variation of Valuation with Potential')\n    plt.show()","8ab4ce0a":"X = players_df.iloc[:,4:6]\ny = players_df.iloc[:,7]\ntrain_X, test_X, train_y, test_y = train_test_split(X, y, test_size = 0.20, random_state = 42)\nprint('Training matrix of features shape: ', train_X.shape)\nprint('Training dependent variable shape: ', train_y.shape)\nprint('Test matrix of features shape: ', test_X.shape)\nprint('Test dependent variable shape: ', test_y.shape)","76e64d81":"regressor = RandomForestRegressor(n_estimators=10, random_state=42)\nregressor.fit(train_X, train_y)\npredictions = regressor.predict(test_X)\nerrors = abs(predictions - test_y)\nprint('Mean absolute error: ',round(np.mean(errors),2) )\n#Mean absolute Percentage error\nmape = 100 * (errors\/test_y)\n\n#Calculating accuracy\nacc = 100 - np.mean(mape)\nprint('Accuracy: ', round(acc,2), ' %')","b8bfe13f":"print(regressor.get_params())","25f401ca":"n_estimators = [int(x) for x in np.linspace(start=200, stop= 2000, num=10)]\nmax_features = ['auto','sqrt']\nmax_depth = [int(x) for x in np.linspace(10,110,num=11)]\nmax_depth.append(None)\nmin_samples_split = [2,5,10]\nmin_samples_leaf = [1,2,4]\nbootstrap = [True,False]\nrandom_grid = {'n_estimators': n_estimators,\n              'max_features': max_features,\n              'max_depth': max_depth,\n              'min_samples_split': min_samples_split,\n              'min_samples_leaf': min_samples_leaf,\n              'bootstrap': bootstrap}\nregressor_random = RandomizedSearchCV(estimator = regressor, param_distributions = random_grid, \n                                     n_iter=100, cv=3, verbose=2, random_state=42, n_jobs=-1)\nregressor_random.fit(train_X, train_y)","59cff2a9":"regressor_random.best_params_","cc3f86df":"predictions_random = regressor_random.predict(test_X)\nerrors = abs(predictions_random - test_y)\nprint('Mean absolute error: ',round(np.mean(errors),2) )\n#Mean absolute Percentage error\nmape = 100 * (errors\/test_y)\n\n#Calculating accuracy\nacc = 100 - np.mean(mape)\nprint('Accuracy: ', round(acc,2), ' %')","2f1b7e9e":"FC Nordsjaelland of Denmark has the youngest squad in FIFA 19, followed by FC Sochaux of France and Bohemian FC of Ireland. In general, South American clubs have the oldest squads in the game with all of the 10 such clubs being from South America.\n\nSome managers prefer to have the most talented players in their disposal. Hence, such managers will prefer managing clubs with the most talents. But how do we define a talent? Is it the number of superstars in a squad? Or does it mean having a higher average player OVR rating? \nIn this section, we will try to answer both the above questions. If we define talent as a footballer having a rating of above 85, we get the following visualization.","ff2d6493":"We notice that A.Dabo has the maximum potential. Dabo currently has an OVR of just over 60 and has the potential to reach around 92-93. He is closely followed by Y.Lenze and J.von Moos. Managers will surely love to keep an eye on these players.\n\nSome managers like to manage clubs with the maximum valuation. This allows them to sell some of the existing players of the club in order to make money for buying players which best fit their playing style. Here are the 10 most valuable clubs in the game.","1f32af4f":"A correlation heatmap is a great visualization to depict the dependency between different features in a dataframe. \nAmongst the defending positions, we notice that attributes like Sprint Speed, Acceleration and Stamina are the differentiators amongst players in RWB, RB, LWB and LB positions. This is expected since these players have to run across the flanks in order to help their side in both defence and attack.\nSome parameters like Balance and Stamina are maximum in players playing in central midfield positions. Attacking players like Forwards and Strikers have good Acceleration, Stamina, Sprint Speed, Strength and Shot Power among others. It is natural that these players are poor in defensive attributes like Marking, Standing Tackle and Sliding Tackle.","78ac537e":"Spanish giant Real Madrid have the most footballers with an overall rating of above 85. They are followed by Juventus of Italy and Manchester City of England. The top 10 clubs include three each from Spain and England, followed by two from Italy (Juventus and Inter Milan). PSG and Bayern Munich make up the other two.","ea5481b2":"We notice from the bar graph that England is represented the most by over 1600 players in the dataset, followed by Germany, Spain, Argentina and France. There are some causes behind this and one of them is FIFA 19 contains upto three divisions of English football. Hence, a large number of English players find their place in the game. Similarly, two divisions of the German league and the Spanish league are also present in the game and hence these players are found in good numbers.\n\nLet us now have a look at how player ratings are distributed in FIFA 19.","7ce370e7":"We can see that all the columns have the same number of records. Hence, we can start modifying some of the values in order to aid our visualizing process. One such column in the Value column. The Value column lists certain player valuations in thousands and some in millions. This poses two problems. First of all, we need to convert the values to a numeric type since we cannot create the required visualizations without doing so. Secondly, we need to modify the values in terms of a single unit i.e. either thousands or in millions. In the following code, we modify the Value column values to a numeric type in terms of millions. This is done with the help of regular expressions and some simple mathematical calculations. We also convert the Wages field values to numeric types represented in terms of thousands.","40115f1e":"**PREDICTING PLAYER VALUATION USING RANDOM FOREST REGRESSION**\n\nWe will now use Random Forest Regression to predict the valuation of footballers using the overall rating and potential. Earlier, we have visualized the relation between player rating and player valuation. In the following visualization, we will see how potential varies with valuation. No prizes for guessing the result.","6227146b":"Our training set consists of 13314 records. We will train our model on this dataset and test it on the 3329 records present in the test set.","6a36b014":"Here are the best hyperparameters as suggested by the Random Search Cross Validation algorithm. We notice that there are some significant differences from our earlier model. ","0f2bcd52":"Amongst the defenders, certain positions like CB and LB has a large amount of outliers which indicate a large range in overall values. Even goalkeepers have a large range of such values. Among the midfielders, positions like CDM have a good amount of outliers. LDM have a small interquartile range but have a large amount of outliers on the minimum side. ST also has a large amount of outliers on the maximum side. Certain positions like RAM and LAM have a small interquartile distance with low amount of outliers. This is primarily due to lack of records for such positions.\n\nWe will now have a look at whether the position of a footballer has an adverse impact on his ability.","b55715bd":"EXPLORATORY DATA ANALYSIS\n\nWe notice that there are a number of fields which are of no use in our analysis. These fields include Unnamed:0, ID, Photo, Club Logo and so on. These fields need to be dropped. There are also some fields like Value, Wage which needs modification so as to aid our analysis process.","43039202":"DATASET DISTRIBUTION\n\nI will begin my analysis of the dataset by having a look at the distribution of the dataset. Football is a multi-national sport and is played in over 200 countries. So, naturally a large number of countries are represented in our FIFA 19 Player Dataset. We find out the countries which have the most number of players in the game.","4c5aed02":"Unsurprisingly, the value of a player also increases with age and reaches a maximum at around the age of 31. After 31, the value of a player starts dwindling and hence it is important for future FIFA 19 managers to note this. \nThe relationship between player wages and age also follows a similar pattern as depicted below:","7b13160b":"After removing the unrequired columns, we use the info() to find out the number of values under every column. Our dataset contains a total of 18207 records but we notice that some columns like Club, Preferred Foot, International Reputation and so on contains less than 18207 records. This means a number of these columns are filled with None values. Hence, we need to remove these records so that they do not hamper our visualization and prediction process.","b71df168":"**FEW THINGS TO REMEMBER**\n\nI noticed a few patterns in the data present in the FIFA 19 dataset and this may prove to be very handy for players. One such pattern is the relationship between Overall Rating and Age.","8b86893f":"After importing the requisite packages, we load the dataset and familiarize ourselves with it by having a look at the first five records in the dataset.","20effe6d":"Next up, we will have a look at how overall ratings affect the valuation of a footballer with the help of a scatter plot.","6335b91d":"**INTRODUCTION**\n\nFIFA is a football based game developed by game giants EA Sports every year. So, it was no surprise that EA Sports launched FIFA 19 earlier this year. FIFA 19 contains a rich dataset with plenty of attributes covering all aspects of a real-life footballer in an attempt to immitate him as much as possible in the virtual world. This rich dataset provides a huge oppurtunity for us, data scientists or data analysts (you choose the term !) to analyze and come up with visualizations and patterns. In this paper, I will try to cover the following:\n* The dataset distribution based on player nationality, player overall rating, age vs overall rating, player valuation and so on.\n* The patterns in the dataset.\n* Suggestions for playing Manager Mode.\n\nTo begin with, we import the Python packages used in our analysis.","01ad9f3f":"FIFA 19 has a fairly pyramidal distribution of overall with the highest number of players being concentrated in the range between 65 and 70. It is not surprising that only a few players have an overall rating of more than 90. These include the very best footballers of the planet including the likes of Cristiano Ronaldo and Lionel Messi.\n\nLet us now have a look at how the overall rating of footballers ranges in accordance to their playing position. We will group the positions into three main positions of a football i.e. Defender, Midfielder and Forward, and include goalkeepers inside the defenders grouping.","0ec4b55e":"We notice that the overall of a player increases as he ages. This continues till about the age of 30 or 31 when the player is at his prime. Post 30, a player starts to decline in performance.\nWe also see that the actual overall and the potential of a player in FIFA 19 come to equal terms at about the age of 29. The potential of a player is a reflection of his overall rating if he reaches his prime.\n\nNow, let us have a look at how age affects the valuation of a footballer.","155af091":"The modified model gives us an accuracy of 75% which is a slight improvement from the previous accuracy. This may appear to be insignificant but depending on the business domain and the problem, this improvement may have massive altercations.\n\nInspired by the work of a fellow Kaggler. Suggestions and comments are welcome! Thank you.","f25e3523":"The default hyperparameters does  not guarantee an optimal result for a problem. Hence, we will now apply the techniques of Hyperparameter Tuning to improve our model. In this respect, we will use Random Search Cross Validation to find an optimal model and improve accuracy.","7fa370c7":"Quite unsurprisingly, Spanish giants Real Madrid and FC Barcelona are the most valuable football clubs in the game. These clubs also pay the most wages to their footballers. It is interesting to note that although Manchester United are 10th in this list, they pay more wages than other clubs in the list like Bayern Munich, PSG and Juventus among others. Atletico Madrid are one of the most well managed clubs. Although they are the fifth most valuable club, they pay the lowest wages among these clubs.","0ed629a7":"We find that the model exhibits a MBE of 0.45 and accuracy of 74% which leaves a good scope for improvement. Most of the parameters used in our model are the default ones. The default parameters are not often the best parameters in a machine learning algorithm and hence leaves an area for improvement. First of all, let us have a look at the default parameters used by our Random Forest Algorithm.","0de734f5":"It is easily noticeable that the valuation of a footballer increases with his overall rating.\n\n**PLAYING MANAGER MODE**\n\nThe Manager Mode of FIFA19 is one of the most popular features of the game among gamers. It puts a gamer on the managerial seat of his\/her favourite football club. Different managers have different preferences when it comes to selecting the football club he\/she will manage. Some players prefer to start off with a club having a young squad, thus having more scope of developing footballers. Here, we have a look at favourable clubs for these managers and the clubs he\/she will stay away from. ","5b3f444e":"Potential varies with player valuation in the same way that player overall rating varies with player valuation. We will now create the training and test sets for the machine learning model.","e96c61d1":"Now if we were to define the most talented club as the one having the maximum average player overall rating, then these are the top 10 clubs. We find that clubs like Napoli, Roma, Benfica and Milan have entered the mix here. It is interesting to note that four Italian clubs figure in this list. Serie A is known for having sturdy defenders and hence, managers to like to play attacking football may find managing one of these four clubs very interesting.\n\nManagers also need to be aware of young starlets in the transfer market. Here, we look at the youngest players to have the most to gain in terms of achieving their potential. Most of these players come at a low fee and demand low wages to make life easier for the managers."}}