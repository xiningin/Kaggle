{"cell_type":{"afae1cc9":"code","b4d8d235":"code","f78eb8ac":"code","45186c66":"code","0bd0634b":"code","df616909":"code","143dc888":"code","9c9dbd97":"code","74f1df4f":"code","e670f1e3":"code","cce0fb14":"markdown","187f98aa":"markdown","fdea256a":"markdown","2485ac85":"markdown","6651d192":"markdown","d0d7bcf2":"markdown","07fc7fd5":"markdown","4cc2fee0":"markdown","18bb7321":"markdown"},"source":{"afae1cc9":"import numpy as np \nimport pandas as pd\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.decomposition import PCA","b4d8d235":"data = pd.read_csv('..\/input\/latest-covid19-cases-maharashtra-india\/Maharashtra Latest Covid Cases.csv')\ndata.head()","f78eb8ac":"# Clean column names for further usage\ndata.columns = data.columns.str.lower().str.replace(r\"[^a-zA-Z]\", \" \", regex=True)\\\n.str.strip().str.replace(\" \", \"_\")\n\ndata.index = data.districts\ndel data[\"districts\"]","45186c66":"data.info()","0bd0634b":"corr = data.corr()\nfig = go.Figure(data=go.Heatmap(z=corr, x=data.columns, y=data.columns))\nfig.show()","df616909":"fig = make_subplots(rows=2, cols=1)\n\nfig.add_trace(go.Scatter(x=data.positive_cases, y=data.recovered, \n                         mode=\"markers\", text=data.index), row=1, col=1)\n\nfig.add_trace(go.Scatter(x=data.positive_cases, y=data.deceased, \n                         mode=\"markers\", text=data.index), row=2, col=1)\n\nfig.update_xaxes(title_text=\"Number of positive cases\", row=1, col=1)\nfig.update_xaxes(title_text=\"Number of positive cases\", row=2, col=1)\n\nfig.update_yaxes(title_text=\"Number of recovered\", row=1, col=1)\nfig.update_yaxes(title_text=\"Number of deceased\", row=2, col=1)\n\n\ntitle = \"Dependency between number of positive cases and number of recovered\\deceased\"\nfig.update_layout(showlegend=False, height=700, width=1000, title_text=title)\nfig.show()","143dc888":"fig = px.scatter_3d(data, x='positive_cases', y='recovery_rate', z='fatality_rate',\n              color='fatality_rate', text=data.index)\n\n\nfig.update_layout(margin=dict(l=0, r=0, b=0, t=0))\nfig.show()","9c9dbd97":"scaler = StandardScaler()\npca = PCA(2)\n\ndata_scaled = scaler.fit_transform(data)\ndf_transformed = pca.fit_transform(data_scaled)","74f1df4f":"sse_vals = []\nsilhouette_vals = []\nn_clusters = np.arange(2, 10)\nfor temp in n_clusters:\n    kmeans = KMeans(n_clusters=temp)\n    kmeans.fit(data_scaled)\n    sse_vals.append(kmeans.inertia_)\n    silhouette_vals.append(silhouette_score(data_scaled, kmeans.predict(data_scaled)))\n    \nfig = make_subplots(specs=[[{\"secondary_y\": True}]])\n\nfig.add_trace(\n    go.Scatter(x=n_clusters, y=sse_vals, name=\"SSE\"),\n    secondary_y=False)\n\nfig.add_trace(\n    go.Scatter(x=n_clusters, y=silhouette_vals, name=\"Silhouette\"),\n    secondary_y=True)\n\nfig.update_xaxes(title_text=\"Number of clusters\")\nfig.show()","e670f1e3":"kmeans = KMeans(n_clusters=5)\nkmeans.fit(data_scaled)\n\nfig = go.Figure(data=go.Scatter(x=df_transformed[:, 0], y=df_transformed[:, 1], \n                                mode='markers',\n                                marker=dict(color=kmeans.labels_, size=data.positive_cases \/ 8000),\n                                text=data.index))\nfig.update_xaxes(title_text=\"new_feature_1\")\nfig.update_yaxes(title_text=\"new_feature_2\")\nfig.update_layout(height=600, width=900)\nfig.show()","cce0fb14":"## According to SSE and inertia, optimal number of clusters is 5.","187f98aa":"# **Plotting dependencies**","fdea256a":"# **Basic data handling and overview**","2485ac85":"# **Check pairwise correlation of columns**","6651d192":"# **Number of positive cases \\ recovery rate \\ fatality rate plot**","d0d7bcf2":"## Choose number of K for KMeans clustering ","07fc7fd5":"There is high linear dependence between following pairs:\n- number of positive cases and number of deceased;\n- number of positive cases and number of recovered;\n- number of positive cases and number of active cases;\n- number of recovered and number of deceased.\n","4cc2fee0":"# **Clustering**","18bb7321":"## Data preparations: scaling, dimensionality reduction"}}