{"cell_type":{"bd8cf92d":"code","db33d2b3":"code","73ec9cd8":"code","6db27210":"code","f4e5d5ab":"code","7017d658":"code","372858b1":"code","b8585e97":"code","29db3a45":"code","db591be8":"code","4c1f43ae":"code","39b32f3d":"code","9c24226d":"code","ab8c4f4c":"code","d159518c":"code","a583be1a":"code","137e4854":"code","90b1dc37":"code","6f58d921":"code","b04a9b6a":"code","7c149cc5":"code","28e31142":"code","8b7680cb":"code","e739cf0d":"code","0cbb36ee":"code","f56b95bd":"code","68f38e14":"code","1c34bfb1":"code","c03c84f8":"code","83b5e3eb":"code","9caa3a32":"code","228072a7":"code","ce885634":"code","a7b0fafa":"code","c06e17f5":"code","343d83f2":"code","28f3ffcd":"code","9fbf3087":"code","251835e2":"markdown","b2339e0e":"markdown","9f5a7eb7":"markdown","8a930f8e":"markdown"},"source":{"bd8cf92d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","db33d2b3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sb","73ec9cd8":"dataset = pd.read_csv('..\/input\/insurance\/insurance.csv')\ndataset.head()","6db27210":"dataset.shape","f4e5d5ab":"dataset.describe()","7017d658":"plt.figure(figsize=(20,8))\n\nplt.subplot(1,2,1)\nplt.title('Insurance Charges Distribution Plot')\nsb.distplot(dataset.charges,color ='red')\n\nplt.subplot(1,2,2)\nplt.title('Insurance Charges Spread')\nax = sb.boxplot(y = dataset.charges ,color = 'red' )\n#ax = sb.swarmplot(y = dataset.charges,color = 'black')\n\nplt.show()","372858b1":"X = dataset.iloc[: ,:-1].values\n\ny = dataset.iloc[:, 6].values","b8585e97":"dataset[\"age_range\"] = dataset['age'].apply(lambda x : \"young\" if x < 30\n                                                     else (\"middle adulthood\" if 30 <= x < 50\n                                                           else (\"late adulthood\")))\ndataset.head()","29db3a45":"df = pd.DataFrame(dataset.groupby(['age_range'])['charges'].mean().sort_values(ascending = False))\ndf.plot.bar(color = 'cyan')\nplt.title('age_range vs Average charges')\nplt.show()","db591be8":"df = pd.DataFrame(dataset.groupby(['sex'])['charges'].mean().sort_values(ascending = False))\ndf.plot.bar(color = 'red')\nplt.title('sex vs Average charges')\n\nplt.show()","4c1f43ae":"dataset[\"bmi_range\"] = dataset['bmi'].apply(lambda x : \"thin\" if x < 19\n                                                     else (\"fit\" if  19 <= x < 25\n                                                           else (\"overweight\" if  25 <= x < 28\n                                                                else (\"Obese\"))))\n                                            \ndataset.head()","39b32f3d":"df = pd.DataFrame(dataset.groupby(['bmi_range'])['charges'].mean().sort_values(ascending = False))\ndf.plot.bar(color = 'cyan')\nplt.title('bmi_range vs Average charges')\nplt.show()","9c24226d":"df = pd.DataFrame(dataset.groupby(['children'])['charges'].mean().sort_values(ascending = False))\ndf.plot.bar(color = 'red')\nplt.title('children vs Average charges')\nplt.show()","ab8c4f4c":"df = pd.DataFrame(dataset.groupby(['smoker'])['charges'].mean().sort_values(ascending = False))\ndf.plot.bar(color = 'cyan')\nplt.title('smoker vs Average charges')\nplt.show()","d159518c":"df = pd.DataFrame(dataset.groupby(['region'])['charges'].mean().sort_values(ascending = False))\ndf.plot.bar(color = 'red')\nplt.title('region vs Average charges')\nplt.show()","a583be1a":"def attributes(x,y):\n    sb.pairplot(dataset, x_vars=[x,y], y_vars='charges',size=4, aspect=1, kind='scatter')\n    plt.show()\n    \n    \nattributes('age','bmi')\n","137e4854":"plt1 = sb.scatterplot(x = 'age', y = 'charges', hue = 'age_range', data = dataset)\nplt1.set_xlabel('age')\nplt1.set_ylabel('Charges')\nplt.show()","90b1dc37":"plt1 = sb.scatterplot(x = 'bmi', y = 'charges', hue = 'bmi_range', data = dataset)\nplt1.set_xlabel('bmi')\nplt1.set_ylabel('Charges')\nplt.show()","6f58d921":"attributes = dataset[['age_range','sex','bmi_range','children','smoker','region','charges']]\nattributes.head()","b04a9b6a":"# Defining the map function\ndef dummies(x,df):\n    temp = pd.get_dummies(df[x], drop_first = True)\n    df = pd.concat([df, temp], axis = 1)\n    df.drop([x], axis = 1, inplace = True)\n    return df\n\n# Applying the function to the  attributes\n\nattributes = dummies('age_range',attributes)\nattributes = dummies('sex',attributes)\nattributes = dummies('bmi_range',attributes)\nattributes = dummies('smoker',attributes)\nattributes = dummies('region',attributes)","7c149cc5":"attributes.head()","28e31142":"# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(attributes, y, test_size = 0.20, random_state = 0)","8b7680cb":"from sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()\nnum_vars = ['charges']\nX_train[num_vars] = scaler.fit_transform(X_train[num_vars])","e739cf0d":"X_train.head()","0cbb36ee":"y_train = X_train.pop('charges')\nX_train_new = X_train","f56b95bd":"import statsmodels.api as sm\nmodel = sm.OLS(y_train, X_train_new.astype(float)).fit()\nmodel.summary()","68f38e14":"def build_model(X,y):\n    X = sm.add_constant(X) #Adding the constant\n    lm = sm.OLS(y,X).fit() # fitting the model\n    print(lm.summary()) # model summary\n    return X","1c34bfb1":"X_train_new = build_model(X_train.astype(float),y_train)","c03c84f8":"X_train_new = X_train.drop(['male'], axis = 1)\nX_train_new = build_model(X_train_new.astype(float),y_train)","83b5e3eb":"X_train_new = X_train_new.drop(['southeast'], axis = 1)\nX_train_new = X_train_new.drop(['northwest'], axis = 1)\nX_train_new = X_train_new.drop(['southwest'], axis = 1)\n\nX_train_new = build_model(X_train_new.astype(float),y_train)","9caa3a32":"lm = sm.OLS(y_train,X_train_new).fit()\ny_train_price = lm.predict(X_train_new)","228072a7":"# Plot the histogram of the error terms\nfig = plt.figure()\nsb.distplot((y_train - y_train_price), bins = 20)\nfig.suptitle('Error Terms', fontsize = 20)                  # Plot heading \nplt.xlabel('Errors', fontsize = 18)  ","ce885634":"num_vars = ['charges']\nX_test[num_vars] = scaler.fit_transform(X_test[num_vars])","a7b0fafa":"#Dividing into X and y\ny_test = X_test.pop('charges')\nXX_test = X_test","c06e17f5":"# Now let's use our model to make predictions.\nX_train_new = X_train_new.drop('const',axis=1)\n# Creating X_test_new dataframe by dropping variables from X_test\nX_test_new = XX_test[X_train_new.columns]\n\n# Adding a constant variable \nX_test_new = sm.add_constant(X_test_new)","343d83f2":"y_pred = lm.predict(X_test_new.astype(float))","28f3ffcd":"from sklearn.metrics import r2_score \nr2_score(y_test, y_pred)","9fbf3087":"#EVALUATION OF THE MODEL\n# Plotting y_test and y_pred to understand the spread.\nfig = plt.figure()\nplt.scatter(y_test,y_pred)\nfig.suptitle('y_test vs y_pred', fontsize=20)              # Plot heading \nplt.xlabel('y_test', fontsize=18)                          # X-label\nplt.ylabel('y_pred', fontsize=16)  ","251835e2":"avg charges of male are greater than female","b2339e0e":"if a person smokes his\/her avg charges are more than a non smoker","9f5a7eb7":"as the bpdy type moves from thin to obese your  avg charges increases showing a great increase in obese ","8a930f8e":"* as the age increases there is an increase in charges of insurance"}}