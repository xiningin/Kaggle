{"cell_type":{"cc798ec7":"code","4c27bd48":"code","f5f297e8":"code","63e219bb":"code","83c5358e":"code","0d659e7a":"code","afa76482":"code","7951f705":"code","547e6bc1":"code","7ecb14f4":"code","8cdbb7c3":"code","1418a359":"code","236a60bc":"code","0e9c486d":"code","73bb07f0":"code","4f8239b4":"code","c6a024ad":"code","827c8543":"code","826a2759":"code","79211102":"code","9058feea":"code","f2ed3d5a":"code","bde43cb3":"code","4830621e":"markdown","90440b3b":"markdown","2e671b3f":"markdown","e5429241":"markdown","e2af6c3a":"markdown","1c9bc598":"markdown","e7a67ce7":"markdown","fe9f8c70":"markdown","3e301ec2":"markdown","15b4d50d":"markdown","f730c150":"markdown"},"source":{"cc798ec7":"!pip install pyclustertend","4c27bd48":"## Libraries\n\nimport os\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px # dataviz anim\u00e9e du turfu\n\nfrom pyclustertend import vat\n\n%config InlineBackend.figure_format = 'retina'","f5f297e8":"pokemon_df = pd.read_csv('\/kaggle\/input\/pokemon\/pokemon.csv')","63e219bb":"pokemon_df.head()","83c5358e":"pokemon_df.info()","0d659e7a":"pokemon_df.is_legendary.value_counts()","afa76482":"pokemon_df.is_legendary.memory_usage()","7951f705":"pokemon_df.is_legendary.astype('int8').memory_usage()","547e6bc1":" 929 \/ 6536 ","7ecb14f4":"pokemon_df.is_legendary.astype('category').memory_usage()","8cdbb7c3":"\nint_columns = pokemon_df.select_dtypes(include=['int']).columns.tolist()\npokemon_df[int_columns] = pokemon_df[int_columns].apply(pd.to_numeric, downcast='integer')","1418a359":"pokemon_df.info()","236a60bc":"pokemon_df.at[0,'is_legendary']","0e9c486d":"pokemon_df.at[0,'is_legendary'] = 300\npokemon_df.at[0,'is_legendary']","73bb07f0":"pokemon_df.info()","4f8239b4":"pokemon_df.at[0,'is_legendary'] = 0","c6a024ad":"y = pokemon_df['is_legendary']\nX = pd.get_dummies(pokemon_df.drop('is_legendary', axis=1).dropna(axis='columns'))","827c8543":"X = X.to_numpy()","826a2759":"y = y.to_numpy()","79211102":"vat(X)","9058feea":"fig = px.scatter(pokemon_df, \n                 x=\"attack\", \n                 y=\"defense\", \n                 color=\"type1\", \n                 marginal_y=\"violin\", \n                 marginal_x=\"histogram\",\n                 hover_name=\"name\",\n                 title=\"Attaque et d\u00e9fense des pok\u00e9mons en fonction de leur type1\")\nfig.show()","f2ed3d5a":"fig = px.parallel_categories(pokemon_df,\n                             dimensions=['type1', 'type2', 'is_legendary'],\n                             title=\"Nombre de pok\u00e9mons par type 1, type 2 et l\u00e9gendarit\u00e9\")\nfig.show()","bde43cb3":"fig = px.violin(pokemon_df, \n                y=\"speed\",  \n                color=\"generation\", \n                box=True, \n                points=\"all\", \n                hover_data=pokemon_df.columns,\n                title='Distribution des vitesses des pok\u00e9mons par g\u00e9n\u00e9ration')\nfig.show()","4830621e":"Pandas did not recast the serie when we introduce a number greater than 255. It is a risk to play with type in pandas","90440b3b":"legendary is a boolean column, but it is mapped as a int64; it can easily be mapped as a int8 and by the way decrease memory consumption","2e671b3f":"# Pokemon Dataset","e5429241":"the category type can be very useful but not on this case","e2af6c3a":"## Memory consumption","1c9bc598":"## Visualisation","e7a67ce7":"we divide by 2 memory consumption","fe9f8c70":"the new representation uses only 14% of what was used by the series","3e301ec2":"## VAT","15b4d50d":"## plotly express","f730c150":"as we can see, it seems we have a hierarchy of **7 clusters** in this dataset."}}