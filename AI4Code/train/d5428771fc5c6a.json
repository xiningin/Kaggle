{"cell_type":{"4cdf093e":"code","99e77bdb":"code","e4e5877f":"code","14b56466":"code","5ad8d432":"code","f87e1155":"code","0f2d924b":"code","ccc4a032":"code","fa4d2fd1":"code","f4c264fa":"code","8d46343a":"code","2b8ed5cf":"code","dd4b10c0":"code","2d3019d2":"code","f3755946":"code","7293e8c6":"code","080bdf81":"code","e962f2be":"code","db244617":"code","91493106":"code","9ed3463d":"code","00aa1262":"code","bd9b82c4":"code","055d4b26":"code","2ef85f9d":"code","72cbe654":"code","2dbc0059":"code","f38ab6e4":"markdown"},"source":{"4cdf093e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","99e77bdb":"data = pd.read_csv('\/kaggle\/input\/mudahmy\/mudah.csv')\ndata.head(20)","e4e5877f":"data.info()","14b56466":"data['price'].isna().sum()","5ad8d432":"# removing RM and spaces and convert to int\n\ndata['price'] = data['price'].str.replace('RM', '').str.replace(' ', '').astype('int')\n","f87e1155":"data['size'].isna().sum()","0f2d924b":"# separating digit and non digit, since some sizes have decimals places, need to use .extract() function\n\ndata['size1'] = data['size'].str.extract(r'([.]?[\\d.]*)')\ndata['size2'] = data['size'].str.replace(r'\\d','')","ccc4a032":"data.head(20)","fa4d2fd1":"data['size2'].unique()","f4c264fa":"#removing sq.ft, Acres and . Acres from the data\n\nvals = {' sq.ft.':1, '. Acres':43560, ' Acres':43560}\n\ndata['size3'] = data['size2'].map(vals)\ndata['size1'] = data['size1'].astype('float')\ndata['size3'] = data['size3'].astype('float')\n\ndata['size'] = data['size3']*data['size1']","8d46343a":"data.head(20)","2b8ed5cf":"# change size type to float\n\ndata['size'] = data['size'].astype('float')","dd4b10c0":"data.head(20)","2d3019d2":"print('bedrooms null :',data['bedrooms'].isna().sum())\nprint('bathrooms null :', data['bathrooms'].isna().sum())","f3755946":"# separate digit and non digit , both data consist of round number so, do not have to worry about decimals number\n\ndata['bedrooms1'] = data.bedrooms.str.replace(r'\\d','')\ndata['bedrooms2'] = data.bedrooms.str.replace(r'\\D','')\n\ndata['bathrooms1'] = data.bathrooms.str.replace(r'\\d','')\ndata['bathrooms2'] = data.bathrooms.str.replace(r'\\D','')","7293e8c6":"print(data.bedrooms1.unique())\nprint(data.bathrooms1.unique())\nprint()\nprint('bedrooms2 null :',data['bedrooms2'].isna().sum())\nprint('bathrooms2 null :', data['bathrooms2'].isna().sum())","080bdf81":"# convert Nan value to 0\n\ndata[['bedrooms','bathrooms']]=data[['bedrooms2','bathrooms2']].fillna(0)\n\nprint('bedrooms null :',data['bedrooms'].isna().sum())\nprint('bathrooms null :', data['bathrooms'].isna().sum())","e962f2be":"#check for code for the above\n\ndata.iloc[[15]]","db244617":"# change datatype\n\ndata.bedrooms = data.bedrooms.astype('int')\ndata.bathrooms = data.bathrooms.astype('int')","91493106":"data.info()","9ed3463d":"# drop unnecessary columns\n\ndata = data.drop(columns=['size1','size2','size3','bedrooms1','bedrooms2','bathrooms1','bathrooms2'])","00aa1262":"data.info()","bd9b82c4":"print(data.state.unique())","055d4b26":"data.head()","2ef85f9d":"# rename columns name\n\ndata = data.rename(columns={'name':'House Name','price':r'Price (RM)','category':'Category','size':r'Size (sq.ft.)','bedrooms':'No. of Bedroom','bathrooms':'No. of Bathroom','state':'State','titletype':'Land Title','propertytype':'Type of Property'},inplace=False)","72cbe654":"data.head(1)","2dbc0059":"data.to_csv('cleanedmudah.csv')","f38ab6e4":"**326 result above is the data of the property that doesnt have beedrooms or bathrooms such as land or cormercial building\nthus if remove, all land and comercials building will get remove from the dataframe**"}}