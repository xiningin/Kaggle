{"cell_type":{"a9a60a12":"code","dd5562d0":"code","45e0370d":"code","c145d53d":"code","65c8e7af":"code","4fa954ba":"code","069673c6":"code","8ba4eec0":"code","52fb4581":"code","afbe4003":"code","631922fd":"code","8f4c4711":"code","547c38bc":"code","8bf46ff1":"code","39cacde7":"code","c940f77e":"code","9b2a55da":"code","3ecec726":"code","c427d944":"code","38df8809":"code","8be92672":"code","3d9b8fa0":"code","5699e042":"code","96866ce7":"code","a1fc10de":"code","b79db970":"code","a1dd9d55":"markdown","00322723":"markdown","dbd6e76c":"markdown","3f18c6f4":"markdown","61f54f7e":"markdown","b7511680":"markdown","fe92e189":"markdown","2f171f9d":"markdown","a223da9b":"markdown","b26160d6":"markdown","0779d622":"markdown","e2ca91ef":"markdown","f20e29d6":"markdown","aeb8bcdc":"markdown","77f5784e":"markdown","6a578923":"markdown","23d7c955":"markdown"},"source":{"a9a60a12":"import pandas as pd\nimport numpy as np\nimport seaborn as sbn\nimport matplotlib.pyplot as plt\nimport os\nfrom matplotlib.font_manager import FontProperties\nfrom matplotlib.ticker import AutoMinorLocator\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import confusion_matrix, recall_score, precision_score, accuracy_score, roc_curve, roc_auc_score","dd5562d0":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nData = pd.read_csv(\"\/kaggle\/input\/star-categorization-giants-and-dwarfs\/Star39552_balanced.csv\")\npd.set_option(\"display.max_columns\", 7)\nData.head()","45e0370d":"Data[\"SpType\"].value_counts()","c145d53d":"Data.drop([\"SpType\"], axis = 1, inplace = True)","65c8e7af":"Data.head()","4fa954ba":"Missing_values_percent = 100*(Data.isnull().sum()\/len(Data[\"B-V\"]))\nprint(Missing_values_percent)","069673c6":"Data.dtypes","8ba4eec0":"Data = Data.loc[:,[\"Vmag\", \"Plx\", \"B-V\", \"TargetClass\"]][Data.loc[:,[\"Vmag\", \"Plx\", \"B-V\", \"TargetClass\"]][\"Plx\"]>0]","52fb4581":"B_V = np.array(Data[\"B-V\"], dtype=float)\nV_mag = np.array(Data[\"Vmag\"], dtype=float)\nPlx = np.array(Data[\"Plx\"], dtype=float)","afbe4003":"dispc = (1000\/Plx) # Plx (mas)\nAbsmag = V_mag-5*np.log10(dispc\/10) # Absolute magnitude\nData[\"Absmag\"] = Absmag","631922fd":"Data.head()","8f4c4711":"Fonte1 = {\"family\": \"serif\", \"weight\": \"bold\", \"color\": \"darkorange\", \"size\": 18}\nFonte2 = {\"family\": \"serif\", \"weight\": \"bold\", \"color\": \"darkorange\", \"size\": 20}\nFonte3 = FontProperties(family=\"serif\", weight='bold', style='normal', size=19)","547c38bc":"fig, ax = plt.subplots(figsize=(12.5,10.4))\nax.scatter(Data[\"B-V\"], Absmag, c=Data[\"B-V\"],  cmap = \"YlOrRd\", marker = '.', s = 7, linewidth = 0.01)\nax.scatter(x = -0.03, y = 11.18, c = \"white\", marker = '*', s = 270, linewidth = 0.2, label = \"Sirius B\")\nax.scatter(x = 1.713, y = 13.21, c = \"c\", marker = '*', s = 270, linewidth = 0.2, label = \"Barnard\")\nax.scatter(x = 0.656, y = 4.83, c = \"blue\", marker = '*', s = 270, linewidth = 0.2, label = \"Sun\")\nax.scatter(x = 0, y = 1.42, c = \"green\", marker = '*', s = 270, linewidth = 0.2, label = \"Sirius A\")\nax.scatter(x = 1.44, y = -0.641, c = \"red\", marker = '*', s = 270, linewidth = 0.2, label = \"Aldebaran\")\nax.scatter(x = 1.85, y = -5.85, c = \"yellow\", marker = '*', s = 270, linewidth = 0.2, label = \"Betelgeuse\")\nplt.xlabel(\"Color index (B-V)\", fontdict = Fonte1)\nplt.ylabel(\"Absolute magnitude (Mv)\", fontdict = Fonte1)\nplt.title(\"Hertzsprung-Russell diagram\", fontdict = Fonte2)\nplt.xlim(-0.6, 3.75)\nplt.ylim(16.5, -17) \nax.xaxis.set_minor_locator(AutoMinorLocator())\nax.yaxis.set_minor_locator(AutoMinorLocator())\nax.tick_params(axis = \"both\", direction = \"in\", labelcolor='darkorange', labelsize='xx-large', top = True, right = True)\nax.tick_params(which='major', direction = \"in\", color='darkorange', length=7, width = 3)\nax.tick_params(which='minor', direction = \"in\", length=4, color='darkorange', width = 2, top = True, right = True)\nfor axis in ['top','bottom','left','right']:\n    ax.spines[axis].set_color(\"darkorange\")\nfor axis in ['top','bottom','left','right']:\n    ax.spines[axis].set_linewidth(1.6)\nColor_BC = plt.gca()\nColor_BC.set_facecolor(\"black\")\nColor_BC.patch.set_alpha(1)\nplt.legend(frameon = False, prop = Fonte3, labelcolor = \"white\", bbox_to_anchor = (0.74,0.96), loc = 2)\nplt.tight_layout()\nplt.show()","8bf46ff1":"Data[[\"Vmag\", \"B-V\", \"Absmag\"]].hist(figsize = (20,6), color = \"darkred\", bins =  200, layout = (1,3))\nplt.show()","39cacde7":"plt.figure(figsize = (7,7))\nsbn.heatmap(Data.corr(), annot = True, vmin = 0, cmap = \"coolwarm\")\nplt.show()","c940f77e":"Data[\"TargetClass\"].value_counts()","9b2a55da":"Norm = MinMaxScaler()\nx = Data.drop([\"TargetClass\"], axis = 1)\nx = Norm.fit_transform(x)\ny = Data[\"TargetClass\"]","3ecec726":"# Train - test split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state = 45)","c427d944":"ModelKNN = KNeighborsClassifier()","38df8809":"%%time\n# Fine - tuning KNN\nK_values = np.array([11, 12, 13, 14, 15, 16, 17, 18])\nmetric = [\"minkowski\", \"chebyshev\"]\np = np.array([1, 2, 3, 4, 5, 6])\nparam_grid = {\"n_neighbors\": K_values, \"metric\": metric, \"p\": p}\nGridKNN = GridSearchCV(estimator = ModelKNN, param_grid = param_grid, cv = 5)\nGridKNN.fit(x_train, y_train)\nprint(GridKNN.best_score_)\nprint(GridKNN.best_estimator_.n_neighbors)\nprint(GridKNN.best_estimator_.metric)\nprint(GridKNN.best_estimator_.p)","8be92672":"ModelKNN = KNeighborsClassifier(n_neighbors = 17, metric = \"minkowski\", p = 5)","3d9b8fa0":"ModelKNN.fit(x_train, y_train)","5699e042":"y_pred = ModelKNN.predict(x_test)","96866ce7":"Matrix = confusion_matrix(y_test, y_pred)\nprint(Matrix)","a1fc10de":"sbn.heatmap(Matrix, annot = True, cmap = \"coolwarm\")\nplt.show()","b79db970":"print(f\"Accuracy: {accuracy_score(y_test, y_pred)}\")\nprint(f\"Recall: {recall_score(y_test, y_pred)}\")\nprint(f\"Precision: {precision_score(y_test, y_pred)}\")","a1dd9d55":"# $\\Large{\\color{darkblue}{\\textbf{KNN}}}$","00322723":"# $\\large{\\color{darkred}{2.}}$ $\\large{\\color{darkblue}{\\textbf{Reading the data}}}$ $\\color{red}{\u2713}$","dbd6e76c":"${\\color{darkred}{\\textbf{The \"Amag\" column values are wrong !! So let's create a new column with the correct absolute magnitude values.}}}$","3f18c6f4":"${\\color{darkred}{\\textbf{There are NO missing values in the dataset!!}}}$","61f54f7e":"# ${\\color{darkred}{3.3.}}$ ${\\color{darkblue}{\\textbf{dtypes}}}$ $\\color{red}{\u2713}$","b7511680":"# ${\\color{darkred}{3.2.}}$ ${\\color{darkblue}{\\textbf{Missing Values Treatment}}}$  $\\color{red}{\u2713}$","fe92e189":"# $\\large{\\color{darkred}{1.}}$ $\\large{\\color{darkblue}{\\textbf{Importing Libraries}}}$ $\\color{red}{\u2713}$","2f171f9d":"${\\color{darkblue}{\\textbf{Heatmap}}}$","a223da9b":"# ${\\color{darkred}{3.4.1.}}$ ${\\color{darkblue}{\\textbf{Absolute magnitude x color index B-V}}}$ $\\color{red}{\u2713}$","b26160d6":"# ${\\color{darkred}{3.1.}}$ ${\\color{darkblue}{\\textbf{Categorical variables Treatment}}}$  $\\color{red}{\u2713}$","0779d622":"# ${\\color{darkred}{3.4.}}$ ${\\color{darkblue}{\\textbf{Correlation}}}$ $\\color{red}{\u2713}$","e2ca91ef":"# ${\\color{darkred}{3.4.2.}}$ ${\\color{darkblue}{\\textbf{Histograms and Heatmaps}}}$ $\\color{red}{\u2713}$","f20e29d6":"# ${\\color{darkred}{4.1.}}$ ${\\color{darkblue}{\\textbf{Confusion matrix}}}$ $\\color{red}{\u2713}$","aeb8bcdc":"# ${\\color{darkred}{3.5.}}$ ${\\color{darkblue}{\\textbf{Data split}}}$ $\\color{red}{\u2713}$","77f5784e":"# $\\large{\\color{darkred}{3.}}$ $\\large{\\color{darkblue}{\\textbf{Data Preprocessing}}}$","6a578923":"# $\\large{\\color{darkred}{4.}}$ $\\large{\\color{darkblue}{\\textbf{KNN}}}$ $\\color{red}{\u2713}$","23d7c955":"${\\color{darkblue}{\\textbf{Prediction}}}$"}}