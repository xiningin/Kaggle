{"cell_type":{"86329cb2":"code","2f3322ac":"code","c9cb36c4":"code","9b244870":"code","0f554f55":"code","514513e3":"code","4c9c277f":"code","359bb7db":"code","f2e87e60":"code","20d3c49a":"code","d5a95296":"code","cb5805bb":"code","a21f20ef":"code","ad489d1b":"code","86da719c":"code","dbcd7ca3":"code","0d134003":"code","d1718fef":"code","c7069ddb":"code","88dac184":"code","c6cc7fe8":"code","5fe24c22":"code","1a5037a3":"code","18d315ff":"code","ba62ba5e":"markdown","81c4c968":"markdown","5b477137":"markdown","faa22c64":"markdown","ff7db895":"markdown","b26a5a24":"markdown","7e0ace3c":"markdown","08fc837e":"markdown","44332675":"markdown","439637d7":"markdown","964d25d8":"markdown","f84efa2e":"markdown","4cb30de7":"markdown","138dc949":"markdown","0233ccb0":"markdown","061a62b4":"markdown","579a6672":"markdown","cad73a0e":"markdown","a95b011c":"markdown","dc8acf3c":"markdown"},"source":{"86329cb2":"!pip install soccerplots","2f3322ac":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport matplotlib as mpl\nfrom matplotlib.colors import LinearSegmentedColormap\nfrom soccerplots.radar_chart import Radar\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c9cb36c4":"colors_blue = [\"#132C33\", \"#264D58\", '#17869E', '#51C4D3', '#B4DBE9']\ncolors_dark = [\"#1F1F1F\", \"#313131\", '#636363', '#AEAEAE', '#DADADA']\ncolors_red = [\"#331313\", \"#582626\", '#9E1717', '#D35151', '#E9B4B4']\ncolors_mix = [\"#17869E\", '#264D58', '#179E66', '#D35151', '#E9DAB4', '#E9B4B4', '#D3B651', '#6351D3']\ncolors_div = [\"#132C33\", '#17869E', '#DADADA', '#D35151', '#331313']\n\nsns.palplot(colors_blue)\nsns.palplot(colors_dark)\nsns.palplot(colors_red)\nsns.palplot(colors_mix)\nsns.palplot(colors_div)","9b244870":"mpl.rcParams['axes.spines.right'] = False\nmpl.rcParams['axes.spines.top'] = False\nmpl.rcParams['axes.spines.bottom'] = False\nmpl.rcParams['axes.titlecolor'] = colors_dark[0]\nmpl.rcParams['axes.labelcolor'] = colors_dark[0]\n\n# tick\nmpl.rcParams['xtick.color'] = colors_dark[0]\nmpl.rcParams['ytick.color'] = colors_dark[0]\nmpl.rcParams['xtick.labelsize'] = 12\nmpl.rcParams['ytick.labelsize'] = 12\n\n\n# legend \nmpl.rcParams['legend.edgecolor'] = colors_dark[0]","0f554f55":"df = pd.read_csv(\"\/kaggle\/input\/football-teams-rankings-stats\/Football teams.csv\")\ndf.head(5)","514513e3":"df.info()","4c9c277f":"df.isnull().sum()","359bb7db":"df.groupby('Tournament')['Team'].nunique()","f2e87e60":"EPL = df[df.Tournament=='Premier League']\nLAL = df[df.Tournament=='LaLiga']\nL1 = df[df.Tournament=='Ligue 1']\nBL = df[df.Tournament=='Bundesliga']\nSA = df[df.Tournament=='Serie A']","20d3c49a":"EPL.reset_index(inplace=True)\nEPL.head()","d5a95296":"sorted_data = EPL.sort_values(by=\"Goals\",ascending=False)\nsorted_data.reset_index(inplace=True)\nepl_goal_top = sorted_data.iloc[0:1]\nepl_goal_bot = sorted_data.iloc[-1]\nmean_score = EPL['Goals'].mean()\nepl_idx = list(sorted_data.index + 1)\n\nfig, ax = plt.subplots(figsize=(14, 12))\n\nbars0 = ax.barh(epl_goal_top['Team'], epl_goal_top['Goals'], color=colors_blue[3], alpha=0.6, edgecolor=colors_dark[0])\nbars1 = ax.barh(sorted_data['Team'], sorted_data['Goals'], color=colors_dark[3], alpha=0.4, edgecolor=colors_dark[0])\nbars2 = ax.barh(epl_goal_bot['Team'], epl_goal_bot['Goals'], color=colors_red[2], alpha=0.6, edgecolor=colors_dark[0])\nline  = ax.axvline(mean_score, linestyle='--', color=colors_dark[2])\n\nax.legend([\"Average Goal\", \"Best Team\", \"Other Teams\" ,\"Worst Team\"], loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='x', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Goals\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Teams\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\navgl  = ax.text(\n    s=\"Avarage\\nGoal: {:.2f}\".format(mean_score),\n    y=ymax-4,\n    x=mean_score+1,\n    backgroundcolor=colors_dark[2],\n    fontsize=14,\n    fontweight='bold',\n    rotation=270,\n    color='white'\n)    \nfor i, bar in enumerate(bars1) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    if i !=0 and i != 19:\n        ax.text(\n            s=f\"{epl_idx[i]}th\",\n            va='center', ha='center', \n            x=x[0]\/2, y=y[0]+0.30,\n            color=colors_dark[3],\n            fontsize=14,\n        )\n        \nfor i, bar in enumerate(bars0) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    ax.text(\n        s=f\"1st\",\n        va='center', ha='center', \n        x=x[0]\/2, y=y[0]+0.30,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n    \nfor i, bar in enumerate(bars2) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    ax.text(\n        s=f\"20th\",\n        va='center', ha='center', \n        x=x[0]\/2, y=y[0]+0.30,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n        \nplt.text(s=\"Which is the top scorer team?\", ha='left', x=xmin, y=ymax*1.08, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"Manchester City has 83 goals for season that means +32 goals per average.\\nSheffield United is the worst team about goal. They just have 20 goals.\", loc='left', fontsize=13, color=colors_dark[2])\nplt.tight_layout()\nplt.show()","cb5805bb":"sorted_data = EPL.sort_values(by=\"Shots pg\",ascending=False)\nsorted_data.reset_index(inplace=True)\nepl_goal_top = sorted_data.iloc[0:1]\nepl_goal_bot = sorted_data.iloc[-1]\nmean_score = EPL['Shots pg'].mean()\nepl_idx = list(sorted_data.index + 1)\n\n\nfig, ax = plt.subplots(figsize=(14,12))\n\nbars0 = ax.barh(epl_goal_top['Team'], epl_goal_top['Shots pg'], color=\"red\", edgecolor=colors_dark[0])\nbars1 = ax.barh(sorted_data['Team'], sorted_data['Shots pg'], color=colors_dark[3], alpha=0.4, edgecolor=colors_dark[0])\nbars2 = ax.barh(epl_goal_bot['Team'], epl_goal_bot['Shots pg'], color=colors_red[2], alpha=0.6, edgecolor=colors_dark[0])\nline  = ax.axvline(mean_score, linestyle='--', color=colors_dark[2])\n\nax.legend([\"Average Shots per Game\", \"Best Team\", \"Other Teams\" ,\"Worst Team\"], loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='x', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Shots Per Game\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Teams\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\navgl  = ax.text(\n    s=\"Avarage\\nShots pg: {:.2f}\".format(mean_score),\n    y=ymax-5,\n    x=mean_score+0.2,\n    backgroundcolor=colors_dark[2],\n    fontsize=14,\n    fontweight='bold',\n    rotation=270,\n    color='white'\n)    \nfor i, bar in enumerate(bars1) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    if i !=0 and i != 19:\n        ax.text(\n            s=f\"{epl_idx[i]}th\",\n            va='center', ha='center', \n            x=x[0]\/2, y=y[0]+0.30,\n            color=colors_dark[3],\n            fontsize=14,\n        )\n        \nfor i, bar in enumerate(bars0) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    ax.text(\n        s=f\"1st\",\n        va='center', ha='center', \n        x=x[0]\/2, y=y[0]+0.30,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n    \nfor i, bar in enumerate(bars2) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    ax.text(\n        s=f\"20th\",\n        va='center', ha='center', \n        x=x[0]\/2, y=y[0]+0.30,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n        \nplt.text(s=\"Which team tries shots more?\", ha='left', x=xmin, y=ymax*1.08, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"Liverpoll is most attempting team about shots they have\\n16 per game. The worst team is again Sheffield United :(\", loc='left', fontsize=13, color=colors_dark[2])\nplt.tight_layout()\nplt.show()","a21f20ef":"EPL[\"total_card\"] = EPL.red_cards + EPL.yellow_cards\nsort_card = EPL.sort_values(by=\"total_card\",ascending=False)","ad489d1b":"teams = list(sort_card.Team)\nyel_card = list(sort_card.yellow_cards.values)\nred_card = list(sort_card.red_cards.values)\navg_card = EPL[\"total_card\"].sum()\/20\n\n\nbottom_red = yel_card\n\nfig,ax = plt.subplots(figsize=(14,8))\nyellow = ax.barh(teams,yel_card,color=\"yellow\",alpha=0.8,edgecolor=\"black\",label=\"Yellow Card\")\nred = ax.barh(teams,red_card,color=\"red\",alpha=0.8,edgecolor=\"black\",left=yel_card,label=\"Red Card\")\n\nline  = ax.axvline(avg_card, linestyle='--', color=colors_dark[2])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\nax.grid(axis='x', alpha=0.3)\n\navgl  = ax.text(\n    s=\"Avarage\\nCard Amount: {:.2f}\".format(avg_card),\n    y=ymax-6.4,\n    x=avg_card+0.7,\n    backgroundcolor=colors_dark[2],\n    fontsize=12,\n    fontweight='bold',\n    rotation=270,\n    color='white'\n)    \n\nax.bar_label(yellow,label_type=\"center\",fontsize=16)\n\nax.bar_label(red,label_type=\"center\",fontsize=16)\nplt.text(s=\"Which team is more agressive?\", ha='left', x=xmin, y=ymax*1.06, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"Liverpoll is most gentelman team but I can't say the same thing for Sheffield United as well.\", loc='left', fontsize=13, color=colors_dark[2])\nplt.legend()\nplt.tight_layout()\nplt.show()\n\nplt.show()","86da719c":"sorted_data = EPL.sort_values(by=\"Possession%\",ascending=False)\nsorted_data.reset_index(inplace=True)\nepl_goal_top = sorted_data.iloc[0:1]\nepl_goal_bot = sorted_data.iloc[-1]\nmean_score = EPL['Possession%'].mean()\nepl_idx = list(sorted_data.index + 1)\n\n\nfig, ax = plt.subplots(figsize=(14,12))\n\nbars0 = ax.barh(epl_goal_top['Team'], epl_goal_top['Possession%'], color=colors_blue[3], edgecolor=colors_dark[0])\nbars1 = ax.barh(sorted_data['Team'], sorted_data['Possession%'], color=colors_dark[3], alpha=0.4, edgecolor=colors_dark[0])\nbars2 = ax.barh(epl_goal_bot['Team'], epl_goal_bot['Possession%'], color=\"darkblue\", alpha=0.6, edgecolor=colors_dark[0])\nline  = ax.axvline(mean_score, linestyle='--', color=colors_dark[2])\n\nax.legend([\"Average Possession%\", \"Best Team\", \"Other Teams\" ,\"Worst Team\"], loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='x', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Possession%\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Teams\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\navgl  = ax.text(\n    s=\"Avarage\\nPossession%: {:.2f}\".format(mean_score),\n    y=ymax-6,\n    x=mean_score+0.7,\n    backgroundcolor=colors_dark[2],\n    fontsize=14,\n    fontweight='bold',\n    rotation=270,\n    color='white'\n)    \nfor i, bar in enumerate(bars1) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    if i !=0 and i != 19:\n        ax.text(\n            s=f\"{epl_idx[i]}th\",\n            va='center', ha='center', \n            x=x[0]\/2, y=y[0]+0.30,\n            color=colors_dark[3],\n            fontsize=14,\n        )\n        \nfor i, bar in enumerate(bars0) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    ax.text(\n        s=f\"1st\",\n        va='center', ha='center', \n        x=x[0]\/2, y=y[0]+0.30,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n    \nfor i, bar in enumerate(bars2) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    ax.text(\n        s=f\"20th\",\n        va='center', ha='center', \n        x=x[0]\/2, y=y[0]+0.30,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n        \nplt.text(s=\"Which team has more position rate?\", ha='left', x=xmin, y=ymax*1.08, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"As expected M.City is the best team about this field. West Bromwich\\nis the worst but they have nice goal amount compared to position rate.\", loc='left', fontsize=13, color=colors_dark[2])\nplt.tight_layout()\nplt.show()","dbcd7ca3":"sorted_data = EPL.sort_values(by=\"Pass%\",ascending=False)\nsorted_data.reset_index(inplace=True)\nepl_goal_top = sorted_data.iloc[0:1]\nepl_goal_bot = sorted_data.iloc[-1]\nmean_score = EPL['Pass%'].mean()\nepl_idx = list(sorted_data.index + 1)\n\n\nfig, ax = plt.subplots(figsize=(14,12))\n\nbars0 = ax.barh(epl_goal_top['Team'], epl_goal_top['Pass%'], color=colors_blue[3], edgecolor=colors_dark[0])\nbars1 = ax.barh(sorted_data['Team'], sorted_data['Pass%'], color=colors_dark[3], alpha=0.4, edgecolor=colors_dark[0])\nbars2 = ax.barh(epl_goal_bot['Team'], epl_goal_bot['Pass%'], color=\"darkred\", alpha=0.6, edgecolor=colors_dark[0])\nline  = ax.axvline(mean_score, linestyle='--', color=colors_dark[2])\n\nax.legend([\"Average Pass%\", \"Best Team\", \"Other Teams\" ,\"Worst Team\"], loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='x', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Pass%\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Teams\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\navgl  = ax.text(\n    s=\"Avarage\\nPass%: {:.2f}\".format(mean_score),\n    y=ymax-4.7,\n    x=mean_score+0.9,\n    backgroundcolor=colors_dark[2],\n    fontsize=14,\n    fontweight='bold',\n    rotation=270,\n    color='white'\n)    \nfor i, bar in enumerate(bars1) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    if i !=0 and i != 19:\n        ax.text(\n            s=f\"{epl_idx[i]}th\",\n            va='center', ha='center', \n            x=x[0]\/2, y=y[0]+0.30,\n            color=colors_dark[3],\n            fontsize=14,\n        )\n        \nfor i, bar in enumerate(bars0) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    ax.text(\n        s=f\"1st\",\n        va='center', ha='center', \n        x=x[0]\/2, y=y[0]+0.30,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n    \nfor i, bar in enumerate(bars2) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    ax.text(\n        s=f\"20th\",\n        va='center', ha='center', \n        x=x[0]\/2, y=y[0]+0.30,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n        \nplt.text(s=\"Which team has more pass rate?\", ha='left', x=xmin, y=ymax*1.08, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"Everybody knows Guardiola's tiki taka, so it's not surprising that the first team is\\nM.City. Burnles is the worst team in this istatistic but maybe they are using long ball strategy.\", loc='left', fontsize=13, color=colors_dark[2])\nplt.tight_layout()\nplt.show()","0d134003":"sorted_data = EPL.sort_values(by=\"AerialsWon\",ascending=False)\nsorted_data.reset_index(inplace=True)\nepl_goal_top = sorted_data.iloc[0:1]\nepl_goal_bot = sorted_data.iloc[-1]\nmean_score = EPL['AerialsWon'].mean()\nepl_idx = list(sorted_data.index + 1)\n\n\nfig, ax = plt.subplots(figsize=(14,12))\n\nbars0 = ax.barh(epl_goal_top['Team'], epl_goal_top['AerialsWon'], color=\"darkred\", edgecolor=colors_dark[0])\nbars1 = ax.barh(sorted_data['Team'], sorted_data['AerialsWon'], color=colors_dark[3], alpha=0.4, edgecolor=colors_dark[0])\nbars2 = ax.barh(epl_goal_bot['Team'], epl_goal_bot['AerialsWon'], color=colors_blue[3], alpha=0.6, edgecolor=colors_dark[0])\nline  = ax.axvline(mean_score, linestyle='--', color=colors_dark[2])\n\nax.legend([\"Avarage Aerials Won\", \"Best Team\", \"Other Teams\" ,\"Worst Team\"], loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='x', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"AerialsWon\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Teams\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\navgl  = ax.text(\n    s=\"Avarage\\nAerialsWon: {:.2f}\".format(mean_score),\n    y=ymax-6.2,\n    x=mean_score+0.4,\n    backgroundcolor=colors_dark[2],\n    fontsize=14,\n    fontweight='bold',\n    rotation=270,\n    color='white'\n)    \nfor i, bar in enumerate(bars1) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    if i !=0 and i != 19:\n        ax.text(\n            s=f\"{epl_idx[i]}th\",\n            va='center', ha='center', \n            x=x[0]\/2, y=y[0]+0.30,\n            color=colors_dark[3],\n            fontsize=14,\n        )\n        \nfor i, bar in enumerate(bars0) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    ax.text(\n        s=f\"1st\",\n        va='center', ha='center', \n        x=x[0]\/2, y=y[0]+0.30,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n    \nfor i, bar in enumerate(bars2) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    ax.text(\n        s=f\"20th\",\n        va='center', ha='center', \n        x=x[0]\/2, y=y[0]+0.30,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n        \nplt.text(s=\"Which team has more aerials won?\", ha='left', x=xmin, y=ymax*1.08, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"Most of people will say that why M.City is the worst? That might be shocking but actually M.City is really short team.\\nProbably that's why they are the worst and Burnley's strategy is have good physics quality so that's normal that they are number one.\", loc='left', fontsize=13, color=colors_dark[2])\nplt.tight_layout()\nplt.show()","d1718fef":"sorted_data = EPL.sort_values(by=\"Rating\",ascending=False)\nsorted_data.reset_index(inplace=True)\nepl_goal_top = sorted_data.iloc[0:1]\nepl_goal_bot = sorted_data.iloc[-1]\nmean_score = EPL['Rating'].mean()\nepl_idx = list(sorted_data.index + 1)\n\n\nfig, ax = plt.subplots(figsize=(14,12))\n\nbars0 = ax.barh(epl_goal_top['Team'], epl_goal_top['Rating'], color=colors_blue[3], edgecolor=colors_dark[0])\nbars1 = ax.barh(sorted_data['Team'], sorted_data['Rating'], color=colors_dark[3], alpha=0.4, edgecolor=colors_dark[0])\nbars2 = ax.barh(epl_goal_bot['Team'], epl_goal_bot['Rating'], color=\"darkred\", alpha=0.6, edgecolor=colors_dark[0])\nline  = ax.axvline(mean_score, linestyle='--', color=colors_dark[2])\n\nax.legend([\"Avarage Rating\", \"Best Team\", \"Other Teams\" ,\"Worst Team\"], loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='x', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Rating\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Teams\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\navgl  = ax.text(\n    s=\"Avarage\\nRating: {:.2f}\".format(mean_score),\n    y=ymax-4,\n    x=mean_score+0.1,\n    backgroundcolor=colors_dark[2],\n    fontsize=12,\n    fontweight='bold',\n    rotation=270,\n    color='white'\n)    \nfor i, bar in enumerate(bars1) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    if i !=0 and i != 19:\n        ax.text(\n            s=f\"{epl_idx[i]}th\",\n            va='center', ha='center', \n            x=x[0]\/2, y=y[0]+0.30,\n            color=colors_dark[3],\n            fontsize=14,\n        )\n        \nfor i, bar in enumerate(bars0) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    ax.text(\n        s=f\"1st\",\n        va='center', ha='center', \n        x=x[0]\/2, y=y[0]+0.30,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n    \nfor i, bar in enumerate(bars2) : \n    x=bar.get_width(),\n    y=bar.get_y(),\n    ax.text(\n        s=f\"20th\",\n        va='center', ha='center', \n        x=x[0]\/2, y=y[0]+0.30,\n        color=\"white\",\n        fontsize=14,\n        fontweight='bold',\n        alpha=1,\n    )\n        \nplt.text(s=\"Which team has the most rating score?\", ha='left', x=xmin, y=ymax*1.08, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"The champion of the season M.City is the team that\\nwhich has most rating score.This is what was expected from a champion. \", loc='left', fontsize=13, color=colors_dark[2])\nplt.tight_layout()\nplt.show()","c7069ddb":"#get parameters\nparams = list(df.columns)\nparams = params[2:]\nTeams = df[(df.Team == \"Manchester City\") | (df.Team ==\"Manchester United\")].reset_index(drop=True)","88dac184":"#add ranges to list of tuple pairs\nranges = []\nvalues1  = []\nvalues2  = []\n\nfor x in params:\n    a = min(df[params][x])\n    a = a - (a*.25)\n    \n    b = max(df[params][x])\n    b = b + (b*.25)\n    \n    ranges.append((a,b))\n    \nfor x in range(0,2):\n    if Teams['Team'][x] == 'Manchester City':\n        values1 = Teams.iloc[x].values.tolist()\n    if Teams['Team'][x] == 'Manchester United':\n        values2 = Teams.iloc[x].values.tolist()\n        \nvalues1 = values1[2:]\nvalues2 = values2[2:]\n\n\nvalues = [values1,values2]","c6cc7fe8":"#title \ntitle = dict(title_name ='Manchester City',\n    subtitle_name = 'Rating = 7.01',\n    title_color = colors_blue[3],\n    subtitle_color = colors_blue[3],\n    title_name2 = 'Manchester United',\n    subtitle_name2 = 'Rating = 6.85',\n    title_color2 = colors_div[3],\n    subtitle_color2 = colors_div[3],    \n    title_fontsize = 18,\n    subtitle_fontsize=15\n)","5fe24c22":"radar = Radar()\n\nfig,ax = radar.plot_radar(ranges=ranges,params=params,values=values,\n                         radar_color=[colors_blue[3],\"red\"],\n                        alphas=[.75,.6],\n#                         title=title,\n                         compare=True)","1a5037a3":"grouped = df.groupby(\"Tournament\").sum()\ndf_idn = grouped.Goals\n\nfig, ax = plt.subplots(figsize=(14, 8), dpi=75)\n\npie = ax.pie(\n    df_idn, \n    colors=colors_mix[0:7],\n    wedgeprops=dict(width=0.5, alpha=0.9),\n    autopct='%1.0f%%',\n    pctdistance=1.12, \n    textprops={\n        'fontsize': 12, \n        'color': colors_dark[2],\n        'fontweight': 'bold'\n    }, \n)\n\nax.legend(df_idn.index, loc='upper center', bbox_to_anchor=(0.5, -0.1), ncol=2, borderpad=1, frameon=False, fontsize=12)\n\nplt.suptitle(t=\"Is EPL More Scorer League\\n Compared To Other Leagues?  \", fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"EPL is the 3rd scorer league among 5 big league. The better\\nleagues than EPL respectively Serie A and Ligue 1\", fontsize=13, color=colors_dark[2])\nplt.tight_layout()\nplt.show()","18d315ff":"meanx=df['Possession%'].mean()\nmeany=df['Pass%'].mean()\nepl_3x = df[df[\"Tournament\"]==\"Premier League\"].sort_values(by=[\"Possession%\"],ascending=False)[[\"Team\",\"Possession%\"]][0:3]\nepl_3y = df[df[\"Tournament\"]==\"Premier League\"].sort_values(by=[\"Pass%\"],ascending=False)[[\"Team\",\"Pass%\"]][0:3]\n\n\nfig, ax = plt.subplots(figsize=(18, 8), dpi=75)\n\nsns.scatterplot(\n    data=df, \n    x='Possession%', \n    y='Pass%', \n    size='Rating', \n    ax=ax, sizes=(5, 1000),\n    alpha=0.9,\n    hue='Tournament',\n    palette=[colors_red[2],colors_mix[-2], colors_mix[-1], \"red\",colors_mix[2]]\n)\nlinex = ax.axvline(meanx, linestyle='dotted', color=colors_dark[1], alpha=0.8, label='Average')\nliney = ax.axhline(meany, linestyle='dotted', color=colors_dark[1], alpha=0.8)\ntext  = ax.text(\n    s=epl_3x.Team.iloc[0],\n    x=epl_3x[\"Possession%\"].iloc[0]-0.8,\n    y=epl_3y[\"Pass%\"].iloc[0]-1.5,\n    color=colors_dark[2]\n)\ntext1  = ax.text(\n    s=epl_3x.Team.iloc[1],\n    x=epl_3x[\"Possession%\"].iloc[1]-0.013,\n    y=epl_3y[\"Pass%\"].iloc[1]+0.25,\n    color=colors_dark[2]\n)\ntext2  = ax.text(\n    s=epl_3x.Team.iloc[2],\n    x=epl_3x[\"Possession%\"].iloc[2]-0.05,\n    y=epl_3y[\"Pass%\"].iloc[2]-1.5,\n    color=colors_dark[2]\n)\n\n\nax.legend(bbox_to_anchor=(1.05, 1), ncol=1, borderpad=1, frameon=False, fontsize=12)\nax.grid(alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Possession%\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Pass%\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\n\nplt.text(s=\"How Are EPL Teams Among 5 Big League\\nin terms of Possession%, Pass% and Rate?\", ha='left', x=xmin, y=ymax*1.04, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"3 EPL teams M.City,Liverpool and chelsea are noticably better than other EPL teams.\\nWhen we check the other teams from EPL, they are not coming from back about position% and ball%.\", loc='left', fontsize=13, color=colors_dark[2])  \nplt.tight_layout()\nplt.show()","ba62ba5e":"<center>\n<p style=\"font-size:20pt; font-style:bold; text-align:center\">\n\u201cWELCOME TO ENGLISH PREMIER LEAGUE!!\u201d\n<\/p>\n<\/center>\n\n<center><img\nsrc=\"https:\/\/e0.365dm.com\/20\/05\/1600x900\/skysports-premier-league-return_5000805.jpg?20200528144054\" style=\"width:100%;height:100%;\">\n<\/center>\n","81c4c968":"<center>\n<p style=\"font-size:20pt; font-style:bold; text-align:center\">\n\u201cHERE IS THE INVENTOR OF TIKI-TAKA\u201d\n<\/p>\n<\/center>\n<center><img\nsrc=\"https:\/\/mbpschool-b4f9.kxcdn.com\/wp-content\/uploads\/2020\/07\/skysports-premier-league-football-pep-guardiola-manchester-city_3863015.jpg\" style=\"width:100%;height:100%;\">\n<\/center>","5b477137":"- This team has more stars than galaxy has\ud83d\ude02 I guess that's normal why they are first one in this stat.","faa22c64":"In this data set I will dig deep into English Premier League Teams and will compare them with other EPL Teams and other 4 big league's teams. I hope you will enjoy my notebook and I will be happy if you give reccomendations in the comments to improve myself. Let's start!!\ud83e\udd73","ff7db895":"- M.City was the champion of 2020 - 2021 English Premier League Season. That's natural that they have best rate among other EPL teams. Congratulations again to them, they deserved this!","b26a5a24":"### Context\nRankings and stats for football teams from the following leagues:\n\n- English Premier League\n- French Ligue 1\n- German Bundesliga\n- Italian Serie A\n- Spanish La Liga are displayed\n\n### Content\nEach row contains information for a team. The data shows following statistics for each team:\n\n- Team - Name of team\n- Tournament - Name of tournament\n- Goals - Number of goals scored in the tournament in year 2020-2021\n- Shots pg - Number of shots per game\n- Yellow_cards - Number of yellow cards given in the tournament in year 2020-2021\n- Red_cards - Number of red cards given in the tournament in year 2020-2021\n- Possession% - Percentage of possession\n- Pass% - Percentage of passes\n- Aerials won - Aerial duels won per game. Aerial duels occur when two players contest a ball in the air; this is a symmetrical event because neither player starts with possession.\n","7e0ace3c":"<center><img\nsrc=\"https:\/\/resources.premierleague.com\/photos\/2020\/03\/20\/b1ccca8b-38dd-4716-b013-47d365dc7476\/1189553192.jpg?width=930&height=620\" style=\"width:100%;height:100%;\">\n<\/center>","08fc837e":"<center>\n<p style=\"font-size:20pt; font-style:bold; text-align:center\">\n\u201cCHAMPION OF 2020-2021 ENGLISH PREMIER LEAGUE!!\u201d\n<\/p>\n<\/center>\n\n<center><img\nsrc=\"https:\/\/media.giphy.com\/media\/XZLerQ7h0qiu5V8bN1\/giphy.gif\" style=\"width:100%;height:100%;\">\n<\/center>","44332675":"- We know that Sir Guardiola likes to see their teams passing a lot. I guess, I don't have to talk about what he accomplished in the Barcelona with tiki-taka strategy, right?\ud83d\ude01","439637d7":"<center><img\nsrc=\"https:\/\/media.giphy.com\/media\/2gT2GpB52DfSvjN6QW\/giphy.gif\" style=\"width:100%;height:100%;\">\n<\/center>","964d25d8":"- M.City looks better in almost all stats. As we have seen in the previous charts, the bad side of M.City is that they cannot dominate the air balls due to the low team height avarage.","f84efa2e":"**S.Aguero:** I will miss you M.City!\n<center><img\nsrc=\"https:\/\/media1.giphy.com\/media\/ixCowiy7PKJM96hVAI\/giphy.gif\" style=\"width:100%;height:100%;\">\n<\/center>","4cb30de7":"Liverpool is the best team who tries shots more as you can see J\u00fcrgen Klopp looks happy with that\ud83d\ude1d","138dc949":"- Eventhough people looks so ugly when they are trying shoot the with head. This is a important stat to take advantage especially in the midfield. Congrats to Burnley they are number one in this stat, if you check about that team you will all see that they have taller team than avarage in EPL. So that's normal to see them as number one in this stat.","0233ccb0":"<center><img\nsrc=\"https:\/\/i2-prod.manchestereveningnews.co.uk\/incoming\/article16865443.ece\/ALTERNATES\/s810\/0_GettyImages-1143334231.jpg\" style=\"width:100%;height:100%;\">\n<\/center>","061a62b4":"- No one should be surprised that M.City is the team that scores the most goals. We all know that they can score more than 83 goals with their world-famous stars.","579a6672":"# How does EPL teams looks between other top 5 league?","cad73a0e":"## Best 2 EPL Team Comparison (M.City vs M.United)","a95b011c":"I hope you liked matplotlib visualizations, if you have any recommendation about them feel free to leave comments to me. See you all in the next notebook\ud83d\ude0a","dc8acf3c":"<center>\n<p style=\"font-size:20pt; font-style:bold; text-align:center\">\n\u201cPLEASE BE MORE GENTLE SHEFFIELD, WE WANT TO WATCH FOOTBALL MORE!\u201d\n<\/p>\n<\/center>\n\n<center><img\nsrc=\"https:\/\/i.guim.co.uk\/img\/media\/2393109969254b1dfd11473ca99aeac339655afc\/0_34_1640_983\/master\/1640.jpg?width=620&quality=85&auto=format&fit=max&s=8313c5c18c1950bf5e58cd3ff3a79e9f\" style=\"width:100%;height:100%;\">\n<\/center>"}}