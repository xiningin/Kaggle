{"cell_type":{"f952cf9f":"code","c637f97d":"code","856785b1":"code","030ed59d":"code","b8df30b0":"code","24b4cc5f":"code","74d76906":"code","bf84a028":"code","f1465631":"code","f5e13182":"code","f7e46579":"code","a9ca0d94":"code","1134c95b":"code","75e3ad0d":"code","7ce84203":"code","420674a1":"code","e0c7ec64":"code","e3f0fb08":"code","50c4bbde":"code","ec9aedb8":"code","b86a0a48":"code","93bd5dc3":"markdown","e29e2ff6":"markdown","b20ed57f":"markdown","5f31cc2b":"markdown","aa09d6ab":"markdown","c3c5e44d":"markdown","a3508a7c":"markdown"},"source":{"f952cf9f":"## Imports\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns","c637f97d":"## Constants\ndir = '..\/input\/tabular-playground-series-may-2021\/'","856785b1":"## Read data\ntrain = pd.read_csv(dir + 'train.csv')\ntest = pd.read_csv(dir + 'test.csv')\nsample_submission = pd.read_csv(dir + 'sample_submission.csv')\nprint(f\"Train: {train.shape}\")\nprint(f\"Test: {test.shape}\")","030ed59d":"train.head()","b8df30b0":"test.head()","24b4cc5f":"sample_submission.head()","74d76906":"## Utility functions\ndef plot_count(col, xlabel='X', ylabel='Y',title='Value Counts'):\n    col_count = train[col].value_counts()\n    plt.bar(col_count.index, col_count.values)\n    plt.title(title)\n    plt.xlabel(xlabel)\n    plt.ylabel(ylabel)","bf84a028":"## Lets check the target\nplot_count(\n    col=\"target\",\n    xlabel=\"Target classes\",\n    ylabel=\"Count\",\n    title=\"Distribution of Target Classes\"\n)","f1465631":"fig_size = (20 ,20)\ntrain.drop(['id', 'target'], axis=1).hist(figsize=fig_size)\nplt.title('Distribution of features in training data');","f5e13182":"fig_size = (20 ,20)\ntest.drop('id', axis=1).hist(figsize=fig_size)\nplt.title('Distribution of features in test data');","f7e46579":"## NaN check\ntrain.isnull().any().any(), test.isnull().any().any()","a9ca0d94":"train.feature_0.plot.kde()","1134c95b":"test.feature_0.plot.kde()","75e3ad0d":"train.feature_9.plot.kde()","7ce84203":"duplicated_rows = train[train.drop(['id','target'], axis=1).duplicated()]\nduplicated_row_id = duplicated_rows.id.tolist()\nprint(duplicated_row_id)\nduplicated_rows","420674a1":"duplicated_cols = train.T.duplicated().T\nduplicated_cols.any()","e0c7ec64":"col = 'feature_11'\nplot_count(\n    f\"{col}\",\n    f\"{col}\",\n    'count',\n    f\"Distribution of {col}\"\n)\ncol = 'feature_12'\nplot_count(\n    f\"{col}\",\n    f\"{col}\",\n    'count',\n    f\"Distribution of {col}\"\n)","e3f0fb08":"print(train.feature_11.value_counts())\nprint(train.feature_12.value_counts())","50c4bbde":"train.target.value_counts(normalize=True)","ec9aedb8":"sample_submission.Class_1 = 0.08490\nsample_submission.Class_2 = 0.57497\nsample_submission.Class_3 = 0.21420\nsample_submission.Class_4 = 0.12593","b86a0a48":"sample_submission.to_csv('submission.csv', index=False)","93bd5dc3":"### Lets check some similar distributes columns","e29e2ff6":"### Check for duplicate rows in the data","b20ed57f":"### Duplicate columns in the datatset","5f31cc2b":"\n### Observations:\n\n* Distiributions are very skewed for all the columns.\n\n* Maybe the 0 value in all the features might represent NaN or unknown class which has been replaced by 0 or these could be an outlier.\n\n* All the feature values seem to be continous.\n\n* 4 rows have been duplicated but none of the columns are duplicated.\n\n* Few columns have almost similar distributions but yet differ in some values.\n","aa09d6ab":"### Target\n\nTarget Classes (Class 1-4) seems to be highly unbalanced","c3c5e44d":"## Baseline submission","a3508a7c":"### Lets plot the distribution of values in features"}}