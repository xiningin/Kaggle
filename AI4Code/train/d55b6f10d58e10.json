{"cell_type":{"6abda4f1":"code","6ffb0d66":"code","8388390d":"code","30eadcf5":"code","b79dc079":"code","1a59556d":"code","7aaa7b7b":"code","d83f74a4":"code","2a105381":"code","9a6ae7c0":"code","b61405b9":"code","ca266f91":"code","697e59ef":"code","f30e1679":"code","51231ce8":"code","0af973ff":"markdown","f09c9366":"markdown","ae32ecd4":"markdown","923efa5a":"markdown","a4d16345":"markdown","9ad7ea9d":"markdown","f1661109":"markdown","362944bf":"markdown","c58a2b6c":"markdown","ba7ea123":"markdown","e9b69551":"markdown","d8eaaf7f":"markdown"},"source":{"6abda4f1":"# RUN THIS CELL to perform standard imports:\nimport spacy\nnlp = spacy.load('en_core_web_sm')","6ffb0d66":"# Enter your code here:\nwith open('..\/input\/txtdata\/owlcreek.txt') as f:\n    doc = nlp(f.read())\n\n","8388390d":"# Run this cell to verify it worked:\n\ndoc[:36]","30eadcf5":"len(doc)","b79dc079":"sents = [sent for sent in doc.sents]\nlen(sents)\n","1a59556d":"print(sents[1].text)\n","7aaa7b7b":"# NORMAL SOLUTION:\n\nfor token in sents[1]:\n    print(token.text, token.pos_, token.dep_, token.lemma_)","d83f74a4":"# CHALLENGE SOLUTION:\nfor token in sents[1]:\n    print(f'{token.text:{15}} {token.pos_:{5}} {token.dep_:{10}} {token.lemma_:{15}}')","2a105381":"# Import the Matcher library:\n\nfrom spacy.matcher import Matcher\nmatcher = Matcher(nlp.vocab)","9a6ae7c0":"# Create a pattern and add it to matcher:\n\npattern = [{'LOWER': 'swimming'}, {'IS_SPACE': True, 'OP':'*'}, {'LOWER': 'vigorously'}]\n\nmatcher.add('Swimming', [pattern])","b61405b9":"# Create a list of matches called \"found_matches\" and print the list:\n\nfound_matches = matcher(doc)\nprint(found_matches)\n","ca266f91":"print(doc[1265:1290])\n","697e59ef":"print(doc[3600:3615])\n","f30e1679":"for sent in sents:\n    if found_matches[0][1] < sent.end:\n        print(sent)\n        break\n\n\n","51231ce8":"\nfor sent in sents:\n    if found_matches[1][1] < sent.end:\n        print(sent)\n        break\n\n","0af973ff":"**7. Print the text surrounding each found match**","f09c9366":"For this assessment we'll be using the short story [_An Occurrence at Owl Creek Bridge_](https:\/\/en.wikipedia.org\/wiki\/An_Occurrence_at_Owl_Creek_Bridge) by Ambrose Bierce (1890). <br>The story is in the public domain; the text file was obtained from [Project Gutenberg](https:\/\/www.gutenberg.org\/ebooks\/375.txt.utf-8).","ae32ecd4":"**1. Create a Doc object from the file `owlcreek.txt`**<br>\n> HINT: Use `with open('..\/TextFiles\/owlcreek.txt') as f:`","923efa5a":"### Great Job!","a4d16345":"**6. Write a matcher called 'Swimming' that finds both occurrences of the phrase \"swimming vigorously\" in the text**<br>\nHINT: You should include an `'IS_SPACE': True` pattern between the two words!","9ad7ea9d":"**5. For each token in the sentence above, print its `text`, `POS` tag, `dep` tag and `lemma`**<br>\nCHALLENGE: Have values line up in columns in the print output.","f1661109":"**3. How many sentences are contained in the file?**<br>HINT: You'll want to build a list first!","362944bf":"**4. Print the second sentence in the document**<br> HINT: Indexing starts at zero, and the title counts as the first sentence.","c58a2b6c":"**EXTRA CREDIT:<br>Print the *sentence* that contains each found match**","ba7ea123":"___\n\n<a href='http:\/\/www.pieriandata.com'> <img src='..\/Pierian_Data_Logo.png' \/><\/a>\n___","e9b69551":"**2. How many tokens are contained in the file?**","d8eaaf7f":"# NLP Basics Assessment"}}