{"cell_type":{"a07b9795":"code","53d762fc":"code","fcb66a13":"code","1d62bd49":"code","80f0b39a":"code","892b9b93":"code","b373eda9":"code","b5d8211d":"code","cd1f8bf2":"code","85ea6e20":"code","9f8c54f6":"code","700ca7f9":"code","eeecfbef":"code","a3319357":"code","cc5be8a8":"code","b1cf505f":"code","4f3b97c5":"code","2eb50faa":"code","b1c2cdd8":"code","450db2de":"code","f71c9c0d":"code","cdcde30b":"code","901dfcf9":"code","11cf71a3":"code","87908e54":"code","de598b8f":"code","62197984":"code","71116c01":"code","a25af627":"code","a8c200ca":"code","6f8a85fd":"code","ef634381":"code","ef746346":"code","16e97d58":"code","6d29603a":"code","b6afb43f":"code","b78d89db":"code","da0f9e65":"markdown","25ef90b1":"markdown","70dcbec6":"markdown","787a3887":"markdown","806040bc":"markdown","1e7d508d":"markdown","c5138f0d":"markdown","5ce2f213":"markdown","b4500fdd":"markdown","78374407":"markdown","9479d3c2":"markdown","86df5b1d":"markdown","b334bccf":"markdown","610fc939":"markdown","6aedfe10":"markdown","ccdb19ae":"markdown","01ea34a7":"markdown","70ecc127":"markdown","bb1941c8":"markdown","4c618163":"markdown","55442396":"markdown","50df8a9a":"markdown","ff5d1a35":"markdown","0f38df5a":"markdown"},"source":{"a07b9795":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","53d762fc":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","fcb66a13":"df=pd.read_csv(\"\/kaggle\/input\/vehicle-dataset-from-cardekho\/car data.csv\")","1d62bd49":"df.head()","80f0b39a":"df.shape","892b9b93":"df.info()","b373eda9":"#lets examine the car owner types vs selling price\nsns.barplot(x='Owner',y='Selling_Price',data=df,palette='spring')\nplt.xticks([0,1,2],('1 st owner','2nd owner','3rd owner'),)","b5d8211d":"sns.barplot(x='Transmission',y='Selling_Price',data=df)","cd1f8bf2":"sns.barplot(x='Fuel_Type',y='Selling_Price',data=df)","85ea6e20":"sns.barplot(x='Seller_Type',y='Selling_Price',data=df)","9f8c54f6":"sns.lmplot(x='Kms_Driven',y='Selling_Price',data=df)","700ca7f9":"#create a new variable age \ndf['age']=2020-df['Year']\ndf.head()","eeecfbef":"plt.figure(figsize=(10,10))\nsns.regplot(x='age',y='Selling_Price',data=df)","a3319357":"#using dummies to encode all catogorical features\ndf=pd.get_dummies(df,columns=['Fuel_Type','Seller_Type','Transmission'],drop_first=True)","cc5be8a8":"#drop the year column, as we already calculated the age\ndf.drop(columns=['Year'],inplace=True)\ndf.head()","b1cf505f":"#understanding the realtionship between the features\nsns.pairplot(df)","4f3b97c5":"correlations=df.corr()\nindx=correlations.index\nplt.figure(figsize=(26,22))\nsns.heatmap(df[indx].corr(),annot=True)","2eb50faa":"#scaling the model for faster convergence \nfrom sklearn.preprocessing import StandardScaler\n\nscaler=StandardScaler()\n\nvar=['Selling_Price','Present_Price','Kms_Driven','age']\n\ndf[var]=scaler.fit_transform(df[var])","b1c2cdd8":"#droping the name columns as it has nothing do with sales price\ndf.drop(columns=['Car_Name'],inplace=True)","450db2de":"#split the model between train and test\nfrom sklearn.model_selection  import train_test_split\n\ny=df['Selling_Price']\nx=df.drop(columns=['Selling_Price'],axis=1)\n\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)","f71c9c0d":"#creating and training the model\nfrom sklearn.linear_model import LinearRegression\nlm=LinearRegression()\n\nlm.fit(x_train,y_train)","cdcde30b":"#pring intercept of best fit line\nprint(lm.intercept_)","901dfcf9":"# temp here stores the numerical columns from the vehicles dataset that influence the prediction\ntemp=df.drop(columns=['Selling_Price'])\n\ncoeff_df = pd.DataFrame(lm.coef_,temp.columns,columns=['Coefficient'])\ncoeff_df ","11cf71a3":"predictions=lm.predict(x_test)\n\nfig = plt.figure()\n# Plot-label\nfig.suptitle('y_test vs predictions')\n\n#X-label\nplt.xlabel('y_test')\n\n# Y-label\nplt.ylabel('predcitions')\nplt.scatter(y_test,predictions)","87908e54":"fig=plt.figure(figsize=(8,8))\n  \nsns.distplot((y_test-predictions),bins=20)\n\n#Plot Label\nfig.suptitle('Residual Analysis', fontsize = 20)","de598b8f":"sns.residplot(predictions,(y_test-predictions),lowess=True,color='g')\n\nplt.xlabel('predicted value')\nplt.ylabel('residual')","62197984":"from sklearn import metrics\n\nprint('MAE:', metrics.mean_absolute_error(y_test, predictions))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))\n","71116c01":"R2 = metrics.r2_score(y_test,predictions)\nR2","a25af627":"from statsmodels.stats.outliers_influence import variance_inflation_factor\n\nvif = pd.DataFrame()\nvif[\"VIF Factor\"] = [variance_inflation_factor(x.values, i) for i in range(x.shape[1])]\nvif[\"features\"] = x.columns","a8c200ca":"vif","6f8a85fd":"y=df['Selling_Price']\nx1=df.drop(columns=['Selling_Price'],axis=1)\n\nx1.drop(columns=['Fuel_Type_Petrol'],axis=1,inplace=True)","ef634381":"#splitting test and train data\nx1_train,x1_test,y_train,y_test=train_test_split(x,y,test_size=0.3)","ef746346":"lm2=LinearRegression()\nlm2.fit(x1_train,y_train)","16e97d58":"pred2=lm2.predict(x1_test)","6d29603a":"print('MAE:', metrics.mean_absolute_error(y_test, pred2))\nprint('MSE:', metrics.mean_squared_error(y_test, pred2))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, pred2)))","b6afb43f":"R2 = metrics.r2_score(y_test,pred2)\nR2","b78d89db":"#plotting the residual plot\nsns.residplot(pred2,(y_test-pred2),lowess=True,color='g')\n\nplt.xlabel('predicted value')\nplt.ylabel('residual')","da0f9e65":"There are no null values in the dataset.","25ef90b1":"Dealer can able to sell for more price than induvidual","70dcbec6":"# Fuel type vs selling price","787a3887":"Here are three common evaluation metrics for regression problems:\n\nMean Absolute Error (MAE) is the mean of the absolute value of the errors:\n\n \nMean Squared Error (MSE) is the mean of the squared errors:\n\n \nRoot Mean Squared Error (RMSE) is the square root of the mean of the squared errors:\n\n\nMAE is the easiest to understand, because it's the average error.\nMSE is more popular than MAE, because MSE \"punishes\" larger errors, which tends to be useful in the real world.\nRMSE is even more popular than MSE, because RMSE is interpretable in the \"y\" units.\nAll of these are loss functions, because we want to minimize them.","806040bc":"Residual = Observed value - Predicted value\n\nA residual plot is a graph that shows the residuals on the vertical axis and the independent variable on the horizontal axis. If the points in a residual plot are randomly dispersed around the horizontal axis, a linear regression model is appropriate for the data; otherwise, a nonlinear model is more appropriate.","1e7d508d":"# Train the model","c5138f0d":"# Regression Evaluation Metrics","5ce2f213":"Interpreting the coefficients:\nFor numerical features:\n\n* Holding all other features fixed, a 1 unit increase in Present_Price is associated with an increase of 0.742.\n* Holding all other features fixed, a 1 unit increase in Kms_Driven is associated with a decrease of .0411.\n* Holding all other features fixed, a 1 unit increase in Vehicle_Age means decrease in 0.22764.****","b4500fdd":"The low R2 valued is because of multi collinearity present between Fuel_Type_Diesel and Fuel_Type_Petrol. This can be solved by using vif","78374407":" # Seller type vs selling price","9479d3c2":"1 St owner's vehiles are selling for more price","86df5b1d":"# Predictions from our Model","b334bccf":"# **Exploratory Data Analysis**","610fc939":"# Vehicle age vs selling price","6aedfe10":"# Feature Engineering","ccdb19ae":"# Model Evaluation","01ea34a7":"Better R2 value compared to original model","70ecc127":"We can drop Fuel_Type_Petrol as it is having high VIF","bb1941c8":"# Kms driven vs selling price","4c618163":"# Transmission type vs selling price","55442396":"Diesel cars are going for more price compared to petrol and cng","50df8a9a":"# Residual Analysis","ff5d1a35":"Automatic cars are selling for more price than manual cars","0f38df5a":"# Correlation heatmap"}}