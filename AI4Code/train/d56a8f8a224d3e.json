{"cell_type":{"d6791910":"code","b593e7e5":"code","bbe2b930":"code","7f974d0e":"code","b60eb2c6":"code","da489243":"code","2fd7e784":"code","0f1d1855":"code","00dadbb1":"code","81281693":"markdown","92038a53":"markdown","fdca8079":"markdown"},"source":{"d6791910":"%%time\n#  \u3053\u306e\u30bb\u30eb\uff08jupyter \u3067\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u5358\u4f4d\u3067\u3059\u3002\uff09\u306f\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u8fbc\u307f\u3001sqlite \u30c7\u30fc\u30bf\u3068\u63a5\u7d9a\u3057\u3066\u3001\u4e00\u6642\u7684\u306a\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n# pandas \u3068\u3044\u3046\u30c7\u30fc\u30bf\u3092\u6271\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n# \u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u30c7\u30fc\u30bf\u64cd\u4f5c\u306f\uff33\uff31\uff2c\u3092\u901a\u3058\u3066\u884c\u3046\u306e\u3067\u3001pandas \u306f\u3001\u30b0\u30e9\u30d5\u3092\u66f8\u304f\u305f\u3081\u306b\u4f7f\u3046\u306e\u304c\u4e3b\u3067\u3059\u3002\nimport pandas as pd\nimport numpy as np\nimport pandas.io.sql as psql\n\n# sqlite\u3092\u8aad\u307f\u8fbc\u3080\u30e9\u30a4\u30d6\u30e9\u30ea\nimport sqlite3\n\n# \u7dda\u5f62\u56de\u5e30\u3000\u4f7f\u3046\u983b\u5ea6\u306f\u3042\u307e\u308a\u306a\u3044\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u3001\u3044\u308c\u3066\u304a\u304d\u307e\u3059\u3002\nfrom sklearn import linear_model\nclf = linear_model.LinearRegression()\n\n\n\n# HTML\u3067\u8868\u793a\u3059\u308b\u3000\u30a8\u30af\u30bb\u30eb\u306b\u30b3\u30d4\u30da\u3059\u308b\u3068\u304d\u306b\u4fbf\u5229\nfrom IPython.display import display, HTML\n\n\n# \u65e5\u6642\u3092\u6271\u3046\nfrom datetime import datetime as dt\nimport time\n\n# \u30b0\u30e9\u30d5\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib import ticker\n%matplotlib inline\nimport plotly.graph_objects as go\n\n\n# system \u95a2\u4fc2\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\nimport sys\n# os \u306e\u6a5f\u80fd\u3092\u4f7f\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\nimport os\n# \u6b63\u898f\u8868\u73fe\nimport re\n\n# json,yaml \u5f62\u5f0f\u3092\u6271\u3046\nimport json\nimport yaml\n\n# \u5909\u6570\u306e\u72b6\u614b\u3092\u8abf\u3079\u308b\nimport inspect\n\n# \u6587\u5b57\u30b3\u30fc\u30c9\nimport codecs\n\n# Web \u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\nimport requests\n\n# \u8cbf\u6613\u7d71\u8a08\u306e\u30c7\u30fc\u30bf\n# http:\/\/www.customs.go.jp\/toukei\/info\/tsdl_e.htm\n# \u30b3\u30fc\u30c9\u3000\u8f38\u51fa\u306f\u65e5\u672c\u8a9e\u306e\u307f\n# https:\/\/www.customs.go.jp\/toukei\/sankou\/code\/code_e.htm \n\n# sqlite \u306b show tables \u304c\u306a\u3044\u306e\u3067\u88dc\u8db3\u3059\u308b\u3082\u306e\nshow_tables = \"select tbl_name from sqlite_master where type = 'table'\"\n# describe \u3082\u306a\u3044\u3067\u3001\u88dc\u5b8c\u3057\u307e\u3059\u3002\ndesc = \"PRAGMA table_info([{table}])\"\n# \u30e1\u30e2\u30ea\u3067\u3001sqlite \u3092\u4f7f\u3044\u307e\u3059\u3002kaggle \u306e\u30b9\u30af\u30ea\u30d7\u30c8\u4e0a\u3067\u306f\u3001\u30aa\u30f3\u30e1\u30e2\u30ea\u3067\u306a\u3044\u3068\u65b0\u898f\u30c6\u30fc\u30d6\u30eb\u304c\u3064\u304f\u308c\u307e\u305b\u3093\n# \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e00\u884c\u304c\u9577\u3044\u3068\u304d\u306f\u3000\\\u3000\u3067\u6539\u884c\u3057\u307e\u3059\u3002\nconn = \\\n    sqlite3.connect(':memory:')\n\n# sql \u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u5909\u6570\u3067\u3059\u3002\ncursor = conn.cursor()\n\n# 1997 \u5e74\u304b\u3089\u30012019 \u5e74\u307e\u3067\u306e\u5e74\u30d9\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\u3067\u3059\u3002\u30c6\u30fc\u30d6\u30eb\u306f\u3001year_from_1997 \n# year_from_1997\nattach = 'attach \"..\/input\/japan-trade-statistics\/y_1997.db\" as y_1997'\ncursor.execute(attach)\n\n# 2018 \u5e74\u306e\u6708\u5225\u96c6\u8a08 \u30c6\u30fc\u30d6\u30eb\u540d\u3082 ym_2018 \nattach = 'attach \"..\/input\/japan-trade-statistics\/ym_2018.db\" as ym_2018'\ncursor.execute(attach)\n\n# 2019 \u5e74\u306e\u6708\u5225\u96c6\u8a08 \u30c6\u30fc\u30d6\u30eb\u540d\u3082 ym_2019\nattach = 'attach \"..\/input\/japan-trade-statistics\/ym_2019.db\" as ym_2019'\ncursor.execute(attach)\n\n# 2020 \u5e74\u306e\u6708\u5225\u96c6\u8a08 \u30c6\u30fc\u30d6\u30eb\u540d\u3082 ym_2020\nattach = 'attach \"..\/input\/japan-trade-statistics\/ym_2020.db\" as ym_2020'\ncursor.execute(attach)\n\n# hs code,country,HS\u30b3\u30fc\u30c9\u3067\u3059\u3002\u4f7f\u3044\u3084\u3059\u3044\u3088\u3046\u306b pandas\u3000\u306b\u5909\u66f4\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nattach = 'attach \"..\/input\/japan-trade-statistics\/codes.db\" as code'\ncursor.execute(attach)\n# import hs,country code as pandas\ntmpl = \"{hs}_{lang}_df =  pd.read_sql('select * from code.{hs}_{lang}',conn)\"\nfor hs in ['hs2','hs4','hs6','hs6','hs9']:\n    for lang in ['jpn','eng']:\n        exec(tmpl.format(hs=hs,lang=lang))        \n\n# \u56fd\u30b3\u30fc\u30c9\u3082 pandas \u3067\u6271\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n# country table: country_eng,country_jpn\ncountry_eng_df = pd.read_sql('select * from code.country_eng',conn)\ncountry_eng_df['Country']=country_eng_df['Country'].apply(str)\ncountry_jpn_df = pd.read_sql('select * from code.country_jpn',conn)\ncountry_jpn_df['Country']=country_jpn_df['Country'].apply(str)\n\n\n\n# \u8a08\u7b97\u6642\u9593\u3092\u7bc0\u7d04\u3059\u308b\u305f\u3081\u306b\u3001\u5e74\u306e\u30c7\u30fc\u30bf\u304b\u3089\u30012019 \u5e74\u3092\u5207\u308a\u51fa\u3057\u307e\u3059\u3002\n# \u6700\u521d\u306e\u306f\u30a8\u30e9\u30fc\u51e6\u7406\u3067\u3059\u3002y_2019 \u3068\u3044\u3046\u30c6\u30fc\u30d6\u30eb\u304c\u5b58\u5728\u3059\u308b\u3068\u3001\u65b0\u898f\u306b y_2019 \u3092\u4f5c\u308d\u3046\u3068\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n# error \u306e\u5834\u5408\u306f\u3001\u4f55\u3082\u305b\u305a\u3001\u6b21\u306b\u3059\u3059\u307f\u307e\u3059\u3002\ntry:\n    cursor.execute('drop table y_2019')\nexcept:\n    pass\n\n# \u3053\u308c\u304b\u3089\u304c\u3001SQl \u306b\u306a\u308a\u307e\u3059\u3002\u8907\u6570\u884c\u3067\u66f8\u304f\u3053\u3068\u304c\u591a\u3044\u306e\u3067sql \u3068\u3044\u3046\u5909\u6570\u306b\u8907\u6570\u884c\u3092\u4ee3\u5165\u3057\u307e\u3059\u3002\n# \u6700\u5f8c\u306e [1:-1] \u306f\u3001\u4e00\u884c\u76ee\uff08\u6539\u884c\u3067\u7a7a\u767d\uff09\u3068\u6700\u5f8c\u306e\u884c\uff08\u3053\u308c\u3082\u6539\u884c\u3060\u3051\u3067\u7a7a\u767d\uff09\u3092\u3068\u308a\u306e\u305e\u304f\u305f\u3081\u3067\u3059\u3002\n# 0 \u304b\u3089\u59cb\u307e\u308b\u306e\u3067\u30011 \u3060\u3068\u3001\uff12\u884c\u76ee\u304b\u3089\u6700\u5f8c\u306e\u884c\u306e\u3072\u3068\u3064\u624b\u524d\u307e\u3067\u3067\u3059\u3002\nsql = \"\"\"\ncreate table y_2019 \nas select * from year_from_1997\nwhere Year = 2019\n\"\"\"[1:-1]\n# \u4e0a\u8a18\u306e sql \u3092\u5b9f\u884c\u3057\u3057\u3066\u30012019 \u5e74\u306e\u30c7\u30fc\u30bf\u3092\u3064\u304f\u308a\u307e\u3059\u3002\ncursor.execute(sql)\nconn.commit()\n\n# sql \u306e\u8aac\u660e\u3067\u3059\u3002\n# create table \u30c6\u30fc\u30d6\u30eb\u540d : \u30c6\u30fc\u30d6\u30eb\u3092\u65b0\u898f\u4f5c\u6210\u3000\u3053\u3053\u3067\u306f\u3001y_2019 \n# as select * from  \u30c6\u30fc\u30d6\u30eb\u540d\u3000: \u30c6\u30fc\u30d6\u30eb\u540d(year_from_1997)\u304b\u3089\u3064\u304f\u308a\u307e\u3059\u3002\n# where Year = 2019 : 2019 \u5e74\u306e\u30c7\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002Year \u306f\u3001\u6570\u5024\u306a\u306e\u3067\u30012019 \u3068\u66f8\u304d\u307e\u3059\u3002\n\n\n# https:\/\/www.customs.go.jp\/toukei\/srch\/index.htm?M=01&P=1,1,,,,,,,,4,1,2019,0,0,0,2,020230100,,,,,,,,,,6,120,,,,,,,,,,,,,,,,,,,,,20\n# graph \u7528\u306e\u3000color\u3000https:\/\/matplotlib.org\/examples\/color\/named_colors.htmlsql_sample \n\n\n","b593e7e5":"# \u5e74\u6708\u30c7\u30fc\u30bf\u306e\u4f5c\u6210\u3000\u305d\u306e\u3046\u3061\u4e00\u500b\u306b\u3057\u3066\u30a2\u30c3\u30d7\u3059\u308b\u4e88\u5b9a\n\ntry:\n    cursor.execute('drop table ym_2018_2020')\nexcept:\n    pass\nsql = \"\"\"\ncreate table ym_2018_2020\nas select CAST(Year AS  str )||month as ym,* from ym_2018\n\"\"\"[1:-1]\ncursor.execute(sql)\nsql = \"\"\"\ninsert into  ym_2018_2020\n select CAST(Year AS  str )||month as ym,* from ym_2019\n\"\"\"[1:-1]\ncursor.execute(sql)\nsql = \"\"\"\ninsert into ym_2018_2020\n select CAST(Year AS  str )||month as ym,* from ym_2020\n\"\"\"[1:-1]\ncursor.execute(sql)\nconn.commit()","bbe2b930":"hs = 'hs4'\nhscode = '0203' # \u8c5a\u8089\nexp_imp=2","7f974d0e":"\nyear = 2019\n\nsql_tmpl = \"\"\"\nselect Country,sum(Value) as Value from ym_2018_2020 \nwhere {hs}=\"{hscode}\" and exp_imp={exp_imp} and  year={year}\ngroup by Country\norder by Value desc\n\"\"\"[1:-1]\nsql = sql_tmpl.format(hs=hs,hscode=hscode,exp_imp=exp_imp,year=year)\ndf = pd.read_sql(sql,conn)\ntotal = df['Value'].sum()\ndf['Country'] = df['Country'].astype('str') # Country \u304c\u3001\u6570\u5b57\u306a\u306e\u3067\u3001\u6587\u5b57\u578b\u306b\u5909\u66f4\ndf = pd.merge(df,country_eng_df,on='Country')\ndf['percent'] = 100*(df['Value']\/total)\ndf = df[['Country','percent','Value','Country_name']]\n\n# United_states_of_america \u306f\u9577\u3044\u306e\u3067\u3001usa \u306b\u5909\u66f4 loc\uff08index) \u3067\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002index \u304c\u306a\u3044\u3068\u304d\u306f\u3001\u6570\u5b57\u304c\u306f\u3044\u3063\u3066\u3044\u307e\u3059\u3002\n# 304 usa \u304c\u6700\u521d\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u30010 \u3067\u3059\u3002df.loc[0,'Country_name']\u3067\u78ba\u8a8d\u3057\u3066\u304b\u3089\u5909\u66f4\u3059\u308b\u3068\u3044\u3044\u3067\u3059\u306d\u3002\ndf.loc[0,'Country_name']='usa'","b60eb2c6":"# \u3068\u308a\u3048\u305a\u3001pandas \u3067\u68d2\u30b0\u30e9\u30d5\u3000\u7c21\u5358\u306a\u306e\u3067\u3001\u3044\u3044\u3067\u3059\u304c\u3001\u3042\u3061\u3053\u3061\u7f60\u304c\u3042\u308a\u307e\u3059\u3002\n# \u6b21\u5143\uff08X\u8ef8\u306f\u3001index) \u6e2c\u5ea6\uff08Y\u8ef8\uff09\u3064\u307e\u308a\u3001pandas \u30c7\u30fc\u30bf\u306f\u3001index\u3068\u3001\u5024\u306e\u307f\u306b\u3057\u307e\u3059\u3002\u3000\nxdf = df.head(5).sort_values(['percent']) # \u3053\u3053\u3067\u3001\u30bd\u30fc\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5024\u3060\u3051\u306b\u3057\u305f\u6bb5\u968e\u3067\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\nxdf.index=xdf['Country_name'] + ': ' + xdf['Country']# index \u306b Country_name \u8a2d\u5b9a\nxdf=xdf['percent']\nxdf.plot.barh()","da489243":"class util():\n    def __init__(self):\n        print(dt.now())\n        \n    # hs code \u304b\u3089\u3000\u8aac\u660e\u3092\u53d6\u5f97\u3059\u308b\n    def hs_name_get(self,hs_code):\n        hs = len(hs_code)\n        if hs not in (2,4,6,9):\n            print('HS \u30b3\u30fc\u30c9\u306e\u9577\u3055\u304c\u307e\u3061\u304c\u3063\u3066\u3044\u307e\u3059\u3002 ' + str(hs))\n        hs = str(hs)\n        print(hs_code)\n        text = 'hs' + hs + '_eng_df.query(' +\"'\"+ 'hs' + hs + '==\"' + hs_code + '\"' + \"')\"\n        df = eval(text)\n        print(df['hs' + hs + '_name'].values[0])\n        text = 'hs' + hs + '_jpn_df.query(' +\"'\"+ 'hs' + hs + '==\"' + hs_code + '\"' + \"')\"\n        df = eval(text)\n        print(df['hs' + hs + '_name'].values[0])\n        \n    def hs_url(self,hs_code,exp_imp=2,yyyy_mm='2020_4'):\n        # \u8f38\u51fa https:\/\/www.customs.go.jp\/yusyutu\/index.htm\n        # \u8f38\u5165 https:\/\/www.customs.go.jp\/tariff\/index.htm\n        hs = hs_code[0:2]\n    \n        if exp_imp == 1:\n            ex = 'yusyutu'\n        else:\n            ex = 'tariff'\n        \n        tmpl = 'https:\/\/www.customs.go.jp\/{ex}\/{yyyy_mm}\/data\/print_j_{hs}.htm'\n        print(tmpl.format(ex=ex,yyyy_mm=yyyy_mm,hs=hs))\n\n    # \u30b0\u30e9\u30d5\u4f5c\u6210 \u4e00\u7cfb\u5217\u306e\u307f\n    def g1(self,df,x,y,color='b'):\n        plt.figure(figsize=(20, 10))\n\n        ax = sns.lineplot(x=x,y=y,data=df,linewidth=7.0,color=color)\n        # \u3053\u308c\u306f\u3001x\u8ef8\uff08\u6642\u7cfb\u5217\uff09\u306e\u5358\u4f4d\u304c\u7701\u7565\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u8a2d\u5b9a\n        # \u4f55\u3082\u3057\u306a\u3044\u3068\u30012000,2005,2010\u306e\u3088\u3046\u306b\u4e00\u5e74\u5206\u304c\u3068\u3070\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n        ax.xaxis.set_major_locator(ticker.MultipleLocator(1)) \n        \n    # \u30b0\u30e9\u30d5\u4f5c\u6210 2\u7cfb\u5217\u3000\u8f38\u51fa\u5165\u3000\u6bd4\u8f03\u306b\u3064\u304b\u3044\u307e\u3059\u3002\u8f38\u51fa\u304c\u9752\u3001\u8f38\u5165\u304c\u8d64\n    def g2(self,df,x,y,hue,palette={1: \"b\", 2: \"r\"}):\n        plt.figure(figsize=(20, 10))\n        ax  = sns.lineplot(x=x,y=y,hue=hue,linewidth = 7.0,\n             palette=palette,\n             data=df)\n        # \u51e1\u4f8b\u306e\u4f4d\u7f6e\u3000\uff12\u306f\u5de6\u4e0a\n        ax.legend_._loc = 2\n        ax.xaxis.set_major_locator(ticker.MultipleLocator(1))\n        \n\n\nut = util()","2fd7e784":"# df \u3092\u65b0\u3057\u304f\u3064\u304f\u3063\u3066\u4f7f\u3046\n\nsql_tmpl = \"\"\"\nselect ym,Country,sum(Value) as Value from ym_2018_2020 \nwhere {hs}=\"{hscode}\" and exp_imp={exp_imp} and \nCountry in ('304','302','218','204','305')\ngroup by ym,Country\norder by ym,Country\n\"\"\"[1:-1]\nsql = sql_tmpl.format(hs=hs,hscode=hscode,exp_imp=exp_imp)\ndf = pd.read_sql(sql,conn)\ndf['Country'] = df['Country'].astype('str')\ndf =pd.merge(df,country_eng_df,on='Country')\n# plotly \u3064\u304b\u3046\u3068\u304d\u306f\u3001\u7e26\u6301\u3061\u3092\u6a2a\u6301\u3061\u306b\u3057\u307e\u3059\u3002\nxdf = df.pivot(index='ym', columns='Country', values='Value')\nxdf['ym'] = 'ym' + xdf.index","0f1d1855":"# \u4e0a\u4f4d\uff15\u30ab\u56fd\u3092\u306e\u6708\u5225\u306e\u5909\u5316\u3092\u30012018,1-2020,6 \u307e\u3067\nimport plotly.graph_objects as go\nfig = go.Figure([\n                 go.Scatter(x=xdf['ym'],y=xdf['304'],name='USA'),\n                 go.Scatter(x=xdf['ym'],y=xdf['302'],name='Canada'),\n                 go.Scatter(x=xdf['ym'],y=xdf['218'],name='Spain'),\n                 go.Scatter(x=xdf['ym'],y=xdf['204'],name='Denmark'),\n                 go.Scatter(x=xdf['ym'],y=xdf['305'],name='Mexico'),\n                ])\nfig.show()","00dadbb1":"# \uff15\u30ab\u56fd\u6bd4\u8f03\nplt.figure(figsize=(20, 10))\nax  = sns.lineplot(x='ym',y='Value',hue='Country_name',linewidth = 7.0,data=df)\nax.xaxis.set_major_locator(ticker.MultipleLocator(1)) ","81281693":"# \u4e00\u6642\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210 2018.1-2020\u5e74\u306e\u6708\u5225\u30c7\u30fc\u30bf\n","92038a53":"# [\u8cbf\u6613\u7d71\u8a08\u3092\u5b66\u3073\u5408\u3046\u4f1a](https:\/\/scrapbox.io\/manabiai-lesson) \u7528\u6559\u6750\n\n# \uff08\u8ab2\u984c\uff09\u8c5a\u8089\u306e\u8f38\u5165 HS\u3000\uff14\u6841\u3067\u96c6\u8a08 [0203](https:\/\/www.toishi.info\/hscode\/2\/0203.html) \u51b7\u8535\u3001\u51b7\u51cd\u304c\u3042\u308b\u306e\u3067\u3001\u5927\u96d1\u628a\u306a\u5206\u985e\u306b\u3057\u307e\u3057\u305f\u3002\n\n\n","fdca8079":"# \u5bfe\u8c61\u30c7\u30fc\u30bf\u306e\u6307\u5b9a HS \u306f\u3001hs4   hscode \u306f\u30010213 \u5206\u6790\u306f\u3001import \u9650\u5b9a"}}