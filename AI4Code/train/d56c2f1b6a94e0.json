{"cell_type":{"a8b9f112":"code","c3e0ef28":"code","e4f8dc87":"code","b25ad4fe":"code","8a534630":"code","15f13343":"code","e04bbc54":"code","9951156e":"code","749f3321":"code","7d2ffb33":"code","6d7b4f8c":"code","a3596501":"code","4b1da4a4":"code","60cdbf16":"code","560e7bb4":"markdown","56aae15a":"markdown"},"source":{"a8b9f112":"import torch","c3e0ef28":"# Number\nt1 = torch.tensor(4.)\nt1","e4f8dc87":"# Vector\nt2 = torch.tensor([1., 2, 3, 4])\nt2\nt21 = torch.tensor([0.1, 2, 45, 65])\nt21","b25ad4fe":"# Matrix\nt3 = torch.tensor([[5., 6], \n                   [7, 8], \n                   [9, 10]])\nprint(t3.shape)\nt31 = torch.tensor([[2, 4],[3.4, 0],[5, 10],[3, 4]])\nt31.shape","8a534630":"# 3-dimensional array\nt4 = torch.tensor([\n    [[11, 12, 13], \n     [13, 14, 15]], \n    [[15, 16, 17], \n     [17, 18, 19.]]])\nt4","15f13343":"# Create tensors.\nx = torch.tensor(3.)\nw = torch.tensor(4., requires_grad=True)\nb = torch.tensor(5., requires_grad=True)\nx, w, b","e04bbc54":"# Arithmetic operations\ny = w * x + b\ny","9951156e":"# Compute derivatives\ny.backward()","749f3321":"# Display gradients\nprint('dy\/dx:', x.grad)\nprint('dy\/dw:', w.grad)\nprint('dy\/db:', b.grad)","7d2ffb33":"import numpy as np\n\nx = np.array([[1, 2],[3, 4.]])\nx\nx1 = np.array([[4.0, 1],[5, 10]])\nx1.shape\nx2 = x*x1\nx2","6d7b4f8c":"# Convert the numpy array to a torch tensor.\ny2 = torch.from_numpy(x)\ny2","a3596501":"x.dtype, y2.dtype","4b1da4a4":"# Convert a torch tensor to a numpy array\nz = y2.numpy()\nz","60cdbf16":"z.dtype","560e7bb4":"*For installing the Conda package of Pytorch*\n> https:\/\/pytorch.org\n#conda install pytorch torchvision -c pytorch!","56aae15a":"# Tensors and PyTorch Basics"}}