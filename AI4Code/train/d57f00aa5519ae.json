{"cell_type":{"0d7f63dc":"code","7675cb79":"code","4f585ed0":"code","3013715f":"code","aac0d2d2":"code","41de1b7f":"code","3890f30f":"code","909c4a54":"code","1951dcde":"code","3efec3ed":"code","e3de1252":"code","0ce50c19":"code","2b224306":"code","03c6693e":"code","f4d2f8de":"code","6f2787ff":"code","b5485c28":"code","3cd54e0c":"code","73989305":"code","90203026":"code","77c492d6":"code","e24bc61c":"code","fcce0fcb":"code","48bcc338":"code","0896a070":"code","0a53993d":"code","daa52094":"code","278f2e38":"code","0bc8a260":"code","e13dd6ea":"code","35b692a7":"code","32e958d5":"code","142c5a89":"code","34bfaed0":"code","6cca8c5b":"code","6988c0e6":"code","b54fc419":"code","f50bb1a0":"code","978d8d5e":"code","459b2fe4":"code","dfdc4dda":"code","28b0f6ed":"code","486895f4":"code","61cbd2a4":"code","97feb093":"code","f562fbff":"code","5253cefa":"code","a2fcfe1d":"code","14b27dcf":"code","3ee46fd0":"code","333654cd":"code","555cc0fa":"code","ce81a4bb":"code","582ac06b":"code","8c6fb325":"code","e3b96c74":"code","40ffc86f":"code","b5ea1b4a":"markdown","b47e62a2":"markdown","eba63808":"markdown","9d79a3a5":"markdown","8de44b15":"markdown","c083bb31":"markdown","c5641ee9":"markdown","3e4da68f":"markdown","d5efc09d":"markdown","19899062":"markdown","9b6bdcd6":"markdown","341bfe5f":"markdown","302f5ec5":"markdown","8e7d16a6":"markdown","c17ec239":"markdown","1bb12e99":"markdown"},"source":{"0d7f63dc":"# This Python 3 environment with many helpful analytics libraries installed\n# as defined by the kaggle\/python Docker \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O \n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","7675cb79":"import seaborn as sns\nimport matplotlib.pyplot as plt #plotting, math, stats\n%matplotlib inline","4f585ed0":"#First, open CSV file as a pandas dataframe\ndf = pd.read_csv('..\/input\/pet-food-customer-orders-online\/pet_food_customer_orders.csv')\n#visualize the dataframe\ndf","3013715f":"df.isna().sum()","aac0d2d2":"wetfood=df[['customer_id',\"wet_food_order_number\", 'pet_order_number',\n           \"orders_since_first_wet_trays_order\", \"pet_has_active_subscription\",\n           'pet_food_tier','neutered', 'gender', 'pet_breed_size',\n          'ate_wet_food_pre_tails','order_payment_date','wet_trays', \n          'wet_tray_size', 'total_wet_food_updates']]\nwetfood          ","41de1b7f":"sns.countplot(wetfood['total_wet_food_updates'])","3890f30f":"wetfood['gender'].value_counts()","909c4a54":"sns.countplot(wetfood['gender'])","1951dcde":"wetfood['neutered'].value_counts()","3efec3ed":"mylabels='neutered','not neutered'\nmycolors='green', 'gray'\nplt.pie(wetfood['neutered'].value_counts(),\n        labels=mylabels,autopct='%1.1f%%',\n       colors=mycolors)","e3de1252":"wetfood['pet_breed_size'].value_counts().plot(color='darkcyan')","0ce50c19":"wetfood['wet_trays'].value_counts()","2b224306":"height = wetfood['wet_trays'].value_counts()\nbars = wetfood['wet_trays'].unique()\n \n# Create horizontal bars\nplt.bar(bars, height, color='green')\n     \nplt.xlim(0, 100)\n\n# Show graphic\nplt.show()","03c6693e":"mylabels2='subcribed','not subscribed'\nplt.pie(wetfood['pet_has_active_subscription'].value_counts(),labels=mylabels2,autopct='%1.1f%%')","f4d2f8de":"sns.countplot(wetfood['pet_food_tier'])","6f2787ff":"wetfood['ate_wet_food_pre_tails'].value_counts()","b5485c28":"sns.countplot(wetfood['wet_tray_size'])","3cd54e0c":"import datetime\n#remove time portion of date_time input\nwetfood['order_date'] = wetfood['order_payment_date'].apply(lambda x: pd.Timestamp(x).strftime('%Y-%m-%d'))\nwetfood.drop('order_payment_date', axis=1, inplace=True)","73989305":"wetfood['order_date'].value_counts().plot(color='tomato')\nplt.xticks(rotation=90)","90203026":"wetfood.describe()","77c492d6":"wetfood.corr()#correlation","e24bc61c":"sns.heatmap(wetfood.corr())","fcce0fcb":"#correlating 2 columns\nwetfood['wet_food_order_number'].corr(wetfood['orders_since_first_wet_trays_order'])","48bcc338":"wetfood['wet_food_order_number'] = wetfood['wet_food_order_number'].fillna(value=0)","0896a070":"wetbuyers= wetfood[wetfood.wet_food_order_number >=1]\nwetbuyers","0a53993d":"wetbuyers.describe(include='all')","daa52094":"wetbuyers.groupby(wetbuyers.order_date)['wet_food_order_number'].sum().plot(figsize=(12, 6), color='orange')\nplt.ylabel('Wet food orders')\nplt.title(\"Total Wet Food Orders Per Date\", fontsize=20)","278f2e38":"#those that reorder\nreorderers= wetbuyers[wetbuyers.orders_since_first_wet_trays_order >=1]\nreorderers.describe(include=\"all\")","0bc8a260":"reorderers.groupby(reorderers.order_date)['orders_since_first_wet_trays_order'].sum().plot(figsize=(12, 6), color='cadetblue')\nplt.ylabel('orders since 1st wet order')\nplt.title(\"Total orders since 1st wet order per date\", fontsize=20)","e13dd6ea":"#grouped by customers\ndf.groupby(['customer_id']).count()","35b692a7":"df.groupby(['customer_id']).count().mean()","32e958d5":"#change customer ids from numeric to string\ndf[\"customer_id\"]=df[\"customer_id\"].astype(str)","142c5a89":"grouped_clients = df.groupby(\"customer_id\")['wet_food_order_number'].sum().to_frame()","34bfaed0":"#groups clients' data\ngroupWetBuyers= grouped_clients[grouped_clients.wet_food_order_number >=1]\ngroupWetBuyers.reset_index()","6cca8c5b":"groupWetBuyers.describe()","6988c0e6":"df.dtypes","b54fc419":"#change data type for pet ID to string\ndf[\"pet_id\"]=df[\"pet_id\"].astype(str)","f50bb1a0":"#get to know each pet\npets=df[['customer_id','pet_id', 'gender', 'neutered', 'pet_breed_size',\n         'wet_food_order_number', 'pet_life_stage_at_order', 'pet_allergen_list',\n         'pet_health_issue_list',\n         'pet_has_active_subscription', 'orders_since_first_wet_trays_order',\n         'ate_wet_food_pre_tails', 'pet_food_tier', 'wet_food_textures_in_order'\n        ]]\npets","978d8d5e":"pets.describe(include='all')","459b2fe4":"pets2 = pets.groupby(['customer_id'])['pet_id'].apply(', '.join).reset_index()\npets2","dfdc4dda":"grouped_df1 = pets.groupby(\"customer_id\")\n\ngrouped_lists1 = grouped_df1[\"pet_breed_size\"].agg(lambda column: \", \".join(column))\ngrouped_lists1 = grouped_lists1.reset_index(name=\"pet_breed_size\")","28b0f6ed":"grouped_df2 = pets.groupby(\"customer_id\")\n\ngrouped_lists2 = grouped_df2[\"gender\"].agg(lambda column: \", \".join(column))\ngrouped_lists2 = grouped_lists2.reset_index(name=\"gender\")","486895f4":"pets[\"neutered\"]=pets[\"neutered\"].astype(str)","61cbd2a4":"grouped_df3 = pets.groupby(\"customer_id\")\n\ngrouped_lists3 = grouped_df3[\"neutered\"].agg(lambda column: \", \".join(column))\ngrouped_lists3 = grouped_lists3.reset_index(name=\"neutered\")\n","97feb093":"grouped_df4 = pets.groupby(\"customer_id\")\n\ngrouped_lists4 = grouped_df4[\"pet_life_stage_at_order\"].agg(lambda column: \", \".join(column))\ngrouped_lists4 = grouped_lists4.reset_index(name=\"pet_life_stage_at_order\")\n","f562fbff":"pets = pets.astype(object).replace(np.nan, 'None')","5253cefa":"grouped_df5 = pets.groupby(\"customer_id\")\n\ngrouped_lists5 = grouped_df5[\"pet_health_issue_list\"].agg(lambda column: \", \".join(column))\ngrouped_lists5 = grouped_lists5.reset_index(name=\"pet_health_issue_list\")\n","a2fcfe1d":"grouped_df6 = pets.groupby(\"customer_id\")\n\ngrouped_lists6 = grouped_df6[\"pet_allergen_list\"].agg(lambda column: \", \".join(column))\ngrouped_lists6 = grouped_lists6.reset_index(name=\"pet_allergen_list\")","14b27dcf":"grouped_df7 = pets.groupby(\"customer_id\")\n\ngrouped_lists7 = grouped_df7[\"pet_food_tier\"].agg(lambda column: \", \".join(column))\ngrouped_lists7 = grouped_lists7.reset_index(name=\"pet_food_tier\")\n","3ee46fd0":"grouped_df8 = pets.groupby(\"customer_id\")\n\ngrouped_lists8 = grouped_df8[\"wet_food_textures_in_order\"].agg(lambda column: \", \".join(column))\ngrouped_lists8 = grouped_lists8.reset_index(name=\"wet_food_textures_in_order\")","333654cd":"pets['pet_has_active_subscription']=pets['pet_has_active_subscription'].astype(str)\n\ngrouped_df9 = pets.groupby(\"customer_id\")\n\ngrouped_lists9 = grouped_df9[\"pet_has_active_subscription\"].agg(lambda column: \", \".join(column))\ngrouped_lists9 = grouped_lists9.reset_index(name=\"pet_has_active_subscription\")","555cc0fa":"pets['ate_wet_food_pre_tails']=pets['ate_wet_food_pre_tails'].astype(str)\n\ngrouped_df9 = pets.groupby(\"customer_id\")\n\ngrouped_lists9 = grouped_df9[\"ate_wet_food_pre_tails\"].agg(lambda column: \", \".join(column))\ngrouped_lists9 = grouped_lists9.reset_index(name=\"ate_wet_food_pre_tails\")","ce81a4bb":"pets['wet_food_order_number']= pets['wet_food_order_number'].replace(\"None\", 0)\npets['orders_since_first_wet_trays_order']= pets['orders_since_first_wet_trays_order'].replace(\"None\", 0)","582ac06b":"numerics1 = pets.groupby('customer_id')['wet_food_order_number'].sum().reset_index()\nnumerics2 = pets.groupby('customer_id')['orders_since_first_wet_trays_order'].sum().reset_index()","8c6fb325":"a=pd.merge(pets2, grouped_lists1, on='customer_id')\na=pd.merge(a, grouped_lists2, on='customer_id')\na=pd.merge(a, grouped_lists3, on='customer_id')\na=pd.merge(a, grouped_lists4, on='customer_id')\na=pd.merge(a, grouped_lists5, on='customer_id')\na=pd.merge(a, grouped_lists6, on='customer_id')\na=pd.merge(a, grouped_lists7, on='customer_id')\na=pd.merge(a, grouped_lists8, on='customer_id')\na=pd.merge(a, grouped_lists9, on='customer_id')","e3b96c74":"a=pd.merge(a, numerics1, on='customer_id')\na=pd.merge(a, numerics2, on='customer_id')\na","40ffc86f":"a.describe(include='all')","b5ea1b4a":"Main task is to generate actionable insights from this pet food customer orders dataset.\nFocusing on customers order and reorder the wet food, characteristics of the pets, and their orders.","b47e62a2":"Correlation between wet_food_order_number and orders_since_first_wet_trays_order:","eba63808":"Dataframe combining all entries per customer_id:","9d79a3a5":"Most pets are nuetured:","8de44b15":"Those who ordered wet food, also reordered since their 1st purchase at least once. The demographics remain the same as those who ordered wet food at least once.","c083bb31":"Most pets that customers by wet food for are small breads.   \nThe bigger the dog, the less likely are customers to buy wet food.","c5641ee9":"Are there certain traits of the pets, customers or their orders that impact the likelihood that they will purchase wet food, and reordering it?","3e4da68f":"Dataset contains several NaNs on only certain columns. There may also be repeated entries but with uneven data across columns.","d5efc09d":"There may be a correlation between wet food order number and order since 1st wet tray order.","19899062":"Of the 49042 entries in the original dataframe, there are 11168 unique owners listed.","9b6bdcd6":"Most customers are subcribed and in the super premium pet food tier.","341bfe5f":"Most pets are males, but by a small margin over females:","302f5ec5":"Some clients repeat in the original dataframe. After combining rows counted for each customer id, there are 11168 clients listed. On average, each client have 4 to 5 pet ids, 1 wet food order, 1 order since their 1st wet order, 1 to 2 favorite flavors listed, 2 health issues listed. After grouping customers by their id, 3787 clients total ordered wet food.   \n\nBy grouping by client id, we can identify those who purchase wet food often. Among the 3787 clients that bought wet food, the most orders placed by 1 client is 252.","8e7d16a6":"Of the 11168 costumer entries, most have ordered wet food more than once.   \nTheir pets are mostly small breed, mature, neutered males.   \nMost of these pets dont seem to have allergies or known health issues.   \nThese clients are in the superpremium tier, have placed 3 to 4 orders.   \n","c17ec239":"Of the 49042 custumers, 12788 bought wet food at least once. Most have subscriptions, own a neutered male small-breed pet. Jan 26, 2020 had the hisghest total orders of wet food.","1bb12e99":"Frequency of orders per date:"}}