{"cell_type":{"4b6c7aca":"code","349fe2e4":"code","1720e4c5":"code","caceb486":"code","4bef5e27":"code","b912eda8":"code","d70ef1fc":"code","4bca82bd":"code","da350d7a":"code","0e7e4777":"code","aaabdb08":"code","e9c72c2d":"code","60445f81":"code","6e44bb67":"code","4dcfcd6e":"code","137a0ad6":"code","6a63c361":"code","56f7df9e":"code","59f5f7dd":"code","89d57748":"code","218a4f89":"code","628df2a8":"code","82cf3fcb":"markdown","b7abf09e":"markdown","61adf0c4":"markdown","13ec7d4e":"markdown","2cd91d6c":"markdown","620f4420":"markdown","28387822":"markdown","96f2c5ee":"markdown","f04b9a78":"markdown","8365b461":"markdown","ea6d93cd":"markdown","1c8343ac":"markdown","617f6217":"markdown"},"source":{"4b6c7aca":"import numpy as np\nimport pandas as pd\n# import matplotlib.pyplot and seaborn for ploting the graphs\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Import train_test_split for spliting of data into training data and test data\nfrom sklearn.model_selection import train_test_split\n# import LinearRegression for fitting Simple Linear Regression to the Training set\nfrom sklearn.linear_model import LinearRegression\n# Importing metrics for the evaluation of the model\nfrom sklearn.metrics import r2_score,mean_squared_error","349fe2e4":"# read the dataset using pandas\ndata = pd.read_csv('..\/input\/salary-data-simple-linear-regression\/Salary_Data.csv')","1720e4c5":"# This displays the top 5 rows of the data\ndata.head()","caceb486":"# Provides some information regarding the columns in the data\ndata.info()","4bef5e27":"# this describes the basic stat behind the dataset used \ndata.describe()","b912eda8":"plt.figure(figsize=(12,6))\nsns.pairplot(data,x_vars=['YearsExperience'],y_vars=['Salary'],size=7,kind='scatter')\nplt.xlabel('YearsExperience')\nplt.ylabel('Salary')\nplt.title('Salary Prediction')\nplt.show()","d70ef1fc":"X = data['YearsExperience']\nX.head()","4bca82bd":"y = data['Salary']\ny.head()","da350d7a":"X_train,X_test,y_train,y_test = train_test_split(X,y,train_size=0.7,random_state=100)","0e7e4777":"# Create new axis for x column\nX_train = X_train[:,np.newaxis]\nX_test = X_test[:,np.newaxis]","aaabdb08":"# Fitting the model\nlr = LinearRegression()\nlr.fit(X_train,y_train)","e9c72c2d":"# Predicting the Salary for the Test values\ny_pred = lr.predict(X_test)","60445f81":"plt.scatter(X_train, y_train, color = 'red')\nplt.plot(X_train, lr.predict(X_train), color = 'blue')\nplt.title('Salary vs Experience (Training set)')\nplt.xlabel('Years of Experience')\nplt.ylabel('Salary')\nplt.show()","6e44bb67":"plt.scatter(X_test, y_test, color = 'red')\nplt.plot(X_train, lr.predict(X_train), color = 'blue')\nplt.title('Salary vs Experience (Test set)')\nplt.xlabel('Years of Experience')\nplt.ylabel('Salary')\nplt.show()","4dcfcd6e":"c = [i for i in range (1,len(y_test)+1,1)]\nplt.plot(c,y_test,color='r',linestyle='-')\nplt.plot(c,y_pred,color='b',linestyle='-')\nplt.xlabel('Salary')\nplt.ylabel('index')\nplt.title('Prediction')\nplt.show()","137a0ad6":"c = [i for i in range(1,len(y_test)+1,1)]\nplt.plot(c,y_test-y_pred,color='green',linestyle='-')\nplt.xlabel('index')\nplt.ylabel('Error')\nplt.title('Error Value')\nplt.show()","6a63c361":"# calculate Mean square error\nmse = mean_squared_error(y_test,y_pred)","56f7df9e":"# Calculate R squared value\nrsq = r2_score(y_test,y_pred)","59f5f7dd":"print('mean squared error :',mse)\nprint('r squared value :',rsq)","89d57748":"# Just plot actual and predicted values for more insights\nplt.figure(figsize=(12,6))\nplt.scatter(y_test,y_pred,color='r',linestyle='-')\nplt.show()","218a4f89":"# Intecept and coeff of the line\nc=lr.intercept_\nm=lr.coef_\nprint('Intercept of the model:',lr.intercept_)\nprint('Coefficient of the line:',lr.coef_)","628df2a8":"# the exact equation of line\nprint(\"y =\",m[0],\"x+\",c)","82cf3fcb":"## Import Necessary Libraries","b7abf09e":"## Getting  the data","61adf0c4":"## To know the line equation for simple linear regression model and see the error value for prediction value for test data \n<h2 style=\"color:blue\"><center> Don't forget to upvote\ud83d\udcc8 if you like\ud83d\udc4d\ud83c\udffb it! It's free! ","13ec7d4e":"### 2. Visualising the Test set results","2cd91d6c":"### 3. Plotting the actual and predicted values","620f4420":"## Find line equation\n\nFind slope(m) and intercept(c) of line to find equation of line","28387822":"## Split the data for train and test ","96f2c5ee":"### 1. Visualising the Training set results","f04b9a78":"## Visualisation","8365b461":"### 4. Plotting the error","ea6d93cd":"The equation of line is\n## y = 9731.2x + 25202.8878","1c8343ac":"### These Plots help to explain or understand the values and how they are scattered","617f6217":"## Predictive Modeling"}}