{"cell_type":{"f0a4b3f7":"code","84f2678d":"code","0b788f60":"code","b013be18":"code","24e8802d":"code","16474fdc":"code","c916efac":"code","3933c561":"code","794cf781":"code","a6e512bc":"code","97d80368":"code","e2a36109":"code","450ca209":"code","b0db7137":"code","94d5bcdb":"code","51797233":"code","4f4b91e1":"code","3cd90789":"code","684068d3":"code","dda8b365":"code","ee208492":"code","eb513a25":"code","e558d2d2":"code","d2df7b43":"code","6ce711cc":"code","24a72d7b":"code","57880b39":"code","2f61208d":"code","c66af429":"code","19aa6e4d":"code","c50a471f":"code","2ffc6785":"code","f9b54472":"code","06206dec":"code","ebeaf8c0":"code","3ee857c7":"code","0158a0fa":"code","776a86a7":"code","be5335fe":"code","0e19dec6":"code","c33db907":"markdown","a9e27016":"markdown","8f9066d0":"markdown","ab57a35d":"markdown","cffd97cd":"markdown","90cc1a9a":"markdown","59b110fd":"markdown","76382d9e":"markdown","6ecaa9b5":"markdown","b8e46a49":"markdown","cc1831b0":"markdown","bb349895":"markdown","79230c18":"markdown","fd6ddc55":"markdown","f98369b7":"markdown","a7249227":"markdown","6b55fc29":"markdown"},"source":{"f0a4b3f7":"import pandas as pd\nimport numpy as np\nimport seaborn as sb\nimport matplotlib.pyplot as plt\nimport missingno as msno\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import f_classif\nfrom sklearn.preprocessing import LabelEncoder,StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import confusion_matrix,accuracy_score,classification_report\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nplt.style.use('fivethirtyeight')\n%matplotlib inline","84f2678d":"df = pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')\ndf.head(10)","0b788f60":"df.shape","b013be18":"df.describe()","24e8802d":"df = df.drop(['Unnamed: 32'],axis=1)","16474fdc":"df.isnull().sum()","c916efac":"sb.heatmap(df.isnull(), cbar=False)","3933c561":"msno.matrix(df)","794cf781":"x = pd.DataFrame(df.iloc[:,2:])\nx","a6e512bc":"y = pd.DataFrame(df.iloc[:,1])","97d80368":"fit_feat = SelectKBest(score_func=f_classif)","e2a36109":"fit_feat.fit(x,y)","450ca209":"score_col = pd.DataFrame(fit_feat.scores_, columns=['Score Values'])","b0db7137":"score_col","94d5bcdb":"name_col = pd.DataFrame(x.columns)","51797233":"feat = pd.concat([name_col,score_col],axis=1)","4f4b91e1":"feat","3cd90789":"x = x.drop(['fractal_dimension_mean', 'texture_mean','smoothness_se','symmetry_se','fractal_dimension_se'],axis=1)","684068d3":"x","dda8b365":"label = LabelEncoder()","ee208492":"y = label.fit_transform(y)","eb513a25":"sb.countplot(data = df, x=\"diagnosis\", palette=[\"#A439A1\",\"#43A5D1\"], edgecolor=\"black\", lw=3)","e558d2d2":"sb.histplot(df,x=\"radius_mean\", hue=\"diagnosis\",multiple=\"stack\",palette=\"crest_r\",edgecolor=\"black\",lw=1.5,bins=40,log_scale=True)","d2df7b43":"fig,ax=plt.subplots(2,2,figsize=(8,14))\nsb.scatterplot(x='perimeter_mean',y='radius_worst',data=df,hue='diagnosis',ax=ax[0][0])\nsb.scatterplot(x='area_mean',y='radius_worst',data=df,hue='diagnosis',ax=ax[1][0])\nsb.scatterplot(x='texture_mean',y='texture_worst',data=df,hue='diagnosis',ax=ax[0][1])\nsb.scatterplot(x='area_worst',y='radius_worst',data=df,hue='diagnosis',ax=ax[1][1])\nplt.show()","6ce711cc":"sb.scatterplot(x = \"texture_mean\", y = \"area_mean\",data=df,size='diagnosis',hue='diagnosis',palette='hot')\nsb.set(style='whitegrid',)\nplt.show()","24a72d7b":"sb.scatterplot(x = \"compactness_mean\", y = \"area_mean\",data=df,size='diagnosis',hue='diagnosis',palette='dark')\nsb.set(style='whitegrid',)\nplt.show()","57880b39":"sb.relplot(data=df, kind=\"line\",\n    x=\"area_mean\", y=\"area_worst\",\n    hue=\"diagnosis\", size=\"diagnosis\",\n    facet_kws=dict(sharex=False)\n)","2f61208d":"sb.catplot(data=df, kind=\"violin\", x=\"concavity_mean\", y=\"concavity_worst\", hue=\"diagnosis\", split=True)","c66af429":"fig, ax = plt.subplots(figsize=(20,15)) \nsb.heatmap(df.corr(),ax=ax,annot=True,linewidth=.5, cmap='icefire')","19aa6e4d":"xtrain, xtest, ytrain, ytest = train_test_split(x, y, train_size=.86, random_state=252)","c50a471f":"sc = StandardScaler()","2ffc6785":"xtrain = sc.fit_transform(xtrain)","f9b54472":"xtest = sc.fit_transform(xtest)","06206dec":"rfc = RandomForestClassifier(n_estimators=200)","ebeaf8c0":"rfc.fit(xtrain,ytrain)","3ee857c7":"ypred = rfc.predict(xtest)","0158a0fa":"accuracy_score(ypred, ytest)","776a86a7":"sb.heatmap(confusion_matrix(ypred,ytest),annot=True, cmap='binary')","be5335fe":"print(classification_report(ypred,ytest))","0e19dec6":"plt.plot(ypred, ytest, color='r')\nplt.xlabel(\"Predicted Value\")\nplt.ylabel(\"Tested Value\")\nplt.title(\"Accuracy Line\")","c33db907":"Standard Scaling","a9e27016":"*Method 2*","8f9066d0":"**Loading Dataset**\n\n---\n\n\n\n---\n\n","ab57a35d":"`Feature Selection`","cffd97cd":"`Label Encoding`","90cc1a9a":"1.   fractal_dimension_mean\n2.   texture_mean\n3.   smoothness_se \n4.   symmetry_se\n5.   fractal_dimension_se\n\nHere we got some features that has no significant affect on our data, so let's drop them all","59b110fd":"*Feature Selection is the process where you automatically or manually select those features which contribute most to your prediction variable or output in which you are interested in. Having irrelevant features in your data can decrease the accuracy of the models and make your model learn based on irrelevant features.*","76382d9e":"**Data Preprocessing**\n\n---\n\n\n\n---\n\n","6ecaa9b5":"**Importing Libraries**\n\n---\n\n\n\n---\n\n","b8e46a49":"*Method 1*","cc1831b0":"Check if theres null value or not","bb349895":"**Train Test Split**\n\n---\n\n\n\n---\n\n","79230c18":"Additionally, we can visualize to check null values by using two method","fd6ddc55":"**Random Forest Model**\n\n---\n\n\n\n---\n\n","f98369b7":"\"Unnamed: 32\" column has no affect on our dataset, so let's drop that column","a7249227":"**Exploratory Data Analysis**\n\n---\n\n\n\n---\n\n","6b55fc29":"After separating the feature variables, now let's apply feature selection"}}