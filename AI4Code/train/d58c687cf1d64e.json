{"cell_type":{"2e68cece":"code","eb59ad07":"code","33184100":"code","c3dc96e3":"code","a03f3aff":"code","7928742d":"code","ade1cd8a":"code","b6bb8823":"code","59c3816f":"code","af4ae18f":"code","6d8c353a":"code","3366a6be":"code","c34ecbc9":"code","7b975c7c":"code","2605de5c":"code","38bc0081":"code","098c67e4":"code","aafe77b0":"markdown","55f6c650":"markdown","639c916a":"markdown","44aac027":"markdown","d67a29a8":"markdown","0563092a":"markdown","dd0df2f8":"markdown","028b9fdf":"markdown","db29fc96":"markdown","adcb60a0":"markdown","b547adf3":"markdown","f9d95397":"markdown","373c63c4":"markdown","58728596":"markdown","6a5a3d64":"markdown","182c1076":"markdown","f54908f1":"markdown","90408b78":"markdown","083180c1":"markdown","e867009d":"markdown","12eb4598":"markdown","943a7f73":"markdown","2c48aaa0":"markdown"},"source":{"2e68cece":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt # visulization\n%matplotlib inline\nimport seaborn as sns # data visualization\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","eb59ad07":"# Path of file to read\nreta_filepath = \"..\/input\/retail-business-sales-20172019\/business.retailsales.csv\"\nreta_filepath2 = \"..\/input\/retail-business-sales-20172019\/business.retailsales2.csv\"\nprint(\"File read\")\n\n# Read the file into a variable reta_data\nreta_data = pd.read_csv(reta_filepath)\nreta_data2 = pd.read_csv(reta_filepath2)\n","33184100":"reta_data.head()","c3dc96e3":"reta_data.tail()","a03f3aff":"plt.figure(figsize=(10,6))\nplt.title(\"Gross Sales by Product Type\")\nsns.barplot(x=reta_data['Gross Sales'], y=reta_data['Product Type'])","7928742d":"plt.figure(figsize=(10,6))\nplt.title(\"Discount by Product Type\")\ndiscounts1 = reta_data['Discounts']*-1;\nsns.barplot(x= discounts1, y=reta_data['Product Type'])","ade1cd8a":"plt.figure(figsize=(10,6))\nplt.title(\"Net Sales by Product Type\")\nsns.barplot(x=reta_data['Total Net Sales'], y=reta_data['Product Type'])","b6bb8823":"plt.figure(figsize=(10,6))\nplt.title(\"Returns by Product Type\")\nreturns1 = reta_data['Returns']*-1;\nsns.barplot(x=returns1, y=reta_data['Product Type'])","59c3816f":"#plt.figure(figsize=(10,6))\n#plt.title(\"Quantity Sold by Product Type\")\n#sns.barplot(x=reta_data.index, y=reta_data['Product Type'])","af4ae18f":"reta_data['Product Type']","6d8c353a":"plt.figure(figsize=(10,9))\nplt.title(\"Gross Sales of Quantity of Each Product\")\nsns.scatterplot(x=reta_data['Gross Sales'], y=reta_data['Net Quantity'], hue=reta_data['Product Type'])","3366a6be":"reta_data2.head()","c34ecbc9":"reta_data2.tail()","7b975c7c":"plt.figure(figsize=(8,6))\nplt.title(\"Net Sales from 2017 to 2019\")\nsns.lineplot(data = reta_data2['Net Sales'], label = \"Net Sales\")\nplt.ylabel(\"Dollars\");\nplt.xlabel(\"Months\");","2605de5c":"plt.figure(figsize=(12,8))\nplt.title(\"Net Sales Each Year\")\nsns.barplot(x=reta_data2['Year'], y=reta_data2['Net Sales'])","38bc0081":"plt.figure(figsize=(12,8))\nplt.title(\"Net Sales Each Month\")\n#sns.barplot(x=reta_data2.index, y=reta_data2['Net Sales'])\nsns.barplot(x=reta_data2['Month'], y=reta_data2['Net Sales'])","098c67e4":"plt.figure(figsize=(8,6))\nplt.title(\"Net Sales V.S. Gross Sales\")\nsns.lineplot(data = reta_data2['Gross Sales'], label = \"Gross Sales\")\nsns.lineplot(data = reta_data2['Discounts'], label = \"Discounts\")\nsns.lineplot(data = reta_data2['Net Sales'], label = \"Net Sales\")\nplt.ylabel(\"Dollars\");","aafe77b0":"Net sales can also be viewed in based on each month. We can see that months (1) December, (2) November and (3) June have the most net sales while months like (1) October, (2) February and (3) May have the least. ","55f6c650":"Now, we can look at the total net sales of each product type. The top three product types are (1) art & sculpture, (2) baskets and (3) skin care. The least selling product types are (1) gift baskets, (2) Easter and (3) kids.   ","639c916a":"First, we can graph the gross sales of each product. The gross sales is graphed first so we can see the sales before including the discount and returns. \n\nThe product type that has the most gross sales are (1) art & sculpture, (2) baskets and (3) skin care. The least grossing product types are (1) gift baskets, (2) Easter and (3) kids. ","44aac027":"The goal of this section to output a list of sales predictions per product type for Oct-Dec 2020. There are many regression techniques we can use to try to predict the trends of each product type. However, the way this data is structured into two seperate files with the prodcut types file lacking date information poses a hurdle to predicting future sales per product type. We can try to work around this by still predicting  future sales using the first file. ","d67a29a8":"We can also look at net sales and gross sales to see how discounts are impacting the net sales. ","0563092a":"Second, I read in the csv files and set them to variables names, called reta_data for the first csv file and reta_data2 for second csv file.","dd0df2f8":"We look at the gross sales of each product type and the quantity they sell each purchase. From this, we can see the quantity sold and grossing sales each product type. The most selling and grossing is (1) art & sculpture, (2) jelewry and (3) baskets.","028b9fdf":"# 2020 Q4 Sales Predictions","db29fc96":"Products that are returned the most are (1) Christmas, (2) art & sculpture and (3) baskets. ","adcb60a0":"# Sales Insights","b547adf3":"We can compare the three years in the graph below. Each year is progressively increasing in net sales. Year 2019 had a slightly larger increase net sales than the last two years.","f9d95397":"This section is focused on the products of the sales using the data from the first csv file. First, we can look at the first and last five data entries to see what we are working with. There is 1775 lines of data with product types, net quantity, gross sales, discounts, returns and net sales. ","373c63c4":"The data of this file starts from January 2017 and ends December 2019, list the total orders, gross sales, discounts, returns, net sales, shipping and total sales for each month. We can see this from looking at the first and last fie entries of the data.","58728596":"This notebook will be looking at a data set of online business sales and visulizing key parts of the data to gain further insight into the patterns of these sales. There are two csv files provided that we can use. The first one contains information about the sales of the product types, like the net quantity, gross sale, discount, returns and the net sales. The second contains information about the month, year, total orders, gross sale, net sales, and shipping. We have two files that provide different kinds of information that can be valuable to providing insights about this online business's sales. The visualizations will be in two different sections, product types insights and sales insight. \n\nTo answer the task set by the post, I will also have a section over the projections for Oct- Dec of 2020 using data from previous years. I will try to provide an output of a list of sales by product type. From this, we would be able to see demand by each product type and suggest discounts for the near future.","6a5a3d64":"First, load the notebook libraries. I chose seaborn and matplotlib specifically to create visualizations for analysis. ","182c1076":"# Introduction","f54908f1":"We can consider the discounts of each product type. The product types that get the most discounts on are (1) furniture, (2) art & sculpture, and (3) baskets. The least discounts for product types are (1) soapstone, (2) kids and (3) fair trade gifts. ","90408b78":"First, lets look at the net sales across the three years, or 36 months. ","083180c1":"This section will focus on the sales using the data from the second csv file. ","e867009d":"# Product Insights","12eb4598":"# Loading the Sales Data","943a7f73":"We see that net sales of the first 24 monthes are consistently flucuating between 5,000 and 10,000. The monthes 25 to 32 perform the same until month 33 where there is a large spike to the end of 2019.","2c48aaa0":"The total quantity sold of each product type."}}