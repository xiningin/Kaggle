{"cell_type":{"fb593a45":"code","8d6709ab":"code","6ad80737":"code","decd83be":"code","41235b2d":"code","5f2ee888":"code","83f14faa":"code","7c39ed50":"code","3e3eb7b8":"code","daabdc1f":"code","baf9abb2":"code","e9715ce0":"code","333e96d5":"code","6643c5de":"code","6b323da6":"code","6c7b8b10":"code","28bc1d3b":"code","c69f89c8":"code","31dff0e3":"code","99e8d271":"code","c2f14b3f":"code","bd2ad852":"code","f37a48e4":"code","0df40eeb":"code","5b7a4bea":"code","8c4b70ae":"code","efa0fe3e":"code","4cb7fc75":"code","7ce5eb0b":"markdown","f6bc0659":"markdown","298b18ac":"markdown","fa6b7c3c":"markdown","283779f0":"markdown","b43f61ab":"markdown","cb7ad070":"markdown","cd3638c7":"markdown","674ac367":"markdown","11079410":"markdown","d6da1097":"markdown","2362d2fb":"markdown","fc02849b":"markdown","7e51bbf5":"markdown","08068100":"markdown","32e4d4e9":"markdown","fe02d541":"markdown","9e5c5c8c":"markdown","728e72b2":"markdown","ecf6ca8c":"markdown","5abe34f4":"markdown"},"source":{"fb593a45":"# Importing libraries needed\nfrom sklearn.preprocessing import StandardScaler\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline \nimport seaborn as sns\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')","8d6709ab":"df = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv') # Read dataset file\ndf.head(5) # Get first 5 rows of the dataset","6ad80737":"df.info() # Get dataset info","decd83be":"# Renaming columns\ndf.rename(index=str, columns={'Annual Income (k$)': 'Income',\n                              'Spending Score (1-100)': 'Score'}, inplace=True)\ndf.head()","41235b2d":"df.shape # Get the dataset dimension","5f2ee888":"df.columns # Get column indexes","83f14faa":"# Check if there are any missing values\ndf.isnull().any().any()","7c39ed50":"# Get the descriptive statistics of the dataset\ndf.describe(include='all')","3e3eb7b8":"# Create distribution plot for Annual Income, Customer's Age, and Spending Score\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nplt.rcParams['figure.figsize'] = (20, 5)\n\n# Distribution plot for annual income\nplt.subplot(1, 3, 1)\nsns.set(style = 'whitegrid')\nsns.distplot(df['Income'])\nplt.title('Distribution of Annual Income', fontsize = 16)\nplt.xlabel('Range of Annual Income')\nplt.ylabel('Count')\n\n# Distribution plot for customer's age\nplt.subplot(1, 3, 2)\nsns.set(style = 'whitegrid')\nsns.distplot(df['Age'], color = 'red')\nplt.title('Distribution of Customer''s Age', fontsize = 16)\nplt.xlabel('Range of Age')\nplt.ylabel('Count')\nplt.show()\n\nplt.subplot (1, 3, 3)\nsns.set(style = 'whitegrid')\nsns.distplot(df['Score'], color = 'orange')\nplt.title('Distribution of Spending Score', fontsize = 16)\nplt.xlabel('Range of Age')\nplt.ylabel('Count')\nplt.show()","daabdc1f":"# Visualization on number of customer based on gender\n\nplt.figure(1 , figsize = (15 , 5))\nsns.countplot(y = 'Gender' , data = df)\nplt.show()","baf9abb2":"# Visualization on customers gender's percentage\n\nlabels = ['Female', 'Male']\nsize = df['Gender'].value_counts()\ncolors = ['lightgreen', 'orange']\nexplode = [0, 0.1]\n\n# Plot pie chart\nplt.rcParams['figure.figsize'] = (9, 9)\nplt.pie(size, colors = colors, explode = explode, labels = labels, shadow = True, autopct = '%.2f%%')\nplt.title('Gender', fontsize = 20)\nplt.axis('off')\nplt.legend()\nplt.show()","e9715ce0":"# Customer's distribution based on age\nplt.figure(figsize=(20,5))\nsns.countplot(df['Age'])\nplt.xticks(rotation=90)\nplt.title('Age Distribution')","333e96d5":"# Spending score comparison based on gender\nsns.boxplot(df['Gender'],df['Score'])\nplt.title('Spending Score Comparison Based on Gender')","6643c5de":"# Customer's distribution based on annual income\n\nplt.figure(figsize=(25,5))\nsns.countplot(df['Income'])\nplt.title('Annual Income Distribution')","6b323da6":"# Heatmap correlation\n\nplt.figure(figsize=(10,10))\nsns.heatmap(df.corr(),linewidths=.1,cmap=\"YlGnBu\", annot=True)\nplt.yticks(rotation=0);\nplt.title('Heatmap Correlation on Mall Customer Segmentation')","6c7b8b10":"# Pair plot visualization to see if genders has direct relation on customer segmentation\nX = df.drop(['CustomerID', 'Gender'], axis=1)\nsns.pairplot(df.drop('CustomerID', axis=1), hue='Gender', aspect=1.5)\nplt.title('Pair Plot Visualization on Gender')\nplt.show()","28bc1d3b":"#Visualization of Spending score over income\n\nplt.bar(df['Income'],df['Score'])\nplt.title('Spending Score Over Income')\nplt.xlabel('Income')\nplt.ylabel('Score')","c69f89c8":"# Show the data that we are going to cluster\n\nplt.scatter(df['Income'],df['Score'])\nplt.title('Spending Score over Income')\nplt.xlabel('Income')\nplt.ylabel('Spend Score')","31dff0e3":"# Defining elbow point to determine K value\nfrom sklearn.cluster import KMeans\n\n# Inertia list\nclusters = []\nfor i in range(1,11):\n  km = KMeans(n_clusters=i).fit(X)\n  clusters.append(km.inertia_)\n\n# Plot inertia\nfig, ax = plt.subplots(figsize=(8, 4))\nsns.lineplot(x=list(range(1, 11)), y=clusters, ax=ax, marker=\".\", markersize=10)\nax.set_title('Elbow Method')\nax.set_xlabel('Clusters')\nax.set_ylabel('Inertia')","99e8d271":"# Defining Elbow Point\n\nfig, ax = plt.subplots(figsize=(8, 4))\nsns.lineplot(x=list(range(1, 11)), y=clusters, ax=ax, marker=\".\", markersize=10)\nax.set_title('Elbow Method')\nax.set_xlabel('Clusters')\nax.set_ylabel('Inertia')\nax.annotate('Optimal Elbow Point', xy=(5, 80000), xytext=(5, 150000), xycoords='data',          \n             arrowprops=dict(arrowstyle='->', connectionstyle='arc3', color='blue', lw=2))\n\nplt.show()","c2f14b3f":"# Making K-Means object\nkm5 = KMeans(n_clusters=5).fit(X)\n\n# Add column labels on dataset\nX['Labels'] = km5.labels_\n\n# Plot 5-clusters K-Means\nplt.figure(figsize=(8,4))\nsns.scatterplot(X['Income'], X['Score'], hue=X['Labels'],\n                palette=sns.color_palette('hls', 5))\nplt.title('5-Clusters K-Means')\nplt.show()","bd2ad852":"# Silhouette Coefficient of K-Means Model\n\nfrom sklearn import metrics\nround(metrics.silhouette_score(X, X['Labels']), 2)","f37a48e4":"# Determine MinPts and Epsilon\n\ndata_c = pd.DataFrame({'Age': df['Age'], 'Income': df['Income'], 'Score': df['Score']})\nfrom sklearn.neighbors import NearestNeighbors\nneighbors = NearestNeighbors(n_neighbors=6) #n_neighbors is the MinPts\nneighbors_fit = neighbors.fit(data_c)\ndistances, indices = neighbors_fit.kneighbors(data_c)\ndistances = np.sort(distances, axis=0)\ndistances = distances[:,1]\nplt.plot(distances)\n","0df40eeb":"# Create DBSCAN Object\n\nfrom sklearn.cluster import DBSCAN \n\ndb = DBSCAN(eps=11, min_samples=6).fit(X)\n\nX['Labels'] = db.labels_\nplt.figure(figsize=(12, 4))\nsns.scatterplot(X['Income'], X['Score'], hue=X['Labels'], \n                palette=sns.color_palette('hls', np.unique(db.labels_).shape[0]))\nplt.title('DBSCAN with epsilon 11, min samples 6')\nplt.show()","5b7a4bea":"# Silhouette Coefficient of DBSCAN Model\n\nround(metrics.silhouette_score(X, X['Labels']), 2)","8c4b70ae":"# Create Mean Shift Object\n\nfrom sklearn.cluster import MeanShift, estimate_bandwidth\n\n# The following bandwidth can be automatically detected using\nbandwidth = estimate_bandwidth(X, quantile=0.1)\nms = MeanShift(bandwidth).fit(X)\n\nX['Labels'] = ms.labels_\nplt.figure(figsize=(12, 8))\nsns.scatterplot(X['Income'], X['Score'], hue=X['Labels'], \n                palette=sns.color_palette('hls', np.unique(ms.labels_).shape[0]))\nplt.plot()\nplt.title('MeanShift')\nplt.show()","efa0fe3e":"# Silhouette Coefficient of Mean Shift Model\n\nround(metrics.silhouette_score(X, X['Labels']), 2)","4cb7fc75":"# Plot swarmplot to analyze clusters\nX['Labels'] = ms.labels_\n\nfig = plt.figure(figsize=(20,8))\nax = fig.add_subplot(121)\nsns.swarmplot(x='Labels', y='Income', data=X, ax=ax)\nax.set_title('Labels According to Annual Income')\n\nax = fig.add_subplot(122)\nsns.swarmplot(x='Labels', y='Score', data=X, ax=ax)\nax.set_title('Labels According to Scoring')\n\nplt.show()","7ce5eb0b":"In Mean Shift Clustering, we need to determine a bandwidth value. The bandwidth is the distance\/size scale of the kernel function, i.e. what the size of the \u201cwindow\u201d is across which you calculate the mean. This parameter can be set manually, but can be estimated using the provided `estimate_bandwidth` function, which is called if the bandwidth is not set.\n\nUnlike the popular K-Means cluster algorithm, mean-shift does not require specifying the number of clusters in advance. The number of clusters is determined by the algorithm with respect to the data.","f6bc0659":"Since the dataset doesn't contain labeling, I can't perform clustering accuracy measurement using Rand Index or cross validation. However, I can measure the quality of our clustering models using silhouette coefficient. The best value is 1 and the worst value is -1. Values near 0 indicate overlapping clusters. Negative values generally indicate that a sample has been assigned to the wrong cluster, as a different cluster is more similar.\n\nMy K-Means model has Silhouette Coefficient of 0.44, DBSCAN model has value of 0.18, and Mean Shift model has 0.45. We can see that our Mean Shift model has the highest coefficient value but not really significant if compared to our K-Means model.","298b18ac":"This diagram shows the average spending score of female and male. We can observe that the average spending score of female is greater than male, they have higher spending score than male, and their least spending core is greater than male's.","fa6b7c3c":"Peoples of age between 25 to 40 are mostly visiting mall than other age groups","283779f0":"# 1. Exploratory Data Analysis","b43f61ab":"As we can see DBSCAN doesn't perform very well because the density in the data is not that thick. Label -1 means outliers so it will appear most as outliers. We may have performed better if we had had a bigger data.","cb7ad070":"From the manual observation, we can determine that this data can be clustered into 5 clusters.","cd3638c7":"Peoples of income in the range of 20k-40k and 70k-100k have the highest spend score","674ac367":"# 4. Clustering Model: Mean Shift Clustering","11079410":"Taken from Mean Shift clustering results, we can analyze our 5 clusters in detail now:\n\n- `Label 0` is mid income and mid spending\n- `Label 1` is high income and high spending\n- `Label 2` is high income and low spending\n- `Label 3` is low income and high spending\n- `Label 4` is low income and low spending","d6da1097":"To measure the quality of my clustering model, we are using Silhouette Coefficient.","2362d2fb":"# 2. Clustering Model: K-Means Clustering","fc02849b":"From this graph the epsilon value is determined around 11.0. In the next step, we empirically determine MinPts until reach n of labels desired","7e51bbf5":"Peoples of salary 54k and 78k are the mostly visited persons in mall.","08068100":"# 6. Conclusion","32e4d4e9":"# 3. Clustering Model: DBSCAN Clustering","fe02d541":"As we can see, the optimal Elbow Point is 5. So I will assign K = 5.","9e5c5c8c":"# 5. Evaluation on Clustering Models","728e72b2":"For K-Means Clustering Algorithm, we have to determine the K value that represents the number of clusters. To find the optimal K value, I use Elbow Method to determine it.","ecf6ca8c":"# Mall Customer Segmentation Analysis\n\nIn this notebook, I am trying to cluster the customers based on their annual income and spending score and make an analysis out of it.","5abe34f4":"DBSCAN Clustering is quite different from K-Means Clustering. For DBSCAN Clustering, we have to determine the value of minimum points\/samples and Epsilon. Minimum points is the fewest number of points required to form a cluster, while epsilon is the maximum distance two points can be from one another while still belonging to the same cluster."}}