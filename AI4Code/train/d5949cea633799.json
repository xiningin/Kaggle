{"cell_type":{"cc73b251":"code","acfe9ea3":"code","38888250":"code","907b6840":"code","2ecbc74e":"code","2325bac1":"code","d512d3a2":"code","89147a85":"code","14db6e02":"code","51578d8d":"code","34741948":"code","8bde89a3":"code","cda12186":"code","38b6dfa9":"code","555ded29":"code","3f225505":"code","9ef78763":"code","654d5147":"code","d3de5fbb":"code","e5dc5e4a":"code","95ccb815":"code","52403a80":"markdown"},"source":{"cc73b251":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","acfe9ea3":"\u52a0code \u548c markdown\n\u52a0link markdown\u4ecb\u7d39","38888250":"#\u57fa\u672c\u8b8a\u6578\u985e\u578b\n\na = \"Hello World\"\nc = 0\nb = 123\nd = 3\/2\n\n#\u67e5\u770b\u8cc7\u6599\u578b\u5225\ntype(a)\n\n#\u76f4\u63a5\u5370\u51fa\u5167\u5bb9\nprint(a,type(a))\nprint(b,type(b))\nprint(bool(c),type(bool(c) ))\nprint(d,type(d))\n","907b6840":"#\u503c\u7d44tuple : \u5132\u5b58\u5e8f\u5217\u5f0f\u8cc7\u6599\uff0c\u53ef\u653e\u4efb\u610f\u7269\u4ef6\n#\u4e32\u5217list  : \u5132\u5b58\u5e8f\u5217\u5f0f\u8cc7\u6599\uff0c\u53ef\u653e\u4efb\u610f\u7269\u4ef6\n#\u4f46tuple \u4e0d\u53ef\u4ee5\u6539\u503c immutable\n\ntup = tuple([a,[1,2,3],\"\u4eba\u5de5\u667a\u6167\"])\nprint(tup)\nprint(type(tup))","2ecbc74e":"tup[1].append(4)\nprint(tup)\nprint(type(tup))","2325bac1":"tup[0] = \"b\"\n#'tuple' object does not support item assignment","d512d3a2":"#list \u53ef\u4ee5\u6539\u503c\nai_list = [a,[1,2,3],\"\u4eba\u5de5\u667a\u6167\"]\nai_list[2]=\"\u5de5\u4eba\u667a\u6167\" \nprint(ai_list)\nprint(type(ai_list))","89147a85":"ml = \"\u6a5f\u5668\u5b78\u7fd2\"\ndnn = \"\u6df1\u5ea6\u5b78\u7fd2\"\nschool = \"\u653f\u5927\"\n\n# \u5efa\u7acb dictionary\nmy_ai = {\n    \"machine_learning\": ml,\n    \"deep_learning\": dnn,\n    \"soobi_school\": school\n}\n\n# \u5229\u7528\u9375\u503c\u9078\u64c7\u5143\u7d20\nprint(my_ai[\"machine_learning\"])\nprint(my_ai[\"deep_learning\"])\nprint(my_ai[\"soobi_school\"])\nprint(type(my_ai))","14db6e02":"tup = (\"\u6a5f\u5668\u5b78\u7fd2\",\"\u6df1\u5ea6\u5b78\u7fd2\",\"\u653f\u5927\")\na,b,c = tup\n\nprint(a)\nprint(b)\nprint(c)\nprint(type(tup))","51578d8d":"import numpy as np # \u5f15\u7528\u5957\u4ef6\u4e26\u7e2e\u5beb\u70ba np\nimport math\n\nscore = np.array([56, 38, 51, 41, 44, 46]) \nfinal_score = score\nprint(score) \nfor i in range(6):\n    final_score[i] = math.sqrt(score[i])*10\nprint(final_score)\nprint(type(final_score))","34741948":"import pandas as pd # \u5f15\u7528\u5957\u4ef6\u4e26\u7e2e\u5beb\u70ba pd\n\nsubject = [\"\u6578\u5b78\", \"\u82f1\u6587\", \"\u570b\u6587\", \"\u6b77\u53f2\", \"\u5730\u7406\", \"\u79d1\u5b78\"]\npepper = [100, 99, 98, 97, 96, 95]\n\nscore_dict = {\"subject\": subject,\n                \"pepper\": pepper\n                }\n\npepper_df = pd.DataFrame(score_dict)\n\nprint(pepper_df) \nprint(type(pepper_df)) ","8bde89a3":"import matplotlib.pyplot as plt\nsubject_num = [1,2,3,4,5,6]\npepper = [100, 99, 98, 97, 96, 95]\nplt.plot(subject_num,pepper)\nplt.show()","cda12186":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf = pd.read_csv(\"\/kaggle\/input\/class-soobi\/class_soobi.csv\")\nprint(pd.DataFrame(df))","38b6dfa9":"df.info()","555ded29":"from collections import Counter\nCounter(df['Science'])","3f225505":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\ndf.hist(figsize=(10,10), color='green')\nplt.show()","9ef78763":"df.shape","654d5147":"df['math'][0:6]","d3de5fbb":"np_df= df.to_numpy()\nnp_df","e5dc5e4a":"np_df.size","95ccb815":"final_df = np_df\nfor i in range(6):\n    for j in range(6):\n        final_df[i][j+1] =  int(math.sqrt(np_df[i][j+1])*10)\nprint(final_df)        ","52403a80":"markdowm\u7684\u64cd\u4f5c"}}