{"cell_type":{"7acedfa2":"code","6c561ee5":"code","28511835":"code","e6786250":"code","db3b26a5":"code","321f3d60":"code","d947deab":"code","92f34c8e":"code","19b6971c":"code","95930279":"code","a6ecdf16":"code","6bd90fa5":"code","6ca501be":"code","d8054163":"markdown"},"source":{"7acedfa2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport pandas as pd\nimport numpy as np\nfrom sklearn.cluster import KMeans\nfrom sklearn.model_selection import train_test_split\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\ndata=pd.read_csv(\"..\/input\/train.csv\")\ndata.head()\n\n# Any results you write to the current directory are saved as output.","6c561ee5":"image=data.iloc[:,1:]\nlabel=data.iloc[:,:1]\n","28511835":"kmeans= KMeans(n_clusters=10)\nkmeans.fit(image)\nla=kmeans.labels_","e6786250":"di={}\nfor j in range(10):\n    d={}\n    for i in range(len(label)):\n        if kmeans.labels_[i]==j:\n            d[label.label[i]]=d.get(label.label[i],0)+1\n    di[j]=next(iter(d))\ndi","db3b26a5":"# checking the accuracy\nc=0\nfor i in range(len(label)):\n    if di[kmeans.labels_[i]]==label.label[i]:\n        c+=1\nprint(\"accuracy =\",c\/len(label)*100,\"%\")","321f3d60":"di={}\nfor j in range(10):\n    d={}\n    for i in range(len(label)):\n        if kmeans.labels_[i]==j:\n            d[label.label[i]]=d.get(label.label[i],0)+1\n    di[j]=next(iter(d))\ndi","d947deab":"image=data.iloc[:,1:]\nlabel=data.iloc[:,:1]\nfrom sklearn.neighbors import KNeighborsClassifier as kn\nknn= kn(n_neighbors=10)\n","92f34c8e":"image.shape","19b6971c":"image=data.iloc[:,1:]\nlabel=data.iloc[:,:1]\nfrom sklearn.neighbors import KNeighborsClassifier as kn\nknn= kn(n_neighbors=10)\nx_train,x_test,y_train,y_test = train_test_split(image,label,test_size = 0.2,random_state = 100) \nknn.fit(x_train,y_train)\n\n","95930279":"predic=knn.predict(x_test)\n# metrics.accuracy_score(y_test,predic)","a6ecdf16":"from sklearn import metrics\nmetrics.accuracy_score(y_test,predic)","6bd90fa5":"df=pd.read_csv(\"..\/input\/test.csv\")\ndf.head()","6ca501be":"predic=knn.predict(df)","d8054163":"using knn to classify the images****"}}