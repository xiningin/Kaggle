{"cell_type":{"90aaa115":"code","8402fe5c":"code","a95b1055":"code","2871ca9e":"code","f06a433a":"code","31f3fad3":"code","8b8e7c07":"markdown","825b393c":"markdown","78bfbd42":"markdown","cc2edf0c":"markdown","1b621b90":"markdown","2caf834a":"markdown","d0bf477d":"markdown","c58647b9":"markdown","7145e544":"markdown"},"source":{"90aaa115":"import numpy as np\nimport pandas as pd\nfrom kaggle.competitions import twosigmanews","8402fe5c":"def sigma_score(val_y, pred_y, time, univ):\n\n    pred_y = 2.0 * np.clip(pred_y,0,1) - 1.0\n    \n    x_t = pd.DataFrame(data={'extra_time': time, 'val': pred_y * val_y * univ})\n    x_t_sum = x_t.groupby(by='extra_time').sum()\n    if x_t_sum.val.std() == 0:\n        score = 0\n    else:\n        score = float(x_t_sum.val.mean() \/ x_t_sum.val.std())\n    return score","a95b1055":"env = twosigmanews.make_env()\n\n(market_train_df, news_train_df) = env.get_training_data()\nmarket_train_df[\"newTarget\"] = (market_train_df[\"returnsOpenNextMktres10\"] > 0).astype(int)\nscore = sigma_score(market_train_df[\"returnsOpenNextMktres10\"].values,market_train_df[\"newTarget\"].values, market_train_df[\"time\"].factorize()[0],market_train_df[\"universe\"].values )\nprint(score)","2871ca9e":"val_y = [0.1, 1.5, -5.6, 7.8, -3.3, -0.6]\npred_y = np.random.rand(len(val_y))\ntime = [1,1,2,2,3,3]\nuniv = [1,1,1,1,1,1]\nscore = sigma_score(val_y, pred_y, time, univ)\nprint(score)","f06a433a":"pred_y = [0,0,0,1,0,0]\nscore = sigma_score(val_y, pred_y, time, univ)\nprint(score)","31f3fad3":"pred_y = [0.1,0.1,-0.1,0.1,-0.1,-0.1]\nscore = sigma_score(val_y, pred_y, time, univ)\nprint(score)","8b8e7c07":"## Maximum possible training score","825b393c":"## Second test\nPredict perfectly the greatest return:","78bfbd42":"### Conclusions\nPredicting all correctly but with a small confident value seems to be a really bad scenario.","cc2edf0c":"## Proposed metric function","1b621b90":"## Third test\nPredict all correctly but with small confident values:","2caf834a":"### Conclusions\nPredicting perfectly the greatest return value seems to be really important!","d0bf477d":"# Final conclusions\nFrom this simple tests, it seems that predicting perfectly the greatest return value is more important that predicting all correctly but with a small confident value!","c58647b9":"# Introduction\nThis kernel is a test to extract some simple but interesting conclusions about the metric function of this competition.","7145e544":"## First test\nRandom predictions"}}