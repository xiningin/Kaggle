{"cell_type":{"ac6e6fd0":"code","15377874":"code","9833a3e4":"code","c4b2f44a":"code","1d433435":"code","9017866c":"code","afa1569b":"code","8474920a":"code","91086cf8":"code","2faa1b89":"code","1edd325a":"code","db6abaf6":"code","fd381cce":"code","55052d14":"code","06e2b633":"code","0f4109e4":"code","f20261de":"code","c08ffe5e":"code","dc5e1420":"code","2157eb65":"code","505a6355":"markdown","62eeedbb":"markdown","54b9b01f":"markdown"},"source":{"ac6e6fd0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","15377874":"data = pd.read_csv(\"..\/input\/los-angeles-1992-riot-deaths-from-la-times\/la-riots-deaths.csv\")","9833a3e4":"## import the seaborn package \nimport seaborn as sns\n## import the matplotlib package \nfrom matplotlib import pyplot as plt ","c4b2f44a":"## check the data\ndata.head()","1d433435":"## check info\ndata.info()","9017866c":"## check for missing values \ndata.isnull().sum()","afa1569b":"## handling missing values \ndata[\"Solved*\"].fillna((\"Unsolved\"), inplace = True)","8474920a":"## handling missing values \ndata[\"lat\"].fillna((data[\"lat\"].mean()), inplace = True )\ndata[\"lon\"].fillna((data[\"lon\"].mean()), inplace = True )","91086cf8":"## drop the URL \ndata.drop(\"URL\", axis = 1 , inplace = True)","2faa1b89":"data.isnull().sum()","1edd325a":"data.shape","db6abaf6":"data.columns","fd381cce":"## lets check the dataframe\ndata.head()","55052d14":"sns.countplot(data[\"Gender\"])","06e2b633":"data[\"Gender\"].value_counts()","0f4109e4":"## plotting the race by gender \nsns.countplot(data[\"Race\"],hue=data[\"Gender\"])","f20261de":"## status count\ndata[\"status\"].value_counts().plot(kind = \"bar\")","c08ffe5e":"data[\"status\"].value_counts()","dc5e1420":"## race count\ndata[\"Race\"].value_counts().plot(kind = \"bar\")","2157eb65":"data[\"Race\"].value_counts()","505a6355":"**We filled the Nan values with Unsolved because most of it are unsolved and we cant assumed the Nan value to be Solved**","62eeedbb":"**A lot of males died more than females **","54b9b01f":"**most people were murdered in cold blood, making homicide the highest on the chart **"}}