{"cell_type":{"3c8049e2":"code","84ada668":"code","5cd8d5b8":"code","f032dbb4":"code","81bbfe01":"code","47fee53b":"code","4962d958":"code","5e4a9c92":"code","18720c9a":"code","ebf05e2b":"code","ab055e34":"code","56b1c0ca":"code","e6a1e09d":"code","100db956":"code","16be3ec6":"markdown","49d076ec":"markdown","9cb6cd00":"markdown","50fe1335":"markdown","9348bf19":"markdown"},"source":{"3c8049e2":"# Import libraries and data\nimport numpy as np\nimport pandas as pd\nimport scipy\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('..\/input\/ab-testing\/ab_data.csv')\n\ndf.head(20)","84ada668":"# Checking to see if there are any users in control that saw new page and users in treatment that saw old page\ndf.groupby(['group','landing_page']).count()","5cd8d5b8":"# There seems to bee a mistake in inputs where some of the control group saw the new page and some of the treatment group saw the old page.\n# Since we're not sure which way to switch it to, we're going to remove it","f032dbb4":"# Removing control\/new_page and treatment\/old_page\ndf_cleaned = df.loc[(df['group'] == 'control') & (df['landing_page'] == 'old_page') | (df['group'] == 'treatment') & (df['landing_page'] == 'new_page') ]","81bbfe01":"df_cleaned.groupby(['group','landing_page']).count()","47fee53b":"# Checking for duplicate values\ndf_cleaned['user_id'].duplicated().sum()","4962d958":"# Finding user_id for duplicate value\ndf_cleaned[df_cleaned.duplicated(['user_id'],keep=False)]['user_id']","5e4a9c92":"df[df['user_id'] == 773192]","18720c9a":"df_cleaned = df.drop_duplicates(subset='user_id', keep=\"first\")\ndf_cleaned['user_id'].duplicated().sum()","ebf05e2b":"groups = df_cleaned.groupby(['group','landing_page','converted']).size()\ngroups.plot.bar()","ab055e34":"df['landing_page'].value_counts().plot.pie()","56b1c0ca":"### Re-arrrange data into 2x2 for Chi-Squared\n\n# 1) Split groups into two separate DataFrames\na = df[df['group'] == 'control']\nb = df[df['group'] == 'treatment']\n\n# 2) A-click, A-noclick, B-click, B-noclick\na_click = a.converted.sum()\na_noclick = a.converted.size - b.converted.sum()\nb_click = b.converted.sum()\nb_noclick = b.converted.size - b.converted.sum()\n\n# 3) Create np array\nT = np.array([[a_click, a_noclick], [b_click, b_noclick]])","e6a1e09d":"import scipy\nfrom scipy import stats\n\nprint(scipy.stats.chi2_contingency(T,correction=False)[1])","100db956":"a_CTR = a_click \/ (a_click + a_noclick)\nb_CTR = b_click \/ (b_click + b_noclick)\nprint(a_CTR, b_CTR)","16be3ec6":"# Data Wrangling","49d076ec":"# Chi-Squared Test","9cb6cd00":"# Setup","50fe1335":"# Data Prep","9348bf19":"# Exploratory Data Analysis"}}