{"cell_type":{"e798bede":"code","0534ec7a":"code","7ec81ff8":"code","c5310a49":"code","2df442d9":"code","359d08ff":"code","bc1aa761":"code","0232383c":"code","0fc1969b":"code","1ae6894d":"code","e3769e03":"code","93f2b515":"code","f14ebf80":"code","a030e33c":"code","078a0194":"code","c549c461":"code","25724c38":"code","9dfe100e":"code","c42786cf":"code","17d6a464":"code","346ffe31":"code","2b84b45a":"code","6fd209d3":"code","b0db6d61":"code","822bd89f":"code","31bac26f":"code","57c355ca":"code","fb55558b":"code","74c06655":"code","c5baaa53":"code","d91f69c3":"code","eff05b87":"code","7d34c451":"code","c36b2a58":"code","8e963db8":"code","7fa712aa":"code","58297e64":"code","7f120db4":"code","21fd04fb":"markdown","63ec0035":"markdown","fadec1e1":"markdown","fa98b40e":"markdown","4cb09558":"markdown","4c5f5cc2":"markdown","a9a7b802":"markdown","ac1e4c60":"markdown","84fb7a2d":"markdown","d0d9aaa3":"markdown","6eb79929":"markdown","a8343cc4":"markdown"},"source":{"e798bede":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n%matplotlib inline\nimport matplotlib.pyplot as plt\nplt.rc('figure', figsize = (15,8))\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0534ec7a":"data = pd.read_csv('\/kaggle\/input\/brasilian-houses-to-rent\/houses_to_rent_v2.csv')","7ec81ff8":"data.head()","c5310a49":"# Yes our data has 10692 lines and 13 columns.\ndata.shape","2df442d9":"# checking types of data, is imporant to check the data.head() and then look at this infos\n# we see that floor is an object\ndata.info()","359d08ff":"# counting how many null values has in data\n# we see that floor is an object\ndata.isna().sum()","bc1aa761":"# first checking unique values from floor\n# we found that we have '-' values and an outlier '301'\ndata['floor'].unique()","0232383c":"# so lets see how many is the distribuition for '-' and '301'\n# we see that '-' has a lot of values,  \ndata['floor'].value_counts()","0fc1969b":"# we will transform '-' and '301' to median, but first we have to replace to 0 both of them and them transform to integers\ndata['floor_num'] = data['floor'].replace(['-','301'], 0)\ndata['floor_num'].value_counts()","1ae6894d":"# transforming an object to integer, for this we first convert to str and them to int\ndata['floor_num'] = data['floor_num'].astype(str).astype(int)","e3769e03":"# now we have a good floor type now, as integer.\ndata.info()","93f2b515":"data['floor_num'].value_counts()","f14ebf80":"# we have to replace the value '0' for the median\nmedian_floor = data['floor_num'].median()\ndata['floor_num'] = data['floor_num'].replace(0, median_floor)\ndata['floor_num'].value_counts()","a030e33c":"# checking summary statistics\ndata.describe()","078a0194":"# lets explore the categorical data\n# floor doesn't count\ncategorical = [var for var in data.columns if data[var].dtype=='O']\n\nprint('There are {} categorical variables\\n'.format(len(categorical)))\n\nprint('The categorical variables are :\\n\\n', categorical)\n","c549c461":"# checking unique variables from all cathegorical variables\ndata['animal'].unique(), data['furniture'].unique(), data['city'].unique()","25724c38":"# so we have 3 categorical data, we can explore these data here\n# view the frequency \nfor var in categorical:\n    print(data[var].value_counts()\/np.float(len(data)))","9dfe100e":"# lets plot the data and see how it goe\nax = data['city'].value_counts().plot(kind='bar',\n                                    figsize=(10,8))\nax.set_xlabel('Cities', fontsize = 20)\nax.set_ylabel('Count', fontsize = 20)\nax.set_title('Count of cities', fontsize = 25)","c42786cf":"ax = data['animal'].value_counts().plot(kind = 'bar',\n                                       figsize = (10,8),\n                                       color = 'brown')\nax.set_title('Accept or not animals in the $House$', fontsize = 22)\nax.set_xlabel('Y or N', fontsize = 15)\nax.set_ylabel('Quantitiy of houses' , fontsize = 15)\n","17d6a464":"ax = data['furniture'].value_counts().plot(kind = 'bar',\n                                       figsize = (10,8),\n                                       color = 'green')\nax.set_title('Houses with furnitire or not', fontsize = 22)\nax.set_xlabel('Y or N', fontsize = 15)\nax.set_ylabel('Quantitiy of houses' , fontsize = 15)\n\n","346ffe31":"# now we are going to explore numerical data.\nnumerical = [var for var in data.columns if data[var].dtype!='O']\n\nprint('There are {} numerical variables\\n'.format(len(numerical)))\n\nprint('The numerical variables are :', numerical)","2b84b45a":"data.describe()\n         ","6fd209d3":"# really a 1120000 rent ? who pays that ?\n(data['total (R$)'].describe()).round(2)","b0db6d61":"# boxplot\n# we can look that there are a lot of outliers in this data\n# probably the worst boxplot EVER!\nsns.boxplot(x = 'city', y ='total (R$)', data = data)","822bd89f":"# let's remove the outliers just to make sure that we have GOOD data for the analysis\ncity_group = data.groupby('city')['total (R$)']","31bac26f":"# checking if its a series... because we will use that later\ntype(city_group)","57c355ca":"# so lets remove the outliers by this method\nQ1 = city_group.quantile(.25)\nQ3 = city_group.quantile(.75)\nIIQ = Q3 - Q1  #interquartile range\nlower_limit = Q1 - 1.5* IIQ\nupper_limit = Q3 + 1.5* IIQ","fb55558b":"# checking if its ok\nprint('Q1 Result is ',  Q1)","74c06655":"print('Q3 Result is ',  Q3)","c5baaa53":"## seems to be working these values..\n# now lets remove the outliers by group city\n# creating a new dataframe with only the values that they are between lower limit and upper limit\ndata_new = pd.DataFrame()\n\nfor city in city_group.groups.keys():\n        is_city = data['city'] == city\n        accept_limit = (data['total (R$)'] >= lower_limit[city]) & (data['total (R$)'] <= upper_limit[city])\n        select = is_city & accept_limit\n        data_select = data[select]\n        data_new = pd.concat([data_new, data_select])","d91f69c3":"data_new.head()","eff05b87":"sns.boxplot(x = 'city', y ='total (R$)', data = data)","7d34c451":"sns.boxplot(x = 'city', y ='total (R$)', data = data_new)","c36b2a58":"# now we are going to explore numerical data.\n# correlation plot\nfig = plt.figure(figsize=(10,10))\ncorr = data_new.corr()\nsns.heatmap(corr, cmap = 'Wistia', annot= True);","8e963db8":"# i will make a scatter plot for each variable that has a good correlation with total (R$)\narea = plt.figure()","7fa712aa":"g1 = area.add_subplot(2,2,1)\ng2 = area.add_subplot(2,2,2)\ng3 = area.add_subplot(2,2,3)\ng4 = area.add_subplot(2,2,4)\n","58297e64":"## Lets check scatter plot total (R$) with fire insurance, property tax(R$), rent amount (R$),bathroom\ng1.scatter(data_new['fire insurance (R$)'], data_new['total (R$)'])\ng1.set_title('Fire insurance x total')\n\n\ng2.scatter(data_new['property tax (R$)'], data_new['total (R$)'])\ng2.set_title('property x total')\ng3.scatter(data_new['rent amount (R$)'], data_new['total (R$)'])\ng3.set_title('rent R$ x total')\ng4.scatter(data_new['bathroom'], data_new['total (R$)'])\ng4.set_title('bathrooms x total')","7f120db4":"area","21fd04fb":"# **Removing outliers by using lower limit and upper limit with interquartile range!**","63ec0035":"Now let's take a closer look into our numerical variables!","fadec1e1":"Now that we finished cleaning the data. We observe that S\u00e3o paulo has a lot dispersion from their values, in addition their values cost higher than other cities We can assume that because its median its a little higher from other cities.\nBelo Horizonte its really nice to see the because it's a city that is growing up really fast, and i would say that the second city with most companies and startups is Belo Horizonte behind S\u00e3o Paulo. Not really surprising at all.","fa98b40e":"*Importing Data*","4cb09558":"# * **Let's compare the two disctincs boxplots**","4c5f5cc2":"Well thats obvious, if we pay more taxes logically we pay more in total amount. I don't really know that it is a good observation, maybe try to put different variables like rooms, etc\n\nfor now i will end and probably in the future i will put a regression analysis here.\n","a9a7b802":"Now lets clean the floor object because it suppose to be a integer number or float... but instead is a object. We must adjust","ac1e4c60":"Get to know a little bit more about our dataframe","84fb7a2d":"After the cleaning let's start taking a closer look into our data...","d0d9aaa3":"Not a nice view from our data.. so let's plot!","6eb79929":"# HUGE DIFFERENCE","a8343cc4":"Checking outliers... if we look into our describe we found the top total amount really weird... it's really true ?"}}