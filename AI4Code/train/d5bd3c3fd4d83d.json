{"cell_type":{"e676b3ee":"code","5670bd5e":"code","529b9af8":"code","f7950be9":"code","2bc8a70c":"markdown","b0da85d2":"markdown","f091d563":"markdown"},"source":{"e676b3ee":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport scipy as sp\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\n\ntitanic = pd.read_csv(\"..\/input\/train.csv\")\n","5670bd5e":"titanic","529b9af8":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.linear_model import LogisticRegression\nohe = OneHotEncoder()\n\ntitanic = pd.read_csv(\"..\/input\/train.csv\")\n\ntitanic[\"CabinGroup\"] = titanic[\"Cabin\"].fillna(\"\").str[:1]\n\ny_train = titanic[\"Survived\"].values\nX_numeric = titanic[[\"Age\", \"Fare\"]].fillna(0).values\nX_categorical = ohe.fit_transform(titanic[[\"Pclass\", \"Sex\", \"Embarked\", \"CabinGroup\"]].fillna(\"\").values)\nX_train = sp.hstack([X_numeric,X_categorical.todense()])\n\nmodel = LogisticRegression()\nmodel.fit(X_train, y_train)\nmodel.score(X_train, y_train)","f7950be9":"titanic = pd.read_csv(\"..\/input\/test.csv\")\ntitanic[\"CabinGroup\"] = titanic[\"Cabin\"].fillna(\"\").str[:1]\nX_numeric = titanic[[\"Age\", \"Fare\"]].fillna(0).values\nX_categorical = ohe.transform(titanic[[\"Pclass\", \"Sex\", \"Embarked\", \"CabinGroup\"]].fillna(\"\").values)\nX_test = sp.hstack([X_numeric,X_categorical.todense()])\n\ny_pred = model.predict(X_test)\n\n\nsubmission = pd.DataFrame({\"PassengerId\": titanic[\"PassengerId\"],\n                           \"Survived\": y_pred})\nsubmission.to_csv(\"submission.csv\", index=False)","2bc8a70c":"Let's do some data mangling. To get numeric features, we will want to do **one-hot encodings** of several variables. We might also want to extract the first letter in the cabin as a marker for where on the ship a passenger may have started.","b0da85d2":"Accuracy of ~80% isn't too shabby for a first shot. This number is going to be inflated: because it uses the training data to evaluate the model. We really should have split off a test set to get a better value here.\n\nNow, let's submit this to Kaggle and see where it lands!","f091d563":"Before anything else, explore the data a little bit - get a sense of what it contains."}}