{"cell_type":{"2b02dc8f":"code","5038043a":"code","cc7ed0a7":"code","bb2b6600":"code","b11ba5ab":"code","df55bc29":"code","7c6655d4":"code","8f4b915c":"code","d87c1e01":"code","7de97fa6":"code","f87a7d36":"code","813fd9cd":"code","91509489":"code","3fdbef63":"code","2652043d":"code","8638b055":"code","f60479fb":"code","d543ede0":"code","5c60bdd1":"code","923671b1":"code","b703434d":"code","2fc55313":"code","597b9658":"code","fd368724":"code","d4893ade":"code","b027f546":"code","51ad1953":"code","c4cc10f5":"code","32385d55":"code","c38a04c7":"code","cd2afb78":"code","cdd0d7b3":"code","3d8cd438":"code","6efbb33c":"code","d92f1a8f":"code","a7edcf3c":"code","e6f5076c":"code","99f88ca3":"code","3604f967":"code","f8bf1ac6":"code","afed4aec":"code","fae0e694":"code","1bbad2a5":"code","a79ae46e":"code","a42c1753":"code","0bc0f14b":"code","8a5974bf":"code","212cdb89":"code","b046392d":"code","18fc9c50":"code","bffd84be":"code","3d9c1457":"code","65325638":"code","3f56ad3a":"code","212a3e00":"code","2a90f840":"code","518450db":"code","06d9054e":"markdown","a42a2165":"markdown","092ca0ac":"markdown","9bc43143":"markdown","b309cddd":"markdown","959e5273":"markdown","30e88fdf":"markdown","41a0429d":"markdown","43afbe98":"markdown","b5ca6415":"markdown","b2a445d8":"markdown","7734666e":"markdown","8d2f6c2d":"markdown","3372303d":"markdown","3389face":"markdown","21a82a55":"markdown","1bcef8e7":"markdown","b6d9c082":"markdown","cfc80c96":"markdown","2fc4c7d0":"markdown","77c54869":"markdown","be1944e4":"markdown","563c2682":"markdown","6c7dd05a":"markdown","cbaed15e":"markdown","64497d95":"markdown","8bc1bbcb":"markdown","7cc45da5":"markdown","4aa5e336":"markdown","3057aa98":"markdown"},"source":{"2b02dc8f":"import numpy as np\nfrom sklearn.ensemble import RandomForestClassifier\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn import preprocessing\nimport os\nprint(os.listdir(\"..\/input\"))\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn import tree\nfrom sklearn import svm\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import ensemble\nfrom sklearn.metrics import accuracy_score","5038043a":"%%time\nevent_type=pd.read_csv(\"..\/input\/event_type.csv\",error_bad_lines=False)\ntrain = pd.read_csv(\"..\/input\/train.csv\")\nseverity_type = pd.read_csv(\"..\/input\/severity_type.csv\")\nlog_feature = pd.read_csv(\"..\/input\/log_feature.csv\")\ntest = pd.read_csv(\"..\/input\/test.csv\")\nresource_type = pd.read_csv(\"..\/input\/resource_type.csv\",error_bad_lines=False)\nsample_submission = pd.read_csv(\"..\/input\/sample_submission.csv\")","cc7ed0a7":"print(\"test\",test.shape)\nprint(\"train\",train.shape)","bb2b6600":"print('test',test.head())\nprint('train',train.head(4))\nprint('sample_submission',sample_submission.head())\nprint('event_type',event_type.shape,event_type.head(2))\nprint('severity_type',severity_type.shape,severity_type.head(2))\nprint('log_feature',log_feature.shape,log_feature.head(2))\nprint('resource_type',resource_type.shape,resource_type.head(2))","b11ba5ab":"val=list(train['fault_severity'].value_counts())\nfor i in range(len(val)):\n    print(train['fault_severity'].value_counts().index[i],round(val[i]\/sum(val)*100),'%')","df55bc29":"event_type['id']=pd.to_numeric(event_type['id'],errors='coerce')\n#converting object datatype into numeric","7c6655d4":"event_type.dtypes","8f4b915c":"def merge_fn(df1,df2,col_name,how_param):\n    merged_df=df1.merge(df2,how=how_param,on=col_name)\n    return merged_df\n    ","d87c1e01":"train_merge1=merge_fn(train,event_type.drop_duplicates(subset=['id']),'id','left')\ntrain_merge2=merge_fn(train_merge1,severity_type.drop_duplicates(subset=['id']),'id','left')\ntrain_merge3=merge_fn(train_merge2,log_feature.drop_duplicates(subset=['id']),'id','left')\ntrain_merge4=merge_fn(train_merge3,resource_type.drop_duplicates(subset=['id']),'id','left')","7de97fa6":"train_merge4.shape","f87a7d36":"train_merge4.head()","813fd9cd":"train_merge4.head()","91509489":"train_merge4.dtypes","3fdbef63":"train_merge4.isnull().sum()","2652043d":"cat_col=list(set(train_merge4.columns)-set(train_merge4._get_numeric_data().columns))","8638b055":"def categorical_conversion(df,cat_col):\n    for i in range(len(cat_col)):\n        df[cat_col[i]]=df[cat_col[i]].astype('category')\n    return df\n    \n    ","f60479fb":"train_merge4=categorical_conversion(train_merge4,cat_col)   ","d543ede0":"train_merge4.dtypes","5c60bdd1":"def label_encoding_conversion(df,cat_col):\n    le=preprocessing.LabelEncoder()\n    for i in range(len(cat_col)):\n        df[cat_col[i]]=le.fit_transform(df[cat_col[i]])\n    return df","923671b1":"train_merge4.columns","b703434d":"train_merge4=label_encoding_conversion(train_merge4,cat_col)","2fc55313":"train_merge4.columns","597b9658":"train_merge4.drop(['id'],axis=1,inplace=True)","fd368724":"target=train_merge4[['fault_severity']]","d4893ade":"train_merge4.drop(['fault_severity'],axis=1,inplace=True)","b027f546":"train_merge4.head()","51ad1953":"train_merge4.dtypes","c4cc10f5":"test.head()","32385d55":"test.head()","c38a04c7":"test.shape","cd2afb78":"test_merge1=merge_fn(test,event_type.drop_duplicates(subset=['id']),'id','left')\ntest_merge2=merge_fn(test_merge1,severity_type.drop_duplicates(subset=['id']),'id','left')\ntest_merge3=merge_fn(test_merge2,log_feature.drop_duplicates(subset=['id']),'id','left')\ntest_merge4=merge_fn(test_merge3,resource_type.drop_duplicates(subset=['id']),'id','left')","cdd0d7b3":"test_merge4.shape","3d8cd438":"severity_type.head()","6efbb33c":"test_merge4.head(2)","d92f1a8f":"cat_col","a7edcf3c":"test_merge4=categorical_conversion(test_merge4,cat_col)  ","e6f5076c":"test_merge4.dtypes\n","99f88ca3":"test_merge4=label_encoding_conversion(test_merge4,cat_col)","3604f967":"test_merge4.dtypes","f8bf1ac6":"test_merge4.drop(['id'],axis=1,inplace=True)","afed4aec":"train_merge4.columns","fae0e694":"test_merge4.columns","1bbad2a5":"lr=LogisticRegression()\nlr.fit(train_merge4,target)\nlr_pred=lr.predict(test_merge4)\naccuracy_score(pd.DataFrame(lr.predict(train_merge4)),target)","a79ae46e":"rf=RandomForestClassifier()\nrf.fit(train_merge4,target)\nrf_pred=rf.predict(test_merge4)\naccuracy_score(pd.DataFrame(rf.predict(train_merge4)),target)","a42c1753":"\nnb=GaussianNB()\nnb.fit(train_merge4,target)\nnb.predict(test_merge4)\naccuracy_score(pd.DataFrame(nb.predict(train_merge4)),target)","0bc0f14b":"\ndt=tree.DecisionTreeClassifier()\ndt.fit(train_merge4,target)\ndt.predict(test_merge4)\naccuracy_score(pd.DataFrame(dt.predict(train_merge4)),target)","8a5974bf":"\nsvc_ml=svm.SVC()\nsvc_ml.fit(train_merge4,target)\nsvc_ml.predict(test_merge4)\naccuracy_score(pd.DataFrame(svc_ml.predict(train_merge4)),target)","212cdb89":"\nada=AdaBoostClassifier()\nada.fit(train_merge4,target)\nada.predict(test_merge4)\naccuracy_score(pd.DataFrame(ada.predict(train_merge4)),target)","b046392d":"\nknn=KNeighborsClassifier()\nknn.fit(train_merge4,target)\nknn.predict(test_merge4)\naccuracy_score(pd.DataFrame(knn.predict(train_merge4)),target)","18fc9c50":"\ngb=ensemble.GradientBoostingClassifier()\ngb.fit(train_merge4,target)\ngb_pre=gb.predict(test_merge4)\naccuracy_score(pd.DataFrame(gb.predict(train_merge4)),target)","bffd84be":"list1=[]\ntuple_l=()\ndef data_modeling(X,target,model):\n    for i in range(len(model)):\n        ml=model[i]\n        ml.fit(X,target)\n        pred=ml.predict(X)\n        acc_score=accuracy_score(pd.DataFrame(ml.predict(X)),target)\n        tuple_l=(ml.__class__.__name__,acc_score)\n        list1.append(tuple_l)\n        print(tuple_l)\n    return list1\n\nmodel_score_output=data_modeling(train_merge4,target,[AdaBoostClassifier(),KNeighborsClassifier(),\nsvm.SVC(),RandomForestClassifier(),\ntree.DecisionTreeClassifier(),\nGaussianNB(),\nLogisticRegression(),\nensemble.GradientBoostingClassifier()])","3d9c1457":"modelscore_df=pd.DataFrame(model_score_output,columns=['Classifier',\"Accuracy score\"])","65325638":"modelscore_df","3f56ad3a":"modelscore_df['classifier code']=np.arange(8)","212a3e00":"modelscore_df","2a90f840":"modelscore_df.plot.bar(x='classifier code', y='Accuracy score', rot=0)","518450db":"predict_test=rf.predict_proba(test_merge4)\npred_df=pd.DataFrame(predict_test,columns=['predict_0', 'predict_1', 'predict_2'])\nsubmission=pd.concat([test[['id']],pred_df],axis=1)\nsubmission.to_csv('sub.csv',index=False,header=True)\n","06d9054e":"### **LogisticRegression**","a42a2165":"## Model comparison consolidate function","092ca0ac":"### **Droping unique values**","9bc43143":"## **Model score Visualization**","b309cddd":"### **Categorical conversion**","959e5273":"### **GradientBoostingClassifier**","30e88fdf":"### **Categorical conversion **","41a0429d":"## ** Data conversion**","43afbe98":"## **Importing datasets**","b5ca6415":"### **AdaBoostClassifier**","b2a445d8":"## **TEST data preparation**","7734666e":"### Input datasets heads","8d2f6c2d":"### **GaussianNB**","3372303d":"### **SVC**","3389face":"### **Finding categorical columns**","21a82a55":"### **Label encoding**","1bcef8e7":"## ** Test data merging**","b6d9c082":"### **Loading Libraries**","cfc80c96":"### **DecisionTreeClassifier**","2fc4c7d0":"### **Label encoding**","77c54869":"#### **Merged Training data**","be1944e4":"### **Visualization of Severity**","563c2682":"### **Checking for missing values**","6c7dd05a":"# **Training Preprocessing**","cbaed15e":"### **Merging**","64497d95":"### **Removing  unique columns**","8bc1bbcb":"### **RandomForestClassifier**","7cc45da5":"### **Submission file generation**","4aa5e336":"#### ** Categorical columns**","3057aa98":"### **KNeighborsClassifier**"}}