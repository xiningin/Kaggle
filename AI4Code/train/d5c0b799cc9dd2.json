{"cell_type":{"c9969156":"code","5bba463d":"code","45faa138":"code","59358410":"code","45248e85":"code","e35d63bf":"code","7b7504f2":"code","2d7905ce":"code","291964d6":"code","e1c4061e":"code","b70c5e2a":"code","a15a2767":"code","2e16c210":"code","da816cb1":"code","9d221a9b":"code","f4115e41":"code","1a28ced0":"code","9122dc7a":"code","f00d4f7d":"code","f5dedb0b":"code","854fa9e2":"code","7a2d2cbb":"code","26ed36af":"code","e40af76e":"code","8afd286e":"code","d563ea92":"code","30301f55":"code","061fbc18":"code","19e6d90a":"code","ea50b92c":"code","4e096f7a":"code","be5aa0d0":"code","7204f45b":"code","ebc7c05f":"code","0489d435":"code","e2ddcd57":"code","c2481678":"code","456c2435":"code","5cb0dc75":"code","a3b8b22c":"code","d14ffcdf":"code","b545f38c":"code","25f84ae1":"code","26e25ebe":"code","89cab4cc":"code","987101db":"code","9ddb316a":"markdown"},"source":{"c9969156":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5bba463d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, precision_score, recall_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.model_selection import cross_val_score, GridSearchCV\nfrom sklearn.decomposition import PCA","45faa138":"data=pd.read_csv(\"\/kaggle\/input\/weather-dataset-rattle-package\/weatherAUS.csv\")","59358410":"data.head(5)","45248e85":"data.shape","e35d63bf":"data.describe()","7b7504f2":"data.columns","2d7905ce":"data.info()","291964d6":"data.isnull().sum()","e1c4061e":"data=data.fillna(method=\"ffill\")","b70c5e2a":"data.isnull().sum()","a15a2767":"#Evaporation,Sunshine,cloud9am,Cloud3pm,Date drop\ndata=data.drop(['Date','Evaporation','Sunshine','Cloud9am','Cloud3pm'],axis=1)","2e16c210":"data.head(5)","da816cb1":"data.shape","9d221a9b":"NewWindSpeed=[]\nNewHumidity=[]\nNewPressure=[]\nNewTemp=[]","f4115e41":"for i in range(len(data)):\n    NewWindSpeed.append((data.WindSpeed9am[i]+data.WindSpeed3pm[i])\/2.0)\n    NewHumidity.append((data.Humidity9am[i]+data.Humidity3pm[i])\/2.0)\n    NewPressure.append((data.Pressure9am[i]+data.Pressure3pm[i])\/2.0)\n    NewTemp.append((data.Temp9am[i]+data.Temp3pm[i])\/2.0)","1a28ced0":"data=data.drop([\"WindSpeed9am\",\"WindSpeed3pm\",\"Humidity9am\",\"Humidity3pm\",\"Pressure9am\",\"Pressure3pm\",\"Temp9am\",\"Temp3pm\"],axis=1)","9122dc7a":"data.head(5)","f00d4f7d":"# NewWindSpeed=pd.DataFrame(NewWindSpeed,columns=NewWindSpeed)\n# NewHumidity=pd.DataFrame(NewHumidity,columns=NewHumidity)\n# NewPressure=pd.DataFrame(NewPressure,columns=NewPressure)\n# NewTemp=pd.DataFrame(NewTemp,columns=NewTemp)\nNewWindSpeed=pd.DataFrame(NewWindSpeed)\nNewHumidity=pd.DataFrame(NewHumidity)\nNewPressure=pd.DataFrame(NewPressure)\nNewTemp=pd.DataFrame(NewTemp)","f5dedb0b":"New=pd.concat([NewWindSpeed,NewHumidity,NewHumidity,NewTemp],axis=1)","854fa9e2":"New.columns=[\"NewWindSpeed\",\"NewHumidity\",\"NewPressure\",\"NewTemp\"]","7a2d2cbb":"New","26ed36af":"data=pd.concat([data,New],axis=1)","e40af76e":"data.info()","8afd286e":"#categorical varicables\ncat_data=[name for name in \n          list(data.columns) if data[name].dtype=='object'and name !='RainToday'and name!='RainTomorrow']","d563ea92":"cat_data","30301f55":"num_data=[name for name in list(data.columns) if data[name].dtype=='float64'and name !='RainToday'and name!='RainTomorrow']","061fbc18":"num_data","19e6d90a":"data[num_data].describe()","ea50b92c":"plt.figure(figsize=(20,10))\ni=1\nfor name in cat_data:\n    counts=data[name].value_counts()\n    plt.subplot(2,2,i)\n    c=(np.random.random(),np.random.random(),np.random.random())\n    plt.bar(counts.index,counts.values,color=c)\n    plt.title(name)\n    i=i+1","4e096f7a":"feature=data.drop(['RainTomorrow','RainToday'],axis=1)","be5aa0d0":"label=data['RainTomorrow']","7204f45b":"y=np.where(label=='No',1,0)","ebc7c05f":"y[10:50]","0489d435":"feature_dummy=pd.get_dummies(feature)","e2ddcd57":"feature_dummy","c2481678":"X=feature_dummy.to_numpy()","456c2435":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.8, stratify=y)","5cb0dc75":"scaler=StandardScaler()\nscaler.fit(X_train)\nX_train_std=scaler.transform(X_train)\nX_test_std=scaler.transform(X_test)","a3b8b22c":"#\ub85c\uc9c0\uc2a4\ud2f1\ud68c\uadc0\nc_list = [0.01, 0.1, 1, 10, 100]\nbest_scores=0\n\nfor k in c_list:\n    scores_logistic=cross_val_score(estimator=LogisticRegression(C=k,random_state=1),\n                                   X=X_train_std,y=y_train,cv=5,n_jobs=-1)\n    scores=np.mean(scores_logistic)\n    \n    print('C=',k,'accuracy=',scores)\n    \n    if scores>best_scores:\n        best_scores=scores\n        best_param={'C':k}","d14ffcdf":"print(best_scores)\nprint(best_param)\nlogistic=LogisticRegression(**best_param,random_state=1)\nlogistic.fit(X_train_std,y_train)\nlogistic.score(X_test_std,y_test)","b545f38c":"y_pred=logistic.predict(X_test_std)\nconf_mat=confusion_matrix(y_test,y_pred)","25f84ae1":"conf_mat","26e25ebe":"precision_score(y_test,y_pred)","89cab4cc":"recall_score(y_test,y_pred)","987101db":"# pipe_scv=make_pipeline(StandardScaler(),PCA(n_components=5),SVC(kernel='rbf',random_state=1))\n# p_list=[0.01,0.1,1,10,100]\n\n# param_grid={'svc__C':p_list,\"svc__gamma\":p_list}\n# gs=GridSearchCV(estimator=pipe_scv,param_grid=param_grid,scoring='accuracy',cv=5,n_jobs=-1)\n# gs.fit(X_train,y_train)\n# print(gs.best_params_)\n# print(gs.score(X_test,y_test))","9ddb316a":"# DATA Preprocessing"}}