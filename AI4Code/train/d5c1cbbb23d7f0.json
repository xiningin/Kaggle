{"cell_type":{"9d717941":"code","55c59d87":"code","7b062e2f":"code","9907bd3e":"code","844beffb":"code","556ce0fd":"code","be090755":"code","b9e43ba3":"code","45e3426b":"code","2e25ea50":"code","2a78008b":"code","f6550497":"code","5e54b2f0":"code","d149d0bd":"code","140e2ebc":"code","3bad9ecf":"code","3fd4e310":"code","e222397f":"code","808bb4e3":"code","d6b7b1fd":"code","d157c13d":"markdown","c6f64913":"markdown","c8a2a0e9":"markdown","6546a26b":"markdown"},"source":{"9d717941":"import numpy as np\nimport pandas as pd","55c59d87":"train_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","7b062e2f":"train_data[:10]","9907bd3e":"train_data.describe(include='all')","844beffb":"women = train_data[train_data['Sex'] == 'female']['Survived']\nrate_women = sum(women)\/len(women)\nprint('% of women who survived:', rate_women)","556ce0fd":"men = train_data[train_data.Sex == 'male']['Survived']\nrate_men = sum(men)\/len(men)\nprint('% of men who survived:', rate_men)","be090755":"# alternative way of computing the above\ntrain_data[['Sex', 'Survived']].groupby(['Sex']).mean()","b9e43ba3":"train_data[['Cabin', 'Survived']].groupby(['Cabin']).mean()","45e3426b":"train_data[['Ticket', 'Survived']].groupby(['Ticket']).mean()","2e25ea50":"train_data[['Parch', 'Survived']].groupby(['Parch']).mean()","2a78008b":"train_data[['SibSp', 'Survived']].groupby(['SibSp']).mean()","f6550497":"train_data[['Fare', 'Survived']].groupby(['Fare']).mean()","5e54b2f0":"train_data[['Pclass','Survived']].groupby(['Pclass']).mean()","d149d0bd":"train_data[['Age','Survived']].groupby(['Age']).mean()","140e2ebc":"# generate correlation data (larger values signify a clear positive\/negative correlation between row\/column labels)\ntrain_data.corr()","3bad9ecf":"women_count = 0\nwomen_survived_count = 0\nfor idx, row in train_data.iterrows():\n    if row['Sex'] == 'female':\n        women_count += 1\n        if row['Survived'] == 1:\n            women_survived_count += 1\nwomen_survived_count \/ women_count","3fd4e310":"predictions = []\nfor idx, row in test_data.iterrows():\n    # make your changes in this cell!\n    if row['Sex'] == 'female':\n        if row ['SibSp'] > 3:\n            predictions.append(0)\n        elif row['Pclass'] < 3: \n            predictions.append(1)\n        elif row ['Fare'] > 200:\n            predictions.append(1)\n        elif row['Parch'] < 4 or row['Parch'] == 5:\n            predictions.append(1)\n        else:  \n            predictions.append(0)\n    else:\n        if row['Age'] <= 6 and row[\"Pclass\"] != 3:\n            predictions.append(1)\n        elif row['Age'] <= 25 and row['Pclass'] == 1 and row[\"Parch\"] == 2:\n            predictions.append(1)\n        else:\n            predictions.append(0)   ","e222397f":"assert len(predictions) == len(test_data), 'Number of predictions must match number of test data rows!'","808bb4e3":"test_data['Survived'] = predictions","d6b7b1fd":"test_data[['PassengerId', 'Survived']].to_csv('submission.csv', index=False)","d157c13d":"# Loading and examining data","c6f64913":"# Working with rows manually","c8a2a0e9":"# Basic analysis","6546a26b":"# Making predictions"}}