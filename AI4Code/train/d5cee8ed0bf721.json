{"cell_type":{"7d50f6ab":"code","038a28ab":"code","10f0a8bf":"code","bf23d622":"code","b15dc34c":"code","2976a1eb":"code","600d0dd3":"code","634e1016":"code","8188512d":"code","2b0b8c32":"code","46897702":"code","ef64d108":"code","adec944d":"code","51571fc1":"code","db7ae5fa":"code","9072de47":"code","df15c375":"code","251d4f53":"code","8fc9d9c5":"code","59dbaaed":"code","0d8e6e82":"code","351404cb":"code","8c4cf535":"code","8d48bd08":"code","de873bc8":"code","94fe3b11":"code","9fe15531":"code","4c0b06dd":"code","96db3ebe":"code","cf77d8fd":"code","d3b25c2a":"code","c111cc7e":"code","d4fc6bb9":"code","b7f9de55":"code","4358fe5c":"code","41d35b5d":"code","fa4d6154":"code","acd441e0":"code","3a24aedc":"code","7076d5b0":"code","a892c594":"code","96383a41":"code","0a2aaa6f":"code","c84f42a2":"code","19240c93":"code","9e91c24f":"code","152626f9":"code","65392f25":"code","1d06d686":"code","b480279c":"code","7e84dd3f":"code","b44278c4":"code","8f886bd0":"code","45c76868":"code","3747c52b":"code","4b02fb66":"code","e19891d5":"code","d8d96a04":"code","963d6d24":"code","402cf105":"code","7bc3327a":"code","874b6f9c":"code","e767f7a8":"code","51d6c4f9":"code","aa8210bd":"code","80594201":"code","0780c59e":"code","9f7f59d5":"code","0f54d2ff":"code","532855e7":"code","33913c3a":"code","6687426b":"code","2fc920a8":"code","f946c2c0":"code","05accd7b":"code","bf63da2c":"code","6ac92fb4":"code","4464146b":"code","054b8af1":"code","7730fb5b":"code","ccff71a6":"code","a11876ab":"code","90c87860":"code","6c076737":"code","0a939658":"code","3691a652":"code","bb1a938b":"code","9220f166":"markdown","eaa8e24d":"markdown","0e02bce8":"markdown","455ad657":"markdown","dfc27c69":"markdown"},"source":{"7d50f6ab":"#importing necessary packages\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\npd.pandas.set_option(\"display.max_columns\",None)","038a28ab":"#reading the csv file into  a var name data\ndata=pd.read_csv(r'C:\\Users\\Abhishek\\Downloads\\archive (7)\\BankChurners.csv')","10f0a8bf":"data.shape","bf23d622":"data.head()","b15dc34c":"#Since our target variable is attrition flag lets do some preprocessing since our target variable is categorical \n#data_output=pd.get_dummies(data[\"Attrition_Flag\"],drop_first=True)\ny=pd.get_dummies(data[\"Attrition_Flag\"],drop_first=True)\n#y=data_output\ny.head()\n","2976a1eb":"#there are many columns which are not use full for us so selecting with in the range \ndata_input=data.iloc[:,2:21]\nprint(data_input.shape) \ndata_input.head()","600d0dd3":"# checking the list of numerical variables in the selected columns \nnumerical_feature=[feature for feature in data_input.columns if data_input[feature].dtypes!='O']\nprint(\"number of numerical variables\",len(numerical_feature))\ndata_input[numerical_feature].head()","634e1016":"#now checking w.r.t discrete columns \ndiscrete_feature=[feature for feature in numerical_feature if len(data_input[feature].unique())<25 and feature not in ['id']]\nprint(\"The number of Discrete Features are :{}\".format(len(discrete_feature)))","8188512d":"discrete_feature","2b0b8c32":"data_input[discrete_feature].head()","46897702":"# exploring continous features\ncontinous_feature=[feature for feature in numerical_feature if len(data_input[feature].unique())>25 and feature not in ['id']]\nprint(\"The number of continous Features are :{}\".format(len(continous_feature)))","ef64d108":"#performing vizual analysis\nfor feature in continous_feature:\n    df=data.copy()\n    df[feature].hist(bins=25)\n    plt.xlabel(feature)\n    plt.ylabel(\"count\")\n    plt.show()","adec944d":"for feature in continous_feature:\n    df=data.copy()\n    if 0 in df[feature].unique():\n        pass\n    else:\n        df.boxplot(column=feature)\n        plt.ylabel(feature)\n        plt.show()\n         ","51571fc1":"for feature in continous_feature:\n    df=data.copy()\n    if 0 in df[feature].unique():\n        pass\n    else:\n        sns.distplot(df[feature])\n        plt.ylabel(feature)\n        plt.show()","db7ae5fa":"data['Customer_Age'].describe()","9072de47":"#age follows a gaussian distribuition so lets calculate the boundaries which differentiate the outliers\nupper_bound=data[\"Avg_Open_To_Buy\"].mean()+3*data[\"Avg_Open_To_Buy\"].std()\nlower_bound=data[\"Avg_Open_To_Buy\"].mean()-3*data[\"Avg_Open_To_Buy\"].std()\nprint(upper_bound,lower_bound)","df15c375":"data_input.loc[data_input[\"Customer_Age\"]>70,'Customer_Age']=70","251d4f53":"IQR=df.Credit_Limit.quantile(0.75)-df.Credit_Limit.quantile(0.25)\nlower_wishker=df.Credit_Limit.quantile(0.25)-(IQR*3)\nupper_wishker=df.Credit_Limit.quantile(0.75)+(IQR*3)\nprint(lower_wishker,upper_wishker)","8fc9d9c5":"categorical_features=[feature for feature in data_input if data_input[feature].dtype=='O']\nprint(\"the number of categorical features are: {}\".format(len(categorical_features)))","59dbaaed":"for feature in categorical_features:\n    print(\"the feature is {} and number of categories are {}\".format(feature,len(data_input[feature].unique())))","0d8e6e82":"df['Card_Category'].unique()","351404cb":"df.Card_Category.value_counts().sort_values(ascending=False)","8c4cf535":"card_map={'Blue':0,\n               'Silver':1,\n               'Gold':2,\n               'Platinum':3\n               }\n\ndata_input['CreditCard_ordinal']=data_input.Card_Category.map(card_map)\ndata_input.head()","8d48bd08":"df['Income_Category'].unique()","de873bc8":"df.Income_Category.value_counts().sort_values(ascending=False)","94fe3b11":"x=df.groupby(['Income_Category','Attrition_Flag']).count()\nx\n\n#x.first()","9fe15531":"income_map={'Less than $40K':0,\n               'Unknown':1,\n               '$40K - $60K':2,\n               '$60K - $80K':3,\n               '$80K - $120K':4,\n              '$120K +':5\n               }\ndata_input['income_ordinal']=data_input.Income_Category.map(income_map)\ndata_input.head()","4c0b06dd":"df[\"Education_Level\"].unique()","96db3ebe":"df.Education_Level.value_counts().sort_values(ascending=False)","cf77d8fd":"#z=df.groupby(['Education_Level','Card_Category']).count()\nz=df.groupby(['Education_Level','Attrition_Flag']).count()\nz","d3b25c2a":"education_map={'Uneducated':0,\n               'Unknown':1,\n               'High School':2,\n               'College':3,\n               'Graduate':4,\n              'Post-Graduate':5,\n              'Doctorate':6 }\n\ndata_input['education_ordinal']=data_input.Education_Level.map(education_map)\ndata_input.head()","c111cc7e":"data_input=data_input.drop(['Card_Category','Income_Category','Education_Level'],axis=1)","d4fc6bb9":"data_input.head()","b7f9de55":"data_input=pd.get_dummies(data_input,columns=['Gender','Marital_Status'],drop_first=True)","4358fe5c":"data_input.head()","41d35b5d":"import dtale","fa4d6154":"dtale.show(data_input)","acd441e0":"data_in=data_input.drop(['Avg_Open_To_Buy','Total_Trans_Ct'],axis=1)\ndata_in.head()","3a24aedc":"y.value_counts()","7076d5b0":"out=y\nout.values.ravel()","a892c594":"data_in.isnull().values.any(),y.isnull().values.any()","96383a41":"data_in.shape,y.shape","0a2aaa6f":"data_in.info()","c84f42a2":"!pip install imblearn","19240c93":"from imblearn.over_sampling import RandomOverSampler\nos=RandomOverSampler(sampling_strategy=0.8)\n","9e91c24f":"X_train,Y_train=os.fit_resample(data_in,y)","152626f9":"Y_train.value_counts()","65392f25":"from sklearn import preprocessing\nscalar=preprocessing.StandardScaler().fit(X_train)","1d06d686":"x_train_s=scalar.transform(X_train)","b480279c":"#performing some feature selection techniques on the dataset \nfrom sklearn.feature_selection import mutual_info_classif\nmutual_info=mutual_info_classif(x_train_s,Y_train)\nmutual_info","7e84dd3f":"mutual_info=pd.Series(mutual_info)\nmutual_info.index=X_train.columns\nmutual_info.sort_values(ascending=False)","b44278c4":"mutual_info.sort_values(ascending=False).plot.bar(figsize=(20,8))","8f886bd0":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(X_train[[\"Total_Trans_Amt\",\"Credit_Limit\",\"Total_Revolving_Bal\",\n                                                        \"Total_Ct_Chng_Q4_Q1\",\"Avg_Utilization_Ratio\",\"Total_Amt_Chng_Q4_Q1\"]]\n                                                        ,Y_train,test_size=0.2,random_state=12)","45c76868":"from sklearn import preprocessing\nscalar=preprocessing.StandardScaler().fit(x_train)","3747c52b":"x_train_s=scalar.transform(x_train)","4b02fb66":"x_test_s=scalar.transform(x_test)","e19891d5":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix","d8d96a04":"clf_lrs=LogisticRegression()\nclf_lrs.fit(x_train_s,y_train.values.ravel())","963d6d24":"predict=clf_lrs.predict(x_test_s)","402cf105":"from sklearn.metrics import accuracy_score,confusion_matrix\nprint(accuracy_score(y_test,predict))\n","7bc3327a":"from sklearn import tree\nclf=tree.DecisionTreeClassifier(min_samples_leaf=15,max_depth=3)\nclf.fit(x_train_s,y_train)","874b6f9c":"y_tep=clf.predict(x_test_s)","e767f7a8":"confusion_matrix(y_test,y_tep)","51d6c4f9":"accuracy_score(y_test,y_tep)","aa8210bd":"from sklearn.tree import plot_tree\nplot_tree(clf,filled=True)","80594201":"import pickle\nfilepath=r'C:\\Users\\Abhishek\\Documents\\clf.pkl'\npickle.dump(clf,open(filepath,'wb'))\n","0780c59e":"\nimport pickle \nimport numpy as np","9f7f59d5":"pickle_in=open(r'C:\\Users\\Abhishek\\Documents\\clf.pkl','rb')\nclassifier=pickle.load(pickle_in)","0f54d2ff":"#for regression problme station  the below feature selection method can be implemented ","532855e7":"from sklearn.linear_model import Lasso\nfrom sklearn.feature_selection import SelectFromModel","33913c3a":"#dat=data_in\n#dat.shape,y.shape\ndat=pd.concat([data_input,y])\n#y.value_counts()\ndat.head()","6687426b":"dat.to_csv(r\"C:\\Users\\Abhishek\\Downloads\\feat.csv\",index=True)","2fc920a8":"feature_sel_modl=SelectFromModel(Lasso(alpha=0.05,random_state=0))\nfeature_sel_modl.fit(data_in,y)","f946c2c0":"feature_sel_modl.get_support()","05accd7b":"selected_features=data_input.columns[(feature_sel_modl.get_support())]\nprint(\"total_features :{}\".format((data_input.shape[1])))\nprint(\"selected_features:{}\".format((selected_features)))\nprint(\"features with coefficient shrinked to zero:{}\".format(np.sum(feature_sel_modl.estimator_.coef_==0)))","bf63da2c":"selected_features","6ac92fb4":"fin_x=data_input[selected_features]","4464146b":"X1_train,Y1_train=os.fit_resample(fin_x,y)","054b8af1":"Y1_train.value_counts()","7730fb5b":"from sklearn.model_selection import train_test_split\nx1_train,x1_test,y1_train,y1_test=train_test_split(X1_train,Y1_train,test_size=0.2,random_state=112)","ccff71a6":"from sklearn import preprocessing\nscalar=preprocessing.StandardScaler().fit(x1_train)","a11876ab":"x_train_s=scalar.transform(x1_train)","90c87860":"x_test_s=scalar.transform(x1_test)","6c076737":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix","0a939658":"clf_lrs=LogisticRegression()\nclf_lrs.fit(x_train_s,y_train.values.ravel())","3691a652":"predict=clf_lrs.predict(x_test_s)","bb1a938b":"from sklearn.metrics import accuracy_score,confusion_matrix\nprint(accuracy_score(y1_test,predict))","9220f166":"# performing encoding based on nominal or ordinal variable ","eaa8e24d":"# performing extra vizualization for checking corelation to avoid multicollinearity problem ","0e02bce8":"# We can Obsereve there is a data imbalance which will lead to bias in output if we continue our exploration without fixing it hence lets fix it by doing over sampling since if we do undersampling we will lose data and we can even use smotetomk sampling method but im using random sampling ","455ad657":"# we can see that the data is skewed w.r.t few features while few of them have a gaussian distribuition but since our use case isnt with respect to linear regression we need not do the log transformation ","dfc27c69":"# Gender 1=Male ,0=Female"}}