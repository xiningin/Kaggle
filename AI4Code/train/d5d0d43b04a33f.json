{"cell_type":{"7e254d28":"code","f2c8d9aa":"code","dbda14d2":"code","fccfe8ed":"code","111b1880":"code","0eb4c272":"code","8a0ef13a":"code","d2fcaf0c":"code","34e2bd3d":"code","f6a25a90":"code","07a09df8":"code","11f5cd5a":"code","0bcd3fb9":"code","9368de0d":"code","cc7f4de3":"code","637a8c10":"code","205e0e07":"code","33583544":"code","bd6f7b93":"code","58183e6b":"code","eac2a4e6":"code","b152fbea":"code","9a40b437":"code","8b165736":"code","a426718e":"code","9e9bb726":"code","3db7f064":"markdown","c87498e9":"markdown","d348ee7c":"markdown","24554db4":"markdown","a606c40d":"markdown","8e52d708":"markdown","614144bf":"markdown","c5a7d8a2":"markdown","cdb69e6e":"markdown","bcbe78b9":"markdown","df0b455a":"markdown","95a8b78c":"markdown","40f259c2":"markdown","be2f6d6a":"markdown","523abd8f":"markdown"},"source":{"7e254d28":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f2c8d9aa":" import dask.dataframe as dd","dbda14d2":"exportDf = dd.read_csv('\/kaggle\/input\/india-trade-data\/2018-2010_export.csv')","fccfe8ed":"exportDf.head()","111b1880":"# Finding information about DataFrame\nexportDf.info()","0eb4c272":"# Schema of DataFrame\nexportDf.dtypes","8a0ef13a":"importDf = dd.read_csv('\/kaggle\/input\/india-trade-data\/2018-2010_import.csv')","d2fcaf0c":"importDf.head()","34e2bd3d":"\nset(importDf.HSCode) == set(exportDf.HSCode)","f6a25a90":"importDf.value.min().compute()","07a09df8":"importDf.describe().compute()","11f5cd5a":"#Getting number of partition\nimportDf.npartitions","0bcd3fb9":"filteredVal =importDf[importDf.value > 66]\nfilteredVal.head()","9368de0d":"filteredVal =importDf[(importDf.value > 66) & (importDf.value < 100)]\nfilteredVal.head()","cc7f4de3":"meanVal = importDf.groupby(\"HSCode\").mean()\nmeanVal.compute()","637a8c10":"# Data joining \njoinedData = importDf.merge(exportDf, on = \"HSCode\",how=\"inner\")\njoinedData.compute().head()","205e0e07":"# Reading a File using Pandas\n%timeit pd.read_csv(\"\/kaggle\/input\/india-trade-data\/2018-2010_import.csv\")","33583544":"%timeit dd.read_csv(\"\/kaggle\/input\/india-trade-data\/2018-2010_import.csv\")","bd6f7b93":"importDfPd = pd.read_csv('\/kaggle\/input\/india-trade-data\/2018-2010_import.csv')\nimportDfDd = dd.read_csv('\/kaggle\/input\/india-trade-data\/2018-2010_import.csv')","58183e6b":"# Filtering using Dask\n%timeit val = importDfDd[importDfDd.value >66].compute()","eac2a4e6":"# Filtering using Pandas\n%timeit val = importDfPd[importDfPd.value >66]","b152fbea":"importDfDd.head()","9a40b437":"importDfDd1 = importDfDd.repartition(npartitions = 100)","8b165736":"importDfDd.npartitions","a426718e":"# Filtering using Dask\n%timeit val = importDfDd1[importDfDd1.value >66].compute()","9e9bb726":"importDfDd1 = importDfDd.repartition(npartitions = 1)\n%timeit val = importDfDd1[importDfDd1.value >66].compute()","3db7f064":"## For file reading Dask is much faster than Pandas","c87498e9":"![](https:\/\/docs.dask.org\/en\/latest\/_images\/dask_icon.svg)","d348ee7c":"# Data Aggregation\n\n- Mean value grouped by  HSCode","24554db4":"# Reading the Data Files","a606c40d":"### We can observe that time is very large for Dask. Can we decrease it? Let us increase number of Partitions.","8e52d708":"# Importing Dask ","614144bf":"# Comparison of performance between pandas and dask DataFrame","c5a7d8a2":"### Comparison of code efficiency for Data Filtering","cdb69e6e":"# About DataSet used for this kernel\n\nDataset i have used from kaggle itself. This Dataset about importing stuffs to India and Exporting Stuffs from India. Following Information i have just copy pasted from Data Official site on kaggle \n\n---------------------------------------------------\n\n- Context\nIndia is one of the fastest developing nations of the world and trade between nations is the major component of any developing nation. This dataset includes the trade data for India for commodities in the HS2 basket.\n\nFor more, visit GitHub\n\n- Content\nThe dataset consists of trade values for export and import of commodities in million US$. The dataset is tidy and each row consists of a single observation.\n\n- Acknowledgements\nThe data is scraped using Selenium Webdriver from the Department of Commerce, Government of India.\n\nData set has been collect and uploaded to Kaggle by  Lakshya Agarwal  \nhttps:\/\/www.kaggle.com\/lakshyaag\n\n","bcbe78b9":"# More about Dataset \n\ntaken from kernel \nhttps:\/\/www.kaggle.com\/shubhamsinghgharsele\/analysis-on-indian-import-export\n\n\nIn both the File we have 5 columns each.\n\nHSCode - HS stands for Harmonized System. It was developed by the WCO (World Customs Organization) as a multipurpose international product nomenclature that describes the type of good that is shipped HS Code Structure\n\nThe HS code can be described as follows:\n\nIt is a six-digit identification code. It has 5000 commodity groups. Those groups have 99 chapters. Those chapters have 21 sections. It\u2019s arranged in a legal and logical structure. Well-defined rules support it to realize uniform classification worldwide.\n\nthe HSCode in column is 99 chapters\n\nReference HSCode List\n\nCommodity - the column contain chapter wise commodity category. In each commodity Category there are various commodities.\n\nA commodity is an economic good or service that has full or substantial fungibility: that is, the market treats instances of the good as equivalent or nearly so with no regard to who produced them.\n\nReference\n\nValue - values for export and import of commodities in million US $.\nCountry - Country Imported From\/ Exported To\nYear - Year in which comodities where Imported\/Exported which is in between 2010 to 2018.","df0b455a":"# Installation \n\n- On Kaggle machines Dask is allready installed. \n- But if you want to install Dask on any machine then it can be installed using conda and pip both\n- Installing Dask using conda using following line of code\n\nconda install dask\n\n- If you have installed Anaconda then Dask will be installed with it. Further if required it can be upgraded. \n\n- Dask can be installed using pip too.\n\npip install dask  : But it will only install core Dask Part\n\n- In order to install complete Dask following code can be used\n\npip install \"dask[complete]\"\nconda install \"dask[complete]\"","95a8b78c":"# Function compute perform the computation.","40f259c2":"# Introduction to Dask\n\n- If data is more than RAM size, certainly a Data Scientist will look for another tool and first tool which might come in sight is Dask. In Dask the Dask DataFrame is no doubtly going to be a huge support to analyse huge amount of data. A Dask DataFrame, is made of many small Pandas DataFrame.\n- Can run in parallel system like cluster or on single machine.\n- If Data is larger than RAM. No Problem some part will be in memory some part on disc but computation go on single machine. ","be2f6d6a":"# Data Filtering","523abd8f":"# Data Filtering \n- Getting all the imports where import value is greater than 66"}}