{"cell_type":{"4e789bca":"code","65b4c37f":"code","5334fca1":"code","f0559ac7":"code","65bff647":"code","222e3d56":"code","82b3e04a":"code","03bd0ad5":"code","6c4a8e9a":"code","086dc3e9":"code","1d9034fc":"code","b96d5ffa":"code","af69e295":"code","b313409f":"code","956dd1fe":"code","70653d08":"code","c6cab439":"code","afcf9033":"code","4b7aa135":"code","98ded7de":"code","439c9801":"code","ffe041ee":"code","55a9544d":"code","14329e4d":"code","1661c2cf":"code","f8a55c5a":"code","4bfb42bc":"code","bc330b06":"code","fb784f96":"code","8d0f5729":"code","6b018217":"code","2a219155":"code","0c104d57":"code","d293446e":"code","83bc885b":"code","24111683":"code","e47c3c55":"code","a82ed332":"markdown","07cb897a":"markdown","45f297a8":"markdown","ad94a0a5":"markdown","6f39caf4":"markdown","f486473c":"markdown","436ad385":"markdown","b8d16db4":"markdown","c8289efb":"markdown","2b019658":"markdown","d35ea303":"markdown","b3a7652f":"markdown","fdf77215":"markdown","ab27bb4e":"markdown","7d882055":"markdown","93ffbcb1":"markdown","9b393637":"markdown","2d274ad8":"markdown"},"source":{"4e789bca":"%load_ext autoreload\n%autoreload 2\n\n%matplotlib inline\n\nimport pandas as pd\nfrom pandas_summary import DataFrameSummary\nfrom IPython.display import display\nimport matplotlib.pyplot as plt\n\nfrom fastai.imports import *\nfrom fastai.structured import *\n\nfrom scipy.stats import spearmanr\n\ndef display_all(df):\n    with pd.option_context(\"display.max_rows\", 1000, \"display.max_columns\", 1000): \n        display(df)","65b4c37f":"data = pd.read_csv('..\/input\/candy-data.csv')\ndisplay(data.T)","5334fca1":"display_all(data.describe(include='all').T)","f0559ac7":"data.sugarpercent = round(data.sugarpercent,3)\ndata.pricepercent = round(data.pricepercent,3)\ndata.winpercent = round(data.winpercent,3)","65bff647":"data.info()","222e3d56":"plt.figure(figsize=(20,10))\nsns.heatmap(data.corr().abs(),annot=True)","82b3e04a":"def corrank(X):\n    import itertools\n    df = pd.DataFrame([[i,j,X.corr().abs().loc[i,j]] for i,j in list(itertools.combinations(X.corr().abs(), 2))],columns=['Feature1','Feature2','corr'])    \n    return df.sort_values(by='corr',ascending=False).reset_index(drop=True)\n\n# prints a descending list of correlation pair (Max on top)\ndisplay_all(corrank(data))","03bd0ad5":"data.isnull().sum()\/len(data)","6c4a8e9a":"winners = data[data.winpercent>data.winpercent.quantile(.6)]","086dc3e9":"from mlxtend.frequent_patterns import apriori\ndf =  winners[data.columns[1:-3]]\nassociation = apriori(df, min_support=0.3,use_colnames=True).sort_values(by='support')\n\n\nassociation.plot(kind='barh',x='itemsets',y='support',title=f'Most Frequently Used Composition',sort_columns=True,figsize = (10,5),legend=False)","1d9034fc":"sns.boxplot(x=\"chocolate\", y=\"winpercent\", data=winners).set_title('Relation of Chocolate and Win Percent');","b96d5ffa":"sns.boxplot(x=\"fruity\", y=\"winpercent\", data=winners).set_title('Relation of Fruity and Win Percent');","af69e295":"sns.boxplot(x=\"caramel\", y=\"winpercent\", data=winners).set_title('Relation of Caramel and Win Percent');","b313409f":"sns.boxplot(x=\"peanutyalmondy\", y=\"winpercent\", data=winners).set_title('Relation of Peanut\/Almond and Win Percent');","956dd1fe":"sns.boxplot(x=\"nougat\", y=\"winpercent\", data=winners).set_title('Relation of Nougat and Win Percent');","70653d08":"sns.boxplot(x=\"crispedricewafer\", y=\"winpercent\", data=winners).set_title('Relation of Wafer and Win Percent');","c6cab439":"sns.boxplot(x=\"hard\", y=\"winpercent\", data=winners).set_title('Relation of Hardness of Candy and Win Percent');","afcf9033":"sns.boxplot(x=\"bar\", y=\"winpercent\", data=winners).set_title('Relation of Bar and Win Percent');","4b7aa135":"sns.boxplot(x=\"pluribus\", y=\"winpercent\", data=winners).set_title('Relation of Pluribus and Win Percent');","98ded7de":"sns.jointplot(x=\"sugarpercent\", y=\"winpercent\", data=winners,kind=\"kde\",stat_func=spearmanr)","439c9801":"sns.jointplot(x=\"pricepercent\", y=\"winpercent\", data=winners,kind=\"kde\",stat_func=spearmanr)","ffe041ee":"popularity = data[['competitorname','winpercent']].sort_values(by='winpercent')\npd.concat([popularity.head(5),popularity.tail(5)],axis=0).plot(x='competitorname',y='winpercent',kind='barh',title='Popularity of various candies',sort_columns=True,figsize = (10,5),legend=False)","55a9544d":"association.plot(kind='barh',x='itemsets',y='support',title=f'Most Frequently Used Composition',sort_columns=True,figsize = (10,5),legend=False)","14329e4d":"from sklearn import tree\nreg = tree.DecisionTreeRegressor(max_depth=3).fit(data[data.columns[1:-1]],data[data.columns[-1]])\nimp = pd.DataFrame.from_dict({'Name':data.columns[1:-1],'Importance':reg.feature_importances_})\nimp_plt = imp.sort_values(by='Importance',ascending=True).reset_index(drop=True)\nimp_plt[imp_plt.Importance>0].plot(kind='barh',x='Name',y='Importance',title='Feature Importance',sort_columns=True,figsize = (10,5),legend=False)","1661c2cf":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nX_train, X_test, y_train, y_test = train_test_split(data[data.columns[1:-1]],data[data.columns[-1]], test_size=0.33, random_state=42)\nrmse_err = []","f8a55c5a":"from sklearn.tree import DecisionTreeRegressor\nreg = DecisionTreeRegressor(max_depth=5).fit(X_train,y_train)\nrmse_err.append(math.sqrt(mean_squared_error(y_test,reg.predict(X_test))))\nrmse_err[-1]","4bfb42bc":"from sklearn.ensemble import RandomForestRegressor\nrf_reg = RandomForestRegressor(n_estimators=200).fit(X_train,y_train)\nrmse_err.append(math.sqrt(mean_squared_error(y_test,rf_reg.predict(X_test))))\nrmse_err[-1]","bc330b06":"from sklearn.linear_model import LinearRegression\nlr_reg = LinearRegression().fit(X_train,y_train)\nrmse_err.append(math.sqrt(mean_squared_error(y_test,lr_reg.predict(X_test))))\nrmse_err[-1]","fb784f96":"from sklearn.linear_model import SGDRegressor\nsgd_reg = SGDRegressor(max_iter=1000).fit(X_train,y_train)\nrmse_err.append(math.sqrt(mean_squared_error(y_test,sgd_reg.predict(X_test))))\nrmse_err[-1]","8d0f5729":"from sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\n\npoly = PolynomialFeatures(degree=2)\nX_ = poly.fit_transform(X_train)\nX_test_ = poly.fit_transform(X_test)\n\nlg = LinearRegression().fit(X_, y_train)\n\nrmse_err.append(math.sqrt(mean_squared_error(y_test,lg.predict(X_test_))))\nrmse_err[-1]","6b018217":"from sklearn.linear_model import Ridge\nr_reg = Ridge(alpha = .5).fit(X_train,y_train)\nrmse_err.append(math.sqrt(mean_squared_error(y_test,r_reg.predict(X_test))))\nrmse_err[-1]","2a219155":"from sklearn.linear_model import Lasso\nl_reg = Lasso(alpha = 0.1).fit(X_train,y_train)\nrmse_err.append(math.sqrt(mean_squared_error(y_test,l_reg.predict(X_test))))\nrmse_err[-1]","0c104d57":"from sklearn.linear_model import LassoLars\nll_reg = LassoLars(alpha = 0.1).fit(X_train,y_train)\nrmse_err.append(math.sqrt(mean_squared_error(y_test,ll_reg.predict(X_test))))\nrmse_err[-1]","d293446e":"from sklearn.linear_model import BayesianRidge\nb_reg = BayesianRidge().fit(X_train,y_train)\nrmse_err.append(math.sqrt(mean_squared_error(y_test,b_reg.predict(X_test))))\nrmse_err[-1]","83bc885b":"from sklearn.linear_model import PassiveAggressiveRegressor\npar_reg = PassiveAggressiveRegressor(max_iter=1000, random_state=0).fit(X_train,y_train)\nrmse_err.append(math.sqrt(mean_squared_error(y_test,par_reg.predict(X_test))))\nrmse_err[-1]","24111683":"from sklearn.linear_model import ElasticNet\nen_reg = ElasticNet(max_iter=1000, random_state=0).fit(X_train,y_train)\nrmse_err.append(math.sqrt(mean_squared_error(y_test,en_reg.predict(X_test))))\nrmse_err[-1]","e47c3c55":"models = ['Decision Tree','RandomForest','Linear','SGD','Polynomial','Ridge','Lasso','LassoLars','Bayesian Ridge','Passive Aggressive','ElasticNet']\npd.DataFrame.from_dict({'Name':models,'RMSE':rmse_err}).sort_values(by='RMSE',ascending=False).plot(x='Name',y='RMSE',kind='barh',sort_columns=True,figsize = (10,5),legend=False,title='Performance of various Regression based algos')","a82ed332":"* ## Out of Sample Evaluation Split:-","07cb897a":"## Most Popular  and Least Popular Candies","45f297a8":"### Inference:-\nFrom the above plot we can say that more than 60% of the population likes Chocolate so it might be important parameter. ","ad94a0a5":"![America's Favorite Halloween Candy](http:\/\/www.littlelakecounty.com\/wp-content\/uploads\/2018\/10\/HalloweenEventsv2.jpg)\n\n## ***Context***\nWhat\u2019s the best (or at least the most popular) Halloween candy? That was the question this dataset was collected to answer. Data was collected by creating a website where participants were shown [presenting two fun-sized candies and asked to click on the one they would prefer to receive](http:\/\/walthickey.com\/2017\/10\/18\/whats-the-best-halloween-candy\/). In total, more than 269 thousand votes were collected from 8,371 different IP addresses.\n\n## ***Content***\n`candy-data.csv` includes attributes for each candy along with its ranking. \n\nFor **binary variables**, <u>1 means yes, 0 means no<\/u>. The data contains the following fields:\n\n\n| Feature   \t| Description                    \t|   \t\n|-----------\t|--------------------------------\t|\n| chocolate \t| Does it contain chocolate?     \t|\n| fruity    \t| Is it fruit flavored?          \t|\n| caramel   \t| Is there caramel in the candy? \t|\n|peanutalmondy:|Does it contain peanuts, peanut butter or almonds?|\n|nougat| Does it contain nougat?|\n|crispedricewafer| Does it contain crisped rice, wafers, or a cookie component?|\n|hard| Is it a hard candy?|\n|bar| Is it a candy bar?|\n|pluribus| Is it one of many candies in a bag or box?|\n|sugarpercent| The percentile of sugar it falls under within the data set.|\n|pricepercent| The unit price percentile compared to the rest of the set.|\n|winpercent| The overall win percentage according to 269,000 matchups.|\n\n## ***ToDo:***<br><br>\n\n<input type=\"checkbox\"  checked>  Which qualities are associated with higher rankings?<\/input><br>\n<input type=\"checkbox\"  checked> What\u2019s the most popular candy? Least popular?<\/input><br>\n<input type=\"checkbox\" > Can you recreate the 538 analysis of this dataset?<\/input><br>\n<input type=\"checkbox\"  checked> Predictive Modeling<\/input><br>\n","6f39caf4":"### Inference:-\nFrom the above plot we can say that more than 60% of the population likes Soft Candies so it might be important parameter. ","f486473c":"### Inference:-\nFrom the above plot we can say that more than 60% of the population likes Fruity so it might be important parameter. ","436ad385":"### Linearity of Price and Win Percent\nThe above plot proves the alternative hypothesis that price percentage is not linear to the popularity of the candy i.e. **cost of candy doesn't contribute to the popularity of the candy.**","b8d16db4":"## Identifying the Components that make a Good Candy","c8289efb":"### Inference:-\nFrom the above plot we can say that more than 60% of the population likes Peanut\/Almond so it might be important parameter. ","2b019658":"### Inference:-\nFrom the above plot we can say that more than 60% of the population likes Wafer so it might be important parameter. ","d35ea303":"## Model Training:-","b3a7652f":"## Feature Importance of Various Attributes:-","fdf77215":"### Inference:-\nFrom the above plot we can say that more than 60% of the population likes Caramel so it might be important parameter. ","ab27bb4e":"## Bivariate Analysis:-","7d882055":"### Linearity of Sugar and Win Percent:-\n\n\nThe above plot proves the alternative hypothesis that sugar percentage is not linear to the popularity of the candy  i.e. **sugar content of candy doesn't contribute to the popularity of the candy.**","93ffbcb1":"### Inference:-\nFrom the above plot we can say that more than 60% of the population likes Nougat  so it might be important parameter. ","9b393637":"### Inference:-\n\n\nFrom the above plot we can say that more than 60% of the population likes Bar.\n\nBut the confidence boundy is very less to reach out to a clear conlusion.","2d274ad8":"## Univariate Analysis:-"}}