{"cell_type":{"15837200":"code","6e8c5935":"code","adc8f727":"code","7428e602":"code","1e7b413a":"code","3f456d8a":"code","aa8a95fe":"code","6df15d10":"markdown"},"source":{"15837200":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6e8c5935":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('seaborn-dark')","adc8f727":"df = pd.read_csv('\/kaggle\/input\/flight-delay-prediction\/Jan_2019_ontime.csv')\ndf = df.drop('Unnamed: 21', axis=1)\ndf.head()","7428e602":"df.drop('DEP_TIME_BLK', axis=1, inplace=True)\ndf.drop('TAIL_NUM', axis=1, inplace=True)\ndf.drop('OP_CARRIER', axis=1, inplace=True)\ndf['DEP_TIME'].fillna(-1, inplace=True)\ndf['DEP_DEL15'].fillna(-1, inplace=True)\ndf['ARR_DEL15'].fillna(-1, inplace=True)\ndf['ARR_TIME'].fillna(-1, inplace=True)\ndf['DAY_OF_MONTH'] = pd.Categorical(df['DAY_OF_MONTH'])\ndf['DAY_OF_WEEK'] = pd.Categorical(df['DAY_OF_WEEK'])\ndf['OP_CARRIER_AIRLINE_ID'] = pd.Categorical(df['OP_CARRIER_AIRLINE_ID'])\ndf['OP_CARRIER_FL_NUM'] = pd.Categorical(df['OP_CARRIER_FL_NUM'])\ndf['ORIGIN_AIRPORT_ID'] = pd.Categorical(df['ORIGIN_AIRPORT_ID'])\ndf['ORIGIN_AIRPORT_SEQ_ID'] = pd.Categorical(df['ORIGIN_AIRPORT_SEQ_ID'])\ndf['DEST_AIRPORT_ID'] = pd.Categorical(df['DAY_OF_WEEK'])\ndf['DEST_AIRPORT_SEQ_ID'] = pd.Categorical(df['DEST_AIRPORT_SEQ_ID'])\ndf['DEP_DEL15'] = pd.Categorical(df['DEP_DEL15'])\ndf['ARR_DEL15'] = pd.Categorical(df['ARR_DEL15'])\n# df['CANCELLED'] = pd.Categorical(df['CANCELLED'])\ndf['DIVERTED'] = pd.Categorical(df['DIVERTED'])\ndf['ARR_TIME'] = df['ARR_TIME'].astype('str').str[:-2].apply(lambda x: '0' + x if len(x) < 4 else x)\ndf['DEP_TIME'] = df['DEP_TIME'].astype('str').str[:-2].apply(lambda x: '0' + x if len(x) < 4 else x)","1e7b413a":"fig, ax = plt.subplots(1, 2, figsize=(20, 5))\nax[0].bar(np.arange(0,31), df['CANCELLED'].groupby(df['DAY_OF_MONTH']).count())\nax[0].set_xticks(np.arange(0, 31));\nax[0].set_xticklabels(np.arange(1, 32));\nax[0].set_title('Number of cancelled flights by day of month', fontsize=14)\n\nax[1].bar(np.arange(0, 7, ), df['CANCELLED'].groupby(df['DAY_OF_WEEK']).count())\nax[1].set_xticks(np.arange(0, 7));\nax[1].set_xticklabels(['Mon', 'Tue', 'Wen', 'Thu', 'Fri', 'Sat', 'Sun']);\nax[1].set_title('Number of cancelled flights by day of week', fontsize=14)","3f456d8a":"canc_flights = pd.DataFrame(df['OP_UNIQUE_CARRIER'].value_counts()).join(df['CANCELLED'].groupby(df['OP_UNIQUE_CARRIER']).sum())\nfrac_canc = canc_flights['CANCELLED']\/canc_flights['OP_UNIQUE_CARRIER']\nplt.figure(figsize=(15,4))\nplt.bar(np.arange(len(frac_canc)), frac_canc)\nplt.xticks(np.arange(len(frac_canc)), frac_canc.index);\nplt.title('Fraction of cancelled flights by OP_UNIQUE_CARRIER')","aa8a95fe":"plt.figure(figsize=(15, 4))\nplt.bar(np.arange(1), df['CANCELLED'].groupby(df['DEP_TIME'].astype('str').str[:2]).count()[0], hatch='\/', alpha=.4)\nplt.bar(np.arange(1, 25), df['CANCELLED'].groupby(df['DEP_TIME'].astype('str').str[:2]).count()[1:])\nplt.xticks(np.arange(25), np.arange(0, 25));\nplt.text(-0.8, 18000, 'NA values');\nplt.title('Cancels distribution over hours')","6df15d10":"Converting features to categorical. "}}