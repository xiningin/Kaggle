{"cell_type":{"24dc6e06":"code","07e875db":"code","4d72a618":"code","815e00af":"code","8e17b0a8":"code","4a650e44":"code","7867f85f":"code","fee0bbf9":"code","8d1e9555":"code","b173cb1e":"code","0bb81656":"code","4355bd6b":"code","98defa73":"code","3dbd9b07":"code","34084099":"code","bcaba3d8":"code","0619b8a7":"code","f6cfef4a":"code","40bf78a8":"markdown","f4e7b567":"markdown"},"source":{"24dc6e06":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","07e875db":"import pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt\nimport seaborn as sns #visulation","4d72a618":"data = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')","815e00af":"data","8e17b0a8":"data.info()\ndata.describe()","4a650e44":"data.corr()\n","7867f85f":"data.columns","fee0bbf9":"#corelation map\nf, ax =plt.subplots(figsize=(20,20))\nsns.heatmap(data.corr(), annot=True, linewidths=0.5, fmt= '.1f', ax=ax) #burada birbiri ile ili\u015fkisi olan birimler. 1 pozitif ili\u015fki 0 ili\u015fki yok.","8d1e9555":"data.Deaths.plot(kind='line', color='b', label='Deaths', Linewidth=1, alpha=0.5, grid=True, Linestyle =':')\n#data.Confirmed.plot(color='green', label='Confirmed', Linewidth=1, alpha=0.5, grid=True, Linestyle ='--')\ndata.Recovered.plot(color='green', label='Recovered', Linewidth=1, alpha=0.5, grid=True, Linestyle ='--')\nplt.xlabel('x noktas\u0131 (\u00d6len)')\nplt.ylabel('y noktas\u0131 (iyile\u015fen)')\nplt.legend()\nplt.show()","b173cb1e":"#scatter plot\ndata.plot(kind='scatter', x='Deaths', y='Recovered', alpha=0.5, color='red')\nplt.xlabel('\u00d6len')\nplt.ylabel('iyile\u015fen')\nplt.title('Died and Recovered Scatter Plot')\n#plt.scatter(data.Deaths, data.Recovered, color='yellow', alpha=0.5)","0bb81656":"#histogram\ndata.Deaths.plot(kind='hist', bins=10, figsize=(10,3)) #histogram is not appropriate for this.","4355bd6b":"num2 = ['\u00f6l\u00fc var'if i > 0 else '\u00f6l\u00fc yok' for i in data.Deaths]\nprint(num2)\n","98defa73":"data1=data.head()\ndata2=data.tail()\ndata_conc=pd.concat([data1, data2], axis=0, ignore_index=True)\ndata_conc","3dbd9b07":"data1=data.head()\ndata2=data.tail()\ndata_conc=pd.concat([data1, data2], axis=1,)\ndata_conc","34084099":"data.dtypes","bcaba3d8":"data.info()  #missing data","0619b8a7":"data[\"Country\/Region\"].value_counts(dropna =True)\n","f6cfef4a":"data[\"Deaths\"].value_counts(dropna=False)","40bf78a8":"# Matplot\nD\u00fcnya \u00e7ap\u0131nda covid-19'dan \u00f6len ve iyle\u015fenlerin g\u00f6sterimleri.","f4e7b567":"# LIST COMPREHENS\u0130ON"}}