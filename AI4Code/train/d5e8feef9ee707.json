{"cell_type":{"0b511116":"code","86df8cd3":"code","d1c4e7f2":"code","ea5b6d75":"code","89f5a16a":"code","a7238d37":"code","561e1ed1":"code","44cc477e":"code","61a396c3":"code","06a270a3":"markdown","8b5fcbfb":"markdown","b6d9210c":"markdown","05d72610":"markdown","2b449f1b":"markdown"},"source":{"0b511116":"import numpy as np \nimport pandas as pd \nimport os","86df8cd3":"train = pd.read_csv(\"..\/input\/invasive-species-monitoring\/train_labels.csv\")\ntrain[\"name\"] = train[\"name\"].apply(lambda x : \"..\/input\/invasive-species-monitoring\/train\/\" + str(x) + \".jpg\")\ntrain[\"invasive\"] = train[\"invasive\"].astype(\"str\")","d1c4e7f2":"train.head()","ea5b6d75":"from keras.preprocessing.image import ImageDataGenerator\ntrain_image_gen = ImageDataGenerator(rescale = 1\/255, validation_split=0.022, rotation_range=270, horizontal_flip=True)\nbatch_size = 6\nimage_size = 800\ntrain_generator = train_image_gen.flow_from_dataframe(dataframe=train, batch_size=batch_size, target_size=(image_size,image_size), x_col=\"name\", y_col=\"invasive\", subset=\"training\", class_mode=\"binary\")\nval_generator = train_image_gen.flow_from_dataframe(dataframe=train, batch_size=batch_size, target_size=(image_size,image_size), x_col=\"name\", y_col=\"invasive\", subset=\"validation\", class_mode=\"binary\")","89f5a16a":"from keras import Sequential\nfrom keras.layers import Dense, Dropout\nfrom keras.applications.inception_resnet_v2 import InceptionResNetV2\nfrom keras.applications.mobilenet_v2 import MobileNetV2 \nmodel = Sequential()\nmodel.add(InceptionResNetV2(weights=\"imagenet\", include_top=False, pooling=\"avg\", input_shape=(image_size, image_size, 3)))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(1, activation=\"sigmoid\"))","a7238d37":"model.summary()","561e1ed1":"from keras.optimizers import Adam\nmodel.compile(optimizer=Adam(lr=0.0003, decay=2e-7), loss='binary_crossentropy',metrics=['accuracy'])","44cc477e":"from keras.callbacks import ModelCheckpoint\nmodelcheck = ModelCheckpoint(\"best.h5\", save_best_only=True)\nmodel.fit_generator(train_generator, steps_per_epoch=int(np.ceil(train_generator.n\/batch_size)), validation_data = val_generator, validation_steps = int(np.ceil(val_generator.n\/batch_size)), epochs=6, callbacks=[modelcheck])","61a396c3":"sub = pd.read_csv(\"..\/input\/invasive-species-monitoring\/sample_submission.csv\")\ntest = pd.DataFrame({\"name\": sub[\"name\"].apply(lambda x : \"..\/input\/invasive-species-monitoring\/test\/\" + str(x) + \".jpg\")})\ntest_gen = ImageDataGenerator(rescale = 1.\/255)\ntest_generator = test_gen.flow_from_dataframe(dataframe = test, shuffle=False, x_col = \"name\", y_col = None, class_mode=None, batch_size = batch_size, target_size = (image_size, image_size))\nmodel.load_weights(\"best.h5\")\npreds = model.predict_generator(test_generator, steps=int(np.ceil(test_generator.n\/batch_size)), workers = 2)\nsub[\"invasive\"] = preds\nsub.to_csv(\"submission.csv\", index=False)","06a270a3":"## Model Compiling","8b5fcbfb":"## Model Building","b6d9210c":"## Predict","05d72610":"## Model Training","2b449f1b":"## Dataframe Building"}}