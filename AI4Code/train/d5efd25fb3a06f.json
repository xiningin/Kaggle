{"cell_type":{"fd255b44":"code","44018e8f":"code","133d64f9":"code","bb9dd8f5":"code","299ace36":"code","23f3de1f":"code","a1e49c18":"code","f417b8c1":"code","f4b6bc52":"code","df304334":"code","aaf8edca":"code","edce2510":"code","7918dc55":"code","941bcd78":"code","882c2127":"code","e9b7c4af":"code","df8a09a1":"code","a47662f2":"code","dd7a0b30":"code","1885a196":"code","2892a2d3":"code","c80dc419":"code","e4daa5b6":"code","7b801866":"code","3546554c":"code","8b68bc0c":"code","f3ef2d8f":"code","a0b1158a":"code","6f44d474":"code","de7b3969":"code","ee31fd34":"code","5cd2d48f":"code","c9e25fe3":"markdown","6e1ecbda":"markdown"},"source":{"fd255b44":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","44018e8f":"import tensorflow as tf","133d64f9":"from tensorflow import keras","bb9dd8f5":"fasion_minst = keras.datasets.fashion_mnist\nfasion_minst.load_data()","299ace36":"(X_train_full,y_train_full),(X_test,y_test) = fasion_minst.load_data()","23f3de1f":"import matplotlib.pyplot as plt\n","a1e49c18":"plt.imshow(X_train_full[900])","f417b8c1":"class_name = [\"T-shirt\/top\",\"Trouser\",\"Pullover\",\"Dress\",\"Coat\",\"Sandal\",\"Shirt\",\"Sneaker\",\"Bag\",\"Ankle boot\"]","f4b6bc52":"class_name[y_train_full[900]]","df304334":"X_train_n = X_train_full\/255.0\nX_test_n = X_test\/255.0","aaf8edca":"X_valid, X_train = X_train_n[:5000],X_train_n[5000:]\ny_valid,y_train = y_train_full[:5000],y_train_full[5000:]\nX_test = X_test_n","edce2510":"X_valid[900]\n","7918dc55":"np.random.seed(42)\ntf.random.set_seed(42)","941bcd78":"model = keras.models.Sequential()\nmodel.add(keras.layers.Flatten(input_shape=[28,28]))\nmodel.add(keras.layers.Dense(300,activation=\"relu\"))\nmodel.add(keras.layers.Dense(100,activation=\"relu\"))\nmodel.add(keras.layers.Dense(10,activation='softmax'))","882c2127":"model.summary()","e9b7c4af":"keras.utils.plot_model(model)","df8a09a1":"weight,bias = model.layers[1].get_weights()","a47662f2":"weight","dd7a0b30":"model.compile(loss=\"sparse_categorical_crossentropy\",\n             optimizer=\"sgd\",\n             metrics=[\"accuracy\"])","1885a196":"model_history = model.fit(X_train,y_train,epochs=30,validation_data=(X_valid,y_valid))","2892a2d3":"model_history.params","c80dc419":"model_history.history","e4daa5b6":"pd.DataFrame(model_history.history).plot(figsize=(8,5))\nplt.grid(True)\nplt.gca().set_ylim(0,1)\nplt.show()","7b801866":"model_history.history","3546554c":"model.evaluate(X_test,y_test)","8b68bc0c":"X_new = X_test[:3]","f3ef2d8f":"y_proba = model.predict(X_new)\ny_proba.round(2)","a0b1158a":"Y_pred = model.predict_classes(X_new)\nY_pred","6f44d474":"np.array(class_name)[Y_pred]","de7b3969":"print(plt.imshow(X_new[0]))","ee31fd34":"print(plt.imshow(X_new[1]))","5cd2d48f":"print(plt.imshow(X_new[2]))","c9e25fe3":"# Building Our Model","6e1ecbda":"# Using sequesntial APIs in Keras.."}}