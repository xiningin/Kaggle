{"cell_type":{"e0f23fdc":"code","c96bf349":"code","965fe51a":"code","1ab64fc8":"code","07a61c54":"code","f63ed796":"code","1d6038f2":"code","070a12fd":"code","800d7a3d":"code","21f1b6da":"code","5f3bc9d4":"code","a8611ef2":"code","ce16ea3e":"code","698076b9":"code","a76d71c3":"code","237b25b1":"code","2ada100e":"code","f05d3cfe":"code","40cf7e30":"code","05b2e794":"code","178cfe9c":"code","f732d4e5":"code","f958edb0":"code","fd37c724":"code","5c35d0fc":"code","c8fc7fc4":"code","a1f29b76":"code","cddd2567":"code","d851b512":"code","8b0c4833":"code","e32a5f6a":"code","cd76cce9":"code","6e91ffbe":"code","27bac0ee":"code","3a1a2b56":"code","34d27e09":"code","224a32e5":"code","d0bd8d64":"code","4b5534cb":"code","8956d468":"code","2da475ed":"code","c894ed78":"code","272f6602":"code","13b6d347":"code","62c98bec":"code","9bfae4d1":"code","5c45a689":"code","9de75e27":"code","7dfbc3ec":"code","d30e183b":"code","70b02a70":"code","c3c3304d":"code","24541f7e":"code","89f1616d":"code","267e0def":"code","f38563f0":"code","d1de6ecc":"code","d02b4dfb":"code","802e0c1d":"code","126a2537":"code","4aa129f1":"code","08b41e88":"code","018bd58f":"code","d45df726":"code","5988d0f1":"code","67e508e8":"code","2fbe3229":"code","8f41c834":"code","ff8699fd":"code","09fbcd68":"code","4ff9a8bc":"code","427cb42a":"markdown","5ae6db7f":"markdown","48b901f6":"markdown","a20cc503":"markdown","f807e782":"markdown","99c6b02f":"markdown","e52281ec":"markdown","3cb78a25":"markdown","d364734e":"markdown"},"source":{"e0f23fdc":"import numpy as np \nimport pandas as pd \nimport seaborn as sns \nimport matplotlib.pyplot as plt \nfrom numpy import asarray\nfrom sklearn.preprocessing import OneHotEncoder","c96bf349":"df=pd.read_csv(\"..\/input\/housing\/housing.csv\")\ndf.head(11)","965fe51a":"#### To know the number of samples and features \n#### The first number: 20640 refers to the no. of samples and the second number: 11 refers to the number of features \ndf.shape","1ab64fc8":"print(len(df))","07a61c54":"print(len(df.columns))","f63ed796":"df.info()","1d6038f2":"df.describe()","070a12fd":"df.columns","800d7a3d":"df.corr()","21f1b6da":"plt.figure(figsize=(8,6))\nsns.heatmap(df.corr(),annot=True)","5f3bc9d4":"#### Data Cleaning \n#### Find duplicates \nlen(df)-len(df.drop_duplicates())","a8611ef2":"df=df.drop_duplicates()","ce16ea3e":"len(df)","698076b9":"#### Find if there's missing data  \nnulls=df.isnull().sum()","a76d71c3":"nulls=nulls[nulls > 0]\nnulls","237b25b1":"#Representing nulls\nplt.figure(figsize=(12,10))\nnulls.plot.bar(rot=0)","2ada100e":"df.columns","f05d3cfe":"#### There're only 3 categorical features which are the ocean_proximity, the gender and households.","40cf7e30":"df['ocean_proximity'].unique()","05b2e794":"df['households'].unique()","178cfe9c":"df.drop(\"gender\",axis=1,inplace=True)","f732d4e5":"df.columns","f958edb0":"df.isnull().sum()","fd37c724":"#total_bedrooms nulls = 4882 and sample number = 20640\n#Considering total_bedrooms feature existence \ndf[\"total_bedrooms\"].describe() ","5c35d0fc":"#Representing the outliers of the total_bedrooms\nsns.boxplot(df[\"total_bedrooms\"])","c8fc7fc4":"df[df[\"total_bedrooms\"]>1200]","a1f29b76":"df.drop(\"total_bedrooms\",axis=1,inplace=True)","cddd2567":"df.head()","d851b512":"df.isnull().sum()","8b0c4833":"for i in df.isnull():\n    df[i]=df[i].fillna(method=\"ffill\",axis=0).fillna(0)\n    ","e32a5f6a":"df.head()","cd76cce9":"df.info()","6e91ffbe":"#Converting string value of no to a numerical value to deal with it in the next steps\ndf[\"households\"]=df[\"households\"].replace(['no'],0)","27bac0ee":"df[\"ocean_proximity\"].unique()","3a1a2b56":"df[\"households\"].value_counts()","34d27e09":"#Converting categorical data to a numerical one\ndf[\"households\"]=df[\"households\"].astype(int) ","224a32e5":"df[\"households\"]","d0bd8d64":"df[\"ocean_proximity\"].unique()","4b5534cb":"#Encoding ocean_proximity\n#df=pd.concat([df.drop(\"ocean_proximity\",axis=1),pd.get_dummies(df[\"ocean_proximity\"])],axis=1)\ndf['ocean_proximity'].replace('INLAND', 1 , inplace = True)\ndf['ocean_proximity'].replace('<1H OCEAN', 2 , inplace = True)\ndf['ocean_proximity'].replace('NEAR OCEAN', 3 , inplace = True)\ndf['ocean_proximity'].replace('NEAR BAY', 4 , inplace = True)\ndf['ocean_proximity'].replace('ISLAND', 5 , inplace = True)","8956d468":"df.head()","2da475ed":"#Making sure that the features are numerical and there are no nulls \ndf.info()","c894ed78":"# Converting the population to a numerical value \ndf[\"population\"]=df[\"population\"].astype(int)\ndf.info()","272f6602":"df.info()","13b6d347":"#Representing the dataframe outlaiers\ndf.plot(kind=\"box\",subplots=True,figsize=(18,15),layout=(4,4))\nplt.show()","62c98bec":"df.columns","9bfae4d1":"sns.boxplot(x=df[\"total_rooms\"])","5c45a689":"df = df.drop(df[df['total_rooms']>17000].index)","9de75e27":"sns.boxplot(x=df[\"households\"])","7dfbc3ec":"df=df.drop(df[df['households']>2600].index)","d30e183b":"sns.boxplot(x=df[\"population\"])","70b02a70":"df=df.drop(df[df['population']>7700].index)","c3c3304d":"sns.boxplot(x=df[\"median_income\"])","24541f7e":"df=df.drop(df[df['median_income']>14].index)","89f1616d":"df.plot(kind=\"box\",subplots=True,figsize=(18,15),layout=(4,4))\nplt.show()","267e0def":"df.info()","f38563f0":"#(Total rooms , median house value)\nsns.relplot(data=df,x=df[\"total_rooms\"],y=df[\"median_house_value\"])","d1de6ecc":"#(Total rooms ,population) \nsns.relplot(data=df,x=df[\"total_rooms\"],y=df[\"population\"])","d02b4dfb":"#(median income , median house value )\nsns.relplot(data=df,x=df[\"median_income\"],y=df[\"median_house_value\"])\n","802e0c1d":"x = df.drop(\"median_house_value\" , axis = 1).values\ny = df['median_house_value'].values","126a2537":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y, test_size=0.25 , random_state=42)","4aa129f1":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nx_train = scaler.fit_transform(x_train)\nx_test = scaler.fit_transform(x_test)","08b41e88":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(x_train,y_train)","018bd58f":"lr.score(x_train,y_train)","d45df726":"lr.score(x_test,y_test)","5988d0f1":"from sklearn.linear_model import Ridge\nrid = Ridge()","67e508e8":"rid.fit(x_train,y_train)","2fbe3229":"rid.score(x_train,y_train)","8f41c834":"rid.score(x_test,y_test)","ff8699fd":"y_pred = lr.predict(x_test)\ny_pred2 = rid.predict(x_test)","09fbcd68":"from sklearn.metrics import r2_score\nr2 = r2_score(y_test , y_pred)\nr2","4ff9a8bc":"import statsmodels.api as sm\nfrom scipy import stats\nX2 = sm.add_constant(x)\nest = sm.OLS(y,X2)\nest2 = est.fit()\nprint(est2.summary())","427cb42a":"# - Explore unique values in the dataset \n","5ae6db7f":"# - Modeling","48b901f6":"# - EDA & Data Visualization ","a20cc503":"# - Drop Nulls","f807e782":"# - Drop undesired features","99c6b02f":"## - Data Preprocessing","e52281ec":"# - Data Exploration","3cb78a25":"# - Dealing with outliers","d364734e":"# - Convert to suitable Dtypes"}}