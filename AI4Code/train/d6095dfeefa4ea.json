{"cell_type":{"7f2fd6ff":"code","42a2fe83":"code","1d3778f2":"code","e72fa0ba":"code","ce029836":"code","200c57ae":"code","739aa26b":"code","a048f013":"code","3d7bad7c":"code","73f50077":"code","055e65c0":"code","60c61f0b":"code","ce27af68":"code","fa3b68cd":"code","8f621800":"code","dc4931c0":"code","a96f572e":"code","2a8540ab":"code","b243b864":"code","1136385e":"code","b986ac67":"code","412c5877":"code","18eda97b":"code","ddd3edb2":"code","0e08eda3":"code","446bbf29":"code","21bf49c7":"code","fb00731c":"code","da57f8f7":"code","bf7e7757":"code","d83ea2a7":"code","abe2f16a":"code","bda35507":"code","ae95b5fa":"code","77440168":"code","3d31d0aa":"code","8d0f3861":"code","427f1482":"code","f14f49ec":"code","092757ce":"code","aa8f9cc1":"markdown","36183ab8":"markdown","22051fa4":"markdown","35a0cdfc":"markdown","aa289fb5":"markdown","e8c08b82":"markdown","bf43637c":"markdown","132c379d":"markdown","f73cdded":"markdown","6daaf69f":"markdown","dd2ff0fb":"markdown","b5534412":"markdown","896a5b2b":"markdown","ea8e4085":"markdown","071be877":"markdown","0f09e365":"markdown","098155a2":"markdown","f36f551c":"markdown"},"source":{"7f2fd6ff":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","42a2fe83":"guitar_types=[\"classic\",\"acoustic\",\"bass\",\"electro bass\"]\nbody_types=[\"les paul\",\"telecaster\",\"strat\",\"V\"]\nprices=[\"1000\",\"2000\",\"3000\",\"500\"]\nlist_label=[\"guitar_types\",\"body_types\",\"prices\"]\nlist_columns=[guitar_types,body_types,prices]\nzippedlist=list(zip(list_label,list_columns))\ndatadict=dict(zippedlist)\ndatafr=pd.DataFrame(datadict)\ndatafr","1d3778f2":"datafr[\"string_types\"]=[\"nynlon\",\"nickel\",\"nynlon_nickel\",\"slim nickel\"]\ndatafr","e72fa0ba":"datafr[\"string_number\"]=6\ndatafr","ce029836":"data=pd.read_csv(\"..\/input\/pokemon.csv\")\ndata","200c57ae":"dataplot=data.loc[:,[\"HP\",\"Attack\",\"Defense\"]]\ndataplot.plot()","739aa26b":"dataplot.plot(subplots=True)\nplt.show()","a048f013":"dataplot.plot(kind=\"scatter\",x=\"Attack\",y=\"Defense\")\nplt.show()","3d7bad7c":"dataplot.plot(kind=\"hist\",y=\"HP\",bins=100,range=(0,500),normed = True)\nplt.show() ","73f50077":"fig, axes = plt.subplots(nrows=2,ncols=1)\ndataplot.plot(kind = \"hist\",y = \"Defense\",bins = 50,range= (0,250),normed = True,ax = axes[0])\ndataplot.plot(kind = \"hist\",y = \"Defense\",bins = 50,range= (0,250),normed = True,ax = axes[1],cumulative = True)\nplt.savefig('graph.png')\nplt","055e65c0":"data.describe()","60c61f0b":"timelist=[\"1998-12-10\",\"2005-12-03\",\"2005-12-12\",\"2012-04-22\",\"2023-10-10\"]\nprint(type(timelist[1]))\ndatetimeobject=pd.to_datetime(timelist)\nprint(type(datetimeobject))","ce27af68":"datatimelist=data.head()\ndatatimelist[\"date\"]=datetimeobject\ndatatimelist= datatimelist.set_index(\"date\")\ndatatimelist ","fa3b68cd":"print(datatimelist.loc[\"2005-12-03\"])\nprint(datatimelist.loc[\"2005-12-12\":\"2023-10-10\"])","8f621800":"datatimelist.resample(\"A\").mean()\n ","dc4931c0":"datatimelist.resample(\"M\").mean()","a96f572e":"datatimelist.resample(\"M\").mean().interpolate(\"linear\")","2a8540ab":"data = pd.read_csv('..\/input\/pokemon.csv')\ndata= data.set_index(\"#\")\ndata.head()","b243b864":"data[[\"Type 1\",\"Generation\"]].tail(3)","1136385e":"print(type(data[\"Generation\"]))   #with one bracket it is series   \nprint(type(data[[\"Generation\"]]))  #with two bracket it is data frames","b986ac67":"data.loc[1:56,[\"Defense\",\"Generation\"]]","412c5877":"data.loc[53:43:-1,[\"HP\",\"Type 2\"]]","18eda97b":"filterdata1=data.HP<45 \nfilterdata2=data.Attack<=44\ndata[filterdata1 & filterdata2]","ddd3edb2":"data.HP[data.Legendary==False]","0e08eda3":"def function(x):\n    return x**2\ndata.loc[:,[\"HP\",\"Generation\"]].apply(function)","446bbf29":"data.Generation.apply(lambda n : n*2)","21bf49c7":"data[\"total_power\"] = (data.Attack + data.Defense)\/2\ndata.head()","fb00731c":"print(data.index.name)\ndata.index.name = \"index\"\ndata.head()","da57f8f7":"datacopy=data.copy()\ndatacopy.index=range(100,900,1)\ndatacopy.head(11)","bf7e7757":"newdata=data.set_index([\"Type 1\",\"Type 2\"])\nnewdata.head(10)","d83ea2a7":"dictionry={\"brand\":[\"Mercedes\",\"BMW\",\"AUD\u0130\"],\"model\":[\"AMG\",\"\u01308\",\"A8\"],\"Age\":[1,2,1]}\nx=pd.DataFrame(dictionry)\n","abe2f16a":"x.pivot(index=\"brand\",columns = \"model\",values=\"Age\")\n#This code shows NaN because for example Mercedes have not \u01308 or A8 model.","bda35507":"xx=x.set_index([\"brand\",\"model\"])\n","ae95b5fa":" xx.unstack(level=0)","77440168":"x","3d31d0aa":"pd.melt(x,id_vars=\"brand\",value_vars=[\"Age\",\"model\"])","8d0f3861":"x","427f1482":"x.groupby(\"brand\").mean()","f14f49ec":"x.groupby(\"brand\").Age.max() ","092757ce":"x.groupby(\"brand\")[[\"Age\"]].min() ","aa8f9cc1":"> ***It is for months***","36183ab8":"> ***MANIPULATING DATA FRAMES WITH PANDAS ***","22051fa4":"***VISUAL EXPLORATORY DATA ANALYSIS***","35a0cdfc":">  MELTING DATA FRAMES\n> ","aa289fb5":"> ***FILTERING DATA FRAMES***","e8c08b82":"> ***INDEX OBJECTS AND LABELED DATA***","bf43637c":"> ***SLICING DATA FRAME***","132c379d":"> *** STACKING and UNSTACKING DATAFRAME***","f73cdded":"> ***It is for years.***","6daaf69f":"> ***HIERARCHICAL INDEXING***","dd2ff0fb":"> ***INDEXING PANDAS TIME SERIES***","b5534412":"*Normally some values are not exist but we can fill these empty values with this function.*","896a5b2b":"***BUILDING DATA FRAMES FROM SCRATCH***","ea8e4085":"> ***CATEGORICALS AND GROUPBY***","071be877":"> *** TRANSFORMING DATA> ***","0f09e365":"***STATISTICAL EXPLORATORY DATA ANALYSIS***","098155a2":"> ***PIVOTING DATA FRAMES***","f36f551c":"> ***RESAMPLING PANDAS TIME SERIES***"}}