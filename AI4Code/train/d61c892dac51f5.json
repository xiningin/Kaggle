{"cell_type":{"daaf62ff":"code","654c5b0c":"code","c845c071":"code","623a1c7c":"code","23a307b9":"code","862a3807":"code","eff9896d":"code","825631ec":"code","2cd113d8":"code","4b7b6978":"code","5bef8784":"code","721f9340":"code","bf415e4d":"code","0feb8a2e":"code","06cf2ef5":"code","2bbec25d":"code","cb0c4674":"markdown"},"source":{"daaf62ff":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","654c5b0c":"# DESC_FILE = pd.read_excel('..\/input\/education-statistics\/EdStatsEXCEL.xlsx')","c845c071":"# print(DESC_FILE.shape,DESC_FILE.columns)\n# DESC_FILE.head()","623a1c7c":"# country_series = pd.read_csv('..\/input\/education-statistics\/EdStatsCountry-Series.csv')\n# country = pd.read_csv('..\/input\/education-statistics\/EdStatsCountry.csv')\n# data = pd.read_csv('..\/input\/education-statistics\/EdStatsData.csv')\n# foot_note = pd.read_csv('..\/input\/education-statistics\/EdStatsFootNote.csv')\n# series = pd.read_csv('..\/input\/education-statistics\/EdStatsSeries.csv')","23a307b9":"# country_series = country_series[country_series.columns[:-1]]\n# print(country_series.shape,country_series.columns)\n# country_series.head(10)","862a3807":"# country = country[country.columns[:-1]]\n# print(country.shape,country.columns)\n# country.head(10)","eff9896d":"# data = data[data.columns[:-1]]\n# print(data.shape,data.columns)\n# data.head()","825631ec":"# foot_note = foot_note[foot_note.columns[:-1]]\n# print(foot_note.shape,foot_note.columns)\n# foot_note.head()","2cd113d8":"# series = series[series.columns[:-1]]\n# print(series.shape,series.columns)\n# series.head()","4b7b6978":"gapminder=pd.read_csv('..\/input\/gapminder\/gapminder.tsv', sep='\\t')\ngapminder[gapminder['country']=='China']","5bef8784":"# gapminder.head()\ndf = gapminder[['country', 'year', 'pop']][gapminder['pop']>(gapminder['pop'].max()*0.2)]\ndf.head(20)","721f9340":"# gapminder.isnull().sum()\n# gapminder.duplicated().sum()\n# gapminder.drop_duplicates()\n# gapminder.dropna()\n# gapminder.sample(n=100)","bf415e4d":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(style=\"darkgrid\")","0feb8a2e":"# Initialize a grid of plots with an Axes for each walk\ngrid = sns.FacetGrid(df, col=\"country\", hue=\"country\", palette=\"tab20c\",\n                     col_wrap=4, height=6)\n\n# Draw a horizontal line to show the starting point\ngrid.map(plt.axhline, y=0, ls=\":\", c=\".5\")\n\n# Draw a line plot to show the trajectory of each random walk\ngrid.map(plt.plot, \"year\", \"pop\", marker=\"o\")\n\n# Adjust the tick positions and labels\ngrid.set(xticks=np.arange(12), yticks=[df['pop'].min(), df['pop'].max()],\n         xlim=(1952, 2007), ylim=(df['pop'].min(), df['pop'].max()))\n\n# Adjust the arrangement of the plots\ngrid.fig.tight_layout(w_pad=1)","06cf2ef5":"# g = sns.relplot(x=\"year\", y=\"pop\", kind=\"line\", data=df)\n# g.fig.autofmt_xdate()","2bbec25d":"# Initialize a grid of plots with an Axes for each walk\ngrid = sns.FacetGrid(df, col=\"walk\", hue=\"walk\", palette=\"tab20c\",\n                     col_wrap=4, height=1.5)\n\n# Draw a horizontal line to show the starting point\ngrid.map(plt.axhline, y=0, ls=\":\", c=\".5\")\n\n# Draw a line plot to show the trajectory of each random walk\ngrid.map(plt.plot, \"step\", \"position\", marker=\"o\")\n\n# Adjust the tick positions and labels\ngrid.set(xticks=np.arange(5), yticks=[-3, 3],\n         xlim=(-.5, 4.5), ylim=(-3.5, 3.5))\n\n# Adjust the arrangement of the plots\ngrid.fig.tight_layout(w_pad=1)","cb0c4674":"###\u5c0f\u6837\u672c\u5206\u6790\n\u63cf\u8ff0\u7684\u662f\u5404\u6d32\u5404\u56fd\u5bb61952-2007\u5e73\u5747\u5bff\u547d\u3001\u4eba\u53e3\u3001\u4eba\u5747gdp\u7684\u53d8\u5316"}}