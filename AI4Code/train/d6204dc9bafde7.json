{"cell_type":{"9dd68e2d":"code","04806d4a":"code","9d61a179":"code","c0e8df1e":"code","adef2cee":"code","9da203fc":"code","b213dcb8":"code","246951a8":"code","a77fb131":"code","73e108c6":"code","b5a288b0":"code","b65b4fc7":"code","6dfd0222":"code","3c59090f":"code","f0c42832":"code","e07c0a62":"code","b0b20023":"code","4b72ebbe":"code","2e06c2b8":"code","9b479857":"code","fe7010e6":"code","cd1b2731":"code","ad7dd4a8":"code","fd7a0e65":"code","bbd91d4b":"code","4e18c623":"code","3f840f6b":"code","34a365f7":"code","e54fa22f":"code","66c22aed":"code","632aca67":"code","c804fda8":"code","5f307cbc":"code","db5d6fc6":"code","44b07fbf":"code","6c5cd726":"code","eadd2fe1":"code","241c27f6":"code","84a1ec0e":"code","78137f65":"code","7e223fd0":"code","d715a551":"code","2e6b04bb":"code","286012b2":"code","ec8fad4f":"code","97a0d985":"code","bf4ad964":"code","e83cb6bb":"code","b7e0473a":"code","4e91565e":"code","98d3ae62":"code","eab77f1f":"code","c087c88d":"code","5c0fa729":"code","98f728a6":"code","351e1d57":"code","0ad0b014":"code","6c5582b4":"code","e2dc762d":"code","a96e8262":"code","26bc5c81":"code","34a188d3":"markdown","3983f291":"markdown","a063fb87":"markdown","c355f88e":"markdown","3b60e07f":"markdown","7d41f922":"markdown","e57b2bd0":"markdown","a8eab677":"markdown","078f1e32":"markdown","d41e0113":"markdown","862a3535":"markdown","7a20f09c":"markdown","de4aa7e1":"markdown","671abb12":"markdown","ff03b0b2":"markdown"},"source":{"9dd68e2d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","04806d4a":"pip install xlrd","9d61a179":"pip install openpyxl ","c0e8df1e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","adef2cee":"df_tr=pd.read_csv(\"..\/input\/healthcare-analytics\/Train\/Train.csv\")\ndata = pd.read_excel('..\/input\/healthcare-analytics\/Train\/Data_Dictionary.xlsx')\ncamp = pd.read_csv('..\/input\/healthcare-analytics\/Train\/Health_Camp_Detail.csv')\no_camp = pd.read_csv('..\/input\/healthcare-analytics\/Train\/First_Health_Camp_Attended.csv')\nprofiles = pd.read_csv('..\/input\/healthcare-analytics\/Train\/Patient_Profile.csv')\nt_camp = pd.read_csv('..\/input\/healthcare-analytics\/Train\/Second_Health_Camp_Attended.csv')\nth_camp = pd.read_csv('..\/input\/healthcare-analytics\/Train\/Third_Health_Camp_Attended.csv')\ndf_te=pd.read_csv(\"..\/input\/healthcare-analytics\/Train\/test.csv\")","9da203fc":"df_tr.head()","b213dcb8":"data","246951a8":"camp.head()","a77fb131":"o_camp.head()","73e108c6":"profiles.head()","b5a288b0":"t_camp.head()","b65b4fc7":"th_camp.head()","6dfd0222":"df_te","3c59090f":"df=df_tr.append(df_te)","f0c42832":"df_tr.shape","e07c0a62":"df_te.shape","b0b20023":"df.shape","4b72ebbe":"df=df.merge(th_camp,on=\"Patient_ID\")","2e06c2b8":"df=df.merge(profiles,on=\"Patient_ID\")","9b479857":"df=df.merge(o_camp,on=\"Patient_ID\")","fe7010e6":"df=df.merge(camp,on=\"Health_Camp_ID\")","cd1b2731":"df=df.merge(t_camp,on=\"Patient_ID\")","ad7dd4a8":"df.head()","fd7a0e65":"df.shape","bbd91d4b":"df.columns","4e18c623":"df[\"H_sc\"]=df[\"Health_Score\"]+df[\"Health Score\"]","3f840f6b":"df.shape","34a365f7":"df1=df.drop('Patient_ID',axis=1)","e54fa22f":"df2=df1.drop('Health_Camp_ID_x',axis=1)","66c22aed":"df3=df2.drop('Registration_Date',axis=1)","632aca67":"df4=df3.drop('Health_Camp_ID_y',axis=1)","c804fda8":"df5=df4.drop('Health_Score',axis=1)","5f307cbc":"df6=df5.drop('Camp_Start_Date',axis=1)","db5d6fc6":"df7=df6.drop('Camp_End_Date',axis=1)","44b07fbf":"df8=df7.drop('Health Score',axis=1)","6c5cd726":"df8.head()","eadd2fe1":"df8.columns","241c27f6":"df8.info()","84a1ec0e":"df8.isnull().sum()","78137f65":"df9=df8.drop('Unnamed: 4',axis=1)","7e223fd0":"df9=df9.drop('First_Interaction',axis=1)","d715a551":"df9.City_Type.mode()","2e6b04bb":"df9.Employer_Category.mode()","286012b2":"df9.City_Type.fillna('H',inplace=True)","ec8fad4f":"df9.Employer_Category.fillna('Technology',inplace=True)","97a0d985":"df9.isnull().sum()","bf4ad964":"df9.Income.describe()","e83cb6bb":"df9.info()","b7e0473a":"for col in df9.columns:\n    if df9[col].dtype=='object':\n         plt.pie(df9[col].value_counts(),labels=df9[col].unique())\n         plt.title('Piechart for {}'.format(col))\n         plt.show();\n   \n    else:\n        plt.hist(df9[col].value_counts(),Label=True)\n        plt.title('Histogram for {}'.format(col))\n        plt.show(); \n       ","4e91565e":"for col in df9.columns:\n    if df9[col].dtype=='object':\n        sns.boxplot(x=col, y='H_sc', data=df9)\n        plt.title('Boxplot for {}'.format(col))\n        plt.show();\n    elif col==\"H_sc\":\n        print(\"\")\n    else:\n        sns.scatterplot(x=col, y=\"H_sc\",data=df9)\n        plt.title('Scatterplot for {}'.format(col))\n        plt.show();","98d3ae62":"df9.info()\n","eab77f1f":"df9 = pd.DataFrame(df9)","c087c88d":"df9.info()","5c0fa729":"df9.head()","98f728a6":"df_n=pd.get_dummies(df9, prefix=None, prefix_sep=\"_\",drop_first=True)","351e1d57":"x=df_n.iloc[:,:-1]\ny=df_n.H_sc","0ad0b014":"x.shape","6c5582b4":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = .2,random_state =42)\nx_train.shape","e2dc762d":"x_train.info()","a96e8262":"from sklearn.linear_model import LinearRegression\nmodel=LinearRegression()\nmodel=model.fit(x_train,y_train)\nrsq=model.score(x_train,y_train)\nrsq","26bc5c81":"rsq=model.score(x_test,y_test)\nrsq","34a188d3":"***Understanding the datasets***","3983f291":"***Important Packages***","a063fb87":"**Visualization**","c355f88e":"**Linear regression**","3b60e07f":"***Some packages needed to install in our environment***","7d41f922":"***CALCULATING THE SCORE COLUMNS AS ONE SCORE COLUMN***","e57b2bd0":"***Creating dummies for categorical features***","a8eab677":"***Reading the datasets***","078f1e32":"**We are not proceeding into another model because here its predicting with R_sq=100%**","d41e0113":"***Splitting the train set into train and test set to see our model performance***","862a3535":"***Some mode values***","7a20f09c":"**Differentiating x,y**","de4aa7e1":"**Filling the null values by mode values as it is categorical**","671abb12":"***Merging the needed datasets***","ff03b0b2":"***Dropping the unneeded columns***"}}