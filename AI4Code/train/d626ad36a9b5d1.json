{"cell_type":{"9b5b5669":"code","533e6f15":"code","fcbb6877":"code","0f4b5f6b":"code","c450a065":"code","5ab12267":"code","eaab6cda":"code","da32b74d":"code","53836195":"code","236cb30a":"markdown","d76d9619":"markdown","59dac7ef":"markdown","340cc618":"markdown","e6f63d6b":"markdown","256f5bdc":"markdown","4e098d09":"markdown","661abbf5":"markdown"},"source":{"9b5b5669":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px #graphic library \n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","533e6f15":"df=pd.read_csv(\"\/kaggle\/input\/us-accidents\/US_Accidents_June20.csv\").query(\"State=='CT'\")","fcbb6877":"df.head(5)","0f4b5f6b":"fig = px.density_mapbox(df, lat='Start_Lat', lon='Start_Lng', radius=5, zoom=7,\n                        color_continuous_scale=px.colors.sequential.YlOrRd,\n                        mapbox_style=\"stamen-terrain\")\nfig.update_layout(\n        title = 'Mapbox Density Heatmap - Accidents',\n)\nfig.show()","c450a065":"df['Start_Time']","5ab12267":"df['Start_year']=pd.to_datetime(df['Start_Time'], format='%Y-%m-%d %H:%M:%S').dt.year\ndf['Start_month']=pd.to_datetime(df['Start_Time'], format='%Y-%m-%d %H:%M:%S').dt.month\ndf['Start_day']=pd.to_datetime(df['Start_Time'], format='%Y-%m-%d %H:%M:%S').dt.day\ndf['Start_hour']=pd.to_datetime(df['Start_Time'], format='%Y-%m-%d %H:%M:%S').dt.hour","eaab6cda":"df=df.sort_values('Start_hour')\nfig = px.density_mapbox(df, lat='Start_Lat', lon='Start_Lng', radius=5, zoom=7,\n                        color_continuous_scale=px.colors.sequential.YlOrRd,\n                        mapbox_style=\"stamen-terrain\", animation_frame='Start_hour')\nfig.update_layout(\n        title = 'Mapbox Hourly Density Heatmap - Connecticut - car accidents',\n)\nfig.show()\n","da32b74d":"df=df.sort_values('Start_month')\nfig = px.density_mapbox(df, lat='Start_Lat', lon='Start_Lng', radius=5, zoom=7,\n                        color_continuous_scale=px.colors.sequential.YlOrRd,\n                        mapbox_style=\"stamen-terrain\", animation_frame='Start_month')\nfig.update_layout(\n        title = 'Mapbox Monthly Density Heatmap - Connecticut - car accidents',\n)\nfig.show()","53836195":"df=df.sort_values('Start_year')\nfig = px.density_mapbox(df, lat='Start_Lat', lon='Start_Lng', radius=5, zoom=7,\n                        color_continuous_scale=px.colors.sequential.YlOrRd,\n                        mapbox_style=\"stamen-terrain\", animation_frame='Start_year')\nfig.update_layout(\n        title = 'Mapbox Yearly Density Heatmap - Connecticut - car accidents',\n)\nfig.show()","236cb30a":"## Loading only the state of Connecticut ('CT')","d76d9619":"## Accidents per hour","59dac7ef":"# Density Heatmap for accidents in the Connecticut State","340cc618":"# Load the dataset","e6f63d6b":"Extracting the hour, month and year","256f5bdc":"## Accidents per year","4e098d09":"# Animated Density Heatmap\n\nData preparation to created the animated map using only the year\n","661abbf5":"## Accidents per month"}}