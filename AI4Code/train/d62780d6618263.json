{"cell_type":{"a30ffe5e":"code","b9c1f6da":"code","10ad9f74":"code","654a12ec":"code","b670205f":"code","040d924c":"code","73abff6b":"code","20a4ced0":"code","28c3f602":"code","ea97e650":"code","cccc0298":"code","2d139917":"code","3a58194f":"code","9484ddd7":"code","1a098f4c":"code","0ab53060":"code","8290fa15":"code","19aaedc3":"code","dde95b5f":"code","a4f3885e":"code","931160e8":"code","77150570":"code","b4ccb98e":"code","92816391":"code","6d8a6a57":"code","f33f3513":"code","4a1af416":"code","3bc498c4":"code","32350b24":"code","9d391e07":"code","238f74dc":"code","54b99d75":"markdown","1a9b15ed":"markdown"},"source":{"a30ffe5e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b9c1f6da":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport missingno as msno\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.impute import KNNImputer","10ad9f74":"df = pd.read_csv('..\/input\/cheapest-electric-cars\/Cheapestelectriccars-EVDatabase.csv')\ndf.info()","654a12ec":"df.shape","b670205f":"df.isna().sum()","040d924c":"fig = plt.figure(figsize=(15,7))\nsns.heatmap(df.isna(), yticklabels=False, cmap='YlGnBu')","73abff6b":"df.head()","20a4ced0":"# Cleaning the Price column\ndf['PriceinGermany'] = df['PriceinGermany'].replace({'\\\u20ac': '', ',': ''}, regex=True).astype(float)","28c3f602":"df['PriceinUK'] = df['PriceinUK'].replace({'\\\u00a3': '', ',': ''}, regex=True).astype(float)","ea97e650":"df['Subtitle'].isna().sum()","cccc0298":"df = df.replace('-', np.nan)","2d139917":"df.isna().sum()","3a58194f":"#Acceleration\tTopSpeed\tRange\tEfficiency\tFastChargeSpeed\ndf['Acceleration'] = df['Acceleration'].replace({'sec': ''}, regex=True).astype(float)\ndf['TopSpeed'] = df['TopSpeed'].replace({'km\/h': ''}, regex=True).astype(float)\ndf['Range'] = df['Range'].replace({'km': ''}, regex=True).astype(float)\ndf['Efficiency'] = df['Efficiency'].replace({'Wh\/km': ''}, regex=True).astype(float)\ndf['FastChargeSpeed'] = df['FastChargeSpeed'].replace({'km\/h': '', ',': ''}, regex=True).astype(float)","9484ddd7":"df.head()","1a098f4c":"df['Subtitle'] = df['Subtitle'].replace({'Battery Electric Vehicle |       ': '', ' kWh': ''}, regex=True).str[1:]","0ab53060":"df.head()","8290fa15":"df['Drive'].unique()","19aaedc3":"df['Drive'] = df['Drive'].replace({'Front Wheel Drive': '0', 'All Wheel Drive': '1','Rear Wheel Drive':\"2\" }, regex=True).astype(float)","dde95b5f":"df.head()","a4f3885e":"corr_ = df.corr()\n\nf,ax = plt.subplots(figsize=(25, 10))\nsns.heatmap(corr_,annot=True, linewidths=0.5, cmap=\"YlGnBu\", fmt= '.1f',ax=ax)\nplt.show()","931160e8":"df['PriceinGermany'].fillna(df['PriceinGermany'].mean(), inplace = True)\ndf = df.rename(columns={'PriceinGermany':'PriceinGermany(in K)'}) ","77150570":"df['PriceinGermany(in K)'] = df['PriceinGermany(in K)']\/1000","b4ccb98e":"df.head()","92816391":"df = df.rename(columns={'PriceinUK':'PriceinUK(in K)'})","6d8a6a57":"df['PriceinUK(in K)'] = df['PriceinUK(in K)'] \/ 1000","f33f3513":"df['PriceinUK(in K)'].fillna(df['PriceinUK(in K)'].mean(), inplace = True)","4a1af416":"df['FastChargeSpeed'].fillna(df['FastChargeSpeed'].mean(), inplace = True)","3bc498c4":"import seaborn as sns\nimport matplotlib.pyplot as plt","32350b24":"sns.lineplot(x=\"FastChargeSpeed\", y=\"PriceinUK(in K)\", data = df)\nplt.show()","9d391e07":"sns.lineplot(x=\"PriceinGermany(in K)\", y=\"PriceinUK(in K)\", data = df)\nplt.show()","238f74dc":"dims = (16, 9)\nfig, ax = plt.subplots(figsize= dims)\nsns.color_palette(\"mako\", as_cmap=True)\nsns.lineplot(data=df, x=\"TopSpeed\", y=\"PriceinGermany(in K)\", hue=\"Drive\",palette = \"magma\")","54b99d75":"### Importing Libraries","1a9b15ed":"To improve the model lets change df['Drive'] to a meaningful column by replacing 'Front Wheel Drive', 'All Wheel Drive', 'Rear Wheel Drive' with 0, 1, 2 respectively."}}