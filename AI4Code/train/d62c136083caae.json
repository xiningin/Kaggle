{"cell_type":{"992881fe":"code","ceb32ea0":"code","9afbfc00":"code","54e1769a":"code","6df07483":"code","a06b33a0":"code","b8547f35":"code","3fbe23e9":"code","63134752":"code","8d0f0bf5":"code","2a7a0019":"code","efc9e804":"code","43f3a0b2":"code","0a6f8fbd":"code","850a6625":"code","a4e3e83d":"code","5dbcb32e":"code","fe813bfd":"code","17322bef":"code","99830a73":"code","b12cc01f":"code","9ed6852c":"code","c27bb77b":"code","83c64b17":"code","398295e7":"code","8321a715":"code","a2688032":"code","5ee010ba":"code","9c92b912":"code","c502d146":"code","d8aed1c3":"code","7f93f429":"code","adaabb66":"code","bf5f7443":"code","4c39b58a":"code","d2ccab53":"code","d041b247":"markdown","52aa8248":"markdown","8ceffbbb":"markdown","e4679492":"markdown"},"source":{"992881fe":"# Importing the packages","ceb32ea0":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom itertools import combinations\nimport statistics\nimport time\nfrom datetime import datetime\nimport matplotlib.dates as mdates\n\nfrom warnings import filterwarnings\nfilterwarnings('ignore')","9afbfc00":"# READ A COMMA-SEPARETED VALUES (CSV)FILE INTO PANDAS DATA FRAME.\n","54e1769a":"train=pd.read_csv('..\/input\/tabular-playground-series-jan-2022\/train.csv')\ntrain.head(10)","6df07483":"copy=pd.read_csv('..\/input\/tabular-playground-series-jan-2022\/test.csv')\ncopy.head(10)","a06b33a0":"test=pd.read_csv('..\/input\/tabular-playground-series-jan-2022\/test.csv')\ntest.head(10)","b8547f35":"# concise summary of dataset\ntrain.info()","3fbe23e9":"# COUNT THE NUMBER OF ROWS AND COLUMNS IN THE TRAIN DATASET AND TEST DATASET.\nprint(train.shape)\nprint(test.shape)\n","63134752":"#LOOK AT THE COLUMNS OF TRAIN DATASET AND TEST DATASET.\nprint(train.columns)\nprint(test.columns)","8d0f0bf5":"train.isnull().sum()","2a7a0019":"train.set_index(\"row_id\",inplace=True)\ntrain.head()","efc9e804":"test.set_index(\"row_id\",inplace=True)\ntest.head()","43f3a0b2":"# change date datatype to datatime \ntrain['date'] = pd.to_datetime(train.date, format = \"%Y-%m-%d\")\ntest['date'] = pd.to_datetime(test.date, format = \"%Y-%m-%d\")","0a6f8fbd":"#Add day of week Monday:0 Sunday:6\n\ndayOfWeek={'Monday':0, 'Tuesday':1, 'Wednesday':2, 'Thursday':3, 'Friday':4, 'Saturday':5, 'Sunday':6}\ntrain['day_of_week'] = train['date'].dt.day_name().map(dayOfWeek)\ntest['day_of_week'] = test['date'].dt.day_name().map(dayOfWeek)","850a6625":"train['weekend'] = [1 if a in [4,5,6] else 0 for a in train['day_of_week']]\ntest['weekend'] = [1 if a in [4,5,6] else 0 for a in test['day_of_week']]\n","a4e3e83d":"train","5dbcb32e":"test=test.drop([\"date\"],axis=1)\ntest.head()","fe813bfd":"train=train.drop([\"date\"],axis=1)\ntrain.head()","17322bef":"sns.displot(data=train,x='num_sold')\n","99830a73":"print(test.columns)\nprint(train.columns)","b12cc01f":"sns.countplot(x=\"country\",data=train)","9ed6852c":"sns.countplot(x=\"store\",data=train)","c27bb77b":"sns.countplot(x=\"product\",data=train)","83c64b17":"#converting string values(Categorical Values) to integer\ntrain[\"product\"]=train[\"product\"].replace({\"Kaggle Mug\":0,\"Kaggle Hat\":1,\"Kaggle Sticker\":2})\ntrain[\"store\"]=train[\"store\"].replace({\"KaggleMart\":0,\"KaggleRama\":1})\ntrain[\"country\"]=train[\"country\"].replace({\"Finland\":0,\"Norway\":1,\"Sweden\":2})\ntrain.head()","398295e7":"#converting string values(Categorical Values) to integer in test data\ntest[\"product\"]=test[\"product\"].replace({\"Kaggle Mug\":0,\"Kaggle Hat\":1,\"Kaggle Sticker\":2})\ntest[\"store\"]=test[\"store\"].replace({\"KaggleMart\":0,\"KaggleRama\":1})\ntest[\"country\"]=test[\"country\"].replace({\"Finland\":0,\"Norway\":1,\"Sweden\":2})\ntest.head()","8321a715":"test.isnull().sum()","a2688032":"train.isnull().sum()","5ee010ba":"from sklearn.model_selection import train_test_split","9c92b912":"x_train,x_test,y_train,y_test=train_test_split(\n     train.drop([\"num_sold\"],axis=1),\n     train.num_sold,test_size=0.15,\n     random_state=123,shuffle =True)","c502d146":"# Fitting XGBoost to the training data\nfrom xgboost import XGBClassifier","d8aed1c3":"\nmy_model = XGBClassifier(learning_rate=0.3,\n                      tree_method='gpu_hist',\n                      random_state=0)\nmy_model.fit(x_train, y_train)\n\n","7f93f429":"# Predicting the Test results\ny_pred = my_model.predict(x_test)","adaabb66":"# validation accuracy\nfrom sklearn.metrics import accuracy_score\nprint('Accuracy Score : ',accuracy_score(y_test, y_pred))","bf5f7443":"# test prediction\ny_pred = my_model.predict(test)\n","4c39b58a":"y_pred","d2ccab53":"#Final submission\nsubmission=pd.DataFrame({\"row_id\":copy[\"row_id\"],\"num_sold\":y_pred})\nsubmission.to_csv ('submission.csv',index = False)","d041b247":"# Data Modelling","52aa8248":"# Tabular Playground Series January","8ceffbbb":"# Converting Categorical values","e4679492":"# XG Boost Classifier"}}