{"cell_type":{"76942ace":"code","b2267f61":"code","fd6b4b15":"code","907eec58":"code","e034df1f":"code","8763ee33":"code","2a9c111d":"code","42f2286d":"code","e6561e38":"code","eb7f7700":"markdown","09cbfbfc":"markdown","95e85af1":"markdown","cc1e7189":"markdown","b305b166":"markdown"},"source":{"76942ace":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b2267f61":"import pandas as pd\nimport numpy as np\n%matplotlib inline","fd6b4b15":"df = pd.read_csv('..\/input\/electric-production\/Electric_Production.csv', index_col='DATE', parse_dates=True)\ndf.index.freq = 'MS'\ndf.head()","907eec58":"df.plot(figsize=(15,8), lw=2, grid=True, legend=True);","e034df1f":"# ETS Decomposition\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nresult = seasonal_decompose(df['Value'], model='mul')\nresult.plot();","8763ee33":"df['SMA 12'] = df['Value'].rolling(window=12).mean()\ndf['EWMA 12'] = df['Value'].ewm(span=12,adjust=False).mean()\ndf.plot(figsize=(15,8), lw=2, grid=True, legend=True);","2a9c111d":"from statsmodels.tsa.holtwinters import ExponentialSmoothing\n\ndf['DES 12'] = ExponentialSmoothing(df['Value'], trend='mul', seasonal_periods=12).fit().fittedvalues.shift(-1)\ndf.plot(figsize=(15,8), lw=2, grid=True, legend=True);","42f2286d":"df['TES 12'] = ExponentialSmoothing(df['Value'],trend='mul',seasonal='mul',seasonal_periods=12).fit().fittedvalues\ndf.head(20)","e6561e38":"df.plot(figsize=(15,8), lw=2, grid=True, legend=True);","eb7f7700":"**Note - It can be observed that by using 4 basic forecasting models in this time series dataset, The Double Exponential Smoothing Model (Holts Model) is giving the best results.","09cbfbfc":"# 4. Triple Exponential Smoothing - Holts Winter Model - Seasonal Trend Model","95e85af1":"# 3. Double Exponential Smoothing - Holts Model","cc1e7189":"# 2. Simple Moving Average and Exponential Weighted Moving Average","b305b166":"# 1. ETS Decomposition"}}