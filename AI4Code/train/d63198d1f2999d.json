{"cell_type":{"7531ffcd":"code","c3983ff5":"code","bd54ba87":"code","83896826":"code","ad6ab72e":"code","77241bd5":"code","454b3eb0":"code","e7803623":"markdown"},"source":{"7531ffcd":"import numpy as np\nimport pandas as pd\nfrom sklearn.cluster import KMeans\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c3983ff5":"%%time\ntrain = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/test.csv')\nsample_submission = pd.read_csv('\/kaggle\/input\/tabular-playground-series-oct-2021\/sample_submission.csv')\n\nmemory_usage = train.memory_usage(deep=True) \/ 1024 ** 2\nstart_mem = memory_usage.sum()","bd54ba87":"%%time\nfeature_cols = [col for col in test.columns.tolist()]\nuseful_features = [\"f22\",\"f179\",\"f69\",\"f156\",\"f58\",\"f136\",\"f214\"]\nn_clusters_1 = 12\ncd_feature = True # cluster distance instead of cluster number\ncluster_cols = [f\"cluster{i+1}\" for i in range(n_clusters_1)]\nkmeans = KMeans(n_clusters=n_clusters_1, init=\"k-means++\", max_iter=500, random_state=42)\n\nif cd_feature:\n    # train\n    X_cd = kmeans.fit_transform(train[useful_features])\n    X_cd = pd.DataFrame(X_cd, columns=cluster_cols, index=train.index)\n    train = train.join(X_cd)\n    # test\n    X_cd = kmeans.transform(test[useful_features])\n    X_cd = pd.DataFrame(X_cd, columns=cluster_cols, index=test.index)\n    test = test.join(X_cd)\n    \nelse:\n    # train\n    train[\"cluster\"] = kmeans.fit_predict(train[useful_features])\n    # test\n    test[\"cluster\"] = kmeans.predict(test[useful_features])\n    \n    # one-hot encode\n    ohe = OneHotEncoder()\n    X_ohe = ohe.fit_transform(np.array(train[\"cluster\"]).reshape(-1,1)).toarray()\n    T_ohe = ohe.transform(np.array(test[\"cluster\"]).reshape(-1,1)).toarray()\n\n    X_ohe = pd.DataFrame(X_ohe, columns=cluster_cols, index=train.index)\n    T_ohe = pd.DataFrame(T_ohe, columns=cluster_cols, index=test.index)\n\n    train = pd.concat([train, X_ohe],axis=1)\n    test = pd.concat([test, T_ohe],axis=1)\n\nfeature_cols += cluster_cols\ntrain.head()","83896826":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')\nfig = plt.figure(figsize = (10,5))\n\nif cd_feature:\n    sns.kdeplot(data=train[cluster_cols])\nelse:\n    ax = sns.countplot(data=train, x='cluster', hue=\"target\")\n    for p in ax.patches:\n        ax.annotate(f'\\n{p.get_height()}', (p.get_x()+0.2, p.get_height()), ha='center', va='top', color='white', size=5)\n\nplt.show()","ad6ab72e":"def add_feature(df):\n    df[\"new_f1\"] = (df[\"cluster1\"])\/(df[\"cluster12\"])\n    df[\"new_f2\"] = (df[\"cluster1\"])\/(df[\"cluster11\"])\n    df[\"new_f3\"] = (df[\"cluster1\"])\/(df[\"cluster10\"])\n    df[\"new_f4\"] = (df[\"cluster1\"])\/(df[\"cluster9\"])\n    df[\"new_f5\"] = (df[\"cluster1\"])\/(df[\"cluster8\"])\n    df[\"new_f6\"] = (df[\"cluster1\"])\/(df[\"cluster7\"])\n    df[\"new_f7\"] = (df[\"cluster1\"])\/(df[\"cluster6\"])\n    df[\"new_f8\"] = (df[\"cluster1\"])\/(df[\"cluster5\"])\n    df[\"new_f9\"] = (df[\"cluster1\"])\/(df[\"cluster4\"])\n    df[\"new_f10\"] = (df[\"cluster1\"])\/(df[\"cluster3\"])\n    df[\"new_f11\"] = (df[\"cluster1\"])\/(df[\"cluster2\"])\n    df[\"new_f12\"] = (df[\"cluster2\"])\/(df[\"cluster12\"])\n    df[\"new_f13\"] = (df[\"cluster2\"])\/(df[\"cluster11\"])\n    df[\"new_f14\"] = (df[\"cluster2\"])\/(df[\"cluster10\"])\n    df[\"new_f15\"] = (df[\"cluster2\"])\/(df[\"cluster9\"])\n    df[\"new_f16\"] = (df[\"cluster2\"])\/(df[\"cluster8\"])\n    df[\"new_f17\"] = (df[\"cluster2\"])\/(df[\"cluster7\"])\n    df[\"new_f18\"] = (df[\"cluster2\"])\/(df[\"cluster6\"])\n    df[\"new_f19\"] = (df[\"cluster2\"])\/(df[\"cluster5\"])\n    df[\"new_f20\"] = (df[\"cluster2\"])\/(df[\"cluster4\"])\n    df[\"new_f21\"] = (df[\"cluster2\"])\/(df[\"cluster3\"])\n    df[\"new_f22\"] = (df[\"cluster3\"])\/(df[\"cluster12\"])\n    df[\"new_f23\"] = (df[\"cluster3\"])\/(df[\"cluster11\"])\n    df[\"new_f24\"] = (df[\"cluster3\"])\/(df[\"cluster10\"])\n    df[\"new_f25\"] = (df[\"cluster3\"])\/(df[\"cluster9\"])\n    df[\"new_f26\"] = (df[\"cluster3\"])\/(df[\"cluster8\"])\n    df[\"new_f27\"] = (df[\"cluster3\"])\/(df[\"cluster7\"])\n    df[\"new_f28\"] = (df[\"cluster3\"])\/(df[\"cluster6\"])\n    df[\"new_f29\"] = (df[\"cluster3\"])\/(df[\"cluster5\"])\n    df[\"new_f30\"] = (df[\"cluster3\"])\/(df[\"cluster4\"])\n    df[\"new_f31\"] = (df[\"cluster4\"])\/(df[\"cluster12\"])\n    df[\"new_f32\"] = (df[\"cluster4\"])\/(df[\"cluster11\"])\n    df[\"new_f33\"] = (df[\"cluster4\"])\/(df[\"cluster10\"])\n    df[\"new_f34\"] = (df[\"cluster4\"])\/(df[\"cluster9\"])\n    df[\"new_f35\"] = (df[\"cluster4\"])\/(df[\"cluster8\"])\n    df[\"new_f36\"] = (df[\"cluster4\"])\/(df[\"cluster7\"])\n    df[\"new_f37\"] = (df[\"cluster4\"])\/(df[\"cluster6\"])\n    df[\"new_f38\"] = (df[\"cluster4\"])\/(df[\"cluster5\"])\n    df[\"new_f39\"] = (df[\"cluster5\"])\/(df[\"cluster12\"])\n    df[\"new_f40\"] = (df[\"cluster5\"])\/(df[\"cluster11\"])\n    df[\"new_f41\"] = (df[\"cluster5\"])\/(df[\"cluster10\"])\n    df[\"new_f42\"] = (df[\"cluster5\"])\/(df[\"cluster9\"])\n    df[\"new_f43\"] = (df[\"cluster5\"])\/(df[\"cluster8\"])\n    df[\"new_f44\"] = (df[\"cluster5\"])\/(df[\"cluster7\"])\n    df[\"new_f45\"] = (df[\"cluster5\"])\/(df[\"cluster6\"])\n    df[\"new_f46\"] = (df[\"cluster6\"])\/(df[\"cluster12\"])\n    df[\"new_f47\"] = (df[\"cluster6\"])\/(df[\"cluster11\"])\n    df[\"new_f48\"] = (df[\"cluster6\"])\/(df[\"cluster10\"])\n    df[\"new_f49\"] = (df[\"cluster6\"])\/(df[\"cluster9\"])\n    df[\"new_f50\"] = (df[\"cluster6\"])\/(df[\"cluster8\"])\n    df[\"new_f51\"] = (df[\"cluster6\"])\/(df[\"cluster7\"])\n    df[\"new_f52\"] = (df[\"cluster7\"])\/(df[\"cluster12\"])\n    df[\"new_f53\"] = (df[\"cluster7\"])\/(df[\"cluster11\"])\n    df[\"new_f54\"] = (df[\"cluster7\"])\/(df[\"cluster10\"])\n    df[\"new_f55\"] = (df[\"cluster7\"])\/(df[\"cluster9\"])\n    df[\"new_f56\"] = (df[\"cluster7\"])\/(df[\"cluster8\"])\n    df[\"new_f57\"] = (df[\"cluster8\"])\/(df[\"cluster12\"])\n    df[\"new_f58\"] = (df[\"cluster8\"])\/(df[\"cluster11\"])\n    df[\"new_f59\"] = (df[\"cluster8\"])\/(df[\"cluster10\"])\n    df[\"new_f60\"] = (df[\"cluster8\"])\/(df[\"cluster9\"])\n    df[\"new_f61\"] = (df[\"cluster9\"])\/(df[\"cluster12\"])\n    df[\"new_f62\"] = (df[\"cluster9\"])\/(df[\"cluster11\"])\n    df[\"new_f63\"] = (df[\"cluster9\"])\/(df[\"cluster10\"])\n    df[\"new_f64\"] = (df[\"cluster10\"])\/(df[\"cluster12\"])\n    df[\"new_f65\"] = (df[\"cluster10\"])\/(df[\"cluster11\"])\n    df[\"new_f66\"] = (df[\"cluster11\"])\/(df[\"cluster12\"])\n    return df\n\nnew_features = [\"new_f1\",\"new_f2\",\"new_f3\",\"new_f4\",\"new_f5\",\"new_f6\",\"new_f7\",\"new_f8\",\"new_f9\",\"new_f10\"\\\n               ,\"new_f11\",\"new_f12\",\"new_f13\",\"new_f14\",\"new_f15\",\"new_f16\",\"new_f17\",\"new_f18\",\"new_f19\",\"new_f20\"\\\n               ,\"new_f21\",\"new_f22\",\"new_f23\",\"new_f24\",\"new_f25\",\"new_f26\",\"new_f27\",\"new_f28\",\"new_f29\",\"new_f30\"\\\n               ,\"new_f31\",\"new_f32\",\"new_f33\",\"new_f34\",\"new_f35\",\"new_f36\",\"new_f37\",\"new_f38\",\"new_f39\",\"new_f40\"\\\n               ,\"new_f41\",\"new_f42\",\"new_f43\",\"new_f44\",\"new_f45\",\"new_f46\",\"new_f47\",\"new_f48\",\"new_f49\",\"new_f50\"\\\n               ,\"new_f51\",\"new_f52\",\"new_f53\",\"new_f54\",\"new_f55\",\"new_f56\",\"new_f57\",\"new_f58\",\"new_f59\",\"new_f60\"\n               ,\"new_f61\",\"new_f62\",\"new_f63\",\"new_f64\",\"new_f65\",\"new_f66\"]\ntrain = add_feature(train)\ntest = add_feature(test)\nfeature_cols += new_features\ntrain.head()","77241bd5":"%%time\nfrom sklearn.feature_selection import mutual_info_regression\nx = train.iloc[:5000,:][feature_cols].copy()\ny = train.iloc[:5000,:]['target'].copy()\nmi_scores = mutual_info_regression(x, y)\nmi_scores = pd.Series(mi_scores, name=\"MI Scores\", index=x.columns)\nmi_scores = mi_scores.sort_values(ascending=False)","454b3eb0":"import plotly.figure_factory as ff\nimport plotly.express as px\ntop = 20\nfig = px.bar(mi_scores, x=mi_scores.values[:top], y=mi_scores.index[:top])\nfig.update_layout(\n    title=f\"Top {top} Strong Relationships Between Feature Columns and Target Column\",\n    xaxis_title=\"Relationship with Target\",\n    yaxis_title=\"Feature Columns\",\n    yaxis={'categoryorder':'total ascending'},\n    colorway=[\"blue\"]\n)\nfig.show()","e7803623":"collum\u8ffd\u52a0"}}