{"cell_type":{"396f6e42":"code","ab03dec2":"code","fd94fba7":"code","c1f1ddb9":"code","28b264d2":"code","081fd5cb":"code","65668f20":"code","9d28fa14":"code","d17acc57":"code","eba7bdcf":"code","91f7b616":"code","8c45443b":"code","62f4e867":"code","a6ed025d":"code","be065375":"code","e98199ed":"code","5764b04a":"code","f2d02b98":"markdown","ff6f36cf":"markdown","e855ad69":"markdown","9cf305fb":"markdown","0a4cdfb7":"markdown","c60ec901":"markdown","6b4924fd":"markdown","c16222a3":"markdown","2350065c":"markdown","1bc26e74":"markdown","429d6621":"markdown","77c51588":"markdown","97b090e5":"markdown","226515ac":"markdown","31a04e93":"markdown","6133fbbd":"markdown","e2f72410":"markdown"},"source":{"396f6e42":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\n\ndata = pd.read_csv('..\/input\/fifa-2018-match-statistics\/FIFA 2018 Statistics.csv')\ny = (data['Man of the Match'] == \"Yes\")  # Convert from string \"Yes\"\/\"No\" to binary\nfeature_names = [i for i in data.columns if data[i].dtype in [np.int64, np.int64]]\nX = data[feature_names]\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1)\nmy_model = RandomForestClassifier(random_state=0).fit(train_X, train_y)","ab03dec2":"import shap  # package used to calculate Shap values\n\n# Create object that can calculate shap values\nexplainer = shap.TreeExplainer(my_model)\n\n# calculate shap values. This is what we will plot.\n# Calculate shap_values for all of val_X rather than a single row, to have more data for plot.\nshap_values = explainer.shap_values(val_X)\n\n# Make plot. Index of [1] is explained in text below.\nshap.summary_plot(shap_values[1], val_X)","fd94fba7":"import shap  # package used to calculate Shap values\n\n# Create object that can calculate shap values\nexplainer = shap.TreeExplainer(my_model)\n\n# calculate shap values. This is what we will plot.\nshap_values = explainer.shap_values(X)\n\n# make plot.\nshap.dependence_plot('Ball Possession %', shap_values[1], X, interaction_index=\"Goal Scored\")","c1f1ddb9":"import numpy as np\nimport pandas as pd\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\nimport shap\n\n# Environment Set-Up for feedback system.\nimport sys\nsys.path.append('..\/input\/ml-insights-tools')\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom ex5 import *\nprint(\"Setup Complete\")\n\n\nimport pandas as pd\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\n\ndata = pd.read_csv('..\/input\/hospital-readmissions\/train.csv')\ny = data.readmitted\nbase_features = ['number_inpatient', 'num_medications', 'number_diagnoses', 'num_lab_procedures', \n                 'num_procedures', 'time_in_hospital', 'number_outpatient', 'number_emergency', \n                 'gender_Female', 'payer_code_?', 'medical_specialty_?', 'diag_1_428', 'diag_1_414', \n                 'diabetesMed_Yes', 'A1Cresult_None']\n\n# Some versions of shap package error when mixing bools and numerics\nX = data[base_features].astype(float)\n\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1)\n\n# For speed, we will calculate shap values on smaller subset of the validation data\nsmall_val_X = val_X.iloc[:150]\nmy_model = RandomForestClassifier(n_estimators=30, random_state=1).fit(train_X, train_y)","28b264d2":"data.describe()","081fd5cb":"explainer = shap.TreeExplainer(my_model)\nshap_values = explainer.shap_values(small_val_X)\n\nshap.summary_plot(shap_values[1], small_val_X)","65668f20":"# set following variable to 'diag_1_428' or 'payer_code_?'\nfeature_with_bigger_range_of_effects = 'diag_1_428'\nq_1.check()","9d28fa14":"#q_1.solution()","d17acc57":"q_2.solution()","eba7bdcf":"shap.summary_plot(shap_values[1], small_val_X)","91f7b616":"# Set following var to \"diag_1_428\" if changing it to 1 has bigger effect.  Else set it to 'payer_code_?'\nbigger_effect_when_changed = 'diag_1_428'\nq_3.check()","8c45443b":"#q_3.solution()","62f4e867":"q_4.solution()","a6ed025d":"q_5.solution()","be065375":"shap.summary_plot(shap_values[1], small_val_X)","e98199ed":"shap.dependence_plot('num_lab_procedures', shap_values[1], small_val_X)\nshap.dependence_plot('num_medications', shap_values[1], small_val_X)","5764b04a":"q_6.solution()","f2d02b98":"The code isn't too complex. But there are a few caveats.\n\n- When plotting, we call `shap_values[1]`.  For classification problems, there is a separate array of SHAP values for each possible outcome. In this case, we index in to get the SHAP values for the prediction of \"True\".\n- Calculating SHAP values can be slow. It isn't a problem here, because this dataset is small.  But you'll want to be careful when running these to plot with reasonable sized datasets.  The exception is when using an `xgboost` model, which SHAP has some optimizations for and which is thus much faster.\n\n# SHAP Dependence Contribution Plots\n\nWe've previously used Partial Dependence Plots to show how a single feature impacts predictions. These are insightful and relevant for many real-world use cases. Plus, with a little effort, they can be explained to a non-technical audience. But there's a lot they don't show.  For instance, what is the distribution of effects? Is the effect of having a certain value pretty constant, or does it vary a lot depending on the values of other feaures. SHAP dependence contribution plots provide a similar insight to PDP's, but they add a lot more detail.\n\n![Imgur](https:\/\/i.imgur.com\/uQ2JmBm.png)\n\nStart by focusing on the shape, and we'll come back to color in a minute.  Each dot represents a row of the data. The horizontal location is the actual value from the dataset, and the vertical location shows what having that value did to the prediction.  The fact this slopes upward says that the more you possess the ball, the higher the model's prediction is for winning the *Man of the Game* award. The spread suggests that other features must interact with Ball Possession %.  For example, here we have highlighted two points with similar ball possession values. That value caused one prediction to increase, and it caused the other prediction to decrease.\n\n![Imgur](https:\/\/i.imgur.com\/tFzp6jc.png)\n\nFor comparison, a simple linear regression would produce plots that are perfect lines, without this spread. This suggests we delve into the interactions, and the plots include color coding to help do that. While the primary trend is upward, you can visually inspect whether that varies by dot color. Consider the following very narrow example for concreteness.\n\n![Imgur](https:\/\/i.imgur.com\/NVB3eNW.png)\n\nThese two points stand out spatially as being far away from the upward trend. They are both colored purple, indicating the team scored one goal. You can interpret this to say **In general, having the ball increases a team's chance of having their player win the award. But if they only score one goal, that trend reverses and the award judges may penalize them for having the ball so much if they score that little.**\n\nOutside of those few outliers, the interaction indicated by color isn't very dramatic here. But sometimes it will jump out at you.\n\n# Dependence Contribution Plots in Code\nWe get the dependence contribution plot with the following code. The only line that's different from the `summary_plot` is the last line.","ff6f36cf":"For a solution and explanation, uncomment the line below","e855ad69":"Uncomment the line below to see the solution and explanation","9cf305fb":"## Question 3\n\nBoth `diag_1_428` and `payer_code_?` are binary variables, taking values of 0 or 1.\n\nFrom the graph, which do you think would typically have a bigger impact on predicted readmission risk:\n- Changing `diag_1_428` from 0 to 1\n- Changing `payer_code_?` from 0 to 1\n\nTo save you scrolling, we have included a cell below to plot the graph again (this one runs quickly).","0a4cdfb7":"## Question 2\n\nDo you believe the range of effects sizes (distance between smallest effect and largest effect) is a good indication of which feature will have a higher permutation importance? Why or why not?  \n\nIf the **range of effect sizes** measures something different from **permutation importance**: which is a better answer for the question \"Which of these two features does the model say is more important for us to understand when discussing readmission risks in the population?\"\n\nUncomment the following line after you've decided your answer.","c60ec901":"## Question 5\n\nConsider the following SHAP contribution dependence plot. \n\nThe x-axis shows `feature_of_interest` and the points are colored based on `other_feature`.\n\n![Imgur](https:\/\/i.imgur.com\/zFdHneM.png)\n\nIs there an interaction between `feature_of_interest` and `other_feature`?  \nIf so, does `feature_of_interest` have a more positive impact on predictions when `other_feature` is high or when `other_feature` is low?\n\nUncomment the following code when you are ready for the answer.\n","6b4924fd":"## Question 4\n\nSome features (like `number_inpatient`) have reasonably clear separation between the blue and pink dots. Other variables like `num_lab_procedures` have blue and pink dots jumbled together, even though the SHAP values (or impacts on prediction) aren't all 0.\n\nWhat do you think you learn from the fact that `num_lab_procedures` has blue and pink dots jumbled together? Once you have your answer, uncomment the line below to verify your solution.","c16222a3":"## Question 6\n\nReview the summary plot for the readmission data by running the following cell:","2350065c":"The first few questions require examining the distribution of effects for each feature, rather than just an average effect for each feature.  Run the following cell for a summary plot of the shap_values for readmission. It will take about 20 seconds to run.","1bc26e74":"Both **num_medications** and **num_lab_procedures** share that jumbling of pink and blue dots.\n\nAside from `num_medications` having effects of greater magnitude (both more positive and more negative), it's hard to see a meaningful difference between how these two features affect readmission risk.  Create the SHAP dependence contribution plots for each variable, and describe what you think is different between how these two variables affect predictions.\n\nAs a reminder, here is the code you previously saw to create this type of plot.\n\n    shap.dependence_plot(feature_of_interest, shap_values[1], val_X)\n    \nAnd recall that your validation data is called `small_val_X`.","429d6621":"![](http:\/\/)Now we'll expand on SHAP values, seeing how aggregating many SHAP values can give more detailed alternatives to permutation importance and partial dependence plots.\n\n# SHAP Values Review\n\nShap values show how much a given feature changed our prediction (compared to if we made that prediction at some baseline value of that feature).\n\nFor example, consider an ultra-simple model.\n    $$y = 4 * x1 + 2 * x2$$\n\nIf $x1$ takes the value 2, instead of a baseline value of 0, then our SHAP value for $x1$ would be 8 (from 4 times 2)...\n\nThese are harder to calculate with the sophisticated models we use in practice. But through some algorithmic cleverness, Shap values allow us to decompose any prediction into the sum of effects of each feature value, yielding a graph like this:\n\n![Imgur](https:\/\/i.imgur.com\/JVD2U7k.png)\n\n[Link to larger view](https:\/\/i.imgur.com\/JVD2U7k.png)*\n\nIn addition to this nice breakdown for each prediction, the [Shap library](https:\/\/github.com\/slundberg\/shap) offers great visualizations of groups of Shap values. We will focus on two of these visualizations. These visualizations have conceptual similarities to permutation importance and partial dependence plots.\n\n# Summary Plots\n\n[Permutation importance](https:\/\/www.kaggle.com\/dansbecker\/permutation-importance) is great because it created simple numeric measures to see which features mattered to a model. This helped us make comparisons between features easily, and you can present the resulting graphs to non-technical audiences\n\nBut it doesn't tell you how each features matter. If a feature has medium permutation importance, that could mean it has\n- a large effect for a few predictions, but no effect in general, or\n- a medium effect for all predictions\n\nSHAP summary plots give us a birds-eye view of feature importance and what is driving it. We'll walk through an example plot for the soccer data:\n\n![Imgur](https:\/\/i.imgur.com\/Ew9X3su.png)\n\nThis plot is made of many dots. Each dot has three characteristics:\n- Vertical location shows what feature it is depicting\n- Color shows whether that feature was high or low for that row of the dataset\n- Horizontal location shows whether the effect of that value caused a higher or lower prediction.\n\nFor example, the point in the upper left was for a team that scored few goals, reducing the prediction by 0.25.\n\nSome things you should be able to easily pick out:\n- The model ignored the `Red` and `Yellow & Red` features. \n- Usually `Yellow Card` doesn't affect the prediction, but there is an extreme case where a high value caused a much lower prediction.\n- High values of Goal scored caused higher predictions, and low values caused low predictions\n\nIf you look for long enough, there's a lot of information in this graph. You'll face some questions to test how you read them in the exercise.","77c51588":"That's it!  Machine Learning models should not feel like black boxes any more, because you have the tools to inspect them and understand what they learn about the world. \n\nThis is an excellent skill for debugging models, building trust, and learning insights to make better decisions. These techniques have revolutionized how I do data science, and I hope they do the same for you.\n\nReal data science involves an element of exploration. I hope you find an interesting dataset to try these techniques on (Kaggle has a lot of [free datasets](https:\/\/www.kaggle.com\/datasets) to try out). If you learn something interesting about the world, share your work [in this forum](https:\/\/www.kaggle.com\/learn-forum\/66354). I'm excited to see what you do with your new skills.","97b090e5":"We get the SHAP values for all validation data with the following code.","226515ac":"If you don't supply an argument for `interaction_index`, Shapley uses some logic to pick one that may be interesting.","31a04e93":"Then uncomment the following line to compare your observations from this graph to the solution.","6133fbbd":"# Exercises","e2f72410":"## Question 1\n\nWhich of the following features has a bigger range of effects on predictions (i.e. larger difference between most positive and most negative effect)\n- `diag_1_428` or\n- `payer_code_?`"}}