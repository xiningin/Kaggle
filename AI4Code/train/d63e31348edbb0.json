{"cell_type":{"f05c0b87":"code","46afd9ff":"code","df37081c":"code","d253c564":"code","d9aad98e":"code","8084da0d":"code","37863e04":"code","a8e609a6":"code","8fe150bd":"code","4c7a5fb6":"code","b6cee2f4":"code","a7e4ca10":"code","b47c2601":"code","6b47dfb1":"code","eaa48574":"code","dcbc7dc2":"code","94408782":"code","295e848b":"code","42ca3005":"code","8b2d1c31":"code","bdb13de6":"markdown","ce1411e5":"markdown","39c1afef":"markdown"},"source":{"f05c0b87":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","46afd9ff":"qesem=pd.read_csv(\"..\/input\/titanic\/train.csv\")\nqesem.head()","df37081c":"features = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX=qesem[features]\n","d253c564":"y=qesem.Survived","d9aad98e":"X=pd.get_dummies(X)","8084da0d":"from sklearn.model_selection import train_test_split\n","37863e04":"X_train, X_test, y_train, y_test= train_test_split(X,y, test_size=0.25)","a8e609a6":"from sklearn.ensemble import RandomForestClassifier","8fe150bd":"model=RandomForestClassifier(n_estimators=100, \n                             max_depth=5, \n                             random_state=1)\n","4c7a5fb6":"model.fit(X_train,y_train)","b6cee2f4":"model.score(X_test,y_test)","a7e4ca10":"prediction=model.predict(X)","b47c2601":"prediction","6b47dfb1":"output=pd.DataFrame({'PassengerId': qesem.PassengerId,'Survived': prediction})","eaa48574":"output.head()","dcbc7dc2":"output.to_csv('my_first_model.csv', index=False)","94408782":"test=pd.read_csv(\"..\/input\/titanic\/test.csv\")","295e848b":"Xa_test = pd.get_dummies(test[features])","42ca3005":"Xa_test_result= model.predict(Xa_test)","8b2d1c31":"output = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': Xa_test_result})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","bdb13de6":"# Prediction****","ce1411e5":"# **evaluate model**","39c1afef":"# **train model**"}}