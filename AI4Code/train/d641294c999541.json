{"cell_type":{"2435846e":"code","668113b0":"code","e6702230":"code","b874a6b7":"code","450c0c1a":"code","efefef33":"code","4dca8093":"code","84438477":"code","017cfc6a":"code","cd7fddbf":"markdown","ebb3a212":"markdown","4b40aaf6":"markdown","8652bb20":"markdown","85761845":"markdown","a4ef8bae":"markdown"},"source":{"2435846e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","668113b0":"emailsdf = pd.read_csv(\"\/kaggle\/input\/enron-email-dataset\/emails.csv\")\nprint(type(emailsdf))","e6702230":"emailsdf.head()","b874a6b7":"emailsdf['message'][1]","450c0c1a":"# This is what each email has the first 14 lines are metadata then the email body in the following lies\n[s.strip() for s in emailsdf['message'][1].splitlines()]","efefef33":"' '.join([s.strip() for s in emailsdf['message'][1].splitlines()][15:])","4dca8093":"def cleanemail(email):\n    return ' '.join([s.strip() for s in email.splitlines()][15:])\n\nemailsdf['email_body'] = emailsdf['message'].apply(cleanemail)\n\nemailsdf.head()","84438477":"# I need to export them for personal purpose\n#emailsdf.to_csv('clean emails.csv')","017cfc6a":"#export sample of first 500 rows\nemailsdf.iloc[:500].to_csv('sample clean emails.csv')","cd7fddbf":"### The message column has the big chunk of all data from details of sender and receiver to the body of the email as you see below. Except they are all as one piece of text.","ebb3a212":"We extract the lines 15 till the end as they are the email body and then join the texts back and it results in this","4b40aaf6":"Now if you are looking at sender\/receiver\/date-time or any metadata you can extract them in the same way you just need to know the line number they appear in.","8652bb20":"### Since we want to extract all of email for each line we make this into a simple function and then apply it to the message column it will result in a new column of pure email body as text","85761845":"## For one reason or another you may want to use the email content for some NLP project of your own. This simple notebook is just doing that.","a4ef8bae":"Look at how they will look like if we split them by newlines"}}