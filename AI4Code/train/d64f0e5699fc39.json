{"cell_type":{"b140de2b":"code","3560e6b5":"code","740d0668":"code","027a193f":"code","5ed00a2b":"code","14cc8500":"code","8dc8e6c0":"code","1d5418ae":"code","c99c996b":"markdown","6e037024":"markdown","2042fbca":"markdown","25dd6f2e":"markdown","4e8d310e":"markdown"},"source":{"b140de2b":"import pandas as pd\nfrom sklearn.preprocessing import RobustScaler\nimport numpy as np\nfrom sklearn.model_selection import StratifiedKFold\nfrom catboost import CatBoostClassifier\nfrom sklearn.metrics import roc_auc_score\nfrom scipy.stats import uniform","3560e6b5":"data_train =  pd.read_csv('..\/input\/tabular-playground-series-oct-2021\/train.csv')\ndata_test = pd.read_csv('..\/input\/tabular-playground-series-oct-2021\/test.csv')","740d0668":"float_columns = ['f'+str(i) for i in range(242)]\nfloat_columns.remove('f22')\nfloat_columns.remove('f43')\nint_columns = ['f'+str(i) for i in range(242,285)]+['f22','f43']\ncols = float_columns + int_columns","027a193f":"scaler = RobustScaler()\ndata_train[float_columns] = scaler.fit_transform(data_train[float_columns])\ndata_test[float_columns] = scaler.transform(data_test[float_columns]) ","5ed00a2b":"#model = CatBoostClassifier(loss_function='CrossEntropy',\n#                           eval_metric = 'AUC',\n#                           random_state=0)\n#distributions = dict(max_depth = np.random.randint(4, 10, 4), l2_leaf_reg = uniform(loc=0, scale=4),\n#                    iterations = np.random.randint(100, 500, 5), \n#                     min_data_in_leaf = np.random.randint(50, 250, 5),\n#                     learning_rate = uniform(loc=0, scale=1)\n#                    )\n#randomized_search_result = model.randomized_search(param_distributions = distributions,\n#                                                   X=data_train.iloc[:,1:286],\n#                                                   y=data_train.iloc[:, 286],\n#                                                   cv = 5, refit = True,  n_iter = 10, \n#                                                   partition_random_seed=2)","14cc8500":"#params = randomized_search_result['params']\n#after randomized_search I`ve got the next parameters:\nparams = {'min_data_in_leaf': 116,\n 'depth': 4,\n 'iterations': 284,\n 'learning_rate': 0.5307391048885213,\n 'l2_leaf_reg': 3.766159322596347}\n\nparams.update({'loss_function':'CrossEntropy',\n                'eval_metric' : 'AUC'})","8dc8e6c0":"# using above mentioned parameters we can train a model\nmodel = CatBoostClassifier(**params)\nskf = StratifiedKFold(n_splits=5)\nprediction = np.zeros(data_test.shape[0])\nfor train_index, test_index in skf.split(data_train.iloc[:, 1:286], data_train.iloc[:, 286]):\n    x = data_train.iloc[train_index,1:286]\n    y = data_train.iloc[train_index, 286]\n    x_val = data_train.iloc[test_index,1:286]\n    y_val = data_train.iloc[test_index, 286]\n    \n    #fit model and make final prediction\n    model.fit(x, y, eval_set = (x_val, y_val.values), use_best_model=True)\n    prediction += model.predict_proba(data_test.iloc[:,1:])[:,1]\/skf.get_n_splits()\n    \n    #define roc_auc for each test fold\n    roc_auc = roc_auc_score(y_val.values, model.predict_proba(x_val)[:,1])\n    print(f'AUC score = {roc_auc}')","1d5418ae":"submis = pd.DataFrame({'id': data_test.id, 'target': prediction})\nsubmis.to_csv('submission.csv',header = True, index = False)","c99c996b":"### Scale features \n<a id=\"section-two\"><\/a>","6e037024":"### 1.  [ Load data](#section-one)\n### 2. [Scale features ](#section-two)\n### 3.  [Randomized search of parametrs for catboost classifier](#section-twoB)\n### 4. [Train CatBoostClassifier ](#section-three)","2042fbca":"### Perform randomized search of parametrs for catboost classifier\n<a id=\"section-twoB\"><\/a>","25dd6f2e":"### Load data\n<a id=\"section-one\"><\/a>","4e8d310e":"### Train CatBoostClassifier with 5 stratified folds\n<a id=\"section-three\"><\/a>"}}