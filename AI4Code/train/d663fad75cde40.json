{"cell_type":{"643b20f4":"code","bdda67a3":"code","7ddedaba":"code","caca865f":"code","69b5e48b":"code","b037c48c":"code","99d76af7":"code","ee7684fb":"code","c0b0ab30":"code","0cb53efb":"code","f1183be2":"code","d5ec5293":"code","6ddb6522":"markdown","38d6b2e1":"markdown","6664e281":"markdown","a2347927":"markdown"},"source":{"643b20f4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","bdda67a3":"# Let's get the data\ntrain = pd.read_csv(\"..\/input\/tabular-playground-series-jan-2022\/train.csv\")\ntest = pd.read_csv(\"..\/input\/tabular-playground-series-jan-2022\/test.csv\")","7ddedaba":"# What countries?\ntrain.country.unique()","caca865f":"# What about in test?\ntest.country.unique()","69b5e48b":"# Train time frame\ntrain.date.min(), train.date.max()","b037c48c":"# Test time frame\ntest.date.min(), test.date.max()","99d76af7":"holiday_list = list()","ee7684fb":"import holidays\nimport dateutil.easter as easter\n\nprint(\"--- FINLAND ---\")\nfor date in holidays.Finland(years=[2015, 2016, 2017, 2018, 2019], observed=True).items():\n    print(str(date[0]), date[1])\n    holiday_list.append([date[0], date[1], \"Finland\"])","c0b0ab30":"print(\"--- NORWAY ---\")\nfor date in holidays.Norway(years=[2015, 2016, 2017, 2018, 2019], observed=True).items():\n    print(str(date[0]), date[1])\n    holiday_list.append([date[0], date[1], \"Norway\"])","0cb53efb":"print(\"--- SWEDEN ---\")\nfor date in holidays.Sweden(years=[2015, 2016, 2017, 2018, 2019], observed=True).items():\n    if date[1]!='S\u00f6ndag':\n        print(str(date[0]), date[1].replace(\", S\u00f6ndag\", \"\"))\n        holiday_list.append([date[0], date[1].replace(\", S\u00f6ndag\", \"\"), \"Sweden\"])","f1183be2":"# Last week of the year\nfor year in [2015, 2016, 2017, 2018, 2019]:\n    for i, day in enumerate(range(24, 32)):\n        for country in ['Finland', 'Sweden', 'Norway']:\n             holiday_list.append([pd.to_datetime(f\"{year}-{12}-{day}\").date(), \n                                  f\"Last week of the year (day {i+1})\", \n                                  country])\n# Swedish Rock Concert\nfor start, end, year in [[3,6,2015],[8,11,2016],[7,10,2017],[6,10,2018],[5,8,2019]]:\n    for i, day in enumerate(range(start, end+1)):\n        holiday_list.append([pd.to_datetime(f\"{year}-{6}-{day}\").date(), \n                                  f\"Swedish Rock Concert (day {i+1})\", \n                                  \"Sweden\"])\n        \n# Last Wednesday of June\nfor date in ['2015-06-24', '2016-06-29', '2017-06-28', '2018-06-27', '2019-06-26']:\n    for country in ['Finland', 'Sweden', 'Norway']:\n         holiday_list.append([pd.to_datetime(date).date(), \n                                  f\"Last Wednesday of June\", \n                                  country])\n            \n# First Sunday of November\nfor date in ['2015-11-1', '2016-11-6', '2017-11-5', '2018-11-4', '2019-11-3']:\n    for country in ['Finland', 'Sweden', 'Norway']:\n         holiday_list.append([pd.to_datetime(date).date(), \n                                  f\"First Sunday of November\", \n                                  country])\n            \n# Independence Day of Finland\nfor year in [2015, 2016, 2017, 2018, 2019]:\n    holiday_list.append([pd.to_datetime(f\"{year}-{12}-{6}\").date(), \n                                      f\"Independence Day of Finland\", \n                                      'Finland'])\n\n# Easter\neaster_date = [easter.easter(y) for y in [2015, 2016, 2017, 2018, 2019]]\nfor date in easter_date:\n    for country in ['Finland', 'Sweden', 'Norway']:\n         holiday_list.append([pd.to_datetime(date).date(), \n                                  f\"Easter\", \n                                  country])\n    ","d5ec5293":"holidays_df = pd.DataFrame(holiday_list, columns=['date', 'holiday', 'country'])\nholidays_df = holidays_df.drop_duplicates(['date', 'country'], keep='first')\nholidays_df.to_csv(\"nordic_holidays.csv\")","6ddb6522":"Finally, let's turn all the dates into a pandas DataFrame.","38d6b2e1":"Let's add some special dates and events meaningful for the competition","6664e281":"## Happy Kaggling!","a2347927":"# Festivities\n\nFestivities in time series analysis are important. If the data is realistic they also should be important in this competition. Let's have a glance at how we can get them for the different countries."}}