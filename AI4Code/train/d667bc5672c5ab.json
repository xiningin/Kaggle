{"cell_type":{"2486ec85":"code","6ea9fedf":"code","af2f4f28":"code","7d3e44eb":"code","f48e4607":"code","5d65ec75":"code","e96c44ea":"code","a85e8035":"code","88b3caba":"code","e8a806e9":"code","6f418a5a":"code","221f8420":"code","71fd5485":"code","ffe7b1c7":"code","f9073218":"code","85bc6db4":"code","fc8225b3":"code","43291cd8":"code","ace8a5e1":"code","786007a2":"code","3db71b91":"markdown","e49546a6":"markdown"},"source":{"2486ec85":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns # gera\u00e7\u00e3o de gr\u00e1ficos\n\n# Ignorar warnings\nimport warnings\nwarnings.filterwarnings('ignore')","6ea9fedf":"df1 = pd.read_csv('..\/input\/creditcardfraud\/creditcard.csv')","af2f4f28":"df1.sample(10)","7d3e44eb":"df1['Class'].value_counts()","f48e4607":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(df1.loc[:,df1.columns != 'Class'],\n                                                    df1['Class'],\n                                                    test_size=0.3)","5d65ec75":"x_train.head()","e96c44ea":"print(x_train.shape)\nprint(x_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","a85e8035":"df_pivot = pd.DataFrame({'types': x_train.dtypes,\n                         'nulls': x_train.isna().sum(),\n                          '% nulls': x_train.isna().sum() \/ x_train.shape[0],\n                          'size': x_train.shape[0],\n                          'uniques': x_train.nunique()})\ndf_pivot","88b3caba":"fig, ax = plt.subplots(figsize=(12,7))\nsns.heatmap(x_train.corr(), vmin=-1, vmax=1,\n            cmap=sns.diverging_palette(20, 220, as_cmap=True), \n            yticklabels=True) # show all y values\n\nplt.show()","e8a806e9":"print('Top Negative Correlation')\nprint(df1.corr()['Class'].sort_values(ascending=True).head())\nprint('')\nprint('Top Positive Correlation')\nprint(df1.corr()['Class'].sort_values(ascending=False).head())","6f418a5a":"# Top Correlation features\nfeatures_correlation = ['V17','V14','V12',\n                       'V10','V16','V11','V4']","221f8420":"correlation = x_train[features_correlation].corr()\naxis = plt.subplots(figsize = (12,8))\nsns.heatmap(correlation, annot=True, annot_kws = {\"size\":12})\nplt.show()","71fd5485":"from sklearn import preprocessing\npreprocessParams = preprocessing.StandardScaler().fit(x_train)\nx_train_normalized = preprocessParams.transform(x_train)\nx_test_normalized = preprocessParams.transform(x_test)\n\nx_train_normalized[:1] ","ffe7b1c7":"from keras import Sequential\nfrom keras.layers import Dense\nfrom keras.optimizers import SGD","f9073218":"NumerOfClasses = len(y_train.unique())\nNumerOfClasses","85bc6db4":"RN = Sequential() # create network structure\nRN.add(Dense(10, input_shape = x_train_normalized.shape[1:], activation ='sigmoid'))\nRN.add(Dense(NumerOfClasses, activation ='sigmoid'))\nRN.summary()","fc8225b3":"# training\nfrom keras.utils import to_categorical\nsgd = SGD(lr=0.1, decay=1e-6, momentum=0.9)\nRN.compile(optimizer=sgd, loss='mean_squared_error', metrics=['accuracy'])\ntrainedRN = RN.fit(x_train_normalized, to_categorical(y_train), epochs=2, verbose=1)","43291cd8":"score = RN.evaluate(x_test_normalized, to_categorical(y_test),verbose=0)\nprint('Test Score:', score[0])\nprint('Test Accuracy:', score[1])","ace8a5e1":"#Predict\nfrom sklearn.metrics import confusion_matrix\ny_test_predicted = RN.predict(x_test_normalized)\ny_test_predicted_index = np.argmax(y_test_predicted, axis=1)\ny_test_index = y_test.values","786007a2":"#Confusion Matrix\nconfMatrix = pd.DataFrame(confusion_matrix(y_test_predicted_index, y_test_index),\n                           index=['0 - OK','1 - Fraud'],columns=['0 - Ok','1 - Fraud'])\n\nconfMatrix.index.name = 'Actual'\nconfMatrix.columns.name= 'Predicted'\nprint(confMatrix)","3db71b91":"**Normalize Data**","e49546a6":"**Neural Networks Structure**"}}