{"cell_type":{"435d3db9":"code","32d63ec6":"code","d582422f":"code","63500282":"code","fa4bf319":"code","30e4b836":"code","6737272e":"code","edd09520":"code","3c155448":"code","3ec3a43a":"code","62da085f":"markdown","ae849ae8":"markdown","364d13d7":"markdown","310af420":"markdown","cc436060":"markdown"},"source":{"435d3db9":"import numpy as np \nimport pandas as pd \n","32d63ec6":"import matplotlib.pyplot as plt\n\n\nlabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nproduct_A = [20, 35, 30, 35, 27, 43, 24, 34, 14, 27, 22, 50]\nproduct_B = [25, 32, 34, 20, 25, 34, 54, 23, 43, 33, 27, 29]\n\nwidth = 0.35      \n\nfig, ax = plt.subplots()\n\nax.bar(labels, product_A, width,  label='Product A')\nax.bar(labels, product_B, width,  bottom=product_A,\n       label='Product B')\n\nax.set_ylabel('Scores')\nax.set_title('Sales of Product A and Product B')\nax.legend()\n\nplt.show()","d582422f":"import plotly.express as px\nimport pandas as pd\ndf = pd.DataFrame(dict(time=['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                        product_A = [20, 35, 30, 35, 27, 43, 24, 34, 14, 27, 22, 50],\n                        product_B = [25, 32, 34, 20, 25, 34, 54, 23, 43, 33, 27, 29]))\n\n\nfig = px.bar(df, x=\"time\", y=[\"product_A\",\"product_B\"], title=\"Sales of Product A and Product B\")\nfig.show()","63500282":"!pip install seaborn --upgrade","fa4bf319":"import seaborn as sns","30e4b836":"\nimport matplotlib.pyplot as plt\n\n\ndf = pd.DataFrame(dict(time=['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                        product_A = [20, 35, 30, 35, 27, 43, 24, 34, 14, 27, 22, 50],\n                        product_B = [25, 32, 34, 20, 25, 34, 54, 23, 43, 33, 27, 29]))\n\nsns.set(palette='pastel')\ndf.plot(kind='bar',x='time', stacked=True)","6737272e":"sns.__version__","edd09520":"import altair as alt\n\ndf = pd.DataFrame(dict(time=['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                        product_A = [20, 35, 30, 35, 27, 43, 24, 34, 14, 27, 22, 50],\n                        product_B = [25, 32, 34, 20, 25, 34, 54, 23, 43, 33, 27, 29]))\n\n\nalt.Chart(df).transform_fold(['product_A', 'product_B'],\n  as_=['column', 'product']\n).mark_bar(cornerRadiusTopLeft=3,\n    cornerRadiusTopRight=3).encode(\n    x='time:N',\n    y= 'product:Q',\n    color = 'column:N'\n)","3c155448":"from bokeh.io import output_file,show,output_notebook,push_notebook\nfrom bokeh.plotting import figure\nfrom bokeh.models import ColumnDataSource,HoverTool,CategoricalColorMapper\nfrom bokeh.layouts import row,column,gridplot\nfrom bokeh.models.widgets import Tabs,Panel\noutput_notebook()","3ec3a43a":"output_file(\"bar_stacked.html\")\n\ntime = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nproduct = [\"product_A\",\"product_B\"]\ncolors = [\"#718dbf\", \"#e84d60\"]\n\ndata = { 'time': time,\n'product_A' : [20, 35, 30, 35, 27, 43, 24, 34, 14, 27, 22, 50],\n'product_B' : [25, 32, 34, 20, 25, 34, 54, 23, 43, 33, 27, 29]\n}\n\n\np = figure(x_range=time, plot_height=250, title=\"Sales of Products\",\n           toolbar_location=None, tools=\"hover\")\n\np.vbar_stack(product, x='time', width=0.9, color=colors, source=data,\n             legend_label=product)\n\np.y_range.start = 0\np.x_range.range_padding = 0.1\np.xgrid.grid_line_color = None\np.axis.minor_tick_line_color = None\np.outline_line_color = None\np.legend.location = \"top_left\"\np.legend.orientation = \"horizontal\"\n\nshow(p)","62da085f":"# 4 - Altair","ae849ae8":"# 2 - Plotly","364d13d7":"# 3 - Seaborn","310af420":"# 1 - Matplotlib","cc436060":"# 5 - Bokeh"}}