{"cell_type":{"2925da1c":"code","07c3aff1":"code","514be202":"code","37813b96":"code","e47dabf7":"code","d18d5958":"code","2745006e":"code","e374deae":"code","4cb67381":"code","245d6954":"code","3df1b814":"code","89226ee1":"code","3511a9a7":"code","09afbe34":"code","d5957862":"code","cf811d94":"code","9ae27d9d":"code","c4869ad0":"code","63dfb082":"code","ebfe5f35":"code","3d9569fa":"code","7d9850f3":"code","926baee2":"code","5b06d262":"code","f9462329":"code","8ec3f0d0":"code","e863e7e5":"code","84d908f5":"code","03a12b46":"code","872a2aa9":"code","49144314":"code","d4d0bf54":"code","3bb74d7a":"code","772bd51b":"code","cda7d607":"code","023ec5d4":"code","e64d1257":"code","9ba49c0b":"code","843826d3":"code","fda92064":"code","b42d16c5":"code","c4fc236a":"code","0a2e646a":"code","fc5369b7":"code","0c961c58":"code","b53f4b60":"code","2c9df4e2":"code","fa66c427":"code","81108af3":"code","e8f2fb5a":"code","1b8d0bc8":"code","555c25b1":"code","27902c0e":"code","39e4dce6":"code","81aa8c9e":"code","3f5963e9":"code","5339b95e":"code","9b2f716b":"markdown","948f1d39":"markdown","75b608a6":"markdown","6b30fa63":"markdown","1a33a4ec":"markdown","30947ba1":"markdown","aa9eac20":"markdown","a0453561":"markdown","6f75455e":"markdown","91aabbdb":"markdown","e2c430d5":"markdown","e9524c97":"markdown","a47ae66e":"markdown","205c5d67":"markdown","490b1722":"markdown","76f1e2ae":"markdown","a55d15ed":"markdown","d5a5ec99":"markdown","7ab26cc7":"markdown","f5355b1f":"markdown","e2c74386":"markdown","1d9eef3b":"markdown","e1bd9de6":"markdown"},"source":{"2925da1c":"import pandas as pd    \nimport numpy as np\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning) \nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\npd.set_option('display.max_columns', None); pd.set_option('display.max_rows', None);\npd.set_option('display.float_format', lambda x: '%.0f' % x)\nimport matplotlib.pyplot as plt","07c3aff1":"#reading data\ndf_2010 = pd.read_excel(\"..\/input\/online-retail-2\/online_retail_II.xlsx\", sheet_name = \"Year 2010-2011\")\ndf = df_2010.copy()\ndf.head()","514be202":"df.shape","37813b96":"df.info()","e47dabf7":"df.isnull().values.any()","d18d5958":"df.isnull().sum()","2745006e":"df.columns","e374deae":"df[\"Description\"].nunique()","4cb67381":"#Counting unique values\nprint(\"Description: \", df[\"Description\"].nunique())\nprint(\"StockCode: \", df[\"StockCode\"].nunique())\nprint(\"Invoice: \", df[\"Invoice\"].nunique())","245d6954":"df[\"Description\"].value_counts().head()","3df1b814":"df.groupby(\"Description\").agg({\"Quantity\":\"sum\"}).head()","89226ee1":"df.groupby(\"Description\").agg({\"Quantity\":\"sum\"}).sort_values(\"Quantity\", ascending = False).head()","3511a9a7":"df[\"Invoice\"].nunique()","09afbe34":"df[\"TotalPrice\"] = df[\"Quantity\"]*df[\"Price\"]\ndf.head()","d5957862":"df.groupby(\"Invoice\").agg({\"TotalPrice\":\"sum\"}).head()","cf811d94":"df.sort_values(\"Price\", ascending = False).head()","9ae27d9d":"df[\"Country\"].value_counts()","c4869ad0":"df.groupby(\"Country\").agg({\"TotalPrice\":\"sum\"}).sort_values(\"TotalPrice\", ascending = False).head()","63dfb082":"df[df['Invoice'].str.startswith(\"C\", na=False)].sort_values(\"Quantity\", ascending = True).head()","ebfe5f35":"#Cleaning dataset from missing values\nclean_df = df.dropna()","3d9569fa":"clean_df.head()","7d9850f3":"clean_df.isnull().sum()","926baee2":"#Cleaning returned invoices\nclean_df.loc[~clean_df[\"Invoice\"].str.contains(\"C\", na = False) , \"Invoice\"]\nclean_df.head()","5b06d262":"clean_df.shape","f9462329":"#calculating sales amount\nclean_df[\"TotalPrice\"]= clean_df[\"Quantity\"]*clean_df[\"Price\"]\nclean_df.head()","8ec3f0d0":"df.describe().T","e863e7e5":"clean_df.describe().T","84d908f5":"import datetime as dt","03a12b46":"clean_df.columns","872a2aa9":"#controlling the last invoice date\nclean_df[\"InvoiceDate\"].max()","49144314":"last_time=dt.datetime(2011, 12, 10)\nlast_time","d4d0bf54":"clean_df.head()","3bb74d7a":"#Turning customer id veriable to integer \nclean_df[\"Customer ID\"] = clean_df[\"Customer ID\"].astype(int)\nclean_df.head()","772bd51b":"#create temporary data frame, group invoice dates by customer id\ntemp_df = (last_time-clean_df.groupby(\"Customer ID\").agg({\"InvoiceDate\":\"max\"}))\ntemp_df.head()","cda7d607":"temp_df.rename(columns={\"InvoiceDate\":\"Recency\"}, inplace = True)\ntemp_df.head()","023ec5d4":"recency_df= temp_df[\"Recency\"].apply(lambda x :x.days)\nrecency_df.head()","e64d1257":"frequency_df= clean_df.groupby(\"Customer ID\").agg({\"InvoiceDate\":\"nunique\"})\nfrequency_df.rename(columns={\"InvoiceDate\":\"Frequency\"}, inplace = True)\nfrequency_df.head()","9ba49c0b":"monetary_df = clean_df.groupby(\"Customer ID\").agg({\"TotalPrice\":\"sum\"})\nmonetary_df.rename(columns={\"TotalPrice\":\"Monetary\"},inplace=True)\nmonetary_df.head()","843826d3":"print(recency_df.shape, frequency_df.shape, monetary_df.shape)","fda92064":"rfm = pd.concat([recency_df,frequency_df,monetary_df], axis=1)\nrfm.head()","b42d16c5":"rfm[\"RecencyScore\"] = pd.qcut(rfm[\"Recency\"], 5, labels = [5,4,3,2,1])","c4fc236a":"rfm.head()","0a2e646a":"rfm[\"FrequencyScore\"]=pd.qcut(rfm[\"Frequency\"].rank(method=\"first\"),5, labels=[1,2,3,4,5])\nrfm[\"MonetaryScore\"]= pd.qcut(rfm[\"Monetary\"],5, labels=[1,2,3,4,5])\nrfm.head()","fc5369b7":"rfm[\"RFM_Score\"]= (rfm[\"RecencyScore\"].astype(str)+\n                  rfm[\"FrequencyScore\"].astype(str)+\n                  rfm[\"MonetaryScore\"].astype(str))\nrfm.head()","0c961c58":"rfm[rfm[\"RFM_Score\"]==555].head()","b53f4b60":"rfm.describe().T","2c9df4e2":"rfm[rfm[\"RFM_Score\"]==111].head()","fa66c427":"seg_map ={\n        r'[1-2][1-2]': 'Hibernating',\n        r'[1-2][3-4]': 'At Risk',\n        r'[1-2]5': 'Can\\'t Loose',\n        r'3[1-2]': 'About to Sleep',\n        r'33': 'Need Attention',\n        r'[3-4][4-5]': 'Loyal Customers',\n        r'41': 'Promising',\n        r'51': 'New Customers',\n        r'[4-5][2-3]': 'Potential Loyalists',\n        r'5[4-5]': 'Champions'    \n\n}","81108af3":"rfm[\"Segment\"]= rfm[\"RecencyScore\"].astype(str) + rfm[\"FrequencyScore\"].astype(str)\nrfm.head()","e8f2fb5a":"rfm[\"Segment\"]= rfm[\"Segment\"].replace(seg_map, regex=True)\nrfm.head()","1b8d0bc8":"rfm[[\"Segment\",\"Recency\",\"Frequency\",\"Monetary\"]].groupby(\"Segment\").agg([\"mean\",\"median\",\"count\"])","555c25b1":"rfm.shape[0]","27902c0e":"rfm[rfm[\"Segment\"]==\"Need Attention\"].head()","39e4dce6":"rfm[rfm[\"Segment\"]==\"New Customers\"].index","81aa8c9e":"new_customers = pd.DataFrame()\nnew_customers[\"NewCustomerID\"]=rfm[rfm[\"Segment\"]==\"New Customers\"].index\nnew_customers.to_csv(\"new_customers.csv\")\nnew_customers.to_csv(\"new_customers.csv\", index=False)\nnew_customers.head()","3f5963e9":"loyal_customers = pd.DataFrame()\nloyal_customers[\"LoyalCustomerID\"]=rfm[rfm[\"Segment\"]==\"Loyal Customers\"].index\nloyal_customers.to_csv(\"loyal_customers.csv\")\nloyal_customers.to_csv(\"loyal_customers.csv\", index=False)\nloyal_customers.head()","5339b95e":"at_risk = pd.DataFrame()\nat_risk[\"AtRiskID\"]=rfm[rfm[\"Segment\"]==\"At Risk\"].index\nat_risk.to_csv(\"at_risk.csv\")\nat_risk.to_csv(\"at_risk.csv\", index=False)\nat_risk.head()","9b2f716b":"# 2. Which product do you have?","948f1d39":"An e-commerce company wants to segment its customers and determine marketing strategies according to these segments.\n\nFor this purpose, we will define the behavior of customers and we will form groups according to clustering.\n\nIn other words, we will take those who exhibit common behaviors into the same groups and we will try to develop sales and marketing techniques specific to these groups.\n\n### Data Set Story:\n\nThis Online Retail II data set contains all the transactions occurring for a UK-based and registered, non-store online retail between 01\/12\/2009 and 09\/12\/2011.\n\nThe company mainly sells unique all-occasion gift-ware.\n\nMany customers of the company are wholesalers.","75b608a6":"# Monetary","6b30fa63":"### About To Sleep\n\nThe reason why these group members fall asleep should be understood well, whether they shop from competing brands or have they stopped shopping, it can be quite difficult to find the answer to this question. First of all, we need to remind our customers in sleep state of ourselves. We can send advertisements or use social media ads while reminding ourselves. When our customers interact with us again, we must approach with a strategy that encourages shopping. There may be small offers such as the \"WELCOME BACK\" sale.","1a33a4ec":"# CUSTOMER SEGMENTATION","30947ba1":"### Can't Loose Them\n\nCustomers in the Can't Loose Them group are highly critical groups. These can be seen as the masses who are not very satisfied with our brand but also love shopping. In order to keep this group, it can be tried to increase brand loyalty with campaigns such as paying points or cashback on purchases used in loyalty programs or sending extra products when exceeding a certain basket amount.","aa9eac20":"# 10. Which product is the most returned?","a0453561":"## Loyal Customers\nOur loyal customers are like friends for our brand. Although they are loyal, we need to take care and keep them happy from time to time. Considering the conditions of the industry that our brand serves, we offer free shipping to our customers, short-term 5% discount rates due to their loyalty to our brand, or if we are a cosmetic company; We can maintain the loyalty of our customers with small gestures such as gifting the trial size of our best-selling product for purchases above the average basket amount.","6f75455e":"# 7. Which are the most expensive products?","91aabbdb":"# Recency","e2c430d5":"# 8. How many orders came from which country?","e9524c97":"# Questions from data set \n#  All questions about 2010-2011 years\n\n1. What is the number of unique products?\n2. Which product do you have?\n3. Which product is the most ordered?\n4. How do we rank this output?\n5. How many invoices have been issued?\n6. How much money has been earned per invoice?\n7. Which are the most expensive products?\n8. How many orders came from which country?\n9. which country gained how much?\n10. which product is the most returned?","a47ae66e":"# 5.How many invoices have been issued?","205c5d67":"There is a table that is commonly used in RFM Analysis. Below I am sharing this with you. Generally, 2 parameters are used in these tables. These are Recency and Frequency values. As can be seen, the values are between 1 and 5. 5 means very good, 1 means very bad. As seen in this table, customers are divided into segments. The segments of the customers are determined by looking at the parameter values. In short, we can explain this table in this way. This table is the main logic of RFM analysis.","490b1722":"# 1. What is the number of unique products?","76f1e2ae":"![rfm.png](attachment:rfm.png)","a55d15ed":"# 6. How much money has been earned per invoice?","d5a5ec99":"# 3. Which product is the most ordered?","7ab26cc7":"# Frequency","f5355b1f":"# 9. Which country gained how much?","e2c74386":"# RFM Analysis","1d9eef3b":"# 4. How do we rank this output?","e1bd9de6":"## Attribute Information:\n\n  1. InvoiceNo:    Invoice number. Nominal. A 6-digit integral number uniquely assigned to each transaction. If this code starts with the letter 'c', it indicates a cancellation.\n  2. StockCode:    Product (item) code. Nominal. A 5-digit integral number uniquely assigned to each distinct product.\n  3. Description:  Product (item) name. Nominal.\n  4. Quantity:     The quantities of each product (item) per transaction. Numeric.\n  5. InvoiceDate:  Invice date and time. Numeric. The day and time when a transaction was generated.\n  6. UnitPrice:    Unit price. Numeric. Product price per unit in sterling (\u00c2\u00a3).\n  7. CustomerID:   Customer number. Nominal. A 5-digit integral number uniquely assigned to each customer.\n  8. Country:      Country name. Nominal. The name of the country where a customer resides."}}