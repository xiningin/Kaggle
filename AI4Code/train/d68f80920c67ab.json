{"cell_type":{"997f0fdb":"code","1d06796f":"code","0a96aab7":"code","1522fa82":"code","9a79e90b":"code","155f076a":"code","a4b53250":"code","c14f4ad0":"code","10ac3d3e":"markdown","6313ac66":"markdown","607623ad":"markdown","a931300f":"markdown","ff6106f2":"markdown","9c506f9f":"markdown"},"source":{"997f0fdb":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1d06796f":"#pip install datatable in console command to use this lib\nimport pandas as pd\nimport datatable as dt\nimport numpy as np\nimport os","0a96aab7":"#df = dt.fread('..\/input\/jane-street-market-prediction\/train.csv').to_pandas()\n\ntrain = dt.fread('..\/input\/jane-street-market-prediction\/train.csv').to_pandas()\nfeatures = dt.fread('..\/input\/jane-street-market-prediction\/features.csv').to_pandas()\n","1522fa82":"features.style.applymap(lambda x: 'background-color : yellow' if x == True else '')","9a79e90b":"import plotly\npd.options.plotting.backend = 'plotly'\nplotly.offline.init_notebook_mode (connected = True)\n\nfeatures_dist = features[features == True].count().sort_values(ascending = False)\nfeatures_dist.plot(kind = 'bar')\n","155f076a":"features.set_index('feature', inplace = True)","a4b53250":"def features_with_tags(df):\n    features_ds = df[df]\n    cols = features_ds.columns\n    number_cols = len(features_ds.index)\n    list_df = []\n    \n    for idx_col in range(0, number_cols):\n        ds = features_ds.iloc[idx_col]\n        ds = ds[ds == 1].to_frame()\n        ds.reset_index(inplace = True)\n        \n        cols_ds = ds.columns\n        ds[cols_ds[1]] = ds[cols_ds[0]]\n        ds.drop(cols_ds[0], axis = 1, inplace = True)\n        list_df.append(ds)\n    \n    out_df = pd.concat(list_df, axis = 1, sort = False).T\n    out_df.fillna('None', inplace = True)\n    \n    \n    return out_df\n    \n    ","c14f4ad0":"features_with_tags_df = features_with_tags(features)\nfeatures_with_tags_df.style.applymap(lambda x: 'background-color : yellow' if x == 'None' else '')","10ac3d3e":"So I am going to end my commentary on this topic here. Please use this as information to your liking, I don't want to give any answers as the EDA part of this dataset can be a bit weird and you may come up with theories. For example, feature_0 maybe the futures index.","6313ac66":"# Tag distributions\n\n**Tag with highest distribution** which tag was used the most? can we see pattern here? just think about this :)","607623ad":"# Quick Visualisation of Tags for everyone!\n\nThis notebook aims to give a quick understadning about the Tags which are provided with the train.csv dataset. I personally think the way to know how to take an opportunity (1) or pass an opportunity (0) depends on the understanding on feature. For example, if 30-day volumne of a certain stocks is vergy high over 2-3days and the 30-day stock price over the same period is moving downwards then would you trade on that stock? (probably not, hence action_ij == 0 at least that is the basic logic :)) ","a931300f":"The above cannot be used when submitting as the internet will be disabled so when submitting please use the standad pandas lib. I have used this for EDA purposes only. ","ff6106f2":"# Features with tags\n\n**Feature and tags** for each feature what kind of tags do we have? perhaps some features special *cough* *cough*","9c506f9f":"**Tag Heat Map** which feature uses which tag? the answer can be visualised"}}