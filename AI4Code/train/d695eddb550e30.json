{"cell_type":{"094862aa":"code","356dc6c4":"code","aac0205d":"code","428426ca":"code","1be04b56":"code","f1c1f625":"code","0d619bf3":"code","9585a33c":"code","f75c910b":"code","6aaf499f":"code","6a3105a1":"code","68d482f0":"code","406e90ca":"code","89e66a2f":"code","17d8dc9f":"code","aabe2cda":"code","5750a75c":"code","6f7c741f":"code","ebfae7c1":"code","43b90039":"code","9d76115e":"code","e64251da":"code","3b0ecdd3":"code","de089104":"code","fdf6440d":"code","c8419148":"code","5dbb390d":"code","93b78b65":"code","4602dead":"code","cfef2731":"code","96941f73":"code","662eb7f5":"code","e1e173bf":"code","dd604358":"code","979e206a":"markdown","cc6941de":"markdown","83288340":"markdown","4050b36a":"markdown","fe513bfb":"markdown","386fe24c":"markdown","236e74da":"markdown","122e3edd":"markdown","643744d0":"markdown","deeb8d6b":"markdown","604c6bd4":"markdown","bcbf9025":"markdown","1a326a5d":"markdown","3abed4c8":"markdown","22c7c3fa":"markdown","f8fe0a4c":"markdown","d4ca277f":"markdown","eda13191":"markdown","f5114018":"markdown","e8beaaec":"markdown","e239c48a":"markdown","5a7e5e79":"markdown","b93f800b":"markdown","d9527712":"markdown","23c88bff":"markdown","eaa785ab":"markdown","ef10401d":"markdown"},"source":{"094862aa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.io as pio\nimport missingno as msno\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","356dc6c4":"df = pd.read_csv(\"\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv\")\ndf.head()","aac0205d":"df.info()","428426ca":"df.isnull().sum()","1be04b56":"#plt.figure(figsize=(7,5))\nn = msno.bar(df,color = \"crimson\",figsize=(12,6),fontsize=10)","f1c1f625":"plt.style.use(\"ggplot\")\nplt.rcParams[\"figure.figsize\" ]= (12,7)\n#color = plt.cm.hsv(np.linspace(0,1,15))\ndf[\"Author\"].value_counts().sort_values(ascending=False).head(15).plot.bar()#color=color\nplt.title(\"Top 15 Authors with highest number of Books Published (2009-2019)\",fontsize=20)\nplt.xlabel(\"Authors\",fontsize=15)\nplt.ylabel(\"No. of Books\",fontsize=15)\nplt.show()","0d619bf3":"plt.style.use(\"ggplot\")\nplt.rcParams[\"figure.figsize\" ]= (9,6)\n#color = [\"purple\",\"yellowgreen\"]#plt.cm.BuPu(np.linspace(0,1,15))\ndf[\"Genre\"].value_counts().sort_values(ascending=False).head(15).plot.bar()#color=color\nplt.title(\"No. of published Genre(2009-2019)\",fontsize=20)\nplt.xlabel(\"Genre\",fontsize=15)\nplt.ylabel(\"Count\",fontsize=15)\nplt.show()","9585a33c":"df[\"Genre\"].value_counts()","f75c910b":"df[[\"Name\",\"Reviews\",\"User Rating\"]].nlargest(5,\"Reviews\")","6aaf499f":"plt.rcParams[\"figure.figsize\"] = (16,5)\n#color = plt.cm.BuPu(np.linspace(0,1,20))\ndf[[\"Name\",\"Reviews\"]].nlargest(20,\"Reviews\").plot.bar(x=\"Name\",y=\"Reviews\",width=0.4,)#'vertical', 'horizontal',color=color\nplt.title(\"Top 20 Books with highest number of Reviews\",fontsize=20)\nplt.xlabel(\"Name of the Books\",fontsize=15)\nplt.ylabel(\"No.of Reviews\",fontsize=15)\nplt.show()","6a3105a1":"plt.rcParams[\"figure.figsize\"] = (16,5)\n#color = plt.cm.BuPu(np.linspace(0,1,20))\ndf[df[\"Genre\"] == \"Fiction\"].nlargest(10,\"Reviews\").plot.bar(x=\"Name\",y=\"Reviews\",width=0.4,)#'vertical', 'horizontal',color=color\nplt.title(\"Top 10 bestselling Fiction books according to Reviews(2009-2019)\",fontsize=20)\nplt.xlabel(\"Name of the Books\",fontsize=15)\nplt.ylabel(\"No.of Reviews\",fontsize=15)\nplt.show()","68d482f0":"\nplt.rcParams[\"figure.figsize\"] = (16,5)\n#color = plt.cm.BuPu(np.linspace(0,1,20))\ndf[df[\"Genre\"] == \"Non Fiction\"].nlargest(10,\"Reviews\").plot.bar(x=\"Name\",y=\"Reviews\",width=0.4,)#'vertical', 'horizontal',color=color\nplt.title(\"Top 10 bestselling Non Fiction books according to Reviews(2009-2019)\",fontsize=20)\nplt.xlabel(\"Name of the Books\",fontsize=15)\nplt.ylabel(\"No.of Reviews\",fontsize=15)\nplt.show()","406e90ca":"expensive = df[df[\"Genre\"] == \"Fiction\"].nlargest(10,\"Price\")\np = expensive[\"Price\"]\nplt.rcParams[\"figure.figsize\"] = (16,5)\n#color = plt.cm.BuPu(np.linspace(0,1,20))\ndf[df[\"Genre\"] == \"Fiction\"].nlargest(10,\"Price\").plot.bar(x=\"Name\",y=\"Price\",width=0.4,)#'vertical', 'horizontal',color=color\nfor i,price in enumerate(p):\n    plt.text(i,price,str(price),fontsize=12)\nplt.title(\"Top 10 Most expensive Fiction books(2009-2019)\",fontsize=20)\nplt.xlabel(\"Name of the Books\",fontsize=15)\nplt.ylabel(\"Price\",fontsize=15)\nplt.show()","89e66a2f":"expensive = df[df[\"Genre\"] == \"Non Fiction\"].nlargest(10,\"Price\")\np = expensive[\"Price\"]\nplt.rcParams[\"figure.figsize\"] = (16,5)\n#color = plt.cm.BuPu(np.linspace(0,1,20))\ndf[df[\"Genre\"] == \"Non Fiction\"].nlargest(10,\"Price\").plot.bar(x=\"Name\",y=\"Price\",width=0.4,)#'vertical', 'horizontal',color=color\nfor i,price in enumerate(p):\n    plt.text(i,price,str(price),fontsize=12)\nplt.title(\"Top 10 Most expensive Non Fiction books(2009-2019)\",fontsize=20)\nplt.xlabel(\"Name of the Books\",fontsize=15)\nplt.ylabel(\"Price\",fontsize=15)\nplt.show()","17d8dc9f":"plt.rcParams[\"figure.figsize\" ]= (16,5)\n#color = plt.cm.PuRd(np.linspace(0,1,20))\ndf[[\"Name\",\"Price\"]].nlargest(20,\"Price\").plot.bar(x=\"Name\",y=\"Price\")#'vertical', 'horizontal',,color=color\nplt.title(\"Top 20 Books with highest Price\",fontsize=20)\nplt.xlabel(\"Name of the Books\",fontsize=15)\nplt.ylabel(\"Price\",fontsize=15)\nplt.show()","aabe2cda":"plt.rcParams[\"figure.figsize\"]= (10,8)\nplt.style.use(\"classic\")\ncolor = [\"Gold\",\"yellowgreen\"]\nlabels = [\"Non Fiction\",\"Fiction\"]\ndf[\"Genre\"].value_counts().plot.pie(y = \"Genre\",startangle = 70,explode = (0,0.05),shadow=True,colors = color,autopct=\"%0.1f%%\")\nplt.title(\"Percentage of Genres Among Best Selling Books \",fontsize=20)\nplt.legend(labels,loc=\"best\")\nplt.axis(\"off\")\nplt.show()","5750a75c":"mean_rate = df.groupby([\"Genre\"],as_index=False)[\"User Rating\"].mean()#,as_index=False\n#df.groupby(['Genre'])['Weighted Rating'].mean()\nmean_rate","6f7c741f":"plt.style.use(\"ggplot\")\nfig, ax = plt.subplots(figsize =(9, 6))   \n# Horizontal Bar Plot \n#color = [\"yellowgreen\",\"purple\"]\nax.bar(mean_rate[\"Genre\"],mean_rate[\"User Rating\"])#,color = color \n\n# Add annotation to bars \nfor i in ax.patches: \n    plt.text(i.get_x()+0.4,i.get_height()+0.2,   \n             str(round((i.get_height()), 3)), \n             fontsize = 10, fontweight ='bold', \n             color ='grey') \nplt.title(\"Average User Rating according to Genre\")\nplt.xlabel(\"Genre\")\nplt.ylabel(\"Average Rating\")\nplt.show()","ebfae7c1":"year = [2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019]\nnum_fic= []\nfor i in year:\n    fic = df[(df[\"Year\"] == i) & (df[\"Genre\"] == \"Fiction\")]\n    num_fic.append(len(fic))\ndf_fict = pd.DataFrame({\"Year\": year,\"numberofFiction\": num_fic})\ndf_fict.head()","43b90039":"year = [2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019]\nnum_nonfic= []\nfor i in year:\n    nonfic = df[(df[\"Year\"] == i) & (df[\"Genre\"] == \"Non Fiction\")]\n    num_nonfic.append(len(nonfic))\ndf_nonfict = pd.DataFrame({\"Year\": year,\"numberofNonFiction\": num_nonfic})\ndf_nonfict.head()","9d76115e":"df_nonfict[\"numberofFiction\"] = df_fict[\"numberofFiction\"]\ndf_nonfict.head()","e64251da":"df_genre = df_nonfict.copy()\ndf_genre.head()","3b0ecdd3":"plt.style.use(\"ggplot\")\nplt.figure(figsize=(16,5))\nplt.subplot(1,2,1)\nplt.bar(x = df_genre[\"Year\"],height=df_genre[\"numberofNonFiction\"],)\nplt.plot(df_genre[\"Year\"],df_genre[\"numberofNonFiction\"],\"bo-\")\n#plt.plot(df_genre[\"Year\"],df_genre[\"numberofFiction\"],\"ro-\")\nplt.title(\"Trend of having NonFiction on BestSeller Books List(2009-2019)\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"No. of NonFiction published\")\n\nplt.subplot(1,2,2)\nplt.bar(x = df_genre[\"Year\"],height=df_genre[\"numberofFiction\"],)\nplt.plot(df_genre[\"Year\"],df_genre[\"numberofFiction\"],\"bo-\")\nplt.title(\"Trend of Having Fiction on BestSeller Books List(2009-2019)\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"No. of Fiction published\")\nplt.show()","de089104":"plt.style.use(\"ggplot\")\nplt.figure(figsize=(16,5))\n#plt.subplot(1,1,1)\nwidth = 0.4\nplt.bar(x = df_genre[\"Year\"]-width,height=df_genre[\"numberofNonFiction\"],label = \"Non Fiction\")\nplt.bar(x = df_genre[\"Year\"]+width,height=df_genre[\"numberofFiction\"],label = \"Fiction\")\n\nplt.plot(df_genre[\"Year\"],df_genre[\"numberofNonFiction\"],\"bo-\")\nplt.plot(df_genre[\"Year\"],df_genre[\"numberofFiction\"],\"go-\")\n\nplt.title(\"Trend of having Fiction & NonFiction on BestSeller Books List (2009-2019)\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"No. of Books Published\")\nplt.legend()\nplt.show()","fdf6440d":"genre_reviews = df.groupby([\"Genre\",\"Year\"],as_index=False)[\"Genre\",\"Reviews\"].mean()#,as_index=False\ngenre_reviews.head()","c8419148":"plt.figure(figsize=(12,6))\nplt.style.use(\"ggplot\")\nsns.barplot(x =\"Year\",y=\"Reviews\",hue = \"Genre\",data = genre_reviews)\nplt.title(\"No. of Reviews according to Year & Genre\",Fontsize=20)\nplt.show()","5dbb390d":"genre_ratings = df.groupby([\"Genre\",\"Year\"],as_index=False)[\"Genre\",\"User Rating\"].mean()#,as_index=False\ngenre_ratings.head()","93b78b65":"plt.figure(figsize=(12,6))\nplt.style.use(\"ggplot\")\nsns.barplot(x =\"Year\",y=\"User Rating\",hue = \"Genre\",data = genre_ratings)\nplt.title(\"Average rating according to Year & Genre\",Fontsize=20)\nplt.show()","4602dead":"df_19 = df[df[\"Year\"] == 2019]\ndf_19.head()","cfef2731":"plt.rcParams[\"figure.figsize\" ]= (12,7)\n#color = plt.cm.PuRd(np.linspace(0,1,20))\ndf_19[[\"Name\",\"User Rating\"]].nlargest(20,\"User Rating\").plot.bar(x=\"Name\",y=\"User Rating\")#'vertical', 'horizontal',,color=color\nplt.title(\"Top 20 Books with highest Ratings(2019)\",fontsize=20)\nplt.xlabel(\"Name of the Books\",fontsize=15)\nplt.ylabel(\"User Rating\",fontsize=15)\nplt.show()","96941f73":"#plt.style.use(\"classic\")\nplt.rcParams[\"figure.figsize\" ]= (8,6)\n#color = [\"yellowgreen\",\"purple\"]#plt.cm.BuPu(np.linspace(0,1,7))\ndf_19[\"Author\"].value_counts().sort_values(ascending=False).head(2).plot.bar()#color=color\nplt.title(\"Authors who published  more than 1 books in 2019\")\nplt.xlabel(\"Authors\")\nplt.ylabel(\"No. of Books Published\")\nplt.xticks(rotation=0)\nplt.show()","662eb7f5":"df_19[df_19[\"Author\"] == \"Dav Pilkey\"]","e1e173bf":"plt.rcParams[\"figure.figsize\" ]= (8,6)\n#color = [\"yellowgreen\",\"purple\"] #plt.cm.hsv(np.linspace(0,1,15))\ndf_19[\"Genre\"].value_counts().plot.bar()#sort_values(ascending=False).head(15).,color=color\nplt.title(\"No. of each Genre published in 2019\")\nplt.xlabel(\"Genre\")\nplt.ylabel(\"Count\")\nplt.xticks(rotation =0)\nplt.show()","dd604358":"plt.rcParams[\"figure.figsize\"] = (16,8)\n#color = plt.cm.PuRd(np.linspace(0,1,10))\ndf_19[[\"Name\",\"Reviews\"]].nlargest(10,\"Reviews\").plot.bar(x=\"Name\",y=\"Reviews\")#,color=color\nplt.title(\"Top 10 Books with highest number of Reviews(2019)\")\nplt.xlabel(\"Name of the Books\")\nplt.ylabel(\"No.of Reviews\")\nplt.xticks()\nplt.show()","979e206a":">Most expensive Non Fiction Books","cc6941de":">Best selling **Non Fiction** books according to Reviews","83288340":"><h3>Let's analyze the Year 2019<\/h3>","4050b36a":"- So **Diagnostic and Statistical Manual of Mental Disorders,5th edition** is the most expensive Non Fiction Book","fe513bfb":"- So Top reviewed Non Fiction book is **Becoming** with 61133 reviews","386fe24c":"\n---\n\n<h1 style=\"text-align: center;font-size: 40px;\"> Amazon Top 50 Bestselling Books(2009 - 2019)<\/h1>\n\n---\n\n<center><img src=\"https:\/\/hips.hearstapps.com\/hmg-prod.s3.amazonaws.com\/images\/120319-amazon-books-1575402996.png\" width=\"500\" height=\"600\"><\/center>\n\n---","236e74da":"- Here,We can see that **Fiction Books** always gets highest reviews except year 2018","122e3edd":"---\n\n<h1 style=\"text-align: center;font-size: 20px;\">Thanks for Reading!!<\/h1>\n\n---","643744d0":"- So, On average **Fiction** gets higher rating than **Non Fiction**","deeb8d6b":"- So **Dav Pilkey** published highest number of Books which is 3  in 2019\n> Let's see the name of the Books which he Published in 2019:","604c6bd4":"- So **The Twilight Saga** is the **most expensive Fiction Book**","bcbf9025":">Books with highest number of Reviews","1a326a5d":">Top 20 Books with highest number of Ratings in 2019","3abed4c8":"> **Percentage of Genres Among Best Selling Books**","22c7c3fa":">Books with highest **reviews** in 2019","f8fe0a4c":">Most expensive Fiction books","d4ca277f":"- So Top reviewed Fiction book is **Where the Crawdads Sing** with 87841 reviews","eda13191":"- So throughout the year (2009-2019) the number of **Non Fiction** Books are greater than the **Fiction** Books in the list of **BestSelling** Books.\n- People love to read Books,but in case of Genre the number of readers for **Non Fiction** books are higher than the **Fiction** books reader","f5114018":">Average **User Rating** according to **Year** & **Genre**","e8beaaec":"> Top 20 Books according to **price**","e239c48a":">**Now let's find out the Trend:**","5a7e5e79":"> Name of the **Authors** with highest number of published Books","b93f800b":">Reviews according to **Year** & **Genre**","d9527712":">Best selling **Fiction** books according to Reviews","23c88bff":"> **Mean User Rating according to Genre**","eaa785ab":">Authors who published **more than 1** books  in 2019","ef10401d":"- So there is no Null values"}}