{"cell_type":{"fc41170c":"code","50ea9e86":"code","b9360075":"code","e7842e98":"code","9a5e303f":"code","207ee871":"code","5dde244c":"code","971fcc08":"code","2eaaddb3":"code","0702709a":"markdown","56e47b4a":"markdown","e13b9f6c":"markdown","847727a1":"markdown","e44f18ac":"markdown","1b98c9f8":"markdown","6d817a85":"markdown","27a8a3a8":"markdown","c8ebdb8c":"markdown","2641e0a3":"markdown","686ef6c9":"markdown","1d7ea61c":"markdown","1928a6f3":"markdown","ea4cd01a":"markdown","1a2c47f2":"markdown","ba6e6316":"markdown","edcfe3ed":"markdown","adfe5558":"markdown"},"source":{"fc41170c":"import os\nos.environ['KAGGLE_USERNAME']='YOUR_USERNAME'\nos.environ['KAGGLE_KEY']='YOUR_API_KEY'","50ea9e86":"!pip install -q -U kaggle","b9360075":"d=\"\/works\"\nif os.path.isdir(d) == False:\n    os.mkdir(d)\n    os.chdir(d)","e7842e98":"from zipfile import ZipFile\na=!kaggle competitions download -c 30-days-of-ml --force\nzipname=\"30-days-of-ml.zip\"\nif os.path.exists(zipname):\n    with ZipFile(zipname) as f:\n        f.extractall()\n\nzipname2=\"train.csv.zip\"\nzipname3=\"test.csv.zip\"\nif os.path.exists(zipname2):\n    with ZipFile(zipname2) as f:\n        f.extractall()\nif os.path.exists(zipname3):\n    with ZipFile(zipname3) as f:\n        f.extractall()","9a5e303f":"import pandas as pd\n \ndf_train=pd.read_csv(\"train.csv\")\ndf_test=pd.read_csv(\"test.csv\")\n \ndf_train.head(5)","207ee871":"predicts=pd.DataFrame()\npredicts['id']=df_test['id'].copy()\npredicts.set_index('id', inplace=True)\npredicts['target']=0\n \npredicts.head(5)","5dde244c":"predicts.to_csv(\"submission.csv\")","971fcc08":"!kaggle competitions submit -c 30-days-of-ml -f submission.csv -m \"dummy message\"","2eaaddb3":"!kaggle competitions list --group inClass --sort-by recentlyCreated","0702709a":"<b><i>This is the place of your work. You do the pre-processing of the data, train the model, calculate its error and in the end you predict the result in the predicts variable.<br \/>\nSince this presentation is not about that, I simply copy the IDs and fill the place of the predictions with dumb zeros. You should do everything here as you have learned at the course.\n<\/i><\/b>","56e47b4a":"\nSince not everyone uses Kaggle as an editor, and different environments create different folders and they don\u2019t work the same way, we create and set a new work directory which will work the same way on every platform.","e13b9f6c":"<h1>Bonus:<\/h1>","847727a1":"<h1>Easy Way With Kaggle API:<\/h1>","e44f18ac":"<h1>Conclusion:<\/h1>","1b98c9f8":"If you are curious about more things, read the official documentation:<br \/>\n<a href=\"https:\/\/www.kaggle.com\/docs\/api\">API documentation<\/a>","6d817a85":"Request the list of ongoing inClass competitions:","27a8a3a8":"<center><img src=\"https:\/\/i.ibb.co\/kBjkyym\/IMG-20210814-190254.jpg\" width=\"200px\" \/><\/center>","c8ebdb8c":"Downloaded files can be found in the work directory and we can load them easily with their filenames as we have done so far.","2641e0a3":"\nIn this notebook you learned to use the Kaggle API and submit the solutions to the competition easily!<br \/>\n<u>If you liked what you learned, please evaluate my work with an upvote!<\/u>","686ef6c9":"<u>Kaggle<\/u> provides you an opportunity to easily have access to every function that you may need for the competition through a single <u>API<\/u>.\n \nThe only thing you have to do is to click on your profile picture on their website, choose <b>\"Account\"<\/b> and then request your own API key with the <b>\"Create New API Token\"<\/b> button. A kaggle.json file will be downloaded that you can open with a simple texteditor. The file contains your username and API key which you have to copy into the cell below and then run the cell.\n \n<img src=\"https:\/\/i.ibb.co\/ZYj7FFr\/IMG-20210814-135532.jpg\" \/>\n \n<b><i>It is very important that you do not share this key or the Jupyter notebook containing this key with others, ast they can be misused! \n<\/i><\/b>","1d7ea61c":"Finally we submit the file containing the result with one click, instead of uploading the file manually.<br \/>\nWe can write our individual comment in the message field which helps to differentiate it from our previous submissions.<br \/>\n<b>It is important that everyone can send only 5 submissions a day! If you try to submit again, you receive an error message and you will be able to submit predictions only the next day.<\/b>","1928a6f3":"In order to be able to use the API, you have to install the associated Python directory with the cell below.","ea4cd01a":"<b>Welcome!<\/b><br \/>\nI am Attila Ambrus and I created this notebook to help you. I am asking you to help me as well, by evaluating my work with an upvote (if you liked what you learned). You can do this in the list by clicking on the arrow that belongs to my notebook.<br \/>\n<b>Thank you!<\/b>","1a2c47f2":"\nThat is all! If you still don\u2019t feel you want to try Kaggle\u2019s own API, here are some extra curiosities of what it can do...","ba6e6316":"<u>Once you have applied for the competition and accepted its rules<\/u>, you can download the associated data with the following code snippet. You have to do this every time you start the notebook.","edcfe3ed":"<h3>This description is about the Kaggle API, and how to send a submission to the competition easily...<\/h3>","adfe5558":"Once we have predicted the results, we save them in the <b>submission.csv<\/b> file."}}