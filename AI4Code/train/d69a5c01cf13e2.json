{"cell_type":{"a4c749c4":"code","25be8e64":"code","c5ec0809":"code","a1ce92fd":"code","879e8b16":"code","0d901114":"code","bddd1713":"code","8e089273":"code","8593982c":"code","c1497bfe":"code","2a7d1b3d":"code","54228786":"code","37723e82":"code","4c577161":"code","2c114ea4":"code","ecc0d8b5":"code","32cb3331":"markdown","06545b2c":"markdown","dfa75381":"markdown"},"source":{"a4c749c4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\nimport seaborn\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","25be8e64":"df = pd.read_csv('..\/input\/covid19-state-county-level-analysis\/COVID-19 Full Dataset.csv', encoding='ISO-8859-2')\ndf.head()","c5ec0809":"fig = px.bar(df, \n             x='State', y='Peak Date', color_discrete_sequence=['#D63230'],\n             title='Covid-19 US States Peak Date', text='Peak Date')\nfig.show()","a1ce92fd":"fig = px.bar(df, \n             x='State', y='Number of Test Centers', color_discrete_sequence=['#27F1E7'],\n             title='US States Test Centers', text='State')\nfig.show()","879e8b16":"fig = px.bar(df, \n             x='Median Age', y='Median Income', color_discrete_sequence=['#bd34eb'],\n             title='US Age & Incomes', text='Median Age')\nfig.show()","0d901114":"px.histogram(df, x='Number of Test Centers', color='State')","bddd1713":"plt.figure(figsize=(14,8))\nsns.barplot(data=df,x='State',y='Number of Test Centers',color=sns.color_palette('Set3')[0])\nplt.title('Number of Test Centers')\nplt.xlabel('State')\nplt.ylabel('Number of Test Centers')\nplt.xticks(rotation=45)\nfor i in range(df.shape[0]):\n    count = df.iloc[i]['Number of Test Centers']\n    plt.text(i,count+1,df.iloc[i]['Number of Test Centers'],ha='center')\n    \nfrom IPython.display import display, Markdown\ndisplay(Markdown(\"Most Number of cases have occured in the Test Centers **20-50**\"))","8e089273":"df_grp = df.groupby([\"Days from April 15th\",\"Peak Date\"])[[\"State\",\"Median Income\",\"Population\", \"Number of Test Centers\", \"Total Cases\"]].sum().reset_index()\ndf_grp.head()","8593982c":"df_grp = df_grp.rename(columns={\"Days from April 15th\":\"days\",\"Peak Date\":\"peak\", \"Median Income\": \"income\", \"Number of Test Centers\": \"test\", \"Total Cases\": \"total\"})","c1497bfe":"plt.figure(figsize=(15, 5))\nplt.title('test')\ndf_grp.test.value_counts().plot.bar();","2a7d1b3d":"df_grp_plot = df_grp.tail(80)","54228786":"fig=px.bar(df_grp_plot,x='peak', y=\"total\", animation_frame=\"days\", \n           animation_group=\"peak\", color=\"peak\", hover_name=\"peak\")\nfig.update_yaxes(range=[0, 1500])\nfig.update_layout(title='Peak Date')","37723e82":"fig = px.bar(df_grp[['test', 'total']].sort_values('total', ascending=False), \n             y=\"total\", x=\"test\", color='test', \n             log_y=True, template='ggplot2', title='Total Cases vs Tests')\nfig.show()","4c577161":"df_grp = df_grp.sort_values(by=['test'],ascending = False)","2c114ea4":"plt.figure(figsize=(40,15))\nplt.bar(df_grp.test, df_grp.total,label=\"total\")\nplt.bar(df_grp.test, df_grp.peak,label=\"peak\")\nplt.bar(df_grp.test, df_grp.days,label=\"days\")\nplt.xlabel('Peak Date')\nplt.ylabel(\"Total Cases\")\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=15)\n\nplt.legend(frameon=True, fontsize=12)\nplt.title('Total Cases vs Peak Date vs Test Centers',fontsize=30)\nplt.show()\n\nf, ax = plt.subplots(figsize=(40,15))\nax=sns.scatterplot(x=\"test\", y=\"total\", data=df_grp,\n             color=\"black\",label = \"Confirm\")\nax=sns.scatterplot(x=\"test\", y=\"peak\", data=df_grp,\n             color=\"red\",label = \"peak\")\nax=sns.scatterplot(x=\"test\", y=\"days\", data=df_grp,\n             color=\"blue\",label = \"days\")\nplt.plot(df_grp.test,df_grp.total,zorder=1,color=\"black\")\nplt.plot(df_grp.test,df_grp.peak,zorder=1,color=\"red\")\nplt.plot(df_grp.test,df_grp.days,zorder=1,color=\"blue\")\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=15)\nplt.legend(frameon=True, fontsize=12)","ecc0d8b5":"fig = px.line(df_grp, x=\"peak\", y=\"total\", \n              title=\"Covid-19 Peak date & Total cases \")\nfig.show()","32cb3331":"#Code from Krutar Darji   @krutarthhd","06545b2c":"Kaggle Notebook Runner: Mar\u00edlia Prata   @mpwolke","dfa75381":"#The year is 2020."}}