{"cell_type":{"fe87bd27":"code","b235b4ae":"code","7d0dc599":"code","3eb4ff98":"code","aae5581c":"code","05796dd2":"code","40bb7d60":"code","6e681b81":"code","e4d692b4":"code","269c3cd6":"code","9f082502":"code","a4310cdd":"code","c1ca6d17":"markdown"},"source":{"fe87bd27":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv(\"..\/input\/Churn_Modelling.csv\", index_col='RowNumber')\ndf.head()\n","b235b4ae":"df_drop = df.drop(['CustomerId','Surname'],axis=1) ## Removing surname as onhot encoding will cause issues for each one of them\ndf_drop.info()","7d0dc599":"## Label Encoding of all the columns\nfrom sklearn.preprocessing import LabelEncoder\n# instantiate labelencoder object\nle = LabelEncoder()\n\n# Categorical boolean mask\ncategorical_feature_mask = df_drop.dtypes==object\n# filter categorical columns using mask and turn it into a list\ncategorical_cols = df_drop.columns[categorical_feature_mask].tolist()\ndf_drop[categorical_cols] = df_drop[categorical_cols].apply(lambda col: le.fit_transform(col))\nprint(df_drop.info())","3eb4ff98":"df_drop.head()","aae5581c":"from scipy.stats import zscore\ndf_scaled = df_drop.apply(zscore)\nX_columns =  df_scaled.columns.tolist()[1:10]\nY_Columns = df_drop.columns.tolist()[-1:]\n\nX = df_scaled[X_columns].values # Credit Score through Estimated Salary\nY = np.array(df_drop['Exited']) # Exited\n\nprint(Y)\nprint(X)","05796dd2":"from sklearn.model_selection import train_test_split\n# print(Y)\n\n# Y = Y.astype('bool_')\n# print(Y.dtype)\n\nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.20, random_state=8)","40bb7d60":"from tensorflow.keras.utils import to_categorical\n#Encoding the output class label (One-Hot Encoding)\ny_train=to_categorical(y_train,2)\ny_test=to_categorical(y_test,2)","6e681b81":"import tensorflow as tf\nfrom tensorflow.keras import models\nfrom tensorflow.keras.layers import Dense\n#Initialize Sequential Graph (model)\nmodel = tf.keras.Sequential()","e4d692b4":"model.add(Dense(18, activation='relu', input_shape=(9,)))\nmodel.add(Dense(20, activation='relu'))\nmodel.add(Dense(2, activation='softmax'))","269c3cd6":"model.compile(optimizer='sgd', loss='categorical_crossentropy',metrics=['accuracy'])\nmodel.summary()","9f082502":"model.fit(X_train, y_train, epochs=25, validation_data=(X_test,y_test))","a4310cdd":"score = model.evaluate(X_test, y_test,verbose=1)\n\nprint(score)","c1ca6d17":"The fact that accuracy on train and test set are similar shows that the model did not overfit on the train set. Hyperparameters can be tuned to obtain better results."}}