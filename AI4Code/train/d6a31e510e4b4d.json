{"cell_type":{"5c45633b":"code","040d41b3":"code","7207d304":"code","55d91bd7":"code","14853ac5":"code","a6234ec7":"code","694b9ad1":"code","162180e7":"code","0442229c":"code","1ede6bea":"code","bce41499":"code","480a065e":"code","21e9d557":"code","d8e1c0db":"code","23cf3a4d":"code","a0f77dad":"code","13f700fe":"code","388f029d":"code","f204fe46":"code","d9ea1247":"code","33548188":"code","954a2a54":"code","599293a0":"code","f87eb404":"code","d1d33ef6":"code","647cec7a":"code","7f71bcb8":"code","13015dd4":"code","cda5338f":"code","57f114a9":"code","79ac2bdf":"code","feb7118e":"code","5488a278":"code","c612c453":"code","67ea0e2d":"code","0aef3c8f":"code","59071f3e":"code","ce274b22":"code","57199349":"code","6c587907":"code","89aa7998":"code","de03fc26":"code","3a37ec51":"code","6c7d35bf":"code","f77c1d01":"code","7530abe0":"code","7971fb8d":"code","597f25e7":"markdown","5842c949":"markdown","f3bbf3a0":"markdown","7309ad78":"markdown","14c1469d":"markdown","a057fdda":"markdown","ba9eb9f0":"markdown","aa976cb4":"markdown","fd182ed3":"markdown","4054678a":"markdown","7fee6fa6":"markdown","47eede26":"markdown","84136ece":"markdown","b882525a":"markdown","88074ed2":"markdown","79684b5a":"markdown"},"source":{"5c45633b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","040d41b3":"# loading of data\ndata=pd.read_csv('..\/input\/fraud-dataset\/Fraud.csv')","7207d304":"pd.set_option('display.max_columns',None)\npd.set_option('display.max_rows',None)","55d91bd7":"# prints first 5 rows of the data\ndata.head()","14853ac5":"# prints last5 rows of the data\ndata.tail()","a6234ec7":"# used to view some basic statistical details like percentile, mean, std etc\ndata.describe()","694b9ad1":"# to print a concise summary of a DataFrame. This method prints information about a DataFrame including the index dtype and column dtypes, non-null values and memory usage.\ndata.info()","162180e7":"# it shows the number columns and rows that data consists\ndata.shape","0442229c":"# displays all the columns\ndata.columns","1ede6bea":"data.isnull().values.any()","bce41499":"data.isnull().sum()","480a065e":"## detect missing values in the given series object. \n## It return a boolean same-sized object indicating if the values are NA. \n## Missing values gets mapped to True and non-missing value gets mapped to False \ndata.isna().any()","21e9d557":"data.type.value_counts()","d8e1c0db":"data.isFraud.value_counts()","23cf3a4d":"data.isFlaggedFraud.value_counts()\n","a0f77dad":"dfisFraud = data.loc[data.isFraud == 1]\ndfisFraud.head()","13f700fe":"dataflagfraud= data.loc[data.isFlaggedFraud == 1]\ndataflagfraud.head(10)","388f029d":"data.head()","f204fe46":"sns.countplot(data.type) ## for discrete data","d9ea1247":"from pandas_profiling import ProfileReport\n","33548188":"profile = ProfileReport(data,title=\"Pandas Profiling Report\", minimal=True)\nprofile.to_widgets()\n","954a2a54":"data.describe(include=['object'])","599293a0":"data.head()","f87eb404":"##coverting categorical features to numerical\nfrom sklearn.preprocessing import LabelEncoder\nlabel = LabelEncoder()\ndata.type=label.fit_transform(data.type)\ndata.nameOrig=label.fit_transform(data.nameOrig)\ndata.nameDest=label.fit_transform(data.nameDest)","d1d33ef6":"## checking the outliers if any\n## outliers detection can be normally plotted using boxplot\nbox=data[['step', 'type', 'amount', 'nameOrig', \n          'oldbalanceOrg', 'newbalanceOrig', 'nameDest', 'oldbalanceDest', 'newbalanceDest', 'isFraud', 'isFlaggedFraud']]\nplt.figure(figsize=(25,25), facecolor='white')\nplotnumber = 1\n\nfor column in box:\n    if plotnumber<=25 :     \n        ax = plt.subplot(25,1,plotnumber)\n        sns.boxplot(x=box[column])\n        plt.xlabel(column,fontsize=20)\n        \n    plotnumber+=1\nplt.show()","647cec7a":"data.head()","7f71bcb8":"data.info()","13015dd4":"##cmap stands for colormap and it's a colormap instance or registered colormap name\nplt.figure(figsize=(20, 15))\nsns.heatmap(data.corr(), annot=True, fmt= '.1f', cmap=\"BrBG\")\nsns.set(font_scale=2.25)\nplt.show()","cda5338f":"## displays the correlated data \ncorr_matrix = data.corr()\ncorr_matrix[\"isFlaggedFraud\"].sort_values(ascending=False)","57f114a9":"##creating independent and dependent variables X & y\nX = data.loc[:,['isFraud','amount','oldbalanceOrg','newbalanceOrig','step','type','nameOrig']]\ny = data.isFlaggedFraud","79ac2bdf":"X.head()","feb7118e":"y.head()","5488a278":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n\n\n# Splitting the data into test and train for calculating accuracy\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3,random_state=42)","c612c453":"X_train.shape,X_test.shape,y_train.shape,y_test.shape","67ea0e2d":"from scipy.stats import skew\nfrom scipy.stats import kurtosis","0aef3c8f":"\nfor col in X_train:\n    print(col)\n    print(kurtosis(data[col]))\n    \n    plt.figure()\n    sns.distplot(data[col])\n    plt.show()","59071f3e":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","ce274b22":"from sklearn.tree import DecisionTreeRegressor","57199349":"dtree=DecisionTreeRegressor(max_depth=25)\ndtree.fit(X_train, y_train)","6c587907":"dtree.score(X_train, y_train)","89aa7998":"dtree.score(X_test, y_test)","de03fc26":"p_test = dtree.predict(X_test)\n","3a37ec51":"def mae(p, t):\n    return np.sum(np.abs(p - t)) \/ len(p)","6c7d35bf":"mae(p_test, y_test)","f77c1d01":"def print_score(mm):\n    print(\"train r^2 \" + str(mm.score(X_train, y_train)))\n    print(\"validation r^2 \" + str(mm.score(X_test, y_test)))\n    p_test = mm.predict(X_test)\n    p_train = mm.predict(X_train)\n    print(\"mean absolute error(Train): \" + str(mae(p_train, y_train)))\n    print(\"mean absolute error(Validation): \" + str(mae(p_test, y_test)))\nprint_score(dtree)","7530abe0":"p_test = dtree.predict(X_test)","7971fb8d":"p_test","597f25e7":"## Domain Analysis","5842c949":"## DECISIONTREE","f3bbf3a0":"## Data Preprocessing","7309ad78":"### 5. What are the key factors that predict fraudulent customer? \nkey factors that predict fraudulent customer are isFraud and amount        ","14c1469d":"### 7. What kind of prevention should be adopted while company update its infrastructure?\nSet limit to amount transaction, if it extends the limit the person should contact company to verify.\n","a057fdda":"# Model Building","ba9eb9f0":"### 1. Data cleaning including missing values, outliers.","aa976cb4":"### 3. How did you select variables to be included in the model?\nchecking correlation btw target variable with remaining variable","fd182ed3":"step \n\nmaps a unit of time in the real world. In this case 1 step is 1 hour of time. Total steps 744 (30 days simulation).\n\ntype \n\nCASH-IN, CASH-OUT, DEBIT, PAYMENT and TRANSFER.\n\namount \n\namount of the transaction in local currency.\n\nnameOrig \n\ncustomer who started the transaction\n\noldbalanceOrg \n\ninitial balance before the transaction\n\nnewbalanceOrig \n\nnew balance after the transaction\n\nnameDest \n\ncustomer who is the recipient of the transaction\n\noldbalanceDest \n\ninitial balance recipient before the transaction. Note that there is not information for customers that start with M (Merchants).\n\nnewbalanceDest \n\nnew balance recipient after the transaction. Note that there is not information for customers that start with M (Merchants).\n\nisFraud \n\nThis is the transactions made by the fraudulent agents inside the simulation. In this specific dataset the fraudulent behavior of the agents aims to profit by taking control or customers accounts and try to empty the funds by transferring to another account and then cashing out of the system.\n\nisFlaggedFraud \n\nThe business model aims to control massive transfers from one account to another and flags illegal attempts. An illegal attempt in this dataset is an attempt to transfer more than 200.000 in a single transaction.","4054678a":"# Basic Checks","7fee6fa6":"There are too much of outliers so we cannot impute them..\nwe have to take outliers as a our original data","47eede26":"## Feature Selection","84136ece":"## Exploratory Data Analysis","b882525a":"### 8. Assuming these actions have been implemented, how would you determine if they work?\nif these actions are implemented,I feel it will work better than current situation.","88074ed2":"### 2. Describe your fraud detection model in elaboration. ","79684b5a":"### 6. Do these factors make sense? If yes, How? If not, How not? \nyes,they make sense,if the amount is more we can assume it may be fraud and if isfraud is 1, the chances of its isFlaggedFraud is more."}}