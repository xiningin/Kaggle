{"cell_type":{"b6c4885b":"code","300008c8":"code","9a1dfc6d":"code","ebcf0570":"code","36f4604a":"code","0717be97":"code","f712edd3":"code","aab83d1c":"code","24b2b7b6":"code","2995aca0":"code","c91d2325":"code","16d2ac54":"code","64c2f874":"code","75fb990c":"code","19df6e61":"code","7c591e87":"code","ded0cd92":"code","f60d0e1d":"code","7a4079d2":"code","f94c39fc":"code","492ec9e9":"code","149f4d4d":"code","817c12fe":"code","872a6cc1":"code","1d8f20ec":"code","98deb36f":"code","c6493a8c":"code","ad0fde62":"code","02e49392":"code","04498304":"code","bbe8375a":"code","b611dece":"code","84a1d70f":"code","c91c9b33":"code","3c144fdf":"code","e638cb60":"code","70d28d7d":"code","11dda9b9":"code","d227c4db":"markdown","f53e9c55":"markdown","5baa5036":"markdown","56c57f77":"markdown","e6cb7df6":"markdown","4baf2212":"markdown","7180f1ef":"markdown","dcf1bea0":"markdown","433b3d4e":"markdown","efdf1cc5":"markdown","b1d8094e":"markdown","8f5d980b":"markdown","801bd9e4":"markdown","3c5c13b3":"markdown","f8141fc0":"markdown","91cb523b":"markdown","b9a9f7bc":"markdown"},"source":{"b6c4885b":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport os\nimport time\nimport requests\nimport tarfile \nimport matplotlib.pyplot as plt\n%matplotlib inline","300008c8":"path = '..\/input\/netflix-shows\/netflix_titles.csv'\nnet_df = pd.read_csv(path)","9a1dfc6d":"net_df.head()","ebcf0570":"urls = ['https:\/\/datasets.imdbws.com\/title.ratings.tsv.gz','https:\/\/datasets.imdbws.com\/title.basics.tsv.gz']\nfor url in urls:\n    r=requests.get(url)\n    with open(url.split('\/')[-1], 'wb') as fd:\n        for chunk in r.iter_content(chunk_size=128):\n            fd.write(chunk)","36f4604a":"#kaggle doesn't need you to unzip the files you download just load them into the dataframes So unziping is not needed\nbasics_df = pd.read_csv('title.basics.tsv.gz',sep='\\t')\nratings_df = pd.read_csv('title.ratings.tsv.gz',sep='\\t')","0717be97":"basics_df.head()","f712edd3":"ratings_df.head()","aab83d1c":"#check for duplicated rows in the data\nprint(ratings_df.duplicated().sum(),basics_df.duplicated().sum())","24b2b7b6":"rated_titles = pd.merge(basics_df.set_index('tconst'), ratings_df.set_index('tconst'), left_index=True, right_index=True).drop_duplicates()\nrated_titles.sample(5)","2995aca0":"rated_titles.info()","c91d2325":"net_df.sample(5)","16d2ac54":"net_df.info()","64c2f874":"rated_titles_clean = rated_titles.copy()\nnet_clean = net_df.copy()","75fb990c":"#lower case titles\nnet_clean['title']= net_clean['title'].str.lower()\nrated_titles_clean['primaryTitle'] = rated_titles_clean['primaryTitle'].str.lower()\nrated_titles_clean['originalTitle'] = rated_titles_clean['originalTitle'].str.lower()","19df6e61":"#eleminate the nan values from startYear column dropna will not work beacause it won't detect all of the nan values\nrated_titles_clean = rated_titles_clean[rated_titles_clean.startYear.apply(lambda x: str(x).isnumeric())]\nrated_titles_clean['startYear'] = rated_titles_clean['startYear'].astype(int)","7c591e87":"rated_titles_clean.info()","ded0cd92":"print(net_clean.columns,\"\\n\",rated_titles_clean.columns)","f60d0e1d":"df = pd.merge(net_clean, rated_titles_clean, left_on=['title','release_year'], right_on=['primaryTitle','startYear'])\ndf.head()","7a4079d2":"df.info()","f94c39fc":"df_clean =df.copy()\ndf_clean.head()","492ec9e9":"df_clean.drop(columns=['show_id','originalTitle','type','primaryTitle','endYear','duration'],inplace=True)","149f4d4d":"# renaming columns\ndf_clean.rename(columns={'titleType':'type','isAdult':'is_adult',\n                         'startYear':'start_year','runtimeMinutes':'runtime',\n                         'averageRating':'average_rating',\n                         'numVotes':'num_votes'},inplace =True)\ndf_clean.info()","817c12fe":"df_clean.runtime.unique()","872a6cc1":"df_clean.date_added.isnull().sum()","1d8f20ec":"df_clean.is_adult.unique()","98deb36f":"df_clean = df_clean[df_clean.runtime.apply(lambda x: x.isnumeric())]\ndf_clean['runtime'] = df_clean['runtime'].astype(int)","c6493a8c":"df_clean.is_adult = df_clean.is_adult.astype(int)\ndf_clean.is_adult =df_clean.is_adult.astype(bool)","ad0fde62":"df_clean = df_clean[df_clean.date_added.isna() == False].reset_index()\ndf_clean = df_clean.drop(\"index\", axis=1)\ndf_clean.date_added = pd.to_datetime(df_clean.date_added)\ndf_clean['year_added'] = pd.DatetimeIndex(df_clean.date_added).year.astype(int)\ndf_clean.drop(columns=['date_added'],inplace=True)","02e49392":"df_clean.to_csv('clean_df.csv',index = False)","04498304":"df = pd.read_csv('clean_df.csv')\ndf.head()","bbe8375a":"#the shows with the most num_votes are the most popular\nvotes = df.query('type == [\"tvSeries\", \"tvEpisode\",\"tvSpecial\",\"tvMiniSeries\",\"tvShort\"] ')\ntop10 = votes.sort_values(by=['num_votes'],ascending = False)\ntop10[['title','num_votes']][:10]","b611dece":"plt.figure(figsize=[7,7])\nplt.title('Top 10')\nsns.barplot(x='num_votes',y='title',palette=\"vlag\",data=top10[:10]);","84a1d70f":"#Arranging the popular shows according to their rating\nrating = df.query('type == [\"tvSeries\", \"tvEpisode\",\"tvSpecial\",\"tvMiniSeries\",\"tvShort\"] ')\ntop10_2 = top10[:10].sort_values(by=['average_rating'],ascending = False)\ntop10_2[['title','num_votes','average_rating']]","c91c9b33":"plt.figure(figsize=[7,7])\nplt.title('Top 10 re-arranged')\nsns.barplot(x='average_rating',y='title',palette=\"light:#5A9\",data=top10_2);\n","3c144fdf":"rating = df.query('type == [\"tvSeries\", \"tvEpisode\",\"tvSpecial\",\"tvMiniSeries\",\"tvShort\"] ')\ntop10_3 = rating.sort_values(by=['average_rating'],ascending = False)\ntop10_3[['title','num_votes','average_rating']][:10]","e638cb60":"plt.figure(figsize=[7,7])\nplt.title('Top 10 rating')\nsns.barplot(x='average_rating',y='title',palette=\"flare\",data=top10_3[:10]);","70d28d7d":"df.type.value_counts().to_frame()","11dda9b9":"# Pie chart comparing the amount of the movies to tv-shows on netflix\nlabels = 'movies', 'tv-shows'\nsizes = [4058,len(df)-4058]\nplt.figure(figsize = [7,7])\nplt.pie(sizes, labels=labels, autopct='%1.1f%%',explode=[0.05,0.1],shadow=True)\nplt.title('Content on netflix');","d227c4db":"### Are the top 10 good shows?\n\nrearranging the top 10 wached shows","f53e9c55":"<a id='view'><\/a>\n## Viewing process:\n**Assessing the data to start building insights and know what to clean in the data**","5baa5036":"<a id='merge'><\/a>\n## Merging IMDB Data\nThe data looks clean so It's time to merge the ratings with the titles data.\n\nthe basics file is used to link the ratings with the tv shows and movies.","56c57f77":"1- <a href=\"#intro\">introduction<\/a>\n\n2- <a href=\"#dw\">Data Wrangling<\/a>\n> <li><a href=\"#l\">Loading data<\/a><\/li>\n  <li><a href=\"#down\">Downloading IMDB Data<\/a><\/li>\n  <li><a href=\"#view\">Viewing the Data<\/a><\/li>\n  <li><a href=\"#merge\">Merging IMDB Data<\/a><\/li>\n  <li><a href=\"#clean\">Cleaning<\/a><\/li>\n  <li><a href=\"#merge2\">Merging into 1 Dataframe<\/a><\/li>\n  <li><a href=\"#clean2\">Preparing data for EDA<\/a><\/li>\n\n\n3- <a href=\"#eda\">Exploratory Data Analysis (EDA) and Visualizations<\/a>","e6cb7df6":"<a id='l'><\/a>\n## Loading The Netflix data ","4baf2212":"**The netflix data is good but it will be better if it had ratings from IMDB, \nso i downloaded IMDB ratings**","7180f1ef":"### Is netflix for TV-shows or movies?","dcf1bea0":"<a id='down'><\/a>\n## Downloading the IMDB data","433b3d4e":"### Top 10 popular shows on netflix","efdf1cc5":"<a id='merge2'><\/a>\n## Merging the netflix and IMDB data\n* Now the two data frames are ready to be merged after cleaning them and adjusting there dtypes i will merge by the title and the realese data or start year as it's called in the IMDB dataset","b1d8094e":"### Columns to delete:\n* show_id\n* originalTitle\n* primaryTitle (there is a title col already)\n* type (because titleType is more detalied)\n* duration\n\n### Misssing values:\n* Directors missing are because TV-shows often don't have that role there is show creators and each episode may have a diffrent director \n* Cast members","8f5d980b":"<a id='intro'><\/a>\n# Introduction\nwhat is this data about?:\n\nThis data is about the TV-shows and movies on netflix, contains : \n* show ID, Title, Type(tv-show or movie)\n* director, cast\n* country of the show or movie\n* date realesed and when it was added to netflix\n* rating, duration, listed in(the category) and description\n\n","801bd9e4":"<a id='eda'><\/a>\n# Exploratory Data Analysis (EDA) and Visualizations\n","3c5c13b3":"<a id='clean'><\/a>\n## Cleaning the data to merge it\nBefore merging this data with the netflix data it needs some cleaning and change some data types\n* all names need to be in lower case\n* fix null values of years","f8141fc0":"### Droping and Renaming columns","91cb523b":"<a id='dw'><\/a>\n# Data Wrangling\n","b9a9f7bc":"<a id='clean2'><\/a>\n## Assessing and Cleaning after merge"}}