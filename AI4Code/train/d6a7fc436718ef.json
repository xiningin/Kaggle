{"cell_type":{"1774d650":"code","19d64eb0":"code","3bc5214c":"code","a9bf00f2":"code","b78b7591":"code","813a60d6":"code","987e4f48":"code","9aec6f3b":"code","245bf217":"code","b06f65fc":"code","bd21b316":"code","0a4b4238":"code","9905c7b0":"code","0722e336":"code","f1df5cc7":"code","11752f0c":"code","e563dc45":"code","c45d24c6":"code","379f3259":"code","9ba416c4":"code","74136ee6":"code","eed36374":"code","adafcb4b":"code","ff371dd5":"code","5fd656f9":"code","c99de710":"code","04fa1101":"markdown","b6e1449a":"markdown","f4134d89":"markdown","ac8ff2ff":"markdown","b2cab679":"markdown","f87f1f52":"markdown"},"source":{"1774d650":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","19d64eb0":"#importing libraries\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3bc5214c":"#loading the dataset\n\ndf = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\") \n","a9bf00f2":"#displaying first five rows of the dataset\n\ndf.head()","b78b7591":"#displaying all the rows and columns of the datset\n\ndf.shape","813a60d6":"#checking for null values\n\ndf.isnull().sum()","987e4f48":"#displaying info of the dataset\n\ndf.info()","9aec6f3b":"#visualizing missing values using heatmap\n\n\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False)","245bf217":"#Filling Missing values\n\ndf['LotFrontage'] = df['LotFrontage'].fillna(df['LotFrontage'].mean())\ndf.drop(['Alley'],axis=1,inplace=True)\ndf['BsmtCond'] = df['BsmtCond'].fillna(df['BsmtCond'].mode()[0])\ndf['BsmtQual'] = df['BsmtQual'].fillna(df['BsmtQual'].mode()[0])\ndf['FireplaceQu'] = df['FireplaceQu'].fillna(df['FireplaceQu'].mode()[0])\ndf['GarageType'] = df['GarageType'].fillna(df['GarageType'].mode()[0])\ndf['GarageFinish'] = df['GarageFinish'].fillna(df['GarageFinish'].mode()[0])\ndf['GarageQual'] = df['GarageQual'].fillna(df['GarageQual'].mode()[0])\ndf['GarageCond'] = df['GarageCond'].fillna(df['GarageCond'].mode()[0])\ndf.drop(columns=['PoolQC','Fence','MiscFeature'],axis=1,inplace=True)","b06f65fc":"#Checking\n\ndf.isnull().sum()","bd21b316":"\ndf.drop(['GarageYrBlt'],axis=1,inplace=True)","0a4b4238":"df.shape","9905c7b0":"#ID column is mot required\n\ndf.drop(['Id'],axis=1,inplace=True)","0722e336":"df.shape","f1df5cc7":"#treated  null values\n\ndf.isnull().sum()","11752f0c":"#checking the rows of the datset\n\ndf.head()","e563dc45":"df['MasVnrType'] = df['MasVnrType'].fillna(df['MasVnrType'].mode()[0])\ndf['MasVnrArea'] = df['MasVnrArea'].fillna(df['MasVnrArea'].mode()[0])","c45d24c6":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","379f3259":"df['BsmtExposure'] = df['BsmtExposure'].fillna(df['BsmtExposure'].mode()[0])\ndf['BsmtFinType2'] = df['BsmtFinType2'].fillna(df['BsmtFinType2'].mode()[0])","9ba416c4":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","74136ee6":"#Dropping rest of the missing values\n\ndf.dropna(inplace=True)","eed36374":"#null values handled\n\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","adafcb4b":"#Final count of rows and columns\n\ndf.shape","ff371dd5":"df.head()","5fd656f9":"#Final Count of Columns\n\ncolumns=['MSZoning','Street','LotShape','LandContour','Utilities','LotConfig','LandSlope','Neighborhood',\n         'Condition2','BldgType','Condition1','HouseStyle','SaleType',\n        'SaleCondition','ExterCond',\n         'ExterQual','Foundation','BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2',\n        'RoofStyle','RoofMatl','Exterior1st','Exterior2nd','MasVnrType','Heating','HeatingQC',\n         'CentralAir',\n         'Electrical','KitchenQual','Functional',\n         'FireplaceQu','GarageType','GarageFinish','GarageQual','GarageCond','PavedDrive']","c99de710":"#Length of the final count of columns\n\nlen(columns)","04fa1101":"# **Reading the Dataset**","b6e1449a":"# **Visualizing Missing Values**","f4134d89":"# **Importing Libraries**","ac8ff2ff":"# **Missing Values Handled**","b2cab679":"# **Checking for Missing Values**","f87f1f52":"# **Handling Missing Values**"}}