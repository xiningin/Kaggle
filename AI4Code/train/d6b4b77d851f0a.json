{"cell_type":{"482528ff":"code","ffe54479":"code","f1f4045c":"code","27887973":"code","cc23b32b":"markdown","67837209":"markdown","0db3ea16":"markdown","2348fdc3":"markdown"},"source":{"482528ff":"import pandas as pd","ffe54479":"train = pd.read_csv('..\/input\/severstal-steel-defect-detection\/train.csv')\ntrain.head(10)","f1f4045c":"# find unique ImageId\nunique_ids = train.ImageId.unique()\n# dictionary placeholder\ndata = []\n\n# for every unique id, get a list (.values) of their ClassId and EncodedPixels\nfor unique_id in unique_ids:\n    ClassId = train.ClassId[train.ImageId==unique_id].values\n    EncodedPixels = train.EncodedPixels[train.ImageId==unique_id].values\n    data.append([unique_id,ClassId,EncodedPixels])\n\ndata[:3]","27887973":"# assign the encodedPixel to the right column\ndef doOneHotEncode(imgid, classid, enc_pix):\n    i=0;e1='';e2='';e3='';e4=''\n    for _id in classid:\n        if _id==1:\n            e1 = enc_pix[i]\n            i+=1\n        if _id==2:\n            e2 = enc_pix[i]\n            i+=1\n        if _id==3:\n            e3 = enc_pix[i]\n            i+=1\n        if _id==4:\n            e4 = enc_pix[i]\n            i+=1\n    return imgid,e1,e2,e3,e4\n\n# split and replace binary with encoded pixels\ndata2 = []\nfor row in data:\n    data2.append(doOneHotEncode(row[0],row[1],row[2]))\n\ntrain_df = pd.DataFrame(data2, columns=['ImageId','e1','e2','e3','e4'])\ntrain_df.head(10)","cc23b32b":"## That's all?\nmaybe not the best solution, I just want to document my progress (took me a day to get this). If this helped you in anyway, then I'm grateful\n\n## What if there's 80 categories?\nI'll update this once I know better techniques. There's also scikit-learn [multiLabelBinarizer](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.preprocessing.MultiLabelBinarizer.html) for lots of categories. feel free to say anything in the comments. Thank you","67837209":"1. combine ClassId and EncodedPixels if an ImageId has more than 1 (ex: no 5 and 6)\n2. create 1 hot encode (1 binary column for all possible classId)\n3. replace the binary with EncodedPixels instead","0db3ea16":"## Disclaimer\n* maybe not the best solution, I just want to document my progress and maybe get some feedback\n\n## Problem\n* I'm trying out image segmentation and found a great [notebook](https:\/\/www.kaggle.com\/cdeotte\/keras-unet-with-eda\/) from Chris\n* Unfortunately, the dataset changed. `train.csv` file has different format, and I have to figure another way to do one hot encode to match Chris's first output `Out[1]`\n![image.png](attachment:image.png)","2348fdc3":"# Multi Label Binarizer"}}