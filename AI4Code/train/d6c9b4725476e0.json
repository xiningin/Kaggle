{"cell_type":{"69b216c0":"code","c801a525":"code","b2b1fa59":"code","8b5bb62d":"code","76e109cb":"code","183cbb55":"code","04445b9d":"code","1df4aca2":"code","29d52225":"code","f58cb001":"code","f8c7e8d8":"code","206e3726":"markdown","3131cc3b":"markdown","aea4b86c":"markdown","91223b32":"markdown","691a8aa3":"markdown","10f3dddc":"markdown","78e94f69":"markdown","d05e0776":"markdown"},"source":{"69b216c0":"# Import the required libraries\nfrom sklearn import linear_model\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport math   # yep! going to a bit of maths later!!\nfrom scipy import stats as st # and some stats","c801a525":"Xtrain = pd.read_csv(\"..\/input\/Linear_X_Train.csv\")\nYtrain = pd.read_csv(\"..\/input\/Linear_Y_Train.csv\")\nXtest = pd.read_csv(\"..\/input\/Linear_X_Test.csv\")","b2b1fa59":"print (Ytrain.loc[0:5])\nprint (Xtrain.loc[0:5])","8b5bb62d":"print(Xtrain.isnull().sum())\nprint(Ytrain.isnull().sum())\nprint(Xtest.isnull().sum())\n","76e109cb":"# Review some of the statistics to check whether the data is skewed\nprint (\"Mean of X Training set: \", np.mean(Xtrain), \"\\n\")\nprint (\"Median of X Training set: \", np.median(Xtrain), \"\\n\")\nprint (\"Mean of Y Training set: \", np.mean(Ytrain), \"\\n\")\nprint (\"Median of Y Training set: \", np.median(Ytrain), \"\\n\")\nprint (\"Std Dev of X Training set: \", np.std(Xtrain), \"\\n\")\nprint (\"Std Dev of Y Training set: \", np.std(Xtrain), \"\\n\")","183cbb55":"### Now plot the relation between X and Y\n### this gives some core routines to experiment with different parameters\nplt.title('Relationship between X and Y')\nplt.xlabel(\"X label \")\nplt.ylabel(\"Y label \")\nplt.scatter(Xtrain, Ytrain,  color='red')\nplt.show()\n\n\n","04445b9d":"# Create linear regression object\nlm = linear_model.LinearRegression()\n\n# then fit it\nlm.fit(Xtrain,Ytrain)\n\n# R sq to give an idea of the fit \nprint('R sq: ',lm.score(Xtrain,Ytrain))\n\n# and so the correlation is..\nprint('Correlation: ', math.sqrt(lm.score(Xtrain,Ytrain)))","1df4aca2":"# This the coefficient for the single feature\nprint(\"Coefficient for X \", lm.coef_)\n\n# Get the standard error\nprint (\"Standard Error: \",st.sem(Xtrain))\n# Our hypothesis test for this is that there is no difference between the coefficient and the true value\n# that the coefficient should be\nttest = lm.coef_\/st.sem(Xtest)\nprint (\"The t-statistic:\",ttest)\n\n# but we need the p-value to help determine the probablity that we have a correct t-statistic\nprint (\"Two tailed p-values:\")\nst.pearsonr(Xtrain, Ytrain)","29d52225":"y_predicted = lm.predict(Xtest)","f58cb001":"y_predicted","f8c7e8d8":"np.savetxt('predictedYtext.csv',y_predicted)","206e3726":"### Now let's run the model against the test data\n","3131cc3b":"## Load data","aea4b86c":"## Check for the data set for Null values","91223b32":"## Now check the data set to understand how to proceed with this\n","691a8aa3":"## Print the other usefull statistical informations","10f3dddc":"#### A good R sq and correlation!!! The positive correlation shows that as Y increases so does X.","78e94f69":"#### Median and mean are similar so the training set isn't skewed by any outliers that might cause leverage when doing the linear regression","d05e0776":"### Now to set up the linear regression model\n"}}