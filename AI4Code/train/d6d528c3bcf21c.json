{"cell_type":{"064890d7":"code","01c2bf2e":"code","334f6343":"code","c1d46992":"code","c1eb7159":"code","4bcf84ea":"code","09ca94dc":"code","30450b62":"code","57eccce8":"code","b2092de9":"code","54006005":"code","bf13a819":"code","ae928f2e":"code","05ceb97d":"code","85039335":"code","632aa575":"code","4d1d3e4f":"code","1c5f1d65":"code","9f5fcde6":"code","78d36368":"code","92b38f14":"code","1f497630":"code","dceccc23":"code","238c5724":"code","0e58d499":"code","3b0f1fb8":"code","e4db79a2":"code","38660910":"code","cd8f23b8":"code","a0db6199":"code","9e7a0cb2":"markdown","f6f52628":"markdown","06749e0e":"markdown","4db17b1c":"markdown","39d19799":"markdown","23dcc2f9":"markdown","f447b029":"markdown","98052a6c":"markdown","037e9529":"markdown","d897bf69":"markdown","c10312a9":"markdown","ac102aba":"markdown","ef5481d7":"markdown","443d10dc":"markdown","722c3515":"markdown","7824bf65":"markdown","620bd610":"markdown","6da88972":"markdown"},"source":{"064890d7":"import pandas as pd\nimport numpy as np","01c2bf2e":"df=pd.read_csv(\"..\/input\/breast-cancer-wisconsin-data\/data.csv\")","334f6343":"df.head()","c1d46992":"df.describe()","c1eb7159":"df.info()","4bcf84ea":"df.isnull().sum()","09ca94dc":"df=df.drop(\"id\",axis=1)\ndf=df.drop(\"Unnamed: 32\",axis=1)","30450b62":"import matplotlib.pyplot as plt\nfor i in df.columns:\n    print(i)\n    df[i].hist()\n    plt.show()\n    ","57eccce8":"df.skew()","b2092de9":"df.var()","54006005":"df.diagnosis.replace(to_replace=['B','M'],value=[0,1],inplace=True)","bf13a819":"import seaborn as sns\nsns.countplot(df.diagnosis)","ae928f2e":"plt.figure(figsize=(15,8))\nsns.heatmap(df.corr(),linewidths=.9, yticklabels=False,square=False,linecolor='black')","05ceb97d":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.experimental import enable_hist_gradient_boosting\nfrom sklearn.ensemble import HistGradientBoostingClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom lightgbm import LGBMClassifier\nfrom xgboost import XGBClassifier","85039335":"X=df.drop(\"diagnosis\",axis=1)\ny=df[\"diagnosis\"]","632aa575":"x_train,x_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=40)","4d1d3e4f":"rfc=RandomForestClassifier()\nrfc.fit(x_train,y_train)\nrfc.score(x_test,y_test)","1c5f1d65":"xgb = XGBClassifier()\nxgb.fit(x_train,y_train)\nxgb.score(x_test,y_test)","9f5fcde6":"lgm=LGBMClassifier()\nlgm.fit(x_train,y_train)\nprint(lgm.score(x_test,y_test))\npred=lgm.predict(x_test)","78d36368":"for i in df.columns:\n    if df[i].var()>10:\n        df[i]=np.log(df[i])\n        print(i)\n    ","92b38f14":"df.var()","1f497630":"df.skew()","dceccc23":"X=df.drop(\"diagnosis\",axis=1)\ny=df[\"diagnosis\"]\n","238c5724":"x_train,x_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=40)","0e58d499":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test = sc.transform(x_test)\n","3b0f1fb8":"rfc=RandomForestClassifier()\nrfc.fit(x_train,y_train)\nrfc.score(x_test,y_test)","e4db79a2":"xgb = XGBClassifier()\nxgb.fit(x_train,y_train)\nxgb.score(x_test,y_test)","38660910":"abc = AdaBoostClassifier()\nabc.fit(x_train,y_train)\nabc.score(x_test,y_test)","cd8f23b8":"lgm=LGBMClassifier()\nlgm.fit(x_train,y_train)\nprint(lgm.score(x_test,y_test))\npred=lgm.predict(x_test)","a0db6199":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,pred))","9e7a0cb2":"## Model performence after preprocessing","f6f52628":"#### So,Standard scaler increased the accuracy by ~2 percent ","06749e0e":"### Applying log transformation for high variance variables","4db17b1c":"## visualizing target variable for any class imbalance","39d19799":"## Xgboost classifier","23dcc2f9":"## Removing unwanted data","f447b029":"## Exploring dataset","98052a6c":"## checking for any missing data","037e9529":"## Train test split","d897bf69":"## random forest classifier ","c10312a9":"## Model with no preprocessing","ac102aba":"# Checking for skewness","ef5481d7":"## Correlation matrix","443d10dc":"## Checking for the variance in the data","722c3515":"## Accesing first five rows with df.head() method","7824bf65":"## Encoding data","620bd610":"## Histogram representation of data\n##### histogramns tells us about the skewness and outliers in the data","6da88972":"## Model evaluation"}}