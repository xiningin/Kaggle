{"cell_type":{"1b11d86f":"code","fa891c32":"code","e06e2156":"code","c8e46b81":"code","7f3a7a3b":"code","4cc4094e":"code","6e7c7668":"code","a042f000":"code","8cf54731":"markdown","d82c4b7c":"markdown","70133307":"markdown","39b16a3a":"markdown","7952a277":"markdown"},"source":{"1b11d86f":"import os\nimport numpy as np\nimport imageio\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\nimport torch\n\nfrom torch.utils import data","fa891c32":"class TGSSaltDataset(data.Dataset):\n    \n    def __init__(self, root_path, file_list):\n        self.root_path = root_path\n        self.file_list = file_list\n    \n    def __len__(self):\n        return len(self.file_list)\n    \n    def __getitem__(self, index):\n        if index not in range(0, len(self.file_list)):\n            return self.__getitem__(np.random.randint(0, self.__len__()))\n        \n        file_id = self.file_list[index]\n        \n        image_folder = os.path.join(self.root_path, \"images\")\n        image_path = os.path.join(image_folder, file_id + \".png\")\n        \n        mask_folder = os.path.join(self.root_path, \"masks\")\n        mask_path = os.path.join(mask_folder, file_id + \".png\")\n        \n        image = np.array(imageio.imread(image_path), dtype=np.uint8)\n        mask = np.array(imageio.imread(mask_path), dtype=np.uint8)\n        \n        return image, mask, file_id","e06e2156":"depths_df = pd.read_csv('..\/input\/depths.csv')\n\ntrain_path = \"..\/input\/train\/\"\ntrain_df = pd.read_csv('..\/input\/train.csv')\ntrain = pd.merge(train_df, depths_df, on='id', how='inner')\nfile_list = list(train['id'].values)\ndepth_list = list(train['z'].values)\ntrain.head()","c8e46b81":"dataset = TGSSaltDataset(train_path, file_list)","7f3a7a3b":"train = pd.merge(train_df, depths_df, on='id', how='inner')\nMaskArea_list = []\nfor i in range(len(train['rle_mask'])):\n    elements = str(train['rle_mask'][i]).split(' ')\n    if len(elements) > 1:\n        area = sum([int(elements[i]) for i in range(len(elements)) if i%2 == 1])\n    else:\n        area = 0\n    MaskArea_list.append(area)\n\n","4cc4094e":"def plot2x2Array(image, mask, Image_title = None, Mask_title=None):\n    f, axarr = plt.subplots(1,2)\n    axarr[0].imshow(image)\n    axarr[1].imshow(mask)\n    axarr[0].grid()\n    axarr[1].grid()\n    axarr[0].set_title(Image_title)\n    axarr[1].set_title(Mask_title)","6e7c7668":"#for i in range(len(dataset)):\nfor i in range(10):\n    image, mask, file_id = dataset[i]\n    plot2x2Array(image, mask, Image_title = file_id, Mask_title = file_id)\n    print('Image %d \/ %d' %((i+1), len(dataset)))\n    print('depth of id (%s): %d' %(file_list[i], depth_list[i]))\n    print('Mask area: %d' %MaskArea_list[i])\n    plt.show()","a042f000":"#len(depth_list)\nplt.plot(MaskArea_list, depth_list, 'b.')\nplt.xlabel('Mask area')\nplt.ylabel('Depth')\nplt.show()","8cf54731":"## PyTorch Dataset definition","d82c4b7c":"### Calculate mask area values","70133307":"Let us visualize a few samples from the dataset.","39b16a3a":"# Simple Dataset using PyTorch","7952a277":"### No explict connection between depths and mask areas!!"}}