{"cell_type":{"ed1d0c82":"code","ec942153":"code","a0548cc1":"code","d7b96230":"code","aadab982":"code","df1bc0e3":"code","94f5415e":"code","afcec76e":"code","8b96377d":"code","f7524eac":"code","87683d61":"code","ab0cfa97":"code","8dfb399e":"code","581271b6":"code","e0bcf3fa":"code","3707fecf":"code","24d79e41":"code","ae24db08":"code","fc0a5570":"markdown","b04122a1":"markdown","48ac814d":"markdown","fc0e1ca2":"markdown","87ce2149":"markdown","52d30a86":"markdown","ded38e5d":"markdown"},"source":{"ed1d0c82":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxISEhUSEhIVFRUVFRUVFRUVFRYWFRYXFRUXFxgVFRUYHSggGBolGxUXIjEhJSkuLi4uGCAzODMsNygtLisBCgoKDg0OGxAQGy0lHyUvKy0tLS8vKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS8tLS0tLS0tLS0tLf\/AABEIAJ4BPgMBEQACEQEDEQH\/xAAcAAEAAgMBAQEAAAAAAAAAAAAAAQIDBAUGBwj\/xABGEAACAQIDBAMLCgUEAQUAAAABAgMAEQQSIQUGEzEiQVEHFBYjMlRhcYGU0jRCUnSRkqGxs9EVM3LB8BckYoJTJTVDg\/H\/xAAbAQEAAgMBAQAAAAAAAAAAAAAAAQIDBAUGB\/\/EADoRAAIBAgQDBQcCBQQDAQAAAAABAgMRBBIhMQVBURMiYXGRFDKBobHB8FLhFSNC0fEGM2JyU5KiJP\/aAAwDAQACEQMRAD8A85v5vnjZcbMqzyQiGSSDxEkkWcRSMuZsrC50vY3tc1swgkjDKTuee8Jcd59i\/eZvjq+VdCudjwlx3n2L95m+OmVdBnY8Jcd59i\/eZvjplXQZ2PCXHefYv3mb46ZV0Gdjwlx3n2L95m+OmVdBnY8Jcd59i\/eZvjplXQZ2PCXHefYv3mb46ZV0Gdjwlx3n2L95m+OmVdBnY8Jcd59i\/eZvjplXQZ2SN5Md59i\/eZvjplXQZ2W8JMd59i\/eZvjplXQZmQd5Md59i\/eZviplXQZmV8Jcd59i\/eZvjplXQZ2SN5Md59i\/eZvjplXQZ2X8I8d59i\/eZvjqcq6EZ2UO8uO8+xfvM3x1GVdCc7I8Jcd59i\/eZvjplXQZ2PCXHefYv3mb46ZV0GdnQ2DvxjcNMsxnlny38XPNJImotcBibGxIv6TVZQTRKmyNt77Y7ETPMMRNDmt4uGaSNBYW5KRc+n0CkYJIObNDwlx3n2L95m+OrZV0Izsnwlx3n2L95m+OmVdBmZHhLjvPsX7zN8dMq6DOx4S47z7F+8zfHTKugzseEuO8+xfvM3x0yroM7HhLjvPsX7zN8dMq6DOx4S47z7F+8zfHTKugzseEuO8+xfvM3x0yroM7HhLjvPsX7zN8dMq6DOx4S47z7F+8zfHTKugzseEuO8+xfvM3x0yroM7HhLjvPsX7zN8dMq6DOx4S47z7F+8zfHTKugzseEuO8+xfvM3x0yroM7HhLjvPsX7zN8dMq6DOx4S47z7F+8zfHTKugzseEuO8+xfvM3x0yroM7HhLjvPsX7zN8dMq6DOzrbu7\/wCOwjs\/GefMuW08jyZdQeiXJtewv22HZVZU0yVNo5W9ny7GfW8T+u9WjsiJbnNijLGwFzYn2AEn8AT7KiUlFXf5yISb2M2DwMksohRSXLZbWOmtiWtyA6z1WrHVxFOlTdWT7qV\/8efLqWjCUpZVue6bdGHC4d55ullVgxvb5xAya6MykAdhYHqry64zVxdeNGlpe305+Cevik1zOj7NClByl+f5PE4CEYiWxZUBuSRYKl7KgA7M7Ivtr0mIq+zUs1m9vN9fja7NCEe0l0M270qCdY5QLMwXpW6D3sM3\/EnosOxj2CqY+M3Qc6bd0r6c14ePOPilybLUWlO0vz85np94twzGrPDc5RmycyRZAAO03Dn2iuJw\/wD1BGrJQq89L+vy2+ZtVsFZXj+bfueJggZ\/JBPXpXpZzjD3nY0FFvYx1cqKAlaAvUgq1QCtASpoDJmqSDEagkkCgIoCSKAigFAKAUAoBQCgFAKAUAoBQCgFAKA6K7KvhWxPEXouFMfztSBe\/bre3ZWm8XbFLD5Xqr35G0sNfDuvmWjtbmbeB2EpmVJZcsZi4nECkKOjmK3YWBAuSfRWCvxCUaLnTheSlbLdX3tfTqZqOCi6ijOVotXvbwvbU40qWJscyhiA1iAbcj7RraujGV0r6O2xoyVm7arqUqxUUB1d7Pl2M+t4n9d6iOyLS3PVdzjZkUiM7C5DEH\/sMtr\/ANLHqPM87gDyv+ocXUpTUY819Hf6r6bW16GCpxcbnQ3V2EYtoYt2vlSxVjYC01pbg3tcAgX\/ACvWpxTiHbcPoxjvLdf9e78zJQo5a0m\/y+pxd\/N80xS97QA8IOCXJ0ky3sFS2i31udTYaCulwTgk8JLt6z7zW3S+9318Nl4mDF4pVFkjscHHCbE4ZGkmKDOY88kjLG6oFIDIL53zMLFV5KS3bW26VOjiHGlC7teySur32ellps3\/ANehSMnKF5MjbM8ypHDI7lWjSUlnLl2IILZySCoYMFy6WsdTrWbh9Kk81WK7ybjtay6W8rXvry20MdeUtuW59H3R3yjxoGHlGWYJzJzLLYdIr2HmSh6uV7GvJcW4JUwTdem7wv5OPT9n6nRw+KVVZZb\/AFOZuvu5lxWMZ7hVbIt+ssRNcHrsFH21u8T4nmwtBQ3au\/h3bfG7MdChapNv85nkt9MGkWKZE7ASPSSf\/wB9ttLV3+EVp1sKpyNPFRUalkcKuoawoCb0BBoBQCgFATagLAUAqQQRUArQCgFAKAUAoBQCgFAKAUAoBQCgOhgNjTTRvLGoZYzqPnHS9lUc9K06+Oo0akaVR2ctunxfI2qOEq1YSqQV0j6DsPZ0eH\/3E0UUXEQNI5cKkTXXLCqHl2k35ivJY3E1MT\/IpTlLK7JWbclZ3k2vRK2x3qFKFH+bOKjda8kttEvzU6O3hjeHH3rHGxZznBYOuQnom7WuCOdtRewvzrTwPsXaT9pk1ZaaWd+e19U9uvMyYipiMq7JLfXnp+bnB3t3fGW0V404i5k6CQrI1gZiW1K5SVsOu1hzrrcK4i816nelZ2erk4q\/d0531u+W5q43CJxtDRXWmiV3\/V6aaczxG2Nn97ytFnV8tukvpF7EdRr02ExPtFJVMrV+TOLiaHYVHTve3M0q2TXOrvZ8uxn1vE\/rvUR2RaW5Xd7bDYWUSLfKdHUfOH7jqNaWPwUMXScHvyfRmSjVdKV\/U+rBkxeHkyPbvhGXOp5ZkC3I9GgI6rV4S08HiI51fI728nf90djSpB5eZ5LHxgsuz1XgxrEHYqFzyNmsCzEajtI679Qr2PBcI8TOWLqNylrblZabLbnpfl4u5yOJ4lUIqFNWTt6u+\/pv8fApj9ld7Q2jmYFrRyJljICnMQCWU9K4vccvtrLWjTqVVOMW4Ntwk2021ZNpK3d1sr79LWvqVsVNU+8oqaUYyir21vvq+87atWN1N0jLApFhw2Lq4KLM3RBZR9JV8q1tL1v4ShhnlnOcr1FrHeK+V9dt9iK+Jxk03CEbQsk+bS668ur38WX2GnfpildQsmGlIMyKFaQRkEKbWBuuh7L305HynEl\/D51aMG3CaaUXqk3dX+G\/y13XZw0lXpxm13tNfD9\/7nT3p2+uFRiLF5PJUG9zzzG\/zR0fsFc3hnDpYuaT92O\/l083r8zNXrqkr82fJ5p2dizkszG5J5kmvfwhGEVGKslscZtt3ZjqxAoBQCgFAKAUBK0BepAoCDUAoaAkCgBWgIoBQCgFAKAUAoBQCgFAKA29nut2WRpAhUkiPXMy6qGW9iKwV1KycEm78+Se9n1M9Fxu1Ju3hza2ufW9oYSDFIIZnDCQ8WJUIVyFUHokmzeUdf8Al7a+fYetXws3WpK2Xuyb1Wr59NvkenxNOnWjkm99UZdq418HAxjgV0iWJYEVmLkaIxcWNgtxqL+m1VwtCGNrpTm1KTk5tpWvura7vxt4GGpKVCDyxulayOPteSN8C2dZQZOHJJEGMkqGWQGwDcgLGwIHKuhhY1IY9ZXHu5kpWtF5Vbl8Liq4ywrUk9bNrdq7\/LHzHExhXZQGADEAOLOBfTMOo2tXt6cnKCk7Xty1Xw8DzVSOWTSv8d\/iYquUOrvZ8uxn1vE\/rvUR2RaW5qbMwDzyLFGLk8z1Ko5s3oH7dtYcTiYYem6k9l830XiWp03OWVH1aFsNhIVgBKJEhcs\/lN0gHfS9zmI+2w0rwU1icZVdZq7k7JLlpovT+7OxHJSjl6Hiu\/3TG+KlGI6FhJdmYrZDa9z01C20sOZtXrKMnHD3qRyX0cZe6\/Ddd16aX2SWxyMU7ax7zW1t1489fG3M7csXFi6REVmBHENtQbdnKzMfZ2XNYcVxOrUrK6UrX9xdbeL6L\/NkadLBwdB3eXVe8+l\/Do3\/AIM021541CRrfTosuYodAM1rA2Nr9VY6Fam7dooXVl3orNpqlfNy8DPVqVIaQUmn0en05nI3L2gl2MuICXkypCCbOzkdMi9rC4ANhy1qnGadapG0IN6ZnLkrdPF8zoYWUI7u3JI7G9mzExsIkhBM0RdVIGkiqxV19eZWt9nIi3O4Vi54Gt2dV9yVm\/8Ai2k0\/Rq\/90zPiKSrRzR3R8yIr2xyRQgUAoBQC1AKAUBIoCwNATUgqTUAgUBkFSQKAxmoJIoBQCgJAoARQEUAoCctARQCgN\/Yu1nwshkjCklSvSBIsSD1EdgrUxmDp4un2c27XvobOFxU8PNzha9ransN3t4M0fBdpJfEyM8yKQ0GYMSh6za2jD0C2lee4hw7LV7aCjHvJKLek7NWfh4p+LudfCYvPDs5Ny0bckvd8P7M3NiYmDDwRwJipWMjiSNhGQXBPkIrAgKctjfrYnrrWxlKvia8q06UUorK1daabtp7q\/yMmH7KjTjTU23J3Wm\/gr+Robc3kVmEhdo3jGeKIXvnN1ZMSttDblryY+3bwXC5Ri6aSlGWkpeG6cH9dN0Y8RjY3zXs1rFeOzUl+543amPfEStK9gzW0UWAAFgB9leiwuGhh6SpQ2XU42Iryr1HUluzVrYMB1d7Pl2M+t4n9d6iOyLS3J3d3glwbs0YVlcAOjcmty1GoIuftrQ4hw6ljYKM7prZrl9jJRrypO6PUYPD\/wAbclgYOAhClBxA7ub6k2AtYXHMhuYrh15fwOCUHnzvW+lkvXfr4G7H\/wDU9VaxyNobFOCxTRhyQqgFjYNZ4wSdNLgn22HbXa4ZxL2mgqklbNdO3m1f7nH4io05Olz0aM6gCFrPn8YnUQPJl7ayV8inGMZZve5Nc49epoNydKV1zhzvykbuM2nlJXnZBl\/qyjQ+j0+it7AY6lRoJJXeXfxWlv3LYuh2l5SnbLJLLbVpq7d\/RW8TW3W3HGMVnaVlCyBWCqpJUpckXOhuRbn16GvOcW43LByUIxTum9et7HbwNKOIi5Lk7GXwnfZwbBLCrmFnVZHzLmBYsH4fYb3HSrGuE0+I2xcptZ0m0rO2iVr\/ALGd4l0F2aW3M8djMU8rtJIbu5zMbAXJ9A0FejpUoUoKnBWS0Royk5O7MNZCooBQFlFATUgqagEUAoCb0AvQEUBIoC4apIBagKGoJIoBQCgFAKAUAoC2agsVFAZ8Ph3kYJGjO7GyqilmY9gUamhJnj2NiWlaFcNOZVF2iEUhkUdrIBcDUantFRdCzM+zzjIRaKOZeOTEPFMeI6kqUS66uCSLDUVr18NRruLqK+V3Rno16tG6g7X0ZkweA2gsiFMPii8Yug4MrlVBKmy5T0b3HZe9WqUKNSEoSStLflf9yKdWrCUZJu628DnbSmkaV2muJCemGXKQRpYqfJsByq1GlClBU4bLYpVqSqTc57szpsTFEsowuILIoZ1EMmZFOoZhluoI5E87VkuilmaANSDq72fLsZ9bxP671EdkTLc5VSVPY7tb6jC4bgMkhKuxTIVVSGKtZyb63z8hyYdled4lwJ4vE9spJXSve72utPhbnuvE6OFxsaNPLKNys2\/03\/xwxr25izk3ABuRl52vy5k1MP8ATtH+ubflZf3MkuLVL9yMV8Ds7Xwk2MwuGxEGUyMpabUBTrl+eSTlYsBrpc1z8JXo4HFVaFa+VO0eb68klqrMnEYWeOpxkoq\/O2m1\/wBydt7Xl2dhsKqZDM4cy51JJYZcxzKwuLnLr1AW5VXB4OlxPE1pTvkVstumttGny189y06k8HCMUld78znYLuiMts+HW9rZ43KnRQBo178gbZrc+2tyt\/pqEvcqPyaT+lvoVjxRt3nBPy0OLvlvCMbMrqrKqRhBntnJ5sSQT18hXS4Rw54Gi4N3bd9NvA0sVXVad0rI4NdU1hQCgFASDQFr0BQ0AoBQCgFAKAUAoBegFAKAUAoBQEgUBOWguVoBQCgPV9znaEcU86vMuHebCTwwTucqxSvlysz\/ADOR6XV7apNXReG56XC41jBicJ\/GIO+z3oy4szlIzHHe+HXE\/PyElr\/OznrzWo1rexk8Dtx734CTEYqV5ky4TEDF4a5C98P3m0LrED5V5BmsOZIPXUZHZC5p4DbccuEVBj4IcQ+zQnEfELEUnM5YhmBura3tzo4u+wTPN767ewvfQxMEjz4uCPDqsoSJ8LNJEozyOG6THqBAtdV7L1eEXaz2Ktq57vD714dsVJnxWGESvhMQZe\/OE7OkIWRAiA8dRl1juNTYjsx5XbYtc+J7WnSSeaSMWR5pXQWtZHkZlFurQjSs62MUtzb3s+XYz63if13pHZCW5yqkqKAUBlgxMieRI6X55WZb+uxrHOlCfvRT80mWUmtmUkkZjdmLHtYkn7TVoxUVaKsiG29ytWIFAKAUAoBQCgFAKAUAoBQC1AKAUAoBQCgFAKAUAoDIlSiGWqQY2qpJWgFAKAUAoCStARQCgFAdXez5djPreJ\/Xeojsi0tzlVJUUAoBQCgFAKAUAoBQCgFAKAUAoBQEgUBa1AQRQFaAUAoBQCgFAKAUBZWoCc1TcixUmoJIoBQCgFAKAkmgIoBQCgPR90DY82Hx05mTLx5Zpo9QbpJIzC9usBheqQkmi81qcfZ2BMrEZgiojSSOwJCItgTYasSWUADmWHLnVnoVSubcmwJSTwgzqLWZ1EDMcucqkcrBnIXWy309dRmXMtlZWLd7FNe0XkyNCbvGvjVIUxrmYZmubAC97G17GpzIjKyRu5ir24a3vGtjNADmlBaNLF752AJC8yOqozIZWWTdrFEX4Y+bpxoc3STiKuTPmzMnSC2uQDYaVOZDKyfB3E2LGMAAXZmlhVU8jSQs4EbeNj6LWPTGlMyIysx4nYU6NHGVUvLnyoHQuCkjxsHAPQsY21Omh10Nl0MrLybvypCZXIBMkccaK0b8UyDMGVhJYrbkVDXNxpYkRmVy2U2Bu1cuizBnjE2fxbLEGgRmZFnchTqpGY2tz1FRmJyGlFsHEMzIsYZ1KAoJYi3jMmRlUPdkPFTpi69LnVrorlYGwsRmCZFLMpZQJoTnALKQhD2dgUYFVuQRypmQys54FSVIIoCKAUAoCy0BapBBqAUoBQCgFAKAUAoBQCgFAKAvQFDQCgFAKAUAoBQHV3e3dxONZkwyZyihm1sACbCqyko7llFvY6G\/+2ZsTjphM+bgSzQR6AWSOVlF7aXIUX\/KohFJEzepyMBjWiYkBWDI0bo4JV0bmrWIPMA3BBBAINZGrmNOx0pt6ZTk8XF4oeJ\/msYSVKl1LSEsxBHl5hdV0FqpkRfOyq724m1jlI4caWDSxkmLOVkLRSKxcmRyTexvy0FmRE52ap29NxOJZM3Ggn8k2z4dCiaX8mzG46+0VNkRmZlj2\/MGz2S\/Eik8k2zQwmFfncshN\/T2cqZURnZfaO8U06MkljnQI5zSnNZ43zBWcojXiW+VQDc6crSopMObaIn2\/I0qzFI86mY3s9mWZ5HeNlzWy3mkGljZuegNMqtYZnc1sdtqSRFiypGkbI0aoGGTIrAAMzEnV2a5JNzz6qqopE5mzYm3llZJVEcS8Ys0pUS9JnSRGYKZCiEiVz0VAuRppamVE52bGG3yxCBQqxdERgG0mojEQXMocKx8QnSIvzAIGgjIhnZj2VvTPBGsaLGQhupIkB8qRtcrgMLyt0TcaDS4vUuCbGdnEUW0q5QGoBSgFAKAkGgJvQAmgK0AoBQCgFAKAUBlwuGeRgiKWY8gP80FVlJRV2ZKVKdWShBXZn2hsuaC3FQrfkbgg256g86rTqwn7rMlfC1qDSqRtc06yGudTdzY7YqYRi9gLsRzt2D0n96w1qvZxvzN3A4T2iplbtFatnuhuRh2SwidbgWcM9+loD0uibn0VzHjKyd\/sd+pwvB2ypWfm7\/X7Hzza+AbDzPC\/lIbX5XHMG3VoRXVpVFUgpI8xXpOjUcHyNO9ZDFcXoLk0AoBQCgOtu7vJicCzPhnyl1CtcXBANxVZRUtyyk0RvWf99jPreJ\/XepjshPcjYeBWeQoxIAQtcW6io6\/XVak3FXN7hmCji6zpybStfTzS+57HE9zJ0iMsjlQFzZWeMSZeo5LX9nOsDxEuh0YcMwc6nZwnJ62vbS\/nYhu5kwkeIucyRcZuktsgtqDbnryqPaJdAuGYNwVTPKzeXZbldl9zYzgsjsFUgFnZFW55LcjU6j7ahYiT5ImvwrCUWoynK75JJv6G3hO5XI4JVyBmZBmeMZ2UkEJ9LUHXlpRYifRGKpw\/BQdnUlsntsn10Kf6ZNeMZnvKzIouujIbMG00tY\/Yaj2qp0Rb+GYPvfzJd1JvbZ7W0M69yliQokPS4luklvFMFfW3aae01OiMbwGDSbzy0tyXNXRp7Q7mwhIEjyDMLqQUZWHaCBWOWMqR3SM9HhOGrJuE5ab7X+hsp3KWKo2aW0jBUByBjcE3sRoLAm5qfaqtk8q1MT4fg1KUe0eiu9v7FMT3LxG6I0rgv5LBoyh1t5Vuo1WWMqxaTSLU+GYacXKM5ab6a+ljLje5UIgGaV9eQUoxtYm9gOWh1pPGVYK7iilLh+Fqu0Zy+KSNb\/TpNTnn059EadevR0rF\/EKv6V8zN\/CMP8A+R\/Ivhu5qkhULLNZmChrLluTbU5aR4hVk9Ir5lanCqEE25vTXlcmbuZxqzKZZjlYoSApGYG1gctVlxGrFtZV05iPCqEoqSm9VflsR\/prFexknuLXGVbi\/K4y1V8TrJ2yL5j+E0LXzv5HA3w3VjwcaOruxaTIQ4UW6LHqHPo1s4PGzrzcZJKy+5p47AwoU1OLbuzyldI5YoBQCgFAKAUAoCaAWoDs7qbSTDz55PJKlc1r5bkEG3ZpWviacpwtHc6PDMTDD1s09mrX6HX332\/BPGkURz2fOWAIA6LCwvzPS\/CtfB0KkJOUlbSxtcUxtKtBQpu+t7\/A8faugcQ7+5O2RhcRmZsodcuawIU\/8gdMpBIPrrWxVOU4XjujpcMxFOlUcanuy08tbo+14TbU80KRIquNOkqqwZRqotbKAO3loK4861Vrs0tfI7Tw2HhN1s2nn877nXwG7eBxCCV0ixDtfPKrZwzX1GZTY25eyurh6lSlTUL\/AE3epw8RUjUqOUVpy8kbHgXs\/wA1j\/H96ze01evyRhsPArZ\/msf4\/vT2mr1+SFj453Ytz4ME8cuHGRJbgp1Kw1uPRWaMs8M3NGKcUtUeGmwXQUjmVB9fbW7LCp01KO9jPLDdxSjvY0a0jTFAKA6u9ny7GfW8T+u9RHZFpbm1uUbTk9kZP2OlYa\/una4Ar4mS\/wCL+sT7PtLa+DlSeQkGSWKyo8BLxyBMoyy8gunV13N61G0dShhcVSlCC92L1alo1e+sev8Agz4jemJpJRccNsMUVuEwcyEAZSbXtz56UckY4cNqRhF27yldq+luvmcjZ2JgfCd7TSNEVl4quELhujYghdb6n8KpdNWZu1qVaGI7anHNdWte31N\/DY7CsuHDyuhwrtl8WTxVzAqdPJJyrz9NRmjprsa86GJjKo4xT7RK+uztr57m1gd5YvGtICGErywCxOrIVykjQc7\/APaiqrW\/wMVXh1XuRhtZRl8Hf88iuytswqkCyOQVjnVzkY2MjKRyGvI8qrGpGyv4k4jB1pSm4R0bi1quSZrYraUCxxQLHx1iVhnfNH0mN7hRrb11jlUjZR3sZaeGrucqsnlcmtFZ6IzbO2xlhjUykSLPmuys4CcMpr2ixtYG9I1UorXW5Svg3KrJqPdcbaWWt7mHeHHxyiNIgMsYfUIUUlyCcqnUDTr7ax16kZWUeRkwVCpTcpT3dud3p1ZvQbViE8L5jZMOI2OVtGAOlra+vlV1Wgpp32VjXnharpTjbVyvvyNjZG2Y1VWlkcyEtxLh2BuLKQActrAdRNKWIgleT157\/wCDFicHUlJqnFZVa23x8fmY4tpR5YPGsgjEYaII2VsrAlrjTqvVFWhaPeta2haWGqZqndTzXtK60utjb\/jMBkR9QEeTohSQc97S8uevLnqfbb2qlmT6N\/PmYfY6yg473S18v6Skm2FAfK924WVGCve+YmxLknTnc9tUliopOz1tpo\/vcssHJuN46Xu1dfax8t7qhJgjJ5me5PpKPVuEu9aTfT7orxdJUYpdfsz5nXfPOigFAKAUAoBQCgPS7p7mT4+5j0UAm9gScuhsCRpc29da9WvkeWKuzfw+C7SHa1JZY3snvd\/nMyb2bj4jAgO\/SWwJ0syhtASASLX0586pSxSlLJJWf1GIwWSHaU5Zo7PlY8vW2aBFAKAUB+ke5llGy0VgMmUhrnTLkF7+i16ril31bojZWx09mYHAQxiOMRFQXbpSBzdgAxJY35Ko9QFaqg4qyVg5J6tmyFwQubQC9rnMmtrH+4PtqbSF0XgbCZwU4Oe+mV1vfloAaZZC6PnPd+e8WH\/rb8q2aH+3LzX3K1Nj5dG+aEEc1H5aflXaoSzUkb1KWakvA5U41rnYmOWp56mhXjaZjrAYRQHV3s+XYz63if13qI7ItLc5asRyJHqNqBScdU7F+O\/0m+8aZV0LdrP9T9WOO\/02+8aZV0Haz\/U\/Vjjv9NvvGmVdB2s\/1P1Y47\/Tb7xplXQdrP8AU\/Vjjv8ATb7xqMq6DtZ\/qfqx3w\/02+8f3plj0I7Sf6n6sd8P9NvvH96ZY9B2k\/1P1ZPfD\/Tb7x\/emWPQdpP9T9WO+H+m\/wB4\/vTJHoO0n+p+rHfL\/Tf7zfvTJHoh2k+r9WO+X+m\/3m\/emSPRDtJ9X6sd8v8ATf7zfvTJHoh2k+r9WW76k\/8AI\/3m\/emSPReg7SfV+rHfMn\/kf7zfvTJHovQdpPq\/VmOSZm8pmPrJP50UUtkQ5Se7KVYqKAUAoBQCgFAKA+ydy3bKrhwFtmjV9SbZWAJKkfOV8q6eq2tcnESdOq7+aPSUIwxGFglytFr47+Fr3v6m13S9socLIHtmkQAG4JZ3UEKo6gmZtPQb61hpOVWvG3Kzb\/PQivGNDDTvzukvj8773PiNdw84KAUAoD9H9zE22bCCC1w1+je9kU2teq4r315I2VsevGEBF7JrY6p+etat2SXXCJpdVNv+IHPspdgsuFQckUW5WA6qXYPlHd+TxUHoYn8h\/etuh\/ty819ylTY+N4PFZD2qeY\/vWzQruk\/AUKzpvwMUxF9OVRiKinO6IrSUpaFKwGEAUJWp1d7Pl2M+t4n9d6iOyJluZt0cOrzOGj4loJmVOFxiWVRbLFcZz6Liom9CYbnXj3XRk4sySoWcEJEhBKs0iheAIm4bKUGZVeQqL9HkKrn5E5Tnbe2FHh4mlzN5QiCCRXIlUs0oLZFNhEI2F1BBmUEaEVMZNjKkb22t24U4zJHOiqcUVYuDHGINYle6AtxRbKbj+Yls+tQpMOKMOA3ZRlWR+OY2iw7gxrmzPKG4iLZCSFK62BKi+hOhOYyIvtHdRUiJUSNLrlVM8qKwly8J2ECqDwxnuzKwuAU66KYcDJunsSJ1R3jdxIlzIchhjbvxIuHlK\/zMgzXLcn5W1pJtCMVY3MLuxhlCM6ykOkTFm0jKyNBmAYxARv4xwLMxAUnSozsnKiuC3VjXPLJGyZeKypI2dSuWZFDAwqAwKBtHJGlwLijnyCijl4DYkcmGjlWDESPwizLE4vK\/fTxFVvG2UrHlYjXQryF2qzlZkKKZ08HuvAkvNpUTMRM2Q4eY8SSPgqtvLUDOekfIbQCxqrm7E5UcrAbFjkwkcwhnkk4cjMsT6yuuIWMIo4bZSI2zkC5sOVrkWb1sQopmbDbIw95IHLP\/AOoRYaOVCisFZZVzMSrZluFJUWuRzFLvfwCS1N\/C7rYfMsed24qwqJMpyES4jBgywO0aqGAlcWDPodTzFRnZOVHHfYKmSKILLHLPFIY4ZWTOsyu6xq5yr0ZMlhoNWGpHOc2hVxR0Yd18M7gI8xjK3XEZk4Tv3zwBAoyfzCOn5V7aZbdKozMnIjmQ7vNxYo2R8xwvfEsZLI4Od0yqFidr6IcuQnU8hqJzaXGTU6km6cKsQBiGVZZYiwDdIq8oTKqwNmjtGLyJnINwUW4IjOxkRWTdWBMgYzszE34QeVC2WW8fESAgFGRQWXOSA5yCwFM7GRGjtXdwRiMIrhmnEDGR7JnZnVQjcJVdLIPGBjb5yLcCpUrhxN6fdnDo0IfjAzS4eHLnAMZmkxMZduJArMBwEYKUW+Y62saKTGRGjtXZMcOELBHLGTB2mYqUkEmGmkfg2UEKGygi7eSt7EWondkNJI85VygFAZcNiXjOaN2Q9qkg\/hVZQjJWkrl4VJ03eDafgTisXJKc0js57WYt9l+VRCEYK0VYmdSdR3m2\/Mw1cxgCgL5KmwuUNQD9G9y0g7NgLa6NzIHzFvzI6qpifeXkjYjsj2qMQLBTYDTUcvWTWqWLZm+j+X70BAdvon8P3oD5T3f78KD+o1uYe7pyt1X3KTV0fErVJhOhhdlM2rdEfj9nVW3Twc5ay0+ptU8JKWstPqb8eAiXW1\/S2v4cq3oYWlHlfzN2OGpR5X8zFiZtNBYX0FKs8kdCKs8q0MW9ny7GfW8T+u9cWOyOVLc5JF6kgy4XCtISI1zFVZza1wq2zEdttNBrRsJNmfaJlQiCXKODmAReGQpNs9zHoz9EAkknogHlULqHfY09P8\/z01IGn+f56KEGSzRt1o1vSps6\/kVb2hvTTckxEA9lCDdxm1JZhlkYEXVmskalmRSis7KoLkKxALE8z21CSRLbZp2FSQNP89NAWWO4JC3C2LG2gvYAk9V9KElTahAsKA2ljkgMUwshJEsRuhboPo+S5IGYGxYWNjzqN9CbPcnZDSiRRhwTIbqmVVZhpqVuDlYAeULEC5uKO3MlXuZ03dxJJVYCctgbMhBLC4VSGs7EfNW59FMyGVmFdkzEuoia8aCWQadFCocOfWpB9VLoizJx2x54AGliKC+UHokBrXykqTla2tjY6eiiknsGmiYtjTsVUQtdk4q3st4y2USXYgAFrAE89LcxS6FmabxFSVK2KkqQRYgg2II6jccqkFco7KAWoCaECgJoCKAUBdKlEMvUkFbXNqJXdi8Vdn6K7l6j+HQXIFs3UDzVR11jxfvryRsHtEmUAC4NrDqH4VqEk98L2igLpJfUUB8q7uylkw4A1zN+VdDBxcoyS6r7kqLloj5dhsIq6827f2rrUqEYa8zdp0Yw15myGtz5VnZmNvY+xzi1kfPkSP0XLG1+WlvXXJ4jxRYWUYZbuXw\/uZKNF1udkcneTZrQMq5swYEg8uVrgj2j7awrF+1R0VrGpxPCzoyjG907mtvZ8uxn1vE\/rvWKOyOVLcru7tEYebOzMFKFWyKSxBKkgESRsh6PlKwI9IJFRJXQi7HoDvfEFyosqjhhApBYqyoUEglMtrsSWbLGpJNyTYXrkZbOjnQbzFZp5emwmxcM7KT5cMbzFoHNzoVkRbaiy66Wq2XSxGbU7A3pi4auZZTknQ5AtnmjVJWMc\/EndmjJfKWLNppl0FUyO5bMrGm29iCOQJxg7xhYvJC4UiIRlICGvkJ1uApGRNCbmpyEZ0Uw22Y5sU0s5Z4Th4xMkzqGzQIjKkV2JkzSxLyANpWuBqanLZaDNdktvSkgbimZjLGEZcqFIGOFlgklgGcZi7y5yLJ13JNjTLYZ0c\/bG2lkhjgiMgRSufMFXiZMPholLKrEGzQO1iSBmHXepS1uQ5HabeSNleZizumUxl2CsZ3MiOYoDJIY4xFLm0YJniSwF7VXIy2Yrhd8M8y8RpSjTYgkOwyBZpY2hzAm2WPKx7FvpUOGgzovJvdErMuaeUcUyZ2yeMVcQsgw5Gcgw5VYA6\/zD0baUyMZ0a0G9oj4QD4iQpNA8sz5Vlmjjkndon6bXW0ygAsQbG9hYVbKRnNXwkzYcxSvMzGAox1u8gaco7TCUEoBKgKOrghSABoaZdbkZtLGfBb1KqQozTgQjD3yWIlEJlzwMC4tE4de3ydVOlMpKlZGi23g0+d+IYThu9soIzRq2GWF2iUnKDmBa1xm67E3qcuhGbUrh8ZhQsSM05EEzTIyxRqZA4izIymU8M3hFnBbQm40FLMJo3MRvUJFu0ZEjjECZlIswaLER4ZV15J3ywN+pE52qMhOfQxbQ25ATO0cbSHEyI7rOuRFEYawXgy5nbM18110FrG5oosOSNbA7WQCNJMxQQtFKDGsvEBxLTqArOtrXTpX0K8iKlxuQpHP2njDNNLMRlMsjyZRyGdi1vZe1SlZFWa1SQKAUAoBQE0JIoQSDQE56XFi0POrw3L09z9Fdy9SdnQWvye9my80W3p9o5VixfvryRmPbxtoL87a63\/HrrUJL5hQDMKA+Yd2k9GD1t\/autwv+r4fcz4f3j5bfQ+z+9dc3DRnmLaDl6xrVGzFKVz1u5eEmQSZltHKgKkkcxyNr31DH7K8xxqvQqOOV3lB6\/fw0aOngac46taM0NvXzqTexXo+w62rq8JceylFbp6\/YycTTVVdLHnt6R\/v8Z9bxP671px2R5Ke5y2FSVRUCgJIoCKAUAoBQEgUAtQEUAoCbUBFAKAUAoBQCgFAKAUAoBQCgOxunFh2xKjEkCPXna17jnfTlfn12rBiXNQvA3uHxpOtara1na+1+VzLvpFhlxRXCEGPKL2tYNdtBbQaZbgdZNVwjqOF59dL72Ix6pqr\/Ltsr22vzscKtk0hQCgMkA1q9NamSmtT9E9zEn+Gw27H6mNuittF\/KsWL99eSMx7WNFIB9R5kfgdRWoCwiT\/AAmgLIFHK320B8x7tZ6MHrb+1dbhf9Xw+5noe8fG8Tic2g5fnXUbM0p3McYJIA1JIAHaTyqraSuyqV3ZH1PZIaOKNJLFlULccrqOV+vSw\/GvCYtxqVpTp6Ju\/qenpU5RpqMnqkeExuIZ3ZmNze3qA0AA6gOyvcYanCnSjGC0t+M4uJk3Vlfq\/qczev5djPreJ\/XeuNHZHn5bnKqSpZTQBjQFaAUAoAKAuKAVIKGoAFAZRUkFHoyUVqAKAUAoBQCgFAKAUAoBQCgFAWRCasotllFsvwPTVuzZbswIfTTs2OzMqrasiVjIlY\/Q\/cs\/9th9v5LWri\/fXkix0NoYDEtIzI5ynkM5FhblavKY3A4+pWlKnPuvbvNfI6uHxGGjTSnHXyuYW2biupiP\/tasMuH8Qa0k\/wD3ZkWKwvNf\/KOhsbCzJm4rXvawzFu2515V0uGYbFUc3byve1tWzUxlWjUt2at8LHgO7qbRQf1NXqeHf1fD7mpDc+PK\/q+wV0jMXjnysrAeSQ32G\/8AatWvVzJwjzKOtlaceR9PwuLDhWU3VwCPby9teTnSy3vuj2cXGpBTjs9Tx21sNla41B6xyzdYHo9NeswVdTp5ZaNfQ5PE8PKFR1EtJfX81K90rYT4THS52VuO8k4y36PEcvluRrbNa\/X2CuZTldHlZqzPK1coKAUAoBQCgAoCwNACaArQCgJzUFgTQAUBNqAg0BFAKA6+6mwWx2JXDo6oWBOZgSABbqHrqspZVctFXdiu8+xGwWJfDu6uU+ctwDf0H1UjLMriSs7HKqxUUAoBQCgJQXNqlK7sSldm0BWc2CakEUAoD7F3I96F4Herq10PRYWtYjkbn0VhxFJzWdctCT6FPteNVZiGsoJNgL6C+mtaiptuxbKeOwPdVgkkCHDyqrGysChP\/ZdLfaa358MnGN8yM0sNJK9zQHdbAkJbDHgX0Ibxtu0g9En0X9pq\/wDC9NJa\/It7N46nme6FvWm0HRUjZY4r2z2zMx5kgEgD2mtnC4Z0YvNuyYUcurPFS4cHlp+VZatJz2ZFSlm2MEsNhe9atSjkV7mCdLKrnW3ZxM3EEcbjKOkVbla4By6aHWubi401DNJam7w7EV4y7OnLTo\/sbmx9gz7QmkiaVFMQBNwStybdEC32msmeMIpxW5gxmIr1p2rSvb0+B\/\/Z',width=400,height=400)","ec942153":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport plotly.figure_factory as ff\npy.init_notebook_mode(connected=True)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a0548cc1":"df=pd.read_csv(\"..\/input\/ghana-covid19-dataset\/Ghana_Covid19_DailyActive.csv\")\ndf.head()","d7b96230":"fig = px.bar(df, \n             x='date', y='death', color_discrete_sequence=['#D63230'],\n             title='Covid-19 Ghana', text='date')\nfig.show()","aadab982":"px.histogram(df, x='death', color='date')","df1bc0e3":"plt.figure(figsize=(14,8))\nsns.barplot(data=df,x='date',y='death',color=sns.color_palette('Set3')[0])\nplt.title('Covid-19 Ghana')\nplt.xlabel('date')\nplt.ylabel('Number of deaths')\nplt.xticks(rotation=45)\nfor i in range(df.shape[0]):\n    count = df.iloc[i]['death']\n    plt.text(i,count+1,df.iloc[i]['death'],ha='center')\n    \nfrom IPython.display import display, Markdown\ndisplay(Markdown(\"Distribution of number of Deaths\"))","94f5415e":"fig = px.line(df, x=\"date\", y=\"death\", \n              title=\"Covid-19 Ghana\")\nfig.show() ","afcec76e":"df[\"e\"] = df[\"death\"]\/100\nfig = px.scatter(df, x=\"death\", y=\"cumulative_death\", color=\"date\", error_x=\"e\", error_y=\"e\")\nfig.show()","8b96377d":"fig = px.bar(df[['date', 'confirmed']].sort_values('confirmed', ascending=False), \n             y=\"confirmed\", x=\"date\", color='date', \n             log_y=True, template='ggplot2', title='Covid-19 Ghana confirmed cases')\nfig.show()","f7524eac":"fig = px.bar(df,\n             y='date',\n             x='death',\n             orientation='h',\n             color='cumulative_death',\n             title='Covid-19 Ghana',\n             opacity=0.8,\n             color_discrete_sequence=px.colors.diverging.Armyrose,\n             template='plotly_dark'\n            )\nfig.update_xaxes(range=[0,35])\nfig.show()","87683d61":"from fbprophet import Prophet\ndf1=df.rename(columns={\"date\": \"ds\", \"confirmed\": \"y\"})\ndf1\nm = Prophet()\nm.fit(df1)","ab0cfa97":"future = m.make_future_dataframe(periods=365)\nfuture.tail()","8dfb399e":"forecast = m.predict(future)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","581271b6":"fig1 = m.plot(forecast)","e0bcf3fa":"fig2 = m.plot_components(forecast)","3707fecf":"from fbprophet.plot import plot_plotly\nimport plotly.offline as py\npy.init_notebook_mode()\n\nfig = plot_plotly(m, forecast)  # This returns a plotly Figure\npy.iplot(fig)","24d79e41":"_ = pd.pivot_table(df, values='confirmed', index='date').plot(style='-o', title=\"Covid-19 Ghana confirmed cases\")","ae24db08":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRZkNn2Fth3-GXaY2uOKj-6XP9bidHkTauCrLCEKWssCzkCnDdR&usqp=CAU',width=400,height=400)","fc0a5570":"news.itu.int","b04122a1":"#Code from  Mysterious Ben https:\/\/www.kaggle.com\/myster\/eda-prophet-winning-solution-3-0","48ac814d":"Kaggle Notebook Runner: Mar\u00edlia Prata   @mpwolke","fc0e1ca2":"#Codes from attollos  https:\/\/www.kaggle.com\/attollos\/time-series-forecast-example-with-prophet\/","87ce2149":"#Ghana's dancing pallbearers: life after Covid-19 - BBC Africa","52d30a86":"#Covid-19 Ghana, By Abdur Rahman Alfa Shaban\n\n\nTotal confirmed cases = 5,638 (new cases = 108)\nTotal recoveries = 1,460 (new recoveries = 1086)\nTotal deaths = 24 (new deaths = 0)\nActive cases = 4,150\n\nGhana recorded a boost in recoveries with a record 1,086 discharges authorities reported early Saturday. The recovery tally now stands at 1,460.\n\nNew cases of 108 took the national tally to 5,638; still the most impacted in the West Africa subregion. Ghana\u2019s low recoveries had been a source of worry in the bracket of countries who had crossed the 5,000 mark.https:\/\/www.africanews.com\/2020\/05\/16\/coronavirus-updates-from-ghana\/","ded38e5d":"<iframe width=\"956\" height=\"538\" src=\"https:\/\/www.youtube.com\/embed\/K6zubJt-BzY\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>"}}