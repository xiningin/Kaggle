{"cell_type":{"91c88f5c":"code","d9c89872":"code","115dfc33":"code","5b8a790e":"code","11616bbe":"code","316f875b":"code","2a6e8fb1":"code","075b7724":"code","bb8aa06d":"code","17c9916c":"code","c958d9b6":"code","73bdd3cd":"code","6a0f25a9":"code","411ac229":"code","95a2e9eb":"code","30790189":"code","d0c54567":"code","1267a1de":"code","c0385f92":"code","21e69381":"code","68d9bc66":"markdown","71b5f617":"markdown","7181da40":"markdown","7972d150":"markdown","a99ed2ae":"markdown","e5f0c68d":"markdown","e7b77884":"markdown","dd861f2f":"markdown","c3bde4ef":"markdown","0ee75757":"markdown","df827502":"markdown","7823d0eb":"markdown","ce9d6923":"markdown","c7210011":"markdown"},"source":{"91c88f5c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns\n\nfrom collections import Counter\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d9c89872":"# Uploading the data\ndf_1 = pd.read_csv(\"\/kaggle\/input\/cyclistic-trip-data\/202101-divvy-tripdata.csv\")\ndf_2 = pd.read_csv(\"\/kaggle\/input\/cyclistic-trip-data\/202102-divvy-tripdata.csv\")\ndf_3 = pd.read_csv(\"\/kaggle\/input\/cyclistic-trip-data\/202103-divvy-tripdata.csv\")\ndf_4 = pd.read_csv(\"\/kaggle\/input\/cyclistic-trip-data\/202104-divvy-tripdata.csv\")\ndf_5 = pd.read_csv(\"\/kaggle\/input\/cyclistic-trip-data\/202105-divvy-tripdata.csv\")\ndf_6 = pd.read_csv(\"\/kaggle\/input\/cyclistic-trip-data\/202106-divvy-tripdata.csv\")\ndf_7 = pd.read_csv(\"\/kaggle\/input\/cyclistic-trip-data\/202107-divvy-tripdata.csv\")\ndf_8 = pd.read_csv(\"\/kaggle\/input\/cyclistic-trip-data\/202108-divvy-tripdata.csv\")\ndf_9 = pd.read_csv(\"\/kaggle\/input\/cyclistic-trip-data\/202109-divvy-tripdata.csv\")\ndf_10 = pd.read_csv(\"\/kaggle\/input\/cyclistic-trip-data\/202110-divvy-tripdata.csv\")\ndf_11 = pd.read_csv(\"\/kaggle\/input\/cyclistic-trip-data\/202111-divvy-tripdata.csv\")\ndf_12 = pd.read_csv(\"\/kaggle\/input\/cyclistic-trip-data\/202112-divvy-tripdata.csv\")","115dfc33":"# Stacking up the dataframes from each month\ncyclistic_df = pd.concat([df_1, df_2, df_3, df_4, df_5, df_6, df_7, df_8, df_9, df_10, df_11, df_12], axis = 0)","5b8a790e":"cyclistic_df.columns","11616bbe":"cyclistic_df.head()","316f875b":"cyclistic_df.info()","2a6e8fb1":"# checking for missing values in the dataframe\ncyclistic_df.isnull()","075b7724":"# Identifying missing values across columns\ncyclistic_df.isnull().sum()","bb8aa06d":"# Setting index_id variable as dataframe index\ncyclistic_df.set_index('ride_id')\n\n# Converting the started_at and ended_at columns to datetime format\ncyclistic_df['started_at'] = pd.to_datetime(cyclistic_df.started_at)\ncyclistic_df['ended_at'] = pd.to_datetime(cyclistic_df.ended_at)","17c9916c":"import datetime\nfrom dateutil.relativedelta import relativedelta\nfrom datetime import date\n\n# Calculating trips duration in minutes\ncyclistic_df['ride_duration'] = (cyclistic_df.ended_at - cyclistic_df.started_at) \/ pd.Timedelta(minutes=1)\n","c958d9b6":"# Calculating day of the week and month where each trip started\ncyclistic_df['day_of_week'] = cyclistic_df['started_at'].dt.day_name()\ncyclistic_df['month'] = cyclistic_df['started_at'].dt.month","73bdd3cd":"# Basic calculations\n\nprint(\"The average duration of a trip ride in 2021 was \" + str(cyclistic_df['ride_duration'].mean()) + \" minutes.\")\nprint(\"The longest trip ride in 2021 was of \" + str(cyclistic_df['ride_duration'].max() \/ 1440) + \" days.\")\n\nimport statistics\nprint(\"The most common day of the week where trips took place in 2021 was: \" + str(cyclistic_df['day_of_week'].mode()))","6a0f25a9":"# ride_duration vs. member_casual\ncyclistic_df[[\"member_casual\",\"ride_duration\"]].groupby([\"member_casual\"], as_index = False).mean().sort_values(by=\"ride_duration\",ascending = False)","411ac229":"# average ride duration (in minutes) by user type and day of week\npd.pivot_table(cyclistic_df,values='ride_duration',index=['member_casual'],columns=['day_of_week'])","95a2e9eb":"# average ride duration (in minutes) by user type and month\npd.pivot_table(cyclistic_df,values='ride_duration',index=['member_casual'],columns=['month'])","30790189":"pd.pivot_table(cyclistic_df,values='ride_id',index=['member_casual'],columns=['day_of_week'], aggfunc = 'count')","d0c54567":"pd.pivot_table(cyclistic_df,values='ride_id',index=['member_casual'],columns=['month'], aggfunc = 'count')","1267a1de":"pd.pivot_table(cyclistic_df,values='ride_id',index=['member_casual'],columns=['rideable_type'], aggfunc = 'count')","c0385f92":"df = cyclistic_df[[\"ride_id\",\"member_casual\", \"month\"]].groupby([\"member_casual\", \"month\"], as_index = False).agg({'ride_id': 'count'}).sort_values(by=\"month\",ascending = True)\ndf1 = df[df.member_casual == 'casual']\ndf2 = df[df.member_casual == 'member']\nmonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\nplt.figure(figsize=(10, 5))\nplt.plot(months, df1['ride_id'], marker= 'o', label = \"Casual\")\nplt.plot(months, df2['ride_id'],marker = 'x', label = \"Member\")\n\nplt.title('Total trips by member type in 2021')\nplt.xlabel('Month')\nplt.ylabel('Total rides')\nplt.legend()\nplt.show()","21e69381":"df = cyclistic_df[[\"member_casual\", \"month\", \"ride_duration\"]].groupby([\"member_casual\", \"month\"], as_index = False).agg({'ride_duration': 'mean'}).sort_values(by=\"month\",ascending = True)\ndf['ride_duration'] = df['ride_duration'].map(lambda x: format(x\/60, '.2f'))\ndf1 = df[df.member_casual == 'casual']\ndf2 = df[df.member_casual == 'member']\n\nplt.figure(figsize=(10, 5))\nplt.plot(months, df1['ride_duration'], marker= 'o', label = \"Casual\")\nplt.plot(months, df2['ride_duration'],marker = 'x', label = \"Member\")\n\nplt.title('Average hours per month by member type in 2021')\nplt.xlabel('Month')\nplt.ylabel('Mean hours')\nplt.legend()\nplt.show()","68d9bc66":"### Research questions","71b5f617":"In this case study, I solve a data analysis project for a fictional bike-share company in order to help them attract more riders. Throughout my soulution, I will follow the steps proposed by the Google Data Analytics Certificate data workflow: **Ask, Prepare, Process, Analyze, Share, and Act**. This was the capstone project I presented in the last course of this certification.","7181da40":"1. How do annual members (in 2021) and casual riders use Cyclistic bikes differently?\n2. Why would casual riders buy Cyclistic annual memberships?\n3. How can Cyclistic use digital media to influence casual riders to become members?","7972d150":"Now let's check:\n* The relationship between the average ride duration for members and casual riders\n* The average ride duration for users by day of week and month\n* Number of rides for users by day of week and by month by counting unique trip id's ","a99ed2ae":"## Analyze\n\nNow we continue performing calculation and grouping by certain variables to extract useful insights and identify trends and relationships.","e5f0c68d":"# **Case Study: How does a bike-share navigate speedy success?**\n\n\n\n> David Andr\u00e9s Paredes Bravo\n\n> November 2021\n\n","e7b77884":"## Project scenario\nAt **Cyclistic, a bike-share company**, the director of marketing believes **the company\u2019s future success depends on maximizing the number of annual memberships**. Therefore, the team wants to understand how casual riders and annual members use Cyclistic bikes differently. From these insights, the team will design a new marketing strategy to **convert casual riders into annual members**. \nBut first, Cyclistic executives must approve your recommendations, so they must be backed up with compelling data insights and professional data\nvisualizations.\n\n### Characters and teams\n*   *Cyclistic*: A bike-share program that features more than 5,800 bicycles and 600 docking stations. Cyclistic sets itself apart by also offering reclining bikes, hand tricycles, and cargo bikes, making bike-share more inclusive to people withdisabilities and riders who can\u2019t use a standard two-wheeled bike. The majority of riders opt for traditional bikes; about 8% of riders use the assistive options. Cyclistic users are more likely to ride for leisure, but about 30% use them to commute to work each day.\n* *Lily Moreno*: The director of marketing and your manager. Moreno is responsible for the development of campaigns and initiatives to promote the bike-share program. These may include email, social media, and other channels.\n* *Cyclistic marketing analytics team*: A team of data analysts who are responsible for collecting, analyzing, and reporting data that helps guide Cyclistic marketing strategy.\n* *Cyclistic executive team*: The notoriously detail-oriented executive team will decide whether to approve the recommended marketing program.\n\n### About the company\nIn 2016, Cyclistic launched a successful bike-share offering. Since then, the program has grown to a fleet of **5,824 bicycles** that are geotracked and locked into a network of **692 stations**. The bikes can be unlocked from one station and returned to any other station in the system anytime.\n\nUntil now, Cyclistic\u2019s marketing strategy relied on building general awareness and appealing to broad consumer segments. One approach that helped make these things possible was the flexibility of **its pricing plans: single-ride passes, full-day passes, and annual memberships. Customers who purchase single-ride or full-day passes are referred to as casual riders. Customers who purchase annual memberships are Cyclistic members.**\n\nCyclistic\u2019s finance analysts have concluded that annual members are much more profitable than casual riders. Although the pricing flexibility helps Cyclistic attract more customers, Moreno believes that maximizing the number of annual members will be key to future growth. Rather than creating a marketing campaign that targets all-new customers, Moreno believes there is a very good chance to convert casual riders into members. \n\nShe notes that casual riders are already aware of the Cyclistic program and have chosen Cyclistic for their mobility needs. Moreno has set a clear goal: **Design marketing strategies aimed at converting casual riders into annual members**. In order to do that, however, the marketing analyst team needs to better understand how annual members and casual riders differ, why\ncasual riders would buy a membership, and how digital media could affect their marketing tactics. Moreno and her team are interested in analyzing the Cyclistic historical bike trip data to identify trends.","dd861f2f":"### Variable description\n\n1. *ride_id*: Trip identification number\n2. *rideable_type*: Bycicle type used for the trip. Values: 'electric_type', 'classic_bike', 'docked_bike'\n3. *started_at*: Date in which the trip started\n4. *ended_at*: Date in which the trip ended\n5. *start_station_name*: Name of the station where the trip started\n6. *start_station_id*: Start station identification number\n7. *end_station_name*: Name of the station where the trip ended\n8. *end_station_id*: End station identification number\n9. *start_lat*: Starting trip latitude\n10. *start_lng*: Starting trip logitude\n11. *end_lat*: Ending trip latitude\n12. *end_lng*: Ending trip logitude\n13. *member_casual*: Whether the user has a membership plan ('member') or is a casual rider ('casual')","c3bde4ef":"According to these results we can see that there are 4 numerical variables and 9 categorical variables. There is a considerable amount of missing values in 'start_station_name', 'start_station_id', 'end_station_name', 'end_station_id' and in 'end_lat', 'end_lng'.","0ee75757":"On average, casual rides have a larger duration along each month and each day of the week in 2021. The number of casual trips tends to be higher than member's trips in the summer season (june, july, august) and lower at the end of the year (november, december). Customers prefer classic bykes more than electric bikes regardless of membership type and there's a considerable difference in use of docked bikes between casual users and member users.","df827502":"## Ask","7823d0eb":"### Business problem\n> *Design marketing strategies aimed at converting casual riders into annual members.*","ce9d6923":"## Process\n\nIn this stage I transform the data, creating more insightful variables, adjusting columns formats and sorting\/filtering the dataframe accordingly.","c7210011":"## Prepare\n\nCyclistic disposes of its [historical trips dataset](https:\/\/divvy-tripdata.s3.amazonaws.com\/index.html) to analyze and identify trends in 2021. Let's start by uploading and merging the datasets into a single dataframe object.\n"}}