{"cell_type":{"04915bcd":"code","470a85a4":"code","a1ebb67c":"code","e0265c79":"code","458229ae":"code","2a027a89":"code","735cd933":"code","3d98c8e0":"code","f6452ea2":"code","0162d4dd":"code","41ff7b72":"code","24f9d8d1":"code","7a7b4498":"code","5c794df0":"code","f6cf144a":"code","71e995b3":"code","5ac64a3b":"code","90edaffc":"code","82071797":"code","a0341dd8":"code","04fe1659":"code","75fe57b9":"code","e38809de":"code","4598b9ae":"code","eec16bf9":"code","d922effe":"code","271493ff":"code","4bcc0e2a":"code","a771141e":"code","04b53417":"code","1e9d339e":"markdown","760d990f":"markdown","57a773c1":"markdown","9b340b8e":"markdown","997245b7":"markdown","308e532b":"markdown","2568f806":"markdown","8c7940e8":"markdown","d1427b5e":"markdown","3accdd65":"markdown"},"source":{"04915bcd":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\nimport warnings\nwarnings.filterwarnings('ignore')","470a85a4":"# data = pd.read_csv('datasets\/austin_weather.csv')\n# data = pd.read_csv('..\/input\/austin_weather\/austin_weather.csv')\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","a1ebb67c":"data = pd.read_csv(\"\/kaggle\/input\/austin-weather\/austin_weather.csv\")\n\n","e0265c79":"data.head()","458229ae":"data.dtypes","2a027a89":"print(data['DewPointHighF'].unique())","735cd933":"data['DewPointHighF'] = data['DewPointHighF'].str.replace('-','')\ndata['DewPointAvgF'] = data['DewPointAvgF'].str.replace('-','')\ndata['DewPointLowF'] = data['DewPointLowF'].str.replace('-','')\ndata['HumidityHighPercent'] = data['HumidityHighPercent'].str.replace('-','')\ndata['HumidityAvgPercent'] = data['HumidityAvgPercent'].str.replace('-','')\ndata['HumidityLowPercent'] = data['HumidityLowPercent'].str.replace('-','')\ndata['SeaLevelPressureHighInches'] = data['SeaLevelPressureHighInches'].str.replace('-','')\ndata['SeaLevelPressureAvgInches'] = data['SeaLevelPressureAvgInches'].str.replace('-','')\ndata['SeaLevelPressureLowInches'] = data['SeaLevelPressureLowInches'].str.replace('-','')\ndata['VisibilityHighMiles'] = data['VisibilityHighMiles'].str.replace('-','')\ndata['VisibilityAvgMiles'] = data['VisibilityAvgMiles'].str.replace('-','')\ndata['VisibilityLowMiles'] = data['VisibilityLowMiles'].str.replace('-','')\ndata['WindHighMPH'] = data['WindHighMPH'].str.replace('-','')\ndata['WindAvgMPH'] = data['WindAvgMPH'].str.replace('-','')\ndata['WindGustMPH'] = data['WindGustMPH'].str.replace('-','')\ndata['PrecipitationSumInches'] = data['PrecipitationSumInches'].str.replace('T','')\n\n#Changing the Column data type to the required Data type.\n\ndata['DewPointHighF'] = pd.to_numeric(data['DewPointHighF'])\ndata['DewPointAvgF'] = pd.to_numeric(data['DewPointAvgF'])\ndata['DewPointLowF'] = pd.to_numeric(data['DewPointLowF'])\ndata['HumidityHighPercent'] = pd.to_numeric(data['HumidityHighPercent'])\ndata['HumidityAvgPercent'] = pd.to_numeric(data['HumidityAvgPercent'])\ndata['HumidityLowPercent'] = pd.to_numeric(data['HumidityLowPercent'])\ndata['SeaLevelPressureHighInches'] = pd.to_numeric(data['SeaLevelPressureHighInches'])\ndata['SeaLevelPressureAvgInches'] = pd.to_numeric(data['SeaLevelPressureAvgInches'])\ndata['SeaLevelPressureLowInches'] = pd.to_numeric(data['SeaLevelPressureLowInches'])\ndata['VisibilityHighMiles'] = pd.to_numeric(data['VisibilityHighMiles'])\ndata['VisibilityAvgMiles'] = pd.to_numeric(data['VisibilityAvgMiles'])\ndata['VisibilityLowMiles'] = pd.to_numeric(data['VisibilityLowMiles'])\ndata['WindHighMPH'] = pd.to_numeric(data['WindHighMPH'])\ndata['WindAvgMPH'] = pd.to_numeric(data['WindAvgMPH'])\ndata['WindGustMPH'] = pd.to_numeric(data['WindGustMPH'])\ndata['PrecipitationSumInches'] = pd.to_numeric(data['PrecipitationSumInches'])\n","3d98c8e0":"data.isnull().sum()","f6452ea2":"data.dropna(inplace=True)","0162d4dd":"data.describe()","41ff7b72":"data.dtypes","24f9d8d1":"data['Date'] = pd.to_datetime(data['Date'])","7a7b4498":"data.dtypes","5c794df0":"# Date column can be split to Year and Month as this will make the dataset more robust and help in the analysis","f6cf144a":"data['Year'] = pd.DatetimeIndex(data['Date']).year\ndata['Month'] = pd.DatetimeIndex(data['Date']).month","71e995b3":"data.drop(columns='Date',inplace=True)","5ac64a3b":"sns.distplot(data['PrecipitationSumInches'],bins=10)","90edaffc":"sns.boxplot(data['PrecipitationSumInches'])","82071797":"data.groupby('Month').mean()['PrecipitationSumInches'].plot(kind='bar')","a0341dd8":"sns.boxplot(data['Month'],data['PrecipitationSumInches'])","04fe1659":"data['TempAvgF'].dtype\nnum_col = [i for i in data.columns if data[i].dtype == 'int64' or data[i].dtype == 'float64']","75fe57b9":"c = 1\nfor i in num_col:\n    plt.figure(figsize=(15,35))\n    plt.subplot(21,2,c)\n    sns.scatterplot(data[i],data['PrecipitationSumInches'])\n    c = c+1\n    plt.subplot(21,2,c)\n    sns.boxplot(data[i])\n    c=c+1","e38809de":"# data = pd.get_dummies(data,columns=['Events'])\ndata2 = data[['TempAvgF','DewPointAvgF','HumidityAvgPercent','SeaLevelPressureAvgInches','VisibilityAvgMiles','WindAvgMPH','PrecipitationSumInches','Events','Year','Month']]","4598b9ae":"x = data.drop(columns=['PrecipitationSumInches','Events','Year'])\ny = data['PrecipitationSumInches']","eec16bf9":"sc = StandardScaler()\nx_std = sc.fit_transform(x)\nx_std = pd.DataFrame(x_std,columns=x.columns)","d922effe":"x_std.describe()","271493ff":"x_train,x_test,y_train,y_test = train_test_split(x_std,y,test_size=0.2,random_state=42)","4bcc0e2a":"reg_model = LinearRegression()\nreg_model.fit(x_train,y_train)","a771141e":"y_predicted = reg_model.predict(x_test)","04b53417":"from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\n\n\nprint('Mean absolute error = ' + str(mean_absolute_error(y_test, y_predicted)))\nprint('Mean squared error = ' + str(mean_squared_error(y_test, y_predicted)))\nprint('R2 score = ' + str(r2_score(y_test, y_predicted)))","1e9d339e":"# Data Modelling","760d990f":"Date (YYYY-MM-DD)\nTempHighF (High temperature, in Fahrenheit)\nTempAvgF (Average temperature, in Fahrenheit)\nTempLowF (Low temperature, in Fahrenheit)\nDewPointHighF (High dew point, in Fahrenheit)\nDewPointAvgF (Average dew point, in Fahrenheit)\nDewPointLowF (Low dew point, in Fahrenheit)\nHumidityHighPercent (High humidity, as a percentage)\nHumidityAvgPercent (Average humidity, as a percentage)\nHumidityLowPercent (Low humidity, as a percentage)\nSeaLevelPressureHighInches (High sea level pressure, in inches)\nSeaLevelPressureAvgInches (Average sea level pressure, in inches)\nSeaLevelPressureLowInches (Low sea level pressure, in inches)\nVisibilityHighMiles (High visibility, in miles)\nVisibilityAvgMiles (Average visibility, in miles)\nVisibilityLowMiles (Low visibility, in miles)\nWindHighMPH (High wind speed, in miles per hour)\nWindAvgMPH (Average wind speed, in miles per hour)\nWindGustMPH (Highest wind speed gust, in miles per hour)\nPrecipitationSumInches (Total precipitation, in inches) ('T' if Trace)\nEvents (Adverse weather events. ' ' if None)","57a773c1":"### Importing the libraries","9b340b8e":"So these column contains a special character '-' which is causing the columns to be considered as object.\nThese values should be replaced in order to change the column type to int.\nAlso the column PrecipitationSumInches cotains character 'T', which should be replaced.","997245b7":"#### Data Preprocessing","308e532b":"Rainfall Prediction is the application of science and technology to predict the amount of rainfall over a region. It is important to exactly determine the rainfall for effective use of water resources, crop productivity and pre-planning of water structures.","2568f806":"### Exploratory Data Analysis (EDA)","8c7940e8":"As we can see, there are some rows which are of 'object' type. Most of them should be of Float\/Int type and Date column should be of Data type.","d1427b5e":"Importing the cvs file.","3accdd65":"# Rainfall prediction using Linear regression"}}