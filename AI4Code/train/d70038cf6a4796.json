{"cell_type":{"2ac98184":"code","157b7f7b":"code","a91b6ace":"code","d38b1b62":"code","1a5ffd22":"code","41e048f4":"markdown","dc4ecafa":"markdown","9da7cee3":"markdown","3fe5302e":"markdown","05acf9db":"markdown","e64caefd":"markdown","64683e34":"markdown"},"source":{"2ac98184":"#Notice the colour change for Boolean type\n\n","157b7f7b":"# Your code goes here try some comparison operations\n","a91b6ace":"# Your code goes here\n","d38b1b62":"# Your code goes here try different values of x and see what you get\n#x = 5\n#x = - 2\n#x = \"Howdy\"\n\n","1a5ffd22":"# Your code goes here \n\n","41e048f4":"[Try our Extra Exercise](http:\/\/https:\/\/www.kaggle.com\/dianaboras\/python-cafe-4-extra-exercises\/), a longer assignment that will really help hammer down the programming concepts we have learned so far.\n\n\n","dc4ecafa":" # Cafe 4 - Booleans and Conditionals","9da7cee3":"# 1. Boolean Types\n| Name           | Type   | Description                                                  |\n|----------------|--------|--------------------------------------------------------------|\n| Integer        | Int    |Whole numbers: 45, -5, 670                                    |\n| Float          | Float  |Numbers with a decimal point: 2.3, 4.6, 100.0                 |\n| String         | Str    |Ordered sequence of characters: \u201cSammy\u201d, \u201cHello\u201d, \u201c2000\"      |\n| **Boolean**    | **Bool**   |**Logical value (True or False)**                         |\n| List           | List   |Ordered sequence of objects: [10, \u201chello\u201d, 200.5]             |\n| Dictionarie    | Dict   |Unordered Key\/value pairs: {\u201ckey\u201d: \u201cvalue\u201d, \u201cname\u201d: \u201cFrankie\u201d}|\n| Tuple          | Tup    |Ordered immutable sequence of objects: (10, \u201chello\u201d, 200.5)   |\n| Set            | Set    |Unordered collection of unique objects: {\u201ca\u201d, \u201cb\u201d}            |\n\n<span style=\"display:none\"><\/span>\n\n","3fe5302e":"# 3. Boolean Logic \n\n[Click here for more info on boolean logic](http:\/\/https:\/\/medium.com\/i-math\/intro-to-truth-tables-boolean-algebra-73b331dd9b94)\n\n| X            | Y              |      X AND Y    |      X OR Y     | NOT X|\n|--------------|----------------|------------------------------------------|\n| ``False``    | ``False``      | ``False``       | ``False``  | ``True`` |\n| ``False``    | ``True``       | ``False``       | ``True``   | ``True`` |\n| ``True``     | ``False``      | ``False``       | ``True``   | ``False``|\n| ``True``     | ``True ``      | ``True``         | ``True``  | ``False``|\n\n<span style=\"display:none\"><\/span>","05acf9db":"# 4. Conditionals\nWhile useful enough in their own right, booleans really start to shine when combined with conditional statements, using the keywords `if`, `elif`, and `else`.\n\nConditional statements, often referred to as if-then statements, allow the programmer to execute certain pieces of code depending on some Boolean condition. A basic example of a Python conditional statement is this:","e64caefd":"# 2. Comparison Operations \n\nRather than putting True or False directly in our code, we usually get boolean values from boolean operators. These are operators that answer yes\/no questions. We'll go through some of these operators below. Comparison operations compare two values or variables and ONLY return a boolean type - True or False. \n\n| Operator     | Description               | \n|--------------|---------------------------|\n| ``a == b``   | a equal to b              | \n| ``a != b``   | a not equal to b          | \n| ``a < b``    | a less than b             | \n| ``a <= b``   | a less than or equal to b |\n| ``a > b``    | a greater than b          | \n| ``a >= b``   | a greater than or equal to b | \n\n","64683e34":"# Putting It All Together\n\nWrite a Python program that creates a variable, stores a number of your choice and and does the following checks:\n\n#### For a multiple of 3, print \"Fizz\"\n#### For a multiple of 5, print \"Buzz\"\n#### For a multiple of both 3 and 5, print \"FizzBuzz\"\n\n"}}