{"cell_type":{"645950ef":"code","7863c453":"code","22a204d4":"code","56dbf2ff":"code","e941e081":"code","5245d110":"code","6e25a350":"code","9a3e5247":"code","3a30d12c":"code","afc8a064":"code","df2289dd":"code","d9f3cad1":"code","7f7a7214":"code","174b1681":"code","6c7b8a85":"code","11b47497":"code","fe53bb4c":"code","a8cfe74f":"code","a1a091a7":"code","23de89b6":"code","76b679d0":"code","62bafff4":"code","4a61c0f0":"code","4512e779":"code","4bfe7ce8":"code","634a94e9":"code","c2961b88":"code","91d0e73b":"markdown","1ba7fc4a":"markdown","e09b8776":"markdown","6918447f":"markdown","f44332d4":"markdown","d74b95ee":"markdown","12d5e967":"markdown","1313946f":"markdown","f16d9f4e":"markdown"},"source":{"645950ef":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7863c453":"data=pd.read_csv(\"\/kaggle\/input\/adult-census-income\/adult.csv\")","22a204d4":"data.dtypes","56dbf2ff":"temp=data.copy()\nfor i in data.dtypes[data.dtypes=='object'].index:\n    temp[i]=temp[i].replace('?',temp[i].mode()[0])","e941e081":"temp=temp.copy()\nfor i in data.dtypes[data.dtypes!='object'].index:\n    temp[i]=temp[i].replace('?',temp[i].mean())","5245d110":"X=pd.get_dummies(temp,drop_first=True)","6e25a350":"X","9a3e5247":"import matplotlib.pyplot as plt\nimport seaborn as sns","3a30d12c":"sns.histplot(X['age'])","afc8a064":"sns.histplot(X['fnlwgt'])","df2289dd":"sns.histplot(X['education.num'])","d9f3cad1":"sns.histplot(X['income_>50K'])","7f7a7214":"f, ax = plt.subplots(1, 1, figsize=(14, 5), sharex=True)\nsns.barplot(x=data['marital.status'].value_counts().index,y=data['marital.status'].value_counts())","174b1681":"y=X.pop('income_>50K')","6c7b8a85":"from sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import GaussianNB, MultinomialNB\nfrom sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn.decomposition import PCA","11b47497":"pca=PCA(n_components=2)\nx_pca=pca.fit_transform(X)","fe53bb4c":"scaler=MinMaxScaler()\nX1=scaler.fit_transform(x_pca)","a8cfe74f":"X_train, X_test, y_train, y_test = train_test_split(X1, y, test_size=0.33, random_state=42)","a1a091a7":"clf = GaussianNB()\nclf.fit(X_train,y_train)","23de89b6":"print(classification_report(clf.predict(X_test),y_test))","76b679d0":"confusion_matrix(clf.predict(X_test),y_test)","62bafff4":"plt.plot(X1[:,0],X1[:,1],'.',color)","4a61c0f0":"color=[]\nfor i in y:\n    if i==0:\n        color.append('F')\n    else:\n        color.append('G')\n\ncolor_=pd.DataFrame()\ncolor_['color']=color","4512e779":"fig, ax = plt.subplots()\n\ncolors = {'D':'red', 'E':'blue', 'F':'green', 'G':'black'}\n\nax.scatter(X1[:,0], X1[:,1], c=color_['color'].apply(lambda x: colors[x]))\n\nplt.show()","4bfe7ce8":"clf2=MultinomialNB()\nclf2.fit(X_train,y_train)","634a94e9":"print(classification_report(clf2.predict(X_test),y_test))","c2961b88":"confusion_matrix(clf2.predict(X_test),y_test)","91d0e73b":"Replace '?' in categorical columns with the mode of the column.","1ba7fc4a":"Replace '?' in numerical columns with mean of the column.","e09b8776":"Distribution of fnlwgt.","6918447f":"Distribution of income variable.","f44332d4":"Distrubution of education.num.","d74b95ee":"train-test split","12d5e967":"Dummification with first level dropped","1313946f":"Distribution of age","f16d9f4e":"Scale X values so that all columns have similar range."}}