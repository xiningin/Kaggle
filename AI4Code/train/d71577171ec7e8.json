{"cell_type":{"bdf873ec":"code","53c40b25":"code","48e91bba":"code","80f8ca1f":"code","ccf5d8da":"code","5a7cf860":"code","f0c03247":"code","9ecf47ec":"code","27a84030":"code","af0f5625":"code","c683e2bd":"code","752caa29":"code","bcc9e3a3":"markdown","5c7da508":"markdown","a92256b1":"markdown"},"source":{"bdf873ec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","53c40b25":"import pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nimport itertools\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom mlxtend.plotting import plot_decision_regions\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import cross_val_score","48e91bba":"df=pd.read_csv('..\/input\/water-potability\/water_potability.csv')","80f8ca1f":"df.describe()","ccf5d8da":"df.shape","5a7cf860":"df.isnull().sum()","f0c03247":"df['ph']=df['ph'].fillna(df.groupby(['Potability'])['ph'].transform('mean'))\ndf['Sulfate']=df['Sulfate'].fillna(df.groupby(['Potability'])['Sulfate'].transform('mean'))\ndf['Trihalomethanes']=df['Trihalomethanes'].fillna(df.groupby(['Potability'])['Trihalomethanes'].transform('mean'))","9ecf47ec":"df.shape","27a84030":"X=df.drop(['Potability'],axis=1)\nY=df['Potability']\nX=X.to_numpy()\nY=Y.to_numpy()","af0f5625":"X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=.3,random_state=1)\ntype(X_train)","c683e2bd":"clf1=LogisticRegression()\npipe1=Pipeline([['sc',StandardScaler()],\n               ['clf',clf1]])\nclf2=SVC()\npipe2=Pipeline([['sc',StandardScaler()],\n               ['clf',clf2]])\nclf3=KNeighborsClassifier(n_neighbors=3)\npipe3=Pipeline([['sc',StandardScaler()],\n               ['clf',clf3]])\nclf4=RandomForestClassifier(n_estimators=200)\nall_clff=[pipe1,pipe2,pipe3,clf4]\nclff_labels=['Logistic Regression','Support Vector Classifier','KNN','Random Forest']\nfor clf,label in zip(all_clff,clff_labels):\n    scores=cross_val_score(estimator=clf,X=X_train,y=Y_train,cv=10,scoring='roc_auc')\n    print(\"ROC AUC: %0.2f (+\/- %0.2f) [%s]\"\n     % (scores.mean(), scores.std(), label))","752caa29":"clf4.fit(X_train,Y_train)\nY_pred=clf4.predict(X_test)\nprint(accuracy_score(Y_test,Y_pred))","bcc9e3a3":"Random Forest seems as the best estimator for predicting potability of water","5c7da508":"# Applying Cross validation on Logistic Regression, Support Vector Classifier, K-Nearest and Random Forest to find which model is best at predicting water potability****","a92256b1":"# **Imports**"}}