{"cell_type":{"aa41bfeb":"code","a4a1bdf8":"code","25ebbcd5":"code","ac9065bd":"code","a6242a54":"code","fef81fa3":"code","74d83462":"code","018c34c8":"code","b2e83df6":"code","97068ced":"code","f9a97799":"code","0fd3111a":"code","97727f74":"code","76753fae":"code","7f14b2ee":"code","d1a3d74b":"code","5221cfd2":"code","ed1f6188":"code","de6c8c7f":"code","e11a3aca":"code","6c7e50bf":"code","598c34fc":"code","e65b1068":"code","269e5865":"code","ca68f4d4":"code","e04f300f":"code","83bfae9e":"code","21bc3b67":"code","eb27eb55":"code","3e2d599b":"code","2422838a":"code","d67258a7":"code","fb2ce0b9":"markdown","2cb270fa":"markdown","9fed83dd":"markdown","76f32b81":"markdown","6023acb5":"markdown","5ab9387a":"markdown","1bc7d5cb":"markdown","9fab1627":"markdown","2cfaaa60":"markdown","5f258d63":"markdown","ffc3fb4c":"markdown","b458d617":"markdown","824c5469":"markdown","b9d37c8a":"markdown","218a97c8":"markdown","0230a2f8":"markdown","d3f8525c":"markdown"},"source":{"aa41bfeb":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nimport glob\nimport re\nimport cv2","a4a1bdf8":"train_df = pd.read_csv('..\/input\/osic-pulmonary-fibrosis-progression\/train.csv')\ntrain_df","25ebbcd5":"import pydicom\n\ndef plot_pixel_array(dataset, figsize=(5,5)):\n    plt.figure(figsize=figsize)\n    plt.imshow(dataset.pixel_array, cmap=plt.cm.bone)\n    plt.show()\n\nfile_path = \"..\/input\/osic-pulmonary-fibrosis-progression\/train\/ID00007637202177411956430\/1.dcm\"\ndataset = pydicom.dcmread(file_path)\nplot_pixel_array(dataset)","ac9065bd":"def extract_num(s, p, ret=0):\n    search = p.search(s)\n    if search:\n        return int(search.groups()[0])\n    else:\n        return ret","a6242a54":"filepath = []\nID = \"ID00007637202177411956430\"\n\nfor file in glob.glob(\"..\/input\/osic-pulmonary-fibrosis-progression\/train\/\"+ ID +\"\/*.dcm\"):\n    filepath.append(file)\n    \np = re.compile(ID +\"\/\"+\"(\\d+)\")\nfilepath = sorted(filepath, key=lambda s: extract_num(s, p, float('inf'))) #\u753b\u50cf\u3092\u6570\u5b57\u9806\u306bsort","fef81fa3":"fig = plt.figure(figsize=(16,7))\n\nfor i in range(18):\n    plt.subplot(3, 6, i+1)\n    file_path = filepath[i]\n    dataset = pydicom.dcmread(file_path)\n    plt.imshow(dataset.pixel_array, cmap=plt.cm.bone)\n    plt.title(file_path[77:])\n    plt.tick_params(labelbottom=False,\n                    labelleft=False,\n                    labelright=False,\n                    labeltop=False)","74d83462":"train_df.loc[train_df.Patient == ID]","018c34c8":"Patient_list = list(train_df.Patient.unique())\nfig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(15, 4))\n\na = 0\nb = 0\nc = 0\n\nfor ID in Patient_list:\n    grp = train_df.loc[train_df.Patient == ID]\n    grp = grp[[\"Weeks\",\"FVC\", \"SmokingStatus\"]]\n\n    if grp.iloc[0, 2] == \"Currently smokes\" and a <= 10:\n        ax1.plot(grp.Weeks, grp.FVC, marker=\"o\", color=\"red\")\n        ax1.set_title(\"Currently smokes\") \n        a = a + 1\n    elif grp.iloc[0, 2] == \"Ex-smoker\" and b <= 10:\n        ax2.plot(grp.Weeks, grp.FVC, marker=\"x\", color=\"green\")\n        ax2.set_title(\"Ex-smoker\") \n        b = b + 1\n    elif grp.iloc[0, 2] == \"Never smoked\" and c <= 10:\n        ax3.plot(grp.Weeks, grp.FVC, marker=\"s\", color=\"blue\")\n        ax3.set_title(\"Never smoked\")\n        c = c + 1\n    else:\n        pass","b2e83df6":"Week = np.arange(-12, 134)\ntrain_df2 = pd.DataFrame(Week, columns = [\"Weeks\"])\ntrain_df2.insert(1, 'FVC', np.nan)\ntrain_df2.insert(2, 'Percent', np.nan)\ntrain_df2.insert(3, 'Age', np.nan)\ntrain_df2.insert(4, 'Sex', np.nan)\ntrain_df2.insert(5, 'SmokingStatus', np.nan)\n\ntrain_id = train_df.loc[train_df.Patient == Patient_list[1]]\ntrain_id = train_id.reset_index()\n\nfor i, D in enumerate(train_id.Weeks):\n    D = D + 12\n    train_df2.at[D, \"FVC\"] = train_id.FVC[i]\n    train_df2.at[D, \"Percent\"] = train_id.Percent[i]\n\ntrain_df2.loc[:, \"Age\"] = train_id.Age[0]\ntrain_df2.loc[:, \"Sex\"] = train_id.Sex[0]\ntrain_df2.loc[:, \"SmokingStatus\"] = train_id.SmokingStatus[0]\n    \ntrain_df2 = train_df2.interpolate('linear', order=2, limit_direction='both')\ntrain_df2","97068ced":"plt.figure(figsize=(18,6))\ngrp = train_df2\n\nplt.xlabel(\"Weeks\")\nplt.ylabel(\"FVC\")\nplt.plot(grp.Weeks, grp.FVC, marker=\"x\")\nplt.plot(train_id.Weeks, train_id.FVC, marker=\"o\", markersize=8)\n","f9a97799":"plt.figure(figsize=(18,6))\ngrp = train_df2\n\nplt.xlabel(\"Weeks\")\nplt.ylabel(\"Percent\")\nplt.plot(grp.Weeks, grp.Percent, marker=\"^\")\nplt.plot(train_id.Weeks, train_id.Percent, marker=\"o\", markersize=8)","0fd3111a":"Week = np.arange(-12, 134)\n\ndef train_layer (ID_N):\n    train_df2   = pd.DataFrame(Week, columns = [\"Weeks\"])\n    train_df_Y  = pd.DataFrame(Week, columns = [\"Weeks\"])\n    train_df_Y.insert(1, 'FVC', np.nan)\n    train_df2.insert(1, 'Percent', np.nan)\n    train_df2.insert(2, 'Age', np.nan)\n    train_df2.insert(3, 'Sex_Male', 0)\n    train_df2.insert(4, 'Sex_Female', 0)\n    train_df2.insert(5, 'Currently smokes', 0)\n    train_df2.insert(6, 'Ex-smoker', 0)\n    train_df2.insert(7, 'Never smoked', 0)\n\n    train_id = train_df.loc[train_df.Patient == Patient_list[ID_N]]\n    train_id = train_id.reset_index()\n\n    for i, D in enumerate(train_id.Weeks):\n        D = D + 12\n        if D <= 133:\n            train_df_Y.at[D, \"FVC\"] = train_id.FVC[i]\n            train_df2.at[D, \"Percent\"] = train_id.Percent[i]\n\n    train_df2.loc[:, \"Age\"] = train_id.Age[0]\n\n    if train_id.Sex[0] == \"Male\":\n        train_df2.loc[:, \"Sex_Male\"] = 1\n    else:\n        train_df2.loc[:, \"Sex_Female\"] = 1\n    \n    if train_id.SmokingStatus[0] == \"Currently smokes\":\n        train_df2.loc[:, \"Currently smokes\"] = 1\n    elif train_id.SmokingStatus[0] == \"Ex-smoker\":\n        train_df2.loc[:, \"Ex-smoker\"] = 1\n    else:\n        train_df2.loc[:, \"Never smoked\"] = 1\n        \n    train_df2 = train_df2.interpolate('linear', order=2, limit_direction='both')\n    train_df_Y = train_df_Y.interpolate('linear', order=2, limit_direction='both')\n    train_df_Y = train_df_Y.astype('int')\n    train_df_Y = train_df_Y.drop([\"Weeks\"], axis=1)\n    \n    return train_df2, train_df_Y","97727f74":"train_layer(0)[0]","76753fae":"train_layer(0)[1]","7f14b2ee":"X_train = train_layer(0)[0].to_numpy()\nY_train = train_layer(0)[1].to_numpy()\nsums= 0\n\nfor i in range(1, len(Patient_list)):\n    a = train_layer(i)[0].to_numpy()\n    X_train = np.append(X_train, a, axis=0)\n    \n    b = train_layer(i)[1].to_numpy()\n    Y_train = np.append(Y_train, b)    ","d1a3d74b":"X_train.shape","5221cfd2":"Y_train.shape","ed1f6188":"test_df = pd.read_csv('..\/input\/osic-pulmonary-fibrosis-progression\/test.csv')\ntest_df","de6c8c7f":"Week = np.arange(-12, 134)\nPatient_list_test = list(test_df.Patient.unique())\n\ndef test_layer (ID_N):\n    test_df2   = pd.DataFrame(Week, columns = [\"Weeks\"])\n    test_df_Y  = pd.DataFrame(Week, columns = [\"Weeks\"])\n    test_df_Y.insert(1, 'FVC', np.nan)\n    test_df2.insert(1, 'Percent', np.nan)\n    test_df2.insert(2, 'Age', np.nan)\n    test_df2.insert(3, 'Sex_Male', 0)\n    test_df2.insert(4, 'Sex_Female', 0)\n    test_df2.insert(5, 'Currently smokes', 0)\n    test_df2.insert(6, 'Ex-smoker', 0)\n    test_df2.insert(7, 'Never smoked', 0)\n\n    test_id = test_df.loc[test_df.Patient == Patient_list_test[ID_N]]\n    test_id = test_id.reset_index()\n\n    for i, D in enumerate(test_id.Weeks):\n        D = D + 12\n        if D <= 133:\n            test_df_Y.at[D, \"FVC\"] = test_id.FVC[i]\n            test_df2.at[D, \"Percent\"] = test_id.Percent[i]\n\n    test_df2.loc[:, \"Age\"] = test_id.Age[0]\n\n    if test_id.Sex[0] == \"Male\":\n        test_df2.loc[:, \"Sex_Male\"] = 1\n    else:\n        test_df2.loc[:, \"Sex_Female\"] = 1\n    \n    if test_id.SmokingStatus[0] == \"Currently smokes\":\n        test_df2.loc[:, \"Currently smokes\"] = 1\n    elif test_id.SmokingStatus[0] == \"Ex-smoker\":\n        test_df2.loc[:, \"Ex-smoker\"] = 1\n    else:\n        test_df2.loc[:, \"Never smoked\"] = 1\n        \n    test_df2 = test_df2.interpolate('linear', order=2, limit_direction='both')\n    test_df_Y = test_df_Y.interpolate('linear', order=2, limit_direction='both')\n    test_df_Y = test_df_Y.astype('int')\n    test_df_Y = test_df_Y.drop([\"Weeks\"], axis=1)\n    \n    return test_df2, test_df_Y","e11a3aca":"test_layer(0)[0]","6c7e50bf":"X_test = test_layer(0)[0].to_numpy()\nY_test = test_layer(0)[1].to_numpy() #Do not use Y_test\nsums= 0\n\nfor i in range(1, len(Patient_list_test)):\n    a = test_layer(i)[0].to_numpy()\n    X_test = np.append(X_test, a, axis=0)\n    \n    b = test_layer(i)[1].to_numpy()\n    Y_test = np.append(Y_test, b)    ","598c34fc":"X_test.shape","e65b1068":"Y_test.shape","269e5865":"import sklearn\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import tree \nimport lightgbm as lgb\n\ndef FitModel(X, Y, max_depth):\n    model = LogisticRegression(max_iter=max_depth, verbose=0)\n    model.fit(X, Y)\n    return model","ca68f4d4":"trainY = []\ntestY = []\n\n\"\"\"\nparams = {\n    'metric' : 'rmse',\n    'num_leaves': 100}\nlgb_train = lgb.Dataset(X_train, Y_train)\nmodel = lgb.train(params, lgb_train,)\n\"\"\"\nmodel = FitModel(X_train, Y_train, 100)\ntrainY.append(model.predict(X_train))\ntestY.append(model.predict(X_test))","e04f300f":"plt.figure(figsize=(18,6))\n\nY_train_Graph = pd.DataFrame(trainY[-1])\n#Y_train = Y_train.reset_index(drop=True)\nplt.plot(Y_train)\nplt.plot(Y_train_Graph, label = \"Predict\")\nplt.legend()","83bfae9e":"#DON'T USE THIS\n\"\"\"\nplt.figure(figsize=(18,8))\n\nID_NUM = 0\n\nfor i in range(5):\n    Y_test_Graph = pd.DataFrame(testY[i])\n    plt.plot(Y_test, linestyle = \"dashed\")\n    plt.plot(Y_test_Graph, label = \"Predict:{0}\".format(i))\n    plt.xlim(145*ID_NUM, 145*(ID_NUM+1))\n    \nplt.legend()\n\"\"\"","21bc3b67":"#DON'T USE THIS\n'''\nimport math\nfrom scipy import stats\n\ndf_test = pd.DataFrame(testY)\nConfidence = []\n\nfor i in range(df_test.shape[1]):\n    data = np.array(df_test.iloc[:, i])\n    Confidence1 =  df_test.iloc[:, i].mean() - (2.086*np.std(data)\/math.sqrt(21))\n    Confidence2 =  df_test.iloc[:, i].mean() + (2.086*np.std(data)\/math.sqrt(21))\n    Confidence.append(Confidence2 - Confidence1)\n'''","eb27eb55":"#len(Confidence)","3e2d599b":"submission = pd.DataFrame(columns = [\"Patient_Week\", \"FVC\", \"Confidence\"])\n\nWEEK = -12\nD = 0\n\nNUM = len(Patient_list_test)\n\nfor j in range(146):\n    \n    for i in range(NUM):\n        submission.loc[j*NUM + i,\"Patient_Week\"] = Patient_list_test[i] +\"_\" + str(WEEK)\n        submission.loc[j*NUM + i,\"FVC\"] = Y_test[i*146 + j]\n        submission.loc[j*NUM + i,\"Confidence\"] = 285\n\n    WEEK = WEEK + 1","2422838a":"submission.to_csv('submission.csv', index=False)","d67258a7":"submission.head(40)","fb2ce0b9":"![TurnOff](https:\/\/drive.google.com\/uc?export=view&id=14iabidS4S0Ur7R5smsHYBLZjTP9M3vWY )\n\nYou cannot use the internet in this competition. Turn it off.\n> \u3053\u306e\u30b3\u30f3\u30da\u3067\u306f\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3092\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u53f3\u4e0b\u306eSettings\u304b\u3089\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3092OFF\u306b\u3057\u307e\u3059\u3002","2cb270fa":"# Create Submission.csv","9fed83dd":"# Create train_X & test_X","76f32b81":"| | | \n|:---|:---|\n|**Patient** | \u60a3\u8005\u3054\u3068\u306e\u4e00\u610f\u306eID\uff08\u60a3\u8005\u306eDICOM\u30d5\u30a9\u30eb\u30c0\u306e\u540d\u524d\u3082\uff09|\n|**Weeks** | \u30d9\u30fc\u30b9\u30e9\u30a4\u30f3CT\u306e\u524d\u5f8c\u306e\u76f8\u5bfe\u7684\u306a\u9031\u6570\uff08\u8ca0\u306e\u5834\u5408\u304c\u3042\u308b\uff09| \n|**FVC** | \u8a18\u9332\u3055\u308c\u305f\u80ba\u5bb9\u91cf\uff08ml\uff09|\n|**Percent** | \u60a3\u8005\u306eFVC\u3092\u3001\u985e\u4f3c\u3057\u305f\u7279\u5fb4\u3092\u6301\u3064\u4eba\u306e\u5178\u578b\u7684\u306aFVC\u306e\u30d1\u30fc\u30bb\u30f3\u30c8\u3068\u3057\u3066\u6982\u7b97\u3059\u308b\u8a08\u7b97\u30d5\u30a3\u30fc\u30eb\u30c9 |\n|**Age** | \u5e74\u9f62\u3002 |\n|**Sex** | \u6027\u5225\u3002\u3000Male\/Female  |\n|**SmokingStatus** | \u55ab\u7159\u8005\u304b\u3069\u3046\u304b\u3002 Currently smokes (\u55ab\u7159\u8005) \/ Ex-smoker (\u5143\u55ab\u7159\u8005) \/ Never smoked (\u975e\u55ab\u7159\u8005)|","6023acb5":"\u60a3\u8005\u306b\u3088\u3063\u3066\u30c7\u30fc\u30bf\u306e\u91cf\u3001\u7a2e\u985e\u306f\u7570\u306a\u308b\u3002","5ab9387a":"Y_test\u306f\u4f7f\u308f\u306a\u3044\u304c\u3001\u4e00\u5fdc\u4f5c\u3063\u3066\u304a\u304f","1bc7d5cb":"### Create test data","9fab1627":"## Create training data","2cfaaa60":"### Pay attention to ID = \"ID00007637202177411956430\"\n ID = \"ID00007637202177411956430\"\u306b\u6ce8\u76ee\u3059\u308b","5f258d63":"# EDA","ffc3fb4c":"![overview](https:\/\/drive.google.com\/uc?export=view&id=1xfXg0jemtUSz5n-BuVdSCsFGqYWDIulS )","b458d617":"\u53c2\u8003:https:\/\/qiita.com\/fukuit\/items\/ed163f9b566baf3a6c3f","824c5469":"### Complement train data\n\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u5024\u3092\u88dc\u5b8c\u3059\u308b\u3002\uff08\u7dda\u5f62\u88dc\u9593\uff09","b9d37c8a":"|||\n|:--|:--|\n|**train.csv**             | \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30bb\u30c3\u30c8\u3001\u81e8\u5e8a\u60c5\u5831\u306e\u5b8c\u5168\u306a\u5c65\u6b74\u304c\u542b\u307e\u308c\u307e\u3059  |\n|**test.csv**              | \u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u3002\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u6e2c\u5b9a\u306e\u307f\u304c\u542b\u307e\u308c\u307e\u3059  |\n|**train \/**               | \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u60a3\u8005\u306e\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3CT\u30b9\u30ad\u30e3\u30f3\u304cDICOM\u5f62\u5f0f\u3067\u542b\u307e\u308c\u3066\u3044\u307e\u3059 | \n|**test \/**                | \u30c6\u30b9\u30c8\u60a3\u8005\u306e\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3CT\u30b9\u30ad\u30e3\u30f3\u304cDICOM\u5f62\u5f0f\u3067\u542b\u307e\u308c\u3066\u3044\u307e\u3059  |\n|**sample_submission.csv** | \u9001\u4fe1\u5f62\u5f0f\u3092\u793a\u3057\u307e\u3059  |","218a97c8":"## Display DICOM image\npydicom\u3092\u4f7f\u3063\u3066.dcm\u753b\u50cf\u3092\u8868\u793a\u3059\u308b","0230a2f8":"# Simple Model","d3f8525c":"# Checking the data"}}