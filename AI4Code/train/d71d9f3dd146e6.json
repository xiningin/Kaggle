{"cell_type":{"0bc9f0dd":"code","e9e30451":"code","d29693e6":"code","c5b11549":"code","39c42658":"code","3457d886":"code","29e4dc91":"code","41fd59a9":"code","a7520e1d":"code","fdecea0c":"code","710076de":"code","fed5f8ce":"code","5134e976":"code","c00c34ac":"code","af72c96a":"code","97328133":"code","62c36e22":"code","c53aa0cd":"code","c22fa85c":"code","1db578d8":"code","e9fd9391":"code","474b1d51":"code","83fb77bb":"code","3ba9cb58":"code","d140f80d":"code","45d219d7":"code","2ea09479":"code","b105f538":"code","ba8dfe20":"markdown","120207b2":"markdown","28676238":"markdown","ef4f516f":"markdown","e00fce04":"markdown","bd6e2589":"markdown","745ca9c2":"markdown","9330a11a":"markdown"},"source":{"0bc9f0dd":"#import library\nimport pandas as pd\nimport seaborn as sns\nimport math\nimport pickle\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics","e9e30451":"df = pd.read_csv('..\/input\/bank-marketing-data-set\/bank-additional-full.csv', sep = ';')","d29693e6":"df.shape","c5b11549":"df.head()","39c42658":"#check index from each columns\ndf.columns","3457d886":"#rename column attribute\ndf = df.rename(columns = {'emp.var.rate' : 'emp_var_rate', 'cons.price.idx' : 'cons_price_idx', \n                          'cons.conf.idx' : 'cons_conf_idx', 'nr.employed' : 'nr_employed'})\ndf.head()","29e4dc91":"#describe the data\ndf.describe()","41fd59a9":"#info of data\ndf.info()","a7520e1d":"#correlation from data\ndf.corr()","fdecea0c":"#visualize the correlation\nplt.figure(figsize = (10,6))\nsns.heatmap(df.corr(), annot = True, cmap = 'viridis')\nplt.title(\"Pearson Correlation\")\nplt.show()","710076de":"#distribution of customer age\nplt.figure(figsize = (8,6))\nsns.distplot(df['age'])\nplt.title(\"Distribution of Customer Age\", fontsize = 15, color = 'b')\nplt.show()","fed5f8ce":"#visualize age range of customer\nplt.figure(figsize = (8,6))\ndf.boxplot(column = 'age')\nplt.title('Range Age of Customer', fontsize = 15, color = 'b')\nplt.ylabel('Count')\nplt.show()","5134e976":"#visualize of the customer job based on age\nplt.figure(figsize = (10,6))\ndf.groupby('job')['age'].sum().sort_values(ascending = True).plot(kind = 'barh', color = 'salmon')\nplt.title('Customer Job based on Age', fontsize = 15, color = 'blue')\nplt.xlabel('Age')\nplt.ylabel('Customer Job')\nlabels, locations = plt.xticks()\nplt.xticks(labels, (labels\/10000).astype(int))\nplt.show()","c00c34ac":"#visualize of marital status based on age\nmarital_age = df.groupby('marital')['age'].sum().reset_index()\nplt.figure(figsize = (8,6))\nplt.pie(marital_age['age'], labels = marital_age['marital'], autopct = '%1.2f%%', )\nplt.title('Marital Status based on Age', fontsize = 15, color = 'blue')\nplt.show()","af72c96a":"#visualize of the customer education based on age\nplt.figure(figsize = (10,6))\ndf.groupby('education')['age'].sum().sort_values(ascending = True).plot(kind = 'barh', color = 'darkorange')\nplt.title('Customer Education based on Age', fontsize = 15, color = 'blue')\nplt.xlabel('Age')\nplt.ylabel('Customer Education')\nlabels, locations = plt.xticks()\nplt.xticks(labels, (labels\/10000).astype(int))\nplt.show()","97328133":"#visualize of customer housing status \nplt.rcParams['figure.figsize'] = (20,5)\nplt.subplot(1, 3, 1)\nsns.countplot(df['housing'], palette = 'pastel')\nplt.title('Housing Status', color = 'b')\nplt.xlabel('Status')\nplt.ylabel('Count')\n\n#visualize of customer loan status based on age\nplt.subplot(1, 3, 2)\nsns.countplot(df['loan'], palette = 'inferno')\nplt.title('Loan Status', color = 'b')\nplt.xlabel('Status')\nplt.ylabel('Count')\nplt.show()\n\n#visualize of customer credit status based on age\nplt.subplot(1, 3, 3)\nsns.countplot(df['default'], palette = 'rocket_r')\nplt.title('Credit Status', color = 'b')\nplt.xlabel('Status')\nplt.ylabel('Count')\nplt.show()","62c36e22":"#visualize of last contact duration of the month\nplt.figure(figsize = (10,6))\ndf.groupby(['month','contact'])['duration'].sum().unstack().plot(kind = 'bar')\nplt.title('Last Contact Duration of The Month', color = 'blue')\nplt.xlabel('Month')\nplt.ylabel('Duration')\nplt.legend(bbox_to_anchor = (1,1), shadow = True, title = 'Contact')\nlabels, locations = plt.yticks()\nplt.yticks(labels, (labels\/10000).astype(int))\nplt.xticks(rotation = 45)\nplt.show()","c53aa0cd":"#visualize of last contact duration of the day\nplt.figure(figsize = (10,6))\ndf.groupby(['day_of_week','contact'])['duration'].sum().unstack().plot(kind = 'bar')\nplt.title('Last Contact Duration of The Day', color = 'blue')\nplt.xlabel('Day of Week')\nplt.ylabel('Duration')\nplt.legend(bbox_to_anchor = (1,1), shadow = True, title = 'Contact')\nlabels, locations = plt.yticks()\nplt.yticks(labels, (labels\/10000).astype(int))\nplt.xticks(rotation = 45)\nplt.show()","c22fa85c":"#handling categorical data\nfor i in df.columns.tolist():\n    df[i] = df[i].astype('category').cat.codes\n\ndf.head()","1db578d8":"#split data\nX = df.drop('y', axis = 1)\ny = df['y']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 42)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","e9fd9391":"#build model\nrf = RandomForestClassifier(random_state = 1, max_features = 'sqrt', n_jobs = 1, verbose = 1)\n%time rf.fit(X_train, y_train)\nrf.score(X_test, y_test)","474b1d51":"#prediction\ny_pred = rf.predict(X_test)\nprint(y_pred)","83fb77bb":"#check MSE & RMSE \nmse = metrics.mean_squared_error(y_test, y_pred)\nprint('Mean Squared Error : '+ str(mse))\nrmse = math.sqrt(metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error : '+ str(rmse))","3ba9cb58":"#confusion matrix\nmatrix = pd.DataFrame((metrics.confusion_matrix(y_test, y_pred)), ('No', 'Yes'), ('No', 'Yes'))\nprint(matrix)\n\n#visualize confusion matrix\nplt.figure(figsize = (8,6))\nheatmap = sns.heatmap(matrix, annot = True, annot_kws = {'size': 14}, fmt = 'd', cmap = 'YlGnBu')\nheatmap.yaxis.set_ticklabels(heatmap.yaxis.get_ticklabels(), rotation = 0, ha = 'right', fontsize = 14)\nheatmap.xaxis.set_ticklabels(heatmap.xaxis.get_ticklabels(), rotation = 0, ha = 'right', fontsize = 14)\n\nplt.title('Confusion Matrix\\n(Random Forest Classifier)', fontsize = 18, color = 'darkblue')\nplt.ylabel('True label', fontsize = 14)\nplt.xlabel('Predicted label', fontsize = 14)\nplt.show()","d140f80d":"#classification report\nreport = metrics.classification_report(y_test, y_pred)\nprint('Classification Report of Random Forest Classifier : \\n')\nprint(report)","45d219d7":"#defining of feature\nfeature = pd.Series(rf.feature_importances_, index = X_train.columns).sort_values(ascending = False)\nprint(feature)","2ea09479":"#visualize feature\nplt.figure(figsize = (10,6))\nsns.barplot(x = feature, y = feature.index)\nplt.title(\"Feature Importance\")\nplt.xlabel('Score')\nplt.ylabel('Features')\nplt.show()","b105f538":"#deploying of random forest classifier\nrf.fit(X, y)\npickle.dump(rf, open('bank_marketing_model.pkl', 'wb'))","ba8dfe20":"### Bank Client :","120207b2":"# Data Extraction ","28676238":"# Check Feature Importance","ef4f516f":"# Visualization","e00fce04":"# Random Forest Model","bd6e2589":"#  Term Deposit Prediction","745ca9c2":"### Last contact of the current campaign :","9330a11a":"# Deployment"}}