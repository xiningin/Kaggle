{"cell_type":{"43caeb74":"code","b68a4d6d":"code","37c77c72":"code","c08d3a3d":"code","27d2d08e":"code","a57599a5":"code","1c344e8a":"code","32a57e75":"code","18feab71":"code","85bda4ae":"code","4db498a7":"code","60d8b0af":"code","6bf21ce2":"code","9852ec00":"code","a7a5244b":"code","2f4d3213":"code","69b553a7":"code","25b21bb3":"code","0edae828":"code","f68aaf08":"code","eb8d1486":"code","dbe8b7ee":"markdown","33deb5ad":"markdown","796da876":"markdown","a2f89f75":"markdown","cd0ae361":"markdown"},"source":{"43caeb74":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        path=os.path.join(dirname, filename)\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b68a4d6d":"# import relevant modules\nimport sys\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport statsmodels.formula.api as sn\nimport scipy.stats as stats\nfrom matplotlib.backends.backend_pdf import PdfPages\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.linear_model import LogisticRegression\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\nfrom patsy import dmatrices\n%matplotlib inline\n\n# Ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Settings\npd.set_option('display.max_columns', None)\nnp.set_printoptions(threshold=sys.maxsize)\nnp.set_printoptions(precision=3)\nsns.set(style=\"darkgrid\")\nplt.rcParams['axes.labelsize'] = 14\nplt.rcParams['xtick.labelsize'] = 12\nplt.rcParams['ytick.labelsize'] = 12","37c77c72":"covid_data = pd.read_csv(path)","c08d3a3d":"covid_data.head()","27d2d08e":"#count the total data\ncovid_data.count()","a57599a5":"#check the null values in the dataframe\ncovid_data.isnull().sum()","1c344e8a":"covid_data[covid_data.isnull().any(axis=1)]","32a57e75":"covid_data.columns","18feab71":"#create a new column to calculate the percentage of infected people with total population\ncovid_data[\"Percentage of infected\"]=covid_data[\"Total Cases\"]*100\/covid_data[\"Population\"]","85bda4ae":"#sort the top 10 of highest infected per population\ncovid_data.sort_values(\"Percentage of infected\", ascending=False).head(10)","4db498a7":"covid_data.sort_values(\"Total Cases per 1M population\", ascending=False).head(10)","60d8b0af":"#find which countries suffered the most death per 1M population\ncovid_data.sort_values(\"Deaths per 1M population\", ascending=False).head(10)","6bf21ce2":"#calculate the fatality rate of the disease in each countries\ncovid_data[\"Fatality rate in percentage\"]=covid_data[\"Total Deaths\"]*100\/covid_data[\"Total Cases\"]\ncovid_data","9852ec00":"#top 15 fatality rate\ncovid_data.sort_values(\"Fatality rate in percentage\", ascending=False).head(15)","a7a5244b":"#take top 5 for the data visualisation\ntop_five=covid_data.sort_values(\"Total Cases per 1M population\", ascending=False).head(5)\ntop_five","2f4d3213":"sns.relplot(x=\"Deaths per 1M population\", y=\"Total Cases per 1M population\",size=\"Active Cases\", hue=\"Country\", data=top_five)","69b553a7":"south_asia=['Brunei', 'Myanmar','Cambodia', 'Timor-Leste', 'Indonesia', 'Laos', 'Malaysia', 'Philippines', 'Singapore', 'Thailand', 'Vietnam']","25b21bb3":"covid_data","0edae828":"#get the south asia countries only\ndf_south_asia=covid_data.loc[covid_data['Country'].isin(south_asia)]\ndf_south_asia","f68aaf08":"colour = [\"red\", \"blue\", \"yellow\", \"orange\", \"green\", \"purple\", \"pink\", \"black\", \"brown\", \"grey\", \"turquoise\"]","eb8d1486":"#visualize the data\nsns.relplot(x=\"Deaths per 1M population\", y=\"Total Cases per 1M population\",size=\"Active Cases\", hue=\"Country\", palette=colour, data=df_south_asia)","dbe8b7ee":"I want to visualize the data for South Asia countries. First, I need to filter my dataframe.","33deb5ad":"Plot the graph for the 5 highest percentage of infected population countries","796da876":"South Asia countries:\nBrunei, Burma (Myanmar), Cambodia, Timor-Leste, Indonesia, Laos, Malaysia, the Philippines, Singapore, Thailand and Vietnam.","a2f89f75":"I believe the result of percentage of infected will return the same result as the total cases per 1M population when sorted by highest to lowest.","cd0ae361":"I assumed the null value for macao is valid because there was no death (total case = total recovered + active cases).\n\nIt is a bit different with Tajikistan. It was illogical to have null values for total tests but there were reported cases. However, I will still continue with the analysis"}}