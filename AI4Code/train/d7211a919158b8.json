{"cell_type":{"882fb848":"code","4a2222d1":"code","fe7dcb05":"code","ead86c2e":"code","b9b05e8c":"code","8ed8bfe2":"code","fe5a8af0":"code","cfa08b07":"code","8b806153":"code","d8ea4b67":"code","0910e270":"code","91b4b458":"code","ab7abe29":"code","436ceb0a":"code","3489d42e":"code","dd8c40e5":"markdown","1a959fb3":"markdown","8fff9613":"markdown","5a17ccc9":"markdown","c4e76d0f":"markdown","1fec8af9":"markdown","b775a599":"markdown","a967e20d":"markdown","5c2e8338":"markdown","63302261":"markdown","ead7cf20":"markdown","6d7db327":"markdown","0793e86c":"markdown","45e31ada":"markdown","f4bed3d0":"markdown","9df05e28":"markdown","6fc95f85":"markdown"},"source":{"882fb848":"import pandas as pd \nimport os\n\nfrom IPython.display import display, HTML\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom plotly import tools\nfrom collections import Counter \n\ninit_notebook_mode(connected=True)\n\nkernel_slugs = \"\"\"\/headsortails\/what-we-do-in-the-kernels-a-kaggle-survey-story\n\/sudalairajkumar\/where-do-people-learn-ml-ds\n\/robikscube\/a-tale-of-4-kaggler-types-by-ide-use-2018-survey\n\/andresionek\/what-makes-a-kaggler-valuable\n\/harriken\/storytelling-the-2018-kaggle-survey\n\/artgor\/russia-usa-india-and-other-countries\n\/farazrahman\/woggler-the-women-kaggler\n\/erikbruin\/r-vs-python-and-kmodes-clustering-2018-survey\n\/ogakulov\/the-mooc-wars-kaggle-s-perspective\n\/paultimothymooney\/2018-kaggle-machine-learning-data-science-survey\n\/gaborfodor\/are-you-a-data-scientist-no-way-hell-yeah\n\/ambarish\/ml-kaggler-types-using-kmeans-and-pca\n\/arjundas\/yet-another-data-science-story\n\/ash316\/kaggle-journey-2017-2018\n\/mullervilmos\/essential-data-skills-supply-and-demand\n\/pleonova\/how-many-ml-frameworks-do-data-scientists-know\n\/umeshnarayanappa\/the-world-needs-kaggle\n\/parvathykk\/definitelydatascientists\n\/ambarish\/a-forty-kaggler\n\/carlossouza\/comparing-kaggle-and-stackoverflow-communities\n\/carlolepelaars\/a-lighthearted-kaggle-2018-survey-eda\n\/shelars1985\/analyzing-the-future-workforce\n\/nulldata\/ml-bias-iml-perspective-recommendation\n\/amelthiarahel\/is-data-science-for-me\n\/shubhammank\/what-do-data-scientists-earn-world-wide\n\/vfdev5\/who-are-they-data-scientists\n\/hulan1991\/survey-analysis-choose-the-right-job\n\/aayush9876\/you-india-you-lose\n\/gsdeepakkumar\/who-is-a-data-scientist-a-statistical-approach\n\/alexdh359\/top-earning-self-described-data-scientists\n\/kabure\/understanding-kaggle-users-features\n\/aakashnain\/is-it-better-than-2017\n\/danilodiogo\/top-5-countries-us-india-china-russia-brazil\n\/ambarish\/different-types-of-doctorate-kagglers\n\/madagasygirl\/afrikagglers-the-african-kagglers\n\/gracefulibk\/a-survey-story-of-data-chicks-on-kaggle\n\/ashishpatel26\/sexiest-job-of-21st-century-data-scientist\n\/abhishekmamidi\/insights-of-kaggle-ml-and-ds-survey\n\/niyamatalmass\/how-to-become-a-data-scientist-in-2018\n\/youhanlee\/find-recent-trends-of-kagglers-under-30-years-old\n\/seshadrikolluri\/kaggle-survey-all-histograms-in-10-lines-of-code\n\/blazethrower\/dkaggle-dt-the-change-of-kaggle-over-time\n\/garlsham\/data-scientists-vs-data-analysts\n\/farazrahman\/analysis-of-kaggle-products\n\/sikolia\/kagglers-the-gender-story-a-2018-survey\n\/arunkumarramanan\/deep-learning-awesome-resources\n\/dianakolusheva\/machine-learning-self-starters\n\/algorrt\/extensive-eda-sexiest-job-of-21st-century\n\/janani90\/wrangling-kaggle-ml-and-ds-survey-data-using-r\n\/dhimananubhav\/data-scientists-in-germany\n\/francescorivano\/bandwagon-simulator\n\/nulldata\/kaggle-survey-2018-the-girl-power\n\/christinampoid\/which-data-career-should-you-follow\n\/kaiqidong\/insights-in-different-career-paths-from-kaggle\n\/mhajabri\/africai\n\/specbug\/what-s-in-a-data-scientist-s-backpack\n\/pedroschoen\/what-skills-move-up-our-compensation\n\/deepanshkhurana\/kaggle-survey-is-there-someone-else-like-me\n\/ash316\/ama-with-a-data-scientist\n\/bloodrabz\/rich-kaggler-poor-kaggler\n\/lytyakov\/kaggler-from-india-who-are-you\n\/eavdeeva\/country-pay-gap\n\/vbrodrigues\/what-tools-to-learn-as-a-ml-beginner\n\/anuraglahon\/investigating-about-the-country-india\n\/nksingh673\/peeping-into-organisations\n\/anammocanu\/master-s-or-phd-in-data-science\n\/antgoldbloom\/2018-kaggle-survey-eda-platforms-tools-and-more\n\/robikscube\/2018-kaggle-survey-starter-kit\n\/arunkumarramanan\/machine-learning-ml-awesome-frameworks\n\/felsal\/kaggle-around-the-world\n\/debdutta\/the-relatively-rich-data-scientists\n\/vpatricio\/kagglers-in-context-country-income-group-analysis\n\/subversive\/philippine-kagglers-2018\n\/rblcoder\/2018-kaggle-survey-eda-platforms-tools-and-more\n\/graeme16161\/who-is-a-data-scientist\n\/gpreda\/data-scientists-in-2018-kaggle-survey\n\/slmf1995\/kaggle-survey-2018-life-as-a-tech-recruiter\n\/sudhirnl7\/data-science-survey-2018\n\/kerneler\/starter-2018-kaggle-ml-ds-survey-7f4b06c8-4\n\/rangmar\/simple-analysis-with-the-world-bank-data\n\/cegallo2\/professional-development-in-2018-kaggle-survey\n\/lucifer19\/programming-languages-vs-responders\n\/justjun0321\/kickoff-with-basic-graphs\n\/seshadrikolluri\/non-cs-phds-in-data-science-a-deep-dive\n\/yarnedia\/clearing-a-path-to-a-six-figure-salary-in-the-us\n\/graeme16161\/fairness-and-bias-in-machine-learning\n\/nizasiwale\/kagglers-in-the-developing-and-developed-world\n\/arunkumarramanan\/what-we-do-in-the-kernels-a-kaggle-survey-story\n\/hakkisimsek\/plotly-tutorial-5\n\/arunkumarramanan\/the-mooc-wars-kaggle-s-perspective\n\/datapsycho\/the-skill-we-need-for-a-job\n\/mikewm24\/crossroads-of-generation-x-and-millenial-kagglers\n\/chrispr\/interview-with-a-data-scientist-or-not\n\/arunkumarramanan\/ml-kaggler-types-found-using-unsupervised-learning\n\/paultimothymooney\/2018-survey-data-specialists-from-the-usa\n\/ananthu017\/kaggle-survey-for-people-new-to-data-science\n\/statmaster\/exploring-kaggle-survey-2018-using-pandas\n\/anu2analytics\/datascience-users-india-vs-us-men-vs-women\n\/jayesh4520\/kaggle-survey-2018-simple-exploration\n\/vanshjatana\/kagglers-across-the-world\n\/mjamilmoughal\/valuable-insights-of-kagglers\n\/madagasygirl\/industries-and-machine-learning\n\/hidelloon\/building-data-analytics-center-to-where\n\/strangemane\/measuring-accountability-in-ds-and-ml-with-waffles\n\/prashantgupta\/once-upon-a-survey\n\/graeme16161\/importance-of-interpretability\n\/shadabhussain\/kaggle-storytelling\n\/arunkumarramanan\/where-do-people-learn-ml-ds\n\/ambarish\/a-high-paid-kaggler\n\/madagasygirl\/tempus-fugit-from-2017-to-2018\n\/ihordurnopianov\/what-we-do-is-who-we-are\n\/shamalip\/kaggle-survey-for-the-aspirants\n\/deepak525\/dss18\n\/joehabel\/kagglers-without-a-bachelor-s\n\/docxian\/kaggle-ml-ds-survey-multiple-choice-questions\n\/divyeshardeshana\/data-scientist-role-analysis-with-34-graphs-more\n\/aleamva\/the-kingdom-of-kaggle\n\/vanshjatana\/kaggle-survey-visualisation\n\/arunsankar\/key-insights-from-2018-kaggle-survey\n\/datark1\/data-science-in-the-european-union-survey\n\/sank3t\/kaggle-survey-usa-and-india\n\/arunkumarramanan\/a-tale-of-4-kaggler-types-by-ide-use-2018-survey\n\/anupritad\/ml-attracting-all-income-groups\n\/statnmap\/maps-of-languages-and-analyses-reproducibility\n\/hiralmshah\/ds-ml-survey-visualisation\n\/josephgpinto\/data-beats-emotions\n\/hungfei\/job-hunting-data-science-related\n\/rubmanoid\/programming-language-and-coding-time\n\/mattinjersey\/study-of-correlations\n\/kaiqidong\/all-you-need-to-know-about-hottest-jobs\n\/martinlbarron\/the-gender-divide-in-data-science\n\/shubhamlekhwar\/data-science-a-hot-cake-in-industries\n\/victorlopez\/gender-pay-gap-a-sad-and-true-story\n\/karthikdutt\/13-questions-and-inferences-from-kaggle-survey\n\/harriken\/residuals-fig8b-test\n\/ashkat\/through-the-lens-of-gender-age-and-industry\n\/anupritad\/ml-kaggle-attracting-all-socio-economic-groups\n\/hamelg\/learning-data-science-the-role-of-online-courses\n\/kkurek012514\/who-s-making-the-most-money\n\/gabrielmsilva\/where-is-the-data-scientist\n\/ibtesama\/india-usa-difference-in-data-science-scenario\n\/aamster\/overview-of-different-types-of-data-scientists\n\/mamczurmiroslaw\/quo-vadis-a-story-of-young-data-scientist\n\/duttadebadri\/is-degree-mandatory-to-become-a-data-scientist\n\/ergitikajain\/kagglers-then-now\n\/doha2012\/how-much-can-i-earn\n\/marlukyanova\/students-and-nonstudents-preferences-in-learning\n\/chrispr\/gender-age-and-title-d3tree\n\/antoninaarefina\/prefer-not-to-say-answers\n\/sangarshanan\/answering-questions-with-the-survey-data\n\/mmfb65\/2018-kaggle-survey\n\/ashwinids\/toolset-of-a-data-scientist\n\/alijs1\/how-to-earn-more-as-a-data-scientist\n\/ghost185\/plot-for-basically-every-question-probably\n\/zgeek3\/united-states-data-science-salaries\n\/ol0fmeister\/the-student-s-hub\n\/marchman\/2018-kaggle-ds-survey-clustering\n\/majickdave\/ds-survey\n\/wladeczek44\/90-of-free-form-questions-are-unanswered\n\/harriken\/kaggle-journey-2017-2018\n\/jasonduncanwilson\/kaggle-ml-survey-exploration\n\/piterfm\/kaggle-ml-ds-survey-2018-who-are-kagglers\n\/amnfirst\/the-data-science-line-how-to-do-it-well\n\/elilomeli\/kagglers-in-the-developing-countries\n\/jeffysonar\/diversity-around-world-age-and-free-responses\n\/yvancho\/the-story-of-a-frustrating-realization\n\/hasanlianar\/switchers-from-business-discipline-vs-others\n\/muhsina\/road-to-data-scientist-without-cs-major\n\/kobespam\/data-scientist-in-government-and-ngos\n\/toshinoue\/kaggler-wage-index-2018\n\/nikitsoftweb\/five-ways-to-quantify-yearly-compensation\n\/danialnam\/library-to-help-your-kaggle-survey-challenge\n\/preductor\/prospects-for-novices-in-data-science\n\/tombresee\/2018-odst\n\/laloromero\/a-brief-story-about-a-survey\n\/sanikamal\/investing-the-country-indonesia\n\/harupy\/favorite-media-sources-on-data-science\n\/lkuen89\/most-valued-skill-stakeholder-communication\n\/geofizx\/2018-kaggle-survey-inferring-respondent-personas\n\/mehmetcekic\/ml-ds-getting-more-popular\n\/bishnuch\/data-viz-on-kaggle-2018-survey-challenge\n\/supchanda08kol50\/data-analysis-for-annual-data-science\n\/tannistha\/what-are-the-top-software-used-by-data-scientist\n\/mgiraygokirmak\/ey-ay\n\/holy185521\/the-kagglers-by-region\n\/sherryxue\/kaggle-ml-ds-survey-eda-on-who-responded\n\/mtmeanmachine\/who-and-what-makes-data\n\/marchman\/2018-ds-survey-q5\n\/tandonarpit6\/non-data-scientists-leveraging-ml-ds\n\/allanray21\/becoming-a-machine-learning-engineer\n\/sebastianpb10\/can-your-yearly-compensation-be-predicted\n\/fthissite\/studying-gender-disparities-among-kagglers\n\/amitprasad\/r-and-python-who-s-the-difference\n\/theoviel\/kagglers-gender-pay-gap-salary-prediction\n\/tinkudas\/more-machine-learning-jobs-are-coming\n\/dave1216\/data-wars\n\/heena34\/how-to-grow-data-science-career\n\/gonnel\/which-notebook-should-you-use-jupyter-or-rstudio\n\/rdrsquared\/the-lens-through-which-we-see-the-world\n\/ustyk5\/ukrainian-data-scientist-answers\n\/s3rg388\/data-science-tutorial-income-gender-gap\n\/riteshsinha\/the-job-of-a-data-scientist\n\/filthyilliterate\/transitioning-from-academia-to-industry\n\/statmaster\/the-data-science-gap-a-modeling-approach\n\/rajeshcv\/overall-results-comparison-with-chosen-country\n\/sanwal092\/gender-education-and-salaries\n\/slickwilly\/meta-kernel-superba\n\/mkariithi\/a-deep-dive-into-the-usage-of-r-python-or-both\n\/mikedev\/kaggle-from-a-cs-master-degree-student-perspective\n\/cnavarrete72\/fork-of-should-i-become-a-data-scientist\n\/cristianmb98\/cristianborja-final\n\/salazar12\/unsupervised-analytics-of-kagglers-in-2018\n\/nataliacp\/ks-ncp-fi\n\/cferner\/python-coders\n\/jinnies\/what-makes-a-confident-data-scientist-in-the-u-s\n\/pchlq82\/survey-analysis\n\/juan1996\/la-comunidad-de-kaggle\n\/beatrizo96\/kaggle-meta-challenge\n\/rnehas\/descriptive-analysis-kaggle-survey-2018\n\/dcanulr\/code-at-school\n\/yypark\/established-vs-starting-data-scientists\n\/rubylime\/kernel40f6ec4c03\n\/georgipetkov\/beware-the-self-selection-bias\n\/sreelathar\/story-told-by-graphs\n\/adityamanna\/2018-kaggle-ml-ds-survey-analysis\n\/mkariithi\/what-makes-a-kaggler-valuable\n\/mkariithi\/where-do-people-learn-ml-ds\n\/pallavikhedekar\/what-kaggle-wants-to-know\n\/shankhadeepghosal\/2018-kaggle-ml-ds-survey-challenge\n\/jav1d98\/kernel5cb14bd4cc\n\/shravankoninti\/eda-and-insights-from-2018-kaggle-survey\n\/rajeshsupreet\/2018-data-science-survey-story-telling\n\/maqbool\/the-mooc-wars-kaggle-s-perspective\n\/slickwilly\/2018-survey-kernel-path-generator\n\/rajthavti\/who-is-a-data-scientist-a-statistical-approach\n\/wlkoch\/2018-kaggle-ds-and-ml-survey-competition\n\/twalen\/kaggle-data-science-survey-questions-map\n\/edimaudo\/the-ds-ml-kaggle-story\n\/spscientist\/2018-kaggle-machine-learning-data-science-survey\n\/milak303842\/professional-online-learners-on-kaggle\"\"\"\nkernel_slugs = kernel_slugs.split(\"\\n\")\n\n\n\n\nuser_images = \"\"\"https:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1014468-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/71388-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/644036-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1549225-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/29522-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/727004-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/557776-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1443335-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/216754-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1314380-kg.JPG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/18102-fb.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/103225-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/910033-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/740429-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1370076-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/139010-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/256944-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1552647-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/103225-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/915913-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1956324-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1211847-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/372183-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2396428-kg.JPG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/365460-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/425159-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2361804-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1106296-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1838666-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1097838-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/536977-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/435023-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/103225-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1564291-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2065763-kg.jpeg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/859104-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1331984-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1115104-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1155353-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1061767-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1490279-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1365869-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/557776-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/949803-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1772635-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1249072-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1045554-kg.jpeg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/685355-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/372183-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/260853-kg.JPG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1987075-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1104210-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1470195-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2078060-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/740429-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1579096-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1245160-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1198164-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1858018-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1008767-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1033158-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/497585-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/368-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/644036-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/949803-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/774828-fb.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/262604-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1585022-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/185772-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1873860-kg.jpeg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1331995-kg.JPG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/769452-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/807222-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/953273-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2080166-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1538816-kg.JPG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2457001-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1142840-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1055009-fb.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1061767-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2196481-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1331995-kg.JPG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1097890-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/949803-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1544989-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/949803-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1422342-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1078678-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/949803-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1314380-kg.JPG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1384515-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2225966-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/494922-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2107080-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1670631-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1547362-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1564291-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1795159-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1741414-kg.JPG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1331995-kg.JPG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/681869-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/949803-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/103225-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1564291-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1464916-kg.jpeg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2242065-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2050543-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2031500-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1330628-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1968774-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2524872-kg.jpeg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1670631-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/153258-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1144502-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2243081-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/949803-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2202938-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2471419-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1584393-kg.JPG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/511687-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/828098-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2283470-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1987075-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/40730-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2401028-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/226229-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/716649-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/29522-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2202938-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/183041-fb.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1339681-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2167966-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1611087-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1365835-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1341160-kg.jpeg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/859381-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/615583-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1078678-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1288337-kg.JPG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1512902-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1408504-kg.PNG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1844623-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1311374-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2095225-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/592643-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1336564-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/29522-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1376207-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/861427-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/539747-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1687011-kg.jpeg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/772965-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2443608-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/530297-kg.JPG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1327481-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1938841-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2130345-fb.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1663348-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1272482-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1913939-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2350786-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/885509-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1460211-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/185521-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2195635-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2095225-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1976308-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/506442-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2438555-fb.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/644147-fb.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2062758-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2390426-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/209391-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/647743-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1352412-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2343674-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/104367-kg.JPG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2225966-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1187996-kg.JPG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1734142-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/826299-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/697622-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2437106-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1252796-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2461421-kg.PNG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2520699-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/447337-kg.JPG\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2043577-gr.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1997757-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2417770-fb.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/46947-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/585916-kg.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/826299-kg.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/2508495-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/1856194-gp.jpg\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\nhttps:\/\/storage.googleapis.com\/kaggle-avatars\/thumbnails\/default-thumb.png\"\"\"\nuser_images = user_images.split(\"\\n\")\n\ndef _load_dataset(filename):\n    path = \"..\/input\/\"\n    filepath = path + filename\n    dataframe = pd.read_cv(filepath)\n    return dataframe\n\ndef _pre_process(dataframe):\n    df = dataframe\n    columns = df.columns\n    print (columns)\n    print (df.info())\n    print (df.head())\n    \ndef value_counts(df, col):\n    vc = df[col].value_counts()\n    return vc\n\ndef aggregate(df, col, agg_col):\n    agg = df.groupby(col).agg({agg_col : \"mean\"})\n    agg = agg.reset_index()\n    agg = agg.sort_values(agg_col, ascending = False)\n    return agg\n\n\n# load data\nkernels = pd.read_csv(\"..\/input\/meta-kaggle\/Kernels.csv\")\nUsers = pd.read_csv(\"..\/input\/meta-kaggle\/Users.csv\")\nKernelVersions = pd.read_csv(\"..\/input\/meta-kaggle\/KernelVersions.csv\")\nKernelVotes = pd.read_csv(\"..\/input\/meta-kaggle\/KernelVotes.csv\")\nKernelTags = pd.read_csv(\"..\/input\/meta-kaggle\/KernelTags.csv\")\n\n## survey data \nos.listdir(\"..\/input\/kaggle-survey-2018\/\")\nsurvey = pd.read_csv(\"..\/input\/kaggle-survey-2018\/SurveySchema.csv\")\n\n\n# preprocessing\nsurvey_kernels = []\nfor kernel in kernel_slugs:\n    slug = kernel.split(\"\/\")[2]\n    username = kernel.split(\"\/\")[1]\n\n    slugged = kernels[kernels[\"CurrentUrlSlug\"] == slug]\n    slugged = slugged[slugged[\"ForkParentKernelVersionId\"].isna()]\n    if (len(slugged) != 0):\n        doc = dict(slugged.head().iloc(0)[0])\n        survey_kernels.append(doc)\n\nkernels_df = pd.DataFrame(survey_kernels)\nkernels_df[\"CreationDate\"] = pd.to_datetime(kernels_df[\"CreationDate\"])\nkernels_df[\"date\"] = \"2018-\" + kernels_df[\"CreationDate\"].dt.month.astype(str) + \"-\" + kernels_df[\"CreationDate\"].dt.day.astype(str)\nkernels_df[\"day\"] = kernels_df[\"CreationDate\"].dt.day\nUsers = Users.rename(columns={\"Id\" : \"AuthorUserId\"})\nkernels_df = kernels_df.merge(Users, on = \"AuthorUserId\")\nkernels_df = kernels_df.drop_duplicates()","4a2222d1":"visited = {}\nhtml = \"<div>\"\nfor img in user_images:\n    if img not in visited:\n        visited[img] = 1\n        \n        if \"default-thumb\" in img:\n            continue\n        html += \"<img src='\" +img+ \"' width='60px' style='float:left; margin-left:5px; border:1px solid black'>\"\nhtml += \"<\/div>\"\ndisplay (HTML( html))","fe7dcb05":"teir_colors ={ 'Novice' : '#5ac995', 'Contributor' : '#00BBFF', 'Expert' : '#95628f', 'Master' : '#f96517', 'GrandMaster' : '#dca917', 'KaggleTeam' : '#008abb'}\n\nvc1 = kernels_df.groupby(\"PerformanceTier\").agg({\"CurrentUrlSlug\" : \"count\", \"TotalVotes\" : \"sum\", \"TotalViews\" : \"sum\"}).reset_index().rename(columns={\"CurrentUrlSlug\" : \"count\"})\nmapp = {0:\"Novice\", 1 : \"Contributor\", 2 : \"Expert\", 3 : \"Master\", 4 : \"GrandMaster\", 5 : \"KaggleTeam\"}\nvc1['teir'] = vc1[\"PerformanceTier\"].apply(lambda x : mapp[x])\nvc1['teir_col'] = vc1[\"teir\"].apply(lambda x : teir_colors[x])\n\ntrace = go.Bar(x = vc1.teir, y = vc1[\"count\"], marker = dict(color=vc1[\"teir_col\"]))\nlayout = go.Layout(title=\"Kernels Published by Kaggler Tiers\", height=400, yaxis=dict(title=\"Total Kernels\", range=(0,100)))\nfig = go.Figure(data = [trace], layout = layout)\niplot(fig)","ead86c2e":"trace0 = go.Scatter(x = vc1[\"count\"], y = vc1.TotalVotes, mode='markers+text',\n    text = vc1.teir, marker=dict(color=vc1.teir_col, size=vc1.TotalViews*0.005, opacity=0.8))\nlayout = go.Layout(title=\"Cumulative Votes and Views (Size) Garnered by Kernels Tiers\", \n                   xaxis = dict(title=\"Total Kernels\"), yaxis = dict(title=\"Total Cumulative Votes\"))\ndata = [trace0]\nfig = go.Figure(data = data, layout = layout)\niplot(fig, filename='bubblechart-color')","b9b05e8c":"import numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\nimport io\nimport base64\n\ntitle = 'Number of Kernels by Date'\noverdose = kernels_df[\"day\"].value_counts().to_frame()\noverdose = overdose.rename(columns = {\"day\" : title})\nkernels_df['ndate'] = pd.to_datetime(kernels_df['date']).dt.normalize()\nvc = kernels_df['ndate'].value_counts().to_frame().reset_index().rename(columns = {\"ndate\" : \"counts\", \"index\" : \"date\"})\nvc = vc.sort_values(\"date\")\nvc['cum_counts'] = vc[\"counts\"].cumsum()\n\nfig = plt.figure(figsize=(10,6))\nplt.xlim(min(vc.date), max(vc.date))\nplt.ylim(min(vc.cum_counts), 210)\nplt.xlabel('Date',fontsize=20)\nplt.ylabel(title, fontsize=20)\nplt.title('Total Kernels by Date', fontsize=20)\n\ndef animate(i):\n    data = vc.iloc[:int(i+1)] \n    p = sns.lineplot(x=data.date, y=data.cum_counts, data=data, color=\"#f4aa42\")\n    p.tick_params(labelsize=15)\n    plt.setp(p.lines, linewidth=5)\n\nani = animation.FuncAnimation(fig, animate, frames=len(vc), repeat=True)\n\nani.save('test.gif', writer='imagemagick', fps=10)\nplt.close(1)\nfilename = 'test.gif'\nvideo = io.open(filename, 'r+b').read()\nencoded = base64.b64encode(video)\nHTML(data='''<img src=\"data:image\/gif;base64,{0}\" type=\"gif\" \/>'''.format(encoded.decode('ascii')))","8ed8bfe2":"trace1 = go.Bar(x = vc.date, y = vc.counts, name = \"New Kernels on a particular day\", marker = dict(color=\"red\", opacity=0.8))\ntrace2 = go.Scatter(x = vc.date, y = vc.cum_counts, name=\"Total Kernels on a particular day\", marker = dict(color=\"orange\", opacity=0.8), mode = \"lines+markers\")\nlayout = go.Layout(title=\"Kernels Published by Date\", legend=dict(x=0.1, y=1.1, orientation=\"h\"))\nfig = go.Figure(data = [trace1, trace2], layout = layout)\niplot(fig)","fe5a8af0":"py_r = ['Rmd', 'Py', 'Py', 'Py', 'Rmd', 'Py', 'R', 'Rmd', 'Py', 'Py', 'Py',\\\n 'Rmd', 'R', 'Py', 'Py', 'Py', 'Rmd', 'Py', 'Rmd', 'Py', 'Py', 'Py', \\\n 'Rmd', 'Py', 'Py', 'Py', 'R', 'Py', 'Rmd', 'Py', 'Py', 'Py', 'R', 'Rmd',\\\n  'Rmd', 'Py', 'Py', 'Py', 'Py', 'Py', 'R', 'Py', 'Py', 'R', 'Rmd', 'Py', \\\n  'Py', 'Py', 'R', 'Py', 'Py', 'Rmd', 'Py', 'Py', 'Py', 'Py', 'Py', 'R', \\\n  'Py', 'Py', 'Py', 'Py', 'Py', 'Py', 'Rmd', 'Py', 'Py', 'Py', \\\n  'Py', 'Py', 'Rmd', 'Py', 'R', 'Py', 'Rmd', 'Py', 'Rmd', 'Py', 'Py', 'Py',\\\n   'Py', 'Py', 'Py', 'R', 'R', 'Rmd', 'Py', 'Rmd', 'Py', 'Py', \\\n  'Py', 'Py', 'Rmd', 'Rmd', 'Py', 'Py', 'Py', 'Rmd', 'Py', 'Py', 'Py', 'Rmd',\\\n   'Py', 'Rmd', 'Py', 'Rmd', 'Py', 'Py', 'Rmd', 'Rmd', 'Py', \\\n  'Py', 'Py', 'Py', 'R', 'Py', 'Py', 'Rmd', 'Py', 'Py', 'Py', 'Py', 'Py',\\\n   'Rmd', 'Py', 'Py', 'Py', 'Py', 'R', 'Py', 'Rmd', 'Py', 'Py',\\\n   'Py', 'Rmd', 'Py', 'Py', 'R', 'Py', 'Rmd', 'Py', 'Rmd', 'Py', 'Py', 'Py',\\\n    'Py', 'Py', 'R', 'Py', 'Py', 'R', 'Py', 'Py', 'Py', 'Py', 'Py', 'Py', \\\n    'Py', 'Py', 'Py', 'Py', 'Py', 'Rmd', 'Py', 'Py', 'Py', 'Py', 'Rmd', \\\n    'Py', 'Rmd', 'Py', 'Py', 'Py', 'Py', 'R', 'Py', 'Py', 'Py', 'Py',\\\n     'Py', 'Py', 'Py', 'Py', 'Py', 'Py', 'R', 'Py', 'Py', 'Py', 'Py', 'Py',\\\n      'Py', 'R', 'Py', 'Py', 'Rmd', 'Py', 'R', 'Rmd', 'Rmd', 'Py', 'R', 'Py', \\\n      'Py', 'Py', 'Py', 'R', 'Rmd', 'Py', 'Py', 'Py', 'Py', 'Py', 'Py', 'Rmd', \\\n      'Rmd', 'Py', 'Py', 'Py', 'Py', 'Rmd', 'Py', 'R', 'Py', 'Py', 'Py', 'Py',\\\n       'Py', 'Py', 'Py', 'Py', 'Py', 'Py', 'R', 'Rmd', 'R', 'Py', 'R', 'Py', 'Py']\n\n    \n\nfrom collections import Counter \npy_r = [\"R\" if _ == \"Rmd\" else _ for _ in py_r]\n\npy_r_dist = Counter(py_r).most_common(5)\n# print (py_r_dist)\nlabels = [x[0] for x in py_r_dist]\nvalues = [x[1] for x in py_r_dist]\npitrace = go.Pie(labels = labels, values = values, marker = dict(colors = [\"#cfefac\", \"#ed50aa\"]))\n\nlayout = go.Layout(title = \"Python or R Kernels\")\nfig = go.Figure(data =[pitrace], layout = layout)\niplot(fig)","cfa08b07":"kernels_df[\"Medal\"] = kernels_df[\"Medal\"].fillna(4)\nmedal_col = { 1 : \"#FFCE3F\", 2 : \"#E6E6E6\", 3 : \"#EEB171\" , 4 : \"#a2c3f9\"}\nmedal_name = { 1 : \"Gold\", 2 : \"Silver\", 3 : \"Bronze\" , 4 : \"NoMedal\"}\n\nvc = kernels_df.groupby(\"Medal\").agg({\"TotalViews\" : \"sum\", \"CurrentUrlSlug\" : \"count\"}).reset_index()\nvc[\"medal_col\"] = vc['Medal'].apply(lambda x : medal_col[x] if x in medal_col else \"#222\")\nvc[\"medal_name\"] = vc['Medal'].apply(lambda x : medal_name[x])\n\ntrace1 = go.Bar(x = vc.medal_name, y=vc.CurrentUrlSlug, name=\"Total Kernels\", orientation = \"v\" ,\n                   marker=dict(color=vc.medal_col, opacity=1.0))\ntrace2 = go.Bar(x = vc.medal_name, y=vc.TotalViews, name=\"Total Views\", orientation = \"v\" ,\n                   marker=dict(color=vc.medal_col, opacity=1.0))\n\nfig = tools.make_subplots(rows=1, cols=2, print_grid = False, subplot_titles=[\"Total Medals Count\", \"Total Views by Medals\"])\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig['layout'].update(title='', height=400, showlegend = False)\niplot(fig)","8b806153":"kernels_df['teir'] = kernels_df[\"PerformanceTier\"].apply(lambda x : mapp[x])\nkernels_df['teir_col'] = kernels_df[\"teir\"].apply(lambda x : teir_colors[x])\n\nkernels_df[\"medal_col\"] = kernels_df['Medal'].apply(lambda x : medal_col[x] if x in medal_col else \"#222\")\n\n\ntrace0 = go.Scatter(\n    x=kernels_df.TotalComments,\n    y=kernels_df.TotalVotes,\n    mode='markers',\n    text = kernels_df.CurrentUrlSlug,\n    marker=dict(\n            color= kernels_df.teir_col,\n        opacity=0.8,\n        size=kernels_df.TotalViews*0.01,\n    )\n)\n\ndata = [trace0]\nlayout = go.Layout(xaxis=dict(title=\"Total Comments\"), yaxis=dict(title=\"Total Votes\"), title=\"Popular Kernels by Votes, Comments, Views\")\nfig = go.Figure(layout = layout, data = data)\niplot(fig, filename='bubblechart-color')","d8ea4b67":"trace0 = go.Scatter(\n    x=kernels_df.TotalComments,\n    y=kernels_df.TotalVotes,\n    mode='markers',\n    text = kernels_df.CurrentUrlSlug,\n    marker=dict(\n            color= kernels_df.medal_col,\n        opacity=1,\n        size=kernels_df.TotalViews*0.01,\n    )\n)\n\ndata = [trace0]\nlayout = go.Layout(xaxis=dict(title=\"Total Comments\"), yaxis=dict(title=\"Total Votes\"), title=\"Popular Kernels by Votes, Comments, Views\")\nfig = go.Figure(layout = layout, data = data)\niplot(fig, filename='bubblechart-color')","0910e270":"from collections import Counter\nfrom wordcloud import WordCloud, STOPWORDS\n\ntitle_words = \"-\".join(kernels_df.CurrentUrlSlug).split(\"-\")\ntitle_text = \" \".join(title_words).lower()\n\nignorewords = [\"kaggler\", \"kaggle\", \"data\", \"scientist\", \"survey\", \"science\", \"ml\", \"ds\", \"analysis\", \"story\", \" s \", \"2018\", \"2017\", \"machine\", \"learning\"]\nfor common in ignorewords:\n    title_text = title_text.replace(common, \" \")\n\n# wc = WordCloud(stopwords=STOPWORDS, colormap='cool', background_color='#fff').generate(title_text)\n# plt.figure(figsize=(12,12))\n# plt.imshow(wc)\n# plt.axis('off')\n# plt.title('WordCloud : All Words Used');","91b4b458":"def _get_version_values(x):\n    versions = KernelVersions[KernelVersions['KernelId'] == x]\n    versions = versions[~versions['VersionNumber'].isna()]\n    total_runs = len(versions)\n    version_lines = list(versions['TotalLines'])\n    version_votes = list(versions['TotalVotes'])\n    \n    changes = [x - version_lines[i - 1] for i, x in enumerate(version_lines)][1:]\n    \n    total_lines = version_lines[-1]\n    avg_votes_pv = sum(version_votes) \/ total_runs\n    avg_lines_pv = sum(changes) \/ (total_runs)\n\n    return total_runs, total_lines, avg_votes_pv, avg_lines_pv\n\n\nkernels_df['total_version_runs'] = kernels_df['Id'].apply(lambda x : _get_version_values(x)[0])\nkernels_df['total_lines'] = kernels_df['Id'].apply(lambda x : _get_version_values(x)[1])\nkernels_df['avg_votes_pv'] = kernels_df['Id'].apply(lambda x : _get_version_values(x)[2])\nkernels_df['avg_lines_pv'] = kernels_df['Id'].apply(lambda x : _get_version_values(x)[3])\n\nt1 = kernels_df.groupby(\"DisplayName\").agg({\"total_lines\" : \"mean\"}).reset_index()\nt1 = t1.merge(kernels_df[[\"DisplayName\", \"teir_col\"]], on=\"DisplayName\").drop_duplicates()\nt1 = t1.sort_values(\"total_lines\", ascending = False).head(25)[::-1]\n\ntrace = go.Bar(y = t1.DisplayName, x = t1.total_lines, orientation=\"h\", marker = dict(color=t1.teir_col, opacity=0.8))\nlayout = go.Layout(title=\"Kernels with Maximum Lines of Content\", height=600, margin=dict(l=180))\nfig = go.Figure(data = [trace], layout = layout)\niplot(fig)","ab7abe29":"t1 = kernels_df.groupby(\"DisplayName\").agg({\"total_version_runs\" : \"sum\"}).reset_index()\nt1 = t1.merge(kernels_df[[\"DisplayName\", \"teir_col\"]], on=\"DisplayName\").drop_duplicates()\nt1 = t1.sort_values(\"total_version_runs\", ascending = False).head(25)[::-1]\n\ntrace = go.Bar(y = t1.DisplayName, x = t1.total_version_runs, orientation=\"h\", marker = dict(color=t1.teir_col, opacity=0.8))\nlayout = go.Layout(title=\"Kernels with Maximum Versions\", height=600, margin=dict(l=180))\nfig = go.Figure(data = [trace], layout = layout)\niplot(fig)","436ceb0a":"tags = ['storytelling', 'beginner', 'eda', 'data visualization', 'survey analysis', 'storytelling', 'beginner', 'eda', 'data visualization', 'survey analysis', 'classification', 'advanced', 'eda', 'data cleaning', 'data visualization', 'linear regression', 'storytelling', 'eda', 'data visualization', 'survey analysis', 'storytelling', 'survey analysis', 'storytelling', 'data visualization', 'survey analysis', 'data visualization', 'starter code', 'data cleaning', 'data visualization', 'classification', 'feature engineering', 'tutorial', 'data visualization', 'clustering', 'k-means', 'pca', 'storytelling', 'beginner', 'eda', 'data visualization', 'survey analysis', 'beginner', 'data visualization', 'survey analysis', 'eda', 'data visualization', 'feature engineering', 'eda', 'data visualization', 'survey analysis', 'feature engineering', 'eda', 'data cleaning', 'data visualization', 'survey analysis', 'beginner', 'data visualization', 'eda', 'data cleaning', 'data visualization', 'survey analysis', 'tabular data', 'eda', 'data visualization', 'survey analysis', 'storytelling', 'tutorial', 'beginner', 'data visualization', 'starter code', 'india', 'beginner', 'eda', 'data visualization', 'starter code', 'data visualization', 'classification', 'storytelling', 'beginner', 'data visualization', 'storytelling', 'beginner', 'eda', 'data visualization', 'starter code', 'eda', 'data visualization', 'survey analysis', 'storytelling', 'beginner', 'eda', 'data visualization', 'survey analysis', 'categorical data', 'tutorial', 'eda', 'survey analysis', 'starter code', 'advanced', 'eda', 'data visualization', 'survey analysis', 'tabular data', 'data visualization', 'survey analysis', 'beginner', 'eda', 'data visualization', 'survey analysis', 'storytelling', 'women', 'beginner', 'eda', 'data visualization', 'tutorial', 'beginner', 'eda', 'data visualization', 'dailychallenge', 'eda', 'data cleaning', 'data visualization', 'storytelling', 'tutorial', 'beginner', 'data visualization', 'survey analysis', 'tutorial', 'beginner', 'eda', 'data visualization', 'storytelling', 'beginner', 'data visualization', 'categorical data', 'data visualization', 'survey analysis', 'eda', 'survey analysis', 'research tools and topics', 'libraries', 'tutorial', 'beginner', 'deep learning', 'storytelling', 'eda', 'data visualization', 'survey analysis', 'starter code', 'beginner', 'eda', 'data visualization', 'feature engineering', 'starter code', 'beginner', 'eda', 'data visualization', 'storytelling', 'beginner', 'data cleaning', 'data visualization', 'storytelling', 'eda', 'data cleaning', 'data visualization', 'survey analysis', 'storytelling', 'africa', 'beginner', 'data visualization', 'survey analysis', 'beginner', 'data visualization', 'survey analysis', 'storytelling', 'beginner', 'data visualization', 'survey analysis', 'beginner', 'eda', 'data visualization', 'survey analysis', 'storytelling', 'eda', 'data visualization', 'classification', 'data visualization', 'survey analysis', 'storytelling', 'beginner', 'eda', 'data visualization', 'survey analysis', 'beginner', 'data visualization', 'survey analysis', 'data visualization', 'survey analysis', 'starter code', 'libraries', 'tutorial', 'beginner', 'feature engineering', 'deep learning', 'storytelling', 'eda', 'data cleaning', 'data visualization', 'data visualization', 'eda', 'survey analysis', 'asia', 'industry', 'eda', 'data visualization', 'beginner', 'eda', 'data visualization', 'data visualization', 'tutorial', 'beginner', 'eda', 'data visualization', 'starter code', 'eda', 'data visualization', 'classification', 'storytelling', 'tutorial', 'beginner', 'eda', 'data visualization', 'starter code', 'storytelling', 'beginner', 'beginner', 'eda', 'data visualization', 'survey analysis', 'data visualization', 'eda', 'data visualization', 'starter code', 'tutorial', 'beginner', 'survey analysis', 'classification', 'decision tree', 'data visualization', 'employment', 'economics', 'tutorial', 'eda', 'data visualization', 'storytelling', 'data visualization', 'survey analysis', 'storytelling', 'eda', 'data visualization', 'logistic regression', 'binary classification', 'storytelling', 'beginner', 'eda', 'data visualization', 'storytelling', 'eda', 'data visualization', 'survey analysis', 'data journalism', 'tutorial', 'intermediate', 'data visualization', 'clustering', 'storytelling', 'beginner', 'data visualization', 'survey analysis', 'eda', 'data visualization', 'survey analysis', 'storytelling', 'beginner', 'eda', 'data visualization', 'survey analysis', 'eda', 'data visualization', 'feature engineering', 'beginner', 'eda', 'data visualization', 'survey analysis', 'storytelling', 'data visualization', 'survey analysis', 'eda', 'data visualization', 'data visualization', 'storytelling', 'beginner', 'data visualization', 'survey analysis', 'data visualization', 'dimensionality reduction', 'eda', 'data visualization', 'survey analysis', 'starter code', 'tutorial', 'beginner', 'data cleaning', 'data visualization', 'starter code', 'beginner', 'data visualization', 'beginner', 'data visualization', 'starter code', 'eda', 'data visualization', 'survey analysis', 'eda', 'data visualization', 'starter code', 'storytelling', 'eda', 'data visualization', 'survey analysis', 'eda', 'data visualization', 'classification', 'cartography', 'geospatial analysis', 'data visualization', 'survey analysis', 'eda', 'data visualization', 'starter code', 'beginner', 'eda', 'data visualization', 'survey analysis', 'storytelling', 'beginner', 'starter code', 'storytelling', 'eda', 'data visualization', 'storytelling', 'beginner', 'eda', 'data visualization', 'survey analysis', 'data visualization', 'beginner', 'eda', 'data visualization', 'survey analysis', 'storytelling', 'data visualization', 'survey analysis', 'storytelling', 'eda', 'data visualization', 'survey analysis', 'eda', 'data visualization', 'survey analysis', 'clustering', 'storytelling', 'data visualization', 'survey analysis', 'data visualization', 'survey analysis', 'beginner', 'eda', 'data visualization', 'beginner', 'data visualization', 'storytelling', 'tutorial', 'beginner', 'data visualization', 'survey analysis', 'beginner', 'eda', 'data visualization', 'beginner', 'survey analysis', 'clustering', 'data visualization', 'survey analysis', 'data visualization', 'eda', 'data visualization', 'storytelling', 'world', 'countries', 'eda', 'geospatial analysis', 'data visualization', 'data visualization', 'survey analysis', 'classification', 'data visualization', 'regression analysis', 'tutorial', 'beginner', 'data visualization', 'starter code', 'data visualization', 'gradient boosting', 'data cleaning', 'data visualization', 'survey analysis', 'clustering', 'storytelling', 'eda', 'data visualization', 'survey analysis', 'data cleaning', 'data visualization', 'classification', 'starter code', 'eda', 'data visualization', 'starter code', 'eda', 'data visualization', 'storytelling', 'eda', 'data visualization', 'gradient boosting', 'storytelling', 'beginner', 'eda', 'data visualization', 'survey analysis', 'beginner', 'eda', 'data cleaning', 'data visualization', 'starter code', 'data visualization', 'statistical analysis', 'survey analysis', 'eda', 'data visualization', 'survey analysis', 'classification', 'storytelling', 'eda', 'data visualization', 'survey analysis', 'beginner', 'data cleaning', 'data visualization', 'beginner', 'data visualization', 'clustering', 'data cleaning', 'data visualization', 'survey analysis', 'eda', 'data cleaning', 'data visualization', 'eda', 'data visualization', 'eda', 'data cleaning', 'data visualization', 'data visualization', 'starter code']\n\nvc = Counter(tags).most_common(25)\nx = [_[0] for _ in vc]\ny = [_[1] for _ in vc]\n\ntrace = go.Bar(x = x, y = y, marker = dict(color=\"darkslategray\"))\nlayout = go.Layout(title=\"Popular Tags used by participants\", height=400, yaxis=dict(title=\"Tag Count\", range=(0,150)))\nfig = go.Figure(data = [trace], layout = layout)\niplot(fig)","3489d42e":"t1 = kernels_df.groupby(\"UserName\").agg({\"TotalViews\" : \"sum\", \"TotalVotes\" : \"sum\", \"AuthorUserId\" : \"count\"}).reset_index()\nt1 = t1[t1[\"AuthorUserId\"] > 1]\n\ntrace0 = go.Scatter(x = t1[\"TotalVotes\"], y = t1[\"TotalViews\"], mode='markers',\n    text = t1[\"UserName\"]+\" (Kernels:\"+t1['AuthorUserId'].astype(str)+\" Votes: \" +t1['TotalVotes'].astype(str)+ \")\", marker=dict(color=t1.TotalVotes, colorscale=\"Jet\", showscale = True, size=t1.TotalVotes*0.7, opacity=0.6))\nlayout = go.Layout(title=\"Kagglers who shared multiple kernels (Size : Total Votes)\", \n                   xaxis = dict(title=\"Total Votes Got\"), yaxis = dict(title=\"Total Views Got\"))\ndata = [trace0]\nfig = go.Figure(data = data, layout = layout)\niplot(fig, filename='bubblechart-color')","dd8c40e5":"> Can you find your picture in this ? If not, then probably you have not uploaded your image in kaggle. Happy to see the Kerneler in this list as well. :P\n\n## 2. Participation by Kaggle Tiers","1a959fb3":"![](https:\/\/i.imgur.com\/zhJUcXZ.png?1)\n\n# How \"Kaggle Survey Challenge 2018\" Concluded ? \n\n\n## Kaggle ML and DS Survey 2018 \n\nThis year, Kaggle conducted an industry-wide survey that presents a truly comprehensive view of the state of data science and machine learning. The survey was live for one week in October 2018, and after cleaning the data, 23,859 responses were obtained. \n\n## Data Storytelling Survey Challenge \n\nThere was a lot to explore in the survey data. The results include raw numbers about who is working with data, what\u2019s happening with machine learning in different industries, and the best ways for new data scientists to break into the field. With $28,000 total prize money, kagglers were asked to release best data stories from the dataset. The challenge was live for a month from Nov 02 - Dec 03. \n\n## How the Survey Concluded ? \n\n**I did not contributed to this challenge :\/** But, here is a small kernel that analyse how the challenge ended and provides the key insights from the challenge. ","8fff9613":">  Wow **Jose Berengueres** !! , clearly an exception here with more than 350 runs of his kernel : \"Storytelling the 2018 Kaggle Survey\". Great ! ;). Cyckolya is the second in the list who ran their kernel more than 100 times. \n\n## 11. Popular Tags Used \n\nWhat are the most common tags used by the participants.","5a17ccc9":"![](https:\/\/i.imgur.com\/kSozB2B.png?1)","c4e76d0f":"> - For users who shared multiple kernels, I have taken average length of their kernels. **Paul Mooney's kernel has more than 4000 Lines :O** and is one of the kernel of this challenge.   \n> - Followed by Paul, are **Sachin Shelar and Headsortails** with more than 3000 lines of content in their kernels. Only novice having about 1500 lines of content was NizaSiwale. Great Job !\n\n\n## 10. Who Ran their kernels maximum number of times ? ","1fec8af9":"## 1. Participants of the Challenge\n\nIn a span of one month, a total of **240 kernels** were published from **194 kagglers**.  Here are they : \n\n","b775a599":"> - There are users who shared more than one kernel, the above plot shows the users by number of kernels they shared, total votes and total views \n> - **Rob Mulla** shared 2 kernels and got about 164 votes and 5777 views, **Bukun shared maximum kernels equal to 4** \n\n\nThanks for viewing, Congrats to the winners and everyone who participated. If you liked this kernel, upvote it. ","a967e20d":"> We see a majoirty of kernels (about 70%) were python kernel. \n\n## 6. How many medals collected ? ","5c2e8338":"> - Challenge started well **with 25 kernels in first three days**. Maximum kernels were shared towards the end of the challenge (in the last two days) close to 25.  \n\n## 5. Python vs R Kernels !!","63302261":"> - In the above graph, size of the bubble represents the total views garnered by the kernels, y-axis represents total cumulative votes and x-axis is the total kernels shared by a particular kaggle tier.  \n> - We can see that kernels shared by **experts got the maximum number of cumulative views**. Also, total number of votes are highest (total 983 votes) on kernels shared by experts.   \n> - Only 13 submissions were made by Masters with more than 500 cumulative votes. Despite of **only three grandmaster submissions, their kernels got second largest number of cumulative views** as represented by the large size or the bubble.\n\n## 4. Kernels Published by Date ","ead7cf20":"> - In the above graph, the size of the bubbles represents the total views on a kernel. Maximum number of views were garnered by **SRK's : Where do people learn ML and DS kernel** and **Heads or Tails kernel : What we do in the kernels : A kaggle survey story**. \n> - Headsortails kernel also got maximum number of comments, Kernels by **Rob Mulla, Andre Sionek and Jose Berengueres** also got more than 60 comments.  \n> - Other most upvotes kernels of this competitions are \"A tale of 4 Kaggler types by IDE use, Storytelling the 2018 kaggle Survey, What makes a Kaggler valuable. \n\n<br>\n**Here is the same graph by Kernel Medals**\n","6d7db327":"> - The above graph shows the progression of kernel submissions in this challenge, in a span of a month about 240 kernels were shared. And following is the final view of the kernels posted by every date. ","0793e86c":"> - **9 kernels got Gold, 12 got silver, 80 got bronze** and about 107 did not got any medal as they may be shared very late or no progress was made after initial versions. \n> - **Maximum views (more than 50K) were garnered by kernels which were awarded gold**, followed by kernels with bronze. \n\n## 7. Popular Kernels by Votes, Comments, and Views","45e31ada":">  We see that maximum kernels were shared by noivce and contributors, there were three grandmaster submissions from **Headsortails, SRK, and Beluga**. Three kernels were also shared by Kaggle Team, obviously two from **Paul Mooney** and one forked kernel by Kaggle CEO Anthony\n\n## 3. Who got maximum Votes, Views, and Comments ? ","f4bed3d0":"> - As we can see mostly the top kernels (in terms of votes) got the Gold, however there are other kernels which got sliver and are popular : \n> - **R vs Python and Kmodels Clustering 2018 Survey** by Erik Bruin, **ML-Kaggler types using kmeans and pca** by Bukun and **Yet Another data science story** by ADM\n\n\n## 8. Kernel Titles : Fancy and Cool Names","9df05e28":" ## 12. Who Shared more than one kernels ","6fc95f85":"> - The wordcloud shows some interesting themes picked by the kagglers for example: Kernels talking about story of **\"Gender\", \"Countries\", \"Job\", \"Pay\", \" Gaps\"** etc.   \n> - Kernels talking about Gender were **Woggler-The Women Kaggler** by Faraz Rahman, **A survey story of data chicks on kaggle** by Grace Ufeoshi, and **The Girl Power** by Amrrs. \n> - Kagglers shared sub groups analysis of different countries such as **India, Russia, USA, Africa, Germany and Indonesia**., Kagglers who shared these analysis are **Andrew Lukyanenko**, **Sophie A**, **Danilo da Silva**, and **Anubhav Dhiman**  \n\n## 9. Who shared the maximum content ? "}}