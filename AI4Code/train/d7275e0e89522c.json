{"cell_type":{"804de8ca":"code","522db7d6":"code","3c8bef1c":"code","327a6e9b":"code","adf6750e":"code","1f9a8234":"code","c104e448":"code","966a453d":"code","0f299c19":"code","146ff74a":"code","1c1fda21":"code","985d2fc2":"code","fdce0078":"code","b68dd692":"code","decfc0bf":"code","d665c1a3":"code","7dd41859":"code","5007d0ba":"code","4048adb0":"code","f67ce51b":"code","dd8cbe12":"code","261850cc":"code","6dda2930":"code","7ae51386":"code","f802a0cf":"code","7053584b":"code","3fd54c66":"code","343d3daa":"code","7ac452ac":"code","89cc6300":"code","ac2cf2fc":"code","2e421d20":"code","94dd9855":"code","a451ddc8":"code","58b7ea7f":"code","612c676d":"code","f84dde4b":"code","4860ec77":"code","42487652":"code","ea6f56d4":"code","500eb6ba":"code","10878ae6":"code","eba7e374":"code","53fac3a9":"code","22234552":"code","b88772f5":"code","50afab3d":"code","9a263c67":"code","58653549":"markdown","1d637ddf":"markdown","cf7b2f1b":"markdown"},"source":{"804de8ca":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\npaths = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        paths.append(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","522db7d6":"!pip install pyspark","3c8bef1c":"import os\nimport pandas as pd\nimport numpy as np\n\nfrom pyspark import SparkConf, SparkContext\nfrom pyspark.sql import SparkSession, SQLContext\n\nfrom pyspark.sql.types import *\nimport pyspark.sql.functions as F\nfrom pyspark.sql.functions import *","327a6e9b":"spark = SparkSession.builder.master(\"local[2]\").appName(\"BikeSharing\").getOrCreate()","adf6750e":"spark","1f9a8234":"sc = spark.sparkContext\nsc","c104e448":"sqlContext = SQLContext(spark.sparkContext)\nsqlContext","966a453d":"paths = list(set(paths)-set(['\/kaggle\/input\/bixi-montreal-bikeshare-data\/BixiMontrealRentals2018\/Stations_2018.csv',\n                '\/kaggle\/input\/bixi-montreal-bikeshare-data\/BixiMontrealRentals2019\/Stations_2019.csv',\n                '\/kaggle\/input\/bixi-montreal-bikeshare-data\/BixiMontrealRentals2017\/2017\/Stations_2017.csv',\n                '\/kaggle\/input\/bixi-montreal-bikeshare-data\/BixiMontrealRentals2016\/BixiMontrealRentals2016\/Stations_2016.csv']))","0f299c19":"stations_df_16 = spark.read.format(\"csv\").options(header=\"true\").option(\"delimiter\",\",\").option(\"encoding\", \"UTF-8\").option(\"quote\",\"\\\"\").load('\/kaggle\/input\/bixi-montreal-bikeshare-data\/BixiMontrealRentals2016\/BixiMontrealRentals2016\/Stations_2016.csv').cache()\nstations_df_17 = spark.read.format(\"csv\").options(header=\"true\").option(\"delimiter\",\",\").option(\"encoding\", \"UTF-8\").option(\"quote\",\"\\\"\").load('\/kaggle\/input\/bixi-montreal-bikeshare-data\/BixiMontrealRentals2017\/2017\/Stations_2017.csv').cache()\nstations_df_18 = spark.read.format(\"csv\").options(header=\"true\").option(\"delimiter\",\",\").option(\"encoding\", \"UTF-8\").option(\"quote\",\"\\\"\").load('\/kaggle\/input\/bixi-montreal-bikeshare-data\/BixiMontrealRentals2018\/Stations_2018.csv').cache()\nstations_df_19 = spark.read.format(\"csv\").options(header=\"true\").option(\"delimiter\",\",\").option(\"encoding\", \"UTF-8\").option(\"quote\",\"\\\"\").load('\/kaggle\/input\/bixi-montreal-bikeshare-data\/BixiMontrealRentals2019\/Stations_2019.csv').cache()\n","146ff74a":"stations_df_16 = stations_df_16.withColumn(\"year_station\",lit('2016'))\nstations_df_17 = stations_df_17.withColumn(\"year_station\",lit('2017'))\nstations_df_18 = stations_df_18.withColumn(\"year_station\",lit('2018'))\nstations_df_19 = stations_df_19.withColumn(\"year_station\",lit('2019'))\n","1c1fda21":"cols = stations_df_16.columns\n\nstations_df = stations_df_16.select(cols).union(stations_df_17.select(cols)).union(stations_df_18.select(cols)).union(stations_df_19.select(cols)).cache()","985d2fc2":"bike_df_full = spark.read.format(\"csv\").options(header=\"true\").option(\"delimiter\",\",\").option(\"encoding\", \"UTF-8\").option(\"quote\",\"\\\"\").load(paths).cache()","fdce0078":"bike_df_full.count()","b68dd692":"bike_df_full.columns","decfc0bf":"bike_df_full.dtypes","d665c1a3":"bike_df_full.take(5)","7dd41859":"bike_df_full.count()","5007d0ba":"bike_df_full = (bike_df_full.withColumn('year_start_date',year(bike_df_full.start_date))\n          .withColumn('month_start_date',month(bike_df_full.start_date))\n          .withColumn('hour_start_date',hour(bike_df_full.start_date))\n          .withColumn('year_end_date',year(bike_df_full.end_date))\n          .withColumn('month_end_date',month(bike_df_full.end_date))\n          .withColumn('hour_end_date',hour(bike_df_full.end_date))\n          )","4048adb0":"for c in bike_df_full.columns:\n    print(\"number of nulls in \", c ,bike_df_full.filter(col(c).isNull()).count())\n","f67ce51b":"bike_df_full.take(5)","dd8cbe12":"hourly_start_count = bike_df_full.groupBy(bike_df_full.hour_start_date).count().orderBy(col('hour_start_date'))","261850cc":"hourly_start_count.toPandas().plot.bar(x='hour_start_date',figsize=(14, 6))","6dda2930":"hourly_end_count = bike_df_full.groupBy(bike_df_full.hour_end_date).count().orderBy(col('hour_end_date'))","7ae51386":"hourly_end_count.toPandas().plot.bar(x='hour_end_date',figsize=(14, 6))","f802a0cf":"bike_df_full.groupBy(col('is_member')).count().show()","7053584b":"hourly_ismember_end_count = bike_df_full.groupBy(bike_df_full.hour_end_date,bike_df_full.is_member).count().orderBy(col('hour_end_date'))","3fd54c66":"df_pivot = hourly_ismember_end_count.toPandas().pivot(index='hour_end_date', columns='is_member', values='count')","343d3daa":"df_pivot.plot.bar(stacked=True, figsize=(10,7))","7ac452ac":"bike_df_full.groupBy(col('is_member')).agg({'duration_sec':'sum'}).toPandas().plot.bar(x='is_member')","89cc6300":"duration_hour_member = bike_df_full.groupBy(col('is_member'),col('hour_start_date')).agg({'duration_sec':'sum'}).withColumnRenamed('sum(duration_sec)','tot_duration').toPandas().pivot(index='hour_start_date', columns='is_member', values='tot_duration')","ac2cf2fc":"duration_hour_member.plot.bar(stacked=True, figsize=(10,7))","2e421d20":"bike_df_full.groupBy(col('start_station_code'),col('end_station_code')).agg({'start_station_code':'count','duration_sec':'sum'}).withColumnRenamed('count(start_station_code)','num_of_rides').withColumnRenamed('sum(duration_sec)','tot_duration').filter(col('start_station_code')!= col('end_station_code')).orderBy(desc('tot_duration'), desc('num_of_rides')).show(10)","94dd9855":"bike_df_full.groupBy(col('start_station_code'),col('end_station_code')).agg({'start_station_code':'count','duration_sec':'sum'}).withColumnRenamed('count(start_station_code)','num_of_rides').withColumnRenamed('sum(duration_sec)','tot_duration').filter(col('start_station_code')== col('end_station_code')).orderBy(desc('tot_duration'), desc('num_of_rides')).show(10)","a451ddc8":"stations_df.columns","58b7ea7f":"bike_df_full.columns","612c676d":"bike_df_full.filter(col('year_start_date')!=col('year_end_date')).count()","f84dde4b":"join_type = \"left_outer\"\n\ndf_final = bike_df_full.join(broadcast(stations_df) , (stations_df.code==bike_df_full.start_station_code) & (stations_df.year_station==bike_df_full.year_end_date),join_type)","4860ec77":"df_final =  df_final.cache()","42487652":"df_final.columns","ea6f56d4":"df_final.count()","500eb6ba":"df_final = df_final.withColumnRenamed(\"name\",\"starting_station_name\").withColumnRenamed(\"latitude\",\"starting_station_lat\").withColumnRenamed(\"longitude\",\"starting_station_long\").drop('year_station').drop('code')","10878ae6":"df_final.columns","eba7e374":"df_final = df_final.join(broadcast(stations_df) , (stations_df.code==df_final.end_station_code) & (stations_df.year_station==df_final.year_end_date),join_type)","53fac3a9":"df_final = df_final.withColumnRenamed(\"name\",\"ending_station_name\").withColumnRenamed(\"latitude\",\"ending_station_lat\").withColumnRenamed(\"longitude\",\"ending_station_long\").drop('year_station').drop('code')","22234552":"df_final.columns\n\n#df_final.filter(col('start_station_code')!=col('code')).count()","b88772f5":"df_map = df_final.groupBy('starting_station_name','starting_station_lat','starting_station_long').agg({'starting_station_name':'count','duration_sec':'sum'}).withColumnRenamed('count(starting_station_name)','num_of_rides').withColumnRenamed('sum(duration_sec)','tot_duration').orderBy(desc('num_of_rides')).limit(10000).toPandas()","50afab3d":"df_map[\"starting_station_lat\"] = pd.to_numeric(df_map['starting_station_lat'])\ndf_map[\"starting_station_long\"] = pd.to_numeric(df_map['starting_station_long'])","9a263c67":"import matplotlib.pyplot as plt\ndf_map.plot(kind=\"scatter\", x=\"starting_station_long\", y=\"starting_station_lat\",\n    s=df_map['num_of_rides']\/100, label=\"number of rides\",\n    c=\"tot_duration\", cmap=plt.get_cmap(\"jet\"),\n    colorbar=True, alpha=0.1, figsize=(10,7),\n)\nplt.legend()\nplt.show()","58653549":"### Total duration per hour based on membership status","1d637ddf":"### Top 3 start and end locations based on number of rides and duration of rides","cf7b2f1b":"1. ### Top 10 round trips sort by duration and number of rides"}}