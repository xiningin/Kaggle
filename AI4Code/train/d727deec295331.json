{"cell_type":{"1b538e8d":"code","27b65d9f":"code","9c2cc3eb":"code","cca9dfa9":"code","a691c964":"code","9009d850":"code","abd32fbf":"code","ff21af38":"code","5bce5828":"code","ff9e7455":"code","f2566626":"code","bf68440a":"code","67055d54":"code","38d6079b":"code","3b43568e":"code","75d53fee":"code","80d17e42":"code","7da56991":"code","33a34daf":"code","1b43b4dc":"code","4d47078e":"code","30d034ca":"code","f38c915c":"markdown","28974f06":"markdown","8137c686":"markdown","9fab2733":"markdown","dc72fd34":"markdown","eb8f5cb5":"markdown","21ef6c88":"markdown","98b4bd59":"markdown","2a8a685c":"markdown","57a546e3":"markdown","1424eb71":"markdown"},"source":{"1b538e8d":"debug = 1","27b65d9f":"import matplotlib.pyplot as plt","9c2cc3eb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cca9dfa9":"#%%timeit\nss=pd.read_csv('..\/input\/kkb-repl4nlp-assignment0\/sts-kaggle-sample_submission.csv')\ntrain=pd.read_csv('..\/input\/kkb-repl4nlp-assignment0\/sts-kaggle-train.csv')\ntest=pd.read_csv('..\/input\/kkb-repl4nlp-assignment0\/sts-kaggle-test.csv')\ntrain.head(5)","a691c964":"test.head(5)","9009d850":"print(train.info())","abd32fbf":"train['len_sa']=train['sentence_a'].apply(lambda x : len(x))\ntrain['len_sb']=train['sentence_b'].apply(lambda x : len(x))\nprint(train[['len_sa','len_sb']].describe())","ff21af38":"ix=train['len_sa'].idxmax()\nprint(train.loc[ix,'sentence_a'])\nprint(train.loc[ix,'sentence_b'])","5bce5828":"ix=train['len_sb'].idxmax()\nprint(train.loc[ix,'sentence_a'])\nprint(train.loc[ix,'sentence_b'])","ff9e7455":"print('Class of Label = ')\nprint(len(train['similarity'].unique()))\nprint('Info of Label = ')\nprint(train['similarity'].describe())","f2566626":"train['counts']=1\ndtbt=train.drop('id',axis=1).groupby('similarity').sum()\ndtbt=dtbt.reset_index()\ndtbt.sort_values('similarity',inplace=True)\ndtbt","bf68440a":"plt.figure(figsize=(10,10))\nplt.bar(list(dtbt.index),dtbt['counts'])\nplt.title('Distribution of Labels')\nplt.show()","67055d54":"import nltk\nimport fasttext\n#import fasttext.util\n\nfrom scipy.spatial import distance\nimport nltk\n\nfrom tqdm import tqdm","38d6079b":"# from gensim.models import KeyedVectors\n# FASTTEXTFILE='..\/input\/fasttext-crawl-300d-2m\/crawl-300d-2M.vec'\n# ft=KeyedVectors.load_word2vec_format(FASTTEXTFILE,limit=500000)","3b43568e":"test.drop('id',axis=1,inplace=True)\ntest.head(5)","75d53fee":"ft = fasttext.load_model('..\/input\/fasttext-common-crawl-bin-model\/cc.en.300.bin')","80d17e42":"def vec_similarity(vec1,vec2):\n    return ( 1 - distance.cosine(vec1,vec2))","7da56991":"if debug:\n    vec1 = ft.get_sentence_vector(test.iloc[0,0])\n    vec2 = ft.get_sentence_vector(test.iloc[0,1])\n    print('vec1 = ', vec1)\n    print('vec2 = ', vec2)\n    print('score = ',vec_similarity(vec1,vec2))","33a34daf":"res = []\nfor row in tqdm(range(len(test))):\n    vec1 = ft.get_sentence_vector(test.iloc[row,0])\n    vec2 = ft.get_sentence_vector(test.iloc[row,1])     \n    score = vec_similarity(vec1,vec2)\n    res.append(score)","1b43b4dc":"ss","4d47078e":"ss['similarity'] = [5 * i for i in res]\n#ss['similarity'] = res\nss.set_index('id',inplace=True)\nss.to_csv('submission.csv')","30d034ca":"ss","f38c915c":"# Pre-trained Model + Inference","28974f06":"\u5927\u4f6c\u4eec\u591a\u591a\u6307\u5bfc\uff0c\u8f7b\u55b7~~","8137c686":"# EDA","9fab2733":"\u8fd9\u4e2a.vec\u683c\u5f0f\u7684\u6a21\u578b\u5305\u4e0d\u592a\u4f1a\u7528\uff0c\u548c\u76f4\u63a5\u7528.bin\u6765load_model\u6709\u4e9b\u533a\u522b\uff0c\u5e0c\u671b\u6709\u5927\u4f6c\u4eec\u80fd\u6559\u4e00\u4e0b:\nhttps:\/\/www.kaggle.com\/yekenot\/fasttext-crawl-300d-2m\n","dc72fd34":"## \u7785\u4e00\u773c\u6570\u636e\u5427","eb8f5cb5":"* kaggle\u4e0a\u6709\u4eba\u4e0a\u4f20\u4e86facebook\u5b98\u65b9\u9884\u8bad\u7ec3\u7684fasttext\u5305\uff0c\u5148\u7528\u8fd9\u4e2a\u76f4\u63a5\u505ainference\u4e86\n* https:\/\/www.kaggle.com\/khyeh0719\/fasttext-common-crawl-bin-model\n* \u540e\u9762\u5237\u699c\u518d\u5fae\u8c03\u6216\u8005\u8bd5\u9a8c\u5176\u4ed6\u6a21\u578b\n* \n* \u9884\u8bad\u7ec3\u6a21\u578b\u7684\u94fe\u63a5\n* \u8fd9\u662ffacebook\u5b98\u7f51\u63d0\u4f9b\u7684\uff1ahttps:\/\/fasttext.cc\/docs\/en\/english-vectors.html\n* \u8001\u5e08\u7ed9\u7684github\u94fe\u63a5\u4e2d\u7684fasttext\u662f157\u79cd\u8bed\u8a00\u7684\uff1ahttps:\/\/github.com\/muralikrishnasn\/semantic_similarity\/blob\/master\/sts_similarities\/fasttext.ipynb\n* \u5176\u4ed6\u6a21\u578b\u4e0d\u4e86\u89e3\uff0c\u5927\u4f6c\u4eec\u7528pycharm git clone\u5f04\u597d\u4e86\u6765\u6559\u6559\u6211\uff0c\u6e23\u6e23\u7b14\u8bb0\u672c\u53ea\u80fd\u767d\u5ad6kaggle notebook\uff0c\u4e0d\u914d\u672c\u5730\u8dd1\u6a21\u578b","21ef6c88":"### sentence\u4fe1\u606f","98b4bd59":"# Version Info\n\n1. V7:\u81ea\u5df1\u968f\u4fbf\u73a9\u73a9\n2. V8:\u7528fasttext woed2vec \u76f4\u63a5\u505ainference","2a8a685c":"similarity\u53d6\u503c\u4e3a 0~5\uff0c \u4f46\u662f\u6709140\u4e2a\u503c\uff0c\u4e0d\u77e5\u9053\u4eba\u5de5\u600e\u4e48\u6807\u7684\u70b9???\u83ab\u975e\u662f\u597d\u591a\u4eba\u4e00\u8d77\u6807\u6ce8\u7136\u540e\u53d6\u5747\u503c???","57a546e3":"\u770b\u4e86\u4e00\u4e0b\u6700\u957f\u7684\u53e5\u5b50\uff0c\u4e0d\u77e5\u9053\u5404\u79cd\u6a21\u578b\u7684seqence length\u6700\u5927\u5230\u591a\u5c11\uff0c\u4e2a\u4eba\u611f\u89c9\u4ee5\u540e\u5fae\u8c03\u5e94\u8be5\u4f1a\u6709\u7528\u5427","1424eb71":"### label\u4fe1\u606f"}}