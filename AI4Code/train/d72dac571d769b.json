{"cell_type":{"3a21ff8b":"code","c17f9241":"code","f22e381d":"code","69527ec6":"code","ed4ac637":"code","b0c1a64f":"code","1237b86f":"code","406ed69f":"code","04923314":"code","9086464d":"code","63b701af":"code","6dd75a38":"code","c17a4318":"code","eaf73039":"markdown","01b27274":"markdown","9348306f":"markdown","8b39f9ec":"markdown","7a392cdc":"markdown","3cd297af":"markdown","db61d09d":"markdown","dbb39af5":"markdown","2b7a0cd5":"markdown","8b4ee2f0":"markdown"},"source":{"3a21ff8b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os # file system handling\nimport seaborn as sns # plotting\nimport matplotlib.pyplot as plt # plots handling\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c17f9241":"data = pd.read_csv('..\/input\/suv-purchase-decision\/SUV_Purchase.csv')","f22e381d":"data.head()","69527ec6":"print(f\"There are {data.shape[0]} rows and {data.shape[1]} columns.\")\nprint(f\"There are {data.isna().sum().sum()} missing values.\")\nprint(f\"{data.query('Purchased == 0').shape[0] \/ data.shape[0] * 100}% people purchased a SUC while {data.query('Purchased == 1').shape[0] \/ data.shape[0] * 100}% did not.\")","ed4ac637":"WIDTH  = 20\nHEIGHT = 6\n\ndef plot_vs(frame, col1, col2, hue):\n    plt.figure(figsize=(WIDTH, HEIGHT * 2))\n    sns.scatterplot(data=frame, x=col1, y=col2, hue=hue)\n    plt.title(f\"Scatter plot | {col1} vs {col2}\")\n    plt.show()\n    \ndef boxplot_cat(frame, col1, hue):\n    plt.figure(figsize=(WIDTH, HEIGHT))\n    sns.boxplot(data=frame, x=col1, y=hue, orient=\"h\")\n    plt.title(f\"Box plot | {col1} by {hue}\")\n    plt.show()","b0c1a64f":"plot_vs(data, 'Age', 'EstimatedSalary', 'Gender')\nplot_vs(data, 'Age', 'EstimatedSalary', 'Purchased')","1237b86f":"boxplot_cat(data, 'Age', 'Gender')\nboxplot_cat(data, 'Age', 'Purchased')\n\nboxplot_cat(data, 'EstimatedSalary', 'Gender')\nboxplot_cat(data, 'EstimatedSalary', 'Purchased')","406ed69f":"# Create a copy\ntrain = data.copy()\n\n# EstimatedSalary : Outliers handling\ntrain = train.drop(train.query(\"EstimatedSalary > 120000 and Purchased == 0\").index)\n\n# Age : Outliers handling\ntrain = train.drop(train.query(\"Age > 55 and Purchased == 0\").index)\n\n# Gender : Binary encoding\ngender = {\"Male\":0, \"Female\":1}\ntrain  = train.replace({\"Gender\":gender})","04923314":"features = ['Gender', 'EstimatedSalary', 'Age']\ntarget   = 'Purchased'","9086464d":"from sklearn.linear_model import LogisticRegressionCV\n\n\n# Prepare features and target\nX = train[features]\ny = train[target]\n\n#\u00a0Model training\nclf = LogisticRegressionCV(cv=5, random_state=42)\n\nclf = clf.fit(X, y)","63b701af":"from sklearn.metrics import accuracy_score, roc_auc_score, f1_score\n\nprint(f\"Accuracy  : {accuracy_score(y, clf.predict(X))}\")\nprint(f\"ROC score : {roc_auc_score(y, clf.predict(X))}\")\nprint(f\"F1  score : {f1_score(y, clf.predict(X))}\")","6dd75a38":"data['prediction'] = clf.predict(data.replace({\"Gender\":gender})[features])","c17a4318":"plot_vs(data, 'Age', 'EstimatedSalary', 'Purchased')\nplot_vs(data, 'Age', 'EstimatedSalary', 'prediction')","eaf73039":"## Quick pre-processing","01b27274":"## Setup","9348306f":"#\u00a0Prediction visualization","8b39f9ec":"___\n# Data visualization","7a392cdc":"## Basic insights","3cd297af":"# SUV Purchase Decision\n\n## Goal\n\nThe goal of this notebook is to predict if a SUC will be purchased or not based on:\n- gender (Male or Female)\n- age\n- estimated salary","db61d09d":"#\u00a0Conclusion\n\nHope you enjoyed this simple Logistic regression on SUV purchased data!","dbb39af5":"## Load the data","2b7a0cd5":"___\n\n# Modelling","8b4ee2f0":"## Model"}}