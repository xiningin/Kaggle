{"cell_type":{"d9f4426e":"code","d9f46f7d":"code","8e3aee30":"code","ab27281b":"code","c19903f0":"code","f172324e":"code","63575065":"code","3372efcc":"markdown","cc9ef926":"markdown","b5845537":"markdown","6d1a6653":"markdown","862329c2":"markdown","1e366904":"markdown","f4e1287a":"markdown","d8da0533":"markdown"},"source":{"d9f4426e":"# Import libs...\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # basic plotting options\nimport seaborn as sns # statistical data visualization\n\n# ... and set variables\nFILE_LOCATION = '\/kaggle\/input\/dow-stock-data\/dow_historic_2000_2020.csv'\n","d9f46f7d":"# Read dataframe and show last couple of rows...\ndf = pd.read_csv(FILE_LOCATION)\ndf.tail()","8e3aee30":"# Engineer some basic features...\n# Convert date to datetime format\ndf.date = pd.to_datetime(df.date)\n# Add year\ndf['year'] = df.date.dt.year\n# Add month\ndf['month'] = df.date.dt.month_name().str[0:3]\n# Add weekday\ndf['day_of_week'] = df.date.dt.day_name()\n# Calculate the stock movement on a given day\ndf['pct_change_day'] = round((df.close \/ df.open - 1) * 100, 3)\n","ab27281b":"df.describe()","c19903f0":"# Use a group-by operation to calculate the pct_change mean \nstock_performance = df.groupby('stock').pct_change_day.mean() \n\n# Chose seaborn style\nsns.set_style(\"darkgrid\")\n# Use matplotlib and seaborn to plot a lineplot....\nplt.figure(figsize=(12,5))\nchart = sns.lineplot(x=stock_performance.index, y=stock_performance)\n_ = plt.xticks(rotation=45)\n","f172324e":"# Make lineplot for months...\n_ = sns.lineplot(data=df, x=\"month\", y=\"pct_change_day\")","63575065":"# Make lineplot for day of week...\n_ = sns.lineplot(data=df, x=\"day_of_week\", y=\"pct_change_day\")","3372efcc":"## Pre-Processing\n\nNow, let's enginere some date-related features and also add a column which shows the daily change percentage of the stock.","cc9ef926":"...interesing: historically, dow jones stocks increase by an average of 0.024 per cent a day (which is roughly 0.12 per cent \/ week and approx. 6 per cent per year).","b5845537":"# Dow Jones - Historic Stock Data (2000-2020) Analysis\n\nIn this Notebook we will have a quick look at the historic Dow Jones data-set, perform feature engineering and use plots to understand the results.\n","6d1a6653":"We can observe that the *CRM* stock (*Salesforce*) has the highest *mean* intra-day stock performance in this data-set (tnote that his company is rather young and historic performances should not be extrapolated into the future).\n\nNext, let us combine the *pct_change_day* feature with two of the other features we derived from the data-column (month and day-of-week).","862329c2":"## Plotting\n\nWe can also do some plotting to learn more about the data. \n\nFirst let us check the average stock movements per day.","1e366904":"From the plots above we can see that - *historically* - in June and September stocks dropped most, while in March and November stocks performed best. It is also interesting to see, that in *average* stocks increased every day of the week, except friday.\n\n\n## What did we learn ?\n- Understand which kind of information is included in this data set\n- How to easilly engineer some additional features\n- Use a plot to get an understanding of the different stock performances\n- Plot some of the newly created features to understand their value (month, day of week)\n\nThis was only a small example what can be done with the available data set - other features like *dividends*, *trading volume* and *stock splits* could be investigated as well...if you like, **have fun** and success with your own stock data analysis!","f4e1287a":"...as you can see, we have multiple interesting data columns (you can check the data set description for a detailled explanation of the columns): <https:\/\/www.kaggle.com\/deeplytics\/dow-stock-data>","d8da0533":"Now, let's check our data with pandas describe operation..."}}