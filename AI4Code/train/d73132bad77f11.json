{"cell_type":{"1f5d67bf":"code","d3c296ac":"code","a6e80942":"code","3b0c4377":"code","0d7b94f5":"code","2d36dbbb":"code","b645a311":"code","0bb162d1":"code","02ea11f4":"code","37615ea8":"markdown","2001751a":"markdown","ac31c9c6":"markdown","357e0932":"markdown","bd1f3a56":"markdown","96140d4f":"markdown"},"source":{"1f5d67bf":"import pandas as pd\nimport numpy as np\n\ntrain = pd.read_csv('\/kaggle\/input\/riiid-test-answer-prediction\/train.csv',\n                   dtype={'row_id': 'int64',\n                          'timestamp': 'int64',\n                          'user_id': 'int32',\n                          'content_id': 'int16',\n                          'content_type_id': 'int8',\n                          'task_container_id': 'int16',\n                          'user_answer': 'int8',\n                          'answered_correctly':'int8',\n                          'prior_question_elapsed_time': 'float32',\n                          'prior_question_had_explanation': 'boolean'}\n                   )","d3c296ac":"prior_question_elapsed_time = train.prior_question_elapsed_time.dropna()\nprior_question_elapsed_time.mean()","a6e80942":"total = np.zeros(1,dtype=np.float128)\nfor v in prior_question_elapsed_time:\n    total[0] += v\nprint(total[0]\/len(prior_question_elapsed_time))","3b0c4377":"prior_question_elapsed_time","0d7b94f5":"prior_question_elapsed_time.min(), prior_question_elapsed_time.max()","2d36dbbb":"prior_question_elapsed_time.astype('float64').mean()","b645a311":"prior_question_elapsed_time.values","0bb162d1":"prior_question_elapsed_time.values.mean()","02ea11f4":"for i in range(9):\n    target_data = prior_question_elapsed_time[:10**i]\n    diff = target_data.astype('float64').mean() - target_data.mean()\n    print(f'{i} {abs(diff):.4f}')","37615ea8":"Even min and max are ok with float32, pandas series mean() returned wrong. \nIf we use float64, it looks OK.","2001751a":"Is this result correct?\n### **No, the actual average is twice as high as this result!\u3000\u5de5\uff74\uff74\uff6a\uff6a \u03a3\u201d(\u2699\u264a\u2699\uff89)\uff89 \uff6a\uff6a\uff74\uff74\u5de5\u203c","ac31c9c6":"I don't know the detail, but this problem happens baddly especially when the data is large.\nMay be it happens when the `sum` overflows flot32.","357e0932":"numpy.mean() looks OK too even with float32.","bd1f3a56":"**prior_question_elapsed_time.mean() is wrong!!!**","96140d4f":"So we need to be carefull with pandas mean(). The results of this experiment are:\n<pre>\n.mean() with float32 is NG\n.mean() with float64 is OK\n.values.mean() OK (you need to dropna beforehand for np.mean)\n<\/pre>"}}