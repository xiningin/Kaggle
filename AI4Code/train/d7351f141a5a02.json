{"cell_type":{"8a694e76":"code","195760d1":"code","9ea4323a":"code","e1f9b82c":"code","28b22951":"code","57641848":"code","1fc7932a":"code","4044969b":"code","fcc66733":"code","5b62fb90":"code","a47058a5":"code","15f86cd2":"code","92a3dc74":"code","d4b533d6":"code","d3e80a36":"code","59a032a5":"markdown","8e40bac2":"markdown","d250122e":"markdown","65fd00ae":"markdown","fecc688e":"markdown","e4ea7c42":"markdown","a5f19e6a":"markdown","4fec3b6e":"markdown","4c7c7adc":"markdown"},"source":{"8a694e76":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","195760d1":"import matplotlib.pyplot as plt\nimport seaborn as sns","9ea4323a":"import re\ndef extract_number(string_value):\n    if string_value:\n        extracted_num_list = re.findall('[1-9]\\d*[\\.\\d*]*', string_value)\n        return float(extracted_num_list[0])\n    return 0","e1f9b82c":"def preprocess_no_of_stu_enrolled(cell):\n    if \"k\" in cell:\n        num = extract_number(cell)*1000\n        return num\n    elif \"m\" in cell:\n        num = extract_number(cell) * 1000000\n        return num","28b22951":"coursera_data = pd.read_csv('\/kaggle\/input\/coursera-course-dataset\/coursea_data.csv')\ncoursera_data.describe()","57641848":"coursera_data.head()","1fc7932a":"coursera_data.columns","4044969b":"coursera_data.isnull().any()","fcc66733":"coursera_data['course_students_enrolled'] = coursera_data['course_students_enrolled'].apply(lambda x: preprocess_no_of_stu_enrolled(x))","5b62fb90":"coursera_data.head()","a47058a5":"coursera_data.describe()","15f86cd2":"top_5_courses = coursera_data.nlargest(5,'course_students_enrolled')\ntop_5_courses.head()","92a3dc74":"plt.figure(figsize=(10,8))\nax = sns.barplot(x='course_title', y='course_students_enrolled', data=top_5_courses)\nax.set_xticklabels(ax.get_xticklabels(), rotation=50, ha=\"right\")\nax.set_xlabel('Course title')\nax.set_ylabel('No. of students enrolled')\nax.set_title('Top 5 courses')\nplt.show()","d4b533d6":"total_courses = pd.DataFrame(coursera_data['course_difficulty'].value_counts())\ntotal_courses.plot.pie(y='course_difficulty',figsize=(10,10),autopct='%1.1f%%',\n                       title='No. of courses based on course difficulty', legend=False)","d3e80a36":"top_organization = pd.DataFrame(coursera_data['course_organization'].value_counts()).nlargest(5,'course_organization')\ntop_organization.plot.pie(y='course_organization',figsize=(10,10),autopct='%1.1f%%',\n                       title='Top 5 contributing organizations', legend=False)","59a032a5":"regex function for finding numbers","8e40bac2":"Check for any missing values","d250122e":"Find the top 5 most enrolled courses","65fd00ae":"Find the total number of courses available in coursera based on the course difficulty \nand visuallize it in a pie chart","fecc688e":"import required packages","e4ea7c42":"Find the top 5 organizations contributing courses in coursera platform","a5f19e6a":"Visualize the top 5 courses using bar graph","4fec3b6e":"Convert 'course_students_enrolled' column to float type","4c7c7adc":"Read the input data and get statistical info about that data"}}