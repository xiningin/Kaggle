{"cell_type":{"55b0e622":"code","202dea5f":"code","bb0071b7":"code","13bdd549":"code","9f485501":"code","ecda26a4":"code","f6a356ab":"code","9cf109fd":"code","fd5edacf":"code","be27da9d":"code","4296af83":"code","46f09d0e":"code","09462ad3":"markdown","aacd1837":"markdown","4edd9063":"markdown","7ca8e865":"markdown","ddfb00da":"markdown"},"source":{"55b0e622":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n### Graphic libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nfrom fastai.tabular.all import *\nimport numpy as np\nimport pandas as pd\nfrom pathlib import Path\n\npath = Path('..\/input\/tabular-playground-series-jan-2021')","202dea5f":"train_df = pd.read_csv(path\/'train.csv')\ntrain_df.pop('id')\ntrain_df_len = len(train_df)\n\ntest_df = pd.read_csv(path\/'test.csv')\ntest_ID_codes_df = test_df.pop('id')","bb0071b7":"# valid_idx = range(round(0.99*train_df_len), train_df_len)\n# data: DataBunch = TabularDataBunch.from_df(path, train_df, dep_var='target', valid_idx=valid_idx, test_df=test_df)\n# learn = tabular_learner(data, layers=[200,100], metrics=accuracy, path='.')\n","13bdd549":"!pip install pytorch-tabnet\nimport pandas as pd\nimport numpy  as np\nfrom pytorch_tabnet.tab_model import TabNetRegressor\nfrom sklearn.model_selection import KFold","9f485501":"# model = TabNetRegressor(n_d=16,\n#                        n_a=16,\n#                        n_steps=4,\n#                        gamma=1.9,\n#                        n_independent=4,\n#                        n_shared=5,\n#                        seed=seed,\n#                        optimizer_fn = torch.optim.Adam,\n#                        scheduler_params = {\"milestones\": [150,250,300,350,400,450],'gamma':0.2},\n#                        scheduler_fn=torch.optim.lr_scheduler.MultiStepLR)","ecda26a4":"train_data = pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/train.csv')\ntest_data  = pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/test.csv')\nsample     = pd.read_csv('..\/input\/tabular-playground-series-jan-2021\/sample_submission.csv')\n# solution   = pd.read_csv('..\/input\/house-prices-advanced-regression-solution-file\/solution.csv')","f6a356ab":"features = train_data.columns[1:-1]","9cf109fd":"X      = train_data[features]\ny      = np.log1p(train_data[\"target\"])\nX_test = test_data[features]\n# y_true = solution[\"SalePrice\"]","fd5edacf":"# X      =      X.apply(lambda x: x.fillna(x.mean()),axis=0)\n# X_test = X_test.apply(lambda x: x.fillna(x.mean()),axis=0)","be27da9d":"X      = X.to_numpy()\ny      = y.to_numpy().reshape(-1, 1)\nX_test = X_test.to_numpy()","4296af83":"kf = KFold(n_splits=5, random_state=42, shuffle=True)\npredictions_array =[]\nCV_score_array    =[]\nfor train_index, test_index in kf.split(X):\n    X_train, X_valid = X[train_index], X[test_index]\n    y_train, y_valid = y[train_index], y[test_index]\n    regressor = TabNetRegressor(verbose=1,seed=42)\n    regressor.fit(X_train=X_train, y_train=y_train,\n              eval_set=[(X_valid, y_valid)],\n              patience=1, max_epochs=2,\n              eval_metric=['rmse'])\n    CV_score_array.append(regressor.best_cost)\n    predictions_array.append(np.expm1(regressor.predict(X_test)))\n\npredictions = np.mean(predictions_array,axis=0)","46f09d0e":"print(\"The CV score is %.5f\" % np.mean(CV_score_array,axis=0) )","09462ad3":"## CV score","aacd1837":"## Train","4edd9063":"## Libraries","7ca8e865":"## Reading data","ddfb00da":"## Import TabNet"}}