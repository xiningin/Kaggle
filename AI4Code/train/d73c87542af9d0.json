{"cell_type":{"a7041970":"code","bd83c9c8":"code","a03534e0":"code","930205e4":"code","89486de7":"code","66240628":"code","fb95afb3":"code","1e50bcbd":"markdown","7e1981d8":"markdown","a6697e58":"markdown","97a86b65":"markdown","3f3c89b6":"markdown"},"source":{"a7041970":"import pandas as pd\nimport numpy as np\nimport re\nimport os\nimport gc\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.pipeline import Pipeline\nfrom scipy.stats import uniform, truncnorm, randint","bd83c9c8":"df = pd.read_csv(\"..\/input\/commonlitreadabilityprize\/train.csv\")\ndf.head()","a03534e0":"%%time\n\ntfidf = TfidfVectorizer(stop_words='english')\nrfr = RandomForestRegressor(criterion='mae')\npipe = Pipeline([('tfidf', tfidf), ('rfr', rfr)])\ndistributions = {'tfidf__max_df': uniform(.9, .05),\n                 'tfidf__min_df': uniform(0.02, .1),\n                 'tfidf__max_features': randint(100,5000),\n                 'tfidf__ngram_range': [(1,1),(1,2),(1,3)],\n                 'rfr__n_estimators': randint(5,500),\n                 'rfr__max_depth': randint(1,8)}\nreg = RandomizedSearchCV(pipe, distributions, random_state=0, n_iter=40, cv=5, \n                         scoring='neg_mean_absolute_error', n_jobs=-1, verbose=1)\nsearch = reg.fit(df['excerpt'], df['target']) # best model is search.best_estimator_","930205e4":"dft = pd.read_csv(\"..\/input\/commonlitreadabilityprize\/test.csv\")\ndft.head()","89486de7":"target = search.best_estimator_.predict(dft['excerpt'])","66240628":"dft['target'] = target\ndft.head()","fb95afb3":"dft[['id','target']].to_csv(\"submission.csv\", index=False)","1e50bcbd":"# CommonLit Random Forest Naive Baseline\n\n- I call this a \"naive\" baseline because it makes no target distribution assumptions, hyperparameter tuning is brief and simple, algorithm select is selected due to its ease to implement and power, etc.  ","7e1981d8":"# Load Data","a6697e58":"# Inference","97a86b65":"# Imports","3f3c89b6":"# Train"}}