{"cell_type":{"01126b8a":"code","4be6bf60":"code","7827aa79":"code","9014b946":"code","da7fce8c":"code","8c71444a":"code","c404eebd":"code","b0356bc0":"code","1326c5c1":"code","4934d3aa":"code","86641945":"code","777527d8":"code","0ecc5edf":"code","d1cfd4b3":"code","1b206537":"code","dc9f6a0e":"code","ac6932c4":"code","4832c288":"code","5181087a":"code","a39d894d":"code","ed939fbf":"code","7beae492":"code","0525a0b1":"code","ea66072f":"code","c92bd54e":"code","2b358e17":"code","e42d8083":"code","9289371d":"code","747271d6":"code","2209a1a4":"code","140bcf0e":"code","ef959e14":"code","c1ebfbd8":"code","db65f894":"code","34193cc3":"code","2e5ccda8":"code","ffa5c9a1":"code","8cc13939":"code","1f15af8f":"code","0593fef0":"code","f7f316bf":"code","21ebaafa":"code","959b7f91":"code","e2d23913":"code","93420e35":"code","112385c4":"code","d63ebe67":"code","c988ea94":"code","e1d16675":"code","7d747e9b":"code","92797b87":"code","8fac3d77":"code","50668dea":"code","70d3bf3c":"code","fe73fec2":"code","1e1dcd6b":"code","ec870e37":"code","8b2bf5d4":"code","0a71bbc2":"code","1801a9e6":"code","00713051":"code","dcf295df":"markdown","474048c2":"markdown","e1e5d2b6":"markdown","5b523360":"markdown","21288129":"markdown","2e815e38":"markdown","2c9f59f2":"markdown","294ee0ca":"markdown","bc1f1b57":"markdown","9368dd46":"markdown","6ed0a47d":"markdown","1a326e17":"markdown","8b773d98":"markdown"},"source":{"01126b8a":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nfrom sklearn.preprocessing import normalize\n\nimport os\nprint(os.listdir(\"..\/input\/learn-together\/\"))","4be6bf60":"data = pd.read_csv('..\/input\/learn-together\/train.csv')","7827aa79":"data.head()","9014b946":"data.columns","da7fce8c":"data_group = data.Cover_Type.value_counts().reset_index()\n\n\nsns.barplot( y = 'Cover_Type', x = 'index', data = data_group, color=\"blue\")\n\ntitle_name = \"Count\"\nxlabel_name = \"Cover_Type\"\nylabel_name = \"Count\"\n\nfig=plt.gcf()\nfig.set_size_inches(15,10)\n\nplt.tick_params(labelsize=14)\nplt.title(title_name,fontsize = 20)\nplt.xlabel(xlabel_name,fontsize = 20)\nplt.ylabel(ylabel_name,fontsize = 20)\nplt.xticks(rotation=90)","8c71444a":"data_group","c404eebd":"fillColor = \"#FFA07A\"\nfillColor2 = \"#F1C40F\"\n\nsns.distplot(data.Elevation,kde = False, color = fillColor2)\n\ntitle_name = \"Elevation Distribution\"\nxlabel_name = \"Elevation\"\nylabel_name = \"Count\"\n\nfig=plt.gcf()\nfig.set_size_inches(15,10)\n\nplt.tick_params(labelsize=14)\nplt.title(title_name,fontsize = 20)\nplt.xlabel(xlabel_name,fontsize = 20)\nplt.ylabel(ylabel_name,fontsize = 20)","b0356bc0":"data.Elevation.describe()","1326c5c1":"data_group = data.groupby('Cover_Type').Elevation.median().reset_index().sort_values( by = 'Elevation',ascending = False)\ndata_group","4934d3aa":"sns.barplot( y = 'Elevation', x = 'Cover_Type', data = data_group, color=\"red\")\n\ntitle_name = \"Cover Type and Median Elevation\"\nylabel_name = \"Elevation\"\nxlabel_name = \"Cover Type\"\n\nfig=plt.gcf()\nfig.set_size_inches(15,10)\n\nplt.tick_params(labelsize=14)\nplt.title(title_name,fontsize = 20)\nplt.xlabel(xlabel_name,fontsize = 20)\nplt.ylabel(ylabel_name,fontsize = 20)","86641945":"data.Horizontal_Distance_To_Hydrology.describe()","777527d8":"data_group = data.groupby('Cover_Type').Horizontal_Distance_To_Hydrology.median().reset_index(). \\\nsort_values( by = 'Horizontal_Distance_To_Hydrology',ascending = False)\n\ndata_group","0ecc5edf":"sns.barplot( y = 'Horizontal_Distance_To_Hydrology', x = 'Cover_Type', data = data_group, color= fillColor2)\n\ntitle_name = \"Cover Type and Median Horizontal Distance To Hydrology\"\nylabel_name = \"Horizontal Distance To Hydrology\"\nxlabel_name = \"Cover Type\"\n\nfig=plt.gcf()\nfig.set_size_inches(15,10)\n\nplt.tick_params(labelsize=14)\nplt.title(title_name,fontsize = 20)\nplt.xlabel(xlabel_name,fontsize = 20)\nplt.ylabel(ylabel_name,fontsize = 20)","d1cfd4b3":"features = ['Soil_Type1', 'Soil_Type2', 'Soil_Type3',\n       'Soil_Type4', 'Soil_Type5', 'Soil_Type6', 'Soil_Type7', 'Soil_Type8',\n       'Soil_Type9', 'Soil_Type10', 'Soil_Type11', 'Soil_Type12',\n       'Soil_Type13', 'Soil_Type14', 'Soil_Type15', 'Soil_Type16',\n       'Soil_Type17', 'Soil_Type18', 'Soil_Type19', 'Soil_Type20',\n       'Soil_Type21', 'Soil_Type22', 'Soil_Type23', 'Soil_Type24',\n       'Soil_Type25', 'Soil_Type26', 'Soil_Type27', 'Soil_Type28',\n       'Soil_Type29', 'Soil_Type30', 'Soil_Type31', 'Soil_Type32',\n       'Soil_Type33', 'Soil_Type34', 'Soil_Type35', 'Soil_Type36',\n       'Soil_Type37', 'Soil_Type38', 'Soil_Type39', 'Soil_Type40']","1b206537":"data[features].dtypes","dc9f6a0e":"features = [ 'Wilderness_Area1', 'Wilderness_Area2', 'Wilderness_Area3',\n       'Wilderness_Area4']","ac6932c4":"data[features].dtypes","4832c288":"data.Vertical_Distance_To_Hydrology.describe()","5181087a":"data_group = data.groupby('Cover_Type').Vertical_Distance_To_Hydrology.median().reset_index(). \\\nsort_values( by = 'Vertical_Distance_To_Hydrology',ascending = False)\n\ndata_group","a39d894d":"sns.barplot( y = 'Vertical_Distance_To_Hydrology', x = 'Cover_Type', data = data_group, color= 'blue')\n\ntitle_name = \"Cover Type and Median Vertical Distance To Hydrology\"\nylabel_name = \"Vertical Distance To Hydrology\"\nxlabel_name = \"Cover Type\"\n\nfig=plt.gcf()\nfig.set_size_inches(15,10)\n\nplt.tick_params(labelsize=14)\nplt.title(title_name,fontsize = 20)\nplt.xlabel(xlabel_name,fontsize = 20)\nplt.ylabel(ylabel_name,fontsize = 20)","ed939fbf":"data.Horizontal_Distance_To_Roadways.describe()","7beae492":"data_group = data.groupby('Cover_Type').Horizontal_Distance_To_Roadways.median().reset_index(). \\\nsort_values( by = 'Horizontal_Distance_To_Roadways',ascending = False)\n\ndata_group","0525a0b1":"sns.barplot( y = 'Horizontal_Distance_To_Roadways', x = 'Cover_Type', data = data_group, color= 'blue')\n\ntitle_name = \"Cover Type and Median Horizontal Distance To Roadways\"\nylabel_name = \"Horizontal Distance To Roadways\"\nxlabel_name = \"Cover Type\"\n\nfig=plt.gcf()\nfig.set_size_inches(15,10)\n\nplt.tick_params(labelsize=14)\nplt.title(title_name,fontsize = 20)\nplt.xlabel(xlabel_name,fontsize = 20)\nplt.ylabel(ylabel_name,fontsize = 20)","ea66072f":"features = data.columns","c92bd54e":"type(features)","2b358e17":"features =  features.drop(['Id','Cover_Type'])","e42d8083":"features","9289371d":"X = data[features]","747271d6":"y = data['Cover_Type']","2209a1a4":"from sklearn.model_selection import train_test_split\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 0)","140bcf0e":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn import metrics\n\nmodel = DecisionTreeClassifier()\n\nmodel.fit(train_X,train_y)\n\npredictions = model.predict(val_X)","ef959e14":"from sklearn.metrics import accuracy_score","c1ebfbd8":"accuracy_score(predictions,val_y)","db65f894":"from sklearn.ensemble import ExtraTreesClassifier","34193cc3":"model = ExtraTreesClassifier(n_estimators = 100)","2e5ccda8":"train_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 0)","ffa5c9a1":"model.fit(train_X,train_y)","8cc13939":"model","1f15af8f":"predictions = model.predict(val_X)","0593fef0":"accuracy_score(predictions,val_y)","f7f316bf":"test = pd.read_csv('..\/input\/learn-together\/test.csv')","21ebaafa":"test.head()","959b7f91":"features = test.columns","e2d23913":"features =  features.drop(['Id'])","93420e35":"features","112385c4":"model.fit(X,y)","d63ebe67":"predictions = model.predict(test[features])","c988ea94":"sub = pd.read_csv('..\/input\/learn-together\/sample_submission.csv')","e1d16675":"sub.head()","7d747e9b":"sub_df = pd.DataFrame()","92797b87":"sub_df[\"Id\"] = test[\"Id\"]","8fac3d77":"sub_df[\"Cover_Type\"] = predictions","50668dea":"sub_df.to_csv(\"Predictions03Sep2019.csv\",index=False)","70d3bf3c":"importances = model.feature_importances_\n\nindices = np.argsort(importances)[::-1]\n\nfor f in range(X.shape[1]):\n    print(\"%d. feature %s  (%f)\" % (f + 1, features[indices[f]], importances[indices[f]]))\n\nfeatures_df =  pd.DataFrame({'Feature':features[indices],'Importance':importances[indices]})\n\ndata_group  = features_df.head(10)\nsns.barplot( y = 'Feature', x = 'Importance', data = data_group, color= 'blue')\n\ntitle_name = \"Extra Trees Classifier\"\nylabel_name = \"Features\"\nxlabel_name = \"Importance\"\n\nfig=plt.gcf()\nfig.set_size_inches(15,10)\n\nplt.tick_params(labelsize=14)\nplt.title(title_name,fontsize = 20)\nplt.xlabel(xlabel_name,fontsize = 20)\nplt.ylabel(ylabel_name,fontsize = 20)","fe73fec2":"#https:\/\/www.kaggle.com\/codename007\/forest-cover-type-eda-baseline-model\n\n####################### data data #############################################\ndata['HF1'] = data['Horizontal_Distance_To_Hydrology']+data['Horizontal_Distance_To_Fire_Points']\ndata['HF2'] = abs(data['Horizontal_Distance_To_Hydrology']-data['Horizontal_Distance_To_Fire_Points'])\ndata['HR1'] = abs(data['Horizontal_Distance_To_Hydrology']+data['Horizontal_Distance_To_Roadways'])\ndata['HR2'] = abs(data['Horizontal_Distance_To_Hydrology']-data['Horizontal_Distance_To_Roadways'])\ndata['FR1'] = abs(data['Horizontal_Distance_To_Fire_Points']+data['Horizontal_Distance_To_Roadways'])\ndata['FR2'] = abs(data['Horizontal_Distance_To_Fire_Points']-data['Horizontal_Distance_To_Roadways'])\n#data['ele_vert'] = data.Elevation-data.Vertical_Distance_To_Hydrology\n\ndata['slope_hyd'] = (data['Horizontal_Distance_To_Hydrology']**2+data['Vertical_Distance_To_Hydrology']**2)**0.5\ndata.slope_hyd=data.slope_hyd.map(lambda x: 0 if np.isinf(x) else x) # remove infinite value if any\n\n#Mean distance to Amenities \ndata['Mean_Amenities']=(data.Horizontal_Distance_To_Fire_Points + data.Horizontal_Distance_To_Hydrology + data.Horizontal_Distance_To_Roadways) \/ 3 \n#Mean Distance to Fire and Water \ndata['Mean_Fire_Hyd']=(data.Horizontal_Distance_To_Fire_Points + data.Horizontal_Distance_To_Hydrology) \/ 2 \n\n####################### Test data #############################################\ntest['HF1'] = test['Horizontal_Distance_To_Hydrology']+test['Horizontal_Distance_To_Fire_Points']\ntest['HF2'] = abs(test['Horizontal_Distance_To_Hydrology']-test['Horizontal_Distance_To_Fire_Points'])\ntest['HR1'] = abs(test['Horizontal_Distance_To_Hydrology']+test['Horizontal_Distance_To_Roadways'])\ntest['HR2'] = abs(test['Horizontal_Distance_To_Hydrology']-test['Horizontal_Distance_To_Roadways'])\ntest['FR1'] = abs(test['Horizontal_Distance_To_Fire_Points']+test['Horizontal_Distance_To_Roadways'])\ntest['FR2'] = abs(test['Horizontal_Distance_To_Fire_Points']-test['Horizontal_Distance_To_Roadways'])\n#test['ele_vert'] = test.Elevation-test.Vertical_Distance_To_Hydrology\n\ntest['slope_hyd'] = (test['Horizontal_Distance_To_Hydrology']**2+test['Vertical_Distance_To_Hydrology']**2)**0.5\ntest.slope_hyd=test.slope_hyd.map(lambda x: 0 if np.isinf(x) else x) # remove infinite value if any\n\n#Mean distance to Amenities \ntest['Mean_Amenities']=(test.Horizontal_Distance_To_Fire_Points + test.Horizontal_Distance_To_Hydrology + test.Horizontal_Distance_To_Roadways) \/ 3 \n#Mean Distance to Fire and Water \ntest['Mean_Fire_Hyd']=(test.Horizontal_Distance_To_Fire_Points + test.Horizontal_Distance_To_Hydrology) \/ 2","1e1dcd6b":"features = data.columns","ec870e37":"features =  features.drop(['Id','Cover_Type'])","8b2bf5d4":"features","0a71bbc2":"X = data[features]\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 0)\nmodel.fit(train_X,train_y)\n\nimportances = model.feature_importances_\n\nindices = np.argsort(importances)[::-1]\n\nfeatures_df =  pd.DataFrame({'Feature':features[indices],'Importance':importances[indices]})\n\ndata_group  = features_df.head(10)\nsns.barplot( y = 'Feature', x = 'Importance', data = data_group, color= 'blue')\n\ntitle_name = \"Extra Trees Classifier\"\nylabel_name = \"Features\"\nxlabel_name = \"Importance\"\n\nfig=plt.gcf()\nfig.set_size_inches(10,10)\n\nplt.tick_params(labelsize=14)\nplt.title(title_name,fontsize = 20)\nplt.xlabel(xlabel_name,fontsize = 20)\nplt.ylabel(ylabel_name,fontsize = 20)","1801a9e6":"predictions = model.predict(test[features])","00713051":"sub_df[\"Cover_Type\"] = predictions\n\nsub_df.to_csv(\"Predictions07Sep2019-1.csv\",index=False)","dcf295df":"# Cover Type and Median Elevation","474048c2":"# Model","e1e5d2b6":"## ExtraTrees Classifier","5b523360":"# Distribution of Elevation","21288129":"#  Vertical Distance To Hydrology","2e815e38":"# Feature Engineering","2c9f59f2":"# Wilderness Area Analysis","294ee0ca":"## DecisionTree Classifier","bc1f1b57":"# Horizontal Distance To Roadways","9368dd46":"### Feature Importance of Extra Trees Classifier","6ed0a47d":"# Cover Type","1a326e17":"# Soil Types Data Analysis","8b773d98":"# Horizontal_Distance_To_Hydrology"}}