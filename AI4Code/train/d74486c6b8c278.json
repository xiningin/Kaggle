{"cell_type":{"7329215e":"code","05203f00":"code","6216c08a":"code","0e62be5f":"code","1fb77e67":"code","204b30c8":"code","20f80819":"code","216afc7f":"code","6c82d638":"markdown","cd92e06a":"markdown","0517ad82":"markdown","f13c3a63":"markdown","c6bcac6e":"markdown","57bc521c":"markdown","f1d94377":"markdown","fbc8c144":"markdown"},"source":{"7329215e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","05203f00":"train = pd.read_csv('\/kaggle\/input\/cat-in-the-dat-ii\/train.csv')\ntrain.columns","6216c08a":"df = train[['month','day']].copy()","0e62be5f":"print('Unique values of month:',df.month.unique())\nprint('Unique values of day:',df.day.unique())","1fb77e67":"for column in df.columns:\n    df[column].fillna(df[column].mode()[0], inplace=True)","204b30c8":"print('Unique values of month:',df.month.unique())\nprint('Unique values of day:',df.day.unique())","20f80819":"import numpy as np\n\ndf['day_sin'] = np.sin(df.day*(2.*np.pi\/7))\ndf['day_cos'] = np.cos(df.day*(2.*np.pi\/7))\ndf['month_sin'] = np.sin((df.month-1)*(2.*np.pi\/12))\ndf['month_cos'] = np.cos((df.month-1)*(2.*np.pi\/12))","216afc7f":"print(df.head(10))","6c82d638":"**What is Cyclic data??**\n\nData which has a unique set of values which repeat in a cycle are known as cyclic data. Time related features  are mainly cyclic in nature. For example, months of a year, day of a week, hours of time, minutes of time etc..These features have a set of values and all the observations will have a value from this set only. In many ML problems we encounter such features. But most of us ignore it. I suggest to handle them separately as handling such features properly have proved to help in improvement of the accuracy. Let us see how to handle them.  ","cd92e06a":"Here month and day are cyclic. Lets handle them\n","0517ad82":"**The logic**\n\n We map each cyclical variable onto a circle such that the lowest value for that variable appears right next to the largest value. We compute the x- and y- component of that point using sin and cos trigonometric functions.\n \n For handling month we consider them from 0-11 and refer the below figure. ","f13c3a63":"Go on and implement this in your codes.\n\n[Reference](http:\/\/blog.davidkaleko.com\/feature-engineering-cyclical-features.html)","c6bcac6e":"So we see no nan is present now.\n\nAlso, we can understand that month is from 1-12\nAnd day is weekday from 1-7\n\nThese are cyclic data.\n\nLet us handle them now.","57bc521c":"# **Handling Cyclic Data **","f1d94377":"![i](https:\/\/i.ibb.co\/hF8yWhT\/cyclic.png)","fbc8c144":"Lets first handle na. We will replace them with mode."}}