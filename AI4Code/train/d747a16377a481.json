{"cell_type":{"ca42e71d":"code","2ede41b8":"code","e1529ce4":"code","5af6b212":"code","f102e9a5":"code","6da2e744":"code","25b5afca":"code","f061f7e5":"code","921b83a0":"code","157e4055":"code","200e63bf":"code","d7021318":"code","392d1790":"code","3ea9e94e":"code","e501f935":"code","d9ceb1b4":"code","3036f42d":"code","c1676bb3":"code","c52b81ee":"code","22a4579e":"code","32a249b1":"code","be47cad1":"code","b9f4d234":"code","8c62a66f":"code","5bb6b072":"code","8c3f9afd":"code","d88ffc35":"code","11dab1ca":"code","223afcfb":"code","05487334":"code","5b5ef757":"code","4d2c5992":"code","1157bdb6":"code","e37b7e5f":"code","c6625dbe":"code","00f59ba3":"code","fa74220a":"code","bc35a8b0":"code","0aa100c0":"code","0bf6c9c7":"code","d523a00b":"code","11d11aea":"code","0815b70a":"markdown","a3ad92aa":"markdown","f09d78c8":"markdown","ac65ac5c":"markdown","aad49fe6":"markdown","e43090e7":"markdown","55831e6b":"markdown","b8574503":"markdown","d067be61":"markdown","f2f192e0":"markdown","496dce72":"markdown","69e0b95e":"markdown","e7d3494d":"markdown","3f9d0219":"markdown","2f20dbf3":"markdown","fcab4716":"markdown","39a26f20":"markdown"},"source":{"ca42e71d":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.preprocessing import Imputer\nfrom sklearn.preprocessing import LabelEncoder\nfrom bokeh.io import output_file,show,output_notebook,push_notebook\nfrom bokeh.plotting import figure\nfrom bokeh.models import ColumnDataSource,HoverTool,CategoricalColorMapper\nfrom bokeh.layouts import row,column,gridplot\nfrom bokeh.models.widgets import Tabs,Panel\noutput_notebook()\nimport matplotlib.pyplot as plt\nimport os\nprint(os.listdir(\"..\/input\"))\nimport warnings\nwarnings.filterwarnings(\"ignore\")","2ede41b8":"#read dataset for all analysis and visualization\ndata=pd.read_csv('..\/input\/googleplaystore.csv')","e1529ce4":"#show first five rows in data set\ndata.head()","5af6b212":"data.sample(5)","f102e9a5":"#show last five rows in dataset\ndata.tail()","6da2e744":"#it is a process that shows the property value in the data set and shows the numbers in the register values.\ndata.info()","25b5afca":"#It is a function that shows the analysis of numerical values.\ndata.describe()","f061f7e5":"#It shows the data types in the data set\ndata.dtypes","921b83a0":"data.Size=data.Size.replace('Varies with device',np.nan)\ndata.Size=data.Size.str.replace('M','000')\ndata.Size=data.Size.str.replace('k','')\ndata.Size=data.Size.replace('1,000+',1000)\n\ndata.Installs=data.Installs.str.replace(\",\",\"\")\ndata.Installs=data.Installs.apply(lambda x:x.strip('+'))\ndata.Installs=data.Installs.replace('Free',np.nan)\ndata.Price=data.Price.str.replace('$','')\ndata=data.drop(data.index[10472])\ndata[['Size','Installs','Reviews','Price']]=data[['Size','Installs','Reviews','Price']].astype(float)","157e4055":"data.info()","200e63bf":"#It is a function that shows the analysis of proximity values between data.\ndata.corr()","d7021318":"#show data columns\nfor col in data.columns:\n    print(col)","392d1790":"#I will apply to rename data columns because of analysis of problem\ndata=data.rename(columns={'Content Rating':'ContentRating',\n                    'Last Updated':'LastUpdated',\n                    'Current Ver':'CurrentVer',\n                    'Android Ver':'AndroidVer'})","3ea9e94e":"#show columns\nfor i,col in enumerate(data.columns):\n    print(i+1,\". column is\",col)","e501f935":"#random data\ndata.sample(4)","d9ceb1b4":"f,ax=plt.subplots(figsize=(8,8))\nsns.heatmap(data.corr(),annot=True,linewidths=.5,fmt='.3f',ax=ax)\nplt.show()","3036f42d":"#the total number of vacancies between our values\ndata.isnull().sum()\n#Reviews,Size,Type,Current Ver,Android Ver some nulls","c1676bb3":"im=Imputer(missing_values='NaN', strategy='mean')\ndata[['Rating','Size']]=im.fit_transform(data[['Rating','Size']])","c52b81ee":"data.isnull().sum()","22a4579e":"data[(data['Type']!='Free')&(data['Type']!='Paid')]","32a249b1":"data[data['CurrentVer'].isnull()]","be47cad1":"data[data['AndroidVer'].isnull()]","b9f4d234":"#show drop index\ndata=data.drop([9148,15,4453,4490,1553,10342,7730,7407,7333,6803,6322],axis=0)","8c62a66f":"#show data rows and columns\ndata.shape","5bb6b072":"data.isnull().sum()\n#As you can see, if there is an empty value in any way.","8c3f9afd":"data.Category.value_counts()\n#There are many different categories. These categories are composed of many numbers.","d88ffc35":"data.Type.unique()","11dab1ca":"plot = figure(x_axis_label = \"x\",y_axis_label = \"y\",tools = \"pan,box_zoom\")\nplot.circle(x=[5,4,3,2,1],y=[1,2,3,4,5],size = 5,color = \"black\",alpha = 0.7)\noutput_file(\"my_first_bokeh_plot.html\")\nshow(plot)","223afcfb":"# There are other types of glyphs\nplot = figure()\nplot.diamond(x=[5,4,3,2,1],y=[1,2,3,4,5],size = 10,color = \"black\",alpha = 0.7)\nplot.cross(x=[1,2,3,4,5],y=[1,2,3,4,5],size = 10,color = \"red\",alpha = 0.7)\nshow(plot)","05487334":"plot = figure()\nplot.line(x=[1,2,3,4,5,6,7],y = [1,2,3,4,5,5,5],line_width = 2)\nplot.circle(x=[1,2,3,4,5,6,7],y = [1,2,3,4,5,5,5],fill_color = \"white\",size = 10)\nshow(plot)","5b5ef757":"plot = figure()\nplot.patches(xs = [[1,1,2,2],[2,2,3,3]],ys = [[1,2,1,2],[1,2,1,2]],fill_color = [\"purple\",\"red\"],line_color = [\"black\",\"black\"])\nshow(plot)","4d2c5992":"source = ColumnDataSource(data)\nplot = figure()\nplot.circle(x=\"Size\",y=\"Rating\",source = source)\nshow(plot)","1157bdb6":"plot = figure(tools=\"box_select,lasso_select\")\nplot.circle(y= \"Rating\",x = \"Reviews\",source=source,color = \"black\",\n            selection_color = \"orange\",\n            nonselection_fill_alpha = 0.2,\n           nonselection_fill_color = \"blue\")\nshow(plot)","e37b7e5f":"# Hover appearance\nhover = HoverTool(tooltips = [(\"Genre of game\",\"@Genre\"),(\"Publisher of game\",\"@Publisher\")], mode=\"hline\")\nplot = figure(tools=[hover,\"crosshair\"])\nplot.circle(x= \"Rating\",y = \"Size\",source=source,color =\"black\",hover_color =\"red\")\nshow(plot)","c6625dbe":"# Color mapping\nfactors = list(data.Category.unique()) # what we want to color map. I choose genre of games\ncolors = [\"red\",\"green\",\"blue\",\"black\",\"orange\",\"brown\",\"grey\",\"purple\",\"yellow\",\"white\",\"pink\",\"peru\"]\nmapper = CategoricalColorMapper(factors = factors,palette = colors)\nplot=figure()\nplot.circle(x= \"Rating\",y = \"Size\",source=source,color = {\"field\":\"Category\",\"transform\":mapper})\nshow(plot)\n# plot looks like confusing but I think you got the idea of mapping ","00f59ba3":"# Row and column\np1 = figure()\np1.circle(x = \"Reviews\",y= \"Rating\",source = source,color=\"red\")\np2 = figure()\np2.circle(x = \"Reviews\",y= \"Reviews\",source = source,color=\"black\")\np3 = figure()\np3.circle(x = \"Reviews\",y= \"Size\",source = source,color=\"blue\")\np4 = figure()\np4.circle(x = \"Reviews\",y= \"Installs\",source = source,color=\"orange\")\nlayout1 = row(p1,p2)\nlayout2 = row(p3,p4)\nlayout3= column(layout1,layout2)\nshow(layout3)","fa74220a":"layout = row(column(p1,p2),p3)\nshow(layout)","bc35a8b0":"#Tabbed layout\n#I use p1 and p2 that are created at above\ntab1 = Panel(child = p1,title = \"Reviews\")\ntab2 = Panel(child = p2,title = \"Ratings\")\ntabs = Tabs(tabs=[tab1,tab2])\nshow(tabs)","0aa100c0":"# linking axis\n# We will use p1 and p2 that are created at above\np2.x_range = p1.x_range\np2.y_range = p1.y_range\nlayout4=column(p1,p2)\nshow(layout4)","0bf6c9c7":"def make_plot(title, hist, edges, x, pdf, cdf):\n    p = figure(title=title, tools='', background_fill_color=\"#fafafa\")\n    p.quad(top=hist, bottom=0, left=edges[:-1], right=edges[1:],\n           fill_color=\"navy\", line_color=\"white\", alpha=0.5)\n    p.line(x, pdf, line_color=\"#ff8888\", line_width=4, alpha=0.7, legend=\"PDF\")\n    p.line(x, cdf, line_color=\"orange\", line_width=2, alpha=0.7, legend=\"CDF\")\n\n    p.y_range.start = 0\n    p.legend.location = \"center_right\"\n    p.legend.background_fill_color = \"#fefefe\"\n    p.xaxis.axis_label = 'x'\n    p.yaxis.axis_label = 'Pr(x)'\n    p.grid.grid_line_color=\"white\"\n    return p\n\n# Normal Distribution\n\nmu, sigma = 0, 0.5\n\nmeasured = np.random.normal(mu, sigma, 1000)\nhist, edges = np.histogram(measured, density=True, bins=50)\n\nx = np.linspace(-2, 2, 1000)\npdf = 1\/(sigma * np.sqrt(2*np.pi)) * np.exp(-(x-mu)**2 \/ (2*sigma**2))\ncdf = (1+scipy.special.erf((x-mu)\/np.sqrt(2*sigma**2)))\/2\n\np1 = make_plot(\"Normal Distribution (\u03bc=0, \u03c3=0.5)\", hist, edges, x, pdf, cdf)\n\n# Log-Normal Distribution\n\nmu, sigma = 0, 0.5\n\nmeasured = np.random.lognormal(mu, sigma, 1000)\nhist, edges = np.histogram(measured, density=True, bins=50)\n\nx = np.linspace(0.0001, 8.0, 1000)\npdf = 1\/(x* sigma * np.sqrt(2*np.pi)) * np.exp(-(np.log(x)-mu)**2 \/ (2*sigma**2))\ncdf = (1+scipy.special.erf((np.log(x)-mu)\/(np.sqrt(2)*sigma)))\/2\n\np2 = make_plot(\"Log Normal Distribution (\u03bc=0, \u03c3=0.5)\", hist, edges, x, pdf, cdf)\n\n# Gamma Distribution\n\nk, theta = 7.5, 1.0\n\nmeasured = np.random.gamma(k, theta, 1000)\nhist, edges = np.histogram(measured, density=True, bins=50)\n\nx = np.linspace(0.0001, 20.0, 1000)\npdf = x**(k-1) * np.exp(-x\/theta) \/ (theta**k * scipy.special.gamma(k))\ncdf = scipy.special.gammainc(k, x\/theta)\n\np3 = make_plot(\"Gamma Distribution (k=7.5, \u03b8=1)\", hist, edges, x, pdf, cdf)\n\n# Weibull Distribution\n\nlam, k = 1, 1.25\nmeasured = lam*(-np.log(np.random.uniform(0, 1, 1000)))**(1\/k)\nhist, edges = np.histogram(measured, density=True, bins=50)\n\nx = np.linspace(0.0001, 8, 1000)\npdf = (k\/lam)*(x\/lam)**(k-1) * np.exp(-(x\/lam)**k)\ncdf = 1 - np.exp(-(x\/lam)**k)\n\np4 = make_plot(\"Weibull Distribution (\u03bb=1, k=1.25)\", hist, edges, x, pdf, cdf)\n\noutput_file('histogram.html', title=\"histogram.py example\")\n\nshow(gridplot([p1,p2,p3,p4], ncols=2, plot_width=400, plot_height=400, toolbar_location=None))","d523a00b":"N = 500\nx = np.linspace(0, 10, N)\ny = np.linspace(0, 10, N)\nxx, yy = np.meshgrid(x, y)\nd = np.sin(xx)*np.cos(yy)\n\np = figure(x_range=(0, 10), y_range=(0, 10),\n           tooltips=[(\"x\", \"$x\"), (\"y\", \"$y\"), (\"value\", \"@image\")])\n\n# must give a vector of image data for image parameter\np.image(image=[d], x=0, y=0, dw=10, dh=10, palette=\"Spectral11\")\n\noutput_file(\"image.html\", title=\"image.py example\")\n\nshow(p)  # open a browser","11d11aea":"from bokeh.plotting import figure, show, output_file\nfrom bokeh.sampledata.iris import flowers\n\ncolormap = {'setosa': 'red', 'versicolor': 'green', 'virginica': 'blue'}\ncolors = [colormap[x] for x in flowers['species']]\n\np = figure(title = \"Iris Morphology\")\np.xaxis.axis_label = 'Petal Length'\np.yaxis.axis_label = 'Petal Width'\n\np.circle(flowers[\"petal_length\"], flowers[\"petal_width\"],\n         color=colors, fill_alpha=0.2, size=10)\n\noutput_file(\"iris.html\", title=\"iris.py example\")\n\nshow(p)","0815b70a":"> <p id='20'><b><h3>References<\/h3><\/b><\/p>","a3ad92aa":"<p id=6><h2><b>Additional Glyps<\/b><\/h2><\/p>\n<ul>\n    <li>line: line plot<\/li>\n    <ul>\n        <li>line_width: width of line<\/li>\n        <li>fill_color: filling inside of circle with color<\/li>\n    <\/ul>\n    <li>patches: multiple polynomial shapes at once on a plot<\/li>\n    <ul>\n        <li>fill_color: filling inside of patches<\/li>\n        <li>line_color: color of line around patches<\/li>\n    <\/ul>\n<\/ul>","f09d78c8":"<p id=7><b><h2>Customizing Glyphs<\/h2><\/b><\/p>\n<ul>\n    <li>Selection appearance: when you select some point on data, that points shine and others burn out<\/li>\n    <ul>\n        <li>tools<\/li>\n            <ul>\n                <li>box_select and lasso_select: selection tools<\/li>\n            <\/ul>\n            <li>selection_color: When you select point, it becomes selected color<\/li>\n            <li>nonselection_fill_alpha: Other non selected points become non selected alpha<\/li>\n            <li>nonselection_fill_color: Other non selected points become non selected color<\/li>\n    <\/ul>\n    <li>HoverTool: cursor<\/li>\n    <ul>\n        <li>Crosshair: line cursor<\/li>\n        <li>hover_color: Color of hover<\/li>\n    <\/ul>\n    <li>Color mapping: color map of chose field. (like hue in seaborn)<\/li>\n    <ul>\n        <li>actors: names of variable to color map<\/li>\n        <li>palette: color of chose factors<\/li>\n    <\/ul>\n<\/ul>","ac65ac5c":"<h1><b>Visualization Bokeh Tutorial<\/b><\/h1>\n\n<h3><b>Content<\/b><\/h3>\n<ul>\n    <a href='#1'><li>Introduction<\/li><\/a>\n    <a href='#2'><li>Import Library<\/li><\/a>\n    <a href='#3'><li>Data Exploratory Analysis<\/li><\/a>\n    <a href='#4'><li>Bokeh<\/li><\/a>\n        <ul>\n            <a href='#5'><li>Plotting with Glyphs<\/li><\/a>\n            <a href='#6'><li>Additional Glyps<\/li><\/a>\n            <a href='#7'><li>Customizing Glyphs<\/li><\/a>\n            <a href='#8'><li>Layouts<\/li><\/a>\n            <a href='#9'><li>Linking Plots<\/li><\/a>\n            <a href='#10'><li>Histogram<\/li><\/a>\n        <\/ul>\n   <a href='#20'><li>References<\/li><\/a>\n   <a href='#21'><li>Conclusion<\/li><\/a>\n<\/ul>\n\n<p>Last Updated: <b>07\/03\/2019<\/b><\/p>","aad49fe6":"<p id='10'><b><h3>Histogram<\/h3><\/b><\/p>","e43090e7":"<p id='1'><h3><b>Introduction<\/b><\/h3><\/p>","55831e6b":"<p>As a result, we have explained the seaborn library in a very detailed way and created a wide variety of graphs. If you like it, I expect your support. If you like <b>UPVOTED<\/b> I would be very happy if you do. If you have any questions, I am ready to answer your questions. At the bottom there are the kernel values that I have already done.<\/p>\n","b8574503":"<p id='5'><h2><b>Plotting with Glyphs<\/b><\/h2>\n<ul>\n    <li>Glyphs: visual shapes like circle, square, rectangle or diamond<\/li>\n    <li>figure: creates figure<\/li>\n    <ul>\n        <li>x_axis_label: label of x axis<\/li>\n        <li>y_axis_label: label of y axis<\/li>\n        <li>tools: tools to move or zoom plot<\/li>\n            <ul>\n                <li>pan: slides the plot<\/li>\n                <li>box_zoom: zoom in<\/li>\n            <\/ul>\n    <\/ul>\n    <li>circle: like scatter in matplotlib<\/li>\n    <ul>\n        <li>size: size of circles<\/li>\n        <li>color: color<\/li>\n        <li>alpha: opacity<\/li>\n    <\/ul>\n    <li>output_file: that save our figure with .html extension<\/li>\n    <li>show: show the figure<\/li>\n<\/ul>","d067be61":"<p id='21'><b><h3>Conclusion<\/h3><\/b><\/p>","f2f192e0":"<p id='4'><h3><b>Bokeh<\/b><\/h3><\/p>\n<p>Bokeh is a Python interactive visualization library that targets modern web browsers for presentation providing elegant, concise construction of novel graphics with high-performance interactivity over very large or streaming datasets in a quick and easy way.\n\nOffering both powerful and flexible features to enable very advanced customizations in one hand and simplicity on the other, Bokeh exposes different interface levels to the users:<\/p>\n<ul>\n    <li>a low-level bokeh.models interface that provides the most flexibility to application developers.<\/li>\n    <li>an intermediate-level bokeh.plotting interface that is centered around composing visual glyphs.<\/li>\n    <li>a high-level bokeh.charts interface that can be used to build complex statistical plots as quickly and as simply as possible.<\/li>\n<\/ul>","496dce72":"<p id='9'><b><h3>Linking Plots<\/h3><\/b><\/p>\n<p>Links plot together. For example, there are two plots and we zoom in one of them. Other one is zoomed automatically.<\/p>","69e0b95e":"<ul>\n    <li>Count : Shows the total number.<\/li>\n    <li>Mean  : Shows the average.<\/li>\n    <li>Std   :  Standard deviation value<\/li>\n    <li>Min   : Minimum value<\/li>\n    <li>%25   : First Quantile<\/li>\n    <li>%50   : Median or Second Quantile<\/li>\n    <li>%75   : Third Quantile<\/li>\n    <li>Max   : Maximum value<\/li>\n<\/ul>\n\n<p>What is quantile?<\/p>\n<ul>\n    <li>1,4,5,6,7,11,12,13,14,15,16,17<\/li>\n    <li>The median is the number that is in middle of the sequence. In this case It would be 11<\/li>\n    <li>The lower quartile is the median in between the smallest number and the median etc in between 1 and 11, which is 6<\/li>\n    <li>The upper quartile you find the median between the median and the largest number etc. betweeb 11 and 17,which will be 14 according to the question above.<\/li>\n<\/ul>","e7d3494d":"<p id='2'><h3><b>Import Library<\/b><\/h3><\/p>\n<p>We need to install a wide variety of libraries. For this we will install <b>pandas, numpy, bokeh and matplotlib<\/b> libraries.<\/p>","3f9d0219":"<p>https:\/\/www.kaggle.com\/kanncaa1\/interactive-bokeh-tutorial-part-2\/editnb<\/p>\n<p>http:\/\/bokeh.pydata.org\/en\/0.11.0\/docs\/user_guide\/tutorials.html<\/p>","2f20dbf3":"<p>Hello to everyone,<br>\nIn this kernel we will introduce the <b>bokeh<\/b> library. For this, analyzes and a wide variety of graphs will be generated from a specific data set.<\/p>\n\n<p>Bokeh is a large library that exposes many capabilities, so this section is only a quick tour of some common Bokeh use-cases and workflows. For more detailed information please consult the full User Guide.<\/p>\n\n<p>This data set consists of the marks secured by the students in various subjects.<\/p>\n<p>Column List<\/p>\n<ul>\n    <li>App Application name<\/li>\n    <li>Category Category the app belongs to<\/li>\n    <li>Rating Overall user rating of the app (as when scraped)<\/li>\n    <li>Reviews Number of user reviews for the app (as when scraped)<\/li>\n    <li>Size Size of the app (as when scraped)<\/li>\n    <li>Installs Number of user downloads\/installs for the app (as when scraped)<\/li>\n    <li>Type Paid or Free<\/li>\n    <li>Price Price of the app (as when scraped)<\/li>\n    <li>Content Rating Age group the app is targeted at - Children \/ Mature 21+ \/ Adult<\/li>\n    <li>Genres An app can belong to multiple genres (apart from its main category). For eg, a musical family game will belong to Music, Game, Family genres.<\/li>\n    <li>Last Updated Date when the app was last updated on Play Store (as when scraped)<\/li>\n    <li>Current Ver Current version of the app available on Play Store (as when scraped)<\/li>\n    <li>Android Ver Min required Android version (as when scraped)<\/li>\n<\/ul>\n\n","fcab4716":"<p id='8'><h2><b>Layouts<\/b><\/h2><\/p>\n<p>Arranging multiple plots like subplot in matplot library.<\/p>\n<ul>\n    <li>Row and columns: puts plots in row order or column order in figure<\/li>\n    <li>Grid arrangement: list of order for layout<\/li>\n    <ul>\n        <li>toolbar_location: location of tool bar that can be below above left right or none<\/li>\n    <\/ul>\n    <li>Tabbed layout<\/li>\n        <ul>\n            <li>Panel: like a figure<\/li>\n            <li>Tabs: like a button<\/li>\n        <\/ul>\n<\/ul>","39a26f20":"<p id='3'><h3><b>Data Exploratory Analysis<\/b><\/h3><\/p>\n<p>In the data discovery analysis, we will firstly recognize and analyze our data using a wide variety of functions in the pandas library.<\/p>"}}