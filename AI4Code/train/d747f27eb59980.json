{"cell_type":{"2dc568b3":"code","9760fd7a":"code","b69b5461":"code","40669fd7":"code","3e4f273f":"code","3f664ace":"code","71a5c906":"code","266fd3b1":"code","864468bb":"code","44eaa59f":"code","3c90d933":"code","72ec0740":"code","e46bff9f":"code","49bb31d9":"code","d345427f":"code","c118369f":"code","6fd748bc":"code","f39230bd":"code","fa487d37":"code","b165bcba":"markdown"},"source":{"2dc568b3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","9760fd7a":"# reading dataset\nsuv_data = pd.read_csv(\"..\/input\/suv-data\/suv_data.csv\")","b69b5461":"sns.countplot('Gender', data=suv_data)","40669fd7":"#Plotting data about how many Male and Female are able to purchased the SUV\nsns.countplot('Purchased', hue='Gender', data=suv_data)","3e4f273f":"# Plotting Age to check how old are the people in dataset\nsuv_data['Age'].plot.hist()","3f664ace":"#checking head of the dataset\nsuv_data.head()","71a5c906":"#Dropping User ID as we don't need for futher process\nsuv_data.drop('User ID', inplace=True, axis=1)","266fd3b1":"#checking head of the dataset after dropping of User ID\nsuv_data.head()","864468bb":"# using get_dummies to convert Gender's String value in binary\ngender = pd.get_dummies(suv_data['Gender'], drop_first=True)\ngender.head()","44eaa59f":"suv_data = pd.concat([suv_data,gender], axis=1)\nsuv_data.head()","3c90d933":"#dropping Gender as we already converted it's data\nsuv_data.drop('Gender',axis=1,inplace=True)","72ec0740":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()","e46bff9f":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report","49bb31d9":"X = suv_data.drop('Purchased',axis=1)\ny = suv_data['Purchased']","d345427f":"# Chossing data for training and Testing #test_size is use to choose for the testing and random_state is used to ensure the same result.\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.25,random_state=0)\nX_train = sc.fit_transform(X_train)\nX_test = sc.fit_transform(X_test)","c118369f":"# Fitting data to the Logistic Regression Model\nlog_model = LogisticRegression(solver='lbfgs')\nlog_model.fit(X_train, y_train)\n# Predicting data to test the our trained data\npredictions = log_model.predict(X_test)","6fd748bc":"#Checking Classification report\nprint(classification_report(y_test, predictions))","f39230bd":"#checking confusion matrix\nconfusion_matrix(y_test, predictions)","fa487d37":"# Checking prediction accuracy score in percentage\naccuracy_score(y_test, predictions)*100","b165bcba":"# Train Data"}}