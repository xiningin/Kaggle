{"cell_type":{"c6098e1c":"code","139a61d8":"code","97bd2974":"code","630b7353":"code","386269bc":"code","c6908982":"code","bbc2b9c2":"code","bd5963ef":"code","84cb1999":"code","ea787439":"code","804a17a8":"code","42aaf98c":"code","01674eba":"code","29f48679":"code","cc6511ca":"code","4482e027":"code","169ff759":"code","937fac84":"code","2d64abd6":"code","019d4caf":"code","f27d9fba":"code","98ca612f":"code","381f16b2":"code","d3aac6a6":"code","614a4639":"code","bb0caa58":"code","8e2dea8d":"code","c796a933":"code","56d2273e":"markdown","807470ca":"markdown"},"source":{"c6098e1c":"import numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\n","139a61d8":"data = pd.read_csv(\"..\/input\/iris\/Iris.csv\")\ndata.head()","97bd2974":"data = data.drop(\"Id\",axis = 1)\ndata.head()","630b7353":"data.shape","386269bc":"print(data.info())","c6908982":"print(data.describe())","bbc2b9c2":"print(data.groupby('Species').size())","bd5963ef":"data.plot(kind='box', sharex=False, sharey=False)","84cb1999":"data.hist(edgecolor='red',linewidth=1.2)","ea787439":"from pandas.plotting import scatter_matrix as sm\nsm(data,figsize=(10,10))\nplt.show()","804a17a8":"sns.pairplot(data, hue=\"Species\", diag_kind=\"auto\")","42aaf98c":"# Importing metrics for evaluation\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report","01674eba":"# Seperating the data into dependent and independent variables\nx = data.iloc[:, :-1].values\ny = data.iloc[:, -1].values\n\n# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)","29f48679":"\nprint(x_train.shape,y_train.shape)\nprint(x_test.shape,y_test.shape)","cc6511ca":"from sklearn.linear_model import LogisticRegression as lr\nmodel = lr()\nmodel.fit(x_train,y_train)","4482e027":"y_pred = model.predict(x_test)\n\nprint(y_pred)","169ff759":"#Summary of predictions \nprint(classification_report(y_test,y_pred))\nprint(confusion_matrix(y_test,y_pred))","937fac84":"#Accuracy\nfrom sklearn.metrics import accuracy_score as AS\nprint(\"Accuracy\", AS(y_pred,y_test))","2d64abd6":"#naive Bayes\nfrom sklearn.naive_bayes import GaussianNB","019d4caf":"model2 = GaussianNB()\nmodel.fit(x_train,y_train)","f27d9fba":"y2_pred = model.predict(x_test)\nprint(y2_pred)","98ca612f":"# Summary of the predictions made by the classifier\nprint(classification_report(y_test, y2_pred))\nprint(confusion_matrix(y_test, y2_pred))","381f16b2":"from sklearn.metrics import accuracy_score as AS\nprint(\"Accuracy\", AS(y2_pred,y_test))","d3aac6a6":"#Support Vector mAchine's\nfrom sklearn.svm import SVC as svm\nmodel3 = svm()\nmodel3.fit(x_train,y_train)","614a4639":"y3_pred = model.predict(x_test)\nprint(y3_pred)","bb0caa58":"print(classification_report(y_test,y3_pred))\nprint(confusion_matrix(y_test,y3_pred))","8e2dea8d":"# Accuracy score\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y3_pred,y_test))","c796a933":"# K-Nearest Neighbours\nfrom sklearn.neighbors import KNeighborsClassifier\n\nclassifier = KNeighborsClassifier(n_neighbors=8)\nclassifier.fit(x_train, y_train)\n\ny4_pred = classifier.predict(x_test)\n\n# Summary of the predictions made by the classifier\nprint(classification_report(y_test, y4_pred))\nprint(confusion_matrix(y_test, y4_pred))\n# Accuracy score\nfrom sklearn.metrics import accuracy_score\nprint('accuracy is',accuracy_score(y4_pred,y_test))","56d2273e":"Applying different classification models:","807470ca":"Visualizations:"}}