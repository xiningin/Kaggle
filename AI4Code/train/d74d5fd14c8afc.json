{"cell_type":{"b60c8ff7":"code","41ba9b8a":"code","9e439189":"code","18b382e0":"code","b7e6cab1":"code","6df6cb86":"code","f574edb6":"code","d760ebf5":"code","a6e312c2":"code","956950b0":"code","e6817ee5":"code","ddd77c7a":"code","32ac24dc":"code","32ebc7dd":"code","e15a129c":"code","360296f2":"code","f99e1650":"code","5f7f2071":"code","051f5ebd":"code","c7b93784":"code","c7136e9c":"code","fd772c33":"code","0df81416":"code","2d170c86":"code","8ab25ab5":"code","423ee360":"code","4c5d4e34":"code","4eeb355f":"code","54aa3342":"code","8fd6a805":"code","d2ba832f":"markdown","5e56321a":"markdown","a6e4dc7e":"markdown","22e2a6ad":"markdown","480b1525":"markdown"},"source":{"b60c8ff7":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt  \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression \nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, mean_squared_log_error, r2_score\nfrom sklearn.ensemble import RandomForestRegressor , GradientBoostingRegressor \n\n\n%matplotlib inline\n","41ba9b8a":"housing =pd.read_csv('..\/input\/california-housing-prices\/housing.csv')","9e439189":"housing.columns","18b382e0":"\nX = housing[['longitude', 'latitude', 'housing_median_age',\n        'population', 'households', 'median_income']]\nY = housing['median_house_value']\nX_train ,X_test ,Y_train ,Y_test =train_test_split(X, Y,test_size = 0.25 , random_state =44)\nreg= LinearRegression()\nreg.fit(X_train , Y_train)\npred =reg.predict(X_test)\n","b7e6cab1":"ocean_proximity= housing['ocean_proximity'].copy","6df6cb86":"housing = housing.drop('ocean_proximity',axis= 1)","f574edb6":"median = housing['total_bedrooms'].median()\n","d760ebf5":"housing.reset_index(drop = True)","a6e312c2":"housing['total_bedrooms'].fillna(median, inplace=True)","956950b0":"housing.isnull().sum()","e6817ee5":"housing.describe()","ddd77c7a":"y = housing['median_house_value'].copy()\n#median_house_value.head() \nx = housing.drop('median_house_value' , axis = 1)","32ac24dc":"'''\nx =housing.iloc[:,-2]\ny =housing.iloc[:,-2:-1]\ny.shape\n'''","32ebc7dd":"x_train, x_test , y_train , y_test  = train_test_split(x, y, test_size=0.2,random_state=44 )\n","e15a129c":"x_train.shape","360296f2":"x_train.isnull().sum()","f99e1650":"x_train","5f7f2071":"def plot(x):\n    fig, ax = plt.subplots()\n    ax.scatter(y_test, x)\n    ax.plot([y_test.min(), y_test.max()], [x.min(), x.max()], 'k--', lw=4)\n    ax.set_xlabel('acual')\n    ax.set_ylabel('Predicted')","051f5ebd":"'''from sklearn.impute import SimpleImputer\nmedian = housing['total_bedrooms'].median()\nimputer = SimpleImputer(strategy='median')\nimputer.fit(x_train)\n'''","c7b93784":"x_test.info()","c7136e9c":"lin_reg = LinearRegression()","fd772c33":"lin_reg.fit(x_train, y_train)","0df81416":"lin_reg.score(x_train, y_train)","2d170c86":"pred =lin_reg.predict(x_test)","8ab25ab5":"plot(pred)","423ee360":"RFR = RandomForestRegressor()\nRFR.fit(x_train, y_train)\nRFR_score = RFR.score(x_train, y_train)\nRFR_pred =RFR.predict(x_test)\nprint(RFR.score(x_train, y_train))","4c5d4e34":"RFR.score(x_test, RFR_pred)","4eeb355f":"RFR = GradientBoostingRegressor()\nRFR.fit(x_train, y_train)\nRFR_score = RFR.score(x_train, y_train)\nRFR_pred =RFR.predict(x_test)\nprint(RFR.score(x_train, y_train))","54aa3342":"sgd_pred = SGD.predict(x_test)","8fd6a805":"algo_reg = RandomForestRegressor(max_features = 'log2', min_samples_split=3, n_estimators=15)\nalgo_reg.fit(x_train, y_train)\nhousing_predictions = algo_reg.predict(x_test)\nalgo_mse = mean_squared_error(y_test, housing_predictions)\nalgo_rmse = np.sqrt(algo_mse)\nprint(\"MSE ==> \", algo_mse)\nprint(\"RMSE ==> \", algo_rmse)\nprint(\"MAE ==> \", mean_absolute_error(y_test, housing_predictions))\nprint(\"MSLE ==> \", mean_squared_log_error(y_test, housing_predictions))\nprint(\"R2 ==> \", r2_score(y_test, housing_predictions))\n","d2ba832f":"## Data Cleaning","5e56321a":"## Train The Model\n","a6e4dc7e":"## Read The CSV Dataset using Pandas","22e2a6ad":"## Split the Data \n","480b1525":"## Libraries"}}