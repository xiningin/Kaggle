{"cell_type":{"a5859925":"code","7e8f42de":"code","1b95d253":"code","092233d8":"code","74c9d423":"code","43d8c56c":"code","d76a446a":"code","b00856f9":"code","6873bcc2":"code","5c9ce6c9":"code","61c283f1":"code","4561b53c":"code","c66bf7c4":"code","2ac49c2b":"code","ee32a2b5":"code","d64171ac":"code","4dc75829":"code","39913728":"code","2f904d8d":"code","9dff3148":"code","02173b7d":"code","6606799b":"code","ada5e5be":"code","e7181529":"code","8069dbff":"code","c87ab419":"code","5b4b272f":"code","e430fbfd":"code","3397c26a":"code","81e8462c":"code","c34f127d":"code","0833274c":"code","a1ab4ea2":"code","a5be7ab0":"code","65099dcb":"code","33e73b18":"code","ac681469":"markdown","0b08aa25":"markdown","04cf1d7f":"markdown","4b7edcc9":"markdown","c8c058f8":"markdown","5b03a9d1":"markdown","70f898cf":"markdown","b6d72c2a":"markdown","19277160":"markdown","555988d7":"markdown","3be10e03":"markdown","476ad55a":"markdown","7e1273da":"markdown","f89f108f":"markdown","fabe2e3a":"markdown","3f62a65d":"markdown","1ed8da50":"markdown"},"source":{"a5859925":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7e8f42de":"#Gerekli k\u00fct\u00fcphaneler ortama y\u00fckleniyor\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n#pd.set_option(\"display.max_rows\",None)\npd.set_option(\"display.expand_frame_repr\",False)\nimport warnings\nwarnings.filterwarnings(\"ignore\")","1b95d253":"#Veri seti y\u00fckleniyor\n\ndf=pd.read_csv(\"\/kaggle\/input\/insurance\/insurance.csv\")","092233d8":"def control_df(df):\n    print(\"###############################################################\")\n    print(\"\u0130lk 5 veri\")\n    print(df.head())\n    print(\"###############################################################\")\n    print(\"Verinin boyutlar\u0131:\")\n    print(df.shape)\n    print(\"###############################################################\")\n    print(\"Verideki bo\u015f g\u00f6zlem say\u0131s\u0131:\")\n    print(df.isnull().sum())\n    cat_cols=[col for col in df.columns if df[col].dtype==\"O\"]\n    num_but_cat_cols=[col for col in df.columns if df[col].nunique() <10 and df[col].dtype != \"O\"]\n    cat_but_num_cols=[col for col in df.columns if df[col].nunique() > 20 and df[col].dtype == \"O\"]\n    cat_cols = cat_cols + num_but_cat_cols\n    num_cols = [col for col in df.columns if col not in cat_cols]\n    print(\"###############################################################\")\n    print(\"Verideki kategorik de\u011fi\u015fkenler\")\n    print(cat_cols)\n    print(\"###############################################################\")\n    print(\"Verideki say\u0131sal de\u011fi\u015fkenler\")\n    print(num_cols)\n    \n    return cat_cols,num_cols ","74c9d423":"#Veri setinin genel \u00f6zellikleri\n#kategorik verilerin ve n\u00fcmerik verilerin de\u011fi\u015fkenlere atanmas\u0131\ncat_cols,num_cols=control_df(df)","43d8c56c":"def cat_analysis(df,col_name,info=True):\n    print(f\"{col_name.capitalize()} adl\u0131 de\u011fi\u015fkenin g\u00f6zlemlerinin y\u00fczdesel oran\u0131:\")\n    ratio=(df[col_name].value_counts()\/len(df)*100)\n    print(f\"{ratio}\")\n    if info:\n        print(\"info\".center(50,\"#\"))\n        print(df.groupby(col_name).mean())\n        print(\"\\n\\n\")","d76a446a":"#Kategorik de\u011fi\u015fkenleri anlama,di\u011fer de\u011fi\u015fkenler ile ili\u015fkisi\nfor col in cat_cols:\n    cat_analysis(df,col)","b00856f9":"#\"age\" de\u011fi\u015fkeni 47 farkl\u0131 de\u011fer ta\u015f\u0131yor.\nprint(df[\"age\"].nunique())","6873bcc2":"df[num_cols].describe().T","5c9ce6c9":"# \"age\" de\u011fi\u015fkeni belirtilen ya\u015f aral\u0131klar\u0131na g\u00f6re s\u0131n\u0131fland\u0131r\u0131l\u0131yor.\n\ndf[\"age_cat\"]=pd.cut(df[\"age\"],[0,22,30,45,70],labels=[\"0_22\",\"22_30\",\"30_45\",\"45_70\"])","61c283f1":"def gg(df,target):\n    col_names=[col for col in df.columns if col not in [\"charges\",\"age\",\"bmi\"]]\n    #col_names=df.columns[~df.columns.str.contains(\"charges\")]\n    print(col_names)\n    for col in col_names:\n        \n        ss=df.groupby(col)[target].mean()\n        plt.ylabel(target)\n        plt.title(f\"{col} adl\u0131 de\u011fi\u015fken k\u0131r\u0131l\u0131m\u0131nda ortalama \u00fccret\")\n        plt.legend()\n        #sns.set(rc={'figure.figsize': (8, 10)})\n        sns.barplot(x=ss.index,y=ss.values)\n        plt.show()\n        print(\"\\n\")\n        print(ss)\n        print(\"######################\\n\\n\")\n    \n        ","4561b53c":"#yeni df i\u00e7in ortalama \u00fccretlerin grafik \u00fczerinde g\u00f6sterilmesi\ngg(df,\"charges\")","c66bf7c4":"agg_df=df.groupby([\"smoker\",\"region\",\"children\",\"age_cat\"]).agg({\"charges\":\"mean\"}).sort_values(\"charges\",ascending=False)","2ac49c2b":"print(agg_df)","ee32a2b5":"agg_df=agg_df.reset_index()\nprint(agg_df.shape)","d64171ac":"def compare_draw(df1,col1,target,df2=False,col2=False):\n    plt.subplot(1,2,1)\n    ss=df1.groupby(col1)[target].mean()\n    plt.ylabel(col1)\n    plt.title(f\"{col1} adl\u0131 de\u011fi\u015fken k\u0131r\u0131l\u0131m\u0131nda ortalama \u00fccret\")\n    plt.legend()\n    sns.barplot(x=ss.index,y=ss.values)\n    plt.xticks(rotation=45)\n    plt.show()\n    print(\"\\n\")\n    print(ss)\n    print(\"######################\\n\\n\")\n    if type(df2) != bool :\n        plt.subplot(1,2,2)\n        ss=df2.groupby(col2)[target].mean()\n        plt.ylabel(col2)\n        plt.title(f\"{col2} adl\u0131 de\u011fi\u015fken k\u0131r\u0131l\u0131m\u0131nda ortalama \u00fccret\")\n        plt.legend()\n        plt.xticks(rotation=45)\n        sns.barplot(x=ss.index,y=ss.values)\n        plt.show()\n        print(\"\\n\")\n        print(ss)\n        print(\"######################\\n\\n\")\n","4dc75829":"# Eksik veriler i\u00e7in ayr\u0131 bir dataframe olu\u015fturuldu.\nmissing_values=agg_df[agg_df[\"charges\"].isnull()]","39913728":"print(missing_values.tail(10))","2f904d8d":"# 44 adet eksik de\u011ferimiz var\nprint(missing_values.shape)","9dff3148":"compare_draw(df,\"region\",\"charges\")","02173b7d":"def missing_fill(df):\n    ab=agg_df[agg_df[\"charges\"].isnull()]\n    for i in ab.index:\n        if (ab[\"smoker\"][i] == \"no\") and (ab[\"region\"][i] == \"northeast\"):\n            ab[\"charges\"][i] = agg_df[(agg_df[\"smoker\"] == \"no\") & (agg_df[\"region\"]==\"southeast\") & (agg_df[\"age_cat\"]==ab[\"age_cat\"][i])][\"charges\"].mean()\n        \n        elif (ab[\"smoker\"][i] == \"no\") and (ab[\"region\"][i] == \"southeast\"):\n              ab[\"charges\"][i] = agg_df[(agg_df[\"smoker\"] == \"no\") & (agg_df[\"region\"]==\"northeast\") & (agg_df[\"age_cat\"]==ab[\"age_cat\"][i])][\"charges\"].mean()\n        \n        elif (ab[\"smoker\"][i] == \"no\") and (ab[\"region\"][i] == \"northwest\"):\n              ab[\"charges\"][i] = agg_df[(agg_df[\"smoker\"] == \"no\") & (agg_df[\"region\"]==\"southwest\") & (agg_df[\"age_cat\"]==ab[\"age_cat\"][i])][\"charges\"].mean()\n        \n        elif (ab[\"smoker\"][i] == \"no\") and (ab[\"region\"][i] == \"southwest\"):\n            ab[\"charges\"][i] = agg_df[(agg_df[\"smoker\"] == \"no\") & (agg_df[\"region\"]==\"northwest\") & (agg_df[\"age_cat\"]==ab[\"age_cat\"][i])][\"charges\"].mean()\n        \n        elif (ab[\"smoker\"][i] == \"yes\") and (ab[\"region\"][i] == \"northeast\"):\n            ab[\"charges\"][i] = agg_df[(agg_df[\"smoker\"] == \"yes\") & (agg_df[\"region\"]==\"southeast\") & (agg_df[\"age_cat\"]==ab[\"age_cat\"][i])][\"charges\"].mean()\n        \n        elif (ab[\"smoker\"][i] == \"yes\") and (ab[\"region\"][i] == \"southeast\"):\n              ab[\"charges\"][i] = agg_df[(agg_df[\"smoker\"] == \"yes\") & (agg_df[\"region\"]==\"northeast\") & (agg_df[\"age_cat\"]==ab[\"age_cat\"][i])][\"charges\"].mean()\n        \n        elif (ab[\"smoker\"][i] == \"yes\") and (ab[\"region\"][i] == \"northwest\"):\n              ab[\"charges\"][i] = agg_df[(agg_df[\"smoker\"] == \"yes\") & (agg_df[\"region\"]==\"southwest\") & (agg_df[\"age_cat\"]==ab[\"age_cat\"][i])][\"charges\"].mean()\n        \n        elif (ab[\"smoker\"][i] == \"yes\") and (ab[\"region\"][i] == \"southwest\"):\n            ab[\"charges\"][i] = agg_df[(agg_df[\"smoker\"] == \"yes\") & (agg_df[\"region\"]==\"northwest\") & (agg_df[\"age_cat\"]==ab[\"age_cat\"][i])][\"charges\"].mean()\n        \n        \n    return ab\n","6606799b":"# Eksik de\u011ferler i\u00e7in tahminlerimiz bir de\u011fi\u015fkene atand\u0131.\nal=missing_fill(agg_df)","ada5e5be":"# \u00dczerinde \u00e7al\u0131\u015ft\u0131\u011f\u0131m\u0131z df i\u00e7indeki eksik de\u011ferler yerine atand\u0131.\nagg_df.loc[al.index.values]=al","e7181529":"control_df(agg_df)","8069dbff":"compare_draw(df,\"age_cat\",\"charges\",agg_df,\"age_cat\")","c87ab419":"print(missing_values[\"smoker\"].value_counts())","5b4b272f":"compare_draw(df,\"smoker\",\"charges\",agg_df,\"smoker\")","e430fbfd":"zz=[]\nfor i in range(len(agg_df)):\n    tl=agg_df[\"region\"][i] + \"_\" + str(agg_df[\"children\"][i]) + \"_\" + agg_df[\"smoker\"][i] + \"_\" + agg_df[\"age_cat\"][i]\n    zz.append(tl.upper())","3397c26a":"persona_df=pd.concat([pd.DataFrame(zz),agg_df[\"charges\"]],axis=1)\npersona_df.columns=[\"level_based\",\"charges\"]","81e8462c":"print(persona_df.shape)","c34f127d":"persona_df=persona_df.groupby(\"level_based\").agg({\"charges\":\"mean\"}).sort_values(\"charges\",ascending=False)\npersona_df=persona_df.reset_index()\npersona_df.shape","0833274c":"print(persona_df.head())","a1ab4ea2":"persona_df[\"SEGMENT\"]=pd.qcut(persona_df[\"charges\"],6,[\"F\",\"E\",\"D\",\"C\",\"B\",\"A\"])\npersona_df=persona_df.reset_index()","a5be7ab0":"print(persona_df.head(10))","65099dcb":"def user(region,child,smoker,age):\n    if age<22:\n        age=\"0_22\"\n    elif age>=22 and age<30:\n        age=\"22_30\"\n    elif age>=30 and age<45:\n        age=\"30_45\"\n    elif age>=45 and age<=70:\n        age=\"45_70\"\n    else:\n        print(\"0-70 ya\u015f aral\u0131\u011f\u0131nda bir say\u0131 giriniz\")\n    \n    s=region.upper() + \"_\" + str(child).upper() + \"_\"+ smoker.upper() + \"_\" + age.upper()\n    \n    t=persona_df[persona_df[\"level_based\"]==s]\n    print(t)\n\n    return \n    ","33e73b18":"user(\"southwest\",5,\"no\",60)","ac681469":"## 2.Veri Setine Genel Bak\u0131\u015f\n\nVeri setinde 7 de\u011fi\u015fken 1338 \u00f6rnek var.\nBu de\u011fi\u015fkenler:\n* age : ya\u015f \n* sex : cinsiyet\n* bmi : v\u00fccut kitle indexi\n* children : sahip oldu\u011fu \u00e7ocuk say\u0131s\u0131\n* smoker : sigara i\u00e7ip i\u00e7medi\u011fi\n* region : bulundu\u011fu b\u00f6lge\n* charges : \u00f6denen \u00fccret bilgisini i\u00e7eriyor.","0b08aa25":"## 4.Persona Olu\u015fturulmas\u0131\n\nBu k\u0131s\u0131mda verilerimiz persona dataframe \u015fekline \u00e7eviriliecektir.","04cf1d7f":"G\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere ya\u015f kategorilerine g\u00f6re \u00fccret da\u011f\u0131l\u0131m\u0131n\u0131 inceledi\u011fimizde eksik verileri tamamlad\u0131\u011f\u0131m\u0131z zaman b\u00fct\u00fcn ortalamalar \u00fccretler y\u00fckselmi\u015ftir.\nBu durumun nedeni i\u00e7in doldurdu\u011fumuz eksik verileri incelemekte fayda var.","4b7edcc9":"Olu\u015fturdu\u011fumuz persona dataframe'ine g\u00f6z atal\u0131m.","c8c058f8":"Her bir personadan birden fazla olmas\u0131 ihtimaline kar\u015f\u0131 her persona s\u0131n\u0131f\u0131 i\u00e7in ortalama de\u011ferleri al\u0131nmal\u0131.","5b03a9d1":"## 1.Veri Setinin Y\u00fcklenmesi","70f898cf":"Eksik de\u011ferleri doldurmak i\u00e7in \u015f\u00f6yle bir y\u00f6ntem se\u00e7tim.B\u00f6lgelere ait \u00fccret ortalamas\u0131 grafi\u011fini hat\u0131rlarsak \"northwest\" ile \"southwest\" b\u00f6lgesi ve \"northeast\" ile \"southeast\" b\u00f6lgesi birbirine benzer davran\u0131\u015flar sergiliyor.Bu y\u00fczden eksik verileri doldurmak i\u00e7in bu b\u00f6lgelerin birbirinde kar\u015f\u0131l\u0131k gelen ko\u015fullar\u0131ndan fayda sa\u011flad\u0131m.","b6d72c2a":"# G\u0130R\u0130\u015e\n\nBu \u00e7al\u0131\u015fmada, farkl\u0131 tipte insanlar\u0131n sa\u011fl\u0131k harcalamalar\u0131 kural tabanl\u0131 s\u0131n\u0131fland\u0131r\u0131l\u0131p tahmin edilmeye \u00e7al\u0131\u015f\u0131lacakt\u0131r. \u00c7al\u0131\u015fman\u0131n \u00f6zeti \u015f\u00f6yledir:\n\n1. Veri Setinin Y\u00fcklenmesi\n1. Veri Setine Genel Bak\u0131\u015f\n1. Veri Manip\u00fclasyonu\n1. Persona Olu\u015fturulmas\u0131\n1. Sonu\u00e7\n","19277160":"Persona s\u0131n\u0131fland\u0131rmam\u0131z\u0131 \"smoker\",\"region\",\"children\",\"age_cat\" de\u011fi\u015fkenlerine g\u00f6re olu\u015fturaca\u011f\u0131z.Bu y\u00fczden bu de\u011fi\u015fkenlere g\u00f6re k\u0131r\u0131l\u0131mlar\u0131n \u00fccret ortalamalar\u0131n\u0131 incelemekte fayda var.","555988d7":"G\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere doldurdu\u011fumuz eksik verilerin \u00e7o\u011funlu\u011fu sigara i\u00e7en ki\u015filerden olu\u015fuyordu.Sigara i\u00e7en ki\u015filerin \u00f6dedi\u011fi \u00fccret ortalamas\u0131 i\u00e7meyenlere g\u00f6re \u00e7ok daha y\u00fcksek oldu\u011fu i\u00e7in genel \u00fccret ortalamas\u0131 artm\u0131\u015f oldu.\n\nA\u015fa\u011f\u0131da g\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere smoker de\u011fi\u015fkeninin k\u0131r\u0131l\u0131m\u0131nda anlaml\u0131 bir de\u011fi\u015fiklik olmad\u0131.Bu eksik verileri, genel veri setinin da\u011f\u0131l\u0131m\u0131na uygun tamamlad\u0131\u011f\u0131m\u0131z\u0131 g\u00f6sterir. ","3be10e03":"![](https:\/\/static.wixstatic.com\/media\/72c0b2_3f82b019e67049739a9a13ecd693b770~mv2.png\/v1\/fill\/w_1000,h_571,al_c,usm_0.66_1.00_0.01\/72c0b2_3f82b019e67049739a9a13ecd693b770~mv2.png)","476ad55a":"## 5. Sonu\u00e7","7e1273da":"Kategorik De\u011fi\u015fken Analizi","f89f108f":"## 3. Veri Manip\u00fclasyonu\n\nVeriler her zaman istedi\u011fimiz \u015fekilde olmayabilir.Verileri istedi\u011fimiz,kullanabilece\u011fimiz formata \u00e7evirmeye \u00e7al\u0131\u015faca\u011f\u0131z.","fabe2e3a":"Burada g\u00f6r\u00fcl\u00fcyor ki olu\u015fturdu\u011fumuz senaryoda baz\u0131 de\u011ferler i\u00e7in elimizde hi\u00e7 \u00f6rnek yok.Bu \u00f6rnekler i\u00e7in de\u011fer atamas\u0131 yapmam\u0131z gerekiyor.","3f62a65d":"\u00d6rne\u011fin \"age\" de\u011fi\u015fkeni ta\u015f\u0131d\u0131\u011f\u0131 bilgi nedeniyle s\u0131n\u0131fland\u0131rma i\u00e7in i\u015fimize yarayabilir.Ancak ta\u015f\u0131d\u0131\u011f\u0131 e\u015fsiz de\u011fer say\u0131s\u0131 \u00e7ok fazla bunu azaltmam\u0131z laz\u0131m. ","1ed8da50":"\u00dccretlerimizide [\"F\",\"E\",\"D\",\"C\",\"B\",\"A\"] (F en d\u00fc\u015f\u00fck A en y\u00fcksek) 6 segmente ay\u0131r\u0131yoruz."}}