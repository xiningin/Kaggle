{"cell_type":{"b73eac4b":"code","57d60e22":"code","bbc83af9":"code","3394888d":"code","f38e6d91":"code","827f2e25":"code","be78a75a":"code","d8a1d0af":"code","5ee1ce3b":"code","58c4e08f":"code","63dea5f6":"code","6b120fa5":"markdown","abdf9602":"markdown","495a5766":"markdown","8a311252":"markdown","7623fb07":"markdown","bd3afaa2":"markdown","f2c88456":"markdown","7184164c":"markdown","054af7e6":"markdown"},"source":{"b73eac4b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport os\nprint(os.listdir(\"..\/input\"))","57d60e22":"train = pd.read_csv('..\/input\/import-data-and-convert-into-table-format\/df_train.csv', low_memory=False)\ntest = pd.read_csv('..\/input\/import-data-and-convert-into-table-format\/df_test.csv', low_memory=False)\nsub = pd.read_csv('..\/input\/ga-customer-revenue-prediction\/sample_submission.csv', low_memory=False)\n\nprint('Train data: \\nRows: {}\\nCols: {}'.format(train.shape[0],train.shape[1]))\nprint(train.columns)\n\nprint('\\nTest data: \\nRows: {}\\nCols: {}'.format(test.shape[0],test.shape[1]))\nprint(test.columns)\n\nprint('\\nSubmission format: \\nRows: {}\\nCols: {}'.format(sub.shape[0],sub.shape[1]))\nprint(sub.columns)","bbc83af9":"train.head()","3394888d":"test.head()","f38e6d91":"sub.head()","827f2e25":"print('Unique visitor IDs in training data: {}'.format(train['fullVisitorId'].nunique()))\n#print('Unique visitor IDs in test data: {}'.format(test['fullVisitorId'].nunique()))","be78a75a":"train[\"totals.transactionRevenue\"] = train[\"totals.transactionRevenue\"].astype('float')\ntemp = train.groupby('fullVisitorId')['totals.transactionRevenue'].sum().reset_index()\nprint('Percentage of visitors with revenue is {:,.2%}'.format(temp[temp['totals.transactionRevenue'] > 0]['fullVisitorId'].count() \/ train['fullVisitorId'].nunique()))","d8a1d0af":"train['revenue_flag'] = train['totals.transactionRevenue'].apply(lambda x: 1 if x>0 else 0)","5ee1ce3b":"mobile_revenue = train.pivot_table(train, index=['device.isMobile'], columns=['revenue_flag'], aggfunc=len).reset_index()[['device.isMobile','totals.transactionRevenue']]\nmobile_revenue.columns = ['device.isMobile','No Revenue', 'Revenue']\nmobile_revenue['Revenue %'] = mobile_revenue['Revenue'] \/ (mobile_revenue['Revenue'] + mobile_revenue['No Revenue'])\n\nfig, ax = plt.subplots(figsize=(8,4))\nsns.barplot(x='Revenue %', y='device.isMobile', data=mobile_revenue, color=\"lightskyblue\", orient=\"h\")\n\nfor p in ax.patches:\n    ax.text(p.get_width() + 0.0006, \n            p.get_y() + (p.get_height()\/2), \n            '{:,.1%}'.format(p.get_width()),\n            ha=\"center\")\n    \nax.set_ylabel('Device is Mobile?', size=14, color=\"#0D47A1\")\nax.set_xlabel('% of transactions with revenue', size=14, color=\"#0D47A1\")\nax.set_title('Percentage of transactions with revenue by device type', size=18, color=\"#0D47A1\")\n\nplt.show()","58c4e08f":"mobile_revenue = train.pivot_table(train, index=['device.isMobile'], columns=['revenue_flag'], aggfunc=np.mean).reset_index()[['device.isMobile','totals.transactionRevenue']]\nmobile_revenue.columns = ['device.isMobile','Avg Revenue']\n\nfig, ax = plt.subplots(figsize=(8,4))\nsns.barplot(x='Avg Revenue', y='device.isMobile', data=mobile_revenue, color=\"lightskyblue\", orient=\"h\")\n\nfor p in ax.patches:\n    ax.text(p.get_width() + 10000000, \n            p.get_y() + (p.get_height()\/2), \n            '${:,.0f}'.format(p.get_width()),\n            ha=\"center\")\n    \nax.set_ylabel('Device is Mobile?', size=14, color=\"#0D47A1\")\nax.set_xlabel('Average revenue', size=14, color=\"#0D47A1\")\nax.set_title('Average revenue of by device type', size=18, color=\"#0D47A1\")\n\nplt.show()","63dea5f6":"browser_revenue = train.pivot_table(train, index=['device.browser'], columns=['revenue_flag'], aggfunc=len).reset_index()[['device.browser','totals.transactionRevenue']]\nbrowser_revenue.columns = ['device.browser','No Revenue', 'Revenue']\nbrowser_revenue.fillna(0, inplace=True)\nbrowser_revenue['Transactions'] = browser_revenue['Revenue'] + browser_revenue['No Revenue']\nbrowser_revenue['Revenue %'] = browser_revenue['Revenue'] \/ browser_revenue['Transactions']\nbrowser_revenue = browser_revenue.sort_values('Transactions',ascending=False).head(15)\n\nfig, ax = plt.subplots(1, 2, figsize=(8,8), sharey=True)\na = sns.barplot(x='Transactions', y='device.browser', data=browser_revenue, color=\"lightskyblue\", orient=\"h\", ax=ax[0])\nb = sns.barplot(x='Revenue %', y='device.browser', data=browser_revenue, color=\"lightskyblue\", orient=\"h\", ax=ax[1])\n\nfor p in ax[0].patches:\n    ax[0].text(p.get_width() + 75000, \n            p.get_y() + (p.get_height()\/2), \n            '{:,.0f}'.format(p.get_width()),\n            ha=\"center\")\n    \nfor p in ax[1].patches:\n    ax[1].text(p.get_width() + 0.001, \n            p.get_y() + (p.get_height()\/2), \n            '{:,.1%}'.format(p.get_width()),\n            ha=\"center\")\n    \nax[0].set_ylabel('Browsers', size=14, color=\"#0D47A1\")\nax[0].set_xlabel('Total Number of Transactions', size=14, color=\"#0D47A1\")\n\nax[1].set_ylabel('', size=14, color=\"#0D47A1\")\nax[1].set_xlabel('% of Transactions with revenue', size=14, color=\"#0D47A1\")\n\nplt.show()","6b120fa5":"**Thanks for viewing my Kernel! If you like my work and find it useful, please leave an upvote! :)**\n\nSome columns of the data are in JSON format. I have written a separate [kernel](https:\/\/www.kaggle.com\/arunsankar\/import-data-and-convert-into-table-format\/notebook) to parse the data and extract train and test tabular datasets. I will use the output files directly to save execution time. ","abdf9602":"Submission has less records than test. That is because the objective is to predict log revenue for each unique 'fullVisitorId'.","495a5766":"Only 1.4% of the visitors have resulted in some revenue. That is why it's very important to identify the customers with revenue potential","8a311252":"Mobile device visits generate revenue only from 0.4% of transactions whereas non-mobile devices generate revenue from 1.6% of transactions. Despite the industries' focus on mobile, mobile has really not come closer to non-mobile devices. ","7623fb07":"**Key insights:**\n* Only 1.4% of the visitors in training set have resulted in revenue. That is why it's critical to identify the customers with revenue potential\n* Mobile device visits generate revenue only from 0.4% of transactions whereas non-mobile devices generate revenue from 1.6% of transactions. Despite the industries' focus on mobile, mobile has really not come closer to non-mobile devices. \n* Even the average revenue per transaction of non-mobile devices are twice more than that of mobile devices.\n* Chrome browser has the most number of transactions and the highest % of transactions with revenue (almost 3 times more than any other browser). On % of transactions with revenue, Chrome is followed by Internet Explorer, Edge, Firefox and then Safari. \n\nNote: I have commented the code for test and submission data explorations for faster execution. ","bd3afaa2":"Indicator to identify a non-revenue and revenue transaction.","f2c88456":"Even the average revenue per transaction of non-mobile devices are twice more than that of mobile devices.","7184164c":"Chrome browser has the most number of transactions and the highest % of transactions with revenue (almost 3 times more than any other browser). On % of transactions with revenue, Chrome is followed by Internet Explorer, Edge, Firefox and then Safari. ","054af7e6":"**More to come..**"}}