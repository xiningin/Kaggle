{"cell_type":{"334384cc":"code","95104a77":"code","f7655056":"code","96774b0b":"code","d79186c1":"code","aa7f8cbc":"code","3851ab86":"code","42eb2b88":"code","3e450ede":"code","07b5f38b":"code","5eb4a252":"code","4353195f":"code","9bb93377":"code","60af4bf6":"code","3b1d99db":"code","5252e1b8":"code","b25682db":"code","422e758f":"code","3956c66b":"code","ad4b7d02":"code","316ca5a1":"code","6e525b77":"code","cc189dc0":"markdown","f8eec52a":"markdown","29ae4d28":"markdown","900b135f":"markdown","2cca84a5":"markdown","f54df282":"markdown","b37ca4a7":"markdown","823a3c1f":"markdown","1667382b":"markdown","00074406":"markdown","21ab6320":"markdown","54cd7ea6":"markdown","9e6779bb":"markdown","19c27883":"markdown","aee2d5e2":"markdown"},"source":{"334384cc":"import numpy as np \nimport pandas as pd \nfrom collections import Counter\nfrom statistics import *","95104a77":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport squarify\nfrom wordcloud import WordCloud\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot","f7655056":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","96774b0b":"data2013=pd.read_excel(open('..\/input\/impact-factor-of-top-1000-journals\/Impact-Factor-Ratings.xlsx','rb'),sheet_name='2013')\ndata2014=pd.read_excel(open('..\/input\/impact-factor-of-top-1000-journals\/Impact-Factor-Ratings.xlsx','rb'),sheet_name='2014')\ndata2015=pd.read_excel(open('..\/input\/impact-factor-of-top-1000-journals\/Impact-Factor-Ratings.xlsx','rb'),sheet_name='2015')\ndata2016=pd.read_excel(open('..\/input\/impact-factor-of-top-1000-journals\/Impact-Factor-Ratings.xlsx','rb'),sheet_name='2016')\ndata2017=pd.read_excel(open('..\/input\/impact-factor-of-top-1000-journals\/Impact-Factor-Ratings.xlsx','rb'),sheet_name='2017')\ndata2018=pd.read_excel(open('..\/input\/impact-factor-of-top-1000-journals\/Impact-Factor-Ratings.xlsx','rb'),sheet_name='2018')\ndata2019=pd.read_excel(open('..\/input\/impact-factor-of-top-1000-journals\/Impact-Factor-Ratings.xlsx','rb'),sheet_name='2019')","d79186c1":"data2013.columns = data2013.columns.str.replace(' ', '_')\ndata2013['Starting_year']=2010\ndata2013['Ending_year']=2013\ndata2013=data2013.rename(columns={'2010-13_Citations':'Citations',\n                        '2010-13_Documents':'Documents',\n                        '%_Cited':'%Cited'})\n\ndata2014.columns = data2014.columns.str.replace(' ', '_')\ndata2014['Starting_year']=2011\ndata2014['Ending_year']=2014\ndata2014=data2014.rename(columns={'2011-14_Citations':'Citations',\n                        '2011-14_Documents':'Documents',\n                        '%_Cited':'%Cited'})\n\ndata2015.columns = data2015.columns.str.replace(' ', '_')\ndata2015['Starting_year']=2012\ndata2015['Ending_year']=2015\ndata2015=data2015.rename(columns={'2012-15_Citations':'Citations',\n                        '2012-15_Documents':'Documents',\n                        '%_Cited':'%Cited'})\n\ndata2016.columns = data2016.columns.str.replace(' ', '_')\ndata2016['Starting_year']=2013\ndata2016['Ending_year']=2016\ndata2016=data2016.rename(columns={'2013-16_Citations':'Citations',\n                        '2013-16_Documents':'Documents',\n                        '%_Cited':'%Cited'})\n\ndata2017.columns = data2017.columns.str.replace(' ', '_')\ndata2017['Starting_year']=2014\ndata2017['Ending_year']=2017\ndata2017=data2017.rename(columns={'2014-17_Citations':'Citations',\n                        '2014-17_Documents':'Documents',\n                        '%_Cited':'%Cited'})\n\ndata2018.columns = data2018.columns.str.replace(' ', '_')\ndata2018['Starting_year']=2015\ndata2018['Ending_year']=2018\ndata2018=data2018.rename(columns={'2015-18_Citations':'Citations',\n                        '2015-18_Documents':'Documents',\n                        '%_Cited':'%Cited'})\n\ndata2019.columns = data2019.columns.str.replace(' ', '_')\ndata2019['Starting_year']=2016\ndata2019['Ending_year']=2019\ndata2019=data2019.rename(columns={'2016-19_Citations':'Citations',\n                        '2016-19_Documents':'Documents',\n                        '%_Cited':'%Cited'})","aa7f8cbc":"frames = [data2013, data2014, data2015, data2016, data2017, data2018, data2019]\nresult_df = pd.concat(frames)","3851ab86":"result_df['Category']=result_df['Highest_percentile'].apply(lambda x:x.split('\\n')[2])","42eb2b88":"result_df['above2015'] = ['above2015'if i >=2015 else 'below2015'for i in result_df.Starting_year]","3e450ede":"arr = result_df['%Cited'].unique()\nprint(\"Median of %Cited Values: \",np.median(arr))\n\nresult_df['Median_of_Cited'] = ['higher72.5'if i >=72.5 else 'below72.5'for i in result_df['%Cited']]","07b5f38b":"result_df.info()","5eb4a252":"result_df.head()","4353195f":"category_count = Counter(result_df.Category)\nmost_common_categories = category_count.most_common(15)\nx,y = zip(*most_common_categories)\nx,y= list(x), list(y)\n\nplt.figure(figsize=(30,15))\nax=sns.barplot(x=y,y=x, palette=sns.cubehelix_palette(len(x)))\nplt.xticks(rotation=45)\nplt.title('Most Common 15 Categories ')","9bb93377":"category_df=pd.DataFrame()\ncategory_df['Category']=x\ncategory_df['Values']=y\n\ncategory_df","60af4bf6":"fig = plt.figure(figsize=(10,10))\nax = fig.add_axes([0,0,1,1])\nax.axis('equal')\nax.pie(category_df.Values, labels =category_df.Category ,autopct='%1.2f%%')\nplt.show()","3b1d99db":"sns.swarmplot(x='above2015',y='Citations',hue='Median_of_Cited',data=result_df)\nplt.show()","5252e1b8":"def drawThis(a,i):\n    sns.countplot(x=result_df[a],  palette=\"Set2\",ax=axs[i])\n    axs[i].set_title(a, color='blue', fontsize=15)\n    \n\na=['Median_of_Cited','above2015']\niterr= 0\n\nnumToPlot = len(a)\nfig, axs =plt.subplots(ncols=numToPlot)\nplt.subplots_adjust(right=2, wspace = 0.5)\nfor i in a:\n    drawThis(i,iterr)\n    iterr +=1","b25682db":"plt.style.use(\"classic\")\nsns.distplot(result_df['%Cited'], color='blue')\nplt.xlabel(\"Cited\")\nplt.ylabel(\"Count\")\nplt.show()","422e758f":"sns.violinplot(x =result_df['Ending_year'], y =result_df['SJR'], hue =result_df['Median_of_Cited'], split = True)","3956c66b":"sns.violinplot(x =result_df['Ending_year'], y =result_df['SNIP'], hue =result_df['Median_of_Cited'], split = True)","ad4b7d02":"sns.stripplot(x ='Ending_year', y ='SJR', data = result_df,\n              jitter = True, hue ='Median_of_Cited', dodge = True)","316ca5a1":"plt.style.use(\"fivethirtyeight\")\nplt.figure(figsize=(16, 6))\nsns.kdeplot(result_df.loc[result_df['Category'] == 'General Medicine', '%Cited'], label = 'General Medicine',shade=True)\nsns.kdeplot(result_df.loc[result_df['Category'] == 'Cardiology and Cardiovascular Medicine', '%Cited'], label = 'Cardiology and Cardiovascular Medicine',shade=True)\nsns.kdeplot(result_df.loc[result_df['Category'] == 'Oncology', '%Cited'], label = 'Oncology',shade=True)\nsns.kdeplot(result_df.loc[result_df['Category'] == 'Ecology, Evolution, Behavior and Systematics', '%Cited'], label = 'Ecology, Evolution, Behavior and Systematics',shade=True)","6e525b77":"x2020=result_df.Category\nplt.subplots(figsize=(10,19))\nwordcloud = WordCloud(background_color = 'white',\n                     width=512,\n                     height=384).generate(\"\".join(x2020))\n\nplt.imshow(wordcloud)\nplt.axis('off')","cc189dc0":"# Information about Data","f8eec52a":"# Contents","29ae4d28":"**EDA libs**","900b135f":"# **Import Libraries**","2cca84a5":"- Information about Data\n- Installation and Imports\n- Data Preprocessing\n- EDA \n- Visualizations","f54df282":"- Dataset Name: Impact factor of top 1000 journals\n- What does it include?: Impact factor of top 1000 journals with detailed scores from last 7 years\n- - Table 2013 has got rows : 1000 columns: 9\n- - Table 2014 has got rows : 1000 columns: 9\n- - Table 2015 has got rows : 1000 columns: 9\n- - Table 2016 has got rows : 1000 columns: 9\n- - Table 2017 has got rows : 1000 columns: 9\n- - Table 2018 has got rows : 1000 columns: 9\n- - Table 2019 has got rows : 1000 columns: 9","b37ca4a7":"**Find and add new Column**","823a3c1f":"![_carousel%20banners_call_for_papers.jpg](attachment:_carousel%20banners_call_for_papers.jpg)","1667382b":"# **EDA**","00074406":"# # **Data Preprocessing**","21ab6320":"**Visualization Libs**","54cd7ea6":"**Data Frames**","9e6779bb":"# **Read & Clean Data**","19c27883":"**Concate DataFrames**","aee2d5e2":"# Introduction"}}