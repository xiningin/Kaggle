{"cell_type":{"811cd137":"code","138d1112":"code","936f9db9":"code","3f7c423e":"code","51ace91a":"code","ecda977c":"code","9d033b8c":"code","f5146979":"code","060f8c5c":"code","2ea5c4da":"code","a42f9a33":"code","9d0a46a3":"code","01e58af1":"code","e1bcbccc":"code","5b687133":"code","730232bd":"code","9837ae68":"code","2875af93":"code","685b6117":"code","aab25033":"code","43ad4267":"code","0589da5b":"code","4247147b":"code","b4acbae6":"code","b045b0f8":"code","c7ab98ce":"code","2bb9e8b0":"code","2cdb1d5d":"code","f3bc820e":"code","2c05c4a4":"code","652b7389":"code","0501ee69":"code","3a67e166":"code","7d22b022":"code","6b58f469":"code","4ff1e601":"code","6595659e":"code","db90bb70":"code","aa5825e0":"code","89dd06e4":"code","c94a4c31":"markdown","f1d18839":"markdown","c7cd3778":"markdown","8314082a":"markdown","fc15e71b":"markdown","91222623":"markdown","54ae0c30":"markdown","63e051b2":"markdown","d68d003c":"markdown","c0a0d8df":"markdown","eeac64dc":"markdown","42cf7893":"markdown","837a5e6f":"markdown","063c214f":"markdown","03e4f95f":"markdown","30c0d016":"markdown","cefa4b24":"markdown","a2035f45":"markdown","2c33f9ac":"markdown","2223d359":"markdown","92698da4":"markdown","dda5affa":"markdown","a1b55930":"markdown","9c420233":"markdown","ecba3b07":"markdown","f8b9707f":"markdown"},"source":{"811cd137":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","138d1112":"df = pd.read_csv('\/kaggle\/input\/books.csv',error_bad_lines=False)","936f9db9":"df.info()","3f7c423e":"df.isna().sum()","51ace91a":"df.describe(include='all')\n# this one might not always useful\n# count, unique, min, max ","ecda977c":"df.corr()","9d033b8c":"# to have a copy of data frame for comparing before and after change of data cleaning\ndata = df.copy()\ndf.head(5)","f5146979":"# select the 1st author\ndata['authors'] = data['authors'].apply(lambda x: x.split(\"-\")[0])\ndata.head(5)","060f8c5c":"freq = data['language_code'].value_counts()[0:10].to_frame()\nfreq","2ea5c4da":"freq = data['language_code'].value_counts()[0:5].to_frame()\nfreq","a42f9a33":"freq = data['authors'].value_counts()[0:5].to_frame()\n#print(type(freq))\nfreq","9d0a46a3":"req = data.groupby(pd.cut(data['average_rating'], [0,1,2,3,4,5]))\nreq = req[['ratings_count']]  ## to dataframe\n#print(type(req))\nreq.sum().reset_index()","01e58af1":"newdf = data[data.average_rating>=4.5]\nfreq = newdf['authors'].value_counts()[0:5].to_frame()\nfreq","e1bcbccc":"data[(data.average_rating>=4.5) & (data.authors == 'Bill Watterson')]","5b687133":"data[(data.average_rating>=4.5) & (data.authors == 'J.K. Rowling')]","730232bd":"data[(data.average_rating>=4.5) & (data.authors.str.contains('Rowling') )]","9837ae68":"#Create a reference table \ndfLang = pd.DataFrame(columns=['language_code', 'language_name'])\ndfLang = dfLang.append({'language_code': 'eng', 'language_name': 'English'}, ignore_index=True)\ndfLang = dfLang.append({'language_code': 'cho', 'language_name': 'Chinese'}, ignore_index=True)\ndfLang = dfLang.append({'language_code': 'en-US', 'language_name': 'English'}, ignore_index=True)\ndfLang = dfLang.append({'language_code': 'en-GB', 'language_name': 'English'}, ignore_index=True)\ndfLang = dfLang.append({'language_code': 'ger', 'language_name': 'German'}, ignore_index=True)\ndfLang = dfLang.append({'language_code': 'fre', 'language_name': 'French'}, ignore_index=True)\n\ndfLang","2875af93":"# full outer Join\ndf_outer = pd.merge(data, dfLang, on='language_code', how='outer')\ndf_outer.count().to_frame()\n","685b6117":"# linner Join\ndf_outer = pd.merge(data, dfLang, on='language_code', how='inner')\ndf_outer.count().to_frame()\n","aab25033":"# left outer Join\ndf_outer = pd.merge(data, dfLang, on='language_code', how='left')\ndf_outer.count().to_frame()\n","43ad4267":"# right Join\ndf_outer = pd.merge(data, dfLang, on='language_code', how='right')\ndf_outer.count().to_frame()\n","0589da5b":"# Union all, not remove duplicates\ndf1= data[(data.average_rating>=4.5) & (data.authors == 'Bill Watterson')]\ndf2= data[(data.average_rating>=4.5) & (data.authors == 'J.K. Rowling')]\ndfUnion = pd.concat([\n    df1,df2,df2\n],ignore_index=True)\ndfUnion.count().to_frame()","4247147b":"# Union , remove duplicates\ndf1= df[(data.average_rating>=4.5) & (data.authors == 'Bill Watterson')]\ndf2= df[(data.average_rating>=4.5) & (data.authors == 'J.K. Rowling')]\ndfUnion = pd.concat([\n    df1,df2,df2\n],ignore_index=True).drop_duplicates().reset_index(drop=True)\ndfUnion.count().to_frame()","b4acbae6":"# Import required libaries\nimport matplotlib.pyplot as plt\nimport seaborn as sns","b045b0f8":"\nbins = (0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5)\narr=plt.hist(data['average_rating'],alpha=.5,bins=bins,color='blue')\nplt.xticks((0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5))\nplt.title('Average Ratings')\nplt.xlabel('Rating')\nplt.ylabel('Frequency')\n_ = plt.xlim(right=5.5)\nfor i in range(len(bins)-1):\n    plt.text(arr[1][i],arr[0][i],str(arr[0][i]))","c7ab98ce":"\nsns.violinplot(x=data['average_rating'])\nplt.xlim(0,5)\nplt.xlabel('Rating (0 to 5 stars)')\nplt.title('Distribution of average rating on goodreads')\n_ = plt.style.use('seaborn-white')","2bb9e8b0":"plt.style.use('seaborn-white')\nplt.scatter(data['ratings_count'],data['text_reviews_count'])\nplt.title('Rating Count vs. Review Count')\nplt.xlabel('Rating Count')\nplt.ylabel('Review Count')\nplt.xlim(0)\n","2cdb1d5d":"plt.style.use('seaborn-white')\nplt.scatter(data['# num_pages'],df['text_reviews_count'])\nplt.title('Number of Page vs. Review Count')\nplt.xlabel('Number of Page')\nplt.ylabel('Review Count')\nplt.xlim(0)\n","f3bc820e":"\nf,ax = plt.subplots(figsize=(4, 4))\nplt.show()\n#f and ax control the subplots size\n","2c05c4a4":"f,ax = plt.subplots(figsize=(8, 8))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.2f',ax=ax)\nplt.show()\n\n#annot=True to display the correction value\n#fmt= '.2f' how many digits after decimal point\n#linewidths=0.5 line width                                         ","652b7389":"data.boxplot(column='average_rating')","0501ee69":"plt.figure(1, figsize=(15, 7))\nplt.title(\"Which aurthor wrote maximum books\")\nsns.countplot(x = \"authors\" ,order=data['authors'].value_counts().index[0:10] ,data=df)\n","3a67e166":"top10Authors = data['authors'].value_counts()[0:10].to_frame()\nplt.figure(figsize=(15,10))\nsns.barplot(top10Authors['authors'], top10Authors.index, palette='Set3')","7d22b022":"sns.distplot(data['average_rating'], \n             kde_kws={\"color\": \"coral\", \"lw\": 1, \"label\": \"KDE\"}, \n             hist_kws={\"histtype\": \"stepfilled\", \"linewidth\": 1, \"alpha\": 1, \"color\": \"skyblue\"});","6b58f469":"top10NumofPages = data.sort_values('# num_pages', ascending = False).head(10).set_index('title')\nplt.figure(figsize=(15,10))\nsns.barplot(top10NumofPages['# num_pages'], top10NumofPages.index, palette='Set3')","4ff1e601":"# This code is copied from https:\/\/www.kaggle.com\/bellali\/select-which-book-to-enjoy\n# select data\ndata_2 = data[data['authors'].isin(['George R.R. Martin', 'J.R.R. Tolkien', 'J.K. Rowling'])]\ndata_2 = data_2.query('language_code == \"eng\"')\n#data_2.head()\n# classify the rating level\nbin_edges = [3.5, 4.0, 4.5, 5.0]\nbin_names = ['low', 'medium', 'high']\ndata_2['rating_levels'] = pd.cut(data_2['average_rating'], bin_edges, labels=bin_names)\ndata_2.head()","6595659e":"#data_3 = pd.DataFrame(data_2.groupby('authors')['rating_levels'].value_counts().unstack().fillna(0))\ndata_3 = pd.DataFrame(data_2.groupby('authors')['rating_levels'].value_counts())\ndata_3","db90bb70":"#data_3 = pd.DataFrame(data_2.groupby('authors')['rating_levels'].value_counts().unstack().fillna(0))\ndata_3 = pd.DataFrame(data_2.groupby('authors')['rating_levels'].value_counts().unstack())\ndata_3","aa5825e0":"#data_3 = pd.DataFrame(data_2.groupby('authors')['rating_levels'].value_counts().unstack().fillna(0))\ndata_3 = pd.DataFrame(data_2.groupby('authors')['rating_levels'].value_counts().unstack().fillna(0))\ndata_3","89dd06e4":"# This code is copied from https:\/\/www.kaggle.com\/bellali\/select-which-book-to-enjoy\n# Pie chart\nlabels = 'high', 'low', 'medium'\nexplode = (0.1, 0, 0)\nfig1, [ax1, ax2, ax3] = plt.subplots(1, 3, figsize = (12,4))\n\n# George R.R. Martin\nax1.pie(data_3.iloc[0], explode=explode, labels=labels, autopct='%1.1f%%', shadow=True, startangle=90)\nax1.set_title('George R.R. Martin')\nax1.axis('equal')\n# J.K. Rowling\nax2.pie(data_3.iloc[1], explode=explode, labels=labels, autopct='%1.1f%%', shadow=True, startangle=90)\nax2.set_title('J.K. Rowling')\nax2.axis('equal')\n# J.R.R. Tolkien\nax3.pie(data_3.iloc[2], explode=explode, labels=labels, autopct='%1.1f%%', shadow=True, startangle=90)\nax3.set_title('J.R.R. Tolkien')\nax3.axis('equal')\n\nplt.show()","c94a4c31":"Get the top 5 based on count by language_code.<br>\n\nThis one is easier than SQL.<br>\nSQL need to have a derived table to filter out the top 5<br>\n**In SQL:**\n\n    select dt.* \n    from\n    (\n    select language_code,count(*) as cnt\n    from books\n    group by language_code\n    ) dt\n    order by dt.cnt desc\n    limit 5","f1d18839":"**2. Data Cleaning**","c7cd3778":"**Distribution Plot**","8314082a":"skipped line with issues (having extra comma in the content)","fc15e71b":"**Count Plot**","91222623":"**1. Read data**","54ae0c30":"**Union with two data Frames**\n\nUnion vs Union All","63e051b2":"**Very basic data analysis with GoodReads Books data from a SQL background python learner**\n* Read Data\n* Data Clean\n* Basic Analysi\n* Basic Diagram\n<br>\n<br>\n\nThis notebook will be updated regularly to reflect the learning from others notes. \n\nOf cousre, I appreciate supports and encourages from everyone by click on upnotes and any comments is welcome.","d68d003c":"**Boxplot**","c0a0d8df":"**3.Basic Analysis **","eeac64dc":"**Filter using Like**","42cf7893":"aggregation<br\/>\ncount by language_code<br\/>\n**In SQL:**\n\n    select language_code,count(*)\n    from books\n    group by language_code;\n\n","837a5e6f":"**Heat Map**","063c214f":"check the first 5 rows<br\/>\n**In SQL:**\n\n    select * from books limit 5;\n","03e4f95f":"Use filter <br>\n\nGet the top 5 based on count by authors<br>\nand the average_rating>=4.5 <br>\n**In SQL:**\n\n    select dt.* \n    from\n    (\n    select language_code,count(*) as cnt\n    from books\n    where average_rating>=4.5 \n    group by language_code\n    ) dt\n    order by dt.cnt desc\n    limit 5\n","30c0d016":"Things to look at:\n1. Kaggle bot\n2. Data Cleaning","cefa4b24":"**Pie Chart**","a2035f45":"Two filters<br>\n\n**IN SQL:**\n\n    select * from books\n    where average_rating>=4.5 \n    and authors = 'Bill Watterson'\n","2c33f9ac":"Get the top 5 based on count by authors<br>","2223d359":"**Join with two data Frames**\n\n1. Full Outer Join\n1. Inner Join \n1. Left Outer Join \n1. Right Outer Join","92698da4":"**Histgram**","dda5affa":"**Barplot**","a1b55930":"**3.Basic Diagram<br>**\n1. Histgram\n2. Violin plot\n3. Scatter diagram\n4. Heat Map\n5. Box plot\n6. Count plot\n7. Distribution plot\n<br>\n","9c420233":"**Sactter diagram**","ecba3b07":"**ViolinPlot**","f8b9707f":"A quick way to show if there is a corralted fields in the dataset, from table above, you can see a big corrlation (0.86) between ratings_count and text_reviews_count, which makes sense."}}