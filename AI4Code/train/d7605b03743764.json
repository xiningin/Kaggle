{"cell_type":{"a7cd43b5":"code","1a91327c":"code","e36a19c1":"code","6c530de3":"code","7b8fefae":"code","f6140b0d":"code","048a45a1":"code","022ab042":"code","6d8fe24a":"code","43b3fc7e":"code","3fbf6b18":"code","f713bd1e":"code","e5f6364b":"code","062f2fc5":"code","e2e651e4":"code","38dfeae9":"code","e2f89976":"code","a9de62c9":"code","ac56659e":"code","3d7da2b6":"code","d627b521":"code","1d1fec1f":"code","711f4943":"code","e6ae36bf":"code","7b74a523":"markdown","3d269789":"markdown","10fe7bce":"markdown","be257281":"markdown","7d8a161f":"markdown","2fe859c2":"markdown","4b221580":"markdown","4cf02c69":"markdown","feedb958":"markdown","3e7520ed":"markdown","1382a67c":"markdown","5c1e3943":"markdown"},"source":{"a7cd43b5":"import pandas as pd\nimport numpy as np","1a91327c":"df_2015 = pd.read_csv(\"..\/input\/2015.csv\");","e36a19c1":"df_2015.drop('Standard Error', axis=1, inplace=True)\n","6c530de3":"df_2015.head()","7b8fefae":"df = df_2015[['Country', 'Happiness Score']].sort_values('Happiness Score', ascending=False).nlargest(10, 'Happiness Score')\n\ndf.plot.bar(x='Country',y='Happiness Score')","f6140b0d":"import seaborn as sns","048a45a1":"corr = df_2015.corr()\nsns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values)","022ab042":"import matplotlib.pyplot as plt\n\nfig, axes = plt.subplots(figsize=(10, 7))\ncorr = df_2015.corr()\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\nwith sns.axes_style(\"white\"):\n    ax = sns.heatmap(corr,linewidths=1,annot=True, mask=mask, vmax=.3, square=True)\naxes.set_title(\"2015\")","6d8fe24a":"!pip -q install ggplot\n\n","43b3fc7e":"\nimport ggplot\n...\/site-packages\/ggplot\/stats\/smoothers.py\nggplot(df_2015, aes(x=\"Freedom\", y=\"Happiness Score\",color=\"Region\",size = 'Happiness Score')) + geom_point(size=200)","3fbf6b18":"from ggplot import *\nggplot(df_2015, aes(x=\"Health (Life Expectancy)\", y=\"Happiness Score\",color=\"Region\",size = 'Happiness Score')) + geom_point(size=200)","f713bd1e":"from ggplot import *\nggplot(df_2015, aes(x=\"Trust (Government Corruption)\", y=\"Happiness Score\",\n                               color=\"Region\",size = 'Happiness Score')) + geom_point(size=200)","e5f6364b":"import matplotlib.pyplot as plt","062f2fc5":"g = sns.FacetGrid(df_2015) \ng.map(sns.regplot, \"Family\",\"Economy (GDP per Capita)\")\ng.add_legend()","e2e651e4":"g = sns.pairplot(df_2015[['Happiness Score','Economy (GDP per Capita)','Family','Health (Life Expectancy)']],kind = \"reg\")","38dfeae9":"df_2015 = df_2015.drop(columns = ['Happiness Rank'],axis = 1)\n","e2f89976":"df_2015.head()","a9de62c9":"from sklearn import linear_model\nfrom sklearn.model_selection import train_test_split\n\nfeature_col_names=[\"Economy (GDP per Capita)\",'Family','Health (Life Expectancy)','Freedom','Trust (Government Corruption)','Generosity','Dystopia Residual']\nscore=['Happiness Score']\n\nX = df_2015[feature_col_names].values\ny =df_2015[score].values\nsplit_size=0.3\n\nX_train, X_test,y_train,y_test= train_test_split(X,y ,test_size=split_size)\n\n#training\nmlregr=linear_model.LinearRegression()\nmlregr.fit(X_train,y_train)","ac56659e":"from sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\n#predicting\ny_pred= mlregr.predict(X_test)\n\n#for i in range(len(y_test)):\n    #print (\"Actual:\" ,y_test[i] ,\" Predicted with linear regression:\" ,y_pred[i])\n    \nprint(\"Coefficients: \", mlregr.coef_)\nprint(\"Intercepts:  \" , mlregr.intercept_)\nprint(\"Mean squared error: %.2f\"\n      % mean_squared_error(y_test,y_pred))\n# Explained variance score: 1 is perfect prediction\nprint('Variance score: %.2f' % r2_score(y_test,y_pred))\n#\n","3d7da2b6":"plt.scatter(y_test,y_test)\nplt.plot(y_test,y_pred,linewidth=1)\nplt.xlabel(\"Actual\")\nplt.ylabel(\"Predicted\")\nplt.show()","d627b521":"from sklearn import svm\n\nsvr= svm.SVR(gamma='scale')\nsvr.fit(X,y.ravel())","1d1fec1f":"y_pred_svr=svr.predict(X_test)","711f4943":"print(\"Mean squared error: %.2f\"\n      % mean_squared_error(y_test,y_pred_svr))\n# Explained variance score: 1 is perfect prediction\nprint('Variance score: %.2f' % r2_score(y_test,y_pred_svr))","e6ae36bf":"#Plotting Predicted vs Actual Happiness Score\n\nplt.scatter(y_test,y_test)\nplt.plot(y_test,y_pred_svr)\nplt.xlabel(\"Actual\")\nplt.ylabel(\"Predicted\")\nplt.show()","7b74a523":"## Load the Data","3d269789":"## Dataset Cleansing\n\n","10fe7bce":"Drop the Happiness Rank from training datasets since it is perfectly correlated with Happiness Score.","be257281":"### Linear Model","7d8a161f":"###SVM\n","2fe859c2":"## EDA","4b221580":"### Correlation heatmap ","4cf02c69":"## Create Training and Test *Set*","feedb958":"## Machine Learning Model ","3e7520ed":"#### Combine three datasets into one and create new column Year","1382a67c":"### Faceted Plot\npackages and code: https:\/\/plot.ly\/python\/facet-plots\/","5c1e3943":"###Pairplot"}}