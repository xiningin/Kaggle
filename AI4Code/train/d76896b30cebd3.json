{"cell_type":{"584a36a7":"code","cb6dd3c6":"code","e0ea0373":"code","c66f26fb":"code","0209ba93":"code","860ca0c6":"code","39494512":"code","b668425e":"code","2153b2a0":"code","94d2124e":"code","62acf466":"code","fe6a6a39":"code","928b9b7e":"code","1c929c55":"code","e33b2ad7":"code","e6b74760":"code","87278732":"code","c37a0775":"code","e7f39bee":"code","aba1307f":"code","aaf89f3d":"code","ad6e8149":"code","e263e102":"code","2d9d26dd":"code","23f3fdb8":"code","8d119a2e":"markdown","40232f5c":"markdown","ce241fa7":"markdown","3f46cd2d":"markdown","04d0b1a7":"markdown","1375e153":"markdown","66e3e2ac":"markdown","b1639607":"markdown","475c7548":"markdown","ebcb4625":"markdown","8b53e5fe":"markdown","816a3eb8":"markdown"},"source":{"584a36a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cb6dd3c6":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport plotly\nfrom plotly import tools\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\ninit_notebook_mode(connected=True)\nimport warnings\nwarnings.filterwarnings('ignore')","e0ea0373":"df = pd.read_csv('..\/input\/kickstarter-projects\/ks-projects-201801.csv')\ndf","c66f26fb":"df['deadline']=pd.to_datetime(df['deadline'], format=\"%Y\/%m\/%d\").dt.date\ndf['launched']=pd.to_datetime(df['launched'], format=\"%Y\/%m\/%d\").dt.date\ndf.head(5)","0209ba93":"df = df.drop(['ID','goal','pledged','usd_pledged_real'],1)# cleaninng data \ndf['duration(days)'] = (df['deadline'] - df['launched']).dt.days # to count number of days taken \ndf['launch_year']=pd.to_datetime(df['launched'], format=\"%Y\/%m\/%d\").dt.year\ndf.head()","860ca0c6":"df['state'].describe() # top is failed","39494512":"import matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nsns.set(rc={'figure.figsize':[15,15]},font_scale=0.7)","b668425e":"sns.displot(df['state'],color='m')","2153b2a0":"df['main_category'].describe() #top is Film & Video","94d2124e":"sns.displot(df['main_category'],color='r')","62acf466":"main_cat = df.main_category.value_counts()\ngo1 = go.Bar(\n            x=main_cat.index,\n            y=main_cat.values,\n            marker=dict(\n                color='rgb(158,202,225)',\n                line=dict(\n                    color='rgb(8,48,107)',\n                    width=1.5),\n            ),\n            opacity=0.6\n        )\n\ndata = [go1]\nlayout=go.Layout(title=\"Distribution of main_category\", xaxis={'title':'main_category'}, yaxis={'title':'main_category'}, width=600, height=400)\nfigure=go.Figure(data=data,layout=layout)\niplot(figure)","fe6a6a39":"sns.displot(df['category'])","928b9b7e":"go1 = go.Bar(\n            x=df.category.value_counts()[:20].index,\n            y=df.category.value_counts()[:20].values,\n            marker=dict(\n                color='rgb(158,202,225)',\n                line=dict(\n                    color='rgb(8,48,107)',\n                    width=1.5),\n            ),\n            opacity=0.6\n        )\ndata = [go1]\nlayout=go.Layout(title=\"Distribution of Top 20 Categories\", xaxis={'title':'Category'}, yaxis={'title':'No of Campaigns'}, width=600, height=400)\nfigure=go.Figure(data=data,layout=layout)\niplot(figure)","1c929c55":"sns.displot(df['country'],color='g')","e33b2ad7":"df['launch_year']=pd.to_datetime(df['launched'], format=\"%Y\/%m\/%d\").dt.year\n","e6b74760":"vs = sns.countplot(df.launch_year)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Number of Campaigns\")\nplt.title('\"Number of Campaigns vs year')\nplt.show(vs)","87278732":"df","c37a0775":"failed = df.loc[df.state=='failed']\nsuccessful = df.loc[df.state=='successful']\ncanceled = df.loc[df.state=='canceled']\nprint('Mean duration of failed campaigns',failed['duration(days)'].mean())\nprint('Mean duration of successful campaigns',successful['duration(days)'].mean())\nprint('Mean duration of canceled campaigns',canceled['duration(days)'].mean())","e7f39bee":"df","aba1307f":"trace1 = go.Bar(\n            x=successful.category.value_counts()[:20].index,\n            y=successful.category.value_counts()[:20].values,\n            opacity=0.65\n        )\n\ntrace2 = go.Bar(\n            x=failed.category.value_counts()[:20].index,\n            y=failed.category.value_counts()[:20].values,\n            opacity=0.65\n        )\n\nfig = tools.make_subplots(rows=1, cols=2, subplot_titles=('Successful', 'Failed'))\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\n\nfig['layout'].update(height=300, width=900, title='Distribution of top 20 categories in Sucessful & Failed Campaigns')\n\niplot(fig)","aaf89f3d":"successful.groupby(['main_category']).mean()\n","ad6e8149":"df","e263e102":"sns.regplot(x='backers',y='usd pledged', data=successful)\n","2d9d26dd":"sns.regplot(x='usd pledged',y='duration(days)', data=successful)\n","23f3fdb8":"successful['success_measure'] = successful['usd pledged']\/successful['usd_goal_real']\nsuccessful_cleaned = successful[successful['usd_goal_real']>successful['usd_goal_real'].median()]\nsuccessful_cleaned.nlargest(10,'success_measure')","8d119a2e":"Distribution of Main Categories","40232f5c":"Distribution of Countries\n\n","ce241fa7":"Campaign Distribution over Years\n\n","3f46cd2d":"Success Measure\n\nI have made another column called \"success_measure\" by dividing the Pledged Amount by the Goal of the Campaign which gives an idea of how many times the goal, the pledged amount was. But the issue was a lot of campaigns had weird goals like 10 or amounts such as 200. To consider only serious campaigns I eliminated any campaign whose goal was below the median goal of all the campaigns and after that I got a list of the 10 most successful campaigns in Kickstarter","04d0b1a7":"Relation between Duration(Days) and Pledged Amount(USD)\n\n","1375e153":"Distribution of state","66e3e2ac":"EDA of Kickstarter Projects\n\nKickstarter is an American public-benefit corporation based in Brooklyn, New York, that maintains a global crowdfunding platform focused on creativity and merchandising. The company's stated mission is to \"help bring creative projects to life\"\n\nIn this exploratory data analysis I will try to find out a few interesting insights.","b1639607":"Distribution of main categories in Sucessful & Failed Campaigns\n\n","475c7548":"Distribution of Categories","ebcb4625":"of just 20 categories","8b53e5fe":"Mean duration of Failed, Successful and Cancelled Campaigns\n\n","816a3eb8":"Relation between Backers and Pledged Amount(USD)\n\n"}}