{"cell_type":{"038fdf2d":"code","6e62ff4b":"code","a327e633":"code","d00b23de":"code","47211c5a":"code","0a345934":"code","c5f91975":"code","60e1fef4":"code","bf12b9a7":"code","9f7d8c57":"code","66277e80":"markdown","5af3f049":"markdown"},"source":{"038fdf2d":"from IPython.display import clear_output\n! pip install scikit-learn --upgrade --force-reinstall\n! pip install --no-deps autoxgb\nclear_output()\n\nfrom autoxgb import AutoXGB\n\nimport numpy as np\nimport pandas as pd\n\nimport os\nimport random\nDEFAULT_RANDOM_SEED = 2021\ndef seedBasic(seed=DEFAULT_RANDOM_SEED):\n    random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    np.random.seed(seed)\n    \nseedBasic()","6e62ff4b":"TRAIN_PATH = \"..\/input\/titanic\/train.csv\"\nTEST_PATH = \"..\/input\/titanic\/test.csv\"\nSAMPLE_SUBMISSION_PATH = \"..\/input\/titanic\/gender_submission.csv\"\nSUBMISSION_PATH = \"submission.csv\"\nMID_RESULT_FOLDER = \"mid_result\"\n\nMID_TRAIN_PATH =\"mid_train.csv\"\nMID_TEST_PATH =\"mid_test.csv\"\nMID_RESULT_FOLDER = \"mid_result\"\n\nID = \"PassengerId\"\nTARGETS =[\"Survived\"]\nUSE_GPU =False\nNUM_FOLDS = 5\nRANDOM_SEED = 42\nNUM_TRIALS = 2\nTIME_LIMITS =10\nFAST = True","a327e633":"train = pd.read_csv(TRAIN_PATH)\ntest = pd.read_csv(TEST_PATH)","d00b23de":"#1. delete unnecessary columns\ndrop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin', 'SibSp','Parch']\ntrain = train.drop(drop_elements, axis = 1)\ntest = test.drop(drop_elements, axis = 1)\n\n#2.find null data and fill new data \ndef checkNull_fillData(df):\n    for col in df.columns:\n        if len(df.loc[df[col].isnull() == True]) != 0:\n            if df[col].dtype == \"float64\" or df[col].dtype == \"int64\":\n                df.loc[df[col].isnull() == True,col] = df[col].mean()\n            else:\n                df.loc[df[col].isnull() == True,col] = df[col].mode()[0]\n                \ncheckNull_fillData(train)\ncheckNull_fillData(test)\n\n#3.one hot encoding \nstr_list = [] \nnum_list = []\nfor colname, colvalue in train.iteritems():\n    if type(colvalue[1]) == str:\n        str_list.append(colname)\n    else:\n        num_list.append(colname)\n        \ntrain = pd.get_dummies(train, columns=str_list)\ntest = pd.get_dummies(test, columns=str_list)","47211c5a":"train.to_csv(MID_TRAIN_PATH,index=False)\ntest.to_csv(MID_TEST_PATH,index=False)","0a345934":"axgb=AutoXGB(\n    train_filename=MID_TRAIN_PATH,\n    output=MID_RESULT_FOLDER,\n    test_filename=MID_TEST_PATH,\n    idx=ID,\n    targets=TARGETS,\n    use_gpu=USE_GPU,\n    num_folds=NUM_FOLDS,\n    num_trials=NUM_TRIALS,\n    time_limit=TIME_LIMITS,\n    fast=FAST\n)\naxgb.train()","c5f91975":"mid_prediction = pd.read_csv(\".\/mid_result\/test_predictions.csv\")\nmid_prediction.head()","60e1fef4":"mid_prediction[\"Survived\"] = (mid_prediction[\"1\"] > 0.5).astype(int)\nmid_prediction.head()","bf12b9a7":"sub = pd.read_csv(SAMPLE_SUBMISSION_PATH)\nsub[\"Survived\"] = (mid_prediction[\"1\"] > 0.5).astype(int)\nsub.to_csv(SUBMISSION_PATH,index=False)","9f7d8c57":"sub.head()","66277e80":"# global variabels","5af3f049":"# AUtoXGB Auto Prection"}}