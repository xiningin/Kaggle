{"cell_type":{"4bfc2ea8":"code","f5e55e22":"code","67a14734":"code","a6b03104":"code","f1049d1e":"code","4a8b5549":"code","945c658b":"code","47f0a3de":"code","39cebd58":"code","0e329feb":"code","c5d85416":"code","af4fbe4b":"code","b19dfac1":"code","57996637":"code","ba72ee2d":"code","c8cb9629":"markdown"},"source":{"4bfc2ea8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f5e55e22":"data = pd.read_csv('\/kaggle\/input\/womens-international-football-results\/results.csv')","67a14734":"data.head()","a6b03104":"home_wins = np.where(data['home_score']>data['away_score'],1,0)","f1049d1e":"pd.Series(home_wins).value_counts().plot.bar()","4a8b5549":"# home percent win rate\npd.Series(home_wins).value_counts()[1] \/ (pd.Series(home_wins).value_counts()[1] + pd.Series(home_wins).value_counts()[0])","945c658b":"from sklearn.preprocessing import OneHotEncoder\n\nX = data[['home_team','away_team','tournament','country','neutral']]","47f0a3de":"cat_encoder = OneHotEncoder()\ngame_cat_1hot = cat_encoder.fit_transform(X)\n","39cebd58":"X_clean = game_cat_1hot.toarray()","0e329feb":"X_clean.shape","c5d85416":"y = home_wins","af4fbe4b":"from sklearn.model_selection import train_test_split\nX_train, X_test,y_train, y_test = train_test_split(X_clean,y, test_size=0.2, random_state=42)","b19dfac1":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import VotingClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\n\nlog_clf = LogisticRegression(solver=\"lbfgs\", random_state=42)\nrnd_clf = RandomForestClassifier(n_estimators=100, random_state=42)\nsvm_clf = SVC(gamma=\"scale\", random_state=42)\n\nvoting_clf = VotingClassifier(\n    estimators=[('lr', log_clf), ('rf', rnd_clf), ('svc', svm_clf)],\n    voting='hard')","57996637":"from sklearn.metrics import accuracy_score\n\nfor clf in (log_clf, rnd_clf, svm_clf, voting_clf):\n    clf.fit(X_train, y_train)\n    y_pred = clf.predict(X_test)\n    print(clf.__class__.__name__, accuracy_score(y_test, y_pred))","ba72ee2d":"y_pred = log_clf.predict(X_test)\nfrom sklearn.metrics import confusion_matrix\nconfusion_matrix(y_test, y_pred)\n","c8cb9629":"## Summary: try and predict who will win womend football game based on 'home_team','away_team','tournament','country', and whether or not it was a neutral stadium "}}