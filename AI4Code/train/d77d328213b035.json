{"cell_type":{"e3918a47":"code","8479c95a":"code","0b5b586f":"code","fe63a561":"code","5fa94532":"code","7abc02b1":"code","71f2963b":"code","895711d1":"markdown","aee781c3":"markdown"},"source":{"e3918a47":"import matplotlib.pyplot as plt\nimport seaborn as sns; sns.set()\nimport numpy as np\nimport pandas as pd\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","8479c95a":"from sklearn import datasets\nfrom sklearn.model_selection import train_test_split \n\niris = datasets.load_iris()\niris_data = pd.DataFrame(data= np.c_[iris['data'], iris['target']],\n                     columns= iris['feature_names'] + ['target'])\niris_data.head()","0b5b586f":"X = iris.data \ny = iris.target\nprint(y)\nprint(iris.target_names)","fe63a561":"X_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0)","5fa94532":"from sklearn.svm import SVC \nsvm_model_linear = SVC(kernel = 'linear', C = 1).fit(X_train, y_train) \n# linear : modelin evaluation de\u011ferlendirilmesi linear olarak se\u00e7iyoruz.\n# kernel'de c de\u011feri : regularization de\u011feridir. \n\nsvm_predictions = svm_model_linear.predict(X_test)","7abc02b1":"svm_predictions","71f2963b":"accuracy = svm_model_linear.score(X_test, y_test)\naccuracy","895711d1":"**Classification**","aee781c3":"# **Support Vector Machines**"}}