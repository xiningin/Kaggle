{"cell_type":{"cea02e1d":"code","15442984":"code","cca22390":"code","36bc276c":"code","f1b09665":"code","d6278686":"code","60c557f3":"code","13986f68":"code","067a45e6":"code","635ad4bf":"code","4759f502":"code","f25f2875":"code","b4585d46":"code","310e9bc6":"code","05f6b30d":"code","22665c1d":"code","3a6f03c4":"code","7bdf3c70":"code","635419fb":"code","9e99e03d":"code","f2b3ab70":"code","249769d7":"code","89b5b1cb":"code","29b451f7":"code","dea48e6b":"code","0aeb00c0":"code","425532a5":"code","f7129ba7":"code","6197c975":"code","59890730":"code","603f1768":"code","12dd0ebe":"markdown","083665bb":"markdown","caa4e66b":"markdown","1d943617":"markdown","3fe158de":"markdown","1b7ef8c8":"markdown","d823934f":"markdown","69c175dd":"markdown","5096ddcd":"markdown","16b31317":"markdown"},"source":{"cea02e1d":"import os\nimport datetime as dt\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","15442984":"input_dir = \"..\/input\"\nprint(os.listdir(input_dir))","cca22390":"raw_dir = \"..\/input\/data-science-for-good-careervillage\"\nprofessionals = pd.read_csv(os.path.join(raw_dir, 'professionals.csv'), parse_dates=True)\nstudents = pd.read_csv(os.path.join(raw_dir, 'students.csv'), parse_dates=True)","36bc276c":"examples_dir = os.path.join(input_dir,'cv-machine-learning-data-construction')\nexamples = pd.read_parquet(os.path.join(examples_dir,'positive_negative_examples.parquet.gzip'))","f1b09665":"examples.shape","d6278686":"examples.sample(10)","60c557f3":"print(examples[pd.isnull(examples['emails_date_sent'])].shape[0])\nprint(examples[(pd.isnull(examples['emails_date_sent'])) & (examples['matched']==1)].shape[0])","13986f68":"examples['emails_date_sent'] = examples.apply(lambda row: row['questions_date_added'] if pd.isnull(row['emails_date_sent']) else row['emails_date_sent'], axis=1)","067a45e6":"examples[pd.isnull(examples['emails_date_sent'])].shape","635ad4bf":"examples.sample(10)","4759f502":"examples['emails_date'] = examples['emails_date_sent'].dt.date\n","f25f2875":"activity_predictors_dir = os.path.join(input_dir,'cv-feature-engineering-activity-predictors')\nprint(os.listdir(activity_predictors_dir))","b4585d46":"days_from_joined_dates = pd.read_parquet(os.path.join(activity_predictors_dir,'days_from_joined_dates.parquet.gzip'))\ndays_from_joined_dates = days_from_joined_dates.stack().reset_index()\ndays_from_joined_dates = days_from_joined_dates.rename(columns={'level_0': 'activity_date',\n                                                                0:'days_from_joined_dates'})\ndays_from_joined_dates['activity_date'] = days_from_joined_dates['activity_date'].dt.date\ndays_from_joined_dates.dtypes","310e9bc6":"days_from_joined_dates.sample(3)","05f6b30d":"examples = examples.merge(days_from_joined_dates, \n                          left_on=['emails_date', 'answer_user_id'],\n                          right_on=['activity_date', 'professionals_id'], \n                          how='left')\nexamples = examples.drop(['activity_date', 'professionals_id'], axis=1)","22665c1d":"print(examples.shape)\nprint(examples.dropna().shape)","3a6f03c4":"examples['days_from_joined_dates'] = examples['days_from_joined_dates'].fillna(0)","7bdf3c70":"print(examples.shape)\nprint(examples.dropna().shape)","635419fb":"examples.sample(10)","9e99e03d":"days_from_last_activities = pd.read_parquet(os.path.join(activity_predictors_dir,'days_from_last_activities.parquet.gzip'))\ndays_from_last_activities = days_from_last_activities.stack().reset_index()\ndays_from_last_activities = days_from_last_activities.rename(columns={'level_0': 'activity_date',\n                                                                      0:'days_from_last_activities'})\ndays_from_last_activities['activity_date'] = days_from_last_activities['activity_date'].dt.date","f2b3ab70":"examples = examples.merge(days_from_last_activities, \n                          left_on=['emails_date', 'answer_user_id'],\n                          right_on=['activity_date', 'professionals_id'], \n                          how='left')\nexamples = examples.drop(['activity_date', 'professionals_id'], axis=1)","249769d7":"examples.sample(10)","89b5b1cb":"print(examples.shape)\nprint(examples.dropna().shape)","29b451f7":"examples['days_from_last_activities'] = examples.apply(lambda row: \n                                                       row['days_from_joined_dates'] if np.isnan(row['days_from_last_activities'])\n                                                       else row['days_from_last_activities'], axis=1)","dea48e6b":"print(examples.shape)\nprint(examples.dropna().shape)","0aeb00c0":"examples.sample(10)","425532a5":"window_days = [100000, 365, 30]\nfor window in window_days:\n    print('Process window: {}'.format(window))\n    col_name = 'professional_activities_sum_{}'.format(window)\n    cum_sum_professional_activities = pd.read_parquet(\n        os.path.join(activity_predictors_dir, 'professional_activities_sum_{}.parquet.gzip'.format(window)))\n    cum_sum_professional_activities = cum_sum_professional_activities.stack().reset_index()    \n    cum_sum_professional_activities = cum_sum_professional_activities.rename(columns={0:col_name})\n    cum_sum_professional_activities['activity_date'] = cum_sum_professional_activities['activity_date'].dt.date\n\n    examples = examples.merge(cum_sum_professional_activities, \n                              left_on=['emails_date', 'answer_user_id'],\n                              right_on=['activity_date', 'professionals_id'], \n                              how='left')\n    examples = examples.drop(['activity_date', 'professionals_id'], axis=1)\n    examples[col_name] = examples[col_name].fillna(0)\n    print(examples.head(3))","f7129ba7":"examples.shape","6197c975":"examples.sample(10)","59890730":"examples.to_parquet('positive_negative_examples.parquet.gzip', compression='gzip')","603f1768":"os.listdir()","12dd0ebe":"## II.1. Days From Joined Dates ##","083665bb":"# II. Loading and Joining Activity Predictors #","caa4e66b":"** Fill 0 for missing values of 'Days From Joined Dates' since these are more likely the cases when professionals join after the question creation date. **","1d943617":"** There are missing values on 'emails_date_sent' of some questions answered by professionals. We impute these missing values by the question creation date, i.e. 'questions_date_added'. These are the cases where answers for a question are not results of recommendations. **","3fe158de":"## II.3. Rolling Windowed Activity Counts ##","1b7ef8c8":"# I. Loading Relevant Data #","d823934f":"## I.2. Load Supervised Machine Learing Data Set ##","69c175dd":"## II.2. Days From Last Activities ##","5096ddcd":"** Fill missing values of 'Days From Last Activities' by the maximum value since these are more likely the cases when professionals are not active any more. **","16b31317":"## I.1. Loading Raw Data Tables ##"}}