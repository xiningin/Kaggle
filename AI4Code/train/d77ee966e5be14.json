{"cell_type":{"6b2919fa":"code","4d63a7c1":"code","71c1e014":"code","c193b476":"code","58f700a6":"code","079173fb":"code","24f14d34":"code","9b85075f":"code","06d51e98":"code","69afd8bc":"code","cf676b27":"code","7056f7ce":"code","942a1742":"code","d4e1818d":"code","448ac3a4":"code","0f564950":"code","5152662f":"code","53afefaa":"code","037c5b6f":"code","e81eea8c":"code","07c62666":"markdown","68ab46f0":"markdown","47fb96e9":"markdown","8f13c2a4":"markdown","538a47a4":"markdown","2d656f30":"markdown","7da7a33d":"markdown","db2e0003":"markdown"},"source":{"6b2919fa":"# \uc2dc\ud5d8\ud658\uacbd \uc138\ud305 (\ucf54\ub4dc \ubcc0\uacbd X, \uc2dc\ud5d8\ud658\uacbd\uacfc \uc720\uc0ac\ud558\uac8c \ud30c\uc77c\uc77d\uae30 \uad6c\ud604)\nimport pandas as pd\ndf = pd.read_csv(\"..\/input\/pima-indians-diabetes-database\/diabetes.csv\")\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test = train_test_split(df, test_size=0.2, shuffle=True, random_state=2021)\ny_train = X_train['Outcome']\nX_train = X_train.drop(columns=['Outcome'])\ny_test = X_test['Outcome']\nX_test = X_test.drop(columns=['Outcome'])\n\nX_train.shape, y_train.shape, X_test.shape, y_test.shape","4d63a7c1":"# \ub77c\uc774\ube0c\ub7ec\ub9ac\nimport pandas as pd\n# \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 (\uc0dd\ub7b5)\nX_train.shape, y_train.shape, X_test.shape","71c1e014":"print(X_train.head())\nprint(y_train.head())","c193b476":"X_train.describe()","58f700a6":"X_train.isnull().sum()","079173fb":"X_test.isnull().sum()","24f14d34":"X_train.info()","9b85075f":"y_train.value_counts()","06d51e98":"X_train.columns","69afd8bc":"## \ud3ec\ub3c4\ub2f9 \uc774\uc0c1\uce58 \uc0ad\uc81c\ndel_idx = X_train[(X_train['Glucose']==0)].index\ndel_idx","cf676b27":"print('Glucose \uc0ad\uc81c \uc804', X_train.shape, y_train.shape)\nX_train = X_train.drop(index=del_idx, axis=0)\ny_train = y_train.drop(index=del_idx, axis=0)\nprint('Glucose \uc0ad\uc81c \ud6c4', X_train.shape, y_train.shape)","7056f7ce":"##\ud3ec\ub3c4\ub2f9\uc744 \uc81c\uc678\ud55c \uc774\uc0c1\uce58 \ud3c9\uade0\uac12\uc73c\ub85c \ub370\uccb4\ncols = ['BloodPressure', 'SkinThickness', 'Insulin','BMI']\ncol_means = X_train[cols].mean()\nX_train[cols].replace(0,col_means)","942a1742":"# \ub370\uc774\ud130 \uc2a4\ucf00\uc77c\ub9c1 \ubc0f \ub370\uc774\ud130\ud504\ub808\uc784 \ubcc0\ud658\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nX_tr = scaler.fit_transform(X_train)\nX_te = scaler.transform(X_test)\nX_train_scaled = pd.DataFrame(data = X_tr, columns = X_train.columns)\nX_test_scaled = pd.DataFrame(data = X_te, columns = X_test.columns)","d4e1818d":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, roc_auc_score\nfrom sklearn.model_selection import GridSearchCV\n","448ac3a4":"# \uac80\uc99d\uc6a9 \ub370\uc774\ud130\uc14b \ubd84\ub9ac\ud558\uae30\nX_train_val, X_test_val, y_train_val, y_test_val = train_test_split(X_train_scaled, y_train, test_size = 0.2, random_state = 504)","0f564950":"# LogisticRegression\nlr = LogisticRegression()\nparams = {'penalty' : ['l2', 'l1'], 'C' : [0.01, 0.1, 1, 5, 10]}\n#grid = GridSearchCV(lr, param_grid = params, scoring = 'accuracy', cv = 3)\n#grid.fit(X_train_scaled, y_train)\n#grid.best_score_, grid.best_params_\nlr.fit(X_train_val, y_train_val)\nlr.score(X_train_val, y_train_val)","5152662f":"rf = RandomForestClassifier(max_depth=6, n_estimators=200)\nrf.fit(X_train_val, y_train_val)\nrf.score(X_train_val, y_train_val)","53afefaa":"# \ubaa8\ub378\uc120\ud0dd\nrf.fit(X_train_scaled, y_train)\nrf_pred = rf.predict(X_test_scaled)","037c5b6f":"output = pd.DataFrame({'idx': y_test.index, 'Outcome': predictions})\noutput.head()","e81eea8c":"# \uc218\ud5d8\ubc88\ud638.csv\ub85c \ucd9c\ub825\noutput.to_csv('010.csv', index=False)","07c62666":"## EDA","68ab46f0":"## [\ucc38\uace0]\uc791\uc5c5\ud6152 \ubb38\uad6c\n- \ucd9c\ub825\uc744 \uc6d0\ud558\uc2e4 \uacbd\uc6b0 print() \ud568\uc218 \ud65c\uc6a9\n- \uc608\uc2dc) print(df.head())\n- getcwd(), chdir() \ub4f1 \uc791\uc5c5 \ud3f4\ub354 \uc124\uc815 \ubd88\ud544\uc694\n- \ud30c\uc77c \uacbd\ub85c \uc0c1 \ub0b4\ubd80 \ub4dc\ub77c\uc774\ube0c \uacbd\ub85c(C: \ub4f1) \uc811\uadfc \ubd88\uac00\n\n### \ub370\uc774\ud130 \ud30c\uc77c \uc77d\uae30 \uc608\uc81c\n- import pandas as pd\n- X_test = pd.read_csv(\"data\/X_test.csv\")\n- X_train = pd.read_csv(\"data\/X_train.csv\")\n- y_train = pd.read_csv(\"data\/y_train.csv\")\n\n### \uc0ac\uc6a9\uc790 \ucf54\ub529\n\n### \ub2f5\uc548 \uc81c\ucd9c \ucc38\uace0\n- \uc544\ub798 \ucf54\ub4dc \uc608\uce21\ubcc0\uc218\uc640 \uc218\ud5d8\ubc88\ud638\ub97c \uac1c\uc778\ubcc4\ub85c \ubcc0\uacbd\ud558\uc5ec \ud65c\uc6a9\n- pd.DataFrame({'cust_id': X_test.cust_id, 'gender': pred}).to_csv('003000000.csv', index=False)","47fb96e9":"## \uacb0\uacfc\uc81c\ucd9c","8f13c2a4":"## \ub77c\uc774\ube0c\ub7ec\ub9ac \ubc0f \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30","538a47a4":"## \ub2f9\ub1e8\ubcd1 \uc5ec\ubd80 \ud310\ub2e8\n- \uc774\uc0c1\uce58 \ucc98\ub9ac (Glucose, BloodPressure, SkinThickness, Insulin, BMI\uac00 0\uc778 \uac12)","2d656f30":"## Start","7da7a33d":"## \ub370\uc774\ud130 \uc804\ucc98\ub9ac","db2e0003":"## \ubaa8\ub378\ub9c1"}}