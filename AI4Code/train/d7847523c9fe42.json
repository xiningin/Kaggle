{"cell_type":{"ff4b7a14":"code","97efb2e3":"code","d13f020d":"code","fc698262":"code","b6d83f4e":"code","021c7917":"code","426067f0":"code","19211c21":"code","65914712":"code","a4834a4e":"code","ad854226":"code","33d67156":"code","bc191b76":"code","52283a45":"code","cfdc6bd8":"code","2fe525ae":"code","a5b506e9":"code","82f6f4c9":"code","2a4cb1f6":"code","7502b5ed":"code","a159a127":"code","f9926a9a":"code","fd3130d7":"code","7aeddf66":"code","8b0f0f72":"code","644eb22d":"code","1ff1f725":"code","e1f30f2a":"markdown","d2d6f9ca":"markdown","456506e1":"markdown","c60d04f2":"markdown","623b772f":"markdown","dcdc965a":"markdown","8970829c":"markdown","e6940c28":"markdown","267b466a":"markdown","38915264":"markdown","860deeef":"markdown","def6b5bd":"markdown","8383ce0a":"markdown","f65fbf86":"markdown","6bdc1635":"markdown","97929088":"markdown","66779322":"markdown","7af0a7b0":"markdown","dfef6af7":"markdown","19c71573":"markdown","2b8e4535":"markdown","d2ef9ac2":"markdown"},"source":{"ff4b7a14":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\n","97efb2e3":"df = pd.read_csv(\"..\/input\/gufhtugu-publications-dataset-challenge\/GP Orders - 5.csv\",encoding=\"utf-8\", delimiter=',')\ndf.head(5)","d13f020d":"df.shape","fc698262":"df.isnull().sum()","b6d83f4e":"df[df['Book Name'].isnull()]","021c7917":"df[df['City'].isnull()]","426067f0":"df[df['Payment Method'].isnull()]","19211c21":"df = df.dropna(how='any',axis=0) ","65914712":"df.shape","a4834a4e":"df.isnull().sum()","ad854226":"# Step 1\n# We start with creating a new dataframe from the series with Order Number as the index\nnew_df = pd.DataFrame(df['Book Name'].str.split('\/').tolist(), index=df['Order Number']).stack()\n# Step 2\n# We now want to get rid of the secondary index\n# To do this, we will make Order Number as a column (it can't be an index since the values will be duplicate)\nnew_df = new_df.reset_index([0, 'Order Number'])\n# Step 3\n# The final step is to set the column names as we want them\nnew_df.columns = ['Order Number', 'Book Name']","33d67156":"new_df","bc191b76":"book_df = pd.merge(df, new_df, on=[\"Order Number\"])","52283a45":"book_df.head(5)","cfdc6bd8":"book_df[book_df['Order Number']==71420]","2fe525ae":"book_df.drop(['Book Name_x'], axis=1, inplace = True)","a5b506e9":"book_df.rename(columns={'Book Name_y':'Book Name'}, inplace=True)","82f6f4c9":"book_counts = book_df.groupby(['Book Name']).size().reset_index(name='count')\ntop_10_books = book_counts.iloc[book_counts['count'].nlargest(10).index]","2a4cb1f6":"top_10_books","7502b5ed":"top_10_books.reset_index(0,['Book Name'])","a159a127":"top_rs = book_df.loc[book_df['Book Name'].isin(top_10_books['Book Name'])]\ntop_rs.reset_index(inplace=True)","f9926a9a":"top_rs['City'].sample(10)","fd3130d7":"top_rs = top_rs[~top_rs.City.str.contains(r'[0-9]')]\n","7aeddf66":"khi_index = (top_rs['City'].str.contains(\"karachi\") | top_rs['City'].str.contains(\"karqchi\")| top_rs['City'].str.contains(\"Karachi\") | top_rs['City'].str.contains(\"Karwchi\") | top_rs['City'].str.contains(\"gulshan e hadeed\") | top_rs['City'].str.contains(\"KARACHI\") | top_rs['City'].str.contains(\"P.I.B Colony\") | top_rs['City'].str.contains(\"sader town\"))\nlhr_index = (top_rs['City'].str.contains(\"lahore\") | top_rs['City'].str.contains(\"Lahore\") | top_rs['City'].str.contains(\"Lhr\") | top_rs['City'].str.contains(\"LHR\"))\nrwp_index = (top_rs['City'].str.contains(\"Rawalpindi\") | top_rs['City'].str.contains(\"RAWALPINDI\") | top_rs['City'].str.contains(\"rawalpindi\") | top_rs['City'].str.contains(\"Rwp\"))\nfsd_index = (top_rs['City'].str.contains(\"Faisalabad\") | top_rs['City'].str.contains(\"faisalabad\") | top_rs['City'].str.contains(\"Fesalabad\") | top_rs['City'].str.contains(\"faslabad\"))\nsargodha_index = (top_rs['City'].str.contains(\"Sargodha\") | top_rs['City'].str.contains(\"sargodha\"))\natk_index = (top_rs['City'].str.contains(\"attock\") | top_rs['City'].str.contains(\"Attock\"))\nskh_index = (top_rs['City'].str.contains(\"sheikhupura\") | top_rs['City'].str.contains(\"Sheikhupura\"))\nmuz_index = (top_rs['City'].str.contains(\"Muzffarabad\") | top_rs['City'].str.contains(\"Muzaffarabad\"))\nsuk_index = (top_rs['City'].str.contains(\"Sukkur\") | top_rs['City'].str.contains(\"sukkur\"))\nmul_index = (top_rs['City'].str.contains(\"Multan\") | top_rs['City'].str.contains(\"multan\"))\nhyd_index = (top_rs['City'].str.contains(\"hydrabad\") | top_rs['City'].str.contains(\"Hyderabad\") | top_rs['City'].str.contains(\"HYDERABAD\") | top_rs['City'].str.contains(\"Hyd\"))\nming_index = (top_rs['City'].str.contains(\"Mingaora\") | top_rs['City'].str.contains(\"Mingora\"))\ngujw_index = (top_rs['City'].str.contains(\"Gujranwala\") | top_rs['City'].str.contains(\"guranwala\"))\najk_index = (top_rs['City'].str.contains(\"AJK\") | top_rs['City'].str.contains(\"A. K\") | top_rs['City'].str.contains(\"Azad\") | top_rs['City'].str.contains(\"azad kashmir\") | top_rs['City'].str.contains(\"ajk\"))\nkas_index = (top_rs['City'].str.contains(\"kasure\") | top_rs['City'].str.contains(\"Kasur\") | top_rs['City'].str.contains(\"kasur\") | top_rs['City'].str.contains(\"KASUR\"))\npish_index = (top_rs['City'].str.contains(\"Pishin\") | top_rs['City'].str.contains(\"pishin\"))\npesh_index = (top_rs['City'].str.contains(\"Peshawar\") | top_rs['City'].str.contains(\"peshawar\"))\nisb_index = (top_rs['City'].str.contains(\"Islamabad\") | top_rs['City'].str.contains(\"islamabad\") | top_rs['City'].str.contains(\"islamababd\"))\nguj_index = (top_rs['City'].str.contains(\"Gujrat\") | top_rs['City'].str.contains(\"gujrat\") | top_rs['City'].str.contains(\"Gujrtq\"))\ndadu_index = (top_rs['City'].str.contains(\"Dadu\") | top_rs['City'].str.contains(\"dadu\"))\n","8b0f0f72":"top_rs.loc[khi_index,'City'] = \"Karachi\"\ntop_rs.loc[lhr_index,'City'] = 'Lahore'\ntop_rs.loc[rwp_index,'City'] = 'Rawalpindi'\ntop_rs.loc[fsd_index,'City'] = 'Faisalabad'\ntop_rs.loc[sargodha_index,'City'] = 'Sargodha'\ntop_rs.loc[atk_index,'City'] = 'Attock'\ntop_rs.loc[skh_index,'City'] = 'Sheikhupura'\ntop_rs.loc[muz_index,'City'] = 'Muzaffarabad'\ntop_rs.loc[suk_index,'City'] = 'Sukkur'\ntop_rs.loc[mul_index,'City'] = 'Multan'\ntop_rs.loc[hyd_index,'City'] = 'Hyderabad'\ntop_rs.loc[ming_index,'City'] = 'Mingora'\ntop_rs.loc[gujw_index,'City'] = 'Gujranwala'\ntop_rs.loc[ajk_index,'City'] = 'AJK'\ntop_rs.loc[kas_index,'City'] = 'Kasur'\ntop_rs.loc[pish_index,'City'] = 'Pishin'\ntop_rs.loc[pesh_index,'City'] = 'Peshawar'\ntop_rs.loc[isb_index,'City'] = 'Islamabad'\ntop_rs.loc[guj_index,'City'] = 'Gujrat'\ntop_rs.loc[dadu_index,'City'] = 'Dadu'","644eb22d":"city_wise_book_df = top_rs[['Book Name', 'City']]\n#city_wise_book_df['count'] = 1\n#city_wise_grouped_df = city_wise_book_df.groupby(['Book Name','City'], as_index=False).count()\ncity_wise_grouped_df = city_wise_book_df.groupby(['Book Name','City']).size().reset_index(name='count')\ncity_wise_grouped_df\n","1ff1f725":"fig = px.scatter(city_wise_grouped_df, y=city_wise_grouped_df['City'],  color=city_wise_grouped_df['Book Name'], x=city_wise_grouped_df['Book Name'], size=city_wise_grouped_df['count'])\nfig.update_layout(\n    autosize=False,\n    width=1200,\n    height=2000,)\nfig.show()","e1f30f2a":"Replacing with one name of the City","d2d6f9ca":"Resetting the index","456506e1":"Looking into the records where \"Book Name\" column has null values","c60d04f2":"Looking into the records where \"Payment Method\" column has null values","623b772f":"Cheking for the dimensions","dcdc965a":"Fetching the complete records of top 10 books","8970829c":"Counting the books sold and listing the top 10","e6940c28":"Dropping the rows with null values","267b466a":"Checking to ensure that data has been split properly","38915264":"Peek into the merged data","860deeef":"Ensuring there are no null values","def6b5bd":"Grouping Books and Cities","8383ce0a":"Checking for the null values","f65fbf86":"Removing the records where City entry is numerical (garbage value)","6bdc1635":"Fetching the latest version of the GUfhtugu publication data","97929088":"Looking into the records where \"City\" column has null values","66779322":"Dropping the old Book Name column and renaming the new","7af0a7b0":"## Visualising the City-wise data","dfef6af7":"## **Splitting the City values**","19c71573":"Merging the new df with split values into the original dataframe ","2b8e4535":"Finding index of records with same city names","d2ef9ac2":"Again checking the dimensions"}}