{"cell_type":{"05a1e1b0":"code","22ea164a":"code","f3099bc2":"code","3794a39b":"code","06318250":"code","34556dc3":"code","776ede55":"code","fd85f16c":"code","5791bc08":"code","253ea225":"code","557279de":"code","9ea3ffd2":"code","056040a8":"code","62944e9a":"code","2ff8ac17":"code","92bf6141":"code","6f8cd1bb":"code","eb24856e":"code","308d3f8d":"markdown","53bd6196":"markdown","871ccb48":"markdown","73afafd0":"markdown","1742948b":"markdown","92c05b10":"markdown","30fd76fd":"markdown","b0c6dee2":"markdown","2701c338":"markdown","84fdeac9":"markdown"},"source":{"05a1e1b0":"%matplotlib inline\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\nplt.style.use('ggplot')","22ea164a":"data = pd.read_csv(r\"..\/input\/supervisedlearning\/scores.csv\")","f3099bc2":"data.head(10)","3794a39b":"data.shape","06318250":"data.info()","34556dc3":"data.describe()","776ede55":"#Plotting the distribution of scores\ndata.plot(x='Hours', y='Scores', color='green', style='*')  \nplt.title('Hours vs Percentage')  \nplt.xlabel('Hours Studied')  \nplt.ylabel('Percentage Scored')  \nplt.show()","fd85f16c":"X = data.iloc[:, :-1].values\ny = data.iloc[:, 1].values","5791bc08":"from sklearn.model_selection import train_test_split \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size= 0.2, random_state= 0)","253ea225":"sns.distplot(y_train, kde=True, color='green',)\nplt.title('Distribution of Scores')\nplt.xlabel('Hours Studied')  \nplt.ylabel('Percentage Scored')","557279de":"sns.regplot(X_train, y_train, color='green', )\nplt.title('Hours vs Scores')\nplt.xlabel('Hours Studied')  \nplt.ylabel('Percentage Scored')","9ea3ffd2":"from sklearn.linear_model import LinearRegression  \ntraining = LinearRegression()  \ntraining.fit(X_train, y_train) \nprint(\"Training completed using \" + str(training))","056040a8":"#predicting the test set results\ny_pred = training.predict(X_test)\n\n# Comparing Actual vs Predicted\ndf = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})  \ndf.head(5)","62944e9a":"#visualising the training set results\nplt.scatter(X_train, y_train, color = 'green')\nplt.plot(X_train,  training.predict(X_train), color= 'blue')\nplt.title('Hours vs Scores (Training set)')\nplt.xlabel('Hours')\nplt.ylabel('Scores')\nplt.show()","2ff8ac17":"#visualising the test set results\nplt.scatter(X_test, y_test, color = 'green')\nplt.plot(X_train,  training.predict(X_train), color= 'blue')\nplt.title('Hours vs Scores (Test set)')\nplt.xlabel('Hours')\nplt.ylabel('Scores')\nplt.show()","92bf6141":"k = X_test.shape[1]\nn = len(X_test)\nn","6f8cd1bb":"from sklearn.metrics import r2_score\nfrom math import sqrt\nfrom sklearn import metrics  \nr2 = r2_score(y_test, y_pred)\nadj_r2 = 1-(1-r2)*(n-1)\/(n-k-1)\n\nprint('R2 =', r2, '\\nAdjusted R2 =', adj_r2)\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))","eb24856e":"Hours = 9.25\nprediction = training.predict([[Hours]])\nprint(\"Number of Hours = {}\".format(Hours))\nprint(\"Predicted Score = {}\".format(prediction[0]))","308d3f8d":"# The Sparks Foundation - Supervised Learning ML\n- Created By Amey Mahendra Thakur","53bd6196":"## Step 4: Visualizing the Results","871ccb48":"### Preparing the Data\nThe next step is to divide the data into attributes(inputs) and labels(outputs).","73afafd0":"## Step 6: Predicting Future Data","1742948b":"### Splitting the data into Training and Testing sets.","92c05b10":"## Step 5: Model Evaluation","30fd76fd":"## Task: Predict the percentage of an student based on the no. of study hours.","b0c6dee2":"## Step 2: Exploratory Data Analysis","2701c338":"## Step 3: Training the Algorithm\nAfter splitting the data into training and testing sets, We have to train our Algorithm","84fdeac9":"## Step 1: Importing Libraries and Loading Dataset"}}