{"cell_type":{"dba078fa":"code","41cd5e9f":"code","28d3b558":"code","93d96893":"code","1e96abfc":"code","4c3e04fb":"code","de92c088":"code","df608b21":"code","a4379c06":"code","2ff8e804":"code","024cd48b":"code","a8b1b28b":"code","8c91cadd":"code","064a61b8":"code","34108003":"code","ee6a780b":"code","f23f7af9":"code","f492aab1":"code","5e54cf80":"code","2dd5c56d":"code","7ae5cf16":"code","72780859":"code","be2dea7e":"markdown","18fcb26f":"markdown","eef3402b":"markdown","d08fec09":"markdown","1308bb12":"markdown","86e766db":"markdown","7561d2b6":"markdown"},"source":{"dba078fa":"import numpy as np\nimport pandas as pd\nimport plotly.express as px\n\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.neural_network import MLPClassifier\n\nfrom sklearn.metrics import roc_auc_score","41cd5e9f":"data = pd.read_csv('..\/input\/passenger-list-for-the-estonia-ferry-disaster\/estonia-passenger-list.csv')","28d3b558":"data","93d96893":"data.info()","1e96abfc":"data.isna().sum()","4c3e04fb":"data = data.drop('PassengerId', axis=1)","de92c088":"data['Category'].unique()","df608b21":"data['Country'].unique()","a4379c06":"data['Lastname'] = data['Lastname'].apply(lambda x: x[0])\ndata = data.drop('Firstname', axis=1)","2ff8e804":"data","024cd48b":"def binary_encode(df, column, postive_value):\n    df = df.copy()\n    df[column] = df[column].apply(lambda x: 1 if x == postive_value else 0)\n    return df\n\ndef ordinal_encode(df, column, ordering):\n    df = df.copy()\n    df[column] = df[column].apply(lambda x: ordering.index(x))\n    return df\n    \ndef onehot_encode(df, column):\n    df = df.copy()\n    dummies = pd.get_dummies(df[column])\n    df = pd.concat([df, dummies], axis=1)\n    df = df.drop(column, axis=1)\n    return df","a8b1b28b":"alphabet_ordering = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'","8c91cadd":"data = binary_encode(data, 'Sex', 'M')\ndata = binary_encode(data, 'Category', 'M')\n\ndata = ordinal_encode(data, 'Lastname', alphabet_ordering)\n\ndata = onehot_encode(data, 'Country')","064a61b8":"data","34108003":"y = data['Survived']\nX = data.drop('Survived', axis=1)","ee6a780b":"scaler = MinMaxScaler()\n\nX = scaler.fit_transform(X)","f23f7af9":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7)","f492aab1":"log_model = LogisticRegression()\nsvm_model = SVC(C=1.0)\nann_model = MLPClassifier(hidden_layer_sizes=(16, 16))\n\nlog_model.fit(X_train, y_train)\nsvm_model.fit(X_train, y_train)\nann_model.fit(X_train, y_train)","5e54cf80":"log_acc = log_model.score(X_test, y_test)\nsvm_acc = svm_model.score(X_test, y_test)\nann_acc = ann_model.score(X_test, y_test)\n\nlog_preds = log_model.predict(X_test)\nsvm_preds = svm_model.predict(X_test)\nann_preds = ann_model.predict(X_test)\n\nlog_auc = roc_auc_score(y_test, log_preds)\nsvm_auc = roc_auc_score(y_test, svm_preds)\nann_auc = roc_auc_score(y_test, ann_preds)","2dd5c56d":"acc_fig = px.bar(\n    x = [\"Logistic Regression\", \"Support Vector Machine\", \"Neural Network\"],\n    y = [log_acc, svm_acc, ann_acc],\n    labels={'x': \"Model\", 'y': \"Accuracy\"},\n    color=[\"Logistic Regression\", \"Support Vector Machine\", \"Neural Network\"],\n    title=\"Model Accuracy\"\n)\n\nacc_fig.show()","7ae5cf16":"1 - (y.sum() \/ len(y))","72780859":"auc_fig = px.bar(\n    x = [\"Logistic Regression\", \"Support Vector Machine\", \"Neural Network\"],\n    y = [log_auc, svm_auc, ann_auc],\n    labels={'x': \"Model\", 'y': \"ROC AUC\"},\n    color=[\"Logistic Regression\", \"Support Vector Machine\", \"Neural Network\"],\n    title=\"Model ROC AUC\"\n)\n\nauc_fig.show()","be2dea7e":"# Preprocessing","18fcb26f":"# Training","eef3402b":"# Getting Started","d08fec09":"## Encoding","1308bb12":"# Task for Today  \n\n***\n\n## Predicting Passenger Survival \n\nGiven *data about passengers aboard the MS Estonia*, let's try to predict if a given passenger **survived** or not.\n\nWe will use three different models to make our predictions:  \n- Logistic Regression\n- Support Vector Machine\n- Neural Network (2 hidden layers)","86e766db":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/Rt91MatN6jk","7561d2b6":"## Splitting and Scaling"}}