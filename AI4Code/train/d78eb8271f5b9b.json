{"cell_type":{"d9a15652":"code","ff5a40b0":"code","2c91aac6":"code","f06b76b3":"code","e9e23e14":"code","6e55aa2d":"code","6a97e9ef":"code","c1656e94":"code","a93891e1":"code","b10bdf59":"code","7f411376":"code","bc8d714b":"code","fe2a3e1b":"code","3414cda1":"code","9deb43ce":"code","14bc0fed":"code","d9e9a1be":"code","2d491e77":"code","3a444b93":"code","55845edc":"code","43d07f2a":"code","eafc0ec4":"code","2a2b2919":"code","899b550b":"code","183ea050":"code","18d163c2":"markdown","15c9a168":"markdown","6cc92825":"markdown","e6e9ddbb":"markdown","d460d144":"markdown","1a1942a9":"markdown"},"source":{"d9a15652":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix , accuracy_score ,classification_report\nimport xgboost as xgb\nfrom xgboost import plot_importance , plot_tree\nimport graphviz\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ff5a40b0":"df = pd.read_csv(\"\/kaggle\/input\/iris\/Iris.csv\")\ndf.head()","2c91aac6":"df.describe().T","f06b76b3":"df.info()","e9e23e14":"df.groupby(by=\"Species\").agg([\"mean\" , \"min\" , \"max\"])","6e55aa2d":"sns.scatterplot(x = \"SepalLengthCm\" , y = \"SepalWidthCm\" , hue = \"Species\" , data = df);","6a97e9ef":"sns.pairplot(df , hue=\"Species\");","c1656e94":"le = LabelEncoder()","a93891e1":"df[\"Species\"] = le.fit_transform(df[\"Species\"])","b10bdf59":"df[\"Species\"].value_counts()","7f411376":"df.drop(\"Id\" , inplace=True , axis=1)","bc8d714b":"df.head()","fe2a3e1b":"X, y = df.iloc[: , :-1] , df.iloc[: , -1]","3414cda1":"X_train , X_test , y_train , y_test = train_test_split(X , y , test_size = 0.30)","9deb43ce":"dmatrix_train = xgb.DMatrix(data = X_train , label = y_train)\ndmatrix_test = xgb.DMatrix(data = X_test , label = y_test)","14bc0fed":"param = {\"max_depth\" :5,\n         \"eta\" : 1 ,\n         \"objective\" : \"multi:softprob\",\n        \"num_class\" : 3}\nnum_round = 13\nmodel = xgb.train(param , dmatrix_train , num_round)","d9e9a1be":"y_pred = model.predict(dmatrix_test)","2d491e77":"best_preds = np.asarray([np.argmax(line) for line in y_pred])","3a444b93":"best_preds","55845edc":"accuracy_score(y_test , best_preds)","43d07f2a":"cm = confusion_matrix(y_test , best_preds)","eafc0ec4":"sns.heatmap(cm, annot = True , cbar=False)","2a2b2919":"print(classification_report(y_test , best_preds))","899b550b":"xgb.plot_importance(model);","183ea050":"xgb.plot_tree(model);","18d163c2":"# Visualization","15c9a168":"# Model","6cc92825":"# Data Seperation","e6e9ddbb":"# Label Encoding","d460d144":"# Drop Id Column","1a1942a9":"# Read Data"}}