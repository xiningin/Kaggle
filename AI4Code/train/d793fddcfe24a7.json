{"cell_type":{"c18c1339":"code","abff552b":"code","8b5d8dab":"code","72694b3a":"code","2d6c0a94":"code","6bb96f9c":"code","7c5af1b6":"code","b53d15e1":"code","3d09b4b8":"code","eef013f8":"markdown"},"source":{"c18c1339":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","abff552b":"df0 = pd.read_csv(\"\/kaggle\/input\/emg-4\/0.csv\", header=None )\ndf1 = pd.read_csv(\"\/kaggle\/input\/emg-4\/1.csv\", header=None )\ndf2 = pd.read_csv(\"\/kaggle\/input\/emg-4\/2.csv\", header=None )\ndf3 = pd.read_csv(\"\/kaggle\/input\/emg-4\/3.csv\", header=None )\ndf = pd.concat([df0,df1,df2,df3], axis = 0)","8b5d8dab":"df.head()","72694b3a":"x = df.loc[:,0:63]\ny = df[64]","2d6c0a94":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=42)","6bb96f9c":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx_train = pd.DataFrame(sc.fit_transform(x_train))\nx_test = pd.DataFrame(sc.transform(x_test))","7c5af1b6":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\n\nlr_grid = {'max_depth' : [4,8,16,32,64,128],\n           'criterion' : ['entropy','gini']}\n\nclf = RandomForestClassifier(n_estimators=100, max_features='sqrt', random_state=42)\n\ngs = GridSearchCV(estimator = clf, param_grid=lr_grid,cv = 5)\ngs.fit(x_train,y_train)\ny_pred = gs.predict(x_test)","b53d15e1":"gs.best_params_","3d09b4b8":"from sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\n\nprint('Classification Report: \\n', classification_report(y_test,y_pred))\nprint('Confusion Matrix: \\n', confusion_matrix(y_test,y_pred))","eef013f8":"This notebook explores RandomForest Classifier with Grid search for classifying 4 hand gestures:- rock - 0, scissors - 1, paper - 2, ok - 3 using EMG data from MYO armband."}}