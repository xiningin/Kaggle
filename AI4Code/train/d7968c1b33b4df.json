{"cell_type":{"d30d5c22":"code","7e659bea":"code","8bd74e69":"code","48460437":"code","f3c0e027":"code","d714bc3f":"code","a13ce8e7":"code","c6b084db":"code","be0d0e59":"code","016aaac5":"code","8817994a":"code","ec97cbb6":"markdown","c2bba7b9":"markdown","ae8fe0a2":"markdown","6ee27e9a":"markdown"},"source":{"d30d5c22":"import cudf\nimport cuml\n\nimport pandas as pd\nimport numpy as np\n\nfrom cuml.manifold import TSNE\nimport matplotlib.pyplot as plt\n\ntrain_data = cudf.read_csv('..\/input\/tabular-playground-series-dec-2021\/train.csv',index_col=0, nrows=200000)\ntsne    = TSNE(n_components=2, perplexity=40, learning_rate=2, random_state=101)\ntsne_2D = tsne.fit_transform(train_data);\nx, y = tsne_2D.as_matrix().T","7e659bea":"fig, ax = plt.subplots(figsize=(20, 20))\nax.scatter(x, y, s=0.1, c=x**2+y**2, cmap=plt.cm.cool)\nfig.set_facecolor('#ebf0ff')\nplt.xticks([])\nplt.yticks([])\nplt.box(False)\nplt.show();","8bd74e69":"train_data = cudf.read_csv('..\/input\/tabular-playground-series-nov-2021\/train.csv',index_col=0, nrows=500000)\ntrain_data = train_data.drop([\"target\"], axis=1)\n\ntsne    = TSNE(n_components=2, perplexity=90, learning_rate=7, random_state=101)\ntsne_2D = tsne.fit_transform(train_data);\nx, y = tsne_2D.as_matrix().T","48460437":"fig, ax = plt.subplots(figsize=(20, 20))\nax.scatter(x, y, s=0.1, c=x, cmap=plt.cm.turbo)\nfig.set_facecolor('#252C2C')\nplt.xticks([])\nplt.yticks([])\nplt.box(False)\nplt.show();","f3c0e027":"tsne    = TSNE(n_components=2, perplexity=8, learning_rate=10, random_state=15)\ntsne_2D = tsne.fit_transform(train_data)\nx1, y1  = tsne_2D.as_matrix().T\n\nfig, ax = plt.subplots(figsize=(20, 20))\nax.scatter(x1, y1, s=0.1, c=x, cmap=plt.cm.tab20b)\nfig.set_facecolor('#252C2C')\nplt.xticks([])\nplt.yticks([])\nplt.box(False)\nplt.show();","d714bc3f":"train_data = cudf.read_csv('..\/input\/ventilator-pressure-prediction\/train.csv',index_col=0, nrows=2560000)\ntrain_data = train_data.query(\"u_out == 0\").reset_index(drop = True)\ntrain_data = train_data.drop([\"breath_id\",\"u_out\"], axis=1)\n\ntsne    = TSNE(n_components=2, perplexity=50, learning_rate=20)\ntsne_2D = tsne.fit_transform(train_data)\nx, y = tsne_2D.as_matrix().T","a13ce8e7":"fig, ax = plt.subplots(figsize=(20, 20))\nax.scatter(x, y, s=0.1, c=x, cmap=plt.cm.plasma)\nfig.set_facecolor('mistyrose')\nplt.xticks([])\nplt.yticks([])\nplt.box(False)\nplt.show();","c6b084db":"tsne    = TSNE(n_components=2, perplexity=70, learning_rate=20)\ntsne_2D = tsne.fit_transform(train_data)\nx1, y1  = tsne_2D.as_matrix().T","be0d0e59":"fig, ax = plt.subplots(figsize=(20, 20))\nax.scatter(x1, y1, s=0.1, c=x, cmap=plt.cm.prism)\nfig.set_facecolor('#202020')\nplt.xticks([])\nplt.yticks([])\nplt.box(False)\nplt.show();","016aaac5":"tsne    = TSNE(n_components=2, perplexity=40, learning_rate=40)\ntsne_2D = tsne.fit_transform(train_data)\nx2, y2  = tsne_2D.as_matrix().T","8817994a":"fig, ax = plt.subplots(figsize=(20, 20))\nax.scatter(x2, y2, s=0.1, c=x, cmap=plt.cm.tab20c)\nfig.set_facecolor('white')\nplt.xticks([])\nplt.yticks([])\nplt.box(False)\nplt.show();","ec97cbb6":"* [Laurens van der Maaten, and Geoffrey Hinton \"*Visualizing Data using t-SNE*\", Journal of Machine Learning Research, volume **9** pages 2579\u22122605 (2008)](https:\/\/jmlr.org\/papers\/volume9\/vandermaaten08a\/vandermaaten08a.pdf)","c2bba7b9":"### [Tabular Playground Series - Nov 2021 competition data](https:\/\/www.kaggle.com\/c\/tabular-playground-series-nov-2021)","ae8fe0a2":"### Some pretty t-SNE plots\nHere are some [t-SNE plots](https:\/\/en.wikipedia.org\/wiki\/T-distributed_stochastic_neighbor_embedding) of the training data we have been given, created thanks to the [RAPIDS cuML t-SNE](https:\/\/docs.rapids.ai\/api\/cuml\/stable\/api.html#tsne) implementation. As presented here they are neither useful nor informative, and their sole *raison d'\u00eatre* is that I found them visually appealing.\n\n### [TPS December 2021](https:\/\/www.kaggle.com\/c\/tabular-playground-series-dec-2021): Winter","6ee27e9a":"### [Google Brain - Ventilator Pressure Prediction competition data](https:\/\/www.kaggle.com\/c\/ventilator-pressure-prediction)\nFor much more informative work using the Ventilator data see the two excellent notebooks written by [Lucas Morin](https:\/\/www.kaggle.com\/lucasmorin)\n\n* [u_in\/MAE exploration with umap \/ hdbscan](https:\/\/www.kaggle.com\/lucasmorin\/u-in-mae-exploration-with-umap-hdbscan)\n* [Pressure\/MAE exploration with umap \/ hdbscan](https:\/\/www.kaggle.com\/lucasmorin\/pressure-mae-exploration-with-umap-hdbscan)\n\nusing the related [UMAP](https:\/\/pair-code.github.io\/understanding-umap\/) dimensionality reduction technique."}}