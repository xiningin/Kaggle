{"cell_type":{"7ce0b443":"code","3cba2015":"code","e4cc2d1d":"code","d5f89a57":"code","9842e850":"code","af6fd281":"code","9b3455d5":"code","6efcb88b":"code","6cbca70f":"code","9b0a9d34":"code","f834321f":"code","5830156d":"code","244b23d2":"code","00f012b6":"code","f4a33d35":"code","a7f0955f":"code","43025e07":"code","ee3475f0":"code","67ad4af1":"code","f43ec26d":"code","6774807c":"code","6ad3a95a":"code","80107f13":"code","f5cc8fae":"code","1b3c4b05":"code","a854b11f":"code","595b3137":"code","112cc02f":"code","503b1962":"code","304d8132":"code","705952cc":"code","6a8dcfb9":"code","179fc042":"code","e0b48689":"code","49b0ce9d":"code","79e67a41":"code","20ded425":"code","2b3b95c6":"code","a02d4fa3":"code","715da05f":"code","2fb1d57b":"code","f1d380d8":"code","54690b86":"code","c33f5ab0":"code","3fadb83b":"code","cf10e244":"code","c4b8b728":"code","3461d353":"code","a9789a50":"code","6787069b":"code","4bb31e8e":"code","577890e6":"code","797ea968":"code","57dfa870":"code","80529542":"code","53d6cd5c":"code","f5aaad70":"code","91d0f8d8":"code","4862437a":"code","86d9637f":"code","78405c2e":"code","7b4ccc35":"code","63ec4574":"code","60bf8a34":"code","161045b8":"code","75f6abbc":"code","fffdfac0":"code","2981c22b":"code","dbaf9872":"code","06ead19f":"code","d1d90283":"code","9dce8ee2":"code","4fbada13":"code","9b243c05":"code","abc657dd":"code","a4478e6e":"code","f59d1a8b":"code","677dd9b1":"code","2e6a2552":"code","d2e895f8":"code","ee86aca9":"code","dd6aa704":"code","ac34096c":"code","76ecf04f":"code","cda5298c":"code","f5ba2e48":"code","fdbeb489":"code","9d027af1":"code","3c16f668":"code","329bffda":"code","5195c09d":"code","7cf959b6":"code","16bbd841":"code","c9cc0982":"code","d6f2a817":"code","db4dbdbb":"code","80b50660":"code","3560a65a":"code","07836f78":"code","bdbefe06":"markdown","e149b110":"markdown","cda48914":"markdown","498cfb37":"markdown","8e210f83":"markdown","0c3d0b85":"markdown","e1b68438":"markdown","71707c90":"markdown"},"source":{"7ce0b443":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3cba2015":"##Thank you! practice from https:\/\/github.com\/TrainingByPackt\/Data-Wrangling-with-Python\/tree\/master\/Chapter01\nlist_exaple=[51,27,34,46,90,45,-19]\nlist_exaple2=[15,\"yellow car\",True,9.456,[12,\"hello\"]]\n# \u53ef\u4ee5\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5141\u8bb8\u64cd\u4f5c\u8bbf\u95ee","e4cc2d1d":"list_1=[34,12,89,2]","d5f89a57":"list_1[0]","9842e850":"list_1[3]","af6fd281":"len(list_1)","9b3455d5":"list_1[len(list_1)-1]  ### \u8bbf\u95ee\u6700\u540e\u4e00\u4e2a\u5143\u7d20","6efcb88b":"list_1[len(list_1)-3]","6cbca70f":"list_1[-1]","9b0a9d34":"list_1[1:3]","f834321f":"list_1[-2:]","5830156d":"list_1","244b23d2":"list_1[-1::-1]  ### \u53cd\u8f6c\u5b57\u7b26\u4e32\u5143\u7d20","00f012b6":"## \u751f\u6210\u5217\u8868","f4a33d35":"## \u4f7f\u7528append \u65b9\u6cd5\nlist_1=[]\nfor x in range(0,10):\n    list_1.append(x)\nlist_1","a7f0955f":"## \u5217\u8868\u63a8\u5bfc\u5f0f\uff1a\u5728\u5217\u8868\u5185\u90e8\u4f7f\u7528\u63a8\u5bfc\u5f0f\nlist_2=[x for x in range(0,10)]\nlist_2","43025e07":"## while \u5faa\u73af\u5386\u904d\u5217\u8868\ni=0\nwhile i <len(list_1):\n    print(list_1[i])\n    i+=1","ee3475f0":"## \u521b\u5efa \u53ef\u4ee5\u88ab5\u6574\u9664\u7684\u5217\u8868\nlist_3=[x for x in range(0,100) if x % 5==0]\nlist_3","67ad4af1":"## \u5217\u8868\u7684\u76f8\u52a0\u5373\u662f\u5408\u5e76\nlist_1=[1,4,56,-1]\nlist_2=[12,34,564,232]\n# list_3=list_1+list_2\nlist_3=list_2+list_1\nlist_3","f43ec26d":"## \u4f7f\u7528extend\nlist_1.extend(list_2)\nlist_1","6774807c":"## \u904d\u5386\u4e00\u4e2a\u5217\u8868\nlist_1=[x for x in range(0,10)]\nfor i in list_1:\n    print(i)","6ad3a95a":"33 in list_1","80107f13":"6 in list_1","f5cc8fae":"## \u5217\u8868\u6392\u5e8f\nlist_1.sort(reverse=True)### sort \u53ef\u4ee5\u81ea\u5b9a\u4e49\u6392\u5e8f\nlist_1","1b3c4b05":"## \u76f4\u63a5reverse,\u91cd\u590d\u4f7f\u7528\uff0c\u91cd\u590d\u53d8\u6362\nlist_1.reverse()\nlist_1","a854b11f":"## \u751f\u6210\u968f\u673a\u5217\u8868\nimport random\nlist_1=[random.randint(0,10) for x in range(0,10)]\nlist_1","595b3137":"list_12=list(set(list_1))## \u4f7f\u7528set \u53bb\u91cd\nlist_12    ","112cc02f":"list_12=list(list_1)\nlist_12","503b1962":"## \u5e76\u96c6\u3001\u4ea4\u96c6\nset1={\"apple\",\"Orange\",\"banana\"}\nset2={\"pear\",\"banana\",\"mange\",\"peach\"}\nset1|set2","304d8132":"set1&set2","705952cc":"dict_1={\"key1\":1,\"key2\":[\"list_element\",34],\"key3\":\"value3\",\n       \"key4\":{\"subkey\":\"v2\"},\"key5\":4.5}\ndict_1","6a8dcfb9":"## \u8bbf\u95ee\u8bbe\u7f6e\u5b57\u5178\u503c\ndict_1[\"key2\"]","179fc042":"dict_1[\"key2\"]=\"my new value\"","e0b48689":"dict_2={}\ndict_2[\"key1\"]=12\ndict_2","49b0ce9d":"### \u904d\u5386\u5b57\u5178\nfor k,v in dict_1.items():\n    print(\"{}-{}\".format(k,v))","79e67a41":"import random","20ded425":"list_1=[random.randint(0,30) for x in range(0,20)]","2b3b95c6":"list(dict.fromkeys(list_1).keys())  ## fromkeys \u521b\u5efa\u5b57\u5178","a02d4fa3":"### \u5220\u9664\u5b57\u5178\u4e2d\u7684\u503c\ndict_1={\"key1\":1,\"key2\":[\"list_element1\",34],\"key3\":\"value3\",\"key4\":{\"subkey1\":\"v1\"},\"key5\":4.5}\ndict_1","715da05f":"del dict_1[\"key3\"]\ndict_1","2fb1d57b":"## \u5b57\u5178\u63a8\u5bfc\u5f0f\nlist_1=[x for x in range(0,10)]\ndict_1={x:x**2 for x in list_1}\ndict_1","f1d380d8":"dict_2=dict([(\"Tom\",100),(\"Dick\",200),(\"Harry\",300)])\ndict_2","54690b86":"dict_3=dict(Tom=100,Dick=200,Harry=30)\ndict_3","c33f5ab0":"tuple_1=(\"hello\",\"there\")\ntuple_1","3fadb83b":"tuple_1[1]","cf10e244":"tuple_1[0]","c4b8b728":"## \u5904\u7406\u5143\u7ec4","3461d353":"tuple2=(\"1\",\"3\",\"5\")\ntuple2","a9789a50":"tuple2[1]=\"8\"","6787069b":"## \u5b57\u7b26\u4e32\uff1a\u4e0d\u53ef\u53d8\u7684\u6570\u636e\u7ed3\u6784","4bb31e8e":"str_1=\"hello world\"\nstr_1[0]\nstr_1[5]","577890e6":"len(str_1)","797ea968":"str_1[len(str_1)-3]","57dfa870":"str_1[len(str_1)-1]# \u8bbf\u95ee\u6700\u540e\u4e00\u4e2a\nstr_1[-1]","80529542":"str_1[len(str_1)-2]","53d6cd5c":"## \u5b57\u7b26\u4e32\u5207\u7247\nstr_2=\"Hello World! I am learning data wrangling\"","f5aaad70":"str_2[0:3]","91d0f8d8":"str_2[1:3]","4862437a":"str_2[-10:-2]","86d9637f":"len(str_2)","78405c2e":"str_2.lower() ## \u8f6c\u5c0f\u5199","7b4ccc35":"str_2.upper() ## \u8f6c\u5927\u5199","63ec4574":"##  \u627e\u7279\u5b9a\u5b57\u7b26\u4e32\nstr_2.find(\"am\")","60bf8a34":"## \u66ff\u6362\nstr_2.replace(\"I\",\"she\")","161045b8":"## \u5b57\u7b26\u4e32\u62c6\u5206\u4e0e\u5408\u5e76,1\/ \u4f7f\u7528split \u5c06\u5176\u8f6c\u5316\u4e3a\u5217\u8868\nstr_3=\"name,age,sex,address\"\nlist_3=str_3.split(\",\")\nlist_3","75f6abbc":"## \u4f7f\u7528join \u5c06\u5217\u8868\u5408\u5e76\u4e3a\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\n\"|\".join(list_3)","fffdfac0":"##\u8fed\u4ee3\u5668\nbig_list_of_numbers=[1 for x in range(0,10000000)]","2981c22b":"##\u68c0\u67e5\u53d8\u91cf\u7684\u5927\u5c0f\nfrom sys import getsizeof\ngetsizeof(big_list_of_numbers)","dbaf9872":"## \u4f7f\u7528\u8fed\u4ee3\u5668\u964d\u4f4e\u5185\u5b58\u5229\u7528\u7387\nfrom itertools import repeat\nsmall_list_of_numbers=repeat(1,times=10000000)\ngetsizeof(small_list_of_numbers)","06ead19f":"# \u5faa\u73af\u5fc3\u751f\u6210\u7684\u8fed\u4ee3\u5668\nfor i,x in enumerate(small_list_of_numbers):\n    print(x)\n    if i>5:\n        break","d1d90283":"from itertools import (permutations,combinations,dropwhile,repeat,zip_longest)\npermutations?","9dce8ee2":"stack=[]","4fbada13":"stack.append(25)\nstack","9b243c05":"stack.append(-12)","abc657dd":"stack","a4478e6e":"### \u4f7f\u7528pop\u8bfb\u53d6\u6808\uff0c\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\ntos=stack.pop()\ntos","f59d1a8b":"stack.append(\"hello\")","677dd9b1":"stack","2e6a2552":"def stack_push(s,value):\n    return s+[value]\ndef stack_pop(s):\n    tos=s[-1]  ### \u8bfb\u53d6\u6808-1 \u5904\u503c\n    del s[-1]   ## \u5220\u9664\u8be5\u7d22\u5f15\n    return tos ##\u8fd4\u56de\u8bfb\u53d6\u5230\u7684\u503c\nurl_stack=[]","d2e895f8":"wiki_datascience=\"data science is an interdisciplinary field that uses scientific methods [https:\/\/www.kaggle.com\/wallacefqq\/8-data-cleaning-and-sorting-python\/edit]\"","ee86aca9":"len(wiki_datascience)","dd6aa704":"wd_list=wiki_datascience.split()\nlen(wd_list)","ac34096c":"## \u627eURL \n\nfor word in wd_list:\n    if word.startswith(\"[https:\/\/\"):\n        url_stack=stack_push(url_stack,word[1:])\nurl_stack","76ecf04f":"for i in range(0,len(url_stack)):\n    print(stack_pop(url_stack))","cda5298c":"print(url_stack)","f5ba2e48":"import math","fdbeb489":"def my_sine():\n    return lambda x: math.sin(math.radians(x))## \u89d2\u5ea6\u8f6c\u5316\u5f27\u5ea6\ndef my_cosine():\n    return lambda x: math.cos(math.radians(x))","9d027af1":"sine=my_sine()\ncosine=my_cosine()\nmath.pow(sine(30),2)+math.pow(cosine(30),2) ## sin\u5e73\u65b9+cos\u5e73\u65b9","3c16f668":"sine(45)","329bffda":" ## \u6392\u5e8f\u7684lambda \u8868\u8fbe\u5f0f\ncapitals=[(\"usa\",\"washington\"),(\"India\",\"delli\"),(\"france\",\"paris\"),(\"uk\",\"london\")]\ncapitals","5195c09d":"capitals.sort(key=lambda item:item[1])## \u6309\u7167\u9996\u90fd\u540d\u79f0\u5bf9\u5217\u8868\u8fdb\u884c\u6392\u5e8f\ncapitals","7cf959b6":"## \u591a\u5143\u7d20\u6210\u5458\u68c0\u67e5\nlist_of_words=[\"Hello\",\"three.\",\"How\",\"are\",\"you\",\"doing?\"]\ncheck_for=[\"How\",\"are\"]","16bbd841":"all(f in list_of_words for f in check_for)","c9cc0982":"## \u961f\u5217\uff1a\u5148\u8fdb\u5148\u51fa\n%time\nqueue=[]\nfor i in range(0,100000):\n    queue.append(i)\nprint(\"Queue created\")","d6f2a817":"for i in range(0,100000):\n    queue.pop(0)\nprint(\"queue emptied\")","db4dbdbb":"## \u5b9e\u73b0\u76f8\u540c\u7684\u961f\u5217\n%time\nfrom collections import deque\nqueue2=deque()\nfor i in range(0,100000):\n    queue2.append(i)\nprint(\"queue created\")\nfor i in range(0,100000):\n    queue2.popleft()\nprint(\"queue emptied\")","80b50660":"## with \u8bed\u53e5\u6253\u5f00\nwith open(\"..\/input\/3wine-data\/wine.csv\") as df:\n    print(df.closed)\nprint(df.closed)","3560a65a":"## \u9010\u884c\u6253\u5f00\nwith open(\"..\/input\/3wine-data\/wine.csv\") as df:\n    for line in df:\n        print(line)","07836f78":"## readline \u663e\u5f0f\u65b9\u6cd5\nwith open(\"..\/input\/3wine-data\/wine.csv\",encoding=\"utf8\") as df:\n    for line in df:\n        print(line)\n    print(\"ended first loop\")\n    \n    for line in df:\n        print(line)","bdbefe06":"### 2.3:Lambda","e149b110":"## 2.3\uff1a\u6587\u4ef6\u64cd\u4f5c","cda48914":"## 2\u3001\u6808 \uff1a\u4e00\u4e2a\u5e26\u6709\u9650\u5236\u7684\u5217\u8868\uff0c\u540e\u8fdb\u5148\u51fa","498cfb37":"## 1\u3001\u5217\u8868","8e210f83":"### \u5143\u7ec4\uff1a \u53ea\u80fd\u8bbf\u95ee\uff0c\u4e0d\u80fd\u4fee\u6539","0c3d0b85":"## 3\u3001\u5b57\u5178","e1b68438":"## 2\u3001\u96c6\u5408 \uff1a \u660e\u786e\u5b9a\u4e49\u4e0d\u540c\u5bf9\u8c61\u7684\u96c6\u5408","71707c90":"### \u7b2c\u4e8c\u7ae0 \u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u548c\u6587\u4ef6\u5904\u7406"}}