{"cell_type":{"8fac55b5":"code","d74fde3d":"code","abf8aa96":"code","ed122b8a":"code","6bfa8b68":"code","c88af6df":"code","2eab7140":"code","9a7a004f":"code","e4cfc39c":"code","5f48b3b0":"code","6e734c7d":"code","f37a95d1":"code","072812ba":"code","5b78e231":"code","f8407707":"code","99a624fb":"code","68589f89":"code","2062a700":"code","a2c808d5":"code","c65d3de1":"code","085982e1":"code","11b35f0e":"code","52510393":"code","622877c9":"code","2cec9262":"code","4f124690":"code","7955c92b":"code","e6379b3b":"code","f44e90d8":"code","199bdece":"code","7b56c6f2":"markdown","a058fd51":"markdown","2c4d9f05":"markdown","7c26f826":"markdown","553e7206":"markdown","90207e98":"markdown","ccbd3b01":"markdown","cf334317":"markdown","b63ec3e0":"markdown","6444baf9":"markdown","48456d67":"markdown","b296224c":"markdown","1a9487f4":"markdown","67b3fa9f":"markdown","01ac5004":"markdown","744b0282":"markdown","2969af11":"markdown","5969f7fe":"markdown","99cf27db":"markdown","6ccb5103":"markdown"},"source":{"8fac55b5":"# import pandas, pd is an alias\nimport pandas as pd\n\n# Creating a numeric pandas series\ns = pd.Series([2, 4, 5, 6, 9])\nprint(s)\nprint(type(s))","d74fde3d":"# creating a series of characters\n# notice that the 'dtype' here is 'object'\nchar_series = pd.Series(['a', 'b', 'af'])\nchar_series","abf8aa96":"# creating a series of type datetime\nimport pandas as pd\ndate_series = pd.date_range(start = '11-09-2017', end = '12-12-2017')\nprint(date_series)\ntype(date_series)","ed122b8a":"# Indexing pandas series: Same as indexing 1-d numpy arrays or lists\n# accessing the fourth element\nprint(s[3])\n\n# accessing elements starting index = 2 till the end\ns[2:]","6bfa8b68":"# accessing the second and the fourth elements\n# note that s[1, 3] will not work, you need to pass the indices [1, 3] as a list inside the original []\ns[[1, 3]]","c88af6df":"# keys become column names\ndf = pd.DataFrame({'name': ['Vinay', 'Kushal', 'Aman', 'Saif'], \n                   'age': [22, 25, 24, 28], \n                    'occupation': ['engineer', 'doctor', 'data analyst', 'teacher']})\ndf","2eab7140":"# reading a CSV file as a dataframe\nmarket_df = pd.read_csv(\"..\/input\/sales-forecasting\/train.csv\")","9a7a004f":"# Looking at the top and bottom entries of dataframes\nmarket_df.head()","e4cfc39c":"market_df.tail()","5f48b3b0":"# Looking at the datatypes of each column\nmarket_df.info()\n\n# Note that each column is basically a pandas Series of length 8399\n# The ID columns are 'objects', i.e. they are being read as characters\n# The rest are numeric (floats or int)","6e734c7d":"# Describe gives you a summary of all the numeric columns in the dataset\nmarket_df.describe()","f37a95d1":"# Column names\nmarket_df.columns","072812ba":"# The number of rows and columns\nmarket_df.shape","5b78e231":"# You can extract the values of a dataframe as a numpy array using df.values \nmarket_df.values","f8407707":"market_df.head()","99a624fb":"# Setting index to Ord_id\nmarket_df.set_index('Row ID', inplace = True)\nmarket_df.head()","68589f89":"# Sorting by index\n# axis = 0 indicates that you want to sort rows (use axis=1 for columns)\nmarket_df.sort_index(axis = 0, ascending = False)","2062a700":"# Sorting by values\n\n# Sorting in increasing order of Sales\nmarket_df.sort_values(by='Sales').head()","a2c808d5":"# Sorting in decreasing order of Sales\nmarket_df.sort_values(by='Sales', ascending = False).head()","c65d3de1":"# Sorting by more than two columns\n\n# Sorting in ascending order of Sales for each Product\nmarket_df.sort_values(by=['Product ID', 'Sales'], ascending = False)","085982e1":"import numpy as np\nimport pandas as pd","11b35f0e":"#Example\n\nseries2 = pd.Series(data = [1,2,3], index = ['key1', 'key2', 'key3'])\nseries2","52510393":"dict = {'a': 10, 'b' : 20, 'c': 30, 'd': 40}\npd.Series(dict)","622877c9":"# Example\nd1 = {'a': [1,2,3], 'b': [3,4,5], 'c':[6,7,8] }\ndf1 = pd.DataFrame(d1)\ndf1","2cec9262":"df1.loc[1]","4f124690":"df1.loc[1, 'c']","7955c92b":"## Reading a dataset from a csv file using pandas.\nmtcars = pd.read_csv('..\/input\/mtcars\/mtcars-1.csv')\nmtcars.index = mtcars['name']\nmtcars","e6379b3b":"mtcars.info()","f44e90d8":"mtcars.columns","199bdece":"mtcars.iloc[:6, :3]","7b56c6f2":"#### Indices \n\nAn important concept in pandas dataframes is that of *row indices*. By default, each row is assigned indices starting from 0, and are represented at the left side of the dataframe. ","a058fd51":"### Question 2: Convert a given dict to pd dataframe.","2c4d9f05":"Note that each element in the Series has an index, and the index starts at 0 as usual.","7c26f826":"Here, each row represents an order placed at a retail store. Notice the index associated with each row - starts at 0 and ends at 8398, implying that there were 8399 orders placed.","553e7206":"### Question 7: Select first 6 rows and 3 columns in mtcars dataframe.","90207e98":"### Question 3: Select second row in the above dataframe df1.","ccbd3b01":"# The Pandas Series \n\nA series is similar to a 1-D numpy array, and contains scalar values of the same type (numeric, character, datetime etc.). \n\nA dataframe is simply a table where each column is a pandas series.\n\n#### Creating Pandas Series\n\nSeries are one-dimensional array-like structures, though unlike numpy arrays, they often contain non-numeric data (characters, dates, time, booleans etc.)\n\nYou can create pandas series from array-like objects using ```pd.Series()```.\n","cf334317":"# Pandas\n\nPandas is a library built using NumPy specifically for data analysis. You'll be using Pandas heavily for data manipulation, visualisation, building machine learning models, etc. \n\nThere are two main data structures in Pandas - Series and Dataframes. The default way to store data is dataframes, and thus manipulating dataframes quickly is probably the most important skill set for data analysis. \n\n*source: https:\/\/pandas.pydata.org\/pandas-docs\/stable\/overview.html*\n\nIn this section, you will study:\n1. The Pandas Series (similar to a numpy array)\n    * Creating a pandas series\n    * Indexing series\n2. The Pandas Dataframes \n    * Creating dataframes from dictionaries\n    * Importing CSV data files as pandas dataframes\n    * Reading and summarising dataframes\n    * Sorting dataframes ","b63ec3e0":"#### Importing CSV data files as pandas dataframes \n\nFor the upcoming exercises, we will use a dataset of a retail store having details about the orders placed, customers, product details, sales, profits etc. \n\n","6444baf9":"##### Using the mtcars dataset.\n\nFor the below set of questions, we will be using the cars data from [Motor Trend Car Road Tests](http:\/\/stat.ethz.ch\/R-manual\/R-devel\/library\/datasets\/html\/mtcars.html)\n\nThe data was extracted from the 1974 Motor Trend US magazine, and comprises fuel consumption and 10 aspects of automobile design and performance for 32 automobiles (1973\u201374 models). ","48456d67":"Having meaningful row labels as indices helps you to select (subset) dataframes easily. You will study selecting dataframes in the next section. \n\n#### Sorting dataframes\n\nYou can sort dataframes in two ways - 1) by the indices and 2) by the values.","b296224c":"Usually, dataframes are imported as CSV files, but sometimes it is more convenient to convert dictionaries \ninto dataframes. For e.g. when the raw data is in a JSON format (which is not uncommon), you can easily convert it into a dictionary, and then into a dataframe. \n\nYou will learn how to convert JSON objects to dataframes later.\n\n#### Reading and Summarising Dataframes\n\nAfter you import a dataframe, you'd want to quickly understand its structure, shape, meanings of rows and columns etc. Further, you may want to look at summary statistics - such as mean, percentiles etc.","1a9487f4":"### Question 5: Check the type and dimensions of given dataset - mtcars.","67b3fa9f":"# Pandas Exercise","01ac5004":"### Question 4: Select column c in second row of df1.","744b0282":"### Question 1: Convert a given dict to pd series.","2969af11":"### Question 6: Print all the column labels in the given dataset - mtcars.","5969f7fe":"Usually, you will work with Series only as a part of dataframes. Let's study the basics of dataframes.\n\n# The Pandas Dataframe\n\nDataframe is the most widely used data-structure in data analysis. It is a table with rows and columns, with rows having an index and columns having meaningful names.\n\n#### Creating dataframes from dictionaries\n\nThere are various ways of creating dataframes, such as creating them from dictionaries, JSON objects, reading from txt, CSV files, etc. ","99cf27db":"#### Indexing Series\n\nIndexing series is exactly same as 1-D numpy arrays - index starts at 0.","6ccb5103":"Now, arbitrary numeric indices are difficult to read and work with. Thus, you may want to change the indices of the df to something more meanigful.\n\nLet's change the index to Row ID (unique id of each order), so that you can select rows using the order ids directly."}}