{"cell_type":{"c0dd4766":"code","773d4a5d":"code","1d6d56a5":"code","5d7c444e":"code","ae664f58":"code","6db008ba":"code","e68bd24b":"code","c6e0e55c":"code","f372391f":"code","89ef5eb9":"code","365d0393":"code","c7d2be8c":"code","fae43374":"code","a02949ac":"code","ad645f57":"code","9d73ea22":"code","c3f04c8c":"code","886b3dd8":"code","6221724c":"code","5003bff9":"code","6910f71c":"code","7163f01c":"code","97243df7":"code","c8323926":"code","43170779":"code","d53f57e7":"code","dde750d9":"code","9ab1232d":"code","13987fb7":"code","8937da98":"code","17af4e4a":"code","29a406bd":"code","539cdb3c":"code","97e2259a":"code","de6384f8":"code","3cd1b5b5":"code","b5af1c65":"code","9d8ff150":"code","0d2ba477":"code","558bbf10":"code","e95d44e7":"code","71da8b15":"code","9b44bc2b":"code","b21a1340":"code","073bf0f1":"code","39ef523e":"markdown","e0f61173":"markdown","b94eaa14":"markdown","53703b0c":"markdown","d6a1aa06":"markdown","6b183d36":"markdown","007bb981":"markdown","453f2b1f":"markdown","47aa7bda":"markdown","43fe46d1":"markdown","5c7bcde5":"markdown","30e4a878":"markdown","a6ea8386":"markdown","d40be80b":"markdown","b4a3bea4":"markdown"},"source":{"c0dd4766":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","773d4a5d":"df=pd.read_csv('\/kaggle\/input\/foreign-exchange-rates-per-dollar-20002019\/Foreign_Exchange_Rates.csv',parse_dates=['Time Serie'],index_col=1)","1d6d56a5":"df.drop('Unnamed: 0',axis=1,inplace=True)","5d7c444e":"df.info()","ae664f58":"df.dtypes","6db008ba":"df.isna().sum()","e68bd24b":"df=df.replace('ND',0)","c6e0e55c":"df","f372391f":"for dtype in df.dtypes:\n    df=df.astype('float')","89ef5eb9":"df.dtypes","365d0393":"fig1,(ax1,ax2)=plt.subplots(2,1,sharex=True)\ndf['AUSTRALIA - AUSTRALIAN DOLLAR\/US$'].plot(ax=ax1)\ndf['EURO AREA - EURO\/US$'].plot(ax=ax2)\n\n\nax1.set_title('AUSTRALIA - AUSTRALIAN DOLLAR\/US$',loc='right')\nax2.set_title('EURO AREA - EURO\/US$',loc='right')\n\n\n\nfig2,(ax3,ax4)=plt.subplots(2,sharex=True,)\ndf['NEW ZEALAND - NEW ZELAND DOLLAR\/US$'].plot(ax=ax3,)\ndf['UNITED KINGDOM - UNITED KINGDOM POUND\/US$'].plot(ax=ax4)\n\n\nax3.set_title('NEW ZEALAND - NEW ZELAND DOLLAR\/US$',loc='right')\nax4.set_title('UNITED KINGDOM - UNITED KINGDOM POUND\/US$',loc='right')\n\nplt.show()","c7d2be8c":"len(df)","fae43374":"df.tail()","a02949ac":"ml_df=df.loc['2018-01-01':]","ad645f57":"ml_df=ml_df.round(2)","9d73ea22":"ml_df","c3f04c8c":"test_ind=5","886b3dd8":"train=ml_df.iloc[:-test_ind]\ntest=ml_df.iloc[-test_ind:]","6221724c":"train","5003bff9":"test","6910f71c":"from sklearn.preprocessing import MinMaxScaler","7163f01c":"scaler=MinMaxScaler()","97243df7":"scaler.fit(train)","c8323926":"scaled_train=scaler.transform(train)\nscaled_test=scaler.transform(test)","43170779":"scaled_train.shape","d53f57e7":"from keras.preprocessing.sequence import TimeseriesGenerator","dde750d9":"length=2\ngenerator=TimeseriesGenerator(scaled_train,scaled_train,batch_size=1,length=length)","9ab1232d":"val_generator=TimeseriesGenerator(scaled_test,scaled_test,batch_size=1,length=length)","13987fb7":"from keras.models import Sequential\nfrom keras.layers import Dense,LSTM","8937da98":"n_features=scaled_train.shape[1]\nmodel=Sequential()\nmodel.add(LSTM(100,activation='relu',input_shape=(length,n_features)))\nmodel.add(Dense(n_features))\nmodel.compile(optimizer='adam',loss='mse')","17af4e4a":"model.summary()","29a406bd":"from keras.callbacks import EarlyStopping","539cdb3c":"early=EarlyStopping(monitor='val_loss',patience=3)","97e2259a":"model.fit_generator(generator,epochs=10,callbacks=[early],validation_data=val_generator)","de6384f8":"losses=pd.DataFrame(model.history.history)","3cd1b5b5":"losses.plot()","b5af1c65":"prediction=model.predict_generator(val_generator)","9d8ff150":"true_prediction=scaler.inverse_transform(prediction)","0d2ba477":"test_df=test[2:]","558bbf10":"test_df","e95d44e7":"prediction_df=pd.DataFrame(true_prediction,columns=test.columns,index=test_df.index)","71da8b15":"prediction_df","9b44bc2b":"fig,(ax1,ax2)=plt.subplots(2,1,figsize=(10,6),sharex=True)\nax1.plot(test_df)\nax2.plot(prediction_df)\n\nax1.set_title('True Value')\nax2.set_title('Predicted Value')","b21a1340":"from sklearn.metrics import mean_squared_error","073bf0f1":"np.sqrt(mean_squared_error(test_df['NEW ZEALAND - NEW ZELAND DOLLAR\/US$'],prediction_df['NEW ZEALAND - NEW ZELAND DOLLAR\/US$']))","39ef523e":"# Reading dataframe and changing one date colum to index and datetime dtype****","e0f61173":"# negative sign represent start from begining but dont include the test_ind values for train and for test it represent start from that index to the end","b94eaa14":"# A small Recurrent Neural Network using LSTM Layer","53703b0c":"# Removing The unamed Column","d6a1aa06":"# Scaling the dataset using MinMaxScaler and fitting only on train data so that test data cant get memorize ","6b183d36":"# Subset the the dataframe to two year so training will take less time and rounding the values to 2 decimel points to reduce noise ","007bb981":"# Changing Dtype to Floats so that working can be easy","453f2b1f":"# Early Stopping for reducing overfitting as you cant remove overfitting completely on any dataset ","47aa7bda":"# Checking some attributes and other function on dataframe","43fe46d1":"# As one observation represent one day so I split the data. Test data will get the 5 observation(row) you can set that test_ind to any integer you like for this type of data set as it represent one day with a row","5c7bcde5":"# Creating two generator validation and training generator the length value is the timestamp and you should set lenght value less then the test_perc\/test_ind variable used above","30e4a878":"# Replacing The ND value in the Data Frame to Zero Tell me What Should I have Done With It?","a6ea8386":"# Checking the RMSE on Single Column you can check on the whole dataset","d40be80b":"# Thanks i hope you like it there is always room for improvements","b4a3bea4":"# Litttle Bit Of Visualization "}}