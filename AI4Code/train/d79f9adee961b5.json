{"cell_type":{"003c22ab":"code","d40a557c":"code","4051b92a":"code","c4324408":"code","b19b7804":"code","242909e8":"code","c75f1c11":"code","8f8c2b65":"code","208a6952":"code","1cb11f2d":"code","78915f1a":"code","28f9ef86":"code","cecd12d8":"code","92f05a9e":"code","5777061c":"code","16c74387":"code","13ebaf2b":"code","8abeefee":"code","7ec7843f":"code","c738655e":"code","71d0378d":"code","96faae59":"code","d58fc52b":"code","ee4b9336":"code","488aca01":"code","150294b6":"code","73082ace":"code","b1f32e20":"code","097f29a5":"code","2a8b9ed4":"code","5d4a4437":"code","3b72051a":"code","7ac8f5e1":"markdown","b07b2f46":"markdown","a30bbe8b":"markdown","1f07c9e4":"markdown"},"source":{"003c22ab":"!pip install youtokentome","d40a557c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4051b92a":"from sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.pipeline import Pipeline, FeatureUnion\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import roc_auc_score\n\nfrom transformers import BertTokenizerFast\nimport youtokentome as yttm\n\nfrom tqdm.notebook import tqdm","c4324408":"tokenizer = BertTokenizerFast.from_pretrained('DeepPavlov\/rubert-base-cased-conversational')","b19b7804":"train = pd.read_csv('\/kaggle\/input\/ml-guild-classification-task\/train.csv')","242909e8":"train.head()","c75f1c11":"for i in train[train.positive == 1].review.iloc[:10]:\n    print(i)\n    print()","8f8c2b65":"for i in train[train.negative == 1].review.iloc[:10]:\n    print(i)\n    print()","208a6952":"for i in train[train.neutral == 1].review.iloc[:10]:\n    print(i)\n    print()","1cb11f2d":"texts = train['title'].fillna('') + train['review']\npretrained_bpe_texts = [' '.join(map(str, tokenizer.encode(text))) for text in tqdm(texts)]","78915f1a":"model = Pipeline([\n    ('tfidf', TfidfVectorizer(analyzer='word', ngram_range=(1, 3), max_features=100000)),\n    ('sgd', LogisticRegression(max_iter=1000, verbose=1))\n], verbose=1)","28f9ef86":"labels = ['positive', 'negative', 'neutral']\nX_train, X_val, y_train, y_val = train_test_split(texts, train[labels].to_numpy().argmax(axis=1), random_state=0, test_size=0.1)","cecd12d8":"model.fit(X_train, y_train)","92f05a9e":"%%time\npredict = model.predict_proba(X_val)","5777061c":"roc_auc_score(y_val, predict, multi_class='ovr')","16c74387":"labels = ['positive', 'negative', 'neutral']\nX_train, X_val, y_train, y_val = train_test_split(pretrained_bpe_texts, train[labels].to_numpy().argmax(axis=1), random_state=0, test_size=0.1)","13ebaf2b":"model.fit(X_train, y_train)","8abeefee":"%%time\npredict = model.predict_proba(X_val)","7ec7843f":"roc_auc_score(y_val, predict, multi_class='ovr')","c738655e":"texts.to_csv('all_reviews.csv', header=None, index=None)","71d0378d":"train_data_path = \"all_reviews.csv\"\nmodel_path = \"bpe.model\"\n\n# Training model\nyttm.BPE.train(data=train_data_path, vocab_size=25000, model=model_path)\n\n# Loading model\nbpe = yttm.BPE(model=model_path)\n\n# Two types of tokenization\nprint(bpe.encode(texts.tolist()[:1], output_type=yttm.OutputType.ID))\nprint(bpe.encode(texts.tolist()[:1], output_type=yttm.OutputType.SUBWORD))","96faae59":"custom_bpe_texts = [' '.join(map(str, text)) for text in tqdm(bpe.encode(texts.tolist(), output_type=yttm.OutputType.ID))]","d58fc52b":"labels = ['positive', 'negative', 'neutral']\nX_train, X_val, y_train, y_val = train_test_split(custom_bpe_texts, train[labels].to_numpy().argmax(axis=1), random_state=0, test_size=0.1)","ee4b9336":"model.fit(X_train, y_train)","488aca01":"%%time\npredict = model.predict_proba(X_val)","150294b6":"roc_auc_score(y_val, predict, multi_class='ovr')","73082ace":"test = pd.read_csv('\/kaggle\/input\/ml-guild-classification-task\/test.csv')","b1f32e20":"test_texts = test['title'].fillna('') + test['review']","097f29a5":"custom_bpe_test_texts = [' '.join(map(str, text)) for text in tqdm(bpe.encode(test_texts.tolist(), output_type=yttm.OutputType.ID))]","2a8b9ed4":"sample_submission = pd.read_csv('\/kaggle\/input\/ml-guild-classification-task\/sample_submission.csv')","5d4a4437":"sample_submission[labels] = model.predict_proba(custom_bpe_test_texts)","3b72051a":"sample_submission.to_csv('submission.csv', index=None)","7ac8f5e1":"# \u041f\u0440\u0435\u0434\u0438\u043a\u0442","b07b2f46":"# Tf-Idf \u043d\u0430 \u043f\u0440\u0435\u0434\u043e\u0431\u0443\u0447\u0435\u043d\u043d\u043e\u0439 bpe-\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0435","a30bbe8b":"# Tf-Idf \u043d\u0430 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0439 bpe-\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0435","1f07c9e4":"# Tf-Idf \u043d\u0430 \u0442\u0435\u043a\u0441\u0442\u0435"}}