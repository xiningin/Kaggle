{"cell_type":{"64932285":"code","5dc4cb8b":"code","6d42f57e":"code","739fd7dd":"code","ef561350":"code","661bf08d":"code","e663b01c":"code","f14145c2":"code","48f5ff73":"code","85bf7bfe":"code","f8dbdd8f":"code","52ad57e5":"code","fb8eecbf":"code","3b9fe835":"markdown"},"source":{"64932285":"#importing the required libraries\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nfrom scipy.fft import fft,fftfreq\nfrom sklearn.preprocessing import StandardScaler","5dc4cb8b":"#loading the dataset using pandas\ndata = pd.read_csv(\"..\/input\/powerqualitydistributiondataset1\/PowerQualityDistributionDataset1.csv\")","6d42f57e":"#The dataset is already preprocessed\ndata.drop(data.columns[[0]],axis=1,inplace=True)\ndata.shape","739fd7dd":"data.head()","ef561350":"data_arr = data.to_numpy()","661bf08d":"transform = StandardScaler()\ndata_norm = transform.fit_transform(data_arr)","e663b01c":"data_norm_fft = data_arr.copy()\nn = data_norm_fft.shape[0]\nfor i in range(0,n):\n    data_norm_fft[i] = np.append(np.abs(fft(data_norm_fft[i][0:128])),data_norm_fft[i][128])\ntransform = StandardScaler()\ndata_norm_fft = transform.fit_transform(data_norm_fft)    ","f14145c2":"data_arr.shape","48f5ff73":"print(\"class\", \"Normal wave\")\nfig, axes = plt.subplots(2, 2,figsize=(16,8))\n\n#raw data\naxes[0][0].plot([i for i in range(1,129)], data_arr[0][0:128])\naxes[0][0].title.set_text('Raw_data')\n\n#with fft\nyf = fft(data_arr[0][0:128])\nxf = fftfreq(128,1\/128)\naxes[0][1].plot(xf, np.abs(yf))\naxes[0][1].title.set_text('With_FFT')\n\n#after normalization\naxes[1][0].plot([i for i in range(1,129)], data_norm[0][0:128])\naxes[1][0].title.set_text('With_Norm')\n\n#with normalization and fft\naxes[1][1].plot([i for i in range(1,129)], data_norm_fft[0][0:128])\naxes[1][1].title.set_text('With_NormAndFFT')","85bf7bfe":"print(\"class\", \"3rd harmonic wave\")\nfig, axes = plt.subplots(2, 2,figsize=(16,8))\n\n#raw data\naxes[0][0].plot([i for i in range(1,129)], data_arr[1][0:128])\naxes[0][0].title.set_text('Raw_data')\n\n#with fft\nyf = fft(data_arr[1][0:128])\nxf = fftfreq(128,1\/128)\naxes[0][1].plot(xf, np.abs(yf))\naxes[0][1].title.set_text('With_FFT')\n\n#after normalization\naxes[1][0].plot([i for i in range(1,129)], data_norm[1][0:128])\naxes[1][0].title.set_text('With_Norm')\n\n#with normalization and fft\naxes[1][1].plot([i for i in range(1,129)], data_norm_fft[1][0:128])\naxes[1][1].title.set_text('With_NormAndFFT')","f8dbdd8f":"print(\"class\", \"5th harmonic wave\")\nfig, axes = plt.subplots(2, 2,figsize=(16,8))\n\n#raw data\naxes[0][0].plot([i for i in range(1,129)], data_arr[3][0:128])\naxes[0][0].title.set_text('Raw_data')\n\n#with fft\nyf = fft(data_arr[3][0:128])\nxf = fftfreq(128,1\/128)\naxes[0][1].plot(xf, np.abs(yf))\naxes[0][1].title.set_text('With_FFT')\n\n#after normalization\naxes[1][0].plot([i for i in range(1,129)], data_norm[3][0:128])\naxes[1][0].title.set_text('With_Norm')\n\n#with normalization and fft\naxes[1][1].plot([i for i in range(1,129)], data_norm_fft[3][0:128])\naxes[1][1].title.set_text('With_NormAndFFT')","52ad57e5":"print(\"class\", \"Voltage dip\")\nfig, axes = plt.subplots(2, 2,figsize=(16,8))\n\n#raw data\naxes[0][0].plot([i for i in range(1,129)], data_arr[6][0:128])\naxes[0][0].title.set_text('Raw_data')\n\n#with fft\nyf = fft(data_arr[6][0:128])\nxf = fftfreq(128,1\/128)\naxes[0][1].plot(xf, np.abs(yf))\naxes[0][1].title.set_text('With_FFT')\n\n#after normalization\naxes[1][0].plot([i for i in range(1,129)], data_norm[6][0:128])\naxes[1][0].title.set_text('With_Norm')\n\n#with normalization and fft\naxes[1][1].plot([i for i in range(1,129)], data_norm_fft[6][0:128])\naxes[1][1].title.set_text('With_NormAndFFT')","fb8eecbf":"print(\"class\", \"Transient wave\")\nfig, axes = plt.subplots(2, 2,figsize=(16,8))\n\n#raw data\naxes[0][0].plot([i for i in range(1,129)], data_arr[8][0:128])\naxes[0][0].title.set_text('Raw_data')\n\n#with fft\nyf = fft(data_arr[8][0:128])\nxf = fftfreq(128,1\/128)\naxes[0][1].plot(xf, np.abs(yf))\naxes[0][1].title.set_text('With_FFT')\n\n#after normalization\naxes[1][0].plot([i for i in range(1,129)], data_norm[8][0:128])\naxes[1][0].title.set_text('With_Norm')\n\n#with normalization and fft\naxes[1][1].plot([i for i in range(1,129)], data_norm_fft[8][0:128])\naxes[1][1].title.set_text('With_NormAndFFT')","3b9fe835":"# EDA on dataset - 1"}}