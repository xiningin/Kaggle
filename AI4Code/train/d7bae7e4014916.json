{"cell_type":{"259e9596":"code","f73fa00d":"code","595ffe38":"code","d31f0c58":"code","ae4088ca":"code","4cd613b3":"code","1b31628f":"code","2c1a9ebd":"code","2d3c06fc":"code","bfd24511":"code","1df5731c":"code","5757600e":"code","1c1799bc":"code","6a6a9dc0":"code","d2602d0b":"code","7a8ace1f":"code","004852d5":"code","a5bf453d":"code","6361d74e":"code","4fc2034d":"code","ceb5ac9d":"code","5d149bf5":"code","1fe3de57":"code","8f8c1183":"code","89b380c4":"code","216a87ce":"markdown","44c454b7":"markdown","83e8a4e7":"markdown","3153ff6b":"markdown","eac9d6dd":"markdown","88b5f1e8":"markdown","3013cb96":"markdown","86bb803c":"markdown","f37387c0":"markdown","ee1ef5b9":"markdown","a10d6732":"markdown","bb3d9069":"markdown","8cea1c37":"markdown","2a9844c0":"markdown","f0ffdcb6":"markdown","36bb8491":"markdown","887c6cc6":"markdown"},"source":{"259e9596":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #add yourself\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f73fa00d":"data=pd.read_csv(\"\/kaggle\/input\/fifa19\/data.csv\")","595ffe38":"data.columns","d31f0c58":"data.head(10)","ae4088ca":"data[['Unnamed: 0','Overall','Wage']].head(10)","4cd613b3":"data.info()","1b31628f":"dataBelgium=data[data.Nationality ==\"Belgium\"]\n\ndataBelgiumtop10=dataBelgium.head(10)[::-1]\n\nWage=[ 77,170,105,150,155,135,230,240,340,355]\n\na=0\nfor i in dataBelgiumtop10.Wage:\n    dataBelgiumtop10.Wage=dataBelgiumtop10.Wage.replace(i,Wage[a])\n    a=a+1\n\n# plot data\nplt.scatter(dataBelgiumtop10.Overall,dataBelgiumtop10.Wage)\nplt.xlabel(\"Overall\")\nplt.ylabel(\"Wage\")\nplt.show()\n","2c1a9ebd":"# sklearn library\nfrom sklearn.linear_model import LinearRegression\n\n# linear regression model\nlinear_reg = LinearRegression()\n\nx = dataBelgiumtop10.Overall.values.reshape(-1,1)\ny = dataBelgiumtop10.Wage.values.reshape(-1,1)\n\nlinear_reg.fit(x,y)\n\n","2d3c06fc":"# prediction\n\n#starting point \n#Method 1\nb0 = linear_reg.predict([[0]])\nprint(\"b0: \",b0)\n#Method 2\nb0_ = linear_reg.intercept_\nprint(\"b0_: \",b0_)   # The point where the y-axis intersects intercept\n\nb1 = linear_reg.coef_\nprint(\"b1: \",b1)   # slope\n","bfd24511":"\n# visualize line\narray = dataBelgiumtop10.Overall.values.reshape(-1,1)  # Overall\n\nplt.scatter(x,y)\n\ny_head = linear_reg.predict(array)  # Wage\n\nplt.plot(array, y_head,color = \"red\")\n\nlinear_reg.predict([[100]])","1df5731c":"print(linear_reg.predict([[84]]),\"-\",linear_reg.predict([[91]]))","5757600e":"from sklearn.linear_model import LinearRegression\n\ndf1=dataBelgiumtop10[['Unnamed: 0','Overall','Wage']]\n\nx = df1.iloc[:,[0,1]].values\ny = df1.Wage.values.reshape(-1,1)\n\n# %% fitting data\nmultiple_linear_regression = LinearRegression()\nmultiple_linear_regression.fit(x,y)\n","1c1799bc":"print(\"b0: \", multiple_linear_regression.intercept_)\nprint(\"b1,b2: \",multiple_linear_regression.coef_)\n\n# predict\nmultiple_linear_regression.predict(np.array([[84,150],[91,150]]))","6a6a9dc0":"import pandas as pd\nimport matplotlib.pyplot as plt\n\ndataEngland=data[data.Nationality ==\"England\"]\n\ndataEnglandtop10=dataEngland.head(10)[::-1]\n\na=0\nfor i in dataEnglandtop10.Wage:\n    dataEnglandtop10.Wage=dataEnglandtop10.Wage.replace(i,Wage[a])\n    a=a+1\n    \n    \nx = dataEnglandtop10.Overall.values.reshape(-1,1)\ny = dataEnglandtop10.Wage.values.reshape(-1,1)\n\n# plot data\nplt.scatter(x,y)\nplt.xlabel(\"Overall\")\nplt.ylabel(\"Wage\")\nplt.show()","d2602d0b":"# %% linear regression\n\nfrom sklearn.linear_model import LinearRegression\n\nlr = LinearRegression()\n\nlr.fit(x,y)\n\n\n#%% predict\n\ny_head = lr.predict(x)\n\n\nplt.plot(x,y_head,color=\"red\",label =\"linear\")\nplt.show()","7a8ace1f":"# polynomial regression =  y = b0 + b1*x +b2*x^2 + b3*x^3 + ... + bn*x^n\n\nfrom sklearn.preprocessing import PolynomialFeatures\npolynomial_regression = PolynomialFeatures(degree = 2)\n\nx_polynomial = polynomial_regression.fit_transform(x)\n\n\n# fit\nlinear_regression2 = LinearRegression()\nlinear_regression2.fit(x_polynomial,y)\n\ny_head2 = linear_regression2.predict(x_polynomial)\n\n\nplt.plot(x,y_head2,color= \"green\",label = \"poly\")\nplt.title(\"polinomal grafik\")\nplt.legend()\nplt.show()","004852d5":"# final shape formed\n# point scatters\nplt.scatter(x,y)\nplt.xlabel(\"Overall\")\nplt.ylabel(\"Wage\")\n\n#Linear line\nplt.plot(x,y_head,color=\"red\",label =\"linear\")\n\n#polynomial line\nplt.plot(x,y_head2,color= \"green\",label = \"poly\")\nplt.title(\"polynomial graph\")\nplt.legend()\n\nplt.show()","a5bf453d":"df1","6361d74e":"x = df1.iloc[:,0].values.reshape(-1,1)\ny = df1.iloc[:,1].values.reshape(-1,1)\n\n# decision tree regression\nfrom sklearn.tree import DecisionTreeRegressor\ntree_reg = DecisionTreeRegressor()   # random sate = 0\ntree_reg.fit(x,y)\n'''\ntree_reg.predict(5.5)\n'''\nx_ = np.arange(min(x),max(x),0.01).reshape(-1,1)\ny_head = tree_reg.predict(x_)\n\n","4fc2034d":"# visualize\nplt.scatter(x,y,color=\"red\")\nplt.plot(x_,y_head,color = \"green\")\nplt.xlabel(\"Unnamed\")\nplt.ylabel(\"Overall\")\nplt.show()","ceb5ac9d":"x = df1.iloc[:,0].values.reshape(-1,1)\ny = df1.iloc[:,1].values.reshape(-1,1)\n\nfrom sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor(n_estimators = 100, random_state = 42)\nrf.fit(x,y)\n\nx_ = np.arange(min(x),max(x),0.01).reshape(-1,1)\ny_head = rf.predict(x_)","5d149bf5":"# visualize\nplt.scatter(x,y,color=\"red\")\nplt.plot(x_,y_head,color=\"green\")\nplt.xlabel(\"Unnamed\")\nplt.ylabel(\"Overall\")\nplt.show()","1fe3de57":"\nx = df1.iloc[:,0].values.reshape(-1,1)\ny = df1.iloc[:,1].values.reshape(-1,1)\n    \n# plot data\nplt.scatter(x,y)\nplt.xlabel(\"Unnamed\")\nplt.ylabel(\"Overall\")\nplt.show()","8f8c1183":"#%% linear regression\n\n# sklearn library\nfrom sklearn.linear_model import LinearRegression\n\n# linear regression model\nlinear_reg = LinearRegression()\n\nlinear_reg.fit(x,y)\n\ny_head = linear_reg.predict(x)  # maas\n\n#slope line\nplt.plot(x, y_head,color = \"red\")\n\n\n#average of points on the y-axis\nm=sum(y)\/10\nx1=[min(x),max(x)]\ny1=[m,m]  \nplt.plot(x1,y1,color = \"orange\")  \nplt.show()","89b380c4":"# final shape formed\nplt.scatter(x,y)\nplt.xlabel(\"Unnamed\")\nplt.ylabel(\"Overall\")\n\nplt.plot(x, y_head,color = \"red\")\n \nplt.plot(x1,y1,color = \"orange\")  \nplt.show()","216a87ce":"<a id = \"3\"><\/a><br>\n# preliminary information","44c454b7":"<a id = \"5\"><\/a><br>\n# Linear Regression","83e8a4e7":"\n## What is Regression?\n\nRegression analysis, is one of the most important areas in statistics and machine learning. There are many regression methods available. Linear regression is one of them.\n\nRegression looks for relationships between variables.\n\nFor example, you might observe a few employees of a company and try to understand how their salary depends on characteristics such as experience, education level, role, and city they work in.\n\nThis is a regression problem where data on each employee represents an observation. The assumption is that experience, education, role and city are independent attributes, whereas salary depends on them.\n\nSimilarly, the prices of homes are based on their area, bedrooms, distance to the city center, etc. You can try to establish a mathematical addiction.\n\n\n## When Do You Need Regression? \nTypically, you need regression to answer how and how some phenomena affect and affect another, or how several variables are related. For example, you can use it to determine if and what extent experience or gender impact salaries.\n\nRegression is also useful when you want to predict a response using a new set of predictors. For example, you can try to estimate a household's electricity consumption for the next hour, given the outdoor temperature, time of day, and the number of residents in that household.","3153ff6b":"y=b0+b1x1+b2x2+...+bn*xn Multiple linear regression is similar to linear regression. Multiple linear regression required more than one features. I used all dataset's feature.","eac9d6dd":"<a id = \"9\"><\/a><br>\n# Decision Tree Regression\n\n","88b5f1e8":"y=b1*x+b0\n\nb1=constant(bias)\n\nb0=coefficient\n\nA feature (x) is required for linear regression so I used pelvic_incidence column for this regression. And target is sacral slope column.","3013cb96":"y=b0+b1x+b2x^2+...+bn*x^n","86bb803c":"# Introduction\n\n\n<font color = 'blue'>\nContent: \n    \n    \n1. [>introduction](#1)\n    * [dataset presentation](#2)\n    * [preliminary information](#3)   \n1. [>Linear and Polynomial Regressions](#4)\n    * [Linear Regression](#5)\n    * [Multiple Linear Regression](#6)\n    * [Polynomial Linear Regression](#7)\n1. [>Decision Tree Regressions](#8)\n    * [Decision Tree Regression](#9)\n    * [Random Forest Regression](#10)\n    * [Evaluation Regression Models](#11)","f37387c0":"The parts we will use","ee1ef5b9":"<a id = \"11\"><\/a><br>\n# Evaluation Regression Models","a10d6732":"<a id = \"1\"><\/a><br>\n# >introduction\n","bb3d9069":"<a id = \"7\"><\/a><br>\n# Polynomial Linear Regression","8cea1c37":"<a id = \"2\"><\/a><br>\n# dataset presentation\n","2a9844c0":"<a id = \"8\"><\/a><br>\n# >Decision Tree Regressions\n","f0ffdcb6":"<a id = \"10\"><\/a><br>\n# Random Forest Regression\n","36bb8491":"<a id = \"4\"><\/a><br>\n# >Linear and Polynomial Regressions\n","887c6cc6":"<a id = \"6\"><\/a><br>\n# Multiple Linear Regression"}}