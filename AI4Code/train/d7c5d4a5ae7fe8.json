{"cell_type":{"dafce07c":"code","c9fcda1e":"code","f0abc033":"code","29a9a7fa":"code","8a195656":"code","753678d4":"code","46d5098e":"code","57049965":"code","13026c61":"code","8705eeaf":"code","7302d215":"code","0bb78a24":"code","430901cd":"code","490ad38f":"code","587d6341":"code","3031b731":"code","47d25af8":"code","be3178cf":"code","0f6d46b3":"code","57a48986":"code","89dcd1f4":"code","21c15447":"code","94b0423e":"code","2b4bc1ff":"markdown","ce3a7f6c":"markdown","193a0633":"markdown","f4784109":"markdown","02f8fb9f":"markdown","f0985348":"markdown","d82dcc8a":"markdown","8bd0609e":"markdown"},"source":{"dafce07c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c9fcda1e":"df = pd.read_csv(\"..\/input\/ufo-sightings\/scrubbed.csv\", low_memory=False)","f0abc033":"np.random.seed(0)\ndf.sample(8)","29a9a7fa":"df.isnull().sum()","8a195656":"df['country'].unique()","753678d4":"df['country'].value_counts()","46d5098e":"df.describe(include='all')","57049965":"us_df=df[df.country=='us']","13026c61":"us_df.describe(include='all')","8705eeaf":"state=us_df.state.value_counts()\nstate_label=state.index\nstate_count=state.values","7302d215":"def plot(x,y):\n    plt.subplots(figsize=(30,10))\n    sns.barplot(x=x,y=y,palette=\"GnBu_d\")","0bb78a24":"us_df.describe()","430901cd":"plot(state_label,state_count)","490ad38f":"df.iloc[0]['datetime']","587d6341":"ufo_dates = df.datetime.str.replace('24:00', '00:00')\nufo_dates = pd.to_datetime(ufo_dates, format='%m\/%d\/%Y %H:%M')\n\ndf['datetime'] = df.datetime.str.replace('24:00', '00:00')\n\ndf['datetime'] = pd.to_datetime(df['datetime'], format='%m\/%d\/%Y %H:%M')","3031b731":"year=ufo_dates.dt.year","47d25af8":"year_counts=year.value_counts()\nyear_labels=year_counts.index\nyear_freq=year_counts.values","be3178cf":"plot(year_labels,year_freq)","0f6d46b3":"plot(year_labels[:50],year_freq[:50])","57a48986":"df_desc=df['shape']\ndf_desc.head()","89dcd1f4":"desc_counts=df_desc.value_counts()","21c15447":"desc_labels=desc_counts.index\ndesc_cou=desc_counts.values","94b0423e":"plot(desc_labels,desc_counts)","2b4bc1ff":"## Checking for null values","ce3a7f6c":"## Most Common UFO description","193a0633":"### Seems like only some last values are siginificant","f4784109":"## Trend in UFO sightings","02f8fb9f":"### This is a good intuition to understanding what df.describe() tells you. If we look at the distribution and the cell below we can see that descriptive statistics gives us a lot of information about the data. The shape of the distribution, how high the variance is and other questions can be intrepreted here","f0985348":"### Changing to the date format and then plotting","d82dcc8a":"## Plotting the sightings by state","8bd0609e":"### Getting a look at the data"}}