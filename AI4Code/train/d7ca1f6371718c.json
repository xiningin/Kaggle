{"cell_type":{"b13f0c9d":"code","582b09bc":"code","7291f4b3":"code","a0e305dc":"code","32f041bf":"code","72c400c1":"code","ff955f6e":"code","e49478c0":"code","0b152d1b":"code","e454ad2f":"code","bfa7b740":"code","d7bbec88":"code","7480721d":"code","c2e3522e":"code","59841923":"code","eb992818":"code","7e935c4e":"code","feb32aca":"code","a41fa79e":"code","124f2dff":"code","82d9696d":"code","7f9f30d7":"code","5311e605":"code","108896b8":"code","d0ff669d":"code","e2ca31de":"code","30ed4529":"markdown"},"source":{"b13f0c9d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","582b09bc":"df = pd.read_csv('\/kaggle\/input\/pima-indians-diabetes-database\/diabetes.csv')","7291f4b3":"df.head()","a0e305dc":"df.shape","32f041bf":"df.isnull().any()","72c400c1":"import seaborn as sns\nimport matplotlib.pyplot as plt","ff955f6e":"plt.figure(figsize=(15,10))\nsns.heatmap(df.corr(),annot=True)","e49478c0":"sns.pairplot(df)","0b152d1b":"sns.lineplot(x='Age',y='Glucose',hue='Outcome',data=df)","e454ad2f":"sns.countplot(x='Outcome',data=df)","bfa7b740":"plt.figure(figsize=(15,10))\nsns.countplot(x='Pregnancies',hue='Outcome',data=df)\n","d7bbec88":"sns.lineplot(x='Age',y='BloodPressure',hue='Outcome',data=df)","7480721d":"sns.lineplot(x='Age',y='Insulin',hue='Outcome',data=df)","c2e3522e":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split","59841923":"X = df.iloc[:,0:-1].values\ny = df.iloc[:,-1].values\n","eb992818":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2)","7e935c4e":"sc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","feb32aca":"import tensorflow as tf\nann = tf.keras.Sequential()","a41fa79e":"ann.add(tf.keras.layers.Dense(units=12,activation='relu'))\nann.add(tf.keras.layers.Dense(units=12,activation='relu'))\nann.add(tf.keras.layers.Dense(units=12,activation='relu'))\nann.add(tf.keras.layers.Dense(units=1,activation='sigmoid'))","124f2dff":"ann.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])","82d9696d":"ann.fit(X_train,y_train,batch_size=12,epochs=100)","7f9f30d7":"y_pred = ann.predict(X_test)\ny_pred = (y_pred>0.75)","5311e605":"for i in range(len(y_pred)):\n    print(\"Predicted %d------> Expected %d\" %(y_pred[[i]],y_test[i]))","108896b8":"from sklearn.metrics import confusion_matrix,accuracy_score\ncm = confusion_matrix(y_pred,y_test)\nacc = accuracy_score(y_pred,y_test)","d0ff669d":"cm","e2ca31de":"acc","30ed4529":"From the above graph it is very much clear that people with high glucose levels are more likely to have diabetes."}}