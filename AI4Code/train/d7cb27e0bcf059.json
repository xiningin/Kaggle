{"cell_type":{"de973313":"code","f5a96f1e":"code","d9d2e7e1":"code","2829c0ca":"code","97ae4d66":"code","8a392dd4":"code","28e61632":"code","a756ef78":"code","9f3fab1d":"code","371bddfc":"code","b3ebe04e":"code","c35f564c":"code","7310fb43":"code","d8caa6b3":"code","cb0f690e":"code","e20aa2f0":"code","d3e05d94":"code","bfc500c8":"code","61ae80fe":"code","a15df117":"code","4f60a607":"code","4c6d8b08":"code","b6320a6d":"code","58a79f8f":"code","92b9c8bd":"code","70914994":"code","ea28c543":"code","092db049":"code","69d07423":"code","02317ae9":"code","8d71d7f7":"code","2ea70348":"code","c972d5bb":"code","36defb6c":"code","13071819":"code","bbdddfbc":"code","4affb1ab":"code","62b5341e":"code","8fde97e6":"code","368d5385":"code","58cd78b6":"code","7809b175":"code","8cb40b94":"code","a602d58e":"code","1059a442":"code","a44316ec":"code","39d27df1":"code","00d7d7e0":"code","05162a40":"code","b8d87c52":"code","c43d0aed":"markdown"},"source":{"de973313":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f5a96f1e":"df=pd.read_csv('\/kaggle\/input\/bengaluru-house-price-data\/Bengaluru_House_Data.csv')\n","d9d2e7e1":"df.head(5)\n","2829c0ca":"df.sample(5)","97ae4d66":"df.shape","8a392dd4":"df.info()\n","28e61632":"df.isnull().sum()\n","a756ef78":"#Location,size,society,bath,balcony datas are missing","9f3fab1d":"df.describe().T","371bddfc":"df.info()\n","b3ebe04e":"df.sample(5)\n","c35f564c":"#area_type classification","7310fb43":"group=df.groupby('area_type')","d8caa6b3":"group.size()","cb0f690e":"# classifying different types of area_type with Single Value\ndf['area_type']=df['area_type'].astype('str').str.replace('Built-up  Area','0')\ndf['area_type']=df['area_type'].astype('str').str.replace('Carpet  Area','1')\ndf['area_type']=df['area_type'].astype('str').str.replace('Plot  Area','2')\ndf['area_type']=df['area_type'].astype('str').str.replace('Super built-up  Area','3')","e20aa2f0":"df.head(5)","d3e05d94":"#over viewing availabity column\ndf.groupby('availability').size()","bfc500c8":"#replacing ready to move and immediate possesion as 0 \ndf['availability']=df['availability'].astype('str').str.replace(\"Ready To Move\",\"0\")\ndf['availability']=df['availability'].astype('str').str.replace(\"Immediate Possession\",\"0\")","61ae80fe":"df['availability'].unique()","a15df117":"#Dont have idea what to do with other datas in availabity column. So I m jst splitting the number part and assigning values","4f60a607":"a=df['availability'].unique()\nfor i in a:\n    if('-' in i):\n        df['availability']=df['availability'].astype('str').str.replace(i,'1')\n   \n","4c6d8b08":"df.groupby('availability').size()","b6320a6d":"df.sample(5)","58a79f8f":"#over viewing Location column.We have 1 value missing .so we wll drop the missing row.","92b9c8bd":"df.dropna(subset=['location'],inplace=True)","70914994":"df.isnull().sum()","ea28c543":"df.head(3)","092db049":"#Over viwing size column.16 null values in size and mixed datas.So we will overlap with numbers.","69d07423":"df.groupby('size').size()","02317ae9":"#Dropping 16 values from size column\ndf.dropna(subset=['size'],inplace=True)","8d71d7f7":"size=[1,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,27,43]\nfor i in size:\n    df['size']=df['size'].astype(str).str.replace(str(i)+' Bedroom',str(i)).str.replace(str(i)+' BHK',str(i)).str.replace(str(i)+' RK',str(i))","2ea70348":"df.groupby('size').size()","c972d5bb":"df.sample(5)","36defb6c":"df.isnull().sum()","13071819":"# Overviewing Society column.Here we can see that we have large no Missing values for we wll drop society column.and  it is not so much usefull to calculate price","bbdddfbc":"df.drop('society',axis=1,inplace=True)","4affb1ab":"df.isnull().sum()","62b5341e":"#overviewing bath column.We have 73 missing values.","8fde97e6":"df.head(5)\n","368d5385":"\ndf.groupby('bath').size()","58cd78b6":"#filled the null places with mean \ndf['bath']=df['bath'].fillna(df['bath'].mean())","7809b175":"df.isnull().sum()","8cb40b94":"#overviewing balcony column\ndf['balcony']=df['balcony'].fillna(df['balcony'].mean())","a602d58e":"df.isnull().sum()","1059a442":"df.sample(5)","a44316ec":"df.head()","39d27df1":"df['area_type']=df['area_type'].astype('int32')\ndf['availability']=df['availability'].astype('int32')\ndf['size']=df['size'].astype('int32')\ndf['bath']=df['bath'].astype('int32')\ndf['balcony']=df['balcony'].astype('int32')\n","00d7d7e0":"df.info()","05162a40":"df.sample(10)","b8d87c52":"df.head()\n","c43d0aed":"                                             Data Preprocessing\n"}}