{"cell_type":{"281ca32d":"code","21b0dc16":"code","5b11a3e9":"code","82cdd06f":"code","d383122d":"code","f0214ba2":"code","7ea4338d":"code","08d0762d":"code","67b54375":"code","567d4b0e":"code","7effabe5":"code","000f1ba4":"code","d402ffd5":"code","82df06a9":"code","f2c39bb7":"code","2012d132":"markdown","5ae548e7":"markdown","32f0a663":"markdown","5388151b":"markdown","08f7a557":"markdown","58318add":"markdown","7a467624":"markdown","c8599cf8":"markdown","58fad250":"markdown","2c732c50":"markdown","09d621a2":"markdown","1ad55906":"markdown","c244e0fc":"markdown","3c23ac1c":"markdown","8e301f97":"markdown","8f6449e0":"markdown","18ff8653":"markdown","e74ddfbd":"markdown","3bdfa074":"markdown","4ef4bcd0":"markdown","bed1737c":"markdown","9dcf3ae0":"markdown"},"source":{"281ca32d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport matplotlib.pyplot as plt        \nimport seaborn as sns\nimport missingno\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","21b0dc16":"# Parette Color Set\n\nNY_GIANTS_Color = [\"#0B2265\", \"#A71930\", \"#A5ACAF\"]\nNY_GIANTS = {1 : NY_GIANTS_Color[0], 0 : NY_GIANTS_Color[1], \n             \"Yes\" : NY_GIANTS_Color[0], \"No\" : NY_GIANTS_Color[1]}\n\n# Loading Data\ndf = pd.read_csv('\/kaggle\/input\/travel-insurance-prediction-data\/TravelInsurancePrediction.csv', index_col='Unnamed: 0')\n\n# Missing Value Check Visulization\nmissingno.matrix(df, color =(0.04, 0.13, 0.40))","5b11a3e9":"# For understand easier\ndf.loc[df[\"TravelInsurance\"] == 1, \"Travel_Insurance_Buy\"] = \"Yes\"\ndf.loc[df[\"TravelInsurance\"] == 0, \"Travel_Insurance_Buy\"] = \"No\"\n\n# For Analysis easier\ndf.loc[df[\"GraduateOrNot\"] == \"Yes\", \"GraduateOrNot_num\"] = 1\ndf.loc[df[\"GraduateOrNot\"] == \"No\", \"GraduateOrNot_num\"] = 0\n\ndf.loc[df[\"FrequentFlyer\"] == \"Yes\", \"FrequentFlyer_num\"] = 1\ndf.loc[df[\"FrequentFlyer\"] == \"No\", \"FrequentFlyer_num\"] = 0\n\ndf.loc[df[\"EverTravelledAbroad\"] == \"Yes\", \"EverTravelledAbroad_num\"] = 1\ndf.loc[df[\"EverTravelledAbroad\"] == \"No\", \"EverTravelledAbroad_num\"] = 0","82cdd06f":"# Currency Indian Rupees to USD for easier understading\nExchange_Rate = 0.0142\ndf['Annual_Income_USD'] = round((df['AnnualIncome'] * Exchange_Rate), 2)","d383122d":"sns.countplot(x='Travel_Insurance_Buy', data=df, palette=NY_GIANTS)","f0214ba2":"df_pairplot = df\ndf_pairplot = df_pairplot.drop('TravelInsurance', axis=1)\ndf_pairplot = df_pairplot.drop('GraduateOrNot', axis=1)\ndf_pairplot = df_pairplot.drop('FrequentFlyer', axis=1)\ndf_pairplot = df_pairplot.drop('EverTravelledAbroad', axis=1)\ndf_pairplot = df_pairplot.drop('AnnualIncome', axis=1)\n\nsns.pairplot(df_pairplot, hue='Travel_Insurance_Buy', palette=NY_GIANTS)","7ea4338d":"df_corr = df_pairplot\ndf_corr = df_corr.drop('Travel_Insurance_Buy', axis=1)\ndf_corr['TravelInsurance'] = df['TravelInsurance']","08d0762d":"sns.set_theme(style=\"white\")\n\n# Compute the correlation matrix\ncorr = df_corr.corr()\n\n# Generate a mask for the upper triangle\nmask = np.triu(np.ones_like(corr, dtype=bool))\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(15, 15))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(10, 240, n=8)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, mask=mask, cmap=cmap, center=0,vmax=0.5, vmin=-0.1,\n            annot=True, square=True, linewidths=0.5, cbar_kws={\"shrink\": .5})","67b54375":"fig = plt.figure(figsize=(8,15))\n\nfig=plt.subplot(3,1,1)\nsns.histplot(df_pairplot, x=df_pairplot['Annual_Income_USD'], hue=\"Travel_Insurance_Buy\", element=\"step\", palette=NY_GIANTS)\n\nfig=plt.subplot(3,1,2)\nsns.histplot(df_pairplot, x=df_pairplot['FamilyMembers'], hue=\"Travel_Insurance_Buy\", element=\"step\", palette=NY_GIANTS)\n\nfig=plt.subplot(3,1,3)\nsns.histplot(df_pairplot, x=df_pairplot['Age'], hue=\"Travel_Insurance_Buy\", element=\"step\", palette=NY_GIANTS)","567d4b0e":"df_ss = df_corr\none_hot = pd.get_dummies(df_ss['Employment Type'])\ndf_ss = df_ss.join(one_hot)\ndf_ss = df_ss.drop('Employment Type', axis=1)\nlast_col = df_ss['TravelInsurance']\ndf_ss = df_ss.drop('TravelInsurance', axis=1)\ndf_ss = df_ss.join(last_col)","7effabe5":"train_input = df_ss.iloc[:,0:-1].to_numpy()\ntrain_target = df_ss.iloc[:,-1:]","000f1ba4":"from sklearn.model_selection import cross_validate","d402ffd5":"from lightgbm import LGBMClassifier\nlgb = LGBMClassifier(random_state=42)\nscores = cross_validate(lgb, train_input, train_target, return_train_score=True, n_jobs=-1)\n\nprint(\"Train Accuracy : \", np.mean(scores['train_score']))\nprint(\"Test Accuracy : \",np.mean(scores['test_score']))","82df06a9":"from xgboost import XGBClassifier\nxgb = XGBClassifier(random_state=42)\nscores = cross_validate(xgb, train_input, train_target, return_train_score=True, n_jobs=-1)\n\nprint(\"Train Score : \", np.mean(scores['train_score']))\nprint(\"Test Score : \", np.mean(scores['test_score']))","f2c39bb7":"from sklearn.experimental import enable_hist_gradient_boosting\nfrom sklearn.ensemble import HistGradientBoostingClassifier\n\nhgb = HistGradientBoostingClassifier(random_state=42)\nscores = cross_validate(hgb, train_input, train_target, return_train_score=True)\n\nprint(\"Train Score : \",np.mean(scores['train_score']))\nprint(\"Test Score : \",np.mean(scores['test_score']))","2012d132":"No null found. Great! I love this dataset","5ae548e7":"# <h1 style='background:#0B2265; border:#A71930; border-width: thick; border-style: solid; color:white'><center>Travel Insurance : EDA & Predection<\/center><\/h1> ","32f0a663":"## XG Boost","5388151b":"# Correlation Check","08f7a557":"# <h1 style='background:#0B2265; border:#A71930; border-width: thick; border-style: solid; color:white'><center> 1st Down : Null Check & Definition<\/center><\/h1> ","58318add":"# <h1 style='background:#0B2265; border:#A71930; border-width: thick; border-style: solid; color:white'><center> 4th Down : Conclusion<\/center><\/h1> ","7a467624":"# Definitions","c8599cf8":"# Overall View","58fad250":"# Features","2c732c50":"# Loading","09d621a2":"looks like \n* \"Frequent Flyer : Yes\"\n* \"Ever Trabelled Abroad : Yes\"\n* \"Annual_Income_USD : Higher\"\n\nare meaningful ","1ad55906":"To find out who buy travel insurance or not :\n\nYou may focus\n* \"Ever Trabelled Abroad : Yes\"\n* \"Annual_Income_USD : Higher\"\n\nOnly vanilla setting, achieved 81% by using\n* LGBM\n* Hist Gradient Boosting\n\nYou may have higher Acc. by parameter setting.","c244e0fc":"# <h1 style='background:#0B2265; border:#A71930; border-width: thick; border-style: solid; color:white'><center> 3rd Down : Prediction Model<\/center><\/h1> ","3c23ac1c":"# Conclusion","8e301f97":"# Null Check","8f6449e0":"# <h1 style='background:#0B2265; border:#A71930; border-width: thick; border-style: solid; color:white'><center> 2nd Down : Data Analysis<\/center><\/h1> ","18ff8653":"## Hist Gradient Boosting","e74ddfbd":"## LGBM","3bdfa074":"# Models","4ef4bcd0":"looks like \n* \"Age\"\n* \"Annual_Income_USD\"\nshow meaningful distribution.\n\nLet's check more.","bed1737c":"Indian Rupee to US Dollar Spot Exchange Rates for 2019\n* Best exchange rate: 0.0146 USD on 16 Jul 2019.\n* Average exchange rate in 2019: 0.0142 USD.\n* Worst exchange rate: 0.0139 USD on 03 Dec 2019.","9dcf3ae0":"* Age : Age Of The Customer\n* Employment Type : The Sector In Which Customer Is Employed\n* GraduateOrNot: Whether The Customer Is College Graduate Or Not\n* AnnualIncome : The Yearly Income Of The Customer In Indian Rupees\n* FamilyMembers :  Number Of Members In Customer's Family\n* ChronicDisease : Whether The Customer Suffers From Any Major Disease\n* FrequentFlyer- Customer's History Of Booking Air Tickets \n* EverTravelledAbroad- Has The Customer Ever Travelled To A Foreign Country\n* TravelInsurance- Whether The Customer Bought The Travel Insurance Or Not"}}