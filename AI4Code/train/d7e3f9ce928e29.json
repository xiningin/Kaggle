{"cell_type":{"824d162d":"code","00e4293c":"code","86cb802f":"code","3c9f29a4":"code","2fd00c77":"code","99f62499":"code","3f69b960":"code","48377f17":"code","dc2b2a51":"code","14714596":"code","d625ec12":"code","c0501e08":"code","f5f9284f":"code","6af837c8":"code","1865c23c":"code","158da366":"code","f177ac6a":"code","a2a9203c":"code","7aeb9fa3":"code","f5bf0696":"code","7ad06402":"code","168c977c":"code","5cfc2ea3":"code","0ecf9bf6":"code","8ee55ce0":"code","0948ddcd":"code","4cb7cea6":"code","32415e3f":"code","7b4903fd":"code","d43652e1":"code","3b2081db":"code","3467d5ed":"markdown","17ebae46":"markdown","9ebfa481":"markdown","d8565ee6":"markdown","a73be3e1":"markdown","3f84a69c":"markdown","3572c555":"markdown","fd726c07":"markdown","30a47e47":"markdown","0f605485":"markdown","ac988975":"markdown","3b0be2fb":"markdown","a65089b2":"markdown","5a7e269e":"markdown","370256c5":"markdown","ca02f527":"markdown","d746d56f":"markdown","9b6d4535":"markdown","ad5c787a":"markdown","ae0abd18":"markdown","e6a3048b":"markdown","6f433421":"markdown","3130ee82":"markdown","05505063":"markdown","8800c72b":"markdown","6949514c":"markdown","5ed36a72":"markdown","752131c7":"markdown","b655c8f8":"markdown","1a4f708a":"markdown","0944738f":"markdown","b342882d":"markdown","623b5825":"markdown","7f074c0c":"markdown","d5e3f28e":"markdown","9c6f6570":"markdown","e36331dd":"markdown","bdd72825":"markdown","8e24d0dc":"markdown","85f5b9a5":"markdown","b53dde93":"markdown"},"source":{"824d162d":"# Install PyCaret\n!pip install pycaret\n!pip install --upgrade pycaret #if you have installed beta version in past, run the below code to upgrade\n\nimport numpy as np\nimport pandas as pd\nimport os, sys\nfrom IPython.display import display\n\nfrom pycaret.utils import version\n\n# PyCaret version\nversion()","00e4293c":"# Importing dataset\nfrom pycaret.datasets import get_data\n\n# For classification examples\nprint('Classification: Diabetes Data')\ndiabetes = get_data('diabetes')\n\n# For regression examples\nprint('Regression: Boston Data')\nboston = get_data('boston')\n","86cb802f":"# Importing module and initializing setup\nfrom pycaret.classification import *\nclf1 = setup(data = diabetes, target = 'Class variable')\n\n# comparing all models\ncompare_models()","3c9f29a4":"# Importing module and initializing setup\nfrom pycaret.regression import *\nreg1 = setup(data = boston, target = 'medv')\n\n# comparing all models\ncompare_models()","2fd00c77":"clf1 = setup(data = diabetes, target = 'Class variable')\n# creating logistic regression model\nlr = create_model('lr')","99f62499":"reg1 = setup(data = boston, target = 'medv')\n\n# creating xgboost model\nxgboost = create_model('xgboost')","3f69b960":"clf1 = setup(data = diabetes, target = 'Class variable')\n# tuning LightGBM Model\ntuned_lightgbm = tune_model('lightgbm')","48377f17":"# Importing dataset\nfrom pycaret.datasets import get_data\nboston = get_data('boston')\n# Importing module and initializing setup\nfrom pycaret.regression import *\nreg1 = setup(data = boston, target = 'medv')\n# tuning Random Forest model\ntuned_rf = tune_model('rf', n_iter = 50, optimize = 'mae')","dc2b2a51":"from pycaret.clustering import *\nclu1 = setup(data = diabetes)\n# Tuning K-Modes Model\ntuned_kmodes = tune_model('kmodes', supervised_target = 'Class variable')","14714596":"from pycaret.anomaly import *\nano1 = setup(data = boston)\n# Tuning Isolation Forest Model\ntuned_iforest = tune_model('iforest', supervised_target = 'medv')","d625ec12":"kiva = get_data('kiva')\n# Importing module and initializing setup\nfrom pycaret.nlp import *\nnlp1 = setup(data = kiva, target = 'en')\n# Tuning LDA Model\ntuned_lda = tune_model('lda', supervised_target = 'status')","c0501e08":"clf1 = setup(data = diabetes, target = 'Class variable')\n# creating decision tree model\ndt = create_model('dt')\n# ensembling decision tree model (bagging)\ndt_bagged = ensemble_model(dt)","f5f9284f":"# Importing dataset\nfrom pycaret.datasets import get_data\nboston = get_data('boston')\n# Importing module and initializing setup\nfrom pycaret.regression import *\nreg1 = setup(data = boston, target = 'medv')\n# creating decision tree model\ndt = create_model('dt')\n# ensembling decision tree model (boosting)\ndt_boosted = ensemble_model(dt, method = 'Boosting')","6af837c8":"clf1 = setup(data = diabetes, target = 'Class variable')\n# blending all models\nblend_all = blend_models()","1865c23c":"# Importing dataset\nfrom pycaret.datasets import get_data\nboston = get_data('boston')\n# Importing module and initializing setup\nfrom pycaret.regression import *\n\nreg1 = setup(data = boston, target = 'medv')\n# creating multiple models for blending\ndt = create_model('dt')\ncatboost = create_model('catboost')\nlightgbm = create_model('lightgbm')\n# blending specific models\nblender = blend_models(estimator_list = [dt, catboost, lightgbm])","158da366":"clf1 = setup(data = diabetes, target = 'Class variable')\n# create individual models for stacking\nridge = create_model('ridge')\nlda = create_model('lda')\ngbc = create_model('gbc')\nxgboost = create_model('xgboost')\n# stacking models\nstacker = stack_models(estimator_list = [ridge,lda,gbc], meta_model = xgboost)","f177ac6a":"# Importing dataset\nfrom pycaret.datasets import get_data\nboston = get_data('boston')\n# Importing module and initializing setup\nfrom pycaret.regression import *\n\nreg1 = setup(data = boston, target = 'medv')\n# creating multiple models for multiple layer stacking\ncatboost = create_model('catboost')\net = create_model('et')\nlightgbm = create_model('lightgbm')\nxgboost = create_model('xgboost')\nada = create_model('ada')\nrf = create_model('rf')\ngbr = create_model('gbr')\n# creating multiple layer stacking from specific models\nstacknet = create_stacknet([[lightgbm, xgboost, ada], [et, gbr, catboost, rf]])","a2a9203c":"clf1 = setup(data = diabetes, target = 'Class variable')\n# creating a model\nlr = create_model('lr')\n# plotting a model\nplot_model(lr)","7aeb9fa3":"# Importing dataset\nfrom pycaret.datasets import get_data\nboston = get_data('boston')\n# Importing module and initializing setup\nfrom pycaret.regression import *\n\nreg1 = setup(data = boston, target = 'medv')\n# creating a model\nlr = create_model('lr')\n# plotting a model\nplot_model(lr)","f5bf0696":"# Importing dataset\nfrom pycaret.datasets import get_data\njewellery = get_data('jewellery')\n# Importing module and initializing setup\nfrom pycaret.clustering import *\nclu1 = setup(data = jewellery)\n# creating a model\nkmeans = create_model('kmeans')\n# plotting a model\nplot_model(kmeans)","7ad06402":"# Importing dataset\nfrom pycaret.datasets import get_data\nanomalies = get_data('anomaly')\n# Importing module and initializing setup\nfrom pycaret.anomaly import *\nano1 = setup(data = anomalies)\n# creating a model\niforest = create_model('iforest')\n# plotting a model\nplot_model(iforest)","168c977c":"# Importing dataset\nfrom pycaret.datasets import get_data\nkiva = get_data('kiva')\n# Importing module and initializing setup\nfrom pycaret.nlp import *\nnlp1 = setup(data = kiva, target = 'en')\n# creating a model\nlda = create_model('lda')\n# plotting a model\nplot_model(lda)","5cfc2ea3":"# Importing dataset\nfrom pycaret.datasets import get_data\nfrance = get_data('france')\n# Importing module and initializing setup\nfrom pycaret.arules import *\narul1 = setup(data = france, transaction_id = 'Invoice', item_id = 'Description')\n# creating a model\nmodel = create_model(metric = 'confidence')\n# plotting a model\nplot_model(model)","0ecf9bf6":"# Importing dataset\nfrom pycaret.datasets import get_data\ndiabetes = get_data('diabetes')\n# Importing module and initializing setup\nfrom pycaret.classification import *\nclf1 = setup(data = diabetes, target = 'Class variable')\n# creating a model\nxgboost = create_model('xgboost')\n# interpreting model\ninterpret_model(xgboost)","8ee55ce0":"# Importing dataset\nfrom pycaret.datasets import get_data\ndiabetes = get_data('diabetes')\n# Importing module and initializing setup\nfrom pycaret.classification import *\nclf1 = setup(data = diabetes, target = 'Class variable')\n# creating a model\nxgboost = create_model('xgboost')\n# interpreting model\ninterpret_model(xgboost, plot = 'correlation')","0948ddcd":"# Importing dataset\nfrom pycaret.datasets import get_data\ndiabetes = get_data('diabetes')\n# Importing module and initializing setup\nfrom pycaret.classification import *\nclf1 = setup(data = diabetes, target = 'Class variable')\n# creating a model\nxgboost = create_model('xgboost')\n# interpreting model\ninterpret_model(xgboost, plot = 'reason', observation = 10)","4cb7cea6":"# Importing dataset\nfrom pycaret.datasets import get_data\njewellery = get_data('jewellery')\n# Importing module and initializing setup\nfrom pycaret.clustering import *\nclu1 = setup(data = jewellery)\n# create a model\nkmeans = create_model('kmeans')\n# Assign label\nkmeans_results = assign_model(kmeans)","32415e3f":"# Importing dataset\nfrom pycaret.datasets import get_data\nanomalies = get_data('anomalies')\n# Importing module and initializing setup\nfrom pycaret.anomaly import *\nano1 = setup(data = anomalies)\n# create a model\niforest = create_model('iforest')\n# Assign label\niforest_results = assign_model(iforest)","7b4903fd":"# Importing dataset\nfrom pycaret.datasets import get_data\nkiva = get_data('kiva')\n# Importing module and initializing setup\nfrom pycaret.nlp import *\nnlp1 = setup(data = kiva, target = 'en')\n# create a model\nlda = create_model('lda')\n# Assign label\nlda_results = assign_model(lda)","d43652e1":"# Importing dataset\nfrom pycaret.datasets import get_data\ndiabetes = get_data('diabetes')\n# Importing module and initializing setup\nfrom pycaret.classification import *\nclf1 = setup(data = diabetes, target = 'Class variable')\n# create a model\ndt = create_model('dt')\n# calibrate a model\ncalibrated_dt = calibrate_model(dt)","3b2081db":"# Importing dataset\nfrom pycaret.datasets import get_data\ncredit = get_data('credit')\n# Importing module and initializing setup\nfrom pycaret.classification import *\nclf1 = setup(data = credit, target = 'default')\n# create a model\nxgboost = create_model('xgboost')\n# optimize threshold for trained model\noptimize_threshold(xgboost, true_negative = 1500, false_negative = -5000)","3467d5ed":"### Classification\n","17ebae46":"### Classification","9ebfa481":"### Regression","d8565ee6":"## Ensemble ","a73be3e1":"## Tune Model","3f84a69c":"### Anomaly Detection Example","3572c555":"### Clustering","fd726c07":"### Regression","30a47e47":"### Assiciation Rule Mining","0f605485":"# <center> PyCaret Examples <\/center>\n    \n<center> Examples compiled into a single Kaggle Notebook from https:\/\/pycaret.org\/ <\/center>","ac988975":"### Optimize Threshlold","3b0be2fb":"### Regression","a65089b2":"### Classification","5a7e269e":"## Creating Models","370256c5":"## Blending","ca02f527":"### Anamoly Detection","d746d56f":"## Plot Model","9b6d4535":"### Classification","ad5c787a":"### Natural Language Processing","ae0abd18":"## Interprete Model","e6a3048b":"### Natural Language Proecssing ","6f433421":"### Regression","3130ee82":"## Assign Model","05505063":"### Summary Plot","8800c72b":"## Compare Models","6949514c":"### Natural Language Processing","5ed36a72":"## Import Packages","752131c7":"### Classification","b655c8f8":"### Correlation Plot","1a4f708a":"## Stacking","0944738f":"### Clustering","b342882d":"## Calibrate Model","623b5825":"### Anamoly Detection","7f074c0c":"### Clustering","d5e3f28e":"### Classification","9c6f6570":"### Regression","e36331dd":"### Regression","bdd72825":"## Get Data","8e24d0dc":"### Classification","85f5b9a5":"### Regression","b53dde93":"### Reason Plot at Observation Level"}}