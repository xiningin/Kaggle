{"cell_type":{"49f4ef1b":"code","630a3516":"code","9d98b821":"code","9cdd1447":"code","4dd4aef7":"code","d3526136":"code","6092912c":"code","61f30ab1":"code","96c36a65":"code","ad067bdc":"code","f0b45b88":"code","6d68ef03":"code","64e01a27":"code","c4d294ff":"code","d702d9a9":"code","b78235e8":"code","290b9fb5":"code","5f9cd3c1":"code","8209e531":"code","3d01df49":"markdown","b7d95d35":"markdown","b4dacb42":"markdown","eb54886f":"markdown","f4ad3362":"markdown","1bc028b2":"markdown","ced02abf":"markdown","a531936d":"markdown","befae68b":"markdown","66d6028a":"markdown","77c4f9c1":"markdown","5ce80b44":"markdown"},"source":{"49f4ef1b":"import pandas as pd\nimport numpy as np","630a3516":"posts = pd.read_csv(\"..\/input\/reddit-wallstreetsbets-posts\/reddit_wsb.csv\")","9d98b821":"posts[\"date\"] = pd.to_datetime(posts.timestamp).dt.date\nposts[\"hour\"] = pd.to_datetime(posts.timestamp).dt.hour\nposts[\"post_count\"] = 1\nposts","9cdd1447":"by_day = posts.groupby(\"date\").aggregate({\"score\": \"mean\", \"comms_num\": \"mean\", \"post_count\": \"sum\"})\nby_hour = posts.groupby([\"date\", \"hour\"]).aggregate({\"score\": \"mean\", \"comms_num\": \"mean\", \"post_count\": \"sum\"})","4dd4aef7":"import plotly.express as px\npd.options.plotting.backend = \"plotly\"\nby_hour.reset_index().plot(y = \"comms_num\")","d3526136":"by_hour.reset_index().plot(y = \"score\")","6092912c":"by_hour.reset_index().plot(y = \"post_count\")","61f30ab1":"by_day.plot(y = \"comms_num\")","96c36a65":"by_day.plot(y = \"score\")","ad067bdc":"by_day.plot(y = \"post_count\")","f0b45b88":"!pip install text2emotion\nimport text2emotion as te","6d68ef03":"posts[\"alltexts\"] = posts.title + \" \"+posts.body.astype(str)","64e01a27":"from time import sleep","c4d294ff":"emotions = []\nfrom tqdm import tqdm_notebook as tqdm\ntqdm().pandas()\nfor text in tqdm(posts.alltexts):\n    emotions.append(te.get_emotion(str(text)))","d702d9a9":"emotion_data = pd.DataFrame.from_dict(emotions)\nposts['happy'] = emotion_data.Happy\nposts['angry'] = emotion_data.Angry\nposts['surprise'] = emotion_data.Surprise\nposts['sad'] = emotion_data.Sad\nposts['fear'] = emotion_data.Fear","b78235e8":"posts","290b9fb5":"by_day = posts.groupby(\"date\").mean()\nby_hour = posts.groupby([\"date\", \"hour\"]).mean()","5f9cd3c1":"fig = by_hour.reset_index().plot(y = \"happy\", labels={\n                     \"happy\": \"Ratio of words of each emotion\", \n                     \"index\": \"Hours since 9:00am on 1\/28\/2021\"\n                 },\n                title=\"Trends in emotions expressed in r\/WallStreetBets posts by hour\")\nfig.add_scatter(y=by_hour['sad'], mode='lines', name = \"Sad\")\nfig.add_scatter(y=by_hour['angry'], mode='lines', name = \"Angry\")\nfig.add_scatter(y=by_hour['surprise'], mode='lines', name = \"Surprise\")\nfig.add_scatter(y=by_hour['fear'], mode='lines', name = \"Fear\")\nfig.show()","8209e531":"fig = by_day.reset_index().plot(y = \"happy\", labels={\n                     \"happy\": \"Ratio of words of each emotion\", \n                     \"index\": \"Days since 1\/28\/2021\"\n                 },\n                title=\"Trends in emotions expressed in r\/WallStreetBets posts by day\")\nfig.add_scatter(y=by_day['sad'], mode='lines', name = \"Sad\")\nfig.add_scatter(y=by_day['angry'], mode='lines', name = \"Angry\")\nfig.add_scatter(y=by_day['surprise'], mode='lines', name = \"Surprise\")\nfig.add_scatter(y=by_day['fear'], mode='lines', name = \"Fear\")\nfig.show()","3d01df49":"Import emotion tagger (text2emotion)","b7d95d35":"Plot ratio of words of each emotion by hour","b4dacb42":"Aggregate emotional word data by day and hour","eb54886f":"Plot mean comment count, mean reddit post score (a metric of engagement on a post), and the number of total posts by hour","f4ad3362":"Plot mean comment count, mean reddit post score (a metric of engagement on a post), and the number of total posts by day","1bc028b2":"# The goal of this short analysis is to determine the trends in posts on the WallStreetBets subreddit since January 28th. Posts will be analyzed by the ratio of happy, angry, sad, surprised, and fearful words by hour and by day.","ced02abf":"Get ratio of each emotion","a531936d":"Combine post title and body text for each post","befae68b":"Aggregate by day, and by hour","66d6028a":"Install packages and import data","77c4f9c1":"Get day and hour of each post, and create dummy column for post count (for aggregation)","5ce80b44":"Plot ratio of words of each emotion by day"}}