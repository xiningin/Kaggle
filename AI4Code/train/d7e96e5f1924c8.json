{"cell_type":{"5de19609":"code","50a3ca04":"code","0b61c9ca":"code","a1ae69d4":"code","f4f29a53":"code","6ff8a462":"markdown"},"source":{"5de19609":"!conda install -y -c rdkit rdkit","50a3ca04":"%%writefile normalize_inchis.py\n\nfrom tqdm import tqdm\nfrom rdkit import Chem\nfrom rdkit import RDLogger\nRDLogger.DisableLog('rdApp.*')\nfrom pathlib import Path\n\ndef normalize_inchi(inchi):\n    try:\n        mol = Chem.MolFromInchi(inchi)\n    except:\n        pass\n    if mol is None:\n        return inchi\n    else:\n        try: return Chem.MolToInchi(mol)\n        except: return inchi\n        \nsubmission_name = '..\/input\/bmsmt-ds-model\/submission_3.06.csv'\nnorm_path = Path('submission_norm.csv')\n\n# Do the job\nN = norm_path.read_text().count('\\n') if norm_path.exists() else 0\nprint(N, 'number of predictions already normalized')\n\nr = open(submission_name, 'r')\nwrite_mode = 'w' if N == 0 else 'a'\nw = open(str(norm_path), write_mode, buffering=1)\n\nfor _ in range(N):\n    r.readline()\nline = r.readline()  # this line is the header or is where it died last time\nw.write(line)\n\npbar = tqdm()\nwhile True:\n    line = r.readline()\n    if not line:\n        break  # done\n    image_id = line.split(',')[0]\n    inchi = ','.join(line[:-1].split(',')[1:]).replace('\"','')\n    inchi_norm = normalize_inchi(inchi)\n    w.write(f'{image_id},\"{inchi_norm}\"\\n')\n    pbar.update(1)\n\nr.close()\nw.close()","0b61c9ca":"!ls","a1ae69d4":"!while [ 1 ]; do python normalize_inchis.py && break; done","f4f29a53":"# import pandas as pd\n# import Levenshtein\n# from tqdm import tqdm\n\n# sub_df = pd.read_csv(submission_name)\n# sub_norm_df = pd.read_csv(norm_path)\n\n# lev = 0\n# N = len(sub_df)\n# for i in tqdm(range(N)):\n#     inchi, inchi_norm = sub_df.iloc[i,1], sub_norm_df.iloc[i,1]\n#     lev += Levenshtein.distance(inchi, inchi_norm)\n\n# print(lev\/N)","6ff8a462":"# Rewrite [nofreewill](https:\/\/www.kaggle.com\/nofreewill)'s [notebook](https:\/\/www.kaggle.com\/nofreewill\/normalize-your-predictions) and make it can run on Kaggle.\n\n!!! The LB score may get worse."}}