{"cell_type":{"7cafe09d":"code","f2b25165":"code","966399d2":"code","a93b7951":"code","28dbe2c4":"code","7bd02242":"code","b59bbded":"code","93678e95":"code","ebf57771":"code","0ddafa53":"code","8681dc6e":"code","2349f5de":"code","5d6b68f2":"code","3345a068":"code","947fe645":"code","5eecd8d2":"code","09da3e6a":"code","0ce7f11b":"code","f8c8fc7f":"code","5f41f562":"code","033e33ad":"markdown","15656566":"markdown","5cb1906d":"markdown","54fcb4a5":"markdown","cfb6897b":"markdown","6efd2d0c":"markdown","f17a805c":"markdown","fe0486fd":"markdown","1bba61c1":"markdown","b8342ac6":"markdown","03c4b5b1":"markdown"},"source":{"7cafe09d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f2b25165":"data=pd.read_csv('..\/input\/wine-reviews\/winemag-data-130k-v2.csv')\ndata.head()","966399d2":"data.info()","a93b7951":"data.corr() #Rating values for only float value ","28dbe2c4":"f,ax = plt.subplots(figsize=(8, 8))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, center=0, cmap=\"YlGnBu\", fmt= '.1f',ax=ax)\nplt.show()","7bd02242":"data.head(10)","b59bbded":"data.columns","93678e95":"# Line Plot\ndata.price.plot(kind = 'line', color = 'y',label = 'price',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.points.plot(color = 'g',label = 'points',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('PRICE')             \nplt.ylabel('POINTS')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","ebf57771":"# Scatter Plot \ndata.plot(kind='scatter', x='price', y='points',alpha = 0.5,color = 'red')\nplt.xlabel('Price')              # label = name of label\nplt.ylabel('Points')\nplt.title('Price Points Scatter Plot')  ","0ddafa53":"#Histogram\ndata.price.plot(kind = 'hist',color='red', bins = 50,figsize = (5,5))\nplt.show()","8681dc6e":"dictionary = {'turkiye' : 'istanbul','almanya' : 'berlin'}\nprint(dictionary.keys())\nprint(dictionary.values())","2349f5de":"dictionary['turkiye'] = \"sakarya\"    # update existing entry\nprint(dictionary)\ndictionary['france'] = \"paris\"       # Add new entry\nprint(dictionary)\ndel dictionary['turkiye']              # remove entry with key 'turkiye'\nprint(dictionary)\nprint('france' in dictionary)        # check include or not\ndictionary.clear()                   # remove all entries in dict\nprint(dictionary)","5d6b68f2":"data = pd.read_csv('..\/input\/wine-reviews\/winemag-data-130k-v2.csv')","3345a068":"series = data['price']        # data['price'] = series\nprint(type(series))\ndata_frame = data[['price']]  # data[['price']] = data frame\nprint(type(data_frame))\n","947fe645":"# Filtering Pandas data frame\nx = data['price']>20     #\ndata[x]","5eecd8d2":"data[np.logical_and(data['price']>20, data['points']>90)]","09da3e6a":"lis = [1,2,3,4,5]\nfor i in lis:\n    print('i : ',i)\nprint('')","0ce7f11b":"for index, value in enumerate(lis): #index : value = 0:1, 1:2, 2:3, 3:4, 4:5\n    print(index,\" : \",value)\nprint('')  ","f8c8fc7f":"dictionary = {'turkiye':'istanbul','france':'paris'}\nfor key,value in dictionary.items():\n    print(key,\" : \",value)\nprint('')","5f41f562":"for index,value in data[['price']][0:1].iterrows():\n    print(index,\" : \",value)","033e33ad":"                            DICTIONARY\n* It has 'key' and 'value'\n* dictionary = {'Turkiye' : 'Istanbul'}\n* Key is Turkiye.\n* Values is Istanbul.","15656566":"The head() function is used to get the first n rows. This function returns the first n rows for the object based on position. It is useful for quickly testing if your object has the right type of data in it.","5cb1906d":"WHILE and FOR LOOPS\nWe will learn the most basic while and for loops","54fcb4a5":"I'll use a csv file of a content whose dataset is a wine review.\n","cfb6897b":"Pandas head() method is used to return top n (5 by default) rows of a data frame or series.","6efd2d0c":"                                         HELLO\nI want to start by using simple python libraries since it is my first kernel.I believe I will do good jobs.\nLets start.","f17a805c":"Lets practice some other properties like keys(), values(), update, add, check, remove key, remove all entries and remove dicrionary.","fe0486fd":"WHAT \u0130S THE CORRELATION?\nCorrelation is a term that is a measure of the strength of a linear relationship between two quantitative variables.","1bba61c1":"                        PANDAS\n          What do we need to know about pandas?","b8342ac6":"Firstly, I will add to dataset in my code.I use pandas library for this. ","03c4b5b1":"                             MATPLOTL\u0130B\n* Line plot is better when x axis is time.\n* Scatter is better when there is correlation between two variables\n* Histogram is better when we need to see distribution of numerical data.    "}}