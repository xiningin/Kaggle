{"cell_type":{"afc25e90":"code","a9047206":"code","0eaae7b3":"code","f7564152":"code","8d3d1c52":"code","5c65f3c2":"code","fcc85383":"code","177da54a":"code","4877b214":"code","1bd5df32":"code","4bf1698d":"code","ff445478":"code","564e0c4b":"code","e397189c":"code","8d8e809b":"code","bd162154":"code","1be52135":"code","98c963d0":"code","0f9ce2ba":"code","3578c429":"code","db78562a":"code","f80eb82b":"code","17ed2382":"code","5742d47d":"code","c3a90e80":"code","00a71e65":"code","b8dd579d":"code","177f3b2e":"code","965ca39a":"code","4299b05b":"code","11084af4":"code","9e5d2c9a":"code","6ab201bc":"code","398410e8":"code","39fbed46":"code","1808c35c":"markdown","ea98c8e2":"markdown","9a430605":"markdown","e50c09cc":"markdown","58eeea00":"markdown","f254b64e":"markdown","a5baf9a8":"markdown","a80c0078":"markdown","7c4c1589":"markdown"},"source":{"afc25e90":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, confusion_matrix\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a9047206":"df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ndf.head()","0eaae7b3":"df.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin','Embarked'],axis='columns',inplace=True)\ndf.head()","f7564152":"inputs = df.drop('Survived',axis='columns')\ntarget = df.Survived\nX_train, X_test, y_train, y_test = train_test_split(inputs, target, test_size=0.33, random_state=42)","8d3d1c52":"X_train.head()","5c65f3c2":"y_train.head()","fcc85383":"# inputs.Sex = inputs['Sex'].replace({'male': 1, 'female': 0})\n# inputs.Sex","177da54a":"dummies = pd.get_dummies(X_train.Sex  )\ndummies.head()","4877b214":"X_train = pd.concat([X_train,dummies],axis='columns')\nX_train.head(3)","1bd5df32":"X_train.drop(['Sex','male'],axis='columns',inplace=True)\nX_train.head(3)","4bf1698d":"X_train.isnull().sum()","ff445478":"inputs['Age'].median()","564e0c4b":"X_train.Age = X_train.Age.fillna(inputs.Age.median())\nX_train.head()","e397189c":"from sklearn.naive_bayes import GaussianNB\nmodel = GaussianNB()","8d8e809b":"model.fit(X_train, y_train)","bd162154":"dummies = pd.get_dummies(X_test.Sex)\nX_test = pd.concat([X_test,dummies],axis='columns')\nX_test.drop(['Sex','male'],axis='columns',inplace=True)\nX_test.isnull().sum()","1be52135":"X_test.Age = X_test.Age.fillna(inputs.Age.median())\nX_test.head()","98c963d0":"X_train","0f9ce2ba":"pred = model.predict(X_test)\n","3578c429":"print(f'Accuracy score is {accuracy_score(y_test, pred)}\\nConfusion matrix is \\n{confusion_matrix(y_test,pred)}')","db78562a":"test_data1 = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","f80eb82b":"test_data1.head()","17ed2382":"test_data1.shape","5742d47d":"test_data = test_data1.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin','Embarked'],axis='columns')\ntest_data.head()","c3a90e80":"dummies_test = pd.get_dummies(test_data.Sex  )\ndummies_test.head()","00a71e65":"X_test = pd.concat([test_data, dummies_test],axis='columns')\nX_test.drop(['Sex','male'],axis='columns',inplace=True)\nX_test.head()","b8dd579d":"X_test.isnull().sum()","177f3b2e":"X_test.Fare.mode()","965ca39a":"X_test.Age = X_test.Age.fillna(X_test.Age.median())\nX_test.Fare = X_test.Fare.fillna(X_test.Fare.mean())\nX_test.head()","4299b05b":"X_test[X_test['Fare'].isnull()]","11084af4":"y_predicted = model.predict(X_test)\ny_predicted","9e5d2c9a":"test_data1['PassengerId']","6ab201bc":"submission_dataframe = pd.DataFrame(data = test_data1['PassengerId'], columns = ['PassengerId'])","398410e8":"submission_dataframe['Survived'] = y_predicted\nsubmission_dataframe","39fbed46":"submission_dataframe.to_csv('submission.csv', index = False)","1808c35c":"**seeting dependent and independent variable**","ea98c8e2":"**making X_test and y_test**","9a430605":"**I am dropping male column as well because of dummy variable trap theory. One column is enough to repressent male vs female**","e50c09cc":"******here age has 118 missing values. Filling missing values with meadian value of age column.**","58eeea00":"**Get dummies method pandas**","f254b64e":"# checking missing values","a5baf9a8":"# importing and building model","a80c0078":"# droping some features those are less important as per basic intuition.\n**making model simple but effective**","7c4c1589":"**Here we have to sex column into numerical.\nThis can be done many ways:**"}}