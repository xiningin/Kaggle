{"cell_type":{"86d0bfcf":"code","b5bf7d5c":"code","726e7ba8":"code","1048b123":"code","eac70939":"code","96dc4e33":"code","96485bbc":"code","f7d7dffa":"code","491423e4":"code","685eb6de":"code","16b0c043":"markdown","c8868699":"markdown"},"source":{"86d0bfcf":"import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\nfrom sklearn.metrics import accuracy_score\n#Data Read\ndf=pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/train.csv\")\ndf.describe().T.style.background_gradient(cmap = 'Blues')\\\n                          .bar(subset = [\"mean\",], color = 'lightgreen')\\\n                           .bar(subset = [\"std\"], color = '#ee1f5f')","b5bf7d5c":"fig, axes = plt.subplots(10,10,figsize = (20, 15))\naxes = axes.flatten()\nfor idx, ax in enumerate(axes):\n    sns.kdeplot(data = df, x = f'f{idx}', fill = True, ax = ax)\n    ax.set_xticks([]); ax.set_yticks([]); ax.set_xlabel(''); ax.set_ylabel('')\n    ax.set_title(f'f{idx}', loc = 'right', fontsize = 12)\nfig.tight_layout()\nplt.show()","726e7ba8":"#def color_background_lightgreen(val):\n#    color = 'lightgreen' if val > 1.5 else ''\n#    return 'background-color: %s' % color\n\n#\u8868\u793a\n#df.style.applymap(color_background_lightgreen)","1048b123":"from sklearn.model_selection import train_test_split\nimport lightgbm as lgb\nfrom sklearn.metrics import accuracy_score","eac70939":"date_test=pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/test.csv\")\ndate_train=pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/train.csv\")\n","96dc4e33":"NG_List=[]\nfor i in range(100):\n    arr_std=date_train[\"f\"+str(i)].std()\n    if(arr_std < 1.5) :\n        NG_List.append(\"f\"+str(i))\nprint(NG_List)","96485bbc":"#Data_Split\ndf_train,df_val=train_test_split(date_train,test_size=0.3)\n\n#Training Data\nX_train=df_train.drop(\"target\",axis=1)\nX_train=X_train.drop(\"id\",axis=1)\ny_train=df_train[\"target\"].values\nX_train_df=X_train.drop(NG_List,axis=1)\nX_train_df.head()\n#Val Data\nX_val=df_val.drop(\"target\",axis=1)\nX_val=X_val.drop(\"id\",axis=1)\ny_val=df_val[\"target\"].values\nX_val_df=X_val.drop(NG_List,axis=1)\nX_val_df.head()","f7d7dffa":"#LGB Modeling\nparams = {\n    \"objective\" : \"binary\",\n    \"random_state\":100,\n    \"verbose\":0,\n    \"metrics\" : \"auc\"\n}\n\n\ntrain_d=lgb.Dataset(X_train_df,y_train)\nval_d=lgb.Dataset(X_val_df,y_val)\n\nmodel=lgb.train(params,train_d,valid_sets=val_d,num_boost_round=100,early_stopping_rounds=100)","491423e4":"#fitting\ndata_X=date_test.drop(NG_List,axis=1)\ndata_X=data_X.drop(\"id\",axis=1)\n\npred=model.predict(data_X)\npred = (pred > 0.4) * 1\n","685eb6de":"#submit\nPassengerId=date_test[\"id\"]\nprint(PassengerId.shape)\nprint(PassengerId.head())\nPredictions=pd.DataFrame(data=pred,index=PassengerId,columns=['Target'])\nPredictions.to_csv(\"submission.csv\")","16b0c043":"#LightLGB","c8868699":"Hi Kagglers!\nI tried Data Analsys & fitting LightLGB.\nref:https:\/\/www.kaggle.com\/eduardogutierrez\/tps-nov-21-exploratory-data-analysis\n\nI will try to tune the parameters.\nIf you have any other techniques or advice, Please discuss with me.\nThank you for Reading! :D"}}