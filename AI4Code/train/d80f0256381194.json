{"cell_type":{"e987c56a":"code","99cf9f14":"code","1d197218":"code","e45a4560":"code","22e8c119":"code","1a916c18":"code","daa7bf79":"code","0b6e80db":"code","bf8e1678":"code","d371e05c":"code","aad04094":"code","2508119c":"code","49e0762b":"code","447d4a91":"code","6088980b":"code","0b21465b":"code","caddf7bc":"code","3b7f8cbb":"code","13ac2152":"code","ad7aa8a2":"code","763c6818":"markdown","09d12baf":"markdown","262ec3d8":"markdown","a9e5c5f2":"markdown","a88fff40":"markdown","47c27be2":"markdown","909a5f94":"markdown","6f2ad8e7":"markdown","c05e0743":"markdown","b82dc6e4":"markdown","23c8e3ce":"markdown","05a231fa":"markdown"},"source":{"e987c56a":"# ignore warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Wrangling\nimport numpy as np\nimport pandas as pd\n\n# Exploring\nimport scipy.stats as stats\n\n# Visualizing\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('classic')\n\n# Modeling\nimport statsmodels.api as sm\n\nfrom scipy.stats import pearsonr\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error, median_absolute_error","99cf9f14":"# Acquire\ndf = pd.read_csv(\"..\/input\/raw_lemonade_data.csv\")","1d197218":"# Peek at the first rows of data\ndf.head()","e45a4560":"# Prepare\ndf[\"Date\"] = pd.to_datetime(df[\"Date\"]) # setup the right data-type for the date column\ndf[\"Price\"] = df.Price.str.replace(\"$\", \"\").replace(\" \", \"\") # remove \ndf[\"Price\"] = df.Price.astype(np.float64) # setup appropriate numeric datatype for price column\ndf = df.set_index(df['Date']) # Set the date as the index \ndf = df.drop(\"Date\", 1) # drop the old Date column\ndf[\"Revenue\"] = df.Price * df.Sales # Calculate revenue from sales(units) times price.\n\ndf = df[[\"Revenue\", \"Temperature\", \"Rainfall\", \"Flyers\"]] # Only focus on the (dependent) target variable and the independent variables that make sense to model\ndf.head()","22e8c119":"X = df[[\"Flyers\"]] # Independent variable we're using to predict the target\ny = df[[\"Revenue\"]] # Dependend variable (target variable) ","1a916c18":"# Create the linear model\nlm = LinearRegression().fit(X, y) # \"to fit\" a line means to match the line as close as possible to the datapoints on the X and Y axes.","daa7bf79":"print(\"Intercept:\", lm.intercept_[0])\nprint(\"We'll sell about $4.18 in revenue at the minimum level of flyers\")","0b6e80db":"print(\"Coefficient for flyers:\", lm.coef_[0][0])\nprint(\"Linear model coefficients are the weights of the model\")\nprint(\"This is the slope of the regression prediction line that best fits the datapoints!\")","bf8e1678":"# y = m*x + b\nintercept = 4.18 #$\nm = .21059\nnumber_of_fliers = 100","d371e05c":"revenue = m*number_of_fliers + intercept\nprint(f'If our only model is fliers to revenue, the for {number_of_fliers}, we earn ${revenue}')","aad04094":"y_predicted = lm.predict(X)\n\nflyer_r2 = r2_score(y, y_predicted)\nprint(\"Variance of revenue as explained by the number of flyers: %\" + str(flyer_r2 * 100))","2508119c":"# Mean absolute error is the average vertical distance between the actual and expected values from this model\nmae = mean_absolute_error(y, y_predicted)\nprint(\"Average vertical distance between predicted and actual revenue is $\" + str(mae))","49e0762b":"X = df[[\"Rainfall\"]] # Independent variable we're using to predict the target\ny = df[[\"Revenue\"]] # Dependend variable (target variable) ","447d4a91":"# Create the linear model\nlm = LinearRegression().fit(X, y) # \"to fit\" a line means to match the line as close as possible to the datapoints on the X and Y axes.","6088980b":"print(\"Intercept:\", lm.intercept_[0])\nprint(\"We'll sell about $22 in revenue when we have 0 rainfall\")","0b21465b":"# Remember, the coefficient is the slope of the linear model\nprint(\"Coefficient for rainfall:\", lm.coef_[0][0])\nprint(\"in dollar terms, this means that for each additional inch of rain, we lose $\" + str(lm.coef_[0][0]))","caddf7bc":"y_predicted = lm.predict(X)\n\nr2 = r2_score(y, y_predicted)\nprint(\"Variance of revenue as explained by the number of rainfall: %\" + str(r2 * 100))","3b7f8cbb":"# Mean absolute error is the average vertical distance between the actual and expected values from this model\nmae = mean_absolute_error(y, y_predicted)\nprint(\"Average vertical distance between actual and predicted revenue values is:\", mae)","13ac2152":"print(\"For any $ Revenue prediction based on rainfall, our models are off plus or minus $\" + str(mae))","ad7aa8a2":"# Use the above two examples as a template for creating your single variable linear regression between temperature and revenue","763c6818":"## Conclusions from the rainfall model vs the flyer model:\n- Less absolute error means the predictions are closer to actual values when fed historical data\n- The R2 value of the rainfall model means that more of the variance in revenue is explained by rainfall than flyers \n- Business takeaway so far... If we could reduce rainfall by 1 inch for less cost than 1 flyer, then we're in the chips!","09d12baf":"### Below is the Data Preparation Stage","262ec3d8":"## R squared value\n- R2 value * 100 = Percent of variance in y explained by x\n- The variance of revenue as explained by number of flyers","a9e5c5f2":"## R2 values (if rainfall was our only variable to consider)","a88fff40":"## Interpreting the results of the linear model of rainfall and revenue\n- Punchline: for every inch of rainfall a day, we lose about $11 in revenue for that day. (through the lense of this one model)","47c27be2":"# Part I - Modeling revenue through number of flyers\n- We'll make a linear model to model the relationship between number of fliers and revenue","909a5f94":"## Separate the target variable and the independent variables\n- Linear models work like y = mx + b, so **y** is what we're trying to model and the slope and intercept are weights for the model\n- Revenue = function(flyers) + offset\n- The \"offset\" here is the revenue number at the minimum amount of flyers","6f2ad8e7":"# Part II - Modeling revenue through rainfall","c05e0743":"# Part III - Use temperature to model revenue (Your turn!)\n## For this exercise, use the above examples and create a single variable regression for the Temperature variable","b82dc6e4":"# Let's Make Linear Models!","23c8e3ce":"## What does this mean?\n#### This single variable regression model predicts that each additional flyer delivers $0.21 in sales","05a231fa":"## Predicting Continuous Outcomes\n\n![Linear Regression constellation XKCD cartoon](https:\/\/imgs.xkcd.com\/comics\/linear_regression.png)"}}