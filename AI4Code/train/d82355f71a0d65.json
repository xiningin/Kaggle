{"cell_type":{"299b0c6a":"code","63190636":"code","cc49ad9e":"code","3d8668e5":"code","00853547":"code","19541f4e":"code","8221ab0d":"code","648d55d6":"code","d971e568":"code","92435e43":"code","c11cb41c":"code","98cf40c6":"code","8ed51088":"code","06963f93":"code","d2ee0a99":"code","90127883":"code","f7ac7dd5":"code","57dfaf6a":"code","7c19c756":"code","2db530a7":"code","a3d8863b":"code","1694422a":"code","8329b5b9":"code","6180d4a3":"code","1c54d59e":"code","6e686b7b":"code","eab69e16":"code","6c4bcecc":"code","6bdde18b":"code","7482961f":"code","c8c59fc3":"code","2e6d867b":"code","1f40f72c":"code","60ef608c":"code","80d6afa4":"code","dcc7819c":"code","01c5d14c":"code","9aca9e5f":"code","826d319d":"code","5f5ca977":"code","d6c92987":"code","a250cd4c":"code","cc3d401c":"code","5e206621":"code","1affc057":"code","3591f7d2":"code","2ab5e5bd":"code","11af6399":"code","0247af22":"code","b670d533":"code","fa6020b1":"code","094da866":"code","08bef48d":"code","2b6e1b26":"code","a77fbdb1":"code","0a5aa62d":"markdown","029c75c7":"markdown","9bc316cf":"markdown","7504f42a":"markdown","f4a979ce":"markdown","d67fc1a7":"markdown","51b1ccd3":"markdown","6ad644a4":"markdown","6a8bbcfe":"markdown","9648c243":"markdown","44175c3f":"markdown","c7086a4e":"markdown","2cd24d2a":"markdown","c515bd4b":"markdown","97ce148c":"markdown","9f5b6935":"markdown"},"source":{"299b0c6a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","63190636":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns; sns.set()","cc49ad9e":"df = pd.read_csv('\/kaggle\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv') #You can get this data from https:\/\/kaggle.com\/datasets\/supermarket-sales.csv","3d8668e5":"df.head()","00853547":"df.columns","19541f4e":"df.shape","8221ab0d":"df.describe()","648d55d6":"df.info()","d971e568":"df.isnull().sum()","92435e43":"type(df['Date'])","c11cb41c":"df['Date'] = pd.to_datetime(df['Date'])","98cf40c6":"df['weekday'] = df['Date'].dt.day_name()","8ed51088":"df['weekday'].head()","06963f93":"df['weekday'].unique()","d2ee0a99":"df['month_name'] = df['Date'].dt.month_name()","90127883":"df['month_name'].head()","f7ac7dd5":"df['month_name'].unique()","57dfaf6a":"df.head()","7c19c756":"#Get the mean for the month: jan\njan_data = df[df['month_name'] == 'January']\njan_data.loc[:,'Total'].mean()","2db530a7":"#Get the maximum transaction for the month: jan\njan_data.loc[:, 'Total'].max()","a3d8863b":"#Get the minimun transaction for the month: jan\njan_data.loc[:, 'Total'].min()","1694422a":"plt.figure(figsize=(8, 6))\nplt.title('Monthly transaction')\nsns.countplot(df['month_name'])","8329b5b9":"plt.figure(figsize=(8, 6))\nplt.title('Male vs Female Customers')\nsns.countplot(df['Gender'])","6180d4a3":"df['month_name'].value_counts()","1c54d59e":"df['weekday'].value_counts()","6e686b7b":"plt.figure(figsize=(8, 6))\nplt.title('Daily Sales made')\nsns.countplot(df['weekday'])","eab69e16":"plt.figure(figsize=(8, 6))\nplt.title('Total Mothly transaction')\nsns.countplot(df['month_name'])","6c4bcecc":"plt.figure(figsize=(8, 8))\nexplode=(0.1,0.05,0.05)\ndf['month_name'].value_counts().plot.pie(autopct='%1.1f%%', startangle=60)\nplt.title('Transaction per month')","6bdde18b":"plt.figure(figsize=(8, 8))\nexplode=(0.1,0.05,0.05)\ndf['Product line'].value_counts().plot.pie(autopct='%1.1f%%', startangle=60)\nplt.title('Transaction per month')","7482961f":"plt.figure(figsize=(12, 6))\nplt.title('Total Mothly transaction')\nsns.countplot(df['Product line'])","c8c59fc3":"cat_feats = ['Gender']\ndfs = pd.get_dummies(df, columns=cat_feats, drop_first=True)","2e6d867b":"dfs.head()","1f40f72c":"plt.figure(figsize=(12, 6))\nplt.title('Total Mothly transaction')\nsns.countplot(dfs['Product line'], hue = dfs.Gender_Male)","60ef608c":"plt.figure(figsize=(12, 6))\nplt.title('Total Mothly transaction')\nsns.countplot(df['Branch'], hue = df['Product line'])","80d6afa4":"topcustomer = df['Total'].value_counts(sort=True).head(10)","dcc7819c":"topcustomer","01c5d14c":"#plt.figure(figsize=(12, 6))\nplt.title('Count plot of customer types')\nsns.countplot(df['Customer type'])","9aca9e5f":"#plt.figure(figsize=(12, 6))\nplt.title('Total Mothly transaction')\nsns.countplot(df['City'], hue=df['Branch'])","826d319d":"#plt.figure(figsize=(12, 6))\nplt.title('Frequency of purchases genderwise')\nsns.countplot(df['City'], hue=dfs['Gender_Male'])","5f5ca977":"df['Date'].value_counts(sort=True).plot(kind='line', linewidth=2.5,linestyle='-', marker='o', figsize=(15, 8))\nplt.xlabel('Dates')\nplt.ylabel('Frequency')\nplt.title('Frequency of Transaction made per day', )","d6c92987":"import numpy as np","a250cd4c":"df.boxplot(figsize=(15, 8))","cc3d401c":"def get_lower_upper_bound(my_data):\n    #Get the third and first quartile\n    q1 = np.percentile(my_data, 25)\n    q3 = np.percentile(my_data, 75)\n    \n    #Calculate Interquartile Range (iqr)\n    iqr = q3 - q1\n    \n    #Compute lower and upper boounds\n    lower_bound = q1 - (iqr * 1.5)\n    upper_bound = q3 + (iqr * 1.5)\n    \n    return lower_bound, upper_bound","5e206621":"def get_outliers(my_data):\n    lower_bound, upper_bound = get_lower_upper_bound(my_data)\n    \n    #Filter data less than lower bound and more than upper bouond\n    return my_data[np.where((my_data > upper_bound)|\n                           (my_data < lower_bound))]","1affc057":"get_outliers(df['Total'].values)","3591f7d2":"get_outliers(df['cogs'].values)","2ab5e5bd":"get_outliers(df['Unit price'].values)","11af6399":"get_outliers(df['Quantity'].values)","0247af22":"variables = ['Total', 'Unit price', 'Quantity', 'Tax 5%', 'cogs', 'gross margin percentage', 'gross income', 'Rating']","b670d533":"sp = df[variables].astype('int')","fa6020b1":"sp.head()","094da866":"sp.boxplot(figsize=(15, 8))\nplt.savefig('img.png')\n","08bef48d":"#Calculate the quartile and the interquartile ranges for the columns using dataframe object quantile\nq1 = sp.quantile(0.25)\nq3 = sp.quantile(0.75)\niqr = q3 - q1\nprint(iqr)","2b6e1b26":"sp1 = sp[~((sp < (q1 - 1.5 * iqr)) | (sp > (q3 + 1.5 * iqr))).any(axis=1)] #Removes outliers from the dataset","a77fbdb1":"sp1.boxplot(figsize=(15, 8))","0a5aa62d":"# !Tip\nFrom the above boxplot we can see there are several outliers in columns Tax 5%, Total, cogs and gross income ofcourse \nwe'll have to take care of them before we can develop a predictive model, while the rest of the columns have no outliers","029c75c7":"#### REMOVING OUTLIERS","9bc316cf":"#Lets find some insights\n - whats the average transction for each month\n - what is the maximum and minimum transaction for each month","7504f42a":"As you can see we have 9 outliers in the Total column and 6 in \nthe cogs column, you can do the same for Tax 5% and gross income","f4a979ce":"- From the above we can conclude that Branches A, B and C are found in Yangon, Naypyitaw and Mandalay Cities respecively","d67fc1a7":"- In Branch A(Yangon), the active purchase gender is Male and in B its Female","51b1ccd3":"EDA","6ad644a4":"##You can do the same for March and February","6a8bbcfe":"VISUALIZATIONS","9648c243":"DESCRIBING DATA","44175c3f":"###### # !Tip\nFrom the above visualisation, Most customers purchase Home and Lifestyle products from branch A than C, Fashion accessories has most customers in branches C and B than in A and finally Sports and travel has most customers in branch B than in the rest.  By this, as an analyst you can deduce that instead of commodities taking longer in the store they can be transfered to branches where their demand is high, e.g Part of Home and Lifestyle products can be taken to branch A  to C because there are approximately 5 customers in Branch A for every single customer in brach C for the same commodity.","c7086a4e":"Lets prove our hypothesy up there that we came up with from the boxplot","2cd24d2a":"#And finally the outliers are gone!!","c515bd4b":"- From the two above, Unit price and Quantity, we have no outliers the array is empty meaning all datapoints lie within the bounds, do the same for gross margin percentage and Rating\n\n- You can also look at how to use zscore (scipy.stats.zscore) to detect outliers","97ce148c":"TIME SERIES ANALYSIS","9f5b6935":"# OUTLIER ANALYSIS\n- An outlier is a data point that is far much from a real data point, take for instance a house dataset has a datapoint with say 100 bedrooms this would probably be an outlier for a normal context maybe a hotel, they are too extreme."}}