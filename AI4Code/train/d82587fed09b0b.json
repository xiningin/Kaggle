{"cell_type":{"197f89f8":"code","ed50b679":"code","5eb1c39b":"code","7814853d":"code","26006711":"code","efda52ca":"code","679a01b5":"code","87f8a088":"code","da5008fe":"code","1d732963":"code","794b7bdb":"code","6db03a48":"code","d7cefdf7":"code","f5386a27":"code","ccd533ce":"code","d402c38d":"code","cdf1a749":"code","e14eddfe":"code","a26b0003":"code","212b72dd":"code","81d44ab5":"code","c829d0be":"code","48613569":"code","415fe938":"code","bd74e83e":"code","6003270c":"code","15b192e7":"code","4461f22e":"code","59a6b412":"code","9a29d55e":"code","8a8faaf6":"code","85e3d642":"code","48dd47f3":"code","82aaf5e5":"markdown","caa5f762":"markdown","7d3b2372":"markdown"},"source":{"197f89f8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ed50b679":"data = pd.read_csv(\"\/kaggle\/input\/windows-store\/msft.csv\")","5eb1c39b":"data.head()","7814853d":"data.describe()","26006711":"data.info()","efda52ca":"data =data.drop([5321],axis=0)","679a01b5":"data.head()","87f8a088":"data.iloc[5320].Price","da5008fe":"data.Price = data.Price.replace(\"Free\" , \"0.00\")","1d732963":"data.info()","794b7bdb":"data['New_Price'] = pd.Series(data['Price'], dtype=\"string\")","6db03a48":"data.info()","d7cefdf7":"data[\"New_Price\"]= data[\"New_Price\"].apply(lambda x: x.replace(\"\u20b9\",\"\").strip())","f5386a27":"data = data.drop(\"Price\",axis=1)","ccd533ce":"data[\"New_Price\"]= data[\"New_Price\"].apply(lambda x: x.replace(\",\",\"\").strip())","d402c38d":"data[\"New_Price\"] = data[\"New_Price\"].astype(str).astype(float)","cdf1a749":"data.info()","e14eddfe":"data = data.set_index(\"Name\")","a26b0003":"data.head()","212b72dd":"data[\"Date_new\"] = pd.to_datetime(data[\"Date\"])","81d44ab5":"data[\"Year\"] = data[\"Date_new\"].dt.year","c829d0be":"data = data.drop(\"Date\",axis=1)","48613569":"import matplotlib.pyplot as plt","415fe938":"fig, ax = plt.subplots(figsize=(20,8))\n\ndata_ = data['Category'].value_counts() \npoints = data_.index \nfrequency = data_.values \nax.bar(points, frequency) \nax.set_title('Categrory Frequency') \nax.set_xlabel('Category') \nax.set_ylabel('Frequency')","bd74e83e":"most_reviewed = data.nlargest(10,\"No of people Rated\")","6003270c":"fig, ax = plt.subplots(figsize=(20,8))\n\ndata_ = most_reviewed.index\nrating_ = most_reviewed[\"Rating\"] \nax.bar(data_, rating_) \nax.set_title('Most Reviewed') \nax.set_xlabel('Name') \nax.set_ylabel('Rating')","15b192e7":"yearwise = data.groupby('Year')[\"Rating\"].nlargest(3)","4461f22e":"names=[]\nfor i in range(len(yearwise)):\n    names.append(yearwise.index[i][1])\n    ","59a6b412":"names","9a29d55e":"name1 = names[0::3]\nname2 = names[1::3]\nname3 = names[2::3]\n","8a8faaf6":"ratings1 = yearwise[0::3]\nratings2 = yearwise[1::3]\nratings3 = yearwise[2::3]","85e3d642":"\nwidth = 0.25\n\nr1 = np.arange(len(name1))\nr2 = [x + width for x in r1]\nr3 = [x + width for x in r2]\n","48dd47f3":"fig, ax = plt.subplots(figsize=(25,8))\n\nplt.bar(r1, ratings1, color='#f55353', width=width, edgecolor='white', label='1st')\nplt.bar(r2, ratings2, color='#fc9338', width=width, edgecolor='white', label='2ns')\nplt.bar(r3, ratings3, color='#fcd538', width=width, edgecolor='white', label='3rd')\n \nplt.xticks([r for r in range(len(r1))],name1, rotation=90)\n","82aaf5e5":"**Most Reviewed **","caa5f762":"**Year-wise Favourites**","7d3b2372":"Category Wise Data "}}