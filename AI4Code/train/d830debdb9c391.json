{"cell_type":{"7768ac34":"code","e62756f3":"code","d4c6113a":"code","f238224d":"code","b24baf8d":"code","8c6fe743":"code","bbaa1a20":"code","9535efb4":"code","9d22325b":"code","b6fb467e":"code","aa19f107":"code","7ea24474":"code","e7b55ff6":"code","16266071":"code","8bc0705a":"code","db8e2c10":"code","afb73c84":"code","7bce51d1":"code","096fae0f":"code","bcf8a554":"markdown","adb17736":"markdown","860ef1a9":"markdown","cbe0b330":"markdown","06639b57":"markdown","877b01d1":"markdown"},"source":{"7768ac34":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport PIL\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e62756f3":"import tarfile\n\ntar = tarfile.open(\"..\/input\/trash-classification\/Trash.tgz\", \"r:gz\")\nfor member in tar.getmembers():\n     f = tar.extractfile(member)\n     if f is not None:\n         content = f.read()","d4c6113a":"tar.getnames()","f238224d":"tar.getmembers()","b24baf8d":"tar.list(verbose=True, members=None)","8c6fe743":"tar.extractall(path=\".\", members=None, numeric_owner=False)","bbaa1a20":"tar.getmembers()","9535efb4":"import os\nos.listdir('..\/input\/dataset-resized\/trash\/')[:5]","9d22325b":"os.listdir('..\/input\/trash-classification\/Trash\/')[:5]","b6fb467e":"os.listdir('..\/_MACOSX\/dataset-resized\/cardboard\/')[:5]","aa19f107":"os.listdir('..\/input\/dataset-resized\/plastic\/')[:5]\n","7ea24474":"import tensorflow as tf\nimport pathlib\n\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.models import Sequential","e7b55ff6":"#Code by  Subhasom Mandal https:\/\/www.kaggle.com\/subhasom\/tensorflow-image-classification-basic\n\ndataset_url = \"https:\/\/www.kaggle.com\/akshatakm\/trash-classification\"\ndata_dir = tf.keras.utils.get_file('trash_photos', origin=dataset_url, untar=True)\ndata_dir = pathlib.Path(data_dir)","16266071":"folder = list(data_dir.glob('*'))\nimages = list(data_dir.glob('*\/*.jpg')) #list of all images (full path)\nprint('Folder Structure:')\nfor f in folder:\n    print(f)\nprint('\\nNumber of images: ', len(images))","8bc0705a":"import os\nimport torch\nimport torchvision\nimport tarfile\nfrom torchvision.datasets.utils import download_url\nfrom torch.utils.data import random_split","db8e2c10":"dataset_url = \"http:\/\/files.fast.ai\/data\/wt103_ids.tgz\"\ndownload_url(dataset_url, '.')","afb73c84":"#Code by Subhasom Mandal https:\/\/www.kaggle.com\/subhasom\/tensorflow-image-classification-basic\n\ndataset_url = \"https:\/\/storage.googleapis.com\/download.tensorflow.org\/example_images\/flower_photos.tgz\"\ndata_dir = tf.keras.utils.get_file('flower_photos', origin=dataset_url, untar=True)\ndata_dir = pathlib.Path(data_dir)","7bce51d1":"#Code by Subhasom Mandal https:\/\/www.kaggle.com\/subhasom\/tensorflow-image-classification-basic\n\nfolder = list(data_dir.glob('*'))\nimages = list(data_dir.glob('*\/*.jpg')) #list of all images (full path)\nprint('Folder Structure:')\nfor f in folder:\n    print(f)\nprint('\\nNumber of images: ', len(images))","096fae0f":"#Code by Subhasom Mandal https:\/\/www.kaggle.com\/subhasom\/tensorflow-image-classification-basic\n\nfig = plt.figure(figsize=(10, 10))\nfor i in range(9):\n    plt.subplot(3, 3, i + 1)\n    plt.title(str(images[i]).split('\/')[-1], fontsize=10) #get the file name and disply as title\n    plt.imshow(PIL.Image.open(images[i]))\n    ax = plt.axis(\"off\")","bcf8a554":"#Forbidden Error","adb17736":"#Code by Subhasom Mandal https:\/\/www.kaggle.com\/subhasom\/tensorflow-image-classification-basic\n\n#Since I don't have any trash\/plastic URL to download, Just do with some flowers.   ","860ef1a9":"#How to open the Images in the tarfile?  I could NOT FIND the files in the Dataset resized.","cbe0b330":"#Extractall\n\ntar.extractall(path=\".\", members=None, *, numeric_owner=False)\n\nhttps:\/\/docs.python.org\/3.7\/library\/tarfile.html","06639b57":"#Waiting for someone to open the Images.","877b01d1":"#Tarfile module\n\ngetnames(self): Return the members of the archive as a list of their names. It has        the same order as the list returned by getmembers().\n\nhttps:\/\/stackoverflow.com\/questions\/2018512\/reading-tar-file-contents-without-untarring-it-in-python-script"}}