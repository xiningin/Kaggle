{"cell_type":{"f172c25e":"code","44c7c501":"code","2362797b":"code","a9b85b33":"code","bcef1f22":"code","14d6ea48":"code","cbc13617":"code","f0f8557d":"code","5903ae07":"code","a684b4d4":"code","56067008":"code","2432c1d0":"markdown","474c26e6":"markdown","c8797df4":"markdown","0dadc67b":"markdown","1735ca67":"markdown","4cdd0d06":"markdown"},"source":{"f172c25e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","44c7c501":"df = pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv')","2362797b":"df.head()","a9b85b33":"for i in range(len(df.columns)):\n    percentage = df[df.columns[i]].isnull().sum()\/df[df.columns[i]].shape[0]\n    if percentage > 0:\n        print('There is {:.2%} missing data in column {}'.format(percentage, df.columns[i]))\n    else:\n        pass","bcef1f22":"df['Year'] = df['Year'].fillna(df['Year'].mode)\ndf['Publisher'] = df['Publisher'].fillna(max(df['Publisher'].value_counts().values))\ndf.isnull().sum()","14d6ea48":"df_cleaned = df.copy()","cbc13617":"NA = df_cleaned[['NA_Sales', 'Genre']]\nEU = df_cleaned[['EU_Sales', 'Genre']]\nJP = df_cleaned[['JP_Sales', 'Genre']]\nf, axs = plt.subplots(3,1, figsize=(15,6))\nsns.barplot(x='Genre', y='NA_Sales', data=df_cleaned, ax=axs[0], ci=None)\nsns.barplot(x='Genre', y='EU_Sales', data=df_cleaned, ax=axs[1], ci=None)\nsns.barplot(x='Genre', y='JP_Sales', data=df_cleaned, ax=axs[2], ci=None)","f0f8557d":"def top_n_publishers(n):\n    publishers = df_cleaned.groupby('Publisher')['Global_Sales'].sum().reset_index().sort_values(by='Global_Sales', ascending=False)\n    p = publishers.iloc[:n,:]\n    fig, ax = plt.subplots(figsize=(9,6))\n    sns.barplot(x='Publisher', y='Global_Sales', data=p, ci=None, orient='v', color='blue')\n    ax.set_xticklabels(ax.get_xticklabels(),rotation=90, fontsize=10)\n    plt.title('Top {} Publishers by Sales'.format(n), fontsize=15, fontweight='bold')\n    plt.xlabel('Companies')\n    plt.ylabel('Sales')\n    plt.show()","5903ae07":"top_n_publishers(15)","a684b4d4":"df_cleaned['Year'] = df_cleaned['Year'].astype(str)\ntime = df_cleaned.groupby('Year')['Global_Sales'].sum().reset_index()[:-1]\ntime['Year'] = time['Year'].astype(float)\ntime['Year'] = time['Year'].astype(int)","56067008":"f, ax = plt.subplots(figsize=(20,6))\nx = sns.lineplot(x='Year', y='Global_Sales', data=time)\nplt.title('Video game sales 1980 - 2020', fontsize=20, fontweight='bold')\nplt.xlabel('Year',fontsize=15)\nplt.ylabel('Global Sales', fontsize=15)","2432c1d0":"### Addressing Missing Values","474c26e6":"### Top Publishers ","c8797df4":"### Missing Values ","0dadc67b":"### Game Industry over Time ","1735ca67":"### Country sales by Genre","4cdd0d06":"## My very first notebook in Kaggle :) "}}