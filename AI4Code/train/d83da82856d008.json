{"cell_type":{"f0c40de8":"code","2a997aaa":"code","604d50fd":"code","d9728e98":"code","76d38c05":"code","a0574720":"code","c9a3628c":"code","571d3b3f":"code","335b366b":"code","f795f28d":"code","00d63d0a":"markdown","ec4e2674":"markdown"},"source":{"f0c40de8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","2a997aaa":"dataset = pd.read_csv(\"..\/input\/column_2C_weka.csv\")","604d50fd":"dataset.head()\n","d9728e98":"#summary info about data\nA = dataset[dataset[\"class\"] == \"Abnormal\"]\nN = dataset[dataset[\"class\"] == \"Normal\"]\n","76d38c05":"#data visualization\nplt.scatter(A.pelvic_incidence, A.pelvic_radius, color=\"red\", label = \"Abnormal\")\nplt.scatter(N.pelvic_incidence, N.pelvic_radius, color=\"blue\", label = \"Normal\")\nplt.legend()\nplt.xlabel(\"pelvic_incidence\")\nplt.ylabel(\"pelvic_radius\")\nplt.show()","a0574720":"# data variables and normalization\ndataset[\"class\"] = [1 if each == \"Abnormal\" else 0 for each in dataset[\"class\"]]\ny = dataset[\"class\"].values\nx_temp = dataset.drop([\"class\"], axis=1)\nx = (x_temp- np.min(x_temp)) \/ (np.max(x_temp)-np.min(x_temp)).values","c9a3628c":"# train test split\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size=.3, random_state=42)","571d3b3f":"# find k value\n# This for I want using that one from the interactive visualization tools plotly lib.\nscore_list = []\nliste = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\nfor each in range(1,15):\n    neigh_test = KNeighborsClassifier(n_neighbors=each)\n    neigh_test.fit(x_train,y_train)\n    score_list.append(neigh_test.score(x_test,y_test))\n\nliste = np.linspace(1,15,15)\niplot([go.Scatter(x=liste, y=score_list)])\n   \n","335b366b":"# KNN Model\nneigh = KNeighborsClassifier(n_neighbors=3) #n_neighbors=k degeri\nneigh.fit(x_train, y_train)\nprediction = neigh.predict(x_test)","f795f28d":"print(\"{} knn score accuracy: {} \".format(3,neigh.score(x_test,y_test)))","00d63d0a":"# Introduction\n* This is my homework related KNN.\n* First step we are import the data and data visulization\n* Second","ec4e2674":"# Conclusion\n* In appearance k value is yield in the event of 3 KNN the most accuracy result."}}