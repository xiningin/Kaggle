{"cell_type":{"fe137f38":"code","2fdefac9":"code","d0e1d2db":"code","45da4984":"code","afc7b4df":"code","97648cc1":"code","23a45da1":"code","531a398d":"code","150581f3":"code","f7b5d85d":"code","303a44f7":"code","bc8558d2":"code","c9de0bd3":"code","51edc76b":"code","56c99d19":"code","292ae325":"code","64f4a13b":"code","6fc68a4e":"code","54a98447":"code","273e1ef1":"markdown"},"source":{"fe137f38":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import mean_squared_error\n","2fdefac9":"hit = pd.read_csv(\"..\/input\/hittlers\/Hitters.csv\")\ndf = hit.copy()\ndf = df.dropna()\ndms = pd.get_dummies(df[['League', 'Division', 'NewLeague']])\ny = df[\"Salary\"]\nX_ = df.drop(['Salary', 'League', 'Division', 'NewLeague'], axis=1).astype('float64')\nX = pd.concat([X_, dms[['League_N', 'Division_W', 'NewLeague_N']]], axis=1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.25, \n                                                    random_state=42)","d0e1d2db":"# MODEL","45da4984":"from sklearn.ensemble import RandomForestRegressor","afc7b4df":"rf_model= RandomForestRegressor(random_state=42)","97648cc1":"rf_model.fit(X_train,y_train)","23a45da1":"#Prediction","531a398d":"y_pred=rf_model.predict(X_test)","150581f3":"np.sqrt(mean_squared_error(y_pred, y_test))","f7b5d85d":"#Tuning","303a44f7":"rf_params = {'max_depth': list(range(1,10)),\n            'max_features': [3,5,10,15],\n            'n_estimators' : [100, 200, 500, 1000, 2000]}","bc8558d2":"rf_model = RandomForestRegressor(random_state = 42)","c9de0bd3":"rf_cv_model = GridSearchCV(rf_model, \n                           rf_params, \n                           cv = 10, \n                            n_jobs = -1)  #it provides full performance to operator","51edc76b":"rf_cv_model.fit(X_train, y_train)","56c99d19":"rf_cv_model.best_params_","292ae325":"rf_tuned = RandomForestRegressor(max_depth  = 8, \n                                 max_features = 3, \n                                 n_estimators =200)","64f4a13b":"rf_tuned.fit(X_train, y_train)","6fc68a4e":"y_pred = rf_tuned.predict(X_test)","54a98447":"np.sqrt(mean_squared_error(y_test, y_pred))","273e1ef1":"# Parameters\n### n_estimators: the number of trees whic will be predicted***\n### max_features: max features which are considered in every division***\n### max_depth:  avoid overfitting ** \n### max_features: max feature number which is considered in division operations\n### min_sample_split: min number of observations in the node before this node is divided\n### min_samples_leaf: min number of observations in leaf node"}}