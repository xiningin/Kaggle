{"cell_type":{"b11ed3a2":"code","48c61c78":"code","bc4729d6":"code","fd8097a0":"code","8ee7e1ea":"code","6b972635":"code","68c7d65d":"code","ea6915b5":"code","16c131a1":"code","79acd976":"code","8a79b03a":"code","7a4443c6":"code","484cd677":"code","c250ff1d":"code","3036c312":"code","9db7cc05":"code","a8003e02":"code","3186d781":"markdown","0300df3e":"markdown","6e9a47fc":"markdown","15f9631e":"markdown","44e1398a":"markdown","e78401d4":"markdown","1b095882":"markdown","0a637d7d":"markdown","2b24875e":"markdown","3cd964d9":"markdown"},"source":{"b11ed3a2":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","48c61c78":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport h5py \n\nfrom fastai import *\nfrom fastai.vision import *\nfrom fastai.callbacks.hooks import *\n\nimport torch\nprint('pytorch version: ',torch.__version__)\nimport torch.utils.data as data\nimport fastai\nprint('fastai version: ',fastai.__version__)\nimport torchvision.models\n","bc4729d6":"img_dir = '..\/input\/car_data'\npath = Path(img_dir)\npath.ls()","fd8097a0":"data = ImageDataBunch.from_folder(f'{path}',valid_pct = 0.2,size = 224,bs = 64).normalize(imagenet_stats)","8ee7e1ea":"for classes, numbers in enumerate(data.classes[:15]):\n    print(classes,':',numbers)\nlen(data.classes),data.c","6b972635":"data.show_batch(rows = 3,figsize = (15,15))","68c7d65d":"learn = cnn_learner(data, models.resnet50, metrics=error_rate, model_dir=\"\/tmp\/model\/\")","ea6915b5":"learn.fit_one_cycle(6)","16c131a1":"learn.save('stage-1')","79acd976":"learn.unfreeze()\nlearn.fit_one_cycle(6)","8a79b03a":"learn.save('stage-2',return_path=True)","7a4443c6":"interp = ClassificationInterpretation.from_learner(learn)\n\nlosses,idxs = interp.top_losses()\n\nlen(data.valid_ds)==len(losses)==len(idxs)","484cd677":"interp.plot_top_losses(4, figsize=(14,14),heatmap=False)","c250ff1d":"interp.most_confused(min_val=2)","3036c312":"input, target = learn.get_preds()\n","9db7cc05":"print (top_k_accuracy(input=input, targs=target,k=1))\n","a8003e02":"print (top_k_accuracy(input=input, targs=target,k=3))\n","3186d781":"**Step-4.** Let's see how our data looks like and how many classes are there.","0300df3e":"**Step-3.** Splitting data(Training set=80%, Validation set=20%), setting batch size = 64, Normalize data using imagenet_stats(transfer learning)","6e9a47fc":"**Step-2.** Setting path to data (Labels = folder_name) ","15f9631e":"**Step-7.** Fine-Tuning. Train whole model(all layers) and save it.","44e1398a":"TOP-1 Accuracy:","e78401d4":"**Step-6.** Saving trained model","1b095882":"Top-3 Accuracy:","0a637d7d":"**Step-1.** Import libraries","2b24875e":"**Step-8.** Results","3cd964d9":"**Step-5.** Setting ResNet-50 CNN arcitechture and training only last layers of our model****."}}