{"cell_type":{"70df2672":"code","f248f5a0":"code","1d8bdd42":"code","646bc4ee":"code","7121cb51":"code","845acbc3":"code","003ea9d7":"code","988d148b":"code","25ab30e7":"code","5602f798":"code","38805c20":"code","d918a7ec":"code","d066eb31":"code","ea1a54ca":"code","318b425c":"code","f4156fb0":"code","e5de4e65":"code","46714892":"code","c266aeb1":"code","3ee283a0":"code","e142de38":"markdown","a7097c4a":"markdown","6316fcd8":"markdown","485ce2d5":"markdown","0d9c3b2b":"markdown","746c938e":"markdown","2b223076":"markdown","4b289e9b":"markdown"},"source":{"70df2672":"# TensorFlow and tf.keras\nimport tensorflow as tf\n\n# Helper libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nprint(tf.__version__)","f248f5a0":"fashion_mnist = tf.keras.datasets.fashion_mnist\n\n(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()","1d8bdd42":"class_names = ['T-shirt\/top', 'Trouser', 'Pullover', 'Dress', 'Coat',\n               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']","646bc4ee":"train_images.shape","7121cb51":"len(train_labels)","845acbc3":"train_labels","003ea9d7":"test_images.shape","988d148b":"len(test_labels)","25ab30e7":"plt.figure()\nplt.imshow(train_images[0])\nplt.colorbar()\nplt.grid(False)\nplt.show()","5602f798":"train_images = train_images \/ 255.0\n\ntest_images = test_images \/ 255.0","38805c20":"plt.figure(figsize=(10,10))\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.grid(False)\n    plt.imshow(train_images[i], cmap=plt.cm.binary)\n    plt.xlabel(class_names[train_labels[i]])\nplt.show()","d918a7ec":"model = tf.keras.Sequential([\n    tf.keras.layers.Flatten(input_shape=(28, 28)),\n    tf.keras.layers.Dense(128, activation='relu'),\n    tf.keras.layers.Dense(10)\n])","d066eb31":"model.compile(optimizer='adam',\n              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),\n              metrics=['accuracy'])","ea1a54ca":"model.fit(train_images, train_labels, epochs=10)","318b425c":"model.save_weights(\"model_classif.h5\")","f4156fb0":"test_loss, test_acc = model.evaluate(test_images,  test_labels, verbose=2)\n\nprint('\\nTest accuracy:', test_acc)","e5de4e65":"probability_model = tf.keras.Sequential([model, \n                                         tf.keras.layers.Softmax()])","46714892":"predictions = probability_model.predict(test_images)","c266aeb1":"predictions[0]","3ee283a0":"np.argmax(predictions[0])","e142de38":"### Set up the layers\n\nThe basic building block of a neural network is the [*layer*](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/keras\/layers). Layers extract representations from the data fed into them. Hopefully, these representations are meaningful for the problem at hand.\n\nMost of deep learning consists of chaining together simple layers. Most layers, such as `tf.keras.layers.Dense`, have parameters that are learned during training.","a7097c4a":"## Build the model\n\nBuilding the neural network requires configuring the layers of the model, then compiling the model.","6316fcd8":"<table class=\"tfo-notebook-buttons\" align=\"left\">\n  <td>\n    <a target=\"_blank\" href=\"https:\/\/www.tensorflow.org\/tutorials\/keras\/classification\"><img src=\"https:\/\/www.tensorflow.org\/images\/tf_logo_32px.png\" \/>View on TensorFlow.org<\/a>\n  <\/td>\n  <td>\n    <a target=\"_blank\" href=\"https:\/\/colab.research.google.com\/github\/tensorflow\/docs\/blob\/master\/site\/en\/tutorials\/keras\/classification.ipynb\"><img src=\"https:\/\/www.tensorflow.org\/images\/colab_logo_32px.png\" \/>Run in Google Colab<\/a>\n  <\/td>\n  <td>\n    <a target=\"_blank\" href=\"https:\/\/github.com\/tensorflow\/docs\/blob\/master\/site\/en\/tutorials\/keras\/classification.ipynb\"><img src=\"https:\/\/www.tensorflow.org\/images\/GitHub-Mark-32px.png\" \/>View source on GitHub<\/a>\n  <\/td>\n  <td>\n    <a href=\"https:\/\/storage.googleapis.com\/tensorflow_docs\/docs\/site\/en\/tutorials\/keras\/classification.ipynb\"><img src=\"https:\/\/www.tensorflow.org\/images\/download_logo_32px.png\" \/>Download notebook<\/a>\n  <\/td>\n<\/table>","485ce2d5":"Scale these values to a range of 0 to 1 before feeding them to the neural network model. To do so, divide the values by 255. It's important that the *training set* and the *testing set* be preprocessed in the same way:","0d9c3b2b":"A prediction is an array of 10 numbers. They represent the model's \"confidence\" that the image corresponds to each of the 10 different articles of clothing. You can see which label has the highest confidence value:","746c938e":"This guide trains a neural network model to classify images of clothing, like sneakers and shirts. It's okay if you don't understand all the details; this is a fast-paced overview of a complete TensorFlow program with the details explained as you go.\n\nThis guide uses [tf.keras](https:\/\/www.tensorflow.org\/guide\/keras), a high-level API to build and train models in TensorFlow.","2b223076":"## Preprocess the data\n\nThe data must be preprocessed before training the network. If you inspect the first image in the training set, you will see that the pixel values fall in the range of 0 to 255:","4b289e9b":"To verify that the data is in the correct format and that you're ready to build and train the network, let's display the first 25 images from the *training set* and display the class name below each image."}}