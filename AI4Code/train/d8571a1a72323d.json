{"cell_type":{"3908d2e0":"code","0ac071ce":"code","95e7f410":"code","542963e9":"code","42f2e9bd":"code","ac99cff5":"code","0bd70870":"code","0ddaeef5":"markdown","de0a4107":"markdown","e36e26dd":"markdown","b4912b68":"markdown","b85970e1":"markdown","aad2f462":"markdown"},"source":{"3908d2e0":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd","0ac071ce":"#Reading the data from the CSV file:\nurl = 'https:\/\/raw.githubusercontent.com\/chiragrathi24\/Matplotlib_Tutorial\/main\/gas_prices.csv' \ngas = pd.read_csv(url)\n\n#Defining the size of the graph:\nplt.figure(figsize = (8,5))\n\n#Giving the title of the graph:\nplt.title('Gas price over the Time (in USD)', fontdict={'fontweight': 'bold', 'fontsize' : 18})\n\n#Plotting the selected countries in the graph:\nplt.plot(gas.Year, gas.USA,'b.-', label = 'USA')\nplt.plot(gas.Year, gas.Canada, 'y.-', label = 'Canada')\nplt.plot(gas.Year, gas.Australia, 'r.-', label = 'Australia')\nplt.plot(gas.Year, gas.UK, 'g.-', label = 'UK')\n\n#Another way to plot many values from the CSV file:\n# countries_we_want_to_plot = ['USA', 'Canada', 'Australia', 'UK']\n# for country in gas:\n#     if country in countries_we_want_to_plot:\n#         plt.plot(gas.Year, gas[country], marker = '.')\n\n#Plotting all the countries in the CSV file:\n# for country in gas:\n#     if country != 'Year':\n#         plt.plot(gas.Year, gas[country], marker = '.')\n\n#Displaying the years in the intervals of three:\nprint(gas.Year[::3])\n\n#Defining the intervals of the ticks:\nplt.xticks(gas.Year[::3].tolist() + [2011])\n\n#Labelling the axes:\nplt.xlabel('Year')\nplt.ylabel('Prices in USD')\n\n#Displaying the legend:\nplt.legend()\n\n#Saving the graph in the image format:\nplt.savefig('Gas_price_figure.png', dpi = 300)\n\n#Displaying the graph:\nplt.show()","95e7f410":"url = 'https:\/\/raw.githubusercontent.com\/chiragrathi24\/Matplotlib_Tutorial\/main\/fifa_data.csv'\nfifa = pd.read_csv(url)\nfifa.head()","542963e9":"#Defining the bins for the axes:\nbins = [40,50,60,70,80,90,100]\n\n#Plotting the Histogram and defining its properties:\nplt.hist(fifa.Overall, bins = bins, color = '#336fe8')\n\n#Defining the ticks for the X-Axis:\nplt.xticks(bins)\n\n#Giving the title for the graph and labelling the axes:\nplt.title('Distribution of the Payers Skills in the FIFA 2018')\nplt.xlabel('Skills Level')\nplt.ylabel('Number of the Players')\n\n#Displaying the Histogram:\nplt.show()","42f2e9bd":"#Finding the number of players who use their left foot or the right foot for the shooting:\nleft = fifa.loc[fifa['Preferred Foot'] == 'Left'].count()[0]\nright = fifa.loc[fifa['Preferred Foot'] == 'Right'].count()[0]\nprint('Left Foot: ',left)\nprint('Right Foot :', right)\n\n#Labelling and assigning the colours to the sectors:\nlabels = ['Left', 'Right']\ncolors = ['#336fe8', '#33e878']\n\n#Plotting the Pie chart:\nplt.pie([left,right], labels = labels, colors = colors, autopct = '%.2f%%')\n\n#Giving the title to the chart and then displaying it:\nplt.title('Foot preferenec of the FIFA Players:')\nplt.show()","ac99cff5":"#Plotting a more advanced Pie chart:\n#Finding the weight of the players and then changing them from the string values to the integer values:\nfifa.Weight = [int(x.strip('lbs')) if type(x) == str else x for x in fifa.Weight]\n\n#Defining the style of the Pie chart:\nplt.style.use('ggplot')\n\n#Classifying the weights of the players into the different categories:\nlight =  fifa.loc[fifa.Weight < 125].count()[0]\nlight_medium = fifa.loc[(fifa.Weight >= 125) & (fifa.Weight < 150)].count()[0]\nmedium = fifa[(fifa.Weight >= 150) & (fifa.Weight < 175)].count()[0]\nmedium_heavy = fifa[(fifa.Weight >= 175) & (fifa.Weight < 200)].count()[0]\nheavy = fifa[(fifa.Weight >= 200)].count()[0]\n\n#Storing the weights categories into the list, labelling the different sectors and then seprating the closely plotted sectors:\nweights = [light, light_medium, medium, medium_heavy, heavy]\nlabels = ['Under 125', '125-150', '150-175', '175-200', 'Over 200']\nexplode = (.4,.2,0,0,.4)\n\n#Giving the title to the Pie chart:\nplt.title(\" Weight distributions of the FIFA Players (in lbs)\")\n\n#Plotting the Pie chart and then displaying it:\nplt.pie(weights, labels = labels, autopct = '%.2f &&', pctdistance = 0.8, explode = explode)\nplt.show()","0bd70870":"#Selecting the style of the plot:\nplt.style.use('default')\n\n#Defining the size of the Whisker plot:\nplt.figure(figsize = (5,8))\n\n#Finding the overall score of the FC Barcelona and Real Madrid:\nbarcelona = fifa.loc[fifa.Club == 'FC Barcelona']['Overall']\nmadrid = fifa.loc[fifa.Club == 'Real Madrid']['Overall']\n\n#Labelling the names of the teams:\nlabels = ['FC Barcelona', 'Real Madrid']\n\n#Plotting the Box and the Whisker plot:\nboxes = plt.boxplot([barcelona, madrid], labels = labels, patch_artist = True, medianprops = {'linewidth':2})\n#Changing the colours:\nfor box in boxes['boxes']:\n    #Set the edge colour:\n    box.set(color = '#4287f5', linewidth = 2)\n    #For changing the fill colours:\n    box.set(facecolor = '#bcb5e8')\n\n#Giving the title:\nplt.title('Professional Soccer Team Comparisons')\n\n#Labelling the Y-axis:\nplt.ylabel('FIFA Overall Ratings')\n\n#Displaying the plot:\nplt.show()","0ddaeef5":"### Box and Whisker plot:","de0a4107":"### Real World Examples\n\n#### Line Graph","e36e26dd":"### Loading the Fifa Data Set","b4912b68":"### Loading the necessarry Libraries","b85970e1":"#### Histograms","aad2f462":"### Pie Charts"}}