{"cell_type":{"6b0ec921":"code","c3794e31":"code","3c4bf0bd":"code","0e5e5cf7":"code","2e2c9f3e":"code","6d85ea39":"code","81a8893d":"code","a5e6147b":"code","84be9e6e":"code","bbe6be25":"code","3d9aca38":"markdown","02ea880e":"markdown","52fd73bc":"markdown","67a93b5a":"markdown","ba3a7132":"markdown","4d57f7da":"markdown","d0549d5a":"markdown","6a7e85a6":"markdown","086122a1":"markdown"},"source":{"6b0ec921":"#libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n%matplotlib inline","c3794e31":"netflix = pd.read_csv(\"..\/input\/netflix-shows\/netflix_titles.csv\")\nnetflix = netflix.set_index(\"title\")\nnetflix.head()","3c4bf0bd":"movies = netflix.loc[netflix.type == \"Movie\"]\nmovies_year_count = movies.release_year.value_counts().sort_values()\nshows = netflix.loc[netflix.type == \"TV Show\"]\nshows_year_count = shows.release_year.value_counts().sort_values()\nshows_year_count","0e5e5cf7":"plt.figure(figsize = (15,8))\nplt.bar(movies_year_count.index,movies_year_count.values,label = \"Movies\")\nplt.bar(shows_year_count.index,shows_year_count.values,label = \"TV Shows\",color = \"black\")\nplt.legend(fontsize = 15)\nplt.xticks(size = 15)\nplt.yticks(size = 15)\nplt.ylabel(\"Number\",size = 15)\nplt.title(\"Movies - TV Show number from 1925 to 2020\",fontdict = {\"fontsize\":25})\nplt.savefig(\"Movies - TV Show number from 1925 to 2020\",dpi = 300)\nplt.show()","2e2c9f3e":"Movies_Country = netflix.loc[netflix.type == \"Movie\"].country.value_counts().sort_values()[-1:-54:-1].rename(\"Movies\")\nShows_Country = netflix.loc[netflix.type == \"TV Show\"].country.value_counts().sort_values().rename(\"TV Shows\")\nMovies_Shows_Country = pd.merge(Movies_Country,Shows_Country,how = \"left\",left_index = True,right_index = True)[0:24]\nMovies_Shows_Country = Movies_Shows_Country.rename(index = {\"United States\":\"US\",\"United Kingdom\":\"UK\",\"United Kingdom, United States\":\"UK, US\",\"United States, Canada\":\"US, Canada\",\"United States, United Kingdom\":\"UK, US\",\"Canada, United States\":\"US, Canada\"})\nind_countries = Movies_Shows_Country.index.unique()\n\nMovies_Shows_Country_final_remove_dublicates = pd.DataFrame(index = ind_countries,columns = [\"Movies\",\"TV Shows\"])\nfor country in ind_countries:\n    data_country = Movies_Shows_Country.loc[country]\n    data_country_final_movies = data_country.Movies.sum(axis = 0)\n    data_country_final_shows = data_country[\"TV Shows\"].sum(axis = 0)\n\n    Movies_Shows_Country_final_remove_dublicates.loc[country][\"Movies\"] = data_country_final_movies\n    Movies_Shows_Country_final_remove_dublicates.loc[country][\"TV Shows\"] = data_country_final_shows\nMovies_Shows_Country_final_remove_dublicates = Movies_Shows_Country_final_remove_dublicates.sort_values(by = \"Movies\")\nMovies_Shows_Country_final_remove_dublicates = Movies_Shows_Country_final_remove_dublicates.fillna(0)","6d85ea39":"Movies_Shows_Country_final_remove_dublicates[-1::-1].plot(kind = \"bar\",figsize = (15,8))\nplt.legend(fontsize = 15)\nplt.ylabel(\"Number\",size = 15)\nplt.yticks(size = 15)\nplt.xticks(rotation = 80)\nplt.title(\"Movies - TV Shows by Country\",size = 25)\nplt.savefig(\"Movies - TV Shows by Country\",dpi = 300)\nplt.show()","81a8893d":"Directors  = netflix.director.value_counts().sort_values()[-1:-11:-1]\nDirectors","a5e6147b":"plt.figure(figsize = (15,8))\nplt.bar(Directors.index,Directors.values)\nplt.plot(Directors.index,Directors.values,marker = \"o\",color =\"b\")\n\nplt.xticks(size = 10,weight = \"bold\",rotation = 20)\n\nplt.yticks([i for i in range(0,19,2)],size = 15)\nplt.title(\"Directors of Movies and TV Shows\",size = 25)\nplt.savefig(\"Directors of Movies and TV Shows\",dpi = 300)\nplt.show()","84be9e6e":"MoviesOnStreamingPlatforms_updated = pd.read_csv(\"..\/input\/netflix-imdb\/MoviesOnStreamingPlatforms_updated.csv\")\nMoviesOnStreamingPlatforms_updated = MoviesOnStreamingPlatforms_updated.drop([\"ID\",\"Unnamed: 0\"],axis = 1)\nMoviesOnStreamingPlatforms_updated = MoviesOnStreamingPlatforms_updated.set_index(\"Title\")\nMoviesOnStreamingPlatforms_updated_top_10_IMDb = MoviesOnStreamingPlatforms_updated.sort_values(by = \"IMDb\").dropna()\n\nMoviesOnStreamingPlatforms_updated_top_10_IMDb = MoviesOnStreamingPlatforms_updated_top_10_IMDb[-1:-11:-1]\nMoviesOnStreamingPlatforms_updated_top_10_IMDb","bbe6be25":"plt.figure(figsize = (15,8))\nplt.barh(MoviesOnStreamingPlatforms_updated_top_10_IMDb.IMDb.index,MoviesOnStreamingPlatforms_updated_top_10_IMDb.IMDb.values)\n\nplt.show()","3d9aca38":"# Preparing Data","02ea880e":"# Top Movies in the World IMDb: Data Visulization","52fd73bc":"# Movies - TV Show Country : Data Analysis","67a93b5a":"# Directors : Data Visulization","ba3a7132":"# Movies - TV Show\tnumber from 1925 to 2020 : Data Analysis","4d57f7da":"# Directors : Data Analysis","d0549d5a":"# Top Movies in the World IMDb: Data Analysis","6a7e85a6":"# Movies - TV Show\tnumber from 1925 to 2020 : Data Visulization","086122a1":"# Movies - TV Show Country : Data Visulization"}}