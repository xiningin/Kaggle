{"cell_type":{"279e6031":"code","5582b1ad":"code","33cd8c63":"code","62a508e2":"code","25401511":"code","b99076d1":"code","f6004a20":"code","d44a1b53":"code","3a0bc35a":"code","6c7a40a9":"code","6f140d0d":"code","00f0401d":"code","56bb002e":"code","3cbec2e4":"code","0f8d954c":"code","dcdcc31c":"code","e2bd08e3":"code","5578dfd9":"code","5338ec66":"code","0e634396":"code","c66ed9fd":"code","02018332":"code","191b77c8":"code","ad7b82ae":"code","99d23844":"code","981e0dda":"code","44332c84":"code","52a113cc":"code","0eea5aa0":"code","09a148a5":"code","720da0ec":"code","a03b75fa":"code","1ead019b":"code","725e475f":"code","1a06d01f":"code","edab3662":"code","407d43b9":"code","96436070":"code","b5ecf0ee":"code","5935b05f":"code","aa36e57e":"code","a5296b41":"code","3d3b153e":"code","f6299ac9":"code","a2ff1e42":"code","c8a129e3":"code","827cae7b":"code","c918cdba":"code","d4dad238":"code","b59d5a3e":"code","223a9bbc":"code","c112bd80":"code","92bf9a28":"code","61fa3dc3":"code","7a6ddc6f":"code","96847367":"code","b1851df1":"code","574c0f32":"code","2cbe3e69":"code","0cfbe9e7":"code","da5386b1":"code","ac206505":"code","a4d3a7d5":"code","f069764c":"code","2ff7cb4b":"code","164e0d13":"code","c33db3ea":"code","e38e8f43":"code","d9fdb113":"code","8af155db":"code","f8a8d871":"code","11c047ac":"code","8e9521ba":"code","27977b7a":"code","ab10a98c":"code","669e58b7":"code","e7e6bfed":"code","0b4001e2":"code","cdbf2968":"code","345c27ea":"code","3605a487":"code","b3dfd07e":"code","d0fd3818":"code","5bde162e":"code","b610d6df":"code","7d5028ea":"code","65584bdc":"code","71141ba3":"code","ff944d01":"code","89b950fa":"code","9f0ff4c0":"code","94e04478":"code","1f55ce3c":"code","12b91469":"code","b73d299d":"code","8dce6196":"markdown","f41da2af":"markdown","2c92eb40":"markdown","4b21f43d":"markdown","768e0996":"markdown","e75a1f96":"markdown","28906469":"markdown","12a51ead":"markdown"},"source":{"279e6031":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5582b1ad":"files = [\"ap_2010.csv\",\"class_size.csv\",\"demographics.csv\",\n         \"graduation.csv\",\n         \"hs_directory.csv\", \"sat_results.csv\"]","33cd8c63":"data = {}\n\nfor f in files:\n    df =  pd.read_csv(\"\/kaggle\/input\/school\/{}\".format(f))\n    key = f.replace(\".csv\", \"\")\n    data[key] = df","62a508e2":"all_survey = pd.read_csv(\"\/kaggle\/input\/school\/survey_all.txt\", delimiter = \"\\t\", encoding = \"latin-1\")","25401511":"d75_survey = pd.read_csv(\"\/kaggle\/input\/school\/survey_d75.txt\", delimiter = \"\\t\", encoding = \"latin-1\")","b99076d1":"survey = pd.concat([all_survey,d75_survey], axis = 0)","f6004a20":"# This is our main dataset \ndata[\"sat_results\"].head()","d44a1b53":"survey.columns","3a0bc35a":"survey.shape","6c7a40a9":"survey[\"DBN\"] = survey[\"dbn\"] ","6f140d0d":"survey_fields = [\"DBN\", \"rr_s\", \"rr_t\", \"rr_p\", \"N_s\", \"N_t\", \"N_p\", \"saf_p_11\", \n        \"com_p_11\", \"eng_p_11\", \"aca_p_11\", \"saf_t_11\", \"com_t_11\", \"eng_t_11\", \n        \"aca_t_11\", \"saf_s_11\", \"com_s_11\", \"eng_s_11\", \"aca_s_11\", \"saf_tot_11\", \n        \"com_tot_11\", \"eng_tot_11\", \"aca_tot_11\"]","00f0401d":"survey = survey[survey_fields]","56bb002e":"data.keys()","3cbec2e4":"data[\"survey\"] = survey","0f8d954c":"data.keys()","dcdcc31c":" data['hs_directory'].head()","e2bd08e3":" data['hs_directory'][\"DBN\"] =  data['hs_directory']['dbn']","5578dfd9":"# data['hs_directory'].head()","5338ec66":"data['class_size'].head(1)","0e634396":"data['class_size'][\"padded_csd\"] = data['class_size'][\"CSD\"].astype(str).str.zfill(2) ","c66ed9fd":"data['class_size'][\"padded_csd\"].head()","02018332":"data[\"class_size\"][\"DBN\"] = data[\"class_size\"][\"padded_csd\"] + data[\"class_size\"][\"SCHOOL CODE\"]","191b77c8":"data[\"class_size\"][\"DBN\"].head()","ad7b82ae":"data[\"sat_results\"].head()","99d23844":"# checking the missing value\n# As we see there is not null value in data \ndata[\"sat_results\"].info()","981e0dda":"data[\"sat_results\"].describe()","44332c84":"col = [\"SAT Critical Reading Avg. Score\",\"SAT Math Avg. Score\",\"SAT Writing Avg. Score\"]\n\nfor c in col:\n    data[\"sat_results\"][c] = pd.to_numeric(data[\"sat_results\"][c], errors = \"coerce\")","52a113cc":"data[\"sat_results\"].info()","0eea5aa0":"data[\"sat_results\"][\"sat_score\"] = data[\"sat_results\"][col].sum(axis = 1)","09a148a5":"data[\"sat_results\"].head()","720da0ec":"pd.options.display.max_colwidth = None\ndata['hs_directory'][\"Location 1\"].head(2)","a03b75fa":"pattern = r'\\((.+)\\)'\n\ncoordinates = data['hs_directory'][\"Location 1\"].str.extract(pattern)[0].str.split(\",\", expand = True)\ncoordinates.head()","1ead019b":"data['hs_directory'][\"lat\"] = coordinates[0]\ndata['hs_directory'][\"lon\"] = coordinates[1]","725e475f":"data['hs_directory'].head()","1a06d01f":"data['class_size']['GRADE '].unique()","edab3662":"data['class_size'][\"PROGRAM TYPE\"].unique()","407d43b9":"class_size = data['class_size']\n\nclass_size = class_size[(class_size['GRADE '] == '09-12') & (class_size[\"PROGRAM TYPE\"] == 'GEN ED')]","96436070":"class_size.head()","b5ecf0ee":"class_size = class_size.groupby(\"DBN\").agg(\"mean\").reset_index()","5935b05f":"data['class_size'] = class_size","aa36e57e":"data['demographics'][\"schoolyear\"].unique()","a5296b41":"demographics = data['demographics']","3d3b153e":"demographics = demographics[demographics[\"schoolyear\"] == 20112012]\ndata['demographics'] = demographics\ngraduation = data['graduation']","f6299ac9":"graduation[\"Demographic\"].unique()","a2ff1e42":"graduation[\"Cohort\"].unique()","c8a129e3":"graduation = graduation[(graduation[\"Demographic\"] == 'Total Cohort') & (graduation[\"Cohort\"] == '2006')]","827cae7b":"graduation","c918cdba":"data['graduation'] = graduation","d4dad238":"data['ap_2010'].info()","b59d5a3e":"data.keys()","223a9bbc":"combined = pd.merge(data['sat_results'], data['ap_2010'] , on = \"DBN\", how = \"left\")","c112bd80":"data['graduation'].info()","92bf9a28":"combined = pd.merge(combined, data['graduation'] , on = \"DBN\", how = \"left\")","61fa3dc3":"cols = ['class_size', 'demographics','hs_directory', 'survey']\n\nfor c in cols:\n    combined = pd.merge(combined, data[c] , on = \"DBN\", how = \"inner\")","7a6ddc6f":"combined.shape","96847367":"data['sat_results'].shape","b1851df1":"combined.info()","574c0f32":"combined.isnull().sum()","2cbe3e69":"mean = combined.mean()\nmean","0cfbe9e7":"combined.fillna(mean,inplace = True)","da5386b1":"combined.isnull().sum()","ac206505":"combined = combined.fillna(0)\ncombined.head()","a4d3a7d5":"combined[\"school_dist\"] = combined[\"DBN\"].str[:2]\ncombined[\"school_dist\"].head()","f069764c":"combined[\"school_dist\"].unique()","2ff7cb4b":"len(combined[\"school_dist\"].unique())","164e0d13":"correlation = combined.corr()","c33db3ea":"pd.options.display.max_rows = None\ncorrelation[\"sat_score\"]","e38e8f43":"import matplotlib.pyplot as plt\ncombined.plot.scatter(\"total_enrollment\", \"sat_score\")\nplt.show()","d9fdb113":"low_enrollment = combined[(combined[\"total_enrollment\"] < 1000) & (combined[\"sat_score\"] < 1000) ]","8af155db":"low_enrollment[\"SCHOOL NAME\"].value_counts().head(10)","f8a8d871":"low_enrollment[\"School Name\"].value_counts().head(10)","11c047ac":"combined[\"lat\"] = pd.to_numeric(combined[\"lat\"], errors = \"coerce\")","8e9521ba":"combined[\"lon\"] = pd.to_numeric(combined[\"lon\"], errors = \"coerce\")","27977b7a":"from mpl_toolkits.basemap import Basemap","ab10a98c":"conda install -c conda-forge basemap-data-hires -y","669e58b7":"m = Basemap(projection = \"merc\", llcrnrlat = 40.496044, urcrnrlat = 40.915256, \n            llcrnrlon = -74.255735 ,urcrnrlon = -73.700272, resolution = \"i\")\nlat = combined[\"lat\"].tolist()\nlon = combined[\"lon\"].tolist()\n# x, y = m(lat, lon)\nm.drawmapboundary(fill_color = \"#85a6d9\")\nm.drawcoastlines(color = \"#6d5f47\", linewidth = .4)\nm.drawrivers(color = \"#6d5f47\",linewidth = .4)\nm.scatter(lon,lat, s = 10, latlon = True, zorder = 2)\n\nplt.show()","e7e6bfed":"m = Basemap(projection = \"merc\", llcrnrlat = 40.496044, urcrnrlat = 40.915256, \n            llcrnrlon = -74.255735 ,urcrnrlon = -73.700272, resolution = \"i\")\nlat = combined[\"lat\"].tolist()\nlon = combined[\"lon\"].tolist()\n# x, y = m(lat, lon)\nm.drawmapboundary(fill_color = \"#85a6d9\")\nm.drawcoastlines(color = \"#6d5f47\", linewidth = .4)\nm.drawrivers(color = \"#6d5f47\",linewidth = .4)\nm.scatter(lon,lat, s = 20, latlon = True, zorder = 2, c = combined[\"ell_percent\"], cmap = \"summer\")\n\nplt.show()","0b4001e2":"combined[[\"ell_percent\", \"SCHOOL NAME\"]]","cdbf2968":"district = combined.groupby(\"school_dist\").agg(\"mean\").reset_index()","345c27ea":"district","3605a487":"m = Basemap(projection = \"merc\", llcrnrlat = 40.496044, urcrnrlat = 40.915256, \n            llcrnrlon = -74.255735 ,urcrnrlon = -73.700272, resolution = \"i\")\nlat = district[\"lat\"].tolist()\nlon = district[\"lon\"].tolist()\n# x, y = m(lat, lon)\nm.drawmapboundary(fill_color = \"#85a6d9\")\nm.drawcoastlines(color = \"#6d5f47\", linewidth = .4)\nm.drawrivers(color = \"#6d5f47\",linewidth = .4)\nm.scatter(lon,lat, s = 50, latlon = True, zorder = 2, c = district[\"ell_percent\"], cmap = \"summer\")\n\nplt.show()","b3dfd07e":"district[[\"school_dist\", \"ell_percent\"]]","d0fd3818":"survey_fields","5bde162e":"survey_fields.remove(\"DBN\")","b610d6df":"combined.corr()[\"sat_score\"][survey_fields]","7d5028ea":"combined.corr()[\"sat_score\"][survey_fields].plot.bar()\nplt.show()","65584bdc":"m = Basemap(projection = \"merc\", llcrnrlat = 40.496044, urcrnrlat = 40.915256, \n            llcrnrlon = -74.255735 ,urcrnrlon = -73.700272, resolution = \"i\")\nlat = district[\"lat\"].tolist()\nlon = district[\"lon\"].tolist()\n# x, y = m(lat, lon)\nm.drawmapboundary(fill_color = \"#85a6d9\")\nm.drawcoastlines(color = \"#6d5f47\", linewidth = .4)\nm.drawrivers(color = \"#6d5f47\",linewidth = .4)\nm.scatter(lon,lat, s = 50, latlon = True, zorder = 2, c = district[\"saf_s_11\"], cmap = \"summer\")\n\nplt.show()","71141ba3":"print(combined.columns[combined.columns.str.contains(\"_per\")])","ff944d01":"race = ['white_per','asian_per','black_per', 'hispanic_per' ]\n\ncombined.corr()[\"sat_score\"][race]","89b950fa":"combined.corr()[\"sat_score\"][race].plot.bar()","9f0ff4c0":"combined.plot.scatter(\"hispanic_per\",\"sat_score\", )","94e04478":"combined.loc[combined[\"hispanic_per\"] > 95, \"SCHOOL NAME\"]","1f55ce3c":"combined.loc[(combined[\"hispanic_per\"] < 10 )& (combined[\"sat_score\"] > 1800) , \"SCHOOL NAME\"]","12b91469":"combined.corr()[\"sat_score\"][['male_per', 'female_per']].plot.bar()","b73d299d":"combined.plot.scatter('female_per',\"sat_score\")","8dce6196":"## To get lat & lon using Regualer Expression","f41da2af":"### Grand Project on New york school , sat test investigation","2c92eb40":"# if you are fiend help please upvote ","4b21f43d":"# Analysis & Visualization","768e0996":"# 2. Data Transformation \/ Combining","e75a1f96":"# Introduction.","28906469":"# 1. Data Wrangling","12a51ead":"# Importing data set"}}