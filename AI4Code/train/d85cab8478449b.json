{"cell_type":{"59965b3c":"code","e9d35b61":"code","f7b3620f":"code","7bebd4a5":"code","e2f96f5f":"code","bc485789":"code","eb93eb01":"code","7f2520f8":"code","3b18af80":"code","db9e056f":"code","c13668b4":"code","6325ae57":"code","48a5a402":"markdown","09234bab":"markdown"},"source":{"59965b3c":"import pandas as pd\nfrom sklearn import metrics","e9d35b61":"data = pd.read_csv(\"..\/input\/league-of-legends-diamond-ranked-games-10-min\/high_diamond_ranked_10min.csv\").dropna()\ndata.head()","f7b3620f":"X = data.drop( labels=[\"blueWins\"], axis=1 )\ny = data[\"blueWins\"]","7bebd4a5":"X.corr()","e2f96f5f":"corrTable = X.corr()\ncols = X.columns","bc485789":"newCols = []\nfor i in cols:\n    for j in cols:\n        if( i!=j and abs(corrTable[i][j])<0.01 ):\n            newCols.append(j)\nnewCols = list( pd.Series(newCols).unique() )\nprint( len(newCols) )\nX = X[newCols]","eb93eb01":"from sklearn import tree\nfrom sklearn.model_selection import train_test_split","7f2520f8":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25)","3b18af80":"treeClassifier = tree.DecisionTreeClassifier(\n    min_samples_leaf=100\n).fit(X_train, y_train)","db9e056f":"print( \"Accuracy for tree classifier: \"+str( metrics.accuracy_score(y_test, treeClassifier.predict(X_test)) ) )","c13668b4":"tree.plot_tree(treeClassifier)","6325ae57":"from sklearn.linear_model import LogisticRegression\nlogRegModel = LogisticRegression()\nlogRegModel.fit(X_train, y_train)\nprint( \"Accuracy for logistic regressiom model: \"+str( metrics.accuracy_score(y_test, logRegModel.predict(X_test)) ) )","48a5a402":"Ok. Data is mpdofied as we need. Let's build two classification models to predict a win of blue command.","09234bab":"As we see, **classification tree is good model for predicting wining of blue command**."}}