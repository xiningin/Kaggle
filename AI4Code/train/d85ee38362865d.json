{"cell_type":{"c1df89d3":"code","320aad21":"code","1a65ba6e":"code","f41f2a82":"code","064fd647":"code","b1bf1c40":"markdown"},"source":{"c1df89d3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","320aad21":"df = pd.read_csv('..\/input\/17k-apple-app-store-strategy-games\/appstore_games.csv', encoding='ISO-8859-2')\ndf.head()","1a65ba6e":"df = df.rename(columns={'Icon URL':'icon'})","f41f2a82":"Description=df.sort_values('Description', ascending=False)\ntop10=Description.head(9)\nf=['Name','icon']\ndispl=(top10[f])\ndispl.set_index('Name', inplace=True)","064fd647":"#Code from Niharika Pandit https:\/\/www.kaggle.com\/niharika41298\/netflix-vs-books-recommender-analysis-eda\nfrom IPython.display import Image, HTML\n\ndef path_to_image_html(path):\n    '''\n     This function essentially convert the image url to \n     '<img src=\"'+ path + '\"\/>' format. And one can put any\n     formatting adjustments to control the height, aspect ratio, size etc.\n     within as in the below example. \n    '''\n\n    return '<img src=\"'+ path + '\"\"\/>'\n\nHTML(displ.to_html(escape=False ,formatters=dict(icon=path_to_image_html),justify='center'))","b1bf1c40":"Das War's, Kaggle Notebook Runner: Mar\u00edlia Prata   @mpwolke"}}