{"cell_type":{"d4bda96a":"code","315d7c55":"code","dcf54856":"code","664843bb":"code","5258fe14":"code","7862834e":"code","8313bb3f":"code","b1e1fa07":"code","045900d0":"code","14b01e8c":"code","33f62e4b":"code","f5e4d54c":"code","1dd229a6":"code","d9e35a42":"code","99bb128b":"code","6bd5f48a":"code","6fe02fac":"code","c9807844":"code","923fd7bb":"code","61752fd1":"code","74d2ac5c":"code","9ba484f4":"code","c67f574b":"code","eae933a7":"code","e2e7dbe0":"code","e0270b64":"code","fb3a0b85":"code","b808d54d":"code","e6b3c2be":"code","a780feb2":"code","e9f0f019":"code","8ef0fdfa":"code","194f2f52":"code","038c73a9":"code","d118baa9":"code","fe71bb63":"code","559ab6bb":"code","b232a823":"code","04cd2b0b":"code","fae8890a":"code","2e9b0333":"code","8a1f28ef":"code","aad56994":"code","3842e57c":"code","df2c59b7":"code","f7f22523":"code","9be7b69c":"code","497fb7af":"code","90d2c8fc":"code","913631b6":"code","7ba3d764":"code","c41e3081":"code","aa826b1a":"code","b8924eda":"code","912b8b46":"code","24bb1cd2":"code","c4a058e8":"code","a2bd27a5":"code","a5a59262":"code","be8ba1e4":"markdown","ab3bd6c8":"markdown"},"source":{"d4bda96a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","315d7c55":"import pandas as pd\nimport datetime","dcf54856":"items= pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/items.csv\")\nshops= pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/shops.csv\")\nsales_train= pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/sales_train.csv\")\ntest= pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/test.csv\")\nsample_submission= pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv\")\nitem_categories= pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/item_categories.csv\")","664843bb":"shops.head()","5258fe14":"sales_train.head()","7862834e":"shops.loc[shops[\"shop_name\"] == '\u0421\u0435\u0440\u0433\u0438\u0435\u0432 \u041f\u043e\u0441\u0430\u0434 \u0422\u0426 \"7\u042f\"', 'shop_name'] = '\u0421\u0435\u0440\u0433\u0438\u0435\u0432\u041f\u043e\u0441\u0430\u0434 \u0422\u0426 \"7\u042f\"'","8313bb3f":"shops[\"city\"]=shops[\"shop_name\"].str.split(' ').map(lambda x: x[0])","b1e1fa07":"shops[\"name_of_shop\"] = shops[\"shop_name\"].str.split(' ').map(lambda x: x[1])","045900d0":"shops.loc[shops[\"city\"] ==\"!\u042f\u043a\u0443\u0442\u0441\u043a\",\"city\"] = \"\u042f\u043a\u0443\u0442\u0441\u043a\"\n","14b01e8c":"\nshops.loc[shops[\"name_of_shop\"] =='\"\u0420\u0430\u0441\u043f\u0440\u043e\u0434\u0430\u0436\u0430\"',\"name_of_shop\"] = \"other\"\nshops.loc[shops[\"name_of_shop\"] ==\"(\u041f\u043b\u0435\u0445\u0430\u043d\u043e\u0432\u0441\u043a\u0430\u044f,\",\"name_of_shop\"] = \"other\"\nshops.loc[shops[\"name_of_shop\"] ==\"\u041c\u0422\u0420\u0426\",\"name_of_shop\"] = \"\u0422\u0420\u0426\"","33f62e4b":"from sklearn.preprocessing import LabelEncoder","f5e4d54c":"shops[\"name_of_shop\"] = LabelEncoder().fit_transform(shops[\"name_of_shop\"])\nshops[\"city\"] = LabelEncoder().fit_transform(shops[\"city\"])","1dd229a6":"shops","d9e35a42":"sales_train.info()","99bb128b":"test.info()","6bd5f48a":"sales_train = sales_train.merge(items, on = \"item_id\" )","6fe02fac":"#sales_train = sales_train.merge(shops, on = \"shop_id\" )","c9807844":"sales_train.head()","923fd7bb":"sales_train = sales_train.drop([\"item_name\",\"item_category_id\",\"item_price\"], axis = 1)","61752fd1":"sales_train[\"date\"] = pd.to_datetime(sales_train[\"date\"])","74d2ac5c":"sales_train.head()","9ba484f4":"sales_train[\"date_block_num\"].unique()","c67f574b":"sales_train_monthly =pd.DataFrame(sales_train.sort_values(\"date\").groupby([\"date_block_num\",\"shop_id\",\"item_id\"])[\"item_cnt_day\"].agg('sum').reset_index())","eae933a7":"sales_train_monthly.describe().T","e2e7dbe0":"sales_train_monthly_pivot = sales_train_monthly.pivot_table(index = ['shop_id','item_id'],values = ['item_cnt_day'],columns = ['date_block_num']).reset_index()","e0270b64":"sales_train_monthly_pivot","fb3a0b85":"sales_train_monthly_pivot= pd.merge(test,sales_train_monthly_pivot,on = ['item_id','shop_id'],how = 'left')","b808d54d":"sales_train_monthly_pivot.fillna(0,inplace = True)","e6b3c2be":"sales_train_monthly_pivot.head(10)\n","a780feb2":"from sklearn.model_selection import train_test_split","e9f0f019":"#sales_train_monthly_pivot = sales_train_monthly_pivot.drop([\"shop_id\", \"item_id\", \"ID\"], axis = 1)\n","8ef0fdfa":"sales_train_monthly_pivot.head()","194f2f52":"#proba\nX= sales_train_monthly_pivot.iloc[:,:-1]\ny= sales_train_monthly_pivot.iloc[:,-1]","038c73a9":"y =y.values.reshape(-1,1)","d118baa9":"print(X.shape, y.shape)","fe71bb63":"#proba2\nX_train= sales_train_monthly_pivot.iloc[:,:-1]\ny_train= sales_train_monthly_pivot.iloc[:,-1]\nX_test = sales_train_monthly_pivot.iloc[:,1:]\n","559ab6bb":"y_train =y_train.values.reshape(-1,1)","b232a823":"print(X_train.shape,y_train.shape,X_test.shape)","04cd2b0b":"from sklearn.preprocessing import MinMaxScaler","fae8890a":"X_train.info()","2e9b0333":"scaler = MinMaxScaler()","8a1f28ef":"X_train = scaler.fit_transform(X_train)\n","aad56994":"X_test = scaler.transform(X_test)","3842e57c":"X_train.shape","df2c59b7":"X_test.shape","f7f22523":"X_train = np.reshape(X_train, (X_train.shape[0],X_train.shape[1],1))\nX_test = np.reshape(X_test, (X_test.shape[0], X_test.shape[1],1))","9be7b69c":"print(X_test.shape, X_test.shape)","497fb7af":"from keras.models import Sequential\nfrom keras.layers import LSTM,Dense,Dropout","90d2c8fc":"my_model = Sequential()\nmy_model.add(LSTM(units = 10,return_sequences = True,input_shape = (36,1)))\nmy_model.add(Dropout(0.2))\nmy_model.add(LSTM(units = 10,return_sequences = True))\nmy_model.add(Dropout(0.2))\nmy_model.add(LSTM(units = 10,return_sequences = True))\nmy_model.add(Dropout(0.2))\nmy_model.add(LSTM(units = 10,return_sequences = True))\nmy_model.add(Dropout(0.2))\nmy_model.add(LSTM(units = 10,return_sequences = True))\nmy_model.add(Dropout(0.2))\nmy_model.add(LSTM(units = 10,return_sequences = False))\nmy_model.add(Dropout(0.2))\nmy_model.add(Dense(1))\n\n\n\n\nmy_model.compile(loss = 'mse',optimizer = 'adam', metrics = ['mean_squared_error'])\nmy_model.summary()","913631b6":"my_model.fit(X_train,y_train,batch_size = 12500,epochs = 20)","7ba3d764":"from tensorflow.keras.models import load_model","c41e3081":"losses = pd.DataFrame(my_model.history.history)","aa826b1a":"losses.plot()","b8924eda":"\"\"\"#test podatke vzemen\nX_test_reshaped = X_test.reshape((X_test.shape[0], X_test.shape[1], 1))\"\"\"","912b8b46":"X_test.shape","24bb1cd2":"submission_pfs = my_model.predict(X_test)","c4a058e8":"submission_pfs = submission_pfs.clip(0,20)\n","a2bd27a5":"submission = pd.DataFrame({'ID':test['ID'],'item_cnt_month':submission_pfs.ravel()})","a5a59262":"submission.to_csv('forceste_price_36.csv', index = False)","be8ba1e4":"dale dobro ...staro\n","ab3bd6c8":"# "}}