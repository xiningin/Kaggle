{"cell_type":{"c08c49bb":"code","e2fb29e1":"code","abd6c429":"code","cd51d8d4":"code","ab45442a":"code","d59c6c96":"code","bac27223":"code","8d5c1a4d":"code","89670bf2":"code","817827a2":"code","41372b98":"code","e9292ce6":"code","675ab3f4":"code","38df56d1":"code","887efbd3":"code","e20dc26d":"code","4ba2db0c":"code","83a4bc1d":"code","8ede6201":"code","89f46b42":"code","35666651":"code","d8cc8fab":"code","4a3533b5":"code","4fabeb83":"markdown","dd128e80":"markdown"},"source":{"c08c49bb":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n","e2fb29e1":"#dir(np)\n#help(np.where)","abd6c429":"x = np.array([[1, 2, 3], \n              [4, 5, 6]]) \n              \nprint(x)","cd51d8d4":"print(type(x))","ab45442a":"print(x.shape)","d59c6c96":"print(np.reshape(x,(3,2)))","bac27223":"print(np.reshape(x,(1,6))) ","8d5c1a4d":"print(x)# this is 2D array","89670bf2":"print(x[:, None]) # convert  2D array to 3D array ","817827a2":"print(x.ndim) # array Dimention--> 2D\nprint(x[:, None].ndim)# array Dimention -->3D","41372b98":"y=np.array([1,2,3])\nprint(y)","e9292ce6":"print(y.ndim)","675ab3f4":"print(y[:,None]) #convert 1D array to 2D array ","38df56d1":"print(y[:,None].ndim)# dimention 2D","887efbd3":"print(np.reshape(x, (1, -1)))  # -1 means the number of columns will be determined automatically inside 6(If we did not have the number of columns)","e20dc26d":"print(np.reshape(x, (-1, 1)))   # -1 means the number of rows will be determined automatically(explain in up!)","4ba2db0c":"print(x.size)# number of element\nprint(x.dtype)# number is integer ","83a4bc1d":"print(x.itemsize)  # size of each element (in bytes) (number in int)","8ede6201":"print(np.array([[1,2,3],[4,5,6]], dtype=np.float64)) #convert int to float\n","89f46b42":"z = np.arange(1, 20, step=3) #np.arange(): --> np.arange(start,stop,step)\nprint(z)","35666651":"h = np.linspace(1, 2, num=5)# np.linespace: -->step = stop-start\/num \nprint(h)","d8cc8fab":"g = np.logspace(1, 5, num=5) # optinal base = 10 ,this examp: 10^1 --10^5 (start = 10, stop=100000 , num = 5) \nprint(g)","4a3533b5":"print(np.logspace(1, 5, num=5, base=2)) #this exmple: base =2 (start = 2,stop = 32, num = 5)","4fabeb83":"> Print all availabe functions and variables defined in **numpy**.","dd128e80":"*np.linespace* :note that the maximum value is **included**, contrary to **arange**"}}