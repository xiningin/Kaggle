{"cell_type":{"f317defc":"code","41e41e16":"code","29640918":"code","7be4f4c0":"code","c388ab94":"code","f6caad92":"code","42ed493d":"code","5fd1118e":"code","3cb25c65":"code","bfa9d825":"code","0917247c":"code","88f2b6c5":"code","2170d98c":"code","aa919606":"code","d22668ef":"code","a75d3c5a":"code","cfe21f50":"code","2fd7addf":"code","39172cec":"code","33a711d6":"code","3f3f76e1":"code","3ae457a6":"code","80f11524":"code","f2ef3fd7":"code","34a6ab9c":"code","976b6cb3":"code","8c6c32b5":"code","ba472ee2":"code","d1670e6e":"code","14085807":"code","b90b065c":"code","a73ff64d":"code","609b5ef3":"code","ef52e7c0":"code","50c8f31f":"code","96e14008":"code","06ff1ea7":"code","747e23bb":"code","e6d752ef":"code","bdcba5d9":"code","d18e91a8":"code","65f37346":"code","9fa76edf":"code","fb9e6f83":"markdown","7c27ec99":"markdown","c1038505":"markdown","7bea3de2":"markdown","0c355f63":"markdown","0671c1a7":"markdown","9907c003":"markdown","b2223561":"markdown","8690da24":"markdown","9f355742":"markdown","fc7c5bb2":"markdown","ee59160a":"markdown","dcb02ed0":"markdown","eeaede57":"markdown","fca31863":"markdown","81ef1cc1":"markdown","336fcd0d":"markdown","d8b2e4da":"markdown","df1cb013":"markdown","0cad4cc2":"markdown","1159aa7c":"markdown","518627fe":"markdown"},"source":{"f317defc":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Feature Engineering Libraries\n\nfrom sklearn.preprocessing import OneHotEncoder\n\n# Data Visualisation libraries \n%matplotlib inline\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport cv2\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n## Sound Analysis Library \n\nimport librosa\nimport librosa.display\nimport matplotlib.pyplot as plt\nimport IPython.display as ipd\nimport numpy as np\nimport glob\nimport soundfile\nfrom scipy.io.wavfile import read\n\n\nfrom pydub import AudioSegment\nimport IPython","41e41e16":"PATH = '\/kaggle\/input\/coronahack-respiratory-sound-dataset\/CoronaHack-Respiratory-Sound-Dataset\/'","29640918":"df = pd.read_csv(PATH+'Corona-Hack-Respiratory-Sound-Metadata.csv')","7be4f4c0":"def lbl_fun_cat(path):\n    if 'train' in path:\n        res = 'train'\n    else:\n        res = 'test'\n    return res","c388ab94":"df['breathing-deep'] = df['breathing-deep'].astype('str')\ndf['dataset_catagory'] = np.vectorize(lbl_fun_cat)(df['breathing-deep'])","f6caad92":"df.columns","42ed493d":"df.groupby(['dataset_catagory','COVID_test_status']).agg({'USER_ID':'count'}).rename(columns={'USER_ID':'User Count'})","5fd1118e":"df.groupby(['dataset_catagory','COVID_test_status','COVID_STATUS']).agg({'USER_ID':'count'}).rename(columns={'USER_ID':'User Count'})","3cb25c65":"df.groupby(['dataset_catagory','COUNTRY']).agg({'USER_ID':'count'}).rename(columns={'USER_ID':'User Count'})","bfa9d825":"plt.figure(figsize=(15,12))\nlabels = sns.barplot(df.COUNTRY.value_counts().index,df.COUNTRY.value_counts())\nfor item in labels.get_xticklabels():\n    item.set_rotation(45)","0917247c":"source = df['COVID_test_status'].value_counts()","88f2b6c5":"fig = go.Figure(data=[go.Pie(labels=source.index,values=source.values)])\nfig.update_layout(title='Target distribution')\nfig.show()","2170d98c":"plt.figure(figsize=(45,20))\nfig = px.parallel_categories(df[['COVID_test_status','Diabetes', 'Asthma',\n       'Smoker', 'Hypertension', 'Fever', ]], color=\"COVID_test_status\", color_continuous_scale=\"sunset\",\\\n                             title=\"Parallel categories plot of targets\")\nfig","aa919606":"plt.figure(figsize=(45,20))\nfig = px.parallel_categories(df[['COVID_test_status','Returning_User', 'Using_Mask',\n       'Cold', 'Caugh', 'Muscle_Pain' ]], color=\"COVID_test_status\", color_continuous_scale=\"sunset\",\\\n                             title=\"Parallel categories plot of targets\")\nfig","d22668ef":"plt.figure(figsize=(45,20))\nfig = px.parallel_categories(df[['COVID_test_status','loss_of_smell', 'Sore_Throat',\n       'Fatigue', 'Breathing_Difficulties', 'Chronic_Lung_Disease',\n       'Ischemic_Heart_Disease', 'Pneumonia', 'Diarrheoa' ]], color=\"COVID_test_status\", color_continuous_scale=\"sunset\",\\\n                             title=\"Parallel categories plot of targets\")\nfig","a75d3c5a":"hlth_ail = {\n    'USER_ID':'count','Diabetes':'sum', 'Asthma':'sum',\n       'Smoker':'sum', 'Hypertension':'sum', 'Fever':'sum', 'Returning_User':'sum', 'Using_Mask':'sum',\n       'Cold':'sum', 'Caugh':'sum', 'Muscle_Pain':'sum', 'loss_of_smell':'sum', 'Sore_Throat':'sum',\n       'Fatigue':'sum', 'Breathing_Difficulties':'sum', 'Chronic_Lung_Disease':'sum',\n       'Ischemic_Heart_Disease':'sum', 'Pneumonia':'sum', 'Diarrheoa':'sum'\n}","cfe21f50":"df_ailment = df.groupby(['COVID_test_status']).agg(hlth_ail).rename(columns={'USER_ID':'USER_Count'}).reset_index()\ndf_ailment = df_ailment.T\ndf_ailment.columns = [ 'Covid-Status-'+str(c) for c in df_ailment.columns]","2fd7addf":"df_ailment = df_ailment.reset_index().rename(columns={'index':'Health_ailments'})","39172cec":"df_ailment['User_cnt_without_COVID'] = df_ailment[df_ailment['Health_ailments']=='USER_Count']['Covid-Status-0'].values[0]\ndf_ailment['User_cnt_with_COVID'] = df_ailment[df_ailment['Health_ailments']=='USER_Count']['Covid-Status-1'].values[0]","33a711d6":"df_ailment = df_ailment[~((df_ailment['Health_ailments']=='COVID_test_status') | (df_ailment['Health_ailments']=='USER_Count'))]","3f3f76e1":"df_ailment['Health_ailment_PCT_Non_COVID'] = round((df_ailment['Covid-Status-0']\/df_ailment['User_cnt_without_COVID'])*100,2)\ndf_ailment['Health_ailment_PCT_COVID'] = round((df_ailment['Covid-Status-1']\/df_ailment['User_cnt_with_COVID'])*100,2)","3ae457a6":"df_ailment['Health_ailment_PCT_COVID']","80f11524":"plt.figure(figsize=(15,12))\nlabels = sns.barplot(df_ailment['Health_ailments'].values,df_ailment['Health_ailment_PCT_COVID'].values)\nfor item in labels.get_xticklabels():\n    item.set_rotation(45)","f2ef3fd7":"plt.figure(figsize=(15,12))\nlabels = sns.barplot(df_ailment['Health_ailments'].values,df_ailment['Health_ailment_PCT_Non_COVID'].values)\nfor item in labels.get_xticklabels():\n    item.set_rotation(45)","34a6ab9c":"source_health_ailment_cvd = df_ailment['Covid-Status-1'].values\nsource_health_ailment_non_cvd = df_ailment['Covid-Status-0'].values\nsource_health_ailment = df_ailment['Health_ailments'].values\n","976b6cb3":"source_health_ailment","8c6c32b5":"fig = go.Figure(data=[go.Pie(labels=df_ailment['Health_ailments'].values,values=source_health_ailment_cvd)])\nfig.update_layout(title='Health Ailment Percentage for COVID affected persons')\nfig.show()","ba472ee2":"fig = go.Figure(data=[go.Pie(labels=df_ailment['Health_ailments'].values,values=source_health_ailment_non_cvd)])\nfig.update_layout(title='Health Ailment Percentage for Non COVID persons')\nfig.show()","d1670e6e":"PATH+df[df['COVID_test_status']==1]['breathing-deep'][653]","14085807":"PATH+df[df['COVID_test_status']==0]['breathing-deep'][0]\nPATH+df[df['COVID_test_status']==1]['breathing-deep'][653]","b90b065c":"def get_spectogram(audio_file):\n    time_series, sample_rate = librosa.load(audio_file)\n    stft = np.abs(librosa.stft(time_series, hop_length=512, n_fft=2048*4))\n    return librosa.amplitude_to_db(stft, ref=np.max)","a73ff64d":"!ls \/kaggle\/input\/coronahack-respiratory-sound-dataset\/CoronaHack-Respiratory-Sound-Dataset\/\/data\/train\/20210406\/UnJVcWCaLzSZJS8B0YJmDwF9d143\/breathing-deep.wav","609b5ef3":"df.columns","ef52e7c0":"\nIPython.display.Audio(PATH+df[df['COVID_test_status']==0]['breathing-deep'][0])","50c8f31f":"IPython.display.Audio(PATH+df[df['COVID_test_status']==1]['breathing-deep'][653])","96e14008":"def plot_spectral_difference(resp_test_type,tgt_0_id,tgt_1_id):\n    fig, ax = plt.subplots(nrows=1, ncols=2, sharex=True, sharey=True, figsize=(15, 5))\n\n    librosa.display.specshow(get_spectogram(PATH+df[df['COVID_test_status']==0][resp_test_type][tgt_0_id]),\n                             y_axis='log', x_axis='time', ax=ax[0])\n    ax[0].set(title='breathing-deep - Non COVID User')\n    ax[0].label_outer()\n\n    librosa.display.specshow(get_spectogram(PATH+df[df['COVID_test_status']==1][resp_test_type][tgt_1_id]),\n                             y_axis='log', x_axis='time', ax=ax[1])\n\n    ax[1].set(title='breathing-deep - COVID User')\n    ax[1].label_outer();\n    plt.suptitle('Recording for '+resp_test_type+' for COVID 19 User vs Non COVID User', fontsize=20)\n    return None","06ff1ea7":" resp_test_list = ['breathing-deep', 'breathing-shallow', 'cough-heavy',\n       'cough-shallow', 'counting-fast', 'counting-normal', 'vowel-a',\n       'vowel-e', 'vowel-o']","747e23bb":"for tst in resp_test_list:\n    plot_spectral_difference(resp_test_type=tst,tgt_0_id=0,tgt_1_id=653)","e6d752ef":"audio_file = PATH+df[df['COVID_test_status']==0]['breathing-deep'][0]\n\nfig, ax = plt.subplots(nrows=1, ncols=2, sharex=True, sharey=True, figsize=(15, 5))\n\nlibrosa.display.specshow(get_spectogram(audio_file), y_axis='log', x_axis='time', ax=ax[0])\nax[0].label_outer()\n\ntime_series, sample_rate = librosa.load(audio_file)\nX = librosa.stft(time_series)\nXdb = librosa.amplitude_to_db(abs(X))\nplt.figure(figsize=(5, 5))\nlibrosa.display.specshow(Xdb, sr=sample_rate, x_axis='time', y_axis='hz', ax=ax[1])\n    \nax[1].label_outer();\nplt.suptitle(\"\", fontsize=14);","bdcba5d9":"PATH+df[df['COVID_test_status']==0]['breathing-deep'][0]\nPATH+df[df['COVID_test_status']==1]['breathing-deep'][653]","d18e91a8":"def Spectromter_multiple_fft(data_file_path,Test_type):\n    test_wav = librosa.core.load(data_file_path, sr=44100)[0]\n    fig, ax = plt.subplots(5, 1, figsize=(20,18))\n    ax[0].plot(test_wav)\n    ax[0].set_title(f\"Full \"+Test_type+\" waveform\")\n\n    mel = librosa.feature.melspectrogram(test_wav, sr=44100, n_fft=512, hop_length=256, win_length=512, window='hann', n_mels=100)\n    mel[mel < 1e-12] = 1e-12\n    ax[1].imshow(np.log(mel)[:,:1000], origin='lower')\n    ax[1].set_title(f\"Slice of {Test_type} mel spectrogram 512 fft\")\n\n    mel = librosa.feature.melspectrogram(test_wav, sr=44100, n_fft=1024, hop_length=256, win_length=1024, window='hann', n_mels=100)\n    mel[mel < 1e-12] = 1e-12\n    ax[2].imshow(np.log(mel)[:,:1000], origin='lower')\n    ax[2].set_title(f\"Slice of {Test_type} mel spectrogram 1024 fft\")\n\n    mel = librosa.feature.melspectrogram(test_wav, sr=44100, n_fft=2048, hop_length=256, win_length=1024, window='hann', n_mels=100)\n    mel[mel < 1e-12] = 1e-12\n    ax[3].imshow(np.log(mel)[:,:1000], origin='lower')\n    ax[3].set_title(f\"Slice of {Test_type} mel spectrogram 2048 fft\")\n    \n    chroma = librosa.feature.chroma_stft(test_wav, sr=44100, n_fft=2048, hop_length=256, win_length=1024, window='hann')\n    ax[4].imshow(chroma[:,:1000], origin='lower')\n    ax[4].set_title(f\"Slice of {Test_type} chromagram 2048 fft\")","65f37346":"Spectromter_multiple_fft(data_file_path=PATH+df[df['COVID_test_status']==0]['breathing-deep'][0],Test_type='breathing-deep')","9fa76edf":"Spectromter_multiple_fft(data_file_path=PATH+df[df['COVID_test_status']==1]['breathing-deep'][653],Test_type='breathing-deep')","fb9e6f83":"# Spectral difference between COVID User and Non COVID User for different respiratory test\n\n* breathing-deep\n* breathing-shallow\n* cough-heavy\n* cough-shallow\n* counting-fast\n* counting-normal\n* vowel-a\n* vowel-e\n* vowel-o","7c27ec99":"## Spectral difference for breathing-deep - Respiratory Test","c1038505":"#### Observation - \n\nNo of users in India is High compared to other countries","7bea3de2":"#### Observation - \n\nDataset is highly unblanaced , Covid Infected patient is around 1% in the overall dataset","0c355f63":"How the COVID_test_status is related with below health ailments\n\n* Returning_User\n* Using_Mask\n* Cold\n* Caugh\n* Muscle_Pain","0671c1a7":"## Slice of DeepBreath Test Spectrogram on multiple FFT - COVID Patient","9907c003":"# Spectrogram with multiple FFT","b2223561":"## Let See How the users distributed by Country","8690da24":"### COVID user - breathing-deep sound test","9f355742":"# Data Processing","fc7c5bb2":"# Target label distribution","ee59160a":"## Slice of DeepBreath Test Spectrogram on multiple FFT - Non COVID User","dcb02ed0":"How the COVID_test_status is related with below health ailments\n\n* loss_of_smell\n* Sore_Throat\n* Fatigue\n* Breathing_Difficulties\n* Chronic_Lung_Disease\n* Ischemic_Heart_Disease\n* Pneumonia\n* Diarrheoa","eeaede57":"# Visualise recordings in spectogram","fca31863":"# Health ailment relationship between COVID and Non COVID Users","81ef1cc1":"# Conclusion :- \n\nHope above EDA helps to understand the data in this dataset , Converting Wav files into image files to treat this ML problem as Image Classification problem\n\nKindly share your thoughts or Comments below","336fcd0d":"# Ending note <a id=\"5\"><\/a>\n\n<font color=\"red\" size=4>This concludes my kernel. Please upvote if you like it. It motivates me to produce more quality content :)<\/font>","d8b2e4da":"#         CoronHack-Respiratory Sound - EDA - Part 1","df1cb013":"### Non COVID user - breathing-deep sound test","0cad4cc2":"\n### Objective \n\nCorona - COVID19 virus affects the respiratory system of healthy individual & Respiratory Sound is one of the important testing methods to identify the corona virus.\n\n\n### Dataset Description\nWith the Respiratory Sound dataset, Develop a Machine Learning Model to classify the Respiratory Sound of Healthy vs Corona affected patients & this model powers the AI application to test the Corona Virus in Faster Phase.\n\nContent\nRespiratory Sound files of Corona affected users and Users does not have corona is available in CoronaHack-Respiratory-Sound-Dataset\n\nRespiratory sound files available in train and test folders with dates and user ID\n\nMultiple category of respiratory sound files\n\n* breathing-deep\n* breathing-shallow\n* cough-heavy\n* cough-shallow\n* counting-fast\n* counting-normal\n* vowel-a\n* vowel-e\n* vowel-o\n\nRespiratory Sound files for each users available in data folders and labels , demographic details and other ailments related to User available in Corona-Hack-Respiratory-Sound-Metadata.csv file\n\n#### Target variable -\n\nCOVIDteststatus - ( Possible values 1 - User Has COVID , 0 -User does not have COVID & NA - User does't provided COVID status )\n\n#### Features :-\n\nUser Personal ID\n\nUSER_ID - User ID is encrypted actual customer is not stored\nGENDER - M - Male & F - For Female\nAGE. - Integer\nCOVIDSTATUS - ( Possible values - healthy , respillnessnotidentified,ect )\nENGLISH_PROFICIENCY - Y - Yes or N - No\nUser Demographic details :-\n\nCOUNTRY\nCOUNTYROSTATE\nCITY_LOCALITY\nData collection dates -\n\nDATES - Date format YYYYMMDD\nUser Health ailments and Corona Symptoms ( Possible values - 1 True & 0- False )\n\n* Diabetes\n* Asthma\n* Smoker\n* Hypertension\n* Fever\n* Returning_User\n* Using_Mask\n* Cold\n* Caugh\n* Muscle_Pain\n* lossofsmell\n* Sore_Throat\n* Fatigue\n* Breathing_Difficulties\n* ChronicLungDisease\n* IschemicHeartDisease\n* Pneumonia\n* Diarrheoa\n\n\nRespiratory Sound file category paths ( Below files contain the path with file name & if the .Wav file not available value will be blank )\n\n* breathing-deep\n* breathing-shallow\n* cough-heavy\n* cough-shallow\n* counting-fast\n* counting-normal\n* vowel-a\n* vowel-e\n* vowel-o","1159aa7c":"How the COVID_test_status is related with below health ailments\n\n* Diabetes\n* Asthma\n* Smoker \n* Hypertension\n* Fever","518627fe":"#### Observation :- \n\nAs per above Catagory plots , Users tested Positive for Covid has almost all health related ailments described above"}}