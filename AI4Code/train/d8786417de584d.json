{"cell_type":{"4944b9ec":"code","bfc18983":"code","050197a0":"code","8dd64a51":"code","4d9fffba":"code","434fbb80":"code","0d5a2996":"code","1944532f":"code","e0137edd":"code","9e5b1716":"code","7c878a54":"code","b4023ed9":"code","5a4f17c4":"code","ea3fb789":"code","7e713c30":"code","5e1ea2ba":"code","c8b238b0":"code","9379e209":"code","bfd85974":"code","82c9bef6":"code","b37fcea4":"code","cdc55955":"code","308cbcd5":"code","2f28376c":"code","c4554398":"code","958573fd":"markdown","d9cb6359":"markdown","1da9530a":"markdown"},"source":{"4944b9ec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers, callbacks\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report,confusion_matrix, accuracy_score\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bfc18983":"df_tr=pd.read_csv('..\/input\/titanic\/train.csv')\ndf_te=pd.read_csv('..\/input\/titanic\/test.csv')","050197a0":"df_tr.head()","8dd64a51":"df_tr.info()","4d9fffba":"df_tr=df_tr.drop(['Cabin','Name','Ticket'],axis=1)\ndf_te=df_te.drop(['Cabin','Name','Ticket'],axis=1)","434fbb80":"print('Null values in train dataset:\\n',df_tr.isnull().sum(),'\\nNull values in test dataset:\\n',df_te.isnull().sum())","0d5a2996":"df_te['Fare'].mean()","1944532f":"df_tr['Age']=df_tr.fillna(df_tr['Age'].mean)\ndf_te['Age']=df_te.fillna(df_te['Age'].mean)\ndf_tr['Embarked']=df_tr['Embarked'].fillna('S')\ndf_te['Fare']=df_te['Fare'].fillna(35)","e0137edd":"xtr_dum=pd.get_dummies(df_tr[['Sex','Embarked']])\nxte_dum=pd.get_dummies(df_te[['Sex','Embarked']])","9e5b1716":"dxtr=pd.concat([df_tr,xtr_dum],axis=1)\ndxte=pd.concat([df_te,xte_dum],axis=1)","7c878a54":"dxtr=dxtr.drop(['Sex','Embarked'],axis=1)\ndxte=dxte.drop(['Sex','Embarked'],axis=1)","b4023ed9":"scc=StandardScaler()\ndytr=dxtr['Survived']\nsctr=scc.fit_transform(dxtr.drop(['Survived','PassengerId'],axis=1))\nscte=scc.fit_transform(dxte.drop('PassengerId',axis=1))","5a4f17c4":"xtr,xtee,ytr,yte=train_test_split(sctr,dytr,random_state=42,test_size=0.27)\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import GridSearchCV\nknn=KNeighborsClassifier() \nparam_grid={'n_neighbors':[5,7,6],\n            'weights':['distance','uniform'],\n            'algorithm':['auto','ball_tree','kd_tree','brute'],\n            'leaf_size':[25,30,27],\n            'metric':['manhattan','euclidean','chebyshev','minkowski']}\ngrid=GridSearchCV(knn,cv=5,param_grid=param_grid,verbose=1,n_jobs=1)","ea3fb789":"grid.fit(xtr,ytr)","7e713c30":"grid.best_params_","5e1ea2ba":"ypred=grid.predict(xtee)","c8b238b0":"print(classification_report(yte,ypred))","9379e209":"sns.heatmap(confusion_matrix(yte,ypred),annot=True)","bfd85974":"print('Accuracy of model: ',accuracy_score(yte,ypred))","82c9bef6":"out=grid.predict(dxte.drop('PassengerId',axis=1))","b37fcea4":"out=pd.DataFrame(out)","cdc55955":"submissions=pd.concat([dxte['PassengerId'],out],axis=1)","308cbcd5":"submissions.rename(columns={0:'Survived'},inplace=True)","2f28376c":"submissions","c4554398":"submissions.to_csv('outputs1.csv',index=False)","958573fd":"#### **Age** column needs to be filled along with *Embarked* and *Fare*","d9cb6359":"### **Cabin**, **Name** **&** **Ticket** columns need to be *dropped* as they don't have any affect on our prediction","1da9530a":"# Exploring the datasets\n## It helps in determining the\n#### *Missing* values **&** the columns that need to be *converted*"}}