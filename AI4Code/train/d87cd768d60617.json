{"cell_type":{"bc29d257":"code","07eb4b53":"code","3ea6a5b3":"code","0eeaa644":"code","1b9cdc58":"code","95ea2f00":"code","04d95270":"code","b22923b2":"code","d08498db":"code","211c2b9e":"code","9bd6d470":"code","ab35d618":"code","92070b75":"code","14a3707b":"code","78bda073":"code","163fa189":"code","7874c649":"code","9bb4680d":"code","92280e58":"code","b8a65842":"code","5cac6452":"code","308557e8":"code","1eb51df0":"code","87096adc":"code","1b8d1b8f":"code","4a8a742f":"code","cebc601f":"code","1de31ada":"code","78e9ef1c":"code","38ef25c4":"code","223ba2d7":"code","a5eae0b1":"code","18b76ff4":"code","cc02e625":"code","21648d62":"code","fd559205":"code","37bb6519":"code","dee8b135":"code","1a06ca58":"code","9d2d70ee":"code","b4d33300":"code","a1cb9102":"code","05413855":"code","e5e31afd":"code","271f54d6":"code","f337b33e":"code","c8f63242":"code","c9446afa":"code","a606596b":"code","a951a675":"code","7db392ba":"code","80283323":"code","4e69d1f7":"code","8593d922":"code","ae4c3f31":"code","66e54016":"code","7b40b18d":"code","e5f42c23":"code","f678563a":"code","9c0b4640":"code","56abae29":"code","2c4b4e38":"code","892ed1e6":"code","c12be947":"code","7aaa824d":"markdown","15afe435":"markdown","f78677e4":"markdown","ab089135":"markdown","47ee5939":"markdown","330e74ea":"markdown","11581540":"markdown","19aee0ee":"markdown","c6d71bc9":"markdown","b7076269":"markdown","02d8bc04":"markdown","769c4c18":"markdown","e0630faf":"markdown","48568105":"markdown","47ddd5ce":"markdown","9c944448":"markdown","ce470fc9":"markdown","055f74e6":"markdown","5c366c8a":"markdown","6d7d1bb6":"markdown","d9ac7290":"markdown","a392a70b":"markdown","0ce523c2":"markdown","d91d9126":"markdown","9ae2271d":"markdown","44ecb8a1":"markdown","e7ce804e":"markdown","5573d482":"markdown","27e2f97c":"markdown","7344e120":"markdown","5daa33f8":"markdown","3a4ec815":"markdown","89ae5583":"markdown","fb231e32":"markdown","dfddf491":"markdown","b5360430":"markdown","b0c0f69b":"markdown","27135cf1":"markdown","624b8ac0":"markdown","e606a3ef":"markdown","755dff0b":"markdown","c4a3e871":"markdown","a4c08c48":"markdown","a00cbe6a":"markdown","fa11455b":"markdown","5e502665":"markdown","ab48cfcf":"markdown","36a6a928":"markdown","db3b4439":"markdown","c9c3fe3d":"markdown","a4747dff":"markdown","88e412a6":"markdown","31a13294":"markdown","24d2988f":"markdown","dfce776b":"markdown","0bf7d4b3":"markdown","d801c98c":"markdown","d84235be":"markdown","ee0d202a":"markdown","297b3d1d":"markdown","f929b10b":"markdown","4e5544fc":"markdown","05c427d6":"markdown","dda52b6a":"markdown","04c3d49b":"markdown","58c4885f":"markdown","6cb46bed":"markdown","608f48e5":"markdown","eee924b7":"markdown","b87438b6":"markdown","7be07018":"markdown","08cdec00":"markdown","df151878":"markdown","3743471f":"markdown","ebc1c063":"markdown","cea56bc3":"markdown","1ed067b3":"markdown","70eda58f":"markdown","190edab2":"markdown","c91187c7":"markdown","94fcd8ca":"markdown"},"source":{"bc29d257":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.offline as py\n\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\npy.offline.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n%matplotlib inline\n# Plot in SVG format since this format is more sharp and legible\n%config InlineBackend.figure_format = 'svg'","07eb4b53":"path = '..\/input\/heart.csv'\ndf = pd.read_csv(path)\ndf.head()","3ea6a5b3":"num_cont_feat = ['age', 'trestbps', 'chol', 'thalach', 'oldpeak']\ncat_feat = ['sex', 'cp', 'fbs', 'restecg', 'exang', 'slope', 'ca', 'thal']","0eeaa644":"df['sex'] = df['sex'].apply(lambda x: 'male' if x == 1 else 'female')\ndf['exang'] = df['exang'].map({1: 'Yes', 0:'No'})","1b9cdc58":"df.shape","95ea2f00":"df.columns","04d95270":"df.info()","b22923b2":"df.describe()","d08498db":"plt.rcParams['figure.figsize']= (12,8) # figure size\nsns.set_style('darkgrid') # Style","211c2b9e":"df['age'].hist(grid=True, bins=10); \nplt.title('Age distribuition')","9bd6d470":"sns.distplot(df[df['sex']=='female']['age'], rug=True, hist=True, label='female')\nsns.distplot(df[df['sex']=='male']['age'], rug=True, hist=True, label='male')\nplt.legend()\nplt.title('Density plot of age by sex');","ab35d618":"age = df['age']\nlayout = go.Layout(barmode='overlay')\ndata = go.Histogram(x=age, opacity=0.6, xbins={'size': 4})\nfig = go.Figure(data=[data], layout=layout)\npy.offline.iplot(fig)","92070b75":"df['trestbps'].hist()\nplt.title('Resting Blood pressure distribuition')","14a3707b":"sns.distplot(df['trestbps'], bins=10)\nplt.title('Resting Blood pressure desnity plot');","78bda073":"plt.rcParams['figure.figsize']= (15,8) # reajustar o tamanho da figura \n\ndf[[ 'age','trestbps', 'chol', 'thalach', 'oldpeak']].hist();","163fa189":"fig, axes = plt.subplots(nrows = 1, ncols=2)\nsns.boxplot(x='chol', data=df, orient='v', ax=axes[0])\nsns.boxplot(x='oldpeak', data=df,  orient='v', ax=axes[1]);","7874c649":"df['target'].value_counts()","9bb4680d":"df['sex'].value_counts()","92280e58":"fig, axes = plt.subplots(nrows=2, ncols=4, figsize=(17,10))\ncat_feat = ['sex', 'cp', 'fbs', 'restecg', 'exang', 'slope', 'ca', 'thal', 'target']\n\nfor idx, feature in enumerate(cat_feat):\n    ax = axes[int(idx\/4), idx%4]\n    if feature != 'target':\n        sns.countplot(x=feature, hue='target', data=df, ax=ax)\n","b8a65842":"plt.rcParams['figure.figsize'] = (10,8)\nsns.countplot(x='target', hue='sex', data=df);\nplt.title('Count of target feature by sex')","5cac6452":"pd.crosstab(df['sex'], df['target'], normalize=True)","308557e8":"sex_target = df.groupby(by=['sex', 'target']).size()\nsex_target_pcts = sex_target.groupby(level=0).apply(lambda x: 100*x\/x.sum())\n\nsex_target_pcts","1eb51df0":"sns.countplot(x='cp', hue='target', data=df)","87096adc":"df['sex'] = df['sex'].map({'female': 0, 'male': 1})\ndf['exang'] = df['exang'].map({'No': 0, 'Yes': 1})\n","1b8d1b8f":"plt.figure(figsize=(12,8))\nsns.heatmap(df.drop(['target', 'sex', 'cp', 'fbs'], axis=1).corr(), annot=True, cmap='coolwarm');","4a8a742f":"plt.figure(figsize=(30,30))\nsns.set_style('darkgrid')\nsns.pairplot(df[num_cont_feat])","cebc601f":"plt.rcParams['figure.figsize'] = (8,8)\nsns.scatterplot(x='chol', y='trestbps', hue='sex', size=None, data=df)\nplt.title(' Cholesterol vs Blood pressure in rest')","1de31ada":"sns.jointplot(x='thalach', y='trestbps',  data=df)","78e9ef1c":"sns.jointplot(kind='kde', x='thalach', y='trestbps', data=df)","38ef25c4":"sns.scatterplot(x='age', y='chol', hue='target', data = df)","223ba2d7":"plt.figure()\nplt.scatter(df[df['target'] == 0]['age'], df[df['target'] == 0]['chol'], marker='o', c='blue', label='healthy')\nplt.scatter(df[df['target'] == 1]['age'], df[df['target'] == 1]['chol'], marker='x', c='red', label='sick')\n\nplt.legend()","a5eae0b1":"sns.boxplot(x='sex', y='chol', data=df)","18b76ff4":"plt.figure(figsize=(15,10))\nsns.catplot(x='sex', y='chol', col='target', data=df, kind='box', height=4, aspect=.8)","cc02e625":"sns.boxplot(y='age', x='target', data = df)","21648d62":"# First let's create a list to append the data to be plotted\ndata = []\nfor pain in df.cp.unique():\n    data.append(go.Box(y=df[df.cp == pain].chol, name=str(pain)))\n\nlayout = go.Layout(yaxis=dict(title ='Cholesterol', zeroline=False))\n                   \nfig = go.Figure(data=data, layout=layout)               \npy.iplot(fig, show_link=False)","fd559205":"# First let's create a list to append the data to be plotted\ndata = []\nfor target in df.target.unique():\n    data.append(go.Box(y=df[df.target == target].thalach, name=str(target)))\n\nlayout = go.Layout(yaxis=dict(title ='maximum heart rate achieved', zeroline=False))\n                   \nfig = go.Figure(data=data, layout=layout)               \npy.iplot(fig, show_link=False)","37bb6519":"# Import train test split\n\nfrom sklearn.model_selection import train_test_split","dee8b135":"df.head()","1a06ca58":"# Split the DataFrame into a matrix X and vecto Y which form the train set\nX, y = df.drop('target', axis=1), df['target']","9d2d70ee":"X.shape, y.shape","b4d33300":"X_train, X_holdout, y_train, y_holdout = train_test_split(X, y, test_size=0.3, random_state = 17)","a1cb9102":"X_train.shape, X_holdout.shape","05413855":"from sklearn.model_selection import GridSearchCV, StratifiedKFold","e5e31afd":"# Let's specify 5 kfold\nskf = StratifiedKFold(n_splits=5, shuffle=True, random_state=17)","271f54d6":"# Let's create our hyperparameter grid using a dictionary\n\nparams = {'max_depth': np.arange(2,10), \n         'min_samples_leaf': np.arange(2,10),\n         }\n","f337b33e":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score","c8f63242":"tree = DecisionTreeClassifier(random_state=17)","c9446afa":"best_tree = GridSearchCV(estimator = tree, param_grid=params, n_jobs=1, verbose=1)","a606596b":"best_tree.fit(X_train, y_train)","a951a675":"best_tree.best_params_","7db392ba":"best_tree.best_estimator_","80283323":"best_tree.best_score_","4e69d1f7":"pred_holdout_better = best_tree.predict(X_holdout)","8593d922":"accuracy_score(y_holdout, pred_holdout_better)","ae4c3f31":"# First we'll import graphviz from sklearn.tree\nfrom sklearn.tree import export_graphviz","66e54016":"export_graphviz(decision_tree=best_tree.best_estimator_,\n               out_file='tree.dot', filled=True, \n                feature_names=df.drop('target', axis=1).columns)\n\nfrom subprocess import call\n\ncall(['dot', '-Tpng', 'tree.dot', '-o', 'tree.png', '-Gdpi=600'])\n\nfrom IPython.display import Image\nImage(filename = 'tree.png')","7b40b18d":"from sklearn.metrics import f1_score","e5f42c23":"print(f1_score(y_holdout, pred_holdout_better))","f678563a":"importances = best_tree.best_estimator_.feature_importances_","9c0b4640":"plt.figure(figsize=(10,4))\nplt.bar(X_train.columns.values,importances)","56abae29":"from sklearn.base import clone\nfrom sklearn.metrics import f1_score, accuracy_score","2c4b4e38":"X_train_reduced = X_train.drop(['sex', 'fbs', 'thal'], axis=1)\nX_holdout_reduced = X_holdout.drop(['sex', 'fbs', 'thal'], axis=1)","892ed1e6":"X_train_reduced.shape, X_holdout_reduced.shape","c12be947":"# Train on the \"best\" model found from grid search earlier\ntree_reduceded_clone = (clone(best_tree.best_estimator_)).fit(X_train_reduced, y_train)\n\n# Make new predictions\nreduced_predictions = tree_reduceded_clone.predict(X_holdout_reduced)\n\nprint(\"\\nFinal Model trained on reduced data\\n------\")\nprint(\"Accuracy on holdout data: {:.4f}\".format(accuracy_score(y_holdout, reduced_predictions)))\nprint(\"F1-score on holdout data: {:.4f}\".format(f1_score(y_holdout, reduced_predictions)))","7aaa824d":"### Importing libraries: preparing the enviroment.","15afe435":"The description of the dataset features can be found in [this link](https:\/\/archive.ics.uci.edu\/ml\/datasets\/Heart+Disease)\n","f78677e4":"We can set the parameter kind='kde' to get a smoothed version.","ab089135":"Let's create a correlation matrix using `sns.heatmap()`.","47ee5939":"The number of unhealthy people is higher than the number of healthy people.","330e74ea":"Let's transform  `sex` and `exang` features applying `map()`.","11581540":"Here, we don't need to standardize the data in a scale because decisions tree it's not affected by data scale.\n","19aee0ee":"Let's plot a histogram for all continuous variables using the df.hist()","c6d71bc9":"**Firts let's split our dataset in train and test**","b7076269":"Highlights:\n\n- 25% of samples are around 61 years old or older.\n- 50% of samples have a cholesterol level up to 240.\n","02d8bc04":"### Dataset analysis","769c4c18":"Here, we gonna create a train split and a holdout split, because we'll perform a [cross-validation](https:\/\/towardsdatascience.com\/cross-validation-70289113a072) on our train split. ","e0630faf":"Apparently, higher colesterol values are relationed with these three types of pain. (See the max values)","48568105":"# Data visualization","47ddd5ce":"## Multivariate visualization","9c944448":"### Chest Pain type","ce470fc9":"## Age","055f74e6":"Firstly, let's consider the problem context  before testing different algorithms for classification task.\n\nHere, we'll first create a Decision Tree Model, for main two reasons:\n- It's a simple and well know algorithm. \n- We can use flow diagrams to visual representations of decisions trees. Since we are predictin heart desease, we can use it to sharing the knowledge with a medical in order to ensure that our model make sense;","5c366c8a":"Let's visualize if the diagnose is influenced by age","6d7d1bb6":"This plot uses a color scale to represent the density, i.e. the local where the majority of the data points fall. In this case, the points are concentrated around 170, 130 in the axis x and y respectively","d9ac7290":"We can use plotly to plot the boxplots","a392a70b":"Here, we'll use StratifiedKFold, since we want to keep the same proportion of labels in the train and test fold.\nWe'll also use GridSearchCV, that allows us to find the best hyperparameter combination.","0ce523c2":"For now we don't need to operate categorical variables in numerical format. Let's transform our categorical variables (sex and exang) to facilitate reading.\n","d91d9126":"Importing the DecisionTree Classifier","9ae2271d":"Let's perform a multivariate analysis, comparing the number of healthy and unhealthy people by sex.\n","44ecb8a1":"When the number of variables is relatively small we can plot a grid with all variables. The diagonal line shows the distribution of each variable.","e7ce804e":"Let's check the distribuition","5573d482":"Considering that we don't want to avoid [type II errors](https:\/\/towardsdatascience.com\/understanding-confusion-matrix-a9ad42dcfd62) let's check our f1score.\n\n","27e2f97c":"That's good, there's no missing values (all features has 303 samples).","7344e120":"Let's check the proportion of men and women","5daa33f8":"We can do de same using `plt.scatter()`","3a4ec815":"Let's investigate the feature importances from our model, in order to check if we can create a simpler model.","89ae5583":"## ScatterPlot","fb231e32":"As can be seen, our f1-score is 0.75","dfddf491":"First let's evaluate the correlation between the numeric variables in our dataset. This information is important because some machine learning algorithms can not handle correlated input variables, such as linear and logistic regression.","b5360430":"### Univariate visualization","b0c0f69b":"**Verifying the features name**","27135cf1":"Let's configure our plots (size and style).","624b8ac0":"Those patients that was diagnosed with heart desease had higer maxium heart rate.","e606a3ef":"In the case of large datasets, it is more advantageous to work with a smaller number of  features, since the model can improve its accuracy, improve its efficiency and reduce the computational cost.","755dff0b":"\nDensity graph shows the smoothed distribution of points along the numerical axis. The density peaks\nwhere there is the highest concentration of points. In sum, density graphs can be considered smoothed histograms.\n\nRecommended materials: [1](https:\/\/ncss-wpengine.netdna-ssl.com\/wp-content\/themes\/ncss\/pdf\/Procedures\/NCSS\/Density_Plots.pdf); [2](https:\/\/homepage.divms.uiowa.edu\/~luke\/classes\/STAT4580\/histdens.html)","c4a3e871":"## Boxplots - Quantitative\/Categorical Plots","a4c08c48":"The amount of healthy male people is greater than the amount of unhealthy. For women, the number of unhealthy women is higher. Let's create an index.","a00cbe6a":"**Density plots using seaborn**","fa11455b":"As can be seen there is a pacient with high cholesterol. But, there's not a specific division between those that feel pain during exercise practice and those of not feel pain.\nWe can use hue to filter by sex. It's also possible to filter using size = 'label_to_filer'.","5e502665":"Obs.: the error code above appears because we have 9 features (include target) but we create only 8 axes in subplots.\n\nLet's get some insights frm this chart:\n\nChest pain: the heart desease diagnosis is greater among the patients that feel any chest pain.\n\nRestegc - Eletrocardiagraph results: the rate of heart desease diagnoses higher for patients with a ST-T wabe abnormality .\n\nSlope: The ratio of patients diagnosed with heart desease is higher for slope = 2 \n\nCa: The diagonosed ratio decreases fo ca between 1 and 3.\n\nThal: the diagnosed ratio is higher for thal = 2.","ab48cfcf":"<center>\n<img src=\"http:\/\/reillyrangel.com.br\/wp-content\/uploads\/2016\/10\/medicina-saude-tecnologia-computacao-microsoft-cancer-google-apple-ibm-reilly-rangel-s.jpg\" width=50%\/>","36a6a928":"Let's start with the target variable to see the rate of people with and without heart disease","db3b4439":"Let's plot a `catplot` to visualize how the cholesterol and chest pain type are relationed.","c9c3fe3d":"It's no clearif the age of patient influence on diagnosis. Apparently not.","a4747dff":"This database contains 76 attributes, but all published experiments refer to using a subset of 14 of them. In particular, the Cleveland database is the only one that has been used by ML researchers to this date. ([Kaggle DataSet](https:\/\/www.kaggle.com\/ronitf\/heart-disease-uci))\n\nThe \"target\" feature refers to the presence of heart disease in the patient. It is integer value: 0 (no presence); 1 (presence of heart disease).","88e412a6":"## Scatterplot matrix","31a13294":"Let's import [clone](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.base.clone.html) from sklearn.","24d2988f":"**Features**:\n- Age: age in years;\n- Sex: 1 = male; 0 = female;\n- Cp: chest pain type:  0 - Typical angina; 1 - atypical angina; 2 - non-anginal pain; 3 - asymptomatic;\n- trestbps: resting blood pressure (in mm Hg on admission to the hospital)\n- chol: serum cholestoral in mg\/dl\n- fbs: fastin blood sugar: 1 - true; 0 - false)\n- restecg: resting electrocardiographic results: 0 - normal ; 1 - wave abornamility - T wave inversions and\/or ST elevation or depression of > 0.05 mV; 2 - showing probable or definite left ventricular hypertrophy by Estes' criteria\n- thalach: maximum heart rate achieved\n- exang: exercise induced angina: 1 - yes; 0 - no\n- oldpeak: ST depression induced by exercise relative to rest \n- slope: the slope of the peak exercise ST segment: 0 - upsloping; 1 - flat; 2 - downsloping;\n- ca: number of major vessels (0-3) colored by flourosopy\n- <font color='green'>thal: 1 - normal; 2 - fixed defect; 3 - reversable defect **CHECK** <\/font>\n- target: 0 - Healthy; 1 - sick (heart disease)","dfce776b":"We can use a jointplot to get a scatter plot and a histogram of each feature.","0bf7d4b3":"**Let's plot a histogram for age using matplotlib**","d801c98c":"Most patients who experience some type of pain have heart disease","d84235be":"**Let's take a look in the dataset shape**","ee0d202a":"303 samples and 14 features","297b3d1d":"Apparently there are no features with a pretty strong correlation (above |0.7|)","f929b10b":"Apparently, female patients has  higher cholesterol indices than male patients.","4e5544fc":"Author: [Paulo Henrique Zen Messerschmidt](https:\/\/www.linkedin.com\/in\/paulo-henrique-zen-messerschmidt-35581661\/)\n\n","05c427d6":"Interesting, it seems that we have a normal distribution","dda52b6a":"As can be seen, fbs, sex and thal are not useful to predict heart disease.\nLet's create a model without these features to see how the accuracy is affected.","04c3d49b":"We can see that most are healthy and are male.\n\nLet's create one for each of the groups","58c4885f":"### Using Plotly","6cb46bed":"**Let's draw a histogram for the \"Age\" feature**","608f48e5":"## Categorical features","eee924b7":"**Let's see the statistics of our dataset.**","b87438b6":"**Checking the data type of each column**","7be07018":"Let's visualize the distribuition of chol by sex","08cdec00":"## Reduced model","df151878":"**We can divide these features in two groups: quantitative and categorical**\n- Quantitative features: Age, trestbps, chol, thalach, oldpeak\n- Categorical features: sex, cp, fbs, restecg, exang, slope, ca, thal\n\n\nObs.: our target feature is categorical (classification problem)","3743471f":"**Let's check outliers presence using boxplots**","ebc1c063":"## **Resting blood pressure (in mm Hg on admission to the hospital)**","cea56bc3":"### Let's create a density plot","1ed067b3":"\n- Chol: apparently is quite close to a normal distribution. However it is possible to notice a high value (acmia of 500) that can be a possible outlier!\n\n- Oldpeak: It seems to follow a left-skewed distribution (lognormal).\n\n- Thalach: the maximum heart rate achieved seems to follow a right-skewed distribution\n\n- Trestbps: Resting blood pressure appears to follow a normal distribution.","70eda58f":"Let's visualize how decisions tree create the decisions rules","190edab2":"## Prediction model","c91187c7":"<center>\n\n## **<font color='green'>Heart disease UCI - Exploratory Data Analisys (EDA)**<\/font> ","94fcd8ca":"Apparently, the age feature not follow a normal distribution. It's not so clear in this chart. Let's plot a density plot using seaborn.\n\nObs.: bin param can affect the shape of distribution."}}