{"cell_type":{"cec8e15d":"code","67eeddb5":"code","906f6071":"code","5c07f45a":"code","a1a196d7":"code","4f44489e":"code","344b2b9c":"code","c2c6cd98":"code","efe8ec87":"code","90ee938a":"code","f9de0b67":"code","79098764":"code","3132b6ef":"code","bcd2082f":"code","3f45ddaf":"code","1322108a":"markdown","e702db8d":"markdown","a5ffef3c":"markdown","a7b02a1f":"markdown","3031ce2d":"markdown","b79ad799":"markdown","6af49ebe":"markdown","d4272793":"markdown","67dfe203":"markdown"},"source":{"cec8e15d":"import pandas as pd\nfrom sklearn.tree import DecisionTreeClassifier, export_graphviz\nimport graphviz","67eeddb5":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","906f6071":"data = pd.read_csv('\/kaggle\/input\/heart-disease-uci\/heart.csv')\ndata.head()","5c07f45a":"#Get Target data \ny = data['target']\n\n#Load X Variables into a Pandas Dataframe with columns \nX = data.drop(['target'], axis = 1)","a1a196d7":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=101)","4f44489e":"#Export Train DataFarme\nexport_Train = pd.concat([X_train, y_train], axis = 1)\nexport_Train.to_csv('train_df.csv', index = False)","344b2b9c":"from sklearn.model_selection import RandomizedSearchCV","c2c6cd98":"#Using max_depth, criterion will suffice for DT Models, rest all will remain constant \nparameters = {'max_depth' : (3,5,7,9,10,15,20,25)\n              , 'criterion' : ('gini', 'entropy')\n              , 'max_features' : ('auto', 'sqrt', 'log2')\n              , 'min_samples_split' : (2,4,6)\n             }","efe8ec87":"DT_grid  = RandomizedSearchCV(DecisionTreeClassifier(), param_distributions = parameters, cv = 5, verbose = True)","90ee938a":"DT_grid.fit(X_train,y_train)","f9de0b67":"DT_grid.best_estimator_","79098764":"#Re Build Model with Best Estimators\nDT_Model = DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',\n                       max_depth=3, max_features='log2', max_leaf_nodes=None,\n                       min_impurity_decrease=0.0, min_impurity_split=None,\n                       min_samples_leaf=1, min_samples_split=4,\n                       min_weight_fraction_leaf=0.0, presort='deprecated',\n                       random_state=None, splitter='best')\n\nDT_Model.fit(X_train,y_train)","3132b6ef":"print (f'Train Accuracy - : {DT_Model.score(X_train,y_train):.3f}')\nprint (f'Test Accuracy - : {DT_Model.score(X_test,y_test):.3f}')","bcd2082f":"dot_data = export_graphviz(DT_Model,   \n                      out_file=None, \n                      feature_names=X.columns,       #Provide X Variables Column Names \n                      class_names=['Yes','No'],      # Provide Target Variable Column Name\n                      filled=True, rounded=True,     # Controls the look of the nodes and colours it\n                      special_characters=True)  \ngraph = graphviz.Source(dot_data)  \ngraph ","3f45ddaf":"dot_data = export_graphviz(DT_Model, out_file=None, \n                      feature_names=X.columns,  \n                      class_names=['Yes','No'],\n                      filled=True, rounded=True,  \n                      special_characters=True)  \ngraph = graphviz.Source(dot_data) \ngraph.render(\"Heart_Diesease\") ","1322108a":"# Divide Data into Train and test","e702db8d":"# Plot Tree\nexport_graphviz documentation: https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.tree.export_graphviz.html","a5ffef3c":"# END","a7b02a1f":"# Divide data into Dependent and Independent Variables","3031ce2d":"## Check Accuracy (Not Overfitting anymore)","b79ad799":"# Load Libraries","6af49ebe":"# Build Decision Tree Model with Hyperparameter Tuning","d4272793":"# Export Decision Tree PDF","67dfe203":"# Load Dataset "}}