{"cell_type":{"89491c18":"code","8a8048e3":"code","499d8c3f":"code","039bef64":"code","d8611162":"code","23065521":"code","9bd4d038":"code","8ae46226":"code","3b5ddb45":"code","dafa61f7":"code","1f002f87":"code","be4beb0a":"code","391f8cd5":"code","0f749662":"code","055280c0":"markdown","5ff86be2":"markdown","c2109882":"markdown","e30a9cae":"markdown","fd9cb55a":"markdown","ce189b47":"markdown","8e664959":"markdown","0b9f318c":"markdown","a7363f8d":"markdown","9cdd5b1c":"markdown","04ae6914":"markdown","49d6d7d5":"markdown","9fdd91fb":"markdown","575aafc7":"markdown","f75b2460":"markdown"},"source":{"89491c18":"import os\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sn","8a8048e3":"df_train = pd.read_csv(\"..\/input\/seti-breakthrough-listen\/train_labels.csv\")\ndf_train","499d8c3f":"plt.figure(figsize=(16, 5))\nsn.countplot(y=\"target\", data=df_train)\nplt.title(\"Target Distribution\");","039bef64":"def get_train_filename_by_id(_id: str) -> str:\n    return f\"..\/input\/seti-breakthrough-listen\/train\/{_id[0]}\/{_id}.npy\"\n\n\nget_train_filename_by_id(df_train.iloc[0][\"id\"])","d8611162":"tmp_filename = get_train_filename_by_id(df_train.iloc[0][\"id\"])\narr = np.load(tmp_filename)\narr.shape","23065521":"def show_cadence(filename: str, label: int) -> None:\n    plt.figure(figsize=(16, 10))\n    arr = np.load(filename)\n    for i in range(6):\n        plt.subplot(6, 1, i + 1)\n        if i == 0:\n            plt.title(f\"ID: {os.path.basename(filename)} TARGET: {label}\", fontsize=18)\n        plt.imshow(arr[i].astype(float), interpolation='nearest', aspect='auto')\n        plt.text(5, 100, [\"ON\", \"OFF\"][i % 2], bbox={'facecolor': 'white'})\n        plt.xticks([])\n    plt.show()","9bd4d038":"df_tmp = df_train[df_train[\"target\"] == 0].sample(1)\nfor ind, row in df_tmp.iterrows():\n    show_cadence(get_train_filename_by_id(row[\"id\"]), row[\"target\"])\n\ndf_tmp = df_train[df_train[\"target\"] == 1].sample(5)\nfor ind, row in df_tmp.iterrows():\n    show_cadence(get_train_filename_by_id(row[\"id\"]), row[\"target\"])","8ae46226":"def show_channels(filename: str, label: int) -> None:\n    plt.figure(figsize=(16, 10))\n    plt.suptitle(f\"ID: {os.path.basename(filename)} TARGET: {label}\", fontsize=18)\n    arr = np.load(filename)\n    for i in range(6):\n        plt.subplot(2, 3, i + 1)\n        plt.imshow(arr[i].astype(float))\n    plt.show()","3b5ddb45":"df_tmp = df_train[df_train[\"target\"] == 0].sample(1)\nfor ind, row in df_tmp.iterrows():\n    show_channels(get_train_filename_by_id(row[\"id\"]), row[\"target\"])\n\ndf_tmp = df_train[df_train[\"target\"] == 1].sample(1)\nfor ind, row in df_tmp.iterrows():\n    show_channels(get_train_filename_by_id(row[\"id\"]), row[\"target\"])","dafa61f7":"from sklearn.metrics import roc_auc_score, roc_curve, auc","1f002f87":"list_y_true = [\n    [1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.],\n    [1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.],\n    [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0.], #  IMBALANCE\n]\nlist_y_pred = [\n    [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5],\n    [0.9, 0.9, 0.9, 0.9, 0.1, 0.9, 0.9, 0.1, 0.9, 0.1, 0.1, 0.5],\n    [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], #  IMBALANCE\n]\n\nfor y_true, y_pred in zip(list_y_true, list_y_pred):\n    fpr, tpr, _ = roc_curve(y_true, y_pred)\n    roc_auc = auc(fpr, tpr)\n\n    plt.figure(figsize=(5, 5))\n    plt.plot(fpr, tpr, color='darkorange', lw=2, label='ROC curve (area = %0.2f)' % roc_auc)\n    plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n    plt.xlim([-0.01, 1.0])\n    plt.ylim([0.0, 1.05])\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title('Receiver operating characteristic example')\n    plt.legend(loc=\"lower right\")\n    plt.show()","be4beb0a":"df_submission = pd.read_csv(\"..\/input\/seti-breakthrough-listen\/sample_submission.csv\")\ndf_submission","391f8cd5":"df_submission[\"target\"] = 0.51\ndf_submission.to_csv(\"submission.csv\", index=False)","0f749662":"df_prepared = pd.read_csv(\"..\/input\/signal-search-submissions\/submission_2021-05-13_20-00-00.csv\", index_col=0)\ndf_prepared.to_csv(\"submission_2021-05-13_20-00-00.csv\")\ndf_prepared = pd.read_csv(\"..\/input\/signal-search-submissions\/submission_2021-05-13_21-00-00.csv\", index_col=0)\ndf_prepared.to_csv(\"submission_2021-05-13_21-00-00.csv\")","055280c0":"<a id=\"10\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>Competition Metric<center><h2>","5ff86be2":"**train\/** - a training set of cadence snippet files stored in numpy float16 format (v1.20.1), one file per cadence snippet id, with corresponding labels found in the train_labels.csv file. Each file has dimension (6, 273, 256), with the 1st dimension representing the 6 positions of the cadence, and the 2nd and 3rd dimensions representing the 2D spectrogram.  \n**test\/** - the test set cadence snippet files; you must predict whether or not the cadence contains a \"needle\", which is the target for this competition  \n**sample_submission.csv** - a sample submission file in the correct format  \n**train_labels** - targets corresponding (by id) to the cadence snippet files found in the train\/ folder  ","c2109882":"<a id=\"top\"><\/a>\n\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='color:white; background:black; border:0' role=\"tab\" aria-controls=\"home\"><center>Quick Navigation<\/center><\/h3>\n\n* [Overview](#1)\n* [Visualizations](#2)\n* [Targets](#3)\n    \n    \n\n* [Competition Metric](#10)\n* [Sample Submission](#20)\n* [Prepared Submission](#30)","e30a9cae":"<a id=\"2\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>Visualizations<center><h2>","fd9cb55a":"Submissions are evaluated on [area under the ROC curve](https:\/\/en.wikipedia.org\/wiki\/Receiver_operating_characteristic) between the predicted probability and the observed target.","ce189b47":"<a id=\"3\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>Targets<center><h2>","8e664959":"#### Easy to find\n![](https:\/\/i.imgur.com\/5ohQpvE.png)\n\n#### Medium\n![](https:\/\/i.imgur.com\/Pz6YdoV.png)\n![](https:\/\/i.imgur.com\/81jL2N7.png)\n\n#### Hard\n![](https:\/\/i.imgur.com\/Sgu0k7n.png)","0b9f318c":"# SETI Breakthrough Listen - E.T. Signal Search - Exploratory Data Analysis\n\nQuick Exploratory Data Analysis for [SETI Breakthrough Listen - E.T. Signal Search](https:\/\/www.kaggle.com\/c\/seti-breakthrough-listen\/) challenge    \n\n**\u201cAre we alone in the Universe?\u201d**\n\n\nIn this competition, use your data science skills to help identify anomalous signals in scans of Breakthrough Listen targets. Because there are no confirmed examples of alien signals to use to train machine learning algorithms, the team included some simulated signals (that they call \u201cneedles\u201d) in the haystack of data from the telescope. They have identified some of the hidden needles so that you can train your model to find more. The data consist of two-dimensional arrays, so there may be approaches from computer vision that are promising, as well as digital signal processing, anomaly detection, and more. The algorithm that\u2019s successful at identifying the most needles will win a cash prize, but also has the potential to help answer one of the biggest questions in science.","a7363f8d":"<a id=\"1\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>Overview<center><h2>","9cdd5b1c":"## WORK IN PROGRESS...","04ae6914":"<a id=\"20\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>Sample Submission<center><h2>","49d6d7d5":"<a id=\"30\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>Prepared Submission<center><h2>","9fdd91fb":"I experiments with these two excellent kernels, try to retrain and ensemble them:   \n[SETI \/ NFNet_l0 starter [inference]](https:\/\/www.kaggle.com\/yasufuminakama\/seti-nfnet-l0-starter-inference)   \n[SETI-BL: TF Starter TPU \ud83d\ude80](https:\/\/www.kaggle.com\/awsaf49\/seti-bl-tf-starter-tpu)","575aafc7":"![](https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/23652\/logos\/header.png)","f75b2460":"In this competition you are tasked with looking for technosignature signals in cadence snippets taken from the Green Bank Telescope (GBT)"}}