{"cell_type":{"2e2d040a":"code","48e9d7ec":"code","82057d29":"code","ad466393":"code","ac09e898":"code","cd98c9a2":"code","23eea276":"code","2761d225":"code","fe7096a7":"code","7735b1bc":"code","087d7acb":"code","820b552e":"code","eeaafb00":"code","c0e71b2f":"code","5b744088":"code","c6600ce8":"code","c6102ef4":"code","41dc16fd":"code","c8dc0ab4":"code","7778e52a":"code","3928c914":"code","5a87565e":"code","30c5f5cc":"code","c9619c19":"code","97c5f4cd":"code","d274112c":"code","3088e032":"code","e25b0b9f":"code","e603e1dc":"code","08136451":"code","0b4a626e":"code","262ecd94":"code","853acde0":"code","0639e68c":"code","309c33c7":"code","499b7e51":"code","fba18cf0":"code","606b7ca4":"code","c6995d82":"code","bfc2729c":"code","f4cb2672":"markdown","9bf5c218":"markdown","0036a8d7":"markdown","a688d8f9":"markdown","dace47b8":"markdown","6e5ef0ea":"markdown","6af3ed78":"markdown","440f73b3":"markdown","8d236f6b":"markdown","b33dec87":"markdown","6c9f6b1d":"markdown","676380e6":"markdown","12db44d9":"markdown","8a065e4e":"markdown","d002afda":"markdown","48d42546":"markdown","68433e74":"markdown","2efc81e6":"markdown","52b767b2":"markdown","ce30a73d":"markdown","97f8433c":"markdown"},"source":{"2e2d040a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom IPython.display import Image, display\n%matplotlib inline","48e9d7ec":"#load the train dataset\ntrain = pd.read_csv('..\/input\/titanicdataset-traincsv\/train.csv')","82057d29":"#inspect the first few rows of the train dataset\ndisplay(train.head())","ad466393":"# set the index to passengerId\ntrain = train.set_index('PassengerId')","ac09e898":"#by calling the shape attribute of the train dataset we can observe that there are 891 observations and 11 columns\n#in the data set\ntrain.shape","cd98c9a2":"# Check out the data summary\n\ntrain.head()","23eea276":"# identify datatypes of the 11 columns, add the stats to the datadict\ndatadict = pd.DataFrame(train.dtypes)\ndatadict","2761d225":"# identify missing values of the 11 columns,add the stats to the datadict\ndatadict['MissingVal'] = train.isnull().sum()\ndatadict","fe7096a7":"# Identify number of unique values, For object nunique will the number of levels\n# Add the stats the data dict\ndatadict['NUnique']=train.nunique()\ndatadict","7735b1bc":"# Identify the count for each variable, add the stats to datadict\ndatadict['Count']=train.count()\ndatadict","087d7acb":"# rename the 0 column\ndatadict = datadict.rename(columns={0:'DataType'})\ndatadict","820b552e":"# get discripte statistcs on \"object\" datatypes\ntrain.describe(include=['object'])","eeaafb00":"# get discriptive statistcs on \"number\" datatypes\ntrain.describe(include=['number'])","c0e71b2f":"train.Survived.value_counts(normalize=True)","5b744088":"fig, axes = plt.subplots(2, 4, figsize=(16, 10))\nsns.countplot('Survived',data=train,ax=axes[0,0])\nsns.countplot('Pclass',data=train,ax=axes[0,1])\nsns.countplot('Sex',data=train,ax=axes[0,2])\nsns.countplot('SibSp',data=train,ax=axes[0,3])\nsns.countplot('Parch',data=train,ax=axes[1,0])\nsns.countplot('Embarked',data=train,ax=axes[1,1])\nsns.distplot(train['Fare'], kde=True,ax=axes[1,2])\nsns.distplot(train['Age'].dropna(),kde=True,ax=axes[1,3])","c6600ce8":"figbi, axesbi = plt.subplots(2, 4, figsize=(16, 10))\ntrain.groupby('Pclass')['Survived'].mean().plot(kind='barh',ax=axesbi[0,0],xlim=[0,1])\ntrain.groupby('SibSp')['Survived'].mean().plot(kind='barh',ax=axesbi[0,1],xlim=[0,1])\ntrain.groupby('Parch')['Survived'].mean().plot(kind='barh',ax=axesbi[0,2],xlim=[0,1])\ntrain.groupby('Sex')['Survived'].mean().plot(kind='barh',ax=axesbi[0,3],xlim=[0,1])\ntrain.groupby('Embarked')['Survived'].mean().plot(kind='barh',ax=axesbi[1,0],xlim=[0,1])\nsns.boxplot(x=\"Survived\", y=\"Age\", data=train,ax=axesbi[1,1])\nsns.boxplot(x=\"Survived\", y=\"Fare\", data=train,ax=axesbi[1,2])","c6102ef4":"sns.jointplot(x=\"Age\", y=\"Fare\", data=train);","41dc16fd":"import seaborn as sns\n\nf, ax = plt.subplots(figsize=(10, 8))\ncorr = train.corr()\nsns.heatmap(corr,\n            mask=np.zeros_like(corr, dtype=np.bool), \n            cmap=sns.diverging_palette(220, 10, as_cmap=True),\n            square=True, ax=ax)","c8dc0ab4":"train['Name_len']=train.Name.str.len()","7778e52a":"train['Ticket_First']=train.Ticket.str[0]","3928c914":"train['FamilyCount']=train.SibSp+train.Parch","5a87565e":"train['Cabin_First']=train.Cabin.str[0]","30c5f5cc":"# Regular expression to get the title of the Name\ntrain['title'] = train.Name.str.extract('\\, ([A-Z][^ ]*\\.)',expand=False)","c9619c19":"train.title.value_counts().reset_index()","97c5f4cd":"# we see that there are 15 Zero values and its reasonbale \n# to flag them as missing values since every ticket \n# should have a value greater than 0\nprint((train.Fare == 0).sum())","d274112c":"# mark zero values as missing or NaN\ntrain.Fare = train.Fare.replace(0, np.NaN)","3088e032":"# validate to see if there are no more zero values\nprint((train.Fare == 0).sum())","e25b0b9f":"# keep the index\ntrain[train.Fare.isnull()].index","e603e1dc":"train.Fare.mean()","08136451":"# impute the missing Fare values with the mean Fare value\ntrain.Fare.fillna(train.Fare.mean(),inplace=True)","0b4a626e":"# validate if any null values are present after the imputation\ntrain[train.Fare.isnull()]","262ecd94":"# we see that there are 0 Zero values\nprint((train.Age == 0).sum())","853acde0":"# impute the missing Age values with the mean Fare value\ntrain.Age.fillna(train.Age.mean(),inplace=True)","0639e68c":"# validate if any null values are present after the imputation\ntrain[train.Age.isnull()]","309c33c7":"# We see that a majority 77% of the Cabin variable has missing values.\n# Hence will drop the column from training a machine learnign algorithem\ntrain.Cabin.isnull().mean()","499b7e51":"train.info()","fba18cf0":"train.columns","606b7ca4":"trainM = train[['Survived', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp', 'Parch', 'Ticket',\n       'Fare', 'Embarked', 'Name_len', 'Ticket_First', 'FamilyCount',\n       'title']]","c6995d82":"# drop rows of missing values\ntrainM = trainML.dropna()","bfc2729c":"# check the datafram has any missing values\ntrainM.isnull().sum()","f4cb2672":"#### *New Features*","9bf5c218":"NAME : YASHASWINI S\nUSN : ENG17CS0255\n","0036a8d7":"#### Univariate Analysis","a688d8f9":"- There is a positve coorelation between Fare and Survived and a negative coorelation between Pclass and Surived\n\n- There is a negative coorelation between Fare and Pclass, Age and Plcass","dace47b8":"#### <span style=\"color:red\">Having missing values in a dataset can cause errors with some machine learning algorithms and either the rows that has missing values should be removed or imputed <\/span>\n\nImputing refers to using a model to replace missing values.\n\nThere are many options we could consider when replacing a missing value, for example:\n\n>- constant value that has meaning within the domain, such as 0, distinct from all other values.\n>- value from another randomly selected record.\n>- mean, median or mode value for the column.\n>- value estimated by another predictive model.","6e5ef0ea":"** c. Imput Missing or Zero values to the <span style=\"color:blue\"> Cabin variable <\/span> **","6af3ed78":"## 2. Load the dataset","440f73b3":"#### Bivariate Exploratory Data Analysis","8d236f6b":"** a. Input Missing or Zero values to the <span style=\"color:blue\"> Fare variable <\/span> **","b33dec87":"only 38% of the passengers were survived, where as a majority 61% the passenger did not survive the disaster","6c9f6b1d":"Titanic Dataset\n","676380e6":"\n\n** b. Input Missing or Zero values to the age variable\n****","12db44d9":"#### Multivariate Exploratory Data Analysis\n#### Construct a Coorelation matrix of the int64 and float64 feature types","8a065e4e":"## 3.Data Examination","d002afda":"## 3.   Run discriptive statistics of object and numerical datatypes,  and finally transform datatypes accoringly","48d42546":"## 1. Import the python libraries for the analysis","68433e74":"## 7. Preprocessing and Prepare data","2efc81e6":"## 4. Carryout univariate and multivariate analysis ","52b767b2":" - We can clearly see that male survial rates is around 20% where as female survial rate is about 75% which suggests that gender has a strong relationship with the survival rates.\n \n - There is also a clear relationship between Pclass and the survival by referring to first plot below. Passengers on Pclass1 had a better survial rate of approx 60% whereas passengers on pclass3 had the worst survial rate of approx 22%\n \n - There is also a marginal relationship between the fare and survial rate. \n ","ce30a73d":"#### Joint Plots(continous vs continous)","97f8433c":"## 6. Feature Engineering Data- Extract title from name, Extract new features from the other features"}}