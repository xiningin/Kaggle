{"cell_type":{"75910ffe":"code","e575d631":"code","ff7ae71b":"code","6e440f0a":"code","768545a2":"code","396be5db":"code","1fd5c648":"code","c9e9e57f":"code","d2025f24":"code","3071e3d3":"code","00e072eb":"code","6cf3713f":"code","b61a2a6c":"code","86eb68eb":"code","c30d9221":"code","d9c02279":"code","900a86b1":"code","3d4f6fc1":"code","387c2d54":"code","b528f368":"code","61a429f7":"code","47394636":"code","9a4fa0d3":"code","cedd6376":"code","b40fa024":"code","a02534f5":"code","8f189497":"code","6db61bd3":"code","6d5a01a3":"code","59028b26":"code","25374849":"markdown","7f1e36d5":"markdown","69acf696":"markdown","7ec1a135":"markdown","c92ba287":"markdown"},"source":{"75910ffe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","e575d631":"data=pd.read_csv(\"..\/input\/BlackFriday.csv\")","ff7ae71b":"data.head()","6e440f0a":"data.shape","768545a2":"print(data.isnull().sum())","396be5db":"data.fillna(0.0,inplace=True)","1fd5c648":"data.head()","c9e9e57f":"import seaborn as sns\nsns.countplot(data['Marital_Status'])\n","d2025f24":"sns.countplot(data['Gender'])","3071e3d3":"data['Age'].value_counts().plot.bar()","00e072eb":"sns.countplot(data['Product_Category_1'],hue=data['Gender'])","6cf3713f":"sns.countplot(data['Product_Category_1'],hue=data['Marital_Status'])","b61a2a6c":"sns.countplot(data['Product_Category_2'],hue=data['Gender'])","86eb68eb":"sns.countplot(data['Product_Category_3'],hue=data['Gender'])","c30d9221":"data['Occupation'].value_counts().plot.bar()","d9c02279":"sns.countplot(data['Occupation'],hue=data['Gender'])","900a86b1":"sns.countplot(data['City_Category'])","3d4f6fc1":"one_hot = pd.get_dummies(data['City_Category'])\n# Drop column B as it is now encoded\ndata = data.drop('City_Category',axis = 1)\n# Join the encoded df\ndf = data.join(one_hot)","387c2d54":"df.head()","b528f368":"df['Gender'] = np.where(df['Gender']=='M',1,0)","61a429f7":"from sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import learning_curve\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error","47394636":"df.drop(['Product_ID','User_ID'],axis=1,inplace=True)","9a4fa0d3":"df_Age = pd.get_dummies(df.Age)\n\ndf_SIC = pd.get_dummies(df.Stay_In_Current_City_Years)\ndf_encoded = pd.concat([df,df_Age,df_SIC],axis=1)\ndf_encoded.drop(['Age','Stay_In_Current_City_Years'],axis=1,inplace=True)","cedd6376":"df_frac = df_encoded.sample(frac=0.02,random_state=100)\nX = df_frac.drop(['Purchase'], axis=1)\ny = df_frac['Purchase']\nscaler = StandardScaler().fit(X)\nX_train,X_test,y_train,y_test = train_test_split(X,y,random_state=100)\n","b40fa024":"param_grid = {'n_estimators':[10,30,100,150],'max_depth':[5,7,9]}\ngrid_rf = GridSearchCV(RandomForestRegressor(),param_grid,cv=3,scoring='neg_mean_squared_error').fit(X_train,y_train)","a02534f5":"print('Best parameter: {}'.format(grid_rf.best_params_))\nprint('Best score: {:.2f}'.format((-1*grid_rf.best_score_)**0.5))","8f189497":"rf = RandomForestRegressor(max_depth=7, n_estimators=30).fit(X_train,y_train)\nf_im = rf.feature_importances_.round(3)\nser_rank = pd.Series(f_im,index=X.columns).sort_values(ascending=False)\n\nplt.figure()\nsns.barplot(y=ser_rank.index,x=ser_rank.values,palette='deep')\nplt.xlabel('relative importance')","6db61bd3":"X = df_encoded.drop(['Purchase'], axis=1)\ny = df_encoded['Purchase']\nX = StandardScaler().fit_transform(X)\nX_train,X_test,y_train,y_test = train_test_split(X,y,random_state=100)\n\n\n\nrf = RandomForestRegressor(max_depth=7, n_estimators=150).fit(X_train,y_train)\ny_predict = rf.predict(X_test)\nprint('Test set RMSE: {:.3f}'.format(mean_squared_error(y_test,y_predict)**0.5))","6d5a01a3":"y_predict_train = rf.predict(X_train)\nprint('Train set RMSE: {:.3f}'.format(mean_squared_error(y_train,y_predict_train)**0.5))","59028b26":"y_predict_train = rf.predict(X_train)\nprint('Train set RMSE: {:.3f}'.format(mean_squared_error(y_train,y_predict_train)**0.5))","25374849":"The above plot depicts that people between the age group of 26-35  generally  goes to black friday sale more often.","7f1e36d5":"The above plot depicts that unmarried people often goes to Black Friday Sales as compared to married people.","69acf696":"The above plot depicts Male are more interested to go to Black Friday Sales as compared to Female.","7ec1a135":"It seems that product_category_2 have major proportion in 2,8,15,16,17 to be sold in black friday sales.","c92ba287":"It seems that product_category_1 have major proportion in 1,5,8,11 to be sold in black friday sales."}}