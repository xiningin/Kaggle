{"cell_type":{"b187ae27":"code","99dfeb9d":"code","17e9ae44":"code","6a15f415":"code","cb28a94b":"code","30411e5e":"code","194daad8":"code","1e4daec5":"code","2e7853c5":"code","3ea1dd8f":"code","9a62135a":"code","3cbe38e8":"code","db726d46":"code","a925ae6f":"code","2d459794":"code","832022d8":"code","07222e15":"code","43cb2f48":"code","4d721a5b":"code","009d3e50":"code","f69e6dcc":"code","a3a4bbe6":"code","6dff56ac":"code","f1ea2ba8":"code","a858a790":"code","068911d2":"code","dc06bb17":"code","a7144abe":"code","20ff6d01":"markdown","ebf367ee":"markdown","f1c8ec46":"markdown","1a40ca9b":"markdown","09da8b93":"markdown","0be3c8b6":"markdown","34126eb2":"markdown","c43941e2":"markdown","dbaffe71":"markdown","e4f65f4c":"markdown","754d41cf":"markdown","50a21b1f":"markdown","ad7c06d3":"markdown","0d14c305":"markdown","aeb43846":"markdown","72ea6e97":"markdown","886aa6f0":"markdown"},"source":{"b187ae27":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import confusion_matrix, r2_score\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.linear_model import LogisticRegression, LinearRegression","99dfeb9d":"df = pd.read_csv(\"\/kaggle\/input\/walmart-dataretail-analysis\/Walmart_Store_sales.csv\")\ndf.head()","17e9ae44":"df.info()","6a15f415":"df.describe(include = 'all')","cb28a94b":"df.isnull().sum()","30411e5e":"#Converting date column to datetime type\ndf['Date'] = pd.to_datetime(df['Date'])\ndf['year'] = pd.DatetimeIndex(df['Date']).year\ndf['month'] = pd.DatetimeIndex(df['Date']).month","194daad8":"df.head()","1e4daec5":"df.groupby('Store')['Weekly_Sales'].max().sort_values(ascending=False).head()","2e7853c5":"std_devs = []\ntotal_stores = df['Store'].nunique()\nfor store in range(1,int(total_stores)+1):\n    values = df[df['Store']==store]['Weekly_Sales'].values\n    sd = np.std(values)\n    std_devs.append(sd)\n    \nmax_std_dev = max(std_devs)\nprint(\"Store with maximum standard deviation: Store\",std_devs.index(max_std_dev)+1)","3ea1dd8f":"qtr_profits =[]\nfor store in range(1,int(total_stores)+1):\n    values = df[(df['Store']==store) & (df['Date']> '2012-06-01') & (df['Date']<'2012-09-01')]['Weekly_Sales'].values\n    qtr_profits.append(np.mean(values))\n    \nprint(\"Store with maximum profit in Q3\u20192012: Store\",qtr_profits.index(max(qtr_profits))+1)","9a62135a":"plt.figure(figsize=(10,5))\nsns.barplot(x=[store for store in range(1,int(total_stores)+1)],y=qtr_profits)\nplt.show()","3cbe38e8":"non_holiday_sales = df[df['Holiday_Flag']==0]['Weekly_Sales'].mean()\ndf_v1 = pd.DataFrame(df[df['Holiday_Flag']==1].groupby('Date')['Weekly_Sales'].mean())\nprint(df_v1[df_v1['Weekly_Sales'] > non_holiday_sales])","db726d46":"df.head()","a925ae6f":"df.groupby(['year'])['Weekly_Sales'].sum().sort_values(ascending=False).plot.bar(x=\"Year\", y=\"Weekly Sales\", title=\"Year vs Weekly Sales\")","2d459794":"df_v1 = df[(df['Holiday_Flag'] == 1)&(df['year']==2011) ]\ndf_v1.groupby('Store')['Weekly_Sales'].sum().sort_values(ascending = False).head(10).plot.bar(color='violet', title = 'Store Vs Sales for 2011')","832022d8":"corr = df.corr()\n\nplt.figure(figsize=(12, 10))\nsns.heatmap(corr, annot=True, vmin=-2.0)\nplt.show()","07222e15":"df['Day']=df['Date'].dt.day\ndf = df.drop('Date',axis=1)","43cb2f48":"df_v2 = pd.get_dummies(df, columns = ['Holiday_Flag','Store'])\ny = df_v2['Weekly_Sales']\nX= df_v2.drop('Weekly_Sales',axis=1)","4d721a5b":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2)","009d3e50":"ln_model = LinearRegression()\nln_model.fit(X_train,y_train)\ny_pred = ln_model.predict(X_test)\nprint(\"r2 score:\",r2_score(y_test,y_pred))","f69e6dcc":"#Splitting independent and dependent variables\ny = df['Holiday_Flag']\nX= df.drop('Holiday_Flag',axis=1)","a3a4bbe6":"scaler = MinMaxScaler()\nX = scaler.fit_transform(X)","6dff56ac":"X_train, X_test, y_train, y_test = train_test_split(X,y,train_size=0.7)","f1ea2ba8":"penalty = [\"l1\",\"l2\"]\nc = np.logspace(0,8,10)\nhyperparameters = dict(C=c, penalty=penalty, solver =['liblinear'])","a858a790":"model = LogisticRegression()\nclf = GridSearchCV(model,hyperparameters, cv = 10 , verbose = 0)\nbest_model = clf.fit(X_train,y_train)\nprint(\"Best hyperparameters : \",best_model.best_params_)","068911d2":"y_pred = best_model.predict(X_test)\nprint(y_pred)","dc06bb17":"print(best_model.score(X_test,y_test))","a7144abe":"confusion_matrix = confusion_matrix(y_pred,y_test)\nprint(confusion_matrix)","20ff6d01":"* **Predicting whether the given sales record belongs to holiday or not**","ebf367ee":"* Which store\/s has good quarterly growth rate in Q3\u20192012?","f1c8ec46":"Sales are higher at 2011 when compared to 2010 and 2012","1a40ca9b":"* Which store has maximum sales?","09da8b93":"* Which year has maximum weekly sales?","0be3c8b6":"# **Analysis!**","34126eb2":"**Observation:**\n1. There are no missing values in the dataset","c43941e2":"**Feature Engineering:**\n1. Creating two new columns year and month from Date column","dbaffe71":"**Observations:**\n1. Date column is not in date type\n2. All the columns are of numerical type","e4f65f4c":"**Correlation plot**","754d41cf":"Store 14 has maximum standard deviation","50a21b1f":"* **Predicting weekly sales for all the stores**","ad7c06d3":"* Which store has highest sales in holiday?","0d14c305":"* Which Store has maximum variations in weekly sales?","aeb43846":"Store 14 has maximum weekly sales","72ea6e97":"Store 4 has the highest weekly sales in the year 2011","886aa6f0":"* Find out holidays which have higher sales than the mean sales in non-holiday season for all stores together"}}