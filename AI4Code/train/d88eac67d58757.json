{"cell_type":{"3d79d532":"code","bb94b0e7":"code","456468c9":"code","27582d16":"code","10fd223a":"code","97c0e5bf":"code","b65d3286":"code","54ca2053":"code","937f577f":"code","e3d33f73":"code","5d4826b5":"code","5f6471ff":"code","2824dda9":"code","3b3a284f":"code","4c40e8a4":"code","36ec0a2c":"code","d122058d":"code","5b73b6e7":"code","7f4a3520":"code","aa681229":"code","ea836e28":"code","760cf9a5":"code","29861f70":"code","7fd136a0":"code","3d517ce1":"code","e1d9f9a2":"code","a689530c":"code","de4426fb":"code","30cc9f04":"code","a4e0018c":"code","c7e56d32":"code","196ba3ac":"code","2c579142":"code","72b13280":"markdown","5da9eb4e":"markdown","5ea37cce":"markdown","ded1f3bb":"markdown","6360e269":"markdown","41e8dbab":"markdown","528fc2f6":"markdown","d7dc20e7":"markdown","fcb385c4":"markdown","83d3259f":"markdown","dfa5dff5":"markdown","cbbea7cc":"markdown","fa823936":"markdown","2f30f7d8":"markdown","dc7f6fee":"markdown","5488fa4c":"markdown","17bcd39d":"markdown","982c2219":"markdown","79b697ec":"markdown","ef8caf89":"markdown","8bb7e362":"markdown","7e271c7c":"markdown"},"source":{"3d79d532":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom warnings import filterwarnings\nfilterwarnings('ignore')\n%matplotlib inline\nsns.set(style = 'whitegrid',color_codes=True)\nimport scipy.stats as s\nfrom statsmodels.stats import weightstats as stests\nimport statsmodels.api as sm\nfrom statsmodels.formula.api import ols\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bb94b0e7":"df = pd.read_csv('..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')","456468c9":"df.head()","27582d16":"df.isnull().sum()","10fd223a":"df.describe()","97c0e5bf":"df.info()","b65d3286":"df.Name.value_counts()","54ca2053":"df1 = df.sort_values(by = ['Reviews','User Rating'], ascending = [False,False]).reset_index()\ndf1","937f577f":"df_fic = df[df.Genre == 'Fiction']\ndf_nfic = df[df.Genre == 'Non Fiction']","e3d33f73":"df_fic.groupby('Name').sum()['Reviews'].sort_values(ascending = False)[0:3].plot(kind = 'bar',figsize=[12,5]);\nplt.xticks(rotation = 0);","5d4826b5":"df_nfic.groupby('Name').sum()['Reviews'].sort_values(ascending = False)[0:3].plot(kind = 'bar',figsize=[25,7]);\nplt.xticks(rotation = 0);","5f6471ff":"pd.crosstab(df.Year,df.Genre).plot(figsize=[20,5]);","2824dda9":"pd.crosstab(df.Genre, df.Year, values = df.Reviews, aggfunc= 'sum').plot(kind = 'bar', stacked =True, figsize = [15,7]);","3b3a284f":"plt.figure(figsize=[20,5])\nsns.countplot(x=df.Year, hue = df.Genre);","4c40e8a4":"plt.figure(figsize=[15,5])\nsns.distplot(df['User Rating'] ,kde = True);","36ec0a2c":"plt.figure(figsize=[10,5])\nsns.distplot(df['Reviews'] ,kde = True,color = 'green');\nplt.axvline(df.Reviews.median(),color='red')","d122058d":"plt.figure(figsize=[15,5])\nsns.scatterplot(x = df.Reviews, y = df['User Rating'],hue ='Genre', data=df,palette='RdBu');","5b73b6e7":"fig, axes = plt.subplots(ncols=2)\nfig.suptitle('Rating based on Genre')\naxes[0].set_title(\"Fiction Rating\")\naxes[1].set_title(\"Non Fiction Rating\")\nsns.boxplot(ax=axes[0],y=df_fic['User Rating'], data = df_fic,color='red')\nsns.boxplot(ax=axes[1],y=df_nfic['User Rating'], data = df_nfic)\nplt.show()","7f4a3520":"corr_mat = df.corr()\nsns.heatmap(corr_mat,cmap = 'cubehelix_r', annot = True)","aa681229":"reviews = df[['Reviews','Genre']].groupby([df.Genre])\nrev_sum = reviews.sum()\nrev_sum","ea836e28":"rated = []\nfor i in df['User Rating']:\n    if i >= 4.5:\n        rated.append('High_Rating')\n    elif i <4.5 and i >= 3.5:\n        rated.append('Moderate Rating')\n    else:\n        rated.append('Low Rating')\ndf['Rating_category'] = rated","760cf9a5":"df.head()","29861f70":"plt.figure(figsize = [10,5])\nsns.countplot(x=df.Rating_category, palette = 'icefire', hue = 'Genre', data =df);","7fd136a0":"fic_rev = df_fic['Reviews']\nnfic_rev = df_nfic['Reviews']","3d517ce1":"s.shapiro(df.Reviews)","e1d9f9a2":"s.stats.kruskal(fic_rev,nfic_rev)","a689530c":"s.shapiro(df['User Rating'])","de4426fb":"usr_fic = df[df.Genre == 'Fiction']['User Rating']\nusr_nfic = df[df.Genre == 'Non Fiction']['User Rating']","30cc9f04":"s.stats.kruskal(usr_fic,usr_nfic)","a4e0018c":"tab = pd.crosstab(df.Genre,df.Rating_category)\ntab","c7e56d32":"chi_stat , p, dof, exp_val = s.chi2_contingency(tab.values, correction=False)\nprint('Chi Square Statistic:', chi_stat)\nprint('P Value:', round(p,3))\nprint('Expected Values to be independent:',exp_val)","196ba3ac":"df.head()","2c579142":"model = ols('Reviews~ C(Rating_category) + C(Genre)',data = df).fit()\nsm.stats.anova_lm(model, typ =2)","72b13280":"H0: The reviews data is normally distributed.\nH1: The reviews data is not normally distributed.","5da9eb4e":"Our Hypothesis:\nH0: The mean of the revirews of fiction and non-fiction are same.\nH1: The mean of the reviews of fiction and non-fiction are not same.","5ea37cce":"As pvalue is less than 0.05 we can conclude that Review data is not normally distributed. Hence we cannot apply ANOVA test.","ded1f3bb":"So for Non-Parametric equivalent of ANOVA is Kruskal Wallis H test.","6360e269":"<b> 2. To test wether Genre has affect on rating. <\/b>","41e8dbab":"As p value is less than 0.05 we can conclude that the User Rating data is not Normally distributed.","528fc2f6":"As p value is greater than 0.05 we \"fail to Reject\" H0. Hence we can conclude that Genre and rating are independent of eath otherb","d7dc20e7":"# Statistical Inferences","fcb385c4":"Here we can see there are no as such correlation between any attributes.","83d3259f":"* No Null values in any columns","dfa5dff5":"As pvalue is less than 0.05 we reject H0. Hence we can can conclude that mean of the User Rating of fiction and non-fiction are not same.","cbbea7cc":"Note:-\nAll Tests are done for 95% Confidence Interval.","fa823936":"H0: The mean of the User rating of fiction and non-fiction are same.\nH1: The mean of the User Rating of fiction and non-fiction are not same.","2f30f7d8":"![Picture1.png](attachment:1b044fd7-09dd-424e-b0aa-73420bc22670.png)","dc7f6fee":"As p value is less than 0.05 we reject H0. Hence we can conclude that mean of Reviews of fiction and non fictions are not same.","5488fa4c":"**HEATMAP TO FIND THE CORRELATION BETWEEN THE ATTRIBUTES**","17bcd39d":"There are some assumptions for ANOVA test:\n1. The population data should be normally distributed.\n2. The birfurcated data should have same population variance.","982c2219":"<b> 1. To test wether Genre has affect on Reviews. <\/b>","79b697ec":"<b> 3. To Check wether Rating Category and Genre are independent.","ef8caf89":"As f value for both the category is greater than 0.05 we can conclude that there is no significant affect of Genre and Rating Category on Reviews. ","8bb7e362":"For Check of normality we use Shapiro test.","7e271c7c":"<b> 4. To check Affect of Rating category and Genre on Reviews <\/b>"}}