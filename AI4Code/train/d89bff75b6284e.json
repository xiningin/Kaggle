{"cell_type":{"02509909":"code","225b2dea":"code","960ab717":"code","e75e38fe":"code","58f9fb49":"code","4123d3ab":"code","b80b9764":"code","e97e3398":"code","21e637bc":"code","6143f7b5":"code","c015371b":"code","d102938f":"code","5fa1a5ae":"code","cd218f8e":"code","757a142f":"code","ed2cfc59":"code","ee6a981a":"code","367b1358":"code","e378ef7b":"code","2fee69c9":"code","414db341":"code","38ade818":"code","e240ecd9":"code","a950f630":"code","1ac9d5e4":"code","436b4c06":"code","7672b461":"code","906df689":"code","29ac819b":"code","101b03a4":"code","5f44dc00":"code","421d9110":"code","4f50e930":"code","eeb0f7b4":"markdown","66761da4":"markdown","85ae8d95":"markdown","57350d15":"markdown","ccd114a5":"markdown","4fc18152":"markdown","eb60ef4c":"markdown","78aba4a2":"markdown"},"source":{"02509909":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","225b2dea":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport tensorflow as tf\nsns.set_style(style='darkgrid')\n%matplotlib inline","960ab717":"#change path accordingly (absolute or relative)\ndata=pd.read_csv('\/kaggle\/input\/pm25data\/BeijingPM.csv')\ndata1=pd.read_csv('\/kaggle\/input\/pm25data\/BeijingPM.csv')","e75e38fe":"data","58f9fb49":"data.info()","4123d3ab":"data.describe()","b80b9764":"plt.figure(figsize=(10,10))\nsns.heatmap(data.isna().transpose(),cmap='viridis',xticklabels=False,cbar=False)","e97e3398":"data.dropna(inplace=True)\ndata1.dropna(inplace=True)","21e637bc":"data.drop(['month','day','month','hour','No','season','year','precipitation'],inplace=True,axis=1)","6143f7b5":"data.info()","c015371b":"data.describe()","d102938f":"f,axes=plt.subplots(2,2,figsize=(25,15))\n# sns.sub\nplt.legend(loc='best')\nsns.boxplot(x='year',y='PM_Dongsi',data=data1,palette='rainbow',ax=axes[0,0],hue='month')\nsns.boxplot(x='year',y='PM_Dongsihuan',data=data1,palette='rainbow',ax=axes[0,1],hue='month')\nsns.boxplot(x='year',y='PM_Nongzhanguan',data=data1,palette='rainbow',ax=axes[1,0],hue='month')\nsns.boxplot(x='year',y='PM_US Post',data=data1,palette='rainbow',ax=axes[1,1],hue='month')","5fa1a5ae":"f,axes=plt.subplots(2,2,figsize=(25,15))\n# sns.sub\nplt.legend(loc='best')\nsns.boxplot(x='year',y='PM_Dongsi',data=data1,palette='rainbow',ax=axes[0,0],hue='season')\nsns.boxplot(x='year',y='PM_Dongsihuan',data=data1,palette='rainbow',ax=axes[0,1],hue='season')\nsns.boxplot(x='year',y='PM_Nongzhanguan',data=data1,palette='rainbow',ax=axes[1,0],hue='season')\nsns.boxplot(x='year',y='PM_US Post',data=data1,palette='rainbow',ax=axes[1,1],hue='season')","cd218f8e":"f1,axes1=plt.subplots(2,2,figsize=(22,15))\n# sns.sub\nplt.legend(loc='best')\n# plt.grid()\nsns.barplot(x='year',y='PM_Dongsi',data=data1,palette='rainbow',ax=axes1[0,0],hue='season')\nsns.barplot(x='year',y='PM_Dongsihuan',data=data1,palette='rainbow',ax=axes1[0,1],hue='season')\nsns.barplot(x='year',y='PM_Nongzhanguan',data=data1,palette='rainbow',ax=axes1[1,0],hue='season')\nsns.barplot(x='year',y='PM_US Post',data=data1,palette='rainbow',ax=axes1[1,1],hue='season')","757a142f":"# plt.figure(figsize=(20,10))\nf1,axes1=plt.subplots(2,2,figsize=(22,15))\n\nsns.histplot(data=data1,x='PM_Dongsi',bins=50,ax=axes1[0,0])\nsns.histplot(data=data1,x='PM_Dongsihuan',bins=50,ax=axes1[0,1])\nsns.histplot(data=data1,x='PM_Nongzhanguan',bins=50,ax=axes1[1,0])\nsns.histplot(data=data1,x='PM_US Post',bins=50,ax=axes1[1,1])","ed2cfc59":"data","ee6a981a":"data['PM_fin']=(data['PM_Dongsi']+data['PM_Dongsihuan']+data['PM_Nongzhanguan']+data['PM_US Post'])\/4","367b1358":"data.info()","e378ef7b":"data","2fee69c9":"d1=pd.get_dummies(data['cbwd'],drop_first=True)\ndata=pd.concat([data,d1],axis=1)","414db341":"data.drop(['PM_Dongsi','PM_Dongsihuan','PM_Nongzhanguan','PM_US Post','cbwd'],axis=1)","38ade818":"data['PM_fin']","e240ecd9":"y=data['PM_fin'].values\nx=data.drop(['PM_Dongsi','PM_Dongsihuan','PM_Nongzhanguan','PM_US Post','PM_fin','cbwd'],axis=1).values","a950f630":"data.info()","1ac9d5e4":"from sklearn.model_selection import train_test_split\n\nx_train,x_test,y_train,y_test=train_test_split(x, y, test_size=0.30, random_state=101)","436b4c06":"# from sklearn.preprocessing import MinMaxScaler\n\n# s1=MinMaxScaler()\n\n# x_train=s1.fit_transform(x_train)\n# x_test=s1.transform(x_test)","7672b461":"x_train.shape","906df689":"from sklearn.ensemble import RandomForestRegressor","29ac819b":"lr=RandomForestRegressor(n_estimators=3000,n_jobs=-1,verbose=1)\nlr.fit(x_train,y_train)\npred=lr.predict(x_test)","101b03a4":"from sklearn.metrics import mean_squared_error","5f44dc00":"print(mean_squared_error(pred,y_test))","421d9110":"from sklearn.metrics import r2_score","4f50e930":"print(r2_score(pred,y_test))","eeb0f7b4":"# **EDA**","66761da4":"# **Fixing Null values**","85ae8d95":"# **Feature Engineering**","57350d15":"# ***Evaluation of Model***","ccd114a5":"# **Model Buliding**","4fc18152":"# **IMPORT LIBRARY AND DATA**","eb60ef4c":"# **DATA PREPROCESSING(FINAL STAGE)**","78aba4a2":"# **CHECK DATA**"}}