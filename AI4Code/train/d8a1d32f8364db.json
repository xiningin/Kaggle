{"cell_type":{"2035ea8b":"code","f3418ddb":"code","2d4d70a0":"code","da3373f4":"code","9074b885":"code","58a3a005":"code","253e763d":"code","e9b89eb9":"code","4907c28f":"code","e1697548":"code","0ef4ee41":"code","3d9830a2":"code","1d3fc396":"code","c6e4f184":"code","d72154aa":"code","67123da0":"code","134b2590":"code","344ec919":"code","d0b1be4f":"code","77aa7610":"code","d51c4590":"code","1568e495":"code","9a2f12e9":"code","26936b62":"code","17ed9fbe":"code","175fb2e0":"code","aa652850":"code","b5bf760f":"code","565bae20":"code","ecc59846":"code","e798e1a9":"code","d657f833":"code","727dd02f":"code","0eefe528":"code","433b71cf":"code","fb35a332":"code","6ef46113":"code","bb565f88":"code","a180c6db":"code","5b5f6007":"code","22e63285":"code","c3ae2709":"code","4d6f5c1d":"code","788417c6":"code","d9992d31":"code","a5e03f35":"code","ee19ae3d":"code","b9e58307":"code","1b2ff913":"code","ad238e5e":"code","aaf08531":"code","a23cf60e":"markdown","cea6ed4a":"markdown","ee486117":"markdown","7176b036":"markdown","c3a0c287":"markdown","cd592fbe":"markdown","633d8537":"markdown","2c306455":"markdown","317b455d":"markdown","5fe277b0":"markdown","1a887ecc":"markdown","c6410f56":"markdown","4406c756":"markdown","4c8c6065":"markdown","d7d010de":"markdown","71c844df":"markdown","ecd771ad":"markdown","fe61b99b":"markdown","0c37e76b":"markdown","f161f701":"markdown","891f52df":"markdown","0553d91f":"markdown","4ad7166c":"markdown","1edf9fe8":"markdown","e7f68caf":"markdown","1134cc17":"markdown","6ec8f8c3":"markdown","7852f976":"markdown","4fee27c2":"markdown","e79c63e4":"markdown","87ed9d2d":"markdown","a8a6dcd1":"markdown","44d5c26f":"markdown","fe052061":"markdown","a88e4938":"markdown"},"source":{"2035ea8b":"# Voc\u00ea vai executar seu primeiro comando Python. Apenas execute com o bot\u00e3o \u25ba e veja a sa\u00edda.\n\nprint(\"Ol\u00e1! Esta \u00e9 a minha primeira execu\u00e7\u00e3o em Python!\")","f3418ddb":"#Escrevendo uma frase motivadora\n\nprint('\\tJust do it!')\n\nprint('Vamos aprender algo novo!\\U0001F4A9')","2d4d70a0":"# Coloque seu nome dentro das aspas duplas (\" \")\nnome = \"Deb\"\n\n# Poderia ser tamb\u00e9m em aspas simples. Coloque seu sobrenome.\nsobrenome = 'Reis'\n\n# Imprime\nprint(f'Meu nome \u00e9: {nome} {sobrenome}')\n\n# Imprime o Tipo da Vari\u00e1vel\nprint(type(nome))\n\n# Agora, e se o nome fosse John O' Brian, como imprime isso?\n#print('John O' Brian')\nnome='John'\nsobrenome=\"O'Brian\"\nprint(f'Meu nome \u00e9 {nome} {sobrenome}')\nprint(\"John O'Brian\")","da3373f4":"# Lembre que Python come\u00e7a a contar do zero 0. O que a linha abaixo ir\u00e1 retornar? Pense antes de executar..\nprint(nome[0])\n\n# Python tamb\u00e9m sabe contar de tr\u00e1s pra frente. Tente advinhar que a linha abaixo ir\u00e1 retornar.\nprint(nome[-1])\n\n# E retorna partes de um index tamb\u00e9m, inclui o primeiro e n\u00e3o inclui o \u00faltimo do intervalo (range)\nprint(sobrenome[1:3])\n\n#Enumerando caracteres\nfor i in nome:\n    print(i)\n","9074b885":"# descubra quais s\u00e3o os m\u00e9todos dispon\u00edveis para a vari\u00e1vel sobrenome. Escolha o m\u00e9todo upper e veja o resultado\nsobrenome.upper()\nsobrenome.lower()\nsobrenome.title()","58a3a005":"# 1. Crie 2 vari\u00e1veis: `moeda` com valor de \"Dolar\" e `cotacao` com o valor de 3.84. **Dica:** o valor em float \u00e9 separado por ponto e n\u00e3o por v\u00edrgula. Exemplo: cotacao_anterior = 3.84   (e n\u00e3o 3,84)\nmoeda='Dolar'\n\ncotacao=3.84\n\n# 2. Imprima o tipo de cada vari\u00e1vel\n\n#imprindo os tipos de valores \nprint(type(moeda))\nprint(type(cotacao))\n\n# 3. Calcule o valor de 3x a cotacao e coloque o resultado numa nova vari\u00e1vel chamada `resultado`. Imprima o resultado.\n#imprimindo o resultado\nresultado=3*cotacao\nprint(f\"O resultado da cota\u00e7\u00e3o atual \u00e9 {resultado}\")\n","253e763d":"# 1. Converta o resultado para o tipo int. O que aconteceu com as casas decimais?\ncotacao=3.84\nresultado=3*3.84\nprint(int(resultado))\n\n#Como se tornou um inteiro, acabou tirando as casas decimais do valor.\n# 2. Converta o resultado para string e imprima o resultado\n\nprint(str(resultado))\n","e9b89eb9":"# Recebe valores l\u00f3gicos\na = True\nb = False\n\n# Compara valores. LEMBREM: Python \u00e9 case sensitive\nNot(a or b) \n\n# Compara valores\nnot(a or b)","4907c28f":"# Qual o Resultado de 2+(2+10%3)*4 \nprint(2+(2+10%3)*4)\n#O resultado \u00e9 14. Devido ao uso de parenteses onde \u00e9 realizado primeiro aquilo que acontece dentro do parenteses.\n# E qual o Resultado de 2+2+10%3*4\nprint(2+2+10%3*4)\n#O resultado \u00e9 8. Multiplica\u00e7\u00e3o primeiro, m\u00f3dulo, e por fim a soma.","e1697548":"# Advinhe r\u00e1pido, qual o resultado desta express\u00e3o? \u00c9 True ou False? Pense antes de executar..\nTrue or True and False \n\n#Retorna True","0ef4ee41":"# Imprima o valor m\u00ednimo entre (3,6,1)\nprint(min(3,6,1))\n# Imprima o valor absoluto de (-35)\nprint(abs(-35))\n","3d9830a2":"help(round)","1d3fc396":"#Essa \u00e9 uma fun\u00e7\u00e3o que permite retornar a menor diferen\u00e7a entre tr\u00eas valores\ndef menor_diferenca(a, b, c):\n    diff1 = abs(a - b)\n    diff2 = abs(b - c)\n    diff3 = abs(a - c)\n    return min(diff1, diff2, diff3)","c6e4f184":"# Chama a funcao com valores diversos para ver o resultado\nprint(menor_diferenca(1,10,100))\nprint(menor_diferenca(1,10,10))","d72154aa":"# Avalia a documentacao da funcao criada...\nhelp(menor_diferenca)","67123da0":"# Ihh.. nao tem nenhuma documentacao. Vamos criar com docstring\ndef menor_diferenca(a, b, c):\n    \"\"\"Retorna a menor diferen\u00e7a absoluta entre 2 n\u00fameros entre a, b e c.\n    >>> menor_diferenca(1, 5, -5)\n    4\n    \"\"\"\n    diff1 = abs(a - b)\n    diff2 = abs(b - c)\n    diff3 = abs(a - c)\n    return min(diff1, diff2, diff3)\n\n# Agora tem alguma documenta\u00e7\u00e3o\nhelp(menor_diferenca)","134b2590":"def menor_diferenca(a, b, c):\n    \"\"\"Retorna a menor diferen\u00e7a absoluta entre 2 n\u00fameros entre a, b e c.\n    >>> menor_diferenca(1, 5, -5)\n    4\n    \"\"\"\n    diff1 = abs(a - b)\n    diff2 = abs(b - c)\n    diff3 = abs(a - c)\n    min(diff1, diff2, diff3)\n    \nprint(menor_diferenca(1,10,100))\nprint(menor_diferenca(1,10,10))","344ec919":"def tinder(nome=\"Jhenifer\"):\n    print(\"O nome dela \u00e9\", nome)\n    \n# Chama a funcao sem argumento: usa o argumento padr\u00e3o\ntinder()\n\n# Chama a funcao passando argumento: sobrescreve o argumento padrao nesta chamada\ntinder(nome=\"Eva\")","d0b1be4f":"# Crie a funcao\ndef formata_numero(valor=3.14159):\n    '''Fun\u00e7\u00e3o capaz de receber um valor com v\u00e1rias casas decimais e que retorne o valor truncado e arredondado.\n    formata_numero(3.1111):\n    3.11\n    '''\n    valor_formatado=round(valor,2)\n    return valor_formatado\n\n# Chama a funcao sem passar valor\nformata_numero()\n\n# Chama a funcao com o valor 5.13145\nformata_numero(5.13145)","77aa7610":"# Qual o erro desta linha abaixo?\nruound(3.14152, 2)\n\n#A fun\u00e7\u00e3o na realidade se chama round e n\u00e3o ruound. O erro informa que a fun\u00e7\u00e3o n\u00e3o se encontra definida.","d51c4590":"# Qual o erro deste c\u00f3digo abaixo?\nx = -10\ny = 5\n# Retorna o menor valor absoluto entre duas vari\u00e1veis x e y\nsmallest_abs = min(abs(x,y))\n\n#O problema aqui \u00e9 que o absoluto \u00e9 exige apenas um argumento.\n\n","1568e495":"# Qual o erro deste c\u00f3digo abaixo?\ndef f(x):\n    y = abs(x)\nreturn y\n\nprint(f(5))\n\n#Indenta\u00e7\u00e3o","9a2f12e9":"# Segue um exemplo b\u00e1sico de condi\u00e7\u00f5es:\ndef inspecao(x):\n    if x == 0:\n        print(x, \"\u00e9 zero\")\n    elif x > 0:\n        print(x, \"\u00e9 positivo\")\n    elif x < 0:\n        print(x, \"\u00e9 negativo\")\n    else:\n        print(x, \"\u00e9 diferente de tudo que j\u00e1 vi...\")\ninspecao(0)\ninspecao(-15)\n","26936b62":"# Ap\u00f3s ( : ) as linhas identadas pertencem ao corpo da fun\u00e7\u00e3o e a linha que n\u00e3o foi identada representa a finaliza\u00e7\u00e3o da fun\u00e7\u00e3o\ndef f(x):\n    if x > 0:\n        print(\"Imprime x se for positivo; x =\", x)\n        print(\"Tamb\u00e9m imprime x se for positivo; x =\", x)\n    print(\"Sempre imprime x, independente do seu valor; x =\", x)\n\nf(1)\nf(0)","17ed9fbe":"def teste(nota):\n    if nota < 50:\n        resultado = 'reprovou'\n    else:\n        resultado = 'passou'\n    print(f'Voce {resultado} no teste com a nota de {nota}')\n    \nteste(80)","175fb2e0":"def teste(nota):\n    resultado = 'reprovou' if nota < 50 else 'passou'\n    print('Voce', resultado, 'no teste com a nota de', nota)\n    \nteste(45)","aa652850":"# Crie uma fun\u00e7\u00e3o que receba um numero como argumento e retorne `True` se o numero for positivo e retorne `False` se o n\u00famero for negativo\n\ndef positivo(numero):\n    tag=True\n    if numero>=0:\n        return tag\n    else:\n        return not tag\n\npositivo(50)\npositivo(-10)\n","b5bf760f":"# Lista simples\nprimos = [2,3,5]\ndias = ['Segunda', 'Ter\u00e7a', 'Quinta']\n\n# O que a linha abaixo vai imprimir?\ndias[2]\n#Ela imprimir\u00e1 o index da lista dias, no caso 'Quinta'\n\nprint(dias[2])\n\n\n# E agora?\ndias[0:2]\n\n#D\u00favida: nesse caso n\u00e3o se exige o print?\n\n","565bae20":"# Lista de lista\n# Pode ser criada assim...\ndias = [\n    [2, 'Segunda'],\n    [3, 'Ter\u00e7a'],\n    [5, 'Quinta']  # Usar virgula depois do \u00faltimo elemento \u00e9 opcional\n]\n\n# ... ou assim e ter\u00e1 o mesmo resultado que a anterior\ndias = [[2, 'Segunda'],[3, 'Ter\u00e7a'],[5, 'Quinta']]\n\n# O que a linha abaixo vai imprimir?\ndias[1][0]","ecc59846":"semana =  ['Segunda', 'Ter\u00e7a', 'Quarta', 'Quinta', 'Sexta']\nprint(semana)\n\n# Aqui ir\u00e1 substituir o primeiro elemento da lista, contando a partir de zero (0)\nsemana[0] = 'Seg'\nsemana","e798e1a9":"# Crie uma lista que contenha os meses de Janeiro a Julho: meses\nmeses=['janeiro','fevereiro','marco','abril','junho','julho']\n# Depois imprima apenas o m\u00eas de Fevereiro.\nmeses[1]\n# Por fim, substitua os meses de Janeiro e Fevereiro por Agosto e Setembro.\nmeses[0]='agosto'\nmeses[1]='setembro'\n# Adicione um novo m\u00eas na lista, o m\u00eas de Outubro\nmeses[4]='outubro'\nprint(meses)","d657f833":"# Quantos meses tem nesta lista?\nmeses = ['Janeiro', 'Fevereiro', 'Mar\u00e7o', 'Abril', 'Maio', 'Junho', 'Julho']\nlen(meses)\n\n# Ordena a lista na ordem alfab\u00e9tica\nsorted(meses)\n\nhelp(sorted)\nsorted (meses, reverse=True)","727dd02f":"# Exemplo de Loop For iterando dentro de uma lista\nplanetas = ['Marte', 'Merc\u00fario', 'Terra', 'Jupiter']\nfor planet in planetas:\n    print(planet)","0eefe528":"# Exemplo de Loop For iterando dentro de uma string\ntexto = 'Lei Especial de Gratifica\u00e7\u00e3o ApLicada.'\nmsg = ''\n\n# O que o c\u00f3digo abaixo vai fazer?\nfor char in texto:\n    if char.isupper():\n        print(char, end='')","433b71cf":"# Exemplo de loop que repete 5 vezes\nfor i in range(5):\n    print('Imprimindo o n\u00famero i = ', i)","fb35a332":"i = 0\nwhile i < 10:\n    print('Valor de i = ', i)\n    i = i + 1","6ef46113":"# Chame 5 pessoas com nomes de: Gates, Madog, 'Bob Esponja', 'Fabio Assun\u00e7\u00e3o' e 'Alan Turing' para a sua reuni\u00e3o\nequipe=['Aline','Gustavo','Debora','Rodrigo','David']\n\nfor nome in equipe:\n    print('Ol\u00e1',nome,'teremos um areuni\u00e3o nesta segunda-feira as 10h')\n\n\n","bb565f88":"# Importar uma biblioteca\nimport pandas as pd\nprint(\"Pandas tem o tipo {}\".format(type(pd)))","a180c6db":"# Importando m\u00f3dulos espec\u00edficos das bibliotecas\nfrom math import log, pi\nfrom numpy import asarray","5b5f6007":"# Lembre que voc\u00ea pode sempre chamar um help() para ver a documenta\u00e7\u00e3o, inclusive de bibliotecas\nhelp(pd)","22e63285":"# E pode querer relembrar qual o tipo \ntype(pd)","c3ae2709":"# Importe a biblioteca matplotlib e veja sua documenta\u00e7\u00e3o.\nimport matplotlib as mat\n\nhelp(mat)\n","4d6f5c1d":"# 1.1 RESPOSTA\n# 1. Crie 2 vari\u00e1veis: `moeda` com valor de \"Dolar\" e `cotacao` com o valor de 3.84. **Dica:** o valor em float \u00e9 separado por ponto e n\u00e3o por v\u00edrgula. Exemplo: cotacao_anterior = 3.84   (e n\u00e3o 3,84)\nmoeda = \"D\u00f3lar\"\ncotacao = 3.84\n\n# 2. Imprima o tipo de cada vari\u00e1vel moeda e cota\u00e7\u00e3o. Quais s\u00e3o seus tipos?\ntype(moeda)\ntype(cotacao)\n\n# 3. Calcule o valor de 3x a cotacao e coloque o resultado numa nova vari\u00e1vel chamada `resultado`. Imprima o resultado.\nresultado = 3 * cotacao\nresultado","788417c6":"# 1.2 RESPOSTA\n# 1. Converta o resultado para o tipo int. O que aconteceu com as casas decimais?\nint(resultado)\n\n# 2. Converta o resultado para string e imprima o resultado\nstr(resultado)","d9992d31":"# 2. RESPOSTA\n# Qual o Resultado de 2+(2+10%3)*4 \nprint(2+(2+10%3)*4)\n\n# Qual o Resultado de 2+2+10%3*4\nprint(2+2+10%3*4)","a5e03f35":"# 3.1 RESPOSTA\n# Imprima o valor m\u00ednimo entre (3,6,1)\nprint(min(3,6,1))\n\n# Imprima o valor absoluto de (-35)\nprint(abs(-35))","ee19ae3d":"# 3.2 RESPOSTA\n# Crie a funcao\ndef formata_numero(num=3.14159):\n    \"\"\"Recebe um numero com varias casas decimais como argumento e retorna o valor formatado para duas casas decimais.\n    >>> formata_numero(3.14159)\n    3.14\n    \"\"\"\n    resultado = round(num,2)\n    return(resultado)\n\n# Chama a funcao sem passar valor\nprint(formata_numero())\n\n# Chama a funcao com o valor 5.13145\nprint(formata_numero(num=5.13145))","b9e58307":"# 4. RESPOSTA\n# Crie uma fun\u00e7\u00e3o que receba um numero como argumento e retorne `True` se o numero for positivo e retorne `False` se o n\u00famero for negativo\n# Resposta longa\ndef positivo(numero):\n    if numero > 0:\n        return True\n    else:\n        return False\n\n# Resposta curta\ndef positivo(numero):\n    return numero > 0\n\n# Testa a fun\u00e7\u00e3o\npositivo(5)\npositivo(-3)","1b2ff913":"# 5. RESPOSTA\n# Crie uma lista que contenha os meses de Janeiro a Julho: meses\nmeses = ['Janeiro', 'Fevereiro', 'Mar\u00e7o', 'Abril', 'Maio', 'Junho', 'Julho']\n\n# Depois imprima apenas o m\u00eas de Fevereiro.\nmeses[1]\n\n# Por fim, substitua os meses de Janeiro e Fevereiro por Agosto e Setembro.\nmeses[:1] = ['Agosto', 'Setembro']\n\n# Adicione um novo m\u00eas na lista, o m\u00eas de Outubro\nmeses[7] = 'Outubro'\n\n# Imprima a lista de meses\nmeses","ad238e5e":"# 6. RESPOSTA\n# Chame 5 pessoas com nomes de: Gates, Madog, 'Bob Esponja', 'Fabio Assun\u00e7\u00e3o' e 'Alan Turing' para a sua reuni\u00e3o\nnomes = ['Gates', 'Madog', 'Bob Esponja', 'Fabio Assun\u00e7\u00e3o', 'Alan Turing']\nfor  i in nomes:\n    print(\"Ol\u00e1 \", i , \"teremos uma reuni\u00e3o nesta segunda-feira as 10h.\")","aaf08531":"# 7. RESPOSTA\n# Importe a biblioteca matplotlib e veja sua documenta\u00e7\u00e3o.\nimport matplotlib\nhelp(matplotlib)","a23cf60e":"### 6. Exerc\u00edcio\nChame 5 pessoas para a sua reuni\u00e3o pelo nome. Primeiro, crie uma lista com 5 nomes das pessoas. Depois um loop para imprimir a mensagem \"Ol\u00e1 `nome` teremos uma reuni\u00e3o nesta segunda-feira as 10h.\"","cea6ed4a":"# 4. Condi\u00e7\u00f5es (if, else)\nA identa\u00e7\u00e3o e organiza\u00e7\u00e3o do c\u00f3digo em Python define a estrutura das condi\u00e7\u00f5es `if`,  `elif`e `else`\nVeja que o Python n\u00e3o usa if-then explicitamente, o `then` \u00e9 substitu\u00eddo por `:` que tamb\u00e9m separa os blocos de c\u00f3digo. O `elif` funciona como o \"else if \". Voc\u00ea pode incluir quantos elif quiser.","ee486117":"***\n## RESPOSTAS DOS EXERC\u00cdCIOS","7176b036":"### WHILE\nOs loops `while` se repetem at\u00e9 que alguma condi\u00e7\u00e3o de parada aconte\u00e7a. Seu argumento \u00e9 um valor booleano. Voc\u00ea lembra o que \u00e9 um booleano? O booleano pode ser `True` ou `False`. Isto significa que o c\u00f3digo dentro do loop `while` ir\u00e1 se repetir at\u00e9 que a condi\u00e7\u00e3o seja `False`.","c3a0c287":"# 3. Fun\u00e7\u00f5es\nUma fun\u00e7\u00e3o \u00e9 chamada colocando par\u00eanteses () depois do nome da fun\u00e7\u00e3o e colocando como entrada seu argumento. Sintaxe: funcao(argumento). Por exemplo, `print`\u00e9 uma fun\u00e7\u00e3o Python que retorna o valor entre par\u00eanteses. Ex: `print(\"Ol\u00e1 Mundo!\")`\n\nExemplo de algumas fun\u00e7\u00f5es num\u00e9ricas:\n* min( )\n* max( )\n* abs( )\n\n### 3.1 Exerc\u00edcio\n1. Imprima o valor m\u00ednimo entre (3,6,1)\n2. Imprima o valor absoluto de (-35)","cd592fbe":"## Criando uma Fun\u00e7\u00e3o\n\u00c9 poss\u00edvel criar nossas pr\u00f3prias fun\u00e7\u00f5es no Python atrav\u00e9s do comando def. Veja o exemplo abaixo que cria uma fun\u00e7\u00e3o chamada `menor_diferenca` que recebe 3 argumentos `a`, `b` e `c`. Depois segue com dois-pontos `:`para iniciar a identa\u00e7\u00e3o do c\u00f3digo. Por fim, o `return` retorna o resultado da fun\u00e7\u00e3o.  Veja o exemplo abaixo de cria\u00e7\u00e3o de uma funcao chamada menor_diferenca que recebe 3 argumentos e retorna o menor valor absoluto a cada 2 numeros comparando a, b, e c.","633d8537":"### A fun\u00e7\u00e3o Help\nA fun\u00e7\u00e3o `help( )` \u00e9 uma das fun\u00e7\u00f5es mais importantes. Lembre de usar help(nome_da_funcao) para entender as outras fun\u00e7\u00f5es. O help retorna duas coisas:\n1. Quais s\u00e3o os argumentos da fun\u00e7\u00e3o. Argumentos obrigat\u00f3rios n\u00e3o tem marca\u00e7\u00e3o especial e argumentos opcionais ficam entre [ ]\n2. Uma descri\u00e7\u00e3o breve do que a fun\u00e7\u00e3o faz.","2c306455":"### 7. Exerc\u00edcio\nImporte a biblioteca matplotlib e veja sua documenta\u00e7\u00e3o.","317b455d":"### Opera\u00e7\u00f5es de Membership\n* in: a in b\n* not in: a in b\n\n### Opera\u00e7\u00f5es de Identidade\n* is: a is b\n* is not: a is not b\n\n### Ordem de Preced\u00eancia\n| Nome           | Operador                                            |\n|----------------|----------------------------------------------------|\n| Exponencial       |  ``**``                                     |\n| Multiplicar, Dividir, M\u00f3dulo e Divis\u00e3o Floor     |  ``* \/  & \/\/ ``                                     |\n| Adi\u00e7\u00e3o e Subtra\u00e7\u00e3o      |  ``+ -``                                     |\n| Operadores de Compara\u00e7\u00e3o      |  ``<=  <  >  >=``                                     |\n| Operadores de Igualdade      |  ``< >  ==  !=``                                     |\n| Operadores de Atribui\u00e7\u00e3o      |  ``=  +=  -=  %=  \/=  \/\/=  *=  **=``                                     |\n| Operadores de Identidade     |  ``is   is not``                                     |\n| Operadores de Membership      |  ``in``   ``not in``                                     |\n| Operadores L\u00f3gicos      |  ``not``   ``and``     ``or``                                |\n <span style=\"display:none\"><\/span>\n\n### 2. Exerc\u00edcio\nCompare os resultados:\n1. Qual o resultado de 2+(2+10%3)*4   ? \n1. E qual o resultado de 2+2+10%3*4   ?","5fe277b0":"### **Dica: **Auto-Complete \nPara agilizar a programa\u00e7\u00e3o, d\u00e1 pra visualizar os m\u00e9todos de uma vari\u00e1vel ao inserir o nome da vari\u00e1vel + ponto-final + tecla TAB.\nExemplo: nome. (+ Tecla TAB)\n![image.png](attachment:image.png)\nAgora tente voc\u00ea...","1a887ecc":"### 3.2 Exerc\u00edcio\nCrie uma fun\u00e7\u00e3o `formata_numero` que recebe um n\u00famero como argumento e retorna o valor formatado para duas casas decimais. A fun\u00e7\u00e3o para arrendondar com apenas duas casas decimais \u00e9 a `round(numero, 2)`, onde o segundo argumento \u00e9 a quantidade de casas decimais. O argumento deve ter o valor padr\u00e3o igual a 3.14159. O resultado da funcao deve ser 3.14. Crie tamb\u00e9m a documenta\u00e7\u00e3o da fun\u00e7\u00e3o docstring. Depois de criar a fun\u00e7\u00e3o, chame a fun\u00e7\u00e3o duas vezes, uma sem passar valor e outra passando o valor 5.13145 como argumento.","c6410f56":"### Fun\u00e7\u00f5es e M\u00e9todos de Listas\nPython tem v\u00e1rias fun\u00e7\u00f5es e m\u00e9todos para a listas.\n\nAlgumas fun\u00e7\u00f5es s\u00e3o:\n* len( )\n* sorted( )\n* sum( )\n* max( )\n\nAlguns m\u00e9todos s\u00e3o:\n* lista.append( )\n* lista.pop( ) \n* lista.index( )","4406c756":"Antes de come\u00e7armos... fa\u00e7a um fork deste Kernel para que voc\u00ea execute seus pr\u00f3prios comandos Python. \nVamos fazer um **tour pelo kernel**, saiba o que s\u00e3o as cells, markdown, code, sessions, settings, console. Execute o comando com o bot\u00e3o \u25ba ou clicando na c\u00e9lula e pressionando ctrl+enter.","4c8c6065":"# 2. Express\u00f5es, Opera\u00e7\u00f5es e Operadores\nExpress\u00f5es s\u00e3o uma combina\u00e7\u00e3o de valores. Por exemplo: `(a + b)` \u00e9 uma express\u00e3o.\nOs tipos de opera\u00e7\u00f5es podem ser: opera\u00e7\u00f5es aritm\u00e9ticas, opera\u00e7\u00f5es de atribui\u00e7\u00e3o, opera\u00e7\u00f5es de compara\u00e7\u00e3o, opera\u00e7\u00f5es l\u00f3gicas, opera\u00e7\u00f5es de membership e opera\u00e7\u00f5es de identidade.\n\n### Opera\u00e7\u00f5es Aritm\u00e9ticas\n| Nome           | Operador                                            |\n|----------------|--------------------------------------------------------|\n| Adi\u00e7\u00e3o       |  ``a + b``                                     |\n| Subtra\u00e7\u00e3o       |  ``a - b``                                     |\n| Multiplica\u00e7\u00e3o       |  ``a * b``                                     |\n| Divis\u00e3o       |  ``a \/ b``                                     |\n| M\u00f3dulo       |  ``a % b``                                     |\n| Exponencial       |  ``a ** b``                                     |\n| Divis\u00e3o Floor       |  ``a \/\/ b``                                     |\n <span style=\"display:none\"><\/span>\n*na Divis\u00e3o Floor o valor do resultado da divis\u00e3o \u00e9 arredondado para baixo\n\n\n### Opera\u00e7\u00f5es de Atribui\u00e7\u00e3o\n* a = b\n* a += b      ... e todos os outros de opera\u00e7\u00f5es aritm\u00e9ticas\n\n### Operadores Booleanos\n| Nome           | Operador                                            |\n|----------------|--------------------------------------------------------|\n| Igual          |  ``a == b``                                              |\n| Diferente       |  ``a != b``  ou   ``a < > b``                                     |\n| Maior que       |  ``a > b``                                     |\n| Menor que       |  ``a < b``                                     |\n| Maior ou igual que       |  ``a >= b``                                     |\n| Menor ou igual que       |  ``a <= b``                                     |\n <span style=\"display:none\"><\/span>\n* Os operadores booleanos s\u00e3o operadores de compara\u00e7\u00e3o que retornam `True` ou `False` e s\u00e3o usados para responder quest\u00f5es de Sim ou N\u00e3o.\n\n### Opera\u00e7\u00f5es L\u00f3gicas\n| Nome           | Operador                                            |\n|----------------|----------------------------------------------------|\n| AND       |  ``(a and b)``                                     |\n| OR       |  ``(a or b)``                                     |\n| NOT       |  ``not(a and b)``                                     |\n <span style=\"display:none\"><\/span>","d7d010de":"### 5. Exerc\u00edcio\nCrie uma lista que contenha os meses de Janeiro a Julho. Depois imprima apenas o m\u00eas de Fevereiro. Por fim, substitua os meses de Janeiro e Fevereiro por Agosto e Setembro.","71c844df":"Os elementos da lista s\u00e3o acessados pelo seu \u00edndice e podem ser modificados para assumir um novo valor. Por exemplo, vamos substituir \"Segunda\" por \"Seg\"","ecd771ad":"### Argumentos da Fun\u00e7\u00e3o\n\u00c9 poss\u00edvel criar argumentos padr\u00e3o (default) para a fun\u00e7\u00e3o que assumem valores pr\u00e9vios. Caso o usu\u00e1rio queira alterar o valor padr\u00e3o, ele precisa explicitamente alterar o valor do argumento ao chamar a fun\u00e7\u00e3o. Veja:","fe61b99b":"Uma vari\u00e1vel pode ter um ou outro valor dependendo de sua condi\u00e7\u00e3o. No Python \u00e9 poss\u00edvel que o seguinte c\u00f3digo abaixo...","0c37e76b":"...tamb\u00e9m seja escrito em uma linha \u00fanica para simplificar, da seguinte forma:","f161f701":"## Convers\u00e3o de Tipos\nPara converter tipos de dados, basta explicitamente citar qual tipo a ser convertido.\nExemplo: float(valor) vai converter o valor para o tipo float no momento da execu\u00e7\u00e3o (runtime).\n\n### 1.2 Exerc\u00edcio\n1. Converta o `resultado` do exerc\u00edcio anterior para o tipo int. O que aconteceu com as casas decimais?\n2. Converta o `resultado` para string e imprima o resultado","891f52df":"## Exerc\u00edcio\nAdicione uma c\u00e9lula abaixo desta. Uma c\u00e9lula de c\u00f3digo (Code). Nela, escreva um c\u00f3digo para imprimir uma frase inspiradora e execute trecho de c\u00f3digo. Depois clique em **Commit** para salvar seu kernel.\n","0553d91f":"**[Voltar para a P\u00e1gina Inicial do Curso](https:\/\/www.kaggle.com\/c\/ml-python-me)**\n\n# **Introdu\u00e7\u00e3o ao Python**\nEsta primeira aula faz uma revis\u00e3o de Python aplicada a machine learning. Caso voc\u00ea j\u00e1 seja experiente em Python, pode pular direto para os exerc\u00edcios no final desta se\u00e7\u00e3o. \n\n**Python** \u00e9 uma linguagem de programa\u00e7\u00e3o usada para diversos fins. Al\u00e9m de ser usada para machine learning, Python tamb\u00e9m \u00e9 usada para construir p\u00e1ginas web, para automa\u00e7\u00e3o, desenvolvimento de sistemas, para criar scripts diversos, entre outras coisas.\nEspecificamente para machine learning em Python, \u00e9 importante saber: como trabalhar com as vari\u00e1veis, opera\u00e7\u00f5es aritm\u00e9ticas, fun\u00e7\u00f5es, condi\u00e7\u00f5es (if\/else), estruturas de repeti\u00e7\u00e3o (for e loop), listas e conhecer as principais bibliotecas Python.\n\n**Conte\u00fado:**\n1. Vari\u00e1veis e Tipos de Dados\n2. Express\u00f5es, Opera\u00e7\u00f5es e Operadores  (operadores booleanos)\n3. Fun\u00e7\u00f5es\n4. Condi\u00e7\u00f5es (if, else)\n5. Listas\n6. Estruturas de Repeti\u00e7\u00e3o (loops, for, while)\n7. Principais Bibliotecas Python\n8. Exerc\u00edcios Extras Complementares (opcional)","4ad7166c":"## \u00cdndice e Range\n\u00c9 poss\u00edvel acessar a uma determinada posi\u00e7\u00e3o (index) ou ent\u00e3o a um intervalo (range)","1edf9fe8":"# 1. Vari\u00e1veis e Tipos de Dados\nEm Python voc\u00ea n\u00e3o precisa declarar uma vari\u00e1vel antes de dar algum valor a ela. Para criar uma nova vari\u00e1vel, basta d\u00e1r-lhe algum valor. As vari\u00e1veis s\u00e3o criadas na mem\u00f3ria do computador. \n\nVamos criar uma vari\u00e1vel chamada `nome` e outra para o `sobrenome` incluir o seu nome e sobrenome no valor destas vari\u00e1veis.\n`nome` e `sobrenome` s\u00e3o vari\u00e1veis do tipo string ou str, elas armazenam caracteres de textos. N\u00e3o precisou dizer qual seria o tipo da vari\u00e1vel porque Python j\u00e1 assume o tipo da vari\u00e1vel.\n","e7f68caf":"## Tipos de Dados\n* string ou str\n* float \n* inteiro ou int\n* boolean ou bool (True ou False)\n* list\n\n### 1.1 Exerc\u00edcio\n1. Crie 2 vari\u00e1veis: `moeda` com valor de \"Dolar\" e `cotacao` com o valor de 3.84. **Dica:** o valor em float \u00e9 separado por ponto e n\u00e3o por v\u00edrgula. Exemplo: cotacao_anterior = 3.84   (e n\u00e3o 3,84)\n2. Imprima o tipo de cada vari\u00e1vel\n3. Calcule o valor de 3x a cotacao e coloque o resultado numa nova vari\u00e1vel chamada `resultado`. Imprima o resultado.","1134cc17":"# 7. Principais Bibliotecas Python\nBibliotecas python possuem uma s\u00e9rie de fun\u00e7\u00f5es j\u00e1 criadas. As principais bibliotecas Python usadas em ci\u00eancia de dados e machine learning s\u00e3o:\n1. Numpy: manipula\u00e7\u00e3o de Dados\n2. Scipy: manipula\u00e7\u00e3o de Dados e estat\u00edstica\n3. Pandas: manipula\u00e7\u00e3o de Dados\n4. Matplotlib: para Visualiza\u00e7\u00e3o de Dados\n5. Seaborn: para Visualiza\u00e7\u00e3o de Dados\n6. Scikit-learn: para Machine Learning\n7. TensorFlow: para Deep Learning\n8. NLTK: para Linguagem Natural\n9. StatsModel: estat\u00edstica\n10. Scrapy: webscraping, raspagem de sites\n\nN\u00e3o se preocupe em entender todas agora. Neste primeiro momento, voc\u00ea precisa aprender apenas como importar uma biblioteca, atrav\u00e9s do `import`. As bibliotecas s\u00e3o do tipo `module` ou m\u00f3dulos que apenas representam uma cole\u00e7\u00e3o de vari\u00e1veis j\u00e1 definidas.","6ec8f8c3":"# 6. Estruturas de Repeti\u00e7\u00e3o (Loops, for, while)\nLoops representam uma forma de repetir a execu\u00e7\u00e3o de um c\u00f3digo. \n\n### FOR\nO `for` \u00e9 um loop que itera sob uma ou mais instru\u00e7\u00f5es de c\u00f3digo utilizando uma vari\u00e1vel como controladora. OBS: sem o controle voc\u00ea cria loops infinitos!!! A palavra `in` \u00e9 usada para dizer em quais conjuntos de valores e instru\u00e7\u00f5es o loop ser\u00e1 criado. Assim, `in` pode ser qualquer coisa que suporte uma itera\u00e7\u00e3o (repeti\u00e7\u00e3o). Geralmente \u00e9 um grupo de coisas, que pode ser uma lista, um dataset, etc.\n\nA fun\u00e7\u00e3o `range()` retorna uma sequencia de n\u00fameros e \u00e9 muito usada em loops.","7852f976":"## Aprendendo a Corrigir os Erros\nNem tudo s\u00e3o flores! \u00c9 importante aprender a corrigir os erros quando eles aparecem. Estes c\u00f3digos abaixo cont\u00e9m erros. Antes de executar, tente advinhar onde est\u00e1 o erro. Depois execute, descubra os erros e os corrija.","4fee27c2":"### Fun\u00e7\u00f5es sem retorno\nO que acontece se criarmos uma fun\u00e7\u00e3o sem o `return`? ","e79c63e4":"### Pr\u00f3xima Aula\n[2. Pr\u00e9-processamento de Dados](https:\/\/www.kaggle.com\/deborareis\/pre-processamento-de-dados)","87ed9d2d":"# 5. Listas\nAs listas representam uma sequencia de valores ordenados. Aqui est\u00e1 o exemplo de lista:","a8a6dcd1":"### 4. Exerc\u00edcio\nCrie uma fun\u00e7\u00e3o que receba um numero como argumento e retorne `True` se o numero for positivo e retorne `False` se o n\u00famero for negativo","44d5c26f":"### Sobreposi\u00e7\u00e3o de Bibliotecas\nOutra forma de importar bibliotecas \u00e9 chamando apenas fun\u00e7\u00f5es espec\u00edficas. Esta \u00e9 uma pr\u00e1tica que evita a sobreposi\u00e7\u00e3o de fun\u00e7\u00f5es de bibliotecas. Por exemplo, tanto a `math` quanto a `numpy` possuem m\u00f3dulos chamados `log`, por\u00e9m cada um com sem\u00e2ntica diferente. Se importarmos `numpy` por \u00faltimo, ele ir\u00e1 sobrescrever a `math`. Nestes casos, \u00e9 recomend\u00e1vel importar os m\u00f3dulos espec\u00edficos de cada biblioteca, o que pode ser feito utilizando `from`, da seguinte forma:","fe052061":"**Dica:** Existe ordem de preced\u00eancia inclusive em express\u00f5es como esta acima e `and` tem maior precedencia que `or`.","a88e4938":"***\n# 8. Exerc\u00edcios Complementares (opcional)\n1. [Introdu\u00e7\u00e3o a Python, Sintaxe e Vari\u00e1veis](https:\/\/www.kaggle.com\/kernels\/fork\/1275163)\n2. [Fun\u00e7\u00f5es](https:\/\/www.kaggle.com\/kernels\/fork\/1275158)\n3. [Booleans e Condi\u00e7\u00f5es If\/Else](https:\/\/www.kaggle.com\/kernels\/fork\/1275165)\n4. [Listas](https:\/\/www.kaggle.com\/kernels\/fork\/1275173)\n5. [Loops For](https:\/\/www.kaggle.com\/kernels\/fork\/1275177)\n6. [Strings](https:\/\/www.kaggle.com\/kernels\/fork\/1275185)\n7. [Bibliotecas](https:\/\/www.kaggle.com\/kernels\/fork\/1275190)\n***"}}