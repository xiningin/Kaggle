{"cell_type":{"da997e25":"code","2e8d7845":"code","52b30afa":"code","8256c37d":"markdown"},"source":{"da997e25":"import seaborn as sns\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os\nprint(os.listdir(\"..\/input\"))\nimport  warnings\nwarnings.simplefilter('ignore')","2e8d7845":"#######################################load data################################################################\ntrain=pd.read_csv('..\/input\/santander-customer-transaction-prediction\/train.csv')\ntest=pd.read_csv('..\/input\/santander-customer-transaction-prediction\/test.csv')\npr_b=np.load('..\/input\/list-of-fake-samples-and-public-private-lb-split\/synthetic_samples_indexes.npy')\n################################Split syn and true##############################################################\n#train.drop(['ID_code','target'],axis=1,inplace=True)\ntest=test.drop('ID_code',axis=1)\n# syn\n#test1=test.iloc[pr_b]\n# true\ntest2=test.drop(pr_b)","52b30afa":"np.random.seed(9)\n# true values unique number  VS random generated samples\nfor col in test2.columns:\n    print(col)\n    a=test2[col].map(test2[col].value_counts())\n    sns.distplot(np.round(a,4),bins=100)\n    plt.show()\n    a=pd.DataFrame(np.round(np.random.normal(loc=np.mean(train[col]), scale=np.std(train[col]), size=100000),4))\n    a.columns=['x']\n    b=a.x.map(a.x.value_counts())\n    sns.distplot(b,bins=100)\n    plt.show()\n    ","8256c37d":"# True in test vs normal"}}