{"cell_type":{"3fb5d2a3":"code","f1cfef99":"code","66660af0":"code","4ac8033b":"code","a6261531":"code","bef103d6":"code","7e1239be":"code","83d84e59":"code","814544aa":"code","8c2bc7b5":"code","c53221d9":"code","76b11695":"code","d932b381":"code","1098c126":"code","e0783ceb":"code","4f007fe8":"code","bf578025":"code","e661d549":"code","d0a13ea7":"code","29890554":"code","7dfa8b1b":"code","31e767f5":"code","28ce9385":"code","c647a719":"code","4a02a02a":"code","3e976f1d":"code","98c5eb88":"code","8511fd7c":"code","443ee91f":"code","ccef8d51":"code","37a7c99c":"code","b38f49ac":"code","ce7d7fb4":"code","a98ad261":"code","30600a67":"code","0a6f56b1":"code","afb6c6b1":"code","a91fceb9":"code","fd9656ea":"markdown","ec29017f":"markdown","b44dd2c0":"markdown","fb90cd26":"markdown","5579ef0c":"markdown","56cdef8d":"markdown","9dcd341a":"markdown","5d0953ad":"markdown","1019d134":"markdown","f4ae4218":"markdown","e2844712":"markdown","b21e99aa":"markdown","c35e715f":"markdown","4753304b":"markdown","1a4afda2":"markdown","3828463c":"markdown"},"source":{"3fb5d2a3":"!pip install yfinance arch pmdarima","f1cfef99":"import numpy as np\nimport pandas as pd\nimport scipy\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sklearn\nimport statsmodels.graphics.tsaplots as sgt\nimport statsmodels.tsa.stattools as sts\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom statsmodels.tsa.statespace.sarimax import SARIMAX\nfrom pmdarima.arima import auto_arima\nfrom arch import arch_model\nimport yfinance\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nsns.set()","66660af0":"raw_data = yfinance.download (tickers = \"^GSPC ^FTSE ^N225 ^GDAXI\", start = \"1994-01-07\", \n                              end = \"2019-09-01\", interval = \"1d\", group_by = 'ticker', auto_adjust = True, treads = True)","4ac8033b":"df_comp = raw_data.copy()","a6261531":"df_comp['spx'] = df_comp['^GSPC'].Close[:]\ndf_comp['dax'] = df_comp['^GDAXI'].Close[:]\ndf_comp['ftse'] = df_comp['^FTSE'].Close[:]\ndf_comp['nikkei'] = df_comp['^N225'].Close[:]","bef103d6":"df_comp = df_comp.iloc[1:]\ndel df_comp['^N225']\ndel df_comp['^GSPC']\ndel df_comp['^GDAXI']\ndel df_comp['^FTSE']\ndf_comp=df_comp.asfreq('b')\ndf_comp=df_comp.fillna(method='ffill')","7e1239be":"df_comp['ret_spx'] = df_comp.spx.pct_change(1).mul(100)\ndf_comp['ret_ftse'] = df_comp.ftse.pct_change(1).mul(100)\ndf_comp['ret_dax'] = df_comp.dax.pct_change(1).mul(100)\ndf_comp['ret_nikkei'] = df_comp.nikkei.pct_change(1).mul(100)","83d84e59":"df_comp['norm_ret_spx'] = df_comp.ret_spx.div(df_comp.ret_spx[1])*100\ndf_comp['norm_ret_ftse'] = df_comp.ret_ftse.div(df_comp.ret_ftse[1])*100\ndf_comp['norm_ret_dax'] = df_comp.ret_dax.div(df_comp.ret_dax[1])*100\ndf_comp['norm_ret_nikkei'] = df_comp.ret_nikkei.div(df_comp.ret_nikkei[1])*100","814544aa":"size = int(len(df_comp)*0.8)\ndf, df_test = df_comp.iloc[:size], df_comp.iloc[size:]","8c2bc7b5":"model_ar = ARIMA(df.ftse, order = (1,0,0))\nresults_ar = model_ar.fit()","c53221d9":"df.tail()","76b11695":"# create variables that will help us change the periods easily instead of typing them up every time\n# make sure the start and end dates are business days, otherwise the code will result in an error\nstart_date = \"2014-07-15\"\nend_date = \"2015-01-01\"","d932b381":"end_date = \"2019-10-23\"\ndf_pred = results_ar.predict(start = start_date, end = end_date)","1098c126":"df_pred[start_date:end_date].plot(figsize = (20,5), color = \"red\")\ndf_test.ftse[start_date:end_date].plot(color = \"blue\")\nplt.title(\"Predictions vs Actual\", size = 24)\nplt.show()","e0783ceb":"end_date = \"2014-08-18\"\n\nmodel_ret_ar = ARIMA(df.ret_ftse[1:], order = (5,0,0))\nresults_ret_ar = model_ret_ar.fit()\n\ndf_pred_ar = results_ret_ar.predict(start = start_date, end = end_date) \n\ndf_pred_ar[start_date:end_date].plot(figsize = (20,5), color = \"red\")\ndf_test.ret_ftse[start_date:end_date].plot(color = \"blue\")\nplt.title(\"Predictions vs Actual (Returns)\", size = 24)\nplt.show()","4f007fe8":"results_ret_ar.summary()","bf578025":"end_date = \"2015-01-01\"\n\nmodel_ret_ma = ARIMA(df.ret_ftse[1:], order=(0,0,1))\nresults_ret_ma = model_ret_ma.fit()\n\ndf_pred_ma = results_ret_ma.predict(start = start_date, end = end_date) \n\ndf_pred_ma[start_date:end_date].plot(figsize = (20,5), color = \"red\")   \ndf_test.ret_ftse[start_date:end_date].plot(color = \"blue\")\nplt.title(\"Predictions vs Actual (Returns)\", size = 24)\nplt.show()","e661d549":"df_pred_ma.head()","d0a13ea7":"model_ret_arma = ARIMA(df.ret_ftse[1:], order=(1,0,1))\nresults_ret_arma = model_ret_arma.fit()\n\ndf_pred_arma = results_ret_arma.predict(start = start_date, end = end_date)\n\ndf_pred_arma[start_date:end_date].plot(figsize = (20,5), color = \"red\")   \ndf_test.ret_ftse[start_date:end_date].plot(color = \"blue\")\nplt.title(\"Predictions vs Actual (Returns)\", size = 24)\nplt.show()","29890554":"df_pred_arma.head()","7dfa8b1b":"df_pred_arma.tail()","31e767f5":"model_ret_armax = ARIMA(df.ret_ftse[1:], exog = df[[\"ret_spx\",\"ret_dax\",\"ret_nikkei\"]][1:], order = (1,0,1))\nresults_ret_armax = model_ret_armax.fit()\n\ndf_pred_armax = results_ret_armax.predict(start = start_date, end = end_date, \n                                          exog = df_test[[\"ret_spx\",\"ret_dax\",\"ret_nikkei\"]][start_date:end_date]) \n\ndf_pred_armax[start_date:end_date].plot(figsize = (20,5), color = \"red\")\ndf_test.ret_ftse[start_date:end_date].plot(color = \"blue\")\nplt.title(\"Predictions vs Actual (Returns)\", size = 24)\nplt.show()","28ce9385":"end_date = \"2014-08-18\"\nmodel_ret_sarma = SARIMAX(df.ret_ftse[1:], order = (3,0,4), seasonal_order = (3,0,2,5))\nresults_ret_sarma = model_ret_sarma.fit()\n\ndf_pred_sarma = results_ret_sarma.predict(start = start_date, end = end_date)\n\ndf_pred_sarma[start_date:end_date].plot(figsize = (20,5), color = \"red\")\ndf_test.ret_ftse[start_date:end_date].plot(color = \"blue\")\nplt.title(\"Predictions vs Actual (SARMA)\", size = 24)\nplt.show()","c647a719":"end_date = \"2015-01-01\"\nmodel_ret_sarimax = SARIMAX(df.ret_ftse[1:], exog = df[[\"ret_spx\",\"ret_dax\",\"ret_nikkei\"]][1:], \n                            order = (3,0,4), seasonal_order = (3,0,2,5))\nresults_ret_sarimax = model_ret_sarimax.fit()\n\ndf_pred_sarimax = results_ret_sarimax.predict(start = start_date, end = end_date, \n                                              exog = df_test[[\"ret_spx\",\"ret_dax\",\"ret_nikkei\"]][start_date:end_date]) \n\ndf_pred_sarimax[start_date:end_date].plot(figsize = (20,5), color = \"red\")\ndf_test.ret_ftse[start_date:end_date].plot(color = \"blue\")\nplt.title(\"Predictions vs Actual\", size = 24)\nplt.show()","4a02a02a":"model_auto = auto_arima(df.ret_ftse[1:], exogenous = df[['ret_spx', 'ret_dax', 'ret_nikkei']][1:],\n                       m = 5, max_p = 5, max_q = 5, max_P = 5, max_Q = 5)","3e976f1d":"df_auto_pred = pd.DataFrame(model_auto.predict(n_periods = len(df_test[start_date:end_date]),\n                            exogenous = df_test[['ret_spx', 'ret_dax', 'ret_nikkei']][start_date:end_date]),\n                            index = df_test[start_date:end_date].index)","98c5eb88":"df_auto_pred.plot(figsize = (20,5), color = \"red\")\ndf_test.ret_ftse[start_date:end_date].plot(color = \"blue\")\nplt.title(\"Auto Model Predictions vs Real Data\", size = 24)\nplt.show()","8511fd7c":"end_date = \"2015-01-01\"\ndf_pred_ar[start_date:end_date].plot(figsize = (20,10), color = \"yellow\")\ndf_pred_ma[start_date:end_date].plot(color = \"pink\")\ndf_pred_arma[start_date:end_date].plot(color = \"cyan\")\ndf_pred_armax[start_date:end_date].plot(color = \"green\")\ndf_pred_sarma[start_date:end_date].plot(color = \"magenta\")\ndf_pred_sarimax[start_date:end_date].plot(color = \"red\")\ndf_test.ret_ftse[start_date:end_date].plot(color = \"blue\")\nplt.legend(['AR','MA','ARMA','ARMAX','SARMA','SARIMAX'])\nplt.title(\"All the Models\", size = 24)\nplt.show()","443ee91f":"mod_garch = arch_model(df_comp.ret_ftse[1:], vol = \"GARCH\", p = 1, q = 1, mean = \"constant\", dist = \"Normal\")\nres_garch = mod_garch.fit(last_obs = start_date, update_freq = 10)","ccef8d51":"pred_garch = res_garch.forecast(horizon = 1, align = 'target')","37a7c99c":"pred_garch.residual_variance[start_date:].plot(figsize = (20,5), color = \"red\", zorder = 2)\ndf_test.ret_ftse.abs().plot(color = \"blue\", zorder = 1)\nplt.title(\"Volatility Predictions\", size = 24)\nplt.show()","b38f49ac":"pred_garch = res_garch.forecast(horizon = 100, align = 'target')\npred_garch.residual_variance[-1:]","ce7d7fb4":"from statsmodels.tsa.api import VAR","a98ad261":"df_ret = df[['ret_spx', 'ret_dax', 'ret_ftse', 'ret_nikkei']][1:]","30600a67":"model_var_ret = VAR(df_ret)\nmodel_var_ret.select_order(20)\nresults_var_ret = model_var_ret.fit(ic = 'aic')","0a6f56b1":"results_var_ret.summary()","afb6c6b1":"lag_order_ret = results_var_ret.k_ar\nvar_pred_ret = results_var_ret.forecast(df_ret.values[-lag_order_ret:], len(df_test[start_date:end_date]))\n\ndf_ret_pred = pd.DataFrame(data = var_pred_ret, index = df_test[start_date:end_date].index,\n                                columns = df_test[start_date:end_date].columns[4:8])\n\ndf_ret_pred.ret_nikkei[start_date:end_date].plot(figsize = (20,5), color = \"red\")\n\ndf_test.ret_nikkei[start_date:end_date].plot(color = \"blue\")\nplt.title(\"Real vs Prediction\", size = 24)\nplt.show()","a91fceb9":"results_var_ret.plot_forecast(1000)\nplt.show()","fd9656ea":"### Comparing All the Models (Returns)","ec29017f":"## Loading the data","b44dd2c0":"## Fitting a Model","fb90cd26":"### SARIMAX","5579ef0c":"### ARMA","56cdef8d":"## Simple Forecasting","9dcd341a":"### Using Returns Instead","5d0953ad":"## Packages","1019d134":"## Splitting the Data","f4ae4218":"### Forecasting Volatility","e2844712":"### SARMA","b21e99aa":"### MA","c35e715f":"### ARMAX","4753304b":"### Multvariate Regression Model","1a4afda2":"### Auto ARIMA","3828463c":"## Creating Returns"}}