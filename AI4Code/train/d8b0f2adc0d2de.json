{"cell_type":{"a56a6409":"code","c597e2e7":"code","6fdc6b62":"code","eb600219":"code","e4391e4e":"code","5ca07019":"code","01e70b7b":"code","df63e6c1":"code","945fdbd1":"code","52fb3c81":"code","ec20379c":"code","8f147bb6":"code","b4be3861":"code","ae1d67d6":"code","e2417896":"code","d0b2bd38":"code","c97c5c97":"code","85bb1904":"code","f6cf64e5":"code","f30769eb":"code","f020b1f4":"code","999343d9":"code","8574d864":"code","c423db84":"code","17686ab7":"code","a567e4fa":"code","69af30ff":"code","d9dcd991":"code","0daca562":"code","9660eb01":"code","25a18b28":"code","cefbb3de":"code","ebfacdc3":"code","7c3f314c":"code","30701de7":"code","02d86fd9":"code","1c8b673a":"code","ec63aa75":"code","25b49211":"code","09eb65a1":"code","1040566e":"code","29260bb8":"code","9e56c105":"code","7deafb0a":"code","afc2123b":"code","26b4d7b1":"code","80b570fd":"code","382d4abd":"code","5cfd3371":"code","cad695d4":"code","8263df7f":"code","64376475":"code","af79a55b":"code","dcc3db62":"code","572a4122":"code","63a108b3":"code","7e948cce":"code","07e943ca":"code","0e061a7c":"code","a8849dad":"code","ee88a05c":"markdown","599a5641":"markdown","a5513634":"markdown","132a28f0":"markdown","6be4c0fe":"markdown","b6d38b2e":"markdown","88857830":"markdown"},"source":{"a56a6409":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c597e2e7":"import pandas as pd\nfrom pandas import DataFrame\nimport numpy as np","6fdc6b62":"train = pd.read_csv(\"..\/input\/instacart-market-basket-analysis\/order_products__train.csv\")\nprior = pd.read_csv(\"..\/input\/instacart-market-basket-analysis\/order_products__prior.csv\")\norders = pd.read_csv(\"..\/input\/instacart-market-basket-analysis\/orders.csv\")\nproducts = pd.read_csv(\"..\/input\/instacart-market-basket-analysis\/products.csv\")\naisles = pd.read_csv(\"..\/input\/instacart-market-basket-analysis\/aisles.csv\")\ndepartments = pd.read_csv(\"..\/input\/instacart-market-basket-analysis\/departments.csv\")","eb600219":"prior = pd.concat([train, prior])","e4391e4e":"#prior[:10]","5ca07019":"prior1 = prior.join(products.set_index('product_id'), on='product_id')","01e70b7b":"from collections import Counter as cc\n\npro_name = cc(prior1['product_name'])\nA = pro_name.most_common()[:1000]\n#print(A)","df63e6c1":"A = DataFrame(A)\nA.columns = [\"product_name\",\"product_count\"]","945fdbd1":"#print(A)","52fb3c81":"top10 = A.join(prior1.set_index('product_name'), on='product_name')","ec20379c":"len(top10)","8f147bb6":"All_top10 = pd.merge(top10, orders, how='left')","b4be3861":"#All_top10","ae1d67d6":"All_top10['user_order'] =All_top10['user_id'] + All_top10['order_number'] * 0.1","e2417896":"All_top10.drop(['eval_set', 'product_count', 'product_id', 'user_id', 'order_number'], axis='columns', inplace=True)\nAll_top10.head()","d0b2bd38":"group_top10 = All_top10[\"product_name\"].groupby(All_top10['user_order'])\ngroup_top10 = pd.DataFrame(group_top10)","c97c5c97":"group_top10.columns = ['user_order','product_list']","85bb1904":"group_top10.head()","f6cf64e5":"product = [list(s) for s in group_top10.product_list]","f30769eb":"#product","f020b1f4":"len(product)","999343d9":"len(group_top10)","8574d864":"from gensim.models.word2vec import Word2Vec","c423db84":"%%time\nmodel = Word2Vec(product)","17686ab7":"model.init_sims(replace=True)","a567e4fa":"model.wv.similarity('Banana', 'Organic Whole Milk')","69af30ff":"model.wv.similarity('Red Mango', 'Honeydew Melon')","d9dcd991":"model.wv.similarity('Bag of Organic Bananas', 'Organic Whole Milk')","0daca562":"model.wv.most_similar(\"Banana\")","9660eb01":"model.wv.most_similar(\"Organic Avocado\")","25a18b28":"model.wv.most_similar(\"Organic Hass Avocado\")","cefbb3de":"model.wv.most_similar(\"Bag of Organic Bananas\")","ebfacdc3":"model.wv.most_similar(\"Organic Gala Apples\")","7c3f314c":"model.wv.most_similar(\"Apple Honeycrisp Organic\")","30701de7":"model.wv.most_similar(\"Organic Strawberries\")","02d86fd9":"model.wv.most_similar(\"Seedless Red Grapes\")","1c8b673a":"model.wv.most_similar(\"Granny Smith Apples\")","ec63aa75":"model.wv.most_similar(\"Fat Free Milk\")","25b49211":"model.wv.most_similar(\"Original Orange Juice\")","09eb65a1":"model.wv.most_similar(\"Honey Nut Cheerios\")","1040566e":"model.wv.most_similar(\"Lemonade\")","29260bb8":"model.wv.most_similar(\"Organic Blueberries\")","9e56c105":"model.wv.most_similar(\"Blueberries\")","7deafb0a":"model.wv.most_similar(\"Granny Smith Apples\")","afc2123b":"model.wv.most_similar(\"Organic Half & Half\")","26b4d7b1":"model.wv.most_similar(\"Half & Half\")","80b570fd":"model.wv.most_similar(\"Organic Fuji Apple\")","382d4abd":"model.wv.most_similar(\"Honeycrisp Apple\")","5cfd3371":"model.wv.most_similar(\"Strawberries\")","cad695d4":"model.wv.most_similar(\"Organic Baby Spinach\")","8263df7f":"model.wv.most_similar(\"Limes\")","64376475":"model.wv.most_similar(\"Extra Virgin Olive Oil\")","af79a55b":"model.wv.most_similar(\"Asparagus\")","dcc3db62":"model.wv.most_similar(\"Organic Whole Milk\")","572a4122":"model.wv.most_similar(\"Organic Reduced Fat Milk\")","63a108b3":"model.wv.most_similar(\"Whipped Cream Cheese\")","7e948cce":"model.wv.most_similar(\"Organic Baby Spinach\")","07e943ca":"from sklearn.manifold import TSNE\nimport matplotlib.pyplot as plt\n\ndef tsne_plot(model):\n    labels = []\n    tokens = []\n\n    for word in model.wv.vocab:\n        tokens.append(model[word])\n        labels.append(word)\n    \n    tsne_model = TSNE(perplexity=40, n_components=2, init='pca', n_iter=2500, random_state=23)\n    new_values = tsne_model.fit_transform(tokens)\n\n    x = []\n    y = []\n    for value in new_values:\n        x.append(value[0])\n        y.append(value[1])\n        \n    plt.figure(figsize=(128, 128)) \n    for i in range(len(x)):\n        plt.scatter(x[i],y[i])\n        plt.annotate(labels[i],\n                     xy=(x[i], y[i]),\n                     xytext=(5, 2),\n                     textcoords='offset points',\n                     ha='right',\n                     va='bottom')\n    plt.show()","0e061a7c":"#tsne_plot(model)","a8849dad":"model.save('product_model_top1000.model')","ee88a05c":"# \uc2dc\uac01\ud654","599a5641":"similarity : \ub450 \ub2e8\uc5b4\uc758 \uc720\uc0ac\ub3c4 \uacc4\uc0b0\nmost_similar : \uac00\uc7a5 \uc720\uc0ac\ud55c \ub2e8\uc5b4\ub97c \ucd9c\ub825","a5513634":"  low_dim_embs \ub0b4\ubd80 \uac2f\uc218\uc640 n_components\uac00 \uac19\uc544\uc57c \ud55c\ub2e4.\n  \n  n_components : \ucc28\uc6d0. default\ub294 2.\n    \n  perplexity : \uac00\uc7a5 \uac00\uae4c\uc6b4 \uc774\uc6c3 \uac2f\uc218. \ubcf4\ud1b5 5~50. default\ub294 30.\n     \n  n_iter : \ucd5c\uc801\ud654\uc5d0 \uc0ac\uc6a9\ud560 \ubc18\ubcf5 \ud69f\uc218. \ucd5c\uc18c 200. default\ub294 1000.\n     \n  init : embedding \ucd08\uae30\ud654 \ubc29\ubc95. random\uacfc pca \uc911\uc5d0\uc11c \uc120\ud0dd. pca\uac00 \ubcf4\ub2e4 \uc548\uc815\uc801. default\ub294 random.\n\n","132a28f0":"prior1 => prior\uacfc train\uc744 \uacb0\ud569\ud558\uace0, products\ub97c \uacb0\ud569\ud568. order_id \/ product_id \/ add_to_cart_order \/ reordered \/ product_name \/ aisle_id \/ department_id \ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc74c.**","6be4c0fe":"product_name\ubcc4\ub85c \uadf8\ub8f9\uc9c0\uc74c","b6d38b2e":"Word2Vec \uc2dc\uc791","88857830":"All_top10\uc5d0\uc11c user_order\uc744 \ub9cc\ub4e4\uace0 user_id\uc640 order_number, eval_set, product_count, product_id \ub97c \uc0ad\uc81c "}}