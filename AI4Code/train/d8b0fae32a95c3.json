{"cell_type":{"b147591e":"code","aabdc01b":"code","fe8e30d9":"code","67522558":"code","7ccb020a":"code","54811d72":"code","0bf9d1c8":"code","c87e819c":"code","ad2ccab9":"code","8f58d6b9":"code","ab1b9afe":"code","236064b9":"code","7eff0877":"code","38a72e3e":"code","48149102":"code","fa858497":"code","646faf38":"code","122d6bfb":"code","f0e9898b":"code","1eac63b8":"code","2f13fcf2":"code","5751069b":"code","621cc978":"code","98cceb41":"code","8e4e1f62":"code","5a70b3cb":"markdown","1fb116f2":"markdown"},"source":{"b147591e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aabdc01b":"train = pd.read_csv('\/kaggle\/input\/GiveMeSomeCredit\/cs-training.csv')\ntrain","fe8e30d9":"import seaborn as sns\nsns.boxplot(train['DebtRatio'])","67522558":"# Outlier deleted\ntrain = train[train['DebtRatio'] <50000]","7ccb020a":"test = pd.read_csv('\/kaggle\/input\/GiveMeSomeCredit\/cs-test.csv')\ntest","54811d72":"sub = pd.read_csv('\/kaggle\/input\/GiveMeSomeCredit\/sampleEntry.csv')","0bf9d1c8":"alldata = pd.concat([train, test])\nalldata","c87e819c":"alldata.dtypes","ad2ccab9":"alldata.isnull().sum()","8f58d6b9":"alldata2 = alldata.drop(columns = [\"Unnamed: 0\" , 'SeriousDlqin2yrs' ])\nalldata2","ab1b9afe":"alldata2 = alldata2.fillna(-1)\nalldata2","236064b9":"import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.boxplot(alldata2['DebtRatio'])","7eff0877":"sns.distplot(alldata2['DebtRatio'])","38a72e3e":"sns.boxplot(alldata2['NumberOfOpenCreditLinesAndLoans'])\n","48149102":"sns.distplot(alldata2['NumberOfOpenCreditLinesAndLoans'])","fa858497":"train2 = alldata2[:len(train)]\ntest2 = alldata2[len(train):]","646faf38":"# from sklearn.ensemble import RandomForestRegressor\n\n# model = RandomForestRegressor(n_jobs = -1)\n\n# from xgboost import XGBRegressor\n\n# model = XGBRegressor()\n\nfrom lightgbm import LGBMClassifier\n\nmodel = LGBMClassifier()","122d6bfb":"model.fit(train2, train['SeriousDlqin2yrs'])","f0e9898b":"# Regressor --> model.predict\nresult = model.predict_proba(test2)\nresult","1eac63b8":"sub","2f13fcf2":"#sub['Probability'] = result\nsub['Probability'] = result[:,1]\nsub","5751069b":"sub['Probability'].sort_values()[:30]","621cc978":"# sub[sub['Probability'] <0] = 0\n# sub[sub['Probability']>1] =1\n# sub['Id'] = sub.index +1","98cceb41":"sub","8e4e1f62":"sub.to_csv('sub1.csv', index = 0)","5a70b3cb":"# RF, XGB, LGBM ","1fb116f2":"# used for XGBRegressor with no hyperparameter tuning"}}