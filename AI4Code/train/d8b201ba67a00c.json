{"cell_type":{"c5cf2aed":"code","df306cae":"code","997f43c6":"code","ac28eee2":"code","261838ad":"code","7a90cb07":"code","ee8b8984":"code","7f5f1130":"code","822ac6b4":"code","cde54344":"code","c0fc7452":"code","9281765a":"code","5a967993":"code","48547032":"code","b96cd72e":"code","4794bdea":"code","a7a25acf":"code","ea1daa41":"code","5516ef52":"code","851e65ed":"code","d51f8839":"code","c623a2f5":"code","8f7d1ce7":"code","44cb40a1":"code","d048c60f":"code","3264ddd8":"code","a3baabdf":"code","0845bb8b":"code","bffa093d":"code","3d52b6a2":"code","4db78eb9":"code","44b461b5":"code","dcd5f4af":"code","f5b203dd":"code","74845e01":"code","b4f94cff":"code","6df27ba8":"code","935bb0bd":"code","f41457bb":"code","02131e48":"code","523909c1":"code","28275e2f":"code","e40f4269":"code","570005fb":"code","87affc7f":"code","337a611b":"code","c01471db":"code","ccbb0afc":"code","ca8ebb0b":"code","485695d9":"markdown","61207514":"markdown","4145857e":"markdown"},"source":{"c5cf2aed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","df306cae":"titanic_train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntitanic_test=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","997f43c6":"titanic_train.head()","ac28eee2":"#check null values\ntitanic_train.isnull().sum()","261838ad":"#Lets remove Cabin and Embarked \ntitanic_train.drop(['Cabin','Embarked'],axis=1,inplace=True)","7a90cb07":"# Lets impute the null values with mean or median\ntitanic_train.describe()","ee8b8984":"titanic_train.Age.value_counts()","7f5f1130":"import random\ntitanic_train['Age']=titanic_train['Age'].fillna(random.randint(24,30))","822ac6b4":"#again check for null values\ntitanic_train.isnull().sum()","cde54344":"#Let's convert the categorical value of Sex to binary[0,1]\ntitanic_train.Sex.replace(['male','female'],[0,1],inplace=True)","c0fc7452":"titanic_train.head()","9281765a":"#let's remove name and ticket where these variables don't significantly explain the data\ntitanic_train.drop(['Ticket','Name'],axis=1,inplace=True)","5a967993":"titanic_train.head()","48547032":"X_train=titanic_train.drop('Survived',axis=1)\ny_train=titanic_train.Survived","b96cd72e":"#lets scale the variables of titanic_train\nfrom sklearn.preprocessing import StandardScaler","4794bdea":"scale=StandardScaler()\nX_train[X_train.columns]=scale.fit_transform(X_train)","a7a25acf":"X_train.corr()","ea1daa41":"print(titanic_train.head())\nprint(X_train.head())","5516ef52":"#Lets apply RFE(recursive feature elimination)\nfrom sklearn.feature_selection import RFE\nfrom sklearn.linear_model import LogisticRegression","851e65ed":"model=LogisticRegression()","d51f8839":"rfe=RFE(model,6)\nX_train_rfe=rfe.fit(X_train,y_train)","c623a2f5":"list(zip(X_train.columns, X_train_rfe.support_, X_train_rfe.ranking_))","8f7d1ce7":"X_rfe=X_train.columns[X_train_rfe.support_]\nX_rfe_train=X_train[X_rfe]","44cb40a1":"X_rfe_train.head()","d048c60f":"model.fit(X_rfe_train,y_train)","3264ddd8":"y_pred=model.predict(X_rfe_train)","a3baabdf":"from sklearn import metrics","0845bb8b":"metrics.accuracy_score(y_train,y_pred)","bffa093d":"confusion=metrics.confusion_matrix(y_train,y_pred)\nprint(confusion)","3d52b6a2":"metrics.mean_squared_error(y_train,y_pred)","4db78eb9":"TP = confusion[1,1] # true positive \nTN = confusion[0,0] # true negatives\nFP = confusion[0,1] # false positives\nFN = confusion[1,0] # false negatives","44b461b5":"fpr, tpr, thresholds = metrics.roc_curve( y_train, y_pred, drop_intermediate = False )\nprint(fpr , tpr , thresholds)","dcd5f4af":"import matplotlib.pyplot as plt\nimport seaborn as sns","f5b203dd":"def draw_roc( actual, pred ):\n    fpr, tpr, thresholds = metrics.roc_curve( actual, pred,\n                                              drop_intermediate = False )\n    auc_score = metrics.roc_auc_score( actual, pred )\n    plt.figure(figsize=(5, 5))\n    plt.plot( fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score )\n    plt.plot([0, 1], [0, 1], 'k--')\n    plt.xlim([0.0, 1.0])\n    plt.ylim([0.0, 1.05])\n    plt.xlabel('False Positive Rate or [1 - True Negative Rate]')\n    plt.ylabel('True Positive Rate')\n    plt.title('Receiver operating characteristic example')\n    plt.legend(loc=\"lower right\")\n    plt.show()\n\n    return None","74845e01":"draw_roc(y_train,y_pred)","b4f94cff":"titanic_test['Age']=titanic_test['Age'].fillna(random.randint(24,30))\ntitanic_test['Fare']=titanic_test['Fare'].fillna(titanic_test.Fare.mean())","6df27ba8":"x_test=titanic_test[X_train.columns]","935bb0bd":"x_test.Sex.replace(['male','female'],[0,1],inplace=True)","f41457bb":"x_test.head()","02131e48":"x_test[x_test.columns]=scale.transform(x_test)","523909c1":"x_test.head()","28275e2f":"x_test.isnull().sum()","e40f4269":"x_test.drop('PassengerId',axis=1,inplace=True)","570005fb":"y_test=model.predict(x_test)","87affc7f":"y_test","337a611b":"len(y_test)","c01471db":"submission=pd.DataFrame({'PassengerId': titanic_test.PassengerId,'Survived':y_test})","ccbb0afc":"submission.head()","ca8ebb0b":"submission.to_csv('survival predictions',index=False)","485695d9":"We see more number of occurances of age is between 24 to 30 so lets impute randomly from 24 to 30","61207514":"#lets predict on test data","4145857e":"We can see that Age have 177 values are null,cabin have large values are null"}}