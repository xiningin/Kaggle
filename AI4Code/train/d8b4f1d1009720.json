{"cell_type":{"a6602e12":"code","5c345459":"code","bca1308d":"code","52e110b8":"code","35d0642a":"code","ba2db421":"code","05b8794e":"code","61b6690f":"code","1de1f0ef":"code","ee7a836b":"code","0b21f656":"markdown","e187a0c0":"markdown"},"source":{"a6602e12":"import numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import Ridge, LogisticRegression\nfrom sklearn.model_selection import KFold, StratifiedKFold, train_test_split\nfrom sklearn.metrics import mean_squared_error, f1_score\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import ExtraTreesClassifier\nimport lightgbm as lgb\nimport os\nprint(os.listdir('..\/input'))","5c345459":"train = pd.read_csv('..\/input\/klps-creditscring-challenge-for-students\/train.csv')\ntest = pd.read_csv('..\/input\/klps-creditscring-challenge-for-students\/test.csv')","bca1308d":"oof_cat1 = np.load('..\/input\/kalapa2-final-blending\/oof_cat_full_0.7619.npy')\noof_cat2 = np.load('..\/input\/kalapa2-final-blending\/oof_cat_full_0.7620.npy') \noof_cat3 = np.load('..\/input\/kalapa2-final-blending\/oof_cat_full_0.7620 (1).npy') \noof_cat4 = np.load('..\/input\/kalapa2-final-blending\/oof_cat_full_0.7621 (1).npy')  \noof_cat5 = np.load('..\/input\/kalapa2-final-blending\/oof_cat_full_0.7622 (1).npy')  \noof_cat6 = np.load('..\/input\/kalapa2-final-blending\/oof_cat_full_0.7625.npy') \n#oof_cat7 = np.load('..\/input\/kalapa2-final-blending\/oof_cat_full_0.7623.npy')  \noof_cat8 = np.load('..\/input\/kalapa2-final-blending\/oof_cat_full_0.7623 (1).npy')\noof_cat9 = np.load('..\/input\/kalapa2-final-blending\/oof_cat_full_0.7624.npy')\noof_cat10 = np.load('..\/input\/kalapa2-final-blending\/oof_cat_full_0.7624 (1).npy')\noof_cat11 = np.load('..\/input\/kalapa2-final-blending\/oof_cat_full_0.7625 (1).npy')\noof_cat12 = np.load('..\/input\/kalapa2-final-blending\/oof_cat_full_0.7625 (2).npy')\n#oof_cat13 = np.load('..\/input\/kalapa2-final-blending\/oof_cat_full_0.7626.npy')\noof_cat14 = np.load('..\/input\/kalapa2-final-blending\/oof_cat_full_0.7628.npy')\n\n# part2\noof_cat15 = np.load('..\/input\/kalapa2-final-blending-part2\/oof_cat_full_0.7621 (2).npy')\noof_cat16 = np.load('..\/input\/kalapa2-final-blending-part2\/oof_cat_full_0.7623 (2).npy')\noof_cat17 = np.load('..\/input\/kalapa2-final-blending-part2\/oof_cat_full_0.7624 (2).npy')\noof_cat18 = np.load('..\/input\/kalapa2-final-blending-part2\/oof_cat_full_0.7625 (4).npy')\noof_cat19 = np.load('..\/input\/kalapa2-final-blending-part2\/oof_cat_full_0.7627 (1).npy')\noof_cat20 = np.load('..\/input\/kalapa2-final-blending-part2\/oof_cat_full_0.7629.npy')\n\npred_cat1 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7619.csv')  \npred_cat2 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7620.csv') \npred_cat3 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7620 (1).csv') \npred_cat4 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7621 (1).csv') \npred_cat5 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7622 (1).csv') \npred_cat6 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7625.csv') \n#pred_cat7 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7623.csv') \npred_cat8 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7623 (1).csv')\npred_cat9 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7624.csv')\npred_cat10 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7624 (1).csv')\npred_cat11 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7625 (1).csv')\npred_cat12 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7625 (2).csv')\n#pred_cat13 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7626.csv')\npred_cat14 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7628.csv')\n\npred_cat15 = pd.read_csv('..\/input\/kalapa2-final-blending-part2\/Cat_full_0.7621 (2).csv')\npred_cat16 = pd.read_csv('..\/input\/kalapa2-final-blending-part2\/Cat_full_0.7623 (2).csv')\npred_cat17 = pd.read_csv('..\/input\/kalapa2-final-blending-part2\/Cat_full_0.7624 (2).csv')\npred_cat18 = pd.read_csv('..\/input\/kalapa2-final-blending-part2\/Cat_full_0.7625 (4).csv')\npred_cat19 = pd.read_csv('..\/input\/kalapa2-final-blending-part2\/Cat_full_0.7627 (1).csv')\npred_cat20 = pd.read_csv('..\/input\/kalapa2-final-blending-part2\/Cat_full_7629.csv')","52e110b8":"y = train['label']\n\nf_stack_train = pd.DataFrame({'cat1': oof_cat1.ravel(),\n                             'cat2': oof_cat2.ravel(),\n                             'cat3': oof_cat3.ravel(),\n                             'cat4': oof_cat4.ravel(),\n                             'cat5': oof_cat5.ravel(),\n                             'cat6': oof_cat6.ravel(),\n                             #'cat7': oof_cat7.ravel(),\n                              'cat8': oof_cat8.ravel(),\n                              'cat9': oof_cat9.ravel(),\n                              'cat10': oof_cat10.ravel(),\n                              #'cat11': oof_cat11.ravel(),\n                              #'cat12': oof_cat12.ravel(),\n                              #'cat13': oof_cat13.ravel(),\n                              'cat14': oof_cat14.ravel(),\n                              #'cat15': oof_cat15.ravel(),\n                              #'cat16': oof_cat16.ravel(),\n                              #'cat17': oof_cat17.ravel(),\n                             # 'cat18': oof_cat18.ravel(),\n                              #'cat19': oof_cat19.ravel(),\n                              'cat20': oof_cat20.ravel(),\n                             })\n\nf_stack_test = pd.DataFrame({'cat1': pred_cat1.label,\n                            'cat2': pred_cat2.label,\n                            'cat3': pred_cat3.label,\n                            'cat4': pred_cat4.label,\n                            'cat5': pred_cat5.label,\n                            'cat6': pred_cat6.label,\n                            #'cat7': pred_cat7.label,\n                             'cat8': pred_cat8.label,\n                             'cat9': pred_cat9.label,\n                             'cat10': pred_cat10.label,\n                             #'cat11': pred_cat11.label,\n                             #'cat12': pred_cat12.label,\n                            #'cat13': pred_cat13.label,\n                             'cat14': pred_cat14.label,\n                             #'cat15': pred_cat15.label,\n                            # 'cat16': pred_cat16.label,\n                             #'cat17': pred_cat17.label,\n                            # 'cat18': pred_cat18.label,\n                             #'cat19': pred_cat19.label,\n                             'cat20': pred_cat20.label,\n                            })","35d0642a":"f_stack_train","ba2db421":"f_stack_test","05b8794e":"from sklearn.metrics import roc_auc_score\n\nkf = StratifiedKFold(n_splits = 5, shuffle = True, random_state = 42)\nresu1 = 0\ny_pred = 0\nX_train = f_stack_train\ny_train = y\n\nstack_train = np.zeros([X_train.shape[0],])\nfor train_index, test_index in kf.split(f_stack_train.values, y.values):\n    X_train2= X_train.iloc[train_index,:]\n    y_train2= y_train.iloc[train_index]\n    X_test2= X_train.iloc[test_index,:]\n    y_test2= y_train.iloc[test_index]\n    clf = LogisticRegression(C=0.1,n_jobs=4,penalty=\"l2\")\n    \n    clf.fit(X_train2,y_train2)\n    \n    temp_predict = clf.predict_proba(X_test2)[:, 1]\n    stack_train[test_index] = temp_predict\n    \n    y_pred += clf.predict_proba(f_stack_test)[:, 1] \/ 5\n    \n    roc = roc_auc_score(y_test2, temp_predict)\n    print(roc)\n    resu1 += roc\/5\nprint(f'End:{resu1}')\n\nsub = pd.DataFrame({'id': test.id, 'label': y_pred})\nsub.to_csv('stacking_final.csv', index = False)\nsub.head(10)","61b6690f":"from sklearn.metrics import roc_auc_score\n\nkf = StratifiedKFold(n_splits = 5, shuffle = True, random_state = 42)\nresu1 = 0\ny_pred = 0\nX_train = f_stack_train\ny_train = y\n\nstack_train = np.zeros([X_train.shape[0],])\nfor train_index, test_index in kf.split(f_stack_train.values, y.values):\n    X_train2= X_train.iloc[train_index,:]\n    y_train2= y_train.iloc[train_index]\n    X_test2= X_train.iloc[test_index,:]\n    y_test2= y_train.iloc[test_index]\n    clf = LogisticRegression(C=0.01,n_jobs=4,penalty=\"l2\")\n    \n    clf.fit(X_train2,y_train2)\n    \n    temp_predict = clf.predict_proba(X_test2)[:, 1]\n    stack_train[test_index] = temp_predict\n    \n    y_pred += clf.predict_proba(f_stack_test)[:, 1] \/ 5\n    \n    roc = roc_auc_score(y_test2, temp_predict)\n    print(roc)\n    resu1 += roc\/5\nprint(f'End:{resu1}')\n\nsub = pd.DataFrame({'id': test.id, 'label': y_pred})\nsub.to_csv('stacking_final2.csv', index = False)\nsub.head(10)","1de1f0ef":"from sklearn.metrics import roc_auc_score\n\nkf = StratifiedKFold(n_splits = 5, shuffle = True, random_state = 42)\nresu1 = 0\ny_pred = 0\nX_train = f_stack_train\ny_train = y\n\nstack_train = np.zeros([X_train.shape[0],])\nfor train_index, test_index in kf.split(f_stack_train.values, y.values):\n    X_train2= X_train.iloc[train_index,:]\n    y_train2= y_train.iloc[train_index]\n    X_test2= X_train.iloc[test_index,:]\n    y_test2= y_train.iloc[test_index]\n    #clf = LogisticRegression(C=1,n_jobs=4,penalty=\"l2\")\n    clf = ExtraTreesClassifier(n_estimators = 150, random_state=42,\n                              max_depth = 3)\n    \n    clf.fit(X_train2,y_train2)\n    \n    temp_predict = clf.predict_proba(X_test2)[:, 1]\n    stack_train[test_index] = temp_predict\n    \n    y_pred += clf.predict_proba(f_stack_test)[:, 1] \/ 5\n    \n    roc = roc_auc_score(y_test2, temp_predict)\n    print(roc)\n    resu1 += roc\/5\nprint(f'End:{resu1}')\n\nsub = pd.DataFrame({'id': test.id, 'label': y_pred})\nsub.to_csv('stacking_extratree.csv', index = False)\nsub.head(10)","ee7a836b":"#### NON STABLE CATBOOST MODEL\ncat1 = pd.read_csv('..\/input\/kalapa2-cat-overfit-new-v1\/Cat_full_0.7609.csv') # best LB 0.53792\ncat2 = pd.read_csv('..\/input\/kalapa2-cat-overfit-new-v1\/Cat_full_0.7607 (4).csv') # 0.53779\n\ncat3 = pd.read_csv('..\/input\/kalapa2-cat-overfit-new-v1\/Cat_full_0.7606 (3).csv') # 0.53736\ncat4 = pd.read_csv('..\/input\/kalapa2-cat-overfit-new-v1\/Cat_full_0.7606 (2).csv') # 0.53711\n\ncat5 = pd.read_csv('..\/input\/kalapa2-cat-overfit-new-v1\/Cat_full_0.7608 (6).csv') # 0.5385\ncat6 = pd.read_csv('..\/input\/kalapa2-cat-overfit-new-v1\/Cat_full_0.7607 (5).csv') # 0.53814\n\ncat7 = pd.read_csv('..\/input\/kalapa2-cat-overfit-new-v1\/Cat_full_0.7619 (2).csv') # 0.53415 add more fe\n\ncat8 = pd.read_csv('..\/input\/kalapa2-cat-overfit-new-v1\/Cat_full_0.7607 (8).csv') # 0.53745\n\n###### STABLE CATBOOST MODEL\n\nnew1 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7625.csv')\nnew2 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7622 (1).csv')\nnew3 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7621 (1).csv')\nnew4 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7620 (1).csv')\nnew5 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7620.csv')\nnew6 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7619.csv')\n\n#pred_cat7 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7623.csv') #pd.read_csv('..\/input\/kalapa2-cat-overfit-new-v1\/Cat_full_0.7611 (1).csv')\nnew7 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7623 (1).csv')\nnew8 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7624.csv')\nnew9 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7624 (1).csv')\nnew10 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7625 (1).csv')\nnew11 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7625 (2).csv')\n#pred_cat13 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7626.csv')\nnew12 = pd.read_csv('..\/input\/kalapa2-final-blending\/Cat_full_0.7628.csv')\n\nnew13 = pd.read_csv('..\/input\/kalapa2-final-blending-part2\/Cat_full_0.7621 (2).csv')\nnew14 = pd.read_csv('..\/input\/kalapa2-final-blending-part2\/Cat_full_0.7623 (2).csv')\nnew15 = pd.read_csv('..\/input\/kalapa2-final-blending-part2\/Cat_full_0.7624 (2).csv')\nnew16 = pd.read_csv('..\/input\/kalapa2-final-blending-part2\/Cat_full_0.7625 (4).csv')\nnew17 = pd.read_csv('..\/input\/kalapa2-final-blending-part2\/Cat_full_0.7627 (1).csv')\nnew18 = pd.read_csv('..\/input\/kalapa2-final-blending-part2\/Cat_full_7629.csv')\n\n\na = (cat1['label']+cat2['label']+cat3['label']+cat4['label']+cat5['label']+cat6['label']+cat7['label']+cat8['label'])\/8 #*0.6 + 0.4*(sub5['label'] + sub6['label']+sub7['label'])\/3\nb= (new1['label']+new2['label']+new3['label']+new4['label']+new5['label']+new6['label']+new7['label']+new8['label']+new9['label']+new10['label']+new11['label']+new12['label'] + new13['label']+ new14['label'] + new15['label']+new16['label']+new17['label']+new18['label'])\/18\n\nsub = cat1.copy()\nsub['label'] = 0.5*a + 0.5*b\nsub.to_csv('blending_final.csv', index = False)\nsub.head(10)","0b21f656":"**PART1: STACKING STABLE MODEL: CatBoost + LogisticRegression**\n\n**10 CatBoost Model + LogisticRegression: Private LB: 0.46014 ----- Public LB: 0.52663**\n\n**14 CatBoost Model + LogisticRegression: Private LB: 0.46035 ---- Public LB: 0.52610**\n\n**Best Single CatBoost Model: Private LB: 0.46084 ---- Public LB: 0.52464 && 0.46087 -- 0.52461**","e187a0c0":"**PART2: BLENDING: stable catboost model + non stable catboost model:  (16 + 8) model**\n\n**Private: 0.46028 --- Public: 0.53486**"}}