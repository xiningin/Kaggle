{"cell_type":{"f332dc02":"code","9338297b":"code","9fbe0e68":"code","cb5c56f3":"code","955ac9ef":"code","9af2e886":"code","dee2c2fd":"code","1f95b535":"code","b59b914d":"code","ede71696":"code","344fb17e":"markdown","6e894416":"markdown","c76c96f2":"markdown","ffcf8523":"markdown","384e8593":"markdown","bb382bde":"markdown","541501e7":"markdown"},"source":{"f332dc02":"import spacy\nfrom spacy import displacy\n#spacy.prefer_gpu()\nnlp = spacy.load('en_core_web_sm') \n\nimport pandas as pd\nfrom bs4 import BeautifulSoup as bs4\nwinners = pd.read_csv('..\/input\/kaggle-blog-winners-posts\/WinnersInterviewBlogPosts.csv')\ndoc = nlp(bs4(winners.content[172]).get_text())\ndoc_sents = doc.sents","9338297b":"from IPython.display import Image\nImage(url='https:\/\/spacy.io\/assets\/img\/architecture.svg')","9fbe0e68":"displacy.render(list(doc_sents)[:1], style='dep', page=False, jupyter=True, options={'compact':True}) #test style='ent' with different options","cb5c56f3":"tokens = pd.DataFrame(\n    [[token.text, token.lemma_, token.pos_, token.tag_, token.dep_, token.shape_, token.is_alpha, token.is_stop, [child for child in token.children]] for token in doc],\n    columns=['text', 'lemma', 'pos', 'tag', 'dep', 'shape', 'is_alpha', 'is_stop', 'child'])\ntokens.head()","955ac9ef":"pd.DataFrame(\n    [[chunk.text, chunk.root.text, chunk.root.dep_, chunk.root.head.text] for chunk in doc.noun_chunks],\n    columns=['text', 'root.text', 'root.dep', 'root.head.text']).head()","9af2e886":"ent = pd.DataFrame(\n    [[ent.text, ent.start_char, ent.end_char, ent.label_] for ent in doc.ents],\n    columns=['text', 'start_char', 'end_char', 'label'])\nent.head()","dee2c2fd":"ent[ent['label'].isin(['ORG','NORP','PERSON'])]['text'].value_counts()[:20].reset_index().plot(kind='barh', x='index', y='text')","1f95b535":"tokens[((tokens['is_stop']==False) & (tokens['is_alpha']==True))]['text'].str.lower().value_counts()[:20].reset_index().plot(kind='bar', x='index', y='text')","b59b914d":"tokens[((tokens['is_stop']==True) & (tokens['is_alpha']==True))]['text'].str.lower().value_counts()[:20].reset_index().plot(kind='bar', x='index', y='text')","ede71696":"import matplotlib.pyplot as plt\nimport numpy as np\nfrom PIL import Image\nnp.random.seed(14)\n\np = '..\/input\/street-view-getting-started-with-julia\/'\nst_chars = pd.read_csv(p + '\/trainLabels.csv')\nst_chars['path'] = st_chars['ID'].map(lambda x: p + 'train\/train\/' + str(x) + '.Bmp')\n\ns = 'Happy   Kaggling'\nfig=plt.figure(figsize=(6, 4))\nfor i in range(len(s)):\n    fig.add_subplot(2, 8, i+1)\n    if s[i]==' ':\n        img = Image.new('RGB', (10,10), (255, 255, 255))\n    else:\n        p = np.random.choice(st_chars[st_chars['Class']==s[i]]['path'].values)\n        img = Image.open(p)\n    plt.imshow(img); plt.axis('off')\nplt.show()","344fb17e":"**A refresh of this dataset would be Awesome!**\n\nLets give it some new life with **spaCy**","6e894416":"**Tagging Text Made Simple**","c76c96f2":"**How does spaCy work**\n\nThe following SVG graphic from their site explains a lot more that I could\n* https:\/\/spacy.io\/usage\/spacy-101#section-architecture","ffcf8523":"**The available visualizations are a hit with the Explainability needed in ML, hope to see more in their roadmap**","384e8593":"****A solid new Natural Language Packag with many more features available for training and further segmentation, could have used this on the Home Depot Competition :)**\n* Enjoy the help guide: https:\/\/spacy.io\/usage\/\n* Also enjoy the Blog Posting: http:\/\/blog.kaggle.com\/2016\/06\/01\/home-depot-product-search-relevance-winners-interview-3rd-place-team-turing-test-igor-kostia-chenglong\/","bb382bde":"**Named Entities**\n\nThis would have been really helpfull in the two competitions below:\n* https:\/\/www.kaggle.com\/c\/text-normalization-challenge-english-language\n* https:\/\/www.kaggle.com\/c\/text-normalization-challenge-russian-language\n\nhttp:\/\/blog.kaggle.com\/2018\/02\/07\/a-brief-summary-of-the-kaggle-text-normalization-challenge\/","541501e7":"**Lets review the Word Token Stop Words feature**\n* There seems to be a little overlap on the Stop Words without preprocessing to lower"}}