{"cell_type":{"144a6864":"code","253987c1":"code","4d0e72ef":"code","b7f519b9":"code","42bbe8ef":"code","dd93f5d9":"code","6beef3fd":"code","6f5822b1":"code","737076e4":"code","c9e99e00":"code","513418bb":"code","e1948dd1":"code","a03e73ec":"code","dd57b8c9":"code","a10fa1ff":"code","7ce1c84f":"code","493559d0":"code","f002ef0b":"code","6e3b2439":"code","bbfac71f":"code","33e2292b":"code","e9319550":"code","bd4306b7":"code","b917415a":"code","b9620de4":"markdown","212935b5":"markdown","1da7680d":"markdown","35e4e026":"markdown","e8e4c921":"markdown","5a49e142":"markdown","ed50837b":"markdown","a3e80061":"markdown","1a5af06b":"markdown","b6d90e63":"markdown","26dbe0f4":"markdown","6de45643":"markdown","41bc3736":"markdown","9178017e":"markdown"},"source":{"144a6864":"#imports\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","253987c1":"#load the hourly data\nhourly_data = pd.read_csv(\"..\/input\/bike-sharing-dataset\/hour.csv\")\nhourly_data.head(10)","4d0e72ef":"#generic statistics about the data\nprint(f\"Shape of the dataset: {hourly_data.shape}\")\nprint(f\"Missing values in the dataset: {hourly_data.isnull().sum().sum()}\")","b7f519b9":"#statistics on the numerical columns and transposed result\nhourly_data.describe().T","42bbe8ef":"#details of rows and columns in the dataset\nhourly_data.info()","dd93f5d9":"#copy of original data\nnew_data = hourly_data.copy()\n\n#transform seasons\nseasons_mapping = {1: \"winter\", 2: \"spring\", 3: \"summer\", 4: \"fall\"}\nnew_data[\"season\"] = \\\nnew_data[\"season\"].apply(lambda x: seasons_mapping[x])\n\n#transform year\nyr_mapping = {0: 2011, 1: 2012}\nnew_data[\"yr\"] = \\\nnew_data[\"yr\"].apply(lambda x: yr_mapping[x])\n\n#transform weekday\nweekday_mapping = {0: \"Sunday\", 1: \"Monday\", 2: \"Tuesday\", \\\n                  3: \"Wednesday\", 4: \"Thursday\", 5: \"Friday\", \\\n                  6: \"Saturday\"}\nnew_data[\"weekday\"] = \\\nnew_data[\"weekday\"].apply(lambda x: weekday_mapping[x])\n\n#transform weather situation\nweather_mapping = {1: \"clear\", 2: \"cloudy\", 3: \"light_rain_snow\", \\\n                  4: \"heavy_rain_snow\"}\nnew_data[\"weathersit\"] = \\\nnew_data[\"weathersit\"].apply(lambda x: weather_mapping[x])\n\n#transform humidity and windspeed\nnew_data[\"hum\"] = new_data[\"hum\"] * 100\nnew_data[\"windspeed\"] = new_data[\"windspeed\"] * 67","6beef3fd":"#display preprocessed data\ncols = [\"season\", \"yr\", \"weekday\", \"weathersit\", \"hum\", \"windspeed\"]\nnew_data[cols].sample(10, random_state = 50, ignore_index=True)","6f5822b1":"#assert statement for casual and registered rides\nassert(new_data.casual + new_data.registered == \\\n       new_data.cnt).all(), \"Sum of casual and registered \" \\\n       \"rides not equal to total number of rides\"","737076e4":"#distributions of registered vs casual rides\nsns.histplot(new_data[\"registered\"], label=\"Registered\", \\\n             color=\"blue\", kde=True, stat=\"density\", linewidth=0)\nsns.histplot(new_data[\"casual\"], label=\"Casual\", color=\"orange\", \\\n             kde=True, stat=\"density\", linewidth=0)\nplt.legend()\nplt.xlabel(\"Rides\")\nplt.title(\"Rides Distributions\")\nplt.show()","c9e99e00":"#total number of rides for each day\nplot_data = new_data[[\"registered\", \"casual\", \"dteday\"]]\nrides = plot_data.groupby(\"dteday\").sum()\nprint(rides)","513418bb":"#evolution of rides overtime\nax = rides.plot(figsize=(10, 6))\nax.set_xlabel(\"Time\")\nax.set_ylabel(\"Number of rides per day\")","e1948dd1":"plot_data = new_data[[\"registered\", \"casual\", \"dteday\"]]\nplot_data = plot_data.groupby(\"dteday\").sum()\n\n#the rolling mean and standard deviation of rides\nwindow = 7\nroll_means = plot_data.rolling(window).mean()\nroll_stds = plot_data.rolling(window).std()","a03e73ec":"ax = roll_means.plot(figsize=(10,6))\nax.fill_between(roll_means.index,\n                roll_means[\"registered\"] + 2 * roll_stds[\"registered\"],\\\n                roll_means[\"registered\"] - 2 * roll_stds[\"registered\"],\\\n               alpha = 0.2)\nax.fill_between(roll_means.index,\n               roll_means[\"casual\"] + 2 * roll_stds[\"casual\"],\\\n               roll_means[\"casual\"] - 2 * roll_stds[\"casual\"],\\\n               alpha = 0.2)\nax.set_xlabel(\"Time\")\nax.set_ylabel(\"Number of rides per day\")","dd57b8c9":"#distributions of the requests over separated hours and days of the week\n\n#subset of relevant columns\nplot_data = new_data[[\"hr\", \"weekday\", \"registered\", \"casual\"]]\nplot_data = plot_data.melt(id_vars = [\"hr\", \"weekday\"], var_name = \\\n                          \"type\", value_name = \"count\")","a10fa1ff":"#distribution of rides on a daily and hourly basis\ngrid = sns.FacetGrid(plot_data, row = \"weekday\", col = \"type\",\\\n                    height = 2.5, aspect = 2.5, row_order = \\\n                    [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \\\n                    \"Friday\", \"Saturday\", \"Sunday\"])\ngrid.map(sns.barplot, \"hr\", \"count\", alpha = 0.5)","7ce1c84f":"#subset of relevant columns\nplot_data = new_data[[\"hr\", \"season\", \"registered\", \"casual\"]]\nplot_data = plot_data.melt(id_vars = [\"hr\",\"season\"], var_name = \"type\",\\\n              value_name = \"count\")","493559d0":"#distribution of rides on a seasonal level\ngrid = sns.FacetGrid(plot_data, row = \"season\", col = \"type\", \\\n                    height = 2.5, aspect = 2.5, row_order = \\\n                    [\"winter\", \"spring\", \"summer\", \"fall\"])\ngrid.map(sns.barplot, \"hr\", \"count\", alpha = 0.5)","f002ef0b":"#subset of relevant columns\nplot_data = new_data[[\"weekday\", \"season\", \"registered\", \"casual\"]]\nplot_data = plot_data.melt(id_vars = [\"weekday\", \"season\"], var_name \\\n                          = \"type\", value_name = \"count\")","6e3b2439":"#distribution of rides over the days of the week\ngrid = sns.FacetGrid(plot_data, row = \"season\", col = \"type\", \\\n                    height = 2.5, aspect = 2.5, row_order = \\\n                    [\"winter\", \"spring\", \"summer\", \"fall\"])\ngrid.map(sns.barplot, \"weekday\", \"count\", alpha = 0.5, order = \\\n        [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \\\n        \"Saturday\", \"Sunday\"])","bbfac71f":"#import\nfrom scipy.stats import ttest_1samp\nimport random","33e2292b":"#Population mean of registered rides\npopulation_mean = new_data.registered.mean()\nprint(population_mean)","e9319550":"#Sample data from Summer 2011\nsample = new_data[(new_data.season == \"summer\") & \\\n                  (new_data.yr == 2011)].registered\nprint(sample)","bd4306b7":"#T-test and P-value\ntest_result = ttest_1samp(sample, population_mean)\nprint(f\"Test Statistic: {test_result[0]}\\n\" \\\n     f\"P-value: {test_result[1]}\")","b917415a":"#5% sample of the full data\nrandom.seed(111)\nsample_unbiased = new_data.registered.sample(frac = 0.05)\ntest_result_unbiased = ttest_1samp(sample_unbiased, population_mean)\n\nprint(f\"Unbiased test statistic: {test_result_unbiased[0]}\\n\" \\\n     f\"P-value: {test_result_unbiased[1]}\")","b9620de4":"While each season has a similar graph shape, the count is lower for the winter graph. So, there are fewer rides during winter.","212935b5":"# **Registered vs Casual Use Analysis**\n\nThe number of rides performed by registered users versus the number of rides performed by non-registered (or casual) ones.","1da7680d":"# **Data Preprocessing** (Temporal and Weather Features)","35e4e026":"There is a decreasing number of registered rides over the weekend (compared to the rest of the week), while the number of casual rides increases. The registered customers mostly use the bike sharing service for commuting (which could be the reason for the decreasing number of registered rides over the weekend), while casual customers use the service occasionally over the weekend. Such conclusion cannot be based solely on plot observations but has to be backed by statistical tests.","e8e4c921":"The result of the previous test returns a p-value smaller than 0.001, which is less than the predefined critical value. Therefore, the null hypothesis is rejected, and assumes that the alternative hypothesis is correct.\n\nThe null hypothesis is rejected because the sample is not a true representation of the population, but rather a biased one. The sample selected are entries from the summer of 2011. Neither data from the full year is present, nor entries from 2012.","5a49e142":"## Number of Rides Each Day Analysis","ed50837b":"## Estimating Average Registered Rides","a3e80061":"The registered users perform way more rides than casual ones. Furthermore, the two distributions are skewed to the right. Since the data is positively skewed here, it means that it has a higher number of data points having low values, i.e., for most of the entries in the data, zero or small number of rides were registered. Finally, every entry in the data has quite a large number of rides (higher than 800).","1a5af06b":"Conclusion: most of the usage of bike sharing services occurs during working days, right before and right after the standard working time (9am-5pm).","b6d90e63":"Seed function is used to save the state of a random function, so that it can generate same random numbers on multiple executions of the code on the same machine or on different machines (for a specific seed value). The seed value is the previous value number generated by the generator. For the first time when there is no previous value, it uses current system time.\n\nThe computed p-value is larger than the critical 0.05, and so, the null hypothesis is accepted.","26dbe0f4":"# Hypothesis Tests","6de45643":"The number of registered rides is always above and significantly higher than the number of casual rides per day. Furthermore, during winter, the overall number of rides decreases.","41bc3736":"# **Data Analysis using Python and Pandas**\n\n\n**Overview:**\n\nThis is an analysis of bike sharing data for the period between January 1, 2011, and December 31, 2012. The bike sharing data is from Bikeshare in Washington, DC, USA, which is publicly available in http:\/\/capitalbikeshare.com\/system-data. The data is aggragated on an hourly basis. There is no initial and final locations of the individual rides available, but only the total number of rides per hour. Furthermore, additional meteorological information is available in the data, which can be a driving factor for identifying the demand of the bike sharing service.","9178017e":"# Seasonal Impact on Rides Analysis"}}