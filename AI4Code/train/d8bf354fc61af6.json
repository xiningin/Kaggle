{"cell_type":{"cf06fb1c":"code","896e2dad":"code","024ce7bb":"code","f407327d":"code","68296790":"code","c14b0fd4":"code","ecaed5ea":"code","f82edb69":"code","746ccd6e":"code","8834f030":"code","e9c250f0":"code","c5182c0c":"code","5ee652b7":"code","1b5b359f":"code","0a5f6294":"code","613b7bc8":"code","b6df2c96":"code","ae720d4d":"code","70d08c7b":"code","99efc034":"code","f16836bf":"code","ff5772d7":"code","53b97364":"code","3b1df828":"code","1749ccb2":"markdown","a3181d34":"markdown","dc7002b5":"markdown","179458af":"markdown","6033f00c":"markdown"},"source":{"cf06fb1c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","896e2dad":"from fastai import *\nfrom fastai.vision import *","024ce7bb":"path=Path(\"..\/input\/intel-image-classification\")\ntfms = get_transforms(do_flip=False)","f407327d":"data = ImageDataBunch.from_folder(path, train='seg_train', valid='seg_test',ds_tfms=tfms, size=224).normalize(imagenet_stats)","68296790":"data.show_batch(rows = 3,figsize=(5,5))","c14b0fd4":"print(data.classes)\nprint(len(data.train_ds))\nprint(len(data.valid_ds))","ecaed5ea":"learn = cnn_learner(data, models.resnet34, metrics=error_rate)","f82edb69":"learn.model","746ccd6e":"learn.model_dir =\"\/tmp\/model\/\"\n","8834f030":"learn.lr_find()","e9c250f0":"learn.recorder.plot()","c5182c0c":"learn.fit_one_cycle(4)","5ee652b7":"interp = ClassificationInterpretation.from_learner(learn)\n\nlosses,idxs = interp.top_losses()\n\nlen(data.valid_ds)==len(losses)==len(idxs)","1b5b359f":"interp.plot_top_losses(9, figsize=(15,11))","0a5f6294":"interp.plot_confusion_matrix(figsize=(12,12), dpi=60)","613b7bc8":"interp.most_confused(min_val=2)","b6df2c96":"data50 = ImageDataBunch.from_folder(path, train='seg_train', valid='seg_test',ds_tfms=tfms, size=300, bs=32).normalize(imagenet_stats)","ae720d4d":"learn50 = cnn_learner(data50, models.resnet50, metrics=error_rate)","70d08c7b":"learn50.model_dir =\"\/tmp\/model\/\"\nlearn50.lr_find()\nlearn50.recorder.plot()","99efc034":"learn50.fit_one_cycle(7)","f16836bf":"interp50 = ClassificationInterpretation.from_learner(learn50)\n\nlosses50,idxs50 = interp50.top_losses()\n\nlen(data50.valid_ds)==len(losses50)==len(idxs50)","ff5772d7":"interp50.plot_top_losses(9, figsize=(15,11))","53b97364":"interp50.plot_confusion_matrix(figsize=(12,12), dpi=60)","3b1df828":"interp50.most_confused(min_val=2)","1749ccb2":"\"learn\" is now our trained model and now lets see how well we have done.","a3181d34":"Find the optimum learning rate.","dc7002b5":"Use lr of 3e-3 default lr of fit_one_cycle is the same. Rest defaults here: https:\/\/docs.fast.ai\/train.html#fit_one_cycle ","179458af":"Use pretrained resnet34","6033f00c":"Now lets use pretrained resnet50"}}