{"cell_type":{"c4009b48":"code","a821562e":"code","81fadb50":"code","96396efb":"code","5110857e":"code","3bde1c85":"code","ef2dbe09":"code","d5275562":"code","0fc77665":"code","5fe7cc4b":"code","0b8d96d2":"code","941da21b":"code","2de06040":"code","7d9f3155":"code","77342a29":"code","86ec398c":"code","72d8b667":"code","baae0f24":"code","58aaf0b7":"code","2b3acb15":"code","2e04b122":"code","3efc104d":"code","5dc70c44":"code","830c315d":"code","bcfa98e3":"code","2b4a2286":"code","8344beb9":"code","deb09d84":"code","ead703d4":"code","70370798":"code","5da13038":"code","308e1211":"code","6ccea7fa":"code","5e546495":"code","0d9ef4ae":"code","328d1564":"code","7a298f31":"code","ad0e5d25":"code","6df32bef":"code","dc046a5c":"code","502e2a42":"code","33915ffa":"code","9d6b489f":"code","e4094d36":"code","a16bd089":"code","61ea78ef":"code","d462cd32":"code","5d8187e1":"code","4b0e52c9":"code","d8caa5a6":"code","e17f4f97":"code","3966b8af":"code","0d99e0e8":"code","f2740f97":"code","749d86ac":"code","55063bb5":"code","5397bc39":"code","fb29689a":"code","da6e9e29":"code","03818a75":"code","5b28c5cc":"code","5e77657c":"code","4d849ebb":"code","094fd008":"code","e1ef4067":"code","3df45f85":"code","83bce64a":"code","08e109a6":"code","2d3dafe9":"code","55605d90":"code","46472476":"code","10dc136f":"code","2fc5ab6d":"code","aca31452":"code","e5bd7a2c":"code","9d4bcf64":"code","e877e62c":"code","ca94ec10":"code","1c9c50d8":"code","03d038cf":"code","1b7e9edd":"code","d33a12f2":"code","c3172a2c":"code","3ea07796":"code","fbda4718":"code","d14ea3c0":"code","675978ad":"code","96e7ce0c":"code","56b873c3":"code","67557ae9":"code","c2eb78ed":"code","52c86eaf":"code","b958502f":"code","9aa8d040":"code","c904b1d4":"code","480754d5":"code","ad2edde7":"code","0d7037e5":"code","ae09b19a":"code","f34d471f":"code","54b7b563":"code","22f1da81":"code","e948a64f":"code","1501da9d":"code","3ea36007":"code","de7cb3e4":"code","1e8359fe":"code","415eac02":"code","d2acafdf":"code","1579394c":"code","acce1ba9":"code","64b73768":"code","6b5bf6e5":"code","02f1719a":"code","1c13b077":"code","1f62d6d1":"code","26eb00e0":"code","a8c5f1a0":"code","1b56f1fd":"code","36af442c":"code","4c285915":"code","4c2cd940":"code","316d7cd0":"code","b5ed6d49":"code","87c8ffc1":"code","33aec810":"code","68bbc135":"code","4fa7db9c":"code","c90af775":"code","6242c853":"code","22f8a0ac":"code","8ccf65aa":"code","b5edf7db":"code","2698cd12":"code","a2b19ad2":"code","fc185869":"code","788d4fa7":"code","d22aaa5d":"code","9761659d":"code","ecc3e4b1":"code","ec399d0c":"code","183b3514":"code","a49b8878":"code","e9b84e62":"code","de6cb665":"code","9d7b5a1b":"code","8ab9a238":"code","7f4f4091":"code","cf36672e":"code","d99ad31c":"code","e19faafd":"code","59815644":"code","6907cba4":"code","5718717b":"code","36d82a09":"code","1f793ac0":"code","d976817d":"code","a1931e35":"code","8da68629":"code","09b54a83":"code","d9ed88bf":"code","c1311601":"code","b29fdb8a":"code","4e13f21c":"code","1510dfd9":"code","f7904d55":"code","c586b805":"code","4f593330":"code","ce0845ce":"code","310a9087":"code","405b2024":"code","6a1e2e66":"code","7d58127e":"code","60dea395":"code","9e6434e5":"code","5d675d91":"code","18de4697":"code","36404d8d":"code","ecd2a45b":"code","6754fd49":"code","89ae2e29":"code","ef9f80dc":"code","b4ae41b7":"code","375afa1b":"code","fff4f411":"code","a9040d7b":"code","8b00ac43":"code","ebf81960":"code","f998d63b":"code","38b441f8":"code","33214203":"code","e5a63874":"code","0d99c15f":"code","73ec18aa":"code","859f7609":"code","e835ede6":"code","e6563d8a":"code","d9d6d06c":"code","2a9bda35":"code","73eb1bd6":"code","a6095eee":"code","9f808ade":"code","a0c9e28a":"code","17ab81bf":"code","a47c80b8":"code","ffe5d844":"code","662a0882":"code","4f3c0b95":"code","c75520b5":"code","91945549":"code","53ae05d0":"code","a6ecdf3c":"code","9688e96e":"code","433ba90e":"code","a930d3f7":"code","55e25adf":"code","7d6ef7bb":"code","b8ff7a06":"code","63c61141":"code","d722866c":"code","00a01dc3":"code","2d80a988":"code","74c215b3":"code","7771af0d":"code","c47e027b":"code","e0ee3680":"code","ccd092d5":"code","a711d767":"code","3e9a53eb":"code","bad7d7c7":"code","99174338":"code","fbb6c946":"code","95bf0389":"code","9c1ca3bd":"code","bad866d0":"code","1ddad790":"code","e37d28c7":"code","c31ab9e7":"code","de691fd1":"code","76696688":"code","61ec8868":"code","61b04650":"code","d3ed92a3":"code","2f79f804":"code","22c4377b":"code","4f0bd334":"code","6156aa09":"code","f879423e":"code","43cf57cb":"code","c3aca9d3":"code","317fd98d":"code","76c2aed6":"code","2be80a05":"code","c5c41d2c":"code","d51f7ce1":"code","85ab0429":"code","a3c3930b":"markdown","4908ba6c":"markdown","908562c0":"markdown","8cae09cc":"markdown","6663a974":"markdown","369bd7f3":"markdown","eef4ea01":"markdown","6da7c4dd":"markdown","ef2644e3":"markdown","40578b06":"markdown","0146d36d":"markdown","78ab297c":"markdown","9b49e16d":"markdown","5230357a":"markdown","d9c5e309":"markdown","a766f350":"markdown","2def2f58":"markdown","b3810e02":"markdown","a87ccd72":"markdown","550dc2c1":"markdown","b0cc5026":"markdown","1163050f":"markdown","5065c9b9":"markdown","958002b9":"markdown","fb585097":"markdown","49925265":"markdown","a387c69a":"markdown","3256631a":"markdown","41814145":"markdown","ccc36707":"markdown","9fd8a87a":"markdown","f387cca6":"markdown","2134a7f9":"markdown","440089d0":"markdown","b17896e6":"markdown","8764af75":"markdown","166c35bc":"markdown","8825fc59":"markdown","ac0426d5":"markdown","6f744447":"markdown","8a8f1c94":"markdown","34463cb5":"markdown","cdbbd177":"markdown","4c28593c":"markdown","35ad7466":"markdown","6456fc93":"markdown","2f3d8996":"markdown","94626687":"markdown","e5ccdb4f":"markdown","6be854a4":"markdown","9014eeff":"markdown","6cd65d60":"markdown","ee8324ec":"markdown","4e1492ee":"markdown","e9631553":"markdown","cd4e5bf4":"markdown","8874d27d":"markdown","0a372429":"markdown","d4d36ce4":"markdown","8aa18e10":"markdown","ca1c111b":"markdown","40046d73":"markdown","502cccf4":"markdown","aeb24fc6":"markdown","c2d35a4e":"markdown","0804b977":"markdown","6a3de9f8":"markdown","9492b161":"markdown","5d048149":"markdown","166cf89b":"markdown","7f949465":"markdown","5fbdc69d":"markdown","1a07325f":"markdown","7730283f":"markdown","faf375b3":"markdown","329f2424":"markdown","709db96d":"markdown","ac43153e":"markdown","c2f5f072":"markdown","f6b9d2e6":"markdown","5a164a0a":"markdown","7519f5ee":"markdown","6e7b8bf1":"markdown","168c25e1":"markdown","e4574421":"markdown","a88926b8":"markdown","b23d0d64":"markdown","00d14b2a":"markdown","03cae870":"markdown","b51a5e11":"markdown"},"source":{"c4009b48":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a821562e":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\npd.set_option('display.max_rows', 100)\npd.set_option('display.max_columns', 500)\n\nfrom sklearn.preprocessing import LabelEncoder,StandardScaler,RobustScaler\nfrom sklearn.metrics import mean_squared_error,r2_score\nfrom sklearn.model_selection import cross_val_score,GridSearchCV,RandomizedSearchCV,train_test_split,KFold\nfrom sklearn.linear_model import LinearRegression,Lasso,Ridge,ElasticNet\nfrom sklearn.ensemble import RandomForestRegressor,GradientBoostingRegressor\nimport statsmodels.regression.linear_model as sm\nimport xgboost as xgb\nfrom sklearn.pipeline import make_pipeline","81fadb50":"train = pd.read_csv(\"..\/input\/train.csv\")\ntest = pd.read_csv(\"..\/input\/test.csv\")","96396efb":"train.drop(train[(train['GrLivArea'] > 4000) & (train['SalePrice'] < 200000)].index,inplace=True)","5110857e":"train.dtypes.value_counts()","3bde1c85":"test.dtypes.value_counts()","ef2dbe09":"train.head()","d5275562":"test.head()","0fc77665":"train.shape,test.shape","5fe7cc4b":"train.drop('Id',axis=1,inplace=True)\nSubmission = test[['Id']]\ntest.drop('Id',axis=1,inplace=True)","0b8d96d2":"train_missing = pd.DataFrame(train.isna().sum()[train.isna().sum() !=0].sort_values())\ntrain_missing.columns = ['#Missing']\ntrain_missing['Percent_Missing'] = train.isna().sum()[train.isna().sum() !=0]\/len(train)\ntrain_missing","941da21b":"test_missing = pd.DataFrame(test.isna().sum()[test.isna().sum() !=0].sort_values())\ntest_missing.columns = ['#Missing']\ntest_missing['Percent_Missing'] = test.isna().sum()[test.isna().sum() !=0]\/len(test)\ntest_missing","2de06040":"train.drop(['PoolQC','MiscFeature','Alley','Fence','FireplaceQu'],axis=1,inplace=True)\ntest.drop(['PoolQC','MiscFeature','Alley','Fence','FireplaceQu'],axis=1,inplace=True)","7d9f3155":"for col in train.columns:\n    if train[col].dtype == \"object\":\n        print (\"Cardinality of %s variable in Train Data:\"%col,train[col].nunique())\n        print (\"Cardinality of %s variable in Test Data:\"%col,test[col].nunique())\n        print (\"\\n\")","77342a29":"train['SalePrice'].describe()","86ec398c":"sns.distplot(train['SalePrice'])\nplt.title(\"Distribution of Sale Price variable\")\nplt.xlabel(\"Price\")","72d8b667":"sns.boxplot(train['SalePrice'],orient='vert')","baae0f24":"train.drop(train.index[[691,1182]],inplace=True)\ntrain['SalePrice'] = np.log(train['SalePrice'])","58aaf0b7":"sns.distplot(train['SalePrice'])","2b3acb15":"train['MSSubClass'].value_counts(dropna=False).sort_values().plot(kind='bar')","2e04b122":"test['MSSubClass'].value_counts(dropna=False).sort_values().plot(kind='bar')","3efc104d":"plt.figure(figsize=(8,8))\nsns.boxplot(x=train['MSSubClass'],y=train['SalePrice'])","5dc70c44":"train.groupby('MSSubClass')['SalePrice'].mean().sort_values().plot(kind='bar')","830c315d":"train['MSSubClass'] = train['MSSubClass'].astype(str)\ntest['MSSubClass'] = test['MSSubClass'].astype(str)","bcfa98e3":"train['MSZoning'].value_counts(dropna=False).sort_values().plot(kind='bar')","2b4a2286":"sns.boxplot(x=train['MSZoning'],y=train['SalePrice'])","8344beb9":"train.groupby('MSZoning')['SalePrice'].mean().sort_values().plot(kind='bar')","deb09d84":"test['MSZoning'].fillna(test['MSZoning'].value_counts(dropna=False).index[0],inplace=True)","ead703d4":"train['LotFrontage'] = train.groupby('Neighborhood')['LotFrontage'].transform(lambda x: x.fillna(x.median()))\ntest['LotFrontage'] = test.groupby('Neighborhood')['LotFrontage'].transform(lambda x: x.fillna(x.median()))","70370798":"train['LotArea'].describe()","5da13038":"sns.scatterplot(x=train['LotArea'],y=train['SalePrice'])","308e1211":"train['Street'].value_counts(dropna=False)","6ccea7fa":"test['Street'].value_counts(dropna=False)","5e546495":"train.drop('Street',axis=1,inplace=True)\ntest.drop('Street',axis=1,inplace=True)","0d9ef4ae":"train['LotShape'].value_counts(dropna=False).sort_values().plot(kind='bar')","328d1564":"test['LotShape'].value_counts(dropna=False).sort_values().plot(kind='bar')","7a298f31":"sns.boxplot(x=train['LotShape'],y=train['SalePrice'])","ad0e5d25":"train['LandContour'].value_counts(dropna=False).sort_values().plot(kind='bar')","6df32bef":"test['LandContour'].value_counts(dropna=False).sort_values().plot(kind='bar')","dc046a5c":"sns.boxplot(train['LandContour'],train['SalePrice'])","502e2a42":"train['Utilities'].value_counts(dropna=False)","33915ffa":"test['Utilities'].value_counts(dropna=False)","9d6b489f":"train.drop('Utilities',axis=1,inplace=True)\ntest.drop('Utilities',axis=1,inplace=True)","e4094d36":"train['LotConfig'].value_counts(dropna=False).sort_values().plot(kind='bar')","a16bd089":"sns.boxplot(x=train['LotConfig'],y=train['SalePrice'])","61ea78ef":"train.drop('LandSlope',axis=1,inplace=True)\ntest.drop('LandSlope',axis=1,inplace=True)","d462cd32":"train['Neighborhood'].value_counts(dropna=False).sort_values().plot(kind='bar')","5d8187e1":"plt.figure(figsize=(12,12))\nsns.boxplot(x=train['Neighborhood'],y=train['SalePrice'])","4b0e52c9":"train.groupby('Neighborhood')['SalePrice'].agg(['count','min','max','mean']).sort_values(by='count')","d8caa5a6":"train['Condition1'].value_counts(dropna=False).sort_values().plot(kind='bar')","e17f4f97":"test['Condition1'].value_counts(dropna=False).sort_values().plot(kind='bar')","3966b8af":"train.groupby('Condition1')['SalePrice'].agg(['count','min','max','mean']).sort_values(by='count')","0d99e0e8":"train.drop('Condition2',axis=1,inplace=True)\ntest.drop('Condition2',axis=1,inplace=True)","f2740f97":"train['BldgType'].value_counts(dropna=False).sort_values().plot(kind='bar')","749d86ac":"test['BldgType'].value_counts(dropna=False)","55063bb5":"sns.boxplot(x=train['BldgType'],y=train['SalePrice'])","5397bc39":"train['HouseStyle'].value_counts(dropna=False).sort_values().plot(kind='bar')","fb29689a":"test['HouseStyle'].value_counts(dropna=False).sort_values().plot(kind='bar')","da6e9e29":"train['HouseStyle'].value_counts(dropna=False)","03818a75":"test['HouseStyle'].value_counts(dropna=False)","5b28c5cc":"train['OverallQual'].value_counts(dropna=False).sort_values().plot(kind='bar')","5e77657c":"sns.boxplot(train['OverallQual'],train['SalePrice'])","4d849ebb":"sns.scatterplot(train['OverallQual'],train['SalePrice'])","094fd008":"train.groupby('OverallQual')['SalePrice'].agg(['count','min','max','mean']).sort_values(by='count')","e1ef4067":"#train['OverallQual'] = train['OverallQual'].astype(str)\n#test['OverallQual'] = test['OverallQual'].astype(str)","3df45f85":"train['OverallCond'].value_counts(dropna=False).sort_values().plot(kind='bar')","83bce64a":"sns.boxplot(train['OverallCond'],train['SalePrice'])","08e109a6":"train.groupby('OverallCond')['SalePrice'].agg(['count','min','max','mean']).sort_values(by='count')","2d3dafe9":"plt.figure(figsize=(14,14))\nsns.boxplot(train['YearBuilt'],train['SalePrice'])","55605d90":"train['YearBuilt'].value_counts(dropna=False).sort_values(ascending=False).head()","46472476":"plt.figure(figsize=(14,14))\nsns.boxplot(train['YearRemodAdd'],train['SalePrice'])","10dc136f":"train['YearRemodAdd'].value_counts(dropna=False).sort_values(ascending=False).head()","2fc5ab6d":"train['RoofStyle'].value_counts(dropna=False).sort_values().plot(kind='bar')","aca31452":"sns.boxplot(train['RoofStyle'],train['SalePrice'])","e5bd7a2c":"train['RoofMatl'].value_counts(dropna=False)","9d4bcf64":"test['RoofMatl'].value_counts(dropna=False)","e877e62c":"train['Exterior1st'].value_counts(dropna=False)","ca94ec10":"test['Exterior1st'].value_counts(dropna=False)","1c9c50d8":"test['Exterior1st'].fillna(test['Exterior1st'].value_counts(dropna=False).index[0],inplace=True)","03d038cf":"train['Exterior1st'].nunique(),test['Exterior1st'].nunique()","1b7e9edd":"train['Exterior2nd'].value_counts(dropna=False)","d33a12f2":"test['Exterior2nd'].value_counts(dropna=False)","c3172a2c":"test['Exterior2nd'].fillna(test['Exterior2nd'].value_counts(dropna=False).index[0],inplace=True)","3ea07796":"train['Exterior2nd'].nunique(),test['Exterior2nd'].nunique()","fbda4718":"train['MasVnrType'].value_counts(dropna=False).sort_values().plot(kind='bar')","d14ea3c0":"train['MasVnrType'].fillna(\"None\",inplace=True)\ntest['MasVnrType'].fillna(\"None\",inplace=True)","675978ad":"train['MasVnrArea'].fillna(0,inplace=True)\ntest['MasVnrArea'].fillna(0,inplace=True)","96e7ce0c":"sns.scatterplot(train['MasVnrArea'],train['SalePrice'])","56b873c3":"train['ExterQual'].value_counts(dropna=False).sort_values().plot(kind='bar')","67557ae9":"sns.boxplot(train['ExterQual'],train['SalePrice'])","c2eb78ed":"train.groupby('ExterQual')['SalePrice'].agg(['count','min','max','mean']).sort_values(by='count')","52c86eaf":"train['ExterCond'].value_counts(dropna=False).sort_values().plot(kind='bar')","b958502f":"sns.boxplot(train['ExterCond'],train['SalePrice'])","9aa8d040":"train.groupby('ExterCond')['SalePrice'].agg(['count','min','max','mean']).sort_values(by='count')","c904b1d4":"train['Foundation'].value_counts(dropna=False).sort_values().plot(kind='bar')","480754d5":"sns.boxplot(train['Foundation'],train['SalePrice'])","ad2edde7":"train.groupby('Foundation')['SalePrice'].agg(['count','min','max','mean']).sort_values(by='count')","0d7037e5":"train['BsmtQual'].value_counts(dropna=False).sort_values().plot(kind='bar')","ae09b19a":"train['BsmtQual'].fillna(\"No_Basement\",inplace=True)\ntest['BsmtQual'].fillna(\"No_Basement\",inplace=True)","f34d471f":"train.groupby('BsmtQual')['SalePrice'].agg(['count','min','max','mean']).sort_values(by='count')","54b7b563":"train['BsmtCond'].value_counts(dropna=False)","22f1da81":"train['BsmtCond'].fillna(\"No_Basement\",inplace=True)\ntest['BsmtCond'].fillna(\"No_Basement\",inplace=True)","e948a64f":"train['BsmtExposure'].value_counts(dropna=False).sort_values().plot(kind='bar')","1501da9d":"train['BsmtExposure'].fillna(\"No_Basement\",inplace=True)\ntest['BsmtExposure'].fillna(\"No_Basement\",inplace=True)","3ea36007":"train['BsmtFinType1'].value_counts(dropna=False).sort_values().plot(kind='bar')","de7cb3e4":"train['BsmtFinType1'].fillna(\"No_Basement\",inplace=True)\ntest['BsmtFinType1'].fillna(\"No_Basement\",inplace=True)","1e8359fe":"test['BsmtFinSF1'].fillna(0,inplace=True)","415eac02":"sns.scatterplot(train['BsmtFinSF1'],train['SalePrice'])","d2acafdf":"train['BsmtFinType2'].fillna(\"No_Basement\",inplace=True)\ntest['BsmtFinType2'].fillna(\"No_Basement\",inplace=True)","1579394c":"sns.scatterplot(train['BsmtFinSF2'],train['SalePrice'])","acce1ba9":"test['BsmtFinSF2'].fillna(0,inplace=True)","64b73768":"test['BsmtUnfSF'].fillna(0,inplace=True)","6b5bf6e5":"sns.scatterplot(train['BsmtUnfSF'],train['SalePrice'])","02f1719a":"train['TotalBsmtSF'].isna().sum(),test['TotalBsmtSF'].isna().sum()","1c13b077":"test['TotalBsmtSF'].fillna(0,inplace=True)","1f62d6d1":"sns.scatterplot(train['TotalBsmtSF'],train['SalePrice'])","26eb00e0":"train['Heating'].value_counts(dropna=False)","a8c5f1a0":"test['Heating'].value_counts(dropna=False)","1b56f1fd":"train.groupby('Heating')['SalePrice'].agg(['count','min','max','mean'])","36af442c":"train['HeatingQC'].isna().sum(),test['HeatingQC'].isna().sum()","4c285915":"train['HeatingQC'].value_counts().sort_values().plot(kind='bar')","4c2cd940":"sns.boxplot(train['HeatingQC'],train['SalePrice'])","316d7cd0":"train['CentralAir'].value_counts(dropna=False).sort_values().plot(kind='bar')","b5ed6d49":"train.groupby('CentralAir')['SalePrice'].agg(['count','min','max','mean']).sort_values(by='count')","87c8ffc1":"train['Electrical'].value_counts(dropna=False)","33aec810":"test['Electrical'].value_counts(dropna=False)","68bbc135":"train['Electrical'].fillna(train['Electrical'].value_counts(dropna=False).index[0],inplace=True)","4fa7db9c":"train['1stFlrSF'].describe()","c90af775":"sns.scatterplot(train['1stFlrSF'],train['SalePrice'])","6242c853":"train.drop(train.index[1300],inplace=True)","22f8a0ac":"train['2ndFlrSF'].describe()","8ccf65aa":"len(train[train['2ndFlrSF'] == 0])\/len(train)","b5edf7db":"sns.scatterplot(train['2ndFlrSF'],train['SalePrice'])","2698cd12":"sns.scatterplot(train['LowQualFinSF'],train['SalePrice'])","a2b19ad2":"train.drop('LowQualFinSF',axis=1,inplace=True)\ntest.drop('LowQualFinSF',axis=1,inplace=True)","fc185869":"sns.scatterplot(train['GrLivArea'],train['SalePrice'])","788d4fa7":"train['GrLivArea'].isna().sum(),test['GrLivArea'].isna().sum()","d22aaa5d":"train['BsmtFullBath'].value_counts(dropna=False).sort_values().plot(kind='bar')","9761659d":"sns.boxplot(train['BsmtFullBath'],train['SalePrice'])","ecc3e4b1":"train.groupby('BsmtFullBath')['SalePrice'].agg(['count','min','max','mean']).sort_values(by='count')","ec399d0c":"test['BsmtFullBath'].fillna(0,inplace=True)","183b3514":"train['BsmtHalfBath'].value_counts(dropna=False).sort_values().plot(kind='bar')","a49b8878":"test['BsmtHalfBath'].fillna(0,inplace=True)","e9b84e62":"train['FullBath'].value_counts(dropna=False).sort_values().plot(kind='bar')","de6cb665":"sns.boxplot(train['FullBath'],train['SalePrice'])","9d7b5a1b":"train['HalfBath'].value_counts(dropna=False)","8ab9a238":"test['HalfBath'].value_counts(dropna=False)","7f4f4091":"train['BedroomAbvGr'].value_counts(dropna=False).sort_values().plot(kind='bar')","cf36672e":"sns.boxplot(train['BedroomAbvGr'],train['SalePrice'])","d99ad31c":"train['KitchenAbvGr'].value_counts(dropna=False).sort_values().plot(kind='bar')","e19faafd":"train['KitchenQual'].value_counts(dropna=False).sort_values().plot(kind='bar')","59815644":"train.groupby('KitchenQual')['SalePrice'].agg(['count','min','max','mean']).sort_values(by='count')","6907cba4":"test['KitchenQual'].fillna(test['KitchenQual'].value_counts(dropna=False).index[0],inplace=True)","5718717b":"train['TotRmsAbvGrd'].value_counts(dropna=False).sort_index()","36d82a09":"sns.boxplot(train['TotRmsAbvGrd'],train['SalePrice'])","1f793ac0":"train['Functional'].value_counts(dropna=False).sort_values()","d976817d":"test['Functional'].fillna(test['Functional'].value_counts(dropna=False).index[0],inplace=True)","a1931e35":"sns.boxplot(train['Functional'],train['SalePrice'])","8da68629":"train['Fireplaces'].value_counts(dropna=False).sort_index()","09b54a83":"sns.scatterplot(train['Fireplaces'],train['SalePrice'])","d9ed88bf":"train.groupby('Fireplaces')['SalePrice'].agg(['count','min','max','mean']).sort_values(by='count')","c1311601":"train['GarageType'].isna().sum(),test['GarageType'].isna().sum()","b29fdb8a":"train['GarageType'].value_counts(dropna=False).sort_values().plot(kind='bar')","4e13f21c":"sns.boxplot(train['GarageType'],train['SalePrice'])","1510dfd9":"train['GarageType'].fillna(\"No_Garage\",inplace=True)\ntest['GarageType'].fillna(\"No_Garage\",inplace=True)","f7904d55":"train.groupby('GarageType')['SalePrice'].agg(['count','min','max','mean']).sort_values(by='count')","c586b805":"train['GarageYrBlt'].isna().sum(),test['GarageYrBlt'].isna().sum()","4f593330":"train['GarageYrBlt'].fillna(0,inplace=True)\ntest['GarageYrBlt'].fillna(0,inplace=True)","ce0845ce":"train['GarageYrBlt'].value_counts().sort_values(ascending=False).head()","310a9087":"plt.figure(figsize=(14,14))\nsns.boxplot(train['GarageYrBlt'],train['SalePrice'])","405b2024":"test.loc[1132,'GarageYrBlt'] = 2007","6a1e2e66":"train['GarageFinish'].isna().sum(),test['GarageFinish'].isna().sum()","7d58127e":"train['GarageFinish'].fillna(\"No_Garage\",inplace=True)\ntest['GarageFinish'].fillna(\"No_Garage\",inplace=True)","60dea395":"train.groupby('GarageFinish')['SalePrice'].agg(['count','min','max','mean']).sort_values(by='count')","9e6434e5":"sns.boxplot(train['GarageFinish'],train['SalePrice'])","5d675d91":"train['GarageCars'].isna().sum(),test['GarageCars'].isna().sum()","18de4697":"test['GarageCars'].fillna(0,inplace=True)","36404d8d":"train['GarageCars'].value_counts().sort_values().plot(kind='bar')","ecd2a45b":"sns.boxplot(train['GarageCars'],train['SalePrice'])","6754fd49":"train['GarageArea'].isna().sum(),test['GarageArea'].isna().sum()","89ae2e29":"train['GarageArea'].describe()","ef9f80dc":"sns.scatterplot(train['GarageArea'],train['SalePrice'])","b4ae41b7":"test['GarageArea'].fillna(0,inplace=True)","375afa1b":"train['GarageQual'].isna().sum(),test['GarageQual'].isna().sum()","fff4f411":"train['GarageQual'].fillna(\"No_Garage\",inplace=True)\ntest['GarageQual'].fillna(\"No_Garage\",inplace=True)","a9040d7b":"train['GarageQual'].value_counts().sort_values(ascending=False)","8b00ac43":"test['GarageQual'].value_counts().sort_values(ascending=False)","ebf81960":"train.groupby('GarageQual')['SalePrice'].agg(['count','min','max','mean']).sort_values(by='count')","f998d63b":"train['GarageCond'].isna().sum(),test['GarageCond'].isna().sum()","38b441f8":"train['GarageCond'].fillna(\"No_Garage\",inplace=True)\ntest['GarageCond'].fillna(\"No_Garage\",inplace=True)","33214203":"train['GarageCond'].value_counts().sort_values().plot(kind='bar')","e5a63874":"sns.boxplot(train['GarageCond'],train['SalePrice'])","0d99c15f":"train['PavedDrive'].isna().sum(),test['PavedDrive'].isna().sum()","73ec18aa":"train['PavedDrive'].value_counts()","859f7609":"test['PavedDrive'].value_counts()","e835ede6":"train['WoodDeckSF'].isna().sum(),test['WoodDeckSF'].isna().sum()","e6563d8a":"sns.scatterplot(train['WoodDeckSF'],train['SalePrice'])","d9d6d06c":"train['OpenPorchSF'].isna().sum(),test['OpenPorchSF'].isna().sum()","2a9bda35":"sns.scatterplot(train['OpenPorchSF'],train['SalePrice'])","73eb1bd6":"train['EnclosedPorch'].isna().sum(),test['EnclosedPorch'].isna().sum()","a6095eee":"sns.scatterplot(train['EnclosedPorch'],train['SalePrice'])","9f808ade":"train['3SsnPorch'].isna().sum(),test['3SsnPorch'].isna().sum()","a0c9e28a":"sns.scatterplot(train['3SsnPorch'],train['SalePrice'])","17ab81bf":"train['ScreenPorch'].isna().sum(),test['ScreenPorch'].isna().sum()","a47c80b8":"sns.scatterplot(train['ScreenPorch'],train['SalePrice'])","ffe5d844":"train['PoolArea'].isna().sum(),test['PoolArea'].isna().sum()","662a0882":"sns.scatterplot(train['PoolArea'],train['SalePrice'])","4f3c0b95":"sns.scatterplot(train['MiscVal'],train['SalePrice'])","c75520b5":"train['MoSold'].isna().sum(),test['MoSold'].isna().sum()","91945549":"train['MoSold'].value_counts().sort_values().plot(kind='bar')","53ae05d0":"sns.boxplot(train['MoSold'],train['SalePrice'])","a6ecdf3c":"train.groupby('MoSold')['SalePrice'].agg(['count','min','max','mean']).sort_index()","9688e96e":"train['MoSold'] = train['MoSold'].astype(str)\ntest['MoSold'] = test['MoSold'].astype(str)","433ba90e":"train['YrSold'].isna().sum(),test['YrSold'].isna().sum()","a930d3f7":"train['YrSold'].value_counts().sort_values(ascending=False).head(10)","55e25adf":"sns.boxplot(train['YrSold'],train['SalePrice'])","7d6ef7bb":"train.groupby(['MoSold','YrSold'])['SalePrice'].count().sort_values(ascending=False)","b8ff7a06":"train['YrSold'] = train['YrSold'].astype(str)\ntest['YrSold'] = test['YrSold'].astype(str)","63c61141":"train['SaleType'].isna().sum(),test['SaleType'].isna().sum()","d722866c":"test['SaleType'].fillna(test['SaleType'].value_counts().index[0],inplace=True)","00a01dc3":"train['SaleType'].value_counts().sort_values().plot(kind='bar')","2d80a988":"test['SaleType'].value_counts().sort_values().plot(kind='bar')","74c215b3":"train['SaleCondition'].isna().sum(),test['SaleCondition'].isna().sum()","7771af0d":"train['SaleCondition'].value_counts().sort_values().plot(kind='bar')","c47e027b":"test['SaleCondition'].value_counts().sort_values().plot(kind='bar')","e0ee3680":"#train['Total_sqr_footage'] = (train['BsmtFinSF1'] + train['BsmtFinSF2'] + train['1stFlrSF'] + train['2ndFlrSF'])\ntrain['Total_Bathrooms'] = (train['FullBath'] + (0.5*train['HalfBath']) +  train['BsmtFullBath'] + (0.5*train['BsmtHalfBath']))\ntrain['Total_porch_sf'] = (train['OpenPorchSF'] + train['3SsnPorch'] + train['EnclosedPorch'] + train['ScreenPorch'] + train['WoodDeckSF'])\n\n#test['Total_sqr_footage'] = (test['BsmtFinSF1'] + test['BsmtFinSF2'] + test['1stFlrSF'] + test['2ndFlrSF'])\ntest['Total_Bathrooms'] = (test['FullBath'] + (0.5*test['HalfBath']) +  test['BsmtFullBath'] + (0.5*test['BsmtHalfBath']))\ntest['Total_porch_sf'] = (test['OpenPorchSF'] + test['3SsnPorch'] + test['EnclosedPorch'] + test['ScreenPorch'] + test['WoodDeckSF'])","ccd092d5":"train.isna().sum()[train.isna().sum() !=0]","a711d767":"test.isna().sum()[test.isna().sum() !=0]","3e9a53eb":"for col in train.columns:\n    if train[col].dtype == \"object\":\n        print (\"Cardinality of %s variable in Training Data:\"%col,train[col].nunique())\n        print (\"Cardinality of %s variable in Testing Data:\"%col,test[col].nunique())\n        print (\"\\n\")","bad7d7c7":"## Plot sizing. \nplt.subplots(figsize = (35,20))\n## plotting heatmap.  \nsns.heatmap(train.corr(), cmap=\"BrBG\", annot=True, center = 0, );\n## Set the title. \nplt.title(\"Heatmap of all the Features\", fontsize = 30);","99174338":"train.corr()['SalePrice'].sort_values(ascending=False)","fbb6c946":"train.drop(['GarageCars','TotRmsAbvGrd','1stFlrSF'],axis=1,inplace=True)\ntest.drop(['GarageCars','TotRmsAbvGrd','1stFlrSF'],axis=1,inplace=True)","95bf0389":"train.corr()['SalePrice'].sort_values(ascending=False)","9c1ca3bd":"# saleprice correlation matrix\ncorr_num = 20 #number of variables for heatmap\ncols_corr = train.corr().nlargest(corr_num, 'SalePrice')['SalePrice'].index\ncorr_mat_sales = np.corrcoef(train[cols_corr].values.T)\nsns.set(font_scale=1.25)\nf, ax = plt.subplots(figsize=(15,15))\nhm = sns.heatmap(corr_mat_sales, vmax=.8, linewidths=0.01,square=True,annot=True,cmap='viridis',\n            linecolor=\"white\",annot_kws = {'size':12}, yticklabels=cols_corr.values, xticklabels=cols_corr.values)\nplt.show()","bad866d0":"train.shape, test.shape","1ddad790":"trn = train.copy()\ntst = test.copy()","e37d28c7":"y = train['SalePrice']\ntrain.drop('SalePrice',inplace=True,axis=1)\nlen_train = len(train)\nfull_data = pd.concat([train,test],axis=0).reset_index(drop=True)\nfull_data = pd.get_dummies(full_data)\ntrain = full_data[:len_train]\ntest = full_data[len_train:]","c31ab9e7":"train.shape, test.shape","de691fd1":"set(train.columns)-set(test.columns)","76696688":"overfit = []\nfor col in train.columns:\n    counts = train[col].value_counts()\n    zeros = counts.iloc[0]\n    if zeros \/ len(train) * 100 >99:\n        overfit.append(col)\nprint (len(overfit))","61ec8868":"train.drop(overfit,axis=1,inplace=True)\ntest.drop(overfit,axis=1,inplace=True)","61b04650":"X = train","d3ed92a3":"X_Train,X_Test,y_Train,y_Test = train_test_split(X,y,test_size=0.25)\nprint (\"X_Train Shape:\",X_Train.shape)\nprint (\"X_Test Shape:\",X_Test.shape)\nprint (\"y_Train Shape:\",y_Train.shape)\nprint (\"y_Test Shape:\",y_Test.shape)","2f79f804":"kfolds = KFold(n_splits=5, shuffle=True)\ndef rmse(true,pred):\n    return np.sqrt(mean_squared_error(true,pred))\ndef feature_importance(model,data):\n    ser = pd.Series(model.coef_,data.columns).sort_values()\n    plt.figure(figsize=(14,14))\n    ser.plot(kind='bar')\ndef cv_score(model):\n    return np.mean(np.sqrt(-(cross_val_score(model,X,y,cv=kfolds,scoring='neg_mean_squared_error'))))\ndef plot_importance(model,indep):\n    Ser = pd.Series(model.coef_,indep.columns).sort_values()\n    plt.figure(figsize=(30,20))\n    Ser.plot(kind='bar')\ndef calc_r2(model,true,data):\n    return r2_score(true,model.predict(data))","22c4377b":"lr = LinearRegression()\nlr.fit(X_Train,y_Train)\nprint (\"Linear Regression, Training Set RMSE:\",rmse(y_Train,lr.predict(X_Train)))\nprint (\"Linear Regression,Training R Squared:\",calc_r2(lr,y_Train,X_Train))\nprint (\"\\nLinear Regression,Testing Set RMSE:\",rmse(y_Test,lr.predict(X_Test)))\nprint (\"Linear Regression,Testing R Squared:\",calc_r2(lr,y_Test,X_Test))\nprint (\"\\nLinear Regression,Cross Validation Score:\",cv_score(lr))","4f0bd334":"lasso = Lasso(alpha=0.001,max_iter=5000)\nlasso.fit(X_Train,y_Train)\nprint (\"Lasso Regression, Training Set RMSE:\",rmse(y_Train,lasso.predict(X_Train)))\nprint (\"Lasso Regression,Training R Squared:\",calc_r2(lasso,y_Train,X_Train))\nprint (\"\\nLasso Regression,Testing Set RMSE:\",rmse(y_Test,lasso.predict(X_Test)))\nprint (\"Lasso Regression,Testing R Squared:\",calc_r2(lasso,y_Test,X_Test))\nprint (\"\\nLasso Regression,Cross Validation Score:\",cv_score(lasso))","6156aa09":"#Submission['SalePrice'] = np.expm1(lasso.predict(test))\n#Submission.to_csv(\"Lasso_Latest.csv\",index=None)","f879423e":"coeffs = pd.DataFrame(list(zip(X.columns, lasso.coef_)), columns=['Predictors', 'Coefficients'])\ncoeffs.sort_values(by='Coefficients',ascending=False)","43cf57cb":"scores = []\nalpha = [0.001,0.005,0.01,0.05,0.1,0.5,1,2,5,10]\nfor i in alpha:\n    las = Lasso(alpha=i,max_iter=10000)\n    las.fit(X_Train,y_Train)\n    scores.append(rmse(y_Test,las.predict(X_Test)))\nprint (\"Lasso Scores with Different Alpha Values \\n\",scores)","c3aca9d3":"#Submission['SalePrice'] = np.expm1(lasso.predict(test))\n#Submission.to_csv(\"Sub.csv\",index=None)","317fd98d":"ridge = Ridge()\nridge.fit(X_Train,y_Train)\nprint (\"Ridge Regression,Training Set RMSE:\",rmse(y_Train,ridge.predict(X_Train)))\nprint (\"Ridge Regression,Training R Squared:\",calc_r2(ridge,y_Train,X_Train))\nprint (\"\\nRidge Regression,Testing Set RMSE:\",rmse(y_Test,ridge.predict(X_Test)))\nprint (\"Ridge Regression,Testing R Squared:\",calc_r2(ridge,y_Test,X_Test))\nprint (\"\\nRidge Regression,Cross Validation Score:\",cv_score(ridge))","76c2aed6":"scores = []\nalpha = [0.001,0.005,0.01,0.05,0.1,0.5,1,2,5,10]\nfor i in alpha:\n    ridge = Ridge(alpha=i)\n    ridge.fit(X_Train,y_Train)\n    scores.append(rmse(y_Test,ridge.predict(X_Test)))\nprint (\"Ridge Scores with Different Alpha Values \\n\",scores)","2be80a05":"en = ElasticNet(max_iter=5000)\nparams = {\"alpha\":[0.0001,0.0002,0.001,0.005,0.01,0.05,0.1,0.5,1,2,5,10],\n          \"l1_ratio\":[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1]}\ngrid = GridSearchCV(estimator=en,param_grid=params,cv=5,n_jobs=-1,scoring='neg_mean_squared_error')\ngrid.fit(X,y)","c5c41d2c":"grid.best_estimator_,grid.best_params_,grid.best_score_","d51f7ce1":"en = grid.best_estimator_\nen.fit(X_Train,y_Train)\nprint (\"Elastic Net Regression,Training Set RMSE:\",rmse(y_Train,en.predict(X_Train)))\nprint (\"Elastic Net Regression,Training R Squared:\",calc_r2(en,y_Train,X_Train))\nprint (\"\\nElastic Net Regression,Testing Set RMSE:\",rmse(y_Test,en.predict(X_Test)))\nprint (\"Elastic Net Regression,Testing R Squared:\",calc_r2(en,y_Test,X_Test))\nprint (\"\\nElastic Net Regression,Cross Validation Score:\",cv_score(en))","85ab0429":"en_submission = np.expm1(en.predict(test))\nlasso_submission = np.expm1(lasso.predict(test))\nridge_submission = np.expm1(ridge.predict(test))\naverage = (en_submission+lasso_submission+ridge_submission)\/3\nSubmission['SalePrice'] = average\nSubmission.to_csv(\"Stacked7.csv\",index=None)","a3c3930b":"It has a linear relationship with the dependent variable. There are two distinct values that stand out from the rest. ","4908ba6c":"Since the other variable related to Pool is already deleted, we will keep this variable. Although 99% of the houses do not have a pool.","908562c0":"The relationship is not linear, there is one very high value of Basement Finished area, and 0 values indicate that these houses do not have a basement.","8cae09cc":"No particular relation evident from the boxplot.","6663a974":"Most of the houses do not have Masonry Veneer(like a facade). Some missing values.","369bd7f3":"Most of the houses have either Typical or Good condition of the material on the exterior.","eef4ea01":"There is no relationship evident here.","6da7c4dd":"0 values indicate absence of Garage in the house. Another point to be noted here is that GarageCars and GarageArea are correlated with each other in a sense that, larger the area, larger is the number of cars that can be accomodated. This should be investigated in the correlation matrix.","ef2644e3":"Price increases with increase in accomodating capacity of the cars in the ","40578b06":"1. More than 50% of the houses have average (rating of 5) overall condition of the house.\n2. There is no house with a rating of 10.\n3. Very few have a rating of 9.\n4. OverallCond does not have the same affect as that of OverallQual towards SalePrice variable.","0146d36d":"No particular anomalies can be seen here.","78ab297c":"MSSubClass variable can be converted to str data type as it is not a continuous numerical variables and it represents a category.","9b49e16d":"Now the distribution looks normal. ","5230357a":"95% of the houses have 0 half bathrooms in the basement. Some have 1. ","d9c5e309":"Most of the houses have unfinished Basement, followed by Good Living Quarters. Some missing values are imputed accordingly.","a766f350":"One can notice many values that are way above the group. It can also be noted that these two variables are not linearly related.","2def2f58":"More than 10% of the houses were modified \/rebuilt in the year 1950 as compared to others.","b3810e02":"**Lasso Regression**","a87ccd72":"Prices increase till a certain threshold (11 rooms) and then decrease.","550dc2c1":"Since the variable is dominated by a single value in both Train and Test data, it doesn't impart much information about the dependent variable. Hence it makes sense to delete the variable.","b0cc5026":"Now this is a different scatterplot. Lot of 0 values suggesting that there is no 2nd floor in the house. It consists of Ground plus 1. That apart, the points are relatively scattered and somewhat linear.","1163050f":"There are some values that are quite different from the rest. It makes sense to delete these variables as the Linear regression methods are very sensitive to outliers. ","5065c9b9":"Some of the variables have different number of Unique values in the train data as compared to the test data and vice versa, this should be sorted out because when we create dummy variables and then train the model on the train data, due to differences in the unique values, the model throws an error message when we run it on the test data.","958002b9":"Most of the houses have Central Air conditioning.","fb585097":"Missing values in the BsmtQual variable indicate there is no basement in the house. So it is imputed with \"No_Basement\".Also most of the houses have Typical or Good height of the basement.","49925265":"Most houses have either 1 or 2 kitchens above ground.","a387c69a":"85% of the houses belong to Residential Low Density type of neighborhood.","3256631a":"**Ridge Regression**","41814145":"Most of the houses can accomodate 2 cars followed by 1 and 3. Few can accomodate 4.","ccc36707":"There are no missing values in the dependent variable. Minimum price is 34900 and maximum is 755000, the 75% percentile value or the third quartile value is 214000. Considering this, the maximum value seems to be an outlier.","9fd8a87a":"The price of houses that have Excellent external quality rating are much higher as compared to others. ","f387cca6":"Most of the Houses are flat.","2134a7f9":"**Elastic Net**","440089d0":"It can be seen from the Boxplot that as the rating increases, the Sale Price of the house increases. Some outliers can be seen here.","b17896e6":"As we can see from the heatmap above, some of the Independent variables are correlated with each other. One of the basic assumptions of Linear regression is that the independent variables are not correlated with each other, if they are then we will not know which of the two variables is imparting the correct information about the Dependent variable. So if 2 variables have high correlation between them, we will have to drop one of the variable and keep the other. ","8764af75":"Lot of 0 values and no particular relationship with dependent variable is evident.","166c35bc":"Most of the houses have 0 Full bathrooms in the basement and some have 1. No missing values here.","8825fc59":"The relationship is slightly linear, there is one distinct value that stands out from the rest. No Missing values here.","ac0426d5":"Since LandContour and LandSlope talk about the Flatness of the property or the Slope of the property, it doesn't make sense to keep both the variables, hence dropping LandSlope variable.","6f744447":"Prices are same across most of the categories.","8a8f1c94":"Garages buit recently have higher prices. ","34463cb5":"Most of the houses have Standard Circuit Breakers & Romex type of electrical system. There are some missing values. ","cdbbd177":"Sale price also increases with the rating of Overall Condition of the house.","4c28593c":"Prices are similar irrespective of the month sold.","35ad7466":"Built in Garage Types have higher average SalePrice.","6456fc93":"Most of the houses are Single-Family Detached type ","2f3d8996":"Poured Concrete has higher values of Sale Prices.","94626687":"As we can see from the heatmap above, some of the Independent variables are correlated with each other. One of the basic assumptions of Linear regression is that the independent variables are not correlated with each other, if they are then we will not know which of the two variables is imparting the correct information about the Dependent variable. So if 2 variables have high correlation between them, we will have to drop one of the variable and keep the other. ","e5ccdb4f":"Majority of the houses have either 1 or 2 full bathrooms above grade. ","6be854a4":"Let's check if there are anymore missing values in Train and Test sets, and if there is difference in the number of unique values of variables in Train and Test sets.","9014eeff":"No Missing values here.","6cd65d60":"Most of the houses are 1Story\/2Story. Some of the houses have One and Half story with 2nd level unfinished etc. Some of them can be combined.","ee8324ec":"Some of the values of MasVnrType are None suggesting there is no Masonry Veneer, now the missing values are imputed with this None values, similarly, the missing values in MasVnrArea should be filled with 0.","4e1492ee":"Some outliers are visible, again 0 values indicate the absence of Open Porch in the house.","e9631553":"Although very few houses have a rating of 9, their average Sale price is very high.","cd4e5bf4":"Values are much more scattered as compared to the scatterplot of BsmtFinSF1 and SalePrice, again 0 values indicate No Basement.","8874d27d":"Most of the houses are are Inside Lot type followed by Corner plot.","0a372429":"Finished Garages have higher prices as compared to Unfinished Garages.","d4d36ce4":"Here too, the houses that have Excellent rating have higher average although the count is way too low.","8aa18e10":"Most of the houses have Typical\/Average Garage Quality rating.","ca1c111b":"If we analyse the meaning of these two variables Condition1 and Condition2, they basically talk about proximity of the properties to various facilities, so it doesn't matter if there is one additional facility in the near proximity. So instead of keeping both Condition1 and Condition2, we can just drop Condition2 and keep Condition1. ","40046d73":"Most of the houses have Gas forced warm air furnace type of Heating. ","502cccf4":"The relationship is non linear with lot of 0 values and one outlier clearly visible.","aeb24fc6":"A value of 0 in GarageCars variable means there is no Garage in the House. The missing value in Testd ata is imputed.","c2d35a4e":"56% of the houses do not have 2nd floor. ","0804b977":"Since there are unequal number of unique values in train and test data, we have to combine some categories.","6a3de9f8":"**Linear Regression**","9492b161":"In the Utilities variable again, just one value \"AllPub\" is dominant.After replacing the missing value in test data, the variable will contain just one value that is AllPub which will amount to no information towards the dependent variable. Hence deleting it makes more sense.","5d048149":"Many houses were built in 2005 and 2006 as compared to other years.","166cf89b":"**Model Building**","7f949465":"Most of the houses are single storied 1946 type followed by 2 storied 1946 type.","5fbdc69d":"90% of the houses have either Typical or Good quality Kitchens.","1a07325f":"**EDA: Univariate, Multivariate Analysis, Correlation Analysis**","7730283f":"Higher prices for Excellent height of the basement.","faf375b3":"Since most of the values are 0 in this variable, it makes sense to drop the variable instead of increasing the complexity by adding one more variable.","329f2424":"Most of the houses have Paved Driveway.","709db96d":"0 values indicate there is no wood deck area.","ac43153e":"Houses that were built recently have higher prices as compared to others.","c2f5f072":"The distribution does not look normal, it is positively skewed, some outliers can also be seen. Simple log transformation might change the distribution to normal.","f6b9d2e6":"From the above results, **Utilities, Condition2, HouseStyle, RoofMatl, Exterior1st, Exterior2nd, Heating, Electrical, GarageQual** variables have different unique values in Train and Test data. So either some of the values need to be combined or some values have to be dropped depending on the needs.","5a164a0a":"Most of the houses have Gable type of roof followed by Hip type.","7519f5ee":"0 values indicate No Fireplace in the house. If not 0, most of the houses have a maximum of 1 fireplace.","6e7b8bf1":"Lot of houses are sold in the Months of May, June and July","168c25e1":"Most of the houses have a medium rating for overall material and finish of the house followed by 6,7,8 and 9 rating.","e4574421":"Most of the houses have Attached type of Garage followed by Detached type. There are some missing values in both Train and Test data (Probably because these houses do not have a garage).","a88926b8":"Missing values indicate the absence of Garage in the house. Will replace it with an arbitary value of 0.","b23d0d64":"Most of the houses have Typical basement conditions with slight dampness allowed. Missing values are imputed with \"No_Basement\"","00d14b2a":"Most of the houses are near to various facilities like parks, railroads, feeder streets etc.No Missing values here.","03cae870":"Most of the houses have Average \/ Typical external quality of the house, this is followed by houses that are rated Good. No Missing values here.","b51a5e11":"Most houses have Poured Concrete or Concrete Block as their Foundation."}}