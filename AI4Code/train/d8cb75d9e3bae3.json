{"cell_type":{"498ca301":"code","7a3da9b8":"code","1726e172":"code","a7e924f8":"code","d96aec25":"code","a5954438":"code","d2bd9fcd":"code","a6b957ad":"code","f6a001d0":"code","fc02e718":"code","0a513415":"code","f446cc13":"code","d9134c19":"code","098b6c61":"markdown","89fbbfda":"markdown","5692a715":"markdown"},"source":{"498ca301":"import os, gc, pickle, copy, datetime, warnings\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport lightgbm as lgb\nfrom sklearn import metrics\npd.set_option('display.max_columns', 100)\nwarnings.filterwarnings('ignore')","7a3da9b8":"df_test = pd.read_csv(\"..\/input\/my-covid-pred\/test_week1.csv\")\ndf_test.head()","1726e172":"df_test['Province_State'] = df_test['Province\/State'] \ndf_test['Country_Region'] = df_test['Country\/Region'] ","a7e924f8":"df_week3 = pd.read_csv(\"..\/input\/covid19-global-forecasting-week-3\/train.csv\")\ndf_week3.head()","d96aec25":"df_test = pd.merge(df_test, df_week3, on=['Province_State', 'Country_Region', 'Date'], how='left')\ndf_test.head()","a5954438":"df_test['Date'] = pd.to_datetime(df_test['Date'])\ndf_test['day'] = df_test['Date'].apply(lambda x: x.dayofyear).astype(np.int16)\ndf_week3['Date'] = pd.to_datetime(df_week3['Date'])\ndf_week3['day'] = df_week3['Date'].apply(lambda x: x.dayofyear).astype(np.int16)\ndf_test.head()","d2bd9fcd":"# concat Country\/Region and Province\/State\ndef func(x):\n    try:\n        x_new = x['Country_Region'] + \"\/\" + x['Province_State']\n    except:\n        x_new = x['Country_Region']\n    return x_new\n        \ndf_test['place_id'] = df_test.apply(lambda x: func(x), axis=1)\ndf_week3['place_id'] = df_week3.apply(lambda x: func(x), axis=1)\ndf_test.head()","a6b957ad":"tmp = df_test[pd.isna(df_test['ConfirmedCases'])==False]['Date'].max()\nprint(\"last day of existing true data: {}\".format(tmp))","f6a001d0":"day_before_private = 85\ndf_tmp = df_test[df_test['day']<day_before_private]\ndf_tmp = df_tmp[pd.isna(df_tmp['ConfirmedCases'])]\ntmp = np.sort(df_tmp['place_id'].unique())\nprint(\"differences of places between week-1 and week-3\")\nprint(tmp)\n# df_tmp.head()","fc02e718":"df_sub2 = pd.read_csv(\"..\/input\/my-covid-pred\/submission_osciiart.csv\") # my final submission with bug\ndf_sub4 = pd.read_csv(\"..\/input\/my-covid-pred\/submission_Nonserial.csv\")\ndf_sub9 = pd.read_csv(\"..\/input\/my-covid-pred\/submission_Stephen Keller.csv\")\ndf_sub10 = pd.read_csv(\"..\/input\/my-covid-pred\/submission_Pietro Marinelli.csv\")\ndf_sub19 = pd.read_csv(\"..\/input\/my-covid-pred\/submission_Uncharted_UCB.csv\")\ndf_sub23 = pd.read_csv(\"..\/input\/my-covid-pred\/submission_Fran Lpez Gumn.csv\")\ndf_sub24 = pd.read_csv(\"..\/input\/my-covid-pred\/submission_ODI6s.csv\")\ndf_sub2.head()","0a513415":"# list of places\nplaces_sort = df_test[['place_id', 'ConfirmedCases']][df_test['day']==day_before_private]\nplaces_sort = places_sort.sort_values('ConfirmedCases', ascending=False).reset_index(drop=True)['place_id'].values\nprint(len(places_sort))\nfor i, place in enumerate(places_sort):\n    print(i, place)","f446cc13":"def show_graph(place):\n    sns.set()\n    sns.set_style('ticks')\n    fig, ax = plt.subplots(figsize = (15,6)) \n    plt.subplot(1,2,1)\n    x_pred = df_test[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Date'].values\n    y_pred2 = df_sub2[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['ConfirmedCases'].values\n    y_pred4 = df_sub4[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['ConfirmedCases'].values\n    y_pred9 = df_sub9[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['ConfirmedCases'].values\n    y_pred10 = df_sub10[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['ConfirmedCases'].values\n    y_pred19 = df_sub19[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['ConfirmedCases'].values\n    y_pred23 = df_sub23[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['ConfirmedCases'].values\n    y_pred24 = df_sub24[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['ConfirmedCases'].values\n    x_true= df_week3[(df_week3['place_id']==place)]['Date'].values\n    y_true = df_week3[(df_week3['place_id']==place)]['ConfirmedCases'].values\n\n    ax = sns.lineplot(x=x_pred, y=y_pred2, label='#2 LGB')\n    #     ax.set(yscale=\"log\")\n    sns.lineplot(x=x_pred, y=y_pred4, label='#4 LGB')\n    sns.lineplot(x=x_pred, y=y_pred9, label='#9 SARIMAX')\n    sns.lineplot(x=x_pred, y=y_pred10, label='#10 LGB')\n    sns.lineplot(x=x_pred, y=y_pred19, label='#19 RNN')\n    sns.lineplot(x=x_pred, y=y_pred23, label='#23 PolyReg')\n    sns.lineplot(x=x_pred, y=y_pred24, label='#24 LogFit')\n    sns.lineplot(x=x_true, y=y_true, label='true')\n    plt.ylim(-1, y_true.max()*2)\n    plt.title(\"{}\/ConfirmedCases\".format(place))\n\n    fig.autofmt_xdate()\n    plt.subplot(1,2,2)\n    x_pred = df_test[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Date'].values\n    y_pred2 = df_sub2[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Fatalities'].values\n    y_pred4 = df_sub4[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Fatalities'].values\n    y_pred9 = df_sub9[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Fatalities'].values\n    y_pred10 = df_sub10[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Fatalities'].values\n    y_pred19 = df_sub19[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Fatalities'].values\n    y_pred23 = df_sub23[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Fatalities'].values\n    y_pred24 = df_sub24[(df_test['place_id']==place) & (df_test['day']>day_before_private)]['Fatalities'].values\n    x_true= df_week3[(df_week3['place_id']==place)]['Date'].values\n    y_true = df_week3[(df_week3['place_id']==place)]['Fatalities'].values\n    ax = sns.lineplot(x=x_pred, y=y_pred2, label='#2 LGB')\n    #     ax.set(yscale=\"log\")\n    #     sns.lineplot(x=df_interest3['day'], y=df_interest2['Fatalities'].values, label='pred2')\n    sns.lineplot(x=x_pred, y=y_pred4, label='#4 LGB')\n    sns.lineplot(x=x_pred, y=y_pred9, label='#9 SARIMAX')\n    sns.lineplot(x=x_pred, y=y_pred10, label='#10 LGB')\n    sns.lineplot(x=x_pred, y=y_pred19, label='#19 RNN')\n    sns.lineplot(x=x_pred, y=y_pred23, label='#23 PolyReg')\n    sns.lineplot(x=x_pred, y=y_pred24, label='#24 LogFit')\n    sns.lineplot(x=x_true, y=y_true, label='true')\n    plt.ylim(-1, y_true.max()*2)\n    plt.title(\"{}\/Fatalities\".format(place))\n    fig.autofmt_xdate()\n    plt.show()","d9134c19":"show_graph(places_sort[0])\nshow_graph(places_sort[1])\nshow_graph(places_sort[2])\nshow_graph(places_sort[3])\nshow_graph(places_sort[4])\nshow_graph(places_sort[10])\nshow_graph(places_sort[20])\nshow_graph(places_sort[50])\nshow_graph(places_sort[100])\nshow_graph(places_sort[150])\nshow_graph(places_sort[200])\nshow_graph(\"Japan\")\nshow_graph(\"Korea, South\")","098b6c61":"# Comparison","89fbbfda":"# Preprocessing","5692a715":"10 days have passed since week 1 private LB period started.  \nHere I compared some submissions of week-1 which are in public.  \nThe ranking is as of 2020-4-5.   \n- 2nd place [COVID19_LightGBM](https:\/\/www.kaggle.com\/osciiart\/covid19-lightgbm?scriptVersionId=30830623)\n- 4th place [COVID19: prediction with restcountries.eu API data](https:\/\/www.kaggle.com\/nonserial\/covid19-prediction-with-restcountries-eu-api-data)\n- 9th place [SARIMAX Baseline Starter Prediction](https:\/\/www.kaggle.com\/skeller\/sarimax-influenza-baseline?scriptVersionId=30638995)\n- 10th place [Fork of france_missing_value_and_postprocessing](https:\/\/www.kaggle.com\/pietromarinelli\/8th-place-at-day-1-with-lgb-with-few-features)\n- 19th place [COVID-19 Global Forecasts Using Probabilistic RNNs](https:\/\/www.kaggle.com\/jlgleason\/covid-19-global-forecasts-using-probabilistic-rnns?scriptVersionId=30839206)\n- 23rd place [COVID19 | Minimalist polynomial regressor proposal](https:\/\/www.kaggle.com\/franlopezguzman\/covid19-minimalist-polynomial-regressor-proposal?scriptVersionId=30837988)\n- 24th place [Logistic Curve Fitting - Global Covid-19](https:\/\/www.kaggle.com\/diamondsnake\/covid-19-logistic-curve-fitting-week-1?scriptVersionId=30844536)"}}