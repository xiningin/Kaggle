{"cell_type":{"05af2c76":"code","06f250af":"code","ea3ff8f5":"code","2167d31f":"code","9c8a37dd":"code","671978ab":"code","31078ae4":"code","89c6fe39":"code","19ee0a69":"code","febe92d5":"code","ad3df85e":"code","b853dda7":"code","da472892":"code","f3baf2ad":"code","e107469f":"code","e260c12a":"code","84a68b89":"code","d8a89d72":"code","d802224e":"code","8d8f1bd9":"code","ed27583e":"code","afb08503":"code","9de017f2":"code","1e5eb36e":"code","458b7e9b":"code","f4b71db5":"code","812079e0":"code","a3a0fd3f":"code","edbbc133":"code","e168e209":"code","6f7172e0":"code","c83d9ff2":"code","32007f10":"code","e904300e":"code","2ce237c3":"code","641e317b":"code","92bd706b":"code","324b58be":"code","7bc533dd":"code","c8f9fdcd":"code","967032f6":"code","ffc7080d":"code","0efeb1e8":"code","4ceba0ce":"code","336e1bde":"code","753119d3":"code","7b9eafbd":"code","07d46bd8":"code","919dee5a":"code","f849c851":"code","45da632f":"code","3ddfdb73":"code","0d2adf56":"code","7c76025b":"code","c5a88fca":"code","6dd81406":"code","f612136f":"code","b45cf884":"code","233a4a1d":"code","bd6cf825":"code","a6fe1ef3":"code","0447cddc":"code","4018c4e9":"code","5ee43bfb":"code","fba54274":"code","bf6597b9":"code","a21ec723":"code","bb14314d":"code","72b6fa37":"code","e5bdd7e8":"code","919c3f0c":"code","3849ddc1":"code","aef9f2e2":"code","721c6e7d":"code","e4aa2739":"code","8bc0d652":"code","bdaa4a5c":"code","2f93bd80":"markdown","180d985b":"markdown","2a2a8a81":"markdown","b6a8cc71":"markdown","b8de9ece":"markdown","c1e9b6ca":"markdown","3b65c221":"markdown","9988fb98":"markdown","17b001de":"markdown","2afbed29":"markdown","67c201b0":"markdown","ad822d56":"markdown","d504c440":"markdown","380bd73c":"markdown","96747355":"markdown","6229f2d4":"markdown","140d0009":"markdown","83c19383":"markdown","c076c7f0":"markdown","aad739c4":"markdown"},"source":{"05af2c76":"import numpy as np","06f250af":"a = np.array([1,2,3])\nprint(a)","ea3ff8f5":"b = np.array([(1.5,2,3), (4,5,6)], dtype = float)\nprint(b)","2167d31f":"c = np.array([[(1.5,2,3), (4,5,6)], [(3,2,1), (4,5,6)]],dtype = float)\nprint(c)","9c8a37dd":"np.zeros((3,4))  #Create an array of zeros","671978ab":"np.ones((2,3,4),dtype=np.int16)   #Create an array of ones","31078ae4":"d = np.arange(10,25,5)   # Create an array of evenly spaced values (step value) \nprint(d)","89c6fe39":"np.linspace(0,2,9)    #Create an array of evenly spaced values (number of samples)","19ee0a69":"e = np.full((2,2),7)    # Create a constant array\nprint(e)","febe92d5":"f = np.eye(2)      #Create a 2X2 identity matrix\nprint(f)","ad3df85e":" np.random.random((2,2))    #Create an array with random values\n   ","b853dda7":"np.empty((3,2))       #Create an empty array","da472892":"np.int64   #Signed 64-bit integer types\nnp.float32 #Standard double-precision floating point\nnp.complex #Complex numbers represented by 128 floats\nnp.bool    #Boolean type storing TRUE and FALSE values\nnp.object  #Python object type\nnp.string_ #Fixed-length string type\nnp.unicode_ #Fixed-length unicode type","f3baf2ad":"a.shape           #Array dimensions","e107469f":"len(a)            #Length of array","e260c12a":"b.ndim            #Number of array dimensions","84a68b89":"e.size            #Number of array elements","d8a89d72":"b.dtype           #Data type of array elements","d802224e":"b.dtype.name      #Name of data type\n","8d8f1bd9":"b.astype(int)     #Convert an array to a different type","ed27583e":" np.info(np.ndarray.dtype)","afb08503":"g = a - b    #Subtraction\nprint(g)","9de017f2":"np.subtract(a,b)  #Subtraction","1e5eb36e":"b + a             #Addition","458b7e9b":"np.add(b,a)    #Addition","f4b71db5":"a \/ b          #Division","812079e0":"np.divide(a,b) #Division","a3a0fd3f":"a * b          #Multiplication","edbbc133":"np.multiply(a,b)   #Multiplication","e168e209":"np.exp(b) #Exponentiation","6f7172e0":"np.sqrt(b) #Square root","c83d9ff2":"np.sin(a) #Print sines of an array","32007f10":"np.cos(b) #Element-wise cosine","e904300e":"np.log(a) #Element-wise natural logarithm","2ce237c3":"e.dot(f) #Dot product","641e317b":"a == b   #Element-wise comparison","92bd706b":"a < 2    #Element-wise comparison","324b58be":"np.array_equal(a, b) #Array-wise comparison","7bc533dd":"a.sum() #Array-wise sum","c8f9fdcd":"a.min() #Array-wise minimum value","967032f6":"b.max(axis=0) #Maximum value of an array row","ffc7080d":"b.cumsum(axis=1) #Cumulative sum of the elements","0efeb1e8":"a.mean() #Mean","4ceba0ce":"np.median(b) #Median","336e1bde":"np.corrcoef(a) #Correlation coefficient","753119d3":"np.std(b) #Standard deviation","7b9eafbd":"h = a.view()   #Create a view of the array with the same data","07d46bd8":"np.copy(a) #Create a copy of the array","919dee5a":"h = a.copy() #Create a deep copy of the array","f849c851":"a.sort()  #Sort an array","45da632f":"c.sort(axis=0)  #Sort the elements of an array's axis","3ddfdb73":"a[2]   # Select the element at the 2nd index 3","0d2adf56":"b[1,2] #Select the element at row 1 column 2 (equivalent to b[1][2])","7c76025b":"a[0:2] #Select items at index 0 and 1","c5a88fca":"b[0:2,1] #Select items at rows 0 and 1 in column 1","6dd81406":"b[:1] #Select all items at row 0 (equivalent to b[0:1, :])","f612136f":"c[1,...] #Same as [1,:,:]","b45cf884":"a[ : :-1] #Reversed array a array([3, 2, 1])","233a4a1d":"a[a<2] #Select elements from a less than 2","bd6cf825":"b[[1, 0, 1, 0],[0, 1, 2, 0]] #Select elements (1,0),(0,1),(1,2) and (0,0)","a6fe1ef3":"b[[1, 0, 1, 0]][:,[0,1,2,0]] #Select a subset of the matrix\u2019s rows and columns","0447cddc":"i = np.transpose(b)          #Permute array dimensions","4018c4e9":"i.T                          #Permute array dimensions","5ee43bfb":"b.ravel()                    #Flatten the array","fba54274":"g.reshape(3,-2)              #Reshape, but don\u2019t change data","bf6597b9":"h.resize((2,6))              #Return a new array with shape (2,6)","a21ec723":"np.append(h,g)               #Append items to an array","bb14314d":"np.insert(a, 1, 5)           #Insert items in an array","72b6fa37":"np.delete(a,[1])             #Delete items from an array","e5bdd7e8":"np.concatenate((a,d),axis=0) #Concatenate arrays","919c3f0c":"np.vstack((a,b))             #Stack arrays vertically (row-wise)","3849ddc1":"np.r_[e,f]                   #Stack arrays vertically (row-wise)","aef9f2e2":"np.hstack((e,f))             #Stack arrays horizontally (column-wise)","721c6e7d":"np.column_stack((a,d))       #Create stacked column-wise arrays","e4aa2739":"np.c_[a,d]                   #Create stacked column-wise arrays","8bc0d652":"np.hsplit(a,3)               #Split the array horizontally at the 3rd index\n","bdaa4a5c":"np.vsplit(c,2)               #Split the array vertically at the 2nd index","2f93bd80":"## Sorting Arrays","180d985b":"## Changing Array Shape","2a2a8a81":"## Initial Placeholders","b6a8cc71":"## Slicing","b8de9ece":"## Creating Arrays","c1e9b6ca":"## Boolean Indexing","3b65c221":"## Aggregate Functions","9988fb98":"## Fancy Indexing","17b001de":"## Adding\/Removing Elements","2afbed29":"## Data Types","67c201b0":"## Inspecting Your Array","ad822d56":"## Subsetting","d504c440":"## Splitting Arrays","380bd73c":"## Transposing Array","96747355":"## Copying Arrays","6229f2d4":"## Arithmetic Operations","140d0009":"## Comparison","83c19383":"## Combining Arrays","c076c7f0":"## Asking For Help","aad739c4":"# Numpy\nThe NumPy library is the core library for scientific computing in Python. It provides a high-performance multidimensional array\nobject, and tools for working with these arrays."}}