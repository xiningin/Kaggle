{"cell_type":{"91a1d56a":"code","714b4a4c":"code","661ab116":"code","79880ca5":"code","b35b0e64":"code","9bf13b04":"code","373ca54b":"code","182b33c4":"code","9e8ad35f":"code","cce4234b":"code","ae221893":"code","9f2beecf":"code","3eb7dcb4":"code","b2185534":"code","cff5e74d":"code","f496ed4f":"markdown","81dcc937":"markdown"},"source":{"91a1d56a":"import numpy as np \nimport pandas as pd \nimport string\nfrom plotly.offline import init_notebook_mode, iplot\nfrom plotly.graph_objs import *\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport os\nprint(os.listdir(\"..\/input\"))\ndf = pd.read_csv('..\/input\/FastFoodRestaurants.csv')\n","714b4a4c":"df.head()","661ab116":"print('Total no of columns:',df.shape[1])\nprint('Total no of rows:',df.shape[0])","79880ca5":"print('countries are:',df.country.unique())\nprint('city are:',df.city.unique())\n","b35b0e64":"cityplt=df.city.value_counts()[:10].plot.bar(title='Top 10 cities')\ncityplt.set_xlabel('city',size=15)\ncityplt.set_ylabel('count',size=15)","9bf13b04":"provplt=df.province.value_counts()[:10].plot.bar(title='Top 10 province')\nprovplt.set_xlabel('province',size=15)\nprovplt.set_ylabel('count',size=15)","373ca54b":"df.name.value_counts()[:10]\n","182b33c4":"df.name=df.name.apply(lambda x: x.lower())\ndf.name=df.name.apply(lambda x:''.join([i for i in x \n                            if i not in string.punctuation]))\n\ndf.name.value_counts()[:10]","9e8ad35f":"nameplt=df.name.value_counts()[:10].plot.bar(title=\"Top 10 Restaurants\")\nnameplt.set_xlabel('Restaurant',size=15)\nnameplt.set_ylabel('count',size=15)","cce4234b":"df['text'] = df['name'] + ',' + df['province'] + ', ' + df['country']\n\nscl = [ [0,\"rgb(5, 10, 172)\"],[0.35,\"rgb(40, 60, 190)\"],[0.5,\"rgb(70, 100, 245)\"],\\\n    [0.6,\"rgb(90, 120, 245)\"],[0.7,\"rgb(106, 137, 247)\"],[1,\"rgb(220, 220, 220)\"] ]\n\ndata = [ dict(\n        type = 'scattergeo',\n        locationmode = 'USA-states',\n        lon = df['longitude'],\n        lat = df['latitude'],\n        text = df['text'],\n        mode = 'markers',\n        marker = dict(\n            size = 4,\n            opacity = 0.5,\n            reversescale = True,\n            autocolorscale = False,\n            symbol = 'circle',\n            line = dict(\n                width=.5,\n                color='rgba(102, 102, 102)'\n            )))]\nlayout = dict(\n        title = 'Restaurants across the country',\n        colorbar = True,\n        geo = dict(\n            scope='usa',\n            projection=dict( type='albers usa' ),\n            showland = True,\n            landcolor = \"rgb(250, 250, 250)\",\n            subunitcolor = \"rgb(217, 217, 217)\",\n            countrycolor = \"rgb(217, 217, 217)\",\n            countrywidth = 0.5,\n            subunitwidth = 0.5\n        ),\n    )\n\nfig = dict( data=data, layout=layout )\niplot( fig, validate=False, filename='all restaurants' )","ae221893":"mapbox_access_token='pk.eyJ1IjoibmF2ZWVuOTIiLCJhIjoiY2pqbWlybTc2MTlmdjNwcGJ2NGt1dDFoOSJ9.z5Jt4XxKvu5voCJZBAenjQ'","9f2beecf":"mcd=df[df.name =='mcdonalds']\nmcd_lat = mcd.latitude\nmcd_lon = mcd.longitude\nmcd_city = mcd.city\n\ndata = [\n    go.Scattermapbox(\n        lat=mcd_lat,\n        lon=mcd_lon,\n        mode='markers',\n        marker=dict(\n            size=5,\n            color='rgb(255, 0, 0)',\n            opacity=0.3\n        ))]\nlayout = go.Layout(\n    title='Mcdonalds Restaurants',\n    autosize=True,\n    hovermode='closest',\n    showlegend=False,\n    mapbox=dict(\n        accesstoken=mapbox_access_token,\n        bearing=0,\n        center=dict(\n            lat=38,\n            lon=-94\n        ),\n        pitch=0,\n        zoom=3,\n        style='light'\n    ),\n)\n\nfig = dict(data=data, layout=layout)\niplot(fig, filename='Mcdonalds restaurants')\n\n","3eb7dcb4":"bg=df[df.name =='burger king']\nbg_lat = bg.latitude\nbg_lon = bg.longitude\nbg_city = bg.city\n\ndata = [\n    go.Scattermapbox(\n        lat=bg_lat,\n        lon=bg_lon,\n        mode='markers',\n        marker=dict(\n            size=5,\n            color='rgb(0,255, 0)',\n            opacity=0.8\n        ))]\nlayout = go.Layout(\n    title='Burgerking Restaurants',\n    autosize=True,\n    hovermode='closest',\n    showlegend=False,\n    mapbox=dict(\n        accesstoken=mapbox_access_token,\n        bearing=0,\n        center=dict(\n            lat=38,\n            lon=-94\n        ),\n        pitch=0,\n        zoom=3,\n        style='light'\n    ),\n)\n\nfig = dict(data=data, layout=layout)\niplot(fig, filename='burgerking restaurants')\n","b2185534":"tb=df[df.name =='taco bell']\ntb_lat = tb.latitude\ntb_lon = tb.longitude\ntb_city = tb.city\n\ndata = [\n    go.Scattermapbox(\n        lat=tb_lat,\n        lon=tb_lon,\n        mode='markers',\n        marker=dict(\n            size=5,\n            color='rgb(0,0,255)',\n            opacity=0.8\n        ))]\nlayout = go.Layout(\n    title='Tacobell Restaurants',\n    autosize=True,\n    hovermode='closest',\n    showlegend=False,\n    mapbox=dict(\n        accesstoken=mapbox_access_token,\n        bearing=0,\n        center=dict(\n            lat=38,\n            lon=-94\n        ),\n        pitch=0,\n        zoom=3,\n        style='light'\n    ),\n)\n\nfig = dict(data=data, layout=layout)\niplot(fig, filename='Tacobell restaurants')","cff5e74d":"%%HTML\n<div class='tableauPlaceholder' id='viz1535352712112' style='position: relative'><noscript><a href='#'><img alt='Restaurants ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Re&#47;Restaurantlocations&#47;Sheet1&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='Restaurantlocations&#47;Sheet1' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Re&#47;Restaurantlocations&#47;Sheet1&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='filter' value='publish=yes' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1535352712112');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","f496ed4f":"Now we are gonna visualize with Tableau...\n\nCheck out the following link which explains how to obatain tableau plots in python..\nhttp:\/\/datawisesite.wordpress.com\/2017\/06\/26\/how-to-embed-tableau-in-jupyter-notebook\/\n","81dcc937":"Thankyou for visiting.......Yoloyolo"}}