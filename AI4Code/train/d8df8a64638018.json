{"cell_type":{"2a96d1f4":"code","d822ec3b":"code","bd8b333f":"code","b0604e20":"code","a11b1d0c":"code","d366b648":"code","dc90587b":"markdown","58d84bd7":"markdown","e173a5a7":"markdown","48514ca5":"markdown","23a954d7":"markdown","8acbcd37":"markdown","986399f7":"markdown","6a2c608e":"markdown"},"source":{"2a96d1f4":"#### Simlple Tokenization using python\n\ntext = \"Friends, Romans, Countrymen, lend me your ears;\"\ntext.split()","d822ec3b":"#### Count of lowercased tokens\nlower_count =0\nfor i in text.split():\n    if i.islower():\n        lower_count+=1\nprint('Lowercased Tokens : ', lower_count)","bd8b333f":"#### Count of titlecase tokens\ntitle_count =0\nfor i in text.split():\n    if i.istitle():\n        title_count+=1\nprint('Titlecased Tokens : ', title_count)","b0604e20":"#### Count of space \nspace_count =0\nfor i in text:\n    if i.isspace():\n        space_count+=1\nprint('Space Count : ', space_count)","a11b1d0c":"### Counting Token\nfrom collections import Counter\ncounter = Counter(text.split())\nprint(counter)","d366b648":"#### Transformation\n# 1.any case -> lowercase\n# 2. any case -> uppercase\n# 3. any case -> title case\n\nprint('Lowercase :: ', text.lower())\nprint('Uppercase :: ',text.upper())\nprint('Titlecase :: ',text.title())","dc90587b":"#### Natural Language Understanding\nNatural-language understanding or natural-language interpretation is a subtopic of natural-language processing in artificial intelligence that deals with machine reading comprehension. Natural-language understanding is considered an AI-hard problem.","58d84bd7":"##### Tokenization\nGiven a character sequence and a defined document unit, tokenization is the task of chopping it up into pieces, called tokens , perhaps at the same time throwing away certain characters, such as punctuation. Here is an example of tokenization:\n\nInput: Friends, Romans, Countrymen, lend me your ears;\n\n$Output: \\fbox {Friends} \n\\fbox{Romans} \\fbox{Countrymen} \\fbox{lend} \\fbox{me} \\fbox{your} \\fbox{ears}$\n","e173a5a7":"##### Stats","48514ca5":"#### Data Cleaning\n\nBefore we start with any NLP project we need to pre-process the data to get it all in a consistent format.We need to clean, tokenize and convert our data into a matrix. Some of the basic text pre-processing techniques includes:\n\nMake text all lower case or uppercase so that the algorithm does not treat the same words in different cases as different\n\n**Removing Noise** i.e everything that isn\u2019t in a standard number or letter i.e Punctuation, Numerical values, common non-sensical text (\/n)\n\n**Tokenization**: Tokenization is just the term used to describe the process of converting the normal text strings into a list of tokens i.e words that we actually want. Sentence tokenizer can be used to find the list of sentences and Word tokenizer can be used to find the list of words in strings.\n\n**Stopword Removal**: Sometimes, some extremely common words which would appear to be of little value in helping select documents matching a user need are excluded from the vocabulary entirely. These words are called stop words","23a954d7":"Natural language processing (NLP) is a subfield of linguistics, computer science, and artificial intelligence concerned with the interactions between computers and human language, in particular how to program computers to process and analyze large amounts of natural language data. The result is a computer capable of \"understanding\" the contents of documents, including the contextual nuances of the language within them. The technology can then accurately extract information and insights contained in the documents as well as categorize and organize the documents themselves.\n\nIt has two components:\n1. Natural Language Understanding\n2. Natural Language Generation","8acbcd37":"There are other methods to check wheather a token is a digit token or an alphanumeric token or numeric token etc.\nYou can refer to https:\/\/docs.python.org\/3\/library\/string.html for more information.","986399f7":"#### Natural Language Generation\nNatural Language Generation (NLG), a subcategory of Natural Language Processing (NLP), is a software process that automatically transforms structured data into human-readable text. Using NLG, Businesses can generate thousands of pages of data-driven narratives in minutes using the right data in the right format.\n\nNLG is a subcategory of content automation focused on text automation.\n","6a2c608e":"### Natural Langauge Processing"}}