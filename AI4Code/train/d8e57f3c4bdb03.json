{"cell_type":{"d50b48af":"code","3d6286d9":"code","0520a23e":"code","0f2fb9f5":"code","b09b25d0":"code","af35a10e":"code","1302cc15":"code","50aeb2e5":"code","cdeeeb2f":"code","449ca0f4":"code","720dee2a":"code","73292fee":"code","345b2829":"code","c1bdbe9c":"code","ff6a22a0":"code","15debab9":"code","738ef8d0":"code","3f91c110":"code","2d87ccfe":"code","0a4fa1b3":"code","724b64af":"markdown"},"source":{"d50b48af":"import tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras.layers import Dense, Activation,Dropout,Conv2D, MaxPooling2D,BatchNormalization\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.metrics import categorical_crossentropy\nfrom tensorflow.keras import regularizers\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport numpy as np\nimport pandas as pd\nimport time\nimport glob\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import imshow\nimport os\nimport cv2\nimport shutil\nfrom pandas import DataFrame\nfrom sklearn.metrics import confusion_matrix, classification_report\npd.set_option('display.width', 150)","3d6286d9":"covid_dir='..\/input\/covid19-radiography-dataset\/COVID-19_Radiography_Dataset\/COVID-19_Radiography_Dataset\/COVID'\nlung_opacity_dir='..\/input\/covid19-radiography-dataset\/COVID-19_Radiography_Dataset\/COVID-19_Radiography_Dataset\/Lung_Opacity'\nnormal_dir='..\/input\/covid19-radiography-dataset\/COVID-19_Radiography_Dataset\/COVID-19_Radiography_Dataset\/Normal'\npneumonia_dir='..\/input\/covid19-radiography-dataset\/COVID-19_Radiography_Dataset\/COVID-19_Radiography_Dataset\/Viral Pneumonia'\ndirlist=[covid_dir, lung_opacity_dir, normal_dir, pneumonia_dir]\nclasses=['covid', 'lung_opacity', 'normal', 'pneumonia']\nfilepaths=[]\nlabels=[]\nfor d,c in zip(dirlist, classes):\n    flist=os.listdir(d)\n    for f in flist:\n        fpath=os.path.join (d,f)\n        filepaths.append(fpath)\n        labels.append(c)\nprint ('filepaths: ', len(filepaths), '   labels: ', len(labels))","0520a23e":"Fseries=pd.Series(filepaths, name='file_paths')\nLseries=pd.Series(labels, name='labels')\ndf=pd.concat([Fseries,Lseries], axis=1)\ndf=DataFrame(np.array(df).reshape(21165,2), columns = ['file_paths', 'labels'])\nprint(df['labels'].value_counts())","0f2fb9f5":"df.head()","b09b25d0":"normal_count = 10192\nlung_opacity_count = 6012\ncovid_count = 3616\nnormal_image_max_index = (df.labels.values == 'normal').argmax()\nprint(normal_image_max_index)\nlung_opacity_max_index = (df.labels.values == 'lung_opacity').argmax()\nprint(lung_opacity_max_index)","af35a10e":"for i in range(normal_count - covid_count):\n    df = df.drop([normal_image_max_index + i])\n    \nfor n in range(lung_opacity_count - covid_count):\n    df = df.drop([lung_opacity_max_index + n])\n\ndf['labels'].value_counts()","1302cc15":"filepaths=[]\nlabels=[]\nfor file in glob.glob('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/PNEUMONIA\/*.jpeg'):\n    filepaths.append(file)\n    labels.append('pneumonia')\nprint ('filepaths: ', len(filepaths), '   labels: ', len(labels))","50aeb2e5":"fseries = pd.Series(filepaths, name='file_name', dtype='str')\nlseries = pd.Series(labels, name='label', dtype='str')\nextra_df = pd.concat([fseries, lseries], axis=1)\nextra_df = DataFrame(np.array(extra_df).reshape(3875,2), columns = ['file_paths', 'labels'])\nextra_df.head()","cdeeeb2f":"df=pd.concat([df,extra_df], axis=0)\ndf=df.reset_index()","449ca0f4":"df['labels'].value_counts()\ndf.head()","720dee2a":"pneumonia_count=5220\npneumonia_max_index=(df.labels.values == 'pneumonia').argmax()\nprint(pneumonia_max_index)\nfor i in range(pneumonia_count - covid_count):\n    df = df.drop([pneumonia_max_index + i])","73292fee":"print(df['labels'].value_counts())\ndf.head()","345b2829":"target_size=(299,299)\nbatch_size=64","c1bdbe9c":"train_datagen = ImageDataGenerator(rotation_range=20, zoom_range=0.2, preprocessing_function=tf.keras.applications.inception_resnet_v2.preprocess_input, validation_split=0.1)\ntest_datagen = ImageDataGenerator(preprocessing_function=tf.keras.applications.inception_resnet_v2.preprocess_input)\ntrain_df, test_df = train_test_split(df, train_size=0.95, shuffle=True)\ntrain_set = train_datagen.flow_from_dataframe(train_df, x_col='file_paths', y_col='labels', target_size=target_size, batch_size=batch_size, color_mode='rgb', shuffle=True, class_mode='categorical', subset='training')\nvalid_set = train_datagen.flow_from_dataframe(train_df, x_col='file_paths', y_col='labels', target_size=target_size, batch_size=batch_size, color_mode='rgb', shuffle=True, class_mode='categorical', subset='validation')\ntest_set = test_datagen.flow_from_dataframe(test_df, x_col='file_paths', y_col='labels', target_size=target_size, batch_size=batch_size, color_mode='rgb', shuffle=True, class_mode='categorical')\ntest_x, test_y = next(test_set)","ff6a22a0":"base_model = tf.keras.applications.InceptionResNetV2(include_top=False, input_shape=(299,299,3))","15debab9":"base_model.summary()","738ef8d0":"model = tf.keras.Sequential([\n    base_model, tf.keras.layers.GlobalAveragePooling2D(), tf.keras.layers.Dense(256, activation='relu'), tf.keras.layers.BatchNormalization(), tf.keras.layers.Dropout(0.2), tf.keras.layers.Dense(4, activation='softmax')\n])\nlr=0.001\nmodel.compile(loss='categorical_crossentropy', optimizer=Adam(lr=lr), metrics=['accuracy'])","3f91c110":"patience = 1\nstop_patience = 5\nfactor = 0.5\n\ncallbacks = [\n    tf.keras.callbacks.EarlyStopping(patience=stop_patience, monitor='val_loss', verbose=1, restore_best_weights=True),\n    tf.keras.callbacks.ReduceLROnPlateau(monitor='val_loss', factor=factor, patience=patience, verbose=1)\n]","2d87ccfe":"epochs = 20\nhistory = model.fit(train_set, validation_data=valid_set, epochs=epochs, callbacks=callbacks, verbose=1)","0a4fa1b3":"model.evaluate(test_set)","724b64af":"**Dataset is Inbalanced. We want to detect Covid so we add images for pneumonia from another dataset and remove images from lung opacity and normal**"}}