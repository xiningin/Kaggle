{"cell_type":{"31d25a17":"code","5656ecba":"code","6da39f52":"code","e08616b7":"code","997aaea2":"code","d4771526":"code","9c29f1cd":"code","d69489a5":"code","6b287611":"code","e656f28e":"code","0db67459":"code","c286ff75":"code","cb706a86":"code","6b848015":"code","a96dd55f":"code","f9ddc1fc":"code","116c6900":"code","bbd0bc4d":"code","b4529a19":"code","34362963":"code","f9f7b305":"code","e88264a8":"code","077eeb25":"code","c2219bd2":"markdown","1894a7d6":"markdown","46c25325":"markdown","21ca5a0e":"markdown","31f86241":"markdown","c65cd923":"markdown","e7afd0d9":"markdown","9dcae4af":"markdown","36a63815":"markdown","2a062fb4":"markdown","8aab61d4":"markdown","50045dca":"markdown","7dd752e8":"markdown","1ceb8fbb":"markdown","733a2e53":"markdown","82f63111":"markdown","86687eb7":"markdown","afa48ac1":"markdown","74f08e81":"markdown","1bf9db15":"markdown","189bf1dc":"markdown","5c95a196":"markdown"},"source":{"31d25a17":"import numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import LogisticRegression\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier, Pool\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score","5656ecba":"train = pd.read_csv('..\/input\/gusigagaga\/train-2.csv', sep = ',')\ntest = pd.read_csv('..\/input\/gusigagaga\/test-2.csv', sep = ',')","6da39f52":"X_train = train.drop(['TARGET'], axis = 1)\ny_train = train['TARGET']\nX_test = test","e08616b7":"X_train.head(3)","997aaea2":"X_train.describe()","d4771526":"print(X_train.created.min())\nprint(X_test.created.min())\n\nprint(X_train.created.max())\nprint(X_test.created.max())","9c29f1cd":"city_long_border = (-74.03, -73.75)\ncity_lat_border = (40.63, 40.85)\nfig, ax = plt.subplots(ncols=2, sharex=True, sharey=True)\nN = 10000\nax[0].scatter(X_train['longitude'].values[:N], X_train['latitude'].values[:N],\n              color='blue', s=1, label='train', alpha=0.1)\nax[1].scatter(X_test['longitude'].values[:N], X_test['latitude'].values[:N],\n              color='green', s=1, label='test', alpha=0.1)\nfig.suptitle('Train and test area complete overlap.')\nax[0].legend(loc=0)\nax[0].set_ylabel('latitude')\nax[0].set_xlabel('longitude')\nax[1].set_xlabel('longitude')\nax[1].legend(loc=0)\nplt.ylim(city_lat_border)\nplt.xlim(city_long_border)\nplt.show()","d69489a5":"from itertools import combinations\ndef add_functions_and_polynoms(X):\n    X = X.copy()\n    columns_to_poly = list(X.select_dtypes(include=np.number).columns)\n    for combination in combinations(columns_to_poly, 2):\n        X[f'poly_{combination[0]}_{combination[1]}'] = X[combination[0]] * X[combination[1]]\n    for column in columns_to_poly:\n        X[f'x**2_{column}'] = X[column] ** 2\n        X[f'log_{column}'] = np.log(X[column])\n        X[f'sqrt_{column}'] = np.sqrt(X[column])\n        X[f'1 \/ {column}'] = 1 \/ X[column]\n        X[f'sin_{column}'] = np.sin(X[column])\n        X[f'cos_{column}'] = np.cos(X[column])\n        X[f'sin^2_{column}'] = np.sin(X[column]) ** 2\n        X[f'cos^2_{column}'] = np.cos(X[column]) ** 2\n    X = X.replace(np.nan, 0)\n    X = X.replace(np.inf, 0)\n    X = X.replace(-np.inf, 0)\n    return X\nX_train = add_functions_and_polynoms(X_train)\nX_test = add_functions_and_polynoms(X_test)","6b287611":"listy = list(X_test.columns)\n\ndef add_features_onehot(X):\n    X = X.copy()\n    X['features'] = X.features.apply(lambda x: x[1:-1].lower().replace(\"'\", \"\").replace('\"', \"\").split(', '))\n    \n    X = X.join(X.features.str.join('|').str.get_dummies())\n    return X\n\nX_train = add_features_onehot(X_train)\nX_test = add_features_onehot(X_test)\n","e656f28e":"X_test[X_test.columns.intersection(X_train.columns)].columns","0db67459":"from sklearn.decomposition import PCA\n\ncoords = np.vstack((X_train[['latitude', 'longitude']].values, X_test[['latitude', 'longitude']].values))\npca = PCA().fit(coords)\n\ndef add_PCA_i(X, i):\n    X = X.copy()\n    X[f'pca{i}'] = pca.transform(X[['latitude', 'longitude']])[:, i]\n    return X\n\nX_train = add_PCA_i(X_train, 0)\nX_test = add_PCA_i(X_test, 0)","c286ff75":"\n\n#train.TARGET = pd.factorize(train['TARGET'])[0] + 1\n\nfrom sklearn.cluster import AgglomerativeClustering\n\n# creates 40 clusters using hierarchical clustering.\ni = 40\nagc = AgglomerativeClustering(n_clusters =i, affinity='euclidean', linkage='ward')\n\ndef add_agglomerative_clusters(X):\n    X = X.copy()\n    X['cluster'] = np.where(((X.longitude > -73.775) |\n                             (X.longitude < -74.050) |\n                             (X.latitude > 40.930)   |\n                             (X.latitude < 40.55)), i, agc.fit_predict(X[['latitude','longitude']]))\n    X = X.join(pd.get_dummies(X.cluster))\n    return X\n\nX_train = add_agglomerative_clusters(X_train)\nX_test = add_agglomerative_clusters(X_test)\n","cb706a86":"def wordlinnes(X):\n    X = X.copy()\n    X['price_per_bedroom'] = X[\"price\"] \/ X[\"bedrooms\"]\n    X[\"price_per_bathroom\"] = X[\"price\"] \/ X[\"bathrooms\"]\n    X = X.drop(['bedrooms','bathrooms'], axis=1)\n    return X\nX_train = wordlinnes(X_train)\nX_test = wordlinnes(X_test)\n","6b848015":"building_ids = X_train['building_id'].value_counts()\nmanager_ids = X_train['manager_id'].value_counts()\ndef countsy(X):\n    X = X.copy()\n    X['manager_ids_count'] = X['manager_id'].apply(lambda x: manager_ids[x] if x in manager_ids else 0)\n    X['building_ids_count'] = X['building_id'].apply(lambda x: building_ids[x] if x in building_ids else 0)\n    return X\nX_train = countsy(X_train)\nX_test = countsy(X_test)","a96dd55f":"def timelines(X):\n    X[\"created\"] = X[\"created\"].astype(\"datetime64\")\n    X['Weekday'] = X.created.dt.weekday\n    X['day_of_month'] = X.created.dt.day\n    X['hour'] = X.created.dt.hour\n    X['is_weekend'] = X.created.apply(lambda x: 1 if x.date().weekday() in (5, 6) else 0)\n    X['month'] = X.created.dt.month\n    X['week'] = X.created.dt.week\n\n    X['hour_weekofyear'] = X.created.dt.weekofyear\n    X['minute'] = X['created'].dt.minute\n    X['pickup_week_hour'] = X['Weekday'] * 24 + X['hour']\n\n    basedate = pd.Timestamp('2016-06-29 18:30:41')\n    X['days_since_last'] = X.created.apply(lambda x: (basedate - x).days)\n    return X\nX_train = timelines(X_train)\nX_test = timelines(X_test)","f9ddc1fc":"test1 = X_test[X_test.columns.intersection(X_train.columns)]\ntrain1 = X_train[X_train.columns.intersection(X_test.columns)].merge(train.TARGET, left_index=True, right_index=True)\n\nfeats_list1 = ['price'] + list(test1[test1.columns.intersection(train1.columns)].columns)[15:]","116c6900":"from catboost import CatBoostClassifier\nfrom sklearn.utils.class_weight import compute_class_weight\n\n\nX_train = train1.loc[:, feats_list1]\nX_test = test1.loc[:, feats_list1]\n\ny_train = train1.loc[:, 'TARGET'].values\n\nclasses = np.unique(y_train)\nweights = compute_class_weight(class_weight='balanced', classes=classes, y=y_train)\nclass_weights = dict(zip(classes, weights))\n\nmodel = CatBoostClassifier(class_weights=class_weights, loss_function='MultiClass', \n                           eval_metric='Accuracy', custom_loss='Accuracy', verbose = 250)","bbd0bc4d":"model.fit(X_train,y_train)","b4529a19":"import shap\nshap.initjs()\nexplainer = shap.TreeExplainer(model)\nshap_values = explainer.shap_values(Pool(X_train, y_train))\nshap.summary_plot(shap_values, X_train, plot_type=\"bar\")","34362963":"shap.summary_plot(shap_values[1], X_train)","f9f7b305":"def plot_shap(row_to_show):\n    row_to_show = row_to_show\n    data_for_prediction = X_train.iloc[[row_to_show]]  # use 1 row of data here. Could use multiple rows if desired\n    data_for_prediction_array = data_for_prediction.values.reshape(1, -1)\n\n\n    model.predict_proba(data_for_prediction_array)\n    print(model.predict_proba(data_for_prediction_array))\n    print(train.iloc[[row_to_show]].TARGET)\n    explainer = shap.TreeExplainer(model)\n    shap_values = explainer.shap_values(data_for_prediction)\n\n    shap.initjs()\n    return shap.force_plot(explainer.expected_value[1], shap_values[1], data_for_prediction)\nplot_shap(7)","e88264a8":"plot_shap(5)","077eeb25":"plot_shap(3)","c2219bd2":"### \u0416\u0438\u0442\u0435\u0439\u0441\u043a\u0430\u044f \u043c\u0443\u0434\u0440\u043e\u0441\u0442\u044c - price_per_bedroom, \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u044c \u0440\u0438\u044d\u043b\u0442\u043e\u0440\u0430 \u0438 building_id","1894a7d6":"### \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0433\u0435\u043e\u0434\u0430\u043d\u043d\u044b\u043c\u0438\n\u0427\u0442\u043e\u0431\u044b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0433\u0435\u043e\u0434\u0430\u043d\u043d\u044b\u0435, \u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b PCA \u0438 Agglomerative clustering.\n\u041c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c PCA \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442 \u0434\u043e\u043b\u0433\u043e\u0442\u044b \u0438 \u0448\u0438\u0440\u043e\u0442\u044b. \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0440\u0435\u0447\u044c \u043d\u0435 \u0438\u0434\u0435\u0442 \u043e\u0431 \u0443\u043c\u0435\u043d\u044c\u0448\u0435\u043d\u0438\u0438 \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u0438, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043c\u044b \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c 2D-> 2D. \u0420\u043e\u0442\u0430\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043c\u043e\u0447\u044c \u043f\u0440\u0438 \u0440\u0430\u0441\u0449\u0435\u043f\u043b\u0435\u043d\u0438\u0438 \u0434\u0435\u0440\u0435\u0432\u0430 \u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u0432 catboost.\n","46c25325":"\u041d\u0430 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u043c \u043d\u0438\u0436\u0435 \u0433\u0440\u0430\u0444\u0438\u043a\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043f\u043e \u0441\u0443\u043c\u043c\u0435 \u0432\u0435\u043b\u0438\u0447\u0438\u043d \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 SHAP \u043f\u043e \u0432\u0441\u0435\u043c \u0432\u044b\u0431\u043e\u0440\u043a\u0430\u043c \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f SHAP, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u043b\u0438\u044f\u043d\u0438\u0439 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438. \u0426\u0432\u0435\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 (\u043a\u0440\u0430\u0441\u043d\u044b\u0439 \u0432\u044b\u0441\u043e\u043a\u0438\u0439, \u0441\u0438\u043d\u0438\u0439 \u043d\u0438\u0437\u043a\u0438\u0439). \u042d\u0442\u043e \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0447\u0442\u043e \u0432\u044b\u0441\u043e\u043a\u0438\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a no fee (1 - \u0435\u0441\u0442\u044c \u043f\u043b\u0430\u0442\u0430, 0 - \u043d\u0435\u0442 \u043f\u043b\u0430\u0442\u044b) \u0441\u043d\u0438\u0436\u0430\u0435\u0442 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u0443\u0435\u043c\u0443\u044e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u044c \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f. \u041e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u0441\u0442\u043e\u0438\u0442\u044c \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c,\u0447\u0442\u043e price_per_bedroom \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u0435\u0448\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u0438, \u044d\u0442\u043e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043d\u0435 \u0434\u0430\u0435\u0442 \u043d\u0438\u043a\u0430\u043a\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0442\u043e\u043c, \u043a\u0430\u043a\u043e\u0439 \u043a\u043b\u0430\u0441\u0441 \u043d\u0443\u0436\u043d\u043e \u0434\u0430\u0442\u044c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443. \u0424\u0438\u0447\u0430 \u0438\u0437 \u0436\u0438\u0442\u0435\u0439\u0441\u043a\u043e\u0439 \u043c\u0443\u0434\u0440\u043e\u0441\u0442\u0438 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u0435\u0442 \u0441 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u043c price.","21ca5a0e":"\u0427\u0442\u043e\u0431\u044b \u043c\u043e\u0434\u0435\u043b\u044c \u0438\u0441\u043a\u0430\u043b\u0430 \u043d\u0435\u043b\u0438\u043d\u0435\u0439\u043d\u044b\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438 \u043f\u043e\u043b\u0438\u043d\u043e\u043c\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438:","31f86241":"## \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0432\u044b\u0432\u043e\u0434:\n\u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0431\u0443\u0441\u0442 \u0434\u0430\u043b\u0438 \u043d\u0435\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u0444\u0438\u0447\u0438: poly_listing_id_price - \u044d\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0435\u0440\u0435\u043c\u043d\u043e\u0436\u0435\u043d\u043d\u044b\u0435 listing_id \u0438 price. \u0412 \u0447\u0435\u043c \u0432\u043e\u043e\u0431\u0449\u0435 \u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0441\u043c\u044b\u0441\u043b \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430? \u0410 \u0432 \u0447\u0435\u043c \u0441\u043c\u044b\u0441\u043b\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 pca_0? \u041f\u043e\u0447\u0435\u043c\u0443 listing_id \u0432\u043e\u043e\u0431\u0449\u0435 \u0438\u043c\u0435\u0435\u0442 \u0432\u044b\u0441\u043e\u043a\u043e\u0435 \u0432\u043b\u0438\u044f\u043d\u0438\u0435, \u0435\u0441\u043b\u0438 \u043a\u0430\u0436\u0434\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0435? \u041f\u043e\u0447\u0435\u043c\u0443 \u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0442\u0438\u043f\u0430 hour, \u042d\u0442\u043e \u0432\u0441\u0451 \u043c\u044b \u0432\u0435\u0434\u0435\u043c \u043a \u0442\u043e\u043c\u0443, \u0447\u0442\u043e \u043d\u0430 \u0442\u0430\u043a\u0438\u0445 \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u044f\u0445 \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u043e\u043f\u0438\u0440\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0437\u0434\u0440\u0430\u0432\u044b\u0439 \u0441\u043c\u044b\u0441\u043b \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0444\u0438\u0447, \u043e\u043d\u0438 \u043c\u043e\u0433\u0443\u0442 \u043d\u0435 \u0438\u043c\u0435\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0438, \u043d\u043e \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u043e\u043c\u043e\u0447\u044c \u043c\u043e\u0434\u0435\u043b\u0438.","c65cd923":"### \u0412\u0440\u0435\u043c\u044f","e7afd0d9":"\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 f(x) \u0443 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 medium \u0438 high \u0447\u0430\u0441\u0442\u043e \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e\u0435 - \u044d\u0442\u0438 \u043a\u043b\u0430\u0441\u0441\u044b \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f \u0441\u043e\u0432\u0441\u0435\u043c \u0447\u0443\u0442\u044c-\u0447\u0443\u0442\u044c \u043f\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e f(x), \u043d\u043e \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u043d\u0430 \u043e\u0434\u0438\u043d \u0438\u0437 \u044d\u0442\u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432.","9dcae4af":"AgglomerativeClustering \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0434\u043b\u044f \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0442\u043e\u0447\u0435\u043a \u043d\u0430 \u043f\u043b\u043e\u0441\u043a\u043e\u0441\u0442\u0438","36a63815":"\u041d\u043e \u0432 \u043a\u043b\u0430\u0441\u0441\u0435 low \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 f(x) \u0432\u0441\u0435\u0433\u0434\u0430 \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u043f\u0440\u0430\u0432\u0435\u0435","2a062fb4":"# \u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435\n\u0412 \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u0431\u044b\u043b\u0430 \u0437\u0430\u0434\u0430\u0447\u0430 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u044c \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043e \u043f\u0440\u043e\u0434\u0430\u0436\u0435 \u0434\u043e\u043c\u0430. \u0422\u0443\u0442 \u044f \u043f\u043e\u043f\u044b\u0442\u0430\u044e\u0441\u044c \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043e \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u043b\u0438\u0441\u044c \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0430\u043c\u0438 \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c, \u043a\u0430\u043a\u0438\u0435 \u0438\u0437 \u043d\u0438\u0445 \u0434\u0430\u043b\u0438 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\n\n\u0412 \u0445\u043e\u0434\u0435 \u044d\u0442\u043e\u0433\u043e \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0430 \u043c\u044b:\n* \u0438\u0441\u0441\u043b\u0435\u0434\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\n* \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043c\u043d\u043e\u0433\u043e \u043d\u043e\u0432\u044b\u0445 \u0444\u0438\u0447\n* \u043f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0432\u0430\u0436\u043d\u043e\u0441\u0442\u044c \u0444\u0438\u0447 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e shap\n\n\u0412 \u043a\u043e\u043d\u0446\u0435 \u0435\u0441\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u0439 \u0432\u044b\u0432\u043e\u0434!\n\nReferences\n\n\u041f\u0440\u0438 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u0433\u0435\u043e\u0434\u0430\u043d\u043d\u044b\u043c\u0438, \u0432\u0434\u043e\u0445\u043d\u043e\u0432\u0438\u043b\u0441\u044f [\u044d\u0442\u0438\u043c \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u043e\u043c](https:\/\/www.kaggle.com\/gaborfodor\/from-eda-to-the-top-lb-0-367?scriptVersionId=1515342) \u043e\u0442 \u0411\u0435\u043b\u0443\u0433\u0438, \u0433\u0440\u0430\u043d\u0434\u043c\u0430\u0441\u0442\u0435\u0440\u0430 \u043d\u0430 \u041a\u0430\u0433\u0433\u043b\u0435","8aab61d4":"## \u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f \u0434\u043b\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438\n\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u044f train \u0438 test.","50045dca":"\u0422\u0443\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d \u0442\u043e\u043f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u0441\u0435\u0433\u043e \u043f\u043e\u0432\u043b\u0438\u044f\u043b\u0438 \u043d\u0430 \u043c\u043e\u0434\u0435\u043b\u044c. \u0412 \u0442\u043e\u043f\u0435 \u043f\u043e \u0432\u043b\u0438\u044f\u043d\u0438\u044e \u043e\u043a\u0430\u0437\u0430\u043b\u0438\u0441\u044c \u043f\u0435\u0440\u0435\u043c\u043d\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u043d\u044b\u0435 \u043e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 features, pca0 \u043f\u043e\u0432\u043b\u0438\u044f\u043b \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0435\u043f\u043b\u043e\u0445\u043e, \u043d\u043e AGC \u043d\u0438\u043a\u0430\u043a \u043d\u0435 \u043f\u043e\u0432\u043b\u0438\u044f\u043b. \u041e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u043e, \u0447\u0442\u043e \u0432 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0438 \u0435\u0441\u0442\u044c hardwood floors (\u043f\u0430\u0440\u043a\u0435\u0442\u043d\u044b\u0435 \u043f\u043e\u043b\u044b), \u0442\u043e \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u044c \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e class 2 \u0438\u043c\u0435\u0435\u0442 \u0441\u0430\u043c\u0443\u044e \u0431\u043e\u043b\u044c\u0448\u0443\u044e \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u0434\u043e\u043b\u044e \u0432 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435.\n\u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a \u044d\u0442\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043f\u043e\u0432\u043b\u0438\u044f\u043b\u0438 \u043d\u0430 \u043c\u043e\u0434\u0435\u043b\u044c: \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u043b\u0438 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e.","7dd752e8":"\u041a\u0430\u043a \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u0431\u0435\u0439\u0437\u043b\u0430\u0439\u043d? \n- created. \u0421\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0435\u043c \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u044c \u043b\u044e\u0431\u043e\u0433\u043e \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u043d\u0438\u0436\u0430\u0435\u0442\u0441\u044f. \n- features. \u0421\u0434\u0435\u043b\u0430\u0442\u044c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u0443\u044e \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u043f\u043e\u0434 \u043a\u0430\u0436\u0434\u0443\u044e \u0444\u0438\u0447\u0443. \n- latitude, longitude, street_address. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430 \u043a\u0430\u0440\u0442\u0435, \u0433\u0434\u0435 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u044b \u0441\u0430\u043c\u044b\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u0437\u0434\u0430\u043d\u0438\u044f.\n\n\n\n\n","1ceb8fbb":"## Feature engineering","733a2e53":"\u0422\u0443\u0442 \u043f\u044b\u0442\u0430\u044e\u0441\u044c \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u0441 \u043a\u043e\u043b\u043e\u043d\u043a\u043e\u0439 features. \u0414\u0435\u043b\u0430\u0435\u043c one-hot encoding, \u0447\u0442\u043e\u0431\u044b \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044e \u043c\u044b \u0437\u043d\u0430\u043b\u0438, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u0442\u044c \u043b\u0438 \u0432 \u044d\u0442\u043e\u043c \u0434\u043e\u043c\u0435 \u043b\u0438\u0444\u0442 \u0438\u043b\u0438 \u043d\u0435\u0442","82f63111":"\u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 features \u043e\u0441\u0442\u0430\u0432\u0438\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0435\u0441\u0442\u044c \u043a\u0430\u043a \u0432 train, \u0442\u0430\u043a \u0438 test. \u041f\u0440\u0438 One-hot encoding \u0431\u044b\u043b\u043e \u0432\u044b\u044f\u0441\u043d\u0438\u043b\u043e\u0441\u044c, \u0447\u0442\u043e \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0435 features \u043b\u044e\u0434\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u043b\u0438 \u043c\u043d\u043e\u0433\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0438\u043a\u0430\u043a \u043d\u0435 \u043f\u043e\u043c\u043e\u0433\u0443\u0442 \u043c\u043e\u0434\u0435\u043b\u0438.","86687eb7":"### \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0432 SHAP","afa48ac1":"\u0432\u043e\u0442 \u0442\u0430\u043a \u043a\u0440\u0430\u0441\u0438\u0432\u043e \u0442\u0435\u043f\u0435\u0440\u044c \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a features","74f08e81":"\u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0430 train \u0438 test \u0431\u044b\u043b\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u043c\u043f\u043e \u0433\u0435\u043e\u0434\u0430\u043d\u043d\u044b\u043c, \u044d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \u043d\u0430\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u0431\u0435\u0437 \u0443\u0447\u0438\u0442\u0435\u043b\u044f \u0438 feature extraction \u043d\u0430 \u0432\u0441\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435","1bf9db15":"\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c building_id \u0438 manager_id, \u043e\u043d\u0438 \u0434\u0430\u043b\u0438 \u0432\u044b\u0441\u043e\u043a\u043e\u0435 \u0432\u043b\u0438\u044f\u043d\u0438\u0435 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434 \u043c\u043e\u0434\u0435\u043b\u0438.\u0421 manager_id \u044d\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0431\u044a\u044f\u0441\u043d\u0438\u0442\u044c - \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u0440\u0438\u044d\u043b\u0442\u043e\u0440 \u0443\u043c\u0435\u0435\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043f\u043e\u0434\u043a\u0440\u0443\u0442\u0438\u0442\u044c \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0430\u043a,\u0447\u0442\u043e\u0431\u044b \u043e\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u043c. \u0410 \u0432\u043e\u0442 \u043f\u043e\u0447\u0435\u043c\u0443 listing_id \u0434\u0430\u0435\u0442 \u0431\u0443\u0441\u0442 \u0432 \u0441\u043a\u043e\u0440\u0435 - \u043d\u0435\u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u0432\u0441\u0435-\u0442\u0430\u043a\u0438 \u0432 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435 \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435.","189bf1dc":"\u041a\u0430\u043a \u044d\u0442\u043e \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c?\n\n\u041f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u044e\u0442 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u044c, \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u0441\u0438\u043d\u0438\u043c, \u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u044e\u0442 - \u0440\u043e\u0437\u043e\u0432\u044b\u043c. \u0422\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430 \u043a\u0430\u0436\u0434\u043e\u0435 \u0438\u0437 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u0438 \u043f\u043e\u043d\u044f\u0442\u044c, \u043f\u043e\u0447\u0435\u043c\u0443 \u043c\u043e\u0434\u0435\u043b\u044c \u0440\u0435\u0448\u0438\u043b\u0430 \u0434\u0430\u0442\u044c \u044d\u0442\u043e\u043c\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443 \u0442\u043e\u0442 \u0438\u043b\u0438 \u0438\u043d\u043e\u0439 \u043a\u043b\u0430\u0441\u0441 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u0438.\n\n\u0427\u0435\u043c \u043b\u0435\u0432\u0435\u0435 \u043e\u0442 base_value \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 f(x), \u0442\u0435\u043c \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u043c \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u044d\u0442\u043e \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435. f(x) - \u0432\u044b\u0432\u043e\u0434 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044e, base_value - \u0441\u0440\u0435\u0434\u043d\u0438\u0439 \u0432\u044b\u0432\u043e\u0434 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043d\u0430\u043c\u0438 \u043d\u0430\u0431\u043e\u0440\u0443 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445. \u0421\u043f\u0440\u0430\u0432\u0430 \u043d\u0435\u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f, \u0441\u043b\u0435\u0432\u0430 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435.","5c95a196":"## \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a \u0438 \u0432\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439"}}