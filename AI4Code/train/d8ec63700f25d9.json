{"cell_type":{"7a008136":"code","d6ba9f4c":"code","55e3826b":"code","bd3712ed":"code","709f4c0f":"code","9b498748":"code","d9c3e075":"code","0a053c5c":"code","7fc4c0b2":"code","89d09976":"code","7f537f66":"code","c06be971":"code","5a285c41":"code","c98b0926":"code","aa1953b6":"code","a0d5ecaf":"markdown","42a2f8a5":"markdown","6826ba25":"markdown"},"source":{"7a008136":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt# for plotting\nimport seaborn as sns # for plotting... for advanced plots.\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d6ba9f4c":"#loading the data in dataframe\ndf=pd.read_csv(\"..\/input\/water-potability\/water_potability.csv\")\ndf.head()","55e3826b":"#displaying tail of the dataframe\ndf.tail()","bd3712ed":"#checking if there are null values in dataset\ndf.isnull().sum()","709f4c0f":"df.describe()","9b498748":"print(\"Number of Rows:\",df.shape[0])\nprint(\"Number of columns:\",df.shape[1])","d9c3e075":"#finding correlation between the features\nplt.figure(figsize=(15,10))\nsns.heatmap(df.corr(),annot=True)","0a053c5c":"df['ph'].fillna(value=df['ph'].mean(), inplace=True)\ndf['Sulfate'].fillna(value=df['Sulfate'].mean(), inplace=True)\ndf['Trihalomethanes'].fillna(value=df['Trihalomethanes'].mean(), inplace=True)","7fc4c0b2":"df.head()","89d09976":"#X is features array and Y is target variable\nX=df.iloc[:,:9]\nY=df.iloc[:,-1]","7f537f66":"#Splitting the dataset into training and testing variables\nfrom sklearn.model_selection import train_test_split\n \nX_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2,random_state=20)\n","c06be971":"#RF\nfrom sklearn.ensemble import RandomForestClassifier\nclf=RandomForestClassifier(n_estimators=500)\nclf.fit(X_train,y_train)\ny_pred=clf.predict(X_test)","5a285c41":"from sklearn import metrics\n# Model Accuracy\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))\nprint(\"Precision:\",metrics.precision_score(y_test, y_pred))","c98b0926":"from sklearn import svm\n#create a classifier\ncls = svm.SVC(kernel=\"linear\")\n#train the model\ncls.fit(X_train,y_train)\n#predict the response\npred = cls.predict(X_test)","aa1953b6":"#printing accuracy and precision\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))\nprint(\"Precision:\",metrics.precision_score(y_test, y_pred))","a0d5ecaf":"#Visualizations","42a2f8a5":"**#Random Forest**","6826ba25":"**#Support Vector Machine**"}}