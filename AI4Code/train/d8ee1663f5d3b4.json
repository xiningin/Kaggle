{"cell_type":{"cce2a0c9":"code","ded22320":"code","94dc5720":"code","10198181":"code","0920a1e2":"code","d7718d55":"code","b866b361":"code","d7e17e96":"code","10e65c15":"code","4ce9ec5b":"code","0d30ce5f":"markdown","1c26fc13":"markdown","2bf22ede":"markdown","85f0fc20":"markdown","8a2efdb9":"markdown"},"source":{"cce2a0c9":"from sklearn.linear_model import LinearRegression\nfrom tabulate import tabulate\nimport re\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\npd.options.mode.chained_assignment = None \ndata=pd.read_csv('..\/input\/used-cars-price-prediction\/train-data.csv')\nar=data.values\nhnames=data.columns","ded22320":"lb=LabelEncoder()\nfor i in range(2,8):\n    if i==4 or i==3 :\n        continue\n    ar[:,i]=lb.fit_transform(ar[:,i])\n\n\ndata=pd.DataFrame(ar,columns=hnames)    \n","94dc5720":"data['Mileage']=data['Mileage'].str.extract(r'(\\d+\\.\\d+)',flags=0,expand=True).astype(float)\ndata['Engine']=data['Engine'].str.extract(r'(\\d+)',expand=True).astype(float)\ndata['Power']=data['Power'].str.extract(r'(\\d+\\.\\d+)',flags=0,expand=True).astype(float)\ndel data['Unnamed: 0']\ndata.Engine.fillna(data.Engine.mean(),inplace=True)\ndata['Mileage'].fillna(data['Mileage'].median(),inplace=True)\ndata['Price'].fillna(88.20,inplace=True)\ndata['Seats'].fillna(data['Seats'].mean(),inplace=True)\nfor i in range(data.shape[0]):\n    if data.at[i,'Fuel_Type']==2:\n        data.at[i,'Mileage']=20.532;\ndata.replace(data.loc[data['New_Price'].isnull(),['New_Price']],0,inplace=True)\nreplacement=data.loc[data['New_Price']!=0,['New_Price']]\n\nreplacement['New_Price']=replacement['New_Price'].str.strip().str[0:-5]\nreplacement['New_Price']=pd.to_numeric(replacement.New_Price)\n\ndata.loc[data['New_Price']!=0,['Price']]=replacement.values\n\ndel replacement\ndel data['New_Price']\n","10198181":"\n\n#these lines will fill valees in those places in dataframe where value is 0\ndata.replace(data.loc[data['Mileage']==0,['Mileage']],data.Mileage.mean(),inplace=True)\ndata.at[3999,'Seats']=5\ndata.at[489,'Price']=87.76\n\n'''Fowlling code block deals with the prediction of the missing power as power is a crucial feature in deciding the price.Missing Mileages are filled by mean as mostly lie in a predictable range around 20-ish'''\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.model_selection import cross_val_score\nx_test=data.loc[data.Power.isnull() & data.Engine.notnull()]\nx_test.drop(['Name','Location','Power'],axis=1,inplace=True)\nx_test.fillna(0,inplace=True)\nx_train=data.loc[data.Power.notnull() & data.Engine.notnull()]\ny_train=x_train['Power']\nx_train.drop(['Name','Location','Power'],axis=1,inplace=True)\nmodel=DecisionTreeRegressor(random_state=3)\nmodel.fit(x_train,y_train)\ny_pred=model.predict(x_test)\ndata.loc[data.Power.isnull() & data.Engine.notnull(),['Power']]=y_pred\n\n\n","0920a1e2":"print(data)\n","d7718d55":"from sklearn.model_selection import train_test_split\nX=data.drop(['Price','Name'],axis=1)\ny=data['Price']\nx_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.20,random_state=49)\n\n","b866b361":"from sklearn.ensemble import RandomForestRegressor\n\n\nregressor1= RandomForestRegressor(n_estimators=369,random_state=19,bootstrap=True)\nregressor1.fit(x_train,y_train)\nregressor1.score(x_test,y_test)\n","d7e17e96":"from sklearn.tree import DecisionTreeRegressor\nrgr2=DecisionTreeRegressor(criterion='mse',random_state=42,min_samples_split=10,max_features='log2')\nrgr2.fit(x_train,y_train)\nrgr2.score(x_test,y_test)","10e65c15":"from sklearn.ensemble import AdaBoostRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nrgrA=AdaBoostRegressor(DecisionTreeRegressor(max_depth=28),n_estimators=270,learning_rate=0.7)\nrgrA.fit(x_train,y_train)\nrgrA.score(x_test,y_test)\n                      \n","4ce9ec5b":"from sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nrgrG=GradientBoostingRegressor(max_depth=11,n_estimators=400,learning_rate=0.7)\nrgrG.fit(x_train,y_train)\nrgrG.score(x_test,y_test)","0d30ce5f":"Following code will make use of interdependent features to predict the missing values .","1c26fc13":"the data is prepared for model training now. There is no NaN value and all columns are filled properly","2bf22ede":"Certain important columns like location and Owner type are given as String. So LabelEncoder is used to convert them to numeric values. Other insignificant columns have been removed","85f0fc20":"This is my first kaggle notebook. Sorry for this abrupt coding and markdowns.\nIn this notebook the main objective is to filter the data in a new and innovative way. More emphasis on the data cleaning and profiling\nis given. The ML algortihms used are very basic ones so as to produce realistic results . ","8a2efdb9":"Certain columns like Owner type, Capacity are not as important as other facotrs like mileage,power or Engine. So such columns are filled using generic methods like average or median,while more complex algorithms are used for crucial ones"}}