{"cell_type":{"c4ecfa27":"code","021e57cf":"code","362f288a":"code","f5700d29":"code","4eeb97ad":"code","ce087d66":"code","7bdd9ea7":"code","f0935d91":"code","366ab1fc":"code","3f15b324":"code","4d5729f3":"code","ca16aef8":"code","171c5240":"code","2c6125ea":"code","501cb3f5":"code","b4c05333":"code","4a417421":"code","8b9465b6":"code","dc89f683":"code","f542b43b":"code","a2e065de":"code","b6198de9":"code","e17ee1fa":"code","cdc1b918":"code","ff53c35a":"code","351cb0fa":"code","07761b1b":"code","d970941e":"code","f2265466":"code","ed48b421":"code","4818fe64":"code","570cc714":"code","266ffade":"code","f85e1515":"code","1f2b02a9":"code","b041b010":"code","42e73442":"code","fcd9c6e2":"code","ce3a0edc":"code","e1f232c8":"code","3ffc005e":"code","f8fffde0":"code","a4f507bd":"code","fd88627f":"code","0c05069e":"code","814a31e1":"code","6e56da46":"code","02dff637":"code","72a7273e":"code","0ae56156":"code","82fdd5ae":"code","146ea840":"code","69d3e9d7":"code","fe2144c1":"code","824bbe27":"code","8ce4c70a":"code","1e0fd3ac":"code","dc0f9ae9":"code","a83491a5":"code","2a19f4c8":"code","70ea7e52":"code","668f9dbe":"code","e7344abc":"code","10d9183f":"code","a931cf4e":"code","faafb660":"code","61a8c8d9":"code","ee94e2fb":"code","923ffcce":"code","881369e1":"code","5bfe8cf1":"code","ef87401a":"code","c879957c":"code","f60ac42f":"code","e8f02d8e":"code","b58476f0":"code","54380eed":"code","4cbf7a8b":"code","aa9c5f9a":"code","bb28af92":"code","4daadd44":"code","6941b807":"code","8f590dc5":"code","05a59a60":"code","9702ab41":"code","e01381b0":"code","03617545":"code","9ad8e6af":"code","14991c22":"code","239594f8":"code","e0ab19a6":"code","aa4cb75a":"code","9b0aee15":"code","28cdf543":"code","6129473e":"code","b1322959":"code","4187eef1":"code","1c530ec3":"code","edf1236c":"code","8ec59d05":"code","8bde43c3":"code","1de3456c":"code","65b5acc4":"code","04f2b8e9":"code","db9f1943":"code","72cb1dd2":"code","14529d55":"code","b384a768":"code","eba03146":"code","b93bccdc":"code","6e7c0a94":"code","cb05459a":"code","21097315":"code","a3fc2849":"code","0eb4bfd5":"markdown","930a6078":"markdown","b53370f2":"markdown","e6581c3c":"markdown","c1fdfb85":"markdown","7bc6582b":"markdown","fd9c0d69":"markdown","1f0a69fc":"markdown","dcf85988":"markdown","49835618":"markdown","015acfa8":"markdown","3dfe8fd4":"markdown","7491d510":"markdown","bed97514":"markdown","e218425a":"markdown","517731d7":"markdown","ef190b4a":"markdown","87698f9c":"markdown","e40a9139":"markdown","453ead19":"markdown","df44b99a":"markdown","59c3593e":"markdown","853f71b0":"markdown","794b12c0":"markdown","82754026":"markdown","c5ebb100":"markdown","0aef4a82":"markdown","8076400d":"markdown","7a0df5a0":"markdown","c94c34b5":"markdown","f6df831f":"markdown","5d02b48f":"markdown","da68b706":"markdown","d93a56ba":"markdown","605cce3f":"markdown","1c992a50":"markdown","f1a6fe9b":"markdown","b1931076":"markdown","e954c3f8":"markdown","44dd7c18":"markdown","76ab6330":"markdown","31f2799e":"markdown","b20425b8":"markdown","937dca5c":"markdown","14af30a4":"markdown","9cde6422":"markdown","3419a9d3":"markdown","f9e0684f":"markdown","9e085291":"markdown","9f40bb70":"markdown","17fa0617":"markdown","61e9b5ee":"markdown","c657223d":"markdown","177aa479":"markdown","7923e272":"markdown","e472d919":"markdown","7483a495":"markdown","8e710bd1":"markdown","c8a38437":"markdown","b967f25b":"markdown","1ee57ce1":"markdown","eeb25887":"markdown","4f7405b3":"markdown","9a62b291":"markdown","9528066d":"markdown","b75cca56":"markdown","f5d7b9a5":"markdown","aca1f310":"markdown","0d3a1818":"markdown","6d912170":"markdown","93b6bb87":"markdown","4da015bb":"markdown","10aa1a32":"markdown","ba265dbc":"markdown","44cdf816":"markdown","d2fd7f39":"markdown","40dd14c1":"markdown","ac87bbd5":"markdown","fb92c4b1":"markdown","0863f55a":"markdown","d5ab2670":"markdown","8a14f779":"markdown","5343b092":"markdown"},"source":{"c4ecfa27":"import pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt \nimport plotly.express as px \nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom math import ceil\nfrom tqdm import tqdm\nfrom sklearn.linear_model import LinearRegression\nimport seaborn as sns\nimport math\nimport gc ","021e57cf":"! pip3 install xlrd","362f288a":"! pip3 install openpyxl","f5700d29":"# Load the datas \ndata = pd.read_excel(\"..\/input\/historyloandatas\/ATUCE_-_Data_Scientist_-_Case_study_data_2021_03.xlsx\")","4eeb97ad":"# take a look at the datas\ndata.head()","ce087d66":"data[\"Taux\"] = data[\"Taux\"].str.replace(\",\",\".\").str.replace(\"%\",\"\").astype(\"float\")","7bdd9ea7":"data[\"Montant\"] = data[\"Montant\"].str.replace(\"\u20ac\",\"\").str.replace(\" \",\"\").str.replace(\"5\\xa0000\\xa0000\\xa0\",\"NaN\").astype(\"float\")","f0935d91":"data[\"Ant\u00e9riorit\u00e9\"]=data[\"Ant\u00e9riorit\u00e9\"].replace(\"200811 \u00e0 50\\n\",\"2008\").astype(\"int\")","366ab1fc":"data[\"capital social\"] = data[\"capital social\"].str.replace(\"\u20ac\",\"\").str.replace(\" \",\"\").\\\nstr.replace(\"\\n\",\"\").str.replace(\"6\\xa0000\\xa0\",\"NaN\").str.replace(\"-\",\"NaN\").str\\\n.replace('566\\xa0500\\xa0',\"NaN\").astype(\"float\")","3f15b324":"for i in range(15,19):\n    data[f\"Nombre de mois de la p\u00e9riode {i}\"] = data[f\"Nombre de mois de la p\u00e9riode {i}\"].str.replace(\"mois\",\" \").str.replace(\"-\",\"NaN\").\\\n    str.replace(\",\",\".\").str.replace('31\/10\/2017','NaN').astype(\"float\")","4d5729f3":"for i in range(15,19):\n    data[f\"Chiffre d\\'Affaires {i}\"] = data[f\"Chiffre d\\'Affaires {i}\"].str.replace(\" \",\"\").\\\n    str.replace(\",\",\".\").str.replace(\"-\",\"NaN\").str.replace('20\\xa0713',\"NaN\").str.replace\\\n    (\"\u20ac\",\"\").str.replace('Na',\"NaN\").str.replace('NaNN',\"NaN\").str.replace('23\\xa0217',\"NaN\").\\\n    str.replace('13mois',\"NaN\").astype(\"float\")","ca16aef8":"for i in range(15,19):\n    data[f\"Evolution du Chiffre d\\'Affaires {i}\"] = data[f\"Evolution du Chiffre d\\'Affaires {i}\"].str.\\\n    replace(\"%\",\"\").str.replace(\"N\/A\",\"NaN\").str.replace(\"n\/a\",\"NaN\").str.replace(\"-\",\"NaN\").str.replace(\",\",\".\").str.replace('N\/a','NaN')\\\n    .str.replace(r\"^Na[\\w \\W]*\",\"NaN\").str.replace(\" \",\"\").astype(float)","171c5240":"for i in range(15,19):\n    data[f\"EBE(retrait\u00e9 des loyers de leasing) {i}\"] = data[f\"EBE(retrait\u00e9 des loyers de leasing) {i}\"].str.replace('\\d*%*\\s*-\\s*\\d*%',\"NaN\").\\\n    str.replace(\" \",\"\").str.replace(\"-\",\"NaN\").str.replace('NaN1021',\"NaN\").str.replace(\"8\\xa0512\",\"NaN\").\\\n    str.replace(\",\",\".\").str.replace('11\\xa0310',\"NaN\").astype(\"float\")","2c6125ea":"for i in range(15,19):\n  data[f\"Total Bilan {i}\"]=data[f\"Total Bilan {i}\"].str.replace(\" \",\"\").str.replace(\",\",\".\").\\\n  str.replace(\"-\",\"NaN\").str.replace('105\\xa0222',\"NaN\").str.replace(\"\u20ac\",\"\").str.replace('124\\xa0150',\"NaN\").\\\n  str.replace('5%NaN10%',\"NaN\").astype(\"float\")","501cb3f5":"for i in range(15,19):\n    data[f\"BFRE {i}\"]=data[f\"BFRE {i}\"].str.replace(\" \",\"\").str.replace(\"-\",\"NaN\").\\\n    str.replace('NaN\\d*',\"NaN\").str.replace(\",\",\".\").str.replace(\"%\",\"\").str.replace('5\\xa0427',\"NaN\").\\\n    astype(\"float\")","b4c05333":"for i in range(15,19):\n   data[f\"Capacit\u00e9 de remboursement (FCCR) {i}\"]=data[f\"Capacit\u00e9 de remboursement (FCCR) {i}\"].str.replace(\",\",\".\").\\\n   str.replace(\"-\",\"NaN\").str.replace('NaN\\d*.\\d*\\s*',\"NaN\").str.replace(\" \",\"\").astype(\"float\")","4a417421":"for i in range(15,19):\n  data[f\"Fonds Propres {i}\"] = data[f\"Fonds Propres {i}\"].str.replace(\" \",\"\").str.replace(\",\",\".\").\\\n  str.replace(\"-\",\"NaN\").str.replace(\"NaN.*\\d*\",\"NaN\").str.replace(\"21\\xa0386\",\"NaN\").str.replace(\"\\W\",\"\").\\\n  str.replace('28\\xa0340',\"NaN\").astype(\"float\")","8b9465b6":"for i in range(15,19):\n   data[f\"Fonds Propres \/ Total Bilan {i}\"]=data[f\"Fonds Propres \/ Total Bilan {i}\"].str.replace(\",\",\".\").\\\n   str.replace(\"%\",\"\").str.replace(\" \",\"\").str.replace(\"-\",\"NaN\").str.replace(\"NaN\\d*.*\\d*\",\"NaN\").\\\n   str.replace(\"*\",\"\").astype(\"float\")","dc89f683":"for i in range(15,19):\n   data[f\"Passif circulant {i}\"]=data[f\"Passif circulant {i}\"].str.replace(\" \",\"\").str.\\\n   replace(\"-\",\"NaN\").str.replace('22\\xa0016',\"NaN\").str.replace(\"\u20ac\",\"\").str.replace('17\\xa0474',\"NaN\").\\\n   str.replace(\",\",\".\").str.replace(\"*\",\"\").astype(\"float\")","f542b43b":"for i in range(15,19):\n  data[f\"Actif immobilis\u00e9 {i}\"] = data[f\"Actif immobilis\u00e9 {i}\"].str.replace(\" \",\"\").str.replace(\"\u20ac\",\"\").\\\n  str.replace(\"-\",\"NaN\").str.replace('82\\xa0643',\"NaN\").str.replace('101\\xa0249',\"NaN\").\\\n  str.replace(\",\",\".\").str.replace(\"%\",\"\").astype(\"float\")\n  data[f\"Actif circulant {i}\"] = data[f\"Actif circulant {i}\"].str.replace(\" \",\"\").str.replace(\"\u20ac\",\"\").\\\n  str.replace(\"-\",\"NaN\").str.replace('82\\xa0643',\"NaN\").str.replace('101\\xa0249',\"NaN\").\\\n  str.replace(\",\",\".\").str.replace(\"%\",\"\").str.replace('22\\xa0579',\"NaN\").str.replace('22\\xa0901',\"NaN\").\\\n  astype(\"float\")","a2e065de":"for i in range(15,19):\n   data[f\"Dettes court terme {i}\"]= data[f\"Dettes court terme {i}\"].str.replace(\" \",\"\").str.replace(\"\u20ac\",\"\").\\\n   str.replace(\"-\",\"NaN\").str.replace('82\\xa0643',\"NaN\").str.replace('101\\xa0249',\"NaN\").\\\n   str.replace(\",\",\".\").str.replace(\"%\",\"\").str.replace('22\\xa0579',\"NaN\").str.replace('22\\xa0901',\"NaN\").\\\n   str.replace(\"*\",\"\").str.replace(\"NaN\\d*.*\\d*\",\"NaN\").str.replace(\"11\\xa0172\",\"NaN\").\\\n   str.replace('9\\xa0258',\"NaN\").astype(\"float\")\n   data[f\"Dettes Moyen long terme {i}\"]=data[f\"Dettes Moyen long terme {i}\"].str.replace(\" \",\"\").str.replace(\"\u20ac\",\"\").\\\n   str.replace(\"-\",\"NaN\").str.replace('82\\xa0643',\"NaN\").str.replace('101\\xa0249',\"NaN\").\\\n   str.replace(\",\",\".\").str.replace(\"%\",\"\").str.replace('22\\xa0579',\"NaN\").str.replace('22\\xa0901',\"NaN\").\\\n   str.replace(\"*\",\"\").str.replace(\"NaN\\d*.*\\d*\",\"NaN\").str.replace(\"11\\xa0172\",\"NaN\").\\\n   str.replace('9\\xa0258',\"NaN\").str.replace(\"44\\xa0027\",\"NaN\").str.replace('59\\xa0117',\"NaN\").\\\n   astype(\"float\")","b6198de9":"for i in range(15,19):\n   data[f\"Dettes Nettes \/ EBE(* ann\u00e9es) {i}\"]=data[f\"Dettes Nettes \/ EBE(* ann\u00e9es) {i}\"].str.replace(\" \",\"\").str.replace(\"\u20ac\",\"\").\\\n   str.replace(\"-\",\"NaN\").str.replace('82\\xa0643',\"NaN\").str.replace('101\\xa0249',\"NaN\").\\\n   str.replace(\",\",\".\").str.replace(\"%\",\"\").str.replace('22\\xa0579',\"NaN\").str.replace('22\\xa0901',\"NaN\").\\\n   str.replace(\"*\",\"\").str.replace(\"NaN\\d*.*\\d*\",\"NaN\").str.replace(\"11\\xa0172\",\"NaN\").\\\n   str.replace('9\\xa0258',\"NaN\").str.replace(\"44\\xa0027\",\"NaN\").str.replace('59\\xa0117',\"NaN\").\\\n   astype(\"float\")\n   data[f\"Dettes Nettes \/ Fonds propres {i}\"]=data[f\"Dettes Nettes \/ Fonds propres {i}\"].str.replace(\" \",\"\").str.replace(\"\u20ac\",\"\").\\\n   str.replace(\"-\",\"NaN\").str.replace('82\\xa0643',\"NaN\").str.replace('101\\xa0249',\"NaN\").\\\n   str.replace(\",\",\".\").str.replace(\"%\",\"\").str.replace('22\\xa0579',\"NaN\").str.replace('22\\xa0901',\"NaN\").\\\n   str.replace(\"*\",\"\").str.replace(\"NaN\\d*.*\\d*\",\"NaN\").str.replace(\"11\\xa0172\",\"NaN\").\\\n   str.replace('9\\xa0258',\"NaN\").str.replace(\"44\\xa0027\",\"NaN\").str.replace('59\\xa0117',\"NaN\").\\\n   astype(\"float\")","e17ee1fa":"for i in range(15,19):\n    data[f\"BFRE en nombre de jours de CA {i}\"] = data[f\"BFRE en nombre de jours de CA {i}\"].astype(\"str\").str.replace(\" \",\"\").str.replace(\"-\",\"NaN\").\\\n    str.replace(\"NaN.*\\\\d*\",\"NaN\").str.replace(\",\",\".\").str.replace(\"%\",\"\").str.replace('5\\xa0427',\\\n    \"NaN\").str.replace(\"*\",\"\").astype(\"float\")","cdc1b918":"data[\"effectifs\"] = data[\"effectifs\"].str.replace(\"Plus de\",\"\").str.replace(\" \",\"\").str.replace(\".\",\"\").\\\nstr.replace(\"-\",\"NaN\")\ndata[\"effectifs\"].fillna(\"11 \u00e0 50\",inplace=True)\ndata[\"effectifs\"]=data[\"effectifs\"].str.split(\"\u00e0\").apply(lambda l : sum([float(b) for b in l])\/len(l))","ff53c35a":"for n in range(15,19):\n   #data[f\"Marge d\\'EBE {n}\"] = data[f\"Marge d\\'EBE {n}\"].str.replace(\"Plus de\",\"\").str.replace(\" \",\"\").str.replace(\".\",\"\").\\\n   #str.replace(\"%\",\"\").str.replace(\"(N*a*)*\",\"NaN\").str.replace('NaNNaN',\"NaN\").str.replace(\\\n   #\"NaN5NaN\",\"NaN\").str.replace(\"NaN0NaN\",\"NaN\").str.replace(\"NaN1NaN\",\"NaN\").str.replace(\"NaN2NaN\",\"NaN\").\\\n   #str.replace(\"NaN\\\\nNaN\",\"NaN\").str.replace(\"NaN3NaN\",\"NaN\").str.replace(\"NaN4NaN\",\"NaN\").\\\n   #str.replace(\"NaN6NaN\",\"NaN\").str.replace(\"NaN7NaN\",\"NaN\").str.replace(\"NaN-NaN\",\"NaN\")\n   data[f\"Marge d\\'EBE {n}\"] = data[f\"Marge d\\'EBE {n}\"] .str.replace(\"%\",\"\").str.replace(\"\\\\n\",\"\")\n   data[f\"Marge d\\'EBE {n}\"].replace(\"-\",np.nan,inplace=True)\n   data[f\"Marge d\\'EBE {n}\"].replace('10-15',\"10 - 15\",inplace=True)\n   data[f\"Marge d\\'EBE {n}\"].replace(\"5-10 \",\"5 - 10\",inplace=True)\n   data[f\"Marge d\\'EBE {n}\"].replace(\"15-20\",\"15 - 20\",inplace=True)\n   data[f\"Marge d\\'EBE {n}\"].replace(\"0-5\",\"0 - 5\",inplace=True)\n   data[f\"Marge d\\'EBE {n}\"].replace(\"5-10\",\"5 - 10\",inplace=True)\n   data[f\"Marge d\\'EBE {n}\"] = data[f\"Marge d\\'EBE {n}\"] .str.replace(\" - \",\"\u00e0\")\n   data.loc[data[f\"Marge d\\'EBE {n}\"].notna(),f\"Marge d\\'EBE {n}\"]=\\\n   data.loc[data[f\"Marge d\\'EBE {n}\"].notna(),f\"Marge d\\'EBE {n}\"].str.split(\"\u00e0\").\\\n   apply(lambda l : sum([float(b) for b in l])\/len(l))\n   ","351cb0fa":"for n in range(15,19) :\n    data[f\"Marge d\\'EBE {n}\"] = data[f\"Marge d\\'EBE {n}\"].astype(\"float\")","07761b1b":"for n in range(15,19):\n   data[f\"Resultat Net {n}\"] = data[f\"Resultat Net {n}\"] .str.replace(\"%\",\"\").str.replace(\"\\\\n\",\"\").\\\n   str.replace(\",\",\".\").str.replace(\"\/\",\" - \")\n   data[f\"Resultat Net {n}\"].replace(\"-\",np.nan,inplace=True)\n   data[f\"Resultat Net {n}\"].replace('10-15',\"10 - 15\",inplace=True)\n   data[f\"Resultat Net {n}\"].replace(\"15-20\",\"15 - 20\",inplace=True)\n   data[f\"Resultat Net {n}\"].replace(\"15-20 \",\"15 - 20\",inplace=True)\n   data[f\"Resultat Net {n}\"].replace(\"30-35\",\"30 - 35\",inplace=True)\n   data[f\"Resultat Net {n}\"].replace(\"0-5\",\"0 - 5\",inplace=True)\n   data[f\"Resultat Net {n}\"].replace(\"0-5 \",\"0 - 5\",inplace=True)\n   data[f\"Resultat Net {n}\"].replace(\"5-10\",\"5 - 10\",inplace=True)\n   data[f\"Resultat Net {n}\"].replace(\"5-10 \",\"5 - 10\",inplace=True)\n   data[f\"Resultat Net {n}\"].replace(\"20-25\",\"20 - 25\",inplace=True)\n   data[f\"Resultat Net {n}\"].replace(\"0 -5\",\"0 - 5\",inplace=True)\n   data[f\"Resultat Net {n}\"].replace(\"15 380\",\"15.38 - 15.38\",inplace=True)\n   data[f\"Resultat Net {n}\"].replace(\"3 346\",\"3.346 - 3.346\",inplace=True)\n   data[f\"Resultat Net {n}\"].replace(\"15 694\",\"15.694 - 15.694\",inplace=True)\n   data[f\"Resultat Net {n}\"].replace(\"3 037\",\"3.037 - 3.037\",inplace=True)\n   data[f\"Resultat Net {n}\"] = data[f\"Resultat Net {n}\"] .str.replace(\" - \",\"\u00e0\")\n   data.loc[data[f\"Resultat Net {n}\"].notna(),f\"Resultat Net {n}\"]=\\\n   data.loc[data[f\"Resultat Net {n}\"].notna(),f\"Resultat Net {n}\"].str.split(\"\u00e0\").\\\n   apply(lambda l : sum([float(b) for b in l])\/len(l))","d970941e":"data[\"Pays\"] = data[\"Pays\"].str.replace(\"\\n\",\"\").str.replace(\" \",\"\").astype(\"str\")","f2265466":"for n in range(15,19):\n    data[f\"Resultat Net {n}\"] = data[f\"Resultat Net {n}\"].astype(\"float\")","ed48b421":"# some statistics about the differents features\ndata.info()","4818fe64":"# Display the state of missing values per feature. \nmissing_values_table = pd.DataFrame({c : [data[c].isna().sum(),f\"{ceil((data[c].isna().sum()\/len(data))*100)}%\"]\\\nfor c in list(data.columns)},index=[\"missing values count\",\"percentage\"])\nmissing_values_table","570cc714":"# Display the names list of features with missing values \nfeatures_with_mising_values =[c for c in data.columns if missing_values_table.loc[\"missing values count\",c] >0]\nfeatures_with_mising_values","266ffade":"# Display the names list of features which don't have missing values \nfeatures_without_missing_values = [ c for c in data.columns if c not in features_with_mising_values]\nfeatures_without_missing_values","f85e1515":"data = data[data[\"Taux\"].notna()]\ndata.reset_index(drop=True,inplace=True)","1f2b02a9":"# We replace missing values for the feature capital social by the mean of capital social of \n# others row which have same effectifs values.\nind = np.where(data[\"capital social\"].isna())[0]\nfor i in ind :\n    eff_i = data.loc[i,\"effectifs\"]\n    df = data[data[\"effectifs\"]==eff_i]\n    dff = df[df[\"capital social\"].notna()]\n    repl = dff[\"capital social\"].mean()\n    data.loc[i,\"capital social\"] = repl","b041b010":"EBE_correlation = pd.DataFrame({c:[data[c].corr(data[f\"EBE(retrait\u00e9 des loyers de leasing) {n}\"])\\\n    for n in range(15,19)] for c in data.columns if data[c].dtype in (\"float\",\"int\")},\\\n                              index = [f\"EBE(retrait\u00e9 des loyers de leasing) {n}\" for n in range(15,19)])","42e73442":"f , ax = plt.subplots(figsize=(70,35))\nsns.heatmap(EBE_correlation,cmap='BrBG',annot=True,square=True,vmin=-1,vmax=1,\\\n            linewidths=0.5,cbar_kws={\"shrink\": .5})","fcd9c6e2":"df = data[data[\"EBE(retrait\u00e9 des loyers de leasing) 15\"].notna()]\ndf = df[df[\"capital social\"].notna()]\nY= df[\"EBE(retrait\u00e9 des loyers de leasing) 15\"].values\nX = df[\"capital social\"].values\nX=X.reshape(-1,1)\nmod_EB_CS = LinearRegression().fit(X,Y)","ce3a0edc":"mod_EB_CS.coef_,mod_EB_CS.intercept_","e1f232c8":"# Remplace missing values using the realation (1)\nind = np.where(data[\"EBE(retrait\u00e9 des loyers de leasing) 15\"].isna()) [0]\nfor j in ind : \n    data.loc[j,\"EBE(retrait\u00e9 des loyers de leasing) 15\"] = mod_EB_CS.coef_[0] * data.loc[j,\"capital social\"] + mod_EB_CS.intercept_\n    ","3ffc005e":"X = []\nY = []\nfor n in range(16,19):\n    df = data[data[f\"EBE(retrait\u00e9 des loyers de leasing) {n}\"].notna()]\n    Y = df[f\"EBE(retrait\u00e9 des loyers de leasing) {n}\"].values\n    X = df[\"Taux\"].values\n    X = X.reshape(-1,1)\n    mod_EB_T = LinearRegression().fit(X,Y)\n    ind = np.where(data[f\"EBE(retrait\u00e9 des loyers de leasing) {n}\"].isna()) [0]\n    for j in ind : \n        data.loc[j,f\"EBE(retrait\u00e9 des loyers de leasing) {n}\"] = mod_EB_T.coef_[0] * data.loc[j,\"Taux\"] + mod_EB_T.intercept_","f8fffde0":"# Display datas related to yearly turnover .\ndata[[ c for c in data.columns if \"Chiffre d'Affaires\" in c]]","a4f507bd":"def impute_chiffre_affaire(i,n):\n    \"\"\" This function allows to impute the value of the feature namely Chiffre d'affaire for \n        the year n\n    \"\"\"\n    feature_name = f\"Chiffre d'Affaires {n}\"\n    feature_n_1 = f\"Chiffre d'Affaires {n-1}\"\n    feature_nplus1 = f\"Chiffre d'Affaires {n+1}\"\n    find = False\n    if n == 18 :\n        if (not (pd.isna(data.loc[i,feature_n_1]))) and (not (pd.isna(data.loc[i,f\"Evolution du Chiffre d'Affaires {n}\"]))) :\n           data.loc[i,feature_name] = (data.loc[i,f\"Evolution du Chiffre d'Affaires {n}\"] +1) * (data.loc[i,feature_n_1])\n           find =True\n    elif n == 15 :\n        if ((not (pd.isna(data.loc[i,feature_nplus1]))) and (not (pd.isna(data.loc[i,f\"Evolution du Chiffre d'Affaires {n+1}\"])))) :\n           data.loc[i,feature_name] = (data.loc[i,feature_nplus1])\/(data.loc[i,f\"Evolution du Chiffre d'Affaires {n+1}\"] +1) \n           find =True\n    else :\n        if (not (pd.isna(data.loc[i,feature_n_1]))) and (not (pd.isna(data.loc[i,f\"Evolution du Chiffre d'Affaires {n}\"]))) :\n           data.loc[i,feature_name] = (data.loc[i,f\"Evolution du Chiffre d'Affaires {n}\"] +1) * (data.loc[i,feature_n_1])\n           find =True\n        elif (not (pd.isna(data.loc[i,feature_nplus1]))) and (not (pd.isna(data.loc[i,f\"Evolution du Chiffre d'Affaires {n+1}\"]))) :\n           data.loc[i,feature_name] = (data.loc[i,feature_nplus1])\/(data.loc[i,f\"Evolution du Chiffre d'Affaires {n+1}\"] +1) \n           find =True\n    if not find :\n        if (not(pd.isna(data.loc[i,f\"BFRE {n}\"]))) and (not(pd.isna(data.loc[i,f\"BFRE en nombre de jours de CA {n}\"]))):\n           data.loc[i,f\"Chiffre d'Affaires {n}\"] = math.abs( (data.loc[i,f\"BFRE {n}\"]\/data.loc[i,f\"BFRE en nombre de jours de CA {n}\"]) * 360)\n           find = True \n    if not find : \n        if (not(pd.isna(data.loc[i,f\"Marge d'EBE {n}\"]))) and (not(pd.isna(data.loc[i,f\"EBE(retrait\u00e9 des loyers de leasing) {n}\"]))):\n            data.loc[i,f\"Chiffre d'Affaires {n}\"] = abs((data.loc[i,f\"EBE(retrait\u00e9 des loyers de leasing) {n}\"]\/data.loc[i,f\"Marge d'EBE {n}\"])*100)\n            find = True\n            ","fd88627f":"# Impute missing values for the feature namely \"Chiffre d'Affaires\" \nfor i in tqdm(range(15,19)):\n    ind = np.where(data[f\"Chiffre d\\'Affaires {i}\"].isna())[0]\n    for j in ind :\n        data.loc[j,f\"Chiffre d\\'Affaires {i}\"] = impute_chiffre_affaire(j,i)","0c05069e":"# Compute correlation between EBE and chiffre d'affaires for each year.\nfor n in range(15,19):\n    corr = data[f\"EBE(retrait\u00e9 des loyers de leasing) {n}\"].corr(data[f\"Chiffre d\\'Affaires {n}\"])\n    print(f\"Correlation between EBE and Chiffre d'affaires for the year {n} = {corr}\")","814a31e1":"# we will use  the relation (6) to impute some values regardind chiffre d'affaires features\nfor n in range(16,19): \n    df = data[data[f\"Chiffre d\\'Affaires {n}\"].notna()]\n    Y = df[f\"Chiffre d\\'Affaires {n}\"].values\n    X = df[f\"EBE(retrait\u00e9 des loyers de leasing) {n}\"].values\n    X = X.reshape(-1,1)\n    model = LinearRegression().fit(X,Y)\n    ind = np.where(data[f\"Chiffre d\\'Affaires {n}\"].isna())[0]\n    for j in ind : \n        if (not pd.isna(data.loc[j,f\"EBE(retrait\u00e9 des loyers de leasing) {n}\"])) :\n            data.loc[j,f\"Chiffre d\\'Affaires {n}\"] = abs( model.intercept_ + model.coef_ * data.loc[j,f\"EBE(retrait\u00e9 des loyers de leasing) {n}\"])\n       ","6e56da46":"    \ndef impute_evolution_chiffre_affaire(n):\n    \"\"\" This function allow to impute missing values of the feature namely \"Evolution du Chiffre d'Affaires\"\n        for the year n . \"\"\" \n    feature_name = f\"Evolution du Chiffre d'Affaires {n}\"\n    chiffre_n = f\"Chiffre d'Affaires {n}\"\n    chiffre_n_1 = f\"Chiffre d'Affaires {n-1}\"\n    ind = np.where(data[feature_name].isna())[0]\n    if n == 15 :\n        for i in ind :\n          data.loc[i,feature_name]=data.loc[i,\"Evolution du Chiffre d'Affaires 16\"]\n    else :   \n        for i in ind:\n          if (not (np.isnan(data.loc[i,chiffre_n]))) and (not(np.isnan(data.loc[i,chiffre_n_1]))):\n            data.loc[i,feature_name] =np.around((data.loc[i,chiffre_n]-data.loc[i,chiffre_n_1])\/(data.loc[i,chiffre_n_1]))\n          elif  n < 18 :\n            if (not(pd.isna(data.loc[i,f\"Evolution du Chiffre d'Affaires {n+1}\"]))) :\n                data.loc[i,feature_name] = data.loc[i,f\"Evolution du Chiffre d'Affaires {n+1}\"]\n            elif n > 15 :\n                if (not(pd.isna(data.loc[i,f\"Evolution du Chiffre d'Affaires {n-1}\"]))) :\n                    data.loc[i,feature_name] = data.loc[i,f\"Evolution du Chiffre d'Affaires {n-1}\"]\n            ","02dff637":"# Impute missing values for the feature namely \"Evolution du Chiffre d'Affaires\" \nimpute_evolution_chiffre_affaire(18)\nimpute_evolution_chiffre_affaire(17)\nimpute_evolution_chiffre_affaire(16)\nimpute_evolution_chiffre_affaire(15)","72a7273e":"data[\"Evolution du Chiffre d\\'Affaires 16\"].notna().sum()","0ae56156":"# the aplly of the function impute_chiffre_affaire at the feature \"Chiffre d\\'Affaires 15\" ,\n# can now replace all the missing values about this feature, since we all the others values of\n# the following years.\nind = np.where(data[f\"Chiffre d\\'Affaires 15\"].isna())[0]\nfor j in ind :\n    feature_nplus1 = \"Chiffre d\\'Affaires 16\"\n    feature_name = \"Chiffre d\\'Affaires 15\"\n    if ((not (pd.isna(data.loc[j,feature_nplus1]))) and (not (pd.isna(data.loc[j,f\"Evolution du Chiffre d'Affaires 16\"])))) :\n           data.loc[j,feature_name] = (data.loc[j,feature_nplus1])\/(data.loc[j,f\"Evolution du Chiffre d'Affaires {16}\"] +1) \n           \n    #\"data.loc[j,f\"Chiffre d\\'Affaires 15\"] = impute_chiffre_affaire(j,15)","82fdd5ae":"for n in range(15,19): \n    ind = np.where(data[f\"Marge d\\'EBE {n}\"].isna())[0]\n    for j in ind :\n        data.loc[j,f\"Marge d\\'EBE {n}\"] = (data.loc[j,f\"EBE(retrait\u00e9 des loyers de leasing) {n}\"]\/data.loc[j,f\"Chiffre d\\'Affaires {n}\"])*100","146ea840":"for n in range(15,19) :\n    corr = data[f\"BFRE {n}\"].corr(data[f\"Chiffre d\\'Affaires {n}\"])\n    print(f\"Correlation between BFR and Chiffre d'affaires for the year {n} = {corr}\")","69d3e9d7":"for n in range(15,19):\n  df = data[data[f\"BFRE {n}\"].notna()]\n  X = df[f\"Chiffre d\\'Affaires {n}\"].values\n  X = X.reshape(-1,1)\n  Y = df[f\"BFRE {n}\"].values\n  md = LinearRegression().fit(X,Y)\n  ind = np.where(data[f\"BFRE {n}\"].isna())[0]\n  for j in ind : \n        data.loc[j,f\"BFRE {n}\"] = md.coef_[0] * data.loc[j,f\"Chiffre d\\'Affaires {n}\"] + md.intercept_\n","fe2144c1":"# We will use now , the relation (3) to replaces missing values of the feature \"BFRE en nombre de jours de CA\".\nfor n in range(15,19) :\n    ind = np.where(data[f\"BFRE en nombre de jours de CA {n}\"].isna())[0]\n    for j in ind :\n        data.loc[j,f\"BFRE en nombre de jours de CA {n}\"] = (data.loc[j,f\"BFRE {n}\"] \/ data.loc[j,f\"Chiffre d\\'Affaires {n}\"])*360","824bbe27":"for  n in range(15,19) :\n    corr= data[f\"Actif circulant {n}\"].corr(data[f\"BFRE {n}\"])\n    print (f\"The coefficient of correlation between Actif circulant and BFRE for the year {n} = {corr}\")","8ce4c70a":"for n in range(15,19) :\n    df = data[data[f\"Actif circulant {n}\"].notna()]\n    X = df[f\"BFRE {n}\"].values\n    X = X.reshape(-1,1)\n    Y = df[f\"Actif circulant {n}\"].values\n    md = LinearRegression().fit(X,Y)\n    ind = np.where(data[f\"Actif circulant {n}\"].isna())[0]\n    for j in ind :\n        data.loc[j,f\"Actif circulant {n}\"] = max(0,md.coef_[0] * data.loc[j,f\"BFRE {n}\"] + md.intercept_)","1e0fd3ac":"for  n in range(15,19) :\n    corr= data[f\"Actif immobilis\u00e9 {n}\"].corr(data[f\"BFRE {n}\"])\n    print (f\"The coefficient of correlation between Actif immobilis\u00e9 and BFRE for the year {n} = {corr}\")","dc0f9ae9":"for n in range(15,19) :\n    df = data[data[f\"Actif immobilis\u00e9 {n}\"].notna()]\n    X = df[f\"BFRE {n}\"].values\n    X = X.reshape(-1,1)\n    Y = df[f\"Actif immobilis\u00e9 {n}\"].values\n    md = LinearRegression().fit(X,Y)\n    ind = np.where(data[f\"Actif immobilis\u00e9 {n}\"].isna())[0]\n    for j in ind :\n        data.loc[j,f\"Actif immobilis\u00e9 {n}\"] = max(0,md.coef_[0] * data.loc[j,f\"BFRE {n}\"] + md.intercept_)","a83491a5":"for n in range(15,19) :\n    ind = np.where(data[f\"Total Bilan {n}\"].isna())[0]\n    for j in ind:\n        data.loc[j,f\"Total Bilan {n}\"] = data.loc[j,f\"Actif circulant {n}\"] + data.loc[j,f\"Actif immobilis\u00e9 {n}\"]","2a19f4c8":"for  n in range(15,19) :\n    corr= data[f\"Fonds Propres {n}\"].corr(data[f\"BFRE {n}\"])\n    print (f\"The coefficient of correlation between Fonds Propres and BFRE for the year {n} = {corr}\")","70ea7e52":"for n in range(15,19) :\n    df = data[data[f\"Fonds Propres {n}\"].notna()]\n    X = df[f\"BFRE {n}\"].values\n    X = X.reshape(-1,1)\n    Y = df[f\"Fonds Propres {n}\"].values\n    md = LinearRegression().fit(X,Y)\n    ind = np.where(data[f\"Fonds Propres {n}\"].isna())[0]\n    for j in ind :\n        data.loc[j,f\"Fonds Propres {n}\"] = abs(md.coef_[0] * data.loc[j,f\"BFRE {n}\"] + md.intercept_)","668f9dbe":"for  n in range(15,19) :\n    corr= data[f\"Passif circulant {n}\"].corr(data[f\"BFRE {n}\"])\n    print (f\"The coefficient of correlation between Passif circulant and BFRE for the year {n} = {corr}\")","e7344abc":"for n in range(15,19) :\n    df = data[data[f\"Passif circulant {n}\"].notna()]\n    X = df[f\"BFRE {n}\"].values\n    X = X.reshape(-1,1)\n    Y = df[f\"Passif circulant {n}\"].values\n    md = LinearRegression().fit(X,Y)\n    ind = np.where(data[f\"Passif circulant {n}\"].isna())[0]\n    for j in ind :\n        data.loc[j,f\"Passif circulant {n}\"] = max(0,md.coef_[0] * data.loc[j,f\"BFRE {n}\"] + md.intercept_)","10d9183f":"for n in range(15,19):\n    ind = np.where(data[f\"Fonds Propres \/ Total Bilan {n}\"].isna())[0]\n    for j in ind :\n        data.loc[j,f\"Fonds Propres \/ Total Bilan {n}\"] = (data.loc[j,f\"Fonds Propres {n}\"]\/data.loc[j,f\"Total Bilan {n}\"])*100","a931cf4e":"for  n in range(15,19) :\n    corr= data[f\"Dettes court terme {n}\"].corr(data[f\"Passif circulant {n}\"])\n    print (f\"The coefficient of correlation between Dettes court terme and Passif circulant for the year {n} = {corr}\")","faafb660":"for n in range(15,19) :\n    df = data[data[f\"Dettes court terme {n}\"].notna()]\n    X = df[f\"Passif circulant {n}\"].values\n    X = X.reshape(-1,1)\n    Y = df[f\"Dettes court terme {n}\"].values\n    md = LinearRegression().fit(X,Y)\n    ind = np.where(data[f\"Dettes court terme {n}\"].isna())[0]\n    for j in ind :\n        data.loc[j,f\"Dettes court terme {n}\"] = md.coef_[0] * data.loc[j,f\"Passif circulant {n}\"] + md.intercept_","61a8c8d9":"for  n in range(15,19) :\n    corr= data[f\"Dettes Moyen long terme {n}\"].corr(data[f\"Passif circulant {n}\"])\n    print (f\"The coefficient of correlation between Dettes Moyen long terme and Passif circulant for the year {n} = {corr}\")","ee94e2fb":"for n in range(15,19) :\n    df = data[data[f\"Dettes Moyen long terme {n}\"].notna()]\n    X = df[f\"Passif circulant {n}\"].values\n    X = X.reshape(-1,1)\n    Y = df[f\"Dettes Moyen long terme {n}\"].values\n    md = LinearRegression().fit(X,Y)\n    ind = np.where(data[f\"Dettes Moyen long terme {n}\"].isna())[0]\n    for j in ind :\n        data.loc[j,f\"Dettes Moyen long terme {n}\"] = md.coef_[0] * data.loc[j,f\"Passif circulant {n}\"] + md.intercept_","923ffcce":"for  n in range(15,19) :\n    ind = np.where(data[f\"Dettes Nettes \/ EBE(* ann\u00e9es) {n}\"].isna())[0]\n    for j in ind : \n        data.loc[j,f\"Dettes Nettes \/ EBE(* ann\u00e9es) {n}\"] = (data.loc[j,f\"Dettes court terme {n}\"] + data.loc[j,f\"Dettes Moyen long terme {n}\"])\/(data.loc[j,f\"EBE(retrait\u00e9 des loyers de leasing) {n}\"])","881369e1":"# compute the number or rows where \"Resultat net \" values , are missing for all years.\nn = 0 \nfor i in range(len(data)) :\n    exit = False \n    for j in range(15,19) :\n        if not pd.isna(data.loc[i,f\"Resultat Net {j}\"]):\n            exit = True\n    if not exit :\n        n += 1","5bfe8cf1":"print(f\"Number of rows where 'Resultat net' missing values, are missing for all years equal to\\\n {n}\")","ef87401a":"for n in range(15,19) :\n    ind = np.where(data[f\"Resultat Net {n}\"].isna())[0]\n    for i in ind :\n        find = False\n        if n < 18 :\n           if not pd.isna(data.loc[i,f\"Resultat Net {n+1}\"]):\n              data.loc[i,f\"Resultat Net {n}\"] = data.loc[i,f\"Resultat Net {n+1}\"]\n              find = True\n        if n > 15 :\n           if not pd.isna(data.loc[i,f\"Resultat Net {n-1}\"]) :\n              data.loc[i,f\"Resultat Net {n}\"] = data.loc[i,f\"Resultat Net {n-1}\"]\n              find = True \n        if not find : \n           for k in range(15,19) :\n               if not pd.isna(data.loc[i,f\"Resultat Net {k}\"]) :\n                  data.loc[i,f\"Resultat Net {n}\"] = data.loc[i,f\"Resultat Net {k}\"]\n                  break","c879957c":"# Display missing values for the \"Resultat Net\" feature after the processing.\ndata[[\"Resultat Net 15\",\"Resultat Net 16\",\"Resultat Net 17\",\"Resultat Net 18\"]].isna().sum()","f60ac42f":"for n in range(15,19):\n    ind = np.where(data[f\"Resultat Net {n}\"].isna())\n    for i in ind :\n        country = data.loc[int(i[0]),\"Pays\"]\n        df = data[data[\"Pays\"]==str(country)]\n        dff = df[df[f\"Resultat Net {n}\"].notna()]\n        val = dff[f\"Resultat Net {n}\"].mean()\n        data.loc[i,f\"Resultat Net {n}\"] = val ","e8f02d8e":"data[[\"Resultat Net 15\",\"Resultat Net 16\",\"Resultat Net 17\",\"Resultat Net 18\"]].isna().sum()","b58476f0":"for n in range(15,19):\n    ind = np.where(data[f\"Capacit\u00e9 de remboursement (FCCR) {n}\"].isna())\n    for j in ind :\n        dc = data.loc[j,f\"Dettes court terme {n}\"]\n        dmlt = data.loc[j,f\"Dettes Moyen long terme {n}\"]\n        rn = data.loc[j,f\"Resultat Net {n}\"]\n        data.loc[j,f\"Capacit\u00e9 de remboursement (FCCR) {n}\"] = (rn)\/(dc+dmlt)","54380eed":"for n in range(15,19) : \n    ind = np.where(data[f\"Dettes Nettes \/ Fonds propres {n}\"].isna())\n    for j in ind : \n        dc = data.loc[j,f\"Dettes court terme {n}\"]\n        dmlt = data.loc[j,f\"Dettes Moyen long terme {n}\"]\n        fp = data.loc[j,f\"Fonds Propres {n}\"]\n        data.loc[j,f\"Dettes Nettes \/ Fonds propres {n}\"] = (dc+dmlt)\/fp","4cbf7a8b":"for n in range(15,19):  \n    del (data[f\"Nombre de mois de la p\u00e9riode {n}\"])","aa9c5f9a":"data.dropna(inplace=True)","bb28af92":"# Multivariate analysis between \"Taux\" and group of features apparently not similar\nsns.pairplot(data[[\"Taux\",\"Mois\",\"capital social\",\"ann\u00e9e de cr\u00e9ation\",\"Ant\u00e9riorit\u00e9\",\"effectifs\"]])","4daadd44":"# Multivariate analysis between \"Taux\" and group of Chiffre d'Affaires features.\nsns.pairplot(data[[f\"Chiffre d'Affaires {n}\" for n in range(15,19)] +[\"Taux\"]])","6941b807":"# Multivariate analysis between \"Taux\" and group of Evolution du Chiffre d'Affaires features.\nsns.pairplot(data[[f\"Evolution du Chiffre d'Affaires {n}\" for n in range(15,19)] +[\"Taux\"]])","8f590dc5":"# Multivariate analysis between \"Taux\" and group of EBE features.\nsns.pairplot(data[[f\"EBE(retrait\u00e9 des loyers de leasing) {n}\" for n in range(15,19)] +[\"Taux\"]])","05a59a60":"# Multivariate analysis between \"Taux\" and group of Marge d'EBE features.\nsns.pairplot(data[[f\"Marge d'EBE {n}\" for n in range(15,19)] +[\"Taux\"]])","9702ab41":"# Multivariate analysis between \"Taux\" and group of Resultat Net features.\nsns.pairplot(data[[f\"Resultat Net {n}\" for n in range(15,19)] +[\"Taux\"]])","e01381b0":"# Multivariate analysis between \"Taux\" and group of Total Bilan features.\nsns.pairplot(data[[f\"Total Bilan {n}\" for n in range(15,19)] +[\"Taux\"]])","03617545":"# Multivariate analysis between \"Taux\" and group of BFRE features.\nsns.pairplot(data[[f\"BFRE {n}\" for n in range(15,19)] +[\"Taux\"]])","9ad8e6af":"gc.collect()","14991c22":"# Multivariate analysis between \"Taux\" and group of Fonds Propres features.\nsns.pairplot(data[[f\"Fonds Propres {n}\" for n in range(15,19)] +[\"Taux\"]])","239594f8":"# Multivariate analysis between \"Taux\" and group of Capacit\u00e9 de remboursement (FCCR) features.\nfix, ax = plt.subplots(2,2,figsize=(18,12))\nfor i in range(4) :\n    k = i \/\/ 2\n    m = i % 2\n    sns.scatterplot(data[f\"Capacit\u00e9 de remboursement (FCCR) {i+15}\"],data[\"Taux\"],\\\n                   ax=ax[k,m],x_bins=[0,1])\n    ax[k,m].set_title(f\"Taux = f (Capacit\u00e9 de remboursement (FCCR)){i+15})\",size = 15)\n    ax[k][m].tick_params(axis='x', labelsize=12)\n    ax[k][m].tick_params(axis='y', labelsize=12)","e0ab19a6":"# Multivariate analysis between \"Taux\" and group of Fonds Propres \/ Total Bilan features.\nfix, ax = plt.subplots(2,2,figsize=(18,12))\nfor i in range(4) :\n    k = i \/\/ 2\n    m = i % 2\n    sns.scatterplot(data[f\"Fonds Propres \/ Total Bilan {i+15}\"],data[\"Taux\"],\\\n                   ax=ax[k,m],x_bins=[0,1])\n    ax[k,m].set_title(f\"Taux = f (Fonds Propres \/ Total Bilan {i+15})\",size = 15)\n    ax[k][m].tick_params(axis='x', labelsize=12)\n    ax[k][m].tick_params(axis='y', labelsize=12)","aa4cb75a":"# Multivariate analysis between \"Taux\" and group of Passif circulant features.\nfix, ax = plt.subplots(2,2,figsize=(18,12))\nfor i in range(4) :\n    k = i \/\/ 2\n    m = i % 2\n    sns.scatterplot(data[f\"Passif circulant {i+15}\"],data[\"Taux\"],\\\n                   ax=ax[k,m],x_bins=[0,1])\n    ax[k,m].set_title(f\"Taux = f (Passif circulant {i+15})\",size = 15)\n    ax[k][m].tick_params(axis='x', labelsize=12)\n    ax[k][m].tick_params(axis='y', labelsize=12)","9b0aee15":"# Multivariate analysis between \"Taux\" and group of Actif immobilis\u00e9 features.\nfix, ax = plt.subplots(2,2,figsize=(18,12))\nfor i in range(4) :\n    k = i \/\/ 2\n    m = i % 2\n    sns.scatterplot(data[f\"Actif immobilis\u00e9 {i+15}\"],data[\"Taux\"],\\\n                   ax=ax[k,m],x_bins=[0,1])\n    ax[k,m].set_title(f\"Taux = f (Actif immobilis\u00e9 {i+15})\",size = 15)\n    ax[k][m].tick_params(axis='x', labelsize=12)\n    ax[k][m].tick_params(axis='y', labelsize=12)","28cdf543":"# Multivariate analysis between \"Taux\" and group of Actif circulant features.\nfix, ax = plt.subplots(2,2,figsize=(18,12))\nfor i in range(4) :\n    k = i \/\/ 2\n    m = i % 2\n    sns.scatterplot(data[f\"Actif circulant {i+15}\"],data[\"Taux\"],\\\n                   ax=ax[k,m],x_bins=[0,1])\n    ax[k,m].set_title(f\"Taux = f (Actif circulant{i+15})\",size = 15)\n    ax[k][m].tick_params(axis='x', labelsize=12)\n    ax[k][m].tick_params(axis='y', labelsize=12)","6129473e":"# Multivariate analysis between \"Taux\" and group of Dettes court termefeatures.\nfix, ax = plt.subplots(2,2,figsize=(18,12))\nfor i in range(4) :\n    k = i \/\/ 2\n    m = i % 2\n    sns.scatterplot(data[f\"Dettes court terme {i+15}\"],data[\"Taux\"],\\\n                   ax=ax[k,m],x_bins=[0,1])\n    ax[k,m].set_title(f\"Taux = f (Dettes court terme {i+15})\",size = 15)\n    ax[k][m].tick_params(axis='x', labelsize=12)\n    ax[k][m].tick_params(axis='y', labelsize=12)","b1322959":"# Multivariate analysis between \"Taux\" and group of Dettes Moyen long terme features.\nfix, ax = plt.subplots(2,2,figsize=(18,12))\nfor i in range(4) :\n    k = i \/\/ 2\n    m = i % 2\n    sns.scatterplot(data[f\"Dettes Moyen long terme {i+15}\"],data[\"Taux\"],\\\n                   ax=ax[k,m],x_bins=[0,1])\n    ax[k,m].set_title(f\"Taux = f (Dettes Moyen long terme {i+15})\",size = 15)\n    ax[k][m].tick_params(axis='x', labelsize=12)\n    ax[k][m].tick_params(axis='y', labelsize=12)","4187eef1":"# Multivariate analysis between \"Taux\" and group of Dettes Nettes \/ EBE(* ann\u00e9es) features.\nfix, ax = plt.subplots(2,2,figsize=(18,12))\nfor i in range(4) :\n    k = i \/\/ 2\n    m = i % 2\n    sns.scatterplot(data[f\"Dettes Nettes \/ EBE(* ann\u00e9es) {i+15}\"],data[\"Taux\"],\\\n                   ax=ax[k,m],x_bins=[0,1])\n    ax[k,m].set_title(f\"Taux = f (Dettes Nettes \/ EBE(* ann\u00e9es) {i+15})\",size = 15)\n    ax[k][m].tick_params(axis='x', labelsize=12)\n    ax[k][m].tick_params(axis='y', labelsize=12)","1c530ec3":"# Multivariate analysis between \"Taux\" and group of Dettes Nettes \/ Fonds propres features.\nfix, ax = plt.subplots(2,2,figsize=(18,12))\nfor i in range(4) :\n    k = i \/\/ 2\n    m = i % 2\n    sns.scatterplot(data[f\"Dettes Nettes \/ Fonds propres {i+15}\"],data[\"Taux\"],\\\n                   ax=ax[k,m],x_bins=[0,1])\n    ax[k,m].set_title(f\"Taux = f (Dettes Nettes \/ Fonds propres {i+15})\",size = 15)\n    ax[k][m].tick_params(axis='x', labelsize=12)\n    ax[k][m].tick_params(axis='y', labelsize=12)","edf1236c":"# Multivariate analysis between \"Taux\" and group of BFRE en nombre de jours de CA features.\nfix, ax = plt.subplots(2,2,figsize=(18,12))\nfor i in range(4) :\n    k = i \/\/ 2\n    m = i % 2\n    sns.scatterplot(data[f\"BFRE en nombre de jours de CA {i+15}\"],data[\"Taux\"],\\\n                   ax=ax[k,m],x_bins=[0,1])\n    ax[k,m].set_title(f\"Taux = f (BFRE en nombre de jours de CA {i+15})\",size = 15)\n    ax[k][m].tick_params(axis='x', labelsize=12)\n    ax[k][m].tick_params(axis='y', labelsize=12)","8ec59d05":"# Diplay correlation coefficients wuth all quantitatives features\nf , ax = plt.subplots(8,1,figsize=(20,35))\nfor i in range(8) :\n    correlation = pd.DataFrame({c:[data[\"Taux\"].corr(data[c])] for c in data.columns[i*10:(i+1)*10] if c not in \\\n                           (\"ID\",'Niveau de risque',\"Taux\",'Emprunteur','Pays')},index=[\"Taux\"])\n    sns.heatmap(correlation,annot=True,square=True,cmap='BrBG',linewidths=0.5,cbar_kws={\"shrink\": .5},\\\n           ax=ax[i])\n    #ax[i].set_title(f\" Correlation of interest rate with features\",size = 15)\n    ax[i].tick_params(axis='x', labelsize=12)\n    ax[i].tick_params(axis='y', labelsize=12)\n","8bde43c3":"def quartile_Taux(val):\n    \"\"\"function which can transform Taux values to catogorical values \"\"\"\n    q1 = data[\"Taux\"].quantile(0.25)\n    q2 = data[\"Taux\"].quantile(0.5)\n    q3 = data[\"Taux\"].quantile(0.75)\n    if val < q1 :\n        return \"Q1\"\n    elif val < q2 :\n        return \"Q2\"\n    elif val < q3 :\n        return \"Q3\"\n    else :\n        return \"Q4\"","1de3456c":"# create the categorical feature \ndata[\"cat_Taux\"] = [quartile_Taux(val) for val in data[\"Taux\"].values]","65b5acc4":"def categorical_correlation(feature):\n    piv_tab = pd.pivot_table(data,index=feature,columns=\"cat_Taux\",values=\"Montant\",aggfunc=\"count\")\n    ty = data[\"cat_Taux\"].value_counts()\n    tx = data[feature].value_counts()\n    tx = pd.DataFrame(tx)\n    ty = pd.DataFrame(ty)\n    ind = piv_tab.index\n    col = piv_tab.columns\n    tx.columns = [\"values\"]\n    ty.columns = [\"values\"]\n    n = len(data)\n    cnt = tx.dot(ty.T)\/n\n    cnt = cnt.loc[ind,col]\n    mesure = (cnt - piv_tab) ** 2 \/cnt\n    xid = mesure.sum().sum()\n    mesure = mesure \n    sns.heatmap(mesure,annot=True,linewidths=0.5,cmap=\"BrBG\",vmin=0,vmax=1)\n    plt.title(f\"The correlation between the feature \\'{feature}\\' and 'Taux' feature\")\n    print(f\"The total correlation between the feature \\'{feature}\\' and 'Taux' feature = {xid}\")","04f2b8e9":"# correlation between the country of the company and the rate of interest \ncategorical_correlation(\"Pays\")","db9f1943":"# correlation between the risk level and the rate of interest \ncategorical_correlation(\"Niveau de risque\")","72cb1dd2":"# correlation between the borrower and the rate of interest \ncategorical_correlation(\"Emprunteur\")","14529d55":"del(data[\"cat_Taux\"])","b384a768":"df = data.copy()","eba03146":"# Create new features related to each risk level.\ndata = data.join(pd.get_dummies(data[\"Niveau de risque\"]))\n","b93bccdc":"del(data[\"Niveau de risque\"])","6e7c0a94":"# Create new features related to each borrower .\ndata = data.join(pd.get_dummies(data[\"Emprunteur\"]))\ndel(data[\"Emprunteur\"])","cb05459a":"# Create new features related to each country .\ndata = data.join(pd.get_dummies(data[\"Pays\"]))\ndel(data[\"Pays\"])","21097315":"# Change the features \"Ant\u00e9riorit\u00e9\" and \"Ancient\u00e9\" by soustract them the value of the current year.\ndata[\"Ant\u00e9riorit\u00e9\"] = 2019 - data[\"Ant\u00e9riorit\u00e9\"]\ndata[\"Anciennt\u00e9\"] = 2019 - data[\"ann\u00e9e de cr\u00e9ation\"]\ndel(data[\"ann\u00e9e de cr\u00e9ation\"])\n","a3fc2849":"del(data[\"ID\"]) # useless columns\ndata.to_csv(\"data.csv\",index=False)","0eb4bfd5":"### Handling missing values related to \"Fonds Propres \/ Total Bilan\" :","930a6078":"==> The charte above don't show any important relationship between the analysed features.","b53370f2":"### Handling missing values related to \"Dettes court terme\" :","e6581c3c":"# 3. Top 3 main highlights","c1fdfb85":"### Handling missing values related to Actif mobilis\u00e9:","7bc6582b":"==> Doesn't seem any correlation between the origin country of the company and the rate of \ninterest.","fd9c0d69":"==> The charte above don't show any important relationship between the analysed features.","1f0a69fc":"### Handling missing values related to \"capital social\":","dcf85988":"==> The charte above don't show any important relationship between the analysed features. So let's advance !","49835618":"### <font color=redblue> Insight  : The interest rate and the \"niveau de risque\" are not independant. it means the interest rate depend on the risk level.<\/font>","015acfa8":"### Handling missing values related to Actif circulant:","3dfe8fd4":"### Handling missing values related to Fonds Propres:","7491d510":"### Handling missing values related to EBE features:","bed97514":"> ==> We notice from the above results , that the Dettes court terme is highly correlated to Passif circulant for all  years . This correlation are roughly 100 % for most years. Thus we fetch hereunder to relation that link theses two features per year. ","e218425a":"### Handling  others missing values :","517731d7":"==> The charte above don't show any important relationship between the analysed features.","ef190b4a":"==> The charte above don't show any important relationship between the analysed features. So let's advance !","87698f9c":"### <font color=redblue> Insight  : The interest rate and the \"Emprunter\" are not independant. it means the interest rate depend  highly in function of  the borrower.<\/font>","e40a9139":"===> It seems that the rate of interest is highly correalted with the \"Niveau de risque feature\".","453ead19":"==> The charte above don't show any important relationship between the analysed features.","df44b99a":"> In this part , we will perform data explorations between variables in order to get insights and varibles which are related to our target which is \"Taux\" feature.","59c3593e":"## 1.1 Data processing and preparation :","853f71b0":"==> The charte above don't show any important relationship between the analysed features.","794b12c0":"### Handling missing values related to \"Dettes Moyen long terme\" :","82754026":"===> The analyse above show a high negative correlation between EBE features and \"Taux\" Features.","c5ebb100":"==> The charte above don't show any important relationship between the analysed features.","0aef4a82":"==> The charte above don't show any important relationship between the analysed features.","8076400d":"> ==> We notice from the above results , that the Actif circulant is highly correlated to BFRE for all  years . This correlation are roughly 100 %. Thus we fetch hereunder to relation that link theses two features per year. ","7a0df5a0":"> To handle missing values related to \"Capacit\u00e9 de remboursement (FCCR)\" features , we will use the following relationship :  ","c94c34b5":"## 2.3 Feature engineering :","f6df831f":"===> As it'is shown in the chat above . It'is obvious that the turnover of year n , is highly correlated to others yeras, especially with are which are very close to it.","5d02b48f":"### Handling missing values related to \"Capacit\u00e9 de remboursement (FCCR)\" :","da68b706":"==> It seems that rate of interest move immensly in function of \"Emprunter\". So theses variables are highly correlated.","d93a56ba":"> ===> Apart the expected corelation between Resultat Net of years wich each other. The chart above don't show any others important relationship.","605cce3f":"> ==> We notice from the above results , that the Dettes Moyen long terme is highly correlated to Passif circulant for all  years . This correlation are roughly 100 % for most years. Thus we fetch hereunder to relation that link theses two features per year.","1c992a50":"### <font color=redblue> Insight 1 : The interest rate is negatively correlated to EBE. it means the interset rate increase when EBE is small or negative and the reverse is true. <\/font>","f1a6fe9b":"### Handling missing values related to Total Bilan:","b1931076":"# 4. Export datas: ","e954c3f8":"> As it is mentionned before , the above treatments can not handle all the missing values, related to the Resultat Net. So, for the rest of missing values, we will impute them by the average of \"Resultat Net\" achieved by comapnies of the same country.","44dd7c18":"## 2.1 Quantitative variables:","76ab6330":"> ===> Apart the expected corelation between Total Bilan of years wich each other. The chart above don't show any others important relationship.","31f2799e":"### Handling missing values related to \"Dettes Nettes \/ EBE(* ann\u00e9es)\" :","b20425b8":"<font> <center> $\\textrm {EBE(retrait\u00e9 des loyers de leasing) 15} = 2.24 *{10^-6} * \\textrm{capital  social} + 4340.44 $     \n    (1)","937dca5c":"## 2.2 Categorical variables:","14af30a4":"# 2. Exploration data analysis:","9cde6422":"> In our Hereunder analysis, we will assemble our features feaures by group. It means, in each iteration, we perform multivariate analysis between group of similar features  with the target feature \"Taux\". In the first, step we will start with the group, who encompass features which apparently not similair.","3419a9d3":"\n- The rate of interest depend highly to the EBE state of the company.     \n- The rate of interest depend highly to the risk level.    \n- The rate of interest depend to the amount of the loan and the company human size.    \n","f9e0684f":"==> The charte above don't show any important relationship between the analysed features.","9e085291":"### Handling missing values related to Passif circulant:","9f40bb70":"===> We can notice from the chart above :\n - Postive correlation between the rate of interest and the length of the loan.\n - Negative correlation between the rate of interest and the number of employe of the company.\n ","17fa0617":"> In order to replace the missing values related to increase yearly turnover, we will use the following relationship :  \n\n$\\textrm{Evolution du chiffre d'affaire ann\u00e9e (n)} =\\frac{\\textrm{chiffre d'affaire ann\u00e9e n} -  \\textrm{chiffre d'affaire ann\u00e9e n-1}}{\\textrm{chiffre d'affaire ann\u00e9e (n-1)}}$ (2)\n","61e9b5ee":"> We consider that features related to \" Nombre de mois de la p\u00e9riode\" are not important four our downstream task.Indeed theses values are generally equal to 12 . So we will remove all columns related to theses features.","c657223d":"# 1. Cleaning datas:","177aa479":"> ==> We notice from the above results , that the Actif immobilis\u00e9 is highly correlated to BFRE for all  years . This correlation are roughly 100 % for most years. Thus we fetch hereunder to relation that link theses two features per year. ","7923e272":"==> The charte above don't show any important relationship between the analysed features.","e472d919":"> To impute missing values of the feature namely \"Total Bilan\", we will use the following relationship : \n\n  <font> <center> $\\textrm{Total Bilan} = \\textrm{Actif circulant} + \\textrm{Actif immobilis\u00e9} $ (5)","7483a495":"> The above results, show that BFR is highly correlated to Chiffre d'affaires by about 100% in the most of years . Therefore, we will use this results in order to replaces missing values for features related to BFR.","8e710bd1":">==> This allow us to confirm that EBE and Chiffre d'affaires features are highly correlated, especially in the year 16,17,18 .","c8a38437":"==> The charte above don't show any important relationship between the analysed features.","b967f25b":"### Handling missing values related to BFR:","1ee57ce1":"### Handling missing values related to the feature Taux:","eeb25887":"### Handling missing values related to \"Resultat Net\" :","4f7405b3":"==> \"EBE(retrait\u00e9 des loyers de leasing) 15\" is highly correlated to \"Capital social\", with coefficient of correlation equal to 0.83 .\n==> \"EBE(retrait\u00e9 des loyers de leasing) n\" is highly correlated to \"Taux\", with coefficient of correlation which range from (-0.51) to (-0.94).","9a62b291":"> When we use the above exploration and we consider that \"Resultat Net\" can not change a lot in short period . We can impute each missing values of \"Resultat Net\" by the near year value from  (15,16,17,18). ","9528066d":"> In order to replace the missing values related to yearly turnover, we will use the relation (3) and the following relationships :  \n\n   <font> <center> $\\textrm{BFRE en nombre de jours de CA} = {\\frac {\\textrm{BFRE}}{\\textrm{Chiffre d'Affaires}}} * 360 $     (3)\n   \n   <font> <center>$\\textrm{Marge d'EBE} = {\\frac {\\textrm{EBE}}{\\textrm{Chiffre d'Affaires}}} * 100 $ (4)","b75cca56":"> ==> We notice from the above results , that the Passif circulant is highly correlated to BFRE for all  years . This correlation are roughly 100 % for most years. Thus we fetch hereunder to relation that link theses two features per year. ","f5d7b9a5":">We will use  the relation (2)  to replace missing values for the Evolution du chiffre d'affaire feature .  \n\n>Moreover we impute all the values of 15 by the values of the year 16 . We will consider that companies make the same increasing after a period of one year, since we don't have values of the year 14 in order to compute the exact values.\n\n>Otherwhise , the rest of missing values will be replaced by the turnover increase of the year (n+1) or the year(n-1). We suppose always in short period , the turnover increase don't change a lot. \n","aca1f310":"> ==> We notice from the above results , that the Fonds Propres is highly correlated to BFRE for all  years . This correlation are roughly 100 % for most years. Thus we fetch hereunder to relation that link theses two features per year. ","0d3a1818":"### Handling missing values related to \"Dettes Nettes \/ Fonds propres \" :","6d912170":"### Handling missing values related to Marge d'EBE features:","93b6bb87":"# 0. Preparation :","4da015bb":"==> The charte above don't show any important relationship between the analysed features.","10aa1a32":"### 1.2 Missing values:","ba265dbc":"The feature namely Taux , is our target label. Therefore, we decide to drop all rows which encompass missing values in this feature.","44cdf816":"> Henceforth, The relation (4) and the previous handling of missing values related to \"Chiffre d'affaires\" features and \"EBE\" features, allow us to treat all the missing values of the features related to \"Marge d'EBE\".","d2fd7f39":"==> The charte above don't show any important relationship between the analysed features.","40dd14c1":"> For the rest of missing values related to \"chiffre d'affaires\" features. We will train model of linear regression between \"chiffre d'affaires\" features and \"EBE\" features which are highly correlated.","ac87bbd5":"# <font color=black><center><font size =18> Case Study:Descriptive analysis <\/font>\n<font><center>![](https:\/\/www.startup.ch\/demandit\/files\/M_BB941CC4DCEF687AD98\/dms\/\/Image\/download%20(1)1.png)","fb92c4b1":"> We will create new feature which assimilate the target \"Taux\" to categorical featurs. This \nby transorming their values to one of theses values (\"Q1\",\"Q2\",\"Q3\",\"Q4\"). In deed the value\nof the new feature get \"Q1\" if the value of \"Taux\" feature less to the first quantile of the \nvariable \"Taux\". In general the new feature get :\n\n        Qn if  the value of \"Taux\" variable is between the quantile(n-1) and the quantile (n)","0863f55a":">===> This feature encompass about 15 missing values. In order to not lost rows which contains theses missing values. We will try hereunder to give  an efficient estimation to theses values based on the feature \"effectifs\".","d5ab2670":"==> The charte above don't show any important relationship between the analysed features.","8a14f779":"<font> <center> $\\textrm{Capacit\u00e9 de remboursement (FCCR)} = {\\frac {\\textrm{Resultat Net}}{\\textrm{Dettes court terme + Dettes Moyen long terme}}}  $   (6)","5343b092":"### Handling missing values related to yearly turnover :"}}