{"cell_type":{"f92ddc6a":"code","f326dee2":"code","1d8ddbdd":"code","edc2703c":"code","32a61641":"code","0d837bfc":"code","ed2e1bcd":"code","c578c893":"code","1f4c4a6e":"code","6001fd20":"code","109d3c00":"code","115c71fc":"code","0085fe3c":"code","c076af44":"code","9d4bc5a6":"code","c02f4de7":"code","c8b8ea6e":"code","36f764d0":"code","71680576":"code","ee011f5c":"code","a35b942e":"markdown","81b153ec":"markdown","c4baf2b1":"markdown","74e1e4c9":"markdown","5c2f9025":"markdown","2d6e091c":"markdown","249c60fb":"markdown","b5114f02":"markdown","8e0a39d0":"markdown","029965e1":"markdown","99e8e222":"markdown","301d92fd":"markdown","d277d3a0":"markdown"},"source":{"f92ddc6a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode ,iplot \ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\nfrom wordcloud import WordCloud\n\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f326dee2":"timesData=pd.read_csv(\"..\/input\/timesData.csv\")","1d8ddbdd":"timesData.head()","edc2703c":"timesData.info()","32a61641":"df=timesData.iloc[:100,:]","0d837bfc":"df.tail()","ed2e1bcd":"trace1=go.Scatter(\nx=df.world_rank,\ny=df.citations,\nmode=\"lines\",\nname=\"citations\",\nmarker=dict(color='rgb(12,125,10,0.8)'),\ntext=df.university_name\n)\ntrace2=go.Scatter(\nx=df.world_rank,\ny=df.teaching,\nmode=\"lines+markers\",\nname=\"teaching\",\nmarker=dict(color='rgb(125,12,10,0.7)'),\ntext=df.university_name)\n\ndata=[trace1,trace2]\nlayout=dict(title=\"\",\n           xaxis=dict(title='world rank',ticklen=5,zeroline=False))\nfig=dict(data=data,layout=layout)\niplot(fig)","c578c893":"df14=timesData[timesData.year==2014].iloc[:100,:]\ndf15=timesData[timesData.year==2015].iloc[:100,:]\ndf16=timesData[timesData.year==2016].iloc[:100,:]\n\ntrace1=go.Scatter(\n    x=df14.world_rank,\n    y=df14.citations,\n    mode=\"markers\",\n    name=\"2014\",\n    marker=dict(color='rgb(125,125,25,0.7)'),\n    text=df14.university_name)\n\ntrace2=go.Scatter(\n    x=df15.world_rank,\n    y=df15.citations,\n    mode=\"markers\",\n    name=\"2015\",\n    marker=dict(color='rgb(25,125,125)'),\n    text=df15.university_name)\n\ntrace3=go.Scatter(\n    x=df16.world_rank,\n    y=df16.citations,\n    mode=\"markers\",\n    name=\"2016\",\n    marker=dict(color='rgb(125,25,125)'),\n    text=df16.university_name)\n\ndata=[trace1,trace2,trace3]\nlayout=dict(title=\"2014-2015-2016\",\n           xaxis=dict(title=\"world rank\",ticklen=10,zeroline=True),\n           yaxis=dict(title=\"Citations\",ticklen=5,zeroline=False))\nfig=dict(data=data, layout=layout)\niplot(fig)","1f4c4a6e":"df2014=timesData[timesData.year==2014].iloc[:3,:]\n\ntrace1=go.Bar(\nx=df2014.university_name,\ny=df2014.citations,\nname=\"citations\",\nmarker=dict(color='rgb(100,100,75,0.8)'),\ntext=df2014.country\n)\n\ntrace2=go.Bar(\n    x=df2014.university_name,\n    y=df2014.teaching,\n    name=\"teaching\",\n    marker=dict(color='rgb(45,125,180,0.7)'),\n    text=df2014.country)\n\ndata=[trace1,trace2]\n\nlayout=go.Layout(barmode=\"group\")\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","6001fd20":"x=df2014.university_name\n\ntrace1={\n    'x':x,\n    'y':df2014.citations,\n    'name':'citation',\n    'type':'bar'\n};\n\ntrace2={\n    'x':x,\n    'y':df2014.teaching,\n    'name':'teaching',\n    'type':'bar'\n};\n\ndata=[trace1,trace2];\nlayout=go.Layout(barmode='relative')\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","109d3c00":"df2016=timesData[timesData.year==2016].iloc[:7,:]\npie1=df2016.num_students\npie1_list=[float(each.replace(',','.')) for each in df2016.num_students]\nlabels=df2016.university_name\n\nfig={\n    \"data\":[\n        {\n        \"values\":pie1_list,\n        \"labels\":labels,\n        \"domain\":{\"x\":[0,.5]},\n        \"name\":\"Number of Students Rates\",\n        \"hoverinfo\":\"label+percent+name\",\n        \"hole\":0.2,\n        \"type\":\"pie\"\n    },],\n    \"layout\":{\n        \"title\":\"Universities Number of Students Rates\",\n        \"annotations\":[\n            {\n                \"font\":{\"size\":20},\n                \"showarrow\":False,\n                \"text\":\"Number of Stundets\",\n                \"x\":0.20,\n                \"y\":1\n            }\n        ]\n    }\n}\niplot(fig)","115c71fc":"df2016=timesData[timesData.year==2016].iloc[:20,:]\nnum_student_size=[float(each.replace(',','.'))for each in df2016.num_students]\ninternational_color=[float(each) for each in df2016.international]\n\ndata=[\n    {\n        'x':df2016.world_rank,\n        'y':df2016.teaching,\n        'mode':'markers',\n        'marker':{\n            'color':international_color,\n            'size':num_student_size,\n            'showscale':True\n            \n        },\n        'text':df2016.university_name\n    }\n]\niplot(data)","0085fe3c":"x2013=timesData.student_staff_ratio[timesData.year==2013]\nx2014=timesData.student_staff_ratio[timesData.year==2014]\n\ntrc1=go.Histogram(\n    x=x2013,\n    opacity=0.7,\n    name=\"2013\",\n    marker=dict(color='rgba(125,7,21,0.8)')\n    \n)\n\ntrc2=go.Histogram(\n    x=x2014,\n    opacity=0.6,\n    name=\"2014\",\n    marker=dict(color='rgba(21,25,147,0.2)')\n)\ndata=[trc1,trc2]\nlayout=go.Layout(barmode=\"overlay\",\n                title=\"Students-Staff Ratio 2013-2014\",\n                xaxis=dict(title='Students-Staff Ratio'),\n                yaxis=dict(title=\"Count\"))\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","c076af44":"x2016=timesData.country[timesData.year==2016]\nplt.subplots(figsize=(8,8))\nwordCloud=WordCloud(\nbackground_color='white',\nwidth=512,\nheight=380,\n).generate(\" \".join(x2016))\nplt.imshow(wordCloud)\nplt.axis=('off')\n\n","9d4bc5a6":"x2015=timesData[timesData.year==2015]\n\ntrace1=go.Box(\n    y=x2015.total_score,\n    name=\"Total Score of Universities in 2015\",\n    marker=dict(color='rgba(36,25,14,0.8)')\n)\n\ntrace2=go.Box(\n    y=x2015.research,\n    name=\"research of Universities in 2015\",\n    marker=dict(color='rgba(14,25,136,0.6)')\n)\ndata=[trace1,trace2]\niplot(data)","c02f4de7":"import plotly.figure_factory as ff\n","c8b8ea6e":"dataframe=timesData[timesData.year==2015]\ndata2015=dataframe.loc[:,[\"research\",\"international\",\"total_score\"]]\ndata2015[\"index\"]=np.arange(1,len(data2015)+1)\n\nfig=ff.create_scatterplotmatrix(data2015,diag=\"box\",index=\"index\",colormap=\"Portland\",\n                                colormap_type='cat',\n                               height=700, width=800)\niplot(fig)","36f764d0":"trace1=go.Scatter(\nx=dataframe.world_rank,\ny=dataframe.teaching,\nname=\"teaching\",\nmarker=dict(color='rgba(210,10,15,0.7)')\n)\n\ntrace2=go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.income,\n    xaxis=\"x2\",\n    yaxis=\"y2\",\n    name=\"income\",\n    marker=dict(color='rgba(15,210,10,0.8)')\n)\ndata=[trace1,trace2]\n\nlayout=go.Layout(\n    xaxis2 =dict(\n        domain=[0.6,0.95],\n    anchor='y2'\n    ),\n    yaxis2=dict(\n    domain=[0.6,0.95],\n    anchor='x2'),\n    \n    title=\"income and Teaching vs World Rank of Universities\"\n)\n\nfig=go.Figure(data=data, layout=layout)\niplot(fig)","71680576":"trace1=go.Scatter3d(\n    x=dataframe.world_rank,\n    y=dataframe.research,\n    z=dataframe.citations,\n    mode=\"markers\",\n    marker=dict(\n        size=5,\n        color=\"green\",\n    )\n)\n\ndata=[trace1]\n\nlayout=go.Layout(margin=dict(\nl=0,\nr=0,\nb=0,\nt=0))\n\nfig=go.Figure(data=data, layout=layout)\n\niplot(fig)","ee011f5c":"trc1=go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.research,\n    name=\"research\"\n)\n\ntrc2=go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.citations,\n    xaxis=\"x2\",\n    yaxis=\"y2\",\n    name=\"citations\"\n)\ntrc3=go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.income,\n    xaxis=\"x3\",\n    yaxis=\"y3\",\n    name=\"income\"\n\n)\n\ntrc4=go.Scatter(\n    x=dataframe.world_rank,\n    y=dataframe.total_score,\n    xaxis=\"x4\",\n    yaxis=\"y4\",\n    name=\"total_score\"\n)\n\ndata=[trc1,trc2,trc3,trc4]\n\nlayout=go.Layout(\n    xaxis=dict(\n    domain=[0,0.45]\n    ),\n    \n    yaxis=dict(domain=[0,0.45]),\n    \n    xaxis2=dict(domain=[0.55,1]),\n    \n    xaxis3=dict(domain=[0,0.45],\n                anchor=\"y3\"),\n    \n    xaxis4=dict(domain=[0.55,1],\n               anchor=\"y4\"),\n    \n    yaxis2=dict(domain=[0,0.45],\n               anchor=\"x2\"),\n    \n\n    yaxis3=dict(domain=[0.55,1]),\n    \n\n    yaxis4=dict(domain=[0.55,1],\n               anchor=\"x4\"),\n    \n    title=\"Research, Citation, \u0130ncome and Total Score vs World Rank\"\n    \n)\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","a35b942e":"**Bar Plot**","81b153ec":"**Scatter Matrix**","c4baf2b1":"**Word Cloud**","74e1e4c9":"**Line Plot**","5c2f9025":"**Multiple Subplots**","2d6e091c":"**Histogram **","249c60fb":"**Scatter Plot**","b5114f02":"**Bubble Plot**","8e0a39d0":"**Box Plot**","029965e1":"**Pie Plot**","99e8e222":"**Bar Plot S2**","301d92fd":"**3D Scatter Plot**","d277d3a0":"**Inset Plot**"}}