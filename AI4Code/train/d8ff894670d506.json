{"cell_type":{"ece3f95f":"code","4dd11cd3":"code","952451e9":"code","3711ca57":"code","117b9eb3":"code","f6fd25fe":"code","c5b6ec94":"code","5616c86a":"code","6f9235fd":"code","324dc81a":"code","c554580a":"code","8ffb5785":"code","4832e48c":"code","6f219fdb":"code","a1ffab7a":"code","f42d00c4":"code","045676e1":"code","d33418fe":"code","836cbdce":"code","5ed28364":"code","a022009c":"code","25d2e5e4":"code","f05d55bc":"code","673bbbb9":"code","04b4c851":"code","b5983c6b":"code","df8d1919":"code","27743ba2":"code","019f211f":"code","d92767ff":"code","5eb6cb6c":"code","017879d9":"code","ff72620d":"code","da488185":"code","42513cc3":"code","5c68c9c9":"code","5addc018":"code","bab75b9a":"code","6db4bb45":"code","0161d130":"code","e80ebe2d":"code","05167b20":"code","d283cb7b":"code","a674ad49":"code","cba8bc7e":"code","4487959e":"code","de766782":"code","e78de7c7":"code","72dfb425":"code","360a2e67":"code","16ef5791":"code","0196ca2a":"code","f50686b0":"code","5963c5f2":"code","b32edc51":"code","dcbbed2b":"code","37669537":"code","d49c9abf":"code","afcbf07f":"code","511b9138":"code","9ddaac7f":"markdown","6d9ce8ec":"markdown","f37fbd69":"markdown","41f1d4f9":"markdown","e2184b99":"markdown","15574a3b":"markdown","2da4093b":"markdown","a08cf74b":"markdown","ba7f85d1":"markdown","96606b96":"markdown","fc9c6ed3":"markdown"},"source":{"ece3f95f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.offline as of\nimport cufflinks as cf\nimport datetime as dt\n%matplotlib inline","4dd11cd3":"of.init_notebook_mode(connected = True)\ncf.go_offline()","952451e9":"donations = pd.read_csv('..\/input\/school-donations\/Donations.csv')\ndonors = pd.read_csv('..\/input\/school-donations\/Donors.csv')\nprojects = pd.read_csv('..\/input\/school-donations\/Projects.csv')\nresources = pd.read_csv('..\/input\/school-donations\/Resources.csv')\nschools = pd.read_csv('..\/input\/school-donations\/Schools.csv')\nteachers = pd.read_csv('..\/input\/school-donations\/Teachers.csv')","3711ca57":"print('Shape of donations dataframe is:' , donations.shape)\nprint('Shape of donors dataframe is:' , donors.shape)\nprint('Shape of projects dataframe is:' , projects.shape)\nprint('Shape of resources dataframe is:' , resources.shape)\nprint('Shape of schools dataframe is:' , schools.shape)\nprint('Shape of teachers dataframe is:' , teachers.shape)","117b9eb3":"donations.head()","f6fd25fe":"donors.head()","c5b6ec94":"projects.head()","5616c86a":"resources.head()","6f9235fd":"schools.head()","324dc81a":"teachers.head()","c554580a":"donations.describe()","8ffb5785":"donors.describe()","4832e48c":"projects.describe()","6f219fdb":"resources.describe()","a1ffab7a":"schools.describe()","f42d00c4":"teachers.describe()","045676e1":"data = pd.merge(donations , projects , how='inner' , on = 'Project ID')","d33418fe":"data2 = pd.merge(data , donors , how='inner' , on='Donor ID')","836cbdce":"data3 = pd.merge(data2 , schools , how='inner' , on='School ID')","5ed28364":"data4 = pd.merge(data3, teachers , how='inner' , on='Teacher ID')","a022009c":"data4.head()","25d2e5e4":"a = data4.columns.values.tolist()\na","f05d55bc":"s = schools['School State'].value_counts().sort_values(ascending = False).head(10)\ns","673bbbb9":"s.iplot(kind='bar' , xTitle='States' , yTitle='Number of schools' , title='Number of schools involved in projects by states')","04b4c851":"s2 = data4.groupby('School State')['Donation Amount'].mean().sort_values(ascending=False).head(10)\ns2","b5983c6b":"s2.iplot(kind='bar' , xTitle='State' , yTitle='Average donation per project' \n         , title='Top 10 states(with maximum doantion)' , colorscale='paired' )","df8d1919":"mean = np.mean(data4['Donation Amount'].dropna())\nmedian = np.median(data4['Donation Amount'].dropna())\npercentiles = np.percentile(data4['Donation Amount'].dropna() ,[25,75])\nminimum = data4['Donation Amount'].dropna().min()\nmaximum = data4['Donation Amount'].dropna().max()\n\nprint('mean donation amount is:' ,np.round(mean,2))\nprint('median donation amount is:' ,median)\nprint('25% and 75% donation amount is:' ,percentiles)\nprint('minimum donation amount is:' ,minimum)\nprint('maximum donation amount is:' ,maximum)","27743ba2":"x = np.sort(data4[\"Donation Amount\"].dropna())\ny = np.arange(1,len(x)+1)\/len(x)\nplt.plot(x,y,marker = '.')","019f211f":"s3 = data4.groupby('Donor State')['Donation ID'].count().sort_values(ascending = False).head(15)\ns3","d92767ff":"s3.iplot(kind='bar' , xTitle='State',yTitle='Number of donations',title='Donations count',colorscale='paired')","5eb6cb6c":"s4 = schools['School State'].value_counts()\ns5 = data4.groupby('Donor State')['Donation ID'].count()\ndf = pd.concat([s4,s5],axis=1,keys=['Projects','Donations'])","017879d9":"df = df.dropna()","ff72620d":"df.head()","da488185":"df.iplot(kind='scatter',xTitle='Projects',\n         yTitle='Donations',title='Projects vs Donations',\n         symbol='x',colorscale='paired',mode='markers')","42513cc3":"slope,intercept = np.polyfit(df.Projects,df.Donations,1)\nx = np.array([df.Projects.min(),df.Projects.max()])\ny = slope*x + intercept\nplt.plot(x,y)","5c68c9c9":"df.plot.scatter(x='Projects' , y='Donations')\nslope,intercept = np.polyfit(df.Projects,df.Donations,1)\nx = np.array([df.Projects.min(),df.Projects.max()])\ny = slope*x + intercept\nplt.plot(x,y)\nplt.tight_layout()\nplt.margins(0.05)","5addc018":"data4.head(2)","bab75b9a":"s6 = data4[\"Project Type\"].value_counts()\ns6","6db4bb45":"s7 = data4.groupby('Project Type')['Donation Amount'].sum().astype(int)\ns7","0161d130":"plt.subplot(2,1,1)\nplt.pie(s6 , startangle=90)\nplt.subplot(2,1,2)\nplt.pie(s7 , startangle=90)\nplt.tight_layout()\nplt.margins(0.05)\nfig = plt.gcf()\nfig.set_size_inches(25,15)","e80ebe2d":"data4['Project Subject Category Tree'].nunique()","05167b20":"s8 = data4.groupby('Project Subject Category Tree')['Donation Amount'].sum().astype(int).sort_values(ascending = False).head(15)\ns8","d283cb7b":"s9 = s8\/1000000\ns9.iplot(kind=\"bar\" , xTitle='Project sub category' , yTitle='Donation amount in millions',\n        title='Donation amount by project subject' , colorscale='paired')","a674ad49":"data4[['Project Posted Date' , 'Project Fully Funded Date']].isnull().sum()","cba8bc7e":"data4[['Project Posted Date' , 'Project Fully Funded Date']].head()","4487959e":"data4['Project Posted Date'] = pd.to_datetime(data4['Project Posted Date'])","de766782":"data4['Project Fully Funded Date'] = pd.to_datetime(data4['Project Fully Funded Date'])","e78de7c7":"data4['Funding Time'] = data4['Project Fully Funded Date'] - data4['Project Posted Date'] \ndata4[['Funding Time','Project Posted Date' , 'Project Fully Funded Date']].head()","72dfb425":"data4[['Funding Time','Project Posted Date' , 'Project Fully Funded Date']].isnull().sum()","360a2e67":"data5 = data4[pd.notnull(data4['Funding Time'])]\ndata5[['Funding Time','Project Posted Date' , 'Project Fully Funded Date']].isnull().sum()","16ef5791":"data5['Funding Time'] = data5['Funding Time'].dt.days","0196ca2a":"data5[['Funding Time','Project Posted Date' , 'Project Fully Funded Date']].head()","f50686b0":"wrong_overall_mean_time = data5['Funding Time'].mean()\nwrong_overall_mean_time","5963c5f2":"overall_mean_time = data5.groupby('Project ID')['Funding Time'].mean()\noutput = overall_mean_time.mean()\noutput","b32edc51":"#Average funding time for each state\n\nstate_project_funding_time = data5.groupby(['School State' , 'Project ID'])['Funding Time'].mean()\nstate_project_funding_time","dcbbed2b":"state_average_project_funding_time = state_project_funding_time.groupby('School State').mean()\nstate_average_project_funding_time.round(0)","37669537":"fast = state_average_project_funding_time.round(0)\nfast[fast<32].sort_values().head(10)","d49c9abf":"fast_funding = fast[fast<32].sort_values().head(10)\nfast_funding.iplot(kind='bar' , xTitle='States' , yTitle='fully funding time(in days)',\n                  title='states that fund projects earlier than others',\n                  colorscale='paired')","afcbf07f":"slow = state_average_project_funding_time.round(0)\nslow[slow>32].sort_values(ascending = False).head(10)","511b9138":"slow_funding = slow[slow>32].sort_values(ascending = False).head(10)\nslow_funding.iplot(kind='bar' , xTitle='States' , yTitle='fully funding time(in days)',\n                  title='states that fund projects earlier than others'\n                  )","9ddaac7f":"The states that have most number of schools that opened project to gather donations:","6d9ce8ec":"**Combining the plots**","f37fbd69":"**Importing the Libraries**\n\n**numpy** for working on arrays\n\n**pandas** for working and creating our own datasets\n\n**matplotlib, pyplot, cufflinks** for visualisation of results\n\n**datetime** Datetime module supplies classes to work with date and time. These classes provide a number of functions to deal with dates, times and time intervals.\n\n*An extensive use of **plotly and cufflinks** has been done*","41f1d4f9":"**More advanced analysis of the states and their Donations:**","e2184b99":"**School Donation Analysis** \ud83c\udfeb\n\nThe below notebook is an attempt to use various tools available in **python** to work on the dataset\n\n**School_Donations** which contains over*4687884* record of the **schools**\n\ntheir various departments, the **teachers** involved in the donation drives\n\nand the *states* of **United States** which organized projects in the school\n\nfor the purpose of **donation generation**\n","15574a3b":"**Creating New Data**","2da4093b":"**Describing the Dataset**","a08cf74b":"*It is quite clear from above statistics that our Donations Amount column have lots of outliers since mean is 60 whereas median is 25 which shows that there are plenty of outliers causing mean to rise, second indicator is that we have 25th and 75th percentiles both below than mean. In other words although %75 percent of our data smaller than 50 we have a mean values which is 60.66 which is also a good indicator of outliers. Lastly we can easily say that maximum value is a huge outlier too.*","ba7f85d1":"**Loading the Dataset**","96606b96":"***A linear model is used to show the relationship between projects and donations.***","fc9c6ed3":"**Analysis of Data Using mean median and percentile functionalities**"}}