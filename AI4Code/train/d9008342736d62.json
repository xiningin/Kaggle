{"cell_type":{"3143e589":"code","b9c10c58":"code","be10e499":"code","9613a832":"code","f2d6bfce":"code","c4f0fd34":"code","149bbef7":"code","b25a0263":"code","30e3a02b":"code","0ee0c48b":"code","e5ce0c39":"code","d3cbd332":"code","2f6ee32e":"code","e360148c":"code","f36c1775":"code","7b29ca37":"code","e5e247ea":"code","ffd70a33":"code","fa17433f":"code","269c4594":"code","f3792f05":"code","758d2ba4":"code","67c90b7e":"code","ac7be362":"code","83c4084c":"code","6899995d":"markdown","1c328148":"markdown","b75df113":"markdown","c9a66e2b":"markdown","4fe6f9f4":"markdown","94c9edd6":"markdown","0cee9eb7":"markdown","a1bf81c5":"markdown","572787d7":"markdown","7592edd0":"markdown","2f83618f":"markdown","ead3cc59":"markdown","0d5ec418":"markdown","56ffdf3a":"markdown","65cd37d8":"markdown","ceb16bad":"markdown","600fabdc":"markdown","3657d53c":"markdown","a8e039ed":"markdown","0c10145c":"markdown","73fc3df6":"markdown"},"source":{"3143e589":"import pandas as pd\nfrom mlxtend.frequent_patterns import apriori, association_rules\n!pip install openpyxl","b9c10c58":"pd.set_option('display.max_columns', None)\npd.set_option('display.width', 500)","be10e499":"df = pd.read_excel(\"..\/input\/uci-online-retail-ii-data-set\/online_retail_II.xlsx\",sheet_name=\"Year 2010-2011\")\ndf.head()","9613a832":"df.info()","f2d6bfce":"df.shape","c4f0fd34":"df.isnull().sum()","149bbef7":"df.dropna(inplace=True)","b25a0263":"df = df[~df[\"Invoice\"].str.contains(\"C\", na=False)]\ndf.drop(df[df[\"StockCode\"]==\"POST\"].index, inplace=True)","30e3a02b":"df.describe().T","0ee0c48b":"df = df[df[\"Quantity\"] > 0]\ndf = df[df[\"Price\"] > 0]","e5ce0c39":"quartile1 = df[\"Quantity\"].quantile(0.01)\nquartile3 = df[\"Quantity\"].quantile(0.99)\ninterquantile_range = quartile3 - quartile1\nup_limit = quartile3 + 1.5 * interquantile_range\nlow_limit = quartile1 - 1.5 * interquantile_range\n\ndf.loc[(df[\"Quantity\"] < low_limit), \"Quantity\"] = low_limit\ndf.loc[(df[\"Quantity\"] > up_limit), \"Quantity\"] = up_limit","d3cbd332":"quartile1 = df[\"Price\"].quantile(0.01)\nquartile3 = df[\"Price\"].quantile(0.99)\ninterquantile_range = quartile3 - quartile1\nup_limit = quartile3 + 1.5 * interquantile_range\nlow_limit = quartile1 - 1.5 * interquantile_range\n\ndf.loc[(df[\"Price\"] < low_limit), \"Price\"] = low_limit\ndf.loc[(df[\"Price\"] > up_limit), \"Price\"] = up_limit","2f6ee32e":"df = df[df['Country'] == \"Germany\"]\n\ndf.head(10)","e360148c":"df.shape","f36c1775":"df.groupby(['Invoice', 'StockCode']).agg({\"Quantity\": \"sum\"}).head()","7b29ca37":"df.groupby(['Invoice', 'StockCode']).agg({\"Quantity\": \"sum\"}).unstack()","e5e247ea":"df.groupby(['Invoice', 'StockCode']).agg({\"Quantity\": \"sum\"}).unstack().fillna(0)","ffd70a33":"invoice_product_df = df.groupby(['Invoice', 'StockCode'])['Quantity'].sum().unstack().fillna(0).applymap(lambda x: 1 if x > 0 else 0)\n\ninvoice_product_df.head()","fa17433f":"invoice_product_df.shape","269c4594":"frequent_itemsets = apriori(invoice_product_df, min_support=0.01, use_colnames=True)\nfrequent_itemsets","f3792f05":"rules = association_rules(frequent_itemsets, metric=\"support\", min_threshold=0.01)\n\nrules.sort_values(\"support\", ascending=False).head()","758d2ba4":"sorted_rules = rules.sort_values(\"lift\", ascending=False)\n\n\ndef arl_recommender(rules_df, product_id, rec_count=1):\n    sorted_rules = rules_df.sort_values(\"lift\", ascending=False)\n    recommendation_list = []\n\n    for i, product in sorted_rules[\"antecedents\"].items():\n        for j in list(product):\n            if j == product_id:\n                recommendation_list.append(list(sorted_rules.iloc[i][\"consequents\"]))\n\n    recommendation_list = list({item for item_list in recommendation_list for item in item_list})\n\n    return recommendation_list[:rec_count]\n","67c90b7e":"arl_recommender(rules, 21987,3)","ac7be362":"def check_id(dataframe, stock_code):\n    product_name = dataframe[dataframe[\"StockCode\"] == stock_code][[\"Description\"]].values[0].tolist()\n    print(product_name)","83c4084c":"check_id(df, 23307)","6899995d":"Understanding the explanations of the metrics in the table is important to interprete the results \n\nAntecendents: Item in basket\n\nConsequents: Product to be recommended in accordance with the antecendents.\n\nAntecendents Support: Support value for Antecendents.\n\nConsequents Support: Support value for Consequents.\n\nSupport: Probability of Antecendents and Consequents in the basket together\n\nConfidence: Probability of buying the Consequents when the Antecendents are purchased\n\nLift: Shows how many times the probability of buying the Consequents increases when the Antecendents are purchased.\n\nFor example, the support value of item-22328 is 0.160356, the support value for the item-22326 is 0.249443, and the probability of both being in a basket is the value of 0.13363 in the support column.\n\nWhen item-22328 is purchased, the probability of taking item-22326, is 0.83333, and when item-22328 is purchased, the probability of buying item-22326 increases by 3.340774 times. ","1c328148":"**3.EXTRACTING ASSOCIATION RULES**\n","b75df113":"**Context**\n\nThe dataset named Online Retail II was obtained from a UK-based online store and includes sales from 01\/12\/2009 to 09\/12\/2011. \n\nThis company sells souvenirs and most of their customers are also wholesalers. Within the scope of this study, only 2010-2011 sales will be consedered.\n\n**Business Problem**\n\nOur aim is to apply association analysis to the online retail II dataset and to offer suggestions based on the products in their baskets to users who are in the process of purchasing products.\n\n**Task Details**\n1. Data Preprocessing\n2. Preparing the ARL Data Structure (Invoice-Product Matrix)\n3. Extracting Association Rules\n4. Suggesting a Product to Users at the Basket Stage\n\n**Attribute Information:**\n\n**InvoiceNo:** Invoice number. The unique number of each transaction, that is, the invoice. Aborted operation if it starts with C.\n\n**StockCode:** Product code. Unique number for each product.\n\n**Description:** Product name\n\n**Quantity:** Number of products. It expresses how many of the products on the invoices have been sold.\n\n**InvoiceDate:** Invoice date and time.\n\n**UnitPrice:** Product price (in GBP)\n\n**CustomerID:** Unique customer number\n\n**Country:** Country name. Country where the customer lives.","c9a66e2b":"In scope of this study we will focus on the data for the country \"Germany\"","4fe6f9f4":"In the DataFrame there are some invoices that include \"C\" which means that they are cancelled transactions so we will remove them from our DataFrame\nThe \"POST\" statement is also included as a StockCode but it refers the postage cost not a product so it will be removed as well","94c9edd6":"We use a function called Apriori so that possibilities of all possible product combinations can be obtained.\n\nThis function automatically returns all supports for the given matrix. \nSince the support values will be low in real applications,we define a threshold value and eliminate the very small ones, those without having any patterns.","0cee9eb7":"Invoice-Product matrix is needed by the Apriori Algorithm so in this part, we need to obtain this matrix step by step\n\nThe following code gives us the StockCodes and Quantities per Invoice","a1bf81c5":"**4.SUGGESTING A PRODUCT TO USERS AT THE BASKET STAGE**","572787d7":"**2.PREPARING THE ARL DATA STRUCTURE (INVOICE-PRODUCT MATRIX)**\n","7592edd0":"As a result, we need to obtain a binary matrix. Therefore, for products with a Quantity value on invoices, we must change the Quantity value to 1.","2f83618f":"**INTRODUCTION**","ead3cc59":"**IMPORTING LIBRARIES AND DATA**","0d5ec418":"In order to use this information  in accordance with ARL requirements, Invoices should be in rows and products must be in columns of the matrix","56ffdf3a":"Association Rule Learning (ARL) is a rule-based machine learning method for discovering interesting relationships between variables in large databases. \n\nARL Algorithm can be used in different fields, here we will focus on Basket Analysis. Basket Analysis with ARL is one of the most popular techniques for identifying offers that increase overall sales and finding the best product placement in the store.\n\nThe idea is to bring together a set of products that have some sort of relationship between them and increase sales by reminding customers of their need for the relevant product.","65cd37d8":"We have obtained the products and the support values of these products. \nSupport is an indication of how frequently the itemset appears in the dataset.\nFor example, the support value of the product with code 10125, that corresponds the rate of presence in all invoices is 0.013363.","ceb16bad":"Our focus here is the product. When a user adds a product to the cart, this algorithm helps us to recommend products independently of the user, by looking at the overall buying behavior.","600fabdc":"arl_recommender gives us the StockCode but we may need to learn the Description also. ","3657d53c":"We found only support values with Apriori. We use the association_rules function to find the Confidence and Lift values. Other metrics are calculated by using the support values that we found with Apriori and added into \"frequent_itemsets\".","a8e039ed":"We have a StockCode and we are looking for products similar to it. We can define a function called arl_recommender to identify these products.","0c10145c":"It is clear that we have products that are not included in the invoices, this information should be stored in our DataFrame with the replacement of NaN values to zero.\n","73fc3df6":"**1. DATA PREPROCESSING**"}}