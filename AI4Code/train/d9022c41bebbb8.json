{"cell_type":{"9fb67860":"code","723c0c82":"code","cc467441":"code","f7c17331":"code","7ce47124":"code","c66128b6":"code","d5bc0a8c":"code","93913c54":"code","e7c1a481":"code","cc66ebdd":"code","8be30b00":"code","916925e7":"code","72abd381":"code","46a86792":"code","fc3431ab":"code","5c3519cd":"code","b4de5204":"code","4b81c47c":"code","96acf1fb":"code","5e32917a":"code","bb7ebda0":"markdown","2281f2da":"markdown","3e9aca56":"markdown","0d9496a9":"markdown","bf04ddb5":"markdown","bcb0d6e4":"markdown","aed477c0":"markdown","08f7db64":"markdown","0c8e4e66":"markdown","c2cf31db":"markdown","1b8d92f0":"markdown","e47788b2":"markdown","291b519f":"markdown","7e5b885f":"markdown","6f4ff190":"markdown"},"source":{"9fb67860":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","723c0c82":"# For Plotting\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","cc467441":"data = pd.read_csv(\"..\/input\/diabetes.csv\")\ndata.head()","f7c17331":"data.describe()","7ce47124":"percent = (data.groupby(\"Outcome\")[\"Outcome\"].count()\/len(data.index))*100\nplt.figure(figsize=(5,5))\nplt.pie(percent, labels=(percent.round(2)))","c66128b6":"sns.pairplot(data, hue=\"Outcome\")","d5bc0a8c":"sns.heatmap(data.drop(\"Outcome\", axis=1).corr(), annot=True)","93913c54":"plt.hist(data[\"Age\"])","e7c1a481":"bins = pd.Series([])\nfor i in data.index:\n    if (data.loc[i:i,][\"Age\"] <= 25).bool(): bins = bins.append(pd.Series([\"20-25\"]))\n    elif (data.loc[i:i,][\"Age\"] <= 30).bool(): bins = bins.append(pd.Series([\"26-30\"]))\n    elif (data.loc[i:i,][\"Age\"] <= 35).bool(): bins = bins.append(pd.Series([\"31-35\"]))\n    elif (data.loc[i:i,][\"Age\"] <= 40).bool(): bins = bins.append(pd.Series([\"36-40\"]))\n    elif (data.loc[i:i,][\"Age\"] <= 45).bool(): bins = bins.append(pd.Series([\"41-45\"]))\n    elif (data.loc[i:i,][\"Age\"] <= 50).bool(): bins = bins.append(pd.Series([\"46-50\"]))\n    elif (data.loc[i:i,][\"Age\"] <= 55).bool(): bins = bins.append(pd.Series([\"51-55\"]))\n    elif (data.loc[i:i,][\"Age\"] <= 60).bool(): bins = bins.append(pd.Series([\"56-60\"]))\n    elif (data.loc[i:i,][\"Age\"] <= 65).bool(): bins = bins.append(pd.Series([\"61-65\"]))\n    else: bins = bins.append(pd.Series([\">65\"]))\nbins.reset_index(drop=True, inplace=True)\ndata[\"Ages\"] = bins\ndata.head()","cc66ebdd":"bindata1 = data[data[\"Outcome\"]==1].groupby(\"Ages\")[[\"Outcome\"]].count()\nbindata1.head()","8be30b00":"bindata = data.groupby(\"Ages\")[[\"Outcome\"]].count()\nbindata1[\"% Diabetic\"] = (bindata1[\"Outcome\"]\/bindata[\"Outcome\"])*100","916925e7":"sns.barplot(x=bindata1.index, y=bindata1[\"% Diabetic\"])","72abd381":"fig = plt.figure(figsize=(20,3))\nfor i in np.arange(1,7):\n        splt =  plt.subplot(1,7,i,title=data.columns[i])\n        plt.boxplot(data[data.columns[i]])","46a86792":"gluData = data[data[\"Glucose\"]!=0]","fc3431ab":"bins = np.arange(min(gluData[\"Glucose\"]),max(gluData[\"Glucose\"]),10)\nbins","5c3519cd":"gluData[\"Glucose Levels\"] = pd.cut(gluData[\"Glucose\"], bins=bins)\ngluData.head()","b4de5204":"bindata1 = gluData[gluData[\"Outcome\"]==1].groupby(\"Glucose Levels\")[[\"Outcome\"]].count()\nbindata = gluData.groupby(\"Glucose Levels\")[[\"Outcome\"]].count()\nbindata1[\"% Diabetic\"] = (bindata1[\"Outcome\"]\/bindata[\"Outcome\"])*100","4b81c47c":"plt.figure(figsize=(15,5))\nsns.barplot(x=bindata1.index, y=bindata1[\"% Diabetic\"])","96acf1fb":"pressData = data[data[\"BloodPressure\"]!=0]","5e32917a":"bins = np.arange(min(pressData[\"BloodPressure\"]),max(pressData[\"BloodPressure\"]),10)\npressData[\"BP Levels\"] = pd.cut(pressData[\"BloodPressure\"], bins=bins)\nbindata1 = pressData[pressData[\"Outcome\"]==1].groupby(\"BP Levels\")[[\"Outcome\"]].count()\nbindata = pressData.groupby(\"BP Levels\")[[\"Outcome\"]].count()\nbindata1[\"% Diabetic\"] = (bindata1[\"Outcome\"]\/bindata[\"Outcome\"])*100\nplt.figure(figsize=(15,5))\nsns.barplot(x=bindata1.index, y=bindata1[\"% Diabetic\"])","bb7ebda0":"We shall also look at the 5 point summary of the data","2281f2da":"Higher the Glucose Levels higher the chance of testing Diabetes.\n\nSimilarly, We can do the same for other parameters as well.\n\nFor Blood Pressure,","3e9aca56":"It is clearly evident that the percentage of women between 30 and 55, being diagnosed with diabetes, is well above our baseline model. We can say that the middle aged women are most likely to be diabetic than young or old women.\n\nLet us try to visualize the distribution of all the other parameters side-by-side","0d9496a9":"Therefore it is safe to assume that approximately 35% of the Pima Indian Women are diagnosed with Diabetes. This is our baseline model.\n\nNow lets dig deep! To start with let us check how the parameters are correlated with each other. I am using Pair plot since it also captures the frequency distribution of each parameter along the diagonal.","bf04ddb5":"As we gain more insight from each parameter level, the EDA intutively takes us towards selecting an algorithm based on our individual analysis. A tree based model will mostly do best on these type of problems. One can apply Boosting techniques on top of it improve accuracy but keep in mind that the tree based models are easy to explain.\n\nThanks for reading!","bcb0d6e4":"In the above distributions we see a lot of \"0\" values. zero values in Glucose Level, Blood Pressure, Skin thickness, Insulin and BMI are not a normal phenomenon. There might be some error in the observation made. This might skew our distributions hence we remove those zeros in each of the bi-variate analysis against the target variable. We can leaving out the \"DiabetesPedigreeFunction\" as we are not sure how it has been calculated. Sources suggest that this function helps us to identify the heriditary effect on a human that causes diabetes. However we do not know how accurately this function has been constructed and the no. of generations been considered for the study is unknown. It is safe to leave out that variable for EDA as it lacks explainability.\n\nOk, Now we can start inspecting the Glucose levels as we did for the Age.","aed477c0":"As the about plot suggests most of the observed women are young and middle aged. Let us look at the percentage of Outcome across the Age groups.\n\nFirst, let us categorize each observation into particular age bucket.","08f7db64":"Now we have categorized individuals based on thier glucose levels. Lets group them to get % values","0c8e4e66":"First, Let us load the dataset and see how it looks","c2cf31db":"We have different parameters that may or may not impact the Diabetes Diagnosis of Pima Indian Women. Let's find out!\n\nWe can have a single number estimation over the entire dataset in-terms of the Outcome.","1b8d92f0":"As we can see there is no significant pattern between parameters. Since Outcome is added as the hue we can also see if there is any cluster being formed that explains the grouping of the Outcome. We could only see blue and orange dots overlap. However we can see some correlation between BMI-SkinThickness, Age-Pregnencies, Insulin-Glucose. But not too strong to be considered. Anyway we will confirm the same by plotting correlation matrix.","e47788b2":"We can do binning as the same way we did for Age but the range is quite large here. For Glucose we will use numpy,pandas functions to do binning.","291b519f":"Now calculate the no. of diabetic person in each age group","7e5b885f":"As we can see in the plot above there is no significant correlation between parameters.\n\nSince there is very little relation between the parameters themselves, we will now analyse each parameter against the Target.\n\nSo lets look into Age and see how it is distributed","6f4ff190":"Calculate the % of diabetic person in each age group"}}