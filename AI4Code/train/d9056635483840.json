{"cell_type":{"6c71d6f7":"code","21c4f9dd":"code","704bf998":"code","22d52525":"code","872ab541":"code","46eec4cd":"code","64dfcd82":"code","5955dd55":"code","8a80b82c":"code","ae2c48b4":"code","cfc17221":"code","4b97e226":"code","549c7776":"code","637c385f":"code","a8ad2b33":"code","d8010f2a":"code","4652e2b1":"code","ee8d16ee":"code","5b77485a":"code","f6846691":"code","4df78dd3":"code","8b31aa9c":"code","e98256bf":"code","511d8871":"code","251aad0a":"code","17a3b538":"code","9adcc122":"code","ed7c34c7":"code","57704e79":"code","94b3a84a":"code","a9558017":"code","2464aa29":"code","0a7ddc67":"code","36c78368":"code","ab6e3912":"code","3e079ccf":"code","9a91387b":"code","4373334c":"code","dc20d07d":"code","620ffd2e":"code","93932dcc":"code","5c3e4b27":"code","e9c8fa36":"code","4e9c335f":"code","11b27fa3":"code","4834a324":"code","6c37ead7":"code","d9ef9450":"code","df291dab":"code","6b14412c":"code","57e4dde0":"code","fffcf181":"code","13d820f4":"code","551f41f4":"code","4c33541e":"code","118c7a59":"code","5956c812":"code","36be69fb":"code","6feefc4b":"code","275c359a":"code","b5fc4240":"code","159c916b":"code","2306a501":"code","da59a071":"code","a793454a":"code","3a291a15":"code","417309ac":"code","09ac4660":"code","0bb34cdf":"code","c15e26fd":"code","b6f98e23":"code","4441fc47":"code","1e95ad60":"code","51167e4f":"code","e3bb59f8":"code","c6eab144":"code","02b4e957":"code","469c3767":"code","8a2511e6":"code","fcd1375e":"code","20b5b795":"code","533627e3":"code","588cf45d":"code","7b31f685":"code","e694e1dc":"markdown","5f796781":"markdown","745c1222":"markdown","c75b4d3b":"markdown","28b51e8c":"markdown","ee98fa7e":"markdown","48354a57":"markdown","08314361":"markdown","ae399472":"markdown","2221c258":"markdown","07585082":"markdown","eb5dded7":"markdown","7a1c8aa3":"markdown","5692041c":"markdown","2950a301":"markdown","a6a94a43":"markdown","b2e708d1":"markdown","3cd05882":"markdown","8675eeed":"markdown","f9fc3713":"markdown","6c932a99":"markdown","8ef24266":"markdown","2ce58249":"markdown","1db0d33d":"markdown","69a87628":"markdown","e515e7c1":"markdown","505e07b4":"markdown","580a310c":"markdown","39347fe0":"markdown","797afbfd":"markdown","2545a8dd":"markdown","9cf25255":"markdown","15284adc":"markdown","53a028ea":"markdown","b7032d7c":"markdown","6ba0e3c7":"markdown","861746f4":"markdown","33a82e5f":"markdown","8a628361":"markdown","53c8fa24":"markdown","9744a26c":"markdown","2c6772e9":"markdown","55aad113":"markdown","eee07919":"markdown","1906d449":"markdown","0fcc683f":"markdown","0f496cf8":"markdown","e5debff2":"markdown","6c33a945":"markdown","edd06f85":"markdown","0da22d6f":"markdown","0e2f5434":"markdown","595d2293":"markdown","b612d3f0":"markdown","41e6713a":"markdown","2120678a":"markdown","efe18cae":"markdown","d532aca3":"markdown","cd335366":"markdown","b8a116a3":"markdown","a00c99f7":"markdown","f18f58de":"markdown","5bacc36a":"markdown","025649ef":"markdown","82893742":"markdown","9f550f4b":"markdown","8c08a6ad":"markdown","2ae03c04":"markdown","8e50305f":"markdown","1a1d37c9":"markdown","953d5b76":"markdown","fc2e67ae":"markdown","1a8d9bda":"markdown","98c2e9e2":"markdown","81bfeaa1":"markdown","7af1c70c":"markdown","62ea4ff1":"markdown","340f18f6":"markdown","701e66ac":"markdown"},"source":{"6c71d6f7":"import seaborn as sns","21c4f9dd":"from matplotlib import pyplot as plt","704bf998":"import pandas as pd","22d52525":"import numpy as np","872ab541":"from datetime import datetime, timedelta #It's for time series","46eec4cd":"experience = [1,3,4,5,7,8,10,12]\n\nsalary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]","64dfcd82":"sns.lineplot(x=experience,y=salary)\n\nplt.title(\"Salaries of Data Scientists by their Experience\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.show()","5955dd55":"experience = [1,3,4,5,7,8,10,12]\n\ndata_scientists_salary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]\n\nsoftware_engineers_salary = [9020, 12873, 15725, 18000, 19790, 20196, 25769,32000 ]","8a80b82c":"sns.lineplot(experience,data_scientists_salary)\nsns.lineplot(experience,software_engineers_salary)\n\nplt.title(\"Salary of Data Scientists and Software Engineers by their experiences\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\n\nplt.legend([\"Data Scientists\",\"Software Engineers\"])\n\nplt.show()","ae2c48b4":"flights = sns.load_dataset(\"flights\")\nflights.head()","cfc17221":"flights_wide = flights.pivot(\"year\", \"month\", \"passengers\")\nflights_wide.head()","4b97e226":"sns.lineplot(data=flights_wide[\"Jun\"])\n\nplt.title(\"Flights in June\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Passengers\")\nplt.show()","549c7776":"sns.lineplot(data=flights, x=\"year\", y=\"passengers\",color=\"r\")\n\nplt.title(\"Number of Passengers by year\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Passengers\")\nplt.show()","637c385f":"plt.figure(figsize=(20,7))\n\nsns.lineplot(data=flights, x=\"year\", y=\"passengers\", hue=\"month\")\n\nplt.title(\"Number of Passengers by year on monthly basis\")\nplt.xlabel(\"Years\")\nplt.ylabel(\"Passengers\")\nplt.show()","a8ad2b33":"x = [\"A\", \"B\", \"C\", \"D\"]\ny = [3, 8, 1, 10]","d8010f2a":"sns.barplot(x=x,y=y)\n\nplt.show()","4652e2b1":"experience = [1,2,3,4,5,6,7,8]\n\ndata_scientists_salary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]\n\ngenders = [\"Men\",\"Men\",\"Women\",\"Men\",\"Women\",\"Women\",\"Women\",\"Men\"]","ee8d16ee":"sns.barplot(x=experience,y=data_scientists_salary,hue=genders)\n\nplt.title(\"Salaries of data scientists by their gender\")\nplt.show()","5b77485a":"sns.barplot(y=experience,x=data_scientists_salary,orient = 'h')\n\nplt.title(\"Salaries of data scientists\")\nplt.show()","f6846691":"sns.barplot(x=experience,y=data_scientists_salary)\nsns.lineplot(x=experience,y=data_scientists_salary)\n\nplt.title(\"Salaries of data scientists\")\nplt.xlabel(\"Experience\")\nplt.ylabel(\"Salary\")\nplt.show()","4df78dd3":"tips = sns.load_dataset(\"tips\")","8b31aa9c":"sns.catplot(x=\"day\", y=\"total_bill\", data=tips)\n\nplt.show()","e98256bf":"sns.catplot(x=\"day\", y=\"total_bill\", data=tips,jitter=False)\n\nplt.title(\"Total Bills by Day\")\n\nplt.show()","511d8871":"notes = [30,74,94,14,55,47,63,28,88,44,53,18,66,74,81]","251aad0a":"sns.distplot(a=notes,kde=False,color=\"r\")\n\nplt.title(\"Histogram of Notes\")\nplt.show()","17a3b538":"sns.distplot(a=notes,color=\"r\")\n\nplt.title(\"Histogram of Notes\")\nplt.show()","9adcc122":"df = pd.read_csv(\"..\/input\/human-resources-data-set\/HRDataset_v14.csv\")","ed7c34c7":"df.head()","57704e79":"plt.style.use(\"fivethirtyeight\")\n\nbins = [40000,55000,70000,85000,100000,120000]\n\nsns.distplot(df.Salary,bins=bins,color=\"blue\",kde=False)\n\nplt.title(\"Salaries of Workers\")\nplt.xlabel(\"Salary\")\nplt.ylabel(\"Count\")\n\nplt.tight_layout()\nplt.grid(False)\nplt.show()","94b3a84a":"fully_meets = df[df[\"PerformanceScore\"]==\"Fully Meets\"]\nexceeds = df[df[\"PerformanceScore\"]==\"Exceeds\"]\nneeds_improvement = df[df[\"PerformanceScore\"]==\"Needs Improvement\"]\npip = df[df[\"PerformanceScore\"]==\"PIP\"]","a9558017":"sns.distplot(a= fully_meets[\"Salary\"], label=\"Fully Meets\", kde=False)\nsns.distplot(a=exceeds[\"Salary\"] , label=\"Exceeds\", kde=False)\nsns.distplot(a= needs_improvement[\"Salary\"], label=\"Needs Improvement\", kde=False)\nsns.distplot(a=pip[\"Salary\"], label=\"Pip\", kde=False)\n\nplt.title(\"Histogram of Performance Scores of Employees by their Performance Score\")\n\nplt.legend()\n\nplt.show()","2464aa29":"notes = [30,74,94,14,55,47,63,28,88,44,53,18,66,74,81]","0a7ddc67":"sns.kdeplot(data=notes, shade=True) # Setting shade=True colors the area below the curve\n\nplt.title(\"Density Plot of Notes\")\n\nplt.show()","36c78368":"first_exam_notes = [30,74,94,14,55,47,63,28,88,44,53,18,66,74,81]\nfinal_exam_notes = [96,77,19,29,56,29,33,49,83,37,84,73,16,48,79]","ab6e3912":"sns.jointplot(x=first_exam_notes,y=final_exam_notes,kind=\"kde\") # Setting shade=True colors the area below the curve\n\nplt.show()","3e079ccf":"sns.kdeplot(data=first_exam_notes,label=\"First Exam Notes\", shade=True)\nsns.kdeplot(data=final_exam_notes,label=\"Final Exam Notes\", shade=True)\n\nplt.title(\"Kernel Density Plot of Notes\")\n\nplt.show()","9a91387b":"iris = sns.load_dataset(\"iris\")","4373334c":"iris.head()","dc20d07d":"sns.pairplot(iris)\n\nplt.show()","620ffd2e":"sns.pairplot(data=iris, vars=[\"sepal_width\", \"sepal_length\"])\n\nplt.show()","93932dcc":"sns.pairplot(data=iris, x_vars=[\"sepal_width\", \"sepal_length\",\"petal_width\"],\n                        y_vars=[\"sepal_width\", \"sepal_length\"])\n\nplt.show()","5c3e4b27":"sns.pairplot(iris,hue=\"species\")\n\nplt.show()","e9c8fa36":"sns.pairplot(iris,hue=\"species\",markers=[\"o\", \"s\", \"D\"])\n\nplt.show()","4e9c335f":"sns.pairplot(iris,hue=\"species\",diag_kind=\"hist\")\n\nplt.show()","11b27fa3":"sns.pairplot(iris,height=2)\n\nplt.show()","4834a324":"sns.pairplot(iris,corner=True)\n\nplt.show()","6c37ead7":"sns.pairplot(data=iris,\n            plot_kws={\"marker\":\"+\",\"linewidth\":1},\n            diag_kws={\"fill\":False})\n\nplt.show()","d9ef9450":"ax=sns.pairplot(iris, diag_kind=\"kde\")\n\nax.map_lower(sns.kdeplot, levels=4, color = \"darkred\")","df291dab":"experience = [1,2,3,4,5,6,7,8]\n\ndata_scientists_salary = [6500, 9280, 12050, 13200, 16672, 21000, 23965, 29793]","6b14412c":"sns.scatterplot(x=experience,y=data_scientists_salary)\n\nplt.title(\"Data Scientist's Salaries by their experience\")\nplt.show()","57e4dde0":"df = pd.read_csv(\"..\/input\/human-resources-data-set\/HRDataset_v14.csv\")","fffcf181":"df.head()","13d820f4":"plt.figure(figsize=(15,5))\n\nsns.scatterplot(x=df.Salary,y=df.EngagementSurvey,color=\"r\")\n\nplt.title(\"Salaries of Employees by their Engagement Survey Score\")\nplt.show()","551f41f4":"plt.figure(figsize=(15,5))\n\nsns.regplot(x=df.Salary,y=df.EngagementSurvey,color=\"b\")\n\nplt.title(\"Salaries of Employees by their Engagement Survey Score\")\nplt.show()","4c33541e":"plt.figure(figsize=(15,5))\n\nsns.scatterplot(x=df.Salary,y=df.EngagementSurvey,hue=df.Sex)\n\nplt.xlabel(\"Salary\")\nplt.ylabel(\"Engagement Survey Score\")\n\nplt.title(\"Salaries of Employees by their Engagement Survey Score based on Gender\")\nplt.show()","118c7a59":"plt.figure(figsize=(10,10))\n\nsns.lmplot(x=\"Salary\",y=\"EngagementSurvey\",hue=\"Sex\",data=df)\n\nplt.xlabel(\"Salary\")\nplt.ylabel(\"Engagement Survey Score\")\n\nplt.title(\"Salaries of Employees by their Engagement Survey Score based on Gender\")\nplt.show()","5956c812":"plt.figure(figsize=(5,5))\n\nsns.swarmplot(x=\"Sex\",y=\"Salary\",data=df)\n\nplt.xlabel(\"Gender\")\nplt.ylabel(\"Salary\")\n\nplt.title(\"Salaries of Employees by their Gender\")\nplt.show()","36be69fb":"df = pd.DataFrame({\"Date\": ['1\/2\/2021',\n                             '1\/3\/2021',\n                             '1\/4\/2021',\n                             '1\/5\/2021',\n                             '1\/6\/2021',\n                             '1\/7\/2021',\n                             '1\/7\/2021',\n                             '1\/8\/2021'],\n                   \"Piece\": [19.5, 19.,19.5,19.5,21,19.5,20,23]})","6feefc4b":"sns.lineplot(x=\"Date\",y=\"Piece\",data = df)\n\nplt.xticks(rotation=30)\n\nplt.title(\"Time Series in Seaborn\")\n\nplt.show()","275c359a":"notes = [44,55,15,95,82,51,37,76,7,84,29,48]","b5fc4240":"sns.boxplot(notes)\n\nplt.title(\"Boxplot of Notes\")\n\nplt.show()","159c916b":"sns.boxplot(y=notes,color=\"r\")\n\nplt.title(\"Boxplot of Notes\")\nplt.ylabel(\"Notes\")\n\nplt.show()","2306a501":"df = pd.read_csv(\"..\/input\/human-resources-data-set\/HRDataset_v14.csv\")","da59a071":"df.head()","a793454a":"plt.figure(figsize=(15,5))\n\nsns.boxplot( x=df[\"PerformanceScore\"], y=df[\"Salary\"] )\n\nplt.title(\"Boxplot of Salaries\")\nplt.ylabel(\"Salary\")\nplt.xlabel(\"Persormance Score\")\n\nplt.show()","3a291a15":"sns.boxplot( x=df[\"PerformanceScore\"], y=df[\"Salary\"],width=0.5)\n\nplt.title(\"Boxplot of Salaries\")\nplt.ylabel(\"Salary\")\nplt.xlabel(\"Persormance Score\")\n\nplt.show()","417309ac":"plt.figure(figsize=(13,5))\n\nsns.boxplot(x=\"PerformanceScore\", y=\"Salary\",hue=\"Sex\",data=df, palette=\"Set3\")\n\nplt.title(\"Boxplot of Salaries\")\nplt.ylabel(\"Salary\")\nplt.xlabel(\"Persormance Score\")\n\nplt.show()","09ac4660":"plt.figure(figsize=(13,5))\n\nsns.boxplot(x=\"DaysLateLast30\",y=\"PerformanceScore\",data=df, palette=\"Set2\",orient=\"h\")\n\nplt.title(\"Boxplot of Late days and Performance Score\")\nplt.ylabel(\"Performance Score\")\nplt.xlabel(\"Late Days\")\n\nplt.show()","0bb34cdf":"plt.figure(figsize=(13,5))\n\nsns.boxplot(x=\"PerformanceScore\", y=\"Salary\",data=df, palette=\"Set3\")\nsns.swarmplot(x=\"PerformanceScore\", y=\"Salary\",data=df,color=\"r\")\n\nplt.title(\"Boxplot of Salaries\")\nplt.ylabel(\"Salary\")\nplt.xlabel(\"Persormance Score\")\n\nplt.show()","c15e26fd":"flights = sns.load_dataset(\"flights\")","b6f98e23":"flights.head()","4441fc47":"flights = flights.pivot(\"month\",\"year\",\"passengers\")","1e95ad60":"flights","51167e4f":"sns.heatmap(flights)\n\nplt.title(\"Heatmap of Flights\")\n\nplt.show()","e3bb59f8":"sns.heatmap(flights, vmin=100,vmax=700)\n\nplt.title(\"Heatmap of Flights\")\n\nplt.show()","c6eab144":"sns.heatmap(flights, center=500)\n\nplt.title(\"Heatmap of Flights\")\n\nplt.show()","02b4e957":"plt.figure(figsize=(10,7))\n\nsns.heatmap(flights, annot=True,fmt=\"d\")\n\nplt.title(\"Heatmap of Flights\")\n\nplt.show()","469c3767":"sns.heatmap(flights, linewidths=0.5,linecolor=\"blue\")\n\nplt.title(\"Heatmap of Flights\")\n\nplt.show()","8a2511e6":"sns.heatmap(flights, cmap=\"YlGnBu\")\n\nplt.title(\"Heatmap of Flights\")\n\nplt.show()","fcd1375e":"sns.heatmap(flights, cbar=False)\n\nplt.title(\"Heatmap of Flights\")\n\nplt.show()","20b5b795":"tips = sns.load_dataset(\"tips\")","533627e3":"tips.head()","588cf45d":"ax= sns.FacetGrid(tips,col=\"time\") #col argument takes the column we want.\n\nax.map(sns.distplot, \"tip\")\n\nplt.show()","7b31f685":"g = sns.FacetGrid(tips, col=\"smoker\", hue=\"sex\")\n\ng.map(sns.scatterplot, \"total_bill\", \"tip\", alpha=.4)\n\ng.add_legend()\n\nplt.show()","e694e1dc":"If we want a smaller plot, we should use less variables. For example, if we only want sepal_width and sepal_length, than would create a 2x2 plot.","5f796781":"## Line Plots","745c1222":"We will work with *Salary* column.","c75b4d3b":"We can draw a boxplot with nested grouping by two categorical variables.","28b51e8c":"The *jitter* parameter controls the magnitude of jitter or disables it altogether.","ee98fa7e":"Seaborn gets data automatically as x stick. But if we specify it as y, it will be horizontal.","48354a57":"We can use **sns.lineplot()** function in order to plot time series in seaborn.","08314361":"We can also see each month by one by.","ae399472":"We will also add software engineer's salary to our graph.","2221c258":"As with other figure-level functions, the size of the figure is controlled by setting the *height* of each individual subplot:","07585082":"- https:\/\/realpython.com\/tutorials\/data-viz\/\n- https:\/\/realpython.com\/python-matplotlib-guide\/\n- https:\/\/www.kaggle.com\/learn\/data-visualization\n- https:\/\/github.com\/EnginAlpman\n- https:\/\/www.w3schools.com\/python\/matplotlib_intro.asp\n- https:\/\/www.data-to-viz.com\/\n- https:\/\/seaborn.pydata.org\/","eb5dded7":"To double-check the strength of this relationship, we might like to add a regression line, or the line that best fits the data. We do this by changing the command to **sns.regplot**.","7a1c8aa3":"The return object is the underlying *PairGrid*, which can be used to further customize the plot.","5692041c":"When exploring multi-dimensional data, a useful approach is to draw multiple instances of the same plot on different subsets of our dataset. This technique is sometimes called either *lattice* or *trellis* plotting, and it is related to the idea of \u201csmall multiples\u201d.\n\nThe **FacetGrid** class is useful when we want to visualize the distribution of a variable or the relationship between multiple variables separately within subsets of our dataset. \n\nEach of *relplot(), displot(), catplot()*, and *lmplot()* use this object internally, and they return the object when they are finished so that it can be used for further tweaking.","2950a301":"If we pass the entire dataset in long-form mode will aggregate over repeated values (each year) to show the mean and 95% confidence interval.","a6a94a43":"Let's plots salaries of data scientists by their gender. We will use *hue* argument for that.","b2e708d1":"We can also visualize multiple data as boxplot.","3cd05882":"We will use **barplot()** function.","8675eeed":"## Content\n\n**Seaborn**\n\n - Pyplot\n \n - Line Plot\n \n - Bar Plot\n \n - Cat Plot\n \n - Histograms\n \n - Density Plots\n \n - Pair Plot\n \n - Scatter Plot\n \n - Time Series Plotting\n \n - Box Plot\n \n - Heatmap\n \n - Multi-plot Grids","f9fc3713":"## Resources","6c932a99":"We will check if there is a relationship between salaries and Engagement Survey Scores of employees.","8ef24266":"We can use the **sns.lmplot()** command to add two regression lines, corresponding to males and females.","2ce58249":"We can use *vars* or *x_vars* and *y_vars* to select the variables to plot.","1db0d33d":"Assigning a hue variable adds a semantic mapping and changes the default marginal plot to a layered kernel density estimate (KDE).","69a87628":"![image.png](attachment:image.png)","e515e7c1":"**kde** is something we'll always provide when creating a histogram, as leaving it out will create a slightly different plot.","505e07b4":"For a real world example, we will work with Human Resources Data Set.\n\nDataset can be downloaded from here : https:\/\/www.kaggle.com\/rhuebner\/human-resources-data-set\n\nWe will read it with pandas.","580a310c":" Figure-level interface for drawing categorical plots onto a FacetGrid. This function provides access to several axes-level functions that show the relationship between a numerical and one or more categorical variables using one of several visual representations.","39347fe0":"We can add lines between each cell by using *linewidths* argument.","797afbfd":"To create a simple scatter plot, we use the **sns.scatterplot()** command.","2545a8dd":"If we set *corner=True* to plot only the lower triangle.","9cf25255":"For a real world example, we will work with Human Resources Data Set.\n\nDataset can be downloaded from here : https:\/\/www.kaggle.com\/rhuebner\/human-resources-data-set\n\nWe will read it with pandas.","15284adc":"We will plot data scientist's salaries with respect to their experiences. In order to do it, we can use **sns.lineplot()** function.","53a028ea":"We can combine bar and line plot.","b7032d7c":"For a real world example, we will work with Human Resources Data Set.\n\nDataset can be downloaded from here : https:\/\/www.kaggle.com\/rhuebner\/human-resources-data-set\n\nWe will read it with pandas.","6ba0e3c7":"As an example, let's see flights in June months.","861746f4":"We can annotate each cell with the numeric value using integer formatting. We can use *annot* argument for that.","33a82e5f":"We can make it horizontal. We will use *orient* argument for that.","8a628361":"The *plot_kws* and *diag_kws* parameters accept dicts of keyword arguments to customize the off-diagonal and diagonal plots, respectively.","53c8fa24":"We can change the colormap by using *cmap* argument.","9744a26c":"We can draw a boxplot for each numeric variable in a DataFrame.","2c6772e9":"Now we'll create plots to understand differences between Performance Scores of Employees. In order to do that, first we will divide dataset into 4 datasets by performance score.","55aad113":"Usually, we use scatter plots to highlight the relationship between two continuous variables (like \"salary\" and \"engagement survey score\"). However, we can adapt the design of the scatter plot to feature a categorical variable (like \"sex\") on one of the main axes. We'll refer to this plot type as a *categorical scatter plot*, and we build it with the **sns.swarmplot()** command.","eee07919":"The *markers* parameter applies a style mapping on the off-diagonal axes. Currently, it will be redundant with the hue variable.","1906d449":"We can use **swarmplot()** to show the datapoints on top of the boxes.","0fcc683f":"## Multi-plot Grids","0f496cf8":"A density plot is a representation of the distribution of a numeric variable. It uses a kernel density estimate to show the probability density function of the variable. It is a smoothed version of the histogram and is used in the same concept.\n\nIt is said \"Kernel Density Plot\" in general. We will use **sns.kdeplot** command for that.","e5debff2":"For a real world example, we will use **flights** dataset of Seaborn.","6c33a945":"Seaborn is a Python data visualization library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics.","edd06f85":"## Boxplot","0da22d6f":"We can plot a heatmap for data centered on 500 with a diverging colormap.","0e2f5434":"## Heatmap","595d2293":"It lets you visualize plots of every combination of various attributes together, so you can look for interesting patterns between features. We will use **sns.pairplot()** function in order to plot.","b612d3f0":"For a real world example, we will use iris dataset of Seaborn.","41e6713a":"We're not restricted to a single column when creating a KDE plot. We can create a two-dimensional (2D) KDE plot with the **sns.jointplot** command.","2120678a":"For a real world example, we will use *tips* dataset of seaborn. First we will load it.","efe18cae":"## Bar Plots","d532aca3":"## Pair Plot","cd335366":"## Scatter Plots","b8a116a3":"## Seaborn","a00c99f7":"It\u2019s possible to force marginal histograms by using *diag_kind* argument.","f18f58de":"In descriptive statistics, a box plot or boxplot is a method for graphically depicting groups of numerical data through their quartiles. Box plots may also have lines extending from the boxes (whiskers) indicating variability outside the upper and lower quartiles. We will use **sns.boxplot()** function for that.","5bacc36a":"Let's make a pivot table in order to make this dataset ready to plot heatmap. Otherwise heatmap will not work.","025649ef":"## Cat Plot","82893742":"In order to make a relational plot, we need to pass multiple variable names. We can also provide *keyword* arguments, which will be passed to the plotting function.","9f550f4b":"## Importing Library","8c08a6ad":"We can change the limits of colormap by using *vmin* and *vmax* arguments.","2ae03c04":"If we don't want a colorbar, we need to make *cbar* argument false.","8e50305f":"We can use scatter plots to display the relationships between three variables! One way of doing this is by *color-coding* the points.\n\nFor instance, to understand how gender affects the relationship between salaries and Engagement Survey Scores of employees, we can color-code the points by 'Sex', and plot the other two columns on the axes. We will use **hue** argument for that.","1a1d37c9":"In order to see the dataframe on monthly basis, we will do a pivot table by using **pivot()** function.","953d5b76":"Seaborn has several datasets inside of it. We will use flights dataset for a real world example. First we will load the data.","fc2e67ae":"The size of the individual boxplots can be altered with the *width* parameter. The default width is 1, so anything less of that creates a smaller width for the boxes.","1a8d9bda":"**Created by Berkay Alan**\n\n**Seaborn**\n\n**17 of March, 2021**\n\n**For more Tutorial: https:\/\/github.com\/berkayalan**","98c2e9e2":"For a real world example, we will use **tips** dataset of Seaborn.","81bfeaa1":"## Plotting Time Series","7af1c70c":"**Plotting Multiple Graphs in One Graph**","62ea4ff1":"## Histograms","340f18f6":"We will use **sns.heatmap()** function in order to create heatmaps.","701e66ac":"## Density Plots"}}