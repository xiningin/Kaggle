{"cell_type":{"51ce2471":"code","c6666e6b":"code","64028eef":"code","9c308e68":"markdown","6afcbff1":"markdown","0460db48":"markdown","11440def":"markdown"},"source":{"51ce2471":"import numpy as np\nimport pandas as pd\nimport folium\nfrom folium import plugins\n\ndef initMap(lat, lon):\n    location = [lat, lon]\n    Map = folium.Map(location=location, zoom_start=7)\n    return Map\n\ndef add_ee_layer(self, ee_image_object, vis_params, name):\n  map_id_dict = ee.Image(ee_image_object).getMapId(vis_params)\n  folium.raster_layers.TileLayer(\n    tiles = map_id_dict['tile_fetcher'].url_format,\n    attr = \"Map Data \u00a9 Google Earth Engine\",\n    name = name,\n    overlay = True,\n    control = True\n  ).add_to(self)\n    \nfolium.Map.add_ee_layer = add_ee_layer\n\n# Connect to Earth Engine\nimport ee\nfrom kaggle_secrets import UserSecretsClient\nfrom google.oauth2.credentials import Credentials\n\n# Trigger the authentication flow.\n#ee.Authenticate()\n\n# Retrieve your refresh token.\n#!cat ~\/.config\/earthengine\/credentials\n\nuser_secret = \"earth_engine\" # Your user secret, defined in the add-on menu of the notebook editor\nrefresh_token = UserSecretsClient().get_secret(user_secret)\ncredentials = Credentials(\n        None,\n        refresh_token=refresh_token,\n        token_uri=ee.oauth.TOKEN_URI,\n        client_id=ee.oauth.CLIENT_ID,\n        client_secret=ee.oauth.CLIENT_SECRET,\n        scopes=ee.oauth.SCOPES)\n\n# Initialize GEE\nee.Initialize(credentials=credentials)","c6666e6b":"## Use this cell to define the collection to see\n\nstartdate = '2019-03-01'\nfinishdate = '2019-03-14'\n\n#Sentinel-5P OFFL NO2: Offline Nitrogen Dioxide\nee_s5p_no2 = (ee.ImageCollection('COPERNICUS\/S5P\/OFFL\/L3_NO2')\n              .select('NO2_column_number_density')\n              .filterDate(startdate, finishdate)\n             )\nband_viz_s5p_no2 = {\n    'min': 0,\n    'max': 0.0002,\n    'palette': ['black', 'blue', 'purple', 'cyan', 'green', 'yellow', 'red']}\n\nlat = 45.778032; lon = 9.083923\nMap = initMap(lat = lat, lon = lon)\nMap.add_ee_layer(ee_s5p_no2.mean(), band_viz_s5p_no2, 'S5P_NO2')\nMap.add_child(folium.LayerControl())\nMap","64028eef":"## Use this cell to define the collection to see\n\nstartdate = '2020-03-01'\nfinishdate = '2020-03-14'\n\n#Sentinel-5P OFFL NO2: Offline Nitrogen Dioxide\nee_s5p_no2 = (ee.ImageCollection('COPERNICUS\/S5P\/OFFL\/L3_NO2')\n              .select('NO2_column_number_density')\n              .filterDate(startdate, finishdate)\n             )\nband_viz_s5p_no2 = {\n    'min': 0,\n    'max': 0.0002,\n    'palette': ['black', 'blue', 'purple', 'cyan', 'green', 'yellow', 'red']}\n\nlat = 45.778032; lon = 9.083923\nMap = initMap(lat = lat, lon = lon)\nMap.add_ee_layer(ee_s5p_no2.mean(), band_viz_s5p_no2, 'S5P_NO2')\nMap.add_child(folium.LayerControl())\nMap","9c308e68":"*Step 2: Plot NO2 emissions from the first two weeks of March 2019*","6afcbff1":"*Step 1: Import Python Modules and Connect to the Earth Engine API*","0460db48":"# NO2 emissions in Italy before \/ after Coronavirus (COVID-19)\n* Replicating the analysis from https:\/\/www.earthobservatory.nasa.gov\/images\/146362\/airborne-nitrogen-dioxide-plummets-over-china\n* Using code that was adapted from https:\/\/www.kaggle.com\/gpoulain\/eda-ef-with-n2o-time-series-earth-engine\n* Using data from the Earth Engine API.  See [tutorial notebook](https:\/\/www.kaggle.com\/paultimothymooney\/how-to-get-started-with-the-earth-engine-data) for more detail.  Note that these plots remain for only 48 hours after the most recent commit due to the limited duration of the secret refresh token.\n\n\n> Motor vehicles are one of the primary sources of NO2 emissions.  \n> NO2 emissions disperse rapidly after they are created.  \n> During the coronavirus pandemic there was a reduction in NO2 emissions in Italy.","11440def":"*Step 3: Plot NO2 emissions from the first two weeks of March 2020*"}}