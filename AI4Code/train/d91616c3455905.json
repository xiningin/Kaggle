{"cell_type":{"70ece477":"code","0b6ec804":"code","ed2f1f0f":"code","d1bff87c":"code","18268f09":"code","cdc05082":"code","e1d39d52":"code","e8dba5a3":"code","1ad95ec8":"code","312e14c4":"code","e18a4405":"code","c86abeda":"code","17420a14":"code","2e2c8be1":"code","6c5e1a6a":"code","1130b9d6":"code","97262579":"code","04038042":"code","bc37d0db":"code","10c424cb":"code","15c741f1":"markdown","bd6f2bde":"markdown","d723a50d":"markdown","a87196e1":"markdown","37fb30fa":"markdown","2dfa712f":"markdown","c6773c99":"markdown","5e78b897":"markdown","0d6b0b55":"markdown","4f411a8e":"markdown","1e06057e":"markdown","50762440":"markdown","18ad09d4":"markdown","564c5aba":"markdown","8979ffba":"markdown","f19994fc":"markdown","5d2bfbf2":"markdown","43549aef":"markdown","bf29ee24":"markdown","22c7299d":"markdown","1659b7dd":"markdown","4266736e":"markdown"},"source":{"70ece477":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0b6ec804":"# Importing all the libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfrom sklearn import metrics\nsns.set()","ed2f1f0f":"iris_data = pd.read_csv(\"..\/input\/iris\/Iris.csv\")\nprint(iris_data.head())\nprint(iris_data.shape)","d1bff87c":"iris_data.info()","18268f09":"iris_data.describe()","cdc05082":"iris_data.drop(\"Id\", axis=1, inplace=True)\niris_data.head()","e1d39d52":"iris_data[iris_data.duplicated()]","e8dba5a3":"# Checking the balance\niris_data.Species.value_counts()","1ad95ec8":"iris_data.drop_duplicates(inplace=True)","312e14c4":"iris_data.Species.value_counts()","e18a4405":"plt.title(\"Species Count\")\nsns.countplot(iris_data[\"Species\"])","c86abeda":"iris_data.columns","17420a14":"# Compare Sepal Length and Sepal Width\nplt.figure(figsize=(20,10))\nsns.scatterplot(iris_data[\"SepalLengthCm\"], iris_data[\"SepalWidthCm\"], hue=iris_data[\"Species\"], s=60)","2e2c8be1":"plt.figure(figsize=(16,9))\nplt.title('Comparison between various species based on petal length and width')\nsns.scatterplot(iris_data[\"PetalLengthCm\"], iris_data[\"PetalWidthCm\"], hue = iris_data[\"Species\"], s= 60)","6c5e1a6a":"sns.pairplot(iris_data, hue=\"Species\", height=5)","1130b9d6":"# Checking For Correlation\nplt.figure(figsize=(10,10))\nsns.heatmap(iris_data.corr(), annot=True)\nplt.plot()","97262579":"iris_data.groupby(\"Species\").agg([\"mean\",\"median\"])","04038042":"fig, axes = plt.subplots(2, 2, figsize=(16,9))\nsns.boxplot(x=\"Species\", y=\"PetalWidthCm\", data=iris_data, orient=\"v\", ax=axes[0,0])\nsns.boxplot(x=\"Species\", y=\"PetalLengthCm\", data=iris_data, orient=\"v\", ax=axes[0,1])\nsns.boxplot(x=\"Species\", y=\"SepalLengthCm\", data=iris_data, orient=\"v\", ax=axes[1,0])\nsns.boxplot(x=\"Species\", y=\"SepalWidthCm\", data=iris_data, orient=\"v\", ax=axes[1,1])\nplt.show()","bc37d0db":"fig, axes = plt.subplots(2, 2, figsize=(16,9))\nsns.violinplot(x=\"Species\", y=\"PetalWidthCm\", data=iris_data, orient=\"v\", ax=axes[0,0], inner=\"quartile\")\nsns.violinplot(x=\"Species\", y=\"PetalLengthCm\", data=iris_data, orient=\"v\", ax=axes[0,1], inner=\"quartile\")\nsns.violinplot(x=\"Species\", y=\"SepalLengthCm\", data=iris_data, orient=\"v\", ax=axes[1,0], inner=\"quartile\")\nsns.violinplot(x=\"Species\", y=\"SepalWidthCm\", data=iris_data, orient=\"v\", ax=axes[1,1], inner=\"quartile\")\nplt.show()","10c424cb":"sns.FacetGrid(iris_data, hue=\"Species\", height=5).map(sns.distplot, \"SepalLengthCm\").add_legend()\n\nsns.FacetGrid(iris_data, hue=\"Species\", height=5).map(sns.distplot, \"SepalWidthCm\").add_legend()\n\nsns.FacetGrid(iris_data, hue=\"Species\", height=5).map(sns.distplot, \"PetalLengthCm\").add_legend()\n\nsns.FacetGrid(iris_data, hue=\"Species\", height=5).map(sns.distplot, \"PetalWidthCm\").add_legend()\n\nplt.show()","15c741f1":"There are 3 duplicates, therefore we must check whether each species data set is balanced in no's or no","bd6f2bde":"## Bi-variate Analysis","d723a50d":"Inference From 3rd FacetGrid Plot\n1. The pdf curve of Iris Setosa ends roughly at 2.1\n2. If petal length < 2.1, then species is Iris Setosa\n3. The point of intersection between pdf curves of Versicolor and Virginica is roughly at 4.8\n4. If petal length > 2.1 and petal length < 4.8 then species is Iris Versicolor\n5. If petal length > 4.8 then species is Iris Virginica","a87196e1":"Inference:\n1. Plot 1 shows that there is a significant amount of overlap between the species on sepal length, so it is not an effective Classification feature\n2. Plot 2 shows that there is even higher overlap between the species on sepal width, so it is not an effective Classification feature\n3. Plot 3 shows that petal length is a good Classification feature as it clearly separates the species . The overlap is extremely less (between Versicolor and Virginica) , Setosa is well separated from the rest two\n4. Just like Plot 3, Plot 4 also shows that petal width is a good Classification feature . The overlap is significantly less (between Versicolor and Virginica) , Setosa is well separated from the rest two","37fb30fa":"Result:\n1. All columns are not having any Null Entries (Non-null)\n\n2. Four columns are numerical type (float64 bit)\n\n3. Only Single column categorical type (Object)","2dfa712f":"# TASK: To Perform Exploratory Data Analysis On Iris Dataset","c6773c99":"Inference: \n1. This further visualizes that species are well balanced\n2. Each species ( Iris virginica, setosa, versicolor) has 50 as it\u2019s count","5e78b897":"Result: Mean, Standard Deviation, Min and Max Values","0d6b0b55":"Inference: \n1. Setosa species have the smallest petal length as well as petal width\n2. Versicolor species have average petal length and petal width\n3. Virginica species have the highest petal length as well as petal width","4f411a8e":"## Violin Plot for checking distribution","1e06057e":"Inference:\n1. Setosa is having less distribution and density in case of petal length & width\n2. Versicolor is distributed in a average manner and average features in case of petal length & width\n3. Virginica is highly distributed with large no .of values and features in case of sepal length & width\n4. High density values are depicting the mean\/median values, for example: Iris Setosa has highest density at 5.0 cm ( sepal length feature) which is also the median value(5.0) as per the table","50762440":"Inference:\n1. Sepal Length and Sepal Width features are slightly correlated with each other","18ad09d4":"## Checking Mean & Median Values for each species\n","564c5aba":"Inference:\n1. High co relation between petal length and width columns.\n2. Setosa has both low petal length and width\n3. Versicolor has both average petal length and width\n4. Virginica has both high petal length and width.\n5. Sepal width for setosa is high and length is low.\n6. Versicolor have average values for for sepal dimensions.\n7. Virginica has small width but large sepal length","8979ffba":"Inference\n1. Setosa is having smaller feature and less distributed\n2. Versicolor is distributed in a average manner and average features\n3. Virginica is highly distributed with large no .of values and features\n4. Clearly the mean\/ median values are being shown by each plots for various features(sepal length & width, petal length & width)","f19994fc":"Inference:\n1. Iris Setosa species has smaller sepal length but higher width.\n2. Versicolor lies in almost middle for length as well as width\n3. Virginica has larger sepal lengths and smaller sepal widths","5d2bfbf2":"## Plotting the Histogram & Probability Density Function (PDF)","43549aef":"## ***`Uni-variate Analysis`***","bf29ee24":"## Box plots to know about distribution","22c7299d":"### SHOW THE DUPLICATED DATA","1659b7dd":"plotting the probability density function(PDF) with each feature as a variable on X-axis and it\u2019s histogram and corresponding kernel density plot on Y-axis.","4266736e":"We Should drop the extra columns by using drop_duplicated method"}}