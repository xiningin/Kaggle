{"cell_type":{"1f8331bd":"code","c2a64fc8":"code","14c19ec9":"code","c649f1b5":"code","6b188fca":"code","372e8bae":"code","1cc5e882":"code","18576f02":"code","c393e3b8":"code","f5553d50":"code","911d1960":"code","737067d7":"code","e4d52b56":"code","67e35dca":"code","49378b18":"code","916f733b":"code","d38cbf75":"code","f4eae8e0":"code","8a490db8":"markdown","569d5eaa":"markdown"},"source":{"1f8331bd":"import pandas as pd\n!pip install wikipedia\nimport wikipedia as wp\nimport matplotlib.pyplot as plt\nimport numpy as np","c2a64fc8":"df_olympics = pd.read_csv(\"..\/input\/olympic-games-2021-medals\/Tokyo 2021 dataset.csv\")\n\ndf_olympics.describe()","14c19ec9":"# Getting html for IOC Country codes table from https:\/\/en.wikipedia.org\/wiki\/List_of_IOC_country_codes\nhtml_noc_codes = wp.page('List_of_IOC_country_codes').html()\n\n# Getting html for population table from https:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_population_(United_Nations)\nhtml_population = wp.page('List_of_countries_by_population_(United_Nations)').html()","c649f1b5":"try:\n    # From html table to dataframe\n    df_noc_codes = pd.read_html(html_noc_codes)[0]\nexcept IndexError:\n    print('Tables not found')\n\n# Clean unnecessary data\ndf_noc_codes.drop([0], axis = 0, inplace = True)\ndf_noc_codes.drop(df_noc_codes.columns[[2, 3]], axis = 'columns', inplace = True)\ndf_noc_codes.columns = ['NOCCode', 'Country']\n\ndf_noc_codes.tail()","6b188fca":"try:\n    # From html table to dataframe\n    df_population = pd.read_html(html_population)[0]\nexcept IndexError:\n    print('Tables not found')\n\n# Clean unnecessary data\n# Remove references after the country name from strings like \"China[a]\"\ndf_population.iloc[:, 0].replace('\\[.?\\]', '', regex = True, inplace = True)\ndf_population.drop(df_population.columns[[1, 2, 3, 5]], axis = 'columns', inplace = True)\ndf_population.columns = ['Country', 'Population']\n\ndf_population.tail()","372e8bae":"# To original data left joining the NOC codes dataframe\ndf_olympics = df_olympics.merge(df_noc_codes, how = 'left', left_on = 'NOCCode', right_on = 'NOCCode')\n\ndf_olympics.columns","1cc5e882":"# Also left joining the population by country dataframe\ndf_olympics = df_olympics.merge(df_population, how = 'left', left_on = 'Country', right_on = 'Country')\n\ndf_olympics.columns","18576f02":"# Indices of rows with missing population values\nidx = list(df_olympics.index[df_olympics['Population'].isnull()])","c393e3b8":"# Manually enter values for rows with none-found Population NaN (NOCCode -> Population)\ndict_pop_replace = {\n    'GBR' : 67530172,\n    'ROC' : 145872256,\n    'TPE' : 23568378,\n    'KOS' : 1935259,\n    'HKG' : 7436154,\n    'BER' : 62506,\n    'PUR' : 2933408\n}\n\npop_replace_list = list(dict_pop_replace.values())","f5553d50":"for i, ind in enumerate(idx):\n    df_olympics.iloc[ind, 9] = pop_replace_list[i]\n\nprint(df_olympics.iloc[idx, :])","911d1960":"# NOTE. Instead of density it's more representative to work with the inverse value: population per medal.\n# Adding column with population of country divided by number of medals\ndf_olympics['Pop_per_medal'] = df_olympics['Population'] \/ df_olympics['Total']","737067d7":"# Adding column with population of country divided by number of GOLD medals\ndf_olympics['Pop_per_gold_medal'] = df_olympics['Population'] \/ df_olympics['Gold Medal']","e4d52b56":"df_olympics.sort_values('Pop_per_medal').head()","67e35dca":"df_olympics.sort_values('Pop_per_medal').tail(10)","49378b18":"df_olympics.sort_values('Pop_per_gold_medal').head(10)","916f733b":"# Filtering inf values for countries without gold medals\ndf_olympics.replace(np.inf, np.nan).dropna().sort_values('Pop_per_gold_medal').tail(10)","d38cbf75":"pop_by_medal = df_olympics.sort_values('Pop_per_medal').iloc[:, [1, -2]]\nplt.figure(figsize=(20,10))\nplt.bar(pop_by_medal.iloc[:, 0], pop_by_medal.iloc[:, 1], log = True)\nplt.xticks(rotation='vertical')\nplt.xlabel('Country')\nplt.ylabel('Population Per Medal')\nplt.title('Population Per Medal by Countries. 2021 Tokyo Olympics')\nplt.show()","f4eae8e0":"pop_by_gold_medal = df_olympics.sort_values('Pop_per_gold_medal').iloc[:, [1, -1]]\npop_by_gold_medal = pop_by_gold_medal[~pop_by_gold_medal.iloc[:, 1].isin([np.inf, -np.inf])]\nplt.figure(figsize=(20,10))\nplt.bar(pop_by_gold_medal.iloc[:, 0], pop_by_gold_medal.iloc[:, 1], log = True)\nplt.xticks(rotation='vertical')\nplt.xlabel('Country')\nplt.ylabel('Population Per Gold Medal')\nplt.title('Population Per Gold Medal by Countries. 2021 Tokyo Olympics')\nplt.show()","8a490db8":"**What countries have the highest density of Olympic medals per population at 2021 Tokyo Olympics?**\n\nThis small calculation will cheer up small countries! ;)\n<br>And the medal table will favor them and look completely different!","569d5eaa":"And the winners with the maximum Olympic spirit per population by gold and total medals are:\n<br>\n**<big>Bermuda<\/big>**\n<br>and\n<br>**<big>San Marino<\/big>**!\n<br><big>Congratulations!<\/big>"}}