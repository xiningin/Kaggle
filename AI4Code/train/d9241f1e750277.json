{"cell_type":{"0843c986":"code","17d67e42":"code","e6b368ac":"code","8ca9576c":"code","f6ba20b6":"code","4a559a12":"code","07220ec3":"code","32c207a3":"code","79127680":"code","9afdc29c":"markdown","dcf166de":"markdown","5f7b71ea":"markdown","83d56188":"markdown","e20ae3e8":"markdown","475d307e":"markdown","14e7a533":"markdown","a2290d22":"markdown"},"source":{"0843c986":"import matplotlib.pyplot as plt\nimport numpy as np\n\n%matplotlib inline","17d67e42":"def f(x):\n    return x**4-(4*x**2)+5","e6b368ac":"x = np.linspace(start=-3, stop=3, num=500) #returns evenly spaced numbers over specified interval\n#print(x)","8ca9576c":"plt.xlim([-3,3])\nplt.ylim([0,8])\nplt.xlabel('x', fontsize=18,color='red')\nplt.ylabel('f(x)',fontsize=18,color='red')\nplt.plot(x,f(x));","f6ba20b6":"def df(x):\n    return 4*x**3-8*x","4a559a12":"plt.figure(figsize=[15, 5])\n\n#Graph for the function\nplt.subplot(1,2,1)\nplt.xlim([-2,2])\nplt.ylim([0.5,5.5])\nplt.title('Function')\nplt.xlabel('x', fontsize=18,color='red')\nplt.ylabel('f(x)',fontsize=18,color='red')\nplt.style.use('ggplot')\nfont = {'family' : 'normal',\n        'weight' : 'bold',\n        'size'   : 22}                          \nplt.rc('font', **font);\nplt.plot(x,f(x));\n\n#Graph for the slope\nplt.subplot(1,2,2)\nplt.title('Derivative of the function')\nplt.xlabel('x', fontsize=18,color='red')\nplt.ylabel('df(x)',fontsize=18,color='red')\nplt.xlim([-2,2])\nplt.ylim([-6,8])\nplt.style.use('ggplot')\nfont = {'family' : 'normal',\n        'weight' : 'bold',\n        'size'   : 22}                          \nplt.rc('font', **font);\nplt.plot(x,df(x),color='red');\n\n","07220ec3":"def gradient_descent(derivate_func,o_start,learningrate, precision,rangevalue):\n\n    start = o_start\n    runcount =0\n\n\n    x_list = [start]\n    y_list = [derivate_func(start)]\n\n    #stop the loop once we reach limit\n    for i in range(rangevalue):\n        previous  = start \n        #calculate the error (if the slope is very high which means it is very far from zero)\n        gradient = derivate_func(previous)\n        #print('slope at the point ' +str(previous)+' is '+ str(gradient))\n        start = previous - learningrate*gradient\n\n        step_size = abs(start-previous)\n        x_list.append(start)\n        y_list.append(derivate_func(start))\n        print(step_size)\n        runcount = runcount+1\n        if(step_size<precision):break\n            \n    return start, x_list, y_list\n    \n\n \n    \n","32c207a3":"local_min,list_x,list_y = gradient_descent(df,-2,0.02,0.001,1000)\nprint('local minimum at ', local_min)\nprint('number of steps ',len(list_x))","79127680":"plt.figure(figsize=[15, 5])\n\n#Graph for the function\nplt.subplot(1,2,1)\nplt.xlim([-3,3])\nplt.ylim([0,8])\nplt.title('Function')\nplt.xlabel('x', fontsize=18,color='red')\nplt.ylabel('f(x)',fontsize=18,color='red')\nplt.style.use('ggplot')\nfont = {'family' : 'normal',\n        'weight' : 'bold',\n        'size'   : 22}                          \nplt.rc('font', **font);\nplt.plot(x,f(x),alpha=0.8);\n\n#Just the below two lines added to superimpose the scatter plot on the existing image\nvalues = np.array(list_x)\nplt.scatter(list_x, f(values), color='green', s=100, alpha=0.6) #scatter plot the previous results\n\n#Graph for the slope\nplt.subplot(1,2,2)\nplt.title('Derivative of the function')\nplt.xlabel('x', fontsize=18,color='red')\nplt.ylabel('df(x)',fontsize=18,color='red')\nplt.xlim([-2,3])\nplt.ylim([-7,6])\nplt.style.use('ggplot')\nfont = {'family' : 'normal',\n        'weight' : 'bold',\n        'size'   : 22}                          \nplt.rc('font', **font);\nplt.plot(x,df(x),color='red');\nplt.scatter(list_x, list_y,color='blue',s=100,alpha=0.6);\n\n","9afdc29c":"The derivate of the function $f(x) = x^4 - 4x^2 +5$ is\n  $f(x)=4x^3- 8x$ , so creating a python function for that","dcf166de":"\n#### Observation:\nwe can see that, when we provide initial guess to -2, the gradient descent approaces\n to the first slope =0 but when the intial guess is changed to zero, the gradient descent approaches\n to the next slope = 0, so the initial guess influences which minima it might be landing.\n \n ****","5f7b71ea":"#### We can find here we have two minimum points, and there is a possibility that a line can intersect three points in the derivate slope (graph 2)","83d56188":"# Finding the lowest steep","e20ae3e8":"#### Superimpose the previous outputs on the graph","475d307e":"### Idea : The point where the slop stops to change when we descend from the right side of the parabola","14e7a533":"# Understanding Local Minimum","a2290d22":"\n\n## $f(x) = x^4 - 4x^2 +5$"}}