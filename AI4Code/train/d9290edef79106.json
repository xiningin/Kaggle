{"cell_type":{"907cb69c":"code","b0bfbc16":"code","341df30b":"code","b10840aa":"code","68e8075c":"code","119c4be6":"code","9445258f":"code","28e1e0d8":"code","c53133a6":"code","bb2b1667":"code","79ff2a5c":"code","4400c69d":"code","0f0c9bb9":"code","5e67e723":"code","db5a30e1":"code","d5a23ce6":"code","4ee104ab":"code","717c55be":"code","67b1dd59":"code","41d566b6":"code","9b194df6":"code","ac69f168":"code","0e6f3c15":"code","c04de15e":"code","d313af66":"code","76ebdb2e":"code","aada3181":"code","380c5327":"code","1f7478ad":"code","816f8cde":"code","7b5ad22a":"code","64cfb8db":"code","f7ec85be":"code","e1957682":"markdown"},"source":{"907cb69c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b0bfbc16":"train=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntrain","341df30b":"test=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')\ntest","b10840aa":"train['SalePrice'].describe()","68e8075c":"print(\"Skewness of the Saleprice target variable is: %f\" %train['SalePrice'].skew())\nprint(\"Kurtosis of the Saleprice target variable is: %f\" %train['SalePrice'].kurt())\n","119c4be6":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nplt.style.use(style=\"ggplot\")\nplt.rcParams['figure.figsize']=(10,6)","9445258f":"plt.hist(train['SalePrice'],color='blue')\nplt.show()\nsns.distplot(train['SalePrice'],color='blue')","28e1e0d8":"target=np.log(train['SalePrice'])\nprint(\"Skewness of the Saleprice target variable is: %f\" %target.skew())\nplt.hist(target,color=\"blue\")\nplt.show()","c53133a6":"numeric_features=train.select_dtypes(include=[np.number])\nprint(numeric_features.dtypes)\nprint(len(numeric_features.dtypes))","bb2b1667":"corr=numeric_features.corr()\nprint(corr['SalePrice'].sort_values(ascending=False)[0:38],'\\n')\nprint(corr['SalePrice'].sort_values(ascending=False)[-5:0],'\\n')","79ff2a5c":"train['OverallQual'].dtype","4400c69d":"train['OverallQual'].unique()","0f0c9bb9":"quality_pivot=train.pivot_table(index='OverallQual',values='SalePrice',aggfunc=np.median)\nquality_pivot","5e67e723":"quality_pivot.plot(kind='bar',color='blue')\nplt.xlabel('Index:Overall Quality')\nplt.ylabel('Median')\nplt.show()","db5a30e1":"plt.scatter(train['GrLivArea'],target)\nplt.xlabel('Ground Living Area(in sqaure feet)')\nplt.ylabel('Log Transformed SalePrice')\nplt.show()\nplt.scatter(train['GarageArea'],target)\nplt.xlabel('Garage Area')\nplt.ylabel('Log Transformed SalePrice')\nplt.show()","d5a23ce6":"train=train[train['GarageArea']<1200]\nplt.scatter(train['GarageArea'],np.log(train['SalePrice']))\nplt.xlim(-200,1600)\nplt.xlabel('Garage area')\nplt.ylabel('Sale price')\nplt.show()\nprint(train['GarageArea'].shape)\nprint(np.log(train['SalePrice']).shape)","4ee104ab":"nulls=pd.DataFrame(train.isnull().sum().sort_values(ascending=False)[0:30])\nnulls.columns=['Null count']\nnulls.index.name='Features'\nnulls","717c55be":"objects=train.select_dtypes(exclude=[np.number])\nobjects.columns","67b1dd59":"print(train['Street'].value_counts())\ntrain['encode_street']=pd.get_dummies(train['Street'],drop_first=True)\ntest['encode_street']=pd.get_dummies(test['Street'],drop_first=True)\nprint(train['encode_street'].value_counts())","41d566b6":"def encode(x):\n    return 1 if x=='Partial' else 0\ntrain['encode_salecondition']=train['SaleCondition'].apply(encode)\ntest['encode_salecondition']=test['SaleCondition'].apply(encode)","9b194df6":"sale_cond_pivot=train.pivot_table(index='encode_salecondition',values='SalePrice',aggfunc=np.median)\nsale_cond_pivot.plot(kind='bar',color='blue')","ac69f168":"data=train.select_dtypes(include=[np.number]).interpolate().dropna()","0e6f3c15":"sum(data.isnull().sum()!=0)","c04de15e":"y=np.log(data['SalePrice'])\nX=data.drop(['Id','SalePrice'],axis=1)\n","d313af66":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.33,random_state=42)","76ebdb2e":"from sklearn.linear_model import LinearRegression\nlr=LinearRegression()\nlr.fit(X_train,y_train)","aada3181":"print(lr.score(X_test,y_test))","380c5327":"predictions=lr.predict(X_test)\npredictions","1f7478ad":"test_data=test.select_dtypes(include=[np.number]).drop(['Id'],axis=1).interpolate()","816f8cde":"pred=lr.predict(test_data)\npred","7b5ad22a":"final_predictions=np.exp(pred)\nfinal_predictions","64cfb8db":"output=pd.DataFrame({'Id':test['Id'],'SalePrice':final_predictions})\noutput.to_csv(\"submission.csv\",index=False)","f7ec85be":"output.head(10)","e1957682":"## House Regression Analysis using Simple Linear Regression"}}