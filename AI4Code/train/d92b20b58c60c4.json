{"cell_type":{"c62ea120":"code","ebbab803":"code","641780ae":"code","edb1b506":"code","2a605d9c":"code","af288390":"code","109b6bae":"code","45a8fc83":"code","6f2ff0e7":"code","5afa192d":"code","3c78e321":"code","cca16c74":"code","6077c12b":"code","86f18d27":"code","af77c16c":"markdown","22ac5195":"markdown","8b8693d7":"markdown","4b91dd8a":"markdown","30ef605d":"markdown","141453b8":"markdown","df57513b":"markdown","f93e8a79":"markdown"},"source":{"c62ea120":"import matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport numpy as np\nimport pandas as pd \nfrom matplotlib.ticker import ScalarFormatter\nfrom matplotlib.ticker import FuncFormatter\nfrom textwrap import wrap\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n### Read in required data\ndf=pd.read_csv('\/kaggle\/input\/world-development-indicators\/WDIData_T.csv')\nsupdata=pd.read_csv('\/kaggle\/input\/world-development-indicators\/WDI_csv\/WDICountry.csv')\n\n### Remove agrregated data\nc_exclude='|'.join(supdata[supdata['Currency Unit'].isna()]['Country Code'].unique().tolist())\ndata = df[~df['CountryCode'].str.contains(c_exclude)]","ebbab803":"# Setup Masks For Slicing Data\nco2_indicator = 'CO2 emissions \\(metric'\nco2kt_indicator = 'CO2 emissions \\(kt'\ntotGHG_indicator = 'Total greenhouse gas emissions \\(kt of CO2'\nhist_country = 'USA|GBR|FRA|CHN|JPN|DEU|IND|ITA|BRA|CAN'\ntotFuel='CO2 emissions from gaseous fuel consumption|CO2 emissions from liquid fuel consumption|CO2 emissions from solid fuel consumption'\n\nmask1 = data['IndicatorName'].str.contains(co2_indicator)\nmask1kt = data['IndicatorName'].str.contains(co2kt_indicator)\nmask1GHG = data['IndicatorName'].str.contains(totGHG_indicator)\nmask2 = data['CountryCode'].str.contains(hist_country)\nmask3 = data['Year'] == 1960\nmask4 = data['Year'] == 1970\nmask5 = data['Year'] == 2006\nmask6 = data['Year'] == 2011\nmask7 = data['Year'] == 2016\nmask1Fuel = data['IndicatorName'].str.contains(totFuel)\n\n# Create masks for top ten countries (GDP)\nhist_indicator = 'CO2 emissions \\(metric'\nmask1 = data['IndicatorName'].str.contains(hist_indicator) \nco2_stage = data[mask1]\nco2_stage.head()\n\n# These are the \"Tableau 20\" colors as RGB.    \ntableau20 = [(31, 119, 180), (174, 199, 232), (255, 127, 14), (255, 187, 120),    \n             (44, 160, 44), (152, 223, 138), (214, 39, 40), (255, 152, 150),    \n             (148, 103, 189), (197, 176, 213), (140, 86, 75), (196, 156, 148),    \n             (227, 119, 194), (247, 182, 210), (127, 127, 127), (199, 199, 199)] \n  \n# Scale the RGB values to the [0, 1] range, which is the format matplotlib accepts.    \nfor i in range(len(tableau20)):    \n    r, g, b = tableau20[i]    \n    tableau20[i] = (r \/ 255., g \/ 255., b \/ 255.) \n\n# plot functions\ndef thousands(x, pos):\n    'The two args are the value and tick position'\n    return '%1.1fK' % (x * 1e-4)\n\nformatterK = FuncFormatter(thousands)\n\ndef lineplot(data,countrylist,HorizPlots,PlotNo,Xmin,Xmax,Ymin,Ymax,Type):\n    plt_vals=[]\n    ax=plt.subplot(1, HorizPlots, PlotNo)\n    ax.spines[\"top\"].set_visible(False)\n    ax.spines[\"bottom\"].set_visible(False)\n    ax.spines[\"right\"].set_visible(False)\n    ax.get_yaxis().tick_left()\n    if Type == 0:\n        ax.spines[\"left\"].set_visible(False)\n        for y in range(5, 30, 5):\n            plt.plot(range(1959, 2021), [y] * len(range(1959, 2021)), \"--\", lw=1.0, color=\"black\", alpha=0.3)\n        for i, col in enumerate(countrylist):\n            plt_vals = data.loc[data['CountryCode'] == col]\n            ax.plot(plt_vals['Year'].values, plt_vals['Value'].values, linewidth=1.5, color=tableau20[i])\n            y_pos = plt_vals['Value'].values[-1] -0.3\n            if plt_vals['CountryCode'].iloc[0] == 'USA':\n                y_pos +=0.3\n            elif plt_vals['CountryCode'].iloc[0] == 'JPN':\n                y_pos +=0.3\n            elif plt_vals['CountryCode'].iloc[0] == 'DEU':\n                y_pos -=0.3\n            elif plt_vals['CountryCode'].iloc[0] == 'BRA':\n                y_pos +=0.3\n            elif plt_vals['CountryCode'].iloc[0] == 'GBR':\n                y_pos +=0.3\n            plt.text(2016.5, y_pos, plt_vals['CountryName'].iloc[0], fontsize=12, color=tableau20[i])\n        plt.title('CO2 Emissions (metric tons per capita)')\n    \n    if Type == 1:\n        ax.set_xticks(ticks=[2006,2011,2016])\n        ax.set_ylabel(data['IndicatorName'].iloc[0],fontsize=12)\n        \n        for i, col in enumerate(countrylist):\n            plt_vals = data.loc[data['CountryCode'] == col]\n            ax.plot(plt_vals['Year'].values, plt_vals['Value'].values, linewidth=1.5, color=tableau20[-1-i], marker ='o')\n            y_pos = plt_vals['Value'].values[-1] -0.3\n            x_pos = 2016.5\n            if plt_vals['CountryCode'].iloc[0] == 'SAU':\n                y_pos -=2.0\n            elif plt_vals['CountryCode'].iloc[0] == 'TTO':\n                y_pos -=1.0\n            elif plt_vals['CountryCode'].iloc[0] == 'BHR':\n                y_pos -=1.0\n            elif plt_vals['CountryCode'].iloc[0] == 'ARE':\n                y_pos +=1.0\n            elif plt_vals['CountryCode'].iloc[0] == 'BRN':\n                y_pos -=1.0\n            elif plt_vals['CountryCode'].iloc[0] == 'GIB':\n                x_pos +=4.5\n                y_pos +=0.3\n            plt.text(x_pos, y_pos, plt_vals['CountryName'].iloc[0], fontsize=12)\n    \n    if Type == 2:\n        ax.set_yscale('log')\n        ax.set_yticks(ticks=[1e3,1e5,1e7])\n        ax.set_xticks(ticks=[2006,2011,2016])\n        ax.set_ylabel(data['IndicatorName'].iloc[0],fontsize=12)\n        ax.yaxis.set_major_formatter(formatterK)\n        \n        for i, col in enumerate(countrylist):\n            plt_vals = data.loc[data['CountryCode'] == col]\n            ax.plot(plt_vals['Year'].values, plt_vals['Value'].values, lw=1.5, marker='o', c=tableau20[i])\n            y_pos = plt_vals['Value'].values[-1]\n            if plt_vals['CountryCode'].iloc[0] == 'IDN':\n                y_pos *=0.78\n            elif plt_vals['CountryCode'].iloc[0] == 'SAU':\n                y_pos *=0.90\n            elif plt_vals['CountryCode'].iloc[0] == 'KOR':\n                y_pos *=0.93\n            elif plt_vals['CountryCode'].iloc[0] == 'DEU':\n                y_pos *=1.05\n            plt.text(2016.5, y_pos, plt_vals['CountryName'].iloc[0], fontsize=12)\n    \n    plt.xticks(fontsize=12)\n    plt.yticks(fontsize=12)\n    plt.axis([Xmin,Xmax,Ymin,Ymax])\n    \ndef scatterplot(data1,data2,countrylist1,countrylist2,HorizPlots,PlotNo,Xmin,Xmax,Ymin,Ymax,Type):\n    i=0\n    X = data1['Value']\n    Y = data2['Value']\n    X2 = data1['Value'][data1['CountryCode'].str.contains(countrylist1)]\n    Y2 = data2['Value'][data2['CountryCode'].str.contains(countrylist1)]\n    if Type == 1:\n        X3 = data1['Value'][data1['CountryCode'].str.contains(countrylist2)]\n        Y3 = data2['Value'][data2['CountryCode'].str.contains(countrylist2)]\n    a = [i for i in range(0, int(Xmax))]\n    ax = plt.subplot(1,HorizPlots,PlotNo) \n    if Type == 0:\n        ax.scatter(X, Y, color=tableau20[1], edgecolor='black', s=70, marker='^')\n        ax.scatter(X2, Y2, color=tableau20[-3], edgecolor='black', s=150)\n    elif Type == 1:\n        ax.scatter(X, Y, color=tableau20[1], edgecolor='black', s=70, marker='^')\n        ax.scatter(X2, Y2, color=tableau20[-3], edgecolor='black', s=150)\n        ax.scatter(X3, Y3, color=tableau20[-11], edgecolor='black', s=150)\n    ax.plot(a, color='black', lw=0.5)\n    ax.spines[\"top\"].set_visible(False)    \n    ax.spines[\"right\"].set_visible(False)\n    ax.set_xscale('log')\n    ax.set_yscale('log')\n    ax.tick_params(axis='both', which='minor', bottom=False, left=False)\n    ax.set_xlabel(str(data1['Year'].iloc[0])+' '+data1['IndicatorName'].iloc[0],fontsize=12)\n    ax.set_ylabel('2016 '+data2['IndicatorName'].iloc[0],fontsize=12)\n    if Type == 0:\n        for axis in [ax.xaxis, ax.yaxis]:\n            axis.set_major_formatter(ScalarFormatter())\n    elif Type == 1:\n        ax.set_xticks(ticks=[1e3,1e5,1e7])\n        ax.set_yticks(ticks=[1e3,1e5,1e7])\n        for axis in [ax.xaxis, ax.yaxis]:\n            axis.set_major_formatter(formatterK)\n    \n    plt.xticks(fontsize=12)\n    plt.yticks(fontsize=12)\n    plt.axis([Xmin,Xmax,Ymin,Ymax])\n\ndef hBar(Val,Country,PlotNo,Title):\n    X=[x for x, _ in enumerate(Val)]\n    Y = np.array(Val)\n    ax=plt.subplot(1, 5, PlotNo) \n    ax.spines[\"top\"].set_visible(False)\n    ax.spines[\"bottom\"].set_visible(False)    \n    ax.spines[\"right\"].set_visible(False)\n    for i, col in enumerate(Country):\n        ax.text(29, i-0.1, str(int(round(Val.values[i])))+'%', fontsize=12)\n    ax.barh(X,Y,color=tableau20[9])\n    plt.title((\"\\n\".join(wrap(Title, 15))))\n    if PlotNo==1:\n        plt.yticks(X, Country, wrap=True, fontsize=12)\n    else:\n        plt.yticks([])\n    plt.xticks(fontsize=12)\n    plt.xlim(0,60)","641780ae":"# Plot 1 Data\nstage1co = data[mask1 & mask2]\n\ncountrylist = hist_country.split('|')\nplt.figure(figsize=(10,7))\nlineplot(stage1co,countrylist,1,1,1960,2020,0,25,0)\nplt.show()","edb1b506":"indicators=data['IndicatorName'].unique().tolist()\n[indicator for indicator in indicators if 'CO2 emissions' in indicator]\n","2a605d9c":"# Plot 2 & 3 Data\nco2_1970 = data[mask1 & mask4]\nco2_2006 = data[mask1 & mask5]\nco2_2016 = data[mask1 & mask7]\ntemp1=co2_1970['CountryCode'].unique().tolist()\ntemp2=co2_2006['CountryCode'].unique().tolist()\ntemp3=co2_2016['CountryCode'].unique().tolist()\nco2_country=set(temp1)&set(temp2)&set(temp3)\nco2_country=\"|\".join(co2_country)\nmask8 = data['CountryCode'].str.contains(co2_country)\nco2_1970 = data[mask1 & mask4 & mask8]\nco2_2006 = data[mask1 & mask5 & mask8]\nco2_2016 = data[mask1 & mask7 & mask8]\n\n# Plot 4 Data\nT10_country='|'.join(data[mask1 & mask7][['CountryCode',\n                                          'Value']].sort_values(by='Value',\n                                                                ascending=False)[:10]['CountryCode'].tolist())\nmask9 = data['CountryCode'].str.contains(T10_country)\nstage2co = data[mask1 & mask9 & (mask5 | mask6 | mask7)]","af288390":"plt.figure(figsize=(10,7))\nscatterplot(co2_1970,co2_2016,T10_country,T10_country,2,1,0.01,100, 0.01,100,0)\nscatterplot(co2_2006,co2_2016,T10_country,T10_country,2,2,0.01,100, 0.01,100,0)\nplt.show()","109b6bae":"emissions_ratio1670 = co2_2016['Value'].values \/ co2_1970['Value'].values\nemissions_ratio1606 = co2_2016['Value'].values \/ co2_2006['Value'].values\ntempdf=pd.DataFrame({'% of Countries that have increased CO2 emissions (metric ton per capita) (1970-2016)':[(emissions_ratio1670 >= 1).sum() \/ len(emissions_ratio1670)*100],\n                     '% of Countries that have increased CO2 emissions (metric ton per capita) (2006-2016)':[(emissions_ratio1606 >= 1).sum() \/ len(emissions_ratio1606)*100]})\ntempdf.head()","45a8fc83":"countrylist = T10_country.split('|')\nplt.figure(figsize=(5,7))\nlineplot(stage2co,countrylist,1,1,2005.5,2017,0,70,1)\nplt.show()","6f2ff0e7":"# Plot 5 & 6 Data\nco2kt_1970 = data[mask1kt & mask4]\nco2kt_2006 = data[mask1kt & mask5]\nco2kt_2016 = data[mask1kt & mask7]\ntemp1=co2kt_1970['CountryCode'].unique().tolist()\ntemp2=co2kt_2006['CountryCode'].unique().tolist()\ntemp3=co2kt_2016['CountryCode'].unique().tolist()\nco2kt_1970 = data[mask1kt & mask4 & data['CountryCode'].str.contains(\"|\".join(set(temp1)&set(temp2)&set(temp3)))]\nco2kt_2006 = data[mask1kt & mask5 & data['CountryCode'].str.contains(\"|\".join(set(temp1)&set(temp2)&set(temp3)))]\nco2kt_2016 = data[mask1kt & mask7 & data['CountryCode'].str.contains(\"|\".join(set(temp1)&set(temp2)&set(temp3)))]\n\n# Plot 7 Data\nT10kt_country='|'.join(data[mask1kt & mask7][['CountryCode','Value']].sort_values(by='Value',ascending=False)[:10]['CountryCode'].tolist())\nmask10 = data['CountryCode'].str.contains(T10kt_country)\nstage2cokt = data[mask1kt & mask10 & (mask5 | mask6 | mask7)]","5afa192d":"plt.figure(figsize=(10,7))\nscatterplot(co2kt_1970,co2kt_2016,T10_country,T10kt_country,2,1,10,2e7,10,2e7,1)\nscatterplot(co2kt_2006,co2kt_2016,T10_country,T10kt_country,2,2,10,2e7,10,2e7,1)\nplt.show()","3c78e321":"emissionskt1670_ratio = co2kt_2016['Value'].values \/ co2kt_1970['Value'].values\nemissionskt1606_ratio = co2kt_2016['Value'].values \/ co2kt_2006['Value'].values\ntempemis1=(emissionskt1670_ratio >= 1).sum() \/ len(emissionskt1670_ratio)*100\ntempemis2=(emissionskt1606_ratio >= 1).sum() \/ len(emissionskt1606_ratio)*100\ngtopmean=(stage2cokt['Value'][stage2cokt['Year'] == 2016]).mean() \/ (stage2co['Value'][stage2co['Year'] == 2016]).mean()\ntempdf2=pd.DataFrame({'% of Countries that have increased CO2 emissions (1970-2016)':[tempemis1],\n                      '% of Countries that have increased CO2 emissions (2006-2016)':[tempemis2]})\ntempdf2.head()","cca16c74":"plt.figure(figsize=(5,7))\ncountrylist = T10kt_country.split('|')\nlineplot(stage2cokt,countrylist,1,1,2005.5,2017,1e5,1.3e7,2)\nplt.show()","6077c12b":"# Setup masks for data\ntotFuel_ind=data['IndicatorName'].str.contains('of total fuel combustion')\nyearMask=data['Year'] == 2014\nTotFuelC=data[yearMask & totFuel_ind]\n\n# Manipulate Data For Next Set Of Graphs\nmElecHeat='CO2 emissions from electricity and heat production'\nmManfIndsConst='CO2 emissions from manufacturing industries and construction'\nmOtherSec='CO2 emissions from other sectors, excluding residential buildings and commercial and public services'\nmResid='CO2 emissions from residential buildings and commercial and public services'\nmTrans='CO2 emissions from transport'\nT10kt_mask=TotFuelC['CountryCode'].str.contains(T10kt_country)\nmEHVal=TotFuelC['Value'][T10kt_mask & TotFuelC['IndicatorName'].str.contains(mElecHeat)]\nmMICVal=TotFuelC['Value'][T10kt_mask & TotFuelC['IndicatorName'].str.contains(mManfIndsConst)]\nmOtherVal=TotFuelC['Value'][T10kt_mask & TotFuelC['IndicatorName'].str.contains(mOtherSec)]\nmResidVal=TotFuelC['Value'][T10kt_mask & TotFuelC['IndicatorName'].str.contains(mResid)]\nmTransVal=TotFuelC['Value'][T10kt_mask & TotFuelC['IndicatorName'].str.contains(mTrans)]\nmEHCountry=TotFuelC['CountryName'][T10kt_mask & TotFuelC['IndicatorName'].str.contains(mElecHeat)]\nmMICCountry=TotFuelC['CountryName'][T10kt_mask & TotFuelC['IndicatorName'].str.contains(mManfIndsConst)]\nmOSCountry=TotFuelC['CountryName'][T10kt_mask & TotFuelC['IndicatorName'].str.contains(mOtherSec)]\nmRCountry=TotFuelC['CountryName'][T10kt_mask & TotFuelC['IndicatorName'].str.contains(mResid)]\nmTransCountry=TotFuelC['CountryName'][T10kt_mask & TotFuelC['IndicatorName'].str.contains(mTrans)]","86f18d27":"plt.figure(figsize=(10,7))\nhBar(mEHVal,mEHCountry,5,'Electricity and Heat production')\nhBar(mTransVal,mEHCountry,4,'Transport')\nhBar(mMICVal,mEHCountry,3,'Manufacturing Industries and Construction')\nhBar(mResidVal,mEHCountry,2,'Residential Buildings and Commercial and Public Services')\nhBar(mOtherVal,mEHCountry,1,'Other sectors, excluding Residential Buildings and Commercial and Public Services')\nplt.show()","af77c16c":"72.5% of countries have seen an increase in ***```CO2 emissions per capita```*** when comparing their emissions from 1970 to 2016. If we carry out similar assessmetn for the timeframe between 2006 to 2016 we still find that 58.5% of countries have seen an increase in ***```CO2 emissions per capita```***, although the magnitude of change is less when compared with the previously assessed timeframe it is still a discouraging trend when viewed from the perspective of combating global warming. The pick circles are used to highlight the top ten polluting countries which are named in the next visulization.","22ac5195":"This visualization was created to ascertain the emissions levels of each of the top 10 countries, in terms of GDP, but does not really significantly assist in answering the questions posed in the introduction. As you will see later GDP does not directly translate to the highest ***```CO2 emissions```*** or ***```CO2 emissions per capita```***.\n<br>\n<br>\nBefore we move on it should be highlighted that in this particular notebook we will only be focusing on some of the ***```CO2 emissions```*** indicators the list below.","8b8693d7":"Transport, electricity and heat production account for an average of 70.93% of emissions of the top ten CO2 emitters (kt). Although there can be significant per sector emission differences between the different countries dependant on the type of economy they have.","4b91dd8a":"# Summary of Findings\n* Depending on the timeframes being reviewed, ```2006 to 2016``` or ```1970 to 2016``` respectively, between 58.5% to 72.5% of countries have seen an increase in ***```CO2 emissions (metric tons per capita)```***.\n* Similarly when this analysis is carried out for absolute ***```CO2 emission (kt)```***, between 75% to 89% of countries have seen an increase in emissions.\n* Although for both different emissions measurement metrics the magnitude of change for 2006 to 2016 is less than 1970 to 2016, nevertheless the trend is still increasing.\n* ***```CO2 emissions (metric ton per capita)```*** is good metric for measuring relative improvements between countries with different population sizes, however absolute ***```CO2 emissions (kt)```*** is the most important metric when considering which countries have the most impact on global emissions.\n* Transport, electricity and heat production account for an average of 70.93% of emissions of the top ten CO2 emitters. Although there can be significant per sector emission differences between the different countries dependant on the type of economy they have. Generally there could be significant emissions reductions if adoption of renewable energy sources and electrical vehicles could be accelerated.\n ","30ef605d":"Of the top ten polluting countries in terms of \u201cCO2 emissions (kt)\u201d in 2016, **United States, Russian Federation, Japan, Germany** have a steady to decreasing trend. Whereas **China, India, Iran, Korea, Saudi Arabia, Indonesia** has an increasing trend.","141453b8":"89.1% of countries have seen an increase in absolute CO2 emissions (kt) when comparing their emissions from 1970 to 2016, Top ten polluting countries in terms of ***```CO2 emissions (kt)```*** shown as green circles and top ten polluting countries in terms of ***```CO2 emissions (metric ton per capita)```*** in pink. This highlights a danger in only viewing emissions in terms of per capita only, for example the mean difference between the countries in green and pink is 94217 times when viewed in terms of ***```CO2 emissions (kt)```***.\n\n75.5% of countries have seen an increase in absolute CO2 emissions (kt) when comparing their emissions from 2006 to 2016.","df57513b":"![](https:\/\/www.sciencealert.com\/images\/2019-09\/processed\/agw_topics_1024.jpg)\nGlobal warming is one of the biggest challenges currently being faced by the human race, although correlation is not causation a likely cause of global warming is due to increased atmospheric carbon dioxide from human activities. However whether or not greenhouse gas emissions is the root cause of global warming is not the research question in this notebook.\n\n> We are running the most dangerous experiment in history right now, which is to see how much carbon dioxide the atmosphere can handle before there is an environmental catastrohphe - ***Elon Musk*** \n\nIn this notebook I will be using the \"World Development Indicators\" dataset,specifically the files \"WDIData_T.csv\" and \"WDICountry.csv\" to exploring the ***```CO2 emissions```*** data to answer the following questions, **which countries are the top 10 pollutors in terms of ```CO2 emissions (kt)``` & ```CO2 emissions (metric tons per capita)``` indicators and what is their emissions trend?**, **what is the overall emissions trend of all the countries** and **Which sectors contributed most heavily to emissions?**\n\nThe data file being used contains 7,678,806 rows of data on 263 unique countries with 1437 different types of development indicators, also previously detailed in my EDA [notebook](https:\/\/www.kaggle.com\/manchunhui\/wdi-dataset-preliminary-eda).  ","f93e8a79":"Of the top ten polluting countries (in 2016 in terms of CO2 emission per capita) **Qatar, Kuwait, Trinidad and Tobago, Saudi Arabia** can considered to have a steady or decreasing trend, while **United Arab Emirates, Bahrain, New Caledonia, Gibraltar, Brunei Darussalam** has an increasing trend."}}