{"cell_type":{"3844bac0":"code","87f821ad":"code","7532081a":"code","fb3f2bb4":"code","131e0207":"code","d0826d42":"code","f4837233":"code","d668c2fe":"code","320e5d22":"code","cf3876b7":"code","ea2265e1":"code","c425f96f":"code","40d2e9a8":"code","9236cef8":"code","a20fe5d8":"code","ac54f85b":"code","120b2d53":"code","956669c1":"code","92c49583":"code","897b0189":"code","67bf1ce5":"code","e2c8044b":"code","2305b1a6":"code","83a86d8e":"code","6640a3b1":"code","c6e29ffe":"markdown","00cfe8c9":"markdown"},"source":{"3844bac0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","87f821ad":"from fastai.basics import *\nfrom fastai.callback.all import *\nfrom fastai.vision.all import *","7532081a":"df = pd.read_csv('..\/input\/cassava-leaf-disease-classification\/train.csv')","fb3f2bb4":"df.head()","131e0207":"def get_x(df):\n    return '..\/input\/cassava-leaf-disease-classification\/train_images\/' + str(df[\"image_id\"]) \ndef get_y(df):\n    s = df['label'] \n    return s","d0826d42":"df.info()","f4837233":"df['label'].unique()","d668c2fe":"df['label'] = df['label'].apply(lambda x: str(x))","320e5d22":"def get_dls(size):\n    dblock = DataBlock(blocks=(ImageBlock, CategoryBlock),\n                   get_x=get_x,\n                   get_y=get_y,\n                   item_tfms=Resize(460),\n                   batch_tfms=[*aug_transforms(size=size, min_scale=0.75),\n                               Normalize.from_stats(*imagenet_stats)])\n    return dblock.dataloaders(df, bs=32)\n\ndls = get_dls(128)","cf3876b7":"dls.show_batch(nrows=1, ncols=3)","ea2265e1":"if not os.path.exists('\/root\/.cache\/torch\/hub\/checkpoints\/'):\n        os.makedirs('\/root\/.cache\/torch\/hub\/checkpoints\/')\n!cp '..\/input\/resnet50\/resnet50.pth' '\/root\/.cache\/torch\/hub\/checkpoints\/resnet50-19c8e357.pth'","c425f96f":"\nlearner = cnn_learner(dls, resnet50, loss_func=LabelSmoothingCrossEntropy(), metrics=accuracy\n                      , cbs=MixUp()\n                     )\n#loss_func=LabelSmoothingCrossEntropy()\n#learner = cnn_learner(dls, resnet18, pretrained=False, metrics=partial(accuracy_multi, thresh=0.2)).to_fp16() ","40d2e9a8":"learner.lr_find()","9236cef8":"learner.fine_tune(8, base_lr=2e-2, freeze_epochs=5) ","a20fe5d8":"#learner.save('presize')","ac54f85b":"#learner = learner.load('presize')","120b2d53":"learner.dls = get_dls(360) # progressive resizing\nlearner.lr_find()","956669c1":"learner.fine_tune(7, base_lr=2e-4, freeze_epochs=2) ","92c49583":"# learner.dls = get_dls(400) # progressive resizing\n# learner.lr_find()","897b0189":"# learner.fine_tune(7, base_lr=1e-4, freeze_epochs=2) ","67bf1ce5":"learner.recorder.plot_loss()","e2c8044b":"learner.to_native_fp32()\npreds, targs = learner.tta()\nprint(accuracy(preds, targs))","2305b1a6":"path = Path('..\/input\/cassava-leaf-disease-classification')\nsubmission_df = pd.read_csv(path\/'sample_submission.csv')\nsubmission_df","83a86d8e":"test_data_path = submission_df['image_id'].apply(lambda x: path\/'test_images'\/x)\ntst_dl = learner.dls.test_dl(test_data_path)\npredictions = learner.tta(dl = tst_dl, n=10, beta=0)\n\nsubmission_df['label'] = np.argmax(predictions[0],axis=1)\nsubmission_df","6640a3b1":"submission_df.to_csv('submission.csv',index=False)","c6e29ffe":"Lets apply some test time augmentation","00cfe8c9":"Now for some progressive resizing"}}