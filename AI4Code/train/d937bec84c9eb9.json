{"cell_type":{"ba11ca88":"code","60f22ced":"code","0f97d46e":"code","aeac0c19":"code","f7dbd78a":"code","bdf25feb":"code","8bcfd113":"code","4593bb4b":"code","0bde05a9":"code","d767055d":"code","714566d1":"code","401c35ac":"code","c6f83c00":"code","48138379":"code","1be6c5e0":"code","62843bf6":"code","84671b9f":"code","9b69f7eb":"code","579209b4":"code","b10dce30":"code","7d0cc92f":"code","e4694e73":"code","d3cf8249":"code","57ad8444":"code","73c86c3d":"code","2e4e85a0":"code","7ea2ca3f":"code","758deb27":"code","32182324":"code","c323ca50":"code","37f44e7d":"code","4cbc313e":"code","198c5743":"code","0ab687c7":"code","6c4a8507":"code","33f5ec0f":"code","67355bf8":"code","61314c34":"code","5fac14cc":"code","44dcc2ce":"code","0dd2044a":"code","da7c4910":"code","46fa6b3c":"code","fd5bf7ae":"code","bf50b514":"markdown","a63329f8":"markdown","81aebdd2":"markdown","7b569156":"markdown","a4508e57":"markdown","4253706b":"markdown","e507778f":"markdown","fbcf15a8":"markdown","7464d09e":"markdown","9b527677":"markdown","bc04ed4e":"markdown","68a3d3e2":"markdown","ada5c16b":"markdown","259ed6ad":"markdown","7503a707":"markdown","0ba38afd":"markdown","a82f49e9":"markdown","c2f84d50":"markdown","540d9bed":"markdown"},"source":{"ba11ca88":"import os\nimport gc\nimport pandas as pd\nimport numpy as np\nimport pyarrow.parquet as pq\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom tqdm import tqdm_notebook as tqdm\nfrom numba import jit, int32\nplt.style.use(\"fast\")\n\nimport warnings\nwarnings.filterwarnings(\"ignore\") \n\nplt.style.use('seaborn')\nsns.set(font_scale=1)","60f22ced":"df_train = pq.read_pandas('..\/input\/train.parquet', columns=[str(i) for i in range(3000)]).to_pandas()\n# df_train = pq.read_pandas('..\/input\/train.parquet').to_pandas()","0f97d46e":"print(df_train.info())\ndf_train.head()","aeac0c19":"df_train.isnull().sum().sum()","f7dbd78a":"meta_train = pd.read_csv('..\/input\/metadata_train.csv')\nmeta_test = pd.read_csv('..\/input\/metadata_test.csv')","bdf25feb":"meta_train.head()","8bcfd113":"meta_train.describe()","4593bb4b":"meta_train.shape","0bde05a9":"meta_test.head()","d767055d":"meta_test.describe()","714566d1":"meta_test.shape","401c35ac":"meta_train['target'].unique()","c6f83c00":"print(meta_train.isnull().sum())\nprint(meta_test.isnull().sum())","48138379":"meta_train['target'].value_counts()","1be6c5e0":"print('Normal sample number: {:d}'.format(meta_train['target'].value_counts()[0]))\nprint('Fault sample number: {:d}'.format(meta_train['target'].value_counts()[1]))","62843bf6":"print('Normal sample ratio: {:.3f} %'.format(meta_train['target'].value_counts()[0]\/len(meta_train)*100))\nprint('Fault sample ratio: {:.3f} %'.format(meta_train['target'].value_counts()[1]\/len(meta_train)*100))","84671b9f":"f, ax = plt.subplots(1, 3, figsize=(24, 8))\n\nax[0].pie(meta_train['target'].value_counts(), explode=[0, 0.1], autopct='%1.3f%%', shadow=True)\nax[0].set_title('Pie plot - Fault')\nax[0].set_ylabel('')\n\nsns.countplot('target', data=meta_train, ax=ax[1])\nax[1].set_title('Count plot - Fault')\n\nsns.countplot('target', data=meta_train, hue ='phase', ax=ax[2])","9b69f7eb":"meta_train.head()","579209b4":"diff = meta_train.groupby(['id_measurement']).sum().query(\"target != 3 & target != 0\")\nprint('not all fault or normal data number: {:d}'.format(diff.shape[0]))\ndiff","b10dce30":"pd.crosstab(meta_train['phase'], meta_train['target'], margins=True)","7d0cc92f":"meta_train[['phase', 'target']].groupby(['phase'], as_index=True).mean()","e4694e73":"meta_train[['phase', 'target']].groupby(['phase'], as_index=True).mean().sort_values(by='target', ascending=False).plot.bar()","d3cf8249":"targets = meta_train.groupby('id_measurement', as_index=True)[['target','id_measurement']].mean()\ntargets.iloc[67,:]","57ad8444":"targets.head()","73c86c3d":"sns.countplot(x='target',data=round(targets, 2))","2e4e85a0":"meta_train['phase'].value_counts()","7ea2ca3f":"meta_train['phase'].value_counts().plot.bar()","758deb27":"meta_train.groupby('phase').count().plot.bar()","32182324":"meta_train.corr()","c323ca50":"plt.figure(figsize = (10,10))\n\ncolormap = plt.cm.summer_r\nsns.heatmap(meta_train.corr(), linewidths=0.1, vmax=1.0, square=True, cmap=colormap, linecolor='white', annot=True, annot_kws={\"size\": 16})","37f44e7d":"#np.unique(meta_train.loc[meta_train['target']==1, 'id_measurement'].values)\n# Fault measurement ID\nfault_mid = meta_train.loc[meta_train['target']==1, 'id_measurement'].unique()\n# Normal measurement ID\nnormal_mid = meta_train.loc[meta_train['target']==0, 'id_measurement'].unique()","4cbc313e":"print(fault_mid.shape)\nprint(normal_mid.shape)","198c5743":"print('8712\/\/3={:d}'.format(8712\/\/3))\nprint('2748+194-38={:d} (38 overlapped samples (some phases are normal, the others are fault))'.format(2748+194-38))","0ab687c7":"print(meta_train.signal_id.unique())\nprint(meta_train.id_measurement.unique())","6c4a8507":"meta_train.head(10)","33f5ec0f":"fault_mid[1]","67355bf8":"fault_sid = meta_train.loc[meta_train.id_measurement == fault_mid[0], 'signal_id']\nnormal_sid = meta_train.loc[meta_train.id_measurement == normal_mid[0], 'signal_id']","61314c34":"print(fault_sid)\nprint(normal_sid)","5fac14cc":"fault_sample = df_train.iloc[:, fault_sid]\nnormal_sample = df_train.iloc[:, normal_sid]","44dcc2ce":"plt.figure(figsize=(24, 8))\nplt.plot(normal_sample, alpha=0.7);\nplt.ylim([-100, 100])","0dd2044a":"plt.figure(figsize=(24, 8))\nplt.plot(fault_sample, alpha=0.8);\nplt.ylim([-100, 100])","da7c4910":"@jit('float32(float32[:,:], int32, int32)')\ndef flatiron(x, alpha=100., beta=1):\n    new_x = np.zeros_like(x)\n    zero = x[0]\n    for i in range(1, len(x)):\n        zero = zero*(alpha-beta)\/alpha + beta*x[i]\/alpha\n        new_x[i] =  x[i] - zero\n    return new_x","46fa6b3c":"fault_sample_filt = flatiron(fault_sample.values)\nnormal_sample_filt = flatiron(normal_sample.values)","fd5bf7ae":"f, ax = plt.subplots(2, 2, figsize=(24, 16))\n\nax[0, 0].plot(fault_sample, alpha=0.8)\nax[0, 0].set_title('fault signal')\nax[0, 0].set_ylim([-100, 100])\n\nax[0, 1].plot(fault_sample_filt, alpha=0.5)\nax[0, 1].set_title('filtered fault signal')\nax[0, 1].set_ylim([-100, 100])\n\nax[1, 0].plot(normal_sample, alpha=0.7)\nax[1, 0].set_title('normal signal')\nax[1, 0].set_ylim([-100, 100])\n\nax[1, 1].plot(normal_sample_filt, alpha=0.5)\nax[1, 1].set_title('filtered normal signal')\nax[1, 1].set_ylim([-100, 100])","bf50b514":"# Normal and Fault data visualization","a63329f8":"## There are 38 overlapping data. That is, for the 38 measure IDs, the normal phase and the fault phase exist simultaneously.","81aebdd2":"## Read test data (test.parquet)\n#### We cannot read test parquet in the same way with train parquet.\n#### The first ID in train is '0' but the first ID in test is '8712'.\n\n#### cannot use below\n###### df_test = pq.read_pandas(os.path.join(cwd, 'test.parquet'), columns=[str(i) for i in range(1000)]).to_pandas()\n###### df_test = pq.read_pandas(os.path.join(cwd, 'test.parquet')).to_pandas()\n\n#### We should read test.parquet like below line\n###### df_test = pq.read_pandas('..\/input\/train.parquet', columns=[str(i+8712) for i in range(1000)]).to_pandas()","7b569156":"#### train parquet data check","a4508e57":"# Overview\n#### electric transmission lines --> fault --> Partial discharge\n\n#### each signal --> 800,000 measurements of a power line's voltage, taken over 20 milliseconds\n\n#### underlying electric grid operates at 50Hz\n\n#### 3-phase power scheme. \/ 3-phases are measured simultaneously\n\n\n\n# data description in homepage\n## Metadata_[train\/test].csv\n#### id_measurement: ID code for a trio of signals recorded at the same time\n#### signal_id: foreign key for the signal data. (unique across both train and test)\n#### phase: the phase ID code within the signal trio. *** The phases may or may not all be impacted by a fault on the line.\n#### target: 0 (undamaged)\/ 1 (fault)\n\n## parquet\n#### each column contains one signal: 800,000 int8 measurments.\n#### (Note that this is different than our usual data orientation of one row per observation)","4253706b":"### There is little difference in the number of faults (or fault rate) with respect to the phases\n### Data with the same id is not always all fault or normal.\n\n### as data description, \"phase: the phase ID code within the signal trio. The phases may or may not all be impacted by a fault on the line.\"","e507778f":"# Faltiron\n#### reference: https:\/\/www.kaggle.com\/miklgr500\/flatiron","fbcf15a8":"## read Metadata_[train\/test].csv as meta_train & meta_test","7464d09e":"#### Metadata_train","9b527677":"# Plotting the normal and fault signals","bc04ed4e":"## read parquet file as df_train","68a3d3e2":"#### Metadata_test","ada5c16b":"## Normal sample","259ed6ad":"## Number & ratio of normal and fault samples","7503a707":"## --> very small number of fault data: imbalanced dataset","0ba38afd":"### null check","a82f49e9":"## N\/F signal ID_sid","c2f84d50":"## Fault sample","540d9bed":"### null check"}}