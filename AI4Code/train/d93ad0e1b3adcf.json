{"cell_type":{"7a6c84d5":"code","63657646":"code","c7ba1958":"code","d6341585":"code","e64dc7fb":"code","56b60ece":"code","f1b2f8c4":"code","6c661e2a":"code","fc5b0b32":"code","b23f98a6":"code","911d896b":"code","8d922caa":"code","a82cafc3":"code","dd2d23a5":"code","ae93db2e":"code","a373b6c3":"code","6cf5dc4d":"code","9a47a3ce":"code","a4ea7407":"code","b48af7e4":"code","6d262c01":"code","436a151a":"code","329d3221":"code","843093d2":"code","91c5ea3e":"code","853b3531":"code","9fe45022":"code","e65a5236":"code","708a0a1d":"code","5bb83988":"code","ef8680f7":"code","f8474df0":"code","3abc8e0b":"code","732f3d72":"code","a8d37a51":"code","773a259e":"code","6201cbda":"code","237bb452":"code","bc610816":"code","9e2db122":"code","b5b95c37":"code","fe74ef45":"code","8810e1ef":"code","de8e2dad":"code","84f0e812":"code","bcd5762c":"code","66a17168":"code","add9615c":"code","52c285a6":"code","0e660295":"code","4a54589e":"code","7c5c252b":"code","790c1c47":"code","3a6afddc":"code","534aea0d":"code","e143e9e5":"code","5433df2b":"code","340792c5":"code","37ceb2a5":"code","e58ff327":"code","3c049e49":"code","1530b09f":"code","870af67b":"code","a366db8e":"code","3f4f9216":"code","979a03d0":"markdown","c39179f4":"markdown","93f3cd5e":"markdown","efaaac35":"markdown","9e4b37e7":"markdown","1fc72413":"markdown","310405b8":"markdown","a3439842":"markdown","98feca32":"markdown","c862de79":"markdown","e0619ff7":"markdown","2a23e7c8":"markdown","83779b68":"markdown","4fa04c06":"markdown","d58799fc":"markdown","8c51582a":"markdown","d0947ec0":"markdown","63db75b7":"markdown","0dccb912":"markdown","634b8e00":"markdown","56fe51ad":"markdown","6e72dc82":"markdown","24ebaa4f":"markdown","5c36b7a0":"markdown","c8df205e":"markdown","17033014":"markdown","d93fb091":"markdown","ac02cb70":"markdown","96607d12":"markdown","6d367230":"markdown","101eb47c":"markdown","9f427ae7":"markdown","a1a610c9":"markdown","c5dbd49f":"markdown","e1ce7e42":"markdown","d7098b85":"markdown","dae29a8b":"markdown","0194d584":"markdown","f3904083":"markdown","0008c063":"markdown","3a5ba8e8":"markdown","2c351866":"markdown","ef3df5f2":"markdown","e63321c5":"markdown","fd92632b":"markdown","c4771c7c":"markdown","9d4baf57":"markdown","f9db1e13":"markdown","15c1d456":"markdown","b9999ccf":"markdown","9720fe6f":"markdown","70f296c1":"markdown","e8790954":"markdown","444567db":"markdown","80a468f1":"markdown"},"source":{"7a6c84d5":"import bs4\nfrom bs4 import BeautifulSoup\nimport requests\nimport re\nimport time\nfrom datetime import datetime\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","63657646":"df = pd.read_csv(\"\/kaggle\/input\/used-cars-in-cars24\/Cars24.csv\")\ndf.drop('Unnamed: 0',axis=1,inplace=True)\ndf.head()","c7ba1958":"df = df.drop_duplicates(keep='first')","d6341585":"df.isnull().sum().sort_values(ascending=False)","e64dc7fb":"columns = ['Model','Gear']\ndf = df.dropna(subset = columns).reset_index(drop=False)","56b60ece":"df.isnull().sum()","f1b2f8c4":"df.columns","6c661e2a":"df.info()","fc5b0b32":"df.index","b23f98a6":"df.dtypes","911d896b":"df.describe(include='all')","8d922caa":"df = df.drop('index',axis=1)","a82cafc3":"df.Location.unique()","dd2d23a5":"plt.figure(facecolor='black',figsize=(9,7))\nsns.set(rc={'figure.figsize':(8,6)})\na = sns.countplot(x = 'Location',data=df,edgecolor='black',palette='coolwarm_r')\nfor p in a.patches:\n    a.annotate(format(p.get_height(),'.1f'),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n              va='center',xytext=(0,6.5),textcoords='offset points',fontsize=14,color='gold',fontweight='bold')\nplt.title(\"Total number of Cars in different Cities\",fontsize=22,color='lightpink')\nplt.xticks(rotation=0,fontsize=14,fontweight='bold',color='white')\nplt.yticks(fontsize=12,fontweight='bold',color='black')\na.set_facecolor('black')\na.set_ylabel(\"No. of Cars\", fontsize =15, color='lightgreen',fontweight='bold')\na.spines['left'].set_color('black')\na.spines['top'].set_color('black')\na.spines['bottom'].set_color('white')\na.spines['right'].set_color('black')\nplt.grid(False)","ae93db2e":"count = df['Location'].value_counts()\ncount = count.reset_index().rename(columns={'Location':'Count','index':'Location'})\ncolors = sns.set_palette('dark:salmon',5)\npatches,text, pcts= plt.pie(x='Count',labels='Location',autopct='%1.0f%%',data=count,colors=colors,radius=1.5,shadow=True,\n                    textprops={'fontsize': 14})\nfor i, patch in enumerate(patches):\n    text[i].set_color(patch.get_facecolor())\nplt.setp(pcts, color='snow',fontweight='bold')\nplt.show()","a373b6c3":"brand_count = df['Car Brand'].value_counts().sort_values(ascending=False).reset_index().rename(\n    columns = {'index':'Brand','Car Brand':'Count'})","6cf5dc4d":"plt.figure(facecolor='black',figsize=(24,16))\nsns.set(rc={'figure.figsize':(22,14)})\na = sns.barplot(y ='Brand',x='Count',data=brand_count,palette='spring_r',edgecolor='black')\nplt.xticks(rotation=0,fontsize=16,fontweight='bold',color='white')\nplt.yticks(fontsize=16,fontweight='bold',color='white')\nfor p in a.patches:\n    width = p.get_width()\n    plt.text(60+p.get_width(),p.get_y()+0.55*p.get_height(),'{:1.1f}'.format(width),ha='center',\n             va='center',fontsize=14,color='gold',fontweight='bold')\na.set_xlabel(\"No. of Cars\", fontsize = 18,color='lightgreen')\na.set_ylabel(\"Brand Name\", fontsize =18, color='lightgreen')\nplt.title(\"Total number of different Brands in all Cities\",fontsize=28,color='cyan')\na.set_facecolor('black')\na.spines['left'].set_color('white')\na.spines['top'].set_color('black')\na.spines['bottom'].set_color('black')\na.spines['right'].set_color('black')\nplt.grid(False)","9a47a3ce":"avg_price = df.groupby(by=['Car Brand'])['Price'].mean().sort_values(ascending=False).reset_index().rename(\n    columns={'Price':'Avg Price'})\navg_price['Avg Price'] = avg_price['Avg Price'].astype(int)","a4ea7407":"plt.figure(facecolor='black',figsize=(24,17))\nsns.set(rc={'figure.figsize':(22,16)})\na = sns.barplot(y ='Car Brand',x='Avg Price',data=avg_price,palette='RdBu_r',edgecolor='none')\nplt.xticks(rotation=0,fontsize=16,fontweight='bold',color='black')\nplt.yticks(fontsize=16,fontweight='bold',color='gold')\nfor p in a.patches:\n    width = p.get_width()\n    plt.text(65000+p.get_width(),p.get_y()+0.55*p.get_height(),'{:1.1f}'.format(width),ha='center',\n             va='center',fontsize=14,fontweight='bold',color='lightgreen')\nplt.title(\"Average Price of all Brands\",fontsize=28,color='pink')\na.set_facecolor('black')\na.spines['left'].set_color('white')\na.spines['top'].set_color('black')\na.spines['bottom'].set_color('black')\na.spines['right'].set_color('black')\nplt.grid(False)","b48af7e4":"hyd_city = df.loc[(df['Location'] == 'Hyderabad')]\nhyd_brands = hyd_city['Car Brand'].value_counts().sort_values(ascending = False).reset_index().rename(columns={\n    'Car Brand':'Count','index':'Brand'})","6d262c01":"sns.set(rc={'figure.figsize':(22,7.5)})\nfig, ax = plt.subplots()\nax.set_facecolor('snow')\nplt.scatter('Brand','Count',data=hyd_brands,color='k',marker='D')\nplt.xticks(rotation=0,fontsize=16,fontweight='bold')\nplt.yticks(fontsize=16,fontweight='bold')\n\nplt.title(\"Total no. of different car brands in Hyderabad\",fontsize=28,color='maroon')\nplt.xlabel(\"Brand Name\", fontsize = 18,color='darkred')\nplt.ylabel(\"No. of Cars\", fontsize =18, color='darkred')\nplt.grid(False)","436a151a":"delhi_city = df.loc[(df['Location'] == 'Delhi')]\ndelhi_brands = delhi_city['Car Brand'].value_counts().sort_values(ascending = False).reset_index().rename(columns={\n    'Car Brand':'Count','index':'Brand'})","329d3221":"sns.set(rc={'figure.figsize':(22,7.5)})\nfig, ax = plt.subplots()\nax.set_facecolor('mintcream')\nplt.plot('Brand','Count',data=delhi_brands,color='k')\nplt.scatter('Brand','Count',data=delhi_brands,color='r',marker='D')\nplt.xticks(rotation=60,fontsize=16,fontweight='bold')\nplt.yticks(fontsize=16,fontweight='bold')\n\nplt.title(\"Total no. of different car brands in Delhi\",fontsize=28,color='maroon')\nplt.xlabel(\"Brand Name\", fontsize = 18,color='darkred')\nplt.ylabel(\"No. of Cars\", fontsize =18, color='darkred')\nplt.grid(False)","843093d2":"mumbai_city = df.loc[(df['Location'] == 'Mumbai')]\nmumbai_brands = mumbai_city['Car Brand'].value_counts().sort_values(ascending = False).reset_index().rename(columns={\n    'Car Brand':'Count','index':'Brand'})","91c5ea3e":"sns.set(rc={'figure.figsize':(22,7.5)})\na = sns.barplot(x ='Brand',y='Count',data=mumbai_brands)\nplt.xticks(rotation=60,fontsize=16,fontweight='bold')\nplt.yticks(fontsize=16,fontweight='bold')\nfor p in a.patches:\n    a.annotate(format(p.get_height(),'.1f'),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n              va='center',xytext=(0,6.5),textcoords='offset points',fontsize=14,color='white')\na.set_xlabel(\"Brand Name\", fontsize = 18,color='darkred')\na.set_ylabel(\"No. of Cars\", fontsize =18, color='darkred')\nplt.title(\"Total no. of different car brands in Mumbai\",fontsize=28,color='maroon')\na.set_facecolor('black')\nplt.grid(False)","853b3531":"bangalore_city = df.loc[(df['Location'] == 'Bangalore')]\nbangalore_brands = bangalore_city['Car Brand'].value_counts().sort_values(ascending = False).reset_index().rename(columns={\n    'Car Brand':'Count','index':'Brand'})","9fe45022":"sns.set(rc={'figure.figsize':(22,7.5)})\nfig, ax = plt.subplots()\nax.set_facecolor('ivory')\nplt.stem('Brand','Count',data=bangalore_brands)\nplt.xticks(rotation=60,fontsize=16,fontweight='bold')\nplt.yticks(fontsize=16,fontweight='bold')\nplt.title(\"Total no. of different car brands in Bangalore\",fontsize=28,color='maroon')\nplt.xlabel(\"Brand Name\", fontsize = 18,color='darkred')\nplt.ylabel(\"No. of Cars\", fontsize =18, color='darkred')\nplt.show()","e65a5236":"chennai_city = df.loc[(df['Location'] == 'Chennai')]\nchennai_brands = chennai_city['Car Brand'].value_counts().sort_values(ascending = True).reset_index().rename(columns={\n    'Car Brand':'Count','index':'Brand'})","708a0a1d":"sns.set(rc={'figure.figsize':(22,7.5)})\na = sns.barplot(x ='Brand',y='Count',data=chennai_brands,hatch=('*'),color='k',edgecolor='none')\nplt.xticks(rotation=60,fontsize=16,fontweight='bold')\nplt.yticks(fontsize=16,fontweight='bold')\nfor p in a.patches:\n    a.annotate(format(p.get_height(),'.1f'),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n              va='center',xytext=(0,8),textcoords='offset points',fontsize=14,color='black',fontweight='bold')\na.set_xlabel(\"Brand Name\", fontsize = 18,color='white')\na.set_ylabel(\"No. of Cars\", fontsize =18, color='white')\n#plt.title(\"Total no. of different car brands in Chennai\",fontsize=28,color='maroon')\na.set_facecolor('snow')\nplt.grid(False)","5bb83988":"fuel_gear = df.groupby(by=['Fuel'])['Location'].count().sort_values(ascending=True).reset_index().rename(\n    columns={'Location':'Count'})\nfuel_gear","ef8680f7":"sns.set(rc={'figure.figsize':(10,6)})\na = sns.barplot(x ='Fuel',y='Count',data=fuel_gear,palette='magma_r')\nplt.xticks(rotation=0,fontsize=14,fontweight='bold')\nplt.yticks(fontsize=14,fontweight='bold')\nfor p in a.patches:\n    a.annotate(format(p.get_height(),'.1f'),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n              va='center',xytext=(0,6.5),textcoords='offset points',fontsize=12.6)\na.set_xlabel(\"Fuel Type\", fontsize = 18,color='darkred')\na.set_ylabel(\"No. of Cars\", fontsize =18, color='darkred')\nplt.title(\"No. of Cars based on Fuel type\",fontsize=22,color='maroon')\na.set_facecolor('snow')\na.spines['left'].set_color('black')\na.spines['top'].set_color('black')\na.spines['bottom'].set_color('black')\na.spines['right'].set_color('black')\nplt.grid(False)","f8474df0":"fuel_location = df.groupby(by=['Location','Fuel'])['Gear'].count().reset_index().rename(\n    columns={'Gear':'Count','Count':'Fuel'})\nfuel_location = fuel_location.sort_values(by=['Location','Count'],ascending=True).reset_index()\nfuel_location = fuel_location.drop('index',axis=1)\nfuel_location","3abc8e0b":"sns.set(rc={'figure.figsize':(25,10)})\na = sns.countplot(y = 'Location',hue='Fuel',data=df)\nplt.xticks(rotation=0,fontsize=18,fontweight='bold')\nplt.yticks(fontsize=18,fontweight='bold')\nfor p in a.patches:\n    width = p.get_width()\n    plt.text(20+p.get_width(),p.get_y()+0.55*p.get_height(),'{:1.1f}'.format(width),ha='center',va='center',fontsize=14)\na.set_xlabel(\"Location\", fontsize = 20,color='darkred')\na.set_ylabel(\"No. of Cars\", fontsize =20, color='darkred')\nplt.title(\"No. of Cars based on Fuel type in different Cities\",fontsize=28,color='maroon')\na.set_facecolor('aliceblue')\nplt.legend(loc='lower right',title='Fuel',prop={'size': 20})\na.grid(False)","732f3d72":"fuel_location = df.groupby(by=['Location','Model Year'])['Gear'].count().reset_index().rename(\n    columns={'Gear':'Count','Count':'Model Year'})\nfuel_location = fuel_location.sort_values(by=['Location','Count'],ascending=True).reset_index()\nfuel_location = fuel_location.drop('index',axis=1)","a8d37a51":"sns.set(rc={'figure.figsize':(25,30)})\na = sns.countplot(y = 'Model Year',hue='Location',data=df,edgecolor='black',palette='coolwarm_r')\nplt.xticks(rotation=0,fontsize=20,fontweight='bold')\nplt.yticks(fontsize=20,fontweight='bold')\nfor p in a.patches:\n    width = p.get_width()\n    plt.text(7+p.get_width(),p.get_y()+0.55*p.get_height(),'{:1.1f}'.format(width),ha='center',va='center',fontsize=14,\n            color='white')\na.set_ylabel(\"Model Year\", fontsize = 24,color='darkred')\na.set_xlabel(\"No. of Cars\", fontsize =24, color='darkred')\nplt.title(\"No. of cars in different Cities based on Model Year\",fontsize=29,color='maroon')\na.set_facecolor('black')\nplt.legend(loc='upper right',title='Cities',prop={'size': 18})\na.grid(False)","773a259e":"location_gear = df.groupby(by=['Location','Gear'])['Ownership'].count().reset_index().rename(\n    columns={'Ownership':'Count'})\nlocation_gear","6201cbda":"sns.set(rc={'figure.figsize':(10.5,6.5)})\nplt.xticks(rotation=0,fontsize=13.5,fontweight='bold')\nplt.yticks(fontsize=13.5,fontweight='bold')\na = sns.pointplot(x='Location',y='Count',hue='Gear',data=location_gear,palette='spring')\na.set_facecolor('black')\na.set_xlabel(\"Location\", fontsize = 18,color='maroon')\na.set_ylabel(\"No. of Cars\", fontsize =18, color='maroon')\nplt.title(\"Cars in different cities based on Gear\",fontsize=20,color='maroon')\nplt.grid(False)","237bb452":"location_owner = df.groupby(by=['Location','Ownership'])['Gear'].count().reset_index().rename(\n    columns={'Gear':'Count'})\nlocation_owner","bc610816":"sns.set(rc={'figure.figsize':(10.5,6.5)})\na = sns.barplot(x='Location',y='Count',data=location_owner,hue='Ownership',palette='tab10')\nfor p in a.patches:\n    a.annotate(format(p.get_height(),'.1f'),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n              va='center',xytext=(0,6.5),textcoords='offset points',fontsize=9)\na.set_facecolor('white')\na.set_xlabel(\"Location\", fontsize = 15,color='maroon')\na.set_ylabel(\"No. of Cars\", fontsize =15, color='maroon')\nplt.title(\"Cars in different cities based on Ownership\",fontsize=20,color='maroon')\nplt.xticks(rotation=0,fontsize=13,fontweight='bold')\nplt.yticks(fontsize=13,fontweight='bold')\na.spines['left'].set_color('black')\na.spines['top'].set_color('black')\na.spines['bottom'].set_color('black')\na.spines['right'].set_color('black')\na.grid(False)","9e2db122":"df['Car Brand'].unique()","b5b95c37":"models = df.groupby(by=['Location','Fuel']).mean()\nmodels = models.astype(int)\nmodels = models.reset_index()\nbangalore = models[models['Location']=='Bangalore']\nbangalore","fe74ef45":"f, axes = plt.subplots(1, 3, figsize=(18,6))\n#1st plot\na = sns.barplot(x='Fuel',y='Price',data=bangalore,palette='rocket',ax =axes[0])\na.set_facecolor('azure')\na.set_xlabel(\"Fuel\", fontsize = 18,color='maroon')\nfor p in a.patches:\n    a.annotate(format(p.get_height()),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n               va='center',xytext=(0,9),textcoords='offset points',fontsize=11.5)\na.set_ylabel(\"Average Price\", fontsize =14, color='maroon')\na.set_title(\"Average Price of vehicle based on Fuel\", fontsize =14, color='maroon')\n#2nd plot\nb = sns.barplot(x='Fuel',y='Driven (Kms)',data=bangalore,palette='rocket',ax =axes[1])\nb.set_facecolor('azure')\nb.set_xlabel(\"Fuel\", fontsize = 18,color='maroon')\nfor p in b.patches:\n    b.annotate(format(p.get_height()),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n               va='center',xytext=(0,9),textcoords='offset points',fontsize=11.5)\nb.set_ylabel(\"Average Driven (Kms)\", fontsize =14, color='maroon')\nb.set_title(\"Driven (Kms) of vehicle based on Fuel\", fontsize =14, color='maroon')\n#3rd plot\nc = sns.barplot(x='Fuel',y='EMI (monthly)',data=bangalore,palette='rocket',ax =axes[2])\nc.set_facecolor('azure')\nc.set_xlabel(\"Fuel\", fontsize = 18,color='maroon')\nfor p in c.patches:\n    c.annotate(format(p.get_height()),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n               va='center',xytext=(0,9),textcoords='offset points',fontsize=11.5)\nc.set_ylabel(\"Average EMI (Monthly)\", fontsize =14, color='maroon')\nc.set_title(\"Monthly EMI of vehicle based on Fuel\", fontsize =14, color='maroon')\na.grid(False)\nb.grid(False)\nc.grid(False)","8810e1ef":"models = df.groupby(by=['Location','Fuel']).mean()\nmodels = models.astype(int)\nmodels = models.reset_index()\nchennai = models[models['Location']=='Chennai']\nchennai","de8e2dad":"f, axes = plt.subplots(1, 3, figsize=(18,6))\n#1st plot\na = sns.barplot(x='Fuel',y='Price',data=chennai,palette='Blues_d',ax =axes[0])\na.set_facecolor('mintcream')\na.set_xlabel(\"Fuel\", fontsize = 18,color='maroon')\nfor p in a.patches:\n    a.annotate(format(p.get_height()),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n               va='center',xytext=(0,9),textcoords='offset points',fontsize=11.5)\na.set_ylabel(\"Average Price\", fontsize =14, color='maroon')\na.set_title(\"Average Price of vehicle based on Fuel\", fontsize =14, color='maroon')\n#2nd plot\nb = sns.barplot(x='Fuel',y='Driven (Kms)',data=chennai,palette='Blues_d',ax =axes[1])\nb.set_facecolor('mintcream')\nb.set_xlabel(\"Fuel\", fontsize = 18,color='maroon')\nfor p in b.patches:\n    b.annotate(format(p.get_height()),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n               va='center',xytext=(0,9),textcoords='offset points',fontsize=11.5)\nb.set_ylabel(\"Average Driven (Kms)\", fontsize =14, color='maroon')\nb.set_title(\"Driven (Kms) of vehicle based on Fuel\", fontsize =14, color='maroon')\n#3rd plot\nc = sns.barplot(x='Fuel',y='EMI (monthly)',data=chennai,palette='Blues_d',ax =axes[2])\nc.set_facecolor('mintcream')\nc.set_xlabel(\"Fuel\", fontsize = 18,color='maroon')\nfor p in c.patches:\n    c.annotate(format(p.get_height()),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n               va='center',xytext=(0,9),textcoords='offset points',fontsize=11.5)\nc.set_ylabel(\"Average EMI (Monthly)\", fontsize =14, color='maroon')\nc.set_title(\"Monthly EMI of vehicle based on Fuel\", fontsize =14, color='maroon')\nplt.tight_layout()\na.grid(False)\nb.grid(False)\nc.grid(False)","84f0e812":"models = df.groupby(by=['Location','Fuel']).mean()\nmodels = models.astype(int)\nmodels = models.reset_index()\ndelhi = models[models['Location']=='Delhi']\ndelhi","bcd5762c":"f, axes = plt.subplots(1, 3, figsize=(18,6))\n#1st plot\na = sns.barplot(x='Fuel',y='Price',data=delhi,palette='coolwarm',ax =axes[0])\na.set_facecolor('mintcream')\na.set_xlabel(\"Fuel\", fontsize = 18,color='maroon')\nfor p in a.patches:\n    a.annotate(format(p.get_height()),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n               va='center',xytext=(0,9),textcoords='offset points',fontsize=11.5)\na.set_ylabel(\"Average Price\", fontsize =14, color='maroon')\na.set_title(\"Average Price of vehicle based on Fuel\", fontsize =14, color='maroon')\n#2nd plot\nb = sns.barplot(x='Fuel',y='Driven (Kms)',data=delhi,palette='coolwarm',ax =axes[1])\nb.set_facecolor('mintcream')\nb.set_xlabel(\"Fuel\", fontsize = 18,color='maroon')\nfor p in b.patches:\n    b.annotate(format(p.get_height()),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n               va='center',xytext=(0,9),textcoords='offset points',fontsize=11.5)\nb.set_ylabel(\"Average Driven (Kms)\", fontsize =14, color='maroon')\nb.set_title(\"Driven (Kms) of vehicle based on Fuel\", fontsize =14, color='maroon')\n#3rd plot\nc = sns.barplot(x='Fuel',y='EMI (monthly)',data=delhi,palette='coolwarm',ax =axes[2])\nc.set_facecolor('mintcream')\nc.set_xlabel(\"Fuel\", fontsize = 18,color='maroon')\nfor p in c.patches:\n    c.annotate(format(p.get_height()),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n               va='center',xytext=(0,9),textcoords='offset points',fontsize=11.5)\nc.set_ylabel(\"Average EMI (Monthly)\", fontsize =14, color='maroon')\nc.set_title(\"Monthly EMI of vehicle based on Fuel\", fontsize =14, color='maroon')\nplt.tight_layout()\na.grid(False)\nb.grid(False)\nc.grid(False)","66a17168":"models = df.groupby(by=['Location','Fuel']).mean()\nmodels = models.astype(int)\nmodels = models.reset_index()\nhyderabad = models[models['Location']=='Hyderabad']\nhyderabad","add9615c":"f, axes = plt.subplots(1, 3, figsize=(18,6))\n#1st plot\na = sns.barplot(x='Fuel',y='Price',data=hyderabad,palette='viridis_r',ax =axes[0])\na.set_facecolor('mintcream')\na.set_xlabel(\"Fuel\", fontsize = 18,color='maroon')\nfor p in a.patches:\n    a.annotate(format(p.get_height()),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n               va='center',xytext=(0,9),textcoords='offset points',fontsize=11.5)\na.set_ylabel(\"Average Price\", fontsize =14, color='maroon')\na.set_title(\"Average Price of vehicle based on Fuel\", fontsize =14, color='maroon')\n#2nd plot\nb = sns.barplot(x='Fuel',y='Driven (Kms)',data=hyderabad,palette='viridis_r',ax =axes[1])\nb.set_facecolor('mintcream')\nb.set_xlabel(\"Fuel\", fontsize = 18,color='maroon')\nfor p in b.patches:\n    b.annotate(format(p.get_height()),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n               va='center',xytext=(0,9),textcoords='offset points',fontsize=11.5)\nb.set_ylabel(\"Average Driven (Kms)\", fontsize =14, color='maroon')\nb.set_title(\"Driven (Kms) of vehicle based on Fuel\", fontsize =14, color='maroon')\n#3rd plot\nc = sns.barplot(x='Fuel',y='EMI (monthly)',data=hyderabad,palette='viridis_r',ax =axes[2])\nc.set_facecolor('mintcream')\nc.set_xlabel(\"Fuel\", fontsize = 18,color='maroon')\nfor p in c.patches:\n    c.annotate(format(p.get_height()),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n               va='center',xytext=(0,9),textcoords='offset points',fontsize=11.5)\nc.set_ylabel(\"Average EMI (Monthly)\", fontsize =14, color='maroon')\nc.set_title(\"Monthly EMI of vehicle based on Fuel\", fontsize =14, color='maroon')\nplt.tight_layout()\na.grid(False)\nb.grid(False)\nc.grid(False)","52c285a6":"models = df.groupby(by=['Location','Fuel']).mean()\nmodels = models.astype(int)\nmodels = models.reset_index()\nmumbai = models[models['Location']=='Mumbai']\nmumbai","0e660295":"f, axes = plt.subplots(1, 3, figsize=(18,6))\n#1st plot\na = sns.barplot(x='Fuel',y='Price',data=mumbai,palette='YlOrBr',ax =axes[0])\na.set_facecolor('mintcream')\na.set_xlabel(\"Fuel\", fontsize = 18,color='maroon')\nfor p in a.patches:\n    a.annotate(format(p.get_height()),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n               va='center',xytext=(0,9),textcoords='offset points',fontsize=11.5)\na.set_ylabel(\"Average Price\", fontsize =14, color='maroon')\na.set_title(\"Average Price of vehicle based on Fuel\", fontsize =14, color='maroon')\n#2nd plot\nb = sns.barplot(x='Fuel',y='Driven (Kms)',data=mumbai,palette='icefire',ax =axes[1])\nb.set_facecolor('mintcream')\nb.set_xlabel(\"Fuel\", fontsize = 18,color='maroon')\nfor p in b.patches:\n    b.annotate(format(p.get_height()),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n               va='center',xytext=(0,9),textcoords='offset points',fontsize=11.5)\nb.set_ylabel(\"Average Driven (Kms)\", fontsize =14, color='maroon')\nb.set_title(\"Driven (Kms) of vehicle based on Fuel\", fontsize =14, color='maroon')\n#3rd plot\nc = sns.barplot(x='Fuel',y='EMI (monthly)',data=mumbai,palette='icefire',ax =axes[2])\nc.set_facecolor('mintcream')\nc.set_xlabel(\"Fuel\", fontsize = 18,color='maroon')\nfor p in c.patches:\n    c.annotate(format(p.get_height()),(p.get_x()+p.get_width()\/2.,p.get_height()),ha='center',\n               va='center',xytext=(0,9),textcoords='offset points',fontsize=11.5)\nc.set_ylabel(\"Average EMI (Monthly)\", fontsize =14, color='maroon')\nc.set_title(\"Monthly EMI of vehicle based on Fuel\", fontsize =14, color='maroon')\nplt.tight_layout()\na.grid(False)\nb.grid(False)\nc.grid(False)","4a54589e":"by_model = df.groupby(by=['Location','Car Brand','Model']).median()\nby_model = by_model.reset_index()\nmodel_h = by_model[by_model[\"Location\"]=='Hyderabad'].sort_values('Price',ascending=False)","7c5c252b":"def max_min(column):\n    high = model_h[column].idxmax()\n    high_model = pd.DataFrame(model_h.loc[high])\n    low = model_h[column].idxmin()\n    low_model = pd.DataFrame(model_h.loc[low])\n    high_low = pd.concat([high_model,low_model],axis=1)\n    return high_low\nmax_min('Price')","790c1c47":"model_d = by_model[by_model[\"Location\"]=='Delhi'].sort_values('Price',ascending=False)","3a6afddc":"def max_min(column):\n    high = model_d[column].idxmax()\n    high_model = pd.DataFrame(model_d.loc[high])\n    low = model_d[column].idxmin()\n    low_model = pd.DataFrame(model_d.loc[low])\n    high_low = pd.concat([high_model,low_model],axis=1)\n    return high_low\nmax_min('Price')","534aea0d":"model_m = by_model[by_model[\"Location\"]=='Mumbai'].sort_values('Price',ascending=False)","e143e9e5":"def max_min(column):\n    high = model_m[column].idxmax()\n    high_model = pd.DataFrame(model_m.loc[high])\n    low = model_m[column].idxmin()\n    low_model = pd.DataFrame(model_m.loc[low])\n    high_low = pd.concat([high_model,low_model],axis=1)\n    return high_low\nmax_min('Price')","5433df2b":"model_b = by_model[by_model[\"Location\"]=='Bangalore'].sort_values('Price',ascending=False)","340792c5":"def max_min(column):\n    high = model_b[column].idxmax()\n    high_model = pd.DataFrame(model_b.loc[high])\n    low = model_b[column].idxmin()\n    low_model = pd.DataFrame(model_b.loc[low])\n    high_low = pd.concat([high_model,low_model],axis=1)\n    return high_low\nmax_min('Price')","37ceb2a5":"model_c = by_model[by_model[\"Location\"]=='Chennai'].sort_values('Price',ascending=False)","e58ff327":"def max_min(column):\n    high = model_c[column].idxmax()\n    high_model = pd.DataFrame(model_c.loc[high])\n    low = model_c[column].idxmin()\n    low_model = pd.DataFrame(model_c.loc[low])\n    high_low = pd.concat([high_model,low_model],axis=1)\n    return high_low\nmax_min('Price')","3c049e49":"price = df.sort_values(by='Price',ascending=False)","1530b09f":"def max_min(column):\n    high = price[column].idxmax()\n    high_model = pd.DataFrame(price.loc[high])\n    low = price[column].idxmin()\n    low_model = pd.DataFrame(price.loc[low])\n    high_low = pd.concat([high_model,low_model],axis=1)\n    return high_low\nmax_min('Price')","870af67b":"by_model = df.groupby(by=['Car Brand','Location'])['Price'].count().reset_index().rename(\n    columns={'Price':'Count'})\nsns.set(rc={'figure.figsize':(15,6)})\na = sns.scatterplot(y='Count',x='Car Brand',hue='Location',data=by_model)\n\na.set_ylabel(\"Count\", fontsize = 18,color='maroon')\na.set_xlabel(\"Car Brand\", fontsize =18, color='maroon')\na.set_title(\"Car Brands count in different Cities\", fontsize =20, color='maroon')\na.set_facecolor('#FFE6F5')\nplt.xticks(rotation = 90,fontsize=13,color='k',fontweight='bold')\nplt.yticks(fontsize=13,color='k',fontweight='bold')\na.grid(False)\nplt.show()","a366db8e":"sns.set(rc={'figure.figsize':(28,10.5)})\na = sns.boxplot(x='Car Brand',y='Price',data=df,palette='bright')\na.set_xlabel(\"Car Brand\", fontsize = 24,color='darkred')\na.set_ylabel(\"Average Price\", fontsize =24, color='darkred')\nplt.xticks(rotation=90,fontsize=20,fontweight='bold')\nplt.yticks(fontsize=20,fontweight='bold')\na.set_title(\"Box Plot for Brand vs Average Price\", fontsize =28, color='maroon')\na.set_facecolor('snow')\na.grid(False)\nplt.show()","3f4f9216":"sns.set(rc={'figure.figsize':(9,5)})\nsns.heatmap(df.corr(),annot=True,cmap='viridis')\nplt.xticks(fontsize=12,color='k',fontweight='bold')\nplt.yticks(fontsize=12,color='k',fontweight='bold')\nplt.show()","979a03d0":"## 28) Heat Map for Correlation ","c39179f4":"### Gathering all \"Statistical Details\" of different columns","93f3cd5e":"#### Number of rows in a DataFrame","efaaac35":"## 27) Car Brand vs Average Price","9e4b37e7":"#### The above data in conclusion may change upon time to time because the data in the website is not static.","1fc72413":"## 3) No. of different Brands in all Cities","310405b8":"## Tools Used:\n","a3439842":"> Hyderabad City\n> * Most available brands - Maruti(248), Hyundai(112), Honda(17), Toyota(11), Volkswagon(9)\n> * Cars availability - Petrol(319), Diesel(85), Petrol+CNG(9), Petrol+LPG(4)\n> * Recent year models availability - 2016(21), 2017(47), 2018(43), 2019(30), 2020(3)\n> * Availability based on Gear - Automatic(25), Manual(392)\n> * High Budget car - Toyota Innova Crysta2.4 VX 8 STR (1801049\/-), 2018 Model\n> * Low Budget car - Hyundai AccentGLE (166099\/-), 2008 Model","98feca32":"## 7) Total no. of different Car Brands in Mumbai","c862de79":"## Project Author: Balaji Mummidi (  [LinkedIn](https:\/\/www.linkedin.com\/in\/balaji-mummidi\/) ,[GitHub](https:\/\/github.com\/MummidiBalaji), [Kaggle](https:\/\/www.kaggle.com\/balajimummidi\/account?isEditing=False) )","e0619ff7":"##### Since there no missing values we can start analyzing the data","2a23e7c8":"#### Names of the columns","83779b68":"> Chennai City\n> * Most available brands - Maruti(300), Hyundai(167), Honda(42), Volkswagon(23), Ford(16)\n> * Cars availability - Petrol(481), Diesel(124), Petrol+LPG(4)\n> * Recent year models availability - 2016(81), 2017(79), 2018(68), 2019(41), 2020(6)\n> * Availability based on Gear - Automatic(60), Manual(549)\n> * High Budget car - Tata HexaVaricor 400 XT (1801499\/-), 2019 Model\n> * Low Budget car - ChevorletSparkLS 1.0 (171799\/-), 2011 Model","4fa04c06":"## 23) Car with highest & lowest price in Bangalore","d58799fc":"## 20) Car with highest & lowest price in Hyderabad","8c51582a":"### Importing necessary libraries","d0947ec0":"#### Checking 'NAN' values after removing rows","63db75b7":"## 21) Car with highest & lowest price in Delhi","0dccb912":"## 22) Car with highest & lowest price in Mumbai","634b8e00":"> Mumbai City\n> * Most available brands - Maruti(802), Hyundai(331), Honda(176), Toyota(93), Volkswagon(84)\n> * Cars availability - Petrol(1083), Diesel(579), Petrol+CNG(71), Petrol+LPG(1)\n> * Recent year models availability - 2016(224), 2017(219), 2018(148), 2019(95), 2020(37)\n> * Availability based on Gear - Automatic(258), Manual(1476)\n> * High Budget car - Toyota Land CruiserLC200 VX 2 PREMIUM\t (3495000\/-), 2010 Model\n> * Low Budget car - Tata NanoXT TWIST (125000\/-), 2014 Model","56fe51ad":"## 24) Car with highest & lowest price in Chennai","6e72dc82":"## 18) Average Price, EMI, Driven(Kms) based on Fuel type in Hyderabad","24ebaa4f":"## 1) Total number of cars in different Cities ","5c36b7a0":"## 19) Average Price, EMI, Driven(Kms) based on Fuel type in Mumbai","c8df205e":"## 16) Average Price, EMI, Driven(Kms) based on Fuel type in Chennai","17033014":"## 17) Average Price, EMI, Driven(Kms) based on Fuel type in Delhi","d93fb091":"> Delhi City\n> * Most available brands - Maruti(1069), Hyundai(404), Honda(173), Toyota(150), Renault(82)\n> * Cars availability - Petrol(1122), Diesel(993), Petrol+CNG(81)\n> * Recent year models availability - 2016(216), 2017(217), 2018(210), 2019(122), 2020(61), 2021(2)\n> * Availability based on Gear - Automatic(182), Manual(2014)\n> * High Budget car - Toyota Fortuner2.8 4x2 AT\t(2918399\/-), 2018 Model\n> * Low Budget car - Cheverlet SparkLS 1.0 (112000\/-), 2010 Model","ac02cb70":"* The availability of cars  in 'Delhi'(2200+) is the highest among other 4 cities.\n* Compared to other 4 cities 'Hyderabad'(415+) has less available cars.\n* 'Maruti' brand cars are widely available with a count of around 2800 cars in all the cities, followed by Hyundai(1240+), Honda(449), Toyota(280+)\n* Most of the cars runs with 'Petrol' with a count of 3663.\n* High budget car among all cities:\n    * Toyota Land CruiserLC200 VX 2 PREMIUM (3495000\/-), 2010 Model, available in Mumbai\n* Low budget car among all cities:\n    * Maruti AltoLX (91000\/-), 2008 Model, available in Delhi\n","96607d12":"##### Some statistical details can't be calculated for object type so it gives 'NaN' values","6d367230":"## 25) High budget & Low budger car among all cities","101eb47c":"> Bangalore City\n> * Most available brands - Maruti(378), Hyundai(228), Honda(41), Renault(29), Volkswagon(9)\n> * Cars availability - Petrol(658), Diesel(116), Petrol+CNG(1), Petrol+LPG(5), Electric(1)\n> * Recent year models availability - 2016(77), 2017(71), 2018(54), 2019(37), 2020(7), 2021(1)\n> * Availability based on Gear - Automatic(70), Manual(711)\n> * High Budget car - MG HECTORSHARP 2.0 DIESEL (1964099\/-), 2019 Model\n> * Low Budget car - Chevorlet SparkLS 1.0 (189499\/-), 2009 Model","9f427ae7":"## 15) Average Price, EMI, Driven(Kms) based on Fuel type in Bangalore","a1a610c9":"### Analysing the Data","c5dbd49f":"# Analysing & Visualizing the Data","e1ce7e42":"## 8) Total no. of different Car Brands in Bangalore","d7098b85":"### Finding number of \"Missing \/ NAN\" values","dae29a8b":"#### Checking Datatype of all columns","0194d584":"## 26) Comparision of car brand count in different Cities","f3904083":"## 13) No. of Cars in different cities based on Gear","0008c063":"## 10) Number of Cars based on Fuel type in all cities","3a5ba8e8":"## 9) Total no. of different Car Brands in Chennai","2c351866":"### Loading the DataFrame","ef3df5f2":"### Removing duplicated rows","e63321c5":"### Removing the rows which have missing values","fd92632b":"## 6) Total no. of different Car Brands in Delhi","c4771c7c":"#### Information of all columns","9d4baf57":"##  4) Average Price of all the brands","f9db1e13":"## 11) No. of Cars based on Fuel type in different Cities","15c1d456":"### Problem Statement: To analyze the the details of used cars based on different categories.","b9999ccf":"## 12) No. of cars in different Cities based on Model Year","9720fe6f":"# Conclusion","70f296c1":"* BeautifulSoup, Selenium to read and  extract data from url.\n* Pandas & NumPy for analysing the data.\n* Seaborn, Matplotlib for visualising the data.","e8790954":"## 5) Total no. of different Car Brands in Hyderabad","444567db":"## 2) Percentage of cars available for sale in different cities","80a468f1":"## 14) No. of Cars in different cities based on Ownership"}}