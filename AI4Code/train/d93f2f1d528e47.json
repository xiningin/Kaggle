{"cell_type":{"6bb8421e":"code","e05f1595":"code","6746adce":"code","fa21e9be":"code","628a28d5":"code","636aed44":"code","b8d9b155":"code","d50df99b":"code","fd7218f6":"code","3f382f06":"code","7467316c":"code","7f8c637f":"code","92fe9718":"code","8e075f8b":"code","5ae5175e":"code","55d17241":"code","25b23043":"code","79b3da9e":"code","0d9c859a":"code","9e53bcfb":"code","9dca9fa6":"code","fe1875cf":"code","b6d97295":"code","4afb1601":"code","b4f03c8d":"code","4ff83276":"code","b595396c":"code","ca7142c5":"code","4bb53b99":"markdown","15046dc4":"markdown","317820a8":"markdown","c3d11433":"markdown","5f009a83":"markdown","a2866195":"markdown","1c8cc075":"markdown","b85cce0e":"markdown","dcf518bd":"markdown","213a215f":"markdown","56bc6632":"markdown"},"source":{"6bb8421e":"# \uc2dc\ud5d8\ud658\uacbd \uc138\ud305 (\ucf54\ub4dc \ubcc0\uacbd X)\nimport pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\n\ndef exam_data_load(df, target, id_name=\"\", null_name=\"\"):\n    if id_name == \"\":\n        df = df.reset_index().rename(columns={\"index\": \"id\"})\n        id_name = 'id'\n    else:\n        id_name = id_name\n    \n    if null_name != \"\":\n        df[df == null_name] = np.nan\n    \n    X_train, X_test = train_test_split(df, test_size=0.2, random_state=2021)\n    \n    y_train = X_train[[id_name, target]]\n    X_train = X_train.drop(columns=[target])\n\n    \n    y_test = X_test[[id_name, target]]\n    X_test = X_test.drop(columns=[target])\n    return X_train, X_test, y_train, y_test \n    \ndf = pd.read_csv(\"..\/input\/adult-census-income\/adult.csv\")\nX_train, X_test, y_train, y_test = exam_data_load(df, target='income', null_name='?')\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","e05f1595":"import pandas as pd\nimport numpy as np","6746adce":"# \uc2dc\ud5d8\ud658\uacbd\uc5d0\uc11c\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc81c\uacf5\ub41c\ub2e4\uace0 \ud568\n# import pandas as pd\n# X_test = pd.read_csv(\"data\/X_test.csv\")\n# X_train = pd.read_csv(\"data\/X_train.csv\")\n# y_train = pd.read_csv(\"data\/y_train.csv\")","fa21e9be":"# \ub370\uc774\ud130 \ud06c\uae30 \ud655\uc778\nX_train.shape, X_test.shape, y_train.shape","628a28d5":"# \ub370\uc774\ud130 \ud655\uc778\nX_train.head()","636aed44":"# \ud0c0\uac9f \uc218 \ud655\uc778\ny_train['income'].value_counts()","b8d9b155":"# type\ud655\uc778\nX_train.info()","d50df99b":"# \ud53c\ucc98 \uad6c\ubd84\n# Numeric features\nnumeric_features = [\n                    'age',\n                    'fnlwgt', \n                    'education.num',\n                    'capital.gain', \n                    'capital.loss', \n                    'hours.per.week',                     \n                   ]\n\n# Categorical features\ncat_features = [\n                 'workclass',              \n                 'education',            \n                 'marital.status', \n                 'occupation', \n                 'relationship', \n                 'race', \n                 'sex',\n                 'native.country'\n]","fd7218f6":"X_train[numeric_features].describe()","3f382f06":"X_train[cat_features].describe()","7467316c":"X_train.isnull().sum()","7f8c637f":"X_test.isnull().sum()","92fe9718":"X_train['workclass'].value_counts()","8e075f8b":"X_train['occupation'].value_counts()","5ae5175e":"X_train['native.country'].value_counts()","55d17241":"def data_fillna(df):\n    df['workclass'] = df['workclass'].fillna(df['workclass'].mode()[0])\n    df['occupation'] = df['occupation'].fillna(\"null\")\n    df['native.country'] = df[\"native.country\"].fillna(df['native.country'].mode()[0])\n    return df\n\nX_train = data_fillna(X_train)\nX_test = data_fillna(X_test)\n\nX_train.isnull().sum()","25b23043":"# \ub77c\ubca8\uc778\ucf54\ub529\nfrom sklearn.preprocessing import LabelEncoder\n\nall_df = pd.concat([X_train.assign(ind=\"train\"), X_test.assign(ind=\"test\")])\nle = LabelEncoder()\nall_df[cat_features] = all_df[cat_features].apply(le.fit_transform)\n\nX_train = all_df[all_df['ind'] == 'train']\nX_train = X_train.drop('ind',axis=1)\nX_train\n\nX_test = all_df[all_df['ind'] == 'test']\nX_test = X_test.drop('ind',axis=1)\nX_test","79b3da9e":"# \uc2a4\ucf00\uc77c\ub9c1\nfrom sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()\nX_train[numeric_features] = scaler.fit_transform(X_train[numeric_features])\nX_test[numeric_features] = scaler.transform(X_test[numeric_features])\nX_train","0d9c859a":"# target\uac12 \ubcc0\uacbd\ny = (y_train['income'] != '<=50K').astype(int)\ny[:5]","9e53bcfb":"# \ud559\uc2b5\uc6a9 \ub370\uc774\ud130\uc640 \uac80\uc99d\uc6a9 \ub370\uc774\ud130\ub85c \uad6c\ubd84\nfrom sklearn.model_selection import train_test_split\nX_tr, X_val, y_tr, y_val = train_test_split(X_train, y, test_size=0.15, random_state=2021)\nX_tr.shape, X_val.shape, y_tr.shape, y_val.shape","9dca9fa6":"X_tr.head()","fe1875cf":"# id \uc0ad\uc81c\nX_tr = X_tr.drop('id', axis=1)\nX_val = X_val.drop('id', axis=1)","b6d97295":"# id \uc0ad\uc81c\ub41c \uac83 \ud655\uc778\nX_tr.head(1)","4afb1601":"# \uc758\uc0ac\uacb0\uc815\ub098\ubb34\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\n\nmodel = DecisionTreeClassifier(random_state = 2022)\nmodel.fit(X_tr, y_tr)\npred = model.predict(X_val)\nprint('accuracy score:', (accuracy_score(y_val, pred)))","b4f03c8d":"# \ub79c\ub364\ud3ec\ub808\uc2a4\ud2b8\nfrom sklearn.ensemble import RandomForestClassifier\n\nmodel = RandomForestClassifier(random_state = 2022)\nmodel.fit(X_tr, y_tr)\npred = model.predict(X_val)\nprint('accuracy score:', (accuracy_score(y_val, pred)))","4ff83276":"# test\ub370\uc774\ud130 \uc608\uce21 (pop\uc744 \ud65c\uc6a9\ud558\uba74 \uac12\uc744 \ub118\uaca8\uc8fc\uace0 \uc0ad\uc81c \ub428)\nX_test_id = X_test.pop('id')\npred = model.predict(X_test)","b595396c":"# csv\uc0dd\uc131\noutput = pd.DataFrame({'id': X_test_id, 'income':pred})\noutput.to_csv(\"000000.csv\", index=False)\noutput.head()","ca7142c5":"y_test = (y_test['income'] != '<=50K').astype(int)\nfrom sklearn.metrics import accuracy_score\nprint('accuracy score:', (accuracy_score(y_test, pred)))","4bb53b99":"## EDA","15046dc4":"## \ubaa8\ub378 & \ud3c9\uac00","317820a8":"# \uc0ac\uc6a9\uc790 \ucf54\ub529","c3d11433":"## \ud53c\ucc98\uc5d4\uc9c0\ub2c8\uc5b4\ub9c1","5f009a83":"## \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30(\uc0dd\ub7b5)","a2866195":"## \ub77c\uc774\ube0c\ub7ec\ub9ac \ubd88\ub7ec\uc624\uae30","1c8cc075":"# \uc131\uc778 \uc778\uad6c\uc870\uc0ac \uc18c\ub4dd \uc608\uce21\n\n- age: \ub098\uc774\n- workclass: \uace0\uc6a9 \ud615\ud0dc\n- fnlwgt: \uc0ac\ub78c\uc758 \ub300\ud45c\uc131\uc744 \ub098\ud0c0\ub0b4\ub294 \uac00\uc911\uce58(final weight)\n- education: \uad50\uc721 \uc218\uc900\n- education.num: \uad50\uc721 \uc218\uc900 \uc218\uce58\n- marital.status: \uacb0\ud63c \uc0c1\ud0dc\n- occupation: \uc5c5\uc885\n- relationship: \uac00\uc871 \uad00\uacc4\n- race: \uc778\uc885\n- sex: \uc131\ubcc4\n- capital.gain: \uc591\ub3c4 \uc18c\ub4dd\n- capital.loss: \uc591\ub3c4 \uc190\uc2e4\n- hours.per.week: \uc8fc\ub2f9 \uadfc\ubb34 \uc2dc\uac04\n- native.country: \uad6d\uc801\n- income: \uc218\uc775 (\uc608\uce21\ud574\uc57c \ud558\ub294 \uac12)","b85cce0e":"## \ucc44\uc810 (\uc218\ud5d8\uc790\ub294 \ud655\uc778 \ubd88\uac00)","dcf518bd":"## \uacb0\uce21\uce58 \ucc98\ub9ac","213a215f":"- \uacb0\uce21\uce58\ub294 \ucd5c\ube48\uac12\uacfc \ucc28\uc774\uac00 \ud06c\uba74 \ucd5c\ube48\uac12\uc73c\ub85c \uac12\uc774 \ube44\uc2b7\ud558\uba74 \ubcc4\ub3c4\uc758 \uac12\uc73c\ub85c \ub300\uccb4\ud568","56bc6632":"## \uac80\uc99d\uc6a9 \ub370\uc774\ud130 \ubd84\ub9ac"}}