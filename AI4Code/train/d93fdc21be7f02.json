{"cell_type":{"f3e2be6e":"code","a7d53e95":"code","b5cd74e5":"code","dc8e7c21":"code","32bb5dc6":"code","80d64279":"markdown","7ebdf5b7":"markdown","8a67c476":"markdown","d25aca4b":"markdown","cd0b3210":"markdown"},"source":{"f3e2be6e":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport matplotlib.animation as animation\nfrom IPython.display import HTML\n","a7d53e95":"df_region_raw = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/MinCiencia\/Datos-COVID19\/master\/output\/producto3\/CasosTotalesCumulativo.csv\")\n\ndf_region = pd.DataFrame(columns=['ndia','fecha', 'region','confirmados'])\nind=0\ncounter = 1\nfor j in df_region_raw.iloc[:,1:].columns:\n    \n    for i in df_region_raw.index:\n        #df_region.append([ind, j, df_region_raw.iloc[i,0], df_region_raw.iloc[i,j] ])\n        df_region.loc[ind] = [counter, j, df_region_raw.iloc[i,0], df_region_raw.loc[i,j] ]   # adding a row\n        ind += 1\n    counter += 1\ndf_region = df_region[(df_region.region !=\"Total\")]\n\ndef zonas(row):\n    if row in ['Arica y Parinacota', 'Tarapac\u00e1', 'Antofagasta', 'Atacama', 'Coquimbo']:\n        val = 'Zona Norte'\n    elif row in ['Valpara\u00edso', 'Metropolitana', 'O\u2019Higgins', 'Maule']:\n        val = 'Zona Centro'\n    else:\n        val = 'Zona Sur'\n    return val\n\ndf_region['zona'] = df_region.region.apply(zonas)\n\ndf_region.head(5)","b5cd74e5":"colors = dict(zip(\n    ['Zona Norte', 'Zona Centro', 'Zona Sur'],\n    ['#adb0ff', '#ffb3ff', '#90d595'] ))\n\ngroup_lk = df_region.set_index('region')['zona'].to_dict()","dc8e7c21":"fig, ax = plt.subplots(figsize=(15, 8))\ndef draw_barchart(current_day):\n    dff = df_region[df_region['ndia'].eq(current_day)].sort_values(by='confirmados', ascending=True).tail(10)\n    ax.clear()\n    ax.barh(dff['region'], dff['confirmados'], color=[colors[group_lk[x]] for x in dff['region']])\n    dx = dff['confirmados'].max() \/ 200\n    for i, (value, name) in enumerate(zip(dff['confirmados'], dff['region'])):\n        ax.text(value-dx, i,     name,           size=14, weight=600, ha='right', va='bottom')\n        ax.text(value-dx, i-.25, group_lk[name], size=10, color='#444444', ha='right', va='baseline')\n        ax.text(value+dx, i,     f'{value:,.0f}',  size=14, ha='left',  va='center')\n    ax.text(1, 0.4, current_day, transform=ax.transAxes, color='#777777', size=46, ha='right', weight=800)\n    ax.text(0, 1.06, 'Confirmados', transform=ax.transAxes, size=12, color='#777777')\n    ax.xaxis.set_major_formatter(ticker.StrMethodFormatter('{x:,.0f}'))\n    ax.xaxis.set_ticks_position('top')\n    ax.tick_params(axis='x', colors='#777777', labelsize=12)\n    ax.set_yticks([])\n    ax.margins(0, 0.01)\n    ax.grid(which='major', axis='x', linestyle='-')\n    ax.set_axisbelow(True)\n    ax.text(0, 1.15, 'Casos confirmados por regi\u00f3n covid Chile',\n            transform=ax.transAxes, size=24, weight=600, ha='left', va='top')\n    ax.text(1, 0, 'by Monin Leonor @joquitz; credit @jburnmurdoch', transform=ax.transAxes, color='#777777', ha='right',\n            bbox=dict(facecolor='white', alpha=0.8, edgecolor='white'))\n    plt.box(False)\n    \n#Check the status of on day. For example, the last one.\nlastday = df_region.ndia.max()\ndraw_barchart(lastday)","32bb5dc6":"fig, ax = plt.subplots(figsize=(15, 8))\nanimator = animation.FuncAnimation(fig, draw_barchart, frames= range(1,lastday))\nHTML(animator.to_html5_video())\n","80d64279":"Step 4: Create the timeline animation","7ebdf5b7":"# Animated bar chart of Covid19 confirmed cases in Chile\n\nStep 0: Load libraries","8a67c476":"Step 3: Define a graph function to plot each bar chart","d25aca4b":"* Step 2: Choose some colors! \n\nTo  identify the three zones of Chile >> North, Center and South","cd0b3210":"Step 1: Load data from oficial repository of Mi**nistry of Science  "}}