{"cell_type":{"cda547dd":"code","cca1f89e":"code","de05cfd9":"code","93bfdc6d":"code","6d487522":"code","d2e30dd7":"code","0c584962":"code","be94a720":"code","5b075c87":"code","6ce28690":"code","9fc4f8f7":"code","a0ecfe46":"code","657bdd9d":"code","1a912a51":"code","dca7e4a9":"code","f19b1e9a":"code","e8df139f":"code","aec1c8fa":"code","12d6996f":"markdown","991fcf3c":"markdown"},"source":{"cda547dd":"import pandas as pd\nimport numpy as np\nimport scipy\nfrom collections import Counter\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.pipeline import Pipeline ","cca1f89e":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntrain.info()","de05cfd9":"test.info()","93bfdc6d":"train['Title']= train['Name'].apply(lambda x: x.split(',')[1].split('.')[0].strip())\ntest['Title']= test['Name'].apply(lambda x: x.split(',')[1].split('.')[0].strip())\nnn={'Capt':'Rareman', 'Col':'Rareman','Don':'Rareman','Dona':'Rarewoman',\n    'Dr':'Rareman','Jonkheer':'Rareman','Lady':'Rarewoman','Major':'Rareman',\n    'Master':'Master','Miss':'Miss','Mlle':'Rarewoman','Mme':'Rarewoman',\n    'Mr':'Mr','Mrs':'Mrs','Ms':'Rarewoman','Rev':'Mr','Sir':'Rareman',\n    'the Countess':'Rarewoman'}\ntrain['Title']=train['Title'].map(nn)\ntest['Title']=test['Title'].map(nn)","6d487522":"train.loc[train.PassengerId==797,'Title']='Rarewoman'","d2e30dd7":"#missing value treatment\ntrain['Name'] = train['Name'].map(lambda x: x.split(',')[1].split('.')[0].strip())\ntest['Name'] = test['Name'].map(lambda x: x.split(',')[1].split('.')[0].strip())\ntitles = train['Name'].unique()\ntitles","0c584962":"train['Age'] = train['Age'].interpolate(method ='linear', limit_direction ='forward')\ntest['Age'] = test['Age'].interpolate(method ='linear', limit_direction ='forward')","be94a720":"train['Embarked'].mode()\ntrain['Embarked'].fillna('S',inplace=True)","5b075c87":"train['Fare'].fillna(train[train.Pclass==3]['Fare'].median(),inplace=True)\ntest['Fare'].fillna(test[test.Pclass==3]['Fare'].median(),inplace=True)","6ce28690":"train.loc[train['Cabin'].notnull(),'Cabin']=1\ntrain.loc[train['Cabin'].isnull(),'Cabin']=0\ntest.loc[train['Cabin'].notnull(),'Cabin']=1\ntest.loc[train['Cabin'].isnull(),'Cabin']=0","9fc4f8f7":"replacement = {'S': 0,'Q': 1,'C': 2 }\ntrain['Embarked'] = train['Embarked'].apply(lambda x: replacement.get(x))\ntest['Embarked'] = test['Embarked'].apply(lambda x: replacement.get(x))\nreplacement = {'male': 0,'female': 1 }\ntrain['Sex'] = train['Sex'].apply(lambda x: replacement.get(x))\ntest['Sex'] = test['Sex'].apply(lambda x: replacement.get(x))\nreplacement = {'Don': 0,'Rev': 0,'Jonkheer': 0,'Capt': 0,'Mr': 1,'Dr': 2,'Col': 3,'Major': 3,'Master': 4,'Miss': 5,\n    'Mrs': 6,'Mme': 7,'Ms': 7,'Mlle': 7,'Sir': 7,'Lady': 7,'the Countess': 7, 'Dona': 7}\ntrain['Name'] = train['Name'].apply(lambda x: replacement.get(x))\ntest['Name'] = test['Name'].apply(lambda x: replacement.get(x))","a0ecfe46":"train.head()","657bdd9d":"predictors=['Age','Cabin','Embarked','Fare','Name','Parch','PassengerId','Pclass','Sex','SibSp']\nX = pd.DataFrame(train[predictors])\ntest = pd.DataFrame(test[predictors])\nX.head()","1a912a51":"y = train['Survived']\nCounter(y)","dca7e4a9":"models=[KNeighborsClassifier(),LogisticRegression(),GaussianNB(),DecisionTreeClassifier(),RandomForestClassifier(),\n       GradientBoostingClassifier(),SVC()]\nnames=['KNN','LR','NB','Tree','RF','GDBT','SVM']\nfor name, model in zip(names,models):\n    score=cross_val_score(model,X,y,cv=5)\n    print(\"{}:{},{}\".format(name,score.mean(),score))","f19b1e9a":"rf = RandomForestClassifier(n_estimators=1000,random_state=42,n_jobs=-1,bootstrap=True)\nrf.fit(X, y)\nypred = rf.predict(test)","e8df139f":"sub = pd.DataFrame({'PassengerId':test['PassengerId'],'Survived':ypred})","aec1c8fa":"sub.to_csv('sub.csv',index=False)\nsub.head()","12d6996f":"# Feature Engineering","991fcf3c":"## Building Baseline Models"}}