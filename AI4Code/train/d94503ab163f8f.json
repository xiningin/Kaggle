{"cell_type":{"a5a4dcaa":"code","66a390b9":"code","12d61d91":"code","cad11aad":"code","08307319":"code","cd5520a1":"code","efe6a44c":"code","c0e9657e":"code","a34390ce":"code","5f919c76":"code","36aadc3f":"code","d5aea3bf":"code","3736b3c2":"code","b709cef0":"code","e4d77337":"markdown","df7bac85":"markdown","ec394ea1":"markdown","1e292537":"markdown"},"source":{"a5a4dcaa":"import numpy as np\nimport pandas as pd","66a390b9":"train_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","12d61d91":"train_data[:10]","cad11aad":"train_data.describe(include='all')","08307319":"women = train_data[train_data['Sex'] == 'female']['Survived']\nrate_women = sum(women)\/len(women)\nprint('% of women who survived:', rate_women)","cd5520a1":"men = train_data[train_data.Sex == 'male']['Survived']\nrate_men = sum(men)\/len(men)\nprint('% of men who survived:', rate_men)","efe6a44c":"# alternative way of computing the above\ntrain_data[['Sex', 'Survived']].groupby(['Sex']).mean()","c0e9657e":"train_data[['Pclass', 'Survived']].groupby(['Pclass']).mean()","a34390ce":"# generate correlation data (larger values signify a clear positive\/negative correlation between row\/column labels)\ntrain_data.corr()","5f919c76":"women_count = 0\nwomen_survived_count = 0\nfor idx, row in train_data.iterrows():\n    if row['Sex'] == 'female':\n        women_count += 1\n        if row['Survived'] == 1:\n            women_survived_count += 1\nwomen_survived_count \/ women_count","36aadc3f":"predictions = []\ncount = 0\n\nfor idx, row in test_data.iterrows():\n    # make your changes in this cell!\n    if row['Sex'] == 'female':\n        if row['Pclass'] == 1 or row['Pclass'] == 2:\n            predictions.append(1)\n        elif row['Pclass'] == 3 and row['Age'] <= 1:\n            predictions.append(1)\n        else:\n            predictions.append(0)\n    elif row['Sex'] == 'male':\n        if row['Age'] <= 18 and row['Pclass'] == 1:\n            predictions.append(1)\n        elif row['Age'] <= 16 and row['Pclass'] == 2:\n            predictions.append(1)\n        else:\n            predictions.append(0)","d5aea3bf":"assert len(predictions) == len(test_data), 'Number of predictions must match number of test data rows!'","3736b3c2":"test_data['Survived'] = predictions","b709cef0":"test_data[['PassengerId', 'Survived']].to_csv('submission.csv', index=False)","e4d77337":"# Loading and examining data","df7bac85":"# Making predictions","ec394ea1":"# Basic analysis","1e292537":"# Working with rows manually"}}