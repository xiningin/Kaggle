{"cell_type":{"1befe533":"code","ab32c668":"markdown"},"source":{"1befe533":"library(tidyverse)\nlibrary(janitor)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(writexl)\n\nrm(list = ls())\n\n\ndf1 <- read.csv(\".\/CSVs\/t1.csv\")\ndf2 <- read.csv(\".\/CSVs\/t2.csv\")\ndf3 <- read.csv(\".\/CSVs\/t3.csv\")\ndf4 <- read.csv(\".\/CSVs\/t4.csv\")\ndf5 <- read.csv(\".\/CSVs\/t5.csv\")\ndf6 <- read.csv(\".\/CSVs\/t6.csv\")\ndf7 <- read.csv(\".\/CSVs\/t7.csv\")\ndf8 <- read.csv(\".\/CSVs\/t8.csv\")\ndf9 <- read.csv(\".\/CSVs\/t9.csv\")\ndf10 <- read.csv(\".\/CSVs\/t10.csv\")\ndf11 <- read.csv(\".\/CSVs\/t11.csv\")\ndf12 <- read.csv(\".\/CSVs\/t12.csv\")\n\n#Removing empty cells\n\ncycl_trips <- rbind(df1,df2,df3,df4,df5,df6,df7,df8,df9,df10,df11,df12)\ncycl_trips <- janitor::remove_empty(cycl_trips,which = c(\"cols\"))\ncycl_trips <- janitor::remove_empty(cycl_trips,which = c(\"rows\"))\n\n#Converting data\/time to date\/time\ncycl_trips$Ymd <- as.Date(cycl_trips$started_at)\ncycl_trips$started_at <- lubridate::ymd_hms(cycl_trips$started_at)\ncycl_trips$ended_at <- lubridate::ymd_hms(cycl_trips$ended_at)\n\ncycl_trips$start_hour <- lubridate::hour(cycl_trips$started_at)\ncycl_trips$end_hour <- lubridate::hour(cycl_trips$ended_at)\n\n#calculate trip duration\n\ncycl_trips$Hours <- difftime(cycl_trips$ended_at, cycl_trips$started_at, units = (\"hours\"))\ncycl_trips$Minutes <- difftime(cycl_trips$ended_at, cycl_trips$started_at, units =(\"mins\"))\n\n#clean data, no zero minutes and empty ids\ncycl_trips1 <- cycl_trips %>%\n  filter(Minutes > 0) %>%\n  drop_na()\n\ncycl_trips2 <- cycl_trips1 %>%\n  group_by(Ymd,start_hour) %>%\n  summarise(TotalMins = sum(Minutes),\n            MeanMins = mean(Minutes),\n            MedianMins = median(Minutes),\n            Max = max(Minutes),\n            Min = min(Minutes),\n            Count = n()) %>% ungroup()\n\ncycl_types <- cycl_trips1 %>%\n  group_by(rideable_type,Ymd) %>%\n  summarise(\n    TotalMins = sum(Minutes),\n    MeanMins = mean(Minutes),\n    MedianMins = median(Minutes),\n    Max = max(Minutes),\n    Min = min(Minutes),\n    Count = n()) %>% ungroup()\n\ncycl_trips3 <- cycl_trips1 %>%\n  group_by(member_casual,Ymd,start_hour) %>%\n  summarise(TotalMins = sum(Minutes),\n            MeanMins = mean(Minutes),\n            MedianMins = median(Minutes),\n            Max = max(Minutes),\n            Min = min(Minutes),\n            Count = n()) %>% ungroup()\ncycl_trips4 <- cycl_trips1 %>%\n  group_by(member_casual,rideable_type) %>%\n  summarise(TotalMins = sum(Minutes),\n            MeanMins = mean(Minutes),\n            MedianMins = median(Minutes),\n            Max = max(Minutes),\n            Min = min(Minutes),\n            Count = n()) %>% ungroup()\n\ncycl_trips5 <- cycl_trips1 %>%\n  group_by(member_casual,Ymd) %>%\n  summarise(\n    TotalMins = sum(Minutes),\n    MeanMins = mean(Minutes),\n    MedianMins = median(Minutes),\n    Max = max(Minutes),\n    Min = min(Minutes),\n    Count = n()) %>% ungroup()\n\nwrite_xlsx(cycl_trips2, \".\/cycltrips2.xlsx\")\nwrite_xlsx(cycl_types, \".\/cycltypes.xlsx\")\nwrite_xlsx(cycl_trips3, \".\/cycltrips3.xlsx\")\nwrite_xlsx(cycl_trips4, \".\/cycltrips4.xlsx\")\nwrite_xlsx(cycl_trips5, \".\/cycltrips5.xlsx\")\nwrite_xlsx(cycl_trips1, \".\/cycltrips1.xlsx\")","ab32c668":"Case Study: How Does a Bike-Share Navigate Speedy Success?\n\nSTATEMENT OF BUSINESS TASK\nThe topic under exploration is whether there exists a difference in the usage of the bike-share program between the annual members and casual riders.\nThe current problem at hand is in the conversion of casual riders to members in order to maximize future growth.\nKey stakeholders in this undertaking include, Lily Moreno (director of marketing), the Cyclistic marketing analytics and Cyclistic executive team.\n\nDESCRIPTION OF DATA SOURCES\n\nThe data is located on the amazon AWS archive page. \nURL: https:\/\/divvy-tripdata.s3.amazonaws.com\/index.html (Index of bucket \"divvy-tripdata\")\n\nThe data is organized into nearly 5,000,000 individual observations and 18 observations.\nThere are no issues with bias nor credibility. This dataset encompasses both abled and disabled users of their services.\nThis data proved after reliable, original, comprehensive current and cited.\nAccording to the DLA (Data Licensing Agreement), the City of Chicago owns the system data acquired by Motivate Inc. and permits access to the public, subject to the terms and conditions. Paragraphs within the document include;\nLicensing, Prohibited Conduct, NO Warranty, Limitation of Liability, Ownership and Termination of Agreement.\nThis is needed to assure that the use of the data is not against the rules of the owners of the dataset and other stakeholders.\nThere are a significant number of empty cells under different attributes but mostly under the start_station_name and end_station_name headers.\nThe data was downloaded and stored in a folder named \u201cCyclistic Trip Data\u201d.\nThe data from each monthly dataset was extracted and stored initially as a .csv file. A folder was created for this purpose. After they were merged and converted in R Studio.\nAccording to five groups of interest, a number of sorts and filters were applied in R Studio.\n\nDOCUMENTATION OF CLEANING & DATA MANIPULATION\n\nR studio (R 4.1.1) and Microsoft Excel PivotTable were chosen as the preferred tools for analysis and visualization.\nAll duplicates, zero entries and empty cells were eliminated. After passing a dataset of 4587101 observations across 18 variables through a cleaning process, 4731801 observations remained. This although affecting the electric bicycles category, was passable as the remaining portion was enough to carry out the analysis.\nThe dataset was checked for any duplicates, misspellings, or any N\/A entries. These were duly dealt with.\nData Cleaning was performed in the following way;\n\nI.\tData frames were created for each .csv files for all 12 months.\nII.\tAll .csv were bound together into a single dataset.\nIII.\tEmpty cells were removed for both rows and columns.\nIV.\tDates and times were separated using the format: ymd_hms\nV.\tThe trip lengths for all the trips across all user types and bicycles were calculated and split into the hour attribute and minute attribute.\nVI.\tObservations that had minutes equal to zero or unreasonably high trip lengths were removed. \nVII.\tEntries with N\/A under rider_id were also removed.\n\nFor the initial EDA, \n\nA column named, \u201cday_of_week\u201d was created to capture numerically the weekday on which the trips were taken.\n\nSUMMARY OF ANALYSIS\nExploratory Data Analysis showed the following:\n1. Average ride_lenth across the week\n\nCasual Riders\nSunday: 36.48 mins Count(69744 users)\nMonday: 36:40 mins (48316 users)\nTuesday: 28.05 mins (45403 users)\nWednesday: 28.37 mins (46552 users)\nThursday: 30.34 mins (56846 users)\nFriday:30.42 mins (71968 users)\nSaturday: 34.54 mins (103227 users)\nWeekly average: 32.47 mins\nClearly, casual rider often partronize their bike-ride services mostly on the weekend and early in the week.\n\nSubscription-based\/Members\nSunday: 16.03 minutes Count(39746 users)\nMonday: 14.09 minutes Count(46503 users)\nTuesday: 13.27 minutes Count(52383 users)\nWednesday: 13.20 minutes Count(53540 users)\nThursday: 13.27 minutes Count(64429 users)\nFriday: 13.53 minutes Count(64220 users)\nSaturday:15.51 minutes Count(59533 users)\nWeekly average: 14.14 mins\nIt can be seen here that the numbers of users who have subscribed to the service increases till Friday and drops slightly afterwards. This could indicate a dependence on the service for work and school commutes.\nTotal count of riders in this EDA: 822410 Observations. July 2021 data was used in this preliminary study.\n\n\n\n"}}