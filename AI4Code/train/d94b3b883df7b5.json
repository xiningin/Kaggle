{"cell_type":{"81009cc8":"code","d4c1151b":"code","95d2e4c0":"code","d78097fb":"code","c199ff17":"code","0ddd4647":"code","767e09cb":"code","067bf42c":"code","b586e4ba":"code","4b8fb599":"code","620b16fb":"code","bac6f3e5":"markdown","2d9ea8f4":"markdown","7f8ddbe6":"markdown","b36ae4eb":"markdown","41267523":"markdown","b46679e0":"markdown","47f91fee":"markdown"},"source":{"81009cc8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d4c1151b":"input_file = '..\/input\/money-heist-season-1-to-5\/money heist - all seasons.csv'\ndata = pd.read_csv(input_file, encoding='latin-1')\ndata.head()","95d2e4c0":"# Some column names have whitespace in them.\ndata.columns = data.columns.str.strip()","d78097fb":"data.info()","c199ff17":"data.describe()","0ddd4647":"# parse the date from the 'On Air' column\ndata['date_parsed'] = pd.to_datetime(data['On Air'], format=\"%d-%b-%y\")\ndata['date_parsed'].unique()","767e09cb":"data['sea_ep'] = data['Season'] + (data['Episode'] \/ 10)","067bf42c":"sns.lmplot(x=\"sea_ep\", y=\"IMDB\", hue=\"Season\", data=data, height=6, aspect=2, ci=None)\nplt.xlabel(\"Season\")\nplt.ylabel(\"IMDb Rating\")\nplt.title(\"IMDb Ratings for Money Heist episodes\")","b586e4ba":"season_avg_rating = data.groupby('Season').mean().IMDB.to_frame().reset_index()\nseason_avg_rating.columns = ['Season', 'IMDB Avg. Rating']\n\nplt.figure(figsize=(10,5))\nplt.title('Average IMDB Rating of each Season', fontsize=15)\nsns.barplot(y=season_avg_rating.Season, x=season_avg_rating['IMDB Avg. Rating'], orient='h')","4b8fb599":"sns.regplot(x=data['Watch Time (minutes)'], y=data['IMDB'])","620b16fb":"pop_eps = data[['Name', 'IMDB']].sort_values('IMDB', ascending=False).head(5)\npop_eps","bac6f3e5":"Again, as expected, the top-rated episode is the season 3 finale \"Astray\", followed closely by the season 2 finale \"Bella ciao\".","2d9ea8f4":"### Light data cleansing","7f8ddbe6":"We'll plot the ratings data using `lmplot` so we can see a trendline for each season.","b36ae4eb":"Finally, let's look at the names of the top 5 episodes. These should all be from season 2, except for one episode from season 3.","41267523":"Since many later episodes are all dropped on the same day, a scatter plot using the date will not look good. Let's use a `season.episode` format for the x-axis instead.","b46679e0":"Based on the IMDb ratings, it looks like the quality of the show was consistent through season 1, increased during season 2, but then has steadily declined in seasons 3-5, even though the ratings of the episodes within each season has increased.\n\nLet's also look at the averate rating per season.","47f91fee":"As expected, this fits perfectly with what we saw in the scatter plot above.\n\nLet's also look at a scatterplot of the watch time and IMDB rating to see if there's any correlation between them."}}