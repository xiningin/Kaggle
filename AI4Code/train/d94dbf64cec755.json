{"cell_type":{"c720b5aa":"code","6a524537":"code","115bef99":"code","4385fa6d":"code","07173674":"code","106c1906":"code","4a5ddff5":"code","9d4a1e02":"code","f83b5d49":"code","a005f88f":"code","c627f550":"code","3273b694":"code","83db5535":"code","2d6df5de":"code","6a548730":"code","dc2f5f86":"code","cbe3c4aa":"code","4fa6b09b":"code","28cfe724":"markdown","9d66d551":"markdown","5824248a":"markdown","cc5e969f":"markdown","1831ea83":"markdown","e3583988":"markdown","c416ddab":"markdown","82689458":"markdown"},"source":{"c720b5aa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6a524537":"data = pd.read_csv('\/kaggle\/input\/global-co2-emissions\/CO2Emission_LifeExp.csv')\ndata.head()","115bef99":"# tail shows last 5 rows\ndata.tail()","4385fa6d":"# columns gives column names of features\ndata.columns","07173674":"# shape gives number of rows and columns in a tuble\ndata.shape","106c1906":"data.info()","4a5ddff5":"data.describe()","9d4a1e02":"data_new = data.head()   \ndata_new","f83b5d49":"melted = pd.melt(frame=data_new,id_vars = 'Country', value_vars= ['Population','Percapita'])\nmelted","a005f88f":"melted.pivot(index = 'Country', columns = 'variable',values='value') # creating new data","c627f550":"data1 = data.head()\ndata2= data.tail()\nconc_data_row = pd.concat([data1,data2],axis =0,ignore_index = True)\nconc_data_row","3273b694":"data1 = data['Population'].head()\ndata2= data['LifeExpectancy'].head()\nconc_data_col = pd.concat([data1,data2], axis = 1) # to connect\nconc_data_col","83db5535":"data.dtypes","2d6df5de":"# convert int --> float\ndata['Population'] = data['Population'].astype('float64')\ndata.dtypes","6a548730":"data.info()","dc2f5f86":"data['Percapita'].value_counts(dropna =False)","cbe3c4aa":"data[\"Percapita\"].fillna('empty',inplace = True)","4fa6b09b":"assert  data['Percapita'].notnull().all()   # returns nothing because we do not have nan values","28cfe724":"**EXPLORATORY DATA ANALYSIS**\n\n","9d66d551":"# CLEANING DATA\n\nColumn name inconsistency like upper-lower case letter or space between words\n\nmissing data\n\ndifferent language","5824248a":"**MISSING DATA and TESTING WITH ASSERT**","cc5e969f":"**PIVOTING DATA**\n\n","1831ea83":"**CONCATENATING DATA**","e3583988":"**TIDY DATA**\n","c416ddab":"Country: Unique Identifier\n\nCode: Country Code\n\nCO2Emissions: CO2 Emission by country (tons, 2016)\n\nYearlyChange: Yearly CO2 Emission Change in Percentage\n\nPercapita: CO2 Emission Per Capita\n\nPopulation: Population of the Country (2016)\n\nLifeExpectancy: Life Expectancy of the Country (2016)","82689458":"**DATA TYPES**"}}