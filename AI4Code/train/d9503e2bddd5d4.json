{"cell_type":{"3f237c8f":"code","6e5f9dc5":"code","cffbdfad":"code","a6360c2a":"code","3ea16c6f":"code","d12204c6":"code","7b342ac4":"code","8b83af9f":"code","10473dfc":"code","bc5eeeaf":"code","6e9f85f5":"code","9ea8a5c1":"code","e06df526":"code","45f7bce1":"code","7d646c82":"code","88203b50":"code","f93de1a9":"code","c27dda68":"code","13018c76":"code","a7a687e3":"code","88098db6":"code","9b9ca659":"code","74147ce1":"code","b4220857":"code","62d8581f":"code","4cd537fa":"code","ce43a7cf":"code","d11cc1bc":"code","763f7564":"code","6c861c2d":"code","1b9c109b":"code","4bbc8331":"code","0d020df6":"code","82425787":"code","a129808b":"code","324053e8":"code","66ed8013":"code","5e5c7a8a":"code","054f5551":"code","d30b41fa":"code","fa15b2bc":"code","3206b3cf":"code","c6bf220b":"code","1306f2d1":"code","2f47a5b1":"markdown","beddf598":"markdown","bbdc9e86":"markdown","bc504bcf":"markdown","7ef334f1":"markdown","1037ad7a":"markdown"},"source":{"3f237c8f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6e5f9dc5":"import pandas as pd\namd=pd.read_csv('\/kaggle\/input\/INTC (1).csv',header=0,index_col='Date',parse_dates=True)","cffbdfad":"amd.head(10)","a6360c2a":"import pandas_datareader as pdr","3ea16c6f":"import datetime","d12204c6":"nvda=pdr.get_data_yahoo('NVDA',\n                       start=datetime.datetime(2000,1,1),\n                       end=datetime.datetime(2020,4,26))","7b342ac4":"qcom=pdr.get_data_yahoo('QCOM',\n                       start=datetime.datetime(2000,1,1),\n                       end=datetime.datetime(2020,4,26))","8b83af9f":"intc=pdr.get_data_yahoo('INTC',\n                       start=datetime.datetime(2000,1,1),\n                       end=datetime.datetime(2020,4,26))","10473dfc":"ibm=pdr.get_data_yahoo('IBM',\n                       start=datetime.datetime(2000,1,1),\n                       end=datetime.datetime(2020,4,26))","bc5eeeaf":"type(nvda)","6e9f85f5":"nvda.head(n=2)","9ea8a5c1":"ibm.tail()","e06df526":"ibm.describe()","45f7bce1":"nvda.columns","7d646c82":"nvda.index,amd.index","88203b50":"nvda.shape","f93de1a9":"import matplotlib.pyplot as plt\n%matplotlib inline","c27dda68":"import matplotlib.dates as mdates","13018c76":"plt.figure(figsize=(10,8))\nplt.plot(ibm.index,ibm['Adj Close'])\nplt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y'))\nplt.gca().xaxis.set_major_locator(mdates.YearLocator())\nplt.grid(True)\nplt.xticks(rotation=90)\nplt.show()","a7a687e3":"f,ax=plt.subplots(2,2,figsize=(15,15),sharex=True)\nf.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y'))\nf.gca().xaxis.set_major_locator(mdates.YearLocator())\nax[0,0].plot(nvda.index,nvda['Adj Close'],color='indigo')\nax[0,0].grid(True)\nax[0,0].tick_params(labelrotation=90)\nax[0,0].set_title('NVIDIA');\n\nax[0,1].plot(intc.index,intc['Adj Close'],color='teal')\nax[0,1].grid(True)\nax[0,1].tick_params(labelrotation=90)\nax[0,1].set_title('INTEL');\n\nax[1,0].plot(qcom.index,qcom['Adj Close'],color='cyan')\nax[1,0].grid(True)\nax[1,0].tick_params(labelrotation=90)\nax[1,0].set_title('QUAL COM');\n\nax[1,1].plot(amd.index,amd['Adj Close'],color='gray')\nax[1,1].grid(True)\nax[1,1].tick_params(labelrotation=90)\nax[1,1].set_title('AMD');","88098db6":"ibm_19=ibm.loc[pd.Timestamp('2019-01-01'):pd.Timestamp('2019-12-31')]\nplt.plot(ibm_19.index,ibm_19['Adj Close'])\nplt.grid(True)\nplt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m'))\nplt.gca().xaxis.set_major_locator(mdates.MonthLocator())\nplt.xticks(rotation=90)\nplt.show()","9b9ca659":"#downsampling\nf,ax=plt.subplots(2,2,figsize=(6,6),sharex=True,sharey=True)\nplt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m'))\nplt.gca().xaxis.set_major_locator(mdates.MonthLocator())\nnvda_19=nvda.loc[pd.Timestamp('2019-01-01'):pd.Timestamp('2019-12-31')]\nax[0,0].plot(nvda_19.index,nvda_19['Adj Close'],',',color='indigo')\nax[0,0].grid(True)\nax[0,0].tick_params(labelrotation=90)\nax[0,0].set_title('NVIDIA');\nintc_19=intc.loc[pd.Timestamp('2019-01-01'):pd.Timestamp('2019-12-31')]\nax[0,1].plot(intc_19.index,intc_19['Adj Close'],',',color='teal')\nax[0,1].grid(True)\nax[0,1].tick_params(labelrotation=90)\nax[0,1].set_title('INTEL');\nqcom_19=qcom.loc[pd.Timestamp('2019-01-01'):pd.Timestamp('2019-12-31')]\nax[1,0].plot(qcom_19.index,qcom_19['Adj Close'],',',color='cyan')\nax[1,0].grid(True)\nax[1,0].tick_params(labelrotation=90)\nax[1,0].set_title('QUAL COMM');\namd_19=amd.loc[pd.Timestamp('2019-01-01'):pd.Timestamp('2019-12-31')]\nax[1,1].plot(amd_19.index,amd_19['Adj Close'],',',color='gray')\nax[1,1].grid(True)\nax[1,1].tick_params(labelrotation=90)\nax[1,1].set_title('AMD');\n\n","74147ce1":"monthly_nvda_19=nvda_19.resample('4M').mean()\nplt.scatter(monthly_nvda_19.index,monthly_nvda_19['Adj Close'])\nplt.grid(True)\nplt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m'))\nplt.gca().xaxis.set_major_locator(mdates.MonthLocator())\nplt.xticks(rotation=90)\nplt.show()","b4220857":"f,ax= plt.subplots(2,2,figsize=(10,10),sharex=True,sharey=True)\nmonthly_nvda_19=nvda_19.resample('4M').mean()\nax[0,0].scatter(monthly_nvda_19.index,monthly_nvda_19['Adj Close'],color='indigo')\nax[0,0].grid(True)\nax[0,0].tick_params(labelrotation=90)\nax[0,0].set_title('NVIDIA');\nmonthly_intc_19=intc_19.resample('4M').mean()\nax[0,1].scatter(monthly_intc_19.index,monthly_intc_19['Adj Close'],color='teal')\nax[0,1].grid(True)\nax[0,1].tick_params(labelrotation=90)\nax[0,1].set_title('INTEL');\nmonthly_qcom_19=qcom_19.resample('4M').mean()\nax[1,0].scatter(monthly_qcom_19.index,monthly_qcom_19['Adj Close'],color='cyan')\nax[1,0].grid(True)\nax[1,0].tick_params(labelrotation=90)\nax[1,0].set_title('QUAL COMM');\nmonthly_amd_19=amd_19.resample('4M').mean()\nax[1,1].scatter(monthly_amd_19.index,monthly_amd_19['Adj Close'],color='gray')\nax[1,1].grid(True)\nax[1,1].tick_params(labelrotation=90)\nax[1,1].set_title('AMD');","62d8581f":"ibm_20=ibm.loc[pd.Timestamp('2020-01-01'):pd.Timestamp('2020-04-27')]","4cd537fa":"w_ibm_20=ibm_20.resample('W').mean()\nw_ibm_20.head()","ce43a7cf":"plt.plot(w_ibm_20.index,w_ibm_20['Adj Close'],'-o')\nplt.grid(True)\nplt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m-%d'))\nplt.gca().xaxis.set_major_locator(mdates.MonthLocator())\nplt.xticks(rotation=90)\nplt.show()","d11cc1bc":"nvda_20=nvda.loc[pd.Timestamp('2020-01-01'):pd.Timestamp('2020-04-27')]\nw_nvda_20=nvda_20.resample('W').mean()\nintc_20=intc.loc[pd.Timestamp('2020-01-01'):pd.Timestamp('2020-04-27')]\nw_intc_20=intc_20.resample('W').mean()\nqcom_20=qcom.loc[pd.Timestamp('2020-01-01'):pd.Timestamp('2020-04-27')]\nw_qcom_20=qcom_20.resample('W').mean()\namd_20=amd.loc[pd.Timestamp('2020-01-01'):pd.Timestamp('2020-04-27')]\nw_amd_20=amd_20.resample('W').mean()\nf,ax= plt.subplots(2,2,figsize=(10,10),sharex=True,sharey=True)\nax[0,0].plot(w_nvda_20.index,w_nvda_20['Adj Close'],'-o',color='indigo')\nax[0,0].grid(True)\nax[0,0].tick_params(labelrotation=90)\nax[0,0].set_title('NVIDIA');\nax[0,1].plot(w_intc_20.index,w_intc_20['Adj Close'],'-o',color='teal')\nax[0,1].grid(True)\nax[0,1].tick_params(labelrotation=90)\nax[0,1].set_title('INTEL');\nax[1,0].plot(w_qcom_20.index,w_qcom_20['Adj Close'],'-o',color='cyan')\nax[1,0].grid(True)\nax[1,0].tick_params(labelrotation=90)\nax[1,0].set_title('QUAL COMM');\nax[1,1].plot(w_amd_20.index,w_amd_20['Adj Close'],'-o',color='gray')\nax[1,1].grid(True)\nax[1,1].tick_params(labelrotation=90)\nax[1,1].set_title('AMD');\n","763f7564":"ibm['diff']=ibm['Open']-ibm['Close']\nibm_diff=ibm.resample('W').mean()\nibm_diff.tail(10)","6c861c2d":"plt.scatter(ibm_diff.loc['2020-01-01':'2020-04-27'].index,ibm_diff.loc['2020-01-01':'2020-04-27']['diff'])\nplt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m-%d'))\nplt.gca().xaxis.set_major_locator(mdates.MonthLocator())\nplt.xticks(rotation=90)\nplt.show()","1b9c109b":"nvda['diff']=nvda['Open']-nvda['Close']\nnvda_diff=nvda.resample('W').mean()\nplt.scatter(nvda_diff.loc['2020-01-01':'2020-04-27'].index,nvda_diff.loc['2020-01-01':'2020-04-27']['diff'],color='indigo')\nplt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m-%d'))\nplt.gca().xaxis.set_major_locator(mdates.MonthLocator())\nplt.xticks(rotation=90)\nplt.show()","4bbc8331":"intc['diff']=intc['Open']-intc['Close']\nintc_diff=intc.resample('W').mean()\nplt.scatter(intc_diff.loc['2020-01-01':'2020-04-27'].index,intc_diff.loc['2020-01-01':'2020-04-27']['diff'],color='teal')\nplt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m-%d'))\nplt.gca().xaxis.set_major_locator(mdates.MonthLocator())\nplt.xticks(rotation=90)\nplt.show()","0d020df6":"qcom['diff']=qcom['Open']-qcom['Close']\nqcom_diff=qcom.resample('W').mean()\nplt.scatter(qcom_diff.loc['2020-01-01':'2020-04-27'].index,qcom_diff.loc['2020-01-01':'2020-04-27']['diff'],color='cyan')\nplt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m-%d'))\nplt.gca().xaxis.set_major_locator(mdates.MonthLocator())\nplt.xticks(rotation=90)\nplt.show()","82425787":"amd['diff']=amd['Open']-amd['Close']\namd_diff=amd.resample('W').mean()\nplt.scatter(amd_diff.loc['2020-01-01':'2020-04-27'].index,amd_diff.loc['2020-01-01':'2020-04-27']['diff'],color='gray')\nplt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m-%d'))\nplt.gca().xaxis.set_major_locator(mdates.MonthLocator())\nplt.xticks(rotation=90)\nplt.show()","a129808b":"daily_close_ibm=ibm[['Adj Close']]\n#daily return\ndaily_pct_change_ibm=daily_close_ibm.pct_change()\ndaily_pct_change_ibm.fillna(0,inplace=True)\ndaily_pct_change_ibm.head()","324053e8":"daily_pct_change_ibm.hist(bins=50)\nplt.show()","66ed8013":"daily_close_nvda=nvda[['Adj Close']]\ndaily_pct_change_nvda=daily_close_nvda.pct_change()\ndaily_pct_change_nvda.fillna(0,inplace=True)\n\ndaily_close_intc=intc[['Adj Close']]\ndaily_pct_change_intc=daily_close_intc.pct_change()\ndaily_pct_change_intc.fillna(0,inplace=True)\n\ndaily_close_qcom=qcom[['Adj Close']]\ndaily_pct_change_qcom=daily_close_qcom.pct_change()\ndaily_pct_change_qcom.fillna(0,inplace=True)\n\ndaily_close_amd=amd[['Adj Close']]\ndaily_pct_change_amd=daily_close_amd.pct_change()\ndaily_pct_change_amd.fillna(0,inplace=True)\ndaily_pct_change_amd.head()","5e5c7a8a":"import seaborn as sns\nsns.set()","054f5551":"import seaborn as sns\nf,axes=plt.subplots(2,2,figsize=(12,7))\nsns.distplot(daily_pct_change_nvda['Adj Close'],color='indigo',ax=axes[0,0],axlabel='NVIDIA');\nsns.distplot(daily_pct_change_intc['Adj Close'],color='teal',ax=axes[0,1],axlabel='INTEL');\nsns.distplot(daily_pct_change_qcom['Adj Close'],color='cyan',ax=axes[1,0],axlabel='QUAL COMM');\nsns.distplot(daily_pct_change_amd['Adj Close'],color='gray',ax=axes[1,1],axlabel='AMD');","d30b41fa":"import numpy as np","fa15b2bc":"min_periods=75\n#calculating volatility\nvol=daily_pct_change_ibm.rolling(min_periods).std()*np.sqrt(min_periods)\nvol.fillna(0,inplace=True)\nvol.tail()","3206b3cf":"vol.plot(figsize=(10,8))\nplt.show()","c6bf220b":"ibm_adj_close_px=ibm['Adj Close']\nibm['42']=ibm_adj_close_px.rolling(window=40).mean()\nibm['252']=ibm_adj_close_px.rolling(window=252).mean()\nibm[['Adj Close','42','252']].plot(title=\"IBM\")\nplt.show()\nnvda_adj_close_px=nvda['Adj Close']\nnvda['42']=nvda_adj_close_px.rolling(window=40).mean()\nnvda['252']=nvda_adj_close_px.rolling(window=252).mean()\nnvda[['Adj Close','42','252']].plot(title=\"NVIDIA\")\nplt.show()\nintc_adj_close_px=intc['Adj Close']\nintc['42']=intc_adj_close_px.rolling(window=40).mean()\nintc['252']=intc_adj_close_px.rolling(window=252).mean()\nintc[['Adj Close','42','252']].plot(title=\"INTEL\")\nplt.show()\nqcom_adj_close_px=qcom['Adj Close']\nqcom['42']=qcom_adj_close_px.rolling(window=40).mean()\nqcom['252']=qcom_adj_close_px.rolling(window=252).mean()\nqcom[['Adj Close','42','252']].plot(title=\"QUAL COMM\")\nplt.show()\namd_adj_close_px=amd['Adj Close']\namd['42']=amd_adj_close_px.rolling(window=40).mean()\namd['252']=amd_adj_close_px.rolling(window=252).mean()\namd[['Adj Close','42','252']].plot(title=\"AMD\")\nplt.show()\n\n","1306f2d1":"ibm.loc['2020-01-01':'2020-04-27'][['Adj Close','42','252']].plot(title=\"IBM in 2020\");\nnvda.loc['2020-01-01':'2020-04-27'][['Adj Close','42','252']].plot(title=\"NVDA in 2020\");\nintc.loc['2020-01-01':'2020-04-27'][['Adj Close','42','252']].plot(title=\"INTEL in 2020\");\nqcom.loc['2020-01-01':'2020-04-27'][['Adj Close','42','252']].plot(title=\"QUAL COMM in 2020\");\namd.loc['2020-01-01':'2020-04-27'][['Adj Close','42','252']].plot(title=\"AMD in 2020\");","2f47a5b1":"> **Time Series Data** > as while investing, Time Series tracks the movement of stock price over a specified period of time","beddf598":"Overview and Outline\nIn this notebook we will cover \"Stock Market Data Analysis\" with python. We will use various libraries for successfully analysing the ongoing  stock market trends.\n\nObjective\nTo analyse the proit\/loss ratio of the stocks of various companies.\nTo compare the volatility of stocks of various companies.\nTo analyse the ongoing stock market trend.\n\n\n","bbdc9e86":"*This way I've successfully analysed the stock market data of companies \"INTEL\",\"IBM\",\"NVIDIA\",\"QUAL COMM\",\"AMD\"; thus making it easy to decide* \n                              **Where to invest?   How much to invest?   For how long to invest?** ","bc504bcf":"This plot shows the **Trends** as well as the seasonality for various companies during a specific period of time. where 'blue color' represents the Adjusted Close Value, 'Orange color' represents the short term window is more or less showing the monthly discrepency. So, if someone wants to invest in the stock on a monthly or quaterly basis then the person should follow the trend displayed in \"Orange color\".But if the investment is long term then \"Green color\" displays the long term trend.","7ef334f1":"Finding the TRENDS AND SEASONALITY (Rolling Means)","1037ad7a":"**VOLATILITY**\n"}}