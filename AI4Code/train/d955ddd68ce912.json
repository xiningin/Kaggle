{"cell_type":{"351eb229":"code","16396009":"code","c5460844":"code","3e8781a1":"code","8d223384":"code","8aaa8aab":"code","ebaf6a63":"code","551e9b07":"code","682ca74d":"code","fe25e9a6":"code","6e42fa2d":"code","4c98e45e":"code","cb8373ad":"code","3efe56cc":"code","0a27be88":"code","8016fd7e":"markdown","e502e688":"markdown"},"source":{"351eb229":"import numpy as np \nimport pandas as pd \nimport folium\nimport os\nimport requests, json, re, folium\nfrom bs4 import BeautifulSoup\nfrom folium.plugins import MarkerCluster","16396009":"data = pd.read_csv('..\/input\/co2-emissions-1960-2018\/CO2_Emissions_1960-2018.csv')\ndata","c5460844":"listC = []\nfor s in data['Country Name']:\n    if (s == 'Russian Federation'):\n        listC.append('Russia')\n    elif (s == 'United States'):\n        listC.append('United States of America')\n    elif ((s != 'France') and (s != 'Greenland') and (s != 'New Caledonia') and (s != 'Papua New Guinea') and (s != 'Puerto Rico') and (s != 'Vanuatu') and (s != \"Korea, Dem. People's Rep.\") and (s != 'World') and (s != 'South Africa')):\n        listC.append(str(s))","3e8781a1":"def mapStyle(col='1965'):\n    res = requests.get(\"https:\/\/raw.githubusercontent.com\/python-visualization\/folium\/master\/examples\/data\/world-countries.json\")\n    df = pd.DataFrame(json.loads(res.content.decode()))\n    df = df.assign(id=df[\"features\"].apply(pd.Series)[\"id\"], name=df[\"features\"].apply(pd.Series)[\"properties\"].apply(pd.Series)[\"name\"])\n    resp = requests.get(\"https:\/\/en.wikipedia.org\/wiki\/National_colours\",)\n    soup = BeautifulSoup(resp.content.decode(), \"html.parser\")\n                    \n    countries = listC[:]    \n    m = folium.Map(location = [0, 0], zoom_start=2, control_scale=True)\n    feature_group = folium.FeatureGroup(name = 'feature_group', show = False)\n    marker_cluster = MarkerCluster(name = 'cluster', popups = 'feature_group', show = False)\n    \n    for r in df.loc[df[\"name\"].isin(countries)].to_dict(orient=\"records\"):\n        lt = 0\n        ln = 0\n        if (len(r[\"features\"][\"geometry\"][\"coordinates\"][0][0]) == 2):\n            lt = r[\"features\"][\"geometry\"][\"coordinates\"][0][0][0]\n            ln = r[\"features\"][\"geometry\"][\"coordinates\"][0][0][1]\n            value = float(data[data[\"Country Name\"] == r['name']][col])\n            if (value > 1):\n                marker = folium.CircleMarker([ln, lt],popup = value,color = 'red',radius=2+((value-1)\/10))\n            else:\n                marker = folium.CircleMarker([ln, lt],popup = value,color = 'green',radius=2)\n        folium.GeoJson(r[\"features\"], name=r[\"name\"], tooltip=r[\"name\"]).add_to(m)\n        marker_cluster.add_child(marker)\n        feature_group.add_child(marker)\n    feature_group.add_to(m)\n    return m;","8d223384":"mapStyle(str(1965))","8aaa8aab":"mapStyle(str(1970))","ebaf6a63":"mapStyle(str(1975))","551e9b07":"mapStyle(str(1980))","682ca74d":"mapStyle(str(1985))","fe25e9a6":"mapStyle(str(1990))","6e42fa2d":"mapStyle(str(1995))","4c98e45e":"mapStyle(str(2000))","cb8373ad":"mapStyle(str(2005))","3efe56cc":"mapStyle(str(2010))","0a27be88":"mapStyle(str(2015))","8016fd7e":"## Thank you very much for reading.","e502e688":"# How else can you visualize data by year. With the help of maps, of course.\nBelow is just such a visualization for 1965, 1970, 1975, 1980, 1985, 1990, 1995, 2000, 2005, 2010, 2015. You can also expand their number."}}