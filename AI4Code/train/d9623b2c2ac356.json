{"cell_type":{"cf772abc":"code","16920bd4":"code","0a5a852c":"code","4fbabd5a":"code","c980fca4":"code","6afb428d":"code","238fabb9":"markdown","8c995fc7":"markdown","532e3d43":"markdown","f0460bf5":"markdown","b3655fd8":"markdown"},"source":{"cf772abc":"Cyclistic 300821\nUjjaval\n30\/08\/2021\n\nLoad the required library\nlibrary (tidyverse) \nlibrary (janitor) \nlibrary (lubridate) \nlibrary(dplyr) \nlibrary(geosphere)\nImport Previous 12 months data \nm1 <- read.csv (\u201c...\\202107-divvy-tripdata.csv\u201d) \nm2 <- read.csv (\u201c...\\202106-divvy-tripdata.csv\u201d) \nm3 <- read.csv (\u201c...\\202105-divvy-tripdata.csv\u201d) \nm4 <- read.csv (\u201c...\\202104-divvy-tripdata.csv\u201d) \nm5 <- read.csv (\u201c...\\202103-divvy-tripdata.csv\u201d) \nm6 <- read.csv (\u201c...\\202102-divvy-tripdata.csv\u201d) \nm7 <- read.csv (\u201c...\\202101-divvy-tripdata.csv\u201d) \nm8 <- read.csv (\u201c...\\202012-divvy-tripdata.csv\u201d) \nm9 <- read.csv (\u201c...\\202011-divvy-tripdata.csv\u201d) \nm10 <- read.csv (\u201c...\\202010-divvy-tripdata.csv\u201d) \nm11 <- read.csv (\u201c...\\202009-divvy-tripdata.csv\u201d) \nm12 <- read.csv (\u201c...\\202008-divvy-tripdata.csv\u201d)\nCombine 12 months data frames in one data frame & drop empty rows\ntrip_data <- rbind(m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12) trip_data <- janitor ::remove_empty(trip_data, which = c(\u201crows\u201d,\u201ccols\u201d)) trip_data <- drop_na(trip_data)\nPrint summary of data set \nprint(\u201c####### GLIMPSE #######\u201d) \nglimpse(trip_data) \nprint(\u201c####### SUMMARY #######\u201d) \nsummary(trip_data) \nConvert data type of columns started_at & ended_at to date-time format\ntrip_data$started_at <- lubridate::ymd_hms(trip_data$started_at)\ntrip_data$ended_at <- lubridate::ymd_hms(trip_data$ended_at)\n\nSeparate Columns of Month,Day,year,Day of week \n\ntrip_data$ymd <- as.Date(trip_data$started_at)\ntrip_data$month <- format(as.Date(trip_data$ymd), \"%m\")\ntrip_data$day <- format(as.Date(trip_data$ymd), \"%d\")\ntrip_data$year <- format(as.Date(trip_data$ymd), \"%Y\")\ntrip_data$day_of_week <- format(as.Date(trip_data$ymd), \"%A\")\n\n\nCalculate ride length & Distance \n\ntrip_data$ride_length <- difftime(trip_data$ended_at,trip_data$started_at)\n\nsummary(trip_data$ride_length)\ncount(trip_data,start_station_name,sort=TRUE)\n\ntrip_data <- trip_data [!(trip_data$start_station_name == \"HQ QR\" | trip_data$ride_length<0),]\n\ntrip_data$ride_distance <- distGeo(matrix(c(trip_data$start_lng, trip_data$start_lat), ncol = 2), matrix(c(trip_data$end_lng, trip_data$end_lat), ncol = 2))\ntrip_data$ride_distance <- trip_data$ride_distance\/1000\n\n","16920bd4":"ANALYSE \nwe plot avg distance & avg time by diffrent type of users\n\nuserType_means <- trip_data %>% group_by(member_casual) %>% summarise(mean_time = mean(ride_length),mean_distance = mean(ride_distance))\nmembervstime <- ggplot(userType_means) + geom_col(mapping=aes(x=member_casual,y=mean_time,fill=member_casual), show.legend = FALSE)+ labs(title = \u201cMean travel time by User type\u201d,x=\u201cUser Type\u201d,y=\u201cMean time in sec\u201d) plot(membervstime)\n","0a5a852c":"membervsdistance <- ggplot(userType_means) + geom_col(mapping=aes(x=member_casual,y=mean_distance,fill=member_casual), show.legend = FALSE)+ labs(title = \u201cMean travel distance by User type\u201d,x=\u201cUser Type\u201d,y=\u201cMean distance In Km\u201d) plot(membervsdistance)","4fbabd5a":"we check for number of rides over the weekdays\ntrip_data %>% \nmutate(weekday = wday(started_at, label = TRUE)) %>%\n group_by(member_casual, weekday) %>% \nsummarise(number_of_rides = n() ,average_duration = mean(ride_length),.groups = \u2018drop\u2019) %>% \narrange(member_casual, weekday) %>% \nggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) + geom_col(position = \u201cdodge\u201d) + labs(title = \u201cNumber of rides by User type during the week\u201d,x=\u201cDays of the week\u201d,y=\u201cNumber of rides\u201d,fill=\u201cUser type\u201d) + theme(legend.position=\u201ctop\u201d)\n","c980fca4":"Create a new data frame with only the rows with info in the \u201cbike type\u201d column\nwith_bike_type <- trip_data %>% filter(rideable_type==\u201cclassic_bike\u201d | rideable_type==\u201celectric_bike\u201d)\nCheck the bike type usage by user type\nwith_bike_type %>% \ngroup_by(member_casual,rideable_type) %>% \nsummarise(totals=n(), .groups=\u201cdrop\u201d) %>%\nggplot()+ geom_col(aes(x=member_casual,y=totals,fill=rideable_type), position = \u201cdodge\u201d) + labs(title = \u201cBike type usage by user type\u201d,x=\u201cUser type\u201d,y=NULL, fill=\u201cBike type\u201d) + scale_fill_manual(values = c(\u201cclassic_bike\u201d = \u201c#0759e8\u201d,\u201celectric_bike\u201d = \u201c#8bed4e\u201d)) + theme_minimal() + theme(legend.position=\u201ctop\u201d)\n","6afb428d":"Usage by both user types during a week\nwith_bike_type %>% \nmutate(weekday = wday(started_at, label = TRUE)) %>% group_by(member_casual,rideable_type,weekday) %>% \nsummarise(totals=n(), .groups=\u201cdrop\u201d) %>%\nggplot(aes(x=weekday,y=totals, fill=rideable_type)) + geom_col(, position = \u201cdodge\u201d) + facet_wrap(~member_casual) + labs(title = \u201cBike type usage by user type during a week\u201d,x=\u201cUser type\u201d,y=NULL) + scale_fill_manual(values = c(\u201cclassic_bike\u201d = \u201c#0759e8\u201d,\u201celectric_bike\u201d = \u201c#8bed4e\u201d)) + theme_minimal() + theme(legend.position=\u201ctop\u201d)\n","238fabb9":"![image.png](attachment:7ea9e190-69ac-4f65-8275-4c75396e7e00.png)","8c995fc7":"![image.png](attachment:e806b6bb-2504-4940-be54-da940c3ac217.png)","532e3d43":"![image.png](attachment:e54cbf5c-4c3f-4e07-b780-5bdba4fbfa21.png)","f0460bf5":"![image.png](attachment:8889891c-6fcc-416a-8f1d-80c379d21d35.png)","b3655fd8":"![image.png](attachment:02f77dca-48cc-41f1-b22a-5f973fa998e0.png)"}}