{"cell_type":{"df14d805":"code","a7f6af4f":"code","29943aea":"code","66409cf3":"code","160a53a0":"code","13d6d3c3":"code","3325509d":"code","996636ef":"code","f5e373e1":"code","0c4b503e":"code","92563a4c":"code","fb33a442":"code","efe986b2":"code","6aa37446":"markdown","f4bfae57":"markdown","64675baf":"markdown","473381bf":"markdown"},"source":{"df14d805":"import numpy as np\nimport pandas as pd\n\nimport re\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet, SGDRegressor, HuberRegressor","a7f6af4f":"data = pd.read_csv('..\/input\/beer-consumption-sao-paulo\/Consumo_cerveja.csv')","29943aea":"data","66409cf3":"data.info()","160a53a0":"data.isna().mean()","13d6d3c3":"def preprocess_inputs(df):\n    df = df.copy()\n    \n    # Drop missing rows\n    df = df.dropna(axis=0).reset_index(drop=True)\n    \n    # Replace , with . in numeric columns\n    for column in ['Temperatura Media (C)', 'Temperatura Minima (C)' ,'Temperatura Maxima (C)', 'Precipitacao (mm)']:\n        df[column] = df[column].apply(lambda x: np.float(re.sub(r',', '.', x)))\n    \n    # Create date features\n    df['Data'] = pd.to_datetime(df['Data'])\n\n    df['Month'] = df['Data'].apply(lambda x: x.month)\n    df['Day'] = df['Data'].apply(lambda x: x.day)\n    \n    df = df.drop('Data', axis=1)\n    \n    # Split df into X and y\n    y = df['Consumo de cerveja (litros)'].copy()\n    X = df.drop('Consumo de cerveja (litros)', axis=1).copy()\n    \n    # Scale X with a standard scaler\n    scaler = StandardScaler()\n    X = pd.DataFrame(scaler.fit_transform(X), columns=X.columns)\n    \n    return X, y","3325509d":"X, y = preprocess_inputs(data)","996636ef":"X","f5e373e1":"X.dtypes","0c4b503e":"y","92563a4c":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=123)","fb33a442":"models = {\n    '    Linear Regression': LinearRegression(),\n    '     Ridge Regression': Ridge(),\n    '     Lasso Regression': Lasso(),\n    'ElasticNet Regression': ElasticNet(),\n    '       SGD Regression': SGDRegressor(),\n    '     Huber Regression': HuberRegressor()\n}\n\nfor model in models.values():\n    model.fit(X_train, y_train)","efe986b2":"for name, model in models.items():\n    print(name + \" R^2 Score: {:.4f}\".format(model.score(X_test, y_test)))","6aa37446":"# Training","f4bfae57":"# Preprocessing","64675baf":"# Task for Today  \n\n***\n\n## Beer Consumption Prediction  \n\nGiven *data about beer consumption in S\u00e3o Paulo on different days of the year*, let's try to predict the **liters of beer** that will be consumed on a given day.  \n  \nWe will use a various forms of linear regression to make our predictions.","473381bf":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/c5EnOo27loE"}}