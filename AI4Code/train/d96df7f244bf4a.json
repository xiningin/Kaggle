{"cell_type":{"9d44bb65":"code","092002ee":"code","1b497253":"code","44f5996a":"code","c85ce926":"code","2d13c665":"code","8ce40e97":"code","8ff63ffb":"code","d7a193ee":"code","086cd8f5":"markdown","220a0526":"markdown","2d502549":"markdown","1f30fdde":"markdown","e57bdbe0":"markdown","92779c94":"markdown","eda04df4":"markdown","612f41ff":"markdown","ea87c74c":"markdown","23dec638":"markdown"},"source":{"9d44bb65":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","092002ee":"data = pd.read_csv('\/kaggle\/input\/diabetes\/diabetes.csv')\ndata.head()","1b497253":"not_zero = ['Glucose','BloodPressure','SkinThickness','Insulin','BMI']\n\nfor column in not_zero:\n    data[column] = data[column].replace(0,np.NaN)\n    mean = int(data[column].mean(skipna=True))\n    data[column] = data[column].replace(np.NaN,mean)\n    ","44f5996a":"X = data.iloc[:, 0:8]\ny = data['Outcome']\n\nX_train,X_test,y_train,y_test = train_test_split(X, y, test_size=0.2)","c85ce926":"import math\nmath.sqrt(len(y_test))","2d13c665":"knn = KNeighborsClassifier(n_neighbors=19, p=2, metric='euclidean')\nknn.fit(X_train,y_train)","8ce40e97":"y_pred = knn.predict(X_test)\ny_pred","8ff63ffb":"accuracy_score(y_pred,y_test)","d7a193ee":"prediction=knn.predict([[6,148.0,62.0,35.0,455.0,33.6,0.627,30]])\nif prediction ==1:\n    print(\"The person have Diabetes\")\nelse:\n    print(\"The person is not have Diabetes\")\nprediction","086cd8f5":"<h3>Remove zero values and Import the mean values<\/h3>","220a0526":"<h3>Evaluate the Score<\/h3>","2d502549":"<h4> '20'  is even number,  so we will choose odd number for near the 20.<br><br><br> K = 19 <\/h4><br><br>","1f30fdde":"<h3> Make a Prediction<\/h3>","e57bdbe0":"<h3> Predict the Values<\/h3>","92779c94":"<h3>Split the Dataset<\/h3>","eda04df4":"<br>\n<h2>Conclusion:<\/h2><br>\n    \n<h3> When insulin level is high, that person will be diagnosed with diabetes. So the prediction is correct.<\/h3> ","612f41ff":"<h3>Import the Dataset <\/h3>","ea87c74c":"<h3> Choose a value of 'K' <\/h3><br>\n<h4><ol><li>sqrt(n), Where 'n' is total number of data points<\/li><br>\n    <li>Odd value of 'K' is selected to avoid confusion between two classes of data<\/li><\/ol> <\/h4>","23dec638":"<h3>KNN - Algorithm<\/h3>"}}