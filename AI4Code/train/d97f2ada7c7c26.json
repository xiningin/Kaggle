{"cell_type":{"a8ffd63b":"code","054ce23b":"code","658f7a86":"code","e1fb60ff":"code","5b0d1d33":"code","4f6c95ee":"code","41d40a3d":"code","b127f2da":"code","4052946d":"code","efbdfaa1":"code","2b0d9298":"code","5470ec1b":"code","3b2587dc":"code","5735afde":"code","20daace0":"code","5b6cfce5":"code","07d6e220":"code","5918e891":"code","b494aa83":"code","a79ad6fc":"code","6d171db9":"code","bf775623":"markdown","bc167d59":"markdown","2b54ca46":"markdown","610d166d":"markdown"},"source":{"a8ffd63b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","054ce23b":"import pandas as pd\ndf=pd.read_csv('\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')","658f7a86":"df.head(5)","e1fb60ff":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","5b0d1d33":"df.info()","4f6c95ee":"df.describe()","41d40a3d":"sns.set_style('whitegrid')\nsns.displot(df['Age'],kde=True)\nplt.xlabel('AGE')\nplt.ylabel('Count')\nplt.title('destribution of Age',fontsize=12)","b127f2da":"sns.set_style('whitegrid')\nsns.displot(df['Annual Income (k$)'],kde=True)\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Count')\nplt.title('destribution of Annual Income ',fontsize=12)","4052946d":"sns.set_style('whitegrid')\nsns.displot(df['Spending Score (1-100)'],kde=True)\nplt.xlabel('Spending Score (1-100))')\nplt.ylabel('Count')\nplt.title('destribution of  Spending Score  ',fontsize=12)","efbdfaa1":"sns.countplot(x='Gender',data=df)","2b0d9298":"from scipy.cluster import hierarchy\nplt.figure(figsize=(12,5))\nz = hierarchy.linkage(df.iloc[:,3:5],method = 'ward')\ndandogram = hierarchy.dendrogram(z,p=30)\nplt.xlabel('coustomers')\nplt.ylabel('distance')\nplt.title('dandogram')","5470ec1b":"from sklearn.cluster import KMeans\nkm = KMeans(n_clusters=5)\nkm_fit = km.fit(df.iloc[:,3:5])\nlabel  =km.labels_","3b2587dc":"label1 = label.tolist()\ndic = {0:'r',1:'b',2:'y',3:'c',4:'g'}\ncolors = ([dic.get(n, n) for n in label1])\n\nplt.scatter(x=df.iloc[:,3].values,y=df.iloc[:,4].values,c=colors,label=dic)\nplt.legend()","5735afde":"df['label']=label ","20daace0":"sns.scatterplot(x = 'Annual Income (k$)',y = 'Spending Score (1-100)',hue=\"label\",  \n                 palette=['green','orange','brown','dodgerblue','red'], legend='full',data = df  ,s = 60 )","5b6cfce5":"cust1 = df[df['label']==0]\ncust2 = df[df['label']==1]\ncust3 = df[df['label']==2]\ncust4 = df[df['label']==3]\ncust5 = df[df['label']==4]","07d6e220":"print('number of customers in first group is :', len(cust1),'\\n')\nprint('they are ', cust1['CustomerID'].values,'\\n')\nprint('\\n-----------------')\n\n\nprint('number of customers in second group is :', len(cust2),'\\n')\nprint('they are ', cust2['CustomerID'].values,'\\n')\nprint('\\n-----------------')\n\n\nprint('number of customers in third group is :', len(cust3),'\\n')\nprint('they are ', cust3['CustomerID'].values,'\\n')\nprint('\\n-----------------')\n\nprint('number of customers in fourh group is :', len(cust4),'\\n')\nprint('they are ', cust3['CustomerID'].values,'\\n')\nprint('\\n-----------------')\n\nprint('number of customers in fifth group is :', len(cust5),'\\n')\nprint('they are ', cust3['CustomerID'].values,'\\n')\nprint('\\n-----------------')","5918e891":"#SERIES\n\ncust  = {'first':len(cust1),'second':len(cust2),'third':len(cust3),'fourth':len(cust4),'fifth':len(cust5)}\n\nx = pd.Series(cust,name='cluster')","b494aa83":"Customer_Segmentation = pd.DataFrame(data=x)","a79ad6fc":"Customer_Segmentation ","6d171db9":"#the best customers are cluster 'Second' & 'Fifth'\n\n\nsecond = pd.Series(df['Gender'][df['label']==2].value_counts(),name='second')\nfifth = pd.Series(df['Gender'][df['label']==4].value_counts(),name='fifth')\n\nCustomer_Segmentation_gender = pd.DataFrame((second,fifth))","bf775623":"\u0645\u0631\u062d\u0644\u0647 \u0627\u0648\u0644 \u0628\u0631\u0631\u0633\u06cc \u06a9\u0631\u062f\u0646 \u0646\u0645\u0648\u062f\u0627\u0631 \u0627\u0633\u062a \u06a9\u0647 \u067e\u0631\u0627\u06a9\u0646\u062f\u06af\u06cc \u0648 \u0641\u06cc\u0686\u0631\u0632\u0647\u0627\u06cc \u0622\u0646 \u0631\u0627 \u0628\u0631\u0633\u06cc \u06a9\u0646\u06cc\u0645","bc167d59":"# **Customer Segmentation**","2b54ca46":"**EDA**","610d166d":"# **Hierarchical clustering Method**"}}