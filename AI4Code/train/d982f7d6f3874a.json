{"cell_type":{"8cae293e":"code","9058d399":"code","92a6652d":"code","a168bf83":"code","19481750":"code","3c7d6aa4":"code","dda4306a":"code","fcbec49a":"code","98c7f6c8":"code","0ef3e823":"code","b391c699":"code","3e260867":"code","0961b615":"code","2bbe7284":"code","b9a32b0a":"code","6c7662bb":"code","03623561":"code","d2ff7b55":"code","ecda8083":"code","d72235d1":"code","67f3c43a":"code","a008a848":"code","8add125b":"code","d9a4aff1":"code","09165b12":"code","89d5d95e":"markdown","9183338d":"markdown","186c532b":"markdown"},"source":{"8cae293e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9058d399":"#Data Processing\nimport pandas as pd\nimport numpy as np\n\n#Data Visulaisation\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.express as px\n\nimport os","92a6652d":"def read_data(path,file):\n     return pd.read_csv(path+\"\/\"+file)\n    \npath=r'..\/input\/corona-virus-report'\nworld =read_data(path,'worldometer_data.csv')\nindia=read_data('..\/input\/covid19-in-india','covid_19_india.csv')\nstate=pd.read_csv(\"..\/input\/covid19-in-india\/StatewiseTestingDetails.csv\")","a168bf83":"state_clubbed = state.groupby('State').sum()","19481750":"state_clubbed.head()","3c7d6aa4":"state_clubbed['Negative'] = state_clubbed['TotalSamples'] - state_clubbed['Positive']\nstate_clubbed.head()","dda4306a":"state_clubbed = state_clubbed.drop(['negattive', 'Negattive'], 1)","fcbec49a":"state_clubbed.head()","98c7f6c8":"world.head()","0ef3e823":"india.head()","b391c699":"world.columns","3e260867":"india.columns","0961b615":"features=['TotalCases','TotalDeaths','TotalRecovered','ActiveCases']\n\n\nfor i in features:\n    fig=px.treemap(world.iloc[0:25],\n               values=i,\n               path=['Country\/Region'],\n               template='plotly_dark',\n               title=\"Tree Map depicting Impact of Covid-19 w.r.t {}\".format(i))\n    fig.show()","2bbe7284":"daily_records=read_data(path,'day_wise.csv')\ndaily_records.head()","b9a32b0a":"px.line(daily_records,\n       x='Date',\n       y=['Confirmed', 'Deaths', 'Recovered','Active'],\n       template='plotly_dark',\n       title='Daily trends of Covid-19 cases',\n       labels={'Date':'Month','value':'Statistics'})","6c7662bb":"pop_test_ratio=((world['TotalTests']\/world['Population'])*100).iloc[0:20]\n\nfig1=px.bar(world.iloc[0:20],\n      x='Country\/Region',\n      y=pop_test_ratio,\n      template='plotly_dark',\n      color='Country\/Region',\n      title='% of Population tested',\n      labels={'y':'Test to Population Ratio'},\n      text=pop_test_ratio,)\nfig1.update_traces(texttemplate='%{text:0.1fs%}', textposition='outside')\nfig1.update_xaxes(tickangle=270)\nfig1.show()","03623561":"fig2=px.bar(world.iloc[0:20][::-1],\n      y='Country\/Region',\n      x=['TotalCases','TotalRecovered', 'ActiveCases','TotalDeaths','Serious,Critical'],\n      template='plotly_dark',\n      title='Severly Hit Countries')\nfig2.update_xaxes(tickangle=270)\nfig2.show()","d2ff7b55":"px.pie(world.iloc[0:20],\n       names='Country\/Region',\n       values='TotalCases',\n      template='plotly_dark',\n      title='Distribution of Total Cases ')","ecda8083":"from plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\ngrouped_data=read_data(path,'full_grouped.csv')\ngrouped_data.head()\n\ndef country_visualisations(df,country):\n    data_group=df[df['Country\/Region']==country]\n    data=data_group.loc[:,['Date','Confirmed','Deaths','Recovered','Active']]\n    figure1=make_subplots(rows=1,cols=4,subplot_titles=('Confirmed','Active','Recovered','Deaths'))\n    \n    figure1.add_trace(go.Scatter(name='Confirmed',x=data['Date'],y=data['Confirmed']),row=1,col=1)\n    \n    figure1.add_trace(go.Scatter(name='Active',x=data['Date'],y=data['Active']),row=1,col=2)\n        \n    figure1.add_trace(go.Scatter(name='Recovered',x=data['Date'],y=data['Recovered']),row=1,col=3)\n    \n    figure1.add_trace(go.Scatter(name='Deaths',x=data['Date'],y=data['Deaths']),row=1,col=4)\n    \n    figure1.update_layout(height=500,\n                         width=2000,\n                         title_text='Recorded Cases in {}'.format(country),\n                         template='plotly_dark')\n    figure1.show()","d72235d1":"country_visualisations(grouped_data,'India')","67f3c43a":"from sklearn import model_selection\nstates_clubbed=state_clubbed[[\"TotalSamples\",\"Positive\"]]\npredict=\"Positive\"\nX=np.array(states_clubbed.drop(predict,1))\ny=np.array(states_clubbed[predict])\nX_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size=0.25)","a008a848":"from sklearn.linear_model import LinearRegression\nlinear = LinearRegression()\nlinear.fit(X_train,y_train)\nY_pred = linear.predict(X_test)","8add125b":"acc = linear.score(X_test, y_test)","d9a4aff1":"acc","09165b12":"acc_train = linear.score(X_train, y_train)\nacc_train","89d5d95e":"# Importing Libraries","9183338d":"# Reading DataSet","186c532b":"# Data Visualization"}}