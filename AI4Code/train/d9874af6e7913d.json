{"cell_type":{"47770dc6":"code","ddcccda0":"code","0b4e2a45":"code","5e3dfa2c":"code","89ec6d1f":"code","46531b5e":"code","5be6516a":"code","cfed5ab6":"code","34807f84":"code","a4d68968":"code","5758022d":"code","6a3ea5a5":"code","f864f4b3":"code","925cc849":"code","5f4913e8":"code","2ef9b56c":"code","f1ed68c5":"code","5147a666":"code","a1ef9369":"code","bfebf3ff":"code","84f9c3b1":"markdown","97de3090":"markdown","64009caa":"markdown","a462848f":"markdown","14caa2f5":"markdown","a303052e":"markdown","d57e5072":"markdown"},"source":{"47770dc6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom imblearn.over_sampling import SMOTE \nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\npd.pandas.set_option('display.max_columns', None)","ddcccda0":"data = pd.read_csv(\"..\/input\/aps-failure-at-scania-trucks-data-set\/aps_failure_training_set.csv\", na_values='na')\ndata.head()","0b4e2a45":"data['class'].value_counts()","5e3dfa2c":"plt.bar(list(data['class'].value_counts().keys()), data['class'].value_counts())","89ec6d1f":"data.isna().sum().sort_values(ascending=False)[:50]","46531b5e":"data.info()","5be6516a":"data = data.fillna(0)","cfed5ab6":"data.isna().sum()","34807f84":"data.isna().sum().sort_values(ascending=False)[:50]","a4d68968":"data['class'].unique()","5758022d":"le = LabelEncoder()\ndata['class'] = le.fit_transform(data['class'])","6a3ea5a5":"data['class'].value_counts() #neg =0 , pos =1","f864f4b3":"# oversampling\ny = data['class']\nX = data.drop('class',axis=1)\n\noversample = SMOTE()\nX, y = oversample.fit_resample(X, y)","925cc849":"y.value_counts()","5f4913e8":"#scale\nscaler = MinMaxScaler()\nX = pd.DataFrame(scaler.fit_transform(X), columns = list(X.columns))","2ef9b56c":"X.head()","f1ed68c5":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.50, random_state=42)","5147a666":"# SVM modeli\nsvc = SVC()\n# 5 fold Cross Validation\ncv_scores = cross_val_score(svc, X_train, y_train, cv=5)\n# sonuc\nprint(\"cv scorlari : \",cv_scores)\nprint('ortalama cv score : {}'.format(np.mean(cv_scores)))","a1ef9369":"X_new = SelectKBest(chi2, k=50).fit_transform(X_train, y_train)","bfebf3ff":"# SVM modeli\nsvc = SVC()\n# 5 fold Cross Validation\ncv_scores = cross_val_score(svc, X_new, y_train, cv=5)\n# sonuc\nprint(\"cv scorlari : \",cv_scores)\nprint('ortalama cv score : {}'.format(np.mean(cv_scores)))","84f9c3b1":"### select best 50 feature and fit model  with 5 fold","97de3090":"# Import Libs and Data","64009caa":"# Model","a462848f":"# Filled NaN Values","14caa2f5":"# Encoded","a303052e":"# Oversampling - Scale - TrainTestSplit","d57e5072":"### only SVM with 5 fold"}}