{"cell_type":{"1d30e29b":"code","3e87f95b":"code","29935c19":"code","34e5a886":"code","260d4763":"code","e48deff0":"code","afd75a68":"code","13ac8dcb":"code","9011b5fc":"code","264d960d":"code","20124b08":"code","ee3775dd":"code","0a295135":"code","38f77df9":"code","a1b231cd":"code","5d61901f":"code","9d92e273":"code","a96c3b33":"code","0de62552":"code","90a2b8f8":"markdown","d20c77dc":"markdown","cdc07522":"markdown","94e78901":"markdown","df89abb0":"markdown","1ec7e958":"markdown","49274c70":"markdown","8041e1a1":"markdown","68c967f7":"markdown","811680c6":"markdown","7c4d0fa4":"markdown"},"source":{"1d30e29b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3e87f95b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","29935c19":"df = pd.read_csv('\/kaggle\/input\/telco-customer-churn\/WA_Fn-UseC_-Telco-Customer-Churn.csv')\ndf.head()","34e5a886":"df.shape","260d4763":"sns.heatmap(df.isnull())","e48deff0":"df.dtypes","afd75a68":"from sklearn.preprocessing import LabelEncoder\n\nle = LabelEncoder()\ndf['Churn'] = le.fit_transform(df['Churn'])\ndf['Churn'].unique()","13ac8dcb":"df0 = df.drop(columns='Churn')\ntest = df['Churn']\ndf1 = pd.get_dummies(df0)\ndf2 = pd.concat([df0,df1], axis=1)\n\ntrain = df2.drop(columns=['customerID','gender','Partner','Dependents','PhoneService','MultipleLines','InternetService',\n                 'OnlineSecurity','OnlineBackup','DeviceProtection','TechSupport','StreamingTV','StreamingMovies',\n                 'Contract','PaperlessBilling','PaymentMethod','TotalCharges'], axis=1)\nprint(train.shape)\nprint(test.shape)","9011b5fc":"from sklearn.model_selection import train_test_split\n\nx_train,x_test,y_train,y_test = train_test_split(train,test, train_size=0.25, random_state=0)","264d960d":"print(x_train.shape)\nprint(x_test.shape)","20124b08":"from sklearn.svm import SVC\n\nmodel = SVC(C=0.1, gamma=0.001, kernel='rbf')\nmodel.fit(x_train,y_train)","ee3775dd":"y_pred = model.predict(x_test)","0a295135":"from sklearn import metrics\n\nprint('Accuracy Score:  ', metrics.accuracy_score(y_test,y_pred))\nprint('Confusion Matrix:  ', metrics.confusion_matrix(y_test,y_pred))","38f77df9":"from sklearn.ensemble import RandomForestRegressor\n\nrf = RandomForestRegressor()\nrf.fit(x_train,y_train)","a1b231cd":"y_predrf = rf.predict(x_test).astype(int)","5d61901f":"print('Accuracy Score:  ', metrics.accuracy_score(y_test,y_predrf))\nprint('Confusion Matrix:  ', metrics.confusion_matrix(y_test,y_predrf))","9d92e273":"scores = [['Support Vector Machine', 78.23],['Random Forest', 75.18]]\n\nacc_score = pd.DataFrame(scores, columns=['Algorithm','Accuracy Score'])\n\nacc_score","a96c3b33":"from sklearn.model_selection import GridSearchCV\n\nparam_grid = {'kernel':['poly','rbf'],\n              'C':[0.1,1,10],\n              'gamma':[1,0.1,0.01,0.001,0.0001]}\n\ngrid = GridSearchCV(model,param_grid)\ngrid.fit(x_train,y_train)","0de62552":"grid.best_params_","90a2b8f8":"## Accuracy Score comparison","d20c77dc":"### Loading the dataset","cdc07522":"### Evaluation","94e78901":"### Splitting the data set into training and testing data","df89abb0":"### Importing required libraries","1ec7e958":"### Encoding Churn column with LabelEncoder","49274c70":"### Applying Support Vector Machine (SVM) model","8041e1a1":"### Hyperparameter tuning","68c967f7":"### Exploratory Data Analysis (EDA)","811680c6":"### Applying Random Forest Model","7c4d0fa4":"### Prediction using testing set"}}