{"cell_type":{"c25ba5bd":"code","571df1cd":"code","cf8882b0":"code","8cda656b":"code","f09e51a9":"code","853ca78a":"code","b01ce7e4":"code","a4bb84f3":"code","a5f41d07":"code","7a74b065":"code","ad132930":"code","d6b82e4a":"code","a1bece86":"code","cb6f3d14":"code","ab3436bc":"code","04977949":"code","a6393c67":"code","fd6cfee9":"code","6d97ce2d":"markdown","1dc45b1a":"markdown"},"source":{"c25ba5bd":"# \u6570\u503c\u8ba1\u7b97\u76f8\u5173\u5305\u5bfc\u5165\nimport pandas as pd\nimport numpy as np\nimport random as rnd\n\n# \u53ef\u89c6\u5316\u76f8\u5173\u5305\u5bfc\u5165\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# \u673a\u5668\u5b66\u4e60\u76f8\u5173\u5305\u5bfc\u5165\nfrom sklearn.linear_model import LogisticRegression  # \u903b\u8f91\u56de\u5f52\nfrom sklearn.svm import SVC, LinearSVC  # \u7528\u4e8e\u5206\u7c7b\u7684\u652f\u6301\u5411\u91cf\u673a\nfrom sklearn.ensemble import RandomForestClassifier  # \u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\nfrom sklearn.neighbors import KNeighborsClassifier  # K\u8fd1\u90bb\u5206\u7c7b\u5668\nfrom sklearn.naive_bayes import GaussianNB  # \u9ad8\u65af\u6734\u7d20\u8d1d\u53f6\u65af\nfrom sklearn.linear_model import Perceptron  # \u611f\u77e5\u673a\nfrom sklearn.linear_model import SGDClassifier  # \u968f\u673a\u68af\u5ea6\u4e0b\u964d\u5206\u7c7b\u5668\nfrom sklearn.tree import DecisionTreeClassifier  # \u51b3\u7b56\u6811\u5206\u7c7b\u5668\n","571df1cd":"# \u67e5\u770b\u5f53\u524d\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n# \u8bfb\u53d6\u6570\u636e\u96c6\ntrain_df = pd.read_csv(r\"\/kaggle\/input\/titanic-dataset\/train.csv\")\ntest_df = pd.read_csv(r\"\/kaggle\/input\/titanic-dataset\/test.csv\")\ncombine = [train_df, test_df]","cf8882b0":"print(train_df.columns.values)  # \u67e5\u770b\u8bad\u7ec3\u96c6\u7684\u7279\u5f81\n# \u7c7b\u522b\u7279\u5f81\uff1a\n# Survived, Sex, Embarked\n# \u5e8f\u5217\u7279\u5f81\uff1a\n# Pclass\n# \u6570\u503c\u7279\u5f81\uff1a\n# \u8fde\u7eed\u7684: Age, Fare, \u79bb\u6563\u7684: SibSp, Parch","8cda656b":"# \u6d1e\u5bdf\u6570\u636e\u60c5\u51b5\nset(train_df[\"Sex\"].to_list())  # \u67e5\u770bSex\u7279\u5f81\u5217\u542b\u6709\u7684\u7c7b\u522b\n","f09e51a9":"# \u54ea\u4e9b\u7279\u5f81\u5305\u542b\u7a7a\u503c\uff1f\nfor cols in train_df.columns.values:\n    if sum(train_df[cols].isna()) > 0:\n        print(cols)","853ca78a":"train_df.info()\nprint('_' * 40)\ntest_df.info()","b01ce7e4":"# \u6570\u503c\u578b\u7279\u5f81\u7684\u6570\u636e\u5206\u5e03\u60c5\u51b5\uff08\u9ed8\u8ba4\uff09\ntrain_df.describe()","a4bb84f3":"# \u8ba1\u7b97\u79bb\u6563\u578b\u53d8\u91cf\u7684\u7edf\u8ba1\u7279\u5f81\ntrain_df.describe(include=['O'])","a5f41d07":"# \u8231\u4f4d\u4e0eSurvived\u7279\u5f81\u7684\u76f8\u5173\u6027\ntrain_df[['Pclass', 'Survived']].groupby(['Pclass'], as_index=False).mean().sort_values(by='Survived', ascending=False)\n# \u6027\u522b\u4e0eSurvived\u7279\u5f81\u7684\u76f8\u5173\u6027\ntrain_df[['Sex', 'Survived']].groupby(['Sex'], as_index=False).mean().sort_values(by='Survived', ascending=False)\n# sibsp\u4e0esurvived\u7279\u5f81\u7684\u76f8\u5173\u6027\ntrain_df[['SibSp', 'Survived']].groupby(['SibSp'], as_index=False).mean().sort_values(by='Survived', ascending=False)\n# Parch\u4e0eSurvived\u7279\u5f81\u7684\u76f8\u5173\u6027\ntrain_df[['Parch', 'Survived']].groupby(['Parch'], as_index=False).mean().sort_values(by='Survived', ascending=False)","7a74b065":"# \u901a\u8fc7\u53ef\u89c6\u5316\u7684\u65b9\u5f0f\uff0c\u786e\u5b9a\u76f8\u5173\u6027\ng = sns.FacetGrid(train_df, col='Survived')\ng.map(plt.hist, 'Age', bins=20)","ad132930":"# \u6570\u503c\u7279\u5f81\u5e74\u9f84\u4e0e\u5e8f\u5217\u7279\u5f81\u8231\u4f4d\u4e4b\u95f4\u7684\u5173\u7cfb\ngrid = sns.FacetGrid(train_df, col='Survived', row='Pclass', height=2.2, aspect=1.6)\ngrid.map(plt.hist, 'Age', alpha=0.5, bins=20)\ngrid.add_legend()","d6b82e4a":"grid = sns.FacetGrid(train_df, row='Embarked', height=2.2, aspect=1.6)\ngrid.map(sns.pointplot, 'Pclass', 'Survived', 'Sex', palette='deep')\ngrid.add_legend()","a1bece86":"grid = sns.FacetGrid(train_df, row='Embarked', col='Survived', size=2.2, aspect=1.6)\ngrid.map(sns.barplot, 'Sex', 'Fare', alpha=.5, ci=None)\ngrid.add_legend()","cb6f3d14":"# \u5220\u9664\u67d0\u4e9b\u7279\u5f81\nprint(\"Before\", train_df.shape, test_df.shape, combine[0].shape, combine[1].shape)\ntrain_df = train_df.drop(['Ticket', 'Cabin'], axis=1)  # Ticket\u662f\u590d\u5408\u6570\u636e\u7c7b\u578b\uff0c\u4e0d\u53ef\u7528\uff1bCabin\u7f3a\u5931\u503c\u592a\u591a\uff0c\u4e0d\u53ef\u7528\ntest_df = test_df.drop(['Ticket', 'Cabin'], axis=1)\nprint(\"After\", train_df.shape, test_df.shape, combine[0].shape, combine[1].shape)\n","ab3436bc":"# \u5206\u6790Name\u7279\u5f81\n\ntrain_df[\"Title\"] = train_df.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)\ntest_df[\"Title\"] = test_df.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)\n\npd.crosstab(train_df['Title'], train_df[\"Sex\"])","04977949":"\ntrain_df['Title'] = train_df['Title'].replace(['Lady', 'Countess','Capt', 'Col','Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\n\ntrain_df['Title'] = train_df['Title'].replace('Mlle', 'Miss')\ntrain_df['Title'] = train_df['Title'].replace('Ms', 'Miss')\ntrain_df['Title'] = train_df['Title'].replace('Mme', 'Mrs')\n    \ntrain_df[['Title', 'Survived']].groupby(['Title'], as_index=False).mean()\n\n\ntest_df['Title'] = test_df['Title'].replace(['Lady', 'Countess','Capt', 'Col','Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\n\ntest_df['Title'] = test_df['Title'].replace('Mlle', 'Miss')\ntest_df['Title'] = test_df['Title'].replace('Ms', 'Miss')\ntest_df['Title'] = test_df['Title'].replace('Mme', 'Mrs')","a6393c67":"# \u5c06\u7c7b\u522b\u8f6c\u4e3a\u5e8f\u5217\ntitle_mapping = {\"Mr\": 1, \"Miss\": 2, \"Mrs\": 3, \"Master\": 4, \"Rare\": 5}\ntrain_df['Title'] = train_df['Title'].map(title_mapping)\ntrain_df['Title'] = train_df['Title'].fillna(0)\n\ntest_df['Title'] = test_df['Title'].map(title_mapping)\ntest_df['Title'] = test_df['Title'].fillna(0)\n\ntrain_df.head()","fd6cfee9":"train_df = train_df.drop(['Name', 'PassengerId'], axis=1)\ntest_df = test_df.drop(['Name', 'PassengerId'], axis=1)\ncombine = [train_df, test_df]\ntrain_df.shape, test_df.shape","6d97ce2d":"1. \u54ea\u4e9b\u7279\u5f81\u662f\u590d\u5408\u6570\u636e\u7c7b\u578b\uff1fTicket\n2. \u54ea\u4e9b\u7279\u5f81\u5305\u542b\u62fc\u5199\u9519\u8bef\uff1f Name\n3. \u54ea\u4e9b\u7279\u5f81\u5305\u542b\u7a7a\u503c\uff1fAge\u3001Cabin\u3001Embarked","1dc45b1a":"# **\u4f5c\u8005\uff1a\u5218\u83bd\uff0c\u5c97\u4f4d\uff1a\u7b97\u6cd5\u5de5\u7a0b\u5e08\uff0c\u8054\u7cfb\u65b9\u5f0f\uff1alium_516@outlook.com**\n\u89e3\u51b3\u6b64\u7c7b\u95ee\u9898\uff0c\u4e00\u822c\u4f1a\u9075\u5faa\u4ee5\u4e0b\u6b65\u9aa4\uff1a\n* \u95ee\u9898\u5b9a\u4e49\uff1b\n* \u8bad\u7ec3\u6570\u636e\u548c\u6d4b\u8bd5\u6570\u636e\u7684\u83b7\u53d6\uff1b\n* \u6570\u636e\u51c6\u5907\u548c\u6570\u636e\u6e05\u6d17\uff1b\n* \u6570\u636e\u63a2\u67e5\uff1b\n* \u5efa\u6a21\uff0c\u9884\u6d4b\uff1b\n* \u53ef\u89c6\u5316\uff1b\n* \u63d0\u4ea4\u4efb\u52a1\u3002\n\n# \u95ee\u9898\u5b9a\u4e49\n> \u5df2\u77e5\u8bad\u7ec3\u96c6\u4e2d\u4e58\u5ba2\u6837\u672c\u6570\u636e\uff0c\u5305\u542b\u5b58\u6d3b\u548c\u6ca1\u6709\u5b58\u6d3b\u6807\u8bb0\uff1b\u7136\u540e\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\uff0c\u53bb\u9884\u6d4b\u6d4b\u8bd5\u96c6\u4e2d\u4e58\u5ba2\u662f\u5426\u5b58\u6d3b\u3002\n\n\u9664\u6b64\u4e4b\u5916\uff0c\u9700\u8981\u5173\u6ce8\u7684\u8981\u70b9\u6709\uff1a\n1. 1912 \u5e74 4 \u6708 15 \u65e5\uff0c\u5728\u5979\u7684\u5904\u5973\u822a\u671f\u95f4\uff0c\u6cf0\u5766\u5c3c\u514b\u53f7\u5728\u4e0e\u51b0\u5c71\u76f8\u649e\u540e\u6c89\u6ca1\uff0c2224 \u540d\u4e58\u5ba2\u548c\u8239\u5458\u4e2d\u6709 1502 \u4eba\u9047\u96be\u3002 \u7ffb\u8bd1\u6210 32% \u7684\u5b58\u6d3b\u7387\u3002\n2. \u6c89\u8239\u9020\u6210\u5982\u6b64\u5927\u7684\u751f\u547d\u635f\u5931\u7684\u539f\u56e0\u4e4b\u4e00\u662f\u6ca1\u6709\u8db3\u591f\u7684\u6551\u751f\u8247\u4f9b\u4e58\u5ba2\u548c\u8239\u5458\u4f7f\u7528\u3002\n3. \u5c3d\u7ba1\u5728\u6c89\u6ca1\u4e2d\u5e78\u5b58\u4e0b\u6765\u6709\u4e00\u4e9b\u8fd0\u6c14\u56e0\u7d20\uff0c\u4f46\u67d0\u4e9b\u4eba\u7fa4\u6bd4\u5176\u4ed6\u4eba\u66f4\u6709\u53ef\u80fd\u5e78\u5b58\u4e0b\u6765\uff0c\u4f8b\u5982\u5987\u5973\u3001\u513f\u7ae5\u548c\u4e0a\u5c42\u9636\u7ea7\u3002\n\n"}}