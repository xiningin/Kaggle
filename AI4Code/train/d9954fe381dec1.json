{"cell_type":{"759d48f6":"code","82be39f4":"code","0bf3c923":"code","8d126395":"code","cc7f23cc":"code","2d5fbdb3":"code","fedb21a8":"code","c265a122":"code","5f1097ef":"code","c0833504":"code","b540a827":"code","c0811c3d":"code","111d6311":"code","85dbaa77":"code","f069f4aa":"code","116f2f02":"code","50895074":"code","4a8c9875":"code","abbc7fd7":"code","d56192e0":"code","1b91d2b0":"code","950c2cc9":"code","2036a37f":"code","79bd23c4":"code","7ff04e91":"code","cf66546c":"markdown","c8b21ce9":"markdown","e5714e79":"markdown","dc197e94":"markdown","3ff0d55b":"markdown","fa5a7175":"markdown","a3e2c4e9":"markdown","5e503eb1":"markdown","8da23d0c":"markdown","259d8f95":"markdown","ff63133d":"markdown","0311fd8e":"markdown","2323359b":"markdown"},"source":{"759d48f6":"import tensorflow as tf\nimport pandas as pd\nimport numpy as np\nfrom tensorflow.keras.callbacks import ModelCheckpoint\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Conv2D,MaxPool2D,Flatten,Dropout,BatchNormalization,Activation\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport matplotlib.pyplot as plt\nfrom keras.preprocessing.image import load_img,img_to_array","82be39f4":"train_directory='..\/input\/100-bird-species\/train'\nval_directory='..\/input\/100-bird-species\/valid'\ntest_directory='..\/input\/100-bird-species\/test'","0bf3c923":"train_datagen=ImageDataGenerator(rescale=1\/255)\nval_datagen=ImageDataGenerator(rescale=1\/255)\ntest_datagen=ImageDataGenerator(rescale=1\/255)","8d126395":"train_generator=train_datagen.flow_from_directory(train_directory,\n                                                 target_size=(224,224),\n                                                 color_mode='rgb',\n                                                 class_mode='sparse',batch_size=256)\n\nval_generator=val_datagen.flow_from_directory(val_directory,\n                                                 target_size=(224,224),\n                                                 color_mode='rgb',\n                                                 class_mode='sparse',batch_size=256)\n\ntest_gemerator=test_datagen.flow_from_directory(test_directory,\n                                                 target_size=(224,224),\n                                                 color_mode='rgb',\n                                                 class_mode='sparse',batch_size=256)","cc7f23cc":"bird_dict = train_generator.class_indices","2d5fbdb3":"inv_bird_dict = {v: k.lower().capitalize() for k, v in bird_dict.items()}\ninv_bird_dict","fedb21a8":"from keras.applications import ResNet101V2\nconvlayer=ResNet101V2(input_shape=(224,224,3),weights='imagenet',include_top=False)\nfor layer in convlayer.layers:\n    layer.trainable=False","c265a122":"model=Sequential()\nmodel.add(convlayer)\nmodel.add(Dropout(0.5))\nmodel.add(Flatten())\nmodel.add(BatchNormalization())\nmodel.add(Dense(2048,kernel_initializer='he_uniform'))\nmodel.add(BatchNormalization())\nmodel.add(Activation('relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(1024,kernel_initializer='he_uniform'))\nmodel.add(BatchNormalization())\nmodel.add(Activation('relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(230,activation='softmax'))\nprint(model.summary())","5f1097ef":"opt=tf.keras.optimizers.Adam(lr=0.001)\nmodel.compile(loss='sparse_categorical_crossentropy',metrics=['accuracy'],optimizer=opt)","c0833504":"import os\ncheckpoint_path = \".\/training_1\/cp.ckpt\"\ncheckpoint_dir = os.path.dirname(checkpoint_path)\ncheckpoint = ModelCheckpoint(filepath=checkpoint_path, #'.\/' + 'TRAINING_{epoch:02d}\/KAGGLE_{epoch:02d}_{val_loss:.2f}_acc:{val_accuracy:.2f}',\n                             save_weights_only=True,\n                             monitor='val_accuracy', \n                             verbose=1, \n                             save_best_only=True)\n\nhistory=model.fit(train_generator,validation_data=val_generator,\n         epochs=5, callbacks=[checkpoint])","b540a827":"opt=tf.keras.optimizers.RMSprop(lr=0.0001)\nmodel.compile(loss='sparse_categorical_crossentropy',metrics=['accuracy'],optimizer=opt)\nhistory_1=model.fit(train_generator,validation_data=val_generator,\n         epochs=1, callbacks=[checkpoint])","c0811c3d":"plt.plot(history.history['accuracy'],c='red')\nplt.plot(history.history['val_accuracy'],c='green')\nplt.title('Accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend(['train','validation'],loc='lower right')","111d6311":"plt.plot(history.history['loss'],c='red')\nplt.plot(history.history['val_loss'],c='green')\nplt.title('Loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend(['train','validation'],loc='upper right')","85dbaa77":"model.evaluate(test_gemerator)","f069f4aa":"dic=train_generator.class_indices\nicd={k:v for v,k in dic.items()}\ndef output(location):\n    img=load_img(location,target_size=(224,224,3))\n    img=img_to_array(img)\n    img=img\/255\n    img=np.expand_dims(img,[0])\n    answer=model.predict_classes(img)\n    probability=round(np.max(model.predict_proba(img)*100),2)\n    #print ('Bird Is',icd[answer[0]], 'With probability',probability)\n    print (probability, ' % chances are there that the Bird Is',icd[answer[0]])","116f2f02":"img='..\/input\/anurag-mishra\/belted.jpg'\npic=load_img('..\/input\/anurag-mishra\/belted.jpg',target_size=(224,224,3))\nplt.imshow(pic)\noutput(img)","50895074":"img='..\/input\/fdjn-vfvjkfd-v\/hg.jpg'\npic=load_img('..\/input\/fdjn-vfvjkfd-v\/hg.jpg',target_size=(224,224,3))\nplt.imshow(pic)\noutput(img)","4a8c9875":"img='..\/input\/fj-fdjvdk-vmdvdjl\/bananan.jpg'\npic=load_img('..\/input\/fj-fdjvdk-vmdvdjl\/bananan.jpg',target_size=(224,224,3))\nplt.imshow(pic)\noutput(img)","abbc7fd7":"import os\nos.chdir(r'\/kaggle\/working')","d56192e0":"<a href=\".\/KAGGLE_01_0.16_acc:0.95.hdf5\"> Download File<\/a>","1b91d2b0":"import tensorflow as tf\nimport os\nfrom tensorflow.keras.layers import Input, Dense, Conv2D, Dropout\nfrom tensorflow.keras.layers import Flatten, BatchNormalization\nfrom tensorflow.keras.layers import MaxPooling2D, AveragePooling2D\nfrom tensorflow.keras.layers import concatenate, Activation\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.callbacks import ModelCheckpoint, EarlyStopping\nfrom tensorflow.keras.callbacks import ReduceLROnPlateau\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator, load_img, img_to_array\nfrom tensorflow.keras.utils import plot_model, to_categorical\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.applications.resnet50 import ResNet50\nfrom tensorflow.keras.applications import ResNet101V2\nfrom tensorflow.keras.models import Sequential\n\n\nconvlayer=ResNet101V2(input_shape=(224,224,3),weights='imagenet',include_top=False)\nmodel_resnet=Sequential()\nmodel_resnet.add(convlayer)\nmodel_resnet.add(Dropout(0.5))\nmodel_resnet.add(Flatten())\nmodel_resnet.add(BatchNormalization())\nmodel_resnet.add(Dense(2048,kernel_initializer='he_uniform'))\nmodel_resnet.add(BatchNormalization())\nmodel_resnet.add(Activation('relu'))\nmodel_resnet.add(Dropout(0.5))\nmodel_resnet.add(Dense(1024,kernel_initializer='he_uniform'))\nmodel_resnet.add(BatchNormalization())\nmodel_resnet.add(Activation('relu'))\nmodel_resnet.add(Dropout(0.5))\nmodel_resnet.add(Dense(230,activation='softmax'))\nopt=tf.keras.optimizers.Adam(lr=0.001)\nmodel_resnet.compile(loss='sparse_categorical_crossentropy',metrics=['accuracy'],optimizer=opt)\nlatest = tf.train.latest_checkpoint(checkpoint_dir)\nprint(latest)\nmodel_resnet.load_weights(latest)","950c2cc9":"model_resnet.evaluate(test_gemerator)","2036a37f":"latest = tf.train.latest_checkpoint(checkpoint_dir)\nlatest","79bd23c4":"os.listdir('.\/training_1')","7ff04e91":"!zip -zcvf outputname.zip .\/training_1","cf66546c":"### Belted Kingfisher","c8b21ce9":"# Importing Libraries","e5714e79":"<a href=\".\/KAGGLE_01_0.16_acc:0.95.hdf5\"> Download File<\/a>","dc197e94":"# Transfer Learning Using RESNET_101","3ff0d55b":"### BANANAQUIT","fa5a7175":"Function for predicting bird class","a3e2c4e9":"### ARARIPE MANAKIN ","5e503eb1":"### Training with lower learning rate for last iteration","8da23d0c":"# Prediction","259d8f95":"# Test Accuracy ","ff63133d":"# Loss Plot","0311fd8e":"# Classes of Birds ","2323359b":"# Accuracy Plot"}}