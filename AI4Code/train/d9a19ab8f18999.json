{"cell_type":{"e6481d18":"code","03610ddb":"code","a820f3f4":"code","0c4d358d":"code","019532a8":"code","aa9f11df":"code","bf3d7f52":"code","67dba822":"code","7277f890":"code","89a5b018":"code","34b3a466":"code","7b34181b":"code","3763d4ee":"code","fe9ab96f":"code","6263f6b8":"code","e016b953":"code","c32aaf68":"code","f7eda7bb":"code","bdbc510c":"code","ee7dac27":"code","2ae6e4b6":"code","96b6192b":"code","882889e0":"code","cd6e64d1":"code","92aa29f1":"code","1d478db8":"code","1ab59f08":"code","2f98f34b":"code","4f64fa08":"markdown","97aceee6":"markdown"},"source":{"e6481d18":"import warnings\nimport itertools\nimport numpy as np\nimport matplotlib.pyplot as plt\nwarnings.filterwarnings(\"ignore\")\nplt.style.use('fivethirtyeight')\nimport pandas as pd\nimport statsmodels.api as sm\nimport matplotlib\nmatplotlib.rcParams['axes.labelsize'] = 14\nmatplotlib.rcParams['xtick.labelsize'] = 12\nmatplotlib.rcParams['ytick.labelsize'] = 12\nmatplotlib.rcParams['text.color'] = 'k'","03610ddb":"import os\nprint(os.listdir(\"..\/input\/\"))","a820f3f4":"df = pd.read_csv(\"..\/input\/covid-19-mar14\/covid_19_data.csv\")\ndf","0c4d358d":"usa = df.loc[df['Country\/Region'] == 'US']\nusa.max()","019532a8":"usa","aa9f11df":"usa.min()","bf3d7f52":"confirmed_us = usa.groupby('ObservationDate')['Confirmed'].sum().reset_index()","67dba822":"confirmed_us = confirmed_us.set_index('ObservationDate')\nconfirmed_us.index","7277f890":"confirmed_us","89a5b018":"size = len(confirmed_us)\nus_change = [confirmed_us['Confirmed'][i]-confirmed_us['Confirmed'][i-1] for i in range(1,size)]","34b3a466":"confirmed_us.plot(figsize=(15, 6))\nplt.show()","7b34181b":"days=[x+1 for x in range(size-1)]\nplt.plot(days, us_change, color='red', linewidth=2)\nplt.show()","3763d4ee":"import pandas as pd  \nimport numpy as np  \nimport matplotlib.pyplot as plt  \nimport seaborn as seabornInstance \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\n%matplotlib inline","fe9ab96f":"X = np.asarray([x for x in range(len(us_change))]).reshape(-1,1)\ny = np.asarray(us_change).reshape(-1,1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","6263f6b8":"regressor = LinearRegression()  \nregressor.fit(X_train, y_train) #training the algorithm","e016b953":"#To retrieve the intercept:\nprint(regressor.intercept_)\n#For retrieving the slope:\nprint(regressor.coef_)","c32aaf68":"y_pred = regressor.predict(X_test)\n","f7eda7bb":"df = pd.DataFrame({'Actual': y_test.flatten(), 'Predicted': y_pred.flatten()})\ndf","bdbc510c":"df1 = df.head(25)\ndf1.plot(kind='bar',figsize=(16,10))\nplt.grid(which='major', linestyle='-', linewidth='0.5', color='green')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='black')\nplt.show()","ee7dac27":"plt.scatter(X_test, y_test,  color='gray')\nplt.plot(X_test, y_pred, color='red', linewidth=2)\nplt.show()","2ae6e4b6":"print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","96b6192b":"size = len(confirmed_us)\nX_pred = np.asarray([x for x in range(size,size+60)]).reshape(-1,1)","882889e0":"y_pred = regressor.predict(X_pred)","cd6e64d1":"#plot predictions for change of confirmed cases\nplt.scatter(X_train, y_train,  color='gray')\nplt.plot(X_pred, y_pred, color='red', linewidth=2)\nplt.xlabel('Nth Day of Coronavirus in US')\nplt.ylabel('Number of NEW Confirmed Cases(Daily)')\nplt.title('Predicted NEW confirmed coronavirus cases in US - rate of change')\nplt.show()","92aa29f1":"y_list=[]\ncumul_sum=0\nfor y in list(y_pred.flatten()):\n    cumul_sum+=y\n    y_list.append(cumul_sum)","1d478db8":"total_y = list(y_train.flatten())\ntotal_y.extend(y_list)\n","1ab59f08":"total_x = [x for x in range(len(total_y))]","2f98f34b":"#plot predictions for cumulative confirmed cases\nx_orig = [x for x in range(len(confirmed_us))]\nplt.scatter(x_orig, confirmed_us,  color='gray')\nplt.plot(total_x, total_y, color='red', linewidth=2)\nplt.xlabel('Nth Day of Coronavirus in US')\nplt.ylabel('Number of Confirmed Cases(Daily)')\nplt.title('Predicted confirmed coronavirus cases in US')\nplt.show()","4f64fa08":"# Introduction\n * Predict confirmed cases for United States using linear regression. First find the number of new cases daily and perform linear regression to predict the number of new cases and the total number of cases in the next 60 days. \n * This is done out of curiosity and this is highly inaccurate. \n * With this, I wanted to spark discussions for long term predictions for coronavirus. \n\n# Comparing it with Fbprophet\n * Please compare the model used in this study, linear regression, with fbprophet. Check out my other notebook:\nhttps:\/\/www.kaggle.com\/myunghosim\/covid19-60-day-predictions-for-us-using-fbprophet\n\n## questions\n * When will it reach the peak and stop spreading? \n * How long will it keep on spreading for how long? \n\n## references\n * linear regression\nhttps:\/\/towardsdatascience.com\/a-beginners-guide-to-linear-regression-in-python-with-scikit-learn-83a8f7ae2b4f\n * COVID19 dataset\n  - Johns Hopkins\n  https:\/\/github.com\/CSSEGISandData\/COVID-19\n  - Kaggle notebook by Andy yh\n https:\/\/www.kaggle.com\/andyyh\/coronavirus-analysis-and-predictions","97aceee6":"# linear regression"}}