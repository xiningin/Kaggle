{"cell_type":{"6d604860":"code","fea107ed":"code","d4d44842":"code","6e1aeac0":"code","e6fb0d28":"code","d683cff3":"code","7c9a6294":"code","8187effa":"code","ac63dfe5":"code","5fc489f6":"code","ed572e42":"code","2af0b62a":"code","15be96e6":"code","d62db338":"code","feaa2bad":"markdown","9fd33bfc":"markdown","0c93c379":"markdown","42b36b44":"markdown","cc9113cb":"markdown","8f1a5709":"markdown"},"source":{"6d604860":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n#Step1: Necessery imports\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nimport scipy as scipy\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport matplotlib.pyplot as plt\n\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n#Step2: Loading the data \n#Change the csv file for another brand\n#Added Data types for memory optimization and faster loading\ndata = pd.read_csv('\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv')\ndata.shape","fea107ed":"data.info()","d4d44842":"std = np.std(data)\nprint(std)\n\n\n","6e1aeac0":"cv = np.std(data) \/ np.mean(data)\nprint(cv)","e6fb0d28":"var_full = np.var(data)\nprint(var_full)","d683cff3":"#Step3:Describing the data\ndata.describe()","7c9a6294":"#Step3:Describing the data - finding the mode [most frequent]\ndata.mode()","8187effa":"fig = px.bar(data, y='Ladder score', x='Country name')\nfig.show();","ac63dfe5":"#correlate data\ncorr = data.corr()\n\n#using matplotlib to define the size\n\nplt.figure(figsize=(8, 8))\n\n#creating the heatmap with seaborn\nax = sns.heatmap(\n    corr, \n    vmin=-1, vmax=1, center=0,\n    cmap=sns.diverging_palette(20, 220, n=200),\n    square=True\n)\nax.set_xticklabels(\n    ax.get_xticklabels(),\n    rotation=45,\n    horizontalalignment='right'\n);","5fc489f6":"# Contrasting heatmap with seaborn\n\nsns.set_theme(style=\"dark\")\n\n\n# Compute the correlation matrix\ncorr = data.corr()\n\n# Generate a mask for the upper triangle\nmask = np.triu(np.ones_like(corr, dtype=bool))\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(8, 8))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(230, 20, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, mask=mask, cmap=cmap, vmin=-0.1, vmax=0.1, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","ed572e42":"corr = data.corr()\n\nmask = np.triu(np.ones_like(corr, dtype=np.bool))\ncorr = corr.mask(mask)\nfig = ff.create_annotated_heatmap(\n    z=corr.to_numpy().round(2),\n    x=list(corr.index.values),\n    y=list(corr.columns.values),       \n    xgap=3, ygap=3,\n    zmin=-1, zmax=1,\n    colorscale='fall',\n    colorbar_thickness=30,\n    colorbar_ticklen=3,\n)\nfig.update_layout(title_text='Correlation Matrix (impact relationship with numbers)',\n                  title_x=0.5,\n                  titlefont={'size': 20},\n                  width=800, height=800,\n                  xaxis_showgrid=False,\n                  xaxis={'side': 'bottom'},\n                  yaxis_showgrid=False,\n                  yaxis_autorange='reversed',                   \n                  paper_bgcolor=None,\n                  template=\"simple_white\"\n                  )\nfig.show()\n","2af0b62a":"sns.pairplot(data,palette='bright')","15be96e6":"sns.set(style=\"ticks\", color_codes=True)\ng = sns.pairplot(data, kind=\"reg\", plot_kws={'line_kws':{'color':'red'}})\nplt.show()","d62db338":"import pandas_profiling\nreport = pandas_profiling.ProfileReport(data)\nfrom IPython.display import display\ndisplay(report)","feaa2bad":"***Coefficient of Variation***","9fd33bfc":"# Correlation Influence Heatmaps","0c93c379":"***Standard deviation***","42b36b44":"***Variance***","cc9113cb":"#  PAIRPLOTS and Predictions","8f1a5709":"# Describing the data "}}