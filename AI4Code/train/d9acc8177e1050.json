{"cell_type":{"ee1cedc2":"code","4963b038":"code","127c4aeb":"code","a3de169a":"code","646950ce":"code","f888b6f2":"code","0052a50a":"code","6d52c327":"code","132de1ff":"code","d93d24c7":"code","e4532ec2":"code","d71328a3":"code","d58537b6":"code","2e91dc44":"code","6ff2e729":"code","7d544ecd":"code","a7246664":"code","f821703a":"code","4e590a96":"code","b5f3aad0":"code","2a28369d":"code","27cb533e":"code","90238da9":"code","d073f41c":"code","00869527":"code","a95ba9b0":"code","3cd5d2bc":"code","5f6cd730":"code","fb8b45d4":"code","af449d0a":"code","45063e28":"code","ed8efa1a":"code","b61fb757":"code","c89f61f2":"code","594e1d80":"code","76df7a37":"markdown"},"source":{"ee1cedc2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport warnings\n%matplotlib inline\n\nwarnings.filterwarnings('ignore')\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","4963b038":"train=pd.read_csv(\"..\/input\/train.csv\")\ntest=pd.read_csv(\"..\/input\/test.csv\")\ntrain.info()\n\n","127c4aeb":"train.describe()","a3de169a":"trainint=train.select_dtypes(include='int64')\ntrainint\ntrainobj=train.select_dtypes(include='object')\nobj_col=trainobj.columns\nint_col=trainint.columns\nint_col\n\nfor i in trainobj:\n    print(i,\": \",len(trainobj[i].unique()))\n    \nfor i in trainint:\n    print(i,\": \",len(trainint[i].unique()))\n\n","646950ce":"train.head(30)","f888b6f2":"train.shape\nShapeSplit=train.shape[0]\nShapeSplit","0052a50a":"all_data=pd.concat([train,test],axis=0)\nall_data.shape\n","6d52c327":"all_data['Embarked'].fillna(all_data['Embarked'].mode()[0], inplace = True)\nall_data = pd.concat((train, test))\n\ngot = all_data.Name.str.split(',').str[1]\nall_data['Title'] = pd.DataFrame(got).Name.str.split('\\s+').str[1]\nall_data.head()\n","132de1ff":"ax = plt.subplot()\nax.set_ylabel('Average Age')\nall_data.groupby('Title').mean()['Age'].plot(kind='bar', figsize=(13, 8), ax=ax)","d93d24c7":"AgeInput=pd.DataFrame(columns=[\"Id\",\"Age\",\"Titl\"])\n\nAgeInput['Age']=all_data['Age']\nAgeInput['Titl']=all_data['Title']\n\nAgeInput=AgeInput.groupby('Titl').mean()['Age']\nAgeInput=pd.DataFrame(data=AgeInput)\nAgeInput['Id']=range(0,len(AgeInput),1)\nAgeInput[\"Title\"]=AgeInput.index.values\nAgeInput=AgeInput.set_index(\"Id\")\nAgeInput\n","e4532ec2":"all_data=all_data.set_index(\"PassengerId\")","d71328a3":"all_data.shape\n","d58537b6":"for i in range(1, all_data.shape[0]+1):\n    if np.isnan(all_data[\"Age\"][i]):\n        for j in range(0, AgeInput.shape[0]):\n            if all_data.Title[i] == AgeInput[\"Title\"][j]:\n                all_data.Age[i] = AgeInput[\"Age\"][j]\n                ","2e91dc44":"all_data.head()","6ff2e729":"all_data['Embarked'].fillna(all_data['Embarked'].mode()[0], inplace = True)\n\nfrom sklearn.preprocessing import OneHotEncoder, LabelEncoder\nlabel = LabelEncoder()\nall_data['Sex_Code']      = label.fit_transform(all_data['Sex'])\nall_data['Embarked_Code']      = label.fit_transform(all_data['Embarked'])\n\nEmb_dum=pd.get_dummies(all_data[\"Embarked\"])\nall_data=pd.concat([all_data,Emb_dum],axis=1)","7d544ecd":"\nall_data=all_data.drop([\"Cabin\"],axis=1)\nall_data=all_data.drop([\"Name\"],axis=1)\nall_data=all_data.drop([\"Ticket\"],axis=1)\nall_data=all_data.drop([\"Sex\"],axis=1)\n#all_data=all_data.drop([\"Ticket\"],axis=1)\nall_data=all_data.drop([\"Embarked\"],axis=1)\n\n","a7246664":"all_data.head()\nall_data[\"FamilyS\"]=all_data[\"Parch\"]+all_data[\"SibSp\"]\nall_data.head()","f821703a":"#all_data=all_data.drop([\"Sex\"],axis=1)\nall_data=all_data.drop([\"Embarked_Code\"],axis=1)\n#all_data=all_data.drop([\"Embarked\"],axis=1)\n#all_data=all_data.drop([\"Title\"],axis=1)\nall_data.head()","4e590a96":"all_data[\"FamilyS\"]=all_data[\"Parch\"]+all_data[\"SibSp\"]\n","b5f3aad0":"all_data['isAlone']=(all_data['FamilyS']==0)\nall_data['isAlone']= label.fit_transform(all_data['isAlone'])\n\ntitle_dum=pd.get_dummies(all_data[\"Title\"])\nall_data=pd.concat([all_data,title_dum],axis=1)\nall_data.head()\n","2a28369d":"#sns.distplot(all_data[\"Age\"])\nall_data[\"Age\"].isna().count()\nall_data.info()\n#all_data[all_data['Age'] == isnan()].head(5)\nall_data[all_data['Age'].isnull()]","27cb533e":"train=all_data[:len(train)]\ntest=all_data[len(train):]","90238da9":"titanic_features = ['Age','Fare','Pclass','Sex_Code','C','Q','S','FamilyS',\"isAlone\",\"Capt.\",\"Col.\",\"Don.\",\"Dona.\",\"Dr.\",\"Jonkheer.\",\n                    \"Lady.\",\"Major.\",\"Master.\",\"Miss.\",\"Mlle.\",\"Mme.\",\"Mr.\",\"Mrs.\",\"Ms.\",\"Rev.\",\"Sir.\",\"the\"]\ny= train[\"Survived\"]\nX = train[titanic_features]\n\n","d073f41c":"from sklearn.model_selection import train_test_split\n\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1)","00869527":"from sklearn.linear_model import LogisticRegression\n\nlogmodel= LogisticRegression()\nlogmodel.fit(train_X,train_y)\npredictions = logmodel.predict(val_X)","a95ba9b0":"from sklearn.metrics import classification_report,confusion_matrix,mean_absolute_error,accuracy_score\n\n\nprint(classification_report(val_y,predictions))\nprint(confusion_matrix(val_y,predictions))\nprint(accuracy_score(val_y,predictions))\n","3cd5d2bc":"from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier()\nrf.fit(train_X,train_y)\npred=rf.predict(val_X)\nprint(classification_report(val_y,pred))\nprint(confusion_matrix(val_y,pred))\nprint(accuracy_score(val_y,pred))\n\n\n#print(\"%.4f\" % rf.oob_score_)","5f6cd730":"from sklearn.neighbors import KNeighborsClassifier\n\nknn= KNeighborsClassifier(n_neighbors=1)\nknn.fit(train_X,train_y)\npred= knn.predict(val_X)\n\nprint(confusion_matrix(val_y,pred))\nprint(classification_report(val_y,pred))","fb8b45d4":"test_X= test[titanic_features]\ntest_X[test_X['S'].isna()]","af449d0a":"test_X.to_csv('xx.csv',index=False)","45063e28":"\nnull_data = pd.DataFrame(test_X.isnull().sum().sort_values(ascending=False))[:50]\n\nnull_data.columns = ['Null Count']\nnull_data.index.name = 'Feature'\nnull_data.head()\ntest_X['Fare'][1044]=25\n#test_X[test_X['Fare'].isna()]","ed8efa1a":"predictions = logmodel.predict(test_X)","b61fb757":"predictions=predictions.astype(\"int\")\npredictions","c89f61f2":"output = pd.DataFrame({'PassengerId': test.index,\n                       'Survived': predictions.astype('int')})\noutput.to_csv('titanic_subm2.csv', index=False)","594e1d80":"print(os.listdir())","76df7a37":"**Itt J\u00e1rok**"}}