{"cell_type":{"72dcdd43":"code","b83bcc41":"code","6d88228b":"code","f84d9895":"code","276e5c99":"code","3d9dd6c5":"code","9db13f45":"code","7bcdc372":"code","ef877087":"code","f43881d1":"code","7f842b12":"code","4c1754f2":"code","1f85307f":"markdown","b837d5de":"markdown","81476867":"markdown","c8c84a51":"markdown","c4ea5dca":"markdown","b23e9fc7":"markdown","b9378238":"markdown","18980374":"markdown","14dca4c5":"markdown","bd29e16d":"markdown","cf5a564a":"markdown","e3f01de8":"markdown","7ea308f5":"markdown"},"source":{"72dcdd43":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","b83bcc41":"train = pd.read_csv('..\/input\/basketball\/basketball_stat.csv')","6d88228b":"train.head()","f84d9895":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.svm import SVC","276e5c99":"def svc_param_selection(X,y,nfolds) :\n    svm_parameters = [\n        {'kernel':['rbf'],\n         'gamma':[0.00001,0.0001,0.001,0.01,0.1,1],\n         'C':[0.01,0.1,1,10,100,1000]\n        }]\n    \n    \n    clf = GridSearchCV(SVC(), svm_parameters,cv=10)\n    clf.fit(X_train,y_train.values.ravel())\n    print(clf.best_params_)\n    \n    return clf","3d9dd6c5":"X_train = train[['3P','BLK']]\ny_train = train[['Pos']]","9db13f45":"clf = svc_param_selection(X_train,y_train.values.ravel(),10)","7bcdc372":"C_candidates = []\nC_candidates.append(clf.best_params_['C']*0.01)\nC_candidates.append(clf.best_params_['C'])\nC_candidates.append(clf.best_params_['C']*100)","ef877087":"gamma_candidates = []\ngamma_candidates.append(clf.best_params_['gamma']*0.01)\ngamma_candidates.append(clf.best_params_['gamma'])\ngamma_candidates.append(clf.best_params_['gamma']*100)","f43881d1":"X = train[['3P','BLK']]\nY = train['Pos'].tolist()","7f842b12":"position = []\nfor gt in Y :\n    if gt == 'C' :\n        position.append(0) # if position is center ,  0 labeling\n    else:\n        position.append(1) # if position is shooting guard , 1 labeling\n\n        classifiers =[]\n        \nfor C in C_candidates :\n    for gamma in gamma_candidates :\n        clf = SVC(C=C,gamma=gamma)\n        clf.fit(X,Y)\n        classifiers.append((C,gamma,clf)) # record trained model with parameters candidate\n\nplt.figure(figsize=(18,18))\nxx, yy = np.meshgrid(np.linspace(0,4,100),np.linspace(0,4,100))\n\nfor (k,(C,gamma,clf)) in enumerate(classifiers) :\n    Z = clf.decision_function(np.c_[xx.ravel(),yy.ravel()])\n    Z = Z.reshape(xx.shape)\n    \n    plt.subplot(len(C_canditates), len(gamma_candidates), k+1)\n    plt.title(\"gamma=10^%d, C=10^%d\" % (np.log10(gamma), np.log10(C)),\n             size='medium')\n    \n    plt.pcolormesh(xx,yy,-Z,cmap=plt.cm.RdBu)\n    plt.scatter(X['3P'],X['BLK'],c=position,cmap=plt.cm.RdBu_r,\n               edgecolors='k')","4c1754f2":"X_test = train[['3P','BLK']]\ny_test = train[['Pos']]\n\ny_true, y_pred = y_test, clf.predict(X_test)\n\ncomparison = pd.DataFrame({'prediction' : y_pred,\n                          'ground_truth': y_true.values.ravel()})\ncomparison","1f85307f":"<a id=\"four\"><\/a>\n\n# 4. Model Test\n\n<hr>","b837d5de":"<a id=\"one\"><\/a>\n\n# 1. Data Exploration\n\n<hr>","81476867":"Make candidates for visualization","c8c84a51":"* There are 2 parameters\n    1. Cost\n           adjust margin width, when cost is big, margin width is small\n    2. Gamma\n           adjust standard deviation variable, when gamma is small, data point impact is big, So makes smooth boundary ","c4ea5dca":"We try to predict position with 3P and BLK data","b23e9fc7":"## Feature explanation\n* Player = name\n* Pos = Position\n* 3p = 3 point\n* 2p = 2 point\n* TRB = Rebound\n* AST = Assist\n* STL = Steal\n* BLK = Block","b9378238":"<a id=\"two\"><\/a>\n\n# 2. Find Parameters\n\n<hr>","18980374":"We will use GridSearchCv from sklearn to get best parameters","14dca4c5":"## Reference\n\n[My first machine-learning\/deep-learning by Minsuk Heo](https:\/\/github.com\/wikibook\/machine-learning\/tree\/master\/data)\n\n[Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Support-vector_machine)","bd29e16d":"<a id=\"three\"><\/a>\n\n# 3. Check with visualization\n<hr>","cf5a564a":"# Support Vector Machine\n\n* Supervised learning\n* Support vector is data point to find decision boundary\n* To classify new data, check decision boundary\n* 2 blue data point, 1 green data point are support vector\n* Red line is decision boundary\n\n![1666.png](attachment:1666.png)","e3f01de8":"(2,2) chart is svm model with C and gamma we got from gridsearch\nWe can find out that classify well\n\nWhen we compare with row, we can check difference from gamma\nWhen we compare with columns, we can check difference from C","7ea308f5":"## Content\n1. [Data Exploration](#one)\n2. [Find Parameters](#two)\n3. [Check with visualization](#three)\n4. [Model Test](#four)\n\n<hr>\n"}}