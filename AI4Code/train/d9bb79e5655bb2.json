{"cell_type":{"339477f8":"code","bba19e54":"code","e753dfd7":"code","cdc4ad94":"code","46f066f5":"code","bcac1eb5":"code","40e79fe7":"code","57c2f4b6":"code","5713dfb5":"code","84a5c018":"code","a0b8eb7f":"code","5cac9af2":"code","67a38351":"code","f7b581a4":"code","03cf8762":"code","a2f646f2":"code","51c9daed":"code","7e9ace07":"code","3108c99e":"code","6e6c8c1f":"code","8982d177":"code","10667c08":"code","882a4002":"code","dd171681":"code","11a88f26":"code","0039c225":"code","47d5c676":"code","7c0ddf5a":"code","1363517c":"code","59964555":"code","58b8f93b":"code","0725702a":"code","a74f3722":"code","d3755cff":"code","8a4f1c47":"markdown","165d22ea":"markdown","0aeb743d":"markdown","e6b0eb24":"markdown","d536ff8b":"markdown","6ea7169f":"markdown","8d68bb51":"markdown","6499e300":"markdown","27524278":"markdown","38cdf329":"markdown","4175695f":"markdown","c157eeee":"markdown","7711dcb5":"markdown","1d638b35":"markdown","0f8de167":"markdown","d49425a7":"markdown","9ad9f0dc":"markdown","2da817fc":"markdown","6811d061":"markdown","d4ab4859":"markdown","77954d94":"markdown","fd3e747b":"markdown","e3ea9d78":"markdown","22edf3aa":"markdown","322e1afc":"markdown","26c93a6a":"markdown","99f1759b":"markdown","3068b6f4":"markdown","a6f0ad3d":"markdown","e658835a":"markdown","f2251eb0":"markdown","29cbee3d":"markdown","cc8eff3b":"markdown"},"source":{"339477f8":"import numpy as np\nimport pandas as pd\n\nimport urllib.request\nfrom PIL import Image\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error","bba19e54":"### Para que funcione necesitas bajarte los archivos de datos de Kaggle \ndf = pd.read_csv(\"diamonds_train.csv\", index_col=0)","e753dfd7":"df.info()","cdc4ad94":"df.head()","46f066f5":"# \u00bfqu\u00e9 opin\u00e1is?\n#S\u00ed, habr\u00eda que hacerlo","bcac1eb5":"# coger las columnas \"x\", \"y\", \"z\" tiene solo valor ilustrativo, NO LO COPI\u00c9IS\nX = np.array(df[[\"x\",\"y\",\"z\"]])\ny = np.array(df[\"price\"])\nX.shape","40e79fe7":"y.shape","57c2f4b6":"# \u00bfqu\u00e9 opin\u00e1is?\n# s\u00ed, el conjunto para predecir `diamonds_test.csv` tambi\u00e9n tendr\u00e1 que tener 3 columnas","5713dfb5":"# el test_size 0.20 y el random_state puede cambiar\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 42)","84a5c018":"X_train","a0b8eb7f":"model = LinearRegression()","5cac9af2":"model.fit(X_train, y_train)","67a38351":"predictions = model.predict(X_test)\nprint(predictions)","f7b581a4":"np.sqrt(mean_squared_error(y_test, predictions))","03cf8762":"X_pred = pd.read_csv(\"diamonds_test.csv\", index_col = 0)\nX_pred.head()","a2f646f2":"X_pred.shape","51c9daed":"predictions_submit = model.predict(X_pred)\npredictions_submit","7e9ace07":"# \u00bfQu\u00e9 opin\u00e1is?\n# S\u00ed","3108c99e":"X_pred = pd.read_csv(\"diamonds_test.csv\", index_col=0)\nX_pred.head()","6e6c8c1f":"# \u00bfQu\u00e9 opin\u00e1is?\n# En este caso, quitar todas las columnas, menos la x, y y z","8982d177":"X","10667c08":"X_pred = np.array(X_pred[['x','y','z']])","882a4002":"X_pred","dd171681":"# respuestas","11a88f26":"predictions_submit = model.predict(X_pred)\npredictions_submit","0039c225":"sample = pd.read_csv(\"sample_submission.csv\")","47d5c676":"sample.head()","7c0ddf5a":"sample.shape","1363517c":"submission = pd.DataFrame({\"id\": range(len(predictions_submit)), \"price\": predictions_submit})","59964555":"submission.head()","58b8f93b":"submission.shape","0725702a":"def chequeator(df_to_submit):\n    \"\"\"\n    Esta funci\u00f3n se asegura de que tu submission tenga la forma requerida por Kaggle.\n    \n    Si es as\u00ed, se guardar\u00e1 el dataframe en un `csv` y estar\u00e1 listo para subir a Kaggle.\n    \n    Si no, LEE EL MENSAJE Y HAZLE CASO.\n    \n    Si a\u00fan no:\n    - apaga tu ordenador, \n    - date una vuelta, \n    - enciendelo otra vez, \n    - abre este notebook y \n    - leelo todo de nuevo. \n    Todos nos merecemos una segunda oportunidad. Tambi\u00e9n t\u00fa.\n    \"\"\"\n    if df_to_submit.shape == sample.shape:\n        if df_to_submit.columns.all() == sample.columns.all():\n            if df_to_submit.id.all() == sample.id.all():\n                print(\"You're ready to submit!\")\n                submission.to_csv(\"submission.csv\", index = False) #muy importante el index = False\n                urllib.request.urlretrieve(\"https:\/\/i.kym-cdn.com\/photos\/images\/facebook\/000\/747\/556\/27a.jpg\", \"gfg.png\")     \n                img = Image.open(\"gfg.png\")\n                img.show()   \n            else:\n                print(\"Check the ids and try again\")\n        else:\n            print(\"Check the names of the columns and try again\")\n    else:\n        print(\"Check the number of rows and\/or columns and try again\")\n        print(\"\\nMensaje secreto de Clara: No me puedo creer que despu\u00e9s de todo este notebook hayas hecho alg\u00fan cambio en las filas de `diamonds_test.csv`. Lloro.\")\n","a74f3722":"help(chequeator)","d3755cff":"chequeator(submission)","8a4f1c47":"### 1. Definir X e y","165d22ea":"#### Aqu\u00ed encontrar\u00e1s todo lo que necesitas saber: https:\/\/www.kaggle.com\/t\/ab8726f0cfc84544abbae69a6be88071","0aeb743d":"**\u00bfPor qu\u00e9 da error?** ","e6b0eb24":"### 2. Dividir X_train, X_test, y_train, y_test","d536ff8b":"-----------------------------------------------------------------------------------------------------------------","6ea7169f":"**Truqui**: Carga X que debe estar actualmente actualizada a c\u00f3mo la usaste para entrenar a `model` y haz que `X_pred` sea igual. \u00a1Sin quitar filas!","8d68bb51":"Porque:\n    - SI EL ARRAY CON EL QUE HICISTEIS `.fit()` ERA DE 3 COLUMNAS, PARA `.predict()` DEBEN SER LAS MISMAS","6499e300":"#### \u00bfY si lo que hago es estandarizar los datos o hacer un encoding, tambi\u00e9n se lo tengo que hacer al test antes de predecir?","27524278":"### 4. Entrenar el modelo con X_train, y_train","38cdf329":"## Una vez listo el modelo, toca predecir con el dataset de predicci\u00f3n ","4175695f":"### 5. Predecir con el modelo ya entrenado con X_test","c157eeee":"#### \u00bfY si despu\u00e9s del an\u00e1lisis exploratorio de mis datos llego a la conclusi\u00f3n de que puedo predecir el precio solo con las columnas `x`, `y` y `z`, tambi\u00e9n aplica al test?","7711dcb5":"**Entonces, si al cargar los datos de train us\u00e9 `index_col=0` para que utilizara la primera columna del conjunto de datos como \u00edndice, \u00bftendr\u00e9 que hacerlo tambi\u00e9n para el conjunto `diamonds_test.csv`?**","1d638b35":"![image](competi.png)","0f8de167":"### 4. Mete tus predicciones en un dataframe. \n\nEn este caso, la **MISMA** forma que `sample_submission.csv`. ","d49425a7":"### 5. P\u00e1sale el CHEQUEATOR para comprobar que efectivamente est\u00e1 listo para subir a Kaggle.","9ad9f0dc":"**\u00bfQu\u00e9 m\u00e1s habr\u00e1 que quitar o hacer?**","2da817fc":"### 3. AHORA puedo hacer la predicci\u00f3n que ser\u00e1 lo que subir\u00e1s a Kaggle. ","6811d061":"### 3. Asignar el modelo (vac\u00edo) a una variable\nAqu\u00ed meter\u00edais los par\u00e1metros. \n\n**Consejo**: Usa GridSearch y vu\u00e9lvete loca o loco probando modelos e hiperpar\u00e1metros.","d4ab4859":"**Importante:**\n\n   - Si quitas columnas o creas columnas nuevas a partir de otras, o cualquier modificaci\u00f3n column-wise tendr\u00e1s que aplicarlo al dataset de `diamonds_test.csv` de cara a hacer la predicci\u00f3n.\n   - Si por lo contrario, decides por ejemplo, quitar los outliers o hacer un `dropna()`, o cualquier modificaci\u00f3n row-wise eso NO PODR\u00c1S (ni debes) aplicarlo al dataset de `diamonds_test.csv` de cara a hacer la predicci\u00f3n. \u00bfPor qu\u00e9? Porque si el conjunto de test tiene 50 observaciones (filas) la predicci\u00f3n se espera que tenga 50 filas.","77954d94":"## IMPORTANTE: APLICAR LO MISMO A ESTOS DATOS QUE HAY\u00c1IS APLICADO A LOS DATOS DE ENTRENAMIENTO\n\n- SI EL ARRAY CON EL QUE HICISTEIS `.fit()` ERA DE 4 COLUMNAS, PARA `.predict()` DEBEN SER LAS MISMAS\n- SI AL ARRAY CON EL QUE HICISTEIS `.fit()` LO NORMALIZASTEIS, PARA `.predict()` DEB\u00c9IS NORMALIZARLO\n- TODO IGUAL SALVO BORRAR FILAS, EL N\u00daMERO DE ROWS SE DEBE MANTENER EN ESTE SET, PUES LA PREDICCI\u00d3N DEBE TENER 13449 FILAS, SI O SI","fd3e747b":"### Pasos que si o si deb\u00e9is realizar para poder participar en la competici\u00f3n:","e3ea9d78":"### 6. Sacar m\u00e9tricas, valorar el modelo \n\nRecuerdo que en la competici\u00f3n se va a evaluar con la m\u00e9trica de RMSE.","22edf3aa":"**\u00bfDe d\u00f3nde saco `sample_submission.csv`?**","322e1afc":"Definici\u00f3n de **modelo que est\u00e1 listo**. \n\n_Tras hacer suficientes pruebas, analizar los datos, hacer feature engineering, probar diferentes modelos con diferentes par\u00e1metros, es con este con el que observo mejores m\u00e9tricas y menos overfitting. \u00a1Cuidado con el overfitting aqu\u00ed! Si vuestro modelo aprende muy bien de estos datos pero hay overfitting cuando le pasemos los datos desconocidos de `diamonds_test.csv` nos arriesgamos a que digamos, no salga lo esperado._","26c93a6a":"**\u00bfQu\u00e9 es lo que subir\u00e1s a Kaggle?**","99f1759b":"Siempre hay tiempo para una historia:\nhttps:\/\/catboost.ai\/docs\/concepts\/python-reference_catboostregressor.html","3068b6f4":"### 1. Entrena dicho modelo con TODOS tus datos de train, esto es con `diamonds_train.csv` al completo.\n\n**CON LAS TRANSFORMACIONES QUE LE HAYAS REALIZADO A `X` INCLU\u00cdDAS.**\n\nV\u00e9ase:\n- Estandarizaci\u00f3n\/Normalizaci\u00f3n\n- Eliminaci\u00f3n de Outliers\n- Eliminaci\u00f3n de columnas\n- Creaci\u00f3n de columnas nuevas\n- Gesti\u00f3n de valores nulos\n- Y un largo etc\u00e9tera de t\u00e9cnicas que como Data Scientist hayas considerado las mejores para tu dataset.","a6f0ad3d":"![](https:\/\/www.tierraljelechu.com\/web\/img\/wiki_up\/1.996-SorpresaDto.-1-Red.jpg)","e658835a":"### 2. Carga los datos de `diamonds_test.csv` para predecir.\n\n**\u00bfDe d\u00f3nde saco `diamonds_test.csv`?**","f2251eb0":"**\u00a1PERO! Para subir a Kaggle la predicci\u00f3n, \u00e9sta tendr\u00e1 que tener una forma espec\u00edfica y no valdr\u00e1 otra.**\n\nEn este caso, la **MISMA** forma que `sample_submission.csv`. ","29cbee3d":"![](https:\/\/www.tierraljelechu.com\/web\/img\/wiki_up\/1.996-SorpresaDto.-1-Red.jpg)","cc8eff3b":"-----------------------------------------------------------------"}}