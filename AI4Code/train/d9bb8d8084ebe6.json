{"cell_type":{"ace75f27":"code","309bd674":"code","22453287":"code","91f635fd":"code","12c5edf3":"code","1d0f3e92":"code","d9ecdba5":"code","cf2aefa0":"code","730fa788":"code","0334e349":"code","7d9ecfab":"code","4625f0a3":"code","46edd1e2":"code","6f29a999":"code","c2247d7a":"code","19e0e23d":"markdown"},"source":{"ace75f27":"\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom pathlib import Path\nfrom fastai import *\nfrom fastai.vision import *\nimport torch\n","309bd674":"# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","22453287":"data_folder = Path(\"..\/input\")\n#data_folder.joinpath('train').ls()","91f635fd":"train_df = pd.read_csv(\"..\/input\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/sample_submission.csv\")","12c5edf3":"test_img = ImageList.from_df(test_df, path=data_folder\/'test', folder='test')\ntrfm = get_transforms(do_flip=True, flip_vert=True, max_rotate=10.0, max_zoom=1.1, max_lighting=0.2, max_warp=0.2, p_affine=0.75, p_lighting=0.75)\ntrain_img = (ImageList.from_df(train_df, path=data_folder\/'train', folder='train')\n        .split_by_rand_pct(0.01)\n        .label_from_df()\n        .add_test(test_img)\n        .transform(trfm, size=128)\n        .databunch(path='.', bs=64, device= torch.device('cuda:0'))\n        .normalize(imagenet_stats)\n       )","1d0f3e92":"train_img.show_batch(rows=3, figsize=(7,6))","d9ecdba5":"learn = cnn_learner(train_img, models.densenet161, metrics=[error_rate, accuracy])","cf2aefa0":"#learn.lr_find()\n#learn.recorder.plot()","730fa788":"lr = 3e-02\nlearn.fit_one_cycle(5, slice(lr))","0334e349":"#learn.unfreeze()\n#learn.lr_find()\nlearn.recorder.plot()","7d9ecfab":"#learn.fit_one_cycle(1, slice(1e-06))","4625f0a3":"#interp = ClassificationInterpretation.from_learner(learn)\n#interp.plot_top_losses(9, figsize=(7,6))","46edd1e2":"preds,_ = learn.get_preds(ds_type=DatasetType.Test)","6f29a999":"test_df.has_cactus = preds.numpy()[:, 0]","c2247d7a":"test_df.to_csv('submission.csv', index=False)","19e0e23d":"This kernel is an adaptation of https:\/\/www.kaggle.com\/kenseitrg\/simple-fastai-exercise"}}