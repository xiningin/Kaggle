{"cell_type":{"0fd2efc3":"code","ffa43360":"code","14b3fcf3":"code","0c444798":"code","324e7608":"code","2f2e56f6":"code","1bf6bc09":"code","88598c92":"code","542adb20":"code","6e1db053":"code","c5060ee9":"code","7f21e0e9":"code","cd8fc2ef":"code","3309ba6d":"code","25ed56d6":"code","5a596c72":"code","2c20cb56":"code","10ab43d7":"code","36fb1564":"code","071708b6":"code","f0cb3861":"code","c158ffa8":"code","78508824":"code","59d05b1c":"code","658d06f9":"code","9bf8eec2":"code","ce8b1b63":"code","3b643409":"code","2e338762":"code","6352a60b":"code","fc361bf2":"code","bf83b875":"code","ba2ac7da":"code","5e667b46":"code","f51243f6":"code","fab50f52":"code","aa4a5ef1":"code","ef397544":"code","5b9eb0c7":"code","68c4b0ca":"code","facd797c":"code","c8ee6382":"code","b8c5c2e4":"markdown","d8cc4de8":"markdown","02a14a0b":"markdown"},"source":{"0fd2efc3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ffa43360":"df = pd.read_csv('..\/input\/diamonds\/diamonds.csv')","14b3fcf3":"df.head()","0c444798":"df.info()","324e7608":"df['cut'].unique()","2f2e56f6":"df['color'].unique()","1bf6bc09":"df['clarity'].unique()","88598c92":"df = df.drop('Unnamed: 0', axis=1)","542adb20":"df['price'] = df['price'].astype(float)","6e1db053":"df.info()","c5060ee9":"df = pd.get_dummies(df, drop_first=True)","7f21e0e9":"df.head()","cd8fc2ef":"import matplotlib.pyplot as plt\nimport seaborn as sns","3309ba6d":"sns.scatterplot(data=df, x='carat', y='price');","25ed56d6":"sns.scatterplot(data=df, x='depth', y='price');","5a596c72":"sns.scatterplot(data=df, x='table', y='price');","2c20cb56":"sns.displot(data=df, x='price')","10ab43d7":"sns.boxplot(data=df, x='price')","36fb1564":"df.describe()","071708b6":"df = df[df['price'] < 10493]","f0cb3861":"X = df.drop('price', axis=1)","c158ffa8":"y = df['price']","78508824":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\nfrom sklearn.linear_model import LinearRegression","59d05b1c":"train_rmse_erros = []\ntest_rmse_erros = []\n\nfor d in range(1,4):\n    \n    poly_converter = PolynomialFeatures(degree=d, include_bias=False)\n    poly_features = poly_converter.fit_transform(X)\n   \n    X_train, X_test, y_train, y_test = train_test_split(poly_features, y, test_size=0.3, random_state=101)\n    \n    model = LinearRegression()\n    model.fit(X_train,y_train)\n    \n    train_pred = model.predict(X_train)\n    test_pred = model.predict(X_test)\n    \n    train_rmse = np.sqrt(mean_squared_error(y_train, train_pred))\n    test_rmse = np.sqrt(mean_squared_error(y_test, test_pred))\n    \n    train_rmse_erros.append(train_rmse)\n    test_rmse_erros.append(test_rmse)","658d06f9":"train_rmse_erros","9bf8eec2":"test_rmse_erros","ce8b1b63":"plt.plot(range(1,4),train_rmse_erros,label='Train RMES' )\nplt.plot(range(1,4),test_rmse_erros,label='Test RMES' )\nplt.xlabel('Degree of Poly')\nplt.ylabel('RMSE')\nplt.legend();","3b643409":"polynomial_converter = PolynomialFeatures(degree=2, include_bias=False)","2e338762":"polynomial_converter.fit(X)","6352a60b":"poly_features = polynomial_converter.transform(X)","fc361bf2":"X_train, X_test, y_train, y_test = train_test_split(poly_features, y, test_size=0.3, random_state=101)","bf83b875":"model = LinearRegression()","ba2ac7da":"model.fit(X_train,y_train)","5e667b46":"y_pred = model.predict(X_test)","f51243f6":"MSE = mean_squared_error(y_test, y_pred)","fab50f52":"RMSE = np.sqrt(MSE)","aa4a5ef1":"RMSE","ef397544":"residual = y_test - y_pred","5b9eb0c7":"sns.scatterplot(x=y_test, y=residual)\nplt.axhline(y=0, color='red', ls='--')","68c4b0ca":"sns.displot(residual, bins=100, kde=True)","facd797c":"from sklearn.metrics import r2_score","c8ee6382":"r2_score(y_test, y_pred)","b8c5c2e4":"The diamond prices are affected not just by the features related in this data set, but there is another ones that have high influence over the final price, what are responsible to create the price outliers. Removing these outliers become the model able to predict the final price.","d8cc4de8":"The best polynomial degree to avoid overfitting is 2","02a14a0b":"Removing outliers 1.5 * iqr = 10493"}}