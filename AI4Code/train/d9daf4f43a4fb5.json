{"cell_type":{"9b67650d":"code","1adbb5b0":"code","24aa69db":"code","bfd4e4b1":"code","08f592d6":"code","7d779d66":"code","aed94bcd":"code","4955810a":"code","453ddab1":"code","5620ca0e":"code","b2094501":"code","848ed4c1":"code","6f958827":"code","ddbb4c72":"code","1da92876":"code","b882ca72":"code","2afee6c6":"code","70644a19":"code","408bc8d1":"code","92591b40":"code","296b8c8c":"code","e62065ce":"code","799aafe6":"code","51effb70":"code","0da0553f":"code","dfd50afd":"code","4b025924":"code","f3f6b39a":"code","ed24e2bb":"code","9eb966bf":"code","e6e24810":"code","435a4ca3":"code","12af6293":"code","08af30fa":"code","d42d6e7a":"code","0d4c494a":"code","8dc0ff5c":"code","2e6c9039":"code","d13a60c2":"code","cefdab14":"code","c752d1af":"code","65950f9d":"code","d700bb64":"code","3e1fffc9":"code","29a71cc2":"code","377c5fa4":"code","80298be6":"code","4ebdd804":"code","ab3b405b":"code","20650ae3":"markdown","80b687d7":"markdown","7b9a6c99":"markdown","89ec0705":"markdown","373e4a79":"markdown","7fcc57af":"markdown","e343681b":"markdown","5f6136ed":"markdown","2408006a":"markdown","47594179":"markdown","a2e63fe8":"markdown","f04d1085":"markdown"},"source":{"9b67650d":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","1adbb5b0":"df = pd.read_csv(\"..\/input\/kidneydisease\/kidneydisease.csv\",index_col='id')","24aa69db":"col_dict = {\"bp\": \"blood_pressure\",\n              \"sg\": \"specific_gravity\",\n              \"al\": \"albumin\",\n              \"su\": \"sugar\",\n              \"rbc\": \"red_blood_cells\",\n              \"pc\": \"pus_cell\",\n              \"pcc\": \"pus_cell_clumps\",\n              \"ba\": \"bacteria\",\n              \"bgr\": \"blood_glucose_random\",\n              \"bu\": \"blood_urea\",\n              \"sc\": \"serum_creatinine\",\n              \"sod\": \"sodium\",\n              \"pot\": \"potassium\",\n              \"hemo\": \"haemoglobin\",\n              \"pcv\": \"packed_cell_volume\",\n              \"wc\": \"white_blood_cell_count\",\n              \"rc\": \"red_blood_cell_count\",\n              \"htn\": \"hypertension\",\n              \"dm\": \"diabetes_mellitus\",\n              \"cad\": \"coronary_artery_disease\",\n              \"appet\": \"appetite\",\n              \"pe\": \"pedal_edema\",\n              \"ane\": \"anemia\"}\n","bfd4e4b1":"df = df.rename(columns=col_dict)","08f592d6":"df.head()","7d779d66":"df.info()","aed94bcd":"df.describe().transpose()","4955810a":"# here 'ckd\/t' values are only 2,so we will drop them or replace with ckd.\ndf['classification'].value_counts()","453ddab1":"# ckdt = df[df['classification'] == \"ckd\\t\" ].index\n# df = df.drop(ckdt,axis=0)\ndf['classification'] = df['classification'].replace(to_replace='ckd\\t',value='ckd')","5620ca0e":"# Also 'dm' has some values with minimum count,so we will also replace them.\ndf['diabetes_mellitus'].value_counts()","b2094501":"df['diabetes_mellitus'] = df['diabetes_mellitus'].replace(to_replace={'\\tno': 'no', '\\tyes': 'yes', ' yes': 'yes'})","848ed4c1":"df['diabetes_mellitus'].value_counts()","6f958827":"df['Target'] = df['classification'].map({'ckd':1,'notckd':0})","ddbb4c72":"#we will see,is there any corelation between target values?\nmatrix = np.triu(df.corr())\nplt.figure(figsize=(6,4),dpi=150)\nsns.heatmap(df.corr(),annot=True,annot_kws={'size':5},cmap=\"YlGnBu\",mask=matrix);","1da92876":"# here 'pcv','wc','rc' are object types\ndf.select_dtypes('object')","b882ca72":"# so we will convert them into floats\ndf[\"red_blood_cell_count\"] = pd.to_numeric(df.red_blood_cell_count, errors='coerce')\ndf[\"packed_cell_volume\"] = pd.to_numeric(df.packed_cell_volume, errors='coerce')\ndf[\"white_blood_cell_count\"] = pd.to_numeric(df.white_blood_cell_count, errors='coerce')","2afee6c6":"sns.pairplot(df[[\"specific_gravity\",\"packed_cell_volume\",\"red_blood_cell_count\",\"blood_glucose_random\",\"albumin\",\"classification\"]],hue='classification')","70644a19":"# Percentage of missing data\npercent_nan = 100*df.isnull().sum() \/ len(df)\npercent_nan = percent_nan[percent_nan > 0].sort_values()\npercent_nan","408bc8d1":"# Missing data. So,around 37% of 'rbc' is missing!\nplt.figure(figsize=(6,4),dpi=150)\nsns.barplot(x=percent_nan.index,y=percent_nan)\nplt.xticks(rotation=90);","92591b40":"# filling the missing 'age' values\ndf['age'] = df['age'].replace(np.NaN,df['age'].mean())","296b8c8c":"# drop all rows having NaN values to all columns\ndf = df.dropna(how='all')","e62065ce":"# we will fill the missing values of 'pcc','ba','htn','dm','cad','appet','pe','ane' using fill na\nlist1 =[\"pus_cell_clumps\",\"bacteria\",\"hypertension\",\"diabetes_mellitus\",\n        \"coronary_artery_disease\",\"appetite\",\"pedal_edema\",\"anemia\"]\ndf[list1] = df[list1].fillna(method='pad')","799aafe6":"# we will fill the missing values of 'bp','sg','al','su','bgr','bu','sc','hemo','wc','pot','sod' using SimpleImputer\nfrom sklearn.impute import SimpleImputer\nimputer = SimpleImputer(strategy='mean',missing_values=np.nan)","51effb70":"my_list = [\"blood_pressure\",\"specific_gravity\",\"albumin\",\"sugar\",\"blood_glucose_random\",\n           \"blood_urea\",\"serum_creatinine\",\"haemoglobin\",\"white_blood_cell_count\",\"potassium\",\"sodium\"]\ndf[my_list] = imputer.fit_transform(df[my_list])","0da0553f":"# as 'pc' has higher count of 'normal', fill the missings with it\ndf[\"pus_cell\"].value_counts()","dfd50afd":"df[\"pus_cell\"] = df[\"pus_cell\"].fillna(df[\"pus_cell\"].value_counts().index[0])","4b025924":"# filling the missings of 'pcv' by using groupby\ndf[\"packed_cell_volume\"] = df.groupby([\"pus_cell_clumps\",\"pus_cell\"])[\"packed_cell_volume\"].transform(lambda val:val.fillna(val.mean()))","f3f6b39a":"# rbc is categorical column and it as around 37% of data missing,\ndf['red_blood_cells'].value_counts() # we can see that 'normal' is off majority count","ed24e2bb":"# so we will fill na values with 'normal'\ndf[\"red_blood_cells\"] = df[\"red_blood_cells\"].fillna('normal')","9eb966bf":"# Now remaining column with missing data is 'rc'\n# here 'rc' has better corelation with 'hemo'\nsns.scatterplot(data=df,x=\"haemoglobin\",y=\"red_blood_cell_count\",hue='classification');","e6e24810":"# again we will fill values using groupby\ndf[\"red_blood_cell_count\"] = df.groupby(\"haemoglobin\")[\"red_blood_cell_count\"].transform(lambda val:val.fillna(val.mean()))","435a4ca3":"df = df.drop('Target',axis=1)","12af6293":"# Still there are some missing values of 'rc' ,so we drop those rows\ndf = df.dropna()\nlen(df)","08af30fa":"from sklearn.model_selection import train_test_split","d42d6e7a":"X = df.drop('classification',axis=1)\nX = pd.get_dummies(X,drop_first=True)\ny = df['classification']","0d4c494a":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","8dc0ff5c":"y_test.shape","2e6c9039":"# we will import Classification Algorithms\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.ensemble import RandomForestClassifier","d13a60c2":"# we will scale the data \nfrom sklearn.preprocessing import StandardScaler","cefdab14":"scaler = StandardScaler()","c752d1af":"# Only fit data to X_train\nX_train_scaled = scaler.fit_transform(X_train)","65950f9d":"X_test_scaled = scaler.transform(X_test)","d700bb64":"# import metrics to check performance\nfrom sklearn.metrics import confusion_matrix,classification_report,accuracy_score","3e1fffc9":"# we will create a function, so we can check our model easily on different algorithmns\ndef report(model):\n    pred = model.predict(X_test_scaled)\n    print(classification_report(y_test,pred))\n    print(confusion_matrix(y_test,pred))\n    print(\"accuracy score: \" ,accuracy_score(y_test,pred)*100)","29a71cc2":"# LogisticRegression\nlog_model = LogisticRegression(solver='liblinear')\nlog_model.fit(X_train_scaled,y_train)\nreport(log_model)\n","377c5fa4":"# Support Vector Machine\nsvc_model =SVC()  #kernel={'linear', 'poly', 'rbf', 'sigmoid'}\nsvc_model.fit(X_train_scaled,y_train)\nreport(svc_model)","80298be6":"# K nearest Neighbour\nknn_model = KNeighborsClassifier()\nknn_model.fit(X_train_scaled,y_train)\nreport(svc_model)","4ebdd804":"# Naive Bayes\nnb_model = GaussianNB()\nnb_model.fit(X_train_scaled,y_train)\nreport(nb_model)","ab3b405b":"# we will not use scaled data for RandomForestClassifier\nrf_model = RandomForestClassifier(criterion ='gini', max_depth =12, max_features = 'auto', n_estimators = 120)\nrf_model.fit(X_train,y_train)\nrf_pred = rf_model.predict(X_test)\nprint(classification_report(y_test,rf_pred))\nprint(confusion_matrix(y_test,rf_pred))\nprint(\"accuracy score: \",accuracy_score(y_test,rf_pred)*100)","20650ae3":"### Data","80b687d7":"### we will see some pairplot of features who are corelated with each other","7b9a6c99":"### Imports","89ec0705":"## Feature Enginnering\n### Missing Data","373e4a79":"## Machine Learning","7fcc57af":"## Exploratory Data Analysis and Visualization","e343681b":"## Attribute Information :\n \t1.Age(numerical)\n  \t  \tage in years\n \t2.Blood Pressure(numerical)\n\t       \tbp in mm\/Hg\n \t3.Specific Gravity(nominal)\n\t  \tsg - (1.005,1.010,1.015,1.020,1.025)\n \t4.Albumin(nominal)\n\t\tal - (0,1,2,3,4,5)\n \t5.Sugar(nominal)\n\t\tsu - (0,1,2,3,4,5)\n \t6.Red Blood Cells(nominal)\n\t\trbc - (normal,abnormal)\n \t7.Pus Cell (nominal)\n\t\tpc - (normal,abnormal)\n \t8.Pus Cell clumps(nominal)\n\t\tpcc - (present,notpresent)\n \t9.Bacteria(nominal)\n\t\tba  - (present,notpresent)\n \t10.Blood Glucose Random(numerical)\t\t\n\t\tbgr in mgs\/dl\n \t11.Blood Urea(numerical)\t\n\t\tbu in mgs\/dl\n \t12.Serum Creatinine(numerical)\t\n\t\tsc in mgs\/dl\n \t13.Sodium(numerical)\n\t\tsod in mEq\/L\n \t14.Potassium(numerical)\t\n\t\tpot in mEq\/L\n \t15.Hemoglobin(numerical)\n\t\themo in gms\n \t16.Packed  Cell Volume(numerical)\n \t17.White Blood Cell Count(numerical)\n\t\twc in cells\/cumm\n \t18.Red Blood Cell Count(numerical)\t\n\t\trc in millions\/cmm\n \t19.Hypertension(nominal)\t\n\t\thtn - (yes,no)\n \t20.Diabetes Mellitus(nominal)\t\n\t\tdm - (yes,no)\n \t21.Coronary Artery Disease(nominal)\n\t\tcad - (yes,no)\n \t22.Appetite(nominal)\t\n\t\tappet - (good,poor)\n \t23.Pedal Edema(nominal)\n\t\tpe - (yes,no)\t\n \t24.Anemia(nominal)\n\t\tane - (yes,no)\n \t25.Class (nominal)\t\t\n\t\tclass - (ckd,notckd)\n\nMissing Attribute Values: Yes(Denoted by \"?\")\n\nClass Distribution: ( 2 classes)\n    \t\tClass \t  Number of instances\n    \t\tckd          \t  250\n    \t\tnotckd       \t  150   \n     ","5f6136ed":"### Extraction of Features and Labels from Dataset","2408006a":"### so, we can see that all the algorithms we used are good for this data set.\n## Thank You\n\n\n","47594179":"### Dealing with missing data","a2e63fe8":"## Early stage of Indians Chronic Kidney Disease(CKD)**\n  \nSource Information: \n\t\t\tDr.P.Soundarapandian.M.D.,D.M\n\t\t\t(Senior Consultant Nephrologist), \n\t\t\tApollo  Hospitals, \n\t\t\tManagiri,\n\t\t\tMadurai Main Road, \n\t\t\tKaraikudi,\n\t\t\tTamilnadu,\n\t\t\tIndia.\n\nCreator:\n\t\t\tL.Jerlin Rubini(Research Scholar)\n\t\t\tAlagappa University,\n\t\t\tEmailId   :jel.jerlin@gmail.com\n\t\t\tContactNo :+91-9597231281\n\nGuided by: \n\t\t\tDr.P.Eswaran Assistant Professor,\n\t\t\tDepartment of Computer Science and Engineering,\n\t\t\tAlagappa University,\n\t\t\tKaraikudi,\n\t\t\tTamilnadu,\n\t\t\tIndia.\n\t\t\tEmailid:eswaranperumal@gmail.com\n\nDate     : July 2015\n\n\n\nNumber of Instances:  400 (250 CKD, 150 notckd)\n\nNumber of Attributes: 24 + class = 25 ( 11  numeric ,14  nominal) \n\n\n\t\n\n","f04d1085":"## Relevant Information:\n\t\t\tage\t\t-\tage\t\n\t\t\tbp\t\t-\tblood pressure\n\t\t\tsg\t\t-\tspecific gravity\n\t\t\tal\t\t-   \talbumin\n\t\t\tsu\t\t-\tsugar\n\t\t\trbc\t\t-\tred blood cells\n\t\t\tpc\t\t-\tpus cell\n\t\t\tpcc\t\t-\tpus cell clumps\n\t\t\tba\t\t-\tbacteria\n\t\t\tbgr\t\t-\tblood glucose random\n\t\t\tbu\t\t-\tblood urea\n\t\t\tsc\t\t-\tserum creatinine\n\t\t\tsod\t\t-\tsodium\n\t\t\tpot\t\t-\tpotassium\n\t\t\themo\t\t-\themoglobin\n\t\t\tpcv\t\t-\tpacked cell volume\n\t\t\twc\t\t-\twhite blood cell count\n\t\t\trc\t\t-\tred blood cell count\n\t\t\thtn\t\t-\thypertension\n\t\t\tdm\t\t-\tdiabetes mellitus\n\t\t\tcad\t\t-\tcoronary artery disease\n\t\t\tappet\t\t-\tappetite\n\t\t\tpe\t\t-\tpedal edema\n\t\t\tane\t\t-\tanemia\n\t\t\tclass\t\t-\tclass\t"}}