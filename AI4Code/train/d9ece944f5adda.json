{"cell_type":{"a75d9046":"code","a20d6446":"code","0649d11b":"code","379fc8c0":"code","e5a597ca":"code","4257989d":"markdown"},"source":{"a75d9046":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom tpot import TPOTClassifier\nfrom sklearn.datasets import load_digits\nfrom sklearn.model_selection import train_test_split\nimport sklearn.metrics\nimport os\n\n# Any results you write to the current directory are saved as output.\nimport timeit \n\npd.options.display.max_columns = 500\npd.options.display.width = 500","a20d6446":"digits = load_digits()\nX_train, X_test, y_train, y_test = train_test_split(digits.data, digits.target,\n                                                    train_size=0.75, test_size=0.25, random_state=50)","0649d11b":"tpot = TPOTClassifier(verbosity=3, \n                      scoring=\"accuracy\", \n                      random_state=50,  \n                      n_jobs=-1, \n                      generations=20, \n                      periodic_checkpoint_folder=\"intermediate_algos\",\n                      population_size=60,\n                      early_stop=10)\ntimes = []\nscores = []\nwinning_pipes = []\n\nfor x in range(1):\n    start_time = timeit.default_timer()\n    tpot.fit(X_train, y_train)\n    elapsed = timeit.default_timer() - start_time\n    times.append(elapsed)\n    winning_pipes.append(tpot.fitted_pipeline_)\n    scores.append(tpot.score(X_test, y_test))\n    tpot.export('tpot_mnist_pipeline1.py')\ntimes = [time\/60 for time in times]\nprint('Times:', times)\nprint('Scores:', scores)   \nprint('Winning pipelines:', winning_pipes)","379fc8c0":"plt.bar(range(len(scores)), scores)\nplt.title('Accuracy on 25% Test Set')\nplt.ylabel('Accuracy Score')\nplt.xlabel('Winning Model')\nplt.ylim((.95, 1))\nplt.show()","e5a597ca":"plt.bar(range(len(times)), times)\nplt.title('Time to Search and Train Models')\nplt.ylabel('Time in Minutes')\nplt.xlabel('Winning Model')\nplt.show()","4257989d":"# TPOT Automated ML Exploration with MNIST Digit Classification\n## By Jeff Hale\n\nThis is my experimentation with the TPOT automated machine learning algorithm with the MNIST Digit Classification classification task. For more information see [this Medium article](https:\/\/medium.com\/p\/4c063b3e5de9\/) I wrote discussing TPOT. "}}