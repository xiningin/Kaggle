{"cell_type":{"38bd521b":"code","406a1bb3":"code","7b21144f":"code","c6ad83b9":"code","6bc1a7c5":"code","af743751":"code","b2bae6ef":"code","54c212b4":"code","86021ddd":"code","78155ff9":"code","6d0d49c7":"code","568a6829":"code","94af14cf":"code","79486737":"code","5d32b295":"code","e93563eb":"code","0109f154":"markdown","83f657ce":"markdown"},"source":{"38bd521b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/pickle-ieee'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","406a1bb3":"train = pd.read_pickle('\/kaggle\/input\/pickle-ieee\/Train.pkl')\ntest = pd.read_pickle('\/kaggle\/input\/pickle-ieee\/Test.pkl')","7b21144f":"y = train['isFraud']\ndel train['isFraud']","c6ad83b9":"import lightgbm as lgbm","6bc1a7c5":"from sklearn.model_selection import RandomizedSearchCV","af743751":"params = {\n    'num_leaves': [500,600,700,800],\n    'feature_fraction': list(np.arange(0.1,0.5,0.1)),\n    'bagging_fraction': list(np.arange(0.1,0.5,0.1)),\n    'min_data_in_leaf': [100,120,140,160],\n    'learning_rate': [0.05],\n    'reg_alpha': list(np.arange(0.1,0.5,0.1)),\n    'reg_lambda': list(np.arange(0.1,0.5,0.1)),\n}","b2bae6ef":"model = lgbm.LGBMClassifier(random_state=42,metric='auc',verbosity=-1,objective='binary',max_depth=-1)","54c212b4":"grid = RandomizedSearchCV(model,param_distributions=params,n_iter=15,cv=3,scoring='roc_auc')","86021ddd":"from sklearn.model_selection import train_test_split","78155ff9":"X_train, X_test, y_train, y_test = train_test_split(\n    train, y, test_size=0.15, random_state=42)","6d0d49c7":"grid.fit(X_train,y_train)","568a6829":"grid.best_params_","94af14cf":"grid.best_score_","79486737":"from sklearn.metrics import classification_report, roc_auc_score","5d32b295":"print(classification_report(y_test,grid.predict(X_test)))","e93563eb":"print(roc_auc_score(y_test,grid.predict_proba(X_test)[:,1]))","0109f154":"**Finding best parameters using RandomizedSearchCV**","83f657ce":"# Model"}}