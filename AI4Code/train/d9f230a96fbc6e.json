{"cell_type":{"9632cfbd":"code","bb72b317":"code","d5e6d22d":"code","f43e8956":"code","77fc354d":"code","c1e12b69":"code","50dbcb60":"code","5070007b":"code","06f8b530":"code","30027ae3":"code","283cd117":"code","98904921":"code","3eed9cf6":"code","203be81d":"code","2e75ab9e":"code","32202f4b":"code","c7259469":"code","0299c8bb":"code","058a6d91":"code","383d6d9d":"markdown","081f091b":"markdown","40da1111":"markdown","a3300505":"markdown","5aa1ff4b":"markdown","2c9d7b33":"markdown","a62b3969":"markdown","bc13406f":"markdown","5c06caf7":"markdown","f902af01":"markdown","3130ea95":"markdown"},"source":{"9632cfbd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","bb72b317":"data = pd.read_csv('..\/input\/data.csv', encoding = 'cp1252')","d5e6d22d":"data.shape","f43e8956":"data.describe()","77fc354d":"df = data[(data.Quantity > 0)]\ndf = df[(df.UnitPrice > 0)]","c1e12b69":"df.describe()","50dbcb60":"plot = df.plot.scatter('UnitPrice', 'Quantity')","5070007b":"df = df[(df.Quantity < 500)] \ndf = df[(df.UnitPrice < 100)]","06f8b530":"#Check Null values are present in the dataset\ndf.isnull().sum()","30027ae3":"df=df.dropna(how = 'any', axis = 'rows')\ndf.shape","283cd117":"df['TotalPrice'] = df['Quantity'] * df['UnitPrice']","98904921":"df.head()","3eed9cf6":"ord_cnty = df.groupby('Country')['InvoiceNo'].count().sort_values(ascending=False)\n\n#Plot\nplt.figure(figsize=(12,6))\nord_cnty.plot.bar()\nplt.xlabel('Number of Orders')\nplt.ylabel('Country')\nplt.title('Number of Orders per Country', fontsize=16)\nplt.show()","203be81d":"amt_cnty = df.groupby('Country')['TotalPrice'].sum().sort_values(ascending=False)\n\n#Plot\nplt.figure(figsize=(12,6))\namt_cnty.plot.bar()\nplt.xlabel('Country')\nplt.ylabel('TotalPrice')\nplt.title('Amount Spend per Country', fontsize=16)\nplt.show()","2e75ab9e":"dfg = df.groupby(by=['CustomerID'])['Quantity','TotalPrice'].agg({'Quantity':'sum','TotalPrice':'sum'}).reset_index()\ndfg.rename(columns={'Quantity':'Total_Quantity','TotalPrice' : 'Total_Amount'},inplace=True)\ndfg.head(3)","32202f4b":"X = dfg.iloc[:, [1, 2]].values\n# Feature Scaling\nsc_X = StandardScaler()\nX= sc_X.fit_transform(X)","c7259469":"wcss=[]\nfor n_clusters in range(1,10):\n    kmeans=KMeans(n_clusters=n_clusters,init='k-means++',)\n    #KModes(n_clusters=4, init='Huang', n_init=5, verbose=1)\n    kmeans.fit(X)\n    wcss.append(kmeans.inertia_)\n    clusters = kmeans.predict(X)\nplt.plot(range(1,10),wcss)\nplt.title('Elbow Method')\nplt.xlabel('No. of cluster')\nplt.ylabel('wcss: sum of dist. of sample to their closest cluster center' )","0299c8bb":"# Fitting K-Means to the dataset\nkmeans = KMeans(n_clusters = 3, init = 'k-means++')\ny_kmeans = kmeans.fit_predict(X)","058a6d91":"plt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], s = 50, c = 'red', label = 'Customer Type 1')\nplt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], s = 50, c = 'blue', label = 'Customer Type 2')\nplt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1], s = 50, c = 'green', label = 'Customer Type 3')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 100, c = 'yellow', label = 'Centroids')\nplt.title('Type Of Customers(customer type clusters)')\nplt.xlabel('Number of items Purchased(Quantity)')\nplt.ylabel('Product price per unit in sterling(Unit Price)')\nplt.legend()\nplt.show()","383d6d9d":"Dataset has negative values in Quantity and UnitPrice. remove those entries from dataset","081f091b":"Customer column has 131591 null values. Customer Id is unique values since we cant replace with any other values, hence remove it from the dataset","40da1111":"Based on the above graph we could see some of ouliers in the dataset","a3300505":"Generates descriptive statistics that summarize the central tendency, dispersion and shape of a dataset\u2019s distribution","5aa1ff4b":"Number of Orders by Country","2c9d7b33":"**Customer Segmentation**","a62b3969":"Customer Segmentation can be done on different types\n\n1.  Location Based\n2. Demographic Based\n3. Psycho-graphic Based\n4. Behavioral Based\n\nDataset doesn't have enough information(features) to perform all the segmentation. ","bc13406f":"Group data based on Customer ID","5c06caf7":"Dataset contains 541909 rows and 8 columns","f902af01":"Plot data in Quantity andUnitPrice","3130ea95":"Amount spend by Country"}}