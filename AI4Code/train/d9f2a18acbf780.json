{"cell_type":{"55313ff9":"code","dd78f2e7":"code","7991125c":"code","d360745a":"code","5abc312b":"code","dff191f2":"code","d7f6c715":"code","3fbf31af":"code","c101df7f":"code","bc4317c1":"code","90f3e036":"code","6e175da2":"code","0920606c":"code","c784e27b":"code","0f06d50c":"code","7c6a41e8":"code","1aa85c80":"code","a5e6862e":"code","c5f89d8d":"code","09457d9a":"code","ec728eea":"code","81d516df":"code","50314259":"code","5516b493":"code","99b070d1":"code","78237096":"code","6dd06e3b":"code","80a6528c":"code","7b2e2779":"code","6de80fe4":"code","8bb6f395":"code","4be0de97":"code","54fd66e9":"code","b11f3a4b":"code","84c48b9e":"code","0ab33eb9":"markdown","15fcffc0":"markdown","0d685b98":"markdown","d640ba00":"markdown","98a4f048":"markdown","4cab8dc5":"markdown","d5d3641a":"markdown","6090350d":"markdown","315ce722":"markdown","70d498b5":"markdown","22bcee46":"markdown","3abe82c4":"markdown","7c4871b9":"markdown","afadd986":"markdown","e837195e":"markdown","343c0579":"markdown","46bfdb03":"markdown","a33e6bbe":"markdown","d003d62b":"markdown","c9983452":"markdown","5b5a0746":"markdown","fced28f8":"markdown","39c16632":"markdown","6ed82b03":"markdown","773cfcbf":"markdown","bc7b5abb":"markdown","f0cacc0a":"markdown","05334dfd":"markdown","69499e80":"markdown","f7ad8dc0":"markdown","0cfc59fe":"markdown","a82006d5":"markdown","c6335b9a":"markdown","211f80d6":"markdown","d23d82ce":"markdown","36881b11":"markdown","d23d5200":"markdown","c9feabbd":"markdown","401476c2":"markdown","48f1de54":"markdown","d61afee0":"markdown"},"source":{"55313ff9":"import pandas as pd\nimport numpy as np\nimport warnings\n\n\n# plotly\n# import plotly.plotly as py\n\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running\nwarnings.filterwarnings('ignore')","dd78f2e7":"# Reading data\n\nmcr_2019 = pd.read_csv('\/kaggle\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')","7991125c":"columns = list(mcr_2019.columns)\ncountries = pd.DataFrame(mcr_2019['Q3'].value_counts().reset_index())\ncountries=countries.rename({'index':'country', 'Q3':'entries'}, axis=1)\n\nimport plotly.express as px  # Be sure to import express\nfig = px.choropleth(countries,\n                    locations='country',  # DataFrame column with locations\n                    color='entries',  # DataFrame column with color values\n                    locationmode = 'country names', # Set to plot\n                    color_continuous_scale='viridis')\nfig.update_layout(\n    title_text = '2019 Kaggle survey respondents per country')\n\nfig.show()  # Output the plot to the screen","d360745a":"pop_age = pd.DataFrame(mcr_2019[mcr_2019['Q3']=='India']['Q1'].value_counts().reset_index())\npop_age = pop_age.rename({'index':'Age','Q1':'count'}, axis=1)","5abc312b":"\nfig = px.bar(pop_age, x = 'Age', y = 'count', title= 'Age wise users in India')\nfig.show();","dff191f2":"pop_male_age =  pd.DataFrame(mcr_2019[np.logical_and(mcr_2019['Q3']=='India' , mcr_2019['Q2']=='Male')]['Q1'].value_counts().reset_index())\npop_male_age = pop_male_age.rename({'index' : 'Age', 'Q1' : 'number'}, axis = 1)\npop_female_age =  pd.DataFrame(mcr_2019[np.logical_and(mcr_2019['Q3']=='India' , mcr_2019['Q2']=='Female')]['Q1'].value_counts().reset_index())\npop_female_age = pop_female_age.rename({'index' : 'Age', 'Q1' : 'number'}, axis = 1)","d7f6c715":"ages = ['18-21', '22-24', '25-29', '30-34', '35-39', '40-44', '45-49', '50-54', '55-49', '60-69', '70+']\n\nimport plotly.graph_objs as go\n# create trace1 \ntrace1 = go.Bar(\n                x = pop_male_age.Age,\n                y = pop_male_age.number,\n                name = \"male\",\n                marker = dict(color = 'rgba(25, 100, 255, 0.6)',\n                             line=dict(color='rgb(0,0,0)',width=1.5)),\n                )\n# create trace2 \ntrace2 = go.Bar(\n                x = pop_female_age.Age,\n                y = pop_female_age.number,\n                name = \"female\",\n                marker = dict(color = 'rgba(255, 174, 255, 0.9)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                )\ndata = [trace1, trace2]\nlayout = go.Layout(barmode = \"group\")\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","3fbf31af":"pie1_list = np.array(mcr_2019[mcr_2019['Q3']=='India']['Q2'].value_counts()[:2])\nlabels = ['Male','Female']\n# figure\nfig = {\n  \"data\": [\n    {\n      \"values\": pie1_list,\n      \"labels\": labels,\n      \"domain\": {\"x\": [0, .5]},\n      \"name\": \"Number Of Students Rates\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .3,\n      \"type\": \"pie\"\n    },],\n  \"layout\": {\n        \"title\":\"Gender Ratio in India\",\n        \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\": \"Number of people\",\n                \"x\": 0.50,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","c101df7f":"pie1_list = np.array(mcr_2019[mcr_2019['Q3']=='India']['Q4'].value_counts()[:4])\nlabels = ['Bachelors','Masters','Doctoral','Professional']\n# figure\nfig = {\n  \"data\": [\n    {\n      \"values\": pie1_list,\n      \"labels\": labels,\n      \"domain\": {\"x\": [0, .5]},\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .3,\n      \"type\": \"pie\"\n    },],\n  \"layout\": {\n        \"title\":\"Degree types\",\n        \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\": \"\",\n                \"x\": 0.50,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","bc4317c1":"pie1_list = [1531, 765, 720, 350, 283]\nlabels = ['Student', 'Data Scientist', 'Software Eng.','Data Analyst', 'Not Employed']\n# figure\nfig = {\n  \"data\": [\n    {\n      \"values\": pie1_list,\n      \"labels\": labels,\n      \"domain\": {\"x\": [0, .5]},\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .3,\n      \"type\": \"pie\"\n    },],\n  \"layout\": {\n        \"title\":\"Job types\",\n        \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\": \"Percent of people\",\n                \"x\": 0.50,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","90f3e036":"empl = mcr_2019[mcr_2019['Q3']=='India'][['Q1','Q5']]\nempl = pd.DataFrame(empl.groupby('Q1')['Q5'].value_counts())","6e175da2":"Stud = []\nDataSc = []\nSE = []\nDataAn = []\nNE = []\n\nfor i in ages[:6]:\n    Stud.append(empl[np.logical_and(empl.index.get_level_values(0)==i, empl.index.get_level_values(1)=='Student')].Q5[0])\n    DataSc.append(empl[np.logical_and(empl.index.get_level_values(0)==i, empl.index.get_level_values(1)=='Data Scientist')].Q5[0])\n    SE.append(empl[np.logical_and(empl.index.get_level_values(0)==i, empl.index.get_level_values(1)=='Software Engineer')].Q5[0])\n    DataAn.append(empl[np.logical_and(empl.index.get_level_values(0)==i, empl.index.get_level_values(1)=='Data Analyst')].Q5[0])\n    NE.append(empl[np.logical_and(empl.index.get_level_values(0)==i, empl.index.get_level_values(1)=='Not employed')].Q5[0])","0920606c":"import plotly.graph_objects as go\n\nx=ages\nfig = go.Figure(go.Bar(x=x, y=Stud, name='Students',marker = dict(color = 'rgba(25, 25, 255, 0.8)')))\nfig.add_trace(go.Bar(x=x, y=DataSc, name='Data Scientists',marker = dict(color = 'rgba(25, 255, 25, 0.8)')))\nfig.add_trace(go.Bar(x=x, y=SE, name='Software Eng.',marker = dict(color = 'rgba(25, 0, 25, 0.8)')))\nfig.add_trace(go.Bar(x=x, y=DataAn, name='Data Analysts',marker = dict(color = 'rgba(255, 10, 25, 0.8)')))\nfig.add_trace(go.Bar(x=x, y=NE, name='Not Employed',marker = dict(color = 'rgba(25, 100, 25, 0.8)')))\n\nfig.update_layout(barmode='stack')\nfig.show()","c784e27b":"pie1_list = list(mcr_2019[mcr_2019['Q3']=='India']['Q6'].value_counts().values)\nlabels = list(mcr_2019[mcr_2019['Q3']=='India']['Q6'].value_counts().index)\n# figure\nfig = {\n  \"data\": [\n    {\n      \"values\": pie1_list,\n      \"labels\": labels,\n      \"domain\": {\"x\": [0, .5]},\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .3,\n      \"type\": \"pie\"\n    },],\n  \"layout\": {\n        \"title\":\"\",\n        \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\": \"Company Size\",\n                \"x\": 0.50,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","0f06d50c":"country_ind = mcr_2019[mcr_2019['Q3']=='India']","7c6a41e8":"ages = ages[0:8]","1aa85c80":"small=[]\nsmall_mid=[]\nmid = []\nlarge_mid = []\nlarge = []\n\nfor i in ages:\n    small.append(country_ind[country_ind['Q1']==i]['Q6'].value_counts().values[0])        \nfor i in ages:\n    small_mid.append(country_ind[country_ind['Q1']==i]['Q6'].value_counts().values[1])\nfor i in ages:\n    mid.append(country_ind[country_ind['Q1']==i]['Q6'].value_counts().values[2])\nfor i in ages:\n    large_mid.append(country_ind[country_ind['Q1']==i]['Q6'].value_counts().values[3])\nfor i in ages:\n    large.append(country_ind[country_ind['Q1']==i]['Q6'].value_counts().values[4])\n","a5e6862e":"import plotly.graph_objects as go\n\nx=ages\nfig = go.Figure(go.Bar(y=x, x=small, name='0 - 49',marker = dict(color = 'rgba(255, 25, 255, 0.8)'),orientation='h'))\nfig.add_trace(go.Bar(y=x, x=small_mid, name='> 10k',marker = dict(color = 'rgba(25, 255, 25, 0.8)'),orientation='h'))\nfig.add_trace(go.Bar(y=x, x=mid, name='50 - 249',marker = dict(color = 'rgba(25, 0, 25, 0.8)'),orientation='h'))\nfig.add_trace(go.Bar(y=x, x=large_mid, name='250 - 999',marker = dict(color = 'rgba(255, 10, 25, 0.8)'),orientation='h'))\nfig.add_trace(go.Bar(y=x, x=large, name='1k - 10k',marker = dict(color = 'rgba(25, 100, 25, 0.8)'),orientation='h'))\n\nfig.update_layout(barmode='stack')\nfig.show()","c5f89d8d":"mcr_2019 = country_ind\n\ntwitter = mcr_2019['Q12_Part_1'].value_counts().values[0]\nhacker_news = mcr_2019['Q12_Part_2'].value_counts().values[0]\nreddit = mcr_2019['Q12_Part_3'].value_counts().values[0]\nkagle = mcr_2019['Q12_Part_4'].value_counts().values[0]\nfastai = mcr_2019['Q12_Part_5'].value_counts().values[0]\nyoutube = mcr_2019['Q12_Part_6'].value_counts().values[0]\npodcasts = mcr_2019['Q12_Part_7'].value_counts().values[0]\nblogs = mcr_2019['Q12_Part_8'].value_counts().values[0]\njournals = mcr_2019['Q12_Part_9'].value_counts().values[0]\nslack = mcr_2019['Q12_Part_10'].value_counts().values[0]\n\npie1_list = [twitter, hacker_news, reddit, kagle, fastai, youtube, podcasts, blogs, journals, slack]\nlabels = ['twitter', 'hacker_news', 'reddit', 'kaggle', 'fastai', 'youtube', 'podcasts', 'blogs', 'journals', 'slack'] \n\nimport plotly.graph_objects as go\n\nlabels = labels\nvalues = pie1_list\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values)])\nfig.show()\nprint(\"References used:\")","09457d9a":"Ind_Stu = country_ind[country_ind['Q5']=='Student']","ec728eea":"twitter = Ind_Stu['Q12_Part_1'].value_counts().values[0]\nhacker_news = Ind_Stu['Q12_Part_2'].value_counts().values[0]\nreddit = Ind_Stu['Q12_Part_3'].value_counts().values[0]\nkagle = Ind_Stu['Q12_Part_4'].value_counts().values[0]\nfastai = Ind_Stu['Q12_Part_5'].value_counts().values[0]\nyoutube = Ind_Stu['Q12_Part_6'].value_counts().values[0]\npodcasts = Ind_Stu['Q12_Part_7'].value_counts().values[0]\nblogs = Ind_Stu['Q12_Part_8'].value_counts().values[0]\njournals = Ind_Stu['Q12_Part_9'].value_counts().values[0]\nslack = Ind_Stu['Q12_Part_10'].value_counts().values[0]\n\npie1_list = [twitter, hacker_news, reddit, kagle, fastai, youtube, podcasts, blogs, journals, slack]\nlabels = ['twitter', 'hacker_news', 'reddit', 'kaggle', 'fastai', 'youtube', 'podcasts', 'blogs', 'journals', 'slack'] \n\n\n\ncolors = ['gold', 'mediumturquoise', 'darkorange', 'lightgreen','silver','red','Purple','blue','green','darkblue']\n\nfig = go.Figure(data=[go.Pie(labels= labels,\n                             values=pie1_list)])\nfig.update_traces(hoverinfo='label+percent', textinfo='percent', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=2),), title='References used by students', titlefont_size=20)\nfig.show()","81d516df":"Udacity = Ind_Stu['Q13_Part_1'].value_counts().values[0]\ncoursera = Ind_Stu['Q13_Part_2'].value_counts().values[0]\nedX = Ind_Stu['Q13_Part_3'].value_counts().values[0]\nDatacamp = Ind_Stu['Q13_Part_4'].value_counts().values[0]\nDataquest = Ind_Stu['Q13_Part_5'].value_counts().values[0]\nKaggle = Ind_Stu['Q13_Part_6'].value_counts().values[0]\nFastai = Ind_Stu['Q13_Part_7'].value_counts().values[0]\nUdemy = Ind_Stu['Q13_Part_8'].value_counts().values[0]\nLinkedin = Ind_Stu['Q13_Part_9'].value_counts().values[0]\nUniversity_degree = Ind_Stu['Q13_Part_10'].value_counts().values[0]\n\npie1_list = [Udacity, coursera, edX, Datacamp, Dataquest, Kaggle, Fastai, Udemy, Linkedin, University_degree]\nlabels = ['Udacity', 'coursera', 'edX', 'Datacamp', 'Dataquest', 'Kaggle', 'Fastai', 'Udemy', 'Linkedin', 'University_degree'] \n\n\n\ncolors = ['gold', 'mediumturquoise', 'darkorange', 'lightgreen','silver','red','Purple','blue','green','darkblue']\n\nfig = go.Figure(data=[go.Pie(labels= labels,\n                             values=pie1_list)])\nfig.update_traces(hoverinfo='label+percent', textinfo='percent', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=2)), title = 'Courses prefered by Indian Students', titlefont_size = 20)\nfig.show()","50314259":"jupyter = Ind_Stu['Q16_Part_1'].value_counts().values[0]\nr_studio = Ind_Stu['Q16_Part_2'].value_counts().values[0]\npycharm = Ind_Stu['Q16_Part_3'].value_counts().values[0]\natom = Ind_Stu['Q16_Part_4'].value_counts().values[0]\nmatlab = Ind_Stu['Q16_Part_5'].value_counts().values[0]\nvs_code = Ind_Stu['Q16_Part_6'].value_counts().values[0]\nspyder = Ind_Stu['Q16_Part_7'].value_counts().values[0]\nnotepad = Ind_Stu['Q16_Part_9'].value_counts().values[0]\nsublime = Ind_Stu['Q16_Part_10'].value_counts().values[0]\n","5516b493":"\nide = pd.DataFrame(data = np.array([jupyter, spyder, vs_code, sublime, pycharm, r_studio, atom ,matlab,notepad]),)\nide['names'] = ['jupyter', 'spyder', 'vs_code', 'sublime', 'pycharm','r_studio','atom','matlab','notepad']\nide = ide.rename(columns = {0:'ide_usage'})","99b070d1":"fig = px.bar(ide, x = 'names', y = 'ide_usage', )\nfig.show();","78237096":"#country_ind[country_ind['Q17_Part_1'].isnull() + country_ind['Q17_Part_2'].isnull() + country_ind['Q17_Part_3'].isnull() + country_ind['Q17_Part_4'].isnull() + country_ind['Q17_Part_5'].isnull() + country_ind['Q17_Part_6'].isnull() + country_ind['Q17_Part_7'].isnull() + country_ind['Q17_Part_8'].isnull() + country_ind['Q17_Part_9'].isnull() + country_ind['Q17_Part_10'].isnull() + country_ind['Q17_Part_11'].isnull() + country_ind['Q17_Part_12'].isnull()]['Q5'].value_counts()\nvalues = country_ind[~country_ind['Q17_Part_1'].isnull() + ~country_ind['Q17_Part_2'].isnull() + ~country_ind['Q17_Part_3'].isnull() + ~country_ind['Q17_Part_4'].isnull() + ~country_ind['Q17_Part_5'].isnull() + ~country_ind['Q17_Part_6'].isnull() + ~country_ind['Q17_Part_7'].isnull() + ~country_ind['Q17_Part_8'].isnull() + ~country_ind['Q17_Part_9'].isnull() + ~country_ind['Q17_Part_10'].isnull() + ~country_ind['Q17_Part_11'].isnull() + ~country_ind['Q17_Part_12'].isnull()]['Q5'].value_counts().values\nlabels = list(country_ind[~country_ind['Q17_Part_1'].isnull() + ~country_ind['Q17_Part_2'].isnull() + ~country_ind['Q17_Part_3'].isnull() + ~country_ind['Q17_Part_4'].isnull() + ~country_ind['Q17_Part_5'].isnull() + ~country_ind['Q17_Part_6'].isnull() + ~country_ind['Q17_Part_7'].isnull() + ~country_ind['Q17_Part_8'].isnull() + ~country_ind['Q17_Part_9'].isnull() + ~country_ind['Q17_Part_10'].isnull() + ~country_ind['Q17_Part_11'].isnull() + ~country_ind['Q17_Part_12'].isnull()]['Q5'].value_counts().index)","6dd06e3b":"fig = go.Figure([go.Bar(x = labels, y = values)])\nfig.show();","80a6528c":"kaggle = Ind_Stu['Q17_Part_1'].value_counts().values[0]\ncolab = Ind_Stu['Q17_Part_2'].value_counts().values[0]\nmicrosoft_azure = Ind_Stu['Q17_Part_3'].value_counts().values[0]\ngcp = Ind_Stu['Q17_Part_4'].value_counts().values[0]\npaperspace = Ind_Stu['Q17_Part_5'].value_counts().values[0]\nfloyd_hub = Ind_Stu['Q17_Part_6'].value_counts().values[0]\nbinder = Ind_Stu['Q17_Part_7'].value_counts().values[0]\nibm_watson = Ind_Stu['Q17_Part_8'].value_counts().values[0]\ncode_ocean = Ind_Stu['Q17_Part_9'].value_counts().values[0]\naws = Ind_Stu['Q17_Part_10'].value_counts().values[0]\n\npie1_list = [kaggle, colab, microsoft_azure, gcp, paperspace, floyd_hub, binder, ibm_watson, code_ocean, aws]\nlabels = ['kaggle', 'colab', 'microsoft_azure', 'gcp', 'paperspace', 'floyd_hub', 'binder\/jupyter hub', 'ibm_watson', 'code_ocean', 'aws']\n\n\n#colors = ['gold', 'mediumturquoise', 'darkorange', 'lightgreen','silver','red','Purple','blue','green','darkblue']\n\nfig = go.Figure(data=[go.Pie(labels= labels,\n                             values=pie1_list)])\nfig.update_traces(hoverinfo='label+percent', textinfo='percent', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nfig.show()","7b2e2779":"python = country_ind['Q18_Part_1'].value_counts().values[0]\nr = country_ind['Q18_Part_2'].value_counts().values[0]\nsql = country_ind['Q18_Part_3'].value_counts().values[0]\nc = country_ind['Q18_Part_4'].value_counts().values[0]\ncpp = country_ind['Q18_Part_5'].value_counts().values[0]\njava = country_ind['Q18_Part_6'].value_counts().values[0]\njavascript = country_ind['Q18_Part_7'].value_counts().values[0]\ntypescript = country_ind['Q18_Part_8'].value_counts().values[0]\nbash = country_ind['Q18_Part_9'].value_counts().values[0]\nmatlab = country_ind['Q18_Part_10'].value_counts().values[0]\n\nlabels = ['python','sql','r','cpp','c','java','javascript','matlab','bash','typescript']\nvalues = [python, sql, r, cpp, c, java, javascript, matlab, bash, typescript]\n\n\nfig = go.Figure([go.Bar(x = labels, y = values)])\nfig.show();","6de80fe4":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nlabels = ['Student', 'Software Engineer', 'Data Scientist', 'Manager', 'Data Analyst']\nspecs = [[{'type':'domain'}, {'type':'domain'}], [{'type':'domain'}, {'type':'domain'}]]\n\nfig = make_subplots(rows=2, cols=2, specs=specs)\n\nfig.add_trace(go.Pie(labels=labels, values=[1072, 426, 546, 90, 207], name='python',title='Python',\n                     ), 1, 1)\nfig.add_trace(go.Pie(labels=labels, values=[200, 68, 218, 42, 90], name='SQL', title = 'SQL',\n                     ), 1, 2)\nfig.add_trace(go.Pie(labels=labels, values=[320, 222, 281, 52, 139], name='R', title = 'R',\n                     ), 2, 1)\nfig.add_trace(go.Pie(labels=labels, values=[230, 168, 62, 30, 10], name='java', title = 'JAVA',\n                     ), 2, 2)","8bb6f395":"ggplot = country_ind['Q20_Part_1'].value_counts().values[0]\nmatplotlib = country_ind['Q20_Part_2'].value_counts().values[0]\naltair = country_ind['Q20_Part_3'].value_counts().values[0]\nshiny = country_ind['Q20_Part_4'].value_counts().values[0]\nd3js = country_ind['Q20_Part_5'].value_counts().values[0]\nplotly = country_ind['Q20_Part_6'].value_counts().values[0]\nbokeh = country_ind['Q20_Part_7'].value_counts().values[0]\nseaborn = country_ind['Q20_Part_8'].value_counts().values[0]\n\npie1_list = [ggplot, matplotlib, altair, shiny, d3js, plotly, bokeh, seaborn]\nlabels = ['ggplot', 'matplotlib', 'altair', 'shiny', 'd3js', 'plotly', 'bokeh', 'seaborn'] \n\n\n\ncolors = ['gold', 'mediumturquoise', 'darkorange', 'lightgreen','silver','red','Purple','blue','green','darkblue']\n\nfig = go.Figure(data=[go.Pie(labels= labels,\n                             values=pie1_list)])\nfig.update_traces(hoverinfo='label+percent', textinfo='percent', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nfig.show()","4be0de97":"cpu = country_ind['Q21_Part_1'].value_counts().values[0]\ngpu = country_ind['Q21_Part_2'].value_counts().values[0]\ntpu = country_ind['Q21_Part_3'].value_counts().values[0]\n\n\ncolors = ['gold', 'mediumturquoise', 'darkorange', 'lightgreen','silver','red','Purple','blue','green','darkblue']\n\nfig = go.Figure(data=[go.Pie(labels= ['cpu','gpu','tpu'],\n                             values=[cpu, gpu, tpu])])\nfig.update_traces(hoverinfo='label+percent', textinfo='label+percent', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nfig.show()","54fd66e9":"fig = go.Figure([go.Bar(x = list(country_ind['Q23'].value_counts().index), y = country_ind['Q23'].value_counts().values)])\nfig.show();","b11f3a4b":"Regression = country_ind['Q24_Part_1'].value_counts().values[0]\nDecision_trees = country_ind['Q24_Part_2'].value_counts().values[0]\nxgboost = country_ind['Q24_Part_3'].value_counts().values[0]\nNaive_bayes = country_ind['Q24_Part_4'].value_counts().values[0]\nNeural_network = country_ind['Q24_Part_6'].value_counts().values[0]\nCnn = country_ind['Q24_Part_7'].value_counts().values[0]\nGans = country_ind['Q24_Part_8'].value_counts().values[0]\nRnn = country_ind['Q24_Part_9'].value_counts().values[0]\nTransformer_network = country_ind['Q24_Part_10'].value_counts().values[0]\n\ndata = [Regression, Decision_trees, Cnn, xgboost, Naive_bayes, Rnn, Neural_network, Gans, Transformer_network]\nlabels = ['Regression', 'Decision_trees','Cnn', 'xgboost', 'Naive_bayes', 'Rnn', 'Neural_network', 'Gans', 'Transformer_network']\n\nfig = go.Figure([go.Bar(x = labels, y = data)], )\nfig.update_traces(marker=dict(color= '#00F000',line=dict(color='#000000', width=2)))\nfig.show();","84c48b9e":"gcp = country_ind['Q29_Part_1'].value_counts().values[0]\naws = country_ind['Q29_Part_2'].value_counts().values[0]\nazure = country_ind['Q29_Part_3'].value_counts().values[0]\nibm = country_ind['Q29_Part_4'].value_counts().values[0]\nalibaba = country_ind['Q29_Part_5'].value_counts().values[0]\nsalesforce = country_ind['Q29_Part_6'].value_counts().values[0]\noracle = country_ind['Q29_Part_7'].value_counts().values[0]\nsap = country_ind['Q29_Part_8'].value_counts().values[0]\n\n\ncolors = ['gold', 'mediumturquoise', 'darkorange', 'lightgreen','silver','red','Purple','blue','green','darkblue']\n\nfig = go.Figure(data=[go.Pie(labels= ['gcp', 'aws', 'azure', 'ibm', 'alibaba', 'salesforce', 'oracle', 'sap'],\n                             values=[gcp, aws, azure, ibm, alibaba, salesforce, oracle, sap])])\nfig.update_traces(hoverinfo='label+percent', textinfo='label+percent', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nfig.show()","0ab33eb9":"## Use of cpu, gpu is common but Tpu is hardly used","15fcffc0":"# India has the fastest growing Data Science community !","0d685b98":"## Coursera is mostly used followed by Udemy\n## Everyone must have seen Andrew NG's machine learning Course","d640ba00":"## Students use kaggle and colab more than any other notebook","98a4f048":"## Most of people are Students who are interested in Data Science\/ Machine Learning.\n## India has 35% youth, Data Science seems to provide a promising career choice","4cab8dc5":"## As we expected Students uses these services more , this is also the reason most of students are able to learn and practice Machine learning since students cant afford high end specifications.","d5d3641a":"## Linear Regression and logistic Regression are mostly used followed by trees and CNN's","6090350d":"# Mostly used data visualisations library","315ce722":"# gender distribution","70d498b5":"# Degree types","22bcee46":"## Almost 25 % of respondents were from India followed by USA with 15 %","3abe82c4":"# Courses prefered","7c4871b9":"## Lets see references for students as they contribute most","afadd986":"# Years of experience in using machine learning","e837195e":"## Kaggle is mostly used for references, followed by Blogs and Youtube","343c0579":"## Python is the most used language followed by sql and R \n## Lets see which language is used more in specific job types","46bfdb03":"## Most people are in age 18-21 and 76 percent people are below age 30","a33e6bbe":"## Lets see which programming language is used mostly","d003d62b":"## Lets see which group of people uses Online notebook's like kaggle and colab more","c9983452":"## AWS is mostly used followed by GCP and azure","5b5a0746":"# CONCLUSION\n<ul>\n    \n## <li>India has huge youth population, Data Science \/ Machine Learning seems to be a good career choice<\/li>\n\n## <li>References are easily available on kaggle\/ youtube<\/li>\n\n## <li>Online courses on coursera and udemy are helpful<\/li>\n\n## <li>Kaggle and Google colab provide online resources which has helped students a lot<\/li>\n\n## <li>There are many startups being launched in India Since last few years and mostly are trying to incorporate Machine learning <\/li>\n\n## <li>Cloud services such as AWS and GCP provide 1 year free service and easy solutions<\/li>\n<\/ul>","fced28f8":"## We can see majority of people are students between age 18-21 \n## There are more Data Scientists as compared to other job types , it is obvious as this is kaggle survey\n## There is also a group of people unemployed in almost each age group, these may be people looking for career transition to Data Science","39c16632":"### Before you read, please upvote if you find helpful","6ed82b03":"## people with age 18-21 are mostly students so in this age group we find less working professionals, if not students then are working for a startup\n## Age 24-29 has most employees and either they work for startup or for a large company\n## Generally we find most people working in companies with less people.","773cfcbf":"## There are mostly Data Scientists in the survey so Jupyter Notebook is the obviuos choice","bc7b5abb":"# Favourite references =","f0cacc0a":"# job type","05334dfd":"# Use of cpu, gpu and tpu's","69499e80":"## Matplotlib and seaborn are mostly used for data visualisations","f7ad8dc0":"## Almost 83 % people have less than two years of experience, these are majorly students ","0cfc59fe":"# Mostly used cloud services","a82006d5":"## There are 40% people work in company of size less than 249 which must be startups","c6335b9a":"## Lets analyse data of India","211f80d6":"## R, Python, SQL is mostly used by students and data scientists\n## JAVA is mostly used by students and Software Engineers","d23d82ce":"## Why so many respondents from India","36881b11":"## Stats not differ much for students","d23d5200":"# Mostly used Machine learning algorithms","c9feabbd":"## There are less females as compared to males","401476c2":"## Majorly peope have a Bachelor's degree followed by Master's","48f1de54":"# Company sizes","d61afee0":"# IDE used"}}