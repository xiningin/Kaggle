{"cell_type":{"743a9736":"code","05a0b50a":"code","6b872145":"code","9df1364f":"code","49f7782f":"code","ae92dffe":"code","98b5e837":"code","d20b5352":"code","ca693b18":"code","b74d0c65":"code","472ae0c6":"code","8efb6adb":"code","8c1212a2":"code","c9212bd5":"code","e65b6e5a":"code","2bfe3ae5":"code","744ed3dd":"code","3f42b176":"code","687d40d3":"code","4b39c55e":"code","b3edf7f2":"code","7cf44d62":"markdown","fc30a303":"markdown","1cf59a6f":"markdown","b965e78c":"markdown","39e0087c":"markdown","23055478":"markdown","57950ba3":"markdown","9da602a9":"markdown","9cf805af":"markdown","1569095c":"markdown","05695ccb":"markdown","bee33771":"markdown","1073eb7f":"markdown","87846bec":"markdown","a438aa00":"markdown","d56c1b3a":"markdown","1a9eb112":"markdown"},"source":{"743a9736":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns \nimport matplotlib.font_manager as fm\nfrom pandas.tools.plotting import parallel_coordinates\nimport matplotlib.pyplot as plt\n# plotly\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nfrom plotly import tools\n\n# matplotlib\n\nimport matplotlib.pyplot as plt\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","05a0b50a":"data2015 = pd.read_csv('..\/input\/2015.csv')\ndata2016 = pd.read_csv('..\/input\/2016.csv')\ndata2017 = pd.read_csv('..\/input\/2017.csv')","6b872145":"# Columns name was changed\ndata2015.columns = ['country','region','happiness_rank','happiness_score','standard_error','economy','family','health','freedom','trust','generosity','dystopia']\ndata2016.columns = ['country','region','happiness_rank','hapiness_score','lower_confidence','upper_confidence','economy','family','health','freedom','trust','generosity','dystopia']\ndata2017.columns = ['country','happiness_rank','happiness_score','whisker_high','whisker_low','economy','family','health','freedom','generosity','trust','dystopia']","9df1364f":"trace = go.Table(\n    header = dict(values=list(data2015.columns),\n                 fill=dict(color='#C2D4FF'),\n                 align=['left']*1),\ncells = dict(values=[data2015.country, data2015.region, data2015.happiness_rank, data2015.happiness_score, data2015.standard_error,data2015.economy,data2015.family, data2015.health,data2015.freedom,data2015.trust,data2015.generosity,data2015.dystopia],\n                    fill = dict(color = '#F5F8FF'),\n                    align = ['left']*1))\ndata=[trace]\nfig = dict(data=data)\niplot(fig)","49f7782f":"f,ax = plt.subplots(figsize=(8,8))\nsns.heatmap(data2015.corr(),annot=True,linewidth =  .5 ,fmt='.1f',ax=ax)\nplt.show()","ae92dffe":"data2015.columns","98b5e837":"region_mean = data2015.groupby(['region'])['happiness_score'].mean()\nregion_mean.sort_values(ascending=False ,inplace=True)\nfontsize2use = 12\n\nfig = plt.figure(figsize=(10,5))\nplt.xticks(fontsize=fontsize2use)  \nplt.yticks(fontsize=fontsize2use)    \nfontprop = fm.FontProperties(size=fontsize2use)\nax = fig.add_subplot(111)\nax.set_xlabel('')\nax.set_ylabel('')\nplt.bar(region_mean.index,region_mean.values,color='b',alpha=0.3)\nplt.xticks(region_mean.index, rotation=90)\nplt.title('2015 Hapiness ranking by region')\nplt.show()","d20b5352":"region_mean = data2015.groupby(['region'])['family'].mean()\nregion_mean.sort_values(ascending=False ,inplace=True)\nfontsize2use = 12\n\nfig = plt.figure(figsize=(10,5))\nplt.xticks(fontsize=fontsize2use)  \nplt.yticks(fontsize=fontsize2use)    \nfontprop = fm.FontProperties(size=fontsize2use)\nax = fig.add_subplot(111)\nax.set_xlabel('')\nax.set_ylabel('')\nplt.bar(region_mean.index,region_mean.values,color='b',alpha=0.3)\nplt.xticks(region_mean.index, rotation=90)\nplt.title('2015 Family ranking by region')\nplt.show()","ca693b18":"region_mean = data2015.groupby(['region'])['health'].mean()\nregion_mean.sort_values(ascending=False ,inplace=True)\nfontsize2use = 12\n\nfig = plt.figure(figsize=(10,5))\nplt.xticks(fontsize=fontsize2use)  \nplt.yticks(fontsize=fontsize2use)    \nfontprop = fm.FontProperties(size=fontsize2use)\nax = fig.add_subplot(111)\nax.set_xlabel('')\nax.set_ylabel('')\nplt.bar(region_mean.index,region_mean.values,color='b',alpha=0.3)\nplt.xticks(region_mean.index, rotation=90)\nplt.title('Market Share for Each Genre 1995-2017')\nplt.show()","b74d0c65":"region_mean = data2015.groupby(['region'])['trust'].mean()\nregion_mean.sort_values(ascending=False ,inplace=True)\nfontsize2use = 12\n\nfig = plt.figure(figsize=(10,5))\nplt.xticks(fontsize=fontsize2use)  \nplt.yticks(fontsize=fontsize2use)    \nfontprop = fm.FontProperties(size=fontsize2use)\nax = fig.add_subplot(111)\nax.set_xlabel('')\nax.set_ylabel('')\nplt.bar(region_mean.index,region_mean.values,color='b',alpha=0.3)\nplt.xticks(region_mean.index, rotation=90)\nplt.title('2015 Trust ranking by region')\nplt.show()","472ae0c6":"region_mean = data2015.groupby(['region'])['generosity'].mean()\nregion_mean.sort_values(ascending=False ,inplace=True)\nfontsize2use = 12\n\nfig = plt.figure(figsize=(10,5))\nplt.xticks(fontsize=fontsize2use)  \nplt.yticks(fontsize=fontsize2use)    \nfontprop = fm.FontProperties(size=fontsize2use)\nax = fig.add_subplot(111)\nax.set_xlabel('')\nax.set_ylabel('')\nplt.bar(region_mean.index,region_mean.values,color='b',alpha=0.3)\nplt.xticks(region_mean.index, rotation=90)\nplt.title('2015 Generosity ranking by region')\nplt.show()","8efb6adb":"region_mean = data2015.groupby(['region'])['freedom'].mean()\nregion_mean.sort_values(ascending=False ,inplace=True)\nfontsize2use = 12\n\nfig = plt.figure(figsize=(10,5))\nplt.xticks(fontsize=fontsize2use)  \nplt.yticks(fontsize=fontsize2use)    \nfontprop = fm.FontProperties(size=fontsize2use)\nax = fig.add_subplot(111)\nax.set_xlabel('')\nax.set_ylabel('')\nplt.bar(region_mean.index,region_mean.values,color='b',alpha=0.3)\nplt.xticks(region_mean.index, rotation=90)\nplt.title('2015 Freedom ranking by region')\nplt.show()","8c1212a2":"sorted_happiness = data2015.sort_values('happiness_score', ascending=False)\nfontsize2use = 12\n\nfig = plt.figure(figsize=(10,5))\nplt.xticks(fontsize=fontsize2use)  \nplt.yticks(fontsize=fontsize2use)    \nfontprop = fm.FontProperties(size=fontsize2use)\nax = fig.add_subplot(111)\nax.set_xlabel('')\nax.set_ylabel('')\nplt.bar(sorted_happiness.country.head(10),sorted_happiness.happiness_score.head(10),color='b',alpha=0.3)\nplt.xticks(sorted_happiness.country.head(10), rotation=90)\nplt.title('2015 Happiness ranking by country')\nplt.show()","c9212bd5":"data = dict(type = 'choropleth', \n           locations = data2015['country'],\n           locationmode = 'country names',\n           z = data2015['happiness_rank'], \n           text = data2015['country'],\n           colorbar = {'title':'Happiness'})\nlayout = dict(title = '2015 Global Happiness', \n                 geo = dict(showframe = False, \n                       projection = {'type': 'equirectangular'}))\nfig = go.Figure(data = [data], layout=layout)\niplot(fig)","e65b6e5a":"#Horizontal bar plot\nregion_lists=list(data2015['country'].head(15))\nshare_economy=[]\nshare_family=[]\nshare_health=[]\nshare_freedom=[]\nshare_trust=[]\nfor each in region_lists:\n    region=data2015[data2015['country']==each]\n    share_economy.append(sum(region.economy)\/len(region))\n    share_family.append(sum(region.family)\/len(region))\n    share_health.append(sum(region.health)\/len(region))\n    share_freedom.append(sum(region.freedom)\/len(region))\n    share_trust.append(sum(region.trust)\/len(region))\n\n#Visualization\nf,ax = plt.subplots(figsize = (15,13))\nsns.set_color_codes(\"pastel\")\nsns.barplot(x=share_economy,y=region_lists,color='g',label=\"Economy\")\nsns.barplot(x=share_family,y=region_lists,color='b',label=\"Family\")\nsns.barplot(x=share_health,y=region_lists,color='c',label=\"Health\")\nsns.barplot(x=share_freedom,y=region_lists,color='y',label=\"Freedom\")\nsns.barplot(x=share_trust,y=region_lists,color='r',label=\"Trust\")\nax.legend(loc=\"lower right\",frameon = True)\nax.set(xlabel='Percentage', ylabel='Country',title = \"2015 Top 15 Country\")\nplt.show()","2bfe3ae5":"happiness2015_rank = data2015.sort_values('happiness_score', ascending=False)\nhappiness2016_rank = data2016.sort_values('hapiness_score', ascending=False)\nhappiness2017_rank = data2017.sort_values('happiness_score', ascending=False)\n\ntrace1 = go.Bar(\n            x=happiness2015_rank.country.head(15),\n            y=happiness2015_rank.happiness_score.head(15),\n            opacity=0.65,\n            name='2015 Happiness'\n        )\n\ntrace2 = go.Bar(\n            x=happiness2016_rank.country.head(15),\n            y=happiness2016_rank.hapiness_score.head(15),\n            opacity=0.65,\n            name='2016 Happiness'\n        )\ntrace3 = go.Bar(\n            x=happiness2017_rank.country.head(15),\n            y=happiness2017_rank.happiness_score.head(15),\n            opacity=0.65,\n            name='2017 Happiness'\n        )\n\nfig = tools.make_subplots(rows=3, cols=1, subplot_titles=())\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 2, 1)\nfig.append_trace(trace3, 3, 1)\n\nfig['layout'].update(height=650, width=900, title='Ranking of Happiness by Year')\niplot(fig)","744ed3dd":"freedom2015_rank = data2015.sort_values('freedom', ascending=False)\nfreedom2016_rank = data2016.sort_values('freedom', ascending=False)\nfreedom2017_rank = data2017.sort_values('freedom', ascending=False)\n\ntrace1 = go.Bar(\n            x=freedom2015_rank.country.head(15),\n            y=freedom2015_rank.freedom.head(15),\n            opacity=0.65,\n            name='2015 Freedom'\n        )\n\ntrace2 = go.Bar(\n            x=freedom2016_rank.country.head(15),\n            y=freedom2016_rank.freedom.head(15),\n            opacity=0.65,\n            name='2016 Freedom'\n        )\ntrace3 = go.Bar(\n            x=freedom2017_rank.country.head(15),\n            y=freedom2017_rank.freedom.head(15),\n            opacity=0.65,\n            name='2017 Freedom'\n        )\n\nfig = tools.make_subplots(rows=3, cols=1, subplot_titles=())\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 2, 1)\nfig.append_trace(trace3, 3, 1)\n\nfig['layout'].update(height=650, width=900, title='Ranking of Freedom by Year')\niplot(fig)","3f42b176":"generosity2015_rank = data2015.sort_values('generosity', ascending=False)\ngenerosity2016_rank = data2016.sort_values('generosity', ascending=False)\ngenerosity2017_rank = data2017.sort_values('generosity', ascending=False)\n\ntrace1 = go.Bar(\n            x=generosity2015_rank.country.head(15),\n            y=generosity2015_rank.generosity.head(15),\n            opacity=0.65,\n            name='2015 Generosity'\n        )\n\ntrace2 = go.Bar(\n            x=generosity2016_rank.country.head(15),\n            y=generosity2016_rank.generosity.head(15),\n            opacity=0.65,\n            name='2016 Generosity'\n        )\ntrace3 = go.Bar(\n            x=generosity2017_rank.country.head(15),\n            y=generosity2017_rank.generosity.head(15),\n            opacity=0.65,\n            name='2017 Generosity'\n        )\n\nfig = tools.make_subplots(rows=3, cols=1, subplot_titles=())\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 2, 1)\nfig.append_trace(trace3, 3, 1)\n\nfig['layout'].update(height=700, width=900, title='Ranking of Generosity by Year')\niplot(fig)","687d40d3":"trace1 = go.Bar(\n            x= data2015.sort_values('economy', ascending=False).country.head(15),\n            y=data2015.sort_values('economy', ascending=False).economy.head(15),\n            opacity=0.65,\n            name='2015 Economy'\n        )\n\ntrace2 = go.Bar(\n            x= data2016.sort_values('economy', ascending=False).country.head(15),\n            y= data2016.sort_values('economy', ascending=False).economy.head(15),\n            opacity=0.65,\n            name='2016 Economy'\n        )\ntrace3 = go.Bar(\n            x=data2017.sort_values('economy', ascending=False).country.head(15),\n            y=data2017.sort_values('economy', ascending=False).economy.head(15),\n            opacity=0.65,\n            name='2017 Economy'\n        )\n\n\nfig = tools.make_subplots(rows=3, cols=1, subplot_titles=())\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 2, 1)\nfig.append_trace(trace3, 3, 1)\n\nfig['layout'].update(height=550, width=900, title='2015 vs 2016 vs 2017')\niplot(fig)","4b39c55e":"trace1 = go.Bar(\n            x= data2015.sort_values('family', ascending=False).country.head(15),\n            y=data2015.sort_values('family', ascending=False).family.head(15),\n            opacity=0.65,\n            name='2015 Family'\n        )\n\ntrace2 = go.Bar(\n            x= data2016.sort_values('family', ascending=False).country.head(15),\n            y= data2016.sort_values('family', ascending=False).family.head(15),\n            opacity=0.65,\n            name='2016 Family'\n        )\ntrace3 = go.Bar(\n            x=data2017.sort_values('family', ascending=False).country.head(15),\n            y=data2017.sort_values('family', ascending=False).family.head(15),\n            opacity=0.65,\n            name='2017 Family'\n        )\n\n\nfig = tools.make_subplots(rows=3, cols=1, subplot_titles=())\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 2, 1)\nfig.append_trace(trace3, 3, 1)\n\nfig['layout'].update(height=550, width=900, title='2015 vs 2016 vs 2017')\niplot(fig)","b3edf7f2":"trace1 = go.Bar(\n            x= data2015.sort_values('freedom', ascending=False).country.head(15),\n            y=data2015.sort_values('freedom', ascending=False).freedom.head(15),\n            opacity=0.65,\n            name='2015 Freedom'\n        )\n\ntrace2 = go.Bar(\n            x= data2016.sort_values('freedom', ascending=False).country.head(15),\n            y= data2016.sort_values('freedom', ascending=False).freedom.head(15),\n            opacity=0.65,\n            name='2016 Freedom'\n        )\ntrace3 = go.Bar(\n            x=data2017.sort_values('freedom', ascending=False).country.head(15),\n            y=data2017.sort_values('freedom', ascending=False).freedom.head(15),\n            opacity=0.65,\n            name='2017 freedom'\n        )\n\n\nfig = tools.make_subplots(rows=3, cols=1, subplot_titles=())\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 2, 1)\nfig.append_trace(trace3, 3, 1)\n\nfig['layout'].update(height=600, width=900, title='2015 vs 2016 vs 2017')\niplot(fig)","7cf44d62":"## Health ranking by region","fc30a303":"##  Freedom ranking by region","1cf59a6f":"**Heatmap**","b965e78c":" ## Economy","39e0087c":"## Happiness ranking by region","23055478":"## Generosity ranking by region ","57950ba3":"## 2015 Happiness Score with World Map","9da602a9":"## Family","9cf805af":"## Freedom","1569095c":"## Generosity","05695ccb":"## 2015 Top 15 Country","bee33771":"## Happiness Score","1073eb7f":"**Happiness ranking by region**","87846bec":"##  Happiness ranking by country","a438aa00":"## Freedom","d56c1b3a":"## Family ranking by region","1a9eb112":"## Trust ranking by region"}}