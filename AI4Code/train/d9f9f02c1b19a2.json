{"cell_type":{"372f7822":"code","ea8313b8":"code","94968e9c":"code","3ba1357a":"code","25e28794":"code","4b3d5533":"code","04773848":"code","19c244eb":"code","e5990c97":"code","ac556439":"code","74d64e4c":"code","ee1ac8d9":"code","6a1307a2":"code","26c1a4b8":"code","73053499":"code","f7d32441":"code","f96733d2":"code","98d5a1fb":"code","ad6ea1fa":"code","db4bc3a6":"code","ab7fea5e":"code","00d01d8f":"code","e700fc2b":"code","3c1cfce6":"code","8b95e99c":"code","2915c048":"code","1ef77825":"code","f85a53b4":"code","2c23431f":"markdown","68cf7514":"markdown","0e9b1ef0":"markdown","2b92403c":"markdown","1b3930eb":"markdown","4f8351d1":"markdown","16d98941":"markdown"},"source":{"372f7822":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ea8313b8":"df = pd.read_csv('\/kaggle\/input\/kyphosis-dataset\/kyphosis.csv')","94968e9c":"df.head()","3ba1357a":"df.shape","25e28794":"df.describe()","4b3d5533":"df.info()","04773848":"df.isnull().sum()","19c244eb":"import matplotlib.pyplot as plt\nimport seaborn as sns","e5990c97":"sns.heatmap(df.isnull(),cmap='viridis')","ac556439":"sns.pairplot(df,hue='Kyphosis')","74d64e4c":"from sklearn.model_selection import train_test_split\n","ee1ac8d9":"X=df.drop('Kyphosis',axis=1)","6a1307a2":"y= df['Kyphosis']","26c1a4b8":"sns.countplot(y)","73053499":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,random_state=10)","f7d32441":"from sklearn.tree import DecisionTreeClassifier","f96733d2":"d_tree=DecisionTreeClassifier()","98d5a1fb":"d_tree.fit(X_train,y_train)","ad6ea1fa":"predictions = d_tree.predict(X_test)","db4bc3a6":"from sklearn.metrics import classification_report,confusion_matrix","ab7fea5e":"print(confusion_matrix(y_test,predictions))\nprint('\\n')\nprint(classification_report(y_test,predictions))","00d01d8f":"from sklearn.ensemble import RandomForestClassifier","e700fc2b":"rfc= RandomForestClassifier(n_estimators=100)","3c1cfce6":"rfc.fit(X_train,y_train)","8b95e99c":"rfc_pred= rfc.predict(X_test)","2915c048":"print(confusion_matrix(y_test,rfc_pred))\nprint('\\n')\nprint(classification_report(y_test,rfc_pred))","1ef77825":"features = list(df.columns[1:])\nfeatures","f85a53b4":"from sklearn import tree\nplt.figure(figsize=(14,9))\n_ = tree.plot_tree(d_tree,filled=True,feature_names=features,fontsize=8,class_names=['absent','present'])","2c23431f":"Class Imbalance is evident from the above figure","68cf7514":"**Now I will visualize the Decision Tree**","0e9b1ef0":"**Evaluating the Model**","2b92403c":"**Now building Random Forest Model**","1b3930eb":"**There are no missing values in the datasets**","4f8351d1":"Not much significant difference is visible. DT is almost at par(slightly better infact) with RF for this dataset.","16d98941":"**Predicting the test values**"}}