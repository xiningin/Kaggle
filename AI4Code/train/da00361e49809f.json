{"cell_type":{"3b05dd9f":"code","a18a6232":"code","c55048a7":"code","32fcb365":"code","4bf17ffd":"code","5342dc38":"code","60b34c61":"code","dfa48f9b":"code","83ee5ef0":"code","809863a8":"code","88201a82":"code","2f972a8c":"code","82883ab8":"code","e866dade":"code","08872180":"code","6fc94c81":"code","06ba1a50":"code","348647e5":"code","24cb63ac":"code","2208ab1a":"code","2e76724a":"code","46a493cc":"code","ce735e84":"code","d7639fec":"code","72d1813b":"code","b3ce5a6e":"code","98491d02":"code","0a47baf3":"code","39a13a23":"code","5938e0e9":"code","a02f6ef8":"code","6b1a3ef4":"code","7acdccda":"code","5e3d7fd5":"code","a1cae357":"code","81448d57":"code","0b1c97b7":"code","0a6939c8":"code","573c1e8e":"code","c773140e":"code","2121d95b":"code","ae94a60b":"code","7c1e693c":"code","794160ec":"code","256a9f18":"code","e9a70cb8":"code","5e2b5c09":"code","e2824b49":"code","c528a0cb":"code","50c4ba23":"code","04e25f86":"code","2821b212":"code","723e4ecb":"code","f47f8620":"code","f689e3e9":"code","625a7f41":"code","3fa67d75":"code","f4fa0c90":"code","a9334191":"code","99bec1eb":"code","dc7793ca":"code","a588f669":"code","99c5c1c5":"code","fccb9568":"code","bc306a0b":"code","0042b3c8":"code","06753009":"markdown","8f25f6fd":"markdown","d376fd2c":"markdown","a43d7343":"markdown","f1fcde92":"markdown","066782f8":"markdown","3e815e39":"markdown","1b054ad7":"markdown","767469e2":"markdown","4da04948":"markdown","871aa445":"markdown","3977d5fc":"markdown","fde37ff6":"markdown","73a95045":"markdown","995cc309":"markdown","2eb9a5c4":"markdown","205a7fbd":"markdown","bfb287be":"markdown","d0cc58fc":"markdown","831d37b1":"markdown","59c862d1":"markdown","2acbd4fd":"markdown","4045dfc8":"markdown","708fb18f":"markdown","74f235d5":"markdown","f0ea2ea6":"markdown","51fc79d9":"markdown","2f464ea6":"markdown","c35e4371":"markdown","2db7a46c":"markdown","dc6c36b5":"markdown","e57731a5":"markdown","ab6a5470":"markdown","34f94015":"markdown","96e929a5":"markdown","e7a08d8f":"markdown","7956a38e":"markdown","c49dc612":"markdown","94ff1a34":"markdown","6ac8ff77":"markdown","3db9922f":"markdown","1a2e8791":"markdown","ee76b3be":"markdown","06d7656e":"markdown","d392d97c":"markdown","0c811ea6":"markdown","49af800f":"markdown","82e6b241":"markdown","0673e9c5":"markdown","cd633e8f":"markdown","f60a44df":"markdown","cbaa4e5f":"markdown","b4f1597e":"markdown","9ce8d22b":"markdown","395be40f":"markdown","e6b33365":"markdown","beb4d5db":"markdown","be5191f3":"markdown","e722a930":"markdown","220aff5f":"markdown","3373b4ea":"markdown","7d68a174":"markdown","82da84a8":"markdown","4f71e4af":"markdown","25df974d":"markdown","0e592b0f":"markdown","31039c03":"markdown","8db07163":"markdown"},"source":{"3b05dd9f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a18a6232":"import pandas as pd\nfrom matplotlib import pyplot as plt \nimport plotly.express as px\nimport plotly.graph_objects as pg","c55048a7":"data = pd.read_csv('\/kaggle\/input\/customer-personality-analysis\/marketing_campaign.csv', sep=\"\\t\")\nprint(\"Number of rows:\", len(data))\nprint(\"Number of columns:\", data.shape[1])\ndata.head()","32fcb365":"# Dataset Summary\ndata.info()","4bf17ffd":"data = data.dropna()\nprint(\"The shape of the dataset after removing null values is : \", data.shape)","5342dc38":"print(\"Data type of Dt_Customer column before parsing : \", data[\"Dt_Customer\"].dtypes)\ndata[\"Dt_Customer\"] = pd.to_datetime(data[\"Dt_Customer\"])\nprint(\"Data type of Dt_Customer column after parsing : \", data[\"Dt_Customer\"].dtypes)\nprint(data[\"Dt_Customer\"].head())","60b34c61":"#Maximum and Minimum Yearly Income of customers\nprint(\"Maximum Yearly Income : \",max(data[\"Income\"]))\nprint(\"Minimum Yearly Income : \",min(data[\"Income\"]))","dfa48f9b":"#Creating Histogram plot\nfig = px.histogram(data, x=\"Income\", title=\"CUSTOMER'S YEARLY INCOME\")\n\n#Displaying Histogram plot\nfig.show()","83ee5ef0":"#Maximum and Minimum Number of children in customer's house\nprint(\"Maximum number of children in customer's house : \",max(data[\"Kidhome\"]))\nprint(\"Minimum number of children in customer's house : \",min(data[\"Kidhome\"]))","809863a8":"#Creating Histogram plot\nfig = px.histogram(data, x=\"Kidhome\", title=\"NUMBER OF KIDS IN CUSTOMER'S HOUSE\", nbins=5, color_discrete_sequence=[\"red\"])\n\n#Displaying Histogram plot\nfig.show()","88201a82":"#Maximum and Minimum Number of teens in customer's house\nprint(\"Maximum number of teens in customer's house : \",max(data[\"Teenhome\"]))\nprint(\"Minimum number of teens in customer's house : \",min(data[\"Teenhome\"]))","2f972a8c":"#Creating Histogram plot\nfig = px.histogram(data, x=\"Teenhome\", title=\"NUMBER OF TEENS IN CUSTOMER'S HOUSE\", nbins=5, color_discrete_sequence=[\"darkblue\"])\n\n#Displaying Histogram plot\nfig.show()","82883ab8":"#Newest and oldest customer enrollments with the company\nprint(\"Newest customer enrollment with the company : \",max(data[\"Dt_Customer\"]).date())\nprint(\"Oldest customer enrollment with the company : \",min(data[\"Dt_Customer\"]).date())","e866dade":"#Creating Histogram plot\nfig = px.histogram(data, x=\"Dt_Customer\", title=\"MONTHLY CUSTOMER ENROLLMENTS\", color_discrete_sequence=[\"royalblue\"])\n\n#Displaying Histogram plot\nfig.show()","08872180":"#Creating Histogram plot\nfig = px.histogram(data, x=\"Dt_Customer\", title=\"YEARLY CUSTOMER ENROLLMENTS\", nbins=3, color_discrete_sequence=[\"blueviolet\"])\n\n#Displaying Histogram plot\nfig.show()","6fc94c81":"#Maximum and Minimum number of days since customer's last purchase\nprint(\"Maximum number of days since customer's last purchase : \",max(data[\"Recency\"]))\nprint(\"Minimum number of days since customer's last purchase : \",min(data[\"Recency\"]))","06ba1a50":"#Creating Histogram plot\nfig = px.histogram(data, x=\"Recency\", title=\"NUMBER OF DAYS SINCE CUSTOMER'S LAST PURCHASE\", \n                   color_discrete_sequence=[\"dodgerblue\"])\n\n#Displaying Histogram plot\nfig.show()","348647e5":"#Maximum and Minimum amount spent on wines by the customers\nprint(\"Maximum amount spent on wines by the customers : \",max(data[\"MntWines\"]))\nprint(\"Minimum amount spent on wines by the customers : \",min(data[\"MntWines\"]))","24cb63ac":"#Creating Histogram plot\nfig = px.histogram(data, x=\"MntWines\", title=\"AMOUNT SPENT ON WINES\", \n                   color_discrete_sequence=[\"coral\"])\n\n#Displaying Histogram plot\nfig.show()","2208ab1a":"#Maximum and Minimum amount spent on fruits by the customers\nprint(\"Maximum amount spent on fruits by the customers : \",max(data[\"MntFruits\"]))\nprint(\"Minimum amount spent on fruits by the customers : \",min(data[\"MntFruits\"]))","2e76724a":"#Creating Histogram plot\nfig = px.histogram(data, x=\"MntFruits\", title=\"AMOUNT SPENT ON FRUITS\", \n                   color_discrete_sequence=[\"fuchsia\"])\n\n#Displaying Histogram plot\nfig.show()","46a493cc":"#Maximum and Minimum amount spent on meat products by the customers\nprint(\"Maximum amount spent on meat products by the customers : \",max(data[\"MntMeatProducts\"]))\nprint(\"Minimum amount spent on meat products by the customers : \",min(data[\"MntMeatProducts\"]))","ce735e84":"#Creating Histogram plot\nfig = px.histogram(data, x=\"MntMeatProducts\", title=\"AMOUNT SPENT ON MEAT PRODUCTS\", \n                   color_discrete_sequence=[\"orange\"])\n\n#Displaying Histogram plot\nfig.show()","d7639fec":"#Maximum and Minimum amount spent on fish products by the customers\nprint(\"Maximum amount spent on fish products by the customers : \",max(data[\"MntFishProducts\"]))\nprint(\"Minimum amount spent on fish products by the customers : \",min(data[\"MntFishProducts\"]))","72d1813b":"#Creating Histogram plot\nfig = px.histogram(data, x=\"MntFishProducts\", title=\"AMOUNT SPENT ON FISH PRODUCTS\", \n                   color_discrete_sequence=[\"mediumorchid\"])\n\n#Displaying Histogram plot\nfig.show()","b3ce5a6e":"#Maximum and Minimum amount spent on sweet products by the customers\nprint(\"Maximum amount spent on sweet products by the customers : \",max(data[\"MntSweetProducts\"]))\nprint(\"Minimum amount spent on sweet products by the customers : \",min(data[\"MntSweetProducts\"]))","98491d02":"#Creating Histogram plot\nfig = px.histogram(data, x=\"MntSweetProducts\", title=\"AMOUNT SPENT ON SWEET PRODUCTS\", \n                   color_discrete_sequence=[\"mediumslateblue\"])\n\n#Displaying Histogram plot\nfig.show()","0a47baf3":"#Maximum and Minimum amount spent on gold products by the customers\nprint(\"Maximum amount spent on gold products by the customers : \",max(data[\"MntGoldProds\"]))\nprint(\"Minimum amount spent on gold products by the customers : \",min(data[\"MntGoldProds\"]))","39a13a23":"#Creating Histogram plot\nfig = px.histogram(data, x=\"MntGoldProds\", title=\"AMOUNT SPENT ON GOLD PRODUCTS\", \n                   color_discrete_sequence=[\"mediumvioletred\"])\n\n#Displaying Histogram plot\nfig.show()","5938e0e9":"print(\"Total categories in Education column : \")\nedu = data.pivot_table(index = ['Education'], aggfunc = 'size') \nedu = edu.reset_index()\nedu.columns= [\"Qualifications\", \"Counts\"]\nedu.sort_values(\"Counts\", ascending = False, inplace = True)\nprint(edu)","a02f6ef8":"# Creating Donut Plot\nfig = plt.figure(figsize = (12, 13)) \ncircle = plt.Circle( (0,0), 0.5, color = 'white')\nplt.pie(edu[\"Counts\"], labels = edu[\"Qualifications\"])\np=plt.gcf()\np.gca().add_artist(circle)\nplt.legend(edu[\"Counts\"])\nplt.title(\"QUALIFICATIONS\", fontsize=35)\n\n# Displaying Donut Plot\nplt.show() ","6b1a3ef4":"print(\"Total categories in Marital_Status column : \")\nms = data.pivot_table(index = ['Marital_Status'], aggfunc = 'size') \nms = ms.reset_index()\nms.columns= [\"Marital_Status\", \"Counts\"]\nms = ms.sort_values(\"Counts\", ascending = False)\nprint(ms)","7acdccda":"# Creating Donut Plot\nfig = plt.figure(figsize = (12, 13)) \ncircle = plt.Circle( (0,0), 0.5, color = 'white')\nplt.pie(ms[\"Counts\"], labels = ms[\"Marital_Status\"])\np=plt.gcf()\np.gca().add_artist(circle)\nplt.legend(ms[\"Counts\"])\nplt.title(\"Marital_Status\", fontsize=35)\n\n# Displaying Donut Plot\nplt.show() ","5e3d7fd5":"#Maximum and Minimum number of complaints from the customer\nprint(\"Maximum number of complaints from the customer : \",max(data[\"Complain\"]))\nprint(\"Minimum number of complaints from the customer : \",min(data[\"Complain\"]))","a1cae357":"#Creating Histogram plot\nfig = px.histogram(data, y=\"Complain\", title=\"NUMBER OF CUSTOMER COMPLAINTS\", \n                   color_discrete_sequence=[\"red\"])\n\n#Displaying Histogram plot\nfig.show()","81448d57":"#Frequency count of AcceptedCmp1 Column\ncount1 = data['AcceptedCmp1'].value_counts()\nprint(\"Frequency count of AcceptedCmp1 Column\")\nprint(count1)\n\n#Frequency count of AcceptedCmp2 Column\ncount2 = data['AcceptedCmp2'].value_counts()\nprint(\"Frequency count of AcceptedCmp2 Column\")\nprint(count2)\n\n#Frequency count of AcceptedCmp3 Column\ncount3 = data['AcceptedCmp3'].value_counts()\nprint(\"Frequency count of AcceptedCmp3 Column\")\nprint(count3)\n\n#Frequency count of AcceptedCmp4 Column\ncount4 = data['AcceptedCmp4'].value_counts()\nprint(\"Frequency count of AcceptedCmp4 Column\")\nprint(count4)\n\n#Frequency count of AcceptedCmp5 Column\ncount5 = data['AcceptedCmp5'].value_counts()\nprint(\"Frequency count of AcceptedCmp5 Column\")\nprint(count5)\n\n#Frequency count of Response Column\nres = data['Response'].value_counts()\nprint(\"Frequency count of Response Column\")\nprint(res)","0b1c97b7":"x=['AcceptedCmp1', 'AcceptedCmp2', 'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'Response']\n  \nfig = pg.Figure(data=[pg.Bar(\n    name = 'Accepted Offers',\n    x = x,\n    y = [count1[0], count2[0], count3[0], count4[0], count5[0], res[0]]\n   ),\n                       pg.Bar(\n    name = 'Total Offers',\n    x = x,\n    y = [count1[0]+count1[1], count2[0]+count2[1], count3[0]+count3[1], count4[0]+count4[1], count5[0]+count5[1], res[0]+res[1]]\n   )\n])\n\n#Displaying Bar Chart\nfig.show()","0a6939c8":"x=['AcceptedCmp1', 'AcceptedCmp2', 'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'Response']\n  \nfig = pg.Figure(data=[pg.Bar(\n    name = 'Rejected Offers',\n    x = x,\n    y = [count1[1], count2[1], count3[1], count4[1], count5[1], res[1]]\n   ),\n                       pg.Bar(\n    name = 'Total Offers',\n    x = x,\n    y = [count1[0]+count1[1], count2[0]+count2[1], count3[0]+count3[1], count4[0]+count4[1], count5[0]+count5[1], res[0]+res[1]]\n   )\n])\n\n#Displaying Bar Chart\nfig.show()","573c1e8e":"#Customer's Age\ndata[\"Age\"] = 2021-data[\"Year_Birth\"]\ndata[\"Age\"].head()","c773140e":"#Maximum and Minimum customer's age\nprint(\"Maximum age of the customer : \",max(data[\"Age\"]))\nprint(\"Minimum age of the customer : \",min(data[\"Age\"]))","2121d95b":"#Creating Histogram plot\nfig = px.histogram(data, x=\"Age\", title=\"CUSTOMER'S AGE\", color_discrete_sequence=[\"royalblue\"])\n\n#Displaying Histogram plot\nfig.show()","ae94a60b":"#Customer's Total Expenses\ndata[\"Expenses\"] = data[\"MntWines\"]+ data[\"MntFruits\"]+ data[\"MntMeatProducts\"]+ data[\"MntFishProducts\"]+ data[\"MntSweetProducts\"]+ data[\"MntGoldProds\"]\ndata[\"Expenses\"].head()","7c1e693c":"#Customer's Maximum and Minimum total expenses\nprint(\"Customer's Maximum total expenses : \",max(data[\"Expenses\"]))\nprint(\"Customer's Minimum total expenses : \",min(data[\"Expenses\"]))","794160ec":"#Creating Histogram plot\nfig = px.histogram(data, x=\"Expenses\", title=\"CUSTOMER'S TOTAL EXPENSES\", color_discrete_sequence=[\"red\"])\n\n#Displaying Histogram plot\nfig.show()","256a9f18":"data[\"Relationship_Status\"]=data[\"Marital_Status\"].replace({\"Married\":\"Married\", \"Together\":\"Married\",\n                                                    \"Absurd\":\"Single\", \"Widow\":\"Single\", \"YOLO\":\"Single\", \n                                                    \"Divorced\":\"Single\", \"Single\":\"Single\", \"Alone\":\"Single\"})\ndata[\"Relationship_Status\"].head()","e9a70cb8":"print(\"Total categories in Relationship_Status column : \")\nrs = data.pivot_table(index = ['Relationship_Status'], aggfunc = 'size') \nrs = rs.reset_index()\nrs.columns= [\"Relationship_Status\", \"Counts\"]\nrs = rs.sort_values(\"Counts\", ascending = False)\nprint(rs)","5e2b5c09":"# Creating Donut Plot\nfig = plt.figure(figsize = (12, 13)) \ncircle = plt.Circle( (0,0), 0.5, color = 'white')\nplt.pie(rs[\"Counts\"], labels = rs[\"Relationship_Status\"])\np=plt.gcf()\np.gca().add_artist(circle)\nplt.legend(rs[\"Counts\"])\nplt.title(\"Relationship_Status\", fontsize=35)\n\n# Displaying Donut Plot\nplt.show() ","e2824b49":"data[\"Adults\"]=data[\"Relationship_Status\"].replace({\"Married\": 2, \"Single\": 1})\ndata[\"Adults\"].head()","c528a0cb":"data[\"Non-Adults\"]=data[\"Kidhome\"]+data[\"Teenhome\"]\ndata[\"Non-Adults\"].head()","50c4ba23":"#Maximum and Minimum Number of non-adults in customer's house\nprint(\"Maximum number of non-adults in customer's house : \",max(data[\"Non-Adults\"]))\nprint(\"Minimum number of non-adults in customer's house : \",min(data[\"Non-Adults\"]))","04e25f86":"#Creating Histogram plot\nfig = px.histogram(data, x=\"Non-Adults\", title=\"NUMBER OF NON-ADULTS IN CUSTOMER'S HOUSE\", color_discrete_sequence=[\"blue\"])\n\n#Displaying Histogram plot\nfig.show()","2821b212":"data[\"Family_Size\"] = data[\"Adults\"]+ data[\"Non-Adults\"]\ndata[\"Family_Size\"].head()","723e4ecb":"#Maximum and Minimum Number of family members in customer's house\nprint(\"Maximum number of family members in customer's house : \",max(data[\"Family_Size\"]))\nprint(\"Minimum number of family members in customer's house : \",min(data[\"Family_Size\"]))","f47f8620":"#Creating Histogram plot\nfig = px.histogram(data, x=\"Family_Size\", title=\"FAMILY SIZE IN CUSTOMER'S HOUSE\", color_discrete_sequence=[\"blueviolet\"])\n\n#Displaying Histogram plot\nfig.show()","f689e3e9":"data[\"Educational_Level\"]=data[\"Education\"].replace({\"Basic\":\"Undergraduate\",\"2n Cycle\":\"Undergraduate\", \n                                                   \"Graduation\":\"Postgraduate\", \"Master\":\"Postgraduate\", \"PhD\":\"Postgraduate\"})\ndata[\"Educational_Level\"].head()","625a7f41":"print(\"Total categories in Educational_Level column : \")\nel = data.pivot_table(index = ['Educational_Level'], aggfunc = 'size') \nel = el.reset_index()\nel.columns= [\"Educational_Level\", \"Counts\"]\nel = el.sort_values(\"Counts\", ascending = False)\nprint(el)","3fa67d75":"#Creating Bar plot\nfig = px.bar(el, x=\"Counts\", y=\"Educational_Level\", \n             title=\"EDUCATIONAL LEVELS\", color_discrete_sequence=[\"red\"])\n\n#Displaying Bar plot\nfig.show()","f4fa0c90":"data[\"Total_Purchases\"] = data[\"NumDealsPurchases\"]+data[\"NumWebPurchases\"] + data[\"NumCatalogPurchases\"] + data[\"NumStorePurchases\"]\ndata[\"Total_Purchases\"].head()","a9334191":"#Maximum and Minimum Number of purchases made by the customers\nprint(\"Maximum number of purchases made by the customers : \",max(data[\"Total_Purchases\"]))\nprint(\"Minimum number of purchases made by the customers : \",min(data[\"Total_Purchases\"]))","99bec1eb":"#Creating Histogram plot\nfig = px.histogram(data, y=\"Total_Purchases\", title=\"TOTAL PURCHASES MADE BY THE CUSTOMERS\", \n                   color_discrete_sequence=[\"coral\"])\n\n#Displaying Histogram plot\nfig.show()","dc7793ca":"data['TotalAcceptedCmp'] = data['AcceptedCmp1']+data['AcceptedCmp2']+data['AcceptedCmp3']+data['AcceptedCmp4']+data['AcceptedCmp5']+data['Response']\ndata[\"TotalAcceptedCmp\"].head()","a588f669":"#Maximum and Minimum Number of total accepted campaigns by the customers\nprint(\"Maximum number of total accepted campaigns by the customers : \",max(data[\"TotalAcceptedCmp\"]))\nprint(\"Minimum number of total accepted campaigns by the customers : \",min(data[\"TotalAcceptedCmp\"]))","99c5c1c5":"#Creating Histogram plot\nfig = px.histogram(data, y=\"TotalAcceptedCmp\", title=\"TOTAL ACCEPTED CAMPAIGNS BY THE CUSTOMERS\", \n                   color_discrete_sequence=[\"blue\"])\n\n#Displaying Histogram plot\nfig.show()","fccb9568":"data[\"WebVistPurchases\"] = data[\"NumWebPurchases\"] - data[\"NumWebVisitsMonth\"]\ndata[\"WebVistPurchases\"].head()","bc306a0b":"#Maximum and Minimum Number of purchases when customer vists company website\nprint(\"Maximum number of purchases when customer vists company website : \",max(data[\"WebVistPurchases\"]))\nprint(\"Minimum number of purchases when customer vists company website : \",min(data[\"WebVistPurchases\"]))","0042b3c8":"#Creating Histogram plot\nfig = px.histogram(data, y=\"WebVistPurchases\", title=\"WEB VIST PURCHASES\", \n                   color_discrete_sequence=[\"ROYALblue\"])\n\n#Displaying Histogram plot\nfig.show()","06753009":"**5. Calculating number of non-adults by adding kids and teens in customer's house**","8f25f6fd":"# EXPLORING AGE COLUMN","d376fd2c":"# EXPLORING EDUCATIONAL_LEVEL COLUMN","a43d7343":"# EXPLORING NON-ADULTS COLUMN","f1fcde92":"# EXPLORING TOTAL_PURCHASES COLUMN","066782f8":"**6. Calculating Family size by adding number of adults and non-adults in customer's house**","3e815e39":"# ELIMINATE NULL VALUES ","1b054ad7":"# VISUALIZING AMOUNT SPENT ON FRUITS BY HISTOGRAM","767469e2":"# VISUALIZING CUSTOMER'S TOTAL EXPENSES BY HISTOGRAM","4da04948":"# EXPLORING MNTFISHPRODUCTS COLUMN","871aa445":"# EXPLORING MNTSWEETPRODUCTS COLUMN","3977d5fc":"# VISUALIZING CUSTOMER'S LAST PURCHASE BY HISTOGRAM","fde37ff6":"# VISUALIZING AMOUNT SPENT ON SWEET PRODUCTS BY HISTOGRAM","73a95045":"# VISUALIZING WEB VIST PURCHASES BY HISTOGRAM","995cc309":"# EXPLORING KIDHOME COLUMN","2eb9a5c4":"# VISUALIZING AMOUNT SPENT ON FISH PRODUCTS BY HISTOGRAM","205a7fbd":"# VISUALIZING NUMBER OF TEENS IN CUSTOMER'S HOUSE BY HISTOGRAM","bfb287be":"# VISUALIZING FAMILY SIZE IN CUSTOMER'S HOUSE BY HISTOGRAM","d0cc58fc":"# VISUALIZING TOTAL PURCHASES MADE BY THE CUSTOMERS ( HISTOGRAM )","831d37b1":"**9. Calculating total accepted campaigns**","59c862d1":"# REVEALING THE CATEGORICAL FEATURES","2acbd4fd":"# VISUALIZING YEARLY INCOME BY HISTOGRAM","4045dfc8":"# EXPLORING TEENHOME COLUMN","708fb18f":"# EXPLORING WEB VIST PURCHASES COLUMN","74f235d5":"**We want to examine the dataset to know the steps taken to clean the dataset.**","f0ea2ea6":"# EXPLORING MNTGOLDPRODS COLUMN","51fc79d9":"# EXPLORING COMPLAIN COLUMN","2f464ea6":"**10. Calculating purchases during company website vists**","c35e4371":"# VISUALIZING QUALIFICATIONS BY DONUT PLOT","2db7a46c":"# VISUALIZING MARITAL_STATUS BY DONUT PLOT","dc6c36b5":"# EXPLORING MNTFRUITS COLUMN","e57731a5":"# EXPLORING TOTALACCEPTEDCMP COLUMN","ab6a5470":"# VISUALIZING AMOUNT SPENT ON GOLD PRODUCTS BY HISTOGRAM","34f94015":"**From the above output, we can conclude that**\n\n1. The Income column has missing values. \n\n2. Instead of DateTime, Date of customer's enrollment with the company ( Dt_Customer column ) was parsed as Object.\n\n3. We need to encode Education and Marital_Status column in the data frame since it has categorical features.\n","96e929a5":"# EXPLORING ACCEPTED CAMPAIGNS AND RESPONSE COLUMNS","e7a08d8f":"# VISUALIZING NUMBER OF NON-ADULTS IN CUSTOMER'S HOUSE BY HISTOGRAM","7956a38e":"# VISUALIZING AMOUNT SPENT ON MEAT PRODUCTS BY HISTOGRAM","c49dc612":"**4. Calculating number of adults in customer's house**","94ff1a34":"# VISUALIZING CUSTOMER'S AGE BY HISTOGRAM","6ac8ff77":"# VISUALIZING CUSTOMER ENROLLMENTS BY HISTOGRAM","3db9922f":"# VISUALIZING COMPLAINTS FROM THE CUSTOMER BY HISTOGRAM","1a2e8791":"# IMPORTING LIBRARIES","ee76b3be":"# VISUALIZING AMOUNT SPENT ON WINES BY HISTOGRAM","06d7656e":"# EXPLORING RECENCY COLUMN","d392d97c":"# VISUALIZING OFFERS REJECTED IN EACH CAMPAIGNS BY BAR CHART","0c811ea6":"# EXPLORING RELATIONSHIP_STATUS COLUMN","49af800f":"**2. On adding the amount spent on wines, fruits, meat, fish, sweet and gold products, we get the customer's total expenses**","82e6b241":"# EXPLORING MNTWINES COLUMN","0673e9c5":"# EXPLORING MARITAL_STATUS COLUMN","cd633e8f":"# EXPLORING DT_CUSTOMER COLUMN","f60a44df":"**1. \"Year_Birth\" column contains customer's birth year when on subtracting it from the current year gives customer's age.**","cbaa4e5f":"**3. Dividing Customer's Marital_Status into Married and Single Relationship_Status**","b4f1597e":"# PARSING OBJECT AS DATETIME","9ce8d22b":"# EXPLORING EDUCATION COLUMN","395be40f":"# LOADING DATA","e6b33365":"# FEATURE ENGINEERING","beb4d5db":"# EXPLORING MNTMEATPRODUCTS COLUMN","be5191f3":"# VISUALIZING OFFERS ACCEPTED IN EACH CAMPAIGNS BY BAR CHART","e722a930":"# VISUALIZING EDUCATIONAL LEVELS BY BAR PLOT","220aff5f":"**7. Dividing educational levels into three - Undergraduate, Graduate, Postgraduate**","3373b4ea":"# EXPLORING EXPENSES COLUMN","7d68a174":"**8. Calculating total number of purchases by adding website, catalogue and store purchases**","82da84a8":"# EXPLORING FAMILY_SIZE COLUMN","4f71e4af":"# VISUALIZING RELATIONSHIP_STATUS BY DONUT PLOT","25df974d":"# VISUALIZING TOTAL ACCEPTED CAMPAIGNS BY THE CUSTOMERS ( HISTOGRAM )","0e592b0f":"# DATA CLEANING","31039c03":"# VISUALIZING NUMBER OF KIDS IN CUSTOMER'S HOUSE BY HISTOGRAM","8db07163":"# EXPLORING INCOME COLUMN "}}