{"cell_type":{"8c097045":"code","0b103dc2":"code","a631332d":"code","3d552e69":"code","b71284c7":"code","ec375c4b":"code","646c8ae0":"code","296404b9":"code","ea1a05d3":"code","76ec66fb":"code","c86663ef":"code","dd6776eb":"code","a3f0c517":"code","882954e6":"code","ea94d697":"code","83ab598d":"code","d537bb52":"code","77fb26e1":"code","43a60d6b":"code","0bd4ff51":"code","b7180c02":"code","e5451c3e":"code","a6d42fda":"code","aefc6840":"code","8358ea5b":"code","2b9b182a":"code","77b3b27f":"code","a9316677":"code","e2dd15ca":"code","843688fb":"code","33c926e4":"code","372d7386":"code","8a090665":"code","44829dab":"code","a69ebdfb":"code","06f880ea":"code","a7bb3cdb":"code","d8ebc92f":"code","dc176a38":"code","43bc52ca":"code","bc3d8544":"code","0f6b8475":"code","bfa7f0ab":"code","6977f351":"code","52c50a78":"code","2d40ccbb":"code","15d0d750":"code","a76d07f3":"code","a5de567d":"code","6b9c92d1":"code","6c34a09f":"code","2305d962":"markdown","72f0433e":"markdown","104a9a93":"markdown","e9c75c47":"markdown","3f701d70":"markdown","0eadeb98":"markdown","dd75488e":"markdown"},"source":{"8c097045":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","0b103dc2":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')","a631332d":"# Reading the data from file\ndata=pd.read_csv('..\/input\/heart.csv')\n\ndata.head(5)","3d552e69":"data.shape  # Shape of data","b71284c7":"data.describe(include = 'all')","ec375c4b":"data.info()","646c8ae0":"df = data.copy()","296404b9":"df.columns","ea1a05d3":"# changing the column to its full name\ndf.columns = ['age', 'sex', 'chest_pain_type', 'resting_blood_pressure', 'serum_cholesterol', 'fasting_blood_sugar', 'rest_ecg', 'max_heart_rate',\n       'exercise_angina', 'st_depression', 'st_slope', 'num_major_vessels', 'thalassemia', 'target']","76ec66fb":"df.head() # Visualising the firs't five row of data","c86663ef":"df.target = df.target.replace({0:'No Heart Disease', 1:'Heart Disease'})\ndf.sex = df.sex.replace({0:'female', 1:'male'})\ndf.chest_pain_type = df.chest_pain_type.replace({1:'agina pectoris', 2:'atypical agina', 3:'non-anginal pain', 4:'SMI', 0:'absent'})\ndf.st_slope = df.st_slope.replace({1:'upsloping', 2:'horizontal', 3:'downsloping', 0:'absent'})\ndf.fasting_blood_sugar = df.fasting_blood_sugar.replace({0:'lower than 120mg\/ml', 1:'greater than 120mg\/ml'})\ndf.exercises_angina = df.exercise_angina.replace({0:'no', 1:'yes'})\ndf.thalassemia = df.thalassemia.replace({1:'normal', 2:'fixed defect', 3:'reversable defect', 0:'absent'})","dd6776eb":"df.head()","a3f0c517":"#Plotting the histogram out of it\ndf.hist(figsize = (20,20))\nplt.show()","882954e6":"# Countplot foir target and sex variable\nsns.countplot(x=\"target\", hue=\"sex\", data = df)\nplt.show()","ea94d697":"#Count plot for sex variable alone\nsns.countplot(x= 'sex', data = df)\nplt.show()","83ab598d":"sns.distplot(df[df.sex==\"male\"].age, color=\"b\")\nsns.distplot(df[df.sex==\"female\"].age, color=\"r\")\nplt.xlabel(\"Age Distribution (blue = male, red = female)\")\nplt.show()","d537bb52":"sns.pairplot(data, hue = 'target', diag_kind = 'kde',markers = ['o','+'])\nplt.show()","77fb26e1":"sns.distplot(df['serum_cholesterol'])\n","43a60d6b":"df.columns","0bd4ff51":"df.groupby(df['target']).count()","b7180c02":"df.groupby(df['fasting_blood_sugar']).count()","e5451c3e":"pd.crosstab(df['sex'], df['target'])","a6d42fda":"pd.crosstab(df['sex'],df['chest_pain_type'])","aefc6840":"pd.crosstab(df['sex'],df['fasting_blood_sugar'])","8358ea5b":"pd.crosstab(df['sex'], df['st_slope'])","2b9b182a":"sns.boxplot(x = df['sex'], y = df['st_depression'], data = df)\nplt.show()","77b3b27f":"sns.boxplot(x = df['sex'], y = df['serum_cholesterol'], data = df)\nplt.show()","a9316677":"sns.boxplot(x = df['target'], y = df['max_heart_rate'], data = df)\nplt.show()","e2dd15ca":"sns.boxplot(x = df['sex'], y = df['max_heart_rate'], data = df)\nplt.show()","843688fb":"corr = data.corr()\ncorr","33c926e4":"plt.figure(figsize = (20,10))\nsns.heatmap(corr,annot = True)\nplt.show()","372d7386":"#Getting the information about data types of data\ndf.info()","8a090665":"#Total unique values in chest pain\ndf['chest_pain_type'].value_counts()","44829dab":"#total unique values in gender\ndf['sex'].value_counts()","a69ebdfb":"df['fasting_blood_sugar'].value_counts()","06f880ea":"# Function to show the unique values in columns of data\ndef show_value_counts(heart_data):\n    for column in heart_data:\n        if column in ['chest_pain_type','fasting_blood_sugar','rest_ecg','exercise_angina','thalassemia','target']:\n            print(heart_data[column].value_counts())\n            \n            \nshow_value_counts(df)","a7bb3cdb":"#Plot the realtion between features and target value\nplt.style.use('dark_background')\ncorr1_new_train=data.corr()\nplt.figure(figsize=(5,15))\nsns.heatmap(corr1_new_train[['target']].sort_values(by=['target'],ascending=False),annot_kws={\"size\": 16},vmin=-1, cmap='PiYG', annot=True)\nsns.set(font_scale=2)","d8ebc92f":"data[\"resting_blood_pressure\/serum_chelostral\"] = data[\"trestbps\"]\/data[\"chol\"]\ndata[\"max_heart_rate\/depression\"] = data[\"oldpeak\"]\/data[\"thalach\"]\ndata[\"max_heart_rate\/resting_blood\"]=data[\"thalach\"]\/data[\"trestbps\"]\ndata[\"max_heart_rate\/serum_cholestral\"]=data[\"thalach\"]\/data[\"chol\"]\ndata[\"age\/st_depression\"]=data['oldpeak']\/data[\"age\"]\ndata[\"resting_blood_pressure\/age\"]=data[\"trestbps\"]\/data[\"age\"]\ndata[\"serum_cholestral\/age\"]=data[\"chol\"]\/data[\"age\"]\ndata[\"max_heart_rate\/age\"]=data[\"thalach\"]\/data[\"age\"]","dc176a38":"#Again ploting the relation between target and features\nplt.style.use('dark_background')\ncorr1_new_train=data.corr()\nplt.figure(figsize=(5,15))\nsns.heatmap(corr1_new_train[['target']].sort_values(by=['target'],ascending=False),annot_kws={\"size\": 16},vmin=-1, cmap='PiYG', annot=True)\nsns.set(font_scale=2)","43bc52ca":"#Drawing the pairplot between data's to get some information how they are responsible to classify the data\nsns.pairplot(data, hue = 'target', diag_kind = 'kde',markers = ['o','+'])\nplt.show()","bc3d8544":"#plt.bar()","0f6b8475":"from sklearn.model_selection import StratifiedShuffleSplit\nsplit = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)\nfor train_index, test_index in split.split(data, data[\"target\"]):\n    strat_train_set = data.loc[train_index]\n    strat_test_set = data.loc[test_index]","bfa7f0ab":"strat_train_set=strat_train_set.reset_index(drop = True)\nstrat_train_set.head()","6977f351":"strat_test_set=strat_test_set.reset_index(drop = True)\nstrat_test_set.head()","52c50a78":"heart = strat_train_set.drop(\"target\", axis=1)\nheart_labels = strat_train_set[\"target\"].copy()","2d40ccbb":"from tpot import TPOTClassifier\ntpot = TPOTClassifier(verbosity=2,cv = 3,early_stop = 10)\ntpot.fit(heart.copy(),heart_labels.copy())","15d0d750":"y_pred = tpot.predict(strat_test_set.drop('target',axis = 1))\n# Making the Confusion Matrix\nfrom sklearn import metrics\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_pred, strat_test_set['target'].copy())\nsns.heatmap(cm,annot = True)","a76d07f3":"accuracy_score(y_pred,strat_test_set['target'].copy())","a5de567d":"print(metrics.classification_report(y_pred,strat_test_set['target'].copy()))","6b9c92d1":"#3.XGBoost one of the powefull ML Algorithm\nfrom xgboost import XGBClassifier\n\nmy_model = XGBClassifier(n_estimators=1000, learning_rate=0.01, n_job= 2,min_child_weight=5)\nmy_model.fit(heart.copy(),heart_labels.copy(), \n             early_stopping_rounds=10, \n             eval_set=[(heart.copy(),heart_labels.copy())], \n             verbose=1)\n","6c34a09f":"y_pred = my_model.predict(strat_test_set.drop('target',axis = 1))\n# Making the Confusion Matrix\nfrom sklearn import metrics\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_pred, strat_test_set['target'].copy())\nsns.heatmap(cm,annot = True)","2305d962":"# Univariate analysis","72f0433e":"# Performing the Feature Engineering","104a9a93":"## Importing the Important library","e9c75c47":"## Now Splitting the data into training set and testing set","3f701d70":"As we can see above the target value is not even that means the classifier will be little baised towards the predicting Heart Disease","0eadeb98":"# Let's Look inside the data","dd75488e":"# Don't Forget to upvote :)"}}