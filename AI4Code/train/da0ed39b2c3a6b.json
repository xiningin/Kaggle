{"cell_type":{"acb6e19c":"code","bd046ee0":"code","4fdc8fb0":"code","85dff7fd":"code","891848fa":"code","55b2cd92":"code","fae33039":"code","bfd151d7":"code","6f3e97d3":"code","c2895efa":"code","2c8e8aa0":"code","df7532e1":"code","8058b69a":"code","b7c40b22":"code","03a166fe":"code","484a78ff":"code","339c7de0":"code","be8f370b":"code","f387f61b":"code","a6e27d0d":"code","2faa252d":"code","03ef027a":"code","a9fdce69":"code","4ec1f2ec":"code","29a74b34":"code","cde8d200":"markdown","ddb671c9":"markdown","fdb79ad9":"markdown","d0a41443":"markdown","47ba7d99":"markdown","de917264":"markdown","eafbf95c":"markdown","920fecb6":"markdown","16107b63":"markdown","ebb2f130":"markdown","b4094a7d":"markdown","7d272491":"markdown","d4280043":"markdown"},"source":{"acb6e19c":"!pip install -U git+https:\/\/github.com\/paoloripamonti\/face-recognition.git","bd046ee0":"from face_recognition import FaceRecognition\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, roc_curve, precision_recall_curve, roc_auc_score, accuracy_score\n\nimport matplotlib.pyplot as plt\nimport os\nimport glob\nimport pandas as pd\nimport random\nimport numpy as np\nimport cv2\nimport base64\nfrom tqdm import tqdm\nimport requests\nfrom pprint import pprint","4fdc8fb0":"ROOT_Train =\"\/kaggle\/input\/lfw-simulated-masked-face-dataset\/lfw_masked\/lfw_train\/\"\nROOT_Test = \"\/kaggle\/input\/lfw-simulated-masked-face-dataset\/lfw_masked\/lfw_test\/\"\nMODEL_PATH = \"lfw_smfrd_model.pkl\"","85dff7fd":"train = []\nfor path in glob.iglob(os.path.join(ROOT_Train, \"**\", \"*.jpg\")):\n    person = path.split(\"\/\")[-2]\n    train.append({\"person\":person, \"path\": path})\n    \ntrain = pd.DataFrame(train)\ntrain = train.groupby(\"person\").filter(lambda x: len(x) > -1)\ntrain.head(10)","891848fa":"train.groupby(\"person\").count()[:50].plot(kind='bar', figsize=(20,5))","55b2cd92":"print(\"number of person in train dataset : %s\" %(len(train.groupby(\"person\"))))\nprint(\"number of image in train dataset : %s\" %(len(train)))","fae33039":"plt.figure(figsize=(20,10))\nfor i in range(10):\n    idx = random.randint(0, len(train))\n    img = plt.imread(train.path.iloc[idx])\n    plt.subplot(4, 5, i+1)\n    plt.imshow(img)\n    plt.title(train.person.iloc[idx])\n    plt.xticks([])\n    plt.yticks([])\nplt.tight_layout()\nplt.show()","bfd151d7":"test = []\ni = 0\npp = []\nfor path in glob.iglob(os.path.join(ROOT_Test, \"**\", \"*.jpg\")):\n    pp.append(path)\n    person = path.split(\"\/\")[-2]\n    test.append({\"person\":person, \"path\": path})\n    i += 1\ntest = pd.DataFrame(test)\ntest = test.groupby(\"person\").filter(lambda x: len(x) > -1)\ntest.head(10)","6f3e97d3":"print(\"number of person in test dataset : %s\" %(len(test.groupby(\"person\"))))\nprint(\"number of image in test dataset : %s\" %(len(test)))","c2895efa":"test.groupby(\"person\").count()[:].plot(kind='bar', figsize=(20,5))","2c8e8aa0":"plt.figure(figsize=(20,10))\nfor i in range(10):\n    idx = random.randint(0, len(test))\n    img = plt.imread(test.path.iloc[idx])\n    plt.subplot(4, 5, i+1)\n    plt.imshow(img)\n    plt.title(test.person.iloc[idx])\n    plt.xticks([])\n    plt.yticks([])\nplt.tight_layout()\nplt.show()","df7532e1":"print(\"Train:\",len(train))\nprint(\"Test:\",len(test))","8058b69a":"%%time\nfr = FaceRecognition()","b7c40b22":"%%time\nfr.fit_from_dataframe(train)","03a166fe":"fr.save(MODEL_PATH)","484a78ff":"%%time\ny_test, y_pred, y_scores = [],[],[]\nfor idx in tqdm(range(len(test))):\n    path = test.path.iloc[idx]\n    result = fr.predict(path)\n    for prediction in result[\"predictions\"]:\n        y_pred.append(prediction[\"person\"])\n        y_scores.append(prediction[\"confidence\"])\n        y_test.append(test.person.iloc[idx])","339c7de0":"print(classification_report(y_test, y_pred))","be8f370b":"print(\"Accuracy: %f\" % accuracy_score(y_test, y_pred))","f387f61b":"person = \"Azra_Akin\"\npath = test[test.person==person][\"path\"].iloc[0]\nimg = cv2.imread(path)\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nresult = fr.predict(path)\nfile_bytes = np.fromstring(base64.b64decode(result[\"frame\"]), np.uint8)\noutput = cv2.imdecode(file_bytes,1)\nplt.figure(figsize=(10,5))\nplt.subplot(1, 2, 1)\nplt.imshow(img)\nplt.title(person)\nplt.subplot(1, 2, 2)\nplt.imshow(output)\nprint(result[\"predictions\"][0][\"confidence\"])\nplt.title(\"%s (%f)\" % (result[\"predictions\"][0][\"person\"], result[\"predictions\"][0][\"confidence\"]))\nplt.tight_layout()\nplt.show()","a6e27d0d":"person = \"Bashar_Assad\"\npath = test[test.person==person][\"path\"].iloc[0]\nimg = cv2.imread(path)\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nresult = fr.predict(path)\nfile_bytes = np.fromstring(base64.b64decode(result[\"frame\"]), np.uint8)\noutput = cv2.imdecode(file_bytes,1)\nplt.figure(figsize=(10,5))\nplt.subplot(1, 2, 1)\nplt.imshow(img)\nplt.title(person)\nplt.subplot(1, 2, 2)\nplt.imshow(output)\nprint(result[\"predictions\"][0][\"confidence\"])\nplt.title(\"%s (%f)\" % (result[\"predictions\"][0][\"person\"], result[\"predictions\"][0][\"confidence\"]))\nplt.tight_layout()\nplt.show()","2faa252d":"person = \"Andy_Roddick\"\npath = test[test.person==person][\"path\"].iloc[0]\nimg = cv2.imread(path)\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nresult = fr.predict(path)\nfile_bytes = np.fromstring(base64.b64decode(result[\"frame\"]), np.uint8)\noutput = cv2.imdecode(file_bytes,1)\nplt.figure(figsize=(10,5))\nplt.subplot(1, 2, 1)\nplt.imshow(img)\nplt.title(person)\nplt.subplot(1, 2, 2)\nplt.imshow(output)\nplt.title(\"%s (%f)\" % (result[\"predictions\"][0][\"person\"], result[\"predictions\"][0][\"confidence\"]))\nplt.tight_layout()\nplt.show()","03ef027a":"person = y_test[2]\npath = test[test.person==person][\"path\"].iloc[0]\nimg = cv2.imread(path)\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nresult = fr.predict(path)\nfile_bytes = np.fromstring(base64.b64decode(result[\"frame\"]), np.uint8)\noutput = cv2.imdecode(file_bytes,1)\nplt.figure(figsize=(10,5))\nplt.subplot(1, 2, 1)\nplt.imshow(img)\nplt.title(person)\nplt.subplot(1, 2, 2)\nplt.imshow(output)\nplt.title(\"%s (%f)\" % (result[\"predictions\"][0][\"person\"], result[\"predictions\"][0][\"confidence\"]))\nplt.tight_layout()\nplt.show()","a9fdce69":"person = y_test[3]\npath = test[test.person==person][\"path\"].iloc[0]\nimg = cv2.imread(path)\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nresult = fr.predict(path)\nfile_bytes = np.fromstring(base64.b64decode(result[\"frame\"]), np.uint8)\noutput = cv2.imdecode(file_bytes,1)\nplt.figure(figsize=(10,5))\nplt.subplot(1, 2, 1)\nplt.imshow(img)\nplt.title(person)\nplt.subplot(1, 2, 2)\nplt.imshow(output)\nplt.title(\"%s (%f)\" % (result[\"predictions\"][0][\"person\"], result[\"predictions\"][0][\"confidence\"]))\nplt.tight_layout()\nplt.show()","4ec1f2ec":"person = y_test[6]\npath = test[test.person==person][\"path\"].iloc[0]\nimg = cv2.imread(path)\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nresult = fr.predict(path)\nfile_bytes = np.fromstring(base64.b64decode(result[\"frame\"]), np.uint8)\noutput = cv2.imdecode(file_bytes,1)\nplt.figure(figsize=(10,5))\nplt.subplot(1, 2, 1)\nplt.imshow(img)\nplt.title(person)\nplt.subplot(1, 2, 2)\nplt.imshow(output)\nplt.title(\"%s (%f)\" % (result[\"predictions\"][0][\"person\"], result[\"predictions\"][0][\"confidence\"]))\nplt.tight_layout()\nplt.show()","29a74b34":"person = y_test[11]\npath = test[test.person==person][\"path\"].iloc[0]\nimg = cv2.imread(path)\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nresult = fr.predict(path)\nfile_bytes = np.fromstring(base64.b64decode(result[\"frame\"]), np.uint8)\noutput = cv2.imdecode(file_bytes,1)\nplt.figure(figsize=(10,5))\nplt.subplot(1, 2, 1)\nplt.imshow(img)\nplt.title(person)\nplt.subplot(1, 2, 2)\nplt.imshow(output)\nplt.title(\"%s (%f)\" % (result[\"predictions\"][0][\"person\"], result[\"predictions\"][0][\"confidence\"]))\nplt.tight_layout()\nplt.show()","cde8d200":"# Examples","ddb671c9":"# Face Recognition\n\nSee: https:\/\/github.com\/paoloripamonti\/face-recognition.git","fdb79ad9":"## Initialize Model","d0a41443":"# Fit Face Recognition","47ba7d99":"# Save Model","de917264":"# Read dataset","eafbf95c":"### Size of train & test dataset","920fecb6":"# Evaluate","16107b63":"## Test Dataset","ebb2f130":"## Train Dataset","b4094a7d":"## Training Model","7d272491":"# Needed Libraries","d4280043":"### Settings"}}