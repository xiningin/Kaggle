{"cell_type":{"096a3646":"code","c387661d":"code","1123de4b":"code","a7891833":"code","61f1369d":"code","3bfe4133":"code","79b1cb61":"code","045122f3":"code","f4dac231":"code","2416528a":"code","c7aa0bad":"code","d5e66263":"code","c9e09fdf":"code","4b397cfc":"code","dc2e938b":"code","2bcbadc4":"code","4cf2a8f6":"code","6c19579e":"code","3f7947c6":"code","14b74fbb":"code","f6005099":"code","66e92f25":"code","a2948d9e":"code","de8dbe15":"code","06f3eb5f":"code","87d67510":"code","1f052ca5":"code","e7258386":"code","5cf90671":"code","b5bcfad4":"code","0cef6e31":"code","4c801508":"code","c5c65bf0":"code","aef22dd1":"code","e5592fb2":"code","0e9e9167":"code","4c04dfe8":"code","412bf998":"code","e0c64c1d":"code","ddf922ff":"code","0138b7b0":"code","98ad6f19":"code","b4c37396":"code","4b04652f":"code","b5861179":"code","b8fe5494":"markdown","6fcbbbd9":"markdown","d7f8af1a":"markdown","ead966f6":"markdown","cffa8830":"markdown","04a15b5a":"markdown","1d2f326f":"markdown"},"source":{"096a3646":"# import os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))","c387661d":"import tensorflow as tf\ntf.__version__ ","1123de4b":"# Import The Libraries \n\nfrom tensorflow.keras.layers import Input, Lambda, Dense, Flatten\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.applications.resnet50 import ResNet50, preprocess_input\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator, load_img\nfrom tensorflow.keras.models import Sequential\n\nimport numpy as np\nfrom glob import glob\nimport matplotlib.pyplot as plt","a7891833":"# Paths\ntrain_Path = '..\/input\/car-brand-images-dataset\/Train'\ntest_Path = '..\/input\/car-brand-images-dataset\/Test'","61f1369d":"# Set Resize variable\nIMAGE_SIZE = [224, 224] # This is my desired image size... and also ResNet50 accepts image of 224*224.","3bfe4133":"resnet = ResNet50(\n    input_shape = IMAGE_SIZE + [3], # Making the image into 3 Channel, so concating 3.\n    weights = 'imagenet', # Default weights.\n    include_top = False   # \n)","79b1cb61":"resnet.summary()","045122f3":"for layer in resnet.layers:\n    layer.trainable = False\n    \n# This will let us use the default weights used by the imagenet.    ","f4dac231":"# Usefule for getting number of output classes.\n# folders = glob('..\/input\/car-brand-images-dataset\/Train\/*')\nfolders = glob(train_Path + '\/*')\nfolders","2416528a":"car_label = ['mercedes', 'audi', 'lamborghini']","c7aa0bad":"# Set the flatten layer.\nx = Flatten() (resnet.output)","d5e66263":"prediction = Dense(len(folders), activation = 'softmax')(x)","c9e09fdf":"# Create a model Object\nmodel = Model(inputs = resnet.input, outputs = prediction)","4b397cfc":"model.summary()","dc2e938b":"model.compile (\n    loss = 'categorical_crossentropy',\n    optimizer = 'adam',\n    metrics = ['accuracy']\n)","2bcbadc4":"# Use the Image Data Generator\n\n# from tensorflow.keras.proprocessing.image import ImageDataGenerator","4cf2a8f6":"train_datagen = ImageDataGenerator(\n    rescale = 1.\/255,\n    shear_range = 0.2,\n    zoom_range = 0.2,\n    horizontal_flip = True\n)\n\ntest_datagen = ImageDataGenerator(\n    rescale = 1.\/255\n)","6c19579e":"training_set = train_datagen.flow_from_directory(\n    train_Path,\n    target_size = IMAGE_SIZE,\n    batch_size = 32,\n    class_mode = 'categorical' # As we have more than 2 so using categorical.. for 2 we might have used binary.\n)","3f7947c6":"test_set = train_datagen.flow_from_directory(\n    test_Path,\n    target_size = IMAGE_SIZE,\n    batch_size = 32,\n    class_mode = 'categorical'\n)","14b74fbb":"# Fir the model.\n\nhistory = model.fit_generator(\n    training_set,\n    validation_data = test_set,\n    epochs = 50,\n    steps_per_epoch = len(training_set),\n    validation_steps = len(test_set)\n)","f6005099":"# Plot the Loss\n\nplt.plot(history.history['loss'], label = 'train_loss')\nplt.plot(history.history['val_loss'], label ='val loss')\nplt.legend()\nplt.show()\n# plt.savefig('LossVal_loss')","66e92f25":"# Plot the Accuracy\nplt.plot(history.history['accuracy'], label = 'train accuracy')\nplt.plot(history.history['val_accuracy'], label ='val accuracy')\nplt.legend()\nplt.show()\n# plt.savefig('valAccuracy')","a2948d9e":"# Save it as a h5 file\nfrom tensorflow.keras.models import load_model\n\nmodel.save('car_brand_clf_resnet50.h5')","de8dbe15":"prediction = model.predict(test_set)","06f3eb5f":"prediction","87d67510":"prediction = np.argmax(prediction, axis = 1)\nprediction","1f052ca5":"unseen_data_path = '..\/input\/unseen-data\/'","e7258386":"# img = image.load_img('..\/input\/unseen-data\/audi_1.jpg', target_size = IMAGE_SIZE)\n\nimg = image.load_img(unseen_data_path + 'audi_1.jpg', target_size = IMAGE_SIZE)\n","5cf90671":"img","b5bcfad4":"x = image.img_to_array(img)\nx","0cef6e31":"x.shape","4c801508":"x = x \/ 255","c5c65bf0":"x = np.expand_dims(x, axis = 0)\nimg_data = preprocess_input(x)\n","aef22dd1":"x.shape, img_data.shape","e5592fb2":"model.predict(img_data)","0e9e9167":"a = np.argmax(model.predict(img_data), axis = 1)\na","4c04dfe8":"if a == 0:\n    print(\"Its Audi\")\nelif a == 1:\n    print(\"Its Lamorghini\")\nelse:\n    print(\"Its Mercedes\")","412bf998":"car_label","e0c64c1d":"def unseen_data_test(path, image_name, model):\n    img = image.load_img(path + image_name, target_size = IMAGE_SIZE)\n    print('Original Image')\n#     print(img)\n    plt.imshow(img)\n    x = image.img_to_array(img)\n    x = x \/ 255\n    x = np.expand_dims(x, axis = 0)\n    img_data = preprocess_input(x)\n    a = np.argmax(model.predict(img_data), axis = 1)\n    \n    if a == 0:\n        print(\"Its Audi\")\n    elif a == 1:\n        print(\"Its Mercedes\")\n    else:\n        print(\"Its Lamorghini \")","ddf922ff":"unseen_data_test(unseen_data_path, 'lamborghini_1.jpg', model)","0138b7b0":"unseen_data_test(unseen_data_path, 'lamborghini_2.jpg', model)","98ad6f19":"unseen_data_test(unseen_data_path, 'lamborghini_4.jpg', model)","b4c37396":"unseen_data_test(unseen_data_path, 'audi_2.jpg', model)","4b04652f":"unseen_data_test(unseen_data_path, 'audi_3.jpg', model)","b5861179":"# for \n# img = image.load_img(unseen_data_path + 'audi_1.jpg', target_size = IMAGE_SIZE)\n","b8fe5494":"# Save the Model","6fcbbbd9":"# Predict from new dataset","d7f8af1a":"# Predict","ead966f6":"## Prediction On test data","cffa8830":"This is Car Brand Image Classification. \n\nDataset is from Kaggle.\n\nWill be using Keras ResNet50. \n\nRefer https:\/\/keras.io\/api\/applications\/ & https:\/\/keras.io\/api\/applications\/resnet\/#resnet50-function for details.\n","04a15b5a":"Using Multiple Predictions","1d2f326f":"# Visualize"}}