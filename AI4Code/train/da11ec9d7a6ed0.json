{"cell_type":{"afd31cea":"code","03977510":"code","56cc5610":"code","eaedd950":"code","32d6702e":"code","cb79631f":"code","42403ee3":"code","0cf469bb":"code","5c543f85":"code","24f2a2fd":"code","18ec9b53":"code","9eda5507":"code","af2bd43b":"code","ffff5fce":"code","89ed326a":"code","5c44b3d8":"code","b3d6665c":"code","93f92efd":"code","17e993ff":"code","fa040c09":"markdown","2c34ea29":"markdown","7be80d1f":"markdown","ae753398":"markdown","b6f49b68":"markdown","a6689de8":"markdown","08d01891":"markdown","057a722f":"markdown","dfc4bf2d":"markdown","84112057":"markdown","8ad30871":"markdown","52b142d7":"markdown","9e517dd6":"markdown","fb6da4a8":"markdown","3cb77c9d":"markdown","afa1a2bf":"markdown","b07f2a1f":"markdown","070ceffe":"markdown","54bf038a":"markdown","bfd72aad":"markdown","9739e74e":"markdown","c33db2ad":"markdown","1b70dbb5":"markdown","743c623d":"markdown","34ef2840":"markdown"},"source":{"afd31cea":"import pandas as pd   \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use('bmh')\n%matplotlib inline\nplt.rcParams['figure.dpi'] = 100","03977510":"pokedata = pd.read_csv(\"..\/input\/pokemon-with-stats-plus-gen-7\/Pokemon_all.csv\")","56cc5610":"pokedata.head()                    ","eaedd950":"pokedata.tail()","32d6702e":"pokedata.columns = pokedata.columns.str.upper()","cb79631f":"pokedata['TYPE 1'] = pokedata['TYPE 1'].str.capitalize()\npokedata['TYPE 2'] = pokedata['TYPE 2'].str.capitalize()","42403ee3":"pokedata.drop_duplicates('#', keep='first', inplace=True)","0cf469bb":"pokedata['TYPE 2'].fillna(value='None', inplace=True)","5c543f85":"pokedata.head()","24f2a2fd":"pokedata.tail()","18ec9b53":"pokedata['#'].count()","9eda5507":"sns.factorplot(\n    x='GENERATION', \n    data=pokedata,\n    size=5,\n    aspect=1.2,\n    kind='count'\n).set_axis_labels('Generation', '# of Pokemon')\n\nplt.show()","af2bd43b":"pokedata['LEGENDARY'].value_counts()","ffff5fce":"fig = plt.figure(figsize=(7,7))\n\ncolours = [\"aqua\", \"orange\"]\npokeLeg = pokedata[pokedata['LEGENDARY']==True]\npokeNon = pokedata[pokedata['LEGENDARY']==False]\n\nlegDist = [pokeLeg['NAME'].count(),pokeNon['NAME'].count()]\nlegPie = plt.pie(legDist,\n                 labels= ['Legendary', 'Non Legendary'], \n                 autopct ='%1.1f%%', \n                 shadow = True,\n                 colors=colours,\n                 startangle = 45,\n                 explode=(0, 0.1))\n","89ed326a":"colours = [\"aqua\", \"orange\"]\ng = sns.factorplot(\n    x='GENERATION', \n    data=pokedata,\n    kind='count', \n    hue='LEGENDARY',\n    palette=colours, \n    size=5, \n    aspect=1.5,\n    legend=False,\n    ).set_axis_labels('Generation', '# of Pokemon')\n\ng.ax.legend(loc='upper center', bbox_to_anchor=(0.5, 1.1),  shadow=True, ncol=2, labels=['NON LEGENDARY','LEGENDARY'])\nplt.show()\n","5c44b3d8":"pokedata['TYPE 1'].unique()","b3d6665c":"fig = plt.figure(figsize=(15,15))\n\nfig.add_subplot(211)\npokedata['TYPE 1'].value_counts().plot(kind='pie', \n                                       autopct='%1.1f%%',\n                                       pctdistance=0.9)\n\nfig.add_subplot(212)\npokedata['TYPE 2'].value_counts().plot(kind='pie', \n                                       autopct='%1.1f%%',\n                                       pctdistance=0.9)\n\nplt.show()","93f92efd":"sns.factorplot(\n    y='TYPE 1',\n    data=pokedata,\n    kind='count',\n    order=pokedata['TYPE 1'].value_counts().index,\n    size=4,\n    aspect=1.5,\n    color='green'\n).set_axis_labels('# of Pokemon', 'Type 1')\n\nsns.factorplot(\n    y='TYPE 2',\n    data=pokedata,\n    kind='count',\n    order=pokedata['TYPE 2'].value_counts().index,\n    size=4,\n    aspect=1.5,\n    color='purple'\n).set_axis_labels('# of Pokemon', 'Type 2');","17e993ff":"plt.subplots(figsize=(10, 10))\n\nsns.heatmap(\n    pokedata[pokedata['TYPE 2']!='None'].groupby(['TYPE 1', 'TYPE 2']).size().unstack(),\n    linewidths=1,\n    annot=True,\n    cmap=\"Blues\"\n)\n\nplt.xticks(rotation=35)\nplt.show()","fa040c09":"Now let's see what is the most common primary and secondary type of Pokemon.","2c34ea29":"Some Pokemon doesn't have secondary type so they have **`NaN`** (null values) in the **`Type 2`** column. Let's fill in the **`null`** values in the **`Type 2`** column by replacing it with **`None`**","7be80d1f":"I initially thought that the number of legendary pokemon always correlate to the number of pokemon in that gen, looks like that wasn't the case. There doesn't seem to be any noticeable trend either","ae753398":"If we look carefully at the 10 rows in the dataset above, we can see some problems in the dataset.\n* Some Pokemon have **`NaN`** values (null values) in the column **`Type 2`**\n* Some Pokemon have multiple forms and those forms are included in this dataset\n* In gen 7, the Pokemon type doesn't start with capital letter like all gen before it, Pandas will count this as a different type\n\nWe need to do some cleaning in the dataset before it is ready to use.  ","b6f49b68":"So only **`7.2% out of 807`** Pokemon is a legendary Pokemon. Now let's see how they are distributed in each gen.","a6689de8":"<a id='pokecount'><\/a>\n## Pokemon count in each generation\n\nFirst, let's verify how many Pokemon are there in this dataset","08d01891":"Now we can load the dataset, let's name the dataframe as** `pokedata`** and take a look at the first and last 5 rows of the dataset to get a general knowledge of the data.","057a722f":"## Thank you for reading this blog, hope you have fun reading it. See you next time\n\n##### Special thanks to Alberto Barradas and Rounak Banik for providing excellent datasets","dfc4bf2d":"<a id='typedist'><\/a>\n## Pokemon Type Distribution\n\nThere are 18 types of Pokemon in total as of generation 7. Some Pokemon have only 1 type, while other have secondary type. For example, Charmander is a Fire type, while Bulbasaur is both a Grass type and a Poison type\n\nFirst, let's take a look of all the 18 types","84112057":"<a id='typecomb'><\/a>\n## Pokemon type combinations\n\nWe've already seen what is the most and least common type of Pokemon, it will be also interesting to see all the type combination of the Pokemon, note that we will not include Pokemon that doesn't have secondary type","8ad30871":"## Table of Contents\n* [Cleaning the dataset](#clean)\n* [Pokemon count in each generation](#pokecount)\n* [Legendary Pokemon count](#legendcount)\n* [Pokemon type distribution](#typedist)\n* [Pokemon type combination](#typecomb)","52b142d7":"The number of Pokemon doesn't seem to have noticeable trend, except that until gen 7, odd-numbered generations always have more Pokemon compared to even-numbered generation","9e517dd6":"Let's remove the duplicate Pokemon","fb6da4a8":"Let's start by importing all the important packages","3cb77c9d":"<a id='clean'><\/a>\n## Cleaning the dataset","afa1a2bf":"The data is much cleaner and now it's ready to use. Now we can do some analysis and visualization.\n","b07f2a1f":"We can already see which type of Pokemon is the most and least common, but pie chart is not the ideal choice  if the number of slices is too many, so let's just use barplot.","070ceffe":"* Normal\/Flying, Grass\/Poison, and Bug\/Flying are the top 3  combination for dual-type Pokemon","54bf038a":"I prefer the column name to be in capital letter so I'm gonna change it, it's just my preference though, you can leave them be if you want.","bfd72aad":"<a id='legendcount'><\/a>\n## Legendary Pokemon count\n###### From [Bulbapedia](https:\/\/bulbapedia.bulbagarden.net\/wiki\/Legendary_Pok%C3%A9mon) : Legendary Pok\u00e9mon are a group of incredibly rare and often very powerful Pok\u00e9mon, generally featured prominently in the legends and myths of the Pok\u00e9mon world. \n\n<br>\nIn this post, we'll simplify the categorization and count the mythical Pokemon and the ultra beasts as a legendary Pokemon. First, let's take a look at how rare they are, and then we can visualize the distribution between legendary and non legendary Pokemon\n","9739e74e":"Now let's capitalize only the first letter of the Pokemon type","c33db2ad":"There are lots of information that can be derived from the above charts, some of the interesting things are:\n* Almost half of all Pokemon don't have secondary type.\n* While Flying is the most common secondary type, it is the least common primary type. It kind of make sense if you think about it, when you see Moltres, the first thing that comes to your mind would be Fire rather than Flying.  Or when you see Dragonite, you'll always identify him as a Dragon-type creature rather than Flying-type creature.\n* Water, Normal, and Grass as the most common primary type is to be expected, but I didn't expect Psychic type Pokemon to  be that common.","1b70dbb5":"Now let's take a look at the first and last 5 rows of the dataset one more time","743c623d":"The number of Pokemon matched with the data  from [**`Bulbapedia`**](https:\/\/bulbapedia.bulbagarden.net\/wiki\/List_of_Pok%C3%A9mon_by_National_Pok%C3%A9dex_number). Now let's see how Pokemon numbers are distributed in each gen.","34ef2840":"## In this post, we'll take a look at the Pokemon dataset that is available in [Kaggle](https:\/\/www.kaggle.com\/abcsds\/pokemon) and we'll try to have fun practicing data analysis and visualization using Pandas and Seaborn. We won't be doing some advanced analysis, just a simple analysis such as counting, filtering, cleaning the data, and some basic plotting techniques\n\n##### **Note : The dataset only contains all the Pokemon until gen 6, the gen 7 dataset can be taken from [here](https:\/\/www.kaggle.com\/rounakbanik\/pokemon)**"}}