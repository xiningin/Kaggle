{"cell_type":{"62a5fb54":"code","9bd4c641":"code","4d9e7aec":"code","613ef4e9":"code","e035d2d7":"code","db7f6a3f":"code","1e0f1c3d":"markdown","43093c4a":"markdown"},"source":{"62a5fb54":"import smtplib \nfrom matplotlib import style\nimport seaborn as sns\nsns.set(style='ticks', palette='RdBu')\n#sns.set(style='ticks', palette='Set2')\nimport pandas as pd\nimport numpy as np\nimport time\nimport datetime \n%matplotlib inline\nimport matplotlib.pyplot as plt\nfrom subprocess import check_output\npd.options.display.max_colwidth = 1000\nfrom time import gmtime, strftime\nTime_now = strftime(\"%Y-%m-%d %H:%M:%S\", gmtime())\nimport timeit\nstart = timeit.default_timer()\npd.options.display.max_rows = 100\n\nfrom sklearn.decomposition import PCA\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.feature_selection import RFECV, SelectKBest\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, ExtraTreesClassifier\nfrom sklearn.tree import DecisionTreeClassifier, ExtraTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB, BernoulliNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.calibration import CalibratedClassifierCV\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.feature_selection import SelectFromModel\nfrom sklearn import svm\nfrom scipy.stats import skew\nfrom scipy.stats.stats import pearsonr\nfrom sklearn.linear_model import Ridge, RidgeCV, ElasticNet, LassoCV, LassoLarsCV\nfrom sklearn.model_selection import cross_val_score\n\n\nclassifiers = [('RandomForestClassifierG', RandomForestClassifier(n_jobs=-1, criterion='gini')),\n               ('RandomForestClassifierE', RandomForestClassifier(n_jobs=-1, criterion='entropy')),\n               ('AdaBoostClassifier', AdaBoostClassifier()),\n               ('ExtraTreesClassifier', ExtraTreesClassifier(n_jobs=-1)),\n               ('KNeighborsClassifier', KNeighborsClassifier(n_jobs=-1)),\n               ('DecisionTreeClassifier', DecisionTreeClassifier()),\n               ('ExtraTreeClassifier', ExtraTreeClassifier()),\n               ('LogisticRegression', LogisticRegression()),\n               ('GaussianNB', GaussianNB()),\n               ('BernoulliNB', BernoulliNB())\n              ]","9bd4c641":"data1 = pd.read_csv('..\/input\/student-mat.csv')\ndata2 = pd.read_csv('..\/input\/student-por.csv')\n\ndata = [data1,data2]\ndata=pd.concat(data)\ndata=data.drop_duplicates([\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"])\ndata['AvgGrade'] = data[['G1', 'G2', 'G3']].mean(axis=1)","4d9e7aec":"data.columns","613ef4e9":"data.head(n=10).T","e035d2d7":"data.head(n=2)","db7f6a3f":"data.describe()","1e0f1c3d":"# Describe the data","43093c4a":"# Read the data"}}