{"cell_type":{"13b6b6d2":"code","32cbabdc":"code","41452bb0":"code","71771fc7":"code","da902ea0":"code","866bd2a3":"code","2fb49772":"code","caa32aef":"code","cf63e9f6":"code","88d91eea":"code","347e1633":"code","24ae08f2":"code","03087cc4":"code","a0cc47f5":"code","3609a244":"code","1873c277":"code","07f3ae44":"code","cc48feb4":"code","42be6149":"code","4652ac23":"code","80238cdf":"code","e6a1eaba":"code","f23375ae":"code","0d473ec4":"code","a514ee5b":"code","644cd646":"code","52546947":"code","9cceed2b":"code","32c03ff0":"code","d979e2ba":"markdown"},"source":{"13b6b6d2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style\n# style.available\nimport seaborn as sns\nstyle.use('fivethirtyeight')\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n# Any results you write to the current directory are saved as output.","32cbabdc":"style.available","41452bb0":"import os\nprint(os.listdir(\"..\/input\"))\ndf = pd.read_csv('..\/input\/diabetes.csv')","71771fc7":"%%HTML\n<style type=\"text\/css\">\ntable.dataframe td, table.dataframe th {\n    border: 2px  black solid !important;\n    color: black !important;\n}\n<\/style>","da902ea0":"df.columns","866bd2a3":"df.describe()","2fb49772":"df.head()","caa32aef":"print(\"Todtal number of dataset in diabetes data:{} \".format(df.shape))","cf63e9f6":"print(df.groupby('Outcome').size())","88d91eea":"sns.countplot(df['Outcome'],label=\"Count\")","347e1633":"sns.relplot(x = \"Age\", y= \"Glucose\", sort = False, kind=\"line\", data=df)","24ae08f2":"sns.distplot(df[\"Glucose\"], bins=20, kde=False, rug=True);","03087cc4":"sns.distplot(df[\"Glucose\"], hist=False, rug=True)","a0cc47f5":"sns.regplot(x= df[\"Glucose\"], y = df[\"Outcome\"], data=df )","3609a244":"plt.figure(figsize=[10,10])\nsns.lmplot(x= \"Glucose\", y = \"Outcome\", data=df )","1873c277":"sns.lmplot(x= \"Age\", y = \"BMI\", data=df )","07f3ae44":"sns.regplot(x= \"Age\", y = \"BMI\", data=df )","cc48feb4":"f, ax = plt.subplots(figsize=(10, 8))\nsns.heatmap(df.corr(), annot=True, linewidths=0.5, ax=ax)","42be6149":"f, ax = plt.subplots(figsize=(10, 8))\nsns.boxplot(x=\"Age\", y=\"BMI\",\n            hue=\"Outcome\", palette=[\"m\", \"g\"],\n            data=df)\nsns.despine(offset=10, trim=True)","4652ac23":"f, ax = plt.subplots(figsize=(10, 8))\nsns.barplot(x=\"Age\", y=\"BMI\",\n            hue=\"Outcome\", palette=[\"m\", \"g\"],\n            data=df)\nsns.despine(offset=10, trim=True)","80238cdf":"f, ax = plt.subplots(figsize=(10, 8))\nsns.swarmplot(x=\"Age\", y=\"Insulin\",\n            hue=\"Outcome\", palette=[\"m\", \"g\"],\n            data=df)\nsns.despine(offset=10, trim=True)","e6a1eaba":"f, ax = plt.subplots(figsize=(16, 10))\nsns.boxplot(x=\"Age\", y=\"Insulin\",\n            hue=\"Outcome\", palette=[\"m\", \"g\"],\n            data=df)\nsns.despine(offset=10, trim=True)","f23375ae":"color_list = ['red' if i == 'Abnormal' else 'green' for i in df.loc[:, 'Outcome']]\npd.plotting.scatter_matrix(df.loc[:, df.columns != 'Outcome'],\n                           c = color_list,\n                           figsize=[15,15],\n                           diagonal='hist',\n                           alpha = 1.0,\n                           s = 200,\n                           marker = \"*\",\n                           edgecolor = 'black')\nplt.show()","0d473ec4":"cases = pd.DataFrame(df.groupby('Age')['Outcome'].sum()).head(10)\ncases","a514ee5b":"df1 = df.loc[:, df.columns != 'Outcome']\ndf1","644cd646":"from sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nimport warnings\nwarnings.filterwarnings(\"ignore\")","52546947":"df_data = df.values\ndf_data","9cceed2b":"X = df_data[:, 0:8]\nY = df_data[:, 8]\n# prepare models\nmodels = []\nnames = []\nresults = []\nscoring = 'accuracy'\ntest_size = 0.33\nX_train, X_test, y_train, y_test = train_test_split(X,Y, test_size=test_size,random_state=7)\nmodels.append(('LR', LogisticRegression()))\nmodels.append(('LDA', LinearDiscriminantAnalysis()))\nmodels.append(('KNN', KNeighborsClassifier()))\nmodels.append(('CART',DecisionTreeClassifier()))\nmodels.append(('NB', GaussianNB()))\nmodels.append(('SVM', SVC()))\n\nfor name, model in models:\n    kfold = KFold(n_splits=10, random_state=7)\n    cv_results = cross_val_score(model, X, Y, cv=kfold, scoring=scoring)\n    results.append(cv_results)\n    names.append(name)\n    print(name, cv_results.mean(), (cv_results.std()))\n\n","32c03ff0":"fig = plt.figure()\nfig.suptitle('Algorithm Comparison')\nax = fig.add_subplot(111)\nplt.boxplot(results)\nax.set_xticklabels(names)\nplt.show()","d979e2ba":"1. ## Compare Machine Learning Algorithms\n* Logistic Regression.\n*  Linear Discriminant Analysis.\n*  k-Nearest Neighbors.\n*  Classi cation and Regression Trees.\n*  Naive Bayes.\n*  Support Vector Machines."}}