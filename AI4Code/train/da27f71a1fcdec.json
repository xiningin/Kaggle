{"cell_type":{"c37a38c0":"code","69e16739":"code","d86f3c00":"code","c7f0b5a8":"code","21a1431c":"code","56727ec2":"code","411322ba":"code","aeb2b475":"code","6208274a":"code","6ea81618":"code","a0ee545d":"code","4c9f0f64":"code","dd9e5f7f":"code","fb776ab9":"code","743d9aa0":"code","785da5f5":"code","3a9c5823":"code","9da76c94":"code","85e17f48":"code","e27bab95":"code","5dff887b":"code","d5a37f3b":"code","e87b8061":"markdown","e88745f9":"markdown","53be8381":"markdown","8e0af779":"markdown","db758a2a":"markdown","b154d3d5":"markdown"},"source":{"c37a38c0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","69e16739":"df = pd.read_csv('..\/input\/water-potability\/water_potability.csv')\ndf","d86f3c00":"plt.figure(figsize=(10, 10))\nsns.displot(df['ph'])","c7f0b5a8":"sns.pairplot(data=df)","21a1431c":"df.columns","56727ec2":"plt.figure(figsize=(10,10))\nsns.barplot(data=df, x='Potability', y='ph')","411322ba":"plt.figure(figsize=(20,10))\nsns.heatmap(df.corr(),\n           annot=True,\n           cmap='coolwarm')","aeb2b475":"df.isna().sum()","6208274a":"df.dtypes","6ea81618":"## Fill missing values\nfor label, content in df.items():\n    if pd.api.types.is_numeric_dtype(content):\n        if pd.isnull(content).sum():\n            df[label] = content.fillna(content.median())","a0ee545d":"# check again\ndf.isna().sum()","4c9f0f64":"X = df.drop('Potability', axis=1)\ny = df['Potability']","dd9e5f7f":"# split into training and validation set\nfrom sklearn.model_selection import train_test_split\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)\nlen(X_train), len(X_val), len(y_train), len(y_val)","fb776ab9":"from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score,confusion_matrix, classification_report","743d9aa0":"\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.svm import LinearSVC\nfrom xgboost import XGBClassifier\n\n\n\n","785da5f5":"models = {\"LogisticRegression\" : LogisticRegression(),\n        \"RandomForestClassifier\" : RandomForestClassifier(),\n        \"GradientBoostingClassifier\" : GradientBoostingClassifier(),\n        \"SVM\" : LinearSVC(),\n        \"XGB \" : XGBClassifier()}","3a9c5823":"def fit_and_score(X_train, X_val, y_train, y_val, models):\n    \n    np.random.seed(42)\n    \n    model_scores = {}\n    \n    for name, model in models.items():\n        \n        model.fit(X_train, y_train)\n        \n        model_scores[name] = model.score(X_val, y_val)\n        \n    return model_scores","9da76c94":"models = fit_and_score(X_train=X_train, X_val=X_val, y_train=y_train, y_val=y_val, models=models)\nmodels","85e17f48":"model_comparision = pd.DataFrame()\nmodel_comparision['Model Name'] = models.keys()\nmodel_comparision['Accuracy'] = models.values()\nmodel_comparision\n","e27bab95":"# XGB gave has good accuracy\n\nnp.random.seed(42)\nideal_model = XGBClassifier()\nideal_model.fit(X_train, y_train)\ny_preds = ideal_model.predict(X_val)\ny_preds\n\nideal_model.score(X_val, y_val)\n\n","5dff887b":"from sklearn.metrics import accuracy_score, recall_score, precision_score, f1_score, classification_report, confusion_matrix","d5a37f3b":"print(f\"Accuracy : {accuracy_score(y_val, y_preds)*100:.2f}%\")\nprint(f\"Precision : {precision_score(y_val, y_preds)}\")\nprint(f\"Recall : {recall_score(y_val, y_preds)}\")\nprint(f\"F1  : {f1_score(y_val, y_preds)}\")\nprint(\"-\"*100)\nprint(\"                       Classification_Report             \")\nprint(classification_report(y_val,y_preds))\nprint(\"-\" * 100)\nsns.heatmap(confusion_matrix(y_val, y_preds),\n           annot=True,\n           cmap='turbo')\nplt.title('Confusion Matrix')\nplt.xlabel('Predicted Label')\nplt.ylabel('True Label');","e87b8061":"## Modelling","e88745f9":"## Evaluation","53be8381":"## SPLIT  THE DATASET","8e0af779":"### Import Dataset","db758a2a":"## EDA","b154d3d5":"## Data Cleaning"}}