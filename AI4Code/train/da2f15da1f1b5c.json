{"cell_type":{"178429de":"code","6677f292":"code","86ab68e8":"code","f6b6699d":"code","4018c787":"code","0cd794fb":"code","2b3e6960":"code","fac5e34b":"code","3c8bf96d":"code","cf0ec234":"code","721a0aa5":"code","50968100":"code","fc87b722":"code","9e5eb342":"code","c0a1cad4":"code","187e2eff":"code","af696929":"code","92635345":"code","d4c12aa8":"code","de187c4c":"code","8f524c27":"code","f3c616e5":"markdown","e550d977":"markdown","51265ba8":"markdown"},"source":{"178429de":"# install pycaret\n!pip install pycaret","6677f292":"# import libraries\nimport pandas as pd\nimport numpy as np","86ab68e8":"# read csv data\ndata = pd.read_csv('..\/input\/telco-customer-churn\/WA_Fn-UseC_-Telco-Customer-Churn.csv')\ndata.head()","f6b6699d":"# check data types\ndata.dtypes","4018c787":"# replace blanks with np.nan\ndata['TotalCharges'] = data['TotalCharges'].replace(' ', np.nan)\ndata.isnull().sum()","0cd794fb":"# convert to float64\ndata['TotalCharges'] = data['TotalCharges'].astype('float64')\ndata.info()","2b3e6960":"!pip install pandas-profiling","fac5e34b":"from pandas_profiling import ProfileReport\nprofile = ProfileReport(data, title=\"EDA Report\")\nprofile","3c8bf96d":"# check missing values\ndata.isnull().sum()","cf0ec234":"round(data.Churn.value_counts()*100 \/ len(data),2)","721a0aa5":"categorical = []\nfor i in data.columns:\n    if (data[i].dtype=='object'):\n        categorical.append(i)\nprint(\"Categorical Attribute : {}\\n \".format(len(categorical)))\nfor x in range(len(categorical)): \n    print(categorical[x])","50968100":"data[categorical].nunique()","fc87b722":"for i in categorical[1:]:\n    print(i)\n    print(data[i].unique())\n    print(\"\\n\")","9e5eb342":"# init setup\nfrom pycaret.classification import *\ntelecom = setup(data, target = 'Churn', ignore_features = ['customerID'],\n                ordinal_features = {'Contract' : ['Month-to-month' ,'One year', 'Two year']},\n                fix_imbalance = True,\n               transformation = True,#Transformation changes the shape of the distribution such that the transformed data can be represented by normal distribution\n                  normalize = True, #rescale the values of numeric columns\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,# all levels in categorical features below the threshold defined in rare_level_threshold param are combined together as a single level\n                numeric_imputation='median',\n                categorical_imputation='mode',)","c0a1cad4":"ada= create_model('ada')","187e2eff":"print(ada)","af696929":"tuned_ada = tune_model(ada,optimize = 'F1') #tuned on F1","92635345":"evaluate_model(tuned_ada) #Graphical plot ","d4c12aa8":"predict_model(tuned_ada)# Test data evaluation ","de187c4c":"final_ada = finalize_model(tuned_ada) # Final model \nfinal_ada","8f524c27":"predict_model(final_ada)#final test model evaluation ","f3c616e5":"# Missing Values","e550d977":"# Data Preparation","51265ba8":"# Exploratory Data Analysis"}}