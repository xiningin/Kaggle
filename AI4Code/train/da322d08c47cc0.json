{"cell_type":{"b58b0cf7":"code","47cddc87":"code","40e262a4":"code","dfc0e536":"code","77499e43":"code","248121bf":"code","381a5ba7":"code","e6e9004b":"code","3f0b6f67":"code","4a649ebb":"code","460efbb9":"code","70e5f225":"code","0629429c":"code","ea703137":"code","7496c6b2":"code","933f903a":"code","6aa75e70":"markdown","550552ff":"markdown","7779c612":"markdown","4e96f303":"markdown","452910ac":"markdown","a950ff88":"markdown","8b10efb9":"markdown","2b565749":"markdown","7979b3b2":"markdown","04b7bc2f":"markdown","fd21741d":"markdown","3498d6b0":"markdown","44d274c5":"markdown","aeddc3b8":"markdown","3d8ca2ac":"markdown","21f0b375":"markdown","433c96e1":"markdown","7e7a625b":"markdown","bbb4abb2":"markdown","2e499315":"markdown","ea5099f2":"markdown","fa9f63a6":"markdown","be929851":"markdown","9e68770d":"markdown","1212a5a1":"markdown","e4292f3d":"markdown","75763fc7":"markdown","0ff1ea36":"markdown","8c89ea14":"markdown","47f35286":"markdown","93dbdaee":"markdown","db9effc4":"markdown","1395a2b3":"markdown"},"source":{"b58b0cf7":"# Import Python packages\nimport numpy as np \nimport pandas as pd \nimport os\nimport math\n\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\npd.set_option('display.max_columns', 5000)\n\n\n# Change when no longer running notebook locally\nbase_dir = os.path.join(os.getcwd(), 'data') \nbase_dir = '..\/input\/'\nfileName = 'multipleChoiceResponses.csv'\nfilePath = os.path.join(base_dir,fileName)\ndf_full = pd.read_csv(filePath) \n# Remove the first row which contains the question\ndf = df_full[1:]","47cddc87":"#plt.style.use('ggplot')\n\n# Update plot Parameters\nplt.rcParams['figure.figsize'] = (20.0, 10.0)\nplt.rcParams.update({'font.size': 24})\nplt.rcParams.update({'figure.titlesize': 30})\n\n# Generic labels used throughout the plots\nrespondents_count_title = \"# of Respondents\"","40e262a4":"# Select the first part of the question\nquestion_id = 'Q19'\n# Describe the essence of this question in as few words as possible (will be used in plot labels)\nshort_question_description = 'ML Frameworks'","dfc0e536":"# DATA PREP\n\n# Set up for working this question \nquestion_aggregate_col = question_id + '_Total'\n\n# Get a list of all the column names in the df\nfull_col_lst = list(df.columns)\n\n# Select a subset of columns (excluding the free response)\nshort_col_lst =  [q for q in full_col_lst if (question_id in q) and ('OTHER' not in q)]\n# Remove the column for None (ie. Q19_Part_18)\nshort_col_lst_minus_none = short_col_lst[:-2] + short_col_lst[-1:]\n# Remove the free response (ie. 'Q19_Part_19')\nshort_col_lst_minus_free = short_col_lst[:-1]\n\n# Create a new dataframe consisting of answer choices except \"None\"\ndf_question = df[short_col_lst_minus_none]\n\n## Add a column for total answer choices selected to the main df\n# Summary: Replace all NaN values with 0, and string values with 1 (excluding \"None\" selection), then get a total count of all string fields\n# Steps: (1) Identify all NaN Values (2) Invert True for False (3) Multiply by 1 to convert to float (4) Sum over rows (5) convert to int\ndf_plus = df.copy()\ndf_plus[question_aggregate_col] = ((df_plus[short_col_lst_minus_none].isnull() == False)*1).sum(axis = 1).astype(int)\n\n\n## Add a column for whether this question was actually answered to the main df\nanswered_q = ('Answered ' + question_id + ' Question')\ndf_plus[answered_q] = ((df_plus[short_col_lst].isnull() == False)*1).sum(axis = 1).astype(int)\ndf_plus[answered_q] = df_plus[answered_q] > 0\n\n# Create a dataframe with only respondents who answered this question\ndf_plus_answered = df_plus[df_plus[answered_q] == True]  ","77499e43":"question_heading = question_id + '_Part_1'\nquestion_string = df_full[[question_heading]].iloc[0,0].split('-')[0]\nprint(question_string)","248121bf":"# An Aside: What are all the unique answers?\nchoices = [ df_question[~df_question[col].isnull()][col].max() for col in short_col_lst_minus_none]\nprint(\"Below are the {} options for this question.\\n\".format(len(choices)))\nprint(choices)","381a5ba7":"total = (df_plus[answered_q].count())\nanswered = (df_plus[df_plus[answered_q] == True][answered_q].count())\nno_response = (total - answered)\/total\n\nprint('{0:.2f}% of survey participants did NOT answer this question.'.format(no_response*100))","e6e9004b":"# Specificy Dataframe\nd = df[short_col_lst]\n\n# Series\ncolumn_totals = ((d[short_col_lst].isnull() == False)*1).sum(axis = 0)\nall_choice_options = [ d[~d[col].isnull()][col].max() for col in short_col_lst]\n\n# Label Names\nx_label = respondents_count_title\ny_label = short_question_description\nplot_title = 'Survey Participants Selected the Following\\n' + short_question_description\n\n# Plot Chart with Inputs\nax = sns.barplot(column_totals,\n                 all_choice_options,\n                 palette = 'Set2',\n                 edgecolor = 'black'\n                )\nplt.setp(ax.get_xticklabels(), rotation=45)\n\nplt.subplots_adjust(top=0.87)\nplt.suptitle(plot_title, fontweight='bold', color = '#1c1d20' )\nplt.xlabel(x_label, fontweight='bold')\nplt.ylabel(y_label, fontweight='bold')\n\nplt.show()","3f0b6f67":"col_none_index = [i for i,x in enumerate(all_choice_options) if 'None' in x]\nquestion_with_none_responses = short_col_lst[col_none_index[0]]\nselected_option_none = (d[question_with_none_responses ].count())\nnone_response = (selected_option_none)\/answered\n\nprint('Of the {0:.1f}% participants that answered this question, {1:.1f}% of the \"respondents\" selected the option: None.'.format((1-no_response)*100, none_response*100))","4a649ebb":"# Specificy Dataframe\nd = df_plus_answered\n\n# Series\nx_col = question_aggregate_col\n\n# Label Names\nx_label = '# of ' + short_question_description\ny_label = respondents_count_title\nplot_title = 'Distribution of the Number of\\n' + short_question_description + ' Selected by Respondents'\n\n# Plot Chart with Inputs\nax = sns.countplot(x=x_col,\n                   data=d,\n                   palette = ['#00bcb5'],\n                   edgecolor = 'black'\n                  )\n\nplt.subplots_adjust(top=0.87)\nplt.suptitle(plot_title, fontweight='bold', color = '#1c1d20' )\nplt.xlabel(x_label, fontweight='bold')\nplt.ylabel(y_label, fontweight='bold')\nplt.show()\n\nprint(\"The average number of ML frameworks that respondents know is {0:.2f}.\".format(d[question_aggregate_col].mean()))","460efbb9":"# Specificy Dataframe\nd = df_plus_answered\n\n# Years of experience without nan\nyears_of_experience = list(d['Q8'].unique())[2:]\n# Re-order (manual)\nyears_of_experience = ['0-1', '1-2', '2-3', '3-4', '4-5', '5-10', '10-15', '15-20', '20-25', '25-30', '30 +']\n\n# Series\nx_col = 'Q8'\ny_col = question_aggregate_col\n\n# Label Names\nx_label = 'Years of Experience'\ny_label = '# of ' + short_question_description\nplot_title = 'Distribution of the Number of\\n' + short_question_description + ' by ' + x_label\n\n# Plot Chart with Inputs\nax = sns.boxplot(d[x_col], \n                 d[y_col], \n                 order = years_of_experience)\n\nplt.subplots_adjust(top=0.87)\nplt.suptitle(plot_title, fontweight='bold', color = '#1c1d20' )\nplt.xlabel(x_label, fontweight='bold')\nplt.ylabel(y_label, fontweight='bold')\nplt.show()","70e5f225":"# Add a column to isolate the data scientist profession\ndf_plus_answered['is_data_scientist'] = (df_plus_answered['Q6']== 'Data Scientist')*1\n\n# Specificy Dataframe\nd = df_plus_answered\n\n# Series\nx_col = 'Q8'\ny_col = question_aggregate_col\n\n# Label Names\nx_label = 'Years of Experience'\ny_label = '# of ' + short_question_description\nplot_title = 'Distribution of the Number of\\n' + short_question_description + ' by ' + x_label + '\\n (Splitting out Data Scientists)'\n\n# Plot Chart with Inputs\nax = sns.boxplot(x=x_col, \n                 y=y_col, \n                 hue='is_data_scientist', \n                 order=years_of_experience,\n                 data=d, \n                 palette=\"Set2\")\n\nplt.subplots_adjust(top=0.80)\nplt.suptitle(plot_title, fontweight='bold', color = '#1c1d20' )\nplt.xlabel(x_label, fontweight='bold')\nplt.ylabel(y_label, fontweight='bold')\nplt.show()","0629429c":"# Specificy Dataframe\nd = df_plus_answered[df_plus_answered['is_data_scientist'] == 1]\n\n# Series\nx_col = 'Q8'\ny_col = question_aggregate_col\n\n# Label Names\nx_label = 'Years of Experience'\ny_label = '# of ' + short_question_description\nplot_title = 'Distribution of the Number of\\n' + short_question_description + ' by ' + x_label + '\\n (for Data Scientists)'\n\n# Plot Chart with Inputs\nax = sns.violinplot(x=x_col, \n                    y=y_col, \n                    data=d, \n                    cut =0, \n                    order = years_of_experience,\n                    scale = \"count\"\n                   )   \nplt.subplots_adjust(top=0.80)\nplt.suptitle(plot_title, fontweight='bold', color = '#1c1d20' )\nplt.xlabel(x_label, fontweight='bold')\nplt.ylabel(y_label, fontweight='bold')\nplt.show()","ea703137":"# Select a subset of the top roles by number of respondents with that title\nprofession = ['Student', 'Data Scientist', 'Software Engineer', 'Data Analyst', \n              'Research Scientist', 'Business Analyst', 'Data Engineer', 'Research Assistant']\n\n# Series\nx_col = 'Q8'  # Years of experience\ny_col = question_aggregate_col\ncategory = 'Q6' # Profession\n\n# Specificy Dataframe\n# Reduce the data frame to look at the most number of years of experience and subset my selected profession\nd = df_plus_answered[(df_plus_answered[x_col].isin(years_of_experience[:5])) & (df_plus_answered[category].isin(profession))]\n\n\n# Label Names\nx_label = 'Years of Experience'\ny_label = '# of ' + short_question_description\nplot_title = 'Distribution of the Number of\\n' + short_question_description + ' by ' + x_label + '\\n (for Common Professions)'\n\n# Plot Chart with Inputs\nax = sns.boxplot(x=x_col, \n                 y=y_col, \n                 hue=category, \n                 order=years_of_experience[:5],\n                 data=d,\n                 palette=\"Set3\")\nplt.legend(bbox_to_anchor=(1.2,0.5), loc=\"center\")\nplt.subplots_adjust(top=0.80)\nplt.suptitle(plot_title, fontweight='bold', color = '#1c1d20' )\nplt.xlabel(x_label, fontweight='bold')\nplt.ylabel(y_label, fontweight='bold')\nplt.show()","7496c6b2":"# Reduce the data frame to look at the most number of years of experience and subset my selected profession\nd = df_plus_answered[(df_plus_answered[x_col].isin(years_of_experience[:5])) & (df_plus_answered[category].isin(profession))]\n\n# Label Names\nx_label = 'Years of Experience'\ny_label = respondents_count_title\nplot_title = 'Number of Respondents per profession, \\nper years of experience'\ncategory = 'Q6' # Profession\n\n\n# Plot Chart with Inputs\nax = sns.countplot(x=x_col, \n                   hue=category, \n                   order=years_of_experience[:5],\n                   data=d,\n                   palette=\"Set3\",\n                   edgecolor = 'black'\n             )\nplt.legend(bbox_to_anchor=(1.2,0.5), loc=\"center\")\nplt.subplots_adjust(top=0.80)\nplt.suptitle(plot_title, fontweight='bold', color = '#1c1d20' )\nplt.xlabel(x_label, fontweight='bold')\nplt.ylabel(y_label, fontweight='bold')\nplt.show()","933f903a":"# Specificy Dataframe\nd = df_plus_answered[df_plus_answered['is_data_scientist'] == 1]\n\n# Shorten one of the options description\nd['Q4'].replace(\"Some college\/university study without earning a bachelor\u2019s degree\", \"Some Undergraduate Education\", inplace = True)\n\n# Series\nx_col = 'Q4'  # Highest Education Level\ny_col = question_aggregate_col\n#category = 'is_data_scientist' #'Q6' # Profession\n\n\n# Label Names\nx_label = 'Highest Education Level'\ny_label = '# of ' + short_question_description\nplot_title = 'Data Scientist\\n' + 'Distribution of the Number of\\n' + short_question_description + ' by ' + x_label \n\n\n# Plot Chart with Inputs\nplt.figure(figsize=(20,16))\nax = sns.boxplot( d[y_col],\n                 d[x_col],\n                    #hue=category,\n                 data=d, \n                 palette=\"Set2\",\n                   #scale = \"count\",\n                    #cut = True\n                   )\n\n\nplt.subplots_adjust(top=0.87)\nplt.suptitle(plot_title, fontweight='bold', color = '#1c1d20' )\nplt.xlabel(y_label, fontweight='bold')\nplt.ylabel(x_label, fontweight='bold')\n#ax.xaxis.grid(True)\n\nplt.show()","6aa75e70":"### Question\n\nHow many responds per category?","550552ff":"## Summary","7779c612":"## Contents\n**Part I: ** Overview of the Question\n\n**Part II:** Deep Dive (Question\/Answer Format)\n\n**Part III:** Conclusion","4e96f303":"**Answer**\n\nOf those who answered this question, 15% selected that they had not used any ML frameworks.  As can be seen later on in this notebook,  many of the survey respondents are students and that could mean they are just starting to explore ML (and hence find themselves on Kaggle as one of the many aweseme resources for ML).\n\n82% of those who responded to this question, selected 5 or fewer ML frameworks. Surprisingly there was a pretty even distribution from 0-5, with a slightly decreasing percentage per total number of frameworks.\n\n---","452910ac":"---\n### How many respondents selected the option: None?","a950ff88":"# How many ML Frameworks should you know?\nBased on the results from the 2018 Kaggle Survey","8b10efb9":"Note: When summarizing the above boxplot results, it is important to not make generalizations for groupings where we do not have that many responses.","2b565749":"#### Data preparation \n(unhide cell block to see)","7979b3b2":"**Answer**\n\nSo this chart **doesn't tell us much** at all, there is really no distinction between the different years of experience. So let's see how this differs if you are a data scientist.\n\n---","04b7bc2f":"---\n### What are all the possible answer choices for this question?\n(exluding 'None')","fd21741d":"### Which question will be explored in this notebook?","3498d6b0":"**Answer**\n\nWe finally see, as expected, that the more years of experience the more ML frameworks a DS has used. This chart exhibits an intersting pattern as we go further along the x-axis, the median # of ML tools goes down. **BUT don't be fooled**, this could be due to the decreasing number of respondents we have at the tail end of this x-axis.\n\n---","44d274c5":"---\n### How many respondents did not submit an answer to this question?","aeddc3b8":"## Question: \n\nHow do other professions compare to Data Scientists?","3d8ca2ac":"### Why did I pick this type of question?\nWhen I am came across this question in the survey, as well as other similar questions about *tools*, I wondered **how many choices** people selected. Not just what the they selected, which is very interesting, but also whether it was important to know a certain few core ones or a little bit of everything. \n\nI was also interested in how different sub groups of respondents answered this question, and whether years of experience, profession or educational background had a different distrubition. ","21f0b375":"## Question: \n\nHow does this distribution change if the respondent identifies as a Data Scientist?","433c96e1":"**Answer**\n\nWe can see from the chart above that DS stands out from the rest of the groups as being the group with the largest median of ML networks familiar with. Data engineers and Research Scientists are the next closest. The median number of framworks doesn't exceed beyond 5 amongst this subset of professions.\n\n---","7e7a625b":"## Question: \nCan we learn anything from the distribution for Data Scientists?\n\n*An aside:* Violin plots are some of my favorite charts because you can get a lot of information from them. I primarily like how I can see if the data is skewed. Furthermore, if I turn on the `scale` parameter, I can see how much data there is in each grouping.","bbb4abb2":"## Question:\n\nHow does this distribution differ by years of experience?","2e499315":"## Question: \n\nHow many options did respondents select?","ea5099f2":"---\n\n# PART II: Distributions by Different Groupings\n\n\n\nIMPORTANT: All subsequent chart results are filtered for users who answered the question!\n\nLet's slice and dice the data...\n- Years of Experience\n- Profession: Data Scientist\n- Profession: Data Scientist vs Others\n\n","fa9f63a6":"Let's recap real quick what we have learned so far...\n\n- 1 out 5 survey respondents did not respond to this question.\n- The most popular ML Frameworks are Scikit-Learn, Tensorflow and Keras.\n- Of those who did answer this question, 15% selected that they did not use an ML frameworks.\n- The average number of frameworks used by respondents is 3.2.\n- Years of experience, alone, does not have an impact on the number of ML frameworks someone knows.\n- However, separating the respondents who self identified as Data Scientists, there is a clear distinction between other professions AND years of experience, at least compared to years 0-1 and 1-2.\n- Compared to other professions, Data Scientists still use the most number of ML frameworks. The other two closest professions are Research Scientist and Data Engineer. \n- At the very onset of a Data Scientists career (0-1 years of experience), on average, they use 4 different ML frameworks, and as they go up in years of experience, that number only goes up by 1. \n\nIn conclusion, Data Scientists are familiar with the most number of frameworks compared to other professions. With years of experience, the number of frameworks does not go up by much, meaning that they rely on a handful of core ML frameworks rather than trying to learn everything. \n\n**You don't need to know every framework!** ","be929851":"---\n### What choices were selected?","9e68770d":"---\n\n# PART III: Conclusion","1212a5a1":"**Answer**\n\nOur largest group is the 0-1 years, which has a pretty normal distribution. The distribution for years 4-5 is unlike the other distributions, it seems to be slightly bi-modal.\n\n---","e4292f3d":"---\n\n# PART I: A Quick Overview of the Question","75763fc7":"**UPDATE:**  Want to explore a different, multi-select question, just update the cell below and re-run the kernel.","0ff1ea36":"---\n## Question\n\nHow does education impact number of ML frameworks a Data Scientist knows?","8c89ea14":"---","47f35286":"## Next Steps\n- Segment by educational level\n\n- Explore the response dropoff per question and compare it to this question\n\n- Some other questions to consider (just change the denoted cell block at the beginning on the kernel with the question id):\n    - Q27 : Which of the following cloud computing products have you used at work or school in the last 5 years (Select all that apply)?\n    - Q29 : Which of the following relational database products have you used at work or school in the last 5 years? (Select all that apply)\n    - Q30 : Which of the following big data and analytics products have you used at work or school in the last 5 years? (Select all that apply)\n    - Q36 : On which online platforms have you begun or completed data science courses? (Select all that apply)\n    - Q47 : What methods do you prefer for explaining and\/or interpreting decisions that are made by ML models? (Select all that apply)","93dbdaee":"### What I hope someone looking at this Kernel could take away:\n- **Approach:** Different way of summarizing the output of a question (feature engineering: # of choices selected)\n- **Code:** Dynamic and modular code to re-run parts of the kernel or all of it for another multi-select question. \n- **Data Summary:** Difference between Data Scientists familiarity with ML frameworks based on their years of experience, compared to other professions.","db9effc4":"### What I'd like to learn specifically:\n- Not just the what the most popular ML frameworks are, but, on average, **how many tools** respondents are familiar with?\n- How does this differ by years of experience, job title or education?","1395a2b3":"### Acknowledgements\nI'd like to thank Paul Mooney for his awesome [2018 Survey Kernel](https:\/\/www.kaggle.com\/paultimothymooney\/2018-kaggle-machine-learning-data-science-survey). It is a really good place to start and get an overview of the data."}}