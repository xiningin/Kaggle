{"cell_type":{"dfda7c77":"code","09ab60e7":"code","7a9d9056":"code","d3395624":"code","d36650a2":"code","0cfbb467":"code","6975e0a7":"code","a7885592":"code","d6f3aa25":"code","07773584":"code","ea3dc10d":"code","cbe2c7fb":"markdown","36fa83b5":"markdown","521fd15e":"markdown","431bebaf":"markdown","3434e145":"markdown","19323878":"markdown","d584d458":"markdown","a81858f7":"markdown","96369859":"markdown"},"source":{"dfda7c77":"!pip install pubchempy","09ab60e7":"import pubchempy as pcp\nimport pandas as pd","7a9d9056":"prop = pcp.get_properties(['MolecularFormula', 'MolecularWeight', 'CanonicalSMILES', 'IsomericSMILES',\n'InChI', 'InChIKey', 'IUPACName'],'CN1N=C(C=C1C(F)(F)F)C1=CC=C(S1)C1=CC=NC(SCC(=O)NC2=CC=C(Cl)C=C2)=N1', 'smiles')","d3395624":"print(type(prop))\nprint(prop)","d36650a2":"df = pd.read_csv('..\/input\/drug-discovery-data\/DDH Data.csv')","0cfbb467":"df.head()","6975e0a7":"data = []\n\nfor i in df['SMILES']:\n    props = pcp.get_properties(['MolecularFormula', 'MolecularWeight','InChI', 'InChIKey', 'IUPACName', \n                                'XLogP', 'ExactMass', 'MonoisotopicMass', 'TPSA', 'Complexity', 'Charge', \n                                'HBondDonorCount', 'HBondAcceptorCount', 'RotatableBondCount', \n                                'HeavyAtomCount', 'IsotopeAtomCount', 'AtomStereoCount', \n                                'DefinedAtomStereoCount', 'UndefinedAtomStereoCount', 'BondStereoCount', \n                                'DefinedBondStereoCount', 'UndefinedBondStereoCount', 'CovalentUnitCount', \n                                'Volume3D', 'XStericQuadrupole3D', 'YStericQuadrupole3D', \n                                'ZStericQuadrupole3D', 'FeatureCount3D', 'FeatureAcceptorCount3D', \n                                'FeatureDonorCount3D', 'FeatureAnionCount3D', 'FeatureCationCount3D', \n                                'FeatureRingCount3D', 'FeatureHydrophobeCount3D', 'ConformerModelRMSD3D', \n                                'EffectiveRotorCount3D', 'ConformerCount3D'], i, 'smiles')\n    data.append(props)\n#data","a7885592":"len(data[0][0].keys())","d6f3aa25":"rows = []\ncolumns = data[0][0].keys()\nfor i in range(104):\n    rows.append(data[i][0].values())\nprops_df = pd.DataFrame(data=rows, columns=columns) \nprops_df.head()","07773584":"props_df.insert(1, 'SMILES', df['SMILES'], True)\nprops_df['pIC50'] = df['pIC50 (IC50 in microM)']\nprops_df.head()","ea3dc10d":"props_df.to_csv('DDH Data with Properties.csv', index=False)","cbe2c7fb":"# 2. Necessary Imports","36fa83b5":"# 4. Reading the data file","521fd15e":"# About the Data\n\n![](https:\/\/cdn.pixabay.com\/photo\/2020\/05\/15\/18\/46\/corona-5174671_960_720.jpg)\n\n**This dataset consists of 2 different files for a potential drug against the COVID-19 virus. The original file consists of only a SMILES notation and pIC50 constant against the COVID-19 virus for a chemical compound. The second one consists of engineered features using the pubchempy library of Python. This library helps to access the PubChem data. PubChem is a database of millions of chemical compounds. We used this library to fetch the properties of the compounds using their SMILES representation.**\n\n**The dataset is made publically available by the Government of India as a part of their Drug Discovery Hackathon. There are some potential drugs against the COVID-19 virus in this dataset as suggested by the hackathon organisers.**","431bebaf":"# 1. Install the library `pubchempy`","3434e145":"# 8. Save the new dataframe with all properties as a .csv file","19323878":"# 5. Getting all the available properties\n**Fetch all the properties of all the 104 available compounds from the PubChem database. We need to pass every property available in the database as a list to `get_properties` function of the library. The list of functions could be accessed from [here](https:\/\/pubchempy.readthedocs.io\/en\/latest\/guide\/properties.html).** ","d584d458":"# 3. Checking for a single SMILES string a few properties","a81858f7":"# 7. Fetch the original properties from the original dataframe","96369859":"# 6. Appending the newly found properties to a dataframe"}}