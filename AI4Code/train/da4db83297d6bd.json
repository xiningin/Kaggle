{"cell_type":{"2798515c":"code","12b6e141":"code","f9659b6f":"code","833e022d":"code","1520b63d":"code","d2917647":"code","f1609a55":"code","5e4c3dcb":"code","ae10e892":"code","9858e7eb":"code","1173a21f":"code","3a2bffe0":"code","db32ac3b":"code","8756d1b8":"code","c26a4f2a":"code","0e5f2532":"code","5d9e54db":"code","b475d37a":"code","251a4e1d":"code","815a99fa":"code","454f667d":"code","32dd9c24":"code","ab4f3591":"code","1980aaa3":"code","e0fb2691":"code","24ca92bf":"markdown","0ab664af":"markdown","74fe2aed":"markdown","a6e9c020":"markdown","d41f91fa":"markdown","2c4c030d":"markdown","b6954ea1":"markdown","e90e0510":"markdown"},"source":{"2798515c":"# \uc2dc\ud5d8\ud658\uacbd \uc138\ud305 (\ucf54\ub4dc \ubcc0\uacbd X, \uc2dc\ud5d8\ud658\uacbd\uacfc \uc720\uc0ac\ud558\uac8c \ud30c\uc77c\uc77d\uae30 \uad6c\ud604)\nimport pandas as pd\ndf = pd.read_csv(\"..\/input\/pima-indians-diabetes-database\/diabetes.csv\")\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test = train_test_split(df, test_size=0.2, shuffle=True, random_state=2021)\ny_train = X_train['Outcome']\nX_train = X_train.drop(columns=['Outcome'])\ny_test = X_test['Outcome']\nX_test = X_test.drop(columns=['Outcome'])\n\nX_train.shape, y_train.shape, X_test.shape, y_test.shape","12b6e141":"# \ub77c\uc774\ube0c\ub7ec\ub9ac\nimport pandas as pd\ndf = pd.read_csv(\"..\/input\/pima-indians-diabetes-database\/diabetes.csv\")","f9659b6f":"import warnings\nwarnings.filterwarnings('ignore')","833e022d":"# \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 (\uc0dd\ub7b5)\nX_train.shape, y_train.shape, X_test.shape","1520b63d":"X_train.info()","d2917647":"X_train.head()","f1609a55":"y_train.head()","5e4c3dcb":"X_train.isnull().sum()","ae10e892":"X_test.isnull().sum()","9858e7eb":"X_train.describe()","1173a21f":"#\uc774\uc0c1\uce58 \ucc98\ub9ac\n#Train\nprint('Glucose:',len(X_train[X_train['Glucose']==0]))\nprint('BloodPressure:',len(X_train[X_train['BloodPressure']==0]))\nprint('SkinThickness:',len(X_train[X_train['SkinThickness']==0]))\nprint('Insulin:',len(X_train[X_train['Insulin']==0]))\nprint('BMI:',len(X_train[X_train['BMI']==0]))","3a2bffe0":"#Test\nprint('Glucose:',len(X_test[X_test['Glucose']==0]))\nprint('BloodPressure:',len(X_test[X_test['BloodPressure']==0]))\nprint('SkinThickness:',len(X_test[X_test['SkinThickness']==0]))\nprint('Insulin:',len(X_test[X_test['Insulin']==0]))\nprint('BMI:',len(X_test[X_test['BMI']==0]))","db32ac3b":"# \ud3ec\ub3c4\ub2f9 \uc774\uc0c1\uce58 \uc0ad\uc81c\ndel_idx = X_train[(X_train['Glucose']==0)].index\ndel_idx","8756d1b8":"print('Glucose \uc774\uc0c1\uce58 \uc0ad\uc81c \uc804 :', X_train.shape, y_train.shape)\nX_train = X_train.drop(index=del_idx, axis=0)\ny_train = y_train.drop(index=del_idx, axis=0)\nprint('Glucose \uc774\uc0c1\uce58 \uc0ad\uc81c \ud6c4 :', X_train.shape, y_train.shape)","c26a4f2a":"# \ud3ec\ub3c4\ub2f9\uc744 \uc81c\uc678\ud55c \uc774\uc0c1\uce58, \ud3c9\uade0\uac12\uc73c\ub85c \ub300\uccb4\ncols = ['BloodPressure', 'SkinThickness', 'Insulin', 'BMI']\ncols_mean = X_train[cols].mean()","0e5f2532":"# replace with mean\nfor col in cols:\n    X_train[col] = X_train[col].replace(0, cols_mean[col])","5d9e54db":"#\uc774\uc0c1\uce58 \ucc98\ub9ac\n#Train\nprint('Glucose:',len(X_train[X_train['Glucose']==0]))\nprint('BloodPressure:',len(X_train[X_train['BloodPressure']==0]))\nprint('SkinThickness:',len(X_train[X_train['SkinThickness']==0]))\nprint('Insulin:',len(X_train[X_train['Insulin']==0]))\nprint('BMI:',len(X_train[X_train['BMI']==0]))","b475d37a":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.svm import SVC","251a4e1d":"X_tr, X_val, y_tr, y_val = train_test_split(X_train, y_train, test_size = 0.2, shuffle = True, random_state = 1234)\nX_tr.shape, X_val.shape, y_tr.shape, y_val.shape","815a99fa":"model = SVC(random_state=1234)\nmodel.fit(X_tr, y_tr)\nprint(model.score(X_val, y_val))","454f667d":"model = RandomForestClassifier()\nmodel.fit(X_tr, y_tr)\nprint(model.score(X_val, y_val))","32dd9c24":"model = XGBClassifier()\nmodel.fit(X_tr, y_tr)\nprint(model.score(X_val, y_val))","ab4f3591":"final_model = RandomForestClassifier()\nfinal_model.fit(X_train, y_train)\n\nprediction = final_model.predict(X_test)\n\nsubmission = pd.DataFrame({\n    'Outcome' : prediction\n})","1980aaa3":"# \uc218\ud5d8\ubc88\ud638.csv\ub85c \ucd9c\ub825\nsubmission.to_csv('2021.csv', index=False)","e0fb2691":"round(final_model.score(X_test, y_test) * 100, 2) ","24ca92bf":"## EDA","0ab664af":"## Start","74fe2aed":"## \uacb0\uacfc \uccb4\uc810 (\uc218\ud5d8\uc790\ub294 \uc54c \uc218 \uc5c6\ub294 \ubd80\ubd84\uc784)","a6e9c020":"\ud2b8\ub808\uc778\uc5d0\ub9cc 0\uc774 \uc788\ub294 \ud3ec\ub3c4\ub2f9(Glucose)\ub294 \uc0ad\uc81c\n\ub098\uba38\uc9c0\ub294 \ud3c9\uade0\uac12\uc73c\ub85c \ub300\uccb4 \ud558\uc5ec \uc774\uc0c1\uce58\ub97c \ucc98\ub9ac\ud568","d41f91fa":"## [\ucc38\uace0]\uc791\uc5c5\ud6152 \ubb38\uad6c\n- \ucd9c\ub825\uc744 \uc6d0\ud558\uc2e4 \uacbd\uc6b0 print() \ud568\uc218 \ud65c\uc6a9\n- \uc608\uc2dc) print(df.head())\n- getcwd(), chdir() \ub4f1 \uc791\uc5c5 \ud3f4\ub354 \uc124\uc815 \ubd88\ud544\uc694\n- \ud30c\uc77c \uacbd\ub85c \uc0c1 \ub0b4\ubd80 \ub4dc\ub77c\uc774\ube0c \uacbd\ub85c(C: \ub4f1) \uc811\uadfc \ubd88\uac00\n\n### \ub370\uc774\ud130 \ud30c\uc77c \uc77d\uae30 \uc608\uc81c\n- import pandas as pd\n- X_test = pd.read_csv(\"data\/X_test.csv\")\n- X_train = pd.read_csv(\"data\/X_train.csv\")\n- y_train = pd.read_csv(\"data\/y_train.csv\")\n\n### \uc0ac\uc6a9\uc790 \ucf54\ub529\n\n### \ub2f5\uc548 \uc81c\ucd9c \ucc38\uace0\n- \uc544\ub798 \ucf54\ub4dc \uc608\uce21\ubcc0\uc218\uc640 \uc218\ud5d8\ubc88\ud638\ub97c \uac1c\uc778\ubcc4\ub85c \ubcc0\uacbd\ud558\uc5ec \ud65c\uc6a9\n- pd.DataFrame({'cust_id': X_test.cust_id, 'gender': pred}).to_csv('003000000.csv', index=False)","2c4c030d":"## \ub370\uc774\ud130 \uc804\ucc98\ub9ac","b6954ea1":"## \ub77c\uc774\ube0c\ub7ec\ub9ac \ubc0f \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30","e90e0510":"## \ub2f9\ub1e8\ubcd1 \uc5ec\ubd80 \ud310\ub2e8\n- \uc774\uc0c1\uce58 \ucc98\ub9ac (Glucose, BloodPressure, SkinThickness, Insulin, BMI\uac00 0\uc778 \uac12)"}}