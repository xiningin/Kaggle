{"cell_type":{"a07865e5":"code","e3a3a16e":"code","70e95e4e":"code","d7213f62":"code","d2217aca":"code","0c1e24d2":"code","c18fb879":"code","6fa38bd0":"code","0057caea":"code","999b30dd":"code","9b02b8fa":"code","a8897810":"code","4aa10e25":"code","c9489070":"code","c37b10d2":"code","943d09df":"code","7a554245":"code","2fc114ba":"code","8f0a89b6":"markdown"},"source":{"a07865e5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e3a3a16e":"import pandas as pd\nurl = \"..\/input\/test-file\/tested.csv\"\ndataframe = pd.read_csv(url)\ndataframe.head(6)","70e95e4e":"dataframe.shape","d7213f62":"dataframe.info()","d2217aca":"dataframe.head(5)","0c1e24d2":"dataframe.count()","c18fb879":"dataframe[\"Cabin\"].unique()","6fa38bd0":"dataframe[\"Embarked\"].unique()","0057caea":"dataframe[\"Age\"].unique()","999b30dd":"dataframe['Sex'].value_counts()","9b02b8fa":"dataframe[dataframe['Age'].isnull()]","a8897810":"dataframe.iloc[6]","4aa10e25":"dataframe.iloc[0:10]","c9489070":"df=dataframe\ndf.iloc[:7]","c37b10d2":"df.iloc[400:]","943d09df":"df[df[\"Sex\"]=='female']","7a554245":"df[(df[\"Sex\"]=='female') & (df[\"Age\"]>65)]","2fc114ba":"df[(df['Sex']=='female') & (df['Age']>40) & (df['Survived']==1)]","8f0a89b6":"# Find females age >40 who survive"}}