{"cell_type":{"71ad06e4":"code","43ae8b0b":"code","87c83afd":"code","244e6476":"code","da46427f":"code","3b946fbd":"code","93537124":"code","69af3ed3":"code","b9638d11":"code","7b5845de":"code","cb96b78d":"code","5b65bb54":"code","59bdb61c":"code","dd0ef44b":"code","39786e4a":"code","914d6e45":"code","28184a2e":"code","09a7c3c8":"code","905b884f":"code","c730ac18":"code","91743389":"code","e84d49cb":"code","2e76a2ae":"code","b57cbe7e":"code","9d638eda":"code","56cffdc2":"code","ae801e7c":"code","42f249f5":"code","afcb20ea":"code","05169f82":"code","3f9984bb":"code","eee6cef1":"code","4256f219":"code","e5d9ee9d":"code","f80d30fd":"code","2acba516":"code","8d1be043":"code","a7993357":"code","8b81ca64":"code","c4a7955b":"code","47392630":"code","2cca8958":"code","d29c5476":"code","7ce96b92":"code","daecb958":"code","b2149dea":"code","56a93f45":"code","3e3d44a1":"code","764d1b9c":"code","df170d94":"code","e76d4e4b":"code","a578da01":"code","c14ab443":"code","0836dd75":"code","a0f354a9":"markdown","62b9f065":"markdown","85b2ea6e":"markdown","e5213da9":"markdown","91f4611c":"markdown","5504efbf":"markdown","43114f92":"markdown","09bc787f":"markdown","cd5d9ba0":"markdown","0aa8bd08":"markdown","d11fcc37":"markdown","a26c0c1f":"markdown","5f161551":"markdown","10087c82":"markdown","39c93c27":"markdown","73a9c09c":"markdown","8d2561cb":"markdown","5a1cbe5d":"markdown","019a1c32":"markdown"},"source":{"71ad06e4":"import pandas as pd\nimport numpy as np\nfrom sklearn.neural_network import MLPClassifier\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom xgboost import XGBClassifier\nfrom matplotlib import font_manager as fm\nfrom sklearn.model_selection import train_test_split,cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import StandardScaler,RobustScaler\nfrom sklearn import preprocessing\nfrom sklearn.ensemble import RandomForestClassifier\nimport time\nfrom joblib import dump, load\nfrom datetime import datetime, timedelta\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning) ","43ae8b0b":"pd.set_option('display.max_rows', 1000)\npd.set_option('display.max_columns', 1000)\npd.set_option('display.width', 1000)","87c83afd":"def label_encoder(dataframe,column):\n    le = preprocessing.LabelEncoder()\n    dataframe[column] = le.fit_transform(list(dataframe[column].values))\n    return dataframe[column]","244e6476":"def addFeature(X):\n    # Thanks @mpwolke : https:\/\/www.kaggle.com\/mpwolke\/tooezy-where-are-you-no-camping-here\n    X[\"Soil_Count\"] = X[soil_features].apply(sum, axis=1)\n\n    # Thanks @yannbarthelemy : https:\/\/www.kaggle.com\/yannbarthelemy\/tps-december-first-simple-feature-engineering\n    X[\"Wilderness_Area_Count\"] = X[wilderness_features].apply(sum, axis=1)\n    X[\"Hillshade_mean\"] = X[features_Hillshade].mean(axis=1)\n    X['amp_Hillshade'] = X[features_Hillshade].max(axis=1) - X[features_Hillshade].min(axis=1)","da46427f":"train = pd.read_csv(\"..\/input\/tabular-playground-series-dec-2021\/train.csv\")\ntest = pd.read_csv(\"..\/input\/tabular-playground-series-dec-2021\/test.csv\")\nsample_submission = pd.read_csv(\"..\/input\/tabular-playground-series-dec-2021\/sample_submission.csv\")","3b946fbd":"train.head()","93537124":"train.tail()","69af3ed3":"train.shape","b9638d11":"train[\"Id\"].nunique()","7b5845de":"train.isna().sum()","cb96b78d":"train[\"Elevation\"].value_counts()","5b65bb54":"train[\"Cover_Type\"].value_counts()","59bdb61c":"train[\"Cover_Type\"].hist();","dd0ef44b":"plt.figure(figsize=(10,10))\n\nplt.rcParams['font.size'] = 20\n\nplt.pie(train[\"Cover_Type\"].value_counts().values,labels=train[\"Cover_Type\"].value_counts().index, autopct=\"%1.1f%%\")\n\nplt.legend(title=\"Cover Types\")\n\nplt.title(\"Distribution of Cover Types\")\n\nplt.show()","39786e4a":"test.shape","914d6e45":"test.isna().sum()","28184a2e":"train.head()","09a7c3c8":"plt.bar(train.Cover_Type.value_counts().keys(),train.Cover_Type.value_counts().values,color=\"r\")\n\nplt.title(\"Cover Type Distribution\")\nplt.xlabel(\"Cover Type\")\nplt.ylabel(\"Number of Observation\")\n\nplt.tight_layout()\nplt.grid(False)\n\nplt.show()","905b884f":"train[\"Aspect\"][train[\"Aspect\"] < 0] += 360\ntrain[\"Aspect\"][train[\"Aspect\"] > 359] -= 360\n\ntest[\"Aspect\"][test[\"Aspect\"] < 0] += 360\ntest[\"Aspect\"][test[\"Aspect\"] > 359] -= 360","c730ac18":"train.loc[train[\"Hillshade_9am\"] < 0, \"Hillshade_9am\"] = 0\ntest.loc[test[\"Hillshade_9am\"] < 0, \"Hillshade_9am\"] = 0\n\ntrain.loc[train[\"Hillshade_Noon\"] < 0, \"Hillshade_Noon\"] = 0\ntest.loc[test[\"Hillshade_Noon\"] < 0, \"Hillshade_Noon\"] = 0\n\ntrain.loc[train[\"Hillshade_3pm\"] < 0, \"Hillshade_3pm\"] = 0\ntest.loc[test[\"Hillshade_3pm\"] < 0, \"Hillshade_3pm\"] = 0\n\ntrain.loc[train[\"Hillshade_9am\"] > 255, \"Hillshade_9am\"] = 255\ntest.loc[test[\"Hillshade_9am\"] > 255, \"Hillshade_9am\"] = 255\n\ntrain.loc[train[\"Hillshade_Noon\"] > 255, \"Hillshade_Noon\"] = 255\ntest.loc[test[\"Hillshade_Noon\"] > 255, \"Hillshade_Noon\"] = 255\n\ntrain.loc[train[\"Hillshade_3pm\"] > 255, \"Hillshade_3pm\"] = 255\ntest.loc[test[\"Hillshade_3pm\"] > 255, \"Hillshade_3pm\"] = 255","91743389":"features_Hillshade = ['Hillshade_9am', 'Hillshade_Noon', 'Hillshade_3pm']\nsoil_features = [x for x in train.columns if x.startswith(\"Soil_Type\")]\nwilderness_features = [x for x in train.columns if x.startswith(\"Wilderness_Area\")]","e84d49cb":"addFeature(train)\naddFeature(test)","2e76a2ae":"train.drop([\"Soil_Type7\", \"Id\", \"Soil_Type15\"], axis=1, inplace=True)\ntest.drop([\"Soil_Type7\", \"Id\", \"Soil_Type15\"], axis=1, inplace=True)","b57cbe7e":"train = train[train.Cover_Type != 5]","9d638eda":"# Manhhattan distance to Hydrology\ntrain[\"mnhttn_dist_hydrlgy\"] = np.abs(train[\"Horizontal_Distance_To_Hydrology\"]) + np.abs(train[\"Vertical_Distance_To_Hydrology\"])\ntest[\"mnhttn_dist_hydrlgy\"] = np.abs(test[\"Horizontal_Distance_To_Hydrology\"]) + np.abs(test[\"Vertical_Distance_To_Hydrology\"])\n\n# Euclidean distance to Hydrology\ntrain[\"ecldn_dist_hydrlgy\"] = (train[\"Horizontal_Distance_To_Hydrology\"]**2 + train[\"Vertical_Distance_To_Hydrology\"]**2)**0.5\ntest[\"ecldn_dist_hydrlgy\"] = (test[\"Horizontal_Distance_To_Hydrology\"]**2 + test[\"Vertical_Distance_To_Hydrology\"]**2)**0.5","56cffdc2":"X_train = train.drop(\"Cover_Type\",axis=1).values\ny_train = train.Cover_Type.values","ae801e7c":"X_train","42f249f5":"sc = RobustScaler()\ntrain_scaled = sc.fit_transform(X_train)","afcb20ea":"test_scaled = sc.transform(test)","05169f82":"logistic_regression = LogisticRegression(random_state=0,solver=\"liblinear\").fit(train_scaled,y_train)","3f9984bb":"logistic_regression","eee6cef1":"#saving the model\n#dump(logistic_regression,\"logistic_Regression_model.joblib\")","4256f219":"logistic_regression.intercept_","e5d9ee9d":"logistic_regression.coef_[:1]","f80d30fd":"y_pred = logistic_regression.predict(test_scaled)","2acba516":"pd.DataFrame(y_pred).value_counts()","8d1be043":"sample_submission.Cover_Type = y_pred","a7993357":"clf = MLPClassifier(solver='adam', alpha=0.001,hidden_layer_sizes=(10, 3),\n                    max_iter=150,activation=\"tanh\", random_state=1)","8b81ca64":"start_time = time.time()\n\nclf.fit(train_scaled,y_train)\n\nelapsed_time = time.time() - start_time\n\nprint(f\"Elapsed time for Neural Networks: \"\n      f\"{elapsed_time:.3f} seconds\")","c4a7955b":"y_pred = clf.predict(test_scaled)","47392630":"pd.DataFrame(y_pred).value_counts()","2cca8958":"sample_submission.Cover_Type = y_pred","d29c5476":"clf = RandomForestClassifier(max_depth=2, random_state=0)","7ce96b92":"start_time = time.time()\n\nclf.fit(train_scaled,y_train)\n\nelapsed_time = time.time() - start_time\n\nprint(f\"Elapsed time for Random Forests: \"\n      f\"{elapsed_time:.3f} seconds\")","daecb958":"y_pred = clf.predict(test_scaled)","b2149dea":"pd.DataFrame(y_pred).value_counts()","56a93f45":"sample_submission.Cover_Type = y_pred","3e3d44a1":"train.head()","764d1b9c":"xgb_model = XGBClassifier()","df170d94":"start_time = time.time()\n\nxgb_model.fit(train_scaled,y_train)\n\nelapsed_time = time.time() - start_time\n\nprint(f\"Elapsed time for XGBoost: \"\n      f\"{elapsed_time:.3f} seconds\")","e76d4e4b":"y_pred = xgb_model.predict(test_scaled)","a578da01":"pd.DataFrame(y_pred).value_counts()","c14ab443":"sample_submission.Cover_Type = y_pred","0836dd75":"sample_submission.to_csv(\"xgboost_submission.csv\",index=False)","a0f354a9":"### Soil","62b9f065":"### Aspect\n\nAspect is the compass direction that a terrain faces. Here it is expressed in Sexagesimal system where the angle lies in the range (0, 359) degrees. In this feature, however, there are some values which are less than 0 and some values which are greater than 359. It will be better If we fix those values so that It lies in the given range. This is fairly easy to do in this case because upon a closer inspection you will find that all the values in this column lies in the range (-360, 720). So, adding 360 to angles smaller than 0 and subtracting 360 from angles greater than 359 will do the work. This is how it should be:\n\n[Credit](https:\/\/www.kaggle.com\/c\/tabular-playground-series-dec-2021\/discussion\/293373)","85b2ea6e":"**Tabular Playground Series by Kaggle**\n\n***\n\nDecember 2021\n\n***\n\n**Created by Berkay Alan**","e5213da9":"## Scaling the Data","91f4611c":"**Dataset:**\n\nhttps:\/\/www.kaggle.com\/c\/tabular-playground-series-dec-2021\n\n***\n\n**Description**\n\nFor this competition, you will be predicting a binary target based on 100 feature columns given in the data. All columns are continuous.\n\nThe data is synthetically generated by a GAN that was trained on a real-world dataset used to identify spam emails via various extracted features from the email.\n\nFiles\ntrain.csv - the training data with the target column\ntest.csv - the test set; you will be predicting the target for each row in this file (the probability of the binary target)\nsample_submission.csv - a sample submission file in the correct format","5504efbf":"## Neural Networks","43114f92":"[Credit](https:\/\/www.kaggle.com\/chryzal\/features-engineering-for-you)","09bc787f":"***\n\n**Columns**\n\nElevation - Elevation in meters\n\nAspect - Aspect in degrees azimuth\n\nSlope - Slope in degrees\n\nHorizontal_Distance_To_Hydrology - Horz Dist to nearest surface water features\n\nVertical_Distance_To_Hydrology - Vert Dist to nearest surface water features\n\nHorizontal_Distance_To_Roadways - Horz Dist to nearest roadway\n\nHillshade_9am (0 to 255 index) - Hillshade index at 9am, summer solstice\n\nHillshade_Noon (0 to 255 index) - Hillshade index at noon, summer solstice\n\nHillshade_3pm (0 to 255 index) - Hillshade index at 3pm, summer solstice\n\nHorizontal_Distance_To_Fire_Points - Horz Dist to nearest wildfire ignition points\n\nWilderness_Area (4 binary columns, 0 = absence or 1 = presence) - Wilderness area designation\n\nSoil_Type (40 binary columns, 0 = absence or 1 = presence) - Soil Type designation\n\nCover_Type (7 types, integers 1 to 7) - Forest Cover Type designation\n\nThe wilderness areas are:\n\n1 - Rawah Wilderness Area\n\n2 - Neota Wilderness Area\n\n3 - Comanche Peak Wilderness Area\n\n4 - Cache la Poudre Wilderness Area\n\nThe soil types are:\n\n1 Cathedral family - Rock outcrop complex, extremely stony.\n\n2 Vanet - Ratake families complex, very stony.\n\n3 Haploborolis - Rock outcrop complex, rubbly.\n\n4 Ratake family - Rock outcrop complex, rubbly.\n\n5 Vanet family - Rock outcrop complex complex, rubbly.\n\n6 Vanet - Wetmore families - Rock outcrop complex, stony.\n\n7 Gothic family.\n\n8 Supervisor - Limber families complex.\n\n9 Troutville family, very stony.\n\n10 Bullwark - Catamount families - Rock outcrop complex, rubbly.\n\n11 Bullwark - Catamount families - Rock land complex, rubbly.\n\n12 Legault family - Rock land complex, stony.\n\n13 Catamount family - Rock land - Bullwark family complex, rubbly.\n\n14 Pachic Argiborolis - Aquolis complex.\n\n15 unspecified in the USFS Soil and ELU Survey.\n\n16 Cryaquolis - Cryoborolis complex.\n\n17 Gateview family - Cryaquolis complex.\n\n18 Rogert family, very stony.\n\n19 Typic Cryaquolis - Borohemists complex.\n\n20 Typic Cryaquepts - Typic Cryaquolls complex.\n\n21 Typic Cryaquolls - Leighcan family, till substratum complex.\n\n22 Leighcan family, till substratum, extremely bouldery.\n\n23 Leighcan family, till substratum - Typic Cryaquolls complex.\n\n24 Leighcan family, extremely stony.\n\n25 Leighcan family, warm, extremely stony.\n\n26 Granile - Catamount families complex, very stony.\n\n27 Leighcan family, warm - Rock outcrop complex, extremely stony.\n\n28 Leighcan family - Rock outcrop complex, extremely stony.\n\n29 Como - Legault families complex, extremely stony.\n\n30 Como family - Rock land - Legault family complex, extremely stony.\n\n31 Leighcan - Catamount families complex, extremely stony.\n\n32 Catamount family - Rock outcrop - Leighcan family complex, extremely stony.\n\n33 Leighcan - Catamount families - Rock outcrop complex, extremely stony.\n\n34 Cryorthents - Rock land complex, extremely stony.\n\n35 Cryumbrepts - Rock outcrop - Cryaquepts complex.\n\n36 Bross family - Rock land - Cryumbrepts complex, extremely stony.\n\n37 Rock outcrop - Cryumbrepts - Cryorthents complex, extremely stony.\n\n38 Leighcan - Moran families - Cryaquolls complex, extremely stony.\n\n39 Moran family - Cryorthents - Leighcan family complex, extremely stony.\n\n40 Moran family - Cryorthents - Rock land complex, extremely stony.\n","cd5d9ba0":"### Hillshade\n\nThe next three features are the Hillshade features. Hillshade, basically, is a 3D representation of a surface. Hillshade is created by measuring luminosity of certain patches of a terrain that results when a source of light is casted at a particular angle. It's a shade of grey so all the values must lie in the range (0, 255) which is also what the data description in the original competition says. However, In both train and test datasets, there are certain rows with hillshade value more than 255 or less than 0. This may be the result of recording error. It seems that the negative values refer to the darkest shade, which has the value of 0, and the values greater then 255 refer to brightest shade, which has the value of 255 and, hence, It would be better to replace all the negative values with 0 and values greater than 255 with 255. Here is how it should be:\n\n[Credit](https:\/\/www.kaggle.com\/c\/tabular-playground-series-dec-2021\/discussion\/293373)","0aa8bd08":"## Functions","d11fcc37":"### Creating distance based features","a26c0c1f":"## Reading Files","5f161551":"## Case","10087c82":"## Logistic Regression","39c93c27":"## Exploratory Data Analysis","73a9c09c":"## Random Forests","8d2561cb":"## Feature Engineering","5a1cbe5d":"## Importing Libraries","019a1c32":"## Xgboost - The Best Score"}}