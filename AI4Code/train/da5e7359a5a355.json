{"cell_type":{"a78f0651":"code","45cf23a0":"code","eab8ecc4":"code","765f7a4f":"code","2f9a1f89":"code","a87e9c15":"code","365ae9c6":"code","5bc328e8":"code","bb1e5040":"code","9b3fc1fa":"code","a7871552":"code","fea07b49":"code","563d49de":"code","b06b0ff0":"code","00de1b3d":"code","d088d804":"code","bc0d7e9b":"code","395c192f":"code","66bf5647":"code","0369f576":"code","9d6c7a0c":"code","bc013620":"code","b5ba7509":"code","8a64c729":"code","31903d14":"code","b6868019":"code","1297ebe9":"code","af167213":"code","f9bb4e86":"code","fe40c214":"code","34fd2ac1":"code","6b774454":"code","f698abd3":"code","10ccaef7":"code","5c182d64":"code","8968d5d4":"code","2550b3a1":"code","7ec9c4c6":"code","6ea1bad0":"code","98d1f901":"code","8f9d9172":"code","69d8677d":"code","dc47b50e":"code","c84946d8":"code","272cc3d5":"code","808a153e":"code","b0fd91e2":"code","61d08800":"code","f3b45e82":"code","0948993d":"code","94d6fe2f":"code","64b516d3":"code","2f224137":"code","3ea66789":"code","87b6eb76":"code","e40022a7":"code","29d92536":"code","90012581":"code","ed47ff20":"code","9afe7b51":"code","67821099":"code","083fa4fa":"code","86d8b627":"code","acfebb50":"code","5f2f5340":"code","c0eb9f2a":"code","21b32ee4":"code","6bb40b38":"code","6903e739":"code","2556664d":"code","f466ff7d":"code","3fb98930":"code","9501e700":"code","4c544fa9":"code","7acc7c9d":"code","58980fff":"code","36c287f2":"markdown","4007102d":"markdown","5d1dbd3e":"markdown","16c30ab5":"markdown","a04a10a8":"markdown","d5e66d53":"markdown"},"source":{"a78f0651":"import numpy as np \nimport pandas as pd\nimport pandas_profiling\nimport warnings\nimport math\nwarnings.filterwarnings('ignore')\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nsns.set_style(\"whitegrid\")\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Dropout\nfrom tensorflow.keras.layers import LSTM,Convolution1D,Bidirectional\nfrom tensorflow import keras\n# import tensorflow as tf","45cf23a0":"# cmprssd = pd.read_csv(\"key_indicators_of_covid - Sheet1.csv\")\n# data = pd.read_csv(\"COVID_FINAL_DATA - TimeSeries_KeyIndicators_Detail.csv\")\ndata = pd.read_csv(\"..\/input\/predictable-covid-dataset\/best_covid_data - Sheet1.csv\",parse_dates=['date'])\ndata.drop(['location','continent','iso_code','icu_patients', 'icu_patients_per_million', 'hosp_patients', 'hosp_patients_per_million', 'weekly_icu_admissions' ,'weekly_icu_admissions_per_million','weekly_hosp_admissions','weekly_hosp_admissions_per_million','total_vaccinations','people_vaccinated','people_fully_vaccinated','new_vaccinations','new_vaccinations_smoothed','total_vaccinations_per_hundred','people_vaccinated_per_hundred','people_fully_vaccinated_per_hundred','new_vaccinations_smoothed_per_million'],axis=1,inplace=True)\npd.set_option('display.max_columns', None)\ndata.head(30)","eab8ecc4":"data['active']=data['new_cases']-data['new_deaths']","765f7a4f":"# data.duplicated().sum()\ndata.tests_units.describe()","2f9a1f89":"data.isnull().sum()","a87e9c15":"fig, ax = plt.subplots()\nfig.set_size_inches(10, 8)\nsns.heatmap(data.corr())","365ae9c6":"tri=[data['active'],data['new_cases'],data['new_deaths']]\nsns.lineplot(data=tri)","5bc328e8":"fig, (ax1, ax2) = plt.subplots(ncols=2, sharey=True)\nfig.set_size_inches(12, 5)\nsns.lineplot(x='date',y='total_cases',data=data,ax=ax1,color='darkcyan')\nsns.lineplot(x='date',y='total_deaths',data=data,ax=ax2,color='darkcyan')\n# throughout the year cases have been increasing constantly","bb1e5040":"(data['total_deaths'].sum()\/data['total_cases'].sum())*100\n# from total cases only 2.09% deaths occured ","9b3fc1fa":"fig, (ax1, ax2) = plt.subplots(ncols=2, sharey=True)\nfig.set_size_inches(12, 5)\nsns.lineplot(x='date',y='new_cases',data=data,ax=ax1,color='darkcyan')\nsns.lineplot(x='date',y='new_deaths',data=data,ax=ax2,color='darkcyan')\n# it seems that from 2020-5 to  2020-8 corona cases increased significantly ","a7871552":"(data['new_deaths'].sum()\/data['new_cases'].sum())*100\n# from new cases only 2.21% deaths occured","fea07b49":"# stringency_index:This is a composite measure based on nine response indicators including school closures,\n# workplace closures, and travel bans, rescaled to a value from 0 to 100 (100 = strictest).\nsns.lineplot(x='date',y='stringency_index',data=data,color='darkcyan')\n# so commparing this graph with the graph above, it seems that lockdown and relative measures were applied \n# strictly before the corona cases increased significantly. so we can assume that applying strict SOP's at \n# regional level did not help prevent the spread of corona virus, stringency index and total cases both seems to be\n# correlated with each other instead because both seems to have same pattern of trends.","563d49de":"# sns.set(rc={\"axes.facecolor\":\"#283747\",\"axes.grid\":False})\nfig, (ax1, ax2) = plt.subplots(ncols=2, sharey=True)\nfig.set_size_inches(12, 5)\nsns.lineplot(x='date',y='new_cases_smoothed',data=data,ax=ax1,color='darkcyan')\nsns.lineplot(x='date',y='new_deaths_smoothed',data=data,ax=ax2,color='darkcyan')\n# tests that were conducted against confirmed cases have also increased in the same time frame and this confirms\n# our above hyptothesis.","b06b0ff0":"(data['new_deaths_smoothed'].sum()\/data['new_cases_smoothed'].sum())*100\n# from total cases smoothed only 2.21% deaths occured","00de1b3d":"sns.lineplot(x='date',y='positive_rate',data=data,color='darkcyan')\n# positive rate shows the similar pattern as new cases , but there was an inital uprising\n# at 2020-3 which remained for a month and then immediately went down at 2020-4.","d088d804":"data.active.sum()\n# these have been the active cases through out the pandemic ","bc0d7e9b":"sns.scatterplot(x='date',y='active',size='new_tests',sizes=(20,200),data=data,color='darkcyan')\n# total active cases from 2020-3 to 2021-3","395c192f":"sns.scatterplot(x='date',y='positive_rate',size='stringency_index',sizes=(20,200),data=data,color='darkcyan')\n# there is a clear increase in stringency index before the uprising of the positive cases in coronavirus this also\n# implies that applying SOP's and lockdown and several other anti-corona measures did not help prevent the spread \n# of coronavirus.","66bf5647":"# People living with heart problems might be especially wary, since cardiovascular conditions are associated\n# with severe coronavirus disease and a higher risk of death. \n# People with diabetes are more likely to have serious complications from COVID-19. In general, people with \n# diabetes are more likely to have more severe symptoms and complications when infected with any virus\n# . Your risk of getting very sick from COVID-19 is likely to be lower if your diabetes is well-managed","0369f576":"data1 = pd.read_csv(\"..\/input\/covid19\/COVID-19-3jun.csv\",parse_dates=['Date'])\n# importing the second dataset","9d6c7a0c":"data1['Active']=data1['Cases']-data1['Deaths']\n# data1.head(5)\n\n# here we are creating a new feature called active by substracting the cases with deaths","bc013620":"fig, ax = plt.subplots()\nfig.set_size_inches(10, 8)\nsns.heatmap(data1.corr(),annot=True)\n# Active and Cases are highly correlated to each other ","b5ba7509":"sns.pairplot(data1,size=3)\n# the pariplot confirms the heatmap above that active and cases are correlated","8a64c729":"plt.figure(figsize=(16,6))\ntrio=[data1['Cases'],data1['Deaths'],data1['Recovered'],data1['Active']]\nsns.lineplot(data=trio)\n\n\n# this plot shows the frequency of cases , deaths and recovered","31903d14":"plot=data1.groupby('Province').Cases.sum()\nplt.figure(figsize=(14,8))\nax = sns.barplot(x=plot.index, y=plot.values)\nax.set(ylabel=\"Cases\", xlabel = \"Provinces\")\nax.set_title(\"Cases per province\")\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\nplt.show()\n# showing the sum cases of each province","b6868019":"plt.figure(figsize=(30,10))\nsns.barplot(x='Province',y='Cases',data=data1)\n# this plot shows the mean cases of each province ","1297ebe9":"plot=data1.groupby('Province').Deaths.sum()\nplt.figure(figsize=(14,8))\nax = sns.barplot(x=plot.index, y=plot.values)\nax.set(ylabel=\"Deaths\", xlabel = \"Provinces\")\nax.set_title(\"Deaths per province\")\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)\nplt.show()\n# showing the sum deaths of each province","af167213":"plt.figure(figsize=(30,10))\nsns.barplot(x='Province',y='Deaths',data=data1)\n# this plot shows the mean deaths of each province","f9bb4e86":"data1.groupby('Province').Recovered.agg(['sum'])\n# showing the sum recovered of each province","fe40c214":"plt.figure(figsize=(30,10))\nsns.barplot(x='Province',y='Recovered',data=data1)\n# this plot shows the mean recovered of each province","34fd2ac1":"data1.groupby('Province').Active.agg(['mean'])\n# showing the sum active of each province","6b774454":"plt.figure(figsize=(30,10))\nsns.barplot(x='Province',y='Active',data=data1)\n# this plot shows the mean active of each province","f698abd3":"plt.figure(figsize=(10,8))\nsns.barplot(x='Lockdown',y='Cases',data=data1)\n# this plot shows that in smart lockdown the cases(mean) increased.","10ccaef7":"plt.figure(figsize=(10,8))\nsns.barplot(x='Lockdown',y='Deaths',data=data1)\n# this plot shows that in smart lockdown the deaths(mean) increased.","5c182d64":"plt.figure(figsize=(10,8))\nsns.barplot(x='Lockdown',y='Recovered',data=data1)\n# this plot shows that in smart lockdown the recovery rate was greater compared to other three scenerios","8968d5d4":"plt.figure(figsize=(10,8))\nsns.barplot(x='Lockdown',y='Active',data=data1)\n# this plot shows that in smart lockdown the active cases were greater compared to other three scenerios","2550b3a1":"plt.figure(figsize=(20,12))\nsns.scatterplot(x='Date',y='Cases',hue='Travel_history',size='Province',sizes=(20,250),data=data1)\n# The cause of the most of the corona cases is local - social contact mostly in islamabad and sindh and punjab.","7ec9c4c6":"plt.figure(figsize=(20,12))\nsns.scatterplot(x='Date',y='Deaths',hue='Travel_history',size='Province',sizes=(20,250),data=data1)\n# large number of deaths were caused by local - social contact and unknown reasons in islamabad , punjab ,sindh\n# khyber pakhtunkhwa","6ea1bad0":"plt.figure(figsize=(20,12))\nsns.scatterplot(x='Date',y='Recovered',hue='Travel_history',size='Province',sizes=(20,250),data=data1)","98d1f901":"plt.figure(figsize=(20,12))\nsns.scatterplot(x='Date',y='Active',hue='Travel_history',size='Province',sizes=(20,250),data=data1)\n# see for the active cases","8f9d9172":"plt.figure(figsize=(15,10))\nsns.scatterplot(x='Date',y='Cases',hue='Province',size='Lockdown',sizes=(20,100),data=data1)\n# as you can see that large number of cases were discovered from 2020-4-15 to 2020-6-01 and most of the cases \n# belong to sindh and punjab when smart lockdown was applied.","69d8677d":"plt.figure(figsize=(15,10))\nsns.scatterplot(x='Date',y='Deaths',hue='Province',size='Lockdown',sizes=(20,100),data=data1)\n# see for deaths ","dc47b50e":"plt.figure(figsize=(15,10))\nsns.scatterplot(x='Date',y='Recovered',hue='Province',size='Lockdown',sizes=(20,100),data=data1)\n# see for recovered","c84946d8":"plt.figure(figsize=(15,10))\nsns.scatterplot(x='Date',y='Active',hue='Province',size='Lockdown',sizes=(20,100),data=data1)\n# see for active","272cc3d5":"plot=data1.groupby('City')['Cases'].sum().sort_values(ascending=False)[0:5]\nplot\n# plt.figure(figsize=(10,8))\n# ax = sns.barplot(x=plot.index, y=plot.values,hue='Lockdown')\n# ax.set(ylabel=\"Cases\", xlabel = \"Top 5 cities\")\n# ax.set_title(\"Top most effected cities by corona\")\n# ax.set_xticklabels(ax.get_xticklabels(), rotation=90)\n# plt.show()\n# the sum of corona cases for each city","808a153e":"data1.groupby('City').Deaths.agg(['sum'])\n# sum of death for each city ","b0fd91e2":"data1.groupby('City').Recovered.agg(['sum'])\n# sum of recovered for each city ","61d08800":"data1.groupby('City').Active.agg(['sum'])\n# sum of active for each city ","f3b45e82":"sns.displot(x='Cases', y=\"City\",data=data1,hue='Lockdown',height=20)\n# most of the cases belong to islamabad, kararchi or lahore when smart lockdown was applied","0948993d":"sns.displot(x='Deaths', y=\"City\",data=data1,hue='Lockdown',height=20)\n# see for the deaths ","94d6fe2f":"# sns.set_style(\"darkgrid\")\nsns.displot(x='Recovered', y=\"City\",data=data1,hue='Lockdown',height=20)\n# see the recovered cases","64b516d3":"sns.displot(x='Active', y=\"City\",data=data1,hue='Lockdown',height=20)\n# see for the active cases","2f224137":"data1","3ea66789":"fig.set_size_inches(12, 5)\nsns.lmplot(x='Cases',y='Deaths',data=data1)\nsns.lmplot(x='Cases',y='Recovered',data=data1)\nsns.lmplot(x='Cases',y='Active',data=data1)\n# recovered and deaths column are correlated we will create bands of them","87b6eb76":"data1['smart_f']=np.where(data1['Lockdown']=='Smart',1,0)\n# data1.drop('Lockdown',axis=1,inplace=True)\ndata1","e40022a7":"# local - social contact,Unknown and iran\ndata1['th_f']=np.where(data1['Travel_history']=='Local - Social Contact',1,0)\n# data1.drop('Travel_history',axis=1,inplace=True)\ndata1","29d92536":"data1['province_f']=np.where(\n    (data1['Province']=='Sindh')|(data1['Province']=='Punjab')|(data1['Province']=='Khyber Pakhtunkhwa'),1,0\n    )\ndata1","90012581":"data1['city_f']=np.where(\n    (data1['City']=='Karachi')|(data1['City']=='Lahore'),1,0\n    )\ndata1","ed47ff20":"data1.drop('Travel_history',axis=1,inplace=True)\ndata1.drop('Province',axis=1,inplace=True)\ndata1.drop('City',axis=1,inplace=True)\ndata1.drop('Lockdown',axis=1,inplace=True)","9afe7b51":"data1","67821099":"pdf=(data1[['Cases']])","083fa4fa":"pdf","86d8b627":"ds=pdf.values\nds=ds.astype('float32')","acfebb50":"ds","5f2f5340":"scaler=MinMaxScaler(feature_range=(0,1))\nds=scaler.fit_transform(ds)","c0eb9f2a":"ds","21b32ee4":"train_size = int(len(ds) * 0.67)\ntest_size = len(ds) - train_size\ntrain, test = ds[0:train_size,:], ds[train_size:len(ds),:]\nprint(len(train), len(test))","6bb40b38":"# convert an array of values into a dataset matrix\ndef create_dataset(dataset, look_back=1):\n    dataX, dataY = [], []\n    for i in range(len(dataset)-look_back-1):\n        a = dataset[i:(i+look_back), 0]\n        dataX.append(a)\n        dataY.append(dataset[i + look_back, 0])\n    return np.array(dataX), np.array(dataY)\nlook_back = 3\ntrainX, trainY = create_dataset(train, look_back)\ntestX, testY = create_dataset(test, look_back)","6903e739":"# reshape input to be [samples, time steps, features]\ntrainX = np.reshape(trainX, (trainX.shape[0], 1, trainX.shape[1]))\ntestX = np.reshape(testX, (testX.shape[0], 1, testX.shape[1]))","2556664d":"model = Sequential()\nmodel.add(Convolution1D(filters=10,kernel_size=1 , activation = 'tanh'))\nmodel.add(LSTM(4, input_shape=(1, look_back)))\nmodel.add(Dense(1,input_dim=look_back))\nmodel.compile(loss='mean_squared_error', optimizer='adam')\nmodel.fit(trainX, trainY, epochs=100, batch_size=1)","f466ff7d":"# model = Sequential()\n# model.add(LSTM(4, input_shape=(1, look_back)))\n# model.add(Dense(1,input_dim=look_back))\n# model.compile(loss='mean_squared_error', optimizer='adam')\n# model.fit(trainX, trainY, epochs=100, batch_size=1)","3fb98930":"# model = Sequential()\n# model.add(Bidirectional(LSTM(4, input_shape=(1, look_back),activation='relu')))\n# model.add(Dense(1,input_dim=look_back,activation='tanh'))\n# model.compile(loss='mean_squared_error', optimizer='adam',metrics=['accuracy'])\n# model.fit(trainX, trainY, epochs=100, batch_size=1)","9501e700":"trainPredict = model.predict(trainX)\ntestPredict = model.predict(testX)","4c544fa9":"trainPredict = scaler.inverse_transform(trainPredict)\ntrainY = scaler.inverse_transform([trainY])\ntestPredict = scaler.inverse_transform(testPredict)\ntestY = scaler.inverse_transform([testY])","7acc7c9d":"trainScore = math.sqrt(mean_squared_error(trainY[0], trainPredict[:,0]))\nprint('Train Score: %.2f RMSE' % (trainScore))\ntestScore = math.sqrt(mean_squared_error(testY[0], testPredict[:,0]))\nprint('Test Score: %.2f RMSE' % (testScore))","58980fff":"trainPredictPlot = np.empty_like(ds)\ntrainPredictPlot[:, :] = np.nan\ntrainPredictPlot[look_back:len(trainPredict)+look_back, :] = trainPredict\n\ntestPredictPlot = np.empty_like(ds)\ntestPredictPlot[:, :] = np.nan\ntestPredictPlot[len(trainPredict)+(look_back*2)+1:len(ds)-1, :] = testPredict\n\nplt.figure(figsize=(15,10))\nplt.plot(scaler.inverse_transform(ds),label=\"Original\")\nplt.plot(trainPredictPlot,label=\"train predicton\")\nplt.plot(testPredictPlot,label=\"test prediction\")\nplt.legend()\nplt.show()\n# showing the original dataset in blue, \n# the predictions for the training dataset in red\n# the predictions on the unseen test dataset in green.","36c287f2":"now we will start analysing the data through different calculations and visualization, we will try to uncover the reason of increase in covid cases with this dataset and to understand when the covid increased and decreased and why.","4007102d":"we have the findings above we will create the features accordingly. Now the feature engineering part will start from here.","5d1dbd3e":"features of interest :\nDate\nCases\nTravel_history\nProvince \nCity\nLockdown\nActive","16c30ab5":"1.Cases and Active are highly correlated\n2.In smart lockdown the cases(mean) increased.\n3.The cause of the most of the corona cases is local - social contact,Unknown and iran mostly in islamabad and sindh and punjab.\n4.most of the corona cases are found in karachi and lahore","a04a10a8":"results\n\nLSTM\nhyperparameters\nwhen activation = tanh\nlast loss=0.0023\nTrain Score: 80.91 RMSE\nTest Score: 187.08 RMSE\n########################################\nLSTM+CNN:\nhyperparameters\nwhen activation = tanh\nlast loss=0.0023\nTrain Score: 78.71 RMSE\nTest Score: 187.62 RMSE\n########################################\nCNN:\nhyperparameters\nwhen activation = relu\nlast loss=0.0023\nTrain Score: 77.71 RMSE\nTest Score: 183.99 RMSE\n\nwhen activation = tanh\nlast loss=0.0024\nTrain Score: 80.71 RMSE\nTest Score: 190.99 RMSE\n#########################################\nBi-directional LSTM\nhyperparameter\nwithout any activation function \nlast loss=0.0023\nTrain Score: 79.05 RMSE\nTest Score: 184.95 RMSE\n\nwhen activation=tanh\nlast loss=0.0024\nTrain Score: 80.20 RMSE\nTest Score: 189.50 RMSE\n\nwhen activation=relu\nlast loss=0.0023\nTrain Score: 77.39 RMSE\nTest Score: 188.27 RMSE\n\nwhen activation=relu+tanh\nlast loss=0.0022\nTrain Score: 85.61 RMSE\nTest Score: 185.91 RMSE\n#########################################\n\n","d5e66d53":"                                        NOTEBOOK for COVID Pakistan\nThe purpose of this notebook is to analyze the covid situation in pakistan and to predict the covid positive cases for the next day , we will be performing:\n\nExploratory data analysis\n\ndata cleaning \n\nfeature engineering \n\napplying deep learning model\n\nevaluating the results\n\nwe need a data that describes the facts of increase in corona cases or else we need to work on feature engineering"}}