{"cell_type":{"69862e09":"code","2ef05fb0":"code","b2e9a45a":"code","cf8db767":"code","6ceec249":"code","b2c9cbc1":"code","5ee1da0b":"code","2cdb004d":"code","7ecc144f":"code","3952a5ff":"code","b8af0a1b":"code","304c0fc2":"code","81c8f386":"code","e05dc11b":"code","e62c453f":"code","8ff44958":"code","ca3b495d":"code","f116f189":"code","a21b9fa9":"code","d487f081":"code","25de9d65":"code","232ec5ca":"code","3f770b75":"code","72088d07":"code","3c9ce95e":"code","a4c4c752":"code","c6286b16":"markdown"},"source":{"69862e09":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","2ef05fb0":"import pandas as pd\nd = {'tax' : pd.Series([9.00,9.00,9.00,9.00,8.00,10.00,8.00,8.00,8.00,7.00,8.00,\n                        8.00,7.00,7.00,7.00,7.00,7.00,7.00,7.00,7.00,7.00,8.00,9.00,\n                        9.00,9.00,9.00,8.00,8.00,8.00,9.00,7.00,7.00,8.00,8.00,8.00,\n                        8.00,5.00,5.00,5.00,7.00,7.00,7.00,7.00,7.00,6.00,9.00,7.00,7.00]), \n      'income' : pd.Series([3571,4092,3865,4870,4399,5342,5319,5126,4447,4512,4391,5126,4817,\n                         4207,4332,4318,4206,3718,4716,4341,4593,4983,4897,4258,4574,3721,\n                         3448,3846,4188,3601,3640,3333,3063,3357,3528,3802,4045,3897,3635,\n                         4345,4449,3656,4300,3745,5215,4476,4296,5002]),\n      'Highways':pd.Series([1976,1250,1586,2351,431,1333,11868,2138,8577,8507,5939,14186,6930,6580,\n                    8159,10340,8508,4725,5915,6010,7834,602,2449,4686,2619,4746,5399,9061,5975\n                    ,4650,6905,6594,6524,4121,3495,7834,17782,6385,3274,3905,4639,3985,3635,\n                    2611,2302,3942,4083,9794]),\n     'driver':pd.Series([0.5250,0.5720,0.5800,0.5290,0.5440,0.5710,0.4510,0.5530,0.5290,0.5520,\n                   0.5300,0.5250,0.5740,0.5450,0.6080,0.5860,0.5720,0.5400,0.7240,0.6770,\n                   0.6630,0.6020,0.5110,0.5170,0.5510,0.5440,0.5480,0.5790,0.5630,0.4930,\n                   0.5180,0.5130,0.5780,0.5470,0.4870,0.6290,0.5660,0.5860,0.6630,0.6720,\n                   0.6260,0.5630,0.6030,0.5080,0.6720,0.5710,0.6230,0.5930]),\n    'Consumption':pd.Series([541,524,561,414,410,457,344,467,464,498,580,471,525,508,566,635,603,714,\n                  865,640,649,540,464,547,460,566,577,631,574,534,571,554,577,628,487,644,\n                  640,704,648,968,587,699,632,591,782,510,610,524])}","b2e9a45a":"df = pd.DataFrame(d) ","cf8db767":"df.head()","6ceec249":"df.info()","b2c9cbc1":"df.describe().T['std']","5ee1da0b":"df.isnull().sum()\n## There is no missing value","2cdb004d":"df.corr()","7ecc144f":"df.corr()['Consumption']\n## There is a negative correlation between Petrol Consumption and Petrol Tax","3952a5ff":"import seaborn as sns\nsns.pairplot(df,kind=\"reg\")","b8af0a1b":"sns.jointplot(x=\"Consumption\",y=\"income\",data=df,kind=\"reg\")","304c0fc2":"sns.jointplot(x=\"Consumption\",y=\"tax\",data=df,kind=\"reg\")","81c8f386":"## Linear Regression alternative 1\nimport statsmodels.api as sm\nX=df[[\"tax\"]]\nX[0:5]\nX=sm.add_constant(X)\nX[0:5]\ny=df[\"Consumption\"]\nlm=sm.OLS(y,X)\nmodel=lm.fit()\nmodel.summary()","e05dc11b":"## Linear regression alternative 2\nimport statsmodels.formula.api as smf\nlm=smf.ols(\"Consumption ~ tax\",df)\nmodel=lm.fit()\nmodel.summary()","e62c453f":"model.params","8ff44958":"print(model.summary().tables[1])","ca3b495d":"## Confidence Interval for data's parameters\nmodel.conf_int()","f116f189":"## Model's f p-value\nmodel.f_pvalue","a21b9fa9":"print(\"f_pvalue: \",\"%.4f\"%model.f_pvalue)","d487f081":"print(\"fvalue: \",\"%.2f\"%model.fvalue)","25de9d65":"## T value for intercept\nprint(\"tvalue: \",\"%.2f\"%model.tvalues[0:1])","232ec5ca":"## T value for first paramater Petrol Tax\nprint(\"tvalue: \",\"%.2f\"%model.tvalues[1:2])","3f770b75":"## R squared score - representing score \nmodel.rsquared_adj","72088d07":"for i in range(10):\n    est=(984.6084+(-53.4869*i))\n    print(\"{}\".format(i) +\". estimation: \"+str(est))","3c9ce95e":"## Linear Regression Model\nprint(\"Consumption of petrol = \"+str(\"%.2f\"%model.params[0])+ \" + Petrol Tax \"+ \"* \"+ str(\"%.2f\"%model.params[1]))\n","a4c4c752":"## Addition to all of these, you can see the details in the plot attached below. \n## There is a negative regression between Consumption of petrol and Petrol Tax...\n\n\ng = sns.regplot(df[\"Consumption\"], df[\"tax\"], ci=None, scatter_kws={'color':'r', 's':9})\ng.set_title(\"Model Equation: Consumption of petrol = 984.61 + Petrol Tax*-53.49\")\ng.set_ylabel(\"Petrol Tax\")\ng.set_xlabel(\"Consumption of petrol\")","c6286b16":"I got this dataset from https:\/\/people.sc.fsu.edu\/~jburkardt\/datasets\/regression\/x15.txt and \n* **Variables means:**\n* tax-> Petrol tax\n* income-> Average income\n* Highways-> Paved Highways\n* driver-> Proportion of population with driver's licenses\n* Consumption-> Consumption of petrol (millions of gallons)\n"}}