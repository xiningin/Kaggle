{"cell_type":{"a40b93b7":"code","970ee213":"code","01b5be3b":"code","658cea75":"code","294025b3":"code","21574b25":"code","b99e89ac":"code","11f80fa4":"code","8c90ba29":"code","1f561329":"code","e6a1f92f":"code","6610dc67":"code","931beed4":"code","a2d8806b":"code","a84c7ccc":"code","a75d1d87":"code","74cb4c5e":"code","b76a6dae":"code","e8d106e0":"markdown","69460a62":"markdown","2e5220be":"markdown","f2ca26e5":"markdown","4c0b996b":"markdown","830da8a5":"markdown","d8279ae5":"markdown","49c530f8":"markdown","62ce2f8c":"markdown","6fa07812":"markdown","c42fbe42":"markdown","a59f1b19":"markdown"},"source":{"a40b93b7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","970ee213":"!pip install openpyxl","01b5be3b":"df = pd.read_excel('\/kaggle\/input\/cusersmarildownloadsremotexlsx\/remote.xlsx')\ndf.head()","658cea75":"df.tail()","294025b3":"df.shape","21574b25":"df.describe()","b99e89ac":"df.isnull().sum()","11f80fa4":"#By Age\n\ndf2 = pd.DataFrame( {     \n\"Select characteristics\" : [\"18 - 24\", \"25 - 39\", \"40 - 54\", \"55 - 64\", \"65 and above\"] ,           \n\"Yes Because of the coronavirus pandemic\" : [\"5434912.0\", \"22187919.0\", \"19298418.0\", \"10370888.0\", \"5543969.0\"] ,\n\"Yes but Not because of the coronavirus pandemic\" : [\"1085290.0\", \"3037748.0\", \"3962771.0\", \"2232608.0\", \"1882761.0\"],\n\"No\": [\"14564928.0\",\"41500138.0\", \"39387033.0\", \"29653416.0\", \"47119264.0\"]} ) \ndf2","8c90ba29":"fig = px.bar(df2, \n             x='Select characteristics', y='Yes Because of the coronavirus pandemic',color_discrete_sequence=['#2B3A67'],\n             title='Teleworking during the Pandemic by Age', text='Select characteristics')\nfig.show()","1f561329":"#https:\/\/www.bitdegree.org\/learn\/pandas-groupby\n\ndf1 = pd.DataFrame( {     \n\"Select characteristics\" : [\"Male\", \"Female\"] ,           \n\"Yes Because of the coronavirus pandemic\" : [\"31002228.0\", \"31833878.0\"] ,\n\"Yes but Not because of the coronavirus pandemic\" : [\"6297465.0\", \"5903712.0\"],\n\"No\": [\"82353834.0\",\"89870944.0\"]} ) \ndf1","e6a1f92f":"fig = px.pie(df1,\n             values=\"Yes Because of the coronavirus pandemic\",\n             names=\"Select characteristics\",\n             template=\"seaborn\")\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"percent+label\", title=\"Teleworking during Pandemic\")\nfig.show()","6610dc67":"df1.groupby(['Select characteristics']).sum()","931beed4":"df1.groupby('Yes Because of the coronavirus pandemic').count()","a2d8806b":"df1.groupby('Select characteristics')['Yes Because of the coronavirus pandemic'].sum().to_frame().reset_index().sort_values(by='Yes Because of the coronavirus pandemic')","a84c7ccc":"#I had to use df instead of df1 because df1 has no numeric data to plot\n\nimport matplotlib.pyplot as plt\n\nplt.clf() #only numeric data\ndf.groupby('Select characteristics').sum()[:10].plot(kind='bar')\nplt.show();","a75d1d87":"df1.groupby('Select characteristics')['Yes Because of the coronavirus pandemic'].apply(lambda group_series: group_series.tolist()).reset_index()","74cb4c5e":"#df1 has No numeric types to aggregate\n\ndf.groupby(['Select characteristics']).mean()","b76a6dae":"#TypeError: not all arguments converted during string formatting if we use df1\n\ndef count_even_numbers(series):\n  return len([elem for elem in series if elem % 2 == 0 ])\ndf.groupby('Select characteristics')['Yes Because of the coronavirus pandemic'].apply(count_even_numbers).reset_index(name='num_even_numbers')","e8d106e0":"#Find the number of even numbers in your groups. However, before you can complete this task with the Python group by function, you need to define the method for it to work:","69460a62":"#That Dataframe is Not very easy to work and to be cleaned for a beginner like me. That's all for Now.","2e5220be":"#Display values of every group according to Yes Because of the coronavirus pandemic :","f2ca26e5":"#Use this Python group by function to count how many (Select characteristics) are from (Yes Because of the coronavirus pandemic):","4c0b996b":"#Use the Pandas groupby() to arrange records in alphabetical order, group similar records and count the sums of (Yes Because of the Coronavirus), (Yes but Not because of the coronavirus pandemic) and (No):","830da8a5":"#Use the collections you create with Pandas groupby and count their average value. It keeps the individual values unchanged.","d8279ae5":"![](https:\/\/thebizzellgroup.com\/wp-content\/uploads\/2020\/05\/Bizzell-Telework-Blog-Infographic-Final.jpg)thebizellgroup.com","49c530f8":"#Add the values of identical records and present them in ascending order:","62ce2f8c":"![](https:\/\/staticblog.virtualvocations.com\/2020\/09\/south-park-wfh.jpg)virtualvocations.com","6fa07812":"#Codes by Bitdegree https:\/\/www.bitdegree.org\/learn\/pandas-groupby\n\n#Create a DataFrame with some information about Age Group.","c42fbe42":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 20px; background: #FF7F50;\"><i><b style=\"color:#001f3f;\">Teleworking during the Pandemic<\/b><\/i><\/h1><\/center>\n\n\"The year 2020 has brought unprecedented changes to the global economy and the world of work.\nOn the 11th of March, the World Health Organization (WHO) characterized the novel coronavirus\noutbreak as a pandemic, and urged governments around the world to take matters seriously and\nprepare for the first wave of the public health emergency with several drastic measures, one of\nwhich was the nationwide lockdowns in many countries. As the lockdowns or stay-at-home measures entered into force, a large proportion of the workforce was instructed to stay home and continue to work remotely  if their functions make it possible. Organizations that were previously familiar with teleworking, as well as organizations that haven\u2019t experimented with teleworking before, were sending their employees home, creating the conditions for the most extensive mass  teleworking experiment in history.\"\n\nhttps:\/\/www.ilo.org\/wcmsp5\/groups\/public\/---ed_protect\/---protrav\/---travail\/documents\/instructionalmaterial\/wcms_751232.pdf","a59f1b19":"#Create a DataFrame with some information about Gender."}}