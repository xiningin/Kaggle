{"cell_type":{"0300502e":"code","12466de7":"code","a789d4cf":"code","cee5514f":"code","13e21756":"code","37213ad2":"code","f83317fc":"code","9c4b61d6":"code","a966a900":"code","3e7be6ec":"code","cb5c4967":"code","bc641000":"code","75bcfc08":"code","030d2b48":"code","8dd4df89":"markdown","2c1fc74e":"markdown","0e989718":"markdown","c496c269":"markdown"},"source":{"0300502e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","12466de7":"import tensorflow\nprint(tensorflow.__version__)\nfrom tensorflow import keras","a789d4cf":"data_train = pd.read_csv(\"..\/input\/train.csv\")\ndata_test = pd.read_csv(\"..\/input\/test.csv\")","cee5514f":"train_labels = data_train.label.values\ndata_train = data_train.drop(\"label\",axis =1)","13e21756":"train_images = data_train.values\ntest_images = data_test.values\nprint(train_images.shape,'\\n',test_images.shape,'\\n',train_labels.shape)","37213ad2":"plt.figure(figsize = (10,10))\nfor i in range(25):\n    plt.subplot(5,5,1+i)\n    plt.xticks([])\n    plt.imshow(train_images[i].reshape(28,28))\n    plt.xlabel(prediction[i])\nplt.show()","f83317fc":"model = keras.Sequential([\n    keras.layers.Flatten(input_shape = (28*28,)),\n    keras.layers.Dense(512,activation = 'relu'),\n    keras.layers.Dense(10,activation = 'softmax')\n])","9c4b61d6":"model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics= ['accuracy'])","a966a900":"model.fit(train_images,train_labels,epochs = 10)","3e7be6ec":"pred = model.predict(test_images)\nprediction = np.argmax(pred,axis=1)\nprint(pred.shape,'\\n',prediction.shape)","cb5c4967":"import matplotlib.pyplot as plt","bc641000":"plt.figure(figsize=(10,10))\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.imshow(test_images[i].reshape(28,28))\n    plt.xlabel(\"pred:{}  \".format(prediction[i]))\n    plt.xticks([])","75bcfc08":"!cd ..\/input\n!ls -a","030d2b48":"data = {\"ImageId\" : np.arange(1,prediction.shape[0]+1), \"Label\" : prediction}\nsubmission = pd.DataFrame(data)","8dd4df89":"**Reading the data using pandas library**","2c1fc74e":"**Model**\n> Making the model using keras having a Flatten layer (Flatens the array data in the shape (784,) and two densely connected layes the first one with relu activation and the second one with softmax.\n> The output is a probability matrix with shape (n,10)","0e989718":"**Cleaning data**\n1. Getting the label values as a numpy array from train.csv\n2. Removing the label column from the dataframe\n3. Extracting the pixels from the dataframe in a numpy nd array type\n4. Printing the shapes","c496c269":"**Importing the tensorflow and keras library to build a classification model.**"}}