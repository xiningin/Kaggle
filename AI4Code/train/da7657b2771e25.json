{"cell_type":{"099ad7fe":"code","9152d516":"code","b15e398f":"code","4a724c78":"code","4026b225":"code","93d554f0":"code","0554cea7":"code","553be321":"code","3771b61e":"markdown"},"source":{"099ad7fe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9152d516":"df=pd.read_csv('..\/input\/bank-note-authentication-uci-data\/BankNote_Authentication.csv')\ndf.head()","b15e398f":"df.describe(include='all')","4a724c78":"df['class'].value_counts()","4026b225":"from sklearn.model_selection import train_test_split\nX=df.iloc[:,:-1].values\ny=df['class'].values\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.1,random_state=42)\nprint('X_train Shape: {}'.format(X_train.shape))\nprint('X_test Shape: {}'.format(X_test.shape))","93d554f0":"## Logistic Regression\nfrom sklearn.linear_model import LogisticRegression\nreglog=LogisticRegression()\nreglog.fit(X_train,y_train)\nprint(reglog.score(X_test,y_test))\ny_pred=reglog.predict(X_test)\n","0554cea7":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,y_pred))","553be321":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\ncm=confusion_matrix(y_test,y_pred)\nax=sns.heatmap(cm,annot=True)\nax.set_xlabel('Predicted')\nax.set_ylabel('True');","3771b61e":"### Since there are only 1372 entries we are keeping 90% dataset for training and using only 10% for testing"}}