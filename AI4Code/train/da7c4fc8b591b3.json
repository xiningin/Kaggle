{"cell_type":{"1b0a8b21":"code","1016ac42":"code","69aa435b":"code","2c55b98a":"code","fced69d7":"code","c6c5026b":"code","502469f1":"code","13219b1d":"code","f5bfe15a":"code","f5cef4c0":"code","8985643e":"code","4f9276c4":"code","845aef58":"markdown","36cca9eb":"markdown","63c1befe":"markdown","0b02e582":"markdown","4520df15":"markdown","0ba6c127":"markdown","88898324":"markdown"},"source":{"1b0a8b21":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1016ac42":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","69aa435b":"dataset = pd.read_csv('..\/input\/Mall_Customers.csv')","2c55b98a":"dataset.head()","fced69d7":"x = dataset.iloc[:,[3,4]].values","c6c5026b":"import scipy.cluster.hierarchy as sch","502469f1":"dendrogram = sch.dendrogram(sch.linkage(x,method = 'ward'))\nplt.title(\"Dendrogram\")\nplt.xlabel('Customers')\nplt.ylabel('Eucledian Distance')","13219b1d":"from sklearn.cluster import AgglomerativeClustering","f5bfe15a":"cluster = AgglomerativeClustering(n_clusters=5,affinity='euclidean',linkage='ward')","f5cef4c0":"y_pred = cluster.fit_predict(x)","8985643e":"y_pred","4f9276c4":"plt.scatter(x[y_pred == 0, 0], x[y_pred == 0, 1], s = 100, c = 'red', label = 'Careful')\nplt.scatter(x[y_pred == 1, 0], x[y_pred == 1, 1], s = 100, c = 'blue', label = 'Standard')\nplt.scatter(x[y_pred == 2, 0], x[y_pred == 2, 1], s = 100, c = 'green', label = 'Target')\nplt.scatter(x[y_pred == 3, 0], x[y_pred == 3, 1], s = 100, c = 'cyan', label = 'Careless')\nplt.scatter(x[y_pred == 4, 0], x[y_pred == 4, 1], s = 100, c = 'magenta', label = 'Sensible')\nplt.title('Clusters of customers')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()","845aef58":"### Dendrogram","36cca9eb":"**ward is a method we chosen to build dendrogram,it will minimize within cluster variance,in KMEANS we will minimize within cluster sum of square** ","63c1befe":"## Clusters","0b02e582":"### Checking the head of the dataset","4520df15":"## EDA","0ba6c127":"**If we draw a threshold line in the dendrogram then we will get 5 clusters**","88898324":"## Hierarchial Clustering"}}