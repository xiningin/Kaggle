{"cell_type":{"03fe4be7":"code","c8b7dac1":"code","e78f9fb9":"code","ff04e6b0":"code","e92c16bd":"code","217194f8":"code","749ee5e5":"code","f0e48751":"code","58517298":"code","121c40c8":"code","ff0e34c9":"code","0f8618d8":"code","f4ff7b43":"code","8a5cc721":"code","4febf0e0":"code","05e9d71a":"code","8305614d":"code","11bd5b11":"code","dc957be9":"code","a6d363b2":"code","7606bdc0":"code","dad117d8":"code","521b86d4":"code","97055296":"code","7f5ec55d":"code","1316a2fd":"code","7042d5b8":"code","b4d09c64":"code","c76d9cf9":"code","df289628":"code","bea6931e":"code","6392a660":"code","8e436cdc":"code","6ff16c3c":"code","0b474731":"code","5372d65b":"code","2e322249":"code","88f66ad0":"code","3c1857b6":"markdown","a5b39a13":"markdown","ad8105a5":"markdown","c57f03dd":"markdown","d1671910":"markdown","c03859d8":"markdown","2dd89452":"markdown","671270bc":"markdown","95cb2505":"markdown","591c5ae0":"markdown","353d2e3d":"markdown","562b4048":"markdown","03ec552e":"markdown","83181d51":"markdown","634d21ea":"markdown","b8b0ca45":"markdown"},"source":{"03fe4be7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport geopandas as gpd\n\n#hide warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c8b7dac1":"#load dataset\ndf_enroll = pd.read_csv('\/kaggle\/input\/indian-school-education-statistics\/gross-enrollment-ratio-2013-2016.csv')\ndf_enroll.sort_values(by='Year',inplace=True)\n","e78f9fb9":"#rename States\ndf_enroll['State_UT'].replace({\n    'MADHYA PRADESH':'Madhya Pradesh',\n    'Pondicherry':'Puducherry',\n    'Uttaranchal':'Uttar Pradesh'\n},inplace=True)","ff04e6b0":"#filter data\nfilt1 = (df_enroll['State_UT'] =='All India')","e92c16bd":"df_gre_total = df_enroll.loc[filt1]\nboys_col = ['Primary_Boys','Upper_Primary_Boys','Secondary_Boys','Higher_Secondary_Boys']\ngirls_col = ['Primary_Girls','Upper_Primary_Girls','Secondary_Girls','Higher_Secondary_Girls']","217194f8":"#convert object to float\ndf_gre_total.loc[:,'Higher_Secondary_Boys']=df_gre_total.loc[:,'Higher_Secondary_Boys'].astype('float')\ndf_gre_total.loc[:,'Higher_Secondary_Girls']=df_gre_total.loc[:,'Higher_Secondary_Girls'].astype('float')","749ee5e5":"sns.set(font_scale = 1.11)\nsns.set_style(\"white\")\nax = df_gre_total[boys_col].plot.bar(figsize=(15,6))\nsns.despine(left=True, bottom=True)\n\n#label and title\nax.set_xticklabels(np.arange(3))\nax.set_title('Gross Enrollment Ratio of Boys in India',size=18)\nax.set_xticklabels(list(df_gre_total['Year']))\nfor tick in ax.get_xticklabels():\n    tick.set_rotation(-0)\n\n#annotations\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.2f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\n#adjust legend\nax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.05),ncol=4)","f0e48751":"sns.set(font_scale = 1.11)\nsns.set_style(\"white\")\nax = df_gre_total[girls_col].plot.bar(figsize=(15,6))\nsns.despine(left=True, bottom=True)\n#label and title\nax.set_xticklabels(np.arange(3))\nax.set_title('Gross Enrollment Ratio of Girls in India',size=18)\nax.set_xticklabels(list(df_gre_total['Year']))\nfor tick in ax.get_xticklabels():\n    tick.set_rotation(-0)\n\n#annotations\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.2f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\n#adjust legend\nax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.05),ncol=4)","58517298":"#filter latest data\nfilt_year = df_enroll['Year'] =='2015-16'\ndf_enroll_latest = df_enroll[filt_year]\ndf_enroll_latest.sort_values(by='Higher_Secondary_Total',ascending=False,inplace=True)\ndf_enroll_latest['Higher_Secondary_Total'] = df_enroll_latest['Higher_Secondary_Total'].astype('float')","121c40c8":"fig,ax = plt.subplots(figsize=(15,6))\nsns.set_style(\"white\")\nax = sns.barplot(x=\"State_UT\", y=\"Primary_Total\",palette='Purples_r',\n                 data=df_enroll_latest.sort_values(by='Primary_Total',ascending=False).head(12))\nsns.despine(left=True, bottom=True)\n\n#adjust labels\nfor item in ax.get_xticklabels():\n    item.set_rotation(90)\n    item.set_fontsize(12)\nax.set_xlabel('')\nax.set_ylabel('Higher Secondary GRE')\n\n#annotations\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.2f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\n\n#add title\nfig.suptitle('Sates with highest GER in Primary', fontsize=18)","ff0e34c9":"fig,ax = plt.subplots(figsize=(15,6))\nsns.set_style(\"white\")\nax = sns.barplot(x=\"State_UT\", y=\"Higher_Secondary_Total\",palette='Blues_r',data=df_enroll_latest.head(12))\nsns.despine(left=True, bottom=True)\n\n#adjust labels\nfor item in ax.get_xticklabels():\n    item.set_rotation(90)\n    item.set_fontsize(12)\nax.set_xlabel('')\nax.set_ylabel('Higher Secondary GRE')\n\n#annotations\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.2f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\n\n#add title\nfig.suptitle('Sates with highest GER in Higher Secondary', fontsize=18)","0f8618d8":"fig,ax = plt.subplots(figsize=(15,6))\nsns.set_style(\"white\")\nax = sns.barplot(x=\"State_UT\", y=\"Primary_Total\",palette='Purples',\n                 data=df_enroll_latest.sort_values(by='Primary_Total',ascending=False)[::-1].head(12))\nsns.despine(left=True, bottom=True)\n\n#adjust labels\nfor item in ax.get_xticklabels():\n    item.set_rotation(90)\n    item.set_fontsize(12)\nax.set_xlabel('')\nax.set_ylabel('Higher Secondary GRE')\n\n#annotations\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.2f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\n\n#add title\nfig.suptitle('Sates with lowest GER in Primary', fontsize=18)","f4ff7b43":"fig,ax = plt.subplots(figsize=(15,6))\nsns.set_style(\"white\")\nax = sns.barplot(x=\"State_UT\", y=\"Higher_Secondary_Total\",palette='Blues',\n                 data=df_enroll_latest[::-1].head(12))\nsns.despine(left=True, bottom=True)\n#adjust labels\nfor item in ax.get_xticklabels():\n    item.set_rotation(90)\n    item.set_fontsize(12)\nax.set_xlabel('')\nax.set_ylabel('Higher Secondary GRE')\n#annotations\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.2f'), \n                   (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                   ha = 'center', va = 'center', \n                   xytext = (0, 9), \n                   textcoords = 'offset points')\n#add title\nfig.suptitle('Sates with lowest GER in Higher Secondary', fontsize=18)    ","8a5cc721":"def plot_state(state):    \n    filt_state = (df_enroll['State_UT'] == state)\n    df_gre_total = df_enroll.loc[filt_state]\n    #convert values\n    df_gre_total.loc[:,'Higher_Secondary_Boys']=df_gre_total.loc[:,'Higher_Secondary_Boys'].astype('float')\n    df_gre_total.loc[:,'Higher_Secondary_Girls']=df_gre_total.loc[:,'Higher_Secondary_Girls'].astype('float')\n    sns.set(font_scale = 1.111)\n   \n    #figures\n    sns.set_style(\"white\")\n    fig= plt.figure(figsize=(18,12))\n    \n    # Divide the figure into a 2x1 grid, and give me the first section\n    ax1 = fig.add_subplot(211)\n    # Divide the figure into a 2x1 grid, and give me the second section\n    ax2 = fig.add_subplot(212)\n    df_gre_total[boys_col].plot.bar(ax=ax1)\n    df_gre_total[girls_col].plot.bar(ax=ax2)\n    sns.despine(left=True, bottom=True)\n    \n    #label and title\n    \n    #ax1\n    ax1.set_xticklabels(np.arange(3))\n    ax1.set_title('GRE of Boys',size=15)\n    ax1.set_xticklabels(list(df_gre_total['Year']))\n    for tick in ax1.get_xticklabels():\n        tick.set_rotation(-0)\n    fig.suptitle(f'{state}', fontsize=18)\n    \n    #ax2\n    ax2.set_xticklabels(np.arange(3))\n    ax2.set_title('GRE of Girls',size=15)\n    ax2.set_xticklabels(list(df_gre_total['Year']))\n    for tick in ax2.get_xticklabels():\n        tick.set_rotation(-0)\n\n\n    \n    #annotations\n    for p in ax1.patches:\n        ax1.annotate(format(p.get_height(), '.2f'), \n                       (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                       ha = 'center', va = 'center', \n                       xytext = (0, 9), \n                       textcoords = 'offset points')\n    \n    #annotations\n    for p in ax2.patches:\n        ax2.annotate(format(p.get_height(), '.2f'), \n                       (p.get_x() + p.get_width() \/ 2., p.get_height()), \n                       ha = 'center', va = 'center', \n                       xytext = (0, 9), \n                       textcoords = 'offset points')\n        \n        \n    #adjust legend\n    ax1.get_legend().remove()\n    #custom legend\n    import matplotlib.patches as mpatches\n    \n    primary_patch = mpatches.Patch(color='#29629e', label='Primary')\n    upper_primary_patch = mpatches.Patch(color='#ff6d05', label='Upper Primary')\n    secondary_patch = mpatches.Patch(color='#226908', label='Secondary')\n    higher_secondary_patch = mpatches.Patch(color='#8a1111', label='Higher Secondary')    \n    ax2.legend(handles=[primary_patch, upper_primary_patch,secondary_patch,higher_secondary_patch],\n               loc='upper center', bbox_to_anchor=(0.5, -0.05),ncol=4)\n    \n    ","4febf0e0":"plot_state('Maharashtra')","05e9d71a":"plot_state('Delhi')","8305614d":"plot_state('Assam')","11bd5b11":"#You can plot any state you wish!!","dc957be9":"#load the shp file\nstates = gpd.read_file('\/kaggle\/input\/india-states\/Igismap\/Indian_States.shp')","a6d363b2":"#adjust the names of the SHP file and our dataset so that they match\nstates['st_nm'].replace({\n    'Andaman & Nicobar Island':'Andaman & Nicobar Islands',\n    'Arunanchal Pradesh':'Arunachal Pradesh',\n    'NCT of Delhi':'Delhi',\n    'Jammu & Kashmir':'Jammu And Kashmir',\n    'Dadara & Nagar Havelli':'Dadra & Nagar Haveli'    \n},inplace=True)\n\n#change both column to the same name\ndf_enroll.rename(columns={\n    'State_UT':'state'\n},inplace=True)\n\nstates.rename(columns={\n    'st_nm':'state'\n},inplace=True)","7606bdc0":"#filter the latest year data of our data-set and merge them together\nlatest_filt = df_enroll['Year'] =='2015-16'\nstates_op = states.merge(df_enroll.loc[latest_filt][1:].sort_values(by='state'),on='state')","dad117d8":"#convert the columns to 'float'\ncols=['Primary_Boys','Primary_Girls','Primary_Total','Upper_Primary_Boys',\n      'Upper_Primary_Girls','Upper_Primary_Total','Secondary_Boys','Secondary_Girls',\n      'Secondary_Total','Higher_Secondary_Boys','Higher_Secondary_Girls','Higher_Secondary_Total']\nstates_op[cols] = states_op[cols].astype('float')","521b86d4":"fig,ax = plt.subplots(2,2,figsize=(18,18))\nplt.style.use('seaborn')\nstates_op.plot(column='Primary_Boys',cmap='OrRd',figsize=(9,9),\n                    legend=False,ax=ax[0,0])\nax[0,0].set_title('Primary',fontsize=15)\nstates_op.plot(column='Upper_Primary_Boys',cmap='OrRd',figsize=(9,9),\n                    legend=False,ax=ax[0,1])\nax[0,1].set_title('Upper Primary',fontsize=15)\nstates_op.plot(column='Secondary_Boys',cmap='OrRd',figsize=(9,9),\n                    legend=False,ax=ax[1,0])\nax[1,0].set_title('Secondary',fontsize=15)\nstates_op.plot(column='Higher_Secondary_Boys',cmap='OrRd',figsize=(9,9),\n                    legend=True,ax=ax[1,1])\nax[1,1].set_title('Higher Secondary',fontsize=15)\n\n#add background color\nax[0,0].set_facecolor('#e0e0e0')\nax[0,1].set_facecolor('#e0e0e0')\nax[1,0].set_facecolor('#e0e0e0')\nax[1,1].set_facecolor('#e0e0e0')\n\n#hide axes and ticks\nfor i in np.arange(2):\n    for j in np.arange(2):\n        ax[i,j].spines['top'].set_visible(False)\n        ax[i,j].spines['right'].set_visible(False)\n        ax[i,j].spines['left'].set_visible(False)\n        ax[i,j].spines['bottom'].set_visible(False)\n        for item in ax[i,j].get_xticklabels():\n            item.set_visible(False)\n        for item in ax[i,j].get_yticklabels():\n            item.set_visible(False) \n        ax[i,j].set_xticks([]) \n        ax[i,j].set_yticks([]) \nfig.suptitle('Distribution of GER of boys across India', fontsize=18)\n","97055296":"fig,ax = plt.subplots(2,2,figsize=(18,18))\nplt.style.use('seaborn')\nstates_op.plot(column='Primary_Girls',cmap='RdPu',figsize=(9,9),\n                    legend=False,ax=ax[0,0])\nax[0,0].set_title('Primary',fontsize=15)\nstates_op.plot(column='Upper_Primary_Girls',cmap='RdPu',figsize=(9,9),\n                    legend=False,ax=ax[0,1])\nax[0,1].set_title('Upper Primary',fontsize=15)\nstates_op.plot(column='Secondary_Girls',cmap='RdPu',figsize=(9,9),\n                    legend=False,ax=ax[1,0])\nax[1,0].set_title('Secondary',fontsize=15)\nstates_op.plot(column='Higher_Secondary_Girls',cmap='RdPu',figsize=(9,9),\n                    legend=True,ax=ax[1,1])\nax[1,1].set_title('Higher Secondary',fontsize=15)\n\n#add background color\nax[0,0].set_facecolor('#e0e0e0')\nax[0,1].set_facecolor('#e0e0e0')\nax[1,0].set_facecolor('#e0e0e0')\nax[1,1].set_facecolor('#e0e0e0')\n\n#hide axes and ticks\nfor i in np.arange(2):\n    for j in np.arange(2):\n        ax[i,j].spines['top'].set_visible(False)\n        ax[i,j].spines['right'].set_visible(False)\n        ax[i,j].spines['left'].set_visible(False)\n        ax[i,j].spines['bottom'].set_visible(False)\n        for item in ax[i,j].get_xticklabels():\n            item.set_visible(False)\n        for item in ax[i,j].get_yticklabels():\n            item.set_visible(False) \n        ax[i,j].set_xticks([]) \n        ax[i,j].set_yticks([]) \nfig.suptitle('Distribution of GER of girls across India', fontsize=18)","7f5ec55d":"#extract the GDP Data from the abovr link\n#Link ----->\"https:\/\/en.wikipedia.org\/wiki\/List_of_Indian_states_and_union_territories_by_GDP\"\n\ndf_gdp = pd.read_html('https:\/\/en.wikipedia.org\/wiki\/List_of_Indian_states_and_union_territories_by_GDP_per_capita')[2]","1316a2fd":"#cleaning up the data for processing\ndf_gdp.rename(columns={\n    'State\/Union territory':'state',\n    'NSDP Per Capita (Nominal)(2018\u201319)[1][2]':'GDP_percapita'\n},inplace=True)\ndf_gdp.drop(['Rank','NSDP Per Capita (Nominal)(2019\u201320)[1]',\n         'NSDP Per Capita (Nominal)(2018\u201319 INT$)','NSDP Per Capita (Nominal)(2019\u201320 INT$)','NSDP Per capita (PPP)1(2018\u201319 INT$)[3]'], axis=1,inplace=True)\n\n#further cleaning\ndef clean(num):\n    a = num.strip('\u20b9 ')[0:]\n    b = a.replace(',','')\n    return b\ndf_gdp['GDP_percapita'] = df_gdp['GDP_percapita'].apply(clean)\ndf_gdp['GDP_percapita'].replace('191736[4]','191736',inplace=True)\n\nfilt_state= df_gdp['state'] =='India2'\ndf_gdp =df_gdp.loc[~filt_state]\n","7042d5b8":"#still cleaning\nstates_op['state'].replace({\n    'Andaman & Nicobar Islands':'Andaman and Nicobar Islands',\n    'Jammu And Kashmir':'Jammu and Kashmir',\n    'Maharashtra':'Maharastra'\n    \n},inplace=True)","b4d09c64":"#combine and create a new Data Frame\nstates_gpd = states_op.merge(df_gdp,on='state')\nstates_gpd = states_gpd.drop(['geometry','Year'],axis=1)\nstates_gpd.sort_values(by='state',inplace=True)","c76d9cf9":"states_gpd['GDP_percapita'] = states_gpd['GDP_percapita'].astype('float')","df289628":"#extract the GDP Data from the abovr link\n#Link ----->\"https:\/\/en.wikipedia.org\/wiki\/List_of_Indian_states_and_union_territories_by_GDP_per_capita\"\n\ndf_gdp2 = pd.read_html('https:\/\/en.wikipedia.org\/wiki\/List_of_Indian_states_and_union_territories_by_GDP')[1]","bea6931e":"#cleaning....\ndf_gdp2.rename(columns={\n    'Nominal GDP(trillion INR, lakh crore \u20b9)':'nominal_GDP',\n    'State\/UT':'state'\n},inplace=True)\ndf_gdp2.drop(['Data year[3][4][5][6]','Rank','Comparable country[7]'],axis=1,inplace=True)\n\n#still cleaning.......\ndef clean2(num):\n    a = num.strip(' lakh')[1:6]\n    b= float(a)\n    bill = 10**12\n    return b*bill\ndf_gdp2['nominal_GDP'] = df_gdp2['nominal_GDP'].apply(clean2)\n\n#still cleaning...............\ndf_gdp2['state'].replace({\n    'Maharashtra':'Maharastra',\n    'Jammu & Kashmir':'Jammu and Kashmir',\n    'NCT of Delhi':'Delhi',\n    'Arunanchal Pradesh':'Arunachal Pradesh',\n    'Andaman & Nicobar Island':'Andaman and Nicobar Islands'\n},inplace=True)","6392a660":"#combine\nstates_gpd = states_gpd.merge(df_gdp2,on='state')\nstates_gpd.sort_values(by='state',inplace=True)","8e436cdc":"sns.set_style('darkgrid')\n# Divide the figure into a 2x1 grid, and give me the first section\nfig,ax = plt.subplots(2,2,figsize=(18,12))\nax1 = sns.regplot(\"Primary_Total\", \"GDP_percapita\", data=states_gpd,color='#b80000',\n                     ax=ax[0,0])\nax2 = sns.regplot(\"Upper_Primary_Total\", \"GDP_percapita\", data=states_gpd,color='#b80000',\n                    ax=ax[0,1])\nax3 = sns.regplot(\"Secondary_Total\", \"GDP_percapita\", data=states_gpd,color='#b80000',\n                     ax=ax[1,0])\nax4 = sns.regplot(\"Higher_Secondary_Total\", \"GDP_percapita\", data=states_gpd,color='#b80000',\n                     ax=ax[1,1])","6ff16c3c":"sns.set_style('darkgrid')\n# Divide the figure into a 2x1 grid, and give me the first section\nfig,ax = plt.subplots(2,2,figsize=(18,12))\nax1 = sns.regplot(\"Primary_Total\", \"nominal_GDP\", data=states_gpd,color='#008216',\n                     ax=ax[0,0])\nax2 = sns.regplot(\"Upper_Primary_Total\", \"nominal_GDP\", data=states_gpd,color='#008216',\n                    ax=ax[0,1])\nax3 = sns.regplot(\"Secondary_Total\", \"nominal_GDP\", data=states_gpd,color='#008216',\n                     ax=ax[1,0])\nax4 = sns.regplot(\"Higher_Secondary_Total\", \"nominal_GDP\", data=states_gpd,color='#008216',\n                     ax=ax[1,1])","0b474731":"columns = ['Primary_Total','Upper_Primary_Total','Secondary_Total','Higher_Secondary_Total','GDP_percapita','nominal_GDP']","5372d65b":"corr_matrix = states_gpd[columns].corr()","2e322249":"corr_matrix.drop(['Primary_Total','Upper_Primary_Total','Secondary_Total','Higher_Secondary_Total'],axis=1,inplace=True)\ncorr_matrix.drop(['GDP_percapita','nominal_GDP'],axis=0,inplace=True)","88f66ad0":"fig,ax = plt.subplots(figsize=(9,9))\nax = sns.heatmap(corr_matrix,annot=True,cmap=\"OrRd\",\n                 yticklabels=['Primary','Upper Primary','Secondary','Higher Secondary'],\n                 annot_kws={'size': 18})\nfor item in ax.get_yticklabels():\n    item.set_rotation(0)","3c1857b6":"<center><strong><h2>Visualizing the data in a map<\/h2><\/strong><\/center>\n<br>\n\nFor visualizing the data we will use the geo-pandas library\n<br>\n<strong>Documentation:-<\/strong> <a href=\"https:\/\/geopandas.org\/mapping.html\">GeoPandas<\/a>.\n<br>\nWe will also require the indian state boundary shape file(SHP) to plot the data.\n<br>\n<strong>Add the shp file from here:-<\/strong> <a href=\"https:\/\/www.kaggle.com\/somacodes\/india-states\/notebooks\">Indian States <\/a>.\n<br>","a5b39a13":"<center><strong><h2>GER of Boys and Girls in India (2013-2016)<\/h2><\/strong><\/center>\n<br>","ad8105a5":"<center><h1>Gross Enrollment Ratio<\/h1><\/center>\n<br>\n<br>\n<br>\nGross Enrolment Ratio (GER) or Gross Enrolment Index (GEI) is a statistical measure used in the education sector, to determine the number of students enrolled in school at several different grade levels (like elementary, middle school and high school), and use it to show the ratio of the number of students who live in that country to those who qualify for the particular grade level.\n\nThe GER can be over 100% as it includes students who may be older or younger than the official age group.\n\nFor instance, in India it improved from 25.8 to 26.3, the GER includes students who are repeating a grade, those who enrolled late and are older than their classmates, or those who have advanced quickly and are younger than their classmates. This allows the total enrolment to exceed the population that corresponds to that level of education.\n<br>\n<br>\n#### Source:- <a href=\"https:\/\/en.wikipedia.org\/wiki\/Gross_enrolment_ratio\">Wikipedia<\/a>.\n<h2>Calculation<\/h2>\n<h4>a = number of students enrolled in a given level<\/h4>\n<h4>b = population of the age group corresponds to given level of education India<\/h4>\n<br>\n<br>\n<br>\n$$GER = \\frac{a}{b}\\times 100$$\n<br>\n<br>\n<br>","c57f03dd":"<center><strong><h2>Relationship between GER and GDP<\/h2><\/strong><\/center>\n\n<br>","d1671910":"<center><h3>Regression-Plots between Nominal GDP and GER<\/h3><\/center>\n<br>","c03859d8":"<center><strong><h3>Plotting the data by gender<\/h3><\/strong><\/center>\n\n<br>","2dd89452":"### List of Indian states and union territories by GDP\n<br>\n\nThese are lists of Indian states and union territories by their nominal gross state domestic product (GSDP). GSDP is the sum of all value added by industries within each state or union territory and serves as a counterpart to the national gross domestic product (GDP)\n\nIn India, the Government accounts for around 21% of the GDP, agriculture accounts for 21%, the corporate sector accounts for 12% and the balance 48% of the GDP is sourced from small proprietorship and partnership companies, the so-called unorganized sector and households.\n<br>\n<br>\n<strong>Source:-<\/strong>\n<a href=\"https:\/\/en.wikipedia.org\/wiki\/List_of_Indian_states_and_union_territories_by_GDP\">Wikipedia<\/a>\n<br>","671270bc":"<br>\n<center><strong><h2>Correlation between GER and GDP in India<\/h2><\/strong><\/center>\n<br>\n<br>","95cb2505":"<center><strong><h3>States with highest GER (2015-2016)<\/h3><\/strong><\/center>\n<br>","591c5ae0":"<center><h3>Regression-Plots between GDP Per Capita and GER<\/h3><\/center>\n<br>","353d2e3d":"<center><strong><h3>States with lowest GER in HigherSecondary(2015-2016)<\/h3><\/strong><\/center>\n\n<Br>","562b4048":"#### WHAT\u2019S THE IMPORTANCE OF HIGHER EDUCATION ON THE ECONOMY?\n  \nHigher education is one of the key drivers of growth performance, prosperity, and competitiveness in national and global economies.Universities and other institutions not only deliver tertiary education and ongoing skills training, but also provide a bustling research environment that produces innovations with valuable commercial applications.\n\n<strong>Read more:-<\/strong> \n<a href=\"https:\/\/digitalmarketinginstitute.com\/blog\/what-is-the-importance-of-higher-education-on-the-economy\">here<\/a>\n<br>\n<br>\n<strong>Gross domestic product (GDP)<\/strong> is a monetary measure of the market value of all the final goods and services produced in a specific time period.GDP (nominal) per capita does not, however, reflect differences in the cost of living and the inflation rates of the countries; therefore using a basis of GDP per capita at purchasing power parity (PPP) is arguably more useful when comparing living standards between nations, while nominal GDP is more useful comparing national economies on the international market.<br>\n<strong>Read more:-<\/strong>\n<a href=\"https:\/\/en.wikipedia.org\/wiki\/Gross_domestic_product\">Wikipedia<\/a>","03ec552e":"<center><strong><h2>GER of Boys and Girls in different states (2013-2016)<\/h2><\/strong><\/center>\n<br>","83181d51":"<center><strong><h2>Plots of all states in detail<\/h2><\/strong><\/center>\n<br>","634d21ea":"<center><strong><h3>Observations<\/h3><\/strong><\/center>\n<ul>\n    <li>From the heatmap and the regressions plots above it is clearly seen that there is a positive correlation between Higher Education and GDP per capita.\n    <li>However the same cannot be said for the nominal GDP. As there is no positive correlation seen. ","b8b0ca45":"### List of Indian states and union territories by GDP per capita\n\n<br>\n\nThis is a list of Indian states and union territories by NSDP per capita. Net state domestic product (NSDP) is the state counterpart to a country's Net domestic product (NDP), which equals the gross domestic product (GDP) minus depreciation on a country's capital goods. The following table gives the latest available nominal NSDP per capita figures for the States and Union Territories of India at current prices in Indian rupees. No data is available for the union territories of Dadra and Nagar Haveli and Daman and Diu, Ladakh and Lakshadweep.\n<br>\n<br>\n<strong>Source:-<\/strong>\n<a href=\"https:\/\/en.wikipedia.org\/wiki\/List_of_Indian_states_and_union_territories_by_GDP_per_capita\">Wikipedia<\/a>\n<br>"}}