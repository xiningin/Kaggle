{"cell_type":{"c86feb6a":"code","c7675432":"code","7b3588f9":"code","8b3833d9":"code","6c2d658b":"code","b916b0cf":"code","353ba5f7":"code","ea83810a":"code","36b58dab":"code","eef2d257":"code","12a5f41d":"code","e5b8025b":"code","3878a079":"code","9b50c4a8":"code","ae4b1645":"code","67b0bf7b":"code","1b92217f":"markdown","540dce43":"markdown","92cbbe1e":"markdown"},"source":{"c86feb6a":"# Load the pandas package\nimport pandas as pd\n\n# Set up the connection to the BigQuery server.\nfrom google.cloud import bigquery\nPROJECT_ID = 'carbon-dominion-319317'\nclient = bigquery.Client(project=PROJECT_ID, location='US')\ndataset_ref = client.dataset('Project', project=PROJECT_ID)\ndataset = client.get_dataset(dataset_ref)","c7675432":"# Print the tables in the 'Project' data set\ntables = list(client.list_tables(dataset))\nfor table in tables:  \n    print(table.table_id)","7b3588f9":"coviddeaths_query = \"\"\"\nSELECT\n    *\nFROM\n    Project.CovidDeaths\nORDER BY\n    location,\n    date;\n\"\"\"\n\n# Set up the query\noutput = client.query(coviddeaths_query)\n\n# Make an API request  to run the query and return a pandas DataFrame\nCovidDeaths = output.to_dataframe()\n\n# Save the output of the query in the output folder\nCovidDeaths.to_csv('.\/CovidDeaths.csv')\n\n# See the resulting table made from the query\nCovidDeaths","8b3833d9":"covidvaccinations_query = \"\"\"\nSELECT\n    *\nFROM\n    Project.CovidDeaths\nORDER BY\n    location,\n    date;\n\"\"\"\n\n# Set up the query\noutput = client.query(covidvaccinations_query)\n\n# Make an API request  to run the query and return a pandas DataFrame\nCovidVaccinations = output.to_dataframe()\n\n# Save the output of the query in the output folder\nCovidVaccinations.to_csv('.\/CovidVaccinations.csv')\n\n# See the resulting table made from the query\nCovidVaccinations","6c2d658b":"query1 = \"\"\"\nSELECT\n    location,\n    date,\n    total_cases,\n    new_cases,\n    total_deaths,\n    population\nFROM\n    Project.CovidDeaths\nORDER BY\n    location,\n    date;\n\"\"\"\n# Set up the query\nquery1_output = client.query(query1)\n\n# Make an API request  to run the query and return a pandas DataFrame\nquery1_output_dataframe = query1_output.to_dataframe()\n\n# Save the output of the query in the output folder\nquery1_output_dataframe.to_csv('.\/query1_output_csv.csv')\n\n# See the resulting table made from the query\nquery1_output_dataframe","b916b0cf":"query2 = \"\"\"\n  -- Looking at total cases vs total deaths --\nSELECT\n  location,\n  date,\n  total_cases,\n  total_deaths,\n  ROUND((total_deaths \/ total_cases) * 100, 2) AS death_percentage\nFROM\n  Project.CovidDeaths\nORDER BY\n  location,\n  date;\n\"\"\"\n# Set up the query\nquery2_output = client.query(query2)\n\n# Make an API request to run the query and return a pandas DataFrame\nquery2_output_dataframe = query2_output.to_dataframe()\n\n# Save the output of the query in the output folder\nquery2_output_dataframe.to_csv('.\/query2_output_csv.csv')\n\n# See the resulting table made from the query\nquery2_output_dataframe","353ba5f7":"query3 = \"\"\"\n  -- Looking at total cases vs total deaths in Canada --\nSELECT\n  location,\n  date,\n  total_cases,\n  total_deaths,\n  ROUND((total_deaths \/ total_cases) * 100, 2) AS death_percentage\nFROM\n  Project.CovidDeaths\nWHERE\n  location = 'Canada'\nORDER BY\n  location,\n  date;\n\"\"\"\n# Set up the query\nquery3_output = client.query(query3)\n\n# Make an API request to run the query and return a pandas DataFrame\nquery3_output_dataframe = query3_output.to_dataframe()\n\n# See the resulting table made from the query\nquery3_output_dataframe","ea83810a":"query4 = \"\"\"\n  -- Looking at total cases vs population --\n  -- What percentage of the population got CV19? --\nSELECT\n  location,\n  date,\n  total_cases,\n  ROUND((total_cases\/population) * 100, 3) AS infection_percentage\nFROM\n  Project.CovidDeaths\nWHERE\n  location = 'Canada'\nORDER BY\n  location,\n  date;\n\"\"\"\n# Set up the query\nquery4_output = client.query(query4)\n\n# Make an API request to run the query and return a pandas DataFrame\nquery4_output_dataframe = query4_output.to_dataframe()\n\n# See the resulting table made from the query\nquery4_output_dataframe","36b58dab":"query5 = \"\"\"\n  -- Looking at countries with the highest infection rate relative to population --\nSELECT\n  location,\n  population,\n  MAX(total_cases) AS highest_infection_count,\n  ROUND(MAX((total_cases\/population) * 100), 3) AS highest_percentage_infected_at_once\nFROM\n  Project.CovidDeaths\nWHERE\n  total_cases IS NOT NULL\nGROUP BY\n  location,\n  population\nORDER BY\n  highest_percentage_infected_at_once DESC\nLIMIT\n    10;\n\"\"\"\n# Set up the query\nquery5_output = client.query(query5)\n\n# Make an API request to run the query and return a pandas DataFrame\nquery5_output_dataframe = query5_output.to_dataframe()\n\n# See the resulting table made from the query\nquery5_output_dataframe","eef2d257":"query6 = \"\"\"\n  -- Showing Countries with the highest death count per population --\nSELECT\n  location,\n  population,\n  MAX(total_deaths) AS total_death_count,\n  ROUND(MAX(total_deaths) * 100 \/ population, 2) AS share_of_population_lost_to_covid19\nFROM\n  Project.CovidDeaths\nGROUP BY\n  location,\n  population\nORDER BY\n  total_death_count DESC;\n\"\"\"\n# Set up the query\nquery6_output = client.query(query6)\n\n# Make an API request to run the query and return a pandas DataFrame\nquery6_output_dataframe = query6_output.to_dataframe()\n\n# See the resulting table made from the query\nquery6_output_dataframe","12a5f41d":"query7 = \"\"\"\n  -- Same as before, but excluding continents --\nSELECT\n  location,\n  population,\n  MAX(total_deaths) AS total_death_count,\n  ROUND(MAX(total_deaths) * 100 \/ population, 2) AS percentage_of_population_lost_to_covid19\nFROM\n  Project.CovidDeaths\nWHERE\n  continent IS NOT NULL\nGROUP BY\n  location,\n  population\nORDER BY\n  total_death_count DESC;\n\"\"\"\n# Set up the query\nquery7_output = client.query(query7)\n\n# Make an API request to run the query and return a pandas DataFrame\nquery7_output_dataframe = query7_output.to_dataframe()\n\n# See the resulting table made from the query\nquery7_output_dataframe","e5b8025b":"query7 = \"\"\"\n  -- Same as before, but excluding continents --\nSELECT\n  location,\n  population,\n  MAX(total_deaths) AS total_death_count,\n  ROUND(MAX(total_deaths) * 100 \/ population, 2) AS percentage_of_population_lost_to_covid19\nFROM\n  Project.CovidDeaths\nWHERE\n  continent IS NOT NULL\nGROUP BY\n  location,\n  population\nORDER BY\n  total_death_count DESC;\n\"\"\"\n# Set up the query\nquery7_output = client.query(query7)\n\n# Make an API request to run the query and return a pandas DataFrame\nquery7_output_dataframe = query7_output.to_dataframe()\n\n# See the resulting table made from the query\nquery7_output_dataframe","3878a079":"query8 = \"\"\"\n  -- Which countries lost the greatest share of their population to CV19? --\nSELECT\n  location,\n  population,\n  MAX(total_deaths) AS total_death_count,\n  ROUND(MAX(total_deaths) * 100 \/ population, 2) AS percentage_of_population_lost_to_covid19\nFROM\n  Project.CovidDeaths\nWHERE\n  continent IS NOT NULL\nGROUP BY\n  location,\n  population\nORDER BY\n  percentage_of_population_lost_to_covid19 DESC;\n\"\"\"\n# Set up the query\nquery8_output = client.query(query8)\n\n# Make an API request to run the query and return a pandas DataFrame\nquery8_output_dataframe = query8_output.to_dataframe()\n\n# See the resulting table made from the query\nquery8_output_dataframe","9b50c4a8":"query9 = \"\"\"\n  -- Aggregate data by continent --\nSELECT\n  location,\n  population,\n  MAX(total_cases) AS total_infection_count,\n  MAX(total_deaths) AS total_death_count,\n  ROUND(MAX((total_cases\/population) * 100), 3) AS highest_percentage_infected_at_once,\n  ROUND(MAX(total_deaths) * 100 \/ population, 2) AS percentage_of_population_lost_to_covid19\nFROM\n  Project.CovidDeaths\nWHERE\n  continent IS NULL\n  AND location <> 'International'\nGROUP BY\n  location,\n  population;\n\"\"\"\n# Set up the query\nquery9_output = client.query(query9)\n\n# Make an API request to run the query and return a pandas DataFrame\nquery9_output_dataframe = query9_output.to_dataframe()\n\n# See the resulting table made from the query\nquery9_output_dataframe","ae4b1645":"query10 = \"\"\"\n  -- Global numbers --\nSELECT\n  SUM(total_cases) AS current_global_infection_count,\n  SUM(total_deaths) AS current_global_death_count,\n  ROUND(SUM(total_deaths) * 100 \/ SUM(total_cases), 2) AS current_global_death_rate\nFROM\n  Project.CovidDeaths\nWHERE\n  continent IS NOT NULL;\n\"\"\"\n# Set up the query\nquery10_output = client.query(query10)\n\n# Make an API request to run the query and return a pandas DataFrame\nquery10_output_dataframe = query10_output.to_dataframe()\n\n# See the resulting table made from the query\nquery10_output_dataframe","67b0bf7b":"query11 = \"\"\"\n  -- Compare population vs daily vaccinations in Canada --\nSELECT\n  dea.continent,\n  dea.location,\n  dea.date,\n  dea.population,\n  vac.new_vaccinations,\n  SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_total_vaccinations,\n  SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date)\/ dea.population AS vaccines_administered_per_person\nFROM\n  Project.CovidDeaths dea\nJOIN\n  Project.CovidVaccinations vac\nON\n  dea.location = vac.location\n  AND dea.date = vac.date\nWHERE\n  dea.continent IS NOT NULL\n  AND dea.location = 'Canada'\nORDER BY\n  dea.location,\n  dea.date\n\"\"\"\n# Set up the query\nquery11_output = client.query(query11)\n\n# Make an API request to run the query and return a pandas DataFrame\nquery11_output_dataframe = query11_output.to_dataframe()\n\n# See the resulting table made from the query\nquery11_output_dataframe","1b92217f":"For this project, I'll be using two data sets \"CovidDeaths\" and \"CovidVaccinations\". The following two blocks of code show a preliminary view of those data sets. If you would like to have a closer look, click on the \"Data\" tab above or follow this link: https:\/\/www.kaggle.com\/josemariaescajadillo\/data-exploration-using-sql\/data","540dce43":"## Acknowledgement\n\nThanks to Alex Freberg from Alex the Analyst for providing me with the basic idea for this project. The code above is a customization (an improvement, if I may say so) of on his work developed by me, and is a faithful representation of my understanding and mastery.","92cbbe1e":"## Data Exploration using SQL\n\nThe code below is intended to showcase my understanding of SQL. It consists of publicly-available data downloaded from https:\/\/ourworldindata.org\/coronavirus-data-explorer.\n\nYou can examine and download the data set I used for this portfolio project, as well as the outputs for the queries executed in this project, by following this link: https:\/\/www.kaggle.com\/josemariaescajadillo\/data-exploration-using-sql\/data or by clicking on the \"Data\" tab above."}}