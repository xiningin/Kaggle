{"cell_type":{"33a9e3c5":"code","d200d689":"code","4750fc73":"code","c21cca49":"code","9ffac4f0":"code","576b0cb1":"code","c5269f03":"code","62c6c4cd":"markdown","9648be6f":"markdown","2edab46f":"markdown","91ecbae7":"markdown","e22a17e6":"markdown","2aadf301":"markdown","93796a11":"markdown","3df892d7":"markdown","0c342dd1":"markdown","1246ab4d":"markdown"},"source":{"33a9e3c5":"import pandas as pd\nimport seaborn as sns\nfrom learntools.advanced_pandas.data_types_missing_data import *\n\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option('max_rows', 5)","d200d689":"check_q1(pd.DataFrame())","4750fc73":"# Your code here\ndf = reviews['points'].dtype\nprint(df)\nprint(check_q1(df))","c21cca49":"# Your code here\nres = reviews.copy()\ndf = res['price'].astype(str)\nprint(df)\nprint(check_q2(df))","9ffac4f0":"# Your code here\nres = reviews.copy()\ndf = res['price'].isnull()\nprint(df)\nprint(check_q3(df))","576b0cb1":"# Your code here\nres = reviews.copy()\ndf = res['region_1'].fillna(\"Unknown\").value_counts()\nprint(df)\nprint(check_q4(df))","c5269f03":"# Your code here\nres = reviews.copy()\ndf = res.isnull().sum()\nprint(df)\nprint(check_q5(df))","62c6c4cd":"# Keep going\nMove on to the [**Renaming and combining workbook**](https:\/\/www.kaggle.com\/kernels\/fork\/598826)","9648be6f":"# Exercises","2edab46f":"Here are a few visual exercises on missing data.\n\n**Exercise 3**: Some wines do not list a price. How often does this occur? Generate a `Series`that, for each review in the dataset, states whether the wine reviewed has a null `price`.","91ecbae7":"# Data types and missing data workbook\n\n## Introduction\n\nThis is the workbook component of the \"Data types and missing data\" section of the tutorial.\n\n# Relevant Resources\n- [Data Types and Missing Data Reference](https:\/\/www.kaggle.com\/residentmario\/data-types-and-missing-data-reference)\n\n# Set Up\n\nRun the following cell to load your data and some utility functions","e22a17e6":"**Exercise 1**: What is the data type of the `points` column in the dataset?","2aadf301":"**Exercise 5**: A neat property of boolean data types, like the ones created by the `isnull()` method, is that `False` gets treated as 0 and `True` as 1 when performing math on the values. Thus, the `sum()` of a list of boolean values will return how many times `True` appears in that list.\nCreate a `pandas` `Series` showing how many times each of the columns in the dataset contains null values. Your result should look something like this:\n\n```\ncountry        63\ndescription     0\n               ..\nvariety         1\nwinery          0\nLength: 13, dtype: int64\n```\n\nHint: write a map that will extract the vintage of each wine in the dataset. The vintages reviewed range from 2000 to 2017, no earlier or later. Use `fillna` to impute the missing values.","93796a11":"**Exercise 4**: What are the most common wine-producing regions? Create a `Series` counting the number of times each value occurs in the `region_1` field. This field is often missing data, so replace missing values with `Unknown`. Sort in descending order.  Your output should look something like this:\n\n```\nUnknown                    21247\nNapa Valley                 4480\n                           ...  \nBardolino Superiore            1\nPrimitivo del Tarantino        1\nName: region_1, Length: 1230, dtype: int64\n```","3df892d7":"# Checking Answers\n\n**Check your answers in each exercise using the  `check_qN` function** (replacing `N` with the number of the exercise). For example here's how you would check an incorrect answer to exercise 1:","0c342dd1":"If you get stuck, **use the `answer_qN` function to see the code with the correct answer.**\n\nFor the first set of questions, running the `check_qN` on the correct answer returns `True`.\n\nFor the second set of questions, using this function to check a correct answer will present an informative graph!","1246ab4d":"**Exercise 2**: Create a `Series` from entries in the `price` column, but convert the entries to strings. Hint: strings are `str` in native Python."}}