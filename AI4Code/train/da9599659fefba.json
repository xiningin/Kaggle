{"cell_type":{"c27cb73d":"code","71c8e893":"code","3b44931f":"code","3e734653":"code","91934bb4":"code","42a99755":"code","7c9531ee":"code","917b4b31":"code","23ff4d18":"code","05bed23c":"code","8b7ad1b8":"code","7a0e87cc":"code","6e40fd73":"code","3098fe26":"code","6cea6163":"code","b06bf83f":"code","af5accbb":"code","2bd3f173":"code","fd17a98f":"code","5ca7f069":"code","55eb69e5":"code","98faf38b":"code","d41ef2a4":"code","3d85877c":"code","4ad6670b":"code","ed25636c":"code","cd652bdf":"code","712176a6":"code","83802be3":"code","0340591d":"code","b0bea640":"code","cbaed7a8":"code","d0844b08":"code","56b722ec":"code","c96cc2c5":"code","4a24ef95":"code","30d126db":"markdown","6be95afb":"markdown","f5a7b214":"markdown","b8184fc7":"markdown","94cd10ed":"markdown","29b4a80f":"markdown","e39f8145":"markdown","da9210bc":"markdown","ecb5b175":"markdown","1cf8cebe":"markdown","02357fc6":"markdown","ac023fd7":"markdown","014bfb23":"markdown","d6557688":"markdown","e5928918":"markdown","3d238884":"markdown","cc202acd":"markdown","6a904263":"markdown","788368c1":"markdown","f19c813d":"markdown","0ad9e406":"markdown","ecf38580":"markdown","12e6993f":"markdown","548f00fe":"markdown","ba144124":"markdown","1c31cd4f":"markdown","6d25983e":"markdown","8be127eb":"markdown","4392c001":"markdown","63a36ba4":"markdown","e7815186":"markdown","e3b455f6":"markdown"},"source":{"c27cb73d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","71c8e893":"import seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt","3b44931f":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntrain.head() ","3e734653":"train.dtypes","91934bb4":"sns.heatmap(train.isnull(), yticklabels=False, cmap=\"YlGn\")","42a99755":"sns.pairplot(train[['Survived','Pclass','Age','Fare']],height=2,hue='Survived')","7c9531ee":"train['Age']=train.groupby('Pclass')['Age'].transform(lambda x:x.fillna(x.median()))","917b4b31":"train['Cabin']=train['Cabin'].fillna('U')","23ff4d18":"words=''\nfor val in train.Cabin:\n    val =str(val)\n    val=val.split()\n    words+=' '.join(val)+' '\nwordcloud = WordCloud(background_color='White').generate(words)\nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off')\nplt.show()","05bed23c":"train['Cabin']=train['Cabin'].astype(str).str[0]","8b7ad1b8":"sns.heatmap(train.isnull(), yticklabels=False, cmap=\"YlGn\")","7a0e87cc":"words=''\nfor val in train.Ticket:\n    val =str(val)\n    val=val.split()\n    words+=' '.join(val)+' '\nwordcloud = WordCloud(background_color='White').generate(words)\nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off')\nplt.show()","6e40fd73":"train=train.drop(['Ticket'],axis=1)","3098fe26":"words=''\nfor val in train.Name:\n    val =str(val)\n    val=val.split()\n    words+=' '.join(val)+' '\nwordcloud = WordCloud(background_color='White').generate(words)\nplt.figure(figsize = (8, 8), facecolor = None) \nplt.imshow(wordcloud) \nplt.axis('off')\nplt.show()","6cea6163":"train['Name'] = train.Name.str.extract(pat=' ([A-Za-z]+)\\.', expand = False)","b06bf83f":"train['Name'] = train['Name'].replace(['Rev', 'Dr', 'Col', 'Ms', 'Mlle', 'Major', 'Countess', 'Capt', 'Dona', 'Jonkheer', 'Lady', 'Sir', 'Mme', 'Don'], 'Other')","af5accbb":"train=train.drop(['PassengerId'],axis=1)","2bd3f173":"train.head()","fd17a98f":"one_hot_train=pd.get_dummies(train)","5ca7f069":"X_train, X_test, Y_train, Y_test = train_test_split(one_hot_train.drop(['Survived'], axis=1), one_hot_train['Survived'], test_size = 0.2, random_state=2)","55eb69e5":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nmodel = LogisticRegression(max_iter=10000)\nmodel.fit(X_train,Y_train)\nprediction_lr=model.predict(X_test)\naccuracy_score(Y_test,prediction_lr)","98faf38b":"test=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","d41ef2a4":"test['Name'] = test.Name.str.extract(pat=' ([A-Za-z]+)\\.', expand = False)\ntest['Name'] = test['Name'].replace(['Rev', 'Dr', 'Col', 'Ms', 'Mlle', 'Major', 'Countess', 'Capt', 'Dona', 'Jonkheer', 'Lady', 'Sir', 'Mme', 'Don'], 'Other')","3d85877c":"test['Age']=test.groupby('Pclass')['Age'].transform(lambda x:x.fillna(x.median()))","4ad6670b":"test['Cabin']=test['Cabin'].fillna('U')","ed25636c":"test['Cabin']=test['Cabin'].astype(str).str[0]\ntest=test.drop(['Ticket'],axis=1)","cd652bdf":"test['Fare']=test.groupby('Pclass')['Fare'].transform(lambda x:x.fillna(x.median()))","712176a6":"one_hot_test=pd.get_dummies(test)","83802be3":"one_hot_train.columns.difference(one_hot_test.columns)","0340591d":"one_hot_test['Cabin_T']=0","b0bea640":"one_hot_train.columns.difference(one_hot_test.columns)","cbaed7a8":"one_hot_test=one_hot_test.drop(['PassengerId'],axis=1)","d0844b08":"prediction_test=model.predict(one_hot_test)","56b722ec":"submission = pd.DataFrame({'PassengerID':test['PassengerId'],\n                          'Survived': prediction_test})","c96cc2c5":"submission","4a24ef95":"submission.to_csv('submission.csv',index=False)","30d126db":"Addressing 'Name' column:","6be95afb":"Addressing missing values in 'Age' column","f5a7b214":"<h3>Modelling to Evaluation","b8184fc7":"\n<h4>Analytic approach<\/h4>\nLogistic regression: In statistics, the logistic model is used to model the probability of a certain class or event existing such as pass\/fail, win\/lose, alive\/dead or healthy\/sick<br>\nSource: Wikipedia","94cd10ed":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/8\/84\/Titanic_cutaway_diagram.png\/402px-Titanic_cutaway_diagram.png)\nFrom the generated 'Wordcloud' and above layout, we can infer that first character of 'Cabin' column refers to the deck. \n<br>This could be a useful feature for target variable. \n<br>We will extract 'Deck' from 'Cabin'.\n<br>Image source: Wikipedia","29b4a80f":"Checking for feature consistency across train and test sets:","e39f8145":"Addressing missing values in 'Cabin' column:","da9210bc":"Exploring 'Name' column:","ecb5b175":"The 'Cabin' column is too diverse for a meaningful correlation to exist therefore replacing missing values with 'U' (Unknown)","1cf8cebe":"<h3>Data understanding to preparation","02357fc6":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/c\/cc\/TitanicRoute.png)","ac023fd7":"'Pclass-Age' seems to be evenly distributed across target variable. We can replace missing values with corresponding 'median'","014bfb23":"The dataset has a mix of continuous, categorical and ordinal variables with missing values in 'Age' and 'Cabin' columns","d6557688":"Droppoing 'PassengerId' from test set:","e5928918":"Train_test split and accuracy score:","3d238884":"Predicting for test set:","cc202acd":"Dropping 'PassengerId' which is simply an index and provides no 'information gain'","6a904263":"'Cabin_T' is missing from test set, we can add the column with zero values:","788368c1":"Addressing missing values in 'Cabin' column","f19c813d":"Addressing missing values in 'Fare' column","0ad9e406":"Converting categorical features into binary using one hot encoding for better predictive performance:","ecf38580":"All missing values addressed","12e6993f":"<h4>Libraries","548f00fe":"<h4>Data Cleaning","ba144124":"Addressing missing values in 'Age' column:","1c31cd4f":"<h3>Deploying on 'test set'","6d25983e":"Exploring 'Ticket' column:","8be127eb":"<h4>Goal<\/h4>\n\n'What sorts of people were more likely to survive?'<br>\nSource: Challenge description","4392c001":"No help, therefore dropping 'Ticket' column","63a36ba4":"Converting categorical features to binary:","e7815186":"<h3>Problem to approach<\/h3>\n<h4>Problem<\/h4>\nRoyal Mail Ship (RMS) Titanic was a British passenger liner that sank in the North Atlantic Ocean in the early morning hours of 15 April,1912\n<br>Source: Wikipedia","e3b455f6":"From the above, we can make use of titles like 'Mr', 'Miss', 'Mrs', however other honorific titles like 'Dr', 'Rev' can be clubbed"}}