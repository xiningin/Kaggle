{"cell_type":{"675f5d35":"code","22468e5c":"code","5be1513c":"code","922fac97":"code","22a221cc":"code","965e2dd5":"code","1f9548d5":"code","5a8439a2":"code","ddeac283":"code","5c8f38f2":"code","f21d834f":"code","c345206e":"code","4c6b430c":"code","bda3da7b":"code","af4b0048":"code","1ccf97eb":"code","3c1a84a4":"code","14a0bfed":"code","bf6bce51":"code","a9be04f9":"code","bb9a8edb":"code","17f5d671":"markdown","77e01b1b":"markdown","6a35a584":"markdown"},"source":{"675f5d35":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","22468e5c":"test = pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')\ntrain = pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\nsample_sub = pd.read_csv('\/kaggle\/input\/digit-recognizer\/sample_submission.csv')","5be1513c":"train.head()","922fac97":"test.head()","22a221cc":"sample_sub.head()","965e2dd5":"plt.imshow(np.array(test.iloc[3]).reshape(28,28))","1f9548d5":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.metrics import accuracy_score","5a8439a2":"x = train.drop('label', axis=1)\ny = train['label']","ddeac283":"x.head()","5c8f38f2":"y.head()","f21d834f":"x_train, x_test, y_train, y_test = train_test_split(x, y)","c345206e":"#model = RandomForestClassifier()\nmodel = GradientBoostingClassifier()\nmodel.fit(x_train, y_train)","4c6b430c":"p = model.predict(x_test)","bda3da7b":"p","af4b0048":"accuracy_score(y_test, p)","1ccf97eb":"#model = RandomForestClassifier()\nmodel = GradientBoostingClassifier()\nmodel.fit(x, y)","3c1a84a4":"from xgboost import XGBClassifier\n\nmodel = XGBClassifier()\nmodel.tree_method = 'gpu_hist'\nmodel.fit(x, y)","14a0bfed":"p = model.predict(test)","bf6bce51":"sub = pd.Series(p, index=sample_sub['ImageId'], name='Label')","a9be04f9":"sub.head()","bb9a8edb":"os.chdir('\/kaggle\/working\/')\nsub.to_csv(\"segundo_teste_XGBClassifier.csv\", header=True)","17f5d671":"# Just printint image for future analysis and test","77e01b1b":"# Well, we have a good acc score, so, we just test the model with a submition :)","6a35a584":"# Let's code"}}