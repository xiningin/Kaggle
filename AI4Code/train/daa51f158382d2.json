{"cell_type":{"f42c7c2d":"code","5fabedc7":"code","e2344772":"code","2537b616":"code","79af3a16":"code","0c7876cf":"code","ec6023af":"code","1eb31c18":"code","17ae7152":"markdown","ee1b84ce":"markdown","94147c15":"markdown","96621428":"markdown","18fc86a8":"markdown","b0ffd095":"markdown"},"source":{"f42c7c2d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nitems_df = pd.read_csv('..\/input\/items.csv')\nshops_df = pd.read_csv('..\/input\/shops.csv')\n\nicats_df = pd.read_csv('..\/input\/item_categories.csv')\ntrain_df = pd.read_csv('..\/input\/sales_train.csv.gz', compression='gzip', header=0, sep=',', quotechar='\"')\nsmpsb_df = pd.read_csv('..\/input\/sample_submission.csv.gz', compression='gzip', header=0, sep=',', quotechar='\"')\ntest_df  = pd.read_csv('..\/input\/test.csv.gz', compression='gzip', header=0, sep=',', quotechar='\"')\n# Any results you write to the current directory are saved as output.","5fabedc7":"l = list(icats_df.item_category_name)\nl_cat = l\n\nfor ind in range(0,8):\n    l_cat[ind] = 'Access'\n\nfor ind in range(10,18):\n    l_cat[ind] = 'Consoles'\n\nfor ind in range(18,25):\n    l_cat[ind] = 'Consoles Games'\n\nfor ind in range(26,28):\n    l_cat[ind] = 'phone games'\n\nfor ind in range(28,32):\n    l_cat[ind] = 'CD games'\n\nfor ind in range(32,37):\n    l_cat[ind] = 'Card'\n\nfor ind in range(37,43):\n    l_cat[ind] = 'Movie'\n\nfor ind in range(43,55):\n    l_cat[ind] = 'Books'\n\nfor ind in range(55,61):\n    l_cat[ind] = 'Music'\n\nfor ind in range(61,73):\n    l_cat[ind] = 'Gifts'\n\nfor ind in range(73,79):\n    l_cat[ind] = 'Soft'\n\n\nicats_df['cats'] = l_cat\n\n#google translate\nicats_df['cats'] = icats_df['cats'].replace('\u0427\u0438\u0441\u0442\u044b\u0435 \u043d\u043e\u0441\u0438\u0442\u0435\u043b\u0438 (\u0448\u0442\u0443\u0447\u043d\u044b\u0435)','Clean media (piece)')\nicats_df['cats'] = icats_df['cats'].replace('\u0427\u0438\u0441\u0442\u044b\u0435 \u043d\u043e\u0441\u0438\u0442\u0435\u043b\u0438 (\u0448\u043f\u0438\u043b\u044c)','Clean carriers (spire)')\nicats_df['cats'] = icats_df['cats'].replace('\u0421\u043b\u0443\u0436\u0435\u0431\u043d\u044b\u0435 - \u0411\u0438\u043b\u0435\u0442\u044b','Official - Tickets')\nicats_df['cats'] = icats_df['cats'].replace('\u0418\u0433\u0440\u044b - \u0410\u043a\u0441\u0435\u0441\u0441\u0443\u0430\u0440\u044b \u0434\u043b\u044f \u0438\u0433\u0440', 'Games')\nicats_df['cats'] = icats_df['cats'].replace('\u0414\u043e\u0441\u0442\u0430\u0432\u043a\u0430 \u0442\u043e\u0432\u0430\u0440\u0430','Delivery of goods')\nicats_df['cats'] = icats_df['cats'].replace('\u0411\u0438\u043b\u0435\u0442\u044b (\u0426\u0438\u0444\u0440\u0430)','Tickets (figure)')\nicats_df['cats'] = icats_df['cats'].replace('PC - \u0413\u0430\u0440\u043d\u0438\u0442\u0443\u0440\u044b\/\u041d\u0430\u0443\u0448\u043d\u0438\u043a\u0438', 'Headphones')\nicats_df['cats'] = icats_df['cats'].replace('\u0421\u043b\u0443\u0436\u0435\u0431\u043d\u044b\u0435','Office')\n\n\n\nicats_df.head()","e2344772":"joined = pd.merge(train_df, items_df, left_on='item_id', right_on='item_id')\njoined = pd.merge(joined, icats_df, left_on='item_category_id', right_on='item_category_id')","2537b616":"joined.head()","79af3a16":"joined['date'] = pd.to_datetime(joined['date'], errors='coerce')\njoined['year'] = joined['date'].dt.year\njoined['month'] = joined['date'].dt.month\njoined['day'] = joined['date'].dt.day","0c7876cf":"import matplotlib.pyplot as plt\n\nallCats = joined['cats'].unique()\nprint(allCats)\nfor cat in allCats:\n    data = joined.loc[joined['cats'] == cat].groupby([\"year\", \"month\"]).agg({\"year\": \"count\"})\n    data.plot(kind=\"bar\", title=cat)\n    ","ec6023af":"returned = joined.loc[joined['item_cnt_day'] <0].groupby([\"year\", \"month\"]).agg({\"year\": \"count\"})\ndata.plot(kind=\"bar\", title=\"returned items\")","1eb31c18":"import seaborn as sns\ncorr = joined.drop(['date_block_num'], axis=1).corr()\nsns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values)","17ae7152":"<h3>Check correlations<\/h3>","ee1b84ce":"<h3> Print histogram for all cetegories <\/h3>","94147c15":"<h3>Join item to transactions<\/h3>","96621428":"<h3>It can be useful to seperate the data into multiple columns<\/h3>","18fc86a8":"<h3>Check the returned items<\/h3>","b0ffd095":"<h3>Translate categories from russian<\/h3>\n"}}