{"cell_type":{"80c5a9f6":"code","ee6717d1":"code","a713c293":"code","64f31b80":"code","f235fe55":"code","b99976bb":"code","21f16737":"code","4b9a2d24":"code","08846f73":"code","7d8e05ab":"code","d9363dd8":"code","d646e133":"code","878e5e04":"markdown","df72e558":"markdown"},"source":{"80c5a9f6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ee6717d1":"df=pd.read_csv('..\/input\/financial-distress\/Financial Distress.csv')","a713c293":"df","64f31b80":"df.info()","f235fe55":"Y=df['Financial Distress']\nY","b99976bb":"for y in range(0,len(Y)): # Coverting the values into binary\n       if Y[y] > -0.5:\n              Y[y] = 0\n       else:\n              Y[y] = 1","21f16737":"Y.unique()","4b9a2d24":"X=df.drop(columns=['Financial Distress'])\nX","08846f73":"from sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2)","7d8e05ab":"#Logistic Regression\nfrom sklearn.linear_model import LogisticRegression\nclassifier=LogisticRegression()\nclassifier.fit(X_train,Y_train)\nY_pred=classifier.predict(X_test)\nfrom sklearn.metrics import confusion_matrix\ncm=confusion_matrix(Y_pred,Y_test)\nprint(\"Confusiion Matrix is :\")\nprint(cm)\nfrom sklearn.metrics import accuracy_score\nprint(\"Accuracy Score is : \", accuracy_score(Y_pred,Y_test))","d9363dd8":"#Support Vector Machine\nfrom sklearn.svm import SVC\nclassifier=SVC(kernel='rbf')\nclassifier.fit(X_train,Y_train)\nY_pred=classifier.predict(X_test)\nfrom sklearn.metrics import confusion_matrix\ncm=confusion_matrix(Y_pred,Y_test)\nprint(\"Confusiion Matrix is :\")\nprint(cm)\nfrom sklearn.metrics import accuracy_score\nprint(\"Accuracy Score is : \", accuracy_score(Y_pred,Y_test))","d646e133":"#XGBoost CLassification\nfrom xgboost import XGBClassifier\nclassifier=XGBClassifier()\nclassifier.fit(X_train,Y_train)\nY_pred=classifier.predict(X_test)\nfrom sklearn.metrics import confusion_matrix\ncm=confusion_matrix(Y_pred,Y_test)\nprint(\"Confusiion Matrix is :\")\nprint(cm)\nfrom sklearn.metrics import accuracy_score\nprint(\"Accuracy Score is : \", accuracy_score(Y_pred,Y_test))","878e5e04":"As we have to see weather the Finance distress is done or not. For that we have to convert the df['Finace_Distress'] in binary form or 0 and 1 form .\n","df72e558":"The best score is provided by SVM . "}}