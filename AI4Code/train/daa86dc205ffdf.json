{"cell_type":{"9c8cbb59":"code","86aef476":"code","70f3e90c":"code","c88b0b62":"code","cd7d8866":"code","2df84178":"markdown","818e91fa":"markdown","9c91db6b":"markdown","25ed6d7a":"markdown"},"source":{"9c8cbb59":"!pip install kaggle-environments --upgrade\n","86aef476":"%%writefile kaptin_bluddflagg.py\n# comment in kaggle-environments insists dat SystemRandom is shinier than Random\nfrom random import SystemRandom\n\n\n# amount of approaches to each bandit to stomp 'im a few times\nAPPROACHES = 10\n\n# use shiny random ONLY!\nshiny_random = SystemRandom()\n\n# da bandits to stomp\nda_bandits = []\n# da bandit to stomp now\nda_bandit_to_stomp = {\n    \"index\": None,\n    \"times\": 0\n}\n\n\ndef kaptin_bluddflagg(servation, figuration):\n    \"\"\" WAAAGH! \"\"\"\n    # if it's da be'innin' of WAAAGH!\n    if da_bandit_to_stomp[\"index\"] == None:\n        for i in range(APPROACHES):\n            da_bandits.extend(range(figuration.banditCount))\n    # if da bandit is prope'ly stomp'd\n    if da_bandit_to_stomp[\"times\"] <= 0 and len(da_bandits) > 0:\n        # get da new bandit\n        da_bandit_to_stomp[\"index\"] = da_bandits.pop(shiny_random.randint(0, len(da_bandits) - 1))\n        da_bandit_to_stomp[\"times\"] = figuration[\"episodeSteps\"] \/\/ (figuration.banditCount * APPROACHES)\n    # STOMP 'IM\n    da_bandit_to_stomp[\"times\"] -= 1\n    return da_bandit_to_stomp[\"index\"]\n","70f3e90c":"from kaggle_environments import evaluate, make, utils\n\nresults = evaluate(\n                    \"mab\",\n#                     [\"kaptin_bluddflagg.py\", \"random\"],\n#                     [\"kaptin_bluddflagg.py\", \"kaptin_bluddflagg.py\"],\n                    [\"kaptin_bluddflagg.py\", \"round_robin\"],\n                    \n                    num_episodes=10,\n                    configuration={\"agentExec\": \"LOCAL\"}\n                  )\n\nwon = 0\nlost = 0\ntie = 0\nfor result in results:\n    if result[0] > result[1]:\n        won += 1\n    elif result[0] < result[1]:\n        lost += 1\n    else:\n        tie += 1\n\nprint(f'\\nwon: {won}, lost: {lost}, tie: {tie}\\n')\n","c88b0b62":"# print da boring stuff\nfor result in results:\n    print(result)\n","cd7d8866":"env = make(\"mab\", debug=True)\n\n# env.run([\"kaptin_bluddflagg.py\", \"kaptin_bluddflagg.py\"])\n# env.run([\"kaptin_bluddflagg.py\", \"random\"])\nenv.run([\"kaptin_bluddflagg.py\", \"round_robin\"])\n\nenv.render(mode=\"ipython\", width=500, height=450)\n","2df84178":"# Orkz is made fer' two fings! Fightin', and winnin'!\n<p style=\"text-align: right;\">Dawn of War<\/p>","818e91fa":"# Orkses is never defeated in battle. If we win we win, if we die we die fighting so it don't count. If we runs for it we don't die neither, cos we can come back for annuver go, see!\n<p style=\"text-align: right;\">Codex: Orks (4th Edition), p. 49<\/p>","9c91db6b":"# Oy! [Kaptin Bluddflagg](https:\/\/warhammer40k.fandom.com\/wiki\/Bluddflagg) is on da bridge!","25ed6d7a":"# Install kaggle-environments for the [WAAAGH!](https:\/\/warhammer40k.fandom.com\/wiki\/WAAAGH!)"}}