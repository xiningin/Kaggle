{"cell_type":{"4884af18":"code","ad3ddbd1":"code","fb5162a2":"code","411412bd":"code","4698a844":"code","36551f83":"code","f61f8d0b":"code","d23e1817":"code","fc753832":"code","cb9891ae":"code","0842b120":"code","148c3518":"code","65372443":"code","a46284e2":"code","cc85e9ac":"code","62ac3229":"code","47bac56b":"code","8977085f":"code","ecd75e4e":"code","751587e5":"code","b2e77f95":"code","1465a5cb":"code","8bdcfad7":"code","eb4b60f9":"code","eb5648e3":"code","2404b77f":"code","1c8b6e73":"code","78f93b85":"code","e68466b0":"code","b20c07dd":"code","a086b322":"code","e3b778c2":"code","ee0f9433":"code","f4bfd1aa":"code","5bf4207d":"code","8fab4098":"code","f21df914":"code","2937439f":"code","9c087968":"code","02d1d2ff":"code","949b6543":"code","1e6cb0a3":"code","03de641f":"code","a8214d80":"code","0a48ae3c":"code","04d9f2b1":"markdown","829a6777":"markdown","4e0414ab":"markdown","2150b08d":"markdown","6043813f":"markdown","69ed1097":"markdown","a54716fa":"markdown","c38ef48c":"markdown","d45b4419":"markdown","687ad8b0":"markdown","660f3a04":"markdown"},"source":{"4884af18":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\n\nfrom statsmodels.graphics.mosaicplot import mosaic","ad3ddbd1":"df = pd.read_csv('..\/input\/car-specifications\/cars specifications.csv')\ndf.head()","fb5162a2":"df.shape","411412bd":"df.describe(include='all')","4698a844":"# cleanse \"?\" in horsepower column\ndf.horsepower[374] = 0\ndf.horsepower = pd.to_numeric(df.horsepower)","36551f83":"df.describe(include='all')","f61f8d0b":"# numeric colums\ncol_numeric = list(df.columns) \ncol_numeric.remove('car name')\ncol_numeric.remove('origin')\ncol_numeric.remove('cylinders')\ncol_numeric","d23e1817":"for c in col_numeric:\n    print(c)\n    print(df[c].describe())\n    print('\\n')","fc753832":"for c in col_numeric:\n    plt.figure()\n    df[c].plot(kind='hist')\n    plt.grid()\n    plt.title(c)","cb9891ae":"df.cylinders.value_counts()","0842b120":"df.cylinders.value_counts().plot(kind='bar')\nplt.title('cylinders')\nplt.grid()\nplt.show()","148c3518":"df.origin.value_counts()","65372443":"df.origin.value_counts().plot(kind='bar')\nplt.title('origin')\nplt.grid()\nplt.show()","a46284e2":"# pairwise scatter plot\nsns.pairplot(df[col_numeric])\nplt.show()","cc85e9ac":"# correlations\ncor_numeric = (df[col_numeric]).corr()\ncor_numeric","62ac3229":"plt.rcParams['figure.figsize']=(6,5)\nsns.heatmap(cor_numeric, cmap=plt.cm.plasma)\nplt.show()","47bac56b":"# group by origin    \ndf_origin = df.groupby('origin', as_index=False).agg(\n    mean_mpg = pd.NamedAgg(column='mpg', aggfunc=np.mean),\n    mean_disp = pd.NamedAgg(column='displacement', aggfunc=np.mean),\n    mean_hp = pd.NamedAgg(column='horsepower', aggfunc=np.mean),\n    mean_weight = pd.NamedAgg(column='weight', aggfunc=np.mean),\n    mean_acc = pd.NamedAgg(column='acceleration', aggfunc=np.mean),\n    mean_year = pd.NamedAgg(column='model year', aggfunc=np.mean))\n\ndf_origin","8977085f":"# violinplots\nfor c in col_numeric:\n    plt.figure(figsize=(6,4))\n    sns.violinplot(x='origin', y=c, data=df)\n    plt.title(c)\n    plt.grid()\n    plt.show()","ecd75e4e":"def first_piece(i_string):\n    return i_string.split()[0]\n\ndf['manufacturer'] = list(map(first_piece, df['car name']))","751587e5":"# clean up manufacturer levels\ndf.manufacturer.loc[df.manufacturer=='maxda'] = 'mazda'\ndf.manufacturer.loc[df.manufacturer=='vw'] = 'volkswagen'\ndf.manufacturer.loc[df.manufacturer=='vokswagen'] = 'toyota'\ndf.manufacturer.loc[df.manufacturer=='chevy'] = 'chevrolet'\ndf.manufacturer.loc[df.manufacturer=='chevroelt'] = 'chevrolet'\ndf.manufacturer.loc[df.manufacturer=='toyouta'] = 'toyota'\ndf.manufacturer.loc[df.manufacturer=='mercedes'] = 'mercedes-benz'","b2e77f95":"df.manufacturer.value_counts()","1465a5cb":"plt.figure(figsize=(12,5))\ndf.manufacturer.value_counts().plot(kind='bar')\nplt.grid()\nplt.show()","8bdcfad7":"# select relevant features\nfeatures = ['mpg','cylinders','displacement','horsepower','weight','acceleration','model year']\ndf4pca = df.loc[:,features]","eb4b60f9":"# standardize first\ndf4pca_std = StandardScaler().fit_transform(df4pca)","eb5648e3":"# define PCA\npc_model = PCA(n_components=2)\n# apply PCA\npc = pc_model.fit_transform(df4pca_std)\n# convert to data frame\ndf_pc = pd.DataFrame(data = pc, columns = ['pc_1', 'pc_2'])\n# add origin column\ndf_pc['origin'] = df.origin\n# and look at result\ndf_pc.head()","2404b77f":"# add PCA data to original data frame, so we have all data in one place\ndf['pc_1'] = df_pc.pc_1\ndf['pc_2'] = df_pc.pc_2\ndf.head()","1c8b6e73":"# plot PCA results by origin\nsns.lmplot( x='pc_1', y='pc_2', data=df_pc, fit_reg=True, hue='origin', legend=False)\nplt.legend(['1 - US','2 - Europe','3 - Japan'])\nplt.title('Principal Component Analysis')\nplt.grid()\nplt.show()","78f93b85":"# Let's make an interactive version of the plot where we can also see the car name\nfig = px.scatter(df, x='pc_1', y='pc_2', color='origin', size='horsepower',\n                 hover_data=['car name'])\nfig.show()","e68466b0":"# The bubble size seems to increase in x-direction,\n# so the first component looks strongly correlated to feature 'horsepower'.\n# Let's check:\nplt.figure(figsize=(6,6))\nplt.scatter(df.pc_1, df.horsepower)\nplt.title('Horsepower vs. PC 1')\nplt.xlabel('Principal Component 1')\nplt.ylabel('Horsepower')\nplt.grid()\nplt.show()","b20c07dd":"# let's look at the same plot for mpg instead of horsepower\nplt.figure(figsize=(6,6))\nplt.scatter(df.pc_1, df.mpg)\nplt.title('MPG vs. PC 1')\nplt.xlabel('Principal Component 1')\nplt.ylabel('MPG')\nplt.grid()\nplt.show()","a086b322":"# define 3D PCA\npc_model = PCA(n_components=3)\n# apply PCA\npc = pc_model.fit_transform(df4pca_std)\n# convert to data frame\ndf_pc = pd.DataFrame(data = pc, columns = ['pc_1', 'pc_2','pc_3'])\n# add origin column\ndf_pc['origin'] = df.origin\n# and look at result\ndf_pc.head()","e3b778c2":"# add PCA data to original data frame, so we have all data in one place\ndf['pc3d_1'] = df_pc.pc_1\ndf['pc3d_2'] = df_pc.pc_2\ndf['pc3d_3'] = df_pc.pc_3\ndf.head()","ee0f9433":"fig = px.scatter_3d(df, x='pc3d_1', y='pc3d_2', z='pc3d_3',\n                    color='origin',\n                    hover_data=['car name'],\n                    opacity=0.5)\nfig.update_layout(title='PCA 3D')\nfig.show()","f4bfd1aa":"def target_plot(my_feature):\n    my_feature_bin = my_feature + '_bin'\n    df[my_feature_bin] = pd.qcut(df[my_feature], q=5) # bin by quantiles\n    plt.rcParams[\"figure.figsize\"]=(6,4)\n    df[my_feature_bin].value_counts().plot(kind='bar')\n    plt.grid()\n    plt.show()\n\n    # plot (multiclass) target vs feature\n    plt.rcParams[\"figure.figsize\"]=(12,6)\n    mosaic(df, [my_feature_bin, 'origin'], title='Origin vs binned feature' + ' ' + my_feature)\n    plt.show()","5bf4207d":"target_plot('mpg')","8fab4098":"target_plot('horsepower')","f21df914":"target_plot('displacement')","2937439f":"target_plot('weight')","9c087968":"target_plot('acceleration')","02d1d2ff":"target_plot('model year')","949b6543":"df.columns","1e6cb0a3":"# plot also for cylinders_\nmosaic(df, ['cylinders', 'origin'], title='Origin vs cylinders')\nplt.show()","03de641f":"df[df.cylinders==3]","a8214d80":"df[df.cylinders==5]","0a48ae3c":"df[df.cylinders==8]","04d9f2b1":"# Evaluate by origin (1=US, 2=Europe, 3=Japan)","829a6777":"### Let's try one more dimension","4e0414ab":"# EDA of car data","2150b08d":"Number of cylinders gives already a quite good discrimination:\n* 3 cylinders => origin = 3 (Japan)\n* 5 cylinders => origin = 2 (Europe)\n* 8 cylinders => origin = 1 (USA)\n\nOnly for 4 and 6 cylinders we have different origins.","6043813f":"# Import and first glance","69ed1097":"# Data cleaning","a54716fa":"# Impact of features on origin","c38ef48c":"# Extract manufacturer","d45b4419":"# Dimension reduction (PCA 2D\/3D)","687ad8b0":"### Correlations","660f3a04":"# EDA"}}