{"cell_type":{"062988e1":"code","c74b5d61":"code","a16adc41":"code","e3781f74":"code","37551aef":"code","ad7ebe53":"code","d54b7c31":"code","261c1603":"code","133ad421":"code","09fc6c48":"code","bf384959":"markdown","788832b1":"markdown","d990f667":"markdown","0ceab4c5":"markdown","2ff00160":"markdown","4bb57a8d":"markdown","40fe8a1f":"markdown","34bfc0cb":"markdown","d792b947":"markdown"},"source":{"062988e1":"import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\niris = sns.load_dataset(\"iris\")","c74b5d61":"sns.FacetGrid(iris, hue=\"species\", height=5) \\\n   .map(sns.distplot, \"petal_width\") \\\n   .add_legend();\nplt.show();","a16adc41":"sns.FacetGrid(iris, hue=\"species\", height=5) \\\n   .map(sns.distplot, \"sepal_width\") \\\n   .add_legend();\nplt.show();","e3781f74":"sns.FacetGrid(iris, hue=\"species\", height=5) \\\n   .map(sns.distplot, \"petal_length\") \\\n   .add_legend();\nplt.show();","37551aef":"# build pdf: cdf is built after pdf is.\n\n# Choose between 5 and 20 bins. The larger the data set, the more likely you\u2019ll want a large number of bins\ncounts, bin_edges = np.histogram(iris['petal_length'][iris['species']=='setosa'], \n                                 bins=10,\n                                 density = True)\n\nprint(counts)\nprint(bin_edges)","ad7ebe53":"pdf = counts\/(sum(counts)) # \"Probability\" for PDF\nprint(\"PDF:\", pdf);\nprint(\"\\nBIN EDGES:\", bin_edges)","d54b7c31":"#compute CDF and plot CDF\ncdf = np.cumsum(pdf)\n\nplt.plot(bin_edges[1:], cdf)\n\nplt.grid()\nplt.show()","261c1603":"#PLot PDF\nplt.plot(bin_edges[1:],pdf)\n\nplt.grid()\nplt.show()","133ad421":"# plot both pdf and cdf in one graph\nplt.close()\nplt.grid()\n\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:], cdf)\n\n\nplt.show()","09fc6c48":"\n# CORRECTNESS OF UNIVARIATE ANALYSIS\n\n# Plots of CDF of petal_length for various types of flowers.\n\n# Misclassification error if you use petal_length only.\n\ncounts, bin_edges = np.histogram(iris['petal_length'][iris['species']=='setosa'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges)\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:], cdf)\n\n\n# virginica\ncounts, bin_edges = np.histogram(iris['petal_length'][iris['species']=='virginica'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges)\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:], cdf)\n\n\n#versicolor\ncounts, bin_edges = np.histogram(iris['petal_length'][iris['species']=='versicolor'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges)\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:], cdf)\n\n\nplt.show();","bf384959":"- **Note:**\n - Histogram with [KDE](https:\/\/jakevdp.github.io\/PythonDataScienceHandbook\/05.13-kernel-density-estimation.html)\n \n \n- **Uses:**\n - Which part of distribution, data is heavily\/lightly concentrated\n - Univariate analyses: Effectivenes of a feature for classification","788832b1":"- [Visulal] From PDF, data is heavily distributed around 1.5\n- [Numerical] Mean, Median, Variance","d990f667":"#### Misclassification error when only `petal_width` is used\n\n- Misclassification error is represented with **percent of data overlapping in PDFs**\n    - The percent value can be found with CDF (see PDF-CDF combined plot)","0ceab4c5":"**Note:** `petal_width` feature successfully *classifies* seatosa from others","2ff00160":"- **Note:**\n    - If you want to know how much of data lies b\/w random variables`, subtract corresponding cdf value \n    - Example, `0.84 - 0.34 = 0.5%` data i.e half of data has `1.4` and `1.6` values","4bb57a8d":"# 02. CDF\n\n- **Note:**\n    - CDF is built w\/ help of PDF\n\n\n- **Uses:**\n    - What percent of data is **LESS THAN** a value\n    - Misclassification error when only that feature is used for classification","40fe8a1f":"# 01. PDF","34bfc0cb":"**Note:** `sepal_width` isn't much of a \"classifier\"","d792b947":"99% of data has `petal_length` less than 1.7 units"}}