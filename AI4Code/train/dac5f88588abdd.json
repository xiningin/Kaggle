{"cell_type":{"a2663102":"code","77a21c87":"code","ef9b3958":"code","cf6690d5":"code","ba3c779f":"code","f7e90aed":"code","8507ba2d":"code","5b9d2b5d":"code","b7fc97d7":"code","1a48d915":"code","c3ff78d1":"code","9455f72b":"code","4b299842":"code","fc2a706b":"code","983b3416":"code","dd7e3668":"code","34590061":"code","c38049dc":"code","c2c2bcea":"code","20352f5a":"code","47e2fe6c":"code","992185d5":"code","3683511f":"code","974237ac":"code","24bf638f":"code","0c8113be":"code","0b9bc67c":"code","d009722d":"code","db33f816":"code","30037efc":"code","f599e0dd":"code","d25bb50e":"code","521a80b5":"markdown","d71cf799":"markdown","78a6e137":"markdown","0c3af705":"markdown","ea166368":"markdown","1fcdcd37":"markdown","3f8fda7c":"markdown","c5ff7e42":"markdown","52684409":"markdown","6ba15b80":"markdown","8fc17cb6":"markdown","7ec1d536":"markdown","a45d0ef6":"markdown","4694880f":"markdown","e9ab28de":"markdown","a5c6d40b":"markdown","37382a66":"markdown","c2ceaa27":"markdown","6f0d25c3":"markdown","3b71f963":"markdown","cea4a3e7":"markdown","c55c8f45":"markdown"},"source":{"a2663102":"\nimport pandas as pd\nimport seaborn as sns \nfrom pandas import DataFrame\nimport matplotlib.pyplot as plt\n\n\n\n\n\n\n# Supress Scientific notation in python\npd.set_option('display.float_format', lambda x: '%.2f' % x)\n\n# Display all columns of long dataframe\npd.set_option('display.max_columns', None)\n\n\n\n","77a21c87":"#open file\ndf=pd.read_csv('..\/input\/recovered\/recovered_de.csv')\n#print(df)","ef9b3958":"#parse index\ndf['date']=pd.to_datetime(df['date'], infer_datetime_format=True)\nindexeddf=df.set_index(['date'])\n#print(indexeddf)\n\n#parsing to time format and extracting dates \nx=df['Date']=pd.to_datetime(df['date'], format='%d-%m-%y')\n\nDay=df['date'].dt.day_name()\nMonth=df['date'].dt.month_name()\nYear=df['date'].dt.year\n\n#subsetting\n\ndf['Year']=df['date'].dt.year\ndf['Month']=df['date'].dt.month_name()\ndf['Day']=df['date'].dt.day_name()\n#print(df)","cf6690d5":"cmap=sns.diverging_palette(100,200, as_cmap=True)\n#cmap = sns.diverging_palette(220, 15, as_cmap=True)","ba3c779f":"base_color = sns.color_palette()[0]\nstate_order = df['state'].value_counts().index\nrecovered_order=df['recovered'].value_counts().index\nmonth_order=df['Month'].value_counts().index\nday_order=df['Day'].value_counts().index\ndate_order = df['date'].value_counts().index\ngender_order = df['gender'].value_counts().index\nage_order = df['age_group'].value_counts().index","f7e90aed":"plt.figure(figsize=(10,8))\nsns.countplot(data=df,y='state',color=base_color,order=state_order)\nplt.xticks(rotation=15)","8507ba2d":"year2020=df[df.Year==2020]\nyear2021=df[df.Year==2021]\nBayern=year2020[year2020.state=='Bayern']\nage_order = Bayern['age_group'].value_counts().index\nmonth_order = Bayern['Month'].value_counts().index","5b9d2b5d":"Bayern","b7fc97d7":"age_order = Bayern['age_group'].value_counts().index\nmonth_order = Bayern['Month'].value_counts().index\nBayern=Bayern.loc[Bayern['age_group'].isin(age_order[:8])] #showing first 6 elements ","1a48d915":"plt.figure(figsize=(25,9))\nsns.countplot(data = Bayern, x = 'Month', hue = 'Day',color=base_color,order=month_order)","c3ff78d1":"plt.figure(figsize=(25,9))\nsns.countplot(data = Bayern, x = 'age_group', hue = 'Month',color=base_color,order=age_order)","9455f72b":"plt.figure(figsize=(20,8))\nplt.scatter(data = Bayern, y = 'recovered', x = 'Day', marker='o',edgecolors='white',alpha=0.7\/1.8)\nplt.xticks(rotation=15)","4b299842":"plt.figure(figsize=(17,9))\nmonth_counts = year2020.groupby(['state','Month']).size()\nmonth_counts = month_counts.reset_index(name='count')\nmonth_counts = month_counts.pivot(index = 'state', columns = 'Month', values = 'count')\nsns.heatmap(month_counts, annot = True, cmap =cmap,center=0, fmt = '.1f',\n           cbar_kws = {'label' : 'Levels'})\nplt.xticks(rotation=15)\nplt.title('Count')\nplt.xlabel('Month')\nplt.ylabel('State')","fc2a706b":"plt.figure(figsize=(17,9))\nage_counts = year2020.groupby(['state','age_group']).size()\nage_counts = age_counts.reset_index(name='count')\nage_counts = age_counts.pivot(index = 'state', columns = 'age_group', values = 'count')\nsns.heatmap(age_counts, annot = True, cmap = sns.diverging_palette(100,200, as_cmap=True), fmt = '.1f',\n           center = 0,cbar_kws = {'label' : 'Levels'})\nplt.xticks(rotation=15)\nplt.title('Count')\nplt.xlabel('Age')\nplt.ylabel('State')","983b3416":"plt.figure(figsize=(17,9))\nage_counts = year2020.groupby(['Month','Day']).size()\nage_counts = age_counts.reset_index(name='count')\nage_counts = age_counts.pivot(index = 'Month', columns = 'Day', values = 'count')\nsns.heatmap(age_counts, annot = True, cmap = sns.diverging_palette(100,200, as_cmap=True), fmt = '.1f',\n           center = 0,cbar_kws = {'label' : 'Levels'})\nplt.xticks(rotation=15)\nplt.title('Count')\nplt.xlabel('Day')\nplt.ylabel('Month')","dd7e3668":"year2021=df[df.Year==2021]\nBayern=year2021[year2021.state=='Bayern']jh","34590061":"recovered_counts = year2021.groupby(['state', 'Month']).size()\nrecovered_counts = recovered_counts.reset_index(name='count')\nrecovered_counts = recovered_counts.pivot(index = 'state', columns = 'Month', values = 'count')\nrecovered_counts.head()","c38049dc":"plt.figure(figsize=(17,7))\nsns.heatmap(recovered_counts, fmt = '.1f',annot = True, cmap = sns.diverging_palette(100,200, as_cmap=True), center = 0)\nplt.xticks(rotation=15)","c2c2bcea":"day_counts = year2021.groupby(['state', 'Day']).size()\nday_counts = day_counts.reset_index(name='count')\nday_counts = day_counts.pivot(index = 'state', columns = 'Day', values = 'count')\nday_counts.head()","20352f5a":"plt.figure(figsize=(27,22))\nsns.heatmap(day_counts, fmt = '.2f',annot = True, cmap =sns.diverging_palette(100,200, as_cmap=True),center=370)\nplt.xticks(rotation=15)","47e2fe6c":"age_order = year2021['age_group'].value_counts().index\nmonth_order = year2021['Month'].value_counts().index\nday_order = year2021['Day'].value_counts().index\ngender_order = year2021['gender'].value_counts().index","992185d5":"plt.figure(figsize=(25,9))\nsns.countplot(data = year2021, x = 'Day', hue = 'gender',color=base_color,order=day_order)","3683511f":"plt.figure(figsize=(25,9))\nsns.countplot(data = year2021, x = 'age_group', hue = 'gender',color=base_color,order=age_order)","974237ac":"plt.figure(figsize=(17,9))\ngender_counts = year2021.groupby(['state','gender']).size()\ngender_counts = gender_counts.reset_index(name='count')\ngender_counts = gender_counts.pivot(index = 'state', columns = 'gender', values = 'count')\nsns.heatmap(gender_counts, annot = True, cmap = sns.diverging_palette(100,200, as_cmap=True), fmt = '.1f',\n           center = 0,cbar_kws = {'label' : 'Levels'})\nplt.xticks(rotation=15)\nplt.title('Count')\nplt.xlabel('Gender')\nplt.ylabel('State')","24bf638f":"plt.figure(figsize=(17,9))\ngender_counts = year2021.groupby(['Month','gender']).size()\ngender_counts = gender_counts.reset_index(name='count')\ngender_counts = gender_counts.pivot(index = 'Month', columns = 'gender', values = 'count')\nsns.heatmap(gender_counts, annot = True, cmap =sns.diverging_palette(100,200, as_cmap=True), fmt = '.1f',\n           center = 0,cbar_kws = {'label' : 'Levels'})\nplt.xticks(rotation=15)\nplt.title('Count')\nplt.xlabel('Gender')\nplt.ylabel('State')","0c8113be":"plt.figure(figsize=(17,9))\ngender_counts = year2021.groupby(['gender','Day']).size()\ngender_counts = gender_counts.reset_index(name='count')\ngender_counts = gender_counts.pivot(index = 'gender', columns = 'Day', values = 'count')\nsns.heatmap(gender_counts, annot = True, cmap = sns.diverging_palette(100,200, as_cmap=True), fmt = '.1f',\n           center = 0,cbar_kws = {'label' : 'Levels'})\nplt.xticks(rotation=15)\nplt.title('Count')\nplt.xlabel('Gender')\nplt.ylabel('Day')","0b9bc67c":"Bayern","d009722d":"plt.figure(figsize=(17,9))\nage_counts = Bayern.groupby(['Month','Day']).size()\nage_counts = age_counts.reset_index(name='count')\nage_counts = age_counts.pivot(index = 'Month', columns = 'Day', values = 'count')\nsns.heatmap(age_counts, annot = True, cmap = sns.diverging_palette(100,200, as_cmap=True), square=True, linewidths=.5,fmt = '.1f',\n           cbar_kws = {'label' : 'Levels'})\nplt.xticks(rotation=15)\nplt.title('Bayern count')\nplt.xlabel('Day')\nplt.ylabel('Month')","db33f816":"age_order = Bayern['age_group'].value_counts().index\nmonth_order = Bayern['Month'].value_counts().index\ngender_order = Bayern['gender'].value_counts().index","30037efc":"plt.figure(figsize=(10,8))\nsns.countplot(data=Bayern,y='age_group',color=base_color,order=age_order)\nplt.xticks(rotation=15)","f599e0dd":"plt.figure(figsize=(25,9))\nsns.countplot(data = Bayern, x = 'Month', hue = 'gender',color=base_color,order=month_order)","d25bb50e":"#open file\nc=pd.read_csv('..\/input\/cov_cluster\/covid_cluster.csv')\nprint(c)","521a80b5":"# Bayern levels","d71cf799":"# **Heatmapping recovered per day 2021**","78a6e137":"# Setting colormap params :)","0c3af705":"# Parsing time","ea166368":"# **2020**","1fcdcd37":"# **Heatmap showing covid recovered in states during months 2021**","3f8fda7c":"# Heatmap on age categories grouped by days","c5ff7e42":"# Bayern in 2021","52684409":"# Covid recovered gender on days","6ba15b80":"**# Filter data on years**","8fc17cb6":"**Studying Covid recovereed in Germany's Lands in 2020 months.**","7ec1d536":"# **Heatmaps 2020**","a45d0ef6":"# Gender charts","4694880f":"# Putting things in order","e9ab28de":"# Bayern in months and days in 2021","a5c6d40b":"# Heatmap on age categories grouped by months","37382a66":"# 2021 data","c2ceaa27":"# Gender grouped by age_cats ","6f0d25c3":"# Recovered in age groups in Bayern","3b71f963":"# Recovered States","cea4a3e7":"**Bar chart showing Bayern covid recovered per month per day**","c55c8f45":"# Heatmap on gender and state"}}