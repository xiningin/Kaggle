{"cell_type":{"033c34f4":"code","7f282425":"code","943c5255":"code","1b1f92d3":"code","4adfae60":"code","00aa5286":"code","5c43e671":"code","85effff1":"code","56739526":"code","018c672e":"code","1ae38df7":"code","47c7d670":"code","240db2c0":"code","c6dc0214":"markdown","3531fbb6":"markdown","b7ff3efc":"markdown","58adf58f":"markdown","aab60eb0":"markdown","02cb0cd3":"markdown","c9036602":"markdown","1cffd868":"markdown"},"source":{"033c34f4":"import pandas as pd","7f282425":"df = pd.read_csv(\"..\/input\/tabular-playground-series-sep-2021\/train.csv\")\n\ndf.head()","943c5255":"df = df.dropna()","1b1f92d3":"from sklearn.model_selection import train_test_split\n\n# Columns used as predictors\nX = df.drop([\"claim\"], axis = 1).values\n\ny = df[\"claim\"].values\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0, test_size = 0.25)","4adfae60":"from sklearn.ensemble import RandomForestClassifier\n\nmodel = RandomForestClassifier(criterion = \"entropy\")\nmodel.fit(X_train, y_train)\n\nmodel.score(X_test, y_test)","00aa5286":"X_test = pd.read_csv(\"..\/input\/tabular-playground-series-sep-2021\/test.csv\")\n\nX_test = X_test.fillna(value = 0)\n\nX_test.head()","5c43e671":"predictions = model.predict_proba(X_test)\nprint(predictions)","85effff1":"claim = predictions[:,0]\nprint(claim)","56739526":"X_test[\"claim\"] = claim","018c672e":"X_test.head()","1ae38df7":"print(X_test[[\"id\", \"claim\"]])","47c7d670":"X_test[[\"id\", \"claim\"]].to_csv(\"seschlbeck_result.csv\", index = False)","240db2c0":"checking_result = pd.read_csv(\"seschlbeck_result.csv\")\nchecking_result","c6dc0214":"#### Writing predictions to .csv file","3531fbb6":"#### Pre-Cleaning data","b7ff3efc":"#### Testing","58adf58f":"# Claim upon Insurance Policy Prediction with Random Forest","aab60eb0":"#### Predicting","02cb0cd3":"#### Applying Random Forest","c9036602":"#### Defining X and y and Splitting data","1cffd868":"#### Loading and Displaying data"}}