{"cell_type":{"6ed4bd04":"code","d18f2345":"code","cbfd0ba7":"code","4a3e7afd":"code","75b98999":"code","67f322fe":"code","06534ca5":"code","066b71d5":"code","7d21ec11":"code","cb387ffd":"code","4383c62d":"code","49ecf626":"code","97012577":"code","8804a43d":"markdown","6d621f5d":"markdown","783787c3":"markdown","2829e0b0":"markdown"},"source":{"6ed4bd04":"import pandas as pd\nfrom pandas.io.json import json_normalize\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom sklearn.feature_extraction.text import CountVectorizer\nimport random\nfrom wordcloud import WordCloud \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom tqdm.notebook import tqdm","d18f2345":"data=pd.read_csv('..\/input\/men-women-shoes-reviews\/Shoes_Data.csv')\ndata","cbfd0ba7":"data2=data[['reviews','reviews_rating']]\ndata2","4a3e7afd":"data2.info()","75b98999":"rating=[]\nfor item in data2['reviews_rating']:\n    rating+=[int(item[0])]\ndata2['reviews_rating']=rating\ndata2","67f322fe":"data2_1=data2[data2['reviews_rating']==1]\ndata2_2=data2[data2['reviews_rating']==2]\ndata2_3=data2[data2['reviews_rating']==3]\ndata2_4=data2[data2['reviews_rating']==4]\ndata2_5=data2[data2['reviews_rating']==5]\ndata2s=[data2_1,data2_2,data2_3,data2_4,data2_5,]","06534ca5":"import re\nimport nltk\nnltk.download(\"stopwords\")\nnltk.download('punkt')\nfrom nltk import word_tokenize,sent_tokenize\nnltk.download('wordnet')\nimport nltk as nlp","066b71d5":"data2s[0]","7d21ec11":"cult_list=[]\nfor item in data2s:\n    df=item['reviews']\n    cult_list0=[]\n    for cult in tqdm(df):\n        cult=re.sub(\"[^a-zA-z]\",\" \",str(cult))\n        cult=cult.lower()\n        cult=nltk.word_tokenize(cult)\n        lemma=nlp.WordNetLemmatizer()\n        cult=[lemma.lemmatize(word) for word in cult]\n        cult=\" \".join(cult)\n        cult_list0.append(cult)\n    cult_list+=[cult_list0]","cb387ffd":"max_features=200\ncount_vectorizer=CountVectorizer(max_features=max_features,stop_words=\"english\")\ndata4=[]\nfor i in range(5):\n    sparce_matrix=count_vectorizer.fit_transform(cult_list[i]).toarray()\n    data4+=[pd.DataFrame(count_vectorizer.get_feature_names(),columns=[\"Words\"])]","4383c62d":"fig,axs = plt.subplots(5,1,figsize=(50,60))\nfor i in range(5):\n    r=i\n    random.seed(2021)\n    random.shuffle(data4[i].Words)\n    wordcloud=WordCloud(background_color=\"black\",width=1024,height=768).generate(\" \".join(data4[i].Words))    \n    ax=axs[r].axis(\"off\")  \n    ax=axs[r].set_title('Rating '+str(i+1))\n    ax=axs[r].imshow(wordcloud)\nplt.show()","49ecf626":"max_features=200\ncount_vectorizer=CountVectorizer(max_features=max_features,stop_words=\"english\")\ndata5=[]\nfor item in cult_list:\n    data5i=[]\n    for item2 in item:\n        item3=item2.split(' ')\n        if len(item3)>1:\n            data5i+=[item3[0]+'_'+item3[1]]\n    data5+=[data5i]","97012577":"fig,axs = plt.subplots(5,1,figsize=(50,60))\nfor i in range(5):\n    r=i\n    random.seed(2022)\n    random.shuffle(data5[i])\n    wordcloud=WordCloud(background_color=\"black\",width=1024,height=768).generate(\" \".join(data5[i]))    \n    ax=axs[r].axis(\"off\")  \n    ax=axs[r].set_title('Rating '+str(i+1))\n    ax=axs[r].imshow(wordcloud)\nplt.show()","8804a43d":"## Normal WordCloud","6d621f5d":"# An experimental attempt of **two_word WordCloud**","783787c3":"### **Two-word WordCloud** is bad looking due to underbar('_'), but seems to express the nuance of reviews rating more clearly.","2829e0b0":"### In my opinion, WordCloud of single disjointed words seems to lose the nuance of reviews rating."}}