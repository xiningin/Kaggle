{"cell_type":{"0955a179":"code","60c68f09":"code","52b95031":"code","7833bbe7":"code","e0ef5c72":"code","62f3f8aa":"code","6a4e8ad9":"code","d7e503c2":"code","1acde792":"code","e2e23a04":"code","aec96c27":"code","6bd83b47":"markdown","606874d4":"markdown","e37f13e7":"markdown","7810cdb4":"markdown","8f071ed1":"markdown","2f4b4e10":"markdown","fdaed7b4":"markdown","383529eb":"markdown","0160cc7f":"markdown","2193aa5e":"markdown","a07561ce":"markdown","e35c87f2":"markdown","5ffecbda":"markdown","4f3c216a":"markdown"},"source":{"0955a179":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","60c68f09":"data = pd.read_csv('..\/input\/salary-data\/Salary_Data.csv')\nx = data['Years_of_Experience']\ny = data['Salary']","52b95031":"data.describe()","7833bbe7":"print(data.head())","e0ef5c72":"plt.plot(x,y,'bo')\nplt.xlabel('Years of Experience')\nplt.ylabel('Salary')\nplt.legend(['Salary'])\nplt.title('[Years of Experience] Vs [Salary]')\nplt.grid()\nplt.show()","62f3f8aa":"def linear_regression(x, y):     \n    N = len(x)\n    x_mean = x.mean()\n    y_mean = y.mean()\n    \n    B1_num = ((x - x_mean) * (y - y_mean)).sum()\n    B1_den = ((x - x_mean)**2).sum()\n    B1 = B1_num \/ B1_den\n    \n    B0 = y_mean - (B1*x_mean)\n    \n    reg_line = 'y = {} + {}\u03b2'.format(B0, round(B1, 3))\n    \n    return (B0, B1, reg_line)","6a4e8ad9":"B0, B1, reg_line = linear_regression(x, y)\nprint('Regression Line: ', reg_line)","d7e503c2":"def corr_coef(x, y):\n    N = len(x)\n    \n    num = (N * (x*y).sum()) - (x.sum() * y.sum())\n    den = np.sqrt((N * (x**2).sum() - x.sum()**2) * (N * (y**2).sum() - y.sum()**2))\n    R = num \/ den\n    return R","1acde792":"B0, B1, reg_line = linear_regression(x, y)\nprint('Regression Line: ', reg_line)\nR = corr_coef(x, y)\nprint('Correlation Coef.: ', R)\nprint('\"Goodness of Fit\": ', R**2)","e2e23a04":"plt.figure(figsize=(12,5))\nplt.scatter(x, y, s=300, linewidths=1, edgecolor='black')\ntext = '''X Mean: {} Years\nY Mean: ${}\nR: {}\nR^2: {}\ny = {} + {}X'''.format(round(x.mean(), 2), \n                       round(y.mean(), 2), \n                       round(R, 4), \n                       round(R**2, 4),\n                       round(B0, 3),\n                       round(B1, 3))\nplt.text(x=1, y=100000, s=text, fontsize=12, bbox={'facecolor': 'grey', 'alpha': 0.2, 'pad': 10})\nplt.title('How Experience Affects Salary')\nplt.xlabel('Years of Experience', fontsize=15)\nplt.ylabel('Salary', fontsize=15)\nplt.plot(x, B0 + B1*x, c = 'r', linewidth=5, alpha=.5, solid_capstyle='round')\nplt.scatter(x=x.mean(), y=y.mean(), marker='*', s=10**2.5, c='r') # average point\nplt.show()","aec96c27":"def predict(B0, B1, new_x):\n    y = B0 + B1 * new_x\n    return y","6bd83b47":"## Formula\nThe formula for a simple linear regression is:\n![](https:\/\/files.gitbook.com\/v0\/b\/gitbook-x-prod.appspot.com\/o\/spaces%2F-M2g31CUvdCruJm660Ot%2Fuploads%2F4CR0jDSNthgOGlfa02uh%2Fsimple-linear-regression-formula.png?alt=media&token=4bf7075a-018b-4118-bd74-7cb11535d04f)\n* **y** is the predicted value of the dependent variable (y) for any given value of the independent variable (x).\n* **B0** is the intercept.\n* **B1** is the regression coefficient.\n* **x** is the independent variable.\n* **e** is the error of the estimate.","606874d4":"## Import libraries\nFirst, we will import the Python packages that we will need for this analysis. All we will need is **NumPy**, to help with the math calculations, **Pandas**, to store and manipulate the data and **Matplotlib** (optional), to plot the data.","e37f13e7":"## Visualizing the data\nHere is a scatter plot showing our data. We can see a positive linear relationship between Years of Experience and Salary, meaning that as a person gains more experience, they also get paid more.","7810cdb4":"## Mathematical calculations\n![](https:\/\/files.gitbook.com\/v0\/b\/gitbook-x-prod.appspot.com\/o\/spaces%2F-M2g31CUvdCruJm660Ot%2Fuploads%2FzfBKuABVB4Ug14ET8spW%2Fmath-calculation.jpg?alt=media&token=66fca091-d2d3-4999-a743-5bc71a60b091)","8f071ed1":"## Calculating the Regression Line\nNow if we apply this **linear_regression()** function to our data, it will return the intercept, slope and the regression line rounded to 3 decimal places.","2f4b4e10":"## Calculating How Well The Regression Line Fits\nTo determine how well our regression line fits the data, we want to calculate the correlation coefficient, commonly referred to just as R, and the coefficient of determination, otherwise known as R\u00b2 (R squared).","fdaed7b4":"## Plotting the Regression Line\nUsing **Matplotlib**, we can now plot our resulting regression line with our data.","383529eb":"Apply **linear_regression()** function to our data","0160cc7f":"## Understand the data\nLet\u2019s perform **describe** to understand the data.","2193aa5e":"## Make predictions with new data\nNow we can use our calculations of the regression line to make predictions with new data that we come across. To create the **predict()** function, we just follow the formula for the simple linear regression line and plug in the values that we calculated as well as the new X value. This function will return the prediction y.","a07561ce":"## Load the dataset\nNext, we will load in the data and then assign each column to its appropriate variable.","e35c87f2":"## Definition\nA statistical method that allows us to summarize and study relationships between two continuous (quantitative) variables:\n* One variable, denoted *x* , is regarded as the **predictor**, **explanatory**, or **independent** variable.\n* The other variable, denoted *y* , is regarded as the **response**, **outcome**, or **dependent** variable.","5ffecbda":"To get a look at the data we can use the **.head()** function provided by Pandas, which will show us the first few rows of the data.","4f3c216a":"## Apply *corr_coef()* function to our data\nApplying these functions to our data, we can print out the results:"}}