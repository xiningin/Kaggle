{"cell_type":{"e6e936d5":"code","7a8775e9":"code","3fa4f4fe":"code","f4a4d7b8":"code","e50c67d0":"code","449b5b5c":"code","0211b856":"code","f19ac687":"code","2ecb2e7d":"code","5934b8d0":"code","5b0842c5":"code","dad9d223":"code","9bdc681c":"code","6b2597b7":"code","03cd4417":"code","2c5e09d3":"code","10652a8a":"code","2476ae38":"code","1c9079d2":"code","13144378":"code","28b148d5":"code","b4cf649a":"code","a6c11496":"code","b9fe8a69":"code","7d6805a0":"code","bd23e9f1":"code","c7781b79":"code","e5cb7e20":"code","7141e97a":"code","f3b57162":"code","2df94a5f":"code","60523942":"code","12ff440b":"code","3338f088":"code","6603176d":"code","a48a82a0":"code","8eb99ce3":"code","85828774":"code","d25d4b94":"code","ec7e8415":"code","05937e82":"code","f234112d":"code","97fb5148":"code","589f62f5":"code","59cc650c":"code","1dd9f81b":"code","e0cb3113":"code","bec3879a":"code","f0604b53":"code","d1d01a45":"code","82886268":"code","3d2e28a8":"code","831bb20d":"code","6fe86b38":"code","2842924a":"code","faad4346":"code","8b77399f":"code","66e1034d":"code","d8bc79d5":"code","11651319":"code","3829fb6c":"code","e9d46129":"code","37c0ea62":"code","694e9592":"code","311986c9":"code","18b9924b":"code","cdfaa6a7":"code","04e4027b":"code","bddc20f6":"code","642eb0cf":"code","8c821b0d":"code","5dd2b8af":"code","c3fb560c":"code","0999be3f":"code","0eb301d2":"code","e2a304f0":"code","4772077e":"code","317ab11c":"code","9eb1fe05":"code","bf12192a":"code","b309c3e3":"code","86faff50":"code","3f739116":"code","112ddcea":"code","c225f528":"code","eaaae3cf":"code","0be4653a":"code","be681aab":"code","4335aa3a":"code","496872bb":"code","b94ce290":"code","b5dcae19":"code","49a2bc5a":"code","bd8b98fd":"code","9b9a7458":"code","0af3d091":"code","f3248cf2":"code","7b0b1446":"code","700a4ccf":"code","0ff9fb3c":"code","acc02bfa":"code","5532eba8":"code","f4e28d3c":"code","559f0bb8":"code","71277528":"code","cd4ede18":"code","e4fd2516":"code","4dd76022":"code","81ab8710":"code","0ef8001c":"code","fe3adb3b":"code","1fbb5037":"code","88e4e74e":"code","9a971da1":"code","6334df42":"code","4e4fbc8e":"code","3677b7bc":"code","dc2ada53":"code","fb30f425":"code","0ff991ad":"code","8a337990":"code","3f87dba8":"code","dc211715":"code","e0cb6c4d":"code","0626574e":"code","a588afc8":"code","6218377b":"code","052fe433":"code","27673626":"code","4a0419cd":"code","a9eae12b":"code","ef4382ff":"code","c26eb5a1":"code","d116d2df":"code","dc820a58":"code","46cabff2":"code","e2645336":"code","e7340348":"code","4f56821e":"markdown","1f24e47f":"markdown","9adc417c":"markdown","30865295":"markdown","f07b0b5a":"markdown","3e82d06e":"markdown","c829767f":"markdown","b2590aba":"markdown"},"source":{"e6e936d5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\npd.set_option('display.max_rows', None) \npd.set_option('display.max_columns',None) #so that large dataframes can be seen in output wholely\n\n# Filtering out the warnings\n\nimport warnings\nwarnings.filterwarnings('ignore')","7a8775e9":"leads=pd.read_csv('..\/input\/leads-dataset\/Leads.csv')","3fa4f4fe":"leads.head()","f4a4d7b8":"leads.shape","e50c67d0":"leads= leads.replace('Select',np.nan)","449b5b5c":"(leads.isnull().sum()\/len(leads.index))*100","0211b856":"#dropping the columns having more than 40% of missing values\ncols= leads.columns\nfor i in cols:\n    if((100*(leads[i].isnull().sum()\/len(leads.index)))>40):\n        leads.drop(i,1,inplace=True)","f19ac687":"leads.shape","2ecb2e7d":"(leads.isnull().sum()\/len(leads.index))*100","5934b8d0":"leads.drop(['Prospect ID','Lead Number'],1,inplace=True)","5b0842c5":"#now,checking each columns one by one","dad9d223":"leads['Lead Origin'].value_counts()","9bdc681c":"leads['Do Not Email'].value_counts()","6b2597b7":"leads['A free copy of Mastering The Interview'].value_counts()","03cd4417":"def binary_map(x):\n    return x.map({'Yes':1,'No':0})","2c5e09d3":"varlist =  ['A free copy of Mastering The Interview','Do Not Email']\nleads[varlist] = leads[varlist].apply(binary_map)","10652a8a":"leads['Do Not Call'].value_counts()","2476ae38":"#asymmetric columns, it better to drop\nleads.drop('Do Not Call',1,inplace=True)","1c9079d2":"leads.TotalVisits=leads.TotalVisits.dropna()","13144378":"plt.figure(figsize=[10,6])\nsns.countplot(leads.Country)\nplt.xticks(Rotation=90)\nplt.show()","28b148d5":"leads.drop('Country',1,inplace=True) #asymmetric column","b4cf649a":"leads['What is your current occupation'].value_counts(dropna=False)\/len(leads.index)","a6c11496":"# imputing NaN value to unemployed\nleads['What is your current occupation']=leads['What is your current occupation'].replace(np.nan,'Unemployed')","b9fe8a69":"leads['What is your current occupation'].value_counts(dropna=False)\/len(leads.index)","7d6805a0":"leads['What matters most to you in choosing a course'].value_counts()","bd23e9f1":"leads.drop('What matters most to you in choosing a course',1,inplace=True)","c7781b79":"leads.Search.value_counts(dropna=False)","e5cb7e20":"leads.drop('Search',1,inplace=True)","7141e97a":"leads.Magazine.value_counts(dropna=False)","f3b57162":"leads.drop('Magazine',1,inplace=True)","2df94a5f":"leads['Newspaper Article'].value_counts(dropna=False)","60523942":"leads.drop('Newspaper Article',1,inplace=True)","12ff440b":"leads['X Education Forums'].value_counts(dropna=False)","3338f088":"leads.drop('X Education Forums',1,inplace=True)","6603176d":"leads.Newspaper.value_counts(dropna=False)","a48a82a0":"leads.drop('Newspaper',1,inplace=True)","8eb99ce3":"leads['Digital Advertisement'].value_counts(dropna=False)","85828774":"leads.drop('Digital Advertisement',1,inplace=True)","d25d4b94":"leads['Through Recommendations'].value_counts(dropna=False)","ec7e8415":"leads.drop('Through Recommendations',1,inplace=True)","05937e82":"leads['Receive More Updates About Our Courses'].value_counts(dropna=False)","f234112d":"leads.drop('Receive More Updates About Our Courses',1,inplace=True)","97fb5148":"leads['Update me on Supply Chain Content'].value_counts(dropna=False)","589f62f5":"leads.drop('Update me on Supply Chain Content',1,inplace=True)","59cc650c":"leads['Get updates on DM Content'].value_counts(dropna=False)","1dd9f81b":"leads.drop('Get updates on DM Content',1,inplace=True)","e0cb3113":"leads.City.value_counts(dropna=False)\/len(leads.index)","bec3879a":"leads.City=leads.City.replace(np.nan,'Other Cities')","f0604b53":"leads.City=leads.City.replace(['Other Metro Cities','Tier II Cities','Other Cities of Maharashtra'],'Other Cities')","d1d01a45":"leads.City.value_counts(dropna=False)\/len(leads.index)","82886268":"leads['I agree to pay the amount through cheque'].value_counts(dropna=False)","3d2e28a8":"leads.drop('I agree to pay the amount through cheque',1,inplace=True)","831bb20d":"leads.Tags=leads.Tags.replace(np.nan,'Not Specified')","6fe86b38":"leads.Tags=leads.Tags.replace(['Closed by Horizzon','switched off','Busy','Lost to EINS','Not doing further education','Interested  in full time MBA',                          \n'Graduation in progress',                                \n'invalid number',                                        \n'Diploma holder (Not Eligible)',                         \n'wrong number given',                                   \n'opp hangup',                                            \n'number not provided',                                   \n'in touch with EINS',                                    \n'Lost to Others',                                        \n'Still Thinking',                                        \n'Want to take admission but has financial problems',     \n'Interested in Next batch',                              \n'In confusion whether part time or DLP',                 \n'Lateral student',                                       \n'University not recognized',                             \n'Shall take in the next coming month',                   \n'Recognition issue (DEC approval)'],'Other Tags')","2842924a":"(leads.Tags.value_counts(dropna=False)\/len(leads.index))*100","faad4346":"leads.Specialization.value_counts(dropna=False)\/len(leads.index)","8b77399f":"leads.Specialization=leads.Specialization.replace(np.nan,'Not Specified')","66e1034d":"# clubbing Management subject together\nmanagement=['Finance Management','Human Resource Management','Marketing Management','Operations Management','IT Projects Management','Supply Chain Management'\n           ,'Healthcare Management','Hospitality Management','Retail Management']","d8bc79d5":"leads.Specialization=leads.Specialization.replace(management,'Management')","11651319":"# clubbing Business subject together\nbusiness=['Business Administration','International Business','Rural and Agribusiness','E-Business']","3829fb6c":"leads.Specialization=leads.Specialization.replace(business,'Business')","e9d46129":"leads.Specialization.value_counts(dropna=False)\/len(leads.index)","37c0ea62":"leads['Lead Source'].value_counts()","694e9592":"#replacing Nan Values and combining low frequency values\nleads['Lead Source'] = leads['Lead Source'].replace(np.nan,'Others')\nleads['Lead Source'] = leads['Lead Source'].replace('google','Google')\nleads['Lead Source'] = leads['Lead Source'].replace('Facebook','Social Media')\nleads['Lead Source'] = leads['Lead Source'].replace(['bing','Click2call','Press_Release',\n                                                     'youtubechannel','welearnblog_Home',\n                                                     'WeLearn','blog','Pay per Click Ads',\n                                                    'testone','NC_EDM','Live Chat'] ,'Others')","311986c9":"leads['Lead Source'].value_counts()","18b9924b":"leads['Lead Source']=leads['Lead Source'].replace(['Welingak Website','Referral Sites'],'Online Sites')","cdfaa6a7":"leads['Lead Source'].value_counts()","04e4027b":"(leads.isnull().sum()\/len(leads.index))*100","bddc20f6":"leads=leads.dropna()","642eb0cf":"leads.head()","8c821b0d":"leads['Last Activity'].value_counts()","5dd2b8af":"leads['Last Notable Activity'].value_counts()","c3fb560c":"leads.drop('Last Activity',1, inplace=True)  # 'Last Activity' and 'Last Notable Activity' are similer, better to drop 'Last Activity'","0999be3f":"#clubbing lower frequency values\n\nleads['Last Notable Activity'] = leads['Last Notable Activity'].replace(['Had a Phone Conversation',\n                                                                       'Email Marked Spam',\n                                                                         'Unreachable',\n                                                                         'Unsubscribed',\n                                                                         'Email Bounced',                                                                    \n                                                                       'Resubscribed to emails',\n                                                                       'View in browser link Clicked',\n                                                                       'Approached upfront', \n                                                                       'Form Submitted on Website', \n                                                                       'Email Received'],'Other_Notable_activity')","0eb301d2":"leads['Last Notable Activity'].value_counts()","e2a304f0":"leads.shape","4772077e":"sns.boxplot(y=leads['TotalVisits'])\nplt.show()","317ab11c":"#Outlier Treatment: Remove top & bottom 1% of the Column Outlier values\n\nQ3 = leads.TotalVisits.quantile(0.99)\nleads = leads[(leads.TotalVisits <= Q3)]\nQ1 = leads.TotalVisits.quantile(0.01)\nleads = leads[(leads.TotalVisits >= Q1)]\nsns.boxplot(y=leads['TotalVisits'])\nplt.show()","9eb1fe05":"sns.boxplot(y=leads['Total Time Spent on Website'])\nplt.show()","bf12192a":"sns.boxplot(y=leads['Page Views Per Visit'])\nplt.show()","b309c3e3":"#Outlier Treatment: Remove top & bottom 1% \n\nQ3 = leads['Page Views Per Visit'].quantile(0.99)\nleads = leads[leads['Page Views Per Visit'] <= Q3]\nQ1 = leads['Page Views Per Visit'].quantile(0.01)\nleads = leads[leads['Page Views Per Visit'] >= Q1]\nsns.boxplot(y=leads['Page Views Per Visit'])\nplt.show()","86faff50":"leads.head()","3f739116":"dummy1=pd.get_dummies(leads['Lead Origin'], prefix= 'Lead Origin',drop_first=True)\ndummy1.head()","112ddcea":"dummy2=pd.get_dummies(leads['Lead Source'], prefix='Lead Source',drop_first=True)\ndummy2.head()","c225f528":"dummy3=pd.get_dummies(leads['Specialization'], prefix='Specialization',drop_first=True)\ndummy3.head()","eaaae3cf":"dummy4=pd.get_dummies(leads['What is your current occupation'], prefix='Occupation',drop_first=True)\ndummy4.head()","0be4653a":"dummy5=pd.get_dummies(leads['Tags'], prefix='Tags',drop_first=True)\ndummy5.head()","be681aab":"dummy6=pd.get_dummies(leads['City'], prefix='City',drop_first=True)\ndummy6.head()","4335aa3a":"dummy7=pd.get_dummies(leads['Last Notable Activity'], prefix='Last Notable Activity',drop_first=True)\ndummy7.head()","496872bb":"# adding all the dummy's to the lead dataset\nleads=pd.concat([leads,dummy1],1)\nleads=pd.concat([leads,dummy2],1)\nleads=pd.concat([leads,dummy3],1)\nleads=pd.concat([leads,dummy4],1)\nleads=pd.concat([leads,dummy5],1)\nleads=pd.concat([leads,dummy6],1)\nleads=pd.concat([leads,dummy7],1)","b94ce290":"leads.drop(['Lead Origin','Lead Source','Specialization','What is your current occupation','Tags','City','Last Notable Activity'],1,inplace=True)","b5dcae19":"leads.shape","49a2bc5a":"leads.head()","bd8b98fd":"from sklearn.model_selection import train_test_split","9b9a7458":"y=leads.pop('Converted')","0af3d091":"X=leads","f3248cf2":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, test_size=0.3, random_state=100)","7b0b1446":"from sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()","700a4ccf":"num_cols=X_train.select_dtypes(include=['float64', 'int64']).columns\n\nX_train[num_cols] = scaler.fit_transform(X_train[num_cols])","0ff9fb3c":"X_train.head()","acc02bfa":"import statsmodels.api as sm","5532eba8":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()","f4e28d3c":"from sklearn.feature_selection import RFE\nrfe = RFE(lr, 15)             # running RFE with 15 variables as output\nrfe = rfe.fit(X_train, y_train)","559f0bb8":"col = X_train.columns[rfe.support_]\ncol","71277528":"X_train_sm = sm.add_constant(X_train[col])\nlogm1 = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm1.fit()\nprint(res.summary())","cd4ede18":"# dropping 'Tags_Ringing' because it is insignificant\ncol=col.drop('Tags_Ringing',1)","e4fd2516":"X_train_sm = sm.add_constant(X_train[col])\nlogm1 = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm1.fit()\nprint(res.summary())","4dd76022":"from statsmodels.stats.outliers_influence import variance_inflation_factor","81ab8710":"vif = pd.DataFrame()\nvif['Features'] = X_train[col].columns\nvif['VIF'] = [variance_inflation_factor(X_train[col].values, i) for i in range(X_train[col].shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","0ef8001c":"# prediction on train dataset\ny_pred=res.predict(X_train_sm)","fe3adb3b":"y_pred=y_pred.values.reshape(-1)","1fbb5037":"y_train_pred_final = pd.DataFrame({'Prospect ID':y_train.index,'Converted':y_train.values, 'Converted_prob':y_pred})\ny_train_pred_final.head()","88e4e74e":"#finding optimal cutt-off\nnumbers = [float(x)\/10 for x in range(10)]\nfor i in numbers:\n    y_train_pred_final[i]= y_train_pred_final.Converted_prob.map(lambda x: 1 if x > i else 0)\ny_train_pred_final.head()","9a971da1":"from sklearn import metrics\ncutoff_df = pd.DataFrame( columns = ['prob','accuracy','sensi','speci'])\nfrom sklearn.metrics import confusion_matrix\n\n# TP = confusion[1,1] # true positive \n# TN = confusion[0,0] # true negatives\n# FP = confusion[0,1] # false positives\n# FN = confusion[1,0] # false negatives\n\nnum = [0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]\nfor i in num:\n    cm1 = metrics.confusion_matrix(y_train_pred_final.Converted, y_train_pred_final[i] )\n    total1=sum(sum(cm1))\n    accuracy = (cm1[0,0]+cm1[1,1])\/total1\n    \n    speci = cm1[0,0]\/(cm1[0,0]+cm1[0,1])\n    sensi = cm1[1,1]\/(cm1[1,0]+cm1[1,1])\n    cutoff_df.loc[i] =[ i ,accuracy,sensi,speci]\nprint(cutoff_df)","6334df42":"cutoff_df.plot.line(x='prob', y=['accuracy','sensi','speci'])\nplt.show()","4e4fbc8e":"y_train_pred_final['Predicted'] = y_train_pred_final.Converted_prob.map( lambda x: 1 if x > 0.3 else 0)","3677b7bc":"y_train_pred_final.head()","dc2ada53":"y_train_pred_final['Lead_Score'] = y_train_pred_final.Converted_prob.map( lambda x: round(x*100))","fb30f425":"y_train_pred_final[['Prospect ID','Converted','Converted_prob','Predicted','Lead_Score']].head()","0ff991ad":"# Let's check the overall accuracy.\nmetrics.accuracy_score(y_train_pred_final.Converted, y_train_pred_final.Predicted)","8a337990":"# Confusion Matrix\nconfusion1 = metrics.confusion_matrix(y_train_pred_final.Converted, y_train_pred_final.Predicted )\nconfusion1","3f87dba8":"TP = confusion1[1,1] # true positive \nTN = confusion1[0,0] # true negatives\nFP = confusion1[0,1] # false positives\nFN = confusion1[1,0] # false negatives","dc211715":"# Let's see the sensitivity of our logistic regression model\nTP \/ float(TP+FN)","e0cb6c4d":"# Let us calculate specificity\nTN \/ float(TN+FP)","0626574e":"X_test.head()","a588afc8":"num_cols=X_test.select_dtypes(include=['float64', 'int64']).columns\n\nX_test[num_cols] = scaler.transform(X_test[num_cols])\n\nX_test.head()","6218377b":"X_test = X_test[col]\nX_test.head()","052fe433":"X_test_sm = sm.add_constant(X_test)","27673626":"#prediction on test dataset\ny_test_pred = res.predict(X_test_sm)","4a0419cd":"y_test_pred= y_test_pred.values.reshape(-1)","a9eae12b":"y_test_pred_final = pd.DataFrame({'Prospect ID':y_test.index,'Converted':y_test.values, 'Converted_prob':y_test_pred})\ny_test_pred_final.head()","ef4382ff":"y_test_pred_final['Predicted'] = y_test_pred_final.Converted_prob.map( lambda x: 1 if x > 0.3 else 0)","c26eb5a1":"y_test_pred_final.head()","d116d2df":"# Let's check the overall accuracy.\nmetrics.accuracy_score(y_test_pred_final.Converted, y_test_pred_final.Predicted)","dc820a58":"confusion2 = metrics.confusion_matrix(y_test_pred_final.Converted, y_test_pred_final.Predicted )\nconfusion2","46cabff2":"TP = confusion2[1,1] # true positive \nTN = confusion2[0,0] # true negatives\nFP = confusion2[0,1] # false positives\nFN = confusion2[1,0] # false negatives","e2645336":"# Let's see the sensitivity of our logistic regression model on test dataset\nTP \/ float(TP+FN)","e7340348":"# Let us calculate specificity\nTN \/ float(TN+FP)","4f56821e":"### Model Building","1f24e47f":"### Data Cleaning","9adc417c":"Optimal cutt-off is approx 0.3","30865295":"### Test Dataset","f07b0b5a":"### Checking Numerical Attributes","3e82d06e":"#### Creating dummy columns","c829767f":"#### Dropping asymmetric columns","b2590aba":"#### Checking VIFs"}}