{"cell_type":{"8f53ab33":"code","a2a35c70":"code","cbb6b1be":"code","ddb91b35":"code","ed9a5201":"code","df047dbc":"code","3fc24d3e":"code","bb8b2142":"code","4217f8dc":"code","9a883bef":"code","1b2e842e":"code","fce0e6d6":"code","48c74819":"code","d4daacad":"code","4afcf50b":"code","bd5b7f26":"code","21d2196c":"code","e1df6dd8":"markdown","004da79f":"markdown","26311cde":"markdown","1c6c1fbb":"markdown","797ce7d3":"markdown","40aa04dd":"markdown","db93eef5":"markdown","bec87afa":"markdown"},"source":{"8f53ab33":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a2a35c70":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","cbb6b1be":"from sklearn import datasets as dt \ndados = pd.read_csv('\/kaggle\/input\/hepatitis\/hepatitis.csv')\ndados.head()","ddb91b35":"dados.describe()\n","ed9a5201":"dados.shape\n","df047dbc":"dados.info()\n","3fc24d3e":"dados.isnull().sum()","bb8b2142":"import matplotlib.pyplot as plt\nplt.hist(dados['age'], bins=8, rwidth=0.9)\nplt.title(\"Histograma Idade Doentes\")\nplt.xlabel(\"Idade\")\nplt.ylabel(\"contagem\")\nplt.xlim(0,80)\nplt.ylim(0,80)\nplt.show()","4217f8dc":"dados.keys()","9a883bef":"X = dados.loc[:,'age':'histology']\ny = dados.loc[:,['class']]","1b2e842e":"X.head()","fce0e6d6":"y.head()","48c74819":"from sklearn.preprocessing import StandardScaler\nSS = StandardScaler()\nX = SS.fit_transform(X)","d4daacad":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2)","4afcf50b":"from sklearn.model_selection import train_test_split \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1)","bd5b7f26":"from sklearn.linear_model import Perceptron\npp = Perceptron()\nmodelo = pp.fit(X_train, y_train)\ny_predict = modelo.predict(X_test)","21d2196c":"score = modelo.score(X_test, y_test)\nscore","e1df6dd8":"### Crie o modelo para MLP, treine-o e fa\u00e7a a predi\u00e7\u00e3o com os dados de teste (y_pred)","004da79f":"### Separe o dataset nos atributos de entrada X e objetivo y","26311cde":"### Calcule o Score do Modelo","1c6c1fbb":"### Crie um histograma da distribui\u00e7\u00e3o de idades (age)","797ce7d3":"### importando o dataset","40aa04dd":"### Separe o dataset em Treino e Teste","db93eef5":"### An\u00e1lise explorat\u00f3ria dos dados\n1. Gere a matriz describe do dataset\n2. Verifique quantas linhas e colunas tem o dataset .shape\n3. Verifique as informa\u00e7\u00f5es gerais do dataset .info()\n4. Verifique se h\u00e1 atributos faltantes .isnull().sum()","bec87afa":"### Utilize a biblioteca de pr\u00e9-processamento para normalizar os atributos de entrada (X)"}}