{"cell_type":{"4afab9de":"code","301006a5":"code","7770179b":"code","1effdadf":"code","a846deac":"code","22c709aa":"code","aaf11d02":"code","b4f8f3d0":"code","24dce024":"code","e0bb4820":"code","4419d4fb":"code","b843cfca":"code","e3f2ba9b":"code","03cc7bfd":"code","e56e8d29":"code","4c3f902d":"code","3738cdb2":"code","bed53f55":"code","8306bf62":"code","a9fc965e":"code","a5eed87a":"code","aca84395":"code","09f153a8":"code","46ac4b63":"code","96d94759":"code","542ae262":"code","189b5dd0":"code","a385f578":"code","b7161a36":"code","22342072":"code","b41ce63c":"code","c0edd2e2":"code","17c0d4ba":"code","34645987":"code","6599a280":"code","ce1d1def":"code","ea6c4e93":"code","fec7de66":"code","4a6b07ce":"code","30a9cfd4":"code","6586b6c9":"code","fd4cd622":"code","f36eb57c":"code","cfd13331":"code","30ff316e":"code","1b0139af":"code","4e882e22":"code","281569a5":"code","063058ab":"code","64082c51":"code","30a38406":"code","01eec767":"code","5862873b":"code","810a6306":"code","f6c95dd4":"code","39ea623a":"code","4c8bfaa6":"code","b4086a4b":"code","ecf5b9da":"code","5643c16a":"code","5f495c18":"code","a0d3201a":"code","281d1af3":"code","bfba432c":"code","c9e626a3":"code","b5076ed2":"code","59c822b5":"code","868f4dfa":"code","6f3c131f":"code","3e429ba7":"code","199352cc":"code","820fbf55":"code","2182084f":"code","697eb7bf":"code","f2261906":"code","c4310393":"code","1da2cfb8":"code","c8ee1f92":"code","b69dc472":"code","5fecd149":"code","54824b15":"code","ced6bbf8":"code","f7503e73":"code","4c000fac":"code","19af01ad":"code","cbdd04eb":"code","adf603cf":"code","265e4148":"code","17178744":"code","67b52745":"code","331bb46e":"code","c55875ad":"code","d2ea7ad0":"code","63853fa0":"code","03d0ee9d":"code","2c513a4f":"code","bae51f21":"code","4cda1360":"code","4da52f40":"code","d2867f16":"code","41c39813":"code","f6dbfad9":"code","161609e0":"code","3180f9d6":"code","fdccc1b2":"code","6471189a":"code","a3f25dca":"code","9695b8f0":"code","30996ae5":"code","f26e4416":"code","31b428af":"code","61cf8b94":"code","5b926283":"code","0de5fc99":"code","b6ad45b8":"code","9ebd53a1":"code","f32e02bb":"code","1c7286d8":"code","b37ff102":"code","cfc82e86":"code","0a7b38a3":"code","9ef4c5f4":"code","00c95042":"code","daa4664f":"code","1dc9d45c":"code","55ac1d21":"code","a9d9dc7c":"code","ff402f78":"code","5d987e5d":"code","c72aa159":"code","511cb581":"code","e61cca60":"code","35de9efd":"code","4946aa5c":"code","61cf7775":"code","93652d59":"markdown","7927b704":"markdown","4c1196ba":"markdown","b60ba874":"markdown","f2071fc9":"markdown","e459ac3a":"markdown","b55d1ffa":"markdown","447b8fbc":"markdown","a4ca49a1":"markdown","10e5d578":"markdown","f7517e34":"markdown","3fa32acf":"markdown","830f8961":"markdown","0a1194f7":"markdown","7fb5e5c2":"markdown","71748869":"markdown","c09da590":"markdown","28993352":"markdown","8ca4a44b":"markdown","4d4d1ff8":"markdown","fc40d559":"markdown","e3f32901":"markdown","6865423e":"markdown","bcc9950a":"markdown","18ae17a8":"markdown","6a161257":"markdown","8a94a4a6":"markdown","70398dea":"markdown","febe24db":"markdown","35994f30":"markdown","689236d9":"markdown","56cdf09d":"markdown","cd3ec162":"markdown","7b91e62f":"markdown","daf6bb5e":"markdown","9c4b04d5":"markdown","8860a3b4":"markdown","0977aec3":"markdown","5664c296":"markdown","9e6b07cc":"markdown","7520c38c":"markdown","403ff888":"markdown","b22e57c2":"markdown","12d7b643":"markdown","db60916a":"markdown","10695162":"markdown"},"source":{"4afab9de":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","301006a5":"Ldata = pd.read_csv('\/kaggle\/input\/lead-scoring-x-online-education\/Leads X Education.csv')","7770179b":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pandas_profiling import ProfileReport","1effdadf":"Ldata.head()","a846deac":"print(\"Number of data points in data set\", Ldata.shape)","22c709aa":"Ldata = Ldata.replace(\"Select\",np.nan)","aaf11d02":"round(Ldata.isnull().sum()\/len(Ldata),4)*100","b4f8f3d0":"cols_with_null = Ldata.columns[Ldata.isnull().any()]\n\nfor col in cols_with_null:\n    if Ldata[col].isnull().sum()*100\/Ldata.shape[0]>40:\n        Ldata.drop(col,1,inplace = True)\n        \nLdata.shape ","24dce024":"Ldata = Ldata[Ldata.isnull().sum(axis=1)<=5]","e0bb4820":"Ldata.shape","4419d4fb":"Ldata.head()","b843cfca":"Ldata['Lead Origin'].value_counts(dropna= False)","e3f2ba9b":"Ldata['Lead Source'].value_counts(dropna= False)","03cc7bfd":"Ldata['Lead Source'].fillna(\"Google\",inplace =True)\nLdata['Lead Source']=Ldata['Lead Source'].replace('google','Google')\nLdata['Lead Source']=Ldata['Lead Source'].replace(['Click2call','Social Media','Press_Release','Live Chat','youtubechannel','WeLearn','testone','welearnblog_Home','NC_EDM','Pay per Click Ads','blog'],'Other_Lead_Sources')\nLdata['Lead Source']=Ldata['Lead Source'].str.upper()","e56e8d29":"Ldata['Lead Source'].value_counts(dropna= False)","4c3f902d":"Ldata['Page Views Per Visit'] = Ldata['Page Views Per Visit'].fillna(Ldata['Page Views Per Visit'].mean())","3738cdb2":"Ldata['Specialization'].value_counts(dropna =False)","bed53f55":"Ldata['Specialization'].replace(np.NaN,'Finance Management',inplace=True)","8306bf62":"Ldata['Specialization'].value_counts(dropna =False)","a9fc965e":"Ldata['What matters most to you in choosing a course'].value_counts(dropna=False)","a5eed87a":"Ldata['What matters most to you in choosing a course'].replace(np.NaN,'Better Career Prospects',inplace=True)","aca84395":"Ldata['What matters most to you in choosing a course'].value_counts(dropna=False)","09f153a8":"Ldata['What is your current occupation'].value_counts(dropna=False)","46ac4b63":"Ldata['What is your current occupation'].replace(np.NaN,'Unemployed',inplace= True)","96d94759":"Ldata['What is your current occupation'].value_counts(dropna=False)","542ae262":"Ldata['Tags'].value_counts(dropna= False)","189b5dd0":"Ldata['Tags'] = Ldata['Tags'].str.upper()","a385f578":"Ldata['Last Activity'] = Ldata['Last Activity'].str.upper()","b7161a36":"Ldata['Last Activity'].value_counts(dropna= False)","22342072":"Ldata['Last Activity'].fillna('EMAIL OPENED',inplace =True)","b41ce63c":"Ldata['Country'].fillna('India',inplace =True)","c0edd2e2":"Ldata['Country'].value_counts(dropna= False)","17c0d4ba":"Ldata['Specialization'].value_counts(dropna= False)","34645987":"Ldata = Ldata.drop(['Do Not Email','Do Not Call','Search','Magazine','Newspaper Article','X Education Forums','Newspaper','Digital Advertisement','Through Recommendations','Receive More Updates About Our Courses','Update me on Supply Chain Content','Get updates on DM Content','I agree to pay the amount through cheque'],axis = 1 )","6599a280":"Ldata.shape","ce1d1def":"Ldata['TotalVisits'] = Ldata['TotalVisits'].replace(np.NaN,Ldata['TotalVisits'].median())\nLdata['TotalVisits'].describe()","ea6c4e93":"categorical_data = Ldata.select_dtypes(exclude=[np.number])\ncategorical_data.head()","fec7de66":"threshold = 60 # Anything that occurs less than this will be replaced with \"Other\"\nfor col in categorical_data.columns:\n    value_counts = categorical_data[col].value_counts() # Specific column \n    to_remove = value_counts[value_counts <= threshold].index\n    categorical_data[col].replace(to_remove, \"Other\", inplace=True)","4a6b07ce":"numeric_data = Ldata.select_dtypes(include=[np.number])\nnumeric_data.head()","30a9cfd4":"Ldata_new = pd.concat([categorical_data,numeric_data],axis=1,join = 'inner')","6586b6c9":"Ldata_new.head()","fd4cd622":"Ldata_new['Country'].value_counts(dropna= False)","f36eb57c":"sns.countplot(Ldata_new['Country'])\nplt.show()","cfd13331":"plt.figure(figsize=(15,5))\nsns.countplot(Ldata_new['Last Activity'])\nplt.xticks(rotation=45)\nplt.show()","30ff316e":"plt.figure(figsize=(15,5))\nsns.countplot(Ldata_new['What is your current occupation'])\nplt.xticks(rotation=45)\nplt.show()","1b0139af":"plt.figure(figsize=(15,5))\nsns.countplot(Ldata_new['Specialization'])\nplt.xticks(rotation=45)\nplt.show()","4e882e22":"plt.figure(figsize=(15,5))\nsns.countplot(Ldata_new['Tags'])\nplt.xticks(rotation=45)\nplt.show()","281569a5":"Ldata_new.drop(['Prospect ID','Tags','Country','City'],axis=1 ,inplace=True)","063058ab":"sns.boxplot(Ldata_new['TotalVisits'])\nplt.show()","64082c51":"quant = Ldata_new['TotalVisits'].quantile([0.05,0.95]).values\nLdata_new['TotalVisits'][Ldata_new['TotalVisits'] <= quant[0]] = quant[0]\nLdata_new['TotalVisits'][Ldata_new['TotalVisits'] >= quant[1]] = quant[1]","30a38406":"sns.boxplot(Ldata_new['TotalVisits'])\nplt.show()","01eec767":"sns.boxplot(x=Ldata_new['Total Time Spent on Website'])\nplt.show()","5862873b":"sns.boxplot(Ldata_new['Page Views Per Visit'])\nplt.show()","810a6306":"quant = Ldata_new['Page Views Per Visit'].quantile([0.05,0.95]).values\nLdata_new['Page Views Per Visit'][Ldata_new['Page Views Per Visit'] <= quant[0]] = quant[0]\nLdata_new['Page Views Per Visit'][Ldata_new['Page Views Per Visit'] >= quant[1]] = quant[1]","f6c95dd4":"sns.boxplot(Ldata_new['Page Views Per Visit'])\nplt.show()","39ea623a":"profile = ProfileReport(Ldata, title=\"Pandas Profiling Report\")\n","4c8bfaa6":"profile.to_notebook_iframe()","b4086a4b":"Ldata_new.isnull().sum()\/len(Ldata_new)*100","ecf5b9da":"sns.countplot(x=Ldata_new['Lead Origin'],hue=Ldata['Converted'])\nplt.xticks(rotation=90)\nplt.show()","5643c16a":"sns.countplot(x=Ldata_new['Lead Source'],hue=Ldata['Converted'])\nplt.xticks(rotation=90)\nplt.show()","5f495c18":"sns.countplot(x=Ldata_new['Last Activity'],hue=Ldata['Converted'])\nplt.xticks(rotation=90)\nplt.show()","a0d3201a":"sns.countplot(x=Ldata_new['Specialization'],hue=Ldata['Converted'])\nplt.xticks(rotation=90)\nplt.show()","281d1af3":"sns.countplot(x=Ldata_new['What is your current occupation'],hue=Ldata['Converted'])\nplt.xticks(rotation=90)\nplt.show()","bfba432c":"sns.countplot(x=Ldata_new['What matters most to you in choosing a course'],hue=Ldata['Converted'])\nplt.xticks(rotation=90)\nplt.show()","c9e626a3":"sns.countplot(x=Ldata_new['A free copy of Mastering The Interview'],hue=Ldata['Converted'])\nplt.xticks(rotation=90)\nplt.show()","b5076ed2":"sns.countplot(x=Ldata_new['Last Notable Activity'],hue=Ldata['Converted'])\nplt.xticks(rotation=90)\nplt.show()","59c822b5":"sns.scatterplot(x='Total Time Spent on Website',y='TotalVisits', hue= 'Converted', data= Ldata_new)\nplt.show()","868f4dfa":"sns.scatterplot(x='Total Time Spent on Website',y='Page Views Per Visit', hue= 'Converted', data= Ldata_new)\nplt.show()","6f3c131f":"sns.scatterplot(x='TotalVisits',y='Page Views Per Visit', hue= 'Converted', data= Ldata_new)\nplt.show()","3e429ba7":"plt.figure(figsize = (10,7))\nsns.heatmap(Ldata_new.corr(),annot=True,cmap='YlGnBu')\nplt.show()","199352cc":"Ldata_new.columns","820fbf55":"dummy = pd.get_dummies(Ldata_new[['Lead Origin', 'Lead Source', 'Last Activity', 'Specialization',\n       'What is your current occupation','What matters most to you in choosing a course','Last Notable Activity']],drop_first=True)\ndummy.head()","2182084f":"Ldata_new = pd.concat([Ldata_new,dummy],axis=1)","697eb7bf":"Ldata_new.drop(['Lead Origin', 'Lead Source', 'Last Activity', 'Specialization',\n       'What is your current occupation','What matters most to you in choosing a course','Last Notable Activity'],axis=1,inplace=True)","f2261906":"Ldata_new.head()","c4310393":"Ldata_new['A free copy of Mastering The Interview'] = Ldata_new['A free copy of Mastering The Interview'].map({'Yes':1,'No':0})","1da2cfb8":"Ldata_new","c8ee1f92":"y = Ldata_new['Converted']\nX = Ldata_new.drop(['Converted','Lead Number'],axis=1)","b69dc472":"from sklearn.model_selection import train_test_split\nfrom sklearn import metrics\n\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3,random_state=100)","5fecd149":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()","54824b15":"X_train[['TotalVisits','Total Time Spent on Website','Page Views Per Visit']] = scaler.fit_transform(X_train[['TotalVisits','Total Time Spent on Website','Page Views Per Visit']])\nX_train.head()","ced6bbf8":"sns.distplot(X_train['Total Time Spent on Website'],color = 'blue',label = 'Total Time')\nsns.distplot(X_train['TotalVisits'],color = 'green', label = 'Total Visits')\nsns.distplot(X_train['Page Views Per Visit'],color = 'red',label = 'Page Views')\nplt.legend()\nplt.show()","f7503e73":"from sklearn.linear_model import LogisticRegression \nlr = LogisticRegression()\n\nfrom sklearn.feature_selection import RFE\nrfe = RFE(lr,20)\nrfe = rfe.fit(X_train,y_train)","4c000fac":"rfe.support_","19af01ad":"list(zip(X_train.columns, rfe.support_, rfe.ranking_))","cbdd04eb":"n_col = X_train.columns[rfe.support_]\nX_train.columns[~rfe.support_]","adf603cf":"import statsmodels\nimport statsmodels.api as sm\n\n\nX_train_sm = sm.add_constant(X_train[n_col])\nlogm = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm.fit()\nres.summary()","265e4148":"col1 = n_col.drop('What matters most to you in choosing a course_Other',1)\ncol1","17178744":"X_train_sm = sm.add_constant(X_train[col1])\nlogm2 = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm2.fit()\nres.summary()","67b52745":"col2 = col1.drop('Specialization_Hospitality Management',1)\ncol2","331bb46e":"X_train_sm = sm.add_constant(X_train[col2])\nlogm2 = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm2.fit()\nres.summary()","c55875ad":"col3 = col2.drop('What is your current occupation_Working Professional',1)\ncol3","d2ea7ad0":"X_train_sm = sm.add_constant(X_train[col3])\nlogm2 = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm2.fit()\nres.summary()","63853fa0":"col4 = col3.drop('Lead Origin_Other',1)\ncol4","03d0ee9d":"X_train_sm = sm.add_constant(X_train[col4])\nlogm2 = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm2.fit()\nres.summary()","2c513a4f":"col5 = col4.drop('Lead Source_Other')\ncol5","bae51f21":"X_train_sm = sm.add_constant(X_train[col5])\nlogm2 = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm2.fit()\nres.summary()","4cda1360":"y_train_pred = res.predict(X_train_sm)\ny_train_pred[:10]","4da52f40":"y_train_pred_final = pd.DataFrame({'Converted':y_train.values, 'Converted_prob':y_train_pred.values.reshape(-1)})\ny_train_pred_final['Lead Number'] = y_train.index\ny_train_pred_final.head(10)","d2867f16":"def draw_roc( actual, probs ):\n    fpr, tpr, thresholds = metrics.roc_curve( actual, probs,\n                                              drop_intermediate = False )\n    auc_score = metrics.roc_auc_score( actual, probs )\n    plt.figure(figsize=(5, 5))\n    plt.plot( fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score )\n    plt.plot([0, 1], [0, 1], 'k--')\n    plt.xlim([0.0, 1.0])\n    plt.ylim([0.0, 1.05])\n    plt.xlabel('False Positive Rate or [1 - True Negative Rate]')\n    plt.ylabel('True Positive Rate')\n    plt.title('Receiver operating characteristic example')\n    plt.legend(loc=\"lower right\")\n    plt.show()\n\n    return None","41c39813":"fpr, tpr, thresholds = metrics.roc_curve( y_train_pred_final.Converted, y_train_pred_final.Converted_prob, drop_intermediate = False )","f6dbfad9":"draw_roc(y_train_pred_final.Converted, y_train_pred_final.Converted_prob)","161609e0":"from statsmodels.stats.outliers_influence import variance_inflation_factor\n\nvif = pd.DataFrame()\nvif['Features'] = X_train[col5].columns\nvif['VIF'] = [variance_inflation_factor(X_train[n_col].values, i) for i in range(X_train[col5].shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","3180f9d6":"col6 = col5.drop('Last Notable Activity_SMS Sent')\ncol6","fdccc1b2":"X_train_sm = sm.add_constant(X_train[col6])\nlogm2 = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm2.fit()\nres.summary()","6471189a":"vif = pd.DataFrame()\nvif['Features'] = X_train[col6].columns\nvif['VIF'] = [variance_inflation_factor(X_train[n_col].values, i) for i in range(X_train[col6].shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","a3f25dca":"col7 = col6.drop('What is your current occupation_Student')\ncol7","9695b8f0":"X_train_sm = sm.add_constant(X_train[col7])\nlogm2 = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm2.fit()\nres.summary()","30996ae5":"y_train_pred = res.predict(X_train_sm)\ny_train_pred[:10]","f26e4416":"y_train_pred_final = pd.DataFrame({'Converted':y_train.values, 'Converted_prob':y_train_pred.values.reshape(-1)})\ny_train_pred_final['Lead Number'] = y_train.index\ny_train_pred_final.head(10)","31b428af":"fpr, tpr, thresholds = metrics.roc_curve( y_train_pred_final.Converted, y_train_pred_final.Converted_prob, drop_intermediate = False )","61cf8b94":"draw_roc(y_train_pred_final.Converted, y_train_pred_final.Converted_prob)","5b926283":"numbers = [float(x)\/10 for x in range(10)]\nfor i in numbers:\n    y_train_pred_final[i]= y_train_pred_final.Converted_prob.map(lambda x: 1 if x > i else 0)\ny_train_pred_final.head()","0de5fc99":"cutoff_df = pd.DataFrame( columns = ['prob','accuracy','sensi','speci'])\nfrom sklearn.metrics import confusion_matrix\n\n# TP = confusion[1,1] # true positive \n# TN = confusion[0,0] # true negatives\n# FP = confusion[0,1] # false positives\n# FN = confusion[1,0] # false negatives\n\nnum = [0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]\nfor i in num:\n    cm1 = metrics.confusion_matrix(y_train_pred_final.Converted, y_train_pred_final[i] )\n    total1=sum(sum(cm1))\n    accuracy = (cm1[0,0]+cm1[1,1])\/total1\n    \n    speci = cm1[0,0]\/(cm1[0,0]+cm1[0,1])\n    sensi = cm1[1,1]\/(cm1[1,0]+cm1[1,1])\n    cutoff_df.loc[i] =[ i ,accuracy,sensi,speci]\nprint(cutoff_df)","b6ad45b8":"cutoff_df.plot.line(x='prob', y=['accuracy','sensi','speci'])\nplt.show()","9ebd53a1":"y_train_pred_final['final_predicted'] = y_train_pred_final.Converted_prob.map( lambda x: 1 if x > 0.35 else 0)\n\ny_train_pred_final.head()","f32e02bb":"y_train_pred_final['Lead_Score'] = y_train_pred_final.Converted_prob.map( lambda x: round(x*100))\n\ny_train_pred_final.head()","1c7286d8":"metrics.accuracy_score(y_train_pred_final.Converted, y_train_pred_final.final_predicted)\n\nconfusion2 = metrics.confusion_matrix(y_train_pred_final.Converted, y_train_pred_final.final_predicted )\nconfusion2\n\nTP = confusion2[1,1] # true positive \nTN = confusion2[0,0] # true negatives\nFP = confusion2[0,1] # false positives\nFN = confusion2[1,0] # false negatives","b37ff102":"round(TP \/ float(TP+FN),2)","cfc82e86":"round(TN \/ float(TN+FP),2)","0a7b38a3":"X_test[['Total Time Spent on Website']] = scaler.fit_transform(X_test[['Total Time Spent on Website']])\nX_test.head()","9ef4c5f4":"X_test = X_test[col7]","00c95042":"X_test.head()","daa4664f":"X_test_sm = sm.add_constant(X_test)\ny_test_pred= res.predict(X_test_sm)\ny_test_pred[:10]","1dc9d45c":"y_pred_1 = pd.DataFrame(y_test_pred)\ny_test_df = pd.DataFrame(y_test)\ny_test_df['Lead Number'] = y_test_df.index","55ac1d21":"y_pred_1.reset_index(drop=True,inplace=True)\ny_test_df.reset_index(drop=True,inplace=True)\ny_pred_final = pd.concat([y_test_df,y_pred_1],axis=1)\ny_pred_final.head()","a9d9dc7c":"y_pred_final = y_pred_final.rename(columns={0 : 'Conversion_Prob'})\ny_pred_final.head()","ff402f78":"y_pred_final['final_predicted'] = y_pred_final['Conversion_Prob'].map(lambda x: 1 if x>0.3  else 0)\ny_pred_final.head()","5d987e5d":"round(metrics.accuracy_score(y_pred_final.Converted, y_pred_final.final_predicted),2)","c72aa159":"confusion3 = metrics.confusion_matrix(y_pred_final.Converted, y_pred_final.final_predicted)\nconfusion3","511cb581":"TP = confusion3[1,1]\nTN = confusion3[0,0]\nFP = confusion3[0,1]\nFN = confusion3[1,0]","e61cca60":"round(TP\/float(FN+TP),2)","35de9efd":"round(TN\/float(TN+FP),2)","4946aa5c":"feat_importance = res.params[1:]\nfeat_importance = 100.0*(feat_importance\/feat_importance.max())\n\nsorted_idx = np.argsort(feat_importance,kind= 'quicksort',order = 'list of str')\nsorted_idx","61cf7775":"plt.figure(figsize = (15,10))\npos= np.arange(sorted_idx.shape[0])\n\nfeatfig = plt.figure(figsize = (15,10))\nfeatax = featfig.add_subplot(1,1,1)\nfeatax.barh(pos,feat_importance[sorted_idx])\nfeatax.set_yticks(pos)\nfeatax.set_yticklabels(np.array(X_train[col7].columns)[sorted_idx])\nfeatax.set_xlabel('Relative Feature Importance')\n\nplt.tight_layout()\nplt.show()","93652d59":"### Plotting ROC Curve","7927b704":"### Replacing Less Frequent Labels with Other","4c1196ba":"### Sensitivity","b60ba874":"## Checking For Outliers in Numerical Data Set","f2071fc9":"### Categorical Variable Analysis","e459ac3a":"## Check for Specificity","b55d1ffa":"### Dropping Column What is your current occupation_Student from Model","447b8fbc":"### Replacing less frequent labels to Others","a4ca49a1":"### Splitting DataSet into Train and Test","10e5d578":"1. Streams like Financial Management, Humar Resource and Marketing Management attracts high LEADS","f7517e34":"### Checking For Overall Accuracy, Sensitivity and Specificity","3fa32acf":"1. Lead Add Form has high conversion rate, but the traffic is low\n2. API and Landing Page Submissions has high traffic and they need to be imporved for better conversion","830f8961":" ### As we can observe columns like \"How did you hear about X Education\" and \"Lead Profile\" has maximum number of null values","0a1194f7":"# Dividing into X and Y sets for Model Building","7fb5e5c2":"Imputing Missing Values in the columns if Any","71748869":"# EDA","c09da590":"### Creating Dummy Variables","28993352":"### Keeping True Columns Only","8ca4a44b":"# **Data Quality Checks**","4d4d1ff8":"1. Highly Skewed population","fc40d559":"1. Tags columns i supdated by Sales team, so can be dropped\n2. Prespect ID and Lead Number is Unique ID to each customer\n3. Since X Education is an online Platform, Country and City doesnt really add any useful information, can be dropped\n","e3f32901":"# Let's Check For Overall Accuracy","6865423e":"### Dropping Column Lead Source_REFERENCE from model as p-value i spretty high 0.7 which is greater than alpha(0.05)","bcc9950a":"## Check for Sensitivity","18ae17a8":"## Plotting feature variables based on their relative coefficients ","6a161257":"## Looking For Optimum Cut-Off point","8a94a4a6":"1. More number of Visits and Total Time Spent on Website leads to successful conversion ","70398dea":"1. Googe and Direct Traffic has high traffic and should focus to get better coversion rate","febe24db":"### Looking at the results, Dropping highly skewed columns","35994f30":"### Checking for VIF","689236d9":"### HeatMap","56cdf09d":"## UniVariate and BiVariate Analysis","cd3ec162":"1. Email Opened and SMS sent has higher conversion rates as compared to other labels","7b91e62f":"## Assigning LEAD Score Probability","daf6bb5e":"# Make Data Model Ready: Encoding Numerical and Categorcal Columns","9c4b04d5":"1. More of Unemployed students are enrolling into online courses to get better placements","8860a3b4":"#### Dropping rows with more than 5 null values","0977aec3":"# Making Predictions on Test Set","5664c296":"### Dropping Columns With high null values","9e6b07cc":"# Applying Logistic Regression on Train Data Set","7520c38c":"## This Plot Suggests 0.4 is the Optimum Cut Off value","403ff888":"### Dropping column Last Notable Activity_SMS Sent from model ","b22e57c2":"### Specificity","12d7b643":"### Plotting ROC Curve on Train set","db60916a":"### Numerical Selection","10695162":"### Replacing Select Values with Null Values"}}