{"cell_type":{"f54e485c":"code","756107e0":"code","49dd14c4":"code","075d322c":"code","d08a5dc5":"code","8597b84d":"code","a0ddc72a":"code","59542283":"code","83447e8b":"code","10f1be99":"code","bf6c91cd":"code","e02e534e":"code","a45068be":"code","1f4586b1":"code","ac5dcaec":"code","37de6ef8":"code","af32c994":"code","9bb2edc8":"code","5aff4332":"code","a94baf64":"code","5c74db2f":"code","7dc8850f":"code","b2132ca9":"code","8af16097":"code","4e7d237f":"code","195c06f8":"markdown","6fc36361":"markdown","b38e9fd2":"markdown","f04db8c9":"markdown","245ff561":"markdown","97eb83c2":"markdown","d4febf79":"markdown","7538fbc0":"markdown","b37cd9a6":"markdown","72b63dac":"markdown"},"source":{"f54e485c":"print('Initial steps: Ingesting, pre processing data')","756107e0":"#importing libraries\n\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport plotly.plotly as py\nimport seaborn as sns \nimport numpy as np\nimport pandas as pd\nimport numpy as np\nimport random as rnd\n%matplotlib inline\nfrom math import sin, cos, sqrt, atan2, radians","49dd14c4":"#Loading needed databases\n\nSchool_exp = pd.read_csv(\"..\/input\/data-science-for-good\/2016 School Explorer.csv\")\nD5 = pd.read_csv(\"..\/input\/data-science-for-good\/D5 SHSAT Registrations and Testers.csv\")\nSchool_safety = pd.read_csv(\"..\/input\/ny-2010-2016-school-safety-report\/2010-2016-school-safety-report.csv\")\nSHSAT = pd.read_csv(\"..\/input\/2017-2018-shsat-admissions-test-offers-by-schools\/2017-2018 SHSAT Admissions Test Offers By Sending School.csv\")\nCenter_list = pd.read_csv(\"..\/input\/passnyc-resource-centers\/passnyc-resource-centers.csv\")\nSchool_demo = pd.read_csv(\"..\/input\/ny-school-demographics-and-accountability-snapshot\/2006-2012-school-demographics-and-accountability-snapshot.csv\")","075d322c":"#Preprocessing\n\nD5.set_index('Year of SHST',inplace=True, drop=True) #Changing index \nD5 = D5.drop([2013, 2014, 2015]) ##Dropping rows that will not be used\n\nSchool_safety.set_index('School Year',inplace=True, drop=True) #Changing index \nSchool_safety = School_safety.drop(['2013-14','2014-15'])  ##Dropping columns that will not be used\n\nSchool_safety = School_safety.dropna(subset = ['DBN'])\n\nSchool_exp = pd.merge(School_exp, School_safety, how='left', left_on='Location Code', right_on='DBN')\nSchool_exp = pd.merge(School_exp, SHSAT, how='left', left_on='DBN', right_on='School DBN')\n\n","d08a5dc5":"School_exp.set_index('DBN',inplace=True, drop=True)\nD5.set_index('DBN',inplace=True, drop=True)\nSchool_exp = School_exp.join(D5)\n\nSchool_exp = School_exp.drop(columns=['Adjusted Grade','New?','Other Location Code in LCGMS','Location Code_x','SED Code','Grade Low','Grade 3 ELA - All Students Tested','Grade 3 ELA 4s - All Students','Grade 3 ELA 4s - American Indian or Alaska Native','Grade 3 ELA 4s - Black or African American','Grade 3 ELA 4s - Hispanic or Latino','Grade 3 ELA 4s - Asian or Pacific Islander','Grade 3 ELA 4s - White','Grade 3 ELA 4s - Multiracial','Grade 3 ELA 4s - Limited English Proficient','Grade 3 ELA 4s - Economically Disadvantaged','Grade 3 Math - All Students tested','Grade 3 Math 4s - All Students','Grade 3 Math 4s - American Indian or Alaska Native','Grade 3 Math 4s - Black or African American','Grade 3 Math 4s - Hispanic or Latino','Grade 3 Math 4s - Asian or Pacific Islander','Grade 3 Math 4s - White','Grade 3 Math 4s - Multiracial','Grade 3 Math 4s - Limited English Proficient','Grade 3 Math 4s - Economically Disadvantaged','Grade 4 ELA - All Students Tested','Grade 4 ELA 4s - All Students','Grade 4 ELA 4s - American Indian or Alaska Native','Grade 4 ELA 4s - Black or African American','Grade 4 ELA 4s - Hispanic or Latino','Grade 4 ELA 4s - Asian or Pacific Islander','Grade 4 ELA 4s - White','Grade 4 ELA 4s - Multiracial','Grade 4 ELA 4s - Limited English Proficient','Grade 4 ELA 4s - Economically Disadvantaged','Grade 4 Math - All Students Tested','Grade 4 Math 4s - All Students','Grade 4 Math 4s - American Indian or Alaska Native','Grade 4 Math 4s - Black or African American','Grade 4 Math 4s - Hispanic or Latino','Grade 4 Math 4s - Asian or Pacific Islander','Grade 4 Math 4s - White','Grade 4 Math 4s - Multiracial','Grade 4 Math 4s - Limited English Proficient','Grade 4 Math 4s - Economically Disadvantaged','Grade 5 ELA - All Students Tested','Grade 5 ELA 4s - All Students','Grade 5 ELA 4s - American Indian or Alaska Native','Grade 5 ELA 4s - Black or African American','Grade 5 ELA 4s - Hispanic or Latino','Grade 5 ELA 4s - Asian or Pacific Islander','Grade 5 ELA 4s - White','Grade 5 ELA 4s - Multiracial','Grade 5 ELA 4s - Limited English Proficient','Grade 5 ELA 4s - Economically Disadvantaged','Grade 5 Math - All Students Tested','Grade 5 Math 4s - All Students','Grade 5 Math 4s - American Indian or Alaska Native','Grade 5 Math 4s - Black or African American','Grade 5 Math 4s - Hispanic or Latino','Grade 5 Math 4s - Asian or Pacific Islander','Grade 5 Math 4s - White','Grade 5 Math 4s - Multiracial','Grade 5 Math 4s - Limited English Proficient','Grade 5 Math 4s - Economically Disadvantaged','Grade 6 ELA - All Students Tested','Grade 6 ELA 4s - All Students','Grade 6 ELA 4s - American Indian or Alaska Native','Grade 6 ELA 4s - Black or African American','Grade 6 ELA 4s - Hispanic or Latino','Grade 6 ELA 4s - Asian or Pacific Islander','Grade 6 ELA 4s - White','Grade 6 ELA 4s - Multiracial','Grade 6 ELA 4s - Limited English Proficient','Grade 6 ELA 4s - Economically Disadvantaged','Grade 6 Math - All Students Tested','Grade 6 Math 4s - All Students','Grade 6 Math 4s - American Indian or Alaska Native','Grade 6 Math 4s - Black or African American','Grade 6 Math 4s - Hispanic or Latino','Grade 6 Math 4s - Asian or Pacific Islander','Grade 6 Math 4s - White','Grade 6 Math 4s - Multiracial','Grade 6 Math 4s - Limited English Proficient','Grade 6 Math 4s - Economically Disadvantaged','Grade 7 ELA 4s - American Indian or Alaska Native','Grade 7 ELA 4s - Asian or Pacific Islander','Grade 7 ELA 4s - Multiracial','Grade 7 ELA 4s - Economically Disadvantaged','Grade 7 Math 4s - American Indian or Alaska Native','Grade 7 Math 4s - Asian or Pacific Islander','Grade 7 Math 4s - Multiracial','Grade 8 ELA 4s - American Indian or Alaska Native','Grade 8 ELA 4s - Asian or Pacific Islander','Grade 8 Math 4s - American Indian or Alaska Native','Grade 8 Math 4s - Asian or Pacific Islander','Grade 8 Math 4s - Multiracial','Building Code','Location Name','Location Code_y','Address','Borough_x','Geographical District Code','Register','Building Name','# Schools','Schools in Building','Postcode','Latitude_y','Longitude_y','BBL','NTA','School DBN','Borough_y','School Category','School Name_y'])\n                                      \nSchool_exp = School_exp[School_exp['Grade High'] != '0K']\nSchool_exp['Grade High'] = School_exp['Grade High'].astype(np.object).astype(int)\n\nSchool_demo.set_index('schoolyear', inplace=True, drop=True)\nSchool_demo = School_demo.drop([20052006, 20062007, 20072008, 20082009, 20092010, 20102011])\nSchool_demo = School_demo.fillna(0)\nSchool_demo.set_index('DBN',inplace=True, drop=True)\nSchool_demo.grade6 = School_demo[['grade6']].convert_objects(convert_numeric=True).fillna(0)\nSchool_demo.grade7 = School_demo[['grade7']].convert_objects(convert_numeric=True).fillna(0)\nSchool_demo.grade8 = School_demo[['grade8']].convert_objects(convert_numeric=True).fillna(0)\nSchool_demo['Reach'] = School_demo['grade7'] + School_demo['grade8'] + School_demo['grade6']\nSchool_demo['grade7'] = School_demo['grade7'].astype(np.object).astype(float)\n\nSchool_exp = pd.merge(School_exp, School_demo, how='left', left_on='DBN', right_on='DBN')\n\nfor col in School_exp.columns.values:\n    if col.startswith(\"Percent\") or col.endswith(\"%\") or col.endswith(\"Rate\"):\n        School_exp[col] = School_exp[col].astype(np.object).str.replace('%', '').astype(float)\n\nSchool_exp.replace(np.NaN,0, inplace=True)\n\nSchool_exp['grade7'] = School_exp['grade7'].astype(np.object).astype(float)\n\n#Add conditional subset flags\n\nSchool_exp['Minority'] = np.where(School_exp['Percent Black \/ Hispanic']>60, 'Minority', 'no')\n\nSchool_exp['7to9'] = np.where(School_exp['Grade High']>6, 'SHST', 'no')","8597b84d":"print('Creating our clusters')","a0ddc72a":"#Creating our recommendation clusters\n\nSchool_exp['Cluster 1'] = np.where((School_exp['Number of students who registered for the SHSAT']<35) & (School_exp['7to9'] == 'SHST'), 'Awareness', 'no')\nSchool_exp['Cluster 2'] = np.where((School_exp['Cluster 1'] == 'Awareness') & (School_exp['Average ELA Proficiency'] > 2.3) & (School_exp['Average Math Proficiency'] > 2.3), 'Mentoring', 'no')\nSchool_exp['Cluster 3'] = np.where((School_exp['Cluster 1'] == 'Awareness') & (School_exp['Supportive Environment %'] < 85), 'Afterschool programs', 'no')\nSchool_exp['Cluster 4'] = np.where((School_exp['7to9'] == 'SHST') & (School_exp['Percent of eight grade students who received offer'] < 10) & (School_exp['Rigorous Instruction %'] < 85), 'Test prep', 'no')\n","59542283":"#Nearest resource center locator\n\nplace = []\ndist = []\nfor i in range(1282):\n    dist.append(99999)\nR = 3959.0\n\nfor i in range(1282):\n    lat1 = radians(School_exp['Latitude_x'][i])\n    lon1 = radians(School_exp['Longitude_x'][i])\n    center_name = ''\n    for j in range(82):\n        lat2 = radians(Center_list['Lat'][j])\n        lon2 = radians(Center_list['Long'][j])\n        \n        if Center_list['Test Prep'][j] == 1 and School_exp['Cluster 4'][i] == 'Test prep':\n            dlon = lon2 - lon1\n            dlat = lat2 - lat1\n            a = sin(dlat \/ 2)**2 + cos(lat1) * cos(lat2) * sin(dlon \/ 2)**2\n            c = 2 * atan2(sqrt(a), sqrt(1 - a))\n            distance = R * c\n            if dist[i] > distance:\n                center_name = Center_list['Resource Center Name'][j]\n                dist[i] = round(distance,1)\n                \n        if Center_list['After School Program'][j] == 1 and School_exp['Cluster 3'][i] == 'Afterschool programs':\n            dlon = lon2 - lon1\n            dlat = lat2 - lat1\n            a = sin(dlat \/ 2)**2 + cos(lat1) * cos(lat2) * sin(dlon \/ 2)**2\n            c = 2 * atan2(sqrt(a), sqrt(1 - a))\n            distance = R * c\n            if dist[i] > distance:\n                center_name = Center_list['Resource Center Name'][j]\n                dist[i] = round(distance,1)\n\n    place.append(center_name)","83447e8b":"School_awareness = School_exp.loc[School_exp['Cluster 1'] == 'Awareness']\nSchool_awareness = School_awareness[['School Name_x', 'Reach']]\nSchool_awareness['Awareness_rank']=School_awareness['Reach'].rank(ascending=0)\n","10f1be99":"School_awareness = School_awareness.sort_values(by=['Awareness_rank'], ascending=[True]) #sort based on order of priority\nSchool_awareness.to_csv('1_Increase_awareness.csv')","bf6c91cd":"print(School_awareness.head(n=10))\n\nprint('Please note: The entire ranked list will be available as an output of this notebook')","e02e534e":"Inc_participation = School_exp.loc[School_exp['Cluster 2'] == 'Mentoring']\nInc_participation = Inc_participation[['School Name_x', 'Average ELA Proficiency', 'Average Math Proficiency']]\nInc_participation['Proficiency'] = Inc_participation['Average ELA Proficiency'] + Inc_participation['Average Math Proficiency']\nInc_participation['Mentoring_rank']=Inc_participation['Proficiency'].rank(ascending=0)","a45068be":"Inc_participation = Inc_participation.sort_values(by = ['Mentoring_rank'], ascending=[True]) #sort based on order of priority\nInc_participation.to_csv('2_Offer_mentoring.csv')","1f4586b1":"print(Inc_participation.head(n=10))\n\nprint('Please note: The entire ranked list will be available as an output of this notebook')","ac5dcaec":"Afterschool_prog = School_exp.loc[School_exp['Cluster 3'] == 'Afterschool programs']\nAfterschool_prog = Afterschool_prog[['School Name_x', 'Supportive Environment %']]\n\nAfterschool_prog['Afterschool_rank']=Afterschool_prog['Supportive Environment %'].rank(ascending=0)","37de6ef8":"Afterschool_prog = Afterschool_prog.sort_values(by = ['Afterschool_rank'], ascending=[True]) #sort based on order of priority\n\nAfterschool_prog.to_csv('3_Afterschool_programs.csv')","af32c994":"print(Afterschool_prog.head(n=10))\n\nprint('Please note: The entire ranked list will be available as an output of this notebook')","9bb2edc8":"Test_prep = School_exp.loc[School_exp['Cluster 4'] == 'Test prep']\nTest_prep = Test_prep[['School Name_x', 'Economic Need Index', 'Rigorous Instruction %', 'Percent of eight grade students who received offer']]\nTest_prep['Prep_rank']=Test_prep['Economic Need Index'].rank(ascending=0)","5aff4332":"Test_prep = Test_prep.sort_values(by = ['Prep_rank'], ascending=[True]) #sort based on order of priority\n\nTest_prep.to_csv('4_Test_prep.csv')","a94baf64":"print(Test_prep.head(n=10))\n\nprint('Please note: The entire ranked list will be available as an output of this notebook')","5c74db2f":"#Making the csv for distance between all the Partner Resource Centers and the schools\n\nrows = 1283\ncolumns = 83\nCenter_school = [[0 for x in range(columns)] for y in range(rows)] \nfor i in range(1,1283):\n    lat1 = radians(School_exp['Latitude_x'][i-1])\n    lon1 = radians(School_exp['Longitude_x'][i-1])\n    for j in range(1,83):\n        lat2 = radians(Center_list['Lat'][j-1])\n        lon2 = radians(Center_list['Long'][j-1])\n        dlon = lon2 - lon1\n        dlat = lat2 - lat1\n        a = sin(dlat \/ 2)**2 + cos(lat1) * cos(lat2) * sin(dlon \/ 2)**2\n        c = 2 * atan2(sqrt(a), sqrt(1 - a))\n        distance = R * c\n        Center_school[i][j] = round(distance,1)\n\nColumns_csv = [0 for x in range(83)]\n\nfor i in range(1,1282):\n    Center_school[i][0] = School_exp['School Name_x'][i]\nfor j in range(1,82):\n    Center_school[0][j] = Center_list['Resource Center Name'][j]\n\nResource_school = pd.DataFrame(Center_school)\nResource_school.to_csv('5_Resource center vs Schools Distance.csv')","7dc8850f":"#Making csv for Cluster 3 : Increasing Awareness\n\nCluster_3 = School_exp[['School Name_x', 'Cluster 3']]\nCluster_3['Nearest Resource Center'] = place\nCluster_3['Distance to the Nearest Resource Center'] = dist\ncols = Cluster_3.columns\ncols = cols.map(lambda x: x.replace(' ', '_') if isinstance(x, (str, '')) else x)\nCluster_3.columns = cols\nCluster_3 = Cluster_3.drop(Cluster_3[Cluster_3.Cluster_3 == 'no'].index)\nCluster_3 = Cluster_3.drop(columns=['Cluster_3'])\ncols = Cluster_3.columns\ncols = cols.map(lambda x: x.replace('_', ' ') if isinstance(x, (str, '')) else x)\nCluster_3.columns = cols\nCluster_3.to_csv('6_Partners for After School Programs.csv')","b2132ca9":"print(Cluster_3.head(n=10))\n\nprint('Please note: The entire list will be available as an output of this notebook')","8af16097":"#Making csv for Cluster 4 : Test Prep\n\nCluster_4 = School_exp[['School Name_x', 'Cluster 4']]\nCluster_4['Nearest Resource Center'] = place\nCluster_4['Distance to the Nearest Resource Center'] = dist\ncols = Cluster_4.columns\ncols = cols.map(lambda x: x.replace(' ', '_') if isinstance(x, (str, '')) else x)\nCluster_4.columns = cols\nCluster_4 = Cluster_4.drop(Cluster_4[Cluster_4.Cluster_4 == 'no'].index)\nCluster_4 = Cluster_4.drop(columns=['Cluster_4'])\ncols = Cluster_4.columns\ncols = cols.map(lambda x: x.replace('_', ' ') if isinstance(x, (str, '')) else x)\nCluster_4.columns = cols\nCluster_4.to_csv('7_Partners for Test Prep.csv')","4e7d237f":"print(Cluster_4.head(n=10))\n\nprint('Please note: The entire list will be available as an output of this notebook')","195c06f8":"**Increase participation** \n\n(Increase awareness + offer mentoring and counselling)\n\nAbove average ELA, Math scores indicate that students need a bit of push to become SHST ready, therefore maybe prime candidates for mentoring and counselling to help them up their game\n\nList of schools is ranked based on a sum of the school average ELA and Math score\n\nHere are the top 10 schools in this list:","6fc36361":"**Schools - Resource centre matching  - Afterschool programs**\n\nWe have used our earlier list of schools that would benefit from afterschool programs to match with centres that offer such programs.\n\nIn this list you will be able to see which is the nearest resource centre to these schools","b38e9fd2":"**Schools - Resource centre matching  - Test prep**\n\nWe have used our earlier list of schools that would benefit from test prepto match with centres that offer such programs.\n\nIn this list you will be able to see which is the nearest resource centre to these schools","f04db8c9":"**Offer programmatic interventions** \n\nIn this recommendation, we offer two lists of schools\n\n1. Schools that may benefit from afterschool programs as they lack a supportive environment. \n\nWe feel that adding the option of spending time in a \"safe space\"' may help a student be more forward thinking and help them break out of a cycle that deprioritises education\n\n2. Schools that will benefit from access to test prep centers\n\nThis is based on the data where a school has people who take SHST but are unable to get offers (less than 10% success rate), couple with the fact that these schools have poor rating on the \"Rigorous instruction\" rating\n\nPlease note that these lists are subsets of the previous lists, ie, we are still \n","245ff561":"**Increasing awareness**\n\nHere are our recommendations for schools to focus on for increasing awareness. \nThis list contains schools that have more than 60% black\/hispanic population and is ranked based on the total number of students across grades 7, 8 and 9 to help you prioritise your efforts.\n\nHere are the top 10 schools in this list:","97eb83c2":"We hope that our analysis was useful for you and will help you in the amazing work you are doing. \n\nWe tried to align our efforts to the PASSNYC directive of keeping the model influential and shareable in its reproducibility and customisability as well as making the logic of it easy to articulate.\n\nA lot of the data that we have presented here can be easily recreated using spreadsheets, and we would be glad to offer you the excel versions of these calculations as well.\n\n*Thanks for reading through our submission,\n\nMansi & Samarth*\n","d4febf79":"**Schools that may benefit from afterschool programs**\n\nThis list is sorted based on the \"Supportive environment\" rating for the school.\n\n*Please note that this list is a subset of the previous two recommendations, as it is still filtered on schools that have a large percentage of minority students and offer atleast grade 7*\n\nIn the list below, you will notice that our top entry in ranked as 21... our ranking starts from this number, apologies for the bug :(","7538fbc0":"**Matching schools with each of the PASSNYC resource centres. **\n\nOur first output helps you quickly identify which schools are nearby which resource centre through a comprehensive array.\n\n*Please note that all distance is in miles*","b37cd9a6":"**Schools that will benefit from access to test prep centers**\n\nCreated based on a combination of lack of rigorous instruction and low success rate in SHST\n\nThis list is sorted based on the \"Economic index\" for the school.\n\n*Please note that this list is of ALL schools, as we believe that this is a crucial intervention, where despite being motivated to appear for SHST, our hypothesis is that the poor economic status does not allow them to explore premium tutoring options*","72b63dac":"**Introduction**\n\n**Defining the problem statement**\n\n**Datasets used**\n\n**Scope and assumptions**\n\n**Recommendations**\n\n**Introduction**\n\nOur solution is a simple approach that, in our humble opinion, aligns most directly with PassNYC&#39;s mission statement:\n\n>PASSNYC aims to identify talented underserved students within New York City&#39;s underperforming school districts in order to increase the diversity of students taking the Specialized High School Admissions Test.\n\nIn our solution, we will attempt to support this mission in the one way that we can \u2013 by enabling data driven decisioning. Our main guiding principles in approaching this exercise were:\n\n- **Take an open and transparent approach to using data**\n- **Make the approach easy to replicate or customise**\n- **Make the logic behind the recommendations easily explainable and, therefore, usable to all stakeholders**\n- **Align most strongly to the main mission \u2013 &quot;**** identifying talented underserved students **_\u2026 in order to_** increase diversity** _of students taking the Specialized High School Admissions Test.&quot;_\n\nWe have consciously steered away from the temptation of applying a machine learning algorithm to this data, as we felt that that would make our solution less user friendly or reproduceable, without adding any extra value.\n\nOur entire approach can be easily reproduced using a spreadsheet, and therefore has no dependence on a technical team to translate into a working model.\n\nWe will be happy to share the original excel model on request as well.\n\n**Defining the problem statement**\n\nPASSNYC and its partners provide outreach services that improve the chances of students taking the SHSAT and receiving placements in these specialized high schools.\n\n>**Identify the schools where minority and underserved students stand to gain the most from services like after school programs, test preparation, mentoring, or resources for parents.**\n\nI am further using the inputs given by Ryan J S Baxter and Akeel6passnyc in the recent AMA:\n\n>&quot;Outreach efforts can be broad and relatively inexpensive (targeted mailers, information handouts, email campaigns, etc), while programmatic interventions (prep courses, workshops, tutoring, etc) are more expensive and are designed to actually impact scores rather than simply engage families in learning about the tests. PASSNYC is engaged in multi-tiered approach to this problem and looking to create **solutions to awareness** (knowing about the test and schools), **participation** (taking the test), **and preparedness** (preparing for the test). NYC schools tend to have 100 - 300 students per grade so most outreach efforts target the entire grade while most programmatic interventions target participation from one fourth to one half of a grade at a particular school.&quot;\n\n>&quot;this particular project (the kernel) is focused on **increasing test taking** our larger mission seeks to develop solutions that will also support **other elements such as preparation**.&quot;\n\n**Datasets**   **used**\n\nApart from the datasets provided in the challenge, we will be using the following open datasets:\n\nMandatory datasets [https:\/\/www.kaggle.com\/passnyc\/data-science-for-good](https:\/\/www.kaggle.com\/passnyc\/data-science-for-good)\n\n1. School explorer\n2. D5 SHSAT registration data\n\nSocrata datasets\n\n1. NYC school safety report [https:\/\/www.kaggle.com\/new-york-city\/ny-2010-2016-school-safety-report](https:\/\/www.kaggle.com\/new-york-city\/ny-2010-2016-school-safety-report)\n2. NY School Demographics and Accountability Snapshot [https:\/\/www.kaggle.com\/new-york-city\/ny-school-demographics-and-accountability-snapshot](https:\/\/www.kaggle.com\/new-york-city\/ny-school-demographics-and-accountability-snapshot)\n\nOther datasets\n\n1. PASSNYC resource centers [https:\/\/www.kaggle.com\/infocusp\/passnyc-resource-centers](https:\/\/www.kaggle.com\/infocusp\/passnyc-resource-centers) (created by Infocusp)\n2. NYC ELA and Math State Test Results [https:\/\/www.kaggle.com\/araraonline\/nys-ela-and-math-test-results](https:\/\/www.kaggle.com\/araraonline\/nys-ela-and-math-test-results) (shared by Andr\u00e9 Alc\u00e2ntara, similar to the open data)\n\n**Scope and assumptions**\n\nOur solution will be restricted to schools that\n\n- Offer grades 7, 8 or 9 (the grades in which you are eligible to take SHSAT)\n- Have a high percentage of blacks \/ hispanics (as these are the underrepresented communities)\n\nThis scope is based on the following:\n\n- Most data points like economic index, geographical demography, school safety parameters are strongly related to the percentage of blacks\/Hispanics\n- Asians have been excluded from this recommendation as they are not under represented in the SHST schools\n- As this test is taken in the middle grades, therefore most impact will be felt by reaching out to schools that offer atleast upto 7th grade\n\n**Recommendations**\n\nAt the end of this notebook, you will be able to download csv files with schools ranked in order of priority for each of the following reccomendations\n\n1. **Increasing awareness** (targeted mailers, information handouts, email campaigns, etc)\n  - The main parameter for this recommendation will be low participation in the SHSAT test\n2. **Increase participation** (Increase awareness + offer mentoring and counselling)\n  - This recommendation will use a combination of the above parameter and also parameters like the Math and ELA scores to further present schools that seem to have good quality of education and therefore may not require any other intervention\n  - We will further try to offer more targeted recommendations based on inputs from the school safety report to offer after school programs in areas that may benefit from access to safe spaces and community activities. (This is based on the assumption that children from unsafe areas may not be prioritising their education, and require some counselling and mentoring)\n3. **Increasing preparedness through programmatic interventions** (prep courses, workshops, tutoring, etc\n  - As this is the most expensive intervention, we will focus on schools that are already participating in SHSATs but are receiving very few offers.\n  - This recommendation uses a combinations of participation, average scores and the success rate of the participating students' ability to receive the SHSAT offer\n\nApart from the above recommendations, there will be a list that **matches schools**** with ****each of the PASSNYC resource centres.** This list will be based on the following parameters:\n\n- Type of intervention recommended for the school matched with the type of program offered by the partner\n- Proximity of school to the PASSNYC centre (our assumption is that a student will be comfortable in travelling upto 2 miles to the partner centre)\n\n\n\n\n\n"}}