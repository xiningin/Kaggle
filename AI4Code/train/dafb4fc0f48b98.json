{"cell_type":{"7ad78d2d":"code","9c2a708c":"code","9cb7866b":"code","f28c4664":"code","09f02500":"code","b0595656":"code","ba5350de":"code","a18aaf0a":"code","97252c27":"code","83c49382":"code","8308b36d":"code","20fd92b5":"code","ec8e6be5":"code","3d17145e":"code","a34c9506":"code","33ed3e0e":"code","f6f726ec":"code","b695e1f2":"code","16f62be1":"code","dfae6477":"code","dd5f595b":"code","f21b83fa":"code","6cd4250e":"code","59642ec2":"code","50916f21":"code","ef403069":"code","319f96cc":"code","50cf6de8":"markdown","21321607":"markdown","4cfadc8f":"markdown","eeb145a5":"markdown","f44aaad9":"markdown","4f5a8cd4":"markdown","b13c1cf2":"markdown","53a9d31c":"markdown","75191b7d":"markdown","a5a1e7b1":"markdown","ae32c006":"markdown","6c495af9":"markdown","9cf9918b":"markdown"},"source":{"7ad78d2d":"import pandas as pd\nimport numpy as np","9c2a708c":"data = pd.read_csv('..\/input\/avocado.csv',index_col=0)\ndata.head()","9cb7866b":"data.info()","f28c4664":"data['type'].unique()","09f02500":"import matplotlib.pyplot as plt\nimport seaborn as sns","b0595656":"region_mean = data['AveragePrice'].groupby(data['region']).mean()\nregion_mean.head()","ba5350de":"region = data['region'].unique()\nstat_reg = { region[i]: region_mean[i] for i in range(len(region))}\nimport operator\nsorted_d = sorted(stat_reg.items(), key=operator.itemgetter(1))\nX = [ sorted_d[i][0] for i in range(len(sorted_d))]\nY = [ sorted_d[i][1] for i in range(len(sorted_d))]","a18aaf0a":"plt.figure(figsize=(20,10))\nax=sns.barplot(x=X,y=Y,palette=\"Reds\")\nplt.xticks(rotation=86)\nplt.xlabel('Region')\nplt.tick_params(axis = 'both', labelsize = 14)\nplt.ylabel('Average Price')\nplt.title('Average Price of Avocado According to Region')","97252c27":"region_mean_volume = data['Total Volume'].groupby(data['region']).mean()\nstat_reg_vol = { region[i]: region_mean_volume[i] for i in range(len(region))}\ndel(stat_reg_vol['TotalUS'])\nsorted_d = sorted(stat_reg_vol.items(), key=operator.itemgetter(1))\nX = [ sorted_d[i][0] for i in range(len(sorted_d))]\nY = [ sorted_d[i][1] for i in range(len(sorted_d))]","83c49382":"plt.figure(figsize=(20,10))\nax=sns.barplot(x=X,y=Y,palette='Reds')\n\nplt.xticks(rotation=86)\nplt.xlabel('Region')\nplt.tick_params(axis = 'both', labelsize = 14)\nplt.ylabel('Average volume')\nplt.title('Average volume of Avocado According to Region')","8308b36d":"new_region = [region[i] for i in range(len(region)) if region[i]!= 'TotalUS']\n\n\ndel(region_mean['TotalUS'])\ndel(region_mean_volume['TotalUS'])\n\nmean_value_price = [ region_mean[i] for i in range(len(region_mean))]\nmean_value_volume = [ region_mean_volume[i] for i in range(len(region_mean_volume))]","20fd92b5":"fig, ax1 = plt.subplots(figsize=(20,10))\nax1.set_ylabel('Average price', color = 'coral',fontsize=20)\nax1.set_xlabel('Region', color = 'coral',fontsize=20)\nplt.xticks(rotation=86)\nax1.tick_params(axis = 'both', labelsize = 15)\n\n\nax1.plot(new_region, mean_value_price,  marker='o', markerfacecolor='#5e0000', markersize=12, color='#fd742d', linewidth=5)\nax1.grid(True)\n\n\n\nax2 = ax1.twinx()\nax2.set_ylabel('Average volume', color='#738830', fontsize=20)\nax2.plot( new_region, mean_value_volume,  marker='o', markerfacecolor='#5e0000', markersize=12, color='#738830', linewidth=5)\n\nfig.tight_layout() \nplt.show()","ec8e6be5":"type_mean = data['AveragePrice'].groupby(data['type']).mean()","3d17145e":"df_type_mean = pd.DataFrame({'type':  data['type'].unique(),'AveragePrice':[type_mean[0],type_mean[1]]})","a34c9506":"df_type_mean","33ed3e0e":"f = plt.figure(figsize=(15,8))\nsns.barplot(x=df_type_mean['type'],y = df_type_mean['AveragePrice'] , palette='rocket' )\nplt.show()","f6f726ec":"type_mean = data['Total Volume'].groupby(data['type']).mean()\ndf_type_mean = pd.DataFrame({'type':  data['type'].unique(),'AverageVolume':[type_mean[0],type_mean[1]]})\nf = plt.figure(figsize=(15,8))\nsns.barplot(x=df_type_mean['type'],y = df_type_mean['AverageVolume'] , palette='rocket' )\nplt.show()","b695e1f2":"f = plt.figure(figsize=(15,8))\nsns.distplot(data['AveragePrice'], bins = 25,color='#fd742d' )","16f62be1":"f = plt.figure(figsize=(15,8))\nsns.regplot(x=data[\"Total Bags\"], y=data[\"Small Bags\"],color='#5e0000',line_kws={\"color\":\"r\",\"alpha\":0.7,\"lw\":2})","dfae6477":"f = plt.figure(figsize=(15,8))\nf = sns.boxplot(x=\"region\",y = \"AveragePrice\",order = region[0:4],data= data )\nf = sns.stripplot(x=\"region\",y = \"AveragePrice\",data= data,order = region[0:4], color=\"orange\", jitter=0.2, size=3)\nplt.title(\"Boxplot with jitter\", loc=\"left\")","dd5f595b":"data.isnull().sum()","f21b83fa":"f = plt.figure(figsize=(15,8))\nsns.heatmap(data.isnull(),yticklabels=False,cmap= 'rocket')","6cd4250e":"def rmsle(y_pred, y_test) : \n    assert len(y_test) == len(y_pred)\n    return np.sqrt(np.mean((np.log(1+y_pred) - np.log(1+y_test))**2))","59642ec2":"from sklearn.linear_model import LinearRegression\nfrom sklearn.cross_validation import train_test_split\n\nmodel = LinearRegression()\n\nnot_in = ['Date','region','type']\ncol= [list(data.head(0))[i] for i in range(12) if list(data.head(0))[i] not in not_in]\n\ndf_x = data[col]\ndf_y = data['AveragePrice']\ndel(df_x['AveragePrice'])\n\nx_train, x_test, y_train, y_test = train_test_split(df_x, df_y, test_size=0.2, random_state=4)\n\nmodel.fit(x_train, y_train)\n\nprediction = model.predict(x_test)","50916f21":"rmsle(prediction,y_test) # accuracy with rmsle","ef403069":"from sklearn.neighbors import KNeighborsClassifier\n\nnot_in = ['Date','region','type']\ncol= [list(data.head(0))[i] for i in range(12) if list(data.head(0))[i] not in not_in]\n_type = pd.get_dummies(data['type'])\n\ndf_x = data[col]\ndf_y = _type['conventional']\n\nx_train, x_test, y_train, y_test = train_test_split(df_x, df_y, test_size=0.2, random_state=4)\n\nmodel_knn = KNeighborsClassifier(n_neighbors=3)\n\nmodel_knn.fit(x_train,y_train)\n\npred = model_knn.predict(x_test)\n\nrmsle(pred,y_test)  # accuracy with rmsle","319f96cc":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nfrom sklearn.linear_model import LogisticRegression\n\ndf_x = data[col]\ndf_y = _type['conventional']\n\nx_train, x_test, y_train, y_test = train_test_split(df_x, df_y, test_size=0.2, random_state=4)\n\nx_train = scaler.fit_transform(x_train)\nx_test = scaler.fit_transform(x_test)\n\nlogreg = LogisticRegression()\nlogreg.fit(x_train, y_train)\n\nprediction = logreg.predict(x_test)\nrmsle(prediction,y_test)","50cf6de8":"## Average volume & price","21321607":"# Cleaning","4cfadc8f":"# Train and Test \n## prediction price \n","eeb145a5":"#  Avocado","f44aaad9":"### KNN prediction type of avocado","4f5a8cd4":"### Logistic regression (type)","b13c1cf2":"## Average Price according to type","53a9d31c":"## Analysis","75191b7d":"### Linear Regression","a5a1e7b1":"### Average Total Volume according to type","ae32c006":"![](http:\/\/cdn.dribbble.com\/users\/1771704\/screenshots\/4283670\/avocado.gif)","6c495af9":"Thanks !!!!!","9cf9918b":"As we can see organic avocado is much more expensive, hence we have a small Average Volume"}}