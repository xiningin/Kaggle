{"cell_type":{"a52c7142":"code","20a9d98e":"code","36b00446":"code","bb4ec25e":"code","bb5fb28c":"code","d8e67f4d":"code","ef7920e0":"code","a5b5f963":"code","bec5ae29":"code","89fb2be2":"code","362cad01":"code","4a07ada8":"code","663c465d":"code","957947a6":"code","50246077":"code","5806a6ef":"code","357d098d":"code","37c6161a":"code","623be23d":"code","23811c11":"code","0e340693":"code","02035766":"code","7711b8f9":"code","8e9163dd":"code","7915323e":"code","575e464d":"code","c2c11466":"code","b94e2534":"code","e482d424":"code","54e25752":"code","0384c761":"code","83a55c5c":"markdown","b9008843":"markdown","315751c3":"markdown","84a726cc":"markdown","c14321ed":"markdown","acd00ab1":"markdown","4a746daf":"markdown","a337dc17":"markdown","1a993189":"markdown","4febed6b":"markdown","4f17b5d1":"markdown","bf6acc90":"markdown","2cdf98d8":"markdown","0c8310da":"markdown","95a8c923":"markdown","652afe8b":"markdown","8efc0fbb":"markdown","a1e9d4df":"markdown","6dc44adb":"markdown","fbe4cec9":"markdown","8517cd66":"markdown","70721d75":"markdown"},"source":{"a52c7142":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport statsmodels.formula.api as smf\n%matplotlib inline \n\ntracks = pd.read_csv('\/kaggle\/input\/spotify-dataset-19212020-160k-tracks\/data.csv')","20a9d98e":"tracks.head()","36b00446":"tracks.tail()","bb4ec25e":"tracks.info()","bb5fb28c":"tracks.isnull().sum()","d8e67f4d":"tracks.describe()","ef7920e0":"tracks['duration_m'] = tracks['duration_ms']\/60000\ntracks = tracks.reindex(sorted(tracks.columns), axis=1)\ntracks.head()","a5b5f963":"tracks.drop('duration_ms', axis = 1, inplace = True)\ntracks.drop('release_date', axis = 1, inplace = True)\ntracks.head()","bec5ae29":"tracks.describe()","89fb2be2":"tracks[tracks['duration_m']>60]","362cad01":"tracks.hist(figsize=(15, 15), color = 'black')\nplt.show()","4a07ada8":"plt.figure(figsize=(20, 10))\nsns.heatmap(tracks.corr(),annot = True)","663c465d":"sns.scatterplot(x = 'acousticness', y = 'popularity', data = tracks, alpha = 0.03, color = 'black')","957947a6":"sns.scatterplot(x = 'danceability', y = 'popularity', data = tracks, alpha = 0.03, color = 'black')","50246077":"sns.scatterplot(x = 'energy', y = 'popularity', data = tracks, alpha = 0.03, color = 'black')","5806a6ef":"sns.scatterplot(x = 'explicit', y = 'popularity', data = tracks, alpha = 0.03, color = 'black')","357d098d":"sns.scatterplot(x = 'loudness', y = 'popularity', data = tracks, alpha = 0.03, color = 'black')","37c6161a":"sns.scatterplot(x = 'speechiness', y = 'popularity', data = tracks, alpha = 0.03, color = 'black')","623be23d":"sns.scatterplot(x = 'tempo', y = 'popularity', data = tracks, alpha = 0.03, color = 'black')","23811c11":"sns.scatterplot(x = 'year', y = 'popularity', data = tracks, alpha = 0.03, color = 'black')","0e340693":"model_year = smf.ols(data = tracks, formula = \"popularity ~ year\")\nresult_year = model_year.fit()\nresult_year.summary()","02035766":"tracks['predicted_popularity_yr'] = result_year.predict(tracks)\ntracks.head()","7711b8f9":"tracks.tail()","8e9163dd":"model_ac = smf.ols(data = tracks, formula = \"popularity ~ acousticness\")\nresult_ac = model_ac.fit()\nresult_ac.summary()","7915323e":"tracks['predicted_popularity_ac'] = result_ac.predict(tracks)\ntracks.head()","575e464d":"tracks.tail()","c2c11466":"model_3 = smf.ols(formula = \"popularity ~ year + acousticness + energy + loudness\", data = tracks).fit()\nmodel_3.summary()","b94e2534":"tracks['predicted_popularity'] = model_3.predict(tracks)\ntracks.head()","e482d424":"tracks.tail()","54e25752":"#wrong cost function \ncost_yr = sum((tracks['predicted_popularity_yr'] - tracks['popularity'])**2)\ncost_ac = sum((tracks['predicted_popularity_ac'] - tracks['popularity'])**2)\ncost = sum((tracks['predicted_popularity'] - tracks['popularity'])**2)\n\nprint(cost_yr)\nprint(cost_ac)\nprint(cost)","0384c761":"#improved cost function\nn = len(tracks.index)\n\ncost_yr = sum(abs(tracks['predicted_popularity_yr'] - tracks['popularity']))\/n\ncost_ac = sum(abs(tracks['predicted_popularity_ac'] - tracks['popularity']))\/n\ncost = sum(abs(tracks['predicted_popularity'] - tracks['popularity']))\/n\n\nprint(cost_yr)\nprint(cost_ac)\nprint(cost)","83a55c5c":"**Linear regression to predict popularity based on release year**","b9008843":"## Data Modeling","315751c3":"**Cost functions for each of these models**\n\nHow far off are the 3 sample models?","84a726cc":"## Setup","c14321ed":"Results:\n- R-squared: 0.329\n- Coef: Intercept = 48.1366, acousticness = -33.2690\t\n\nA track that's not acoustic (score of 0) would have a 33 point higher popularity score than one that is (score of 1).","acd00ab1":"At energy = 0.5, it looks like the popularity tapers. ","4a746daf":"The third model (predicting based on release year, acoustics, energy, and loudness) was has the  the most accurate out of the three. ","a337dc17":"For the most part, the data looks as expected. There are few changes I'd make:\n- Duration can be expressed in minutes, instead of milliseconds. This is because songs are generally a few minutes long.\n- Release_date can be dropped, because it's an object with a few different date formats. Year seems to convey the same information (when a track was released), but it's consistently formatted, so we can use that instead.","1a993189":"# Predicting Track Popularity\n\nThis was my final project for my data science class at Brainstation.\n\n\n## Spotify Dataset\n\nThe dataset is found [here](https:\/\/www.kaggle.com\/yamaerenay\/spotify-dataset-19212020-160k-tracks?select=data.csv). This has a sample of 160,000 songs from Spotify, and there are additional sheets that aggregate data by artist, year, or genre. \n\nSpotify provides these audio features for a track:\n- **Acousticness:** A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.\n- **Danceability:** How suitable a track is for dancing, from 0.0 (least danceable) to 1.0 (most danceable). \n- **Duration**: The song length, in milliseconds - this typically ranges from 200k to 300k \n- **Energy:** A measure that represents a perceptual measure of intensity and activity, from 0.0 (low energy) to 1.0 (high energy).\n- **Explicit**: The binary value whether the track contains explicit content (1) or not (0).\n- **Instrumentalness:** Predicts whether a track contains no vocals. The closer this is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.\n- **Liveness:** Whether there's a live audience in the recording, from 0.0 (low probablity) to 1.0 (high probability). A value above 0.8 provides strong likelihood that the track is live.\n- **Loudness:** The overall loudness of a track in decibels (dB), with a typical range between -60 and 0 db.\n- **Popularity:** The popularity of a track in the US based on how frequently and recently it's played. Ranges from 0 (obscure) to 100 (very popular). \n- **Speechiness:** Detects the presence of spoken words in a track. Values below 0.33 most likely represent music. 0.33 and 0.66 describe tracks that may contain both music and speech. The track has more spoken word from 0.66 to 1.0.\n- **Tempo:** The overall estimated tempo of a track in beats per minute (BPM).\n- **Valence:** A measure from 0.0 (more negative) to 1.0 (positive) describing the musical positiveness conveyed by a track. \n\nMore details about what these audio features mean are [here](https:\/\/developer.spotify.com\/documentation\/web-api\/reference\/tracks\/get-audio-features\/).\n\nI chose this dataset for a few reasons:\n- I'm on Spotify frequently (almost every day).\n- I did a project a few months ago that used Spotify data, a data visualization of the 100 greatest metal albums. It was a fun way to understand and interpret music, and I have some familiarity with Spotify's audio data.  \n- This is a very extensive dataset that's nicely formatted. ","4febed6b":"## Hypothesis\n\nI want to know: which audio features are related to a track's popularity?","4f17b5d1":"## Data Cleaning","bf6acc90":"In the bottom right corner, there's a cluster of tracks that are new and didn't get a lot of listeners yet. ","2cdf98d8":"The data types look as expected.","0c8310da":"**Linear regression to predict popularity based on release year, acoustics, energy, and loudness**","95a8c923":"## Initial Data Exploration","652afe8b":"Results:\n- R-squared: 0.744\n- Coef: Intercept = -1404.3129, year = 0.7263\n\nIf year increases by 1, then the popularity score goes up by 0.73. For comparison, the popularity score can be 0 to 100.","8efc0fbb":"**Linear regression to predict popularity based on acousticness**","a1e9d4df":"Suprisingly, there aren't any null values. ","6dc44adb":"Here, the coefficient for energy is -3.78, which doesn't make sense because earlier, we saw that 1) the correlation is a positive value and 2) the scatterplot showed a positive trend. \n\nIt might be influenced by the other factors: year, acousticness, and loudness.","fbe4cec9":"I can spot an outlier: the max duration_m is 90 minutes long. I wonder which track(s) clock in at an hour or more? ","8517cd66":"A few factors stand out:\n- Acousticness \n- Energy \n- Loudness\n- Tempo\n- Year\n\nMore popular songs are those that are less acoustic-sounding, higher energy, louder, and released this year. Being danceable, having explicit content, less vocals, and fast tempo aren't as strong factors.\n\nOut of the available data, when a track is released has the strongest correlation. This makes sense, given how much Spotify showcases new content in the app.  \n\nScatterplots mapping different audio features to popularity are shown below. In these charts, if some audio features are extreme enough, you can see if popularity drops or a technical limit is reached. ","70721d75":"The tracks that are over an hour long are ambient sounds and one Brian Eno song. The energy measurements are suprisingly high for ocean wave sounds meant for sleep and relaxation.  "}}