{"cell_type":{"9de34eac":"code","1976ffda":"code","019defa5":"code","c4451aa8":"code","50d3f0e5":"code","1c87011f":"code","b0831895":"code","222d30b7":"code","5f4b634a":"code","9cfc171d":"code","f24795c6":"code","e7cd7a1a":"code","cdf2fff7":"code","711a53f7":"code","cd33fd1b":"code","dc588743":"code","8ab08e33":"code","5fd0c3bd":"code","e5001b60":"code","23d916e8":"code","b16ae0c9":"code","a1c43528":"code","2a9fa9f3":"code","f1195ff8":"code","96f9dc36":"code","848d11a8":"markdown","6c6066da":"markdown","f7fbce5f":"markdown","9b0c323f":"markdown","12c36b08":"markdown","2c72ddb5":"markdown","fc672de4":"markdown"},"source":{"9de34eac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1976ffda":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# hide warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\npd.set_option('display.max_rows', 100)\npd.set_option('display.max_columns', 200)\n\n\n%matplotlib inline","019defa5":"data=pd.read_csv('\/kaggle\/input\/bankbalanced\/bank.csv')\ndata.head()","c4451aa8":"data.info()","50d3f0e5":"plt.figure(figsize=(26,5))\nplt.subplot(1,6,1)\nsns.countplot(x='job',data=data)\nplt.xticks(rotation=70)\nplt.subplot(1,6,2)\nsns.countplot(x='marital',data=data)\nplt.xticks(rotation=65)\nplt.subplot(1,6,3)\nsns.countplot(x='education',data=data)\nplt.figure(figsize=(26,5))\nplt.subplot(1,6,1)\nsns.countplot(x='default',data=data)\nplt.xticks(rotation=70)\nplt.subplot(1,6,2)\nsns.countplot(x='housing',data=data)\nplt.xticks(rotation=65)\nplt.subplot(1,6,3)\nsns.countplot(x='loan',data=data)\nplt.xticks(rotation=75)","1c87011f":"plt.figure(figsize=(26,5))\nplt.subplot(1,6,1)\nsns.countplot(x='contact',data=data)\nplt.xticks(rotation=70)\nplt.subplot(1,6,2)\nsns.countplot(x='month',data=data)\nplt.xticks(rotation=65)\nplt.subplot(1,6,3)\nsns.countplot(x='education',data=data)\nplt.figure(figsize=(26,5))\nplt.subplot(1,6,1)\nsns.countplot(x='default',data=data)\nplt.xticks(rotation=70)\nplt.subplot(1,6,2)\nsns.countplot(x='poutcome',data=data)\nplt.xticks(rotation=65)","b0831895":"\n\nplt.figure(figsize=(26,5))\nplt.subplot(1,6,1)\nsns.boxplot(data['age'])\nplt.subplot(1,6,2)\nsns.boxplot(data['balance'])\nplt.subplot(1,6,3)\nsns.boxplot(data['campaign'])\nplt.figure(figsize=(26,5))\nplt.subplot(1,6,1)\nsns.boxplot(data['duration'])\n\nplt.subplot(1,6,2)\nsns.boxplot(data['pdays'])\n","222d30b7":"q1 = data['balance'].quantile(0.05)\nq4 = data['balance'].quantile(0.95)\ndata= data[(data['balance']>=q1) & (data['balance']<=q4)]\ndata.shape","5f4b634a":"q1 = data['duration'].quantile(0.05)\nq4 = data['duration'].quantile(0.95)\ndata2 = data[(data['duration']>=q1) & (data['duration']<=q4)]\ndata2.shape","9cfc171d":"q1 = data['campaign'].quantile(0.05)\nq4 = data['campaign'].quantile(0.95)\ndata = data[(data['campaign']>=q1) & (data['campaign']<=q4)]\ndata.shape","f24795c6":"q1 = data['age'].quantile(0.02)\nq4 = data['age'].quantile(0.98)\ndata = data[(data['age']>=q1) & (data['age']<=q4)]\ndata.shape","e7cd7a1a":"#checking for outliers \n\nplt.figure(figsize=(26,5))\nplt.subplot(1,6,1)\nsns.boxplot(data2['age'])\nplt.subplot(1,6,2)\nsns.boxplot(data2['balance'])\nplt.subplot(1,6,3)\nsns.boxplot(data2['campaign'])\nplt.figure(figsize=(26,5))\nplt.subplot(1,6,1)\nsns.boxplot(data2['duration'])\n\nplt.subplot(1,6,2)\nsns.boxplot(data2['pdays'])\n","cdf2fff7":"data.drop(['default'],axis=1,inplace=True) #skewed\n","711a53f7":"varlist=['housing','loan','deposit']\n\ndef binary_map(x):\n    return x.map({'yes': 1, \"no\": 0})\n\n# Applying the function to the df list\ndata[varlist] = data[varlist].apply(binary_map)","cd33fd1b":"cat_df=data[['job','marital','education','contact','month','poutcome']]\ncat_df.head()","dc588743":"data_dummies=pd.get_dummies(cat_df,drop_first=True)\ndata_dummies.head()","8ab08e33":"data.drop(list(cat_df.columns),axis=1,inplace=True)","5fd0c3bd":"data=pd.concat([data,data_dummies],axis=1)","e5001b60":"data.head()","23d916e8":"X=data.drop(['deposit'],axis=1)\ny=data.deposit","b16ae0c9":"from sklearn.model_selection import train_test_split\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,train_size=0.7,random_state=100)","a1c43528":"#scaling the train and test data\n\nfrom sklearn.preprocessing import StandardScaler\n\nscaler=StandardScaler()","2a9fa9f3":"X_train=scaler.fit_transform(X_train)\nX_test=scaler.transform(X_test)","f1195ff8":"#class imbalance\n100*y_train.value_counts(normalize=True)","96f9dc36":"from  sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics\n\nrf_model=RandomForestClassifier(class_weight='balanced',criterion='gini',min_samples_leaf=1,min_samples_split=16,n_estimators=700)\nrf_model.fit(X_train,y_train)\ny_pred=rf_model.predict(X_test)\nprint('Accuracy :  {}'.format(metrics.accuracy_score(y_test,y_pred)))\nprint('Sensitivity :  {}'.format(metrics.recall_score(y_test,y_pred)))","848d11a8":"# EDA (categorical)- to check if any column is skewed or not providing any inference","6c6066da":"# Random Forest","f7fbce5f":"# Dummy","9b0c323f":"Importing Libraries:","12c36b08":"# Modelling\n","2c72ddb5":"# Treating Outliers","fc672de4":"# Binary Classification"}}