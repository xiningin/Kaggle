{"cell_type":{"86262c13":"code","c335d3af":"code","3e3547c3":"code","5d08fee3":"code","0474cd17":"code","07856d6b":"code","8767a38f":"code","4ebbf62d":"code","5e694711":"code","2f4739a8":"code","49723b38":"code","5e671f33":"code","5e361623":"code","fba76b8c":"code","a47de286":"code","9c2febaf":"code","e3382f25":"code","589a108e":"code","33ed32c7":"code","00777b58":"code","3643f061":"markdown","d19b2cee":"markdown","ddf38464":"markdown","955e29dd":"markdown","0ca05800":"markdown","bcf70ce8":"markdown","faa02b60":"markdown","ada9a610":"markdown","e247d255":"markdown","5d95702d":"markdown","2216557f":"markdown","aa439c26":"markdown","7eb596c8":"markdown","c30a9051":"markdown","ff9ee277":"markdown"},"source":{"86262c13":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c335d3af":"!pip install feyn","3e3547c3":"import feyn","5d08fee3":"data = '\/kaggle\/input\/rainprediction\/AusDataForRainPred.csv'\ndf = pd.read_csv(data)\ndf.head().style.set_properties(**{'background-color':'purple',\n                                     'color': 'white'})","0474cd17":"#Code by Casper Wilstrup https:\/\/www.kaggle.com\/wilstrup\/use-qlattice-to-predict-rainy-days-in-australia\/notebook\n\ndf[\"week\"] = pd.to_datetime(df.Date).dt.isocalendar().week.astype(int)\ndf = df.drop(\"Date\", axis=1)","07856d6b":"#Code by Casper Wilstrup https:\/\/www.kaggle.com\/wilstrup\/use-qlattice-to-predict-rainy-days-in-australia\/notebook\n\nstypes = {\n    \"Location\": \"cat\",\n    \"WindGustDir\": \"cat\",\n    \"WindDir9am\": \"cat\",\n    \"WindDir3pm\": \"cat\",\n    \"RainToday\": \"cat\",\n    \"week\": \"cat\",\n}","8767a38f":"df.isnull().sum()","4ebbf62d":"#Code by Casper Wilstrup https:\/\/www.kaggle.com\/wilstrup\/use-qlattice-to-predict-rainy-days-in-australia\/notebook\n\ndf = df.dropna(subset=[\"RainTomorrow\"])\ndf[\"RainTomorrow\"]=df[\"RainTomorrow\"]==\"Yes\"","5e694711":"df = df.drop([\"Evaporation\", \"Sunshine\", \"Cloud9am\", \"Cloud3pm\"], axis=1)","2f4739a8":"#Code by Casper Wilstrup https:\/\/www.kaggle.com\/wilstrup\/use-qlattice-to-predict-rainy-days-in-australia\/notebook\n\nna_data = df[df.isna().any(axis=1)].copy() # This dataframe holds observations where any of the values are missing\nfull_data = df.dropna() # This dataframe holds observations where *none* of the values are missing","49723b38":"full_data","5e671f33":"train, test = feyn.tools.split(full_data, ratio=(1,1), random_state=42)","5e361623":"ql = feyn.connect_qlattice()","fba76b8c":"ql.reset(random_seed=42)","a47de286":"models = ql.auto_run(train, output_name=\"RainTomorrow\", kind=\"classification\", stypes = stypes)","9c2febaf":"models[0].plot_roc_curve(train)\nmodels[0].plot_roc_curve(test)","e3382f25":"models[0].plot_confusion_matrix(test, threshold=.3)","589a108e":"models[0].plot_confusion_matrix(test, threshold=.5)","33ed32c7":"models[0].sympify(2)","00777b58":"models[0].plot(test)","3643f061":"#Drop Missing Values","d19b2cee":"# **<span style=\"color:#DC143C;\">Feyn is inspired by Richard Feynman's path integral formulation. That's why the python module to use it is called Feyn, and the Q in QLattice is for Quantum.<\/span>**","ddf38464":"#Confusion matrix\n\nA simpler and less powerfull way to evaluate classifiers is a confusion matrix: https:\/\/docs.abzu.ai\/docs\/guides\/plotting\/confusion_matrix.html Let us see how that looks at various thresholds","955e29dd":"#Community QLattice\n\nWe are now ready to connect to the QLattice. The feyn module will look in you local configuration file to see if we have a commercial QLattice. If not, it will allocate a community QLattice for us on the Abzu compute cluster.","0ca05800":"#Only by copying Casper code I could have Math in my Notebook.\n\nWhat the QLattice actually finds is an equation that relates the input to the output. The user can control the compexity and structure of the equation in various ways. Here we just went with the defaults. Let's see the actual mathematical expression:","bcf70ce8":"#Dropping the remainder\n\nThere is still a lot of missing values. We will set aside the data with missing values (because we might use this in later extensions of this notebook where we demonstrate how to use the QLattice to impute data).","faa02b60":"#Reproducibility\n\nThe qlattice will be reset when we get it, but to ensure that we get exactly the same result every time we run the notebook we need to seed the QLattice. This is done with the reset method","ada9a610":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 20px; background: #001f3f;\"><i><b style=\"color:orange;\">Feyn and QLattice<\/b><\/i><\/h1><\/center>\n\n\"Feyn is a Python module for interacting with the QLattice.\"\n\n\"The QLattice is a machine learning technology that helps you search through an infinite list of potential mathematical models to solve your problem.\"\n\n\"It's a quantum-inspired simulation where you make decisions when exploring the data, giving you a good understanding of the relationships in your data and closing the loop between scientific inquiry and data science.\"\n\nhttps:\/\/docs.abzu.ai\/\n\nhttps:\/\/docs.abzu.ai\/docs\/guides\/getting_started\/community.html","e247d255":"#Code by Casper Wilstrup  https:\/\/www.kaggle.com\/wilstrup\/use-qlattice-to-predict-rainy-days-in-australia\/notebook","5d95702d":"#Evaluate\n\nThe QLattice has found a mathematical relationship tha can relate the predictors to the output. The final step is to evaluate the model on the test and the train set. To do that we plot the ROC curve of the classifier on both the test and the training data. You can read more about ROC curves here: https:\/\/docs.abzu.ai\/docs\/guides\/plotting\/roc_curve.html\n\nIn this case they overlap almost perfectly which indicates that the model generalizes to unseen data very well.","2216557f":"#Conclusion by Casper Wilstrup https:\/\/www.kaggle.com\/wilstrup\/use-qlattice-to-predict-rainy-days-in-australia\/notebook\n\nIn a few simple steps we were able to:\n\nFind a mathematical model that predicts rain\n\nShow that it gereralizes very well to new data.\n\nUnderstand which features interacts to predict rain\n\nVisualize the performance of the model in various ways.","aa439c26":"#Feature interaction\n\nFinally we can see how the features interact by plotting the equation with pearson correlations of each node. See more here: https:\/\/docs.abzu.ai\/docs\/guides\/plotting\/model_plot.html","7eb596c8":"![](https:\/\/dogtrainingobedienceschool.com\/pic\/3665224_full-richard-feynman-hard-work-quotes-feynman-s-hack-and-the-map-of-the-cat-safal-niveshak.jpg)dogtrainingobedienceschool.com","c30a9051":"#Search for the best model\n\nWe are now ready to instruct the QLattice to search for the best mathematical model to explain the data. Here we use the high-level convenience function that does everything with sensible defaults: https:\/\/docs.abzu.ai\/docs\/guides\/essentials\/auto_run.html.\n\nFor more detailed control, we could use the primitives: https:\/\/docs.abzu.ai\/docs\/guides\/primitives\/using_primitives.html\n\nNotice that the stypes dictionary we created earlier gets passed to the QLattice here.\n\nNOTE: This will take several minutes to complete. It invoves work done on the QLattice machine remotely as well as in the local notebook. The part that runs locally is slowing things down because of the limited CPU resources on Kaggle. ","ff9ee277":"#The target variable\n\nThere are over 3000 observations with no data for the target variable. We drop those observations up front\n\nWe also notice that the target variable is boolean but expressed as a string. Let us convert it to a proper boolean (0\/1)"}}