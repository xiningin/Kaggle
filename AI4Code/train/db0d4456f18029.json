{"cell_type":{"4a6fdbc7":"code","91b0aff3":"code","01a440dc":"code","4f07dc40":"code","7d8ee0c4":"code","c7f13642":"code","77d53bc4":"code","4e08ab9b":"code","74b88c2c":"code","2863a54b":"code","f9e2d2be":"code","6f602fe3":"code","67efbe5f":"code","27f4d67c":"code","faf93092":"code","a8e828e6":"code","524dec92":"code","6147be46":"code","dad7e18b":"code","3b58b06b":"markdown","ead77457":"markdown","275ea34b":"markdown","d73e7ed4":"markdown","2674a1af":"markdown","b70a462a":"markdown","58b11bea":"markdown","9a773224":"markdown","f664d3c7":"markdown","0a31c4fd":"markdown","c1b618b6":"markdown"},"source":{"4a6fdbc7":"# Let's import necessary libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","91b0aff3":"data = pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')\ndata.head()  # see first 5 rows","01a440dc":"data.tail() # see last 5 rows","4f07dc40":"data.columns # see variables","7d8ee0c4":"# shape gives number of rows and columns in a tuble\ndata.shape","c7f13642":"# info gives data type like dataframe, number of sample or row, number of feature or column, feature types and memory usage\ndata.info()","77d53bc4":"print(data['Species'].value_counts(dropna =False))  # if there are nan values that also be counted","4e08ab9b":"data.describe()","74b88c2c":"data.boxplot(column=['SepalLengthCm', 'SepalWidthCm'],by = 'Species',layout=(2, 1), fontsize=10)\ndata.boxplot(column=['PetalLengthCm','PetalWidthCm'],by = 'Species',layout=(2, 1), fontsize=10)\nplt.show()","2863a54b":"data_head = data.head()\ndata_head","f9e2d2be":"data_tail= data.tail()\ndata_tail","6f602fe3":"# let's melt\n# id_vars = what we do not wish to melt\n# value_vars = what we want to melt\nmelted1 = pd.melt(frame=data_head,id_vars = 'Species', value_vars= ['SepalWidthCm','PetalWidthCm'])\nmelted1","67efbe5f":"melted2 = pd.melt(frame=data_tail,id_vars = 'Species', value_vars= ['SepalWidthCm','PetalWidthCm'])\nmelted2","27f4d67c":"# lets concatenate 2 melted dataframe\nconc_data_row = pd.concat([melted1,melted2],axis =0,ignore_index =True) # axis = 0 : adds dataframes in row\nconc_data_row","faf93092":"data1 = data['Id'].head()\ndata2= data['Species'].head()\nconc_data_col = pd.concat([data1,data2],axis =1) # axis = 1 : adds dataframes in column\nconc_data_col","a8e828e6":"data.dtypes","524dec92":"# lets convert object(str) to categorical and float to int.\ndata['SepalLengthCm'] = data['SepalLengthCm'].astype('int')\ndata['Species'] = data['Species'].astype('category')\ndata.dtypes","6147be46":"data.head()","dad7e18b":"data.info()","3b58b06b":"Let's plot to see if we have outliers. outlier is the value that is considerably higher or lower from rest of the data\n* Box plots: visualize basic statistics like outliers, min\/max or quantiles","ead77457":"**CONCATENATING DATA**","275ea34b":"Let's check data types.","d73e7ed4":"We can see SepalLengthCm is integer from now on.","2674a1af":"**Let's check if we have missing data**\n\nWhat to do if we have?\n* leave as is\n* drop them with dropna()\n* fill missing value with fillna()\n* fill missing values with test statistics like mean","b70a462a":"Every species has 50 observation","58b11bea":"**TIDY DATA**\nWe will use melt() method.","9a773224":"Firstly, of couse we should diagnose if we need cleaning.","f664d3c7":"As we see here we do not have any missing value. So we don't need to do anything.","0a31c4fd":"Let's go deeper about our dataset. lets look frequency of iris species","c1b618b6":"In this notebook, data cleaning of the dataset will be done."}}