{"cell_type":{"6b6ed9f3":"code","6de612b7":"code","6dd5002d":"code","20e31dbe":"code","da687ef9":"code","dc137924":"code","0412ca15":"code","a01f3a9d":"code","1225f193":"code","beef92b4":"code","ccb5475b":"code","ff6004c7":"code","32d3da35":"code","834d1594":"code","b6540e8d":"code","d4ee18cd":"markdown"},"source":{"6b6ed9f3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6de612b7":"data = pd.read_csv(\"..\/input\/heart.csv\")\ndata.describe()","6dd5002d":"plt.subplots(figsize=(18,18))\nsns.heatmap(data.corr(),annot=True)\n","20e31dbe":"data.head(50)","da687ef9":"data.oldpeak.plot(kind=\"line\",color=\"b\",label=\"oldpeak\",linewidth=2,grid=True,linestyle = \"-\" , alpha = 0.5,figsize=(20,20))\ndata.slope.plot(kind=\"line\",color=\"g\",label=\"slope\",linewidth=2,grid=True,linestyle = \"-\" , alpha = 0.5)\nplt.xlabel(\"data size\",fontsize=\"xx-large\")\nplt.ylabel(\"frequency\",fontsize=\"xx-large\")\nplt.legend(loc=\"best\",fontsize=\"xx-large\")\n","dc137924":"data.plot(kind=\"scatter\", x = \"oldpeak\" , y = \"slope\",alpha=0.8 , color =\"g\",figsize=(10,10))","0412ca15":"data.oldpeak.plot(kind=\"hist\",bins=50,figsize=(15,15))","a01f3a9d":"boolean1 = data[\"oldpeak\"] > 1\nboolean2 = data[\"oldpeak\"] < 4\nboolean3 = data[\"age\"] > 75\nage =  int(data[boolean1 & boolean2 & boolean3].age) #then, can we pick up the index of the element? in this output its 144 ,  can I get this value from somewhere and then can I use it to access the element like data[144] ?\n\ndata[data[\"age\"] == age]","1225f193":"for element in data[[\"age\"]].iterrows():\n    print(element)","beef92b4":"for index,element in data[data[\"age\"] > 70].iterrows():\n    print(index,\"---------\\n\",element)","ccb5475b":"data[\"age\"][data[\"age\"] > 70]\n","ff6004c7":"\nfor index,element in data[\"age\"][data[\"age\"] > 70].items():\n    print(index,\"  \",element)","32d3da35":"data[\"age\"][data[\"age\"] > 70][25] #access the elements index ","834d1594":"data[data[\"age\"] > 70]\nprint(type(data[\"age\"][data[\"age\"] > 70]) , \"\\n\" , type(data[data[\"age\"] > 70]) )","b6540e8d":"data[\"age\"][25] #series has index access but dataframe object has not","d4ee18cd":"**Can we get every element in the csv file into a serie like we can pick the ages with data[\"age\"] but I want to pick every element as a serie\nIt will look like this \ndata[\"age\"][25] output = 71\ndata[*all][25] output = 71 1 76\t0\t2\t140\t197\t0\t2\t116\t0\t1.1\t1\t0\t2\t1 ,I want to get this\n**"}}