{"cell_type":{"fcf1c32e":"code","c0e4cf75":"code","1a3f88ed":"code","bbe75b2c":"code","ff12d129":"code","d4ca7159":"code","0c3e8363":"code","b79d71b2":"code","16d129be":"code","89f72684":"code","c2d3d7f7":"code","2a0f9791":"code","daece69b":"code","fc712434":"code","0610af00":"code","29c0d8a2":"code","64939f6d":"code","9a09ac0a":"code","54d5d8bd":"markdown","38426e75":"markdown","6c28a513":"markdown","692b2327":"markdown","286cf324":"markdown","24929e46":"markdown","5ebe384d":"markdown"},"source":{"fcf1c32e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c0e4cf75":"import matplotlib.pyplot as plt\nimport seaborn as sns #Visualization\nplt.rcParams['figure.figsize'] = [8,5]\nplt.rcParams['font.size'] =14\nplt.rcParams['font.weight']= 'bold'\nplt.style.use('seaborn-whitegrid')","1a3f88ed":"\ndf = pd.read_csv('\/kaggle\/input\/advertising-data\/Advertising.csv')\nprint('\\nNumber of rows and columns in the data set: ',df.shape)\nprint('')\n\n#Lets look into top few rows and columns in the dataset\nprint(df.head())","bbe75b2c":"df =df.round(2)\ndf.head()\n\n#Drop unnecessary columns\ndrop_elements = ['Unnamed: 0']\ndf = df.drop(drop_elements, axis=1)\n\ndf.tail()\ndf.describe().round(2)\n\n","ff12d129":"df.describe()","d4ca7159":"#null value check\n\ndf.isnull().sum()*100\/df.shape[0]\n\n","0c3e8363":"ax = sns.boxplot(data=df,orient='v',palette=\"Set1\")","b79d71b2":"sns.pairplot(df, x_vars=['TV','Radio','Newspaper'],y_vars='Sales',height=4,aspect=1 )\nplt.show()","16d129be":"# correlation plot\ncorr = df.corr()\nsns.heatmap(corr, cmap = 'Wistia', annot= True);","89f72684":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\n\nimport statsmodels.api as sm\n\nx=df['TV']\ny=df['Sales']\n\nx_train,x_test,y_train, y_test=train_test_split(x,y,train_size=0.7, test_size=0.3, random_state=100)\n\nx_train.head()\ny_train.head()\nx_train_sm =sm.add_constant(x_train)\n\nlr=sm.OLS(y_train, x_train_sm).fit()\n\nlr.params","c2d3d7f7":"print(lr.summary())","2a0f9791":"plt.scatter(x_train, y_train)\nplt.plot(x_train, 6.9897+0.0465*x_train,'r')\nplt.show()","daece69b":"y_train_pred=lr.predict(x_train_sm)\n\nres =(y_train-y_train_pred)\n\nfig = plt.figure()\n\nsns.distplot(res,bins=15)\n\nfig.suptitle('Error Terms')\n\nplt.xlabel('y_train - y_train_pred')\n\nplt.show()\n","fc712434":"plt.scatter(x_train,res)\nplt.show()","0610af00":"x_test_sm=sm.add_constant(x_test)\ny_pred = lr.predict(x_test_sm)\n\ny_pred.head","29c0d8a2":"from sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\n\nnp.sqrt(mean_squared_error(y_test,y_pred))","64939f6d":"r_squared = r2_score(y_test,y_pred)\nr_squared","9a09ac0a":"plt.scatter(x_test,y_test)\nplt.plot(x_test, 6.9897+0.0465*x_test,'r')\nplt.show()","54d5d8bd":"# **Correlation Matrix**","38426e75":"# **Data Cleaning**","6c28a513":"# **Exploratory data analysis**","692b2327":"Check for missing value","286cf324":"# **Model Building**","24929e46":"Outlier analysis through boxlot","5ebe384d":"# **Exploratory data analysis**"}}