{"cell_type":{"0f558c65":"code","a4ef6b6b":"code","7d42f55b":"code","4368a9da":"code","af77f95f":"code","48487e70":"code","3510a19e":"code","0412d826":"code","c9cfd55f":"code","14e25cef":"code","0693c806":"code","a1baafa9":"code","60450ec4":"code","fd02d1e8":"code","be765d60":"code","a6212b36":"code","6658cfd2":"code","a2e21724":"code","afb54974":"code","d535e093":"code","041d71ee":"code","6f39108d":"code","6ef4ad91":"markdown","5b904062":"markdown","0547e735":"markdown"},"source":{"0f558c65":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n# data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom xgboost import XGBRegressor\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a4ef6b6b":"dataset = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\",index_col='Id')\ntest_data=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')\ndataset.head()","7d42f55b":"test_data.head()","4368a9da":"test_id=test_data.Id\ntest_data=test_data.drop(['Id','Alley','PoolQC','MiscFeature','Fence'],axis=1)\nX_test=test_data","af77f95f":"null_percent = dataset.isnull().sum() \/ dataset.shape[0] * 100\nprint(null_percent)","48487e70":"cols_to_drop = null_percent[null_percent > 50].keys()","3510a19e":"dataset = dataset.drop(columns=['Alley', 'PoolQC', 'Fence', 'MiscFeature'])","0412d826":"dataset.dropna(axis=0, subset=['SalePrice'], inplace=True)\nY=dataset.SalePrice\ndataset.drop(['SalePrice'], axis=1, inplace=True)","c9cfd55f":"X_train, X_valid, y_train, y_valid = train_test_split(dataset,Y,train_size=0.8, test_size=0.2,random_state=0)\n","14e25cef":"categorical_cols = [cname for cname in dataset.columns if\n                    dataset[cname].nunique() < 10 and \n                    dataset[cname].dtype == \"object\"]","0693c806":"numerical_cols = [cname for cname in dataset.columns if \n                dataset[cname].dtype in ['int64', 'float64']]","a1baafa9":"from sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error","60450ec4":"numerical_transformer = SimpleImputer(strategy='mean')","fd02d1e8":"categorical_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='most_frequent')),\n    ('onehot', OneHotEncoder(handle_unknown='ignore'))\n])","be765d60":"preprocessor = ColumnTransformer(\n    transformers=[\n        ('num', numerical_transformer, numerical_cols),\n        ('cat', categorical_transformer, categorical_cols)\n    ])","a6212b36":"model = RandomForestRegressor(n_estimators=50, random_state=10)\n#model=XGBRegressor(n_estimators=500,learning_rate=0.01,n_jobs=2)\n","6658cfd2":"clf = Pipeline(steps=[('preprocessor', preprocessor),\n                      ('model', model)\n                     ])\n","a2e21724":"clf.fit(dataset,Y)","afb54974":"preds = clf.predict(X_test)","d535e093":"print(clf.score(dataset,Y))","041d71ee":"output=pd.DataFrame({'Id':test_id,'SalePrice':preds})\nprint(output)","6f39108d":"output = pd.DataFrame({'Id':test_id,\n                       'SalePrice': preds})\noutput.to_csv('submission.csv', index=False)","6ef4ad91":"for categorical,imputes with stragety=most freaquent","5b904062":"for numerical, imputes using strategy=mean","0547e735":"**pipeline**"}}